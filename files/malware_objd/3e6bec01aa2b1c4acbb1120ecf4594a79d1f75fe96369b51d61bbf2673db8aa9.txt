
3e6bec01aa2b1c4acbb1120ecf4594a79d1f75fe96369b51d61bbf2673db8aa9.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mov    ch,0x64
  411002:	outs   dx,BYTE PTR ds:[esi]
  411003:	nop
  411004:	jge    0x411051
  411006:	push   ebx
  411007:	add    ah,cl
  411009:	mov    eax,ds:0x35047ee2
  41100e:	sbb    al,0x30
  411010:	scas   eax,DWORD PTR es:[edi]
  411011:	ror    BYTE PTR [edx+edi*8],0x58
  411015:	shl    ebx,cl
  411017:	mov    bl,0xc7
  411019:	aaa    
  41101a:	inc    edx
  41101b:	pop    esp
  41101c:	jle    0x411084
  41101e:	adc    eax,0x2141cbe
  411023:	pop    edi
  411024:	add    edi,esi
  411026:	mov    esp,0xeb2e9e0b
  41102b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41102c:	fdivr  DWORD PTR [ebx+0x25]
  41102f:	lds    eax,FWORD PTR [esi]
  411031:	or     al,0x80
  411033:	lock mov eax,0x4d354665
  411039:	stos   BYTE PTR es:[edi],al
  41103a:	retf   0x98a9
  41103d:	mul    DWORD PTR [ebx+0x98bc9ad]
  411043:	pop    edx
  411044:	repnz mov esp,0x20fbe236
  41104a:	jg     0x4110c5
  41104c:	pop    ecx
  41104d:	xchg   ecx,eax
  41104e:	ins    BYTE PTR es:[edi],dx
  41104f:	xchg   ebp,eax
  411050:	mov    bl,0x3c
  411052:	mov    ch,0xd3
  411054:	and    eax,0x4228b5b5
  41105a:	inc    BYTE PTR [esi+0x66]
  41105d:	mov    ecx,0xe8e185a6
  411062:	mov    edi,edx
  411064:	xchg   ecx,eax
  411065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411066:	ret    
  411067:	adc    ecx,edi
  411069:	outs   dx,DWORD PTR ds:[esi]
  41106a:	xor    al,0xaf
  41106c:	sar    DWORD PTR [edi+edx*1+0x43334030],cl
  411073:	shl    ah,0x56
  411076:	cmp    ah,bh
  411078:	jmp    0x411088
  41107a:	xchg   ebx,eax
  41107b:	xchg   DWORD PTR [ebx+0x8],ecx
  41107e:	jg     0x4110f9
  411080:	bound  eax,QWORD PTR [eax]
  411082:	cdq    
  411083:	retf   
  411084:	mov    eax,DWORD PTR [ebp+0x56a095bd]
  41108a:	test   al,0xdf
  41108c:	jno    0x41101b
  41108e:	push   ebp
  41108f:	adc    BYTE PTR [edx],0x4a
  411092:	hlt    
  411093:	ror    ah,cl
  411095:	inc    ebx
  411096:	dec    eax
  411097:	and    BYTE PTR [ebx],ah
  411099:	cmp    eax,0xeee3aa8d
  41109e:	out    0x37,eax
  4110a0:	push   ds
  4110a1:	dec    ebx
  4110a2:	dec    edi
  4110a3:	cdq    
  4110a4:	ss aas 
  4110a6:	dec    eax
  4110a7:	pushf  
  4110a8:	addr16 leave 
  4110aa:	mov    ds:0x8a4b650,eax
  4110af:	and    eax,esp
  4110b1:	dec    ebp
  4110b2:	gs (bad) 
  4110b4:	xlat   BYTE PTR ds:[ebx]
  4110b5:	aaa    
  4110b6:	imul   eax,DWORD PTR [edx+ecx*8-0x15],0xac2a84a7
  4110be:	push   ecx
  4110bf:	ret    
  4110c0:	push   ecx
  4110c1:	sub    dl,cl
  4110c3:	daa    
  4110c4:	lods   eax,DWORD PTR ds:[esi]
  4110c5:	or     BYTE PTR [eax-0x7],0x21
  4110c9:	inc    eax
  4110ca:	not    DWORD PTR ds:0xa18adf05
  4110d0:	mov    WORD PTR [esi+0x42],ds
  4110d3:	xchg   edx,eax
  4110d4:	cmp    bh,bl
  4110d6:	lds    eax,FWORD PTR [ebx+0x71]
  4110d9:	int3   
  4110da:	out    dx,eax
  4110db:	jle    0x411071
  4110dd:	fcmovu st,st(6)
  4110df:	(bad)  
  4110e0:	pushf  
  4110e1:	cli    
  4110e2:	mov    dl,0x6a
  4110e4:	aad    0x1c
  4110e6:	sub    eax,0x65f3f04b
  4110eb:	(bad)  
  4110ec:	js     0x4110ea
  4110ee:	pop    eax
  4110ef:	pop    edx
  4110f0:	das    
  4110f1:	or     ebp,ebp
  4110f3:	sbb    bl,BYTE PTR [esi-0x46]
  4110f6:	repnz inc ebp
  4110f8:	mov    bl,0xc1
  4110fa:	mov    cl,BYTE PTR [esi]
  4110fc:	loopne 0x411132
  4110fe:	jne    0x411128
  411100:	cwde   
  411101:	mov    eax,0x118bea1e
  411106:	fdivr  DWORD PTR [ebx+0x14]
  411109:	or     eax,0x353dcc57
  41110e:	xor    BYTE PTR [ebx+0x5d],bh
  411111:	mov    cl,0xfc
  411113:	or     al,bl
  411115:	imul   DWORD PTR ds:0x5a7817dc
  41111b:	inc    ebp
  41111c:	add    al,0x92
  41111e:	in     al,0x63
  411120:	clc    
  411121:	cs adc eax,0xbdd5d6ae
  411127:	loope  0x4110ec
  411129:	mov    cs,WORD PTR [ebp+eax*4-0x79da1ae9]
  411130:	out    dx,al
  411131:	mov    bl,0xed
  411133:	and    al,BYTE PTR [esi+0x343aa402]
  411139:	in     eax,0x8a
  41113b:	(bad)  
  41113c:	lods   al,BYTE PTR ds:[esi]
  41113d:	ja     0x4111b4
  41113f:	aam    0x38
  411141:	xor    BYTE PTR [ecx],ah
  411143:	push   ss
  411144:	sub    DWORD PTR [esi-0x4359a988],ecx
  41114a:	dec    ecx
  41114b:	sbb    dh,BYTE PTR [esi+0xc]
  41114e:	pop    ecx
  41114f:	xchg   esi,eax
  411150:	cmp    dh,dh
  411152:	imul   ebx,esi,0xffffffc1
  411155:	add    eax,0x9acf6fe4
  41115a:	aam    0xa7
  41115c:	sub    ecx,DWORD PTR [eax-0x49ec2f38]
  411162:	dec    eax
  411163:	and    BYTE PTR [ebx+0x18],bh
  411166:	sahf   
  411167:	push   ss
  411168:	and    BYTE PTR [edx],dl
  41116a:	aad    0x33
  41116c:	inc    eax
  41116d:	sbb    bh,bl
  41116f:	push   cs
  411170:	jecxz  0x41111e
  411172:	pop    ebp
  411173:	and    DWORD PTR [edx+0xe769cae],eax
  411179:	jmp    0x6afa7a31
  41117e:	data16 rcl BYTE PTR [eax-0x4b5718eb],cl
  411185:	xor    DWORD PTR [edi-0x5049e5e9],0x5eb555ad
  41118f:	dec    edi
  411190:	(bad)  
  411193:	xchg   edi,eax
  411194:	add    esi,DWORD PTR [edx+0x5c2bb50f]
  41119a:	ins    DWORD PTR es:[edi],dx
  41119b:	mov    al,ds:0xf5cacc13
  4111a0:	(bad)  [ebx+ebx*2+0x5e8635c3]
  4111a7:	out    0x5e,eax
  4111a9:	popa   
  4111aa:	cs jno 0x41117f
  4111ad:	xchg   edx,eax
  4111ae:	hlt    
  4111af:	inc    esp
  4111b0:	add    eax,DWORD PTR [edi+edi*2]
  4111b3:	cmp    DWORD PTR [edi-0x62a93701],ebp
  4111b9:	arpl   WORD PTR [edi-0x78],dx
  4111bc:	ins    BYTE PTR es:[edi],dx
  4111bd:	jl     0x411204
  4111bf:	xchg   ebp,eax
  4111c0:	pop    ebp
  4111c1:	enter  0x5dc2,0xb5
  4111c5:	fild   WORD PTR [edi-0x17]
  4111c8:	pushf  
  4111c9:	and    ebx,DWORD PTR [ebx]
  4111cb:	cmp    BYTE PTR [eax-0x2229a726],ch
  4111d1:	and    cl,BYTE PTR [esi+0x8]
  4111d4:	mov    dl,0x58
  4111d6:	ins    DWORD PTR es:[edi],dx
  4111d7:	cmp    BYTE PTR [ebp-0x5f],ah
  4111da:	mov    esi,0x1e336dff
  4111df:	addr16 ret 
  4111e1:	inc    ebp
  4111e2:	push   edx
  4111e3:	out    0x74,al
  4111e5:	mov    edi,esp
  4111e7:	div    DWORD PTR [edi+0x5d0d249]
  4111ed:	jecxz  0x41126c
  4111ef:	mov    fs,WORD PTR [ecx-0x72d04169]
  4111f5:	into   
  4111f6:	adc    bh,BYTE PTR [ebx+0x19]
  4111f9:	jmp    0xb58d:0xb168027a
  411200:	retf   
  411201:	(bad)
  411205:	scas   al,BYTE PTR es:[edi]
  411206:	inc    edi
  411207:	ret    0xb6d
  41120a:	fs enter 0x5d5d,0x6f
  41120f:	pop    edi
  411210:	dec    ebp
  411211:	inc    eax
  411212:	lds    ebp,FWORD PTR [ecx]
  411214:	aaa    
  411215:	mov    eax,ds:0xf069c3b7
  41121a:	dec    esp
  41121b:	jg     0x4111c5
  41121d:	and    eax,0x14664e9e
  411222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411223:	retf   
  411224:	fwait
  411225:	nop
  411226:	sub    eax,0x62a4cf0a
  41122b:	cmp    eax,0x1d1fa558
  411230:	mov    al,BYTE PTR [edi]
  411232:	mul    BYTE PTR [esi+0x1f]
  411235:	xlat   BYTE PTR ds:[ebx]
  411236:	jecxz  0x411294
  411238:	mov    DWORD PTR [edx],esp
  41123a:	adc    al,BYTE PTR [esi+ebx*8+0x14ec03d1]
  411241:	and    al,0x95
  411243:	cmp    ah,BYTE PTR ds:0xd87057ec
  411249:	push   0xffffffcc
  41124b:	mov    al,ds:0xa7836e59
  411250:	test   eax,0x92e6bbae
  411255:	cmp    al,0x62
  411257:	cld    
  411258:	dec    edx
  411259:	clc    
  41125a:	or     al,0x34
  41125c:	xor    BYTE PTR [eax],al
  41125e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41125f:	pop    ds
  411260:	push   esp
  411261:	loopne 0x411209
  411263:	cli    
  411264:	inc    ebx
  411265:	imul   esp,DWORD PTR fs:0xe1f6b9de,0x44eb99de
  411270:	enter  0xa8ce,0xc5
  411274:	and    BYTE PTR [edx],ch
  411276:	clc    
  411277:	cwde   
  411278:	test   esi,ebx
  41127a:	push   0x40
  41127c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41127d:	push   cs
  41127e:	imul   edx,DWORD PTR [ebp+0x4f],0x17596758
  411285:	dec    esi
  411286:	not    BYTE PTR [ecx]
  411288:	fisttp QWORD PTR [edi]
  41128a:	fiadd  WORD PTR [ebp+ebp*4-0x2c]
  41128e:	fs (bad) 
  411290:	sti    
  411291:	mov    ds:0x7f4d223d,al
  411296:	cwde   
  411297:	(bad)  
  411298:	fidivr WORD PTR [eax]
  41129a:	popf   
  41129b:	or     eax,edx
  41129d:	dec    esi
  41129e:	pop    esp
  41129f:	call   0x3277:0x5af2e51
  4112a6:	shl    BYTE PTR [esi+0x43fabd9a],1
  4112ac:	aas    
  4112ad:	imul   ebx,DWORD PTR [edx+0x30],0xb0e9745
  4112b4:	dec    esi
  4112b5:	frstor [edi+eax*1+0x35]
  4112b9:	xor    BYTE PTR [ecx-0x4b51762b],al
  4112bf:	leave  
  4112c0:	inc    esp
  4112c1:	sar    esp,cl
  4112c3:	mov    eax,0xc9fc3385
  4112c8:	jae    0x4112e1
  4112ca:	in     eax,dx
  4112cb:	adc    DWORD PTR [esi],0xfffffff7
  4112ce:	pop    ds
  4112cf:	wrmsr  
  4112d1:	js     0x4112c3
  4112d3:	sbb    eax,0xfdeb21f4
  4112d8:	data16 es jp 0x41131f
  4112dc:	xor    al,0x34
  4112de:	je     0x411294
  4112e0:	aad    0x6
  4112e2:	mov    dl,0xa1
  4112e4:	imul   esi,DWORD PTR [ecx+0x4d7d6f76],0xffffffb2
  4112eb:	mov    ss,WORD PTR [eax-0x69]
  4112ee:	or     al,0x53
  4112f0:	dec    eax
  4112f1:	xchg   edi,eax
  4112f2:	mov    ds:0x13002bcd,eax
  4112f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112f8:	and    dh,BYTE PTR [ebx+0x2a]
  4112fb:	or     al,0xe8
  4112fd:	or     bl,BYTE PTR [ebp+0x6db4afdb]
  411303:	inc    ebp
  411304:	add    DWORD PTR [edi-0x29],edx
  411307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411308:	nop
  411309:	and    al,0xa0
  41130b:	add    al,0xae
  41130d:	jge    0x41136f
  41130f:	loop   0x411322
  411311:	loope  0x4112a6
  411313:	ret    0xe7ab
  411316:	jae    0x411302
  411318:	cmp    dl,bh
  41131a:	pop    ss
  41131b:	int    0xd6
  41131d:	push   0x3e633a63
  411322:	(bad)  
  411323:	into   
  411324:	data16 aaa 
  411326:	mov    bh,0xd4
  411328:	add    al,BYTE PTR [ebp+0x65]
  41132b:	fmul   DWORD PTR [ebp-0x68]
  41132e:	leave  
  41132f:	mov    ecx,0x16c942b6
  411334:	jecxz  0x4112db
  411336:	sub    bl,BYTE PTR [esi-0xe138d1c]
  41133c:	addr16 or al,0xaa
  41133f:	out    dx,eax
  411340:	sub    eax,0xf5e6a87f
  411345:	jno    0x41133e
  411347:	xchg   ebp,eax
  411348:	jg     0x4112e4
  41134a:	aam    0x94
  41134c:	add    al,0x5b
  41134e:	mov    esp,0xc1e230f1
  411353:	xchg   ebx,eax
  411354:	xchg   edi,eax
  411355:	mov    edx,DWORD PTR [edx]
  411357:	stos   BYTE PTR es:[edi],al
  411358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411359:	push   ss
  41135a:	arpl   WORD PTR [esi],sp
  41135c:	jmp    0x4113af
  41135e:	adc    al,0xad
  411360:	daa    
  411361:	add    ch,BYTE PTR [esi]
  411363:	aaa    
  411364:	push   es
  411365:	pop    ecx
  411366:	push   ebx
  411367:	pop    esi
  411368:	mov    al,cs:0x997e88ab
  41136e:	outs   dx,DWORD PTR ds:[esi]
  41136f:	bound  ecx,QWORD PTR [edx+edi*1]
  411372:	loope  0x4113ea
  411374:	xchg   BYTE PTR [edx+0x6a],ah
  411377:	hlt    
  411378:	bound  ecx,QWORD PTR [ebp-0x877b0ed]
  41137e:	adc    al,0x67
  411380:	scas   al,BYTE PTR es:[edi]
  411381:	xchg   BYTE PTR [ebx+0x606e19f0],ah
  411387:	add    al,0xff
  411389:	and    BYTE PTR [eax+0x2d],al
  41138c:	rcl    DWORD PTR [ecx-0x35b9c9c1],cl
  411392:	pushf  
  411393:	outs   dx,BYTE PTR ds:[esi]
  411394:	adc    edi,0xffffffda
  411397:	xchg   dh,ah
  411399:	iret   
  41139a:	stos   BYTE PTR es:[edi],al
  41139b:	loopne 0x41134e
  41139d:	dec    edx
  41139e:	nop
  41139f:	inc    ebx
  4113a0:	test   DWORD PTR [eax],edi
  4113a2:	enter  0x487a,0x52
  4113a6:	rcr    DWORD PTR [ebx+esi*8-0x45],cl
  4113aa:	mov    cl,0x13
  4113ac:	pop    ebx
  4113ad:	mov    ebx,0xbea500da
  4113b2:	cmp    edi,esp
  4113b4:	mov    WORD PTR [edi],?
  4113b6:	scas   al,BYTE PTR es:[edi]
  4113b7:	stc    
  4113b8:	mov    dl,0xcb
  4113ba:	shl    BYTE PTR [edx+0x3e5e0c5b],1
  4113c0:	pop    esi
  4113c1:	adc    bh,BYTE PTR [esi]
  4113c3:	pop    edx
  4113c4:	pop    ebx
  4113c5:	adc    al,0xec
  4113c7:	rcl    DWORD PTR [edx+edx*8],1
  4113ca:	shl    eax,1
  4113cc:	cmp    eax,0x4a11f214
  4113d1:	gs xchg esi,eax
  4113d3:	jns    0x41138a
  4113d5:	adc    eax,ecx
  4113d7:	jnp    0x41140b
  4113d9:	fstp   QWORD PTR [ecx+0x5c22d50d]
  4113df:	sar    BYTE PTR [eax+0x6b],0xd5
  4113e3:	jae    0x4113bc
  4113e5:	xchg   esp,eax
  4113e6:	es stos BYTE PTR es:[edi],al
  4113e8:	in     eax,dx
  4113e9:	std    
  4113ea:	dec    esi
  4113eb:	scas   eax,DWORD PTR es:[edi]
  4113ec:	(bad)  
  4113ee:	push   edx
  4113ef:	sub    BYTE PTR [eax-0x33],0xb2
  4113f3:	clc    
  4113f4:	xchg   DWORD PTR [eax],esi
  4113f6:	sub    al,0x8b
  4113f8:	fst    QWORD PTR [ebp-0x23]
  4113fb:	dec    eax
  4113fc:	ins    BYTE PTR es:[edi],dx
  4113fd:	maskmovq mm3,(bad)
  4113fe:	neg    DWORD PTR [ebx+0x25f2c164]
  411404:	xchg   esp,eax
  411405:	ret    0xdf95
  411408:	add    cl,dh
  41140a:	call   0x3879631d
  41140f:	jg     0x4113a9
  411411:	popa   
  411412:	adc    DWORD PTR [ecx+0x42],0xffffff80
  411416:	aas    
  411417:	xchg   esp,eax
  411418:	ror    BYTE PTR [esi+0x9],cl
  41141b:	or     DWORD PTR [ebp-0x23],eax
  41141e:	dec    esp
  41141f:	stc    
  411420:	cli    
  411421:	or     BYTE PTR [eax],ah
  411423:	mov    bl,0x51
  411425:	cld    
  411426:	jo     0x411490
  411428:	adc    al,0xab
  41142a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41142b:	test   cl,dl
  41142d:	gs leave 
  41142f:	ins    BYTE PTR es:[edi],dx
  411430:	test   eax,0x14e2e2f7
  411435:	sar    dh,0x9c
  411438:	mov    ch,0xda
  41143a:	nop
  41143b:	xchg   ecx,eax
  41143c:	sub    eax,0xd607c192
  411441:	lods   al,BYTE PTR ds:[esi]
  411442:	add    DWORD PTR [esi+0x5c844eff],edi
  411448:	xor    DWORD PTR ds:0xa10ec1cb,0x38b2049b
  411452:	nop
  411453:	stos   BYTE PTR es:[edi],al
  411454:	mov    DWORD PTR [ebx-0x6c],esi
  411457:	adc    edi,DWORD PTR [ebx+ebx*1]
  41145a:	mov    ds:0x147ce0c3,eax
  41145f:	dec    esp
  411460:	dec    esi
  411461:	and    al,0xcc
  411463:	and    al,0xad
  411465:	and    al,0xc6
  411467:	dec    ebx
  411468:	mov    eax,DWORD PTR [eax-0x69]
  41146b:	aas    
  41146c:	loop   0x41144d
  41146e:	dec    esi
  41146f:	js     0x411420
  411471:	ins    BYTE PTR es:[edi],dx
  411472:	pusha  
  411473:	test   BYTE PTR [ecx],bl
  411475:	or     eax,0x1c70c066
  41147a:	repnz or eax,0xe88e0d28
  411480:	pop    es
  411481:	push   ebx
  411482:	pop    edi
  411483:	outs   dx,BYTE PTR ds:[esi]
  411484:	add    BYTE PTR [edi],dh
  411486:	mov    esi,0x48ba54e5
  41148b:	jno    0x411465
  41148d:	das    
  41148e:	call   0x75d7:0xe5ca08bd
  411495:	or     bl,ah
  411497:	jae    0x4114d0
  411499:	retf   0x8edf
  41149c:	pushf  
  41149d:	outs   dx,DWORD PTR ds:[esi]
  41149e:	dec    ebx
  41149f:	iret   
  4114a0:	and    BYTE PTR [ebp-0x3c166ed7],0x38
  4114a7:	sbb    BYTE PTR [edx],bh
  4114a9:	mov    ebp,0x8d67528e
  4114ae:	dec    edx
  4114af:	mov    ebx,?
  4114b1:	pop    es
  4114b2:	dec    ebx
  4114b3:	add    eax,DWORD PTR ds:0x3c8affa3
  4114b9:	ds pushf 
  4114bb:	fs stc 
  4114bd:	sar    DWORD PTR [esi-0x1f],1
  4114c0:	pop    ebx
  4114c1:	repz aam 0x73
  4114c4:	jl     0x41153e
  4114c6:	mov    eax,0xd30c4799
  4114cb:	lods   eax,DWORD PTR ds:[esi]
  4114cc:	aas    
  4114cd:	enter  0x3660,0xc
  4114d1:	imul   eax,esi,0xffffffe1
  4114d4:	cdq    
  4114d5:	imul   esi,DWORD PTR [edi+0x417cfeea],0xffffffaa
  4114dc:	jnp    0x41150d
  4114de:	adc    bl,dl
  4114e0:	mov    esp,0xc6938a5c
  4114e5:	bound  esp,QWORD PTR [ebx-0x59]
  4114e8:	mov    edi,0x1da8c9fa
  4114ed:	inc    ebp
  4114ee:	adc    al,0xa4
  4114f0:	sub    eax,0x5a36506
  4114f5:	arpl   WORD PTR [edx-0x2c77d469],di
  4114fb:	(bad)  
  4114fc:	aad    0x54
  4114fe:	jmp    0x36b7754
  411503:	jge    0x4114fb
  411505:	sar    DWORD PTR [edx],cl
  411507:	mov    esi,0xb1d85ab6
  41150c:	xor    eax,0x19cf9a76
  411511:	ror    BYTE PTR [ebx],1
  411513:	dec    esi
  411514:	xchg   esp,eax
  411515:	jno    0x4114e0
  411517:	and    DWORD PTR [esp+edi*1-0x3b],edx
  41151b:	adc    BYTE PTR [ebp-0x50],dh
  41151e:	mov    eax,ds:0xb4116a93
  411523:	pop    ds
  411524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411525:	sub    al,0x32
  411527:	jecxz  0x4114d0
  411529:	mov    dh,0x78
  41152b:	pop    esi
  41152c:	ss (bad) 
  41152e:	bt     DWORD PTR [ebp-0x3561e594],esi
  411535:	das    
  411536:	jmp    0x41154b
  411538:	shl    DWORD PTR ds:0x7baa039a,0xe1
  41153f:	or     al,ch
  411541:	inc    ebp
  411542:	hlt    
  411543:	fstp   QWORD PTR [eax+0x9]
  411547:	lods   al,BYTE PTR ds:[esi]
  411548:	cmc    
  411549:	into   
  41154a:	mov    ecx,0x5a515f5f
  41154f:	mov    dh,ah
  411551:	and    esp,DWORD PTR [edi-0x14]
  411554:	aam    0xd0
  411556:	mov    BYTE PTR [esi+0x2acf25e5],ch
  41155c:	clc    
  41155d:	pusha  
  41155e:	jl     0x4114ec
  411560:	and    ah,BYTE PTR [edi+ebx*1+0x3b]
  411564:	aad    0xd1
  411566:	lea    ebx,[edx+eiz*2]
  411569:	outs   dx,DWORD PTR ds:[esi]
  41156a:	xchg   ecx,eax
  41156b:	inc    ecx
  41156c:	add    DWORD PTR [esi+0x62],edi
  41156f:	pop    es
  411570:	cwde   
  411571:	js     0x41153c
  411573:	fsubr  DWORD PTR es:[edx-0xe82bf8e]
  41157a:	push   0xe93b44e2
  41157f:	dec    edi
  411580:	push   edx
  411581:	test   al,0x93
  411583:	lock xchg edx,eax
  411585:	cmp    ah,cl
  411587:	xor    al,0xc1
  411589:	ss (bad) 
  41158b:	cmp    edx,eax
  41158d:	cmp    eax,DWORD PTR ds:0xb8be786c
  411593:	lods   eax,DWORD PTR ss:[esi]
  411595:	std    
  411596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411597:	and    DWORD PTR ds:0xf9953a64,edx
  41159d:	mov    dl,0x90
  41159f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a0:	call   0x37af:0x9bcfbc5f
  4115a7:	and    al,0x56
  4115a9:	ficom  DWORD PTR [ebx-0x1a]
  4115ac:	int    0x35
  4115ae:	jl     0x41153c
  4115b0:	sbb    BYTE PTR [ebx-0x26b74b8f],cl
  4115b6:	cmp    BYTE PTR [edx],ah
  4115b8:	stos   DWORD PTR es:[edi],eax
  4115b9:	cli    
  4115ba:	outs   dx,DWORD PTR ds:[esi]
  4115bb:	loopne 0x411555
  4115bd:	push   esp
  4115be:	es push ebp
  4115c0:	adc    cl,BYTE PTR [edx]
  4115c2:	jbe    0x4115b2
  4115c4:	push   ebp
  4115c5:	scas   al,BYTE PTR es:[edi]
  4115c6:	int    0xd4
  4115c8:	push   eax
  4115c9:	xchg   ecx,eax
  4115ca:	mov    al,ds:0xd8fa7987
  4115cf:	std    
  4115d0:	adc    eax,0xebc2562d
  4115d5:	xchg   esi,eax
  4115d6:	jl     0x411605
  4115d8:	mov    edx,0xe26790eb
  4115dd:	xchg   edx,eax
  4115de:	sub    BYTE PTR [eax],ah
  4115e0:	retf   0x5a1a
  4115e3:	mov    ch,0x35
  4115e5:	xchg   ecx,eax
  4115e6:	imul   esi,DWORD PTR [ecx+ebp*4-0x10],0xffffffb5
  4115eb:	jecxz  0x4115c7
  4115ed:	retf   
  4115ee:	out    dx,al
  4115ef:	and    al,0x6f
  4115f1:	mov    al,BYTE PTR [ebx-0x53d10470]
  4115f7:	push   eax
  4115f8:	dec    ecx
  4115f9:	mov    esp,0x81a94c0c
  4115fe:	out    0xc6,al
  411600:	jl     0x4115b9
  411602:	cmp    BYTE PTR [ebp+0x24f9ee31],cl
  411608:	dec    edx
  411609:	and    BYTE PTR [esi-0x58],cl
  41160c:	mov    esi,0x4893527e
  411611:	repnz test al,0x33
  411614:	fwait
  411615:	mov    ecx,0x1cba2e48
  41161a:	mov    dl,0x57
  41161c:	scas   eax,DWORD PTR es:[edi]
  41161d:	repz retf 
  41161f:	rcr    ebx,cl
  411621:	fnstsw WORD PTR [edi-0x30362bdc]
  411627:	and    al,0x43
  411629:	(bad)  
  41162a:	stc    
  41162b:	ss jl  0x4115c5
  41162e:	movlps QWORD PTR [edx-0x26777e41],xmm3
  411635:	xor    BYTE PTR [esp+edi*1],ch
  411638:	sub    ebx,DWORD PTR [eax+0x12]
  41163b:	pushf  
  41163c:	sbb    eax,0xacf0ded5
  411641:	outs   dx,DWORD PTR ds:[esi]
  411642:	jmp    FWORD PTR [esp+edi*2]
  411645:	mov    edi,0x833d122b
  41164a:	adc    ah,BYTE PTR [edx]
  41164c:	mov    esp,0x465710b2
  411651:	jl     0x411676
  411653:	push   es
  411654:	add    esi,ebx
  411656:	jecxz  0x41161f
  411658:	sar    BYTE PTR [edi-0x772e4774],1
  41165e:	sub    al,0x9d
  411660:	aam    0x93
  411662:	data16 retfw 0xa965
  411667:	pusha  
  411668:	call   0x93e5:0x18295479
  41166f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411670:	xchg   edi,eax
  411671:	or     eax,0x3fbb63ca
  411676:	or     al,0x24
  411678:	xor    cl,BYTE PTR [edi+0x7d]
  41167b:	xor    BYTE PTR [esi+0x1213a0a6],cl
  411681:	stc    
  411682:	ja     0x41164d
  411684:	(bad)  
  411685:	dec    ebx
  411686:	sbb    DWORD PTR [esi],eax
  411688:	xchg   esi,eax
  411689:	outs   dx,BYTE PTR ds:[esi]
  41168a:	inc    edx
  41168b:	cli    
  41168c:	fimul  DWORD PTR [eax+eiz*2-0x1b]
  411690:	lahf   
  411691:	cmp    ebx,DWORD PTR [ebp+ebp*4+0x6110226d]
  411698:	shl    BYTE PTR [ecx+0x2f5e9e0a],0x6d
  41169f:	int    0x7d
  4116a1:	jl     0x4116d8
  4116a3:	retf   0xc380
  4116a6:	pop    ss
  4116a7:	adc    esp,esp
  4116a9:	icebp  
  4116aa:	pop    eax
  4116ab:	cmp    DWORD PTR [eax],esp
  4116ad:	cwde   
  4116ae:	mov    ecx,0xb198f0b7
  4116b3:	ds mov ecx,ss
  4116b6:	aaa    
  4116b7:	sub    DWORD PTR [edi],edx
  4116b9:	or     al,0xe0
  4116bb:	dec    edx
  4116bc:	(bad)  
  4116be:	or     al,0xb1
  4116c0:	mov    esi,0x6cd58a58
  4116c5:	(bad)  
  4116c6:	cld    
  4116c7:	sub    al,0xaf
  4116c9:	callw  0x118d
  4116cd:	lods   al,BYTE PTR ds:[esi]
  4116ce:	out    dx,al
  4116cf:	stc    
  4116d0:	dec    esi
  4116d1:	lods   eax,DWORD PTR ds:[esi]
  4116d2:	sbb    DWORD PTR [ebx-0x3670e7f1],esi
  4116d8:	ror    DWORD PTR [edi+0x2bc89c0d],cl
  4116de:	cld    
  4116df:	test   edx,ecx
  4116e1:	jmp    FWORD PTR [esi]
  4116e3:	dec    esi
  4116e4:	sub    BYTE PTR [edi-0x70],ah
  4116e7:	sbb    eax,0x193b8e4c
  4116ec:	xchg   dx,ax
  4116ee:	ds cld 
  4116f0:	mov    bh,BYTE PTR [ecx]
  4116f2:	inc    edi
  4116f3:	out    0x6f,al
  4116f5:	add    BYTE PTR [ebx+esi*1-0x5200498],ch
  4116fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116fd:	sbb    DWORD PTR [esi],esp
  4116ff:	in     eax,0xf3
  411701:	sbb    DWORD PTR [eax+edi*1-0x72e31671],eax
  411708:	int    0x2b
  41170a:	mov    edi,0x788d4941
  41170f:	aas    
  411710:	add    edi,ebx
  411712:	ins    BYTE PTR es:[edi],dx
  411713:	or     dl,BYTE PTR [esi+ecx*2]
  411716:	loop   0x41177c
  411718:	aas    
  411719:	jl     0x411762
  41171b:	in     eax,dx
  41171c:	int    0xe9
  41171e:	retf   
  41171f:	sub    DWORD PTR [esi],0x6f
  411722:	xchg   esi,eax
  411723:	ficom  WORD PTR ds:0x803c3596
  411729:	lock stos BYTE PTR es:[edi],al
  41172b:	je     0x4117a2
  41172d:	inc    ebx
  41172e:	mov    al,BYTE PTR [eax-0x4432220d]
  411734:	stos   DWORD PTR es:[edi],eax
  411735:	mov    ecx,0x2720bdc7
  41173a:	in     al,0xe2
  41173c:	je     0x4117a9
  41173e:	inc    eax
  41173f:	xor    BYTE PTR [eax-0x4a],0xa5
  411743:	xchg   esp,eax
  411744:	psraw  mm3,QWORD PTR [edi-0x4e]
  411748:	or     BYTE PTR [ebp-0x2d9ed3ce],dl
  41174e:	pop    ds
  41174f:	push   ebp
  411750:	inc    ebx
  411751:	mov    al,0x5d
  411753:	jge    0x411730
  411755:	mov    ah,0x4a
  411757:	mov    cl,0x9
  411759:	out    dx,eax
  41175a:	xchg   edx,eax
  41175b:	arpl   WORD PTR [edx],dx
  41175d:	lods   eax,DWORD PTR ds:[esi]
  41175e:	imul   BYTE PTR [ecx+0x46]
  411761:	aam    0x8a
  411763:	(bad)  
  411764:	push   esp
  411765:	cld    
  411766:	aas    
  411767:	inc    ebp
  411768:	xchg   edx,eax
  411769:	xchg   DWORD PTR [edi],ebp
  41176b:	bound  eax,QWORD PTR [eax-0x3e]
  41176e:	ins    DWORD PTR es:[edi],dx
  41176f:	fstp   QWORD PTR [eax+0x6b0d5a74]
  411775:	loopne 0x41175a
  411777:	push   ebp
  411778:	shr    BYTE PTR [ebx+0xb65ee16],0x8f
  41177f:	adc    al,0xfe
  411781:	loope  0x4117b8
  411783:	arpl   sp,di
  411785:	out    0xd7,al
  411787:	jne    0x411711
  411789:	xchg   esi,eax
  41178a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41178b:	lods   al,BYTE PTR es:[esi]
  41178d:	inc    eax
  41178e:	and    BYTE PTR [edi],0x74
  411791:	xchg   esp,eax
  411792:	retf   
  411793:	jne    0x411777
  411795:	mov    esp,0x955468c8
  41179a:	cli    
  41179b:	xlat   BYTE PTR ds:[ebx]
  41179c:	mov    ?,WORD PTR [eax+0x3b293978]
  4117a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a3:	test   BYTE PTR [ebp-0x85c628d],dh
  4117a9:	loop   0x411744
  4117ab:	imul   edi,DWORD PTR [eax-0x7aa028b4],0x70
  4117b2:	dec    esi
  4117b3:	js     0x411763
  4117b5:	test   al,0xbc
  4117b7:	sbb    eax,0x692ed20c
  4117bc:	jae    0x411764
  4117be:	mov    edi,0x30af4cca
  4117c3:	and    BYTE PTR [ebp+0x38],dh
  4117c6:	and    eax,0x26815372
  4117cb:	push   esi
  4117cc:	mov    fs,ebx
  4117ce:	mov    al,ds:0xa70b667
  4117d3:	jae    0x41181e
  4117d5:	lods   al,BYTE PTR ds:[esi]
  4117d6:	fldenv [esi]
  4117d8:	pop    eax
  4117d9:	inc    BYTE PTR [ecx+0x22]
  4117dc:	daa    
  4117dd:	mov    ah,BYTE PTR [eax+0xdecc14b]
  4117e3:	fcmovnu st,st(7)
  4117e5:	dec    edi
  4117e6:	ret    0xa114
  4117e9:	test   eax,0xcb52741d
  4117ee:	mov    ?,WORD PTR [esi+esi*8]
  4117f1:	mov    WORD PTR [ecx+ebp*1-0x9],?
  4117f5:	sub    al,0x3e
  4117f7:	mov    ch,0xa1
  4117f9:	and    edx,DWORD PTR [eax+0x53]
  4117fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117fd:	mov    edi,DWORD PTR [edx]
  4117ff:	mov    eax,DWORD PTR [ebx]
  411801:	xchg   ebp,eax
  411802:	pusha  
  411803:	pop    esi
  411804:	cmc    
  411805:	xor    ch,BYTE PTR [esi+0x2e54e251]
  41180b:	mov    edi,DWORD PTR [ecx+ecx*8]
  41180e:	inc    BYTE PTR [ecx+0x58]
  411811:	dec    esp
  411812:	in     al,dx
  411813:	pop    ebx
  411814:	xchg   edx,eax
  411815:	cmp    al,0xb4
  411817:	fcomp  DWORD PTR [ebp-0x2]
  41181a:	inc    esi
  41181b:	ffreep st(4)
  41181d:	ss (bad) 
  41181f:	fs and al,0x32
  411822:	fdivr  QWORD PTR [eax]
  411824:	scas   al,BYTE PTR es:[edi]
  411825:	pop    edx
  411826:	push   eax
  411827:	cld    
  411828:	idiv   BYTE PTR [ebx-0x19c7083b]
  41182e:	aas    
  41182f:	call   0x8498:0x878dbaa9
  411836:	jo     0x41187a
  411838:	xchg   edx,eax
  411839:	mov    eax,edx
  41183b:	sub    di,WORD PTR [eax+0x31]
  41183f:	ds in  eax,0xfd
  411842:	add    al,0xfa
  411844:	call   0xbf9f:0xf055fdc2
  41184b:	mov    ds:0x288795ce,eax
  411850:	add    al,0xc6
  411852:	cmovae edx,ecx
  411855:	jmp    0x4118d0
  411857:	and    BYTE PTR [ebp+ecx*4-0x17],dh
  41185b:	cmp    bh,bh
  41185d:	xor    al,BYTE PTR [ebx+0x26ef07e2]
  411863:	(bad)  
  411864:	inc    edx
  411865:	icebp  
  411866:	mov    bh,0xfc
  411868:	daa    
  411869:	test   al,0xf5
  41186b:	adc    DWORD PTR ds:0xfe18d92d,edi
  411871:	xor    edx,edi
  411873:	or     BYTE PTR [eax-0x72],ch
  411876:	outs   dx,DWORD PTR ds:[esi]
  411877:	mov    bh,0x64
  411879:	push   edi
  41187a:	jmp    0x6875749b
  41187f:	ins    DWORD PTR es:[edi],dx
  411880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411881:	push   0xffffffae
  411883:	and    esp,esi
  411885:	out    dx,eax
  411886:	push   edi
  411887:	sub    eax,0xb34070e1
  41188c:	push   ebp
  41188d:	dec    ebp
  41188e:	rcl    BYTE PTR [ecx+0x34],1
  411891:	call   0x103d:0x9f6cb3b3
  411898:	aad    0x5f
  41189a:	hlt    
  41189b:	sub    bl,BYTE PTR [eax-0x5ec755b2]
  4118a1:	dec    ebx
  4118a2:	xor    ecx,DWORD PTR [ecx+0x4c]
  4118a5:	es popf 
  4118a7:	xchg   ecx,eax
  4118a8:	js     0x411853
  4118aa:	sbb    DWORD PTR [edi],0xffffffa9
  4118ad:	(bad)  
  4118ae:	pop    ebp
  4118af:	mov    ebp,0x517e9a37
  4118b4:	cli    
  4118b5:	lea    ebp,[eax+0x60]
  4118b8:	dec    esp
  4118b9:	push   esi
  4118ba:	or     edx,ecx
  4118bc:	mov    ds,WORD PTR [ebp+0x53683fcb]
  4118c2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118c4:	clc    
  4118c5:	add    al,0x67
  4118c7:	mov    esp,0xb37c9fed
  4118cc:	out    0x54,eax
  4118ce:	inc    ebx
  4118cf:	add    DWORD PTR [ecx-0x7b],esp
  4118d2:	cmp    eax,DWORD PTR ds:0xec19fa4
  4118d8:	cld    
  4118d9:	shr    DWORD PTR [ebx-0x46],cl
  4118dc:	aam    0x36
  4118de:	or     ch,bl
  4118e0:	pusha  
  4118e1:	icebp  
  4118e2:	mov    edx,0xf60923f1
  4118e7:	dec    esp
  4118e8:	mov    ecx,0xc60e1011
  4118ed:	mov    ds:0xaf986b96,eax
  4118f2:	(bad)  
  4118f3:	mov    ebx,?
  4118f5:	(bad)  
  4118f6:	rcr    al,0x6e
  4118f9:	add    esi,0x68
  4118fc:	pop    eax
  4118fd:	emms   
  4118ff:	out    dx,eax
  411900:	lods   eax,DWORD PTR ds:[esi]
  411901:	mov    WORD PTR [edx],ds
  411903:	fild   QWORD PTR [ebx-0xb]
  411906:	aam    0x58
  411908:	loopne 0x4118a4
  41190a:	out    dx,eax
  41190b:	pop    edx
  41190c:	loopne 0x4118cc
  41190e:	shr    DWORD PTR [edi+esi*4+0x16],cl
  411912:	inc    edi
  411913:	(bad)  
  411914:	dec    ebp
  411915:	jmp    0x4118cd
  411917:	sub    DWORD PTR [esi+0x76],eax
  41191a:	dec    esp
  41191b:	out    dx,al
  41191c:	and    bl,BYTE PTR [eax-0x1e]
  41191f:	push   cs
  411920:	adc    edi,ebp
  411922:	or     ebp,DWORD PTR [ecx+ecx*1]
  411925:	aad    0xbe
  411927:	xchg   ebx,eax
  411928:	aam    0xd8
  41192a:	mov    ?,ebx
  41192c:	dec    esp
  41192d:	std    
  41192e:	call   0xb87a1493
  411933:	ret    0xd97c
  411936:	data16 loop 0x411901
  411939:	push   ebx
  41193a:	dec    esp
  41193b:	mov    dh,0x7
  41193d:	daa    
  41193e:	test   DWORD PTR [ecx-0x73],ebx
  411941:	adc    BYTE PTR [esi-0x6b1bb3ea],dl
  411947:	retf   0xdbe3
  41194a:	mov    esp,0x70336ab8
  41194f:	aam    0xc
  411951:	mov    ebx,0xb29f7972
  411956:	ret    0x7151
  411959:	test   ch,dl
  41195b:	dec    ebp
  41195c:	outs   dx,BYTE PTR ds:[esi]
  41195d:	mov    eax,ds:0xfd6ac13a
  411962:	mov    ds:0x52823b1c,eax
  411967:	mov    ah,0x6d
  411969:	add    DWORD PTR [ecx+ebx*8+0x287309da],ebx
  411970:	sbb    edx,DWORD PTR [edi]
  411972:	add    ebp,DWORD PTR [ecx-0x70ac50ce]
  411978:	mov    ch,0x9
  41197a:	arpl   WORD PTR [edi-0x7f],bx
  41197d:	mov    ebx,edx
  41197f:	call   0xf6c5:0x8edc941f
  411986:	(bad)  
  411987:	loop   0x411965
  411989:	imul   ebx,DWORD PTR [edi-0x37585332],0xffffffec
  411990:	cli    
  411991:	in     al,0xca
  411993:	aaa    
  411994:	cli    
  411995:	or     BYTE PTR [esi],dh
  411997:	mov    eax,ds:0x882e1a62
  41199c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41199d:	sti    
  41199e:	aad    0xd6
  4119a0:	out    dx,al
  4119a1:	cmp    BYTE PTR [ebx+0x40],dh
  4119a4:	in     al,dx
  4119a5:	ret    
  4119a6:	mov    DWORD PTR [ecx],ebx
  4119a8:	fsubr  DWORD PTR [ebp+0x1e]
  4119ab:	nop
  4119ac:	in     al,0x4d
  4119ae:	xor    esi,ebp
  4119b0:	sbb    DWORD PTR [ebx],eax
  4119b2:	mov    ds,WORD PTR [esi-0x7ff32376]
  4119b8:	mov    dl,0x23
  4119ba:	pop    eax
  4119bb:	sti    
  4119bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119bd:	stos   DWORD PTR es:[edi],eax
  4119be:	aaa    
  4119bf:	stc    
  4119c0:	ror    BYTE PTR [ebx+0x7e],0x68
  4119c4:	xlat   BYTE PTR ds:[ebx]
  4119c5:	jo     0x4119c9
  4119c7:	add    eax,0x72d213d3
  4119cc:	mov    ah,0x2b
  4119ce:	(bad)  
  4119cf:	cmp    BYTE PTR [ebx+0x4e],dh
  4119d2:	jno    0x41197a
  4119d4:	lock mov bl,0x43
  4119d7:	std    
  4119d8:	xchg   edx,eax
  4119d9:	les    edx,FWORD PTR [esi-0x48]
  4119dc:	scas   eax,DWORD PTR es:[edi]
  4119dd:	sbb    bh,BYTE PTR [ecx]
  4119df:	push   edx
  4119e0:	dec    ebp
  4119e1:	ror    DWORD PTR [ebx+0x6c],1
  4119e4:	sub    eax,DWORD PTR [edi+0x53]
  4119e7:	pushf  
  4119e8:	test   esi,0xbedabeed
  4119ee:	int3   
  4119ef:	sti    
  4119f0:	add    eax,0x16c9c7a9
  4119f5:	aas    
  4119f6:	or     ebp,esp
  4119f8:	dec    eax
  4119f9:	ins    DWORD PTR es:[edi],dx
  4119fa:	sub    al,0x57
  4119fc:	sar    BYTE PTR [esi],0x86
  4119ff:	sti    
  411a00:	icebp  
  411a01:	cmc    
  411a02:	in     eax,dx
  411a03:	int    0xb7
  411a05:	mov    dh,0x2
  411a07:	std    
  411a08:	jmp    0x8e04:0xc506dada
  411a0f:	out    dx,eax
  411a10:	cmp    DWORD PTR [ecx+eax*2-0x47],esp
  411a14:	adc    eax,0xa89d44af
  411a19:	push   cs
  411a1a:	push   ebx
  411a1b:	mov    DWORD PTR [ebx],edi
  411a1d:	fwait
  411a1e:	imul   ecx,DWORD PTR [edx-0x6a],0xa53611b
  411a25:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a28:	inc    ecx
  411a29:	mov    edx,0x13f89626
  411a2e:	sbb    BYTE PTR [ebx],dh
  411a30:	cld    
  411a31:	fstp   TBYTE PTR [ebp+0x36]
  411a34:	outs   dx,DWORD PTR ds:[esi]
  411a35:	pushf  
  411a36:	sub    DWORD PTR [edi+0x8],0xcdfc4606
  411a3d:	push   es
  411a3e:	and    esi,esi
  411a40:	test   edx,0x5ed8d762
  411a46:	outs   dx,BYTE PTR ds:[esi]
  411a47:	test   BYTE PTR [eax+edx*4+0x6b],bl
  411a4b:	rol    DWORD PTR [ebx+0x26],0xe9
  411a4f:	cmc    
  411a50:	das    
  411a51:	add    dl,ch
  411a53:	jae    0x411a2f
  411a55:	rdtsc  
  411a57:	jbe    0x4119f5
  411a59:	sti    
  411a5a:	push   edx
  411a5b:	stos   BYTE PTR es:[edi],al
  411a5c:	cmp    ebp,ebx
  411a5e:	fnstcw WORD PTR [eax-0x248cb5fe]
  411a64:	popf   
  411a65:	adc    DWORD PTR [ebx],ebp
  411a67:	mov    esi,esi
  411a69:	pop    bx
  411a6b:	(bad)  
  411a6c:	popf   
  411a6d:	(bad)  
  411a6e:	ficom  WORD PTR [edx]
  411a70:	pop    es
  411a71:	or     dh,BYTE PTR [edx-0x5cb7164a]
  411a77:	leave  
  411a78:	jge    0x411a88
  411a7a:	fild   QWORD PTR [eax]
  411a7c:	sti    
  411a7d:	dec    eax
  411a7e:	es fs push cs
  411a81:	jbe    0x411aa0
  411a83:	aad    0xd1
  411a85:	mov    ah,0x43
  411a87:	xor    eax,0x9d88ea3d
  411a8c:	and    eax,0xea65e98e
  411a91:	shl    DWORD PTR [esi+0x59],0x11
  411a95:	push   esi
  411a96:	cld    
  411a97:	sbb    ecx,DWORD PTR [eax-0x61268bc4]
  411a9d:	sbb    bl,dl
  411a9f:	xlat   BYTE PTR ds:[ebx]
  411aa0:	inc    esp
  411aa1:	add    edx,DWORD PTR [ecx+0x29]
  411aa4:	mov    edi,0xa4ced37c
  411aa9:	cmp    eax,0xca0e1115
  411aae:	add    cl,bh
  411ab0:	adc    DWORD PTR [edi+0x31],esi
  411ab3:	pop    es
  411ab4:	iret   
  411ab5:	ins    BYTE PTR es:[edi],dx
  411ab6:	fsub   st(1),st
  411ab8:	jae    0x411a9d
  411aba:	sub    BYTE PTR [edi-0xc],bh
  411abd:	mov    ebp,0x23f4166d
  411ac2:	ins    DWORD PTR es:[edi],dx
  411ac3:	jmp    0xb7b179e1
  411ac8:	mov    BYTE PTR [edi+0x1d82c701],dl
  411ace:	arpl   WORD PTR gs:0x41e5a41f,dx
  411ad5:	int    0xcf
  411ad7:	iret   
  411ad8:	xor    BYTE PTR [ecx+0x7e],bl
  411adb:	shr    BYTE PTR [edi+0x5e],cl
  411ade:	xor    bl,BYTE PTR [ebx]
  411ae0:	xor    edx,esi
  411ae2:	aaa    
  411ae3:	push   edi
  411ae4:	add    ebx,ebx
  411ae6:	jg     0x411b0e
  411ae8:	fmulp  st(7),st
  411aea:	bound  ecx,QWORD PTR [edi]
  411aec:	adc    bh,BYTE PTR [esp+eax*1+0x30a89eb9]
  411af3:	add    BYTE PTR [esi-0x55],ch
  411af6:	pop    esp
  411af7:	fsubr  DWORD PTR ds:0x24bada67
  411afd:	fdivp  st(1),st
  411aff:	mov    esi,DWORD PTR [edi+0x5c88614a]
  411b05:	retf   
  411b06:	ret    
  411b07:	cdq    
  411b08:	(bad)  
  411b09:	jb     0x411b2b
  411b0b:	in     eax,dx
  411b0c:	push   ebp
  411b0d:	sti    
  411b0e:	pop    edx
  411b0f:	push   edi
  411b10:	in     al,dx
  411b11:	jo     0x411ae0
  411b13:	rcr    BYTE PTR [esi+0x33],1
  411b16:	repz jno 0x411b06
  411b19:	adc    edi,esi
  411b1b:	iret   
  411b1c:	dec    ebp
  411b1d:	sbb    DWORD PTR [eax+edi*2],0x3666cc96
  411b24:	xchg   DWORD PTR [edi+0x39],ebx
  411b27:	sbb    cl,BYTE PTR [esi+0x17]
  411b2a:	retf   
  411b2b:	and    BYTE PTR [edx],bh
  411b2d:	cmp    ebp,edx
  411b2f:	(bad)  
  411b30:	push   edi
  411b31:	sar    edi,cl
  411b33:	xchg   ah,bl
  411b35:	push   0xc2e763c1
  411b3a:	aam    0x56
  411b3c:	mov    edx,0x7ca0e380
  411b41:	das    
  411b42:	call   0xfae1:0x2127cea3
  411b49:	adc    DWORD PTR [ebx-0x30c71fbe],esp
  411b4f:	mov    ecx,0xc9cf4b90
  411b54:	pop    eax
  411b55:	enter  0x28aa,0x4c
  411b59:	stos   BYTE PTR es:[edi],al
  411b5a:	shl    BYTE PTR [edx-0x4b],1
  411b5d:	adc    ah,bh
  411b5f:	iret   
  411b60:	sbb    ah,BYTE PTR [ebx+0x1fd94473]
  411b66:	adc    ecx,DWORD PTR gs:[ecx]
  411b69:	cmp    ebx,DWORD PTR [ebx+0x515a1079]
  411b6f:	add    esp,ecx
  411b71:	dec    esi
  411b72:	int    0x1d
  411b74:	bound  esp,QWORD PTR [eiz*1-0x552218f8]
  411b7b:	out    dx,al
  411b7c:	nop
  411b7d:	lods   eax,DWORD PTR ds:[esi]
  411b7e:	repnz cmp BYTE PTR [esi+ecx*4],cl
  411b82:	ins    DWORD PTR es:[edi],dx
  411b83:	int3   
  411b84:	dec    edi
  411b85:	xchg   ebp,eax
  411b86:	int3   
  411b87:	cmp    eax,0x36213c17
  411b8c:	ret    
  411b8d:	lock jae 0x411bce
  411b90:	sbb    BYTE PTR [esi+0x9],al
  411b93:	add    eax,0xa7a52c29
  411b98:	neg    BYTE PTR [eax+0x77]
  411b9b:	hlt    
  411b9c:	js     0x411b4e
  411b9e:	adc    al,0x8f
  411ba0:	ror    BYTE PTR [ebp+0x6662eb29],cl
  411ba6:	(bad)  
  411ba7:	lock push es
  411ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411baa:	pop    ebx
  411bab:	pop    es
  411bac:	outs   dx,BYTE PTR ds:[esi]
  411bad:	dec    esi
  411bae:	or     al,0xf1
  411bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bb1:	mov    dl,0xee
  411bb3:	jno    0x411bd9
  411bb5:	lds    eax,FWORD PTR [edx]
  411bb7:	test   DWORD PTR [edi],ebx
  411bb9:	test   edi,edi
  411bbb:	push   ss
  411bbc:	mov    DWORD PTR [ecx],ebp
  411bbe:	into   
  411bbf:	scas   al,BYTE PTR es:[edi]
  411bc0:	outs   dx,DWORD PTR ds:[esi]
  411bc1:	out    0x6a,eax
  411bc3:	ins    WORD PTR es:[edi],dx
  411bc5:	xchg   esi,eax
  411bc6:	cmp    eax,0x6b483a81
  411bcb:	call   0xc13b:0x48582d03
  411bd2:	sbb    eax,0xebab639d
  411bd7:	jp     0x411bc0
  411bd9:	xchg   ebp,edi
  411bdb:	pop    edx
  411bdc:	pop    ds
  411bdd:	or     ah,BYTE PTR [edi-0x720bf6b9]
  411be3:	cmp    dl,BYTE PTR [ebp+0x71]
  411be6:	imul   esp,DWORD PTR [esi-0x3c],0xa390ad58
  411bed:	mov    ch,0x97
  411bef:	inc    ebx
  411bf0:	setbe  ch
  411bf3:	call   0xf79b55a0
  411bf8:	and    al,0x7c
  411bfa:	dec    esi
  411bfb:	jl     0x411bad
  411bfd:	cmp    esi,edx
  411bff:	mov    esi,0xdb47fa1
  411c04:	mov    eax,ds:0x3c5b1172
  411c09:	push   edx
  411c0a:	dec    eax
  411c0b:	in     al,0xbb
  411c0d:	rcl    DWORD PTR [edx-0x40],0x31
  411c11:	jecxz  0x411c6b
  411c13:	and    DWORD PTR fs:[edx-0x72],ecx
  411c17:	icebp  
  411c18:	sti    
  411c19:	cmp    ebp,ebp
  411c1b:	jp     0x411c2b
  411c1d:	(bad)  
  411c1e:	xchg   edx,eax
  411c1f:	(bad)  
  411c21:	jns    0x411bc5
  411c23:	ins    BYTE PTR es:[edi],dx
  411c24:	rcl    DWORD PTR [ebx+0x54],0xe7
  411c28:	pop    ss
  411c29:	aad    0x35
  411c2b:	js     0x411c96
  411c2d:	push   ebx
  411c2e:	cmp    eax,0xbc7ff0c8
  411c33:	sbb    DWORD PTR [edi],ebp
  411c35:	clc    
  411c36:	cmp    BYTE PTR [ebx+0x31420733],dl
  411c3c:	call   0x28d14238
  411c41:	mov    ebp,0x6a134ee4
  411c46:	xor    ah,BYTE PTR [edx-0x20b9b4fb]
  411c4c:	test   DWORD PTR [edi-0x295f469d],edx
  411c52:	mov    eax,ds:0x32276b3b
  411c57:	xchg   edx,eax
  411c58:	jle    0x411c39
  411c5a:	inc    edi
  411c5b:	into   
  411c5c:	mov    al,ds:0x52d82258
  411c61:	fisubr WORD PTR [edx+ecx*8]
  411c64:	rcr    BYTE PTR [esp+edx*1-0x3e],cl
  411c68:	mov    ch,0x67
  411c6a:	and    cl,bh
  411c6c:	sub    dl,dl
  411c6e:	push   cs
  411c6f:	mov    bh,0x54
  411c71:	clc    
  411c72:	and    DWORD PTR ds:0xcb9345df,eax
  411c78:	std    
  411c79:	dec    ebp
  411c7a:	xor    DWORD PTR ds:0x622d2d54,ebp
  411c80:	dec    edx
  411c81:	outs   dx,DWORD PTR cs:[esi]
  411c83:	adc    DWORD PTR [esi-0x35b4505c],ebp
  411c89:	lods   eax,DWORD PTR ds:[esi]
  411c8a:	or     DWORD PTR [edi],0x10
  411c8d:	inc    ebp
  411c8e:	jge    0x411ce3
  411c90:	sbb    BYTE PTR [eax+0x7b],al
  411c93:	aam    0xcb
  411c95:	or     al,al
  411c97:	add    al,0x6f
  411c99:	cmp    al,0x53
  411c9b:	stos   BYTE PTR es:[edi],al
  411c9c:	call   0x25e5:0xff0bb3a2
  411ca3:	mov    ch,0xae
  411ca5:	idiv   BYTE PTR [edi]
  411ca7:	rol    BYTE PTR [ebx+0x60],1
  411caa:	xor    eax,0x21bef053
  411caf:	test   al,0x4
  411cb1:	xchg   edx,eax
  411cb2:	cmovg  edx,esp
  411cb5:	lds    ebx,FWORD PTR [edx+0x0]
  411cb8:	xor    DWORD PTR [ebx+ebp*1-0x36737ba5],eax
  411cbf:	mov    ?,WORD PTR [edx+0x30]
  411cc2:	xor    ebx,DWORD PTR [eax+eax*8]
  411cc5:	and    eax,0x496a78df
  411cca:	ffreep st(1)
  411ccc:	pushf  
  411ccd:	inc    esp
  411cce:	es out 0x51,eax
  411cd1:	mov    esp,0xd91f863c
  411cd6:	mov    al,ds:0xa42ce96e
  411cdb:	fild   QWORD PTR [esi-0x179c0481]
  411ce1:	pop    edi
  411ce2:	cmp    BYTE PTR [edi+eiz*8-0x65],ah
  411ce6:	adc    bh,BYTE PTR [edx]
  411ce8:	(bad)  
  411ce9:	stc    
  411cea:	xor    ch,ah
  411cec:	sbb    DWORD PTR [edx],0xfffffffc
  411cef:	ds adc al,0x17
  411cf2:	mov    ds:0x6b2baa72,al
  411cf7:	mov    bl,0xd4
  411cf9:	aaa    
  411cfa:	lods   eax,DWORD PTR ds:[esi]
  411cfb:	xor    DWORD PTR [ecx-0x127bc177],esi
  411d01:	mov    edi,0xbff0f8e0
  411d06:	pop    ebx
  411d07:	push   es
  411d08:	shl    BYTE PTR [ebx+ecx*1],0xb3
  411d0c:	sbb    dl,BYTE PTR [ebp+0x65ac3194]
  411d12:	mov    gs,WORD PTR [ecx]
  411d14:	mov    cl,0xc5
  411d16:	stc    
  411d17:	(bad)  
  411d18:	cli    
  411d19:	rol    BYTE PTR [edx+0x56],0xee
  411d1d:	sahf   
  411d1e:	sub    al,0x3a
  411d20:	inc    ebp
  411d21:	cmp    DWORD PTR [ecx-0x5c],ebx
  411d24:	push   ebx
  411d25:	inc    edi
  411d26:	mov    eax,0xdef0426d
  411d2b:	rol    cl,0x44
  411d2e:	push   edi
  411d2f:	jns    0x411d12
  411d31:	dec    eax
  411d32:	repz stc 
  411d34:	stos   BYTE PTR es:[edi],al
  411d35:	mov    ah,0xf9
  411d37:	cmp    al,BYTE PTR [edi]
  411d39:	push   ds
  411d3a:	hlt    
  411d3b:	ins    BYTE PTR es:[edi],dx
  411d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d3d:	lock (bad) 
  411d3f:	fsubp  st(5),st
  411d41:	dec    eax
  411d42:	cli    
  411d43:	mov    ebx,0x9e21cbe1
  411d48:	and    ch,0x31
  411d4b:	jge    0x411d6e
  411d4d:	xchg   ecx,eax
  411d4e:	imul   edx,ebp,0xb5e9e014
  411d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d55:	test   al,0x49
  411d57:	in     eax,0x71
  411d59:	mul    BYTE PTR [edx+0x9]
  411d5c:	loope  0x411d8c
  411d5e:	mov    edx,0xc7aff8a
  411d63:	cmp    ch,bh
  411d65:	mov    cl,0xe6
  411d67:	repz ja 0x411dd2
  411d6a:	inc    esi
  411d6b:	sub    ah,BYTE PTR [edi]
  411d6d:	jmp    0x411d37
  411d6f:	in     eax,0x7e
  411d71:	and    al,0x35
  411d73:	and    ecx,DWORD PTR [ebx]
  411d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d76:	pop    ds
  411d77:	mov    bl,0x92
  411d79:	push   ss
  411d7a:	jbe    0x411de0
  411d7c:	push   ebp
  411d7d:	push   esp
  411d7e:	lahf   
  411d7f:	mov    ds:0x299349c9,al
  411d84:	mov    cs,WORD PTR [esp+eiz*8]
  411d87:	imul   edx,DWORD PTR [edx+edi*4],0xd75aa8b4
  411d8e:	aad    0x5d
  411d90:	mov    edx,0xecf3ccad
  411d95:	dec    edx
  411d96:	ja     0x411da2
  411d98:	sub    al,0xa0
  411d9a:	aam    0x16
  411d9c:	call   0x521a8991
  411da1:	in     eax,dx
  411da2:	add    ebp,edi
  411da4:	addr16 push ecx
  411da6:	add    esi,DWORD PTR [edx-0x5b]
  411da9:	aaa    
  411daa:	add    BYTE PTR [edi-0x6715978c],ch
  411db0:	dec    esi
  411db1:	in     al,0xc
  411db3:	bound  ecx,QWORD PTR [ecx+0x7f]
  411db6:	fcom   DWORD PTR [esi]
  411db8:	or     al,0xc8
  411dba:	sbb    DWORD PTR [esi+0x771a6467],0x42a3ea89
  411dc4:	and    DWORD PTR [esi+0x6bea091],eax
  411dca:	lds    esp,FWORD PTR [edx-0x20]
  411dcd:	call   0x31b24f0
  411dd2:	mov    ah,0x9c
  411dd4:	jnp    0x411e06
  411dd6:	out    dx,al
  411dd7:	arpl   WORD PTR [eax+edi*8],si
  411dda:	mov    esi,0x697b997
  411ddf:	or     eax,0x4f1fb5ca
  411de4:	ins    DWORD PTR es:[edi],dx
  411de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de6:	dec    esp
  411de7:	in     eax,dx
  411de8:	mov    edi,0xe7ab8ba2
  411ded:	inc    ecx
  411dee:	pushf  
  411def:	(bad)  
  411df1:	inc    esi
  411df2:	xor    eax,0xb595f946
  411df7:	mov    dl,BYTE PTR [ebx]
  411df9:	mov    dh,0xef
  411dfb:	enter  0x52cf,0x35
  411dff:	mov    bl,0x96
  411e01:	dec    edi
  411e02:	jb     0x411dac
  411e04:	inc    edx
  411e05:	(bad)  
  411e06:	test   eax,0x85f1406e
  411e0b:	adc    DWORD PTR [edx],edi
  411e0d:	sub    BYTE PTR [ebp-0x1392c2f1],bl
  411e13:	clc    
  411e14:	jp     0x411dff
  411e16:	in     eax,dx
  411e17:	neg    eax
  411e19:	mov    ?,edx
  411e1b:	mov    cl,0x2c
  411e1d:	pusha  
  411e1e:	pop    eax
  411e1f:	add    eax,0x968683a
  411e24:	mov    WORD PTR [edx],ds
  411e26:	cmp    eax,0xb58ca16
  411e2b:	cmp    DWORD PTR [eax-0x73fac399],ecx
  411e31:	xchg   ebp,eax
  411e32:	and    BYTE PTR [ebp+0x5c7c36cc],ah
  411e38:	add    bh,BYTE PTR [eax+edi*4-0x5c]
  411e3c:	ins    BYTE PTR es:[edi],dx
  411e3d:	cmp    ebx,DWORD PTR [ecx-0x412beb]
  411e43:	lds    eax,FWORD PTR ds:0xe9917438
  411e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e4a:	push   esi
  411e4b:	fdiv   QWORD PTR [edx-0x52dfc804]
  411e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e52:	scas   al,BYTE PTR es:[edi]
  411e53:	add    dl,BYTE PTR [ecx+0x6e7aed1c]
  411e59:	cs adc eax,0xd9135f28
  411e5f:	int3   
  411e60:	out    0xcf,al
  411e62:	mov    ch,0x48
  411e64:	aam    0xeb
  411e66:	or     DWORD PTR [esi],0xffffffb1
  411e69:	push   ecx
  411e6a:	fild   DWORD PTR [edx]
  411e6c:	mov    cl,0x9d
  411e6e:	xchg   DWORD PTR [esi-0x35],edx
  411e71:	xor    eax,0x8a67dd1a
  411e76:	hlt    
  411e77:	inc    edi
  411e78:	adc    edi,ebp
  411e7a:	cmp    al,0xe3
  411e7c:	jae    0x411ebf
  411e7e:	jo     0x411e70
  411e80:	repnz push eax
  411e82:	xchg   edx,eax
  411e83:	mov    edi,0x65e0fb7f
  411e88:	retf   
  411e89:	div    bh
  411e8b:	fwait
  411e8c:	lds    edx,FWORD PTR fs:[ebx+0x2b47bf83]
  411e93:	ins    DWORD PTR es:[edi],dx
  411e94:	dec    ecx
  411e95:	xor    DWORD PTR [eax-0x64],0x655b8dd9
  411e9c:	jl     0x411eea
  411e9e:	cwde   
  411e9f:	test   eax,0x432fe820
  411ea4:	add    cl,ah
  411ea6:	mov    ecx,DWORD PTR [edi-0x22]
  411ea9:	inc    ebx
  411eaa:	aam    0xa1
  411eac:	retf   
  411ead:	sub    eax,0xe63e9c06
  411eb2:	test   al,0xd3
  411eb4:	xlat   BYTE PTR ds:[ebx]
  411eb5:	imul   esp,DWORD PTR [ebx],0x4e
  411eb8:	dec    ebp
  411eb9:	retf   0x8405
  411ebc:	xchg   ebp,eax
  411ebd:	ret    0x2c43
  411ec0:	push   esi
  411ec1:	bound  ebx,QWORD PTR [edi]
  411ec3:	xor    DWORD PTR [edx],ebx
  411ec5:	mov    esi,0x2c9afdf3
  411eca:	push   cs
  411ecb:	std    
  411ecc:	pop    ecx
  411ecd:	sbb    ecx,edx
  411ecf:	ret    0x77c5
  411ed2:	repz fnstsw WORD PTR [edx+0x7181f637]
  411ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eda:	cld    
  411edb:	mov    edx,0x68d6190a
  411ee0:	hlt    
  411ee1:	mov    bl,bl
  411ee3:	repnz mov dl,dh
  411ee6:	push   ebx
  411ee7:	sub    al,0x52
  411ee9:	mov    dh,BYTE PTR [edx]
  411eeb:	retf   
  411eec:	add    al,0x85
  411eee:	sub    al,0x44
  411ef0:	xchg   ebx,eax
  411ef1:	retf   
  411ef2:	sar    BYTE PTR [esi],cl
  411ef4:	test   eax,0x9229c9e1
  411ef9:	dec    eax
  411efa:	idiv   BYTE PTR [ebp+0x2c]
  411efd:	(bad)  
  411efe:	cs jecxz 0x411eb2
  411f01:	jbe    0x411f38
  411f03:	cmc    
  411f04:	xor    cl,BYTE PTR [ebx]
  411f06:	push   eax
  411f07:	test   DWORD PTR [eax+0x56],ecx
  411f0a:	xor    DWORD PTR [esi+0x4c2808f8],ecx
  411f10:	pusha  
  411f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f12:	aam    0x71
  411f14:	fdivr  st(4),st
  411f16:	in     al,0xc7
  411f18:	jge    0x411f98
  411f1a:	rol    BYTE PTR [edi],0xbe
  411f1d:	mov    ds:0xd6c29364,al
  411f22:	add    eax,0x24ba80c6
  411f27:	mov    WORD PTR [edx-0x6208d933],?
  411f2d:	fiadd  WORD PTR ds:0x5cd1feed
  411f33:	rol    BYTE PTR [ebx],1
  411f35:	or     DWORD PTR [edx+0x2e13d268],0xde9daf64
  411f3f:	pop    esi
  411f40:	cli    
  411f41:	pop    es
  411f42:	or     BYTE PTR [eax+edi*2-0x5e84de92],bh
  411f49:	fnstsw WORD PTR [esi]
  411f4b:	push   0x21a5da45
  411f50:	sbb    al,0x5c
  411f52:	pop    edi
  411f53:	jo     0x411fca
  411f55:	test   DWORD PTR [ebx+ebp*2+0x1505b569],esp
  411f5c:	xchg   esp,eax
  411f5d:	push   esp
  411f5e:	hlt    
  411f5f:	mov    edx,0xc5bfcd1a
  411f64:	mov    ah,0xab
  411f66:	add    eax,0xf43d80df
  411f6b:	jno    0x411f39
  411f6d:	int    0xb6
  411f6f:	ror    BYTE PTR [ebx],cl
  411f71:	in     eax,dx
  411f72:	add    al,0xb7
  411f74:	test   bl,ah
  411f76:	mov    bl,0xf5
  411f78:	inc    ebx
  411f79:	addr16 imul edx
  411f7c:	sub    al,0x6e
  411f7e:	les    eax,FWORD PTR [edi-0x41b6f122]
  411f84:	mov    ebx,0xeceb08df
  411f89:	inc    edi
  411f8a:	jno    0x411fbe
  411f8c:	mov    eax,ds:0x7c51573d
  411f91:	and    DWORD PTR [ebp-0x2a],ebp
  411f94:	pop    es
  411f95:	cwde   
  411f96:	jno    0x411f29
  411f98:	push   ds
  411f99:	mov    eax,0xc5ab5533
  411f9e:	push   0xffffffa4
  411fa0:	call   DWORD PTR [ecx]
  411fa2:	add    eax,0x98769b5e
  411fa7:	das    
  411fa8:	xor    edx,DWORD PTR [edi]
  411faa:	call   0x4c5d:0x671472cf
  411fb1:	inc    edi
  411fb2:	inc    ebx
  411fb3:	fdivr  QWORD PTR [edx-0x2b55a6f]
  411fb9:	stos   BYTE PTR es:[edi],al
  411fba:	sbb    ebx,DWORD PTR [esi-0x44]
  411fbd:	imul   ebx,DWORD PTR ds:0xf293b716,0xc5617da1
  411fc7:	and    bl,BYTE PTR [eax-0x5c]
  411fca:	rcr    BYTE PTR ds:0x876b2add,cl
  411fd0:	out    0x7d,eax
  411fd2:	stos   DWORD PTR es:[edi],eax
  411fd3:	cmp    BYTE PTR [edi+0x33],al
  411fd6:	mov    DWORD PTR ds:0xac134445,edi
  411fdc:	addr16 cld 
  411fde:	iret   
  411fdf:	fild   QWORD PTR [edx-0x383ac483]
  411fe5:	aad    0x60
  411fe7:	push   ebp
  411fe8:	ret    
  411fe9:	cld    
  411fea:	dec    esi
  411feb:	mov    bl,0xba
  411fee:	jl     0x411fe9
  411ff0:	aas    
  411ff1:	in     eax,dx
  411ff2:	pop    edx
  411ff3:	inc    edi
  411ff4:	push   0xd21d1276
  411ff9:	pop    edi
  411ffa:	pop    esi
  411ffb:	ficom  DWORD PTR [ebp+0x6d0e30b7]
  412001:	jp     0x411f88
  412003:	dec    edi
  412004:	outs   dx,DWORD PTR ds:[esi]
  412005:	push   eax
  412006:	not    bl
  412008:	pop    esi
  412009:	jmp    0x9c141382
  41200e:	push   esp
  41200f:	sub    dl,al
  412011:	in     eax,dx
  412012:	jp     0x412091
  412014:	add    BYTE PTR [esi-0x4913feb4],al
  41201a:	push   ebx
  41201b:	adc    eax,0x1c396bd3
  412020:	jb     0x412008
  412022:	or     cl,0xbc
  412025:	push   ss
  412026:	jbe    0x41203a
  412028:	mov    WORD PTR [esi-0x27],ss
  41202b:	fdiv   QWORD PTR [ebp+0x33]
  41202e:	or     ecx,edi
  412030:	je     0x41209f
  412032:	sbb    ah,al
  412034:	cmc    
  412035:	shl    BYTE PTR [edx-0x3c],cl
  412038:	jle    0x411fed
  41203a:	jg     0x411fed
  41203c:	repnz fisttp WORD PTR [eax+0x6d69a0ce]
  412043:	adc    edx,DWORD PTR ss:[edx+0x3f2d6257]
  41204a:	xchg   ebx,eax
  41204b:	push   edx
  41204c:	mov    al,ds:0x54c05643
  412051:	dec    ecx
  412052:	arpl   WORD PTR [ecx+0x62f059c4],bp
  412058:	xor    DWORD PTR [edx+0x12],edi
  41205b:	sbb    eax,0x76de3e35
  412060:	ja     0x41207b
  412062:	push   esi
  412063:	or     BYTE PTR [edi],dh
  412065:	sar    DWORD PTR [ebx-0x5689f65f],cl
  41206b:	mov    ah,0xf6
  41206d:	mov    bl,0xa
  41206f:	mov    edx,0xed10d125
  412074:	into   
  412075:	arpl   WORD PTR [ebp+0x6a],si
  412078:	rcl    ebp,0xf7
  41207b:	adc    eax,0xe4a2cd76
  412080:	ja     0x412096
  412082:	test   cl,0x6a
  412085:	mov    ds:0xe182ec64,al
  41208a:	stc    
  41208b:	mov    BYTE PTR [esi+ecx*8],cl
  41208e:	mov    eax,ds:0xe47dbcd3
  412093:	(bad)  
  412095:	inc    esi
  412096:	jle    0x4120f6
  412098:	call   0x69bf:0x8709591b
  41209f:	(bad)  
  4120a0:	mov    ds:0xa256b609,al
  4120a5:	dec    ebx
  4120a6:	mov    WORD PTR [ebp+0x9],fs
  4120a9:	or     DWORD PTR [ebx-0x64],ecx
  4120ac:	sub    eax,0x580b3451
  4120b1:	adc    eax,0x5b1c217e
  4120b6:	or     eax,DWORD PTR [esi+0x7c]
  4120b9:	cmp    dl,BYTE PTR [di]
  4120bc:	add    edx,DWORD PTR [esi]
  4120be:	in     eax,dx
  4120bf:	aam    0x0
  4120c1:	repz push edi
  4120c3:	sub    al,BYTE PTR [ebx+eiz*2-0x352e5d41]
  4120ca:	lock pop edx
  4120cc:	fidiv  DWORD PTR [esi+0x3d]
  4120cf:	fistp  WORD PTR [edx]
  4120d1:	std    
  4120d2:	rcr    BYTE PTR [ebx-0x4d],1
  4120d5:	gs retf 0x28d9
  4120d9:	fild   WORD PTR [eax+eiz*2]
  4120dc:	aam    0xeb
  4120de:	adc    dl,bl
  4120e0:	sti    
  4120e1:	cwde   
  4120e2:	jecxz  0x4120b0
  4120e4:	loope  0x412150
  4120e6:	leave  
  4120e7:	xchg   esi,eax
  4120e8:	jns    0x412077
  4120ea:	mov    cs:0xaf181460,al
  4120f0:	ds je  0x4120e7
  4120f3:	mov    dl,BYTE PTR [ebp+0x71df967d]
  4120f9:	push   ds
  4120fa:	sbb    al,0x32
  4120fc:	push   cs
  4120fd:	and    DWORD PTR [ecx],0xffffffc5
  412100:	pop    eax
  412101:	popa   
  412102:	dec    eax
  412103:	pop    edx
  412104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412105:	and    eax,DWORD PTR [ebp+0x7a]
  412108:	aas    
  412109:	mov    eax,0xebc4dc56
  41210e:	aad    0x90
  412110:	mov    bl,cl
  412112:	push   edx
  412113:	sub    BYTE PTR [edx],ch
  412115:	jno    0x41211b
  412117:	add    al,0xd9
  412119:	retf   
  41211a:	xchg   DWORD PTR [edi],ecx
  41211c:	mov    bl,0x8
  41211e:	into   
  41211f:	mov    bl,0x83
  412121:	fstp   TBYTE PTR fs:[edx+0x6ec789e1]
  412128:	fbld   TBYTE PTR [ebp-0x77]
  41212b:	sbb    bl,BYTE PTR [edi-0x5dd0b799]
  412131:	pop    eax
  412132:	push   cs
  412133:	adc    ecx,eax
  412135:	add    DWORD PTR [ebp-0x4e3f1c2b],eax
  41213b:	imul   esi,DWORD PTR [edx+0x5d],0x6e
  41213f:	js     0x4120fb
  412141:	push   0xffffffb4
  412143:	sbb    DWORD PTR [ebx+0x32dccbaa],edi
  412149:	mov    esi,DWORD PTR [ebx-0x1c]
  41214c:	dec    ebx
  41214d:	rol    BYTE PTR [ebp+0x71],1
  412150:	int    0x4e
  412152:	pusha  
  412153:	add    edx,edx
  412155:	fcom   DWORD PTR [ecx-0x7c]
  412158:	retf   
  412159:	daa    
  41215a:	jp     0x41217a
  41215c:	sti    
  41215d:	pop    edi
  41215e:	mov    cl,0x35
  412160:	jmp    0x78da:0x22eb97b1
  412167:	xchg   BYTE PTR [ecx+0x1374998e],ch
  41216d:	adc    dh,BYTE PTR [ecx+0x7781fc96]
  412173:	outs   dx,DWORD PTR ds:[esi]
  412174:	sub    ah,BYTE PTR [ecx]
  412176:	and    DWORD PTR [ecx+0x3fa83833],ecx
  41217c:	test   eax,0xa813dd
  412181:	pop    ebp
  412182:	cdq    
  412183:	dec    ecx
  412184:	rol    DWORD PTR [esp+ecx*4],0x8d
  412188:	cmc    
  412189:	sub    DWORD PTR [edx+ecx*2-0x5c2c2967],eax
  412190:	xchg   edx,eax
  412191:	push   eax
  412192:	pop    eax
  412193:	pop    edx
  412194:	mov    ecx,ebx
  412196:	add    esi,edx
  412198:	jbe    0x41215e
  41219a:	fs (bad) 
  41219c:	inc    eax
  41219d:	shr    DWORD PTR [edx+0x313c79e3],cl
  4121a3:	sub    eax,ecx
  4121a5:	inc    ecx
  4121a6:	jnp    0x41215c
  4121a8:	sub    BYTE PTR [ebx+0x6c],0x64
  4121ac:	inc    esp
  4121ad:	repz jmp 0x894899a5
  4121b3:	jno    0x4121d8
  4121b5:	mov    edi,0x9cde3495
  4121ba:	push   esp
  4121bb:	sub    al,0xd8
  4121bd:	and    DWORD PTR [ebp-0x7c],0x42acf4de
  4121c4:	mov    ebp,0xe38b6ef2
  4121c9:	mov    eax,ds:0x15c27643
  4121ce:	pop    ebp
  4121cf:	inc    eax
  4121d0:	push   ebp
  4121d1:	mov    fs,WORD PTR [eax+0x19]
  4121d4:	test   eax,0x46795297
  4121d9:	cs aas 
  4121db:	shl    DWORD PTR [ecx],cl
  4121dd:	push   esp
  4121de:	fs (bad) 
  4121e0:	cdq    
  4121e1:	ins    BYTE PTR es:[edi],dx
  4121e2:	aad    0xce
  4121e4:	push   eax
  4121e5:	sbb    dh,0xa7
  4121e8:	outs   dx,BYTE PTR ds:[esi]
  4121e9:	dec    ecx
  4121ea:	test   DWORD PTR ds:0xfffc801c,esp
  4121f0:	paddusw mm5,mm5
  4121f3:	adc    esp,ecx
  4121f5:	xchg   ebp,eax
  4121f6:	cmp    BYTE PTR [ebx+0x1d],dh
  4121f9:	and    ebp,DWORD PTR [ecx-0x68]
  4121fc:	and    BYTE PTR [esi+0x26],cl
  4121ff:	cmp    ecx,DWORD PTR [ebx-0x6d24340e]
  412205:	add    BYTE PTR [edx],dl
  412207:	in     al,0xa3
  412209:	add    eax,0xf6482d6c
  41220e:	fsub   st,st(5)
  412210:	sub    BYTE PTR [ebp-0x7629e0b4],0x6
  412217:	(bad)  
  412218:	shl    BYTE PTR [edi+0x5331c9dc],1
  41221e:	out    0xa1,eax
  412220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412221:	pop    ds
  412222:	test   DWORD PTR [eax+0x76],0x69041f7f
  412229:	or     al,0x22
  41222b:	std    
  41222c:	xchg   ebp,eax
  41222d:	jmp    0x412214
  41222f:	or     eax,DWORD PTR [ebx+edx*8+0x56]
  412233:	jnp    0x41227d
  412235:	(bad)  
  412236:	mov    eax,0xc81c5c70
  41223b:	arpl   bx,si
  41223d:	mul    DWORD PTR [ecx-0x7dac391f]
  412243:	adc    ebx,DWORD PTR [eax+0x44f83741]
  412249:	push   0x6e
  41224b:	imul   edx,edi,0xa52374b1
  412251:	lea    eax,[ebx+0x6c]
  412254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412255:	sti    
  412256:	jl     0x4122b6
  412258:	mov    al,0xce
  41225a:	xchg   BYTE PTR [eax],dh
  41225c:	clc    
  41225d:	jle    0x412267
  41225f:	push   DWORD PTR [eax-0x37]
  412262:	adc    BYTE PTR [ecx+ebp*1-0x13],cl
  412266:	cs retf 
  412268:	and    DWORD PTR [esi-0x4e],ebp
  41226b:	(bad)  
  41226c:	add    esp,esp
  41226e:	daa    
  41226f:	(bad)  
  412270:	push   ds
  412271:	imul   eax,DWORD PTR [ebx-0x9da5194],0xaae72de3
  41227b:	or     esi,DWORD PTR [esi-0x64]
  41227e:	imul   eax,DWORD PTR [ebx-0x2c89dad4],0x908d1384
  412288:	fdivp  st(1),st
  41228a:	xor    BYTE PTR [ebp+0x22],0x5
  41228e:	push   ds
  41228f:	mov    edx,0xb2d0cd08
  412294:	xor    al,0x17
  412296:	cs pop edi
  412298:	mov    bl,0xcf
  41229a:	dec    edx
  41229b:	data16 sti 
  41229d:	das    
  41229e:	in     eax,dx
  41229f:	sbb    dl,dl
  4122a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a2:	mov    BYTE PTR [eax],al
  4122a4:	shl    BYTE PTR [ebp+0x4c184dad],1
  4122aa:	(bad)  
  4122ab:	mov    esp,0xcf1a4763
  4122b0:	imul   esp,DWORD PTR [eax-0x32],0x14
  4122b4:	mov    ebx,0x84c76167
  4122b9:	mov    al,ds:0x99d5c5c6
  4122be:	out    0x41,al
  4122c0:	out    0x85,al
  4122c2:	or     BYTE PTR [edi+eax*8+0x72],dl
  4122c6:	ins    BYTE PTR es:[edi],dx
  4122c7:	ret    0xf0ed
  4122ca:	push   cs
  4122cb:	sub    ebx,ebp
  4122cd:	adc    BYTE PTR [ebp-0x6e29548d],0x9f
  4122d4:	(bad)  
  4122d6:	psadbw mm0,mm5
  4122d9:	in     eax,0x58
  4122db:	icebp  
  4122dc:	mov    esp,0xacd762ab
  4122e1:	jbe    0x412349
  4122e3:	ss scas al,BYTE PTR es:[edi]
  4122e5:	sti    
  4122e6:	push   eax
  4122e7:	mov    edx,0x5dc1dd0
  4122ec:	sub    esp,ecx
  4122ee:	cmp    eax,0xa2067150
  4122f3:	cmp    eax,edx
  4122f5:	mov    ebp,0xe45e7e8e
  4122fa:	jle    0x4122ba
  4122fc:	retf   0x313
  4122ff:	rcl    BYTE PTR [eax],cl
  412301:	cmp    bl,BYTE PTR [esi-0x52a699e6]
  412307:	movups xmm1,XMMWORD PTR [esi]
  41230a:	retf   0x8bee
  41230d:	dec    edi
  41230e:	add    al,0x8b
  412310:	add    al,0x6b
  412312:	sub    BYTE PTR cs:[ecx-0x61],bl
  412316:	push   ebp
  412317:	cmp    esp,DWORD PTR [edx]
  412319:	not    DWORD PTR [eax]
  41231b:	aad    0xb7
  41231d:	sbb    eax,0x86034233
  412322:	imul   DWORD PTR [edx+0xc7c4a5a]
  412328:	loopne 0x4122bd
  41232a:	(bad)  
  41232b:	jnp    0x412317
  41232d:	add    eax,0x59edeba1
  412332:	dec    ebp
  412333:	add    eax,0xf2dcfaa4
  412338:	arpl   WORD PTR [ebx],si
  41233a:	adc    al,BYTE PTR [edi+0x2e]
  41233d:	jne    0x4123a7
  41233f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412340:	icebp  
  412341:	das    
  412342:	js     0x412331
  412344:	xchg   esp,eax
  412345:	mov    ss,WORD PTR [edx]
  412347:	in     eax,dx
  412348:	loop   0x412327
  41234a:	pop    eax
  41234b:	sbb    al,0xe0
  41234d:	xor    al,0x19
  41234f:	test   al,0x7
  412351:	inc    esp
  412352:	pop    ds
  412353:	sub    dl,0x30
  412356:	leave  
  412357:	mov    edx,0xe45207b9
  41235c:	repz (bad) 
  41235e:	and    al,BYTE PTR [ecx]
  412360:	fsub   st,st(7)
  412362:	and    dl,BYTE PTR [edx+edx*2+0x4975fd73]
  412369:	and    eax,0x48ea8fd2
  41236e:	or     dl,BYTE PTR [ecx]
  412370:	push   0x30c9f38
  412375:	das    
  412376:	sub    dh,BYTE PTR ds:0xde44913f
  41237c:	inc    esi
  41237d:	mov    ds:0x4564af9e,eax
  412382:	pop    eax
  412383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412384:	int    0xe6
  412386:	rcl    BYTE PTR [edi-0x7aeb6f7e],0xf8
  41238d:	pop    ebp
  41238e:	push   cs
  41238f:	mov    bh,0x55
  412391:	mov    eax,0x721fef4b
  412396:	inc    eax
  412397:	ret    0x39ec
  41239a:	test   DWORD PTR [ebp+eiz*4+0x10],esi
  41239e:	arpl   WORD PTR [ebx+0x52004b89],dx
  4123a4:	jno    0x412400
  4123a6:	aas    
  4123a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a8:	fwait
  4123a9:	jbe    0x412413
  4123ab:	xor    DWORD PTR [ecx+0x25],ecx
  4123ae:	xchg   ebx,eax
  4123af:	sub    ah,BYTE PTR [esi-0x5b9bfb7b]
  4123b5:	add    eax,0x868eb05
  4123ba:	mov    eax,0xcd53794b
  4123bf:	dec    esp
  4123c0:	mov    ecx,DWORD PTR [ecx+0x4e]
  4123c3:	data16 fmul DWORD PTR [edi-0x557c5d14]
  4123ca:	xor    DWORD PTR ds:0x53fb1732,ecx
  4123d0:	mov    ds:0xabd4e5a6,eax
  4123d5:	stc    
  4123d6:	int3   
  4123d7:	retf   0xaa65
  4123da:	scas   eax,DWORD PTR es:[edi]
  4123db:	daa    
  4123dc:	lahf   
  4123dd:	push   ebx
  4123de:	pop    eax
  4123df:	pop    esi
  4123e0:	repz jge 0x412392
  4123e3:	push   0x37
  4123e5:	or     bl,BYTE PTR [edx+0x1a]
  4123e8:	mov    bl,0x49
  4123ea:	(bad)  
  4123eb:	fs aaa 
  4123ed:	adc    cl,BYTE PTR [ebx+esi*1+0x76a3bcc2]
  4123f4:	xchg   esp,eax
  4123f5:	into   
  4123f6:	jmp    0x350fd178
  4123fb:	pop    esp
  4123fc:	sti    
  4123fd:	xor    eax,0xe15fe80f
  412402:	jne    0x412447
  412404:	jmp    DWORD PTR [ecx-0x79]
  412407:	mov    esi,0x10d54988
  41240c:	inc    ebp
  41240d:	jbe    0x4123eb
  41240f:	test   ah,bl
  412411:	nop
  412412:	imul   eax,DWORD PTR [ebp-0x41],0xffffffad
  412416:	mov    ah,0x9c
  412418:	mov    DWORD PTR [ecx],0x949076f0
  41241e:	mov    ah,0xf7
  412420:	leave  
  412421:	jg     0x41244f
  412423:	mov    DWORD PTR [ebx-0x5d],eax
  412426:	out    dx,eax
  412427:	mov    BYTE PTR [eax-0x48338b38],dh
  41242d:	inc    edi
  41242e:	mov    DWORD PTR [ecx+0x22f184c9],edx
  412434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412435:	cli    
  412436:	mov    bl,0xaa
  412438:	add    DWORD PTR [ebp-0x7b9f2d3c],0x4f1f044c
  412442:	add    al,0x7b
  412444:	das    
  412445:	aaa    
  412446:	add    al,0x1
  412448:	xchg   esi,eax
  412449:	mov    ebp,0x834de060
  41244e:	aam    0xb2
  412450:	xchg   ecx,eax
  412451:	sub    DWORD PTR [edx+0x26b3e4f6],esp
  412457:	aad    0xce
  412459:	jne    0x4124b0
  41245b:	enter  0xc0c6,0x7
  41245f:	mov    esi,0xf358815f
  412464:	call   0x263e:0x53612a8e
  41246b:	out    dx,al
  41246c:	mov    ecx,0xaa19e381
  412471:	xor    dl,BYTE PTR [ebx]
  412473:	leave  
  412474:	loopne 0x4124af
  412476:	xchg   esp,eax
  412477:	neg    DWORD PTR [ecx-0x29]
  41247a:	push   ds
  41247b:	or     ah,dh
  41247d:	inc    eax
  41247e:	cmp    dh,BYTE PTR [esi]
  412480:	mov    eax,0xb488c431
  412485:	aaa    
  412486:	inc    edi
  412487:	(bad)  
  412488:	jle    0x412499
  41248a:	sub    esp,DWORD PTR [esp+edi*4-0x22d46399]
  412491:	mov    BYTE PTR ds:0x2f0e055e,ah
  412497:	xchg   DWORD PTR [edi+0x1b],eax
  41249a:	cmp    dh,al
  41249c:	xchg   edi,eax
  41249d:	cld    
  41249e:	push   ss
  41249f:	pop    ds
  4124a0:	(bad)  
  4124a1:	(bad)  
  4124a3:	in     eax,dx
  4124a4:	inc    eax
  4124a5:	loope  0x41250f
  4124a7:	scas   eax,DWORD PTR es:[edi]
  4124a8:	pusha  
  4124a9:	retf   
  4124aa:	inc    ebp
  4124ab:	dec    edi
  4124ac:	adc    DWORD PTR [ebx+0x51],0x4b05f7dc
  4124b3:	sbb    al,0x2b
  4124b5:	sub    eax,0xa6b07874
  4124ba:	cmp    BYTE PTR [eax+0x33ace32a],ah
  4124c0:	fcom   QWORD PTR [ecx-0x3c5f882e]
  4124c6:	jae    0x41252e
  4124c8:	dec    esp
  4124c9:	loop   0x412486
  4124cb:	out    0x99,eax
  4124cd:	shl    DWORD PTR [ebp-0x75],1
  4124d0:	dec    esp
  4124d1:	pop    ecx
  4124d2:	add    ah,0xe7
  4124d5:	and    dl,BYTE PTR [eax-0x4c8db4cc]
  4124db:	sbb    ecx,DWORD PTR [edx]
  4124dd:	mov    ebp,0xd97e35b6
  4124e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124e3:	cwde   
  4124e4:	inc    ebx
  4124e5:	dec    ebx
  4124e6:	adc    edx,DWORD PTR [ebx]
  4124e8:	fisub  WORD PTR [ecx+0x6f139cea]
  4124ee:	or     eax,0xa692724d
  4124f3:	cmp    ch,BYTE PTR [esp+esi*2-0x5]
  4124f7:	inc    esi
  4124f8:	jmp    0xbaed:0x1c3b4f90
  4124ff:	push   edi
  412500:	cwde   
  412501:	imul   BYTE PTR [edi+0x78]
  412504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412505:	ret    0x7d0c
  412508:	ret    
  412509:	cmc    
  41250a:	(bad)  
  41250b:	sub    al,0x3e
  41250d:	dec    ecx
  41250e:	adc    al,bh
  412510:	or     al,BYTE PTR [ebp-0x3576db6f]
  412516:	push   esi
  412517:	and    ah,BYTE PTR [edi+ecx*8-0x2b]
  41251b:	mov    edx,0xc9818ca1
  412520:	adc    esp,DWORD PTR [esi+eax*4+0x65]
  412524:	push   0xffffffab
  412526:	mov    eax,0xbb98ea17
  41252b:	push   edi
  41252c:	sbb    edi,DWORD PTR ds:0x4ed1d678
  412532:	pop    eax
  412533:	and    DWORD PTR [ecx-0x5a],ebp
  412536:	mov    ah,0xf3
  412538:	jmp    0x412556
  41253a:	and    esp,DWORD PTR [esi]
  41253c:	push   ecx
  41253d:	mov    edi,0x80d689fc
  412542:	icebp  
  412543:	jp     0x4124d9
  412545:	bound  ax,DWORD PTR [ebp-0x3dfe1c7]
  41254c:	add    BYTE PTR [ecx-0x80],dh
  41254f:	cdq    
  412550:	push   eax
  412551:	aam    0x36
  412553:	not    DWORD PTR [edi+edx*1+0x60]
  412557:	cmp    eax,DWORD PTR [ebp+0x75]
  41255a:	push   edi
  41255b:	shr    ebp,1
  41255d:	mov    ds:0x22834c38,al
  412562:	xor    al,0x70
  412564:	cmp    al,0x7a
  412566:	lds    ebp,FWORD PTR [esp+eax*8]
  412569:	rol    DWORD PTR [eax+edx*2],cl
  41256c:	cmp    sp,WORD PTR ds:0xfd9c9944
  412573:	lock int 0x62
  412576:	mov    esi,0x635da83e
  41257b:	xlat   BYTE PTR ds:[ebx]
  41257c:	sbb    eax,0x7c607a19
  412581:	int    0xb1
  412583:	pop    ds
  412584:	mov    gs,ebp
  412586:	sub    esi,DWORD PTR [ebp+0x7b84c3a7]
  41258c:	test   DWORD PTR [ebp-0x69a11222],edx
  412592:	nop
  412593:	jno    0x41251c
  412595:	ins    BYTE PTR es:[edi],dx
  412596:	pop    ss
  412597:	fwait
  412598:	adc    ebp,DWORD PTR ds:0x6f722433
  41259e:	in     eax,0x50
  4125a0:	mov    eax,DWORD PTR [edi-0x779a7b74]
  4125a6:	jno    0x412535
  4125a8:	mov    ebp,0x5c8a602f
  4125ad:	sbb    eax,0xf2431da5
  4125b2:	iret   
  4125b3:	mov    eax,0x68b95ebf
  4125b8:	pop    ebp
  4125b9:	xor    al,0x14
  4125bb:	or     al,0xca
  4125bd:	pop    eax
  4125be:	sub    al,0xfe
  4125c0:	icebp  
  4125c1:	mov    ds:0xd00928b6,al
  4125c6:	dec    esi
  4125c7:	ins    DWORD PTR es:[edi],dx
  4125c8:	data16 mov ah,0xb4
  4125cb:	or     cl,BYTE PTR [ecx]
  4125cd:	push   es
  4125ce:	fcomp  QWORD PTR [esi+edx*4-0x7a942ac5]
  4125d5:	in     al,0x4a
  4125d7:	scas   al,BYTE PTR es:[edi]
  4125d8:	mov    dl,0x6b
  4125da:	icebp  
  4125db:	in     al,dx
  4125dc:	das    
  4125dd:	cmp    eax,0xc97cbeef
  4125e2:	into   
  4125e3:	outs   dx,BYTE PTR ds:[esi]
  4125e4:	mov    edi,0x7860c563
  4125e9:	ret    0xbb8b
  4125ec:	jno    0x41263a
  4125ee:	mov    ecx,0xcd0aed41
  4125f3:	xchg   edi,eax
  4125f4:	cmp    esp,DWORD PTR [edi]
  4125f6:	xlat   BYTE PTR ds:[ebx]
  4125f7:	mov    ch,0x13
  4125f9:	add    DWORD PTR [eax],edi
  4125fb:	pop    edx
  4125fc:	test   BYTE PTR [ecx-0xf],bh
  4125ff:	aas    
  412600:	push   DWORD PTR ds:0x2df3b53d
  412606:	mov    al,0x64
  412608:	call   0x2348:0xa77f34e2
  41260f:	ret    
  412610:	loope  0x41264f
  412612:	dec    eax
  412613:	and    esp,edx
  412615:	clc    
  412616:	sbb    al,dl
  412618:	(bad)  
  412619:	out    0xe4,al
  41261b:	shl    al,1
  41261d:	and    BYTE PTR [ebp+0x11],ch
  412620:	or     esp,DWORD PTR [ecx]
  412622:	outs   dx,BYTE PTR ds:[esi]
  412623:	cwde   
  412624:	jg     0x4125c6
  412626:	cmp    DWORD PTR [si-0x4d77],edi
  41262b:	xchg   DWORD PTR cs:[ecx],ebp
  41262e:	cmp    dl,BYTE PTR [ebx-0x53889b26]
  412634:	popf   
  412635:	(bad)  [ebx*4-0x1e3843ad]
  41263c:	std    
  41263d:	inc    edx
  41263e:	loopne 0x4125c6
  412640:	xchg   ecx,eax
  412641:	mov    DWORD PTR [ebx],0xdecfee8
  412647:	cmc    
  412648:	jecxz  0x412617
  41264a:	add    eax,0x40d8eaa3
  41264f:	mov    eax,0x6e9519d9
  412654:	xor    BYTE PTR [eax],dl
  412656:	imul   eax,DWORD PTR [esi+eiz*4-0x7d],0x60
  41265b:	push   esp
  41265c:	mov    ecx,0x16d69296
  412661:	pop    ebx
  412662:	xor    eax,0x859a4412
  412667:	cmp    bh,BYTE PTR [esi-0x64766006]
  41266d:	push   es
  41266e:	sub    cl,BYTE PTR [ecx+0x13]
  412671:	cmp    dl,dh
  412673:	jge    0x41260a
  412675:	jl     0x4126c8
  412677:	push   ebx
  412678:	cmp    eax,DWORD PTR [eax-0x7a]
  41267b:	cmp    esi,0x249f6998
  412681:	and    eax,0xa1a69450
  412686:	pusha  
  412687:	add    ecx,DWORD PTR [eax-0x323503cc]
  41268d:	push   0x1e292f6c
  412692:	inc    ebp
  412693:	sbb    al,0xc8
  412695:	test   BYTE PTR [esi+0x24a76383],ch
  41269b:	into   
  41269c:	es or  eax,0x5aea4a82
  4126a2:	inc    ecx
  4126a3:	lods   al,BYTE PTR ds:[esi]
  4126a4:	xor    al,ch
  4126a6:	pushf  
  4126a7:	cmp    al,bh
  4126a9:	cmp    al,0xd3
  4126ab:	dec    esi
  4126ac:	in     eax,dx
  4126ad:	mov    edx,0x3ca5ec2b
  4126b2:	call   FWORD PTR [eax]
  4126b4:	pop    ds
  4126b5:	jbe    0x4126c3
  4126b7:	fidiv  WORD PTR [edx-0x2c]
  4126ba:	xchg   ebp,eax
  4126bb:	dec    BYTE PTR [edx]
  4126bd:	and    DWORD PTR [ebx-0x65],eax
  4126c0:	sbb    al,0x3
  4126c2:	jo     0x412717
  4126c4:	shl    ebp,1
  4126c6:	test   BYTE PTR [edi-0x76],ah
  4126c9:	cdq    
  4126ca:	dec    eax
  4126cb:	mov    edx,0x9190fe66
  4126d0:	bound  edx,QWORD PTR [ecx+0x6d]
  4126d3:	sub    dl,ah
  4126d5:	ret    0x89b1
  4126d8:	jp     0x412736
  4126da:	jne    0x4126c0
  4126dc:	in     eax,0x11
  4126de:	push   ss
  4126df:	adc    dh,BYTE PTR [edi+0x33181af8]
  4126e5:	dec    edi
  4126e6:	ja     0x4126b7
  4126e8:	fiadd  WORD PTR [edx-0x2e]
  4126eb:	mov    al,ds:0xaf1894b3
  4126f0:	loop   0x412692
  4126f2:	(bad)  
  4126f3:	cmp    ecx,DWORD PTR [esi]
  4126f5:	adc    eax,0x3347c8d5
  4126fa:	imul   edi,DWORD PTR [ebp+0x37],0x17
  4126fe:	mov    edx,0xa511aa89
  412703:	pusha  
  412704:	mov    ah,0x2e
  412706:	loop   0x412721
  412708:	dec    eax
  412709:	stc    
  41270a:	jns    0x41278b
  41270c:	ds pop es
  41270e:	mov    ecx,tr7
  412711:	cs test al,0x9e
  412714:	sub    ebx,eax
  412716:	dec    edi
  412717:	sbb    al,0xd8
  412719:	or     ch,BYTE PTR [edi+esi*2+0x2]
  41271d:	outs   dx,BYTE PTR ds:[esi]
  41271e:	add    DWORD PTR [ecx+0xc],0x43
  412722:	vmwrite eax,DWORD PTR [ebp+eiz*8-0x77]
  412727:	popf   
  412728:	xchg   edx,eax
  412729:	leave  
  41272a:	sbb    DWORD PTR [edi-0x7a],ecx
  41272d:	jg     0x4126d1
  41272f:	xor    BYTE PTR [edi],dh
  412731:	adc    DWORD PTR [ebp-0x50],edx
  412734:	cmp    al,0x84
  412736:	xor    al,0x82
  412738:	mov    bh,0x41
  41273a:	xchg   esp,eax
  41273b:	mov    ah,0x24
  41273d:	mov    ch,0xbd
  41273f:	dec    esi
  412740:	xchg   edx,eax
  412741:	cmp    DWORD PTR [ebp+eax*2+0x7d87282],esi
  412748:	inc    esp
  412749:	jle    0x412755
  41274b:	adc    ecx,esi
  41274d:	loop   0x4127a2
  41274f:	xor    al,0x13
  412751:	ja     0x4126e6
  412753:	aad    0x66
  412755:	test   al,0xbb
  412757:	xlat   BYTE PTR ds:[ebx]
  412758:	jb     0x412745
  41275a:	lds    ebp,FWORD PTR [esi+0x7d]
  41275d:	outs   dx,BYTE PTR ds:[esi]
  41275e:	shl    BYTE PTR [ecx],1
  412760:	mov    al,ds:0xab27b25b
  412765:	iret   
  412766:	scas   eax,DWORD PTR es:[edi]
  412767:	mov    al,ds:0xceed6fed
  41276c:	dec    esp
  41276d:	inc    ebp
  41276e:	hlt    
  41276f:	int3   
  412770:	out    0xe4,eax
  412772:	mov    eax,0xeca4bafe
  412777:	sbb    dl,BYTE PTR [edx-0xb]
  41277a:	inc    eax
  41277b:	cli    
  41277c:	call   0x992e4760
  412781:	js     0x4127e9
  412783:	mov    eax,ds:0xa4b774db
  412788:	ja     0x4127dd
  41278a:	jno    0x4127ad
  41278c:	cmp    al,BYTE PTR [eax+0x5994a87]
  412792:	arpl   si,bp
  412794:	shl    DWORD PTR [eax+0x1416d57c],cl
  41279a:	sbb    dl,BYTE PTR [edi]
  41279c:	sbb    DWORD PTR [edi],ebx
  41279e:	pop    ss
  41279f:	or     al,0x7e
  4127a1:	adc    bl,BYTE PTR [edx]
  4127a3:	mov    ebx,DWORD PTR [edx]
  4127a5:	mov    BYTE PTR [edx-0x19],0xda
  4127a9:	cli    
  4127aa:	xor    al,0xaa
  4127ad:	mov    eax,0x312ecdaf
  4127b2:	ins    BYTE PTR es:[edi],dx
  4127b3:	xchg   al,cl
  4127b5:	pop    ecx
  4127b6:	test   eax,0x1abf23f8
  4127bb:	adc    eax,0x2e63a47b
  4127c0:	mov    dh,0x3e
  4127c2:	std    
  4127c3:	mov    bl,0x54
  4127c5:	mov    dl,0xb7
  4127c7:	push   edi
  4127c8:	xchg   DWORD PTR [ebx+0x44b75841],ecx
  4127ce:	adc    BYTE PTR [edi-0x23],dl
  4127d1:	mov    BYTE PTR [edi+0x32],bl
  4127d4:	inc    edx
  4127d5:	ret    0xf86
  4127d8:	sub    al,0x55
  4127da:	mov    bh,0x9e
  4127dc:	sar    BYTE PTR [esi+edi*4],0x8c
  4127e0:	fs dec edi
  4127e2:	sbb    DWORD PTR ds:0x7889a5d3,esp
  4127e8:	fsub   DWORD PTR [ebp-0x16]
  4127eb:	or     ch,BYTE PTR [eax+ecx*1-0xba6ebc8]
  4127f2:	(bad)  
  4127f3:	sbb    BYTE PTR [ebx+0x60],bl
  4127f6:	fcom   DWORD PTR [ebx]
  4127f8:	stos   BYTE PTR es:[edi],al
  4127f9:	icebp  
  4127fa:	inc    ebp
  4127fb:	gs sbb ebx,0x13
  4127ff:	xchg   esp,eax
  412800:	jne    0x412837
  412802:	aaa    
  412803:	out    0xc7,al
  412805:	cwde   
  412806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412807:	sub    dl,BYTE PTR [edx]
  412809:	lods   eax,DWORD PTR ds:[esi]
  41280a:	mov    dh,0x35
  41280c:	jg     0x4127e7
  41280e:	pushf  
  41280f:	scas   al,BYTE PTR es:[edi]
  412810:	pushf  
  412811:	pop    esp
  412812:	jne    0x4127c5
  412814:	jae    0x412863
  412816:	xor    BYTE PTR [ebx-0x33b5b0d4],al
  41281c:	stc    
  41281d:	(bad)  
  41281f:	xor    eax,0x7208bf54
  412824:	ret    0xfcac
  412827:	add    al,0x2a
  412829:	adc    ecx,eax
  41282b:	pop    edx
  41282c:	das    
  41282d:	ja     0x4128aa
  41282f:	scas   eax,DWORD PTR es:[edi]
  412830:	pop    ss
  412831:	mov    dl,0x36
  412833:	jns    0x4127f9
  412835:	enter  0x254f,0x9f
  412839:	popa   
  41283a:	xchg   edx,eax
  41283b:	loope  0x4127fa
  41283d:	lea    ecx,[esi+0x1f]
  412840:	fs inc edx
  412842:	in     al,dx
  412843:	sbb    eax,0x874e27f4
  412848:	test   al,0xa8
  41284a:	jmp    0x5dc4:0x7a9eb61a
  412851:	(bad)  
  412852:	mov    ah,0x6d
  412854:	jmp    0x412837
  412856:	arpl   WORD PTR [ebp+0x64],si
  412859:	gs into 
  41285b:	sub    bl,BYTE PTR [edi+0x725e45f6]
  412861:	lahf   
  412862:	mov    cl,0x28
  412864:	and    DWORD PTR [ebx+eiz*4-0x34a1f81b],esp
  41286b:	cwde   
  41286c:	test   al,0x24
  41286e:	xor    DWORD PTR [ecx-0x69e6e3b2],edx
  412874:	sub    edi,DWORD PTR [ebp+0x6d]
  412877:	repnz xchg esi,eax
  412879:	out    dx,eax
  41287a:	adc    bh,BYTE PTR [ebx+0x7f]
  41287d:	inc    ecx
  41287e:	fsub   st,st(6)
  412880:	jmp    0x4128e1
  412882:	test   DWORD PTR [ebp-0x1e],0x89764473
  412889:	in     eax,dx
  41288a:	leave  
  41288b:	inc    eax
  41288c:	dec    ecx
  41288d:	sti    
  41288e:	cdq    
  41288f:	shr    ecx,0xdd
  412892:	dec    edx
  412893:	movups xmm5,XMMWORD PTR ds:0x797fbcb0
  41289a:	retfw  
  41289c:	pop    edx
  41289d:	push   edx
  41289e:	shr    DWORD PTR [eax],cl
  4128a0:	xor    edi,ebp
  4128a2:	xchg   esi,eax
  4128a3:	stos   DWORD PTR es:[edi],eax
  4128a4:	mov    al,ds:0xee4b53dd
  4128a9:	test   BYTE PTR [edx+0x37],0x64
  4128ad:	mov    ds:0xfdea9a37,eax
  4128b2:	test   al,0x5c
  4128b4:	int    0xaf
  4128b6:	push   eax
  4128b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128b8:	test   al,0x3e
  4128ba:	xchg   ecx,eax
  4128bb:	imul   ebx,DWORD PTR [eax+0x53ec58c9],0x13
  4128c2:	rol    DWORD PTR [edi+ebp*1+0x20],0x1d
  4128c7:	pop    edx
  4128c8:	test   BYTE PTR [edi+edx*2+0x3f],0xcd
  4128cd:	enter  0xc34e,0x2
  4128d1:	mov    esi,DWORD PTR [edx]
  4128d3:	sub    ecx,ebp
  4128d5:	sbb    DWORD PTR [ebx],ecx
  4128d7:	lea    edi,[ebx-0x42]
  4128da:	mov    bh,0xbd
  4128dc:	sbb    eax,0x540bfdf5
  4128e1:	mov    esp,0xd762f4e1
  4128e6:	call   0x6439:0xc8b7ab8b
  4128ed:	cmc    
  4128ee:	xchg   BYTE PTR [ecx],dh
  4128f0:	pop    esi
  4128f1:	arpl   WORD PTR [ecx+0x56],bx
  4128f4:	jbe    0x412934
  4128f6:	out    dx,al
  4128f7:	or     al,dh
  4128f9:	dec    esp
  4128fa:	clc    
  4128fb:	lock sbb al,0xc
  4128fe:	scas   eax,DWORD PTR es:[edi]
  4128ff:	fsubr  DWORD PTR [edi-0x4e64fcbd]
  412905:	adc    DWORD PTR [eax+ebp*1],edx
  412908:	(bad)  
  412909:	leave  
  41290a:	inc    eax
  41290b:	mov    al,0x32
  41290d:	cmp    edx,DWORD PTR [edx+ebp*4+0xaa430ef]
  412914:	in     al,0x5e
  412916:	imul   ecx,DWORD PTR [edi+0x72019340],0x26a09886
  412920:	in     eax,dx
  412921:	adc    al,0xd6
  412923:	mov    edx,0x214e85b5
  412928:	mov    ebx,0x8bcca5c0
  41292d:	mov    eax,0xa7339d67
  412932:	jle    0x412985
  412934:	aas    
  412935:	cld    
  412936:	mov    bl,0x23
  412938:	(bad)  
  412939:	pop    esi
  41293a:	adc    esi,eax
  41293c:	test   eax,0x885761f
  412941:	inc    esi
  412942:	inc    DWORD PTR [edx+0x40327e9c]
  412948:	loop   0x4129bb
  41294a:	jmp    0x4695:0x82eaa758
  412951:	cmp    eax,eax
  412953:	int3   
  412954:	stos   BYTE PTR es:[edi],al
  412955:	jnp    0x412940
  412957:	xor    DWORD PTR [edx+ecx*1-0x5637cadf],0xffffffd2
  41295f:	mov    dl,0x27
  412961:	scas   al,BYTE PTR es:[edi]
  412962:	(bad)  
  412963:	cmc    
  412964:	dec    edi
  412965:	adc    esi,DWORD PTR [esi-0x462bf34c]
  41296b:	das    
  41296c:	sbb    ah,bh
  41296e:	retf   
  41296f:	push   edx
  412970:	out    dx,eax
  412971:	push   ds
  412972:	sbb    eax,0x2e688ccd
  412977:	jmp    0x63fc:0xb114ddc3
  41297e:	js     0x412957
  412980:	pop    es
  412981:	inc    esp
  412982:	push   ds
  412983:	pusha  
  412984:	arpl   si,bp
  412986:	xchg   DWORD PTR [eax+0x19c5dea8],eax
  41298c:	push   esi
  41298d:	stc    
  41298e:	adc    eax,0x4ac1a7f0
  412993:	mov    ah,0x8e
  412995:	xchg   edi,eax
  412996:	mov    eax,ds:0x5687e115
  41299b:	test   bh,bh
  41299d:	enter  0x33d8,0xe1
  4129a1:	adc    BYTE PTR [esi+0x455d5bf],al
  4129a7:	mov    bl,0x90
  4129a9:	call   0xfc2fbb92
  4129ae:	(bad)  [edx]
  4129b0:	push   0xc80b703b
  4129b5:	jns    0x4129c4
  4129b7:	or     ch,BYTE PTR [esi]
  4129b9:	add    al,0x52
  4129bb:	push   eax
  4129bc:	ja     0x412946
  4129be:	jp     0x4129a6
  4129c0:	and    al,0x4e
  4129c2:	mov    ebx,0xf6864de8
  4129c7:	gs repz cmp BYTE PTR ss:[esi-0x7d],dl
  4129cd:	pusha  
  4129ce:	push   0x95d5fbe8
  4129d3:	pop    ebx
  4129d4:	jno    0x412a38
  4129d6:	stc    
  4129d7:	jp     0x4129ad
  4129d9:	push   cs
  4129da:	mov    al,ds:0x88b71869
  4129df:	ds cld 
  4129e1:	and    bh,ah
  4129e3:	xchg   ebp,eax
  4129e4:	(bad)  
  4129e5:	cmp    eax,0xea2f0f4a
  4129ea:	pusha  
  4129eb:	lds    edx,FWORD PTR [ebx]
  4129ed:	cmp    edi,DWORD PTR [eax-0x4eb5141b]
  4129f3:	mov    al,0x7e
  4129f5:	gs add al,0x3d
  4129f8:	inc    eax
  4129f9:	stc    
  4129fa:	iret   
  4129fb:	test   DWORD PTR [esi-0x4e],ebx
  4129fe:	mov    dl,0x97
  412a00:	inc    ebp
  412a01:	mov    dl,BYTE PTR [ebx+0x13a2a3b3]
  412a07:	into   
  412a08:	dec    edx
  412a09:	mov    al,ds:0x82715d1c
  412a0e:	popa   
  412a0f:	push   0x4a8a4cfd
  412a14:	call   0x86026b16
  412a19:	pushf  
  412a1a:	push   es
  412a1b:	cmp    DWORD PTR [edi+0x56a1164b],0xd7ae9bd3
  412a25:	or     eax,0xcaa75a1e
  412a2a:	cmp    DWORD PTR [ebx-0x370257af],ecx
  412a30:	loop   0x412a99
  412a32:	push   ecx
  412a33:	inc    edx
  412a34:	pop    gs
  412a36:	shr    BYTE PTR [ecx+0x299f74b8],1
  412a3c:	mov    dl,0x68
  412a3e:	mov    ch,0xa
  412a40:	icebp  
  412a41:	ret    0xb2d1
  412a44:	or     BYTE PTR [esi],ah
  412a46:	mov    bl,0xe
  412a48:	sub    BYTE PTR [eax-0x3],ah
  412a4b:	jmp    0xe6a6:0x7e5fc53f
  412a52:	cmp    al,0xba
  412a54:	push   ecx
  412a55:	mov    edx,0x61a3f47f
  412a5a:	iret   
  412a5b:	in     al,dx
  412a5c:	xor    DWORD PTR [edi],edx
  412a5e:	dec    eax
  412a5f:	xchg   BYTE PTR [edx],dl
  412a61:	push   0xffffffe8
  412a63:	pop    eax
  412a64:	xor    al,0x27
  412a66:	jo     0x412ae1
  412a68:	shl    DWORD PTR [eax+0x7a],cl
  412a6b:	dec    esp
  412a6c:	xchg   edx,eax
  412a6d:	dec    esp
  412a6e:	in     eax,dx
  412a6f:	call   0xdf17946b
  412a74:	push   edx
  412a75:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  412a77:	leave  
  412a78:	push   eax
  412a79:	mov    ebp,0x27e0ddf8
  412a7e:	pop    ecx
  412a7f:	test   al,0x17
  412a81:	mov    edx,0x50dd59f3
  412a86:	sbb    al,0xe5
  412a88:	or     al,0xd7
  412a8a:	and    dl,0xbb
  412a8d:	out    0x4f,eax
  412a8f:	jns    0x412ab2
  412a91:	fdivr  DWORD PTR [edx-0x5c]
  412a94:	pusha  
  412a95:	in     eax,0xfc
  412a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a98:	mov    al,0xe2
  412a9a:	stc    
  412a9b:	(bad)  
  412a9d:	fwait
  412a9e:	test   ah,ch
  412aa0:	mov    eax,0x57f104e1
  412aa5:	mov    al,ds:0x3ec8041a
  412aaa:	sub    esi,ebp
  412aac:	imul   eax,DWORD PTR [edx],0xd35795b8
  412ab2:	adc    al,0x54
  412ab4:	repnz adc BYTE PTR [ebp+0x3c0d77d1],dl
  412abb:	dec    BYTE PTR [ecx-0x4]
  412abe:	jg     0x412b36
  412ac0:	cs or  al,0xfc
  412ac3:	xlat   BYTE PTR ds:[ebx]
  412ac4:	int3   
  412ac5:	bound  ebp,QWORD PTR [ecx-0xa]
  412ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ac9:	adc    BYTE PTR [edx],al
  412acb:	sbb    al,0x4f
  412acd:	and    BYTE PTR [edi+edx*2-0x3d],dh
  412ad1:	cmp    dl,dh
  412ad3:	ror    BYTE PTR [edi+0x5540b98b],1
  412ad9:	hlt    
  412ada:	fwait
  412adb:	push   esi
  412adc:	repnz aas 
  412ade:	mov    WORD PTR [ecx-0x5d],?
  412ae1:	sahf   
  412ae2:	jns    0x412b16
  412ae4:	fcom   QWORD PTR [edx]
  412ae6:	lods   al,BYTE PTR ds:[esi]
  412ae7:	lods   al,BYTE PTR ds:[esi]
  412ae8:	dec    edx
  412ae9:	(bad)  
  412aea:	sub    esi,DWORD PTR [edx]
  412aec:	sbb    DWORD PTR [edi+ecx*4-0x3480233e],0xf12b96d0
  412af7:	iret   
  412af8:	xchg   esp,eax
  412af9:	loope  0x412b48
  412afb:	adc    al,0x30
  412afd:	(bad)  
  412afe:	cmc    
  412aff:	div    BYTE PTR [edx+0x53]
  412b02:	mov    al,0xe0
  412b04:	or     eax,0x41c0e873
  412b09:	dec    ecx
  412b0a:	dec    eax
  412b0b:	jmp    0xc973:0x355e6e4f
  412b12:	or     DWORD PTR [edx],esp
  412b14:	lods   al,BYTE PTR ds:[esi]
  412b15:	push   esi
  412b16:	mov    ds:0xccf20a49,eax
  412b1b:	(bad)  
  412b1c:	imul   ecx,DWORD PTR [edi+eiz*1-0x73],0xffffffcf
  412b21:	cmp    edi,DWORD PTR [edi+0x7f3d0e35]
  412b27:	xchg   esi,eax
  412b28:	jae    0x412ab0
  412b2a:	pop    ss
  412b2b:	xor    DWORD PTR [edi+esi*4],eax
  412b2e:	inc    esi
  412b2f:	mov    edx,0x9e4b4245
  412b34:	cmp    ebx,DWORD PTR [edx+0x56d09c82]
  412b3a:	jle    0x412b78
  412b3c:	aad    0xb2
  412b3e:	sbb    eax,0xe4d4c8ef
  412b43:	fld    TBYTE PTR [ecx]
  412b45:	mov    bl,0xe
  412b47:	shld   DWORD PTR [ebx+esi*8+0x3a1198f7],eax,0x99
  412b50:	jle    0x412b8e
  412b52:	mov    dh,0x5a
  412b54:	pop    ss
  412b55:	pop    ebx
  412b56:	stos   DWORD PTR es:[edi],eax
  412b57:	leave  
  412b58:	sbb    ecx,esp
  412b5a:	fdivr  QWORD PTR [ebx]
  412b5c:	pop    esp
  412b5d:	stos   DWORD PTR es:[edi],eax
  412b5e:	in     al,dx
  412b5f:	push   esp
  412b60:	or     al,0xc2
  412b62:	nop
  412b63:	jmp    0xb1fe:0xd54998aa
  412b6a:	dec    ecx
  412b6b:	pop    ds
  412b6c:	pop    es
  412b6d:	imul   esp,DWORD PTR [esi-0x462a5b74],0xfffffffe
  412b74:	pop    edx
  412b75:	mov    cs,ecx
  412b77:	ret    
  412b78:	cmovnp eax,DWORD PTR [ecx-0x6462506a]
  412b7f:	jecxz  0x412bbb
  412b81:	into   
  412b82:	cmp    edi,DWORD PTR [ebx+0x6c]
  412b85:	push   eax
  412b86:	pop    edx
  412b87:	pushf  
  412b88:	test   BYTE PTR [ebp+0x3],bh
  412b8b:	pop    esp
  412b8c:	sbb    DWORD PTR [ecx],edx
  412b8e:	ins    BYTE PTR es:[edi],dx
  412b8f:	or     BYTE PTR [ecx],0xe1
  412b92:	sub    al,0x3a
  412b94:	inc    edi
  412b95:	sub    al,0x80
  412b97:	imul   ecx,DWORD PTR [ebp+0x4a],0x38
  412b9b:	mov    edi,0x9757e664
  412ba0:	sub    DWORD PTR [edx],0x1a
  412ba3:	jnp    0x412c0b
  412ba5:	dec    edi
  412ba6:	jle    0x412bb2
  412ba8:	bound  esi,QWORD PTR [ebp+0x7ad68c9a]
  412bae:	inc    ecx
  412baf:	cmp    DWORD PTR [esi-0x2],esp
  412bb2:	jl     0x412b7e
  412bb4:	fdivrp st(4),st
  412bb6:	and    BYTE PTR [esi+0x28f63a8d],0xad
  412bbd:	push   cs
  412bbe:	jl     0x412b6e
  412bc0:	mov    ebx,0x9f419b9a
  412bc5:	xchg   edi,eax
  412bc6:	sub    DWORD PTR [eax],0x6fea4b7d
  412bcc:	jno    0x412b53
  412bce:	add    eax,0x746d5eca
  412bd3:	xor    BYTE PTR [ebp-0x33e36e0e],0x82
  412bda:	shl    DWORD PTR [eax-0xee79864],cl
  412be0:	cmp    DWORD PTR [esi-0x5dd956cb],edi
  412be6:	mov    eax,0x60148440
  412beb:	jno    0x412c0c
  412bed:	test   eax,0xfb640771
  412bf2:	fwait
  412bf3:	sbb    cl,cl
  412bf5:	xor    DWORD PTR [ecx-0x45dcf17b],0x5b
  412bfc:	in     al,0x72
  412bfe:	fld    TBYTE PTR [esi-0x69412e91]
  412c04:	pushf  
  412c05:	jmp    0xb12a:0xc7e7a57a
  412c0c:	daa    
  412c0d:	xor    BYTE PTR [edi-0x66882c2b],0xdb
  412c14:	push   esi
  412c15:	jle    0x412bde
  412c17:	rcl    BYTE PTR [edi],1
  412c19:	std    
  412c1a:	pop    ebp
  412c1b:	dec    edi
  412c1c:	adc    BYTE PTR [eax],0x32
  412c1f:	aad    0x36
  412c21:	sub    DWORD PTR [ecx+0x3a],edi
  412c24:	lds    esp,FWORD PTR [ecx+0x78]
  412c27:	push   edx
  412c28:	jnp    0x412c11
  412c2a:	sbb    al,0x0
  412c2c:	add    ebp,edx
  412c2e:	in     al,0xad
  412c30:	cld    
  412c31:	aad    0x34
  412c33:	inc    esp
  412c34:	xchg   esp,eax
  412c35:	mov    WORD PTR [edx+eax*2+0x77],ds
  412c39:	ret    
  412c3a:	xor    DWORD PTR [edx],ebp
  412c3c:	leave  
  412c3d:	mov    ecx,0xc4e99e9b
  412c42:	js     0x412be2
  412c44:	fs scas eax,DWORD PTR es:[edi]
  412c46:	loope  0x412c32
  412c48:	pop    esp
  412c49:	cli    
  412c4a:	addr16 leave 
  412c4c:	adc    eax,0xc28b06ca
  412c51:	loope  0x412c10
  412c53:	push   edi
  412c54:	call   0xc1bc11b1
  412c59:	cmp    dl,bl
  412c5b:	inc    edi
  412c5c:	gs mov esi,0x5a8f0adc
  412c62:	xchg   ebp,eax
  412c63:	(bad)  
  412c64:	les    esi,FWORD PTR [ebp-0x49]
  412c67:	int3   
  412c68:	daa    
  412c69:	add    eax,0xaccd1e38
  412c6e:	adc    DWORD PTR [edx+edi*4-0xac84bd7],ebp
  412c75:	(bad)  
  412c76:	xchg   esp,eax
  412c77:	jl     0x412ceb
  412c79:	mov    ecx,ebx
  412c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7c:	je     0x412c81
  412c7e:	enter  0xebad,0x50
  412c82:	mov    esp,0x684e4a0e
  412c87:	out    dx,al
  412c88:	imul   ebx,eax,0x15d08ad7
  412c8e:	pop    es
  412c8f:	(bad)  
  412c90:	ficomp DWORD PTR [edx+0x766f7322]
  412c96:	cmp    BYTE PTR [ebp-0x3af816a1],cl
  412c9c:	push   ss
  412c9d:	int    0xb9
  412c9f:	in     eax,0xc7
  412ca1:	fs repnz mov al,0x58
  412ca5:	sbb    cl,0x4f
  412ca8:	push   ebp
  412ca9:	jae    0x412d08
  412cab:	mov    DWORD PTR [edx+0x26e7dced],ecx
  412cb1:	mov    ds:0x599d2e59,eax
  412cb6:	mov    dh,0x29
  412cb8:	jne    0x412c3d
  412cba:	sub    eax,0x45d61909
  412cbf:	jns    0x412d30
  412cc1:	mov    cl,0x47
  412cc3:	pop    esi
  412cc4:	aaa    
  412cc5:	in     eax,dx
  412cc6:	test   al,0xfd
  412cc8:	push   ss
  412cc9:	xchg   DWORD PTR [eax-0x6d],ebx
  412ccc:	std    
  412ccd:	cmp    eax,0x8151503
  412cd2:	jb     0x412c7c
  412cd4:	gs sbb eax,0xf329171b
  412cda:	stos   DWORD PTR es:[edi],eax
  412cdb:	push   ebp
  412cdc:	push   edi
  412cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cde:	hlt    
  412cdf:	xor    edx,DWORD PTR [ecx-0x3e523b83]
  412ce5:	add    BYTE PTR [esi],0xdb
  412ce8:	loop   0x412ccb
  412cea:	pop    es
  412ceb:	(bad)  
  412ced:	mov    al,0xed
  412cef:	add    cl,bl
  412cf1:	rcr    DWORD PTR [ecx+ecx*1-0x6d],0x82
  412cf6:	inc    eax
  412cf7:	mov    ah,0x5
  412cf9:	pop    edi
  412cfa:	jg     0x412cd0
  412cfc:	les    edi,FWORD PTR [esi+0x10c7b583]
  412d02:	rol    BYTE PTR [esi-0x74],1
  412d05:	into   
  412d06:	in     al,0xe1
  412d08:	xchg   esi,eax
  412d09:	push   edx
  412d0a:	adc    esp,DWORD PTR [ecx]
  412d0c:	ffree  st(5)
  412d0e:	and    al,0xda
  412d10:	sahf   
  412d11:	push   edi
  412d12:	xchg   bx,ax
  412d14:	lahf   
  412d15:	and    BYTE PTR [ebp-0x12],bl
  412d18:	cmp    bl,BYTE PTR [esi+edx*1]
  412d1b:	jge    0x412cef
  412d1d:	(bad)  
  412d1e:	cld    
  412d1f:	js     0x412d66
  412d21:	rcr    ebp,cl
  412d23:	popa   
  412d24:	repz adc al,0xd
  412d27:	push   0x77
  412d29:	nop
  412d2a:	shl    ch,cl
  412d2c:	aaa    
  412d2d:	sub    ch,BYTE PTR [edx]
  412d2f:	and    ebx,DWORD PTR [ebx-0x1a]
  412d32:	popf   
  412d33:	xor    dl,BYTE PTR [ebp+0x72]
  412d36:	scas   al,BYTE PTR es:[edi]
  412d37:	pop    edx
  412d38:	adc    ecx,DWORD PTR [edi]
  412d3a:	call   FWORD PTR [esi-0x36ee8408]
  412d40:	aam    0xe
  412d42:	mov    WORD PTR [edx+0x5be89f],ss
  412d48:	pop    eax
  412d49:	outs   dx,DWORD PTR ds:[esi]
  412d4a:	icebp  
  412d4b:	leave  
  412d4c:	mov    ecx,DWORD PTR ds:0x7e90b05c
  412d52:	dec    esi
  412d53:	sahf   
  412d54:	(bad)  
  412d55:	call   0x6cbe1b43
  412d5a:	call   0x3652:0x12861ea4
  412d61:	ins    DWORD PTR es:[edi],dx
  412d62:	push   ebp
  412d63:	mov    eax,0x1e128da
  412d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d69:	stos   BYTE PTR es:[edi],al
  412d6a:	push   edi
  412d6b:	mov    al,BYTE PTR [ecx-0x15]
  412d6e:	mov    al,ds:0x17e7e305
  412d73:	rcr    edx,0x89
  412d76:	fnstenv [eax-0x69]
  412d79:	xor    ah,BYTE PTR [esi+0x1d]
  412d7c:	cmp    dh,BYTE PTR [esp+eax*1-0x77728559]
  412d83:	shl    BYTE PTR [edx],cl
  412d85:	pop    edx
  412d86:	jo     0x412df0
  412d88:	pop    ds
  412d89:	push   edi
  412d8a:	(bad)  
  412d8b:	jne    0x412d5e
  412d8d:	inc    esi
  412d8e:	inc    esp
  412d8f:	xchg   DWORD PTR [eax-0x76],ebx
  412d92:	in     eax,dx
  412d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d94:	and    BYTE PTR [edx+ebp*2-0x31],bh
  412d98:	iret   
  412d99:	cvtps2pd xmm3,QWORD PTR [ecx]
  412d9c:	sbb    eax,0xd9a3250d
  412da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da2:	test   DWORD PTR [esi+ebx*4+0x5],ecx
  412da6:	lea    eax,[eax]
  412da8:	lods   al,BYTE PTR ds:[esi]
  412da9:	ins    BYTE PTR es:[edi],dx
  412daa:	test   al,0xd6
  412dac:	add    cl,BYTE PTR [edi+eax*4-0x23868d40]
  412db3:	xlat   BYTE PTR ds:[ebx]
  412db4:	or     BYTE PTR [esi-0x61],bh
  412db7:	out    dx,eax
  412db8:	jge    0x412d74
  412dba:	mov    dl,BYTE PTR [edi-0x72481313]
  412dc0:	jb     0x412e17
  412dc2:	push   ecx
  412dc3:	aaa    
  412dc4:	dec    edi
  412dc5:	xor    DWORD PTR [eax+0x14b84182],ecx
  412dcb:	dec    edi
  412dcc:	sub    DWORD PTR [eax],esi
  412dce:	mov    cl,0x41
  412dd0:	inc    edi
  412dd1:	cmp    ebp,DWORD PTR [esp+ebx*8-0x643eebae]
  412dd8:	js     0x412e40
  412dda:	je     0x412e3b
  412ddc:	ret    0x6196
  412ddf:	sub    al,BYTE PTR [ecx+eiz*2+0x599c501b]
  412de6:	pop    ebx
  412de7:	(bad)  
  412de8:	mov    cl,0x21
  412dea:	inc    eax
  412deb:	xchg   ebx,eax
  412dec:	adc    esp,ebx
  412dee:	push   edx
  412def:	mov    ah,0x70
  412df1:	pop    ecx
  412df2:	mov    ebp,0xe0301a95
  412df7:	aaa    
  412df8:	jecxz  0x412e02
  412dfa:	push   edi
  412dfb:	sbb    edx,DWORD PTR [edx-0x7f6432d]
  412e01:	mov    bh,0x9a
  412e03:	lahf   
  412e04:	fs pop edi
  412e06:	imul   esp,DWORD PTR [edi+0x44],0x71
  412e0a:	nop
  412e0b:	inc    esi
  412e0c:	push   ss
  412e0d:	sub    DWORD PTR [edi-0x4a5b8ba],ebp
  412e13:	call   0x4bc28c39
  412e18:	jne    0x412e71
  412e1a:	push   ebp
  412e1b:	nop
  412e1c:	pop    eax
  412e1d:	push   edi
  412e1e:	cmp    al,0x6e
  412e20:	fnstcw WORD PTR [edi+0x2a1ea2c0]
  412e26:	xor    ebx,DWORD PTR [ecx+0x3a]
  412e29:	aad    0xaa
  412e2b:	and    ecx,DWORD PTR [ebp-0xf]
  412e2e:	sahf   
  412e2f:	add    DWORD PTR [ebp+0x1b],ebp
  412e32:	dec    ebp
  412e33:	ja     0x412dd7
  412e35:	fsub   QWORD PTR [ebp-0x10b8b813]
  412e3b:	pop    ss
  412e3c:	jge    0x412e14
  412e3e:	test   eax,0x72b8ac0b
  412e44:	xor    eax,0x1ab66342
  412e49:	or     dh,BYTE PTR [ecx]
  412e4b:	xor    eax,0x84c0ef98
  412e50:	dec    DWORD PTR [eax-0x35]
  412e53:	adc    DWORD PTR [edi+0x20],0xf59ff1a
  412e5a:	retf   0x8e5
  412e5d:	sar    al,0xb3
  412e60:	nop
  412e61:	loop   0x412e09
  412e63:	add    eax,0xcb8d4b6a
  412e68:	inc    edx
  412e69:	sub    dh,ah
  412e6b:	mov    al,ds:0xdc63ab57
  412e70:	ret    
  412e71:	dec    esp
  412e72:	pop    eax
  412e73:	sti    
  412e74:	mov    ah,0x8c
  412e76:	stc    
  412e77:	lock jmp 0x412e2b
  412e7a:	shr    DWORD PTR cs:[edi+0x45],1
  412e7e:	adc    BYTE PTR [bx+di-0x1],ch
  412e82:	mov    al,ds:0xb1f973f5
  412e87:	and    al,0x37
  412e89:	push   edx
  412e8a:	bnd jns 0x412ead
  412e8d:	sbb    esi,esp
  412e8f:	inc    eax
  412e90:	push   es
  412e91:	nop
  412e92:	mov    dh,0xb3
  412e94:	imul   esp,DWORD PTR [ebp+ecx*2+0x33240323],0x7b
  412e9c:	aaa    
  412e9d:	inc    edx
  412e9e:	dec    ebp
  412e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea0:	mov    DWORD PTR [edi],ebp
  412ea2:	fadd   st,st(0)
  412ea4:	(bad)  
  412ea6:	mov    bl,0xc8
  412ea8:	(bad)  
  412ea9:	pushf  
  412eaa:	call   0x5d6c:0x778f0c
  412eb1:	xor    bh,BYTE PTR [ebp+0x60c3def3]
  412eb7:	les    ebp,FWORD PTR [edx+0x1bff95fc]
  412ebd:	mov    al,ds:0x827eb8c
  412ec2:	loopne 0x412e82
  412ec4:	ja     0x412f2f
  412ec6:	fsubr  st(1),st
  412ec8:	pop    edx
  412ec9:	js     0x412ecb
  412ecb:	fistp  WORD PTR [eax-0x76ababb7]
  412ed1:	fwait
  412ed2:	leave  
  412ed3:	xor    BYTE PTR cs:[esi+0x23],ah
  412ed7:	cmp    eax,DWORD PTR [ebp-0x7b61a16d]
  412edd:	lock lea ebx,[edi-0x2c4d2e41]
  412ee4:	mov    DWORD PTR [ebx-0x45],edi
  412ee7:	push   ds
  412ee8:	mov    edx,DWORD PTR [eax+esi*2]
  412eeb:	xchg   ecx,eax
  412eec:	stos   DWORD PTR es:[edi],eax
  412eed:	adc    al,BYTE PTR [eax+0x1e]
  412ef0:	ret    0x6b61
  412ef3:	in     al,0xb3
  412ef5:	nop
  412ef6:	mov    ch,0x62
  412ef8:	bound  ebp,QWORD PTR [eax]
  412efa:	cmp    al,0xbf
  412efc:	jg     0x412eb3
  412efe:	add    al,BYTE PTR [ecx-0x1e]
  412f01:	retf   0xe863
  412f04:	sub    eax,0xd317eeb0
  412f09:	jno    0x412ed3
  412f0b:	(bad)  
  412f0c:	(bad)  
  412f0d:	jmp    0x412eda
  412f0f:	test   al,0xe8
  412f11:	mov    ds:0x3cae8613,al
  412f16:	mov    ds:0xf95c567c,al
  412f1b:	xor    al,0x91
  412f1d:	adc    ah,bh
  412f1f:	pop    ebx
  412f20:	dec    eax
  412f21:	jge    0x412ecf
  412f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f24:	mov    eax,ds:0xdd8f920e
  412f29:	ret    
  412f2a:	pop    esp
  412f2b:	pusha  
  412f2c:	cmp    eax,0x6759053d
  412f31:	fsubr  QWORD PTR [ebx]
  412f33:	sbb    al,0x3e
  412f35:	in     eax,0xc7
  412f37:	sub    al,0xf0
  412f39:	data16 shr BYTE PTR [edx+0x35d1f819],1
  412f40:	loop   0x412f73
  412f42:	fiadd  DWORD PTR [eax-0x35]
  412f45:	or     eax,0xbe7deb06
  412f4a:	mov    cl,dh
  412f4c:	and    ah,BYTE PTR [ebx-0x2e]
  412f4f:	inc    dh
  412f51:	add    eax,0x9d36d34
  412f56:	add    BYTE PTR [edi],bl
  412f58:	or     dh,BYTE PTR [edx-0xe]
  412f5b:	and    BYTE PTR [esi+0x54d0839d],dl
  412f61:	dec    ecx
  412f62:	xchg   edi,eax
  412f63:	mov    edi,ecx
  412f65:	xor    bl,BYTE PTR [ebx-0x6611e6d4]
  412f6b:	in     eax,dx
  412f6c:	pop    edx
  412f6d:	aaa    
  412f6e:	push   ds
  412f6f:	sub    DWORD PTR [ebx],ebp
  412f71:	push   esi
  412f72:	mov    bh,0x75
  412f74:	int3   
  412f75:	adc    DWORD PTR [edi+eiz*8+0x327c527a],ebx
  412f7c:	int3   
  412f7d:	ret    0x4155
  412f80:	cmp    eax,DWORD PTR [ecx+edx*4+0x6]
  412f84:	aaa    
  412f85:	or     al,0x5a
  412f87:	adc    DWORD PTR [ecx],ecx
  412f89:	retf   
  412f8a:	(bad)  
  412f8b:	ds jl  0x412f74
  412f8e:	pop    ebp
  412f8f:	mov    bl,BYTE PTR [eax]
  412f91:	pop    es
  412f92:	jnp    0x412f4f
  412f94:	ret    
  412f95:	jmp    0xb3219900
  412f9a:	stos   DWORD PTR es:[edi],eax
  412f9b:	push   ebx
  412f9c:	jmp    0x9b584b6e
  412fa1:	leave  
  412fa2:	mov    ds:0x9ceb9f6a,eax
  412fa7:	(bad)  
  412fa8:	and    al,0x36
  412faa:	lods   eax,DWORD PTR ds:[esi]
  412fab:	call   0x89c4:0x8f263b2e
  412fb2:	fdivr  QWORD PTR [ecx]
  412fb4:	lahf   
  412fb5:	(bad)  
  412fb6:	daa    
  412fb7:	jmp    0xfbb547d0
  412fbc:	in     eax,dx
  412fbd:	out    dx,eax
  412fbe:	mov    dh,0x5b
  412fc0:	loope  0x413005
  412fc2:	into   
  412fc3:	pop    esi
  412fc4:	hlt    
  412fc5:	xchg   esi,eax
  412fc6:	scas   al,BYTE PTR es:[edi]
  412fc7:	add    al,0x45
  412fc9:	jp     0x41303d
  412fcb:	sub    DWORD PTR [edi+edi*1-0x59],ecx
  412fcf:	xchg   edx,eax
  412fd0:	int3   
  412fd1:	or     DWORD PTR ds:0xbb4f17b2,ebx
  412fd7:	cwde   
  412fd8:	nop
  412fd9:	std    
  412fda:	xchg   edx,eax
  412fdb:	jge    0x412fd7
  412fdd:	sub    dl,BYTE PTR [ecx+0x6a6c3da4]
  412fe3:	sar    DWORD PTR [esi],cl
  412fe5:	rcr    DWORD PTR [ecx],1
  412fe7:	jp     0x412f6b
  412fe9:	arpl   WORD PTR [edi+0xc],bp
  412fec:	sub    BYTE PTR [ecx],cl
  412fee:	(bad)  
  412fef:	jno    0x41303a
  412ff1:	data16 ins BYTE PTR es:[edi],dx
  412ff3:	dec    eax
  412ff4:	adc    edx,DWORD PTR [ecx]
  412ff6:	sbb    DWORD PTR [esi-0x2387c11c],esi
  412ffc:	lock (bad) 
  412ffe:	inc    ebx
  412fff:	lea    edi,[ebp+0x32871e5f]
  413005:	test   eax,0xd20acf65
  41300a:	xchg   esp,eax
  41300b:	lods   eax,DWORD PTR ds:[esi]
  41300c:	imul   eax,edi,0x1e
  41300f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413010:	or     esp,edi
  413012:	jle    0x41305d
  413014:	add    ebp,DWORD PTR [ebx-0x6018f6c0]
  41301a:	push   es
  41301b:	and    al,0x92
  41301d:	jmp    FWORD PTR [edi-0x6dc7f51b]
  413023:	xor    eax,0x5edfcbe4
  413028:	mov    bl,0x23
  41302a:	push   0x95ccd7ca
  41302f:	sbb    eax,0xc6d652ad
  413034:	icebp  
  413035:	jae    0x4130a9
  413037:	jne    0x413099
  413039:	mov    al,ds:0xb1918d29
  41303e:	adc    BYTE PTR [edi-0x60],bh
  413041:	mov    ebx,0x2af458c6
  413046:	sqrtps xmm5,XMMWORD PTR [ebx-0x68]
  41304a:	dec    eax
  41304b:	pop    eax
  41304c:	adc    eax,DWORD PTR [eax+eax*8+0xf]
  413050:	lds    eax,FWORD PTR [esi]
  413052:	add    BYTE PTR ds:0x39fc785b,dh
  413058:	and    edx,DWORD PTR ds:0xadd3cbfd
  41305e:	cmp    eax,0x796d9dee
  413063:	das    
  413064:	arpl   WORD PTR [ecx+0x4f],si
  413067:	(bad)
  41306b:	test   BYTE PTR [edx],ah
  41306d:	cmp    BYTE PTR [edx+0x72],dh
  413070:	sub    ebx,eax
  413072:	and    BYTE PTR [ebx],ch
  413074:	and    esi,DWORD PTR [edx-0x215f74ac]
  41307a:	push   ecx
  41307b:	icebp  
  41307c:	retf   
  41307d:	cmc    
  41307e:	sbb    dh,BYTE PTR [esi]
  413080:	mov    ebx,0x4b8e1cbd
  413085:	inc    DWORD PTR [ebp-0x55]
  413088:	mov    eax,ds:0xfb92701c
  41308d:	jne    0x413024
  41308f:	xor    ah,BYTE PTR [ecx]
  413091:	xchg   ecx,eax
  413092:	daa    
  413093:	mov    esp,0xfc91512f
  413098:	pop    ebp
  413099:	cmovl  edx,DWORD PTR [ecx-0x6a]
  41309d:	fstp   TBYTE PTR [esi-0x7433f931]
  4130a3:	cmp    esi,DWORD PTR [ecx+0x4e45e360]
  4130a9:	push   0x57
  4130ab:	fdivr  DWORD PTR [edi+0x3a]
  4130ae:	div    ch
  4130b0:	sub    al,0x97
  4130b2:	jle    0x41307e
  4130b4:	ins    BYTE PTR es:[edi],dx
  4130b5:	or     eax,0xaf5587c4
  4130ba:	fidivr WORD PTR [ecx+0x5f]
  4130bd:	and    esp,DWORD PTR [ebp+0xb]
  4130c0:	mov    esi,0x13ae98c3
  4130c5:	data16 icebp 
  4130c7:	shl    dl,cl
  4130c9:	sbb    eax,0xc7788da0
  4130ce:	xor    eax,0x2bbc4c50
  4130d3:	aam    0xa9
  4130d5:	popf   
  4130d6:	sbb    BYTE PTR [eax+0x5de0d1e9],bh
  4130dc:	dec    edi
  4130dd:	sub    BYTE PTR ds:0x62347b50,cl
  4130e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130e5:	or     al,0x57
  4130e7:	cmp    DWORD PTR [esi-0x3b],esi
  4130ea:	mov    edi,0x3b580835
  4130ef:	cmp    ebx,esi
  4130f1:	adc    al,0x4f
  4130f3:	jno    0x4130f9
  4130f5:	mov    ecx,0x21f2d07b
  4130fa:	ja     0x413084
  4130fc:	addr16 pop edx
  4130fe:	(bad)  
  4130ff:	in     eax,0x53
  413101:	scas   eax,DWORD PTR es:[edi]
  413102:	fxch   st(4)
  413104:	shl    DWORD PTR [esi],0x64
  413107:	add    al,0x37
  413109:	lds    ebx,FWORD PTR [ebx]
  41310b:	xor    BYTE PTR fs:[esi+0x74aac50e],0xf3
  413113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413114:	les    esi,FWORD PTR [esi+0x2e]
  413117:	sub    BYTE PTR [edx+0x47],bh
  41311a:	or     al,0xca
  41311c:	push   esi
  41311d:	add    eax,0xf29276d9
  413122:	mov    ds,WORD PTR [ebp-0xfa2c090]
  413128:	pop    ebp
  413129:	fdivr  DWORD PTR [edx-0xa]
  41312c:	sti    
  41312d:	lods   eax,DWORD PTR ds:[esi]
  41312e:	aad    0x6e
  413130:	xor    eax,0x29cda228
  413135:	xchg   BYTE PTR [edi+ecx*4-0x52],ah
  413139:	mov    bh,0xc0
  41313b:	pushf  
  41313c:	stc    
  41313d:	scas   al,BYTE PTR es:[edi]
  41313e:	(bad)  
  41313f:	int3   
  413140:	xor    BYTE PTR [ebx],bl
  413142:	jbe    0x41311b
  413144:	lock outs dx,BYTE PTR ds:[esi]
  413146:	cvttps2pi mm6,QWORD PTR [esp+eax*1-0x7e230538]
  41314e:	jae    0x4130ec
  413150:	mov    BYTE PTR [edx],ch
  413152:	mov    bh,0x64
  413154:	sbb    al,0xdb
  413156:	(bad)  
  413157:	in     al,dx
  413158:	and    ch,BYTE PTR [esi+0x76c58581]
  41315e:	inc    esi
  41315f:	sub    ch,dl
  413161:	dec    al
  413163:	(bad)  
  413165:	data16 mov bh,0xd4
  413168:	xchg   ebx,eax
  413169:	imul   eax,DWORD PTR [edi],0x999f4621
  41316f:	aam    0x47
  413171:	push   ebp
  413172:	pushf  
  413173:	mov    eax,DWORD PTR [edx+0x6d]
  413176:	cld    
  413177:	ds pop ecx
  413179:	sub    DWORD PTR [eax-0xb],edx
  41317c:	push   ss
  41317d:	fsubrp st(6),st
  41317f:	jo     0x4131ce
  413181:	push   ecx
  413182:	shl    BYTE PTR [edi+ebp*2+0x155be36],cl
  413189:	mov    ds:0x765992b3,eax
  41318e:	fimul  WORD PTR [ecx+0x66]
  413191:	mov    ch,0xf7
  413193:	xor    bh,BYTE PTR [edx+0x10]
  413196:	xor    DWORD PTR [eax-0x14c2836d],0x6aa18acf
  4131a0:	fstp   DWORD PTR [ebx]
  4131a2:	ret    
  4131a3:	cmp    DWORD PTR [edx],edi
  4131a5:	(bad)  
  4131a6:	lods   al,BYTE PTR ds:[esi]
  4131a7:	push   esp
  4131a8:	rcl    bh,cl
  4131aa:	jne    0x41317a
  4131ac:	xor    eax,0x4983fe40
  4131b1:	and    al,0x74
  4131b3:	pop    ecx
  4131b4:	mov    edi,0xac5b1f4f
  4131b9:	sbb    eax,0x86c6ccba
  4131be:	mov    edi,ecx
  4131c0:	sbb    al,0xfd
  4131c2:	dec    esp
  4131c3:	fiadd  DWORD PTR [ecx-0x4b]
  4131c6:	mov    ecx,0x5c0ddf8e
  4131cb:	add    eax,0xeadf6840
  4131d0:	ss icebp 
  4131d2:	xchg   ecx,eax
  4131d3:	rol    DWORD PTR [ebp-0x77],1
  4131d6:	mov    dh,0x8f
  4131d8:	cmp    BYTE PTR [edx+0x6e],bh
  4131db:	sub    ebx,0x5c
  4131de:	push   ss
  4131df:	inc    edi
  4131e0:	adc    DWORD PTR [esi-0x44fce735],ebp
  4131e6:	mov    edi,0x8a6a0b01
  4131eb:	ret    0x3df5
  4131ee:	data16 int 0x15
  4131f1:	aaa    
  4131f2:	popf   
  4131f3:	pop    esp
  4131f4:	fistp  DWORD PTR [esi]
  4131f6:	jne    0x413243
  4131f8:	push   ds
  4131f9:	jmp    0x88bd:0xf3d962e7
  413200:	lea    esp,[edx+0x51]
  413203:	pop    ds
  413204:	jg     0x413258
  413206:	in     al,0x32
  413208:	xchg   edi,eax
  41320a:	or     eax,0x6592b545
  41320f:	xor    esp,esi
  413211:	idiv   eax
  413213:	sub    eax,0x1762683e
  413218:	aad    0x82
  41321a:	mov    al,ds:0xe0211d59
  41321f:	bound  edi,QWORD PTR [edx]
  413221:	xor    ebp,DWORD PTR [eax+0x68]
  413224:	push   cs
  413225:	xchg   ebp,eax
  413226:	les    esp,FWORD PTR [ecx+0x14]
  413229:	pop    ebx
  41322a:	pop    es
  41322b:	stc    
  41322c:	jb     0x413250
  41322e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41322f:	fistp  WORD PTR [edi+0x6e]
  413232:	(bad)  
  413233:	test   eax,0x4aa66a13
  413238:	mov    esp,0xcd55dfe7
  41323d:	lea    edi,[edi+0x78981fc6]
  413243:	or     bl,BYTE PTR [ecx+0x110db0fe]
  413249:	mov    WORD PTR [ecx-0x26],ds
  41324c:	leave  
  41324d:	(bad)  
  41324e:	or     ah,BYTE PTR [ecx]
  413250:	iret   
  413251:	xor    DWORD PTR [esi],0x93efd0f8
  413257:	mov    ah,0x8e
  413259:	push   esp
  41325a:	add    esi,esp
  41325c:	pop    edi
  41325d:	xchg   esp,eax
  41325e:	scas   al,BYTE PTR es:[edi]
  41325f:	test   eax,0x85145609
  413264:	loopne 0x4131e9
  413266:	push   esi
  413267:	lock or bl,BYTE PTR [ebx+0x1816ec47]
  41326e:	test   eax,0x39242dac
  413273:	hlt    
  413274:	or     al,0x52
  413276:	ds push esi
  413278:	(bad)  
  413279:	js     0x413265
  41327b:	xchg   ecx,edx
  41327d:	sub    BYTE PTR [eax+0x3],dl
  413280:	test   BYTE PTR [edx-0x64],bl
  413283:	jo     0x4132cf
  413285:	inc    edi
  413286:	push   es
  413287:	add    ebp,eax
  413289:	push   ebp
  41328a:	pop    edi
  41328b:	test   BYTE PTR [edi+0x8cdd36f],bh
  413291:	aam    0x29
  413293:	loope  0x413274
  413295:	and    al,0xe
  413297:	pop    eax
  413298:	mov    ds:0x3edd375a,eax
  41329d:	sbb    DWORD PTR [edx+ebp*2],esp
  4132a0:	inc    ebx
  4132a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132a2:	add    DWORD PTR [bx-0x2b32],esp
  4132a7:	jmp    0x41328d
  4132a9:	pusha  
  4132aa:	in     eax,dx
  4132ab:	cmp    BYTE PTR [eax],0xbc
  4132ae:	sub    bl,BYTE PTR [ebp+0x779ab8ee]
  4132b4:	dec    esi
  4132b5:	add    al,0x5d
  4132b7:	xchg   edi,eax
  4132b8:	and    al,0x89
  4132ba:	push   eax
  4132bb:	xchg   BYTE PTR [edi+0x461e72d3],ah
  4132c1:	adc    esi,DWORD PTR [eax-0x79]
  4132c4:	xchg   dh,al
  4132c6:	aaa    
  4132c7:	jae    0x4132cd
  4132c9:	mov    eax,ds:0x68d7dee9
  4132ce:	adc    al,0x9
  4132d0:	sub    ch,BYTE PTR [ecx]
  4132d2:	mov    esp,ecx
  4132d4:	out    dx,eax
  4132d5:	mov    ?,eax
  4132d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132d8:	fcmovne st,st(7)
  4132da:	loopne 0x413314
  4132dc:	sti    
  4132dd:	outs   dx,DWORD PTR ds:[esi]
  4132de:	push   0x3b370ca8
  4132e3:	pop    ebp
  4132e4:	fcomip st,st(0)
  4132e6:	arpl   WORD PTR [ebx+0x70],ax
  4132e9:	xor    dh,al
  4132eb:	lods   eax,DWORD PTR ds:[esi]
  4132ec:	test   al,0xd8
  4132ee:	fstp   st(0)
  4132f0:	out    0x78,al
  4132f2:	fwait
  4132f3:	ja     0x4132ff
  4132f5:	dec    ebp
  4132f6:	mov    ?,WORD PTR [ecx-0x48]
  4132f9:	arpl   WORD PTR ds:0x9f94a4f2,di
  4132ff:	push   ds
  413300:	shr    BYTE PTR [edi+0x3034afa4],1
  413306:	jge    0x4132dc
  413308:	fsub   QWORD PTR [ecx+0xd]
  41330b:	lds    edx,FWORD PTR [ebp+0x54]
  41330e:	push   esi
  41330f:	mov    DWORD PTR [ebp-0x6],ecx
  413312:	clc    
  413313:	adc    al,0x20
  413315:	imul   esp,DWORD PTR [edi],0xd68091dc
  41331b:	fcomp  DWORD PTR [esi+0x39]
  41331e:	and    al,0x84
  413320:	mov    ebp,0xd19bcb81
  413325:	lods   al,BYTE PTR ds:[esi]
  413326:	adc    al,BYTE PTR [eax+ebp*4]
  413329:	xor    DWORD PTR [ebx],0x6c1bff60
  41332f:	sub    eax,0x7964df8
  413334:	fidiv  DWORD PTR [eax-0x64]
  413337:	push   ds
  413338:	pop    ebx
  413339:	mov    dh,0xa1
  41333b:	cmc    
  41333c:	cli    
  41333d:	in     eax,dx
  41333e:	cdq    
  41333f:	adc    al,0xfd
  413341:	and    ah,al
  413343:	(bad)  
  413344:	xchg   ebp,eax
  413345:	adc    edx,DWORD PTR [esi]
  413347:	add    cl,BYTE PTR [esi]
  413349:	ss ja  0x413399
  41334c:	add    BYTE PTR [edx],0x99
  41334f:	inc    esi
  413350:	inc    esi
  413351:	clc    
  413352:	mov    ecx,0xf64b5f20
  413357:	aam    0x6e
  413359:	pop    esi
  41335a:	in     eax,dx
  41335b:	push   ss
  41335c:	data16 cs bnd jp 0x413360
  413361:	jg     0x413373
  413363:	outs   dx,DWORD PTR ds:[esi]
  413364:	or     al,ah
  413366:	inc    esp
  413367:	mov    esi,ebp
  413369:	push   esp
  41336a:	mov    ds:0xc95e58c3,eax
  41336f:	mov    al,0x7d
  413371:	jb     0x4132fe
  413373:	lahf   
  413374:	mul    al
  413376:	add    ebp,DWORD PTR [edx+ecx*4-0x74e44cd7]
  41337d:	jbe    0x413357
  41337f:	arpl   si,sp
  413381:	scas   eax,DWORD PTR es:[edi]
  413382:	push   ebp
  413383:	fnsave ds:0x50791736
  413389:	not    DWORD PTR [ecx]
  41338b:	pop    es
  41338c:	inc    eax
  41338d:	rcr    DWORD PTR es:[ebp-0x7bcbd02],0xe7
  413395:	add    al,0xad
  413397:	int3   
  413398:	xchg   ecx,eax
  413399:	shl    edi,0xf6
  41339c:	mov    dh,0xca
  41339e:	bound  ebp,QWORD PTR [ebp+eiz*8+0x4047c9e]
  4133a5:	outs   dx,BYTE PTR ds:[esi]
  4133a6:	jno    0x413427
  4133a8:	mov    edi,0xcab8ecf
  4133ad:	loop   0x41341a
  4133af:	xchg   ebx,eax
  4133b0:	test   BYTE PTR [ebp-0x39],dh
  4133b3:	inc    ebx
  4133b4:	(bad)  
  4133b5:	fdiv   DWORD PTR [esi]
  4133b7:	or     eax,0xc88836fc
  4133bc:	or     ebp,DWORD PTR [eax]
  4133be:	fisubr WORD PTR [edx+edi*2+0x1026d399]
  4133c5:	cld    
  4133c6:	ins    BYTE PTR es:[edi],dx
  4133c7:	enter  0xedb1,0x50
  4133cb:	jecxz  0x413441
  4133cd:	cmp    dh,BYTE PTR [edx-0x69999394]
  4133d3:	mov    WORD PTR [edx],es
  4133d5:	fadd   st,st(5)
  4133d7:	retf   0x5834
  4133da:	cmp    esi,0x8f1185cd
  4133e0:	nop
  4133e1:	or     al,0xb5
  4133e3:	push   esp
  4133e4:	pop    edx
  4133e5:	shr    DWORD PTR [eax-0x1bd7d849],1
  4133eb:	in     eax,0x1e
  4133ed:	mov    cl,BYTE PTR [ecx+0x109cf49b]
  4133f3:	das    
  4133f4:	(bad)  
  4133f5:	retw   
  4133f7:	add    al,0xb
  4133f9:	outs   dx,BYTE PTR ds:[esi]
  4133fa:	cli    
  4133fb:	sbb    al,0x9b
  4133fd:	add    BYTE PTR [ecx-0x4128b4fe],0x10
  413404:	sti    
  413405:	pop    ecx
  413406:	and    edx,DWORD PTR [ebx-0x65]
  413409:	popa   
  41340a:	adc    DWORD PTR [esi+0x294393a3],ebp
  413410:	jmp    0x6b82:0x1be195d4
  413417:	mov    ebp,DWORD PTR [ecx]
  413419:	mov    dl,BYTE PTR cs:[eax]
  41341c:	das    
  41341d:	xor    ecx,eax
  41341f:	fdivr  QWORD PTR [ebp+0x16]
  413422:	jo     0x4133e8
  413424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413425:	or     eax,0xf42c7b4e
  41342a:	aam    0xc0
  41342c:	sub    eax,0xc2365ee1
  413431:	jbe    0x413434
  413433:	jo     0x4133c1
  413435:	mov    cl,0xd1
  413437:	mov    edi,0xff3e758c
  41343c:	and    eax,0x576117dd
  413441:	repnz mov ebx,0x31dfd14d
  413447:	pop    es
  413448:	test   esi,ecx
  41344a:	mov    fs,WORD PTR ds:0x51516832
  413450:	fldcw  WORD PTR [ebx]
  413452:	aas    
  413453:	sub    al,0x53
  413455:	(bad)  
  413456:	aam    0x4f
  413458:	add    al,BYTE PTR ds:0x4e40d90a
  41345e:	mov    eax,0x912997f9
  413464:	mov    esp,0x6b6d6f4
  413469:	inc    eax
  41346a:	sbb    BYTE PTR [ebp+0x3ab7ec74],0x31
  413471:	push   ebx
  413472:	mov    edx,0x984a5c84
  413477:	sub    BYTE PTR [ebx+0x50],cl
  41347a:	adc    BYTE PTR [esi],dl
  41347c:	daa    
  41347d:	out    dx,eax
  41347e:	int3   
  41347f:	sbb    dh,BYTE PTR [edi+0xc]
  413482:	pop    edi
  413483:	mov    edx,0x773791bf
  413488:	ins    BYTE PTR es:[edi],dx
  413489:	mov    dl,0x51
  41348b:	push   ss
  41348c:	push   ebx
  41348d:	outs   dx,BYTE PTR ds:[esi]
  41348e:	daa    
  41348f:	or     ebx,DWORD PTR [eax-0x27e668af]
  413495:	dec    ebx
  413496:	push   es
  413497:	xchg   ebx,eax
  413498:	out    dx,al
  413499:	cmp    eax,0x18e1d1dc
  41349e:	xchg   edx,eax
  41349f:	dec    eax
  4134a0:	xor    ebx,DWORD PTR [ecx+eiz*2]
  4134a3:	xor    al,0x3e
  4134a5:	pop    ss
  4134a6:	out    0x5c,eax
  4134a8:	mov    cl,0x56
  4134aa:	stos   BYTE PTR es:[edi],al
  4134ab:	push   edi
  4134ac:	inc    ecx
  4134ad:	mov    esi,0x3d0aac0a
  4134b2:	push   cs
  4134b3:	outs   dx,DWORD PTR ds:[esi]
  4134b4:	clc    
  4134b5:	add    al,0x7
  4134b7:	aam    0xe3
  4134b9:	xchg   ebp,ecx
  4134bb:	mov    ebx,DWORD PTR [esi+0x1d31333b]
  4134c1:	ror    BYTE PTR [edi-0x31bda9cd],1
  4134c7:	lods   al,BYTE PTR ds:[esi]
  4134c8:	jle    0x41345d
  4134ca:	sti    
  4134cb:	sahf   
  4134cc:	seta   BYTE PTR [eax]
  4134cf:	mov    eax,ss
  4134d1:	cmp    BYTE PTR [ebx],bl
  4134d3:	cli    
  4134d4:	out    0x6d,eax
  4134d6:	je     0x4134c9
  4134d8:	sbb    DWORD PTR [ecx-0x4f],edi
  4134db:	inc    eax
  4134dc:	into   
  4134dd:	mov    al,BYTE PTR [eax+0x78]
  4134e0:	mov    ds:0xdf884cad,eax
  4134e5:	std    
  4134e6:	es jg  0x413481
  4134e9:	nop
  4134ea:	jg     0x4134f4
  4134ec:	cmc    
  4134ed:	mov    al,0x13
  4134ef:	daa    
  4134f0:	adc    esp,DWORD PTR [ebx-0x7f]
  4134f3:	mov    ecx,0x9c184f73
  4134f8:	outs   dx,BYTE PTR gs:[esi]
  4134fa:	(bad)  
  4134fb:	(bad)  
  4134fd:	mov    edi,0x4caa1f60
  413502:	fild   QWORD PTR [edi]
  413504:	cmp    eax,0xf031d3a4
  41350a:	sbb    BYTE PTR [edi*4-0x4fed098a],al
  413511:	lods   eax,DWORD PTR ds:[esi]
  413512:	lea    edx,[ebx+0x23726ff5]
  413518:	scas   eax,DWORD PTR es:[edi]
  413519:	sbb    eax,0xd751ab7e
  41351e:	mov    esi,ss
  413520:	cmp    DWORD PTR [edi-0x6f27526a],edx
  413526:	fistp  DWORD PTR [eax+0x4789850a]
  41352c:	ins    DWORD PTR es:[edi],dx
  41352d:	mov    esp,0x2807cb72
  413532:	add    BYTE PTR [ecx-0x76],0xa2
  413536:	bound  edi,QWORD PTR [esi-0x2201bcca]
  41353c:	dec    ebp
  41353d:	sbb    dl,BYTE PTR [eax-0x74]
  413540:	jo     0x413539
  413542:	jns    0x4135c2
  413544:	jb     0x413549
  413546:	push   ds
  413547:	mov    esp,0x999e2399
  41354c:	into   
  41354d:	adc    al,0x31
  41354f:	stos   DWORD PTR es:[edi],eax
  413550:	mov    dl,0x24
  413552:	(bad)  
  413553:	out    dx,al
  413554:	inc    eax
  413555:	dec    esi
  413556:	inc    ebp
  413557:	out    dx,eax
  413558:	int3   
  413559:	dec    edi
  41355a:	add    ecx,DWORD PTR [ecx]
  41355c:	pop    edx
  41355d:	pushf  
  41355e:	push   eax
  41355f:	xchg   esp,esp
  413561:	aam    0x98
  413563:	sbb    DWORD PTR [edi-0x1a],edi
  413566:	lods   eax,DWORD PTR ds:[esi]
  413567:	arpl   bx,dx
  413569:	add    al,BYTE PTR [eax+0x4e]
  41356c:	inc    ebp
  41356d:	jne    0x413532
  41356f:	pop    eax
  413570:	cli    
  413571:	rol    BYTE PTR [ebp+0x8cc64e2],cl
  413577:	shl    ah,cl
  413579:	call   0x4a2b0ba
  41357e:	sub    edx,DWORD PTR [esp+ecx*8-0x3ddb87bb]
  413585:	out    dx,al
  413586:	ja     0x413561
  413588:	stos   DWORD PTR es:[edi],eax
  413589:	popa   
  41358a:	cmc    
  41358b:	(bad)  
  41358c:	dec    esp
  41358d:	xor    ebx,edx
  41358f:	aam    0x40
  413591:	inc    esp
  413592:	call   0xaaf3:0x2059aa9a
  413599:	mov    bh,ch
  41359b:	sahf   
  41359c:	repnz mov bl,0xa5
  41359f:	pusha  
  4135a0:	ret    
  4135a1:	shl    DWORD PTR [eax+0x37],1
  4135a4:	leave  
  4135a5:	and    bl,BYTE PTR ds:0x14d56c43
  4135ab:	and    al,0x7e
  4135ad:	sbb    ecx,edi
  4135af:	pop    ebp
  4135b0:	and    dh,BYTE PTR [ecx-0x20a4e269]
  4135b6:	retf   
  4135b7:	inc    edi
  4135b8:	inc    esp
  4135b9:	mov    ebx,0x7ef40e08
  4135be:	leave  
  4135bf:	retf   
  4135c0:	sub    eax,0x7696edf5
  4135c5:	mov    ebx,0x92fa9978
  4135ca:	and    eax,0x2f508ef
  4135cf:	cmp    ecx,esp
  4135d1:	xor    eax,0x3bc1dfdc
  4135d6:	push   edx
  4135d7:	data16 add bl,BYTE PTR [ebp-0x36ca8bdb]
  4135de:	or     BYTE PTR [esi-0x18],ah
  4135e1:	fimul  WORD PTR [ecx-0x1fa21ead]
  4135e7:	and    esi,DWORD PTR [edx]
  4135e9:	(bad)  
  4135ea:	in     al,0x15
  4135ec:	push   esp
  4135ed:	pop    edx
  4135ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ef:	leave  
  4135f0:	(bad)  
  4135f1:	iret   
  4135f2:	outs   dx,DWORD PTR ds:[esi]
  4135f3:	dec    esi
  4135f4:	or     al,0x53
  4135f6:	jecxz  0x413615
  4135f8:	jmp    0xfcaf:0xe3c88b5d
  4135ff:	cmc    
  413600:	pop    ebp
  413601:	jmp    0x8a050388
  413606:	addr16 and bh,dh
  413609:	mov    ecx,0xf2d05d32
  41360e:	and    eax,0x99428856
  413613:	jle    0x413679
  413615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413616:	outs   dx,DWORD PTR ds:[esi]
  413617:	mov    ds:0x8ec16336,eax
  41361c:	pop    eax
  41361d:	cmp    al,0xc2
  41361f:	sub    DWORD PTR [edx],ebx
  413621:	sbb    bh,dl
  413623:	aas    
  413624:	add    bl,BYTE PTR [edi+0x515549d5]
  41362a:	push   0x10
  41362c:	nop
  41362d:	mov    ds:0xbb167b38,al
  413632:	add    bl,dl
  413634:	ds mov eax,0x80981b7b
  41363a:	push   esi
  41363b:	mov    ch,0x39
  41363d:	(bad)  
  41363e:	mov    al,0xaa
  413640:	or     ecx,edx
  413642:	(bad)  
  413644:	jge    0x413637
  413646:	cmp    eax,0xa7e1a405
  41364b:	lds    ecx,FWORD PTR [edx+0x0]
  41364e:	call   0x1f38:0x69ad74be
  413655:	repnz cmp DWORD PTR [esi+0x7e],ecx
  413659:	in     al,dx
  41365a:	or     BYTE PTR [edi+ecx*8],al
  41365d:	das    
  41365e:	ds loope 0x413606
  413661:	sbb    edx,DWORD PTR [eax]
  413663:	pop    ebp
  413664:	add    dl,BYTE PTR [eax-0x40]
  413667:	hlt    
  413668:	mov    edi,0x664b0b3b
  41366d:	mov    al,ds:0xdf3088e9
  413672:	mov    al,ds:0xebd8736c
  413677:	inc    ebp
  413678:	sub    al,0xe3
  41367a:	leave  
  41367b:	std    
  41367c:	add    BYTE PTR [edx+0x58a27389],0xc7
  413683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413684:	pop    esi
  413685:	pop    esi
  413686:	sub    bh,BYTE PTR [ecx+0x7d53f2fa]
  41368c:	sub    eax,0xe7bc1beb
  413691:	pop    edx
  413692:	xchg   ebp,eax
  413693:	repnz aas 
  413695:	ins    BYTE PTR es:[edi],dx
  413696:	xor    eax,0x9a0070f5
  41369b:	out    0x2c,eax
  41369d:	jge    0x413687
  41369f:	dec    esi
  4136a0:	sub    bl,ch
  4136a2:	fisttp DWORD PTR [eax+0x623ce356]
  4136a8:	jge    0x413721
  4136aa:	mov    edx,0xc86b9238
  4136af:	retf   
  4136b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b1:	mov    dh,0xfd
  4136b3:	sbb    bh,BYTE PTR [eax+0x56]
  4136b6:	push   esp
  4136b7:	adc    al,0x3
  4136b9:	jns    0x4136bb
  4136bb:	jg     0x413655
  4136bd:	sbb    eax,0x8444f804
  4136c2:	xchg   edx,eax
  4136c3:	retf   
  4136c4:	(bad)  
  4136c6:	out    dx,al
  4136c7:	xchg   edi,eax
  4136c8:	xchg   ebx,eax
  4136c9:	sti    
  4136ca:	jmp    0x912d:0xea21d183
  4136d1:	clc    
  4136d2:	add    al,0x16
  4136d4:	enter  0x8ad4,0x94
  4136d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136d9:	xchg   esp,eax
  4136da:	inc    ebx
  4136db:	push   es
  4136dc:	retf   0xe740
  4136df:	(bad)  
  4136e1:	adc    DWORD PTR [ebx],eax
  4136e3:	cdq    
  4136e4:	or     eax,0x3327d1c9
  4136e9:	add    eax,0xaa04da22
  4136ee:	xor    dh,BYTE PTR [ecx]
  4136f0:	arpl   cx,dx
  4136f2:	sbb    esp,DWORD PTR [edi+ebx*4-0x184b2943]
  4136f9:	jp     0x41368d
  4136fb:	hlt    
  4136fc:	push   ecx
  4136fd:	fist   WORD PTR ds:0x6fe970d1
  413703:	in     eax,0xd0
  413705:	and    ch,BYTE PTR [ebp+0x35]
  413708:	jg     0x413717
  41370a:	inc    eax
  41370b:	aam    0xd3
  41370d:	push   esi
  41370e:	retf   
  41370f:	or     al,0xe6
  413711:	dec    ebx
  413712:	mov    fs,WORD PTR ds:0x1b973a3a
  413718:	sbb    BYTE PTR [ebx-0x69],ch
  41371b:	and    DWORD PTR [ecx],edx
  41371d:	cmp    ah,bl
  41371f:	mov    dl,0x13
  413721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413722:	outs   dx,DWORD PTR ds:[esi]
  413723:	pop    ds
  413724:	xchg   esp,eax
  413725:	jae    0x2696235c
  41372b:	inc    ebp
  41372c:	inc    ebx
  41372d:	mov    ds:0xa7d2d9bb,al
  413732:	sub    DWORD PTR [eax-0x59],0x65329fdc
  413739:	jp     0x41376e
  41373b:	mov    ch,0x62
  41373d:	(bad)  
  41373e:	test   eax,0xc2715bcf
  413743:	push   0x5cc01f96
  413748:	cmp    eax,0x4493aca6
  41374d:	cdq    
  41374e:	das    
  41374f:	popf   
  413750:	xchg   bh,cl
  413752:	mov    ah,BYTE PTR [ecx-0x17]
  413755:	dec    ebx
  413756:	push   esi
  413757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413758:	mov    dh,0x5f
  41375a:	pop    edx
  41375b:	pop    eax
  41375c:	push   esp
  41375d:	mov    dl,0xd0
  41375f:	mov    cl,0xeb
  413761:	lahf   
  413762:	inc    ebp
  413763:	add    al,BYTE PTR [ebx-0x22]
  413766:	sbb    eax,0xac56e149
  41376b:	and    BYTE PTR [ebx],ah
  41376d:	fnsave [edi]
  41376f:	xchg   edi,eax
  413770:	test   BYTE PTR [ebp+0x15],dl
  413773:	xor    dh,bl
  413775:	and    esp,ecx
  413777:	sub    DWORD PTR [esp+ebp*8+0x6ba90094],edi
  41377e:	add    BYTE PTR [edi+esi*2-0x26],cl
  413782:	fcmovnb st,st(6)
  413784:	sub    cl,BYTE PTR [edx+0x6d]
  413787:	jne    0x41377b
  413789:	stos   DWORD PTR es:[edi],eax
  41378a:	les    ebx,FWORD PTR [ecx]
  41378c:	and    DWORD PTR [ecx+0x6e2f1fc6],eax
  413792:	sbb    al,0xd8
  413794:	xchg   ebp,eax
  413795:	dec    edi
  413796:	inc    edx
  413797:	xor    al,0x74
  413799:	and    ecx,ecx
  41379b:	jno    0x413781
  41379d:	xor    bl,cl
  41379f:	outs   dx,BYTE PTR ds:[esi]
  4137a0:	jge    0x4137cf
  4137a2:	ficom  WORD PTR [ecx+0x33]
  4137a5:	mov    DWORD PTR [ebp+0x4196c8f8],ecx
  4137ab:	mov    ebp,0x76b9c0be
  4137b0:	das    
  4137b1:	daa    
  4137b2:	xor    BYTE PTR [edi],dh
  4137b4:	jns    0x413743
  4137b6:	and    al,0x85
  4137b8:	dec    edi
  4137b9:	in     al,0x45
  4137bb:	push   ebp
  4137bc:	sbb    DWORD PTR [edx+0x344235e7],eax
  4137c2:	inc    esi
  4137c3:	push   ss
  4137c4:	adc    eax,0x3e7104d2
  4137c9:	mov    ecx,0x3f5fa00c
  4137ce:	fldcw  WORD PTR [ebp+0x303d4045]
  4137d4:	cmp    DWORD PTR [ecx-0x483d2cf6],0xffffff99
  4137db:	cmp    BYTE PTR [edx],ah
  4137dd:	sbb    al,0xa1
  4137df:	mov    cl,0xd5
  4137e1:	ins    BYTE PTR es:[edi],dx
  4137e2:	xor    al,0x54
  4137e4:	push   esi
  4137e5:	retf   
  4137e6:	inc    eax
  4137e7:	xchg   edx,eax
  4137e8:	mov    edx,esp
  4137ea:	ds cs fcomip st,st(2)
  4137ee:	mov    ecx,DWORD PTR [edi-0x3d24a82f]
  4137f4:	and    BYTE PTR [edx-0x34ed0953],al
  4137fa:	sahf   
  4137fb:	cli    
  4137fc:	aas    
  4137fd:	and    eax,0xa5f02e2
  413802:	push   cs
  413803:	fcom   QWORD PTR [edx-0x5]
  413806:	lods   al,BYTE PTR ds:[esi]
  413807:	add    eax,0xeaabcfea
  41380c:	je     0x4137c6
  41380e:	loop   0x413797
  413810:	loopne 0x413839
  413812:	nop
  413813:	and    ecx,DWORD PTR [esi-0xc2bd90a]
  413819:	mov    cl,ah
  41381b:	(bad)  
  41381c:	shl    bh,cl
  41381e:	std    
  41381f:	push   esi
  413820:	lock xchg DWORD PTR ds:0xeee4e8f,eax
  413827:	push   ss
  413828:	or     BYTE PTR [esi],0xce
  41382b:	mov    esi,0x64daca93
  413830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413831:	mov    DWORD PTR [ebp-0x1c],eax
  413834:	and    al,0x5f
  413836:	loopne 0x4137fc
  413838:	push   eax
  413839:	cmp    BYTE PTR [ebx],0x21
  41383c:	cld    
  41383d:	add    eax,0x9eecf391
  413842:	rcl    DWORD PTR [esi+edx*4-0x6],1
  413846:	inc    ecx
  413847:	std    
  413848:	sub    ebp,DWORD PTR [ebp-0x25]
  41384b:	out    dx,al
  41384c:	jle    0x4137f7
  41384e:	sub    BYTE PTR [ebx+0x48],al
  413851:	mul    DWORD PTR [ebx]
  413853:	pop    ecx
  413854:	sbb    BYTE PTR [edx+0x46],cl
  413857:	mov    ecx,0xcf02e489
  41385c:	mov    ds:0xe8ae4f50,eax
  413861:	into   
  413862:	mov    ebp,0x24a83e4c
  413867:	push   ecx
  413868:	popa   
  413869:	push   edi
  41386a:	aam    0xb6
  41386c:	(bad)  
  41386d:	enter  0xc15f,0xa6
  413871:	fild   QWORD PTR [ebx-0x715d65fe]
  413877:	fcmovnbe st,st(6)
  413879:	dec    ebp
  41387a:	cmp    eax,0x35791694
  41387f:	pushf  
  413880:	out    dx,eax
  413881:	mov    eax,ds:0xebfd100e
  413886:	pusha  
  413887:	push   edx
  413888:	pop    esp
  413889:	sub    al,0xf5
  41388c:	daa    
  41388d:	push   esp
  41388e:	aad    0x68
  413890:	mov    edx,0x992caea1
  413895:	cmp    dh,BYTE PTR [eax-0x3c]
  413898:	push   esp
  413899:	std    
  41389a:	test   BYTE PTR [ebp+0x2d],0x61
  41389e:	(bad)  
  41389f:	jle    0x413844
  4138a1:	dec    esp
  4138a2:	rcl    BYTE PTR [esi+0x55c2ff81],0x87
  4138a9:	fnstsw WORD PTR [edx-0x12]
  4138ac:	into   
  4138ad:	cmp    bl,BYTE PTR [edx]
  4138af:	xchg   edx,eax
  4138b0:	loopne 0x413834
  4138b2:	jle    0x4138f0
  4138b4:	fbld   TBYTE PTR [edi-0x106c6c7a]
  4138ba:	xor    DWORD PTR [ecx],ebp
  4138bc:	mov    eax,0x1f10c624
  4138c1:	iret   
  4138c2:	cld    
  4138c3:	sub    ecx,DWORD PTR [eax-0x71]
  4138c6:	jmp    0xb426:0xb2dc4775
  4138cd:	ret    
  4138ce:	adc    edi,DWORD PTR [ecx-0x8]
  4138d1:	xor    edi,DWORD PTR [esi]
  4138d3:	js     0x4138c9
  4138d5:	fisubr WORD PTR [esi-0x3b2bf4cc]
  4138db:	mov    ah,BYTE PTR ds:0x1dc8d5a6
  4138e1:	mov    eax,ds:0xac79c2bf
  4138e6:	xor    al,dh
  4138e8:	sbb    ebx,DWORD PTR [ebp+ecx*1-0x1cf96341]
  4138ef:	mov    ebp,cr0
  4138f2:	mov    edi,DWORD PTR [ebx-0x20]
  4138f5:	mov    fs,WORD PTR [eax+0x1d]
  4138f8:	mov    DWORD PTR [eax+0x4e],edx
  4138fb:	mov    al,0x59
  4138fd:	repnz xchg edi,eax
  4138ff:	(bad)  
  413900:	mov    cl,0x9
  413902:	sub    BYTE PTR [ebp+0x63],0xab
  413906:	sub    ecx,DWORD PTR [ecx+edx*4]
  413909:	pop    edx
  41390a:	rcl    ah,1
  41390c:	loop   0x41395b
  41390e:	fmul   DWORD PTR [eax]
  413910:	sub    dx,WORD PTR [edx-0x3c]
  413914:	cmc    
  413915:	mov    edi,0x697c41b2
  41391a:	xor    al,0x4a
  41391c:	sub    edx,ecx
  41391e:	in     eax,dx
  41391f:	sbb    bl,BYTE PTR [eax+0x1d]
  413922:	pusha  
  413923:	or     edx,DWORD PTR [edi+eiz*1]
  413926:	icebp  
  413927:	adc    BYTE PTR [ecx],bh
  413929:	xchg   ecx,eax
  41392a:	and    BYTE PTR [ecx-0x30d2d67a],dh
  413930:	xchg   BYTE PTR [edx+0x57d681b2],ah
  413936:	ins    DWORD PTR es:[edi],dx
  413937:	sahf   
  413938:	cli    
  413939:	mov    eax,0xb462fde7
  41393e:	jae    0x41394d
  413940:	or     eax,DWORD PTR [ebp-0xb7d71a5]
  413946:	dec    ebx
  413947:	cmp    al,0x15
  413949:	push   edx
  41394a:	push   cs
  41394b:	xor    eax,0x56d73148
  413950:	or     esi,ecx
  413952:	adc    eax,0x7b03556f
  413957:	lahf   
  413958:	mov    dl,dl
  41395a:	push   ecx
  41395b:	in     al,0x2a
  41395d:	mov    dl,0x40
  41395f:	out    dx,al
  413960:	mov    edx,0xed3c8397
  413965:	mov    WORD PTR [eax],fs
  413967:	shr    BYTE PTR [eax-0x6cb0727d],0x6e
  41396e:	aaa    
  41396f:	dec    esi
  413970:	call   0xad2ac7f1
  413975:	cmp    DWORD PTR [ebx-0x55],edi
  413978:	push   cs
  413979:	rcl    ah,1
  41397b:	loopne 0x41395f
  41397d:	iret   
  41397e:	cmp    eax,0x53220b61
  413983:	cwde   
  413984:	adc    bl,BYTE PTR [edx]
  413986:	sar    BYTE PTR [eax-0x59],1
  413989:	inc    ebx
  41398a:	sub    DWORD PTR [edx-0x4ee40e6d],ebp
  413990:	dec    edx
  413991:	(bad)  
  413992:	lods   al,BYTE PTR ds:[esi]
  413993:	jbe    0x41391e
  413995:	dec    BYTE PTR [ecx]
  413997:	xchg   bl,dl
  413999:	xor    eax,0x433ace5d
  41399e:	ret    0x9e4e
  4139a1:	push   ebx
  4139a2:	mov    bh,0x92
  4139a4:	mov    edi,0x7d7e129d
  4139a9:	aas    
  4139aa:	arpl   WORD PTR [esi+0x3b],cx
  4139ad:	fild   DWORD PTR [eax+esi*2+0x4d8ab1ed]
  4139b4:	les    ebp,FWORD PTR [ebp-0xffb47de]
  4139ba:	into   
  4139bb:	jo     0x413992
  4139bd:	sahf   
  4139be:	clc    
  4139bf:	repnz (bad) 
  4139c1:	jle    0x413a0d
  4139c3:	mov    ch,0x82
  4139c5:	fist   WORD PTR [edi]
  4139c7:	stos   DWORD PTR es:[edi],eax
  4139c8:	scas   eax,DWORD PTR es:[edi]
  4139c9:	in     eax,dx
  4139ca:	jmp    0x75dbce3
  4139cf:	hlt    
  4139d0:	fst    DWORD PTR [eax+0x53]
  4139d3:	out    dx,eax
  4139d4:	jnp    0x41395e
  4139d6:	pusha  
  4139d7:	rcl    BYTE PTR ds:0xa0ac081d,cl
  4139dd:	dec    ebp
  4139de:	xchg   DWORD PTR [eax-0x193d48f],ebp
  4139e4:	push   edi
  4139e5:	sbb    edx,DWORD PTR [edx-0x1d]
  4139e8:	js     0x413a5d
  4139ea:	pop    ebp
  4139eb:	adc    eax,0xbb0a327e
  4139f0:	loope  0x413a51
  4139f2:	in     eax,dx
  4139f3:	into   
  4139f4:	jnp    0x4139d0
  4139f6:	adc    dl,BYTE PTR [esi-0x20106142]
  4139fc:	arpl   WORD PTR [esi],cx
  4139fe:	int    0xef
  413a00:	cdq    
  413a01:	mov    ch,0x25
  413a03:	sti    
  413a04:	and    esp,DWORD PTR ds:0x7a6ec8da
  413a0a:	pop    ebx
  413a0b:	xor    al,0xd1
  413a0d:	sub    ch,BYTE PTR [ecx-0x58]
  413a10:	jne    0x413a27
  413a12:	or     eax,0xfb3564d9
  413a17:	ret    0xabf8
  413a1a:	inc    edx
  413a1b:	enter  0xaf3,0xba
  413a1f:	mov    al,0xe6
  413a21:	shl    bl,1
  413a23:	sbb    BYTE PTR [eax+ebx*4],ah
  413a26:	les    esp,FWORD PTR [ecx-0xb]
  413a29:	adc    DWORD PTR [edx+edx*1],0xc21a0394
  413a30:	ins    BYTE PTR es:[edi],dx
  413a31:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413a33:	pop    ebx
  413a34:	dec    ebx
  413a35:	sahf   
  413a36:	out    dx,al
  413a37:	in     eax,dx
  413a38:	xchg   edi,esp
  413a3a:	stos   BYTE PTR es:[edi],al
  413a3b:	rcr    DWORD PTR [ecx+0x9],1
  413a3e:	lahf   
  413a3f:	xor    DWORD PTR [esp-0x3243d433],eax
  413a46:	fldcw  WORD PTR [eax+0x5e9ae067]
  413a4c:	(bad)  
  413a4d:	leave  
  413a4e:	jp     0x413a08
  413a50:	fnsave [eax-0x7878cb14]
  413a56:	ret    0xd37
  413a59:	test   al,0x3d
  413a5b:	out    dx,al
  413a5c:	adc    eax,0x162b91bf
  413a61:	fidivr DWORD PTR [edi-0x78]
  413a64:	pop    esp
  413a65:	cld    
  413a66:	das    
  413a67:	lods   eax,DWORD PTR ds:[esi]
  413a68:	(bad)  
  413a69:	cbw    
  413a6b:	daa    
  413a6c:	push   cs
  413a6d:	aad    0x1a
  413a6f:	jae    0x413a90
  413a71:	outs   dx,BYTE PTR ds:[esi]
  413a72:	jbe    0x413a21
  413a74:	adc    bh,BYTE PTR [ebx]
  413a76:	jo     0x413ac4
  413a78:	pop    edx
  413a79:	push   edi
  413a7a:	sub    al,0x41
  413a7c:	add    eax,0x19d6a484
  413a81:	(bad)  
  413a83:	xchg   esp,eax
  413a84:	mov    ch,0xf8
  413a86:	loopne 0x413abd
  413a88:	and    dl,cl
  413a8a:	push   ds
  413a8b:	mov    edi,eax
  413a8d:	or     BYTE PTR [edx],bl
  413a8f:	ss or  eax,0x2c3a8aa3
  413a95:	loopne 0x413a1c
  413a97:	pop    DWORD PTR [esi]
  413a99:	pop    edx
  413a9a:	dec    ecx
  413a9b:	and    edi,DWORD PTR ds:0x1e208e72
  413aa1:	jmp    0x6dde:0x15ddf82c
  413aa8:	mov    ecx,0xa9bf86f8
  413aad:	out    0x26,al
  413aaf:	pop    es
  413ab0:	ins    BYTE PTR es:[edi],dx
  413ab1:	test   BYTE PTR [edx-0x6c11ef37],dl
  413ab7:	jp     0x413adc
  413ab9:	fistp  QWORD PTR [edi+0x21]
  413abc:	(bad)  
  413abd:	test   eax,0xa264a39a
  413ac2:	mov    edi,0x57bf1f
  413ac7:	or     BYTE PTR [eax],al
  413ac9:	scas   al,BYTE PTR es:[edi]
  413aca:	stos   BYTE PTR es:[edi],al
  413acb:	rol    BYTE PTR [ecx-0x2a2c5017],1
  413ad1:	jmp    esi
  413ad3:	nop
  413ad4:	jp     0x413b3a
  413ad6:	sar    eax,0xa8
  413ad9:	neg    esp
  413adb:	(bad)  
  413adc:	xor    DWORD PTR [esi-0x6736bb0e],edx
  413ae2:	ins    DWORD PTR es:[edi],dx
  413ae3:	push   cs
  413ae4:	jne    0x413a91
  413ae6:	lods   al,BYTE PTR ds:[si]
  413ae8:	or     DWORD PTR [eax+edi*4-0x68],0x26ae4508
  413af0:	in     eax,0xc3
  413af2:	add    BYTE PTR [ecx-0x281d14c2],dl
  413af8:	into   
  413af9:	ret    
  413afa:	popf   
  413afb:	sbb    eax,0x158f5042
  413b00:	xor    ch,dl
  413b02:	ss and eax,0xb61a2d92
  413b08:	adc    al,0x1e
  413b0a:	int3   
  413b0b:	daa    
  413b0c:	xor    edi,ebp
  413b0e:	or     DWORD PTR [ebp+0x6f],esp
  413b11:	push   es
  413b12:	call   0xad41:0xcb7cf01
  413b19:	scas   al,BYTE PTR es:[edi]
  413b1a:	imul   edx,DWORD PTR ss:[ebp-0x66],0xffffff96
  413b1f:	jmp    0x413b47
  413b21:	test   BYTE PTR [esi+0x31b2890a],ch
  413b27:	inc    ebp
  413b28:	sbb    dl,BYTE PTR [ecx+0x6d]
  413b2b:	mov    esi,0xa6d7e5f7
  413b30:	inc    ecx
  413b31:	js     0x413afd
  413b33:	pop    es
  413b34:	add    dh,BYTE PTR [ebx+0x60]
  413b37:	xor    BYTE PTR [ebx+0x42],al
  413b3a:	outs   dx,DWORD PTR ds:[esi]
  413b3b:	fild   QWORD PTR [ebx+0x1f]
  413b3e:	jb     0x413b73
  413b40:	int    0x5b
  413b42:	cmp    dh,BYTE PTR [esi+0x3fa17391]
  413b48:	dec    edx
  413b49:	std    
  413b4a:	dec    edx
  413b4b:	or     al,0x42
  413b4d:	or     ah,ch
  413b4f:	out    0xe6,al
  413b51:	jo     0x413bd1
  413b53:	pop    eax
  413b54:	cmp    dl,BYTE PTR [ebx+0x28]
  413b57:	frstor [edi+0x4c4f2933]
  413b5d:	(bad)  
  413b5e:	fldcw  WORD PTR ds:0x9d26faad
  413b64:	adc    esi,DWORD PTR [ecx]
  413b66:	push   ds
  413b67:	mov    al,0x8f
  413b69:	pop    eax
  413b6a:	int    0xdb
  413b6c:	adc    eax,0x7a5e19ef
  413b71:	mov    dh,0x0
  413b73:	cli    
  413b74:	xchg   esp,eax
  413b75:	jbe    0x413b6d
  413b77:	or     BYTE PTR [eax-0x7e],ch
  413b7a:	sbb    BYTE PTR [ecx-0x48ef4e1b],cl
  413b80:	xchg   edx,eax
  413b81:	adc    bl,BYTE PTR [edx-0xe5b57c4]
  413b87:	nop
  413b88:	popa   
  413b89:	xor    eax,ecx
  413b8b:	mov    edi,0x11fadc13
  413b90:	jl     0x413b4f
  413b92:	sub    eax,0xb4942b98
  413b97:	cs and bh,cl
  413b9a:	push   ebx
  413b9b:	rcr    ecx,1
  413b9d:	mov    al,0x56
  413b9f:	xor    esi,edi
  413ba1:	dec    eax
  413ba2:	sbb    eax,0xf4a39e15
  413ba7:	pop    ss
  413ba8:	push   ecx
  413ba9:	popf   
  413baa:	push   0x1aed8ff2
  413baf:	mov    bh,0x73
  413bb1:	cdq    
  413bb2:	xchg   edi,eax
  413bb3:	ins    DWORD PTR es:[edi],dx
  413bb4:	dec    ebx
  413bb5:	fadd   st,st(4)
  413bb7:	sub    edx,DWORD PTR [ebx]
  413bb9:	push   0x3028faad
  413bbe:	lahf   
  413bbf:	inc    eax
  413bc0:	adc    ebp,0xffffffb7
  413bc3:	push   ecx
  413bc4:	adc    eax,0x35c341a1
  413bc9:	sbb    DWORD PTR [esi+0x55060f5c],ecx
  413bcf:	inc    ebp
  413bd0:	iret   
  413bd1:	pop    edi
  413bd2:	and    ah,BYTE PTR [edi]
  413bd4:	retf   0x49a7
  413bd7:	pop    ebx
  413bd8:	cmp    al,0x1e
  413bda:	cmp    eax,0x493ac0df
  413bdf:	sub    al,0xce
  413be1:	dec    esp
  413be2:	fsubr  DWORD PTR [edx]
  413be4:	daa    
  413be5:	or     al,0x55
  413be7:	imul   eax,ecx,0x9e549122
  413bed:	pop    ecx
  413bee:	fldenv [edi]
  413bf0:	call   0xeead:0x69faed80
  413bf7:	mov    esi,0x99e56a1b
  413bfc:	cmp    al,dh
  413bfe:	je     0x413bc7
  413c00:	dec    esp
  413c01:	imul   esp,DWORD PTR [ecx-0x5ce38b18],0x55
  413c08:	repnz stc 
  413c0a:	out    dx,al
  413c0b:	rol    DWORD PTR [eax],0x3a
  413c0e:	sbb    esi,DWORD PTR [esi]
  413c10:	popa   
  413c11:	mov    cl,0xd
  413c13:	or     BYTE PTR [ecx+0x65f4b0a8],0xb5
  413c1a:	mov    al,BYTE PTR [ecx]
  413c1c:	sub    al,0x2b
  413c1e:	into   
  413c1f:	aad    0xfd
  413c21:	aad    0xc3
  413c23:	xor    eax,0xe66cf3dd
  413c28:	ror    DWORD PTR [ebp-0x263024f4],1
  413c2e:	dec    esp
  413c2f:	ret    
  413c30:	push   es
  413c31:	(bad)  
  413c32:	ficom  WORD PTR [edx-0x4210c92b]
  413c38:	inc    eax
  413c39:	pushf  
  413c3a:	sub    al,0x14
  413c3c:	mov    cl,0x62
  413c3e:	jp     0x413ca8
  413c40:	clc    
  413c41:	pop    esi
  413c42:	push   es
  413c43:	repnz loope 0x413cbb
  413c46:	ds inc edi
  413c48:	iret   
  413c49:	add    ch,BYTE PTR [eax-0x4ff45129]
  413c4f:	jbe    0x413ca3
  413c51:	(bad)  
  413c52:	jmp    DWORD PTR [edx+eax*1+0xb]
  413c56:	push   eax
  413c57:	cmp    eax,0xe82a439a
  413c5c:	cmp    BYTE PTR [eax+edx*1],ah
  413c5f:	in     eax,0xbe
  413c61:	dec    edi
  413c62:	mov    edx,0xdf021376
  413c67:	and    BYTE PTR [esi-0x21],0x1
  413c6b:	xor    al,0xee
  413c6d:	mov    esp,edx
  413c6f:	xchg   edx,eax
  413c70:	add    BYTE PTR [ebp-0x6e33567d],0x6
  413c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c78:	(bad)  
  413c79:	mov    esp,0xa263e5f3
  413c7e:	imul   ebp,esp,0xffffffea
  413c81:	cmp    bh,BYTE PTR [eax+0x4c]
  413c84:	rcl    BYTE PTR [edi+0x63],cl
  413c87:	and    ecx,DWORD PTR [esi]
  413c89:	mov    ah,0xa3
  413c8b:	jl     0x413c26
  413c8d:	jp     0x413cec
  413c8f:	ja     0x413c9d
  413c91:	mov    ds:0x4ff94cd2,al
  413c96:	pop    edi
  413c97:	xchg   DWORD PTR [ebx],ecx
  413c99:	adc    DWORD PTR [ecx],esp
  413c9b:	dec    edi
  413c9c:	mov    al,0x82
  413c9e:	dec    edi
  413c9f:	sub    DWORD PTR [ebx],ebp
  413ca1:	lahf   
  413ca2:	xor    DWORD PTR fs:[esi-0x1135f1b6],eax
  413ca9:	arpl   WORD PTR [edx],ax
  413cab:	adc    al,0x8c
  413cad:	cmp    al,0xe2
  413caf:	rcr    eax,0xd7
  413cb2:	xchg   edi,eax
  413cb3:	test   cl,bh
  413cb5:	das    
  413cb6:	sar    ebx,0x7
  413cb9:	repnz sbb bh,BYTE PTR fs:[esi+0x12]
  413cbe:	sub    esp,DWORD PTR [eax+0x1475d4d9]
  413cc4:	hlt    
  413cc5:	data16 mov al,ds:0xf7760ded
  413ccb:	jb     0x413d2e
  413ccd:	ja     0x413cd1
  413ccf:	scas   eax,DWORD PTR es:[edi]
  413cd0:	mov    al,0xa9
  413cd2:	or     cl,dh
  413cd4:	mov    ds:0xe4cb3bf1,eax
  413cd9:	cmp    BYTE PTR [ebx],ch
  413cdb:	out    dx,al
  413cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cdd:	mov    WORD PTR [ecx],fs
  413cdf:	xchg   ecx,eax
  413ce0:	fsubr  st,st(7)
  413ce2:	inc    DWORD PTR [ebp+0x7aa661aa]
  413ce8:	xchg   edx,eax
  413ce9:	imul   esp,DWORD PTR [edi+0x65],0xf23802d9
  413cf0:	fdivr  DWORD PTR [eax]
  413cf2:	js     0x413d2b
  413cf4:	popf   
  413cf5:	neg    edi
  413cf7:	ds cwde 
  413cf9:	adc    DWORD PTR gs:[esi],eax
  413cfc:	loopne 0x413d17
  413cfe:	rep stos BYTE PTR es:[edi],al
  413d00:	cwde   
  413d01:	loop   0x413cf8
  413d03:	aam    0xb4
  413d05:	(bad)
  413d09:	nop
  413d0a:	(bad)  
  413d0b:	xor    eax,0xec3a7fa0
  413d10:	clc    
  413d11:	out    dx,eax
  413d12:	lods   al,BYTE PTR ds:[esi]
  413d13:	in     al,0x59
  413d15:	pop    edi
  413d16:	out    0x34,al
  413d18:	loopne 0x413cb9
  413d1a:	cwde   
  413d1b:	jnp    0x413d03
  413d1d:	repz ja 0x413d2b
  413d20:	pop    eax
  413d21:	pusha  
  413d22:	or     eax,0x9d4c8ce9
  413d27:	jmp    0x413d5b
  413d29:	mov    eax,DWORD PTR [edx]
  413d2b:	enter  0x4336,0xfd
  413d2f:	aas    
  413d30:	mov    al,ds:0xb0dfd04c
  413d35:	xor    bl,ch
  413d37:	jae    0x413cdc
  413d39:	cli    
  413d3a:	ror    BYTE PTR [ecx],cl
  413d3c:	jp     0x413d28
  413d3e:	mov    ?,WORD PTR [edx-0xc]
  413d41:	leave  
  413d42:	into   
  413d43:	outs   dx,BYTE PTR ds:[esi]
  413d44:	add    al,0xcf
  413d46:	and    ecx,ebp
  413d48:	(bad)  
  413d4a:	mov    cs,WORD PTR [ebx-0x6ebf554a]
  413d50:	jle    0x413d37
  413d52:	dec    esp
  413d53:	pop    ebx
  413d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d55:	stos   BYTE PTR es:[edi],al
  413d56:	adc    ah,BYTE PTR [esi+0x4f]
  413d59:	inc    edi
  413d5a:	push   edx
  413d5b:	or     DWORD PTR [eax-0x62],esp
  413d5e:	or     al,0x74
  413d60:	enter  0x3c50,0x65
  413d64:	add    BYTE PTR [eax+0x3bc8ec27],ch
  413d6a:	xor    bl,BYTE PTR [edi]
  413d6c:	scas   eax,DWORD PTR es:[edi]
  413d6d:	inc    ecx
  413d6e:	sub    DWORD PTR [edx],ecx
  413d70:	popf   
  413d71:	outs   dx,DWORD PTR ds:[esi]
  413d72:	pop    edx
  413d73:	mov    ah,0xf8
  413d75:	cwde   
  413d76:	lds    ebx,FWORD PTR [eax+0x1b]
  413d79:	dec    edx
  413d7a:	inc    edx
  413d7b:	xor    bl,bh
  413d7d:	jmp    0xe932:0xd0b2880f
  413d84:	scas   al,BYTE PTR es:[edi]
  413d85:	sub    eax,0x1061f17c
  413d8a:	and    ch,BYTE PTR [ecx]
  413d8c:	adc    DWORD PTR cs:[ecx],ebp
  413d8f:	mov    eax,0x8814fe75
  413d94:	ss retf 0x9e85
  413d98:	or     eax,edx
  413d9a:	add    dl,dl
  413d9c:	pop    ebp
  413d9d:	pop    esp
  413d9e:	jl     0x413d6f
  413da0:	jle    0x413e21
  413da2:	mov    BYTE PTR [eax-0xf],ah
  413da5:	add    ebx,DWORD PTR [esi-0xe]
  413da8:	aaa    
  413da9:	jbe    0x413d51
  413dab:	push   es
  413dac:	mov    dl,0xe4
  413dae:	xchg   esi,eax
  413daf:	push   ss
  413db0:	cs push ebp
  413db2:	test   eax,0x3b7b58c3
  413db7:	ins    BYTE PTR es:[edi],dx
  413db8:	(bad)  
  413db9:	jo     0x413dca
  413dbb:	int    0x40
  413dbd:	fsubrp st(4),st
  413dbf:	pop    esp
  413dc0:	fadd   DWORD PTR [edx]
  413dc2:	shl    ebp,1
  413dc4:	add    dl,BYTE PTR [ebp-0x37]
  413dc7:	xor    eax,0xe5dc0809
  413dcc:	sub    BYTE PTR fs:[esi],bl
  413dcf:	aas    
  413dd0:	mov    dl,0xc3
  413dd2:	mov    ecx,0xbe90b0bb
  413dd7:	adc    bh,BYTE PTR [ecx+0x6c]
  413dda:	xchg   edx,eax
  413ddb:	sub    cl,BYTE PTR [ebp+0xb7ce053]
  413de1:	out    0x5b,eax
  413de3:	or     edi,DWORD PTR ds:0x7b7e17c6
  413de9:	shl    cl,1
  413deb:	adc    eax,DWORD PTR [ebp+ebx*8+0x7e76fa1a]
  413df2:	(bad)  
  413df3:	call   ecx
  413df5:	and    DWORD PTR [ecx+0x6932d3db],ebp
  413dfb:	enter  0xd640,0x99
  413dff:	(bad)  
  413e01:	xor    BYTE PTR [esi],0x93
  413e04:	mov    edx,0x34ee4e57
  413e09:	push   es
  413e0a:	or     DWORD PTR [ebx],0x64
  413e0d:	loopne 0x413e1f
  413e0f:	xchg   edx,eax
  413e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e11:	adc    DWORD PTR [ebx-0x14],eax
  413e14:	jb     0x413e30
  413e16:	clc    
  413e17:	cmc    
  413e18:	lods   eax,DWORD PTR ds:[esi]
  413e19:	lods   eax,DWORD PTR ds:[esi]
  413e1a:	inc    esp
  413e1b:	cdq    
  413e1c:	xlat   BYTE PTR ds:[ebx]
  413e1d:	push   ecx
  413e1e:	and    edx,DWORD PTR [eax-0x14]
  413e21:	aas    
  413e22:	aam    0xc9
  413e24:	out    dx,al
  413e25:	mov    ds:0xff801d,al
  413e2a:	dec    ebp
  413e2b:	fnstsw WORD PTR [eax]
  413e2d:	xor    dl,cl
  413e2f:	jbe    0x413e44
  413e31:	outs   dx,DWORD PTR ds:[esi]
  413e32:	dec    ch
  413e34:	(bad)  
  413e38:	mov    dl,0x0
  413e3a:	and    BYTE PTR [edi],bh
  413e3c:	into   
  413e3d:	inc    eax
  413e3e:	sahf   
  413e3f:	push   edi
  413e40:	fst    QWORD PTR [esi-0x76]
  413e43:	mov    ah,0xe6
  413e45:	mov    ebx,ebp
  413e47:	cmp    esp,ebp
  413e49:	mov    WORD PTR [esi+0x3d74f86e],es
  413e4f:	call   0xb231:0x86cbb4ca
  413e56:	jae    0x413e40
  413e58:	mov    esp,0xab134742
  413e5d:	hlt    
  413e5e:	add    BYTE PTR [ebp-0x50],0x4c
  413e62:	xchg   edx,eax
  413e63:	mov    ebx,0xebe72637
  413e68:	push   ecx
  413e69:	and    DWORD PTR [ebx-0x2520719e],0x63149238
  413e73:	jnp    0x413eea
  413e75:	cli    
  413e76:	inc    esp
  413e77:	cwde   
  413e78:	and    DWORD PTR [ebp-0x1ca6001b],eax
  413e7e:	mov    al,ds:0xc6c670e9
  413e83:	popf   
  413e84:	(bad)  
  413e85:	mov    ah,0x4
  413e87:	or     eax,0xec87e25d
  413e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e8d:	lock dec edx
  413e8f:	popa   
  413e90:	loope  0x413e3d
  413e92:	hlt    
  413e93:	mov    cl,0x9d
  413e95:	nop
  413e96:	sub    dh,ah
  413e98:	sbb    al,0x62
  413e9a:	ror    BYTE PTR [edx],cl
  413e9c:	aad    0x97
  413e9e:	jo     0x413e49
  413ea0:	pop    es
  413ea1:	ins    DWORD PTR es:[edi],dx
  413ea2:	xor    al,BYTE PTR [ecx+0x52]
  413ea5:	test   BYTE PTR [eax],ch
  413ea7:	das    
  413ea8:	push   es
  413ea9:	adc    eax,0x41c658b9
  413eae:	jbe    0x413e80
  413eb0:	cmp    BYTE PTR [ecx-0x69],bh
  413eb3:	mov    ebx,esi
  413eb5:	fsubr  QWORD PTR [ebp-0x543e4919]
  413ebb:	xchg   ecx,eax
  413ebc:	dec    edx
  413ebd:	mov    cl,0x70
  413ebf:	adc    DWORD PTR [eax],ebx
  413ec1:	(bad)  
  413ec2:	les    ecx,FWORD PTR [edi]
  413ec4:	xchg   edx,eax
  413ec5:	xchg   ebp,eax
  413ec6:	mov    al,0x6d
  413ec8:	pop    edx
  413ec9:	add    al,0x4a
  413ecb:	pop    esi
  413ecc:	cmc    
  413ecd:	add    BYTE PTR [eax+0xf],bl
  413ed0:	into   
  413ed1:	ins    DWORD PTR es:[edi],dx
  413ed2:	or     eax,edi
  413ed4:	xor    DWORD PTR [ecx+0x7f],esp
  413ed7:	ror    esi,0xc6
  413eda:	adc    DWORD PTR ds:0x5a3ecd92,ecx
  413ee0:	add    bh,BYTE PTR [esi+eiz*4]
  413ee3:	es (bad) 
  413ee6:	mov    bh,0x83
  413ee8:	pushf  
  413ee9:	xlat   BYTE PTR ds:[ebx]
  413eea:	ja     0x413e94
  413eec:	mov    ecx,DWORD PTR [edx]
  413eee:	rcr    ebp,0x50
  413ef1:	pop    ds
  413ef2:	enter  0x85e1,0x17
  413ef6:	popa   
  413ef7:	loope  0x413f69
  413ef9:	or     al,0x3b
  413efb:	iret   
  413efc:	mov    ss,WORD PTR [esi+0x1c]
  413eff:	adc    DWORD PTR [ebx-0x498e9ca5],edx
  413f05:	mov    dl,0xa4
  413f07:	adc    ecx,ebx
  413f09:	pusha  
  413f0a:	pop    ecx
  413f0b:	enter  0x3c75,0x78
  413f0f:	fdivrp st(4),st
  413f11:	mov    ecx,DWORD PTR [ebx+0x77]
  413f14:	bound  esp,QWORD PTR [esi-0x42]
  413f17:	rcl    BYTE PTR [ecx-0x1],0xd5
  413f1b:	adc    edi,edi
  413f1d:	repnz dec edi
  413f1f:	repz jmp 0x413f83
  413f22:	jbe    0x413f85
  413f24:	pop    es
  413f25:	xor    DWORD PTR [edx],esi
  413f27:	mov    bl,0xd
  413f29:	aas    
  413f2a:	cmp    bl,dh
  413f2c:	xchg   DWORD PTR [eax-0x2da9141f],ebx
  413f32:	adc    al,0xb2
  413f34:	leave  
  413f35:	shl    DWORD PTR [ecx+0x3a],0xe8
  413f39:	sub    eax,0x3fb052fc
  413f3e:	mov    DWORD PTR [eax],edi
  413f40:	mov    ds:0x7e44c83a,eax
  413f45:	je     0x413f30
  413f47:	push   esp
  413f48:	ins    BYTE PTR es:[edi],dx
  413f49:	adc    dh,0x34
  413f4c:	or     DWORD PTR [ebx+eax*4-0x66],ebp
  413f50:	iret   
  413f51:	mov    ecx,0x15e00303
  413f56:	sbb    esi,ebp
  413f58:	push   es
  413f59:	mov    bh,bl
  413f5b:	nop
  413f5c:	addr16 jg 0x413f9d
  413f5f:	fdiv   QWORD PTR [esi-0x60]
  413f62:	rcl    dh,1
  413f64:	loopne 0x413fa8
  413f66:	fnstcw WORD PTR [edx]
  413f68:	icebp  
  413f69:	push   edx
  413f6a:	repnz rcr BYTE PTR [esi-0x5d],1
  413f6e:	pop    esi
  413f6f:	loopne 0x413f54
  413f71:	mov    al,0xed
  413f73:	mov    ch,0x2f
  413f75:	gs ja  0x413f7b
  413f78:	dec    ecx
  413f79:	lods   al,BYTE PTR ds:[esi]
  413f7a:	inc    ebx
  413f7b:	sbb    eax,0xb0d8a961
  413f80:	mov    al,0x1d
  413f82:	outs   dx,BYTE PTR ds:[esi]
  413f83:	jno    0x413fbf
  413f85:	fild   QWORD PTR [esi-0x6f]
  413f88:	imul   esp,esi,0x48a549b5
  413f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f8f:	dec    edx
  413f90:	xor    ebp,DWORD PTR [edx-0x6573c710]
  413f96:	cwde   
  413f97:	pop    esi
  413f98:	xor    al,0x4b
  413f9a:	mov    esp,0xcc2eedba
  413f9f:	repnz push esi
  413fa1:	jle    0x413f3d
  413fa3:	imul   eax,DWORD PTR ds:0x2a91156a,0x18079fea
  413fad:	in     eax,0xae
  413faf:	stc    
  413fb0:	das    
  413fb1:	lock add al,0x22
  413fb4:	(bad)  
  413fb5:	icebp  
  413fb6:	mov    ds:0xbe3a38bc,eax
  413fbb:	push   0xb76a81fa
  413fc0:	rol    BYTE PTR ds:0xb085beff,0x46
  413fc7:	out    0x7c,eax
  413fc9:	hlt    
  413fca:	dec    esi
  413fcb:	sub    al,0x7
  413fcd:	mov    edx,0x45ac659c
  413fd2:	sbb    al,al
  413fd4:	sub    dl,bh
  413fd6:	bound  edx,QWORD PTR [ecx]
  413fd8:	sbb    al,0xbf
  413fda:	inc    edx
  413fdb:	push   esp
  413fdc:	and    DWORD PTR [ecx+0xc],0xffffffff
  413fe0:	aaa    
  413fe1:	sbb    BYTE PTR [ecx-0xf91684c],dh
  413fe7:	push   esi
  413fe8:	xchg   cl,al
  413fea:	mov    eax,0x62458d17
  413fef:	call   0xc6ece59f
  413ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ff5:	push   ebx
  413ff6:	inc    eax
  413ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ff8:	jmp    0xa757:0x76c7049f
  413fff:	aaa    
  414000:	dec    BYTE PTR [esi]
  414002:	scas   eax,DWORD PTR es:[edi]
  414003:	jmp    0xba34ecb8
  414008:	dec    eax
  414009:	cmp    bl,cl
  41400b:	pop    ss
  41400c:	jmp    DWORD PTR [eax]
  41400e:	inc    edi
  41400f:	mov    eax,0xf9a12e4a
  414014:	dec    ecx
  414015:	sbb    eax,0xf73e520e
  41401a:	cwde   
  41401b:	out    0x56,eax
  41401d:	(bad)  [ebx]
  41401f:	pop    ebp
  414020:	and    ebp,DWORD PTR [ecx+0x7c]
  414023:	out    dx,eax
  414024:	dec    esp
  414025:	inc    esp
  414026:	pop    eax
  414027:	and    DWORD PTR [ecx+0x4f],esi
  41402a:	push   edx
  41402b:	mov    dl,0xc3
  41402d:	ins    BYTE PTR es:[edi],dx
  41402e:	out    dx,eax
  41402f:	cmp    eax,0x9059dbe2
  414034:	inc    ebp
  414035:	mov    DWORD PTR ds:0xf82c11d8,edx
  41403b:	and    eax,0xbd3ee5be
  414040:	or     edx,DWORD PTR [eax+edx*1]
  414043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414044:	ins    DWORD PTR es:[edi],dx
  414045:	or     BYTE PTR [edx+ecx*8-0x69],ah
  414049:	pushf  
  41404a:	sbb    BYTE PTR [esi+0x66],ah
  41404d:	or     bh,BYTE PTR [ecx-0x18]
  414050:	push   ss
  414051:	shl    BYTE PTR [ebx+0x437e99cf],0xd2
  414058:	or     ecx,DWORD PTR [eax+esi*1+0x2662aacc]
  41405f:	xchg   esi,eax
  414060:	std    
  414061:	xchg   edi,eax
  414062:	mov    edx,0x87ae3c01
  414067:	ret    
  414068:	or     edi,ebx
  41406a:	cmp    DWORD PTR [edx+0x72b20d43],esi
  414070:	fcmovne st,st(0)
  414072:	jbe    0x414032
  414074:	(bad)  
  414075:	fdivr  QWORD PTR [eax+0x0]
  414078:	jae    0x41403c
  41407a:	cmovne eax,DWORD PTR [ecx+0xe3ffe21]
  414081:	jnp    0x41405b
  414083:	mov    eax,0x21d9b1e9
  414088:	es push ecx
  41408a:	sbb    ch,BYTE PTR [ebp+ebx*2-0x2d]
  41408e:	dec    esp
  41408f:	gs das 
  414091:	loop   0x41401e
  414093:	arpl   WORD PTR ds:0x4ee01d85,bx
  414099:	into   
  41409a:	ret    0xbea2
  41409d:	jbe    0x4140ec
  41409f:	fadd   QWORD PTR [ecx+0x53]
  4140a2:	adc    esi,DWORD PTR [esi]
  4140a4:	mov    eax,0x4367060f
  4140a9:	add    al,0x2a
  4140ab:	push   ebx
  4140ac:	mov    ebx,0xeaf6e707
  4140b1:	mov    DWORD PTR [edx+0x69],ebx
  4140b4:	cmp    ebx,eax
  4140b6:	mov    eax,ds:0x40c99cfa
  4140bb:	mov    ch,0xa8
  4140bd:	fidiv  DWORD PTR [ebx+eiz*4+0x583c36ce]
  4140c4:	xchg   ebx,eax
  4140c5:	push   ds
  4140c6:	enter  0x8c53,0x5f
  4140ca:	xchg   BYTE PTR [edx+0x46],bh
  4140cd:	adc    al,0x87
  4140cf:	mov    esp,0x289fdb00
  4140d4:	ja     0x41413a
  4140d6:	sub    al,0x74
  4140d8:	lahf   
  4140d9:	pushf  
  4140da:	xor    edx,DWORD PTR [edi-0x5ba991d3]
  4140e0:	xchg   ebx,eax
  4140e1:	dec    eax
  4140e2:	pop    ebp
  4140e3:	inc    ebp
  4140e4:	push   0x34ab27d6
  4140e9:	adc    esp,DWORD PTR [eax+esi*8+0xf544db4]
  4140f0:	ds leave 
  4140f2:	les    esp,FWORD PTR [edx]
  4140f4:	push   es
  4140f5:	push   eax
  4140f6:	js     0x414125
  4140f8:	pop    ebx
  4140f9:	push   ebp
  4140fa:	cmp    eax,0xe10f4d86
  4140ff:	mov    edx,0x86b3a1b9
  414104:	jne    0x41408f
  414106:	dec    edi
  414107:	iret   
  414108:	daa    
  414109:	pushf  
  41410a:	fisub  DWORD PTR [esi+edx*4]
  41410d:	and    al,BYTE PTR [edi]
  41410f:	mov    ecx,0xecbf26e2
  414114:	push   eax
  414115:	sub    BYTE PTR [ecx],ah
  414117:	mov    esp,0xa64a0baf
  41411c:	pop    eax
  41411d:	clc    
  41411e:	sub    BYTE PTR [edi+0x4f],dl
  414121:	ret    0x52ec
  414124:	push   edi
  414125:	dec    ebp
  414126:	mov    dl,0x71
  414128:	stos   DWORD PTR es:[edi],eax
  414129:	mov    BYTE PTR [edx],bl
  41412b:	sub    bl,BYTE PTR [edx+0x5238379]
  414131:	ins    BYTE PTR es:[edi],dx
  414132:	push   esp
  414133:	sub    ah,dl
  414135:	sub    ebx,esp
  414137:	inc    eax
  414138:	cs cld 
  41413a:	data16 ins BYTE PTR es:[edi],dx
  41413c:	dec    edx
  41413d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41413e:	pusha  
  41413f:	dec    ecx
  414140:	ss pop ds
  414142:	add    BYTE PTR [edi+ecx*4],dl
  414145:	and    bl,BYTE PTR [edx]
  414147:	in     al,dx
  414148:	ds dec eax
  41414a:	inc    ecx
  41414b:	push   esp
  41414c:	inc    edi
  41414d:	mov    ah,ch
  41414f:	mov    ecx,0xdcb4a822
  414154:	adc    al,0xc5
  414156:	hlt    
  414157:	fdiv   QWORD PTR [edi+esi*2+0x18]
  41415b:	jmp    0x1975:0x931084f4
  414162:	inc    eax
  414163:	cmp    ch,dl
  414165:	repz pushf 
  414167:	xchg   ecx,eax
  414168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414169:	aaa    
  41416a:	lods   al,BYTE PTR ds:[esi]
  41416b:	pop    ecx
  41416c:	or     DWORD PTR [esi+esi*1+0x5a188198],ebx
  414173:	dec    ebp
  414174:	xchg   esp,eax
  414175:	mov    dh,dh
  414177:	jbe    0x414187
  414179:	cmp    esp,0xff3a1a56
  41417f:	pop    esi
  414180:	add    eax,0x6f28f320
  414185:	mov    edi,0x7db8818
  41418a:	rcl    DWORD PTR [eiz*1+0xbbeaea0],0xca
  414192:	mov    ds:0xbdb8f79f,al
  414197:	push   edi
  414198:	mov    ds:0x488ae66a,al
  41419d:	push   ecx
  41419e:	jo     0x414176
  4141a0:	pop    ebp
  4141a1:	nop
  4141a2:	(bad)  
  4141a3:	rcl    DWORD PTR [ebx],0xe7
  4141a6:	(bad)  [ecx]
  4141a8:	pop    esi
  4141a9:	and    ebx,edi
  4141ab:	mov    BYTE PTR [eax],dh
  4141ad:	es ss dec eax
  4141b0:	xchg   edi,eax
  4141b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141b2:	fmul   QWORD PTR [ecx-0x4b8f82de]
  4141b8:	pop    ss
  4141b9:	mov    BYTE PTR [ebp-0x618e2bbd],dh
  4141bf:	xor    eax,0xcf889421
  4141c4:	int3   
  4141c5:	addr16 je 0x414215
  4141c8:	mov    cl,ch
  4141ca:	dec    edx
  4141cb:	inc    ebp
  4141cc:	or     esi,esp
  4141ce:	loopne 0x4141d9
  4141d0:	mov    dl,0x4e
  4141d2:	popf   
  4141d3:	inc    esp
  4141d4:	mov    dh,0x1a
  4141d6:	mov    WORD PTR [eax+0x21b11689],ds
  4141dc:	xor    cl,dl
  4141de:	(bad)  
  4141df:	mov    al,0x2c
  4141e1:	jl     0x414258
  4141e3:	retf   
  4141e4:	retf   
  4141e5:	sub    bl,BYTE PTR [ebx+0x21c1288f]
  4141eb:	hlt    
  4141ec:	stc    
  4141ed:	sbb    BYTE PTR [ebp+0x6fc9ef9a],al
  4141f3:	push   eax
  4141f4:	enter  0x68e9,0x61
  4141f8:	sahf   
  4141f9:	push   esp
  4141fa:	jge    0x4141b3
  4141fc:	mov    cl,0xe0
  4141fe:	xchg   esi,eax
  4141ff:	bound  ebp,QWORD PTR [edi+eax*1]
  414202:	call   0xd95d:0x41964811
  414209:	xor    eax,0x7228feb6
  41420e:	mov    bh,0x76
  414210:	mov    esp,DWORD PTR cs:[edi]
  414213:	or     ebp,ebp
  414215:	xor    ecx,ebx
  414217:	mov    edi,0x833f129b
  41421c:	sbb    DWORD PTR [edx+0x56],ebp
  41421f:	fisub  DWORD PTR ds:0xcbee9626
  414225:	shr    BYTE PTR [ecx+0x35],cl
  414228:	mov    edx,0x87a52e4c
  41422d:	lods   eax,DWORD PTR ds:[esi]
  41422e:	out    0x3b,eax
  414230:	(bad)  
  414231:	imul   BYTE PTR [eax+0x382bb1d6]
  414237:	out    dx,al
  414238:	cmp    eax,0x703894da
  41423d:	adc    BYTE PTR [edi-0x3b2a180f],ah
  414243:	xor    esp,eax
  414245:	stos   DWORD PTR es:[edi],eax
  414246:	bswap  esi
  414248:	in     al,0xd8
  41424a:	out    dx,eax
  41424b:	sbb    DWORD PTR [eax-0x64835d4a],ecx
  414251:	jbe    0x4141ea
  414253:	jno    0x4141f5
  414255:	mov    eax,0x4935f044
  41425a:	add    al,0x97
  41425c:	and    DWORD PTR [esi+0x6c],0x14
  414260:	mov    WORD PTR [eax-0x6203d85f],?
  414266:	ja     0x4142a1
  414268:	(bad)  
  414269:	mov    cl,0x4f
  41426b:	or     ch,al
  41426d:	pop    edi
  41426e:	or     edx,DWORD PTR [ebx-0x44fde194]
  414274:	dec    ebx
  414275:	adc    al,0x8e
  414277:	mov    BYTE PTR [ebp-0x7cc22f09],ch
  41427d:	fadd   st(6),st
  41427f:	push   ecx
  414280:	jae    0x4142ec
  414282:	dec    ebp
  414283:	loope  0x41421f
  414285:	pushf  
  414286:	(bad)  
  414287:	out    dx,al
  414288:	popa   
  414289:	push   edx
  41428a:	out    0xd1,eax
  41428c:	cmp    al,0x3a
  41428e:	lahf   
  41428f:	or     DWORD PTR [ebp+0x36],0x963b6221
  414296:	ins    BYTE PTR es:[edi],dx
  414297:	hlt    
  414298:	mov    ecx,0x276b73cf
  41429d:	sbb    eax,0xca0be536
  4142a2:	aas    
  4142a3:	shr    DWORD PTR [ecx],cl
  4142a5:	scas   al,BYTE PTR es:[edi]
  4142a6:	dec    edx
  4142a7:	and    esp,DWORD PTR [esi-0x31]
  4142aa:	dec    esi
  4142ab:	xchg   ebx,eax
  4142ac:	inc    edx
  4142ad:	push   ds
  4142ae:	dec    ebp
  4142af:	mov    eax,es
  4142b1:	dec    ebx
  4142b2:	xor    esi,ecx
  4142b4:	repz popa 
  4142b6:	in     al,dx
  4142b7:	or     eax,0x127d7726
  4142bc:	mov    ds:0xcfad9f6c,al
  4142c1:	add    ch,BYTE PTR gs:[ebp+0x535b2ae1]
  4142c8:	ror    DWORD PTR [ebx-0x57b080ab],1
  4142ce:	cli    
  4142cf:	mov    ebp,0x79deaa44
  4142d4:	int    0x99
  4142d6:	push   ebp
  4142d7:	sbb    al,0xf2
  4142d9:	ja     0x4142ad
  4142db:	inc    ecx
  4142dc:	push   esi
  4142dd:	dec    ecx
  4142de:	push   0xffffffb3
  4142e0:	mov    al,ds:0x85451258
  4142e5:	mov    BYTE PTR [edi+0xb],ch
  4142e8:	jae    0x414308
  4142ea:	lods   al,BYTE PTR ds:[esi]
  4142eb:	stos   DWORD PTR es:[edi],eax
  4142ec:	scas   al,BYTE PTR es:[edi]
  4142ed:	sbb    al,0xf1
  4142ef:	xchg   BYTE PTR [ecx],dh
  4142f1:	fsubp  st(5),st
  4142f3:	jmp    DWORD PTR [ebx-0x2e]
  4142f6:	das    
  4142f7:	pop    ss
  4142f8:	cmp    ecx,edi
  4142fa:	mov    al,BYTE PTR [esi]
  4142fc:	(bad)  
  4142fd:	sbb    eax,0x21c47edb
  414302:	ja     0x4142b2
  414304:	push   ecx
  414305:	adc    bl,bl
  414307:	ins    BYTE PTR es:[edi],dx
  414308:	push   0x3b
  41430a:	cmp    BYTE PTR [eax+ebp*2],bl
  41430d:	xchg   esi,eax
  41430e:	and    ah,BYTE PTR [ecx]
  414310:	and    dl,al
  414312:	push   edi
  414313:	and    eax,0xc4af39b
  414318:	mov    dl,0xaf
  41431a:	mov    ah,BYTE PTR [ebx]
  41431c:	sahf   
  41431d:	imul   esp,DWORD PTR [ebp-0x1c00f27],0x997bd6e5
  414327:	cli    
  414328:	adc    BYTE PTR [ecx-0x80b65f0],dh
  41432e:	nop
  41432f:	scas   al,BYTE PTR es:[edi]
  414330:	mov    bh,0x7a
  414332:	pop    esp
  414333:	and    eax,0x204fafa2
  414338:	test   eax,0x8ef58c6c
  41433d:	or     ch,dh
  41433f:	push   DWORD PTR ds:0x114534d8
  414345:	shr    BYTE PTR [edx],0xf4
  414348:	xchg   edx,eax
  414349:	xchg   edx,eax
  41434a:	inc    eax
  41434b:	cmp    BYTE PTR [ebx+0x6c753178],bh
  414351:	loope  0x4142d5
  414353:	adc    BYTE PTR [esi],0x95
  414356:	ret    0xd1dc
  414359:	rol    BYTE PTR [edi-0x5ded3b87],0xe8
  414360:	add    al,0x58
  414362:	icebp  
  414363:	sbb    eax,0xc48e8615
  414368:	xor    eax,0xfc53d69b
  41436d:	fwait
  41436e:	push   ss
  41436f:	adc    BYTE PTR [ebx+0x524988ca],0x74
  414376:	add    DWORD PTR [ebp-0x7c],edx
  414379:	push   esp
  41437a:	push   eax
  41437b:	fwait
  41437c:	pop    edi
  41437d:	mov    al,0xc2
  41437f:	out    dx,al
  414380:	sbb    al,0x27
  414382:	mov    cl,ch
  414384:	fdiv   QWORD PTR [ebp+0x2091130c]
  41438a:	push   esp
  41438b:	push   0x4e12b432
  414390:	ins    BYTE PTR es:[edi],dx
  414391:	clc    
  414392:	mov    ebx,0xb09e27d0
  414397:	aas    
  414398:	inc    edx
  414399:	pushf  
  41439a:	mov    edx,0x9636f43c
  41439f:	ret    0x2db1
  4143a2:	lock loop 0x414330
  4143a5:	sub    eax,edi
  4143a7:	jbe    0x4143cd
  4143a9:	mov    ds:0x959a2735,al
  4143ae:	push   ss
  4143af:	hlt    
  4143b0:	adc    al,dl
  4143b2:	or     al,BYTE PTR [eax+esi*4+0x16]
  4143b6:	icebp  
  4143b7:	call   0xda1:0xabaf622c
  4143be:	cmp    DWORD PTR [edi+0xa],ebp
  4143c1:	ins    DWORD PTR es:[edi],dx
  4143c2:	cmp    DWORD PTR [ecx],esi
  4143c4:	push   ebx
  4143c5:	xor    BYTE PTR ds:0x6c9fad34,0x3e
  4143cc:	sbb    ch,ah
  4143ce:	repz dec esi
  4143d0:	lock jne 0x4143a1
  4143d3:	lods   eax,DWORD PTR ds:[esi]
  4143d4:	push   ebx
  4143d5:	loope  0x414381
  4143d7:	pop    ds
  4143d8:	push   eax
  4143d9:	loopne 0x4143db
  4143db:	jae    0x414384
  4143dd:	dec    eax
  4143de:	ret    0x3568
  4143e1:	mov    WORD PTR [esi-0x6e],ds
  4143e4:	sub    BYTE PTR [ecx],bh
  4143e6:	xchg   DWORD PTR [edx+0x32],eax
  4143e9:	sti    
  4143ea:	dec    eax
  4143eb:	stos   DWORD PTR es:[edi],eax
  4143ec:	mov    eax,ds:0x307f2360
  4143f1:	ins    BYTE PTR es:[edi],dx
  4143f2:	repnz test ebx,ebp
  4143f5:	jle    0x414420
  4143f7:	jmp    0xa3d1:0x816fd62
  4143fe:	push   edi
  4143ff:	dec    ebx
  414400:	loope  0x414387
  414402:	mov    edi,0xcc093703
  414407:	and    al,0xc8
  414409:	cmp    eax,0x58d44d2
  41440e:	mov    ebp,0x556d985d
  414413:	ror    DWORD PTR [ebx-0x79],0x41
  414417:	bound  eax,QWORD PTR [ecx-0x10]
  41441a:	mov    eax,ds:0xccb77d6d
  41441f:	adc    eax,0x5d9e86a6
  414424:	inc    esi
  414425:	shl    DWORD PTR [ebx+0x5c5633a4],1
  41442b:	push   edx
  41442c:	test   DWORD PTR [edx-0x72b9346a],edi
  414432:	stos   DWORD PTR es:[edi],eax
  414433:	mov    WORD PTR [esi-0x14],?
  414436:	repnz mov cl,0x15
  414439:	fcom   st(4)
  41443b:	and    al,0xf6
  41443d:	jle    0x41441d
  41443f:	sbb    al,0x5b
  414441:	lahf   
  414442:	adc    al,al
  414444:	xor    ebx,DWORD PTR [eax+0x36]
  414447:	or     BYTE PTR [ecx-0x448a6903],0x32
  41444e:	adc    DWORD PTR [ebp+0x16],ebp
  414451:	std    
  414452:	xor    eax,0x5b11157
  414457:	xchg   BYTE PTR [ebp+0x0],bh
  41445a:	dec    edi
  41445b:	imul   ecx,DWORD PTR ds:0x38ffbd53,0xffffffab
  414462:	or     DWORD PTR [ebp+0x1f],ebp
  414465:	nop
  414466:	mov    al,0x98
  414468:	enter  0x9bf1,0x90
  41446c:	test   DWORD PTR es:[eax-0x4bfedcaa],ecx
  414473:	mov    al,ds:0x52dbc60a
  414478:	gs jb  0x414457
  41447b:	adc    BYTE PTR [edx],bl
  41447d:	jl     0x414405
  41447f:	xlat   BYTE PTR ds:[ebx]
  414480:	jecxz  0x414480
  414482:	sbb    ebx,DWORD PTR [ebx+0x62049ffd]
  414488:	dec    edi
  414489:	xor    eax,0xe017e9f1
  41448e:	mov    edx,0xcda1de92
  414493:	jmp    0x414492
  414495:	inc    ecx
  414496:	loope  0x4144fc
  414498:	(bad)  
  414499:	cmp    BYTE PTR [edi],ch
  41449b:	mov    eax,ds:0xd2d0b5e
  4144a0:	xchg   esi,eax
  4144a1:	xor    bh,BYTE PTR [esi+0xa]
  4144a4:	inc    eax
  4144a5:	leave  
  4144a6:	jecxz  0x4144f7
  4144a8:	clc    
  4144a9:	cmp    eax,0xdb201aa8
  4144ae:	add    al,0x62
  4144b0:	popa   
  4144b1:	into   
  4144b2:	in     eax,0x4a
  4144b4:	jle    0x4144dc
  4144b6:	mov    esp,0x450295c8
  4144bb:	pop    ecx
  4144bc:	sub    edx,DWORD PTR [edi-0x6a971e50]
  4144c2:	sub    al,BYTE PTR [ecx]
  4144c4:	xor    BYTE PTR [ecx-0x7f8184d2],cl
  4144ca:	das    
  4144cb:	or     eax,DWORD PTR [edi]
  4144cd:	outs   dx,DWORD PTR ds:[esi]
  4144ce:	retf   0x3be2
  4144d1:	es xchg esi,eax
  4144d3:	add    dh,BYTE PTR [edx]
  4144d5:	jne    0x4144a5
  4144d7:	and    DWORD PTR [eax],ecx
  4144d9:	pushf  
  4144da:	fist   WORD PTR [edx+0x1a8bb63b]
  4144e0:	retf   
  4144e1:	sub    eax,0x79faf7ce
  4144e6:	ror    BYTE PTR [eax*2+0x63ec6680],0x62
  4144ee:	loope  0x414565
  4144f0:	cmp    eax,0x3d8dce41
  4144f5:	push   ebp
  4144f6:	jns    0x414513
  4144f8:	leave  
  4144f9:	pop    ebp
  4144fa:	mov    ds,esi
  4144fc:	lds    ebp,FWORD PTR [ecx+0x54]
  4144ff:	lods   eax,DWORD PTR ds:[esi]
  414500:	retf   0x870f
  414503:	(bad)  
  414504:	pop    ebx
  414505:	nop
  414506:	arpl   WORD PTR [eax-0x5b],sp
  414509:	(bad)
  41450d:	sub    dl,BYTE PTR [eax+esi*8]
  414510:	pop    ebx
  414511:	push   esp
  414512:	sar    al,0xb
  414515:	mov    al,ds:0x27f85446
  41451a:	in     eax,0xa7
  41451c:	fadd   DWORD PTR gs:[edx-0x2d0db1cc]
  414523:	xchg   edi,eax
  414524:	pusha  
  414525:	xchg   esp,eax
  414526:	mov    ecx,0x55c46a33
  41452b:	ja     0x414521
  41452d:	stc    
  41452e:	pop    esi
  41452f:	xchg   esp,eax
  414530:	lock ins BYTE PTR es:[edi],dx
  414532:	push   ecx
  414533:	rol    ecx,cl
  414535:	inc    eax
  414536:	jge    0x414540
  414538:	adc    DWORD PTR [ecx],edi
  41453a:	test   al,0x8a
  41453c:	sbb    BYTE PTR [eax+0x445ba2f8],dh
  414542:	inc    ebp
  414543:	int3   
  414544:	ficomp WORD PTR [ecx-0x9338071]
  41454a:	je     0x414514
  41454c:	jp     0x4144fb
  41454e:	jne    0x414545
  414550:	into   
  414551:	cmp    esi,DWORD PTR [edi+0x63]
  414554:	jo     0x41458d
  414556:	ds xor ch,cl
  414559:	xlat   BYTE PTR ds:[ebx]
  41455a:	mov    DWORD PTR [ebx+0x6],ebp
  41455d:	push   ss
  41455e:	call   0xaa67f34d
  414563:	mov    edi,0x3ee9d4f8
  414568:	mov    ds:0x3ca7cb5e,eax
  41456d:	cmp    ch,BYTE PTR ss:[ecx+0x37]
  414571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414572:	mov    dh,0xa2
  414574:	sub    DWORD PTR [ecx],0x3861f654
  41457a:	sbb    ch,bh
  41457c:	and    al,0xc1
  41457e:	cli    
  41457f:	pop    ecx
  414580:	and    BYTE PTR [ebx+0x5c],dl
  414583:	pop    ecx
  414584:	inc    esp
  414585:	loope  0x4145aa
  414587:	inc    esp
  414588:	add    DWORD PTR [eax+0x3e],edx
  41458b:	call   0x56b8764a
  414590:	fldcw  WORD PTR [edi]
  414592:	retf   0xa26
  414595:	ret    0x2ecc
  414598:	lea    ebx,[edi+0x38a48dbf]
  41459e:	pop    ebx
  41459f:	sbb    BYTE PTR [eax],ah
  4145a1:	loope  0x4145e9
  4145a3:	xor    eax,esi
  4145a5:	sbb    eax,DWORD PTR [edx-0x79]
  4145a8:	jmp    0xd7dc95b5
  4145ad:	jl     0x4145c0
  4145af:	loopne 0x4145e1
  4145b1:	sbb    DWORD PTR [edi],0x9050c898
  4145b7:	or     DWORD PTR [ecx+0x5d],ecx
  4145ba:	adc    DWORD PTR [esi],0x6a1678
  4145c0:	repnz iret 
  4145c2:	addr16 mov bl,0x4b
  4145c5:	imul   ebp,ecx,0xffffff8d
  4145c8:	shrd   esi,edi,cl
  4145cb:	push   ds
  4145cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145cd:	pop    ds
  4145ce:	dec    esp
  4145cf:	(bad)  
  4145d0:	jmp    0x4145a7
  4145d2:	xlat   BYTE PTR ds:[ebx]
  4145d3:	dec    esp
  4145d4:	xor    BYTE PTR [ebx+0x137be12d],ch
  4145da:	push   ss
  4145db:	and    al,0xcc
  4145dd:	nop
  4145de:	sub    BYTE PTR [ebx+0x64],ch
  4145e1:	jae    0x4145f3
  4145e3:	fild   DWORD PTR [ecx]
  4145e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145e6:	cmp    ebx,DWORD PTR [esi]
  4145e8:	cmp    ch,BYTE PTR [ebx+0x14]
  4145eb:	mov    edi,DWORD PTR [edx]
  4145ed:	mov    al,cl
  4145ef:	lds    edx,FWORD PTR [ebp+0x62]
  4145f2:	fist   DWORD PTR [ecx+0x74d77894]
  4145f8:	scas   al,BYTE PTR es:[edi]
  4145f9:	cs sbb esi,ecx
  4145fc:	fbstp  TBYTE PTR [edi+ecx*8-0x26]
  414600:	push   esi
  414601:	mov    ds:0x26306363,eax
  414606:	xchg   BYTE PTR [eax+edx*1-0x24],dl
  41460a:	retf   
  41460b:	(bad)  
  41460c:	xchg   dl,bh
  41460e:	mov    dh,0xaa
  414610:	ret    
  414611:	add    bh,BYTE PTR [eax+0x75059a8b]
  414617:	fdiv   st,st(7)
  414619:	sub    al,0xba
  41461b:	loopne 0x4145f2
  41461d:	sub    ebp,DWORD PTR [edx+0x81880e6]
  414623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414624:	(bad)  
  414625:	mov    ebp,0xe25f78dd
  41462a:	sbb    eax,0xd0dee997
  41462f:	dec    esp
  414630:	gs push esp
  414632:	or     al,0xa5
  414634:	mov    eax,ds:0xdad34d64
  414639:	scas   al,BYTE PTR es:[edi]
  41463a:	outs   dx,DWORD PTR ds:[esi]
  41463b:	xchg   esi,eax
  41463c:	clc    
  41463d:	or     al,0xb1
  41463f:	sub    DWORD PTR [esi-0x25],ecx
  414642:	jae    0x414645
  414644:	fist   DWORD PTR [ecx+edx*4]
  414647:	je     0x414632
  414649:	jmp    0x9f10:0x1c026b99
  414650:	mov    bh,0x94
  414652:	pop    ecx
  414653:	jp     0x414648
  414655:	hlt    
  414656:	xor    dl,BYTE PTR [ebp-0x5b]
  414659:	sbb    DWORD PTR [esp+eax*4+0x44609919],ecx
  414660:	(bad)  
  414661:	sbb    al,0x9e
  414663:	into   
  414664:	jnp    0x414637
  414666:	jb     0x414618
  414668:	mov    edx,0xd58f38e2
  41466d:	cli    
  41466e:	inc    ebp
  41466f:	fst    DWORD PTR [edx-0x36]
  414672:	fistp  WORD PTR [ebx-0x51f6286b]
  414678:	push   eax
  414679:	fdiv   QWORD PTR [edi]
  41467b:	jecxz  0x41463d
  41467d:	add    bh,BYTE PTR [ebx+ecx*8-0x59]
  414681:	int    0x78
  414683:	add    bl,ah
  414685:	ret    
  414686:	xor    BYTE PTR [edi+0x1432509d],dh
  41468c:	and    al,0x81
  41468e:	push   ss
  41468f:	into   
  414690:	add    ecx,edx
  414692:	mov    ds:0xddb091ef,eax
  414697:	mov    ah,0x84
  414699:	or     eax,0x6c7a90de
  41469e:	inc    esi
  41469f:	jmp    ebx
  4146a1:	repz mov dl,0xd3
  4146a4:	mov    ecx,0xc761b21f
  4146a9:	pop    DWORD PTR [ecx-0x2de2c880]
  4146af:	xor    al,0x1b
  4146b1:	imul   ebp,DWORD PTR [ecx],0x8a326c7a
  4146b7:	fcom   st(4)
  4146b9:	stos   DWORD PTR es:[edi],eax
  4146ba:	dec    eax
  4146bb:	ror    BYTE PTR [edx-0x7b],1
  4146be:	in     al,dx
  4146bf:	ss push eax
  4146c1:	sub    ch,BYTE PTR [eax-0x42]
  4146c4:	and    DWORD PTR [ecx+esi*2-0x2dd0c4f1],edi
  4146cb:	mov    BYTE PTR ds:0xbecf5369,bh
  4146d1:	out    0x36,eax
  4146d3:	or     al,0x10
  4146d5:	imul   ebp,DWORD PTR [esp+ecx*4-0x73],0xffffffe0
  4146da:	or     BYTE PTR [edi],dl
  4146dc:	fdivr  st,st(6)
  4146de:	(bad)  
  4146df:	mov    ebx,0x6198cff0
  4146e4:	push   ebx
  4146e5:	dec    edx
  4146e6:	mov    eax,0x1c3bf414
  4146eb:	cdq    
  4146ec:	pop    ebp
  4146ed:	mov    ds:0xa6bd0337,eax
  4146f2:	sub    ebx,DWORD PTR [esp+esi*2]
  4146f5:	ins    DWORD PTR es:[edi],dx
  4146f6:	xchg   ebp,eax
  4146f7:	neg    BYTE PTR [edi]
  4146f9:	mov    ds:0xd2e12560,al
  4146fe:	pop    eax
  4146ff:	jle    0x4146ec
  414701:	xor    bl,ah
  414703:	jb     0x4146f8
  414705:	pusha  
  414706:	mov    ebx,0x9d215ed1
  41470b:	sbb    al,BYTE PTR [ebp-0x59]
  41470e:	jecxz  0x414692
  414710:	push   ebx
  414711:	mov    cl,0x6
  414713:	pushf  
  414714:	(bad)  
  414715:	stc    
  414716:	add    dh,BYTE PTR [ebx+0x54397a92]
  41471c:	push   eax
  41471d:	dec    eax
  41471e:	(bad)  
  414720:	dec    edx
  414721:	ret    0x73dd
  414724:	cmc    
  414725:	cmp    eax,0x7608eab1
  41472a:	jge    0x414790
  41472c:	xchg   edx,eax
  41472d:	fwait
  41472e:	xchg   ah,dh
  414730:	data16 fiadd WORD PTR [esi+0x16]
  414734:	shl    DWORD PTR [esi+0x1d],1
  414737:	inc    edx
  414738:	hlt    
  414739:	xchg   ecx,eax
  41473a:	sub    al,0x9e
  41473c:	hlt    
  41473d:	shl    cl,0xb3
  414740:	or     BYTE PTR ds:0x1890f1a8,ah
  414746:	xor    DWORD PTR [eax+0x62],0xffffffa6
  41474a:	imul   edi,DWORD PTR [esi],0xfffffff7
  41474d:	mov    ah,0x26
  41474f:	repz jbe 0x414721
  414752:	test   BYTE PTR [eax+eiz*4-0x43],dl
  414756:	outs   dx,BYTE PTR ds:[esi]
  414757:	sub    eax,0x17160b10
  41475c:	sbb    edx,DWORD PTR es:[esi-0x5fb3dc3a]
  414763:	cmp    DWORD PTR [ebx+0x6b],ebp
  414766:	rcr    BYTE PTR [ecx-0x523351c4],1
  41476c:	arpl   sp,di
  41476e:	sub    eax,0x87054716
  414773:	push   edi
  414774:	call   0xef96:0xd87b5179
  41477b:	pop    ebx
  41477c:	not    DWORD PTR [edi+0x409307bb]
  414782:	push   es
  414783:	(bad)  
  414786:	push   esp
  414787:	dec    eax
  414788:	mov    dh,0x32
  41478a:	pop    ebx
  41478b:	hlt    
  41478c:	push   0x25942099
  414791:	mov    ecx,0x47e7986c
  414796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414797:	cli    
  414798:	sbb    DWORD PTR [ebx-0x4e],ecx
  41479b:	fistp  QWORD PTR [eax]
  41479d:	mov    esp,0x215d96a8
  4147a2:	mov    ebx,0xc2c47ac7
  4147a7:	push   edx
  4147a8:	fs jmp 0xfb4727f7
  4147ae:	jno    0x414826
  4147b0:	push   edx
  4147b1:	xor    eax,0xcf524f8a
  4147b6:	popf   
  4147b7:	out    0xcf,eax
  4147b9:	scas   al,BYTE PTR es:[edi]
  4147ba:	jp     0x414782
  4147bc:	mov    ecx,0x671f37ef
  4147c1:	(bad)  
  4147c2:	xlat   BYTE PTR ds:[ebx]
  4147c3:	add    BYTE PTR [esi],ch
  4147c5:	xchg   ebp,eax
  4147c6:	mov    ch,0x47
  4147c8:	ret    
  4147c9:	dec    esp
  4147ca:	jno    0x4147d2
  4147cc:	or     esi,edx
  4147ce:	into   
  4147cf:	ins    BYTE PTR es:[edi],dx
  4147d0:	inc    edx
  4147d1:	jmp    0x4147d5
  4147d3:	cwde   
  4147d4:	loopne 0x41479d
  4147d6:	or     BYTE PTR [edx-0x48d76905],bh
  4147dc:	cs mov al,0x51
  4147df:	enter  0xb506,0x39
  4147e3:	xchg   ecx,eax
  4147e4:	or     BYTE PTR [ebx-0x9],bl
  4147e7:	int    0xa8
  4147e9:	call   0xbc9b9245
  4147ee:	out    dx,al
  4147ef:	add    DWORD PTR ds:0x966c4aed,ebx
  4147f5:	dec    ebx
  4147f6:	es cwde 
  4147f8:	mov    esi,0x52b3474e
  4147fd:	in     al,dx
  4147fe:	rol    esp,0x25
  414801:	lahf   
  414802:	js     0x41479e
  414804:	lods   eax,DWORD PTR ds:[esi]
  414805:	popa   
  414806:	stos   BYTE PTR es:[edi],al
  414807:	xor    BYTE PTR [esi],al
  414809:	test   BYTE PTR [esp+ecx*4],cl
  41480c:	fst    DWORD PTR [edi-0x47e1e0db]
  414812:	test   DWORD PTR [edi-0x783bca98],eax
  414818:	fwait
  414819:	out    dx,eax
  41481a:	dec    esi
  41481b:	lds    edx,FWORD PTR [ebx-0x3a]
  41481e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41481f:	(bad)  [eax+0x4901110f]
  414825:	mul    BYTE PTR [esi]
  414827:	inc    eax
  414828:	je     0x4147cf
  41482a:	jmp    FWORD PTR [ebx]
  41482c:	adc    eax,0xeed26ad0
  414831:	ret    0x1bc5
  414834:	loope  0x4147e8
  414836:	mov    ds:0xd139fe26,al
  41483b:	mov    ah,0xb3
  41483d:	sar    DWORD PTR [ecx+0x67],1
  414840:	or     esi,DWORD PTR [edx+0x4fd5ef05]
  414846:	mov    ch,0x40
  414848:	xchg   esi,eax
  414849:	je     0x4147ec
  41484b:	(bad)  
  41484c:	pop    ecx
  41484d:	cmp    bh,BYTE PTR [eax-0x191e2c51]
  414853:	lods   eax,DWORD PTR ds:[esi]
  414854:	jmp    0xf6f4:0xc724bdda
  41485b:	xchg   ebp,eax
  41485c:	or     al,0x3d
  41485e:	ja     0x41480a
  414860:	jns    0x414872
  414862:	or     edi,edx
  414864:	fldenv [edi]
  414866:	add    edi,ecx
  414868:	mov    edi,0x55ddd61c
  41486d:	sub    ecx,DWORD PTR [ebp+0x2c]
  414870:	and    esp,DWORD PTR [edx+ecx*2+0x66]
  414874:	test   DWORD PTR [ebp+0x28147e15],0x732d7b9d
  41487e:	scas   al,BYTE PTR es:[edi]
  41487f:	pop    edx
  414880:	shl    BYTE PTR [edx],cl
  414882:	sbb    BYTE PTR [edi-0x19659117],cl
  414888:	add    eax,0xe6db1264
  41488d:	adc    al,0xfd
  41488f:	mov    esi,0xc3654a93
  414894:	leave  
  414895:	mov    edx,0x8abcfe94
  41489a:	stos   DWORD PTR es:[edi],eax
  41489b:	out    dx,eax
  41489c:	jg     0x4148c9
  41489e:	push   es
  41489f:	bound  esp,QWORD PTR [ebx-0x42]
  4148a2:	jmp    0x2e1e858c
  4148a7:	fdiv   QWORD PTR [eax+0x40cc4929]
  4148ad:	push   esp
  4148ae:	xchg   edi,eax
  4148af:	(bad)  
  4148b0:	fldenv [ebx+0x3b69d691]
  4148b6:	xchg   esp,eax
  4148b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b8:	sbb    al,0x69
  4148ba:	pop    edi
  4148bb:	sbb    dl,BYTE PTR [esi]
  4148bd:	in     al,0x79
  4148bf:	xchg   edx,eax
  4148c0:	loope  0x414896
  4148c2:	aad    0xec
  4148c4:	mov    ah,0xf4
  4148c6:	sbb    BYTE PTR [edx+0x44],dh
  4148c9:	xchg   edx,eax
  4148ca:	out    0x3a,al
  4148cc:	sbb    eax,0x378b38f0
  4148d1:	jo     0x41488e
  4148d3:	cmp    eax,DWORD PTR [ebx-0x2e2129ec]
  4148d9:	mov    esi,0x9b678aec
  4148de:	ja     0x4148ba
  4148e0:	xchg   esi,eax
  4148e1:	dec    ebp
  4148e2:	cmp    ebp,DWORD PTR [ebp+edi*8+0x3c540f18]
  4148e9:	push   0xa97c3f
  4148ee:	sbb    BYTE PTR [ebx],bl
  4148f0:	jb     0x4148fb
  4148f2:	and    dl,al
  4148f4:	into   
  4148f5:	ins    DWORD PTR es:[edi],dx
  4148f6:	test   DWORD PTR [esi],0xa5719234
  4148fc:	add    DWORD PTR [ecx+edx*2],esp
  4148ff:	sbb    edi,DWORD PTR [edx-0x1dc80e69]
  414905:	xchg   esi,eax
  414906:	repz push ss
  414908:	cli    
  414909:	lock or ch,bh
  41490c:	aas    
  41490d:	inc    ecx
  41490e:	xlat   BYTE PTR ds:[ebx]
  41490f:	or     esi,ebx
  414911:	mov    es,ebp
  414913:	scas   eax,DWORD PTR es:[edi]
  414914:	mov    dl,0x61
  414916:	push   eax
  414917:	call   0xf35c:0xfa7c1ce2
  41491e:	daa    
  41491f:	push   ecx
  414920:	gs mov ah,0x1e
  414923:	cs lahf 
  414925:	fisttp DWORD PTR [edx]
  414927:	stos   BYTE PTR es:[edi],al
  414928:	loop   0x4148e6
  41492a:	inc    eax
  41492b:	dec    ecx
  41492c:	mov    dl,0xd3
  41492e:	stos   BYTE PTR es:[edi],al
  41492f:	stos   BYTE PTR es:[edi],al
  414930:	add    DWORD PTR [ebx+0x4e81b56d],0x733bb85c
  41493a:	imul   ebx,DWORD PTR [eax],0x220544ff
  414940:	inc    esp
  414941:	addr16 ret 
  414943:	in     al,0x13
  414945:	push   eax
  414946:	jp     0x41498c
  414948:	mov    al,ds:0x6fbe28f1
  41494d:	push   esp
  41494e:	add    BYTE PTR [edi],ch
  414950:	mov    cl,0x3b
  414952:	mov    ah,0xe9
  414954:	sub    BYTE PTR [ebx+edx*4+0x1f],bh
  414958:	ins    BYTE PTR es:[edi],dx
  414959:	mov    dl,dh
  41495b:	mov    ebx,0x276ec235
  414960:	test   DWORD PTR [ebx-0x67],esi
  414963:	push   eax
  414964:	cmp    eax,0xe7d152a7
  414969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41496a:	cmp    al,0xbf
  41496c:	adc    eax,0x42fead7e
  414971:	ins    BYTE PTR es:[edi],dx
  414972:	add    al,0x87
  414974:	out    dx,eax
  414975:	ss nop
  414977:	push   cs
  414978:	dec    edx
  414979:	adc    BYTE PTR [ebx+ebx*1+0x49],dh
  41497d:	leave  
  41497e:	cwde   
  41497f:	sahf   
  414980:	inc    ebx
  414981:	inc    edx
  414982:	retf   0xe82a
  414985:	in     eax,dx
  414986:	icebp  
  414987:	dec    ecx
  414988:	ret    0x5208
  41498b:	mov    al,ds:0x678c0977
  414990:	outs   dx,BYTE PTR ds:[esi]
  414991:	push   ss
  414992:	data16 cmp BYTE PTR ds:[edi-0x540aa069],bh
  41499a:	int    0xff
  41499c:	in     al,dx
  41499d:	dec    eax
  41499e:	adc    BYTE PTR [edx],cl
  4149a0:	repz fwait
  4149a2:	and    edx,DWORD PTR [ecx+0x2f57064f]
  4149a8:	ds mov edi,0x85ed6da4
  4149ae:	sub    bh,ch
  4149b0:	in     eax,dx
  4149b1:	inc    esp
  4149b2:	int3   
  4149b3:	jbe    0x41497d
  4149b5:	dec    edi
  4149b6:	fptan  
  4149b8:	add    DWORD PTR ds:0xf6fe5e57,0x16da037e
  4149c2:	push   0x866f4de2
  4149c7:	mov    DWORD PTR [edi-0x63],edx
  4149ca:	sub    ah,ah
  4149cc:	je     0x41498a
  4149ce:	ins    BYTE PTR es:[edi],dx
  4149cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149d0:	je     0x414a00
  4149d2:	gs (bad) 
  4149d4:	mov    dl,0x16
  4149d6:	xor    cl,dl
  4149d8:	aam    0x38
  4149da:	(bad)  
  4149db:	fsubr  st(7),st
  4149dd:	sbb    al,0xb7
  4149df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149e0:	imul   edi,DWORD PTR [edx],0x35
  4149e3:	dec    ebp
  4149e4:	loop   0x4149e6
  4149e6:	sbb    DWORD PTR [ecx],ebp
  4149e8:	push   cs
  4149e9:	cmp    DWORD PTR [esi+0x5617239f],ebx
  4149ef:	add    al,0xf8
  4149f1:	ds cmp al,0x2
  4149f4:	jbe    0x4149b1
  4149f6:	icebp  
  4149f7:	mov    eax,ds:0xb5ba7288
  4149fc:	xor    eax,0xf481ac68
  414a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a02:	hlt    
  414a03:	mov    dh,0x97
  414a05:	ins    DWORD PTR es:[edi],dx
  414a06:	gs xchg edi,eax
  414a08:	out    0x1,al
  414a0a:	mov    ds:0x2a1e6512,al
  414a0f:	aam    0x67
  414a11:	and    edi,ebp
  414a13:	stc    
  414a14:	cwde   
  414a15:	mov    edi,0x7cd42c37
  414a1a:	jmp    0x193:0x94cb2504
  414a21:	push   ecx
  414a22:	sar    dh,1
  414a24:	outs   dx,BYTE PTR ds:[esi]
  414a25:	adc    al,0xb3
  414a27:	in     eax,0x1c
  414a29:	stos   DWORD PTR es:[edi],eax
  414a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a2b:	or     eax,0x7ee9d21e
  414a30:	adc    BYTE PTR [ebp-0x2a8fbd98],al
  414a36:	push   esp
  414a37:	out    dx,al
  414a38:	adc    ebp,esi
  414a3a:	mov    edx,0xfbf4b4d3
  414a3f:	cdq    
  414a40:	and    BYTE PTR [esi+ebp*1],bl
  414a43:	loopne 0x414a50
  414a45:	out    dx,eax
  414a46:	(bad)  
  414a47:	popa   
  414a48:	cmp    ebx,esp
  414a4a:	lods   al,BYTE PTR ds:[esi]
  414a4b:	int    0xe
  414a4d:	pop    ecx
  414a4e:	dec    edi
  414a4f:	popa   
  414a50:	sbb    BYTE PTR [edx],bh
  414a52:	daa    
  414a53:	neg    DWORD PTR [eax+0x12]
  414a56:	jno    0x414acc
  414a58:	add    al,0x54
  414a5a:	jge    0x414a0b
  414a5c:	loope  0x4149e1
  414a5e:	popf   
  414a5f:	rol    DWORD PTR [eax],0xce
  414a62:	xchg   esp,eax
  414a63:	xchg   edx,eax
  414a64:	cli    
  414a65:	jmp    FWORD PTR [edi-0x6a]
  414a68:	adc    eax,0x92c8bd52
  414a6d:	loope  0x414ab6
  414a6f:	cdq    
  414a70:	les    edx,FWORD PTR [edx]
  414a72:	mov    bl,ch
  414a74:	outs   dx,DWORD PTR ss:[esi]
  414a76:	(bad)  
  414a77:	mov    cl,0x7b
  414a79:	ins    DWORD PTR es:[edi],dx
  414a7a:	lock jo 0x414adb
  414a7d:	scas   eax,DWORD PTR es:[edi]
  414a7e:	out    0x14,eax
  414a80:	stos   BYTE PTR es:[edi],al
  414a81:	xchg   ebp,eax
  414a82:	pushf  
  414a83:	or     eax,0x9e591d78
  414a88:	jo     0x414a0b
  414a8a:	std    
  414a8b:	xchg   ebp,eax
  414a8c:	sub    dh,ah
  414a8e:	dec    eax
  414a8f:	out    0x22,al
  414a91:	push   eax
  414a92:	scas   al,BYTE PTR es:[edi]
  414a93:	dec    ebx
  414a94:	xor    DWORD PTR [eax+edi*8+0x61319538],esp
  414a9b:	mov    ds:0x9fa2ea12,al
  414aa0:	pop    esi
  414aa1:	mov    eax,0xce258c54
  414aa6:	add    al,BYTE PTR [ebx]
  414aa8:	inc    eax
  414aa9:	cmc    
  414aaa:	sbb    al,BYTE PTR [edi+0x9]
  414aad:	imul   edx,DWORD PTR [ebp-0x3e623f91],0xffffffc6
  414ab4:	mov    ?,eax
  414ab6:	sub    DWORD PTR [ebx+0x1d],edi
  414ab9:	jecxz  0x414b34
  414abb:	jl     0x414af0
  414abd:	xchg   BYTE PTR [ebx-0xd],ch
  414ac0:	test   eax,0x4d694d62
  414ac5:	dec    esi
  414ac6:	cld    
  414ac7:	inc    eax
  414ac8:	daa    
  414ac9:	mov    ch,0x69
  414acb:	cmp    al,0xce
  414acd:	jg     0x414b11
  414acf:	jmp    0x414ab2
  414ad1:	sub    al,0xd0
  414ad3:	ins    DWORD PTR es:[edi],dx
  414ad4:	mov    esp,0xb8473c99
  414ad9:	das    
  414ada:	push   edx
  414adb:	int    0x1c
  414add:	lea    eax,[eax+0x27e0f57e]
  414ae3:	sbb    eax,0x1b5f1d6a
  414ae8:	xor    esp,esp
  414aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aeb:	mov    eax,DWORD PTR [edi]
  414aed:	mov    bl,0xa
  414aef:	dec    ebx
  414af0:	rcr    DWORD PTR [esi+0x29],0xf1
  414af4:	inc    ecx
  414af5:	stc    
  414af6:	repnz ds mov esi,0x38b0eaef
  414afd:	fwait
  414afe:	mov    ch,0xa0
  414b00:	cmp    BYTE PTR [edx-0xd672abd],ch
  414b06:	dec    edi
  414b07:	and    al,0x5
  414b09:	mov    edi,0xd1598e69
  414b0e:	in     al,dx
  414b0f:	ss jecxz 0x414b6a
  414b12:	push   0xffffffac
  414b14:	sub    DWORD PTR [esi-0x12],ebx
  414b17:	in     eax,0xf5
  414b19:	mov    al,ds:0xfd467aa5
  414b1e:	in     eax,0x6f
  414b20:	jmp    0x414ad2
  414b22:	mov    ecx,0xa3fd3fd4
  414b27:	mov    BYTE PTR [ebp-0x5816d8fd],al
  414b2d:	sbb    dh,BYTE PTR [eax+0x4d]
  414b30:	and    eax,0x80cf179e
  414b35:	jbe    0x414ac6
  414b37:	or     eax,0x5e2c79fe
  414b3c:	test   bh,al
  414b3e:	rcl    BYTE PTR [edi+0xa1ba134],cl
  414b44:	and    BYTE PTR [ebx+0x74],0x51
  414b48:	dec    ebp
  414b49:	adc    DWORD PTR [esi+0x71],eax
  414b4c:	(bad)  
  414b4d:	xchg   esi,eax
  414b4e:	fiadd  WORD PTR [ebp+0x68]
  414b51:	mov    eax,0x65345af2
  414b56:	mov    al,ds:0xacced16d
  414b5b:	rol    BYTE PTR [esi-0x57117452],1
  414b61:	jbe    0x414afc
  414b63:	xlat   BYTE PTR ds:[ebx]
  414b64:	push   ebx
  414b65:	sti    
  414b66:	jecxz  0x414af5
  414b68:	add    eax,0xadd40196
  414b6d:	xchg   ecx,eax
  414b6e:	out    0xbb,eax
  414b70:	stos   BYTE PTR es:[edi],al
  414b71:	fidivr DWORD PTR [esp+ebp*8]
  414b74:	mov    cs,WORD PTR [ebx+eiz*8+0x179b281]
  414b7b:	icebp  
  414b7c:	dec    ebp
  414b7e:	inc    ebp
  414b7f:	mov    ah,0xbc
  414b81:	out    0x7d,eax
  414b83:	inc    esp
  414b84:	addr16 push ss
  414b86:	mov    ch,0xba
  414b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b89:	pop    es
  414b8a:	sub    al,0x8f
  414b8c:	adc    esi,DWORD PTR [ebp-0x6ec571ba]
  414b92:	rcl    eax,1
  414b94:	mov    esi,esi
  414b96:	lock retf 
  414b98:	jmp    0x2dcbeadc
  414b9d:	(bad)  
  414b9e:	daa    
  414b9f:	pop    ebp
  414ba0:	int3   
  414ba1:	(bad)  
  414ba2:	sar    BYTE PTR [eax],1
  414ba4:	push   esi
  414ba5:	inc    edx
  414ba6:	jns    0x414bcc
  414ba8:	or     eax,0x58e6455d
  414bad:	jb     0x414b75
  414baf:	xor    esp,DWORD PTR [edx]
  414bb1:	or     ebp,DWORD PTR [esi-0x74a65688]
  414bb7:	js     0x414c2b
  414bb9:	(bad)  
  414bba:	fst    QWORD PTR [ebp+edi*8-0x1ea876df]
  414bc1:	cmp    bh,BYTE PTR [edx-0x78c5c479]
  414bc7:	xlat   BYTE PTR ds:[ebx]
  414bc8:	stos   DWORD PTR es:[edi],eax
  414bc9:	enter  0x9ac2,0xc2
  414bcd:	aaa    
  414bce:	sbb    ch,bl
  414bd0:	inc    esi
  414bd1:	pop    ebx
  414bd2:	fwait
  414bd3:	cmp    DWORD PTR [eax+0x47bc7fd3],eax
  414bd9:	push   esp
  414bda:	pop    esp
  414bdb:	or     al,0x34
  414bdd:	std    
  414bde:	push   esp
  414bdf:	loopne 0x414c1c
  414be1:	das    
  414be2:	movhps xmm0,QWORD PTR ds:0x38145dd4
  414be9:	into   
  414bea:	icebp  
  414beb:	cwde   
  414bec:	inc    ebp
  414bed:	out    0xb9,al
  414bef:	pop    esi
  414bf0:	push   ebx
  414bf1:	dec    esp
  414bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf3:	leave  
  414bf4:	push   ebp
  414bf5:	sub    BYTE PTR [edi-0x7939f0d1],bh
  414bfb:	out    dx,al
  414bfc:	jecxz  0x414c5a
  414bfe:	sbb    ebx,DWORD PTR [esi-0x2c8daf25]
  414c04:	in     al,dx
  414c05:	pop    edi
  414c06:	or     DWORD PTR [esi-0x7eb72e6],edi
  414c0c:	and    DWORD PTR [eax],ebp
  414c0e:	and    ecx,0x7c
  414c11:	ret    
  414c12:	pop    ebx
  414c13:	add    bh,BYTE PTR [ebx+0xe]
  414c16:	es pop ds
  414c18:	leave  
  414c19:	xchg   ebp,eax
  414c1a:	jl     0x414c39
  414c1c:	cli    
  414c1d:	mov    al,ds:0x92e08ff0
  414c22:	or     BYTE PTR [edi-0x58],bh
  414c25:	add    BYTE PTR [ebx-0x2c],ch
  414c28:	cdq    
  414c29:	sti    
  414c2a:	push   ss
  414c2b:	(bad)  
  414c2d:	jmp    0x414bf9
  414c2f:	or     bh,BYTE PTR [ebp+ecx*8+0x76d0cbb]
  414c36:	sahf   
  414c37:	imul   ebx,DWORD PTR [ebx-0x4fbcde53],0x6829178d
  414c41:	adc    dl,BYTE PTR [edi]
  414c43:	cmp    BYTE PTR [ecx-0x5bb5c1ff],0x46
  414c4a:	test   bh,ch
  414c4c:	sub    ah,BYTE PTR [ebx-0x7a3cb302]
  414c52:	popf   
  414c53:	pop    eax
  414c54:	jns    0x414c71
  414c56:	or     BYTE PTR [ebp+0x5c],bl
  414c59:	cmp    ebx,edi
  414c5b:	add    dh,BYTE PTR cs:[edx+0x59]
  414c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c60:	dec    BYTE PTR [eax+0x761d3339]
  414c66:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414c68:	sub    bl,dh
  414c6a:	inc    ebx
  414c6b:	cmp    BYTE PTR [esi-0x49abd22f],0x39
  414c72:	test   al,0xc7
  414c74:	sahf   
  414c75:	xchg   esp,eax
  414c76:	xor    al,BYTE PTR ds:0x1451d094
  414c7c:	test   al,0xbc
  414c7e:	mov    eax,ds:0x9e703496
  414c83:	imul   ecx,esi,0xffffffe6
  414c86:	push   ebp
  414c87:	loopne 0x414c25
  414c89:	repnz mov ds:0x2e138cf9,al
  414c8f:	fdiv   QWORD PTR [edx+0x33]
  414c92:	mov    esp,0xfc859089
  414c97:	inc    ebx
  414c98:	mov    bl,0x6f
  414c9a:	mov    ecx,0xa8de03d3
  414c9f:	mov    ch,0xc2
  414ca1:	fadd   st,st(2)
  414ca3:	push   ds
  414ca4:	push   cs
  414ca5:	mov    BYTE PTR [edx],dl
  414ca7:	in     eax,dx
  414ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca9:	das    
  414caa:	cmp    eax,DWORD PTR [ebp-0x4f9aaba9]
  414cb0:	mov    ds:0xa49e7299,al
  414cb5:	dec    ecx
  414cb6:	add    eax,0xfb03f34b
  414cbb:	inc    ebp
  414cbc:	div    ah
  414cbe:	sahf   
  414cbf:	jl     0x414d3d
  414cc1:	adc    al,0xfe
  414cc3:	xor    al,0x25
  414cc5:	mov    esi,0x5509fd5a
  414cca:	scas   al,BYTE PTR es:[edi]
  414ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ccc:	dec    esi
  414ccd:	mov    dl,0xd
  414ccf:	loope  0x414c77
  414cd1:	pop    ebp
  414cd2:	shl    BYTE PTR [eax],0xf
  414cd5:	out    dx,eax
  414cd6:	icebp  
  414cd7:	lock sub BYTE PTR [edi-0x39f32fe4],0x89
  414cdf:	jne    0x414ca6
  414ce1:	push   ss
  414ce2:	(bad)  
  414ce3:	push   ds
  414ce4:	outs   dx,DWORD PTR ds:[esi]
  414ce5:	cld    
  414ce6:	inc    edx
  414ce7:	das    
  414ce8:	push   esi
  414ce9:	(bad)  
  414cea:	das    
  414ceb:	push   0x42
  414ced:	sbb    esp,DWORD PTR [edi]
  414cef:	xchg   ecx,eax
  414cf0:	mov    ecx,0x738f40ee
  414cf5:	push   0xa63d07d0
  414cfa:	(bad)
  414cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d00:	fcomip st,st(5)
  414d02:	dec    edi
  414d03:	sub    cl,ah
  414d05:	jp     0x414d54
  414d07:	(bad)  
  414d08:	loop   0x414c98
  414d0a:	add    esp,edi
  414d0c:	loope  0x414c8f
  414d0e:	xor    eax,0xd0be294c
  414d13:	sub    eax,0xdb4f5ee6
  414d18:	pop    ebp
  414d19:	xchg   ebp,eax
  414d1a:	cmp    BYTE PTR [ebp+0x2d],bl
  414d1d:	aaa    
  414d1e:	push   ds
  414d1f:	jae    0x414d6b
  414d21:	mov    bl,0xc
  414d23:	stc    
  414d24:	or     eax,edx
  414d26:	cli    
  414d27:	dec    ebx
  414d28:	stc    
  414d29:	inc    esi
  414d2a:	retf   
  414d2b:	adc    al,0x96
  414d2d:	in     al,dx
  414d2e:	inc    esp
  414d2f:	ja     0x414cba
  414d31:	idiv   BYTE PTR ds:0x3bcc2e5b
  414d37:	adc    eax,0x464e1f19
  414d3c:	mov    WORD PTR [esi+0x7b],?
  414d3f:	ds jno 0x414cfb
  414d42:	bound  ebp,QWORD PTR [ebx+0x2199f8e0]
  414d48:	shl    BYTE PTR [ebx-0x1],1
  414d4b:	adc    edi,DWORD PTR [edx-0x60d458d]
  414d51:	add    DWORD PTR [ecx+0x7ec8f95a],ebp
  414d57:	clc    
  414d58:	and    ebx,DWORD PTR [ebp+0x361ee636]
  414d5e:	jmp    0x1e3:0x123252f9
  414d65:	mov    bl,0x1
  414d67:	sub    DWORD PTR [ebp-0x56],esi
  414d6a:	or     esi,DWORD PTR [eax+0x26]
  414d6d:	aas    
  414d6e:	add    ecx,DWORD PTR [edi]
  414d70:	(bad)  
  414d71:	pop    ss
  414d72:	mov    dl,0x58
  414d74:	ins    BYTE PTR es:[edi],dx
  414d75:	mov    al,ds:0xfadb3aa2
  414d7a:	pop    edi
  414d7b:	mov    ecx,0x35fdf0cc
  414d80:	xor    eax,0x186461d1
  414d85:	dec    ebx
  414d86:	dec    esi
  414d87:	rcl    DWORD PTR [edi+eiz*4+0x61e0d4e6],cl
  414d8e:	imul   edi,DWORD PTR [edx],0x37
  414d91:	in     al,dx
  414d92:	mov    edi,0x8b872bc5
  414d97:	and    dl,ah
  414d99:	std    
  414d9a:	jnp    0x23a6b2ff
  414da0:	jmp    0xf370:0xfbd0985b
  414da7:	sub    esp,DWORD PTR [edx+0x32b2b8c8]
  414dad:	jp     0x414db5
  414daf:	sub    edi,DWORD PTR [edx+0x42ff5bb8]
  414db5:	add    al,0xd0
  414db7:	jnp    0x414e06
  414db9:	dec    esi
  414dba:	mov    esp,0xa4acf192
  414dbf:	into   
  414dc0:	jo     0x414d7f
  414dc2:	pop    ss
  414dc3:	dec    esp
  414dc4:	mov    esp,ecx
  414dc6:	sbb    bl,al
  414dc8:	dec    eax
  414dc9:	sub    edx,DWORD PTR [ebx+eax*8+0x61fb9017]
  414dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd1:	ss xchg edx,eax
  414dd3:	outs   dx,DWORD PTR ds:[esi]
  414dd4:	test   eax,0x3c796735
  414dd9:	(bad)  
  414dda:	jbe    0x414d82
  414ddc:	jb     0x414e30
  414dde:	das    
  414ddf:	loope  0x414dac
  414de1:	out    0x85,eax
  414de3:	mov    edx,0x76094c60
  414de8:	mov    esp,0xbcb4ec52
  414ded:	or     BYTE PTR [edx+0x4f1bd518],cl
  414df3:	ss push 0x54954ee8
  414df9:	mov    eax,ds:0xd7ef7a8b
  414dfe:	sub    eax,0x18320902
  414e03:	arpl   cx,bp
  414e05:	test   eax,0x2b268a64
  414e0a:	sub    edi,DWORD PTR [edi+0x438c45dd]
  414e10:	and    BYTE PTR [edx+0x71],0xba
  414e14:	sbb    al,BYTE PTR [eax+0x17]
  414e17:	lea    ecx,[edi+0x75]
  414e1a:	jb     0x414dbd
  414e1c:	jae    0x414e47
  414e1e:	cmp    eax,0x7f0058e4
  414e23:	xchg   ebx,eax
  414e24:	xor    eax,0xb19caa75
  414e29:	sub    bl,bh
  414e2b:	sub    al,0x89
  414e2d:	clc    
  414e2e:	jp     0x414e6c
  414e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e31:	scas   al,BYTE PTR es:[edi]
  414e32:	jg     0x414e82
  414e34:	test   eax,0x162a147f
  414e39:	inc    esp
  414e3a:	inc    ebp
  414e3b:	inc    ebp
  414e3c:	into   
  414e3d:	(bad)  
  414e3e:	pop    ebp
  414e3f:	pop    edx
  414e40:	iret   
  414e41:	out    0x48,eax
  414e43:	(bad)  
  414e44:	rcr    BYTE PTR [ebx],1
  414e46:	mov    DWORD PTR [ebx+edi*2],edx
  414e49:	fiadd  DWORD PTR [edx+0x179f356f]
  414e4f:	into   
  414e50:	jo     0x414ea1
  414e52:	mov    al,0xbd
  414e54:	lock cmp edi,DWORD PTR [edx]
  414e57:	jns    0x414ec0
  414e59:	pop    ebp
  414e5a:	sub    DWORD PTR [edi-0x12],ecx
  414e5d:	mov    dh,0xfa
  414e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e60:	push   edi
  414e61:	shld   DWORD PTR [ecx-0x60],esp,cl
  414e65:	mov    eax,0xf0204be0
  414e6a:	sub    eax,DWORD PTR ds:0xad333321
  414e70:	inc    esp
  414e71:	sbb    BYTE PTR [edi-0x3f],ah
  414e74:	cli    
  414e75:	cmp    esi,edx
  414e77:	pop    DWORD PTR [edi+0x1ecee7e7]
  414e7d:	add    ebx,DWORD PTR [edx+0x20]
  414e80:	add    esi,eax
  414e82:	leave  
  414e83:	into   
  414e84:	mov    edi,0x17f2e0d9
  414e89:	xor    DWORD PTR [ebx],ebx
  414e8b:	sub    DWORD PTR [esi+0x9b3a706],eax
  414e91:	addr16 xchg edx,eax
  414e93:	and    edi,DWORD PTR [eax]
  414e95:	push   edi
  414e96:	jo     0x414ea5
  414e98:	popa   
  414e99:	icebp  
  414e9a:	mov    BYTE PTR [eax-0x32],0x23
  414e9e:	mov    bh,0x8e
  414ea0:	mov    eax,0x17c84982
  414ea5:	ins    BYTE PTR es:[edi],dx
  414ea6:	xor    bh,bh
  414ea8:	pushf  
  414ea9:	cmp    BYTE PTR [esi],dl
  414eab:	push   0x6
  414ead:	jg     0x414e46
  414eaf:	xor    cl,BYTE PTR [esi-0x2728a661]
  414eb5:	lods   eax,DWORD PTR ds:[esi]
  414eb6:	retf   0xa354
  414eb9:	fs stos DWORD PTR es:[edi],eax
  414ebb:	lahf   
  414ebc:	mov    ecx,0x85bcea36
  414ec1:	sbb    al,0xa3
  414ec3:	inc    eax
  414ec4:	(bad)  [ebp+0x2b]
  414ec7:	int    0x29
  414ec9:	fidivr DWORD PTR [eax]
  414ecb:	jge    0x414f46
  414ecd:	sbb    eax,0xab1b93d3
  414ed2:	aas    
  414ed3:	fnstcw WORD PTR [edi-0xa]
  414ed6:	mov    al,ds:0x5b177c2
  414edb:	adc    al,0x51
  414edd:	sbb    DWORD PTR [edx+0x73],esp
  414ee0:	in     eax,dx
  414ee1:	dec    esp
  414ee2:	iret   
  414ee3:	lock nop
  414ee5:	jo     0x414eb2
  414ee7:	push   ebx
  414ee8:	or     eax,0x26648b2d
  414eed:	ret    0xcf58
  414ef0:	jp     0x414f67
  414ef2:	ds enter 0x8797,0xf5
  414ef7:	push   cs
  414ef8:	nop
  414ef9:	inc    ebx
  414efa:	jp     0x414f66
  414efc:	and    esp,0x6c259cc3
  414f02:	pop    ecx
  414f03:	rcl    BYTE PTR [esi-0x4bae24f5],cl
  414f09:	out    dx,eax
  414f0a:	les    esi,FWORD PTR [ebp-0x371c758c]
  414f10:	xor    eax,0x728b3748
  414f15:	int    0xec
  414f17:	addr16 jnp 0x414f57
  414f1a:	in     eax,0x9d
  414f1c:	pop    esi
  414f1d:	(bad)  
  414f1e:	loope  0x414f05
  414f20:	shl    eax,cl
  414f22:	outs   dx,BYTE PTR ds:[esi]
  414f23:	dec    ebx
  414f24:	sbb    edi,DWORD PTR [esi-0x14c3743e]
  414f2a:	pop    edx
  414f2b:	jnp    0x414ee2
  414f2d:	sbb    DWORD PTR [ebp+0x78],0x3dd4d9cd
  414f34:	ret    
  414f35:	xchg   ebp,eax
  414f36:	pop    es
  414f37:	jnp    0x414ecf
  414f39:	fistp  QWORD PTR [ecx]
  414f3b:	and    eax,0x169f723a
  414f40:	retf   0xae09
  414f43:	jo     0x414f06
  414f45:	(bad)  
  414f46:	leave  
  414f47:	or     cl,ch
  414f49:	adc    al,0x8c
  414f4b:	jns    0x414f12
  414f4d:	in     eax,dx
  414f4e:	aam    0x60
  414f50:	push   ebp
  414f51:	jecxz  0x414fce
  414f53:	dec    esi
  414f54:	xchg   esp,eax
  414f55:	test   BYTE PTR [eax+0x6b],ah
  414f58:	loopne 0x414fc6
  414f5a:	mov    bl,BYTE PTR cs:[ebp+0x6b1c7e22]
  414f61:	imul   esi,DWORD PTR [esp+eax*8+0x1d7c4134],0x3cec21ad
  414f6c:	push   ss
  414f6d:	mov    ch,BYTE PTR [ebp+0x2cf1f028]
  414f73:	add    BYTE PTR [esi-0x4cf90a48],0xee
  414f7a:	cmp    eax,0x92c1554
  414f7f:	and    BYTE PTR ds:0xaf0b,dh
  414f84:	jb     0x414f7f
  414f86:	pop    ss
  414f87:	je     0x414fb6
  414f89:	xor    BYTE PTR [edi-0xf],dl
  414f8c:	sbb    eax,0x8cd7d90f
  414f91:	push   edx
  414f92:	daa    
  414f93:	inc    esi
  414f94:	adc    al,0x62
  414f96:	mov    dh,0xe0
  414f98:	mov    edx,ebp
  414f9a:	sahf   
  414f9b:	and    eax,0x7343ab17
  414fa0:	jne    0x414f99
  414fa2:	pushf  
  414fa3:	test   ebx,eax
  414fa5:	(bad)  
  414fa6:	daa    
  414fa7:	aad    0x96
  414fa9:	sbb    eax,0x16272356
  414fae:	mov    edx,0x6f4f32e7
  414fb3:	bound  edi,QWORD PTR [eax]
  414fb5:	ja     0x414f4c
  414fb7:	loopne 0x414f4c
  414fb9:	in     al,0xa1
  414fbb:	xchg   ecx,eax
  414fbc:	cmc    
  414fbd:	gs sub eax,0x831bfd2f
  414fc3:	mov    edx,0x8720e951
  414fc8:	fcomp  QWORD PTR ds:0x1fe33ff6
  414fce:	retf   
  414fcf:	hlt    
  414fd0:	dec    eax
  414fd1:	jnp    0x414fca
  414fd3:	cld    
  414fd4:	or     ch,0xf4
  414fd7:	fild   DWORD PTR [ecx]
  414fd9:	clc    
  414fda:	cwde   
  414fdb:	adc    DWORD PTR [ecx+0x6c],ebx
  414fde:	dec    ecx
  414fdf:	jb     0x41503b
  414fe1:	rcr    DWORD PTR fs:[ecx],cl
  414fe4:	dec    edx
  414fe5:	mov    ds:0x2e76edfd,eax
  414fea:	cmp    al,0xb7
  414fec:	in     eax,dx
  414fed:	inc    di
  414fef:	sub    ch,cl
  414ff1:	cs test al,0xe5
  414ff4:	and    eax,0xf1e9c87d
  414ff9:	xor    eax,0xdc82fb8b
  414ffe:	jmp    0xf7b3:0xc8a0b686
  415005:	inc    edi
  415006:	out    0x1,eax
  415008:	mov    eax,0x7c931f33
  41500d:	fst    st(2)
  41500f:	inc    ecx
  415010:	rol    BYTE PTR [edx-0x72b180ca],0x5a
  415017:	loopne 0x415036
  415019:	add    DWORD PTR [esi-0x5b],eax
  41501c:	inc    esi
  41501d:	mov    eax,ds:0xed1d2e6b
  415022:	shr    BYTE PTR [ebx],1
  415024:	xlat   BYTE PTR ds:[ebx]
  415025:	addr16 xchg ecx,eax
  415027:	add    eax,0x75d9044e
  41502c:	dec    ecx
  41502d:	pop    esp
  41502e:	scas   al,BYTE PTR es:[edi]
  41502f:	in     al,dx
  415030:	cmp    BYTE PTR [ecx],cl
  415032:	stc    
  415033:	cli    
  415034:	aas    
  415035:	cli    
  415036:	xchg   edx,eax
  415037:	push   0xd802d475
  41503c:	outs   dx,BYTE PTR ds:[esi]
  41503d:	outs   dx,BYTE PTR fs:[esi]
  41503f:	aad    0x30
  415041:	mov    dh,0x79
  415043:	test   eax,0xa430eca6
  415048:	and    BYTE PTR [ecx],ah
  41504a:	pop    esi
  41504b:	and    DWORD PTR [edi],ebp
  41504d:	jb     0x4150a2
  41504f:	pop    ss
  415050:	inc    ecx
  415051:	inc    ebp
  415052:	lahf   
  415053:	jns    0x4150a2
  415055:	or     ebx,ecx
  415057:	mov    esp,0xe59f091b
  41505c:	arpl   WORD PTR [eax+0x2a33c728],bx
  415062:	jl     0x4150b8
  415064:	scas   al,BYTE PTR es:[edi]
  415065:	mov    esi,0x39951a9c
  41506a:	je     0x41500e
  41506c:	bound  edx,QWORD PTR [eax-0x1e7a87a1]
  415072:	sbb    BYTE PTR [esi+0x6a],0x56
  415076:	jne    0x415008
  415078:	out    0x1a,eax
  41507a:	jg     0x4150ae
  41507c:	mov    cl,0xe0
  41507e:	add    dl,BYTE PTR [esi-0x33]
  415081:	add    eax,0x27b490ab
  415086:	mov    al,ds:0x927f41f3
  41508b:	dec    edx
  41508c:	daa    
  41508d:	pop    ebx
  41508e:	pavgb  mm0,QWORD PTR [eax+0x24]
  415092:	xchg   BYTE PTR [ecx],bl
  415094:	imul   edi,DWORD PTR [eax-0x5443c3aa],0x40c1a97c
  41509e:	xor    eax,0xeddc0f6a
  4150a3:	xlat   BYTE PTR ds:[ebx]
  4150a4:	push   ss
  4150a5:	fld    QWORD PTR [eax-0x36]
  4150a8:	cld    
  4150a9:	es pop es
  4150ab:	sbb    esp,DWORD PTR [eax-0x641f5e67]
  4150b1:	test   al,0x2d
  4150b3:	cmp    al,0xb1
  4150b5:	jmp    0x8e096f45
  4150ba:	sahf   
  4150bb:	idiv   DWORD PTR ds:0xf92d1a25
  4150c1:	pushf  
  4150c2:	xor    ah,BYTE PTR [edi-0x4c984a55]
  4150c8:	xor    esp,DWORD PTR [ebx+edi*8+0x8]
  4150cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150cd:	repz (bad) 
  4150cf:	dec    ebx
  4150d0:	out    dx,al
  4150d1:	cmc    
  4150d2:	add    bl,bl
  4150d4:	inc    ebp
  4150d5:	lods   ax,WORD PTR ds:[esi]
  4150d7:	push   0xffffffaf
  4150d9:	fdiv   DWORD PTR [edi-0x18]
  4150dc:	push   ebx
  4150dd:	mov    ebp,0xf0b01a9f
  4150e2:	test   eax,0xfea20b64
  4150e7:	mov    dl,0xb7
  4150e9:	idiv   al
  4150eb:	jmp    0xff63:0x59fcf611
  4150f2:	and    eax,0x4af261db
  4150f7:	mov    ch,0x93
  4150f9:	mov    ebx,0xe46c7763
  4150fe:	or     BYTE PTR [esi+0x37],al
  415101:	mov    eax,0x77b459c7
  415106:	pop    ecx
  415107:	pop    edx
  415108:	retf   
  415109:	(bad)  
  41510a:	fdiv   DWORD PTR ds:0x9897564f
  415110:	call   0xb1ef:0xbd76050c
  415117:	jno    0x415185
  415119:	inc    ebp
  41511a:	scas   al,BYTE PTR es:[edi]
  41511b:	or     eax,0x77ad5c2
  415120:	ds mov ah,0x20
  415123:	cli    
  415124:	mov    edx,0x281fdb1
  415129:	adc    eax,0x85bd7225
  41512e:	xchg   ecx,eax
  41512f:	inc    ebp
  415130:	hlt    
  415131:	jne    0x4150dc
  415133:	fdiv   QWORD PTR [esi+0x34]
  415136:	das    
  415137:	mov    al,ds:0x719fae46
  41513c:	scas   al,BYTE PTR es:[edi]
  41513d:	fdiv   st,st(5)
  41513f:	push   edx
  415140:	addr16 in eax,dx
  415142:	mov    ecx,0x3c4f7384
  415147:	xor    edi,DWORD PTR [ebx+0x6bb5cb64]
  41514d:	frstor [ecx]
  41514f:	cs je  0x41510b
  415152:	ficom  DWORD PTR [eax-0x43]
  415155:	pop    ss
  415156:	and    al,0x32
  415158:	mov    DWORD PTR [esi+0x4ebcfb3a],0x282c5a70
  415162:	sbb    al,0x7a
  415164:	dec    ebp
  415165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415166:	jge    0x4151bf
  415168:	sti    
  415169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41516a:	sbb    al,0x7b
  41516c:	push   edx
  41516d:	imul   eax,DWORD PTR [ecx+ecx*2],0xfffffff6
  415171:	and    bl,cl
  415173:	mov    ds:0x1014f09,eax
  415178:	pop    ss
  415179:	push   ecx
  41517a:	subps  xmm7,XMMWORD PTR [ebx]
  41517d:	js     0x415190
  41517f:	add    BYTE PTR [eax],0x9a
  415182:	dec    edi
  415183:	stc    
  415184:	popf   
  415185:	jmp    0x78f9:0x34ddb6e3
  41518c:	xor    edx,ebx
  41518e:	and    edx,DWORD PTR [edi]
  415190:	push   cs
  415191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415192:	repnz inc ecx
  415194:	and    DWORD PTR [ebp+0x551d5415],ecx
  41519a:	clc    
  41519b:	pop    esi
  41519c:	adc    DWORD PTR [edi-0x2159c914],0x1a
  4151a3:	mov    bh,0x99
  4151a5:	and    bl,BYTE PTR [edx-0x4cc5c7e3]
  4151ab:	mov    edi,DWORD PTR ds:0x57478ad4
  4151b1:	sub    eax,0xd4d7b529
  4151b6:	outs   dx,BYTE PTR ds:[esi]
  4151b7:	mov    edx,0x2bcf8680
  4151bc:	push   ds
  4151bd:	mov    ah,0x2b
  4151bf:	push   edx
  4151c0:	push   ecx
  4151c1:	les    ebx,FWORD PTR [ecx+0x7c7a3d4f]
  4151c7:	lock mov dl,0xd2
  4151ca:	fisttp QWORD PTR ds:0x54373c6
  4151d0:	gs pop DWORD PTR gs:[ebx+0x23ffc27c]
  4151d8:	xchg   ebx,eax
  4151d9:	jmp    0xfd05:0x7c9701a2
  4151e0:	mov    cl,0x5e
  4151e2:	mov    cl,0x7c
  4151e4:	out    dx,eax
  4151e5:	icebp  
  4151e6:	inc    esi
  4151e7:	bound  edi,QWORD PTR [eax-0x51]
  4151ea:	(bad)  
  4151ec:	stos   DWORD PTR es:[edi],eax
  4151ed:	fcomi  st,st(5)
  4151ef:	mov    ecx,DWORD PTR [edi-0x54e40f76]
  4151f5:	icebp  
  4151f6:	div    DWORD PTR [edx-0x4588fb0e]
  4151fc:	jne    0x41524a
  4151fe:	ins    DWORD PTR es:[edi],dx
  4151ff:	out    0x4f,al
  415201:	clc    
  415202:	outs   dx,DWORD PTR ds:[esi]
  415203:	sub    DWORD PTR [edx],0x52
  415206:	sbb    al,0x2b
  415208:	in     eax,0x97
  41520a:	les    esp,FWORD PTR [edx+edx*1+0x63c8747b]
  415211:	outs   dx,BYTE PTR ds:[esi]
  415212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415213:	push   ds
  415214:	repnz mov edx,0x82c6d930
  41521a:	call   0x7d1db633
  41521f:	inc    ebx
  415220:	adc    eax,0x4dcf4d61
  415225:	cmp    BYTE PTR [eax+0x3c719739],bl
  41522b:	cwde   
  41522c:	xchg   esi,eax
  41522d:	and    eax,0xf8807f62
  415232:	rol    ebp,cl
  415234:	in     eax,dx
  415235:	stos   BYTE PTR es:[edi],al
  415236:	aas    
  415237:	push   ds
  415238:	sbb    cl,dh
  41523a:	push   cs
  41523b:	out    0x72,eax
  41523d:	dec    ebp
  41523e:	jne    0x4151e2
  415240:	mov    ch,0x44
  415242:	push   edi
  415243:	aaa    
  415244:	das    
  415245:	mov    ecx,0x81deba6
  41524a:	lea    eax,[ecx]
  41524c:	test   eax,0x115a39a1
  415251:	push   edi
  415252:	fs mov bl,bl
  415255:	mov    ebp,0x802178ad
  41525a:	into   
  41525b:	and    ebp,DWORD PTR ds:0x34e6542b
  415261:	pop    ebx
  415262:	das    
  415263:	dec    edi
  415264:	xor    eax,0xffbeb193
  415269:	push   esp
  41526a:	inc    ebp
  41526b:	add    al,al
  41526d:	imul   DWORD PTR [eax]
  41526f:	push   eax
  415270:	sub    DWORD PTR [ecx+0x53209747],esi
  415276:	jnp    0x41522b
  415278:	jp     0x4151fc
  41527a:	add    DWORD PTR [eax+0x1c],ecx
  41527d:	ins    BYTE PTR es:[edi],dx
  41527e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41527f:	xchg   esi,eax
  415280:	test   eax,0x59c90d07
  415285:	jbe    0x4152cc
  415287:	lock mov ebp,0x6c60991c
  41528d:	adc    ebp,DWORD PTR [esi-0x25]
  415290:	sbb    bl,BYTE PTR [eax]
  415292:	sbb    dl,ah
  415294:	jns    0x415233
  415296:	mov    ds,WORD PTR [ecx+0x59c473a5]
  41529c:	xchg   ebp,eax
  41529d:	stos   BYTE PTR es:[edi],al
  41529e:	push   ds
  41529f:	pop    ebx
  4152a0:	or     dl,BYTE PTR [ebp-0x17]
  4152a3:	js     0x4152d1
  4152a5:	stos   DWORD PTR es:[edi],eax
  4152a6:	(bad)  
  4152a7:	xor    al,0x68
  4152a9:	xchg   DWORD PTR [ecx],eax
  4152ab:	in     eax,0xcb
  4152ad:	lods   al,BYTE PTR ds:[esi]
  4152ae:	in     eax,dx
  4152af:	xor    DWORD PTR [edi+0x21fa387c],0x3c
  4152b6:	shl    DWORD PTR ss:[edx-0x60],1
  4152ba:	ret    
  4152bb:	dec    esi
  4152bc:	nop
  4152bd:	cmp    BYTE PTR [ecx],ch
  4152bf:	mov    ah,BYTE PTR [edx+ebp*1]
  4152c2:	mov    bl,0x52
  4152c4:	mov    ebp,0xcc5c2d5e
  4152c9:	test   BYTE PTR [edx+0x20],al
  4152cc:	imul   esi,DWORD PTR [edi+0x29],0xffffffa5
  4152d0:	das    
  4152d1:	mov    edi,0x3fcb98c7
  4152d6:	pushf  
  4152d7:	xor    eax,0xcb597d3b
  4152dc:	aad    0xbb
  4152de:	outs   dx,BYTE PTR ds:[esi]
  4152df:	push   esp
  4152e0:	jecxz  0x415278
  4152e2:	scas   al,BYTE PTR es:[edi]
  4152e3:	sbb    BYTE PTR [esi+0x47e31779],ch
  4152e9:	sar    DWORD PTR [ebx+0x7e33fd42],1
  4152ef:	inc    edi
  4152f0:	push   0x5fc181a3
  4152f5:	adc    al,0x55
  4152f7:	adc    al,0x85
  4152f9:	sub    edi,DWORD PTR [edi+0x3b0cb61f]
  4152ff:	es fcom st(3)
  415302:	scas   eax,DWORD PTR es:[edi]
  415303:	inc    edx
  415304:	pop    ss
  415305:	jbe    0x415350
  415307:	and    al,0x11
  415309:	xor    esi,DWORD PTR [ebx+0x23a2c25]
  41530f:	test   eax,0x794987be
  415314:	pop    edx
  415315:	mov    ds:0xaa830aa8,al
  41531a:	test   ebp,ecx
  41531c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41531d:	inc    ebx
  41531e:	sbb    esi,DWORD PTR [eax+0x1a]
  415321:	jl     0x41531e
  415323:	add    DWORD PTR [edx],ebx
  415325:	xor    ch,bl
  415327:	dec    ebx
  415328:	or     al,0x26
  41532a:	gs int3 
  41532c:	xchg   esp,eax
  41532d:	pusha  
  41532e:	test   al,0xc5
  415330:	cmp    BYTE PTR [edx-0x41df656b],dh
  415336:	cs in  eax,dx
  415338:	ficom  WORD PTR [ebp-0x6c360a32]
  41533e:	cmp    edi,DWORD PTR [eax]
  415340:	repnz pushf 
  415342:	inc    esi
  415343:	inc    edx
  415344:	(bad)  {k1}{z}
  415349:	and    al,0x7
  41534b:	jmp    0x2634:0xd15bcb8c
  415352:	cmp    edx,DWORD PTR [edi-0x156a924d]
  415358:	jno    0x4153c5
  41535a:	mov    eax,ds:0xaa820feb
  41535f:	cs lahf 
  415361:	jmp    0x1140:0x7645e3f4
  415368:	push   ebp
  415369:	push   ds
  41536a:	add    esp,DWORD PTR [edx+0x1e]
  41536d:	loope  0x4153cb
  41536f:	nop
  415370:	aam    0x15
  415372:	push   ds
  415373:	mov    eax,ds:0x26ab6388
  415378:	icebp  
  415379:	add    eax,DWORD PTR [ebp-0x49]
  41537c:	mov    ebp,DWORD PTR [edi+0x47c32c15]
  415382:	addr16 (bad) 
  415384:	clc    
  415385:	ins    BYTE PTR es:[edi],dx
  415386:	cmp    ah,al
  415388:	add    BYTE PTR [ecx-0x45],ah
  41538b:	xlat   BYTE PTR ds:[ebx]
  41538c:	push   eax
  41538d:	mov    ah,0x7e
  41538f:	mov    BYTE PTR [ebx],ch
  415391:	mov    esp,0xb95a9beb
  415396:	lea    edi,[edx-0x31858e6f]
  41539c:	in     eax,0x31
  41539e:	(bad)  [edx]
  4153a0:	lods   eax,DWORD PTR ds:[esi]
  4153a1:	les    eax,FWORD PTR [eax+0x62e19def]
  4153a7:	adc    edx,edi
  4153a9:	xor    DWORD PTR [eax+0x51],ebp
  4153ac:	mov    edi,0x65a1e75a
  4153b1:	dec    ebp
  4153b2:	mov    ecx,0xa4cce6f7
  4153b7:	mov    ds:0x8f15182a,eax
  4153bc:	sub    edi,edx
  4153be:	mov    ecx,0x30936998
  4153c3:	cmp    eax,0xf32585ec
  4153c8:	adc    edi,eax
  4153ca:	in     al,0x57
  4153cc:	ficom  DWORD PTR [edi+0x469c2cf6]
  4153d2:	out    0x4f,al
  4153d4:	fsub   DWORD PTR [ebp-0x6]
  4153d7:	sahf   
  4153d8:	mov    esp,0x8b046598
  4153dd:	clc    
  4153de:	push   cs
  4153df:	cdq    
  4153e0:	adc    ecx,DWORD PTR [ebp-0x7ed203e5]
  4153e6:	aaa    
  4153e7:	xchg   edi,eax
  4153e8:	dec    eax
  4153e9:	test   eax,0xf36c3f00
  4153ee:	dec    edi
  4153ef:	call   DWORD PTR [ecx+0x3120f4e1]
  4153f5:	outs   dx,DWORD PTR ds:[esi]
  4153f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153f7:	inc    ecx
  4153f8:	aaa    
  4153f9:	mov    dh,0xc5
  4153fb:	inc    ebx
  4153fc:	inc    ecx
  4153fd:	cld    
  4153fe:	or     eax,ecx
  415400:	sub    cl,bl
  415402:	jns    0x415401
  415404:	rol    DWORD PTR [edi],1
  415406:	adc    eax,0xd23a6576
  41540b:	jle    0x4153e3
  41540d:	mov    edx,0x767eaa38
  415412:	jl     0x41542d
  415414:	scas   al,BYTE PTR es:[edi]
  415415:	mov    ebx,0xc8ab81be
  41541a:	xchg   edx,eax
  41541b:	cmp    ebx,DWORD PTR [esi+0x15]
  41541e:	inc    eax
  41541f:	ins    BYTE PTR es:[edi],dx
  415420:	repz shl BYTE PTR [ebx],cl
  415423:	jmp    0x27eaf29d
  415428:	push   0x4
  41542a:	out    0x41,eax
  41542c:	push   0xbe00daee
  415431:	test   eax,0x81134e01
  415436:	sub    ebp,DWORD PTR [edi+esi*4+0x7f]
  41543a:	inc    edi
  41543b:	cmp    dh,BYTE PTR [eax-0xd]
  41543e:	inc    eax
  41543f:	das    
  415440:	mov    eax,0x31e90ae4
  415445:	stc    
  415446:	(bad)  
  415447:	mov    al,0xef
  415449:	fucomi st,st(1)
  41544b:	clc    
  41544c:	imul   ebx,ecx,0x58921320
  415452:	dec    ebx
  415453:	std    
  415454:	add    BYTE PTR [edx+0x65],dl
  415457:	pop    esp
  415458:	jmp    0x96e9ac31
  41545d:	test   DWORD PTR [edi-0xc],esi
  415460:	aad    0x8
  415462:	repnz loope 0x4153e8
  415465:	sub    BYTE PTR [eax-0x139ee774],dh
  41546b:	mov    fs,WORD PTR [ecx-0x112bae23]
  415471:	jg     0x41547f
  415473:	xchg   esi,eax
  415474:	sbb    bh,BYTE PTR [eax+0x336ef91d]
  41547a:	or     edx,DWORD PTR ds:0xa38b765
  415480:	paddw  mm2,QWORD PTR [esi-0x4ce96ef1]
  415487:	(bad)  
  415488:	pop    edi
  415489:	mov    eax,ds:0xecad519a
  41548e:	int    0x2a
  415490:	lds    ebp,FWORD PTR [edx-0x46]
  415493:	mov    al,ds:0xb502490a
  415498:	mov    esp,0xc70e753b
  41549d:	jmp    0xa6ebd2b5
  4154a2:	gs xchg ebx,eax
  4154a4:	dec    esp
  4154a5:	cmp    eax,0xf6932c7f
  4154aa:	int    0xb4
  4154ac:	int3   
  4154ad:	pop    edx
  4154ae:	add    BYTE PTR [ebp+0x2d045262],0xa7
  4154b5:	imul   ecx,esp,0x51
  4154b8:	imul   esi
  4154ba:	scas   al,BYTE PTR es:[edi]
  4154bb:	mov    ebx,0xbf18041d
  4154c0:	(bad)  
  4154c1:	pop    ds
  4154c2:	cdq    
  4154c3:	mov    dl,0xb3
  4154c5:	inc    esi
  4154c6:	push   edi
  4154c7:	pop    edi
  4154c8:	int3   
  4154c9:	call   0xf4cd:0xd0f32676
  4154d0:	pop    eax
  4154d1:	pop    eax
  4154d2:	aam    0x8f
  4154d4:	mov    ecx,0x39ec8ffe
  4154d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154da:	inc    esi
  4154db:	cmp    DWORD PTR [ebx-0x2319daa7],esi
  4154e1:	leave  
  4154e2:	and    al,0xfa
  4154e4:	mov    dh,0x11
  4154e6:	jnp    0x415473
  4154e8:	sbb    bl,bh
  4154ea:	mov    al,ds:0x420ef5aa
  4154ef:	push   edx
  4154f0:	inc    ebp
  4154f1:	mov    ds:0x21da8eb1,al
  4154f6:	pop    ds
  4154f7:	mov    ecx,0x1d445188
  4154fc:	test   ecx,ebx
  4154fe:	push   esi
  4154ff:	scas   al,BYTE PTR es:[edi]
  415500:	and    BYTE PTR [ebx+0x1daaac20],0xd6
  415507:	xchg   ebp,eax
  415508:	and    cl,BYTE PTR [esi-0x7b]
  41550b:	dec    esi
  41550c:	jo     0x4154f1
  41550e:	pop    ebx
  41550f:	neg    DWORD PTR [edx+0x3a373d1a]
  415515:	inc    edx
  415516:	sahf   
  415517:	call   0x406520be
  41551c:	cwde   
  41551d:	xchg   esp,eax
  41551e:	out    dx,al
  41551f:	ins    DWORD PTR es:[edi],dx
  415520:	lods   eax,DWORD PTR ds:[esi]
  415521:	and    BYTE PTR [edi],ah
  415523:	xchg   ch,bl
  415525:	aam    0xb4
  415527:	(bad)  
  415529:	cwde   
  41552a:	and    eax,0xcd164469
  41552f:	mov    ds:0xb946f9d5,al
  415534:	xor    ebp,esp
  415536:	bndstx [edi],bnd1
  415539:	or     bh,BYTE PTR [ebx]
  41553b:	inc    esp
  41553c:	sbb    cl,bl
  41553e:	mov    ds:0x92de0f39,eax
  415543:	xor    bl,BYTE PTR [ebx]
  415545:	bound  ecx,QWORD PTR [esi+0x33]
  415548:	loopne 0x415592
  41554a:	and    ebp,esi
  41554c:	daa    
  41554d:	out    dx,eax
  41554e:	sbb    al,BYTE PTR [edx+0x82f0e31]
  415554:	in     eax,dx
  415555:	outs   dx,DWORD PTR ds:[esi]
  415556:	test   al,0x35
  415558:	adc    DWORD PTR [ebp+0x7930e377],0xb3ceebb8
  415562:	je     0x415575
  415564:	ins    DWORD PTR es:[edi],dx
  415565:	sub    edi,DWORD PTR ss:[edx-0x4ff27a39]
  41556c:	jle    0x4154f6
  41556e:	retf   0x78c3
  415571:	dec    ecx
  415572:	in     al,dx
  415573:	outs   dx,BYTE PTR ds:[esi]
  415574:	std    
  415575:	rcl    BYTE PTR [edx],1
  415577:	and    al,0xc9
  415579:	data16 fiadd WORD PTR [ebx+0x11]
  41557d:	xlat   BYTE PTR ds:[ebx]
  41557e:	dec    ebp
  41557f:	and    dh,ah
  415581:	je     0x4155cd
  415583:	inc    eax
  415584:	or     dl,BYTE PTR [edx]
  415586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415587:	mov    DWORD PTR [eax],esp
  415589:	mov    al,al
  41558b:	jmp    0xeb573d6a
  415590:	lods   al,BYTE PTR ds:[esi]
  415591:	push   es
  415592:	jo     0x41557d
  415594:	lods   al,BYTE PTR ds:[esi]
  415595:	dec    edi
  415596:	in     eax,0xf3
  415598:	cmp    ch,BYTE PTR [edx]
  41559a:	jl     0x415552
  41559c:	mov    dh,0x86
  41559e:	mov    bh,0x90
  4155a0:	adc    DWORD PTR [ebx-0x583fe5ce],0xffffffaf
  4155a7:	pop    eax
  4155a8:	test   cl,cl
  4155aa:	and    ecx,DWORD PTR [ecx-0x61]
  4155ad:	icebp  
  4155ae:	mov    eax,0xdc59bb3b
  4155b3:	or     DWORD PTR [esi+esi*8],ecx
  4155b6:	test   eax,0xfc723a1e
  4155bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155bc:	sub    DWORD PTR [eax],ebp
  4155be:	aas    
  4155bf:	sbb    al,0xc0
  4155c1:	fmul   QWORD PTR [eax+0x3d]
  4155c4:	(bad)  
  4155c5:	neg    BYTE PTR [ebp+0x4efbde9c]
  4155cb:	cmp    esp,eax
  4155cd:	jge    0x415561
  4155cf:	rol    bl,1
  4155d1:	test   DWORD PTR [edx+edi*8-0x1a],esi
  4155d5:	jns    0x41557e
  4155d7:	gs pop ebx
  4155d9:	sub    cl,0xbb
  4155dc:	jns    0x415655
  4155de:	les    esp,FWORD PTR [ebx]
  4155e0:	xchg   ebx,eax
  4155e1:	pop    eax
  4155e2:	fisubr DWORD PTR [edi]
  4155e4:	mov    eax,esi
  4155e6:	push   ds
  4155e7:	mov    esp,0x7801664
  4155ec:	aam    0x1c
  4155ee:	rcl    esi,1
  4155f0:	jno    0x41561a
  4155f2:	in     eax,0xb3
  4155f4:	stos   DWORD PTR es:[edi],eax
  4155f5:	mov    ecx,0xfec9a4e
  4155fb:	dec    eax
  4155fc:	addr16 lahf 
  4155fe:	or     BYTE PTR [ebx],cl
  415600:	jmp    0x121ea602
  415605:	cmc    
  415606:	xchg   ebp,eax
  415607:	jbe    0x41567f
  415609:	mov    dl,0x3a
  41560b:	mov    esp,0x92f41cfd
  415610:	add    bl,BYTE PTR [ebp-0x1e]
  415613:	test   eax,0xd06cc5ee
  415618:	cmp    DWORD PTR [edx],0xc81f687e
  41561e:	sbb    al,0x95
  415620:	sti    
  415621:	loop   0x415671
  415623:	fsubr  DWORD PTR ds:0xb7d0c51
  415629:	push   0xda885ee2
  41562e:	sub    al,0xdc
  415630:	push   ss
  415631:	xor    al,0x26
  415633:	shr    BYTE PTR [eax+0x32dd4a4c],0xb5
  41563a:	dec    esp
  41563b:	sbb    dh,BYTE PTR [ecx+0x5e]
  41563e:	jo     0x41563c
  415640:	push   es
  415641:	out    dx,al
  415642:	and    DWORD PTR [esi-0x2507f768],ecx
  415648:	loopne 0x415658
  41564a:	mov    dl,0x52
  41564c:	adc    esi,edx
  41564e:	mov    esi,0x998482be
  415653:	sub    edi,DWORD PTR ds:0xeb8cf0a0
  415659:	fmul   DWORD PTR [ecx+0x7c]
  41565c:	arpl   cx,di
  41565e:	cs jb  0x415668
  415661:	std    
  415662:	mov    edx,0xb8124ffe
  415667:	or     BYTE PTR [esi+ebx*8-0x3fd308d9],cl
  41566e:	nop
  41566f:	inc    eax
  415670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415671:	inc    ebp
  415672:	push   edx
  415673:	or     eax,0x1c8037c9
  415678:	ret    
  415679:	out    dx,eax
  41567a:	mov    ch,0xc7
  41567c:	sub    bh,BYTE PTR [edi+0x42412c05]
  415682:	pop    ecx
  415683:	(bad)  
  415684:	clc    
  415685:	and    bl,bh
  415687:	pop    ecx
  415688:	cli    
  415689:	sbb    DWORD PTR [ebp+esi*1-0x1b],ebp
  41568d:	sahf   
  41568e:	je     0x415689
  415690:	test   al,0x4
  415692:	mov    bh,0x0
  415694:	and    DWORD PTR [edx],ecx
  415696:	pop    esp
  415697:	push   ebx
  415698:	imul   BYTE PTR [ecx+0x48]
  41569b:	rcr    DWORD PTR [edi+eiz*1+0x3743476],cl
  4156a2:	cmc    
  4156a3:	inc    ebp
  4156a4:	aam    0xea
  4156a6:	xor    al,0xbb
  4156a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156a9:	push   cs
  4156aa:	add    bh,BYTE PTR [ecx-0x5edc552]
  4156b0:	mov    al,0x91
  4156b2:	and    ch,BYTE PTR [edx+eax*2-0x346e6182]
  4156b9:	imul   ebx,DWORD PTR [edi],0x67bd7c66
  4156bf:	or     al,0xc3
  4156c1:	xchg   esi,eax
  4156c2:	xor    eax,0xa5d49cfe
  4156c7:	aas    
  4156c8:	jns    0x4156c3
  4156ca:	or     edx,ebp
  4156cc:	addr16 iret 
  4156ce:	mov    esi,0xa1d0d9d5
  4156d3:	stos   BYTE PTR es:[edi],al
  4156d4:	jecxz  0x4156fa
  4156d6:	or     eax,0x42f9b78d
  4156db:	mov    ah,0xe6
  4156dd:	popf   
  4156de:	imul   edi,edx,0xf55d58e6
  4156e4:	mov    DWORD PTR [ebx-0x27ef342a],ebp
  4156ea:	push   ebp
  4156eb:	dec    esp
  4156ec:	xchg   ebx,eax
  4156ed:	or     al,0x57
  4156ef:	xor    ebp,DWORD PTR [ebx]
  4156f1:	mov    esp,0x48ece3c0
  4156f6:	mov    ebx,0xbbcff205
  4156fb:	inc    ecx
  4156fc:	mov    edx,0x44a62e9
  415701:	dec    ebp
  415702:	mov    edi,0x94e828b3
  415707:	fs push esi
  415709:	pop    ss
  41570a:	mov    ?,WORD PTR [eax-0x3]
  41570d:	in     al,0x8
  41570f:	repnz push ds
  415711:	mov    dl,0x90
  415713:	push   ecx
  415714:	add    al,0xb1
  415716:	(bad)  
  415717:	out    dx,al
  415718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415719:	xor    BYTE PTR [edx+0x6d87ac08],dh
  41571f:	sub    eax,0xebdfb576
  415724:	jl     0x415781
  415726:	outs   dx,BYTE PTR ds:[esi]
  415727:	ds (bad) 
  415729:	(bad)  
  41572b:	add    BYTE PTR [esi+0xd],dh
  41572e:	push   ebx
  41572f:	arpl   WORD PTR [ebx-0x610fd5cb],cx
  415735:	call   0x569e:0xd460e518
  41573c:	jl     0x41574e
  41573e:	push   ds
  41573f:	pop    es
  415740:	jb     0x4157a6
  415742:	pop    ds
  415743:	push   ss
  415744:	and    dh,ah
  415746:	inc    ebx
  415747:	aas    
  415748:	xchg   edi,eax
  415749:	pop    esp
  41574a:	fcom   DWORD PTR [esp+edi*8+0x29ae7c9f]
  415751:	push   edi
  415752:	xchg   esi,eax
  415753:	dec    ebx
  415754:	inc    ecx
  415755:	adc    DWORD PTR [ebp-0x1],esi
  415758:	shl    BYTE PTR [ecx+0x45],cl
  41575b:	mov    dl,0x71
  41575d:	test   eax,0x400f1da2
  415762:	xchg   ebp,ebp
  415764:	adc    eax,0xcbbbb898
  415769:	jae    0x4157b6
  41576b:	push   ebp
  41576c:	fstp   TBYTE PTR [edx+0x59a7a889]
  415772:	loop   0x4157aa
  415774:	fidivr DWORD PTR fs:[ebx-0x42]
  415778:	jnp    0x4157f7
  41577a:	(bad)  [esi]
  41577c:	in     eax,0xc9
  41577e:	mov    dl,0xb4
  415780:	jle    0x41578d
  415782:	fsubr  DWORD PTR [esi]
  415784:	data16 and bh,BYTE PTR ds:[ebx+0x62e48e83]
  41578c:	mov    ecx,0x7d308240
  415791:	ins    DWORD PTR es:[edi],dx
  415792:	xchg   BYTE PTR [edx-0x72],cl
  415795:	xchg   esi,eax
  415796:	cli    
  415797:	pop    edx
  415798:	int3   
  415799:	jg     0x415721
  41579b:	mov    ecx,edx
  41579d:	mov    ch,0x3f
  41579f:	sub    DWORD PTR [eax-0x74],ebp
  4157a2:	in     al,0xcd
  4157a4:	aad    0x5a
  4157a6:	out    0x87,eax
  4157a8:	es jnp 0x415773
  4157ab:	push   esp
  4157ac:	sbb    eax,0x1ed1f1ec
  4157b1:	je     0x415772
  4157b3:	fadd   DWORD PTR [ebx]
  4157b5:	xchg   esi,eax
  4157b6:	outs   dx,DWORD PTR ds:[esi]
  4157b7:	xchg   esi,eax
  4157b8:	cld    
  4157b9:	dec    ebp
  4157ba:	fstp   DWORD PTR [eax+0x5537994a]
  4157c0:	into   
  4157c1:	sub    dh,al
  4157c3:	mov    ebx,0x787ad95b
  4157c8:	cmp    al,0x3d
  4157ca:	pop    edx
  4157cb:	dec    eax
  4157cc:	aam    0x57
  4157ce:	shl    DWORD PTR [ebp+0x61],cl
  4157d1:	push   ds
  4157d2:	pop    ds
  4157d3:	lods   al,BYTE PTR ds:[esi]
  4157d4:	aaa    
  4157d5:	cmp    BYTE PTR [edi],al
  4157d7:	pop    ds
  4157d8:	jne    0x41584d
  4157da:	or     ah,BYTE PTR [ebx-0x47]
  4157dd:	out    0x15,al
  4157df:	sbb    edx,edi
  4157e1:	out    0x9c,eax
  4157e3:	pop    eax
  4157e4:	pop    ebx
  4157e5:	and    bl,al
  4157e7:	scas   al,BYTE PTR es:[edi]
  4157e8:	pop    ebp
  4157e9:	sti    
  4157ea:	in     al,dx
  4157eb:	sbb    edx,DWORD PTR [eax+0x3b]
  4157ee:	ins    BYTE PTR es:[edi],dx
  4157ef:	mov    dl,bl
  4157f1:	fwait
  4157f2:	xchg   esp,eax
  4157f3:	mov    al,ds:0x1575758c
  4157f8:	icebp  
  4157f9:	mov    al,0xfc
  4157fb:	pop    ds
  4157fc:	push   ebx
  4157fd:	jne    0x415791
  4157ff:	sbb    eax,0x71443b06
  415804:	add    ch,BYTE PTR [edx+0x7677e85d]
  41580a:	and    edx,edx
  41580c:	push   eax
  41580d:	(bad)  
  41580e:	xchg   esi,eax
  41580f:	test   dh,0xfa
  415812:	pop    eax
  415813:	inc    ecx
  415814:	in     al,dx
  415815:	adc    edi,DWORD PTR [edx+0x19d85793]
  41581b:	repz add ah,dl
  41581e:	cdq    
  41581f:	pop    ebx
  415820:	sub    BYTE PTR [ebx],0x53
  415823:	mov    esp,0xa823fbf8
  415828:	arpl   WORD PTR [edx],bx
  41582a:	fs pop esi
  41582c:	fidiv  WORD PTR [edi]
  41582e:	xor    eax,0x7dda5e77
  415833:	mov    eax,0xe1a71d61
  415838:	stc    
  415839:	mov    ebx,0x168d20ec
  41583e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41583f:	(bad)  
  415840:	pop    esi
  415841:	or     al,0x9e
  415843:	adc    BYTE PTR [edi-0x7f],ah
  415846:	lods   al,BYTE PTR ds:[esi]
  415847:	jl     0x41584d
  415849:	adc    eax,0x61d28549
  41584e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41584f:	shr    DWORD PTR [edi-0x49],1
  415852:	pop    ss
  415853:	popa   
  415854:	pop    edx
  415855:	add    eax,edx
  415857:	mov    BYTE PTR [esi-0x2f],bh
  41585a:	imul   edi,ebp,0x4170f42
  415860:	xchg   edx,eax
  415861:	out    dx,eax
  415862:	je     0x415843
  415864:	sbb    eax,0x84ef312e
  415869:	int3   
  41586a:	jmp    0xcde64036
  41586f:	xchg   ebp,eax
  415870:	(bad)  [ebx]
  415872:	fwait
  415873:	jno    0x415892
  415875:	bound  ecx,QWORD PTR [esi]
  415877:	cdq    
  415878:	pushf  
  415879:	stos   BYTE PTR es:[edi],al
  41587a:	fld    TBYTE PTR [ebp-0xb69c0c2]
  415880:	(bad)
  415883:	add    dh,BYTE PTR [ebx]
  415885:	mov    edi,0xf7643163
  41588a:	call   FWORD PTR [eax]
  41588c:	jnp    0x4158ef
  41588e:	push   ss
  41588f:	xchg   edx,eax
  415890:	and    eax,0x36f1ea7b
  415895:	xchg   esi,eax
  415896:	or     ebp,ebx
  415898:	sbb    al,0xa2
  41589a:	div    DWORD PTR [ebx+ebx*8]
  41589d:	das    
  41589e:	ret    
  41589f:	sbb    edi,DWORD PTR [edx]
  4158a1:	jbe    0x415846
  4158a3:	lock mov BYTE PTR [di],bl
  4158a7:	mov    dh,0x66
  4158a9:	arpl   WORD PTR [ebx-0xd2dc5f6],dx
  4158af:	mov    ebp,0xde8455e1
  4158b4:	jnp    0x4158f0
  4158b6:	lahf   
  4158b7:	and    ebp,edx
  4158b9:	leave  
  4158ba:	xlat   BYTE PTR ds:[ebx]
  4158bb:	rep ins BYTE PTR es:[edi],dx
  4158bd:	lods   al,BYTE PTR ds:[esi]
  4158be:	push   edi
  4158bf:	adc    eax,0x2ac093aa
  4158c4:	hlt    
  4158c5:	test   BYTE PTR [edx+edx*1],ah
  4158c8:	lods   eax,DWORD PTR ds:[esi]
  4158c9:	pop    ss
  4158ca:	adc    ah,BYTE PTR [edi]
  4158cc:	mov    ecx,0x340a35f1
  4158d1:	(bad)  
  4158d2:	mov    ebp,0x8b78e3ee
  4158d7:	stos   BYTE PTR es:[edi],al
  4158d8:	jae    0x415905
  4158da:	in     al,0x5
  4158dc:	and    eax,0x14b72811
  4158e1:	rol    al,cl
  4158e3:	add    ebx,esp
  4158e5:	push   ebx
  4158e6:	mov    esi,esi
  4158e8:	sbb    dh,al
  4158ea:	imul   ebx,DWORD PTR fs:[esi-0x59829363],0x49d14f68
  4158f5:	mov    ds:0x6b8f896a,eax
  4158fa:	jo     0x4158cc
  4158fc:	in     al,dx
  4158fd:	cmc    
  4158fe:	mov    esi,cs
  415900:	outs   dx,BYTE PTR ds:[esi]
  415901:	push   0xb05950ac
  415906:	into   
  415907:	(bad)  
  415908:	cli    
  415909:	jae    0x4158a5
  41590b:	outs   dx,BYTE PTR ds:[esi]
  41590c:	and    cl,bh
  41590e:	or     BYTE PTR [edi+0x7431e8c7],ch
  415914:	rcl    BYTE PTR [eax],0xcc
  415917:	(bad)  
  415918:	cmp    esp,DWORD PTR [eax-0x32132d57]
  41591e:	mov    ch,0x94
  415920:	ret    0x6673
  415923:	or     al,0x92
  415925:	push   DWORD PTR [ebx-0x26]
  415928:	mov    ch,0x1e
  41592a:	idiv   BYTE PTR [ecx+0x3b65dd0a]
  415930:	out    0x20,al
  415932:	icebp  
  415933:	sub    al,0xa6
  415935:	mov    al,0x9b
  415937:	jb     0x4159a4
  415939:	xchg   BYTE PTR [edi-0x54],dl
  41593c:	inc    ecx
  41593d:	dec    edx
  41593e:	fmulp  st(6),st
  415940:	fidivr DWORD PTR [ebp+0x63c4fed0]
  415946:	popa   
  415947:	aaa    
  415948:	mov    esi,0xf9272b14
  41594d:	push   esi
  41594e:	loopne 0x41591f
  415950:	lea    esp,[esi]
  415952:	sahf   
  415953:	xchg   esp,eax
  415954:	call   0x1c95a774
  415959:	push   0xfb0a4ec0
  41595e:	fst    st(3)
  415960:	fcmove st,st(3)
  415962:	and    DWORD PTR [eax-0x23],0x52
  415966:	fsub   DWORD PTR [eax+0x56]
  415969:	outs   dx,BYTE PTR ds:[esi]
  41596a:	pop    edx
  41596b:	stos   DWORD PTR es:[edi],eax
  41596c:	dec    esi
  41596d:	sahf   
  41596e:	inc    esp
  41596f:	jbe    0x4159a7
  415971:	fiadd  DWORD PTR [esi-0x5]
  415974:	push   0x37f96436
  415979:	pextrw edx,mm7,0x43
  41597d:	jns    0x41594c
  41597f:	pop    eax
  415980:	jge    0x415972
  415982:	dec    DWORD PTR ds:0x7d018d4d
  415988:	stos   BYTE PTR es:[edi],al
  415989:	dec    esp
  41598a:	xchg   edx,eax
  41598b:	in     eax,dx
  41598c:	adc    DWORD PTR [eax-0x4b],ebx
  41598f:	jno    0x415917
  415991:	lock aas 
  415993:	sub    BYTE PTR [eax+0x4e],ah
  415996:	dec    ebx
  415997:	ror    DWORD PTR [esi],0x51
  41599a:	mov    esp,0xfe763f2f
  41599f:	pusha  
  4159a0:	xchg   edx,eax
  4159a1:	pop    eax
  4159a2:	ss and eax,0x96abdb84
  4159a8:	mov    edx,0x8148d78e
  4159ad:	cld    
  4159ae:	cdq    
  4159af:	fst    st(4)
  4159b1:	popa   
  4159b2:	int3   
  4159b3:	imul   edi,DWORD PTR [edi+0x1e],0xffffffc2
  4159b7:	ja     0x41597f
  4159b9:	mov    al,0xf2
  4159bb:	dec    esp
  4159bc:	pushf  
  4159bd:	or     al,0x8
  4159bf:	test   ch,dh
  4159c1:	mov    bl,0x35
  4159c3:	adc    DWORD PTR [edi-0x3],esp
  4159c6:	mov    eax,ds:0xc5b2edc5
  4159cb:	shl    DWORD PTR [esi],1
  4159cd:	jl     0x4159f7
  4159cf:	dec    esp
  4159d0:	sub    ebx,DWORD PTR [eax-0x3973eef3]
  4159d6:	and    al,0x70
  4159d8:	cmp    al,0x79
  4159da:	add    DWORD PTR [edi],esi
  4159dc:	cdq    
  4159dd:	jecxz  0x415977
  4159df:	daa    
  4159e0:	pop    edi
  4159e1:	pop    esi
  4159e2:	sub    al,0xc7
  4159e4:	pop    DWORD PTR [edx+0x6bc8ba0b]
  4159ea:	cdq    
  4159eb:	xchg   ah,ch
  4159ed:	ja     0x415a54
  4159ef:	push   cs
  4159f0:	ins    DWORD PTR es:[edi],dx
  4159f1:	or     eax,0x7b51b74c
  4159f6:	fcmovb st,st(5)
  4159f8:	scas   eax,DWORD PTR es:[edi]
  4159f9:	bound  ebp,QWORD PTR [esi+esi*2-0x8]
  4159fd:	fistp  DWORD PTR [ebx-0x66]
  415a00:	mov    dh,BYTE PTR [esi]
  415a02:	dec    edi
  415a03:	in     al,0x81
  415a05:	and    BYTE PTR [eax+0x55],al
  415a08:	xor    eax,DWORD PTR [esi+ecx*1-0x38]
  415a0c:	loope  0x415a34
  415a0e:	xchg   edi,eax
  415a0f:	mov    bl,0x12
  415a11:	pop    ss
  415a12:	sub    esp,esi
  415a14:	or     ah,BYTE PTR [ebp+0x71]
  415a17:	mov    ebx,0x56828a5
  415a1c:	jo     0x415a0d
  415a1e:	mov    ch,0x46
  415a20:	jbe    0x415a43
  415a22:	cli    
  415a23:	mov    esi,0x5e388f38
  415a28:	sbb    ebx,edi
  415a2a:	out    dx,eax
  415a2b:	sub    al,0x98
  415a2d:	mov    edx,0xd8acc613
  415a32:	neg    edx
  415a34:	sub    DWORD PTR [ebx-0x771493b3],edi
  415a3a:	js     0x415a24
  415a3c:	xor    DWORD PTR [ebp-0x602067ac],esi
  415a42:	or     ebx,DWORD PTR [ecx+eiz*4-0x4f8f3a16]
  415a49:	lds    ebp,FWORD PTR [ebp+edi*1-0x7c2e73d8]
  415a50:	jp     0x415a5f
  415a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a53:	xchg   DWORD PTR [esi+ecx*8+0x21],esi
  415a57:	test   bl,bl
  415a59:	dec    esp
  415a5a:	jmp    0x415a26
  415a5c:	inc    esi
  415a5d:	scas   al,BYTE PTR es:[edi]
  415a5e:	sbb    al,0x84
  415a60:	xchg   esi,eax
  415a61:	adc    BYTE PTR [ebx+0x5f],0x7
  415a65:	xchg   DWORD PTR [eax],eax
  415a67:	lock adc al,0x58
  415a6a:	jo     0x415ae3
  415a6c:	(bad)  
  415a6d:	bound  ebp,QWORD PTR [ebx+eiz*8]
  415a70:	aaa    
  415a71:	sub    edx,ecx
  415a73:	fadd   QWORD PTR [edx]
  415a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a76:	xchg   edx,eax
  415a77:	mov    ds:0x88a07d18,al
  415a7c:	push   esp
  415a7d:	xor    eax,DWORD PTR [ebp-0x2f98ce46]
  415a83:	mov    eax,0x13b240bb
  415a88:	mov    BYTE PTR [edx+eax*2-0x2793b3d6],dh
  415a8f:	daa    
  415a90:	and    al,BYTE PTR cs:[edi]
  415a93:	mov    eax,ds:0xe0a9e7cc
  415a98:	adc    eax,edi
  415a9a:	mov    al,0xc7
  415a9c:	test   DWORD PTR [eax],esi
  415a9e:	xchg   ecx,eax
  415a9f:	les    ecx,FWORD PTR [ecx+ebp*4]
  415aa2:	out    dx,eax
  415aa3:	dec    esi
  415aa4:	add    DWORD PTR [edi-0x3],esi
  415aa7:	cmc    
  415aa8:	call   0x253c7ad4
  415aad:	dec    esp
  415aae:	jae    0x415b18
  415ab0:	out    dx,al
  415ab1:	cmp    eax,DWORD PTR [ebx-0xb254939]
  415ab7:	add    al,0x42
  415ab9:	aad    0x26
  415abb:	pop    eax
  415abc:	jmp    0xcf2fa162
  415ac1:	sbb    DWORD PTR ds:[eax+0x1a],esp
  415ac5:	leave  
  415ac6:	ins    DWORD PTR es:[edi],dx
  415ac7:	mov    ch,0x26
  415ac9:	call   0xb003:0xe360594d
  415ad0:	ror    eax,0x68
  415ad3:	loope  0x415b07
  415ad5:	dec    esp
  415ad6:	dec    esi
  415ad7:	sbb    ebp,esi
  415ad9:	adc    DWORD PTR [ecx+eax*2],0x21
  415add:	jns    0x415a63
  415adf:	stc    
  415ae0:	popf   
  415ae1:	xchg   DWORD PTR [esi+0x3701fb9],ecx
  415ae7:	jg     0x415b03
  415ae9:	(bad)  
  415aea:	dec    ebx
  415aeb:	dec    esp
  415aec:	pop    edx
  415aed:	fisttp WORD PTR [edi]
  415aef:	stc    
  415af0:	and    bh,BYTE PTR [ebp+0x6733ec7c]
  415af6:	adc    al,0x46
  415af8:	xchg   edx,eax
  415af9:	mov    dl,0xfe
  415afb:	out    0x40,eax
  415afd:	or     eax,0xb5ea6c5d
  415b02:	lahf   
  415b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b04:	mov    ch,0xe8
  415b06:	sub    ch,BYTE PTR [esi+0x3a]
  415b09:	jge    0x415b01
  415b0b:	enter  0xa470,0x99
  415b0f:	push   es
  415b10:	inc    edx
  415b11:	aaa    
  415b12:	loopne 0x415b32
  415b14:	fadd   DWORD PTR [eax]
  415b16:	ja     0x415b66
  415b18:	xor    al,0x28
  415b1a:	or     eax,0xe9d29128
  415b1f:	stc    
  415b20:	pop    ebx
  415b21:	jmp    0x415b73
  415b23:	dec    esi
  415b24:	jno    0x415b56
  415b26:	not    DWORD PTR [esi]
  415b28:	call   0xe1c9:0xf5c5a223
  415b2f:	inc    esp
  415b30:	test   BYTE PTR [edx+0x24af717e],ch
  415b36:	jbe    0x415b3d
  415b38:	in     eax,dx
  415b39:	(bad)  
  415b3a:	cmp    dh,BYTE PTR [edx]
  415b3c:	xor    al,0x5e
  415b3e:	mov    ds:0xfc2ae96f,eax
  415b43:	or     al,0xab
  415b45:	push   ds
  415b46:	cmp    BYTE PTR [edx],0x67
  415b49:	dec    esp
  415b4a:	test   BYTE PTR [ecx],bh
  415b4c:	fsub   DWORD PTR [eax+0x4c7581b1]
  415b52:	dec    eax
  415b53:	adc    al,0xa4
  415b55:	stc    
  415b56:	fwait
  415b57:	int3   
  415b58:	and    eax,0xdb846fc0
  415b5d:	imul   ebx,DWORD PTR [ebx+0xf2b6538],0x40be2cff
  415b67:	js     0x415b10
  415b69:	shr    DWORD PTR [ecx+ebp*1-0x26],0x6d
  415b6e:	inc    eax
  415b6f:	jno    0x415b92
  415b71:	sub    bl,cl
  415b73:	dec    ebp
  415b74:	hlt    
  415b75:	(bad)  
  415b76:	imul   esp,DWORD PTR [ebx+0x2b],0xffffffb6
  415b7a:	jnp    0x415b9d
  415b7c:	stos   BYTE PTR es:[edi],al
  415b7d:	and    DWORD PTR [ecx-0x49c33f60],0xffffffc2
  415b84:	(bad)  
  415b86:	pop    ebp
  415b87:	add    al,0xc
  415b89:	outs   dx,DWORD PTR ds:[esi]
  415b8a:	into   
  415b8b:	sti    
  415b8c:	fmul   QWORD PTR ds:0x34793532
  415b92:	and    al,0xa0
  415b94:	inc    ebp
  415b95:	addr16 sti 
  415b97:	stos   BYTE PTR es:[edi],al
  415b98:	test   DWORD PTR [ecx+edx*4-0x1d14391c],edi
  415b9f:	push   ss
  415ba0:	and    ebx,DWORD PTR [ebx+0x60]
  415ba3:	fcmovnu st,st(3)
  415ba5:	push   ss
  415ba6:	or     DWORD PTR [ebx+edx*4],esi
  415ba9:	xor    ebx,esp
  415bab:	add    edi,DWORD PTR [di-0x41]
  415baf:	push   eax
  415bb0:	jne    0x415be9
  415bb2:	out    dx,eax
  415bb3:	enter  0xfc67,0xc2
  415bb7:	adc    BYTE PTR [ebx+esi*4-0x74],al
  415bbb:	retf   
  415bbc:	iret   
  415bbd:	push   edx
  415bbe:	adc    BYTE PTR [esi],0xdf
  415bc1:	dec    edi
  415bc2:	mov    bh,0xbf
  415bc4:	pop    esi
  415bc5:	nop
  415bc6:	sub    al,0x24
  415bc8:	popa   
  415bc9:	std    
  415bca:	dec    esp
  415bcb:	aad    0xc1
  415bcd:	popa   
  415bce:	or     DWORD PTR [edx+eiz*8+0x51cd3c3d],esp
  415bd5:	and    al,0x53
  415bd7:	(bad)  
  415bd8:	adc    bl,dl
  415bda:	sbb    DWORD PTR [ebx+0x38f16992],ebx
  415be0:	push   edx
  415be1:	test   al,0x20
  415be3:	fs loope 0x415c60
  415be6:	out    0x7,eax
  415be8:	aas    
  415be9:	sbb    eax,0x8874f0f
  415bee:	jbe    0x415c1a
  415bf0:	aas    
  415bf1:	pop    edx
  415bf2:	scas   eax,DWORD PTR es:[edi]
  415bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bf4:	sub    DWORD PTR [eax+0x5722ef86],ecx
  415bfa:	(bad)  
  415bfb:	das    
  415bfc:	push   esi
  415bfd:	cmp    dl,BYTE PTR [eax]
  415bff:	adc    dl,dl
  415c01:	test   BYTE PTR [ecx-0x57ec3479],ah
  415c07:	in     al,0x1c
  415c09:	push   ebp
  415c0a:	retf   0x796
  415c0d:	xchg   edi,eax
  415c0e:	test   DWORD PTR [eax+0x13],edi
  415c11:	jg     0x415bc9
  415c13:	and    al,0x3c
  415c15:	div    edx
  415c17:	add    dl,BYTE PTR [eax+0x56]
  415c1a:	fiadd  DWORD PTR [ecx+ebp*1-0x4a589b5]
  415c21:	xchg   esi,eax
  415c22:	out    dx,al
  415c23:	sti    
  415c24:	add    DWORD PTR [edi+esi*2-0x6],esi
  415c28:	iret   
  415c29:	(bad)  
  415c2a:	xchg   ebp,eax
  415c2b:	inc    edx
  415c2c:	mov    ds:0x9ddff4a8,eax
  415c31:	in     eax,dx
  415c32:	fwait
  415c33:	stc    
  415c34:	daa    
  415c35:	push   es
  415c36:	call   0xd2f2d1e4
  415c3b:	mov    bh,0x56
  415c3d:	out    0xcf,al
  415c3f:	adc    BYTE PTR [eax],ah
  415c41:	mov    ds:0xed8ba412,eax
  415c46:	popf   
  415c47:	in     eax,0x9b
  415c49:	xchg   esp,eax
  415c4a:	mov    eax,gs:0x56c27026
  415c50:	fwait
  415c51:	gs dec ebp
  415c53:	mov    cl,0xb4
  415c55:	inc    ecx
  415c56:	inc    edx
  415c57:	jae    0x415c87
  415c59:	sbb    esp,DWORD PTR [edi+0x14]
  415c5c:	jmp    0x53519947
  415c61:	addr16 fwait
  415c63:	gs pusha 
  415c65:	(bad)  
  415c66:	jl     0x415c02
  415c68:	adc    al,0x8b
  415c6a:	cdq    
  415c6b:	dec    eax
  415c6c:	mov    ah,0xba
  415c6e:	mov    WORD PTR [ecx],ds
  415c70:	or     DWORD PTR [edi-0x22e8570e],esp
  415c76:	pop    eax
  415c77:	pop    esi
  415c78:	mov    ebx,0x788b6aa0
  415c7d:	inc    edx
  415c7e:	es jle 0x415c3b
  415c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c82:	ds retf 0x4d12
  415c86:	push   ss
  415c87:	fisttp DWORD PTR [ebp+0x7815bc72]
  415c8d:	mov    dh,0xe8
  415c8f:	std    
  415c90:	into   
  415c91:	sub    DWORD PTR [eax],0xfffffffb
  415c94:	and    DWORD PTR [esi+0x5c7f9788],esi
  415c9a:	out    0xbc,al
  415c9c:	xchg   ecx,eax
  415c9d:	iret   
  415c9e:	out    0x73,al
  415ca0:	dec    esi
  415ca1:	jl     0x415d1e
  415ca3:	sar    BYTE PTR [ecx+0x3a],1
  415ca6:	call   0x3c73f9a
  415cab:	jp     0x415c65
  415cad:	or     ecx,DWORD PTR [eax+0x43]
  415cb0:	sti    
  415cb1:	inc    esp
  415cb2:	sti    
  415cb3:	test   eax,0xa30d7c40
  415cb8:	arpl   WORD PTR [edi-0xd],sp
  415cbb:	mov    ds:0x6cab0c17,eax
  415cc0:	(bad)  
  415cc1:	aad    0x3f
  415cc3:	pushf  
  415cc4:	arpl   sp,si
  415cc6:	push   eax
  415cc7:	pushf  
  415cc8:	in     eax,0x93
  415cca:	scas   eax,DWORD PTR es:[edi]
  415ccb:	int3   
  415ccc:	jle    0x415cd5
  415cce:	xchg   cl,bh
  415cd0:	jb     0x415cca
  415cd2:	sbb    DWORD PTR [ecx+0x37],ebp
  415cd5:	popf   
  415cd6:	test   DWORD PTR [eax],0xc4b8e7a3
  415cdc:	int3   
  415cdd:	shl    BYTE PTR es:0x27a35b44,1
  415ce4:	jle    0x415d28
  415ce6:	neg    bh
  415ce8:	or     al,0x89
  415cea:	mov    ds:0x9d937c6c,al
  415cef:	sar    BYTE PTR [edi+0x6f6a7b07],cl
  415cf5:	mov    dh,0x40
  415cf7:	pop    ss
  415cf8:	in     eax,0xdd
  415cfa:	xchg   ecx,eax
  415cfb:	addr16 in eax,0x35
  415cfe:	out    0x51,al
  415d00:	xchg   edx,eax
  415d01:	cmp    ah,dl
  415d03:	in     al,0xac
  415d05:	push   dx
  415d07:	aad    0xd0
  415d09:	sahf   
  415d0a:	popa   
  415d0b:	popa   
  415d0c:	mov    al,ds:0x3f1d94aa
  415d11:	mov    bl,0x52
  415d13:	sti    
  415d14:	cmp    DWORD PTR ds:0x4fa567e3,esi
  415d1a:	xor    BYTE PTR [eax],al
  415d1c:	call   0x2501b374
  415d21:	push   ds
  415d22:	push   0x75989d98
  415d27:	jg     0x415d16
  415d29:	sbb    esi,DWORD PTR [ebp+0x44efa810]
  415d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d30:	shl    DWORD PTR [esi],0x23
  415d33:	inc    ecx
  415d34:	mov    al,0x35
  415d36:	js     0x415d84
  415d38:	bound  esi,QWORD PTR [ecx+0x65120336]
  415d3e:	mov    dh,0x8e
  415d40:	inc    edi
  415d41:	mov    ebp,0xf455717f
  415d46:	aad    0x11
  415d48:	test   ecx,ebx
  415d4a:	aas    
  415d4b:	out    0xf1,al
  415d4d:	lds    esi,FWORD PTR [ebp+0x40871779]
  415d53:	mov    eax,ds:0x9d7aa82c
  415d58:	leave  
  415d59:	stc    
  415d5a:	adc    eax,0x6d54c9fd
  415d5f:	and    bl,cl
  415d61:	inc    ebx
  415d62:	pop    eax
  415d63:	mov    al,0x48
  415d65:	and    DWORD PTR [ecx-0x40],ecx
  415d68:	je     0x415d6b
  415d6a:	rcl    DWORD PTR [edx+0x6c],cl
  415d6d:	xor    dl,cl
  415d6f:	lods   al,BYTE PTR ds:[esi]
  415d70:	and    al,0xc4
  415d72:	xchg   ecx,eax
  415d73:	mov    al,ds:0x2fe47e1c
  415d78:	shr    BYTE PTR [esi],1
  415d7a:	push   es
  415d7b:	in     al,0x21
  415d7d:	jmp    0x37245491
  415d82:	cdq    
  415d83:	ret    
  415d84:	into   
  415d85:	add    al,0x6f
  415d87:	add    BYTE PTR [esi-0x6a],bh
  415d8a:	mov    DWORD PTR [ecx],esi
  415d8c:	repz or eax,0x973c5d5d
  415d92:	add    BYTE PTR [edi],bh
  415d94:	sar    dh,1
  415d96:	mov    eax,ds:0x64f8b133
  415d9b:	mov    DWORD PTR [ecx],edi
  415d9d:	cmp    DWORD PTR [edi+eiz*1],eax
  415da0:	dec    ebx
  415da1:	aaa    
  415da2:	jge    0x415d8c
  415da4:	and    BYTE PTR [ecx+0xf],bh
  415da7:	adc    al,0xd3
  415da9:	mov    al,0x6a
  415dab:	mov    eax,0x31b9bd9e
  415db0:	jp     0x415dbf
  415db2:	ins    DWORD PTR es:[edi],dx
  415db3:	or     DWORD PTR [esi],0x841db63c
  415db9:	or     al,0x71
  415dbb:	outs   dx,BYTE PTR ds:[esi]
  415dbc:	data16 sbb BYTE PTR [edx-0x6fb344b7],0xd7
  415dc4:	dec    ebp
  415dc5:	(bad)  
  415dc6:	or     eax,0x83f7c476
  415dcb:	add    eax,0x8ebce77f
  415dd0:	cwde   
  415dd1:	in     eax,0x27
  415dd3:	lods   al,BYTE PTR ds:[esi]
  415dd4:	stc    
  415dd5:	and    edi,DWORD PTR [ecx+eiz*8]
  415dd8:	jnp    0x415e0f
  415dda:	xor    ebp,ebx
  415ddc:	xchg   ecx,eax
  415ddd:	lahf   
  415dde:	or     BYTE PTR [ecx],bh
  415de0:	iret   
  415de1:	mov    DWORD PTR ss:[esi+0x36eaefce],ebx
  415de8:	sbb    al,0x73
  415dea:	jp     0x415e2a
  415dec:	and    esi,DWORD PTR [eax+0x66]
  415def:	(bad)  
  415df0:	mov    ebx,fs
  415df2:	push   ds
  415df3:	jnp    0x415df2
  415df5:	mov    gs,WORD PTR [edi]
  415df7:	or     DWORD PTR [ebx-0x29058ac4],0x68
  415dfe:	dec    ecx
  415dff:	sub    BYTE PTR [eax+ebp*8],dl
  415e02:	cmc    
  415e03:	cmp    al,0xe5
  415e05:	jge    0x415e64
  415e07:	inc    ebx
  415e08:	jmp    0x95232bd3
  415e0d:	lds    ebx,FWORD PTR [ebx+0x3a]
  415e10:	hlt    
  415e11:	mov    eax,ds:0x5d3a5d26
  415e16:	pop    ecx
  415e17:	stos   DWORD PTR es:[edi],eax
  415e18:	xchg   edx,eax
  415e19:	fcomp  DWORD PTR [edx+0x41]
  415e1c:	xor    al,0x8b
  415e1e:	jmp    0xae39:0xdbe5c365
  415e25:	test   BYTE PTR [ebx],bl
  415e27:	sub    eax,DWORD PTR [ebx]
  415e29:	xchg   ebx,eax
  415e2a:	adc    cl,BYTE PTR [ecx+0x6c7fa58f]
  415e30:	sbb    edx,DWORD PTR [edi]
  415e32:	fcmovnb st,st(0)
  415e34:	add    eax,0x416c05e0
  415e39:	out    0x9f,al
  415e3b:	out    dx,al
  415e3c:	call   0xa4fef83d
  415e41:	and    BYTE PTR [edx],0xba
  415e44:	jge    0x415e06
  415e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e47:	retw   
  415e49:	mov    bh,0x8d
  415e4b:	ret    0x7305
  415e4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4f:	adc    ebp,DWORD PTR [edi-0x75]
  415e52:	(bad)  
  415e53:	mov    bh,0x4a
  415e55:	adc    cl,ch
  415e57:	pop    ss
  415e58:	sub    DWORD PTR [ebp+0x3d6e4730],0xffffffda
  415e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e60:	inc    ebp
  415e61:	stos   DWORD PTR es:[edi],eax
  415e62:	cmp    cl,BYTE PTR [edi+0x65]
  415e65:	push   ds
  415e66:	add    eax,0x9963cce0
  415e6b:	sahf   
  415e6c:	enter  0x7a6a,0x54
  415e70:	dec    edi
  415e71:	jns    0x415e2e
  415e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e74:	shr    bl,0x82
  415e77:	inc    esi
  415e78:	mov    cl,0xd1
  415e7a:	push   cs
  415e7b:	dec    edx
  415e7c:	mov    cl,BYTE PTR [edi-0x49139d55]
  415e82:	pop    ebp
  415e83:	sahf   
  415e84:	xor    DWORD PTR [edx-0x487ff07a],edx
  415e8a:	fild   QWORD PTR [eax-0x60]
  415e8d:	sahf   
  415e8e:	out    dx,al
  415e8f:	aaa    
  415e90:	js     0x415e84
  415e92:	shl    dl,cl
  415e94:	mov    dh,BYTE PTR fs:[ecx]
  415e97:	ror    DWORD PTR [eax+esi*8-0x74c853bc],1
  415e9e:	mov    al,ds:0x67a5fe0
  415ea3:	test   eax,0xa5a0d72b
  415ea8:	rcl    DWORD PTR [esi],0x85
  415eab:	cmp    BYTE PTR [esi+0x6],ah
  415eae:	cmp    ebx,DWORD PTR [edi-0xcc5092d]
  415eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eb5:	ret    0x9a64
  415eb8:	retf   0x82ae
  415ebb:	mov    ebx,cs
  415ebd:	and    dl,ah
  415ebf:	cmp    al,BYTE PTR [eax]
  415ec1:	repz clc 
  415ec3:	cmp    eax,0x8ccb559b
  415ec8:	jmp    0x9900373f
  415ecd:	sbb    BYTE PTR [esi],dh
  415ecf:	dec    esi
  415ed0:	lods   eax,DWORD PTR fs:[si]
  415ed3:	fdiv   DWORD PTR [esi+0x79532d69]
  415ed9:	pop    esi
  415eda:	iret   
  415edb:	ins    BYTE PTR es:[edi],dx
  415edc:	push   esi
  415edd:	mov    eax,ds:0x51318279
  415ee2:	in     eax,0x5b
  415ee4:	int3   
  415ee5:	iret   
  415ee6:	inc    ecx
  415ee7:	and    eax,edi
  415ee9:	shl    BYTE PTR [edx+0x1a],0x7b
  415eed:	add    DWORD PTR [ebp+0x5],0xd871f11
  415ef4:	push   ebp
  415ef5:	xchg   DWORD PTR [edi],ebp
  415ef7:	test   al,0x3
  415ef9:	and    edx,DWORD PTR [eax+0x64]
  415efc:	or     DWORD PTR [edx-0x772d7c57],eax
  415f02:	cmp    eax,0xc7ce89c
  415f07:	jecxz  0x415e99
  415f09:	aad    0x67
  415f0b:	push   eax
  415f0c:	je     0x415f16
  415f0e:	arpl   WORD PTR [edi-0x6d91c4ee],ax
  415f14:	mov    ah,0x26
  415f16:	aaa    
  415f17:	jge    0x415ec1
  415f19:	cld    
  415f1a:	xchg   edi,eax
  415f1b:	lock jl 0x415f44
  415f1e:	addr16 add eax,0x937659ca
  415f24:	in     eax,0x23
  415f26:	jg     0x415ef5
  415f28:	popf   
  415f29:	sub    al,0xcd
  415f2b:	add    al,0x22
  415f2d:	push   edx
  415f2e:	or     DWORD PTR [eax+0x37418bcd],0x42
  415f35:	ss retf 0x47c1
  415f39:	inc    dx
  415f3b:	mov    cs,WORD PTR [esi+0x19]
  415f3e:	and    dl,BYTE PTR [ebx]
  415f40:	pop    es
  415f41:	adc    BYTE PTR [esi+0x9],0x6e
  415f45:	xchg   BYTE PTR [edx],dh
  415f47:	or     al,0x75
  415f49:	dec    ecx
  415f4a:	addr16 jmp 0x3394:0x6b13e429
  415f52:	popa   
  415f53:	sub    BYTE PTR [eax],bh
  415f55:	in     al,dx
  415f56:	std    
  415f57:	sub    cl,al
  415f59:	cld    
  415f5a:	mov    ah,0x2a
  415f5c:	sti    
  415f5d:	adc    al,0x99
  415f5f:	(bad)  
  415f60:	mov    ebx,0x398e157d
  415f65:	mov    al,ds:0xea642dbb
  415f6a:	iret   
  415f6b:	ret    
  415f6c:	cli    
  415f6d:	jmp    0x9702:0x659648fc
  415f74:	xor    DWORD PTR [ebp-0x55],edx
  415f77:	xor    eax,0x62057fa5
  415f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f7d:	outs   dx,BYTE PTR ds:[esi]
  415f7e:	adc    al,0x1f
  415f80:	rol    BYTE PTR [esi+0x41],0xa8
  415f84:	cli    
  415f85:	lock push cs
  415f87:	scas   al,BYTE PTR es:[edi]
  415f88:	les    ebx,FWORD PTR [ecx+0x1e]
  415f8b:	fldcw  WORD PTR [edi]
  415f8d:	into   
  415f8e:	call   0xecd57d7
  415f93:	repnz add esp,DWORD PTR [ebp-0x39]
  415f97:	jmp    0x415f78
  415f99:	out    0x4,eax
  415f9b:	jno    0x415fac
  415f9d:	xor    eax,0xb27cbb00
  415fa2:	mov    al,ds:0x80ce0eb2
  415fa7:	push   ss
  415fa8:	inc    ecx
  415fa9:	adc    eax,0x91624fc5
  415fae:	ror    BYTE PTR [edx+edx*8+0x14],cl
  415fb2:	call   0x8bee26c9
  415fb7:	int    0xa4
  415fb9:	jg     0x415f65
  415fbb:	dec    esi
  415fbc:	sbb    DWORD PTR [esi-0x40e110d2],ebp
  415fc2:	pop    ds
  415fc3:	out    0x7f,al
  415fc5:	enter  0x2f0c,0x63
  415fc9:	sub    DWORD PTR [edi+ebp*2-0x5b7a1df7],edx
  415fd0:	icebp  
  415fd1:	mov    esp,0xcd2f7a37
  415fd6:	cmp    BYTE PTR [ebp+0x26],bh
  415fd9:	mov    ds:0x5f1d329d,al
  415fde:	aaa    
  415fdf:	dec    edx
  415fe0:	or     bh,BYTE PTR [edx]
  415fe2:	div    bl
  415fe4:	adc    BYTE PTR ds:0x34aaae3,al
  415fea:	outs   dx,BYTE PTR ds:[esi]
  415feb:	xor    al,0x2f
  415fed:	retf   
  415fee:	pop    edi
  415fef:	xlat   BYTE PTR ds:[ebx]
  415ff0:	dec    edi
  415ff1:	inc    edi
  415ff2:	or     ecx,DWORD PTR [edi+0x6]
  415ff5:	or     BYTE PTR [ecx-0x2ce1fb6],dl
  415ffb:	sahf   
  415ffc:	into   
  415ffd:	sbb    al,0x58
  415fff:	sub    DWORD PTR [ecx+0x12af3949],edi
  416005:	test   BYTE PTR [ebp+0x437e3d0d],ch
  41600b:	mov    ebx,0x213087a0
  416010:	xor    DWORD PTR [esi+0x6f],edx
  416013:	popf   
  416014:	loop   0x415fa4
  416016:	test   al,0x51
  416018:	std    
  416019:	or     ebx,DWORD PTR [edi-0x2c20c54f]
  41601f:	cmp    bl,0x49
  416022:	mov    cl,0x8b
  416024:	loopne 0x415fe4
  416026:	cwde   
  416027:	ins    DWORD PTR es:[edi],dx
  416028:	pop    esp
  416029:	rol    BYTE PTR [esi],1
  41602b:	pop    ebx
  41602c:	aad    0xcd
  41602e:	fbld   TBYTE PTR [eax+eiz*1-0x6fc8de12]
  416035:	inc    edx
  416036:	cs mov dh,0xa5
  416039:	loope  0x416088
  41603b:	stc    
  41603c:	dec    esi
  41603d:	enter  0x7efb,0x2
  416041:	mov    cl,0x2c
  416043:	add    al,0xd2
  416045:	xor    ah,BYTE PTR [ecx+0x3b]
  416048:	vpunpckhbw xmm3,xmm0,XMMWORD PTR [edi-0x5f4e151d]
  416050:	sub    DWORD PTR [esi],edi
  416052:	mov    ah,0xdc
  416054:	jb     0x4160c2
  416056:	and    eax,0x8753fbdf
  41605b:	adc    eax,0xcf9c5eb7
  416060:	frstor [esi-0x65fb908b]
  416066:	push   0x40
  416068:	cs add eax,0x752a048c
  41606e:	hlt    
  41606f:	call   0x8f6afdc8
  416074:	mov    al,0xa
  416076:	xchg   ebp,eax
  416077:	pusha  
  416078:	ret    0x50b3
  41607b:	fldenv [esi+0x7c]
  41607e:	daa    
  41607f:	xchg   DWORD PTR [ecx],edi
  416081:	out    0x97,al
  416083:	mov    ds:0xd9406af2,al
  416088:	daa    
  416089:	mov    bh,0xfe
  41608b:	test   DWORD PTR [ebp+0x51],0x2394a58a
  416092:	lahf   
  416093:	ds fchs 
  416096:	lds    eax,FWORD PTR [ecx-0x1be05c3c]
  41609c:	mov    ds:0x68f37490,al
  4160a1:	xlat   BYTE PTR ds:[ebx]
  4160a2:	jecxz  0x41605c
  4160a4:	fcomi  st,st(3)
  4160a6:	xor    al,0xe
  4160a8:	mov    dl,0x39
  4160aa:	mov    cl,0x17
  4160ac:	div    BYTE PTR [edx]
  4160ae:	daa    
  4160af:	out    0xfd,eax
  4160b1:	sbb    eax,0x725dd587
  4160b6:	cmp    bh,bl
  4160b8:	xchg   edx,eax
  4160b9:	cmp    BYTE PTR ds:0x51ccd5cb,al
  4160bf:	cmp    eax,0x44387aff
  4160c4:	mov    ecx,0xf74e0d06
  4160c9:	fucomip st,st(0)
  4160cb:	ins    BYTE PTR es:[edi],dx
  4160cc:	pop    edi
  4160cd:	sar    BYTE PTR [esi+0x7c],0x3b
  4160d1:	dec    esi
  4160d2:	das    
  4160d3:	stc    
  4160d4:	lods   al,BYTE PTR ds:[esi]
  4160d5:	xchg   esi,eax
  4160d6:	dec    edx
  4160d7:	sub    BYTE PTR [ecx-0xe],0x22
  4160db:	push   edx
  4160dc:	mov    ecx,edi
  4160de:	adc    eax,0x20fca921
  4160e3:	js     0x4160fe
  4160e5:	pusha  
  4160e6:	out    0xcb,eax
  4160e8:	or     BYTE PTR [ebx+0x5a7df10],cl
  4160ee:	xchg   DWORD PTR [eax-0x5a2be000],eax
  4160f4:	mov    cl,0x78
  4160f6:	mov    ch,0x3c
  4160f8:	loope  0x416176
  4160fa:	mov    edx,0xb29ddb70
  4160ff:	mov    al,bl
  416101:	stc    
  416102:	aaa    
  416103:	loopne 0x4160d7
  416105:	cs xchg edi,eax
  416107:	mov    al,0x2f
  416109:	adc    esp,edi
  41610b:	stos   BYTE PTR es:[edi],al
  41610c:	jge    0x4160f3
  41610e:	stos   DWORD PTR es:[edi],eax
  41610f:	dec    eax
  416110:	cmp    ah,BYTE PTR [ecx-0x7f4ed453]
  416116:	jg     0x416187
  416118:	fmul   DWORD PTR gs:[esi-0x64b5966f]
  41611f:	stos   BYTE PTR es:[edi],al
  416120:	popa   
  416121:	add    ah,BYTE PTR [ebx+esi*4-0x7b69c89f]
  416128:	icebp  
  416129:	int    0x16
  41612b:	daa    
  41612c:	aam    0xf2
  41612e:	xchg   esi,eax
  41612f:	out    dx,al
  416130:	out    0x54,al
  416132:	pop    edx
  416133:	mov    DWORD PTR [esi-0x38cc82b8],ecx
  416139:	jno    0x4160e1
  41613b:	push   cs
  41613c:	mov    ecx,0x3cb7a682
  416141:	test   al,0xc8
  416143:	call   0x2df6:0x3045afa7
  41614a:	imul   esi,DWORD PTR [edx],0x3e
  41614d:	dec    eax
  41614e:	js     0x4160f1
  416150:	xor    DWORD PTR [edi-0x5f56e5e4],edx
  416156:	mov    cl,0x93
  416158:	mov    ch,0xe6
  41615a:	mov    ebp,0xfa231164
  41615f:	or     eax,0xfff01aa0
  416164:	jmp    0xf5e6:0x82dabbe
  41616b:	ret    0xb1be
  41616e:	outs   dx,DWORD PTR ds:[esi]
  41616f:	push   ebx
  416170:	neg    DWORD PTR [esi]
  416172:	cwde   
  416173:	sahf   
  416174:	inc    edi
  416175:	inc    edi
  416176:	scas   al,BYTE PTR es:[edi]
  416177:	inc    esp
  416178:	push   esp
  416179:	mov    BYTE PTR [edi+0x19cbf8c9],bl
  41617f:	cs lahf 
  416181:	ss dec esi
  416183:	xor    eax,0x44b3ff2
  416188:	(bad)  [esi-0x78]
  41618b:	lahf   
  41618c:	and    ah,dh
  41618e:	pop    ebp
  41618f:	jb     0x4161e2
  416191:	popa   
  416192:	rcl    DWORD PTR [ecx],0x66
  416195:	loope  0x41617f
  416197:	add    BYTE PTR [esi+edi*8+0x57b0e9af],cl
  41619e:	pop    ecx
  41619f:	sub    dh,BYTE PTR [eax+0x4639a98d]
  4161a5:	rol    BYTE PTR [edx+0x7f],cl
  4161a8:	push   esp
  4161a9:	outs   dx,BYTE PTR ds:[esi]
  4161aa:	cli    
  4161ab:	fisub  DWORD PTR [edi-0x41]
  4161ae:	dec    ebx
  4161af:	mov    ah,0x53
  4161b1:	outs   dx,BYTE PTR ds:[esi]
  4161b2:	popa   
  4161b3:	jp     0x4161d8
  4161b5:	jl     0x41622d
  4161b7:	ds inc ebp
  4161b9:	pop    esi
  4161ba:	dec    eax
  4161bb:	std    
  4161bc:	sub    DWORD PTR [eax-0x55a40493],ebp
  4161c2:	shr    DWORD PTR [edx-0x2f263550],0x3c
  4161c9:	aaa    
  4161ca:	popf   
  4161cb:	pop    edi
  4161cc:	and    DWORD PTR [eax+eiz*4],esi
  4161cf:	jb     0x416237
  4161d1:	and    BYTE PTR [ebx+ebx*8-0x76],bl
  4161d5:	retf   0xabf7
  4161d8:	pop    ebx
  4161d9:	and    BYTE PTR [esi],bh
  4161db:	je     0x4161a4
  4161dd:	mov    esi,0xa9f1256f
  4161e2:	dec    eax
  4161e3:	xor    BYTE PTR ds:0x100d17ea,al
  4161e9:	(bad)  
  4161ea:	loopne 0x416171
  4161ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ee:	sbb    BYTE PTR [ebx-0x2db2e179],bh
  4161f4:	outs   dx,DWORD PTR ds:[esi]
  4161f5:	sbb    cl,BYTE PTR [ebp+0x74c55fa6]
  4161fb:	call   0x19ab9abd
  416200:	inc    ebp
  416201:	ins    BYTE PTR es:[edi],dx
  416202:	adc    bl,BYTE PTR [edi]
  416204:	sti    
  416205:	push   es
  416206:	cmp    ebp,DWORD PTR ds:0xea57d680
  41620c:	inc    ebp
  41620d:	or     bh,BYTE PTR [ecx+ecx*4+0x61fb3c02]
  416214:	mov    ds:0x8dee37e2,eax
  416219:	loope  0x4161d0
  41621b:	aad    0x7c
  41621d:	push   edx
  41621e:	add    eax,0x79ab590a
  416223:	push   ss
  416224:	push   ecx
  416225:	cdq    
  416226:	lds    edi,FWORD PTR [eax+edi*4]
  416229:	pusha  
  41622a:	push   0xffffff82
  41622c:	loope  0x41620d
  41622e:	adc    eax,0x2d1e5797
  416233:	call   0xd3810961
  416238:	pop    ebx
  416239:	cs dec edi
  41623b:	sbb    al,0xea
  41623d:	mov    cl,BYTE PTR [edi-0x1dfa11df]
  416243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416244:	xchg   ebp,eax
  416245:	add    bh,bh
  416247:	dec    eax
  416248:	xchg   ecx,eax
  416249:	addr16 jnp 0x4162c1
  41624c:	loopne 0x416282
  41624e:	imul   bh
  416250:	test   DWORD PTR [ebx+0x19779ea7],ecx
  416256:	jp     0x4162ab
  416258:	adc    DWORD PTR [esi-0x4701fe03],esi
  41625e:	(bad)  
  41625f:	sahf   
  416260:	enter  0xafbc,0x95
  416264:	nop
  416265:	in     al,0xc5
  416267:	mov    bl,0x3
  416269:	add    ecx,ecx
  41626b:	pop    esp
  41626c:	xor    DWORD PTR [esi],0x7e
  41626f:	mov    esp,0xbbb89300
  416274:	or     al,0xe5
  416276:	mov    ecx,0xabb2d034
  41627b:	out    dx,eax
  41627c:	pop    edx
  41627d:	(bad)  
  41627e:	and    al,ah
  416280:	pusha  
  416281:	ins    BYTE PTR es:[edi],dx
  416282:	sahf   
  416283:	xchg   DWORD PTR [eax-0x65da64fc],esp
  416289:	aam    0xc4
  41628b:	jne    0x416215
  41628d:	data16 sti 
  41628f:	ja     0x416242
  416291:	sbb    al,0x2
  416293:	cmc    
  416294:	idiv   BYTE PTR [ebx]
  416296:	test   al,0x62
  416298:	sub    al,0x8
  41629a:	mov    ah,0x1
  41629c:	cs push ebx
  41629e:	(bad)  
  41629f:	(bad)  
  4162a0:	push   ss
  4162a1:	arpl   di,si
  4162a3:	adc    DWORD PTR [edx],0xffffffda
  4162a6:	dec    eax
  4162a7:	test   BYTE PTR [edi+0x7d],ch
  4162aa:	sub    esp,esi
  4162ac:	pop    esi
  4162ad:	or     edi,DWORD PTR [ecx]
  4162af:	das    
  4162b0:	xchg   ebx,eax
  4162b1:	xchg   cl,cl
  4162b3:	inc    ecx
  4162b4:	ins    BYTE PTR es:[edi],dx
  4162b5:	lods   eax,DWORD PTR ds:[esi]
  4162b6:	shr    DWORD PTR [edi+0x3041a0],cl
  4162bc:	add    eax,0xed6bcca1
  4162c1:	jmp    0x416333
  4162c3:	imul   ecx,DWORD PTR ds:0xb1fb7633,0x5baec097
  4162cd:	and    ebx,DWORD PTR [eax+0x3a]
  4162d0:	or     ebx,esp
  4162d2:	xor    ebx,DWORD PTR [ecx+0x150c6a5a]
  4162d8:	push   esp
  4162d9:	lea    edx,[eax+edx*2+0x63dc0fd7]
  4162e0:	and    DWORD PTR [ecx+0x7a12ea3b],ebx
  4162e6:	stos   BYTE PTR es:[edi],al
  4162e7:	out    0x56,eax
  4162e9:	sub    al,0xeb
  4162eb:	in     eax,0xdf
  4162ed:	icebp  
  4162ee:	pop    ss
  4162ef:	push   es
  4162f0:	aaa    
  4162f1:	fiadd  WORD PTR [esi+0x40]
  4162f4:	jle    0x416317
  4162f6:	jno    0x4162a7
  4162f8:	loopne 0x41627d
  4162fa:	aaa    
  4162fb:	test   DWORD PTR [edi+0x17392475],esi
  416301:	mov    al,ds:0xc7f75660
  416306:	sub    edi,0x36
  416309:	cwde   
  41630a:	mov    ch,0x7a
  41630c:	lods   al,BYTE PTR ds:[esi]
  41630d:	shl    BYTE PTR [edx+0x27baff3d],1
  416313:	dec    ebp
  416314:	mov    ds:0x5e0d0f65,eax
  416319:	add    BYTE PTR [ebx+0x59b93020],bl
  41631f:	ja     0x41634c
  416321:	push   esp
  416322:	sbb    eax,0xc55d4a94
  416327:	push   edx
  416328:	out    dx,eax
  416329:	fistp  QWORD PTR [esi+0x70c3ecf1]
  41632f:	mov    esp,0xce6eaf29
  416334:	or     al,0x48
  416336:	mov    bh,0x8a
  416338:	xchg   edi,eax
  416339:	push   cs
  41633a:	dec    al
  41633c:	in     eax,0x97
  41633e:	push   ds
  41633f:	(bad)  
  416341:	mov    ?,edi
  416343:	mov    ch,0x7d
  416345:	cmp    eax,0xa8320d0b
  41634a:	cli    
  41634b:	mov    cl,0x1d
  41634d:	ins    BYTE PTR es:[edi],dx
  41634e:	xor    edx,DWORD PTR [ecx-0x41]
  416351:	or     eax,0xd450bd01
  416356:	or     al,0xd0
  416358:	int    0x38
  41635a:	sub    dh,0x99
  41635d:	push   0xfffffff5
  41635f:	adc    DWORD PTR [ebx],edi
  416361:	out    0xd2,eax
  416363:	inc    eax
  416364:	mov    edi,0x728e880e
  416369:	inc    edi
  41636a:	inc    eax
  41636b:	sar    DWORD PTR [ebx+0x4173a888],1
  416371:	xchg   edi,eax
  416372:	mov    dh,bl
  416374:	xor    eax,0x798f465a
  416379:	ret    
  41637a:	cmp    al,0x8f
  41637c:	inc    ebx
  41637d:	popa   
  41637e:	mov    ds:0x5f9b8d70,eax
  416383:	xor    eax,0xceaf2da9
  416388:	xchg   ecx,eax
  416389:	cs sbb eax,0x23e5315d
  41638f:	mov    al,BYTE PTR [edi+0x64]
  416392:	adc    ah,bh
  416394:	xchg   ebx,eax
  416395:	mov    esi,0x230f06f2
  41639a:	dec    esi
  41639b:	mov    ?,WORD PTR ds:0x6d77d832
  4163a1:	out    0x29,al
  4163a3:	aas    
  4163a4:	(bad)  
  4163a5:	push   eax
  4163a6:	cdq    
  4163a7:	dec    ecx
  4163a8:	mov    eax,ds:0x4239b499
  4163ad:	repnz jmp 0x8725:0x4f60cb2c
  4163b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b6:	lock (bad) 
  4163ba:	repnz lahf 
  4163bc:	mov    ah,0x91
  4163be:	pop    esp
  4163bf:	mov    edi,0x4df491b7
  4163c4:	xchg   ebp,eax
  4163c6:	rcr    BYTE PTR [eax],cl
  4163c8:	stos   DWORD PTR es:[edi],eax
  4163c9:	test   eax,0x1ff00e83
  4163ce:	test   sp,si
  4163d1:	jbe    0x4163ae
  4163d3:	adc    al,0x7b
  4163d5:	and    al,0x7d
  4163d7:	push   edx
  4163d8:	dec    esp
  4163da:	and    esi,DWORD PTR [edx]
  4163dc:	retf   
  4163dd:	cmp    al,BYTE PTR [eax]
  4163df:	mov    ah,0x60
  4163e1:	adc    BYTE PTR [esp+ecx*4+0x5779f2b],al
  4163e8:	xchg   esp,eax
  4163e9:	pop    eax
  4163ea:	cdq    
  4163eb:	push   esi
  4163ec:	adc    esi,DWORD PTR [ebp+0x73765d80]
  4163f2:	and    al,bl
  4163f4:	jge    0x41640d
  4163f6:	clc    
  4163f7:	mov    edi,0x329c13d6
  4163fc:	add    eax,0x7830fdd5
  416401:	jecxz  0x416441
  416403:	jno    0x416398
  416405:	mov    ds:0x11885d75,eax
  41640a:	nop
  41640b:	int    0x48
  41640d:	(bad)  
  41640e:	in     eax,0x2f
  416410:	mov    bl,0x9a
  416412:	cwde   
  416413:	add    al,bl
  416415:	sbb    eax,DWORD PTR [ebp+0x4d]
  416418:	mov    edx,0xa364a046
  41641d:	jecxz  0x416428
  41641f:	addr16 pop es
  416421:	repz dec esp
  416423:	ins    BYTE PTR es:[edi],dx
  416424:	pop    edx
  416425:	push   esp
  416426:	data16 (bad) 
  416428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416429:	mov    bh,0x5
  41642b:	ret    0xc66b
  41642e:	and    BYTE PTR [eax-0x2e],0xd6
  416432:	outs   dx,BYTE PTR ds:[esi]
  416433:	cdq    
  416434:	retf   0xa237
  416437:	cmp    ecx,DWORD PTR [edx+0x39bf5ab0]
  41643d:	adc    DWORD PTR [esp+edi*8+0x7ad2abaf],ebx
  416444:	loope  0x416403
  416446:	lahf   
  416447:	add    al,0x22
  416449:	and    edx,eax
  41644b:	add    al,0x74
  41644d:	cs inc edi
  41644f:	cmp    dl,bl
  416451:	add    cl,BYTE PTR [ebp+0x67fc882b]
  416457:	imul   ecx,DWORD PTR [ecx+0x6710d77],0x92387a95
  416461:	addr16 repnz xchg ebp,eax
  416464:	test   BYTE PTR [edx-0x172fb9e7],bh
  41646a:	sub    cl,BYTE PTR [edi-0x3a]
  41646d:	leave  
  41646e:	pop    ds
  41646f:	loop   0x41647e
  416471:	jmp    0x41642e
  416473:	rep ins BYTE PTR es:[edi],dx
  416475:	push   eax
  416476:	add    ebp,edi
  416478:	(bad)  
  416479:	iret   
  41647a:	lds    edi,FWORD PTR [ebx]
  41647c:	add    BYTE PTR [esi+0x5b],ah
  41647f:	sub    edx,edi
  416481:	mov    bl,0xf7
  416483:	dec    ebp
  416484:	stos   BYTE PTR es:[edi],al
  416485:	push   ebx
  416486:	call   0xf56c3f2b
  41648b:	outs   dx,BYTE PTR ds:[esi]
  41648c:	retf   
  41648d:	pop    ds
  41648e:	mov    ds:0x75e2ce19,al
  416493:	into   
  416494:	mov    esi,0x414fed3
  416499:	inc    edx
  41649a:	(bad)  
  41649b:	fsub   DWORD PTR [ebp+edx*8+0x22ca3e3a]
  4164a2:	mov    ?,WORD PTR [edi+0x78dd362d]
  4164a8:	cmp    BYTE PTR [ebx+eiz*8],dl
  4164ab:	xor    al,0x7b
  4164ad:	je     0x4164e6
  4164af:	stos   BYTE PTR es:[edi],al
  4164b0:	xor    bh,BYTE PTR [esi+0x5a3058d6]
  4164b6:	cld    
  4164b7:	sub    DWORD PTR [edx-0x4d],0x24
  4164bb:	sbb    eax,0xb9f9941f
  4164c0:	jg     0x41648f
  4164c2:	pop    esi
  4164c3:	aam    0x2e
  4164c5:	xchg   edi,eax
  4164c6:	nop
  4164c7:	stos   BYTE PTR es:[edi],al
  4164c8:	aad    0x83
  4164ca:	xor    al,0x94
  4164cc:	add    DWORD PTR [eax],ecx
  4164ce:	mov    WORD PTR ds:0x77112cdd,es
  4164d4:	je     0x416478
  4164d6:	xchg   DWORD PTR [ebx+eiz*1],ebp
  4164d9:	js     0x4164a8
  4164db:	mov    esi,0x9e3f57e4
  4164e0:	pushf  
  4164e1:	push   ss
  4164e2:	xor    edi,esi
  4164e4:	add    BYTE PTR [edi],bh
  4164e6:	mov    al,0xe0
  4164e8:	dec    ebp
  4164e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164ea:	adc    ah,BYTE PTR [eax+0x37cacea0]
  4164f0:	cmp    esp,DWORD PTR [edx-0x4d]
  4164f3:	cli    
  4164f4:	out    0xd8,eax
  4164f6:	lds    esp,FWORD PTR [esi+ebp*4-0xb]
  4164fa:	jbe    0x17d9902b
  416500:	push   0xffffffdf
  416502:	and    al,0xae
  416504:	xchg   esi,eax
  416505:	iret   
  416506:	test   eax,0x7e490f6c
  41650b:	and    bl,0x9d
  41650e:	enter  0xf408,0xc9
  416512:	rcr    DWORD PTR [ecx-0x17],cl
  416515:	mov    esp,0x27fbd6a8
  41651a:	cdq    
  41651b:	and    al,0x32
  41651d:	out    0x8c,eax
  41651f:	rcr    BYTE PTR es:[ebp+0x5f1e1f36],1
  416526:	pop    ecx
  416527:	sbb    al,0x40
  416529:	xor    esi,DWORD PTR [esi]
  41652b:	ficom  DWORD PTR [edi-0x1799a936]
  416531:	ss sbb al,0x93
  416534:	pushf  
  416535:	adc    DWORD PTR [ebp+0x1a262fd1],0xb
  41653c:	sbb    eax,0xbb85c3a2
  416541:	or     ecx,DWORD PTR [edi+0x4f]
  416544:	ds popf 
  416546:	fdiv   st(3),st
  416548:	lods   eax,DWORD PTR ds:[esi]
  416549:	(bad)  
  41654a:	in     eax,dx
  41654b:	lahf   
  41654c:	inc    edi
  41654d:	dec    ecx
  41654e:	push   ds
  41654f:	sbb    eax,DWORD PTR [edi]
  416551:	daa    
  416552:	in     al,0x23
  416554:	out    dx,al
  416555:	jb     0x416561
  416557:	mov    dl,0xf7
  416559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41655a:	sub    al,0xef
  41655c:	push   ds
  41655d:	cmp    al,0xd8
  41655f:	int3   
  416560:	inc    ebp
  416561:	mul    eax
  416563:	xor    DWORD PTR [edi-0x303881aa],0x16
  41656a:	scas   eax,DWORD PTR es:[edi]
  41656b:	cdq    
  41656c:	sahf   
  41656d:	call   0xa912893a
  416572:	dec    edx
  416573:	shr    edi,1
  416575:	nop
  416576:	gs popf 
  416578:	arpl   dx,sp
  41657a:	push   esi
  41657b:	fwait
  41657c:	mov    al,ds:0xc1a1f141
  416581:	sub    ch,al
  416583:	xor    ch,dl
  416585:	scas   al,BYTE PTR es:[edi]
  416586:	mov    al,ds:0xe6e5f5bf
  41658b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41658c:	(bad)
  416590:	or     edi,ebp
  416592:	jb     0x416565
  416594:	mov    cl,0x50
  416596:	push   es
  416597:	and    cl,dl
  416599:	out    0xf1,al
  41659b:	fnstenv [ecx+0x29]
  41659e:	and    al,bh
  4165a0:	aaa    
  4165a1:	pop    edx
  4165a2:	mov    edi,0xbf87bb6a
  4165a7:	out    0x1a,eax
  4165a9:	mov    al,ds:0x6f9a7a25
  4165ae:	push   ecx
  4165af:	rol    DWORD PTR [ecx],cl
  4165b1:	sub    BYTE PTR [edx],bl
  4165b3:	lods   eax,DWORD PTR ds:[esi]
  4165b4:	jnp    0x416558
  4165b6:	adc    eax,ecx
  4165b8:	aad    0x23
  4165ba:	mov    edx,0x98d73754
  4165bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165c0:	pop    esi
  4165c1:	cmp    ebp,DWORD PTR [esi+0x5e385bf2]
  4165c7:	iret   
  4165c8:	adc    bh,BYTE PTR [esi]
  4165ca:	jne    0x41664b
  4165cc:	add    eax,0xee79981c
  4165d1:	mov    BYTE PTR [esp+eax*1],bh
  4165d4:	(bad)  
  4165d5:	pop    eax
  4165d6:	jmp    0xe19fac7a
  4165db:	cwde   
  4165dc:	ss cmc 
  4165de:	lds    ebp,FWORD PTR [edi+0x683e1910]
  4165e4:	xor    eax,0xa1686315
  4165e9:	mov    bh,0x86
  4165eb:	add    dx,bp
  4165ee:	push   0x404af8d
  4165f3:	rcl    DWORD PTR [eax],cl
  4165f5:	rcr    ch,0x3
  4165f8:	std    
  4165f9:	cmc    
  4165fa:	push   eax
  4165fb:	or     al,0x9d
  4165fd:	cmp    BYTE PTR [ebp-0x2d],ah
  416600:	mov    eax,0x8a8a08b7
  416605:	xchg   ebx,eax
  416606:	sbb    al,0x8c
  416608:	dec    edx
  416609:	retf   
  41660a:	jb     0x416671
  41660c:	mov    dl,0x1d
  41660e:	in     eax,dx
  41660f:	les    ecx,FWORD PTR [ebx-0x698f0b63]
  416615:	dec    ebx
  416616:	inc    edi
  416617:	jge    0x416696
  416619:	data16 test ch,bh
  41661c:	fs pop ecx
  41661e:	outs   dx,BYTE PTR ds:[esi]
  41661f:	and    dh,dh
  416621:	add    eax,0xa33b76a8
  416626:	vdivss xmm7,xmm1,xmm6
  41662a:	iret   
  41662b:	sub    al,0x48
  41662d:	push   edi
  41662e:	push   esp
  41662f:	in     eax,dx
  416630:	dec    esp
  416631:	out    dx,eax
  416632:	iret   
  416633:	cmp    al,BYTE PTR ds:[edx-0xacbbfe6]
  41663a:	xchg   ch,dh
  41663c:	mov    WORD PTR [ecx+ebp*4],cs
  41663f:	fcom   DWORD PTR ds:0x2444467b
  416645:	add    BYTE PTR [edi],ah
  416647:	lods   al,BYTE PTR ds:[esi]
  416648:	push   ds
  416649:	sub    ebp,esp
  41664b:	pop    ebx
  41664c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41664d:	(bad)  
  41664e:	and    BYTE PTR [esi-0x43a6cf8e],al
  416654:	xchg   ebx,eax
  416655:	sub    DWORD PTR [edx+edx*4],esi
  416658:	pop    esi
  416659:	push   0x52a095b
  41665e:	add    DWORD PTR [esi],edx
  416660:	ins    BYTE PTR es:[edi],dx
  416661:	sti    
  416662:	div    BYTE PTR [eax+0x3973f2fe]
  416668:	cmp    al,0xf9
  41666a:	out    dx,al
  41666b:	jno    0x416670
  41666d:	jno    0x4166bb
  41666f:	(bad)  
  416670:	jmp    0x4446:0x7ed1ff77
  416677:	fsubr  QWORD PTR [ecx]
  416679:	cmp    esi,DWORD PTR [ebx+0x7]
  41667c:	add    ebx,DWORD PTR [ebx+0x55]
  41667f:	ins    WORD PTR es:[edi],dx
  416681:	fild   QWORD PTR [ecx+ebx*8-0x74478f2d]
  416688:	push   edi
  416689:	lds    ecx,FWORD PTR [ebx+0x1a]
  41668c:	inc    eax
  41668d:	ins    DWORD PTR es:[edi],dx
  41668e:	fs shr edx,1
  416691:	and    bl,BYTE PTR [edx-0x6f25c070]
  416697:	loope  0x416630
  416699:	and    al,0xa8
  41669b:	jle    0x41664c
  41669d:	wbinvd 
  41669f:	fistp  WORD PTR ds:0x7e10adb2
  4166a5:	fcom   DWORD PTR [edx+0x64780b5c]
  4166ab:	mov    bh,0xa0
  4166ad:	jmp    0xe7a7:0xefa7291c
  4166b4:	or     BYTE PTR [ebp+0x4],dl
  4166b7:	out    0xef,eax
  4166b9:	cwde   
  4166ba:	xchg   DWORD PTR [edx+edx*2-0x70],ebp
  4166be:	into   
  4166bf:	mov    WORD PTR [si],cs
  4166c2:	sub    al,0xff
  4166c4:	push   0x63
  4166c6:	daa    
  4166c7:	jae    0x416673
  4166c9:	push   edx
  4166ca:	inc    eax
  4166cb:	or     eax,0xd820bc79
  4166d0:	jne    0x41672e
  4166d2:	call   0x9ec5:0xc6680003
  4166d9:	mov    fs,WORD PTR [edx-0x7385b006]
  4166df:	imul   esi,DWORD PTR ds:0x3b53dfc2,0x32
  4166e6:	fcom   QWORD PTR [ebx-0x2]
  4166e9:	sahf   
  4166ea:	cdq    
  4166eb:	push   ebx
  4166ec:	inc    esp
  4166ed:	push   ss
  4166ee:	popa   
  4166ef:	aad    0xde
  4166f1:	jae    0x41667d
  4166f3:	fdiv   st(6),st
  4166f5:	dec    esi
  4166f6:	test   al,0xef
  4166f8:	test   eax,0xdc089e7c
  4166fd:	sbb    eax,0x2ad0c8af
  416702:	dec    esp
  416703:	xchg   esp,eax
  416704:	es dec esi
  416706:	jbe    0x41672e
  416708:	sti    
  416709:	add    eax,0x2bdeefff
  41670e:	js     0x41673f
  416710:	add    bl,BYTE PTR [ecx]
  416712:	and    BYTE PTR [edx-0x6c532832],cl
  416718:	cdq    
  416719:	dec    ecx
  41671a:	inc    esi
  41671b:	inc    esi
  41671c:	into   
  41671d:	and    BYTE PTR ds:0x21501383,bl
  416723:	ror    edi,0x24
  416726:	arpl   WORD PTR [ebx-0x3e937ed9],bx
  41672c:	adc    BYTE PTR [edi-0x5bd7330],ch
  416732:	std    
  416733:	cmp    BYTE PTR ds:0x2dda7eb6,0x3a
  41673a:	mov    edi,0xb6db9bf0
  41673f:	nop
  416740:	sahf   
  416741:	adc    BYTE PTR [edi],bh
  416743:	and    BYTE PTR [edi*8+0x2bfd9b32],bh
  41674a:	dec    ecx
  41674b:	xor    BYTE PTR [esi],bh
  41674d:	dec    eax
  41674e:	ror    DWORD PTR [ecx+0x408d02ec],cl
  416754:	add    eax,0x7321518e
  416759:	ds mov al,0x78
  41675c:	jmp    0x7352:0x336c0f2b
  416763:	jae    0x416715
  416765:	int    0xe6
  416767:	jnp    0x4167cb
  416769:	outs   dx,BYTE PTR ds:[esi]
  41676a:	or     al,0xc8
  41676c:	adc    eax,0xaaa310a7
  416771:	fisttp QWORD PTR [ecx+0x1af5faed]
  416777:	adc    DWORD PTR [esi+0x324d1e82],edi
  41677d:	adc    BYTE PTR [ebp-0x66752166],bh
  416783:	repnz (bad) 
  416786:	xor    DWORD PTR [ebx+ebp*8],0xffffffc5
  41678a:	icebp  
  41678b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41678c:	ja     0x416739
  41678e:	ss dec edi
  416790:	nop
  416791:	mov    DWORD PTR ds:0x8f5b446c,0x390ec0b7
  41679b:	scas   eax,DWORD PTR es:[edi]
  41679c:	adc    dl,BYTE PTR [ebx]
  41679e:	push   cs
  41679f:	popa   
  4167a0:	into   
  4167a1:	adc    eax,DWORD PTR [ebx]
  4167a3:	popa   
  4167a4:	jae    0x416745
  4167a6:	int    0x74
  4167a8:	sbb    ecx,DWORD PTR [edi]
  4167aa:	out    0x92,eax
  4167ac:	sbb    DWORD PTR [eax-0x3d],esi
  4167af:	nop
  4167b0:	das    
  4167b1:	mov    bh,dh
  4167b3:	in     eax,0xe5
  4167b5:	mov    esi,0x9515c53b
  4167ba:	mov    ds:0xea6ca6b8,eax
  4167bf:	push   0xffffffe0
  4167c1:	out    dx,eax
  4167c2:	ds jbe 0x416831
  4167c5:	mov    esi,0xe60c72d6
  4167ca:	mov    ecx,0x7a9d41a5
  4167cf:	jnp    0x41682b
  4167d1:	aad    0x52
  4167d3:	mov    ch,BYTE PTR [ebp-0x12]
  4167d6:	sbb    DWORD PTR [esi],eax
  4167d8:	dec    ebx
  4167d9:	sub    BYTE PTR ds:0x32746ca3,al
  4167df:	and    ebx,DWORD PTR [ecx]
  4167e1:	inc    eax
  4167e2:	mov    edi,0xff9a3ca4
  4167e7:	adc    eax,0x31945561
  4167ec:	fisub  WORD PTR [edi-0x5fff6f7d]
  4167f2:	test   DWORD PTR [esi],edx
  4167f4:	leave  
  4167f5:	push   es
  4167f6:	cmc    
  4167f7:	sti    
  4167f8:	imul   esi,DWORD PTR [ebx-0x26],0xffffff9f
  4167fc:	imul   esi,ecx,0x26
  4167ff:	imul   BYTE PTR [esi]
  416801:	jp     0x4167cf
  416803:	jo     0x416854
  416805:	mov    eax,0xb0b8d36c
  41680a:	mov    al,ds:0xbefe91ea
  41680f:	stos   BYTE PTR es:[edi],al
  416810:	ja     0x4167f6
  416812:	js     0x41682b
  416814:	ss ins DWORD PTR es:[edi],dx
  416816:	inc    ebp
  416817:	outs   dx,BYTE PTR ds:[esi]
  416818:	call   0xccb0:0xbbd29c01
  41681f:	pop    ss
  416820:	mov    edx,0x21f3ea06
  416825:	cs jae 0x416805
  416828:	aas    
  416829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41682a:	pop    edx
  41682b:	div    DWORD PTR [eax]
  41682d:	arpl   si,si
  41682f:	dec    eax
  416830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416831:	aam    0xe5
  416833:	push   0x3a217f64
  416838:	sbb    eax,0x2c86e19
  41683d:	aas    
  41683e:	cs xchg ebp,eax
  416840:	jbe    0x4167d8
  416842:	jb     0x4168bf
  416844:	cmp    eax,0xd7cf0e36
  416849:	xchg   edx,eax
  41684a:	test   dl,ch
  41684c:	xchg   DWORD PTR [ecx+esi*8-0x6e],esp
  416850:	xchg   esp,eax
  416851:	and    BYTE PTR [edi+0x20],0x50
  416855:	cmp    dl,BYTE PTR [edx-0x5b]
  416858:	ds mov ebx,0xdb0ef577
  41685e:	inc    esi
  41685f:	cmp    BYTE PTR [edx+ebp*2+0x7c],cl
  416863:	gs arpl bx,dx
  416866:	adc    DWORD PTR [ebp+0x2],0x66
  41686a:	retf   0xe429
  41686d:	mov    dl,0x79
  41686f:	popf   
  416870:	neg    BYTE PTR [eax+0x43]
  416873:	pop    eax
  416874:	sub    dh,0xfb
  416877:	fcom   DWORD PTR [ebx-0x55]
  41687a:	sbb    al,0x33
  41687c:	jg     0x416818
  41687e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41687f:	mov    eax,0x220d726b
  416884:	or     BYTE PTR [esi],0x76
  416887:	xor    al,0xb2
  416889:	mov    dl,0x79
  41688b:	dec    ebp
  41688c:	std    
  41688d:	adc    al,0x54
  41688f:	push   edx
  416890:	imul   ecx,esp,0xc294bc22
  416896:	cmp    DWORD PTR [eax-0x6c],ecx
  416899:	fcmovne st,st(4)
  41689b:	das    
  41689c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41689d:	or     DWORD PTR [edi-0x32],edi
  4168a0:	addr16 dec ebp
  4168a2:	xor    ch,cl
  4168a4:	add    ah,ah
  4168a6:	in     al,dx
  4168a7:	sbb    DWORD PTR [esi-0xa42ecf5],edx
  4168ad:	(bad)  
  4168ae:	movsx  eax,WORD PTR [esi-0x63]
  4168b2:	mov    BYTE PTR [edx],0x25
  4168b5:	int3   
  4168b6:	into   
  4168b7:	pop    ss
  4168b8:	inc    ecx
  4168b9:	pop    edx
  4168ba:	dec    ebx
  4168bb:	nop
  4168bc:	jge    0x4168d2
  4168be:	fwait
  4168bf:	int3   
  4168c0:	jp     0x4168c9
  4168c2:	mov    bl,0xb5
  4168c4:	dec    edi
  4168c5:	mov    ch,0x7e
  4168c7:	xchg   DWORD PTR [edi+edi*2+0x29a4b045],edi
  4168ce:	out    0x39,eax
  4168d0:	lds    edx,FWORD PTR [ebp+0x63]
  4168d3:	push   ds
  4168d4:	dec    esi
  4168d5:	stos   DWORD PTR es:[edi],eax
  4168d6:	mov    cl,0x28
  4168d8:	stos   BYTE PTR es:[edi],al
  4168d9:	adc    DWORD PTR [edx+0x1d],0xb2aeec78
  4168e0:	xchg   esp,eax
  4168e1:	(bad)  
  4168e2:	sub    al,0x69
  4168e4:	pop    DWORD PTR [esi-0x5]
  4168e7:	lock ins DWORD PTR es:[edi],dx
  4168e9:	dec    esp
  4168ea:	dec    ebx
  4168eb:	xchg   ebx,eax
  4168ec:	fist   WORD PTR [esi+0x5a]
  4168ef:	lahf   
  4168f0:	or     dh,dl
  4168f2:	and    eax,0xceaf61c9
  4168f7:	mul    BYTE PTR [esp+ecx*8+0x53]
  4168fb:	mov    ebx,0xc684f767
  416900:	mov    cl,0xf8
  416902:	cdq    
  416903:	ror    DWORD PTR [ecx+ebp*2],cl
  416906:	and    ebp,DWORD PTR [edi+0x46]
  416909:	and    eax,0xbb265055
  41690e:	mov    bl,0xde
  416910:	mov    ch,0xdd
  416912:	xchg   ecx,eax
  416913:	sub    ebx,DWORD PTR [esi+0x73]
  416916:	mov    ds:0x441877b8,al
  41691b:	outs   dx,BYTE PTR ds:[esi]
  41691c:	and    eax,0xc91784db
  416921:	push   edi
  416922:	pop    eax
  416923:	xor    al,0x80
  416925:	mov    ds:0x2a04a9d1,al
  41692a:	mov    edi,0xd92f19d2
  41692f:	sbb    al,0x84
  416931:	scas   eax,DWORD PTR es:[edi]
  416932:	mov    ch,0xc
  416934:	mov    eax,0x6df78d97
  416939:	repz mov ss,ebx
  41693c:	test   al,0x1d
  41693e:	call   0xc9dd8ef5
  416943:	iret   
  416944:	je     0x41694a
  416946:	sbb    al,bh
  416948:	sbb    DWORD PTR [esi],edi
  41694a:	cmp    ah,BYTE PTR [edi]
  41694c:	gs dec eax
  41694e:	scas   al,BYTE PTR es:[edi]
  41694f:	clc    
  416950:	pop    ebp
  416951:	arpl   WORD PTR ds:0xac1cf89d,sp
  416957:	sar    BYTE PTR ds:0x425d4413,cl
  41695d:	xor    ecx,DWORD PTR [ebp-0x2d9b80e8]
  416963:	sbb    al,0xe0
  416965:	jnp    0x4168ee
  416967:	jge    0x416998
  416969:	sbb    DWORD PTR [esi-0x8],eax
  41696c:	push   es
  41696d:	scas   eax,DWORD PTR es:[edi]
  41696e:	cmp    ebp,DWORD PTR [esi-0x38678d8b]
  416974:	xchg   ecx,eax
  416975:	sbb    cl,bl
  416977:	mov    ds:0xa795c808,al
  41697c:	call   0xfb8c39f9
  416981:	into   
  416982:	adc    BYTE PTR [ebp+eiz*2+0x225e2a4b],bl
  416989:	call   0x4e5a5036
  41698e:	add    al,0xf
  416990:	push   ebx
  416991:	dec    edx
  416992:	clc    
  416993:	outs   dx,DWORD PTR ds:[esi]
  416994:	ror    BYTE PTR [edi],1
  416996:	jbe    0x41692b
  416998:	mov    eax,ds:0x7a2551d9
  41699d:	or     DWORD PTR [eax+esi*4+0x2705745b],ebp
  4169a4:	sbb    BYTE PTR [edi+0xb],bh
  4169a7:	retf   0x86b8
  4169aa:	mov    bh,0xe7
  4169ac:	adc    al,0xa5
  4169ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169af:	dec    ebp
  4169b0:	and    ax,0xfbc0
  4169b4:	fstp   QWORD PTR [ebx-0x67]
  4169b7:	ficomp WORD PTR [ecx+eax*4+0x30]
  4169bb:	daa    
  4169bc:	ficom  DWORD PTR [edx-0x68210701]
  4169c2:	pop    edx
  4169c3:	dec    edx
  4169c4:	cdq    
  4169c5:	xor    eax,0x461c8263
  4169ca:	(bad)  
  4169cb:	out    0xa1,eax
  4169cd:	rcl    DWORD PTR [ebp+0x1466f48],1
  4169d3:	outs   dx,BYTE PTR ds:[esi]
  4169d4:	sub    esi,DWORD PTR [edx]
  4169d6:	in     al,0xb4
  4169d8:	pop    ecx
  4169d9:	pop    esi
  4169da:	adc    bh,BYTE PTR [eax+ebx*1-0x76]
  4169de:	pop    ecx
  4169df:	dec    edi
  4169e0:	(bad)  es:[eax]
  4169e3:	jmp    0x8a82dd93
  4169e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169e9:	push   0x4fda0331
  4169ee:	add    DWORD PTR [edi-0x2e],edx
  4169f1:	cmp    dl,ch
  4169f3:	xor    BYTE PTR [ecx+esi*4],0xff
  4169f7:	jmp    0x84c76d2b
  4169fc:	repnz dec ecx
  4169fe:	loope  0x4169e6
  416a00:	jl     0x416a78
  416a02:	mov    esp,0xe435092
  416a07:	add    al,0x28
  416a09:	ret    0x3682
  416a0c:	jno    0x416a2f
  416a0e:	add    DWORD PTR [eax+0x3b],0xfffffff4
  416a12:	sub    al,0x71
  416a14:	(bad)  
  416a15:	stc    
  416a16:	js     0x41699a
  416a18:	int    0x97
  416a1a:	lods   eax,DWORD PTR ds:[esi]
  416a1b:	dec    ebx
  416a1c:	add    eax,0xbe0faec5
  416a21:	add    bh,bh
  416a23:	enter  0xad62,0xdf
  416a27:	das    
  416a28:	lds    esi,FWORD PTR [edi]
  416a2a:	inc    ecx
  416a2b:	mov    al,0xb4
  416a2d:	out    0x18,eax
  416a2f:	jle    0x416a17
  416a31:	add    al,0xb5
  416a33:	or     al,0xe0
  416a35:	or     esi,DWORD PTR cs:[ebp+0x7bf804d2]
  416a3c:	fwait
  416a3d:	imul   BYTE PTR [ecx]
  416a3f:	call   0x29ae31b5
  416a44:	mov    bh,0x91
  416a46:	mov    ds:0x93aebe07,eax
  416a4b:	adc    ebp,DWORD PTR [ecx-0x71fef1d1]
  416a51:	inc    esi
  416a52:	imul   ecx,DWORD PTR [edx+0x48],0xffffffb3
  416a56:	pushf  
  416a57:	outs   dx,DWORD PTR ds:[esi]
  416a58:	les    edx,FWORD PTR [eax]
  416a5a:	daa    
  416a5b:	jmp    FWORD PTR [eax]
  416a5d:	sbb    BYTE PTR [edx+0x5c],dh
  416a60:	out    0xc6,eax
  416a62:	jmp    0x416a77
  416a64:	es leave 
  416a66:	mov    bl,0x1d
  416a68:	adc    DWORD PTR [edx+0x3a1d466f],esp
  416a6e:	outs   dx,DWORD PTR ds:[esi]
  416a6f:	mov    ch,0xc8
  416a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a72:	ror    BYTE PTR [eax],0x5b
  416a75:	(bad)  
  416a76:	test   eax,0x5dbe55af
  416a7b:	ins    DWORD PTR es:[edi],dx
  416a7c:	fsub   QWORD PTR [ebx+eax*2-0x1f]
  416a80:	scas   eax,DWORD PTR es:[edi]
  416a81:	cs jle 0x416aaf
  416a84:	add    bl,0xe3
  416a87:	or     ebp,DWORD PTR [esi-0x5e45d37]
  416a8d:	pop    eax
  416a8e:	and    DWORD PTR [ecx-0x46],edx
  416a91:	xlat   BYTE PTR ds:[ebx]
  416a92:	jns    0x416a89
  416a94:	inc    ecx
  416a95:	pop    ebp
  416a96:	test   eax,0x8c48bd52
  416a9b:	jbe    0x416af2
  416a9d:	iret   
  416a9e:	mov    eax,ds:0xd041ddf8
  416aa3:	lods   eax,DWORD PTR ds:[esi]
  416aa4:	and    BYTE PTR [ebp+0x71],dh
  416aa7:	lock dec eax
  416aa9:	fidiv  DWORD PTR [edi-0x3c]
  416aac:	xchg   DWORD PTR [edx-0x69],ebx
  416aaf:	(bad)  
  416ab0:	daa    
  416ab1:	in     eax,0x8
  416ab3:	mov    dh,al
  416ab5:	sbb    ah,BYTE PTR [edi+0x28]
  416ab8:	jnp    0x416b05
  416aba:	js     0x416a96
  416abc:	and    al,0x96
  416abe:	jae    0x416a85
  416ac0:	inc    edi
  416ac1:	(bad)  
  416ac2:	sbb    ah,al
  416ac4:	(bad)  
  416ac6:	inc    edx
  416ac7:	je     0x416a51
  416ac9:	in     eax,0x6
  416acb:	es jmp 0x2e872b70
  416ad1:	add    dh,BYTE PTR [esi+0x42d0b844]
  416ad7:	aad    0xea
  416ad9:	xchg   edx,eax
  416ada:	lock pop edx
  416adc:	repz sub dl,ah
  416adf:	xchg   esp,eax
  416ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ae1:	jmp    0x4eff:0x8b2c4468
  416ae8:	inc    edi
  416ae9:	fisubr DWORD PTR [esi+ebx*4]
  416aec:	xchg   ecx,eax
  416aed:	jl     0x416a7a
  416aef:	push   ecx
  416af0:	jp     0x416a94
  416af2:	dec    ecx
  416af3:	push   0xffffffc8
  416af5:	push   esp
  416af6:	push   0x3a6bfd41
  416afb:	pop    es
  416afc:	inc    edi
  416afd:	js     0x416b09
  416aff:	cwde   
  416b00:	push   ss
  416b01:	adc    al,0x49
  416b03:	pop    ebx
  416b04:	sbb    eax,0x438aef99
  416b09:	imul   eax,DWORD PTR [esi-0x693ee1a1],0x76b4e35d
  416b13:	mov    eax,0x8fa126f4
  416b18:	das    
  416b19:	xor    esp,DWORD PTR [edi+ecx*8]
  416b1c:	lods   eax,DWORD PTR ds:[esi]
  416b1d:	and    eax,0x7059f78d
  416b22:	pusha  
  416b23:	cli    
  416b24:	mov    bl,0xe8
  416b26:	fld    DWORD PTR [ebx+0x13]
  416b29:	adc    bh,BYTE PTR [esi]
  416b2b:	out    0xd4,al
  416b2d:	sbb    al,0x43
  416b2f:	inc    ecx
  416b30:	ror    DWORD PTR [edx],0xec
  416b33:	push   ss
  416b34:	inc    esi
  416b35:	dec    ebp
  416b36:	inc    ecx
  416b37:	retf   0x90c0
  416b3a:	int3   
  416b3b:	push   ebp
  416b3c:	cmp    eax,0x6d99ca6d
  416b41:	aas    
  416b42:	sbb    DWORD PTR [esp+ebx*4-0x34ec5521],edx
  416b49:	mov    eax,ds:0x297dc357
  416b4e:	sbb    edi,DWORD PTR [ebp-0x25]
  416b51:	hlt    
  416b52:	push   edx
  416b53:	pop    esp
  416b54:	mov    ebx,0xcd55186e
  416b59:	arpl   WORD PTR ds:0x5254b653,cx
  416b5f:	sbb    edi,ebp
  416b61:	retf   0x3e97
  416b64:	push   0xd1a77b85
  416b69:	fbstp  TBYTE PTR [edi-0x710877d8]
  416b6f:	bound  ebp,QWORD PTR [edx+0x52a9bef9]
  416b75:	pop    ebp
  416b76:	and    eax,0x26023bed
  416b7b:	test   eax,0x84cb9685
  416b80:	into   
  416b81:	aas    
  416b82:	adc    DWORD PTR [ebx],edi
  416b84:	les    edx,FWORD PTR [ebp+0x29]
  416b87:	test   DWORD PTR [ecx-0x547ca2a],edx
  416b8d:	push   ss
  416b8e:	sub    eax,0xa94163cd
  416b93:	jmp    FWORD PTR [edx-0xde75792]
  416b99:	ins    BYTE PTR es:[edi],dx
  416b9a:	pop    esi
  416b9b:	mov    ebp,0xfc2d77a
  416ba0:	inc    ecx
  416ba1:	pushf  
  416ba2:	mov    eax,ds:0x1370ffc6
  416ba7:	ins    BYTE PTR es:[edi],dx
  416ba8:	add    DWORD PTR [esi+0x2c],ebx
  416bab:	aas    
  416bac:	lahf   
  416bad:	das    
  416bae:	and    esp,edi
  416bb0:	mov    edx,DWORD PTR [ebp+0x7df8190a]
  416bb6:	retf   
  416bb7:	js     0x416bbd
  416bb9:	add    ah,BYTE PTR [esi]
  416bbb:	(bad)  [edx+0x33]
  416bbe:	cs mov eax,0xa6986d5f
  416bc4:	jmp    0xc5b50867
  416bc9:	jmp    0x7ae784e4
  416bce:	xor    ecx,DWORD PTR [edx+edx*8+0x1e5dadd4]
  416bd5:	jmp    0x416b8f
  416bd7:	mov    al,ds:0xf7872cd3
  416bdc:	push   edi
  416bdd:	test   DWORD PTR [edi-0x25],eax
  416be0:	and    DWORD PTR [eax],0xffffffea
  416be3:	jnp    0x416c4b
  416be5:	stc    
  416be6:	cmp    ebx,ebp
  416be8:	cdq    
  416be9:	(bad)  [ecx]
  416beb:	mov    ebx,?
  416bed:	les    ebx,FWORD PTR [ebx]
  416bef:	adc    BYTE PTR [eax+esi*8],cl
  416bf2:	gs push 0xfbab78b7
  416bf8:	dec    ebx
  416bf9:	das    
  416bfa:	push   0xfffffffc
  416bfc:	addr16 retf 0x9fd2
  416c00:	push   ebp
  416c01:	out    dx,eax
  416c02:	push   esp
  416c03:	sub    edi,DWORD PTR [esi-0xc]
  416c06:	(bad)
  416c09:	(bad)  
  416c0b:	xchg   ecx,eax
  416c0c:	or     al,0x0
  416c0e:	lods   eax,DWORD PTR ds:[esi]
  416c0f:	stos   DWORD PTR es:[edi],eax
  416c10:	sub    BYTE PTR [edx+0x2b],dh
  416c13:	pop    ebp
  416c14:	jb     0x416c2c
  416c16:	mov    ecx,0xfa748816
  416c1b:	lock jmp 0x4d18:0xdc24add0
  416c23:	mov    ah,0x28
  416c25:	xchg   ecx,eax
  416c26:	retf   0x12a4
  416c29:	push   0x73
  416c2b:	or     esi,ebx
  416c2d:	scas   al,BYTE PTR es:[edi]
  416c2e:	pop    eax
  416c2f:	mov    WORD PTR [ecx],fs
  416c31:	jbe    0x416bdb
  416c33:	pop    edi
  416c34:	push   esp
  416c35:	arpl   WORD PTR [edi],cx
  416c37:	cld    
  416c38:	or     BYTE PTR [edi+0x1d1e9b8e],dl
  416c3e:	inc    esi
  416c3f:	inc    esp
  416c40:	imul   eax,DWORD PTR [esi-0x661d2939],0x549163cd
  416c4a:	mov    ebx,0x8fc7a9d6
  416c4f:	inc    ebx
  416c50:	add    BYTE PTR [di-0x19df],0x1
  416c56:	in     al,dx
  416c57:	(bad)  
  416c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c59:	sub    bh,BYTE PTR [edi-0x5]
  416c5c:	imul   eax,DWORD PTR [esi+eax*2+0x23ec5ba3],0x7f
  416c64:	push   eax
  416c65:	jmp    0x416c2d
  416c67:	pop    edi
  416c68:	mov    ecx,0x68ea98db
  416c6d:	jmp    0xa45:0x5e98ac2d
  416c74:	test   al,0xcc
  416c76:	add    BYTE PTR [esp+ebp*4+0x42e51afd],0x51
  416c7e:	mov    edi,DWORD PTR [edi]
  416c80:	sbb    eax,DWORD PTR [esi]
  416c82:	pop    ds
  416c83:	repnz fst DWORD PTR [esi+0x3c]
  416c87:	mov    dl,BYTE PTR [ecx-0x226c3aef]
  416c8d:	jo     0x416c8d
  416c8f:	stc    
  416c90:	test   DWORD PTR [eax],ecx
  416c92:	mov    eax,0x317a5e13
  416c97:	mov    ss,WORD PTR [edx-0x34]
  416c9a:	enter  0x7364,0x27
  416c9e:	icebp  
  416c9f:	jo     0x416cea
  416ca1:	mov    DWORD PTR [ebp-0x44],esp
  416ca4:	push   0x7a
  416ca6:	gs adc cl,dh
  416ca9:	fucomip st,st(5)
  416cab:	in     eax,dx
  416cac:	ror    DWORD PTR [edx-0x2d1d9258],0xb0
  416cb3:	shl    ecx,0xa8
  416cb6:	jae    0x416c8e
  416cb8:	pop    ebx
  416cb9:	sbb    al,0xe4
  416cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cbc:	pop    ss
  416cbd:	sbb    BYTE PTR [edi-0x42],ah
  416cc0:	icebp  
  416cc1:	adc    edi,DWORD PTR [edx+0x2a6dd9da]
  416cc7:	lods   al,BYTE PTR ds:[esi]
  416cc8:	scas   eax,DWORD PTR es:[edi]
  416cc9:	lds    esp,FWORD PTR [edi+esi*8]
  416ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ccd:	(bad)  
  416cce:	sbb    BYTE PTR [esi],bl
  416cd0:	pop    es
  416cd1:	adc    BYTE PTR [ebx],bl
  416cd3:	xchg   ecx,eax
  416cd4:	in     eax,dx
  416cd5:	sub    edx,DWORD PTR [ebx+ebp*2+0x141d1185]
  416cdc:	in     al,0x78
  416cde:	mov    ds:0xa02f645,al
  416ce3:	mov    ah,0x3e
  416ce6:	repz js 0x416d57
  416ce9:	aas    
  416cea:	dec    eax
  416ceb:	mov    eax,ds:0x22a1c09
  416cf0:	or     al,0x9e
  416cf2:	inc    ecx
  416cf3:	add    al,al
  416cf5:	imul   ebx,DWORD PTR [esi-0x4],0x6d
  416cf9:	inc    edx
  416cfa:	(bad)  [edi+0x4f2a0f4a]
  416d00:	jnp    0x416cbd
  416d02:	mov    ds:0xf263efba,al
  416d07:	mov    al,0x6a
  416d09:	retf   0x66cd
  416d0c:	cld    
  416d0d:	mov    edi,0x41e30aec
  416d12:	es pop ss
  416d14:	push   0xffffffc8
  416d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d17:	sub    edx,ebp
  416d19:	cmp    dl,BYTE PTR [ebp-0x38]
  416d1c:	setae  BYTE PTR [ecx-0x15]
  416d20:	and    DWORD PTR [esi],ebx
  416d22:	pop    edx
  416d23:	mov    ds:0x8c90a06a,eax
  416d28:	cmp    ch,ah
  416d2a:	loop   0x416d1e
  416d2c:	jge    0x416d39
  416d2e:	dec    ecx
  416d2f:	jbe    0x416d8e
  416d31:	cli    
  416d32:	or     DWORD PTR [edx-0x5],ebp
  416d35:	jmp    0x416cfe
  416d37:	mov    ch,0x73
  416d39:	ret    0xf66e
  416d3c:	test   BYTE PTR [ebx],bl
  416d3e:	inc    esi
  416d3f:	ja     0x416cc7
  416d41:	pop    ds
  416d42:	add    eax,0xd5c7752a
  416d47:	sub    al,0x25
  416d49:	jae    0x416d02
  416d4b:	lea    edi,[edx-0x5c8985cd]
  416d51:	ds mov es,ebx
  416d54:	dec    esi
  416d55:	gs aaa 
  416d57:	lahf   
  416d58:	add    DWORD PTR [eax],ecx
  416d5a:	outs   dx,BYTE PTR ds:[esi]
  416d5b:	mov    ch,0x70
  416d5d:	mov    edx,0x795bddd4
  416d62:	lods   al,BYTE PTR ds:[esi]
  416d63:	pop    edx
  416d64:	sahf   
  416d65:	xor    al,0x5f
  416d67:	lods   eax,DWORD PTR ds:[esi]
  416d68:	push   edi
  416d69:	inc    esi
  416d6a:	cmp    DWORD PTR [edx-0x68],0x66dfb369
  416d71:	lds    eax,FWORD PTR [esi+0x19]
  416d74:	mov    ebp,0x56438a4e
  416d79:	dec    edi
  416d7a:	inc    esp
  416d7b:	pop    esp
  416d7c:	xor    edi,edx
  416d7e:	ret    
  416d7f:	fisub  DWORD PTR [esi+edx*2-0x70]
  416d83:	jge    0x416dd7
  416d85:	mov    esp,0x2a251184
  416d8a:	fdiv   st(1),st
  416d8c:	add    al,0x89
  416d8e:	jmp    0xd22d:0x8891932b
  416d95:	mov    ch,0x72
  416d97:	shr    BYTE PTR [esi-0x7d],1
  416d9a:	fwait
  416d9b:	into   
  416d9c:	jnp    0x416d4d
  416d9e:	adc    al,0xcf
  416da0:	aad    0xaf
  416da2:	inc    ebp
  416da3:	add    BYTE PTR [edx*1+0x28aa8f6c],cl
  416daa:	add    al,0x33
  416dac:	mov    ebp,0x14bf387d
  416db1:	inc    eax
  416db2:	xchg   ebx,eax
  416db3:	test   eax,0x232aa406
  416db8:	mov    ebp,edi
  416dba:	mov    ah,BYTE PTR [ecx-0x4b]
  416dbd:	or     ah,ah
  416dbf:	xchg   edx,eax
  416dc0:	inc    eax
  416dc1:	sahf   
  416dc2:	jo     0x416d6a
  416dc4:	inc    ecx
  416dc5:	popa   
  416dc6:	nop
  416dc7:	xchg   esp,eax
  416dc8:	adc    dl,ah
  416dca:	retf   
  416dcb:	mov    esi,ss
  416dcd:	dec    ebx
  416dce:	sub    cl,cl
  416dd0:	inc    edx
  416dd1:	stc    
  416dd2:	cmp    dl,BYTE PTR [ecx+0x79]
  416dd5:	pop    esp
  416dd6:	into   
  416dd7:	push   edi
  416dd8:	test   eax,0xbc609ba5
  416ddd:	pop    ss
  416dde:	mov    ch,0xd7
  416de0:	dec    ebp
  416de1:	lods   eax,DWORD PTR ds:[esi]
  416de2:	lahf   
  416de3:	and    DWORD PTR [ebx+0x42],esi
  416de6:	pop    ebx
  416de7:	jno    0x416dc4
  416de9:	xchg   DWORD PTR [edx+0x7],ebp
  416dec:	sbb    ch,cl
  416dee:	sbb    dh,BYTE PTR [eax+ebx*1-0x3a31850b]
  416df5:	mov    DWORD PTR ds:0x8e61852b,ecx
  416dfb:	xor    ch,cl
  416dfd:	mov    ebx,0x8a761790
  416e02:	cmp    BYTE PTR [edi+0x46],bh
  416e05:	js     0x416e44
  416e07:	outs   dx,BYTE PTR ds:[esi]
  416e08:	jp     0x416e18
  416e0a:	xchg   esp,eax
  416e0b:	and    al,0xeb
  416e0d:	inc    ebp
  416e0e:	inc    edi
  416e0f:	pop    ebx
  416e10:	xor    BYTE PTR [eax+0x32],dh
  416e13:	push   ss
  416e14:	add    eax,0x647b1527
  416e19:	into   
  416e1a:	lock jle 0x416db6
  416e1d:	icebp  
  416e1e:	es inc ecx
  416e20:	jl     0x416e0d
  416e22:	push   eax
  416e23:	mov    eax,0xf09112bf
  416e28:	add    ebx,ecx
  416e2a:	lods   eax,DWORD PTR ds:[esi]
  416e2b:	mov    esp,DWORD PTR [ecx]
  416e2d:	fdiv   DWORD PTR ds:0x2f2d557f
  416e33:	lods   al,BYTE PTR ds:[esi]
  416e34:	mov    bl,0xf8
  416e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e37:	sbb    DWORD PTR [edx-0x28],esi
  416e3a:	stos   DWORD PTR es:[edi],eax
  416e3b:	sbb    al,0x0
  416e3d:	ins    DWORD PTR es:[edi],dx
  416e3e:	pushf  
  416e3f:	jmp    0x416ead
  416e41:	je     0x416e36
  416e43:	je     0x416ea6
  416e45:	ins    DWORD PTR es:[edi],dx
  416e46:	xchg   ecx,eax
  416e47:	xchg   ebx,eax
  416e48:	aad    0x5b
  416e4a:	es scas eax,DWORD PTR es:[edi]
  416e4c:	in     eax,0xf3
  416e4e:	(bad)  
  416e4f:	cld    
  416e50:	cmp    DWORD PTR [ebx+edi*1+0x37846b72],ecx
  416e57:	adc    eax,0xe6cefe6b
  416e5c:	push   eax
  416e5d:	jb     0x416df4
  416e5f:	popf   
  416e60:	div    DWORD PTR [ebp+edx*4-0x22]
  416e64:	mov    ss,WORD PTR [edx]
  416e66:	and    al,BYTE PTR [ebp-0x45]
  416e69:	inc    ecx
  416e6a:	sbb    eax,0xe38e4095
  416e6f:	sub    BYTE PTR [edi],dl
  416e71:	(bad)  
  416e72:	jecxz  0x416e42
  416e74:	nop
  416e75:	fldz   
  416e77:	or     BYTE PTR [edi],bh
  416e79:	sub    BYTE PTR [ecx+0x7b4fbc47],ch
  416e7f:	mov    cl,0xb6
  416e81:	bound  esi,QWORD PTR [esi+esi*2-0x41]
  416e85:	jnp    0x416e4a
  416e87:	xchg   esi,eax
  416e88:	mov    edx,0x1b124e24
  416e8d:	test   DWORD PTR [ecx+0x15f2fe0a],ebx
  416e93:	cdq    
  416e94:	push   0x83e36cd4
  416e99:	jnp    0x416e49
  416e9b:	out    dx,al
  416e9c:	cmp    bl,ah
  416e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e9f:	mov    edi,ebp
  416ea1:	pushf  
  416ea2:	cs inc esi
  416ea4:	dec    ebx
  416ea5:	jbe    0x416e5b
  416ea7:	seto   BYTE PTR [edi-0x27]
  416eab:	nop
  416eac:	icebp  
  416ead:	mov    ch,0xb6
  416eaf:	ds sbb al,0x19
  416eb2:	enter  0x99a,0xde
  416eb6:	rol    BYTE PTR [ecx-0x6a],1
  416eb9:	imul   esp,DWORD PTR [eax],0xb537fe4e
  416ebf:	outs   dx,DWORD PTR ds:[esi]
  416ec0:	sbb    dl,bl
  416ec2:	call   0xd6aadbfb
  416ec7:	inc    edx
  416ec8:	out    dx,eax
  416ec9:	cmp    al,0x6b
  416ecb:	(bad)  
  416ecc:	push   ds
  416ecd:	daa    
  416ece:	mov    eax,ds:0x63dde972
  416ed3:	cmp    eax,0x3caf787b
  416ed8:	sub    al,0x0
  416eda:	add    al,0xcc
  416edc:	mov    ch,0xea
  416ede:	out    dx,al
  416edf:	mov    bh,0x31
  416ee1:	push   esp
  416ee2:	add    ebx,DWORD PTR [esi]
  416ee4:	xchg   DWORD PTR [ebx-0xb],ebp
  416ee7:	add    ch,BYTE PTR [ecx]
  416ee9:	jge    0x416f46
  416eeb:	test   BYTE PTR [edx+0x2],bh
  416eee:	pop    ss
  416eef:	frstor [ecx+esi*2]
  416ef2:	ror    DWORD PTR [ebp-0x29],cl
  416ef5:	sub    DWORD PTR ds:0xdd387951,ecx
  416efb:	inc    esi
  416efc:	push   eax
  416efd:	push   ds
  416efe:	jb     0x416ee6
  416f00:	ss inc edi
  416f02:	test   BYTE PTR [edx],al
  416f04:	or     BYTE PTR [edx+ebx*2+0x677682ef],cl
  416f0b:	or     esp,esi
  416f0d:	xor    esp,ebp
  416f0f:	mov    edi,gs
  416f11:	enter  0xc2e6,0x2
  416f15:	std    
  416f16:	ja     0x416f6f
  416f18:	pop    ss
  416f19:	cwde   
  416f1a:	or     DWORD PTR [ebx],edi
  416f1c:	or     ebp,ecx
  416f1e:	cmp    edx,DWORD PTR [esi]
  416f20:	dec    ebp
  416f21:	or     esp,esp
  416f23:	(bad)  
  416f25:	lea    esp,[edx-0x6699ffd5]
  416f2b:	or     cl,ch
  416f2d:	pop    edx
  416f2e:	mov    ds:0x14eb92dd,eax
  416f33:	cmp    bl,BYTE PTR [edi-0x15ef131b]
  416f39:	xor    al,0xce
  416f3b:	ror    esp,1
  416f3d:	and    DWORD PTR [ecx+0x4a],edx
  416f40:	aas    
  416f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f42:	out    dx,eax
  416f43:	jge    0x416f6f
  416f45:	bound  edi,QWORD PTR [ebx-0x66db6801]
  416f4b:	sbb    bh,BYTE PTR [eax]
  416f4d:	imul   ebx,DWORD PTR [edx+edi*4-0x27f14243],0xdec2e976
  416f58:	fild   QWORD PTR [edi+0x687e3da0]
  416f5e:	or     eax,DWORD PTR [ebx+0x271e5c33]
  416f64:	cli    
  416f65:	mov    esi,0x2ac21526
  416f6a:	sar    DWORD PTR [ecx],1
  416f6c:	sub    ah,BYTE PTR [ecx]
  416f6e:	and    cl,BYTE PTR [edx+edi*4]
  416f71:	fidiv  DWORD PTR [ebp+0x2970168a]
  416f77:	outs   dx,DWORD PTR ds:[esi]
  416f78:	mov    al,0xaf
  416f7a:	fisttp WORD PTR [edi+esi*8]
  416f7d:	sar    DWORD PTR [edx+0x51],cl
  416f80:	xchg   esp,eax
  416f81:	dec    edx
  416f82:	inc    ebx
  416f83:	test   dh,0x2b
  416f86:	gs stos BYTE PTR es:[edi],al
  416f88:	inc    edi
  416f89:	les    esi,FWORD PTR [eax+0x1e]
  416f8c:	aam    0x67
  416f8e:	clc    
  416f8f:	dec    ebp
  416f90:	xor    BYTE PTR [ecx-0x17d01d86],0x15
  416f97:	dec    eax
  416f98:	lods   eax,DWORD PTR ds:[esi]
  416f99:	and    BYTE PTR [ebp+0x15],ah
  416f9c:	jp     0x416ff6
  416f9e:	mov    bh,0xfe
  416fa0:	pop    esi
  416fa1:	pop    esp
  416fa2:	fisub  DWORD PTR [ebx+0x1f]
  416fa5:	lea    ebp,[ebx+0x6d775c2f]
  416fab:	xchg   ebp,eax
  416fac:	or     eax,0x265658e5
  416fb1:	xchg   DWORD PTR [edx+0x1],esi
  416fb4:	mov    eax,0x31a71347
  416fb9:	scas   eax,DWORD PTR es:[edi]
  416fba:	repnz cmp DWORD PTR [ecx],ebp
  416fbd:	adc    esp,DWORD PTR [eax]
  416fbf:	inc    ebx
  416fc0:	cli    
  416fc1:	imul   ebx,DWORD PTR ds:0x8665d760,0xffffffce
  416fc8:	push   ebx
  416fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fca:	push   ds
  416fcb:	cmp    DWORD PTR [edi-0x46f1adf8],edx
  416fd1:	push   0x6
  416fd3:	sub    DWORD PTR [ebx],0x45d4bdd5
  416fd9:	inc    esi
  416fda:	add    al,0xd6
  416fdc:	mov    esp,0x6219b42a
  416fe1:	ds fs je 0x416ffd
  416fe5:	cwde   
  416fe6:	fwait
  416fe7:	xchg   esi,eax
  416fe8:	adc    BYTE PTR [ebx+0xe8b1080],ah
  416fee:	inc    eax
  416fef:	or     eax,0x8d27289f
  416ff4:	sbb    al,0xa3
  416ff6:	xor    BYTE PTR [edi*8-0x45a1ee7b],ah
  416ffd:	jno    0x416f82
  416fff:	xor    BYTE PTR [ecx+eiz*2+0x61],bl
  417003:	cs test al,0xfa
  417006:	push   edi
  417007:	jnp    0x416fae
  417009:	shr    DWORD PTR ds:0xef143fee,cl
  41700f:	int3   
  417010:	xor    BYTE PTR [esi],cl
  417012:	out    0xaf,eax
  417014:	cdq    
  417015:	fwait
  417016:	cmc    
  417017:	in     eax,dx
  417018:	dec    ebp
  417019:	lods   al,BYTE PTR ds:[esi]
  41701a:	xchg   ebp,eax
  41701b:	jmp    0x7de0782e
  417020:	xchg   ecx,eax
  417021:	push   ebx
  417022:	jae    0x41700b
  417024:	lock rol DWORD PTR [edi-0x4806d97e],1
  41702b:	in     eax,0x0
  41702d:	sahf   
  41702e:	(bad)  
  41702f:	sahf   
  417030:	inc    esi
  417032:	cmp    DWORD PTR ds:0x5aaf6c5f,0xffffffea
  417039:	enter  0xd062,0xc9
  41703d:	lods   al,BYTE PTR ds:[esi]
  41703e:	out    0xcd,al
  417040:	aaa    
  417041:	pop    edx
  417042:	inc    edi
  417043:	mov    ah,0xf0
  417045:	scas   al,BYTE PTR es:[edi]
  417046:	jbe    0x417065
  417048:	dec    DWORD PTR [edi+0x6fa89013]
  41704e:	das    
  41704f:	es stos BYTE PTR es:[edi],al
  417051:	rol    bh,1
  417053:	iret   
  417054:	mov    ds,WORD PTR [eax-0x57]
  417057:	sub    ah,BYTE PTR [edi+0x6e]
  41705a:	adc    esi,DWORD PTR [eax+0x3ca6d6de]
  417060:	popa   
  417061:	xor    ebp,DWORD PTR [ecx+0x2f203528]
  417067:	mov    cl,cl
  417069:	and    al,0x44
  41706b:	jno    0x417036
  41706d:	xor    ecx,DWORD PTR [esi]
  41706f:	pop    ecx
  417070:	pushf  
  417071:	or     dh,al
  417073:	xlat   BYTE PTR ds:[ebx]
  417074:	xchg   edx,eax
  417075:	cmp    esp,ecx
  417077:	jns    0x417093
  417079:	call   0x1d7f2b1d
  41707e:	xor    al,0x56
  417080:	or     BYTE PTR [ecx-0x5e2efd6],0xad
  417087:	ja     0x417028
  417089:	sub    edx,DWORD PTR [esp+edx*4-0x377a4714]
  417090:	adc    eax,0x80faea6f
  417095:	gs pop es
  417097:	mov    edx,0xb474cf30
  41709c:	aas    
  41709d:	addr16 int 0xcb
  4170a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170a1:	aaa    
  4170a2:	pop    edx
  4170a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170a4:	and    al,0x8b
  4170a6:	xchg   ebx,eax
  4170a7:	and    BYTE PTR [ebx],ch
  4170a9:	arpl   WORD PTR [eax+0x19fa190],bp
  4170af:	sahf   
  4170b0:	cmp    BYTE PTR [ecx-0x59a9fd12],0xf7
  4170b7:	loop   0x4170fa
  4170b9:	je     0x4170dc
  4170bb:	rcl    BYTE PTR [ebp-0xd],0xd9
  4170bf:	add    ecx,DWORD PTR [ecx+0x3ae56236]
  4170c5:	hlt    
  4170c6:	add    DWORD PTR [edi],esp
  4170c8:	scas   eax,DWORD PTR es:[edi]
  4170c9:	call   FWORD PTR [ecx]
  4170cb:	mov    al,ds:0xc8c3e873
  4170d0:	fwait
  4170d1:	xor    al,0xc
  4170d3:	pop    ecx
  4170d4:	sub    ebx,DWORD PTR [ebx+0x37]
  4170d7:	jae    0x4170ea
  4170d9:	adc    dh,BYTE PTR ds:0xd3c36bcb
  4170df:	sbb    al,0xc4
  4170e1:	mov    fs,WORD PTR [eax-0x2b]
  4170e4:	push   ebx
  4170e5:	or     al,0x92
  4170e7:	scas   eax,DWORD PTR es:[edi]
  4170e8:	ror    DWORD PTR [edi-0x3c],1
  4170eb:	cmp    DWORD PTR [edx+0x70],ebp
  4170ee:	(bad)  
  4170ef:	sbb    BYTE PTR [esi-0x7b22f1c2],cl
  4170f5:	and    al,0x9c
  4170f7:	fsub   st(4),st
  4170f9:	mov    ebp,0x8a543865
  4170fe:	pop    esi
  4170ff:	jp     0x417149
  417101:	cwde   
  417102:	mov    ds:0x228593f4,al
  417107:	jge    0x4170cf
  417109:	gs iret 
  41710b:	inc    eax
  41710c:	add    eax,0x48f627de
  417111:	call   0x22b7:0xd25dce1e
  417118:	cmp    esi,DWORD PTR [edi+ebp*1-0x64]
  41711c:	(bad)  
  41711d:	into   
  41711e:	mov    eax,0xd0c2b192
  417123:	jl     0x41718e
  417125:	enter  0xc8ba,0x63
  417129:	jmp    0x4170dc
  41712b:	popf   
  41712c:	arpl   si,di
  41712e:	out    0xc1,al
  417130:	add    BYTE PTR [ebp+0x6ff678ee],dl
  417136:	inc    ebx
  417137:	dec    edx
  417138:	adc    al,0xbe
  41713a:	cmc    
  41713b:	in     al,dx
  41713c:	pop    ss
  41713d:	nop
  41713e:	xchg   esp,eax
  41713f:	sti    
  417140:	repnz push ss
  417142:	and    eax,0xd5b0edbd
  417147:	lods   al,BYTE PTR ds:[esi]
  417148:	adc    BYTE PTR [ebp+0x44],ah
  41714b:	cmp    DWORD PTR [edi],0xffffffd8
  41714e:	outs   dx,BYTE PTR ds:[esi]
  41714f:	push   esi
  417150:	pop    edx
  417151:	push   ds
  417152:	mov    eax,ds:0x4ab70e98
  417157:	jb     0x41715a
  417159:	retf   
  41715a:	in     al,0xc3
  41715c:	inc    esi
  41715d:	sub    BYTE PTR [esi-0x3d4aa975],dh
  417163:	mov    eax,ds:0x5d4395e1
  417168:	mov    ds:0x9b494885,al
  41716d:	add    dh,bh
  41716f:	pop    edi
  417170:	inc    esi
  417171:	sbb    al,0xed
  417173:	dec    ecx
  417174:	dec    edi
  417175:	xchg   edi,eax
  417176:	sub    ch,ch
  417178:	into   
  417179:	sbb    esp,edx
  41717b:	add    eax,0x18e5e85e
  417180:	repz sub al,0xb5
  417183:	cmp    DWORD PTR [edx+0x3287bb83],0x89a7c261
  41718d:	outs   dx,BYTE PTR ds:[esi]
  41718e:	adc    ebp,DWORD PTR [eax+0x47]
  417191:	pop    eax
  417192:	neg    DWORD PTR [esi+0x72]
  417195:	pop    esi
  417196:	test   al,0xc8
  417198:	pop    ss
  417199:	cmp    al,0x34
  41719b:	pop    esp
  41719c:	mov    ds:0x677a2838,al
  4171a1:	lods   al,BYTE PTR ds:[esi]
  4171a2:	mov    ebp,0x6a68135d
  4171a7:	or     al,0x5c
  4171a9:	jge    0x41715b
  4171ab:	dec    eax
  4171ac:	call   0xb6d3:0x85ae1f99
  4171b3:	adc    al,0x97
  4171b5:	stos   BYTE PTR es:[edi],al
  4171b6:	inc    ecx
  4171b7:	sub    BYTE PTR [ebx],al
  4171b9:	add    al,0xf6
  4171bb:	cli    
  4171bc:	mov    dl,0x1d
  4171be:	(bad)  
  4171bf:	mov    edx,0x35064970
  4171c4:	xchg   ebp,eax
  4171c5:	jae    0x4171a8
  4171c7:	dec    esi
  4171c8:	into   
  4171c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ca:	into   
  4171cb:	ss pop ss
  4171cd:	xor    edi,esi
  4171cf:	in     eax,dx
  4171d0:	adc    DWORD PTR ds:0x1c178257,esi
  4171d6:	sti    
  4171d7:	clc    
  4171d8:	scas   al,BYTE PTR es:[edi]
  4171d9:	lds    esi,FWORD PTR [eax]
  4171db:	pop    edx
  4171dc:	add    BYTE PTR ds:0x2ba2583e,dh
  4171e2:	mov    ecx,gs
  4171e4:	fdivr  DWORD PTR [edx-0x337aa491]
  4171ea:	and    esp,DWORD PTR [ebx]
  4171ec:	rcl    DWORD PTR [ebx],1
  4171ee:	jg     0x417236
  4171f0:	es sub dh,ah
  4171f3:	push   eax
  4171f4:	add    ebx,DWORD PTR [ecx-0x74ddd3ef]
  4171fa:	not    DWORD PTR [eax+edi*1-0x16]
  4171fe:	or     BYTE PTR [edx+0x69],0x3c
  417202:	sahf   
  417203:	push   ebx
  417204:	mov    cl,0xc6
  417206:	xchg   ebp,esp
  417208:	ss mov bl,0xfe
  41720b:	jl     0x4171b7
  41720d:	sub    cl,bh
  41720f:	push   ebp
  417210:	in     al,0x80
  417212:	mov    eax,ds:0x853ddccb
  417217:	loop   0x417264
  417219:	out    0x24,eax
  41721b:	push   ss
  41721c:	inc    edi
  41721d:	mov    al,ds:0x3cb29576
  417222:	je     0x417226
  417224:	cmp    DWORD PTR [edi-0x5f1ef13f],0xd9c16d8f
  41722e:	gs push esi
  417230:	or     DWORD PTR [edx],esi
  417232:	shr    ebp,1
  417234:	sar    BYTE PTR [edi+0x71e3fc95],1
  41723a:	jae    0x417279
  41723c:	aas    
  41723d:	mov    edi,0x23deffff
  417242:	mov    ds:0xa6409202,eax
  417247:	adc    BYTE PTR [edx-0x6b257db4],cl
  41724d:	adc    eax,0xed3fe07c
  417252:	sbb    DWORD PTR [ecx],esp
  417254:	cli    
  417255:	fld    TBYTE PTR [esi]
  417257:	cs inc eax
  417259:	pop    ds
  41725a:	cmp    al,0x76
  41725c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41725e:	arpl   WORD PTR [ebp+eax*4+0x757a1b4b],bp
  417265:	jg     0x4172e6
  417267:	test   eax,0xc67bf598
  41726c:	gs js  0x4172e2
  41726f:	xor    DWORD PTR [eax-0x44],ebx
  417272:	xchg   edx,eax
  417273:	mov    dh,0x1c
  417275:	mov    ebp,0xf29f481e
  41727a:	sahf   
  41727b:	lods   eax,DWORD PTR ds:[esi]
  41727c:	mov    ecx,0xdd8edd21
  417281:	sbb    edi,DWORD PTR ds:0x15a891f9
  417287:	jmp    0x980f:0x8deee047
  41728e:	loop   0x417223
  417290:	rcl    BYTE PTR [edx],cl
  417292:	fdiv   st,st(3)
  417294:	push   edx
  417295:	mov    esp,0x5ca459cb
  41729a:	setbe  BYTE PTR [ecx]
  41729d:	sub    al,0x3e
  41729f:	or     al,0xa5
  4172a1:	imul   BYTE PTR [edx]
  4172a3:	xchg   DWORD PTR [edi-0x4d3a13c6],ebx
  4172a9:	cmp    al,0x89
  4172ab:	outs   dx,DWORD PTR ds:[esi]
  4172ac:	sbb    eax,0xdde51bd8
  4172b1:	sbb    eax,0x3ddf7ca
  4172b6:	push   ss
  4172b7:	add    eax,0xbdf6a301
  4172bc:	push   ecx
  4172bd:	(bad)  
  4172be:	pop    ebx
  4172bf:	(bad)
  4172c2:	jb     0x41728f
  4172c4:	aad    0x73
  4172c6:	xor    BYTE PTR [eax],0x23
  4172c9:	push   ebp
  4172ca:	ror    ch,1
  4172cc:	inc    ecx
  4172cd:	and    al,0xdd
  4172cf:	mov    cl,al
  4172d1:	int    0x34
  4172d3:	mov    cl,0x26
  4172d5:	(bad)
  4172d9:	dec    edi
  4172da:	sub    BYTE PTR es:[ecx],bh
  4172dd:	mov    ebp,0x35cd7021
  4172e2:	es enter 0xe579,0x8e
  4172e7:	loop   0x417348
  4172e9:	jmp    0x9722:0x9f521626
  4172f0:	xchg   edx,eax
  4172f1:	in     eax,0x95
  4172f3:	loopne 0x417314
  4172f5:	mov    esi,0xafde108d
  4172fa:	jns    0x417288
  4172fc:	test   al,0xfa
  4172fe:	xchg   esi,eax
  4172ff:	add    eax,0x27eecf87
  417304:	xor    dl,BYTE PTR [eax]
  417306:	sub    bh,BYTE PTR [ebx+0x379d155b]
  41730c:	pop    esp
  41730d:	add    BYTE PTR ds:0x6153a511,ah
  417313:	jl     0x417390
  417315:	addr16 mov eax,ds:0xa33b
  417319:	(bad)  
  41731a:	push   esi
  41731b:	cwde   
  41731c:	push   0x324fb25d
  417321:	ja     0x41739d
  417323:	cdq    
  417324:	inc    edx
  417325:	or     edx,DWORD PTR ds:[ecx-0x34]
  417329:	jecxz  0x4172cb
  41732b:	jno    0x417380
  41732d:	mov    ds:0x18b160cf,al
  417332:	popf   
  417333:	adc    ah,BYTE PTR [edx-0x2b]
  417336:	ss scas al,BYTE PTR es:[edi]
  417338:	push   ebx
  417339:	(bad)  
  41733a:	inc    ebp
  41733b:	xchg   edx,eax
  41733c:	or     eax,0x6c68fca0
  417341:	out    dx,eax
  417342:	fimul  WORD PTR [edi+0x40]
  417345:	nop
  417346:	pop    ecx
  417347:	sub    al,0x6d
  417349:	aam    0x31
  41734b:	adc    BYTE PTR [esi+0x46a84e5],bl
  417351:	mov    dh,BYTE PTR [edx+0x20c2262c]
  417357:	ror    BYTE PTR [ecx+0x25],cl
  41735a:	cmp    ebx,DWORD PTR [ecx]
  41735c:	neg    bl
  41735e:	in     al,dx
  41735f:	sbb    al,0x55
  417361:	cld    
  417362:	jno    0x4173be
  417364:	sub    al,0xe1
  417366:	mov    esp,0x31b7d57
  41736b:	xchg   BYTE PTR [edi+0x4d5d50cd],ah
  417371:	clc    
  417372:	imul   DWORD PTR [edi]
  417374:	add    eax,0x7221101c
  417379:	iret   
  41737a:	out    dx,eax
  41737b:	(bad)  
  41737c:	adc    ch,BYTE PTR [eax+0xc]
  41737f:	jecxz  0x417327
  417381:	push   ds
  417382:	lods   al,BYTE PTR ds:[esi]
  417383:	aam    0x8f
  417385:	aaa    
  417386:	fdivr  st(5),st
  417388:	mov    edi,0x44f4a7da
  41738d:	xor    BYTE PTR [ebp+0x23104230],bh
  417393:	les    edx,FWORD PTR [ecx-0x41]
  417396:	enter  0xbfed,0xc6
  41739a:	fst    QWORD PTR [eax-0x2f]
  41739d:	int3   
  41739e:	outs   dx,DWORD PTR ds:[esi]
  41739f:	mov    edi,0x11d9e67
  4173a4:	and    al,0x86
  4173a6:	pop    ebx
  4173a7:	data16 outs dx,BYTE PTR ds:[esi]
  4173a9:	aad    0xb
  4173ab:	inc    esi
  4173ac:	cmp    eax,0x181775bc
  4173b1:	lock pushf 
  4173b3:	inc    ebx
  4173b4:	stc    
  4173b5:	gs xor al,0xff
  4173b8:	repz jl 0x417389
  4173bb:	cmp    al,0x86
  4173bd:	xchg   ecx,eax
  4173be:	not    DWORD PTR [eax+0x3a]
  4173c1:	sahf   
  4173c2:	daa    
  4173c3:	pushf  
  4173c4:	mov    ds:0x7826d40,al
  4173c9:	jl     0x417361
  4173cb:	push   ebp
  4173cc:	jmp    0x41742e
  4173ce:	scas   al,BYTE PTR es:[edi]
  4173cf:	repnz lds ecx,FWORD PTR [edx+ebp*2+0x29]
  4173d4:	fidiv  WORD PTR [edx]
  4173d6:	sti    
  4173d7:	pop    ss
  4173d8:	(bad)  
  4173d9:	sbb    BYTE PTR [edi-0x7c80b128],ah
  4173df:	xor    DWORD PTR [edi+0x64],edi
  4173e2:	dec    esi
  4173e3:	xchg   edx,eax
  4173e4:	xor    cl,BYTE PTR ds:0xb6d60ff3
  4173ea:	or     al,0xb2
  4173ec:	mov    ds:0xfbc350ed,al
  4173f1:	imul   esp,DWORD PTR [ecx+0x71],0xffffffc5
  4173f5:	mov    bl,0x7
  4173f7:	jmp    0x4173d8
  4173f9:	xchg   edi,eax
  4173fa:	jg     0x417383
  4173fc:	rol    DWORD PTR [ebp-0x63],0x3c
  417400:	xchg   esi,eax
  417401:	das    
  417402:	ins    DWORD PTR es:[edi],dx
  417403:	sbb    bl,BYTE PTR [ecx-0x75]
  417406:	lahf   
  417407:	fcomp  DWORD PTR [esp+ebp*2-0x1b]
  41740b:	leave  
  41740c:	jmp    0xf22ba5a6
  417411:	fidivr WORD PTR [edx+0x324b8242]
  417417:	inc    ebp
  417418:	cdq    
  417419:	mov    cl,0x6b
  41741b:	mov    DWORD PTR ds:0x57fee8bb,edi
  417421:	mov    al,ds:0xe50cffaa
  417426:	and    dl,BYTE PTR [eax*2+0x32d8c4a1]
  41742d:	jae    0x417490
  41742f:	sbb    ah,BYTE PTR [esp+eax*8]
  417432:	push   0x34
  417434:	in     eax,0x6c
  417436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417437:	sbb    ch,BYTE PTR [esi-0x9104aa1]
  41743d:	adc    dl,ah
  41743f:	sub    eax,0x7dbed0ac
  417444:	(bad)  
  417445:	cmp    al,0x6a
  417447:	jb     0x417485
  417449:	cmc    
  41744a:	inc    ebp
  41744b:	loop   0x4174c2
  41744d:	pop    es
  41744e:	stos   BYTE PTR es:[edi],al
  41744f:	inc    ebp
  417450:	jo     0x4173f1
  417452:	inc    edi
  417453:	(bad)  
  417454:	jle    0x417446
  417456:	or     ebx,DWORD PTR [esi-0xd718b77]
  41745c:	popa   
  41745d:	inc    esi
  41745e:	mov    ebx,0xe250b6da
  417463:	(bad)  
  417464:	das    
  417465:	adc    ah,BYTE PTR [edi+0x735ef0e5]
  41746b:	sbb    bl,dl
  41746d:	jge    0x4174d9
  41746f:	pop    esi
  417470:	lods   al,BYTE PTR ds:[esi]
  417471:	shr    cl,cl
  417473:	fadd   DWORD PTR [esi+0x68]
  417476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417477:	sub    dl,0x23
  41747a:	mov    DWORD PTR [ebp-0xb],edi
  41747d:	xchg   esp,eax
  41747e:	dec    eax
  41747f:	sti    
  417480:	bound  edx,QWORD PTR [esi]
  417482:	fistp  WORD PTR [edi]
  417484:	xor    eax,0xd14ce70
  417489:	push   ebx
  41748a:	pushf  
  41748b:	out    dx,eax
  41748c:	adc    ch,BYTE PTR [esi]
  41748e:	hlt    
  41748f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417491:	sbb    dl,ch
  417493:	mov    ch,0xa2
  417495:	repz xchg esi,eax
  417497:	test   eax,0xff61041
  41749c:	out    dx,eax
  41749d:	cwde   
  41749e:	rcr    DWORD PTR [esi],1
  4174a0:	lds    eax,FWORD PTR [ebx]
  4174a2:	mov    al,ds:0x94522cc8
  4174a7:	mov    ecx,0xbe333a4b
  4174ac:	psadbw mm0,QWORD PTR [ebx]
  4174af:	out    dx,eax
  4174b0:	mov    WORD PTR [edi+0xa5c0f30],gs
  4174b6:	stc    
  4174b7:	mov    dh,0x85
  4174b9:	int3   
  4174ba:	lahf   
  4174bb:	adc    BYTE PTR [esi-0x5931fd89],0x13
  4174c2:	fiadd  WORD PTR [esi-0x1e5b544a]
  4174c8:	pop    ebx
  4174c9:	or     al,0x8f
  4174cb:	xchg   DWORD PTR [esi],ecx
  4174cd:	and    ecx,DWORD PTR [ebx-0x6ee19ff4]
  4174d3:	mov    ds:0xcd7cb476,al
  4174d8:	or     eax,0x50bf2b39
  4174dd:	hlt    
  4174de:	aad    0x8
  4174e0:	mov    eax,ds:0x6a457147
  4174e5:	jbe    0x41746b
  4174e7:	xor    dl,ah
  4174e9:	imul   ebp,edi,0x2e883b34
  4174ef:	sub    bh,BYTE PTR [eax+0x62]
  4174f2:	or     edi,DWORD PTR [eax]
  4174f4:	mov    bl,0xa6
  4174f6:	mov    ebx,0x4bd0d24a
  4174fb:	js     0x417569
  4174fd:	out    0xa,eax
  4174ff:	ins    DWORD PTR es:[edi],dx
  417500:	pop    es
  417501:	jle    0x41749f
  417503:	xchg   esp,eax
  417504:	out    0xaf,eax
  417506:	and    esi,DWORD PTR [ebx-0x12]
  417509:	cwde   
  41750a:	nop
  41750b:	test   BYTE PTR [edx+0x2d9dcc93],bh
  417511:	pushf  
  417512:	cwde   
  417513:	(bad)  
  417515:	sub    eax,0x92b4ab4b
  41751a:	xor    ah,BYTE PTR [ebp-0x34]
  41751d:	mov    al,0x29
  41751f:	js     0x417510
  417521:	loope  0x4174ed
  417523:	hlt    
  417524:	mov    esi,0x17e1d37a
  417529:	jp     0x41750e
  41752b:	cld    
  41752c:	add    ch,0xe4
  41752f:	xchg   DWORD PTR [edi-0x62a44b1c],ebx
  417535:	stos   DWORD PTR es:[edi],eax
  417536:	sub    edx,DWORD PTR [esi]
  417538:	gs xchg ecx,eax
  41753a:	out    dx,eax
  41753b:	push   ebx
  41753c:	xor    eax,0x11e1c5c9
  417541:	icebp  
  417542:	xor    DWORD PTR [esi+0x354026f1],ebx
  417548:	jnp    0x417546
  41754a:	fimul  WORD PTR es:[edx]
  41754d:	jl     0x4175a9
  41754f:	dec    edx
  417550:	fsubr  DWORD PTR ds:0x4d2b6dd2
  417556:	xchg   ah,dh
  417558:	mov    edx,ebp
  41755a:	mov    bl,0x99
  41755c:	call   0x5888:0xf636acf4
  417563:	ret    0xaaea
  417566:	call   0x4f46c7bc
  41756b:	jl     0x417567
  41756d:	fist   DWORD PTR ds:0xbdcded8d
  417573:	or     DWORD PTR [esi],ebx
  417575:	jb     0x417524
  417577:	dec    ebp
  417578:	mov    ebp,edi
  41757a:	cwde   
  41757b:	(bad)  
  41757c:	jno    0x417523
  41757e:	sub    eax,0x4e58bf5c
  417583:	pop    es
  417584:	out    0xd2,al
  417586:	cmp    al,0xd8
  417588:	into   
  417589:	je     0x4175dd
  41758b:	cdq    
  41758c:	out    0x3b,al
  41758e:	push   ebx
  41758f:	in     eax,0x5e
  417591:	aas    
  417592:	loope  0x4175cf
  417594:	sub    esp,DWORD PTR [ecx-0x749292ce]
  41759a:	pushf  
  41759b:	mov    ecx,DWORD PTR [esi-0x7b434b00]
  4175a1:	mov    bh,0x94
  4175a3:	ds sub bl,ah
  4175a6:	or     DWORD PTR [esi+0x6c7fa016],esi
  4175ac:	adc    BYTE PTR [edi+0x72],bh
  4175af:	jmp    0x41757a
  4175b1:	jle    0x417539
  4175b3:	and    DWORD PTR [ebp+0x673f03e2],eax
  4175b9:	sbb    DWORD PTR [esi+eax*8-0x7fc00c63],ebp
  4175c0:	lods   al,BYTE PTR ds:[esi]
  4175c1:	dec    esp
  4175c2:	out    0x2e,eax
  4175c4:	loop   0x4175c7
  4175c6:	lock mov DWORD PTR [esi+0x12],esi
  4175ca:	dec    ebx
  4175cb:	ja     0x4175db
  4175cd:	mov    ecx,0xcc215e11
  4175d2:	cmp    eax,DWORD PTR [esp+ebx*4+0x3]
  4175d6:	jbe    0x417657
  4175d8:	pop    edi
  4175d9:	test   eax,0x7d51c112
  4175de:	xchg   BYTE PTR ss:[esi-0x7d30b8da],dl
  4175e5:	cmc    
  4175e6:	fcom   QWORD PTR [ecx-0x1470b6f7]
  4175ec:	scas   al,BYTE PTR es:[edi]
  4175ed:	pop    eax
  4175ee:	jmp    0xcfa3:0x7cd4dde7
  4175f5:	popf   
  4175f6:	sbb    ecx,DWORD PTR [ebx+0x4677711a]
  4175fc:	outs   dx,DWORD PTR ds:[esi]
  4175fd:	xlat   BYTE PTR ds:[ebx]
  4175fe:	mov    ds:0x75310725,al
  417603:	out    0x9d,eax
  417605:	push   edx
  417606:	iret   
  417607:	aas    
  417608:	and    ebp,0xab5ed5c2
  41760e:	call   0xc537f84f
  417613:	ss inc eax
  417615:	arpl   WORD PTR [edx],dx
  417617:	jl     0x417666
  417619:	into   
  41761a:	cmp    al,0x57
  41761c:	mov    ebx,0x523f08e1
  417621:	fcom   DWORD PTR [ebx-0x3a]
  417624:	push   ebx
  417625:	xchg   DWORD PTR [edx],ebp
  417627:	mov    ch,BYTE PTR [edi]
  417629:	xor    esp,DWORD PTR [ebp+0x5977bea3]
  41762f:	xchg   ebp,eax
  417630:	add    dh,bh
  417632:	loop   0x41761f
  417634:	xor    eax,0xf25ccbd1
  417639:	xchg   ebp,eax
  41763a:	repnz inc ebp
  41763c:	mov    bh,0x73
  41763e:	and    bl,bh
  417640:	lds    ecx,FWORD PTR [eax+edx*8]
  417643:	dec    esi
  417644:	(bad)  
  417645:	sahf   
  417646:	jne    0x417653
  417648:	push   0xffffffa4
  41764a:	(bad)  
  41764b:	and    edi,edi
  41764d:	sub    cl,al
  41764f:	add    al,0x4c
  417651:	jg     0x417615
  417653:	cmp    BYTE PTR [edi-0x55fabaa2],dl
  417659:	mov    bh,0x90
  41765b:	push   edi
  41765c:	xor    ebx,ecx
  41765e:	scas   eax,DWORD PTR es:[edi]
  41765f:	fucom  st(1)
  417661:	je     0x4176a6
  417663:	dec    esi
  417664:	push   eax
  417665:	sub    ebp,DWORD PTR [esi]
  417667:	cmp    bl,BYTE PTR [edx+ebx*4-0x80]
  41766b:	les    ebx,FWORD PTR [esi]
  41766d:	popa   
  41766e:	out    dx,al
  41766f:	jo     0x4176c9
  417671:	jae    0x417650
  417673:	retf   
  417674:	or     dh,BYTE PTR [ebx]
  417676:	jae    0x4176da
  417678:	inc    ebx
  417679:	int    0x27
  41767b:	lahf   
  41767c:	out    0x4e,eax
  41767e:	mov    WORD PTR [eax-0x61bbb168],ds
  417684:	jge    0x41766a
  417686:	fmul   QWORD PTR [eax]
  417688:	rcl    eax,0x3e
  41768b:	mov    ebp,0xd408bfdf
  417690:	cwde   
  417691:	add    eax,0x6cd93986
  417696:	fs stos BYTE PTR es:[edi],al
  417698:	mov    al,0x7d
  41769a:	cld    
  41769b:	cmp    eax,0x2430ba7f
  4176a0:	sub    DWORD PTR [edi+0x7],eax
  4176a3:	popf   
  4176a4:	cwde   
  4176a5:	sub    DWORD PTR [ecx],0x2dd9ad5b
  4176ab:	jge    0x417707
  4176ad:	push   ebp
  4176ae:	push   ecx
  4176af:	jle    0x417652
  4176b1:	adc    dl,BYTE PTR [edx]
  4176b3:	adc    al,0x5
  4176b5:	iret   
  4176b6:	mov    al,0x59
  4176b8:	and    bl,BYTE PTR [ebp+ebp*1-0x22]
  4176bc:	jmp    0x852b4673
  4176c1:	mov    bl,cl
  4176c3:	pop    es
  4176c4:	addr16 bswap esp
  4176c7:	scas   eax,DWORD PTR es:[edi]
  4176c8:	jae    0x4176c0
  4176ca:	pop    ebx
  4176cb:	pushf  
  4176cc:	popf   
  4176cd:	jbe    0x41765d
  4176cf:	iret   
  4176d0:	das    
  4176d1:	push   esp
  4176d2:	mov    esp,0xdccdb341
  4176d7:	das    
  4176d8:	xor    al,0x47
  4176da:	push   ss
  4176db:	ins    BYTE PTR es:[edi],dx
  4176dc:	ror    DWORD PTR [eax-0x1900cfc1],0x98
  4176e3:	mov    dl,0x9f
  4176e5:	or     bl,BYTE PTR [esi-0x523bfefc]
  4176eb:	jb     0x4176ee
  4176ed:	repz loopne 0x417758
  4176f0:	jmp    0xe36a1dec
  4176f5:	xchg   edi,eax
  4176f6:	add    eax,edx
  4176f8:	out    0xd4,eax
  4176fa:	xchg   ebx,eax
  4176fb:	sub    DWORD PTR [edi],ecx
  4176fd:	test   DWORD PTR [edi+0x5c4165b6],eax
  417703:	push   edi
  417704:	pop    eax
  417705:	and    DWORD PTR [ecx-0x37],ebp
  417708:	mov    ds:0x1a07041c,eax
  41770d:	and    eax,0x191fe9aa
  417712:	lds    ecx,FWORD PTR [ecx]
  417714:	(bad)  [esi]
  417716:	mov    edx,0x8e10304b
  41771b:	iret   
  41771c:	mov    WORD PTR [eax-0x2a],fs
  41771f:	jnp    0x417700
  417721:	xchg   DWORD PTR [ebx-0x6c],edi
  417724:	inc    esi
  417725:	rol    BYTE PTR cs:[edx+0x51],0xf5
  41772a:	add    eax,0xc1a5e2b5
  41772f:	leave  
  417730:	pushf  
  417731:	xchg   ecx,eax
  417732:	xor    DWORD PTR [ecx],0xfffffff6
  417735:	stos   BYTE PTR es:[edi],al
  417736:	cmp    BYTE PTR ds:0x940852af,al
  41773c:	aaa    
  41773d:	cmc    
  41773e:	outs   dx,BYTE PTR ds:[esi]
  41773f:	fist   WORD PTR [ebx+0x5b]
  417742:	mov    esp,0x32743994
  417747:	cmp    al,0xe5
  417749:	test   al,0x4b
  41774b:	push   eax
  41774c:	repnz repnz es xchg bx,ax
  417751:	jmp    0xad042760
  417756:	les    ebp,FWORD PTR [esi+0x1b]
  417759:	out    dx,eax
  41775a:	mov    ds:0x349c3ae4,al
  41775f:	mov    al,ds:0x840bbb8d
  417764:	xor    eax,DWORD PTR [ebx+ebx*4]
  417767:	pop    ebx
  417768:	std    
  417769:	(bad)  
  41776a:	mov    eax,ds:0x826b4597
  41776f:	mov    esp,0x8c24521c
  417774:	sti    
  417775:	jo     0x417760
  417777:	sbb    eax,esp
  417779:	fiadd  DWORD PTR cs:[ebx]
  41777c:	inc    ebx
  41777d:	jmp    0xae9:0x48674424
  417784:	repnz dec ebp
  417786:	jmp    0x26ca92d5
  41778b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41778c:	mov    ah,0x23
  41778e:	in     al,0x24
  417790:	mov    cl,0x7d
  417792:	js     0x4177fb
  417794:	sti    
  417795:	dec    ecx
  417796:	retf   0xe84b
  417799:	xchg   esp,esi
  41779b:	adc    DWORD PTR [ebp-0x77],esp
  41779e:	sbb    al,0xa4
  4177a0:	inc    edx
  4177a1:	mov    ds:0x13f038c9,al
  4177a6:	xor    al,0x1f
  4177a8:	fstp   TBYTE PTR [edi-0x90b4eab]
  4177ae:	mov    ds:0x74b3c91c,eax
  4177b3:	sub    ah,BYTE PTR [esi-0x6b]
  4177b6:	ss jg  0x417783
  4177b9:	mov    ebp,0xa0152701
  4177be:	mov    ebp,0xd2fbf773
  4177c3:	(bad)
  4177c6:	pop    esi
  4177c7:	rol    bl,cl
  4177c9:	xchg   DWORD PTR [ecx-0x17902cd7],ebx
  4177cf:	js     0x41779c
  4177d1:	sub    al,0xb0
  4177d3:	jecxz  0x41778f
  4177d5:	popa   
  4177d6:	cmp    DWORD PTR [edi-0x56f00d4b],ebx
  4177dc:	test   al,0x32
  4177de:	popf   
  4177df:	sbb    BYTE PTR [ebx],bl
  4177e1:	in     eax,dx
  4177e2:	std    
  4177e3:	pop    edx
  4177e4:	mov    ds:0xced6550b,eax
  4177e9:	sbb    DWORD PTR ds:0x600826b4,ebp
  4177ef:	aad    0xb6
  4177f1:	cmp    DWORD PTR [ebx+esi*1],0x4a
  4177f5:	jl     0x417866
  4177f7:	jno    0x41779e
  4177f9:	push   edi
  4177fa:	xchg   ebx,eax
  4177fb:	push   ss
  4177fc:	(bad)  
  4177fd:	mov    bh,0xd6
  4177ff:	addr16 out dx,al
  417801:	jge    0x417857
  417803:	jb     0x4177b2
  417805:	inc    edx
  417806:	inc    edi
  417807:	es dec ecx
  417809:	add    BYTE PTR [eax-0x10],ah
  41780c:	or     BYTE PTR [ebx],0xaa
  41780f:	int3   
  417810:	sbb    esi,DWORD PTR [ebx-0x15]
  417813:	sub    dh,BYTE PTR [esi+0x7f]
  417816:	popa   
  417817:	sbb    ebp,DWORD PTR [edi]
  417819:	cmc    
  41781a:	in     al,0xd0
  41781c:	clc    
  41781d:	sahf   
  41781e:	mov    DWORD PTR [esi],esi
  417820:	fdivrp st(6),st
  417822:	mov    edx,0x74254b7f
  417827:	jl     0x417857
  417829:	mov    ebp,0x40220292
  41782e:	(bad)  
  417830:	out    dx,eax
  417831:	in     eax,0x60
  417833:	sbb    dl,0xd1
  417836:	and    cl,bh
  417838:	mov    ebx,ecx
  41783a:	sahf   
  41783b:	sbb    DWORD PTR [ecx+0x36efc9cb],eax
  417841:	inc    esp
  417842:	aaa    
  417843:	push   0xffffffb8
  417845:	lds    ecx,FWORD PTR [edx-0x4e1180ae]
  41784b:	cli    
  41784c:	jbe    0x417835
  41784e:	idiv   BYTE PTR [edi]
  417850:	adc    DWORD PTR [ebx-0x64],edi
  417853:	int    0x12
  417855:	inc    ebp
  417856:	jmp    0x417853
  417858:	push   eax
  417859:	xchg   ebx,eax
  41785a:	xor    BYTE PTR [ebp+0x6a],0x5e
  41785e:	jge    0x417803
  417860:	js     0x4177f1
  417862:	ja     0x4177f4
  417864:	adc    al,0xde
  417866:	add    ecx,DWORD PTR [eax+eiz*2]
  417869:	or     al,dh
  41786b:	lods   eax,DWORD PTR ds:[esi]
  41786c:	cmc    
  41786d:	pop    eax
  41786e:	fdiv   QWORD PTR ds:0x9879610e
  417874:	mov    edi,DWORD PTR [eax]
  417876:	ret    0xe178
  417879:	and    edx,DWORD PTR [ebp+0x42a6c13b]
  41787f:	push   edx
  417880:	clc    
  417881:	shl    ebp,0x7c
  417884:	iret   
  417885:	sub    ah,cl
  417887:	out    dx,al
  417888:	inc    ecx
  417889:	iret   
  41788a:	pop    ebx
  41788b:	and    eax,0x4c0bcf98
  417890:	(bad)  
  417891:	mov    bh,0x7
  417893:	aaa    
  417894:	(bad)  
  417895:	cmc    
  417896:	jle    0x417903
  417898:	xchg   dl,bl
  41789a:	mov    dl,0xa
  41789c:	ss push ebp
  41789e:	(bad)
  4178a2:	mov    ebx,0xe7f65cbb
  4178a7:	mov    cs,edx
  4178a9:	(bad)  
  4178aa:	push   esp
  4178ab:	data16 (bad) 
  4178ad:	out    dx,al
  4178ae:	ja     0x4178cf
  4178b0:	and    eax,0xd1b5cd22
  4178b5:	jmp    0xe248:0x9b5b5229
  4178bc:	cwde   
  4178bd:	ffree  st(3)
  4178bf:	or     DWORD PTR [edx-0x7d0e7252],ebp
  4178c5:	add    BYTE PTR [edx],0x80
  4178c8:	out    dx,eax
  4178c9:	dec    ebp
  4178ca:	retf   
  4178cb:	xchg   ebx,eax
  4178cc:	dec    ebp
  4178cd:	out    dx,al
  4178ce:	or     eax,0xe1f0d3ec
  4178d3:	inc    eax
  4178d4:	jbe    0x4178b6
  4178d6:	fwait
  4178d7:	(bad)  
  4178d8:	xchg   esp,eax
  4178d9:	jmp    0x776e9fd5
  4178de:	sbb    bh,BYTE PTR [eax+0x64]
  4178e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178e2:	call   0x8fcf:0xd8a80712
  4178e9:	and    esi,esi
  4178eb:	mov    DWORD PTR [edi-0x3a],eax
  4178ee:	pop    esi
  4178ef:	and    cl,dh
  4178f1:	fwait
  4178f2:	pop    edi
  4178f3:	adc    al,0xe7
  4178f5:	dec    edx
  4178f6:	and    al,0xc0
  4178f8:	mov    ds:0x2054b9d4,al
  4178fd:	or     edx,DWORD PTR [edx+ebx*1-0x76d0d9cc]
  417904:	mov    ebp,DWORD PTR [ebx]
  417906:	pop    es
  417907:	sahf   
  417908:	repnz mov ds:0xd198b7c8,eax
  41790e:	mov    al,ds:0x1ca1937c
  417913:	pop    esp
  417914:	sar    DWORD PTR [esi],1
  417916:	jns    0x417962
  417918:	xchg   DWORD PTR [ecx],eax
  41791a:	lock or BYTE PTR [edi-0x6e],0x43
  41791f:	or     esi,edx
  417921:	and    dl,bl
  417923:	gs mov ebp,0x2635cdf5
  417929:	imul   BYTE PTR [edi-0xe7c08d8]
  41792f:	xor    DWORD PTR [esi],0xb0ee8572
  417935:	adc    DWORD PTR [eax],edx
  417937:	jo     0x4179b1
  417939:	stos   DWORD PTR es:[edi],eax
  41793a:	mov    bl,0x9c
  41793c:	adc    DWORD PTR [ebp+0x2367efde],eax
  417942:	sub    ah,BYTE PTR [edi-0x3712d929]
  417948:	ja     0x4178f2
  41794a:	popa   
  41794b:	cmp    bh,BYTE PTR [eax+0x6b]
  41794e:	repz out dx,al
  417950:	mov    al,ds:0x5a80fed
  417955:	add    ecx,0x59
  417958:	xchg   DWORD PTR cs:[esp+edi*1-0x307bc789],edi
  417960:	mov    ecx,edx
  417962:	xchg   ebx,eax
  417963:	cmp    DWORD PTR [ecx+eiz*2+0xc],0xa7fe4999
  41796b:	push   eax
  41796c:	add    BYTE PTR [ecx-0x3201afad],ah
  417972:	and    al,0x9e
  417974:	jmp    0x417901
  417976:	sub    eax,DWORD PTR [esi+0x72]
  417979:	pop    ecx
  41797a:	or     al,bh
  41797c:	cmp    BYTE PTR [ebp+0x62],ch
  41797f:	xchg   esi,eax
  417980:	add    edx,DWORD PTR [esi-0x47]
  417983:	js     0x4179d9
  417985:	lea    ecx,[edx+eax*8+0x3c09ae8a]
  41798c:	pop    edi
  41798d:	mov    bl,0x28
  41798f:	dec    ebx
  417990:	jne    0x417933
  417992:	jp     0x4179e3
  417994:	lock mov dh,BYTE PTR [esi-0x3d]
  417998:	xchg   DWORD PTR [ebx-0xb],esi
  41799b:	ret    
  41799c:	xchg   ebp,eax
  41799d:	bound  edx,QWORD PTR [ebp-0x3f]
  4179a0:	cmp    BYTE PTR [esi],dl
  4179a2:	(bad)  
  4179a3:	in     eax,dx
  4179a4:	push   esi
  4179a5:	lds    esp,FWORD PTR [ecx-0x50]
  4179a8:	sbb    al,0xd1
  4179aa:	and    al,0x76
  4179ac:	mov    dh,0xd7
  4179ae:	pop    edx
  4179af:	jnp    0x417963
  4179b1:	cs in  eax,dx
  4179b3:	xchg   BYTE PTR [edx-0x67],al
  4179b6:	into   
  4179b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179b8:	push   edi
  4179b9:	xor    BYTE PTR [edi],al
  4179bb:	mov    ecx,0xf3d250d9
  4179c0:	mov    ebx,0x738b1a4d
  4179c5:	sub    al,0x62
  4179c7:	call   0xb96eac0b
  4179cc:	adc    edx,DWORD PTR [edx-0x7a6fc85e]
  4179d2:	retf   
  4179d3:	dec    ebp
  4179d4:	mov    ebp,edx
  4179d6:	repnz rol DWORD PTR [ebp-0x23e4c014],1
  4179dd:	sub    al,0x72
  4179df:	cmp    eax,0x12ba5307
  4179e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e5:	pushf  
  4179e6:	pop    esp
  4179e7:	retf   0x59d7
  4179ea:	fimul  DWORD PTR [ebx-0x5ec53283]
  4179f0:	mov    ds:0x20352511,al
  4179f5:	cmp    DWORD PTR [eax-0x11],ebx
  4179f8:	nop
  4179f9:	pop    esp
  4179fa:	sar    DWORD PTR [edi+0x50b81280],1
  417a00:	popf   
  417a01:	xchg   esi,eax
  417a02:	or     eax,0x6ec477e
  417a07:	cmp    ebp,ecx
  417a09:	jg     0x417a1e
  417a0b:	scas   eax,DWORD PTR es:[edi]
  417a0c:	ds push ebp
  417a0e:	call   0x174389a8
  417a13:	js     0x417a63
  417a15:	cmc    
  417a16:	fadd   QWORD PTR [edi-0x3f915b17]
  417a1c:	mov    al,0x55
  417a1e:	jl     0x417a20
  417a20:	dec    ebx
  417a21:	sbb    al,BYTE PTR [ebp-0x5e489a]
  417a27:	mov    DWORD PTR [ebx-0x3],edi
  417a2a:	mov    dl,0xaa
  417a2c:	adc    DWORD PTR [ebp+0x1f],0x65
  417a30:	inc    edi
  417a31:	push   es
  417a32:	test   dh,bl
  417a34:	mov    ebx,0x5d953fa2
  417a39:	scas   al,BYTE PTR es:[edi]
  417a3a:	xor    BYTE PTR [ebp-0x4ab39610],bh
  417a40:	adc    BYTE PTR [edi],al
  417a42:	xchg   ebx,eax
  417a43:	or     al,0x62
  417a45:	imul   ecx,DWORD PTR [esi-0x17],0x75
  417a49:	sbb    DWORD PTR [esi-0x8c1f18c],0xd4f298f5
  417a53:	add    al,ah
  417a55:	sub    eax,0xccbcd40f
  417a5a:	test   DWORD PTR [edx+0x10014c4f],0xda315e59
  417a64:	mov    BYTE PTR [ebx+ebp*2],ah
  417a67:	in     eax,dx
  417a68:	lock sbb ebp,DWORD PTR [esi+0x2c2dc409]
  417a6f:	scas   eax,DWORD PTR es:[edi]
  417a70:	xchg   edi,eax
  417a71:	shl    ah,0xa6
  417a74:	repz or eax,0x1b67e871
  417a7a:	out    0x94,eax
  417a7c:	loope  0x417ae6
  417a7e:	add    cl,BYTE PTR [ebx]
  417a80:	xchg   bp,ax
  417a82:	or     al,BYTE PTR [esi-0x5c]
  417a85:	inc    esp
  417a86:	sar    BYTE PTR [ebp+ecx*2+0x26],cl
  417a8a:	inc    esi
  417a8b:	scas   eax,DWORD PTR es:[edi]
  417a8c:	cs das 
  417a8e:	mov    bh,0xb8
  417a90:	push   ss
  417a91:	popf   
  417a92:	(bad)  
  417a93:	and    eax,0xa1b75ac0
  417a98:	xchg   ebp,eax
  417a99:	lods   eax,DWORD PTR ds:[esi]
  417a9a:	inc    edi
  417a9b:	mov    BYTE PTR [ecx+0x3],bl
  417a9e:	(bad)
  417aa2:	mov    ds:0x287bf88c,al
  417aa7:	daa    
  417aa8:	inc    edi
  417aa9:	xor    BYTE PTR [esi-0x3d97ac8b],cl
  417aaf:	jnp    0x417ac9
  417ab1:	daa    
  417ab2:	je     0x417ab9
  417ab4:	xchg   ecx,eax
  417ab5:	fs and ecx,DWORD PTR cs:[edi-0x5153c451]
  417abd:	mov    dh,0xa9
  417abf:	jecxz  0x417a52
  417ac1:	fwait
  417ac2:	pop    DWORD PTR [edx+0x60]
  417ac5:	pop    DWORD PTR [edi-0x4c53be05]
  417acb:	jo     0x417ab0
  417acd:	rol    BYTE PTR [edx+0x6dc0b3f7],0x0
  417ad4:	xor    cl,0xaf
  417ad7:	stc    
  417ad8:	mov    BYTE PTR [eax+0x2e],dh
  417adb:	push   ds
  417adc:	dec    edx
  417add:	jle    0x417a92
  417adf:	add    BYTE PTR [ebp+0x3640e394],dh
  417ae5:	mov    cl,0x0
  417ae7:	mov    edi,0x10d07766
  417aec:	dec    ebx
  417aed:	aam    0xf8
  417aef:	inc    eax
  417af0:	jl     0x417b38
  417af2:	mov    eax,ds:0xc34ae616
  417af7:	ja     0x417b19
  417af9:	xchg   esp,eax
  417afa:	fsubr  DWORD PTR [ebp-0x33d9705a]
  417b00:	std    
  417b01:	push   esp
  417b02:	xchg   edx,eax
  417b03:	inc    edx
  417b04:	lea    edi,[edx-0x2e8eeff7]
  417b0a:	test   DWORD PTR [edx+esi*1],edx
  417b0d:	stc    
  417b0e:	lahf   
  417b0f:	xchg   ebx,eax
  417b10:	ret    0xde28
  417b13:	int3   
  417b14:	cmp    al,0xb9
  417b16:	fs jnp 0x417b4e
  417b19:	adc    eax,0x89450a8
  417b1e:	frstor [esi-0x415325dd]
  417b25:	xlat   BYTE PTR ds:[ebx]
  417b26:	mov    edi,0xc62c54c0
  417b2b:	out    dx,al
  417b2c:	inc    esi
  417b2d:	mov    edi,0x7040448c
  417b32:	xor    ecx,DWORD PTR cs:[ebp+0x15b56b2]
  417b39:	fdiv   DWORD PTR [ecx+esi*1]
  417b3c:	push   edx
  417b3d:	scas   al,BYTE PTR es:[edi]
  417b3e:	fcomp  QWORD PTR [ecx]
  417b40:	sbb    ah,BYTE PTR [ebx-0x73]
  417b43:	repnz pop edi
  417b45:	aas    
  417b46:	mov    dh,0x31
  417b48:	xchg   cl,bh
  417b4a:	retf   
  417b4b:	retf   
  417b4c:	out    dx,al
  417b4d:	inc    ebx
  417b4e:	stos   DWORD PTR es:[edi],eax
  417b4f:	or     ebx,DWORD PTR [eax]
  417b51:	lock hlt 
  417b53:	cmp    al,0x8e
  417b55:	fsub   QWORD PTR [eax+eax*8-0x5952ea8e]
  417b5c:	xchg   ebp,eax
  417b5d:	ret    0x898d
  417b60:	fist   DWORD PTR [edi]
  417b62:	mov    ecx,DWORD PTR [ecx+0x185dc69d]
  417b68:	out    0x3d,eax
  417b6a:	or     BYTE PTR [ebx+0x8],dh
  417b6d:	enter  0x3208,0x6f
  417b71:	jmp    0x417b71
  417b73:	pop    ebx
  417b74:	test   esp,esp
  417b76:	pushf  
  417b77:	xor    dh,cl
  417b79:	jg     0x417b6c
  417b7b:	inc    esp
  417b7c:	pop    esp
  417b7d:	nop
  417b7e:	cwde   
  417b7f:	inc    esi
  417b80:	stos   DWORD PTR es:[edi],eax
  417b81:	xchg   esp,eax
  417b82:	mov    BYTE PTR [ebx+edi*1+0x15327419],dh
  417b89:	in     al,0x1
  417b8b:	push   esp
  417b8c:	sti    
  417b8d:	retf   
  417b8e:	mov    ds:0x12056abe,al
  417b93:	mov    dh,0x85
  417b95:	jns    0x417ba9
  417b97:	ja     0x417b4d
  417b99:	lock clc 
  417b9b:	ret    0x7cba
  417b9e:	and    al,0x28
  417ba0:	push   cs
  417ba1:	ins    DWORD PTR es:[edi],dx
  417ba2:	add    esi,eax
  417ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba5:	ds push 0x361a29c7
  417bab:	push   cs
  417bac:	rcl    BYTE PTR [eax],cl
  417bae:	xor    BYTE PTR ds:[esi-0x221e9dae],cl
  417bb5:	push   eax
  417bb6:	loopne 0x417bb4
  417bb8:	cli    
  417bb9:	add    cl,ch
  417bbb:	or     al,BYTE PTR [edi+0x4c]
  417bbe:	in     eax,0xc
  417bc0:	push   esp
  417bc1:	mov    ah,BYTE PTR gs:[ebx]
  417bc4:	retf   0xa18d
  417bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bc8:	add    DWORD PTR [esi+0x43],eax
  417bcb:	es popf 
  417bcd:	and    eax,0xac71e5a6
  417bd2:	rol    esi,0x69
  417bd5:	data16 adc al,0xa1
  417bd8:	div    BYTE PTR [edi]
  417bda:	(bad)  
  417bdb:	aas    
  417bdc:	dec    eax
  417bdd:	stos   DWORD PTR es:[edi],eax
  417bde:	mov    bl,0x89
  417be0:	add    esi,0x621679d7
  417be6:	and    ebp,esp
  417be8:	fiadd  DWORD PTR [edx]
  417bea:	ror    eax,1
  417bec:	sbb    esi,DWORD PTR [edx+ecx*4-0x5188a9ff]
  417bf3:	mov    esi,0x693546f1
  417bf8:	jg     0x417c2d
  417bfa:	fimul  DWORD PTR [ecx-0x12]
  417bfd:	sub    eax,0x3ea64885
  417c02:	int3   
  417c03:	or     BYTE PTR [edx+eiz*4+0x22d560b3],ch
  417c0a:	in     al,0x66
  417c0c:	shl    DWORD PTR [esi+0x45],1
  417c0f:	cmp    eax,0x31d55fb8
  417c14:	jecxz  0x417be4
  417c16:	ss pop esp
  417c18:	xchg   BYTE PTR [eax-0x76],al
  417c1b:	gs xor al,0x90
  417c1e:	(bad)  
  417c1f:	jp     0x417bb5
  417c21:	cmc    
  417c22:	and    BYTE PTR [esi+0x313aaca8],dh
  417c28:	std    
  417c29:	add    dl,bh
  417c2b:	adc    bl,bh
  417c2d:	add    al,0xea
  417c2f:	mov    DWORD PTR ds:0x42de834,esi
  417c35:	cmp    edi,DWORD PTR [edx+0x254bd453]
  417c3b:	sti    
  417c3c:	sbb    dh,BYTE PTR [esi+0x23d5048c]
  417c42:	and    al,bh
  417c44:	inc    esp
  417c45:	mov    DWORD PTR [eax+0xfe29b5e],esi
  417c4b:	dec    bl
  417c4d:	mov    dl,0x4c
  417c4f:	dec    esp
  417c50:	imul   DWORD PTR [esi+0x24]
  417c53:	xchg   ecx,eax
  417c54:	xor    DWORD PTR ds:0x39867a3d,0x2a636e6
  417c5e:	xchg   edx,eax
  417c5f:	cwde   
  417c60:	pop    edx
  417c61:	mov    ah,0x4c
  417c63:	ds ret 
  417c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c66:	call   0x6831:0x2c5825da
  417c6d:	sbb    edx,DWORD PTR [ecx+0x59]
  417c70:	or     BYTE PTR [ebx],dh
  417c72:	or     BYTE PTR [eax+0x19fc9a9e],ah
  417c78:	sub    eax,DWORD PTR [edx-0x476e19f1]
  417c7e:	add    edx,eax
  417c80:	dec    edx
  417c81:	std    
  417c82:	xchg   esp,eax
  417c83:	sbb    BYTE PTR [ebx+0x1caab979],ch
  417c89:	sub    dh,ch
  417c8b:	rcr    BYTE PTR [edx+eiz*8],1
  417c8e:	pop    eax
  417c8f:	or     eax,0x53c5851d
  417c94:	test   BYTE PTR [edx],ah
  417c96:	pop    esp
  417c97:	fdivr  DWORD PTR [ebx]
  417c99:	or     al,0x67
  417c9b:	push   ebp
  417c9c:	jg     0x417cb1
  417c9e:	push   esp
  417c9f:	clc    
  417ca0:	aaa    
  417ca1:	and    DWORD PTR [ebx],0x2ddb36dd
  417ca7:	fadd   DWORD PTR [edx-0xa060a83]
  417cad:	dec    edx
  417cae:	aaa    
  417caf:	loop   0x417ce2
  417cb1:	push   esp
  417cb2:	arpl   di,sp
  417cb4:	fldenv ds:0xbd2d36b8
  417cba:	pop    es
  417cbb:	ja     0x417ce4
  417cbd:	in     eax,0xda
  417cbf:	inc    esi
  417cc0:	ret    
  417cc1:	mov    ecx,0x7f9344a8
  417cc6:	fwait
  417cc7:	ins    BYTE PTR es:[edi],dx
  417cc8:	ret    
  417cc9:	add    eax,0xf449ee08
  417cce:	push   es
  417ccf:	ret    
  417cd0:	xor    ebx,DWORD PTR [edi]
  417cd2:	pop    ebp
  417cd3:	int    0x76
  417cd5:	xor    BYTE PTR [esi-0xc],ch
  417cd8:	in     eax,dx
  417cd9:	jl     0x417c6c
  417cdb:	xor    al,0x90
  417cdd:	mov    dl,0x59
  417cdf:	int3   
  417ce0:	and    al,ah
  417ce2:	lock jns 0x417ccd
  417ce5:	in     eax,dx
  417ce6:	icebp  
  417ce7:	xchg   esi,eax
  417ce8:	pop    ecx
  417ce9:	out    dx,eax
  417cea:	nop    DWORD PTR [ebx]
  417ced:	and    BYTE PTR [ebp-0x76],dl
  417cf0:	ret    0x8b26
  417cf3:	imul   edi,DWORD PTR [edi-0x64a00c9],0xffffff9c
  417cfa:	pop    ds
  417cfb:	mov    DWORD PTR [edx+0x5b60a148],0xd3c6290f
  417d05:	test   eax,0x4d7c5f
  417d0a:	cli    
  417d0b:	mov    ebx,0xafd8811d
  417d10:	or     ecx,esp
  417d12:	adc    dh,ch
  417d14:	aam    0x13
  417d16:	ret    0x6640
  417d19:	mov    eax,0x339509f3
  417d1e:	lods   eax,DWORD PTR ds:[esi]
  417d1f:	sub    cl,BYTE PTR [esi+0x59e4c903]
  417d25:	mov    cl,0x47
  417d27:	dec    ecx
  417d28:	test   BYTE PTR [ebp+ebx*8+0x1016c2b0],bl
  417d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d30:	lahf   
  417d31:	push   ss
  417d32:	push   es
  417d33:	in     eax,dx
  417d34:	cmp    al,0x25
  417d36:	jb     0x417d60
  417d38:	stc    
  417d39:	fxch   st(3)
  417d3b:	sub    DWORD PTR [eax-0x455bd85b],ebp
  417d41:	adc    edi,DWORD PTR [eax-0x64040f6a]
  417d47:	adc    esi,DWORD PTR [esi+0x39]
  417d4a:	jg     0x417dc9
  417d4c:	or     al,0x2d
  417d4e:	std    
  417d4f:	jno    0x417d71
  417d51:	push   edi
  417d52:	or     BYTE PTR cs:[esp+esi*1],al
  417d56:	and    al,0x46
  417d58:	add    al,0x22
  417d5a:	add    al,0x15
  417d5c:	push   ss
  417d5d:	in     eax,dx
  417d5e:	in     al,dx
  417d5f:	dec    edi
  417d60:	dec    eax
  417d61:	scas   eax,DWORD PTR es:[edi]
  417d62:	fdiv   QWORD PTR [ebx]
  417d64:	add    BYTE PTR [esi],dh
  417d66:	dec    edi
  417d67:	cmp    eax,0x6da414a8
  417d6c:	push   ds
  417d6d:	cwde   
  417d6e:	dec    edx
  417d6f:	xchg   edi,eax
  417d70:	xor    al,0x55
  417d72:	jns    0x417d45
  417d74:	inc    esi
  417d75:	pop    ds
  417d76:	(bad)  
  417d77:	(bad)  
  417d78:	lods   al,BYTE PTR ds:[esi]
  417d79:	xor    DWORD PTR cs:[esi+0x62cd96cb],esp
  417d80:	xor    al,0xe2
  417d82:	cmp    DWORD PTR [esi+0xf],0x5c3df099
  417d89:	sbb    ecx,DWORD PTR [ebx-0x15]
  417d8c:	mov    ebp,0x6ab17750
  417d91:	xor    bl,BYTE PTR [edx]
  417d93:	stos   DWORD PTR es:[edi],eax
  417d94:	adc    al,BYTE PTR [esi+eax*4]
  417d97:	not    BYTE PTR [edx-0x2f2a56c7]
  417d9d:	cmp    al,0x7f
  417d9f:	js     0x417d9c
  417da1:	dec    eax
  417da2:	or     BYTE PTR [edi],bl
  417da4:	sub    eax,0x2c42c68e
  417da9:	add    ebx,esi
  417dab:	or     BYTE PTR [edi-0x1d4dc9df],0x86
  417db2:	clc    
  417db3:	inc    edi
  417db4:	sub    esp,ecx
  417db6:	popa   
  417db7:	mov    esp,0xb7e538f1
  417dbc:	jmp    ebp
  417dbe:	fcom   DWORD PTR [edi+0x57]
  417dc1:	pop    es
  417dc2:	push   0xd6bf396e
  417dc7:	cdq    
  417dc8:	add    bl,bl
  417dca:	test   DWORD PTR [ecx+edi*2-0x3e8a853d],ebp
  417dd1:	out    dx,al
  417dd2:	push   esi
  417dd3:	(bad)  
  417dd4:	ficom  WORD PTR [bp+si+0x3a17]
  417dd9:	pop    esp
  417dda:	pop    edi
  417ddb:	mov    ebp,0xc0e0d672
  417de0:	mov    edx,0x13976e64
  417de5:	and    dh,dh
  417de7:	cwde   
  417de8:	xchg   DWORD PTR [ebp*2+0x125746e5],edx
  417def:	jmp    0x417e62
  417df1:	sbb    dl,BYTE PTR [edx+0x7f6f5acc]
  417df7:	mov    eax,ds:0x4c4b7162
  417dfc:	cmp    BYTE PTR [edi+0x51816aa5],ah
  417e02:	loop   0x417d8a
  417e04:	mov    ch,0x4d
  417e06:	bndldx bnd3,[edx+0x24069e8e]
  417e0d:	pop    esp
  417e0e:	xor    BYTE PTR [edx-0x5b47f80e],bh
  417e14:	mov    edx,0x1f33e2b1
  417e19:	mov    ds:0xff5f1e2,eax
  417e1e:	cmp    al,0x7a
  417e20:	cmc    
  417e21:	invd   
  417e23:	cmp    ecx,DWORD PTR [ecx+0x2e]
  417e26:	dec    edi
  417e27:	cmp    al,0xaf
  417e29:	rol    DWORD PTR [edx-0x74d62567],cl
  417e2f:	adc    ebp,DWORD PTR [esi+0x3e]
  417e32:	xchg   esp,eax
  417e33:	aam    0xeb
  417e35:	cld    
  417e36:	sbb    BYTE PTR [edi-0x33ede381],bl
  417e3c:	push   eax
  417e3d:	call   0x965:0x5dfc6910
  417e44:	xor    bh,0xef
  417e47:	(bad)  
  417e48:	jmp    0x47dd:0x444ec1bd
  417e4f:	dec    esi
  417e50:	call   0x1af9ccc2
  417e55:	fadd   st(1),st
  417e57:	int    0x2d
  417e59:	in     al,0xa8
  417e5b:	sbb    eax,0xcfe7a788
  417e60:	(bad)
  417e64:	test   edx,edi
  417e66:	dec    edi
  417e67:	dec    esi
  417e68:	inc    edx
  417e69:	cmp    al,0x2d
  417e6b:	call   0x847e:0x276d2df3
  417e72:	or     al,0x7d
  417e74:	repnz dec ebx
  417e76:	pop    ds
  417e77:	mov    cs,WORD PTR [eax]
  417e79:	sti    
  417e7a:	mov    DWORD PTR [ebp-0x5e],edx
  417e7d:	cmp    dl,cl
  417e7f:	loop   0x417e18
  417e81:	mov    esp,0x860fb847
  417e86:	jbe    0x417e23
  417e88:	in     eax,0xa0
  417e8a:	inc    esi
  417e8b:	mov    ecx,0xc9af17bc
  417e90:	jo     0x417ef5
  417e92:	fsubr  DWORD PTR [esi-0x41]
  417e95:	sub    al,0x15
  417e97:	popf   
  417e98:	pop    esi
  417e99:	jne    0x417edd
  417e9b:	ret    
  417e9c:	push   es
  417e9d:	fcom   QWORD PTR [edx+0x31f8782a]
  417ea3:	add    DWORD PTR [eax+0x1badb193],eax
  417ea9:	fst    QWORD PTR [edi-0x739a1541]
  417eaf:	out    0xbe,al
  417eb1:	xor    al,0xb3
  417eb3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417eb5:	js     0x417f1d
  417eb7:	cli    
  417eb8:	mov    ah,0x5d
  417eba:	push   esp
  417ebb:	or     al,0xcd
  417ebd:	repnz or edi,DWORD PTR [ebx+0xe]
  417ec1:	adc    DWORD PTR [edx+ebp*8+0x6732171c],ebp
  417ec8:	cwde   
  417ec9:	bound  ecx,QWORD PTR [eax]
  417ecb:	push   edi
  417ecc:	xlat   BYTE PTR ds:[ebx]
  417ecd:	mov    WORD PTR [ebx+0x34],cs
  417ed0:	je     0x417e9d
  417ed2:	stc    
  417ed3:	retf   0x118c
  417ed6:	pop    ebp
  417ed7:	ret    
  417ed8:	dec    ecx
  417ed9:	test   eax,0x6f591128
  417ede:	int    0x11
  417ee0:	inc    edx
  417ee1:	aaa    
  417ee2:	jle    0x417e81
  417ee4:	push   ds
  417ee5:	stos   DWORD PTR es:[edi],eax
  417ee6:	stc    
  417ee7:	shr    DWORD PTR [esi+esi*4],0x9
  417eeb:	jnp    0x417f3e
  417eed:	pop    ss
  417eee:	scas   eax,DWORD PTR es:[edi]
  417eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef0:	push   ebx
  417ef1:	inc    esp
  417ef2:	outs   dx,DWORD PTR ds:[esi]
  417ef3:	mov    ebx,0xca1f0b7f
  417ef8:	fldenv [edi+0x30]
  417efb:	aaa    
  417efc:	xor    edi,DWORD PTR [ebx+0x66bf0324]
  417f02:	jg     0x417f1c
  417f04:	jge    0x417f21
  417f06:	jno    0x417f7c
  417f08:	cmp    al,0x5c
  417f0a:	je     0x417e96
  417f0c:	or     cl,ch
  417f0e:	add    al,0x40
  417f10:	imul   DWORD PTR [ebx+0x24196e61]
  417f16:	nop
  417f17:	inc    ebx
  417f18:	push   edi
  417f19:	int3   
  417f1a:	loopne 0x417efd
  417f1c:	dec    ebp
  417f1d:	stc    
  417f1e:	xor    al,0xe4
  417f20:	je     0x417f7a
  417f22:	xor    BYTE PTR [eax-0x24cd44fc],bh
  417f28:	ja     0x417ef8
  417f2a:	cdq    
  417f2b:	test   BYTE PTR [esi-0x1c955fe5],bl
  417f31:	scas   eax,DWORD PTR es:[edi]
  417f32:	mov    ecx,0x58f1981
  417f37:	lahf   
  417f38:	loop   0x417f5a
  417f3a:	add    ebp,DWORD PTR [ecx+0x4fc17368]
  417f40:	loop   0x417fb4
  417f42:	xchg   ebp,eax
  417f43:	stc    
  417f44:	lea    ecx,[ecx+0x440600f]
  417f4a:	add    BYTE PTR [ebp-0x33],bl
  417f4d:	ret    
  417f4e:	cmc    
  417f4f:	aad    0x57
  417f51:	test   al,0x38
  417f53:	mov    ss,edi
  417f55:	std    
  417f56:	jecxz  0x417f8a
  417f58:	xchg   edi,eax
  417f59:	dec    eax
  417f5a:	mov    al,ds:0x91ff46e2
  417f5f:	add    DWORD PTR [edi-0x1c01bba7],ebx
  417f65:	and    eax,DWORD PTR [ecx]
  417f67:	add    eax,0xc3304cd8
  417f6c:	or     al,0xbd
  417f6e:	(bad)  
  417f6f:	fadd   QWORD PTR [edx+0x28722ea6]
  417f75:	jmp    0x417fac
  417f77:	and    BYTE PTR [ecx+0x1a],dl
  417f7a:	add    BYTE PTR [esi-0x6b4a15c7],al
  417f80:	(bad)  
  417f81:	sti    
  417f82:	mov    ebp,0x9a5395dd
  417f87:	sub    al,0x70
  417f89:	adc    esp,edx
  417f8b:	out    0x90,eax
  417f8d:	rcl    DWORD PTR [edi],0x18
  417f90:	push   ecx
  417f91:	sub    DWORD PTR [edx],0xcb70a056
  417f97:	mov    bh,0xee
  417f99:	icebp  
  417f9a:	shl    BYTE PTR [edi+0xb54e657],0xe7
  417fa1:	js     0x418013
  417fa3:	(bad)  
  417fa4:	jmp    0x8c06:0xa4186af6
  417fab:	and    BYTE PTR [esi+esi*4+0x77],ch
  417faf:	les    ebp,FWORD PTR [eax-0x3d]
  417fb2:	leave  
  417fb3:	jmp    0xf8010946
  417fb8:	test   dl,0x79
  417fbb:	arpl   WORD PTR [edi],di
  417fbd:	sar    ebp,cl
  417fbf:	fs bnd je 0x418005
  417fc3:	mov    ds:0x2fd0d2e6,al
  417fc8:	jne    0x417f63
  417fca:	sub    bl,cl
  417fcc:	sahf   
  417fcd:	aad    0x7b
  417fcf:	xor    BYTE PTR [esi+0x50],bh
  417fd2:	mov    WORD PTR [eax+0x319ab11a],?
  417fd8:	int    0xdb
  417fda:	dec    eax
  417fdb:	pop    eax
  417fdc:	push   cs
  417fdd:	fisub  WORD PTR [esi+0x1e03a344]
  417fe3:	ss mov dl,0xa2
  417fe6:	cmp    DWORD PTR [ecx+eax*4],edi
  417fe9:	clc    
  417fea:	lods   eax,DWORD PTR ds:[esi]
  417feb:	xchg   esi,eax
  417fec:	xchg   esi,esp
  417fee:	jg     0x418049
  417ff0:	popf   
  417ff1:	in     al,0xda
  417ff3:	sbb    dh,BYTE PTR [ecx]
  417ff5:	pop    ds
  417ff6:	repnz xchg esp,eax
  417ff8:	xor    edi,DWORD PTR [eax-0x4b]
  417ffb:	mov    dl,0x98
  417ffd:	das    
  417ffe:	fs dec esp
  418000:	jmp    0x561f:0xdbef379c
  418007:	ins    BYTE PTR es:[edi],dx
  418008:	data16 jle 0x418017
  41800b:	pop    ebx
  41800c:	mov    dh,0x8d
  41800e:	ret    0xbbb7
  418011:	(bad)  
  418012:	(bad)  
  418013:	inc    esi
  418014:	sbb    ebp,DWORD PTR [ebx-0x43]
  418017:	les    ecx,FWORD PTR [edx+edi*1-0x3a]
  41801b:	inc    ecx
  41801c:	sub    al,0x3d
  41801e:	mov    esp,0x86ab5016
  418023:	or     bh,0x4
  418026:	cmc    
  418027:	test   ch,bl
  418029:	fdivr  QWORD PTR [edx]
  41802b:	xor    esp,DWORD PTR [edx+0x25]
  41802e:	je     0x418080
  418030:	pop    ecx
  418031:	or     dl,bh
  418033:	jmp    0x4488:0xd452f940
  41803a:	ds lahf 
  41803c:	ret    
  41803d:	shl    DWORD PTR [ecx+eax*2-0x45],0xac
  418042:	xchg   edx,eax
  418043:	aaa    
  418044:	pop    ebx
  418045:	addr16 inc edi
  418047:	lea    edx,[ecx+0x2fa744a]
  41804d:	stos   DWORD PTR es:[edi],eax
  41804e:	cwde   
  41804f:	shr    DWORD PTR [ebx],cl
  418051:	int    0x1c
  418053:	mov    ch,0xe1
  418055:	(bad)  
  418056:	sti    
  418057:	jmp    0x418080
  418059:	dec    esp
  41805a:	inc    ecx
  41805b:	gs hlt 
  41805d:	dec    esi
  41805e:	pusha  
  41805f:	or     al,0xa9
  418061:	int    0x7a
  418063:	pop    ebp
  418064:	mov    ebx,0x73ad167a
  418069:	mov    WORD PTR [ebx],gs
  41806b:	and    eax,0x9d68a986
  418070:	mov    ecx,0xc2bb613e
  418075:	and    bl,BYTE PTR ds:0xfd80ab45
  41807b:	ins    BYTE PTR es:[edi],dx
  41807c:	mov    ds:0x7d2d7388,al
  418081:	es pop ecx
  418083:	xchg   esp,eax
  418084:	repz ss aas 
  418087:	daa    
  418088:	pop    ecx
  418089:	stc    
  41808a:	xor    al,BYTE PTR [esi-0x70]
  41808d:	test   al,0xa8
  41808f:	sub    eax,0x1c15f36e
  418094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418095:	je     0x41809f
  418097:	fsub   DWORD PTR [ecx-0x46]
  41809a:	push   ebp
  41809b:	(bad)  
  41809c:	cmc    
  41809d:	push   ds
  41809e:	dec    ebx
  41809f:	fwait
  4180a0:	mov    dh,0x9f
  4180a2:	enter  0xd61a,0xe3
  4180a6:	sti    
  4180a7:	xchg   dl,dh
  4180a9:	jmp    DWORD PTR [edx+0x26]
  4180ac:	push   ecx
  4180ad:	lods   eax,DWORD PTR ds:[esi]
  4180ae:	adc    cl,BYTE PTR ds:0x289d9009
  4180b4:	stos   BYTE PTR es:[edi],al
  4180b5:	(bad)  
  4180b6:	mov    esi,0xa467bd7e
  4180bb:	mov    ebx,DWORD PTR [ebx+edi*8]
  4180be:	cvtpi2ps xmm1,QWORD PTR [ebp+0x2d4eb446]
  4180c5:	or     eax,0x6abcd11c
  4180ca:	push   eax
  4180cb:	inc    ebx
  4180cc:	adc    al,BYTE PTR [edx-0x15]
  4180cf:	bound  edx,QWORD PTR [edi+0x1e6b73be]
  4180d5:	rol    ebp,cl
  4180d7:	cmp    bh,ah
  4180d9:	cs out dx,eax
  4180db:	dec    edi
  4180dc:	(bad)  
  4180dd:	and    eax,0xd6b46524
  4180e2:	or     bh,dh
  4180e4:	mov    dh,0x66
  4180e6:	je     0x418156
  4180e8:	in     al,0x56
  4180ea:	mov    esi,0x15764fa0
  4180ef:	iret   
  4180f0:	out    0x17,eax
  4180f2:	jne    0x4180a0
  4180f4:	js     0x418117
  4180f6:	xchg   dl,ah
  4180f8:	and    ebx,esi
  4180fa:	jmp    0x543eb97d
  4180ff:	jp     0x4180cb
  418101:	dec    esp
  418102:	clc    
  418103:	scas   eax,DWORD PTR es:[edi]
  418104:	sub    ebx,DWORD PTR [eax+0x60b829d9]
  41810a:	fs in  al,dx
  41810c:	sub    BYTE PTR [esp+ecx*1+0x3eb28746],dl
  418113:	stos   DWORD PTR es:[edi],eax
  418114:	mov    edx,DWORD PTR [ebx]
  418116:	fbld   TBYTE PTR [edi]
  418118:	pop    ds
  418119:	or     BYTE PTR [ebx-0x45],ah
  41811c:	cmp    edi,ebx
  41811e:	sub    edi,DWORD PTR [edi]
  418120:	in     al,0x2f
  418122:	(bad)  
  418123:	imul   esi,DWORD PTR [edx],0x32
  418126:	in     eax,dx
  418127:	cdq    
  418128:	sbb    eax,0xf3350bb8
  41812d:	push   ecx
  41812e:	jb     0x41811d
  418130:	pusha  
  418131:	or     al,0xa2
  418133:	sub    al,0x66
  418135:	cwde   
  418136:	xchg   ebx,eax
  418137:	mov    edx,0xccad2ace
  41813c:	inc    ebx
  41813d:	ins    DWORD PTR es:[edi],dx
  41813e:	and    eax,0x45a994e1
  418143:	mov    esp,0x36a7ea40
  418148:	pushf  
  418149:	sbb    ebx,DWORD PTR [edi]
  41814b:	xor    BYTE PTR [ebp-0x9c570d5],bl
  418151:	mov    ebx,0xadd417a4
  418156:	or     BYTE PTR [edi+edi*1-0x7237612b],cl
  41815d:	loopne 0x41811e
  41815f:	or     al,0xfa
  418161:	add    BYTE PTR [ebp-0x79],0x9a
  418165:	add    edx,DWORD PTR [eax-0x68792d24]
  41816b:	xchg   esi,eax
  41816c:	(bad)  
  41816d:	lds    eax,FWORD PTR [ebx-0x4878585d]
  418173:	retf   
  418174:	fidiv  WORD PTR [ebp+0x25859d4]
  41817a:	jge    0x418145
  41817c:	mov    ds:0x61f5527a,al
  418181:	(bad)  
  418182:	loope  0x4181f0
  418184:	out    dx,eax
  418185:	out    dx,al
  418186:	sbb    bl,BYTE PTR [edx-0x7436420d]
  41818c:	les    edi,FWORD PTR [edx+0x3]
  41818f:	popa   
  418190:	and    ebp,ecx
  418192:	aad    0x8f
  418194:	call   0x9748f963
  418199:	sar    DWORD PTR [ecx-0x50db66fd],0xd8
  4181a0:	mov    ds:0x2f4f954a,eax
  4181a5:	jae    0x4181b4
  4181a7:	sbb    ebp,DWORD PTR [edi-0xc]
  4181aa:	sub    edx,DWORD PTR [esi-0x5b]
  4181ad:	xchg   edi,esi
  4181af:	mov    DWORD PTR [ebx],eax
  4181b1:	aas    
  4181b2:	cmp    eax,ecx
  4181b4:	jle    0x418164
  4181b6:	xchg   esi,eax
  4181b7:	in     eax,dx
  4181b8:	jle    0x41813e
  4181ba:	mov    edi,0xa1c432d0
  4181bf:	lock sbb bh,BYTE PTR [esi+0x6c7cf6e2]
  4181c6:	push   cs
  4181c7:	retf   
  4181c8:	cmp    eax,0xd9234cbb
  4181cd:	in     eax,0x2e
  4181cf:	xchg   DWORD PTR [ecx+0x7ce0ce05],esi
  4181d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181d6:	xchg   ecx,eax
  4181d7:	lea    esi,[esi-0x5b]
  4181da:	repz jecxz 0x418249
  4181dd:	shl    ecx,0x7e
  4181e0:	cmp    BYTE PTR [eax],bl
  4181e2:	mov    ecx,0x70c01261
  4181e7:	and    al,al
  4181e9:	xor    dl,dl
  4181eb:	fist   DWORD PTR [ebx+0x74248669]
  4181f1:	push   ecx
  4181f2:	mov    bl,0xb2
  4181f4:	pop    esi
  4181f5:	or     DWORD PTR [edi-0x2dfbf211],0xe0a87a5d
  4181ff:	and    al,0x92
  418201:	add    dl,ah
  418203:	lahf   
  418204:	jnp    0x418285
  418206:	mov    cl,0x90
  418208:	jne    0x4181db
  41820a:	jp     0x4181b3
  41820c:	jg     0x4181b0
  41820e:	scas   eax,DWORD PTR es:[edi]
  41820f:	xor    DWORD PTR [ecx],ebx
  418211:	iret   
  418212:	dec    ecx
  418213:	pop    edx
  418214:	ds popf 
  418216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418217:	inc    esi
  418218:	in     al,0x9b
  41821a:	cdq    
  41821b:	adc    ebp,ebx
  41821d:	inc    esp
  41821e:	or     BYTE PTR [edi-0x5ccb7c8f],al
  418224:	sub    eax,0xf6768106
  418229:	pusha  
  41822a:	adc    BYTE PTR [edx-0x49477cc1],bl
  418230:	pop    ss
  418231:	cmp    BYTE PTR ds:0x2bffe70c,dh
  418237:	pop    ss
  418238:	cmp    dh,bl
  41823a:	jg     0x418210
  41823c:	into   
  41823d:	ja     0x418242
  41823f:	rcl    BYTE PTR [edx+0x5e66cde4],0xde
  418246:	sar    BYTE PTR [edi-0x3a],1
  418249:	and    BYTE PTR [eax+0x4ef841ec],dl
  41824f:	adc    ah,ah
  418251:	mov    eax,ds:0x534b1911
  418256:	sahf   
  418257:	push   ebx
  418258:	cmp    DWORD PTR [ebp+edi*2+0x3b8a9c0d],ecx
  41825f:	inc    edx
  418260:	test   al,0x72
  418262:	mov    eax,0x3fa6b48b
  418267:	push   eax
  418268:	and    BYTE PTR [ecx+0x27],dl
  41826b:	sbb    eax,0xf9b6ef87
  418270:	imul   edx,DWORD PTR [esi],0x74f8c269
  418276:	push   cs
  418277:	jge    0x4182bc
  418279:	test   DWORD PTR [eax-0x6d],ebx
  41827c:	jne    0x4182fd
  41827e:	push   edx
  41827f:	push   edx
  418280:	sub    DWORD PTR [eax-0x68b60f91],0xffffffed
  418287:	fisttp DWORD PTR [ebp-0x4c]
  41828a:	mov    al,BYTE PTR [edi+0x74]
  41828d:	add    al,0x3a
  41828f:	outs   dx,BYTE PTR ds:[esi]
  418290:	out    dx,eax
  418291:	(bad)  
  418292:	je     0x41821b
  418294:	jl     0x41828e
  418296:	xor    ebx,esp
  418298:	sti    
  418299:	in     eax,dx
  41829a:	adc    BYTE PTR [ebx-0x2e],ch
  41829d:	push   ebx
  41829e:	add    al,ah
  4182a0:	icebp  
  4182a1:	outs   dx,BYTE PTR ds:[esi]
  4182a2:	sbb    DWORD PTR [edx],esi
  4182a4:	arpl   WORD PTR [edi],dx
  4182a6:	imul   ebp,DWORD PTR [ecx],0xe273764c
  4182ac:	fs cmp eax,0xb0e07900
  4182b2:	xchg   esi,eax
  4182b3:	sti    
  4182b4:	jl     0x418322
  4182b6:	jo     0x41826d
  4182b8:	es sub cl,0x85
  4182bc:	or     ebp,DWORD PTR [ebx+0x16]
  4182bf:	push   ss
  4182c0:	mov    edi,0x4be88731
  4182c5:	aam    0xc9
  4182c7:	in     eax,0xf1
  4182c9:	iret   
  4182ca:	jge    0x4182db
  4182cc:	jge    0xbe101045
  4182d2:	loop   0x418281
  4182d4:	loope  0x418344
  4182d6:	test   BYTE PTR ds:0x7ca00364,ah
  4182dc:	cld    
  4182dd:	shr    BYTE PTR [edi-0x4a746a60],cl
  4182e3:	xor    ebx,ebx
  4182e5:	adc    BYTE PTR [eax],bl
  4182e7:	ja     0x41832f
  4182e9:	in     al,dx
  4182ea:	dec    ebp
  4182eb:	fbld   TBYTE PTR [edi]
  4182ed:	fist   WORD PTR [edi]
  4182ef:	dec    ebp
  4182f0:	and    BYTE PTR [edi+eiz*8],al
  4182f3:	xchg   edi,eax
  4182f4:	mov    edi,0x1cf875d6
  4182f9:	inc    edi
  4182fa:	adc    bl,BYTE PTR [ecx+ebx*8+0x79e89ed5]
  418301:	xor    ecx,ebx
  418303:	sar    BYTE PTR [esi+edi*8],0xd4
  418307:	or     dl,BYTE PTR [ecx-0x77]
  41830a:	jmp    FWORD PTR [ebp-0x1a0d4598]
  418310:	pusha  
  418311:	shl    ah,cl
  418313:	into   
  418314:	in     al,0xbf
  418316:	sub    DWORD PTR [edx+0x33],esp
  418319:	sub    esp,ebx
  41831b:	mov    eax,0x70bf87b7
  418320:	(bad)  
  418321:	out    0x61,eax
  418323:	nop
  418324:	pop    ebx
  418325:	sahf   
  418326:	xor    al,0x78
  418328:	gs pushf 
  41832a:	and    DWORD PTR [esi],0xffffffdd
  41832d:	sub    eax,0xb8311517
  418332:	mov    edi,0xb6e3f76f
  418337:	ds jle 0x4182c0
  41833a:	adc    eax,0x1e2486f8
  41833f:	dec    ebx
  418340:	xchg   ecx,eax
  418341:	outs   dx,BYTE PTR ds:[esi]
  418342:	adc    esp,edi
  418344:	les    esp,FWORD PTR [edi+eax*8+0x729cae0]
  41834b:	fdiv   DWORD PTR [ebx]
  41834d:	jmp    0x41838f
  41834f:	jno    0x41832e
  418351:	or     ebp,DWORD PTR [esi-0x54]
  418354:	mov    cl,0x6d
  418356:	pusha  
  418357:	sti    
  418358:	push   es
  418359:	xchg   DWORD PTR [ebx-0x71],esp
  41835c:	rcl    ecx,1
  41835e:	out    0xa6,eax
  418360:	lea    edi,[ebp+0x3f3d1cad]
  418366:	push   es
  418367:	aas    
  418368:	mov    DWORD PTR [ebx],edi
  41836a:	mov    bh,0xe3
  41836c:	jl     0x418396
  41836e:	fstp   QWORD PTR [ebp-0x8371cc3]
  418374:	rol    DWORD PTR [edi+0x67b14a06],cl
  41837a:	sub    eax,0x8b6c69a7
  41837f:	test   eax,0xc7016afd
  418384:	jl     0x418390
  418386:	or     al,bh
  418388:	or     edi,DWORD PTR [edx+0x62]
  41838b:	mov    edi,0x9ea386ba
  418390:	jne    0x4183f9
  418392:	pusha  
  418393:	out    dx,al
  418394:	sub    al,0xc0
  418396:	pop    ebp
  418397:	mov    BYTE PTR [edi+0x3e],dh
  41839a:	icebp  
  41839b:	mov    dl,0x79
  41839d:	push   cs
  41839e:	jmp    0x418328
  4183a0:	aaa    
  4183a1:	nop
  4183a2:	imul   DWORD PTR [ebx-0x5b]
  4183a5:	mov    eax,0x2e5e048e
  4183aa:	or     al,0x14
  4183ac:	pop    ebp
  4183ad:	mov    al,ds:0x535bd65a
  4183b2:	sub    DWORD PTR [ecx+0x2b07eeaf],ebp
  4183b8:	ret    0xcdfb
  4183bb:	ins    BYTE PTR es:[edi],dx
  4183bc:	daa    
  4183bd:	jnp    0x418407
  4183bf:	pop    edi
  4183c0:	scas   eax,DWORD PTR es:[edi]
  4183c1:	pop    edx
  4183c2:	enter  0x21b6,0xf3
  4183c6:	or     cl,al
  4183c8:	mov    edi,0x166087bb
  4183cd:	in     eax,dx
  4183ce:	(bad)  
  4183cf:	std    
  4183d0:	cdq    
  4183d1:	add    al,0x16
  4183d3:	in     eax,dx
  4183d4:	sub    eax,0x9670bdf6
  4183d9:	loopne 0x418418
  4183db:	add    eax,0x121e0779
  4183e0:	popf   
  4183e1:	and    DWORD PTR [ecx+0x65],ecx
  4183e4:	sbb    eax,0x294eeeae
  4183e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183ea:	test   BYTE PTR [bx+di-0x61],ch
  4183ee:	(bad)  
  4183ef:	fbstp  TBYTE PTR [ebx+0x1e]
  4183f2:	cmc    
  4183f3:	popf   
  4183f4:	shl    BYTE PTR [edx-0x6ed8cf8d],0x40
  4183fb:	loopne 0x41846e
  4183fd:	or     ebp,DWORD PTR [edi]
  4183ff:	call   0x6eb3:0x6879048d
  418406:	dec    esp
  418407:	ins    DWORD PTR es:[edi],dx
  418408:	pop    ss
  418409:	or     edx,DWORD PTR [edi+0x3779b2e9]
  41840f:	push   ebx
  418410:	mov    ds:0xb922e021,al
  418415:	push   ss
  418416:	sti    
  418417:	inc    esp
  418418:	not    DWORD PTR [ecx+edx*2]
  41841b:	in     al,0x99
  41841d:	sub    BYTE PTR [ecx],dh
  41841f:	stos   BYTE PTR es:[edi],al
  418420:	inc    edi
  418421:	or     DWORD PTR [ecx-0x53889829],ebx
  418427:	int3   
  418428:	mov    edi,0x2a0eac5
  41842d:	in     al,0x21
  41842f:	and    esi,DWORD PTR [ecx]
  418431:	sub    dl,dh
  418433:	retf   
  418434:	dec    ecx
  418435:	pop    eax
  418436:	sub    BYTE PTR [ebp+0x63],dh
  418439:	push   eax
  41843a:	loopne 0x4183c2
  41843c:	xchg   esp,eax
  41843d:	sbb    ah,BYTE PTR [edx]
  41843f:	jge    0x4184be
  418441:	inc    edi
  418442:	ror    DWORD PTR [eax+0xb8c5cab],0xd4
  418449:	imul   ecx,DWORD PTR fs:[eax],0x6b
  41844d:	out    0xec,al
  41844f:	imul   ecx,esi,0x43b20514
  418455:	mov    ebx,0xfcca92de
  41845a:	enter  0x38b3,0x1d
  41845e:	in     eax,dx
  41845f:	ss imul dh
  418462:	push   es
  418463:	aam    0x93
  418465:	imul   esi,DWORD PTR [ebx+0x146db4e4],0xe962b5b3
  41846f:	pop    es
  418470:	jns    0x418444
  418472:	mov    ebp,0x4cc28c30
  418477:	fld    DWORD PTR [esi-0x52]
  41847a:	pop    ss
  41847b:	inc    esi
  41847c:	outs   dx,BYTE PTR ds:[si]
  41847e:	add    BYTE PTR [edx-0x62],0x9e
  418482:	popa   
  418483:	sub    BYTE PTR [eax+esi*1+0x6a],dh
  418487:	rcl    DWORD PTR [esi-0x1bac3d90],0xcd
  41848e:	ss cmc 
  418490:	push   ebp
  418491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418492:	nop
  418493:	adc    edi,DWORD PTR [edx+0x68ecd769]
  418499:	mov    cl,BYTE PTR cs:[ecx+0x4d]
  41849d:	xchg   edx,eax
  41849e:	inc    esi
  41849f:	fdiv   DWORD PTR [edi+0x7e]
  4184a2:	jmp    0x418501
  4184a4:	dec    esp
  4184a5:	or     eax,0x662c2513
  4184aa:	mov    bl,0x1c
  4184ac:	addr16 (bad) 
  4184ae:	test   DWORD PTR [esi],0xa961a4d4
  4184b4:	outs   dx,BYTE PTR ds:[esi]
  4184b5:	shl    BYTE PTR [ebp-0x690d9a75],cl
  4184bb:	jle    0x4184d8
  4184bd:	retf   
  4184be:	arpl   WORD PTR [ebx-0x5c88713d],bp
  4184c4:	adc    esp,ecx
  4184c6:	add    ax,0x7b78
  4184ca:	cdq    
  4184cb:	jns    0x4184c2
  4184cd:	(bad)  
  4184ce:	retf   
  4184cf:	xor    ebx,DWORD PTR [edx]
  4184d1:	add    BYTE PTR [eax-0x23fcf92b],dh
  4184d7:	adc    al,0x8a
  4184d9:	mov    ds:0x288010bf,al
  4184de:	jg     0x418466
  4184e0:	(bad)
  4184e4:	mov    edx,0x2a6ce6a8
  4184e9:	aam    0x15
  4184eb:	mov    dl,0xb7
  4184ed:	xor    al,0x43
  4184ef:	pop    esi
  4184f0:	xchg   ebx,eax
  4184f1:	sub    eax,0x22e615dc
  4184f6:	aam    0xc
  4184f8:	jo     0x41856d
  4184fa:	and    ebx,esi
  4184fc:	or     al,0xa4
  4184fe:	mov    ebp,DWORD PTR [edi]
  418500:	(bad)  [ecx+0x257e97e5]
  418506:	pop    ss
  418507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418508:	arpl   WORD PTR [esi+ecx*1-0x64],dx
  41850c:	cmp    eax,0x492c4972
  418511:	pop    eax
  418512:	call   0x5219618f
  418517:	fmul   DWORD PTR [esi]
  418519:	pop    ss
  41851a:	iret   
  41851b:	test   DWORD PTR [esi],esi
  41851d:	test   BYTE PTR [eax+0x77],ch
  418520:	sbb    bh,BYTE PTR [ecx-0x59]
  418523:	sub    eax,0xb2cfeeb7
  418528:	ror    DWORD PTR [esi-0x1a],0xb8
  41852c:	xor    eax,esp
  41852e:	ret    0x8969
  418531:	aad    0x21
  418533:	or     DWORD PTR [eax],edi
  418535:	rcr    DWORD PTR [eax],0x9a
  418538:	js     0x4184e8
  41853a:	dec    esi
  41853b:	mov    ebx,0x23848b7f
  418540:	call   0xefaa921f
  418545:	add    esp,ebx
  418547:	sahf   
  418548:	test   ebp,edx
  41854a:	and    DWORD PTR [ebp-0x2d74daa],esp
  418550:	jns    0x4185a9
  418552:	cmp    al,0x73
  418554:	nop
  418555:	ins    BYTE PTR es:[edi],dx
  418556:	sbb    ecx,DWORD PTR ds:0xd5de83d0
  41855c:	(bad)
  418560:	mov    al,0xd5
  418562:	inc    esp
  418563:	sbb    dl,bl
  418565:	rol    DWORD PTR [eax+0x4],1
  418568:	scas   eax,DWORD PTR es:[edi]
  418569:	and    edx,ebp
  41856b:	jge    0x418581
  41856d:	nop
  41856e:	fst    QWORD PTR [ecx]
  418570:	jb     0x4184f9
  418572:	push   ebx
  418573:	fld    QWORD PTR [edi]
  418575:	enter  0x21ac,0xa4
  418579:	ret    
  41857a:	push   0x14
  41857c:	add    al,0xec
  41857e:	(bad)  
  41857f:	js     0x418564
  418581:	pop    esp
  418582:	fiadd  DWORD PTR [edi+ebp*8]
  418585:	ds or  ax,0xd94e
  41858a:	jmp    0xf7a50b79
  41858f:	fdiv   DWORD PTR [eax]
  418591:	loope  0x4185a9
  418593:	lock lds edx,FWORD PTR [eax+0x76a32d67]
  41859a:	dec    ebp
  41859b:	cli    
  41859c:	popa   
  41859d:	sub    bl,bh
  41859f:	icebp  
  4185a0:	dec    esi
  4185a1:	fnstsw WORD PTR fs:[edx]
  4185a4:	or     DWORD PTR [di],esi
  4185a7:	sbb    ch,dh
  4185a9:	gs call 0x548:0x81e6f5e
  4185b1:	push   ss
  4185b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185b3:	push   edx
  4185b4:	pop    ebp
  4185b5:	sbb    edi,ecx
  4185b7:	add    eax,0x59aff73
  4185bc:	nop
  4185bd:	pop    edi
  4185be:	xchg   DWORD PTR es:[ecx+0x69],ebx
  4185c2:	out    dx,al
  4185c3:	fsubr  QWORD PTR [edi-0x7b]
  4185c6:	scas   al,BYTE PTR es:[edi]
  4185c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185c8:	loop   0x418644
  4185ca:	fstp   DWORD PTR [edx]
  4185cc:	pop    edi
  4185cd:	mov    al,0xf0
  4185cf:	xchg   ebx,eax
  4185d0:	inc    esi
  4185d1:	icebp  
  4185d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d3:	sbb    DWORD PTR [ebx],eax
  4185d5:	adc    esi,DWORD PTR [eax]
  4185d7:	and    eax,0x62e90ad4
  4185dc:	adc    ecx,DWORD PTR [edx+0x44]
  4185df:	mov    ah,0x1d
  4185e1:	imul   eax,DWORD PTR [eax-0x7d],0x491614ee
  4185e8:	dec    edx
  4185ea:	jle    0x41858a
  4185ec:	pushf  
  4185ed:	mov    ecx,0xb9e14210
  4185f2:	push   es
  4185f3:	sbb    eax,eax
  4185f5:	sbb    al,0xb8
  4185f7:	int    0x11
  4185f9:	scas   eax,DWORD PTR es:[edi]
  4185fa:	repnz mov esp,0x294a65d9
  418600:	scas   al,BYTE PTR es:[edi]
  418601:	daa    
  418602:	adc    al,ch
  418604:	shl    ebp,0xcf
  418607:	inc    ebp
  418608:	pop    ecx
  418609:	daa    
  41860a:	xor    BYTE PTR [ecx],0xd1
  41860d:	mov    al,ds:0xd1fc65c2
  418612:	xchg   ebp,eax
  418613:	mov    ?,WORD PTR [edi]
  418615:	mov    dh,0x54
  418617:	sub    eax,0xe3eaf296
  41861c:	je     0x418641
  41861e:	push   0x3f
  418620:	jp     0x4185cc
  418622:	arpl   WORD PTR [ebp-0x32],ax
  418625:	inc    ebp
  418626:	add    dh,0xdd
  418629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862a:	pop    es
  41862b:	gs icebp 
  41862d:	cmovo  esp,DWORD PTR [ebx-0x6c]
  418631:	add    DWORD PTR [edx],0xdb33bcd8
  418637:	clc    
  418638:	mov    ebx,0xbd58f27
  41863d:	mov    eax,ds:0x7e7a9b21
  418642:	push   ebp
  418643:	mov    ecx,0x310cebf1
  418648:	mov    eax,ds:0xa277bb19
  41864d:	and    eax,0x47159672
  418652:	sahf   
  418653:	popf   
  418654:	xlat   BYTE PTR ds:[ebx]
  418655:	pop    ebp
  418656:	lods   al,BYTE PTR ds:[esi]
  418657:	test   al,0x19
  418659:	(bad)  
  41865a:	sbb    eax,0xda45c683
  41865f:	jl     0x41860a
  418661:	mov    al,dh
  418663:	repz mov ebp,0x66f4e208
  418669:	or     bh,BYTE PTR [edx+ecx*1]
  41866c:	jnp    0x41864b
  41866e:	push   eax
  41866f:	fmulp  st(1),st
  418671:	dec    DWORD PTR [edi]
  418673:	pop    edi
  418674:	mov    WORD PTR [ebx],cs
  418676:	neg    BYTE PTR [ecx*1+0x93aa01d]
  41867d:	jns    0x418679
  41867f:	fs inc ecx
  418681:	pop    edi
  418682:	xchg   ebx,eax
  418683:	jmp    0x4186c3
  418685:	(bad)  
  418686:	call   0x663d1a9a
  41868b:	and    edx,ecx
  41868d:	in     al,0x22
  41868f:	mov    al,ds:0x37fa93c4
  418694:	sub    al,0xc5
  418696:	mov    edi,0x3a840d2c
  41869b:	mov    DWORD PTR [ebx+0x71bf5d96],edi
  4186a1:	loope  0x4186f7
  4186a3:	and    eax,0x2e5b1b02
  4186a8:	inc    ebx
  4186a9:	jbe    0x418640
  4186ab:	ss pop esi
  4186ad:	outs   dx,BYTE PTR ds:[esi]
  4186ae:	sahf   
  4186af:	mov    edi,0x7e717f44
  4186b4:	fsub   st(4),st
  4186b6:	xor    ebp,0xfffffffa
  4186b9:	loop   0x418712
  4186bb:	(bad)  
  4186bc:	(bad)  [ebx+0x6]
  4186bf:	push   ds
  4186c0:	cwde   
  4186c1:	pop    ecx
  4186c2:	imul   eax,DWORD PTR [ebx-0x5a5ebf56],0xc36a6ec6
  4186cc:	imul   eax,ebp,0xffffffb1
  4186cf:	push   es
  4186d0:	sbb    al,dh
  4186d2:	sub    BYTE PTR [ebp+esi*8+0x4a],ah
  4186d6:	rol    BYTE PTR [esi-0x30],cl
  4186d9:	rol    BYTE PTR [edx-0x66],cl
  4186dc:	mov    ah,0xe2
  4186de:	mov    al,ds:0xd46134d8
  4186e3:	inc    ecx
  4186e4:	add    eax,0x1da481e6
  4186e9:	stos   DWORD PTR es:[edi],eax
  4186ea:	sbb    BYTE PTR [edx-0x42f38685],ah
  4186f0:	das    
  4186f1:	push   edx
  4186f2:	aad    0xde
  4186f4:	cdq    
  4186f5:	inc    eax
  4186f6:	xor    edi,edx
  4186f8:	hlt    
  4186f9:	cmp    dl,dh
  4186fb:	inc    edi
  4186fc:	outs   dx,DWORD PTR ds:[esi]
  4186fd:	ins    DWORD PTR es:[edi],dx
  4186fe:	pop    ebp
  4186ff:	xchg   esp,eax
  418700:	mov    dh,0xb3
  418702:	sbb    al,0x6d
  418704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418705:	jne    0x4186f9
  418707:	or     al,0xc5
  418709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41870a:	xor    ah,BYTE PTR [edx+0x31]
  41870d:	(bad)  
  41870e:	jb     0x418735
  418710:	arpl   WORD PTR [esi],sp
  418712:	ins    DWORD PTR es:[edi],dx
  418713:	mov    BYTE PTR [esi],0xe9
  418716:	mov    ecx,0x1e3b5ec5
  41871b:	enter  0xb395,0x37
  41871f:	jae    0x41871b
  418721:	test   eax,0x52694eba
  418726:	mov    ds:0x20dd110,eax
  41872b:	in     al,0xde
  41872d:	fisttp WORD PTR [esi+0x7b]
  418730:	mov    ebp,0xf7e7f09e
  418735:	sbb    DWORD PTR [ebp-0x4e488ea5],edi
  41873b:	sti    
  41873c:	ret    0x82c9
  41873f:	xor    eax,0xc02157bc
  418744:	and    al,0xc0
  418746:	inc    DWORD PTR [edi]
  418748:	in     eax,dx
  418749:	gs xor eax,0xb47e7eda
  41874f:	mov    ecx,0xe4a71621
  418754:	pop    esi
  418755:	shl    DWORD PTR [eax],0xa2
  418758:	in     al,0xd2
  41875a:	aaa    
  41875b:	out    dx,eax
  41875c:	push   ds
  41875d:	pusha  
  41875e:	mov    edx,0x90ae7a8f
  418763:	dec    esp
  418764:	sbb    al,0xab
  418766:	push   ebp
  418767:	xchg   esi,eax
  418768:	jge    0x41878c
  41876a:	cli    
  41876b:	sbb    BYTE PTR [ecx-0x26],cl
  41876e:	mov    eax,ds:0x1a7c6ed6
  418773:	sub    bh,0x8e
  418776:	mov    WORD PTR [ecx-0x5b],es
  418779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41877a:	mov    bh,0xdf
  41877c:	cli    
  41877d:	inc    esp
  41877e:	jno    0x418758
  418780:	and    DWORD PTR [ecx*2+0x11289b3f],0x235c48f9
  41878b:	int    0xc8
  41878d:	mov    cl,0x24
  41878f:	cmp    eax,0x39cc7e9c
  418794:	mov    ch,0xb6
  418796:	in     eax,dx
  418797:	dec    esp
  418798:	cmp    dh,BYTE PTR [ebx+edx*4-0x5]
  41879c:	retf   
  41879d:	into   
  41879e:	cld    
  41879f:	mov    edx,0xfb110c8f
  4187a4:	push   esi
  4187a5:	lods   eax,DWORD PTR ds:[esi]
  4187a6:	mov    bl,0xfa
  4187a8:	and    BYTE PTR [ebp-0x40c8260f],ch
  4187ae:	pusha  
  4187af:	inc    eax
  4187b0:	push   0x850afd52
  4187b5:	gs data16 sub al,0x84
  4187b9:	and    esp,DWORD PTR [esi-0x50627b3b]
  4187bf:	sbb    ebx,esp
  4187c1:	in     eax,dx
  4187c2:	jo     0x4187e8
  4187c4:	sbb    edi,DWORD PTR [ecx-0x1a]
  4187c7:	push   ecx
  4187c8:	fstp   QWORD PTR [ebx+0x7ef0eb79]
  4187ce:	sbb    BYTE PTR [ebx],ah
  4187d0:	ret    0x2fd9
  4187d3:	sub    DWORD PTR ds:0xd1ab1a7a,ebp
  4187d9:	push   eax
  4187da:	push   es
  4187db:	icebp  
  4187dc:	or     al,0x17
  4187de:	scas   al,BYTE PTR es:[edi]
  4187df:	fcomp  st(5)
  4187e1:	inc    ebx
  4187e2:	sbb    eax,0xb8f02ac8
  4187e7:	mov    ecx,0x7d9e5a0e
  4187ec:	sbb    BYTE PTR [edi],cl
  4187ee:	mov    bh,0x9c
  4187f0:	popf   
  4187f1:	cmp    DWORD PTR [edx],edx
  4187f3:	iret   
  4187f4:	ja     0x418870
  4187f6:	xrelease mov DWORD PTR [esi],edx
  4187f9:	xor    al,0x64
  4187fb:	pop    ss
  4187fc:	in     al,0x1a
  4187fe:	test   al,0x1e
  418800:	cdq    
  418801:	in     al,dx
  418802:	xor    BYTE PTR [edi],ch
  418804:	push   ecx
  418805:	mov    ebp,0x3b6dedb1
  41880a:	mov    al,ds:0xfdea5bba
  41880f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418810:	jns    0x418840
  418812:	mov    eax,0x7a151a5f
  418817:	push   esp
  418818:	xchg   esp,eax
  418819:	fnclex 
  41881b:	leave  
  41881c:	mov    bh,0x92
  41881e:	jns    0x418843
  418820:	adc    DWORD PTR [edx+0x5ba75a0a],eax
  418826:	scas   eax,DWORD PTR es:[edi]
  418827:	pop    ecx
  418828:	pusha  
  418829:	sbb    eax,0x2530edfd
  41882e:	pop    ebp
  41882f:	ins    BYTE PTR es:[edi],dx
  418830:	in     al,0xfd
  418832:	imul   eax,DWORD PTR [ecx],0x75
  418835:	lea    esp,[eax]
  418837:	out    dx,eax
  418838:	mov    esi,0xaf2a5a03
  41883d:	push   ds
  41883e:	ins    DWORD PTR es:[edi],dx
  41883f:	popa   
  418840:	mov    DWORD PTR [ebp+0x54],esp
  418843:	push   ecx
  418844:	aaa    
  418845:	pop    esi
  418846:	lds    edx,FWORD PTR [ebx]
  418848:	inc    ebx
  418849:	ja     0x4187fa
  41884b:	retf   0x118e
  41884e:	jb     0x4187fa
  418850:	sbb    al,BYTE PTR [ebp-0x2a]
  418853:	add    BYTE PTR [esi],al
  418855:	pusha  
  418856:	xchg   esp,edi
  418858:	imul   edi,DWORD PTR [eax-0x6cd4cf43],0xb9fa55d6
  418862:	jb     0x4188b4
  418864:	test   BYTE PTR [ecx+0x2b],cl
  418867:	lods   al,BYTE PTR ds:[esi]
  418868:	scas   eax,DWORD PTR es:[edi]
  418869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41886a:	iret   
  41886b:	fisub  DWORD PTR [edx]
  41886d:	or     ah,bh
  41886f:	mov    dl,0x1e
  418871:	jle    0x4188bc
  418873:	mov    bl,0xd7
  418875:	sub    ch,BYTE PTR [esi-0xba23a66]
  41887b:	pop    ds
  41887c:	lods   eax,DWORD PTR ds:[esi]
  41887d:	xchg   ebx,eax
  41887e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41887f:	call   0x3f973c04
  418884:	jmp    0x41889f
  418886:	pop    ebp
  418887:	stc    
  418888:	(bad)  
  418889:	jmp    0x688a:0xdcb6688c
  418890:	push   0x4a
  418892:	ret    
  418893:	mov    eax,ds:0xe44ab17d
  418898:	lahf   
  418899:	ror    DWORD PTR [ebp-0x46c6a166],cl
  41889f:	fnstcw WORD PTR [edx]
  4188a1:	lea    esi,[esi+0x68868afc]
  4188a7:	mov    ecx,0xdec00d6c
  4188ac:	outs   dx,DWORD PTR ds:[esi]
  4188ad:	jb     0x418875
  4188af:	xchg   edx,eax
  4188b0:	pop    esi
  4188b1:	les    esp,FWORD PTR [edx+0x12]
  4188b4:	repz sub al,ch
  4188b7:	xor    edi,DWORD PTR [edi+0xd2cdeaa]
  4188bd:	add    cl,BYTE PTR [ebx]
  4188bf:	ja     0x41887d
  4188c1:	call   0x30f0:0x1206206d
  4188c8:	mov    DWORD PTR [ebx+0x39],0xaec62b8b
  4188cf:	jae    0x418915
  4188d1:	pop    eax
  4188d2:	scas   eax,DWORD PTR es:[edi]
  4188d3:	hlt    
  4188d4:	into   
  4188d5:	push   esi
  4188d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188d7:	inc    edx
  4188d8:	and    DWORD PTR [edx-0x59],edi
  4188db:	(bad)  [eax]
  4188dd:	lea    esi,[edi+0x11]
  4188e0:	jns    0x4188ae
  4188e2:	mov    edx,DWORD PTR [ecx-0x43ede0a0]
  4188e8:	fstp   QWORD PTR [edx-0x1c]
  4188eb:	pop    edx
  4188ec:	imul   eax,edx,0x750166d5
  4188f2:	adc    BYTE PTR [esi+0x60],dh
  4188f5:	es jo  0x4188bc
  4188f8:	sub    BYTE PTR [eax-0x7239b34d],0xca
  4188ff:	inc    ecx
  418900:	xchg   edx,eax
  418901:	inc    ecx
  418902:	retf   
  418903:	adc    al,0xc0
  418905:	call   0x275d:0xef967497
  41890c:	popf   
  41890d:	push   ds
  41890e:	sub    al,0xce
  418910:	pop    esi
  418911:	cmp    ebx,DWORD PTR [ecx-0x6b]
  418914:	lea    ebp,[ebx]
  418916:	fmul   DWORD PTR [esi+0x57]
  418919:	mov    ecx,0x9c647cad
  41891e:	mov    dh,0x34
  418920:	pop    edi
  418921:	pop    esi
  418922:	call   0x5772afc9
  418927:	loop   0x41898a
  418929:	ror    BYTE PTR [esi],0x44
  41892c:	inc    eax
  41892d:	mov    ebx,0xe90b4883
  418932:	in     eax,dx
  418933:	xchg   BYTE PTR [ebx+0x2f],ch
  418936:	sahf   
  418937:	cmp    al,0x3f
  418939:	mov    bh,0x3d
  41893b:	dec    edi
  41893c:	rcl    BYTE PTR [eax+0x6508a854],1
  418942:	jmp    0x4188d1
  418944:	pop    edi
  418945:	cmp    ecx,DWORD PTR ds:0xfe2640b3
  41894b:	enter  0xeaea,0x13
  41894f:	cmp    eax,0x4835af8d
  418954:	jg     0x418988
  418956:	mov    cl,0x33
  418958:	loope  0x418954
  41895a:	pop    edi
  41895b:	mov    ds:0x852d2e19,al
  418960:	xchg   esi,eax
  418961:	jnp    0x4188e6
  418963:	pop    ebp
  418964:	retf   
  418965:	stos   BYTE PTR es:[edi],al
  418966:	dec    esi
  418967:	jae    0x4188ec
  418969:	pop    ecx
  41896a:	call   0x4fe5:0x4615ca96
  418971:	pop    es
  418972:	shl    DWORD PTR [edx+edx*8-0x59],cl
  418976:	arpl   WORD PTR [ebp+0x6bef33eb],dx
  41897c:	aaa    
  41897d:	div    DWORD PTR [ebp-0x74]
  418980:	adc    DWORD PTR [eax+0x66],0x1d3c498d
  418987:	int3   
  418988:	cli    
  418989:	mov    edi,0xf1d029fd
  41898e:	call   0xcaf2:0x7dc2279b
  418995:	push   esp
  418996:	and    esp,DWORD PTR [esi+0x66b164d7]
  41899c:	sbb    al,0xa6
  41899e:	mov    esi,0xe9b7268
  4189a3:	or     DWORD PTR ds:0xb38ed724,ecx
  4189a9:	push   esi
  4189aa:	fs push eax
  4189ac:	in     eax,dx
  4189ad:	pushf  
  4189ae:	in     al,dx
  4189af:	daa    
  4189b0:	mul    ebx
  4189b2:	xor    DWORD PTR [ebp-0x4cac1f66],esi
  4189b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b9:	add    DWORD PTR [eax],ebp
  4189bb:	mov    al,ds:0xdbd62b39
  4189c0:	mov    edi,0x6fd412cf
  4189c5:	xchg   edi,eax
  4189c6:	nop
  4189c7:	stc    
  4189c8:	pop    ss
  4189c9:	mov    bh,0xc9
  4189cb:	push   ebp
  4189cc:	and    al,0x65
  4189ce:	(bad)  
  4189d0:	(bad)  
  4189d1:	jmp    0x418957
  4189d3:	xchg   ecx,eax
  4189d4:	clc    
  4189d5:	cmp    BYTE PTR [ecx-0x6a],0xfc
  4189d9:	sub    BYTE PTR ds:0xf70a84d1,0xbd
  4189e0:	jne    0x418a5c
  4189e2:	loopne 0x418a51
  4189e4:	ins    BYTE PTR es:[edi],dx
  4189e5:	adc    edx,DWORD PTR ds:[esi]
  4189e8:	sbb    DWORD PTR [ecx-0x44b52c0b],0x7e552e4b
  4189f2:	imul   ebp,DWORD PTR [edx+0x40],0x6ce4ae41
  4189f9:	popa   
  4189fa:	xor    eax,0xac027c46
  4189ff:	and    ebx,edi
  418a01:	or     esp,ebp
  418a03:	inc    esi
  418a04:	das    
  418a05:	pop    ebx
  418a06:	sbb    dl,BYTE PTR [eax+0x3d1ea881]
  418a0c:	hlt    
  418a0d:	jo     0x418a89
  418a0f:	xchg   edx,eax
  418a10:	out    0xfa,eax
  418a12:	xor    ebx,esi
  418a14:	cmp    al,0x73
  418a16:	std    
  418a17:	sbb    eax,0x555ab1b
  418a1c:	addr16 addr16 jge 0x4189d8
  418a20:	or     DWORD PTR [edx-0x3832157],esp
  418a26:	mov    ebp,0xaa6d29fc
  418a2b:	cmc    
  418a2c:	push   ebp
  418a2d:	mov    bl,0xb6
  418a2f:	inc    ebx
  418a30:	or     eax,0x9cd63bc6
  418a35:	test   al,0xf8
  418a37:	scas   eax,DWORD PTR es:[edi]
  418a38:	ins    DWORD PTR es:[edi],dx
  418a39:	out    dx,al
  418a3a:	(bad)  
  418a3b:	repnz pop ebp
  418a3d:	mov    al,ds:0xeea9c855
  418a42:	xchg   ebp,eax
  418a43:	(bad)  
  418a44:	cmc    
  418a45:	xor    BYTE PTR [edx-0x765c5939],al
  418a4b:	ficomp DWORD PTR [esi-0x553bfc55]
  418a51:	sahf   
  418a52:	in     al,dx
  418a53:	adc    cl,BYTE PTR [edi-0xc4b1a1d]
  418a59:	mov    esi,DWORD PTR [esi-0x3ffa3173]
  418a5f:	push   ebx
  418a60:	adc    al,0xa2
  418a62:	sub    eax,0x6b764e25
  418a67:	popf   
  418a68:	sbb    ah,BYTE PTR [esi+eiz*1-0x6e70386a]
  418a6f:	aam    0x2a
  418a71:	mov    BYTE PTR ds:0x6ac5ac0,bh
  418a77:	loope  0x4189ff
  418a79:	in     eax,0x45
  418a7b:	inc    ebx
  418a7c:	add    eax,0xc7e7034b
  418a81:	(bad)  
  418a82:	xchg   ecx,eax
  418a83:	xor    DWORD PTR [esi],ecx
  418a85:	sub    ebx,DWORD PTR [ecx+eax*2+0x5]
  418a89:	push   ss
  418a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a8b:	(bad)  [ebx]
  418a8d:	(bad)  
  418a8e:	jmp    0x418abe
  418a90:	(bad)  
  418a92:	xchg   BYTE PTR [ebp+ebp*8+0x1ebc0b24],bl
  418a99:	dec    edx
  418a9a:	mov    esp,0x2b7fce48
  418a9f:	daa    
  418aa0:	push   0xffffff9a
  418aa2:	in     eax,0x47
  418aa4:	hlt    
  418aa5:	jno    0x418b0f
  418aa7:	cmp    DWORD PTR [esi+edx*4-0x70f81ebd],ebx
  418aae:	icebp  
  418aaf:	ret    0x16a9
  418ab2:	popa   
  418ab3:	mov    DWORD PTR [edi],0x9f063aed
  418ab9:	xor    dl,cl
  418abb:	bound  ebp,QWORD PTR [eax]
  418abd:	(bad)  
  418abe:	pop    edi
  418abf:	stos   BYTE PTR es:[edi],al
  418ac0:	ds mov esi,0x7733588b
  418ac6:	jmp    0x418b28
  418ac8:	xor    dl,BYTE PTR [esi+0x47fc0036]
  418ace:	jnp    0x418b35
  418ad0:	jecxz  0x418a77
  418ad2:	fs dec ebp
  418ad4:	or     eax,0x4b59a5bb
  418ad9:	test   BYTE PTR [esi-0x529687da],al
  418adf:	inc    eax
  418ae0:	ds dec eax
  418ae2:	loope  0x418b0b
  418ae4:	je     0x418ade
  418ae6:	jp     0x418b1e
  418ae8:	call   FWORD PTR [edi]
  418aea:	hlt    
  418aeb:	aad    0x4c
  418aed:	jnp    0x418b48
  418aef:	jecxz  0x418b40
  418af1:	lods   al,BYTE PTR ds:[esi]
  418af2:	shr    DWORD PTR ds:0x6a7e6972,0xa6
  418af9:	outs   dx,DWORD PTR ds:[esi]
  418afa:	dec    eax
  418afb:	mov    ebx,0x944d3697
  418b00:	jnp    0x418b2d
  418b02:	in     eax,dx
  418b03:	mov    es,esi
  418b05:	leave  
  418b06:	adc    eax,0x57edebc4
  418b0b:	outs   dx,BYTE PTR ds:[esi]
  418b0c:	jecxz  0x418b46
  418b0e:	sbb    eax,0xdb6af854
  418b13:	lock inc ebp
  418b15:	dec    ebx
  418b16:	sti    
  418b17:	test   DWORD PTR [ecx],edi
  418b19:	out    dx,eax
  418b1a:	sub    al,0xcd
  418b1c:	data16 lods al,BYTE PTR ds:[esi]
  418b1e:	adc    edi,DWORD PTR [ecx]
  418b20:	stos   DWORD PTR es:[edi],eax
  418b21:	cli    
  418b22:	test   eax,0xe729f3c7
  418b27:	inc    ecx
  418b28:	std    
  418b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b2a:	pop    esi
  418b2b:	jns    0x418af0
  418b2d:	xor    BYTE PTR [ecx],cl
  418b2f:	jnp    0x418b4d
  418b31:	or     BYTE PTR [ebx-0x756206b4],dl
  418b37:	dec    esp
  418b38:	mov    BYTE PTR [ebx+0x56],cl
  418b3b:	adc    al,0xed
  418b3d:	aaa    
  418b3e:	mov    dl,0x9f
  418b40:	mov    esp,DWORD PTR [ecx+0x627fef2d]
  418b46:	adc    al,0x12
  418b48:	hlt    
  418b49:	mov    esp,0x490390c1
  418b4e:	sbb    al,0x3b
  418b50:	call   0x3e55:0x919a43f4
  418b57:	add    eax,0xc1f1aa5b
  418b5c:	mov    bh,0x51
  418b5e:	pop    edi
  418b5f:	in     al,0xa2
  418b61:	js     0x418b84
  418b63:	stc    
  418b64:	add    BYTE PTR [bp+si-0xbd],bh
  418b69:	mov    ebx,0x4b122823
  418b6e:	sub    BYTE PTR [edi+0x33b934b7],bl
  418b74:	mov    ch,0xb5
  418b76:	inc    eax
  418b77:	inc    eax
  418b78:	sub    bl,dh
  418b7a:	mov    ebx,0xba240dd1
  418b7f:	xchg   ecx,eax
  418b80:	int3   
  418b81:	lods   eax,DWORD PTR ds:[esi]
  418b82:	test   al,0x8f
  418b84:	push   esi
  418b85:	aam    0x94
  418b87:	mov    ebp,DWORD PTR [edi]
  418b89:	imul   ebp,DWORD PTR [ecx],0x9a00373d
  418b8f:	pusha  
  418b90:	(bad)  
  418b91:	mov    ebp,0x6eb228df
  418b96:	lock ret 0xde79
  418b9a:	sub    al,0x25
  418b9c:	popa   
  418b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b9e:	addr16 jge 0x418b34
  418ba1:	test   al,0x42
  418ba3:	inc    ebp
  418ba4:	or     eax,0xca7603b8
  418ba9:	stc    
  418baa:	ins    DWORD PTR es:[edi],dx
  418bab:	rcr    BYTE PTR [eax],1
  418bad:	jge    0x418b6c
  418baf:	ficomp WORD PTR [eax]
  418bb1:	mul    BYTE PTR [edi+0x6825346e]
  418bb7:	imul   esi,esp,0xffffffed
  418bba:	(bad)  
  418bbb:	and    BYTE PTR [ebx],bh
  418bbd:	fld    QWORD PTR [ebx+0x33a80125]
  418bc3:	xchg   ecx,edi
  418bc5:	inc    edx
  418bc6:	daa    
  418bc7:	adc    bl,BYTE PTR [ebx]
  418bc9:	inc    eax
  418bca:	sbb    ah,dl
  418bcc:	int3   
  418bcd:	pop    ebp
  418bce:	mov    bl,0xd7
  418bd0:	ins    DWORD PTR es:[edi],dx
  418bd1:	nop
  418bd2:	or     eax,0x80b5711b
  418bd7:	fild   QWORD PTR [edi+0x34124b09]
  418bdd:	push   eax
  418bde:	xlat   BYTE PTR ds:[ebx]
  418bdf:	mov    ebx,es
  418be1:	mov    edx,?
  418be3:	mov    edi,0xc4e32e15
  418be8:	cmp    ebp,0x41
  418beb:	test   DWORD PTR [ebp-0x31080a2],0x367dc0
  418bf5:	nop
  418bf6:	loop   0x418b7c
  418bf8:	xor    BYTE PTR [ebx],ch
  418bfa:	mov    al,ds:0x9d3728c8
  418bff:	mov    dl,0x7e
  418c01:	jge    0x418c60
  418c03:	pusha  
  418c04:	(bad)  
  418c05:	lahf   
  418c06:	lock les esp,FWORD PTR [edx+0x50]
  418c0a:	mov    ah,0xbe
  418c0c:	repz ds daa 
  418c0f:	mov    BYTE PTR [edi+ebp*2],dh
  418c12:	push   0x7ebee7e1
  418c17:	mov    esi,0xd95455e1
  418c1c:	ins    BYTE PTR es:[edi],dx
  418c1d:	in     eax,0x54
  418c1f:	sbb    eax,0xf232d5ba
  418c24:	push   esp
  418c25:	jl     0x418c3e
  418c27:	adc    cl,BYTE PTR [eax]
  418c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c2a:	mov    eax,0xa76fe5f0
  418c2f:	icebp  
  418c30:	lock dec DWORD PTR [esi]
  418c33:	mov    eax,ds:0xb5e85ce6
  418c38:	mov    BYTE PTR [ecx],al
  418c3a:	and    DWORD PTR [ebp-0xeb951a6],edx
  418c40:	lods   eax,DWORD PTR ds:[esi]
  418c41:	mov    ch,0x2c
  418c43:	push   0xfaf14dbe
  418c48:	cdq    
  418c49:	mov    eax,ds:0xceb97b07
  418c4e:	push   ds
  418c4f:	xor    eax,0x631bdbb7
  418c54:	pop    eax
  418c55:	cmp    eax,0x790433ce
  418c5a:	jae    0x418ccc
  418c5c:	shr    BYTE PTR [esi],1
  418c5e:	mov    ecx,0xf6076baa
  418c63:	js     0x418c12
  418c65:	call   0xc76c4597
  418c6a:	jbe    0x418c8e
  418c6c:	into   
  418c6d:	adc    edx,esi
  418c6f:	ret    
  418c70:	add    ebx,DWORD PTR [eax+0xae2d0]
  418c76:	xchg   edi,eax
  418c77:	pop    ds
  418c78:	sub    BYTE PTR es:[edx+0xa65063e],0x21
  418c80:	shl    BYTE PTR [ecx+0x6],1
  418c83:	and    eax,0x88904295
  418c88:	xlat   BYTE PTR ds:[ebx]
  418c89:	test   BYTE PTR [ebp+ecx*8-0x3],dl
  418c8d:	pop    ds
  418c8e:	pop    esi
  418c8f:	fldl2e 
  418c91:	add    edx,0x4f63f6a0
  418c97:	(bad)  
  418c98:	sbb    al,0x26
  418c9a:	pop    eax
  418c9b:	pop    esp
  418c9c:	pushf  
  418c9d:	cmp    eax,0x675391e0
  418ca2:	and    DWORD PTR [edi-0x436b6098],ecx
  418ca8:	mov    dh,0xf9
  418caa:	xlat   BYTE PTR ds:[ebx]
  418cab:	xchg   edx,eax
  418cac:	stc    
  418cad:	in     al,dx
  418cae:	pop    edx
  418caf:	and    eax,0x44d3f120
  418cb4:	sub    al,bl
  418cb6:	xor    ch,BYTE PTR [ebp+edi*4+0x758ee905]
  418cbd:	scas   al,BYTE PTR es:[edi]
  418cbe:	outs   dx,BYTE PTR ds:[esi]
  418cbf:	shl    BYTE PTR [edi+ecx*8-0x653928d0],cl
  418cc6:	jne    0x418ceb
  418cc8:	sbb    al,0x38
  418cca:	aaa    
  418ccb:	in     al,dx
  418ccc:	mov    dh,0xee
  418cce:	sub    ch,ah
  418cd0:	adc    esp,eax
  418cd2:	mov    edx,0xe1f9d3eb
  418cd7:	jmp    0x418d3b
  418cd9:	hlt    
  418cda:	imul   DWORD PTR [ebp+0x13]
  418cdd:	addr16 and ebx,esi
  418ce0:	out    0x30,al
  418ce2:	jl     0x418d1f
  418ce4:	dec    eax
  418ce5:	ss jp  0x418ce1
  418ce8:	jmp    0x9d3dd408
  418ced:	adc    eax,0xef9b919c
  418cf2:	out    dx,eax
  418cf3:	lods   al,BYTE PTR ds:[esi]
  418cf4:	ficomp WORD PTR [eax]
  418cf6:	xor    DWORD PTR [ebx+ecx*1+0x2f05453d],0x5e
  418cfe:	add    esp,DWORD PTR [edi*2-0x7fcd3365]
  418d05:	arpl   WORD PTR ds:0xd3292d0f,di
  418d0b:	jmp    0x29a7e33f
  418d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d11:	inc    ebp
  418d12:	jmp    0xfcf2736d
  418d17:	ror    DWORD PTR [edx-0x572c2eb3],1
  418d1d:	jmp    0x7ff3:0xfeccbf79
  418d24:	push   ds
  418d25:	call   0xfa025158
  418d2a:	scas   eax,DWORD PTR es:[edi]
  418d2b:	xchg   ecx,eax
  418d2c:	mov    esp,0x253fef9e
  418d31:	xor    eax,0x7e18a2e
  418d36:	add    al,0xf0
  418d38:	push   ebx
  418d39:	bnd jne 0x418d2c
  418d3c:	lods   al,BYTE PTR ds:[esi]
  418d3d:	aas    
  418d3e:	jl     0x418ce2
  418d40:	dec    si
  418d42:	scas   al,BYTE PTR es:[edi]
  418d43:	outs   dx,BYTE PTR ds:[esi]
  418d44:	fld    QWORD PTR [edi-0x1c79ab1d]
  418d4a:	inc    ebx
  418d4b:	mov    ds:0x1637a980,eax
  418d50:	scas   al,BYTE PTR es:[edi]
  418d51:	sub    al,0x73
  418d53:	stc    
  418d54:	mov    dh,0x55
  418d56:	pushf  
  418d57:	call   esp
  418d59:	push   ss
  418d5a:	shl    ebp,1
  418d5c:	add    al,0x9c
  418d5e:	jae    0x418d67
  418d60:	push   edx
  418d61:	std    
  418d62:	mov    edi,0xfc4a1548
  418d67:	ins    DWORD PTR es:[edi],dx
  418d68:	mov    al,0x54
  418d6a:	outs   dx,BYTE PTR ds:[esi]
  418d6b:	jnp    0x418dbc
  418d6d:	imul   BYTE PTR [edx-0x1abe8d45]
  418d73:	ja     0x418d45
  418d75:	sub    DWORD PTR [ebx],edx
  418d77:	loopne 0x418dce
  418d79:	xchg   esp,eax
  418d7a:	dec    ebx
  418d7b:	push   ecx
  418d7c:	cmp    al,0x79
  418d7e:	mov    ds:0x25286bed,eax
  418d83:	and    DWORD PTR [edi],edi
  418d85:	(bad)  
  418d86:	clc    
  418d87:	add    ah,BYTE PTR ds:0xe9eed844
  418d8d:	data16 jo 0x418dff
  418d90:	sbb    esp,DWORD PTR [ecx]
  418d92:	or     cl,BYTE PTR [ebx-0x9ab78ee]
  418d98:	pushf  
  418d99:	dec    eax
  418d9a:	fisub  WORD PTR [eax+0x2d51ca78]
  418da0:	dec    ecx
  418da1:	lock sbb eax,0xe70fa90c
  418da7:	(bad)  
  418da8:	cmp    BYTE PTR [ebx],dl
  418daa:	mov    ebx,DWORD PTR [edi]
  418dac:	loopne 0x418dc4
  418dae:	adc    bl,BYTE PTR [esi+0x6a]
  418db1:	jbe    0x418db0
  418db3:	jmp    0xe3f42647
  418db8:	cmp    DWORD PTR [edi+edi*1+0x3d0c0f62],ebx
  418dbf:	adc    al,0x81
  418dc1:	scas   eax,DWORD PTR es:[edi]
  418dc2:	mov    al,ds:0xe154a2c1
  418dc7:	outs   dx,BYTE PTR ds:[esi]
  418dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc9:	jne    0x418ddf
  418dcb:	or     bl,BYTE PTR [edi+edx*8-0x7cb78e14]
  418dd2:	mov    ds:0xa24c6936,al
  418dd7:	dec    ecx
  418dd8:	cld    
  418dd9:	fdivr  st,st(6)
  418ddb:	in     eax,0x97
  418ddd:	or     ebx,DWORD PTR [edx]
  418ddf:	sub    ebp,DWORD PTR [edi-0x67]
  418de2:	jmp    0xb5e6:0x15e33855
  418de9:	push   0x2b0150f5
  418dee:	call   0xe2f6:0x8bd32cf4
  418df5:	cmc    
  418df6:	lods   al,BYTE PTR ds:[esi]
  418df7:	mov    dl,0x27
  418df9:	(bad)  
  418dfa:	nop
  418dfb:	mov    esi,0x4ab3d026
  418e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e01:	in     eax,0xab
  418e03:	popa   
  418e04:	test   eax,0x61e3fbdf
  418e09:	or     DWORD PTR [edx-0xf04dc37],ebp
  418e0f:	xchg   ebx,eax
  418e10:	cmp    ah,bh
  418e12:	cmp    eax,0x873a9f29
  418e17:	dec    BYTE PTR [ecx]
  418e19:	lock and DWORD PTR [ebp-0x740cce99],edx
  418e20:	mov    dh,0x5a
  418e22:	dec    DWORD PTR [edx+0x7099bc43]
  418e28:	pushf  
  418e29:	cmc    
  418e2a:	bound  edx,QWORD PTR gs:[ecx]
  418e2d:	dec    ebx
  418e2e:	add    al,0xb4
  418e31:	pop    ebp
  418e32:	mov    bl,ch
  418e34:	push   ss
  418e35:	sub    al,0x5f
  418e37:	sahf   
  418e38:	rol    DWORD PTR ds:0x3154dcc2,cl
  418e3e:	arpl   ax,bp
  418e40:	retf   0x35a0
  418e43:	push   esi
  418e44:	ror    BYTE PTR [ecx],cl
  418e46:	daa    
  418e47:	jb     0x418eb5
  418e49:	faddp  st(4),st
  418e4b:	jge    0x418e4d
  418e4d:	pop    ecx
  418e4e:	(bad)  [ecx]
  418e50:	jbe    0x418e2f
  418e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e53:	pop    ebp
  418e54:	int    0xa
  418e56:	jno    0x418ecf
  418e58:	(bad)  
  418e59:	pop    eax
  418e5a:	mov    al,ds:0x3138c776
  418e5f:	or     eax,0x7d7d40d9
  418e64:	add    eax,0x8d98adcb
  418e69:	in     eax,0x3c
  418e6b:	test   DWORD PTR [edi],edi
  418e6d:	push   ecx
  418e6e:	fist   DWORD PTR [esi+0x6e00e911]
  418e74:	sub    BYTE PTR [eax+edi*2+0x6f],0xb3
  418e79:	pop    ecx
  418e7a:	mov    ebx,DWORD PTR [edi]
  418e7c:	dec    eax
  418e7d:	mov    ecx,0xe69e4793
  418e82:	clc    
  418e83:	add    eax,0xfe87d20a
  418e88:	aaa    
  418e89:	xor    DWORD PTR [eax-0x36cf2c1],ebp
  418e8f:	xlat   BYTE PTR ds:[ebx]
  418e90:	stos   DWORD PTR es:[edi],eax
  418e91:	sahf   
  418e92:	in     al,0xe0
  418e94:	dec    ebp
  418e95:	pop    esp
  418e96:	lea    eax,[ebp+0x302ff37b]
  418e9c:	ret    0xf1f2
  418e9f:	rol    ah,0xe3
  418ea2:	or     dh,BYTE PTR [esi]
  418ea4:	jg     0x418e35
  418ea6:	in     eax,0xc7
  418ea8:	and    BYTE PTR [esp+esi*8],bh
  418eab:	bound  edx,QWORD PTR [edi]
  418ead:	sub    eax,0x1ceca5fa
  418eb2:	rcl    BYTE PTR ds:0x38c040cc,0x45
  418eb9:	sbb    BYTE PTR [eax-0x518a3c65],dh
  418ebf:	stos   BYTE PTR es:[edi],al
  418ec0:	mov    ds:0xd73fc3c1,al
  418ec5:	and    esp,esi
  418ec7:	xor    al,0xaf
  418ec9:	pop    edi
  418eca:	in     eax,dx
  418ecb:	sbb    eax,0x56aaff13
  418ed0:	xor    eax,0xde36a902
  418ed5:	cmc    
  418ed6:	cs push esp
  418ed8:	jmp    0x3f9f59e2
  418edd:	shr    BYTE PTR [esi],1
  418edf:	loop   0x418efa
  418ee1:	mov    ?,WORD PTR [edx+0x2e]
  418ee4:	les    eax,FWORD PTR gs:[edx+0x7e]
  418ee8:	dec    esp
  418ee9:	daa    
  418eea:	mov    dl,0x78
  418eec:	ret    
  418eed:	dec    eax
  418eee:	inc    edx
  418eef:	adc    DWORD PTR ds:0xbb22f99a,ebp
  418ef5:	shl    BYTE PTR [ebx+0x310d97bc],1
  418efb:	mov    ah,0x0
  418efd:	dec    ebx
  418efe:	int    0x54
  418f00:	cmc    
  418f01:	jle    0x418f5d
  418f03:	scas   eax,DWORD PTR es:[edi]
  418f04:	jle    0x418e89
  418f06:	sbb    eax,0xc3def3eb
  418f0b:	dec    ebp
  418f0c:	and    DWORD PTR [ebx],esi
  418f0e:	mov    dl,0x8b
  418f10:	jge    0x418e92
  418f12:	loop   0x418ee9
  418f14:	mov    al,ds:0xb6e93a3e
  418f19:	out    dx,al
  418f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f1b:	addr16 sbb eax,0x2476657f
  418f21:	jbe    0x418ee7
  418f23:	dec    ebx
  418f24:	push   esi
  418f25:	or     DWORD PTR [edi],ebp
  418f27:	repz dec edi
  418f29:	dec    ebx
  418f2a:	inc    edx
  418f2b:	push   ds
  418f2c:	dec    DWORD PTR [edx]
  418f2e:	imul   esp,DWORD PTR [eax+0x35],0x524ef80f
  418f35:	imul   eax,DWORD PTR [ebx+edi*2+0x3d],0x1bc1bd92
  418f3d:	adc    ah,BYTE PTR [eax-0x2ea1cf5f]
  418f43:	mov    al,0x2c
  418f45:	mov    WORD PTR [ecx+0xf],gs
  418f48:	cmp    eax,0xdb79d847
  418f4d:	dec    ecx
  418f4e:	and    al,0x73
  418f50:	pop    edi
  418f51:	outs   dx,DWORD PTR ds:[esi]
  418f52:	xchg   DWORD PTR [edi],ebx
  418f54:	inc    esp
  418f55:	pop    ebx
  418f56:	push   ds
  418f57:	sbb    BYTE PTR [ecx+0x16c6ec1],bh
  418f5d:	(bad)
  418f60:	xor    DWORD PTR [eax-0x58b94fa8],esi
  418f66:	lea    edi,[eax-0x3]
  418f69:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  418f6b:	scas   eax,DWORD PTR es:[edi]
  418f6c:	ffree  st(6)
  418f6e:	out    0x5f,eax
  418f70:	add    BYTE PTR [ecx],0xa9
  418f73:	and    al,0x12
  418f75:	jnp    0x418f05
  418f77:	push   0x1a
  418f79:	mov    WORD PTR [ebx+0x66],?
  418f7c:	mov    al,ds:0x26b6f62c
  418f81:	inc    esp
  418f82:	inc    esi
  418f83:	xchg   DWORD PTR [eax],ebx
  418f85:	sub    DWORD PTR [eax-0x257977f6],0xffffff80
  418f8c:	push   edx
  418f8d:	and    DWORD PTR ds:0x473a2912,ecx
  418f93:	leave  
  418f94:	jns    0x419009
  418f96:	add    al,0x4b
  418f98:	(bad)  
  418f99:	(bad)  
  418f9b:	in     eax,dx
  418f9c:	sub    DWORD PTR [edi-0x5c33823f],esp
  418fa2:	xor    eax,0x766b3ec6
  418fa7:	and    al,0xc2
  418fa9:	outs   dx,DWORD PTR ds:[esi]
  418faa:	shl    BYTE PTR [edx],cl
  418fac:	or     dh,BYTE PTR [eax]
  418fae:	ja     0x418f62
  418fb0:	mov    ds:0xa25fd057,eax
  418fb5:	out    dx,al
  418fb6:	jge    0x418f98
  418fb8:	jb     0x418fe9
  418fba:	jge    0x41900b
  418fbc:	call   0x979f:0x5fbf8e0a
  418fc3:	outs   dx,DWORD PTR ds:[esi]
  418fc4:	inc    eax
  418fc5:	inc    esp
  418fc6:	dec    eax
  418fc7:	das    
  418fc8:	push   es
  418fc9:	push   ds
  418fca:	cld    
  418fcb:	imul   ebp,ecx,0xffffff98
  418fce:	push   0x4a
  418fd0:	adc    BYTE PTR [edx],0x2a
  418fd3:	sbb    al,0xc
  418fd5:	mov    esi,0xad7df846
  418fda:	mov    bl,0xe3
  418fdc:	ficomp WORD PTR [esi+eiz*8-0x1b]
  418fe0:	push   ecx
  418fe1:	cmp    BYTE PTR [ebx],0x2e
  418fe4:	push   esi
  418fe5:	xor    BYTE PTR [edi+0x6a],dl
  418fe8:	mov    ch,0xdb
  418fea:	test   eax,0x203e90ac
  418fef:	cli    
  418ff0:	rol    eax,0xd7
  418ff3:	std    
  418ff4:	sub    esp,DWORD PTR gs:[ebp-0x51058d37]
  418ffb:	iret   
  418ffc:	(bad)  
  418ffd:	arpl   WORD PTR [ecx+ecx*8-0x10],bx
  419001:	iret   
  419002:	retf   
  419003:	pop    ds
  419004:	sub    ch,BYTE PTR [ebx+0x69ad9a52]
  41900a:	mov    ds:0xa5a5a9d6,al
  41900f:	pop    esi
  419010:	mov    ah,0x5c
  419012:	into   
  419013:	and    DWORD PTR [edx-0x41fe89e],ecx
  419019:	xor    al,0x80
  41901b:	mov    esi,0x525b9231
  419020:	in     eax,0xae
  419022:	xchg   ebx,eax
  419023:	add    cl,BYTE PTR [esi]
  419025:	std    
  419026:	or     al,0xd0
  419028:	(bad)  
  41902a:	jae    0x419026
  41902c:	out    dx,al
  41902d:	retf   
  41902e:	ja     0x418fea
  419030:	arpl   WORD PTR [ecx-0x1c323d49],sp
  419036:	(bad)  
  419037:	jmp    0x4190a0
  419039:	push   esi
  41903a:	(bad)  
  41903b:	lahf   
  41903c:	push   edx
  41903d:	sbb    al,0x7f
  41903f:	mov    al,0xd7
  419041:	(bad)  
  419042:	dec    eax
  419043:	clc    
  419044:	xchg   ebp,eax
  419045:	nop
  419046:	test   DWORD PTR [ecx-0x3c],edx
  419049:	and    ebx,ebp
  41904b:	mov    BYTE PTR [edi],bh
  41904d:	or     DWORD PTR [ecx],ecx
  41904f:	mov    bh,cl
  419051:	pop    edx
  419052:	leave  
  419053:	cmp    bh,dh
  419055:	or     al,0x9d
  419057:	adc    al,0xfe
  419059:	(bad)  
  41905a:	(bad)  
  41905b:	xor    eax,0xfa1fb6de
  419060:	sub    BYTE PTR [ebp+eax*1-0x52509632],0x34
  419068:	popa   
  419069:	sub    ebp,DWORD PTR [ebp+ebp*4-0x4135146a]
  419070:	add    al,0xce
  419072:	es mov ch,0xa3
  419075:	sub    eax,0x968a102b
  41907a:	dec    esp
  41907b:	gs adc al,0x1
  41907e:	lods   eax,DWORD PTR ds:[esi]
  41907f:	xor    eax,0x9b9b5438
  419084:	sbb    al,0x45
  419086:	enter  0xe1d2,0x4d
  41908a:	dec    esp
  41908b:	jnp    0x4190ca
  41908d:	out    dx,eax
  41908e:	pusha  
  41908f:	mov    bh,BYTE PTR [ecx-0x653cded]
  419095:	nop
  419096:	adc    eax,0xc63ad53a
  41909b:	mov    dh,0x93
  41909d:	dec    esi
  41909e:	mov    dh,0x86
  4190a0:	sahf   
  4190a1:	(bad)  
  4190a2:	mov    DWORD PTR [edi-0x1e5923a7],esi
  4190a8:	xchg   ebx,eax
  4190a9:	rcr    BYTE PTR [edx],0xe7
  4190ac:	fs and cl,bh
  4190af:	xchg   ecx,eax
  4190b0:	fst    QWORD PTR [edx+0x44]
  4190b3:	loope  0x4190d5
  4190b5:	(bad)  
  4190b6:	(bad)  
  4190b7:	sbb    ebx,DWORD PTR [ecx+0x30]
  4190ba:	aam    0xaa
  4190bc:	shl    ebp,cl
  4190be:	xor    eax,0x48b6e01f
  4190c3:	cs push esp
  4190c5:	ror    DWORD PTR [esi+ebx*1-0x21c7fd98],cl
  4190cc:	retf   0x9a65
  4190cf:	mov    WORD PTR [edi+ecx*4-0x76ef38ac],gs
  4190d6:	xchg   ebp,eax
  4190d7:	jno    0x41905f
  4190d9:	or     bh,al
  4190db:	std    
  4190dc:	les    esp,FWORD PTR [eax]
  4190de:	call   0xa013:0x6c87bff4
  4190e5:	mov    ebx,0x8cd6083a
  4190ea:	xchg   ebx,eax
  4190eb:	mov    al,0x32
  4190ed:	mov    cl,BYTE PTR [eax]
  4190ef:	adc    bl,ch
  4190f1:	out    dx,eax
  4190f2:	jmp    0x4190ed
  4190f4:	imul   esi,edi,0xa8df7d9d
  4190fa:	adc    bl,BYTE PTR ds:0x67b737b4
  419100:	ds mov esi,?
  419103:	je     0x41911e
  419105:	pop    es
  419106:	out    0xca,eax
  419108:	outs   dx,DWORD PTR ds:[esi]
  419109:	lods   eax,DWORD PTR ds:[esi]
  41910a:	and    DWORD PTR [ecx],ecx
  41910c:	adc    BYTE PTR [ebp+ecx*8-0x8],al
  419110:	loopne 0x419116
  419112:	adc    eax,0xdc4384cf
  419117:	popf   
  419118:	push   eax
  419119:	jae    0x4190ff
  41911b:	push   ebp
  41911c:	idiv   dl
  41911e:	fs clc 
  419120:	scas   al,BYTE PTR es:[edi]
  419121:	das    
  419122:	xor    bh,al
  419124:	pop    esi
  419125:	pop    es
  419126:	(bad)  
  419127:	pop    ds
  419128:	mov    ch,bh
  41912a:	mov    cl,0x40
  41912c:	or     al,0x8d
  41912e:	ffree  st(2)
  419130:	cmp    BYTE PTR [ebx],al
  419132:	test   BYTE PTR [ecx],bl
  419134:	aaa    
  419135:	pop    ecx
  419136:	ins    DWORD PTR es:[edi],dx
  419137:	xor    al,0x3
  419139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41913a:	jge    0x4190e1
  41913c:	shl    DWORD PTR [edx],0x64
  41913f:	cwde   
  419140:	mov    eax,0xe32c43c5
  419145:	loop   0x41911a
  419147:	or     dl,BYTE PTR [ecx-0x37]
  41914a:	cmp    eax,0xcb84c9e0
  41914f:	outs   dx,BYTE PTR ds:[esi]
  419150:	popa   
  419151:	push   ecx
  419152:	stos   BYTE PTR es:[edi],al
  419153:	mov    bx,0xd167
  419157:	sbb    dl,dl
  419159:	fbstp  TBYTE PTR [ebp+0x6d]
  41915c:	cdq    
  41915d:	dec    edi
  41915e:	cli    
  41915f:	xor    DWORD PTR ds:0x2943295a,eax
  419165:	xchg   edi,eax
  419166:	loope  0x4191b8
  419168:	jne    0x41915c
  41916a:	jbe    0x419172
  41916c:	sub    al,0x2d
  41916e:	test   al,0x91
  419170:	jp     0xe8ea9334
  419176:	rcl    BYTE PTR [ebp-0x45],1
  419179:	sbb    al,0x67
  41917b:	xchg   ecx,eax
  41917c:	and    al,0x5
  41917e:	pushf  
  41917f:	sub    eax,0x566462bd
  419184:	fisubr DWORD PTR [eax+0x162af610]
  41918a:	pop    esi
  41918b:	cli    
  41918c:	adc    al,0x58
  41918e:	in     al,dx
  41918f:	ins    BYTE PTR es:[edi],dx
  419190:	cs sbb edi,edi
  419193:	fucomp st(7)
  419195:	inc    edx
  419196:	push   ds
  419197:	jl     0x4191fa
  419199:	sub    eax,DWORD PTR [edi]
  41919b:	cmp    BYTE PTR [edx+0xa712be1],0xa
  4191a2:	jno    0x4191d9
  4191a4:	stos   BYTE PTR es:[edi],al
  4191a5:	dec    esi
  4191a6:	xor    BYTE PTR [eax+0x244d132],cl
  4191ac:	repnz shl DWORD PTR [ecx],cl
  4191af:	inc    edx
  4191b0:	lds    esp,FWORD PTR [ebp-0x5415368e]
  4191b6:	and    ebp,DWORD PTR [edi-0x31]
  4191b9:	mov    cl,0x95
  4191bb:	aam    0x90
  4191bd:	or     cl,dh
  4191bf:	ds fprem1 
  4191c2:	pop    ds
  4191c3:	xchg   ecx,eax
  4191c4:	out    dx,eax
  4191c5:	add    BYTE PTR [edi-0x1fb72ec6],cl
  4191cb:	stos   BYTE PTR es:[edi],al
  4191cc:	push   esi
  4191cd:	xchg   edi,eax
  4191ce:	dec    esp
  4191cf:	shl    BYTE PTR [ebx+0x7e],cl
  4191d2:	imul   BYTE PTR ds:[ebp+0x2bdb7dd9]
  4191d9:	enter  0x3c57,0x3f
  4191dd:	mov    ?,WORD PTR [ebp+0x67f8afbf]
  4191e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191e4:	outs   dx,BYTE PTR ds:[esi]
  4191e5:	in     al,dx
  4191e6:	(bad)  
  4191e7:	repz push ecx
  4191e9:	push   cs
  4191ea:	sub    eax,0xe046f8d3
  4191ef:	(bad)  
  4191f0:	pop    ebx
  4191f1:	jb     0x419209
  4191f3:	fidivr WORD PTR [eax+0x4c]
  4191f6:	cli    
  4191f7:	mov    esi,0xb75e1ead
  4191fc:	push   eax
  4191fd:	mov    esp,0x58288eda
  419202:	fsubr  DWORD PTR [eax+0x41f3db24]
  419208:	sbb    DWORD PTR [edi+0x64],esi
  41920b:	mov    esp,0x69db3a47
  419210:	retf   0xeb1
  419213:	nop
  419214:	xchg   BYTE PTR [ebp+0x31],al
  419217:	pop    ebp
  419218:	imul   edi,DWORD PTR [edx-0x7b7d82e9],0xffffffc6
  41921f:	or     DWORD PTR [ecx-0x31],ebp
  419222:	in     al,0xdc
  419224:	pop    ecx
  419225:	mov    edi,0x4604920f
  41922a:	sub    edi,esi
  41922c:	outs   dx,DWORD PTR cs:[esi]
  41922e:	(bad)  [ecx]
  419230:	xchg   ecx,edx
  419232:	and    BYTE PTR [ecx-0x2],0xa0
  419236:	mov    BYTE PTR [esi+0x2f],dh
  419239:	stos   DWORD PTR es:[edi],eax
  41923a:	xchg   esp,eax
  41923b:	jb     0x419222
  41923d:	mov    dl,0x7c
  41923f:	ins    BYTE PTR es:[edi],dx
  419240:	cmp    eax,DWORD PTR [esi-0x7b67770b]
  419246:	sub    ebx,DWORD PTR ds:0xc7a1d41a
  41924c:	pop    ebp
  41924d:	sub    ebp,ebp
  41924f:	adc    cl,ch
  419251:	xchg   edx,eax
  419252:	mov    dl,BYTE PTR [ebx+0x65]
  419255:	push   esp
  419256:	mov    ah,0x76
  419258:	adc    ecx,DWORD PTR [esi+0x37]
  41925b:	add    eax,0x5a34ead5
  419260:	or     ch,BYTE PTR [esi+ebp*1+0x1e]
  419264:	jmp    0x419222
  419266:	ficom  WORD PTR [eax-0x192db871]
  41926c:	or     eax,0x6f96afc
  419271:	mov    esi,0xa4501cb3
  419276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419277:	pushf  
  419278:	cmp    bl,ah
  41927a:	xor    bh,BYTE PTR ds:0x362bcea9
  419280:	pop    ds
  419281:	xor    dh,ah
  419283:	dec    esp
  419284:	dec    esi
  419285:	aaa    
  419286:	dec    ebp
  419287:	push   ebp
  419288:	push   esp
  419289:	imul   edx,ebx,0xaf2f32b6
  41928f:	inc    edi
  419290:	sub    DWORD PTR [eax-0x12],edi
  419293:	dec    edi
  419294:	iret   
  419295:	scas   eax,DWORD PTR es:[edi]
  419296:	mov    eax,0x3c484e44
  41929b:	ja     0x4192a0
  41929d:	(bad)  
  41929e:	call   FWORD PTR [eax-0x7]
  4192a1:	jmp    0x1c911bc2
  4192a6:	xor    eax,DWORD PTR [eax+0x40b3e146]
  4192ac:	dec    ecx
  4192ad:	xor    esp,ecx
  4192af:	or     al,0xba
  4192b1:	cmp    bh,BYTE PTR [ebx]
  4192b3:	xchg   ebx,eax
  4192b4:	in     al,0x42
  4192b6:	je     0x419250
  4192b8:	add    BYTE PTR [edx],al
  4192ba:	repnz dec ebx
  4192bc:	stos   BYTE PTR es:[edi],al
  4192bd:	pusha  
  4192be:	stos   DWORD PTR es:[edi],eax
  4192bf:	call   0x262979bc
  4192c4:	pop    ebp
  4192c5:	mov    dl,0x6b
  4192c7:	mov    edx,0x8ccf012c
  4192cc:	lea    edi,[esi]
  4192ce:	pop    es
  4192cf:	and    bl,BYTE PTR [esi+edx*2+0x22]
  4192d3:	int    0x9b
  4192d5:	or     al,0x87
  4192d7:	shl    BYTE PTR [edi+0x73],0x85
  4192db:	and    BYTE PTR [edx-0x7d],dl
  4192de:	mov    DWORD PTR [edi+0x3839cb6c],0x64de10d0
  4192e8:	scas   al,BYTE PTR es:[edi]
  4192e9:	(bad)
  4192ec:	mov    eax,DWORD PTR [edi-0x62]
  4192ef:	pop    ss
  4192f0:	sub    ch,dl
  4192f2:	pop    ebx
  4192f3:	cmp    ah,ch
  4192f5:	leave  
  4192f6:	and    dl,0xa
  4192f9:	dec    DWORD PTR ds:0x86571fbf
  4192ff:	sahf   
  419300:	jns    0x419378
  419302:	test   BYTE PTR [ebx-0x2c],0x1
  419306:	std    
  419307:	cmp    edx,DWORD PTR [edx+ebp*1+0x11]
  41930b:	cmp    BYTE PTR [esi-0x38],0x7c
  41930f:	mov    DWORD PTR [ebp+0x12],0xa64a5979
  419316:	(bad)  
  419317:	lods   eax,DWORD PTR ds:[esi]
  419318:	imul   edx,DWORD PTR [edi-0x4c],0x1f
  41931c:	pop    eax
  41931d:	cdq    
  41931e:	mov    eax,0x8ed93a4e
  419323:	mov    dl,BYTE PTR [ebp+0x2d3fd51f]
  419329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41932a:	outs   dx,DWORD PTR ds:[esi]
  41932b:	cmp    BYTE PTR ds:0xad3147c7,0x7f
  419332:	sbb    eax,0x5f7d5cd8
  419337:	shl    DWORD PTR [esi+0x52],0x2b
  41933b:	xlat   BYTE PTR ds:[ebx]
  41933c:	jnp    0x4193bc
  41933e:	mov    esp,0x131e2a13
  419343:	mov    ebx,0xf441475
  419348:	test   al,0x7
  41934a:	call   0x335a:0x877943fc
  419351:	(bad)  
  419352:	jno    0x4193ca
  419354:	pop    ecx
  419355:	ret    0x30a1
  419358:	fs stos DWORD PTR es:[edi],eax
  41935a:	ret    
  41935b:	inc    eax
  41935c:	iret   
  41935d:	retf   
  41935e:	cwde   
  41935f:	push   es
  419360:	xchg   edi,eax
  419361:	in     al,dx
  419362:	xor    al,BYTE PTR ds:0x34e68520
  419368:	mov    ds:0x49cb28ce,eax
  41936d:	inc    ebp
  41936e:	sbb    al,0x8f
  419370:	jns    0x41932d
  419372:	cwde   
  419373:	call   0x44e7:0x7114a9fb
  41937a:	mov    esi,0x22661a59
  41937f:	inc    ebx
  419380:	mov    al,ds:0x82e23c79
  419385:	in     al,dx
  419386:	jle    0x41935c
  419388:	mov    ds:0xa0744c71,eax
  41938d:	pminsw mm7,mm1
  419390:	int3   
  419391:	(bad)  [edi-0x5a]
  419394:	add    eax,0xcefebb73
  419399:	(bad)  [eax+0x74848ff2]
  41939f:	adc    ebx,edi
  4193a1:	out    dx,eax
  4193a2:	and    eax,0x8ce26333
  4193a7:	cmp    al,BYTE PTR [ebx]
  4193a9:	in     eax,0x43
  4193ab:	inc    ecx
  4193ac:	sahf   
  4193ad:	sbb    al,0x2c
  4193af:	jae    0x419408
  4193b1:	dec    edi
  4193b2:	clc    
  4193b3:	dec    edx
  4193b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b5:	sub    al,0x65
  4193b7:	hlt    
  4193b8:	(bad)  
  4193b9:	push   cs
  4193ba:	out    dx,eax
  4193bb:	rcr    BYTE PTR [eax],1
  4193bd:	lahf   
  4193be:	rcl    DWORD PTR [eax],cl
  4193c0:	mov    edx,0x9e961391
  4193c5:	mov    esi,0x71418243
  4193ca:	push   esp
  4193cb:	aas    
  4193cc:	xor    al,0x1
  4193ce:	push   esp
  4193cf:	mov    edx,cs
  4193d1:	cmp    al,0xdc
  4193d3:	cmp    al,0x5c
  4193d5:	jb     0x4193ed
  4193d7:	out    dx,al
  4193d8:	(bad)  
  4193da:	pop    ss
  4193db:	retf   
  4193dc:	loopne 0x419380
  4193de:	retf   0x7392
  4193e1:	cmp    DWORD PTR [esi+0x73],0x6756101a
  4193e8:	scas   al,BYTE PTR es:[edi]
  4193e9:	in     al,dx
  4193ea:	pop    esi
  4193eb:	pop    ss
  4193ec:	jg     0x4193db
  4193ee:	inc    ebp
  4193ef:	repnz push esi
  4193f1:	fucomi st,st(7)
  4193f3:	outs   dx,BYTE PTR ds:[esi]
  4193f4:	aaa    
  4193f5:	adc    dl,BYTE PTR [eax]
  4193f7:	inc    esi
  4193f8:	xor    BYTE PTR [ecx],dh
  4193fa:	fcmovnbe st,st(3)
  4193fc:	xor    eax,0xdd1aa79d
  419401:	inc    ebp
  419402:	jo     0x4193a0
  419404:	test   DWORD PTR [ebx],ebx
  419406:	nop
  419407:	sbb    BYTE PTR [ebx-0x3f152cc8],bl
  41940d:	js     0x41942c
  41940f:	pop    esi
  419410:	ins    BYTE PTR es:[edi],dx
  419411:	xchg   ecx,eax
  419412:	or     eax,0x44de737d
  419417:	(bad)  
  419419:	mov    ecx,0x9518ac02
  41941e:	and    eax,0xc22216ef
  419423:	push   ebp
  419424:	out    0xc3,eax
  419426:	sbb    BYTE PTR [ecx],ah
  419428:	mov    ecx,0xa0a3d597
  41942d:	retf   
  41942e:	enter  0x6d1d,0xb4
  419432:	imul   edx,DWORD PTR [esi+edi*4+0x4abaa007],0xffffffa9
  41943a:	fnop   
  41943c:	cmp    bh,ch
  41943e:	imul   ebp,DWORD PTR [edx],0x42802dd7
  419444:	pop    edx
  419445:	push   esp
  419446:	push   eax
  419447:	push   eax
  419448:	mov    DWORD PTR ds:0xbd8774b9,ecx
  41944e:	popa   
  41944f:	mov    ecx,0xe3c0777a
  419454:	stos   DWORD PTR es:[edi],eax
  419455:	lock mov ch,0xac
  419458:	jmp    0x4ede:0x55dbeb72
  41945f:	push   esp
  419460:	sub    ebp,ebp
  419462:	and    ah,0x4c
  419465:	inc    eax
  419466:	pop    ds
  419467:	ret    0xf2c3
  41946a:	jbe    0x4193ee
  41946c:	dec    ecx
  41946d:	loopne 0x419462
  41946f:	neg    BYTE PTR [esi-0x3]
  419472:	push   0x2a
  419474:	mov    ebp,DWORD PTR [edx]
  419476:	scas   al,BYTE PTR es:[edi]
  419477:	cmp    al,0x87
  419479:	fiadd  WORD PTR [esi]
  41947b:	jnp    0x4194ac
  41947d:	or     al,0xbd
  41947f:	jmp    0x4194ef
  419481:	xchg   BYTE PTR [esi-0x1c1356fa],al
  419487:	jbe    0x41945f
  419489:	lods   eax,DWORD PTR ds:[esi]
  41948a:	cdq    
  41948b:	or     cl,BYTE PTR [ebx-0x3f]
  41948e:	sub    esp,esi
  419490:	fmul   QWORD PTR [ebx+eax*8]
  419493:	add    al,0x42
  419495:	push   ecx
  419496:	not    cl
  419498:	dec    eax
  419499:	mov    edx,0xa0f9ebbd
  41949e:	loopne 0x4194cc
  4194a0:	ror    BYTE PTR [esi-0x4b],cl
  4194a3:	aam    0xf2
  4194a5:	mov    eax,0x78a5e5b8
  4194aa:	xor    BYTE PTR [edx-0x3b1bd5fe],al
  4194b0:	cmp    DWORD PTR [ebp*1+0x589e4b7e],ebp
  4194b7:	or     al,0xcb
  4194b9:	(bad)  
  4194ba:	cmp    ebp,DWORD PTR [edi+0xb]
  4194bd:	jge    0x4194c0
  4194bf:	(bad)  
  4194c0:	pop    ebp
  4194c1:	or     BYTE PTR [edx+0x15],ah
  4194c4:	in     al,0x1
  4194c6:	inc    eax
  4194c7:	hlt    
  4194c8:	in     al,0x5c
  4194ca:	enter  0xd9a3,0x7
  4194ce:	or     eax,0xd6c20ab9
  4194d3:	inc    ebp
  4194d4:	cwde   
  4194d5:	fisttp WORD PTR [edx+ebp*8]
  4194d8:	mov    ebp,0xf02fae47
  4194dd:	ss ror bh,1
  4194e0:	call   0x472b:0x3ac9d6aa
  4194e7:	pop    ebp
  4194e8:	(bad)  
  4194e9:	aas    
  4194ea:	jns    0x419567
  4194ec:	sub    esp,0x7631d1b1
  4194f2:	push   esp
  4194f3:	inc    eax
  4194f4:	sub    ah,dl
  4194f6:	aas    
  4194f7:	repnz leave 
  4194f9:	mov    cl,0xea
  4194fb:	xchg   edx,eax
  4194fc:	xchg   edx,eax
  4194fd:	xor    bl,bh
  4194ff:	add    DWORD PTR [eax-0x20],ebx
  419502:	cs mov bl,0x38
  419505:	push   0x1f
  419507:	int3   
  419508:	and    al,0x26
  41950a:	in     eax,dx
  41950b:	test   eax,0xc8eda042
  419510:	inc    ebp
  419511:	xor    eax,DWORD PTR [esi+0x3b2511b]
  419517:	push   esp
  419518:	call   0xf7cd:0x643edbfa
  41951f:	cmp    dh,BYTE PTR [eax]
  419521:	call   0x4b76:0x68c2eb03
  419528:	pop    ecx
  419529:	jmp    0x7c038605
  41952e:	icebp  
  41952f:	push   esi
  419530:	sti    
  419531:	or     eax,DWORD PTR [ecx+eiz*2+0x14]
  419535:	or     bl,bh
  419537:	xchg   ebx,eax
  419538:	xor    edx,ebx
  41953a:	inc    esi
  41953b:	or     DWORD PTR [eax-0x51],esp
  41953e:	test   eax,0x2cf1eb4a
  419543:	cli    
  419544:	dec    edx
  419545:	rcl    DWORD PTR [edx],0x7c
  419548:	cmp    al,0x7b
  41954a:	leave  
  41954b:	mov    bl,0xf8
  41954d:	or     al,0xbf
  41954f:	inc    eax
  419550:	adc    BYTE PTR [edi+0x78],cl
  419553:	loopne 0x41954e
  419555:	push   edx
  419556:	inc    ebp
  419557:	fwait
  419558:	ins    BYTE PTR es:[edi],dx
  419559:	dec    edi
  41955a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41955b:	fdivr  QWORD PTR [edx]
  41955d:	cdq    
  41955e:	and    al,BYTE PTR [ebp-0x498039fa]
  419564:	fidiv  DWORD PTR [esi+0x27]
  419567:	fcomp  DWORD PTR [eax]
  419569:	jl     0x41956d
  41956b:	fdivr  st,st(7)
  41956d:	out    0x4a,eax
  41956f:	ficomp DWORD PTR [ecx+0x76]
  419572:	aam    0x2c
  419574:	jl     0x4195d6
  419576:	ss ret 
  419578:	mov    BYTE PTR [esi+0x5f],dh
  41957b:	fninit 
  41957d:	or     cl,BYTE PTR [edx]
  41957f:	mov    esp,0x1fa1e566
  419584:	pop    ecx
  419585:	scas   eax,DWORD PTR es:[edi]
  419586:	scas   al,BYTE PTR es:[edi]
  419587:	add    ch,BYTE PTR [esi+edx*8]
  41958a:	test   eax,0x95d364fb
  41958f:	mov    eax,ds:0x132d53a2
  419594:	das    
  419595:	(bad)  
  419596:	cld    
  419597:	add    al,0xa1
  419599:	lods   eax,DWORD PTR ds:[esi]
  41959a:	add    eax,0x4569718c
  41959f:	ret    
  4195a0:	es aam 0x16
  4195a3:	xlat   BYTE PTR ds:[ebx]
  4195a4:	mov    ds:0x643342ae,eax
  4195a9:	lock fcom QWORD PTR [ebx]
  4195ac:	cmp    esp,DWORD PTR [eax-0x51da0811]
  4195b2:	jno    0x419583
  4195b4:	(bad)  
  4195b5:	jnp    0x4195c7
  4195b7:	and    ebx,DWORD PTR [esi-0x58]
  4195ba:	mov    ebp,0x271fd5e6
  4195bf:	js     0x419618
  4195c1:	jg     0x4195aa
  4195c3:	adc    dl,bh
  4195c5:	arpl   WORD PTR [esi],dx
  4195c7:	ret    0xcc59
  4195ca:	xchg   BYTE PTR ds:0x124291da,al
  4195d0:	sbb    eax,0xdfd09322
  4195d5:	jb     0x419615
  4195d7:	sub    ecx,DWORD PTR [esi+ebx*2]
  4195da:	fsubr  DWORD PTR [ebx+0x39ae67a7]
  4195e0:	dec    ebx
  4195e1:	mov    al,ds:0xc94fa139
  4195e6:	pop    eax
  4195e7:	lahf   
  4195e8:	jg     0x419646
  4195ea:	loope  0x4195fe
  4195ec:	jg     0xdc2d0371
  4195f2:	mov    dl,0x72
  4195f4:	mov    DWORD PTR [esi+0x6fbbae4b],edx
  4195fa:	mov    dl,0x80
  4195fc:	push   eax
  4195fd:	jo     0x419633
  4195ff:	(bad)  
  419601:	xor    DWORD PTR [edi+0x1e206fa5],eax
  419607:	xor    dl,BYTE PTR [ebp-0x4aeb8da2]
  41960d:	cld    
  41960e:	mov    bh,0x98
  419610:	mov    bl,0xb5
  419612:	je     0x41965b
  419614:	adc    ecx,DWORD PTR [eax]
  419616:	mov    ds:0xeaa5d166,al
  41961b:	fstp   QWORD PTR [edi+0x14]
  41961e:	idiv   BYTE PTR ds:0x78815b42
  419624:	call   0x293c:0xc4b2f50f
  41962b:	xchg   ebx,eax
  41962c:	les    edi,FWORD PTR [ebp+0x7b]
  41962f:	mov    ch,0xff
  419631:	adc    bh,BYTE PTR [eax]
  419633:	mov    esi,0x555367f7
  419638:	arpl   WORD PTR [esi+ebx*8+0x35],bx
  41963c:	dec    esp
  41963d:	inc    edx
  41963e:	jb     0x419680
  419640:	lock frstpm(287 only) 
  419643:	mov    al,ds:0x48badb10
  419648:	mov    fs,edx
  41964a:	bound  esp,QWORD PTR ds:0xc8773270
  419650:	shl    dh,cl
  419652:	rcl    BYTE PTR [edx+0x7cdbeaab],cl
  419658:	mov    edi,0xfad9d3e5
  41965d:	sbb    BYTE PTR es:[eax-0x21],bh
  419661:	fstp   DWORD PTR [ebp-0x10db40dc]
  419667:	mov    cl,0x71
  419669:	mov    esp,0xcf241912
  41966e:	dec    ebp
  41966f:	stc    
  419670:	pop    eax
  419671:	popf   
  419672:	dec    edi
  419673:	jno    0x4196c9
  419675:	xor    esp,DWORD PTR [esi]
  419677:	stc    
  419678:	jbe    0x4196c5
  41967a:	push   edi
  41967b:	aad    0x17
  41967d:	dec    esp
  41967e:	dec    ebp
  41967f:	test   eax,0xc50daf8a
  419684:	push   esi
  419685:	mov    dl,0x8f
  419687:	repz add BYTE PTR [eax],al
  41968a:	outs   dx,BYTE PTR ds:[esi]
  41968b:	cmp    al,0x3d
  41968d:	aaa    
  41968e:	xor    bh,0x1e
  419691:	sbb    DWORD PTR [edx],esi
  419693:	pop    ds
  419694:	xlat   BYTE PTR ds:[ebx]
  419695:	ins    DWORD PTR es:[edi],dx
  419696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419697:	sahf   
  419698:	xchg   BYTE PTR [ecx],dh
  41969a:	rcl    DWORD PTR [ecx+esi*1-0x1ade6a62],cl
  4196a1:	into   
  4196a2:	mov    ebp,0xab8f894e
  4196a7:	jle    0x41970a
  4196a9:	rol    dh,cl
  4196ab:	(bad)  
  4196ac:	out    0x7b,al
  4196ae:	fisubr WORD PTR [ecx-0x26]
  4196b1:	xor    dl,al
  4196b3:	into   
  4196b4:	les    esp,FWORD PTR [eax+eax*8-0x2e4a412d]
  4196bb:	mov    es,WORD PTR [ebx]
  4196bd:	mov    al,dh
  4196bf:	add    al,BYTE PTR [ebp+eax*2-0x24472e2d]
  4196c6:	xchg   esi,eax
  4196c7:	out    dx,eax
  4196c8:	popa   
  4196c9:	xor    DWORD PTR ds:0xadc66ded,esi
  4196cf:	or     DWORD PTR [edi],ebx
  4196d1:	jne    0x4196ad
  4196d3:	jl     0x419713
  4196d5:	cmp    dl,dl
  4196d7:	mov    dl,0x4e
  4196d9:	lea    esp,[ebx+ebp*4]
  4196dc:	lock xchg esi,eax
  4196de:	push   0xffffffd6
  4196e0:	add    DWORD PTR [ebp+0x2a],ebp
  4196e3:	int    0x69
  4196e5:	pop    ebp
  4196e6:	lds    ebp,FWORD PTR [edi-0x23]
  4196e9:	scas   al,BYTE PTR es:[edi]
  4196ea:	ret    
  4196eb:	push   ss
  4196ec:	and    edi,edx
  4196ee:	sub    eax,0x785f18ba
  4196f3:	ja     0x41973e
  4196f5:	mov    ah,BYTE PTR [eax]
  4196f7:	repz sub dl,bl
  4196fa:	lods   eax,DWORD PTR ds:[esi]
  4196fb:	les    ebx,FWORD PTR [ecx]
  4196fd:	test   bh,dh
  4196ff:	loop   0x4196d0
  419701:	or     al,0xc8
  419703:	out    dx,al
  419704:	cdq    
  419705:	add    BYTE PTR [ecx-0x51f6b76d],ah
  41970b:	loop   0x4196a6
  41970d:	cmp    esp,DWORD PTR [ebx]
  41970f:	xlat   BYTE PTR ds:[ebx]
  419710:	aas    
  419711:	aaa    
  419712:	out    0x5,eax
  419714:	adc    eax,0x62ef24c
  419719:	es and eax,edi
  41971c:	hlt    
  41971d:	or     ecx,DWORD PTR [ebx+edi*2-0x4d]
  419721:	(bad)  
  419723:	push   ds
  419724:	mov    eax,0x383304e3
  419729:	jg     0x41970e
  41972b:	mov    edx,DWORD PTR [esi+0x34]
  41972e:	nop
  41972f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419730:	es mov esp,0xc62c5d77
  419736:	sub    al,0x59
  419738:	xchg   ebx,eax
  419739:	pop    ebp
  41973a:	mov    cl,0xd
  41973c:	sub    bl,0xec
  41973f:	push   esp
  419740:	push   ds
  419741:	out    0x76,al
  419743:	xchg   ecx,eax
  419744:	mov    eax,0x206f3d79
  419749:	cmp    al,0x43
  41974b:	mov    esi,0x979cfaf0
  419750:	mov    esi,0xe0544b30
  419755:	stos   DWORD PTR es:[edi],eax
  419756:	or     cl,BYTE PTR [ebx-0x3e]
  419759:	test   eax,0x5cda7d1a
  41975e:	in     eax,dx
  41975f:	inc    esi
  419760:	mov    esi,0x5efb69ff
  419765:	cmp    bh,BYTE PTR [edx+0x2769a153]
  41976b:	adc    bh,BYTE PTR [esi]
  41976d:	mov    dh,0x5a
  41976f:	xchg   ebp,eax
  419770:	push   cs
  419771:	cs popf 
  419773:	jmp    0x4c8d4431
  419778:	xlat   BYTE PTR ds:[ebx]
  419779:	xor    DWORD PTR [esi+esi*4-0x6c95db5f],edi
  419780:	sti    
  419781:	ins    DWORD PTR es:[edi],dx
  419782:	jle    0x419736
  419784:	imul   edx,eax,0x9a4d0bda
  41978a:	popf   
  41978b:	sbb    ebx,edi
  41978d:	daa    
  41978e:	mov    bh,0x64
  419790:	add    eax,0xfc8c9984
  419795:	test   al,0x47
  419797:	xchg   esp,eax
  419798:	jge    0x419801
  41979a:	sub    dl,BYTE PTR [esi-0x7af7d07f]
  4197a0:	sahf   
  4197a1:	jo     0x4197e5
  4197a3:	(bad)  
  4197a4:	arpl   WORD PTR [eax+ecx*4-0x5b],si
  4197a8:	jmp    0x419745
  4197aa:	and    dl,BYTE PTR [esi]
  4197ac:	adc    BYTE PTR [ebx],0x5e
  4197af:	pop    ebp
  4197b0:	inc    edx
  4197b1:	fwait
  4197b2:	mov    ebx,0xdca8572e
  4197b7:	mov    ebx,0x7f1ec282
  4197bc:	adc    eax,0x6feb4f17
  4197c1:	dec    edx
  4197c2:	scas   al,BYTE PTR es:[edi]
  4197c3:	and    al,0x37
  4197c5:	jbe    0x4197b8
  4197c7:	and    al,0x2f
  4197c9:	xor    DWORD PTR [edi],esp
  4197cb:	into   
  4197cc:	ja     0x4197b5
  4197ce:	mov    ah,0xff
  4197d0:	xor    DWORD PTR [ebx+0x52e0e634],ebx
  4197d6:	xchg   esi,eax
  4197d7:	je     0x4197f4
  4197d9:	xor    DWORD PTR [eax],ebp
  4197db:	imul   ebx,DWORD PTR [esp+edx*4+0x19],0xa0e68eab
  4197e3:	adc    eax,0xd32dcd0d
  4197e8:	cmp    esi,DWORD PTR [edx-0x1569998e]
  4197ee:	xor    DWORD PTR ds:0xc6a763b9,ebp
  4197f4:	mov    WORD PTR [ecx+0x4c9c332c],es
  4197fa:	(bad)  
  4197fb:	outs   dx,DWORD PTR ds:[esi]
  4197fc:	in     eax,0xbd
  4197fe:	dec    ebp
  4197ff:	cmp    eax,0xb42e5b8f
  419804:	cmp    al,cl
  419806:	int3   
  419807:	xchg   ebp,eax
  419808:	inc    ebx
  419809:	scas   eax,DWORD PTR es:[edi]
  41980a:	mov    eax,ds:0xb9ce4b59
  41980f:	pop    ebp
  419810:	inc    esp
  419811:	imul   ecx,eax,0xffffff8f
  419814:	inc    ebp
  419816:	cmp    ecx,DWORD PTR [ecx+0x43]
  419819:	data16 mov ss,WORD PTR [edx]
  41981c:	je     0x4197e0
  41981e:	pop    eax
  41981f:	sub    eax,esi
  419821:	lahf   
  419822:	pop    edi
  419823:	push   edi
  419824:	or     bh,BYTE PTR [ebp+esi*4-0x67a7d1b4]
  41982b:	xor    edx,eax
  41982d:	sub    BYTE PTR [ecx],bh
  41982f:	out    0x6e,eax
  419831:	scas   al,BYTE PTR es:[edi]
  419832:	rol    BYTE PTR [edx+0x32],cl
  419835:	mov    al,ds:0xeda6a3d9
  41983a:	add    esp,DWORD PTR [ebp+0x44cb9414]
  419840:	call   FWORD PTR [ecx]
  419842:	mov    ah,0x82
  419844:	xchg   edx,eax
  419845:	fisttp WORD PTR [ebx-0x33]
  419848:	cmp    BYTE PTR [esi+ebp*8],bl
  41984b:	out    dx,eax
  41984c:	inc    edx
  41984d:	std    
  41984e:	mov    ebp,0x4b53a255
  419853:	pop    es
  419854:	mov    ebx,ecx
  419856:	or     al,0xb1
  419858:	fdivr  DWORD PTR [edx]
  41985a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41985b:	mov    ah,0x7d
  41985d:	jge    0x419832
  41985f:	dec    esp
  419860:	and    al,0xc
  419862:	mul    edi
  419864:	cmp    eax,0x5eec2e38
  419869:	xchg   ecx,eax
  41986a:	ds pop eax
  41986c:	mov    ebp,DWORD PTR [ebx+ecx*8-0x20b0bec8]
  419873:	inc    esp
  419874:	ds push esi
  419876:	in     al,dx
  419877:	lock mov al,ds:0x884f074c
  41987d:	je     0x419821
  41987f:	fstp   QWORD PTR [ecx]
  419881:	test   al,0xbd
  419883:	daa    
  419884:	mov    al,ds:0xe6195589
  419889:	iret   
  41988a:	jmp    0x5aaad8fd
  41988f:	ins    DWORD PTR es:[edi],dx
  419890:	pushf  
  419891:	cs mov dh,0xc0
  419894:	mov    edi,0xba101339
  419899:	shl    al,0xd7
  41989c:	pop    edx
  41989d:	imul   ecx,DWORD PTR [ebp-0x15],0x51
  4198a1:	pop    esi
  4198a2:	xchg   BYTE PTR [ebx],bh
  4198a4:	adc    DWORD PTR [esi-0x57d5bd87],0x40a82372
  4198ae:	xchg   esi,eax
  4198af:	xchg   ebp,eax
  4198b0:	sbb    ebx,DWORD PTR ds:0xfe04cc91
  4198b6:	outs   dx,WORD PTR ds:[esi]
  4198b8:	test   DWORD PTR [edx+0x67a23700],ecx
  4198be:	hlt    
  4198bf:	cmp    al,0xa4
  4198c1:	icebp  
  4198c2:	cmp    esp,DWORD PTR [ebp-0x2f373cff]
  4198c8:	hlt    
  4198c9:	pop    esi
  4198ca:	fimul  DWORD PTR [edi]
  4198cc:	adc    al,ch
  4198ce:	pop    ss
  4198cf:	fcom   DWORD PTR [edi+eiz*4]
  4198d2:	sbb    eax,0x14a6000a
  4198d7:	in     eax,0xe8
  4198d9:	mov    bl,0xf5
  4198db:	hlt    
  4198dc:	xchg   edx,eax
  4198dd:	(bad)  [ebx+0x3e19be22]
  4198e3:	mov    ebp,0xc91c4cb7
  4198e8:	ror    DWORD PTR [ebp*1-0x3ec91942],1
  4198ef:	dec    ebp
  4198f0:	mov    al,0xe0
  4198f2:	test   ecx,eax
  4198f4:	jmp    0xa7425199
  4198f9:	test   DWORD PTR [edx+0x5e],edx
  4198fc:	cmp    al,0x74
  4198fe:	sbb    ebp,DWORD PTR [edi]
  419900:	mov    dh,BYTE PTR [edi]
  419902:	jne    0x419973
  419904:	mov    al,0xce
  419906:	jmp    0x5121:0xaaae3c77
  41990d:	inc    esp
  41990e:	xor    bl,BYTE PTR [ecx-0x6c]
  419911:	jo     0x4198a1
  419913:	pop    ss
  419914:	push   esp
  419915:	rcr    DWORD PTR [ebp+0x67],1
  419918:	inc    edi
  419919:	xor    al,0x10
  41991b:	jp     0x41991a
  41991d:	das    
  41991e:	and    ecx,ebx
  419920:	and    ch,dl
  419922:	popf   
  419923:	mov    ebx,0x107e1879
  419928:	xchg   BYTE PTR [eax-0x353a5e01],bh
  41992e:	and    bh,BYTE PTR [ecx-0x2c]
  419931:	lock cmp dh,BYTE PTR [ebp+0x6d954b2f]
  419938:	or     edi,DWORD PTR [ebp+0x463ed6a2]
  41993e:	jge    0x4199bb
  419940:	scas   al,BYTE PTR es:[edi]
  419941:	push   cs
  419942:	sub    DWORD PTR [eax-0x51b407b2],ebp
  419948:	inc    edi
  419949:	test   eax,0x68d9f4eb
  41994e:	xchg   ecx,eax
  41994f:	fst    DWORD PTR ds:0xe9bffa0f
  419955:	mov    dl,0xf2
  419957:	in     al,0x43
  419959:	and    DWORD PTR [edi+0x15ce64c1],edi
  41995f:	hlt    
  419960:	and    BYTE PTR [edx],dh
  419962:	mov    cs,edi
  419964:	arpl   di,cx
  419966:	add    DWORD PTR [edi+0x5b],edx
  419969:	(bad)  
  41996b:	es xchg esp,eax
  41996d:	fdiv   st,st(5)
  41996f:	xlat   BYTE PTR ds:[ebx]
  419970:	addr16 (bad) 
  419972:	stos   BYTE PTR es:[edi],al
  419973:	cs stos DWORD PTR es:[edi],eax
  419975:	cmp    ebp,DWORD PTR [edi+0x13]
  419978:	(bad)  
  419979:	mov    esi,0xcfba708c
  41997e:	and    ebx,DWORD PTR [edi-0x11cee1e3]
  419984:	bound  esp,QWORD PTR [ecx+0x9]
  419987:	ror    esp,1
  419989:	pop    ds
  41998a:	push   cs
  41998b:	scas   al,BYTE PTR es:[edi]
  41998c:	imul   ebp,ebp,0x65b75c30
  419992:	stc    
  419993:	xchg   edx,eax
  419994:	(bad)  
  419995:	push   0x62a71796
  41999a:	push   0x6a
  41999c:	lahf   
  41999d:	push   ds
  41999e:	data16 ins BYTE PTR es:[edi],dx
  4199a0:	repnz lds edi,FWORD PTR [edi-0x4d3a1400]
  4199a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199a8:	dec    edi
  4199a9:	xchg   edx,eax
  4199aa:	into   
  4199ab:	nop
  4199ac:	jo     0x419958
  4199ae:	lds    eax,FWORD PTR [edi-0x44]
  4199b1:	cmp    dh,BYTE PTR [ebx-0x13]
  4199b4:	in     al,0x61
  4199b6:	lock cmp bl,BYTE PTR [eax+0x4a]
  4199ba:	in     al,0xd9
  4199bc:	test   eax,0x4b1b9592
  4199c1:	dec    ecx
  4199c2:	fmul   QWORD PTR [ebx-0x73eef093]
  4199c8:	fisttp QWORD PTR [esi+ecx*8-0x6d]
  4199cc:	(bad)  
  4199cd:	neg    BYTE PTR [ecx]
  4199cf:	xchg   ebp,eax
  4199d0:	sti    
  4199d1:	bound  esi,QWORD PTR [edx+0x23]
  4199d4:	mov    al,0xc7
  4199d6:	or     eax,eax
  4199d8:	mov    ebp,0x185f091b
  4199dd:	ret    
  4199de:	(bad)  
  4199df:	xor    al,0x8c
  4199e1:	call   ecx
  4199e3:	lds    ecx,FWORD PTR [eax-0x1d]
  4199e6:	or     dl,dh
  4199e8:	push   ebp
  4199e9:	add    al,0x57
  4199eb:	out    0x19,al
  4199ed:	dec    esp
  4199ee:	mov    eax,0x748b2dd6
  4199f3:	mov    cl,0xf8
  4199f5:	arpl   WORD PTR [esi+0x3e6513af],cx
  4199fb:	xor    al,0x21
  4199fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199fe:	xor    cl,cl
  419a00:	mov    dh,0xdf
  419a02:	xchg   ebx,eax
  419a03:	cmp    DWORD PTR [ecx-0x7c5abe62],edx
  419a09:	in     al,0xbe
  419a0b:	xor    eax,0xedc6d40f
  419a10:	fs or  al,0x4
  419a13:	sbb    eax,0x48a8f3e1
  419a18:	je     0x4199a2
  419a1a:	pop    ss
  419a1b:	lea    edx,[edx]
  419a1d:	imul   esi,eax,0x45fe352c
  419a23:	cmp    al,BYTE PTR [edx-0x28b240d0]
  419a29:	test   al,0x8d
  419a2b:	clc    
  419a2c:	outs   dx,BYTE PTR ds:[esi]
  419a2d:	sub    DWORD PTR [edi-0x12659eca],ebx
  419a33:	(bad)  [eax]
  419a35:	imul   edi,DWORD PTR [esi],0xffffff80
  419a38:	mov    ebx,0xe6f8150c
  419a3d:	add    DWORD PTR [ebx+0x1e38e010],eax
  419a43:	popf   
  419a44:	jnp    0x4199da
  419a46:	in     eax,dx
  419a47:	jno    0x419ab9
  419a49:	jl     0x419a6d
  419a4b:	pop    edx
  419a4c:	push   edx
  419a4d:	sub    ebp,DWORD PTR [ecx-0x48f439b8]
  419a53:	ret    0xef3
  419a56:	aas    
  419a57:	mov    dl,0xa4
  419a59:	or     DWORD PTR [edi-0x2319904e],ecx
  419a5f:	daa    
  419a60:	sub    DWORD PTR gs:[esi],esp
  419a63:	arpl   WORD PTR [eax+0x5a7c6408],di
  419a69:	lods   eax,DWORD PTR ds:[esi]
  419a6a:	clc    
  419a6b:	jmp    0x23be93a4
  419a70:	sub    eax,edi
  419a72:	das    
  419a73:	imul   eax,DWORD PTR [esi-0x4d7098ac],0x37bbadb8
  419a7d:	push   esp
  419a7e:	push   ss
  419a7f:	and    esp,DWORD PTR [esi-0x43167d7b]
  419a85:	push   ebp
  419a86:	xor    eax,0x48647433
  419a8b:	inc    ebp
  419a8c:	call   0xfea99243
  419a91:	adc    eax,0x36b63235
  419a96:	call   DWORD PTR [ebp-0x6e46cb34]
  419a9c:	jp     0x419a99
  419a9e:	aaa    
  419a9f:	pop    ebp
  419aa0:	dec    ebx
  419aa1:	sub    DWORD PTR [ebp+edi*2-0x1c6abd76],ebx
  419aa8:	or     esp,eax
  419aaa:	aas    
  419aab:	js     0x419ac8
  419aad:	xor    bh,al
  419aaf:	pop    ds
  419ab0:	(bad)  
  419ab2:	mov    ecx,0x81417b31
  419ab7:	je     0x419b2e
  419ab9:	mov    esp,ebx
  419abb:	leave  
  419abc:	out    0x60,eax
  419abe:	lea    eax,[ebx+edi*8]
  419ac1:	clc    
  419ac2:	mov    bh,0xbd
  419ac4:	inc    esi
  419ac5:	push   ss
  419ac6:	inc    edx
  419ac7:	cmp    dl,BYTE PTR [edi]
  419ac9:	and    eax,0x6e956a4f
  419ace:	fdiv   DWORD PTR [ecx+ebx*2]
  419ad1:	aas    
  419ad2:	loop   0x419ab7
  419ad4:	pop    ss
  419ad5:	inc    eax
  419ad6:	xchg   edi,eax
  419ad7:	and    bh,BYTE PTR [esp+ebx*1-0x58e00991]
  419ade:	mov    eax,ds:0x1b80b6d5
  419ae3:	ret    0xdaad
  419ae6:	mov    dh,0xff
  419ae8:	js     0x419adf
  419aea:	cli    
  419aeb:	push   ss
  419aec:	dec    esp
  419aed:	and    DWORD PTR [ebx-0x56f29702],edx
  419af3:	(bad)  
  419af4:	call   0x8aa3:0x2affb5be
  419afb:	loopne 0x419b00
  419afd:	push   edi
  419afe:	shl    DWORD PTR [ebp+ecx*2-0x29669308],0x8d
  419b06:	jg     0x419b86
  419b08:	inc    edx
  419b09:	dec    eax
  419b0a:	jecxz  0x419b0b
  419b0c:	add    bl,bh
  419b0e:	ret    
  419b0f:	outs   dx,DWORD PTR ds:[esi]
  419b10:	je     0x419b7d
  419b12:	fcos   
  419b14:	sbb    al,0x51
  419b16:	sti    
  419b17:	mov    al,ds:0xac628c6
  419b1c:	stc    
  419b1d:	cmp    DWORD PTR [ecx-0x3fa9ddd6],esp
  419b23:	push   eax
  419b24:	addr16 hlt 
  419b26:	lea    edi,[ecx+esi*2-0x14]
  419b2a:	int3   
  419b2b:	cld    
  419b2c:	mov    edi,0xaec0cf67
  419b31:	idiv   BYTE PTR [edx]
  419b33:	mov    edx,0x4376739
  419b38:	sub    ecx,DWORD PTR [eax+ebx*1-0x124a2e23]
  419b3f:	dec    ebp
  419b40:	(bad)  
  419b41:	and    bh,ah
  419b43:	out    0x24,eax
  419b45:	ret    
  419b46:	in     eax,0x76
  419b48:	loope  0x419b54
  419b4a:	gs retf 
  419b4c:	push   edx
  419b4d:	sahf   
  419b4e:	cmp    ebp,DWORD PTR [ebx-0x7e]
  419b51:	jo     0x419bcf
  419b53:	cmc    
  419b54:	push   es
  419b55:	test   cl,ah
  419b57:	sub    edx,DWORD PTR [edx]
  419b59:	mov    WORD PTR [ecx-0x7e5507da],ds
  419b5f:	data16 or al,0xb7
  419b62:	dec    ebx
  419b63:	out    dx,al
  419b64:	xor    BYTE PTR [ecx],bh
  419b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b68:	jmp    0x419bdb
  419b6a:	and    DWORD PTR [eax-0x4f03b5ce],esp
  419b70:	sar    dh,1
  419b72:	xor    BYTE PTR [ebx+ecx*1-0x7c],bh
  419b76:	adc    BYTE PTR [esi+0x1461bee6],bl
  419b7c:	jae    0x419b81
  419b7e:	and    edx,esp
  419b80:	jae    0x419b05
  419b82:	dec    ebx
  419b83:	inc    esp
  419b84:	cmovp  esp,DWORD PTR [edi-0x28]
  419b88:	jp     0x419b47
  419b8a:	in     eax,0x9c
  419b8c:	inc    esi
  419b8d:	sub    DWORD PTR [edi-0x11],esi
  419b90:	xchg   ebx,eax
  419b91:	lods   al,BYTE PTR ds:[esi]
  419b92:	dec    ecx
  419b93:	(bad)  
  419b94:	xor    DWORD PTR [eax+eiz*8],edx
  419b97:	(bad)
  419b9b:	je     0x419b39
  419b9d:	push   0x48
  419b9f:	sub    esi,DWORD PTR [esi+0x4a419a40]
  419ba5:	pop    es
  419ba6:	xchg   ch,bh
  419ba8:	mov    edx,0x3a138605
  419bad:	fs cld 
  419baf:	cwd    
  419bb1:	add    dl,bh
  419bb3:	fnsave [esi-0x7bf2a578]
  419bb9:	or     edi,esp
  419bbb:	adc    BYTE PTR [edi],cl
  419bbd:	add    al,0x14
  419bbf:	call   0x8e16b92
  419bc4:	nop
  419bc5:	(bad)  
  419bc6:	cmp    ebp,DWORD PTR [edx-0x38]
  419bc9:	pop    ecx
  419bca:	(bad)  
  419bcb:	fidiv  WORD PTR [ebx]
  419bcd:	iret   
  419bce:	xchg   ebp,eax
  419bcf:	dec    eax
  419bd0:	imul   ecx,edx,0x53
  419bd3:	xchg   ebx,ebx
  419bd5:	ret    
  419bd6:	mov    al,ds:0x1a8799c
  419bdb:	(bad)  
  419bdc:	arpl   di,dx
  419bde:	ror    DWORD PTR [edx],1
  419be0:	test   BYTE PTR [ecx],dh
  419be2:	sub    al,0x42
  419be4:	mov    ah,0x84
  419be6:	inc    esp
  419be7:	ficom  WORD PTR [ebx-0x40]
  419bea:	pop    eax
  419beb:	sub    DWORD PTR [ebp+0x66defb64],edi
  419bf1:	pushf  
  419bf2:	mov    esi,0xecab119f
  419bf7:	or     eax,0x3fd618a4
  419bfc:	fsub   QWORD PTR [edi]
  419bfe:	jecxz  0x419c5b
  419c00:	ins    DWORD PTR es:[edi],dx
  419c01:	sbb    ebp,edx
  419c03:	or     eax,0x853874c0
  419c08:	pop    eax
  419c09:	and    dl,dh
  419c0b:	dec    ebp
  419c0c:	jnp    0x419c14
  419c0e:	inc    esp
  419c0f:	add    DWORD PTR ds:0xe18f6ae0,eax
  419c15:	adc    eax,0x4ae6589c
  419c1a:	dec    eax
  419c1b:	push   eax
  419c1c:	sub    eax,DWORD PTR [esi]
  419c1e:	shr    BYTE PTR [eax+ecx*2],0x60
  419c22:	loop   0x419bb7
  419c24:	out    0xbe,al
  419c26:	iret   
  419c27:	and    eax,0x632efad1
  419c2c:	xchg   esi,eax
  419c2d:	adc    bh,BYTE PTR [edx]
  419c2f:	pop    es
  419c30:	add    eax,0x14418d2c
  419c35:	xor    DWORD PTR [edi+edx*8-0x53],edx
  419c39:	xchg   ebp,eax
  419c3a:	pop    es
  419c3b:	enter  0x4877,0xd4
  419c3f:	aaa    
  419c40:	prefetcht1 BYTE PTR [edi-0x6b]
  419c44:	mov    al,0x99
  419c46:	cmc    
  419c47:	xchg   ecx,eax
  419c48:	mov    esp,DWORD PTR [ebp-0x5bbc8afb]
  419c4e:	inc    ebp
  419c4f:	lds    ecx,FWORD PTR fs:[ebp-0x1c]
  419c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c54:	fcom   DWORD PTR [esp+edi*1+0x5f]
  419c58:	addr16 dec esi
  419c5a:	in     eax,0xfd
  419c5c:	pop    esi
  419c5d:	(bad)  
  419c5e:	adc    ebp,DWORD PTR [ebp+0x3b03ac05]
  419c64:	xor    al,0x36
  419c66:	inc    ebx
  419c67:	pop    esi
  419c68:	mov    WORD PTR [edx-0x51],?
  419c6b:	repz push ecx
  419c6d:	mov    eax,ds:0x8ad8d959
  419c72:	pusha  
  419c73:	(bad)  
  419c75:	adc    ebp,ebp
  419c77:	sti    
  419c78:	xchg   ecx,eax
  419c79:	xor    DWORD PTR [ecx],edx
  419c7b:	repnz pusha 
  419c7d:	dec    eax
  419c7e:	cmc    
  419c7f:	xor    esp,ebp
  419c81:	jnp    0x419cb0
  419c83:	out    0xad,al
  419c85:	int    0xb7
  419c87:	dec    eax
  419c88:	mov    al,ds:0x7125789d
  419c8d:	xlat   BYTE PTR ds:[ebx]
  419c8e:	out    0x1d,eax
  419c90:	test   eax,0x8d8fb27b
  419c95:	rcr    BYTE PTR [esi+0x483ce6ca],1
  419c9b:	outs   dx,DWORD PTR ds:[esi]
  419c9c:	jns    0x419c80
  419c9e:	and    DWORD PTR fs:[eax-0x5],esi
  419ca2:	adc    DWORD PTR [esi-0x60cd617e],ebp
  419ca8:	sub    BYTE PTR [esi+0x10],ch
  419cab:	push   cs
  419cac:	or     eax,0x4ca70898
  419cb1:	loopne 0x419cbc
  419cb3:	dec    edi
  419cb4:	pop    es
  419cb5:	add    eax,0xaf70e443
  419cba:	xchg   edx,eax
  419cbb:	ds pusha 
  419cbd:	arpl   si,dx
  419cbf:	push   0x5b8b1e76
  419cc4:	cdq    
  419cc5:	dec    ecx
  419cc6:	dec    esi
  419cc8:	pop    edi
  419cc9:	push   eax
  419cca:	iret   
  419ccb:	cmc    
  419ccc:	inc    ebp
  419ccd:	leave  
  419cce:	jl     0x419d18
  419cd0:	(bad)  [eax-0x56]
  419cd3:	rcr    BYTE PTR [esi+0x20b9dab0],0x62
  419cda:	jae    0x419d29
  419cdc:	mov    al,0x77
  419cde:	jecxz  0x419ce7
  419ce0:	mov    bh,0xec
  419ce2:	push   ecx
  419ce3:	adc    DWORD PTR [ebx-0x4f],ecx
  419ce6:	mov    esp,0xe2c567ca
  419ceb:	arpl   WORD PTR [eax+0x7d82859a],si
  419cf1:	jnp    0x419d61
  419cf3:	pop    ds
  419cf4:	adc    bh,ah
  419cf6:	xchg   BYTE PTR [ebx],dl
  419cf8:	das    
  419cf9:	mov    esp,ss
  419cfb:	dec    esi
  419cfc:	pop    ecx
  419cfd:	xchg   edx,eax
  419cfe:	adc    BYTE PTR [eax],cl
  419d00:	bound  eax,QWORD PTR [ebp+0x5f831f77]
  419d06:	or     al,0xc8
  419d08:	out    0x5d,al
  419d0a:	scas   eax,DWORD PTR es:[edi]
  419d0b:	ret    
  419d0c:	scas   eax,DWORD PTR es:[edi]
  419d0d:	push   ebx
  419d0e:	daa    
  419d0f:	push   ebx
  419d10:	xchg   edi,eax
  419d11:	pop    eax
  419d12:	sub    edx,ebx
  419d14:	popa   
  419d15:	je     0x419d6a
  419d17:	mov    eax,0x26b210e
  419d1c:	loope  0x419cd5
  419d1e:	and    dl,ah
  419d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d21:	pop    ebx
  419d22:	pop    ebx
  419d23:	outs   dx,BYTE PTR ds:[esi]
  419d24:	jp     0x419d88
  419d26:	and    dl,bh
  419d28:	push   ebx
  419d29:	pushf  
  419d2a:	fdivr  st(2),st
  419d2c:	jmp    0x419cb9
  419d2e:	in     al,0xe0
  419d30:	sbb    al,0x7f
  419d32:	xor    ch,ch
  419d34:	sti    
  419d35:	cmp    dl,bh
  419d37:	push   ebx
  419d38:	(bad)  
  419d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d3a:	push   ds
  419d3b:	pop    esi
  419d3c:	ss dec eax
  419d3e:	loopne 0x419d52
  419d40:	pop    ecx
  419d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d42:	xchg   ecx,eax
  419d43:	std    
  419d44:	mov    esi,0xadf7fec0
  419d49:	sub    DWORD PTR [esp+0x1bf3b318],ebp
  419d50:	xor    al,0xc9
  419d52:	dec    edx
  419d53:	hlt    
  419d54:	arpl   WORD PTR ds:0x9cf78b9b,bx
  419d5a:	not    BYTE PTR [ebx-0x5afc74fa]
  419d60:	adc    al,0xd8
  419d62:	and    eax,0xcc06d288
  419d67:	xchg   edi,eax
  419d68:	lea    ecx,[eax+esi*2-0x67fa076d]
  419d6f:	and    ebx,esi
  419d71:	adc    al,0x42
  419d73:	sub    DWORD PTR [ebx],edi
  419d75:	and    ebx,DWORD PTR fs:[edx+0x5f]
  419d79:	xlat   BYTE PTR ds:[ebx]
  419d7a:	hlt    
  419d7b:	xchg   ebp,eax
  419d7c:	sub    BYTE PTR [ecx],ah
  419d7e:	test   eax,0xefb5f26
  419d83:	inc    ebx
  419d84:	jae    0x419d2d
  419d86:	nop
  419d87:	pop    eax
  419d88:	sub    DWORD PTR [eax],edi
  419d8a:	repnz mov es,WORD PTR [edx]
  419d8d:	das    
  419d8e:	shr    DWORD PTR [eax+0x63],1
  419d91:	daa    
  419d92:	xor    dh,BYTE PTR [ecx-0x1b140ce8]
  419d98:	sub    BYTE PTR [eax+0x1eaa6f1d],al
  419d9e:	mov    dh,0x92
  419da0:	ja     0x1960722
  419da6:	(bad)  
  419da7:	xchg   ebx,eax
  419da8:	xchg   bl,ch
  419daa:	dec    ebx
  419dab:	jae    0x419d63
  419dad:	pop    ds
  419dae:	push   ds
  419daf:	pushf  
  419db0:	jb     0x419de5
  419db2:	jbe    0x419dbb
  419db4:	(bad)  
  419db5:	lahf   
  419db6:	sbb    eax,0x6841bf93
  419dbb:	mov    ecx,0xfe38296a
  419dc0:	rol    DWORD PTR [ebp-0x538181f6],cl
  419dc6:	cmp    eax,0x2c23f1f3
  419dcb:	xchg   esp,eax
  419dcc:	inc    ebp
  419dcd:	inc    esp
  419dce:	rol    al,0x73
  419dd1:	sub    dl,dl
  419dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dd4:	daa    
  419dd5:	xchg   ecx,eax
  419dd6:	ins    BYTE PTR es:[edi],dx
  419dd7:	sub    eax,0x4ec98cd8
  419ddc:	xor    BYTE PTR [edi+0x6e94baf3],ch
  419de2:	(bad)  
  419de4:	out    0xf1,al
  419de6:	div    dl
  419de8:	xchg   ebx,eax
  419de9:	inc    esp
  419dea:	ds push edi
  419dec:	ss cli 
  419dee:	aaa    
  419def:	mov    edi,0xee28327a
  419df4:	pop    ebp
  419df5:	xlat   BYTE PTR ds:[ebx]
  419df6:	cmc    
  419df7:	pop    esi
  419df8:	mov    edx,0x57362b50
  419dfd:	imul   ebx,DWORD PTR [ebx],0x372773ac
  419e03:	das    
  419e04:	leave  
  419e05:	lods   al,BYTE PTR ds:[esi]
  419e06:	adc    eax,0x672d7c42
  419e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e0c:	test   eax,0x39bfd052
  419e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e12:	jnp    0x419e23
  419e14:	jge    0x419e69
  419e16:	and    al,0x87
  419e18:	xor    al,0x37
  419e1a:	inc    ecx
  419e1b:	push   es
  419e1c:	mov    ds:0x8c5874a8,al
  419e21:	xchg   ebx,eax
  419e22:	in     eax,0x21
  419e24:	sbb    al,0xd0
  419e26:	fwait
  419e27:	xlat   BYTE PTR ds:[ebx]
  419e28:	dec    esp
  419e29:	(bad)  
  419e2a:	js     0x419e23
  419e2c:	jae    0x419e69
  419e2e:	push   esp
  419e2f:	cmp    DWORD PTR [ebp+0x51],esi
  419e32:	mov    ebx,DWORD PTR [edx+0x41700e96]
  419e38:	and    eax,esp
  419e3a:	jle    0x419dfc
  419e3c:	pop    es
  419e3d:	mov    cl,0x47
  419e3f:	popa   
  419e40:	lock popa 
  419e42:	dec    ecx
  419e43:	icebp  
  419e44:	mov    ebx,cs
  419e46:	std    
  419e47:	lds    edi,FWORD PTR [ecx+0x5d]
  419e4a:	mov    eax,0x876048ae
  419e4f:	bound  edx,QWORD PTR [edx-0x7c]
  419e52:	adc    edx,DWORD PTR [edi]
  419e54:	xor    DWORD PTR [edx],ecx
  419e56:	mov    ds:0x89de4df4,al
  419e5b:	jns    0x419df9
  419e5d:	rcr    BYTE PTR [edx],cl
  419e5f:	dec    eax
  419e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e61:	dec    ebp
  419e62:	or     DWORD PTR [ecx+0x60],ebx
  419e65:	xor    BYTE PTR [edx+ecx*4],0x6
  419e69:	jle    0x419e33
  419e6b:	mov    DWORD PTR [eax+edx*4-0x3a86880b],ecx
  419e72:	mov    al,ds:0xc60ffd6d
  419e77:	sub    dl,BYTE PTR [ecx]
  419e79:	cli    
  419e7a:	lock ja 0x419e69
  419e7d:	mov    ds:0x48842195,eax
  419e82:	push   edx
  419e83:	sub    eax,0xf77cae87
  419e88:	jecxz  0x419e0d
  419e8a:	cld    
  419e8b:	jmp    0x419e15
  419e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e8e:	jae    0x419eed
  419e90:	pop    esp
  419e91:	mov    esp,0xa50b6f
  419e96:	inc    ecx
  419e97:	dec    eax
  419e98:	popf   
  419e99:	fnstsw WORD PTR [edi+0x7c]
  419e9c:	and    DWORD PTR [ebp-0x6c],0x9e7f9949
  419ea3:	xchg   ecx,eax
  419ea4:	mov    ds:0x720b775f,al
  419ea9:	shl    BYTE PTR [edx-0x727d5b38],0x6a
  419eb0:	pushf  
  419eb1:	repz cli 
  419eb3:	cmp    ebp,eax
  419eb5:	shr    BYTE PTR [ebx+ecx*2-0x7e],1
  419eb9:	mov    ch,0x30
  419ebb:	pop    ss
  419ebc:	mov    bh,0xec
  419ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ebf:	aaa    
  419ec0:	inc    ebx
  419ec1:	ja     0x419e85
  419ec3:	pop    edi
  419ec4:	imul   DWORD PTR [ebp-0x43]
  419ec7:	(bad)  
  419ec8:	call   0x1538:0x88f5c009
  419ecf:	jle    0x419e8d
  419ed1:	push   eax
  419ed2:	retf   0x8588
  419ed5:	mov    cl,0x2e
  419ed7:	mov    ds:0x48b96fed,al
  419edc:	dec    edi
  419edd:	ss push ebx
  419edf:	sbb    edx,DWORD PTR [eax]
  419ee1:	adc    BYTE PTR ds:0xcd1e43ec,0x81
  419ee8:	inc    esi
  419ee9:	add    eax,0x9addab2
  419eee:	(bad)  
  419eef:	xor    eax,0x22054222
  419ef4:	xchg   edi,eax
  419ef5:	test   al,ah
  419ef7:	(bad)  
  419ef8:	popf   
  419ef9:	(bad)  
  419efa:	(bad)  
  419efb:	gs aaa 
  419efd:	adc    ebx,ebp
  419eff:	test   BYTE PTR [eax],0x20
  419f02:	push   0xfffffff4
  419f04:	sbb    eax,0xa8b14758
  419f09:	fwait
  419f0a:	push   cs
  419f0b:	mov    ds:0x3a5e291e,eax
  419f10:	mov    dl,0xb7
  419f12:	sbb    cl,BYTE PTR [esp+edx*8-0x7699e0e4]
  419f19:	mov    ebx,0xbb2a7fb2
  419f1e:	add    eax,0x8b39b813
  419f23:	pop    ecx
  419f24:	fdivr  DWORD PTR [esi+0x31fed590]
  419f2a:	sbb    DWORD PTR [ecx+0x55b870f],edx
  419f30:	adc    BYTE PTR [ebx],0xc8
  419f33:	adc    al,0x33
  419f35:	sbb    DWORD PTR [ebp+0x66218d4f],edx
  419f3b:	frndint 
  419f3d:	(bad)
  419f42:	adc    edx,0x61f436aa
  419f48:	xchg   ebx,eax
  419f49:	cs push edx
  419f4b:	lds    ebx,FWORD PTR [ecx-0x1a668018]
  419f51:	les    edi,FWORD PTR [edx-0x51293e6f]
  419f57:	mov    DWORD PTR [eax],0x9453bd49
  419f5d:	sbb    cl,BYTE PTR [edx]
  419f5f:	arpl   WORD PTR [edx-0x37],si
  419f62:	adc    al,0xf2
  419f64:	mov    ?,WORD PTR [edx+0x33]
  419f67:	mov    al,ds:0x17764c7e
  419f6c:	cs aad 0x57
  419f6f:	sbb    ecx,esi
  419f71:	jmp    0xa04a:0xe0ed9492
  419f78:	test   al,0xa
  419f7a:	push   es
  419f7b:	aaa    
  419f7c:	retf   0xa19d
  419f7f:	jmp    0x5a27:0x58b0de05
  419f86:	stos   DWORD PTR es:[edi],eax
  419f87:	daa    
  419f88:	push   ebx
  419f89:	pusha  
  419f8a:	inc    esi
  419f8b:	sub    al,0x24
  419f8d:	out    0xf8,eax
  419f8f:	mov    bl,0x0
  419f91:	fwait
  419f92:	push   ebx
  419f93:	iret   
  419f94:	xchg   edi,eax
  419f95:	repnz sub BYTE PTR [esi-0x26458799],bh
  419f9c:	ret    0x7bc4
  419f9f:	adc    al,0x8f
  419fa1:	ret    0x4dbc
  419fa4:	clc    
  419fa5:	lods   al,BYTE PTR ds:[esi]
  419fa6:	test   DWORD PTR [edx-0x63],eax
  419fa9:	jle    0x41a023
  419fab:	mov    ebp,0x7e76e6fd
  419fb0:	pusha  
  419fb1:	imul   ebp,DWORD PTR [edx],0x234e1087
  419fb7:	enter  0x5378,0x42
  419fbb:	push   0xdb4149ed
  419fc0:	lock or BYTE PTR [esp+edx*1+0x2],dl
  419fc5:	pop    ebp
  419fc6:	adc    eax,0x30e0f33f
  419fcb:	or     al,0x97
  419fcd:	lods   eax,DWORD PTR ds:[esi]
  419fce:	xchg   esp,eax
  419fcf:	sub    BYTE PTR [eax+0x1],ch
  419fd2:	fidiv  WORD PTR [edi]
  419fd4:	add    al,0x17
  419fd6:	fisubr WORD PTR [eax+0x15]
  419fd9:	stos   DWORD PTR es:[edi],eax
  419fda:	loop   0x41a00a
  419fdc:	jb     0x419f71
  419fde:	jmp    0x927cabfc
  419fe3:	lods   al,BYTE PTR ds:[esi]
  419fe4:	(bad)  
  419fe5:	xor    eax,0xd1482975
  419fea:	call   ecx
  419fec:	xor    BYTE PTR [edx],bh
  419fee:	dec    eax
  419fef:	push   0x23
  419ff1:	dec    edi
  419ff2:	and    BYTE PTR [esp+edx*8],bh
  419ff5:	pusha  
  419ff6:	call   0xf3e1630e
  419ffb:	rcl    DWORD PTR [edx-0x597cf925],1
  41a001:	scas   eax,DWORD PTR es:[edi]
  41a002:	xchg   ecx,eax
  41a003:	dec    ebx
  41a004:	adc    eax,0x115fdce5
  41a009:	retf   
  41a00a:	js     0x41a061
  41a00c:	ror    DWORD PTR [ecx],cl
  41a00e:	push   edi
  41a00f:	cmp    dh,BYTE PTR [esp+edi*1-0x16a3cde0]
  41a016:	ins    BYTE PTR es:[edi],dx
  41a017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a018:	inc    eax
  41a019:	add    ecx,0x38f4689b
  41a01f:	dec    ecx
  41a020:	xor    DWORD PTR [edi-0x56b2f31b],0xffffff8e
  41a027:	xor    eax,0xd530d6f4
  41a02c:	retf   0x2043
  41a02f:	push   0xffffffdf
  41a031:	cli    
  41a032:	into   
  41a033:	outs   dx,BYTE PTR ds:[esi]
  41a034:	sahf   
  41a035:	sub    al,0x0
  41a037:	xchg   ebx,eax
  41a038:	mov    DWORD PTR [edx+0x324fa83d],0x39b3f2da
  41a042:	mov    edi,0xeda922fd
  41a047:	ins    BYTE PTR es:[edi],dx
  41a048:	cmp    edx,DWORD PTR [ecx]
  41a04a:	cmp    al,BYTE PTR [esi+0x46]
  41a04d:	sub    al,0x31
  41a04f:	mov    eax,0x95a1e538
  41a054:	mov    ah,0xc8
  41a056:	xchg   ebx,eax
  41a057:	fwait
  41a058:	cmp    ebp,DWORD PTR [ebx+0x7ac0e5eb]
  41a05e:	ins    BYTE PTR es:[edi],dx
  41a05f:	xchg   DWORD PTR [edx-0x2e11a19e],edx
  41a065:	stos   BYTE PTR es:[edi],al
  41a066:	xchg   edi,eax
  41a067:	dec    ecx
  41a068:	jmp    0x5638:0x1a205592
  41a06f:	push   ebp
  41a070:	sbb    BYTE PTR [esi+0x2dc67095],ah
  41a076:	adc    eax,0x9a12a568
  41a07b:	pop    edi
  41a07c:	cmp    al,0x7e
  41a07e:	mov    al,ds:0x8915b6d
  41a083:	cli    
  41a084:	cwde   
  41a085:	xor    eax,DWORD PTR [esi]
  41a087:	jne    0x41a08d
  41a089:	or     eax,0x2cfb31d1
  41a08e:	sbb    DWORD PTR [esi+eax*4-0x6e],ebp
  41a092:	push   esi
  41a093:	stc    
  41a094:	add    eax,0xa976e117
  41a099:	add    dh,bl
  41a09b:	(bad)  ds:0x7ecffe4b
  41a0a1:	xchg   ebx,eax
  41a0a2:	mov    ebx,0x16016340
  41a0a7:	mov    ch,0x3c
  41a0a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0aa:	lea    esi,[edi+0x2]
  41a0ad:	mov    ?,WORD PTR [edx]
  41a0af:	pushf  
  41a0b0:	loope  0x41a0c9
  41a0b2:	lea    ebx,[edx-0x1540cf40]
  41a0b8:	cli    
  41a0b9:	ins    BYTE PTR es:[edi],dx
  41a0ba:	mov    esp,DWORD PTR [ebx+0x23]
  41a0bd:	jns    0x41a08b
  41a0bf:	clc    
  41a0c0:	cld    
  41a0c1:	xchg   ebp,eax
  41a0c2:	imul   esi,DWORD PTR [edi+0x42],0xffffffb0
  41a0c6:	add    eax,0xe72ac5e7
  41a0cb:	retf   
  41a0cc:	add    dh,bh
  41a0ce:	popf   
  41a0cf:	aas    
  41a0d0:	mov    ah,0xb6
  41a0d2:	cmp    dh,BYTE PTR [edi+ecx*2]
  41a0d5:	mov    al,ds:0x1b310c56
  41a0da:	pop    es
  41a0db:	(bad)  
  41a0dd:	rol    DWORD PTR [ebp+eax*4-0x58],1
  41a0e1:	addr16 push ebp
  41a0e3:	inc    ecx
  41a0e4:	imul   ebp,edi,0x42cd2257
  41a0ea:	push   ebp
  41a0eb:	in     eax,dx
  41a0ec:	cmp    edi,ebp
  41a0ee:	int3   
  41a0ef:	mov    ebx,cs
  41a0f1:	add    esp,eax
  41a0f3:	dec    eax
  41a0f4:	jmp    0x41a09f
  41a0f6:	xchg   DWORD PTR [ebx-0x204ec5eb],eax
  41a0fc:	cwde   
  41a0fd:	test   eax,0xbea6b390
  41a102:	es mov ah,0x9
  41a105:	ins    DWORD PTR es:[edi],dx
  41a106:	js     0x41a0aa
  41a108:	arpl   WORD PTR [esi+esi*2+0x26886ecb],si
  41a10f:	and    BYTE PTR [esi+ecx*4-0x60],ah
  41a113:	mov    dh,BYTE PTR [edi+0x77]
  41a116:	or     BYTE PTR [edx-0x76],0xa9
  41a11a:	xchg   dl,ah
  41a11c:	out    dx,eax
  41a11d:	sahf   
  41a11e:	inc    esi
  41a11f:	xor    BYTE PTR [edx],0x16
  41a122:	ror    BYTE PTR [eax-0x33],0x38
  41a126:	sub    al,0xad
  41a128:	jnp    0x41a18a
  41a12a:	call   0xe884:0x95f0bea1
  41a131:	inc    ebx
  41a132:	cmp    esp,ebp
  41a134:	jnp    0x41a153
  41a136:	sbb    cl,BYTE PTR ds:0xa8963ac3
  41a13c:	popf   
  41a13d:	les    ebx,FWORD PTR [edi]
  41a13f:	test   eax,0x2f8191ae
  41a144:	in     eax,dx
  41a145:	cmp    cl,BYTE PTR [ebp+0x679be6ae]
  41a14b:	mov    ds:0x2576febc,al
  41a150:	fucom  st(0)
  41a152:	je     0x41a1b4
  41a154:	in     eax,dx
  41a155:	stos   BYTE PTR es:[edi],al
  41a156:	sahf   
  41a157:	sbb    DWORD PTR [edx+0x70],edi
  41a15a:	clc    
  41a15b:	xchg   ebp,eax
  41a15c:	adc    al,0xf1
  41a15e:	not    ah
  41a160:	dec    ebx
  41a161:	lock fs or edi,esp
  41a165:	mov    edx,0xc71ed68f
  41a16a:	out    0xca,eax
  41a16c:	sbb    dh,BYTE PTR [esi+0x6]
  41a16f:	inc    ebp
  41a170:	cmp    dh,BYTE PTR [edi]
  41a172:	fistp  DWORD PTR [edi]
  41a174:	and    al,0x34
  41a176:	ins    DWORD PTR es:[edi],dx
  41a177:	js     0x41a148
  41a179:	mov    bl,0x1a
  41a17b:	pop    edx
  41a17c:	ja     0x41a1e5
  41a17e:	mov    bl,0xab
  41a180:	sbb    bl,bl
  41a182:	mov    ds:0x375e87a7,eax
  41a187:	inc    ebx
  41a188:	jno    0x41a1ae
  41a18a:	push   ss
  41a18b:	cld    
  41a18c:	jbe    0x41a147
  41a18e:	adc    al,0x73
  41a190:	loop   0x41a17a
  41a192:	test   DWORD PTR [ecx],esp
  41a194:	adc    edi,DWORD PTR [edi+eax*4+0x2d4c4efa]
  41a19b:	inc    edi
  41a19c:	pop    esp
  41a19d:	sub    DWORD PTR [eax],0x94e68497
  41a1a3:	mov    edx,0xff57f551
  41a1a8:	and    al,0xdd
  41a1aa:	pop    ebp
  41a1ab:	mov    bh,BYTE PTR [edx]
  41a1ad:	mov    ss,WORD PTR fs:[ebp+0x210f74c7]
  41a1b4:	shl    DWORD PTR [ecx+0x2a],1
  41a1b7:	dec    edi
  41a1b8:	rcl    BYTE PTR [ecx+0x44c74b55],1
  41a1be:	cmc    
  41a1bf:	retf   0x9770
  41a1c2:	cld    
  41a1c3:	inc    ebp
  41a1c4:	sbb    BYTE PTR [edx-0x5df0dc8b],bh
  41a1ca:	aaa    
  41a1cb:	jnp    0x41a20f
  41a1cd:	mov    al,ds:0x78462f57
  41a1d2:	xchg   ecx,eax
  41a1d3:	mov    dh,0x8e
  41a1d5:	sub    DWORD PTR [edx+0x3d8911c1],0xffffffba
  41a1dc:	ja     0x41a1eb
  41a1de:	add    dl,bl
  41a1e0:	and    BYTE PTR [edi],al
  41a1e2:	ss jecxz 0x41a205
  41a1e5:	dec    ebx
  41a1e6:	repz jmp 0x3488ae6b
  41a1ec:	ins    DWORD PTR es:[edi],dx
  41a1ed:	movhps QWORD PTR [esi],xmm1
  41a1f0:	repnz fidiv DWORD PTR [ebp+0x3f]
  41a1f4:	adc    eax,0x27cad3dc
  41a1f9:	ret    
  41a1fa:	xlat   BYTE PTR ds:[ebx]
  41a1fb:	and    eax,0xaffa95ac
  41a200:	jns    0x41a205
  41a202:	pop    ecx
  41a203:	das    
  41a204:	idiv   BYTE PTR [esi+0x7b25d7ac]
  41a20a:	fisubr WORD PTR [edi-0x7190437a]
  41a210:	jno    0x41a1e7
  41a212:	aam    0xda
  41a214:	int3   
  41a215:	repnz fs into 
  41a218:	push   esp
  41a219:	pushf  
  41a21a:	sbb    BYTE PTR [ebx+0x245ae6ac],cl
  41a220:	ins    DWORD PTR es:[edi],dx
  41a221:	pop    esp
  41a222:	push   esp
  41a223:	xor    bl,ch
  41a225:	pop    ebx
  41a226:	mov    ebp,0x27bcf891
  41a22b:	and    al,0x1e
  41a22d:	(bad)  
  41a22e:	fldcw  WORD PTR [eax-0x60]
  41a231:	pusha  
  41a232:	sbb    BYTE PTR [esp+edx*8-0x501edabf],ch
  41a239:	jmp    0x5efb604d
  41a23e:	ret    
  41a23f:	fdivr  st(7),st
  41a241:	out    0x79,al
  41a243:	or     esi,edi
  41a245:	adc    eax,0xa68d215f
  41a24a:	iret   
  41a24b:	push   esp
  41a24c:	xor    dh,BYTE PTR [edi-0x5cd65bb1]
  41a252:	cdq    
  41a253:	jmp    0x41a2ca
  41a255:	daa    
  41a256:	mov    dl,0xe8
  41a258:	xor    al,0x5
  41a25a:	pop    esp
  41a25b:	cli    
  41a25c:	cmc    
  41a25d:	test   BYTE PTR [ecx+edx*1+0xe5d3ea2],0xb4
  41a265:	out    dx,eax
  41a266:	and    eax,ecx
  41a268:	outs   dx,DWORD PTR ds:[esi]
  41a26a:	mov    edi,0x61155bdd
  41a26f:	inc    ebx
  41a270:	stc    
  41a271:	bound  esp,QWORD PTR [edi-0x5997cf3e]
  41a277:	call   0x478f:0x415c00b9
  41a27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a27f:	cmp    al,0x50
  41a281:	dec    ecx
  41a282:	dec    ecx
  41a283:	shr    BYTE PTR [esi+ebx*8-0x401826c7],1
  41a28a:	and    DWORD PTR [ebx-0x30],esp
  41a28d:	sub    ch,0xa6
  41a290:	xchg   dh,ch
  41a292:	vpmaxub xmm4,xmm5,XMMWORD PTR [ebp+0x786fa14a]
  41a29a:	test   eax,0x8fae6bdc
  41a29f:	push   edx
  41a2a0:	ins    DWORD PTR es:[edi],dx
  41a2a1:	jmp    FWORD PTR [ebx+edx*1+0x3c]
  41a2a5:	xchg   al,dl
  41a2a7:	sub    BYTE PTR [ecx+0x5ec06d35],cl
  41a2ad:	mov    WORD PTR [edi+0x12f942d5],gs
  41a2b3:	pusha  
  41a2b4:	xchg   BYTE PTR [ecx+0x5227c3fd],ch
  41a2ba:	mov    dl,0xe5
  41a2bc:	ds mov edx,0x1219048
  41a2c2:	mov    edi,0x245950d1
  41a2c7:	shl    DWORD PTR [edx+0x27],1
  41a2ca:	out    0x4c,eax
  41a2cc:	xchg   esi,eax
  41a2cd:	rcl    DWORD PTR [edi+0x7],0xc4
  41a2d1:	pop    ebx
  41a2d2:	bound  ebp,QWORD PTR [ecx+0x4b]
  41a2d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d6:	out    0x54,al
  41a2d8:	fld    QWORD PTR [esi]
  41a2da:	push   0xf2580320
  41a2df:	dec    al
  41a2e1:	jge    0x41a2ec
  41a2e3:	loope  0x41a2a0
  41a2e5:	repz mov esi,0x8d8acf0d
  41a2eb:	or     DWORD PTR [edi-0x7b],esi
  41a2ee:	adc    eax,0x47792a4b
  41a2f3:	xchg   esi,eax
  41a2f4:	daa    
  41a2f5:	retf   
  41a2f6:	mov    bh,0xfb
  41a2f8:	int    0x1e
  41a2fa:	bound  edi,QWORD PTR [ebx+0x3e]
  41a2fd:	jno    0x41a33e
  41a2ff:	outs   dx,DWORD PTR ds:[esi]
  41a300:	out    0xcc,eax
  41a302:	test   eax,0x2fd59d32
  41a307:	add    BYTE PTR [ebp+0x2c],bl
  41a30a:	sbb    al,0x7
  41a30c:	inc    esp
  41a30d:	mov    eax,ds:0x735f141d
  41a312:	mov    ebp,0xfcd20faf
  41a317:	push   esi
  41a318:	dec    edi
  41a319:	mov    esi,0xb9d55388
  41a31e:	dec    eax
  41a31f:	shl    DWORD PTR [ecx-0x5a],cl
  41a322:	pop    edi
  41a323:	push   DWORD PTR ds:0x88762522
  41a329:	xor    al,0xc0
  41a32b:	in     eax,0x49
  41a32d:	mov    bh,0x70
  41a32f:	shl    cl,1
  41a331:	rcr    cl,0xc8
  41a334:	int    0xd9
  41a336:	push   ds
  41a337:	call   0x510504c2
  41a33c:	lahf   
  41a33d:	cmp    BYTE PTR [ebx],cl
  41a33f:	push   0x46
  41a341:	sub    al,0xa9
  41a343:	pop    es
  41a344:	ds inc esp
  41a346:	fidivr WORD PTR [edx-0x2f0d1ecc]
  41a34c:	pop    edi
  41a34d:	sub    esi,eax
  41a34f:	fmul   QWORD PTR [eax]
  41a351:	hlt    
  41a352:	or     bl,BYTE PTR ds:0xa9dcf7e6
  41a358:	sub    BYTE PTR [edi],ch
  41a35a:	xor    cl,BYTE PTR [eax]
  41a35c:	loope  0x41a357
  41a35e:	or     DWORD PTR [ecx+ebx*2-0x5e],edx
  41a362:	fadd   DWORD PTR [ebx+0x36]
  41a365:	inc    esi
  41a366:	adc    cl,ch
  41a368:	adc    DWORD PTR fs:[ebp+0x5ee692de],ebx
  41a36f:	retf   
  41a370:	and    dl,BYTE PTR [esi-0x2d]
  41a373:	call   0x920845b5
  41a378:	js     0x41a3bd
  41a37a:	pxor   mm0,QWORD PTR [edx]
  41a37d:	lods   al,BYTE PTR ds:[esi]
  41a37e:	lods   eax,DWORD PTR ds:[esi]
  41a37f:	xchg   edi,eax
  41a380:	ss jno 0x41a3b6
  41a383:	push   es
  41a384:	add    DWORD PTR [edi+0x74],0x2796608b
  41a38b:	jp     0x41a409
  41a38d:	int3   
  41a38e:	test   al,0xd1
  41a390:	fsub   DWORD PTR [edx+0x24cf60e0]
  41a396:	dec    ebp
  41a397:	ja     0x41a3a2
  41a399:	mov    eax,ds:0x8bdff6f9
  41a39e:	mov    ds:0x7d424d3f,al
  41a3a3:	pop    esp
  41a3a4:	mov    bl,0x3
  41a3a6:	lock fs xchg si,ax
  41a3aa:	in     eax,0x24
  41a3ac:	jmp    0x41a383
  41a3ae:	xchg   DWORD PTR ds:0x59f33307,edx
  41a3b4:	xchg   DWORD PTR [esi],ebx
  41a3b6:	lds    ebx,FWORD PTR [ebx-0x55dbe388]
  41a3bc:	cmp    DWORD PTR [ecx-0x4b599325],eax
  41a3c2:	cmp    al,0xf0
  41a3c4:	cwde   
  41a3c5:	ret    0x50bc
  41a3c8:	outs   dx,BYTE PTR ds:[esi]
  41a3c9:	(bad)  
  41a3ca:	jmp    0x3382fc56
  41a3cf:	mov    dh,0x92
  41a3d1:	or     ebx,DWORD PTR [edx-0x5631317b]
  41a3d7:	jbe    0x41a37e
  41a3d9:	cwde   
  41a3da:	inc    ebp
  41a3db:	in     al,dx
  41a3dc:	and    eax,DWORD PTR [edx-0x41]
  41a3df:	xchg   BYTE PTR [ebp+0x50],al
  41a3e2:	or     eax,0x9dd57a42
  41a3e7:	jns    0x41a3cb
  41a3e9:	test   ax,0xf3ac
  41a3ed:	pusha  
  41a3ee:	inc    ecx
  41a3ef:	out    0x94,eax
  41a3f1:	inc    ecx
  41a3f2:	xlat   BYTE PTR ds:[ebx]
  41a3f3:	sub    ebp,DWORD PTR [esi+0x27]
  41a3f6:	and    al,0x70
  41a3f8:	je     0x41a385
  41a3fa:	test   DWORD PTR [edi],esp
  41a3fc:	pop    ebx
  41a3fd:	jmp    0xd069d241
  41a402:	pop    esp
  41a403:	stos   BYTE PTR es:[edi],al
  41a404:	sti    
  41a405:	adc    BYTE PTR [ebx+0x59],dl
  41a408:	mov    ch,0x77
  41a40a:	pop    ecx
  41a40b:	add    edx,edx
  41a40d:	push   ds
  41a40e:	sbb    BYTE PTR [eax+0x477a00c0],0x7f
  41a415:	inc    ebp
  41a416:	pop    ebp
  41a417:	jns    0x41a496
  41a419:	div    DWORD PTR [bp+si+0x2259]
  41a41e:	test   DWORD PTR ds:0xf0f0fc96,0xa60697e0
  41a428:	imul   edi,DWORD PTR [esi+0x3fad1882],0xffffffd9
  41a42f:	aam    0x9
  41a431:	mov    DWORD PTR [esi-0x2587ae1f],edx
  41a437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a438:	shr    DWORD PTR [ebx],1
  41a43a:	test   DWORD PTR [ebx+edx*4],edi
  41a43d:	inc    ebx
  41a43e:	mov    edi,0x59841a81
  41a443:	fst    QWORD PTR [edx+0x30]
  41a446:	xor    eax,0x9f677247
  41a44b:	les    ebx,FWORD PTR [ecx-0x6d]
  41a44e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a44f:	test   BYTE PTR [ebp-0x3593f976],dh
  41a455:	inc    esi
  41a456:	dec    esi
  41a457:	mov    edi,esi
  41a459:	scas   eax,DWORD PTR es:[edi]
  41a45a:	(bad)  
  41a45b:	push   ebp
  41a45c:	addr16 pop esi
  41a45e:	inc    esi
  41a45f:	pop    ds
  41a460:	jle    0x41a45a
  41a462:	pusha  
  41a463:	add    bh,dh
  41a465:	mov    ds:0x973118b7,al
  41a46a:	(bad)  
  41a46c:	imul   BYTE PTR [ebp+0x46]
  41a46f:	mov    ds:0xc4056ef0,eax
  41a474:	(bad)  
  41a475:	xor    esp,esi
  41a477:	dec    edi
  41a478:	enter  0xfe83,0x24
  41a47c:	and    DWORD PTR [ebx],esi
  41a47e:	push   esi
  41a47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a480:	cmp    eax,0x7cff140e
  41a485:	dec    esi
  41a486:	arpl   WORD PTR [esi+0xe],bx
  41a489:	adc    ebx,DWORD PTR [edx]
  41a48b:	mov    edx,0xfa65a217
  41a490:	je     0x41a4de
  41a492:	ja     0x41a428
  41a494:	hlt    
  41a495:	or     eax,0xbd65bc60
  41a49a:	adc    al,BYTE PTR [ebp+0x8]
  41a49d:	leave  
  41a49e:	dec    edi
  41a49f:	dec    edx
  41a4a0:	or     BYTE PTR [ebp-0x2],0xeb
  41a4a4:	(bad)  
  41a4a6:	adc    ch,BYTE PTR [edx-0xe]
  41a4a9:	ss sahf 
  41a4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ac:	pop    esp
  41a4ad:	fld    DWORD PTR [edi+0x212e7cc5]
  41a4b3:	adc    al,0xe1
  41a4b5:	sub    al,BYTE PTR [ebx]
  41a4b7:	inc    ecx
  41a4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4b9:	retf   0x87f8
  41a4bc:	loopne 0x41a4a4
  41a4be:	test   DWORD PTR [ebp-0x47],eax
  41a4c1:	mov    ds:0x12b9118e,al
  41a4c6:	lds    edx,FWORD PTR [eax-0x3d1fb2f8]
  41a4cc:	fs or  ecx,edx
  41a4cf:	pushf  
  41a4d0:	and    DWORD PTR ds:[eax+ebx*4-0x4941bfda],esp
  41a4d8:	ret    0x73
  41a4db:	adc    ah,BYTE PTR ds:0xfe0ad4ad
  41a4e1:	(bad)  
  41a4e2:	in     al,0xa1
  41a4e4:	mov    al,ds:0x217367ba
  41a4e9:	mul    esp
  41a4eb:	arpl   WORD PTR ss:[edi],si
  41a4ee:	imul   edx,ebp,0xffffff98
  41a4f1:	stc    
  41a4f2:	push   DWORD PTR [ebp-0x2b]
  41a4f5:	xor    bh,BYTE PTR [ebp-0x3e]
  41a4f8:	repz test esi,esp
  41a4fb:	jp     0x41a495
  41a4fd:	adc    DWORD PTR [ebx],0xbfd7455e
  41a503:	inc    ebp
  41a504:	stos   DWORD PTR es:[edi],eax
  41a505:	sbb    BYTE PTR [ecx],0x79
  41a508:	ds cmp ebx,DWORD PTR fs:[ebp-0x1efab59a]
  41a510:	jno    0x41a539
  41a512:	mov    dl,0x81
  41a514:	mov    al,0x57
  41a516:	and    BYTE PTR [ebx-0x5a],0x6c
  41a51a:	pop    ecx
  41a51b:	dec    ebp
  41a51c:	sbb    DWORD PTR [edi+ebp*4+0x4a1a9e02],eax
  41a523:	pop    ds
  41a524:	mov    ebp,0x1efd525
  41a529:	into   
  41a52a:	xchg   edi,eax
  41a52b:	xor    bh,BYTE PTR [ebx+0x2a]
  41a52e:	add    dl,dh
  41a530:	add    edx,esi
  41a532:	cmp    al,0xf0
  41a534:	or     bh,BYTE PTR [ecx]
  41a536:	jo     0x41a57f
  41a538:	imul   ebx,DWORD PTR ds:0xeb93b3c5,0xfffffffa
  41a53f:	xchg   esp,eax
  41a540:	loopne 0x41a553
  41a542:	add    cl,BYTE PTR [edx]
  41a544:	mov    ch,0x2c
  41a546:	test   DWORD PTR [esi+0x5493ea08],edx
  41a54c:	adc    eax,0x81862482
  41a551:	dec    eax
  41a552:	outs   dx,DWORD PTR ds:[esi]
  41a553:	pop    ss
  41a554:	pop    edi
  41a555:	je     0x41a5d6
  41a557:	aam    0x50
  41a559:	mov    dl,0xa5
  41a55b:	pushf  
  41a55c:	je     0x41a4ed
  41a55e:	mov    BYTE PTR [ebx],ah
  41a560:	ret    
  41a561:	cdq    
  41a562:	xchg   esp,eax
  41a563:	add    ch,ah
  41a565:	jecxz  0x41a50f
  41a567:	xchg   edx,eax
  41a568:	into   
  41a569:	push   esi
  41a56a:	pop    es
  41a56b:	cmc    
  41a56c:	shr    BYTE PTR [bp+si],cl
  41a56f:	inc    eax
  41a570:	pop    es
  41a571:	scas   al,BYTE PTR es:[edi]
  41a572:	pusha  
  41a573:	sbb    ebp,DWORD PTR [edi-0x20]
  41a576:	(bad)  
  41a578:	mov    esp,0xe995d64e
  41a57d:	or     al,0x41
  41a57f:	sub    eax,0xb41bac1a
  41a584:	aam    0xe4
  41a586:	cs cmp eax,0x99bbe75e
  41a58c:	mov    dh,0x5e
  41a58e:	addr16 cli 
  41a590:	push   ss
  41a591:	xchg   DWORD PTR [edi],edi
  41a593:	gs mov ?,ebx
  41a596:	dec    esp
  41a597:	rcr    cl,cl
  41a599:	retf   0x9cd3
  41a59c:	ins    BYTE PTR es:[edi],dx
  41a59d:	jge    0x41a561
  41a59f:	mov    al,ds:0x4a33f6e7
  41a5a4:	mov    esi,ecx
  41a5a6:	shl    BYTE PTR [edx-0x5ca70d2c],0x23
  41a5ad:	pop    eax
  41a5ae:	mov    ah,0x6
  41a5b0:	addr16 (bad) 
  41a5b2:	mov    ebp,0x1b2d43e4
  41a5b7:	mov    esp,0xecfd81ef
  41a5bc:	inc    edi
  41a5bd:	inc    esi
  41a5be:	dec    esp
  41a5bf:	jno    0x41a577
  41a5c1:	xor    al,0x25
  41a5c3:	xor    BYTE PTR [esi+eax*4],dl
  41a5c6:	dec    ebx
  41a5c7:	mov    es,WORD PTR [ebx+0x5627dbf6]
  41a5cd:	lds    ebx,FWORD PTR [ebx-0x17c3041]
  41a5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5d4:	sbb    ch,BYTE PTR gs:[ecx-0x77be4ad0]
  41a5db:	clc    
  41a5dc:	push   ebp
  41a5dd:	pop    ss
  41a5de:	aas    
  41a5df:	(bad)  
  41a5e0:	idiv   DWORD PTR [ebx+0x3f872985]
  41a5e6:	mov    esi,0x51fb2b9f
  41a5eb:	add    edx,edx
  41a5ed:	lea    edi,[esi+0x28]
  41a5f0:	and    ebp,DWORD PTR [edx]
  41a5f2:	jo     0x41a5a9
  41a5f4:	adc    al,0x81
  41a5f6:	aaa    
  41a5f7:	fiadd  DWORD PTR ds:0x86bc6a2
  41a5fd:	inc    edi
  41a5fe:	add    eax,0x5b225182
  41a603:	aaa    
  41a604:	lods   al,BYTE PTR ds:[esi]
  41a605:	sub    bl,BYTE PTR [edx-0x3e86951f]
  41a60b:	ret    0xd93b
  41a60e:	mov    al,ds:0x308d0b4
  41a613:	loop   0x41a614
  41a615:	gs call 0xba0ab254
  41a61b:	test   BYTE PTR [ebx+0x6247781e],al
  41a621:	mov    ds:0x95b77a75,eax
  41a626:	inc    ebp
  41a627:	pop    ebp
  41a628:	ror    DWORD PTR [esi+0x76],1
  41a62b:	(bad)  
  41a62c:	out    dx,al
  41a62d:	adc    BYTE PTR [eax],ah
  41a62f:	dec    esi
  41a630:	out    0xe5,eax
  41a632:	add    ecx,DWORD PTR [edi+esi*8+0x58]
  41a636:	adc    eax,0x1ab88c17
  41a63b:	int    0xce
  41a63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a63e:	jns    0x41a65b
  41a640:	mov    ebp,0xa88d8ef
  41a645:	cmp    eax,0x3181c75
  41a64a:	fidiv  WORD PTR [edi-0x566bc322]
  41a650:	mov    bh,0x32
  41a652:	inc    edi
  41a653:	sub    BYTE PTR [esi],cl
  41a655:	jnp    0x41a684
  41a657:	aaa    
  41a658:	lods   al,BYTE PTR ds:[esi]
  41a659:	push   esi
  41a65a:	iret   
  41a65b:	mov    esp,0x73f801ed
  41a660:	add    BYTE PTR [esi],0x41
  41a663:	cmp    esp,DWORD PTR [ebx]
  41a665:	adc    eax,0x9b0d85a5
  41a66a:	cdq    
  41a66b:	loope  0x41a67a
  41a66d:	and    al,0x85
  41a66f:	dec    ax
  41a671:	sbb    bh,BYTE PTR [edi]
  41a673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a674:	push   0x66bdc7f0
  41a679:	sbb    al,0xb6
  41a67b:	inc    ebx
  41a67c:	sub    DWORD PTR [ecx-0x63],ebx
  41a67f:	ret    
  41a680:	and    BYTE PTR [eax],bh
  41a682:	mov    bh,0x97
  41a684:	(bad)  
  41a685:	push   esi
  41a686:	adc    eax,0x366e657b
  41a68b:	cmp    eax,DWORD PTR [esi-0x7bc3aa47]
  41a691:	jmp    0x964a2d03
  41a696:	pop    eax
  41a697:	into   
  41a698:	mov    bl,BYTE PTR [edx]
  41a69a:	cs aaa 
  41a69c:	dec    ecx
  41a69d:	scas   al,BYTE PTR es:[edi]
  41a69e:	in     eax,dx
  41a69f:	xchg   si,ax
  41a6a1:	sti    
  41a6a2:	nop
  41a6a3:	fst    st(1)
  41a6a5:	call   0xe62ed631
  41a6aa:	pop    eax
  41a6ab:	mov    bl,BYTE PTR [edx-0x56]
  41a6ae:	or     edx,DWORD PTR [ebp+0x33a2029d]
  41a6b4:	outs   dx,DWORD PTR ds:[esi]
  41a6b5:	mov    dh,BYTE PTR [eax-0x15]
  41a6b8:	inc    esi
  41a6b9:	hlt    
  41a6ba:	mov    esi,0x8d5e5f4a
  41a6bf:	std    
  41a6c0:	jne    0x41a6ea
  41a6c2:	or     esp,DWORD PTR [edx]
  41a6c4:	push   ebp
  41a6c5:	push   esi
  41a6c6:	dec    eax
  41a6c7:	cdq    
  41a6c8:	inc    esi
  41a6c9:	shl    dl,1
  41a6cb:	in     eax,dx
  41a6cc:	xor    eax,DWORD PTR [ebx+0x4928ed82]
  41a6d2:	inc    edi
  41a6d3:	and    BYTE PTR [edi-0x3b3051e7],bl
  41a6d9:	adc    al,0x45
  41a6db:	mov    esp,0xf26fa23d
  41a6e0:	pop    edi
  41a6e1:	pop    ds
  41a6e2:	push   eax
  41a6e3:	out    0x26,al
  41a6e5:	addr16 ret 0x5c41
  41a6e9:	mov    esp,0x884b2797
  41a6ee:	lods   al,BYTE PTR ds:[esi]
  41a6ef:	outs   dx,BYTE PTR ds:[esi]
  41a6f0:	cmp    eax,0xf57cce15
  41a6f5:	pop    ebx
  41a6f6:	sbb    edi,DWORD PTR [eax+0x6d61b6c2]
  41a6fc:	repnz mov cl,0x7f
  41a6ff:	pop    eax
  41a700:	test   DWORD PTR [ebx-0x28077696],ebp
  41a706:	mov    fs:0x8dc14423,eax
  41a70c:	sbb    ebp,ebx
  41a70e:	xlat   BYTE PTR ds:[ebx]
  41a70f:	sub    al,BYTE PTR [ecx]
  41a711:	out    0x52,eax
  41a713:	inc    esi
  41a714:	adc    eax,0xc34e651d
  41a719:	aad    0x9
  41a71b:	ror    ah,0xce
  41a71e:	jnp    0x41a702
  41a720:	lock mov bl,BYTE PTR [edx-0x53]
  41a724:	ret    
  41a725:	inc    esi
  41a726:	and    DWORD PTR [ecx+ebp*2+0x68],edx
  41a72a:	stos   BYTE PTR es:[edi],al
  41a72b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72c:	add    eax,0x47bb13ee
  41a731:	mov    edi,0xf41596c5
  41a736:	mov    cl,0x35
  41a738:	mov    al,ds:0xa513aa78
  41a73d:	sbb    BYTE PTR [ebp+0x465c4764],0xbe
  41a744:	mov    ecx,0xbdf661fd
  41a749:	lods   eax,DWORD PTR ds:[esi]
  41a74a:	jae    0x41a73d
  41a74c:	icebp  
  41a74d:	cs jp  0x41a7cc
  41a750:	retf   0xda20
  41a753:	push   0xe1036c78
  41a758:	lahf   
  41a759:	cmp    al,0xe9
  41a75b:	mov    esi,0xacf21a67
  41a760:	lock ror edx,0x91
  41a764:	fadd   QWORD PTR [edx-0x18f7f652]
  41a76a:	dec    esp
  41a76b:	loop   0x41a74c
  41a76d:	xchg   ebp,ecx
  41a76f:	dec    ebp
  41a770:	adc    eax,0xe909db98
  41a775:	push   cs
  41a776:	pop    ecx
  41a777:	jo     0x41a731
  41a779:	push   es
  41a77a:	sub    DWORD PTR [esi-0x3f],ebp
  41a77d:	sub    ebx,eax
  41a77f:	out    dx,eax
  41a780:	sub    esi,edi
  41a782:	call   0x966d:0xe3c0f38d
  41a789:	sub    eax,0xe0d3266c
  41a78e:	sub    eax,0xfabebc16
  41a793:	lds    edi,FWORD PTR [ecx]
  41a795:	adc    cl,0x2b
  41a798:	hlt    
  41a799:	js     0x41a811
  41a79b:	and    eax,0xb271a805
  41a7a0:	scas   eax,DWORD PTR es:[edi]
  41a7a1:	mov    eax,ds:0x99b916c6
  41a7a6:	push   ecx
  41a7a7:	hlt    
  41a7a8:	das    
  41a7a9:	retf   0x1eda
  41a7ac:	xchg   edi,ebx
  41a7ae:	jne    0x41a828
  41a7b0:	cwde   
  41a7b1:	mov    cl,0x44
  41a7b3:	xchg   ebx,eax
  41a7b4:	popa   
  41a7b5:	jl     0x41a7fa
  41a7b7:	sbb    al,dh
  41a7b9:	cmp    ah,BYTE PTR [ebx]
  41a7bb:	int3   
  41a7bc:	sbb    al,0x5d
  41a7be:	daa    
  41a7bf:	push   ss
  41a7c0:	cmp    DWORD PTR [edi],0xdd5dfb63
  41a7c6:	push   esp
  41a7c7:	mov    DWORD PTR [esi+0x1eee6380],edx
  41a7cd:	jmp    0x1b58b9fb
  41a7d2:	cmp    al,BYTE PTR [ecx+0x1873e84e]
  41a7d8:	sub    eax,DWORD PTR [ecx]
  41a7da:	xor    al,0xd7
  41a7dc:	pop    ecx
  41a7dd:	push   ecx
  41a7de:	addr16 mov edi,0x2112fac7
  41a7e4:	jle    0x41a7aa
  41a7e6:	popa   
  41a7e7:	mov    eax,ds:0xb3df9100
  41a7ec:	rol    DWORD PTR [edi+0xb4f25df],1
  41a7f2:	ret    
  41a7f3:	add    BYTE PTR [ebp-0x11],bh
  41a7f6:	aad    0x34
  41a7f8:	mov    DWORD PTR [edx+0xf],ebp
  41a7fb:	aad    0x7a
  41a7fd:	mov    eax,0x74403e59
  41a802:	aam    0x5f
  41a804:	or     BYTE PTR [ebp-0x1054d882],ch
  41a80a:	test   al,0x22
  41a80c:	sar    DWORD PTR [edx],cl
  41a80e:	fs jge 0x41a7c1
  41a811:	sbb    BYTE PTR [ebx],bh
  41a813:	daa    
  41a814:	sti    
  41a815:	sti    
  41a816:	stos   BYTE PTR es:[di],al
  41a818:	jl     0x41a82d
  41a81a:	lds    edi,FWORD PTR [edi]
  41a81c:	adc    ebp,DWORD PTR [eax]
  41a81e:	data16 int 0x35
  41a821:	push   ecx
  41a822:	mov    ds:0x4e53c44b,al
  41a827:	add    DWORD PTR [eax+esi*4+0x8],ebx
  41a82b:	xchg   esi,eax
  41a82c:	aas    
  41a82d:	out    dx,eax
  41a82e:	fisttp QWORD PTR [esi+edi*4-0x72542b62]
  41a835:	out    0x3d,al
  41a837:	(bad)
  41a83a:	leave  
  41a83b:	and    edi,DWORD PTR [ebx+0xe]
  41a83e:	rol    BYTE PTR [edi],cl
  41a840:	xchg   edi,eax
  41a841:	jo     0x41a87c
  41a843:	pop    ebp
  41a844:	icebp  
  41a845:	bswap  edi
  41a847:	sub    al,0xfd
  41a849:	sub    BYTE PTR [edi],al
  41a84b:	or     DWORD PTR [ebx],esi
  41a84d:	push   esi
  41a84e:	into   
  41a84f:	popa   
  41a850:	add    al,0xe3
  41a852:	fadd   QWORD PTR [edi-0x19]
  41a855:	jecxz  0x41a82a
  41a857:	(bad)  
  41a858:	jbe    0x41a7e6
  41a85a:	out    dx,eax
  41a85b:	retf   
  41a85c:	lea    esi,[ecx-0x67]
  41a85f:	stos   BYTE PTR es:[edi],al
  41a860:	fs fwait
  41a862:	xchg   ebx,eax
  41a863:	fdivr  st(6),st
  41a865:	and    eax,ecx
  41a867:	or     ebp,DWORD PTR [edi-0x3d]
  41a86a:	push   es
  41a86b:	scas   eax,DWORD PTR es:[edi]
  41a86c:	jb     0x41a88d
  41a86e:	mov    ds:0x5fcb87c,eax
  41a873:	adc    edi,DWORD PTR [ecx]
  41a875:	sub    ebx,esp
  41a877:	(bad)  
  41a878:	repnz mov ebx,DWORD PTR [ebx-0x28]
  41a87c:	jns    0x41a87c
  41a87e:	outs   dx,DWORD PTR ds:[esi]
  41a87f:	add    dh,BYTE PTR [ecx+0x1220b217]
  41a885:	mov    WORD PTR [esi-0x12],?
  41a888:	inc    edi
  41a889:	mov    dh,0x49
  41a88b:	lock aas 
  41a88d:	daa    
  41a88e:	mov    edx,0x685b8d9f
  41a893:	or     bl,bh
  41a895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a896:	mov    ah,0xfb
  41a898:	lods   al,BYTE PTR ds:[esi]
  41a899:	fwait
  41a89a:	add    eax,0xb840ad0c
  41a89f:	mov    BYTE PTR [ebx-0x3363d22a],bh
  41a8a5:	sub    ch,dh
  41a8a7:	and    al,0x7f
  41a8a9:	rcr    DWORD PTR [edx+0x55],0x0
  41a8ad:	nop
  41a8ae:	jnp    0x41a8f0
  41a8b0:	push   ebp
  41a8b1:	sbb    esp,ecx
  41a8b3:	sub    DWORD PTR [ecx+0x7e7af5a7],esi
  41a8b9:	add    DWORD PTR [esi-0x32],edx
  41a8bc:	int3   
  41a8bd:	inc    eax
  41a8be:	bound  edx,QWORD PTR [eax+0x1f84816b]
  41a8c4:	or     esp,ebp
  41a8c6:	inc    bl
  41a8c8:	(bad)  
  41a8c9:	sbb    BYTE PTR [ebx],bl
  41a8cb:	pushf  
  41a8cc:	icebp  
  41a8cd:	push   ebp
  41a8ce:	rcl    BYTE PTR [ebx],0xea
  41a8d1:	aad    0x8e
  41a8d3:	ret    0x3381
  41a8d6:	fwait
  41a8d7:	sbb    BYTE PTR cs:[edx],0xf0
  41a8db:	fistp  WORD PTR [ecx-0x4c]
  41a8de:	add    eax,DWORD PTR [ebx+0x4ca37f46]
  41a8e4:	jns    0x41a93c
  41a8e6:	into   
  41a8e7:	cwde   
  41a8e8:	repz cmp edx,DWORD PTR [bp-0x3f52]
  41a8ee:	xchg   ecx,eax
  41a8ef:	stos   DWORD PTR es:[edi],eax
  41a8f0:	jne    0x41a88d
  41a8f2:	xchg   ecx,eax
  41a8f3:	in     al,dx
  41a8f4:	and    edi,eax
  41a8f6:	repnz and edi,DWORD PTR [ebx-0x79ebf145]
  41a8fd:	jmp    0xa1c64318
  41a902:	add    BYTE PTR [esi-0x4b],al
  41a905:	les    edx,FWORD PTR [ebx-0x254c2c92]
  41a90b:	inc    esp
  41a90c:	push   ds
  41a90d:	out    dx,eax
  41a90e:	sub    al,0x75
  41a910:	fist   WORD PTR es:[esp+ebp*8-0x7aa23712]
  41a918:	or     al,0x24
  41a91a:	cld    
  41a91b:	dec    eax
  41a91c:	pop    ss
  41a91d:	test   DWORD PTR [ecx+0x6f],eax
  41a920:	test   DWORD PTR [eax-0x72a03d5c],esi
  41a926:	adc    BYTE PTR [eax+0x66],ch
  41a929:	dec    DWORD PTR [eax+0xb]
  41a92c:	ret    0x5bbe
  41a92f:	jle    0x41a94e
  41a931:	ds push 0x34653fe7
  41a937:	jmp    0x9319:0xd913fe9c
  41a93e:	adc    al,0x2e
  41a940:	fst    QWORD PTR [ebx+eiz*2+0x1ae71851]
  41a947:	popa   
  41a948:	retf   
  41a949:	sti    
  41a94a:	push   ebp
  41a94b:	jmp    0x4874a841
  41a950:	data16 or ch,BYTE PTR [esi-0x12]
  41a954:	pop    ds
  41a955:	mov    esi,0x15fd2ee5
  41a95a:	push   edx
  41a95b:	jo     0x41a9ab
  41a95d:	push   edx
  41a95e:	xchg   BYTE PTR ds:0x811a7cea,al
  41a964:	inc    esp
  41a965:	aad    0x74
  41a967:	je     0x41a94a
  41a969:	jp     0x41a959
  41a96b:	loope  0x41a972
  41a96d:	xor    BYTE PTR [ecx+edx*8+0x2d],cl
  41a971:	push   edx
  41a972:	jb     0x41a978
  41a974:	add    al,0xd7
  41a977:	loop   0x41a96f
  41a979:	cmp    DWORD PTR [edi-0x34],ebx
  41a97c:	ins    BYTE PTR es:[edi],dx
  41a97d:	sub    eax,0x76e2694
  41a982:	outs   dx,DWORD PTR ds:[esi]
  41a983:	test   BYTE PTR [edx+ecx*4+0x18],ah
  41a987:	inc    edi
  41a988:	outs   dx,DWORD PTR ds:[esi]
  41a989:	(bad)  
  41a98a:	enter  0xcd09,0xd1
  41a98e:	cwde   
  41a98f:	mov    bl,0xad
  41a991:	and    bl,dh
  41a993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a994:	add    DWORD PTR [ecx-0x59],eax
  41a997:	pusha  
  41a998:	and    BYTE PTR [edx+0x7b],0xaf
  41a99c:	push   ds
  41a99d:	outs   dx,DWORD PTR ds:[esi]
  41a99e:	adc    bh,BYTE PTR [ebx]
  41a9a0:	jle    0x41a983
  41a9a2:	gs cmp eax,0x7d78f292
  41a9a8:	and    BYTE PTR [edx-0x1f],bh
  41a9ab:	ja     0x41a949
  41a9ad:	and    al,al
  41a9af:	jb     0x41aa04
  41a9b1:	jmp    0x41a9f4
  41a9b3:	pop    eax
  41a9b4:	into   
  41a9b5:	test   DWORD PTR [ebx+0x35a47ca7],edx
  41a9bb:	rcr    BYTE PTR [ebx],cl
  41a9bd:	sub    eax,0x31b8633f
  41a9c2:	lods   al,BYTE PTR ds:[esi]
  41a9c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9c4:	dec    edi
  41a9c5:	fcomp  DWORD PTR [ebx-0x34]
  41a9c8:	mov    ebp,0xc6dc1070
  41a9cd:	or     dl,BYTE PTR [ecx]
  41a9cf:	ror    DWORD PTR [ebx+eax*4],cl
  41a9d2:	out    0xc0,al
  41a9d4:	or     al,BYTE PTR [esi+0x8c8858c]
  41a9da:	xchg   edx,eax
  41a9db:	into   
  41a9dc:	and    eax,DWORD PTR [edx+ebx*2-0x63]
  41a9e0:	test   eax,0x37c3af44
  41a9e5:	or     eax,0x3ed12497
  41a9ea:	int    0xd2
  41a9ec:	sub    DWORD PTR [ecx-0x7acfc12f],esp
  41a9f2:	jne    0x41a9ca
  41a9f4:	jbe    0x41a9e8
  41a9f6:	(bad)  
  41a9f7:	out    dx,al
  41a9f8:	popf   
  41a9f9:	bswap  ecx
  41a9fb:	or     al,0xa3
  41a9fd:	daa    
  41a9fe:	xor    eax,0xcbd2c66d
  41aa03:	dec    edx
  41aa04:	arpl   cx,bp
  41aa06:	add    al,0xb
  41aa08:	clc    
  41aa09:	mov    bl,0xd8
  41aa0b:	enter  0x900f,0xe8
  41aa0f:	scas   al,BYTE PTR es:[edi]
  41aa10:	arpl   WORD PTR [eax],ax
  41aa12:	shl    DWORD PTR [edi],cl
  41aa14:	fisubr DWORD PTR [ebx+0x6d58f360]
  41aa1a:	sbb    ebx,eax
  41aa1c:	enter  0x82cf,0x11
  41aa20:	je     0x41aa64
  41aa22:	in     al,dx
  41aa23:	sahf   
  41aa24:	adc    dh,BYTE PTR [ecx-0x78]
  41aa27:	mov    esi,0xdd3611f3
  41aa2c:	mov    gs,WORD PTR [ebp-0x43]
  41aa2f:	in     al,dx
  41aa30:	push   ebx
  41aa31:	dec    ebx
  41aa32:	lock stos BYTE PTR es:[edi],al
  41aa34:	lock popa 
  41aa36:	jmp    0x97b6be2c
  41aa3b:	xor    al,0xdd
  41aa3d:	xchg   BYTE PTR ds:0xe3612d89,cl
  41aa43:	push   0xb66d90a6
  41aa48:	in     eax,0xfd
  41aa4a:	shr    edi,0x6
  41aa4d:	icebp  
  41aa4e:	add    al,0x0
  41aa50:	pusha  
  41aa51:	test   al,dh
  41aa53:	lea    eax,[esi+esi*4-0x5f]
  41aa57:	and    bl,BYTE PTR [edi-0x1109bf81]
  41aa5d:	mov    ah,0xcb
  41aa5f:	repnz fwait
  41aa61:	test   DWORD PTR [ebp-0x35],eax
  41aa64:	pop    ebx
  41aa65:	cmp    edx,0x761c3975
  41aa6b:	test   DWORD PTR [edi-0x35],esi
  41aa6e:	call   0x75d9:0xb580b4fe
  41aa75:	fisttp QWORD PTR [eax]
  41aa77:	sub    al,0x57
  41aa79:	push   edx
  41aa7a:	out    0x2b,eax
  41aa7c:	pop    ebp
  41aa7d:	(bad)
  41aa81:	cdq    
  41aa82:	xchg   ebx,eax
  41aa83:	xor    DWORD PTR [eax-0x78a15799],edx
  41aa89:	daa    
  41aa8a:	pop    es
  41aa8b:	pop    ebp
  41aa8c:	int3   
  41aa8d:	sbb    al,0x9c
  41aa8f:	push   ebp
  41aa90:	mov    WORD PTR [edx-0x34],?
  41aa93:	stos   BYTE PTR es:[edi],al
  41aa94:	push   cs
  41aa95:	xchg   esp,eax
  41aa96:	ret    
  41aa97:	jbe    0x41ab04
  41aa99:	retf   
  41aa9a:	adc    dh,BYTE PTR [ecx+ecx*8]
  41aa9d:	mov    al,BYTE PTR [esi]
  41aa9f:	mov    bl,0x7e
  41aaa1:	outs   dx,BYTE PTR cs:[esi]
  41aaa3:	mov    ebx,0xb4f69ddf
  41aaa8:	push   edx
  41aaa9:	jp     0x41aa64
  41aaab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaac:	xchg   ecx,eax
  41aaad:	repnz dec ebx
  41aaaf:	adc    BYTE PTR [edx-0x3087430e],ch
  41aab5:	push   ds
  41aab6:	inc    eax
  41aab7:	mov    bh,0xc3
  41aab9:	in     al,dx
  41aaba:	sbb    eax,DWORD PTR [eax]
  41aabc:	aaa    
  41aabd:	xchg   ebx,eax
  41aabe:	fwait
  41aabf:	shr    BYTE PTR [eax-0x65],cl
  41aac2:	or     ebx,ebx
  41aac4:	shl    cl,1
  41aac6:	pop    ds
  41aac7:	ins    DWORD PTR es:[edi],dx
  41aac8:	js     0x41aa99
  41aaca:	push   ds
  41aacb:	and    eax,0x96ee21d1
  41aad0:	(bad)  
  41aad1:	adc    DWORD PTR [ebp+0x66],esi
  41aad4:	add    BYTE PTR [ebx],bl
  41aad6:	retf   
  41aad7:	scas   al,BYTE PTR es:[edi]
  41aad8:	inc    ecx
  41aad9:	mov    al,ds:0x23d6fd73
  41aade:	add    eax,0xb72dec4e
  41aae3:	cdq    
  41aae4:	retf   
  41aae5:	xor    al,0x79
  41aae7:	and    esi,DWORD PTR [ebp+0x5d]
  41aaea:	dec    edi
  41aaeb:	or     ecx,ecx
  41aaed:	icebp  
  41aaee:	mov    ebp,0xb958e011
  41aaf3:	arpl   WORD PTR [ebx+0x467c32d2],si
  41aaf9:	or     eax,0xc76b8369
  41aafe:	jo     0x41aad7
  41ab00:	fist   DWORD PTR [eax]
  41ab02:	mov    BYTE PTR [ecx-0x3f515e57],ah
  41ab08:	mov    WORD PTR [ebx-0x64],ds
  41ab0b:	sub    BYTE PTR [esi+0x725f9a38],bh
  41ab11:	int    0xaf
  41ab13:	mov    esp,0x1a75f3c2
  41ab18:	fucomp st(0)
  41ab1a:	repz add DWORD PTR cs:[ebx-0x70],eax
  41ab1f:	addr16 pop ds
  41ab21:	popf   
  41ab22:	(bad)  
  41ab23:	es push ds
  41ab25:	lds    esp,FWORD PTR [edi+0xc9e851]
  41ab2b:	push   edi
  41ab2c:	cld    
  41ab2d:	in     al,0x3a
  41ab2f:	xchg   edx,eax
  41ab30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab31:	scas   eax,DWORD PTR es:[edi]
  41ab32:	cmp    ch,cl
  41ab34:	clc    
  41ab35:	in     al,0x2a
  41ab37:	int    0x96
  41ab39:	cwde   
  41ab3a:	fisubr DWORD PTR [ecx+0x6bfe9c55]
  41ab40:	dec    bh
  41ab42:	mov    ds:0xb1e0f272,eax
  41ab47:	jecxz  0x41ab80
  41ab49:	les    eax,FWORD PTR [edi]
  41ab4b:	cli    
  41ab4c:	push   cs
  41ab4d:	in     eax,0xd
  41ab4f:	inc    edi
  41ab50:	fldenv ss:[esi-0x30a66a8d]
  41ab57:	xor    eax,0x5ad972cb
  41ab5c:	jnp    0x41ab7b
  41ab5e:	mov    ecx,0xec7b7194
  41ab63:	jmp    0x2812:0x14a441c2
  41ab6a:	cmp    eax,0x2ffdfa94
  41ab6f:	hlt    
  41ab70:	test   al,0x26
  41ab72:	cmp    edx,DWORD PTR [esi+0x3ee62a65]
  41ab78:	sbb    eax,0xf3683360
  41ab7d:	mov    DWORD PTR [esp+esi*8],ecx
  41ab80:	xchg   esi,eax
  41ab81:	inc    edi
  41ab82:	mov    ds:0xb8993491,al
  41ab87:	dec    ebp
  41ab88:	xchg   DWORD PTR [edx+0x79],ebp
  41ab8b:	iret   
  41ab8c:	and    al,0xb7
  41ab8e:	dec    edx
  41ab8f:	cmp    eax,0x9aa38e17
  41ab94:	jns    0x41ac09
  41ab96:	mov    eax,ds:0x7f271448
  41ab9b:	jl     0x41abf3
  41ab9d:	add    DWORD PTR [edi],ecx
  41ab9f:	push   ebp
  41aba0:	pusha  
  41aba1:	loop   0x41ab9a
  41aba3:	adc    BYTE PTR [esi+0x217aa0ac],0xc4
  41abaa:	mov    eax,0x6351c90
  41abaf:	loop   0x41abf3
  41abb1:	and    eax,0x251937ca
  41abb6:	rcl    BYTE PTR [ecx+0xe],1
  41abb9:	or     esp,DWORD PTR [esi-0x3474e191]
  41abbf:	xchg   ebp,eax
  41abc0:	cli    
  41abc1:	push   edx
  41abc2:	(bad)  
  41abc3:	xor    ebx,DWORD PTR [edx]
  41abc5:	pop    ecx
  41abc6:	xchg   esi,eax
  41abc7:	stc    
  41abc8:	cld    
  41abc9:	test   eax,0x4603bf1f
  41abce:	(bad)  
  41abcf:	stc    
  41abd0:	xor    eax,0xf53f0681
  41abd5:	rol    DWORD PTR [ebp+eax*4+0x23],cl
  41abd9:	sub    DWORD PTR [edi],esi
  41abdb:	arpl   bp,sp
  41abdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abde:	inc    ebx
  41abdf:	adc    BYTE PTR [edi*8+0x76f8600b],dh
  41abe6:	jmp    0x6b8d:0x1649a889
  41abed:	cld    
  41abee:	sbb    ah,BYTE PTR [esi]
  41abf0:	pusha  
  41abf1:	shr    eax,0x4c
  41abf4:	test   eax,0x12c2bf89
  41abf9:	cmp    al,0x72
  41abfb:	pop    esp
  41abfc:	xor    DWORD PTR [eax+0x1405bbc8],edi
  41ac02:	retf   0xc44d
  41ac05:	mov    dl,cl
  41ac07:	cli    
  41ac08:	push   edi
  41ac09:	pop    ebx
  41ac0a:	sbb    DWORD PTR [ebp+0x21],ebp
  41ac0d:	rcl    ecx,0x23
  41ac10:	jge    0x41abde
  41ac12:	int3   
  41ac13:	in     eax,0xfc
  41ac15:	in     al,dx
  41ac16:	iret   
  41ac17:	cld    
  41ac18:	jmp    0xc8cf3389
  41ac1d:	fcom   QWORD PTR [esi+0x4ca203f3]
  41ac23:	ror    DWORD PTR [eax-0x1a6c24af],cl
  41ac29:	pop    ss
  41ac2a:	(bad)  
  41ac2b:	mov    ebp,0xce736bcc
  41ac30:	add    eax,0x2d7e3611
  41ac35:	push   esp
  41ac36:	adc    ebx,DWORD PTR [edx]
  41ac38:	imul   BYTE PTR [eax+0x7a]
  41ac3b:	inc    edx
  41ac3c:	clc    
  41ac3d:	outs   dx,BYTE PTR ds:[esi]
  41ac3e:	popf   
  41ac3f:	jae    0x41ac74
  41ac41:	jae    0x41abed
  41ac43:	(bad)  
  41ac44:	(bad)  
  41ac45:	jmp    0xa2edbab5
  41ac4a:	xchg   bx,ax
  41ac4c:	add    dh,BYTE PTR [edi+0x2d]
  41ac4f:	jb     0x41abdc
  41ac51:	in     al,0x3e
  41ac53:	popf   
  41ac54:	cmp    eax,0xfbefdd7f
  41ac59:	push   ebx
  41ac5a:	jl     0x41acb2
  41ac5c:	lock mov al,0x22
  41ac5f:	mov    ebx,0xe38d8a51
  41ac64:	and    al,0x1f
  41ac66:	jmp    0x41ac2e
  41ac68:	in     eax,dx
  41ac69:	mov    al,0x9b
  41ac6b:	mov    ebx,es
  41ac6d:	or     al,0x82
  41ac6f:	xor    ah,dl
  41ac71:	fbld   TBYTE PTR [edx]
  41ac73:	pop    edx
  41ac74:	int3   
  41ac75:	lods   al,BYTE PTR ds:[esi]
  41ac76:	dec    esi
  41ac77:	cmc    
  41ac78:	dec    esi
  41ac79:	outs   dx,BYTE PTR ds:[esi]
  41ac7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac7b:	sar    edi,1
  41ac7d:	push   cs
  41ac7e:	std    
  41ac7f:	test   DWORD PTR [esi],0xc86807f6
  41ac85:	cmp    ah,BYTE PTR [esi-0x5dced659]
  41ac8b:	push   edx
  41ac8c:	loope  0x41acda
  41ac8e:	cli    
  41ac8f:	pop    ecx
  41ac90:	pushf  
  41ac91:	loope  0x41ac7b
  41ac93:	mul    BYTE PTR [ecx+edi*4]
  41ac96:	xor    edx,esi
  41ac98:	push   eax
  41ac99:	cmp    BYTE PTR [ebx-0x4f],cl
  41ac9c:	addr16 pop edi
  41ac9e:	in     al,0x29
  41aca0:	cmp    dl,bl
  41aca2:	rol    DWORD PTR [esi+edi*4],cl
  41aca5:	adc    eax,0x174aa26f
  41acaa:	push   ds
  41acab:	pop    edi
  41acac:	sub    eax,0x50bb06c5
  41acb1:	xlat   BYTE PTR ds:[ebx]
  41acb2:	mov    edx,DWORD PTR [edi-0x61]
  41acb5:	push   cs
  41acb6:	loope  0x41ad2d
  41acb8:	pushf  
  41acb9:	or     BYTE PTR [ebx-0x44],0xfa
  41acbd:	dec    ebx
  41acbe:	lds    eax,FWORD PTR [edx+esi*2+0x2130f5a0]
  41acc5:	aam    0xad
  41acc7:	(bad)  
  41acc8:	xor    eax,0xe787e294
  41accd:	cs and al,0xec
  41acd0:	cmp    DWORD PTR [eax+edx*1-0x51],ecx
  41acd4:	sbb    al,0x19
  41acd6:	ss mov edi,0x603ba95b
  41acdc:	in     al,dx
  41acdd:	pushf  
  41acde:	neg    edx
  41ace0:	or     cl,ch
  41ace2:	sbb    al,dh
  41ace4:	pop    es
  41ace5:	sub    eax,0xc0ca9852
  41acea:	ins    DWORD PTR es:[edi],dx
  41aceb:	test   eax,0x957b85e8
  41acf0:	inc    esi
  41acf1:	(bad)  
  41acf2:	in     al,dx
  41acf3:	fadd   st(0),st
  41acf5:	and    dh,ah
  41acf7:	jle    0x41ac91
  41acf9:	fisub  WORD PTR [ebp-0x73]
  41acfc:	push   edi
  41acfd:	cli    
  41acfe:	fistp  DWORD PTR [eax+0x6f]
  41ad01:	scas   al,BYTE PTR es:[edi]
  41ad02:	jmp    0x7340:0x20e4888e
  41ad09:	mov    eax,cs
  41ad0b:	ret    
  41ad0c:	repnz sub eax,0x29c12302
  41ad12:	and    dl,BYTE PTR [edi-0x3c]
  41ad15:	je     0x41ace5
  41ad17:	sub    edx,DWORD PTR [ebp+0x2ab7a92f]
  41ad1d:	cmp    ecx,esp
  41ad1f:	mov    ch,0xcb
  41ad21:	into   
  41ad22:	std    
  41ad23:	adc    eax,0x939880
  41ad28:	or     bh,dl
  41ad2a:	cld    
  41ad2b:	or     DWORD PTR [ebp+0x5ab98719],0xca705fe9
  41ad35:	aaa    
  41ad36:	lods   al,BYTE PTR ds:[esi]
  41ad37:	out    0x29,al
  41ad39:	fbstp  TBYTE PTR [edx-0x48f587a]
  41ad3f:	inc    ecx
  41ad40:	retf   0x80c7
  41ad43:	jl     0x41ad4d
  41ad45:	ret    0xafb2
  41ad48:	inc    ebx
  41ad49:	lods   eax,DWORD PTR ds:[esi]
  41ad4a:	lock xchg esp,eax
  41ad4c:	stos   BYTE PTR es:[edi],al
  41ad4d:	rol    DWORD PTR [ecx+ecx*4-0x46067005],cl
  41ad54:	mov    cs,WORD PTR [edi-0x3a1bd736]
  41ad5a:	bound  edi,QWORD PTR [esi+ecx*4]
  41ad5d:	add    al,BYTE PTR [edx+eax*1+0x15]
  41ad61:	js     0x41ad50
  41ad63:	std    
  41ad64:	aas    
  41ad65:	out    dx,eax
  41ad66:	lock jbe 0x41ad97
  41ad69:	repnz aaa 
  41ad6b:	int    0xd0
  41ad6d:	jbe    0x41ad9d
  41ad6f:	pop    ebp
  41ad70:	dec    ecx
  41ad71:	adc    ecx,edi
  41ad73:	push   eax
  41ad74:	aad    0x65
  41ad76:	mov    esp,0x68dc9b65
  41ad7b:	push   ecx
  41ad7c:	call   0xed6b:0xccdf50be
  41ad83:	arpl   WORD PTR [edx-0x6a],dx
  41ad86:	jnp    0x41ad7e
  41ad88:	adc    al,0xef
  41ad8a:	xchg   BYTE PTR [ebx],ah
  41ad8c:	or     DWORD PTR [ebp+0x29],0x1af1da7c
  41ad93:	xor    al,0xeb
  41ad95:	push   ss
  41ad96:	mov    esp,0xbea2a589
  41ad9b:	inc    ebp
  41ad9c:	mov    ch,0xc0
  41ad9e:	jno    0x41ae08
  41ada0:	add    BYTE PTR [ecx-0x3fce8ab6],bl
  41ada6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ada7:	or     DWORD PTR [edx+eax*2-0x6648c536],esi
  41adae:	dec    eax
  41adaf:	not    BYTE PTR cs:[eax+0x6c]
  41adb3:	icebp  
  41adb4:	inc    edi
  41adb5:	sbb    edi,DWORD PTR [edx+0x2e71356a]
  41adbb:	fsubr  DWORD PTR [edi-0x18]
  41adbe:	fnstsw ax
  41adc0:	mov    WORD PTR ds:0x612ea68c,cs
  41adc6:	bswap  eax
  41adc8:	cmp    eax,0x13885842
  41adcd:	cmp    dh,BYTE PTR [ebx]
  41adcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41add0:	enter  0xc56b,0xdd
  41add4:	adc    DWORD PTR [esi-0x34479feb],edi
  41adda:	in     eax,dx
  41addb:	jl     0x41ae24
  41addd:	loop   0x41ada7
  41addf:	scas   al,BYTE PTR es:[edi]
  41ade0:	mov    eax,ds:0x8c20dbe2
  41ade5:	and    BYTE PTR [esi+0xc],ah
  41ade8:	xchg   ebp,eax
  41ade9:	jbe    0x41ae3c
  41adeb:	rcl    BYTE PTR [ebx-0x21],cl
  41adee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adef:	mov    BYTE PTR [edi-0x611a254b],al
  41adf5:	popf   
  41adf6:	push   es
  41adf7:	inc    esp
  41adf8:	cmp    DWORD PTR [ebx],ebp
  41adfa:	dec    esi
  41adfb:	aaa    
  41adfc:	(bad)  
  41adfd:	or     ebp,DWORD PTR [edx-0x7d]
  41ae00:	jno    0x41ae3e
  41ae02:	ds lock jb 0x41adec
  41ae06:	pop    edi
  41ae07:	xor    al,0x93
  41ae09:	into   
  41ae0a:	out    dx,eax
  41ae0b:	push   ds
  41ae0c:	fisub  DWORD PTR [ecx+0x73]
  41ae0f:	jmp    0x41ae05
  41ae11:	movntps XMMWORD PTR [esi-0x32],xmm4
  41ae15:	xchg   BYTE PTR [edi-0x58],cl
  41ae18:	out    dx,al
  41ae19:	mov    bh,0x25
  41ae1b:	(bad)  
  41ae1c:	(bad)  
  41ae1d:	jb     0x41ae9b
  41ae1f:	call   0x3d18bcee
  41ae24:	push   ebx
  41ae25:	cli    
  41ae26:	es jge 0x41adff
  41ae29:	in     al,0x12
  41ae2b:	ror    BYTE PTR [ebx-0x151fb379],0x21
  41ae32:	cmc    
  41ae33:	lea    ebp,[edi-0x6db14ef2]
  41ae39:	int3   
  41ae3a:	jle    0x41ae3a
  41ae3c:	retf   0x588a
  41ae3f:	mov    ebx,0x7d26d9b8
  41ae44:	xor    dl,BYTE PTR [edx]
  41ae46:	aas    
  41ae47:	adc    dh,BYTE PTR [ecx-0x5]
  41ae4a:	retf   
  41ae4b:	repnz xor ebx,ecx
  41ae4e:	(bad)  
  41ae50:	mov    ds:0x4e6b47fe,al
  41ae55:	jo     0x41ae64
  41ae57:	mov    esi,0x3a210e5b
  41ae5c:	inc    ebp
  41ae5d:	rcl    BYTE PTR [edi],cl
  41ae5f:	mov    esi,edx
  41ae61:	sub    edx,ebp
  41ae63:	mov    ch,0xd4
  41ae65:	loop   0x41ae87
  41ae67:	enter  0xeca1,0xde
  41ae6b:	scas   eax,DWORD PTR es:[edi]
  41ae6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae6d:	cmp    BYTE PTR [esi],bl
  41ae6f:	(bad)  
  41ae72:	and    ah,bl
  41ae74:	(bad)  
  41ae75:	and    edx,DWORD PTR [ebx]
  41ae77:	adc    esp,edi
  41ae79:	sbb    al,0xb1
  41ae7b:	int3   
  41ae7c:	mov    al,ds:0x25f74e50
  41ae81:	cdq    
  41ae82:	lock repz scas eax,DWORD PTR es:[edi]
  41ae85:	or     al,0xa
  41ae87:	and    esp,DWORD PTR [edx+0x3af210de]
  41ae8d:	cmp    al,0xdf
  41ae8f:	test   eax,0x7fed96c7
  41ae94:	pop    ecx
  41ae95:	enter  0x3393,0x88
  41ae99:	ds jae 0x41aeaa
  41ae9c:	bound  ebx,QWORD PTR [ecx+0x539b0e25]
  41aea2:	test   al,0x51
  41aea4:	mov    al,0x8a
  41aea6:	leave  
  41aea7:	stos   DWORD PTR es:[edi],eax
  41aea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aea9:	sbb    eax,0x9a88d497
  41aeae:	sbb    eax,0xe3a5fc98
  41aeb3:	retf   
  41aeb4:	test   eax,0xf8a0a5d8
  41aeb9:	cmp    ch,bl
  41aebb:	(bad)  
  41aebc:	mov    dl,0xe8
  41aebe:	test   DWORD PTR [edx],edx
  41aec0:	ret    0x7313
  41aec3:	fimul  DWORD PTR [ebp+0x5666de10]
  41aec9:	xchg   esp,eax
  41aeca:	xor    eax,0x273a4c0b
  41aecf:	jne    0x41ae98
  41aed1:	dec    esi
  41aed2:	jmp    DWORD PTR [edx]
  41aed4:	pop    eax
  41aed5:	mov    ah,0x67
  41aed7:	or     ah,BYTE PTR [edx]
  41aed9:	retf   
  41aeda:	push   edx
  41aedb:	vmwrite ecx,ecx
  41aede:	jp     0x41af30
  41aee0:	dec    eax
  41aee1:	sbb    BYTE PTR [eax-0x4de7189f],dh
  41aee7:	out    dx,eax
  41aee8:	mov    eax,ds:0x7ff7122f
  41aeed:	xchg   esi,eax
  41aeee:	std    
  41aeef:	push   eax
  41aef0:	fstp   DWORD PTR [ebp-0x4d]
  41aef3:	ins    DWORD PTR es:[edi],dx
  41aef4:	int    0x3f
  41aef6:	adc    al,0x59
  41aef8:	addr16 mov bl,0xb3
  41aefb:	mov    dl,BYTE PTR [ecx+0x58]
  41aefe:	fs jae 0x41aefd
  41af01:	xchg   ebp,eax
  41af02:	dec    ebx
  41af03:	data16 fisub WORD PTR [eax+ebp*8]
  41af07:	(bad)  
  41af08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af09:	jg     0x41af78
  41af0b:	xchg   DWORD PTR [eax],edx
  41af0d:	ds cmp eax,0xea373384
  41af13:	push   0x29592b8e
  41af18:	and    ch,BYTE PTR [edi]
  41af1a:	out    0x30,al
  41af1c:	mov    bl,0xdc
  41af1e:	sar    DWORD PTR ds:[ebp-0x25],0x9d
  41af23:	cmp    ecx,DWORD PTR [eax+esi*4]
  41af26:	ins    DWORD PTR es:[edi],dx
  41af27:	dec    ecx
  41af28:	push   DWORD PTR [esi]
  41af2a:	out    0xcd,eax
  41af2c:	cmp    BYTE PTR [esi],0x77
  41af2f:	clc    
  41af30:	push   esp
  41af31:	aas    
  41af32:	(bad)  
  41af33:	dec    edi
  41af34:	popf   
  41af35:	adc    al,0x9a
  41af37:	data16 fcom QWORD PTR ss:[ecx]
  41af3b:	faddp  st(0),st
  41af3d:	jmp    DWORD PTR [esi]
  41af3f:	ret    0x5d26
  41af42:	jmp    esp
  41af44:	(bad)
  41af47:	mov    ch,BYTE PTR [esi]
  41af49:	aas    
  41af4a:	xchg   esp,eax
  41af4b:	adc    eax,0xf167d7c8
  41af50:	or     ebx,ebx
  41af52:	add    edi,DWORD PTR [edx-0xf0fbcc3]
  41af58:	pop    ebp
  41af59:	loope  0x41afd3
  41af5b:	mov    al,ds:0xec6b6664
  41af60:	test   al,0x6
  41af62:	sbb    al,0x13
  41af64:	adc    al,0x61
  41af66:	xchg   ebp,eax
  41af67:	mov    ah,0x1e
  41af69:	sbb    DWORD PTR [esi-0x7a],edi
  41af6c:	jmp    0x23ee8049
  41af71:	popa   
  41af72:	xor    ecx,ebx
  41af74:	inc    ebx
  41af75:	pop    ebp
  41af76:	pop    edi
  41af77:	mov    dl,0x6d
  41af79:	or     bh,0x5c
  41af7c:	test   DWORD PTR ds:0xfa33cb23,edi
  41af82:	pop    eax
  41af83:	push   ds
  41af84:	aam    0xbd
  41af86:	(bad)  
  41af87:	stos   DWORD PTR es:[edi],eax
  41af88:	cmp    BYTE PTR [eax-0xa],cl
  41af8b:	fdiv   st,st(3)
  41af8d:	sar    BYTE PTR [ebp-0x6de68f9b],cl
  41af93:	pop    eax
  41af94:	inc    ecx
  41af95:	fisttp WORD PTR [ebp+0x15]
  41af98:	sbb    al,0x49
  41af9a:	pop    ebp
  41af9b:	lock fisubr WORD PTR [ebx]
  41af9e:	adc    BYTE PTR [ebp+eax*8+0x7a9280f5],al
  41afa5:	inc    esi
  41afa6:	mov    cl,BYTE PTR [edx-0x57c199ae]
  41afac:	loope  0x41af49
  41afae:	pop    esi
  41afaf:	push   eax
  41afb0:	dec    ebx
  41afb1:	push   0xb42f75e3
  41afb6:	pop    ecx
  41afb7:	adc    al,0x84
  41afb9:	sbb    BYTE PTR [edx+esi*1+0x3b],bh
  41afbd:	fist   DWORD PTR [eax]
  41afbf:	aad    0xa2
  41afc1:	inc    ebx
  41afc2:	stc    
  41afc3:	jmp    0x4d4c:0x76f18400
  41afca:	push   eax
  41afcb:	rcl    ecx,cl
  41afcd:	xchg   ebx,eax
  41afce:	sbb    dh,BYTE PTR [ebp-0x174e6f27]
  41afd4:	int    0xcc
  41afd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afd7:	loope  0x41af72
  41afd9:	mov    esp,0x73d4da3a
  41afde:	xchg   esi,eax
  41afdf:	(bad)  
  41afe0:	repz dec esp
  41afe2:	or     DWORD PTR [esi+0x51],edx
  41afe5:	pop    ebp
  41afe6:	inc    eax
  41afe7:	je     0x41b04c
  41afe9:	sbb    ch,BYTE PTR [esi+0x37]
  41afec:	inc    edx
  41afed:	sbb    esp,DWORD PTR [ebx]
  41afef:	add    BYTE PTR [ecx+0x45],bl
  41aff2:	xor    ebp,0x3e1a2e18
  41aff8:	push   ebx
  41aff9:	mov    gs,esi
  41affb:	stos   BYTE PTR es:[edi],al
  41affc:	or     BYTE PTR [ecx],cl
  41affe:	add    BYTE PTR [esi+0x7b5e5013],ah
  41b004:	pop    ebp
  41b005:	daa    
  41b006:	(bad)  
  41b007:	cs (bad) 
  41b009:	sub    al,0x94
  41b00b:	sbb    edx,DWORD PTR [ebp+0x4b]
  41b00e:	xchg   ecx,eax
  41b00f:	and    DWORD PTR [eax],0xffffffd4
  41b012:	out    0xac,eax
  41b014:	and    BYTE PTR [ecx+0x6f0146c0],cl
  41b01a:	sub    BYTE PTR [esi],dh
  41b01c:	(bad)  
  41b01d:	mov    al,ds:0x9231225b
  41b022:	sbb    cl,BYTE PTR [ebx-0x778dc226]
  41b028:	aaa    
  41b029:	lea    ebx,[edi+0x64799352]
  41b02f:	cmc    
  41b030:	jne    0x41b01a
  41b032:	loope  0x41affb
  41b034:	inc    ebp
  41b035:	xor    dl,bh
  41b037:	in     eax,dx
  41b038:	scas   al,BYTE PTR es:[edi]
  41b039:	call   0x72662d
  41b03e:	sahf   
  41b03f:	push   0xb4b25b8e
  41b044:	in     eax,0x1e
  41b046:	js     0x41b01f
  41b048:	push   edi
  41b049:	loopne 0x41b00f
  41b04b:	mov    cl,0x5c
  41b04d:	sbb    DWORD PTR [esi+0x65652a9a],ebp
  41b053:	(bad)  
  41b055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b056:	scas   al,BYTE PTR es:[edi]
  41b057:	sub    DWORD PTR [eax+0x79],eax
  41b05a:	imul   esp,DWORD PTR [ecx],0xd7494d6b
  41b060:	and    ecx,ebx
  41b062:	imul   edi,DWORD PTR [ecx+0x3baf1314],0x846093c0
  41b06c:	sub    edx,DWORD PTR [ebx+0x6d]
  41b06f:	mov    ds:0x4f34e435,eax
  41b074:	aas    
  41b075:	mov    eax,0x9d1f5a22
  41b07a:	inc    eax
  41b07b:	pop    ss
  41b07c:	sbb    dl,al
  41b07e:	jg     0x41b043
  41b080:	add    eax,0x2f467d00
  41b085:	sub    BYTE PTR [ecx+0x70ebb4a7],ch
  41b08b:	mov    dl,0x38
  41b08d:	in     eax,0x27
  41b08f:	adc    esp,ebx
  41b091:	jmp    0x41b08b
  41b093:	repnz or eax,0xe090f3d7
  41b099:	mov    esi,0x9e22c572
  41b09e:	gs lahf 
  41b0a0:	jp     0x41b04e
  41b0a2:	addr16 aad 0xb0
  41b0a5:	dec    ebx
  41b0a6:	inc    eax
  41b0a7:	sbb    cl,BYTE PTR [ecx]
  41b0a9:	pop    esi
  41b0aa:	ds dec esi
  41b0ac:	imul   ebp,DWORD PTR [edi-0x3ab15770],0xfffffff9
  41b0b3:	adc    bl,BYTE PTR [edx+0xa9a593f]
  41b0b9:	mov    ah,BYTE PTR [ecx]
  41b0bb:	test   al,0x5a
  41b0bd:	scas   eax,DWORD PTR es:[edi]
  41b0be:	or     bh,BYTE PTR [esi+0x2b328f28]
  41b0c4:	adc    eax,0xc68f222d
  41b0c9:	jmp    0x41b099
  41b0cb:	or     BYTE PTR [edi],0x50
  41b0ce:	add    eax,edx
  41b0d0:	sbb    DWORD PTR [ecx],ebp
  41b0d2:	test   eax,0x866ca578
  41b0d7:	jp     0x41b0e4
  41b0d9:	gs inc ecx
  41b0db:	mov    ebp,0x58d16a55
  41b0e0:	ss mov esi,0x39704440
  41b0e6:	cmp    ebp,ecx
  41b0e8:	mov    ds:0x7863712a,al
  41b0ed:	lds    ebx,FWORD PTR [eax]
  41b0ef:	sbb    al,0x50
  41b0f1:	inc    esp
  41b0f2:	popf   
  41b0f3:	xchg   ebp,eax
  41b0f4:	xor    BYTE PTR [ebx+0x3130e009],cl
  41b0fa:	mov    al,0x98
  41b0fc:	iret   
  41b0fd:	adc    cl,bl
  41b0ff:	je     0x41b132
  41b101:	jg     0x41b159
  41b103:	xchg   edi,eax
  41b104:	jle    0x41b0f1
  41b106:	xchg   ch,ch
  41b108:	dec    esi
  41b109:	mov    ecx,0x3869aba8
  41b10e:	push   0xfffffff5
  41b110:	loopne 0x41b112
  41b112:	ds scas eax,DWORD PTR es:[edi]
  41b114:	adc    eax,0x739ccd91
  41b119:	and    al,dl
  41b11b:	sub    al,0x26
  41b11d:	mov    esp,0x31a5a9a
  41b122:	or     DWORD PTR [esi],edx
  41b124:	mov    ecx,DWORD PTR [eax-0x2c]
  41b127:	(bad)
  41b12a:	stos   BYTE PTR es:[di],al
  41b12c:	icebp  
  41b12d:	cmp    eax,0xa3c280a5
  41b132:	jbe    0x41b163
  41b134:	jnp    0x41b0e6
  41b136:	and    esp,DWORD PTR cs:[edx-0x670f01ca]
  41b13d:	and    BYTE PTR [eax],ah
  41b13f:	fnstsw WORD PTR [ebp+0x48]
  41b142:	jbe    0x41b19f
  41b144:	adc    eax,0x1cbbb668
  41b149:	es push 0x6f
  41b14c:	jl     0x41b1a7
  41b14e:	jmp    0x3111:0x3522cfe4
  41b155:	shl    BYTE PTR [esi+0x5c],0xbf
  41b159:	mov    bh,0xc1
  41b15b:	retf   0x4e26
  41b15e:	jne    0x41b1c0
  41b160:	mov    ebx,eax
  41b162:	adc    eax,0x543c76d9
  41b167:	gs pop ebx
  41b169:	(bad)
  41b16d:	lahf   
  41b16e:	jmp    0x41b1ea
  41b170:	loopne 0x41b13b
  41b172:	fdiv   st(1),st
  41b174:	out    0x6b,eax
  41b176:	ret    
  41b177:	adc    bh,BYTE PTR [ecx]
  41b179:	jl     0x41b144
  41b17b:	std    
  41b17c:	out    0xcc,al
  41b17e:	jmp    0x41b1e7
  41b180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b181:	in     eax,0xee
  41b183:	push   eax
  41b184:	pop    esp
  41b185:	jle    0x41b1bb
  41b187:	inc    esi
  41b188:	push   ebp
  41b189:	iret   
  41b18a:	xor    DWORD PTR [edx-0x27d6c340],edx
  41b190:	out    dx,eax
  41b191:	pop    esi
  41b192:	hlt    
  41b193:	adc    cl,BYTE PTR [ecx]
  41b195:	les    esp,FWORD PTR [ecx]
  41b197:	iret   
  41b198:	jne    0x41b15f
  41b19a:	add    BYTE PTR [edi-0xe],ch
  41b19d:	shl    BYTE PTR [edx],cl
  41b19f:	adc    DWORD PTR [edx+0x12fff646],eax
  41b1a5:	sbb    al,0x9
  41b1a7:	and    cl,BYTE PTR [edi+0x6f]
  41b1aa:	lahf   
  41b1ab:	pop    ds
  41b1ac:	adc    al,0xe0
  41b1ae:	popf   
  41b1af:	pop    ecx
  41b1b0:	jmp    0x41b148
  41b1b2:	mov    ecx,0xbbdfd956
  41b1b7:	push   ss
  41b1b8:	shl    BYTE PTR [edi-0x69f781e5],1
  41b1be:	int3   
  41b1bf:	sub    eax,DWORD PTR [edx+0x30266687]
  41b1c5:	mov    WORD PTR [ecx],cs
  41b1c7:	add    DWORD PTR [ebx+edi*4+0x82c9b34],0x4e428c72
  41b1d2:	push   ebx
  41b1d3:	jg     0x41b1da
  41b1d5:	fcom   DWORD PTR [ebp+eiz*4+0x45fa70f3]
  41b1dc:	xchg   ebp,eax
  41b1dd:	cmp    al,0x98
  41b1df:	dec    edx
  41b1e0:	mov    BYTE PTR [esp+ebx*4],dl
  41b1e3:	mov    ds:0x2f75687a,al
  41b1e8:	clc    
  41b1e9:	mov    ch,0x1f
  41b1eb:	call   0xf1ce:0x885a1add
  41b1f2:	popa   
  41b1f3:	add    edi,edx
  41b1f5:	dec    esp
  41b1f6:	pop    edx
  41b1f7:	mov    BYTE PTR [ebx-0x3255e17c],bl
  41b1fd:	pop    ecx
  41b1fe:	cld    
  41b1ff:	mov    ecx,0x18ad5fa8
  41b204:	cmc    
  41b205:	mov    esp,0xa12eb671
  41b20a:	dec    esp
  41b20b:	sub    bh,BYTE PTR [ebx+0x2e6b650a]
  41b211:	sbb    dh,ch
  41b213:	xor    ebp,eax
  41b215:	jns    0x41b1dc
  41b217:	mov    ebx,0x3a3cc5cf
  41b21c:	rcr    DWORD PTR [edi+0x76],cl
  41b21f:	mov    bl,0xd2
  41b221:	sub    esi,ebp
  41b223:	test   al,0x15
  41b225:	rcl    DWORD PTR [edi+ecx*1-0x32cfbb16],1
  41b22c:	mov    ecx,0xb0b6924d
  41b231:	ret    0x8ba9
  41b234:	es sbb eax,ebp
  41b237:	mov    al,0x25
  41b239:	jae    0x41b25c
  41b23b:	mov    al,ds:0x2a70b203
  41b240:	sbb    ecx,edi
  41b242:	xor    ch,BYTE PTR [eax]
  41b244:	sbb    eax,0x1d4c4267
  41b249:	fcmovne st,st(6)
  41b24b:	inc    eax
  41b24c:	xor    edi,esp
  41b24e:	sahf   
  41b24f:	dec    eax
  41b250:	int3   
  41b251:	jecxz  0x41b1de
  41b253:	enter  0x46a5,0x9
  41b257:	add    BYTE PTR [esp+esi*4],ch
  41b25a:	nop
  41b25b:	dec    eax
  41b25c:	in     al,dx
  41b25d:	mov    BYTE PTR [esi],0xd0
  41b260:	fild   DWORD PTR [eax-0x14a9fc86]
  41b266:	in     al,0x6b
  41b268:	(bad)  
  41b26a:	scas   eax,DWORD PTR es:[edi]
  41b26b:	fnstsw WORD PTR [eax+edx*1+0x7e]
  41b26f:	ds mov edi,0x83d37ed6
  41b275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b276:	xor    ah,BYTE PTR [ebx]
  41b278:	xchg   esi,eax
  41b279:	paddusb mm5,QWORD PTR [ecx-0x1666fcd7]
  41b280:	and    bh,BYTE PTR ds:0x1648836d
  41b286:	mov    ah,BYTE PTR [edi-0x419d7b77]
  41b28c:	sbb    edx,ebx
  41b28e:	int    0x7b
  41b290:	clc    
  41b291:	push   esi
  41b292:	or     BYTE PTR [esi],bl
  41b294:	pop    ecx
  41b295:	test   al,0xe
  41b297:	adc    eax,0x45597c6
  41b29c:	push   edx
  41b29d:	push   es
  41b29e:	or     esp,ebx
  41b2a0:	sub    DWORD PTR [edx+0x1a],ecx
  41b2a3:	call   0xfa9e7f8d
  41b2a8:	jnp    0x41b31c
  41b2aa:	push   DWORD PTR [eax]
  41b2ac:	ret    
  41b2ad:	icebp  
  41b2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2af:	pop    ss
  41b2b0:	pop    edi
  41b2b1:	les    ecx,FWORD PTR [esi]
  41b2b3:	mov    ebp,0x646d47bf
  41b2b8:	pop    es
  41b2b9:	jmp    0x41b254
  41b2bb:	outs   dx,BYTE PTR ds:[esi]
  41b2bc:	jge    0x41b2e2
  41b2be:	and    cl,BYTE PTR [edi]
  41b2c0:	gs mov cl,0x83
  41b2c3:	and    ebx,ebx
  41b2c5:	xchg   esi,eax
  41b2c6:	jne    0x41b302
  41b2c8:	aaa    
  41b2c9:	xor    ch,BYTE PTR [ebx+0x3b]
  41b2cc:	xchg   edi,eax
  41b2cd:	mov    al,ds:0x79f56e41
  41b2d2:	fmul   DWORD PTR [edi-0x49]
  41b2d5:	sub    BYTE PTR [eax+0x79],cl
  41b2d8:	jmp    0x44d1f0e
  41b2dd:	(bad)  
  41b2de:	js     0x41b267
  41b2e0:	and    esp,DWORD PTR [esi]
  41b2e2:	jg     0x41b316
  41b2e4:	cmc    
  41b2e5:	or     DWORD PTR [eax+0x44c29e0],edi
  41b2eb:	mov    dh,0x76
  41b2ed:	adc    bl,BYTE PTR [ebp-0x19]
  41b2f0:	and    bh,BYTE PTR [esp+eiz*2]
  41b2f3:	or     al,0x41
  41b2f5:	and    DWORD PTR [edx],0x7a9dd977
  41b2fb:	inc    esi
  41b2fc:	div    BYTE PTR [edi-0x61]
  41b2ff:	fsub   QWORD PTR [ebx]
  41b301:	pop    ecx
  41b302:	jmp    0x442e58a4
  41b307:	sbb    eax,ebx
  41b309:	in     al,0xdb
  41b30b:	bound  edi,QWORD PTR [eax+ebx*8+0x35db06f2]
  41b312:	and    bl,BYTE PTR [edx-0x42]
  41b315:	out    0x6a,eax
  41b317:	aam    0xc6
  41b319:	lods   eax,DWORD PTR ds:[esi]
  41b31a:	adc    BYTE PTR [esi+0x27ee95e7],0x9c
  41b321:	dec    ecx
  41b322:	mov    ah,0x6d
  41b324:	mov    al,ds:0x907423e
  41b329:	lea    ebp,[edx]
  41b32b:	popa   
  41b32c:	popa   
  41b32d:	push   es
  41b32e:	addr16 mov ds:0x551c,eax
  41b332:	push   ebp
  41b333:	in     al,dx
  41b334:	test   eax,0x1af1a539
  41b339:	dec    esi
  41b33a:	push   ss
  41b33b:	jp     0x41b2f0
  41b33d:	into   
  41b33e:	fimul  WORD PTR [ebx+0x594e9d67]
  41b344:	jmp    0x9fef1b1b
  41b349:	iret   
  41b34a:	cmp    DWORD PTR [ebx+0x438c3665],edx
  41b350:	xor    BYTE PTR [esp+eax*1+0x3394018],dh
  41b357:	dec    edx
  41b358:	cmp    edx,DWORD PTR [edi+0x5015d9b3]
  41b35e:	push   esp
  41b35f:	sub    BYTE PTR [ebp-0x3f],al
  41b362:	(bad)  
  41b363:	lods   al,BYTE PTR ds:[esi]
  41b364:	shl    BYTE PTR [edi-0x6f],0x2b
  41b368:	jl     0x41b357
  41b36a:	xchg   esi,eax
  41b36b:	dec    edx
  41b36c:	dec    ebx
  41b36d:	adc    edi,DWORD PTR [edx+0x9]
  41b370:	int    0x9b
  41b372:	icebp  
  41b373:	in     al,dx
  41b374:	push   ecx
  41b375:	ret    0x32a7
  41b378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b379:	outs   dx,BYTE PTR ds:[esi]
  41b37a:	cmp    eax,0xb2f9940a
  41b37f:	por    mm4,QWORD PTR [esi]
  41b382:	sar    DWORD PTR [ecx],cl
  41b384:	je     0x41b326
  41b386:	hlt    
  41b387:	jmp    0xe4f7c504
  41b38c:	dec    esp
  41b38d:	xchg   esp,eax
  41b38e:	cmp    dl,bh
  41b390:	ret    0xb081
  41b393:	pusha  
  41b394:	xchg   ebp,eax
  41b395:	out    dx,eax
  41b396:	or     DWORD PTR [eax+0x30],edx
  41b399:	pop    ebx
  41b39a:	pusha  
  41b39b:	sub    ecx,edi
  41b39d:	push   0xcf74a6c2
  41b3a2:	inc    esi
  41b3a3:	xor    DWORD PTR [ebp+0x49],ecx
  41b3a6:	jle    0x41b420
  41b3a8:	ss in  eax,0x2d
  41b3ab:	je     0x41b36e
  41b3ad:	adc    edi,DWORD PTR [edi]
  41b3af:	pop    esi
  41b3b0:	lea    edi,[edx]
  41b3b2:	sar    cl,0x53
  41b3b5:	xor    ebx,eax
  41b3b7:	fimul  WORD PTR [edi]
  41b3b9:	enter  0xb524,0xf
  41b3bd:	nop
  41b3be:	int    0x34
  41b3c0:	pop    edi
  41b3c1:	cmp    dl,BYTE PTR [edi-0x4ac135a3]
  41b3c7:	mov    al,ds:0xa86538b2
  41b3cc:	nop
  41b3cd:	sar    BYTE PTR [ecx-0x78],cl
  41b3d0:	lods   al,BYTE PTR ds:[esi]
  41b3d1:	fsubr  QWORD PTR [ebx+eiz*2]
  41b3d4:	push   ax
  41b3d6:	(bad)  
  41b3d7:	jg     0x41b368
  41b3d9:	lods   al,BYTE PTR gs:[esi]
  41b3db:	mov    esi,0x73e86fd7
  41b3e0:	pop    ss
  41b3e1:	xchg   edx,eax
  41b3e2:	mov    BYTE PTR [eax-0x70669dd4],bl
  41b3e8:	inc    ebx
  41b3e9:	in     eax,dx
  41b3ea:	in     al,0x40
  41b3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ed:	cmp    dl,BYTE PTR [edi-0x27]
  41b3f0:	std    
  41b3f1:	and    dh,BYTE PTR [esi-0x21]
  41b3f4:	ret    
  41b3f5:	iret   
  41b3f6:	xchg   edx,eax
  41b3f7:	retf   0x5b57
  41b3fa:	cmp    BYTE PTR [eax+0x3a2abd45],bl
  41b400:	dec    ecx
  41b401:	jno    0x41b445
  41b403:	xchg   ebx,eax
  41b404:	repz popf 
  41b406:	add    DWORD PTR ds:[ebx],0x89e5ac5f
  41b40d:	mov    cl,0x3d
  41b40f:	and    esp,DWORD PTR [eax]
  41b411:	or     al,BYTE PTR [esi+0x2991bdcb]
  41b417:	dec    esi
  41b418:	mov    fs:0xc01ec9bb,al
  41b41e:	push   ecx
  41b41f:	inc    esi
  41b420:	aam    0x53
  41b422:	jmp    0x3b8733e3
  41b427:	inc    ebp
  41b428:	inc    edi
  41b429:	repnz push eax
  41b42b:	stc    
  41b42c:	(bad)  
  41b42d:	push   ecx
  41b42e:	retf   0xaa6d
  41b431:	(bad)  
  41b432:	cmp    ah,al
  41b434:	popa   
  41b435:	xor    edx,esp
  41b437:	fbstp  TBYTE PTR [ebx+esi*4]
  41b43a:	pop    esp
  41b43b:	loope  0x41b4ab
  41b43d:	mov    ?,WORD PTR [eax+0x772f491f]
  41b443:	std    
  41b444:	(bad)  
  41b445:	div    BYTE PTR [ecx+eax*2+0x4d]
  41b449:	adc    dh,bl
  41b44b:	and    BYTE PTR fs:[edi+ebp*1+0x192e1f10],0x86
  41b454:	add    BYTE PTR [esi],bl
  41b456:	inc    ebp
  41b457:	add    cl,BYTE PTR [ecx]
  41b459:	mov    WORD PTR [ebx],cs
  41b45b:	mov    ebx,0x191b0fdc
  41b460:	adc    bl,0x8e
  41b463:	shl    DWORD PTR [eax+0x26],0x24
  41b467:	cdq    
  41b468:	xor    DWORD PTR [ebx],esp
  41b46a:	add    al,0x5e
  41b46c:	fwait
  41b46d:	inc    DWORD PTR [ebp-0x51]
  41b470:	in     al,dx
  41b471:	mov    edi,DWORD PTR [edi+eax*1]
  41b474:	call   0x4999b4ee
  41b479:	sbb    eax,0xe28bd081
  41b47e:	inc    edi
  41b47f:	add    eax,0x71495dc7
  41b484:	out    0x79,eax
  41b486:	lds    eax,FWORD PTR ds:0xf4e2347a
  41b48c:	jmp    0x2f04fd42
  41b491:	test   BYTE PTR ds:0xf91fe8e7,dl
  41b497:	sub    edi,esi
  41b499:	or     DWORD PTR [eax+0x1dadcc4f],ecx
  41b49f:	jns    0x41b520
  41b4a1:	cmp    esi,ebp
  41b4a3:	and    DWORD PTR [esp+ebp*2-0x4d84b2d5],ebx
  41b4aa:	add    edi,DWORD PTR [edx-0x4d]
  41b4ad:	js     0x41b49a
  41b4af:	mov    BYTE PTR [edi+0x24],ch
  41b4b2:	int    0x20
  41b4b4:	mov    ?,WORD PTR [esi+edx*1+0x1cf3f947]
  41b4bb:	adc    DWORD PTR [edi-0x67],ebp
  41b4be:	push   cs
  41b4bf:	out    0x38,al
  41b4c1:	cmp    al,0x5a
  41b4c3:	js     0x41b4d0
  41b4c5:	sbb    WORD PTR [edi],0x5069
  41b4ca:	daa    
  41b4cb:	jecxz  0x41b531
  41b4cd:	(bad)  
  41b4ce:	out    0x10,eax
  41b4d0:	(bad)
  41b4d3:	add    BYTE PTR [ecx-0x32],0x16
  41b4d7:	mov    ds,WORD PTR [edx+0x73c3db82]
  41b4dd:	jne    0x41b4db
  41b4df:	jmp    0xe9012e87
  41b4e4:	dec    ebp
  41b4e5:	inc    ecx
  41b4e6:	mov    esi,0x38a27dea
  41b4eb:	mov    al,0xf9
  41b4ed:	aaa    
  41b4ee:	test   bl,dl
  41b4f0:	sbb    DWORD PTR [edx-0x41611550],esp
  41b4f6:	xchg   esp,eax
  41b4f7:	fcom   QWORD PTR [eax+ebx*4-0x77]
  41b4fb:	xchg   edx,eax
  41b4fc:	adc    bl,BYTE PTR [edi-0x199b3ff]
  41b502:	mov    eax,0x5405827a
  41b507:	outs   dx,BYTE PTR ds:[esi]
  41b508:	dec    edi
  41b509:	inc    ebx
  41b50a:	dec    ecx
  41b50b:	outs   dx,BYTE PTR ds:[esi]
  41b50c:	mov    esi,0xc1d538ea
  41b511:	and    BYTE PTR [edi+0x1c],al
  41b514:	outs   dx,DWORD PTR ds:[esi]
  41b515:	sbb    BYTE PTR [eax-0x5b5cdbcb],bh
  41b51b:	or     edi,DWORD PTR [edx]
  41b51d:	sbb    al,0x64
  41b51f:	push   edi
  41b520:	je     0x41b4a9
  41b522:	dec    esi
  41b523:	push   ebp
  41b524:	inc    BYTE PTR [edx-0x7e]
  41b527:	inc    edi
  41b528:	and    BYTE PTR [eax-0x774efc0b],dh
  41b52e:	xor    ch,BYTE PTR [edi+0x4c]
  41b531:	(bad)  [ebx]
  41b533:	sti    
  41b534:	and    edx,DWORD PTR [edx]
  41b536:	push   edi
  41b537:	jg     0x41b51d
  41b539:	pushf  
  41b53a:	pop    ds
  41b53b:	xlat   BYTE PTR ds:[ebx]
  41b53c:	stos   DWORD PTR es:[edi],eax
  41b53d:	daa    
  41b53e:	fs stos DWORD PTR es:[edi],eax
  41b540:	aaa    
  41b541:	test   al,0xa7
  41b543:	jae    0x41b504
  41b545:	bound  eax,QWORD PTR [esp+ebp*2-0x9]
  41b549:	bound  ecx,QWORD PTR [edx]
  41b54b:	sub    esp,0x34
  41b54e:	test   al,0xd9
  41b550:	shl    esp,1
  41b552:	ss das 
  41b554:	sub    DWORD PTR [esi+0x4a2e8954],ebx
  41b55a:	mov    ecx,0x634af2f6
  41b55f:	pushf  
  41b560:	sbb    cl,BYTE PTR [ebx-0x7c]
  41b563:	(bad)  
  41b564:	fcomp  st(4)
  41b566:	imul   edi,DWORD PTR [ecx+edx*2-0x642776c1],0x62
  41b56e:	stos   DWORD PTR es:[edi],eax
  41b56f:	out    dx,eax
  41b570:	popf   
  41b571:	mov    eax,ds:0xea775dc3
  41b576:	in     al,0xdc
  41b578:	fadd   QWORD PTR [eax-0x416b2cb3]
  41b57e:	pushf  
  41b57f:	scas   eax,DWORD PTR es:[di]
  41b581:	lods   al,BYTE PTR ds:[esi]
  41b582:	adc    al,0x22
  41b584:	dec    ebp
  41b585:	shr    DWORD PTR [edx],1
  41b587:	ror    DWORD PTR [edi+0x1912b971],0x42
  41b58e:	mov    BYTE PTR [ebx],ah
  41b590:	sub    eax,0x8ee6a63d
  41b595:	mov    ds:0x4220cc2b,al
  41b59a:	or     al,0xeb
  41b59c:	out    dx,eax
  41b59d:	popf   
  41b59e:	out    dx,eax
  41b59f:	aam    0x47
  41b5a1:	(bad)  
  41b5a3:	ret    0xb4a7
  41b5a6:	xchg   edi,eax
  41b5a7:	or     eax,0x4736006
  41b5ac:	pop    edx
  41b5ad:	cmovle edx,esp
  41b5b0:	cmp    al,0x9d
  41b5b2:	ret    
  41b5b3:	sub    dl,BYTE PTR [ebp+ebx*2-0x296d2b75]
  41b5ba:	addr16 lahf 
  41b5bc:	mov    edx,DWORD PTR [eax]
  41b5be:	add    al,BYTE PTR [ecx+0x6b]
  41b5c1:	xchg   ecx,eax
  41b5c2:	mov    ecx,DWORD PTR [edx+0x3a]
  41b5c5:	sub    eax,0xcb6400f5
  41b5ca:	shl    BYTE PTR [esi-0x148de5a9],1
  41b5d0:	mov    ebx,DWORD PTR [eax-0x15]
  41b5d3:	dec    edi
  41b5d4:	rol    BYTE PTR ds:0x6e8ecf86,cl
  41b5da:	mov    esp,0x6da73dd9
  41b5df:	add    al,0x74
  41b5e1:	cmp    BYTE PTR [edx+ebp*4],ah
  41b5e4:	mov    edx,0x14a1ce3d
  41b5e9:	aas    
  41b5ea:	stos   DWORD PTR es:[edi],eax
  41b5eb:	mov    bh,dh
  41b5ed:	js     0x41b584
  41b5ef:	inc    esp
  41b5f0:	xchg   edx,eax
  41b5f1:	mov    cl,BYTE PTR [esi+0x20]
  41b5f4:	cdq    
  41b5f5:	lahf   
  41b5f6:	(bad)  
  41b5f8:	mov    bl,0x19
  41b5fa:	(bad)  
  41b5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5fc:	fdivr  QWORD PTR [ebx-0x2396db55]
  41b602:	in     al,0x5d
  41b604:	or     bh,BYTE PTR [ebx-0x3f]
  41b607:	push   ecx
  41b608:	call   0x21dd5ccd
  41b60d:	xchg   esp,eax
  41b60e:	push   ebx
  41b60f:	clc    
  41b610:	jge    0x41b599
  41b612:	cmp    al,0xd1
  41b614:	sahf   
  41b615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b616:	cmp    al,0xfa
  41b618:	sbb    bl,BYTE PTR [edi+0x5291dbc5]
  41b61e:	and    eax,0x74263665
  41b623:	in     eax,dx
  41b624:	add    eax,0xd52477e2
  41b629:	dec    edx
  41b62a:	stos   BYTE PTR es:[edi],al
  41b62b:	dec    eax
  41b62c:	bound  esi,QWORD PTR [eax]
  41b62e:	scas   eax,DWORD PTR es:[edi]
  41b62f:	fldcw  WORD PTR [ebx-0x34404006]
  41b635:	sbb    eax,0x97110d24
  41b63a:	add    DWORD PTR [ebx-0x38],edi
  41b63d:	push   esi
  41b63f:	imul   eax,DWORD PTR [ebp-0x71],0x68
  41b643:	sbb    eax,0xd2274b21
  41b648:	lods   eax,DWORD PTR ds:[esi]
  41b649:	in     eax,dx
  41b64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b64b:	popf   
  41b64c:	or     BYTE PTR [edi],ch
  41b64e:	and    al,0x54
  41b650:	fist   WORD PTR [esi]
  41b652:	out    0x61,al
  41b654:	dec    edi
  41b655:	push   ds
  41b656:	mov    dh,0xc2
  41b658:	test   BYTE PTR [edi+0x4edc5ee7],0x86
  41b65f:	int3   
  41b660:	mov    eax,ds:0xb24e696c
  41b665:	int3   
  41b666:	(bad)  
  41b667:	push   ebx
  41b668:	jle    0x41b645
  41b66a:	dec    esi
  41b66b:	loope  0x41b6cd
  41b66d:	xor    BYTE PTR [eax],bl
  41b66f:	pop    ss
  41b670:	idiv   BYTE PTR [esi+0x64]
  41b673:	sbb    DWORD PTR [ecx-0x4b96dbb9],edi
  41b679:	mov    bl,0x16
  41b67b:	adc    bl,dh
  41b67d:	jb     0x41b63a
  41b67f:	pop    ebp
  41b680:	adc    edx,ecx
  41b682:	pop    es
  41b683:	xor    DWORD PTR [edx+0x58],0x4d
  41b687:	jecxz  0x41b703
  41b689:	(bad)  
  41b68b:	in     al,0x3f
  41b68d:	jae    0x41b6bd
  41b68f:	inc    edx
  41b690:	scas   eax,DWORD PTR es:[edi]
  41b691:	loopne 0x41b6dd
  41b693:	retf   0xfe11
  41b696:	lods   eax,DWORD PTR ds:[esi]
  41b697:	mov    ds:0x1ff172cc,eax
  41b69c:	jecxz  0x41b665
  41b69e:	aaa    
  41b69f:	add    BYTE PTR [ebp+0x484c2762],al
  41b6a5:	dec    esp
  41b6a6:	xchg   edx,eax
  41b6a7:	(bad)  
  41b6a8:	out    dx,al
  41b6a9:	(bad)  
  41b6aa:	fadd   QWORD PTR [edi+0x7dc591b8]
  41b6b0:	or     al,0xcf
  41b6b2:	call   0x9ae6:0x4ce10a7a
  41b6b9:	call   0x9cf5:0xf9d8fe1b
  41b6c0:	div    BYTE PTR [eax]
  41b6c2:	pop    ebx
  41b6c3:	fmulp  st(2),st
  41b6c5:	ret    
  41b6c6:	fwait
  41b6c7:	pop    edi
  41b6c8:	xor    BYTE PTR [ecx-0x73b8b20d],0x10
  41b6cf:	rol    DWORD PTR [eax],1
  41b6d1:	hlt    
  41b6d2:	(bad)  
  41b6d3:	jmp    0xb8c1:0xd4a8dff6
  41b6da:	hlt    
  41b6db:	int    0x2f
  41b6dd:	inc    eax
  41b6de:	push   ebx
  41b6df:	xchg   esi,eax
  41b6e0:	inc    esp
  41b6e1:	add    eax,0xe909e13e
  41b6e6:	pusha  
  41b6e7:	push   cs
  41b6e8:	mov    ds:0x3583ed62,eax
  41b6ed:	in     eax,dx
  41b6ee:	pop    ds
  41b6ef:	mov    bh,BYTE PTR [esi+ebp*8]
  41b6f2:	push   cs
  41b6f3:	add    DWORD PTR [eax+0x7b4ed9a],edx
  41b6f9:	jge    0x41b691
  41b6fb:	mov    edx,0xc4085055
  41b700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b701:	aam    0x7b
  41b703:	div    DWORD PTR [edx]
  41b705:	or     dl,ch
  41b707:	sbb    al,0xf3
  41b709:	lods   eax,DWORD PTR ds:[esi]
  41b70a:	jp     0x41b75c
  41b70c:	test   eax,0x389592e1
  41b711:	or     dh,bh
  41b713:	enter  0xb8c5,0x5d
  41b717:	inc    edi
  41b718:	gs mov eax,0x126fdece
  41b71e:	jnp    0x41b779
  41b720:	imul   esi,DWORD PTR [eax-0x3f9aa6d1],0x19
  41b727:	lea    ebx,[ecx]
  41b729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b72a:	fwait
  41b72b:	scas   eax,DWORD PTR es:[edi]
  41b72c:	cmp    al,0x64
  41b72e:	lods   al,BYTE PTR ds:[esi]
  41b72f:	adc    al,0xaa
  41b731:	mov    dl,0x8a
  41b733:	sub    al,0x87
  41b735:	out    dx,eax
  41b736:	add    eax,0x2f5d9c11
  41b73b:	sub    DWORD PTR [ebp+0x7],esi
  41b73e:	dec    ecx
  41b73f:	mov    bl,0x66
  41b741:	retf   
  41b742:	xchg   ebx,eax
  41b743:	lods   al,BYTE PTR ds:[esi]
  41b744:	lds    ebx,FWORD PTR [ebx+0x3ca8be8d]
  41b74a:	jns    0x41b744
  41b74c:	lods   eax,DWORD PTR ds:[esi]
  41b74d:	sbb    dl,BYTE PTR [ebx+0x14]
  41b750:	pop    ebx
  41b751:	xchg   ecx,eax
  41b752:	arpl   WORD PTR [ecx-0x336f51f0],ax
  41b758:	xchg   BYTE PTR [edi],al
  41b75a:	jl     0x41b77d
  41b75c:	mov    al,0x97
  41b75e:	sub    al,0x28
  41b760:	test   al,0x63
  41b762:	aad    0x5d
  41b764:	jo     0x41b724
  41b766:	xchg   ch,ch
  41b768:	xor    BYTE PTR [ebp+0x28],ch
  41b76b:	add    al,0xd3
  41b76d:	(bad)  
  41b76e:	pop    esi
  41b76f:	jle    0x41b71b
  41b771:	pushf  
  41b772:	jl     0x41b7cf
  41b774:	xor    eax,DWORD PTR [ecx-0x28a8a586]
  41b77a:	push   cs
  41b77b:	in     al,dx
  41b77c:	inc    eax
  41b77d:	push   es
  41b77e:	pop    esp
  41b77f:	pop    es
  41b780:	xchg   esi,eax
  41b781:	xor    al,0x66
  41b783:	push   ebp
  41b784:	fcomp  DWORD PTR [edx]
  41b786:	dec    esi
  41b787:	mov    al,ds:0xc2e64cbf
  41b78c:	in     eax,0xb
  41b78e:	jmp    0x41b75b
  41b790:	ins    BYTE PTR es:[edi],dx
  41b791:	test   BYTE PTR [ecx+0x62f95a6d],0xce
  41b798:	sub    al,0x52
  41b79a:	retf   0x6ac7
  41b79d:	psubusw mm3,QWORD PTR [ecx]
  41b7a0:	cmp    al,0x9e
  41b7a2:	fistp  DWORD PTR [ebx*1+0x54865421]
  41b7a9:	test   eax,0x305733a9
  41b7ae:	xchg   ebp,eax
  41b7af:	popf   
  41b7b0:	pop    ecx
  41b7b1:	ret    0xb92e
  41b7b4:	add    ecx,DWORD PTR [edx+ecx*2]
  41b7b7:	xlat   BYTE PTR ds:[ebx]
  41b7b8:	push   0x4d2b0c11
  41b7bd:	cmp    eax,0x6fe79b9b
  41b7c2:	pop    ebp
  41b7c3:	mov    dl,0x95
  41b7c5:	sti    
  41b7c6:	pop    esp
  41b7c7:	push   esi
  41b7c8:	xor    dh,BYTE PTR [esi-0x5]
  41b7cb:	push   esi
  41b7cc:	mov    DWORD PTR [ebp-0x1f0f7e6e],0x984c8394
  41b7d6:	sub    al,0xd
  41b7d8:	or     al,0x9e
  41b7da:	mov    cl,ch
  41b7dc:	sar    ebp,cl
  41b7de:	(bad)  
  41b7df:	loope  0x41b785
  41b7e1:	mov    dl,dl
  41b7e3:	adc    al,0xe2
  41b7e5:	enter  0xe514,0x30
  41b7e9:	loop   0x41b848
  41b7eb:	ins    DWORD PTR es:[edi],dx
  41b7ec:	cmc    
  41b7ed:	mov    bh,BYTE PTR ds:0x17f06087
  41b7f3:	mov    bl,0xc5
  41b7f5:	fwait
  41b7f6:	stos   BYTE PTR es:[edi],al
  41b7f7:	data16 movs BYTE PTR es:[di],BYTE PTR ds:[si]
  41b7fa:	aam    0xb
  41b7fc:	mov    al,ds:0x30ad5155
  41b801:	popf   
  41b802:	ins    DWORD PTR es:[edi],dx
  41b803:	adc    edx,ebp
  41b805:	push   edx
  41b806:	push   ds
  41b807:	mov    al,ds:0xea3da162
  41b80d:	imul   ecx
  41b80f:	in     al,0x9d
  41b811:	shl    cl,cl
  41b813:	pop    ecx
  41b814:	inc    esp
  41b815:	xchg   DWORD PTR ds:0xbbae300,ebp
  41b81b:	js     0x41b7e0
  41b81d:	mov    al,ds:0xb76d8f04
  41b822:	xchg   esi,eax
  41b823:	je     0x41b865
  41b825:	popf   
  41b826:	in     al,0x7e
  41b828:	js     0x41b7f3
  41b82a:	adc    ebx,ebx
  41b82c:	(bad)  [ebx-0x80]
  41b82f:	retf   0xdf54
  41b832:	sub    dh,BYTE PTR [eax]
  41b834:	int3   
  41b835:	clc    
  41b836:	adc    ebp,DWORD PTR [edx+0x5254897a]
  41b83c:	(bad)  [edi-0x5e]
  41b83f:	inc    ecx
  41b840:	shr    DWORD PTR ds:[ebx],cl
  41b843:	js     0x41b8c2
  41b845:	push   edx
  41b846:	add    DWORD PTR [ebx-0x16],edx
  41b849:	out    0xff,eax
  41b84b:	xchg   ebp,eax
  41b84c:	add    al,0xa2
  41b84e:	repnz mov ecx,0x2b03a03a
  41b854:	rcr    DWORD PTR [eax-0xd499567],0xab
  41b85b:	sbb    al,0xa8
  41b85d:	js     0x41b84b
  41b85f:	je     0x41b8dd
  41b861:	lds    ebx,FWORD PTR [esi+0x24d4b2cb]
  41b867:	into   
  41b868:	mov    edx,DWORD PTR [ebx-0x1f]
  41b86b:	ja     0x41b8d9
  41b86d:	sub    eax,0x4e9701dd
  41b872:	cmp    DWORD PTR [ebx],0x70fe3161
  41b878:	push   edx
  41b879:	pop    eax
  41b87a:	pop    esi
  41b87b:	mov    al,ds:0xa093f2a
  41b880:	xchg   ecx,eax
  41b881:	leave  
  41b882:	je     0x41b8dc
  41b884:	pop    edi
  41b885:	dec    eax
  41b886:	jg     0x41b82c
  41b888:	push   ebp
  41b889:	add    bl,cl
  41b88b:	xor    BYTE PTR [esp+esi*4],ah
  41b88e:	push   eax
  41b88f:	and    edx,eax
  41b891:	fnstcw WORD PTR [ecx-0x6e]
  41b894:	hlt    
  41b895:	sub    al,BYTE PTR [ecx+0x3bf3d085]
  41b89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b89c:	jns    0x41b824
  41b89e:	mov    WORD PTR [eax],?
  41b8a0:	call   0x473b:0x7972c051
  41b8a7:	cmp    esi,DWORD PTR ss:[eax]
  41b8aa:	bound  edi,QWORD PTR [esi-0x5c7eef34]
  41b8b0:	aaa    
  41b8b1:	daa    
  41b8b2:	(bad)  
  41b8b3:	mov    ds:0xf95c91f8,eax
  41b8b8:	push   esp
  41b8b9:	icebp  
  41b8ba:	or     DWORD PTR [ebx+0x5f],ebp
  41b8bd:	ins    DWORD PTR es:[edi],dx
  41b8be:	popf   
  41b8bf:	push   ebx
  41b8c0:	dec    edx
  41b8c1:	sub    al,0xea
  41b8c3:	pushf  
  41b8c4:	and    BYTE PTR [edx-0x6f],bl
  41b8c7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b8c9:	and    DWORD PTR [esi],0x37
  41b8cc:	mov    edx,0x6f26f80a
  41b8d1:	jmp    0x788f:0xfa76e2e3
  41b8d8:	xor    BYTE PTR [esi],cl
  41b8da:	inc    esp
  41b8db:	test   al,0x1
  41b8dd:	stos   DWORD PTR es:[edi],eax
  41b8de:	pop    esi
  41b8df:	xchg   DWORD PTR [esi-0x67],ecx
  41b8e2:	gs scas al,BYTE PTR es:[edi]
  41b8e4:	xchg   esi,eax
  41b8e5:	add    ebx,DWORD PTR [ebx]
  41b8e7:	push   ds
  41b8e8:	outs   dx,BYTE PTR ds:[esi]
  41b8e9:	mov    BYTE PTR [ebp+0x388ad546],bl
  41b8ef:	cmp    eax,0x1a6947c2
  41b8f4:	jae    0x41b96e
  41b8f6:	pushw  ds
  41b8f8:	sbb    eax,0xece0e03a
  41b8fd:	ins    DWORD PTR es:[edi],dx
  41b8fe:	push   ebp
  41b8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b900:	ret    
  41b901:	xor    al,ah
  41b903:	(bad)  
  41b904:	shl    BYTE PTR [esi],0x3d
  41b907:	xor    ecx,ebp
  41b909:	mov    bh,0xc6
  41b90b:	iret   
  41b90c:	pop    ebx
  41b90d:	popf   
  41b90e:	loope  0x41b922
  41b910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b911:	mov    esp,0x7e1b78d2
  41b916:	pop    esi
  41b917:	dec    esi
  41b918:	add    DWORD PTR [ebx+0x2eb304fd],ecx
  41b91e:	mov    bh,0xdf
  41b921:	hlt    
  41b922:	or     ebx,ecx
  41b924:	xor    DWORD PTR [ebx-0x5347ed1],esi
  41b92a:	cmc    
  41b92b:	inc    esp
  41b92c:	jne    0x41b98c
  41b92e:	lahf   
  41b92f:	fist   WORD PTR [ebx]
  41b931:	repnz loopne 0x41b904
  41b934:	lahf   
  41b935:	int3   
  41b936:	icebp  
  41b937:	sub    edx,DWORD PTR [ebp-0x28]
  41b93a:	push   esi
  41b93b:	inc    esp
  41b93c:	jbe    0x41b8bf
  41b93e:	cdq    
  41b93f:	daa    
  41b940:	mov    ebx,0xe8e99b0d
  41b945:	fldcw  WORD PTR [edi+0xe]
  41b948:	add    DWORD PTR [esi+edi*1],esp
  41b94b:	fbld   TBYTE PTR [esi+0x338ac0b5]
  41b951:	mov    edx,0x3b8ca8d2
  41b956:	imul   ebp,DWORD PTR [ebp-0x1f812642],0xffffffd6
  41b95d:	push   edi
  41b95e:	sub    edi,eax
  41b960:	xor    edx,esp
  41b962:	lds    edi,FWORD PTR [ebp+ebx*2+0x5c]
  41b966:	xchg   BYTE PTR [ecx],cl
  41b968:	cmc    
  41b969:	aas    
  41b96a:	jecxz  0x41b948
  41b96c:	add    eax,0xfb242df6
  41b971:	adc    BYTE PTR [edx-0x2814f35],0x77
  41b978:	or     al,0xc5
  41b97a:	hlt    
  41b97b:	arpl   WORD PTR ss:[esi-0x63343aad],cx
  41b982:	push   ds
  41b983:	sub    BYTE PTR [ecx+ebx*2-0x18bd3b4d],0xfa
  41b98b:	cmp    DWORD PTR [bx+si-0x3d],0xac17c213
  41b993:	push   ebx
  41b994:	xor    ebp,DWORD PTR [ebp+0x64]
  41b997:	ja     0xf93459b8
  41b99d:	push   esi
  41b99e:	into   
  41b99f:	jl     0x41b9e9
  41b9a1:	sbb    al,BYTE PTR [edx+ebx*4-0x6819a15c]
  41b9a8:	fdivp  st(0),st
  41b9aa:	retf   
  41b9ab:	fstp   QWORD PTR [edx]
  41b9ad:	sti    
  41b9ae:	imul   DWORD PTR [edi+0x1cbee37e]
  41b9b4:	dec    ebp
  41b9b5:	push   esi
  41b9b6:	stc    
  41b9b7:	out    dx,eax
  41b9b8:	mov    esp,0xe0bd0541
  41b9bd:	mov    ebx,0x7c30ab1b
  41b9c2:	loope  0x41ba3e
  41b9c4:	inc    edx
  41b9c5:	pop    ss
  41b9c6:	xchg   edx,eax
  41b9c7:	ins    DWORD PTR es:[edi],dx
  41b9c8:	aaa    
  41b9c9:	(bad)  
  41b9ca:	rol    DWORD PTR [eax],1
  41b9cc:	inc    ebp
  41b9cd:	sbb    BYTE PTR [esi+esi*8],ah
  41b9d0:	sub    eax,0xa26990db
  41b9d5:	das    
  41b9d6:	push   ds
  41b9d7:	pop    es
  41b9d8:	pushf  
  41b9d9:	call   FWORD PTR [ebx]
  41b9db:	or     BYTE PTR [edx+0x52],ch
  41b9de:	aas    
  41b9df:	fnstenv [edx]
  41b9e1:	rol    BYTE PTR [esi],0x0
  41b9e4:	sbb    BYTE PTR [ebx],al
  41b9e6:	jb     0x41ba5a
  41b9e8:	cwde   
  41b9e9:	stos   BYTE PTR es:[edi],al
  41b9ea:	push   es
  41b9eb:	jge    0x41ba62
  41b9ed:	inc    esp
  41b9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ef:	jae    0x41b9e3
  41b9f1:	pop    edi
  41b9f2:	mov    ebp,0xedb5375c
  41b9f7:	retf   
  41b9f8:	mov    ch,0x67
  41b9fb:	add    cl,ah
  41b9fd:	cmc    
  41b9fe:	inc    edx
  41b9ff:	jns    0x41b9eb
  41ba01:	mov    al,0x78
  41ba03:	call   0xb0de47e5
  41ba08:	cmp    bh,BYTE PTR [ebp+0x7d]
  41ba0b:	jns    0x41b9e5
  41ba0d:	push   ebp
  41ba0e:	adc    eax,0x6166b723
  41ba13:	mov    ds:0x2a04df0f,eax
  41ba18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba19:	loope  0x41b9c8
  41ba1b:	sahf   
  41ba1c:	popa   
  41ba1d:	leave  
  41ba1e:	xor    edi,ebp
  41ba20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba21:	jmp    0xf46:0x8be30989
  41ba28:	add    bh,0xd
  41ba2b:	stos   BYTE PTR es:[edi],al
  41ba2c:	inc    edi
  41ba2d:	add    DWORD PTR [edx-0x114718bb],esi
  41ba33:	push   cs
  41ba34:	ds push edi
  41ba36:	repnz adc dl,0xc1
  41ba3a:	pop    esi
  41ba3b:	xchg   esp,eax
  41ba3c:	or     BYTE PTR ds:0x44025758,bh
  41ba42:	xchg   edi,eax
  41ba43:	ins    DWORD PTR es:[edi],dx
  41ba44:	dec    edi
  41ba45:	and    ah,0x68
  41ba48:	icebp  
  41ba49:	mov    ds:0xc8f0f225,al
  41ba4e:	nop
  41ba4f:	pop    eax
  41ba50:	sbb    DWORD PTR [eax],ebx
  41ba52:	out    0x1e,eax
  41ba54:	xchg   esi,eax
  41ba55:	loopne 0x41ba6f
  41ba57:	fst    st(4)
  41ba59:	xor    al,BYTE PTR [ebp+0x9b0a4b8]
  41ba5f:	loope  0x41ba34
  41ba61:	xor    bl,BYTE PTR [esi]
  41ba63:	sbb    ebp,DWORD PTR [ebx-0x3d4e1a45]
  41ba69:	sub    al,0x6e
  41ba6b:	scas   al,BYTE PTR es:[edi]
  41ba6c:	xchg   edi,eax
  41ba6d:	test   DWORD PTR [edx],eax
  41ba6f:	xchg   ecx,eax
  41ba70:	jno    0x41ba53
  41ba72:	loop   0x41ba59
  41ba74:	scas   al,BYTE PTR es:[edi]
  41ba75:	ins    DWORD PTR es:[edi],dx
  41ba76:	pusha  
  41ba77:	jb     0x41ba9f
  41ba79:	in     al,dx
  41ba7a:	jo     0x41baf0
  41ba7c:	or     bh,BYTE PTR [eax]
  41ba7e:	jns    0x41bae8
  41ba80:	jecxz  0x41ba8b
  41ba82:	mov    DWORD PTR [esi-0x3ed03670],esp
  41ba88:	jg     0x41ba5a
  41ba8a:	(bad)  
  41ba8b:	mov    eax,0x2779dd43
  41ba90:	jecxz  0x41bae4
  41ba92:	add    eax,0x2ac8481b
  41ba97:	add    edi,0x3d
  41ba9a:	mov    esi,0xf1977486
  41ba9f:	pop    ss
  41baa0:	push   ebx
  41baa1:	fsubr  st,st(2)
  41baa3:	sbb    al,0xef
  41baa5:	in     eax,0xc2
  41baa7:	(bad)  
  41baa8:	pop    edi
  41baa9:	xor    DWORD PTR [edi],ebp
  41baab:	hlt    
  41baac:	jne    0x41ba6b
  41baae:	ja     0x41bb03
  41bab0:	jge    0x41ba34
  41bab2:	sbb    BYTE PTR [eax],ch
  41bab4:	int    0x33
  41bab6:	mov    ah,0x94
  41bab8:	and    BYTE PTR [ebx+0x5],bh
  41babb:	call   eax
  41babd:	xor    cl,BYTE PTR [edi+ebp*8-0x26123804]
  41bac4:	ret    0x3f76
  41bac7:	mov    cl,0xe3
  41bac9:	jo     0x41bb33
  41bacb:	pop    edx
  41bacc:	retf   0x5092
  41bacf:	fimul  WORD PTR ds:0xf5936d2b
  41bad5:	xor    dh,bl
  41bad7:	in     al,dx
  41bad8:	loope  0x41bad0
  41bada:	mov    al,ds:0xeaa9d352
  41badf:	pop    ebp
  41bae0:	in     eax,0xf
  41bae2:	stos   DWORD PTR es:[edi],eax
  41bae3:	xchg   ebx,eax
  41bae4:	retf   
  41bae5:	push   es
  41bae6:	call   0x1061:0xb978d4f0
  41baed:	scas   eax,DWORD PTR es:[edi]
  41baee:	lea    eax,[edi+ebx*8+0x3bb2700e]
  41baf5:	jl     0x41bac2
  41baf7:	sub    ch,cl
  41baf9:	shl    DWORD PTR [ebp-0x7b78bbaf],1
  41baff:	(bad)  [ebp+edx*4+0x47257582]
  41bb06:	fnstenv [ecx]
  41bb08:	lods   eax,DWORD PTR ds:[esi]
  41bb09:	jno    0x41bad3
  41bb0b:	jno    0x41bb4b
  41bb0d:	lock jmp 0x41baeb
  41bb10:	dec    esp
  41bb11:	and    al,0xa2
  41bb13:	out    0x9a,al
  41bb15:	dec    edi
  41bb16:	std    
  41bb17:	dec    ebx
  41bb18:	scas   eax,DWORD PTR es:[edi]
  41bb19:	pushf  
  41bb1a:	inc    ecx
  41bb1b:	push   0xd4099f7b
  41bb20:	cmp    DWORD PTR [ecx-0x2bb5ebd3],ebp
  41bb26:	add    al,0xbc
  41bb28:	mov    dl,0x93
  41bb2a:	cmp    eax,0x2939099f
  41bb2f:	(bad)  
  41bb30:	cmp    al,0xa6
  41bb32:	inc    esi
  41bb33:	leave  
  41bb34:	jno    0x41bb7d
  41bb36:	imul   esp,esi,0x1c9a2038
  41bb3c:	sti    
  41bb3d:	popa   
  41bb3e:	pop    eax
  41bb3f:	(bad)  
  41bb40:	icebp  
  41bb41:	dec    ebp
  41bb42:	cs sub al,0xe8
  41bb45:	ret    
  41bb46:	lahf   
  41bb47:	ror    BYTE PTR [ebx+eiz*4-0xf462e59],cl
  41bb4e:	pop    ebp
  41bb4f:	in     eax,0xcc
  41bb51:	fistp  DWORD PTR [eax+0x7cb2e892]
  41bb57:	pxor   mm2,mm6
  41bb5a:	cmc    
  41bb5b:	fist   WORD PTR [ebx+0x4926e5b2]
  41bb61:	ja     0x41bbc7
  41bb63:	outs   dx,BYTE PTR ds:[esi]
  41bb64:	lahf   
  41bb65:	xor    DWORD PTR [esi-0x1879945c],0x36
  41bb6c:	mov    ebx,0x71ccf8e7
  41bb71:	mov    ds:0xdb533c6b,al
  41bb76:	pop    ds
  41bb77:	inc    edi
  41bb78:	mov    bh,0x95
  41bb7a:	xchg   edi,eax
  41bb7b:	push   0x73885933
  41bb80:	xchg   ebp,eax
  41bb81:	sub    bh,BYTE PTR [eiz*1-0x3ae85e38]
  41bb88:	add    BYTE PTR [eax+eiz*1],dl
  41bb8b:	sahf   
  41bb8c:	cmp    ebx,DWORD PTR ds:0xa2edf22f
  41bb92:	fadd   st(1),st
  41bb94:	call   0x2801:0xf82f82a6
  41bb9b:	bound  esi,QWORD PTR [edx+0x4c]
  41bb9e:	sti    
  41bb9f:	push   ebp
  41bba0:	fwait
  41bba1:	dec    ebx
  41bba2:	retf   
  41bba3:	jg     0x41bc07
  41bba5:	cmp    cl,0xe4
  41bba8:	inc    ebx
  41bba9:	sbb    eax,DWORD PTR [ebp+0x7b717033]
  41bbaf:	jl     0x41bb9e
  41bbb1:	mul    BYTE PTR [eax-0x3]
  41bbb4:	push   es
  41bbb5:	clc    
  41bbb6:	cld    
  41bbb7:	xlat   BYTE PTR ds:[ebx]
  41bbb8:	es mov cl,0x63
  41bbbb:	fstp   TBYTE PTR [edx]
  41bbbd:	mov    al,ds:0x1b94a9c6
  41bbc2:	nop
  41bbc3:	jecxz  0x41bc3f
  41bbc5:	adc    DWORD PTR [eax],ecx
  41bbc7:	xchg   ecx,eax
  41bbc8:	jno    0x41bb93
  41bbca:	idiv   DWORD PTR [esi-0x23572104]
  41bbd0:	or     BYTE PTR [ecx-0x3e8601f2],al
  41bbd6:	dec    edi
  41bbd7:	lahf   
  41bbd8:	aad    0x6a
  41bbda:	dec    esi
  41bbdb:	es out 0x5d,al
  41bbde:	scas   al,BYTE PTR es:[edi]
  41bbdf:	sbb    eax,0xe416e245
  41bbe4:	into   
  41bbe5:	or     DWORD PTR [ebx-0xc],0x46aa0445
  41bbec:	dec    BYTE PTR [edx]
  41bbee:	enter  0x5356,0x99
  41bbf2:	mov    dh,0xe3
  41bbf4:	js     0x41bbf9
  41bbf6:	sub    BYTE PTR [ecx+0x60fb0083],cl
  41bbfc:	cwde   
  41bbfd:	mov    ah,0xff
  41bbff:	test   BYTE PTR ds:0x6a17ae9f,bh
  41bc05:	pop    eax
  41bc06:	cli    
  41bc07:	push   ebp
  41bc08:	sub    ch,BYTE PTR [ecx]
  41bc0a:	or     edx,ebx
  41bc0c:	shl    BYTE PTR [esp+esi*4+0x30],1
  41bc10:	fisub  WORD PTR [eax-0x5d]
  41bc13:	inc    ebx
  41bc14:	sbb    bh,BYTE PTR [esi+0x6e]
  41bc17:	(bad)  
  41bc18:	sub    bl,BYTE PTR [ebp-0x75]
  41bc1b:	pop    eax
  41bc1c:	cmp    DWORD PTR cs:[esi+ebp*2-0x49e818d4],ebx
  41bc24:	or     esp,DWORD PTR [edi+0x6e]
  41bc27:	inc    esp
  41bc28:	mov    dl,0x0
  41bc2a:	in     al,dx
  41bc2b:	retf   
  41bc2c:	aaa    
  41bc2d:	jp     0x41bbb1
  41bc2f:	dec    sp
  41bc31:	loop   0x41bc59
  41bc33:	or     eax,0x65674f9c
  41bc38:	pop    ds
  41bc39:	int    0xb3
  41bc3b:	test   al,0xb9
  41bc3d:	mov    ds:0x3c4e042a,al
  41bc42:	pop    es
  41bc43:	call   DWORD PTR [eax+0x41161819]
  41bc49:	ds mov ecx,0x2a3c6af9
  41bc4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc50:	test   al,0x8a
  41bc52:	mov    ebp,0xa26cd956
  41bc57:	loopne 0x41bc13
  41bc59:	mov    ds:0x9f8af189,eax
  41bc5e:	int    0x67
  41bc60:	cmc    
  41bc61:	xlat   BYTE PTR ds:[ebx]
  41bc62:	int    0x65
  41bc64:	test   DWORD PTR [eax-0x11],0xea5d5d1a
  41bc6b:	imul   ebp,ebp,0x6c
  41bc6e:	or     cl,BYTE PTR [edi]
  41bc70:	mov    al,ds:0x6ed181e1
  41bc75:	test   al,0x6f
  41bc77:	add    DWORD PTR [esi+0x61],ecx
  41bc7a:	int    0x8f
  41bc7c:	mov    ch,0x5d
  41bc7e:	fmul   QWORD PTR [edx-0x38ed8af0]
  41bc84:	xlat   BYTE PTR ds:[ebx]
  41bc85:	stos   DWORD PTR es:[edi],eax
  41bc86:	lock out 0x93,eax
  41bc89:	push   0x2f
  41bc8b:	out    dx,al
  41bc8c:	fild   WORD PTR [eax+0x130cf00f]
  41bc92:	xor    dl,BYTE PTR [ebp+0x57d35423]
  41bc98:	ret    
  41bc99:	outs   dx,DWORD PTR ds:[esi]
  41bc9a:	xor    al,al
  41bc9c:	(bad)  
  41bc9d:	mov    dl,0xaa
  41bc9f:	add    al,bh
  41bca1:	push   es
  41bca2:	(bad)  
  41bca3:	mov    edx,0xfd65b70c
  41bca8:	leave  
  41bca9:	fiadd  DWORD PTR [ebx]
  41bcab:	push   ebp
  41bcac:	sar    ebp,1
  41bcae:	fbstp  TBYTE PTR [ecx+0x7a]
  41bcb1:	pop    ss
  41bcb2:	mov    DWORD PTR [ebx],ebp
  41bcb4:	outs   dx,DWORD PTR ds:[esi]
  41bcb5:	clc    
  41bcb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb7:	sbb    al,ch
  41bcb9:	outs   dx,DWORD PTR ds:[esi]
  41bcba:	lea    esi,[eax-0x9]
  41bcbd:	das    
  41bcbe:	push   esp
  41bcbf:	dec    edi
  41bcc0:	outs   dx,DWORD PTR ds:[esi]
  41bcc1:	push   esi
  41bcc2:	pop    esp
  41bcc3:	add    DWORD PTR [ecx],edi
  41bcc5:	ja     0x41bc7e
  41bcc7:	push   ebx
  41bcc8:	mov    es,WORD PTR [ecx]
  41bcca:	sbb    DWORD PTR [esi+ebp*1-0x6c55db8],0x79
  41bcd2:	shl    BYTE PTR [ecx],1
  41bcd4:	jo     0x41bd42
  41bcd6:	shr    BYTE PTR [esi],cl
  41bcd8:	(bad)  
  41bcd9:	or     edx,ebx
  41bcdb:	enter  0x237,0xe7
  41bcdf:	jbe    0x41bd0c
  41bce1:	cmp    cl,dl
  41bce3:	dec    esi
  41bce4:	sub    ah,0xfb
  41bce7:	cmp    ch,dl
  41bce9:	xor    al,0x78
  41bceb:	or     eax,0xa670af33
  41bcf0:	jl     0x41bc9e
  41bcf2:	sbb    al,0xe5
  41bcf4:	adc    DWORD PTR [ebx-0x724210d],0xb96b37c7
  41bcfe:	(bad)  
  41bcff:	call   0x95f4:0xe3e97a34
  41bd06:	dec    eax
  41bd07:	enter  0x1dd0,0xaa
  41bd0b:	and    eax,0x674f0c97
  41bd10:	mov    ah,0x4a
  41bd12:	mov    ecx,0x34cc4ccb
  41bd17:	inc    edx
  41bd18:	ret    0x7921
  41bd1b:	xor    DWORD PTR [esi+0x520d5e55],esp
  41bd21:	aas    
  41bd22:	dec    eax
  41bd23:	shr    BYTE PTR [eax-0xa6f686d],cl
  41bd29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd2a:	mov    eax,ds:0x2254fb18
  41bd2f:	mov    edx,0x381f109f
  41bd34:	hlt    
  41bd35:	pop    edx
  41bd36:	dec    edx
  41bd37:	ror    DWORD PTR [edx-0x18],cl
  41bd3a:	sti    
  41bd3b:	inc    ebp
  41bd3c:	xlat   BYTE PTR ds:[ebx]
  41bd3d:	pop    esp
  41bd3e:	(bad)
  41bd42:	ret    0x2b93
  41bd45:	mov    eax,ds:0xd4821170
  41bd4a:	xchg   edx,eax
  41bd4b:	les    esi,FWORD PTR [edx]
  41bd4d:	jecxz  0x41bd62
  41bd4f:	push   eax
  41bd50:	aaa    
  41bd51:	jp     0x41bd52
  41bd53:	mov    bh,0x7b
  41bd55:	push   ebp
  41bd56:	inc    edx
  41bd57:	sub    al,0x5f
  41bd59:	cmp    esp,DWORD PTR [eax-0x33]
  41bd5c:	mov    edx,0xaf7d81d6
  41bd61:	xchg   ebp,eax
  41bd62:	and    al,0x67
  41bd64:	hlt    
  41bd65:	push   ebx
  41bd66:	sbb    eax,0x1da8b364
  41bd6b:	fidivr DWORD PTR [esi+0x742a3d83]
  41bd71:	addr16 mov esi,0xd36e572b
  41bd77:	push   esp
  41bd78:	js     0x41bd05
  41bd7a:	adc    ah,bh
  41bd7c:	add    ch,al
  41bd7e:	scas   eax,DWORD PTR es:[edi]
  41bd7f:	(bad)  
  41bd80:	pop    edx
  41bd81:	jne    0x41bde4
  41bd83:	and    eax,0xf66c55d9
  41bd88:	sbb    BYTE PTR [ebp-0x23],0x7a
  41bd8c:	jl     0x41bdc0
  41bd8e:	add    DWORD PTR [edi+0x79],eax
  41bd91:	outs   dx,BYTE PTR ds:[esi]
  41bd92:	xchg   esp,eax
  41bd93:	stos   BYTE PTR es:[edi],al
  41bd94:	adc    cl,bh
  41bd96:	enter  0x688f,0xe6
  41bd9a:	lea    ebx,[eax+0x67]
  41bd9d:	in     al,dx
  41bd9e:	popf   
  41bd9f:	inc    esi
  41bda0:	ja     0x41bd2b
  41bda2:	and    edi,ebx
  41bda4:	imul   esi,DWORD PTR [ebx],0x5b
  41bda7:	add    eax,0xf8842ed3
  41bdac:	inc    esp
  41bdad:	sub    bl,BYTE PTR [edx+0x40]
  41bdb0:	int3   
  41bdb1:	jg     0x41bd4f
  41bdb3:	xor    DWORD PTR [esi+0x57],edx
  41bdb6:	sub    esp,edi
  41bdb8:	sub    al,BYTE PTR [ebp-0x29]
  41bdbb:	sub    ah,BYTE PTR [ebp+0x6d]
  41bdbe:	clc    
  41bdbf:	mov    esp,0x5534cbc1
  41bdc4:	pop    es
  41bdc5:	je     0x41bd8f
  41bdc7:	daa    
  41bdc8:	lods   eax,DWORD PTR ds:[esi]
  41bdc9:	dec    esi
  41bdca:	out    0x7,eax
  41bdcc:	ja     0x41be43
  41bdce:	out    0x40,al
  41bdd0:	xchg   esp,ebx
  41bdd2:	in     al,dx
  41bdd3:	stos   BYTE PTR es:[edi],al
  41bdd4:	loop   0x41bd77
  41bdd6:	sub    BYTE PTR [ebp+0x1179f5a9],al
  41bddc:	push   cs
  41bddd:	retf   
  41bdde:	mov    ah,0xa2
  41bde0:	push   ds
  41bde1:	neg    dl
  41bde3:	loopne 0x41be47
  41bde5:	jmp    0xefd7:0x184937f8
  41bdec:	pop    esp
  41bded:	in     eax,0xb7
  41bdef:	arpl   WORD PTR [ebx],dx
  41bdf1:	test   eax,0xf60145fe
  41bdf6:	in     al,dx
  41bdf7:	sub    al,0xe2
  41bdf9:	shr    DWORD PTR [eax+ebx*4],cl
  41bdfc:	xor    BYTE PTR [esi-0x526161fd],dl
  41be02:	jnp    0x41be71
  41be04:	mov    eax,edi
  41be06:	test   BYTE PTR [ecx-0xa],0x60
  41be0a:	push   eax
  41be0b:	jns    0x41bdff
  41be0d:	or     cl,ch
  41be0f:	and    DWORD PTR [ebx],esp
  41be11:	jge    0x41bdf1
  41be13:	sbb    DWORD PTR [esp+edi*1+0x53],edi
  41be17:	sub    al,0xa4
  41be19:	add    al,0xc5
  41be1b:	lds    eax,FWORD PTR [ebx+0x23]
  41be1e:	mov    eax,0x6b56906e
  41be24:	ss ror edi,1
  41be27:	pusha  
  41be28:	dec    edi
  41be29:	test   al,0x67
  41be2b:	dec    ecx
  41be2c:	xchg   esp,eax
  41be2d:	or     esp,edi
  41be2f:	push   cs
  41be30:	add    BYTE PTR [ebp-0x280ecd6b],dh
  41be36:	in     eax,dx
  41be37:	pop    es
  41be38:	leave  
  41be39:	push   ebx
  41be3a:	xchg   esp,eax
  41be3b:	sbb    BYTE PTR [ebx],al
  41be3d:	sub    eax,0x7b682db8
  41be42:	repz sbb edi,DWORD PTR [eax+0x6455ead6]
  41be49:	xor    al,0x24
  41be4b:	sub    dl,BYTE PTR [ebp-0x11594996]
  41be51:	ret    0x7188
  41be54:	xchg   esp,eax
  41be55:	sbb    eax,0xc53eac3f
  41be5a:	test   BYTE PTR [ebx],cl
  41be5c:	dec    esi
  41be5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be5e:	das    
  41be5f:	lock loop 0x41bdf3
  41be62:	xor    DWORD PTR [ebp+0x43],esi
  41be65:	mov    edx,0x6325a9a3
  41be6a:	bound  ecx,QWORD PTR [esi+0x3e]
  41be6d:	mov    ebp,0x247d44e
  41be72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be73:	fbld   TBYTE PTR [esp+eax*2-0x58]
  41be77:	fdivrp st(4),st
  41be79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be7a:	xchg   DWORD PTR ds:0x68a66090,ecx
  41be80:	add    DWORD PTR [ecx+0x15],ecx
  41be83:	ds or  bh,dh
  41be86:	shl    DWORD PTR [ebx+0x23228376],1
  41be8c:	sub    al,0xe2
  41be8e:	aaa    
  41be8f:	dec    ecx
  41be90:	push   ss
  41be91:	lods   eax,DWORD PTR ds:[esi]
  41be92:	pop    eax
  41be93:	push   eax
  41be94:	into   
  41be95:	mov    ah,0xe
  41be97:	in     eax,0x22
  41be99:	outs   dx,BYTE PTR ds:[esi]
  41be9a:	or     al,0x75
  41be9c:	xor    al,ah
  41be9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be9f:	scas   al,BYTE PTR es:[edi]
  41bea0:	pop    ebp
  41bea1:	daa    
  41bea2:	fisttp QWORD PTR [edx]
  41bea4:	jns    0x41be93
  41bea6:	cmp    eax,0x4b72ef93
  41beab:	dec    edx
  41beac:	arpl   bx,bp
  41beae:	sbb    BYTE PTR [eax+0x1c82a39f],bh
  41beb4:	mov    al,ds:0x2354c30d
  41beb9:	mov    bl,0x4d
  41bebb:	jp     0x41be87
  41bebd:	shl    BYTE PTR [esi+0x13],0xa6
  41bec1:	cmp    BYTE PTR [edi],ch
  41bec3:	dec    ebx
  41bec4:	jmp    0x41bed5
  41bec6:	pop    esp
  41bec7:	sbb    ebx,DWORD PTR [ecx]
  41bec9:	in     al,dx
  41beca:	loop   0x41be57
  41becc:	xchg   BYTE PTR [ebp+0x175f9313],ch
  41bed2:	(bad)  
  41bed3:	pop    ecx
  41bed4:	xor    ecx,DWORD PTR [ebx]
  41bed6:	pop    eax
  41bed7:	xchg   DWORD PTR [esi-0x503acb00],eax
  41bedd:	rcl    WORD PTR [ebx],cl
  41bee0:	cmp    al,0xb3
  41bee2:	push   0x68673f82
  41bee7:	and    bh,BYTE PTR [ebp-0x55]
  41beea:	inc    edx
  41beeb:	sar    cl,cl
  41beed:	std    
  41beee:	cmp    DWORD PTR ds:0x7a107f9a,0x9aef3824
  41bef8:	imul   ebp,DWORD PTR cs:[ebp-0x63a5f22b],0x20
  41bf00:	dec    ebx
  41bf01:	ins    DWORD PTR es:[edi],dx
  41bf02:	(bad)  
  41bf03:	fnstcw WORD PTR [eax-0x33]
  41bf06:	mov    eax,ds:0xccdbb64b
  41bf0b:	fiadd  DWORD PTR [ecx+0x77]
  41bf0e:	jmp    0x41bf28
  41bf10:	int    0x67
  41bf12:	jne    0x41bed9
  41bf14:	jl     0x41bead
  41bf16:	add    al,0xb9
  41bf19:	mov    cl,0x79
  41bf1b:	daa    
  41bf1c:	push   ds
  41bf1d:	test   al,0x89
  41bf1f:	sub    bh,cl
  41bf21:	scas   eax,DWORD PTR es:[edi]
  41bf22:	(bad)  
  41bf23:	pop    ss
  41bf24:	or     dl,0xe
  41bf27:	push   0xb9ebefbe
  41bf2c:	scas   al,BYTE PTR es:[edi]
  41bf2d:	push   eax
  41bf2e:	call   0x546b6866
  41bf33:	shr    BYTE PTR ds:0x1802b50a,0xd9
  41bf3a:	mov    edx,?
  41bf3c:	cmp    BYTE PTR [edx+eax*1-0x3e279faa],0x35
  41bf44:	adc    al,dh
  41bf46:	inc    ecx
  41bf47:	lock loopne 0x41bf96
  41bf4a:	fistp  DWORD PTR [ecx]
  41bf4c:	sbb    dl,BYTE PTR [edx-0x7afe545f]
  41bf52:	neg    dl
  41bf54:	dec    ebp
  41bf55:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41bf57:	jbe    0x41bee8
  41bf59:	xor    DWORD PTR [bx+di],esi
  41bf5c:	jne    0x41bef2
  41bf5e:	loop   0x41bf3f
  41bf60:	mov    DWORD PTR [edi],esp
  41bf62:	xchg   ebp,eax
  41bf63:	repz cmp DWORD PTR [edx-0x62],0x62dd945d
  41bf6b:	aam    0xb9
  41bf6d:	stos   BYTE PTR es:[edi],al
  41bf6e:	xchg   BYTE PTR [ebx-0x3c],dl
  41bf71:	add    ebp,DWORD PTR [edi]
  41bf73:	dec    ebx
  41bf74:	and    dl,BYTE PTR [ebx]
  41bf76:	mov    esi,0xfc6d46d0
  41bf7b:	or     eax,0x77225092
  41bf80:	ds mov eax,0x911c3568
  41bf86:	fstp   TBYTE PTR [bp-0x6ba6]
  41bf8b:	(bad)  
  41bf8c:	sub    eax,0xd3247505
  41bf91:	rol    DWORD PTR [ebp-0x17],0x21
  41bf95:	adc    bh,BYTE PTR [ebx]
  41bf97:	ret    0x32f1
  41bf9a:	(bad)  [ebx-0x38f39821]
  41bfa0:	lea    eax,[ecx-0x460eed59]
  41bfa6:	fld    TBYTE PTR [esi-0x70]
  41bfa9:	call   0x6826:0x6ea5a47
  41bfb0:	fs shr esi,0x3b
  41bfb4:	and    al,0x78
  41bfb6:	scas   al,BYTE PTR es:[edi]
  41bfb7:	aam    0x1
  41bfb9:	mov    bh,0x9
  41bfbb:	in     al,dx
  41bfbc:	and    al,0xb
  41bfbe:	inc    esi
  41bfbf:	push   ecx
  41bfc0:	fs in  eax,dx
  41bfc2:	dec    esi
  41bfc3:	mov    al,0xd
  41bfc5:	jp     0x41bfe1
  41bfc7:	xor    ebx,DWORD PTR [esi-0x395b373f]
  41bfcd:	shl    DWORD PTR [esp+edx*4],0x22
  41bfd1:	call   0x838c4f6e
  41bfd6:	cmp    bl,dh
  41bfd8:	daa    
  41bfd9:	pop    ecx
  41bfda:	xchg   esi,eax
  41bfdb:	or     ebx,DWORD PTR [esp+eiz*4-0x28]
  41bfdf:	mov    dh,0x9f
  41bfe1:	cmp    al,0x90
  41bfe3:	mov    esp,0x2e0dc873
  41bfe8:	out    dx,al
  41bfe9:	pushf  
  41bfea:	adc    bh,BYTE PTR [ecx+ebx*1-0x6aff7ef5]
  41bff1:	out    0x1c,al
  41bff3:	les    edi,FWORD PTR [edx]
  41bff5:	call   0x548c2cc9
  41bffa:	imul   esp,DWORD PTR [esp+ecx*4-0x65f14b4f],0xc8e69376
  41c005:	cli    
  41c006:	mov    edx,DWORD PTR [ecx-0x6e718948]
  41c00c:	mov    edx,ds
  41c00e:	retf   0x9ad7
  41c011:	in     eax,dx
  41c012:	stos   DWORD PTR es:[edi],eax
  41c013:	mov    ecx,0xfa87155a
  41c018:	mov    ds:0xa6c1c9b0,eax
  41c01d:	outs   dx,BYTE PTR ds:[esi]
  41c01e:	enter  0xe4b9,0x53
  41c022:	dec    edi
  41c023:	dec    eax
  41c024:	dec    edi
  41c025:	nop
  41c026:	dec    ecx
  41c027:	mov    bh,0x1f
  41c029:	xor    edx,edi
  41c02b:	mov    al,ds:0xc425c838
  41c030:	lods   eax,DWORD PTR ds:[esi]
  41c031:	cmp    eax,0x85342ee6
  41c036:	mov    eax,ds:0xca79e2f0
  41c03b:	pop    ss
  41c03c:	outs   dx,DWORD PTR ds:[esi]
  41c03d:	cwde   
  41c03e:	inc    esi
  41c03f:	(bad)  
  41c040:	jne    0x41bfc7
  41c042:	ror    BYTE PTR [ebx+eiz*2],1
  41c045:	sub    ch,0xaa
  41c048:	into   
  41c049:	cld    
  41c04a:	add    DWORD PTR [edx],ecx
  41c04c:	rcl    BYTE PTR [esp+eax*4],cl
  41c04f:	iret   
  41c050:	and    eax,0x6ccc89e6
  41c055:	imul   BYTE PTR [esi-0x29]
  41c058:	mov    ds:0x1c0aa54a,al
  41c05d:	xchg   esi,eax
  41c05e:	lea    ebp,[edx-0x6f]
  41c061:	imul   ebp,DWORD PTR [eax],0xa0f8b335
  41c067:	fnstenv [esi-0x420681c4]
  41c06d:	cli    
  41c06e:	push   ebx
  41c06f:	lods   eax,DWORD PTR ds:[esi]
  41c070:	js     0x41c072
  41c072:	fstp   TBYTE PTR [eax+0x34]
  41c075:	xchg   esp,eax
  41c076:	hlt    
  41c077:	adc    ch,BYTE PTR ds:0xf2539785
  41c07d:	nop
  41c07e:	sub    dl,dh
  41c080:	mov    edx,0xfa47346c
  41c085:	js     0x41c0f8
  41c087:	popf   
  41c088:	loop   0x41c063
  41c08a:	test   eax,0x7c8334a3
  41c08f:	aaa    
  41c090:	jl     0x41c0ce
  41c092:	or     al,0x66
  41c094:	push   ss
  41c095:	stc    
  41c096:	cwde   
  41c097:	cdq    
  41c098:	xchg   DWORD PTR [ebp-0x6fe40c16],edi
  41c09e:	xor    BYTE PTR [ecx-0x1aa8e55e],bl
  41c0a4:	mov    esi,0xbe53c9e3
  41c0a9:	stc    
  41c0aa:	adc    ebp,DWORD PTR [edi+0x17]
  41c0ad:	cmp    eax,ecx
  41c0af:	adc    ebp,DWORD PTR [ecx+0x44990bc7]
  41c0b5:	xor    eax,DWORD PTR [ecx-0x50]
  41c0b8:	lds    esi,FWORD PTR [eax-0x9365b4a]
  41c0be:	adc    edx,DWORD PTR [edx+eiz*8+0x1e]
  41c0c2:	sbb    BYTE PTR [edi+0x47105324],dl
  41c0c8:	mov    bl,0xf9
  41c0ca:	or     ebx,DWORD PTR [ebp-0x6a16f5bd]
  41c0d0:	les    esi,FWORD PTR [ecx-0x62]
  41c0d3:	fistp  QWORD PTR [ebp+0x46]
  41c0d6:	sbb    ah,cl
  41c0d8:	in     eax,0xca
  41c0da:	cmp    esp,DWORD PTR [ebx+0x430f6e1f]
  41c0e0:	inc    edx
  41c0e1:	dec    esi
  41c0e2:	rol    DWORD PTR [ecx+0x4a],1
  41c0e5:	ja     0x41c157
  41c0e7:	ja     0x41c0de
  41c0e9:	cli    
  41c0ea:	icebp  
  41c0eb:	and    BYTE PTR [ebp+0x25984e49],0x60
  41c0f2:	push   0xf9d25c27
  41c0f7:	add    dl,BYTE PTR [ebx+0x76d83c46]
  41c0fd:	sar    BYTE PTR [eax+0x78adabfa],1
  41c103:	adc    eax,0x5f92ad81
  41c108:	xor    BYTE PTR [ebx],cl
  41c10a:	mov    DWORD PTR [esi],edx
  41c10c:	dec    eax
  41c10d:	repnz xor BYTE PTR [edx-0x7d9638c7],0x98
  41c115:	pop    ebp
  41c116:	adc    ebx,ebp
  41c118:	popf   
  41c119:	ret    
  41c11a:	jge    0x41c13e
  41c11c:	pop    edi
  41c11d:	mov    esi,DWORD PTR ds:0x6f4024ba
  41c123:	bound  esi,QWORD PTR [ebp-0x7a1286d6]
  41c129:	(bad)
  41c12c:	aaa    
  41c12d:	retf   0x2fc1
  41c130:	pop    eax
  41c131:	adc    BYTE PTR [eax+0x25],cl
  41c134:	add    DWORD PTR [edi+0xe848e14],esi
  41c13a:	adc    DWORD PTR [edx+eiz*1],esp
  41c13d:	repz mov es,WORD PTR [edi]
  41c140:	dec    esp
  41c141:	cmp    dl,BYTE PTR [eax+0x6e]
  41c144:	inc    esi
  41c145:	fsubr  QWORD PTR [ebp+0x661a72a2]
  41c14b:	jl     0x41c1c6
  41c14d:	mov    DWORD PTR [ecx-0xab32fe3],ebp
  41c153:	out    0xe5,al
  41c155:	mov    ebx,0xfe196fba
  41c15b:	in     eax,dx
  41c15c:	mov    esp,0x182a455c
  41c161:	mov    eax,ds:0x1683b204
  41c166:	sub    DWORD PTR [ebx],ebp
  41c168:	scas   al,BYTE PTR es:[edi]
  41c169:	ret    
  41c16a:	push   esp
  41c16b:	xchg   ebp,esp
  41c16d:	arpl   si,sp
  41c16f:	into   
  41c170:	icebp  
  41c171:	and    esp,DWORD PTR [edi]
  41c173:	add    al,bh
  41c175:	js     0x41c19a
  41c177:	mov    ah,0xe1
  41c179:	and    esp,DWORD PTR [edx-0x37f9cd26]
  41c17f:	mov    ds:0xfd5f2b7d,al
  41c184:	popf   
  41c185:	popf   
  41c186:	add    al,0xaa
  41c188:	ja     0x41c1f7
  41c18a:	jp     0x41c1de
  41c18c:	aam    0x73
  41c18e:	lods   al,BYTE PTR ds:[esi]
  41c18f:	jle    0x41c162
  41c191:	mov    BYTE PTR [ebp+esi*1-0x32],ch
  41c195:	fimul  DWORD PTR [bp+si-0x7c]
  41c199:	imul   esi,DWORD PTR [ecx],0xf82cbf3f
  41c19f:	xchg   esi,eax
  41c1a0:	adc    DWORD PTR ss:[edx+0x6243d58d],0xf9a96242
  41c1ab:	push   es
  41c1ac:	int3   
  41c1ad:	mov    al,ds:0x6685247c
  41c1b2:	es jae 0x41c1a2
  41c1b5:	mov    ebp,0x22c1bd62
  41c1ba:	out    0xf1,al
  41c1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1bd:	jecxz  0x41c172
  41c1bf:	hlt    
  41c1c0:	mov    dl,0x7d
  41c1c2:	popa   
  41c1c3:	sub    eax,0x99cbf360
  41c1c8:	pushf  
  41c1c9:	(bad)  
  41c1ca:	icebp  
  41c1cb:	sbb    eax,0xa14511c4
  41c1d0:	inc    ebp
  41c1d1:	aam    0xa7
  41c1d3:	xchg   edi,eax
  41c1d4:	fnsave [ebp+edi*4+0x6b]
  41c1d8:	inc    esi
  41c1d9:	xchg   edx,eax
  41c1da:	xor    eax,0xd438d375
  41c1df:	sbb    BYTE PTR [edx+0x4750a15b],bl
  41c1e5:	xchg   ecx,eax
  41c1e6:	(bad)  
  41c1e7:	dec    esp
  41c1e8:	int3   
  41c1e9:	sub    DWORD PTR [ecx+eiz*4-0x31449a93],edi
  41c1f0:	dec    ebx
  41c1f1:	stc    
  41c1f2:	shl    DWORD PTR [eax+0x504c2a27],0xbc
  41c1f9:	xor    DWORD PTR [ebp-0x31731ff9],0x35
  41c200:	test   al,0xb
  41c202:	adc    al,BYTE PTR ds:0xd3162af2
  41c208:	sahf   
  41c209:	or     cl,BYTE PTR ds:0x4367845d
  41c20f:	cmp    ch,BYTE PTR ds:0x51671a19
  41c215:	jo     0x41c1d1
  41c217:	out    dx,eax
  41c218:	mov    BYTE PTR [ecx],bl
  41c21a:	pushf  
  41c21b:	inc    ebp
  41c21c:	jno    0x41c21b
  41c21e:	sub    DWORD PTR [esi+ecx*8-0x70],ecx
  41c222:	xor    BYTE PTR [ebp+0x6f],al
  41c225:	jmp    0x7064:0x3cc79d12
  41c22c:	inc    ebp
  41c22d:	pop    esp
  41c22e:	xlat   BYTE PTR ds:[ebx]
  41c22f:	mov    esi,0xc7edf8fc
  41c234:	daa    
  41c235:	dec    esp
  41c236:	dec    esi
  41c237:	xchg   ebx,eax
  41c238:	repnz leave 
  41c23a:	nop
  41c23b:	sysret 
  41c23d:	test   DWORD PTR [esi+0x493f791e],esi
  41c243:	and    bh,cl
  41c245:	rcl    BYTE PTR [edi+esi*2+0x12eb3743],cl
  41c24c:	push   ebp
  41c24d:	out    dx,al
  41c24e:	xchg   esp,eax
  41c24f:	jne    0x41c2bd
  41c251:	cs rol cl,0x7d
  41c255:	xchg   edi,eax
  41c256:	stos   BYTE PTR es:[edi],al
  41c257:	xchg   ebp,eax
  41c258:	mov    ecx,0x8ae56a25
  41c25d:	pop    esp
  41c25e:	aad    0xda
  41c260:	fadd   DWORD PTR [eax+0x5]
  41c263:	or     BYTE PTR [esi],al
  41c265:	loopne 0x41c1e9
  41c267:	push   ss
  41c268:	mov    esp,0xead1d2e
  41c26d:	adc    al,0xe8
  41c26f:	mov    al,ds:0x98721179
  41c274:	(bad)
  41c277:	or     edx,DWORD PTR [ecx-0x33]
  41c27a:	imul   esi,DWORD PTR [edi-0x242a152a],0x27
  41c281:	scas   al,BYTE PTR es:[edi]
  41c282:	and    ecx,DWORD PTR ds:[edx+0x1b7e70ee]
  41c289:	adc    al,0xb3
  41c28b:	(bad)  
  41c28c:	mov    bl,0x9d
  41c28e:	mov    bh,0x7d
  41c290:	sbb    BYTE PTR [ebx+0x5d555034],ch
  41c296:	inc    ebx
  41c297:	bound  esi,QWORD PTR [esi+0x23]
  41c29a:	mov    ecx,0xb7970a93
  41c29f:	jmp    0x4875:0xea778a2f
  41c2a6:	xchg   edi,eax
  41c2a7:	ds push edi
  41c2a9:	int3   
  41c2aa:	shr    eax,cl
  41c2ac:	sar    ebx,1
  41c2ae:	jl     0x41c23d
  41c2b0:	test   eax,0x756e0aec
  41c2b5:	mov    DWORD PTR [ebx],eax
  41c2b7:	mov    ds:0x59bdf07,al
  41c2bc:	inc    edi
  41c2bd:	and    eax,0xa5938858
  41c2c2:	push   esi
  41c2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2c4:	retf   0xd56b
  41c2c7:	fist   WORD PTR [ebx-0x6e]
  41c2ca:	xchg   BYTE PTR [edx],ch
  41c2cc:	mov    edi,0x7d841df6
  41c2d1:	out    dx,eax
  41c2d2:	cli    
  41c2d3:	mov    dl,0xad
  41c2d5:	sub    eax,ebx
  41c2d7:	stc    
  41c2d8:	sbb    al,0xe0
  41c2da:	pusha  
  41c2db:	mov    eax,0x321483b3
  41c2e0:	sbb    al,bh
  41c2e2:	loope  0x41c2e6
  41c2e4:	fisttp DWORD PTR [esi]
  41c2e6:	mov    cl,BYTE PTR [ecx+0x63ff9e63]
  41c2ec:	add    BYTE PTR [edx-0x37923385],dl
  41c2f2:	xchg   BYTE PTR [ebx-0x62],dh
  41c2f5:	in     eax,dx
  41c2f6:	cmp    eax,0xc348d1b0
  41c2fb:	jmp    0x41c373
  41c2fd:	mov    ecx,0x89fe79b4
  41c302:	adc    BYTE PTR [edi-0x68fc775d],0x42
  41c309:	sti    
  41c30a:	jno    0x41c2a2
  41c30c:	lds    ebx,FWORD PTR [ebp+0x26]
  41c30f:	jne    0x41c336
  41c311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c312:	pop    edi
  41c313:	out    0xa6,eax
  41c315:	or     BYTE PTR [ecx+0x33],cl
  41c318:	ss fwait
  41c31a:	cmp    eax,DWORD PTR [edx-0x5090d802]
  41c320:	dec    ebx
  41c321:	mov    edi,0x428db3c9
  41c326:	mov    cl,0x5c
  41c328:	das    
  41c329:	or     al,0x68
  41c32b:	jle    0x41c316
  41c32d:	mov    bh,0xc1
  41c32f:	arpl   sp,ax
  41c331:	outs   dx,BYTE PTR ds:[esi]
  41c332:	inc    edi
  41c333:	jp     0x41c2cd
  41c335:	xor    cl,BYTE PTR [ebx+eax*8]
  41c338:	rol    BYTE PTR [ebx-0x63170a9],1
  41c33e:	inc    ecx
  41c33f:	retf   
  41c340:	or     dh,cl
  41c342:	js     0x41c39c
  41c344:	xchg   esp,eax
  41c345:	fisttp QWORD PTR [ebp+0x66]
  41c348:	xchg   BYTE PTR [edx-0x3a],al
  41c34b:	mov    edx,0x77b3c9aa
  41c350:	mov    BYTE PTR [esi-0x80],dh
  41c353:	mov    eax,ds:0x29cc0839
  41c358:	int    0xeb
  41c35a:	fwait
  41c35b:	shl    DWORD PTR [ebx],cl
  41c35d:	xchg   esi,eax
  41c35e:	retf   0x1c3d
  41c361:	scas   al,BYTE PTR es:[edi]
  41c362:	sbb    esp,ecx
  41c364:	and    BYTE PTR [esi-0x32598258],ch
  41c36a:	adc    eax,0x88f01c01
  41c36f:	mov    ecx,0x7b1eb184
  41c374:	mov    WORD PTR [ecx],?
  41c376:	jns    0x41c359
  41c378:	mov    BYTE PTR [edx],bl
  41c37a:	cmp    al,0x34
  41c37c:	xor    BYTE PTR [ecx-0x58272d4b],0x7e
  41c383:	addr16 sahf 
  41c385:	inc    eax
  41c386:	mov    BYTE PTR [edx],dl
  41c388:	int3   
  41c389:	jo     0x41c3cc
  41c38b:	adc    BYTE PTR [ebx],dh
  41c38d:	repnz push 0xffffffd3
  41c390:	test   eax,0x1411ca85
  41c395:	and    ebp,edx
  41c397:	shr    esi,1
  41c399:	scas   eax,DWORD PTR es:[edi]
  41c39a:	mov    al,0xff
  41c39c:	mov    gs,WORD PTR [ecx-0x6e]
  41c39f:	out    dx,eax
  41c3a0:	(bad)  
  41c3a1:	push   ss
  41c3a2:	addr16 popa 
  41c3a4:	push   edx
  41c3a5:	stos   BYTE PTR es:[edi],al
  41c3a6:	xor    cl,BYTE PTR [ecx]
  41c3a8:	add    DWORD PTR [ecx],edi
  41c3aa:	pop    ecx
  41c3ab:	ds and ebx,esi
  41c3ae:	sbb    BYTE PTR [edi+0x11],bl
  41c3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3b2:	stos   DWORD PTR es:[edi],eax
  41c3b3:	mov    BYTE PTR [esi-0x18],al
  41c3b6:	dec    edi
  41c3b7:	mov    al,ds:0x329da621
  41c3bc:	adc    DWORD PTR [edx],ebx
  41c3be:	ret    
  41c3bf:	aaa    
  41c3c0:	repz sbb DWORD PTR [edx-0x6a],0xffffffed
  41c3c5:	sti    
  41c3c6:	int3   
  41c3c7:	ror    BYTE PTR [eax+0x75c272ba],0xb9
  41c3ce:	mov    ch,0xe
  41c3d0:	xor    esi,DWORD PTR [ecx-0x73]
  41c3d3:	loope  0x41c359
  41c3d5:	loop   0x41c3dc
  41c3d7:	xchg   ecx,eax
  41c3d8:	shl    DWORD PTR [ebp+0x1f],cl
  41c3db:	cmp    eax,0x2b1191ef
  41c3e0:	scas   al,BYTE PTR es:[edi]
  41c3e1:	mov    bl,0xdc
  41c3e3:	xor    esi,esp
  41c3e5:	in     eax,0x77
  41c3e7:	jbe    0x41c400
  41c3e9:	jbe    0x41c454
  41c3eb:	xchg   esi,eax
  41c3ec:	fimul  WORD PTR [ebx-0x62]
  41c3ef:	adc    al,0xc8
  41c3f1:	jno    0x41c3aa
  41c3f3:	inc    eax
  41c3f4:	loope  0x41c432
  41c3f6:	jmp    FWORD PTR [edx+0x1accfec0]
  41c3fc:	test   al,0x8f
  41c3fe:	mov    eax,0x24e2a5d0
  41c403:	mov    ds:0xd6527b10,al
  41c408:	shr    ebp,cl
  41c40a:	leave  
  41c40b:	sahf   
  41c40c:	and    eax,0x28ecaceb
  41c411:	ror    BYTE PTR [ebx-0x223fb477],0x7f
  41c418:	fidiv  DWORD PTR [eax-0x7d]
  41c41b:	cmc    
  41c41c:	and    al,0xa
  41c41e:	cmp    bh,cl
  41c420:	cli    
  41c421:	sti    
  41c422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c423:	je     0x41c3b8
  41c425:	adc    ah,bh
  41c427:	inc    ebp
  41c428:	repz add dl,bl
  41c42b:	dec    edx
  41c42c:	adc    ch,BYTE PTR [eax-0x52e9b325]
  41c432:	jge    0x41c454
  41c434:	sub    BYTE PTR [ebx+0x48],ch
  41c437:	aad    0xb3
  41c439:	fcomp  st(5)
  41c43b:	or     eax,0xdb802b9f
  41c440:	cmp    eax,0xeedf328b
  41c445:	or     ebp,edi
  41c447:	mov    BYTE PTR [esi+eax*4],dh
  41c44a:	push   ds
  41c44b:	mov    dl,BYTE PTR [ebx]
  41c44d:	jle    0x41c3e9
  41c44f:	add    al,0x97
  41c451:	pop    esi
  41c452:	jl     0x41c3d7
  41c454:	and    BYTE PTR [edi],0xf
  41c457:	cdq    
  41c458:	hlt    
  41c459:	in     eax,dx
  41c45a:	es mov cl,0x4f
  41c45d:	inc    edi
  41c45e:	aaa    
  41c45f:	adc    DWORD PTR [ebx],esi
  41c461:	pop    eax
  41c462:	test   BYTE PTR [edi],bh
  41c464:	call   0x543a686f
  41c469:	jne    0x41c44a
  41c46b:	das    
  41c46c:	adc    al,0xe8
  41c46e:	sbb    dh,BYTE PTR [ebp-0x16]
  41c471:	daa    
  41c472:	iret   
  41c473:	push   es
  41c474:	cld    
  41c475:	xchg   DWORD PTR [ebp+edx*2+0x57],ebp
  41c479:	jae    0x41c491
  41c47b:	es (bad) 
  41c47d:	fld    DWORD PTR [edi]
  41c47f:	mov    dl,0xa6
  41c481:	loopne 0x41c471
  41c483:	fdiv   DWORD PTR [ebx+0x37baf76f]
  41c489:	cmp    BYTE PTR [ecx+0x42],dl
  41c48c:	jmp    0x41c4bd
  41c48e:	push   edx
  41c48f:	push   ss
  41c490:	jo     0x41c46a
  41c492:	std    
  41c493:	pop    esi
  41c494:	mov    DWORD PTR [esi+0x729cae2a],0x44b87044
  41c49e:	pop    es
  41c49f:	cmp    BYTE PTR [edi],0x54
  41c4a2:	cmp    ecx,DWORD PTR [ebp+edx*4+0x353632bd]
  41c4a9:	push   ds
  41c4aa:	iret   
  41c4ab:	mov    dl,0xc9
  41c4ad:	and    ebx,DWORD PTR [edx+eiz*4-0x2b99052c]
  41c4b4:	hlt    
  41c4b5:	cmp    al,0xe
  41c4b7:	pusha  
  41c4b8:	and    DWORD PTR [eax-0x7cb6aca1],0x31
  41c4bf:	pop    ecx
  41c4c0:	mov    al,ds:0xa97a1b0
  41c4c5:	or     ch,0xac
  41c4c8:	(bad)  
  41c4c9:	cmp    dl,bh
  41c4cb:	jne    0x41c4b2
  41c4cd:	add    eax,0xf5b5d644
  41c4d2:	es pop ecx
  41c4d4:	mov    dh,0x97
  41c4d6:	or     eax,0xabd86005
  41c4db:	test   al,0x2b
  41c4dd:	push   es
  41c4de:	mov    bl,0x5b
  41c4e0:	(bad)  
  41c4e1:	std    
  41c4e2:	mov    ecx,0xe3fceae6
  41c4e7:	fmul   DWORD PTR [edi-0x4e]
  41c4ea:	js     0x41c51c
  41c4ec:	in     eax,0x3a
  41c4ee:	dec    esi
  41c4ef:	mov    eax,ds:0x5a43d0c
  41c4f4:	pop    edi
  41c4f5:	and    al,0x3e
  41c4f7:	cs call 0xf00f:0xb7af3b2d
  41c4ff:	push   es
  41c500:	adc    ebp,0xfffffff0
  41c503:	into   
  41c504:	leave  
  41c505:	sub    eax,ecx
  41c507:	enter  0xbe2,0x12
  41c50b:	xor    edx,DWORD PTR [ebp+0x42]
  41c50e:	pop    es
  41c50f:	loop   0x41c560
  41c511:	pop    es
  41c512:	ficomp WORD PTR [eax]
  41c514:	mov    al,0x56
  41c516:	call   0x9a1d748a
  41c51b:	repz and eax,0x98c152f8
  41c521:	or     BYTE PTR [esi],ah
  41c523:	jae    0x41c595
  41c525:	push   es
  41c526:	sbb    DWORD PTR [esp+edi*2],esi
  41c529:	adc    dh,BYTE PTR [ebx+edx*4+0x6eb68a7b]
  41c530:	pusha  
  41c531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c532:	js     0x41c5a8
  41c534:	(bad)  [esi-0x6262e72e]
  41c53a:	nop
  41c53b:	xchg   esi,eax
  41c53c:	out    dx,eax
  41c53d:	push   edx
  41c53e:	add    al,0x2b
  41c540:	loopne 0x41c500
  41c542:	arpl   WORD PTR [edi-0xbcfe448],bp
  41c548:	clc    
  41c549:	sbb    DWORD PTR [edx-0x2a],ecx
  41c54c:	call   0xd014414f
  41c551:	mov    BYTE PTR [ecx+0xd],cl
  41c554:	retf   0x2b9a
  41c557:	enter  0xbfe1,0xc5
  41c55b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41c55d:	shl    BYTE PTR [eax],0x80
  41c560:	jnp    0x41c54c
  41c562:	setb   BYTE PTR [ecx]
  41c565:	aas    
  41c566:	cdq    
  41c567:	ins    DWORD PTR es:[edi],dx
  41c568:	push   ebp
  41c569:	xchg   DWORD PTR [ebp+0x4a5f79d9],ebp
  41c56f:	scas   al,BYTE PTR es:[edi]
  41c570:	push   0xffffffb5
  41c572:	nop
  41c573:	sti    
  41c574:	test   eax,0x79c10513
  41c579:	jb     0x41c589
  41c57b:	push   ebp
  41c57c:	icebp  
  41c57d:	xchg   esi,eax
  41c57e:	mov    DWORD PTR [eax+0x7f980eb2],esp
  41c584:	add    BYTE PTR [esi],ah
  41c586:	fs enter 0x8ef0,0xb4
  41c58b:	mov    al,ds:0x6a024d44
  41c590:	icebp  
  41c591:	lods   al,BYTE PTR ds:[esi]
  41c592:	sbb    edi,DWORD PTR [edi]
  41c594:	pop    ss
  41c595:	sbb    ebx,DWORD PTR [ecx+0x41]
  41c598:	pop    ebx
  41c599:	fild   QWORD PTR [edi]
  41c59b:	sar    DWORD PTR [edx+0x15],0x28
  41c59f:	lods   al,BYTE PTR ds:[esi]
  41c5a0:	inc    ecx
  41c5a1:	mov    ebx,0x51d9b886
  41c5a6:	jne    0x41c609
  41c5a8:	pusha  
  41c5a9:	or     al,0x3
  41c5ab:	shl    DWORD PTR [ebx],0x3c
  41c5ae:	nop
  41c5af:	push   es
  41c5b0:	ror    BYTE PTR [ecx-0x68],1
  41c5b3:	push   ds
  41c5b4:	fmul   st,st(3)
  41c5b6:	icebp  
  41c5b7:	inc    edi
  41c5b8:	test   BYTE PTR [eax-0x121912c5],ch
  41c5be:	push   ebp
  41c5bf:	call   0x59d:0xc590dbc1
  41c5c6:	add    eax,0xb6e0e3a7
  41c5cb:	arpl   WORD PTR [eax-0x17],bx
  41c5ce:	mov    al,ds:0x82779ae
  41c5d3:	pusha  
  41c5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5d5:	mov    WORD PTR [edx-0x55],cs
  41c5d8:	push   eax
  41c5d9:	cdq    
  41c5da:	into   
  41c5db:	imul   ecx,DWORD PTR [ebx+0x39fff75f],0x1f
  41c5e2:	popa   
  41c5e3:	(bad)  [ecx-0x80]
  41c5e6:	lds    edi,FWORD PTR [ecx]
  41c5e8:	popa   
  41c5e9:	mov    ecx,0x8ca53097
  41c5ee:	inc    edx
  41c5ef:	cmp    edi,DWORD PTR [ebp+0x34e02c52]
  41c5f5:	cdq    
  41c5f6:	imul   ebp,DWORD PTR [edi+0x565966ed],0x35
  41c5fd:	in     eax,0xe5
  41c5ff:	or     bh,BYTE PTR [ecx+0x71fdd3ce]
  41c605:	out    dx,al
  41c606:	dec    edx
  41c607:	xor    ch,bl
  41c609:	add    ebx,DWORD PTR [ebx-0x75067293]
  41c60f:	repnz mov eax,ds:0x67d2946f
  41c615:	imul   edi,DWORD PTR ds:0xd0131693,0x51de96ab
  41c61f:	xor    dh,BYTE PTR [ebp+0x41]
  41c622:	sub    ecx,DWORD PTR [ebx-0x3]
  41c625:	mov    esp,ebp
  41c627:	aam    0xd6
  41c629:	adc    eax,0x2ea1d0a7
  41c62e:	or     eax,0x750adc61
  41c633:	mov    ebp,0x6765e644
  41c638:	adc    edx,0xffffffa2
  41c63b:	mov    WORD PTR [eax],?
  41c63d:	sbb    ecx,DWORD PTR fs:[ebx]
  41c640:	cld    
  41c641:	call   0xf2b90f34
  41c646:	add    al,0xf4
  41c648:	inc    edx
  41c649:	xor    dh,BYTE PTR [ecx-0x7a4ab327]
  41c64f:	sahf   
  41c650:	mov    ebx,?
  41c652:	sti    
  41c653:	lods   al,BYTE PTR ds:[esi]
  41c654:	mov    al,dh
  41c656:	dec    ecx
  41c657:	inc    edi
  41c658:	cwde   
  41c659:	loope  0x41c618
  41c65b:	and    BYTE PTR [edi],cl
  41c65d:	pop    ebp
  41c65e:	push   0x4bb30a79
  41c663:	fwait
  41c664:	add    eax,0x87dffb07
  41c669:	and    ah,BYTE PTR [ebx+0x7a]
  41c66c:	(bad)  
  41c66d:	into   
  41c66e:	jg     0x41c5fb
  41c670:	jmp    0xbe4704e0
  41c675:	pop    ss
  41c676:	cwde   
  41c677:	sub    BYTE PTR [ebx],ah
  41c679:	sar    DWORD PTR [ecx+0x54],1
  41c67c:	mov    ah,0x2e
  41c67e:	mov    ebp,0xe88ea61a
  41c683:	sbb    eax,0xb0826530
  41c688:	sbb    BYTE PTR [ebp-0x5e],dh
  41c68b:	sub    DWORD PTR [ebp+edi*2-0x530741ec],ecx
  41c692:	fisub  WORD PTR [ebx-0x3]
  41c695:	or     DWORD PTR [edi+edx*1-0x6b],ecx
  41c699:	ins    BYTE PTR es:[edi],dx
  41c69a:	push   esp
  41c69b:	pop    ebx
  41c69c:	dec    ebx
  41c69d:	fdivp  st(6),st
  41c69f:	(bad)  ds:[esi]
  41c6a2:	add    DWORD PTR [ecx+0x30],esp
  41c6a5:	jmp    0x8f:0xf309f175
  41c6ac:	mov    esp,0x8cece279
  41c6b1:	mov    esi,0x91ac0149
  41c6b6:	xchg   edx,eax
  41c6b7:	sub    al,0xf0
  41c6b9:	jno    0x41c679
  41c6bb:	enter  0xb8ec,0x3
  41c6bf:	fwait
  41c6c0:	clc    
  41c6c1:	sbb    al,0x53
  41c6c3:	xchg   ecx,eax
  41c6c4:	call   0x751d3eb
  41c6c9:	es (bad) 
  41c6cb:	mov    ebp,0xf7538e8d
  41c6d0:	sbb    ebx,DWORD PTR [eax+ebp*2-0x760b2eb8]
  41c6d7:	ss mov ah,0xf6
  41c6da:	xchg   BYTE PTR [eax],al
  41c6dc:	mov    bh,0x2a
  41c6de:	mov    bl,0xfc
  41c6e0:	jbe    0x41c751
  41c6e2:	jp     0x41c683
  41c6e4:	add    DWORD PTR [eax+esi*4],ebx
  41c6e7:	(bad)  
  41c6e8:	sbb    bl,BYTE PTR [ecx-0x75a93df3]
  41c6ee:	pop    ebx
  41c6ef:	imul   esp,esi,0xffffffa4
  41c6f2:	jne    0x41c6e5
  41c6f4:	mov    edi,0x4a98be04
  41c6f9:	inc    edi
  41c6fa:	xor    eax,0x67f9984d
  41c6ff:	jmp    0x916b:0xc019959d
  41c706:	inc    edi
  41c707:	icebp  
  41c708:	pop    ss
  41c709:	xor    ebp,edx
  41c70b:	jo     0x41c6aa
  41c70d:	push   ecx
  41c70e:	in     al,0x7e
  41c710:	add    BYTE PTR [ecx-0xdb683fe],bl
  41c716:	loop   0x41c71f
  41c718:	fisttp QWORD PTR [esp+ebx*8+0x7f]
  41c71c:	push   ss
  41c71d:	fidiv  WORD PTR [esi+0x63]
  41c720:	xor    ebp,DWORD PTR [edx+0x5d]
  41c723:	(bad)  
  41c724:	mov    dh,0x3b
  41c726:	pop    ebx
  41c727:	jmp    DWORD PTR [edi+ebp*8+0x46]
  41c72b:	dec    edx
  41c72c:	cwde   
  41c72d:	fadd   DWORD PTR [ebx-0x5213605c]
  41c733:	and    BYTE PTR [esi+eiz*1],0x45
  41c737:	jp     0x41c6f7
  41c739:	lock push cs
  41c73b:	dec    esi
  41c73c:	(bad)  
  41c73e:	fcomp  QWORD PTR [ebx]
  41c740:	jle    0x41c7a5
  41c742:	out    dx,al
  41c743:	sti    
  41c744:	inc    eax
  41c745:	jmp    0x829bd1c5
  41c74a:	fwait
  41c74b:	aad    0xe
  41c74d:	dec    ecx
  41c74e:	and    eax,ebp
  41c750:	(bad)  
  41c751:	dec    edi
  41c752:	lods   eax,DWORD PTR ds:[esi]
  41c753:	dec    esi
  41c754:	into   
  41c755:	in     eax,0xf2
  41c757:	aam    0x3b
  41c759:	mov    al,0x4b
  41c75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c75c:	(bad)  
  41c75d:	ja     0x41c706
  41c75f:	push   edi
  41c760:	adc    BYTE PTR [ebx],ah
  41c762:	mov    dh,0x87
  41c764:	and    DWORD PTR [ecx],ebx
  41c766:	xor    eax,0xfb3cfe21
  41c76b:	pop    DWORD PTR [ebx]
  41c76d:	ins    DWORD PTR es:[edi],dx
  41c76e:	mov    ds:0xa9ea4953,al
  41c773:	(bad)  
  41c774:	das    
  41c775:	push   esi
  41c776:	loope  0x41c742
  41c778:	jo     0x41c7f7
  41c77a:	adc    bl,BYTE PTR ds:0x57a144aa
  41c780:	mov    cl,0xbb
  41c782:	cmp    eax,0x9d4e3e61
  41c787:	jecxz  0x41c76e
  41c789:	fdivrp st(3),st
  41c78b:	sbb    BYTE PTR [ebx-0x4b],ah
  41c78e:	jo     0x41c7b6
  41c790:	imul   esi,edi,0xffffffdd
  41c793:	bound  edi,QWORD PTR [edi]
  41c795:	lahf   
  41c796:	xlat   BYTE PTR ds:[ebx]
  41c797:	xor    al,0xa1
  41c799:	aas    
  41c79a:	iret   
  41c79b:	push   esi
  41c79c:	test   eax,0x2a78fc54
  41c7a1:	adc    eax,0x4bee2c39
  41c7a6:	jge    0x41c782
  41c7a8:	and    eax,0xcb4a446b
  41c7ad:	jle    0x41c78d
  41c7af:	pop    ds
  41c7b0:	jae    0x41c769
  41c7b2:	cmp    al,0x81
  41c7b4:	idiv   DWORD PTR [edi+edx*8-0x9]
  41c7b8:	(bad)  
  41c7ba:	push   edi
  41c7bb:	(bad)  
  41c7bc:	ds lahf 
  41c7be:	(bad)  
  41c7bf:	sbb    BYTE PTR [eax+0x2935d3a5],bh
  41c7c5:	inc    esp
  41c7c6:	cs xchg edx,eax
  41c7c8:	lea    ecx,[ebp-0x42ccdba6]
  41c7ce:	jecxz  0x41c814
  41c7d0:	adc    BYTE PTR [ecx+esi*1],dl
  41c7d3:	repnz xchg esi,eax
  41c7d5:	sti    
  41c7d6:	cmp    ebx,ebx
  41c7d8:	clc    
  41c7d9:	adc    eax,0x30c9244b
  41c7de:	dec    esi
  41c7df:	fnstenv [esi-0x374178a7]
  41c7e5:	out    dx,eax
  41c7e6:	enter  0xe3ac,0x3d
  41c7ea:	xor    BYTE PTR [ebx],dl
  41c7ec:	cwde   
  41c7ed:	mov    cl,0xa9
  41c7ef:	jae    0x41c84f
  41c7f1:	push   edi
  41c7f2:	xor    al,ah
  41c7f4:	push   ecx
  41c7f5:	jbe    0x41c86f
  41c7f7:	fimul  DWORD PTR [ecx-0x5]
  41c7fa:	xchg   edi,eax
  41c7fb:	pop    ebp
  41c7fc:	dec    eax
  41c7fd:	or     ecx,DWORD PTR [edi+0x74]
  41c800:	ss js  0x41c7f9
  41c803:	stc    
  41c804:	push   ebp
  41c805:	popa   
  41c806:	adc    DWORD PTR [edx-0x5f550ebc],ebp
  41c80c:	aaa    
  41c80d:	lock xor al,0x1b
  41c810:	jbe    0x41c7d3
  41c812:	out    0xe,al
  41c814:	cwde   
  41c815:	out    0xd1,al
  41c817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c818:	out    0x5c,eax
  41c81a:	dec    ecx
  41c81b:	jo     0x41c7f8
  41c81d:	or     al,0x95
  41c81f:	mov    eax,DWORD PTR [eax-0x33]
  41c822:	dec    esp
  41c823:	lahf   
  41c824:	jo     0x41c7da
  41c826:	rcl    BYTE PTR [eax],0x5
  41c829:	xchg   esi,eax
  41c82a:	dec    edx
  41c82b:	sub    BYTE PTR [eax-0x72cd810c],bl
  41c831:	popf   
  41c832:	mov    WORD PTR [ecx+0x21858bc9],ss
  41c838:	repz push cs
  41c83a:	imul   edx,DWORD PTR [edi],0xcb495528
  41c840:	pusha  
  41c841:	popf   
  41c842:	sbb    cl,ch
  41c844:	push   ds
  41c845:	mov    ds:0x929c4f5c,al
  41c84a:	(bad)  
  41c84b:	jnp    0x41c86d
  41c84d:	stos   DWORD PTR es:[edi],eax
  41c84e:	mov    ecx,DWORD PTR [eax+0x41ed21bf]
  41c854:	ins    BYTE PTR es:[edi],dx
  41c855:	add    esi,DWORD PTR [esi+0x37]
  41c858:	mov    eax,ds:0x12267da3
  41c85d:	mov    ecx,0x7149f8bd
  41c862:	(bad)  
  41c863:	das    
  41c864:	sbb    bh,BYTE PTR [esi]
  41c866:	xchg   BYTE PTR [ebx+0x71],ch
  41c869:	fs cli 
  41c86b:	paddusw mm6,QWORD PTR [ebp+0x49ff044f]
  41c872:	rcr    DWORD PTR [edx-0x3782610f],cl
  41c878:	mov    al,0xa6
  41c87a:	aam    0xd
  41c87c:	add    ebx,ebx
  41c87e:	jns    0x41c8ca
  41c880:	fdiv   QWORD PTR [edx+0x5]
  41c883:	jle    0x41c856
  41c885:	cmp    dl,cl
  41c887:	ins    DWORD PTR es:[edi],dx
  41c888:	and    edx,edi
  41c88a:	mov    ebp,0x1d815827
  41c88f:	pop    ecx
  41c890:	sbb    ebp,DWORD PTR [edi+0x745aa1ef]
  41c896:	fldenv [ecx]
  41c898:	(bad)  
  41c899:	mov    ds:0xf71917eb,al
  41c89e:	inc    esi
  41c89f:	rcl    DWORD PTR [ebx],0xbd
  41c8a2:	(bad)  
  41c8a3:	div    DWORD PTR [edi]
  41c8a5:	or     eax,0xd9d51c1f
  41c8aa:	mov    dl,0x9d
  41c8ac:	adc    BYTE PTR [ebx-0x4],0xa1
  41c8b0:	xor    eax,0x2e1aa262
  41c8b5:	aas    
  41c8b6:	sub    esi,edi
  41c8b8:	pushf  
  41c8b9:	scas   al,BYTE PTR es:[edi]
  41c8ba:	dec    esp
  41c8bb:	xor    eax,0xe893a82d
  41c8c0:	pop    esi
  41c8c1:	aaa    
  41c8c2:	mov    DWORD PTR [edi],ecx
  41c8c4:	je     0x41c872
  41c8c6:	enter  0xc7d4,0x2d
  41c8ca:	push   edx
  41c8cb:	test   BYTE PTR [eax],0x6f
  41c8ce:	lahf   
  41c8cf:	test   BYTE PTR [esi+0x67c583a1],al
  41c8d5:	fs (bad) 
  41c8d7:	adc    esp,DWORD PTR [edi+ecx*8]
  41c8da:	pop    edx
  41c8db:	sti    
  41c8dc:	sti    
  41c8dd:	std    
  41c8de:	cmp    dl,cl
  41c8e0:	or     eax,DWORD PTR [edx-0x75]
  41c8e3:	das    
  41c8e4:	xchg   edx,eax
  41c8e5:	inc    ebx
  41c8e6:	mov    esi,DWORD PTR [ecx+0x3d1cc7f0]
  41c8ec:	ins    DWORD PTR es:[edi],dx
  41c8ed:	jns    0x41c8dd
  41c8ef:	in     al,0xd3
  41c8f1:	dec    edx
  41c8f2:	push   0x6f734dd4
  41c8f7:	pop    ecx
  41c8f8:	mov    esi,edx
  41c8fa:	sbb    al,0xe9
  41c8fc:	push   ebx
  41c8fd:	ds stc 
  41c8ff:	dec    ebx
  41c900:	add    BYTE PTR [edx-0x15],cl
  41c903:	or     DWORD PTR [edi+ebx*2-0x4],0x7c09a226
  41c90b:	out    dx,al
  41c90c:	mov    dl,BYTE PTR [ecx-0x5cfcadac]
  41c912:	out    0x7f,al
  41c914:	aaa    
  41c915:	fwait
  41c916:	inc    edi
  41c917:	aaa    
  41c918:	jg     0x41c929
  41c91a:	stos   DWORD PTR es:[edi],eax
  41c91b:	cdq    
  41c91c:	(bad)  
  41c91d:	jbe    0x41c93d
  41c91f:	add    BYTE PTR [edi],dh
  41c921:	inc    ecx
  41c922:	es mov edi,0x2c065ba2
  41c928:	icebp  
  41c929:	or     eax,0xffc6fef9
  41c92e:	push   esi
  41c92f:	or     al,0x3f
  41c931:	aam    0x34
  41c933:	jecxz  0x41c8d8
  41c935:	mov    ebx,0xd0bfd09e
  41c93a:	inc    ecx
  41c93b:	jecxz  0x41c8bf
  41c93d:	mov    ecx,0x5d88409d
  41c942:	cmp    dh,BYTE PTR [esi-0xd]
  41c945:	imul   ecx,DWORD PTR [ebp-0x11f19067],0xc97059be
  41c94f:	rol    ebx,1
  41c951:	mov    esp,0x43298a37
  41c956:	mov    DWORD PTR [esi-0x3089cb63],ebp
  41c95c:	and    eax,DWORD PTR [esi+0x568c6fda]
  41c962:	test   al,0x1d
  41c964:	adc    bh,al
  41c966:	mov    ds:0x1d698dcd,al
  41c96b:	and    DWORD PTR [esi+0x3e],edi
  41c96e:	jmp    0x41c9ef
  41c970:	addr16 or eax,0xf02b6e4b
  41c976:	test   DWORD PTR [esi],edx
  41c978:	adc    DWORD PTR [edi+eax*4+0x62cdabbb],0xa8ec5314
  41c983:	sbb    edi,DWORD PTR [esi]
  41c985:	add    BYTE PTR [ebp+0x52],0xe3
  41c989:	sub    esp,DWORD PTR [eax-0x68]
  41c98c:	mov    dl,0xaa
  41c98e:	fdiv   DWORD PTR [ebp+0x65e52b1c]
  41c994:	js     0x41c98f
  41c996:	mov    gs,WORD PTR [esi]
  41c998:	stos   BYTE PTR es:[edi],al
  41c999:	shl    DWORD PTR [edx-0x6a],1
  41c99c:	addr16 inc esp
  41c99e:	mov    edx,0x780a4ef6
  41c9a3:	dec    esp
  41c9a4:	jl     0x41c935
  41c9a6:	jge    0x41c9dd
  41c9a8:	push   esp
  41c9a9:	or     al,0x29
  41c9ab:	sbb    eax,DWORD PTR [eax+0x2b36a889]
  41c9b1:	jle    0x41ca29
  41c9b3:	lock pushf 
  41c9b5:	or     DWORD PTR [esi],ebp
  41c9b7:	mov    ch,0xb2
  41c9b9:	(bad)  
  41c9ba:	mov    ecx,0xc674404f
  41c9bf:	dec    ebp
  41c9c0:	adc    ebp,DWORD PTR [edi+0x5]
  41c9c3:	push   eax
  41c9c4:	jmp    0x41ca0b
  41c9c6:	cmc    
  41c9c7:	das    
  41c9c8:	push   edi
  41c9c9:	imul   ebx,DWORD PTR [eax+0x2eb1e479],0x65ebcba1
  41c9d3:	xor    bl,dl
  41c9d5:	retf   
  41c9d6:	xor    eax,0x8d46db61
  41c9db:	jmp    0x104c:0xdcf451d4
  41c9e2:	xchg   edi,eax
  41c9e3:	in     eax,0x82
  41c9e5:	xor    DWORD PTR [edi],edx
  41c9e7:	xchg   ecx,eax
  41c9e8:	cli    
  41c9e9:	sub    edx,DWORD PTR [ebp-0x4a]
  41c9ec:	(bad)  
  41c9ed:	or     esp,DWORD PTR [edx+edx*1]
  41c9f0:	xor    esp,edx
  41c9f2:	mov    BYTE PTR [ebp+0x22],dh
  41c9f5:	sbb    esi,ecx
  41c9f7:	aas    
  41c9f8:	stos   DWORD PTR es:[edi],eax
  41c9f9:	xor    al,0x4c
  41c9fb:	adc    eax,0xe67c3f67
  41ca00:	cmp    edi,DWORD PTR [ebx]
  41ca02:	pop    esp
  41ca03:	daa    
  41ca04:	in     eax,0xc7
  41ca06:	mov    edx,0x6231c8fe
  41ca0b:	jmp    DWORD PTR [ebx-0xb]
  41ca0e:	ret    0x8b84
  41ca11:	mov    edi,0xaf152790
  41ca16:	and    DWORD PTR [esi],edx
  41ca18:	xchg   edi,eax
  41ca19:	push   0xfe3fecc2
  41ca1e:	out    dx,eax
  41ca1f:	popa   
  41ca20:	pop    edi
  41ca21:	out    0x71,eax
  41ca23:	adc    al,BYTE PTR [ecx]
  41ca25:	not    DWORD PTR [esi]
  41ca27:	les    eax,FWORD PTR [ebp-0x68]
  41ca2a:	(bad)  
  41ca2b:	and    eax,0x96d1f0e6
  41ca30:	nop
  41ca31:	pusha  
  41ca32:	data16 lahf 
  41ca34:	cmp    dl,BYTE PTR [edx+0x60e0d0a8]
  41ca3a:	jb     0x41caba
  41ca3c:	adc    DWORD PTR [ecx+0x6bf6723d],ecx
  41ca42:	adc    esp,esp
  41ca44:	mov    ecx,0xcb0047e1
  41ca49:	(bad)  
  41ca4a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca4c:	enter  0xf81f,0x47
  41ca50:	jo     0x41c9e9
  41ca52:	fadd   QWORD PTR [esp+ecx*1-0x6b]
  41ca56:	jno    0x41ca05
  41ca58:	xor    DWORD PTR [ebp-0xc558c3f],edx
  41ca5e:	test   al,0xed
  41ca60:	popf   
  41ca61:	(bad)  
  41ca62:	and    al,0x6e
  41ca64:	adc    al,bl
  41ca66:	jno    0x41ca87
  41ca68:	js     0x41c9f0
  41ca6a:	inc    eax
  41ca6b:	pusha  
  41ca6c:	or     DWORD PTR [edx],0xa1b164d
  41ca72:	std    
  41ca73:	fwait
  41ca74:	xchg   esp,eax
  41ca75:	(bad)  
  41ca76:	jp     0x41caf6
  41ca78:	imul   BYTE PTR [edi+0x8]
  41ca7b:	mov    cl,0x5f
  41ca7d:	inc    edi
  41ca7e:	call   0x59119025
  41ca83:	retf   0x7489
  41ca86:	pop    ss
  41ca87:	pop    ebx
  41ca88:	adc    DWORD PTR [eax+ebp*8],esi
  41ca8b:	inc    edx
  41ca8c:	jno    0x41caa1
  41ca8e:	push   ebx
  41ca8f:	fstp   st(3)
  41ca91:	sub    bh,BYTE PTR [ecx]
  41ca93:	in     eax,0xc6
  41ca95:	jge    0x41cb03
  41ca97:	xchg   BYTE PTR [edx],cl
  41ca99:	or     cl,dl
  41ca9b:	pop    ebp
  41ca9c:	fstp   TBYTE PTR [esi+0x6e]
  41ca9f:	call   0xce5ee868
  41caa4:	or     DWORD PTR [edi-0x574ce88],ebp
  41caaa:	adc    al,0x70
  41caac:	pop    ebp
  41caad:	sub    BYTE PTR [ecx+ebx*1-0x4],bh
  41cab1:	xor    BYTE PTR [edx-0x3cacb595],0x3d
  41cab8:	xor    edx,DWORD PTR [edx+ecx*1]
  41cabb:	push   edx
  41cabc:	repz mov ?,ebp
  41cabf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac0:	mov    cl,0xa3
  41cac2:	or     edx,esp
  41cac4:	int3   
  41cac5:	dec    ecx
  41cac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cac7:	mov    bh,0x8a
  41cac9:	hlt    
  41caca:	(bad)  
  41cacb:	dec    esp
  41cacc:	sub    BYTE PTR [ebx+0x16a7263f],bh
  41cad2:	(bad)  
  41cad3:	push   edx
  41cad4:	data16 sub BYTE PTR [eax+edi*2+0x64],ch
  41cad9:	cmp    edx,DWORD PTR [esi]
  41cadb:	clc    
  41cadc:	jl     0x41cb53
  41cade:	push   edx
  41cadf:	test   BYTE PTR [edi],ah
  41cae1:	jl     0x41caef
  41cae3:	(bad)  
  41cae4:	push   edx
  41cae5:	cdq    
  41cae6:	pushf  
  41cae7:	or     DWORD PTR [ebp-0x3b32f860],eax
  41caed:	mov    WORD PTR [edi-0xf3f6377],cs
  41caf3:	push   edx
  41caf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf5:	bound  edi,QWORD PTR [eax]
  41caf7:	cmp    al,0x47
  41caf9:	inc    ebx
  41cafa:	jge    0x41cb1f
  41cafc:	(bad)  
  41cafd:	stc    
  41cafe:	sbb    eax,0x577ee545
  41cb03:	cmp    DWORD PTR ds:0xe6030d1a,0x44e7cef8
  41cb0d:	sbb    ebx,DWORD PTR [ecx+0x2af0d317]
  41cb13:	ja     0x41cb2c
  41cb15:	imul   esi,ebx,0x24
  41cb18:	lods   al,BYTE PTR ds:[esi]
  41cb19:	aaa    
  41cb1a:	cdq    
  41cb1b:	xchg   edi,eax
  41cb1c:	out    dx,eax
  41cb1d:	inc    ecx
  41cb1e:	jmp    0x2e5c1d79
  41cb23:	mov    dl,0x45
  41cb25:	mov    edx,0xe0d97f7e
  41cb2a:	ss push cs
  41cb2c:	test   eax,0x2068d747
  41cb31:	mov    eax,ds:0x14a79748
  41cb36:	push   ds
  41cb37:	push   0x63fe33e8
  41cb3c:	(bad)  
  41cb3e:	(bad)  
  41cb3f:	cmp    BYTE PTR [ebx+eiz*8-0x37531796],ah
  41cb46:	dec    esp
  41cb47:	jo     0x41cbb1
  41cb49:	xchg   DWORD PTR [ebp+0x482baafa],eax
  41cb4f:	adc    al,0x6f
  41cb51:	cld    
  41cb52:	dec    ebp
  41cb53:	xor    DWORD PTR [esi+0x6],ecx
  41cb56:	cmp    DWORD PTR [eax+0x6a],ebx
  41cb59:	dec    eax
  41cb5a:	sbb    BYTE PTR [edx],0xf8
  41cb5d:	inc    ebp
  41cb5e:	adc    dl,BYTE PTR ds:0xec3b96ef
  41cb64:	sub    ecx,DWORD PTR [ecx-0x1f]
  41cb67:	mov    edx,0x9f3d07a5
  41cb6c:	push   ebp
  41cb6d:	fisub  WORD PTR [ecx+0x1e]
  41cb70:	(bad)  
  41cb71:	push   es
  41cb72:	xlat   BYTE PTR ds:[ebx]
  41cb73:	inc    edi
  41cb74:	push   ecx
  41cb75:	pop    ecx
  41cb76:	int3   
  41cb77:	ja     0x41cb50
  41cb79:	lds    ebp,FWORD PTR [eax+ebp*2-0x29]
  41cb7d:	sar    DWORD PTR [esi-0x6a378b31],1
  41cb83:	ret    
  41cb84:	in     eax,0x71
  41cb86:	ja     0x41cb2b
  41cb88:	outs   dx,DWORD PTR ds:[esi]
  41cb89:	xor    DWORD PTR [ebp-0x8],eax
  41cb8c:	xchg   BYTE PTR [ecx+0x9086b0c],ch
  41cb92:	in     eax,0x65
  41cb94:	imul   ebp,DWORD PTR [edi+0x13674700],0x2e
  41cb9b:	dec    esi
  41cb9c:	pop    es
  41cb9d:	jns    0x41cc0c
  41cb9f:	popa   
  41cba0:	stos   DWORD PTR es:[edi],eax
  41cba1:	add    BYTE PTR [ecx+ecx*2+0x40aba3c1],ah
  41cba8:	add    DWORD PTR [ebx-0x40cd1667],edx
  41cbae:	mov    bh,0x6
  41cbb0:	in     al,0x87
  41cbb2:	mov    al,0xc5
  41cbb4:	xor    bh,BYTE PTR [eax+0x29]
  41cbb7:	xchg   DWORD PTR [eax+0x489b8814],ebp
  41cbbd:	loop   0x41cbcb
  41cbbf:	inc    ecx
  41cbc0:	popf   
  41cbc1:	xor    ch,BYTE PTR [edi]
  41cbc3:	mov    DWORD PTR [esi-0x1a],0x66f313e1
  41cbca:	and    eax,0xdc44036d
  41cbcf:	pop    esi
  41cbd0:	iret   
  41cbd1:	dec    edx
  41cbd2:	push   ebp
  41cbd3:	cmc    
  41cbd4:	into   
  41cbd5:	sbb    eax,0x201e29e1
  41cbda:	jle    0x41cc21
  41cbdc:	inc    ecx
  41cbdd:	xchg   edi,eax
  41cbde:	jb     0x41cc00
  41cbe0:	pop    edx
  41cbe1:	jmp    0x3fd4:0x84f3b00d
  41cbe8:	add    ch,BYTE PTR [esp+ebx*2+0x39]
  41cbec:	xor    al,0x9e
  41cbee:	add    ecx,DWORD PTR cs:[ebx]
  41cbf1:	cmp    al,cl
  41cbf3:	lahf   
  41cbf4:	pop    ebx
  41cbf5:	mov    edx,0x43e0f30
  41cbfa:	arpl   WORD PTR [ecx],bp
  41cbfc:	test   DWORD PTR [ecx-0x48f214d7],esp
  41cc02:	das    
  41cc03:	add    BYTE PTR [edx-0x58c43c74],bh
  41cc09:	cwde   
  41cc0a:	dec    ebp
  41cc0b:	xlat   BYTE PTR ds:[ebx]
  41cc0c:	jne    0x41cbfa
  41cc0e:	add    esi,DWORD PTR [ebx+0x7fca7f1d]
  41cc14:	loop   0x41cc72
  41cc16:	adc    esp,eax
  41cc18:	test   DWORD PTR ss:[esi+0x6e0a8c22],ecx
  41cc1f:	aad    0x6c
  41cc21:	adc    DWORD PTR [ecx+0x3d],esi
  41cc24:	cmp    eax,0x609148e5
  41cc29:	ja     0x41cbab
  41cc2b:	imul   esp,DWORD PTR [esi],0xffffffc7
  41cc2e:	push   ds
  41cc2f:	mov    ds:0x240eba54,al
  41cc34:	fidiv  WORD PTR [bp+di]
  41cc37:	jg     0x41cc01
  41cc39:	addr16 in eax,0x57
  41cc3c:	push   ss
  41cc3d:	xor    DWORD PTR [ecx+eax*1-0xf],esi
  41cc41:	test   BYTE PTR [ebx+0x2f],al
  41cc44:	xor    bl,BYTE PTR [ebx-0x9596964]
  41cc4a:	dec    esi
  41cc4b:	ffreep st(2)
  41cc4d:	mov    bl,dh
  41cc4f:	jae    0x41cc49
  41cc51:	fmul   st(1),st
  41cc53:	cmc    
  41cc54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc55:	or     eax,0xc42691ee
  41cc5a:	mov    ecx,0x3aee4543
  41cc5f:	fbstp  TBYTE PTR [ecx+ebp*8]
  41cc62:	(bad)  
  41cc64:	mov    bh,0x9e
  41cc66:	std    
  41cc67:	push   edx
  41cc68:	seta   BYTE PTR [ebp+0x7cacf9b9]
  41cc6f:	in     eax,dx
  41cc70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc71:	outs   dx,BYTE PTR ds:[esi]
  41cc72:	xor    al,0xcd
  41cc74:	cld    
  41cc75:	mov    edx,0x47a893c
  41cc7a:	ficomp WORD PTR [edx]
  41cc7c:	pop    edx
  41cc7d:	pop    esi
  41cc7e:	mov    ah,0x83
  41cc80:	addr16 repnz (bad) 
  41cc83:	stc    
  41cc84:	outs   dx,DWORD PTR ds:[esi]
  41cc85:	xor    ebx,DWORD PTR [ecx+0x35766fe9]
  41cc8b:	xchg   ecx,eax
  41cc8c:	idiv   ah
  41cc8e:	dec    edx
  41cc8f:	xor    bh,bh
  41cc91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc92:	sbb    esi,DWORD PTR [esi]
  41cc94:	lods   al,BYTE PTR ds:[esi]
  41cc95:	add    edx,esp
  41cc97:	leave  
  41cc98:	jns    0x41ccce
  41cc9a:	test   eax,0x99a9168b
  41cc9f:	shl    BYTE PTR [edx-0x3d],1
  41cca2:	mov    ecx,0x782ec024
  41cca7:	clc    
  41cca8:	mov    edi,DWORD PTR [eax+0x76c0c942]
  41ccae:	ret    
  41ccaf:	pop    ebx
  41ccb0:	mov    ebp,0xc7119c87
  41ccb5:	sbb    eax,0x8485c5d
  41ccba:	jo     0x41ccdc
  41ccbc:	call   0x1d5533d3
  41ccc1:	jp     0x41cd1f
  41ccc3:	xlat   BYTE PTR ds:[ebx]
  41ccc4:	jne    0x41cce2
  41ccc6:	lahf   
  41ccc7:	pop    ecx
  41ccc8:	pusha  
  41ccc9:	xchg   esi,eax
  41ccca:	pop    edx
  41cccb:	mov    bl,0xc5
  41cccd:	dec    edx
  41ccce:	sahf   
  41cccf:	mov    cl,0x4f
  41ccd1:	aas    
  41ccd2:	fwait
  41ccd3:	repnz mov bh,0x8d
  41ccd6:	adc    al,0xda
  41ccd8:	ret    0x4c33
  41ccdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccdc:	mov    edi,0x2fd348a0
  41cce1:	nop
  41cce2:	pop    ds
  41cce3:	xor    eax,0x1ec737fa
  41cce8:	push   ebx
  41cce9:	int3   
  41ccea:	aam    0xd0
  41ccec:	dec    ebp
  41cced:	shr    BYTE PTR [eax],1
  41ccef:	cdq    
  41ccf0:	fldcw  WORD PTR [esi+esi*2]
  41ccf3:	(bad)  
  41ccf5:	xor    eax,0x4425f580
  41ccfa:	sbb    cl,ah
  41ccfc:	pop    esp
  41ccfd:	test   DWORD PTR [edi+0x3a],ecx
  41cd00:	leave  
  41cd01:	cld    
  41cd02:	fisub  DWORD PTR [esi-0x46]
  41cd05:	cli    
  41cd06:	icebp  
  41cd07:	dec    edx
  41cd08:	and    eax,0x6a68a2a0
  41cd0d:	neg    DWORD PTR [edi-0x75]
  41cd10:	sub    al,0x7d
  41cd12:	mov    dh,0xfe
  41cd14:	cs add eax,0x69deb8eb
  41cd1a:	dec    ecx
  41cd1b:	pop    ebx
  41cd1c:	cmp    al,0xbf
  41cd1e:	lods   al,BYTE PTR ds:[esi]
  41cd1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd20:	push   esp
  41cd21:	or     eax,0x62dcdda7
  41cd26:	xchg   bh,al
  41cd28:	inc    esp
  41cd29:	ret    
  41cd2a:	push   ds
  41cd2b:	adc    eax,0x33bf66df
  41cd30:	xor    dh,ch
  41cd32:	cmp    DWORD PTR [edx+0x5e4da70b],edi
  41cd38:	cmp    eax,0xb5dc7fff
  41cd3d:	add    eax,edx
  41cd3f:	repz cdq 
  41cd41:	sahf   
  41cd42:	popf   
  41cd43:	jae    0x41cccc
  41cd45:	and    ah,bh
  41cd47:	and    BYTE PTR ds:0x64dd122,0x76
  41cd4e:	or     bh,BYTE PTR [eax-0x21c019d9]
  41cd54:	mov    cl,0xe
  41cd56:	test   ebx,ebx
  41cd58:	pushf  
  41cd59:	adc    BYTE PTR [edi-0x4e],dh
  41cd5c:	cmp    eax,0x8f0f6dfe
  41cd61:	mov    cl,BYTE PTR [ecx+0x38]
  41cd64:	push   edi
  41cd65:	push   esp
  41cd66:	inc    edi
  41cd67:	fcomp  DWORD PTR [ebp-0x6fd3380]
  41cd6d:	xchg   ebp,eax
  41cd6e:	mov    ds,WORD PTR [ecx+0xb03d5ea]
  41cd74:	ja     0x41cd0b
  41cd76:	aas    
  41cd77:	scas   al,BYTE PTR es:[edi]
  41cd78:	push   ebx
  41cd79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd7a:	dec    ebx
  41cd7b:	jg     0x41cdc6
  41cd7d:	jne    0x41cd0f
  41cd7f:	aad    0xba
  41cd81:	in     eax,dx
  41cd82:	(bad)  
  41cd83:	sbb    eax,0xb918c952
  41cd88:	pop    ebx
  41cd89:	mov    edi,0x19946751
  41cd8e:	lea    esi,[edx+0x7c]
  41cd91:	mov    ebp,0x545f3998
  41cd96:	inc    BYTE PTR [edi+0x4da37b43]
  41cd9c:	imul   esi,edi,0xffffffe8
  41cd9f:	popf   
  41cda0:	xchg   ebp,eax
  41cda1:	push   es
  41cda2:	cs mov eax,0xf0de9f57
  41cda8:	fild   DWORD PTR [ecx]
  41cdaa:	xchg   ecx,eax
  41cdab:	loopne 0x41cd3d
  41cdad:	fdivr  st,st(6)
  41cdaf:	jo     0x41cdb1
  41cdb1:	jbe    0x41cdb2
  41cdb3:	or     bh,0x3a
  41cdb6:	cld    
  41cdb7:	cdq    
  41cdb8:	and    BYTE PTR [eax+0x4d8b0ec0],al
  41cdbe:	pop    eax
  41cdbf:	pop    es
  41cdc0:	outs   dx,DWORD PTR ds:[esi]
  41cdc1:	dec    esp
  41cdc2:	sbb    DWORD PTR [ebp+0x5a32f5ee],0x394af8fd
  41cdcc:	mov    bl,0x9e
  41cdce:	jge    0x41ce33
  41cdd0:	fmulp  st(6),st
  41cdd2:	xor    eax,0x203b7ce2
  41cdd7:	stc    
  41cdd8:	outs   dx,DWORD PTR ds:[esi]
  41cdd9:	popa   
  41cdda:	pushf  
  41cddb:	sar    DWORD PTR [esi-0x72],cl
  41cdde:	xchg   ebp,eax
  41cddf:	bound  edx,QWORD PTR [edi]
  41cde1:	xor    DWORD PTR [edi+esi*8+0x644859a8],esi
  41cde8:	or     cl,BYTE PTR [edx+eax*2-0x30a4178]
  41cdef:	add    bh,BYTE PTR [edx+0x16]
  41cdf2:	jg     0x41cdcb
  41cdf4:	pusha  
  41cdf5:	fist   WORD PTR [eax+0x4c]
  41cdf8:	ss in  eax,dx
  41cdfa:	pop    ss
  41cdfb:	(bad)  
  41cdfc:	cmp    al,0x5d
  41cdfe:	loopne 0x41ce1c
  41ce00:	scas   al,BYTE PTR es:[edi]
  41ce01:	mov    bh,0x2e
  41ce03:	fidivr DWORD PTR [ebp+0x592cc2fe]
  41ce09:	iret   
  41ce0a:	xchg   ecx,eax
  41ce0b:	sbb    ch,BYTE PTR [edi-0x7bbd4906]
  41ce11:	or     DWORD PTR [edi-0x3cb8c7a5],0xaf1ca348
  41ce1b:	add    BYTE PTR [ecx],0x37
  41ce1e:	or     al,0x4e
  41ce20:	ss push edx
  41ce22:	enter  0x76c2,0x50
  41ce26:	ins    DWORD PTR es:[edi],dx
  41ce27:	dec    edi
  41ce28:	mov    bl,0x63
  41ce2a:	xor    al,0x28
  41ce2c:	jmp    DWORD PTR [eax+0x75271df7]
  41ce32:	scas   eax,DWORD PTR es:[edi]
  41ce33:	sub    BYTE PTR ds:0xf4b499ab,ah
  41ce39:	test   al,0x5d
  41ce3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3c:	jb     0x41cdd9
  41ce3e:	mov    dl,0xf9
  41ce40:	scas   eax,DWORD PTR es:[edi]
  41ce41:	xchg   ebx,eax
  41ce42:	xchg   ebp,eax
  41ce43:	sub    cl,BYTE PTR [edx-0x67]
  41ce46:	retf   
  41ce47:	retf   0x60ae
  41ce4a:	icebp  
  41ce4b:	dec    ebx
  41ce4c:	pop    DWORD PTR [edi+0x37]
  41ce4f:	add    ch,BYTE PTR [ebx+0x1f7aa24c]
  41ce55:	or     ebp,DWORD PTR [eax-0x6ec38660]
  41ce5b:	jmp    0xb346:0xbf86aa98
  41ce62:	jne    0x41cdeb
  41ce64:	in     eax,0x6c
  41ce66:	pop    es
  41ce67:	adc    eax,0xd72c5b2c
  41ce6c:	test   DWORD PTR [esi],esp
  41ce6e:	das    
  41ce6f:	leave  
  41ce70:	inc    esp
  41ce71:	in     eax,0xe6
  41ce73:	pusha  
  41ce74:	push   ecx
  41ce75:	jbe    0x41ce8a
  41ce77:	sti    
  41ce78:	ins    DWORD PTR es:[edi],dx
  41ce79:	pop    ss
  41ce7a:	cld    
  41ce7b:	jmp    0x901c9e67
  41ce80:	popa   
  41ce81:	pop    ebp
  41ce82:	test   eax,0xab09a725
  41ce87:	hlt    
  41ce88:	xchg   edi,edi
  41ce8a:	and    al,0x24
  41ce8c:	(bad)  
  41ce8d:	aas    
  41ce8e:	push   ebx
  41ce8f:	inc    esp
  41ce90:	add    al,0x13
  41ce92:	cli    
  41ce93:	add    ebp,DWORD PTR [edx]
  41ce95:	mov    al,0x1c
  41ce97:	out    0x39,eax
  41ce99:	pop    eax
  41ce9a:	mov    ecx,0x95f5ca8a
  41ce9f:	mov    esi,0x5e7555b3
  41cea4:	pusha  
  41cea5:	cmp    eax,0x200f62d8
  41ceaa:	sub    DWORD PTR [ebp+0x21ac7931],0xbea533b2
  41ceb4:	dec    esi
  41ceb5:	xor    ebp,esp
  41ceb7:	pop    ebp
  41ceb8:	dec    esp
  41ceb9:	and    eax,0xe364b1f9
  41cebe:	mov    eax,0x186c5687
  41cec3:	lea    esi,[ebp-0x6a]
  41cec6:	imul   BYTE PTR ds:0xce932963
  41cecc:	mov    eax,ds:0xfd155d74
  41ced1:	ror    DWORD PTR ds:0xd4c76539,1
  41ced7:	mov    ebx,0x43a61441
  41cedc:	jno    0x41ce62
  41cede:	dec    eax
  41cedf:	loop   0x41cf42
  41cee1:	ins    BYTE PTR es:[edi],dx
  41cee2:	scas   al,BYTE PTR es:[edi]
  41cee3:	xor    al,dl
  41cee5:	cdq    
  41cee6:	pop    ebp
  41cee7:	mov    esi,0x59cac92f
  41ceec:	ins    BYTE PTR es:[edi],dx
  41ceed:	cld    
  41ceee:	icebp  
  41ceef:	dec    esp
  41cef0:	leave  
  41cef1:	rcr    DWORD PTR [eax],1
  41cef3:	shr    DWORD PTR [edi+eiz*8],cl
  41cef6:	adc    BYTE PTR gs:[edi+0x8],dl
  41cefa:	xor    ecx,esi
  41cefc:	add    DWORD PTR [edi-0x24],edi
  41ceff:	mov    bl,0x66
  41cf01:	push   esp
  41cf02:	sar    cl,0xe7
  41cf05:	add    dl,BYTE PTR [ecx]
  41cf07:	cld    
  41cf08:	and    al,0x9
  41cf0a:	or     al,0x9c
  41cf0c:	or     DWORD PTR ds:0xe4e45adf,esi
  41cf12:	sub    BYTE PTR [ebp-0x47969f76],ah
  41cf18:	jp     0x41cf07
  41cf1a:	dec    eax
  41cf1b:	xchg   edx,eax
  41cf1c:	cmp    eax,0x95764a60
  41cf21:	mov    cl,0x40
  41cf23:	retf   0x1c4a
  41cf26:	loope  0x41ced4
  41cf28:	mov    ds:0x54fab07f,al
  41cf2d:	and    bl,dh
  41cf2f:	add    DWORD PTR [edi+0x79],ecx
  41cf32:	jmp    FWORD PTR [esi+ecx*4+0x43]
  41cf36:	push   esp
  41cf37:	ret    0xab0b
  41cf3a:	gs mov ah,0x8b
  41cf3d:	mov    ?,WORD PTR [eax+0x6abe3c83]
  41cf43:	fmul   DWORD PTR [edi]
  41cf45:	clc    
  41cf46:	add    esi,edi
  41cf48:	inc    ebp
  41cf49:	dec    ebx
  41cf4a:	clc    
  41cf4b:	test   DWORD PTR [eax],eax
  41cf4d:	xchg   ecx,eax
  41cf4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf4f:	std    
  41cf50:	outs   dx,DWORD PTR ds:[esi]
  41cf51:	sbb    ch,dh
  41cf53:	jno    0x41cfc7
  41cf55:	scas   eax,DWORD PTR es:[edi]
  41cf56:	test   edx,eax
  41cf58:	(bad)  
  41cf59:	mov    esp,0xce8555f0
  41cf5e:	dec    ecx
  41cf5f:	ret    
  41cf60:	push   ebp
  41cf61:	fwait
  41cf62:	test   bl,dh
  41cf64:	ret    0xa1a6
  41cf67:	dec    ebx
  41cf68:	mov    BYTE PTR [ecx+edi*1-0x4e],al
  41cf6c:	and    ecx,esi
  41cf6e:	int    0x4f
  41cf70:	ins    BYTE PTR es:[edi],dx
  41cf71:	nop
  41cf72:	cmc    
  41cf73:	add    eax,0xa08ac7ee
  41cf78:	ins    DWORD PTR es:[edi],dx
  41cf79:	repz pusha 
  41cf7b:	adc    al,0x0
  41cf7d:	mov    bh,0x98
  41cf7f:	ret    0xcad9
  41cf82:	or     eax,0xcad0a000
  41cf87:	push   ecx
  41cf88:	adc    eax,0x931dc8e0
  41cf8d:	lods   al,BYTE PTR ds:[esi]
  41cf8e:	sbb    BYTE PTR [eax],0xdf
  41cf91:	jmp    DWORD PTR [ebp+ebp*1-0x69ceaa62]
  41cf98:	mov    es,WORD PTR [ebx-0x4c]
  41cf9b:	jns    0x41cf36
  41cf9d:	scas   al,BYTE PTR es:[edi]
  41cf9e:	(bad)  
  41cf9f:	gs out dx,al
  41cfa1:	inc    eax
  41cfa2:	and    ebp,edi
  41cfa4:	xor    al,0xeb
  41cfa6:	push   es
  41cfa7:	cmp    eax,0x6c08032b
  41cfac:	inc    edi
  41cfad:	mov    ds:0xb90160cf,al
  41cfb2:	les    ebx,FWORD PTR ds:0x782f7199
  41cfb8:	out    0xaf,al
  41cfba:	or     edx,eax
  41cfbc:	add    dl,BYTE PTR [esi-0x759df72c]
  41cfc2:	mov    ds:0x1dcc15c0,eax
  41cfc7:	or     al,0xc1
  41cfc9:	dec    ebx
  41cfca:	cmp    BYTE PTR ss:[eax+0x7c3b6f29],al
  41cfd1:	mov    esi,0xb19a1523
  41cfd6:	and    ecx,DWORD PTR [edx-0x21]
  41cfd9:	dec    edx
  41cfda:	lahf   
  41cfdb:	push   cs
  41cfdc:	outs   dx,BYTE PTR ds:[esi]
  41cfdd:	xchg   DWORD PTR [esi-0x2d],ebp
  41cfe0:	outs   dx,BYTE PTR ds:[esi]
  41cfe1:	push   0xffcd8a76
  41cfe6:	jge    0x41cfef
  41cfe8:	gs out 0x66,eax
  41cfeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfec:	add    DWORD PTR [edi+0x720ceca2],eax
  41cff2:	xchg   edx,eax
  41cff3:	xchg   DWORD PTR [ebx-0x647278b8],esp
  41cff9:	popa   
  41cffa:	push   esi
  41cffb:	or     eax,0x9c31eb9c
  41d000:	pop    edx
  41d001:	pop    esi
  41d002:	push   edx
  41d003:	sbb    DWORD PTR [eax+0x6d481433],esp
  41d009:	mov    ch,0x44
  41d00b:	test   eax,0xa79c93c8
  41d010:	pop    esi
  41d011:	jg     0x41d017
  41d013:	jl     0x41cff7
  41d015:	cwde   
  41d016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d017:	fst    DWORD PTR [ebx+0x5180f8c4]
  41d01d:	cmp    al,0x59
  41d01f:	xor    eax,0xf2565893
  41d024:	ins    BYTE PTR es:[edi],dx
  41d025:	add    al,BYTE PTR [eax+0x54d2aa9b]
  41d02b:	neg    BYTE PTR [eax]
  41d02d:	mov    al,ds:0xa06e5971
  41d032:	outs   dx,BYTE PTR ds:[esi]
  41d033:	inc    edx
  41d034:	xor    edi,DWORD PTR [ebx]
  41d036:	js     0x41d00d
  41d038:	and    bl,bh
  41d03a:	jae    0x41cff6
  41d03c:	mov    ch,0x1
  41d03e:	push   es
  41d03f:	mov    ds:0x9d173ee7,al
  41d044:	bound  ecx,QWORD PTR [ecx]
  41d046:	out    dx,al
  41d047:	or     BYTE PTR [edx],al
  41d049:	inc    esi
  41d04a:	push   edx
  41d04b:	adc    ecx,DWORD PTR [edi-0x1b90242a]
  41d051:	(bad)  
  41d052:	jl     0x41d04e
  41d054:	out    dx,eax
  41d055:	pop    esp
  41d056:	ficom  WORD PTR [ebx]
  41d058:	and    eax,0xf1016831
  41d05d:	(bad)  
  41d05e:	fsubr  DWORD PTR [eax+0x9]
  41d061:	push   edx
  41d062:	lock sbb al,0x28
  41d065:	mov    BYTE PTR [edx],0x6f
  41d068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d069:	fs cs mov ecx,0x7ba4b9c3
  41d070:	sub    dh,BYTE PTR [edi-0x34]
  41d073:	(bad)  
  41d074:	fdiv   DWORD PTR [eax+0x18]
  41d077:	or     edx,0x37
  41d07a:	jmp    DWORD PTR [edx+0x5b]
  41d07d:	stos   BYTE PTR es:[edi],al
  41d07e:	iret   
  41d07f:	std    
  41d080:	mov    esi,ebx
  41d082:	out    dx,eax
  41d083:	sbb    esp,DWORD PTR [edi+0x6cfb9855]
  41d089:	mov    ds:0x79a70834,eax
  41d08e:	fisttp DWORD PTR [edi-0x6dba1041]
  41d094:	fiadd  DWORD PTR [edi+0xd816314]
  41d09a:	ret    0x97fa
  41d09d:	sbb    DWORD PTR [edi-0x26],0x7198cf7e
  41d0a4:	mov    ebp,0x50ba68ad
  41d0a9:	repz jbe 0x41d0cc
  41d0ac:	xchg   edx,eax
  41d0ad:	mov    dh,0x72
  41d0af:	(bad)  
  41d0b0:	out    0x88,eax
  41d0b2:	dec    eax
  41d0b3:	jo     0x41d0a5
  41d0b5:	push   esi
  41d0b6:	ja     0x41d086
  41d0b8:	adc    DWORD PTR [esi+0x684c7aaa],edx
  41d0be:	adc    edi,ebp
  41d0c0:	mov    ds:0xf4586c76,al
  41d0c5:	nop
  41d0c6:	xlat   BYTE PTR ds:[ebx]
  41d0c7:	rcl    BYTE PTR [ebx+0xe85782f],1
  41d0cd:	pop    ebp
  41d0ce:	ret    
  41d0cf:	rol    BYTE PTR [edi+0x54],1
  41d0d2:	mov    eax,ds:0x12ec08b3
  41d0d7:	shr    dl,cl
  41d0d9:	xchg   ebx,eax
  41d0da:	xchg   BYTE PTR [edi-0x68],bl
  41d0dd:	sar    BYTE PTR [ecx+0x4d],1
  41d0e0:	nop
  41d0e1:	or     DWORD PTR [eax],ebp
  41d0e3:	xchg   ebp,eax
  41d0e4:	xor    al,0x3f
  41d0e6:	push   esi
  41d0e7:	or     BYTE PTR [eax],bh
  41d0e9:	jle    0x41d0ac
  41d0eb:	out    0x7d,eax
  41d0ed:	pop    cx
  41d0ef:	and    eax,0x6cf76563
  41d0f4:	(bad)
  41d0f8:	dec    ebx
  41d0f9:	sti    
  41d0fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0fb:	and    DWORD PTR [edx+0x6b],edx
  41d0fe:	add    dh,BYTE PTR [edx+0x7]
  41d101:	add    DWORD PTR [esi+0x21],ebx
  41d104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d105:	xchg   ebp,eax
  41d106:	push   ds
  41d107:	pop    ds
  41d108:	(bad)  
  41d109:	push   cs
  41d10a:	push   cs
  41d10b:	pop    ss
  41d10c:	nop
  41d10d:	mov    ch,0x83
  41d10f:	fs sbb BYTE PTR gs:[ebp+0x12],dl
  41d114:	dec    ecx
  41d115:	mov    cl,0xc
  41d117:	mov    eax,ds:0x71be441b
  41d11c:	mov    edi,0xdfb3be3
  41d121:	add    ebp,edi
  41d123:	jbe    0x41d189
  41d125:	je     0x41d0f2
  41d127:	xor    al,0x88
  41d129:	inc    ecx
  41d12a:	xchg   edx,eax
  41d12b:	sbb    ecx,DWORD PTR [eax+0x66]
  41d12e:	popa   
  41d12f:	in     eax,dx
  41d130:	and    al,0xb6
  41d132:	push   eax
  41d133:	arpl   WORD PTR [edx+0x3347ad8f],bx
  41d139:	mov    eax,esp
  41d13b:	scas   eax,DWORD PTR es:[edi]
  41d13c:	xchg   bl,bl
  41d13e:	xchg   ebx,eax
  41d13f:	jae    0x41d1ac
  41d141:	and    edi,ebp
  41d143:	outs   dx,BYTE PTR ds:[esi]
  41d144:	je     0x41d13d
  41d146:	jp     0x41d0dc
  41d148:	test   BYTE PTR [edi],bh
  41d14a:	sbb    eax,0xe4aabcbe
  41d14f:	ret    0xb871
  41d152:	out    0x15,al
  41d154:	ret    0xa3f3
  41d157:	jo     0x41d0fb
  41d159:	icebp  
  41d15a:	xchg   edi,eax
  41d15b:	mov    edi,0x3177e0bd
  41d160:	mov    cl,0x49
  41d162:	add    edi,DWORD PTR ds:0xe2ab15f5
  41d168:	inc    ebx
  41d169:	lods   al,BYTE PTR ds:[esi]
  41d16a:	repz pushf 
  41d16c:	sbb    ecx,ebx
  41d16e:	test   eax,0xc6b689c
  41d173:	(bad)  
  41d174:	iret   
  41d175:	lods   al,BYTE PTR ds:[esi]
  41d176:	mov    ebp,DWORD PTR [ebp+0x20]
  41d179:	retf   
  41d17a:	popf   
  41d17b:	inc    BYTE PTR [edi]
  41d17d:	push   ss
  41d17e:	mov    edi,0x6eed3786
  41d183:	fcomip st,st(0)
  41d185:	push   ds
  41d186:	adc    dl,BYTE PTR [ebp+0x63b4cfa9]
  41d18c:	loope  0x41d152
  41d18e:	mov    eax,0xee76ffeb
  41d193:	xor    esi,DWORD PTR [eax-0x7ff8701f]
  41d199:	popf   
  41d19a:	xor    ah,BYTE PTR [edi+0x445e4cd8]
  41d1a0:	xchg   esi,eax
  41d1a1:	jnp    0x41d1ba
  41d1a3:	and    eax,0xd4bd5756
  41d1a8:	pop    ebx
  41d1a9:	push   ds
  41d1aa:	leave  
  41d1ab:	pop    ebx
  41d1ac:	sbb    ebp,DWORD PTR [eax]
  41d1ae:	jl     0x41d200
  41d1b0:	dec    ebp
  41d1b1:	mov    esi,0x450b3f1b
  41d1b6:	adc    BYTE PTR [edx+0x7104ed1e],0x75
  41d1bd:	pop    edx
  41d1be:	test   esp,eax
  41d1c0:	pushf  
  41d1c1:	sti    
  41d1c2:	sar    DWORD PTR [ecx],cl
  41d1c4:	enter  0x7e88,0x9b
  41d1c8:	adc    esi,DWORD PTR [esi]
  41d1ca:	lahf   
  41d1cb:	dec    esi
  41d1cc:	inc    edx
  41d1cd:	jecxz  0x41d216
  41d1cf:	sub    eax,0x9c5261cf
  41d1d4:	ins    BYTE PTR es:[edi],dx
  41d1d5:	xor    dl,dl
  41d1d7:	adc    BYTE PTR [ebp+0x6e],cl
  41d1da:	dec    eax
  41d1db:	fsub   st(5),st
  41d1dd:	dec    ebx
  41d1de:	xchg   ecx,esi
  41d1e0:	pop    esp
  41d1e1:	cwde   
  41d1e2:	xlat   BYTE PTR ds:[ebx]
  41d1e3:	aad    0x72
  41d1e5:	mov    edx,0xed9fb5e7
  41d1ea:	push   ebx
  41d1eb:	adc    eax,0x52f630ca
  41d1f0:	xchg   esp,eax
  41d1f1:	in     al,dx
  41d1f2:	es das 
  41d1f4:	stos   DWORD PTR es:[edi],eax
  41d1f5:	pop    ss
  41d1f6:	pop    ss
  41d1f7:	hlt    
  41d1f8:	js     0x41d244
  41d1fa:	pushf  
  41d1fb:	or     al,0x59
  41d1fd:	or     edx,DWORD PTR [edx+0x7a]
  41d200:	push   0x17d60479
  41d205:	mov    bh,BYTE PTR [eax+ebp*1]
  41d208:	fistp  DWORD PTR [ebx]
  41d20a:	mov    eax,0x4c79cefc
  41d20f:	popa   
  41d210:	inc    esi
  41d211:	leave  
  41d212:	loopne 0x41d27c
  41d214:	sbb    al,0x2d
  41d216:	(bad)  [edx]
  41d218:	add    eax,0xda57ddc7
  41d21d:	xor    dl,ah
  41d21f:	shl    BYTE PTR [edx-0x2b5ed038],0x4c
  41d226:	inc    esp
  41d227:	in     eax,dx
  41d228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d229:	xchg   BYTE PTR [eax+0x6fd904f3],dl
  41d22f:	div    BYTE PTR [edi+eax*8]
  41d232:	and    DWORD PTR [eax-0x36d4980f],edi
  41d238:	fadd   QWORD PTR [edi]
  41d23a:	(bad)  
  41d23b:	mov    al,ds:0xde5201d5
  41d240:	mov    ebp,0x9f480ff6
  41d245:	cmp    DWORD PTR [edi],0x9dbd1fee
  41d24b:	mov    DWORD PTR [edi+0x59d00bc5],edi
  41d251:	pop    es
  41d252:	jmp    0xd5e8:0x61b88fcc
  41d259:	pop    edx
  41d25a:	add    eax,eax
  41d25c:	imul   esi,ecx,0x43
  41d25f:	sbb    dl,al
  41d261:	loope  0x41d25b
  41d263:	pop    ss
  41d264:	mov    edx,0x7703f30c
  41d269:	xchg   edi,eax
  41d26a:	add    eax,0x46143bb5
  41d26f:	addr16 pop edi
  41d271:	push   0xc2e58a70
  41d276:	retf   0x7e2d
  41d279:	pusha  
  41d27a:	stc    
  41d27b:	outs   dx,DWORD PTR ds:[esi]
  41d27c:	pop    edx
  41d27d:	sub    DWORD PTR [ecx*1+0x2e76bda7],esp
  41d284:	adc    dh,BYTE PTR [esi+edi*1]
  41d287:	shl    BYTE PTR [esi-0x7a],1
  41d28a:	jo     0x41d23c
  41d28c:	ds ret 
  41d28e:	rol    al,1
  41d290:	(bad)  
  41d291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d292:	pop    es
  41d293:	imul   ebx,DWORD PTR [esi],0xffffffad
  41d296:	retf   
  41d297:	lahf   
  41d298:	push   ebp
  41d299:	ins    DWORD PTR es:[edi],dx
  41d29a:	cmc    
  41d29b:	adc    eax,DWORD PTR [esi]
  41d29d:	dec    ecx
  41d29e:	dec    ebp
  41d29f:	push   ebp
  41d2a0:	mov    ds:0x390fc545,eax
  41d2a5:	stos   DWORD PTR es:[edi],eax
  41d2a6:	inc    ebp
  41d2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2a8:	dec    edi
  41d2a9:	and    al,0xb9
  41d2ab:	sahf   
  41d2ac:	repnz clc 
  41d2ae:	mov    eax,0x632b4238
  41d2b3:	fdivr  QWORD PTR [edx-0x1fc8e259]
  41d2b9:	or     al,ch
  41d2bb:	mov    ds:0xa1d26f5c,al
  41d2c0:	cmp    DWORD PTR [ebp-0x1e],ecx
  41d2c3:	mov    bh,0xdd
  41d2c5:	sbb    eax,0xf35a9e10
  41d2ca:	fidivr DWORD PTR [edx-0x47a0b1e]
  41d2d0:	scas   eax,DWORD PTR es:[edi]
  41d2d1:	shr    BYTE PTR [eax+ecx*4],1
  41d2d4:	mov    ?,WORD PTR ds:0x8eac1f35
  41d2da:	mov    eax,0x5f8f394d
  41d2df:	push   ebx
  41d2e0:	push   edi
  41d2e1:	mov    BYTE PTR [ebp+0x3f],ch
  41d2e4:	sbb    al,0xd1
  41d2e6:	mov    al,ds:0xe30dae9
  41d2eb:	dec    edx
  41d2ec:	fs fs inc edx
  41d2ef:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2f1:	or     al,ch
  41d2f3:	cmp    eax,0x42628ca4
  41d2f8:	xor    esi,DWORD PTR [ebp-0x7b60a9c3]
  41d2fe:	lods   al,BYTE PTR ds:[esi]
  41d2ff:	stos   BYTE PTR es:[edi],al
  41d300:	js     0x41d321
  41d302:	test   eax,0xe1593845
  41d307:	test   eax,0xcf514ce4
  41d30c:	ins    BYTE PTR es:[edi],dx
  41d30d:	mov    eax,DWORD PTR fs:[ebx]
  41d310:	and    al,0xfd
  41d313:	jl     0x41d2aa
  41d315:	inc    eax
  41d316:	popa   
  41d317:	adc    eax,0x85dc29c1
  41d31c:	inc    esp
  41d31d:	mov    dl,0x94
  41d31f:	jg     0x41d372
  41d321:	ds pusha 
  41d323:	les    edx,FWORD PTR [eax-0x50]
  41d326:	sbb    esp,ebx
  41d328:	shl    DWORD PTR [edi],0xa9
  41d32b:	mov    WORD PTR [ebx+0x14aa9b4b],fs
  41d331:	mov    ebx,0xe1f615fd
  41d336:	iret   
  41d337:	and    DWORD PTR [edx],esp
  41d339:	shl    BYTE PTR [edx+0xa],1
  41d33c:	ins    BYTE PTR es:[edi],dx
  41d33d:	scas   al,BYTE PTR es:[edi]
  41d33e:	idiv   DWORD PTR [ebx]
  41d340:	jecxz  0x41d38a
  41d342:	(bad)
  41d346:	or     eax,ebp
  41d348:	push   ecx
  41d349:	scas   al,BYTE PTR es:[edi]
  41d34a:	data16 jns 0x41d35f
  41d34d:	sub    DWORD PTR [ebx],edx
  41d34f:	aaa    
  41d350:	aad    0x47
  41d352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d353:	enter  0x733c,0x1e
  41d357:	out    dx,al
  41d358:	sar    DWORD PTR [ecx+0x8],0xf5
  41d35c:	les    ebx,FWORD PTR ds:0x7d082314
  41d362:	push   eax
  41d363:	and    DWORD PTR [edx],0xffffff98
  41d366:	jb     0x41d348
  41d368:	add    ch,cl
  41d36a:	adc    bl,BYTE PTR [edx+0x1687e28c]
  41d370:	shld   DWORD PTR [eax+0x359edfe0],esp,cl
  41d377:	es sub al,0x83
  41d37a:	xchg   esp,eax
  41d37b:	push   eax
  41d37c:	add    al,BYTE PTR [edi]
  41d37e:	pushf  
  41d37f:	sbb    al,0xe4
  41d381:	dec    edx
  41d382:	pop    es
  41d383:	xor    ecx,ebp
  41d385:	fcmovu st,st(7)
  41d387:	call   0x1272:0x5aa53df2
  41d38e:	inc    ebx
  41d38f:	pop    eax
  41d390:	(bad)  
  41d391:	pop    ebx
  41d392:	cmp    al,0xb6
  41d394:	and    esi,ecx
  41d396:	adc    eax,0xaff898e3
  41d39b:	adc    bh,dl
  41d39d:	mov    WORD PTR [edx+0x7b],cs
  41d3a0:	push   ds
  41d3a1:	in     al,dx
  41d3a2:	jo     0x41d38b
  41d3a4:	push   edi
  41d3a5:	bound  edx,QWORD PTR [ecx+0x77]
  41d3a8:	mov    dh,0x82
  41d3aa:	ins    BYTE PTR es:[edi],dx
  41d3ab:	sahf   
  41d3ac:	and    ch,BYTE PTR ds:0x91c983f
  41d3b2:	add    esi,DWORD PTR [edi-0x4788ad8c]
  41d3b8:	retf   0x87f3
  41d3bb:	mov    DWORD PTR [edx],ecx
  41d3bd:	push   eax
  41d3be:	adc    dh,ah
  41d3c0:	lds    ecx,FWORD PTR [esi]
  41d3c2:	mov    al,0x1
  41d3c4:	pop    ds
  41d3c5:	sbb    esi,DWORD PTR [ecx]
  41d3c7:	mov    ecx,ebp
  41d3c9:	cs or  esi,ebx
  41d3cc:	dec    esp
  41d3cd:	or     eax,0x28a29a3a
  41d3d2:	fsub   QWORD PTR [eax+0x559f080c]
  41d3d8:	jo     0x41d3db
  41d3da:	jle    0x41d415
  41d3dc:	push   0x48
  41d3de:	inc    ebx
  41d3df:	les    ebp,FWORD PTR [edi+edx*8-0x4c]
  41d3e3:	mov    ds:0x26ae2662,eax
  41d3e8:	cwde   
  41d3e9:	clc    
  41d3ea:	nop
  41d3eb:	clc    
  41d3ec:	push   esp
  41d3ed:	xor    eax,0x1e41330a
  41d3f2:	push   eax
  41d3f3:	adc    eax,0x6eaab3a6
  41d3f8:	sub    eax,0x61da0db9
  41d3fd:	outs   dx,DWORD PTR fs:[esi]
  41d3ff:	add    al,BYTE PTR [eax+eiz*1+0x11]
  41d403:	add    edx,DWORD PTR [edx]
  41d405:	cs mov bh,0xde
  41d408:	add    DWORD PTR [ecx],ebp
  41d40a:	out    0x17,eax
  41d40c:	xchg   DWORD PTR [ecx],ebp
  41d40e:	sbb    bh,BYTE PTR [ecx]
  41d410:	ret    
  41d411:	fsub   st,st(7)
  41d413:	mov    bl,0x3c
  41d415:	(bad)  
  41d416:	call   0x9da51b08
  41d41b:	inc    esi
  41d41c:	sahf   
  41d41d:	jle    0x41d402
  41d41f:	mov    bl,0x12
  41d421:	push   es
  41d422:	push   es
  41d423:	xchg   BYTE PTR ss:[edx],bh
  41d426:	xchg   edx,eax
  41d427:	sbb    DWORD PTR [edi-0x5960dc33],0x3408fdd0
  41d431:	stos   BYTE PTR es:[edi],al
  41d432:	aam    0xe
  41d434:	test   eax,0xb901a678
  41d439:	icebp  
  41d43a:	clc    
  41d43b:	call   0x71f3344b
  41d440:	or     BYTE PTR [edx],0x2
  41d443:	ds pop ecx
  41d445:	xchg   edx,eax
  41d446:	and    al,0xda
  41d448:	add    al,0x49
  41d44a:	and    bl,dl
  41d44c:	mov    ah,0x9f
  41d44e:	fs jmp 0xb45fce4d
  41d454:	aaa    
  41d455:	push   ecx
  41d456:	leave  
  41d457:	(bad)  
  41d458:	(bad)  
  41d459:	bound  ebx,QWORD PTR [eax+edi*8-0x3de2cb5]
  41d460:	loop   0x41d469
  41d462:	mov    al,ds:0x15fd75f
  41d467:	fwait
  41d468:	and    BYTE PTR [ecx+0x42],ch
  41d46b:	or     al,0x31
  41d46d:	arpl   WORD PTR [ecx-0x4a4fd353],bp
  41d473:	imul   BYTE PTR [esi+0x2595c281]
  41d479:	mov    esi,0xf5fc9192
  41d47e:	das    
  41d47f:	into   
  41d480:	adc    al,0xd8
  41d482:	xchg   esi,eax
  41d483:	and    esi,DWORD PTR [ecx-0x46dfe7ab]
  41d489:	rcr    DWORD PTR [eax],cl
  41d48b:	push   cs
  41d48c:	sub    BYTE PTR [ebx-0x7a4cd2a7],ah
  41d492:	push   eax
  41d493:	mov    ah,0x5f
  41d495:	mov    ecx,0xee761bea
  41d49a:	icebp  
  41d49b:	mov    bh,0xbf
  41d49d:	mov    eax,DWORD PTR [edx-0x24]
  41d4a0:	mov    edx,0x4da821b5
  41d4a5:	xchg   ebx,eax
  41d4a6:	jle    0x41d520
  41d4a8:	stos   BYTE PTR es:[edi],al
  41d4a9:	push   cs
  41d4aa:	and    eax,0x543db4a5
  41d4af:	mov    esi,0xb5faac6b
  41d4b4:	cmp    DWORD PTR [edi+eiz*4-0x19],ecx
  41d4b8:	jnp    0x41d4cb
  41d4ba:	push   cs
  41d4bb:	mov    ebx,DWORD PTR [edx+0x1ba0fb60]
  41d4c1:	mov    esi,0x51372bfa
  41d4c6:	arpl   WORD PTR [ebx-0x546df071],bp
  41d4cc:	adc    ch,bl
  41d4ce:	gs test eax,0x5bf7dc28
  41d4d4:	lea    ebx,ds:0xf3551850
  41d4da:	jmp    0x6b5ec125
  41d4df:	cs arpl dx,dx
  41d4e2:	push   es
  41d4e3:	sbb    ah,BYTE PTR [edi-0x79]
  41d4e6:	leave  
  41d4e7:	sahf   
  41d4e8:	mov    eax,DWORD PTR [ebp-0x734026cf]
  41d4ee:	jbe    0x41d4b9
  41d4f0:	inc    esp
  41d4f1:	dec    ebp
  41d4f2:	cmc    
  41d4f3:	fwait
  41d4f4:	into   
  41d4f5:	daa    
  41d4f6:	cwde   
  41d4f7:	push   esi
  41d4f8:	xchg   edi,eax
  41d4f9:	dec    esi
  41d4fa:	test   BYTE PTR [edx],bl
  41d4fc:	mov    esp,0xa50a4419
  41d501:	push   esi
  41d502:	(bad)  
  41d503:	out    dx,al
  41d504:	dec    eax
  41d505:	inc    ecx
  41d506:	mov    dl,0x66
  41d508:	sbb    esp,DWORD PTR [ecx+0x66]
  41d50b:	es gs out 0x76,al
  41d50f:	jg     0x41d550
  41d511:	sub    al,0x27
  41d513:	push   edi
  41d514:	mov    ds:0x8f404add,eax
  41d519:	mov    eax,0xb8b66985
  41d51e:	popa   
  41d51f:	call   0x81ac596c
  41d524:	pop    edi
  41d525:	fild   DWORD PTR [esp+eiz*4-0x18a1d306]
  41d52c:	mov    dl,0x9f
  41d52e:	daa    
  41d52f:	call   0x1937:0x4bde72cf
  41d536:	inc    edi
  41d537:	inc    edx
  41d538:	xor    esi,DWORD PTR [esp+edx*8-0xf5c371d]
  41d53f:	cli    
  41d540:	ret    
  41d541:	xchg   edx,eax
  41d542:	movd   mm1,ecx
  41d545:	sub    ebp,DWORD PTR [edx-0x51a4cec9]
  41d54b:	out    0x93,eax
  41d54d:	dec    ecx
  41d54e:	jl     0x41d539
  41d550:	bound  ecx,QWORD PTR [esp+esi*2-0x75ce28e1]
  41d557:	sar    DWORD PTR [edx],cl
  41d559:	or     al,0x0
  41d55b:	sub    eax,DWORD PTR [ebx-0x9]
  41d55e:	inc    ecx
  41d55f:	cmp    ebx,edx
  41d561:	and    al,BYTE PTR ss:[ecx-0x14]
  41d565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d566:	call   0x48d:0xb643faf0
  41d56d:	xor    BYTE PTR [ecx-0x5bf62599],0x97
  41d574:	mov    ah,0x30
  41d576:	jb     0x41d5a1
  41d578:	sub    eax,0x1bb96e62
  41d57d:	out    dx,al
  41d57e:	out    dx,al
  41d57f:	jno    0x41d524
  41d581:	push   esp
  41d582:	shl    DWORD PTR [edx-0xae14c86],0x7d
  41d589:	mov    cl,0x72
  41d58b:	sbb    al,0x78
  41d58d:	add    edx,eax
  41d58f:	mov    WORD PTR [ecx-0x4321b096],fs
  41d595:	cmp    al,0xd
  41d597:	dec    ecx
  41d598:	(bad)  
  41d599:	mov    dh,0x1e
  41d59b:	shl    DWORD PTR [eax+0x4a399a48],cl
  41d5a1:	pop    ecx
  41d5a2:	jle    0x41d5f1
  41d5a4:	jmp    0x41d5b4
  41d5a6:	ins    BYTE PTR es:[edi],dx
  41d5a7:	mov    al,0x5
  41d5a9:	adc    ecx,DWORD PTR ds:0xee6973ab
  41d5af:	lea    ebx,[eax-0x6c]
  41d5b2:	jb     0x41d589
  41d5b4:	loopne 0x41d5ab
  41d5b6:	or     DWORD PTR [eax+0xa65d2b9],0x4c
  41d5bd:	mov    cs,esi
  41d5bf:	cmc    
  41d5c0:	rcr    BYTE PTR [esi+ebx*2],1
  41d5c3:	pop    ebp
  41d5c4:	dec    ecx
  41d5c5:	mov    dl,0xfa
  41d5c7:	mov    BYTE PTR [edi-0x3e0d0c64],al
  41d5cd:	push   ecx
  41d5ce:	mov    DWORD PTR [ebx],ebx
  41d5d0:	pushf  
  41d5d1:	fcom   st(2)
  41d5d3:	fimul  WORD PTR [edi]
  41d5d5:	xor    eax,0x2e2ed5ab
  41d5da:	xor    eax,0x2d72da38
  41d5df:	push   0x4
  41d5e1:	dec    edi
  41d5e2:	in     eax,0xf3
  41d5e4:	jg     0x41d5d1
  41d5e6:	(bad)  
  41d5e7:	popa   
  41d5e8:	xor    eax,0x15e4bb30
  41d5ed:	scas   eax,DWORD PTR es:[edi]
  41d5ee:	pop    ecx
  41d5ef:	pop    ebp
  41d5f0:	fstp   DWORD PTR [ebx]
  41d5f2:	mov    cl,0x9c
  41d5f4:	push   esp
  41d5f5:	lds    ecx,FWORD PTR fs:[ecx+0x10a030e0]
  41d5fc:	mov    edx,0xd026a5f2
  41d601:	inc    esp
  41d602:	fxsave [esp+eiz*8+0x55]
  41d607:	(bad)  
  41d608:	lods   eax,DWORD PTR ds:[esi]
  41d609:	jne    0x41d669
  41d60b:	jl     0x41d66b
  41d60d:	(bad)  
  41d60e:	jae    0x41d621
  41d610:	ins    DWORD PTR es:[edi],dx
  41d611:	ss test eax,0x1a630008
  41d617:	stos   BYTE PTR es:[edi],al
  41d618:	sub    eax,0x95f83d4c
  41d61d:	(bad)  
  41d61f:	scas   al,BYTE PTR es:[edi]
  41d620:	push   cs
  41d621:	xchg   esi,eax
  41d622:	test   BYTE PTR ds:0x7ad70c93,0x6d
  41d629:	mov    al,0x69
  41d62b:	jns    0x41d62b
  41d62d:	das    
  41d62e:	iret   
  41d62f:	or     cl,ch
  41d631:	adc    esi,DWORD PTR [edx-0x3682d6b3]
  41d637:	shl    BYTE PTR [eax+0x3a9e5639],1
  41d63d:	out    dx,al
  41d63e:	clc    
  41d63f:	scas   al,BYTE PTR es:[edi]
  41d640:	sbb    esp,DWORD PTR cs:[edx+edi*4+0x679cb858]
  41d648:	jecxz  0x41d60a
  41d64a:	sti    
  41d64b:	sub    al,0xe3
  41d64d:	test   BYTE PTR [eax+0x6a],bh
  41d650:	sbb    ah,BYTE PTR [ebx-0x6ef1ed25]
  41d656:	mov    ah,0xc0
  41d658:	stos   BYTE PTR es:[edi],al
  41d659:	mov    DWORD PTR [edi-0x45],esp
  41d65c:	cld    
  41d65d:	outs   dx,DWORD PTR ds:[esi]
  41d65e:	mov    esp,0x7bed0166
  41d663:	stos   DWORD PTR es:[edi],eax
  41d664:	cmp    esi,DWORD PTR [ebx+0x2e]
  41d667:	psubq  mm3,QWORD PTR ds:0x1b48357
  41d66e:	daa    
  41d66f:	cmp    edi,ebx
  41d671:	inc    ebx
  41d672:	push   edi
  41d673:	ret    
  41d674:	out    dx,eax
  41d675:	adc    DWORD PTR [eax-0x1e],0x49dfb999
  41d67c:	or     DWORD PTR [edi+0x6de8bc84],0x46
  41d683:	jae    0x41d682
  41d685:	ins    DWORD PTR es:[edi],dx
  41d686:	stos   BYTE PTR es:[edi],al
  41d687:	mov    dl,0xd2
  41d689:	int3   
  41d68a:	out    0x41,al
  41d68c:	scas   al,BYTE PTR es:[edi]
  41d68d:	sbb    eax,0x273a2a26
  41d692:	int3   
  41d693:	dec    esp
  41d694:	or     al,0xea
  41d696:	fld    TBYTE PTR [esi-0x716b32af]
  41d69c:	mov    bl,0xbc
  41d69e:	cdq    
  41d69f:	inc    ebp
  41d6a0:	sub    ax,0xd328
  41d6a4:	out    0xa8,eax
  41d6a6:	dec    edx
  41d6a7:	sar    DWORD PTR [ebp-0x34],1
  41d6aa:	aam    0x3f
  41d6ac:	add    DWORD PTR [eax],ecx
  41d6ae:	mov    ds:0xe557e99e,eax
  41d6b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6b4:	out    dx,al
  41d6b5:	xchg   DWORD PTR [edi],esp
  41d6b7:	add    BYTE PTR [ecx+0x47d7f1bb],0xbe
  41d6be:	aaa    
  41d6bf:	inc    ebx
  41d6c0:	cmp    dl,BYTE PTR [edx+0x3d]
  41d6c3:	cmp    BYTE PTR [eax-0x31],dl
  41d6c6:	inc    ebx
  41d6c7:	lea    ebx,[edx+0x4]
  41d6ca:	inc    esp
  41d6cb:	dec    esp
  41d6cc:	fwait
  41d6cd:	pop    eax
  41d6ce:	aas    
  41d6cf:	inc    esi
  41d6d0:	stos   BYTE PTR es:[edi],al
  41d6d1:	mov    bl,0x88
  41d6d3:	dec    ebx
  41d6d4:	sub    DWORD PTR [edx+0x696f303b],ecx
  41d6da:	in     al,0xcd
  41d6dc:	xlat   BYTE PTR ds:[ebx]
  41d6dd:	sub    eax,0xe733b2ca
  41d6e2:	test   eax,0xa6bb3220
  41d6e7:	jecxz  0x41d705
  41d6e9:	adc    eax,0xd135ea77
  41d6ee:	inc    ecx
  41d6ef:	lahf   
  41d6f0:	adc    eax,0x20f60806
  41d6f5:	mov    eax,0x8fa58ca6
  41d6fa:	mov    ah,BYTE PTR [edi+0x4c2523b9]
  41d700:	out    0xad,al
  41d702:	push   ebx
  41d703:	cmp    al,0xc8
  41d705:	lahf   
  41d706:	cmp    cl,BYTE PTR [ebp-0x5083e9dc]
  41d70c:	fnsave [ebx+0x3d]
  41d70f:	(bad)  
  41d710:	mov    ecx,0x8c9e4b28
  41d715:	cli    
  41d716:	retf   
  41d717:	mov    esp,0x9735b1fc
  41d71c:	je     0x41d74b
  41d71e:	nop
  41d71f:	in     eax,dx
  41d720:	imul   ecx,DWORD PTR [edx],0xffffffcd
  41d723:	bound  ebx,QWORD PTR [edi+eiz*2+0x5c87b9fa]
  41d72a:	pop    ebp
  41d72b:	pop    esp
  41d72c:	stos   BYTE PTR es:[edi],al
  41d72d:	test   BYTE PTR [ebx],dh
  41d72f:	bound  esp,QWORD PTR [esp+ebx*4]
  41d732:	mov    dl,0xfc
  41d734:	mov    edx,DWORD PTR [ebx-0x6a4d6a43]
  41d73a:	faddp  st(6),st
  41d73c:	es in  eax,dx
  41d73e:	push   ebp
  41d73f:	push   0x2c
  41d741:	pop    edx
  41d742:	mov    ch,0xe1
  41d744:	cmp    DWORD PTR [edi+eax*1+0x8],edx
  41d748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d749:	sbb    al,0xf
  41d74b:	mov    ebx,0x4851fd9
  41d750:	dec    edx
  41d751:	mov    WORD PTR [ebx+edi*4],gs
  41d754:	adc    al,0x19
  41d756:	mov    eax,ds:0x9a54cbcc
  41d75b:	sbb    ebp,DWORD PTR [ecx+0x43]
  41d75e:	sbb    esp,DWORD PTR [eax+0x2a7e2d6]
  41d764:	sub    bl,BYTE PTR [esi-0x78]
  41d767:	ret    
  41d768:	inc    esp
  41d769:	in     eax,0x21
  41d76b:	xchg   DWORD PTR ds:0x70fca3b4,eax
  41d771:	test   al,0x8c
  41d773:	xchg   esi,eax
  41d774:	loopne 0x41d756
  41d776:	stos   BYTE PTR es:[edi],al
  41d777:	cs push 0x9848b0d2
  41d77d:	or     cl,BYTE PTR [esp+ebp*4]
  41d780:	out    dx,eax
  41d781:	sti    
  41d782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d783:	pop    eax
  41d784:	dec    edi
  41d785:	xor    al,cl
  41d787:	sbb    eax,0x7407936c
  41d78c:	js     0x41d729
  41d78e:	out    dx,eax
  41d78f:	push   edx
  41d790:	sub    esi,eax
  41d792:	test   bh,al
  41d794:	fcomip st,st(6)
  41d796:	sub    cl,BYTE PTR [esp+edx*2+0x3c]
  41d79a:	ret    
  41d79b:	test   al,0x11
  41d79d:	and    DWORD PTR [esp+ebp*8],edx
  41d7a0:	pop    edi
  41d7a1:	xor    al,0x52
  41d7a3:	push   es
  41d7a4:	push   ecx
  41d7a5:	hlt    
  41d7a6:	pand   mm2,mm7
  41d7a9:	rcl    DWORD PTR ds:[edi+0x5d],cl
  41d7ad:	pop    esi
  41d7ae:	adc    al,0x6b
  41d7b0:	sbb    BYTE PTR [eax],cl
  41d7b2:	(bad)  
  41d7b3:	fwait
  41d7b4:	or     dh,bh
  41d7b6:	sbb    al,0xe9
  41d7b8:	adc    al,0x1b
  41d7ba:	setnp  BYTE PTR [ecx-0x5f0ac15b]
  41d7c1:	test   eax,0x29f5a5ef
  41d7c6:	sbb    DWORD PTR ss:[edx],ebp
  41d7c9:	sahf   
  41d7ca:	enter  0x1cca,0x1
  41d7ce:	mov    ebp,0x8b0ee84f
  41d7d3:	pop    ss
  41d7d4:	mov    esi,0x1acf7ec4
  41d7d9:	outs   dx,BYTE PTR ds:[esi]
  41d7da:	loope  0x41d784
  41d7dc:	ret    
  41d7dd:	xor    ebx,DWORD PTR [ebx]
  41d7df:	mov    al,dl
  41d7e1:	stos   DWORD PTR es:[edi],eax
  41d7e2:	pushf  
  41d7e3:	or     BYTE PTR [edi-0x21055115],bh
  41d7e9:	push   ds
  41d7ea:	hlt    
  41d7eb:	jno    0x41d81e
  41d7ed:	and    al,0xec
  41d7ef:	push   eax
  41d7f0:	add    bh,BYTE PTR [ebp+0x16fd69eb]
  41d7f6:	jmp    0xd9afa795
  41d7fb:	and    eax,0xd46444fe
  41d800:	dec    esp
  41d801:	adc    al,0xb7
  41d803:	push   edi
  41d804:	dec    ebp
  41d805:	adc    al,bl
  41d807:	adc    BYTE PTR [ebx-0x55],ah
  41d80a:	add    eax,0x576fd227
  41d80f:	test   eax,0x4563b2bf
  41d814:	push   edx
  41d815:	in     eax,0xba
  41d817:	in     eax,0xb8
  41d819:	mov    bl,0x37
  41d81b:	js     0x41d861
  41d81d:	add    al,0x7d
  41d81f:	mov    ds:0x1a8086d5,eax
  41d824:	shl    DWORD PTR ds:[edx-0x76],1
  41d828:	popa   
  41d829:	sbb    DWORD PTR [ebx+edx*1],0xa86728dd
  41d830:	fisttp WORD PTR [edi+eiz*4+0x7d]
  41d834:	repnz or eax,ecx
  41d837:	and    bl,dh
  41d839:	xor    al,0xf4
  41d83b:	xor    ah,BYTE PTR [ebx-0x13b27773]
  41d841:	stos   DWORD PTR es:[edi],eax
  41d842:	in     eax,0xf
  41d844:	pop    ss
  41d845:	stos   DWORD PTR es:[edi],eax
  41d846:	pusha  
  41d847:	inc    edx
  41d848:	and    eax,0xb9c9a0f7
  41d84d:	test   DWORD PTR [eax+0x1341033d],eax
  41d853:	push   ss
  41d854:	test   al,0xc1
  41d856:	cwde   
  41d857:	jns    0x41d845
  41d859:	ret    0xaf5b
  41d85c:	call   0xcce2:0xd4b0de07
  41d863:	sbb    DWORD PTR [ecx],ebp
  41d865:	xchg   BYTE PTR [edx+0x4b3a19c4],dl
  41d86b:	mov    edx,0xcb4d0fe1
  41d870:	pop    ebp
  41d871:	sahf   
  41d872:	call   0xeeb16543
  41d877:	xchg   edx,eax
  41d878:	xor    edi,DWORD PTR [edi+edi*1]
  41d87b:	fisub  WORD PTR [edx-0x79]
  41d87e:	(bad)  
  41d87f:	std    
  41d880:	enter  0x5be,0x4e
  41d884:	push   ds
  41d885:	push   0xffffffe4
  41d887:	test   eax,0x55fc88ae
  41d88c:	(bad)  
  41d88d:	out    dx,al
  41d88e:	xchg   esi,esp
  41d890:	add    ebp,eax
  41d892:	aas    
  41d893:	(bad)  
  41d894:	xchg   ecx,eax
  41d895:	inc    esp
  41d896:	sbb    BYTE PTR [eax+ecx*2+0x1e],0x5a
  41d89b:	stc    
  41d89c:	retf   
  41d89d:	lods   eax,DWORD PTR fs:[esi]
  41d89f:	mov    ebp,0x4ae4f25e
  41d8a4:	repnz sar ecx,cl
  41d8a7:	ins    DWORD PTR es:[edi],dx
  41d8a8:	sub    edi,ecx
  41d8aa:	loop   0x41d86b
  41d8ac:	xchg   ebx,eax
  41d8ad:	out    dx,al
  41d8ae:	call   0x17c7c533
  41d8b3:	mov    edx,0xa56ade68
  41d8b8:	and    dl,ah
  41d8ba:	jmp    0x89d10547
  41d8bf:	and    bl,BYTE PTR [edi]
  41d8c1:	iret   
  41d8c2:	dec    esi
  41d8c3:	jp     0x41d93c
  41d8c5:	pop    ds
  41d8c6:	out    0x47,al
  41d8c8:	and    eax,0x6c86c5ba
  41d8cd:	jno    0x41d88b
  41d8cf:	retf   
  41d8d0:	aaa    
  41d8d1:	stc    
  41d8d2:	push   ebp
  41d8d3:	imul   ebx,DWORD PTR [ebx+0x0],0x299fdd9
  41d8da:	gs faddp st(7),st
  41d8dd:	dec    esp
  41d8de:	push   ebx
  41d8df:	test   eax,0x90b3938
  41d8e4:	repz gs ret 
  41d8e7:	inc    esp
  41d8e8:	mov    WORD PTR ds:0x9c14766,?
  41d8ee:	hlt    
  41d8ef:	dec    ecx
  41d8f0:	daa    
  41d8f1:	scas   al,BYTE PTR es:[edi]
  41d8f2:	mov    bh,0xe6
  41d8f4:	ror    DWORD PTR [edi-0x307048a7],0x80
  41d8fb:	mov    edx,0xabc4c992
  41d900:	jo     0x41d8b5
  41d902:	cld    
  41d903:	cmp    ah,BYTE PTR [ecx+ecx*8-0x76f8714d]
  41d90a:	and    eax,0x7fa3959a
  41d90f:	enter  0x6e0f,0xc6
  41d913:	out    0x93,eax
  41d915:	in     al,dx
  41d916:	adc    eax,0x7c58a2f1
  41d91b:	xchg   esp,eax
  41d91c:	dec    edx
  41d91d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d91e:	aam    0xd5
  41d920:	bound  edx,QWORD PTR [eax-0x4dc53cd3]
  41d926:	and    DWORD PTR gs:0x2164fa03,esp
  41d92d:	push   esp
  41d92e:	daa    
  41d92f:	sub    DWORD PTR [ebx+esi*4],0xffffffc7
  41d933:	jg     0x41d97e
  41d935:	jge    0x41d938
  41d937:	adc    eax,0x4c13f99c
  41d93c:	popf   
  41d93d:	test   al,0xe1
  41d93f:	and    al,0x5d
  41d941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d942:	push   esi
  41d943:	jo     0x41d91c
  41d945:	aad    0x59
  41d947:	or     ecx,esi
  41d949:	pop    esi
  41d94a:	dec    eax
  41d94b:	add    edx,esp
  41d94d:	mov    ah,0x86
  41d94f:	mov    dl,0x70
  41d951:	lods   eax,DWORD PTR ds:[esi]
  41d952:	cmp    al,0x72
  41d954:	aaa    
  41d955:	addr16 rol ah,0x38
  41d959:	push   es
  41d95a:	ins    BYTE PTR es:[edi],dx
  41d95b:	imul   eax,DWORD PTR [eax+0x39],0xa
  41d95f:	pop    ebp
  41d960:	sub    eax,0x550a327c
  41d965:	call   0xfef29d8b
  41d96a:	or     DWORD PTR [edi*4+0x7bc1ebe0],esi
  41d971:	shl    BYTE PTR [ebp+ebx*4+0x2e4c1a4a],cl
  41d978:	loop   0x41d926
  41d97a:	daa    
  41d97b:	dec    eax
  41d97c:	jae    0x41d9d9
  41d97e:	leave  
  41d97f:	adc    dl,BYTE PTR ds:0x7f2f792d
  41d985:	xchg   esi,eax
  41d986:	adc    eax,0x92e7e35d
  41d98b:	adc    ecx,DWORD PTR [ecx-0x5e]
  41d98e:	fdivr  QWORD PTR [ebp-0x5e267b5f]
  41d994:	jg     0x41d932
  41d996:	fst    QWORD PTR [esi+0x6a]
  41d999:	push   0x44
  41d99b:	add    BYTE PTR [edx+0x6d],ah
  41d99e:	in     eax,0x75
  41d9a0:	ins    DWORD PTR es:[edi],dx
  41d9a1:	inc    esp
  41d9a2:	stos   DWORD PTR es:[edi],eax
  41d9a3:	jno    0x41d940
  41d9a5:	icebp  
  41d9a6:	in     eax,0x6f
  41d9a8:	mov    ecx,0x1724a187
  41d9ad:	mov    al,dl
  41d9af:	popf   
  41d9b0:	add    eax,0x6c70e831
  41d9b5:	ins    BYTE PTR es:[edi],dx
  41d9b6:	mov    cl,bh
  41d9b8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9ba:	jns    0x41da23
  41d9bc:	aad    0x82
  41d9be:	out    0xa4,al
  41d9c0:	test   edi,edi
  41d9c2:	fs popf 
  41d9c4:	mov    esp,0x155f7572
  41d9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9ca:	aaa    
  41d9cb:	xor    bl,dh
  41d9cd:	pop    ds
  41d9ce:	adc    ch,BYTE PTR [ebx+0x7830883b]
  41d9d4:	sub    DWORD PTR [esi+edx*8],esi
  41d9d7:	outs   dx,BYTE PTR ds:[esi]
  41d9d8:	gs dec esi
  41d9da:	add    eax,0xc8b3aec2
  41d9df:	(bad)
  41d9e2:	fadd   DWORD PTR ds:0x4c12b919
  41d9e8:	mov    ds:0xe1051009,al
  41d9ed:	mov    esi,0x65f32f71
  41d9f2:	cli    
  41d9f3:	loopne 0x41d9b6
  41d9f5:	push   eax
  41d9f6:	ret    0x7065
  41d9f9:	test   DWORD PTR [edx-0x3c],ecx
  41d9fc:	clc    
  41d9fd:	mov    ecx,0xc66f6ce9
  41da02:	jbe    0x41d998
  41da04:	jl     0x41da3f
  41da06:	es out 0xcd,eax
  41da09:	pmaxub mm7,QWORD PTR [esi-0x50c78458]
  41da10:	stos   BYTE PTR es:[edi],al
  41da11:	in     al,dx
  41da12:	mov    cl,0x95
  41da14:	(bad)  
  41da15:	hlt    
  41da16:	inc    ecx
  41da17:	xor    al,0x47
  41da19:	jecxz  0x41da08
  41da1b:	mov    ecx,0xedc1d84b
  41da20:	xor    al,0x3c
  41da22:	xchg   edx,eax
  41da23:	fldcw  WORD PTR [esi-0x45888dcf]
  41da29:	repnz nop
  41da2b:	shl    ecx,1
  41da2d:	and    edi,DWORD PTR [ebx]
  41da2f:	mov    cl,0xe4
  41da31:	mov    WORD PTR [ebp+eax*4-0x528741f8],es
  41da38:	fistp  QWORD PTR [ebx+0x1551dbdb]
  41da3e:	jg     0x41d9c3
  41da40:	mov    bl,0x99
  41da42:	sahf   
  41da43:	mov    ebp,0x89e3a6e3
  41da48:	push   esp
  41da49:	xchg   edi,eax
  41da4a:	jge    0x41dac5
  41da4c:	cmp    al,0x25
  41da4e:	mov    bh,0x92
  41da50:	push   esi
  41da51:	adc    al,0x83
  41da53:	call   0x2357:0x30d1e8a7
  41da5a:	mov    edi,0x6e207b61
  41da5f:	sbb    eax,0xbe97c446
  41da64:	enter  0x78f2,0x5e
  41da68:	stos   BYTE PTR es:[di],al
  41da6a:	sub    dh,BYTE PTR [eax+0x73def925]
  41da70:	dec    esi
  41da71:	mov    al,ds:0x22daa82f
  41da76:	mov    esp,0x7543d6b4
  41da7b:	dec    ecx
  41da7c:	cs scas al,BYTE PTR es:[edi]
  41da7e:	mov    ah,0x14
  41da80:	mov    es:0x6597ff5a,al
  41da86:	cmp    DWORD PTR ds:0x2223799c,edx
  41da8c:	aad    0xa9
  41da8e:	aaa    
  41da8f:	aad    0x50
  41da91:	add    al,0xbe
  41da93:	fwait
  41da94:	add    BYTE PTR [eax-0x1e],ch
  41da97:	push   ds
  41da98:	dec    edi
  41da99:	mov    ecx,DWORD PTR [ebp+0x7]
  41da9c:	out    0x45,al
  41da9e:	cmp    ebx,DWORD PTR [eax+0x51f882bb]
  41daa4:	jmp    FWORD PTR [ecx]
  41daa6:	pop    ebx
  41daa7:	or     BYTE PTR [ebp+0x1e],bh
  41daaa:	add    BYTE PTR [ecx],dl
  41daac:	pop    edi
  41daad:	pushf  
  41daae:	loopne 0x41daf8
  41dab0:	push   es
  41dab1:	fstp   st(4)
  41dab3:	and    al,0x94
  41dab5:	xor    ecx,0x7e
  41dab8:	sbb    al,0x35
  41daba:	or     dl,BYTE PTR [ebp-0x2e252ca3]
  41dac0:	push   cs
  41dac1:	sahf   
  41dac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dac3:	rcl    BYTE PTR [edi+0x44980065],1
  41dac9:	inc    ebx
  41daca:	dec    ebx
  41dacb:	xchg   edi,eax
  41dacc:	ja     0x41daf0
  41dace:	xchg   esi,eax
  41dacf:	aam    0x97
  41dad1:	sti    
  41dad2:	sub    al,BYTE PTR [ebp-0x3f0c868f]
  41dad8:	push   eax
  41dad9:	jmp    0x73ce9765
  41dade:	sub    al,0x7
  41dae0:	push   ss
  41dae1:	aas    
  41dae2:	mov    ecx,0x42aa5230
  41dae7:	or     DWORD PTR [esi+eax*4-0x34578339],eax
  41daee:	pop    edx
  41daef:	and    dl,BYTE PTR [edx+0x1d]
  41daf2:	pop    ecx
  41daf3:	mov    edx,0xef727cb1
  41daf8:	das    
  41daf9:	mov    eax,0x82d10867
  41dafe:	push   0xc33998fe
  41db03:	(bad)  [ebx]
  41db05:	push   esp
  41db06:	mov    ecx,0x25611f1b
  41db0b:	push   es
  41db0c:	or     BYTE PTR es:[edi],bh
  41db0f:	sbb    eax,0xa39bbef4
  41db14:	or     DWORD PTR [edi+ebx*1+0x9],esp
  41db18:	mov    ah,0x3c
  41db1a:	aam    0x5a
  41db1c:	dec    esi
  41db1d:	xor    ebp,DWORD PTR [ebx+eiz*2-0x553ba5dc]
  41db24:	mov    al,0xb0
  41db26:	arpl   WORD PTR [eax-0x53d94071],si
  41db2c:	jns    0x41daf3
  41db2e:	inc    ecx
  41db2f:	loope  0x41db7c
  41db31:	cdq    
  41db32:	jl     0x41db63
  41db34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db35:	repz mov eax,ds:0x7d01e25e
  41db3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db3c:	mov    al,0xe
  41db3e:	fmul   DWORD PTR [esi+0x5e]
  41db41:	jae    0x41dbaa
  41db43:	(bad)  
  41db45:	stos   BYTE PTR es:[edi],al
  41db46:	test   bl,al
  41db48:	int    0x9c
  41db4a:	sub    bl,BYTE PTR [eax]
  41db4c:	xchg   esi,eax
  41db4d:	sbb    DWORD PTR [edx],0x56
  41db50:	dec    eax
  41db51:	(bad)  
  41db52:	mov    bl,0x1d
  41db54:	call   0x630b4562
  41db59:	rcl    BYTE PTR [edx+0xf],1
  41db5c:	and    BYTE PTR ds:0x27bd5e6,dh
  41db62:	es rol edx,cl
  41db65:	mov    ch,0x9a
  41db67:	xchg   edi,eax
  41db68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db69:	inc    edx
  41db6a:	dec    ecx
  41db6b:	mov    al,BYTE PTR [eax+eax*1+0x37]
  41db6f:	xor    ah,BYTE PTR [ebp+0x1b1fdb82]
  41db75:	dec    ebp
  41db76:	push   0x6f
  41db78:	ror    DWORD PTR [edi],0x13
  41db7b:	adc    ecx,DWORD PTR [ecx+0x32d19ed3]
  41db81:	jno    0x41dbdb
  41db83:	mov    esi,0x41e3ddd4
  41db88:	inc    esi
  41db89:	cmc    
  41db8a:	jg     0x41dbba
  41db8c:	sub    ebx,DWORD PTR [edx+0x27]
  41db8f:	mov    al,ds:0xbbe85432
  41db94:	jg     0x41db94
  41db96:	mov    bl,0xb8
  41db98:	pop    ds
  41db99:	mov    dl,0x2e
  41db9b:	(bad)  
  41db9c:	lods   al,BYTE PTR ds:[esi]
  41db9d:	cmp    eax,0xf500e3e6
  41dba2:	stos   DWORD PTR es:[edi],eax
  41dba3:	lahf   
  41dba4:	pop    esp
  41dba5:	mov    ebp,0xd86fae66
  41dbaa:	xchg   edi,eax
  41dbab:	inc    ebx
  41dbac:	mov    ah,0xe2
  41dbae:	test   BYTE PTR [esi+0x69],0x45
  41dbb2:	stc    
  41dbb3:	ret    0x5c26
  41dbb6:	test   bh,ah
  41dbb8:	inc    esi
  41dbb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbba:	fmul   QWORD PTR [esi-0x47938416]
  41dbc0:	mov    edx,0x2e2033cf
  41dbc5:	sub    DWORD PTR [ecx-0x37ced2c9],0x6c60d610
  41dbcf:	mov    ds:0xae9f8858,eax
  41dbd4:	adc    dh,BYTE PTR [ecx]
  41dbd6:	pop    es
  41dbd7:	mov    bl,0xbe
  41dbd9:	(bad)  
  41dbda:	dec    edi
  41dbdb:	xchg   esi,eax
  41dbdc:	test   BYTE PTR [eax-0xeb4506e],ch
  41dbe2:	cld    
  41dbe3:	cmp    dh,dh
  41dbe5:	ins    DWORD PTR es:[edi],dx
  41dbe6:	mov    esi,0xcd54234b
  41dbeb:	push   edi
  41dbec:	mov    bh,0xc1
  41dbee:	test   DWORD PTR [ebx-0x1d],edi
  41dbf1:	imul   ebx,DWORD PTR [ecx-0x58],0x22
  41dbf5:	ret    
  41dbf6:	or     BYTE PTR [edi+0x6b3a03a6],al
  41dbfc:	popa   
  41dbfd:	sbb    bh,ah
  41dbff:	arpl   WORD PTR [edi-0x42],ax
  41dc02:	nop
  41dc03:	les    eax,FWORD PTR [eax+0x7f]
  41dc06:	jnp    0x41dc09
  41dc08:	xor    al,BYTE PTR [ebp+eiz*2-0x4cbe72eb]
  41dc0f:	and    BYTE PTR [ebx-0x3e],0xe9
  41dc13:	inc    edi
  41dc14:	mov    al,0xeb
  41dc16:	rol    BYTE PTR [esi+edi*8-0x59],0xa5
  41dc1b:	or     edx,DWORD PTR [ebx-0x15]
  41dc1e:	addr16 jg 0x41dba9
  41dc21:	fs mov edx,esp
  41dc24:	dec    ebp
  41dc25:	xchg   esp,eax
  41dc26:	or     BYTE PTR [ecx+0x71feff25],0x81
  41dc2d:	(bad)  
  41dc2e:	xor    DWORD PTR [ebx-0x35e2db43],eax
  41dc34:	pop    edi
  41dc35:	mov    ch,bh
  41dc37:	or     al,0xe2
  41dc39:	loop   0x41dc8c
  41dc3b:	sbb    BYTE PTR [ebx+edx*1-0x338dee8],bh
  41dc42:	fwait
  41dc43:	and    bl,BYTE PTR [edi+0x16]
  41dc46:	dec    esi
  41dc47:	repz jb 0x41dcbb
  41dc4a:	mov    cl,0xcb
  41dc4c:	pusha  
  41dc4d:	xchg   ebx,eax
  41dc4e:	in     eax,dx
  41dc4f:	or     DWORD PTR [ebp-0x3a],ebp
  41dc52:	(bad)  
  41dc53:	ins    BYTE PTR es:[edi],dx
  41dc54:	fwait
  41dc55:	das    
  41dc56:	xor    eax,0xcd56effa
  41dc5b:	stc    
  41dc5c:	add    DWORD PTR [ebp+edi*1-0x31],0xffffff88
  41dc61:	jns    0x41dcd1
  41dc63:	loope  0x41dc28
  41dc65:	adc    dh,BYTE PTR [edx-0x79]
  41dc68:	ret    
  41dc69:	add    al,0xfa
  41dc6b:	sahf   
  41dc6c:	mov    ebx,0x69eb29bc
  41dc71:	push   cs
  41dc72:	adc    al,0x1d
  41dc74:	out    0x0,eax
  41dc76:	inc    esp
  41dc77:	or     DWORD PTR [ebp+ebp*4-0x3dad9e66],ebx
  41dc7e:	pop    ss
  41dc7f:	aas    
  41dc80:	(bad)  
  41dc81:	pusha  
  41dc82:	adc    BYTE PTR [ecx+esi*1+0x68],ah
  41dc86:	jne    0x41dcad
  41dc88:	xchg   esp,eax
  41dc89:	mov    bh,0x82
  41dc8b:	call   0xb953ebb7
  41dc90:	and    al,0xf5
  41dc92:	retf   
  41dc93:	add    BYTE PTR [ecx],0xbb
  41dc96:	call   0x803db667
  41dc9b:	push   eax
  41dc9c:	je     0x41dcde
  41dc9e:	or     dl,al
  41dca0:	call   0xbc52:0x23f34688
  41dca7:	dec    esi
  41dca8:	ja     0x41dce7
  41dcaa:	out    0xb1,eax
  41dcac:	or     al,0xe3
  41dcae:	xor    al,0xaf
  41dcb0:	pop    eax
  41dcb1:	add    al,0x29
  41dcb3:	cmp    esi,DWORD PTR [edi+0x62]
  41dcb6:	lea    ebx,[ebx+0x33]
  41dcb9:	mov    ebx,0xeccc551
  41dcbe:	cld    
  41dcbf:	jo     0x41dcdf
  41dcc1:	dec    ebp
  41dcc2:	or     eax,0x534decaf
  41dcc7:	shl    dl,0x1a
  41dcca:	add    ah,BYTE PTR [edx*1-0x1ad75b07]
  41dcd1:	repnz rol DWORD PTR [esi+0x54],1
  41dcd5:	ins    DWORD PTR es:[edi],dx
  41dcd6:	stos   BYTE PTR es:[edi],al
  41dcd7:	and    dh,ah
  41dcd9:	into   
  41dcda:	mov    ds:0xa8d793bd,eax
  41dcdf:	sbb    al,0x4e
  41dce1:	aam    0x18
  41dce3:	dec    edi
  41dce4:	fidivr WORD PTR [esi]
  41dce6:	mov    al,0x83
  41dce8:	imul   esi,DWORD PTR [edx+0x6a49ab81],0xd91c697b
  41dcf2:	mov    DWORD PTR [eax],edx
  41dcf4:	js     0x41dcc0
  41dcf6:	dec    ebp
  41dcf7:	ret    
  41dcf8:	std    
  41dcf9:	repz or al,0xff
  41dcfc:	push   0xc3152e9a
  41dd01:	add    dh,BYTE PTR [ebx+0x42ce7840]
  41dd07:	add    DWORD PTR [ebp+0x38],0xd09112fe
  41dd0e:	pop    eax
  41dd0f:	sbb    eax,0xd8054262
  41dd14:	(bad)  
  41dd15:	rol    DWORD PTR [esi],1
  41dd17:	mov    ds:0x6c0d2bb3,al
  41dd1c:	sbb    BYTE PTR [ebx+ebx*4+0x701721ad],dh
  41dd23:	daa    
  41dd24:	pushf  
  41dd25:	mov    DWORD PTR ds:0xa860354c,ebp
  41dd2b:	push   eax
  41dd2c:	xchg   ecx,eax
  41dd2d:	cmp    edi,esp
  41dd2f:	mov    ebp,0xcc8d3cf9
  41dd34:	push   ecx
  41dd35:	or     ch,BYTE PTR [eax+ebx*8-0x301da442]
  41dd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd3d:	outs   dx,BYTE PTR ds:[esi]
  41dd3e:	mov    esi,0x83643ee4
  41dd43:	call   0x5d42dd3a
  41dd48:	daa    
  41dd49:	cmp    cl,ch
  41dd4b:	cli    
  41dd4c:	sbb    BYTE PTR [edi],bh
  41dd4e:	and    ch,ah
  41dd50:	fdiv   DWORD PTR [eax+0x7391eca5]
  41dd56:	int    0xc6
  41dd58:	mov    gs:0x6f422b26,al
  41dd5e:	sti    
  41dd5f:	pop    ds
  41dd60:	dec    edx
  41dd61:	sbb    eax,0x907e94ff
  41dd66:	lahf   
  41dd67:	or     al,0x3b
  41dd69:	add    eax,0x524550fb
  41dd6e:	or     eax,0x94f9feb5
  41dd73:	lods   al,BYTE PTR ss:[esi]
  41dd75:	cmp    BYTE PTR [edx-0x6b],bh
  41dd78:	fcom   DWORD PTR [ebx+0x688a8469]
  41dd7e:	or     BYTE PTR [edi+ebx*4],ah
  41dd81:	jo     0x41ddab
  41dd83:	jle    0x41dda9
  41dd85:	cld    
  41dd86:	fs aas 
  41dd88:	sbb    ch,BYTE PTR [ecx-0x58]
  41dd8b:	push   edx
  41dd8c:	pop    esi
  41dd8d:	das    
  41dd8e:	popa   
  41dd8f:	shl    DWORD PTR [ebx+0x30727c02],cl
  41dd95:	stos   DWORD PTR es:[edi],eax
  41dd96:	adc    eax,0x249377b9
  41dd9b:	(bad)  
  41dd9c:	aas    
  41dd9d:	mov    esp,0xfd19d597
  41dda2:	sbb    BYTE PTR [esi-0x10853250],dh
  41dda8:	cdq    
  41dda9:	push   edi
  41ddaa:	mov    WORD PTR [esp+ebp*4+0x20ec4ad0],gs
  41ddb1:	sub    al,BYTE PTR [ebp-0x1f044960]
  41ddb7:	icebp  
  41ddb8:	push   0xae2f36f
  41ddbd:	sbb    ch,BYTE PTR [esi-0x7ed46f2c]
  41ddc3:	sti    
  41ddc4:	call   0xd9a50fff
  41ddc9:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41ddcb:	out    dx,al
  41ddcc:	xor    eax,0x188e3964
  41ddd1:	dec    edx
  41ddd2:	xchg   BYTE PTR [ebx],cl
  41ddd4:	fidiv  DWORD PTR [edi]
  41ddd6:	sub    eax,0xd344787b
  41dddb:	jo     0x41dd63
  41dddd:	into   
  41ddde:	lea    ebx,[ebx+0x7e5ca234]
  41dde4:	sub    eax,0x50d46696
  41dde9:	xchg   edi,eax
  41ddea:	(bad)  
  41ddec:	icebp  
  41dded:	fs pop ecx
  41ddef:	aad    0xc5
  41ddf1:	or     BYTE PTR [edi],ah
  41ddf3:	in     al,dx
  41ddf4:	xchg   esi,eax
  41ddf5:	enter  0x6191,0x74
  41ddf9:	call   0x17977fd9
  41ddfe:	xor    al,0x61
  41de00:	mov    DWORD PTR [esi],esp
  41de02:	or     BYTE PTR [edx-0xdc576d1],ch
  41de08:	aam    0x44
  41de0a:	cmp    bh,BYTE PTR [ecx]
  41de0c:	mov    ds:0xde5f5673,al
  41de12:	or     dl,BYTE PTR es:[ebx+0x17909522]
  41de19:	ds scas eax,DWORD PTR es:[edi]
  41de1b:	ins    BYTE PTR es:[edi],dx
  41de1c:	inc    ecx
  41de1d:	adc    al,0xa2
  41de1f:	daa    
  41de20:	adc    BYTE PTR ds:[ecx+0x5d],ah
  41de24:	cwde   
  41de25:	(bad)  
  41de26:	mov    edx,0xde75a4fa
  41de2b:	cmp    eax,0x23ba6406
  41de30:	in     eax,0x18
  41de32:	cmp    edi,esp
  41de34:	fcom   DWORD PTR [ebx+0x3f]
  41de37:	jbe    0x41de3a
  41de39:	outs   dx,BYTE PTR ds:[esi]
  41de3a:	xchg   esp,eax
  41de3b:	jne    0x41de69
  41de3d:	push   0xc3d1dea9
  41de42:	ins    BYTE PTR es:[edi],dx
  41de43:	(bad)  
  41de44:	adc    DWORD PTR [esi+ecx*2],esi
  41de47:	inc    ebp
  41de48:	inc    edi
  41de49:	call   0x5163:0xd6f8f204
  41de50:	ret    
  41de51:	adc    cl,0x95
  41de54:	or     bh,dh
  41de56:	jecxz  0x41dde0
  41de58:	aad    0x64
  41de5a:	jns    0x41de8e
  41de5c:	repz fsub DWORD PTR ds:[ebx-0x1b6538cd]
  41de64:	sbb    eax,0xb3a26002
  41de69:	aaa    
  41de6a:	push   eax
  41de6b:	xchg   ebx,eax
  41de6c:	mov    ebp,DWORD PTR [edx]
  41de6e:	pop    ecx
  41de6f:	sbb    dh,BYTE PTR [eax-0x1499e496]
  41de75:	inc    edx
  41de76:	xchg   BYTE PTR cs:[ecx+0x23457cf4],bh
  41de7d:	pop    edi
  41de7e:	mov    edi,0xc6965d75
  41de83:	mov    ah,0xdf
  41de85:	mov    bl,0xeb
  41de87:	jp     0x41ded0
  41de89:	add    edx,edi
  41de8b:	dec    eax
  41de8c:	sub    esp,DWORD PTR [eax]
  41de8e:	pop    edx
  41de8f:	mov    al,0x4a
  41de91:	sahf   
  41de92:	push   0xc09109d4
  41de97:	pushf  
  41de98:	add    al,0x70
  41de9b:	mov    ah,BYTE PTR [ebp-0x51]
  41de9e:	(bad)  
  41de9f:	lahf   
  41dea0:	dec    DWORD PTR [ebx+0x5ed5a4a9]
  41dea6:	addr16 mov ds:0x7729,al
  41deaa:	ror    edi,0x53
  41dead:	ja     0x41de57
  41deaf:	mov    eax,fs
  41deb1:	inc    ebp
  41deb2:	or     bl,cl
  41deb4:	push   esi
  41deb5:	sub    BYTE PTR [edx],0x56
  41deb8:	imul   ecx,DWORD PTR [ecx+0x4e814e7b],0xfa43d9f8
  41dec2:	sti    
  41dec3:	pop    esi
  41dec4:	inc    eax
  41dec5:	adc    dl,bh
  41dec7:	pop    esi
  41dec8:	jnp    0x41de4a
  41deca:	or     al,0x5d
  41decc:	pop    ecx
  41decd:	dec    ebp
  41dece:	in     al,dx
  41decf:	add    eax,0xd2f5f071
  41ded4:	push   ebx
  41ded5:	imul   esi,edx,0x24
  41ded8:	fdiv   st,st(7)
  41deda:	lock outs dx,BYTE PTR ds:[esi]
  41dedc:	imul   BYTE PTR [edi]
  41dede:	lods   eax,DWORD PTR ds:[esi]
  41dedf:	and    al,0x94
  41dee1:	sbb    edi,DWORD PTR ds:0x9429601e
  41dee7:	sbb    esp,DWORD PTR [eax]
  41dee9:	loop   0x41de9b
  41deeb:	mov    dh,0x3e
  41deed:	pop    ebp
  41deee:	loop   0x41deca
  41def0:	iret   
  41def1:	jle    0x41deca
  41def3:	mov    cl,0x78
  41def5:	mov    ebp,0x75d53e32
  41defa:	retf   
  41defb:	ficom  DWORD PTR [eax]
  41defd:	or     ebx,DWORD PTR [edx+0x3e1df6fc]
  41df03:	mov    edx,0xee0212d4
  41df08:	pop    ecx
  41df09:	dec    DWORD PTR ss:[eax]
  41df0c:	test   al,0x9c
  41df0e:	lods   eax,DWORD PTR ds:[esi]
  41df0f:	jo     0x41df08
  41df11:	dec    ecx
  41df12:	ins    DWORD PTR es:[edi],dx
  41df13:	icebp  
  41df14:	pop    es
  41df15:	pop    eax
  41df16:	jp     0x41df66
  41df18:	(bad)  
  41df19:	push   ebx
  41df1a:	test   DWORD PTR gs:[esi+0x3734ea7a],ecx
  41df21:	lods   eax,DWORD PTR ds:[esi]
  41df22:	and    ebx,esp
  41df24:	mov    bh,ch
  41df26:	mov    bl,0x1e
  41df28:	ins    BYTE PTR es:[edi],dx
  41df29:	mov    eax,0x40169405
  41df2e:	iret   
  41df2f:	mov    ecx,0x921fe060
  41df34:	xchg   edx,eax
  41df35:	(bad)  [esp+ecx*1+0x33]
  41df39:	or     BYTE PTR [ebp+0x67],ch
  41df3c:	or     al,0xd6
  41df3e:	lds    edx,FWORD PTR [esi+0x18]
  41df41:	int3   
  41df42:	pop    ds
  41df43:	adc    eax,0x7aa7bbcf
  41df48:	jnp    0x41deed
  41df4a:	push   0xc0aa268c
  41df4f:	aad    0x5a
  41df51:	sbb    ebx,DWORD PTR [esp+edx*2-0x64]
  41df55:	sbb    edx,DWORD PTR ss:[eax]
  41df58:	popf   
  41df59:	dec    esi
  41df5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df5b:	fistp  QWORD PTR [eax]
  41df5d:	fsubr  DWORD PTR [eax+0x2]
  41df60:	test   BYTE PTR [ecx],0x9d
  41df63:	xor    edi,eax
  41df65:	dec    edx
  41df66:	jno    0x41df65
  41df68:	or     ecx,DWORD PTR [edi]
  41df6a:	xor    DWORD PTR [edi-0x5039b997],ebx
  41df70:	pop    esp
  41df71:	jl     0x41df8d
  41df73:	in     al,0xa4
  41df75:	inc    ebp
  41df76:	sbb    bl,BYTE PTR [ebp-0x6eef00d6]
  41df7c:	add    eax,0x4cb065ff
  41df81:	xchg   esi,eax
  41df82:	in     al,0x24
  41df84:	adc    DWORD PTR [ebx+0x61],edx
  41df87:	cmp    DWORD PTR [ebx-0x68],0x1b3868c0
  41df8e:	nop
  41df8f:	sbb    al,0xe8
  41df91:	cdq    
  41df92:	cmp    eax,0xeced34d3
  41df97:	adc    al,0x23
  41df99:	adc    eax,0x1f90bd3e
  41df9e:	test   eax,0x20699e86
  41dfa3:	adc    eax,0xb180485d
  41dfa8:	(bad)  
  41dfa9:	mov    bl,0xa5
  41dfab:	ret    0x436
  41dfae:	adc    al,0xf
  41dfb0:	(bad)  
  41dfb1:	lods   al,BYTE PTR ds:[esi]
  41dfb2:	adc    al,0xa6
  41dfb4:	push   edx
  41dfb5:	retf   0x1b4d
  41dfb8:	or     dl,dh
  41dfba:	sbb    BYTE PTR [esi],ah
  41dfbc:	icebp  
  41dfbd:	sbb    BYTE PTR [edx+0x150c1dd9],bl
  41dfc3:	test   BYTE PTR [edx],al
  41dfc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc6:	ds stc 
  41dfc8:	test   BYTE PTR [eax-0x23],dl
  41dfcb:	(bad)  
  41dfcc:	cld    
  41dfcd:	push   eax
  41dfce:	pop    ebx
  41dfcf:	xchg   ebx,eax
  41dfd0:	outs   dx,DWORD PTR ds:[esi]
  41dfd1:	dec    esi
  41dfd2:	push   cs
  41dfd3:	mov    cl,0x61
  41dfd5:	ja     0x41dfcd
  41dfd7:	xor    al,0x4f
  41dfd9:	push   0xa9a14fda
  41dfde:	jne    0x41e00f
  41dfe0:	aad    0xce
  41dfe2:	popa   
  41dfe3:	inc    edx
  41dfe4:	popf   
  41dfe5:	mov    esp,0x3c4f5462
  41dfea:	push   0xffffff95
  41dfec:	lods   eax,DWORD PTR ds:[esi]
  41dfed:	stos   BYTE PTR es:[edi],al
  41dfee:	adc    al,0x36
  41dff0:	bound  edx,QWORD PTR [ebp+0x6c]
  41dff3:	(bad)  
  41dff4:	pushf  
  41dff5:	gs (bad) 
  41dff8:	fld    DWORD PTR [ebx+0x1745a1a1]
  41dffe:	mov    ebp,0x2e6eeb3f
  41e003:	ss cwde 
  41e005:	call   0x1fe86e3f
  41e00a:	jl     0x41df9e
  41e00c:	ss jmp 0xc6a2:0x1d3f998c
  41e014:	push   esi
  41e015:	push   eax
  41e016:	cs mov ecx,0x2b8fec6b
  41e01c:	adc    ch,BYTE PTR [esi+0xb]
  41e01f:	fdivp  st(5),st
  41e021:	ret    0x9f3e
  41e024:	jno    0x41e041
  41e026:	scas   eax,DWORD PTR es:[edi]
  41e027:	ins    BYTE PTR es:[edi],dx
  41e028:	pop    esi
  41e029:	or     al,0x25
  41e02b:	int    0x1a
  41e02d:	leave  
  41e02e:	cmp    al,0x46
  41e030:	push   0x97ccb0c4
  41e035:	rcr    BYTE PTR [ebx+0x26],0xcb
  41e039:	cmp    esp,DWORD PTR [ebp+eax*2+0x49fc6f65]
  41e040:	lea    eax,[eax+ecx*4]
  41e043:	push   esp
  41e044:	pop    ds
  41e045:	in     al,dx
  41e046:	mov    WORD PTR [ecx-0x29],ds
  41e049:	in     eax,dx
  41e04a:	(bad)  [esi-0x65]
  41e04d:	add    esi,DWORD PTR [ebx-0x41]
  41e050:	jae    0x41e03f
  41e052:	jle    0x41e0a7
  41e054:	rcr    dh,0x64
  41e057:	sub    bh,BYTE PTR [ebp+0x6b16063e]
  41e05d:	inc    edx
  41e05e:	push   ss
  41e05f:	nop
  41e060:	fcom   DWORD PTR [ecx+0x1710e271]
  41e066:	mov    dh,0x95
  41e068:	imul   ebx,DWORD PTR [ecx],0x7d
  41e06b:	add    eax,0xf775db76
  41e070:	std    
  41e071:	bound  eax,QWORD PTR [edx-0xe]
  41e074:	outs   dx,BYTE PTR ds:[esi]
  41e075:	pop    eax
  41e076:	pop    esi
  41e077:	xor    al,0x31
  41e079:	sub    ebp,DWORD PTR [edx+eiz*1]
  41e07c:	mov    al,ds:0x6c76eeec
  41e081:	(bad)  
  41e082:	in     eax,dx
  41e083:	push   DWORD PTR [edx-0x1a]
  41e086:	mov    al,ds:0x4991f578
  41e08b:	jbe    0x41e034
  41e08d:	mov    bl,0x32
  41e08f:	sub    dl,BYTE PTR [edi-0x6a]
  41e092:	retf   0x39fa
  41e095:	and    dl,BYTE PTR [edi]
  41e097:	mov    BYTE PTR [eax-0x3ce1a69b],0x57
  41e09e:	aas    
  41e09f:	pushf  
  41e0a0:	push   ecx
  41e0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0a2:	push   esp
  41e0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0a4:	mov    ecx,0xf5c9af18
  41e0a9:	ret    0x8328
  41e0ac:	out    0x22,eax
  41e0ae:	inc    esi
  41e0af:	je     0x41e0be
  41e0b1:	in     al,0x18
  41e0b3:	shr    ebx,0x9f
  41e0b6:	shl    edi,cl
  41e0b8:	cmp    al,0x8
  41e0ba:	into   
  41e0bb:	out    0x7f,eax
  41e0bd:	dec    esi
  41e0be:	inc    edx
  41e0bf:	pop    esi
  41e0c0:	inc    ebp
  41e0c1:	loop   0x41e106
  41e0c3:	cmp    al,0xd9
  41e0c5:	das    
  41e0c6:	mov    edx,0x206bee09
  41e0cb:	(bad)  [edi-0x42c0545a]
  41e0d1:	cmp    ah,cl
  41e0d3:	xchg   edx,eax
  41e0d4:	jne    0x41e0d1
  41e0d6:	push   edi
  41e0d7:	pushf  
  41e0d8:	pop    ds
  41e0d9:	and    al,0x85
  41e0db:	lahf   
  41e0dc:	das    
  41e0dd:	mov    edx,0xb38c71e9
  41e0e2:	or     eax,0xfec075
  41e0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0e8:	loopne 0x41e144
  41e0ea:	loope  0x41e0bf
  41e0ec:	(bad)  
  41e0ee:	and    al,BYTE PTR [edi]
  41e0f0:	fs jnp 0x41e12d
  41e0f3:	in     al,0x45
  41e0f5:	sbb    al,0xb0
  41e0f7:	mov    cl,BYTE PTR [eax-0x3b8b9b3f]
  41e0fd:	push   cs
  41e0fe:	shl    DWORD PTR [edx-0x77],1
  41e101:	js     0x41e0ac
  41e103:	and    BYTE PTR [esi],al
  41e105:	ret    0x60b5
  41e108:	sub    DWORD PTR [edi+eax*2],0xb273a8ba
  41e10f:	loope  0x41e157
  41e111:	call   DWORD PTR [esi]
  41e113:	cs dec ebp
  41e115:	push   ecx
  41e116:	int3   
  41e117:	out    0x2d,al
  41e119:	es aam 0x87
  41e11c:	repnz or eax,0xa4cc09ae
  41e122:	push   edx
  41e123:	test   DWORD PTR [ebp+0x5f],edx
  41e126:	inc    esp
  41e127:	call   0x76005fad
  41e12c:	xchg   ebp,eax
  41e12d:	push   es
  41e12e:	leave  
  41e12f:	aas    
  41e130:	sti    
  41e131:	pop    ebx
  41e132:	cmp    eax,0x4b71cad3
  41e137:	rcl    BYTE PTR [eax-0x5a],0x4
  41e13b:	mov    cl,0x3e
  41e13d:	xchg   edx,eax
  41e13e:	sahf   
  41e13f:	in     al,dx
  41e140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e141:	xor    BYTE PTR [edi+eiz*2+0x25],0xa5
  41e146:	aaa    
  41e147:	sub    esp,esi
  41e149:	sub    DWORD PTR [eax-0xf7b5c4e],0x721d2a02
  41e153:	pop    ss
  41e154:	dec    ebx
  41e155:	scas   al,BYTE PTR es:[edi]
  41e156:	pop    es
  41e157:	retf   0xd20c
  41e15a:	std    
  41e15b:	xor    eax,0x3a8aa55
  41e160:	sbb    dl,BYTE PTR [eax+0x34]
  41e163:	mov    ecx,?
  41e165:	and    BYTE PTR [esi+ebx*1-0x49],0xe4
  41e16a:	inc    eax
  41e16b:	fisubr DWORD PTR [ecx+0x29cab394]
  41e171:	inc    esi
  41e172:	lock arpl WORD PTR [ebx-0x24a2a7d6],bp
  41e179:	adc    eax,0xfffffff3
  41e17c:	push   0xddc4012
  41e181:	sub    BYTE PTR [ecx-0x46e601d3],cl
  41e187:	leave  
  41e188:	(bad)  
  41e189:	stc    
  41e18a:	pop    ebp
  41e18b:	stc    
  41e18c:	call   0xbd9b:0x7e14ff76
  41e193:	ror    BYTE PTR [eax],1
  41e195:	xchg   ebx,eax
  41e196:	inc    esp
  41e197:	test   al,0x6f
  41e199:	stos   BYTE PTR es:[edi],al
  41e19a:	stos   BYTE PTR es:[edi],al
  41e19b:	pop    edi
  41e19c:	add    DWORD PTR [esi],ebx
  41e19e:	sbb    al,bl
  41e1a0:	dec    esp
  41e1a1:	lahf   
  41e1a2:	aas    
  41e1a3:	div    DWORD PTR [ebx-0x77]
  41e1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a7:	mov    ebx,0xfa970a64
  41e1ac:	loop   0x41e174
  41e1ae:	jle    0x41e1e1
  41e1b0:	adc    al,0xf7
  41e1b2:	xor    dh,BYTE PTR [ebx-0x4c668640]
  41e1b8:	push   esi
  41e1b9:	(bad)  
  41e1ba:	fiadd  WORD PTR ds:0x2d549bfe
  41e1c0:	shl    ah,1
  41e1c2:	hlt    
  41e1c3:	retf   0x10f3
  41e1c6:	retf   0x3fb6
  41e1c9:	mov    eax,0xb56a8168
  41e1ce:	je     0x41e1c1
  41e1d0:	xchg   ecx,eax
  41e1d1:	ffreep st(5)
  41e1d3:	je     0x41e1cb
  41e1d5:	fimul  WORD PTR [esi]
  41e1d7:	cmp    eax,0x16031481
  41e1dc:	cdq    
  41e1dd:	pop    ss
  41e1de:	push   cs
  41e1df:	dec    esi
  41e1e0:	inc    ebp
  41e1e1:	add    BYTE PTR [edi-0x6cf50cf1],bh
  41e1e7:	js     0x41e199
  41e1e9:	stos   DWORD PTR es:[edi],eax
  41e1ea:	stos   DWORD PTR es:[edi],eax
  41e1eb:	sbb    BYTE PTR [ebp+0x1e47b29c],ch
  41e1f1:	add    DWORD PTR [eax+0x57],ebp
  41e1f4:	fsubr  QWORD PTR [esi+0x23107df7]
  41e1fa:	jp     0x41e1a1
  41e1fc:	stc    
  41e1fd:	icebp  
  41e1fe:	repz sub ch,BYTE PTR [ecx-0x1e]
  41e202:	dec    esp
  41e203:	in     eax,0x9
  41e205:	cld    
  41e206:	jmp    0xaf30:0xcf42506b
  41e20d:	jo     0x41e22f
  41e20f:	out    dx,al
  41e210:	stos   DWORD PTR es:[edi],eax
  41e211:	mov    edi,0x36f4bfcc
  41e216:	push   ebx
  41e217:	test   eax,0x9e0c0245
  41e21c:	ja     0x41e259
  41e21e:	fstp   DWORD PTR [edx]
  41e220:	sub    BYTE PTR [edx-0x37],ch
  41e223:	xchg   ebp,eax
  41e224:	pusha  
  41e225:	sbb    ah,BYTE PTR [ebx-0x3ee61c0b]
  41e22b:	xor    edi,DWORD PTR [edi+0x39c96cb5]
  41e231:	mov    ebx,0xf118ace5
  41e236:	hlt    
  41e237:	cmp    eax,0x757f61cf
  41e23c:	pusha  
  41e23d:	add    esp,DWORD PTR [esi-0x76880e0d]
  41e243:	jb     0x41e1f9
  41e245:	push   cs
  41e246:	mov    ah,dh
  41e248:	jmp    0x41e281
  41e24a:	cmp    bl,BYTE PTR [ebp+eax*4-0x6c273a7e]
  41e251:	inc    esp
  41e252:	push   esi
  41e253:	push   0xac4da2e8
  41e258:	fbstp  TBYTE PTR [esi-0x53123795]
  41e25e:	xchg   esi,eax
  41e25f:	fisttp WORD PTR [eax+0x1c]
  41e262:	bound  edx,QWORD PTR ds:0xccdb3369
  41e268:	cmp    BYTE PTR [ecx-0xd1748fb],dh
  41e26e:	(bad)  
  41e270:	enter  0xd540,0x30
  41e274:	push   esi
  41e275:	(bad)  
  41e276:	lods   al,BYTE PTR ds:[esi]
  41e277:	clc    
  41e278:	stos   BYTE PTR es:[edi],al
  41e279:	sbb    eax,0x4a9f78df
  41e27e:	gs xchg edi,eax
  41e280:	je     0x41e221
  41e282:	enter  0xc5a6,0x63
  41e286:	pop    edi
  41e287:	mov    edi,0x2314d1cc
  41e28c:	dec    ebx
  41e28d:	mov    esp,0x339ae64e
  41e292:	stos   DWORD PTR es:[edi],eax
  41e293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e294:	xchg   ecx,eax
  41e295:	ror    BYTE PTR [edx+ecx*1-0x70763cb2],cl
  41e29c:	jle    0x41e2d3
  41e29e:	sub    BYTE PTR [ecx],dh
  41e2a0:	lock pop ss
  41e2a2:	out    0x13,eax
  41e2a4:	cwde   
  41e2a5:	pushf  
  41e2a6:	fldcw  WORD PTR [esi]
  41e2a8:	sub    al,0x91
  41e2aa:	dec    esp
  41e2ab:	nop
  41e2ac:	or     ebp,DWORD PTR [eax+0x45]
  41e2af:	mov    ds:0x7324971a,eax
  41e2b4:	div    BYTE PTR [esi+0x71dc8f27]
  41e2ba:	das    
  41e2bb:	call   0xdbc91170
  41e2c0:	sbb    DWORD PTR [esi-0x7dd92f27],ecx
  41e2c6:	(bad)  
  41e2c7:	call   0xe0bdda0c
  41e2cc:	fcmovnbe st,st(3)
  41e2ce:	pop    esi
  41e2cf:	xchg   ebp,eax
  41e2d0:	shr    esi,cl
  41e2d2:	fist   DWORD PTR fs:[ebp-0x7f]
  41e2d6:	pushf  
  41e2d7:	adc    al,0x11
  41e2d9:	sbb    edi,ebx
  41e2db:	push   esi
  41e2dc:	stc    
  41e2dd:	dec    edx
  41e2de:	fstp   QWORD PTR ds:0xbef0198a
  41e2e4:	sahf   
  41e2e5:	xor    dl,ch
  41e2e7:	adc    ch,bh
  41e2e9:	jecxz  0x41e2e4
  41e2eb:	push   es
  41e2ec:	push   ebx
  41e2ed:	jl     0x41e29a
  41e2ef:	mov    edx,0x1f11d422
  41e2f4:	popa   
  41e2f5:	fsubr  QWORD PTR [edx+0x57bc9629]
  41e2fb:	mov    ebx,0x6dadbdb3
  41e300:	fldcw  WORD PTR [ebx]
  41e302:	push   eax
  41e303:	clc    
  41e304:	xor    DWORD PTR [edi],ecx
  41e306:	xchg   ebx,eax
  41e307:	pop    ebp
  41e308:	and    al,0xae
  41e30a:	xchg   ebp,eax
  41e30b:	push   cs
  41e30c:	aaa    
  41e30d:	enter  0x4de8,0xce
  41e311:	jge    0x41e382
  41e313:	ficomp WORD PTR [eax+0x1bb81032]
  41e319:	leave  
  41e31a:	pop    edx
  41e31b:	dec    edi
  41e31c:	xchg   esp,eax
  41e31e:	cmp    al,0x52
  41e320:	mov    dl,0x3e
  41e322:	invd   
  41e324:	pop    eax
  41e325:	and    DWORD PTR [eax-0xf],edi
  41e328:	mov    eax,0x46fe29eb
  41e32d:	sub    dl,BYTE PTR [edi+0x48]
  41e330:	in     al,0x8e
  41e332:	jecxz  0x41e3ab
  41e334:	clc    
  41e335:	fst    QWORD PTR [ecx]
  41e337:	or     al,0xfc
  41e339:	and    DWORD PTR [edx],ebx
  41e33b:	dec    ecx
  41e33c:	or     eax,0x35ed73eb
  41e341:	or     dl,BYTE PTR [ebp-0xb2114df]
  41e347:	sub    al,0xd7
  41e349:	mov    al,ds:0x684335ba
  41e34e:	mov    esp,eax
  41e350:	inc    eax
  41e351:	lahf   
  41e352:	shl    ebx,cl
  41e354:	and    BYTE PTR [edi],cl
  41e356:	cmp    al,0xa5
  41e358:	and    DWORD PTR [ebp-0x24],edi
  41e35b:	aam    0x51
  41e35d:	data16 jg 0x41e34a
  41e360:	cmp    al,0x4e
  41e362:	cli    
  41e363:	push   0xd63e5737
  41e368:	std    
  41e369:	or     esi,DWORD PTR [eax]
  41e36b:	jbe    0x41e2fc
  41e36d:	iret   
  41e36e:	repnz out dx,al
  41e370:	sbb    eax,0x6a44deb6
  41e375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e376:	dec    eax
  41e377:	mov    ebx,0xb350ab71
  41e37c:	dec    ecx
  41e37d:	xlat   BYTE PTR ds:[ebx]
  41e37e:	pop    es
  41e37f:	pop    ecx
  41e380:	xchg   edi,eax
  41e381:	sub    al,0xf3
  41e384:	sbb    al,0x4e
  41e386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e387:	and    DWORD PTR [esi+0x6a],ecx
  41e38a:	mov    edx,0x711bb61f
  41e38f:	or     eax,0x94aa940d
  41e394:	das    
  41e395:	sub    BYTE PTR [ebx+0xc],0x4
  41e399:	xchg   edi,eax
  41e39a:	loope  0x41e35c
  41e39c:	popf   
  41e39d:	pop    eax
  41e39e:	out    0x3,al
  41e3a0:	sbb    bh,BYTE PTR [ebx]
  41e3a2:	je     0x41e3f3
  41e3a4:	scas   al,BYTE PTR es:[edi]
  41e3a5:	dec    ebx
  41e3a6:	sbb    eax,edx
  41e3a8:	les    ecx,FWORD PTR [edx-0x48]
  41e3ab:	add    edx,DWORD PTR [edi]
  41e3ad:	fiadd  DWORD PTR [ebx+edi*4]
  41e3b0:	lock cmp ch,BYTE PTR [esi+eax*4-0x2b]
  41e3b5:	fcomp  QWORD PTR ds:0xbb628b5b
  41e3bb:	mov    ds:0x44f963ab,al
  41e3c0:	xchg   esi,eax
  41e3c1:	mov    DWORD PTR [eax-0x71],esi
  41e3c4:	jmp    0x41e3e4
  41e3c6:	xor    ah,BYTE PTR [esi+ebp*2-0x7e2e581b]
  41e3cd:	test   al,0x77
  41e3cf:	in     al,dx
  41e3d0:	push   cs
  41e3d1:	and    DWORD PTR [esp+ebp*1-0x2c],esp
  41e3d5:	mov    bh,0xc2
  41e3d7:	adc    ebx,edi
  41e3d9:	jl     0x41e3bc
  41e3db:	nop
  41e3dc:	cs xor eax,0xf049e9d5
  41e3e2:	xchg   esp,eax
  41e3e3:	dec    ecx
  41e3e4:	and    eax,0x1e8a6bad
  41e3e9:	test   edx,ebx
  41e3eb:	xchg   esp,eax
  41e3ec:	lahf   
  41e3ed:	or     eax,0x39ffa69f
  41e3f2:	xchg   edx,eax
  41e3f3:	xor    al,0xa1
  41e3f5:	sub    DWORD PTR [ebp+0x77280f84],esi
  41e3fb:	inc    ecx
  41e3fc:	push   eax
  41e3fd:	sub    BYTE PTR [edx+0x1c],0x10
  41e401:	xlat   BYTE PTR ds:[ebx]
  41e402:	pop    ds
  41e403:	push   ecx
  41e404:	xchg   esi,eax
  41e405:	jae    0x41e3ee
  41e407:	mov    bl,0x66
  41e409:	inc    edi
  41e40a:	mov    ah,0x5b
  41e40c:	sub    BYTE PTR [edi-0x6289bebe],0x27
  41e413:	loope  0x41e3fe
  41e415:	mov    ebp,0x8fb1d3b4
  41e41a:	push   ds
  41e41b:	jae    0x41e48e
  41e41d:	sub    BYTE PTR [edi-0x35],bl
  41e420:	ja     0x41e476
  41e422:	cli    
  41e423:	mov    ch,0x1c
  41e425:	sub    edx,edx
  41e427:	fnstenv [edi]
  41e429:	sub    BYTE PTR [ecx+0x5ae67664],dh
  41e42f:	es push es
  41e431:	popf   
  41e432:	push   edi
  41e433:	jge    0x41e3fd
  41e435:	es dec esi
  41e437:	bound  eax,QWORD PTR [eax+0x4a]
  41e43a:	pusha  
  41e43b:	in     eax,dx
  41e43c:	cli    
  41e43d:	leave  
  41e43e:	mov    ds:0xd9c65427,eax
  41e443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e444:	mov    edx,0xd8826a58
  41e449:	add    eax,0xad68b68f
  41e44e:	es mov ah,0xd9
  41e451:	aad    0x8d
  41e453:	repnz outs dx,BYTE PTR ds:[esi]
  41e455:	jmp    0x41e471
  41e457:	(bad)  
  41e458:	push   ecx
  41e459:	mov    esp,0xf6800e80
  41e45e:	sahf   
  41e45f:	(bad)
  41e462:	stc    
  41e463:	jb     0x41e4ae
  41e465:	xchg   edx,eax
  41e466:	or     al,0xed
  41e468:	daa    
  41e469:	mov    ds,WORD PTR [ecx]
  41e46b:	add    ebp,DWORD PTR [ebp-0x2a69fe12]
  41e471:	inc    esi
  41e472:	(bad)  
  41e473:	fcomp  DWORD PTR [eax+eiz*2+0x1f73f4a6]
  41e47a:	xchg   edx,eax
  41e47b:	dec    esp
  41e47c:	mov    bl,0x4c
  41e47e:	(bad)  
  41e480:	lods   al,BYTE PTR ds:[esi]
  41e481:	xchg   DWORD PTR [ebp-0x7f],ecx
  41e484:	daa    
  41e485:	fcomip st,st(7)
  41e487:	repnz loop 0x41e435
  41e48a:	rcl    ecx,0x84
  41e48d:	outs   dx,BYTE PTR ds:[esi]
  41e48e:	push   0x2c884da
  41e493:	test   DWORD PTR [bx],edx
  41e496:	cmp    BYTE PTR [ecx-0x690227bb],ch
  41e49c:	mov    ebx,0xad3c588d
  41e4a1:	in     eax,dx
  41e4a2:	out    0x37,eax
  41e4a4:	and    eax,0x91b962f6
  41e4a9:	loope  0x41e4e2
  41e4ab:	push   esp
  41e4ac:	sbb    bh,ch
  41e4ae:	mov    dl,0x71
  41e4b0:	pop    ss
  41e4b1:	arpl   di,cx
  41e4b3:	nop
  41e4b4:	aad    0x22
  41e4b6:	mov    edi,0xee5f138a
  41e4bb:	jle    0x41e46c
  41e4bd:	mov    eax,ds:0x28da69d4
  41e4c2:	or     esi,DWORD PTR [eax-0x307f6b09]
  41e4c8:	retf   
  41e4c9:	push   ebp
  41e4ca:	push   ds
  41e4cb:	dec    DWORD PTR [edi]
  41e4cd:	test   al,0xe9
  41e4cf:	cmc    
  41e4d0:	sub    eax,0x5dc08c87
  41e4d5:	jbe    0x41e4c8
  41e4d7:	stc    
  41e4d8:	sbb    BYTE PTR ds:0x2cb18425,bh
  41e4de:	pusha  
  41e4df:	out    0x5c,al
  41e4e1:	mov    ds:0x19493316,eax
  41e4e6:	jns    0x41e50e
  41e4e8:	xchg   ebp,eax
  41e4e9:	test   BYTE PTR [edi-0x55f5dc8c],bh
  41e4ef:	jae    0x41e4c7
  41e4f1:	xchg   BYTE PTR [eax],dh
  41e4f3:	xor    eax,0x2116643d
  41e4f8:	dec    eax
  41e4f9:	rcl    al,0xc5
  41e4fc:	mov    edx,0x4e1c48d3
  41e501:	test   al,0x4d
  41e503:	loop   0x41e4f6
  41e505:	xchg   DWORD PTR [eax-0x19],ebx
  41e508:	lahf   
  41e509:	add    BYTE PTR [esi-0xe],ah
  41e50c:	sub    DWORD PTR [edi-0x2b],0x51f7279b
  41e513:	ins    BYTE PTR es:[edi],dx
  41e514:	fstp   DWORD PTR [ebp-0x62201928]
  41e51a:	sbb    esp,DWORD PTR ds:0x840e6098
  41e520:	and    cl,BYTE PTR [ebp-0x718cfdd6]
  41e526:	jp     0x41e4ac
  41e528:	mov    al,0x2c
  41e52a:	mov    es,WORD PTR [ebp+0x17d01e22]
  41e530:	jge    0x41e57b
  41e532:	adc    al,0x73
  41e534:	sub    BYTE PTR [eax],0x42
  41e537:	dec    eax
  41e538:	pop    ds
  41e539:	pop    ds
  41e53a:	call   0x60fede4e
  41e53f:	lods   al,BYTE PTR ds:[esi]
  41e540:	inc    edx
  41e541:	fst    QWORD PTR [ebp-0x18]
  41e544:	fwait
  41e545:	and    ebp,ecx
  41e547:	mov    edi,0x96d78a2
  41e54c:	mov    eax,0xae48547
  41e551:	xchg   DWORD PTR [ebx-0x7],ebp
  41e554:	mov    edx,0x323091e7
  41e559:	pop    ebx
  41e55a:	dec    edx
  41e55b:	and    cl,bh
  41e55d:	daa    
  41e55e:	sub    al,0x40
  41e560:	repz sub DWORD PTR [eax],edi
  41e563:	mov    edi,0x853b16b0
  41e568:	in     al,0x8
  41e56a:	jp     0x41e54f
  41e56c:	sub    esp,edi
  41e56e:	sub    bh,BYTE PTR [edi+0x26]
  41e571:	xchg   ebp,eax
  41e572:	call   0x6e45:0x44651393
  41e579:	retf   
  41e57a:	fisttp DWORD PTR [ecx-0x1e]
  41e57d:	mov    ch,0xf
  41e57f:	shr    eax,0x55
  41e582:	(bad)  
  41e583:	xor    ah,bh
  41e585:	mov    edx,0x809103a9
  41e58a:	add    eax,0x70fcdd15
  41e58f:	jge    0x41e5df
  41e591:	sbb    eax,0xb0aad582
  41e596:	daa    
  41e597:	cmc    
  41e598:	es es inc esp
  41e59b:	lahf   
  41e59c:	or     edi,edi
  41e59e:	push   edx
  41e59f:	mov    DWORD PTR [ecx+esi*8],edi
  41e5a2:	xchg   esi,eax
  41e5a3:	cmp    eax,DWORD PTR ds:0x29c59a9a
  41e5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5aa:	inc    ecx
  41e5ab:	js     0x41e59e
  41e5ad:	adc    eax,0x794f46a5
  41e5b2:	jp     0x41e536
  41e5b4:	inc    esp
  41e5b5:	mov    ch,0x5b
  41e5b7:	retf   0xa9ee
  41e5ba:	dec    edx
  41e5bb:	jecxz  0x41e5dd
  41e5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5be:	sub    al,0x8e
  41e5c0:	das    
  41e5c1:	push   edx
  41e5c2:	mov    WORD PTR gs:[eax-0x3c82f103],gs
  41e5c9:	sub    ecx,DWORD PTR [ebp+0x46]
  41e5cc:	pop    edi
  41e5cd:	lahf   
  41e5ce:	jl     0x41e5e3
  41e5d0:	cmp    eax,0x2e21827e
  41e5d5:	in     eax,0xd5
  41e5d7:	jle    0x41e645
  41e5d9:	mov    ebp,0x83ec800c
  41e5de:	xor    BYTE PTR [edx-0x60c498d1],0x6e
  41e5e5:	rol    BYTE PTR [edx+0x46202e5],cl
  41e5eb:	sbb    cl,bl
  41e5ed:	stc    
  41e5ee:	(bad)  
  41e5ef:	pop    esi
  41e5f0:	cs ins WORD PTR es:[edi],dx
  41e5f3:	push   edx
  41e5f4:	xchg   ecx,eax
  41e5f5:	inc    edx
  41e5f6:	out    dx,eax
  41e5f7:	outs   dx,BYTE PTR ds:[esi]
  41e5f8:	jg     0x41e5e9
  41e5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5fb:	push   esp
  41e5fc:	or     BYTE PTR [edi],bh
  41e5fe:	fisub  WORD PTR [edi-0x62]
  41e601:	ins    BYTE PTR es:[edi],dx
  41e602:	cwde   
  41e603:	or     DWORD PTR ds:0x1de215a0,0xfb396511
  41e60d:	or     ecx,eax
  41e60f:	ins    BYTE PTR es:[edi],dx
  41e610:	clc    
  41e611:	sbb    edx,DWORD PTR [ebx+0x2690dd25]
  41e617:	inc    eax
  41e618:	push   cs
  41e619:	jecxz  0x41e619
  41e61b:	push   eax
  41e61c:	mov    ds,WORD PTR [ecx]
  41e61e:	sahf   
  41e61f:	xor    eax,0xbf21ef93
  41e624:	dec    ebp
  41e625:	xor    esp,esp
  41e627:	jmp    0x711a30b6
  41e62c:	cwde   
  41e62d:	imul   edx,esi,0xffffff9a
  41e630:	dec    eax
  41e631:	add    al,0x2e
  41e633:	jmp    0x41e664
  41e635:	daa    
  41e636:	push   edi
  41e637:	xchg   edx,eax
  41e638:	(bad)  
  41e639:	and    edi,edi
  41e63b:	push   es
  41e63c:	dec    eax
  41e63d:	out    dx,eax
  41e63e:	fwait
  41e63f:	repnz pusha 
  41e641:	imul   edi,esi,0x6de4c59a
  41e647:	xor    eax,DWORD PTR [edi]
  41e649:	data16 stos BYTE PTR es:[edi],al
  41e64b:	into   
  41e64c:	jb     0x41e5f5
  41e64e:	sbb    eax,0xe33ff3fa
  41e653:	mov    esi,0xa35109c7
  41e658:	pusha  
  41e659:	sub    edi,edi
  41e65b:	jecxz  0x41e5e9
  41e65d:	jmp    0x7990:0xa04d0515
  41e664:	xor    bl,cl
  41e666:	xor    al,0x21
  41e668:	sbb    al,0x49
  41e66a:	sbb    dh,BYTE PTR [edx+0x7e3544bd]
  41e670:	loopne 0x41e6b9
  41e672:	pop    ecx
  41e673:	cmp    DWORD PTR [ecx+0xf],eax
  41e676:	test   al,0x41
  41e678:	repnz mov esp,0x7c0b836e
  41e67e:	loope  0x41e6cd
  41e680:	push   ebx
  41e681:	(bad)
  41e685:	in     al,0xae
  41e687:	pop    edi
  41e688:	pop    ss
  41e689:	ret    0x21ad
  41e68c:	cmc    
  41e68d:	inc    edi
  41e68e:	aam    0x13
  41e690:	xchg   bp,ax
  41e692:	adc    DWORD PTR [esp+eiz*2-0x58b6e4c1],esp
  41e699:	sti    
  41e69a:	inc    esp
  41e69b:	mov    eax,ds:0x98df7ad6
  41e6a0:	inc    edx
  41e6a1:	cmp    BYTE PTR [edx+ebx*2],dl
  41e6a4:	or     al,0xe9
  41e6a6:	(bad)  
  41e6a7:	rol    bh,1
  41e6a9:	bswap  edi
  41e6ab:	xor    DWORD PTR [edi-0x58b13d7b],0x6f
  41e6b2:	dec    ebp
  41e6b3:	lahf   
  41e6b4:	lock test DWORD PTR [ebp-0x21],esi
  41e6b8:	sti    
  41e6b9:	xor    eax,DWORD PTR [ebx+esi*1+0x650c7d52]
  41e6c0:	adc    edi,eax
  41e6c2:	(bad)  
  41e6c3:	mov    eax,ds:0xbfcac223
  41e6c8:	mov    bl,0xf4
  41e6ca:	idiv   dl
  41e6cc:	(bad)  
  41e6cd:	fistp  QWORD PTR [ebp-0x16]
  41e6d0:	jmp    0x41e656
  41e6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6d3:	adc    al,0x5b
  41e6d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6d6:	inc    edx
  41e6d7:	lahf   
  41e6d8:	cld    
  41e6d9:	pop    ebp
  41e6da:	test   ebx,esi
  41e6dc:	loop   0x41e707
  41e6de:	je     0x41e6c8
  41e6e0:	nop
  41e6e1:	and    esp,ebp
  41e6e3:	pop    ss
  41e6e4:	dec    esp
  41e6e5:	call   0xfd53:0xd9a40527
  41e6ec:	(bad)  
  41e6ed:	scas   al,BYTE PTR es:[edi]
  41e6ee:	sahf   
  41e6ef:	test   DWORD PTR [eax+0x2a007d72],esp
  41e6f5:	ficomp DWORD PTR [esi+esi*4+0x27]
  41e6f9:	(bad)  [edx]
  41e6fb:	xchg   esi,eax
  41e6fc:	repz lahf 
  41e6fe:	(bad)
  41e701:	mov    ds:0x76c35a49,eax
  41e706:	loope  0x41e715
  41e708:	imul   esi,DWORD PTR [ebp+0x45],0xfa21f6d4
  41e70f:	aad    0x85
  41e711:	inc    ecx
  41e712:	aad    0xa6
  41e714:	mov    edx,0xac878129
  41e719:	add    edi,DWORD PTR [edx+0x69]
  41e71c:	sti    
  41e71d:	jae    0x41e768
  41e71f:	out    0x98,al
  41e721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e722:	nop
  41e723:	sbb    edi,DWORD PTR [ecx-0x27ff88a]
  41e729:	push   esi
  41e72a:	pfmul  mm4,QWORD PTR [edx+ebp*1]
  41e72f:	das    
  41e730:	adc    esp,edx
  41e732:	or     DWORD PTR [ebp+0x2b],0x4136a254
  41e739:	fadd   DWORD PTR [edi]
  41e73b:	call   0xd3b1:0x9c875b16
  41e742:	setp   BYTE PTR [ebp+0x18]
  41e746:	leave  
  41e747:	xchg   ebx,eax
  41e748:	cli    
  41e749:	or     DWORD PTR es:[esi+0x46668952],eax
  41e750:	dec    ebx
  41e751:	cli    
  41e752:	jp     0x41e72f
  41e754:	test   edi,edi
  41e756:	cmp    esp,DWORD PTR [ecx]
  41e758:	rol    ch,1
  41e75a:	hlt    
  41e75b:	mov    cl,0xcd
  41e75d:	pusha  
  41e75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e75f:	xor    eax,0x4e0dc4b9
  41e764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e765:	push   ds
  41e766:	mov    dh,0xf7
  41e768:	pushf  
  41e769:	lahf   
  41e76a:	or     eax,0x94b94b96
  41e76f:	inc    ebx
  41e770:	lahf   
  41e771:	jns    0x41e7e6
  41e773:	or     eax,0x3e209d7e
  41e778:	retf   
  41e779:	in     al,0x66
  41e77b:	pop    edx
  41e77c:	fstp   QWORD PTR ds:0xd3885b70
  41e782:	shr    BYTE PTR [ebx+0x119373a1],0x7f
  41e789:	in     eax,dx
  41e78a:	pop    ebp
  41e78b:	push   es
  41e78c:	sbb    BYTE PTR [edx+eax*8],0x90
  41e790:	mov    al,ds:0x634aec12
  41e795:	sbb    dl,BYTE PTR [esi]
  41e797:	clc    
  41e798:	mov    ch,0xbe
  41e79a:	iret   
  41e79b:	inc    eax
  41e79c:	inc    esi
  41e79d:	inc    ebp
  41e79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e79f:	mov    ebx,0x56ba552a
  41e7a4:	in     al,dx
  41e7a5:	shr    edi,cl
  41e7a7:	adc    eax,0x1579da6b
  41e7ac:	cmp    eax,0x9caf29f6
  41e7b1:	lahf   
  41e7b2:	scas   eax,DWORD PTR es:[edi]
  41e7b3:	adc    BYTE PTR [edi-0x11b5cc23],0xc2
  41e7ba:	mov    eax,0xa7e63f6d
  41e7bf:	sbb    al,0xea
  41e7c1:	sbb    BYTE PTR gs:[ebx+0x78646a2a],bl
  41e7c8:	pop    edi
  41e7c9:	dec    edx
  41e7ca:	dec    eax
  41e7cb:	int3   
  41e7cc:	dec    esp
  41e7cd:	or     DWORD PTR [edi],ecx
  41e7cf:	pop    es
  41e7d0:	lods   al,BYTE PTR ds:[esi]
  41e7d1:	jmp    0x41e7ca
  41e7d3:	ss aas 
  41e7d5:	imul   esp,DWORD PTR [esi],0xffffff87
  41e7d8:	mov    ds:0xb0d02967,al
  41e7dd:	jo     0x41e84e
  41e7df:	outs   dx,DWORD PTR ds:[esi]
  41e7e0:	xor    DWORD PTR [edx-0x1c637c7],0xffffffaa
  41e7e7:	cmc    
  41e7e8:	test   eax,0x93ce241d
  41e7ed:	fcomp  DWORD PTR [edx-0x4134ff1b]
  41e7f3:	sbb    eax,0xe711ba6d
  41e7f8:	nop
  41e7f9:	arpl   WORD PTR [ecx-0x71],cx
  41e7fc:	mov    edi,0x1cfb74e0
  41e801:	adc    eax,0xcadc1c12
  41e806:	je     0x41e7b5
  41e808:	pop    ss
  41e809:	shr    BYTE PTR [esi-0x41e38a6a],0xd2
  41e810:	cs sti 
  41e812:	xor    BYTE PTR [esi+0x22357632],dl
  41e818:	pop    ecx
  41e819:	xlat   BYTE PTR ds:[ebx]
  41e81a:	jo     0x41e897
  41e81c:	mov    ah,0x36
  41e81e:	pop    ss
  41e81f:	dec    ebp
  41e820:	loopne 0x41e7d1
  41e822:	stos   DWORD PTR es:[edi],eax
  41e823:	cld    
  41e824:	call   0x4eb68cd1
  41e829:	mov    ebx,ebp
  41e82b:	adc    cl,bh
  41e82d:	inc    esi
  41e82e:	sub    esp,DWORD PTR [edi+0x4d]
  41e831:	sub    BYTE PTR cs:[ebp+0x60a53bcd],bl
  41e838:	and    edi,esi
  41e83a:	mov    dh,0xca
  41e83c:	mov    ds:0xf338438f,al
  41e841:	jecxz  0x41e8a4
  41e843:	xchg   ecx,eax
  41e844:	shl    BYTE PTR [esi+0x65a477d0],1
  41e84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e84b:	test   eax,0x98ff0415
  41e850:	inc    edi
  41e851:	add    DWORD PTR ds:0xcdb35449,0xae67b245
  41e85b:	sub    eax,DWORD PTR [ecx+0x7d0c617e]
  41e861:	mov    ebx,0x9b7955cc
  41e866:	push   eax
  41e867:	adc    al,0x7f
  41e869:	jp     0x41e878
  41e86b:	push   ebx
  41e86c:	pop    edx
  41e86d:	and    esi,DWORD PTR [edx]
  41e86f:	inc    ebp
  41e870:	imul   ebx,ebp,0xe49848e2
  41e876:	xor    DWORD PTR [ebp+0x3414c35d],ebp
  41e87c:	push   ecx
  41e87d:	pop    es
  41e87e:	jmp    0x41e88a
  41e880:	cmc    
  41e881:	adc    eax,0xb79f5166
  41e886:	pop    ebp
  41e887:	xchg   ebx,eax
  41e888:	mov    edi,0x65876965
  41e88d:	xor    eax,0xa80a192c
  41e892:	and    eax,edx
  41e894:	dec    esp
  41e895:	or     DWORD PTR [esi+0x3f],edi
  41e898:	jo     0x41e8da
  41e89a:	add    BYTE PTR [esi],bl
  41e89c:	push   eax
  41e89d:	lods   eax,DWORD PTR ds:[esi]
  41e89e:	hlt    
  41e89f:	jmp    0x41e860
  41e8a1:	(bad)  
  41e8a2:	jne    0x41e8d7
  41e8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8a5:	push   es
  41e8a6:	(bad)
  41e8a9:	das    
  41e8aa:	xchg   ebx,eax
  41e8ab:	pop    edi
  41e8ac:	(bad)  
  41e8ad:	cmp    cl,al
  41e8af:	dec    edx
  41e8b0:	pop    esp
  41e8b1:	pop    esp
  41e8b2:	mov    WORD PTR [ecx-0x69],fs
  41e8b5:	into   
  41e8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8b7:	push   cs
  41e8b8:	add    esi,DWORD PTR [ecx]
  41e8ba:	mov    esp,0xb64cae2d
  41e8bf:	orps   xmm6,xmm3
  41e8c2:	jno    0x41e85a
  41e8c4:	sbb    cl,BYTE PTR [ebx-0x6ceef4da]
  41e8ca:	or     ch,bh
  41e8cc:	adc    al,0xa2
  41e8ce:	fs pop ss
  41e8d0:	cwde   
  41e8d1:	adc    BYTE PTR [edi],al
  41e8d3:	aaa    
  41e8d4:	mov    bh,0x93
  41e8d6:	dec    ecx
  41e8d7:	sbb    BYTE PTR [edi+0x77],ch
  41e8da:	fdivr  DWORD PTR [ebx-0x73]
  41e8dd:	retf   
  41e8de:	hlt    
  41e8df:	sbb    BYTE PTR [bp+0x3f],dl
  41e8e3:	sti    
  41e8e4:	push   es
  41e8e5:	pop    eax
  41e8e6:	and    BYTE PTR [ecx+0x79a1a171],cl
  41e8ec:	in     eax,0x64
  41e8ee:	rcl    BYTE PTR [ecx+0x6b],1
  41e8f1:	mov    ds:0x36301ede,al
  41e8f6:	add    BYTE PTR [ecx],bl
  41e8f8:	neg    ah
  41e8fa:	gs jne 0x41e917
  41e8fd:	loope  0x41e8f4
  41e8ff:	dec    eax
  41e900:	add    eax,0x89ae39f0
  41e905:	pop    esi
  41e906:	js     0x41e981
  41e908:	or     esi,DWORD PTR [ebx+0x37]
  41e90b:	inc    eax
  41e90c:	mov    ah,0xb
  41e90e:	sbb    eax,esi
  41e910:	fst    DWORD PTR [edx]
  41e912:	pop    es
  41e913:	repz inc ebx
  41e915:	cs mov cl,0xff
  41e918:	fimul  DWORD PTR [edx]
  41e91a:	mov    bh,BYTE PTR [esi+0x7f]
  41e91d:	adc    eax,0xc03684f7
  41e922:	sbb    ch,BYTE PTR [ebp+0xc96e777]
  41e928:	push   ebx
  41e929:	inc    ebx
  41e92a:	test   eax,0xc44a70b
  41e92f:	inc    ebp
  41e930:	mov    edx,0xf557d969
  41e935:	out    0x4,eax
  41e937:	into   
  41e938:	arpl   WORD PTR [ebx],sp
  41e93a:	jge    0x41e937
  41e93c:	mov    edi,esp
  41e93e:	xchg   ebx,eax
  41e93f:	inc    edi
  41e940:	mov    bl,0x47
  41e942:	lea    esi,[edx]
  41e944:	fwait
  41e945:	push   cs
  41e946:	add    al,0xee
  41e948:	mov    WORD PTR [ebx-0x29],es
  41e94b:	jnp    0x41e948
  41e94d:	sbb    al,0xc4
  41e94f:	les    ebp,FWORD PTR [eax-0x3c51198]
  41e955:	mov    cl,0xca
  41e957:	les    ebx,FWORD PTR [ecx+0x6040990d]
  41e95d:	sub    BYTE PTR [ecx-0x2f6c03c0],dh
  41e963:	aaa    
  41e964:	xor    eax,0xdf1f391e
  41e969:	pop    ss
  41e96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e96b:	inc    edx
  41e96c:	jmp    0x41e9a8
  41e96e:	test   al,0xa7
  41e970:	pop    edx
  41e971:	adc    al,0x1a
  41e973:	xchg   BYTE PTR [eax-0x2c],bh
  41e976:	rcl    edx,0x7b
  41e979:	(bad)  [edi+0x3165a815]
  41e97f:	sti    
  41e980:	gs dec ecx
  41e982:	sahf   
  41e983:	int    0x5f
  41e985:	outs   dx,BYTE PTR ds:[esi]
  41e986:	in     al,0xae
  41e988:	in     eax,0xc7
  41e98a:	adc    al,0x16
  41e98c:	idiv   BYTE PTR [ecx-0x2d]
  41e98f:	ja     0x41e94e
  41e991:	outs   dx,DWORD PTR cs:[esi]
  41e993:	sub    BYTE PTR [ebx+0x6c],ch
  41e996:	ret    0xb555
  41e999:	sbb    ch,al
  41e99b:	add    ah,BYTE PTR [ecx+0x29]
  41e99e:	sub    ch,BYTE PTR [ecx]
  41e9a0:	xchg   ecx,eax
  41e9a1:	adc    bh,BYTE PTR [esi+0x6a]
  41e9a4:	xor    edx,edx
  41e9a6:	inc    ecx
  41e9a7:	pop    esp
  41e9a8:	inc    esi
  41e9a9:	cmp    bh,BYTE PTR [ebx+0x5d]
  41e9ac:	in     eax,0x7b
  41e9ae:	(bad)  
  41e9af:	sti    
  41e9b0:	mov    dh,0x5b
  41e9b2:	ins    DWORD PTR es:[edi],dx
  41e9b3:	fwait
  41e9b4:	js     0x41e9d8
  41e9b6:	sahf   
  41e9b7:	test   DWORD PTR [eax-0x42],0xb65de898
  41e9be:	(bad)  [eax]
  41e9c0:	and    eax,0xb769fa23
  41e9c5:	cmp    DWORD PTR [ebp+0x10],edx
  41e9c8:	push   edi
  41e9c9:	add    al,0x32
  41e9cb:	xchg   ecx,eax
  41e9cc:	das    
  41e9cd:	rcl    DWORD PTR [ebx],cl
  41e9cf:	mov    cl,0x49
  41e9d1:	test   eax,0x5349c6d3
  41e9d6:	rol    BYTE PTR [edx-0x76e3f248],1
  41e9dc:	mov    BYTE PTR [edx+ebp*4],ch
  41e9df:	call   0x3a6e:0x42a01e37
  41e9e6:	or     BYTE PTR [esi+0x22],ah
  41e9e9:	sub    al,0xee
  41e9eb:	inc    edx
  41e9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9ed:	push   cs
  41e9ee:	(bad)  
  41e9ef:	pop    edi
  41e9f0:	mov    eax,0x424ad9c3
  41e9f5:	ins    DWORD PTR es:[edi],dx
  41e9f6:	loopne 0x41e9e0
  41e9f8:	mov    eax,ds:0x6c5d522
  41e9fd:	sub    DWORD PTR [edi],edi
  41e9ff:	jbe    0x41e984
  41ea01:	aas    
  41ea02:	stos   BYTE PTR es:[edi],al
  41ea03:	cli    
  41ea04:	scas   al,BYTE PTR es:[edi]
  41ea05:	pop    ebp
  41ea06:	test   DWORD PTR [ecx-0x4],eax
  41ea09:	and    esi,ecx
  41ea0b:	push   esi
  41ea0c:	adc    eax,0xaa98db26
  41ea11:	cmp    edx,ebx
  41ea13:	pop    es
  41ea14:	shl    cl,cl
  41ea16:	stos   BYTE PTR es:[edi],al
  41ea17:	xchg   esp,eax
  41ea18:	jmp    DWORD PTR [ebx+eiz*1-0x50]
  41ea1c:	fidiv  DWORD PTR [ecx+esi*2+0x72]
  41ea20:	(bad)  
  41ea21:	jne    0x41ea30
  41ea23:	mov    ds:0x1a53527d,al
  41ea28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea29:	dec    ebp
  41ea2a:	stos   BYTE PTR es:[edi],al
  41ea2b:	js     0x41ea13
  41ea2d:	or     al,0xd6
  41ea2f:	lock or DWORD PTR [edx],edx
  41ea32:	rcr    ebp,1
  41ea34:	retf   
  41ea35:	(bad)  
  41ea36:	bound  ebx,QWORD PTR [esi-0x13]
  41ea39:	pop    ebp
  41ea3a:	xlat   BYTE PTR ds:[ebx]
  41ea3b:	mov    edx,0xd4095e31
  41ea40:	pop    edx
  41ea41:	dec    ebx
  41ea42:	pop    edi
  41ea43:	and    al,0xa
  41ea45:	add    eax,0xe5b6d81
  41ea4a:	sub    al,0xca
  41ea4c:	mov    esi,0x8c5bb0e9
  41ea51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea52:	popf   
  41ea53:	pushf  
  41ea54:	(bad)  
  41ea56:	mov    ecx,cs
  41ea58:	jo     0x41ea4c
  41ea5a:	jae    0x41e9fd
  41ea5c:	mov    ecx,0xf7b20ee
  41ea61:	xchg   esp,eax
  41ea62:	mov    ah,0x1d
  41ea64:	jmp    0xd65e:0x63200040
  41ea6b:	loopne 0x41eac8
  41ea6d:	popa   
  41ea6e:	scas   eax,DWORD PTR es:[edi]
  41ea6f:	jae    0x41ea32
  41ea71:	or     bl,BYTE PTR [ebx]
  41ea73:	mov    ds:0xc0960cea,al
  41ea78:	push   edi
  41ea79:	rcr    BYTE PTR [eax-0x7792f48f],0x4d
  41ea80:	and    bl,BYTE PTR ds:0x747ed60b
  41ea86:	and    eax,0xb81766bd
  41ea8b:	and    al,0x6a
  41ea8d:	test   al,0x96
  41ea8f:	dec    edi
  41ea90:	push   0x9fbca5bd
  41ea95:	test   eax,0xa857c059
  41ea9a:	lods   al,BYTE PTR ds:[esi]
  41ea9b:	add    eax,0x56a1b408
  41eaa0:	mov    eax,0x6f7fb485
  41eaa5:	mov    esi,0x7e068551
  41eaaa:	xchg   BYTE PTR [edi-0x79a6ff97],dh
  41eab0:	sbb    al,0x6d
  41eab2:	mov    eax,0xa977a025
  41eab7:	jp     0x41eb1c
  41eab9:	jnp    0x41ea9c
  41eabb:	ror    BYTE PTR [edx-0x6d0ab235],cl
  41eac1:	and    al,0xe7
  41eac3:	and    ch,ch
  41eac5:	ret    0x858
  41eac8:	jne    0x41ea9d
  41eaca:	lock stc 
  41eacc:	inc    ebp
  41eacd:	lock and al,0x2f
  41ead0:	aam    0x6c
  41ead2:	push   ebx
  41ead3:	jmp    0x41eaf3
  41ead5:	push   ds
  41ead6:	mov    ds:0xfb6cf385,eax
  41eadb:	mov    ah,0xbf
  41eadd:	xchg   esi,eax
  41eade:	les    esi,FWORD PTR [edi]
  41eae0:	ror    BYTE PTR [edx],1
  41eae2:	inc    ebp
  41eae3:	xchg   BYTE PTR [ebp+0x2],bl
  41eae6:	mov    BYTE PTR [ebx+0x691fed37],ch
  41eaec:	cwde   
  41eaed:	push   0xfffffff5
  41eaef:	mov    ebp,0x395941d
  41eaf4:	xchg   BYTE PTR [ecx-0x2c],cl
  41eaf7:	(bad)  
  41eaf8:	xlat   BYTE PTR ds:[ebx]
  41eaf9:	jns    0x41ea99
  41eafb:	iret   
  41eafc:	pushf  
  41eafd:	bound  esi,QWORD PTR [edx]
  41eaff:	retf   
  41eb00:	xchg   edi,ebp
  41eb02:	test   eax,0xc4f9c314
  41eb07:	idiv   DWORD PTR [ebp+0x26]
  41eb0a:	test   eax,0xae72e826
  41eb0f:	mov    WORD PTR [edi],?
  41eb11:	fsub   QWORD PTR [edi-0x4]
  41eb14:	mov    es,WORD PTR [eax]
  41eb16:	dec    esp
  41eb17:	xor    eax,0xfb55da4f
  41eb1c:	call   0x50e:0x29e48510
  41eb23:	sub    eax,0x5e2dc90e
  41eb28:	popf   
  41eb29:	inc    edx
  41eb2a:	jmp    0x41f8:0xade82527
  41eb31:	push   eax
  41eb32:	sbb    al,0xd6
  41eb34:	cmp    BYTE PTR [ecx+0x44],0x87
  41eb38:	loop   0x41eafa
  41eb3a:	push   ebx
  41eb3b:	sbb    bl,cl
  41eb3d:	mov    eax,0x9b0f2821
  41eb42:	mov    ds:0x131caabb,al
  41eb47:	dec    edi
  41eb48:	add    DWORD PTR [edx],eax
  41eb4a:	(bad)  
  41eb4b:	jl     0x41eb66
  41eb4d:	xchg   BYTE PTR [ebx],dl
  41eb4f:	es or  DWORD PTR fs:[edi],esp
  41eb53:	mov    al,ds:0xa360b28d
  41eb58:	scas   eax,DWORD PTR es:[edi]
  41eb59:	push   0x15
  41eb5b:	loope  0x41eb2e
  41eb5d:	push   eax
  41eb5e:	push   ecx
  41eb5f:	repz push cs
  41eb61:	mov    dh,0xe6
  41eb63:	lea    eax,[ebp+0x29d655c3]
  41eb69:	push   0xffffffdc
  41eb6b:	xchg   DWORD PTR [edx-0x23b2c951],esi
  41eb71:	loopne 0x41eb1f
  41eb73:	pop    ecx
  41eb74:	es aam 0xaf
  41eb77:	in     eax,0xa3
  41eb79:	dec    eax
  41eb7a:	outs   dx,DWORD PTR ds:[esi]
  41eb7b:	cmp    DWORD PTR [eax],ebx
  41eb7d:	in     eax,0xf4
  41eb7f:	int    0x4a
  41eb81:	bound  esp,QWORD PTR [edx+0x656a492d]
  41eb87:	cmp    DWORD PTR [edi+0x43],eax
  41eb8a:	loopne 0x41eb4e
  41eb8c:	mov    eax,ds:0xddb0d9ab
  41eb91:	sti    
  41eb92:	push   edi
  41eb93:	icebp  
  41eb94:	dec    esp
  41eb95:	xchg   al,dh
  41eb97:	push   ecx
  41eb98:	nop
  41eb99:	call   0xa2b0e229
  41eb9e:	jae    0x41eb45
  41eba0:	outs   dx,DWORD PTR ds:[esi]
  41eba1:	addr16 jg 0x41eb75
  41eba4:	fisttp DWORD PTR [edi-0x52]
  41eba7:	push   edi
  41eba8:	fld    st(5)
  41ebaa:	leave  
  41ebab:	(bad)  
  41ebad:	jb     0x41ebff
  41ebaf:	jg     0x41ec30
  41ebb1:	xor    DWORD PTR [ecx+0x103b2eec],edi
  41ebb7:	std    
  41ebb8:	(bad)  
  41ebb9:	push   ds
  41ebba:	push   ebx
  41ebbb:	ret    
  41ebbc:	jmp    0xc9f7:0xa878474f
  41ebc3:	jnp    0x41eb97
  41ebc5:	adc    bh,BYTE PTR [eax+eiz*1+0x48bf8396]
  41ebcc:	aas    
  41ebcd:	pop    ebx
  41ebce:	dec    esi
  41ebcf:	push   esi
  41ebd0:	lods   eax,DWORD PTR ds:[esi]
  41ebd1:	sub    edx,DWORD PTR [edi+0x431b0015]
  41ebd7:	xor    edx,eax
  41ebd9:	sub    DWORD PTR [ebx+edx*4+0x48566113],0xa2971da5
  41ebe4:	das    
  41ebe5:	xchg   ecx,eax
  41ebe6:	ss repz pop ebp
  41ebe9:	mov    dh,0xe
  41ebeb:	mov    DWORD PTR [esi],edi
  41ebed:	das    
  41ebee:	aad    0xd5
  41ebf0:	iret   
  41ebf1:	in     al,dx
  41ebf2:	jae    0x41eba7
  41ebf4:	pop    eax
  41ebf5:	or     DWORD PTR [ebx-0x1e],0x7b
  41ebf9:	fst    DWORD PTR [eax+0x267cf6c7]
  41ebff:	lods   eax,DWORD PTR ds:[esi]
  41ec00:	test   DWORD PTR ds:0x6c3f839f,ebx
  41ec06:	shr    DWORD PTR [ecx+0x4],cl
  41ec09:	stc    
  41ec0a:	sbb    bh,dh
  41ec0c:	inc    edi
  41ec0d:	cwde   
  41ec0e:	lods   eax,DWORD PTR ds:[esi]
  41ec0f:	push   ds
  41ec10:	out    dx,eax
  41ec11:	loop   0x41ebba
  41ec13:	aam    0xb5
  41ec15:	lods   al,BYTE PTR ds:[esi]
  41ec16:	stos   DWORD PTR es:[edi],eax
  41ec17:	nop
  41ec18:	cmp    al,0x68
  41ec1a:	mov    ds:0x3521426a,al
  41ec1f:	fidiv  DWORD PTR [esi+0x159ef987]
  41ec25:	aad    0xa1
  41ec27:	hlt    
  41ec28:	cli    
  41ec29:	xlat   BYTE PTR ds:[ebx]
  41ec2a:	retf   0x1166
  41ec2d:	iret   
  41ec2e:	push   eax
  41ec2f:	add    esp,esi
  41ec31:	ret    0xa284
  41ec34:	jl     0x41ec3e
  41ec36:	push   edi
  41ec37:	shr    edi,0xc9
  41ec3a:	push   es
  41ec3b:	inc    ecx
  41ec3c:	add    al,0x42
  41ec3e:	loope  0x41ebd9
  41ec40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec41:	std    
  41ec42:	pop    ecx
  41ec43:	lea    eax,[ebx-0x54]
  41ec46:	sub    BYTE PTR ds:0x2152ea5,ah
  41ec4c:	mov    ebp,0x299b56f
  41ec51:	sub    dl,cl
  41ec53:	add    eax,esp
  41ec55:	popf   
  41ec56:	xlat   BYTE PTR ds:[ebx]
  41ec57:	and    dh,0xb8
  41ec5a:	jae    0x41ec58
  41ec5c:	sbb    eax,0xf6a1c8f6
  41ec61:	ds mov eax,0xeffe6f0e
  41ec67:	cmp    bh,BYTE PTR [ebp-0xd]
  41ec6a:	mov    DWORD PTR [ebx+edx*1+0x31298744],ebp
  41ec71:	je     0x41ecc0
  41ec73:	xchg   edi,eax
  41ec74:	outs   dx,DWORD PTR ds:[esi]
  41ec75:	sbb    al,0x8e
  41ec77:	test   al,0xb8
  41ec79:	mov    ebx,0x8f6bed59
  41ec7e:	push   edi
  41ec7f:	(bad)  
  41ec80:	fild   WORD PTR [ebx]
  41ec82:	ja     0x41ecef
  41ec84:	int3   
  41ec85:	or     DWORD PTR [eax+0x58],edx
  41ec88:	jge    0x41ecec
  41ec8a:	pop    ds
  41ec8b:	mov    edi,0x890d50a1
  41ec90:	adc    eax,0xef2bdd15
  41ec95:	push   ecx
  41ec96:	sub    esp,DWORD PTR [esi-0xa]
  41ec99:	jb     0x41ecb6
  41ec9b:	imul   esp,DWORD PTR [ebx],0x1df2e863
  41eca1:	or     ecx,esi
  41eca3:	call   0xadfcdb5d
  41eca8:	cdq    
  41eca9:	mov    bh,0xa4
  41ecab:	js     0x41ecef
  41ecad:	xor    bh,BYTE PTR ds:0x16ec5f5c
  41ecb3:	ja     0x41ec42
  41ecb5:	retfw  
  41ecb7:	in     al,0xad
  41ecb9:	pop    ebp
  41ecba:	or     cl,BYTE PTR [edx-0x65]
  41ecbd:	nop
  41ecbe:	sti    
  41ecbf:	xor    BYTE PTR [ebx+edi*8-0x2971df60],dl
  41ecc6:	sbb    esi,DWORD PTR [ecx]
  41ecc8:	dec    edx
  41ecc9:	pop    ebp
  41ecca:	scas   eax,DWORD PTR es:[edi]
  41eccb:	ss mov bh,0x10
  41ecce:	inc    eax
  41eccf:	gs out dx,al
  41ecd1:	or     DWORD PTR [esi],ebp
  41ecd3:	cdq    
  41ecd4:	sub    bh,dh
  41ecd6:	fcom   DWORD PTR [esi+0x75]
  41ecd9:	inc    edi
  41ecda:	or     eax,0xb5170331
  41ecdf:	popf   
  41ece0:	pop    esp
  41ece1:	int    0x68
  41ece3:	repz das 
  41ece5:	mov    es,WORD PTR [ecx+0xc3a9998]
  41eceb:	jbe    0x41ecae
  41eced:	or     al,0x55
  41ecef:	dec    eax
  41ecf0:	and    DWORD PTR [ebx-0x64],0x1a9e9294
  41ecf7:	mov    dh,ch
  41ecf9:	je     0x41ed03
  41ecfb:	and    eax,0x66f87cbd
  41ed00:	stc    
  41ed01:	repz or ch,al
  41ed04:	lods   al,BYTE PTR ds:[esi]
  41ed05:	inc    ebx
  41ed06:	clc    
  41ed07:	xlat   BYTE PTR ds:[ebx]
  41ed08:	mov    ecx,DWORD PTR [ecx-0x4f967035]
  41ed0e:	stos   BYTE PTR es:[edi],al
  41ed0f:	sub    BYTE PTR [esi+0x278194a6],al
  41ed15:	dec    eax
  41ed16:	or     eax,0x4240b145
  41ed1b:	mov    dl,0x81
  41ed1d:	xchg   esp,eax
  41ed1e:	inc    edx
  41ed1f:	sbb    eax,0xe202e718
  41ed24:	data16 ins BYTE PTR es:[edi],dx
  41ed26:	push   ds
  41ed27:	call   0x70b6721e
  41ed2c:	pop    ds
  41ed2d:	test   bh,ah
  41ed2f:	cmp    dh,0x9a
  41ed32:	xchg   esi,eax
  41ed33:	mov    esp,0x1c125bf9
  41ed38:	(bad)  
  41ed3a:	adc    BYTE PTR [edi],cl
  41ed3c:	test   edi,0xb9bef9d8
  41ed42:	out    dx,al
  41ed43:	jl     0x41ed6e
  41ed45:	mov    al,0x6c
  41ed47:	adc    eax,0xbed939fb
  41ed4c:	icebp  
  41ed4d:	adc    ebp,DWORD PTR [edi+edi*2-0x3a]
  41ed51:	dec    edx
  41ed52:	inc    ebx
  41ed53:	and    DWORD PTR [esi+ebp*1-0x5f],ebp
  41ed57:	adc    al,0xb1
  41ed59:	sbb    ah,BYTE PTR [ecx]
  41ed5b:	in     eax,0x34
  41ed5d:	mov    BYTE PTR [ecx],al
  41ed5f:	cmp    DWORD PTR [ebp-0x6d],edx
  41ed62:	mov    bh,0xff
  41ed64:	jmp    0x41ed87
  41ed66:	lods   al,BYTE PTR ds:[esi]
  41ed67:	mov    ebx,0xebbb93ad
  41ed6c:	add    dh,BYTE PTR [ecx+eax*1+0x78780797]
  41ed73:	or     ecx,DWORD PTR [ebx+0x4fa3116b]
  41ed79:	ret    
  41ed7a:	pop    eax
  41ed7b:	lods   al,BYTE PTR ds:[esi]
  41ed7c:	mov    esp,0x291a9946
  41ed81:	sbb    al,dl
  41ed83:	pop    edx
  41ed84:	out    dx,al
  41ed85:	or     DWORD PTR [edi+0x47],0x1b
  41ed89:	pop    esp
  41ed8a:	ret    0xb8d8
  41ed8d:	or     al,0xe5
  41ed8f:	cmp    eax,0x969a9c3e
  41ed94:	jo     0x41edbf
  41ed96:	jnp    0x41ed30
  41ed98:	pop    ds
  41ed99:	adc    bl,bl
  41ed9b:	into   
  41ed9c:	je     0x41ee1b
  41ed9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9f:	pusha  
  41eda0:	pop    esp
  41eda1:	outs   dx,DWORD PTR ds:[esi]
  41eda3:	jns    0x41ee20
  41eda5:	sub    al,BYTE PTR [ebx]
  41eda7:	add    ah,dl
  41eda9:	loop   0x41edfa
  41edab:	in     al,dx
  41edac:	pop    bp
  41edae:	mov    al,0xe3
  41edb0:	mov    bl,0x90
  41edb2:	arpl   WORD PTR [eax-0x35a1f0e1],si
  41edb8:	sub    DWORD PTR [eax],edx
  41edba:	repz repz les ebp,FWORD PTR fs:[ecx+eiz*2]
  41edc0:	mov    eax,ds:0x3bb3ed0a
  41edc5:	imul   ebx,DWORD PTR [eax],0x477bcbbb
  41edcb:	sbb    al,0xf
  41edcd:	jle    0x41ee21
  41edcf:	push   cs
  41edd0:	test   DWORD PTR [ebp+0x78],0x999660b3
  41edd7:	punpckhbw mm2,QWORD PTR [esi+0x30]
  41eddb:	lahf   
  41eddc:	mov    eax,ss:0x2bf54be8
  41ede2:	(bad)  
  41ede3:	hlt    
  41ede4:	pusha  
  41ede5:	in     eax,0x32
  41ede7:	aam    0x53
  41ede9:	mov    ds:0xdd1831ad,eax
  41edee:	mov    ecx,0x8348a3fe
  41edf3:	shl    ecx,cl
  41edf5:	xchg   ecx,eax
  41edf6:	popa   
  41edf7:	mov    esp,0x96ddb3da
  41edfc:	push   ebx
  41edfd:	loope  0x41ee5c
  41edff:	retf   0xfd92
  41ee02:	cmp    esi,DWORD PTR [edi+esi*8+0x4d]
  41ee06:	out    dx,al
  41ee07:	aaa    
  41ee08:	cmp    BYTE PTR [ebp+0x48d13855],bl
  41ee0e:	sub    ah,BYTE PTR [eax-0x37faaf6e]
  41ee14:	inc    ebx
  41ee15:	rcl    DWORD PTR [edx],cl
  41ee17:	or     cl,BYTE PTR [ebx-0x403baa08]
  41ee1d:	sti    
  41ee1e:	lods   eax,DWORD PTR ds:[esi]
  41ee1f:	retf   0x2eb8
  41ee22:	mov    esp,0xa0e5baba
  41ee27:	jp     0x41edca
  41ee29:	(bad)  
  41ee2a:	push   0x46
  41ee2c:	inc    edx
  41ee2d:	xchg   DWORD PTR [esi+edx*4],ebx
  41ee30:	lds    edi,FWORD PTR [ecx+0x2c15f556]
  41ee36:	je     0x41ee6b
  41ee38:	int3   
  41ee39:	jb     0x41ee12
  41ee3b:	loope  0x41eeb6
  41ee3d:	enter  0x110d,0xf4
  41ee41:	push   eax
  41ee42:	dec    edi
  41ee43:	mov    bh,0xb8
  41ee46:	outs   dx,BYTE PTR ds:[esi]
  41ee47:	pop    edi
  41ee48:	cmp    DWORD PTR [eax],0x53
  41ee4b:	push   ebx
  41ee4c:	ja     0x41eeab
  41ee4e:	fidivr WORD PTR [eax-0x18]
  41ee51:	sar    dl,0xb7
  41ee54:	inc    esi
  41ee55:	sbb    eax,0xa6669ef0
  41ee5a:	js     0x41edfb
  41ee5c:	push   0x6c07d9cb
  41ee61:	xor    BYTE PTR [edi-0x148edc5],bl
  41ee67:	or     BYTE PTR [ecx],ah
  41ee69:	adc    bh,ch
  41ee6b:	cld    
  41ee6c:	sbb    eax,0x141edfc2
  41ee71:	jg     0x41ee0c
  41ee73:	js     0x41ee70
  41ee75:	push   edi
  41ee76:	cwde   
  41ee77:	inc    ebp
  41ee78:	ror    BYTE PTR [edi-0x60e7695e],cl
  41ee7e:	ja     0x41ee70
  41ee80:	push   esp
  41ee81:	pop    es
  41ee82:	or     edi,eax
  41ee84:	clc    
  41ee85:	jno    0x41ee58
  41ee87:	sub    al,0x40
  41ee89:	out    0x82,eax
  41ee8b:	push   esi
  41ee8c:	call   0x8b04:0xb1ca100c
  41ee93:	lahf   
  41ee94:	mov    eax,0x2495066
  41ee99:	mov    bl,bl
  41ee9b:	jp     0x41ee92
  41ee9d:	pop    ebx
  41ee9e:	cmp    ch,BYTE PTR [edx]
  41eea0:	xor    al,0xd2
  41eea2:	xchg   DWORD PTR gs:[ecx-0x574d426f],eax
  41eea9:	inc    edi
  41eeaa:	mov    dh,0x76
  41eeac:	jecxz  0x41eed3
  41eeae:	and    eax,0x3ec2e2a8
  41eeb3:	(bad)  
  41eeb4:	loopne 0x41ef1e
  41eeb6:	dec    esp
  41eeb7:	call   0xb748b02
  41eebc:	jmp    0xdb809af3
  41eec1:	jnp    0x41ef2e
  41eec3:	xor    al,0xa9
  41eec5:	nop
  41eec6:	sbb    bl,BYTE PTR [edx+ebp*8+0x1eece68]
  41eecd:	mov    ch,0xec
  41eecf:	in     eax,dx
  41eed0:	pop    esp
  41eed1:	xor    esp,edi
  41eed3:	(bad)
  41eed7:	popf   
  41eed8:	cmc    
  41eed9:	xchg   edx,eax
  41eeda:	xor    al,0xbe
  41eedc:	cld    
  41eedd:	stos   DWORD PTR es:[edi],eax
  41eede:	pushf  
  41eedf:	mov    ecx,0xc843a7a2
  41eee4:	lods   eax,DWORD PTR ds:[esi]
  41eee5:	sbb    ecx,DWORD PTR [esi+0x147df725]
  41eeeb:	enter  0x531d,0x8f
  41eeef:	int    0xd
  41eef1:	sti    
  41eef2:	into   
  41eef3:	call   0xfb40570f
  41eef8:	mov    BYTE PTR [ebp+0x54d2fe59],al
  41eefe:	mov    ds:0xdcc835e6,eax
  41ef03:	cld    
  41ef04:	xchg   edx,eax
  41ef05:	inc    eax
  41ef06:	mov    dh,0x15
  41ef08:	dec    eax
  41ef09:	ror    BYTE PTR [ebp+0x2e],1
  41ef0c:	mov    cl,0x5
  41ef0e:	sub    cl,dh
  41ef10:	(bad)  
  41ef11:	jae    0x41ef71
  41ef13:	push   es
  41ef14:	cmc    
  41ef15:	sbb    DWORD PTR [esi+eax*2+0x59],0x476cfcb5
  41ef1d:	adc    ebp,esi
  41ef1f:	or     BYTE PTR [esi+0x63c696d9],ch
  41ef25:	jbe    0x41ef08
  41ef27:	dec    edx
  41ef28:	cdq    
  41ef29:	lock mov edi,0x5da75b18
  41ef2f:	addr16 xchg ebp,eax
  41ef31:	pop    edx
  41ef32:	out    0xb0,al
  41ef34:	xchg   ebx,eax
  41ef35:	dec    ebx
  41ef36:	iret   
  41ef37:	push   eax
  41ef38:	xor    eax,0x6bf18c16
  41ef3d:	cli    
  41ef3e:	push   ebp
  41ef3f:	ret    
  41ef40:	inc    edx
  41ef41:	cmp    esi,DWORD PTR [eax]
  41ef43:	adc    eax,0xecd057d9
  41ef48:	jns    0x41efa5
  41ef4a:	mov    eax,0x7b3f2e35
  41ef4f:	sub    bl,BYTE PTR [ebx]
  41ef51:	adc    BYTE PTR [esi-0x24],al
  41ef54:	mov    ecx,0xd352647b
  41ef59:	iret   
  41ef5a:	adc    eax,0x2e2c7a92
  41ef5f:	xor    dl,BYTE PTR [ebp+0x75]
  41ef62:	cwde   
  41ef63:	and    DWORD PTR [edi+0x62],ebx
  41ef66:	push   eax
  41ef67:	retf   0xffc1
  41ef6a:	xor    al,0xed
  41ef6c:	add    bh,BYTE PTR [ecx]
  41ef6e:	dec    ecx
  41ef6f:	into   
  41ef70:	int    0x2d
  41ef72:	push   0x4430c012
  41ef77:	sbb    eax,0xc159f055
  41ef7c:	inc    ebp
  41ef7d:	inc    eax
  41ef7e:	call   0xd1a6:0xf607022
  41ef85:	nop
  41ef86:	and    ebx,DWORD PTR [edi+0x2aaa07ea]
  41ef8c:	cwde   
  41ef8d:	leave  
  41ef8e:	and    DWORD PTR [edi+0x76bd0917],0xcd126760
  41ef98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef99:	xchg   ebx,eax
  41ef9a:	push   es
  41ef9b:	xor    BYTE PTR [esp+ecx*8-0x3e8a5b41],0x88
  41efa3:	outs   dx,BYTE PTR ds:[esi]
  41efa4:	fistp  QWORD PTR [esp+edx*4]
  41efa7:	je     0x41efc2
  41efa9:	aas    
  41efaa:	push   ecx
  41efab:	and    dh,BYTE PTR [edx+0x24]
  41efae:	rcr    BYTE PTR [eax],1
  41efb0:	and    al,0x7d
  41efb2:	adc    dh,ah
  41efb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efb5:	mov    ecx,0x618fde37
  41efba:	mov    gs,edi
  41efbc:	in     al,0x3
  41efbe:	popa   
  41efbf:	and    ebx,esp
  41efc1:	retf   0x1ad5
  41efc4:	push   ss
  41efc5:	jbe    0x41f037
  41efc7:	mov    al,0x64
  41efc9:	pop    ds
  41efca:	in     eax,dx
  41efcb:	dec    esi
  41efcc:	mov    ecx,0xaf2a61b5
  41efd1:	and    esp,DWORD PTR [ebp+0x5b]
  41efd4:	sub    DWORD PTR [ecx+0x438c5d12],edi
  41efda:	sbb    eax,0xf26cd6ca
  41efdf:	mov    ebx,0xc6184a68
  41efe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efe5:	daa    
  41efe6:	and    BYTE PTR [esi],ch
  41efe8:	aad    0x45
  41efea:	jp     0x41eff2
  41efec:	ror    BYTE PTR [ebx],0xaa
  41efef:	ss cli 
  41eff1:	mov    ds:0x451a4c7e,al
  41eff6:	xor    eax,DWORD PTR [eax]
  41eff8:	ror    BYTE PTR [eax+0x7a4b39b4],1
  41effe:	aad    0xd6
  41f000:	div    DWORD PTR ss:[ebp-0x590dd404]
  41f007:	fs mov esi,0xb03ac6f0
  41f00d:	cmp    bh,BYTE PTR [edx-0x8]
  41f010:	fisttp DWORD PTR [ecx]
  41f012:	push   ss
  41f013:	stc    
  41f014:	push   edi
  41f015:	mov    esp,0xcd30e3ad
  41f01a:	cli    
  41f01b:	iret   
  41f01c:	mov    edi,0x2b12f816
  41f021:	retf   0x9d01
  41f024:	xor    al,0x15
  41f026:	adc    DWORD PTR [eax],edx
  41f028:	mov    dh,0xf7
  41f02a:	dec    ecx
  41f02b:	adc    eax,0x29f2b9b7
  41f030:	jecxz  0x41efc7
  41f032:	les    edi,FWORD PTR [ebp-0x7d48ed8f]
  41f038:	lock jnp 0x41f047
  41f03b:	mov    BYTE PTR [edx+eax*1+0x2e9de112],dl
  41f042:	mov    ds:0x72f010cb,al
  41f047:	pusha  
  41f048:	inc    ecx
  41f049:	and    esp,edx
  41f04b:	call   0x169d:0x7cf191c1
  41f052:	mov    WORD PTR [esp+ebx*1],?
  41f055:	sub    edi,esp
  41f057:	sub    bl,BYTE PTR [eax+0x73d82357]
  41f05d:	dec    edi
  41f05e:	jle    0x41f02c
  41f060:	sbb    cl,ah
  41f062:	mov    esi,0xb140f66
  41f067:	lock shr BYTE PTR [ecx-0x5af8cd88],cl
  41f06e:	int3   
  41f06f:	je     0x41f067
  41f071:	out    0x77,eax
  41f073:	stc    
  41f074:	mov    al,BYTE PTR [ebx+0x4c]
  41f077:	pop    edi
  41f078:	stos   DWORD PTR es:[edi],eax
  41f079:	fwait
  41f07a:	ret    
  41f07b:	push   0x7489e30e
  41f080:	xor    BYTE PTR [ebp+0x45],al
  41f083:	jmp    DWORD PTR [eax-0x1b]
  41f086:	lods   al,BYTE PTR ds:[esi]
  41f087:	pop    edx
  41f088:	mov    dl,0x1e
  41f08a:	pop    esp
  41f08c:	outs   dx,DWORD PTR ds:[esi]
  41f08d:	stos   BYTE PTR es:[edi],al
  41f08e:	hlt    
  41f08f:	adc    eax,0x544fb6b6
  41f094:	xor    ebp,DWORD PTR [ebx]
  41f096:	jmp    0x98f2:0x17c8fce8
  41f09d:	xchg   edx,eax
  41f09e:	mov    eax,ds:0xe33f4348
  41f0a3:	ja     0x41f0df
  41f0a5:	jbe    0x41f04e
  41f0a7:	test   DWORD PTR [ebp+0x7f],esp
  41f0aa:	ja     0x41f121
  41f0ac:	jae    0x41f08d
  41f0ae:	xchg   edx,eax
  41f0af:	mov    ebx,0x3ff4988
  41f0b4:	sub    al,0x91
  41f0b6:	fisubr DWORD PTR [edi-0x6f]
  41f0b9:	repz mov edi,0x1b9bf577
  41f0bf:	mov    ah,0xd7
  41f0c1:	cld    
  41f0c2:	sbb    BYTE PTR [ecx],cl
  41f0c4:	pop    es
  41f0c5:	call   0xa2b3574f
  41f0ca:	fsubr  DWORD PTR [edx-0x19]
  41f0cd:	(bad)  
  41f0ce:	mov    eax,ds:0x15b0ab0a
  41f0d3:	pop    ecx
  41f0d4:	xchg   esi,eax
  41f0d5:	enter  0x1f72,0x2
  41f0d9:	test   DWORD PTR [eax-0x7750a247],edi
  41f0df:	xchg   ecx,eax
  41f0e0:	push   0xc5fa2206
  41f0e5:	das    
  41f0e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e7:	test   BYTE PTR [eax-0x307a478],al
  41f0ed:	adc    al,0xe4
  41f0ef:	sbb    cl,al
  41f0f1:	test   eax,0x2f62b091
  41f0f6:	out    0xe5,al
  41f0f8:	jg     0x41f0a7
  41f0fa:	outs   dx,DWORD PTR ds:[esi]
  41f0fb:	ror    BYTE PTR [ebx],cl
  41f0fd:	shl    DWORD PTR [ecx-0x78],0xd3
  41f101:	mov    esp,0xa36610ef
  41f106:	adc    BYTE PTR [esi+0x7666c548],ah
  41f10c:	add    eax,0x7fe90f8
  41f111:	add    BYTE PTR [ecx],cl
  41f113:	pop    edi
  41f114:	xor    BYTE PTR [ecx-0x32],bl
  41f117:	sti    
  41f118:	sub    esi,edi
  41f11a:	enter  0xdf50,0x18
  41f11e:	cmp    eax,0x8b56400d
  41f124:	pop    ebp
  41f125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f126:	outs   dx,DWORD PTR ds:[esi]
  41f127:	and    DWORD PTR [esp+esi*8],0x56
  41f12b:	mov    ds:0x3629072d,al
  41f130:	inc    BYTE PTR [ebx]
  41f132:	add    ch,cl
  41f134:	aaa    
  41f135:	jmp    0x41f197
  41f137:	std    
  41f138:	jo     0x41f0d9
  41f13a:	push   DWORD PTR [ebp-0x21]
  41f13d:	sar    DWORD PTR [ebp-0x278dd308],0xb9
  41f144:	out    dx,eax
  41f145:	retf   
  41f146:	icebp  
  41f147:	push   es
  41f148:	mov    esi,0xbdd2b563
  41f14d:	ja     0x41f1ca
  41f14f:	dec    edi
  41f150:	rol    ecx,1
  41f152:	xchg   ebp,eax
  41f153:	mov    cl,0x2b
  41f155:	std    
  41f156:	pop    esp
  41f157:	cmc    
  41f158:	sbb    al,0x86
  41f15a:	inc    esp
  41f15b:	dec    esi
  41f15c:	mov    ah,0xd8
  41f15e:	pop    edi
  41f15f:	repnz cwde 
  41f161:	inc    esi
  41f162:	cmc    
  41f163:	pop    ebp
  41f164:	aaa    
  41f165:	pusha  
  41f166:	sbb    eax,0x32448163
  41f16b:	pusha  
  41f16c:	ins    DWORD PTR es:[edi],dx
  41f16d:	xor    eax,0x339ea30f
  41f172:	stc    
  41f173:	push   esi
  41f174:	es and ecx,esp
  41f177:	pop    eax
  41f178:	(bad)  
  41f179:	repnz std 
  41f17b:	ja     0x41f161
  41f17d:	and    al,BYTE PTR [ebx+eax*8]
  41f180:	xor    DWORD PTR [ebx+0x7a],0x17
  41f184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f185:	xor    eax,0xcb8a16ce
  41f18a:	mov    ds:0xaeed22f7,eax
  41f18f:	bound  esi,QWORD PTR [ebx+0x3d418fa4]
  41f195:	dec    esi
  41f196:	adc    ebx,esp
  41f198:	fstp   QWORD PTR [edx-0x623ee7b8]
  41f19e:	or     edi,DWORD PTR [ebp+0x22]
  41f1a1:	adc    edi,esp
  41f1a3:	imul   ecx
  41f1a5:	fidiv  WORD PTR [edx-0x75cceed0]
  41f1ab:	push   ebp
  41f1ac:	add    edx,ebx
  41f1ae:	arpl   WORD PTR [edx+0x4ad3e0c5],sp
  41f1b4:	in     eax,0x5c
  41f1b6:	pop    esi
  41f1b7:	mov    dl,0x52
  41f1b9:	pushf  
  41f1ba:	inc    ebp
  41f1bb:	clc    
  41f1bc:	call   0x66fe383f
  41f1c1:	fcom   DWORD PTR [edx]
  41f1c3:	int    0xe0
  41f1c5:	xor    dl,0xb8
  41f1c8:	jae    0x41f193
  41f1ca:	repnz cs xchg ebx,eax
  41f1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ce:	inc    ebx
  41f1cf:	fld    TBYTE PTR [edx+0x0]
  41f1d2:	iret   
  41f1d3:	mov    bh,0x3a
  41f1d5:	xchg   edx,eax
  41f1d6:	call   0xff4:0x63420621
  41f1dd:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1df:	adc    ch,dl
  41f1e1:	push   esi
  41f1e2:	shr    BYTE PTR [esi+0x1c],cl
  41f1e5:	out    dx,eax
  41f1e6:	jns    0x41f17a
  41f1e8:	sub    bx,WORD PTR [ebp-0x5f]
  41f1ec:	call   DWORD PTR [ebx+0x1ca5741b]
  41f1f2:	mov    ebx,0x93b7dc82
  41f1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f8:	inc    ecx
  41f1f9:	pop    es
  41f1fa:	mov    eax,0x1390d034
  41f1ff:	leave  
  41f200:	add    BYTE PTR [edi-0x7b03aa75],bh
  41f206:	jmp    0x41f1b4
  41f208:	pushf  
  41f209:	mov    ebp,0xf370f35d
  41f20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f20f:	(bad)  
  41f210:	jge    0x41f193
  41f212:	adc    dl,0x0
  41f215:	sbb    ebx,DWORD PTR [edx+0xe3583a8]
  41f21b:	sub    ch,BYTE PTR [esi-0xaf05738]
  41f221:	aad    0xdb
  41f223:	jge    0x41f26c
  41f225:	fdivr  st,st(2)
  41f227:	lahf   
  41f228:	xlat   BYTE PTR ds:[ebx]
  41f229:	adc    al,0x3d
  41f22b:	inc    ebp
  41f22c:	add    BYTE PTR [ecx-0x14ca46df],0xfd
  41f233:	rcr    BYTE PTR [ebx-0x7],cl
  41f236:	cmp    BYTE PTR [edi],0x69
  41f239:	xchg   ecx,eax
  41f23a:	mov    dl,BYTE PTR [eax]
  41f23c:	jmp    0x9a46:0x27965862
  41f243:	mov    bh,0xfb
  41f245:	icebp  
  41f246:	or     ch,cl
  41f248:	mov    esi,0x64523422
  41f24d:	sub    BYTE PTR [ecx+0x37],ch
  41f250:	test   al,0x9d
  41f252:	adc    ah,BYTE PTR [eax+0x26dafd1f]
  41f258:	jmp    0x41f2bc
  41f25a:	xchg   esp,eax
  41f25b:	push   edi
  41f25c:	and    al,0x3f
  41f25e:	je     0x41f231
  41f260:	pop    edi
  41f261:	in     al,dx
  41f262:	call   0x43ca871f
  41f267:	dec    eax
  41f268:	jecxz  0x41f260
  41f26a:	mov    ah,0xed
  41f26c:	mov    bh,0x7b
  41f26e:	push   ss
  41f26f:	mul    DWORD PTR [eax]
  41f271:	js     0x41f2e5
  41f273:	mov    ecx,0xf9ba3c82
  41f278:	jmp    0x65a5a788
  41f27d:	jle    0x41f2c5
  41f27f:	out    0x68,eax
  41f281:	jb     0x41f24d
  41f283:	das    
  41f284:	adc    ch,dl
  41f286:	sub    BYTE PTR [ecx-0xe],al
  41f289:	div    BYTE PTR [edx]
  41f28b:	xchg   esi,eax
  41f28c:	cmp    esi,DWORD PTR [ecx-0x2c97acc3]
  41f292:	loopne 0x41f2f3
  41f294:	fnsave [edi+0x65]
  41f297:	mov    al,ds:0xdedf68a
  41f29c:	jbe    0x41f2dd
  41f29e:	imul   esi,DWORD PTR [edi],0xffffffa2
  41f2a1:	fstp   st(4)
  41f2a3:	add    BYTE PTR [edx-0x56e42668],bl
  41f2a9:	xchg   esp,eax
  41f2aa:	add    eax,0x5ddadd8
  41f2af:	push   ds
  41f2b0:	dec    ebx
  41f2b1:	and    bl,BYTE PTR [edx+0xb]
  41f2b4:	jae    0x41f23d
  41f2b6:	les    ebx,FWORD PTR [eax]
  41f2b8:	lods   eax,DWORD PTR ds:[esi]
  41f2b9:	jne    0x41f295
  41f2bb:	scas   al,BYTE PTR es:[di]
  41f2bd:	fisttp WORD PTR [edx+edi*8-0x11c66c0b]
  41f2c4:	jecxz  0x41f28e
  41f2c6:	pop    ss
  41f2c7:	ss clc 
  41f2c9:	dec    eax
  41f2ca:	mov    esp,DWORD PTR [ebx]
  41f2cc:	retf   0x17ae
  41f2cf:	cmp    dh,0x39
  41f2d2:	xchg   edx,eax
  41f2d3:	cmp    ecx,ebx
  41f2d5:	adc    ch,dh
  41f2d7:	test   DWORD PTR ds:0xc1c93bb5,esi
  41f2dd:	shr    DWORD PTR [ecx-0x34],1
  41f2e0:	shl    DWORD PTR [eax+0x65624614],cl
  41f2e6:	sub    bh,BYTE PTR [esi-0xf]
  41f2e9:	addr16 jle 0x41f2da
  41f2ec:	push   cs
  41f2ed:	in     al,dx
  41f2ee:	retf   0x107e
  41f2f1:	xor    BYTE PTR [edi],al
  41f2f3:	loope  0x41f31e
  41f2f5:	add    BYTE PTR [eax-0x15],al
  41f2f8:	(bad)  
  41f2f9:	jecxz  0x41f36c
  41f2fb:	and    esi,DWORD PTR [eax-0x7e68920e]
  41f301:	stc    
  41f302:	retf   
  41f303:	jmp    0x756b:0xb0a7e224
  41f30a:	mov    edx,0xca72963a
  41f30f:	outs   dx,DWORD PTR ds:[esi]
  41f310:	cmp    eax,0x498a28a7
  41f315:	retf   0xcc87
  41f318:	jae    0x41f2c3
  41f31a:	fstp   TBYTE PTR [eax]
  41f31c:	push   eax
  41f31d:	jne    0x41f2da
  41f31f:	pop    edx
  41f320:	push   edi
  41f321:	in     al,0x54
  41f323:	hlt    
  41f324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f325:	loop   0x41f34b
  41f327:	mov    bh,0x1d
  41f329:	xchg   edx,eax
  41f32a:	(bad)  
  41f32b:	int3   
  41f32c:	jg     0x41f2e6
  41f32e:	leave  
  41f32f:	push   edx
  41f330:	std    
  41f331:	(bad)  
  41f332:	ja     0x41f348
  41f334:	test   al,0xd9
  41f336:	sbb    al,0x26
  41f338:	shl    BYTE PTR [esp+eiz*4+0x3e],cl
  41f33c:	movlps QWORD PTR [ecx-0x71],xmm5
  41f340:	js     0x41f3b1
  41f342:	pop    eax
  41f343:	dec    edx
  41f344:	mov    al,0x59
  41f346:	adc    esp,DWORD PTR [ecx+0x413e4fdf]
  41f34c:	sub    eax,0x3efe4aa9
  41f351:	xchg   edx,eax
  41f352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f353:	sub    al,0x39
  41f355:	xchg   esp,eax
  41f356:	xor    ch,BYTE PTR [edi+eiz*8]
  41f359:	jb     0x41f30b
  41f35b:	fwait
  41f35c:	mov    dh,0xb2
  41f35e:	add    ch,BYTE PTR [esi]
  41f360:	fsubr  QWORD PTR [esi-0x681842b2]
  41f366:	ret    0xeb57
  41f369:	mov    si,0xcf9e
  41f36d:	outs   dx,BYTE PTR ds:[esi]
  41f36e:	dec    ebx
  41f36f:	pushf  
  41f370:	adc    dh,cl
  41f372:	mov    DWORD PTR [ebx+0x59],ecx
  41f375:	fld    QWORD PTR [ebx+0x65ef8764]
  41f37b:	cdq    
  41f37c:	jo     0x41f315
  41f37e:	enter  0x1574,0x8e
  41f382:	jo     0x41f309
  41f384:	test   BYTE PTR [ebx+0x7f385fe],al
  41f38a:	sbb    al,BYTE PTR [ebx+0x61]
  41f38d:	or     DWORD PTR [ebx+0xb],0xffffffb7
  41f391:	push   esi
  41f392:	jl     0x41f349
  41f394:	and    BYTE PTR [ecx+eax*1+0x5d],0x33
  41f399:	arpl   WORD PTR [eax],di
  41f39b:	pop    ds
  41f39c:	inc    edi
  41f39d:	adc    eax,0x2a8c2c6
  41f3a2:	xchg   ebp,eax
  41f3a3:	push   0x8c003322
  41f3a8:	xor    eax,ecx
  41f3aa:	add    al,0xdb
  41f3ac:	mov    WORD PTR [ecx+esi*1+0x45f844cd],gs
  41f3b3:	add    al,0x66
  41f3b5:	mov    ebx,0x307fdd0
  41f3ba:	xchg   edx,eax
  41f3bb:	fs and eax,0x52415900
  41f3c1:	sub    ecx,edi
  41f3c3:	push   eax
  41f3c4:	push   ss
  41f3c5:	jmp    0x6c9b5e6d
  41f3ca:	cmp    al,0x56
  41f3cc:	sbb    bl,0xf5
  41f3cf:	or     edx,DWORD PTR [eax-0x55]
  41f3d2:	in     al,0x4e
  41f3d4:	shl    DWORD PTR [eax],1
  41f3d6:	cld    
  41f3d7:	and    al,0xf
  41f3d9:	jmp    0x41f390
  41f3db:	inc    eax
  41f3dc:	sub    al,0xa2
  41f3de:	add    eax,0x6d2c55bc
  41f3e3:	jg     0x41f3d8
  41f3e5:	retf   0x1e60
  41f3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3e9:	sub    bl,BYTE PTR [edx+0x3ba50146]
  41f3ef:	add    eax,0xb004ad9b
  41f3f4:	cmp    al,BYTE PTR [edi-0x1771bcee]
  41f3fa:	lahf   
  41f3fb:	xchg   esi,eax
  41f3fc:	pop    ecx
  41f3fd:	add    al,dl
  41f3ff:	push   es
  41f400:	push   0xf19bfd01
  41f405:	rcr    ebp,cl
  41f407:	test   DWORD PTR [edi-0x3e8a980c],esp
  41f40d:	push   0xe3193302
  41f412:	arpl   WORD PTR [ebp-0x113940e6],di
  41f418:	sbb    ebx,esi
  41f41a:	dec    ebx
  41f41b:	pop    eax
  41f41c:	mul    BYTE PTR ds:0xef06a117
  41f422:	dec    ecx
  41f423:	xchg   BYTE PTR [ebp+ebx*4-0x7dc7af46],al
  41f42a:	pop    ecx
  41f42b:	rcl    dl,0xe7
  41f42e:	shl    DWORD PTR [edx-0x60a7925d],cl
  41f434:	push   edx
  41f435:	inc    bl
  41f437:	stos   BYTE PTR es:[edi],al
  41f438:	sub    DWORD PTR [edi-0x7227e9f0],ecx
  41f43e:	mov    edi,ecx
  41f440:	mov    DWORD PTR [esp+ecx*8],ebx
  41f443:	cmp    al,0x30
  41f445:	cmp    eax,0x18dcaba0
  41f44a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f44b:	xchg   edx,eax
  41f44c:	sub    BYTE PTR [edx],bh
  41f44e:	mov    bh,0x88
  41f450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f451:	mov    bl,0xd6
  41f453:	std    
  41f454:	out    dx,eax
  41f455:	jo     0x41f41b
  41f457:	ins    DWORD PTR es:[edi],dx
  41f458:	dec    ebp
  41f459:	bound  edi,QWORD PTR [edx]
  41f45b:	dec    eax
  41f45c:	mov    bh,BYTE PTR [ecx+0x4d]
  41f45f:	mov    ch,0xf5
  41f461:	push   ebx
  41f462:	sbb    al,0xcc
  41f464:	or     DWORD PTR [ebx-0x3e],edx
  41f467:	repz or eax,0xd18a848b
  41f46d:	ins    DWORD PTR es:[edi],dx
  41f46e:	in     al,0xa0
  41f470:	gs sbb eax,0xff1e864a
  41f476:	jecxz  0x41f47c
  41f478:	add    eax,0x44ff9bd5
  41f47d:	call   0xd9c0:0xe9eb1c22
  41f484:	repz mov eax,ds:0x22e3292b
  41f48a:	les    esp,FWORD PTR [esi+edi*4-0xf]
  41f48e:	xor    DWORD PTR [esp+ecx*1+0x3e],esi
  41f492:	pop    eax
  41f493:	(bad)  [eax]
  41f495:	adc    BYTE PTR [esi+ebx*8+0x67],ch
  41f499:	call   0xb7e2:0x60eea1df
  41f4a0:	jb     0x41f4e7
  41f4a2:	scas   eax,DWORD PTR es:[edi]
  41f4a3:	sbb    eax,0x34d924f
  41f4a8:	cwde   
  41f4a9:	mov    ch,BYTE PTR [eax+0x1d]
  41f4ac:	add    bh,BYTE PTR [edi+0x3b0d208]
  41f4b2:	inc    esp
  41f4b3:	addr16 jmp 0x41f4e3
  41f4b6:	xor    edi,eax
  41f4b8:	retf   0x26cb
  41f4bb:	bound  edi,QWORD PTR [eax+0x55]
  41f4be:	addr16 pushf 
  41f4c0:	cmp    DWORD PTR [edi+ebx*2+0x5f],esp
  41f4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c5:	xlat   BYTE PTR ds:[ebx]
  41f4c6:	pop    ebp
  41f4c7:	mov    edx,0xa4352b20
  41f4cc:	xchg   edx,eax
  41f4cd:	xor    al,0x29
  41f4cf:	js     0x41f451
  41f4d1:	bound  edx,QWORD PTR [esi-0x53]
  41f4d4:	xchg   BYTE PTR [edx],cl
  41f4d6:	in     eax,dx
  41f4d7:	stos   BYTE PTR es:[edi],al
  41f4d8:	cs inc esp
  41f4da:	cmc    
  41f4db:	rcl    DWORD PTR [ebp-0x59],0xb
  41f4df:	mov    cl,BYTE PTR [ebx+0x53]
  41f4e2:	popf   
  41f4e3:	es adc eax,ebp
  41f4e6:	inc    ecx
  41f4e7:	jnp    0x41f4f1
  41f4e9:	sbb    ebx,DWORD PTR [bp+0x2b]
  41f4ed:	sub    DWORD PTR [eax-0x13],0x5f
  41f4f1:	shl    BYTE PTR [ebx+0x56],0xde
  41f4f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4f6:	fucomi st,st(1)
  41f4f8:	std    
  41f4f9:	mov    eax,DWORD PTR [ecx+0x19]
  41f4fc:	push   edi
  41f4fd:	inc    eax
  41f4fe:	cdq    
  41f4ff:	xor    BYTE PTR [edi+0x315820],dh
  41f505:	cmc    
  41f506:	out    dx,eax
  41f507:	sub    DWORD PTR [ebx],eax
  41f509:	push   ebp
  41f50a:	sub    eax,0x9419f1ca
  41f50f:	push   es
  41f510:	sahf   
  41f511:	pop    ds
  41f512:	dec    edx
  41f513:	push   ecx
  41f514:	in     al,dx
  41f515:	popf   
  41f516:	mov    dh,0x0
  41f518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f519:	cld    
  41f51a:	xchg   BYTE PTR [ecx-0x58],ch
  41f51d:	jecxz  0x41f4f9
  41f51f:	mov    al,0x45
  41f521:	imul   esi,DWORD PTR [eax],0x44
  41f524:	in     al,0x9d
  41f526:	mov    ch,0xbe
  41f528:	retf   
  41f529:	mov    al,0x5f
  41f52b:	add    eax,0x2f536e4d
  41f530:	loope  0x41f518
  41f532:	xchg   esp,eax
  41f533:	addr16 out dx,eax
  41f535:	(bad)  
  41f536:	jle    0x41f524
  41f538:	imul   eax,ebp,0x57
  41f53b:	mov    BYTE PTR [edx+0x1],al
  41f53e:	push   cs
  41f53f:	and    bh,dh
  41f541:	loopne 0x41f515
  41f543:	xor    eax,0x33a0bc3b
  41f548:	mov    eax,DWORD PTR [ecx-0x25]
  41f54b:	jmp    0x4a98:0xdb37e494
  41f552:	xchg   ebx,eax
  41f553:	scas   eax,DWORD PTR es:[edi]
  41f554:	push   ds
  41f555:	and    edi,ebx
  41f557:	pop    eax
  41f558:	cmc    
  41f559:	pop    ds
  41f55a:	inc    esi
  41f55b:	repz jns 0x41f515
  41f55e:	push   cs
  41f55f:	into   
  41f560:	or     bh,al
  41f562:	mov    ecx,0x426b3a8b
  41f567:	mov    ebp,0x3272e518
  41f56c:	ror    BYTE PTR [ebx+eax*4+0x23],cl
  41f570:	nop
  41f571:	push   0x52cb4837
  41f576:	pop    ss
  41f577:	sbb    ah,BYTE PTR [edx+0x1b098922]
  41f57d:	sub    al,0xf0
  41f57f:	sub    esi,ebx
  41f581:	imul   edi,DWORD PTR [edi+eax*2],0xd0c0d860
  41f588:	or     edx,ebx
  41f58a:	jbe    0x41f5ac
  41f58c:	in     eax,dx
  41f58d:	cmp    al,0xba
  41f58f:	inc    esp
  41f590:	imul   ebx,DWORD PTR [ecx],0x23
  41f593:	loop   0x41f614
  41f595:	fcom   QWORD PTR [edx]
  41f597:	retf   
  41f598:	inc    ecx
  41f599:	or     al,0xca
  41f59b:	mov    ah,0x3c
  41f59d:	push   0xfffffffb
  41f59f:	ss jg  0x41f5e9
  41f5a2:	push   esi
  41f5a3:	fidivr WORD PTR [esi+edi*1+0x68]
  41f5a7:	mov    ebx,0x5a197e5f
  41f5ac:	les    ebp,FWORD PTR [edx+0x742aad40]
  41f5b2:	dec    esp
  41f5b3:	in     al,0x1
  41f5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b6:	dec    ebp
  41f5b7:	scas   eax,DWORD PTR es:[edi]
  41f5b8:	mov    ecx,0xd86b0751
  41f5bd:	pop    eax
  41f5be:	ficomp WORD PTR [ebx+0x51c16148]
  41f5c4:	mov    eax,0xbd52cd02
  41f5c9:	mov    al,0x1
  41f5cb:	or     bh,dl
  41f5cd:	push   DWORD PTR [ebx]
  41f5cf:	fwait
  41f5d0:	es and al,0x39
  41f5d3:	jecxz  0x41f567
  41f5d5:	jns    0x41f5f2
  41f5d7:	jbe    0x41f5ec
  41f5d9:	mov    esp,0xdde03701
  41f5de:	or     al,0x49
  41f5e0:	pop    ebx
  41f5e1:	je     0x41f605
  41f5e3:	jle    0x41f5ff
  41f5e5:	arpl   bx,bx
  41f5e7:	gs xchg esp,eax
  41f5e9:	and    al,bh
  41f5eb:	mov    edx,0x5255d8a
  41f5f0:	fimul  WORD PTR [ebp+0x7a]
  41f5f3:	outs   dx,DWORD PTR ds:[esi]
  41f5f4:	add    DWORD PTR [ebx-0x60be34c1],esp
  41f5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5fb:	aas    
  41f5fc:	(bad)  
  41f5fd:	mov    bl,0x99
  41f5ff:	out    0x79,eax
  41f601:	inc    ebp
  41f602:	(bad)  
  41f603:	repz sbb dl,BYTE PTR ds:0x87e1d07e
  41f60a:	mov    BYTE PTR [ecx+ecx*4-0x58ed8001],dl
  41f611:	push   ebp
  41f612:	fild   DWORD PTR es:[ecx-0x77]
  41f616:	xor    DWORD PTR [esi],0x77
  41f619:	popa   
  41f61a:	inc    esi
  41f61b:	in     eax,0x62
  41f61d:	les    edi,FWORD PTR [ebx]
  41f61f:	(bad)  
  41f620:	hlt    
  41f621:	mov    al,ds:0xe2a42b4c
  41f626:	(bad)  
  41f627:	call   0x6317f4a6
  41f62c:	mov    al,0x3a
  41f62e:	ret    
  41f62f:	xchg   esp,eax
  41f630:	inc    eax
  41f631:	sbb    DWORD PTR ds:[edx],eax
  41f634:	test   al,0x69
  41f636:	and    al,0x3e
  41f638:	and    dl,BYTE PTR [ebp+0x6c7cdb43]
  41f63e:	mov    dh,bl
  41f640:	jnp    0x41f68b
  41f642:	sbb    eax,ebp
  41f644:	xchg   esp,eax
  41f645:	mov    ch,0x32
  41f647:	sbb    DWORD PTR es:0x3c679294,edx
  41f64e:	mov    ds:0xfc9497c2,eax
  41f653:	das    
  41f654:	ficom  DWORD PTR [ebx+0x41675fe3]
  41f65a:	dec    ebp
  41f65b:	inc    edi
  41f65c:	in     eax,0xf6
  41f65e:	repz int3 
  41f660:	cmp    al,BYTE PTR [edx-0x4e48f975]
  41f666:	jbe    0x41f6ae
  41f668:	rcl    DWORD PTR [ebx+0xa808d19],0xd7
  41f66f:	xchg   DWORD PTR [ecx],ecx
  41f671:	mov    esp,0x5b169eb8
  41f676:	sbb    DWORD PTR ds:0xc3d72ac7,edx
  41f67c:	cmp    eax,0xdc545ea2
  41f681:	xor    DWORD PTR [eax+esi*4-0x28b488b9],0xdc32cb78
  41f68c:	jg     0x41f6d0
  41f68e:	dec    ecx
  41f68f:	mov    ch,0x95
  41f691:	popa   
  41f692:	mov    bh,0xda
  41f694:	push   ebx
  41f695:	aaa    
  41f696:	std    
  41f697:	push   edx
  41f698:	adc    ch,BYTE PTR [esi-0x4b]
  41f69b:	cdq    
  41f69c:	inc    esi
  41f69d:	scas   eax,DWORD PTR es:[edi]
  41f69e:	(bad)
  41f6a1:	push   ds
  41f6a2:	loop   0x41f645
  41f6a4:	adc    DWORD PTR [esi+0x6d59265a],eax
  41f6aa:	ds sahf 
  41f6ac:	dec    edx
  41f6ad:	adc    eax,0xb8f81fea
  41f6b2:	xchg   esi,eax
  41f6b3:	adc    ebp,esp
  41f6b5:	sub    edx,DWORD PTR [ebp-0x79bf59bc]
  41f6bb:	jo     0x41f6bf
  41f6bd:	dec    edi
  41f6be:	popa   
  41f6bf:	mov    esi,0x538c7b80
  41f6c4:	cmp    bh,BYTE PTR [edi+edi*2+0x55]
  41f6c8:	and    BYTE PTR [edi],al
  41f6ca:	xor    esi,ecx
  41f6cc:	iret   
  41f6cd:	jo     0x41f6e3
  41f6cf:	das    
  41f6d0:	dec    edi
  41f6d1:	inc    DWORD PTR [ebx+eiz*4]
  41f6d4:	adc    ebp,DWORD PTR [ecx+0x20]
  41f6d7:	push   edi
  41f6d8:	outs   dx,DWORD PTR ds:[esi]
  41f6d9:	and    ebx,DWORD PTR [edx]
  41f6db:	lods   al,BYTE PTR ds:[esi]
  41f6dc:	sbb    eax,0x34c85603
  41f6e1:	das    
  41f6e2:	sbb    al,0x7a
  41f6e4:	sbb    ebx,DWORD PTR [esi+0x66]
  41f6e7:	sub    ah,al
  41f6e9:	(bad)  
  41f6ea:	dec    eax
  41f6eb:	leave  
  41f6ec:	or     eax,0x742cffb7
  41f6f1:	jge    0x41f6e4
  41f6f3:	jns    0x41f758
  41f6f5:	test   al,0xe1
  41f6f7:	in     eax,0x18
  41f6f9:	sub    edi,DWORD PTR [edx+0x1e]
  41f6fc:	ss sub eax,0x95b944d8
  41f702:	retf   
  41f703:	(bad)  [eax-0x30]
  41f706:	ret    0xe7b4
  41f709:	dec    ecx
  41f70a:	out    dx,al
  41f70b:	push   0xfffffff9
  41f70d:	sar    bl,cl
  41f70f:	xchg   esi,eax
  41f710:	(bad)  
  41f711:	in     eax,dx
  41f712:	gs cwde 
  41f714:	push   esp
  41f715:	jge    0x41f6a8
  41f717:	cs xchg edx,eax
  41f719:	lds    ebp,FWORD PTR [esi]
  41f71b:	or     bh,BYTE PTR [ecx+eiz*8-0x4e1b888b]
  41f722:	fcom   QWORD PTR [ebx]
  41f724:	imul   edi,DWORD PTR [ebp-0x6761a68b],0x76
  41f72b:	or     eax,0x86aa937d
  41f730:	inc    ecx
  41f731:	xor    eax,0xc684f2fb
  41f736:	in     al,0x5f
  41f738:	mov    al,0xfc
  41f73a:	push   ss
  41f73b:	or     DWORD PTR [ebx-0x45],edi
  41f73e:	dec    ebx
  41f73f:	mov    al,ds:0x54437c97
  41f744:	push   0xe8c27644
  41f749:	mov    esp,0x7a30c525
  41f74e:	add    al,0x14
  41f750:	xor    DWORD PTR [edi],eax
  41f752:	dec    ecx
  41f754:	cmp    dl,BYTE PTR [edx]
  41f756:	mov    DWORD PTR gs:[esi],0xad1e0ea7
  41f75d:	or     DWORD PTR [ebp-0x2ddd86b6],ebx
  41f763:	cli    
  41f764:	and    eax,0xe796371a
  41f769:	ins    DWORD PTR es:[edi],dx
  41f76a:	inc    edx
  41f76b:	in     eax,dx
  41f76c:	mov    ch,0xd6
  41f76e:	std    
  41f76f:	shl    DWORD PTR [esi],1
  41f771:	mov    bh,0xc1
  41f773:	jnp    0x41f7cf
  41f775:	mov    al,0x96
  41f777:	cli    
  41f778:	sub    bl,BYTE PTR [ecx+0x68]
  41f77b:	call   0x3fc84836
  41f780:	mov    edx,0x96d3190b
  41f785:	mov    al,ds:0x702f646e
  41f78a:	cmp    al,0x47
  41f78c:	jne    0x41f7eb
  41f78e:	cmp    edi,DWORD PTR [edi+0x2fbd41c9]
  41f794:	cdq    
  41f795:	add    dl,BYTE PTR [ebx]
  41f797:	loop   0x41f803
  41f799:	mov    al,ds:0x260456f1
  41f79e:	fstp   QWORD PTR [eax]
  41f7a0:	aas    
  41f7a1:	adc    ecx,DWORD PTR [ebp-0x19e37132]
  41f7a7:	jne    0x41f794
  41f7a9:	shl    DWORD PTR [ebx],1
  41f7ab:	pop    esi
  41f7ac:	mov    esp,0x491fed4f
  41f7b1:	cmp    DWORD PTR [esi+0x52cfd4f8],eax
  41f7b7:	jmp    0x7bd5:0xc10f900f
  41f7be:	adc    al,0x46
  41f7c0:	jnp    0x41f7b1
  41f7c2:	xchg   edx,eax
  41f7c3:	mov    ebx,0x9ed7eb59
  41f7c8:	jl     0x41f79a
  41f7ca:	pop    esp
  41f7cb:	stos   BYTE PTR es:[edi],al
  41f7cc:	fdivr  DWORD PTR cs:[ebx-0x5a]
  41f7d0:	jmp    0x41f7c6
  41f7d2:	add    edx,ecx
  41f7d4:	or     DWORD PTR [edi+0x49fbc97c],ebx
  41f7da:	jb     0x41f820
  41f7dc:	cmp    DWORD PTR [ecx],ebx
  41f7de:	mov    WORD PTR ds:0x86d9936a,es
  41f7e4:	stos   DWORD PTR es:[edi],eax
  41f7e5:	sbb    DWORD PTR [ecx+0x54],edi
  41f7e8:	or     bl,dl
  41f7ea:	xchg   esi,eax
  41f7eb:	mov    dl,0x4a
  41f7ed:	mov    BYTE PTR cs:[edx-0x68],dl
  41f7f1:	mov    ch,0x1
  41f7f3:	imul   esi,DWORD PTR [ecx-0x57],0x737a912f
  41f7fa:	mov    ds:0xdc190991,eax
  41f7ff:	fs dec edx
  41f801:	(bad)  
  41f802:	push   esi
  41f803:	sbb    BYTE PTR [ebx-0x2e],bh
  41f806:	sbb    BYTE PTR [ecx-0x14],ch
  41f809:	test   cl,0x95
  41f80c:	pusha  
  41f80d:	push   ds
  41f80e:	test   BYTE PTR [ebx-0x1a],al
  41f811:	fs into 
  41f813:	sbb    DWORD PTR [esi-0x2c],esi
  41f816:	addr16 xor eax,0x697c28a1
  41f81c:	stc    
  41f81d:	cwde   
  41f81e:	xlat   BYTE PTR ds:[ebx]
  41f81f:	xor    BYTE PTR [edx-0x7270f972],ah
  41f825:	jo     0x41f7f8
  41f827:	push   ebp
  41f828:	push   ss
  41f829:	mov    bl,0x2c
  41f82b:	adc    bl,bl
  41f82d:	hlt    
  41f82e:	adc    DWORD PTR ss:[edi-0x6f],edi
  41f832:	jnp    0x41f85a
  41f834:	dec    edx
  41f835:	push   0x6929c52
  41f83a:	out    dx,al
  41f83b:	adc    al,0x2a
  41f83d:	test   eax,0x82860bd3
  41f842:	inc    ecx
  41f843:	mov    esi,0x5b75aa6a
  41f848:	imul   esi,DWORD PTR [ebp+0x69b3436c],0xfffffffa
  41f84f:	dec    eax
  41f850:	ins    DWORD PTR es:[edi],dx
  41f851:	jmp    0x6f1fa1ee
  41f856:	imul   esi,DWORD PTR [ecx+0x62],0x211b7c8b
  41f85d:	fdivr  st,st(6)
  41f85f:	pop    ebp
  41f860:	jl     0x41f813
  41f862:	sub    eax,0x3f07604a
  41f867:	sahf   
  41f868:	adc    DWORD PTR [edi+0x7966e387],ecx
  41f86e:	ja     0x41f85a
  41f870:	ins    DWORD PTR es:[edi],dx
  41f871:	pushf  
  41f872:	out    dx,al
  41f873:	inc    eax
  41f874:	sti    
  41f875:	cmp    al,0xb2
  41f877:	mov    DWORD PTR [ebx-0x27],edi
  41f87a:	test   al,0xa
  41f87c:	add    al,0xc7
  41f87e:	and    DWORD PTR ss:[edi],esp
  41f881:	stos   DWORD PTR es:[edi],eax
  41f882:	icebp  
  41f883:	sub    eax,esi
  41f885:	call   0x19eb:0xbfefc07e
  41f88c:	(bad)  
  41f88d:	cmp    ch,BYTE PTR [eax-0x566f6972]
  41f893:	inc    esi
  41f894:	in     al,0x73
  41f896:	pop    ss
  41f897:	loopne 0x41f8dd
  41f899:	dec    esi
  41f89a:	sub    DWORD PTR [ecx+0x1e],ecx
  41f89d:	cmp    BYTE PTR [ebx*8-0x402da097],ch
  41f8a4:	add    BYTE PTR [eax],bl
  41f8a6:	pop    eax
  41f8a7:	out    dx,al
  41f8a8:	(bad)  
  41f8a9:	push   ds
  41f8aa:	fcmovb st,st(1)
  41f8ac:	pop    ss
  41f8ad:	shl    DWORD PTR [edi+0x1d85703],0x55
  41f8b4:	sahf   
  41f8b5:	ror    DWORD PTR [edx-0x76b35e13],0xb
  41f8bc:	mov    bl,0x1
  41f8be:	adc    bh,ah
  41f8c0:	popf   
  41f8c1:	inc    ebx
  41f8c2:	inc    ecx
  41f8c3:	adc    BYTE PTR [ebx-0x5],bh
  41f8c6:	pop    ebp
  41f8c7:	nop
  41f8c8:	mov    eax,ds:0xce92dac0
  41f8cd:	push   ebp
  41f8ce:	int3   
  41f8cf:	call   0xdaadbe4c
  41f8d4:	and    al,0x76
  41f8d6:	jp     0x41f858
  41f8d8:	sti    
  41f8d9:	mov    al,0x5a
  41f8db:	jmp    DWORD PTR [esi+0x7e]
  41f8de:	fcomip st,st(4)
  41f8e0:	xlat   BYTE PTR ds:[ebx]
  41f8e1:	(bad)
  41f8e4:	inc    edi
  41f8e5:	arpl   WORD PTR [esp+edi*2-0x70],bp
  41f8e9:	mov    bh,cl
  41f8eb:	mov    BYTE PTR [ebp-0x7b],dh
  41f8ee:	mov    bl,0xc0
  41f8f0:	or     al,0x91
  41f8f2:	ins    BYTE PTR es:[edi],dx
  41f8f3:	(bad)  
  41f8f5:	inc    esp
  41f8f6:	cld    
  41f8f7:	leave  
  41f8f8:	push   es
  41f8f9:	es repnz push ds
  41f8fc:	(bad)  
  41f8fd:	jnp    0x41f962
  41f8ff:	call   0x9afc:0x18c99149
  41f906:	sti    
  41f907:	out    dx,al
  41f908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f909:	hlt    
  41f90a:	hlt    
  41f90b:	xchg   ecx,eax
  41f90c:	sub    ebp,esi
  41f90e:	out    dx,al
  41f90f:	add    BYTE PTR [esi+0x511ba808],ch
  41f915:	cmp    bl,BYTE PTR ds:0x95cd7edc
  41f91b:	sbb    edi,DWORD PTR [ebp+0x9]
  41f91e:	push   cs
  41f91f:	in     eax,0x8b
  41f921:	xor    al,BYTE PTR [edx-0x4f]
  41f924:	icebp  
  41f925:	fild   QWORD PTR [ecx+0x16]
  41f928:	mov    eax,ds:0xe8edc550
  41f92d:	jg     0x41f97e
  41f92f:	xchg   edi,eax
  41f930:	out    dx,al
  41f931:	jno    0x41f8c8
  41f933:	sbb    eax,0x11c67501
  41f938:	les    ebp,FWORD PTR [edi]
  41f93a:	in     eax,0x4f
  41f93c:	aaa    
  41f93d:	data16 mov dl,0x78
  41f940:	shl    edi,1
  41f942:	stos   BYTE PTR es:[edi],al
  41f943:	cwde   
  41f944:	and    ebx,DWORD PTR [edx+0x3c]
  41f947:	or     dh,0x2d
  41f94a:	out    dx,al
  41f94b:	mov    esi,0x79d174bd
  41f950:	push   ebp
  41f951:	(bad)  [edx]
  41f953:	cwde   
  41f954:	sub    eax,0xd3c0eb80
  41f959:	sub    al,0xff
  41f95b:	mov    ds:0xe595ae98,al
  41f960:	sbb    ah,BYTE PTR [ecx]
  41f962:	mov    al,0xdd
  41f964:	inc    ebp
  41f965:	icebp  
  41f966:	rcr    DWORD PTR [edi+0x7a],cl
  41f969:	mov    cl,0xbd
  41f96b:	(bad)  
  41f96c:	cmp    al,0x8e
  41f96e:	aad    0xb7
  41f970:	mov    ah,0xfb
  41f972:	imul   ecx,DWORD PTR [esi],0x4dbb69bd
  41f978:	ss jl  0x41f9d6
  41f97b:	outs   dx,DWORD PTR ds:[esi]
  41f97c:	out    0x5e,eax
  41f97e:	xchg   DWORD PTR [edi+0x2c0a5928],eax
  41f984:	cmp    edx,0x861e0013
  41f98a:	stos   DWORD PTR es:[edi],eax
  41f98b:	jns    0x41f939
  41f98d:	in     al,0x81
  41f98f:	sub    BYTE PTR [edx],al
  41f991:	pop    ebx
  41f992:	lods   eax,DWORD PTR ds:[esi]
  41f993:	mov    cl,0xb6
  41f995:	pop    ss
  41f996:	sub    bl,0x7
  41f999:	mov    al,ds:0x41990aa2
  41f99e:	mov    edx,0x6828f391
  41f9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a4:	fwait
  41f9a5:	sbb    ebx,edi
  41f9a7:	je     0x41f948
  41f9a9:	push   ss
  41f9aa:	out    dx,al
  41f9ab:	fnsave [edx-0x1f8deb18]
  41f9b1:	mov    ecx,0xf105bd96
  41f9b6:	shl    eax,cl
  41f9b8:	push   0x60
  41f9ba:	push   cs
  41f9bb:	js     0x41fa1d
  41f9bd:	jnp    0x41f974
  41f9bf:	mov    ch,0xc
  41f9c1:	jle    0x41f971
  41f9c3:	jg     0x41fa1f
  41f9c5:	inc    ebx
  41f9c6:	mov    cl,0xa5
  41f9c8:	jecxz  0x41fa24
  41f9ca:	test   BYTE PTR [esi-0x4bf7efbb],al
  41f9d0:	ins    DWORD PTR es:[edi],dx
  41f9d1:	sar    BYTE PTR [esi+0x7],cl
  41f9d4:	push   0xa3f1078
  41f9d9:	add    BYTE PTR [ebx-0xa3d9204],ah
  41f9df:	in     eax,0xbd
  41f9e1:	xchg   edi,eax
  41f9e2:	test   eax,0xca0f7767
  41f9e7:	(bad)  
  41f9e8:	popf   
  41f9e9:	fwait
  41f9ea:	cmp    al,0x9e
  41f9ec:	aas    
  41f9ed:	xchg   ebp,eax
  41f9ee:	and    BYTE PTR [esi],al
  41f9f0:	pop    esi
  41f9f1:	mov    eax,0x423e6ae0
  41f9f6:	cs ret 0x5b02
  41f9fa:	pop    esi
  41f9fb:	repnz leave 
  41f9fd:	div    DWORD PTR [ecx-0x47]
  41fa00:	dec    edi
  41fa01:	rcr    DWORD PTR [esi-0x3d],1
  41fa04:	mov    eax,ds:0x419770f
  41fa09:	xor    dl,BYTE PTR [esi+0x2f]
  41fa0c:	js     0x41fa4e
  41fa0e:	in     eax,0x76
  41fa10:	push   ebp
  41fa11:	xor    al,0x6
  41fa13:	jge    0x41f99d
  41fa15:	clc    
  41fa16:	in     al,dx
  41fa17:	lods   al,BYTE PTR ds:[esi]
  41fa18:	push   eax
  41fa19:	mov    bl,0x19
  41fa1b:	clc    
  41fa1c:	std    
  41fa1d:	pop    esp
  41fa1e:	sub    eax,DWORD PTR [eax+0x136ee3e8]
  41fa24:	xor    ah,BYTE PTR [edi+0x28269667]
  41fa2a:	adc    eax,DWORD PTR [edi]
  41fa2c:	mov    edi,0x121f4c86
  41fa31:	aas    
  41fa32:	das    
  41fa33:	repnz (bad) 
  41fa35:	dec    edx
  41fa36:	gs int 0xa9
  41fa39:	fcomp  QWORD PTR ds:0x52de2a49
  41fa3f:	mov    cl,0x35
  41fa41:	mov    al,ds:0xf29626f0
  41fa46:	jmp    0x41fa4f
  41fa48:	out    dx,al
  41fa49:	add    eax,0xbcd3756a
  41fa4e:	push   0xf03bc13e
  41fa53:	shl    dl,0xcf
  41fa56:	stos   BYTE PTR es:[edi],al
  41fa57:	push   ss
  41fa58:	mov    ds:0xc9d99399,eax
  41fa5d:	ror    DWORD PTR [esi],1
  41fa5f:	mov    ds:0x627393ab,eax
  41fa64:	mov    cl,0x65
  41fa66:	sbb    ebx,esp
  41fa68:	mov    cl,0xd0
  41fa6a:	lea    ecx,[ebx]
  41fa6c:	dec    edi
  41fa6d:	(bad)  
  41fa6e:	aas    
  41fa6f:	scas   al,BYTE PTR es:[di]
  41fa71:	loop   0x41f9fd
  41fa73:	out    0xb6,al
  41fa75:	push   esi
  41fa76:	jg     0x41faa7
  41fa78:	cmp    DWORD PTR [ebx],ebx
  41fa7a:	push   0x2c
  41fa7c:	or     al,0xcf
  41fa7e:	clc    
  41fa7f:	add    eax,0x65eb0d12
  41fa84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa85:	jnp    0x41fae2
  41fa87:	outs   dx,DWORD PTR ds:[esi]
  41fa88:	and    al,BYTE PTR [eax+0x11]
  41fa8b:	jae    0x41faee
  41fa8d:	fistp  DWORD PTR [ecx-0x45]
  41fa90:	push   edx
  41fa91:	mov    ds,WORD PTR [edx+ecx*1-0x52955076]
  41fa98:	(bad)  
  41fa99:	mov    dh,0x94
  41fa9b:	mov    dh,0xfe
  41fa9d:	pop    ds
  41fa9e:	and    BYTE PTR [ebx+0x44f6ecf0],bh
  41faa4:	imul   ebp,DWORD PTR [esi+0x69178bb7],0xffffff87
  41faab:	pop    edi
  41faac:	ret    0x10a1
  41faaf:	push   edx
  41fab0:	loopne 0x41fb02
  41fab2:	mov    cl,0xd8
  41fab4:	leave  
  41fab5:	mov    ?,esp
  41fab7:	pusha  
  41fab8:	push   0x73
  41faba:	cmc    
  41fabb:	in     al,dx
  41fabc:	fild   DWORD PTR [eax]
  41fabe:	int    0x64
  41fac0:	mov    cl,0x95
  41fac2:	pop    ebx
  41fac3:	push   ebx
  41fac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fac6:	xchg   esp,eax
  41fac7:	xchg   edx,eax
  41fac8:	sbb    eax,edi
  41faca:	mov    dh,0x33
  41facc:	mov    ah,0x52
  41face:	pop    ss
  41facf:	xchg   esi,eax
  41fad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fad1:	sahf   
  41fad2:	in     eax,0x5e
  41fad4:	push   ecx
  41fad5:	jecxz  0x41faab
  41fad7:	sub    WORD PTR [ebx+0x2a],cx
  41fadb:	mov    ch,0x2f
  41fadd:	mov    ds:0x24db7e8b,eax
  41fae2:	mov    bh,0xc4
  41fae4:	sub    esp,DWORD PTR [eax]
  41fae6:	jbe    0x41fb25
  41fae8:	sti    
  41fae9:	leave  
  41faea:	push   es
  41faeb:	in     al,dx
  41faec:	div    DWORD PTR [esi*8-0x3c255594]
  41faf3:	lds    edx,FWORD PTR [edx-0x1c]
  41faf6:	fisub  WORD PTR [ecx]
  41faf8:	mov    al,0x13
  41fafa:	hlt    
  41fafb:	mov    dh,0x3c
  41fafd:	adc    BYTE PTR [ebx-0x4a],ah
  41fb00:	or     edx,DWORD PTR [esi]
  41fb02:	pop    ds
  41fb03:	call   0xab79a340
  41fb08:	iret   
  41fb09:	leave  
  41fb0a:	js     0x41fb5a
  41fb0c:	push   ds
  41fb0d:	mov    esp,DWORD PTR [eax]
  41fb0f:	(bad)  
  41fb10:	mov    edi,?
  41fb12:	dec    edi
  41fb13:	loope  0x41faf9
  41fb15:	and    ebx,ebx
  41fb17:	outs   dx,BYTE PTR ds:[esi]
  41fb18:	ss mov edi,0x3ecbad91
  41fb1e:	and    eax,0xca7ac8c6
  41fb23:	mov    BYTE PTR [esi],dh
  41fb25:	mov    dh,0xd9
  41fb27:	inc    eax
  41fb28:	rol    DWORD PTR [ebp+ecx*4+0x5],cl
  41fb2c:	(bad)  
  41fb2d:	or     DWORD PTR [ebp-0x1b],esi
  41fb30:	(bad)  
  41fb31:	in     eax,0x8e
  41fb33:	ins    DWORD PTR es:[edi],dx
  41fb34:	xchg   esi,eax
  41fb35:	hlt    
  41fb36:	add    al,ch
  41fb38:	pop    ebx
  41fb39:	mov    esp,0x885e721a
  41fb3e:	xlat   BYTE PTR ds:[ebx]
  41fb3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb40:	repnz fbstp TBYTE PTR [ebp-0x6f]
  41fb44:	xlat   BYTE PTR ds:[ebx]
  41fb45:	inc    ebx
  41fb46:	stos   BYTE PTR es:[edi],al
  41fb47:	jg     0x9a61ae8b
  41fb4d:	daa    
  41fb4e:	in     al,dx
  41fb4f:	sub    DWORD PTR [ebx+esi*8],edi
  41fb52:	popf   
  41fb53:	lock mov DWORD PTR [edx+ebx*4],esp
  41fb57:	lods   al,BYTE PTR ds:[esi]
  41fb58:	fsub   st(2),st
  41fb5a:	adc    al,0xb4
  41fb5c:	or     ch,bh
  41fb5e:	aad    0xd8
  41fb60:	dec    eax
  41fb61:	add    DWORD PTR [ebx+0x9],edi
  41fb64:	mov    bh,0xa3
  41fb66:	test   ecx,ebx
  41fb68:	test   al,0xaf
  41fb6a:	xor    cl,BYTE PTR [eax-0x446674fd]
  41fb70:	in     al,dx
  41fb71:	iret   
  41fb72:	xchg   ecx,eax
  41fb73:	aas    
  41fb74:	mov    dl,0x21
  41fb76:	cmp    ebx,DWORD PTR [ebx-0x3f]
  41fb79:	pop    edi
  41fb7a:	xchg   edi,eax
  41fb7b:	add    DWORD PTR [eax-0x5c47b03b],edi
  41fb81:	add    al,0x49
  41fb83:	pop    ds
  41fb84:	add    esp,DWORD PTR [edi]
  41fb86:	rcl    eax,0xb4
  41fb89:	lahf   
  41fb8a:	jge    0x41fb58
  41fb8c:	push   edi
  41fb8d:	push   ds
  41fb8e:	in     al,0x30
  41fb90:	dec    edi
  41fb91:	cs sbb al,0x89
  41fb94:	mov    edi,0x5b6b77dd
  41fb99:	es enter 0xfb68,0xf1
  41fb9e:	(bad)  
  41fba1:	int3   
  41fba2:	sbb    BYTE PTR [edx+0x3e],al
  41fba5:	sbb    ebp,DWORD PTR [eax+0x44]
  41fba8:	dec    eax
  41fba9:	push   ebp
  41fbaa:	fwait
  41fbab:	and    DWORD PTR [edx+0x3266b070],0xe0f8566b
  41fbb5:	xchg   edi,eax
  41fbb6:	push   esi
  41fbb7:	ret    
  41fbb8:	mov    ecx,0xc963255f
  41fbbd:	(bad)
  41fbc2:	add    dh,ch
  41fbc4:	mov    ds:0x8d7ba2e0,al
  41fbc9:	push   ecx
  41fbca:	clc    
  41fbcb:	jns    0x41fbb3
  41fbcd:	ds pop esp
  41fbcf:	jo     0x41fbb4
  41fbd1:	add    eax,ebx
  41fbd3:	adc    al,0x62
  41fbd5:	fs inc ecx
  41fbd7:	pop    ss
  41fbd8:	mov    ds:0x6460188f,eax
  41fbdd:	xor    BYTE PTR cs:[ecx+0x5f427c7c],bl
  41fbe4:	jbe    0x41fc4f
  41fbe6:	pop    es
  41fbe7:	dec    ebp
  41fbe8:	mov    ds:0xd1f4ca11,al
  41fbed:	aad    0x11
  41fbef:	bound  esi,QWORD PTR [esp+ecx*8-0x35]
  41fbf3:	gs icebp 
  41fbf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbf6:	popa   
  41fbf7:	and    esp,DWORD PTR [ebx-0x353e984]
  41fbfd:	fld    QWORD PTR [esi-0x28]
  41fc00:	inc    ecx
  41fc01:	dec    ebp
  41fc02:	mov    ebx,0x2b51eda
  41fc07:	sbb    BYTE PTR [edi-0x141cc53b],bl
  41fc0d:	mov    ebp,0xc5859b91
  41fc12:	mov    ?,WORD PTR [edx]
  41fc14:	jnp    0x41fb9d
  41fc16:	and    eax,0xece0a242
  41fc1b:	xchg   DWORD PTR [edx-0x21d1209d],edx
  41fc21:	mov    ah,0x44
  41fc23:	push   edi
  41fc24:	mov    dh,0x91
  41fc26:	add    edx,DWORD PTR [esp+ebp*2-0x1f]
  41fc2a:	aas    
  41fc2b:	(bad)  
  41fc2c:	loope  0x41fbc3
  41fc2e:	jge    0x41fc09
  41fc30:	jp     0x41fc58
  41fc32:	hlt    
  41fc33:	sar    BYTE PTR [esi+0x90cef2c],cl
  41fc39:	jmp    0xc25d:0x5404607f
  41fc40:	mov    dl,0xaa
  41fc42:	ret    0x35dd
  41fc45:	out    dx,eax
  41fc46:	cwde   
  41fc47:	push   es
  41fc48:	movlps QWORD PTR [edx-0x1b],xmm6
  41fc4c:	(bad)  
  41fc4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc4e:	test   BYTE PTR [esi],dl
  41fc50:	adc    al,0xc2
  41fc52:	in     al,0x8c
  41fc54:	popf   
  41fc55:	inc    edi
  41fc56:	and    ch,ch
  41fc58:	dec    esi
  41fc59:	(bad)  
  41fc5a:	repnz pop esi
  41fc5c:	push   ss
  41fc5d:	sbb    al,0x9f
  41fc5f:	les    esi,FWORD PTR [ebx+ebx*4+0x2d13b4b]
  41fc66:	dec    esi
  41fc67:	dec    esi
  41fc68:	in     eax,dx
  41fc69:	dec    esp
  41fc6a:	jg     0x41fbec
  41fc6c:	fld    st(1)
  41fc6e:	shr    BYTE PTR [edi+0x4d],1
  41fc71:	clc    
  41fc72:	and    DWORD PTR [eax-0x7309c68a],esi
  41fc78:	jle    0x41fcaa
  41fc7a:	jmp    0x41fc65
  41fc7c:	inc    edi
  41fc7d:	add    al,0x91
  41fc7f:	mov    esp,0xcbd3813c
  41fc84:	pop    edi
  41fc85:	add    al,0x57
  41fc87:	xchg   edi,eax
  41fc88:	add    BYTE PTR [edx],dh
  41fc8a:	fild   QWORD PTR [eax+0x31]
  41fc8d:	sub    al,0x96
  41fc8f:	push   edi
  41fc90:	pop    ebx
  41fc91:	test   eax,0x7ba367a
  41fc96:	mul    BYTE PTR [esi+0x1427e52]
  41fc9c:	dec    ebp
  41fc9d:	adc    BYTE PTR [ebp+ebp*1+0x40485a5e],ch
  41fca4:	sbb    DWORD PTR ds:0xdf9ecb23,edx
  41fcaa:	adc    eax,0x83114d40
  41fcaf:	(bad)  
  41fcb0:	mov    edx,0x93689477
  41fcb5:	mov    ch,0xb
  41fcb7:	push   ebx
  41fcb8:	adc    edx,edx
  41fcba:	mov    eax,ds:0xd4bb6502
  41fcbf:	push   esi
  41fcc0:	cmp    al,0x44
  41fcc2:	xchg   edi,eax
  41fcc3:	pop    ebx
  41fcc4:	pop    esi
  41fcc5:	in     eax,0x4f
  41fcc7:	add    ecx,ebp
  41fcc9:	(bad)  
  41fcca:	push   cs
  41fccb:	cs jge 0x41fca3
  41fcce:	mov    edx,DWORD PTR [esi-0x67]
  41fcd1:	into   
  41fcd2:	xchg   ebp,eax
  41fcd3:	cs hlt 
  41fcd5:	pop    esi
  41fcd6:	sbb    al,0x44
  41fcd8:	aam    0x42
  41fcda:	iret   
  41fcdb:	mov    eax,ds:0x285b4602
  41fce0:	(bad)  
  41fce2:	dec    ebx
  41fce3:	cs pop edi
  41fce5:	push   0xf0137dee
  41fcea:	push   eax
  41fceb:	test   eax,0xae5e5a8b
  41fcf0:	pop    esi
  41fcf1:	ret    0x5af6
  41fcf4:	repnz mul DWORD PTR [edi-0x38]
  41fcf8:	and    dh,al
  41fcfa:	adc    al,0x62
  41fcfc:	(bad)  
  41fcfd:	aaa    
  41fcfe:	lods   eax,DWORD PTR ds:[esi]
  41fcff:	or     al,0xc4
  41fd01:	xor    bl,BYTE PTR [edi]
  41fd03:	dec    esi
  41fd04:	add    DWORD PTR [ecx],0x20458806
  41fd0a:	rcl    DWORD PTR [ecx],0xc
  41fd0d:	jmp    0x41fd2f
  41fd0f:	push   0x4acd5557
  41fd14:	inc    ebx
  41fd15:	pusha  
  41fd16:	push   esp
  41fd17:	cmp    BYTE PTR [esi-0x2d],dh
  41fd1a:	out    dx,eax
  41fd1b:	inc    esi
  41fd1c:	jnp    0x41fcb7
  41fd1e:	inc    ebx
  41fd1f:	jge    0x41fd0b
  41fd21:	inc    eax
  41fd22:	pop    es
  41fd23:	pop    ebp
  41fd24:	sbb    ebp,DWORD PTR [edi-0x37]
  41fd27:	jb     0x41fd62
  41fd29:	lods   al,BYTE PTR ds:[esi]
  41fd2a:	aam    0xd3
  41fd2c:	jle    0x41fd24
  41fd2e:	fcom   DWORD PTR [ebx-0x1d]
  41fd31:	outs   dx,DWORD PTR ds:[esi]
  41fd32:	cmc    
  41fd33:	dec    ecx
  41fd34:	push   cs
  41fd35:	mov    al,ds:0x28c3b9cc
  41fd3a:	dec    esi
  41fd3b:	mov    bl,BYTE PTR [esi]
  41fd3d:	xchg   ecx,eax
  41fd3e:	sahf   
  41fd3f:	popa   
  41fd40:	inc    ebx
  41fd41:	jp     0x41fd1f
  41fd43:	test   BYTE PTR [ecx+0x58],bl
  41fd46:	loop   0x41fd43
  41fd48:	(bad)  
  41fd49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd4a:	xchg   BYTE PTR [eax],dh
  41fd4c:	jecxz  0x41fd27
  41fd4e:	xlat   BYTE PTR ds:[ebx]
  41fd4f:	ds jle 0x41fd44
  41fd52:	adc    bh,BYTE PTR [ebx+ebp*2]
  41fd55:	jne    0x41fcff
  41fd57:	mov    cl,0xb6
  41fd59:	inc    edi
  41fd5a:	imul   si,WORD PTR [esi+0x6d],0x7b
  41fd5f:	dec    eax
  41fd60:	jl     0x41fce7
  41fd62:	es loop 0x41fcef
  41fd65:	retf   
  41fd66:	sub    BYTE PTR [eax-0x5d],ch
  41fd69:	cld    
  41fd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd6b:	cmp    BYTE PTR [ecx],ah
  41fd6d:	sub    ch,cl
  41fd6f:	pop    ebp
  41fd70:	lds    edx,FWORD PTR [ebx-0x689bc54b]
  41fd76:	inc    esp
  41fd77:	mov    al,ds:0x9b00f1dd
  41fd7c:	cmp    DWORD PTR [ecx],eax
  41fd7e:	mov    ds:0x278438e5,al
  41fd83:	pop    ds
  41fd84:	shr    BYTE PTR [eax],0x59
  41fd87:	imul   ebp,DWORD PTR [ebp-0x4e],0x4a2e7b8c
  41fd8e:	mov    al,0x92
  41fd90:	inc    esp
  41fd91:	(bad)  
  41fd92:	retf   0xd126
  41fd95:	inc    edi
  41fd96:	xor    al,0xac
  41fd98:	or     eax,0xe28a7b97
  41fd9d:	sub    eax,0xf4047712
  41fda2:	test   al,0x10
  41fda4:	sbb    DWORD PTR [ebp+0x6cc9aaa4],0x1d25634c
  41fdae:	daa    
  41fdaf:	and    al,0xb0
  41fdb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdb2:	sub    DWORD PTR [ecx+edx*2],esp
  41fdb5:	sbb    cl,BYTE PTR ds:0x55be1de5
  41fdbb:	int    0xff
  41fdbd:	inc    edx
  41fdbe:	das    
  41fdbf:	mov    al,ds:0x18aa2b0f
  41fdc4:	mov    ebx,0xe1cdcaf4
  41fdc9:	in     al,0xcb
  41fdcb:	jne    0x41fd9e
  41fdcd:	iret   
  41fdce:	loope  0x41fd67
  41fdd0:	(bad)  
  41fdd1:	mov    esp,0x8a5ed4b4
  41fdd6:	mov    bh,cl
  41fdd8:	ja     0x41fdbe
  41fdda:	inc    ecx
  41fddb:	jns    0x41fe28
  41fddd:	push   0xea5536bc
  41fde2:	push   eax
  41fde3:	lahf   
  41fde4:	mov    dl,0x36
  41fde6:	stos   DWORD PTR es:[edi],eax
  41fde7:	inc    esp
  41fde8:	add    eax,eax
  41fdea:	cmp    BYTE PTR [edi+0x2222887b],ah
  41fdf0:	jo     0x41fdbb
  41fdf2:	cmp    dh,BYTE PTR [ebx-0x18430f97]
  41fdf8:	das    
  41fdf9:	lds    ebx,FWORD PTR [edx+0x1f63077e]
  41fdff:	outs   dx,DWORD PTR ds:[esi]
  41fe00:	into   
  41fe01:	xchg   edi,esi
  41fe03:	adc    al,BYTE PTR [eax+0x6d]
  41fe06:	test   BYTE PTR [edi],0x25
  41fe09:	arpl   WORD PTR [edx+0x40d95f93],bp
  41fe0f:	(bad)  
  41fe10:	ins    BYTE PTR es:[edi],dx
  41fe11:	xchg   DWORD PTR [ebx],ebx
  41fe13:	jl     0x41fe50
  41fe15:	pop    es
  41fe16:	or     BYTE PTR [eax+0x20c28ce1],0xc4
  41fe1d:	loop   0x41fe64
  41fe1f:	enter  0xd44a,0xba
  41fe23:	jnp    0x41fe46
  41fe25:	dec    ecx
  41fe26:	jmp    0xcf323d05
  41fe2b:	sahf   
  41fe2c:	es push es
  41fe2e:	adc    BYTE PTR [esi+edx*1+0xf],bl
  41fe32:	pushf  
  41fe33:	xchg   ecx,eax
  41fe34:	stos   BYTE PTR es:[edi],al
  41fe35:	xor    DWORD PTR [eax+0x31],0xf8ff73a1
  41fe3c:	xor    esi,DWORD PTR [ebp+0x4c9abd8f]
  41fe42:	sahf   
  41fe43:	push   ss
  41fe44:	(bad)  
  41fe45:	sub    ebx,DWORD PTR [edi-0x77eeb654]
  41fe4b:	jmp    DWORD PTR [edi-0x53]
  41fe4e:	arpl   si,di
  41fe50:	sahf   
  41fe51:	cmp    bh,BYTE PTR [ecx+edi*2]
  41fe54:	inc    esp
  41fe55:	adc    eax,0xdf274092
  41fe5a:	xchg   DWORD PTR [ecx],ecx
  41fe5c:	mov    cl,0x50
  41fe5e:	or     eax,0xe6cae1e4
  41fe63:	aaa    
  41fe64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe65:	jnp    0x41fdf9
  41fe67:	arpl   WORD PTR [ebx],di
  41fe69:	es mov dl,0xcc
  41fe6c:	xchg   DWORD PTR [eax-0x62],esp
  41fe6f:	icebp  
  41fe70:	jg     0x41fe43
  41fe72:	sar    cl,cl
  41fe74:	add    eax,0x60831656
  41fe79:	cmpps  xmm0,XMMWORD PTR [edx-0x1c],0xe
  41fe7e:	les    edx,FWORD PTR [edx]
  41fe80:	pop    ecx
  41fe81:	mov    bl,0xd2
  41fe83:	out    dx,eax
  41fe84:	sbb    al,bl
  41fe86:	push   edi
  41fe87:	sbb    BYTE PTR [esi-0x32],0xe1
  41fe8b:	ret    0x1ad6
  41fe8e:	inc    edx
  41fe8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe90:	sub    DWORD PTR [ecx+eiz*1],esi
  41fe93:	fcomp  QWORD PTR [ebx+0x5b]
  41fe96:	xchg   BYTE PTR [ecx],dh
  41fe98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe99:	dec    edi
  41fe9a:	dec    edx
  41fe9b:	dec    esi
  41fe9c:	inc    esi
  41fe9d:	pushf  
  41fe9e:	jb     0x41fead
  41fea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea1:	mov    dl,0x58
  41fea3:	mov    edi,0x21dfa8fb
  41fea8:	sub    ch,BYTE PTR [eax-0x13]
  41feab:	mov    ebx,0xa27f2ffa
  41feb0:	mov    esi,0x79ced7e8
  41feb5:	fimul  WORD PTR [eax]
  41feb7:	addr16 adc edi,0x69e4f1a7
  41febe:	imul   ebx,edx,0xdda0d35c
  41fec4:	nop
  41fec5:	push   es
  41fec6:	adc    ch,BYTE PTR [eax-0x4bb25a39]
  41fecc:	lds    ebp,FWORD PTR [edx-0x39]
  41fecf:	push   ebx
  41fed0:	bnd fs jmp ebx
  41fed4:	call   0x12848254
  41fed9:	pop    esi
  41feda:	sti    
  41fedb:	pop    esp
  41fedc:	and    edx,edx
  41fede:	in     eax,dx
  41fedf:	push   es
  41fee0:	xchg   edx,eax
  41fee1:	xor    BYTE PTR [eax],0x63
  41fee4:	sub    eax,0x20794bc7
  41fee9:	gs jns 0x41fead
  41feec:	jp     0x41ff3c
  41feee:	inc    edi
  41feef:	ror    DWORD PTR [edx+0x382a3aed],cl
  41fef5:	scas   eax,DWORD PTR es:[edi]
  41fef6:	pop    ss
  41fef7:	or     ecx,eax
  41fef9:	scas   al,BYTE PTR es:[edi]
  41fefa:	dec    eax
  41fefb:	inc    esp
  41fefc:	jge    0x41fedd
  41fefe:	push   ss
  41feff:	aas    
  41ff00:	or     ebx,ebp
  41ff02:	rcr    BYTE PTR [eax+0xe5c9af8],1
  41ff08:	jle    0x41fecc
  41ff0a:	in     eax,dx
  41ff0b:	leave  
  41ff0c:	xor    bh,BYTE PTR [edi+0x1d902a36]
  41ff12:	mov    ah,0xc7
  41ff14:	sub    eax,0xa7ebd93
  41ff19:	jo     0x41ff52
  41ff1b:	jecxz  0x41ff9a
  41ff1d:	les    ecx,FWORD PTR [ecx-0xfa7c32f]
  41ff23:	xchg   DWORD PTR [edx+0x48],eax
  41ff26:	mov    ?,WORD PTR [ebx]
  41ff28:	loope  0x41fed4
  41ff2a:	cmp    eax,0x1c5b709a
  41ff2f:	out    dx,eax
  41ff30:	in     eax,0xa5
  41ff32:	popa   
  41ff33:	xor    eax,0x743cf370
  41ff38:	or     DWORD PTR [esi+0x6536b80d],ebp
  41ff3e:	add    DWORD PTR [esi+edx*8],0xb525ccae
  41ff45:	add    ecx,DWORD PTR [ebp+0x4]
  41ff48:	xchg   esp,eax
  41ff49:	inc    edi
  41ff4a:	stos   BYTE PTR es:[edi],al
  41ff4b:	and    esp,DWORD PTR [eax+0x7f]
  41ff4e:	add    DWORD PTR [eax],ebx
  41ff50:	repz adc DWORD PTR [ebp+0x71],0x8b1ab877
  41ff58:	nop
  41ff59:	icebp  
  41ff5a:	mov    edi,DWORD PTR [esi+ecx*8+0x3d]
  41ff5e:	fwait
  41ff5f:	mov    ds:0xe69e3804,al
  41ff64:	jp     0x41ff4f
  41ff66:	jmp    0xbc37:0xc8f84cdd
  41ff6d:	or     BYTE PTR [edi-0x45],bl
  41ff70:	(bad)  
  41ff71:	dec    ebx
  41ff72:	sbb    edx,DWORD PTR [ecx+0x7f]
  41ff75:	dec    esi
  41ff76:	sbb    cl,ah
  41ff78:	pop    ss
  41ff79:	sub    ecx,esi
  41ff7b:	std    
  41ff7c:	cmc    
  41ff7d:	dec    esp
  41ff7e:	push   ds
  41ff7f:	jg     0x41ffe6
  41ff81:	xor    DWORD PTR [edi+0x1c],ecx
  41ff84:	mov    cl,0x69
  41ff86:	and    DWORD PTR [eax+edi*1+0x10],0xf8c41072
  41ff8e:	data16 jns 0x41ff9d
  41ff91:	push   eax
  41ff92:	ret    
  41ff93:	sbb    esp,edi
  41ff95:	pop    edi
  41ff96:	cmp    BYTE PTR [edx-0x542eab41],al
  41ff9c:	cmp    esp,ebp
  41ff9e:	jne    0x41ff47
  41ffa0:	call   0xf115:0x205e78b3
  41ffa7:	jne    0x420022
  41ffa9:	dec    esi
  41ffaa:	mov    BYTE PTR [esi-0x3a],dh
  41ffad:	jg     0x41ff59
  41ffaf:	rol    ch,cl
  41ffb1:	mov    ch,0xed
  41ffb3:	pop    ss
  41ffb4:	ja     0x42002d
  41ffb6:	jl     0x420028
  41ffb8:	fstp   TBYTE PTR [esi]
  41ffba:	mov    ds:0xd23df2f6,eax
  41ffbf:	and    BYTE PTR [ebx-0x54],dh
  41ffc2:	ins    BYTE PTR es:[edi],dx
  41ffc3:	and    eax,0x57187667
  41ffc8:	cmp    bl,BYTE PTR [edi]
  41ffca:	out    dx,al
  41ffcb:	jo     0x41ff83
  41ffcd:	(bad)  
  41ffce:	pop    ecx
  41ffcf:	lods   eax,DWORD PTR ds:[esi]
  41ffd0:	sbb    BYTE PTR [eax],dl
  41ffd2:	les    esi,FWORD PTR [ebx+0x64]
  41ffd5:	jg     0x41ffaf
  41ffd7:	inc    BYTE PTR [ebx-0xd6e2990]
  41ffdd:	jb     0x42000e
  41ffdf:	inc    esp
  41ffe0:	jge    0x42000d
  41ffe2:	clc    
  41ffe3:	in     eax,0x6e
  41ffe5:	les    ebx,FWORD PTR ds:0xd13942a1
  41ffeb:	mov    dh,0xb9
  41ffed:	mov    bl,cl
  41ffef:	ret    
  41fff0:	out    0x82,al
  41fff2:	jecxz  0x420027
  41fff4:	dec    esp
  41fff5:	mov    dl,0xf2
  41fff7:	dec    ebx
  41fff8:	mov    edi,DWORD PTR [esi]
  41fffa:	gs pop edx
  41fffc:	out    dx,eax
  41fffd:	mov    ds:0x1421230e,al
  420002:	clc    
  420003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420004:	(bad)  
  420005:	retf   0x6876
  420008:	pop    esi
  420009:	shr    BYTE PTR [edx+0x2ec61686],0x62
  420010:	xchg   esp,eax
  420011:	mov    ebx,0x22d19878
  420016:	popa   
  420017:	hlt    
  420018:	or     bl,dh
  42001a:	outs   dx,DWORD PTR ds:[esi]
  42001b:	mov    esi,0xc73dd8fc
  420020:	and    BYTE PTR [bp+di+0x4fb3],ch
  420025:	mov    ebp,0xfd18fb99
  42002a:	xchg   edi,eax
  42002b:	into   
  42002c:	inc    ebp
  42002d:	int    0xdc
  42002f:	pop    edx
  420030:	jmp    0x8fd51173
  420035:	mov    bh,0xc1
  420037:	fisub  WORD PTR [ebp-0x3f1c1ef1]
  42003d:	cdq    
  42003e:	repnz stc 
  420040:	mov    ebx,0xf5c59a6a
  420045:	sbb    DWORD PTR [ebx+ebp*2],ecx
  420048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420049:	pushf  
  42004a:	inc    ecx
  42004c:	sbb    DWORD PTR [eax-0x12],ebx
  42004f:	push   edx
  420050:	out    0x5b,eax
  420052:	mov    ah,0xe5
  420054:	test   al,0xc1
  420056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420057:	inc    ebp
  420058:	mov    bl,BYTE PTR [ebx]
  42005a:	or     esi,DWORD PTR [eax]
  42005c:	cli    
  42005d:	add    DWORD PTR [esi+0x1c],ebx
  420060:	push   esp
  420061:	ins    DWORD PTR es:[edi],dx
  420062:	pop    ds
  420063:	add    eax,0xef660e7b
  420068:	popa   
  420069:	cdq    
  42006a:	pop    edi
  42006b:	sub    BYTE PTR [edx+eax*8+0x500a1c12],bh
  420072:	nop
  420073:	ins    BYTE PTR es:[edi],dx
  420074:	test   DWORD PTR [eax+0x289d1398],ebp
  42007a:	(bad)  
  42007b:	out    dx,al
  42007c:	loope  0x420039
  42007e:	sbb    ebp,esp
  420080:	fidivr WORD PTR [edi-0x39]
  420083:	(bad)  
  420084:	pop    ecx
  420085:	daa    
  420086:	push   ds
  420087:	aas    
  420088:	add    bl,ch
  42008a:	inc    ebx
  42008b:	dec    ecx
  42008c:	shr    BYTE PTR [ecx],cl
  42008e:	pop    edx
  42008f:	in     al,0x1d
  420091:	jae    0x42001d
  420093:	jnp    0x420052
  420095:	mov    es,WORD PTR [edx]
  420097:	gs jbe 0x420041
  42009a:	dec    edx
  42009b:	push   0xffffffb3
  42009d:	fstp   DWORD PTR [ecx]
  42009f:	int3   
  4200a0:	rol    BYTE PTR [ebx-0x5c],0xd3
  4200a4:	call   DWORD PTR [edi+0x3349ffc]
  4200aa:	iret   
  4200ab:	js     0x42009a
  4200ad:	push   ss
  4200ae:	pop    edi
  4200af:	pop    ecx
  4200b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b1:	sbb    eax,0x8d40d8df
  4200b6:	or     ebx,DWORD PTR ds:0x99f43a04
  4200bc:	dec    ebp
  4200bd:	out    dx,eax
  4200be:	ret    0xdff4
  4200c1:	fcomi  st,st(2)
  4200c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200c4:	mov    esi,0x7be42c2c
  4200c9:	cmp    DWORD PTR [eax-0x457c5f41],0xd27c55f1
  4200d3:	int    0xd1
  4200d5:	jno    0x420101
  4200d7:	stc    
  4200d8:	not    BYTE PTR [esi+0x6e]
  4200db:	mov    ecx,eax
  4200dd:	lods   eax,DWORD PTR ds:[esi]
  4200de:	popf   
  4200df:	in     eax,0xab
  4200e1:	inc    eax
  4200e2:	cmp    bl,BYTE PTR [ebx-0x49]
  4200e5:	dec    edx
  4200e6:	jns    0x4200eb
  4200e8:	sbb    edx,DWORD PTR [edi+ecx*1-0x7160a1df]
  4200ef:	jle    0x42013a
  4200f1:	sbb    eax,0x7acb9848
  4200f6:	fisub  DWORD PTR [edx-0x49d7d24]
  4200fc:	adc    ah,dl
  4200fe:	sub    al,0xc1
  420100:	sbb    edi,DWORD PTR [ebx]
  420102:	repz cmp ebp,DWORD PTR [edx+0x12]
  420106:	mov    ch,0x6e
  420108:	xlat   BYTE PTR ds:[ebx]
  420109:	imul   esi,DWORD PTR [ecx-0x7b9a8d13],0xffffffcb
  420110:	push   esi
  420111:	repnz push ebx
  420113:	mov    bl,0xe3
  420115:	add    eax,0xa026e4ed
  42011a:	add    dh,dl
  42011c:	inc    esi
  42011d:	fiadd  DWORD PTR [eax-0x17]
  420120:	and    DWORD PTR [ebx],edx
  420122:	mov    DWORD PTR [edi+0x688e1641],esi
  420128:	add    al,0xd4
  42012a:	pop    edi
  42012b:	leave  
  42012c:	jne    0x4200ca
  42012e:	dec    ebx
  42012f:	pop    ss
  420130:	lods   al,BYTE PTR ds:[esi]
  420131:	mov    al,ds:0x941d8137
  420136:	in     al,dx
  420137:	lock daa 
  420139:	add    BYTE PTR [esi],ch
  42013b:	add    BYTE PTR [ebx+0xf],ch
  42013e:	pop    edi
  42013f:	icebp  
  420140:	out    0xa,eax
  420142:	push   0xccf7ad17
  420147:	mov    fs,WORD PTR [edx-0x22]
  42014a:	repnz mov bl,0x8a
  42014d:	gs fs xor al,dl
  420151:	out    dx,al
  420152:	mov    al,0x4c
  420154:	xchg   esp,eax
  420155:	xchg   BYTE PTR [esi],dl
  420157:	adc    DWORD PTR [edi+esi*8+0x3e],ebp
  42015b:	stos   BYTE PTR es:[edi],al
  42015c:	jg     0x42013b
  42015e:	mov    edx,0xa722376e
  420163:	sub    DWORD PTR [ebx+eiz*4+0x10],edi
  420167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420168:	add    DWORD PTR [ebp+0x188cb2f6],0x3e2085c8
  420172:	lods   al,BYTE PTR ds:[esi]
  420173:	mov    WORD PTR [esi],fs
  420175:	mov    ebp,0x22a29cdf
  42017a:	cmp    eax,0x5dca6a66
  42017f:	xchg   ebp,eax
  420180:	add    eax,0xb92c5236
  420185:	xchg   edx,eax
  420186:	fsub   DWORD PTR [edi-0x2792454c]
  42018c:	xor    esp,DWORD PTR [edi+0x2c]
  42018f:	jnp    0x4201bf
  420191:	shl    BYTE PTR [edi],cl
  420193:	shr    BYTE PTR [esi-0x11b0986f],1
  420199:	les    eax,FWORD PTR [eax+0x67]
  42019c:	ret    
  42019d:	cwde   
  42019e:	leave  
  42019f:	lahf   
  4201a0:	popa   
  4201a1:	das    
  4201a2:	sub    eax,0x4fc214b8
  4201a7:	aaa    
  4201a8:	pop    eax
  4201a9:	out    dx,al
  4201aa:	aas    
  4201ab:	fwait
  4201ac:	out    0xe0,eax
  4201ae:	mov    ds:0xb1641029,al
  4201b3:	dec    ebp
  4201b4:	sub    eax,DWORD PTR [esi-0x6f]
  4201b7:	xchg   DWORD PTR [eax-0x1e],edx
  4201ba:	es ins DWORD PTR es:[edi],dx
  4201bc:	push   edx
  4201bd:	pop    es
  4201be:	push   ds
  4201bf:	mov    bh,0xa
  4201c1:	or     BYTE PTR [ebx],al
  4201c3:	push   ecx
  4201c4:	in     al,dx
  4201c5:	jmp    FWORD PTR [ecx+ebx*1-0x5c]
  4201c9:	mov    ds:0xa2ef7d2b,al
  4201ce:	cs es repz mov eax,es
  4201d3:	(bad)  
  4201d4:	out    0x4e,eax
  4201d6:	ret    0xb337
  4201d9:	mov    cl,0x8a
  4201db:	sti    
  4201dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201dd:	push   esi
  4201de:	pop    edx
  4201df:	mov    edi,0x5e69b472
  4201e4:	add    eax,edi
  4201e6:	push   ebx
  4201e7:	dec    ebx
  4201e8:	xchg   esi,eax
  4201e9:	test   DWORD PTR [eax-0x41],ecx
  4201ec:	push   ecx
  4201ed:	jbe    0x4201ab
  4201ef:	jae    0x42017c
  4201f1:	cmp    DWORD PTR fs:[bp+si],0x23272514
  4201f9:	call   0xf087492b
  4201fe:	and    eax,0x1df21a40
  420203:	rol    DWORD PTR [edi+eax*2],0x3
  420207:	fmul   DWORD PTR [edi+0x0]
  42020a:	push   edx
  42020b:	push   ecx
  42020c:	jae    0x4201f4
  42020e:	or     BYTE PTR [eax+0x7a],ch
  420211:	push   ebp
  420212:	or     al,0xf7
  420214:	cmp    eax,DWORD PTR [ecx+0x424a509e]
  42021a:	pushf  
  42021b:	mov    dh,0x46
  42021d:	mov    ebp,0x412ad782
  420222:	sbb    eax,0x71326ba2
  420227:	fst    DWORD PTR [ecx-0xaba5c07]
  42022d:	and    DWORD PTR [esi],esp
  42022f:	imul   esp,DWORD PTR [edx],0xffffffe5
  420232:	sub    DWORD PTR [ebp+0x21b42134],ebp
  420238:	(bad)  
  420239:	mov    bl,0x9c
  42023b:	pusha  
  42023c:	fdivr  DWORD PTR [edx+0x70]
  42023f:	push   esp
  420240:	or     esp,ebp
  420242:	inc    edx
  420243:	das    
  420244:	adc    al,0x9
  420246:	outs   dx,DWORD PTR ds:[esi]
  420247:	fwait
  420248:	push   ds
  420249:	iret   
  42024a:	gs repz pop esi
  42024d:	inc    ebp
  42024e:	adc    DWORD PTR [edx+edx*2+0x7e],ebp
  420252:	jmp    0xa1ef:0x1f0ca6f9
  420259:	inc    edi
  42025a:	mov    edx,0x493d5bf8
  42025f:	mov    dl,0xda
  420261:	out    0x87,al
  420263:	mov    ds:0x190e376e,al
  420268:	fild   DWORD PTR [esi-0x6a]
  42026b:	fadd   st,st(1)
  42026d:	jp     0x42026b
  42026f:	sbb    ah,cl
  420271:	mov    edx,0x8e8fecc2
  420276:	shl    ecx,1
  420278:	adc    eax,0xc55507c6
  42027d:	pushf  
  42027e:	adc    edi,DWORD PTR [ebx]
  420280:	(bad)  
  420281:	mov    al,ds:0x4cdc8cd8
  420286:	rcr    BYTE PTR [ecx],cl
  420288:	mov    gs,WORD PTR [edi+0x76]
  42028b:	scas   eax,DWORD PTR es:[edi]
  42028c:	add    eax,0x3f971f52
  420291:	ret    0x42e2
  420294:	and    al,BYTE PTR [ecx]
  420296:	test   DWORD PTR [ebp+0x1816edbe],esi
  42029c:	pop    eax
  42029d:	inc    ebx
  42029e:	loop   0x4202e8
  4202a0:	push   es
  4202a1:	push   eax
  4202a2:	jp     0x4202a9
  4202a4:	add    eax,0x2e95e7c8
  4202a9:	pop    ecx
  4202aa:	inc    ebp
  4202ab:	popf   
  4202ac:	mov    dl,BYTE PTR [ebp+0x62]
  4202af:	fwait
  4202b0:	pop    ecx
  4202b1:	mov    DWORD PTR [edi-0x6d],ebp
  4202b4:	push   ecx
  4202b5:	mov    WORD PTR [edi],cs
  4202b7:	sbb    ecx,ebp
  4202b9:	stos   DWORD PTR es:[edi],eax
  4202ba:	inc    ebx
  4202bb:	loop   0x4202f6
  4202bd:	and    esp,DWORD PTR [edx-0x69f726dc]
  4202c3:	int    0xc8
  4202c5:	popa   
  4202c6:	hlt    
  4202c7:	retf   0xb7f
  4202ca:	xor    ebx,DWORD PTR [edx+0x39]
  4202cd:	xchg   edi,eax
  4202ce:	gs inc ecx
  4202d0:	shl    ah,0x51
  4202d3:	es pusha 
  4202d5:	add    cl,cl
  4202d7:	imul   eax,DWORD PTR [bp+si+0x2f],0xb583d9e6
  4202df:	push   ds
  4202e0:	xor    al,0xb
  4202e2:	pop    eax
  4202e3:	retf   
  4202e4:	(bad)  
  4202e5:	sti    
  4202e6:	mov    edi,0x316f19ad
  4202eb:	jne    0x4202b5
  4202ed:	xor    BYTE PTR [edi],0x59
  4202f0:	and    BYTE PTR [edx-0x6c],0xa0
  4202f4:	add    DWORD PTR [ecx],eax
  4202f6:	int    0xa
  4202f8:	aaa    
  4202f9:	add    BYTE PTR [eax+0x50],dl
  4202fc:	bnd ret 
  4202fe:	jb     0x42033c
  420300:	sbb    al,0x17
  420302:	(bad)  
  420303:	enter  0xac53,0xa5
  420307:	fld    DWORD PTR [esi]
  420309:	cdq    
  42030a:	idiv   DWORD PTR [ecx]
  42030c:	pop    ds
  42030d:	pop    ecx
  42030e:	pop    edx
  42030f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420310:	ja     0x42031c
  420312:	arpl   WORD PTR [ebx+0x3157f67b],ax
  420318:	pop    ecx
  420319:	stos   DWORD PTR es:[edi],eax
  42031a:	adc    al,0xc6
  42031c:	dec    ebx
  42031d:	cmp    DWORD PTR [edx],0xffffff92
  420320:	iret   
  420321:	push   esi
  420322:	adc    ebx,DWORD PTR [ecx+0x61]
  420325:	inc    esi
  420326:	aas    
  420327:	test   al,0x28
  420329:	mov    DWORD PTR [eax-0x64],edi
  42032c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42032d:	mov    al,ds:0xf8d9b327
  420332:	hlt    
  420333:	stc    
  420334:	popa   
  420335:	fimul  WORD PTR [ebx+eiz*8+0x66]
  420339:	push   cs
  42033a:	(bad)  
  42033c:	loopne 0x42038f
  42033e:	(bad)  
  42033f:	fscale 
  420341:	retf   
  420342:	fild   QWORD PTR [edx-0x41]
  420345:	daa    
  420346:	cs rol ah,1
  420349:	mov    al,ds:0xee41fdca
  42034e:	repnz xor edi,edx
  420351:	scas   al,BYTE PTR es:[edi]
  420352:	clc    
  420353:	jg     0x42035d
  420355:	int3   
  420356:	scas   eax,DWORD PTR es:[edi]
  420357:	ins    BYTE PTR es:[edi],dx
  420358:	push   eax
  420359:	cmc    
  42035a:	retf   0x64f8
  42035d:	add    BYTE PTR [ebx+edx*2-0xde36971],ch
  420364:	test   eax,0x2e276c6d
  420369:	das    
  42036a:	jo     0x4203e1
  42036c:	cmp    DWORD PTR [esi],0xb50b2682
  420372:	and    bh,BYTE PTR [eax]
  420374:	sub    eax,DWORD PTR [esi+0x7e]
  420377:	jno    0x420360
  420379:	sbb    eax,DWORD PTR ds:0x9cd72de8
  42037f:	xchg   esi,eax
  420380:	mov    al,0x31
  420382:	cmp    DWORD PTR ds:0x2eaaad96,ecx
  420388:	jmp    0x7b54218c
  42038d:	mov    ds:0x3d02ff96,eax
  420392:	loopne 0x420384
  420394:	or     al,0xa8
  420396:	mov    bh,0x15
  420398:	pop    es
  420399:	aam    0x4c
  42039b:	jb     0x420370
  42039d:	jmp    0x1f4f8ab3
  4203a2:	jae    0x4203df
  4203a4:	aaa    
  4203a5:	retf   0xe37e
  4203a8:	out    0x77,eax
  4203aa:	sub    BYTE PTR [esi-0x2c],0x25
  4203ae:	mov    BYTE PTR [edi+0x429267e6],ch
  4203b4:	sub    eax,0xcd19795c
  4203b9:	jae    0x4203cb
  4203bb:	mov    edx,0xabb3d433
  4203c0:	sar    bl,cl
  4203c2:	sub    eax,0x30c1317f
  4203c7:	repz ret 0x13d5
  4203cb:	jmp    0x6047:0xcd0e3ea6
  4203d2:	test   eax,0x45322edc
  4203d7:	sub    esp,ecx
  4203d9:	loopne 0x4203d0
  4203db:	pop    eax
  4203dc:	and    al,0xa2
  4203de:	(bad)  [edx+0x1f]
  4203e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e2:	pop    esi
  4203e3:	fisub  DWORD PTR [ebx]
  4203e5:	pop    edx
  4203e6:	jb     0x4203f8
  4203e8:	pop    ecx
  4203e9:	fist   DWORD PTR [eax+ecx*8]
  4203ec:	(bad)  
  4203ed:	imul   esi,DWORD PTR [edx-0x2c],0x25
  4203f1:	or     eax,DWORD PTR [ecx-0xe472181]
  4203f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203f8:	jae    0x42041c
  4203fa:	xchg   ecx,eax
  4203fb:	call   0x9acb:0xddd009c3
  420402:	inc    ebp
  420403:	and    BYTE PTR [ebx+0x21],dl
  420406:	xor    esp,DWORD PTR [edx+0x30]
  420409:	and    eax,ebp
  42040b:	cmp    edi,DWORD PTR [eax]
  42040d:	add    eax,0xe7bccc28
  420412:	sar    cl,0x59
  420415:	cdq    
  420416:	and    bl,BYTE PTR [edi-0x5b]
  420419:	push   0xffffffaa
  42041b:	cmp    ah,cl
  42041d:	shl    BYTE PTR [ecx+ebx*4+0x38a51df3],0x9
  420425:	dec    ecx
  420426:	outs   dx,BYTE PTR ds:[esi]
  420427:	dec    ebx
  420428:	js     0x420406
  42042a:	stos   BYTE PTR es:[edi],al
  42042b:	dec    edx
  42042c:	cmp    al,0xff
  42042e:	xchg   ecx,eax
  42042f:	jmp    0x420421
  420431:	pop    edx
  420432:	add    DWORD PTR [ebp-0x6b],0xa8ba6911
  420439:	and    dh,BYTE PTR [ebx+0x17]
  42043c:	add    dl,bl
  42043e:	fwait
  42043f:	sbb    al,BYTE PTR [edi-0x17]
  420442:	pop    esp
  420443:	jo     0x42043f
  420445:	or     eax,0x61f00f61
  42044a:	sbb    edi,ecx
  42044c:	xor    DWORD PTR [ecx-0x38e64bdc],edi
  420452:	xchg   DWORD PTR [edi+0x5cea8e2d],ecx
  420458:	add    al,BYTE PTR [edx+0x2f5e7abd]
  42045e:	inc    edx
  42045f:	pop    edx
  420460:	xlat   BYTE PTR ds:[ebx]
  420461:	jge    0x4204a7
  420463:	pop    es
  420464:	aaa    
  420465:	push   edx
  420466:	mov    dl,0x48
  420468:	(bad)  
  420469:	repz sbb BYTE PTR [esi+0x290e41ff],dh
  420470:	fidivr DWORD PTR [bp+si+0x77b]
  420475:	stos   BYTE PTR es:[edi],al
  420476:	ret    0xaa85
  420479:	inc    ecx
  42047a:	(bad)  
  42047b:	dec    esi
  42047c:	mov    esp,0xb4358bdb
  420481:	push   es
  420482:	das    
  420483:	fdiv   QWORD PTR [ecx-0x28040198]
  420489:	jle    0x4204ca
  42048b:	bound  edx,QWORD PTR [ebx]
  42048d:	jle    0x42044b
  42048f:	jle    0x420454
  420491:	jp     0x42043a
  420493:	jl     0x4204ed
  420495:	or     al,0xe6
  420497:	sbb    BYTE PTR [esi],dl
  420499:	jno    0x42043e
  42049b:	xor    DWORD PTR [ecx-0x1b],0x4244f9cf
  4204a2:	fwait
  4204a3:	lea    edx,[edx-0x4122a58c]
  4204a9:	mov    esi,0x18555c96
  4204ae:	mov    ebx,DWORD PTR [ebx]
  4204b0:	cmp    al,ch
  4204b2:	mov    ah,0x32
  4204b4:	push   edi
  4204b5:	(bad)  
  4204b6:	lock mov cl,bl
  4204b9:	sahf   
  4204ba:	jmp    0xa82bd596
  4204bf:	sub    al,0x59
  4204c1:	dec    esp
  4204c3:	int    0x23
  4204c5:	loope  0x420455
  4204c7:	or     BYTE PTR [eax+0x10],ah
  4204ca:	imul   edi,DWORD PTR [esi-0x2c],0x3d2551e4
  4204d1:	add    ah,al
  4204d3:	pop    eax
  4204d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204d5:	inc    edi
  4204d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204d7:	lss    edi,FWORD PTR [ecx]
  4204da:	ret    0x9a51
  4204dd:	daa    
  4204de:	push   cs
  4204df:	push   ds
  4204e0:	xor    DWORD PTR [ecx+ebp*2-0x17],0xffffffb9
  4204e5:	push   cs
  4204e6:	(bad)  
  4204e7:	out    0x18,eax
  4204e9:	lods   al,BYTE PTR ds:[esi]
  4204ea:	stos   BYTE PTR es:[edi],al
  4204eb:	call   0x5a4ead0a
  4204f0:	arpl   si,di
  4204f2:	cmp    al,0x44
  4204f4:	or     al,0xce
  4204f6:	lahf   
  4204f7:	inc    ebp
  4204f8:	sub    DWORD PTR [edi],ebp
  4204fa:	wrmsr  
  4204fc:	add    ch,BYTE PTR [ebx]
  4204fe:	cdq    
  4204ff:	mov    ds:0xdf71ea6,al
  420504:	push   cs
  420505:	jo     0x420539
  420507:	jp     0x4204d0
  420509:	sub    DWORD PTR [esi+0x7f],ecx
  42050c:	dec    ecx
  42050d:	pop    esi
  42050e:	cmp    ah,bh
  420510:	add    al,0x5
  420512:	repnz jecxz 0x4204a2
  420515:	fsubr  DWORD PTR [edi+ecx*8+0x7df5b280]
  42051c:	cwde   
  42051d:	adc    bl,ah
  42051f:	test   DWORD PTR [esi],ebx
  420521:	leave  
  420522:	out    dx,al
  420523:	jle    0x4204af
  420525:	ins    BYTE PTR es:[edi],dx
  420526:	sti    
  420527:	add    BYTE PTR [edx-0x4b923304],dl
  42052d:	mov    bl,0x2c
  42052f:	test   al,0xa0
  420531:	cwde   
  420532:	pop    esi
  420533:	push   cs
  420534:	mov    edx,0xf7514229
  420539:	punpcklwd mm3,DWORD PTR [eax+eax*4]
  42053d:	mov    ch,0x33
  42053f:	add    eax,0x8797a1d0
  420544:	je     0x4204e5
  420546:	ins    BYTE PTR es:[edi],dx
  420547:	xor    BYTE PTR [edi-0x17],ch
  42054a:	pop    esp
  42054b:	cdq    
  42054c:	in     eax,0xf9
  42054e:	pop    edi
  42054f:	es mov ch,0xc0
  420552:	sbb    eax,0xc4e91676
  420557:	cdq    
  420558:	ins    DWORD PTR es:[edi],dx
  420559:	sti    
  42055a:	pop    ds
  42055b:	adc    eax,0x6597b639
  420560:	stos   DWORD PTR es:[edi],eax
  420561:	scas   al,BYTE PTR es:[edi]
  420562:	mov    ds:0x4c93c1c7,al
  420567:	xchg   BYTE PTR [edx-0x4d6cd4b5],bl
  42056d:	lea    ebx,[edi+0x6ad2a584]
  420573:	adc    cl,ah
  420575:	add    ah,BYTE PTR [edi]
  420577:	ficomp WORD PTR [ebx-0x5cbcccc0]
  42057d:	adc    eax,0x155eaa5e
  420582:	push   cs
  420583:	and    eax,0x95482b83
  420588:	ret    0x3027
  42058b:	in     al,dx
  42058c:	das    
  42058d:	in     eax,0xc7
  42058f:	retf   0x8b92
  420592:	nop
  420593:	xchg   ebp,eax
  420594:	leave  
  420595:	xor    DWORD PTR [edi-0x6a313d98],0x6
  42059c:	mov    eax,ds:0xe3808fb9
  4205a1:	pop    edi
  4205a2:	in     eax,0x56
  4205a4:	mov    dl,0xf9
  4205a6:	loopne 0x4205e8
  4205a8:	inc    edx
  4205a9:	jl     0x4205f7
  4205ab:	mov    edi,0xf3da234f
  4205b0:	outs   dx,DWORD PTR ds:[esi]
  4205b1:	and    BYTE PTR [esi+0xe],ah
  4205b4:	xchg   ebp,eax
  4205b5:	nop
  4205b6:	jle    0x4205ce
  4205b8:	lods   al,BYTE PTR ds:[esi]
  4205b9:	daa    
  4205ba:	mov    bh,0xf3
  4205bc:	inc    esp
  4205bd:	push   ss
  4205be:	pop    eax
  4205bf:	push   esp
  4205c0:	fsubr  DWORD PTR [edx+0x42]
  4205c3:	jbe    0x42055d
  4205c5:	push   0x63f0d246
  4205ca:	retf   0x177a
  4205cd:	mov    edi,0x55fceb2a
  4205d2:	cs xchg ebx,eax
  4205d4:	sbb    DWORD PTR [ebx-0x73],0x55c3f0fd
  4205db:	imul   eax,eax,0xf1d60c7e
  4205e1:	in     eax,dx
  4205e2:	mov    WORD PTR [edx-0x57],gs
  4205e5:	or     al,0xd5
  4205e7:	mov    ah,BYTE PTR [ebx+0x41eb781c]
  4205ed:	cdq    
  4205ee:	stos   DWORD PTR es:[edi],eax
  4205ef:	mov    WORD PTR [edx+esi*2+0x365cc7a2],es
  4205f6:	lea    edi,[ebx*2+0x2221a601]
  4205fd:	jne    0x420652
  4205ff:	fdivp  st(4),st
  420601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420602:	in     eax,0x6d
  420604:	sub    al,0xae
  420606:	stos   BYTE PTR es:[edi],al
  420607:	cmp    DWORD PTR [esi+edi*2],eax
  42060a:	or     eax,0xc2a07cc6
  42060f:	int    0xa
  420611:	cwde   
  420612:	into   
  420613:	fs jecxz 0x420661
  420616:	test   eax,0xb7cdcaab
  42061b:	arpl   di,bp
  42061d:	sub    eax,DWORD PTR [ecx-0x6a]
  420620:	retf   0xc28d
  420623:	ret    0xb2e5
  420626:	jp     0x4205b7
  420628:	mov    edi,0xf5d467b
  42062d:	push   cs
  42062e:	xchg   edx,eax
  42062f:	(bad)  
  420630:	ror    DWORD PTR ds:0x6f111db0,1
  420636:	cmp    ebp,ecx
  420638:	(bad)  
  420639:	xor    esp,DWORD PTR [eax+0x4c861c85]
  42063f:	dec    ebx
  420640:	adc    al,0x2c
  420642:	mov    cl,0x4d
  420644:	pop    ss
  420645:	add    edx,0xffffffe9
  420648:	dec    ebx
  420649:	xor    DWORD PTR [ebx+eiz*4-0x21],edi
  42064d:	jecxz  0x42064d
  42064f:	lods   eax,DWORD PTR ds:[esi]
  420650:	arpl   WORD PTR [edx+0x0],cx
  420653:	sub    eax,0x754c6bd3
  420658:	xchg   ecx,eax
  420659:	cmp    al,0x59
  42065b:	ret    
  42065c:	or     dh,BYTE PTR [esi]
  42065e:	sahf   
  42065f:	cld    
  420660:	xchg   bl,bl
  420662:	sti    
  420663:	fidivr DWORD PTR fs:[edx+edx*4+0x69]
  420668:	in     eax,dx
  420669:	cli    
  42066a:	xchg   edi,eax
  42066b:	adc    ah,BYTE PTR [edi-0x2a]
  42066e:	out    0x3a,eax
  420670:	xor    ch,bh
  420672:	aas    
  420673:	sub    ah,BYTE PTR [esi]
  420675:	and    al,0x1a
  420677:	loopne 0x420630
  420679:	hlt    
  42067a:	inc    eax
  42067b:	cmp    eax,DWORD PTR ds:[edi+0x7756e5bb]
  420682:	je     0x420606
  420684:	gs mov ebp,0xdfc0ce71
  42068a:	add    ecx,esi
  42068c:	ss ins BYTE PTR es:[edi],dx
  42068e:	and    BYTE PTR [edi+0x5c64f9fc],dl
  420694:	inc    edi
  420695:	mov    ds:0x256353c7,al
  42069a:	stc    
  42069b:	dec    ebx
  42069c:	jmp    0x420674
  42069e:	jmp    0xc91a:0x768092db
  4206a5:	add    esp,edx
  4206a7:	adc    eax,0xe0039503
  4206ac:	mov    bh,0xf7
  4206ae:	push   edi
  4206af:	xor    BYTE PTR [ecx+0x7dcff66a],ch
  4206b5:	inc    ebp
  4206b6:	and    esi,DWORD PTR [ebx-0x28adabf0]
  4206bc:	adc    DWORD PTR [ebp-0x69],0x74
  4206c0:	push   cs
  4206c1:	push   edx
  4206c2:	ins    BYTE PTR es:[edi],dx
  4206c3:	imul   edx,ebx,0xfffffff3
  4206c6:	lods   eax,DWORD PTR ds:[esi]
  4206c7:	sbb    dl,bh
  4206c9:	test   BYTE PTR [esi-0x6a],0xd1
  4206cd:	xchg   esp,eax
  4206ce:	and    ch,bl
  4206d0:	jo     0x420693
  4206d2:	pushf  
  4206d3:	xor    dh,al
  4206d5:	push   edx
  4206d7:	push   esi
  4206d8:	or     eax,0xc999f3ca
  4206dd:	jne    0x42070b
  4206df:	cmp    edi,DWORD PTR [eax-0x39d1595b]
  4206e5:	fist   DWORD PTR [eax+0x71]
  4206e8:	bound  ebx,QWORD PTR [edx-0x59]
  4206eb:	mov    dl,0xfa
  4206ed:	gs sbb esp,edx
  4206f0:	xor    al,0x8d
  4206f2:	mov    ch,0x56
  4206f4:	mov    BYTE PTR [ebx+0x7c],dl
  4206f7:	pop    edi
  4206f8:	aas    
  4206f9:	mov    ds:0x2fe5041b,eax
  4206fe:	inc    ebx
  4206ff:	jmp    0x596dc45
  420704:	mov    eax,DWORD PTR [edx+0x69ceba1f]
  42070a:	outs   dx,DWORD PTR ds:[esi]
  42070b:	pop    edi
  42070c:	push   cs
  42070d:	jle    0x42078e
  42070f:	pop    ss
  420710:	scas   al,BYTE PTR es:[edi]
  420711:	push   0x6381f1fe
  420716:	ss hlt 
  420718:	sbb    eax,ebp
  42071a:	dec    eax
  42071b:	lahf   
  42071c:	out    0x5b,al
  42071e:	leave  
  42071f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420720:	test   al,0xf8
  420722:	das    
  420723:	ins    BYTE PTR es:[edi],dx
  420724:	ret    0xe394
  420727:	pop    ds
  420728:	cmp    eax,0xcfd9e715
  42072d:	lods   al,BYTE PTR ds:[esi]
  42072e:	mov    ds:0xc0f7bd9a,eax
  420733:	mov    ah,0x93
  420735:	imul   edi,DWORD PTR [edx-0x30],0x2d8b04dc
  42073c:	xchg   ebp,eax
  42073d:	sub    bh,0x48
  420740:	jb     0x420716
  420742:	cld    
  420743:	dec    esi
  420744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420745:	jb     0x420769
  420747:	fucomp st(3)
  420749:	mov    DWORD PTR [edi-0x7b],esi
  42074c:	call   0xe57a:0x25d36c92
  420753:	js     0x4206d7
  420755:	mov    bh,0x9a
  420757:	sbb    ecx,edi
  420759:	inc    ebp
  42075a:	dec    edi
  42075b:	imul   ebx,DWORD PTR [esi+0x20],0x4d2b7e43
  420762:	or     ebx,eax
  420764:	scas   al,BYTE PTR es:[edi]
  420765:	pop    ds
  420766:	or     esp,0x7e75b4bf
  42076c:	mov    eax,ds:0xb72106e1
  420771:	cmp    al,0x74
  420773:	sub    BYTE PTR [ebp-0x182c76b9],al
  420779:	lock jnp 0x4207d4
  42077c:	shl    DWORD PTR [eax],cl
  42077e:	adc    eax,DWORD PTR [ecx]
  420780:	mov    bl,0xda
  420782:	sbb    DWORD PTR [ebx+0x63],ebx
  420785:	sub    BYTE PTR [ebp-0x7],bh
  420788:	push   ss
  420789:	dec    ebp
  42078a:	push   0xfc29792f
  42078f:	outs   dx,BYTE PTR ds:[esi]
  420790:	add    ebp,DWORD PTR [ebp+0x68]
  420793:	lds    edi,FWORD PTR [ecx-0x1cc08cd6]
  420799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42079a:	push   ebx
  42079b:	(bad)  
  42079c:	nop
  42079d:	les    ebx,FWORD PTR [edi-0x67]
  4207a0:	aas    
  4207a1:	dec    ebp
  4207a2:	fcom   QWORD PTR es:[ebp-0x5d]
  4207a6:	sahf   
  4207a7:	adc    al,0x7b
  4207a9:	sar    BYTE PTR ds:[esi-0xc],1
  4207ad:	mov    edx,0xbc4053a5
  4207b2:	sar    al,cl
  4207b4:	(bad)  
  4207b5:	cmp    al,0x50
  4207b7:	jecxz  0x4207f8
  4207b9:	loope  0x42079e
  4207bb:	je     0x420802
  4207bd:	fbstp  TBYTE PTR [ecx-0x5f60cea0]
  4207c3:	fstp   DWORD PTR [ebx+eax*2]
  4207c6:	outs   dx,DWORD PTR ds:[esi]
  4207c7:	sub    BYTE PTR [ebp+0x67],bl
  4207ca:	pop    esi
  4207cb:	dec    eax
  4207cc:	mov    BYTE PTR [esi+0x5ce595e8],al
  4207d2:	push   edx
  4207d3:	pushf  
  4207d4:	push   esp
  4207d5:	inc    edi
  4207d6:	and    eax,0xdf13163a
  4207db:	push   0x1b
  4207dd:	enter  0xc68c,0xb5
  4207e1:	mov    dh,al
  4207e3:	mov    edi,0x3989901c
  4207e8:	dec    edx
  4207e9:	fucomp st(3)
  4207eb:	cmp    DWORD PTR [edi+0x4aa5b0c2],esi
  4207f1:	jp     0x4207af
  4207f3:	(bad)  
  4207f4:	push   ss
  4207f5:	push   es
  4207f6:	sbb    esp,ebx
  4207f8:	aaa    
  4207f9:	mov    edi,0xb84ea343
  4207fe:	xchg   ecx,eax
  4207ff:	jecxz  0x4207e7
  420801:	frstor [edi+0x79b344b9]
  420807:	jno    0x420852
  420809:	scas   eax,DWORD PTR es:[edi]
  42080a:	aad    0x92
  42080c:	mov    ecx,0x9523c5e1
  420811:	mov    dl,0xf3
  420813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420814:	push   0xad418031
  420819:	loopne 0x4207f3
  42081b:	outs   dx,BYTE PTR ds:[esi]
  42081c:	retf   
  42081d:	data16 aaa 
  42081f:	xchg   esp,eax
  420820:	and    ebx,esp
  420822:	dec    ebx
  420823:	shl    DWORD PTR [esi+0x21dab75c],cl
  420829:	cmp    edi,DWORD PTR [edx+ebp*1-0x1801dfe1]
  420830:	xchg   ebx,eax
  420831:	pop    es
  420832:	cwde   
  420833:	xor    edi,DWORD PTR [ecx+ebp*4-0x64]
  420837:	cmp    eax,0xd1841f62
  42083c:	shr    BYTE PTR [edx],cl
  42083e:	mov    ecx,0xe07eaf51
  420843:	mov    cl,0xb0
  420845:	dec    edi
  420846:	pop    ecx
  420847:	sbb    bl,BYTE PTR [ecx+0x47]
  42084a:	jp     0x42087b
  42084c:	ror    BYTE PTR [esp+edi*2+0x63c14b16],1
  420853:	sti    
  420854:	mov    ds:0x2b2f177b,eax
  420859:	sub    DWORD PTR [ebx+0x6c18a22c],edi
  42085f:	mov    WORD PTR [ecx],es
  420861:	fmul   QWORD PTR [ebx]
  420863:	leave  
  420864:	mov    edx,DWORD PTR [ebx-0x59]
  420867:	scas   eax,DWORD PTR es:[edi]
  420868:	call   0x7fc1:0x16d9d616
  42086f:	sbb    cl,BYTE PTR [esi+0x61e32fb9]
  420875:	and    DWORD PTR [ecx+eax*8],0x91029988
  42087c:	mov    ecx,ecx
  42087e:	rol    dl,cl
  420880:	loopne 0x420827
  420882:	pop    ds
  420883:	mov    dh,0xff
  420885:	(bad)  
  420886:	sbb    ah,BYTE PTR [edi]
  420888:	sub    edx,DWORD PTR [edi+0x3d]
  42088b:	data16 and dl,BYTE PTR [edx+0x50fed65d]
  420892:	xchg   esi,eax
  420893:	leave  
  420894:	jge    0x4208dc
  420896:	mov    ds:0x26f30182,eax
  42089b:	and    DWORD PTR [esi+0x2],esi
  42089e:	push   ss
  42089f:	sbb    ebp,esp
  4208a1:	mov    ds:0xbf4a4729,eax
  4208a6:	inc    esp
  4208a7:	mov    dl,0xf1
  4208a9:	sbb    al,0xdb
  4208ab:	mov    cl,0xef
  4208ad:	add    DWORD PTR [ebx-0x248c43e9],ecx
  4208b3:	push   ds
  4208b4:	sbb    eax,0xb5d78146
  4208b9:	mov    eax,0x96e18e76
  4208be:	and    DWORD PTR [ebx+0x7e],edi
  4208c1:	pop    esp
  4208c2:	cmp    DWORD PTR [ecx-0xd23df19],esp
  4208c8:	or     ebx,DWORD PTR [ebx]
  4208ca:	and    dl,BYTE PTR [edx]
  4208cc:	scas   al,BYTE PTR es:[edi]
  4208cd:	mov    ebp,0x319b1d48
  4208d2:	ja     0x4208b7
  4208d4:	mov    al,BYTE PTR [edi+0x5c3bef3d]
  4208da:	or     ebp,DWORD PTR [esi]
  4208dc:	adc    al,0x1b
  4208de:	int    0x9
  4208e0:	pop    ebp
  4208e1:	mov    esp,0x56e0ccf9
  4208e6:	jbe    0x420873
  4208e8:	shl    BYTE PTR [ecx+0x122b651c],cl
  4208ee:	fimul  WORD PTR [edx]
  4208f0:	jecxz  0x4208e0
  4208f2:	test   eax,0x2d08d6d0
  4208f7:	lods   eax,DWORD PTR ds:[esi]
  4208f8:	out    dx,al
  4208f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208fa:	shl    BYTE PTR [eax],1
  4208fc:	pusha  
  4208fd:	or     BYTE PTR [ebx+ebx*2+0x1b19137f],bl
  420904:	xor    dh,BYTE PTR [eax+esi*1+0x7b]
  420908:	aaa    
  420909:	xor    dh,BYTE PTR [ecx-0x71]
  42090c:	mov    bl,0xd9
  42090e:	rcr    BYTE PTR [eax],1
  420910:	push   ebp
  420911:	mov    WORD PTR [ecx-0x6659ab8a],?
  420917:	add    al,0xa3
  420919:	xchg   esp,eax
  42091a:	imul   ebx,DWORD PTR [ecx],0x2fea9ef1
  420920:	mov    ebp,0x8ef4f68
  420925:	mov    esp,0xdac1b7b8
  42092a:	fsub   DWORD PTR [eax-0x23826bf0]
  420930:	mov    bh,0xdd
  420932:	push   edi
  420933:	lods   eax,DWORD PTR ds:[esi]
  420934:	bound  ecx,QWORD PTR [esi+0x53]
  420937:	adc    ch,BYTE PTR [edi]
  420939:	cmc    
  42093a:	lea    ecx,[esi]
  42093c:	xacquire xchg DWORD PTR [esp+eax*4],esi
  420940:	leave  
  420941:	pop    esp
  420942:	pop    ebp
  420943:	inc    eax
  420944:	not    BYTE PTR [eax+0x41]
  420947:	inc    edx
  420948:	jno    0x4208d3
  42094a:	or     cl,BYTE PTR [ebx-0xa]
  42094d:	mov    ebp,0x6667edd8
  420952:	mov    esi,0xf6726fc0
  420957:	nop
  420958:	push   0xffffffd1
  42095a:	int    0xef
  42095c:	push   es
  42095d:	fimul  WORD PTR [ebx]
  42095f:	dec    ecx
  420960:	push   ss
  420961:	dec    edx
  420962:	inc    ebp
  420963:	mov    ch,0xda
  420965:	xchg   edx,eax
  420966:	out    0x1c,al
  420968:	cld    
  420969:	and    ebx,DWORD PTR [edi]
  42096b:	stos   BYTE PTR es:[edi],al
  42096c:	or     eax,0x66a65776
  420971:	push   es
  420972:	sbb    al,0x99
  420974:	add    ch,BYTE PTR [edx-0x5599aeb0]
  42097a:	fwait
  42097b:	mov    esp,0x5ca5d942
  420980:	sbb    cl,BYTE PTR [ebx+eax*8-0x3bfd7a2c]
  420987:	cmp    DWORD PTR [esi+0x11084a86],ecx
  42098d:	sbb    BYTE PTR [esi+esi*8+0x24],cl
  420991:	pop    es
  420992:	pop    ebx
  420993:	push   eax
  420994:	in     eax,dx
  420995:	pop    eax
  420996:	fs inc eax
  420998:	dec    esi
  420999:	ins    DWORD PTR es:[edi],dx
  42099a:	adc    DWORD PTR [edi-0x2f],0x2a
  42099e:	push   eax
  42099f:	ds cld 
  4209a1:	mov    ds:0x867bfe08,al
  4209a6:	nop
  4209a7:	daa    
  4209a8:	pop    edi
  4209a9:	ror    BYTE PTR [ebx],cl
  4209ab:	(bad)  [edx-0x14d9c3ec]
  4209b1:	loope  0x420969
  4209b3:	jp     0x42097a
  4209b5:	xchg   edx,eax
  4209b6:	leave  
  4209b7:	mov    esp,0xf4559f51
  4209bc:	fild   QWORD PTR [edi+0x408a0f40]
  4209c2:	and    BYTE PTR [edx+0x61],ch
  4209c5:	test   eax,0xb6ffc425
  4209ca:	jo     0x4209a4
  4209cc:	jbe    0x4209b0
  4209ce:	call   0x705b:0x47a169a
  4209d5:	mov    WORD PTR [eax-0x313193b8],?
  4209db:	or     ch,0xf2
  4209de:	shl    BYTE PTR [ebx],cl
  4209e0:	pushf  
  4209e1:	lahf   
  4209e2:	sbb    ebp,DWORD PTR [ecx*8+0x665d6f59]
  4209e9:	sbb    bl,BYTE PTR [edx+0x75]
  4209ec:	mov    BYTE PTR [esi-0x1b],ah
  4209ef:	fldenv ss:[eax+0x54]
  4209f3:	adc    ebx,DWORD PTR [eiz*1-0x69e12849]
  4209fa:	or     dl,BYTE PTR [edi+0x10]
  4209fd:	repnz (bad) 
  4209ff:	rcl    BYTE PTR [ecx-0x5f5f7d82],cl
  420a05:	mov    eax,0x29b4d0aa
  420a0a:	lods   eax,DWORD PTR ds:[esi]
  420a0b:	add    al,0xad
  420a0d:	sbb    ax,0xaade
  420a11:	icebp  
  420a12:	and    al,0xf7
  420a14:	rcl    BYTE PTR [edi],0x1c
  420a17:	mov    esp,0x17277445
  420a1c:	jg     0x4209dd
  420a1e:	mov    ecx,0x1ea1b61e
  420a23:	or     eax,0x8c0fbdfc
  420a28:	cmp    al,0x7d
  420a2a:	call   FWORD PTR [edi]
  420a2c:	loopne 0x420a62
  420a2e:	ret    0x57e6
  420a31:	jg     0x420a6f
  420a33:	mov    ah,0xf2
  420a35:	pop    edi
  420a36:	fiadd  DWORD PTR [ecx-0x3f2fb3de]
  420a3c:	sar    BYTE PTR [ebx-0x10],0x6f
  420a40:	sub    BYTE PTR [esi],ch
  420a42:	out    dx,eax
  420a43:	mov    ecx,0x6713d0db
  420a48:	cmp    eax,DWORD PTR [ecx+0x28]
  420a4b:	dec    ecx
  420a4c:	outs   dx,DWORD PTR ds:[esi]
  420a4d:	fnstsw WORD PTR [eax-0x19]
  420a50:	out    dx,eax
  420a51:	(bad)  
  420a52:	(bad)  
  420a53:	sar    DWORD PTR [edi-0x7952d7eb],cl
  420a59:	scas   al,BYTE PTR es:[edi]
  420a5a:	dec    ebx
  420a5b:	jno    0x420a76
  420a5d:	out    dx,al
  420a5e:	lds    eax,FWORD PTR ds:0x208debbc
  420a64:	pop    esi
  420a65:	out    0x85,al
  420a67:	std    
  420a68:	inc    ebp
  420a69:	add    al,0x23
  420a6b:	mov    ebx,0x9cde20c7
  420a70:	jb     0x420a11
  420a72:	jg     0x420a21
  420a74:	pop    ebp
  420a75:	xlat   BYTE PTR ds:[ebx]
  420a76:	int    0x5d
  420a78:	dec    edx
  420a79:	or     DWORD PTR [ecx-0x2428ee79],edx
  420a7f:	retf   
  420a80:	xchg   BYTE PTR [ebx+0x79],ah
  420a83:	inc    edi
  420a84:	and    al,0x8c
  420a86:	loopne 0x420a0e
  420a88:	int    0xfd
  420a8a:	xor    al,0xad
  420a8c:	hlt    
  420a8d:	or     al,0x42
  420a8f:	or     dh,BYTE PTR [eax+0x49c3cc0]
  420a95:	lods   al,BYTE PTR ds:[esi]
  420a96:	jecxz  0x420ad3
  420a98:	or     al,0xf6
  420a9a:	push   ebx
  420a9b:	ins    DWORD PTR es:[edi],dx
  420a9c:	out    dx,eax
  420a9d:	das    
  420a9e:	(bad)  
  420a9f:	arpl   bp,sp
  420aa1:	pop    edi
  420aa2:	cdq    
  420aa3:	and    eax,DWORD PTR [edi-0x5f]
  420aa6:	mov    ah,0x3e
  420aa8:	mov    ebx,0x880cc003
  420aad:	pop    eax
  420aae:	xor    ch,BYTE PTR [edi-0x284c1208]
  420ab4:	jnp    0x420a47
  420ab6:	scas   al,BYTE PTR es:[edi]
  420ab7:	xchg   ebp,eax
  420ab8:	jl     0x420af6
  420aba:	inc    ebp
  420abb:	pop    eax
  420abc:	loop   0x420ae6
  420abe:	daa    
  420abf:	jae    0x420a43
  420ac1:	test   eax,0xf39e654d
  420ac6:	jbe    0x420ae9
  420ac8:	jge    0x420afa
  420aca:	push   ebp
  420acb:	pop    esi
  420acc:	xor    al,0xae
  420ace:	dec    ebx
  420acf:	icebp  
  420ad0:	jmp    0x420b33
  420ad2:	imul   esp,DWORD PTR [ebp+eiz*2+0x31],0x7adccd3a
  420ada:	js     0x420b23
  420adc:	push   esi
  420add:	pushf  
  420ade:	push   ss
  420adf:	fstp   TBYTE PTR [edi-0x34]
  420ae2:	lods   al,BYTE PTR ds:[esi]
  420ae3:	xor    ecx,edx
  420ae5:	jg     0x420b25
  420ae7:	dec    esi
  420ae8:	icebp  
  420ae9:	mov    eax,ds:0x296c1a94
  420aee:	adc    dh,BYTE PTR ds:[eax]
  420af1:	mov    ds:0xf9b72813,al
  420af6:	nop
  420af7:	add    al,0x41
  420af9:	in     eax,0x3c
  420afb:	pushf  
  420afc:	pop    esp
  420afd:	neg    ecx
  420aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b00:	mov    edi,0xc1aa032b
  420b05:	int3   
  420b06:	xlat   BYTE PTR ds:[ebx]
  420b07:	ja     0x420b16
  420b09:	push   esi
  420b0a:	inc    esi
  420b0b:	xor    edi,DWORD PTR [ebp+0x5e531e61]
  420b11:	mov    edx,0xf118285a
  420b16:	push   es
  420b17:	push   es
  420b18:	xchg   DWORD PTR [ecx],ecx
  420b1a:	jmp    0x5e05cc92
  420b1f:	rcr    ch,1
  420b21:	xchg   esp,eax
  420b22:	leave  
  420b23:	pop    ebp
  420b24:	dec    esp
  420b25:	popa   
  420b26:	aaa    
  420b27:	push   ecx
  420b28:	je     0x420af2
  420b2a:	jo     0x420aad
  420b2c:	sub    BYTE PTR [esi],cl
  420b2e:	fstp   DWORD PTR [ecx-0x15]
  420b31:	mov    esi,0x40be223a
  420b36:	jnp    0x420afa
  420b38:	and    eax,0xd3289374
  420b3d:	jbe    0x420b3e
  420b3f:	repz repz fild DWORD PTR [eax]
  420b43:	inc    edi
  420b44:	inc    ebx
  420b45:	or     cl,BYTE PTR [ebx-0x68]
  420b48:	enter  0xcd4c,0xbe
  420b4c:	sbb    DWORD PTR [ebx+0x66],ebp
  420b4f:	xchg   ebx,eax
  420b50:	fdiv   QWORD PTR [eax-0x6e]
  420b53:	jp     0x420ad6
  420b55:	imul   ebx,edi,0xfca15161
  420b5b:	imul   ebx,DWORD PTR [ebp-0xb30ed68],0x62
  420b62:	jns    0x420b82
  420b64:	lahf   
  420b65:	push   ds
  420b66:	mov    cl,0x24
  420b68:	and    ebx,ebp
  420b6a:	es dec esi
  420b6c:	loope  0x420b8c
  420b6e:	or     bl,BYTE PTR [ebp-0xd8385bc]
  420b74:	inc    ebx
  420b75:	aas    
  420b76:	test   eax,0xe51b2884
  420b7b:	(bad)  
  420b7c:	not    edx
  420b7e:	psrad  mm7,QWORD PTR [edx+0x7f]
  420b82:	fild   QWORD PTR [ebp+0x2dd59ec]
  420b88:	inc    ebx
  420b89:	in     al,0xd6
  420b8b:	pop    edx
  420b8c:	ret    
  420b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b8f:	clc    
  420b90:	dec    esp
  420b91:	mov    ebx,0xcf5f9454
  420b96:	mov    esp,ds
  420b98:	iret   
  420b99:	outs   dx,BYTE PTR ds:[esi]
  420b9a:	retf   
  420b9b:	retf   0x6d9c
  420b9e:	mov    edx,0x7393c3c9
  420ba3:	jmp    DWORD PTR [edi-0x7826fb45]
  420ba9:	push   esp
  420baa:	add    DWORD PTR [ebp-0x781ed725],ebx
  420bb0:	clc    
  420bb1:	xor    BYTE PTR [ecx+0x48],0x2e
  420bb5:	mov    bl,0xd7
  420bb7:	imul   edi,DWORD PTR [ebx+0x235cf9e3],0x2d
  420bbe:	retf   0xbe87
  420bc1:	iret   
  420bc2:	pop    ebx
  420bc3:	push   ds
  420bc4:	inc    edx
  420bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bc6:	jmp    0xe376268f
  420bcb:	jmp    0x420bd0
  420bcd:	xchg   DWORD PTR [eax+0x45ba56a4],edi
  420bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd4:	mov    al,BYTE PTR [edx]
  420bd6:	stc    
  420bd7:	cwde   
  420bd8:	(bad)  
  420bd9:	test   al,0xea
  420bdb:	aad    0x98
  420bdd:	cmp    eax,DWORD PTR [ecx]
  420bdf:	retf   0xc982
  420be2:	ror    edi,cl
  420be4:	jb     0x420bcc
  420be6:	and    ebp,DWORD PTR [esi+ebx*8+0x36]
  420bea:	mov    bl,ch
  420bec:	adc    eax,0x607986b5
  420bf1:	jno    0x420bd2
  420bf3:	leave  
  420bf4:	fsubr  DWORD PTR [ebx-0x4345b16d]
  420bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bfb:	shl    BYTE PTR [esi],cl
  420bfd:	pusha  
  420bfe:	xchg   ecx,eax
  420bff:	inc    edi
  420c00:	cwde   
  420c01:	icebp  
  420c02:	adc    ebx,0xde42eb2d
  420c08:	mul    bh
  420c0a:	and    eax,0xd931479a
  420c0f:	or     eax,ebp
  420c11:	push   ecx
  420c12:	inc    edi
  420c13:	xlat   BYTE PTR ds:[ebx]
  420c14:	popf   
  420c15:	inc    ebp
  420c16:	mov    edx,0x5a0042b1
  420c1b:	arpl   WORD PTR [eax],bx
  420c1d:	cmc    
  420c1e:	imul   ebp,DWORD PTR [edx+esi*2],0x60bc9c10
  420c25:	lea    ebx,[eax+0x11]
  420c28:	mov    dl,0x13
  420c2a:	push   ebx
  420c2b:	or     eax,0xcf38f0e9
  420c30:	mov    cl,0x6b
  420c32:	xor    esp,ebx
  420c34:	or     DWORD PTR [ebx+0x127e312d],ebp
  420c3a:	or     eax,0x89fd1642
  420c3f:	add    eax,0x11341630
  420c44:	sbb    DWORD PTR [ebx+0x2f],ebx
  420c47:	jl     0x420beb
  420c49:	and    DWORD PTR [ebp+0x57],ebp
  420c4c:	(bad)  
  420c4d:	mov    ebx,0xf6f2f338
  420c52:	stos   BYTE PTR es:[edi],al
  420c53:	sbb    al,0xab
  420c55:	lods   eax,DWORD PTR ds:[esi]
  420c56:	dec    ebp
  420c57:	cmp    al,0x0
  420c59:	std    
  420c5a:	adc    BYTE PTR [esp+eiz*2+0x5f],0x84
  420c5f:	repz xor BYTE PTR [eax+0x1e],ah
  420c63:	adc    eax,0x6406cce7
  420c68:	(bad)  
  420c69:	loope  0x420ccd
  420c6b:	mov    edx,0x9d6b834e
  420c70:	mov    BYTE PTR [edx-0x39],bl
  420c73:	adc    eax,0x9ab027e0
  420c78:	xlat   BYTE PTR ds:[ebx]
  420c79:	mov    eax,0x33afbd96
  420c7e:	sbb    eax,0xa0c38b9e
  420c83:	jp     0x420c9d
  420c85:	aas    
  420c86:	sahf   
  420c87:	popa   
  420c88:	(bad)  
  420c89:	pop    esi
  420c8a:	mov    ds:0x638f5c0c,al
  420c8f:	inc    edi
  420c90:	inc    ebp
  420c91:	out    0x97,eax
  420c93:	dec    edi
  420c94:	add    al,0xdb
  420c96:	push   cs
  420c97:	cmp    bh,BYTE PTR [ecx-0x65]
  420c9a:	cmc    
  420c9b:	addr16 xchg esp,eax
  420c9d:	imul   edx,DWORD PTR [edi-0x4c978b7d],0x8934a8d7
  420ca7:	push   cs
  420ca8:	cmc    
  420ca9:	shl    edx,1
  420cab:	cmp    DWORD PTR [ebx],edx
  420cad:	pop    ss
  420cae:	or     dh,dh
  420cb0:	sbb    al,0x56
  420cb2:	lea    esp,[ebx-0x61]
  420cb5:	adc    ah,BYTE PTR [edx+0x1ad7cde6]
  420cbb:	stc    
  420cbc:	jo     0x420ca5
  420cbe:	into   
  420cbf:	ror    BYTE PTR [edi-0x3f],0x2a
  420cc3:	shr    eax,0x5c
  420cc6:	lds    esp,FWORD PTR [ebp+0x4bf7b143]
  420ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ccd:	pop    esi
  420cce:	push   ss
  420ccf:	(bad)  
  420cd0:	arpl   si,di
  420cd2:	ds std 
  420cd4:	inc    ebp
  420cd5:	aam    0x64
  420cd7:	xchg   ebx,eax
  420cd8:	jbe    0x420d13
  420cda:	or     al,0x57
  420cdc:	sbb    BYTE PTR [esi],dl
  420cde:	inc    eax
  420cdf:	les    esi,FWORD PTR [edi]
  420ce1:	xor    ebp,DWORD PTR [eax-0x4479967f]
  420ce7:	sbb    al,0xb5
  420ce9:	jmp    0xf657dcda
  420cee:	(bad)  
  420cef:	fisubr WORD PTR [eax-0xf]
  420cf2:	pop    ecx
  420cf3:	inc    ebp
  420cf4:	mov    eax,ds:0xc08b2016
  420cf9:	mov    bh,0x62
  420cfb:	inc    edx
  420cfc:	(bad)  
  420cfd:	dec    eax
  420cfe:	xchg   esp,eax
  420cff:	ds into 
  420d01:	xor    edi,DWORD PTR [eax-0x37]
  420d04:	test   ah,cl
  420d06:	ins    BYTE PTR es:[edi],dx
  420d07:	add    DWORD PTR [edi+0x7dbf4caf],ecx
  420d0d:	or     DWORD PTR [eax],edx
  420d0f:	shl    DWORD PTR ds:0x48655c8a,1
  420d15:	add    eax,0x771f640b
  420d1a:	push   esi
  420d1b:	xor    BYTE PTR ds:0x103d4bc8,al
  420d21:	adc    bh,BYTE PTR [esp+0x7b472952]
  420d28:	shl    BYTE PTR [ebx+0x61],cl
  420d2b:	mov    esp,0x5d4f6faa
  420d30:	dec    ebx
  420d31:	inc    esp
  420d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d33:	jmp    0x6fb199d3
  420d38:	sub    ch,ch
  420d3a:	mov    ds:0xfade525,eax
  420d3f:	xor    al,0x34
  420d41:	les    edi,FWORD PTR [eax]
  420d43:	push   esi
  420d44:	push   0x1b9771da
  420d49:	cli    
  420d4a:	mov    cl,0xcc
  420d4c:	xchg   edi,eax
  420d4d:	imul   ecx,DWORD PTR [edx-0x371d1e67],0x1a345b31
  420d57:	xor    al,0xc
  420d59:	pop    edi
  420d5a:	loope  0x420d7e
  420d5c:	push   0x31
  420d5e:	push   ss
  420d5f:	jmp    0x6053:0xf1d80c4a
  420d66:	jl     0x420d06
  420d68:	ror    bl,cl
  420d6a:	cmp    BYTE PTR [eax],0xa0
  420d6d:	or     BYTE PTR [ecx+ebx*8+0x541a0614],dh
  420d74:	loope  0x420d03
  420d76:	pop    ds
  420d77:	das    
  420d78:	cdq    
  420d79:	outs   dx,DWORD PTR ds:[esi]
  420d7a:	stos   BYTE PTR es:[edi],al
  420d7b:	xchg   BYTE PTR [ecx],al
  420d7d:	mov    bl,0x80
  420d7f:	cmp    eax,0x8041a299
  420d84:	jnp    0x420d59
  420d86:	lods   al,BYTE PTR ds:[esi]
  420d87:	add    bl,BYTE PTR [edx+eiz*2-0x67802df1]
  420d8e:	jp     0x420d8c
  420d90:	pop    es
  420d91:	mov    dh,0x4a
  420d93:	inc    edx
  420d94:	shl    DWORD PTR [edi-0x9],0x1d
  420d98:	add    edi,ebx
  420d9a:	and    eax,0x681d66ac
  420d9f:	pop    ebx
  420da0:	mov    ch,0x3
  420da2:	jmp    0xf824:0xee67691d
  420da9:	aaa    
  420daa:	js     0x420e24
  420dac:	shl    ebp,0x37
  420daf:	fld    QWORD PTR [edx]
  420db1:	std    
  420db2:	jge    0x420e23
  420db4:	rol    BYTE PTR [esi+0x6b],cl
  420db7:	cmp    dh,BYTE PTR [edi+0x4ebfacf1]
  420dbd:	sub    BYTE PTR [eax-0x6a],bh
  420dc0:	int3   
  420dc1:	fisubr WORD PTR [ebp-0x1cca6e30]
  420dc7:	cmp    dl,al
  420dc9:	mov    fs,WORD PTR [ecx]
  420dcb:	ret    
  420dcc:	cdq    
  420dcd:	or     esp,DWORD PTR [esi-0x156bd8a3]
  420dd3:	inc    ecx
  420dd4:	pop    eax
  420dd5:	test   esp,edx
  420dd7:	test   DWORD PTR [eax+0xc],ecx
  420dda:	outs   dx,DWORD PTR ds:[esi]
  420ddb:	xchg   edx,eax
  420ddc:	mov    ebp,0x94687a06
  420de1:	test   esi,ebp
  420de3:	push   ebx
  420de4:	add    cl,BYTE PTR ds:0xa16d889
  420dea:	ror    BYTE PTR [edx-0x355aa455],cl
  420df0:	jo     0x420e3c
  420df2:	clc    
  420df3:	xchg   edi,eax
  420df4:	jmp    0xe4585903
  420df9:	test   DWORD PTR [esi+ebp*8],0xb3c4b252
  420e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e01:	aad    0x3f
  420e03:	shl    BYTE PTR [ecx+0x45786e81],1
  420e09:	sub    eax,esp
  420e0b:	cli    
  420e0c:	bound  ebp,QWORD PTR [eax-0x74649714]
  420e12:	dec    ecx
  420e13:	clc    
  420e14:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  420e16:	aam    0x4f
  420e18:	jb     0x420e6d
  420e1a:	mov    bh,0xd
  420e1c:	les    esp,FWORD PTR [edi]
  420e1e:	push   ebp
  420e1f:	cld    
  420e20:	pop    ecx
  420e21:	shl    BYTE PTR [ebx+0x2bf4df94],0x1e
  420e28:	in     al,dx
  420e29:	inc    ecx
  420e2a:	aad    0x89
  420e2c:	add    dh,cl
  420e2e:	enter  0x792f,0x39
  420e32:	cmovno edx,DWORD PTR [edx+0xd36849f]
  420e39:	rcr    DWORD PTR [esi+0x76],0x25
  420e3d:	sub    al,0xe0
  420e3f:	cmp    ch,bl
  420e41:	pusha  
  420e42:	push   ecx
  420e43:	dec    ecx
  420e44:	data16 arpl WORD PTR [esi+0x4a],dx
  420e48:	jae    0x420dd4
  420e4a:	int3   
  420e4b:	inc    BYTE PTR [edi+edx*2-0xd8a7fac]
  420e52:	jnp    0x420e0f
  420e54:	xchg   DWORD PTR [eax],ecx
  420e56:	sub    eax,0xfe8a55ca
  420e5b:	test   eax,0x67a7891d
  420e60:	in     al,dx
  420e61:	fiadd  DWORD PTR [eax]
  420e63:	push   ebx
  420e64:	imul   eax,DWORD PTR [ebp-0x1f],0xffffff84
  420e68:	xchg   esi,eax
  420e69:	sbb    esp,DWORD PTR [eax-0xdc30563]
  420e6f:	inc    ecx
  420e70:	jb     0x420ede
  420e72:	mov    eax,DWORD PTR [eax+ebp*4]
  420e75:	jl     0x420e10
  420e77:	retf   
  420e78:	jno    0x420ea6
  420e7a:	jae    0x420e64
  420e7c:	lea    ebp,[edi-0x7ef9b6a0]
  420e82:	dec    edi
  420e83:	pop    edx
  420e84:	dec    ebp
  420e86:	dec    eax
  420e87:	push   cs
  420e88:	mov    ds:0xdc41d8a4,al
  420e8d:	xchg   esp,eax
  420e8e:	inc    eax
  420e8f:	clc    
  420e90:	repz mov bh,0x19
  420e93:	out    dx,eax
  420e94:	dec    edi
  420e95:	in     al,dx
  420e96:	push   esp
  420e97:	xlat   BYTE PTR ds:[ebx]
  420e98:	xchg   edi,eax
  420e99:	jb     0x420ea2
  420e9b:	ins    DWORD PTR es:[edi],dx
  420e9c:	mov    edi,0xb4af5d35
  420ea1:	sub    BYTE PTR ds:0xc082de60,al
  420ea7:	enter  0x6074,0xf0
  420eab:	test   DWORD PTR [edx-0x64675342],0xc436df2c
  420eb5:	cmp    al,0x62
  420eb7:	popa   
  420eb8:	out    0x4b,eax
  420eba:	fs sti 
  420ebc:	lea    esp,[ebx-0x44]
  420ebf:	mov    ?,WORD PTR [edi+0xc]
  420ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ec3:	mov    al,ds:0xcdc5ab2e
  420ec8:	test   eax,0x4fb0dc2c
  420ecd:	sti    
  420ece:	add    eax,0xf08f222b
  420ed3:	cmp    esp,DWORD PTR [eax]
  420ed5:	pop    ds
  420ed6:	es mov ah,0x92
  420ed9:	mov    ds:0x24a7176f,eax
  420ede:	add    BYTE PTR [eax],dh
  420ee0:	iret   
  420ee1:	mov    fs,ecx
  420ee3:	ins    BYTE PTR es:[edi],dx
  420ee4:	shr    BYTE PTR [esi+0x6c],cl
  420ee7:	dec    esi
  420ee8:	xor    DWORD PTR [edx+0x3fde87],eax
  420eee:	clc    
  420eef:	rcl    BYTE PTR [ecx+0x6cdc26af],0x5c
  420ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef7:	add    DWORD PTR [ecx-0x7b],esp
  420efa:	adc    DWORD PTR [ecx+0x46bad5e2],eax
  420f00:	cld    
  420f01:	dec    esi
  420f02:	or     DWORD PTR [eax-0x4ff01323],esp
  420f08:	inc    ecx
  420f09:	pop    eax
  420f0a:	fsubrp st(3),st
  420f0c:	push   ecx
  420f0d:	outs   dx,DWORD PTR ds:[esi]
  420f0e:	dec    ebx
  420f0f:	fcomp  DWORD PTR [edi+0x4c]
  420f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f13:	je     0x420eaa
  420f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f16:	mov    WORD PTR [edx],ss
  420f18:	or     ah,BYTE PTR [ecx]
  420f1a:	xchg   ebx,eax
  420f1b:	dec    ax
  420f1d:	push   esi
  420f1e:	shl    BYTE PTR [edi+0x36],0xbd
  420f22:	dec    ebx
  420f23:	add    ah,dl
  420f25:	shr    eax,cl
  420f27:	test   DWORD PTR [edi-0x4f],edx
  420f2a:	push   ss
  420f2b:	lock (bad) 
  420f2d:	and    DWORD PTR [edi+0x985b224],eax
  420f33:	hlt    
  420f34:	sbb    al,0xe0
  420f36:	sbb    DWORD PTR [esp+ebp*2+0x1f],0xe9a2c738
  420f3e:	cmc    
  420f3f:	repnz (bad) 
  420f41:	(bad)  [ebx]
  420f43:	lock xor al,bl
  420f46:	xchg   esi,eax
  420f47:	les    ebp,FWORD PTR [esi+ebp*4]
  420f4a:	pop    edi
  420f4b:	inc    edi
  420f4c:	inc    esi
  420f4d:	adc    al,dh
  420f4f:	(bad)  
  420f50:	xchg   ecx,eax
  420f51:	out    dx,al
  420f52:	sub    al,0x5d
  420f54:	mov    WORD PTR [esi],?
  420f56:	add    al,0x26
  420f58:	mov    ?,WORD PTR ds:0xbb07d451
  420f5e:	test   BYTE PTR [ebx+0x6f8b92ec],al
  420f64:	out    dx,al
  420f65:	mov    al,ds:0xe3a4c4a6
  420f6a:	cmp    BYTE PTR [esp+ebp*8-0x1b208e68],bh
  420f71:	and    BYTE PTR [edi-0x45],dl
  420f74:	(bad)  
  420f75:	test   DWORD PTR [ecx-0x102c90f0],0x91a995ef
  420f7f:	mov    DWORD PTR [eiz*2-0x2373c026],edi
  420f86:	mov    eax,0xa36d6762
  420f8b:	mov    dh,0xd8
  420f8d:	jae    0x420fd1
  420f8f:	push   ss
  420f90:	sbb    eax,0xf96158a
  420f95:	mov    edi,DWORD PTR [ebx-0x13965108]
  420f9b:	out    0xbd,al
  420f9d:	ins    DWORD PTR es:[edi],dx
  420f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f9f:	sbb    ah,BYTE PTR [ecx+0x7b]
  420fa2:	lods   eax,DWORD PTR ds:[esi]
  420fa3:	jp     0x42101c
  420fa5:	mov    ebx,DWORD PTR [ecx-0x5c2737fd]
  420fab:	xchg   edi,eax
  420fac:	out    dx,eax
  420fad:	push   ebx
  420fae:	inc    esp
  420faf:	(bad)  
  420fb0:	in     eax,dx
  420fb1:	sub    eax,0x1f0cb2e5
  420fb6:	add    BYTE PTR [edx+edi*4+0x49],dh
  420fba:	lds    ebx,FWORD PTR [edi]
  420fbc:	nop
  420fbd:	pop    edx
  420fbe:	(bad)  
  420fbf:	outs   dx,DWORD PTR ds:[esi]
  420fc0:	jnp    0x420f9b
  420fc2:	sub    cl,BYTE PTR [edx]
  420fc4:	pop    edi
  420fc5:	or     BYTE PTR [ebp-0x3d],0x46
  420fc9:	dec    edx
  420fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fcb:	mov    ecx,0xb20eb728
  420fd0:	fnstsw WORD PTR [ebx]
  420fd2:	test   DWORD PTR [edi-0x55],0x4794e633
  420fd9:	lahf   
  420fda:	xchg   edi,eax
  420fdb:	lock neg edx
  420fde:	xor    ch,BYTE PTR [ebx-0x6e3a8b82]
  420fe4:	test   BYTE PTR [esi],ch
  420fe6:	push   cs
  420fe7:	sbb    DWORD PTR [ecx+0x6fd3da8b],0x8143813d
  420ff1:	sub    eax,0x830bae3f
  420ff6:	mov    eax,ds:0xfcd4a92
  420ffb:	mov    dl,0xeb
  420ffd:	mov    BYTE PTR fs:[eax-0x67],bl
  421001:	add    esi,0xe55ec4a8
  421007:	xchg   BYTE PTR [esi+0x2c],ah
  42100a:	mov    edi,DWORD PTR [ecx-0x1f]
  42100d:	fdivr  st(5),st
  42100f:	mov    BYTE PTR [ecx-0x27ae9fa2],bh
  421015:	push   0x86421989
  42101a:	jbe    0x421034
  42101c:	mov    esi,0x2b3b98ae
  421021:	lds    ecx,FWORD PTR [edx]
  421023:	sbb    BYTE PTR [eax],bh
  421025:	xor    bl,bh
  421027:	enter  0xcf31,0x4b
  42102b:	ins    BYTE PTR es:[edi],dx
  42102c:	shr    DWORD PTR [ebp-0x19],0xa3
  421030:	sbb    cl,BYTE PTR [edi]
  421032:	sub    esp,DWORD PTR [edi]
  421034:	loopne 0x420fd1
  421036:	mov    esi,0xc800b361
  42103b:	(bad)  
  42103c:	pop    ebx
  42103d:	mov    eax,ds:0x8fc57187
  421042:	jmp    0xd3fd5554
  421047:	adc    edi,DWORD PTR [ecx-0x5e]
  42104a:	dec    eax
  42104b:	mov    dh,0x16
  42104d:	dec    edi
  42104e:	sahf   
  42104f:	rcr    DWORD PTR [ecx+0x13],cl
  421052:	pop    DWORD PTR [ecx+esi*2-0x1b]
  421056:	ss test eax,0x7b36b90c
  42105c:	scas   al,BYTE PTR es:[edi]
  42105d:	int3   
  42105e:	je     0x420ffc
  421060:	push   edx
  421061:	fist   WORD PTR [edx]
  421063:	push   esp
  421064:	add    dl,BYTE PTR [ebx]
  421066:	scas   eax,DWORD PTR es:[edi]
  421067:	into   
  421068:	stos   DWORD PTR es:[edi],eax
  421069:	aaa    
  42106a:	add    edi,DWORD PTR [edx+0x25ae75d6]
  421070:	sbb    DWORD PTR [eax-0xb],ebx
  421073:	sub    DWORD PTR ds:0x97d81768,edi
  421079:	xchg   ecx,eax
  42107a:	inc    ebx
  42107b:	sbb    al,0x66
  42107d:	sub    edi,ebp
  42107f:	adc    al,0x41
  421081:	ror    BYTE PTR [edi+ebp*1+0x63d2bda4],cl
  421088:	add    dh,ah
  42108a:	int3   
  42108b:	xor    ebx,eax
  42108d:	mov    ds,esp
  42108f:	sti    
  421090:	js     0x421031
  421092:	or     edx,ebp
  421094:	mov    esp,DWORD PTR ds:0xf6d3004d
  42109a:	push   ss
  42109b:	cli    
  42109c:	leave  
  42109d:	neg    DWORD PTR [edx+0x460b0262]
  4210a3:	ins    BYTE PTR es:[edi],dx
  4210a4:	sti    
  4210a5:	add    WORD PTR [eax-0x1d33ba11],cx
  4210ac:	fist   WORD PTR [esi]
  4210ae:	xor    BYTE PTR ds:0xf4d8d6ea,ah
  4210b4:	mov    al,0x2d
  4210b6:	push   esi
  4210b7:	loope  0x4210d1
  4210b9:	adc    esp,DWORD PTR [edx-0x779ffa5c]
  4210bf:	and    edi,ecx
  4210c1:	in     eax,0x4f
  4210c3:	and    eax,0xd9b7bfb4
  4210c8:	loopne 0x42113a
  4210ca:	imul   esi,DWORD PTR [ebx-0x10],0x975a5b7f
  4210d1:	outs   dx,DWORD PTR ds:[esi]
  4210d2:	mov    bl,0x4a
  4210d4:	sub    al,0x21
  4210d6:	retf   
  4210d7:	mov    edx,0x1c69e8d9
  4210dc:	stos   BYTE PTR es:[edi],al
  4210dd:	jp     0x421089
  4210df:	push   ss
  4210e0:	test   al,0x1f
  4210e2:	add    eax,DWORD PTR [di+0x10]
  4210e6:	push   ebx
  4210e7:	xchg   edi,eax
  4210e8:	mov    esp,0x7009ec6b
  4210ed:	call   0xee3:0x918269c1
  4210f4:	xor    al,0x26
  4210f6:	addr16 cmp al,dl
  4210f9:	inc    ebp
  4210fa:	adc    BYTE PTR [edi-0x406255c2],0xae
  421101:	out    dx,eax
  421102:	sub    DWORD PTR [eax+0x12],edx
  421105:	or     al,0xc
  421107:	inc    edi
  421108:	stc    
  421109:	push   ecx
  42110a:	je     0x4210a6
  42110c:	retf   0x253
  42110f:	mov    WORD PTR [eax+0xf],cs
  421112:	xchg   ebx,eax
  421113:	lods   eax,DWORD PTR ds:[esi]
  421114:	cmp    DWORD PTR [esi-0x74],edx
  421117:	icebp  
  421118:	xor    ebp,edi
  42111a:	fadd   st(5),st
  42111c:	and    al,0xba
  42111e:	pop    esi
  42111f:	sub    bh,dh
  421121:	sbb    dl,BYTE PTR [ebx-0x6a]
  421124:	fadd   QWORD PTR [edi]
  421126:	xor    BYTE PTR [edi+0x1f8ffc5c],ah
  42112c:	pop    gs
  42112e:	test   edi,0xa5f965ca
  421134:	fsub   DWORD PTR [ecx+eax*4+0xd]
  421138:	int    0x35
  42113a:	mov    ds:0x1ba3f7a3,eax
  42113f:	scas   eax,DWORD PTR es:[edi]
  421140:	lea    esp,[edi+eax*4-0x42]
  421144:	xor    ebx,DWORD PTR [esi+0x54]
  421147:	nop
  421148:	cmp    eax,0x568707c0
  42114d:	mov    esp,0x2c9e6a6a
  421152:	xor    eax,0xb4488cb9
  421157:	xchg   DWORD PTR [esi-0x2],ecx
  42115a:	and    esi,DWORD PTR [edi-0x460c1c22]
  421160:	mov    ds:0x66e5b552,eax
  421165:	test   al,0x32
  421167:	push   ebx
  421168:	push   esi
  421169:	pop    esi
  42116a:	out    0x7a,al
  42116c:	push   cs
  42116d:	or     BYTE PTR [edi-0x4b],al
  421170:	mov    al,ds:0x30be0e3b
  421175:	pop    esp
  421176:	dec    edi
  421177:	out    dx,al
  421178:	cs mov ah,0x81
  42117b:	repnz retf 
  42117d:	stos   DWORD PTR es:[edi],eax
  42117e:	or     DWORD PTR [ebx],0x3cc905da
  421184:	in     eax,0x12
  421186:	jmp    0x4211a0
  421188:	xchg   ebx,eax
  421189:	push   cs
  42118a:	mov    eax,ds:0x252ece3b
  42118f:	inc    edx
  421190:	pmuludq mm4,mm2
  421193:	imul   BYTE PTR [esp+ebx*8-0x3dd5777a]
  42119a:	out    dx,al
  42119b:	mov    esi,0xaf93c1b
  4211a0:	sbb    BYTE PTR [ecx],al
  4211a2:	clc    
  4211a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211a4:	adc    eax,0x56ca63d5
  4211a9:	xor    bh,BYTE PTR [esi+0x71]
  4211ac:	adc    esi,0x1955b80a
  4211b2:	es mov edx,0x7978bf2e
  4211b8:	or     al,cl
  4211ba:	xchg   esi,eax
  4211bb:	ror    DWORD PTR fs:[ebx+0xe],1
  4211bf:	dec    ecx
  4211c0:	xchg   ecx,eax
  4211c1:	jne    0x4211e6
  4211c3:	xchg   esp,eax
  4211c4:	pusha  
  4211c5:	lea    ecx,[ebx+0x4f]
  4211c8:	inc    edi
  4211c9:	js     0x42119c
  4211cb:	sbb    bl,dl
  4211cd:	push   edx
  4211ce:	jp     0x4211b1
  4211d0:	scas   al,BYTE PTR es:[edi]
  4211d1:	test   DWORD PTR [edi-0x3f],edi
  4211d4:	push   esp
  4211d5:	test   DWORD PTR [eax+0x1e],ebx
  4211d8:	cdq    
  4211d9:	int3   
  4211da:	or     al,BYTE PTR [eax+0x2d]
  4211dd:	lahf   
  4211de:	push   0x3b
  4211e0:	les    esp,FWORD PTR [ecx-0x35bb39bd]
  4211e6:	(bad)  
  4211e8:	mov    eax,ds:0x55452886
  4211ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ee:	inc    ebx
  4211ef:	dec    esp
  4211f0:	arpl   WORD PTR [ebp+0x13],bp
  4211f3:	jmp    0x10b3:0xcad5590
  4211fa:	pop    ds
  4211fb:	jno    0x42122f
  4211fd:	mov    esi,0x9d0a5959
  421202:	imul   ebx,DWORD PTR [ecx+0x38],0x46
  421206:	hlt    
  421207:	lods   eax,DWORD PTR ds:[esi]
  421208:	imul   BYTE PTR [esi]
  42120a:	adc    cl,BYTE PTR ds:[edi+ebx*8]
  42120e:	dec    eax
  42120f:	sbb    bh,BYTE PTR [esi+0x57]
  421212:	addr16 xchg esi,eax
  421214:	dec    esi
  421215:	push   ecx
  421216:	mov    dh,BYTE PTR [ebx-0x4e9da2c7]
  42121c:	and    al,0xe6
  42121e:	inc    esi
  42121f:	xor    ch,ch
  421221:	xchg   ebx,eax
  421222:	pop    eax
  421223:	mov    ds:0xb430b0c7,al
  421228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42122a:	leave  
  42122b:	fs pop esi
  42122d:	xchg   edi,eax
  42122e:	dec    edi
  42122f:	hlt    
  421230:	xor    eax,0x215a4884
  421235:	or     eax,DWORD PTR [edi+0x1473f2a]
  42123b:	repnz pop esi
  42123d:	dec    eax
  42123e:	loopne 0x421275
  421240:	or     BYTE PTR [ecx],dh
  421242:	cmc    
  421243:	repz adc eax,0x4e63d97c
  421249:	add    DWORD PTR es:[edi-0x15a385ea],esi
  421250:	mov    esi,0xeb7fe9f7
  421255:	mov    cl,0x19
  421257:	(bad)  
  421258:	loop   0x4212ca
  42125a:	push   0xb4cf67e6
  42125f:	rol    DWORD PTR [eax+0xc52250d],cl
  421265:	mov    eax,0xe64c9f30
  42126a:	ret    0x73e6
  42126d:	ins    DWORD PTR es:[edi],dx
  42126e:	test   BYTE PTR [edx+0x77],dl
  421271:	jne    0x421232
  421273:	push   cs
  421274:	pusha  
  421275:	mov    WORD PTR [ecx-0x5f],gs
  421278:	nop
  421279:	jge    0x421254
  42127b:	add    ch,BYTE PTR [edi]
  42127d:	jae    0x421271
  42127f:	pop    edi
  421280:	xlat   BYTE PTR ds:[ebx]
  421281:	int3   
  421282:	adc    bl,cl
  421284:	gs bound ebp,QWORD PTR cs:[ebp-0x51]
  421289:	loope  0x4212be
  42128b:	mov    WORD PTR [edx],cs
  42128d:	xlat   BYTE PTR ds:[ebx]
  42128e:	jge    0x4212ff
  421290:	enter  0x6022,0x11
  421294:	cmp    eax,0x32ef0990
  421299:	(bad)  
  42129a:	add    DWORD PTR [esi+0x4e58d180],ebp
  4212a0:	and    eax,0x8252f23b
  4212a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212a6:	mov    dl,0xb4
  4212a8:	xchg   edx,eax
  4212a9:	das    
  4212aa:	mov    ebp,0x619d4b25
  4212af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212b0:	inc    ebx
  4212b1:	and    BYTE PTR [esi+0x70c8dc73],cl
  4212b7:	lods   eax,DWORD PTR ds:[esi]
  4212b8:	fiadd  DWORD PTR ds:0xf96e8fc2
  4212be:	inc    edx
  4212bf:	cmp    eax,DWORD PTR [edx+edx*4-0x16]
  4212c3:	and    esp,DWORD PTR [edx+0x1f]
  4212c6:	leave  
  4212c7:	int3   
  4212c8:	popa   
  4212c9:	clc    
  4212ca:	pushf  
  4212cb:	xor    cl,BYTE PTR [eax]
  4212cd:	sar    DWORD PTR [ecx],cl
  4212cf:	in     al,0x66
  4212d1:	jo     0x42132d
  4212d3:	jnp    0x4212e8
  4212d5:	xor    DWORD PTR [eax-0x6c1fd393],esp
  4212db:	fiadd  WORD PTR [edi]
  4212dd:	adc    al,bl
  4212df:	aam    0x79
  4212e1:	adc    al,0xfc
  4212e3:	xchg   DWORD PTR [ecx-0x43],esi
  4212e6:	or     BYTE PTR [esi+0x39],ch
  4212e9:	loope  0x4212fa
  4212eb:	jle    0x4212ff
  4212ed:	pop    esi
  4212ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212ef:	sub    al,0xe1
  4212f1:	test   DWORD PTR [eax+0x6e],edi
  4212f4:	pop    es
  4212f5:	dec    ebx
  4212f6:	(bad)  
  4212f7:	sbb    al,0x70
  4212f9:	dec    edx
  4212fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212fb:	mov    al,0x6a
  4212fd:	add    al,0xf2
  4212ff:	mov    dl,0x42
  421301:	ret    0xdfc3
  421304:	inc    ebp
  421305:	retf   
  421306:	push   esp
  421307:	dec    ecx
  421308:	adc    al,0x41
  42130a:	aam    0x3a
  42130c:	mov    ds:0x5015f590,eax
  421311:	dec    edx
  421312:	push   ds
  421313:	fiadd  WORD PTR [edi+esi*1]
  421316:	adc    esp,DWORD PTR [ebx-0x29de7435]
  42131c:	xor    esp,ecx
  42131e:	pop    es
  42131f:	adc    dh,al
  421321:	cmp    al,0x34
  421323:	jg     0x4212e6
  421325:	icebp  
  421326:	rcl    BYTE PTR [edx-0x3770eb77],1
  42132c:	or     dl,BYTE PTR [edx+0x4e]
  42132f:	out    dx,eax
  421330:	(bad)  
  421331:	jno    0x4213b1
  421333:	push   es
  421334:	cli    
  421335:	cdq    
  421336:	sub    eax,0xbe4dc73b
  42133b:	xchg   edx,eax
  42133c:	push   esi
  42133d:	adc    eax,0xf21cf8e8
  421342:	(bad)  
  421343:	test   eax,0xbf38f160
  421348:	cmp    BYTE PTR [eax-0x129f7f7a],bl
  42134e:	adc    dh,BYTE PTR [ecx+0x1935bde1]
  421354:	leave  
  421355:	adc    cl,bl
  421357:	jecxz  0x4213b6
  421359:	sbb    BYTE PTR cs:[ebx],cl
  42135c:	pop    ebx
  42135d:	mov    edx,0x927b8d18
  421362:	jmp    0xd8bc:0xb7a15632
  421369:	pushf  
  42136a:	jl     0x42139c
  42136c:	jo     0x421346
  42136e:	gs (bad) 
  421370:	push   0x94d3a1b7
  421375:	add    BYTE PTR [edx],dh
  421377:	push   es
  421378:	iret   
  421379:	inc    esi
  42137a:	outs   dx,BYTE PTR ds:[esi]
  42137b:	cld    
  42137c:	mov    ds:0xc40296bd,al
  421381:	dec    esi
  421382:	xor    BYTE PTR [edx-0x62d9f8c9],bl
  421388:	leave  
  421389:	jmp    0x168d:0xc35c0ac7
  421390:	out    dx,al
  421391:	inc    ebp
  421392:	cmc    
  421393:	jnp    0x81f7f24c
  421399:	pop    ds
  42139a:	pop    ecx
  42139b:	popa   
  42139c:	std    
  42139d:	mov    dh,0x16
  42139f:	inc    eax
  4213a0:	xchg   DWORD PTR [eax+0x758e4946],ecx
  4213a6:	mov    edi,0x53f6a0d
  4213ab:	sub    DWORD PTR [esp+esi*8+0x76331237],ebp
  4213b2:	shl    BYTE PTR [ebx+0x3d03ab31],0x36
  4213b9:	mov    ds:0xf74baaec,eax
  4213be:	int3   
  4213bf:	loope  0x42135e
  4213c1:	icebp  
  4213c2:	lds    ecx,FWORD PTR [ecx]
  4213c4:	rcr    BYTE PTR [ebx-0x37],1
  4213c7:	jp     0x42138e
  4213c9:	or     BYTE PTR [esi],al
  4213cb:	mov    esi,0xca35a26b
  4213d0:	repnz hlt 
  4213d2:	sbb    eax,0xfc2fcc58
  4213d7:	(bad)  
  4213d8:	out    0x99,al
  4213da:	mov    dl,0x11
  4213dc:	repnz in al,dx
  4213de:	imul   eax,DWORD PTR [esi-0x49],0xffffffd2
  4213e2:	in     al,0x72
  4213e4:	scas   al,BYTE PTR es:[edi]
  4213e5:	mov    bh,BYTE PTR [ebx]
  4213e7:	dec    ebx
  4213e8:	and    eax,0x14cceb18
  4213ed:	int3   
  4213ee:	nop
  4213ef:	jge    0x42137a
  4213f1:	in     al,0x32
  4213f3:	xor    al,0x67
  4213f5:	mov    al,ds:0xa8e84ead
  4213fa:	jmp    0xa39b0331
  4213ff:	pop    ss
  421400:	sub    al,0x61
  421402:	in     eax,0x25
  421404:	imul   esp,esp,0x13
  421407:	in     eax,dx
  421408:	cmp    cl,BYTE PTR [ebx-0x4]
  42140b:	sub    DWORD PTR [esi],eax
  42140d:	pop    esi
  42140e:	jmp    0x421453
  421410:	js     0x4213a6
  421412:	push   edx
  421413:	ds scas eax,DWORD PTR es:[edi]
  421415:	outs   dx,DWORD PTR ds:[esi]
  421416:	jp     0x42145e
  421418:	les    ebx,FWORD PTR [esi+0x69]
  42141b:	or     BYTE PTR [edi+0x383ddc70],dh
  421421:	cs cs push es
  421424:	mov    eax,0xf1dc8af4
  421429:	fstp   DWORD PTR [ebx+0x7a023416]
  42142f:	mov    dh,0xf8
  421431:	adc    al,BYTE PTR [eax+0x103cfcc6]
  421437:	inc    ebx
  421438:	(bad)  
  421439:	mov    dl,0xd
  42143b:	sti    
  42143c:	imul   edx,ecx,0xd835798a
  421442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421443:	sub    ecx,DWORD PTR [ebp+ebp*1-0x9b6235a]
  42144a:	add    BYTE PTR [eax+0x49a58bab],bh
  421450:	test   al,0xe6
  421452:	inc    bl
  421454:	ffree  st(3)
  421456:	xlat   BYTE PTR ds:[ebx]
  421457:	sbb    DWORD PTR [edi-0x57],edx
  42145a:	mov    ecx,0xf6c9acf
  42145f:	daa    
  421460:	adc    al,0xe4
  421462:	dec    esi
  421463:	ja     0x4214c9
  421465:	retf   0x20db
  421468:	aam    0x82
  42146a:	cs xor eax,0x26da251a
  421470:	xchg   esp,eax
  421471:	sti    
  421472:	pop    ds
  421473:	in     al,dx
  421474:	test   al,0xb8
  421476:	popa   
  421477:	outs   dx,DWORD PTR ds:[esi]
  421478:	add    BYTE PTR [edi+0x10],0xf6
  42147c:	daa    
  42147d:	cmp    eax,DWORD PTR [ebp-0x58a4c1b8]
  421483:	fucompp 
  421485:	jecxz  0x421431
  421487:	push   ebp
  421488:	push   ecx
  421489:	jne    0x4214df
  42148b:	sub    al,0x3a
  42148d:	add    cl,BYTE PTR [eax+0x4cacd0c2]
  421493:	(bad)  
  421494:	scas   al,BYTE PTR es:[edi]
  421495:	scas   al,BYTE PTR es:[edi]
  421496:	dec    edx
  421497:	imul   esi,DWORD PTR [ebx],0xfff6ab31
  42149d:	push   edi
  42149e:	jle    0x42148c
  4214a0:	jns    0x421489
  4214a2:	arpl   dx,dx
  4214a4:	div    DWORD PTR [eax]
  4214a6:	or     eax,0x9a313435
  4214ab:	and    al,0xb0
  4214ad:	sub    al,0x83
  4214af:	nop
  4214b0:	mov    bh,0x39
  4214b2:	(bad)  
  4214b3:	pusha  
  4214b4:	dec    esi
  4214b5:	je     0x42146d
  4214b7:	call   0x2581e429
  4214bc:	les    ecx,FWORD PTR [edi]
  4214be:	lock out 0xdf,al
  4214c1:	adc    DWORD PTR [eax-0x45],esp
  4214c4:	bound  ebx,QWORD PTR [esi]
  4214c6:	(bad)  
  4214c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x85d73392
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xe340eca0
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	push   DWORD PTR [eax+0x74]
  4217eb:	mov    bh,BYTE PTR [esi]
  4217ed:	push   eax
  4217ee:	mov    ebp,0x5904232e
  4217f3:	inc    ebp
  4217f4:	in     eax,0x83
  4217f6:	ret    0x1a2e
  4217f9:	xchg   BYTE PTR [ebx-0x43],dl
  4217fc:	and    eax,DWORD PTR cs:[eax]
  4217ff:	pop    ecx
  421800:	inc    ebp
  421801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421802:	jl     0x421841
  421804:	sbb    bh,BYTE PTR cs:[esi]
  421807:	push   ebx
  421808:	mov    ebp,0x5900232e
  42180d:	inc    ebp
  42180e:	in     eax,0x7c
  421810:	cmp    eax,0x533e1a2e
  421815:	mov    ebp,0x5900232e
  42181a:	inc    ebp
  42181b:	in     eax,0x7c
  42181d:	cmp    eax,0x533e1a2e
  421822:	mov    ebp,0x59f8232e
  421827:	inc    ebp
  421828:	in     eax,0x72
  42182a:	and    dl,BYTE PTR [esp+edx*1-0x1c4b18c2]
  421831:	add    bh,BYTE PTR [eax+0x5d280958]
  421837:	imul   eax,DWORD PTR [esi+0x73],0x5ccd734d
  42183e:	dec    esp
  42183f:	sub    esp,DWORD PTR [si]
  421842:	mov    BYTE PTR [esi+ebx*2+0x4f],bl
  421846:	je     0x421898
  421848:	cmp    al,0xc9
  42184a:	push   cs
  42184b:	inc    ecx
  42184c:	gs jns 0x421886
  42184f:	nop
  421850:	adc    bl,BYTE PTR ds:0x171e7447
  421856:	bnd jge 0x42185c
  421859:	ins    DWORD PTR es:[edi],dx
  42185a:	and    DWORD PTR ss:[eax+0x10233052],eax
  421861:	sbb    dl,BYTE PTR [ebx-0x43]
  421864:	and    eax,DWORD PTR cs:[eax]
  421867:	pop    ecx
  421868:	inc    ebp
  421869:	loop   0x421850
  42186b:	shl    DWORD PTR [edi+0x59],0xc6
  42186f:	shl    DWORD PTR [edi+0x5392db6d],0x6
  421876:	sbb    eax,0x7f7637ee
  42187b:	xor    bl,BYTE PTR [ecx-0x1e]
  42187e:	(bad)  
  42187f:	mov    cl,0xa
  421881:	add    DWORD PTR [eax],esp
  421883:	fnsave [esi-0x1]
  421886:	(bad)  
  421887:	mov    BYTE PTR [ebx+ecx*1],dh
  42188a:	fcom   DWORD PTR [edi]
  42188c:	sub    DWORD PTR [eax-0x5f],ebp
  42188f:	xlat   BYTE PTR ds:[ebx]
  421890:	out    dx,eax
  421891:	push   eax
  421892:	mov    bl,0x17
  421894:	adc    BYTE PTR [eax-0x55],bh
  421897:	das    
  421898:	and    al,0x69
  42189a:	or     BYTE PTR [eax+0x4f],0xaf
  42189e:	test   BYTE PTR [edi+0x52be5024],ch
  4218a4:	mov    bh,0x76
  4218a6:	fist   DWORD PTR [edx-0x10e2f9ad]
  4218ac:	aaa    
  4218ad:	push   es
  4218ae:	jecxz  0x42185c
  4218b0:	pop    ecx
  4218b1:	add    dh,dh
  4218b3:	mov    ds:0x77bd140a,eax
  4218b8:	jbe    0x42191f
  4218ba:	dec    ebx
  4218bb:	daa    
  4218bc:	xor    al,0x5b
  4218be:	inc    ebp
  4218bf:	mov    esp,0x4d3c5829
  4218c4:	out    dx,eax
  4218c5:	lds    edi,FWORD PTR ds:[eax+edx*1+0x24b23666]
  4218cd:	popa   
  4218ce:	clc    
  4218cf:	retf   
  4218d0:	dec    edi
  4218d1:	mov    bh,0x15
  4218d3:	pop    esi
  4218d4:	inc    esi
  4218d5:	pop    ecx
  4218d6:	mov    cl,0xb7
  4218d9:	and    eax,DWORD PTR cs:[eax]
  4218dc:	pop    ecx
  4218dd:	inc    ebp
  4218de:	in     eax,0x7c
  4218e0:	cmp    eax,0x533e5f7e
  4218e5:	icebp  
  4218e6:	das    
  4218e7:	and    DWORD PTR [eax],eax
  4218e9:	stc    
  4218ea:	xchg   ebp,eax
  4218eb:	mov    ?,WORD PTR [ebx]
  4218ed:	cmp    eax,0x533e1a2e
  4218f2:	mov    ebp,0x59e0232e
  4218f7:	inc    esi
  4218f8:	in     al,0x77
  4218fa:	cmp    al,0x24
  4218fc:	sbb    bh,BYTE PTR [esi]
  4218fe:	mov    ebp,0xbc232eb9
  421903:	pop    edi
  421904:	inc    ebp
  421905:	in     eax,0x7c
  421907:	cmp    eax,0x53830b2e
  42190c:	mov    ebp,0x5900332e
  421911:	inc    ebp
  421912:	in     eax,0x79
  421914:	cmp    eax,0x537f1a2e
  421919:	mov    ebp,0x5900233e
  42191e:	inc    edi
  42191f:	in     eax,0x7c
  421921:	cmp    BYTE PTR [esi],ch
  421923:	sbb    edi,DWORD PTR [esi]
  421925:	push   ebx
  421926:	mov    ebp,0x5905232e
  42192b:	inc    esp
  42192c:	in     eax,0x7c
  42192e:	cmp    eax,0x33e1a2e
  421933:	mov    cl,0x2e
  421935:	and    eax,DWORD PTR [ecx+ebx*2]
  421938:	inc    ebp
  421939:	in     al,0x98
  42193b:	cmp    BYTE PTR [esi],ch
  42193d:	sbb    BYTE PTR [esi],bh
  42193f:	push   ebx
  421940:	cmp    eax,0x5910232e
  421945:	inc    ebp
  421946:	cmc    
  421947:	jl     0x421986
  421949:	sbb    ch,BYTE PTR cs:[esi]
  42194c:	push   ebx
  42194d:	mov    ebp,0x5900233e
  421952:	inc    ebp
  421953:	in     eax,0x7c
  421955:	sub    eax,0x533e1a2e
  42195a:	mov    ebp,0x5900232e
  42195f:	inc    ebp
  421960:	in     eax,0x88
  421962:	add    al,0x22
  421964:	sbb    dl,BYTE PTR [edi+0x50]
  421967:	mov    ebp,0x52f0232e
  42196c:	inc    ebp
  42196d:	stos   BYTE PTR es:[edi],al
  42196e:	xor    eax,0x3e1a2e3d
  421973:	push   ebx
  421974:	mov    ebp,0x5900232e
  421979:	inc    ebp
  42197a:	in     eax,0x7c
  42197c:	cmp    eax,0x533e1a2e
  421981:	mov    ebp,0x5900232e
  421986:	inc    ebp
  421987:	in     eax,0x7c
  421989:	cmp    eax,0x533e1a2e
  42198e:	mov    ebp,0x5900232e
  421993:	inc    ebp
  421994:	in     eax,0x7c
  421996:	cmp    eax,0x533e1a2e
  42199b:	mov    ebp,0x5900232e
  4219a0:	inc    ebp
  4219a1:	in     eax,0x7c
  4219a3:	cmp    eax,0x533e1a2e
  4219a8:	mov    ebp,0x5900232e
  4219ad:	inc    ebp
  4219ae:	in     eax,0x7c
  4219b0:	cmp    eax,0x533e1a2e
  4219b5:	mov    ebp,0x5900232e
  4219ba:	inc    ebp
  4219bb:	in     eax,0x7c
  4219bd:	cmp    eax,0x533e1a2e
  4219c2:	mov    ebp,0x5900232e
  4219c7:	inc    ebp
  4219c8:	in     eax,0x7c
  4219ca:	cmp    eax,0x533e1a2e
  4219cf:	mov    ebp,0x5900232e
  4219d4:	inc    ebp
  4219d5:	in     eax,0x7c
  4219d7:	cmp    eax,0x364a342e
  4219dc:	lds    ebx,FWORD PTR [edx+0x23]
  4219df:	add    BYTE PTR [ecx+0x45],bl
  4219e2:	add    eax,0xa2e3d77
  4219e7:	ds push ebx
  4219e9:	mov    ebp,0x590027fa
  4219ee:	inc    ecx
  4219ef:	in     eax,0x7c
  4219f1:	ins    DWORD PTR es:[edi],dx
  4219f2:	imul   ebx,DWORD PTR [ecx+0xc],0x7
  4219f6:	repnz and eax,DWORD PTR cs:[eax]
  4219fa:	pop    ecx
  4219fb:	inc    ebp
  4219fc:	in     eax,0x5c
  4219fe:	cmp    eax,0x2110fa2e
  421a03:	into   
  421a04:	pop    esp
  421a05:	inc    eax
  421a06:	add    BYTE PTR [ecx+0x45],bl
  421a09:	in     eax,0x1c
  421a0b:	cmp    eax,0x58ce1a2e
  421a10:	mov    ebp,0x5900792e
  421a15:	inc    ebp
  421a16:	cmp    eax,0x1a2e3d78
  421a1b:	ds push ebx
  421a1d:	mov    ebp,0x5900232e
  421a22:	inc    ebp
  421a23:	in     eax,0x7c
  421a25:	sbb    eax,0x53de1a2e
  421a2a:	mov    ebp,0x5900232e
  421a2f:	inc    ebp
  421a30:	in     eax,0x7c
  421a32:	cmp    eax,0x533e1a2e
  421a37:	mov    ebp,0x5900232e
  421a3c:	inc    ebp
  421a3d:	in     eax,0x7c
  421a3f:	cmp    eax,0x533e1a2e
  421a44:	mov    ebp,0x5900232e
  421a49:	inc    ebp
  421a4a:	in     eax,0x7c
  421a4c:	cmp    eax,0x533e1a2e
  421a51:	mov    ebp,0x5900232e
  421a56:	inc    ebp
  421a57:	in     eax,0x7c
  421a59:	cmp    eax,0x533e1a2e
  421a5e:	mov    ebp,0x5900232e
  421a63:	inc    ebp
  421a64:	in     eax,0x7c
  421a66:	cmp    eax,0x533e1a2e
  421a6b:	mov    ebp,0x5900232e
  421a70:	inc    ebp
  421a71:	in     eax,0x7c
  421a73:	cmp    eax,0x533e1a2e
  421a78:	mov    ebp,0x5900232e
  421a7d:	inc    ebp
  421a7e:	in     eax,0x7c
  421a80:	cmp    eax,0x533e1a2e
  421a85:	mov    ebp,0x5900232e
  421a8a:	inc    ebp
  421a8b:	in     eax,0x7c
  421a8d:	cmp    eax,0x533e1a2e
  421a92:	mov    ebp,0x5900232e
  421a97:	inc    ebp
  421a98:	in     eax,0x7c
  421a9a:	cmp    eax,0x533e1a2e
  421a9f:	mov    ebp,0x5900232e
  421aa4:	inc    ebp
  421aa5:	in     eax,0x7c
  421aa7:	cmp    eax,0x533e1a2e
  421aac:	mov    ebp,0x5900232e
  421ab1:	inc    ebp
  421ab2:	in     eax,0x7c
  421ab4:	cmp    eax,0x533e1a2e
  421ab9:	mov    ebp,0x5900232e
  421abe:	inc    ebp
  421abf:	in     eax,0x7c
  421ac1:	cmp    eax,0x533e1a2e
  421ac6:	mov    ebp,0x5900232e
  421acb:	inc    ebp
  421acc:	in     eax,0x7c
  421ace:	cmp    eax,0x533e1a2e
  421ad3:	mov    ebp,0x5900232e
  421ad8:	inc    ebp
  421ad9:	in     eax,0x7c
  421adb:	cmp    eax,0x533e1a2e
  421ae0:	mov    ebp,0x5900232e
  421ae5:	inc    ebp
  421ae6:	in     eax,0x7c
  421ae8:	cmp    eax,0x533e1a2e
  421aed:	mov    ebp,0x5900232e
  421af2:	inc    ebp
  421af3:	in     eax,0x7c
  421af5:	cmp    eax,0x533e1a2e
  421afa:	mov    ebp,0x5900232e
  421aff:	inc    ebp
  421b00:	in     eax,0x7c
  421b02:	cmp    eax,0x533e1a2e
  421b07:	mov    ebp,0x5900232e
  421b0c:	inc    ebp
  421b0d:	in     eax,0x7c
  421b0f:	cmp    eax,0x533e1a2e
  421b14:	mov    ebp,0x5900232e
  421b19:	inc    ebp
  421b1a:	in     eax,0x7c
  421b1c:	cmp    eax,0x533e1a2e
  421b21:	mov    ebp,0x5900232e
  421b26:	inc    ebp
  421b27:	in     eax,0x7c
  421b29:	cmp    eax,0x533e1a2e
  421b2e:	mov    ebp,0x5900232e
  421b33:	inc    ebp
  421b34:	in     eax,0x7c
  421b36:	cmp    eax,0x533e1a2e
  421b3b:	mov    ebp,0x5900232e
  421b40:	inc    ebp
  421b41:	in     eax,0x7c
  421b43:	cmp    eax,0x533e1a2e
  421b48:	mov    ebp,0x5900232e
  421b4d:	inc    ebp
  421b4e:	in     eax,0x7c
  421b50:	cmp    eax,0x533e1a2e
  421b55:	mov    ebp,0x5900232e
  421b5a:	inc    ebp
  421b5b:	in     eax,0x7c
  421b5d:	cmp    eax,0x533e1a2e
  421b62:	mov    ebp,0x5900232e
  421b67:	inc    ebp
  421b68:	in     eax,0x7c
  421b6a:	cmp    eax,0x533e1a2e
  421b6f:	mov    ebp,0x5900232e
  421b74:	inc    ebp
  421b75:	in     eax,0x7c
  421b77:	cmp    eax,0x533e1a2e
  421b7c:	mov    ebp,0x5900232e
  421b81:	inc    ebp
  421b82:	in     eax,0x7c
  421b84:	cmp    eax,0x533e1a2e
  421b89:	mov    ebp,0x5900232e
  421b8e:	inc    ebp
  421b8f:	in     eax,0x7c
  421b91:	cmp    eax,0x533e1a2e
  421b96:	mov    ebp,0x5900232e
  421b9b:	inc    ebp
  421b9c:	in     eax,0x7c
  421b9e:	cmp    eax,0x533e1a2e
  421ba3:	mov    ebp,0x5900232e
  421ba8:	inc    ebp
  421ba9:	in     eax,0x7c
  421bab:	cmp    eax,0x533e1a2e
  421bb0:	mov    ebp,0x5900232e
  421bb5:	inc    ebp
  421bb6:	in     eax,0x7c
  421bb8:	cmp    eax,0x533e1a2e
  421bbd:	mov    ebp,0x5900232e
  421bc2:	inc    ebp
  421bc3:	in     eax,0x7c
  421bc5:	cmp    eax,0x533e1a2e
  421bca:	mov    ebp,0x5900232e
  421bcf:	inc    ebp
  421bd0:	in     eax,0x7c
  421bd2:	cmp    eax,0x533e1a2e
  421bd7:	mov    ebp,0x5900232e
  421bdc:	inc    ebp
  421bdd:	in     eax,0x7c
  421bdf:	cmp    eax,0x533e1a2e
  421be4:	mov    ebp,0x5900232e
  421be9:	sub    cl,BYTE PTR [ebp+0x77]
  421bec:	cmp    eax,0x433e1a01
  421bf1:	mov    ebp,0x83a2092e
  421bf6:	xor    al,0x83
  421bf8:	adc    DWORD PTR [eax],0xffffffb0
  421bfb:	popf   
  421bfc:	outs   dx,BYTE PTR ds:[esi]
  421bfd:	mov    esi,0xb430c68b
  421c02:	int3   
  421c03:	and    edx,DWORD PTR [eax+edi*8-0x7654c299]
  421c0a:	inc    ebp
  421c0b:	ror    dl,1
  421c0d:	test   eax,0x876b9f81
  421c12:	in     al,dx
  421c13:	add    dl,BYTE PTR [edi]
  421c15:	sub    DWORD PTR [ecx-0x1e],esi
  421c18:	stos   BYTE PTR es:[edi],al
  421c19:	or     al,0x23
  421c1b:	daa    
  421c1c:	dec    ch
  421c1e:	mov    al,0x2d
  421c20:	push   eax
  421c21:	xchg   DWORD PTR [eax],ebp
  421c23:	add    ecx,DWORD PTR [esi+0xf439fa9]
  421c29:	xchg   DWORD PTR [ecx+0x5e],esp
  421c2c:	xor    dh,ch
  421c2e:	jmp    0x421c65
  421c30:	(bad)  
  421c31:	int    0xb7
  421c33:	rol    DWORD PTR [edi+0x20],0xfa
  421c37:	dec    edx
  421c38:	adc    al,0xd6
  421c3a:	adc    BYTE PTR [ebx+0x62],ch
  421c3d:	js     0x421c41
  421c3f:	(bad)  
  421c40:	loopne 0x421bd4
  421c42:	inc    esi
  421c43:	jo     0x421c7d
  421c45:	js     0x421c44
  421c47:	addr16 int3 
  421c49:	sbb    eax,0x458ed18a
  421c4e:	(bad)  
  421c4f:	and    DWORD PTR [ecx-0x64e391dc],ebp
  421c55:	cmp    dh,BYTE PTR [esi]
  421c57:	fprem  
  421c59:	xchg   ebp,eax
  421c5a:	les    edi,FWORD PTR gs:[edi]
  421c5d:	stc    
  421c5e:	pop    esi
  421c5f:	mov    edx,0xa66887ce
  421c64:	inc    ebp
  421c65:	jp     0x421c66
  421c67:	add    ah,bl
  421c69:	xor    DWORD PTR [eax-0x77],ebp
  421c6c:	push   edx
  421c6d:	jae    0x421cc2
  421c6f:	mov    WORD PTR [ebx+eax*4+0x7e],es
  421c73:	mov    bh,0x6b
  421c75:	out    0x95,eax
  421c77:	adc    dl,cl
  421c79:	(bad)  
  421c7a:	sbb    BYTE PTR [esi],ch
  421c7c:	pop    edx
  421c7d:	popf   
  421c7e:	push   ss
  421c7f:	adc    ecx,esp
  421c81:	test   al,0x9e
  421c83:	sub    eax,0x2d694fab
  421c88:	and    eax,0x19911c9d
  421c8d:	dec    ebp
  421c8e:	xor    al,0xaa
  421c90:	inc    eax
  421c91:	push   ss
  421c92:	pop    ebp
  421c93:	leave  
  421c94:	retf   0x96d7
  421c97:	pusha  
  421c98:	adc    al,ch
  421c9a:	dec    esp
  421c9b:	mov    eax,ds:0x6f4c3049
  421ca0:	loop   0x421cab
  421ca2:	push   esi
  421ca3:	fsubr  QWORD PTR [edx-0x1a813f00]
  421ca9:	fisttp WORD PTR [ecx]
  421cab:	inc    edi
  421cac:	(bad)  
  421cad:	daa    
  421cae:	mov    eax,ds:0x91f50d89
  421cb3:	mov    WORD PTR [ecx+eiz*4+0xb],gs
  421cb7:	push   esi
  421cb8:	xchg   edi,eax
  421cb9:	cdq    
  421cba:	jno    0x421d27
  421cbc:	inc    edi
  421cbd:	adc    ebp,esp
  421cbf:	xor    BYTE PTR [ecx+ecx*2],dl
  421cc2:	mov    ?,WORD PTR [eax]
  421cc4:	mov    esi,esp
  421cc6:	clc    
  421cc7:	jb     0x421cbd
  421cc9:	ds jae 0x421cbe
  421ccc:	leave  
  421ccd:	sub    ebp,DWORD PTR [edi-0x5819ce9e]
  421cd3:	stos   BYTE PTR es:[edi],al
  421cd4:	mov    ch,0x8c
  421cd6:	mov    ch,0x5f
  421cd8:	icebp  
  421cd9:	das    
  421cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cdb:	popa   
  421cdc:	iret   
  421cdd:	add    esp,DWORD PTR [edx-0x7b]
  421ce0:	pop    esp
  421ce1:	rol    DWORD PTR [ecx],0x77
  421ce4:	(bad)  
  421ce5:	es mov ebp,0x701d868b
  421ceb:	xchg   BYTE PTR ds:0x89d81292,dh
  421cf1:	test   al,0xb0
  421cf3:	and    BYTE PTR [eax],bl
  421cf5:	je     0x421ca7
  421cf7:	(bad)  
  421cf8:	sar    BYTE PTR [edi-0x75],0x42
  421cfc:	int    0x9e
  421cfe:	push   eax
  421cff:	mov    esi,0x2141c364
  421d04:	aas    
  421d05:	mov    bl,0x5a
  421d07:	jns    0x421d85
  421d09:	add    BYTE PTR [eax+0x1b],dh
  421d0c:	cmp    DWORD PTR [esi],0xffffff87
  421d0f:	mov    esp,0xa8d77847
  421d14:	shr    dl,cl
  421d16:	stc    
  421d17:	inc    edi
  421d18:	jmp    0xa6e8:0x37a80fdb
  421d1f:	inc    ecx
  421d20:	sub    BYTE PTR [edx-0x20855935],ah
  421d26:	stos   DWORD PTR es:[edi],eax
  421d27:	(bad)  
  421d28:	repnz lods al,BYTE PTR ds:[esi]
  421d2a:	loopne 0x421d52
  421d2c:	mov    edx,0xb0ab30ad
  421d31:	or     ebx,edi
  421d33:	dec    ebp
  421d34:	out    dx,al
  421d35:	sub    eax,0x31896249
  421d3a:	aad    0x2c
  421d3c:	pop    ss
  421d3d:	inc    esp
  421d3e:	adc    dl,BYTE PTR [ebx-0x43]
  421d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d42:	pop    ebp
  421d43:	xchg   ebx,eax
  421d44:	push   ds
  421d45:	mov    ebp,DWORD PTR [ebx-0x7c]
  421d48:	pop    edx
  421d49:	icebp  
  421d4a:	mov    eax,0xe5ff0a71
  421d4f:	cmp    esi,DWORD PTR [edx+0x4047b171]
  421d55:	mov    ebp,0xedb17ab0
  421d5a:	xor    edi,eax
  421d5c:	ds retf 0x409f
  421d60:	mov    edi,0xb863efc5
  421d65:	jo     0x421dcc
  421d67:	and    al,0x48
  421d69:	bnd jns 0x421dbc
  421d6c:	jbe    0x421d92
  421d6e:	push   cs
  421d6f:	adc    eax,ecx
  421d71:	jb     0x421d27
  421d73:	mov    es,WORD PTR [edi+0x276cf962]
  421d79:	and    eax,0x1bfa2a2e
  421d7e:	or     al,0x75
  421d80:	push   ecx
  421d81:	lods   al,BYTE PTR ds:[esi]
  421d82:	scas   eax,DWORD PTR es:[edi]
  421d83:	sbb    eax,0x702b99e9
  421d88:	sub    eax,DWORD PTR [edx+0x571f78a3]
  421d8e:	mov    cl,0x1c
  421d90:	xor    BYTE PTR [esp+eax*1+0x3bbfef1e],ah
  421d97:	pop    esp
  421d98:	adc    eax,0x585f25bf
  421d9d:	and    bh,BYTE PTR [ebx]
  421d9f:	mov    esp,0x3ff869dc
  421da4:	or     DWORD PTR [edx-0x53989ae1],ebp
  421daa:	xor    ah,BYTE PTR [edx+0x54fc2d6b]
  421db0:	in     eax,dx
  421db1:	jnp    0x421da9
  421db3:	aas    
  421db4:	imul   ecx,DWORD PTR [edx+0x47e85346],0xffffffa4
  421dbb:	les    ecx,FWORD PTR [edi-0x4f58849c]
  421dc1:	sub    DWORD PTR [esp+eiz*8-0x4781541c],ecx
  421dc8:	mov    edi,0x12e1d88f
  421dcd:	push   ebp
  421dce:	xchg   esp,eax
  421dcf:	jo     0x421da7
  421dd1:	or     ecx,eax
  421dd3:	idiv   BYTE PTR [ecx+0x45]
  421dd6:	lods   al,BYTE PTR ds:[esi]
  421dd7:	les    edi,FWORD PTR [edx+0x2f]
  421dda:	push   cs
  421ddb:	xlat   BYTE PTR ds:[ebx]
  421ddc:	stos   DWORD PTR es:[edi],eax
  421ddd:	xchg   ebp,eax
  421dde:	pop    ds
  421ddf:	xor    ebx,edi
  421de1:	in     al,dx
  421de2:	jae    0x421d7f
  421de4:	cmp    al,0xcd
  421de6:	sahf   
  421de7:	xor    bl,al
  421de9:	xchg   DWORD PTR [edx+0x51556c9d],esi
  421def:	mov    BYTE PTR [ecx],ah
  421df1:	int    0x29
  421df3:	xchg   DWORD PTR [edi+eiz*8],eax
  421df6:	call   0xcd6f:0xdad750db
  421dfd:	inc    esi
  421dfe:	jbe    0x421e23
  421e00:	inc    ebp
  421e01:	and    al,0x84
  421e03:	push   es
  421e04:	std    
  421e05:	aad    0x77
  421e07:	mov    eax,ds:0x57750b9f
  421e0c:	hlt    
  421e0d:	shl    DWORD PTR [ebx+0x6b],cl
  421e10:	adc    BYTE PTR [eax],0x7
  421e13:	pusha  
  421e14:	arpl   WORD PTR [edi],dx
  421e16:	jae    0x421e5f
  421e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e1a:	jo     0x421e82
  421e1c:	into   
  421e1d:	push   es
  421e1e:	mov    BYTE PTR [ecx-0x66],dh
  421e21:	push   ss
  421e22:	cmp    eax,0x86fb188f
  421e27:	or     BYTE PTR [eax],ah
  421e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e2a:	cs call 0x30b380f4
  421e30:	adc    bl,BYTE PTR [edi]
  421e32:	xchg   ebx,eax
  421e33:	clc    
  421e34:	lods   eax,DWORD PTR ds:[esi]
  421e35:	stc    
  421e36:	jg     0x421e2b
  421e38:	lahf   
  421e39:	push   ss
  421e3a:	test   DWORD PTR [eax],ebp
  421e3c:	sub    al,0x7b
  421e3e:	repnz add eax,0x76e408c3
  421e44:	mov    ecx,0x78bc1125
  421e49:	dec    DWORD PTR [esi+eax*1]
  421e4c:	aam    0xd5
  421e4e:	(bad)  
  421e4f:	pop    eax
  421e50:	xor    esp,DWORD PTR [edi]
  421e52:	jge    0x421dff
  421e54:	inc    ebx
  421e55:	and    eax,0x7a3a1b15
  421e5a:	add    al,BYTE PTR [ebp+0x2b65da9e]
  421e60:	sub    al,BYTE PTR [ebx+0x7e]
  421e63:	and    al,0x98
  421e65:	xchg   esi,eax
  421e66:	or     eax,0x42d7a74a
  421e6b:	retw   0xfdef
  421e6f:	mov    edi,0xff523af7
  421e74:	icebp  
  421e75:	fiadd  WORD PTR [esi-0x1e]
  421e78:	jl     0x421e04
  421e7a:	daa    
  421e7b:	push   edi
  421e7c:	mov    esi,0xf894b5c
  421e81:	popf   
  421e82:	les    edi,FWORD PTR [ecx+0x4c54f6dd]
  421e88:	cmp    ah,BYTE PTR [edx-0x5b]
  421e8b:	dec    edi
  421e8c:	inc    esi
  421e8d:	mov    ds:0xb835d1b4,al
  421e92:	sbb    al,BYTE PTR [ebx-0x56a6e836]
  421e98:	sbb    dl,cl
  421e9a:	inc    edi
  421e9b:	in     al,dx
  421e9c:	cmp    eax,0xcad204d5
  421ea1:	adc    ah,dh
  421ea3:	xchg   ebp,eax
  421ea4:	jo     0x421efa
  421ea6:	cmc    
  421ea7:	jne    0x421ef7
  421ea9:	addr16 dec ebp
  421eab:	retf   
  421eac:	or     eax,0xa3733647
  421eb1:	dec    esi
  421eb2:	push   ss
  421eb3:	adc    al,0x8b
  421eb5:	bound  edx,QWORD PTR [edi+0x690976ee]
  421ebb:	aaa    
  421ebc:	mov    edi,0xd87b9b3f
  421ec1:	into   
  421ec2:	inc    ecx
  421ec3:	xchg   BYTE PTR [edx],ch
  421ec5:	push   cs
  421ec6:	cmp    bl,0x7b
  421ec9:	gs stos BYTE PTR es:[edi],al
  421ecb:	pop    ecx
  421ecc:	test   DWORD PTR [esi+0x25],0x7eae7f4a
  421ed3:	jg     0x421f02
  421ed5:	push   esp
  421ed6:	push   ebp
  421ed7:	rol    edi,1
  421ed9:	ficomp DWORD PTR [esi+0x3b]
  421edc:	inc    edi
  421edd:	sbb    ch,BYTE PTR [edi]
  421edf:	pop    ebx
  421ee0:	outs   dx,BYTE PTR ds:[esi]
  421ee1:	or     DWORD PTR ds:0x98a17959,0xddd39eb3
  421eeb:	aad    0xc6
  421eed:	add    al,0x56
  421eef:	shl    DWORD PTR [eax-0x4e9cabcf],cl
  421ef5:	dec    ebp
  421ef6:	ret    0xcbec
  421ef9:	lock stos DWORD PTR es:[edi],eax
  421efb:	mov    dh,0x2f
  421efd:	ds ins DWORD PTR es:[edi],dx
  421eff:	add    DWORD PTR [ecx],ebp
  421f01:	xor    cl,0xeb
  421f04:	dec    edx
  421f05:	daa    
  421f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f07:	or     al,0x2b
  421f09:	inc    ecx
  421f0a:	jnp    0x421eb7
  421f0c:	or     eax,ebx
  421f0e:	xchg   edi,eax
  421f0f:	fisttp QWORD PTR [edx]
  421f11:	sbb    BYTE PTR [eax],dl
  421f13:	sub    dh,dh
  421f15:	pop    ebx
  421f16:	mov    ds:0x53fea6c2,eax
  421f1b:	repnz and bl,ch
  421f1e:	mov    dh,0x53
  421f20:	add    eax,esi
  421f22:	sbb    BYTE PTR [ebp+0x74],bl
  421f25:	repnz fs popf 
  421f28:	fiadd  WORD PTR [edi]
  421f2a:	cmp    DWORD PTR [ecx-0x21b2978f],esp
  421f30:	ret    
  421f31:	jg     0x421f22
  421f33:	aam    0xbd
  421f35:	push   edi
  421f36:	std    
  421f37:	mov    eax,ds:0x86f1cf65
  421f3c:	test   DWORD PTR [eax+edx*4-0x3abfae77],ebx
  421f43:	ins    DWORD PTR es:[edi],dx
  421f44:	xor    dl,BYTE PTR [eax-0x4d]
  421f47:	dec    edx
  421f48:	out    0x93,al
  421f4a:	lods   al,BYTE PTR ds:[esi]
  421f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f4c:	call   0x4a93c11c
  421f51:	push   ebx
  421f52:	mov    ?,WORD PTR [ebx]
  421f54:	push   esp
  421f55:	adc    ah,ch
  421f57:	in     eax,0x34
  421f59:	xchg   ebx,eax
  421f5a:	retf   0x5eb6
  421f5d:	cmc    
  421f5e:	mov    cl,0x36
  421f60:	gs push ecx
  421f62:	lock dec ecx
  421f64:	pop    eax
  421f65:	xchg   edx,eax
  421f66:	lahf   
  421f67:	sbb    eax,0xe88e8836
  421f6c:	and    BYTE PTR [ebp-0x54],ch
  421f6f:	mul    ecx
  421f71:	call   0x6cc2ea66
  421f76:	mov    esi,0x2bf172ce
  421f7b:	(bad)  
  421f7d:	mov    esi,0xfe74f740
  421f82:	push   es
  421f83:	or     esp,DWORD PTR [eax+edi*4]
  421f86:	lahf   
  421f87:	bound  ecx,QWORD PTR [edi-0x3f452f74]
  421f8d:	xchg   ebp,eax
  421f8e:	outs   dx,BYTE PTR ds:[esi]
  421f8f:	jbe    0x421f5b
  421f91:	iret   
  421f92:	mov    ah,bl
  421f94:	push   es
  421f95:	inc    eax
  421f96:	icebp  
  421f97:	sub    BYTE PTR [eax+0x76b0c2de],cl
  421f9d:	mov    esp,0x2caf349d
  421fa2:	pop    ebp
  421fa3:	in     al,dx
  421fa4:	mov    BYTE PTR [eax+0x6e],0xa4
  421fa8:	neg    BYTE PTR [eax-0x2d]
  421fab:	sbb    eax,0xd65ac6ed
  421fb0:	dec    esi
  421fb1:	(bad)  
  421fb2:	call   0x5e49febe
  421fb7:	shl    BYTE PTR [ecx],1
  421fb9:	jno    0x422005
  421fbb:	cmp    eax,0xa44ce233
  421fc0:	test   al,0xf4
  421fc2:	cmc    
  421fc3:	retf   
  421fc4:	sbb    BYTE PTR [ebx+0x45],ch
  421fc7:	xchg   edx,eax
  421fc8:	call   0x149a:0x6d75ee30
  421fcf:	dec    edx
  421fd0:	shl    DWORD PTR [esi+edx*2],1
  421fd3:	push   esi
  421fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fd5:	test   BYTE PTR [ebp+esi*4-0x2bad3d4a],bh
  421fdc:	pop    edx
  421fdd:	(bad)  
  421fde:	das    
  421fdf:	dec    edi
  421fe0:	xchg   esp,eax
  421fe1:	lahf   
  421fe2:	jecxz  0x421feb
  421fe4:	test   DWORD PTR [esi],esp
  421fe6:	int3   
  421fe7:	jp     0x422052
  421fe9:	cmp    DWORD PTR [edi],edx
  421feb:	inc    eax
  421fec:	bound  edi,QWORD PTR [edx+0x201e43b2]
  421ff2:	addr16 pop esi
  421ff4:	xor    esi,DWORD PTR [esi+0x74]
  421ff7:	sbb    DWORD PTR [eax-0x2d5568d1],ebx
  421ffd:	shr    DWORD PTR [ecx-0x2aa8b55b],cl
  422003:	fs push edi
  422005:	jg     0x422028
  422007:	inc    ebx
  422008:	mov    BYTE PTR [ebx],bh
  42200a:	mov    ah,0xc4
  42200c:	jmp    FWORD PTR [eax+ebp*8+0x3d2536f4]
  422013:	fimul  WORD PTR [ebx-0x3538d70f]
  422019:	out    0x46,al
  42201b:	mov    ebx,ebx
  42201d:	dec    edx
  42201e:	in     eax,dx
  42201f:	cmp    ch,bh
  422021:	mov    esi,0x218790f1
  422026:	mov    eax,ds:0x6dac2e63
  42202b:	or     edi,ecx
  42202d:	fcmovnbe st,st(1)
  42202f:	les    edi,FWORD PTR [edx]
  422031:	xor    al,0x41
  422033:	cmp    cl,BYTE PTR [ebp+edx*1-0x34]
  422037:	jns    0x421fe9
  422039:	push   cs
  42203a:	das    
  42203b:	icebp  
  42203c:	push   es
  42203d:	xor    al,0x38
  42203f:	xchg   esp,eax
  422040:	rcr    BYTE PTR [edi-0x28e65e73],cl
  422046:	or     eax,0x1153bf5f
  42204b:	fstp   QWORD PTR [ebx+0x14aaf8]
  422051:	mov    BYTE PTR [ebx+0x17efd285],dl
  422057:	jmp    0x2da6:0xfc56e444
  42205e:	ja     0x421ff2
  422060:	dec    edx
  422061:	sbb    DWORD PTR [ecx+0x51e38552],ecx
  422067:	ins    DWORD PTR es:[edi],dx
  422068:	inc    edi
  422069:	cmp    bl,bl
  42206b:	pusha  
  42206c:	mov    ebx,0xf734ebb7
  422071:	add    al,0x5e
  422073:	and    edi,edx
  422075:	dec    esi
  422076:	bound  ebx,QWORD PTR [esi-0x78]
  422079:	ret    
  42207a:	ins    BYTE PTR es:[edi],dx
  42207b:	lahf   
  42207c:	inc    edx
  42207d:	or     eax,0xfc853c7b
  422082:	fisub  WORD PTR ss:[edx]
  422085:	scas   al,BYTE PTR es:[edi]
  422086:	mov    al,ds:0x6131a1fd
  42208b:	(bad)  
  42208c:	pop    esi
  42208d:	mov    edx,0xe240640
  422092:	mov    al,0xf
  422094:	mov    ch,0xbf
  422096:	call   0xe212:0x6fc9f39a
  42209d:	mov    dh,0xc2
  42209f:	push   ebp
  4220a0:	in     al,dx
  4220a1:	jne    0x4220f4
  4220a3:	stos   BYTE PTR es:[edi],al
  4220a4:	fadd   DWORD PTR [edx]
  4220a6:	mov    cl,0xec
  4220a8:	pop    edi
  4220a9:	das    
  4220aa:	mov    ah,0xc1
  4220ac:	fwait
  4220ad:	aas    
  4220ae:	xchg   edi,eax
  4220af:	rol    DWORD PTR [ebx+0x19fa0461],0x26
  4220b6:	mov    gs,WORD PTR ds:0xf813ca10
  4220bc:	jno    0x422126
  4220be:	or     cl,BYTE PTR [edi]
  4220c0:	cmp    BYTE PTR [ecx+0x3bd00337],bh
  4220c6:	add    DWORD PTR [esi+0x42ffe8f5],esp
  4220cc:	lds    edi,FWORD PTR [esi+0x4187c499]
  4220d2:	dec    ebp
  4220d3:	xchg   esi,eax
  4220d4:	add    eax,0xceedc942
  4220d9:	or     DWORD PTR [edi],esp
  4220db:	push   0x4b
  4220dd:	adc    eax,0xdad9eb
  4220e2:	js     0x4220b3
  4220e4:	je     0x4220fb
  4220e6:	in     al,dx
  4220e7:	add    edi,eax
  4220e9:	xchg   edx,eax
  4220ea:	push   ds
  4220eb:	or     al,0x28
  4220ed:	add    esp,esp
  4220ef:	aam    0x80
  4220f1:	test   al,0x7a
  4220f3:	or     eax,0xd76d5333
  4220f8:	fnstcw WORD PTR [ebx]
  4220fa:	aad    0x99
  4220fc:	dec    esp
  4220fd:	loopne 0x4220d0
  4220ff:	cld    
  422100:	bound  esp,QWORD PTR [ecx]
  422102:	mov    ecx,0xc4b0a586
  422107:	jl     0x4220d0
  422109:	dec    ebp
  42210a:	mov    WORD PTR [ebx-0x747cf95a],?
  422110:	jae    0x422122
  422112:	mov    esi,0xeec12e03
  422117:	in     al,dx
  422118:	sbb    al,0x9b
  42211a:	lods   al,BYTE PTR ds:[esi]
  42211b:	and    dl,BYTE PTR [edi+0x4c]
  42211e:	push   ds
  42211f:	mov    ch,0x27
  422121:	mov    eax,ds:0x55cbecd1
  422126:	jge    0x422166
  422128:	and    DWORD PTR fs:[si],ebp
  42212c:	or     BYTE PTR [ecx],ah
  42212e:	jle    0x422127
  422130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422131:	mov    ebx,0xeb15b05a
  422136:	js     0x42218c
  422138:	lds    ebp,FWORD PTR [esi+0x7b]
  42213b:	fwait
  42213c:	xchg   esp,eax
  42213d:	sbb    al,0xea
  42213f:	push   ebp
  422140:	jge    0xef0a4c89
  422146:	fcom   DWORD PTR [ebp+0x72ac65f9]
  42214c:	adc    al,0x97
  42214e:	pop    esp
  42214f:	shr    ebp,cl
  422151:	dec    esi
  422152:	pop    esi
  422153:	push   cs
  422154:	push   esi
  422155:	cwde   
  422156:	xchg   ebp,eax
  422157:	pusha  
  422158:	idiv   DWORD PTR ds:[edi]
  42215b:	pop    ebx
  42215c:	sbb    eax,0xb2481cc7
  422161:	inc    ebp
  422162:	dec    ebx
  422163:	in     al,0x89
  422165:	and    DWORD PTR [ecx+0x11],edi
  422168:	jnp    0x422194
  42216a:	adc    dl,BYTE PTR [ebx]
  42216c:	mov    ch,0x64
  42216e:	lods   eax,DWORD PTR ds:[esi]
  42216f:	mov    bh,0x13
  422171:	stc    
  422172:	xchg   ebp,eax
  422173:	lods   al,BYTE PTR ds:[esi]
  422174:	imul   eax,DWORD PTR [ebp-0x41cd852b],0x7c8e2b5e
  42217e:	jne    0x4221eb
  422180:	push   edx
  422181:	mov    ds:0xe8d938b1,al
  422186:	aad    0x36
  422188:	xchg   ebx,eax
  422189:	jg     0x422187
  42218b:	lods   eax,DWORD PTR ds:[esi]
  42218c:	push   edi
  42218d:	fistp  WORD PTR [edx+ebx*2+0x4f2ffc4f]
  422194:	(bad)  
  422195:	sahf   
  422196:	mov    ds:0x98db0583,eax
  42219b:	aaa    
  42219c:	out    dx,eax
  42219d:	lds    eax,FWORD PTR cs:[eax+0x61]
  4221a1:	repnz push edi
  4221a3:	shr    DWORD PTR [eax+0x5f1daf5],cl
  4221a9:	(bad)  
  4221aa:	cmp    edx,edi
  4221ac:	sti    
  4221ad:	mov    al,ds:0x31db5d7d
  4221b2:	sbb    cl,BYTE PTR [ebx+eiz*8]
  4221b5:	jle    0x4221f9
  4221b7:	and    eax,0x1b35e03b
  4221bc:	enter  0x9e7f,0xe9
  4221c0:	push   edx
  4221c1:	xlat   BYTE PTR ds:[ebx]
  4221c2:	sbb    dh,dl
  4221c4:	add    DWORD PTR [edi-0x57],eax
  4221c7:	(bad)  
  4221c8:	jle    0x422154
  4221ca:	fadd   st,st(5)
  4221cc:	dec    edx
  4221cd:	scas   eax,DWORD PTR es:[edi]
  4221ce:	jo     0x422230
  4221d0:	(bad)  
  4221d1:	in     al,0x81
  4221d3:	mov    ?,WORD PTR [edi]
  4221d5:	hlt    
  4221d6:	jnp    0x42222e
  4221d8:	ins    BYTE PTR es:[edi],dx
  4221d9:	iret   
  4221da:	inc    edi
  4221db:	ss add eax,0x16382cd
  4221e1:	loopne 0x4221e5
  4221e3:	xchg   edi,eax
  4221e4:	push   edi
  4221e5:	into   
  4221e6:	fs loopne 0x4221ff
  4221e9:	in     eax,dx
  4221ea:	(bad)  
  4221ec:	out    dx,al
  4221ed:	add    ebx,DWORD PTR [ebp-0x128ac7cb]
  4221f3:	pop    es
  4221f4:	call   0xe58eda7a
  4221f9:	cmp    WORD PTR [ecx+0x11],dx
  4221fd:	add    DWORD PTR [edx-0x16982915],ecx
  422203:	fidivr DWORD PTR [edi+0x7f]
  422206:	sbb    eax,0xd595e3b3
  42220b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42220c:	mov    ebx,0xa11f42c7
  422211:	popf   
  422212:	adc    BYTE PTR [ebx+0x533246e3],bl
  422218:	retf   
  422219:	lock jne 0x4221d4
  42221c:	leave  
  42221d:	and    DWORD PTR [edx],eax
  42221f:	pop    esi
  422220:	repz call 0xb430:0x7aca2949
  422228:	jae    0x422240
  42222a:	ds push 0xffffff88
  42222d:	pusha  
  42222e:	or     eax,0x51f3e54e
  422233:	mov    eax,0xd585ed98
  422238:	jno    0x422296
  42223a:	imul   ebx,DWORD PTR [esi+0x683cdc74],0xd0e1c084
  422244:	in     al,0x77
  422246:	and    eax,0xb4c7e39
  42224b:	shl    BYTE PTR [edi-0x59],cl
  42224e:	lods   al,BYTE PTR ds:[esi]
  42224f:	sbb    DWORD PTR [eax],edx
  422251:	repnz and eax,0x5a8cf3d7
  422257:	aaa    
  422258:	(bad)  
  422259:	imul   DWORD PTR [esi+ebp*4+0x8e4231e]
  422260:	dec    edi
  422261:	sub    ah,BYTE PTR [edx]
  422263:	ins    DWORD PTR es:[edi],dx
  422264:	jne    0x42228d
  422266:	adc    ah,BYTE PTR [ebx]
  422268:	adc    BYTE PTR fs:[eax],cl
  42226b:	sub    eax,0xe3387a4d
  422270:	lock mov ebp,DWORD PTR [edx]
  422273:	in     eax,dx
  422274:	add    bh,BYTE PTR [ebp+0x5acbbe41]
  42227a:	imul   eax,edx,0xd0f5059b
  422280:	fst    QWORD PTR ds:0x9c02c8be
  422286:	xor    DWORD PTR [ebp+0x36726d36],0xfffffff3
  42228d:	scas   eax,DWORD PTR es:[edi]
  42228e:	inc    esp
  42228f:	sub    DWORD PTR [ecx+0x4acb547f],esi
  422295:	rcr    DWORD PTR [ebp-0x2d],1
  422298:	(bad)  
  422299:	out    0x79,eax
  42229b:	fist   WORD PTR [edi+0x54]
  42229e:	sub    ah,bh
  4222a0:	mov    BYTE PTR [eax+0x470d4fa0],0xba
  4222a7:	int3   
  4222a8:	(bad)  
  4222a9:	ffree  st(3)
  4222ab:	mov    eax,ds:0xea296b60
  4222b0:	mov    dh,0x8c
  4222b2:	and    al,0x2b
  4222b4:	cs aas 
  4222b6:	neg    edx
  4222b8:	adc    edi,DWORD PTR [edx+0x65]
  4222bb:	xchg   BYTE PTR [edi+0x13],bl
  4222be:	inc    eax
  4222bf:	adc    DWORD PTR [ecx+0x3b7c1621],0xffffffae
  4222c6:	mov    al,ds:0x3a22a2bc
  4222cb:	addr16 and ah,ah
  4222ce:	mov    ah,0xbc
  4222d0:	mov    DWORD PTR [ebx-0x55],ebx
  4222d3:	mov    edx,0x14202037
  4222d8:	shr    DWORD PTR [ecx+0x48f17cbd],0x7e
  4222df:	adc    DWORD PTR [ebx+0x6d43b25b],edi
  4222e5:	les    edx,FWORD PTR [eax+0x42cfb2a7]
  4222eb:	ficom  DWORD PTR [edi+ebx*8-0x4b]
  4222ef:	cmp    ch,BYTE PTR [ebp+0x5af63997]
  4222f5:	inc    esp
  4222f6:	add    dx,WORD PTR [edx-0x3]
  4222fa:	xchg   esi,eax
  4222fb:	prefetchw BYTE PTR [eax]
  4222fe:	scas   al,BYTE PTR es:[edi]
  4222ff:	jno    0x422335
  422301:	adc    ebx,edx
  422303:	mov    edx,0x94e68ec6
  422308:	push   ebx
  422309:	rcr    DWORD PTR [edi],1
  42230b:	or     ebp,DWORD PTR [ebp-0x45]
  42230e:	push   ss
  42230f:	mov    ebp,0x772d4150
  422314:	mov    esi,0x4f3f6ef5
  422319:	test   eax,0x881a7bd9
  42231e:	popf   
  42231f:	jp     0x42230c
  422321:	icebp  
  422322:	cmp    DWORD PTR [eax-0x2178d2bd],edx
  422328:	ffreep st(1)
  42232a:	ins    BYTE PTR es:[edi],dx
  42232b:	mov    ebx,0x76938f8b
  422330:	repnz mov eax,ds:0x83e1d102
  422336:	dec    edx
  422337:	test   eax,0x55f1827
  42233c:	call   0xcc40dd6c
  422341:	ins    DWORD PTR es:[edi],dx
  422342:	fist   WORD PTR [edx]
  422344:	mov    bl,0x6a
  422346:	ins    DWORD PTR es:[edi],dx
  422347:	inc    ebx
  422348:	cmp    esp,eax
  42234a:	sbb    esi,DWORD PTR [ebp-0x59b14211]
  422350:	pusha  
  422351:	lods   eax,DWORD PTR ds:[esi]
  422352:	mov    ch,0x45
  422354:	push   ss
  422355:	sbb    bh,BYTE PTR [edx+0xdf7b608]
  42235b:	sbb    DWORD PTR [edi+ecx*8-0xfb8bfd3],esp
  422362:	stos   DWORD PTR es:[edi],eax
  422363:	es xchg ecx,eax
  422365:	add    al,BYTE PTR [edi+0xc41b532]
  42236b:	inc    edi
  42236c:	ja     0x4223bf
  42236e:	or     ecx,ebp
  422370:	repnz xor al,0x1e
  422373:	xor    BYTE PTR [edi+0x3cbd4bc9],ch
  422379:	adc    dl,BYTE PTR [eax]
  42237b:	das    
  42237c:	pop    ebp
  42237d:	xor    BYTE PTR [esi-0x7a650008],bl
  422383:	xchg   ebx,eax
  422384:	cmp    DWORD PTR [ebx],ebp
  422386:	push   ebx
  422387:	or     al,0x7
  422389:	pop    edi
  42238a:	lods   al,BYTE PTR ds:[esi]
  42238b:	cli    
  42238c:	cld    
  42238d:	call   0xa4dd8caa
  422392:	push   ecx
  422393:	jns    0x422333
  422395:	dec    edi
  422396:	xchg   BYTE PTR ds:0xb0f7c8b8,ah
  42239c:	aas    
  42239d:	xchg   ebx,eax
  42239e:	pop    edx
  42239f:	pop    edi
  4223a0:	mov    ebx,0xa80bd984
  4223a5:	lods   al,BYTE PTR ds:[esi]
  4223a6:	out    0x23,al
  4223a8:	aas    
  4223a9:	sbb    bl,BYTE PTR [esi-0x63]
  4223ac:	js     0x42233f
  4223ae:	or     DWORD PTR ds:0x252b3259,edx
  4223b4:	inc    ebp
  4223b5:	mov    ds:0x954071c3,al
  4223ba:	cwde   
  4223bb:	(bad)  
  4223bc:	je     0x4223d5
  4223be:	sti    
  4223bf:	push   ecx
  4223c0:	in     eax,dx
  4223c1:	(bad)  
  4223c2:	rcr    BYTE PTR [edx+0x68],cl
  4223c5:	ret    
  4223c6:	arpl   sp,cx
  4223c8:	inc    eax
  4223c9:	add    eax,0x63bff740
  4223ce:	mov    ds:0x4f0c0c80,al
  4223d3:	icebp  
  4223d4:	mov    eax,ds:0x4a764310
  4223d9:	mov    ds:0x7ff997ed,eax
  4223de:	fs stos DWORD PTR es:[edi],eax
  4223e0:	out    0x27,eax
  4223e2:	fisubr DWORD PTR [ebp-0x7e]
  4223e5:	dec    ebx
  4223e6:	imul   edx,DWORD PTR [edi+0x33],0xa52c3764
  4223ed:	cmp    bl,BYTE PTR [ecx]
  4223ef:	dec    eax
  4223f0:	movhps QWORD PTR [edx+ebp*2-0x4e],xmm3
  4223f5:	fcom   st(3)
  4223f7:	fsub   st,st(1)
  4223f9:	cmp    dl,dl
  4223fb:	imul   eax,DWORD PTR [edx],0x650ee37a
  422401:	xor    ah,ch
  422403:	dec    edi
  422404:	cmp    DWORD PTR [esi-0x58c9a47e],esi
  42240a:	sbb    al,0x80
  42240c:	rol    BYTE PTR [ebp-0x7c],1
  42240f:	add    ch,BYTE PTR [esp+esi*1-0x6a01aaee]
  422416:	test   bh,ch
  422418:	test   eax,0xa4916e34
  42241d:	jmp    0x42241e
  42241f:	adc    DWORD PTR [ebp+edi*2+0x3a],ebp
  422423:	fiadd  DWORD PTR [ecx]
  422425:	daa    
  422426:	repnz add ebp,DWORD PTR [eax+0x12]
  42242a:	adc    esi,DWORD PTR [esi-0x68]
  42242d:	lods   al,BYTE PTR ds:[esi]
  42242e:	or     ecx,DWORD PTR [edi]
  422430:	out    0x50,al
  422432:	cmp    ebx,DWORD PTR [eax]
  422434:	fwait
  422435:	ret    0x1d7e
  422438:	pusha  
  422439:	(bad)
  42243c:	dec    ebp
  42243d:	sbb    eax,0xbf12587c
  422442:	in     eax,dx
  422443:	xchg   DWORD PTR [esp+edx*4-0x6d1b7fca],esp
  42244a:	add    dl,BYTE PTR [eax]
  42244c:	pop    esi
  42244d:	jmp    0x3eecb1d3
  422452:	inc    edx
  422453:	sti    
  422454:	loop   0x422486
  422456:	sub    DWORD PTR [ecx-0x7e],ecx
  422459:	sti    
  42245a:	push   ebp
  42245b:	in     al,dx
  42245c:	fcomip st,st(4)
  42245e:	xchg   ebx,eax
  42245f:	(bad)
  422462:	push   ds
  422463:	inc    ecx
  422464:	pop    ds
  422465:	cld    
  422466:	mov    DWORD PTR [eax+esi*2],edx
  422469:	aas    
  42246a:	(bad)  
  42246b:	push   0x893cf268
  422470:	mov    al,ds:0x62d05638
  422475:	xor    DWORD PTR [edi+0x59],edi
  422478:	cs pop ecx
  42247a:	sub    esi,0x40
  42247d:	push   ebx
  42247e:	jmp    0x4224c1
  422480:	popf   
  422481:	sub    eax,0xd8a4f8f9
  422486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422487:	iret   
  422488:	add    BYTE PTR [edx-0x8],dh
  42248b:	lods   eax,DWORD PTR ds:[esi]
  42248c:	cld    
  42248d:	fist   DWORD PTR [ecx-0x66ac9e5b]
  422493:	push   ecx
  422494:	jp     0x422458
  422496:	jnp    0x4224f6
  422498:	bound  eax,QWORD PTR [ebx+0x25c15ca8]
  42249e:	sti    
  42249f:	shl    DWORD PTR [eax],0xdc
  4224a2:	cmp    cl,BYTE PTR [ecx+0x7e]
  4224a5:	clc    
  4224a6:	xor    dh,BYTE PTR [eax+0x56e98cd5]
  4224ac:	mov    dl,0x12
  4224ae:	pop    esp
  4224af:	repnz sbb al,0x22
  4224b2:	js     0x4224a8
  4224b4:	jle    0x4224ae
  4224b6:	sbb    ch,dl
  4224b8:	mov    ah,0x62
  4224ba:	ds mov ebp,0x561c2ef6
  4224c0:	add    DWORD PTR [ecx+0x3e],edi
  4224c3:	ja     0x42249a
  4224c5:	dec    eax
  4224c6:	ins    BYTE PTR es:[edi],dx
  4224c7:	inc    BYTE PTR [ecx]
  4224c9:	cmp    al,0x99
  4224cb:	test   al,0x44
  4224cd:	inc    esi
  4224ce:	aad    0xba
  4224d0:	out    dx,al
  4224d1:	shl    DWORD PTR es:[esi+ecx*1],1
  4224d5:	add    bh,0x92
  4224d8:	test   al,0x95
  4224da:	fadd   QWORD PTR [eax-0x72d6ff97]
  4224e0:	out    0xc3,eax
  4224e2:	pop    ebx
  4224e3:	add    al,0xfe
  4224e5:	push   esp
  4224e6:	cmp    dh,BYTE PTR ds:0xf2e20387
  4224ec:	scas   al,BYTE PTR es:[edi]
  4224ed:	das    
  4224ee:	dec    esp
  4224ef:	sub    al,0xf0
  4224f1:	test   eax,0x34a4c1fa
  4224f6:	test   DWORD PTR [ebx+edx*8+0x42],esi
  4224fa:	ror    DWORD PTR [ebx+0x10],1
  4224fd:	dec    eax
  4224fe:	call   0xf93e:0xc6a31b44
  422505:	sub    BYTE PTR [eax-0x56098618],ch
  42250b:	imul   ebp,DWORD PTR [esi+0x2a1de2f6],0x33
  422512:	iret   
  422513:	and    ebx,edi
  422515:	lods   ax,WORD PTR ds:[esi]
  422517:	mov    dh,0x2
  422519:	adc    dl,BYTE PTR [eax-0x5b140fe2]
  42251f:	mov    edx,0x56937879
  422524:	pop    ecx
  422525:	(bad)
  422528:	loop   0x422547
  42252a:	sbb    al,0xc2
  42252c:	ss fwait
  42252e:	pop    esp
  42252f:	lsl    ebp,WORD PTR [eax+0xa163550]
  422536:	mov    ebx,0xd4ab4aa2
  42253b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42253c:	in     al,0x8b
  42253e:	fbstp  TBYTE PTR [esi+0x53]
  422541:	cmp    al,0xe1
  422543:	jns    0x42251d
  422545:	adc    BYTE PTR [ebp-0x53],0xec
  422549:	loop   0x422565
  42254b:	je     0x42258a
  42254d:	inc    esp
  42254e:	(bad)  
  42254f:	out    0x90,eax
  422551:	push   ds
  422552:	(bad)  
  422553:	xchg   esp,eax
  422554:	stos   DWORD PTR es:[edi],eax
  422555:	mov    bl,0x6
  422557:	les    eax,FWORD PTR [ebp+0x1f]
  42255a:	cmp    ebp,DWORD PTR [ecx+0x6364a08a]
  422560:	and    eax,0x8c6e6831
  422565:	push   eax
  422566:	sbb    BYTE PTR [ecx-0x2b732fe6],dh
  42256c:	sub    eax,0xf00d1ba4
  422571:	jecxz  0x422509
  422573:	mov    esp,0x3c953741
  422578:	rol    DWORD PTR [ebp+0x35],0xef
  42257c:	and    eax,0x4cd8d121
  422581:	xor    eax,0xf5ce765d
  422586:	dec    ebp
  422587:	cs xchg ecx,eax
  422589:	mov    BYTE PTR [esi],cl
  42258b:	mov    eax,ds:0xb2cb8bc7
  422590:	das    
  422591:	ins    BYTE PTR es:[edi],dx
  422592:	mov    ecx,DWORD PTR [edi+0x6698bbdb]
  422598:	mov    ch,0xb7
  42259a:	sti    
  42259b:	ret    
  42259c:	push   ebp
  42259d:	aam    0xce
  42259f:	xlat   BYTE PTR ds:[ebx]
  4225a0:	push   eax
  4225a1:	sbb    esp,DWORD PTR [edx+ebx*4+0x5d]
  4225a5:	cs scas eax,DWORD PTR es:[edi]
  4225a7:	mov    eax,ds:0x42902b74
  4225ac:	loopne 0x42257a
  4225ae:	sub    cl,ch
  4225b0:	ret    0x11a2
  4225b3:	add    bh,dl
  4225b5:	sub    edx,esi
  4225b7:	add    DWORD PTR [esp+ebx*8-0x39],0x2f53682f
  4225bf:	je     0x422547
  4225c1:	push   0xb32bb6f7
  4225c6:	or     al,0xcf
  4225c8:	icebp  
  4225c9:	sti    
  4225ca:	sbb    BYTE PTR [ebx+0x4fd58aa4],cl
  4225d0:	mov    esi,0xdc8a8bb2
  4225d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d6:	cmc    
  4225d7:	fisubr DWORD PTR [esi-0x21]
  4225da:	scas   al,BYTE PTR es:[edi]
  4225db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225dc:	jmp    0x7c756776
  4225e1:	xchg   dl,al
  4225e3:	and    esp,0xffffff90
  4225e6:	(bad)  
  4225e7:	mov    bl,0x8e
  4225e9:	dec    ebp
  4225ea:	pop    ebx
  4225eb:	jg     0x4225dd
  4225ed:	cmc    
  4225ee:	loopne 0x42261c
  4225f0:	xchg   edx,eax
  4225f1:	xchg   esp,eax
  4225f2:	dec    ecx
  4225f3:	nop
  4225f4:	sbb    edx,DWORD PTR [ecx+0x24]
  4225f7:	nop
  4225f8:	jns    0x4225da
  4225fa:	mov    ds:0x2b79e3d6,eax
  4225ff:	fwait
  422600:	mov    esp,0xbfe09eab
  422605:	sbb    edx,DWORD PTR ds:0x5594e37f
  42260b:	cld    
  42260c:	(bad)  
  42260d:	jno    0x422686
  42260f:	ret    0xeb5c
  422612:	xchg   ebx,eax
  422613:	ror    BYTE PTR [ecx+0xf],cl
  422616:	and    BYTE PTR [ebx],bl
  422618:	adc    eax,0x8801751a
  42261d:	outs   dx,DWORD PTR ds:[esi]
  42261e:	add    eax,0x791763b7
  422623:	adc    BYTE PTR [eax-0x66],ch
  422626:	xor    cl,0xab
  422629:	aas    
  42262a:	mov    ebx,0xdd742dfe
  42262f:	jl     0x4225d8
  422631:	outs   dx,DWORD PTR ds:[esi]
  422632:	mov    es,WORD PTR [ecx]
  422634:	icebp  
  422635:	(bad)  
  422636:	mul    BYTE PTR [ebx-0x29]
  422639:	ror    BYTE PTR [edi+0xa0129e2],0x1e
  422640:	xor    al,0x6a
  422642:	fnsave [eax]
  422644:	fstp   DWORD PTR [edi-0x4d]
  422647:	dec    ecx
  422648:	sar    BYTE PTR [ebx-0x20c43fee],cl
  42264e:	leave  
  42264f:	in     eax,dx
  422650:	mov    ebx,0x46b69fa3
  422655:	xor    eax,0x52053b0c
  42265a:	les    esi,FWORD PTR [ebx+0x58]
  42265d:	mov    ebp,0xb3dd6714
  422662:	inc    ebx
  422663:	loope  0x422683
  422665:	fwait
  422666:	rcr    BYTE PTR [edx+0x7a96bbbf],cl
  42266c:	jbe    0x42262f
  42266e:	cmp    dh,bl
  422670:	jp     0x42264f
  422672:	hlt    
  422673:	fst    DWORD PTR [edx-0x2a3f11f]
  422679:	jecxz  0x4226d8
  42267b:	fnstcw WORD PTR ds:0x440c1d37
  422681:	idiv   BYTE PTR [esi-0x4d]
  422684:	bound  esp,QWORD PTR [ebx-0x5af19a7c]
  42268a:	jmp    0x42267c
  42268c:	mov    dl,0x6
  42268e:	out    dx,al
  42268f:	dec    edi
  422690:	pop    ds
  422691:	cmp    BYTE PTR [eax],al
  422693:	shl    BYTE PTR [esi],0xf8
  422696:	ja     0x4226e1
  422698:	in     al,dx
  422699:	iret   
  42269a:	mov    al,0x74
  42269c:	and    eax,0x8625c1fd
  4226a1:	inc    ecx
  4226a2:	je     0x422687
  4226a4:	pop    ecx
  4226a6:	aad    0x55
  4226a8:	xchg   ebx,eax
  4226a9:	jne    0x4226a9
  4226ab:	sti    
  4226ac:	pushf  
  4226ad:	std    
  4226ae:	adc    DWORD PTR [ebx-0x13],ecx
  4226b1:	stos   BYTE PTR es:[edi],al
  4226b2:	icebp  
  4226b3:	int3   
  4226b4:	es pop esi
  4226b6:	cmp    edi,ebx
  4226b8:	push   edx
  4226b9:	xor    DWORD PTR [edx+0xc931822],ecx
  4226bf:	cmp    al,0x93
  4226c1:	push   esi
  4226c2:	cmp    edx,ebx
  4226c4:	cmp    DWORD PTR [eax-0x77eb10d0],ebx
  4226ca:	ficom  DWORD PTR [esi]
  4226cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226cd:	pop    es
  4226ce:	xor    eax,0x30dfad29
  4226d3:	jo     0x422734
  4226d5:	or     DWORD PTR [ebp+0x3e],edx
  4226d8:	int    0xc6
  4226da:	mov    edx,0x8d626357
  4226df:	cmp    BYTE PTR [ebx-0x79d10cd2],ah
  4226e5:	popf   
  4226e6:	mov    BYTE PTR [ecx],dl
  4226e8:	pop    edx
  4226e9:	(bad)  
  4226ea:	xchg   edi,eax
  4226eb:	ret    0x49f2
  4226ee:	iret   
  4226ef:	inc    edx
  4226f0:	sbb    al,0x5d
  4226f2:	push   eax
  4226f3:	cmp    eax,0x8c5df0b3
  4226f8:	lahf   
  4226f9:	call   0x3be985a
  4226fe:	fidiv  DWORD PTR [eax+ecx*1-0x4c]
  422702:	and    esi,DWORD PTR gs:[edx]
  422705:	mov    edx,0xadb9269a
  42270a:	fnstcw WORD PTR [eax+edi*8+0x56e3c748]
  422711:	dec    esi
  422712:	dec    eax
  422713:	push   esi
  422714:	mov    esp,0x86cf7add
  422719:	test   DWORD PTR [ebx],edi
  42271b:	aad    0xdd
  42271d:	mov    edi,0x4251423c
  422722:	pop    esi
  422723:	not    BYTE PTR [eax+ebx*2+0x31]
  422727:	mov    bh,BYTE PTR [edx]
  422729:	mov    al,ds:0xa2a7d364
  42272e:	dec    esp
  42272f:	retf   0x50f2
  422732:	adc    DWORD PTR [ebp-0x64864963],esp
  422738:	out    dx,eax
  422739:	sar    ebx,0x84
  42273c:	and    edx,DWORD PTR [eax]
  42273e:	aam    0x10
  422740:	jmp    0x422781
  422742:	pop    ds
  422743:	sbb    edi,DWORD PTR [esi+0x62b81820]
  422749:	jmp    0x4226eb
  42274b:	push   esi
  42274c:	pop    es
  42274d:	sbb    BYTE PTR [eax+0x56],bh
  422750:	ja     0x4227c4
  422752:	xchg   BYTE PTR [ebx+0x4d],dh
  422755:	fadd   st(5),st
  422757:	mov    esi,0x46857989
  42275c:	fdivp  st(5),st
  42275e:	sub    DWORD PTR [eax-0x64],ebp
  422761:	mov    eax,0xb0ad381d
  422766:	shl    BYTE PTR ds:0xedfc1778,cl
  42276c:	cmp    ebx,DWORD PTR [ebx]
  42276e:	outs   dx,DWORD PTR ds:[esi]
  42276f:	shl    DWORD PTR [ecx+0x6509a028],0xc6
  422776:	push   edi
  422777:	dec    ebp
  422778:	xchg   edx,eax
  422779:	mov    WORD PTR [eax+0x62bd535d],ds
  42277f:	fstp   DWORD PTR [ebx+edx*8-0x76d8e53a]
  422786:	adc    DWORD PTR [ebp+ecx*8-0x42],0x5ab262a1
  42278e:	das    
  42278f:	jl     0x4227c2
  422791:	cmp    eax,0x941ecc2f
  422796:	aam    0x98
  422798:	mov    edi,ebx
  42279a:	scas   al,BYTE PTR es:[edi]
  42279b:	aas    
  42279c:	imul   ecx,DWORD PTR [eax],0xd8467bc4
  4227a2:	jno    0x42278a
  4227a4:	shl    edi,0x8
  4227a7:	loopne 0x422763
  4227a9:	push   edx
  4227aa:	adc    BYTE PTR ds:0x14ce1a36,cl
  4227b0:	xchg   esi,eax
  4227b1:	dec    ebx
  4227b2:	mov    al,ds:0x59dad9e1
  4227b7:	and    ecx,DWORD PTR [eax]
  4227b9:	cmp    ch,BYTE PTR [eax]
  4227bb:	inc    ecx
  4227bc:	jbe    0x422829
  4227be:	xchg   DWORD PTR [ebp+0x26],edx
  4227c1:	mov    esp,0x6b73c2f5
  4227c6:	pop    edi
  4227c7:	and    DWORD PTR [ecx+esi*1+0x6b8341d8],0x55
  4227cf:	add    al,0x7c
  4227d1:	dec    eax
  4227d2:	mov    ah,0x2a
  4227d4:	leave  
  4227d5:	mov    dh,0x7a
  4227d7:	rcl    al,cl
  4227d9:	test   eax,0x761c8bd8
  4227de:	popf   
  4227df:	out    0x54,eax
  4227e1:	and    ah,0xac
  4227e4:	dec    edi
  4227e5:	jb     0x4227f7
  4227e7:	aam    0xfc
  4227e9:	sub    eax,0x9686c78e
  4227ee:	cmp    esp,DWORD PTR [ebx+0x386a24f]
  4227f4:	js     0x4227ce
  4227f6:	pop    esp
  4227f7:	or     bh,BYTE PTR [eax]
  4227f9:	adc    edx,ecx
  4227fb:	in     al,dx
  4227fc:	cmp    bl,dl
  4227fe:	or     eax,ecx
  422800:	sub    DWORD PTR [esi],ebp
  422802:	fldcw  WORD PTR [eax+0x23f8414e]
  422808:	shr    DWORD PTR [ebx],1
  42280a:	scas   al,BYTE PTR es:[edi]
  42280b:	dec    ebx
  42280c:	or     ebp,edi
  42280e:	add    cl,BYTE PTR [ecx-0x7e]
  422811:	(bad)  
  422812:	int    0x28
  422814:	retf   0x5c03
  422817:	dec    esp
  422818:	sbb    bh,cl
  42281a:	cmp    al,0x29
  42281c:	inc    edx
  42281d:	lods   eax,DWORD PTR ds:[esi]
  42281e:	iret   
  42281f:	cld    
  422820:	mov    al,ds:0xfa888622
  422825:	adc    esi,eax
  422827:	cld    
  422828:	and    cl,BYTE PTR [edi+eax*4-0x38]
  42282c:	aas    
  42282d:	in     al,dx
  42282e:	in     al,0x11
  422830:	in     al,dx
  422831:	fnstsw WORD PTR [ecx-0x35766844]
  422837:	mov    eax,0xca6416b0
  42283c:	jecxz  0x42284e
  42283e:	jg     0x42283b
  422840:	fcomp  QWORD PTR [eax]
  422842:	jns    0x42286d
  422844:	call   0x4342:0x18d3f513
  42284b:	in     eax,dx
  42284c:	sbb    eax,DWORD PTR [eax+0x2c9a8a7b]
  422852:	rcl    DWORD PTR [edx+0x5f],0xfe
  422856:	jae    0x422801
  422858:	stos   DWORD PTR es:[edi],eax
  422859:	int    0xd1
  42285b:	adc    DWORD PTR [ebp+0xd],esp
  42285e:	mov    cl,0x31
  422860:	push   0xffffffbb
  422862:	leave  
  422863:	les    edi,FWORD PTR [edx]
  422865:	jle    0x42289e
  422867:	out    dx,al
  422868:	cmp    eax,ebp
  42286a:	jae    0x422849
  42286c:	ds push cs
  42286e:	mov    dl,BYTE PTR [ebx]
  422870:	leave  
  422871:	mov    edx,0x8ba2166
  422876:	inc    ebp
  422877:	inc    ebx
  422878:	xchg   edx,eax
  422879:	push   ss
  42287a:	mov    edx,0xba7bf1dc
  42287f:	inc    ebp
  422880:	es adc al,cl
  422883:	stos   DWORD PTR es:[edi],eax
  422884:	js     0x422815
  422886:	mov    bh,0x36
  422888:	pop    ebp
  422889:	outs   dx,BYTE PTR ds:[esi]
  42288a:	xchg   ecx,eax
  42288b:	push   ebp
  42288c:	mov    ecx,0x55ce86bf
  422891:	jae    0x422875
  422893:	imul   esi,edx,0x37f3bad8
  422899:	(bad)  
  42289a:	and    eax,0x9454e700
  42289f:	popf   
  4228a0:	test   eax,0x2c7616b2
  4228a5:	in     eax,0xcd
  4228a7:	cdq    
  4228a8:	mov    ?,WORD PTR [edx]
  4228aa:	mov    DWORD PTR ss:[esi+eax*2+0x3dfa1e1b],edx
  4228b2:	mov    esi,ebx
  4228b4:	(bad)  
  4228b5:	xchg   esp,eax
  4228b6:	mov    dh,0x7b
  4228b8:	adc    dh,BYTE PTR [esi]
  4228ba:	pusha  
  4228bb:	or     eax,0xd8cea9c2
  4228c0:	jecxz  0x422935
  4228c2:	push   ds
  4228c3:	loope  0x42291f
  4228c5:	inc    ecx
  4228c6:	mov    dh,0xa4
  4228c8:	bound  esi,QWORD PTR [esi]
  4228ca:	pop    ecx
  4228cb:	sbb    DWORD PTR [ecx],eax
  4228cd:	jl     0x422872
  4228cf:	lea    esp,[edx+eiz*1+0x732138c1]
  4228d6:	jne    0x4228a9
  4228d8:	sar    BYTE PTR [ebp+0x7a],1
  4228db:	mov    al,0xce
  4228dd:	lds    esi,FWORD PTR [ebp+0x56]
  4228e0:	inc    esp
  4228e1:	pop    edi
  4228e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e3:	mov    ch,0x30
  4228e5:	mov    ebx,0x16a0ea73
  4228ea:	xchg   ebx,eax
  4228eb:	pop    ebx
  4228ec:	mov    bl,0x7
  4228ee:	sti    
  4228ef:	cld    
  4228f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228f1:	stos   DWORD PTR es:[edi],eax
  4228f2:	mov    dh,0x7e
  4228f4:	leave  
  4228f5:	xor    DWORD PTR [ebx],0x228b0687
  4228fb:	shl    ch,1
  4228fd:	jbe    0x422932
  4228ff:	mov    dh,0xe5
  422901:	sahf   
  422902:	in     eax,0xa6
  422904:	loopne 0x422946
  422906:	sub    ch,BYTE PTR [ebx+0x14]
  422909:	mov    ah,0x6d
  42290b:	gs jne 0x42296f
  42290e:	and    DWORD PTR [edx],esi
  422910:	mov    ds:0xb0bbcb80,eax
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
