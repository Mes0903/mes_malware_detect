
4383c018c1905acf1cca45aa29122d47e1921df1138d7e2810e82b5467af478b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	adc    al,ah
  4025ed:	inc    eax
  4025ee:	xor    DWORD PTR [esp+edi*2+0x7c],edi
  4025f2:	jl     0x4025c7
  4025f4:	pop    edi
  4025f5:	jl     0x402673
  4025f7:	adc    eax,0x1139172e
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	arpl   WORD PTR [ebx+0x6c],di
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi-0x66e5bb0e]
  40269c:	xchg   edi,eax
  40269d:	popf   
  40269e:	sbb    al,0xff
  4026a0:	ja     0x4026f0
  4026a2:	adc    eax,0x36cadc22
  4026a7:	div    ebp
  4026a9:	jmp    DWORD PTR [esi-0x17113072]
  4026af:	adc    al,0xd4
  4026b1:	in     al,0x2a
  4026b3:	fldenv [eax+0x51]
  4026b6:	dec    ebx
  4026b7:	pusha  
  4026b8:	dec    edx
  4026b9:	outs   dx,BYTE PTR ds:[esi]
  4026ba:	or     DWORD PTR [ebx],esi
  4026bc:	jns    0x402734
  4026be:	loopne 0x4026c4
  4026c0:	mov    ah,0xf8
  4026c2:	outs   dx,DWORD PTR ds:[esi]
  4026c3:	int3   
  4026c4:	inc    ecx
  4026c5:	in     al,0xd7
  4026c7:	pop    edi
  4026c8:	lock das 
  4026ca:	xchg   esi,eax
  4026cb:	call   0x2f10:0x90497af9
  4026d2:	dec    ebx
  4026d3:	pop    ebp
  4026d4:	jns    0x40268f
  4026d6:	jne    0x40270c
  4026d8:	jl     0x402694
  4026da:	mov    bl,0x11
  4026dc:	adc    al,0xce
  4026de:	and    dh,BYTE PTR [eax-0x7c]
  4026e1:	jb     0x4026e8
  4026e3:	mov    ds:0xd7936a3d,eax
  4026e8:	call   0x55d9:0xaa040c88
  4026ef:	mov    ebp,0x1abb621f
  4026f4:	xor    cl,BYTE PTR [esi-0x414b1387]
  4026fa:	fwait
  4026fb:	rol    ch,0x6d
  4026fe:	mov    al,ds:0x303540e2
  402703:	sar    DWORD PTR [ebx+0x3],0xb4
  402707:	mov    ah,0xbc
  402709:	push   edi
  40270a:	mov    esi,0x71df2cc9
  40270f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402710:	mov    ch,0x89
  402712:	adc    DWORD PTR [ecx-0xefd5b38],0x9d1b1ad5
  40271c:	ret    
  40271d:	pop    ds
  40271e:	ret    
  40271f:	loop   0x402701
  402721:	mov    ah,0x83
  402723:	out    dx,eax
  402724:	push   edx
  402725:	adc    edx,eax
  402727:	or     DWORD PTR [edx+0x72],ebp
  40272a:	cmp    eax,0xa82fe871
  40272f:	dec    BYTE PTR [ecx-0x6653a50a]
  402735:	jp     0x4026e7
  402737:	xor    bl,BYTE PTR ss:[edi]
  40273a:	sbb    al,0x9
  40273c:	fcomp  QWORD PTR [edx+0x41f59bde]
  402742:	add    esp,ebp
  402744:	in     eax,dx
  402745:	gs pop es
  402747:	aad    0xf3
  402749:	mov    edi,0x99a87e5d
  40274e:	push   esp
  40274f:	pop    eax
  402750:	and    ch,al
  402752:	repnz test eax,0x1459cade
  402758:	fwait
  402759:	dec    esi
  40275a:	jmp    0x402771
  40275c:	fwait
  40275d:	mov    edx,ebp
  40275f:	push   eax
  402760:	in     al,0xda
  402762:	and    cl,BYTE PTR [edx-0x40]
  402765:	fndisi(8087 only) 
  402767:	dec    edi
  402768:	retf   
  402769:	cs and eax,0x2177663
  40276f:	inc    eax
  402770:	imul   ebp,edx,0xfffffff5
  402773:	test   DWORD PTR [esi-0x76],ecx
  402776:	mov    ds:0x501a4ce5,al
  40277b:	in     eax,dx
  40277c:	xor    BYTE PTR [esi],al
  40277e:	jle    0x402792
  402780:	or     eax,0x9796cb4a
  402785:	mov    WORD PTR [esi],ss
  402787:	pop    es
  402788:	mov    esp,0xbbd295a
  40278d:	cwde   
  40278e:	test   BYTE PTR [edi],dl
  402790:	pop    ebx
  402791:	jbe    0x4027f1
  402793:	inc    esi
  402794:	mov    ecx,0xb804ac3f
  402799:	rcl    ah,0x97
  40279c:	stos   DWORD PTR es:[edi],eax
  40279d:	adc    DWORD PTR [ebx-0x54c6a7af],0x39efa305
  4027a7:	pop    edi
  4027a8:	cdq    
  4027a9:	pop    es
  4027aa:	xor    al,0xea
  4027ac:	dec    eax
  4027ad:	sub    ch,BYTE PTR [edi]
  4027af:	leave  
  4027b0:	mov    ch,0xbd
  4027b2:	scas   eax,DWORD PTR es:[edi]
  4027b3:	cli    
  4027b4:	shl    BYTE PTR [ebx],cl
  4027b6:	cmp    BYTE PTR [edi],dl
  4027b8:	call   0x31eccbc0
  4027bd:	jb     0x402797
  4027bf:	pop    ebp
  4027c0:	adc    al,0x93
  4027c2:	scas   eax,DWORD PTR es:[edi]
  4027c3:	lds    ecx,FWORD PTR [edx-0x1065c8c]
  4027c9:	mov    edx,0xe764e369
  4027ce:	(bad)  
  4027d0:	mov    ebp,0x1b2faeff
  4027d5:	mov    bl,0x31
  4027d7:	cli    
  4027d8:	mov    ecx,0xc8bf9af7
  4027dd:	xchg   ebp,eax
  4027de:	lahf   
  4027df:	jle    0x4027a4
  4027e1:	lea    edx,[edx+0x53]
  4027e4:	cmp    ch,dl
  4027e6:	int3   
  4027e7:	jno    0x402810
  4027e9:	or     BYTE PTR ds:0xcc16245a,ch
  4027ef:	inc    esi
  4027f0:	test   DWORD PTR ds:0x1386510a,esp
  4027f6:	sub    BYTE PTR [ebp-0x69],bh
  4027f9:	jecxz  0x4027fd
  4027fb:	jp     0x4027e3
  4027fd:	gs inc esp
  4027ff:	and    al,0x56
  402801:	loop   0x4027d9
  402803:	and    BYTE PTR [eax+ebp*2],bh
  402806:	aaa    
  402807:	and    DWORD PTR [ebx],eax
  402809:	jl     0x40278d
  40280b:	jbe    0x402828
  40280d:	out    dx,eax
  40280e:	xchg   ebp,eax
  40280f:	adc    al,0xa8
  402811:	outs   dx,BYTE PTR ds:[esi]
  402812:	xchg   BYTE PTR [edx+0x14],bh
  402815:	outs   dx,BYTE PTR ds:[esi]
  402816:	mov    ebx,0xe0c4d33d
  40281b:	lock fcomp QWORD PTR [eax+esi*1+0x68]
  402820:	jg     0x4027f4
  402822:	adc    eax,0x8570792b
  402827:	rcl    DWORD PTR [esi-0x2d683730],0xe3
  40282e:	push   edi
  40282f:	push   es
  402830:	xchg   edx,eax
  402831:	leave  
  402832:	adc    al,0x7e
  402834:	cmp    ebx,esp
  402836:	and    DWORD PTR [ebp-0x2963be98],0x70
  40283d:	sub    DWORD PTR [eax+0x2d],ebp
  402840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402841:	dec    ebx
  402842:	cli    
  402843:	jns    0x4027d7
  402845:	das    
  402846:	mov    al,ds:0x241df226
  40284b:	sahf   
  40284c:	call   0xe676:0xc7245d9e
  402853:	add    BYTE PTR [ecx],0x81
  402856:	(bad)  
  402857:	xlat   BYTE PTR ds:[ebx]
  402858:	ror    dl,0x39
  40285b:	call   0x133c:0xae80
  402861:	std    
  402862:	mov    ebx,esi
  402864:	dec    ecx
  402865:	jae    0x4028ae
  402867:	call   0xcbfa:0x76bd22be
  40286e:	sbb    al,0x87
  402870:	(bad)
  402873:	addr16 jge 0x40288d
  402876:	add    eax,0x17441fff
  40287b:	lds    eax,FWORD PTR [esi-0x1b]
  40287e:	jb     0x40280d
  402880:	and    DWORD PTR ds:0x653dfe8c,esi
  402886:	pop    ss
  402887:	sub    BYTE PTR [ebp+0xfdea4ca],bh
  40288d:	inc    ecx
  40288e:	xlat   BYTE PTR ds:[ebx]
  40288f:	out    0x7d,al
  402891:	in     al,0xd8
  402893:	std    
  402894:	cmp    BYTE PTR [ebx-0x56657169],bl
  40289a:	dec    edi
  40289b:	add    al,0x5c
  40289d:	in     al,0xd0
  40289f:	jmp    0x9ac89d7c
  4028a4:	scas   al,BYTE PTR es:[edi]
  4028a5:	ror    DWORD PTR [ebp-0xd],1
  4028a8:	inc    edi
  4028a9:	mov    es,WORD PTR [ebp+0x697803cb]
  4028af:	pushf  
  4028b0:	inc    ebx
  4028b1:	les    eax,FWORD PTR [edx]
  4028b3:	or     DWORD PTR [ecx],esi
  4028b5:	and    BYTE PTR [edx-0x7348d1e2],dh
  4028bb:	scas   al,BYTE PTR es:[edi]
  4028bc:	mov    bh,dh
  4028be:	stos   DWORD PTR es:[edi],eax
  4028bf:	out    dx,eax
  4028c0:	xchg   ebx,eax
  4028c1:	lock mov edi,DWORD PTR [ebx]
  4028c4:	ins    DWORD PTR es:[edi],dx
  4028c5:	sbb    ebx,esi
  4028c7:	add    esi,DWORD PTR [ecx-0xb]
  4028ca:	dec    ecx
  4028cb:	daa    
  4028cc:	fisttp DWORD PTR [ebx]
  4028ce:	cmp    eax,0x96132864
  4028d3:	add    al,0x78
  4028d5:	push   edi
  4028d6:	dec    ecx
  4028d7:	sub    al,0x82
  4028d9:	cmp    eax,0xed4ca02c
  4028de:	addr16 pop ebx
  4028e0:	inc    ebx
  4028e1:	add    DWORD PTR [edx-0x219b2d0c],esi
  4028e7:	push   ss
  4028e8:	xchg   ecx,eax
  4028e9:	call   0xdde1:0x87bae22b
  4028f0:	xchg   ecx,eax
  4028f1:	cli    
  4028f2:	imul   edi,DWORD PTR [edx+0x76f478e],0x79
  4028f9:	sbb    DWORD PTR [ebx+edx*8+0x53],0xfffffff4
  4028fe:	mov    edi,0xc9535839
  402903:	mov    ecx,0x242a3c16
  402908:	js     0x4028b7
  40290a:	dec    ecx
  40290b:	mov    edi,DWORD PTR [esi]
  40290d:	repz or ebx,esp
  402910:	pop    ss
  402911:	xchg   esp,eax
  402912:	out    0x10,al
  402914:	inc    edx
  402915:	sub    ch,BYTE PTR [esp+ebp*8+0x65eafd6d]
  40291c:	xor    al,0x9e
  40291e:	fs jae 0x40299d
  402921:	pop    es
  402922:	rcr    DWORD PTR [edi],1
  402924:	or     eax,ebx
  402926:	mov    ebx,0xc6d92835
  40292b:	ss in  al,dx
  40292d:	mov    al,0xd7
  40292f:	inc    ebx
  402930:	mov    esp,0x91abcdb4
  402935:	jmp    0x4028e6
  402937:	cmp    eax,0x99a1eabd
  40293c:	xchg   DWORD PTR cs:[esi],edx
  40293f:	cmp    al,0xdf
  402941:	mov    eax,ds:0xc1691352
  402946:	sub    eax,0x9827a326
  40294b:	jae    0x4028e8
  40294d:	fbstp  TBYTE PTR [ecx]
  40294f:	aam    0xe6
  402951:	pop    ecx
  402952:	mov    ds:0x4023b115,eax
  402957:	mov    DWORD PTR [ebx],ecx
  402959:	push   cs
  40295a:	xchg   ecx,eax
  40295b:	popf   
  40295c:	cmp    DWORD PTR [esi*4-0x6a63d83f],0xfffffff7
  402964:	ficom  DWORD PTR [eax-0x16e8e300]
  40296a:	nop
  40296b:	cs stc 
  40296d:	retf   
  40296e:	(bad)  
  40296f:	mov    dl,0x7e
  402971:	sbb    ah,ah
  402973:	inc    eax
  402974:	mov    bl,0x25
  402976:	jmp    0x40290e
  402978:	pop    ecx
  402979:	pop    ds
  40297a:	mul    edx
  40297c:	cwde   
  40297d:	aas    
  40297e:	push   0xffffffc5
  402980:	adc    edi,edi
  402982:	leave  
  402983:	(bad)  
  402984:	fptan  
  402986:	add    DWORD PTR [ecx],ebp
  402988:	cld    
  402989:	lods   al,BYTE PTR ds:[esi]
  40298a:	repnz mov es:0x780ec99,al
  402991:	push   esp
  402992:	xchg   esp,eax
  402993:	jo     0x402917
  402995:	fwait
  402996:	jle    0x40298a
  402998:	inc    ebx
  402999:	inc    edx
  40299a:	mov    ds:0x829b3cc4,eax
  40299f:	(bad)  
  4029a0:	mov    edi,0x586659a3
  4029a5:	push   0x531d2872
  4029aa:	in     al,dx
  4029ab:	es in  eax,dx
  4029ad:	mov    al,ds:0x301fb97
  4029b2:	pop    edi
  4029b3:	iret   
  4029b4:	push   0x8b9bd57b
  4029b9:	scas   al,BYTE PTR es:[edi]
  4029ba:	pop    ds
  4029bb:	xchg   ebp,eax
  4029bc:	nop
  4029bd:	(bad)  
  4029be:	call   0xc3386168
  4029c3:	inc    esp
  4029c4:	mov    eax,ebp
  4029c6:	jb     0x4029fa
  4029c8:	adc    DWORD PTR [ebp+ecx*4-0x3],ebp
  4029cc:	icebp  
  4029cd:	push   edx
  4029ce:	pop    ecx
  4029cf:	imul   ecx,DWORD PTR [ebp-0x3],0xec7dd44c
  4029d6:	mov    al,ds:0x5c7065f3
  4029db:	mov    edx,DWORD PTR ds:0xb365480d
  4029e1:	sub    eax,0x389e688
  4029e6:	mov    dh,0xc7
  4029e8:	std    
  4029e9:	mov    edi,0x6de9dae1
  4029ee:	push   ebp
  4029ef:	mov    bh,0x51
  4029f1:	adc    DWORD PTR [edx],0xffffffa2
  4029f4:	adc    ah,BYTE PTR [edi-0x7c]
  4029f7:	xor    ch,bl
  4029f9:	add    DWORD PTR [ebp-0x7a723f8d],esi
  4029ff:	pop    ecx
  402a00:	sub    DWORD PTR [eax],esp
  402a02:	hlt    
  402a03:	js     0x4029df
  402a05:	arpl   dx,bx
  402a07:	lods   eax,DWORD PTR ds:[esi]
  402a08:	push   0xd96c696b
  402a0d:	push   es
  402a0e:	inc    edi
  402a0f:	adc    DWORD PTR [edx+0x55ea71ad],ebx
  402a15:	sti    
  402a16:	pop    ss
  402a17:	int3   
  402a18:	std    
  402a19:	cmp    al,0x15
  402a1b:	fldl2t 
  402a1d:	ds shl ah,1
  402a20:	repnz inc eax
  402a22:	test   dl,0x7
  402a25:	cmp    BYTE PTR [edx-0x50],ch
  402a28:	pusha  
  402a29:	lods   eax,DWORD PTR ds:[esi]
  402a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a2b:	inc    BYTE PTR [ecx-0x5d]
  402a2e:	lods   al,BYTE PTR ds:[esi]
  402a2f:	or     eax,0x497f8730
  402a34:	jbe    0x402a48
  402a36:	or     edx,ebx
  402a38:	mov    ds,WORD PTR [edi+0x7747dd86]
  402a3e:	sub    DWORD PTR [esi+0x60185a5f],0xe3599da8
  402a48:	aad    0x9
  402a4a:	aas    
  402a4b:	inc    edi
  402a4c:	ins    DWORD PTR es:[edi],dx
  402a4d:	or     cl,BYTE PTR [edi+0x30a2edd8]
  402a53:	rol    DWORD PTR [ebp+0x2],cl
  402a56:	inc    edi
  402a57:	iret   
  402a58:	add    ch,bh
  402a5a:	call   0xd029:0x59d32936
  402a61:	fisub  WORD PTR [eax]
  402a63:	push   eax
  402a64:	jecxz  0x402a8c
  402a66:	xchg   ebx,eax
  402a67:	shl    BYTE PTR [esi+0x5d47f229],cl
  402a6d:	rcr    bl,0x4c
  402a70:	jp     0x402aea
  402a72:	adc    edx,eax
  402a74:	xor    eax,0x7c482532
  402a79:	adc    al,bh
  402a7b:	jno    0x4029fe
  402a7d:	cwde   
  402a7e:	xor    DWORD PTR [edx+0x11713910],eax
  402a84:	fist   WORD PTR [esi]
  402a86:	loop   0x402aac
  402a88:	mov    ecx,0xdc7cbb38
  402a8d:	cmp    BYTE PTR [eax],dl
  402a8f:	lds    ebx,FWORD PTR [eax-0x2c777c60]
  402a95:	xor    al,0xc3
  402a97:	sti    
  402a98:	clc    
  402a99:	and    BYTE PTR [ecx],dh
  402a9b:	mov    eax,ds:0xb33a2bbc
  402aa0:	inc    ebx
  402aa1:	mov    ds:0xe5c59418,eax
  402aa6:	ins    BYTE PTR es:[edi],dx
  402aa7:	test   WORD PTR [esi],dx
  402aaa:	pop    esi
  402aab:	(bad)  
  402aac:	addr16 mov esi,0xd8bc9e15
  402ab2:	imul   DWORD PTR [edi-0x61758dbb]
  402ab8:	ret    
  402ab9:	js     0x402ad2
  402abb:	jo     0x402af1
  402abd:	jle    0x402a6f
  402abf:	(bad)  
  402ac0:	js     0x402ab0
  402ac2:	ins    BYTE PTR es:[edi],dx
  402ac3:	mov    bl,0x1c
  402ac5:	or     BYTE PTR [edi-0x264c387],ch
  402acb:	inc    edx
  402acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402acd:	jae    0x402ad4
  402acf:	call   0x2b73:0x3954de56
  402ad6:	(bad)
  402ad9:	jb     0x402b06
  402adb:	jecxz  0x402aaf
  402add:	ja     0x402a91
  402adf:	push   ecx
  402ae0:	pop    edx
  402ae1:	pop    ds
  402ae2:	(bad)  
  402ae3:	jg     0x402a80
  402ae5:	lea    edx,[edx-0x42]
  402ae8:	sbb    eax,0x7239229d
  402aed:	iret   
  402aee:	pop    edx
  402aef:	cld    
  402af0:	lea    edx,[eax-0x16a49b39]
  402af6:	(bad)  
  402af7:	and    ebp,DWORD PTR [eax+0x32b088cb]
  402afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402afe:	aas    
  402aff:	(bad)  
  402b00:	jg     0x402b2c
  402b02:	fwait
  402b03:	call   FWORD PTR [edi-0x4d]
  402b06:	mov    bh,0xc
  402b08:	xlat   BYTE PTR ds:[ebx]
  402b09:	xor    DWORD PTR [eax],0x74
  402b0c:	push   0x67cac201
  402b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b12:	and    al,0xc7
  402b14:	add    DWORD PTR [edx+edx*4+0x696a56a7],eax
  402b1b:	call   0x92e18863
  402b20:	aas    
  402b21:	mov    esp,0xd459cdde
  402b26:	rcr    bl,0x56
  402b29:	inc    ebp
  402b2a:	xchg   edi,eax
  402b2b:	adc    DWORD PTR [eax+edi*8-0x1728a74e],ebp
  402b32:	inc    eax
  402b33:	iret   
  402b34:	push   edi
  402b35:	pop    ebp
  402b36:	or     eax,0x9bdab710
  402b3b:	mov    fs,WORD PTR [edi]
  402b3d:	lds    ecx,FWORD PTR ds:0xdcefc48e
  402b43:	(bad)
  402b46:	rol    DWORD PTR [edi-0x65aac422],cl
  402b4c:	pop    ebx
  402b4d:	mul    dh
  402b4f:	or     al,0x60
  402b51:	jb     0x402b6d
  402b53:	add    edx,0xc0f49ebb
  402b59:	(bad)  
  402b5a:	cmp    cl,BYTE PTR [edi+edi*8+0x1]
  402b5e:	pop    es
  402b5f:	imul   ebx,DWORD PTR es:[ebp-0x3c90e199],0x61
  402b67:	xor    ch,BYTE PTR [esi-0x20]
  402b6a:	fisubr WORD PTR [edx+0x73dc4085]
  402b70:	aas    
  402b71:	push   esp
  402b72:	adc    BYTE PTR [ecx+0x35],dh
  402b75:	sub    esi,DWORD PTR [ebp-0x40]
  402b78:	loopne 0x402ba4
  402b7a:	in     al,0x54
  402b7c:	mov    ds:0x67ae0890,al
  402b81:	ins    DWORD PTR es:[edi],dx
  402b82:	xchg   ebx,eax
  402b83:	inc    edx
  402b84:	test   BYTE PTR [ecx+0x1],dl
  402b87:	sub    al,0x54
  402b89:	jne    0x402b84
  402b8b:	fs pop ecx
  402b8d:	xchg   esi,eax
  402b8e:	pop    es
  402b8f:	cmp    al,0x2a
  402b91:	mov    bl,0xb5
  402b93:	cwde   
  402b94:	aaa    
  402b95:	jge    0x402bdf
  402b97:	mov    al,0x1
  402b99:	cli    
  402b9a:	hlt    
  402b9b:	shr    BYTE PTR [edx+0x3],1
  402b9e:	jae    0x402ba6
  402ba0:	lea    ebp,[edx-0x45]
  402ba3:	sub    BYTE PTR [edx],bh
  402ba5:	or     ebx,DWORD PTR ds:0x700be335
  402bab:	sub    edi,DWORD PTR [ebx+0x33]
  402bae:	pop    esp
  402baf:	aad    0x51
  402bb1:	cmp    al,0xa9
  402bb3:	mov    ds:0xe6ac475f,eax
  402bb8:	push   edi
  402bb9:	adc    esi,DWORD PTR [esi-0x2a7bc542]
  402bbf:	hlt    
  402bc0:	mov    DWORD PTR [edx],ebp
  402bc2:	stos   DWORD PTR es:[edi],eax
  402bc3:	sar    cl,1
  402bc5:	mov    ebp,0xc9fb7e3c
  402bca:	mov    al,ds:0xe8e16317
  402bcf:	cmc    
  402bd0:	imul   esp,edi,0xfffffff0
  402bd3:	or     BYTE PTR [ebp+0x1c257907],0xa5
  402bda:	sbb    al,0x4
  402bdc:	push   es
  402bdd:	gs sti 
  402bdf:	fadd   DWORD PTR [ebx]
  402be1:	imul   edx,DWORD PTR [ecx+eiz*8],0xffffffe8
  402be5:	mov    ch,0x37
  402be7:	push   esi
  402be8:	mov    DWORD PTR [edx],esp
  402bea:	loope  0x402c06
  402bec:	popa   
  402bed:	jecxz  0x402bc2
  402bef:	cmp    dh,BYTE PTR ds:[edx-0x22e4cb46]
  402bf6:	fxch   st(4)
  402bf8:	mov    ds:0x4597793b,eax
  402bfd:	call   0x8fdaaa04
  402c02:	cmp    ebp,ebx
  402c04:	jp     0x402c27
  402c06:	int    0x1d
  402c08:	sbb    al,0x80
  402c0a:	mov    gs,WORD PTR [ebx+0x66404def]
  402c10:	je     0x402c45
  402c12:	sbb    bh,BYTE PTR [ecx+0x828c7b6]
  402c18:	mov    esi,0xc7740175
  402c1d:	xchg   esp,eax
  402c1e:	cs cmp al,0x38
  402c21:	inc    edi
  402c22:	xchg   edx,eax
  402c23:	dec    cl
  402c25:	ja     0x402bcd
  402c27:	addr16 loopne 0x402c10
  402c2a:	sbb    eax,0xf4c9d1ee
  402c2f:	push   eax
  402c30:	mov    eax,ds:0xc162f62b
  402c35:	jmp    0xc2e5d820
  402c3a:	popfw  
  402c3c:	mov    al,0xfc
  402c3e:	xor    ebp,DWORD PTR [eax]
  402c40:	data16 test al,0xc1
  402c43:	aas    
  402c44:	mov    gs,WORD PTR [edi]
  402c46:	mov    ecx,ebp
  402c48:	push   eax
  402c49:	jbe    0x402c51
  402c4b:	addr16 pop esi
  402c4d:	imul   esp,DWORD PTR [eax],0x151fdb4b
  402c53:	pop    ds
  402c54:	sub    ecx,DWORD PTR [esp+ebx*1]
  402c57:	pop    es
  402c58:	pop    ds
  402c59:	retf   
  402c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c5b:	pop    ebp
  402c5c:	pop    ebp
  402c5d:	dec    eax
  402c5e:	js     0x402c97
  402c60:	(bad)  
  402c61:	pop    esp
  402c62:	cmp    DWORD PTR [eax],esp
  402c64:	push   esp
  402c65:	loope  0x402c63
  402c67:	icebp  
  402c68:	inc    BYTE PTR ds:0x932a0399
  402c6e:	sub    al,0xd
  402c70:	fisttp QWORD PTR [ecx]
  402c72:	sub    dl,BYTE PTR [ebx-0x2a]
  402c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c76:	xor    eax,0xdb8fde67
  402c7b:	sbb    dh,dh
  402c7d:	jne    0x402ce6
  402c7f:	imul   BYTE PTR [edx+ecx*2-0x3]
  402c83:	mov    bh,0x50
  402c85:	popa   
  402c86:	jae    0x402c5b
  402c88:	mov    edi,0x1b45d912
  402c8d:	nop
  402c8e:	mov    eax,ds:0x737a61cb
  402c93:	cmp    DWORD PTR [ecx+edi*8],0x1b
  402c97:	jmp    0xb8b51d51
  402c9c:	loop   0x402c9a
  402c9e:	or     eax,0x623c9e63
  402ca3:	xor    esp,DWORD PTR [ebx-0x4d]
  402ca6:	aam    0x1c
  402ca8:	mov    ds:0x4838cca5,al
  402cad:	test   eax,0xc2a7a3fd
  402cb2:	sbb    bl,bh
  402cb4:	(bad)  
  402cb5:	jo     0x402c6e
  402cb7:	or     eax,0xca5f2655
  402cbc:	neg    DWORD PTR [edi]
  402cbe:	pop    ebx
  402cbf:	dec    ebp
  402cc0:	adc    al,0x8a
  402cc2:	clc    
  402cc3:	cdq    
  402cc4:	and    eax,0xbde1c00
  402cc9:	pushf  
  402cca:	loop   0x402d25
  402ccc:	sbb    DWORD PTR [edx+ebx*8+0x1fd848d],eax
  402cd3:	pop    ds
  402cd4:	test   BYTE PTR [esi+0x6ed3192e],al
  402cda:	add    DWORD PTR [ebx+0x501c8848],ebp
  402ce0:	imul   esi,DWORD PTR [esi+0x54],0xd824ec96
  402ce7:	adc    eax,0x96ae3f38
  402cec:	push   edi
  402ced:	push   ecx
  402cee:	mov    edx,fs
  402cf0:	hlt    
  402cf1:	and    BYTE PTR [edx-0x6b],0x26
  402cf5:	sub    eax,0xb6e884d1
  402cfa:	push   edx
  402cfb:	cmp    BYTE PTR [ebp+0x25],0xa7
  402cff:	idiv   DWORD PTR [ebp+0x438b28cf]
  402d05:	test   al,0xdb
  402d07:	pop    ebp
  402d08:	push   es
  402d09:	inc    edi
  402d0a:	inc    edx
  402d0b:	xchg   ebx,eax
  402d0c:	(bad)  
  402d0d:	fwait
  402d0e:	jmp    0x8717dc5e
  402d13:	xor    eax,0x47fab24e
  402d18:	std    
  402d19:	shr    DWORD PTR fs:[esi-0x4],0xfd
  402d1e:	xor    esp,edx
  402d20:	jmp    0x36e5:0xcbc433fc
  402d27:	imul   eax,DWORD PTR [edx+0x59],0x25327120
  402d2e:	mov    ds:0xb39b59c3,eax
  402d33:	pop    esi
  402d34:	je     0x402d5b
  402d36:	jnp    0x402d7f
  402d38:	dec    ebp
  402d39:	es cmp eax,0x54fe1daa
  402d3f:	int3   
  402d40:	(bad)  
  402d42:	dec    ebp
  402d43:	adc    DWORD PTR gs:[eax+0x4],0x7b
  402d48:	or     ebx,DWORD PTR [ebp+0x6c]
  402d4b:	pushf  
  402d4c:	sub    ebx,DWORD PTR [ebx+esi*4]
  402d4f:	fisttp WORD PTR [ebx]
  402d51:	in     eax,dx
  402d52:	scas   al,BYTE PTR es:[edi]
  402d53:	arpl   WORD PTR [ebp-0x23],si
  402d56:	sbb    eax,0xba668e98
  402d5b:	out    0xf9,al
  402d5d:	stos   BYTE PTR es:[edi],al
  402d5e:	push   eax
  402d5f:	dec    ecx
  402d60:	retf   
  402d61:	test   al,0xf0
  402d63:	cmc    
  402d64:	out    0xef,eax
  402d66:	push   ss
  402d67:	dec    ebx
  402d68:	xor    BYTE PTR [eax+esi*1],bl
  402d6b:	out    dx,al
  402d6c:	inc    ecx
  402d6d:	cwde   
  402d6e:	enter  0xe507,0x7a
  402d72:	inc    ecx
  402d73:	push   0xffffffad
  402d75:	adc    eax,0xca5d896c
  402d7a:	or     al,0x94
  402d7c:	mov    DWORD PTR [eax],esp
  402d7e:	ret    
  402d7f:	pop    eax
  402d80:	or     dl,BYTE PTR [esi-0x466fc102]
  402d86:	dec    edx
  402d87:	inc    edi
  402d88:	dec    esp
  402d89:	adc    ecx,DWORD PTR [eax+edx*2]
  402d8c:	xor    al,0x60
  402d8e:	xchg   esi,eax
  402d8f:	test   BYTE PTR [ebx-0x2],ch
  402d92:	pop    ebx
  402d93:	jecxz  0x402dca
  402d95:	int3   
  402d96:	mov    ebp,0x53ab10b
  402d9b:	stc    
  402d9c:	push   ds
  402d9d:	add    cl,BYTE PTR [edx+0x57]
  402da0:	cmp    DWORD PTR [edx-0x32ce05dc],ebx
  402da6:	mov    dh,BYTE PTR [eax+0x3cbc7db1]
  402dac:	sub    BYTE PTR [esi-0x50],0x74
  402db0:	jmp    FWORD PTR [eax]
  402db2:	sti    
  402db3:	pop    es
  402db4:	sub    al,BYTE PTR [eax-0x44]
  402db7:	xchg   ecx,eax
  402db8:	pusha  
  402db9:	test   bh,ch
  402dbb:	daa    
  402dbc:	dec    eax
  402dbd:	gs (bad) 
  402dc0:	pushf  
  402dc1:	add    esi,0x1b23f46b
  402dc7:	lods   al,BYTE PTR ds:[esi]
  402dc8:	test   ebx,0x1c94e21f
  402dce:	(bad)  
  402dd0:	and    BYTE PTR es:[eax+edx*4+0x247fd195],ah
  402dd8:	fs mov dh,0xcc
  402ddb:	add    eax,0x42a09bdc
  402de0:	in     eax,dx
  402de1:	xor    esp,esp
  402de3:	sbb    DWORD PTR [edi+0xf],eax
  402de6:	mov    edx,0xa5096ff9
  402deb:	and    bl,BYTE PTR [esi+eiz*4]
  402dee:	pop    ss
  402def:	inc    esi
  402df0:	and    BYTE PTR ds:[edx+0x43],bh
  402df4:	cli    
  402df5:	dec    ebx
  402df6:	xchg   ebp,eax
  402df7:	jle    0x402dc9
  402df9:	cmp    al,0xed
  402dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dfc:	mov    eax,0x933cb479
  402e01:	add    BYTE PTR [ecx+0x10c7f042],0x81
  402e08:	inc    eax
  402e09:	enter  0x5e5c,0x3f
  402e0d:	call   0xc217:0x2b2d5ecb
  402e14:	xor    ecx,esp
  402e16:	cmp    al,0x6
  402e18:	fwait
  402e19:	mov    dl,0xdd
  402e1b:	dec    ecx
  402e1c:	and    DWORD PTR [eax-0x60],esp
  402e1f:	add    al,0x78
  402e21:	dec    ebp
  402e22:	aad    0x7a
  402e24:	mov    ah,0x42
  402e26:	xchg   edi,eax
  402e27:	or     eax,0x71
  402e2a:	push   ds
  402e2b:	jmp    0xf99d:0x358a2c2f
  402e32:	mov    eax,ds:0xcb10ab5
  402e37:	ins    BYTE PTR es:[edi],dx
  402e38:	cmc    
  402e39:	scas   eax,DWORD PTR es:[edi]
  402e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e3b:	outs   dx,DWORD PTR ds:[esi]
  402e3c:	add    DWORD PTR [edi+0x72cb5613],esp
  402e42:	push   0x29
  402e44:	cmp    BYTE PTR [ebx],0x6
  402e47:	jbe    0x402eb0
  402e49:	rol    DWORD PTR [ebp+eax*8+0x17560ca3],1
  402e50:	push   cs
  402e51:	xacquire xchg BYTE PTR [ebp+0x126ef201],ch
  402e58:	mov    ds:0xb9eeaba9,al
  402e5d:	retf   
  402e5e:	jb     0x402e51
  402e60:	out    dx,al
  402e61:	dec    edx
  402e62:	test   DWORD PTR [edi-0x6a],ebx
  402e65:	fnstcw WORD PTR [ecx+0x7f885491]
  402e6b:	mov    dl,0x30
  402e6d:	jecxz  0x402ea3
  402e6f:	test   BYTE PTR [eax],ah
  402e71:	sub    ch,0xb1
  402e74:	cmp    ebx,esp
  402e76:	jle    0x402eb8
  402e78:	cmp    ch,bh
  402e7a:	pop    ss
  402e7b:	inc    esi
  402e7c:	stos   DWORD PTR es:[edi],eax
  402e7d:	sbb    cl,ah
  402e7f:	icebp  
  402e80:	jo     0x402e50
  402e82:	sub    al,0x98
  402e84:	arpl   sp,ax
  402e86:	lahf   
  402e87:	out    0xbc,eax
  402e89:	mov    dl,0x62
  402e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e8c:	mov    al,0xaa
  402e8e:	out    0x6,al
  402e90:	mov    esi,0xa7b54eee
  402e95:	mov    ebp,0xfb90d3cb
  402e9a:	pop    edx
  402e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e9c:	xchg   bp,ax
  402e9e:	sub    DWORD PTR [esi],edx
  402ea0:	(bad)  
  402ea1:	or     BYTE PTR [ecx],bl
  402ea3:	xchg   edi,eax
  402ea4:	sbb    al,0x86
  402ea6:	xchg   esi,eax
  402ea7:	(bad)  
  402ea8:	mov    bh,0x0
  402eaa:	push   ebx
  402eab:	shl    BYTE PTR [edx-0x4d722044],0x7c
  402eb2:	inc    ebp
  402eb3:	mov    bh,0xc6
  402eb5:	sub    DWORD PTR [eax],ebp
  402eb7:	scas   al,BYTE PTR es:[edi]
  402eb8:	lock add al,0x25
  402ebb:	ins    BYTE PTR es:[edi],dx
  402ebc:	mov    dh,0x96
  402ebe:	or     ebx,edx
  402ec0:	push   ebx
  402ec1:	mov    dh,0xb5
  402ec3:	mov    al,0xf3
  402ec5:	in     eax,0x1b
  402ec7:	outs   dx,BYTE PTR ds:[esi]
  402ec8:	imul   esp,ecx,0xe257916b
  402ece:	xor    BYTE PTR [esi+0x6b],bh
  402ed1:	retf   
  402ed2:	test   BYTE PTR [eax+eax*4+0x26d520d1],dh
  402ed9:	mov    cl,0xec
  402edb:	adc    edx,DWORD PTR [edx]
  402edd:	mov    ds:0x961f59b8,eax
  402ee2:	cld    
  402ee3:	add    BYTE PTR [ebx+0x12],ch
  402ee6:	cmp    ebp,eax
  402ee8:	mov    WORD PTR [esi+0x555ba2a2],ds
  402eee:	push   0x80b4e1c6
  402ef3:	sub    eax,0x943f1b56
  402ef8:	cdq    
  402ef9:	jecxz  0x402f4f
  402efb:	mov    esi,DWORD PTR [edi+0x44]
  402efe:	push   cs
  402eff:	mov    al,ds:0xcdd5a2d5
  402f04:	sbb    eax,0x271645b2
  402f09:	into   
  402f0a:	mov    eax,ds:0x6a90ec52
  402f0f:	lahf   
  402f10:	adc    eax,0x6efd1fdc
  402f15:	add    BYTE PTR [edx+0xd9728b6],cl
  402f1b:	sahf   
  402f1c:	pop    ss
  402f1d:	outs   dx,DWORD PTR ds:[esi]
  402f1e:	fild   QWORD PTR [ecx-0x53]
  402f21:	push   ss
  402f22:	xor    edx,DWORD PTR [ebp+0x6178c016]
  402f28:	dec    eax
  402f29:	mul    ecx
  402f2b:	les    esi,FWORD PTR [edi]
  402f2d:	imul   esi,DWORD PTR [ebx-0x7051bc7d],0xd8e3a05f
  402f37:	xor    bl,BYTE PTR [esi+0x5b0de10d]
  402f3d:	push   edx
  402f3e:	popf   
  402f3f:	xchg   ecx,eax
  402f40:	lods   eax,DWORD PTR ds:[esi]
  402f41:	ror    BYTE PTR [edx+ebx*8-0x500e4d1a],1
  402f48:	mov    BYTE PTR [ebx-0xa],ah
  402f4b:	or     ch,ah
  402f4d:	mov    edx,0x711c92f6
  402f52:	jecxz  0x402f4e
  402f54:	inc    DWORD PTR [edx-0x1b]
  402f57:	jns    0x402f54
  402f59:	xchg   ebx,eax
  402f5a:	clc    
  402f5b:	xor    DWORD PTR [edx+0x34],ebx
  402f5e:	call   0x3f11f514
  402f63:	out    dx,eax
  402f64:	bound  edi,QWORD PTR [ecx]
  402f66:	push   es
  402f67:	sbb    DWORD PTR [esi],esp
  402f69:	add    dh,dh
  402f6b:	out    dx,eax
  402f6c:	jge    0x402ef0
  402f6e:	fsubr  DWORD PTR [ebp-0x23]
  402f72:	mov    WORD PTR [ebp-0x2426826a],?
  402f78:	mov    al,ds:0xc4e92a6
  402f7d:	dec    ebp
  402f7e:	cli    
  402f7f:	jne    0x402f24
  402f81:	or     al,BYTE PTR [ebp+0x61a4e842]
  402f87:	dec    eax
  402f88:	mov    al,0xa8
  402f8a:	adc    DWORD PTR [esi+0x3e],esi
  402f8d:	mov    ebx,db3
  402f90:	or     BYTE PTR [ecx-0x51],bl
  402f93:	and    BYTE PTR [esi+edx*1],cl
  402f96:	scas   al,BYTE PTR es:[edi]
  402f97:	dec    eax
  402f98:	hlt    
  402f99:	push   esp
  402f9a:	mov    ebx,0x3a95f401
  402f9f:	jnp    0x402fe8
  402fa1:	pop    esp
  402fa2:	jecxz  0x402fc1
  402fa4:	or     al,0x59
  402fa6:	pop    esi
  402fa7:	mov    ds:0xa794bd2,eax
  402fac:	aaa    
  402fad:	(bad)  
  402fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402faf:	out    0x6f,al
  402fb1:	xchg   esp,eax
  402fb2:	mov    ecx,DWORD PTR [esi+0x6e]
  402fb5:	or     BYTE PTR [edx],bl
  402fb7:	or     BYTE PTR [ecx-0x4a81e5c1],bl
  402fbd:	xchg   esi,eax
  402fbe:	sub    edi,DWORD PTR [ebx-0x53ffb49]
  402fc4:	lahf   
  402fc5:	mov    esp,0x2e774e24
  402fca:	or     BYTE PTR [ebx+ebp*2+0x0],0xe2
  402fcf:	mov    esp,0x8ae8db52
  402fd4:	adc    bl,BYTE PTR [ecx-0x62]
  402fd7:	mov    edx,0xc433b03e
  402fdc:	or     ebp,DWORD PTR ds:0x3c4ce8bc
  402fe2:	mov    ah,bh
  402fe4:	sbb    DWORD PTR [ecx],edi
  402fe6:	sahf   
  402fe7:	and    bl,BYTE PTR [edi+eax*2+0x76]
  402feb:	inc    edi
  402fec:	idiv   BYTE PTR [esi]
  402fee:	and    ch,al
  402ff0:	xor    edi,DWORD PTR [eax-0x56234127]
  402ff6:	xor    BYTE PTR [edi],dl
  402ff8:	aaa    
  402ff9:	or     eax,DWORD PTR [edx+0x71]
  402ffc:	(bad)
  402fff:	sti    
  403000:	test   eax,0x33dc6e09
  403005:	push   esi
  403006:	(bad)  
  403008:	test   al,0xd6
  40300a:	xchg   BYTE PTR [edi+0x3d272881],ch
  403010:	sbb    eax,0xc94be3b9
  403015:	mov    cl,0x95
  403017:	sar    eax,1
  403019:	and    edi,edi
  40301b:	pop    ss
  40301c:	pop    ebx
  40301d:	mov    dl,0x79
  40301f:	sbb    edi,ecx
  403021:	nop
  403022:	(bad)  [ebx+ebx*4]
  403025:	jnp    0x402fa8
  403027:	push   ecx
  403028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403029:	daa    
  40302a:	add    dh,BYTE PTR [esi]
  40302c:	imul   edi,DWORD PTR [ecx+0x56f927e6],0xffffffb1
  403033:	mov    eax,0x46e1b0f4
  403038:	cs ins DWORD PTR es:[edi],dx
  40303a:	xor    BYTE PTR [ebp+0x652daa7e],ah
  403040:	fdivr  st(6),st
  403042:	push   ecx
  403043:	sbb    eax,DWORD PTR [edi]
  403045:	outs   dx,BYTE PTR ds:[esi]
  403046:	xor    esi,DWORD PTR [eax+0x37]
  403049:	adc    DWORD PTR [ecx-0x427232bb],0x47
  403050:	lds    esp,FWORD PTR [edx+0x460a4038]
  403056:	das    
  403057:	das    
  403058:	fisubr WORD PTR [ecx-0x50f1e8e]
  40305e:	pop    eax
  40305f:	and    ecx,DWORD PTR [edi]
  403061:	(bad)  
  403062:	dec    esp
  403063:	gs daa 
  403065:	popf   
  403066:	in     al,dx
  403067:	dec    eax
  403068:	push   edi
  403069:	mov    dh,0xa4
  40306b:	or     al,0x84
  40306d:	adc    DWORD PTR [ebx+edi*8+0x45ebc8e4],ebx
  403074:	pop    esp
  403075:	jmp    0xb10a:0x36618c9b
  40307c:	out    0x51,al
  40307e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40307f:	mov    esp,0xa6b21e82
  403084:	scas   eax,DWORD PTR es:[edi]
  403085:	dec    esi
  403086:	cmc    
  403087:	or     edi,ecx
  403089:	mov    bl,0xb3
  40308b:	and    esi,DWORD PTR [edi-0x369ed1a7]
  403091:	mov    ebp,0xe217c72a
  403096:	or     al,0x59
  403098:	out    0xa6,al
  40309a:	leave  
  40309b:	(bad)  
  40309c:	mov    ah,0x1a
  40309e:	and    DWORD PTR [esi],ecx
  4030a0:	aas    
  4030a1:	xchg   ebx,eax
  4030a2:	(bad)  
  4030a4:	sub    DWORD PTR [ebx-0x754a92ce],ebp
  4030aa:	sub    ah,BYTE PTR [ebp+0x5e]
  4030ad:	mov    ch,0xc9
  4030af:	js     0x40309c
  4030b1:	jp     0x4030f1
  4030b3:	ins    BYTE PTR es:[edi],dx
  4030b4:	jle    0x4030ca
  4030b6:	scas   eax,DWORD PTR es:[edi]
  4030b7:	in     eax,dx
  4030b8:	mov    ds:0xabb30a96,al
  4030bd:	sbb    ch,bl
  4030bf:	add    ebx,DWORD PTR [edx]
  4030c1:	cmc    
  4030c2:	xchg   ecx,eax
  4030c3:	push   cs
  4030c4:	les    edx,FWORD PTR [edi+0x70743128]
  4030ca:	mov    BYTE PTR ds:0xbca371d5,dh
  4030d0:	das    
  4030d1:	rcl    DWORD PTR [edi-0x46c849dd],0x8
  4030d8:	lds    edx,FWORD PTR [edi]
  4030da:	mov    dh,0xb1
  4030dc:	std    
  4030dd:	fbstp  TBYTE PTR [ebx]
  4030df:	or     BYTE PTR [ecx-0x23],0xf3
  4030e3:	mov    ecx,0xe328a103
  4030e8:	outs   dx,DWORD PTR ds:[esi]
  4030e9:	js     0x4030b3
  4030eb:	lds    edx,FWORD PTR [esi]
  4030ed:	repz scas al,BYTE PTR es:[edi]
  4030ef:	test   DWORD PTR [esi+0x35],esp
  4030f2:	pusha  
  4030f3:	mov    ds:0x94892447,eax
  4030f8:	pop    esp
  4030f9:	xchg   esp,eax
  4030fa:	inc    ecx
  4030fb:	cli    
  4030fc:	sbb    al,bl
  4030fe:	mov    ?,edx
  403100:	cmp    BYTE PTR fs:[ecx+0x5],cl
  403104:	lock test eax,0xe7f6e7e
  40310a:	or     ah,bl
  40310c:	fidiv  WORD PTR [ebp+0x34]
  40310f:	pop    esi
  403110:	pop    ebp
  403111:	adc    DWORD PTR [eax+eax*1+0x7a],edi
  403115:	call   0x5390:0x3f15f0b4
  40311c:	jecxz  0x40316b
  40311e:	mov    DWORD PTR [esi+edi*8+0xc961610],ebx
  403125:	xor    DWORD PTR [esi+0x7c78da19],eax
  40312b:	mov    edi,0x8649abdb
  403130:	mov    al,ds:0x8e52827a
  403135:	mov    ds,WORD PTR [esi+0x2cfa8e0b]
  40313b:	imul   esp,DWORD PTR ds:0x4be4722c,0xffffff8d
  403142:	xchg   edx,eax
  403143:	jo     0x40314f
  403145:	test   eax,0x33146195
  40314a:	jge    0x403190
  40314c:	in     al,dx
  40314d:	push   esi
  40314e:	inc    esi
  40314f:	out    0x7,al
  403151:	add    ebx,DWORD PTR [ebp+ebp*1-0x12b38279]
  403158:	cmp    BYTE PTR [eax-0x44f9436a],cl
  40315e:	sbb    al,0xde
  403160:	aas    
  403161:	stc    
  403162:	or     bl,BYTE PTR [esi]
  403164:	and    eax,0x6ac95ab8
  403169:	jecxz  0x4031a9
  40316b:	adc    al,0xc3
  40316d:	loopne 0x403126
  40316f:	inc    ebx
  403170:	mov    bl,al
  403172:	imul   ecx,ebx,0xffffff89
  403175:	aad    0xac
  403177:	pop    edx
  403178:	cmp    dh,BYTE PTR [ecx+0x2387e415]
  40317e:	xchg   edi,eax
  40317f:	jno    0x403137
  403181:	fistp  QWORD PTR [eax+0x7b24eecb]
  403187:	cmp    dh,bh
  403189:	xor    ecx,DWORD PTR [edx]
  40318b:	clc    
  40318c:	ds dec eax
  40318e:	or     al,0xa3
  403190:	cmp    eax,0x44a78605
  403195:	xor    BYTE PTR [ebp-0xc1e1aa1],dh
  40319b:	xchg   esi,eax
  40319c:	mov    cl,0x46
  40319e:	fist   WORD PTR [ebx]
  4031a0:	cmp    DWORD PTR [ecx],esi
  4031a2:	jecxz  0x4031d9
  4031a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031a5:	cmp    al,0x78
  4031a7:	pop    ecx
  4031a8:	inc    esi
  4031a9:	repz adc BYTE PTR ds:[ecx-0xc5b4ec3],ah
  4031b1:	lods   eax,DWORD PTR ds:[esi]
  4031b2:	(bad)
  4031b5:	cmp    edx,0x1ec3ef38
  4031bb:	mov    ebx,0x2b60d584
  4031c0:	pop    ebx
  4031c1:	sub    BYTE PTR [eax-0x6c],0x14
  4031c5:	sub    al,BYTE PTR [edi-0x350a3b7d]
  4031cb:	jb     0x403230
  4031cd:	mov    cl,0x38
  4031cf:	inc    ebx
  4031d0:	mov    eax,ds:0xe45f5539
  4031d5:	ja     0x403232
  4031d7:	in     eax,0xbe
  4031d9:	jecxz  0x4031a6
  4031db:	in     al,0xf3
  4031dd:	mul    BYTE PTR [esi]
  4031df:	fild   DWORD PTR [ebx]
  4031e1:	adc    cl,dh
  4031e3:	out    dx,eax
  4031e4:	sub    esi,DWORD PTR [ebp+0x14]
  4031e7:	adc    DWORD PTR [edi],ecx
  4031e9:	dec    esp
  4031ea:	xor    bh,cl
  4031ec:	int    0x94
  4031ee:	pop    ebp
  4031ef:	inc    esi
  4031f0:	mov    ch,0x34
  4031f2:	call   0x4f610aa5
  4031f7:	xchg   DWORD PTR [edi-0x7f],ecx
  4031fa:	inc    ebp
  4031fb:	jo     0x4031ed
  4031fd:	sahf   
  4031fe:	daa    
  4031ff:	jnp    0x4031bd
  403201:	inc    edi
  403202:	and    al,0x1
  403204:	mov    dh,0x38
  403206:	mov    al,0x98
  403208:	ja     0x4031e8
  40320a:	mov    bl,0xc0
  40320c:	jo     0x40326d
  40320e:	push   eax
  40320f:	into   
  403210:	push   esi
  403211:	(bad)  
  403212:	mov    al,ds:0x6721183f
  403217:	and    eax,0xa422f99
  40321c:	or     esp,DWORD PTR [ecx-0x25d227e4]
  403222:	out    dx,al
  403223:	(bad)  
  403224:	pop    esi
  403225:	call   0xab0999a3
  40322a:	jbe    0x4031ac
  40322c:	repnz inc edi
  40322e:	or     ebp,DWORD PTR [edi+0x665fe476]
  403234:	mov    eax,DWORD PTR [edx]
  403236:	enter  0x7f37,0x1e
  40323a:	out    dx,eax
  40323b:	sahf   
  40323c:	mov    ebp,0x8ccaa0df
  403241:	ss push ecx
  403243:	or     al,0x88
  403245:	push   ds
  403246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403247:	dec    edi
  403248:	push   esp
  403249:	sbb    cl,cl
  40324b:	sbb    DWORD PTR [edi],ebx
  40324d:	pop    ss
  40324e:	lods   al,BYTE PTR ds:[esi]
  40324f:	adc    DWORD PTR ds:0x500a788c,eax
  403255:	inc    ebp
  403256:	jl     0x4031f3
  403258:	jns    0x403217
  40325a:	leave  
  40325b:	add    DWORD PTR [eiz*4-0x61c0e7a7],esp
  403262:	neg    DWORD PTR [ebp+edi*8+0xf86bb14]
  403269:	pop    es
  40326a:	ds jne 0x4032be
  40326d:	push   ds
  40326e:	and    BYTE PTR [eax-0x6e],cl
  403271:	jmp    0x654d213a
  403276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403277:	pusha  
  403278:	mov    edx,0x7ac45b6d
  40327d:	xor    BYTE PTR [edx],0x92
  403280:	ret    
  403281:	je     0x4032fa
  403283:	ret    
  403284:	mov    ds,WORD PTR [edx-0x51]
  403287:	xchg   ebx,eax
  403288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403289:	sub    esi,edx
  40328b:	dec    esp
  40328c:	sub    DWORD PTR gs:[edi-0x6b5fe067],edx
  403293:	test   BYTE PTR [esi-0x35a9fde9],0xbe
  40329a:	jge    0x4032e6
  40329c:	cs (bad) 
  40329e:	ffreep st(4)
  4032a0:	or     BYTE PTR [edx-0x23610398],bl
  4032a6:	(bad)  
  4032a7:	sbb    DWORD PTR [ebp-0x319a8e95],0xc5524993
  4032b1:	cdq    
  4032b2:	sub    al,0xe3
  4032b4:	sub    bh,ah
  4032b6:	(bad)  
  4032b7:	mov    al,0x52
  4032b9:	jnp    0x403307
  4032bb:	in     eax,dx
  4032bc:	add    al,0xeb
  4032be:	fwait
  4032bf:	int    0x7
  4032c1:	mov    ds:0x29dbc922,eax
  4032c6:	aas    
  4032c7:	jecxz  0x40330a
  4032c9:	imul   ebp,DWORD PTR [esi],0xdb83c85f
  4032cf:	into   
  4032d0:	xor    edx,DWORD PTR [edx+0xdb3567b]
  4032d6:	jne    0x403285
  4032d8:	push   ebx
  4032d9:	(bad)  
  4032da:	jns    0x40332e
  4032dc:	shl    ebx,0x15
  4032df:	adc    al,0x6b
  4032e1:	mov    dl,0x8b
  4032e3:	mov    esi,DWORD PTR [eax]
  4032e5:	and    DWORD PTR [ecx+0x2d],esi
  4032e8:	test   BYTE PTR [esi],dh
  4032ea:	js     0x403285
  4032ec:	xor    BYTE PTR [edx+0x5a],bh
  4032ef:	push   eax
  4032f0:	jge    0x40331f
  4032f2:	mov    eax,0xb898e1c8
  4032f7:	fisttp WORD PTR [eax+0x56]
  4032fa:	mov    esi,0xc54c9edb
  4032ff:	mov    dh,0xe4
  403301:	retf   0x8799
  403304:	jae    0x403376
  403306:	ss stc 
  403308:	xchg   ebp,eax
  403309:	adc    DWORD PTR [ebx-0x56],esi
  40330c:	lea    ebp,[edx+0x27314f7e]
  403312:	mov    ebp,0x9ec26ab6
  403317:	push   eax
  403318:	loop   0x40336f
  40331a:	repnz mov edi,0x6d71d311
  403320:	cli    
  403321:	lock inc edi
  403323:	and    dl,BYTE PTR [esp+ecx*1-0xd00b5b6]
  40332a:	cmp    DWORD PTR [ebx+esi*1-0x27],eax
  40332e:	pop    ebp
  40332f:	or     edx,DWORD PTR [ebx]
  403331:	aaa    
  403332:	adc    DWORD PTR [ecx],edx
  403334:	adc    ebp,ecx
  403336:	or     dh,BYTE PTR [edx]
  403338:	imul   ebp,DWORD PTR ds:0x41c94aab,0xad31a4f3
  403342:	aam    0x2b
  403344:	push   es
  403345:	xchg   BYTE PTR [edi+esi*8-0x4f],dh
  403349:	data16 es out 0xdb,al
  40334d:	test   eax,0x2ffacc76
  403352:	out    0xf8,al
  403354:	leave  
  403355:	mov    dh,0xd7
  403357:	(bad)  
  403358:	in     eax,0xf6
  40335a:	mov    BYTE PTR [esp+edi*8+0x35],ch
  40335e:	or     DWORD PTR [ebp+0x46],esi
  403361:	jl     0x4032f3
  403363:	and    BYTE PTR [esi],bh
  403365:	and    DWORD PTR [edx+0x45],ebx
  403368:	out    dx,al
  403369:	gs nop
  40336b:	and    DWORD PTR [ebx+0x63ecdcb9],edi
  403371:	xchg   edi,eax
  403372:	je     0x403343
  403374:	(bad)  
  403375:	fidiv  DWORD PTR [edx]
  403377:	jns    0x403376
  403379:	mov    gs,WORD PTR [esi+eiz*1+0x28]
  40337d:	dec    edx
  40337e:	hlt    
  40337f:	xlat   BYTE PTR ds:[ebx]
  403380:	sbb    al,0x7b
  403382:	ret    
  403383:	xor    DWORD PTR [esi],eax
  403385:	aad    0xdc
  403387:	shl    BYTE PTR [esi+0xee73bff],cl
  40338d:	or     bh,bh
  40338f:	add    al,0xc9
  403391:	and    DWORD PTR [eax+edx*8-0x6fe17523],edx
  403398:	mov    ch,0xda
  40339a:	ins    DWORD PTR es:[edi],dx
  40339b:	mov    al,ds:0x1106fd98
  4033a0:	test   al,0x88
  4033a2:	int3   
  4033a3:	scas   al,BYTE PTR es:[edi]
  4033a4:	adc    al,0x44
  4033a6:	sub    DWORD PTR [edx],edi
  4033a8:	(bad)  [ebx+eax*1]
  4033ab:	std    
  4033ac:	dec    edi
  4033ad:	call   0xce022d11
  4033b2:	test   al,0x73
  4033b4:	ins    BYTE PTR es:[edi],dx
  4033b5:	add    DWORD PTR [ebp+0x1bc73dc],ecx
  4033bb:	xchg   edi,eax
  4033bc:	xchg   ebx,eax
  4033bd:	sub    bl,dh
  4033bf:	adc    DWORD PTR [edi+ebx*1+0x18],0xffffffb0
  4033c4:	inc    ebx
  4033c5:	or     al,0x5b
  4033c7:	enter  0xbf8a,0x8d
  4033cb:	out    0x6,eax
  4033cd:	and    esi,edi
  4033cf:	inc    ebp
  4033d0:	stc    
  4033d1:	std    
  4033d2:	jmp    0x403396
  4033d4:	or     al,0xdc
  4033d6:	(bad)  
  4033d7:	xchg   edi,eax
  4033d8:	(bad)  
  4033d9:	imul   eax,DWORD PTR [ecx-0x54738de],0x62
  4033e0:	lods   al,BYTE PTR ds:[esi]
  4033e1:	mov    BYTE PTR [edi-0x8],ah
  4033e4:	xor    ch,dh
  4033e6:	lods   al,BYTE PTR ds:[esi]
  4033e7:	lock jl 0x4033f2
  4033ea:	sbb    BYTE PTR [eax+eax*8],dl
  4033ed:	xchg   edx,eax
  4033ee:	adc    al,0x9b
  4033f0:	fdivr  QWORD PTR [edi+0x58670d81]
  4033f6:	push   edi
  4033f7:	mov    edx,0x861deec0
  4033fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033fd:	push   ebx
  4033fe:	add    DWORD PTR [eax-0x6],edi
  403401:	jecxz  0x4033e0
  403403:	clc    
  403404:	mov    dl,BYTE PTR [esi-0x26]
  403407:	add    BYTE PTR [esi+0x528c4215],bh
  40340d:	pop    ds
  40340e:	sbb    eax,0xf4dd6aa
  403413:	xor    DWORD PTR [edx+eax*1-0x4c],esp
  403417:	mov    dl,BYTE PTR [ecx]
  403419:	fdivr  DWORD PTR [eax+0x71]
  40341c:	pop    ebx
  40341d:	fistp  DWORD PTR [esi+0x366f265]
  403423:	popf   
  403424:	pop    ecx
  403425:	push   es
  403426:	push   eax
  403427:	imul   edi,DWORD PTR [ecx],0x6b
  40342a:	xor    edx,DWORD PTR [edx]
  40342c:	jne    0x40348a
  40342e:	aad    0xe2
  403430:	shl    DWORD PTR [ebx-0x685ef2c],1
  403436:	push   ds
  403437:	stos   BYTE PTR es:[edi],al
  403438:	mov    ds:0x78dc4d73,al
  40343d:	hlt    
  40343e:	lods   al,BYTE PTR ds:[esi]
  40343f:	repnz xchg edi,eax
  403441:	dec    eax
  403442:	pushf  
  403443:	stos   DWORD PTR es:[edi],eax
  403444:	xor    ebp,0x59
  403447:	xchg   esp,eax
  403448:	outs   dx,DWORD PTR ds:[esi]
  403449:	push   ebx
  40344a:	dec    edx
  40344b:	and    eax,0x647e67d4
  403450:	add    BYTE PTR [edx-0x28ea234c],ch
  403456:	dec    eax
  403457:	or     al,0x3d
  403459:	ins    DWORD PTR es:[edi],dx
  40345a:	mov    ebx,0x12f6d520
  40345f:	arpl   WORD PTR [edi],dx
  403461:	fidivr DWORD PTR [esi+0x1f]
  403464:	cmp    al,0xd
  403466:	mov    esp,0x39057b7
  40346b:	add    eax,0xf2dada62
  403470:	xchg   edi,eax
  403471:	scas   al,BYTE PTR es:[edi]
  403472:	mov    ecx,0x75beb593
  403477:	cdq    
  403478:	sub    BYTE PTR [edx-0x102f53ad],al
  40347e:	cmp    eax,0x2fc71eb2
  403483:	fld    TBYTE PTR [ecx]
  403485:	push   ss
  403486:	call   0x564dc040
  40348b:	or     al,0x87
  40348d:	cld    
  40348e:	and    cl,BYTE PTR [ebp-0x1683f274]
  403494:	inc    ecx
  403495:	cmp    bl,BYTE PTR [ecx-0x59]
  403498:	out    0xe6,al
  40349a:	xchg   ebp,eax
  40349b:	fs push ecx
  40349d:	xchg   ecx,eax
  40349e:	les    esi,FWORD PTR [eax-0x10]
  4034a1:	pop    ebx
  4034a2:	aaa    
  4034a3:	push   0xffffffc9
  4034a5:	popa   
  4034a6:	arpl   WORD PTR [ebp-0x6f],bx
  4034a9:	hlt    
  4034aa:	jg     0x40345b
  4034ac:	int    0x91
  4034ae:	cdq    
  4034af:	fild   QWORD PTR [esi+0x350d1864]
  4034b5:	inc    ebx
  4034b6:	mov    BYTE PTR cs:[ecx+0x77],0x57
  4034bb:	hlt    
  4034bc:	and    al,0x57
  4034be:	fsub   DWORD PTR ds:0xb1300933
  4034c4:	pop    ds
  4034c5:	jp     0x403458
  4034c7:	imul   ebx,DWORD PTR [esi-0x5c],0x6d46170b
  4034ce:	mov    ds:0x234b9c43,al
  4034d3:	mov    al,0x71
  4034d5:	popf   
  4034d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034d7:	enter  0xa535,0xbf
  4034db:	inc    ebx
  4034dc:	repz ftst 
  4034df:	inc    dh
  4034e1:	jl     0x4034c7
  4034e3:	ins    BYTE PTR es:[edi],dx
  4034e4:	ret    0xe079
  4034e7:	aas    
  4034e8:	(bad)  
  4034e9:	sub    dl,BYTE PTR [ecx-0x4]
  4034ec:	jecxz  0x403566
  4034ee:	stos   DWORD PTR es:[edi],eax
  4034ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034f0:	xor    dh,bh
  4034f2:	and    eax,0x72f077c9
  4034f7:	lods   eax,DWORD PTR ds:[esi]
  4034f8:	push   ebp
  4034f9:	scas   eax,DWORD PTR es:[edi]
  4034fa:	je     0x403499
  4034fc:	and    BYTE PTR [edx+edx*4],dl
  4034ff:	and    BYTE PTR fs:[edx+eax*8+0x72d40bb1],dl
  403507:	ss or  al,0xe0
  40350a:	sub    esp,DWORD PTR [ecx-0x50]
  40350d:	ins    DWORD PTR es:[edi],dx
  40350e:	or     cl,BYTE PTR [edi+0x65103105]
  403514:	shr    BYTE PTR [esp+ecx*4],cl
  403517:	arpl   WORD PTR [ebx-0x37098c8b],sp
  40351d:	call   0x9620:0x7a372eb6
  403524:	add    eax,DWORD PTR [ecx-0x21]
  403527:	and    edx,DWORD PTR [eax+0x7268bbe7]
  40352d:	lahf   
  40352e:	and    al,0x0
  403530:	sbb    BYTE PTR ds:0xff0ab4a,0xaa
  403537:	in     al,0x72
  403539:	push   ecx
  40353a:	shr    BYTE PTR [edi],1
  40353c:	push   ss
  40353d:	push   eax
  40353e:	push   esp
  40353f:	push   esi
  403540:	pop    esi
  403541:	pop    ds
  403542:	inc    ebx
  403543:	dec    esi
  403544:	push   edx
  403545:	(bad)  
  403546:	xor    BYTE PTR fs:[ebx+0x35],ah
  40354a:	(bad)  
  40354b:	add    ch,BYTE PTR ds:[ebx]
  40354e:	aad    0x3b
  403550:	pop    es
  403551:	xchg   esi,ecx
  403553:	adc    dl,BYTE PTR [ebx+0x79]
  403556:	push   edi
  403557:	mov    al,0x38
  403559:	cmp    BYTE PTR [edx+0x7aa7fff],ch
  40355f:	cld    
  403560:	scas   eax,DWORD PTR es:[edi]
  403561:	xor    cl,BYTE PTR [esp+ebx*1-0x10]
  403565:	xor    dh,BYTE PTR ds:0x7d602871
  40356b:	imul   ebp
  40356d:	clc    
  40356e:	nop
  40356f:	dec    esi
  403570:	xchg   ecx,eax
  403571:	fadd   st,st(5)
  403573:	adc    BYTE PTR [edx-0x21],ch
  403576:	mov    edx,0xffc95588
  40357b:	mov    al,ds:0x291d4b66
  403580:	cmp    ebp,DWORD PTR ds:0x1e3dc575
  403586:	lods   eax,DWORD PTR ds:[esi]
  403587:	icebp  
  403588:	test   BYTE PTR [esi-0x57bb5b0b],dl
  40358e:	jle    0x403580
  403590:	sbb    al,0x81
  403592:	mov    eax,0x53262f00
  403597:	inc    ecx
  403598:	sbb    ah,BYTE PTR [edx+ecx*8-0xe]
  40359c:	dec    eax
  40359d:	and    al,0x38
  40359f:	js     0x40352f
  4035a1:	fst    QWORD PTR [esi-0x7b5a2737]
  4035a7:	dec    esi
  4035a8:	adc    edi,DWORD PTR [eax]
  4035aa:	sub    ebx,DWORD PTR ds:0xfaed3e2
  4035b0:	mov    ebx,0x4e8f278d
  4035b5:	mov    esp,0xfe75ae53
  4035ba:	call   0x2eb3:0x61ee2af6
  4035c1:	hlt    
  4035c2:	retf   
  4035c3:	arpl   WORD PTR [eax-0x2],bp
  4035c6:	adc    BYTE PTR es:[ebx+edx*8],bh
  4035ca:	adc    al,0x31
  4035cc:	sub    BYTE PTR [edi-0x43],al
  4035cf:	mov    ds:0x91ca544,eax
  4035d4:	jnp    0x40358f
  4035d6:	out    0x77,eax
  4035d8:	jp     0x4035ec
  4035da:	cs pop edx
  4035dc:	ss popa 
  4035de:	xchg   esi,eax
  4035df:	or     edi,DWORD PTR [ecx-0x51]
  4035e2:	das    
  4035e3:	mov    esi,0x24546af0
  4035e8:	scas   eax,DWORD PTR es:[edi]
  4035e9:	mov    ecx,0x3b5ec675
  4035ee:	inc    eax
  4035ef:	add    al,0xd0
  4035f1:	mov    edi,esi
  4035f3:	sub    BYTE PTR gs:[edx],al
  4035f6:	stos   BYTE PTR es:[edi],al
  4035f7:	rol    BYTE PTR [eax],1
  4035f9:	pop    ss
  4035fa:	or     ebx,DWORD PTR [ecx]
  4035fc:	xor    ebx,0x79
  4035ff:	jmp    0x4035ac
  403601:	ss mov ebp,0x2a4352e6
  403607:	add    ebx,ebp
  403609:	cmp    al,0x26
  40360b:	jg     0x40363f
  40360d:	sub    edx,eax
  40360f:	nop
  403610:	ror    BYTE PTR [esi-0x454977b],cl
  403616:	pop    edx
  403617:	dec    si
  403619:	and    eax,0x27fd94e4
  40361e:	cmc    
  40361f:	or     BYTE PTR [eax],0x62
  403622:	(bad)  
  403623:	not    al
  403625:	ins    BYTE PTR es:[edi],dx
  403626:	loopne 0x403625
  403628:	mov    bl,ah
  40362a:	xchg   ebx,eax
  40362b:	and    bl,ch
  40362d:	sub    eax,DWORD PTR [ebp+0x30]
  403630:	stos   DWORD PTR es:[edi],eax
  403631:	retf   
  403632:	rol    eax,1
  403634:	fstp   DWORD PTR [edi]
  403636:	test   DWORD PTR [esi-0x6db39af6],ebp
  40363c:	pop    gs
  40363e:	mov    cl,dl
  403640:	jb     0x403642
  403642:	adc    ecx,ebx
  403644:	pusha  
  403645:	vpmacsdql xmm14,xmm0,xmm5,XMMWORD PTR [ebx-0x2ea74809]
  40364f:	push   ebp
  403650:	or     bh,BYTE PTR [edi-0xcc7e274]
  403656:	jge    0x403608
  403658:	je     0x403650
  40365a:	and    eax,0xe3d5934f
  40365f:	mov    eax,0x6dbd25f3
  403664:	xor    eax,0xc227d9c4
  403669:	ja     0x403671
  40366b:	sbb    al,0x83
  40366d:	jmp    0x32fc:0x7aa24b0a
  403674:	pop    ebx
  403675:	push   eax
  403676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403677:	out    0x18,eax
  403679:	mov    edi,0xb8d978e9
  40367e:	dec    esp
  40367f:	mov    eax,edx
  403681:	loop   0x403638
  403683:	in     al,dx
  403684:	add    dl,BYTE PTR [ebx-0x45]
  403687:	inc    edx
  403688:	fwait
  403689:	pop    ecx
  40368a:	(bad)  
  40368b:	jmp    0xa9a83e76
  403690:	test   DWORD PTR fs:[ecx],0xcc995f75
  403697:	inc    esi
  403698:	ins    BYTE PTR es:[edi],dx
  403699:	jno    0x4036cb
  40369b:	dec    edi
  40369c:	outs   dx,BYTE PTR ds:[esi]
  40369d:	push   edi
  40369e:	xchg   esi,eax
  40369f:	mov    dh,0x60
  4036a1:	mov    esp,0xdd98b1de
  4036a6:	dec    eax
  4036a7:	and    BYTE PTR [ebp-0x73],bh
  4036aa:	arpl   WORD PTR [eax-0x6309ba8e],ax
  4036b0:	mov    al,ds:0x3d6e7520
  4036b5:	or     BYTE PTR [edx-0x2d58b37],dl
  4036bb:	xor    BYTE PTR [ecx-0x9],dl
  4036be:	push   esp
  4036bf:	sar    DWORD PTR [ebp+0x36],1
  4036c2:	int    0xf6
  4036c4:	cld    
  4036c5:	int3   
  4036c6:	arpl   WORD PTR [ecx+0x5e46b64f],ax
  4036cc:	inc    edi
  4036cd:	nop
  4036ce:	sbb    eax,DWORD PTR [esi-0x2d]
  4036d1:	and    ebx,esi
  4036d3:	icebp  
  4036d4:	int    0x45
  4036d6:	jl     0x403668
  4036d8:	cmp    BYTE PTR [edx+esi*4],0x9a
  4036dc:	bnd jmp 0xbb0d1202
  4036e2:	(bad)  
  4036e3:	mov    ecx,0xbf112824
  4036e8:	jge    0x40366a
  4036ea:	arpl   WORD PTR [ebp-0x25],cx
  4036ed:	sub    DWORD PTR [esi+0x3510a822],edx
  4036f3:	lea    ecx,[ebx-0x1b]
  4036f6:	stc    
  4036f7:	repz fisubr WORD PTR [eax+edx*1+0x33]
  4036fc:	in     al,dx
  4036fd:	repnz inc esi
  4036ff:	push   0xd0c21d76
  403704:	data16 fs and al,0x30
  403708:	popfw  
  40370a:	fsub   DWORD PTR [eax-0x6cf4a612]
  403710:	popf   
  403711:	mov    esp,0xb80f7b92
  403716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403717:	adc    dl,BYTE PTR [ebx+edi*2]
  40371a:	xor    ah,BYTE PTR ds:0xb5e3283e
  403720:	mov    esi,0x641c6fec
  403725:	sbb    BYTE PTR [esi+0x23c5ff9a],ch
  40372b:	test   bl,bh
  40372d:	and    DWORD PTR [bx+0x4f55],ebx
  403732:	inc    ebp
  403733:	fucomip st,st(7)
  403735:	jl     0x403777
  403737:	ins    BYTE PTR es:[edi],dx
  403738:	stos   BYTE PTR es:[edi],al
  403739:	aam    0xbe
  40373b:	adc    BYTE PTR [ebp+0x4c],bl
  40373e:	add    edi,DWORD PTR [eax]
  403740:	mov    WORD PTR [eax],ss
  403742:	leave  
  403743:	xchg   ebx,eax
  403744:	mov    al,ds:0x5dccac06
  403749:	(bad)  
  40374a:	das    
  40374b:	pop    ss
  40374c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40374d:	jae    0x40372c
  40374f:	sub    BYTE PTR [eax+esi*2-0x1d],cl
  403753:	enter  0x1da9,0x5e
  403757:	repz jg 0x40371d
  40375a:	out    0x91,al
  40375c:	cdq    
  40375d:	cmp    DWORD PTR [ecx-0x897c1a2],ebp
  403763:	jb     0x4037d4
  403765:	cli    
  403766:	dec    esi
  403767:	nop
  403768:	mov    bh,0xc1
  40376a:	sahf   
  40376b:	adc    BYTE PTR [ebx+0x51206738],al
  403771:	inc    esi
  403772:	jp     0x403793
  403774:	addr16 xor eax,0x1501ff20
  40377a:	xor    eax,0xabf920ef
  40377f:	jns    0x403789
  403781:	lea    ebx,[ebx+ebp*2-0x57b78fe3]
  403788:	aas    
  403789:	enter  0xf33a,0x64
  40378d:	aaa    
  40378e:	pop    eax
  40378f:	cli    
  403790:	out    dx,al
  403791:	mov    al,BYTE PTR [ebx]
  403793:	jle    0x40371a
  403795:	add    al,0x1c
  403797:	pusha  
  403798:	sub    eax,0x4b60ff48
  40379d:	lea    esp,[ebp-0x16]
  4037a0:	mov    ds:0x27a2058d,al
  4037a5:	(bad)  
  4037a6:	xlat   BYTE PTR ds:[ebx]
  4037a7:	sbb    al,BYTE PTR [edx-0x3504ce80]
  4037ad:	push   es
  4037ae:	pushf  
  4037af:	sbb    ebp,0x51
  4037b2:	loope  0x40381d
  4037b4:	sti    
  4037b5:	add    BYTE PTR [eax-0x769979a4],0x5c
  4037bc:	dec    esi
  4037bd:	xor    ebx,DWORD PTR [ecx+0x7e7ad98]
  4037c3:	mov    ah,0x92
  4037c5:	icebp  
  4037c6:	pop    edi
  4037c7:	lahf   
  4037c8:	hlt    
  4037c9:	or     ch,BYTE PTR [ecx+edx*2]
  4037cc:	dec    ebx
  4037cd:	mov    eax,ds:0x418be929
  4037d2:	pop    ecx
  4037d3:	enter  0x7d29,0x70
  4037d7:	dec    edi
  4037d8:	out    dx,eax
  4037d9:	pushf  
  4037da:	js     0x403828
  4037dc:	arpl   WORD PTR [eax+0x4600fc7e],bp
  4037e2:	into   
  4037e3:	rcr    DWORD PTR [ebp-0x21],cl
  4037e6:	sbb    DWORD PTR [eax],0x16
  4037e9:	push   es
  4037ea:	inc    esi
  4037eb:	pusha  
  4037ec:	dec    eax
  4037ed:	int    0x5b
  4037ef:	mov    ecx,0x919b455b
  4037f4:	pop    edi
  4037f5:	(bad)  [esi-0xea0d669]
  4037fb:	pop    ecx
  4037fc:	cwde   
  4037fd:	bound  esi,QWORD PTR [ebp+0x5f744391]
  403803:	popf   
  403804:	and    eax,0x1ff16bda
  403809:	ror    DWORD PTR [edx+0x4f6096dd],cl
  40380f:	test   eax,0xc4d6c29e
  403814:	cmp    cl,BYTE PTR [esi]
  403816:	(bad)  
  403817:	in     eax,0xba
  403819:	sbb    eax,DWORD PTR [edi+0x64]
  40381c:	sub    DWORD PTR [ecx],edx
  40381e:	mov    edi,0x7d6fce0e
  403823:	sub    DWORD PTR ss:[edi],edi
  403826:	mov    eax,ds:0xc86bf636
  40382b:	jmp    0x7cd5:0x1873228a
  403832:	dec    eax
  403833:	xchg   esi,eax
  403834:	pop    edi
  403835:	xor    DWORD PTR [edi],eax
  403837:	adc    al,0x1c
  403839:	cwde   
  40383a:	add    al,0xb
  40383c:	inc    esi
  40383d:	aas    
  40383e:	add    al,0x9a
  403840:	or     DWORD PTR [ecx-0x4e26bf07],ebx
  403846:	scas   eax,DWORD PTR es:[edi]
  403847:	xor    al,0xce
  403849:	into   
  40384a:	inc    edx
  40384b:	push   esi
  40384c:	jecxz  0x403817
  40384e:	adc    al,0x75
  403850:	mov    ebx,DWORD PTR ds:0x565302e2
  403856:	lds    esi,FWORD PTR [esi+0x7e6a99db]
  40385c:	jae    0x4038ba
  40385e:	cwde   
  40385f:	mov    bh,0x3e
  403861:	jp     0x403839
  403863:	dec    ebx
  403864:	push   cs
  403865:	pop    es
  403866:	(bad)  
  403867:	mov    ds:0x753e99e9,eax
  40386c:	inc    DWORD PTR [ebp+0x730c70ce]
  403872:	test   DWORD PTR [eax-0x4a72d68e],esp
  403878:	xchg   edx,eax
  403879:	jno    0x4038a1
  40387b:	sbb    esi,DWORD PTR [ebx-0x80]
  40387e:	fs ret 
  403880:	cwde   
  403881:	mov    eax,DWORD PTR [esi+0x36]
  403884:	adc    BYTE PTR [edi+0x35c42093],0x31
  40388b:	push   es
  40388c:	stos   DWORD PTR es:[edi],eax
  40388d:	(bad)
  403890:	cwde   
  403891:	xor    BYTE PTR [ebx],0xfa
  403894:	or     ebp,ecx
  403896:	and    ebp,DWORD PTR ds:0xf065a5bf
  40389c:	jmp    0x4038fd
  40389e:	aaa    
  40389f:	jmp    0xa58f0fd9
  4038a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038a5:	aaa    
  4038a6:	push   ds
  4038a7:	mov    dh,0x38
  4038a9:	loopne 0x4038f8
  4038ab:	xchg   ch,cl
  4038ad:	retf   
  4038ae:	(bad)  
  4038af:	xor    BYTE PTR [ebx+0x4d3e7e9b],ch
  4038b5:	pusha  
  4038b6:	jbe    0x40387b
  4038b8:	and    BYTE PTR [edi-0x12],ch
  4038bb:	sar    BYTE PTR [ecx+0x69fcd31f],1
  4038c1:	push   ebp
  4038c2:	scas   al,BYTE PTR es:[edi]
  4038c3:	push   cs
  4038c4:	push   cx
  4038c6:	retf   0x82a1
  4038c9:	test   eax,0x3c34330f
  4038ce:	xlat   BYTE PTR ds:[ebx]
  4038cf:	mov    esp,0xa725c392
  4038d4:	retf   
  4038d5:	cmp    al,0x7d
  4038d7:	push   0x796ef0ca
  4038dc:	mov    dh,0xd0
  4038de:	push   esp
  4038df:	xchg   ebp,eax
  4038e0:	inc    ecx
  4038e1:	sbb    DWORD PTR [edi],ebp
  4038e3:	lfs    eax,FWORD PTR [esi-0x51]
  4038e7:	pop    edx
  4038e8:	mov    eax,0x959179cd
  4038ed:	and    DWORD PTR [esi],esp
  4038ef:	aaa    
  4038f0:	mov    ds:0x66720250,eax
  4038f5:	sar    BYTE PTR [ebx+0x53],1
  4038f8:	inc    esp
  4038f9:	pop    esi
  4038fa:	mov    cl,0x7e
  4038fc:	or     eax,0x21812700
  403901:	cwde   
  403902:	push   edx
  403903:	std    
  403904:	aad    0xd3
  403906:	mov    dh,0xff
  403908:	pop    ecx
  403909:	daa    
  40390a:	sbb    al,0x26
  40390c:	or     BYTE PTR [ebp+ecx*2-0x73],dh
  403910:	adc    eax,0x94f191aa
  403915:	lock shr BYTE PTR [edi-0x7a],1
  403919:	enter  0xd3dd,0xb2
  40391d:	dec    esi
  40391e:	xchg   DWORD PTR [edi+0x4e1d7fe1],ecx
  403924:	pop    esp
  403925:	shr    DWORD PTR [ecx],0x3e
  403928:	mov    ss,WORD PTR [esi]
  40392a:	pop    esi
  40392b:	mov    al,0x63
  40392d:	xchg   ecx,eax
  40392e:	fmul   st(6),st
  403930:	or     dl,al
  403932:	jg     0x4038ca
  403934:	pop    edi
  403935:	jno    0x403948
  403937:	jp     0x4038d9
  403939:	jb     0x40390b
  40393b:	jno    0x4039a3
  40393d:	mov    dl,0x51
  40393f:	mov    cs,WORD PTR [edx+0x40]
  403942:	(bad)  
  403943:	or     ah,BYTE PTR [esi-0x67]
  403946:	jle    0x4038ef
  403948:	mov    esi,0x54549cc1
  40394d:	or     BYTE PTR [eax],0xeb
  403950:	ins    BYTE PTR es:[edi],dx
  403951:	fdiv   st,st(3)
  403953:	or     DWORD PTR [ebx+0x41d59bbb],esp
  403959:	push   edi
  40395a:	xor    DWORD PTR [ebx+0x7fa55a8],0xa5f0c86f
  403964:	dec    ebp
  403965:	mov    ebp,0xa31ba83
  40396a:	fadd   DWORD PTR [esi+0x74]
  40396d:	push   edx
  40396e:	test   al,0x74
  403970:	rcl    BYTE PTR [ecx],cl
  403972:	inc    esp
  403973:	lahf   
  403974:	xor    esi,DWORD PTR [ebx+edx*1]
  403977:	stc    
  403978:	mov    edi,0x8391acce
  40397d:	sub    al,0xe1
  40397f:	or     dh,0xf2
  403982:	pop    esi
  403983:	xchg   BYTE PTR [esp+edx*1],bl
  403986:	repnz cwde 
  403988:	iret   
  403989:	sub    DWORD PTR ds:0x45fdeac6,edx
  40398f:	or     al,0xbe
  403991:	cdq    
  403992:	dec    ecx
  403993:	inc    eax
  403994:	or     eax,DWORD PTR [edx+0x6]
  403997:	in     eax,dx
  403998:	pop    ds
  403999:	clc    
  40399a:	push   esp
  40399b:	test   al,0x93
  40399d:	cmp    DWORD PTR [edi+0x57],ebp
  4039a0:	dec    esp
  4039a1:	clc    
  4039a2:	push   edi
  4039a3:	pop    eax
  4039a4:	jmp    0x403a18
  4039a6:	repnz mov gs,edi
  4039a9:	lods   eax,DWORD PTR ds:[esi]
  4039aa:	mov    esi,0x33786fe4
  4039af:	add    bh,BYTE PTR [esi+ebp*2]
  4039b2:	or     esp,DWORD PTR [eax+0x45]
  4039b5:	mov    WORD PTR [esi],cs
  4039b7:	inc    edi
  4039b8:	push   esi
  4039b9:	nop
  4039ba:	mov    edi,0x928e5e79
  4039bf:	xlat   BYTE PTR ds:[ebx]
  4039c0:	popf   
  4039c1:	aaa    
  4039c2:	in     al,dx
  4039c3:	daa    
  4039c4:	mov    esp,0xd053d2a1
  4039c9:	sbb    bh,0xa5
  4039cc:	mov    bl,0xdb
  4039ce:	in     eax,0x5d
  4039d0:	lods   eax,DWORD PTR ds:[esi]
  4039d1:	popf   
  4039d2:	xchg   DWORD PTR [ebx-0x5d],ebp
  4039d5:	dec    edx
  4039d6:	sub    eax,edi
  4039d8:	call   0xa7ba01f9
  4039dd:	xor    BYTE PTR [esi+0x308d122],ch
  4039e3:	retf   0x892d
  4039e6:	jb     0x403a5c
  4039e8:	bound  edi,QWORD PTR [ebx+esi*4]
  4039eb:	test   edx,eax
  4039ed:	(bad)
  4039f1:	call   0xcf497df5
  4039f6:	scas   eax,DWORD PTR es:[edi]
  4039f7:	or     cl,dl
  4039f9:	test   DWORD PTR [ebp+0x36],ebp
  4039fc:	sahf   
  4039fd:	mov    ebp,0x77fbeb16
  403a02:	(bad)  
  403a03:	pushf  
  403a04:	push   ds
  403a05:	mov    bh,0x32
  403a07:	add    al,0x65
  403a09:	dec    edi
  403a0a:	dec    ebp
  403a0b:	jge    0x403a0f
  403a0d:	and    cl,ah
  403a0f:	in     eax,0x42
  403a11:	mov    esp,0x18901d62
  403a16:	mov    ah,0x2d
  403a18:	mov    ebx,0x9309ad2b
  403a1d:	sub    esp,DWORD PTR [ecx+0x4ec29731]
  403a23:	outs   dx,BYTE PTR ds:[esi]
  403a24:	call   0x874a:0x2fe00f5b
  403a2b:	div    BYTE PTR [ebp-0x7a696abf]
  403a31:	or     BYTE PTR [eax],dh
  403a33:	add    BYTE PTR [ecx+0x5b45a0de],0x89
  403a3a:	pop    esi
  403a3b:	iret   
  403a3c:	cmp    ebp,eax
  403a3e:	inc    edx
  403a3f:	pushf  
  403a40:	push   ds
  403a41:	adc    ebp,DWORD PTR ds:0xf8f6511a
  403a47:	ins    BYTE PTR es:[edi],dx
  403a48:	mov    ah,0xdb
  403a4a:	loopne 0x4039ea
  403a4c:	push   edi
  403a4d:	shl    BYTE PTR [ecx],cl
  403a4f:	sahf   
  403a50:	mov    al,0xdb
  403a52:	dec    ecx
  403a53:	nop
  403a54:	xchg   BYTE PTR ds:0xcd4ff474,al
  403a5a:	fbld   TBYTE PTR [ecx-0x11a2770]
  403a60:	jmp    0x7f89be56
  403a65:	mov    dl,0xa3
  403a67:	dec    esp
  403a68:	mov    eax,ebp
  403a6a:	rol    DWORD PTR [edx+0x79],1
  403a6d:	adc    eax,0x9f0bb4d6
  403a72:	or     eax,0xe463025d
  403a77:	lea    esi,[ebp-0x5d]
  403a7a:	js     0x403afa
  403a7c:	dec    esp
  403a7d:	popa   
  403a7e:	rcr    BYTE PTR [eax-0x4e],cl
  403a81:	push   ebx
  403a82:	and    BYTE PTR [esi+eiz*4-0x1261124c],dh
  403a89:	clc    
  403a8a:	or     dh,BYTE PTR [ebp+0x4c]
  403a8d:	call   0x3b45d864
  403a92:	cdq    
  403a93:	test   al,0xa8
  403a95:	fdivr  QWORD PTR [edi-0x360ef8fd]
  403a9b:	and    BYTE PTR [edi-0x4f00d95f],dl
  403aa1:	dec    ecx
  403aa2:	xchg   ebx,eax
  403aa3:	xchg   ecx,eax
  403aa4:	scas   eax,DWORD PTR es:[edi]
  403aa5:	add    al,0x42
  403aa7:	jle    0x403a79
  403aa9:	popa   
  403aaa:	retf   
  403aab:	mov    ch,BYTE PTR [edx]
  403aad:	dec    ebx
  403aae:	pop    eax
  403aaf:	imul   ebx,DWORD PTR [edi],0x3
  403ab2:	xor    ebx,DWORD PTR [esp+edx*8+0xf]
  403ab6:	mov    al,ds:0x65d0225b
  403abb:	jno    0x403a85
  403abd:	nop
  403abe:	leave  
  403abf:	jecxz  0x403a68
  403ac1:	inc    eax
  403ac2:	or     DWORD PTR [ecx],edi
  403ac4:	scas   eax,DWORD PTR es:[edi]
  403ac5:	pop    ebx
  403ac6:	cmp    ebp,edx
  403ac8:	loopne 0x403b2a
  403aca:	out    dx,al
  403acb:	sbb    ah,BYTE PTR [edx-0x2]
  403ace:	icebp  
  403acf:	fstp   DWORD PTR [ebp-0x47]
  403ad2:	push   ds
  403ad3:	sub    dh,BYTE PTR [edi-0x17]
  403ad6:	and    eax,DWORD PTR [eax]
  403ad8:	imul   esp,esp,0x4f
  403adb:	call   0xc658:0xf74dc959
  403ae2:	push   edx
  403ae3:	lods   eax,DWORD PTR ds:[esi]
  403ae4:	aam    0x3c
  403ae6:	inc    ecx
  403ae7:	push   ecx
  403ae8:	div    BYTE PTR [eax-0x12b9862a]
  403aee:	stc    
  403aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403af0:	lds    ecx,FWORD PTR [edx-0x57b395a2]
  403af6:	jg     0x403a7e
  403af8:	xor    esi,DWORD PTR [ebx]
  403afa:	pop    es
  403afb:	std    
  403afc:	mov    ecx,0x1e00565
  403b01:	sbb    al,0x3
  403b03:	xchg   bx,ax
  403b05:	xor    eax,0xc257dd20
  403b0a:	push   0x90d2015a
  403b0f:	pop    esi
  403b10:	jle    0x403ac9
  403b12:	add    al,0x69
  403b14:	aaa    
  403b15:	jmp    0x29b4:0x1deef617
  403b1c:	mov    cl,0xa9
  403b1e:	mov    dl,0x87
  403b20:	fcmovb st,st(2)
  403b22:	cwde   
  403b23:	sub    cl,ah
  403b25:	and    DWORD PTR [edi+eiz*1+0x30],esi
  403b29:	ins    DWORD PTR es:[edi],dx
  403b2a:	aas    
  403b2b:	jae    0x403b4d
  403b2d:	or     DWORD PTR [esp+ebp*1+0x42],esi
  403b31:	and    BYTE PTR ds:0x199,cl
  403b36:	or     DWORD PTR [edx-0x7dc25990],eax
  403b3c:	xchg   edx,eax
  403b3d:	xor    eax,0x3bc67a0d
  403b42:	pop    ds
  403b43:	cdq    
  403b44:	add    esp,esp
  403b46:	fadd   st,st(2)
  403b48:	in     al,0xd
  403b4a:	test   BYTE PTR [ebp+0x546c052a],0xe3
  403b51:	ror    BYTE PTR [ebp-0x4a504bf3],0x8e
  403b58:	push   cs
  403b59:	in     eax,dx
  403b5a:	jp     0x403bbb
  403b5c:	test   eax,0x28febfab
  403b61:	inc    ebp
  403b62:	sti    
  403b63:	xchg   ebp,eax
  403b64:	std    
  403b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b66:	add    DWORD PTR [eax-0x6df80ec8],0x62844e6d
  403b70:	jae    0x403b36
  403b72:	js     0x403b3a
  403b74:	cmp    eax,DWORD PTR [eax+eiz*2-0x48]
  403b78:	mov    ebx,0x7191a409
  403b7d:	jle    0x403be3
  403b7f:	adc    esi,eax
  403b81:	dec    ecx
  403b82:	(bad)  
  403b83:	push   edx
  403b84:	adc    eax,0xadd04483
  403b89:	or     BYTE PTR [esi-0x260709b0],bl
  403b8f:	pop    ebp
  403b90:	mov    edi,0xc73b519c
  403b95:	add    DWORD PTR [edi+0x43],ebp
  403b98:	xor    ecx,eax
  403b9a:	out    0x85,eax
  403b9c:	jge    0x403bb2
  403b9e:	mov    BYTE PTR [eax-0x79],ch
  403ba1:	pop    ebp
  403ba2:	leavew 
  403ba4:	retf   
  403ba5:	or     BYTE PTR [ecx-0x68],0x7c
  403ba9:	dec    ecx
  403baa:	pop    ds
  403bab:	aad    0xbe
  403bad:	mov    esp,DWORD PTR [ecx+0x45dbb43d]
  403bb3:	pop    eax
  403bb4:	jg     0x403ba4
  403bb6:	retf   0xc48a
  403bb9:	scas   eax,DWORD PTR es:[edi]
  403bba:	jb     0x403b9e
  403bbc:	push   esp
  403bbd:	ror    BYTE PTR [edi-0x4bb30673],0x95
  403bc4:	jno    0x403c11
  403bc6:	jno    0x403b51
  403bc8:	push   cs
  403bc9:	(bad)  
  403bca:	and    eax,0x381716ce
  403bcf:	mov    al,ds:0x4cb5e6f1
  403bd4:	xchg   ecx,eax
  403bd5:	push   esi
  403bd6:	not    BYTE PTR [edi-0x60ef827e]
  403bdc:	rcl    BYTE PTR ds:0xe37a6514,cl
  403be2:	push   edi
  403be3:	xor    eax,0x4a1f0d69
  403be8:	leave  
  403be9:	pop    ds
  403bea:	or     al,0x7a
  403bec:	mov    WORD PTR [edx-0x3c5a1ae8],?
  403bf2:	cmp    BYTE PTR [ebp+0x4c1efaf1],bl
  403bf8:	jp     0x403bab
  403bfa:	stos   DWORD PTR es:[edi],eax
  403bfb:	sbb    DWORD PTR [eax-0x27c1dd8e],esi
  403c01:	mov    ch,BYTE PTR [ebp-0x47e9f107]
  403c07:	mov    ebp,ebx
  403c09:	mov    bl,ah
  403c0b:	cdq    
  403c0c:	xor    ch,BYTE PTR [ecx]
  403c0e:	push   esp
  403c0f:	arpl   WORD PTR [esi],sp
  403c11:	and    al,0x63
  403c13:	jbe    0x403c78
  403c15:	cdq    
  403c16:	pop    esp
  403c17:	mov    ah,0x5f
  403c19:	sar    ecx,1
  403c1b:	xchg   ch,dl
  403c1d:	call   0x3cc7:0x7c72c24e
  403c24:	repz pop ebp
  403c26:	aaa    
  403c27:	imul   eax,DWORD PTR [edx+0x78],0x9
  403c2b:	inc    edi
  403c2c:	sahf   
  403c2d:	push   DWORD PTR [esi+0x1519c3e4]
  403c33:	sub    dl,dh
  403c35:	or     esp,DWORD PTR [ebp-0x79c89c36]
  403c3b:	mov    al,ds:0x4acce072
  403c40:	mov    ebp,0x6a072c1a
  403c45:	inc    ecx
  403c46:	aaa    
  403c47:	cld    
  403c48:	out    0x7c,al
  403c4a:	(bad)  
  403c4b:	sbb    al,0x62
  403c4d:	push   0x9af7e8f1
  403c52:	add    al,0x21
  403c54:	inc    BYTE PTR [edi+ebp*1-0x3a]
  403c58:	cs iret 
  403c5a:	ins    BYTE PTR es:[edi],dx
  403c5b:	pop    ecx
  403c5c:	lods   eax,DWORD PTR ds:[esi]
  403c5d:	leave  
  403c5e:	or     BYTE PTR [ebp+0x58fd6c2b],dh
  403c64:	pop    eax
  403c65:	test   ecx,ebp
  403c67:	in     eax,0x65
  403c69:	mov    bl,0x46
  403c6b:	pop    es
  403c6c:	xchg   edi,eax
  403c6d:	mov    al,ds:0x10c2a154
  403c72:	xor    dh,BYTE PTR [ebx-0x24]
  403c75:	repnz mov ecx,0xb7292454
  403c7b:	mov    ah,0x17
  403c7d:	pushf  
  403c7e:	lods   eax,DWORD PTR ds:[esi]
  403c7f:	xchg   esi,eax
  403c80:	mov    al,0xfb
  403c82:	in     al,dx
  403c83:	in     eax,0x42
  403c85:	or     ebp,ebx
  403c87:	jp     0x403ca8
  403c89:	lds    ebp,FWORD PTR [esi+0x4]
  403c8c:	xchg   BYTE PTR [ebx],bh
  403c8e:	int    0xf5
  403c90:	mov    ebx,0xa4f1dae1
  403c95:	sbb    eax,0x2cbdd3f1
  403c9a:	sub    eax,0x43d5f7fb
  403c9f:	test   eax,0xd1d2e384
  403ca4:	and    al,BYTE PTR ds:0x7e1494ee
  403caa:	cld    
  403cab:	inc    esp
  403cac:	pop    edx
  403cad:	stos   DWORD PTR es:[edi],eax
  403cae:	add    bl,BYTE PTR [ebp-0x25]
  403cb1:	into   
  403cb2:	cmp    al,0x14
  403cb4:	sti    
  403cb5:	enter  0x3ed7,0x58
  403cb9:	pop    eax
  403cba:	or     BYTE PTR [ebx-0x322ca551],al
  403cc0:	aam    0xb0
  403cc2:	(bad)  
  403cc3:	xor    eax,0x43035be9
  403cc8:	mov    ecx,0x768a5a44
  403ccd:	push   0x74
  403ccf:	ret    0xe709
  403cd2:	in     al,dx
  403cd3:	lds    esi,FWORD PTR [ecx-0x7053da63]
  403cd9:	les    ebp,FWORD PTR [eax+eiz*2-0xc]
  403cdd:	and    bl,cl
  403cdf:	(bad)  
  403ce0:	and    al,0x6
  403ce2:	push   esi
  403ce3:	sti    
  403ce4:	cmc    
  403ce5:	jecxz  0x403c6c
  403ce7:	repnz dec esi
  403ce9:	sbb    ebx,DWORD PTR ds:0x8ca1354e
  403cef:	scas   al,BYTE PTR es:[edi]
  403cf0:	fiadd  WORD PTR [edi-0x75d5898b]
  403cf6:	sbb    ch,BYTE PTR [eax-0x74]
  403cf9:	inc    eax
  403cfa:	jg     0x403c8c
  403cfc:	ret    
  403cfd:	cmp    esi,DWORD PTR [edi+0xf]
  403d00:	loop   0x403cd5
  403d02:	and    dh,BYTE PTR [ebp-0x34]
  403d05:	ss dec ecx
  403d08:	icebp  
  403d09:	jae    0x403cb4
  403d0b:	enter  0x50d2,0x23
  403d0f:	in     al,dx
  403d10:	loope  0x403d59
  403d12:	sbb    BYTE PTR ds:0x4faa55fb,bl
  403d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d19:	loop   0x403d86
  403d1b:	fbld   TBYTE PTR ds:0xef73c644
  403d21:	pop    edx
  403d22:	and    al,0x62
  403d24:	int3   
  403d25:	jns    0x403cc2
  403d27:	adc    BYTE PTR [esi-0x5dea1f9b],dh
  403d2d:	sub    BYTE PTR [ebx-0x2a],al
  403d30:	adc    esi,DWORD PTR [ecx+0x6c]
  403d33:	ja     0x403d02
  403d35:	dec    ecx
  403d36:	call   0xe568311
  403d3b:	mov    edx,0x5260777a
  403d40:	imul   esi,DWORD PTR [ecx-0x3ccdb68e],0xd7145af5
  403d4a:	outs   dx,DWORD PTR ds:[esi]
  403d4b:	or     eax,0xf5e937b7
  403d50:	stos   DWORD PTR es:[edi],eax
  403d51:	pusha  
  403d52:	cmp    BYTE PTR [ecx],ah
  403d54:	dec    ecx
  403d55:	dec    esi
  403d56:	imul   BYTE PTR [ecx+0x12]
  403d59:	dec    eax
  403d5a:	loope  0x403d50
  403d5c:	mov    esi,0x925af384
  403d61:	inc    eax
  403d62:	and    eax,0x729e0734
  403d67:	stos   DWORD PTR es:[edi],eax
  403d68:	call   0x9f4:0x682552e1
  403d6f:	push   ds
  403d70:	and    ebx,ecx
  403d72:	and    al,0x7a
  403d74:	call   esp
  403d76:	iret   
  403d77:	stc    
  403d78:	or     DWORD PTR [edi+edx*8-0x49],esi
  403d7c:	shr    BYTE PTR [ebx-0x35],1
  403d7f:	fwait
  403d80:	push   ebx
  403d81:	stc    
  403d82:	pushf  
  403d83:	adc    eax,DWORD PTR [eax]
  403d85:	lahf   
  403d86:	rcr    BYTE PTR [esi+0x3a],1
  403d89:	push   esp
  403d8a:	repnz pop ss
  403d8c:	add    al,0x36
  403d8e:	mov    bh,0x99
  403d90:	scas   al,BYTE PTR es:[edi]
  403d91:	dec    ebx
  403d92:	jnp    0x403dfc
  403d94:	sbb    eax,DWORD PTR [ecx+0xa8670f7]
  403d9a:	pminsw mm6,QWORD PTR [edi]
  403d9d:	inc    ebp
  403d9e:	gs add ah,al
  403da1:	xor    eax,0xa4a4f3c2
  403da6:	in     eax,0x1d
  403da8:	retf   0x1373
  403dab:	inc    esi
  403dac:	jne    0x403dcb
  403dae:	xchg   ebp,eax
  403daf:	sub    al,0x31
  403db1:	sbb    DWORD PTR [ebx+eax*4-0x11f909d0],ecx
  403db8:	push   0x43
  403dba:	test   BYTE PTR [esi+eiz*4+0x5346fc7a],dl
  403dc1:	push   0xb5fb51e0
  403dc6:	pop    edi
  403dc7:	pusha  
  403dc8:	jbe    0x403e10
  403dca:	jle    0x403d6b
  403dcc:	enter  0x2d62,0x7d
  403dd0:	jl     0x403e25
  403dd2:	xor    BYTE PTR [edx],bl
  403dd4:	dec    edi
  403dd5:	dec    edi
  403dd6:	ret    0x843f
  403dd9:	push   ebx
  403dda:	scas   al,BYTE PTR es:[edi]
  403ddb:	mov    DWORD PTR [ebx+eax*8-0x101facd0],edx
  403de2:	aad    0x3d
  403de4:	cmp    DWORD PTR [eax-0x421a2ff9],0xfb6de73e
  403dee:	mov    ds:0xc67cf7f9,al
  403df3:	sahf   
  403df4:	mov    esi,DWORD PTR [edi-0x28]
  403df7:	sbb    bl,BYTE PTR [edx+0x6c]
  403dfa:	push   0xca65c597
  403dff:	out    0x23,al
  403e01:	and    eax,0x459b4aa3
  403e06:	(bad)  
  403e07:	dec    DWORD PTR [edi]
  403e09:	popa   
  403e0a:	pusha  
  403e0b:	lods   eax,DWORD PTR ds:[esi]
  403e0c:	adc    al,0xdf
  403e0e:	mov    ebx,0x5e0c8287
  403e13:	int    0x87
  403e15:	mov    WORD PTR [ebx+0x4649ba77],gs
  403e1b:	les    esi,FWORD PTR [edi+0xbda1a59]
  403e21:	inc    edx
  403e22:	daa    
  403e23:	pusha  
  403e24:	lock adc ebx,ebx
  403e27:	daa    
  403e28:	xor    DWORD PTR [ecx+0x1ca3761b],eax
  403e2e:	pusha  
  403e2f:	(bad)  [esi-0x4230c65a]
  403e35:	(bad)  
  403e36:	and    DWORD PTR [edx],eax
  403e38:	loopne 0x403e24
  403e3a:	fsubr  DWORD PTR [ebx+esi*4+0x5]
  403e3e:	mov    ebx,0x6958b80b
  403e43:	popf   
  403e44:	xchg   ebp,eax
  403e45:	in     al,0x1f
  403e47:	add    ah,BYTE PTR [eax+0x62f6779f]
  403e4d:	mov    ebx,ss
  403e4f:	ja     0x403e5b
  403e51:	mov    ds:0xf9942f5c,eax
  403e56:	mov    ebx,DWORD PTR [ebx]
  403e58:	push   esi
  403e59:	cwde   
  403e5a:	jg     0x403eab
  403e5c:	pusha  
  403e5d:	cmp    eax,0x200907e3
  403e62:	pop    ss
  403e63:	jmp    0x5005:0x10d8aa88
  403e6a:	imul   esi,DWORD PTR [edi],0xfbd94684
  403e70:	test   al,0x48
  403e72:	hlt    
  403e73:	mov    ds:0x22c0d5d0,eax
  403e78:	out    0x4f,al
  403e7a:	push   ebp
  403e7b:	pop    esp
  403e7c:	js     0x403ee8
  403e7e:	sub    al,0x74
  403e80:	or     eax,0x5b4a7309
  403e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e86:	add    ecx,DWORD PTR [ebp+esi*1-0x60b68ea]
  403e8d:	dec    esp
  403e8e:	jo     0x403e47
  403e90:	test   al,0xe0
  403e92:	lahf   
  403e93:	ins    BYTE PTR es:[edi],dx
  403e94:	dec    ecx
  403e95:	fist   WORD PTR [ebx]
  403e97:	pop    ecx
  403e98:	imul   ebp,DWORD PTR [esi+edx*8-0x317a3c52],0xe8f8a221
  403ea3:	pop    edi
  403ea4:	in     eax,0x2b
  403ea6:	or     DWORD PTR [ebp-0x68],eax
  403ea9:	xor    BYTE PTR [esi+eiz*4-0x33],ch
  403ead:	lock cli 
  403eaf:	mov    ebx,0xb3ea2c4e
  403eb4:	js     0x403eb2
  403eb6:	mov    ebx,0x6928f36
  403ebb:	nop
  403ebc:	pop    edx
  403ebd:	out    0x1a,eax
  403ebf:	mov    ch,0x6
  403ec1:	sub    ecx,DWORD PTR [ebp+0x73002601]
  403ec7:	pop    ss
  403ec8:	mov    edi,0xaf6fbc8d
  403ecd:	ss jb  0x403ea7
  403ed0:	in     al,dx
  403ed1:	das    
  403ed2:	adc    ebp,eax
  403ed4:	mov    dh,0x9a
  403ed6:	push   edx
  403ed7:	or     bh,BYTE PTR [ebx]
  403ed9:	cmp    DWORD PTR [ebp-0x1d],ebp
  403edc:	sbb    ah,BYTE PTR [ebx-0x51]
  403edf:	fs sahf 
  403ee1:	cdq    
  403ee2:	sahf   
  403ee3:	sti    
  403ee4:	out    dx,eax
  403ee5:	leave  
  403ee6:	mov    bl,0x32
  403ee8:	xor    cl,cl
  403eea:	neg    ecx
  403eec:	test   al,0x3c
  403eee:	add    edi,DWORD PTR [edx]
  403ef0:	push   ds
  403ef1:	stc    
  403ef2:	add    esi,DWORD PTR [edx-0x7e]
  403ef5:	jno    0x403f4d
  403ef7:	add    DWORD PTR [edx+0x2439bdbe],eax
  403efd:	push   DWORD PTR [ebx]
  403eff:	push   esi
  403f00:	sbb    eax,0xe4c4b790
  403f05:	jg     0x403ea2
  403f07:	aam    0x62
  403f09:	fnstsw WORD PTR [ebp+0x24]
  403f0c:	xor    BYTE PTR [eax-0x1e08eedc],bl
  403f12:	bound  ebp,QWORD PTR [ebx+eiz*4-0x4d]
  403f16:	gs xchg esi,eax
  403f18:	pop    ebp
  403f19:	mov    ebx,edx
  403f1b:	xchg   esp,eax
  403f1c:	inc    edx
  403f1d:	dec    ecx
  403f1e:	adc    al,0x5a
  403f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f21:	ss pop edx
  403f23:	jecxz  0x403fa0
  403f25:	or     eax,0x6bd5bce4
  403f2a:	imul   edx,ebp,0x209c1cd9
  403f30:	call   0xfdf92771
  403f35:	jne    0x403fa2
  403f37:	push   ecx
  403f38:	imul   ebx,DWORD PTR [edx],0x7e
  403f3b:	scas   eax,DWORD PTR es:[edi]
  403f3c:	lahf   
  403f3d:	call   0xe2b3:0xe9cbb323
  403f44:	pop    ebp
  403f45:	int3   
  403f46:	xchg   ebx,eax
  403f47:	int3   
  403f48:	dec    esi
  403f49:	add    ch,BYTE PTR [eax+0x3c]
  403f4c:	jns    0x403ecf
  403f4e:	rol    BYTE PTR [ebp-0x58d60e6e],0xda
  403f55:	jge    0x403fa7
  403f57:	icebp  
  403f58:	cmp    dh,BYTE PTR [eax*1+0x57798f84]
  403f5f:	(bad)  
  403f60:	scas   eax,DWORD PTR es:[edi]
  403f61:	jmp    0x7acc:0x53605107
  403f68:	mov    DWORD PTR [edx-0x69992963],esi
  403f6e:	cmp    cl,BYTE PTR [ebx]
  403f70:	cmp    bh,BYTE PTR [eax]
  403f72:	je     0x403fb9
  403f74:	lea    esp,[esi-0x6c]
  403f77:	popw   ss
  403f79:	mov    dl,0x16
  403f7b:	pop    ecx
  403f7c:	dec    esi
  403f7d:	adc    esi,DWORD PTR [ebx]
  403f7f:	jno    0x403f04
  403f81:	jecxz  0x403fc6
  403f83:	es mov eax,0xe49b4e36
  403f89:	dec    edi
  403f8a:	xor    esp,DWORD PTR [esi]
  403f8c:	jb     0x403fed
  403f8e:	mov    dh,0x77
  403f90:	jb     0x403f95
  403f92:	push   0x55b9f6b9
  403f97:	in     al,dx
  403f98:	mov    edi,0x5dfa38ae
  403f9d:	xor    esi,esp
  403f9f:	mov    al,ds:0x3fd5319f
  403fa4:	sub    al,0x9a
  403fa6:	and    al,0x58
  403fa8:	shr    DWORD PTR [ecx-0x76],0xeb
  403fac:	jnp    0x403fee
  403fae:	in     al,0xdf
  403fb0:	adc    al,0x5e
  403fb2:	jae    0x403ff0
  403fb4:	and    dh,BYTE PTR [ecx-0x703e7f47]
  403fba:	pop    es
  403fbb:	nop
  403fbc:	adc    eax,0x71abf24a
  403fc1:	mov    al,ds:0xcb18b682
  403fc6:	int    0x10
  403fc8:	sub    al,0x37
  403fca:	in     al,dx
  403fcb:	xor    DWORD PTR [esi-0x4156fe46],ebp
  403fd1:	mov    dh,0x67
  403fd3:	scas   eax,DWORD PTR es:[edi]
  403fd4:	sub    al,0x69
  403fd6:	mov    ch,dl
  403fd8:	inc    eax
  403fd9:	das    
  403fda:	adc    BYTE PTR [edx-0x1],al
  403fdd:	and    bl,dh
  403fdf:	xlat   BYTE PTR ds:[ebx]
  403fe0:	pop    ds
  403fe1:	lahf   
  403fe2:	aam    0x73
  403fe4:	shl    DWORD PTR [eax+0x76],cl
  403fe7:	icebp  
  403fe8:	or     ax,0x1d2b
  403fec:	dec    ecx
  403fed:	mov    DWORD PTR [ebx+ecx*2-0x3],ebx
  403ff1:	xchg   DWORD PTR [ebx+0x2e],ebp
  403ff4:	jmp    0xd6a1a12e
  403ff9:	dec    esi
  403ffa:	mov    esi,0x2eaeb768
  403fff:	ds sahf 
  404001:	mov    eax,ds:0xc99786f0
  404006:	cmp    eax,0xa76a10d
  40400b:	pop    ebp
  40400c:	daa    
  40400d:	pop    ebp
  40400e:	sahf   
  40400f:	imul   edi,DWORD PTR [eax+0x19],0x9caf5e9
  404016:	mov    ds:0x77b97a2e,eax
  40401b:	and    cl,BYTE PTR [edi-0x28]
  40401e:	push   esp
  40401f:	cmp    eax,0x651563c9
  404024:	test   eax,0x45a0ad14
  404029:	cmp    eax,0x57e9da19
  40402e:	mov    edx,0xeb2bde58
  404033:	loop   0x4040a9
  404035:	dec    esp
  404036:	outs   dx,DWORD PTR ds:[esi]
  404037:	mov    ecx,0xdc411f31
  40403c:	fsubr  QWORD PTR [esi]
  40403e:	lea    ebp,ds:0x1214220a
  404044:	in     eax,0x9d
  404046:	add    DWORD PTR [ecx],edx
  404048:	mov    dl,0xac
  40404a:	jnp    0x40401a
  40404c:	popaw  
  40404e:	(bad)  
  40404f:	adc    ah,bh
  404051:	mov    esp,0xb50d77fd
  404056:	inc    edi
  404057:	cmc    
  404058:	push   cs
  404059:	ins    DWORD PTR es:[edi],dx
  40405a:	cmc    
  40405b:	mov    al,ds:0x54458846
  404060:	repnz in eax,dx
  404062:	adc    eax,0xfb92b017
  404067:	xor    DWORD PTR [ecx+0x2092fb2f],ecx
  40406d:	lods   eax,DWORD PTR ds:[esi]
  40406e:	mov    esp,DWORD PTR [esi+0x23]
  404071:	adc    eax,0x663b7a53
  404076:	and    ch,dh
  404078:	jne    0x404076
  40407a:	paddd  mm2,QWORD PTR [eax-0xb]
  40407e:	int    0x34
  404080:	or     BYTE PTR [ebx-0x5e],al
  404083:	mov    cl,0x29
  404085:	pop    ebp
  404086:	stos   DWORD PTR es:[edi],eax
  404087:	int3   
  404088:	pop    esi
  404089:	loop   0x404091
  40408b:	xor    ch,BYTE PTR [ebx-0x5e]
  40408e:	int3   
  40408f:	mov    cl,BYTE PTR [ebp-0x501b0059]
  404095:	sub    ebx,esp
  404097:	lock mov ecx,0xb503ab93
  40409d:	pop    esi
  40409e:	outs   dx,DWORD PTR ds:[esi]
  40409f:	cmp    bh,bh
  4040a1:	mov    eax,ds:0x5cf4d13a
  4040a6:	and    eax,0x6140c451
  4040ab:	das    
  4040ac:	int3   
  4040ad:	hlt    
  4040ae:	mov    dl,BYTE PTR [edx-0x23]
  4040b1:	in     al,0xf0
  4040b3:	jge    0x40409c
  4040b5:	cmp    ebp,edx
  4040b7:	hlt    
  4040b8:	sub    eax,0x2e97f96
  4040bd:	xor    eax,0xa5dacd9c
  4040c2:	cmp    edi,ebp
  4040c4:	adc    al,0xb9
  4040c6:	aad    0x93
  4040c8:	jmp    0x6715f0b8
  4040cd:	loopne 0x4040e5
  4040cf:	int3   
  4040d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d1:	push   ebp
  4040d2:	push   0xffffffeb
  4040d4:	jp     0x4040e5
  4040d6:	dec    ebx
  4040d7:	dec    eax
  4040d8:	lahf   
  4040d9:	jmp    0xd414:0xca2ccc56
  4040e0:	or     al,0xbf
  4040e2:	pusha  
  4040e3:	into   
  4040e4:	rcl    BYTE PTR [ebx+edi*2-0x60],1
  4040e8:	js     0x404096
  4040ea:	das    
  4040eb:	clc    
  4040ec:	aaa    
  4040ed:	leave  
  4040ee:	adc    DWORD PTR [edx+0x80c7288],edx
  4040f4:	pop    es
  4040f5:	shl    BYTE PTR [edi+0x56],cl
  4040f8:	fwait
  4040f9:	xchg   BYTE PTR [ebx-0x3e85727],al
  4040ff:	or     ecx,ecx
  404101:	aas    
  404102:	pop    ss
  404103:	daa    
  404104:	cwde   
  404105:	or     ebp,eax
  404107:	push   cs
  404108:	jp     0x4040b1
  40410a:	sbb    dh,BYTE PTR [ebp-0x6c]
  40410d:	or     ecx,esi
  40410f:	sub    esi,DWORD PTR [edx+0x1dd3d658]
  404115:	loopne 0x404152
  404117:	scas   eax,DWORD PTR es:[edi]
  404118:	adc    ecx,esp
  40411a:	jg     0x40416a
  40411c:	mov    ?,eax
  40411e:	rol    DWORD PTR [ebx],cl
  404120:	(bad)  
  404121:	jl     0x404168
  404123:	lods   eax,DWORD PTR ds:[esi]
  404124:	cmp    eax,0xbc055be6
  404129:	inc    eax
  40412a:	adc    ecx,DWORD PTR [ecx]
  40412c:	test   BYTE PTR [ebx+0x18f03fed],0x3f
  404133:	cwde   
  404134:	cmp    DWORD PTR [ebp-0x63b984af],edi
  40413a:	sub    edi,esp
  40413c:	pop    es
  40413d:	dec    ebx
  40413e:	push   ecx
  40413f:	inc    eax
  404140:	jl     0x4040f7
  404142:	(bad)  
  404143:	out    dx,eax
  404144:	add    esp,ebp
  404146:	iret   
  404147:	js     0x40410d
  404149:	inc    esi
  40414a:	fs mov ebx,ebx
  40414d:	mov    ebp,0x5c56dbc4
  404152:	scas   eax,DWORD PTR es:[edi]
  404153:	dec    edi
  404154:	xchg   edx,eax
  404155:	pop    esp
  404156:	push   ss
  404157:	ror    DWORD PTR [esi+0x323b1cda],0xa1
  40415e:	loope  0x40419b
  404160:	out    dx,eax
  404161:	enter  0xfc64,0xe1
  404165:	or     edx,edx
  404167:	push   edx
  404168:	fist   WORD PTR [eax+ebp*2+0x41]
  40416c:	les    edi,FWORD PTR [eax-0x3d247f91]
  404172:	add    esi,eax
  404174:	sub    esp,DWORD PTR [edi-0x59]
  404177:	stos   DWORD PTR es:[edi],eax
  404178:	ror    DWORD PTR [ebx],0xec
  40417b:	(bad)  
  40417c:	call   0x546c421e
  404181:	int    0xd1
  404183:	shl    BYTE PTR [esi],0x3
  404186:	adc    eax,0xa7673b65
  40418b:	pop    ebx
  40418c:	push   eax
  40418d:	pop    edx
  40418e:	jne    0x404153
  404190:	(bad)  
  404191:	gs mov esi,gs
  404194:	jnp    0x4041cd
  404196:	jmp    0x40412f
  404198:	out    0xee,al
  40419a:	add    ebp,DWORD PTR [edx+0x6b]
  40419d:	std    
  40419e:	fnstsw WORD PTR [ecx+0x75]
  4041a1:	test   BYTE PTR [ebp+0x4a69f7c2],0xa1
  4041a8:	and    esp,DWORD PTR [esi+0x7df0e308]
  4041ae:	icebp  
  4041af:	and    DWORD PTR [ecx-0x10],0x5c
  4041b3:	scas   al,BYTE PTR es:[edi]
  4041b4:	clc    
  4041b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b6:	or     BYTE PTR [edi+0x5314185a],bh
  4041bc:	push   edx
  4041bd:	push   ebp
  4041be:	xor    al,0x1
  4041c0:	shl    BYTE PTR [ebx+0x5e],cl
  4041c3:	sbb    al,0x2f
  4041c5:	push   ebx
  4041c6:	pop    esi
  4041c7:	sbb    DWORD PTR [eax*2+0x3beab069],ecx
  4041ce:	jbe    0x40423f
  4041d0:	in     al,0x75
  4041d2:	dec    esp
  4041d3:	aaa    
  4041d4:	mov    ebp,0xa4419afa
  4041d9:	fwait
  4041da:	cld    
  4041db:	(bad)  
  4041dc:	in     al,0x65
  4041de:	sbb    BYTE PTR [edx+esi*4],dh
  4041e1:	pop    ds
  4041e2:	lods   al,BYTE PTR ds:[esi]
  4041e3:	inc    esp
  4041e4:	cmp    al,0x8b
  4041e6:	xor    BYTE PTR [eax+0x8b89468],ch
  4041ec:	push   ecx
  4041ed:	outs   dx,DWORD PTR ds:[esi]
  4041ee:	ins    DWORD PTR es:[edi],dx
  4041ef:	sbb    eax,0xdf43c737
  4041f4:	rcr    DWORD PTR [ebx+0x19],cl
  4041f7:	dec    edx
  4041f8:	retf   0x5eb7
  4041fb:	std    
  4041fc:	std    
  4041fd:	dec    eax
  4041fe:	pop    ebp
  4041ff:	dec    eax
  404200:	pop    edx
  404201:	test   ebp,ebp
  404203:	xor    BYTE PTR [esi+0x7c509822],cl
  404209:	inc    ebp
  40420a:	rol    ebx,cl
  40420c:	jge    0x4041fa
  40420e:	add    ebx,DWORD PTR [edi+0x3f0808ec]
  404214:	dec    eax
  404215:	mov    eax,ds:0xc01467e2
  40421a:	fs es mov dl,0xe0
  40421e:	pop    esi
  40421f:	mov    ah,0xc1
  404221:	adc    esi,ecx
  404223:	es retf 0xf174
  404227:	nop
  404228:	pusha  
  404229:	push   0xdf2046f6
  40422e:	jmp    0xd772:0x6454d0cb
  404235:	imul   DWORD PTR [ecx+0x1f]
  404238:	jl     0x404218
  40423a:	mov    ds:0xa6e849c5,eax
  40423f:	pushf  
  404240:	jne    0x404200
  404242:	jne    0x404290
  404244:	fldenv [edx+ebp*4]
  404247:	inc    esi
  404248:	test   DWORD PTR [ebp-0x1d],ecx
  40424b:	mov    bh,0x31
  40424d:	add    BYTE PTR [ebx],cl
  40424f:	(bad)  
  404250:	jmp    0xac24d468
  404255:	mov    ah,0x76
  404257:	dec    esi
  404258:	adc    al,BYTE PTR [ebx-0x5ab31a8d]
  40425e:	xor    esi,edi
  404260:	mov    ah,0x80
  404262:	test   BYTE PTR [edi],dh
  404264:	je     0x404231
  404266:	xor    BYTE PTR [edx],al
  404268:	cmp    al,0xc3
  40426a:	mov    eax,0xbf7f96ec
  40426f:	sbb    DWORD PTR [edi+0x18099142],eax
  404275:	jl     0x4042e0
  404277:	outs   dx,DWORD PTR ds:[esi]
  404278:	xchg   esp,eax
  404279:	mov    bh,0x31
  40427b:	dec    eax
  40427c:	xor    al,0x52
  40427e:	add    al,0x1a
  404280:	ds test al,0x36
  404283:	pop    ebx
  404284:	dec    ebx
  404285:	outs   dx,DWORD PTR ds:[esi]
  404286:	mov    ecx,0x19964309
  40428b:	das    
  40428c:	sbb    ebp,ecx
  40428e:	jge    0x4042c3
  404290:	popa   
  404291:	pusha  
  404292:	jg     0x404307
  404294:	ins    BYTE PTR es:[edi],dx
  404295:	add    al,0xad
  404297:	cli    
  404298:	mov    ds:0xcb1cf453,eax
  40429d:	mov    eax,ds:0x593ab123
  4042a2:	jae    0x404229
  4042a4:	cwde   
  4042a5:	outs   dx,BYTE PTR ds:[esi]
  4042a6:	stos   BYTE PTR es:[edi],al
  4042a7:	adc    esp,DWORD PTR [ebx+ecx*2]
  4042aa:	lds    ebx,FWORD PTR [ebp-0x48afedb6]
  4042b0:	pop    edi
  4042b1:	and    al,0xbf
  4042b3:	inc    esi
  4042b4:	mov    bl,0x7
  4042b6:	(bad)  
  4042b7:	jmp    0x40427e
  4042b9:	mov    bl,0x97
  4042bb:	nop
  4042bc:	dec    esi
  4042bd:	stc    
  4042be:	add    BYTE PTR [ecx+0x1d352622],bl
  4042c4:	shl    DWORD PTR [esi+edi*2-0x5a],0x3a
  4042c9:	dec    eax
  4042ca:	in     al,0xca
  4042cc:	fld    DWORD PTR ds:0xc7baf400
  4042d2:	cdq    
  4042d3:	push   0x29
  4042d5:	or     BYTE PTR [edi+0x40ad9e12],cl
  4042db:	lock inc eax
  4042dd:	sbb    BYTE PTR [ecx-0x6a27721f],dh
  4042e3:	hlt    
  4042e4:	rol    DWORD PTR [esi],0xc7
  4042e7:	jl     0x4042eb
  4042e9:	ins    BYTE PTR es:[edi],dx
  4042ea:	gs jbe 0x40429c
  4042ed:	sub    DWORD PTR [edx],edx
  4042ef:	lods   al,BYTE PTR ds:[esi]
  4042f0:	mov    dh,0x68
  4042f2:	enter  0xec0f,0xe
  4042f6:	cs and al,0xe8
  4042f9:	mov    cl,0x66
  4042fb:	pop    ebx
  4042fc:	mov    dh,0x14
  4042fe:	push   ss
  4042ff:	push   ds
  404300:	cmp    ch,BYTE PTR [eax]
  404302:	pop    ecx
  404303:	dec    eax
  404304:	cmp    BYTE PTR [ebx+0x7a588835],bl
  40430a:	adc    esi,DWORD PTR [ebx]
  40430c:	cli    
  40430d:	jge    0x404332
  40430f:	xlat   BYTE PTR ds:[ebx]
  404310:	outs   dx,BYTE PTR ds:[esi]
  404311:	cli    
  404312:	mov    fs,esp
  404314:	add    BYTE PTR [ebx-0x7e9ec9e3],bl
  40431a:	cli    
  40431b:	popf   
  40431c:	lods   eax,DWORD PTR ds:[esi]
  40431d:	adc    al,0x9c
  40431f:	cdq    
  404320:	retf   
  404321:	adc    DWORD PTR [esi-0x1a],esp
  404324:	out    dx,al
  404325:	cmp    eax,0x567fcd70
  40432a:	arpl   dx,si
  40432c:	loop   0x40439a
  40432e:	(bad)  [ebx-0x301bfd74]
  404334:	sahf   
  404335:	cmp    DWORD PTR [eax-0x4de63679],esi
  40433b:	fs push ss
  40433d:	mov    dl,0x7b
  40433f:	and    ebp,DWORD PTR [ecx-0x1]
  404342:	mov    ch,0xc
  404344:	repz mov dh,0xed
  404347:	js     0x404325
  404349:	mov    al,ds:0x19b25be9
  40434e:	(bad)  
  40434f:	adc    bl,BYTE PTR [edx]
  404351:	pop    esi
  404352:	leave  
  404353:	ror    ebp,cl
  404355:	sbb    cl,bl
  404357:	lods   eax,DWORD PTR ds:[esi]
  404358:	cdq    
  404359:	cli    
  40435a:	dec    ebp
  40435b:	ja     0x404367
  40435d:	mov    ah,BYTE PTR [ebp+ebx*1+0x20c93b28]
  404364:	out    0x15,al
  404366:	pop    eax
  404367:	int    0xd8
  404369:	mov    esi,0xc735be2f
  40436e:	inc    eax
  40436f:	xlat   BYTE PTR ds:[ebx]
  404370:	cmp    DWORD PTR [edi],0xffffff8b
  404373:	xor    eax,0xe73632de
  404378:	xchg   ebx,eax
  404379:	outs   dx,BYTE PTR ds:[esi]
  40437a:	lock mov ebx,0x77b1b99f
  404380:	or     DWORD PTR [esp+edi*1+0x3f2a791a],ebp
  404387:	jmp    0x404364
  404389:	jl     0x4043a4
  40438b:	mov    DWORD PTR [ebx+0x27],ecx
  40438e:	jecxz  0x404355
  404390:	inc    edi
  404391:	iret   
  404392:	cwde   
  404393:	mul    BYTE PTR [ebx]
  404395:	dec    edx
  404396:	and    BYTE PTR [ebp-0x10d105c3],dh
  40439c:	jl     0x40441d
  40439e:	(bad)  
  4043a0:	pop    ecx
  4043a1:	inc    eax
  4043a2:	hlt    
  4043a3:	das    
  4043a4:	pusha  
  4043a5:	jno    0x40433b
  4043a7:	cmp    eax,0x75b6411b
  4043ac:	add    ecx,DWORD PTR [edi]
  4043ae:	retf   
  4043af:	push   ebx
  4043b0:	daa    
  4043b1:	adc    DWORD PTR [ebp+edx*1+0x18],esp
  4043b5:	or     ch,BYTE PTR [ebp+edx*4-0x43]
  4043b9:	ins    BYTE PTR es:[edi],dx
  4043ba:	sbb    eax,0x8968b0c7
  4043bf:	jmp    0x2dae0842
  4043c4:	xor    ebx,eax
  4043c6:	pop    ds
  4043c7:	js     0x40436c
  4043c9:	or     bl,BYTE PTR [ebx]
  4043cb:	jp     0x4043ac
  4043cd:	push   edi
  4043ce:	ja     0x4043bf
  4043d0:	loope  0x40436e
  4043d2:	push   ecx
  4043d3:	ss (bad) 
  4043d5:	scas   al,BYTE PTR es:[edi]
  4043d6:	adc    ebx,edi
  4043d8:	out    0x41,eax
  4043da:	push   DWORD PTR [esi-0x3a]
  4043dd:	int    0x6e
  4043df:	sub    al,0xfe
  4043e1:	pop    edx
  4043e2:	outs   dx,BYTE PTR ds:[esi]
  4043e3:	(bad)  
  4043e5:	sbb    BYTE PTR [ecx+ecx*4+0x2feae2e0],dl
  4043ec:	add    BYTE PTR [esi+0x6c454cd0],0xaa
  4043f3:	push   ss
  4043f4:	xchg   ecx,eax
  4043f5:	int3   
  4043f6:	(bad)  
  4043f7:	scas   eax,DWORD PTR es:[edi]
  4043f8:	std    
  4043f9:	aas    
  4043fa:	dec    esi
  4043fb:	aad    0x72
  4043fd:	add    bh,BYTE PTR [edx+0x7a18ecba]
  404403:	dec    ebx
  404404:	pop    esp
  404405:	xchg   BYTE PTR [ecx],dl
  404407:	push   ebp
  404408:	xor    ebx,esi
  40440a:	jne    0x4043e5
  40440c:	ins    BYTE PTR es:[edi],dx
  40440d:	sbb    dl,al
  40440f:	xchg   edx,eax
  404410:	sub    al,0xc9
  404412:	inc    edx
  404413:	and    BYTE PTR [edx+ebx*1+0x1b],cl
  404417:	or     BYTE PTR [ebx-0x291eb038],dh
  40441d:	ja     0x404428
  40441f:	pop    ecx
  404420:	inc    edx
  404421:	jecxz  0x404479
  404423:	pop    ecx
  404424:	inc    eax
  404425:	sub    ebp,DWORD PTR [ecx]
  404427:	inc    esp
  404428:	ss inc ebp
  40442a:	jae    0x4043e1
  40442c:	dec    edi
  40442d:	lea    ebx,[eax-0x4]
  404430:	fdiv   DWORD PTR [edi+0x7f]
  404433:	dec    esi
  404434:	jg     0x4043bc
  404436:	and    al,0xf6
  404438:	test   BYTE PTR [edx],0xaf
  40443b:	push   edx
  40443c:	push   0xb224a25a
  404441:	aaa    
  404442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404443:	dec    ebp
  404444:	add    DWORD PTR [esi-0x595e3718],0x2d
  40444b:	shr    BYTE PTR [ebx+0x52fddf43],0xd4
  404452:	jmp    0x2a6ae520
  404457:	and    al,0x63
  404459:	scas   eax,DWORD PTR es:[edi]
  40445a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40445b:	(bad)  
  40445d:	push   edx
  40445e:	loope  0x404478
  404460:	jo     0x404484
  404462:	(bad)  
  404464:	aas    
  404465:	pusha  
  404466:	mov    gs:0xfdcadbdf,al
  40446c:	test   BYTE PTR [esi+0x5dab37c],bh
  404472:	inc    edx
  404473:	mov    ebp,DWORD PTR [ebx]
  404475:	xor    al,0xc3
  404477:	and    DWORD PTR [ebx-0x4a],edx
  40447a:	xor    DWORD PTR [eax-0x22],ebx
  40447d:	jns    0x4044d1
  40447f:	mov    ebx,0x1344b5d9
  404484:	lods   eax,DWORD PTR ds:[esi]
  404485:	loop   0x40444d
  404487:	add    BYTE PTR [esi+0x22],cl
  40448a:	out    0xe3,eax
  40448c:	pop    edi
  40448d:	mov    es,edx
  40448f:	mov    dl,0x67
  404491:	jecxz  0x404448
  404493:	mov    al,ds:0x1dd8826b
  404498:	mov    edi,0xd141f973
  40449d:	jae    0x404511
  40449f:	cwde   
  4044a0:	cdq    
  4044a1:	repz imul ebx,DWORD PTR [ebx-0x25],0xffffffc0
  4044a6:	test   eax,0x343513cd
  4044ab:	adc    al,0xfe
  4044ad:	add    DWORD PTR [edi-0x3fc38564],edx
  4044b3:	mov    ah,0xf2
  4044b5:	gs xchg ebp,eax
  4044b7:	add    DWORD PTR [ebx-0x19],ebx
  4044ba:	pop    es
  4044bb:	and    DWORD PTR [edx+0x31],0x6e
  4044bf:	icebp  
  4044c0:	fisttp QWORD PTR [edi]
  4044c2:	das    
  4044c3:	out    dx,eax
  4044c4:	ror    ecx,cl
  4044c6:	mov    esi,0xfe682435
  4044cb:	sbb    BYTE PTR [ecx+0x32],dl
  4044ce:	in     eax,0xb3
  4044d0:	pop    edx
  4044d1:	xor    al,0xf3
  4044d3:	mov    esi,0x3e6508fb
  4044d8:	xchg   esi,eax
  4044d9:	adc    eax,0xf3e1184
  4044de:	and    dh,cl
  4044e0:	popw   ds
  4044e2:	xchg   ebp,eax
  4044e3:	aaa    
  4044e4:	cvttps2pi mm3,QWORD PTR [eax+0x0]
  4044e8:	adc    eax,DWORD PTR [esi-0x5da222d1]
  4044ee:	jp     0x404554
  4044f0:	xlat   BYTE PTR ds:[ebx]
  4044f1:	xor    esi,DWORD PTR [ecx+eiz*4+0x53]
  4044f5:	dec    esp
  4044f6:	jb     0x404548
  4044f8:	jae    0x404508
  4044fa:	inc    ebp
  4044fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044fc:	or     ah,BYTE PTR [ebx+0x49207d94]
  404502:	dec    edi
  404503:	mov    edx,0x55476e0c
  404508:	in     eax,0x3a
  40450a:	sbb    edi,eax
  40450c:	gs push 0x77
  40450f:	popa   
  404510:	loopne 0x4044f1
  404512:	pop    ebx
  404513:	out    dx,al
  404514:	loop   0x4044f1
  404516:	ret    0x1ddb
  404519:	mov    bh,BYTE PTR [eax+0x1e090c1c]
  40451f:	daa    
  404520:	xor    BYTE PTR [ecx-0x5c4f9183],ah
  404526:	aaa    
  404527:	jmp    0x4044ff
  404529:	call   0xbb8a:0xd98571f2
  404530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404531:	jnp    0x4044e1
  404533:	aam    0x39
  404535:	fisub  DWORD PTR ds:0x6291b694
  40453b:	lock sti 
  40453d:	mov    eax,0x385f1c8d
  404542:	mov    ecx,0x7ecee7e4
  404547:	cmp    dh,ah
  404549:	data16 fisub WORD PTR [ecx]
  40454c:	shl    ah,0xe5
  40454f:	sar    DWORD PTR [ecx+ebx*1-0x7a73264f],0xf
  404557:	sub    bl,BYTE PTR [esi]
  404559:	dec    edx
  40455a:	out    0x60,al
  40455c:	enter  0x1cfe,0x94
  404560:	sti    
  404561:	pop    esp
  404562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404563:	in     al,dx
  404564:	jmp    0xb29c9faf
  404569:	add    dl,BYTE PTR [edi-0x65]
  40456c:	sub    BYTE PTR [eax],dh
  40456e:	in     al,dx
  40456f:	or     dh,BYTE PTR ds:[edi-0x3e9c0f31]
  404576:	pop    es
  404577:	mov    esi,0xc3f43178
  40457c:	icebp  
  40457d:	adc    DWORD PTR [ecx-0x6a08c34e],ebx
  404583:	rcr    DWORD PTR [esi+0x14bd4951],0xca
  40458a:	jg     0x404578
  40458c:	jae    0x4045a2
  40458e:	repnz adc eax,0x9afe152b
  404594:	xchg   esp,eax
  404595:	cmc    
  404596:	dec    ebx
  404597:	dec    ebx
  404598:	sbb    eax,0xaa6a027c
  40459d:	ret    0x4952
  4045a0:	fisub  DWORD PTR [edi+0xc]
  4045a3:	mov    ch,0x62
  4045a5:	lds    esp,FWORD PTR [eax+0x22c5f3c5]
  4045ab:	(bad)  
  4045ad:	scas   al,BYTE PTR es:[edi]
  4045ae:	enter  0xb85e,0x43
  4045b2:	int    0x51
  4045b4:	fwait
  4045b5:	aas    
  4045b6:	jb     0x404569
  4045b8:	data16 ja 0x4045a7
  4045bb:	aad    0xb
  4045bd:	fiadd  DWORD PTR [edx-0x75]
  4045c0:	pop    eax
  4045c1:	jo     0x404612
  4045c3:	es aaa 
  4045c5:	sub    eax,edi
  4045c7:	adc    edi,edi
  4045c9:	das    
  4045ca:	mov    edx,0x712d6edd
  4045cf:	add    BYTE PTR [ebp+0x64413ae9],al
  4045d5:	call   0x29ebeed7
  4045da:	mov    eax,0xc2199557
  4045df:	imul   edi,DWORD PTR [ebp-0x65c9d7b0],0xfcfff74f
  4045e9:	inc    esp
  4045ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045eb:	sahf   
  4045ec:	out    0xff,al
  4045ee:	xor    ah,BYTE PTR [edi-0x63a19252]
  4045f4:	pop    ecx
  4045f5:	mov    ds:0x5e07e474,eax
  4045fa:	pop    ebx
  4045fb:	lahf   
  4045fc:	js     0x404580
  4045fe:	ficomp DWORD PTR [esi]
  404600:	stos   DWORD PTR es:[edi],eax
  404601:	jl     0x404601
  404603:	inc    esi
  404604:	addr16 dec esi
  404606:	(bad)
  40460a:	popa   
  40460b:	lods   al,BYTE PTR ds:[esi]
  40460c:	retf   0x2de9
  40460f:	cmp    BYTE PTR [edi+eiz*1],dh
  404612:	push   ecx
  404613:	or     edi,ecx
  404615:	enter  0xf70b,0x3c
  404619:	shl    DWORD PTR [edx+0x3b266858],1
  40461f:	cli    
  404620:	push   eax
  404621:	mov    DWORD PTR [esi+0x6b5ae94a],0x75cd7877
  40462b:	arpl   WORD PTR [ecx],cx
  40462d:	cld    
  40462e:	mov    al,0x9f
  404630:	rol    BYTE PTR [edi-0x75],cl
  404633:	das    
  404634:	shr    dh,1
  404636:	ds in  al,0x8e
  404639:	test   al,0x58
  40463b:	jbe    0x4046ab
  40463d:	popf   
  40463e:	lock mov al,0x5f
  404641:	jg     0x40464d
  404643:	je     0x404694
  404645:	or     edi,eax
  404647:	test   DWORD PTR [edx+0x78eab177],ebp
  40464d:	or     BYTE PTR [ecx+0x2a792058],dh
  404653:	fistp  QWORD PTR [edi-0x57f21e9d]
  404659:	adc    eax,0x8c551254
  40465e:	dec    edx
  40465f:	pop    ebp
  404660:	fadd   st(7),st
  404662:	das    
  404663:	mov    ebp,0x449e1e98
  404668:	jnp    0x4045ff
  40466a:	push   ebx
  40466b:	pop    ds
  40466c:	cs in  al,0x9f
  40466f:	mov    dh,0x5e
  404671:	fisub  DWORD PTR [edi+0x671c097c]
  404677:	cmp    eax,0xa8eeda0a
  40467c:	push   esi
  40467d:	sbb    eax,0x59d259b
  404682:	mov    eax,ds:0x349e21ce
  404687:	cmp    DWORD PTR [ecx],ebp
  404689:	and    dl,al
  40468b:	mov    ah,0x79
  40468d:	imul   ebx,eax,0x2db803e
  404693:	push   cs
  404694:	and    eax,0x69177669
  404699:	and    edi,DWORD PTR [ebp+0x34]
  40469c:	ret    
  40469d:	dec    ebp
  40469e:	adc    ebx,DWORD PTR [ebp+0xc]
  4046a1:	in     ax,0x62
  4046a4:	mov    dh,0xfe
  4046a6:	jl     0x404715
  4046a8:	icebp  
  4046a9:	retf   
  4046aa:	outs   dx,DWORD PTR ds:[esi]
  4046ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046ac:	push   0xffffffb7
  4046ae:	leave  
  4046af:	cli    
  4046b0:	ss jae 0x40467d
  4046b3:	pusha  
  4046b4:	mov    BYTE PTR [ebp+0x15d984c1],dh
  4046ba:	js     0x40465b
  4046bc:	fld    QWORD PTR [ecx-0x24]
  4046bf:	sub    eax,0x17af2689
  4046c4:	in     al,0x63
  4046c6:	adc    esi,ebx
  4046c8:	mov    ebp,DWORD PTR [edx+0x633b6005]
  4046ce:	sbb    eax,DWORD PTR [eax]
  4046d0:	xchg   DWORD PTR [ebx+0x2f0a5e5d],ebp
  4046d6:	and    ebp,DWORD PTR [edi]
  4046d8:	xchg   edx,eax
  4046d9:	imul   esi,DWORD PTR [esp+edi*2],0xffffffa3
  4046dd:	stc    
  4046de:	in     eax,dx
  4046df:	mov    dl,0xea
  4046e1:	mov    DWORD PTR [ecx+0x39],esp
  4046e4:	or     eax,0x893dbd41
  4046e9:	jecxz  0x4046ed
  4046eb:	push   ecx
  4046ec:	mov    ecx,ds
  4046ee:	push   ds
  4046ef:	jg     0x4046fb
  4046f1:	shl    DWORD PTR [ebx+0x66],0xfa
  4046f5:	pop    esp
  4046f6:	les    edx,FWORD PTR [esi-0x4a5465c2]
  4046fc:	and    BYTE PTR [ecx-0x275b92ae],ch
  404702:	or     edi,esi
  404704:	retf   
  404705:	enter  0x1e44,0x8c
  404709:	mov    esp,0x6032ed95
  40470e:	int    0x8d
  404710:	jne    0x40475c
  404712:	jno    0x404767
  404714:	lods   al,BYTE PTR ds:[esi]
  404715:	pop    ss
  404716:	(bad)  
  404717:	imul   ebx,DWORD PTR [ebx-0x24],0x4c
  40471b:	in     al,0x27
  40471d:	inc    ebp
  40471e:	repz std 
  404720:	add    DWORD PTR [edx-0x40f4c19d],esp
  404726:	imul   esp,DWORD PTR [ebx+esi*2],0x5
  40472a:	or     BYTE PTR [eax],dh
  40472c:	aaa    
  40472d:	dec    edx
  40472e:	sbb    eax,ecx
  404730:	xor    BYTE PTR [eax+edx*4+0x7],dl
  404734:	leave  
  404735:	mov    ss,WORD PTR [eax]
  404737:	sub    ecx,DWORD PTR [ecx]
  404739:	inc    esi
  40473a:	and    al,0xae
  40473c:	std    
  40473d:	aas    
  40473e:	cld    
  40473f:	div    DWORD PTR [ebp+0x45d0023c]
  404745:	xor    ecx,eax
  404747:	xchg   esi,eax
  404748:	sbb    BYTE PTR [edi+0x1dae584c],cl
  40474e:	sub    DWORD PTR [eax+0x1fd0ed77],edi
  404754:	in     eax,dx
  404755:	dec    edx
  404756:	lock jle 0x4047bc
  404759:	and    al,0x31
  40475b:	in     al,dx
  40475c:	call   0x30e93201
  404761:	and    ch,BYTE PTR [ebx-0x53a51e1b]
  404767:	cdq    
  404768:	into   
  404769:	mov    bh,0xdc
  40476b:	add    ecx,DWORD PTR [eax+0x64e848d2]
  404771:	ds jmp 0xce0f132b
  404777:	(bad)
  40477b:	inc    ecx
  40477c:	(bad)  
  40477d:	push   cs
  40477e:	push   edi
  40477f:	jae    0x404800
  404781:	adc    eax,DWORD PTR [esp+eiz*8]
  404784:	bound  edx,QWORD PTR [ebx+0x3265e84b]
  40478a:	jnp    0x404772
  40478c:	xchg   esi,eax
  40478d:	call   0xb77b:0x8eba3438
  404794:	cmp    al,0xd4
  404796:	cmp    bl,cl
  404798:	inc    edi
  404799:	pop    ss
  40479a:	push   cs
  40479b:	push   ebx
  40479c:	push   esi
  40479d:	lds    ecx,FWORD PTR ds:0xf1941208
  4047a3:	inc    edx
  4047a4:	sbb    al,0xe1
  4047a6:	or     DWORD PTR [edx-0x23],0xca66b1e3
  4047ad:	pop    ebp
  4047ae:	call   0x7423:0x5bfbf887
  4047b5:	inc    esi
  4047b6:	icebp  
  4047b7:	sahf   
  4047b8:	retf   
  4047b9:	add    BYTE PTR [esi-0x44],cl
  4047bc:	mov    esp,0xc99a9fa5
  4047c1:	push   eax
  4047c2:	jmp    0x2ac531f1
  4047c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047c8:	or     esp,DWORD PTR [esp+ebx*1-0x540b9d3f]
  4047cf:	rol    BYTE PTR ds:0x4617ecdf,1
  4047d5:	jmp    0x7b231fa7
  4047da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047db:	je     0x404857
  4047dd:	mov    bl,BYTE PTR [ebp+0x4f94c228]
  4047e3:	add    eax,0xca026ed5
  4047e8:	(bad)  
  4047e9:	stos   BYTE PTR es:[edi],al
  4047ea:	adc    DWORD PTR [ecx],esi
  4047ec:	mov    ebx,0x279dce24
  4047f1:	retf   
  4047f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f3:	in     al,0x34
  4047f5:	js     0x4047bc
  4047f7:	jmp    0x14156615
  4047fc:	fcomp  DWORD PTR [edx-0x67]
  4047ff:	in     eax,0x2d
  404801:	adc    dh,ch
  404803:	(bad)  [ecx]
  404805:	fcom   QWORD PTR [ebx+0x1f]
  404808:	ja     0x4047ce
  40480a:	imul   eax,eax,0xd2aeb2c1
  404810:	mov    ch,0xb1
  404812:	arpl   WORD PTR [edi],dx
  404814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404815:	xor    al,BYTE PTR [ebp+0x3eda3eef]
  40481b:	dec    ecx
  40481c:	sub    eax,0x111fde15
  404821:	mov    dl,0x80
  404823:	adc    BYTE PTR [eax],dl
  404825:	mov    ecx,0xf123f551
  40482a:	jl     0x404810
  40482c:	(bad)
  404830:	(bad)  
  404831:	lock adc al,bl
  404834:	cwde   
  404835:	adc    DWORD PTR [bx+0x55],esi
  404839:	retf   
  40483a:	lods   al,BYTE PTR ds:[esi]
  40483b:	fs jb  0x404849
  40483e:	enter  0xf6f6,0x2a
  404842:	mov    DWORD PTR [ecx+0x171a91bb],ebp
  404848:	pop    es
  404849:	xor    DWORD PTR [edi-0x1],edx
  40484c:	or     DWORD PTR [ebx+0x397e85ba],edi
  404852:	dec    ebx
  404853:	lods   eax,DWORD PTR ds:[esi]
  404854:	sub    cl,dl
  404856:	test   eax,0x22100d43
  40485b:	xchg   edx,eax
  40485c:	add    eax,0x541cc36e
  404861:	push   ebp
  404862:	cmp    BYTE PTR [ebp+0x64],dl
  404865:	call   0xb0a3853e
  40486a:	pop    ss
  40486b:	in     al,0x9a
  40486d:	and    bh,bl
  40486f:	cwde   
  404870:	mov    ebp,0x7baffdd9
  404875:	loop   0x40485c
  404877:	cmp    ch,BYTE PTR [esi]
  404879:	ja     0x4048e5
  40487b:	aam    0x11
  40487d:	fisubr WORD PTR [edi]
  40487f:	dec    WORD PTR [ecx-0x48]
  404883:	adc    BYTE PTR [esi-0x1d],cl
  404886:	jmp    0xf70b:0x5e92eb88
  40488d:	outs   dx,BYTE PTR ds:[esi]
  40488e:	pop    ebx
  40488f:	fcom   QWORD PTR ds:0x639e4ade
  404895:	jmp    0x5cde:0xf830c8b
  40489c:	mov    esp,0xcc50edfc
  4048a1:	xchg   BYTE PTR [ebp+esi*1-0x76c4172c],bh
  4048a8:	ror    DWORD PTR [esi],0xd8
  4048ab:	mov    esp,DWORD PTR [edx+0x1a0c423d]
  4048b1:	push   cs
  4048b2:	jns    0x40488e
  4048b4:	cs mov al,0x74
  4048b7:	jmp    0x513734dd
  4048bc:	mov    bh,0x3b
  4048be:	mov    esp,0x1d7f66f6
  4048c3:	mov    ch,0xe9
  4048c5:	rcl    al,1
  4048c7:	test   al,0xaf
  4048c9:	push   ebx
  4048ca:	dec    ebp
  4048cb:	bound  esi,QWORD PTR [eax-0x34]
  4048ce:	pop    ebp
  4048cf:	jbe    0x404886
  4048d1:	xchg   esp,eax
  4048d2:	mov    edi,ecx
  4048d4:	cdq    
  4048d5:	or     eax,0x89e49e73
  4048da:	adc    DWORD PTR [edi-0x78],0xffffffee
  4048de:	pop    ss
  4048df:	sbb    al,0x99
  4048e2:	jge    0x40492e
  4048e4:	imul   edi,DWORD PTR [ebp-0x1ab21039],0x2f56e538
  4048ee:	or     DWORD PTR [ebp+esi*8+0x5510c094],edx
  4048f5:	mov    ah,0x1c
  4048f7:	or     al,BYTE PTR [ebp+ebx*2+0x21e619e6]
  4048fe:	dec    esp
  4048ff:	test   eax,0xb39fd269
  404904:	repz out 0x39,eax
  404907:	fst    QWORD PTR [ecx+0x59]
  40490a:	mov    cl,0xf2
  40490c:	out    dx,al
  40490d:	adc    esp,DWORD PTR [esi]
  40490f:	pop    eax
  404910:	push   0x6f
  404912:	popf   
  404913:	(bad)  
  404914:	mov    ebx,0xc3795f05
  404919:	sbb    al,0x1c
  40491b:	jl     0x4048f1
  40491d:	pop    esp
  40491e:	ret    
  40491f:	in     al,0x44
  404921:	mov    esp,0xcf8ab748
  404926:	sub    edx,0xed0fc8f6
  40492c:	bound  esi,QWORD PTR [edx+ebx*1]
  40492f:	jg     0x4048d3
  404931:	mov    dl,0xb8
  404933:	fistp  QWORD PTR [ebx+0x41]
  404936:	(bad)  
  404937:	cmp    eax,0xd970b3a1
  40493c:	mov    bh,0xd9
  40493e:	cmp    ebp,DWORD PTR [eax-0x6c]
  404941:	jmp    0x4049b9
  404943:	xchg   edi,eax
  404944:	adc    bh,ch
  404946:	test   al,0xeb
  404948:	(bad)  
  404949:	dec    ebx
  40494a:	inc    edi
  40494b:	pop    esp
  40494c:	mov    bh,0xb0
  40494e:	or     DWORD PTR [edi],esi
  404950:	in     al,dx
  404951:	pop    esi
  404952:	push   ds
  404953:	jmp    0x404989
  404955:	inc    esi
  404956:	mov    eax,ds:0x2e425b69
  40495b:	mov    esi,0x9fa56ed4
  404960:	sahf   
  404961:	das    
  404962:	or     al,0x9d
  404964:	jg     0x40492d
  404966:	ret    
  404967:	mov    al,0x8e
  404969:	push   ebp
  40496a:	mov    ds:0xc9d0a4ed,eax
  40496f:	sbb    al,0x85
  404971:	fs push esi
  404973:	imul   edi,DWORD PTR [esi],0xffffffa9
  404976:	xor    DWORD PTR [esp+edi*8+0x50b9d47a],edx
  40497d:	ret    
  40497e:	lods   eax,DWORD PTR ds:[esi]
  40497f:	xor    esp,edx
  404981:	pop    edx
  404982:	xchg   esi,eax
  404983:	sub    ch,BYTE PTR [ecx-0x380da36d]
  404989:	xchg   ecx,eax
  40498a:	sub    DWORD PTR [eax],0xcb0781d8
  404990:	outs   dx,BYTE PTR ds:[esi]
  404991:	scas   al,BYTE PTR es:[edi]
  404992:	adc    BYTE PTR [ecx+0x24],ch
  404995:	mov    dl,BYTE PTR [esi-0x7f]
  404998:	into   
  404999:	lock add BYTE PTR fs:[eax],al
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0x6b7ad625
  4056ec:	cli    
  4056ed:	rcr    DWORD PTR [edi+0x7c],cl
  4056f0:	jl     0x40573c
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	xchg   edi,eax
  4056f6:	scas   al,BYTE PTR es:[edi]
  4056f7:	cmp    bh,BYTE PTR [edx-0x11d4fa38]
  4056fd:	xor    dl,al
  4056ff:	pop    ss
  405700:	mov    ebx,0x1e33c9f4
  405705:	cmp    ch,BYTE PTR [edx-0x5c]
  405708:	loope  0x405744
  40570a:	(bad)
  40570d:	pop    esi
  40570e:	cmp    bh,BYTE PTR [ecx]
  405710:	and    ebx,DWORD PTR [ebx+ecx*4]
  405713:	imul   ebp,DWORD PTR [edi-0x5c],0x69
  405717:	inc    ecx
  405718:	sar    BYTE PTR [eax+edx*4-0x2f37e5e0],0x5d
  405720:	inc    ebx
  405721:	pusha  
  405722:	icebp  
  405723:	or     al,0xe6
  405725:	shl    DWORD PTR [ebx-0x5871f775],cl
  40572b:	jnp    0x405720
  40572d:	jmp    0x4056bd
  40572f:	xor    ch,BYTE PTR [ecx*1+0x14ec062f]
  405736:	pop    ds
  405737:	loope  0x40579b
  405739:	jmp    0x40575e
  40573b:	jne    0x405730
  40573d:	stc    
  40573e:	jnp    0x4057b4
  405740:	inc    esi
  405741:	sbb    DWORD PTR [ebx-0x6d],ebp
  405744:	data16 adc ah,BYTE PTR [edx-0xa]
  405748:	ins    BYTE PTR es:[edi],dx
  405749:	outs   dx,BYTE PTR ds:[esi]
  40574a:	ins    DWORD PTR es:[edi],dx
  40574b:	loope  0x40577b
  40574d:	and    ebx,esp
  40574f:	fisttp DWORD PTR [edi-0x3f]
  405752:	xor    eax,0x125eacf5
  405757:	add    bh,BYTE PTR [edi-0x4b1c781]
  40575d:	mov    eax,0x819adabf
  405762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405763:	les    ebp,FWORD PTR [ecx+esi*4+0x24]
  405767:	lea    ecx,[ecx+0x46d514e0]
  40576d:	cdq    
  40576e:	mov    dl,0x7d
  405770:	jae    0x4057a7
  405772:	out    0x9b,al
  405774:	pop    ds
  405775:	cmp    al,0xcd
  405777:	adc    dh,BYTE PTR [ebx-0x26b19b1a]
  40577d:	repnz mov bh,0x3
  405780:	push   edx
  405781:	mov    ah,0x3b
  405783:	add    edi,edx
  405785:	pop    esp
  405786:	sbb    DWORD PTR [ebp-0xb],esp
  405789:	or     edx,DWORD PTR [esi-0x5ff26b76]
  40578f:	mov    bh,0xc0
  405791:	enter  0xf547,0x47
  405795:	int3   
  405796:	rol    DWORD PTR [eax-0x53652dad],1
  40579c:	mov    cl,0x4a
  40579e:	push   0xffffff9c
  4057a0:	sub    bl,ah
  4057a2:	and    al,0x41
  4057a4:	bound  ebx,QWORD PTR [ebx-0x1f]
  4057a7:	call   0x25611437
  4057ac:	test   BYTE PTR [edi],ch
  4057ae:	dec    edx
  4057af:	inc    eax
  4057b0:	outs   dx,DWORD PTR ds:[esi]
  4057b1:	inc    edi
  4057b2:	inc    eax
  4057b3:	mov    eax,DWORD PTR [eax-0x21]
  4057b6:	fcomp  DWORD PTR [ebx+0x24]
  4057b9:	pushf  
  4057ba:	sub    DWORD PTR [eax+0x174601fb],ecx
  4057c0:	stc    
  4057c1:	sub    al,0x9
  4057c3:	retf   0x87a6
  4057c6:	mov    es,WORD PTR [esi+esi*2]
  4057c9:	fs jecxz 0x40581b
  4057cc:	cmp    ecx,ecx
  4057ce:	jns    0x40584c
  4057d0:	dec    ecx
  4057d1:	push   ss
  4057d2:	stc    
  4057d3:	push   eax
  4057d4:	pop    es
  4057d5:	cmp    ch,BYTE PTR [esi]
  4057d7:	fistp  WORD PTR [ebp-0x45]
  4057da:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4057dc:	sub    DWORD PTR ss:[edx+0x30],edx
  4057e0:	scas   eax,DWORD PTR es:[edi]
  4057e1:	inc    ebp
  4057e2:	das    
  4057e3:	loope  0x405807
  4057e5:	mov    esp,0x1eb00ce9
  4057ea:	pop    eax
  4057eb:	cli    
  4057ec:	ds jbe 0x405815
  4057ef:	mov    edx,0x5412d6c8
  4057f4:	push   cs
  4057f5:	and    bh,ch
  4057f7:	aad    0x46
  4057f9:	jne    0x405787
  4057fb:	cmp    eax,DWORD PTR [edi+0x54]
  4057fe:	xlat   BYTE PTR ds:[ebx]
  4057ff:	mov    ch,0x16
  405801:	inc    ebp
  405802:	ror    ch,0x9a
  405805:	xlat   BYTE PTR ds:[ebx]
  405806:	ss int 0x84
  405809:	lea    esi,[ebx-0x763b1dcb]
  40580f:	cmp    al,0x52
  405811:	lods   eax,DWORD PTR ds:[esi]
  405812:	jno    0x405813
  405814:	ret    0x4be1
  405817:	fild   WORD PTR [ebx-0x6cbf00f6]
  40581d:	icebp  
  40581e:	cmp    DWORD PTR [ebp+0xa],0x4ae3e703
  405825:	mov    edi,DWORD PTR [ebx]
  405827:	pop    edi
  405828:	mov    bh,0xb0
  40582a:	sub    BYTE PTR [edi+0x3e274aed],dh
  405830:	out    dx,al
  405831:	cmp    ah,0xd
  405834:	add    al,0x6a
  405836:	xor    BYTE PTR [eax+0x6],0x4c
  40583a:	sbb    BYTE PTR [ebp-0x65d8d5dd],bl
  405840:	(bad)
  405843:	pop    esi
  405844:	or     BYTE PTR [eax+0x430cba3e],cl
  40584a:	popf   
  40584b:	(bad)
  40584e:	in     eax,dx
  40584f:	xor    ecx,DWORD PTR [eax-0x175d48e6]
  405855:	or     eax,0x18edea8a
  40585a:	cdq    
  40585b:	push   cs
  40585c:	jl     0x405897
  40585e:	ret    0x9f9f
  405861:	mov    esi,0xc3271630
  405866:	mov    ebp,0xab1b8ed3
  40586b:	xor    ebx,esi
  40586d:	pop    eax
  40586e:	cmc    
  40586f:	jns    0x4058b7
  405871:	inc    ebp
  405872:	les    edx,FWORD PTR [edx+0x49]
  405875:	push   es
  405876:	inc    esi
  405877:	or     al,0x61
  405879:	push   ss
  40587a:	test   DWORD PTR [edi+0x340660ba],esi
  405880:	pop    ebx
  405881:	dec    ebx
  405882:	inc    esp
  405883:	mov    eax,ds:0xf12a7e4b
  405888:	cmp    dl,BYTE PTR cs:[edi]
  40588b:	fld    QWORD PTR [eax]
  40588d:	and    DWORD PTR [ebp*1+0x53ea17be],esp
  405894:	icebp  
  405895:	jg     0x40590a
  405897:	mov    esi,DWORD PTR [ebx]
  405899:	mov    dh,0x95
  40589b:	push   ebx
  40589c:	and    esp,0x928d387d
  4058a2:	mov    edi,0x2770e0cb
  4058a7:	in     eax,dx
  4058a8:	jno    0x405839
  4058aa:	mov    ch,0xc6
  4058ac:	loope  0x4058d7
  4058ae:	dec    eax
  4058af:	sahf   
  4058b0:	sub    ecx,eax
  4058b2:	inc    eax
  4058b3:	pop    ebp
  4058b4:	jns    0x405842
  4058b6:	stos   BYTE PTR es:[edi],al
  4058b7:	mov    esi,0x82238655
  4058bc:	(bad)  
  4058bd:	xlat   BYTE PTR ds:[ebx]
  4058be:	xor    dh,BYTE PTR [eax+0x71ba53da]
  4058c4:	adc    al,0x1d
  4058c6:	clc    
  4058c7:	add    al,0xce
  4058c9:	mov    ecx,0xde3d1acb
  4058ce:	jg     0x405939
  4058d0:	and    DWORD PTR [eax-0x70],0x5d7fff81
  4058d7:	cmp    bl,BYTE PTR [ecx+esi*4+0xa]
  4058db:	stc    
  4058dc:	dec    esp
  4058dd:	fldcw  WORD PTR [ebx-0x63]
  4058e0:	out    0x58,eax
  4058e2:	cmp    BYTE PTR [ebp+0x38],cl
  4058e5:	inc    eax
  4058e6:	gs push 0x7c
  4058e9:	pop    eax
  4058ea:	jl     0x4058bc
  4058ec:	push   edx
  4058ed:	and    edx,edi
  4058ef:	fist   DWORD PTR [esi+0x1a]
  4058f2:	(bad)
  4058f5:	jno    0x4058f0
  4058f7:	fwait
  4058f8:	mov    dh,0x51
  4058fa:	addr16 push cs
  4058fc:	sub    ecx,DWORD PTR ds:0x3dcee24f
  405902:	mov    DWORD PTR [ebx-0x6d9a9076],edi
  405908:	inc    ecx
  405909:	fbstp  TBYTE PTR [esp+edx*1+0xa]
  40590d:	test   eax,0x3aab7460
  405912:	retf   
  405913:	ficomp DWORD PTR ds:0xadc6269f
  405919:	add    al,0x35
  40591b:	pop    edx
  40591c:	jnp    0x4058d4
  40591e:	mov    edx,0x934e4c69
  405923:	cmc    
  405924:	mov    ecx,0xcd1feddf
  405929:	imul   ecx,ebx,0xdafc889a
  40592f:	push   ebp
  405930:	adc    dl,cl
  405932:	xchg   ebx,eax
  405933:	jmp    0x405912
  405935:	test   al,0x2
  405937:	add    BYTE PTR [esp+edx*8-0x44ec2d37],0x63
  40593f:	hlt    
  405940:	cmp    cl,bl
  405942:	cld    
  405943:	dec    esi
  405944:	jge    0x40599c
  405946:	aad    0x37
  405948:	repz or ecx,0x9316b19d
  40594f:	and    dl,BYTE PTR [esi+edi*8]
  405952:	dec    ebp
  405953:	clc    
  405954:	mov    al,ds:0xf496cbe4
  405959:	jae    0x405939
  40595b:	in     eax,0x72
  40595d:	sbb    esp,DWORD PTR [esi-0x28]
  405960:	add    DWORD PTR [edi],esp
  405962:	call   0xcebe:0xb93cb869
  405969:	mov    ds:0x792b0cdd,al
  40596e:	sbb    BYTE PTR [eax-0x5c],ch
  405971:	shl    DWORD PTR [ebx],1
  405973:	inc    ebp
  405974:	cmp    al,0xf
  405976:	fcmovnu st,st(0)
  405978:	xchg   esp,eax
  405979:	jne    0x405990
  40597b:	dec    eax
  40597c:	in     al,dx
  40597d:	sbb    ebp,DWORD PTR [esi+0x26362482]
  405983:	out    dx,eax
  405984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405985:	fst    QWORD PTR [ebx-0x25]
  405988:	mov    eax,DWORD PTR [ebx+0x4e95cf71]
  40598e:	scas   al,BYTE PTR es:[edi]
  40598f:	call   0x2fd3:0xcd291e8c
  405996:	or     bh,bl
  405998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405999:	ror    dh,1
  40599b:	mov    ?,ecx
  40599d:	pop    edx
  40599e:	jnp    0x405a05
  4059a0:	pushf  
  4059a1:	mov    ah,0x1a
  4059a3:	cmp    BYTE PTR [edi],ch
  4059a5:	mov    ah,0xd2
  4059a7:	dec    ebx
  4059a8:	lods   al,BYTE PTR ds:[esi]
  4059a9:	mov    dl,0xd6
  4059ab:	jmp    0xa0b:0x523cfe17
  4059b2:	and    al,0x7d
  4059b4:	mov    ebx,0x70cf62c6
  4059b9:	fs pop ecx
  4059bb:	movups XMMWORD PTR [esi-0x4a80d6c1],xmm5
  4059c2:	add    DWORD PTR [eiz*1+0x318fd3aa],ebx
  4059c9:	or     al,0xc9
  4059cb:	fisub  DWORD PTR [ebx-0x78]
  4059ce:	mov    DWORD PTR [ecx+0x14fb1723],edi
  4059d4:	pop    esp
  4059d5:	sbb    eax,0x18b0446e
  4059da:	jp     0x405a13
  4059dc:	int    0xa
  4059de:	popf   
  4059df:	pop    esp
  4059e0:	mov    ebx,0xae7cbe5
  4059e5:	push   ebx
  4059e6:	aam    0xb4
  4059e8:	dec    ebp
  4059e9:	pop    esi
  4059ea:	call   0xc71d222a
  4059ef:	ret    0xa8a9
  4059f2:	stc    
  4059f3:	enter  0x5a42,0x61
  4059f7:	in     al,dx
  4059f8:	pop    ebp
  4059f9:	nop
  4059fa:	xchg   ebp,eax
  4059fb:	push   cs
  4059fc:	xor    al,BYTE PTR [esi]
  4059fe:	faddp  st(2),st
  405a00:	xchg   ebx,eax
  405a01:	mov    ebx,0xc6b62d39
  405a06:	fld    TBYTE PTR [esi+edx*8]
  405a09:	sbb    BYTE PTR [esi-0x35748e27],dh
  405a0f:	popf   
  405a10:	call   0xd5b1:0xfb1a8172
  405a17:	out    0xac,eax
  405a19:	(bad)  
  405a1a:	sbb    al,al
  405a1c:	in     eax,0xa
  405a1e:	inc    eax
  405a1f:	sub    al,0x4e
  405a21:	inc    esi
  405a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a23:	popf   
  405a24:	mov    fs,WORD PTR [ebp+ebx*4+0x53829c6]
  405a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a2c:	ds push eax
  405a2e:	jmp    0x1b21:0x8289aca4
  405a35:	mov    ah,0x66
  405a37:	inc    esp
  405a38:	icebp  
  405a39:	(bad)  
  405a3a:	in     al,dx
  405a3b:	dec    ebp
  405a3c:	dec    esi
  405a3d:	test   BYTE PTR [ecx+0x4a],al
  405a40:	cmp    bl,BYTE PTR [esi+0xc]
  405a43:	cli    
  405a44:	cdq    
  405a45:	not    DWORD PTR [ebx+0x3a]
  405a48:	xchg   edi,eax
  405a49:	lahf   
  405a4a:	dec    edx
  405a4b:	clc    
  405a4c:	fsubr  DWORD PTR [esi]
  405a4e:	icebp  
  405a4f:	cmp    BYTE PTR [ebx],dl
  405a51:	fmul   QWORD PTR [esi]
  405a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a54:	pop    ebx
  405a55:	xchg   BYTE PTR [esi+0x62],bl
  405a58:	xor    BYTE PTR [ecx+eiz*1+0x16],ah
  405a5c:	test   DWORD PTR [ecx+0x1f],ebx
  405a5f:	xchg   BYTE PTR [esi+0x14],al
  405a62:	shl    DWORD PTR ds:[edx+0x19],0xae
  405a67:	jmp    0x1e834e98
  405a6c:	div    ch
  405a6e:	sbb    DWORD PTR [ebp-0x7],esi
  405a71:	push   0x809e390a
  405a76:	mov    esi,0xf063d3f9
  405a7b:	data16 add al,0x27
  405a7e:	daa    
  405a7f:	pushf  
  405a80:	push   esi
  405a81:	fucomi st,st(3)
  405a83:	out    0xdc,eax
  405a85:	xchg   ebx,eax
  405a86:	les    esp,FWORD PTR [esi+ecx*2-0x5159d641]
  405a8d:	in     al,dx
  405a8e:	addr16 mov esi,0x7402720a
  405a94:	mov    edx,0xd033f9bd
  405a99:	xor    ebx,DWORD PTR [ebx]
  405a9b:	push   eax
  405a9c:	aam    0x8a
  405a9e:	inc    ebx
  405a9f:	mov    al,ds:0x7f465ac7
  405aa4:	mov    edx,0x2118dc0
  405aa9:	outs   dx,DWORD PTR ds:[esi]
  405aaa:	aad    0xd0
  405aac:	mov    WORD PTR [eax],fs
  405aae:	aam    0x4d
  405ab0:	cmp    DWORD PTR [edi+0x4956cd5d],edx
  405ab6:	mov    WORD PTR gs:0x7ccf33db,ds
  405abd:	jle    0x405b3b
  405abf:	jecxz  0x405af3
  405ac1:	jg     0x405aeb
  405ac3:	mov    ch,0x8c
  405ac5:	push   esi
  405ac6:	dec    ebp
  405ac7:	(bad)  
  405ac8:	int    0xcc
  405aca:	cdq    
  405acb:	lahf   
  405acc:	mov    ebp,0xcfa335bf
  405ad1:	test   BYTE PTR [esi],bl
  405ad3:	je     0x405a93
  405ad5:	mov    ch,bl
  405ad7:	int3   
  405ad8:	retf   0xcfc1
  405adb:	jecxz  0x405b45
  405add:	clc    
  405ade:	aad    0x98
  405ae0:	scas   al,BYTE PTR es:[edi]
  405ae1:	sti    
  405ae2:	dec    ebp
  405ae3:	jb     0x405ae7
  405ae5:	lea    esp,[edx-0x75]
  405ae8:	cmp    ebp,DWORD PTR [edx-0x44]
  405aeb:	pop    ds
  405aec:	xor    al,0x7c
  405aee:	pop    ecx
  405aef:	test   eax,0x2e506665
  405af4:	addr16 dec ebx
  405af6:	ret    
  405af7:	xor    al,0x12
  405af9:	aas    
  405afa:	not    BYTE PTR [esi-0x7426ef14]
  405b00:	std    
  405b01:	in     al,dx
  405b02:	mov    ch,0x1e
  405b04:	pop    edx
  405b05:	push   es
  405b06:	dec    ecx
  405b07:	pusha  
  405b08:	dec    ecx
  405b09:	out    dx,al
  405b0a:	je     0x405b86
  405b0c:	pop    si
  405b0e:	jp     0x405b51
  405b10:	mov    dl,0x81
  405b12:	push   ds
  405b13:	int3   
  405b14:	fstp   DWORD PTR [esi+0xfb8cb03]
  405b1a:	outs   dx,BYTE PTR ss:[esi]
  405b1c:	add    BYTE PTR [edi+edx*1],0x3f
  405b20:	or     DWORD PTR [edi+edx*1],0xffffff89
  405b24:	(bad)  
  405b25:	imul   ebx,ebp,0x6e
  405b28:	sbb    DWORD PTR [edi+0x71],esi
  405b2b:	sbb    edx,edx
  405b2d:	js     0x405ba5
  405b2f:	cmp    edi,ecx
  405b31:	mov    dl,0x8c
  405b33:	fisubr DWORD PTR [edi+ecx*8]
  405b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b37:	pop    esi
  405b38:	mov    eax,ds:0xcb8cc9e9
  405b3d:	xor    DWORD PTR [ebx-0x27],ebx
  405b40:	xchg   ebp,eax
  405b41:	mov    ebp,0xd7f4ecfd
  405b46:	iret   
  405b47:	or     eax,0x1f3e1864
  405b4c:	sub    al,0x7c
  405b4e:	ds or  eax,0x10b11bfe
  405b54:	stos   DWORD PTR es:[edi],eax
  405b55:	jl     0x405ba4
  405b57:	fbld   TBYTE PTR [edi]
  405b59:	jb     0x405bb4
  405b5b:	push   ebp
  405b5c:	pop    esp
  405b5d:	ret    0xcb83
  405b60:	popf   
  405b61:	mov    ecx,DWORD PTR [ebx-0x31]
  405b64:	mov    al,0x4
  405b66:	xor    BYTE PTR [edi+0x35],ch
  405b69:	or     cl,BYTE PTR [ebx+0x5d]
  405b6c:	inc    ecx
  405b6d:	in     eax,dx
  405b6e:	call   0x3d0c637b
  405b73:	div    DWORD PTR [ebp+0x67]
  405b76:	xchg   ebp,eax
  405b77:	push   es
  405b78:	sar    DWORD PTR [ebx-0x5134fdc4],cl
  405b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b7f:	or     ecx,DWORD PTR [esi]
  405b81:	ds xor eax,0xcf4eed98
  405b87:	aaa    
  405b88:	jb     0x405b24
  405b8a:	xor    ebx,0xffffffab
  405b8d:	pop    ds
  405b8e:	push   cs
  405b8f:	rcr    BYTE PTR [edx-0x6342cdbd],cl
  405b95:	xor    BYTE PTR [edi+0x54],cl
  405b98:	pop    ecx
  405b99:	push   edi
  405b9b:	or     al,BYTE PTR [eax+0x33]
  405b9e:	test   BYTE PTR [ebp+0x74],ah
  405ba1:	nop
  405ba2:	adc    al,0x24
  405ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ba5:	scas   eax,DWORD PTR es:[edi]
  405ba6:	xchg   ebp,eax
  405ba7:	aaa    
  405ba8:	jb     0x405bb6
  405baa:	dec    edi
  405bab:	loope  0x405bff
  405bad:	or     eax,0xd8b3dcc4
  405bb2:	int3   
  405bb3:	xchg   edi,eax
  405bb4:	fmul   QWORD PTR [edi+0x72d7ec95]
  405bba:	mov    esi,0x5ae6cbb0
  405bbf:	mov    dh,0xdf
  405bc1:	mov    al,ds:0xa23b8057
  405bc6:	and    al,0x1a
  405bc8:	sub    ah,BYTE PTR [ecx+0x3b]
  405bcb:	cdq    
  405bcc:	mov    esp,0x63ea17ad
  405bd1:	xchg   DWORD PTR [esi+0x51],ebp
  405bd4:	mov    ds:0x558d0501,al
  405bd9:	jae    0x405b92
  405bdb:	push   cs
  405bdc:	mov    BYTE PTR [esi-0x49],ch
  405bdf:	outs   dx,DWORD PTR ds:[esi]
  405be0:	out    0x4,al
  405be2:	jl     0x405c40
  405be4:	xor    ah,ch
  405be6:	jno    0x405b92
  405be8:	pcmpgtb mm7,mm1
  405beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bec:	fidiv  WORD PTR [edx+ebx*1]
  405bef:	xchg   ebp,eax
  405bf0:	adc    ebx,DWORD PTR [edi-0x60]
  405bf3:	push   edx
  405bf4:	pop    ds
  405bf5:	pushf  
  405bf6:	sahf   
  405bf7:	in     al,dx
  405bf8:	jbe    0x405c39
  405bfa:	mov    edi,0x677a1983
  405bff:	dec    ebx
  405c00:	arpl   di,ax
  405c02:	arpl   WORD PTR [ebx+0x7b],dx
  405c05:	repnz into 
  405c07:	push   ecx
  405c08:	or     BYTE PTR [ebx],dh
  405c0a:	xchg   edx,eax
  405c0b:	sub    bh,BYTE PTR [ecx+0x56]
  405c0e:	cmp    eax,0x7fa5de3
  405c13:	fwait
  405c14:	stos   BYTE PTR es:[edi],al
  405c15:	popa   
  405c16:	xchg   esp,eax
  405c17:	jb     0x405c84
  405c19:	pop    ebp
  405c1a:	mov    edi,0x1a0c35fb
  405c1f:	jg     0x405c74
  405c21:	mul    DWORD PTR [edi-0x45]
  405c24:	stc    
  405c25:	mov    ch,0xa6
  405c27:	cli    
  405c28:	ins    DWORD PTR es:[edi],dx
  405c29:	adc    BYTE PTR [edi+0x64],cl
  405c2c:	mov    DWORD PTR [ebx-0xc9d7558],ebp
  405c32:	sbb    edx,DWORD PTR [esi+ecx*2]
  405c35:	cmc    
  405c36:	push   edx
  405c37:	aad    0xa
  405c39:	sub    eax,0x765f63b0
  405c3e:	inc    DWORD PTR [edi]
  405c40:	mov    edi,0x37bf1c7c
  405c45:	arpl   WORD PTR [ebp+0x39],si
  405c48:	mov    dh,0xcc
  405c4a:	outs   dx,BYTE PTR ds:[esi]
  405c4b:	int3   
  405c4c:	retf   0x441
  405c4f:	or     BYTE PTR [ecx],dl
  405c51:	sbb    BYTE PTR [ebp+0x71],0x4
  405c55:	aas    
  405c56:	(bad)  
  405c58:	(bad)  
  405c59:	jmp    0x405cd3
  405c5b:	into   
  405c5c:	cmc    
  405c5d:	cmp    BYTE PTR [eax+0x66],0x41
  405c61:	loop   0x405c2b
  405c63:	clc    
  405c64:	mov    eax,0xc0f673d2
  405c69:	and    ebx,ecx
  405c6b:	lods   al,BYTE PTR ds:[esi]
  405c6c:	cdq    
  405c6d:	mov    al,ds:0xb108f249
  405c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c73:	fld    TBYTE PTR [edx-0x5c676aaf]
  405c79:	jg     0x405c6b
  405c7b:	mov    ah,0x9
  405c7d:	test   BYTE PTR [edi-0x5b],0xcd
  405c81:	js     0x405c90
  405c83:	jne    0x405cec
  405c85:	data16 icebp 
  405c87:	and    eax,0x8a1e1ad4
  405c8c:	push   esi
  405c8d:	mov    ch,0x2e
  405c8f:	pop    es
  405c90:	sbb    esi,DWORD PTR [esi-0x7215d0b6]
  405c96:	mov    dh,0xab
  405c98:	ss nop
  405c9a:	jmp    0xd4c04039
  405c9f:	cmp    DWORD PTR [edx-0x5d086e7c],ebp
  405ca5:	dec    esp
  405ca6:	mov    eax,ds:0x8fd7f01d
  405cab:	jle    0x405cc6
  405cad:	xlat   BYTE PTR ds:[ebx]
  405cae:	jp     0x405ccc
  405cb0:	sbb    bl,BYTE PTR [edi-0x6254d84f]
  405cb6:	mov    cl,0x3c
  405cb8:	retf   0x721b
  405cbb:	repz pop ss
  405cbd:	fs (bad) 
  405cbf:	sub    edi,DWORD PTR [edx]
  405cc1:	daa    
  405cc2:	mov    esp,0x3ef44f08
  405cc7:	sti    
  405cc8:	(bad)  
  405cc9:	mov    ah,0xf8
  405ccb:	cli    
  405ccc:	push   esp
  405ccd:	fstp   DWORD PTR [eax+0x24]
  405cd0:	jg     0x405d2b
  405cd2:	les    eax,FWORD PTR [ebp+0xe]
  405cd5:	lahf   
  405cd6:	mov    ch,BYTE PTR [ebx+0x32d0d063]
  405cdc:	xchg   DWORD PTR [esi+0x6a],ecx
  405cdf:	in     eax,0x74
  405ce1:	sbb    ch,BYTE PTR [edi+eax*2-0x1a49cfe6]
  405ce8:	or     ah,al
  405cea:	nop
  405ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cec:	add    DWORD PTR [ebx],ebp
  405cee:	adc    cl,BYTE PTR [eax-0x4da2f59d]
  405cf4:	inc    esi
  405cf5:	cli    
  405cf6:	inc    ebp
  405cf7:	xor    dh,bl
  405cf9:	(bad)  
  405cfa:	jge    0x405cb7
  405cfc:	pop    ebp
  405cfd:	jle    0x405d05
  405cff:	add    eax,0xebfd7b7a
  405d04:	fiadd  DWORD PTR [eax+esi*2+0x47]
  405d08:	int    0xe7
  405d0a:	aaa    
  405d0b:	mov    bl,BYTE PTR [edx-0x7]
  405d0e:	cmp    al,0x22
  405d10:	das    
  405d11:	mov    BYTE PTR [ecx-0x30f2778],ch
  405d17:	cmp    ah,ah
  405d19:	iret   
  405d1a:	fstp   DWORD PTR [ecx+eiz*1-0x2554f583]
  405d21:	or     ch,BYTE PTR [ecx]
  405d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d24:	xor    edx,eax
  405d26:	enter  0xfa0d,0xba
  405d2a:	pop    es
  405d2b:	mov    bl,0xb0
  405d2d:	stos   BYTE PTR es:[edi],al
  405d2e:	sbb    BYTE PTR [ebx-0x493f0756],cl
  405d34:	push   ds
  405d35:	loope  0x405d09
  405d37:	sub    eax,0x6f62ce84
  405d3c:	push   ds
  405d3d:	mov    eax,ds:0x7968de62
  405d42:	jmp    0xbc78:0x24249ba1
  405d49:	cmp    eax,0x2d3f7124
  405d4e:	and    ebp,DWORD PTR gs:[ecx]
  405d51:	or     DWORD PTR [eax],esp
  405d53:	mov    DWORD PTR ss:[ecx],esp
  405d56:	(bad)  
  405d58:	je     0x405d08
  405d5a:	xchg   ebp,eax
  405d5b:	mov    eax,gs
  405d5d:	xor    ebx,DWORD PTR [ecx]
  405d5f:	xor    BYTE PTR [edi+0x2f],0x9d
  405d63:	imul   edx,DWORD PTR [edx-0x4c],0xbd689c5c
  405d6a:	xor    al,0x50
  405d6c:	pop    esi
  405d6d:	inc    esp
  405d6f:	xchg   ecx,eax
  405d70:	cwde   
  405d71:	dec    esi
  405d72:	and    al,0xb3
  405d74:	pop    ebp
  405d75:	mov    ds:0xcc6c7fe7,eax
  405d7a:	popa   
  405d7b:	ror    edx,cl
  405d7d:	lock retf 0xb74b
  405d81:	cs xor al,0x63
  405d84:	sub    al,0xf4
  405d86:	mov    dh,0xd0
  405d88:	test   al,0x0
  405d8a:	jl     0x405d46
  405d8c:	jecxz  0x405da3
  405d8e:	out    0x25,eax
  405d90:	bound  edx,QWORD PTR [edx+0x19f0d9a5]
  405d96:	mov    eax,ds:0x775fdd8c
  405d9b:	(bad)  
  405d9c:	(bad)  
  405d9d:	pushf  
  405d9e:	inc    DWORD PTR [ecx+0x7f]
  405da1:	cmp    al,0x7c
  405da3:	icebp  
  405da4:	xchg   esi,ecx
  405da6:	xor    DWORD PTR [eax-0x21],0x5c
  405daa:	xchg   ebx,eax
  405dab:	ins    DWORD PTR es:[edi],dx
  405dac:	cmp    ebx,DWORD PTR [ebx+ebp*1-0x32]
  405db0:	inc    esi
  405db1:	inc    ebp
  405db2:	shl    BYTE PTR [ebp-0x45],cl
  405db5:	add    ch,BYTE PTR [ebp-0x7930e724]
  405dbb:	cmp    eax,DWORD PTR [di+0x2e5e]
  405dc0:	sub    bl,BYTE PTR [esp+eax*1+0x4c147048]
  405dc7:	out    0x42,al
  405dc9:	dec    edi
  405dca:	push   ds
  405dcb:	and    esp,DWORD PTR [edx+0x55770363]
  405dd1:	stos   BYTE PTR es:[edi],al
  405dd2:	test   al,0x21
  405dd4:	ins    BYTE PTR es:[edi],dx
  405dd5:	mov    ebx,0xd621ad0
  405dda:	push   esp
  405ddb:	ror    BYTE PTR [edi-0x49c12f57],1
  405de1:	mov    eax,ds:0xfebc956b
  405de6:	ret    
  405de7:	div    DWORD PTR [edi]
  405de9:	xchg   ebx,eax
  405dea:	sub    DWORD PTR [edx+0x7a],0x1
  405dee:	call   0x72cf51dc
  405df3:	cs add al,0x44
  405df6:	pop    ebx
  405df7:	jo     0x405df0
  405df9:	scas   al,BYTE PTR es:[edi]
  405dfa:	jle    0x405e56
  405dfc:	repz hlt 
  405dfe:	sub    ch,BYTE PTR ds:0x80159866
  405e04:	out    dx,eax
  405e05:	loope  0x405e06
  405e07:	out    0xda,al
  405e09:	pop    esp
  405e0a:	mov    al,BYTE PTR [esi-0x7eb7f499]
  405e10:	xchg   ecx,eax
  405e11:	icebp  
  405e12:	sub    cl,0x2e
  405e15:	cmp    BYTE PTR [ebp+0x45],cl
  405e18:	lock pop ds
  405e1a:	sub    DWORD PTR [ebx+0x7d2f6cfb],esp
  405e20:	mov    dl,0xc
  405e22:	xor    eax,0x8f5816ff
  405e27:	xchg   esi,ecx
  405e29:	dec    edx
  405e2a:	gs sti 
  405e2c:	das    
  405e2d:	mov    ebp,0xf7f258d2
  405e32:	sar    BYTE PTR [edx+eiz*8+0x54],0xa0
  405e37:	getsec 
  405e39:	dec    edx
  405e3a:	and    al,0xd8
  405e3c:	arpl   WORD PTR [ebp+eiz*1-0x76],sp
  405e40:	or     DWORD PTR [edi],0x10bbb620
  405e46:	adc    BYTE PTR [ebx-0x1269ade4],dl
  405e4c:	jbe    0x405e7b
  405e4e:	pop    ebx
  405e4f:	mov    edx,0x92ce1ddd
  405e54:	ins    DWORD PTR es:[edi],dx
  405e55:	cld    
  405e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e57:	(bad)
  405e5b:	inc    ebx
  405e5c:	xchg   esi,eax
  405e5d:	repnz add al,0x7e
  405e60:	mov    esp,0xa0a96fc7
  405e65:	mov    ?,WORD PTR [edi]
  405e67:	scas   eax,DWORD PTR es:[edi]
  405e68:	cs je  0x405e97
  405e6b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e6d:	dec    edx
  405e6e:	xor    eax,0x7057a5a9
  405e73:	and    eax,0xfaf8bc56
  405e78:	push   0xc5e06736
  405e7d:	int3   
  405e7e:	or     eax,edx
  405e80:	fsub   st(3),st
  405e82:	icebp  
  405e83:	adc    ch,BYTE PTR [edx-0x6d288960]
  405e89:	xor    BYTE PTR [eax+0x64],0xd2
  405e8d:	jo     0x405e1a
  405e8f:	(bad)  
  405e90:	scas   al,BYTE PTR es:[edi]
  405e91:	retf   
  405e92:	std    
  405e93:	mov    dl,0xc7
  405e95:	arpl   WORD PTR [edx],bx
  405e97:	cmc    
  405e98:	lock scas eax,DWORD PTR es:[edi]
  405e9a:	sub    DWORD PTR [ecx],0x31
  405e9d:	xchg   esi,eax
  405e9e:	mov    ds:0x7f572e69,eax
  405ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ea4:	jb     0x405f1c
  405ea6:	adc    al,dl
  405ea8:	into   
  405ea9:	out    0x95,al
  405eab:	data16 icebp 
  405ead:	jg     0x405eef
  405eaf:	or     edx,ecx
  405eb1:	adc    eax,0xe10b32bd
  405eb6:	fist   WORD PTR [ebx+0x62]
  405eb9:	fucomi st,st(2)
  405ebb:	jnp    0x405e6b
  405ebd:	(bad)  
  405ebe:	call   0x4d11:0x50bafcfd
  405ec5:	pop    es
  405ec6:	out    0x3a,eax
  405ec8:	popa   
  405ec9:	addr16 push 0xffffffeb
  405ecc:	lahf   
  405ecd:	mov    ah,0x1f
  405ecf:	mov    ds:0xc97ee7b1,al
  405ed4:	ret    
  405ed5:	ins    BYTE PTR es:[edi],dx
  405ed6:	mov    bl,0x9
  405ed8:	push   edi
  405ed9:	cmp    BYTE PTR [eax-0x57c41b04],bh
  405edf:	mov    ah,0xea
  405ee1:	mov    ah,0x49
  405ee3:	jecxz  0x405f39
  405ee5:	popa   
  405ee6:	push   0x37
  405ee8:	mov    ebp,0x7673a6cf
  405eed:	test   BYTE PTR [edx],dh
  405eef:	add    eax,0x32bc1938
  405ef4:	push   edx
  405ef5:	mov    BYTE PTR [edx-0x2337e794],dl
  405efb:	scas   eax,DWORD PTR es:[edi]
  405efc:	rol    BYTE PTR [ebx],cl
  405efe:	dec    ch
  405f00:	sbb    BYTE PTR [esp+eiz*2],dl
  405f03:	push   ebp
  405f04:	data16 add al,0x14
  405f07:	fimul  WORD PTR [edx+0x113e0e13]
  405f0d:	shl    BYTE PTR [ebx+edi*1],1
  405f10:	push   ecx
  405f11:	xor    BYTE PTR [ecx+0x70],0xb2
  405f15:	mov    esi,0xe61ec097
  405f1a:	lock in al,0xa6
  405f1d:	push   ss
  405f1e:	bound  ebp,QWORD PTR [esi]
  405f20:	xor    edi,DWORD PTR es:[ebx-0x8]
  405f24:	mov    BYTE PTR [ecx],dh
  405f26:	sar    DWORD PTR [ecx-0x72],cl
  405f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f2a:	int    0x8e
  405f2c:	cs inc eax
  405f2e:	gs push ebx
  405f30:	out    dx,al
  405f31:	jp     0x405fa7
  405f33:	jecxz  0x405faa
  405f35:	call   0x78be478f
  405f3a:	inc    esi
  405f3b:	ror    DWORD PTR [ecx+0x3d541563],cl
  405f41:	leave  
  405f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f43:	cmp    ah,BYTE PTR [ecx+ecx*2+0x3c]
  405f47:	push   ebp
  405f48:	sub    BYTE PTR [esi+edi*2+0x66f2126d],ah
  405f4f:	sub    edi,DWORD PTR [edx]
  405f51:	jbe    0x405f37
  405f53:	inc    eax
  405f54:	fdiv   DWORD PTR [esp+ebx*8+0x52]
  405f58:	(bad)  
  405f59:	sub    ah,BYTE PTR [ecx]
  405f5b:	or     edx,DWORD PTR [ecx]
  405f5d:	clc    
  405f5e:	aas    
  405f5f:	into   
  405f60:	pop    ds
  405f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f62:	in     eax,0x2e
  405f64:	cld    
  405f65:	sbb    DWORD PTR [esi+0x2950d16b],ebx
  405f6b:	adc    BYTE PTR [ebx+esi*1-0x49],ah
  405f6f:	push   esi
  405f70:	mov    ch,BYTE PTR [esi+0x40]
  405f73:	outs   dx,BYTE PTR ds:[esi]
  405f74:	ret    0x311f
  405f77:	mul    DWORD PTR [ecx+0x27]
  405f7a:	xor    BYTE PTR [ecx+edx*4+0x51],dh
  405f7e:	push   es
  405f7f:	stc    
  405f80:	inc    edx
  405f81:	test   BYTE PTR [edi+0x4e2a3d74],ah
  405f87:	dec    ecx
  405f88:	scas   al,BYTE PTR es:[edi]
  405f89:	or     al,0x8d
  405f8b:	adc    dh,bh
  405f8d:	pop    ecx
  405f8e:	fistp  WORD PTR [ebx]
  405f90:	jmp    0x89aa4915
  405f95:	jg     0x405fa8
  405f97:	add    eax,0xd7110d09
  405f9c:	jns    0x405fad
  405f9e:	popf   
  405f9f:	addr16 xor ebx,ebx
  405fa2:	mov    fs,WORD PTR [edi]
  405fa4:	jne    0x405f43
  405fa6:	adc    al,0xdf
  405fa8:	sub    BYTE PTR [ebp-0x3e],ch
  405fab:	adc    BYTE PTR [eax-0x569059fe],al
  405fb1:	dec    esi
  405fb2:	adc    BYTE PTR [esi+0x750c2461],ah
  405fb8:	nop
  405fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fba:	and    al,bh
  405fbc:	ror    DWORD PTR [ebp-0x212f1bc1],cl
  405fc2:	loope  0x40600d
  405fc4:	test   al,0x6e
  405fc6:	mov    bl,bl
  405fc8:	in     al,0xc
  405fca:	xchg   ecx,eax
  405fcb:	inc    edx
  405fcc:	xor    ah,al
  405fce:	test   al,0x5d
  405fd0:	sub    BYTE PTR [esi-0x5e],ah
  405fd3:	or     BYTE PTR [edx],bh
  405fd5:	and    eax,0xf525ae9f
  405fda:	jp     0x405fd1
  405fdc:	popa   
  405fdd:	xchg   ebx,eax
  405fde:	out    0x8f,al
  405fe0:	gs cld 
  405fe2:	adc    bh,BYTE PTR [edx+0x3ed696b8]
  405fe8:	dec    ebx
  405fe9:	push   eax
  405fea:	xchg   edx,eax
  405feb:	dec    edx
  405fec:	xchg   ecx,eax
  405fed:	xlat   BYTE PTR ds:[ebx]
  405fee:	sub    eax,0xb76a9090
  405ff3:	and    DWORD PTR [ebp+0x1d32bcf0],esp
  405ff9:	nop
  405ffa:	mov    esp,ebp
  405ffc:	inc    edx
  405ffd:	inc    bl
  405fff:	mov    cl,0x71
  406001:	add    DWORD PTR [ebx-0x31bb8204],ebp
  406007:	adc    esp,DWORD PTR [edi-0x7af25cc5]
  40600d:	mov    BYTE PTR [ecx+ebx*8-0x7df63bfa],0xf9
  406015:	and    edi,DWORD PTR [edx+ebx*8+0x63]
  406019:	sbb    al,0xf
  40601b:	push   ebp
  40601c:	retf   0xa36d
  40601f:	sub    BYTE PTR [esi+0x1c],bl
  406022:	cdq    
  406023:	imul   esi,DWORD PTR [edi-0x47c2652b],0x43103791
  40602d:	or     eax,0x8a0f854f
  406032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406033:	jl     0x405fbf
  406035:	push   edi
  406036:	addr16 psubusw mm5,mm0
  40603a:	mov    eax,0x74667b62
  40603f:	cs das 
  406041:	push   es
  406042:	cld    
  406043:	xor    BYTE PTR [ebx+0x5c],bl
  406046:	push   eax
  406047:	jo     0x40608b
  406049:	fadd   st,st(5)
  40604b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40604c:	mov    ds:0x5c78cca2,eax
  406051:	pushf  
  406052:	in     eax,dx
  406053:	stos   DWORD PTR es:[edi],eax
  406054:	fdiv   DWORD PTR [edx+0xe]
  406057:	push   esi
  406058:	in     eax,dx
  406059:	ins    DWORD PTR es:[edi],dx
  40605a:	push   0xeb28ce13
  40605f:	fwait
  406060:	arpl   WORD PTR [ebx+0x69978797],di
  406066:	mov    dl,0xa
  406068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406069:	aaa    
  40606a:	shl    BYTE PTR [ebp-0x45],1
  40606d:	dec    edx
  40606e:	outs   dx,DWORD PTR ds:[esi]
  40606f:	iret   
  406070:	mov    ah,0x19
  406072:	sahf   
  406073:	pop    esi
  406074:	jmp    0xb390a125
  406079:	xchg   ebx,eax
  40607a:	mov    ecx,0x729e6e0a
  40607f:	mov    edi,fs
  406081:	(bad)  
  406082:	popf   
  406083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406084:	int    0xfe
  406086:	adc    eax,esi
  406088:	or     edx,DWORD PTR ds:0xffb1ba66
  40608e:	mov    edi,0x32056ee3
  406093:	mov    cl,ch
  406095:	inc    ebx
  406096:	jge    0x40605e
  406098:	sub    cl,BYTE PTR ss:[esi-0x557d3177]
  40609f:	xchg   esp,eax
  4060a0:	inc    ebx
  4060a1:	into   
  4060a2:	ret    
  4060a3:	pop    esp
  4060a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060a5:	int    0x90
  4060a7:	test   eax,0xab42a8d4
  4060ac:	sub    eax,0xdf12a348
  4060b1:	mov    ds:0xd6c66334,eax
  4060b6:	bound  edx,QWORD PTR [edi+0x2a]
  4060b9:	test   BYTE PTR [ebx],bl
  4060bb:	stos   BYTE PTR es:[edi],al
  4060bc:	(bad)  
  4060bd:	clc    
  4060be:	(bad)  
  4060bf:	neg    BYTE PTR [edx-0x21c96aec]
  4060c5:	ror    bh,1
  4060c7:	js     0x4060b5
  4060c9:	push   ecx
  4060ca:	arpl   WORD PTR [ebx],bx
  4060cc:	xor    DWORD PTR [esp+esi*8],ebp
  4060cf:	cmp    al,0x90
  4060d1:	pop    esp
  4060d2:	ds out dx,al
  4060d4:	xor    al,0xe4
  4060d6:	add    al,0xe
  4060d8:	dec    ebp
  4060d9:	inc    ebx
  4060da:	in     eax,0xc0
  4060dc:	clc    
  4060dd:	and    eax,0x79f01f1b
  4060e2:	mov    ds:0xcc1a4037,eax
  4060e7:	xor    DWORD PTR [ecx-0x29],esi
  4060ea:	cmp    eax,0x59b0d41d
  4060ef:	cmp    edx,eax
  4060f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060f2:	iret   
  4060f3:	arpl   di,cx
  4060f5:	divps  xmm3,XMMWORD PTR [ebx]
  4060f8:	in     eax,dx
  4060f9:	lea    edi,[edx+ebx*1-0x13]
  4060fd:	hlt    
  4060fe:	loopne 0x4060fe
  406100:	add    DWORD PTR [ecx+0x77],0x7a
  406104:	fsubr  QWORD PTR [ebx]
  406106:	out    dx,al
  406107:	aad    0x40
  406109:	pusha  
  40610a:	cli    
  40610b:	mov    WORD PTR [esi+esi*8+0x410b51ae],ss
  406112:	push   ds
  406113:	or     cl,BYTE PTR [edi+0x4e]
  406116:	mov    dh,BYTE PTR [ebx-0x14]
  406119:	xlat   BYTE PTR ds:[ebx]
  40611a:	and    ecx,ebp
  40611c:	dec    eax
  40611d:	fdiv   QWORD PTR [ebx]
  40611f:	jge    0x406131
  406121:	mov    bl,0x84
  406123:	data16 and BYTE PTR [edi+0x1c],dh
  406127:	mov    dh,0x94
  406129:	push   edx
  40612a:	in     al,0xa1
  40612c:	iret   
  40612d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40612e:	std    
  40612f:	imul   edx,esi,0x3d8f0aae
  406135:	adc    cl,BYTE PTR [edx+0x78706e04]
  40613b:	iret   
  40613c:	dec    ebx
  40613d:	daa    
  40613e:	push   0x9eb495ab
  406143:	arpl   WORD PTR [ebx],cx
  406145:	fnstcw WORD PTR [ecx+0x41d5f12c]
  40614b:	mov    esi,0x64a0ef31
  406150:	neg    ebp
  406152:	push   ds
  406153:	retf   
  406154:	xchg   ebx,eax
  406155:	xchg   ah,ch
  406157:	fiadd  WORD PTR [ecx-0x2c98ec88]
  40615d:	push   edx
  40615e:	arpl   WORD PTR [eax],bx
  406160:	fdivr  st,st(4)
  406162:	test   BYTE PTR [edx-0x6bbe3128],0xf5
  406169:	gs push edx
  40616b:	jnp    0x4060fa
  40616d:	ss jmp 0x2a1abe47
  406173:	bound  eax,QWORD PTR [ecx-0x7a]
  406176:	pushf  
  406177:	push   cs
  406178:	imul   ebx,DWORD PTR [esi-0x52d069d4],0xffffffce
  40617f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406180:	jbe    0x4061f1
  406182:	adc    edx,DWORD PTR [esi+ebp*8-0x328cca30]
  406189:	in     eax,0xa2
  40618b:	repnz lods al,BYTE PTR ds:[esi]
  40618d:	and    al,0xc9
  40618f:	xchg   ebx,eax
  406190:	scas   eax,DWORD PTR es:[edi]
  406191:	rcr    BYTE PTR [edx],1
  406193:	mov    ebx,0xeb6c83fb
  406198:	or     BYTE PTR [ecx-0x46862416],bh
  40619e:	retf   0x914d
  4061a1:	(bad)  
  4061a2:	jno    0x406205
  4061a4:	or     al,0x96
  4061a6:	(bad)  
  4061a7:	pop    esp
  4061a8:	pushf  
  4061a9:	call   0x157f:0xe1aebac9
  4061b0:	mov    al,0x1
  4061b2:	mov    eax,ds:0xdd291d8
  4061b7:	mov    ebp,edi
  4061b9:	mov    ds:0xd16c48d4,al
  4061be:	ret    0xa159
  4061c1:	arpl   WORD PTR [edx],di
  4061c3:	test   eax,0xf1a684aa
  4061c8:	pop    ebp
  4061c9:	mov    ds:0x29ce3a90,eax
  4061ce:	sub    ebp,edi
  4061d0:	nop/reserved BYTE PTR [ebx+0x370cbd99]
  4061d7:	jmp    0x6e1c:0x481acd92
  4061de:	cli    
  4061df:	sub    al,bh
  4061e1:	mov    DWORD PTR [edx],0x686325c7
  4061e7:	xchg   esp,esp
  4061e9:	ins    BYTE PTR es:[edi],dx
  4061ea:	cmp    DWORD PTR [edx+0x34],esi
  4061ed:	mov    cl,0xa1
  4061ef:	sub    ah,BYTE PTR [edi-0x44bd1695]
  4061f5:	sbb    edi,ebx
  4061f7:	and    al,0x95
  4061f9:	add    DWORD PTR [esp+eiz*8+0x5c],edi
  4061fd:	or     DWORD PTR [ecx],0xffffffd3
  406200:	add    BYTE PTR [eax-0xefca203],bh
  406206:	push   es
  406207:	repnz push esi
  406209:	pop    ecx
  40620a:	xor    bl,BYTE PTR ds:0x29cfb681
  406210:	cwde   
  406211:	ud1    ecx,DWORD PTR [esp+esi*8-0x6]
  406216:	sub    eax,0xdbf5057d
  40621b:	mov    WORD PTR [esi],cs
  40621d:	jnp    0x4061b9
  40621f:	mov    ch,0x3b
  406221:	outs   dx,DWORD PTR ds:[esi]
  406222:	and    ebp,DWORD PTR [edi+edi*4+0x64]
  406226:	add    al,ch
  406228:	pop    ss
  406229:	push   ebp
  40622a:	or     al,0xcc
  40622c:	inc    edx
  40622d:	dec    esi
  40622e:	or     edi,DWORD PTR [ebp+0x58]
  406231:	idiv   DWORD PTR [ecx-0x57276012]
  406237:	ds xor ecx,esp
  40623a:	mov    ah,0xc6
  40623c:	jae    0x406239
  40623e:	ror    BYTE PTR fs:[ecx+0x78],1
  406242:	mov    bl,0xb6
  406244:	or     al,0x1b
  406246:	mov    es,ecx
  406248:	mov    ds:0xea4bf36f,eax
  40624d:	mov    esi,0xb23c96c6
  406252:	adc    DWORD PTR [edx],edi
  406254:	ss xchg bl,bh
  406257:	mov    esi,0x6d78b59d
  40625c:	jb     0x4061ff
  40625e:	fcmove st,st(6)
  406260:	mov    BYTE PTR [edi+0xa1c2529],ah
  406266:	xor    ebp,esi
  406268:	les    ebp,FWORD PTR [ecx]
  40626a:	out    0xc7,al
  40626c:	retf   0xd011
  40626f:	pop    edi
  406270:	rol    BYTE PTR [eax],cl
  406272:	dec    esi
  406273:	(bad)  [ebx-0x392d940d]
  406279:	jo     0x406295
  40627b:	xor    ebx,DWORD PTR [eax+0x11]
  40627e:	call   0xbf3687dd
  406283:	aam    0xb3
  406285:	pop    esi
  406286:	sub    eax,0x614f8e9b
  40628b:	mov    eax,ds:0xbb1a68e6
  406290:	(bad)  
  406291:	inc    ebp
  406292:	cmp    al,0xcd
  406294:	and    al,ch
  406296:	jmp    0x40624e
  406298:	mov    ebp,0xf9cf6bd1
  40629d:	push   es
  40629e:	stos   BYTE PTR es:[edi],al
  40629f:	inc    edx
  4062a0:	sbb    al,0x96
  4062a2:	or     BYTE PTR [ebx+0x41],bl
  4062a5:	lock sbb al,0xdb
  4062a8:	adc    ecx,DWORD PTR [edi-0x3b3ec38a]
  4062ae:	popa   
  4062af:	dec    eax
  4062b0:	sub    DWORD PTR [esi+ebx*4+0x1d7b8ca0],ebp
  4062b7:	out    dx,al
  4062b8:	mov    edx,0x95b11057
  4062bd:	mov    esp,0xb6d5bc9b
  4062c2:	imul   ebp,DWORD PTR [esi],0xffffffcd
  4062c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062c6:	stc    
  4062c7:	(bad)
  4062ca:	fld    DWORD PTR [esi+edx*1+0x1acd1433]
  4062d1:	dec    ecx
  4062d2:	jecxz  0x4062ef
  4062d4:	gs (bad) 
  4062d6:	fst    QWORD PTR [esi-0x3f]
  4062d9:	gs js  0x4062c3
  4062dc:	out    0x1,al
  4062de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062df:	jmp    0x3bb2:0x95ba4b48
  4062e6:	mov    ax,ds:0x972c327a
  4062ec:	retf   0xaca2
  4062ef:	push   ecx
  4062f0:	(bad)  [esi*1-0x1f1de0c]
  4062f7:	(bad)  
  4062f8:	mov    BYTE PTR [edx+0x683f9dc3],0xd3
  4062ff:	test   edi,0xdfcecc05
  406305:	push   es
  406306:	jge    0x4062a6
  406308:	or     bh,dh
  40630a:	or     ah,BYTE PTR [ebx+0x4affa5e4]
  406310:	mov    ds:0xf8286b62,eax
  406315:	inc    esp
  406316:	dec    ebp
  406317:	lahf   
  406318:	dec    esp
  406319:	push   esp
  40631a:	mov    ebp,0x606bfb9
  40631f:	adc    esi,DWORD PTR [edi+0x20f74e30]
  406325:	pop    ss
  406326:	fs fdivr st,st(6)
  406329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40632a:	lods   al,BYTE PTR ds:[esi]
  40632b:	push   ebx
  40632c:	sbb    eax,DWORD PTR [ebx]
  40632e:	or     BYTE PTR [edi+ebx*4-0x7a],bl
  406332:	jns    0x406304
  406334:	inc    esp
  406335:	mov    ds:0x2f765514,eax
  40633a:	push   ss
  40633b:	xchg   esi,eax
  40633c:	clc    
  40633d:	jmp    0x406303
  40633f:	iret   
  406340:	mov    edi,0xfa66277a
  406345:	cmp    BYTE PTR ds:0x9daae920,0x1c
  40634c:	pop    ebx
  40634d:	xchg   esi,eax
  40634e:	jge    0x40632f
  406350:	ret    
  406351:	arpl   WORD PTR [ebp+0x48],dx
  406354:	jmp    0x10a2f474
  406359:	ret    0x9311
  40635c:	mov    edx,0xf2cc536c
  406361:	adc    BYTE PTR [ebx+0x5b71a2a8],cl
  406367:	pop    ds
  406368:	lods   al,BYTE PTR ds:[esi]
  406369:	lahf   
  40636a:	ret    0xdbc6
  40636d:	dec    esi
  40636e:	mov    ebx,0x89822594
  406373:	sub    DWORD PTR [esp+ebx*4-0x28],esp
  406377:	jmp    0xebee:0x5a5c545b
  40637e:	popf   
  40637f:	mov    ch,0x17
  406381:	or     al,0xf4
  406383:	push   es
  406384:	push   ecx
  406385:	jl     0x406330
  406387:	ds and edx,0xffffffba
  40638b:	mov    BYTE PTR [ebx+0x40],0x92
  40638f:	rol    BYTE PTR [esi+edi*2-0x648afc24],1
  406396:	adc    BYTE PTR [edx],dh
  406398:	cwde   
  406399:	inc    ebx
  40639a:	mov    edx,0x171ce863
  40639f:	mov    dl,BYTE PTR [edx+0x164bb038]
  4063a5:	call   0x26a0:0xabb4efa8
  4063ac:	cld    
  4063ad:	cmp    al,0xcf
  4063af:	sbb    eax,0xb6e5cab9
  4063b4:	or     ecx,esi
  4063b6:	out    0x59,eax
  4063b8:	mov    DWORD PTR [esi+eiz*1-0x38],ecx
  4063bc:	jb     0x4063e9
  4063be:	inc    ebp
  4063bf:	ja     0x406399
  4063c1:	jbe    0x406395
  4063c3:	into   
  4063c4:	xor    DWORD PTR [ebp+0x66e04dff],0x27f7e13e
  4063ce:	lea    edi,[ecx-0x9]
  4063d1:	lea    ebx,[edi]
  4063d3:	mov    esp,0x7fd91a5e
  4063d8:	cwde   
  4063d9:	aas    
  4063da:	dec    esi
  4063db:	daa    
  4063dc:	dec    eax
  4063dd:	mov    ds:0x2318c39b,al
  4063e2:	mov    al,0x50
  4063e4:	out    dx,eax
  4063e5:	sub    edx,DWORD PTR [edx+0x4]
  4063e8:	retf   
  4063e9:	invd   
  4063eb:	xchg   esp,eax
  4063ec:	sbb    esp,DWORD PTR [esi+esi*1+0x24da0919]
  4063f3:	test   al,0xa5
  4063f5:	(bad)  
  4063f6:	jl     0x406420
  4063f8:	gs std 
  4063fa:	push   edx
  4063fb:	inc    ecx
  4063fc:	inc    ecx
  4063fd:	sub    bh,dh
  4063ff:	inc    edi
  406400:	adc    al,0x7c
  406402:	sahf   
  406403:	je     0x4063fd
  406405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406407:	aaa    
  406408:	jp     0x4063d8
  40640a:	xor    BYTE PTR [edi+0x69b25776],dl
  406410:	stos   BYTE PTR es:[edi],al
  406411:	(bad)  
  406412:	mov    dl,0x79
  406414:	popa   
  406415:	sahf   
  406416:	mov    ah,0xaf
  406418:	xor    BYTE PTR [ebx+0x1c],ah
  40641b:	xchg   ecx,eax
  40641c:	cmp    edx,edx
  40641e:	push   esi
  40641f:	cdq    
  406420:	pop    edx
  406421:	xor    BYTE PTR [esi+0x26],cl
  406424:	ds into 
  406426:	jb     0x406409
  406428:	adc    BYTE PTR [ebp-0x79a8347f],bh
  40642e:	cmp    BYTE PTR [esi],bh
  406430:	xchg   DWORD PTR [edi+edi*8+0x19],eax
  406434:	inc    edx
  406435:	inc    ebp
  406436:	mov    esp,DWORD PTR [edx-0x61f9eb63]
  40643c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40643e:	dec    edi
  40643f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406440:	mov    ebx,DWORD PTR [edi+0x71c5c0bf]
  406446:	jb     0x40641e
  406448:	lock or eax,0x1823ff3a
  40644e:	stos   BYTE PTR es:[edi],al
  40644f:	loop   0x4063f3
  406451:	mov    dh,0x8e
  406453:	in     eax,0x14
  406455:	push   ds
  406456:	or     edx,eax
  406458:	pop    ebp
  406459:	outs   dx,DWORD PTR ds:[esi]
  40645a:	and    dl,dh
  40645c:	loop   0x4064a2
  40645e:	fistp  DWORD PTR [edx]
  406460:	stos   DWORD PTR es:[edi],eax
  406461:	lock mov ds:0x52c606dc,eax
  406467:	out    dx,al
  406468:	mov    al,ds:0x721576a7
  40646d:	push   edi
  40646e:	add    BYTE PTR [eax],dl
  406470:	nop
  406471:	enter  0x6be6,0x8
  406475:	loopne 0x4064b5
  406477:	clc    
  406478:	sub    ebp,DWORD PTR [edi]
  40647a:	and    edi,eax
  40647c:	sbb    BYTE PTR [eax],cl
  40647e:	or     DWORD PTR [edx+0x2e],ebp
  406481:	scas   al,BYTE PTR es:[edi]
  406482:	cmp    eax,0x8928ddcb
  406487:	and    al,0xcb
  406489:	test   eax,0x20fbbab
  40648e:	dec    edi
  40648f:	mov    ?,WORD PTR [edx+0x70]
  406492:	fadd   st(2),st
  406494:	mov    eax,0x62f9f968
  406499:	imul   edx,DWORD PTR [edi],0x8f00affa
  40649f:	icebp  
  4064a0:	pop    ebp
  4064a1:	loopne 0x4064d8
  4064a3:	push   esi
  4064a4:	mov    al,ds:0x442c3127
  4064a9:	mov    ah,0xcf
  4064ab:	lahf   
  4064ac:	inc    ebp
  4064ad:	jecxz  0x406452
  4064af:	jl     0x406446
  4064b1:	fisttp WORD PTR [edx-0x13]
  4064b4:	shr    DWORD PTR [ebp-0x4e1f78f],0x50
  4064bb:	adc    bh,al
  4064bd:	mov    BYTE PTR [esi],bl
  4064bf:	lea    edi,[eax+edi*4-0x17]
  4064c3:	int    0x64
  4064c5:	adc    dh,al
  4064c7:	(bad)  
  4064c8:	(bad)  
  4064c9:	jge    0x406459
  4064cb:	adc    ebp,DWORD PTR [ebp-0x66]
  4064ce:	dec    ecx
  4064cf:	icebp  
  4064d0:	cmp    al,BYTE PTR [ebx+0x7]
  4064d3:	out    0xdf,al
  4064d5:	popa   
  4064d6:	pop    DWORD PTR [esp+eiz*2]
  4064d9:	retf   0x688d
  4064dc:	sub    ebp,DWORD PTR [edi+0x3dbc8b0e]
  4064e2:	scas   al,BYTE PTR es:[edi]
  4064e3:	xchg   ebp,eax
  4064e4:	test   eax,0x5b33f2f7
  4064e9:	(bad)  
  4064ea:	fdiv   DWORD PTR [ebx]
  4064ec:	push   edi
  4064ed:	jo     0x40653f
  4064ef:	outs   dx,BYTE PTR ds:[esi]
  4064f0:	push   ebx
  4064f1:	or     WORD PTR [eax],dx
  4064f4:	add    DWORD PTR [edi+edi*8+0x66283e],ebp
  4064fb:	mov    ecx,0x40792ebb
  406500:	mov    ah,0x2d
  406502:	mov    ch,0xfa
  406504:	ja     0x406545
  406506:	outs   dx,DWORD PTR ds:[esi]
  406507:	push   cs
  406508:	test   BYTE PTR [ebx],dl
  40650a:	cmp    esi,DWORD PTR [edi-0x3c]
  40650d:	and    ebx,DWORD PTR [ebx-0x61e345a3]
  406513:	sar    DWORD PTR [ecx-0x61],1
  406516:	jle    0x4064e4
  406518:	pop    ecx
  406519:	mov    esi,0xa6fe9024
  40651e:	push   ebp
  40651f:	mov    cl,0xd1
  406521:	xor    bl,BYTE PTR [ecx]
  406523:	mov    al,ds:0xa327fedf
  406528:	jmp    0x406595
  40652a:	fimul  DWORD PTR [eax-0x21]
  40652d:	std    
  40652e:	out    0x4d,al
  406530:	sub    DWORD PTR [ecx-0x5e57c1d8],eax
  406536:	cmp    BYTE PTR [edi],ch
  406538:	jmp    0xf64c8941
  40653d:	jp     0x4064cf
  40653f:	add    DWORD PTR [esi-0x29d68309],ecx
  406545:	mov    eax,ds:0xe918947
  40654a:	gs loope 0x4065b3
  40654d:	inc    esp
  40654e:	mov    ah,BYTE PTR [ecx]
  406550:	jp     0x40657a
  406552:	cli    
  406553:	or     ah,dl
  406555:	mov    ah,0x86
  406557:	inc    esi
  406558:	sub    eax,0x3b63af8c
  40655d:	lahf   
  40655e:	(bad)  
  40655f:	popf   
  406560:	nop
  406561:	scas   al,BYTE PTR es:[edi]
  406562:	shl    BYTE PTR [esi-0x44],0x3d
  406566:	out    dx,eax
  406567:	dec    ebx
  406568:	pop    esp
  406569:	stc    
  40656a:	test   al,0x4f
  40656c:	fild   DWORD PTR [edi]
  40656e:	arpl   WORD PTR [eax-0x4c],sp
  406571:	push   ebp
  406572:	and    ebp,DWORD PTR [edx-0x7e51251e]
  406578:	nop
  406579:	push   esp
  40657a:	in     eax,0x4a
  40657c:	aas    
  40657d:	and    edi,DWORD PTR [ebx]
  40657f:	stos   DWORD PTR es:[edi],eax
  406580:	adc    al,0xfc
  406582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406583:	pop    es
  406584:	pop    ds
  406585:	xchg   ebp,eax
  406586:	stos   DWORD PTR es:[edi],eax
  406587:	mov    ebx,0x454e90b5
  40658c:	jae    0x4065c2
  40658e:	xor    bh,BYTE PTR [edi+esi*2-0x10]
  406592:	add    al,0x9c
  406594:	mov    al,0xca
  406596:	bound  esp,QWORD PTR [esi]
  406598:	mov    eax,0x619b878e
  40659d:	retf   0xa68d
  4065a0:	adc    DWORD PTR [esi+0x4734795b],eax
  4065a6:	call   0xb668ba20
  4065ab:	and    al,0x29
  4065ad:	pop    esp
  4065ae:	or     ebx,ebp
  4065b0:	cmp    ebp,0xffffff9b
  4065b3:	retf   
  4065b4:	xchg   DWORD PTR [esi],edi
  4065b6:	pop    edx
  4065b7:	add    al,0x47
  4065b9:	daa    
  4065ba:	jge    0x40659b
  4065bc:	shl    BYTE PTR [ebp+0x54],1
  4065bf:	daa    
  4065c0:	loop   0x406558
  4065c2:	fisubr DWORD PTR [eax]
  4065c4:	pop    esi
  4065c5:	inc    ecx
  4065c6:	jge    0x406606
  4065c8:	rol    BYTE PTR [esi-0x2161f34e],cl
  4065ce:	push   edi
  4065cf:	push   edi
  4065d0:	cmp    DWORD PTR [edx-0x2bed5f48],eax
  4065d6:	inc    edi
  4065d7:	(bad)  
  4065d9:	call   0xdd9a:0xf471f061
  4065e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e1:	pushf  
  4065e2:	jg     0x4065d0
  4065e4:	push   edx
  4065e5:	inc    esp
  4065e6:	xor    DWORD PTR [edx+0x5263a481],edi
  4065ec:	add    edx,DWORD PTR [edi-0x17960b41]
  4065f2:	in     eax,dx
  4065f3:	add    dl,ah
  4065f5:	(bad)  
  4065f6:	jmp    0x4065c4
  4065f8:	sahf   
  4065f9:	fs cmc 
  4065fb:	push   eax
  4065fc:	or     DWORD PTR [edi-0x2a70074f],ecx
  406602:	clc    
  406603:	mov    bh,BYTE PTR [ebx]
  406605:	loope  0x40660d
  406607:	in     eax,dx
  406608:	mov    ds:0x67733e37,al
  40660d:	xor    eax,0x565712b
  406612:	aaa    
  406613:	(bad)  
  406614:	ins    BYTE PTR es:[edi],dx
  406615:	sub    ebx,DWORD PTR [edi-0x5d579934]
  40661b:	pop    ecx
  40661c:	jmp    0x9338ae2
  406621:	pop    edi
  406622:	add    edi,DWORD PTR [eax]
  406624:	idiv   edx
  406626:	idiv   DWORD PTR [bp+si-0x57e2]
  40662b:	push   0x5c
  40662d:	xor    al,0x9d
  40662f:	fidivr WORD PTR [ebp+0x3a]
  406632:	fs and eax,0xa18f704e
  406638:	or     ecx,ebp
  40663a:	jbe    0x4065d1
  40663c:	cdq    
  40663d:	fiadd  DWORD PTR [ebx]
  40663f:	fld    DWORD PTR [ebx-0x5c7e3658]
  406645:	test   BYTE PTR [eax],bh
  406647:	inc    edi
  406648:	int    0xb
  40664a:	cdq    
  40664b:	ror    DWORD PTR [eax+0x33a661e7],cl
  406651:	int    0x63
  406653:	sub    DWORD PTR [ebp+ebp*8+0x68],edi
  406657:	jae    0x406637
  406659:	pop    esi
  40665a:	add    ebx,eax
  40665c:	ja     0x4065fe
  40665e:	jae    0x406641
  406660:	sbb    al,0xfe
  406662:	cmp    BYTE PTR [ebp-0x73e80c2],cl
  406668:	arpl   WORD PTR [edx],di
  40666a:	lods   al,BYTE PTR ds:[esi]
  40666b:	add    DWORD PTR [ecx-0x4247e39f],ebp
  406671:	jns    0x4066aa
  406673:	(bad)  
  406674:	iret   
  406675:	push   edx
  406676:	out    dx,al
  406677:	jne    0x406670
  406679:	(bad)  
  40667a:	retf   
  40667b:	dec    ecx
  40667c:	jmp    0x564fef62
  406681:	pop    eax
  406682:	jp     0x40662f
  406684:	and    esp,DWORD PTR [edi]
  406686:	mov    ch,0x6b
  406688:	jge    0x4066ab
  40668a:	push   ss
  40668b:	rcl    ch,0x3
  40668e:	or     dl,BYTE PTR [ecx]
  406690:	or     eax,0xb8b50a66
  406695:	test   BYTE PTR [edi-0x64e7e49a],0x9a
  40669c:	mov    ?,WORD PTR [edi+eax*4-0x42adb33f]
  4066a3:	stos   BYTE PTR es:[edi],al
  4066a4:	je     0x4066d7
  4066a6:	data16 mov ah,0xaa
  4066a9:	pop    esp
  4066aa:	pop    ebp
  4066ab:	cdq    
  4066ac:	pop    eax
  4066ad:	(bad)
  4066b0:	mov    edi,0x482e2bc1
  4066b5:	or     eax,DWORD PTR [ecx]
  4066b7:	ror    BYTE PTR [eax+0x7f4d11b8],cl
  4066bd:	adc    DWORD PTR [edi+edx*4],esi
  4066c0:	lods   eax,DWORD PTR ds:[esi]
  4066c1:	(bad)  [ecx+0x6]
  4066c4:	adc    eax,0xc3b827f8
  4066c9:	or     eax,0x97311e92
  4066ce:	scas   al,BYTE PTR es:[edi]
  4066cf:	push   eax
  4066d0:	jge    0x4066a8
  4066d2:	retf   0xcc36
  4066d5:	in     eax,dx
  4066d6:	retf   0xa3fc
  4066d9:	sbb    ecx,ebp
  4066db:	(bad)  
  4066dc:	les    ecx,FWORD PTR [esi+ecx*1+0x29]
  4066e0:	inc    eax
  4066e1:	inc    edi
  4066e2:	add    DWORD PTR [ebp+0x59],ecx
  4066e5:	mov    al,ds:0x13b32c47
  4066ea:	xor    esi,DWORD PTR [ecx+0x2c34b41b]
  4066f0:	cs je  0x4066f0
  4066f3:	jbe    0x40668e
  4066f5:	jg     0x4066a8
  4066f7:	add    BYTE PTR [ecx],0x8a
  4066fa:	add    ah,BYTE PTR [eax]
  4066fc:	or     cl,BYTE PTR [edi-0x4a]
  4066ff:	stos   DWORD PTR es:[edi],eax
  406700:	fist   DWORD PTR ds:0xe8ecb470
  406706:	mov    al,0x82
  406708:	or     DWORD PTR [edi-0x57],0x22
  40670c:	and    al,0x64
  40670e:	hlt    
  40670f:	pop    edx
  406710:	inc    eax
  406711:	popa   
  406712:	cmp    dl,al
  406714:	adc    edi,ebp
  406716:	sbb    al,0x88
  406718:	push   es
  406719:	inc    ebx
  40671a:	out    0xec,eax
  40671c:	dec    ecx
  40671d:	jns    0x406704
  40671f:	popa   
  406720:	mov    ecx,0xbcf1cf40
  406725:	retf   0x9417
  406728:	loope  0x4066e5
  40672a:	ins    BYTE PTR es:[edi],dx
  40672b:	mov    esp,DWORD PTR [edi-0x41]
  40672e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40672f:	test   bh,cl
  406731:	pop    edi
  406732:	ds adc eax,0x7ed6f20a
  406738:	enter  0xe049,0x26
  40673c:	ror    BYTE PTR [esi+0x3e],1
  40673f:	or     ah,bh
  406741:	(bad)  
  406742:	cmc    
  406743:	adc    DWORD PTR [ebp-0x54c0606e],0x72
  40674a:	test   bl,0xaa
  40674d:	jl     0x4067a5
  40674f:	adc    ebx,DWORD PTR [esi-0xea3ee43]
  406755:	ins    BYTE PTR es:[edi],dx
  406756:	sub    al,0xe2
  406758:	pop    ebx
  406759:	std    
  40675a:	(bad)  
  40675b:	push   eax
  40675c:	and    ah,cl
  40675e:	outs   dx,BYTE PTR ds:[esi]
  40675f:	adc    dh,BYTE PTR [eax+0x4f3757e]
  406765:	in     eax,dx
  406766:	dec    ecx
  406767:	adc    al,0x9f
  406769:	sbb    BYTE PTR [edx],0x60
  40676c:	pop    ecx
  40676d:	jl     0x4067a3
  40676f:	mov    eax,ds:0xf558664d
  406774:	hlt    
  406775:	pop    eax
  406776:	stos   DWORD PTR es:[edi],eax
  406777:	jne    0x4066fe
  406779:	lea    edi,[eax+esi*1]
  40677c:	out    dx,al
  40677d:	dec    ecx
  40677e:	shl    DWORD PTR [esi],1
  406780:	psllw  mm6,QWORD PTR [ebp-0xe14a60a]
  406787:	arpl   WORD PTR [ebp+0x45],cx
  40678a:	gs loope 0x4067b1
  40678d:	push   eax
  40678e:	add    esp,DWORD PTR [edi]
  406790:	jns    0x4067fb
  406792:	dec    ebx
  406793:	(bad)  
  406795:	test   BYTE PTR [ebx-0x182d4ec],cl
  40679b:	lods   al,BYTE PTR ds:[esi]
  40679c:	pop    ds
  40679d:	or     ah,BYTE PTR [eax-0x20]
  4067a0:	mov    eax,ds:0x9bc2f24e
  4067a5:	jp     0x40672d
  4067a7:	adc    bl,BYTE PTR ds:[edx-0x3d]
  4067ab:	std    
  4067ac:	sbb    ebp,DWORD PTR [edx+0x6931b42a]
  4067b2:	pop    eax
  4067b3:	daa    
  4067b4:	pop    esi
  4067b5:	lds    esi,FWORD PTR [ebx-0x33]
  4067b8:	es push esi
  4067ba:	pop    ebx
  4067bb:	inc    eax
  4067bc:	dec    dx
  4067be:	pop    ebx
  4067bf:	test   ah,al
  4067c1:	jae    0x406778
  4067c3:	cmp    dl,BYTE PTR [ebx]
  4067c5:	cwde   
  4067c6:	and    eax,0x4e7bc26e
  4067cb:	add    al,0xcb
  4067cd:	cmp    al,BYTE PTR [edx+0x3eb77541]
  4067d3:	mov    BYTE PTR [edx+0xc],dh
  4067d6:	(bad)  
  4067d8:	jecxz  0x40680e
  4067da:	cmp    DWORD PTR [eax],eax
  4067dc:	dec    ebx
  4067dd:	stc    
  4067de:	cmp    BYTE PTR [esi],bl
  4067e0:	mov    ah,0x7d
  4067e2:	pop    edi
  4067e3:	xor    eax,0x8434892c
  4067e8:	push   0x1c
  4067ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067eb:	cmp    ch,BYTE PTR [edi-0x38]
  4067ee:	add    ecx,ebx
  4067f0:	dec    edx
  4067f1:	lock jae 0x406833
  4067f4:	out    0xd9,eax
  4067f6:	cdq    
  4067f7:	sbb    dh,BYTE PTR [ecx]
  4067f9:	int3   
  4067fa:	sub    ecx,edx
  4067fc:	inc    ecx
  4067fd:	fcomi  st,st(3)
  4067ff:	neg    ebp
  406801:	pop    edi
  406802:	inc    esp
  406803:	lods   al,BYTE PTR ds:[esi]
  406804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406805:	mov    ds:0x3fcb5969,eax
  40680a:	xor    eax,0xbc90cee9
  40680f:	xchg   edi,eax
  406810:	(bad)  
  406812:	fimul  WORD PTR [ebx+ebp*4]
  406815:	inc    ebp
  406816:	adc    al,0xce
  406818:	hlt    
  406819:	fwait
  40681a:	imul   edx,DWORD PTR [eax],0x86ec8cec
  406820:	xor    DWORD PTR [eax+0x16],edx
  406823:	ds jle 0x40688c
  406826:	add    DWORD PTR ds:0x51843645,ebp
  40682c:	inc    eax
  40682d:	and    BYTE PTR [eax-0x5bd0627e],dh
  406833:	bound  ecx,QWORD PTR [eax+0x3a]
  406836:	dec    sp
  406838:	mov    ds:0xe6c07516,eax
  40683d:	out    0x3d,eax
  40683f:	stos   DWORD PTR es:[edi],eax
  406840:	mov    ebx,0x4a0b2ff8
  406845:	mov    ah,BYTE PTR ds:0xf4f330b3
  40684b:	cmp    al,0x8a
  40684d:	xor    edi,DWORD PTR [esi-0x3bc1f3f6]
  406853:	daa    
  406854:	sbb    eax,0x8c9be2d8
  406859:	jmp    0xf5cde387
  40685e:	js     0x406892
  406860:	sub    DWORD PTR [eax+0x387648b1],esp
  406866:	lock scas eax,DWORD PTR es:[edi]
  406868:	mov    dh,BYTE PTR [ebx-0x561e5787]
  40686e:	out    0x84,al
  406870:	sub    al,0x8f
  406872:	dec    ebp
  406873:	(bad)  
  406874:	mov    ebx,0x6109f713
  406879:	jbe    0x4068bb
  40687b:	ror    DWORD PTR [esi-0x11],cl
  40687e:	mov    ah,0xf7
  406880:	add    al,0xeb
  406882:	jle    0x4068e7
  406884:	lea    esi,[esi-0x41987a27]
  40688a:	sahf   
  40688b:	xchg   esp,eax
  40688c:	(bad)  
  40688d:	in     eax,dx
  40688e:	and    DWORD PTR [esi],ebx
  406890:	pop    es
  406891:	jge    0x4068ed
  406893:	and    ah,BYTE PTR [esi-0x16]
  406896:	(bad)  
  406897:	ins    DWORD PTR es:[edi],dx
  406898:	inc    DWORD PTR [ebp-0x1a]
  40689b:	mov    ds:0xeffd99ca,eax
  4068a0:	mov    al,ds:0x8e3db1b8
  4068a5:	adc    BYTE PTR [ebx-0x30664be6],ah
  4068ab:	mov    bl,0xc9
  4068ad:	lahf   
  4068ae:	jne    0x406924
  4068b0:	std    
  4068b1:	mov    eax,ds:0xfaea23c1
  4068b6:	mov    al,ds:0x1c908c73
  4068bb:	adc    bl,BYTE PTR [ebp+0x79ffa846]
  4068c1:	jnp    0x406914
  4068c3:	cwde   
  4068c4:	and    BYTE PTR [eax],ah
  4068c6:	jbe    0x406862
  4068c8:	push   0x5f
  4068ca:	in     al,dx
  4068cb:	ja     0x40689f
  4068cd:	xor    cl,BYTE PTR [ecx+ebx*4-0x45]
  4068d1:	and    DWORD PTR [ebp+0x3d50b0f6],ecx
  4068d7:	(bad)
  4068db:	or     ebx,edi
  4068dd:	and    esp,edx
  4068df:	ror    DWORD PTR [ebx-0x7b],cl
  4068e2:	lahf   
  4068e3:	ja     0x406956
  4068e5:	lds    ebp,FWORD PTR [edi-0x31]
  4068e8:	outs   dx,BYTE PTR ds:[esi]
  4068e9:	add    edx,0xb86644b1
  4068ef:	cmp    edi,DWORD PTR [edi+0x50]
  4068f2:	popf   
  4068f3:	adc    BYTE PTR [ebx-0x75662eec],cl
  4068f9:	imul   ebx,DWORD PTR [ebp+0x2f],0x9d6cf90
  406900:	aad    0xe0
  406902:	pop    esi
  406903:	outs   dx,DWORD PTR ds:[esi]
  406904:	out    0x5a,al
  406906:	xor    BYTE PTR [ecx+0x527318a6],bh
  40690c:	shr    DWORD PTR [ebx-0x3e],cl
  40690f:	dec    edx
  406910:	sbb    esp,DWORD PTR ds:0x1dd0fdc
  406916:	xchg   BYTE PTR [edx+0x48fd9cd2],dl
  40691c:	out    dx,eax
  40691d:	xchg   edx,eax
  40691e:	xchg   edx,eax
  40691f:	mov    esi,0xff81a18e
  406924:	jb     0x40698c
  406926:	adc    ecx,DWORD PTR [ebx-0x2df51afa]
  40692c:	sub    eax,0xa2d6f41
  406931:	add    eax,0xa2772b28
  406936:	out    dx,al
  406937:	loope  0x40691f
  406939:	mov    ds:0x2f81752b,al
  40693e:	stos   DWORD PTR es:[edi],eax
  40693f:	out    0x6c,al
  406941:	das    
  406942:	mov    ebp,0xaa9fa843
  406947:	sbb    BYTE PTR [eax-0x6c4e5cd2],bl
  40694d:	sbb    BYTE PTR ds:0x29bdaa1,ch
  406953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406954:	sbb    ah,BYTE PTR [ecx+0x31]
  406957:	fwait
  406958:	and    dh,ch
  40695a:	sbb    ebp,DWORD PTR [esi-0x1d]
  40695d:	cmp    DWORD PTR [ebx+0x68],eax
  406960:	or     eax,0xdd13fcbc
  406965:	sbb    DWORD PTR [edi+0x61426e9b],esp
  40696b:	pop    ebx
  40696c:	sub    eax,0x8a4b2546
  406971:	imul   edx,DWORD PTR [ebp-0x242b074],0x9bfa1718
  40697b:	fwait
  40697c:	xor    eax,0x9abc63cf
  406981:	scas   al,BYTE PTR es:[edi]
  406982:	inc    ecx
  406983:	mov    dl,0xdb
  406985:	aaa    
  406986:	push   esp
  406987:	call   0x3b4c90aa
  40698c:	test   BYTE PTR [ebx],bl
  40698e:	and    dh,BYTE PTR [ecx+0xa50a4da]
  406994:	cdq    
  406995:	sbb    al,0x40
  406997:	inc    eax
  406998:	mov    cl,0xe6
  40699a:	shr    DWORD PTR [ebx],1
  40699c:	sub    al,BYTE PTR cs:[ecx+0x1]
  4069a0:	dec    ebp
  4069a1:	mov    eax,0xe4173d71
  4069a6:	push   esi
  4069a7:	std    
  4069a8:	adc    dl,0xf5
  4069ab:	loopne 0x4069c3
  4069ad:	sub    al,0x4f
  4069af:	test   eax,0x14f08264
  4069b4:	loopne 0x4069ce
  4069b6:	push   cs
  4069b7:	sub    dh,BYTE PTR [ecx]
  4069b9:	or     BYTE PTR ds:0xb2ad0dcd,al
  4069bf:	(bad)  
  4069c0:	jo     0x406949
  4069c2:	mov    al,ds:0xaecc3939
  4069c7:	or     esp,eax
  4069c9:	ss pop esi
  4069cb:	mov    ch,0x66
  4069cd:	add    DWORD PTR [edi+edx*1-0x5589cc7d],ebx
  4069d4:	popf   
  4069d5:	stos   BYTE PTR es:[edi],al
  4069d6:	or     dl,bl
  4069d8:	and    bh,BYTE PTR [ebp-0x1d]
  4069db:	int3   
  4069dc:	or     al,cl
  4069de:	xchg   BYTE PTR [eax-0x12],bh
  4069e1:	iret   
  4069e2:	(bad)  
  4069e3:	sti    
  4069e4:	pop    edx
  4069e5:	es stos BYTE PTR es:[edi],al
  4069e7:	mov    ds:0x3bc67c30,eax
  4069ec:	dec    esp
  4069ed:	mov    bl,0x90
  4069ef:	shr    DWORD PTR [ebp+0x16],cl
  4069f2:	test   BYTE PTR [eax-0x72],dh
  4069f5:	lea    edi,[ebx-0x5d]
  4069f8:	dec    edi
  4069f9:	cld    
  4069fa:	cmp    ah,BYTE PTR [eax]
  4069fc:	inc    edi
  4069fd:	cmp    dl,ah
  4069ff:	xlat   BYTE PTR ds:[ebx]
  406a00:	cli    
  406a01:	xchg   eax,edx
  406a03:	imul   ebp,DWORD PTR [ebx],0xee10cdd9
  406a09:	mov    ebx,DWORD PTR [esi-0x6ffdb826]
  406a0f:	aam    0xf3
  406a11:	jnp    0x4069d9
  406a13:	adc    BYTE PTR [ebp+eiz*8+0x57b684ec],0xdf
  406a1b:	gs popa 
  406a1d:	cwde   
  406a1e:	test   DWORD PTR [ecx+ecx*2-0x47e18caf],esp
  406a25:	cmp    eax,0xdddfc273
  406a2a:	mov    edi,DWORD PTR [esi-0x7c07ee0]
  406a30:	jns    0x4069e4
  406a32:	sbb    eax,0xb2f1040
  406a37:	mov    BYTE PTR [edx-0x6d],cl
  406a3a:	mov    eax,ds:0x9998b189
  406a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a40:	mov    cl,0x83
  406a42:	push   0xffffffae
  406a44:	pop    ebp
  406a45:	mov    ebx,0x7badfd16
  406a4a:	fild   QWORD PTR [ebx+0x7]
  406a4d:	cs std 
  406a4f:	popa   
  406a50:	je     0x406a8d
  406a52:	add    esi,eax
  406a54:	xlat   BYTE PTR ds:[ebx]
  406a55:	sti    
  406a56:	je     0x406a83
  406a58:	sub    dh,BYTE PTR [esi]
  406a5a:	(bad)  
  406a5b:	das    
  406a5c:	loope  0x406a6f
  406a5e:	loope  0x406a28
  406a60:	push   ebx
  406a61:	cmp    eax,0xc1dfbb86
  406a66:	(bad)  
  406a67:	rcr    ebp,1
  406a69:	xchg   BYTE PTR fs:[edx-0x7493bbba],bl
  406a70:	xor    ecx,edi
  406a72:	mov    eax,0xfde4ddc
  406a77:	mov    bh,0xd8
  406a79:	(bad)  
  406a7a:	aam    0xb8
  406a7c:	mov    eax,0xf32a0fd3
  406a81:	mov    esp,0x2543cc59
  406a86:	fdiv   DWORD PTR [eax+0x42]
  406a89:	int    0x8
  406a8b:	outs   dx,BYTE PTR ds:[esi]
  406a8c:	daa    
  406a8d:	sub    DWORD PTR [ebx-0x52246fef],edi
  406a93:	in     al,0x6c
  406a95:	lahf   
  406a96:	or     DWORD PTR [ecx-0x2b],0xbfa2b467
  406a9d:	rcr    DWORD PTR [ebx+0x48170104],1
  406aa3:	pop    ebp
  406aa4:	sub    dl,dl
  406aa6:	mov    ebp,0xa98fc8c5
  406aab:	pop    ss
  406aac:	clc    
  406aad:	mov    cl,0xc7
  406aaf:	jne    0x406b05
  406ab1:	scas   al,BYTE PTR es:[edi]
  406ab2:	fcomp  QWORD PTR [esi-0x565524b9]
  406ab8:	and    eax,0xa8e0a8e8
  406abd:	repz mov cl,0x5b
  406ac0:	out    dx,al
  406ac1:	(bad)  
  406ac2:	out    dx,al
  406ac3:	std    
  406ac4:	aas    
  406ac5:	iret   
  406ac6:	popf   
  406ac7:	adc    al,BYTE PTR [ecx]
  406ac9:	rol    DWORD PTR [esi+0x10],0x20
  406acd:	sub    eax,0x73c4419b
  406ad2:	dec    ecx
  406ad3:	rcl    BYTE PTR [eax+0x20455fc9],1
  406ad9:	popa   
  406ada:	aas    
  406adb:	xchg   edx,eax
  406adc:	lock xor eax,0x689a0294
  406ae2:	pop    esi
  406ae3:	dec    ebx
  406ae4:	inc    esp
  406ae5:	loope  0x406b2b
  406ae7:	adc    BYTE PTR [ebx+eax*2-0x5b],dh
  406aeb:	mov    bh,0xbc
  406aed:	inc    ecx
  406aee:	loope  0x406ad9
  406af0:	(bad)  [edi+0xe0812b]
  406af6:	ja     0x406aad
  406af8:	jmp    0x406a82
  406afa:	fiadd  DWORD PTR [eax]
  406afc:	xor    DWORD PTR [ebx],edi
  406afe:	sbb    al,0x86
  406b00:	cmc    
  406b01:	push   ss
  406b02:	cdq    
  406b03:	jns    0x406acd
  406b05:	pop    ss
  406b06:	mov    al,0x25
  406b08:	xor    DWORD PTR [edx+0x6d6cdf11],esi
  406b0e:	add    dh,BYTE PTR [ebp+0xc]
  406b11:	mov    ah,0x18
  406b13:	adc    BYTE PTR [esi-0x43],cl
  406b16:	jmp    0x406b39
  406b18:	ss mov dl,0x54
  406b1b:	ficom  WORD PTR [esi+edi*2-0x14]
  406b1f:	and    BYTE PTR [eax+ecx*2-0x21bf5d7e],cl
  406b26:	es stc 
  406b28:	or     DWORD PTR [esi+esi*1],edi
  406b2b:	cmp    dl,ah
  406b2d:	push   cs
  406b2e:	pusha  
  406b2f:	fdivr  QWORD PTR [ebx+edx*1+0x6a52b77b]
  406b36:	xchg   BYTE PTR [ecx],ch
  406b38:	outs   dx,DWORD PTR ds:[esi]
  406b39:	stos   DWORD PTR es:[edi],eax
  406b3a:	mov    ebx,0x28b51b02
  406b3f:	dec    ebp
  406b40:	adc    BYTE PTR [esi-0x389e555e],ah
  406b46:	and    DWORD PTR [ebx],edx
  406b48:	shl    DWORD PTR [ebx+0x7ef79b25],0x5d
  406b4f:	xchg   edx,eax
  406b50:	lock pop ebp
  406b52:	(bad)  
  406b53:	call   0xc9ea7360
  406b58:	jle    0x406b52
  406b5a:	mov    DWORD PTR [esi],edx
  406b5c:	(bad)  
  406b5d:	sti    
  406b5e:	out    dx,al
  406b5f:	sbb    eax,0x2219cfd5
  406b64:	adc    eax,0xc36d7bdf
  406b69:	ja     0x406b89
  406b6b:	mov    eax,ds:0x599cf11f
  406b70:	cwde   
  406b71:	or     eax,0xf2830731
  406b76:	in     al,dx
  406b77:	sub    esi,ecx
  406b79:	xchg   edi,eax
  406b7a:	ds jmp 0x1747:0xa9a34545
  406b82:	ds popaw 
  406b85:	pop    esi
  406b86:	and    ah,BYTE PTR [edi]
  406b88:	inc    edx
  406b89:	sbb    esi,ebp
  406b8b:	sbb    bh,BYTE PTR [eax]
  406b8d:	mov    DWORD PTR [eax+0x2d],ebp
  406b90:	xchg   ebx,eax
  406b91:	mov    ah,0xe2
  406b93:	les    ecx,FWORD PTR [ebp+ebp*4-0x7]
  406b97:	inc    esp
  406b98:	add    eax,0x864230ce
  406b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b9e:	xchg   BYTE PTR [ebp-0x5fb455e0],ch
  406ba4:	mov    ebx,0xcab50b6e
  406ba9:	mov    esi,0xd703be14
  406bae:	or     ebp,DWORD PTR [edx+0x513b008]
  406bb4:	jo     0x406bb9
  406bb6:	jg     0x406baa
  406bb8:	pop    ebx
  406bb9:	adc    bl,BYTE PTR [esi+0x5]
  406bbc:	(bad)  
  406bbd:	cdq    
  406bbe:	mov    dl,0x2d
  406bc0:	sbb    esi,edi
  406bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc3:	jp     0x406c2d
  406bc5:	add    ecx,DWORD PTR [esp+eax*4+0x5c9a1577]
  406bcc:	xchg   ebx,eax
  406bcd:	cmp    cl,al
  406bcf:	enter  0xba71,0xd1
  406bd3:	mov    ecx,DWORD PTR [ecx+eax*8-0x74]
  406bd7:	stos   BYTE PTR es:[edi],al
  406bd8:	and    DWORD PTR [esi-0x645fb35f],0x3a
  406bdf:	nop
  406be0:	dec    ebp
  406be1:	mov    bl,0xfc
  406be3:	mov    dl,0xae
  406be5:	pop    es
  406be6:	xchg   ecx,eax
  406be7:	push   ebp
  406be8:	aam    0x28
  406bea:	dec    eax
  406beb:	push   ss
  406bec:	das    
  406bed:	or     BYTE PTR [ecx],al
  406bef:	nop
  406bf0:	shr    DWORD PTR [ebx-0x1e],1
  406bf3:	xchg   esp,eax
  406bf4:	pop    ds
  406bf5:	lock stos BYTE PTR es:[edi],al
  406bf7:	ds sbb eax,0x9d589097
  406bfd:	in     al,dx
  406bfe:	stos   DWORD PTR es:[edi],eax
  406bff:	imul   eax,DWORD PTR [edi],0x3a
  406c02:	xlat   BYTE PTR ds:[ebx]
  406c03:	cli    
  406c04:	pop    esp
  406c05:	xchg   BYTE PTR [edx+0x72c7c48c],dh
  406c0b:	loope  0x406bb7
  406c0d:	jb     0x406c34
  406c0f:	sub    al,0x23
  406c11:	mov    esp,DWORD PTR [eax-0x2bba9c4f]
  406c17:	adc    al,0x7d
  406c19:	arpl   WORD PTR [edi-0x5e],bx
  406c1c:	and    eax,0x3679b687
  406c21:	xchg   BYTE PTR [esi-0x55],cl
  406c24:	sbb    eax,0x1bde21b3
  406c29:	cmp    al,0xf4
  406c2b:	call   0x570f:0xeccbedad
  406c32:	js     0x406c7f
  406c34:	xor    DWORD PTR [edi],ebx
  406c36:	fcomip st,st(7)
  406c38:	lea    esi,[ecx-0x615f0c5f]
  406c3e:	mov    ebx,0x12449e41
  406c43:	mov    WORD PTR [edi+0x71],fs
  406c46:	xlat   BYTE PTR ds:[ebx]
  406c47:	mov    al,0xd7
  406c49:	adc    DWORD PTR [edx-0x5904312e],edx
  406c4f:	add    eax,0xdd06e8e1
  406c54:	into   
  406c55:	mov    esi,0x3e920071
  406c5a:	lods   eax,DWORD PTR ds:[esi]
  406c5b:	or     ebp,ebp
  406c5d:	call   0x8804:0x476fd60c
  406c64:	cmp    DWORD PTR [esi-0x17],0x41
  406c68:	xchg   esi,eax
  406c69:	addr16 mov bl,0x45
  406c6c:	mov    ah,0x12
  406c6e:	fdivr  QWORD PTR [edx-0x76ae5dee]
  406c74:	ret    0x1f23
  406c77:	popa   
  406c78:	popf   
  406c79:	or     al,0x21
  406c7b:	dec    edx
  406c7c:	mov    ebp,0x7243b606
  406c81:	imul   edx,DWORD PTR [edi+0xb4089fb],0xe9b484b3
  406c8b:	loope  0x406c89
  406c8d:	ins    DWORD PTR es:[edi],dx
  406c8e:	retf   0xef6d
  406c91:	and    ah,ch
  406c93:	(bad)  
  406c94:	call   0x5e8b:0x3a41b4e
  406c9b:	shl    ch,1
  406c9d:	enter  0x4edb,0x5d
  406ca1:	and    eax,0xb7b5b43a
  406ca6:	pop    edx
  406ca7:	lahf   
  406ca8:	mov    esp,0x792b2805
  406cad:	inc    ecx
  406cae:	les    edi,FWORD PTR [ecx]
  406cb0:	pop    esp
  406cb1:	or     bl,BYTE PTR [ecx]
  406cb3:	jge    0x406c7b
  406cb5:	imul   edx,DWORD PTR [edi+eiz*2+0x75],0xffffffc5
  406cba:	(bad)  
  406cbb:	mov    dh,0xba
  406cbd:	pop    esp
  406cbe:	cmp    ah,bl
  406cc0:	fwait
  406cc1:	push   ecx
  406cc2:	ror    BYTE PTR [eax+0x77],cl
  406cc5:	xor    edi,DWORD PTR [ebx-0x21edf9e9]
  406ccb:	mov    esi,0x88e1841f
  406cd0:	or     bh,BYTE PTR [ebx]
  406cd2:	inc    esi
  406cd3:	cmp    eax,0x7d9b9b8b
  406cd8:	lock pop ss
  406cda:	test   DWORD PTR [ebp-0x7434da3f],esp
  406ce0:	das    
  406ce1:	lods   eax,DWORD PTR ds:[esi]
  406ce2:	inc    edx
  406ce3:	mov    edi,edx
  406ce5:	pop    ebx
  406ce6:	push   es
  406ce7:	(bad)  
  406ce8:	je     0x406d42
  406cea:	in     al,0x39
  406cec:	je     0x406cef
  406cee:	mov    ds:0x585e5ef6,al
  406cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf4:	dec    eax
  406cf5:	std    
  406cf6:	jmp    DWORD PTR [edi-0x55]
  406cf9:	mov    bl,0xad
  406cfb:	cld    
  406cfc:	xor    BYTE PTR [esi+0x32573426],0x2c
  406d03:	stos   DWORD PTR es:[edi],eax
  406d04:	inc    edx
  406d05:	push   esp
  406d06:	dec    edx
  406d07:	scas   al,BYTE PTR es:[edi]
  406d08:	imul   ebx,DWORD PTR [ebx-0x64],0x4284f6ab
  406d0f:	(bad)  
  406d10:	cmp    bl,BYTE PTR [ecx+0x7a]
  406d13:	sar    bh,cl
  406d15:	aam    0x67
  406d17:	int3   
  406d18:	clc    
  406d19:	ss mov bl,ah
  406d1c:	adc    DWORD PTR [ebx-0x3f9da109],edx
  406d22:	scas   al,BYTE PTR es:[edi]
  406d23:	and    BYTE PTR [edx-0x54],dh
  406d26:	cli    
  406d27:	cwde   
  406d28:	lea    ecx,[ecx-0x7f]
  406d2b:	in     al,dx
  406d2c:	sar    BYTE PTR [ebp+0x17bc221c],1
  406d32:	scas   eax,DWORD PTR es:[edi]
  406d33:	xor    edi,esp
  406d35:	pop    edi
  406d36:	pop    es
  406d37:	cli    
  406d38:	cmp    eax,0x586a68f3
  406d3d:	jns    0x406da4
  406d3f:	xchg   ebx,eax
  406d40:	xchg   DWORD PTR [eax+0x30d7f6b],ebp
  406d46:	je     0x406ccb
  406d48:	popa   
  406d49:	add    ebx,esi
  406d4b:	mov    ebx,0xbff5dda
  406d50:	xchg   edx,eax
  406d51:	scas   al,BYTE PTR es:[edi]
  406d52:	jbe    0x406d52
  406d54:	lahf   
  406d55:	jmp    0xb0495082
  406d5a:	shl    DWORD PTR [ebx+ebp*4],cl
  406d5d:	dec    ebp
  406d5e:	pop    ebp
  406d5f:	jo     0x406dcd
  406d61:	push   0xffffffcf
  406d63:	mov    eax,0x223f5ba3
  406d68:	and    dh,dh
  406d6a:	out    0x1e,eax
  406d6c:	lods   al,BYTE PTR ds:[esi]
  406d6d:	lock mov esp,0xe01c5053
  406d73:	pushf  
  406d74:	(bad)
  406d77:	out    dx,eax
  406d78:	pop    esi
  406d79:	xlat   BYTE PTR ds:[ebx]
  406d7a:	call   0x503871cf
  406d7f:	ret    
  406d80:	push   es
  406d81:	in     al,0x71
  406d83:	inc    ebp
  406d84:	es paddq mm1,mm2
  406d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d89:	fmul   QWORD PTR [edi+0x16]
  406d8c:	out    dx,al
  406d8d:	mov    edx,DWORD PTR [esi-0xa8243d5]
  406d93:	xor    al,0xb6
  406d95:	mov    edx,0x1c559b80
  406d9a:	sub    DWORD PTR [ebp-0x4619c25f],edx
  406da0:	daa    
  406da1:	rcr    BYTE PTR [eax],1
  406da3:	test   al,0x57
  406da5:	xchg   BYTE PTR [ecx+0x2c],ch
  406da8:	cli    
  406da9:	dec    ebp
  406daa:	mov    bl,0x63
  406dac:	stos   BYTE PTR es:[edi],al
  406dad:	retf   0xa3bb
  406db0:	xor    edi,ebx
  406db2:	cmp    ch,ch
  406db4:	xor    al,0x17
  406db6:	jp     0x406de8
  406db8:	cmp    eax,DWORD PTR [edx]
  406dba:	jmp    0x406d6a
  406dbc:	push   ebp
  406dbd:	rcl    BYTE PTR [esi+0x27],cl
  406dc0:	gs push 0x4e93f087
  406dc6:	test   eax,0xaf875647
  406dcb:	in     al,0xb2
  406dcd:	shl    esp,0x85
  406dd0:	shl    BYTE PTR [edx+0x40],cl
  406dd3:	jmp    0x406dbe
  406dd5:	std    
  406dd6:	daa    
  406dd7:	hlt    
  406dd8:	mov    cl,0x14
  406dda:	in     al,dx
  406ddb:	jl     0x406dd9
  406ddd:	dec    edx
  406dde:	fnstcw WORD PTR [ecx-0x6e]
  406de1:	dec    ebx
  406de2:	sub    eax,0xabda5cd2
  406de7:	repnz adc eax,0xf4c45bf2
  406ded:	dec    esi
  406dee:	mov    esi,0x685c1c45
  406df3:	pop    ebp
  406df4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406df6:	mov    al,0xfc
  406df8:	call   0x6ca8afd6
  406dfd:	ret    
  406dfe:	call   0x6496d1a3
  406e03:	sbb    BYTE PTR [edx+0x33e6ab28],ah
  406e09:	cs inc ebx
  406e0b:	mov    bh,0x76
  406e0d:	jp     0x406dc2
  406e0f:	cmp    DWORD PTR [edx-0x5ead86d9],ecx
  406e15:	lahf   
  406e16:	mov    dl,0x1f
  406e18:	shl    ecx,cl
  406e1a:	push   edx
  406e1b:	popf   
  406e1c:	mov    edi,0xf1a05865
  406e21:	sub    ecx,ecx
  406e23:	xchg   esi,eax
  406e24:	repnz in eax,0x88
  406e27:	or     eax,0x4886d895
  406e2c:	sbb    DWORD PTR [ebx],ebx
  406e2e:	ficomp WORD PTR [ecx+edx*2]
  406e31:	mov    dl,0xcb
  406e33:	jno    0x406e64
  406e35:	ds in  al,dx
  406e37:	into   
  406e38:	jmp    FWORD PTR [eax-0x53]
  406e3b:	add    ebp,DWORD PTR [edi-0x132053ac]
  406e41:	xchg   esp,eax
  406e42:	push   ebp
  406e43:	fwait
  406e44:	sbb    DWORD PTR [ecx-0x32],ecx
  406e47:	fiadd  WORD PTR [ebp+0x3270f35c]
  406e4d:	popf   
  406e4e:	ror    al,0x21
  406e51:	pop    edi
  406e52:	daa    
  406e53:	xchg   ecx,eax
  406e54:	xchg   ecx,eax
  406e55:	inc    cl
  406e57:	data16 cld 
  406e59:	fcom   QWORD PTR [esi+0x4380abeb]
  406e5f:	or     al,0x8f
  406e61:	(bad)
  406e65:	popa   
  406e66:	in     al,0x6a
  406e68:	pop    ecx
  406e69:	ror    DWORD PTR [esi+eax*1],0xd1
  406e6d:	pop    ds
  406e6e:	popf   
  406e6f:	ins    BYTE PTR es:[edi],dx
  406e70:	addr16 xchg esp,eax
  406e72:	cmc    
  406e73:	ins    DWORD PTR es:[di],dx
  406e75:	(bad)  
  406e76:	clc    
  406e77:	imul   ch
  406e79:	(bad)  
  406e7a:	pop    ecx
  406e7b:	sbb    BYTE PTR [esi],0x34
  406e7e:	adc    esp,DWORD PTR [esi-0x42]
  406e81:	or     bh,cl
  406e83:	xchg   esi,eax
  406e84:	fnsetpm(287 only) 
  406e86:	inc    esi
  406e87:	test   al,0x4b
  406e89:	sbb    eax,0xcb3ffe28
  406e8e:	test   BYTE PTR [eax+edx*4],bl
  406e91:	sub    eax,0x1cbb6678
  406e96:	daa    
  406e97:	sbb    BYTE PTR [edx-0x1],ch
  406e9a:	adc    ebx,DWORD PTR [ebp-0x50]
  406e9d:	jo     0x406eb3
  406e9f:	aad    0x62
  406ea1:	mov    cl,0x10
  406ea3:	cli    
  406ea4:	ds fcom st(6)
  406ea7:	mov    bh,0x55
  406ea9:	mov    al,0x3d
  406eab:	fcomp  st(5)
  406ead:	add    al,0x7d
  406eaf:	loope  0x406ebc
  406eb1:	leave  
  406eb2:	lods   al,BYTE PTR ds:[esi]
  406eb3:	fdiv   DWORD PTR [esp+eax*2-0x27]
  406eb7:	dec    edx
  406eb8:	ror    BYTE PTR [ebx+0x60],0xe8
  406ebc:	push   ebp
  406ebd:	dec    ecx
  406ebe:	xchg   ecx,eax
  406ebf:	repnz (bad) 
  406ec1:	in     al,dx
  406ec2:	in     eax,0x80
  406ec4:	adc    al,0xab
  406ec6:	aam    0xc4
  406ec8:	mov    eax,0xd1b75eda
  406ecd:	lea    ebx,[edi]
  406ecf:	ja     0x406e6c
  406ed1:	repnz xchg ebp,eax
  406ed3:	(bad)  
  406ed4:	test   al,0xf3
  406ed6:	dec    ebx
  406ed7:	and    BYTE PTR [edi],ah
  406ed9:	leave  
  406eda:	dec    ecx
  406edb:	adc    BYTE PTR [edi+0x73],0xa4
  406edf:	jp     0x406eea
  406ee1:	push   0xa83f16f8
  406ee6:	(bad)  
  406ee9:	and    eax,0x9153e09c
  406eee:	outs   dx,BYTE PTR ds:[esi]
  406eef:	sar    DWORD PTR ds:0xfa6fddbd,cl
  406ef5:	jmp    0x4d7be21c
  406efa:	inc    edi
  406efb:	inc    ebp
  406efc:	jp     0x406f5d
  406efe:	(bad)  
  406eff:	pop    esi
  406f00:	fild   WORD PTR [esi]
  406f02:	pop    es
  406f03:	test   eax,0xd7b903d0
  406f08:	or     eax,DWORD PTR [ecx-0x5c450287]
  406f0e:	stc    
  406f0f:	or     ah,BYTE PTR [ecx]
  406f11:	ins    DWORD PTR es:[edi],dx
  406f12:	sahf   
  406f13:	inc    esi
  406f14:	mov    BYTE PTR [edi+0x46345dbb],0x7
  406f1b:	pop    ebp
  406f1c:	int3   
  406f1d:	lods   eax,DWORD PTR ds:[esi]
  406f1e:	gs gs dec edx
  406f21:	(bad)  
  406f22:	jnp    0x406f54
  406f24:	and    BYTE PTR [esi+eiz*1-0x26],dl
  406f28:	ret    0xb209
  406f2b:	add    esp,edx
  406f2d:	adc    ebx,DWORD PTR [eax+ebp*1]
  406f30:	jbe    0x406f3d
  406f32:	xchg   ecx,eax
  406f33:	mov    eax,ebx
  406f35:	xor    BYTE PTR [ebp-0x4bab94fa],dh
  406f3b:	and    eax,0x8ff013c8
  406f40:	cld    
  406f41:	xor    DWORD PTR [ecx+0x3d],0xf89a591c
  406f48:	push   ecx
  406f49:	mov    dl,0x31
  406f4b:	lahf   
  406f4c:	and    DWORD PTR [eax],esi
  406f4e:	lods   al,BYTE PTR ds:[esi]
  406f4f:	sti    
  406f50:	push   ecx
  406f51:	into   
  406f52:	mov    esi,0x31932234
  406f57:	sub    al,BYTE PTR [eax-0x3bdd2f06]
  406f5d:	push   0x91ced011
  406f62:	and    esp,0xffffff8b
  406f65:	xor    eax,0x8302b7b4
  406f6a:	imul   esp,DWORD PTR [eax-0x5f],0xffffffda
  406f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6f:	and    DWORD PTR [edx-0x3c501021],0xe29aea
  406f79:	mov    edx,0xe0ff6f2b
  406f7e:	xor    esp,DWORD PTR [esp+ebp*1-0x58]
  406f82:	lds    ebx,FWORD PTR [eax+0x41]
  406f85:	or     ah,ch
  406f87:	xchg   esi,eax
  406f88:	pop    ss
  406f89:	inc    esi
  406f8a:	adc    esi,DWORD PTR [esi-0x1e]
  406f8d:	outs   dx,BYTE PTR ds:[esi]
  406f8e:	pop    ss
  406f8f:	adc    edx,ecx
  406f91:	lock retf 
  406f93:	lods   eax,DWORD PTR ds:[esi]
  406f94:	ja     0x406f60
  406f96:	stc    
  406f97:	dec    ebp
  406f98:	sub    DWORD PTR [esi],edx
  406f9a:	dec    ebp
  406f9b:	mov    ah,0x4b
  406f9d:	xor    al,0x8d
  406f9f:	shr    DWORD PTR [edi],1
  406fa1:	xor    edx,DWORD PTR [esi-0x6ee03d40]
  406fa7:	outs   dx,DWORD PTR ds:[esi]
  406fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa9:	addr16 mov bl,0x37
  406fac:	cdq    
  406fad:	jge    0x406f81
  406faf:	dec    edi
  406fb0:	data16 mov ch,0x3c
  406fb3:	push   edx
  406fb4:	pusha  
  406fb5:	nop
  406fb6:	xchg   esi,eax
  406fb7:	daa    
  406fb8:	pushf  
  406fb9:	inc    eax
  406fba:	test   eax,0x7e0b8f11
  406fbf:	sbb    ah,BYTE PTR [ebp+0xa]
  406fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fc3:	jae    0x40701f
  406fc5:	jge    0x406f5a
  406fc7:	pusha  
  406fc8:	mul    eax
  406fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fcb:	push   ds
  406fcc:	cmc    
  406fcd:	or     BYTE PTR [eax],dl
  406fcf:	bound  eax,QWORD PTR [edx-0x6f]
  406fd2:	jb     0x406fcb
  406fd4:	(bad)  
  406fd5:	ffree  st(0)
  406fd7:	dec    ecx
  406fd8:	mov    dh,0x1d
  406fda:	mov    BYTE PTR [ebp+edx*4+0x9e25cb7],bl
  406fe1:	stos   BYTE PTR es:[edi],al
  406fe2:	call   0xd55a823
  406fe7:	jmp    0x406f6a
  406fe9:	ror    DWORD PTR [eax-0x79],cl
  406fec:	mov    esp,0x2e5097fb
  406ff1:	xor    DWORD PTR [eax+ebp*2-0x75ee805b],ebx
  406ff8:	bound  esp,QWORD PTR [ebx]
  406ffa:	retf   0x4635
  406ffd:	jle    0x407022
  406fff:	cmp    BYTE PTR [esi+eiz*4],bl
  407002:	fcomp  DWORD PTR [ebx]
  407004:	out    0x25,eax
  407006:	mov    ecx,0xfbbc03e3
  40700b:	or     ebx,DWORD PTR [ebx+ecx*4+0x65e3f2d6]
  407012:	mov    esp,0x2c09e44b
  407017:	jne    0x406fe1
  407019:	repz mov eax,0xd9fee8af
  40701f:	push   ecx
  407020:	push   ds
  407021:	enter  0x1a9b,0xcf
  407025:	sbb    eax,0x87cae08b
  40702a:	push   esp
  40702b:	neg    ah
  40702d:	dec    edi
  40702e:	pop    es
  40702f:	daa    
  407030:	mov    BYTE PTR [edi+ebx*4],bl
  407033:	and    edi,DWORD PTR [ecx-0x5a]
  407036:	loope  0x407012
  407038:	pop    edx
  407039:	or     al,0xa0
  40703b:	pop    ebp
  40703c:	pop    eax
  40703d:	neg    BYTE PTR [ebx-0x545942bd]
  407043:	aad    0x7d
  407045:	daa    
  407046:	loopne 0x40707c
  407048:	inc    ecx
  407049:	mov    cl,0x4b
  40704b:	mov    ds:0xf37fe6d1,eax
  407050:	dec    ebp
  407051:	cmp    BYTE PTR [ebx+0x6edbb021],0xae
  407058:	dec    esp
  407059:	xchg   ebx,eax
  40705a:	pushf  
  40705b:	cdq    
  40705c:	inc    ecx
  40705d:	pop    ebx
  40705e:	mov    esp,0xeb4a2b47
  407063:	jb     0x407006
  407065:	mov    bl,BYTE PTR [ebp-0x4c315fc8]
  40706b:	add    DWORD PTR [edi+0x28],0x71
  40706f:	xchg   esp,eax
  407070:	cmp    DWORD PTR gs:[esi+0x2ed351ac],0xffffffd0
  407078:	sahf   
  407079:	fisub  WORD PTR [edi+0x77]
  40707c:	pop    ss
  40707d:	pop    ecx
  40707e:	add    esp,esp
  407080:	push   0x26
  407082:	add    BYTE PTR [edx+0x1f],bl
  407085:	mov    ebp,DWORD PTR [ebp+eiz*2-0x2b]
  407089:	in     eax,0xa9
  40708b:	out    0x5f,al
  40708d:	(bad)  
  40708e:	ins    DWORD PTR es:[edi],dx
  40708f:	jmp    DWORD PTR [eax]
  407091:	aam    0xf5
  407093:	inc    ebp
  407094:	ins    DWORD PTR es:[edi],dx
  407095:	je     0x40703f
  407097:	rol    bl,0x25
  40709a:	and    al,0x79
  40709c:	test   bh,ch
  40709e:	mov    eax,0x4ab1ebc2
  4070a3:	dec    edx
  4070a4:	xor    DWORD PTR [edx-0x40],edi
  4070a7:	pop    ecx
  4070a8:	sub    DWORD PTR [ebp-0x35],edx
  4070ab:	inc    ebx
  4070ac:	pop    edi
  4070ad:	inc    edx
  4070ae:	dec    edi
  4070af:	addr16 mov dl,0x68
  4070b2:	pushf  
  4070b3:	lods   eax,DWORD PTR ds:[esi]
  4070b4:	icebp  
  4070b5:	sahf   
  4070b6:	sub    ebx,DWORD PTR [ebx+eax*8]
  4070b9:	xor    al,BYTE PTR [edx]
  4070bb:	repnz sub eax,DWORD PTR [edx+0x6b727f0e]
  4070c2:	test   BYTE PTR [ebx],0xb0
  4070c5:	sub    esi,DWORD PTR [ebp-0x20f98fe1]
  4070cb:	lods   al,BYTE PTR ds:[esi]
  4070cc:	push   edx
  4070cd:	fdiv   QWORD PTR [edx-0x20712089]
  4070d3:	out    0x4d,eax
  4070d5:	aas    
  4070d6:	jae    0x4070cd
  4070d8:	lods   eax,DWORD PTR ds:[esi]
  4070d9:	pop    ecx
  4070da:	jle    0x407125
  4070dc:	shl    BYTE PTR [edi],1
  4070de:	stos   DWORD PTR es:[edi],eax
  4070df:	mov    bl,0xe4
  4070e1:	cli    
  4070e2:	shr    dh,1
  4070e4:	sub    ch,BYTE PTR [edx+0x47488add]
  4070ea:	dec    edi
  4070eb:	cmp    al,0x57
  4070ed:	fs push esp
  4070ef:	enter  0x40cd,0xe4
  4070f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f4:	out    0x96,eax
  4070f6:	out    0xca,eax
  4070f8:	stc    
  4070f9:	int    0x14
  4070fb:	cmc    
  4070fc:	jmp    0x4da7:0xa9561a85
  407103:	(bad)  
  407104:	(bad)  
  407105:	and    ah,al
  407107:	cmp    DWORD PTR ds:0xc41e6b72,ebp
  40710d:	outs   dx,BYTE PTR ds:[esi]
  40710e:	(bad)  
  40710f:	adc    BYTE PTR [esi+0x26],ah
  407112:	outs   dx,BYTE PTR ds:[esi]
  407113:	jae    0x4070e1
  407115:	add    DWORD PTR [edi-0x6b41393c],0x83c9bb41
  40711f:	das    
  407120:	and    cl,BYTE PTR [edx-0x7e8229ba]
  407126:	sbb    BYTE PTR [eax+0x37],al
  407129:	imul   eax,eax,0x7d07fe67
  40712f:	push   es
  407130:	ds ss push ebx
  407133:	(bad)  
  407134:	in     al,dx
  407135:	add    cl,al
  407137:	mov    al,ds:0xe701fafc
  40713c:	pop    edx
  40713d:	arpl   WORD PTR [edx-0x18],sp
  407140:	dec    esi
  407141:	imul   ecx,edx,0xad643caf
  407147:	push   ecx
  407148:	not    DWORD PTR [edx-0x29]
  40714b:	jecxz  0x4071b6
  40714d:	xchg   edi,eax
  40714e:	jle    0x4071be
  407150:	xchg   edi,eax
  407151:	add    al,BYTE PTR [ecx+ebp*8-0x33]
  407155:	mov    ch,0x18
  407157:	adc    DWORD PTR [edx],ecx
  407159:	push   esi
  40715a:	loopne 0x40719e
  40715c:	push   ss
  40715d:	(bad)  
  40715e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40715f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407160:	out    0xa3,al
  407162:	in     eax,dx
  407163:	cdq    
  407164:	jae    0x407167
  407166:	pop    ss
  407167:	xlat   BYTE PTR ds:[ebx]
  407168:	dec    esi
  407169:	or     al,0xd2
  40716b:	pop    ebx
  40716c:	outs   dx,DWORD PTR ds:[esi]
  40716d:	and    esi,edx
  40716f:	or     BYTE PTR [edx-0x2aa7c145],cl
  407175:	mov    WORD PTR [ebp-0x2b],ss
  407178:	fmul   QWORD PTR [ebx-0x63]
  40717b:	leave  
  40717c:	xor    al,0x50
  40717e:	jmp    0x9a8c99a9
  407183:	(bad)  
  407184:	or     edi,DWORD PTR [edi-0x70]
  407187:	dec    esp
  407188:	jne    0x4071fb
  40718a:	stos   DWORD PTR es:[edi],eax
  40718b:	ret    
  40718c:	dec    edx
  40718d:	stos   DWORD PTR es:[edi],eax
  40718e:	xchg   edi,eax
  40718f:	bound  ebp,QWORD PTR [eax]
  407191:	arpl   WORD PTR [edi+0x133d03b6],bx
  407197:	in     eax,0x70
  407199:	scas   eax,DWORD PTR es:[edi]
  40719a:	or     eax,0xa1e592a6
  40719f:	in     al,dx
  4071a0:	push   eax
  4071a1:	sti    
  4071a2:	and    DWORD PTR [edi+esi*1],esp
  4071a5:	std    
  4071a6:	adc    edi,DWORD PTR [eax+0x31f82c37]
  4071ac:	neg    BYTE PTR [edi]
  4071ae:	and    DWORD PTR [edi+ebx*1-0x175f49f4],esp
  4071b5:	mov    bh,0xf3
  4071b7:	retf   
  4071b8:	outs   dx,DWORD PTR ds:[esi]
  4071b9:	nop
  4071ba:	xlat   BYTE PTR ds:[ebx]
  4071bb:	pop    edx
  4071bc:	xor    eax,0x8e4d9ad6
  4071c1:	aaa    
  4071c2:	ror    edi,cl
  4071c4:	mov    ah,0x39
  4071c6:	mov    dl,0x93
  4071c8:	fwait
  4071c9:	jmp    0xb70abe2b
  4071ce:	inc    ecx
  4071cf:	cmp    bh,ah
  4071d1:	push   ecx
  4071d2:	enter  0xd2a4,0x66
  4071d6:	pop    ss
  4071d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d8:	aad    0xa1
  4071da:	cmp    ch,BYTE PTR [edi+eiz*4]
  4071dd:	aam    0xf9
  4071df:	mul    DWORD PTR [ecx+0x53]
  4071e2:	cmp    ebp,DWORD PTR [edx+ebp*1]
  4071e5:	mul    BYTE PTR [ecx]
  4071e7:	test   DWORD PTR [esi],esi
  4071e9:	mov    esi,0x63bbde23
  4071ee:	in     eax,dx
  4071ef:	mov    eax,0x9a20a53a
  4071f4:	std    
  4071f5:	add    BYTE PTR [ebp+0x29],cl
  4071f8:	xadd   esp,esi
  4071fb:	ror    BYTE PTR [ecx-0x19],1
  4071fe:	lods   al,BYTE PTR ds:[esi]
  4071ff:	int3   
  407200:	in     eax,0x2
  407202:	idiv   dl
  407204:	sbb    al,0x36
  407206:	push   edi
  407207:	pushf  
  407208:	stos   BYTE PTR es:[edi],al
  407209:	mov    ds:0x7ddf20cd,al
  40720e:	loope  0x4071eb
  407210:	or     DWORD PTR [edi],0x21
  407213:	loop   0x407205
  407215:	shl    BYTE PTR [edx],1
  407217:	loopne 0x407221
  407219:	es mov fs,ecx
  40721c:	pop    ebx
  40721d:	xchg   DWORD PTR [edx-0x6],ebp
  407220:	(bad)  
  407221:	xor    dl,0x6d
  407224:	sti    
  407225:	cmp    ch,ch
  407227:	stc    
  407228:	(bad)  
  407229:	xor    eax,eax
  40722b:	call   0x2b3c:0xc3b04dfc
  407232:	or     BYTE PTR [esp+esi*8],dh
  407235:	mov    al,ds:0x4a2f567f
  40723a:	xor    esp,0xe9f25c1f
  407240:	retf   
  407241:	pop    edi
  407242:	int3   
  407243:	push   ebp
  407244:	dec    esi
  407245:	adc    eax,0x39b76f00
  40724a:	out    0x93,al
  40724c:	sahf   
  40724d:	adc    eax,0xf81c9678
  407252:	jmp    0xfb0d:0x98afb7e5
  407259:	adc    eax,DWORD PTR [edx]
  40725b:	or     BYTE PTR [ebx],bh
  40725d:	and    eax,0x23aa2208
  407262:	mov    cl,0x6d
  407264:	out    dx,eax
  407265:	mov    eax,ds:0x3f7ddceb
  40726a:	and    DWORD PTR [ebp+0x26],0xffffffd4
  40726e:	sub    al,0xa5
  407270:	adc    eax,0x4b0c28a6
  407275:	lea    edi,[edi]
  407277:	fld    QWORD PTR [ebx-0x20]
  40727a:	push   ecx
  40727b:	mov    esi,0x88fe8586
  407280:	sbb    BYTE PTR [edx+edi*2],0x91
  407284:	aam    0x55
  407286:	push   ss
  407287:	bound  ecx,QWORD PTR [edx-0x40]
  40728a:	xor    eax,0x9ba08ff1
  40728f:	test   DWORD PTR [esi-0x11],esi
  407292:	inc    esp
  407293:	(bad)
  407296:	out    dx,al
  407297:	add    al,0x5a
  407299:	mov    BYTE PTR [eax],dh
  40729b:	xchg   ecx,eax
  40729c:	cdq    
  40729d:	pusha  
  40729e:	ins    DWORD PTR es:[edi],dx
  40729f:	gs in  al,0x6
  4072a2:	xor    DWORD PTR [edi+0x1b],ecx
  4072a5:	cmp    BYTE PTR [ebx+0x2],bl
  4072a8:	test   ebp,0x95e3583
  4072ae:	fst    DWORD PTR [edx]
  4072b0:	lods   al,BYTE PTR ds:[esi]
  4072b1:	add    bl,BYTE PTR [eax-0x70]
  4072b4:	push   ebx
  4072b5:	stos   DWORD PTR es:[edi],eax
  4072b6:	clc    
  4072b7:	popf   
  4072b8:	xchg   ecx,eax
  4072b9:	jp     0x40726b
  4072bb:	cmp    al,0x6d
  4072bd:	outs   dx,DWORD PTR ds:[esi]
  4072be:	xchg   BYTE PTR [ecx+0x4e],al
  4072c1:	ret    0xf450
  4072c4:	mov    DWORD PTR [edx+0x3a727f5f],ebp
  4072ca:	pop    edi
  4072cb:	pop    es
  4072cc:	scas   al,BYTE PTR es:[edi]
  4072cd:	dec    edx
  4072ce:	shl    DWORD PTR [edx+0x5b],1
  4072d1:	lea    ecx,[ebp+0x397f0bdb]
  4072d7:	repz inc edi
  4072d9:	imul   edi,DWORD PTR [ebp-0x56],0xd19a7a40
  4072e0:	add    eax,0x2af70182
  4072e6:	jle    0x40732d
  4072e8:	int    0xc7
  4072ea:	sahf   
  4072eb:	fisttp DWORD PTR [edx-0x90b091b]
  4072f1:	ds or  al,0x54
  4072f4:	ins    DWORD PTR es:[edi],dx
  4072f5:	fst    DWORD PTR [edi+0x661af386]
  4072fb:	or     bl,bh
  4072fd:	sar    DWORD PTR [esi+0x62d92d44],cl
  407303:	push   esp
  407304:	leave  
  407305:	jne    0x407300
  407307:	pushf  
  407308:	push   esp
  407309:	mov    DWORD PTR [ebx+0x6f],ebp
  40730c:	fcom   DWORD PTR [edx]
  40730e:	not    DWORD PTR ds:0xfb274601
  407314:	in     al,0xca
  407316:	lds    ebp,FWORD PTR [ecx+eiz*8]
  407319:	push   edi
  40731a:	xchg   ecx,eax
  40731b:	aad    0x56
  40731d:	add    eax,0x9e203233
  407322:	out    0xc7,eax
  407324:	ret    0xda2e
  407327:	pop    ebx
  407328:	mov    ch,0x3a
  40732a:	mov    DWORD PTR [eax],eax
  40732c:	fcompp 
  40732e:	rcl    edi,1
  407330:	in     eax,0x78
  407332:	ret    
  407333:	jmp    0xeb30:0x81c5a6ac
  40733a:	jnp    0x407313
  40733c:	mov    ch,0x1
  40733e:	jge    0x407399
  407340:	dec    ebp
  407341:	xchg   BYTE PTR [ebx-0x543dfb46],dh
  407347:	popa   
  407348:	inc    edi
  407349:	jp     0x4072de
  40734b:	fwait
  40734c:	pop    edi
  40734d:	mov    ebp,0x54577b21
  407353:	fsubr  st(2),st
  407355:	cli    
  407356:	test   eax,edx
  407358:	mov    esi,0x56fb2886
  40735d:	imul   edi,DWORD PTR [edi+0x33d3ac3f],0xc5dce34d
  407367:	inc    ebx
  407368:	and    esp,DWORD PTR [ebp+0x2b4ceaaf]
  40736e:	inc    ebx
  40736f:	leave  
  407370:	arpl   WORD PTR [edx-0x38],di
  407373:	dec    BYTE PTR [ebx]
  407375:	dec    edi
  407376:	inc    ecx
  407377:	aaa    
  407378:	add    ebx,esp
  40737a:	addr16 xchg edi,eax
  40737c:	rol    BYTE PTR [edi-0x765b135a],cl
  407382:	mov    al,0x5b
  407384:	in     al,0xb2
  407386:	pop    esi
  407387:	pop    esp
  407388:	inc    ecx
  407389:	dec    esp
  40738a:	pop    edx
  40738b:	enter  0xaa79,0xe
  40738f:	retf   0x88d9
  407392:	shl    DWORD PTR [ebp+0x1c],0xdc
  407396:	imul   ebx,DWORD PTR ds:0x78207def,0x877b4447
  4073a0:	addr16 jle 0x407330
  4073a3:	mov    edx,0x950081c9
  4073a8:	enter  0x6467,0x76
  4073ac:	pop    ss
  4073ad:	popf   
  4073ae:	pop    ebp
  4073af:	cmc    
  4073b0:	scas   eax,DWORD PTR es:[edi]
  4073b1:	and    DWORD PTR [ecx+0x483b282a],esi
  4073b7:	stc    
  4073b8:	(bad)  
  4073ba:	jp     0x407410
  4073bc:	xchg   edx,eax
  4073bd:	cmp    DWORD PTR [edi+eax*4+0x6b56ba34],edi
  4073c4:	aad    0xc5
  4073c6:	sbb    eax,0x211ef77
  4073cb:	xchg   DWORD PTR [ecx-0x6b217647],esi
  4073d1:	(bad)  
  4073d2:	popf   
  4073d3:	das    
  4073d4:	les    edi,FWORD PTR [esi+0x72]
  4073d7:	fneni(8087 only) 
  4073d9:	int3   
  4073da:	add    cl,ah
  4073dc:	cmp    eax,0xedf09f05
  4073e1:	or     DWORD PTR [ebp+0x781f8f6f],ebp
  4073e7:	adc    al,0x57
  4073e9:	jmp    0x4073bb
  4073eb:	pop    ds
  4073ec:	pop    ss
  4073ed:	mov    dh,0x88
  4073ef:	xchg   esi,eax
  4073f0:	and    eax,0x18fc21fb
  4073f5:	dec    edx
  4073f6:	cmp    BYTE PTR [eax],bl
  4073f8:	fsubrp st(0),st
  4073fa:	mov    bh,0x25
  4073fc:	push   ss
  4073fd:	xchg   edx,eax
  4073fe:	daa    
  4073ff:	out    0xc9,al
  407401:	add    ax,0x6cf1
  407405:	adc    BYTE PTR [eax],ah
  407407:	jbe    0x407429
  407409:	pop    esp
  40740a:	sub    eax,0x5cb1d0b2
  40740f:	int    0x5c
  407411:	cs clc 
  407413:	pop    eax
  407414:	clc    
  407415:	sbb    bh,al
  407417:	std    
  407418:	inc    ebx
  407419:	xchg   ebp,eax
  40741a:	fcom   QWORD PTR [ebx-0x6b]
  40741d:	pop    ecx
  40741e:	sub    al,0x7c
  407420:	add    BYTE PTR ds:0xd404fec3,ch
  407426:	cmp    al,0xb2
  407428:	add    DWORD PTR [ecx+0x7e288903],0x6b
  40742f:	shl    WORD PTR [ecx+esi*1-0x2f61d0f6],cl
  407437:	dec    ecx
  407438:	or     al,0x48
  40743a:	hlt    
  40743b:	jle    0x4073e7
  40743d:	stos   DWORD PTR es:[edi],eax
  40743e:	cmc    
  40743f:	sub    ah,cl
  407441:	mov    ecx,0x4c4447f1
  407446:	xchg   esp,eax
  407447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407448:	sbb    BYTE PTR [ebp-0x35],0x13
  40744c:	mov    al,ds:0xb79497e
  407451:	call   0x649b:0x3720b7e0
  407458:	jp     0x407448
  40745a:	jecxz  0x407456
  40745c:	mov    esi,DWORD PTR [eax+0x31]
  40745f:	aad    0xed
  407461:	pop    eax
  407462:	ins    DWORD PTR es:[edi],dx
  407463:	ror    BYTE PTR ss:[edi+ebx*2],0xed
  407468:	jns    0x4074ae
  40746a:	bound  esi,QWORD PTR ds:0x65ffcc00
  407470:	and    eax,0xda5bcb17
  407475:	es nop
  407477:	pop    ss
  407478:	mov    edi,0x2ec3b1aa
  40747d:	dec    ebx
  40747e:	fst    DWORD PTR [ebp+0x32]
  407481:	inc    esp
  407482:	xchg   ebx,eax
  407483:	and    DWORD PTR [ebx+ebx*1+0x375f5bd0],esp
  40748a:	(bad)  
  40748b:	jbe    0x407460
  40748d:	fisubr WORD PTR [edx-0x5b]
  407490:	aas    
  407491:	mov    esi,0xe9ed2a13
  407496:	stos   WORD PTR es:[edi],ax
  407498:	lea    si,[edx]
  40749b:	pusha  
  40749c:	xor    edx,esp
  40749e:	arpl   di,sp
  4074a0:	imul   edx,DWORD PTR [ecx+edx*8+0x19],0x25076fb0
  4074a8:	cmp    eax,0x4fe1d1cb
  4074ad:	xchg   ecx,eax
  4074ae:	lods   al,BYTE PTR ds:[esi]
  4074af:	in     eax,0x8b
  4074b1:	cs iret 
  4074b3:	dec    ecx
  4074b4:	adc    BYTE PTR [esi+0x1bd6643b],bh
  4074ba:	cmp    dh,BYTE PTR [esi+ebx*8+0x3132f611]
  4074c1:	fst    DWORD PTR [ebp+0x52]
  4074c4:	fwait
  4074c5:	xor    dl,dl
  4074c7:	inc    esp
  4074c8:	xor    DWORD PTR [ecx-0x146f4499],ecx
  4074ce:	mov    ah,0xdf
  4074d0:	sub    ebp,DWORD PTR [eax+0x3e218503]
  4074d6:	cmp    eax,0xf9308b19
  4074db:	out    0x7d,al
  4074dd:	sbb    cl,BYTE PTR [esi+0xb96b851]
  4074e3:	imul   ebx,DWORD PTR [ebx],0xffffff8b
  4074e6:	mov    edi,0x8423becd
  4074eb:	repz pop es
  4074ed:	lock arpl WORD PTR [edi-0x41],bp
  4074f1:	sub    al,bl
  4074f3:	leave  
  4074f4:	sub    BYTE PTR [ecx+0x2e],dh
  4074f7:	adc    edi,DWORD PTR [esi]
  4074f9:	xor    al,0xef
  4074fb:	jle    0x40752e
  4074fd:	or     cl,BYTE PTR [ebx]
  4074ff:	loope  0x4074a0
  407501:	or     ch,ah
  407503:	icebp  
  407504:	loopne 0x4074bb
  407506:	call   0xab31:0x49606007
  40750d:	xchg   esp,eax
  40750e:	(bad)  
  40750f:	jge    0x40757a
  407511:	mov    al,0x83
  407513:	imul   edi,DWORD PTR [esi+0x5c0d8cf9],0x906a329b
  40751d:	repnz sub BYTE PTR [esi],0x7c
  407521:	rol    BYTE PTR [edx+0x28],1
  407524:	je     0x407552
  407526:	sub    al,0x23
  407528:	out    0xc4,al
  40752a:	dec    eax
  40752b:	(bad)  
  40752c:	into   
  40752d:	adc    al,0xc9
  40752f:	out    0x23,al
  407531:	push   es
  407532:	push   ss
  407533:	lock scas eax,DWORD PTR es:[edi]
  407535:	arpl   WORD PTR [ecx],sp
  407537:	ins    BYTE PTR es:[edi],dx
  407538:	cmp    ebx,DWORD PTR [ebx]
  40753a:	mov    bh,dh
  40753c:	sub    eax,0xc8a98184
  407541:	jge    0x40754a
  407543:	(bad)  
  407544:	pushf  
  407545:	cmp    eax,0x59a1979
  40754a:	fistp  DWORD PTR [esi+0x25]
  40754d:	xor    al,0x66
  40754f:	out    0xc7,eax
  407551:	and    bl,cl
  407553:	into   
  407554:	rol    DWORD PTR [eax],0x3d
  407557:	mov    eax,0xb3cdc571
  40755c:	lahf   
  40755d:	sbb    DWORD PTR [ebp-0x780e94d9],esi
  407563:	cld    
  407564:	(bad)  
  407565:	push   ebp
  407566:	sbb    BYTE PTR [ecx],cl
  407568:	rcr    BYTE PTR [esp+ecx*8+0x46],0x15
  40756d:	cmp    edi,esi
  40756f:	imul   ebp,DWORD PTR [edi-0x2a],0xfffffff1
  407573:	ss sub eax,0xd2553a30
  407579:	mov    edi,0x614139c6
  40757e:	imul   eax,DWORD PTR [ebx],0xfffffffe
  407581:	or     eax,0xb671dcfb
  407586:	pusha  
  407587:	xchg   ecx,eax
  407588:	sbb    eax,0x3c56eaeb
  40758d:	stc    
  40758e:	push   0x1e2b59cd
  407593:	cmp    BYTE PTR [edx-0x36],cl
  407596:	iret   
  407597:	fisubr DWORD PTR [ebp*8-0x69b19bb4]
  40759e:	je     0x40755b
  4075a0:	push   0x59
  4075a2:	imul   eax,esp,0x6e
  4075a5:	mov    edi,0x5f8c0372
  4075aa:	jg     0x40756b
  4075ac:	jns    0x407612
  4075ae:	lock (bad) 
  4075b0:	and    eax,0x9c74ce1
  4075b5:	cmp    eax,0x19998e7
  4075ba:	jmp    0x1a21:0xad399e8b
  4075c1:	add    BYTE PTR [ebp+eax*4-0x7427dab9],bl
  4075c8:	aas    
  4075c9:	xor    eax,eax
  4075cb:	stos   DWORD PTR es:[edi],eax
  4075cc:	cmp    al,0x74
  4075ce:	fild   WORD PTR [esi]
  4075d0:	test   eax,0xf07960fc
  4075d5:	out    0xde,eax
  4075d7:	adc    al,0x31
  4075d9:	mov    ebx,0x1fd864a3
  4075de:	outs   dx,BYTE PTR ds:[esi]
  4075df:	int3   
  4075e0:	add    al,BYTE PTR [eax+ebx*2+0x44abc7d1]
  4075e7:	adc    dl,BYTE PTR [esi]
  4075e9:	and    ch,BYTE PTR [ecx]
  4075eb:	push   0xffffffdb
  4075ed:	sub    al,0x83
  4075ef:	inc    edx
  4075f0:	outs   dx,BYTE PTR ds:[esi]
  4075f1:	not    BYTE PTR [esi]
  4075f3:	lock mov esp,0xdf95d441
  4075f9:	addr16 dec ebp
  4075fb:	in     al,0x90
  4075fd:	cmp    eax,0x99ed093b
  407602:	inc    edx
  407603:	out    0x4d,al
  407605:	and    ch,BYTE PTR [ebp-0x3]
  407608:	hlt    
  407609:	sub    BYTE PTR [eax-0x32177db8],ah
  40760f:	loop   0x4075c1
  407611:	(bad)  [ebx]
  407613:	ja     0x40768e
  407615:	int    0x84
  407617:	mov    ebx,0xb621b05a
  40761c:	scas   al,BYTE PTR es:[edi]
  40761d:	mov    eax,ds:0xd5e7d6c
  407622:	adc    eax,0x82083e88
  407627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407628:	pop    eax
  407629:	inc    ebx
  40762a:	cli    
  40762b:	fstp   TBYTE PTR [esi]
  40762d:	jne    0x40766d
  40762f:	push   ss
  407630:	(bad)  
  407631:	xor    eax,0xf23ee1b
  407636:	jo     0x4076b3
  407638:	xor    DWORD PTR [eax],edi
  40763a:	daa    
  40763b:	into   
  40763c:	call   0x585deda4
  407641:	(bad)  [ebp-0x62]
  407644:	xor    al,0x1
  407646:	mov    ch,0xf4
  407648:	dec    eax
  407649:	movq   mm4,QWORD PTR [ecx+0x4820facd]
  407650:	cwde   
  407651:	cmp    DWORD PTR [edi],edi
  407653:	pop    edx
  407654:	cmp    ch,ch
  407656:	stos   DWORD PTR es:[edi],eax
  407657:	in     eax,dx
  407658:	add    ebx,ebx
  40765a:	les    esi,FWORD PTR [ecx*8+0x30b0dad8]
  407661:	enter  0x476b,0x32
  407665:	pop    esp
  407666:	sti    
  407667:	add    ah,bh
  407669:	push   ebp
  40766a:	scas   al,BYTE PTR es:[edi]
  40766b:	adc    eax,0xc08d3fa4
  407670:	lea    esi,[esi+0x2b]
  407673:	jne    0x407628
  407675:	shl    DWORD PTR [edi-0x3386555c],cl
  40767b:	cmp    BYTE PTR [ebx],bh
  40767d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  407680:	mov    edx,0x351d056a
  407685:	das    
  407686:	or     al,0xe8
  407688:	scas   eax,DWORD PTR es:[edi]
  407689:	in     eax,0x5d
  40768b:	les    edx,FWORD PTR [ecx+0x75]
  40768e:	lea    ebx,[edx+ebp*1]
  407691:	sti    
  407692:	mov    eax,ds:0x549b36c6
  407697:	ins    BYTE PTR es:[edi],dx
  407698:	push   esp
  407699:	test   eax,0xdf5f7c9b
  40769e:	or     ah,ch
  4076a0:	retf   0xb7b9
  4076a3:	jne    0x4076fb
  4076a5:	jge    0x4076c5
  4076a7:	xlat   BYTE PTR ds:[ebx]
  4076a8:	std    
  4076a9:	mov    DWORD PTR [edx+0x0],edx
  4076ac:	push   cs
  4076ad:	xchg   edx,eax
  4076ae:	push   esi
  4076af:	sub    ebx,esp
  4076b1:	and    BYTE PTR [eax],al
  4076b3:	lds    edi,FWORD PTR [esi-0x63]
  4076b6:	in     eax,0x82
  4076b8:	cmp    al,0x10
  4076ba:	xor    dl,cl
  4076bc:	lahf   
  4076bd:	lods   eax,DWORD PTR ds:[esi]
  4076be:	rol    al,cl
  4076c0:	mov    al,ds:0xc7b5132e
  4076c5:	mov    bh,0x0
  4076c7:	jge    0x4076e9
  4076c9:	arpl   WORD PTR [ebx-0x46],bx
  4076cc:	and    eax,0xee0d505e
  4076d1:	dec    ebx
  4076d2:	xor    DWORD PTR [esi+edi*8-0x1a59a5d5],0xffffff9f
  4076da:	mov    cl,0x18
  4076dc:	add    al,0x9a
  4076de:	sub    DWORD PTR [edi-0x5c366a21],ebp
  4076e4:	mov    bl,0x23
  4076e6:	data16 lock test dh,ch
  4076ea:	xchg   esi,eax
  4076eb:	inc    ebx
  4076ec:	iret   
  4076ed:	mov    al,0x6e
  4076ef:	imul   edi,DWORD PTR [edi-0x4e5d2c71],0x98db067
  4076f9:	pushf  
  4076fa:	lods   al,BYTE PTR ds:[esi]
  4076fb:	sub    cl,ch
  4076fd:	adc    eax,0xa6db45a1
  407702:	ja     0x4076ad
  407704:	push   esi
  407705:	add    ebp,edx
  407707:	imul   eax
  407709:	lods   eax,DWORD PTR ds:[esi]
  40770a:	or     al,0xe6
  40770c:	cmp    al,0x4
  40770f:	xchg   DWORD PTR [ebx],esp
  407711:	sahf   
  407712:	sbb    ebx,DWORD PTR [eax-0x35d67206]
  407718:	add    al,0x32
  40771a:	jmp    0xe062ac56
  40771f:	mov    dl,0x7c
  407721:	not    BYTE PTR [edx-0x3c262f22]
  407727:	inc    ebx
  407728:	ss inc eax
  40772a:	and    al,0x6
  40772c:	adc    DWORD PTR [edx+0x61],esp
  40772f:	sbb    al,0xd4
  407731:	es iret 
  407733:	add    esi,eax
  407735:	popa   
  407736:	cmp    dh,cl
  407738:	mov    dl,0x3c
  40773a:	jmp    0x40777e
  40773c:	aad    0xde
  40773e:	jl     0x4076f4
  407740:	jne    0x40776b
  407742:	int3   
  407743:	and    al,0x4
  407745:	and    bl,bh
  407747:	popa   
  407748:	mov    bh,0x5c
  40774a:	enter  0x45ed,0x60
  40774e:	inc    esp
  40774f:	jmp    0x5177:0x52439201
  407756:	retf   
  407757:	dec    edx
  407758:	jb     0x40778a
  40775a:	ret    0x3ace
  40775d:	jmp    0xde2f:0x8354596
  407764:	pop    ecx
  407765:	test   eax,0x5aba6c43
  40776a:	jnp    0x407773
  40776c:	cmp    cl,BYTE PTR [eax]
  40776e:	inc    eax
  40776f:	repnz adc al,0x4b
  407772:	stc    
  407773:	dec    ecx
  407774:	dec    esi
  407775:	mov    esi,0xc4668dfb
  40777a:	mov    cl,0x17
  40777c:	(bad)  
  40777d:	(bad)  
  40777e:	fnsave [ebp+0x16b09546]
  407784:	icebp  
  407785:	sbb    al,0xc2
  407787:	sub    ch,BYTE PTR [eax]
  407789:	pop    es
  40778a:	add    al,0x94
  40778c:	sub    BYTE PTR [ebp+0x32],dl
  40778f:	js     0x40772b
  407791:	xor    esp,DWORD PTR [esi+ebx*4-0x77]
  407795:	test   BYTE PTR cs:[edi],ch
  407798:	mov    al,BYTE PTR [ebx+0x8]
  40779b:	inc    ecx
  40779c:	lods   al,BYTE PTR ds:[esi]
  40779d:	mov    al,0x55
  40779f:	leave  
  4077a0:	in     al,dx
  4077a1:	in     eax,dx
  4077a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077a3:	jno    0x407811
  4077a5:	js     0x407776
  4077a7:	mov    al,ds:0x17a4b989
  4077ac:	loopne 0x407779
  4077ae:	inc    ecx
  4077af:	(bad)  
  4077b0:	mov    ah,0xbc
  4077b2:	and    al,0x4e
  4077b4:	sub    al,BYTE PTR [eax]
  4077b6:	fincstp 
  4077b8:	mov    cl,0xe6
  4077ba:	scas   al,BYTE PTR es:[edi]
  4077bb:	pop    es
  4077bc:	and    ebp,esp
  4077be:	push   ss
  4077bf:	dec    ebp
  4077c0:	xor    eax,DWORD PTR [ebp-0x52260252]
  4077c6:	push   esi
  4077c7:	cmp    al,0xda
  4077c9:	fdivp  st(5),st
  4077cb:	jbe    0x40776c
  4077cd:	cmp    ebp,0x71
  4077d0:	hlt    
  4077d1:	mov    ah,0x11
  4077d3:	cmp    DWORD PTR [ecx-0x7a10ab52],0xffffffcc
  4077da:	mov    al,ds:0xa9158769
  4077df:	aaa    
  4077e0:	dec    ecx
  4077e1:	mov    ch,BYTE PTR [ebp-0x7e4db6bf]
  4077e7:	lock sub ebx,DWORD PTR [ebx-0x4]
  4077eb:	fst    DWORD PTR [edi]
  4077ed:	xchg   BYTE PTR [ecx-0x47c115b5],dh
  4077f3:	stos   BYTE PTR es:[edi],al
  4077f4:	jnp    0x4077a7
  4077f6:	and    eax,0xe49a2873
  4077fb:	cmp    eax,0x63296833
  407800:	mov    eax,DWORD PTR [edi]
  407802:	push   0xbe2a84cb
  407807:	popf   
  407808:	mov    ah,0x4d
  40780a:	mov    ds:0xbf73fbb5,al
  40780f:	rol    BYTE PTR ds:0x392bbfb5,0x42
  407816:	dec    ebp
  407817:	(bad)  
  407818:	fs mov dl,0xdc
  40781b:	xor    al,0x94
  40781d:	gs or  eax,0x9d7b4a1d
  407823:	push   es
  407824:	ins    DWORD PTR es:[edi],dx
  407825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407826:	push   ebp
  407827:	mov    ebp,0x6bc8bb27
  40782c:	shl    al,cl
  40782e:	mov    ecx,DWORD PTR [edx+0x7c]
  407831:	dec    esp
  407832:	(bad)  
  407834:	ins    BYTE PTR es:[edi],dx
  407835:	adc    al,0x38
  407837:	pusha  
  407838:	mov    esi,edi
  40783a:	mov    WORD PTR [ebx-0x44],gs
  40783d:	dec    edx
  40783e:	lds    esi,FWORD PTR [eax-0x4e]
  407841:	stc    
  407842:	jl     0x407812
  407844:	jb     0x40783b
  407846:	inc    eax
  407847:	sbb    eax,esi
  407849:	dec    esi
  40784a:	push   es
  40784b:	gs add eax,0x4d4b01dc
  407851:	or     esp,edi
  407853:	jae    0x407837
  407855:	xchg   cl,bl
  407857:	add    bl,BYTE PTR gs:[edx]
  40785a:	ret    0xd640
  40785d:	bound  edx,QWORD PTR [eax-0x54]
  407860:	add    eax,0xf2d2f19d
  407865:	sub    DWORD PTR [ecx+0x5ad78041],ecx
  40786b:	inc    edi
  40786c:	push   ds
  40786d:	sub    dh,BYTE PTR [edi]
  40786f:	out    0xf0,eax
  407871:	sub    eax,0x19e50106
  407876:	pop    eax
  407877:	mov    ah,0x61
  407879:	add    DWORD PTR [ecx+eax*8+0x165b117f],0xffffffda
  407881:	enter  0xc617,0xb3
  407885:	jbe    0x38c40aa
  40788b:	sbb    BYTE PTR [edi+0x5f],ch
  40788e:	xchg   esp,eax
  40788f:	jo     0x4078c8
  407891:	inc    eax
  407892:	sbb    eax,0x6cd0b05c
  407897:	and    BYTE PTR [edx],ah
  407899:	sub    ax,0x1ecd
  40789d:	in     eax,0x2a
  40789f:	add    BYTE PTR [ebx-0x63],ch
  4078a2:	mov    eax,0x534259ce
  4078a7:	fwait
  4078a8:	or     ch,al
  4078aa:	xlat   BYTE PTR ds:[ebx]
  4078ab:	call   0x2c42385b
  4078b0:	mov    eax,ebp
  4078b2:	retf   0xac2a
  4078b5:	sub    eax,0x686d72c4
  4078ba:	ret    0x411c
  4078bd:	add    esi,eax
  4078bf:	ss ror ecx,0x6a
  4078c3:	aaa    
  4078c4:	daa    
  4078c5:	in     al,dx
  4078c6:	dec    ecx
  4078c7:	inc    edx
  4078c8:	jl     0x4078fe
  4078ca:	xchg   ebp,eax
  4078cb:	ds xchg ebp,eax
  4078cd:	in     eax,dx
  4078ce:	cmp    BYTE PTR [ebx+0x19],ah
  4078d1:	mov    ss,WORD PTR [ecx+0x0]
  4078d4:	lea    ebp,[eax]
  4078d6:	mov    bl,0xfe
  4078d8:	or     DWORD PTR [ecx-0x5d],ecx
  4078db:	pop    ds
  4078dc:	pop    ds
  4078dd:	xor    DWORD PTR [edi],ebx
  4078df:	cmp    DWORD PTR [ecx],ebp
  4078e1:	sti    
  4078e2:	ficomp WORD PTR [ebx+0x45]
  4078e5:	cmp    DWORD PTR [edi],0xffffffb0
  4078e8:	int3   
  4078e9:	lea    ebp,[edi]
  4078eb:	adc    eax,0xf0e260b9
  4078f0:	mov    ebp,0xd0461697
  4078f5:	je     0x4078d6
  4078f7:	shufps xmm6,XMMWORD PTR [edi+0x66d4f702],0xee
  4078ff:	dec    ebx
  407900:	cs jmp 0xd174a6b7
  407906:	(bad)
  407909:	(bad)  
  40790a:	addr16 icebp 
  40790c:	hlt    
  40790d:	bound  esp,QWORD PTR [esi+0x42205d30]
  407913:	add    esi,esp
  407915:	cmp    eax,0x86c5c54
  40791a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40791b:	or     ebp,0x5c3f7d00
  407921:	popa   
  407922:	fidivr WORD PTR [edx+esi*1+0x41]
  407926:	adc    BYTE PTR [edi-0x4c],0xda
  40792a:	sbb    DWORD PTR [edx],edi
  40792c:	pusha  
  40792d:	(bad)  
  40792e:	cmp    bl,ch
  407930:	(bad)  
  407932:	add    eax,0x23c69fe9
  407937:	push   ebx
  407938:	mov    ds:0x68454dc9,al
  40793d:	ret    
  40793e:	mov    ebx,0xea333053
  407943:	repnz (bad) 
  407945:	mov    eax,0xdcff1d87
  40794a:	arpl   WORD PTR ds:0x8091e597,bp
  407950:	enter  0xa65e,0xd2
  407954:	inc    ebx
  407955:	jo     0x407947
  407957:	xor    eax,0xeeec0991
  40795c:	dec    ebx
  40795d:	dec    esp
  40795e:	jmp    0x1bec788f
  407963:	jle    0x407938
  407965:	cld    
  407966:	sbb    DWORD PTR [edx-0x17],esp
  407969:	xchg   ebx,eax
  40796a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40796b:	sub    ecx,DWORD PTR [ebx]
  40796d:	mov    al,0xf8
  40796f:	loop   0x407908
  407971:	or     cl,bh
  407973:	(bad)  
  407974:	popf   
  407975:	icebp  
  407976:	or     BYTE PTR [ecx],bh
  407978:	adc    esi,DWORD PTR [ecx+edx*8+0x15]
  40797c:	clc    
  40797d:	jno    0x4079be
  40797f:	mov    ebx,0x5e542c88
  407984:	enter  0xacec,0x5f
  407988:	sbb    ebx,DWORD PTR [edx+eiz*2-0x40]
  40798c:	ins    BYTE PTR es:[edi],dx
  40798d:	mov    eax,0x498c7eb8
  407992:	sub    eax,0x2048e179
  407997:	and    bl,BYTE PTR [edx+0x30]
  40799a:	xchg   esi,eax
  40799b:	push   esp
  40799c:	fisttp DWORD PTR [ebx+edi*1]
  40799f:	stos   BYTE PTR es:[edi],al
  4079a0:	mov    ecx,0x5d566974
  4079a5:	out    dx,al
  4079a6:	ret    
  4079a7:	ja     0x40793f
  4079a9:	push   ebp
  4079aa:	gs jne 0x40797d
  4079ad:	addr16 cs dec esi
  4079b0:	pop    ebp
  4079b1:	repz xlat BYTE PTR ds:[ebx]
  4079b3:	inc    esp
  4079b4:	xchg   ecx,eax
  4079b5:	xor    al,BYTE PTR es:[eax+ecx*4-0x34d5f19]
  4079bd:	hlt    
  4079be:	push   esi
  4079bf:	jae    0x407997
  4079c1:	(bad)  [edx-0x106a305]
  4079c7:	mov    BYTE PTR [esi],ch
  4079c9:	sub    DWORD PTR [eax],ebp
  4079cb:	daa    
  4079cc:	lahf   
  4079cd:	jne    0x4079ea
  4079cf:	adc    BYTE PTR [ecx],ch
  4079d1:	hlt    
  4079d2:	out    0xc4,al
  4079d4:	push   ss
  4079d5:	ret    0x2988
  4079d8:	add    ebx,DWORD PTR [edi]
  4079da:	push   es
  4079db:	pop    es
  4079dc:	clc    
  4079dd:	xor    eax,0x770a9c5e
  4079e2:	and    DWORD PTR [edx+0x6dbca8ef],0xffffffde
  4079e9:	or     ch,0x8d
  4079ec:	push   esi
  4079ed:	ja     0x4079ba
  4079ef:	sbb    ch,BYTE PTR [ecx]
  4079f1:	popa   
  4079f2:	jl     0x407a39
  4079f4:	inc    edi
  4079f5:	shl    BYTE PTR [esi],cl
  4079f7:	loopne 0x407a1f
  4079f9:	push   ebp
  4079fa:	mov    edx,0xd06c8567
  4079ff:	iret   
  407a00:	push   es
  407a01:	mov    gs,ecx
  407a03:	push   cs
  407a04:	aam    0x75
  407a06:	mov    ecx,0x91467596
  407a0b:	test   eax,0x5a95e72d
  407a10:	ret    0x281e
  407a13:	call   0x3cf9f012
  407a18:	enter  0x855e,0x6f
  407a1c:	xor    ecx,DWORD PTR [ebx-0x34]
  407a1f:	sub    al,0xc3
  407a21:	in     al,dx
  407a22:	fiadd  WORD PTR [eax-0x7e]
  407a25:	sub    DWORD PTR [ecx-0x40afc7ca],esp
  407a2b:	push   DWORD PTR ds:0x43a38c
  407a31:	push   DWORD PTR ds:0x43a654
  407a37:	push   DWORD PTR [ebp-0x28]
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0x7591:0x6e53c670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	mov    al,0x35
  407ebe:	out    dx,eax
  407ebf:	fnstenv [ebp+ecx*4+0x2c]
  407ec3:	fist   WORD PTR [ebp-0x2d20a7d0]
  407ec9:	mov    esi,0x443da570
  407ece:	and    ebp,esi
  407ed0:	adc    eax,0xf6aba673
  407ed5:	jb     0x407ed0
  407ed7:	push   esp
  407ed8:	sub    al,0x5
  407eda:	mov    ch,BYTE PTR [edx+0x15]
  407edd:	in     eax,0x84
  407edf:	mov    cl,0x82
  407ee1:	jns    0x407eca
  407ee3:	aam    0x58
  407ee5:	test   al,0x3f
  407ee7:	psubb  mm6,QWORD PTR [edi+0x15]
  407eeb:	xor    al,0xa8
  407eed:	ficomp WORD PTR [edx-0x16]
  407ef0:	retf   
  407ef1:	inc    esp
  407ef2:	cli    
  407ef3:	cmp    eax,0xce439538
  407ef8:	or     ebp,DWORD PTR ds:0xc50ea2a8
  407efe:	adc    edx,eax
  407f00:	sub    DWORD PTR [eax+ebp*2-0x7e2a727b],edi
  407f07:	mov    al,ds:0xa3e631e9
  407f0c:	sbb    DWORD PTR [ecx+0x2b4705c1],ebx
  407f12:	inc    edi
  407f13:	(bad)  
  407f15:	adc    eax,0xa41b24ca
  407f1a:	and    al,0x87
  407f1c:	es pop ebp
  407f1e:	sbb    BYTE PTR [ecx+0x632b445d],al
  407f24:	push   ss
  407f25:	scas   eax,DWORD PTR es:[edi]
  407f26:	imul   ebp,DWORD PTR ds:0x27722bd4,0x8007775e
  407f30:	sbb    DWORD PTR [edi+0x4bd9ea5c],esp
  407f36:	std    
  407f37:	dec    edi
  407f38:	(bad)  
  407f39:	sub    eax,DWORD PTR [edx-0x6771db55]
  407f3f:	sbb    dh,bh
  407f41:	bound  ebx,QWORD PTR [edx+0x37]
  407f44:	mov    eax,ds:0x95bf1da4
  407f49:	inc    esi
  407f4a:	nop
  407f4b:	adc    edx,DWORD PTR [ecx]
  407f4d:	inc    ebp
  407f4e:	sub    dh,0x71
  407f51:	sbb    eax,0xf929870b
  407f56:	add    dl,al
  407f58:	xchg   edi,eax
  407f59:	add    al,0x4
  407f5b:	shl    ah,0x67
  407f5e:	mov    cl,0x58
  407f60:	and    cl,bh
  407f62:	push   cs
  407f63:	test   BYTE PTR [ebp+edi*2+0x78],bl
  407f67:	mov    eax,esi
  407f69:	ret    
  407f6a:	sub    eax,0x983ee085
  407f6f:	das    
  407f70:	jmp    0xbf3c:0x8fb8deb0
  407f77:	jle    0x407f34
  407f79:	mov    ebp,0x42b89f26
  407f7e:	pop    esi
  407f7f:	cmp    al,BYTE PTR [ebx-0x73f95553]
  407f85:	(bad)  
  407f86:	jbe    0x407fa1
  407f88:	test   DWORD PTR [edi-0x422f9a1a],esp
  407f8e:	push   esi
  407f8f:	jno    0x407f81
  407f91:	daa    
  407f92:	ror    DWORD PTR [esi-0x1066c125],cl
  407f98:	inc    eax
  407f99:	fimul  WORD PTR [eax-0x619ea787]
  407f9f:	bound  esi,QWORD PTR [ecx+0x587cf33a]
  407fa5:	push   0xffffffdf
  407fa7:	mov    ebp,0x6018902a
  407fac:	pop    ecx
  407fad:	mov    ecx,0x3c64f7b5
  407fb2:	in     eax,0xcd
  407fb4:	loop   0x40800c
  407fb6:	(bad)  
  407fb8:	cmp    ebx,esi
  407fba:	xor    esi,DWORD PTR ds:0x7303dcf1
  407fc0:	mov    ds:0xf182a359,eax
  407fc5:	pop    edi
  407fc6:	mov    cl,0xd3
  407fc8:	outs   dx,BYTE PTR ds:[esi]
  407fc9:	dec    edi
  407fca:	imul   eax,DWORD PTR [eax-0x78],0x9904bbeb
  407fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd2:	stc    
  407fd3:	xchg   DWORD PTR [edi-0x60fa3227],ebx
  407fd9:	jg     0x408033
  407fdb:	dec    esp
  407fdc:	and    DWORD PTR [ecx+0x42c83560],0xc584cef2
  407fe6:	jecxz  0x407fc7
  407fe8:	mov    ch,0xd3
  407fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407feb:	rcr    BYTE PTR [ebp-0x55],0xa8
  407fef:	ss sti 
  407ff1:	mov    ds:0x2552b89f,eax
  407ff6:	add    esi,eax
  407ff8:	cli    
  407ff9:	sbb    al,0xbd
  407ffb:	pop    ds
  407ffc:	push   ebp
  407ffd:	adc    DWORD PTR [ebp+0x5f6a447],edx
  408003:	mov    eax,edx
  408005:	pusha  
  408006:	lds    esp,FWORD PTR [ebx+0x784adea1]
  40800c:	jg     0x408078
  40800e:	add    BYTE PTR [eax-0x3f],al
  408011:	fdivr  DWORD PTR [ecx]
  408013:	jmp    0x407faa
  408015:	fdivr  QWORD PTR ds:0x36ad51ca
  40801b:	loope  0x40807d
  40801d:	sahf   
  40801e:	lods   eax,DWORD PTR ds:[esi]
  40801f:	push   ss
  408020:	mov    BYTE PTR [eax],dl
  408022:	mov    ebp,0x84a630f0
  408027:	bound  ebx,QWORD PTR es:[edi]
  40802a:	sub    eax,0xd19fae79
  40802f:	add    DWORD PTR ss:[esi+0x277c940e],0x9ff6988c
  40803a:	add    eax,DWORD PTR [ecx+0x139d07f0]
  408040:	cmp    DWORD PTR [ecx-0x3f],esi
  408043:	cmp    eax,0x4a6b27c7
  408048:	mov    al,0x83
  40804a:	and    al,0xab
  40804c:	and    ebp,ebx
  40804e:	dec    esp
  40804f:	popf   
  408050:	mov    ch,0xc
  408052:	mov    eax,DWORD PTR [esp+esi*1+0x40e6474]
  408059:	add    al,cl
  40805b:	cmp    ebx,DWORD PTR [esi+0x565196e9]
  408061:	dec    ecx
  408062:	mov    ecx,0x256f18ca
  408067:	adc    ebp,DWORD PTR [esi+0x1331782e]
  40806d:	in     al,0x71
  40806f:	xchg   edx,eax
  408070:	std    
  408071:	mov    ebx,DWORD PTR [ebx-0x23b6d7bc]
  408077:	lock les esi,FWORD PTR [esi]
  40807a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40807b:	inc    esi
  40807c:	push   ss
  40807d:	and    DWORD PTR [eax],eax
  40807f:	pop    ecx
  408080:	aam    0x3d
  408082:	stos   BYTE PTR es:[edi],al
  408083:	cmp    eax,0x72e513a6
  408088:	sub    ebx,DWORD PTR [ebx-0xa]
  40808b:	pusha  
  40808c:	pusha  
  40808d:	stos   DWORD PTR es:[edi],eax
  40808e:	sub    al,0xdb
  408090:	pop    esi
  408091:	inc    ebx
  408092:	add    ch,BYTE PTR [ebx+0x1e]
  408095:	jbe    0x40804a
  408097:	enter  0xa66f,0xd2
  40809b:	sbb    eax,0x22ba4a11
  4080a0:	mov    BYTE PTR [ebp+0x436487f],dl
  4080a6:	mov    ds:0xf5c982b7,al
  4080ab:	and    BYTE PTR [esi+0x92c0431],bh
  4080b1:	and    ebx,edx
  4080b3:	pop    esi
  4080b4:	ret    
  4080b5:	inc    eax
  4080b6:	retf   0xddf0
  4080b9:	xor    al,0x2b
  4080bb:	(bad)  
  4080bc:	fdivr  DWORD PTR [eax]
  4080be:	mov    edx,0x96d2cea1
  4080c3:	inc    eax
  4080c4:	cmp    al,0x6
  4080c6:	adc    edi,ebx
  4080c8:	bound  esi,QWORD PTR [esi+ebx*8-0x12]
  4080cc:	jno    0x4080a5
  4080ce:	repnz xor eax,esp
  4080d1:	mov    dl,0x64
  4080d3:	push   edx
  4080d4:	inc    ebx
  4080d5:	loop   0x408146
  4080d7:	inc    BYTE PTR [ecx-0x31c01c5]
  4080dd:	out    0x55,eax
  4080df:	cmc    
  4080e0:	dec    ecx
  4080e1:	repz pop edi
  4080e3:	shr    DWORD PTR es:[edi-0x3f],1
  4080e7:	inc    BYTE PTR [esi]
  4080e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ea:	push   ecx
  4080eb:	cmp    al,0xfa
  4080ed:	(bad)  
  4080ee:	and    esp,DWORD PTR [ecx+0x6c4850ae]
  4080f4:	sub    al,0x30
  4080f6:	aam    0x10
  4080f8:	ror    BYTE PTR [bx+0x6e],0x5b
  4080fd:	fdivr  st(2),st
  4080ff:	pop    eax
  408100:	push   edi
  408101:	stos   DWORD PTR es:[edi],eax
  408102:	or     BYTE PTR [ecx-0x2a],ch
  408105:	and    al,0x62
  408107:	mov    DWORD PTR [edx+ebp*8],edi
  40810a:	xchg   edi,eax
  40810b:	or     DWORD PTR [esi],ebp
  40810d:	call   0x74399578
  408112:	xchg   edi,eax
  408113:	sub    bl,ah
  408115:	fdiv   QWORD PTR [edx+0x3c1cc874]
  40811b:	inc    esp
  40811c:	push   ebp
  40811d:	cmp    DWORD PTR [ecx+0x6aff2c74],ebx
  408123:	jecxz  0x4080e6
  408125:	arpl   bp,dx
  408127:	add    al,0x15
  408129:	push   edx
  40812a:	bound  edi,QWORD PTR [eax-0x29]
  40812d:	jbe    0x4080b0
  40812f:	mov    ds:0x90d5deda,eax
  408134:	xchg   ebp,eax
  408135:	xor    al,0xbb
  408137:	mov    dh,0xb5
  408139:	mov    ds:0x7ba92ca7,al
  40813e:	sbb    DWORD PTR [esi],0x50
  408141:	repnz out 0x6c,al
  408144:	inc    edx
  408145:	mov    eax,0xbc8b526d
  40814a:	ins    DWORD PTR es:[edi],dx
  40814b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40814c:	and    BYTE PTR [edi*2-0x35993c2e],dl
  408153:	test   al,0x35
  408155:	test   al,0x3b
  408157:	sti    
  408158:	sbb    al,0xe9
  40815a:	or     ch,BYTE PTR [ebx-0x324fa26]
  408160:	icebp  
  408161:	push   edx
  408162:	inc    eax
  408163:	and    eax,0x3c4a1aac
  408168:	aas    
  408169:	aam    0x6
  40816b:	jmp    0xebe19ea1
  408170:	cs sti 
  408172:	lds    esi,FWORD PTR [edx+0x29]
  408175:	sub    al,BYTE PTR [ebx]
  408177:	adc    DWORD PTR [eax+0x6e867f8b],esp
  40817d:	(bad)  
  408180:	(bad)  
  408181:	pop    ebx
  408182:	test   BYTE PTR ds:0x74620d9,0x97
  408189:	add    edi,edi
  40818b:	leave  
  40818c:	mov    ds:0x8846120a,al
  408191:	xor    DWORD PTR [esp+edx*2],ecx
  408194:	xchg   DWORD PTR [edx],esi
  408196:	xor    al,0xe2
  408198:	adc    BYTE PTR [ebx+0x2a],ah
  40819b:	mov    bl,0x1d
  40819d:	mov    ds:0x27088639,eax
  4081a2:	cmc    
  4081a3:	jbe    0x408215
  4081a5:	ficomp WORD PTR [ecx+0x171bca25]
  4081ab:	inc    edi
  4081ac:	fwait
  4081ad:	retf   0x71ef
  4081b0:	sub    eax,0x52bcc370
  4081b5:	push   ebp
  4081b7:	shl    al,0xc1
  4081ba:	mov    WORD PTR [edx-0x3f],cs
  4081bd:	pop    edx
  4081be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081bf:	sub    BYTE PTR [esi],cl
  4081c1:	pushf  
  4081c2:	je     0x4081ac
  4081c4:	jmp    0x840c1fec
  4081c9:	jp     0x408199
  4081cb:	lds    edx,FWORD PTR [esi]
  4081cd:	jo     0x408248
  4081cf:	dec    edx
  4081d0:	sbb    DWORD PTR [ebx+0x1da378d0],0x74c7e800
  4081da:	adc    BYTE PTR [esi-0x12],dl
  4081dd:	inc    esp
  4081de:	push   ebp
  4081df:	cld    
  4081e0:	and    ecx,DWORD PTR [edx+0x49]
  4081e3:	push   esp
  4081e4:	loope  0x408256
  4081e6:	cmp    eax,0x1b973cef
  4081eb:	jp     0x4081bb
  4081ed:	adc    al,0x4b
  4081ef:	sahf   
  4081f0:	das    
  4081f1:	inc    esp
  4081f2:	mov    WORD PTR [eax-0x25],fs
  4081f5:	ja     0x408179
  4081f7:	jle    0x4081c9
  4081f9:	mov    eax,ds:0x5e5c2fd3
  4081fe:	in     al,0xcc
  408200:	pop    ecx
  408201:	jne    0x408237
  408203:	sub    BYTE PTR [eax+edi*2-0x6688b5d0],dh
  40820a:	jo     0x408272
  40820c:	in     eax,0x1a
  40820e:	jo     0x40820f
  408210:	int3   
  408211:	ja     0x408204
  408213:	and    BYTE PTR [ebx+0x28],ch
  408216:	scas   al,BYTE PTR es:[edi]
  408217:	ss jne 0x4081bb
  40821a:	fstp   TBYTE PTR [edi+0x5c6ff0b6]
  408220:	xor    DWORD PTR [ecx-0x2a4d62b0],esp
  408226:	test   BYTE PTR ds:0xe3b6d892,dh
  40822c:	jecxz  0x4082a6
  40822e:	sub    esi,DWORD PTR [edi]
  408230:	cdq    
  408231:	repz or BYTE PTR [edx-0x6d],bl
  408235:	pop    DWORD PTR [ecx*4-0x3434960b]
  40823c:	imul   edx,ebp,0xb613d210
  408242:	xchg   BYTE PTR [ebx+0x70],bl
  408245:	xchg   ebp,eax
  408246:	daa    
  408247:	dec    esi
  408248:	mov    al,0x5
  40824a:	sbb    BYTE PTR [edx+0x1ffeb25b],cl
  408250:	shr    BYTE PTR [ebp+0x1ca275aa],1
  408256:	jo     0x4081ee
  408258:	cmp    eax,0x22bde7ac
  40825d:	cmp    ebp,DWORD PTR [edx+0x1383baed]
  408263:	test   al,0xd2
  408265:	mov    esi,0xf691a147
  40826a:	ja     0x408217
  40826c:	mov    esi,0x6e5fb29a
  408271:	lock adc al,0x62
  408274:	popf   
  408275:	cdq    
  408276:	add    al,0x17
  408278:	adc    DWORD PTR [ebp+0x4],esi
  40827b:	mov    esp,edx
  40827d:	jmp    0x4082fb
  40827f:	cmp    eax,0xada46184
  408284:	mov    ecx,0xff2d0c79
  408289:	icebp  
  40828a:	add    BYTE PTR [esi],bl
  40828c:	sbb    ebp,edi
  40828e:	pop    ebp
  40828f:	rcl    BYTE PTR [esp+ebx*4+0x5d939429],cl
  408296:	sbb    DWORD PTR [edx-0x4d],ebx
  408299:	push   ss
  40829a:	int3   
  40829b:	inc    ecx
  40829c:	test   DWORD PTR [edx+0x3e58deb7],0x32c7d28
  4082a6:	cdq    
  4082a7:	dec    esp
  4082a8:	ret    
  4082a9:	jo     0x408306
  4082ab:	cwde   
  4082ac:	ret    
  4082ad:	inc    esp
  4082ae:	cmp    dh,ch
  4082b0:	mov    al,0x1b
  4082b2:	mov    eax,0x40681168
  4082b7:	mov    WORD PTR [edi],?
  4082b9:	retf   0x2c90
  4082bc:	xchg   esp,eax
  4082bd:	or     eax,0x51f13219
  4082c2:	enter  0x9d32,0xea
  4082c6:	push   esp
  4082c7:	pop    ebx
  4082c8:	shr    DWORD PTR [ebx-0x124f3849],0x58
  4082cf:	dec    edx
  4082d0:	jmp    0xe70d:0x9016b8db
  4082d7:	mov    ah,bl
  4082d9:	mov    edx,0x94e2cf
  4082de:	stc    
  4082df:	in     al,dx
  4082e0:	sbb    edi,DWORD PTR ds:0xe57e3633
  4082e6:	aas    
  4082e7:	inc    edx
  4082e8:	aam    0xdd
  4082ea:	adc    BYTE PTR [edx+ebx*4+0xdb46f3d],cl
  4082f1:	mov    eax,0x6edcf11e
  4082f6:	sub    BYTE PTR [bp+di+0x68],0x40
  4082fb:	or     BYTE PTR [ecx-0x63],dl
  4082fe:	sti    
  4082ff:	leave  
  408300:	cmp    eax,0x58de560f
  408305:	(bad)  
  408306:	or     ebx,DWORD PTR [edx]
  408308:	(bad)  
  408309:	daa    
  40830a:	sub    eax,0x29df502e
  40830f:	loop   0x4082e5
  408311:	xchg   ebx,eax
  408312:	adc    al,BYTE PTR [esi+esi*8+0xc0f62c1]
  408319:	(bad)  
  40831a:	sti    
  40831b:	sub    BYTE PTR [ebx-0x69],bh
  40831e:	inc    esi
  40831f:	data16 test dl,al
  408322:	pop    edx
  408323:	mov    bl,0xbe
  408325:	mov    ebx,ds
  408327:	mov    dh,0xab
  408329:	outs   dx,DWORD PTR ds:[esi]
  40832a:	lods   al,BYTE PTR ds:[esi]
  40832b:	jmp    0xa4787ab0
  408330:	fst    QWORD PTR [ebp-0x29]
  408333:	scas   al,BYTE PTR es:[edi]
  408334:	les    ebp,FWORD PTR [esi-0x46e4402c]
  40833a:	loope  0x40832d
  40833c:	in     al,dx
  40833d:	shl    edi,0x61
  408340:	loop   0x408347
  408342:	jl     0x40834d
  408344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408345:	retf   0xf36d
  408348:	dec    edi
  408349:	(bad)  
  40834a:	or     DWORD PTR [ebp+0x28550e73],eax
  408350:	jp     0x4082e1
  408352:	inc    esi
  408353:	jmp    0x34b0d651
  408358:	outs   dx,DWORD PTR ds:[esi]
  408359:	cmc    
  40835a:	push   cs
  40835b:	call   0x6d7b:0x58c9a572
  408362:	xor    BYTE PTR [edi-0x7962a71],0xc
  408369:	mov    eax,ds:0x25e3fa0e
  40836e:	push   ds
  40836f:	xchg   DWORD PTR [ebx-0x42],edx
  408372:	in     al,0x6d
  408374:	iret   
  408375:	imul   esi,DWORD PTR [ebx+0x448f7fc5],0x9edec04f
  40837f:	xlat   BYTE PTR ds:[ebx]
  408380:	cs test eax,0xc18c7190
  408386:	ret    0xaf3f
  408389:	inc    ebx
  40838a:	xchg   esi,eax
  40838b:	xor    ch,BYTE PTR [edx]
  40838d:	xor    ebp,ebx
  40838f:	cmp    DWORD PTR [eax],esi
  408391:	pop    eax
  408392:	jp     0x4083ba
  408394:	das    
  408395:	jge    0x40839c
  408397:	ss cli 
  408399:	inc    esi
  40839a:	mov    ch,0x19
  40839c:	push   ds
  40839d:	es jecxz 0x408353
  4083a0:	test   al,0x4b
  4083a2:	pop    ss
  4083a3:	outs   dx,DWORD PTR ds:[esi]
  4083a4:	mov    ebp,0x5bebb57a
  4083a9:	push   edi
  4083aa:	ss push ss
  4083ac:	movnti DWORD PTR [edi-0x21],edx
  4083b0:	fisttp WORD PTR [edx+0x3c]
  4083b3:	jle    0x4083c2
  4083b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083b6:	jb     0x408424
  4083b8:	jbe    0x4083a9
  4083ba:	outs   dx,DWORD PTR ds:[esi]
  4083bb:	test   al,0xce
  4083bd:	and    BYTE PTR ds:0xbdf748db,0x1f
  4083c4:	pop    ebp
  4083c5:	stos   DWORD PTR es:[edi],eax
  4083c6:	cmp    BYTE PTR [edi],0x35
  4083c9:	repz adc DWORD PTR [esp+ebx*2+0x50],ebp
  4083ce:	xchg   ecx,esp
  4083d0:	push   0xc766eba8
  4083d5:	outs   dx,BYTE PTR ds:[esi]
  4083d6:	fwait
  4083d7:	pop    esi
  4083d8:	xchg   BYTE PTR [ecx+ebp*8-0x15],dl
  4083dc:	inc    edi
  4083dd:	ds ret 0x6949
  4083e1:	xchg   edi,eax
  4083e2:	call   0x3c44193
  4083e7:	sahf   
  4083e8:	sbb    BYTE PTR [ecx+0x7776c492],cl
  4083ee:	jle    0x4083b0
  4083f0:	popf   
  4083f1:	nop
  4083f2:	xchg   DWORD PTR [eax-0x74],edi
  4083f5:	stc    
  4083f6:	outs   dx,DWORD PTR ds:[esi]
  4083f7:	loopne 0x4083d0
  4083f9:	das    
  4083fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083fb:	(bad)  
  4083fc:	sub    esp,DWORD PTR [ebx+0x3d]
  4083ff:	mov    eax,esi
  408401:	push   edi
  408402:	scas   al,BYTE PTR es:[edi]
  408403:	test   bl,cl
  408405:	shl    DWORD PTR [ebp-0x34],1
  408408:	out    0x3d,eax
  40840a:	(bad)
  40840e:	jl     0x408460
  408410:	ror    bl,0x2a
  408413:	mov    ebx,0x3601040f
  408418:	mov    ah,0xa0
  40841a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40841b:	jge    0x40844d
  40841d:	ss pop ss
  40841f:	repnz mov gs,WORD PTR es:[edx-0x28]
  408424:	cld    
  408425:	and    BYTE PTR [edx-0x1d6ddada],0x9
  40842c:	lods   al,BYTE PTR ds:[esi]
  40842d:	and    DWORD PTR [edi+0x44],ebx
  408430:	and    al,0xd3
  408432:	xor    al,0x39
  408434:	(bad)  
  408435:	xor    BYTE PTR [eax+0x62ef5476],bl
  40843b:	xchg   ecx,eax
  40843c:	xchg   edi,eax
  40843d:	icebp  
  40843e:	and    ebp,DWORD PTR [edx]
  408440:	sar    BYTE PTR ds:0xb55b2c04,cl
  408446:	dec    edx
  408447:	mov    eax,0x364ef7cf
  40844c:	sub    DWORD PTR [ecx+edx*4-0x9aa5c57],eax
  408453:	mov    cl,0x8e
  408455:	fisub  WORD PTR [ecx+0x145e4e40]
  40845b:	add    edx,DWORD PTR [eax-0x75]
  40845e:	push   ebp
  40845f:	xchg   esp,eax
  408460:	addr16 iret 
  408462:	das    
  408463:	or     eax,DWORD PTR [edx-0xf]
  408466:	fimul  WORD PTR [ebp+0x77007fd3]
  40846c:	jl     0x408457
  40846e:	popa   
  40846f:	jge    0x408479
  408471:	in     al,0x83
  408473:	cld    
  408474:	rcl    DWORD PTR [ecx+0x7e],cl
  408477:	mov    WORD PTR [edx-0x155a0a1],?
  40847d:	in     al,dx
  40847e:	push   edi
  408480:	mov    ch,0x75
  408482:	es and eax,0xfb1b6e5b
  408488:	daa    
  408489:	push   esp
  40848a:	push   ss
  40848b:	stos   DWORD PTR es:[edi],eax
  40848c:	ja     0x408504
  40848e:	pop    ecx
  40848f:	or     esp,edx
  408491:	lea    ebx,[eax-0x2d]
  408494:	out    dx,eax
  408495:	(bad)  
  408497:	and    WORD PTR [ebp-0xb929093],ax
  40849e:	and    BYTE PTR [ecx+0x5a],ah
  4084a1:	ret    0xd019
  4084a4:	call   0xd788990a
  4084a9:	jmp    0x4084ad
  4084ab:	test   BYTE PTR cs:[edx+esi*1],cl
  4084af:	es int3 
  4084b1:	lds    ecx,FWORD PTR [ecx-0xefdf6c]
  4084b7:	add    DWORD PTR [edi+edi*4],0x21b3f726
  4084be:	in     eax,0x5a
  4084c0:	and    al,ch
  4084c2:	push   ebp
  4084c3:	mov    ah,0x5a
  4084c5:	xchg   ecx,eax
  4084c6:	call   0x26f31875
  4084cb:	add    BYTE PTR [edx+0x3880bb70],0x65
  4084d2:	int    0xff
  4084d4:	(bad)  
  4084d5:	cld    
  4084d6:	sub    ebx,ebp
  4084d8:	sub    al,0xa6
  4084da:	pop    eax
  4084db:	jle    0x4084ca
  4084dd:	and    eax,0x3240bf52
  4084e2:	sub    DWORD PTR es:[edi-0x3ae9a666],esp
  4084e9:	mov    eax,ds:0xbf5460b3
  4084ee:	fcomp  QWORD PTR [eax+0x7a]
  4084f1:	xchg   ecx,eax
  4084f2:	out    dx,eax
  4084f3:	sbb    eax,0x87e735c2
  4084f8:	mov    ds:0xe5b4d222,al
  4084fd:	xlat   BYTE PTR ds:[ebx]
  4084fe:	ss sbb al,dl
  408501:	xchg   ebx,eax
  408502:	jp     0x408509
  408504:	fdivr  QWORD PTR [edi+0x77fc7080]
  40850a:	or     al,BYTE PTR ds:0xb2d3b644
  408510:	add    edi,DWORD PTR [esi-0xb290376]
  408516:	pop    esi
  408517:	push   0xafa8c422
  40851c:	enter  0x61c0,0x3
  408520:	add    ecx,0x4cade688
  408526:	fbld   TBYTE PTR [edx]
  408528:	pop    es
  408529:	sbb    DWORD PTR [eax+0x0],ecx
  40852c:	sub    cl,ch
  40852e:	fmul   st(4),st
  408530:	dec    ebx
  408531:	lahf   
  408532:	jge    0x40857a
  408534:	leave  
  408535:	push   ebx
  408536:	jb     0x408511
  408538:	pop    ebp
  408539:	jmp    0x54c8:0x9c555430
  408540:	cs xchg ebp,eax
  408542:	push   ss
  408543:	sti    
  408544:	scas   al,BYTE PTR es:[edi]
  408545:	push   ds
  408546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408547:	test   eax,0xbeec1f7
  40854c:	out    0x3f,eax
  40854e:	icebp  
  40854f:	lods   al,BYTE PTR es:[esi]
  408551:	xchg   ebx,eax
  408552:	in     al,dx
  408553:	mov    bh,0x2c
  408555:	push   edx
  408556:	inc    ebx
  408557:	push   ebp
  408558:	xchg   ecx,eax
  408559:	jmp    0xfd87:0x89dd41f
  408560:	mov    edi,DWORD PTR [esi]
  408562:	rol    cl,0xda
  408565:	mov    eax,ds:0x41e5ff8c
  40856a:	and    BYTE PTR [eax-0x27],bl
  40856d:	fnsave [edx]
  40856f:	cmc    
  408570:	aam    0xbd
  408572:	mov    WORD PTR [ebp-0x55107054],cs
  408578:	int3   
  408579:	(bad)  
  40857b:	fldcw  WORD PTR [eax+0x38572769]
  408581:	not    BYTE PTR [ecx+0x416b762f]
  408587:	mov    cl,0x50
  408589:	jp     0x408602
  40858b:	lea    esp,[esi+0x208a07d7]
  408591:	push   ebp
  408592:	stos   DWORD PTR es:[edi],eax
  408593:	mov    ah,0xf3
  408595:	pop    esp
  408596:	mov    edi,0x32a24371
  40859b:	dec    esp
  40859c:	sbb    DWORD PTR [edx+0x5f],ebx
  40859f:	push   0x77f12a8f
  4085a4:	ficomp WORD PTR [esi-0x19dea94d]
  4085aa:	jmp    0xc19fdba7
  4085af:	dec    ecx
  4085b0:	push   ebp
  4085b1:	dec    eax
  4085b2:	repz daa 
  4085b4:	or     BYTE PTR [ebp+eiz*8-0xe448a05],dh
  4085bb:	fdiv   DWORD PTR [ecx+eax*1-0x60]
  4085bf:	xor    dl,BYTE PTR [edi+0x73a1b143]
  4085c5:	cdq    
  4085c6:	or     al,0x29
  4085c8:	sub    al,0xa4
  4085ca:	ss enter 0xb51f,0xd8
  4085cf:	push   ebx
  4085d0:	mov    ch,BYTE PTR [esi+0x2eaf3723]
  4085d6:	mov    cl,0x57
  4085d8:	inc    edi
  4085d9:	clc    
  4085da:	ins    DWORD PTR es:[edi],dx
  4085db:	mov    cl,0x5f
  4085dd:	push   cs
  4085de:	dec    ebx
  4085df:	xchg   BYTE PTR [esi+0x1c],ch
  4085e2:	and    DWORD PTR [ecx-0x40745c55],edi
  4085e8:	(bad)  
  4085e9:	jp     0x4085da
  4085eb:	test   BYTE PTR [esi+edi*8],0xd6
  4085ef:	xor    cl,BYTE PTR [eax-0x8]
  4085f2:	dec    esp
  4085f3:	inc    edx
  4085f4:	and    esp,ebx
  4085f6:	std    
  4085f7:	mov    dh,0xad
  4085f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085fa:	push   eax
  4085fb:	sar    al,cl
  4085fd:	xor    bl,BYTE PTR [ebx+ecx*1+0x7f]
  408601:	fpatan 
  408603:	ins    DWORD PTR es:[edi],dx
  408604:	inc    esi
  408605:	ret    
  408606:	push   edi
  408607:	jns    0x408601
  408609:	aaa    
  40860a:	dec    eax
  40860b:	and    DWORD PTR [edi+0xa],esi
  40860e:	cmp    al,0x35
  408610:	ja     0x4085da
  408612:	mov    ?,WORD PTR [edx+0x59]
  408615:	xor    DWORD PTR [ebx],ecx
  408617:	jae    0x408658
  408619:	or     al,0xb8
  40861b:	mov    bh,0xb4
  40861d:	hlt    
  40861e:	(bad)  
  40861f:	xchg   ebp,eax
  408620:	pop    ss
  408621:	push   esi
  408622:	mov    bl,0x46
  408624:	dec    edx
  408625:	sti    
  408626:	xor    ecx,DWORD PTR [esi-0x24]
  408629:	push   ebp
  40862a:	push   esp
  40862b:	dec    ebp
  40862c:	lock cld 
  40862e:	adc    eax,0xd3f6ef91
  408633:	push   ss
  408634:	inc    esp
  408635:	add    DWORD PTR [edx],ebx
  408637:	pop    ecx
  408638:	loopne 0x4085ce
  40863a:	cld    
  40863b:	pop    edi
  40863c:	(bad)  
  40863e:	dec    esi
  40863f:	into   
  408640:	test   DWORD PTR [ecx],esp
  408642:	test   DWORD PTR [edi],esp
  408644:	test   BYTE PTR [ecx+ebp*1],ah
  408647:	push   esi
  408648:	push   eax
  408649:	jmp    0xcb2c99f5
  40864e:	pop    esi
  40864f:	jp     0x4086ba
  408651:	retf   
  408652:	adc    BYTE PTR [ecx-0x61d92228],ah
  408658:	call   0xff3f:0x84da321d
  40865f:	push   0x5e
  408661:	fsub   DWORD PTR [ebx+0x5e75476a]
  408667:	aad    0x19
  408669:	push   ss
  40866a:	(bad)  
  40866b:	(bad)  
  40866c:	cmp    DWORD PTR [edi+0x63287285],edx
  408672:	arpl   ax,si
  408674:	push   esp
  408675:	imul   ecx,DWORD PTR [eax-0x16],0x45
  408679:	data16 scas al,BYTE PTR es:[edi]
  40867b:	mov    ecx,0xd757c90a
  408680:	add    ah,dh
  408682:	xor    al,0x6e
  408684:	test   BYTE PTR [ecx-0x24379eb2],bl
  40868a:	inc    esi
  40868b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40868c:	ror    al,1
  40868e:	dec    esi
  40868f:	add    eax,0x3b919ab3
  408694:	dec    ebx
  408695:	rcr    DWORD PTR [eax+esi*8],1
  408698:	(bad)  
  408699:	loop   0x4086ca
  40869b:	pop    edi
  40869d:	push   ebx
  40869e:	enter  0x1b9e,0xea
  4086a2:	jns    0x4086a4
  4086a4:	popa   
  4086a5:	sub    edx,0x1a
  4086a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086a9:	lds    esp,FWORD PTR [eax-0x5d]
  4086ac:	push   ds
  4086ad:	cmp    eax,0xb805494d
  4086b2:	fdiv   DWORD PTR [ebx+0x7f]
  4086b5:	aaa    
  4086b6:	je     0x4086a3
  4086b8:	sub    bl,dl
  4086ba:	int3   
  4086bb:	add    eax,0x2509d1f2
  4086c0:	in     al,0x4b
  4086c2:	cmc    
  4086c3:	retf   
  4086c4:	sbb    al,0xd2
  4086c6:	mov    esi,0x338f193
  4086cb:	fstp   st(2)
  4086cd:	sbb    al,BYTE PTR [ecx+0x54]
  4086d0:	les    esi,FWORD PTR [edx-0x2c1d5f5e]
  4086d6:	jae    0x4086ca
  4086d8:	loope  0x408722
  4086da:	pushf  
  4086db:	outs   dx,BYTE PTR ds:[esi]
  4086dc:	and    dh,BYTE PTR [ebx+0x53]
  4086df:	push   es
  4086e0:	call   0x9299:0xdabaac47
  4086e7:	(bad)  
  4086e9:	jns    0x4086b3
  4086eb:	xchg   edi,eax
  4086ec:	pop    esi
  4086ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086ee:	leave  
  4086ef:	mov    eax,0x9dc8aaa9
  4086f4:	fstp   TBYTE PTR [esi+0x33]
  4086f7:	xchg   ecx,eax
  4086f8:	jge    0x40873e
  4086fa:	iret   
  4086fb:	ins    BYTE PTR es:[edi],dx
  4086fc:	iret   
  4086fd:	xor    al,0x4
  4086ff:	and    DWORD PTR [ecx],edi
  408701:	dec    esp
  408702:	push   0xd0ed6335
  408707:	test   eax,0x68cdfbc6
  40870c:	mov    ds:0x4ada2c7a,al
  408711:	inc    eax
  408712:	jbe    0x408780
  408714:	jae    0x408703
  408716:	sub    al,0x44
  408718:	sbb    DWORD PTR [ecx+0x29],ebp
  40871b:	sbb    DWORD PTR [edx-0x70],ebp
  40871e:	leave  
  40871f:	push   ebx
  408720:	cmp    ah,BYTE PTR [edi+0x66]
  408723:	xlat   BYTE PTR ds:[ebx]
  408724:	jo     0x40872c
  408726:	xchg   esp,eax
  408727:	pusha  
  408728:	fwait
  408729:	sbb    bl,BYTE PTR ss:[edx+0x1e596a90]
  408730:	xchg   ebx,eax
  408731:	rol    DWORD PTR [esi],1
  408733:	repz je 0x4086fc
  408736:	mov    ss,WORD PTR [ebx+0x3c]
  408739:	stos   BYTE PTR es:[edi],al
  40873a:	mov    ds:0x7c2f2df4,eax
  40873f:	sub    eax,0x787b5a3
  408744:	adc    eax,DWORD PTR ds:0xb294fa55
  40874a:	clc    
  40874b:	test   al,cl
  40874d:	adc    eax,0x91c43d28
  408752:	mov    dh,0x14
  408754:	(bad)  
  408755:	aad    0xcc
  408757:	mov    ebx,0x541cee17
  40875c:	nop
  40875d:	or     DWORD PTR [esi-0x3f],0x31e3fd64
  408764:	xor    DWORD PTR [edx-0x242b462d],edx
  40876a:	imul   esp,DWORD PTR [edi+0x217f4a49],0x8a6e6a1d
  408774:	clflush BYTE PTR [ebp-0x11dba973]
  40877b:	jg     0x4087bc
  40877d:	ins    BYTE PTR es:[edi],dx
  40877e:	mov    eax,0xf84f9345
  408783:	mov    BYTE PTR [edx+0x2bf5afe4],cl
  408789:	sbb    eax,0x135d4954
  40878e:	out    dx,al
  40878f:	stos   BYTE PTR es:[edi],al
  408790:	ins    DWORD PTR es:[edi],dx
  408791:	ret    0xa03a
  408794:	ins    DWORD PTR es:[edi],dx
  408795:	or     esp,ebx
  408797:	ds (bad) 
  408799:	fild   WORD PTR [ebp+0x4f]
  40879c:	push   cs
  40879d:	fxch   st(1)
  40879f:	mov    al,ds:0x5f7a6bbb
  4087a4:	push   edi
  4087a5:	fs add ebx,eax
  4087a8:	aam    0xe2
  4087aa:	js     0x408735
  4087ac:	push   cs
  4087ad:	sbb    al,0x96
  4087af:	mov    ebp,0xd9f0b36e
  4087b4:	mov    DWORD PTR [ebp+ecx*4+0x77da7cbe],esp
  4087bb:	push   edx
  4087bc:	retf   0x3d
  4087bf:	jle    0x40878a
  4087c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087c2:	inc    edx
  4087c3:	mov    DWORD PTR [esi-0x4e],esp
  4087c6:	enter  0xedd0,0xd9
  4087ca:	arpl   cx,bp
  4087cc:	ret    
  4087cd:	outs   dx,DWORD PTR ds:[esi]
  4087ce:	dec    ebp
  4087cf:	neg    dl
  4087d1:	add    dh,BYTE PTR [ebx]
  4087d3:	cmp    eax,0x71685a32
  4087d8:	nop
  4087d9:	ins    BYTE PTR es:[edi],dx
  4087da:	sub    ebp,DWORD PTR ds:[eax+eax*8]
  4087de:	push   ebx
  4087df:	(bad)  
  4087e0:	(bad)  
  4087e2:	pop    esp
  4087e3:	add    BYTE PTR [eax],dl
  4087e5:	cs jne 0x408774
  4087e8:	jl     0x408796
  4087ea:	fcmovnb st,st(5)
  4087ec:	cmp    eax,0xf0d46603
  4087f1:	loope  0x408821
  4087f3:	and    eax,0x4bdae9b7
  4087f8:	hlt    
  4087f9:	jbe    0x408861
  4087fb:	popa   
  4087fc:	xchg   esi,eax
  4087fd:	inc    ebp
  4087fe:	out    0xb,al
  408800:	stc    
  408801:	add    eax,0x37ebbae7
  408806:	int3   
  408807:	mov    ah,0xc6
  408809:	inc    edx
  40880a:	js     0x4087cc
  40880c:	and    ch,BYTE PTR [esi-0x3e]
  40880f:	leave  
  408810:	mov    cl,0x99
  408812:	ret    
  408813:	mov    WORD PTR [edx],es
  408815:	mov    ds:0x134dfd25,eax
  40881a:	stos   DWORD PTR es:[edi],eax
  40881b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881c:	fisttp QWORD PTR [eax-0x27]
  40881f:	pop    ebx
  408820:	mov    ah,0xb1
  408822:	xor    ch,ch
  408824:	mov    ch,0xc0
  408826:	ss pop edx
  408828:	pop    ebx
  408829:	sbb    eax,0x9c470221
  40882e:	imul   esp,DWORD PTR [ebp+0x18337e30],0x19
  408835:	in     al,0x2d
  408837:	das    
  408838:	push   eax
  408839:	or     DWORD PTR [edi+0x53a7c507],ebp
  40883f:	(bad)
  408842:	les    ecx,FWORD PTR [edi+0x3591959a]
  408848:	mov    al,0x2c
  40884a:	mov    DWORD PTR ds:0x7234e5a4,edx
  408850:	jo     0x40885d
  408852:	ret    0x7757
  408855:	popa   
  408856:	lahf   
  408857:	stc    
  408858:	pusha  
  408859:	or     al,0xc1
  40885b:	cmp    eax,ebx
  40885d:	cmc    
  40885e:	and    eax,0x4e790ad
  408863:	retf   
  408864:	jmp    0x51c8:0x25ee9b0d
  40886b:	push   ecx
  40886c:	xchg   edx,eax
  40886d:	(bad)  
  408870:	mov    dl,BYTE PTR [ecx]
  408872:	and    BYTE PTR [ecx+0x5b],ah
  408875:	lea    ecx,[esi+0x47]
  408878:	pop    ecx
  408879:	call   0x8f6b:0x833e8b00
  408880:	unpckhps xmm2,XMMWORD PTR [eax+0x54]
  408884:	push   edi
  408885:	pop    esp
  408886:	ins    DWORD PTR es:[edi],dx
  408887:	fs int3 
  408889:	rcr    BYTE PTR [ebp+0x3f0ca188],0x37
  408890:	out    dx,eax
  408891:	and    edi,DWORD PTR [ebx-0x43]
  408894:	jl     0x408904
  408896:	jbe    0x408898
  408898:	push   ss
  408899:	jge    0x4088a5
  40889b:	and    dh,0xe3
  40889e:	test   eax,ecx
  4088a0:	rcr    BYTE PTR [edi-0xda7035],0x8d
  4088a7:	or     ecx,ebp
  4088a9:	pop    esp
  4088aa:	(bad)  [eax]
  4088ac:	int    0x1b
  4088ae:	add    al,0xf3
  4088b0:	push   esi
  4088b1:	gs das 
  4088b3:	mul    ah
  4088b5:	mov    ebx,0x6e2b1af5
  4088ba:	pop    esp
  4088bb:	jmp    0x40888a
  4088bd:	repnz dec eax
  4088bf:	popa   
  4088c0:	pop    ss
  4088c1:	clc    
  4088c2:	lea    ebx,[ebx+edi*8+0x2b908dae]
  4088c9:	mov    ebp,0xb39f5025
  4088ce:	inc    ebx
  4088cf:	into   
  4088d0:	mov    WORD PTR [ebx-0x4348da84],ss
  4088d6:	pop    es
  4088d7:	mov    bh,0x77
  4088d9:	div    BYTE PTR [esi]
  4088db:	push   ds
  4088dc:	push   ebx
  4088dd:	imul   DWORD PTR [edx]
  4088df:	pop    edx
  4088e0:	test   DWORD PTR [ebp-0x5f],ebp
  4088e3:	mov    ah,0xb9
  4088e5:	adc    DWORD PTR [ecx],esi
  4088e7:	add    al,0xf5
  4088e9:	aas    
  4088ea:	pusha  
  4088eb:	mov    fs,ebp
  4088ed:	adc    edx,edi
  4088ef:	xchg   ebx,eax
  4088f0:	cld    
  4088f1:	ds mov edi,0xc2212b1d
  4088f7:	clc    
  4088f8:	in     eax,0x34
  4088fa:	xchg   ebx,eax
  4088fb:	rcl    DWORD PTR [eax],1
  4088fd:	dec    ebx
  4088fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ff:	pop    esi
  408900:	add    dh,ah
  408902:	or     edi,DWORD PTR [ebx]
  408904:	and    esp,DWORD PTR [edx+eiz*8-0x6a]
  408908:	lods   al,BYTE PTR ds:[esi]
  408909:	sbb    DWORD PTR [edi+0x71],0x2f77402b
  408910:	clc    
  408911:	jns    0x408971
  408913:	je     0x408972
  408915:	inc    esi
  408916:	imul   ebp,DWORD PTR [edx-0x64fbac19],0x2d
  40891d:	jae    0x4088d8
  40891f:	dec    edx
  408920:	addr16 xchg esp,eax
  408922:	xor    DWORD PTR [ebx+0x2b],eax
  408925:	mov    WORD PTR ds:0xc2b0233,gs
  40892b:	(bad)  
  40892c:	in     al,dx
  40892d:	(bad)  
  40892e:	push   eax
  40892f:	repz dec edx
  408931:	lea    ecx,[ecx]
  408933:	mov    esi,0x3bda90e7
  408938:	pop    ebx
  408939:	pop    ebx
  40893a:	inc    esi
  40893b:	or     dl,bl
  40893d:	in     al,0x3e
  40893f:	popa   
  408940:	repnz add esi,DWORD PTR [ecx-0xcdfc76a]
  408947:	or     dh,BYTE PTR [esi-0x13]
  40894a:	xchg   esi,eax
  40894b:	lods   eax,DWORD PTR ds:[esi]
  40894c:	dec    esp
  40894d:	dec    eax
  40894e:	pop    es
  40894f:	test   eax,0xa692add4
  408954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408955:	cmp    BYTE PTR [edx-0x37ce4749],ah
  40895b:	shl    BYTE PTR [edx],1
  40895d:	enter  0x1d87,0x3a
  408961:	mov    ah,0x22
  408963:	xchg   esp,eax
  408964:	imul   WORD PTR [ebx-0x5e]
  408968:	add    eax,0xad5c8ee6
  40896d:	adc    bh,0x7d
  408970:	(bad)  
  408971:	clc    
  408972:	sahf   
  408973:	scas   eax,DWORD PTR es:[edi]
  408974:	mov    edx,0xc4dd53f7
  408979:	and    ebp,edx
  40897b:	loopne 0x408917
  40897d:	sub    ch,BYTE PTR [eax]
  40897f:	arpl   WORD PTR [ebp+edx*1+0x6e5c23bc],bp
  408986:	add    al,0x2a
  408988:	in     al,dx
  408989:	xchg   BYTE PTR [edx+0x51],bl
  40898c:	mov    ah,0xdf
  40898e:	and    al,0xaa
  408990:	pusha  
  408991:	add    BYTE PTR [ecx],dl
  408993:	mov    bl,0x6a
  408995:	and    al,0x5e
  408997:	sbb    eax,0x8f80e469
  40899c:	push   edi
  40899d:	xchg   ebx,eax
  40899e:	pop    ebx
  40899f:	push   0xa5788639
  4089a4:	shr    edx,0x23
  4089a7:	cmp    al,0xd4
  4089a9:	inc    ebx
  4089aa:	sub    DWORD PTR [eax-0x1c44493f],esp
  4089b0:	jnp    0x408972
  4089b2:	cli    
  4089b3:	push   eax
  4089b4:	jmp    0xe6056fae
  4089b9:	sbb    bl,BYTE PTR [esi-0x75]
  4089bc:	pop    ds
  4089bd:	sub    ch,BYTE PTR [eax]
  4089bf:	or     al,BYTE PTR [esi+0x398f582f]
  4089c5:	mov    cs,esp
  4089c7:	cmp    al,0x27
  4089c9:	push   eax
  4089ca:	outs   dx,DWORD PTR ds:[esi]
  4089cb:	jno    0x4089e9
  4089cd:	dec    eax
  4089ce:	push   esi
  4089cf:	cmp    eax,DWORD PTR [edi+0x7433746e]
  4089d5:	cwde   
  4089d6:	dec    esi
  4089d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d8:	jb     0x4089a5
  4089da:	mov    dh,0xf9
  4089dc:	scas   eax,DWORD PTR es:[edi]
  4089dd:	inc    eax
  4089de:	rcr    BYTE PTR [eax-0x27fab065],1
  4089e4:	mov    ebp,0x21c0e542
  4089e9:	sahf   
  4089ea:	mov    esp,0x420c595a
  4089ef:	fld    QWORD PTR [esi+ebp*2-0x48]
  4089f3:	or     DWORD PTR [esi+0xa452816],ebx
  4089f9:	push   edx
  4089fa:	sbb    BYTE PTR [ebp+0x3ba60c55],bl
  408a00:	loop   0x40899b
  408a02:	add    ch,bl
  408a04:	ja     0x4089a7
  408a06:	std    
  408a07:	(bad)  {k5}{z}
  408a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a0d:	out    dx,eax
  408a0e:	lods   al,BYTE PTR ds:[esi]
  408a0f:	xor    ecx,DWORD PTR [ebx]
  408a11:	mov    ds:0x333243cd,al
  408a16:	and    al,ah
  408a18:	inc    eax
  408a19:	mov    eax,ds:0xa9f67f31
  408a1e:	leave  
  408a1f:	cmp    DWORD PTR [edi],esi
  408a21:	sbb    esi,edx
  408a23:	jmp    FWORD PTR [edx+0x6e]
  408a26:	jne    0x408a24
  408a28:	cmp    BYTE PTR [ebp+0x31],bl
  408a2b:	hlt    
  408a2c:	push   0x3a106a1b
  408a31:	loope  0x4089ec
  408a33:	adc    dl,BYTE PTR [esi+ecx*4]
  408a36:	sbb    edi,DWORD PTR [edx]
  408a38:	scas   al,BYTE PTR es:[edi]
  408a39:	mov    eax,ds:0x80ef3eae
  408a3e:	les    ebp,FWORD PTR [ebp+0x26fc6c70]
  408a44:	jmp    0x8a00:0xbd0f7221
  408a4b:	fist   WORD PTR [edx+0x61]
  408a4e:	push   esi
  408a4f:	adc    ebp,DWORD PTR [edx+0x6e1e1af7]
  408a55:	push   es
  408a56:	lods   eax,DWORD PTR ds:[esi]
  408a57:	gs push 0x55651c5f
  408a5d:	dec    ebp
  408a5e:	retf   
  408a5f:	ret    0x7ca5
  408a62:	rcl    DWORD PTR [edx+0x744fcd99],cl
  408a68:	push   cs
  408a69:	test   eax,0x39acd057
  408a6e:	xor    BYTE PTR ds:0x4f3db3d1,0xfb
  408a75:	xor    ch,cl
  408a77:	loop   0x408ab2
  408a79:	adc    DWORD PTR [ecx+ebx*8+0x2d],eax
  408a7d:	cmp    esi,esi
  408a7f:	shl    DWORD PTR [edi+0x63],0x44
  408a83:	cmp    ah,BYTE PTR [edx+0x57b288ee]
  408a89:	pop    ecx
  408a8a:	and    ebx,DWORD PTR [esi]
  408a8c:	ds sub al,0x23
  408a8f:	jno    0x408a27
  408a91:	adc    bh,BYTE PTR [edi-0x5a]
  408a94:	enter  0xfca7,0x70
  408a98:	push   edi
  408a99:	mov    ds:0xc5766399,eax
  408a9e:	je     0x408a85
  408aa0:	sbb    BYTE PTR [ecx],ch
  408aa2:	dec    eax
  408aa3:	xor    BYTE PTR [esi-0x4f5dddfc],dh
  408aa9:	lods   al,BYTE PTR ds:[esi]
  408aaa:	push   0xffffffa2
  408aac:	xor    bl,BYTE PTR [ebx]
  408aae:	rcl    cl,0x17
  408ab1:	nop
  408ab2:	addr16 mov ds:0xcab1,eax
  408ab6:	xor    ch,cl
  408ab8:	xor    ch,ch
  408aba:	xor    DWORD PTR [edi],edx
  408abc:	push   0x2e
  408abe:	cs out 0x4c,eax
  408ac1:	out    0x23,eax
  408ac3:	mov    al,0x11
  408ac5:	scas   eax,DWORD PTR es:[edi]
  408ac6:	mov    ebp,0x84430ef9
  408acb:	sahf   
  408acc:	bound  esi,QWORD PTR [edi+0x79b5c31e]
  408ad2:	mov    al,0xc9
  408ad4:	cdq    
  408ad5:	fidiv  DWORD PTR [esi]
  408ad7:	or     esi,DWORD PTR ds:0x53ff2d19
  408add:	sub    DWORD PTR [edi+0x17],0x32
  408ae1:	or     BYTE PTR [esi+0x20f6a4b8],al
  408ae7:	cmp    DWORD PTR [ebp+eiz*2+0x6b],eax
  408aeb:	and    eax,0x9eeeea1f
  408af0:	out    0x38,al
  408af2:	jp     0x408ad2
  408af4:	pop    ebp
  408af5:	mov    al,ds:0x5521588e
  408afa:	imul   ebx,DWORD PTR [ebx-0x53],0x9c0c7e5e
  408b01:	in     eax,dx
  408b02:	lahf   
  408b03:	arpl   WORD PTR [eax],si
  408b05:	dec    esp
  408b06:	in     al,0x38
  408b08:	pop    ebp
  408b09:	aaa    
  408b0a:	and    al,0x74
  408b0c:	loopne 0x408b33
  408b0e:	out    dx,eax
  408b0f:	mov    dl,0xa3
  408b11:	jp     0x408aba
  408b13:	jmp    0x408abb
  408b15:	and    DWORD PTR [ecx],ebx
  408b17:	pushf  
  408b18:	cvtps2pd xmm2,QWORD PTR [edx]
  408b1b:	test   al,0xb
  408b1d:	aaa    
  408b1e:	retf   0xb1b4
  408b21:	dec    edx
  408b22:	(bad)  
  408b23:	out    0x53,al
  408b25:	mov    dh,0xfb
  408b27:	inc    ebp
  408b28:	dec    eax
  408b29:	cwde   
  408b2a:	bound  ebp,QWORD PTR [ebp-0x47f6f96e]
  408b30:	push   ebx
  408b31:	dec    esp
  408b32:	adc    eax,0xc54cd74b
  408b37:	cdq    
  408b38:	(bad)  
  408b39:	push   ss
  408b3a:	inc    edx
  408b3b:	inc    ebx
  408b3c:	xchg   esi,eax
  408b3d:	sub    BYTE PTR [eax-0xd6c826e],cl
  408b43:	xchg   esp,eax
  408b44:	push   eax
  408b45:	cs fmulp st(3),st
  408b48:	dec    edx
  408b49:	shl    DWORD PTR [ecx],cl
  408b4b:	and    DWORD PTR [edx+0x44529b31],edi
  408b51:	add    eax,0x5f1e556c
  408b56:	aam    0x6d
  408b58:	push   es
  408b59:	mov    dl,0x2c
  408b5b:	mov    ds,WORD PTR [eax+0x2c]
  408b5e:	inc    ebx
  408b5f:	push   ebx
  408b60:	sub    dh,bl
  408b62:	in     al,0xfd
  408b64:	out    0x9,eax
  408b66:	cmp    bl,BYTE PTR [esi+ecx*2-0x6ac90377]
  408b6d:	cmp    BYTE PTR ds:0x1016fb9b,ah
  408b73:	repnz in eax,0x9
  408b76:	dec    bp
  408b78:	xchg   edi,eax
  408b79:	pop    es
  408b7a:	out    0xff,al
  408b7c:	int3   
  408b7d:	std    
  408b7e:	(bad)  
  408b7f:	das    
  408b80:	es cdq 
  408b82:	int3   
  408b83:	ss push 0x0
  408b86:	inc    edi
  408b87:	(bad)  
  408b88:	xchg   edx,eax
  408b89:	imul   edi,DWORD PTR [eax+0x15e064d8],0xffffffb1
  408b90:	add    al,BYTE PTR [ebp+0xb1b0f49]
  408b96:	ins    BYTE PTR es:[edi],dx
  408b97:	mov    eax,0x3b14ac27
  408b9c:	loop   0x408bdb
  408b9e:	dec    ebx
  408ba0:	data16 fsubr DWORD PTR [eax-0x5]
  408ba4:	in     eax,0x69
  408ba6:	sub    BYTE PTR [eax-0x73b92e44],dh
  408bac:	fnstsw WORD PTR ds:0xd21f1b9c
  408bb2:	dec    ebx
  408bb3:	dec    ebx
  408bb4:	pop    esp
  408bb5:	xor    al,BYTE PTR [eax-0x16700376]
  408bbb:	inc    esi
  408bbc:	sub    eax,0xf6a32316
  408bc1:	sub    edi,DWORD PTR [esi]
  408bc3:	or     al,0xc3
  408bc5:	outs   dx,DWORD PTR ds:[esi]
  408bc6:	aad    0x7a
  408bc8:	sub    al,0xe6
  408bca:	or     BYTE PTR [ecx-0x7e9af14a],ah
  408bd0:	xchg   ebx,eax
  408bd1:	push   edi
  408bd2:	inc    eax
  408bd3:	xor    DWORD PTR [edx-0x3e03e270],ebp
  408bd9:	fld    DWORD PTR [ebx+0x6ccf79f]
  408bdf:	adc    al,0xe1
  408be1:	and    al,0x0
  408be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408be4:	push   cs
  408be5:	jge    0x408b7f
  408be7:	in     al,0x2
  408be9:	dec    ebx
  408bea:	addr16 pop ebp
  408bec:	lock test al,0x51
  408bef:	cmp    al,BYTE PTR [ebx]
  408bf1:	call   DWORD PTR [ecx]
  408bf3:	fild   WORD PTR [ebx+edi*1+0x61]
  408bf7:	xchg   edx,eax
  408bf8:	xchg   ebp,eax
  408bf9:	ss pop edx
  408bfb:	inc    ebx
  408bfc:	cmp    BYTE PTR [edi],ah
  408bfe:	aaa    
  408bff:	pusha  
  408c00:	mov    esp,0xe83fa686
  408c05:	cld    
  408c06:	push   esp
  408c07:	fs dec eax
  408c09:	or     DWORD PTR [eax+0x49d74ac0],ecx
  408c0f:	xchg   edx,eax
  408c10:	and    ebx,DWORD PTR [ebp+0x1de16010]
  408c16:	sbb    DWORD PTR [eax-0x375fa392],ecx
  408c1c:	ins    BYTE PTR es:[edi],dx
  408c1d:	out    dx,al
  408c1e:	pushf  
  408c1f:	arpl   bx,ax
  408c21:	retf   0xb80d
  408c24:	shl    DWORD PTR [ebx],cl
  408c26:	in     eax,0x16
  408c28:	mov    ebx,0xab5eeece
  408c2d:	push   esp
  408c2e:	jle    0x408c1e
  408c30:	sub    edi,DWORD PTR [eax]
  408c32:	jmp    0xb4ac7d98
  408c37:	inc    esi
  408c38:	std    
  408c39:	mov    dx,0xb40f
  408c3d:	mov    ds:0xba9ee6b0,eax
  408c42:	inc    ecx
  408c43:	rcr    DWORD PTR ds:0x7149b11,0xc
  408c4a:	loope  0x408c12
  408c4c:	mov    bl,0xd5
  408c4e:	lock jb 0x408cbb
  408c51:	addr16 mov ecx,0xd279dec5
  408c57:	pop    ebx
  408c58:	les    eax,FWORD PTR [esi+ebp*2-0x27]
  408c5c:	(bad)  [ebp+0x47]
  408c5f:	or     eax,0x94f040cb
  408c64:	cld    
  408c65:	stos   BYTE PTR es:[edi],al
  408c66:	lea    ebp,[ecx-0x1a]
  408c69:	popf   
  408c6a:	pop    es
  408c6b:	mov    eax,0xa0cae141
  408c70:	iret   
  408c71:	or     ch,bl
  408c73:	push   ds
  408c74:	pusha  
  408c75:	sahf   
  408c76:	push   ebx
  408c77:	(bad)  
  408c78:	idiv   BYTE PTR [esi-0x6fc31231]
  408c7e:	sub    BYTE PTR [esi],ch
  408c80:	xchg   ebx,eax
  408c81:	or     DWORD PTR [ebp+eiz*1+0x44d4cfa5],ebx
  408c88:	hlt    
  408c89:	in     eax,dx
  408c8a:	in     eax,dx
  408c8b:	xchg   edx,eax
  408c8c:	inc    ebp
  408c8d:	repnz pop es
  408c8f:	loopne 0x408c1a
  408c91:	lods   al,BYTE PTR ds:[esi]
  408c92:	retf   0xd444
  408c95:	addr16 xchg ebp,eax
  408c97:	sub    ecx,DWORD PTR [eax-0x76]
  408c9a:	sub    esp,esp
  408c9c:	retf   
  408c9d:	sbb    ebx,DWORD PTR [edi+0x58]
  408ca0:	jns    0x408c6c
  408ca2:	jmp    0x408c41
  408ca4:	jge    0x408c28
  408ca6:	mov    ds:0xc2c118ea,eax
  408cab:	out    0xe5,eax
  408cad:	pop    ebx
  408cae:	(bad)  
  408caf:	jb     0x408c4a
  408cb1:	xor    DWORD PTR [ebx+0x7f],0xd9ff3cc
  408cb8:	push   ebp
  408cb9:	pop    esp
  408cba:	sbb    dh,BYTE PTR [esi+eiz*8]
  408cbd:	mov    ch,0xe3
  408cbf:	fsub   DWORD PTR ds:0xd582731c
  408cc5:	ss cmp eax,0xe17f6201
  408ccb:	sbb    ch,BYTE PTR [esi+0x2866caac]
  408cd1:	or     eax,DWORD PTR [edi+0xfd08280]
  408cd7:	icebp  
  408cd8:	mov    ebp,0x34394f4b
  408cdd:	push   0xb8ed89fd
  408ce2:	and    eax,0x60675078
  408ce7:	inc    ecx
  408ce8:	inc    ebx
  408ce9:	push   edx
  408cea:	add    eax,0x50fdc4a6
  408cef:	les    esp,FWORD PTR [esi-0x409d9707]
  408cf5:	xchg   esp,eax
  408cf6:	scas   eax,DWORD PTR es:[edi]
  408cf7:	and    eax,0xb02e2cfa
  408cfc:	outs   dx,BYTE PTR ds:[esi]
  408cfd:	push   edi
  408cfe:	adc    ebp,ebp
  408d00:	jmp    0x408cda
  408d02:	and    eax,esp
  408d04:	(bad)  
  408d05:	leave  
  408d06:	fs pop edx
  408d08:	sub    eax,0xbafe18bb
  408d0d:	or     ah,BYTE PTR [esp+ebp*1-0x71]
  408d11:	mov    edx,0x8e90b4f9
  408d16:	sub    DWORD PTR [edi+esi*2-0x68],0x9c9750e8
  408d1e:	pop    esi
  408d1f:	rol    BYTE PTR [ecx+0x11cd7e4e],cl
  408d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d26:	imul   ebx,DWORD PTR [edx-0x501df064],0x2b
  408d2d:	cmp    al,0x42
  408d2f:	test   esi,ebx
  408d31:	and    eax,0xfde9abb6
  408d36:	loop   0x408d6d
  408d38:	rcr    DWORD PTR [ebx-0x5d],0x18
  408d3c:	mov    al,BYTE PTR [edi+0x33e1e73e]
  408d42:	jmp    0x408dbe
  408d44:	jmp    0x408d28
  408d46:	into   
  408d47:	mov    ch,0xca
  408d49:	cwde   
  408d4a:	mov    esp,0xc4fa4700
  408d4f:	scas   eax,DWORD PTR es:[edi]
  408d50:	push   ebp
  408d51:	mov    ds:0x92f78fe3,al
  408d56:	or     DWORD PTR [ebp-0x34c62f28],edx
  408d5c:	dec    ecx
  408d5d:	jnp    0x408cf7
  408d5f:	mov    al,0xce
  408d61:	inc    esi
  408d62:	add    BYTE PTR [esi+0x41],ch
  408d65:	pop    eax
  408d66:	(bad)  [edi+ecx*8]
  408d69:	xor    BYTE PTR [edx],cl
  408d6b:	cld    
  408d6c:	out    0xf0,eax
  408d6e:	scas   al,BYTE PTR es:[edi]
  408d6f:	jnp    0x408d4d
  408d71:	iret   
  408d72:	ins    DWORD PTR es:[edi],dx
  408d73:	rol    DWORD PTR [eax+0x55],1
  408d76:	loope  0x408d94
  408d78:	inc    ebx
  408d79:	inc    edx
  408d7a:	mov    eax,DWORD PTR [ecx+edx*4-0x37]
  408d7e:	(bad)  
  408d7f:	sub    BYTE PTR [edx+ebp*2],ch
  408d82:	jo     0x408d27
  408d84:	sbb    DWORD PTR [ecx*2+0x18792fa],ebx
  408d8b:	mov    eax,ds:0x31e734b
  408d90:	jecxz  0x408d2f
  408d92:	test   BYTE PTR [esp+eiz*8-0x5a],0x6a
  408d97:	pop    esi
  408d98:	popa   
  408d99:	cli    
  408d9a:	sbb    al,BYTE PTR [edi+0x52dee680]
  408da0:	sbb    esp,ecx
  408da2:	or     esp,ebp
  408da4:	add    BYTE PTR [edx+eax*4-0x3b665337],bl
  408dab:	pop    ds
  408dac:	or     eax,0x1203db54
  408db1:	xchg   ebx,eax
  408db2:	mov    esp,DWORD PTR [esi-0x36ac5244]
  408db8:	mov    esp,0x18e2e7fe
  408dbd:	mov    dh,0x90
  408dbf:	popa   
  408dc0:	jo     0x408e06
  408dc2:	mov    ebx,0x95221a9c
  408dc7:	push   0xffffff97
  408dc9:	imul   BYTE PTR [ebx-0x3e8577fd]
  408dcf:	popa   
  408dd0:	mov    BYTE PTR [ebx-0x1f214db2],ah
  408dd6:	xor    ch,BYTE PTR [ebx+0x331b9230]
  408ddc:	push   ecx
  408ddd:	push   cs
  408dde:	shl    BYTE PTR [eax-0x3d],1
  408de1:	loopne 0x408e2c
  408de3:	inc    esp
  408de4:	inc    ecx
  408de5:	retf   
  408de6:	int3   
  408de7:	add    al,0x1e
  408de9:	xchg   esi,eax
  408dea:	cld    
  408deb:	jg     0x408d92
  408ded:	inc    edx
  408dee:	sbb    bl,BYTE PTR [esi+0xb]
  408df1:	in     al,dx
  408df2:	sub    eax,0x3b793140
  408df7:	fwait
  408df8:	mov    esi,0x3436cd7c
  408dfd:	adc    BYTE PTR [ecx+0x3f],cl
  408e00:	pusha  
  408e01:	shl    BYTE PTR [esi+0x5ed2dbe9],0x5c
  408e08:	das    
  408e09:	add    al,0xc
  408e0b:	test   al,0xe5
  408e0d:	call   edx
  408e0f:	aad    0xe3
  408e11:	adc    edi,edi
  408e13:	dec    esp
  408e14:	lahf   
  408e15:	add    edi,esi
  408e17:	mov    BYTE PTR cs:[eax+0xfc95f96],ah
  408e1e:	dec    ebx
  408e1f:	dec    esp
  408e20:	jmp    0x950b5528
  408e25:	or     dh,BYTE PTR [esi+0x36]
  408e28:	mov    al,0x7d
  408e2a:	lahf   
  408e2b:	cwde   
  408e2c:	aaa    
  408e2d:	imul   BYTE PTR [ebx+0x24e136d8]
  408e33:	dec    esp
  408e34:	jne    0x408e05
  408e36:	repnz or ebx,esi
  408e39:	loopne 0x408e28
  408e3b:	dec    esi
  408e3c:	stos   BYTE PTR es:[edi],al
  408e3d:	or     al,0x3e
  408e3f:	rol    DWORD PTR [ecx-0x29],cl
  408e42:	pop    ecx
  408e43:	sbb    ecx,eax
  408e45:	aas    
  408e46:	js     0x408e33
  408e48:	cdq    
  408e49:	ret    
  408e4a:	push   edi
  408e4b:	sbb    dh,BYTE PTR [ecx+0x61e4e54a]
  408e51:	shr    DWORD PTR [ebp-0x1f],1
  408e54:	leave  
  408e55:	mov    eax,0x559d3c72
  408e5a:	lock sbb cl,bh
  408e5d:	rcr    DWORD PTR [edi-0x7bd84703],0x7a
  408e64:	jae    0x408e42
  408e66:	add    esp,DWORD PTR [ecx-0x3ccc5004]
  408e6c:	and    ecx,DWORD PTR [esi]
  408e6e:	cs dec esi
  408e70:	cmp    bl,cl
  408e72:	mov    eax,DWORD PTR [edx]
  408e74:	push   ebp
  408e75:	test   eax,0xe0220ba0
  408e7a:	test   al,0xb3
  408e7c:	loope  0x408e38
  408e7e:	fist   WORD PTR [edi+ebp*1]
  408e81:	add    eax,DWORD PTR [ecx-0x61]
  408e84:	xor    esi,0xe87fd745
  408e8a:	das    
  408e8b:	test   DWORD PTR [eax-0x38],ecx
  408e8e:	xor    cl,ah
  408e90:	inc    ecx
  408e91:	jno    0x408e8d
  408e93:	jg     0x408f0e
  408e95:	and    BYTE PTR [ebx+0x43d82b3a],ah
  408e9b:	in     eax,0xfc
  408e9d:	mov    bl,BYTE PTR [ebp+edx*4+0xe]
  408ea1:	jmp    0xbe5c:0xb71753d0
  408ea8:	jle    0x408f1f
  408eaa:	pop    ds
  408eab:	test   al,0x95
  408ead:	add    esp,DWORD PTR [ebx-0xd]
  408eb0:	sbb    esp,DWORD PTR ds:0x45edae22
  408eb6:	fild   QWORD PTR [edx+0x7c]
  408eb9:	shl    DWORD PTR [edx+0x73],1
  408ebc:	mov    eax,ds:0x59dc109a
  408ec1:	or     dl,BYTE PTR [esi]
  408ec3:	jno    0x408f0b
  408ec5:	inc    ebx
  408ec6:	mul    DWORD PTR [eax+0x7ec92e83]
  408ecc:	xchg   esp,eax
  408ecd:	inc    ebp
  408ece:	add    eax,edi
  408ed0:	xchg   edx,eax
  408ed1:	repz mov dl,0x61
  408ed4:	mov    dl,cl
  408ed6:	sub    DWORD PTR [edx],ebx
  408ed8:	or     BYTE PTR [ebp+0x5f363d43],al
  408ede:	test   DWORD PTR [ecx],0xcf32c0c3
  408ee4:	mov    esi,0xfab41874
  408ee9:	cmc    
  408eea:	cdq    
  408eeb:	sbb    ch,bh
  408eed:	jnp    0x408ee6
  408eef:	(bad)  
  408ef0:	gs and eax,0x12e7dcdc
  408ef6:	pop    ds
  408ef7:	push   ecx
  408ef8:	jb     0x408f5f
  408efa:	xor    dl,al
  408efc:	adc    BYTE PTR [ebp-0x6778e28b],dh
  408f02:	out    dx,al
  408f03:	cmp    al,0xa6
  408f05:	push   ebx
  408f06:	inc    esp
  408f07:	mov    ?,WORD PTR [ecx]
  408f09:	test   eax,0x1170eefd
  408f0f:	fucomi st,st(3)
  408f11:	jmp    0xacec:0x2cb1dc34
  408f18:	jo     0x408eac
  408f1a:	push   ds
  408f1b:	(bad)  
  408f1d:	push   ecx
  408f1e:	mov    ah,0x75
  408f20:	ficom  DWORD PTR [bx+si]
  408f23:	xchg   ecx,eax
  408f24:	and    al,0x3b
  408f26:	lock adc BYTE PTR [eax+0x7b],0x7
  408f2b:	loope  0x408f27
  408f2d:	mov    esi,0x7a097cd0
  408f32:	or     DWORD PTR [edx+0x0],ebp
  408f35:	fnsave [ebx-0x5b3b9b6f]
  408f3b:	mov    bl,0x5f
  408f3d:	mov    ebp,0x89132c86
  408f42:	mov    DWORD PTR [esi],ebx
  408f44:	(bad)  
  408f46:	jmp    0xabd3:0x103e2dca
  408f4d:	test   DWORD PTR [ecx+0x3f],esp
  408f50:	mov    dh,0x88
  408f52:	test   al,0xbc
  408f54:	aas    
  408f55:	mov    BYTE PTR [ebp-0x55],ah
  408f58:	mov    ecx,DWORD PTR [edx]
  408f5a:	ins    BYTE PTR es:[edi],dx
  408f5b:	xor    al,0xd8
  408f5d:	adc    BYTE PTR [eax-0x369c196f],ch
  408f63:	mov    cl,bh
  408f65:	or     al,0x2
  408f67:	and    edx,DWORD PTR [esi+0x44]
  408f6a:	loope  0x408fc6
  408f6c:	pusha  
  408f6d:	push   eax
  408f6e:	enter  0x5db7,0x25
  408f72:	jp     0x408fa2
  408f74:	pop    edx
  408f75:	mov    esp,0x203c5b4c
  408f7a:	daa    
  408f7b:	sti    
  408f7c:	add    ecx,DWORD PTR [edi+0x2c908686]
  408f82:	jg     0x408f30
  408f84:	jle    0x408f28
  408f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f87:	aas    
  408f88:	ja     0x408fdc
  408f8a:	and    ebp,DWORD PTR [edi]
  408f8c:	jae    0x408f1b
  408f8e:	les    ebp,FWORD PTR [esi-0x6fa6414c]
  408f94:	sbb    esp,edi
  408f96:	dec    ebp
  408f97:	add    al,0xa0
  408f99:	gs ret 
  408f9b:	pop    ds
  408f9c:	lock ret 
  408f9e:	and    cl,ch
  408fa0:	xchg   cl,ch
  408fa2:	cdq    
  408fa3:	daa    
  408fa4:	out    0x18,al
  408fa6:	lds    ecx,FWORD PTR [eax]
  408fa8:	out    0xe6,eax
  408faa:	pop    ecx
  408fab:	add    al,al
  408fad:	push   eax
  408fae:	sub    BYTE PTR [edx-0xa],bl
  408fb1:	pop    esp
  408fb2:	outs   dx,DWORD PTR ds:[esi]
  408fb3:	pushf  
  408fb4:	daa    
  408fb5:	xchg   ebx,eax
  408fb6:	and    eax,0xf97d8e95
  408fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fbc:	in     eax,dx
  408fbd:	or     al,0x84
  408fbf:	pusha  
  408fc0:	cmp    DWORD PTR [esi+0x2e],ecx
  408fc3:	mov    eax,esi
  408fc5:	lock mov ebp,0xafdba369
  408fcb:	loop   0x408f84
  408fcd:	mov    edi,0xbe8af977
  408fd2:	sbb    ecx,DWORD PTR [eax-0x18]
  408fd5:	sbb    ch,BYTE PTR [edx+0xe]
  408fd8:	add    BYTE PTR [eax+0x6c],ah
  408fdb:	or     al,0xdc
  408fdd:	inc    edi
  408fde:	mov    cl,0x49
  408fe0:	or     eax,0xc3e5e581
  408fe5:	sub    DWORD PTR [edi+0x786ce017],ebx
  408feb:	lods   eax,DWORD PTR ds:[esi]
  408fec:	push   es
  408fed:	ss ss dec ecx
  408ff0:	push   ss
  408ff1:	popf   
  408ff2:	loop   0x409060
  408ff4:	adc    BYTE PTR [edi],dl
  408ff6:	into   
  408ff7:	les    ecx,FWORD PTR [ebp+0x7a]
  408ffa:	xor    BYTE PTR [ebx],al
  408ffc:	js     0x409067
  408ffe:	push   cs
  408fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409000:	loop   0x40907c
  409002:	mov    ch,bh
  409004:	shl    BYTE PTR [ebx-0x28e7d691],cl
  40900a:	xchg   esi,eax
  40900b:	shl    edi,1
  40900d:	fwait
  40900e:	pop    edx
  40900f:	jg     0x408ff8
  409011:	ins    BYTE PTR es:[edi],dx
  409012:	leave  
  409013:	jmp    0xd6ef3072
  409018:	adc    ecx,DWORD PTR [ecx-0x57]
  40901b:	ds jne 0x40904b
  40901e:	xchg   esp,eax
  40901f:	ror    DWORD PTR [eax+0x329c5d09],0x84
  409026:	int    0x69
  409028:	inc    ebx
  409029:	xchg   ecx,eax
  40902a:	bound  edi,QWORD PTR [edx]
  40902c:	xchg   BYTE PTR [ebx+0x2a],bl
  40902f:	arpl   WORD PTR [esi],cx
  409031:	ss mov esp,0x71035e9c
  409037:	test   DWORD PTR [ecx+ecx*1],esp
  40903a:	jecxz  0x40902a
  40903c:	imul   esi,DWORD PTR [eax+0x29],0xffffffe2
  409040:	(bad)  
  409041:	mov    edi,DWORD PTR [edi]
  409043:	add    al,0x32
  409045:	push   ecx
  409046:	in     eax,0x19
  409048:	ds cmp al,0x41
  40904b:	mov    al,0xd8
  40904d:	cld    
  40904e:	pop    eax
  40904f:	jno    0x40901e
  409051:	call   DWORD PTR [ebx+0x77e0c78b]
  409057:	sub    DWORD PTR [esi+0x7],ebp
  40905a:	mov    al,ds:0x4813a5b0
  40905f:	or     edx,ebp
  409061:	popa   
  409062:	rcl    BYTE PTR [ecx+0x53],0x48
  409066:	adc    esi,ebx
  409068:	xchg   esi,eax
  409069:	sub    ah,BYTE PTR [edi]
  40906b:	test   eax,0xe05c323e
  409070:	ss cld 
  409072:	adc    eax,0xd069142b
  409077:	stos   BYTE PTR es:[edi],al
  409078:	add    al,0xa0
  40907a:	fild   WORD PTR [edx]
  40907c:	pop    edi
  40907d:	xor    al,0xdf
  40907f:	mov    DWORD PTR [ebx],ebp
  409081:	(bad)  
  409082:	(bad)  
  409084:	sbb    dl,al
  409086:	sbb    al,0xf6
  409088:	outs   dx,DWORD PTR ds:[esi]
  409089:	mov    edx,0x21aa5461
  40908e:	pop    ebp
  40908f:	popa   
  409090:	dec    ecx
  409091:	lock retf 
  409093:	mov    ecx,0x66bc8bff
  409098:	jnp    0x4090c9
  40909a:	daa    
  40909b:	daa    
  40909c:	imul   edi,DWORD PTR [ecx+edi*8],0xb647e351
  4090a3:	jae    0x409042
  4090a5:	xchg   DWORD PTR [esi+0x7c],esi
  4090a8:	mov    eax,ds:0xa367d8cd
  4090ad:	js     0x4090de
  4090af:	adc    BYTE PTR [ebx],bl
  4090b1:	or     esp,DWORD PTR [edx]
  4090b3:	cdq    
  4090b4:	daa    
  4090b5:	add    BYTE PTR [ecx],ch
  4090b7:	push   es
  4090b8:	push   ebx
  4090b9:	imul   eax,DWORD PTR [ecx-0x18],0x4
  4090bd:	ja     0x4090c8
  4090bf:	enter  0xceb6,0xef
  4090c3:	repnz mov dl,0x40
  4090c6:	xchg   ebx,eax
  4090c7:	je     0x4090d3
  4090c9:	fwait
  4090ca:	imul   edx,DWORD PTR [edi-0x1f],0x28ee180d
  4090d1:	ja     0x409093
  4090d3:	push   edx
  4090d4:	jecxz  0x409078
  4090d6:	arpl   WORD PTR [ebx+0x6d506266],ax
  4090dc:	lods   al,BYTE PTR ds:[esi]
  4090dd:	cli    
  4090de:	push   es
  4090df:	xchg   esi,eax
  4090e0:	sbb    edx,ecx
  4090e2:	ins    DWORD PTR es:[edi],dx
  4090e3:	lock (bad) 
  4090e5:	sub    ah,BYTE PTR [eax-0xb]
  4090e8:	push   ebp
  4090e9:	jl     0x4090c2
  4090eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ec:	fs nop
  4090ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ef:	shr    ebp,0x5d
  4090f2:	lds    eax,FWORD PTR [esi+0x61a57bab]
  4090f8:	jmp    0x40913b
  4090fa:	(bad)  
  4090fb:	repnz popa 
  4090fd:	pop    ds
  4090fe:	cmp    al,0x24
  409100:	cmp    DWORD PTR [edx+0x61],ebp
  409103:	sub    DWORD PTR [edi+0x55],0x7b
  409107:	mov    dl,0xc2
  409109:	xchg   ecx,eax
  40910a:	je     0x409141
  40910c:	mov    esp,0x41d344db
  409111:	xchg   ecx,eax
  409112:	inc    ebx
  409113:	cwde   
  409114:	push   esp
  409115:	or     eax,0xad928cc6
  40911a:	stos   BYTE PTR es:[edi],al
  40911b:	jno    0x40916d
  40911d:	mov    ds:0x19125611,al
  409122:	mov    al,ds:0x8e6480d8
  409127:	js     0x409125
  409129:	pusha  
  40912a:	fcmovne st,st(0)
  40912c:	cld    
  40912d:	fwait
  40912e:	jg     0x409163
  409130:	or     BYTE PTR [ecx-0x446218f3],0x2b
  409137:	add    al,0xee
  409139:	(bad)  
  40913a:	cdq    
  40913b:	std    
  40913c:	sub    DWORD PTR [ebx+ebp*1],0xc24733a6
  409143:	pop    ebp
  409144:	jno    0x4090d2
  409146:	mov    eax,0x8d47162a
  40914b:	arpl   WORD PTR [ecx-0x52],bp
  40914e:	push   cs
  40914f:	lods   eax,DWORD PTR ds:[esi]
  409150:	mov    ds:0xb38dd6c9,eax
  409155:	jb     0x40917c
  409157:	jge    0x4090df
  409159:	xchg   esi,eax
  40915a:	lock mov WORD PTR [edi-0x7],gs
  40915e:	cli    
  40915f:	jle    0x409105
  409161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409162:	scas   al,BYTE PTR es:[edi]
  409163:	pop    ecx
  409164:	lods   al,BYTE PTR ds:[esi]
  409165:	cmp    DWORD PTR ds:0x504d4d64,eax
  40916b:	mov    ch,0xe
  40916d:	aaa    
  40916e:	adc    eax,0x72476ffe
  409173:	and    edi,DWORD PTR [edi-0x44]
  409176:	mov    dl,0x10
  409178:	sub    DWORD PTR [ecx-0x3b579f6a],ecx
  40917e:	mov    eax,ds:0x4092dbe
  409183:	pop    ds
  409184:	add    dl,BYTE PTR [ecx+0x44]
  409187:	jl     0x4091bc
  409189:	popf   
  40918a:	inc    edx
  40918b:	(bad)  
  40918c:	mov    ah,0x83
  40918e:	jle    0x4091b7
  409190:	fimul  DWORD PTR [edi-0x36]
  409193:	mov    dl,0x13
  409195:	inc    eax
  409196:	inc    ebp
  409197:	fcom   DWORD PTR ds:0x26d14dfd
  40919d:	push   es
  40919e:	cmp    al,0xd8
  4091a0:	xchg   ebx,eax
  4091a1:	outs   dx,BYTE PTR ds:[esi]
  4091a2:	or     ebp,DWORD PTR [esi+0x28]
  4091a5:	add    eax,0x7fb23b2e
  4091aa:	inc    ebx
  4091ab:	repnz shl BYTE PTR [edx+0x5d],0x9
  4091b0:	dec    ebx
  4091b1:	pop    ss
  4091b2:	popa   
  4091b3:	scas   eax,DWORD PTR es:[edi]
  4091b4:	ss jb  0x4091df
  4091b7:	and    DWORD PTR [bx-0x3e39],ecx
  4091bc:	sub    ebp,ebx
  4091be:	imul   edx,DWORD PTR [esi+0x4c],0xffffffbd
  4091c2:	jg     0x409172
  4091c4:	neg    DWORD PTR [ebp+0x2525a77]
  4091ca:	daa    
  4091cb:	int3   
  4091cc:	mov    edx,0x62761c5c
  4091d1:	sub    al,0x8
  4091d3:	xchg   ecx,eax
  4091d4:	lea    edi,[ebx-0x25]
  4091d7:	test   DWORD PTR [esi],ecx
  4091d9:	inc    esi
  4091da:	gs pop ebx
  4091dc:	xchg   esp,eax
  4091dd:	rcl    BYTE PTR [edi-0x45],0xa4
  4091e1:	xchg   edi,eax
  4091e2:	mov    BYTE PTR [esi+ebp*8],dl
  4091e5:	add    ebp,edi
  4091e7:	mov    bh,0x8
  4091e9:	aas    
  4091ea:	ins    BYTE PTR es:[edi],dx
  4091eb:	and    BYTE PTR [ecx-0x47],dh
  4091ee:	jmp    0x40924d
  4091f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f1:	mov    ch,0xa2
  4091f3:	imul   esi,DWORD PTR [edx+edx*4-0x6a8184d6],0x7b
  4091fb:	mov    BYTE PTR [edi+0xdf190ca],dl
  409201:	or     BYTE PTR [ebp+0x58],ch
  409204:	leave  
  409205:	xchg   esi,eax
  409206:	dec    ecx
  409207:	fiadd  DWORD PTR ds:0xf5eb816e
  40920d:	jle    0x4091bb
  40920f:	xor    al,0x38
  409211:	repnz fnstcw WORD PTR [eax]
  409214:	add    al,0x4f
  409216:	out    0xcb,al
  409218:	jbe    0x4091e1
  40921a:	add    eax,0x7ef1980a
  40921f:	dec    eax
  409220:	mov    cl,0xd
  409222:	cmp    al,0x95
  409224:	mov    ebx,0xa79f1a1c
  409229:	out    dx,al
  40922a:	test   al,0xe9
  40922c:	pop    esp
  40922d:	std    
  40922e:	(bad)  
  40922f:	sub    al,0xc4
  409231:	sub    dl,bh
  409233:	jge    0x409275
  409235:	call   0x6e94:0x33b5849f
  40923c:	(bad)  
  40923d:	fdivr  QWORD PTR [edi]
  40923f:	add    al,0x86
  409241:	xchg   esp,eax
  409242:	outs   dx,BYTE PTR ds:[esi]
  409243:	pop    esi
  409244:	mov    bh,0x2c
  409246:	xor    ch,dh
  409248:	int3   
  409249:	popa   
  40924a:	(bad)  
  40924b:	jp     0x40920d
  40924d:	daa    
  40924e:	mov    bh,0xf8
  409250:	or     BYTE PTR [ebp-0x485aae2f],dl
  409256:	xchg   edi,eax
  409257:	xor    al,0xf6
  409259:	ja     0x40928b
  40925b:	(bad)  
  40925d:	xor    al,0xba
  40925f:	xor    edi,eax
  409261:	ficom  WORD PTR [ebx+0x5a]
  409264:	cmc    
  409265:	dec    eax
  409266:	stc    
  409267:	jbe    0x40924b
  409269:	sub    esp,DWORD PTR [ebp+0x5]
  40926c:	bnd ret 0xeead
  409270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409271:	push   cs
  409272:	push   esi
  409273:	push   cs
  409274:	fisubr WORD PTR [ebx+0x1027db6]
  40927a:	sar    dh,cl
  40927c:	push   edx
  40927d:	jmp    0x3e700842
  409282:	mov    al,0xba
  409284:	out    dx,al
  409285:	jecxz  0x4092d8
  409287:	fistp  DWORD PTR [ebp-0x7387e02c]
  40928d:	and    ebx,0x26
  409290:	mov    eax,0x1acd22da
  409295:	or     DWORD PTR [esp+ebp*4-0x11],ecx
  409299:	dec    edi
  40929a:	test   BYTE PTR [esi+edi*2],al
  40929d:	push   ebx
  40929e:	sub    DWORD PTR [ecx-0x236ac243],ebx
  4092a4:	push   es
  4092a5:	dec    ebx
  4092a6:	jb     0x40925f
  4092a8:	mov    al,0x7c
  4092aa:	std    
  4092ab:	push   0x1bfc79c
  4092b0:	or     edx,esi
  4092b2:	or     eax,0x830d5cae
  4092b7:	loop   0x40929a
  4092b9:	ds call 0x5222:0xb6851a9
  4092c1:	ret    
  4092c2:	int    0xbd
  4092c4:	mov    eax,0x4c0cc5fb
  4092c9:	xchg   edx,ebx
  4092cb:	jnp    0x4092de
  4092cd:	cwde   
  4092ce:	mov    esi,0x587b446b
  4092d3:	sbb    al,0x59
  4092d5:	neg    BYTE PTR [ebx-0x73b16bae]
  4092db:	mov    ecx,0xbe8552f2
  4092e0:	stc    
  4092e1:	ja     0x40929e
  4092e3:	jg     0x40935b
  4092e5:	mov    ds:0x2f4c4384,al
  4092ea:	in     al,dx
  4092eb:	ret    0xc35e
  4092ee:	pop    edx
  4092ef:	or     al,0xa6
  4092f1:	push   0xffffffa6
  4092f3:	aas    
  4092f4:	retf   0x955c
  4092f7:	retf   
  4092f8:	dec    esi
  4092f9:	sub    BYTE PTR [edx],al
  4092fb:	push   edi
  4092fc:	pop    ebx
  4092fd:	icebp  
  4092fe:	icebp  
  4092ff:	and    edi,DWORD PTR ds:0xaa9460f9
  409305:	add    bh,bh
  409307:	pusha  
  409308:	stc    
  409309:	stc    
  40930a:	jne    0x4092b3
  40930c:	fisubr WORD PTR [ecx]
  40930e:	cmp    al,0x2f
  409310:	idiv   BYTE PTR [edx-0x3bd39187]
  409316:	sub    cl,BYTE PTR [ebx-0x30]
  409319:	imul   ebp,DWORD PTR [esi+0x39c3387d],0xffffffe2
  409320:	adc    eax,0x88f100cc
  409325:	icebp  
  409326:	push   cs
  409327:	jns    0x4092e3
  409329:	cld    
  40932a:	out    0xfd,al
  40932c:	pop    ds
  40932d:	push   esp
  40932e:	outs   dx,BYTE PTR ds:[esi]
  40932f:	mov    ebp,0x2adf769
  409334:	mov    bl,0xfa
  409336:	add    al,0x59
  409338:	sbb    al,0xe
  40933a:	jns    0x409329
  40933c:	add    ch,bh
  40933e:	mov    dl,0x90
  409340:	dec    eax
  409341:	jno    0x409391
  409343:	data16 out dx,al
  409345:	les    ecx,FWORD PTR [ebp+0x5b784c6c]
  40934b:	mov    cl,BYTE PTR [ebp-0x7d50568c]
  409351:	outs   dx,DWORD PTR ds:[esi]
  409352:	gs adc eax,0xe9fcf0e0
  409358:	lahf   
  409359:	neg    ebx
  40935b:	add    ebp,DWORD PTR [ecx+ebx*1+0x1cb72d51]
  409362:	jnp    0x4092f6
  409364:	fs jp  0x4093ba
  409367:	mov    ecx,0x9d2ce4f9
  40936c:	adc    eax,0xe1682eab
  409371:	popf   
  409372:	and    BYTE PTR [ecx+0x1d],bh
  409375:	fistp  WORD PTR [edi]
  409377:	or     edi,0xffffff80
  40937a:	jle    0x4093f0
  40937c:	sub    edi,DWORD PTR [edi+0x71]
  40937f:	scas   eax,DWORD PTR es:[edi]
  409380:	mov    cs,esp
  409382:	(bad)  
  409383:	cmc    
  409384:	jecxz  0x409332
  409386:	aad    0x4d
  409388:	sti    
  409389:	sub    eax,0x5a038399
  40938e:	shl    DWORD PTR [edx],1
  409390:	fild   DWORD PTR [ecx]
  409392:	mov    al,ds:0xdabb3140
  409397:	mov    ebp,0x8b6e2f
  40939c:	(bad)  
  40939d:	cmp    al,BYTE PTR [ebx-0x10]
  4093a0:	jecxz  0x409397
  4093a2:	addr16 push ecx
  4093a4:	jae    0x40940b
  4093a6:	adc    BYTE PTR [esi+eax*2-0x60106e93],0x12
  4093ae:	sub    BYTE PTR [edi],bh
  4093b0:	out    dx,al
  4093b1:	les    esi,FWORD PTR [edx+0xc]
  4093b4:	imul   ebx,DWORD PTR [edi],0x63
  4093b7:	xor    eax,0xf71e7c57
  4093bc:	pushf  
  4093bd:	add    dh,cl
  4093bf:	and    al,0xcb
  4093c1:	test   al,0x55
  4093c3:	mov    bh,0x1d
  4093c5:	jns    0x4093d8
  4093c7:	cdq    
  4093c8:	jecxz  0x40934b
  4093ca:	push   ebx
  4093cb:	les    ebp,FWORD PTR [edx+0x7006582]
  4093d1:	retf   0xb373
  4093d4:	ret    0xc631
  4093d7:	inc    ecx
  4093d8:	loope  0x4093d3
  4093da:	jbe    0x4093de
  4093dc:	mov    cl,0xda
  4093de:	sti    
  4093df:	mov    ss,WORD PTR [esi]
  4093e1:	mov    ch,0xc8
  4093e3:	push   edx
  4093e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093e5:	adc    DWORD PTR [edi+0x6a2d1b57],esi
  4093eb:	inc    ecx
  4093ec:	xchg   ebp,eax
  4093ed:	xor    DWORD PTR [edx],eax
  4093ef:	lahf   
  4093f0:	fst    QWORD PTR [ecx+ecx*1-0x5b]
  4093f4:	cmp    al,0x3
  4093f6:	push   ebp
  4093f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f8:	lahf   
  4093f9:	cmc    
  4093fa:	retf   0xb9e
  4093fd:	(bad)  
  4093fe:	adc    al,0xe6
  409400:	xor    ecx,DWORD PTR [eax+0x34]
  409403:	enter  0xd49,0xb6
  409407:	inc    esp
  409408:	xchg   esi,eax
  409409:	es xchg esp,eax
  40940b:	popf   
  40940c:	or     ecx,DWORD PTR [esi]
  40940e:	out    0xcf,al
  409410:	push   es
  409411:	nop
  409412:	add    eax,0x861c009e
  409417:	pop    es
  409418:	cwde   
  409419:	sbb    al,0xd
  40941b:	rol    BYTE PTR [edi-0x6],1
  40941e:	adc    DWORD PTR [edx],esp
  409420:	add    ah,BYTE PTR [esi]
  409422:	cmp    al,BYTE PTR [eax-0x6f9174cf]
  409428:	push   eax
  409429:	(bad)  
  40942a:	xor    BYTE PTR [ebx+esi*8],dl
  40942d:	div    bl
  40942f:	and    al,0x52
  409431:	into   
  409432:	fucomp st(7)
  409434:	xchg   ebp,eax
  409435:	sbb    al,0xdb
  409437:	mov    eax,0xdca844b7
  40943c:	repz fadd DWORD PTR [esi+edi*4+0x59efe429]
  409444:	push   0xa9798444
  409449:	xor    dl,dl
  40944b:	push   edi
  40944c:	repz jge 0x409456
  40944f:	push   cs
  409450:	addr16 and eax,0xd3c42139
  409456:	push   ebp
  409457:	xor    cl,dl
  409459:	jecxz  0x409443
  40945b:	sahf   
  40945c:	int3   
  40945d:	dec    esp
  40945e:	xchg   edx,eax
  40945f:	test   WORD PTR [ebp-0x28],cx
  409463:	jl     0x4094d6
  409465:	push   eax
  409466:	fidivr DWORD PTR [edi+0x39]
  409469:	pop    eax
  40946a:	test   eax,0xd96f0dd0
  40946f:	xor    esi,DWORD PTR [edi+esi*8-0x7986fe38]
  409476:	or     eax,0xdc2ec19c
  40947b:	add    esp,ebx
  40947d:	imul   esp,DWORD PTR [ecx-0x77],0x7a
  409481:	add    al,0xd0
  409483:	ret    
  409484:	mov    edx,0xbb771b31
  409489:	bound  eax,QWORD PTR ds:0x39bf7d24
  40948f:	pop    ebx
  409490:	and    bl,BYTE PTR [eax]
  409492:	arpl   si,si
  409494:	jnp    0x409427
  409496:	cmp    cl,BYTE PTR [edi]
  409498:	fdivp  st(2),st
  40949a:	xchg   edx,eax
  40949b:	out    0x51,al
  40949d:	fwait
  40949e:	jne    0x409502
  4094a0:	in     al,0x78
  4094a2:	call   0x330a:0x2b0f34ed
  4094a9:	adc    al,0x1e
  4094ab:	aam    0x31
  4094ad:	or     eax,0x3f480f24
  4094b2:	inc    ebx
  4094b3:	repnz mov ah,0xe8
  4094b6:	xchg   edx,eax
  4094b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094b9:	test   bh,ah
  4094bb:	pop    ecx
  4094bc:	dec    eax
  4094bd:	sub    eax,0xb088981c
  4094c2:	loopne 0x409505
  4094c4:	mov    ebx,0xaf1af214
  4094c9:	mov    ds:0x270aa33e,al
  4094ce:	sub    ah,BYTE PTR [eax]
  4094d0:	pop    eax
  4094d1:	imul   edx,DWORD PTR [esi],0xffffff93
  4094d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094d5:	ins    BYTE PTR es:[edi],dx
  4094d6:	fldenv [edi-0x60cee776]
  4094dc:	std    
  4094dd:	in     al,dx
  4094de:	mov    cl,0xe5
  4094e0:	nop
  4094e1:	mov    ds:0x3ec6e118,eax
  4094e6:	sub    bh,dl
  4094e8:	or     esp,DWORD PTR [ebp+0x2f540e0f]
  4094ee:	sbb    ebp,DWORD PTR [ebx-0x17]
  4094f1:	test   DWORD PTR [edx-0x32ea4ab4],esp
  4094f7:	imul   edx,esi,0xffffff8b
  4094fa:	mov    ?,eax
  4094fc:	jl     0x409550
  4094fe:	jb     0x40949b
  409500:	jo     0x4094ef
  409502:	mov    esp,DWORD PTR [edi+0x37]
  409505:	(bad)  [ebp+ebx*4-0x31400773]
  40950c:	jae    0x40950c
  40950e:	stos   DWORD PTR es:[edi],eax
  40950f:	mov    ds,WORD PTR [ebp+0x2fe6cd8b]
  409515:	out    dx,eax
  409516:	sub    al,0x21
  409518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409519:	aad    0xfc
  40951b:	or     ch,ch
  40951d:	(bad)  
  40951e:	jmp    0x40959c
  409520:	xor    edi,ebx
  409522:	pop    ebp
  409523:	rcl    BYTE PTR [esi+0x5c],0x84
  409527:	das    
  409528:	or     BYTE PTR [ebp+0x3f],0x2b
  40952c:	(bad)  
  40952d:	(bad)  
  40952e:	retf   
  40952f:	les    ebx,FWORD PTR [edx]
  409531:	lock jno 0x4094fd
  409534:	mov    ds,WORD PTR ds:0x232e2d7
  40953a:	inc    edi
  40953b:	clc    
  40953c:	lds    eax,FWORD PTR [ecx-0xafc3a5b]
  409542:	mov    WORD PTR [eax+0x81ea6fd],fs
  409548:	mov    ch,0xda
  40954a:	stos   BYTE PTR es:[edi],al
  40954b:	das    
  40954c:	sahf   
  40954d:	repz call 0x2b9b4bff
  409553:	xor    BYTE PTR [ebx+0x7f],bh
  409556:	pop    ebx
  409557:	sub    al,0x76
  409559:	fisttp DWORD PTR [eax]
  40955b:	shl    DWORD PTR [ecx],1
  40955d:	(bad)  
  40955e:	adc    DWORD PTR [edx+0x83ea14e],esp
  409564:	push   edi
  409565:	jbe    0x4095da
  409567:	cmp    eax,0xc8318907
  40956c:	mov    ds:0xba79343b,al
  409571:	out    dx,eax
  409572:	mov    eax,ds:0xdf9dace5
  409577:	mov    ?,edi
  409579:	pop    edi
  40957a:	test   eax,0x4bbeb393
  40957f:	call   0x6604f545
  409584:	js     0x40957a
  409586:	xchg   edi,eax
  409587:	and    dl,BYTE PTR [ecx]
  409589:	scas   al,BYTE PTR es:[edi]
  40958a:	ds jb  0x4095c1
  40958d:	xlat   BYTE PTR ds:[ebx]
  40958e:	pop    ss
  40958f:	xor    DWORD PTR [ecx-0x74],ecx
  409592:	jae    0x40960e
  409594:	(bad)  
  409595:	cli    
  409596:	pop    edx
  409597:	shl    DWORD PTR [esi-0x5d],cl
  40959a:	(bad)
  40959d:	(bad)  
  40959e:	fld    DWORD PTR [edi-0x57]
  4095a1:	stos   BYTE PTR es:[edi],al
  4095a2:	pop    eax
  4095a3:	cmp    ah,BYTE PTR [edi+0xcb674ce]
  4095a9:	hlt    
  4095aa:	jae    0x409538
  4095ac:	dec    DWORD PTR [edx-0x4e57eaf1]
  4095b2:	sub    DWORD PTR [ecx-0x4b],eax
  4095b5:	in     al,0xfe
  4095b7:	nop
  4095b8:	mov    ebp,0x117fdedc
  4095bd:	add    eax,0x129161dc
  4095c2:	jno    0x409582
  4095c4:	cmp    ebx,ecx
  4095c6:	das    
  4095c7:	sbb    ch,BYTE PTR [ebx+ebx*4-0x42]
  4095cb:	pop    esp
  4095cc:	pop    DWORD PTR [esi-0x62]
  4095cf:	mov    ch,0x97
  4095d1:	int    0xa5
  4095d3:	test   al,0xcd
  4095d5:	hlt    
  4095d6:	sbb    ebp,DWORD PTR [edx]
  4095d8:	adc    DWORD PTR [ebx-0x22929835],eax
  4095de:	hlt    
  4095df:	outs   dx,BYTE PTR ds:[esi]
  4095e0:	leave  
  4095e1:	(bad)  
  4095e2:	lea    edx,[edx+ebx*8-0x4b98b65b]
  4095e9:	mov    WORD PTR [eax],ds
  4095eb:	push   0xffffffe9
  4095ed:	mov    dl,0x5b
  4095ef:	fadd   st(3),st
  4095f1:	push   esi
  4095f2:	mov    al,0x99
  4095f4:	mov    dh,0x82
  4095f6:	(bad)  
  4095f7:	daa    
  4095f8:	inc    edi
  4095f9:	(bad)  
  4095fa:	cs js  0x409671
  4095fd:	dec    esp
  4095fe:	dec    edx
  4095ff:	adc    ebp,DWORD PTR ds:0x2c928117
  409605:	mov    BYTE PTR [edi+0x7ef94de7],ch
  40960b:	push   0xffffffae
  40960d:	push   cs
  40960e:	pop    es
  40960f:	lea    esi,[esi]
  409611:	test   eax,0x7382999
  409616:	add    eax,0x221c4cb6
  40961b:	(bad)  
  40961c:	mov    es,WORD PTR [edi-0x4e]
  40961f:	mov    edx,0x8eae0645
  409624:	fstp   QWORD PTR [ecx-0x6788ed6f]
  40962a:	imul   ecx,eax,0x3b620bea
  409630:	lods   eax,DWORD PTR ds:[esi]
  409631:	fcom   QWORD PTR [esi+0x69]
  409634:	stos   DWORD PTR es:[edi],eax
  409635:	push   cs
  409636:	push   0xd57d6a7c
  40963b:	xor    dh,cl
  40963d:	mov    ah,0x7
  40963f:	call   0xb42fba07
  409644:	push   ebp
  409645:	lods   eax,DWORD PTR ds:[esi]
  409646:	xchg   ebx,eax
  409647:	imul   ebx,DWORD PTR [ebp-0x2cc6613],0xffffffbe
  40964e:	xchg   BYTE PTR [edx-0x6559618],bh
  409654:	and    eax,0xc2b9ccf9
  409659:	es rol ch,0x41
  40965d:	jmp    0xbf28:0x8c9f66fb
  409664:	add    esp,ebp
  409666:	mov    ecx,0x3f1333e2
  40966b:	xor    BYTE PTR [ecx],ah
  40966d:	shl    DWORD PTR [esi+ebx*4],0xfe
  409671:	or     ebx,DWORD PTR [esi]
  409673:	cmc    
  409674:	jns    0x4095f7
  409676:	jae    0x4096c5
  409678:	daa    
  409679:	aad    0xbc
  40967b:	cmp    ah,BYTE PTR [ebx+0x50]
  40967e:	scas   al,BYTE PTR es:[edi]
  40967f:	and    ecx,esp
  409681:	mov    bl,0xa4
  409683:	sbb    edi,eax
  409685:	ficom  DWORD PTR [ecx+0x1e]
  409688:	mov    dh,0xbf
  40968a:	and    ecx,DWORD PTR [esi-0x44]
  40968d:	lock ror BYTE PTR [ebx],cl
  409690:	mov    dh,0xa8
  409692:	xor    ebp,esp
  409694:	sbb    DWORD PTR [edi],eax
  409696:	fst    DWORD PTR [esi]
  409698:	mov    eax,0xdb6bc029
  40969d:	inc    eax
  40969e:	cdq    
  40969f:	nop
  4096a0:	fcomi  st,st(3)
  4096a2:	or     BYTE PTR [edx-0x4dd07474],0x8
  4096a9:	push   0x646731c2
  4096ae:	shr    DWORD PTR [edx],1
  4096b0:	loope  0x409673
  4096b2:	mov    ds:0x40d0e7cb,al
  4096b7:	mov    esi,0x873fbb6a
  4096bc:	popa   
  4096bd:	adc    al,bh
  4096bf:	dec    ebp
  4096c0:	call   0x7855:0xdbac6a71
  4096c7:	cmp    DWORD PTR es:[ebx+0x7b],ecx
  4096cb:	arpl   WORD PTR [ecx+0x70],sp
  4096ce:	sub    bh,BYTE PTR [ebx+0x43]
  4096d1:	arpl   WORD PTR [ebp-0x1b],dx
  4096d4:	push   ds
  4096d5:	cmp    al,0x40
  4096d7:	inc    edi
  4096d8:	mov    ch,0x4e
  4096da:	and    dh,BYTE PTR [ebp+0x28]
  4096dd:	rcl    DWORD PTR [ebp+0x2ecbefb1],1
  4096e3:	fwait
  4096e4:	jmp    0xfe21605c
  4096e9:	inc    eax
  4096ea:	mov    bl,0xf
  4096ec:	push   eax
  4096ed:	sub    dl,BYTE PTR [ebx]
  4096ef:	push   edi
  4096f0:	inc    ebx
  4096f1:	fadd   QWORD PTR ds:[ecx-0x2c14f7c4]
  4096f8:	out    0x2d,eax
  4096fa:	(bad)  
  4096fb:	addr16 xchg ebx,eax
  4096fd:	mov    cl,0xb4
  4096ff:	push   ebp
  409700:	xchg   ebx,eax
  409701:	pop    ds
  409702:	push   eax
  409703:	mov    ds:0x3b2ff101,al
  409708:	fbstp  TBYTE PTR [ecx+0x27215b53]
  40970e:	xor    edx,DWORD PTR [edi-0x4e]
  409711:	inc    edx
  409712:	cmp    eax,0x851d0362
  409717:	pusha  
  409718:	aas    
  409719:	sbb    edx,DWORD PTR [ebp+0x40ba4038]
  40971f:	push   ebx
  409720:	push   ds
  409721:	repz push ebx
  409723:	test   DWORD PTR [edx],ebx
  409725:	outs   dx,DWORD PTR ds:[esi]
  409726:	xor    ebx,DWORD PTR [eax+ebx*8+0x1e]
  40972a:	push   esi
  40972b:	jmp    0xeaad:0xc12302c2
  409732:	or     al,0xdf
  409734:	push   ecx
  409735:	xchg   ebp,eax
  409736:	add    BYTE PTR [edx-0x3d652a03],dh
  40973c:	xchg   DWORD PTR [edx+0x4],edi
  40973f:	fisttp DWORD PTR [si-0x45d8]
  409744:	fwait
  409745:	out    0xa1,eax
  409747:	lods   eax,DWORD PTR ds:[esi]
  409748:	stos   DWORD PTR es:[edi],eax
  409749:	jnp    0x409751
  40974b:	fmul   QWORD PTR [ebx-0x7a]
  40974e:	call   0xb1931f35
  409753:	xor    DWORD PTR [edx-0x394586de],0x4d
  40975a:	(bad)  
  40975b:	aaa    
  40975c:	into   
  40975d:	addr16 shr al,1
  409760:	ins    BYTE PTR es:[edi],dx
  409761:	push   edx
  409762:	jl     0x40976a
  409764:	or     eax,0xddbc6f0e
  409769:	xor    ah,BYTE PTR [edx-0x4f]
  40976c:	aad    0x47
  40976e:	add    dh,BYTE PTR [esi]
  409770:	mov    ch,al
  409772:	div    ecx
  409774:	xchg   ebx,eax
  409775:	(bad)  
  409776:	out    0x87,al
  409778:	mov    ecx,DWORD PTR [ebx]
  40977a:	dec    eax
  40977b:	mov    dh,0x10
  40977d:	fcomp  DWORD PTR [ebp-0x80]
  409780:	outs   dx,DWORD PTR ds:[esi]
  409781:	pusha  
  409782:	xor    eax,0xf4c0779d
  409787:	js     0x409768
  409789:	jge    0x4097ca
  40978b:	jb     0x409784
  40978d:	pop    ebp
  40978e:	push   esp
  40978f:	ds jge 0x40974a
  409792:	cmp    bl,BYTE PTR [edx-0x5e]
  409795:	lock cmp edx,esp
  409798:	ja     0x409810
  40979a:	dec    edx
  40979b:	sbb    esi,DWORD PTR [ebp+0x38]
  40979e:	mov    ebp,0x3b901192
  4097a3:	repz fdiv DWORD PTR [edi-0x11603a6d]
  4097aa:	mov    eax,ds:0x2d299f7e
  4097af:	push   0xf488e9e9
  4097b4:	fistp  WORD PTR [esi-0x33eb94ae]
  4097ba:	mov    ds:0x6548eaa8,al
  4097bf:	inc    ebp
  4097c0:	sbb    DWORD PTR [esi+0x72e81df2],esi
  4097c6:	sub    esp,eax
  4097c8:	adc    eax,DWORD PTR [edx]
  4097ca:	jbe    0x4097a8
  4097cc:	xchg   edx,eax
  4097cd:	ja     0x40983f
  4097cf:	xor    DWORD PTR [ebx-0x5f5bbe6f],esi
  4097d5:	jl     0x4097ad
  4097d7:	adc    BYTE PTR [ebx-0x7c],ch
  4097da:	int3   
  4097db:	push   ds
  4097dc:	mov    cl,0xea
  4097de:	pop    ebp
  4097df:	in     al,0x7a
  4097e1:	push   ebx
  4097e2:	adc    ah,dh
  4097e4:	jmp    DWORD PTR [ebx-0x4c6a39b5]
  4097ea:	neg    BYTE PTR [edi-0x49]
  4097ed:	popf   
  4097ee:	jp     0x4097c7
  4097f0:	pop    esp
  4097f1:	aaa    
  4097f2:	ds out dx,eax
  4097f4:	iret   
  4097f5:	push   esi
  4097f6:	and    eax,0xbbf609dd
  4097fb:	ret    0x61ab
  4097fe:	in     al,0x10
  409800:	loop   0x409859
  409802:	mov    eax,ds:0xf1392952
  409807:	jno    0x40979d
  409809:	mov    esi,ss
  40980b:	inc    ebp
  40980c:	jle    0x409874
  40980e:	adc    al,0xbd
  409810:	in     eax,0xf4
  409812:	in     al,dx
  409813:	push   cs
  409814:	push   esi
  409815:	xor    BYTE PTR [ebx-0x3d],bl
  409818:	or     al,0x48
  40981a:	sub    eax,0xae4081a4
  40981f:	xchg   DWORD PTR [edx],edi
  409821:	xor    BYTE PTR [eax],al
  409823:	pop    edi
  409824:	sbb    ch,bl
  409826:	inc    eax
  409827:	shl    DWORD PTR ds:0x9754183e,cl
  40982d:	xchg   esi,ebp
  40982f:	pusha  
  409830:	aad    0xbf
  409832:	bound  edi,QWORD PTR [ecx]
  409834:	xor    edx,DWORD PTR [esi+0x33477f88]
  40983a:	mov    esi,0x8bb83efd
  40983f:	jo     0x4097f2
  409841:	mov    cs,ecx
  409843:	pop    ds
  409844:	pop    esi
  409845:	pusha  
  409846:	inc    esi
  409847:	aad    0x4a
  409849:	das    
  40984a:	cmp    ebp,0xef49b98
  409850:	leave  
  409851:	repz xchg esp,eax
  409853:	jnp    0x1dae0d14
  409859:	mov    esp,0x6e3589e2
  40985e:	and    DWORD PTR [eax+0x51],ebx
  409861:	mov    ch,0x45
  409863:	fwait
  409864:	and    ebx,DWORD PTR [ebp+0x49]
  409867:	push   0x77f8ee96
  40986c:	sbb    al,0x49
  40986e:	jecxz  0x409899
  409870:	and    bh,bh
  409872:	mov    ?,WORD PTR [eax+0x3ca83a71]
  409878:	sti    
  409879:	ins    BYTE PTR es:[edi],dx
  40987a:	adc    eax,0xa58e362e
  40987f:	shr    esp,1
  409881:	std    
  409882:	push   ss
  409883:	ret    0xdbe6
  409886:	pop    edx
  409887:	aam    0xad
  409889:	(bad)  
  40988a:	xor    DWORD PTR [edi],ebp
  40988c:	enter  0xe1eb,0x57
  409890:	inc    edx
  409891:	push   ds
  409892:	push   ecx
  409893:	aas    
  409894:	jns    0x409881
  409896:	or     bl,BYTE PTR [ebp-0x64]
  409899:	xchg   ecx,eax
  40989a:	dec    ebp
  40989b:	ins    DWORD PTR es:[edi],dx
  40989c:	(bad)  
  40989d:	mov    ds:0xbd4e04cb,ax
  4098a3:	xor    eax,DWORD PTR [edx]
  4098a5:	(bad)  
  4098a6:	jmp    0xaf99:0x59ae5993
  4098ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098ae:	add    bl,BYTE PTR [edx+eiz*1+0xcb36998]
  4098b5:	stos   BYTE PTR es:[edi],al
  4098b6:	mov    dl,0x8b
  4098b9:	and    ah,BYTE PTR [esi+0x6c259006]
  4098bf:	mov    ds:0x489b9fe4,al
  4098c4:	xlat   BYTE PTR ds:[ebx]
  4098c5:	push   ecx
  4098c6:	push   edx
  4098c7:	int3   
  4098c8:	or     al,0xa1
  4098ca:	popf   
  4098cb:	imul   ebp,DWORD PTR [eax],0xdfd9f8dd
  4098d1:	sbb    DWORD PTR [edi-0x25758644],ebp
  4098d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098d8:	sub    DWORD PTR [ebx+0x1b],0xffffffe6
  4098dc:	or     cl,BYTE PTR [esi]
  4098de:	add    al,0x4c
  4098e0:	dec    esi
  4098e1:	inc    ebx
  4098e2:	mov    dl,0x88
  4098e4:	mov    al,ds:0xe417d36f
  4098e9:	jg     0x40993d
  4098eb:	cld    
  4098ec:	jl     0x40987c
  4098ee:	retf   0xac53
  4098f1:	sbb    cl,BYTE PTR [eax-0x7d]
  4098f4:	call   DWORD PTR [esi+0x53]
  4098f7:	and    al,0xef
  4098f9:	cmp    ecx,DWORD PTR ds:0x71806031
  4098ff:	repz test eax,0xd47d82b6
  409905:	dec    eax
  409906:	sub    al,0x15
  409908:	pop    ecx
  409909:	xchg   esi,eax
  40990a:	xor    cl,BYTE PTR [ebx]
  40990c:	push   cs
  40990d:	sbb    edi,0x27765a01
  409913:	jb     0x4098c4
  409915:	or     al,0xa
  409917:	fdiv   DWORD PTR [ebp+0x200fc6aa]
  40991d:	cld    
  40991e:	and    eax,0x72425efc
  409923:	leave  
  409924:	cmp    DWORD PTR [esi-0x2d],0x62
  409928:	mov    ecx,DWORD PTR [esi-0x44582bce]
  40992e:	cmp    eax,0x95fad64d
  409933:	dec    esi
  409934:	into   
  409935:	pop    edx
  409936:	rcr    edi,0x14
  409939:	fisubr DWORD PTR fs:[ecx-0x746ac32c]
  409940:	lahf   
  409941:	imul   edx,DWORD PTR [edi-0x304c1bda],0x2e
  409948:	push   eax
  409949:	fnstcw WORD PTR [edx]
  40994b:	adc    BYTE PTR [esp+eiz*4-0x7559df47],ah
  409952:	xchg   edi,eax
  409953:	add    DWORD PTR [ebx+eiz*8+0x10],eax
  409957:	dec    edi
  409958:	aam    0xb
  40995a:	inc    eax
  40995b:	enter  0x6834,0x95
  40995f:	imul   edx,ebp,0x23db4ef2
  409965:	ja     0x409927
  409967:	pop    edi
  409968:	fiadd  DWORD PTR [ebp+0x47382c9b]
  40996e:	xor    edi,DWORD PTR [edx+0x16]
  409971:	xor    dh,0xb4
  409974:	repz mov ebx,0x7a9b5203
  40997a:	in     al,dx
  40997b:	mov    bh,0x2
  40997d:	cdq    
  40997e:	popf   
  40997f:	adc    BYTE PTR [edi],bh
  409981:	lods   al,BYTE PTR ds:[esi]
  409982:	cwde   
  409983:	mov    eax,ds:0xa59fe4fd
  409989:	or     bh,ah
  40998b:	xchg   BYTE PTR ds:0xbe3483bb,cl
  409991:	lods   al,BYTE PTR ds:[esi]
  409992:	ror    dl,0x3c
  409995:	add    DWORD PTR [ecx],0x3f7b142d
  40999b:	sti    
  40999c:	leave  
  40999d:	xor    DWORD PTR [eax],0x65
  4099a0:	dec    ebx
  4099a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099a2:	dec    DWORD PTR ds:0xad9a140
  4099a8:	test   BYTE PTR [ebx-0x58],ah
  4099ab:	mov    ch,0xd8
  4099ad:	mov    ds:0x2cb5dc4c,eax
  4099b2:	dec    esp
  4099b3:	in     eax,dx
  4099b4:	jp     0x40993a
  4099b6:	push   esp
  4099b7:	push   cs
  4099b8:	add    eax,0xac4a41f
  4099bd:	sub    BYTE PTR [ebx],dl
  4099bf:	int3   
  4099c0:	or     ebx,esp
  4099c2:	add    eax,ebx
  4099c4:	lea    esp,[esi]
  4099c6:	and    esi,ecx
  4099c8:	loopne 0x4099e4
  4099ca:	and    BYTE PTR ds:0xba643ea7,ch
  4099d0:	jmp    0x88b7:0x6cb61fe5
  4099d7:	stos   DWORD PTR es:[edi],eax
  4099d8:	test   al,0x90
  4099da:	sub    al,BYTE PTR [ecx-0x7c213ea9]
  4099e0:	push   ebx
  4099e1:	pop    esi
  4099e2:	(bad)  
  4099e3:	push   edx
  4099e4:	xchg   dl,cl
  4099e6:	cli    
  4099e7:	imul   edx,DWORD PTR ds:0x6e623059,0xf17f6fd2
  4099f1:	ss cli 
  4099f3:	jne    0x409a4a
  4099f5:	or     BYTE PTR [ebx+0x525e540d],bl
  4099fb:	cmp    al,0xc0
  4099fd:	sub    BYTE PTR [ebx-0x61],bh
  409a00:	pop    esi
  409a01:	(bad)  
  409a02:	jg     0x409991
  409a04:	arpl   WORD PTR [eax-0x5fe40cc],cx
  409a0a:	sar    BYTE PTR [edi-0x1e],1
  409a0d:	aam    0x4c
  409a0f:	xchg   cx,ax
  409a11:	pop    ecx
  409a12:	xchg   DWORD PTR [ecx+0x71],edi
  409a15:	cmp    eax,0xc44b9a5f
  409a1a:	push   edi
  409a1b:	jle    0x409a94
  409a1d:	push   esp
  409a1e:	sbb    dl,BYTE PTR [esp+edi*2-0x32d1834f]
  409a25:	adc    al,0x16
  409a27:	imul   ebx,DWORD PTR [eax-0x254b56ea],0xee12243e
  409a31:	ds pop eax
  409a33:	sbb    ebp,0xffffff85
  409a36:	into   
  409a37:	repz sub ah,ah
  409a3a:	cmp    eax,0x5125a554
  409a3f:	xor    DWORD PTR [edx+0x28bdd2d6],ecx
  409a45:	add    BYTE PTR [esi],al
  409a47:	clc    
  409a48:	pusha  
  409a49:	and    ecx,DWORD PTR [esi+esi*4]
  409a4c:	push   ss
  409a4d:	int    0xce
  409a4f:	push   ss
  409a50:	or     BYTE PTR [ebx+0x930e301],0x98
  409a57:	inc    esi
  409a58:	mov    ecx,DWORD PTR [eax]
  409a5a:	mov    eax,ds:0x26a0d9d7
  409a5f:	lea    ebp,[edx-0xfa1d966]
  409a65:	nop
  409a66:	or     al,0x41
  409a68:	mov    bh,0xab
  409a6a:	ret    0x472
  409a6d:	dec    edi
  409a6e:	popf   
  409a6f:	dec    edx
  409a70:	jno    0x409a71
  409a72:	xor    BYTE PTR [ecx-0x336511b8],ch
  409a78:	mov    ah,0xb8
  409a7a:	adc    DWORD PTR [ebx+0x502b4005],esi
  409a80:	xchg   edx,eax
  409a81:	fdiv   QWORD PTR [ecx]
  409a83:	cmp    al,0xa9
  409a85:	enter  0xa8ef,0x1e
  409a89:	fcomp  QWORD PTR [edi+edi*4+0x1f1049b2]
  409a90:	mov    DWORD PTR [edx],esp
  409a92:	enter  0x5d1b,0xa7
  409a96:	fs (bad) 
  409a99:	imul   ebp,DWORD PTR [eax+0x4a],0x73
  409a9d:	adc    al,0xab
  409a9f:	inc    ebp
  409aa0:	sub    al,BYTE PTR [ebp+0x241dcd23]
  409aa6:	xor    eax,0x15a7ed4
  409aab:	push   esi
  409aac:	or     ch,BYTE PTR gs:[ecx+ebp*1-0x2]
  409ab1:	in     al,0xa4
  409ab3:	add    esi,esi
  409ab5:	push   edx
  409ab6:	pop    es
  409ab7:	xor    BYTE PTR [esi+0x65],0xd9
  409abb:	add    esp,edx
  409abd:	xlat   BYTE PTR ds:[ebx]
  409abe:	sar    BYTE PTR [esi+0x3],cl
  409ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac2:	fcmove st,st(6)
  409ac4:	inc    ebx
  409ac5:	cwde   
  409ac6:	bound  ebp,QWORD PTR [ebx+0x9a6a736]
  409acc:	es jae 0x409aea
  409acf:	pop    ds
  409ad0:	push   es
  409ad1:	inc    ebx
  409ad2:	(bad)  
  409ad3:	pop    edx
  409ad4:	in     al,dx
  409ad5:	cs (bad) 
  409ad8:	fnstsw WORD PTR [eax+ebp*8]
  409adb:	in     al,dx
  409adc:	in     al,dx
  409add:	dec    ecx
  409ade:	inc    ebx
  409adf:	push   edi
  409ae0:	sub    al,BYTE PTR [edx]
  409ae2:	push   edi
  409ae3:	push   ebp
  409ae4:	mov    esi,0x61c1820a
  409ae9:	inc    ebp
  409aea:	pusha  
  409aeb:	adc    ebx,DWORD PTR [edx+0x3d3be062]
  409af1:	out    dx,eax
  409af2:	pop    edx
  409af3:	or     DWORD PTR [esi+0xd],ebp
  409af6:	fsubp  st(5),st
  409af8:	fsubr  QWORD PTR [ecx-0x6890c97c]
  409afe:	sub    ebp,DWORD PTR [edx]
  409b00:	inc    esp
  409b01:	cmp    cl,BYTE PTR [edi+ebx*2+0x38dfd2b9]
  409b08:	mov    edi,0x99c32f67
  409b0d:	sbb    DWORD PTR [edx],0x6327e116
  409b13:	sub    al,BYTE PTR ss:[esi]
  409b16:	mov    eax,ds:0x64a38989
  409b1b:	int    0x9c
  409b1d:	ins    DWORD PTR es:[edi],dx
  409b1e:	in     eax,dx
  409b1f:	pop    esp
  409b20:	pusha  
  409b21:	loop   0x409b3a
  409b23:	xor    al,cl
  409b25:	(bad)  
  409b26:	ins    BYTE PTR es:[edi],dx
  409b27:	push   esi
  409b28:	pop    edi
  409b29:	and    esi,edx
  409b2b:	xor    ebp,DWORD PTR [edi-0x65fa4ec6]
  409b31:	mov    ah,0x10
  409b33:	call   0xcd117150
  409b38:	ja     0x409b17
  409b3a:	fild   QWORD PTR [esi-0x5b]
  409b3d:	xchg   ebp,eax
  409b3e:	mov    edx,0xa33a1fca
  409b43:	int3   
  409b44:	jnp    0x409b02
  409b46:	les    edi,FWORD PTR [ecx+eiz*2]
  409b49:	xor    al,0x4d
  409b4b:	stc    
  409b4c:	data16 sbb bh,ah
  409b4f:	retf   0xb381
  409b52:	(bad)  
  409b54:	iret   
  409b55:	xor    bh,BYTE PTR [esi]
  409b57:	pop    edx
  409b58:	xor    eax,0xcdeed36
  409b5d:	add    esi,DWORD PTR [ebx]
  409b5f:	xchg   ecx,eax
  409b60:	rcr    BYTE PTR [esi+edi*8-0x23b2fee5],1
  409b67:	addr16 out dx,eax
  409b69:	mov    eax,0xc16265cc
  409b6e:	pop    ebp
  409b6f:	mov    esi,0x1bc1a219
  409b74:	mov    bh,BYTE PTR [ecx]
  409b76:	arpl   WORD PTR [ebx],ax
  409b78:	mov    BYTE PTR [ebp+esi*1-0x44],ch
  409b7c:	xchg   esi,eax
  409b7d:	ss mov ebp,0xcc48bcb9
  409b83:	sub    ecx,DWORD PTR [eax-0x26]
  409b86:	or     eax,DWORD PTR [edi-0x2143dac4]
  409b8c:	sub    bh,al
  409b8e:	or     bl,ch
  409b90:	sar    DWORD PTR [bx-0x69],0x1e
  409b95:	ret    0x3e7e
  409b98:	pop    edi
  409b99:	std    
  409b9a:	fcmovnu st,st(1)
  409b9c:	dec    esp
  409b9d:	mov    edx,0xea7f249b
  409ba2:	pop    ebp
  409ba3:	imul   ebp,ecx,0x96ed2846
  409ba9:	or     al,0x25
  409bab:	xchg   edx,eax
  409bac:	jne    0x409b61
  409bae:	in     al,0xe4
  409bb0:	mov    edi,0xc57118d7
  409bb5:	dec    esp
  409bb6:	push   esi
  409bb7:	ins    BYTE PTR es:[edi],dx
  409bb8:	cmp    eax,0xc3655931
  409bbd:	(bad)  
  409bbe:	std    
  409bbf:	xor    al,0xe1
  409bc1:	xchg   edi,eax
  409bc2:	add    DWORD PTR [eax+edi*8-0x18],edx
  409bc6:	pop    eax
  409bc7:	jle    0x409c2e
  409bc9:	pushf  
  409bca:	dec    BYTE PTR [esi-0x20897a00]
  409bd0:	loop   0x409c10
  409bd2:	in     al,dx
  409bd3:	ret    0x514e
  409bd6:	icebp  
  409bd7:	add    eax,0x7dc49e92
  409bdc:	clc    
  409bdd:	retf   
  409bde:	xchg   esp,eax
  409bdf:	xchg   esi,eax
  409be0:	or     eax,ecx
  409be2:	(bad)  
  409be3:	push   ecx
  409be4:	test   DWORD PTR [ecx+0x331d05c6],ebp
  409bea:	mov    dl,0x95
  409bec:	or     al,0x82
  409bee:	pop    ds
  409bef:	mov    cl,0x68
  409bf1:	jl     0x409c36
  409bf3:	sti    
  409bf4:	call   FWORD PTR ds:0x45300232
  409bfa:	mov    ebx,0x10133959
  409bff:	out    dx,eax
  409c00:	loop   0x409c7e
  409c02:	adc    ebx,DWORD PTR [eax-0x9]
  409c05:	in     al,0x7f
  409c07:	mov    ebp,0xf80bf213
  409c0c:	xor    bl,BYTE PTR [ebp+0x55]
  409c0f:	jno    0x409c26
  409c11:	int    0x61
  409c13:	pop    ebp
  409c14:	adc    eax,0x2b1f5d50
  409c19:	xchg   BYTE PTR [esi-0x15207f23],dl
  409c1f:	int3   
  409c20:	sbb    eax,0xa49cfbf3
  409c25:	xchg   ebx,eax
  409c26:	dec    esp
  409c27:	pop    ecx
  409c28:	push   edx
  409c29:	fidivr WORD PTR [ebx+0x52b4fa3a]
  409c2f:	iret   
  409c30:	push   ds
  409c31:	jl     0x409c6c
  409c33:	lss    ebp,FWORD PTR [eax]
  409c36:	rol    ecx,cl
  409c38:	mov    dl,0x60
  409c3a:	nop
  409c3b:	std    
  409c3c:	and    BYTE PTR [esi],al
  409c3e:	and    esi,esi
  409c40:	hlt    
  409c41:	inc    eax
  409c42:	add    ah,al
  409c44:	shr    BYTE PTR [esi],1
  409c46:	mov    bh,0x20
  409c48:	sti    
  409c49:	push   esi
  409c4a:	mov    ds:0x5130ab1f,al
  409c4f:	repnz lods al,BYTE PTR ds:[esi]
  409c52:	add    esp,ebx
  409c54:	in     al,dx
  409c55:	das    
  409c56:	pop    es
  409c57:	mov    al,BYTE PTR [eax]
  409c59:	in     al,0xe3
  409c5b:	add    al,0x4c
  409c5d:	loop   0x409cc0
  409c5f:	inc    esi
  409c60:	sub    BYTE PTR [esi-0x53],cl
  409c63:	jb     0x409cc0
  409c65:	or     al,0x98
  409c67:	sub    DWORD PTR [esi-0x58431845],0xa0ae3f37
  409c71:	inc    eax
  409c72:	cdq    
  409c73:	mov    cs,edi
  409c75:	dec    ebp
  409c76:	lea    eax,[ecx+0x5b]
  409c79:	push   ecx
  409c7a:	(bad)  
  409c7b:	jbe    0x409cec
  409c7d:	dec    ebp
  409c7e:	fs sahf 
  409c80:	ficom  DWORD PTR [esi+0x55380932]
  409c86:	cmp    BYTE PTR [edx],ch
  409c88:	das    
  409c89:	mov    eax,ds:0xbebc09d0
  409c8e:	push   es
  409c8f:	sbb    eax,0x88a67f64
  409c94:	retf   0x700b
  409c97:	xor    DWORD PTR [ebx],ebx
  409c99:	pop    edi
  409c9a:	mov    ecx,0x7b7213b4
  409c9f:	add    ebx,edi
  409ca1:	cwde   
  409ca2:	dec    esp
  409ca3:	into   
  409ca4:	pushf  
  409ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca6:	int    0xab
  409ca8:	lea    eax,[esi+ebp*8-0x3f]
  409cac:	push   ebx
  409cad:	std    
  409cae:	sub    al,0x77
  409cb0:	mov    eax,ds:0xd1dd5b88
  409cb5:	sbb    cl,bh
  409cb7:	cmp    dh,BYTE PTR [ecx-0x77]
  409cba:	xor    ah,BYTE PTR [eax]
  409cbc:	push   edx
  409cbd:	retf   
  409cbe:	popf   
  409cbf:	ret    0x545
  409cc2:	in     eax,0x22
  409cc4:	push   edi
  409cc5:	dec    eax
  409cc6:	ds sbb esp,esi
  409cc9:	xchg   edi,eax
  409cca:	mov    WORD PTR [ecx+0x5f],?
  409ccd:	aaa    
  409cce:	and    DWORD PTR [ebx+0x553d15ec],ebx
  409cd4:	pop    es
  409cd5:	pop    esi
  409cd6:	pusha  
  409cd7:	es push ds
  409cd9:	dec    eax
  409cda:	inc    edx
  409cdb:	mov    ah,0xa6
  409cdd:	mov    DWORD PTR [ecx+esi*2+0x5036325c],eax
  409ce4:	ins    DWORD PTR es:[edi],dx
  409ce5:	mov    ah,0x2
  409ce7:	(bad)  
  409ce8:	pop    ss
  409ce9:	pusha  
  409cea:	popf   
  409ceb:	out    0xa7,al
  409ced:	pop    esp
  409cee:	cmp    DWORD PTR [ecx-0x5b3efead],ecx
  409cf4:	daa    
  409cf5:	mov    edx,0x42b4a39e
  409cfa:	and    DWORD PTR [ebx+0x18c8772b],0x19eb9b4c
  409d04:	outs   dx,BYTE PTR ds:[esi]
  409d05:	xchg   edi,eax
  409d06:	adc    al,0xe9
  409d08:	les    esi,FWORD PTR [ecx-0x20d622f9]
  409d0e:	pop    ss
  409d0f:	je     0x409ce9
  409d11:	in     al,dx
  409d12:	lea    ecx,[esi]
  409d14:	ret    0xc883
  409d17:	cwde   
  409d18:	add    al,0xe0
  409d1a:	cli    
  409d1b:	aas    
  409d1c:	inc    ebx
  409d1d:	fisub  WORD PTR [eax+0x4c2fc913]
  409d23:	xlat   BYTE PTR ds:[ebx]
  409d24:	retf   
  409d25:	imul   ebx,DWORD PTR [edx],0x42
  409d28:	(bad)  
  409d2a:	push   ebp
  409d2b:	sbb    ah,cl
  409d2d:	loop   0x409d89
  409d2f:	out    dx,al
  409d30:	outs   dx,BYTE PTR ds:[esi]
  409d31:	int    0x86
  409d33:	pop    ebx
  409d34:	sbb    BYTE PTR [ebp-0x24],bl
  409d37:	push   edx
  409d38:	hlt    
  409d39:	adc    ah,0x81
  409d3c:	pusha  
  409d3d:	or     ah,BYTE PTR [ebp-0x10cc544b]
  409d43:	je     0x409d88
  409d45:	enter  0x217b,0xa0
  409d49:	add    DWORD PTR [ebx+0x2981c34a],0xffffff9b
  409d50:	mov    ebp,0x4b7ea17c
  409d55:	xchg   ebp,eax
  409d56:	dec    esp
  409d57:	mov    ebp,0x9a3953e3
  409d5c:	int    0x5
  409d5e:	push   edi
  409d5f:	jp     0x409d35
  409d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d62:	test   DWORD PTR [edx],ecx
  409d64:	addr16 pop ds
  409d66:	sbb    DWORD PTR [ebx-0x5a],esp
  409d69:	fsubr  QWORD PTR [ebp-0xe3686d6]
  409d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d70:	lods   al,BYTE PTR ds:[esi]
  409d71:	mov    edx,DWORD PTR [edi-0x3d]
  409d74:	stc    
  409d75:	js     0x409dce
  409d77:	cmp    eax,0xa0c1a7bd
  409d7c:	xor    eax,0xce682af0
  409d81:	mov    esp,0xe24959b4
  409d86:	xchg   esi,eax
  409d87:	cmp    DWORD PTR [edi+0x436986df],edx
  409d8d:	not    DWORD PTR ds:0x69969168
  409d93:	(bad)  
  409d94:	sub    al,0xb
  409d96:	ret    
  409d97:	mov    eax,0x9558256a
  409d9c:	jbe    0x409de5
  409d9e:	jo     0x409e1f
  409da0:	clc    
  409da1:	pop    ss
  409da2:	outs   dx,BYTE PTR ds:[esi]
  409da3:	cmp    BYTE PTR [ebx],0xd3
  409da6:	icebp  
  409da7:	add    eax,0x90eb671d
  409dac:	and    eax,0x12388678
  409db1:	or     DWORD PTR [ebx],esp
  409db3:	jp     0x409e13
  409db5:	mov    edi,0x4019b43e
  409dba:	sbb    bp,WORD PTR [esi]
  409dbd:	push   esp
  409dbe:	mov    bl,0x1a
  409dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dc1:	xchg   eax,ebp
  409dc3:	jbe    0x409de1
  409dc5:	sub    eax,0x56ad987e
  409dca:	jle    0x409d4c
  409dcc:	dec    edx
  409dcd:	and    eax,0x75238c4e
  409dd2:	cwde   
  409dd3:	loope  0x409e0d
  409dd5:	stos   BYTE PTR es:[edi],al
  409dd6:	scas   al,BYTE PTR es:[edi]
  409dd7:	fs mov esi,0x72ae4b58
  409ddd:	loope  0x409de2
  409ddf:	sar    esp,0x56
  409de2:	stos   BYTE PTR es:[edi],al
  409de3:	adc    BYTE PTR [esi-0x2fa07026],dh
  409de9:	push   ds
  409dea:	and    edx,ebp
  409dec:	fs (bad) 
  409dee:	pop    ebx
  409def:	fpatan 
  409df1:	fcom   st(2)
  409df3:	add    dl,al
  409df5:	xor    BYTE PTR [ebp+0x151f07f],0x99
  409dfc:	pop    ss
  409dfd:	cld    
  409dfe:	jno    0x409d80
  409e00:	inc    edx
  409e01:	add    al,0x7c
  409e03:	(bad)  
  409e04:	fist   DWORD PTR [edx+0x2e]
  409e07:	mov    al,0x95
  409e09:	pop    ss
  409e0a:	push   es
  409e0b:	dec    ebp
  409e0c:	aaa    
  409e0d:	mov    ds:0x703f829d,eax
  409e12:	jnp    0x409e10
  409e14:	out    0xe9,al
  409e16:	dec    esp
  409e17:	iret   
  409e18:	fimul  DWORD PTR ds:0x1e95cbbc
  409e1e:	test   eax,0x744fc0dc
  409e23:	fisub  WORD PTR es:[ecx]
  409e26:	mov    ebp,0x914c3be4
  409e2b:	rol    DWORD PTR [ebx-0x67],0xf2
  409e2f:	xor    bh,BYTE PTR [edi+0x5]
  409e32:	adc    eax,DWORD PTR [eax+0x16]
  409e35:	cs add eax,0x4f510ae6
  409e3b:	and    eax,0x317d9ba4
  409e40:	jb     0x409e69
  409e42:	dec    esp
  409e43:	inc    ebx
  409e44:	mov    dl,0x4b
  409e46:	and    BYTE PTR [esi+0x2c158ee],dh
  409e4c:	pop    esp
  409e4d:	mov    esi,0x2428cae7
  409e52:	xor    al,0xb9
  409e54:	popf   
  409e55:	fwait
  409e56:	cmp    eax,0x162b5f40
  409e5b:	scas   al,BYTE PTR es:[edi]
  409e5c:	popf   
  409e5d:	dec    edx
  409e5e:	xor    dl,BYTE PTR [ecx]
  409e60:	test   ebp,0xf955a80a
  409e66:	arpl   ax,bp
  409e68:	and    esp,0xffffffae
  409e6b:	xor    al,0xa4
  409e6d:	sub    ch,dl
  409e6f:	shl    ebx,0xb
  409e72:	or     BYTE PTR [ebx],0xd6
  409e75:	call   0xd3ef:0x91c24dbb
  409e7c:	add    eax,DWORD PTR ds:0x9e2683f9
  409e82:	dec    esi
  409e83:	pop    es
  409e84:	loop   0x409f04
  409e86:	ins    BYTE PTR es:[edi],dx
  409e87:	adc    eax,0x5016cbeb
  409e8c:	mov    edi,0xde02064d
  409e91:	mov    dh,0x90
  409e93:	dec    esi
  409e94:	push   cs
  409e95:	clc    
  409e96:	pop    ss
  409e97:	jecxz  0x409ed6
  409e99:	scas   al,BYTE PTR es:[edi]
  409e9a:	mov    ah,0xcc
  409e9c:	xor    BYTE PTR [edi+ebp*1],bl
  409e9f:	and    esi,DWORD PTR [ebp-0x6beff7d9]
  409ea5:	shl    BYTE PTR [edi+0x5d],0xe5
  409ea9:	aad    0xe7
  409eab:	out    0xe8,al
  409ead:	hlt    
  409eae:	mov    ebp,DWORD PTR [eax+0x24]
  409eb1:	and    esi,edx
  409eb3:	stc    
  409eb4:	shl    BYTE PTR [di-0x56],1
  409eb8:	inc    esp
  409eb9:	sub    eax,0xe4a28796
  409ebe:	clc    
  409ebf:	jne    0x409f1e
  409ec1:	inc    esi
  409ec2:	sbb    esi,DWORD PTR [ebp-0x14]
  409ec5:	inc    eax
  409ec6:	bound  edx,QWORD PTR [edi+0x4e1718d1]
  409ecc:	or     al,0x12
  409ece:	pop    esp
  409ecf:	mov    esp,0x21629e3d
  409ed4:	or     esi,ebp
  409ed6:	pop    eax
  409ed7:	out    dx,eax
  409ed8:	shl    BYTE PTR [ecx+0x1b9f1635],cl
  409ede:	dec    esp
  409edf:	fstp   DWORD PTR [edi+eiz*1]
  409ee2:	add    dh,bh
  409ee4:	shl    BYTE PTR [edx],cl
  409ee6:	adc    ax,0x584a
  409eea:	push   ecx
  409eeb:	neg    dh
  409eed:	mov    dl,0x75
  409eef:	push   0x4d5a35d8
  409ef4:	jae    0x409f07
  409ef6:	cmp    cl,bl
  409ef8:	sti    
  409ef9:	fdivr  QWORD PTR [ebx-0x159c128e]
  409eff:	jmp    0x409efc
  409f01:	js     0x409f7e
  409f03:	fcom   st(0)
  409f05:	lock inc esi
  409f07:	dec    ebx
  409f08:	xchg   ebp,eax
  409f09:	jmp    0x2ae8:0x20007f3c
  409f10:	(bad)  
  409f12:	cmc    
  409f13:	dec    eax
  409f14:	das    
  409f15:	jae    0x409f69
  409f17:	cli    
  409f18:	sub    dl,BYTE PTR [edx+0x23]
  409f1b:	xchg   DWORD PTR [edi+0x46],esp
  409f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f1f:	xchg   ebx,edx
  409f21:	cmp    bh,bl
  409f23:	in     al,0xe7
  409f25:	jb     0x409ed0
  409f27:	jg     0x409f75
  409f29:	loopne 0x409f20
  409f2b:	and    al,0xe0
  409f2d:	mov    ebp,0xcc6a7d47
  409f32:	(bad)  
  409f33:	push   ecx
  409f34:	(bad)  
  409f35:	std    
  409f36:	nop
  409f37:	push   ss
  409f38:	push   edi
  409f39:	sti    
  409f3a:	mov    eax,0x1472d867
  409f3f:	fstp   QWORD PTR [edi+0x1b]
  409f42:	mov    al,ds:0x19968e83
  409f47:	es (bad) 
  409f49:	push   edi
  409f4a:	or     al,0xc7
  409f4c:	bound  esi,QWORD PTR [ecx+ecx*4+0x360fca49]
  409f53:	lea    ecx,[esi+ebx*8-0x4724f377]
  409f5a:	shr    DWORD PTR [esi],1
  409f5c:	xchg   edx,eax
  409f5d:	call   0x7419:0xafced1c3
  409f64:	fcos   
  409f66:	daa    
  409f67:	je     0x409fdf
  409f69:	cmp    al,0xb2
  409f6b:	dec    esi
  409f6c:	sar    DWORD PTR [ebp-0x3a],cl
  409f6f:	mov    ah,0xa3
  409f71:	sub    al,0x4f
  409f73:	xchg   esp,eax
  409f74:	ins    BYTE PTR es:[edi],dx
  409f75:	fsubr  QWORD PTR [esi+0x62ebd711]
  409f7b:	push   ebx
  409f7c:	jge    0x409fe9
  409f7e:	jmp    0xa71d5618
  409f83:	sbb    BYTE PTR [edx],al
  409f85:	stos   DWORD PTR es:[edi],eax
  409f86:	cmp    esi,DWORD PTR [ebx]
  409f88:	push   ecx
  409f89:	in     eax,0xf5
  409f8b:	pop    esi
  409f8c:	repz jmp 0x4fb192ff
  409f92:	test   eax,0x392a538b
  409f97:	adc    DWORD PTR [ebp+ebp*1-0x67],edi
  409f9b:	ins    BYTE PTR es:[edi],dx
  409f9c:	aas    
  409f9d:	and    BYTE PTR [ebx-0x19],0x4a
  409fa1:	call   0x4aa4:0x9c0725aa
  409fa8:	jbe    0x409fa9
  409faa:	push   esi
  409fab:	jbe    0x409f46
  409fad:	dec    ecx
  409fae:	add    al,0x19
  409fb0:	dec    ebp
  409fb1:	jmp    0x409fed
  409fb3:	jl     0x409fa0
  409fb5:	mov    ecx,0xe21347ef
  409fba:	pop    es
  409fbb:	mov    ds:0x399f916f,al
  409fc0:	inc    ebx
  409fc1:	push   edi
  409fc2:	inc    ebp
  409fc3:	cmp    ebx,DWORD PTR [ebx+0x35f9d63a]
  409fc9:	add    ebp,DWORD PTR [edx+0x50]
  409fcc:	push   es
  409fcd:	or     DWORD PTR [esi+0x1295d6d3],edi
  409fd3:	mov    dh,0xb2
  409fd5:	pop    eax
  409fd6:	retf   0x2e9d
  409fd9:	xchg   ebp,eax
  409fda:	iret   
  409fdb:	mov    bh,0x6c
  409fdd:	adc    dl,cl
  409fdf:	jo     0x409fbc
  409fe1:	arpl   WORD PTR [edi-0x43],sp
  409fe4:	mov    bh,0xf1
  409fe6:	int3   
  409fe7:	aam    0xf5
  409fe9:	push   ebx
  409fea:	jecxz  0x409fd9
  409fec:	nop
  409fed:	push   esi
  409fee:	ret    
  409fef:	push   0xfffffff3
  409ff1:	fst    QWORD PTR [ecx+0x4c]
  409ff4:	xchg   DWORD PTR [ebx+0x6dc7c4e2],edx
  409ffa:	retf   
  409ffb:	in     eax,0x91
  409ffd:	push   cs
  409ffe:	xchg   ebx,eax
  409fff:	outs   dx,BYTE PTR ds:[esi]
  40a000:	stc    
  40a001:	cmovge ecx,edi
  40a004:	sub    edx,edi
  40a006:	clc    
  40a007:	xchg   edi,eax
  40a008:	jo     0x409fa7
  40a00a:	mov    esp,0xca100e0b
  40a00f:	(bad)  
  40a010:	cmc    
  40a011:	jbe    0x40a04a
  40a013:	jmp    0x74:0x16b9db9c
  40a01a:	xor    BYTE PTR [ebx],cl
  40a01c:	cwde   
  40a01d:	xchg   ebx,eax
  40a01e:	jle    0x409fce
  40a020:	inc    eax
  40a021:	mov    dl,0xe
  40a023:	outs   dx,DWORD PTR ds:[esi]
  40a024:	add    edi,DWORD PTR [ebx+0x6fa81c2d]
  40a02a:	mov    bl,0x1c
  40a02c:	xor    edx,DWORD PTR [edi+0x77]
  40a02f:	xchg   edx,eax
  40a030:	stc    
  40a031:	pop    es
  40a032:	popf   
  40a033:	fild   DWORD PTR [ecx]
  40a035:	adc    DWORD PTR [ecx+esi*4],ebp
  40a038:	sahf   
  40a039:	push   esp
  40a03a:	mov    bh,0x5f
  40a03c:	jecxz  0x40a094
  40a03e:	cmp    ecx,ebx
  40a040:	cmp    DWORD PTR ds:0x7e571260,0x50232f8b
  40a04a:	setno  BYTE PTR [eax+0x45]
  40a04e:	hlt    
  40a04f:	xchg   ebp,eax
  40a050:	ss jmp 0xb0fb:0xe02523b1
  40a058:	(bad)  
  40a059:	mov    esp,0x96f0dc22
  40a05e:	jnp    0x40a01b
  40a060:	int3   
  40a061:	gs push edx
  40a063:	call   0xeb77:0x66a3cbf
  40a06a:	dec    esp
  40a06b:	in     al,0x2c
  40a06d:	iret   
  40a06e:	or     BYTE PTR [ecx+0x40004715],ah
  40a074:	sub    al,0x68
  40a076:	test   ebx,edi
  40a078:	cli    
  40a079:	push   edx
  40a07a:	cmp    al,0x4e
  40a07c:	ficom  DWORD PTR [edx+esi*4+0x1d]
  40a080:	and    eax,0x4b5215e3
  40a085:	mov    ds:0x67ccbbbd,eax
  40a08a:	cmp    al,0x3e
  40a08c:	pusha  
  40a08d:	push   es
  40a08e:	xor    BYTE PTR [ebx+eiz*2-0x57],ah
  40a092:	sti    
  40a093:	ret    0x85e5
  40a096:	xor    DWORD PTR [edi+eiz*4-0x76],0x50641fab
  40a09e:	mov    bh,BYTE PTR [edi-0x63]
  40a0a1:	int    0xd7
  40a0a3:	in     al,0xc0
  40a0a5:	sbb    DWORD PTR [ecx+ebp*4-0x1f1547c2],0x8b04d7c9
  40a0b0:	pushf  
  40a0b1:	jmp    0xfdf5:0x83093ce3
  40a0b8:	aam    0x64
  40a0ba:	jle    0x40a0d1
  40a0bc:	leave  
  40a0bd:	or     bl,bh
  40a0bf:	fdiv   st(0),st
  40a0c1:	jmp    0xc2bb:0xeac98a18
  40a0c8:	mov    WORD PTR [ebx],ds
  40a0ca:	aam    0xcf
  40a0cc:	sbb    al,0xeb
  40a0ce:	push   0x29
  40a0d0:	jno    0x40a09c
  40a0d2:	push   esp
  40a0d3:	push   eax
  40a0d4:	mov    ebx,0x425bd300
  40a0d9:	cli    
  40a0da:	mov    edx,DWORD PTR [eax+0x56f70c8d]
  40a0e0:	pop    esi
  40a0e1:	dec    ebx
  40a0e2:	jmp    0xe732:0x5bbf6015
  40a0e9:	scas   eax,DWORD PTR es:[edi]
  40a0ea:	addr16 mov eax,ds:0x2208
  40a0ee:	adc    cl,cl
  40a0f0:	sub    eax,0x3e214a75
  40a0f5:	repnz popf 
  40a0f7:	jae    0x40a137
  40a0f9:	inc    ebx
  40a0fa:	and    ch,ah
  40a0fc:	dec    esp
  40a0fd:	in     al,0x5f
  40a0ff:	lahf   
  40a100:	push   ss
  40a101:	or     bl,BYTE PTR [eax+0x1d]
  40a104:	scas   eax,DWORD PTR es:[edi]
  40a105:	lods   eax,DWORD PTR ds:[esi]
  40a106:	lods   eax,DWORD PTR ds:[esi]
  40a107:	nop
  40a108:	pusha  
  40a109:	dec    edx
  40a10a:	shl    DWORD PTR [eax+0x3c],cl
  40a10d:	adc    BYTE PTR [esi+0x5f],ah
  40a110:	popf   
  40a111:	sahf   
  40a112:	icebp  
  40a113:	call   0x85d:0x662aecd4
  40a11a:	ret    0xe919
  40a11d:	(bad)  
  40a11e:	xor    DWORD PTR [esi-0x1b],eax
  40a121:	xor    eax,0x3afa17b4
  40a126:	cli    
  40a127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a128:	fwait
  40a129:	add    al,0x86
  40a12b:	dec    ebx
  40a12c:	shr    BYTE PTR [edx],cl
  40a12e:	push   ebp
  40a12f:	inc    ecx
  40a130:	sbb    eax,0x43ff8bda
  40a135:	inc    esp
  40a136:	test   BYTE PTR [edx],bl
  40a138:	jns    0x40a0ec
  40a13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a13b:	cdq    
  40a13c:	jnp    0x40a189
  40a13e:	ins    DWORD PTR es:[edi],dx
  40a13f:	bound  esi,QWORD PTR [edi-0x67]
  40a142:	pop    eax
  40a143:	cld    
  40a144:	(bad)  
  40a145:	in     eax,0x7f
  40a147:	(bad)  
  40a148:	ins    BYTE PTR es:[edi],dx
  40a149:	sub    BYTE PTR [edi+0x23f7a3be],bh
  40a14f:	mov    esp,0x48f14884
  40a154:	sbb    al,0x2
  40a156:	jmp    0x1f2803ca
  40a15b:	cmp    al,0x8d
  40a15d:	or     BYTE PTR [edi+0x36],bh
  40a160:	jge    0x40a0ed
  40a162:	xchg   bl,dl
  40a164:	pop    esp
  40a165:	jno    0x40a146
  40a167:	mov    cl,0x5a
  40a169:	daa    
  40a16a:	dec    esp
  40a16b:	mov    bl,0x84
  40a16d:	xchg   ebp,eax
  40a16e:	sub    bl,BYTE PTR [esp+edi*2+0x35eabbcf]
  40a175:	std    
  40a176:	leave  
  40a177:	ret    
  40a178:	jno    0x40a1b4
  40a17a:	add    al,0xaf
  40a17c:	fs add eax,0xa211e0d0
  40a182:	xchg   ebp,eax
  40a183:	sub    ah,ch
  40a185:	push   edi
  40a186:	(bad)  
  40a187:	mov    edx,0x7b74762e
  40a18c:	pop    ebp
  40a18d:	fsub   QWORD PTR [edi-0x7f]
  40a190:	aas    
  40a191:	jl     0x40a1a3
  40a193:	ret    
  40a194:	aad    0x3e
  40a196:	nop
  40a197:	pop    esi
  40a198:	neg    BYTE PTR [ecx-0x410bdf54]
  40a19e:	adc    ah,BYTE PTR [esi]
  40a1a0:	dec    ebx
  40a1a1:	int    0xb6
  40a1a3:	inc    eax
  40a1a4:	xchg   ebx,eax
  40a1a5:	inc    eax
  40a1a6:	fsub   QWORD PTR [esp+0x8]
  40a1aa:	adc    BYTE PTR [ebp-0x480ec3f0],ch
  40a1b0:	xchg   edi,eax
  40a1b1:	call   0x84864c44
  40a1b6:	dec    ebx
  40a1b7:	sub    DWORD PTR [esi],0xfffffff8
  40a1ba:	mov    ds:0x9d58e494,al
  40a1bf:	mov    ah,0x9e
  40a1c1:	inc    ebx
  40a1c2:	mov    edi,0xc99a7393
  40a1c7:	pop    eax
  40a1c8:	inc    eax
  40a1c9:	sub    BYTE PTR [eax-0x22],bl
  40a1cc:	mov    ch,0x2c
  40a1ce:	outs   dx,BYTE PTR ds:[esi]
  40a1cf:	aad    0xed
  40a1d1:	push   ebp
  40a1d2:	sub    ebp,DWORD PTR [edx]
  40a1d4:	dec    ebp
  40a1d5:	je     0x40a21b
  40a1d7:	rcr    BYTE PTR ds:0x2098ee08,0xe5
  40a1de:	loope  0x40a247
  40a1e0:	add    al,0x42
  40a1e2:	inc    ebp
  40a1e3:	ins    DWORD PTR es:[edi],dx
  40a1e4:	sbb    eax,0xa4b8c119
  40a1e9:	icebp  
  40a1ea:	ret    
  40a1eb:	(bad)  
  40a1ec:	std    
  40a1ed:	enter  0xaa1e,0xb9
  40a1f1:	in     eax,0x8e
  40a1f3:	sub    eax,0xbf559e05
  40a1f8:	sub    ebx,DWORD PTR [eax-0x14b5052f]
  40a1fe:	push   ebp
  40a1ff:	iret   
  40a200:	fistp  WORD PTR [eax]
  40a202:	icebp  
  40a203:	mov    dh,al
  40a205:	jg     0x40a1da
  40a207:	or     BYTE PTR [ebp+0x6b9e13af],ch
  40a20d:	dec    edi
  40a20e:	cmp    al,0xdf
  40a210:	or     eax,0x415eb822
  40a215:	push   edx
  40a216:	dec    BYTE PTR [eax+ecx*1+0xf]
  40a21a:	mov    ah,0x47
  40a21c:	or     dh,BYTE PTR [ebx+0x15]
  40a21f:	push   eax
  40a220:	fcomp  QWORD PTR ds:0x8ee9e49c
  40a226:	push   ds
  40a227:	xchg   ebp,eax
  40a228:	cmp    DWORD PTR [edx+0x29],ebx
  40a22b:	out    0xf1,eax
  40a22d:	hlt    
  40a22e:	pop    edx
  40a22f:	aad    0x40
  40a231:	mov    edi,0x9f89c631
  40a236:	xor    DWORD PTR [edx-0x2d],0x4887a84b
  40a23d:	inc    ebx
  40a23e:	dec    edi
  40a23f:	sbb    eax,0x8d679351
  40a244:	push   ebx
  40a245:	sub    BYTE PTR [ebx+0x60],al
  40a248:	mov    al,ds:0xeffb5548
  40a24d:	jl     0x40a22f
  40a24f:	in     eax,0xe2
  40a251:	call   0xef80:0x2e6563c6
  40a258:	xor    eax,0xc438848d
  40a25d:	in     eax,0x64
  40a25f:	add    BYTE PTR [ebx-0x6ccf383],cl
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	(bad)  
  40abd7:	and    eax,0xeccd980
  40abdc:	push   es
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	dec    ebx
  40abe4:	inc    esp
  40abe5:	xor    al,BYTE PTR [eax-0x60]
  40abe8:	fimul  DWORD PTR [esi]
  40abea:	loope  0x40abbd
  40abec:	ins    BYTE PTR es:[edi],dx
  40abed:	jo     0x40ab7b
  40abef:	mov    bl,0x44
  40abf1:	pop    ds
  40abf2:	aam    0xf
  40abf4:	lds    ebx,FWORD PTR [ecx-0x2a]
  40abf7:	mov    ebx,0x51979de3
  40abfc:	dec    esi
  40abfd:	or     ah,BYTE PTR [ebp+0x57]
  40ac00:	xor    ch,dh
  40ac02:	enter  0x75d1,0xa9
  40ac06:	fs inc ecx
  40ac08:	jno    0x40abb6
  40ac0a:	and    esi,edx
  40ac0c:	jb     0x40abea
  40ac0e:	je     0x40abfc
  40ac10:	pushf  
  40ac11:	bound  edi,QWORD PTR [ecx-0x3e2610ee]
  40ac17:	push   0xffffff91
  40ac19:	sbb    esp,esi
  40ac1b:	ins    DWORD PTR es:[edi],dx
  40ac1c:	xchg   esi,eax
  40ac1d:	lods   eax,DWORD PTR ds:[esi]
  40ac1e:	inc    esp
  40ac1f:	push   edi
  40ac20:	fbstp  TBYTE PTR [ebx]
  40ac22:	mov    WORD PTR [edx+edx*2],?
  40ac25:	pop    esp
  40ac26:	cli    
  40ac27:	aam    0xf5
  40ac29:	dec    edx
  40ac2a:	ret    0xb8cc
  40ac2d:	mov    ah,0x6b
  40ac2f:	jle    0x40abbb
  40ac31:	adc    edi,ecx
  40ac33:	xchg   DWORD PTR [esi-0x33e706b2],eax
  40ac39:	clc    
  40ac3a:	aad    0x77
  40ac3c:	outs   dx,DWORD PTR ds:[esi]
  40ac3d:	mul    esp
  40ac3f:	(bad)  
  40ac40:	sbb    al,cl
  40ac42:	jae    0x40ac7c
  40ac44:	mov    al,0xe5
  40ac46:	add    BYTE PTR [edx-0x2d0e3957],ah
  40ac4c:	sbb    DWORD PTR [ecx+0x73],edx
  40ac4f:	outs   dx,DWORD PTR ds:[esi]
  40ac50:	fwait
  40ac51:	cmp    DWORD PTR [edi-0x2c],esi
  40ac54:	mov    bl,0xa1
  40ac56:	cs dec ecx
  40ac58:	les    edi,FWORD PTR [ebp-0x1014950e]
  40ac5e:	cld    
  40ac5f:	mov    ebx,0x277028ec
  40ac64:	xor    ebx,DWORD PTR [ebx]
  40ac66:	jp     0x40ac83
  40ac68:	mov    DWORD PTR ds:0xbb77a511,ebp
  40ac6e:	sbb    eax,0x11984232
  40ac73:	icebp  
  40ac74:	inc    esi
  40ac75:	and    BYTE PTR [ecx-0x43],0xd8
  40ac79:	rcr    DWORD PTR [edx-0x1c],cl
  40ac7c:	cld    
  40ac7d:	inc    ecx
  40ac7e:	retf   0xf225
  40ac81:	lahf   
  40ac82:	add    DWORD PTR [esi-0x72],ecx
  40ac85:	mov    eax,ds:0x82358dd7
  40ac8a:	mov    ah,0xed
  40ac8c:	mov    al,ds:0x1ade0418
  40ac91:	pop    ebp
  40ac92:	adc    eax,0x1dec7d81
  40ac97:	(bad)  
  40ac98:	cmp    DWORD PTR [esi],ecx
  40ac9a:	icebp  
  40ac9b:	aaa    
  40ac9c:	dec    ebx
  40ac9d:	dec    ebp
  40ac9e:	mov    ah,0x7a
  40aca0:	cmp    ah,BYTE PTR [edi+0x4e28e09]
  40aca6:	(bad)  
  40aca7:	ins    BYTE PTR es:[edi],dx
  40aca8:	lods   eax,DWORD PTR ds:[esi]
  40aca9:	(bad)  
  40acaa:	stos   BYTE PTR es:[edi],al
  40acab:	and    eax,0x23aaad82
  40acb0:	fwait
  40acb1:	mov    ebp,ebp
  40acb3:	xor    eax,0x6239ad1d
  40acb8:	rcl    DWORD PTR [esi+0x2f],1
  40acbb:	shl    DWORD PTR [edx+ebp*1],1
  40acbe:	jns    0x40ace3
  40acc0:	and    edi,DWORD PTR [edx]
  40acc2:	cmp    al,BYTE PTR [eax+0x52e04621]
  40acc8:	fist   DWORD PTR [eax-0x67]
  40accb:	int3   
  40accc:	ret    
  40accd:	scas   eax,DWORD PTR es:[edi]
  40acce:	lods   al,BYTE PTR ds:[esi]
  40accf:	sbb    edx,edi
  40acd1:	ins    BYTE PTR es:[edi],dx
  40acd2:	(bad)  
  40acd3:	jmp    0xd06c:0x1e82d03f
  40acda:	xchg   esp,eax
  40acdb:	jp     0x40ac74
  40acdd:	(bad)  
  40acde:	sti    
  40acdf:	test   al,0x97
  40ace1:	pop    esi
  40ace2:	or     al,0xe4
  40ace4:	push   esi
  40ace5:	(bad)  
  40ace6:	dec    edx
  40ace7:	push   esi
  40ace8:	jns    0x40ad36
  40acea:	xor    al,0x3c
  40acec:	pop    eax
  40aced:	(bad)  
  40acef:	jbe    0x40acea
  40acf1:	jne    0x40aca1
  40acf3:	sub    eax,0xf4d19c74
  40acf8:	(bad)  
  40acf9:	pop    edi
  40acfa:	xor    dl,dl
  40acfc:	inc    eax
  40acfe:	push   edx
  40ad00:	jns    0x40ad4a
  40ad02:	inc    edx
  40ad03:	inc    edi
  40ad04:	test   eax,0x7a7a9f90
  40ad09:	imul   DWORD PTR [ecx-0x7c6ee813]
  40ad0f:	pop    es
  40ad10:	pop    ebx
  40ad11:	inc    ebp
  40ad12:	stos   BYTE PTR es:[edi],al
  40ad13:	jbe    0x40ad5a
  40ad15:	div    DWORD PTR [ebx+0x331b53cd]
  40ad1b:	inc    ebp
  40ad1c:	es or  eax,0xdc3fd919
  40ad22:	fisubr WORD PTR [edi+0x1f98cf36]
  40ad28:	stos   DWORD PTR es:[edi],eax
  40ad29:	shl    DWORD PTR [edi+0x2f],0xbf
  40ad2d:	jecxz  0x40acd5
  40ad2f:	call   0xafff803d
  40ad34:	into   
  40ad35:	cmp    DWORD PTR [edi],ebp
  40ad37:	call   0x4bef268
  40ad3c:	mov    ds:0xf6e92757,eax
  40ad41:	jge    0x40ad39
  40ad43:	or     al,0xe6
  40ad45:	sti    
  40ad46:	mov    ebp,0xcc4997bb
  40ad4b:	or     DWORD PTR [ecx+0x3379a1a2],edi
  40ad51:	pop    edx
  40ad52:	pop    ebx
  40ad53:	neg    BYTE PTR [edx]
  40ad55:	add    BYTE PTR [ebx+0x5f95caea],al
  40ad5b:	push   ds
  40ad5c:	aas    
  40ad5d:	out    dx,al
  40ad5e:	adc    esp,edi
  40ad60:	dec    ebp
  40ad61:	aam    0xad
  40ad63:	fisubr WORD PTR [ecx-0x79294150]
  40ad69:	leave  
  40ad6a:	dec    esi
  40ad6b:	push   ebp
  40ad6c:	mov    bh,0x30
  40ad6e:	lods   al,BYTE PTR ds:[esi]
  40ad6f:	jp     0x40ad7f
  40ad71:	pop    esp
  40ad72:	cmp    BYTE PTR [esi],ah
  40ad74:	push   0x64
  40ad76:	jbe    0x40ad73
  40ad78:	outs   dx,DWORD PTR ds:[esi]
  40ad79:	(bad)  
  40ad7a:	mov    dl,BYTE PTR [bx+0x5f]
  40ad7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad7f:	add    al,0x6f
  40ad81:	sbb    eax,0xc8895d90
  40ad86:	(bad)  
  40ad87:	sub    al,0xb4
  40ad89:	jne    0x40ad22
  40ad8b:	inc    eax
  40ad8c:	and    ecx,DWORD PTR [eax-0x6a]
  40ad8f:	add    ecx,edx
  40ad91:	pop    esp
  40ad92:	adc    BYTE PTR [edi+0x5b4cc1a2],0x65
  40ad99:	repz xchg edi,eax
  40ad9b:	push   es
  40ad9c:	jnp    0x40adaa
  40ad9e:	pop    eax
  40ad9f:	cmp    ebp,DWORD PTR [esi-0x23]
  40ada2:	cld    
  40ada3:	push   edx
  40ada4:	stos   BYTE PTR es:[edi],al
  40ada5:	mov    ecx,0x4cabe4a3
  40adaa:	adc    ecx,0x8fabf510
  40adb0:	mov    WORD PTR ds:0xf3db5db8,ss
  40adb6:	sbb    bh,BYTE PTR [esi+0x4a]
  40adb9:	mov    ah,0xc6
  40adbb:	das    
  40adbc:	es inc ebx
  40adbe:	mov    al,ch
  40adc0:	loopne 0x40ae40
  40adc2:	cmp    ch,BYTE PTR [esi+0x73b86704]
  40adc8:	les    ecx,FWORD PTR [ebx+0x73]
  40adcb:	mov    eax,0x664461a3
  40add0:	cs push ebx
  40add2:	push   ecx
  40add3:	inc    ebp
  40add4:	jge    0x40adfe
  40add6:	or     ch,BYTE PTR [edx]
  40add8:	(bad)  
  40add9:	lods   eax,DWORD PTR ds:[esi]
  40adda:	mov    ebp,0x334273c5
  40addf:	and    al,0x5
  40ade1:	repz xor DWORD PTR [ebp+0x56],edi
  40ade5:	pop    ss
  40ade6:	jo     0x40adeb
  40ade8:	and    DWORD PTR [ecx-0x9db4fa2],edx
  40adee:	jmp    0x40ad78
  40adf0:	ret    
  40adf1:	cdq    
  40adf2:	ror    BYTE PTR [edx+0x26],1
  40adf5:	inc    esp
  40adf6:	push   0xc7b40331
  40adfb:	inc    ebx
  40adfc:	ret    0x3a39
  40adff:	bound  eax,QWORD PTR [ebp-0x12]
  40ae02:	hlt    
  40ae03:	or     ebp,DWORD PTR [eax]
  40ae05:	lds    esp,FWORD PTR [esi+ebx*8]
  40ae08:	sbb    eax,DWORD PTR [esi*1+0x4e33965c]
  40ae0f:	rcl    BYTE PTR [ebx],cl
  40ae11:	mov    ah,0xa6
  40ae13:	add    esi,esi
  40ae15:	adc    BYTE PTR [esi],cl
  40ae17:	mov    ebp,0xf743c1dc
  40ae1c:	call   0x96455c5b
  40ae21:	(bad)  
  40ae22:	push   ebp
  40ae23:	(bad)  
  40ae24:	sub    eax,0xfb22e3d0
  40ae29:	pushf  
  40ae2a:	fst    QWORD PTR [ecx]
  40ae2c:	mov    eax,0x5ad4d26
  40ae31:	add    al,0x33
  40ae33:	jo     0x40ae87
  40ae35:	add    DWORD PTR [eax],eax
  40ae37:	adc    ch,bl
  40ae39:	mov    BYTE PTR [edi],dh
  40ae3b:	push   esi
  40ae3c:	adc    eax,0x98c82595
  40ae42:	dec    edi
  40ae43:	lock mov eax,0xa8235256
  40ae49:	push   eax
  40ae4a:	mov    edx,0x7c0342b5
  40ae4f:	not    BYTE PTR [edx-0x3f]
  40ae52:	jo     0x40ae3e
  40ae54:	push   eax
  40ae55:	sbb    al,0x64
  40ae57:	mov    ebp,0xa1e417bb
  40ae5c:	dec    esi
  40ae5d:	lahf   
  40ae5e:	les    esp,FWORD PTR [edx]
  40ae60:	and    DWORD PTR es:[ebx],edi
  40ae63:	cs cwde 
  40ae65:	inc    ebp
  40ae66:	dec    edi
  40ae67:	(bad)  
  40ae68:	mov    ds:0x7a12d948,eax
  40ae6d:	mov    bl,0xa5
  40ae6f:	add    bl,bh
  40ae71:	xchg   esi,eax
  40ae72:	stc    
  40ae73:	(bad)  
  40ae74:	xor    al,0xb2
  40ae76:	pop    ebx
  40ae77:	cwde   
  40ae78:	adc    bh,BYTE PTR [esi+0x5c]
  40ae7b:	mov    ebx,?
  40ae7d:	adc    dl,BYTE PTR [eax]
  40ae7f:	xchg   esp,eax
  40ae80:	call   0xc2799920
  40ae85:	mov    bl,0x39
  40ae87:	mov    esi,DWORD PTR [eax]
  40ae89:	cmp    al,0x38
  40ae8b:	cmp    eax,0x3a49eb48
  40ae90:	or     al,0xe4
  40ae92:	mov    DWORD PTR [eax-0x5ed5deb3],edi
  40ae98:	xor    edx,DWORD PTR [ebx+0x46c08fde]
  40ae9e:	out    0x56,eax
  40aea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aea1:	(bad)  
  40aea2:	pop    ebx
  40aea3:	int    0xc8
  40aea5:	in     al,0xaa
  40aea7:	xchg   BYTE PTR [edi+ebp*2-0x6a237d58],dl
  40aeae:	inc    edi
  40aeaf:	icebp  
  40aeb0:	stos   BYTE PTR es:[edi],al
  40aeb1:	pop    eax
  40aeb2:	sub    eax,0x39db11bd
  40aeb7:	sbb    ah,dl
  40aeb9:	shl    DWORD PTR [edx],0x28
  40aebc:	dec    eax
  40aebd:	test   ecx,0x59648adf
  40aec3:	sbb    DWORD PTR [ebx],edi
  40aec5:	aad    0x18
  40aec7:	xor    al,0xb7
  40aeca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aecb:	jae    0x40af2c
  40aecd:	sbb    eax,0xdddcc8d2
  40aed2:	not    BYTE PTR [ebx]
  40aed4:	mov    ah,0xa5
  40aed6:	ret    
  40aed7:	aas    
  40aed8:	or     eax,0xf56596f6
  40aedd:	mov    ebp,0x472472de
  40aee2:	int3   
  40aee3:	mov    gs,esp
  40aee5:	sbb    DWORD PTR [edi-0x7e77bbaa],ecx
  40aeeb:	add    eax,eax
  40aeed:	jp     0x40af16
  40aeef:	icebp  
  40aef0:	push   eax
  40aef1:	add    eax,DWORD PTR [ebx+0xfcb5d57]
  40aef7:	(bad)  
  40aef8:	(bad)  
  40aef9:	test   al,0xa7
  40aefb:	call   0x3030:0xa11018ed
  40af02:	(bad)
  40af05:	mov    al,0xf3
  40af07:	out    0x16,al
  40af09:	jl     0x40af3e
  40af0b:	pop    esi
  40af0c:	mov    fs,WORD PTR [eax-0x3b63fd5]
  40af12:	fidivr DWORD PTR [edi]
  40af14:	sbb    al,0xd
  40af16:	fadd   QWORD PTR [ecx-0x7a]
  40af19:	in     al,0xc5
  40af1b:	scas   al,BYTE PTR es:[edi]
  40af1c:	stos   DWORD PTR es:[edi],eax
  40af1d:	shl    DWORD PTR [edx+edx*2],1
  40af20:	mov    esi,0x52522d2a
  40af25:	xor    al,0x70
  40af27:	mov    al,0xec
  40af29:	(bad)  
  40af2b:	pusha  
  40af2c:	cdq    
  40af2d:	add    DWORD PTR [esi-0x1b],0xa052d091
  40af34:	ror    BYTE PTR [ecx],0x40
  40af37:	or     cl,dh
  40af39:	mov    WORD PTR [ebx+0x5887eaf1],ds
  40af3f:	jp     0x40af79
  40af41:	nop
  40af42:	retf   
  40af43:	jg     0x40afa7
  40af45:	dec    ebx
  40af46:	out    dx,al
  40af47:	push   ebp
  40af48:	cmp    eax,DWORD PTR [edi+esi*8+0x67eea047]
  40af4f:	xor    eax,0x39065875
  40af54:	pusha  
  40af55:	(bad)  
  40af56:	sub    BYTE PTR [ecx+0x58],ch
  40af59:	add    DWORD PTR [ebp+0x11],0xf97cb2df
  40af60:	fisub  WORD PTR [ebx-0x80]
  40af63:	pause  
  40af65:	std    
  40af66:	mov    ecx,0x4753d554
  40af6b:	and    ebp,ecx
  40af6d:	jmp    0x40af6d
  40af6f:	and    ch,BYTE PTR [esi+ebp*1]
  40af72:	adc    esi,ebp
  40af74:	lods   al,BYTE PTR ds:[esi]
  40af75:	xor    ecx,DWORD PTR [esi+0x6cd34f9e]
  40af7b:	xlat   BYTE PTR ds:[ebx]
  40af7c:	pop    ecx
  40af7d:	mov    esp,0x7e2374a3
  40af82:	sbb    al,BYTE PTR [edx+eax*1-0x697968b]
  40af89:	or     ecx,DWORD PTR [eax]
  40af8b:	(bad)
  40af8f:	mov    bl,0x1c
  40af91:	arpl   WORD PTR [esp+edx*1],sp
  40af94:	sub    al,0x80
  40af96:	push   ss
  40af97:	jle    0x40b00d
  40af99:	fdiv   QWORD PTR [ebx-0x5e]
  40af9c:	repnz inc esi
  40af9e:	sar    BYTE PTR [edx-0x7c],0x9a
  40afa2:	cmp    DWORD PTR [eax+0x71],ecx
  40afa5:	(bad)  
  40afa7:	scas   al,BYTE PTR es:[di]
  40afa9:	mov    esi,0x4bc7650f
  40afae:	(bad)  
  40afaf:	xchg   ebx,eax
  40afb0:	mov    al,ds:0xd1f121f4
  40afb5:	shr    DWORD PTR [ecx+ebp*2+0x181a4348],1
  40afbc:	aam    0xe4
  40afbe:	dec    eax
  40afbf:	push   ebp
  40afc0:	sub    ecx,DWORD PTR [esi-0x4962271a]
  40afc6:	push   esp
  40afc7:	xchg   edi,eax
  40afc8:	loop   0x40af81
  40afca:	jle    0x40af9d
  40afcc:	jp     0x40af57
  40afce:	and    BYTE PTR [edx+0x2d],0xc2
  40afd2:	in     eax,dx
  40afd3:	pop    esp
  40afd4:	jns    0x40af60
  40afd6:	in     al,0xa9
  40afd8:	outs   dx,DWORD PTR ds:[esi]
  40afd9:	mov    eax,ds:0x43b42810
  40afde:	jg     0x40aff6
  40afe0:	ficomp WORD PTR [edx+edi*1-0x1b]
  40afe4:	xchg   esp,eax
  40afe5:	sbb    ebp,esi
  40afe7:	in     eax,0x1e
  40afe9:	std    
  40afea:	in     eax,dx
  40afeb:	push   esp
  40afec:	jp     0x40b029
  40afee:	je     0x40afbc
  40aff0:	dec    eax
  40aff1:	pop    edx
  40aff2:	xchg   edx,eax
  40aff3:	fwait
  40aff4:	add    DWORD PTR [esi-0x7a],esp
  40aff7:	retf   
  40aff8:	ins    DWORD PTR es:[edi],dx
  40aff9:	sbb    eax,edi
  40affb:	mov    bh,0x6e
  40affd:	stos   BYTE PTR es:[edi],al
  40affe:	mov    eax,0x5cc0bb84
  40b003:	leave  
  40b004:	pop    edx
  40b005:	xchg   edi,eax
  40b006:	pushw  es
  40b008:	test   eax,0xc76dba6d
  40b00d:	gs dec edi
  40b00f:	repz jle 0x40afe2
  40b012:	lods   eax,DWORD PTR ds:[esi]
  40b013:	inc    esp
  40b014:	retf   
  40b015:	sbb    al,0x2d
  40b017:	js     0x40b041
  40b019:	mov    cl,0xbd
  40b01b:	cmp    ecx,DWORD PTR [ebx-0x7a]
  40b01e:	ret    0x9cc2
  40b021:	and    al,0x18
  40b023:	cmp    ah,ah
  40b025:	pusha  
  40b026:	adc    DWORD PTR [eax],edx
  40b028:	adc    dh,BYTE PTR [edi-0x792ffb2]
  40b02e:	lods   al,BYTE PTR ds:[esi]
  40b02f:	mov    bl,0xf2
  40b031:	sub    BYTE PTR [eax-0x7c5b4c60],dl
  40b037:	(bad)  [ecx-0x40]
  40b03a:	jbe    0x40aff6
  40b03c:	jns    0x40afd5
  40b03e:	sub    eax,esp
  40b040:	or     bl,0xb7
  40b043:	push   es
  40b044:	retf   
  40b045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b046:	icebp  
  40b047:	in     al,0xed
  40b049:	lods   al,BYTE PTR ds:[esi]
  40b04a:	add    BYTE PTR [edx],cl
  40b04c:	lods   al,BYTE PTR ds:[esi]
  40b04d:	fild   DWORD PTR [edx+0x10]
  40b050:	add    ebx,DWORD PTR [esi+0xf]
  40b053:	xor    eax,0xbc54b7c
  40b058:	and    BYTE PTR ds:0x47e2df30,cl
  40b05e:	add    eax,DWORD PTR [ecx]
  40b060:	stos   BYTE PTR es:[edi],al
  40b061:	add    ebp,DWORD PTR [edi+ecx*8]
  40b064:	jge    0x40b023
  40b066:	jmp    DWORD PTR cs:[esi-0x21a66ceb]
  40b06d:	cli    
  40b06e:	mov    ah,0xb9
  40b070:	push   esp
  40b071:	js     0x40b0ed
  40b073:	add    cl,0xf3
  40b076:	stos   BYTE PTR es:[edi],al
  40b077:	das    
  40b078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b079:	ja     0x40b029
  40b07b:	mov    ebx,0x93748005
  40b080:	inc    eax
  40b081:	out    dx,al
  40b082:	fxch   st(5)
  40b084:	ftst   
  40b086:	aam    0xe
  40b088:	adc    al,0x5c
  40b08a:	das    
  40b08b:	gs inc ecx
  40b08d:	inc    esp
  40b08e:	xchg   esi,eax
  40b08f:	xor    esp,esp
  40b091:	(bad)  
  40b092:	fld    TBYTE PTR [eax+0x43]
  40b095:	lds    esp,FWORD PTR [eax+0x54]
  40b098:	retf   0x8227
  40b09b:	cli    
  40b09c:	fnsave [edi+eiz*2-0x1a]
  40b0a0:	popf   
  40b0a1:	lods   al,BYTE PTR ds:[esi]
  40b0a2:	sbb    ebp,DWORD PTR [edx-0x39ed0d42]
  40b0a8:	faddp  st(0),st
  40b0aa:	jl     0x40b0de
  40b0ac:	jnp    0x40b047
  40b0ae:	sbb    DWORD PTR [esi-0x38],ecx
  40b0b1:	push   eax
  40b0b2:	adc    ebx,ecx
  40b0b4:	out    0x62,eax
  40b0b6:	pop    esi
  40b0b7:	add    eax,0x49aabd58
  40b0bc:	pusha  
  40b0bd:	fcom   DWORD PTR [esi+0x5]
  40b0c0:	sahf   
  40b0c1:	jp     0x40b056
  40b0c3:	das    
  40b0c4:	(bad)  
  40b0c5:	scas   al,BYTE PTR es:[edi]
  40b0c6:	cld    
  40b0c7:	mov    cl,0xce
  40b0c9:	mov    ecx,0x8ee1fbfa
  40b0ce:	lea    ebx,[edx-0x7a72affa]
  40b0d4:	in     al,dx
  40b0d5:	ss adc al,bl
  40b0d8:	aas    
  40b0d9:	cs dec esp
  40b0db:	pop    ss
  40b0dc:	cmp    BYTE PTR [edx],ah
  40b0de:	test   eax,0x5c4615e
  40b0e3:	push   0x5d
  40b0e5:	and    eax,0x1c670c80
  40b0ea:	xor    al,0x6d
  40b0ec:	pusha  
  40b0ed:	pusha  
  40b0ee:	sub    cl,cl
  40b0f0:	mov    ah,0x4b
  40b0f2:	aaa    
  40b0f3:	jae    0x40b0ce
  40b0f5:	(bad)  
  40b0f6:	lds    esp,FWORD PTR [ecx+0xa]
  40b0f9:	push   eax
  40b0fa:	mov    dh,0x94
  40b0fc:	xor    esp,DWORD PTR [edx+ebx*1]
  40b0ff:	jmp    0x561f:0xd02d87bb
  40b106:	inc    edx
  40b107:	mov    eax,ds:0xe07dac1b
  40b10c:	pop    ds
  40b10d:	mov    eax,ds:0x9e9fdfdd
  40b112:	clc    
  40b113:	mov    al,0xc0
  40b115:	int    0xa9
  40b117:	neg    ebp
  40b119:	add    al,0x21
  40b11b:	ss add esp,0xfffffffa
  40b11f:	ret    0x74ea
  40b122:	or     DWORD PTR [eax],edi
  40b124:	jo     0x40b156
  40b126:	cdq    
  40b127:	add    al,0x91
  40b129:	and    esi,ebp
  40b12b:	icebp  
  40b12c:	pop    es
  40b12d:	frstor [ebx+edx*1+0x6517f6b0]
  40b134:	mov    ebx,0x3d6f102a
  40b139:	jo     0x40b184
  40b13b:	sub    edi,DWORD PTR [edi+edi*2+0x14af049a]
  40b142:	sub    eax,0x1097954a
  40b147:	gs sti 
  40b149:	sti    
  40b14a:	jo     0x40b173
  40b14c:	xlat   BYTE PTR ds:[ebx]
  40b14d:	ja     0x40b120
  40b14f:	jbe    0x40b0ea
  40b151:	inc    esi
  40b152:	adc    bl,BYTE PTR [ebp+0x22f3d610]
  40b158:	push   ebx
  40b159:	cmp    al,0x7a
  40b15b:	pop    es
  40b15c:	ins    DWORD PTR es:[edi],dx
  40b15d:	push   es
  40b15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b15f:	iret   
  40b160:	jne    0x40b1b9
  40b162:	(bad)  
  40b163:	dec    ebp
  40b164:	ret    0xd4df
  40b167:	sar    BYTE PTR [ebp+0x4e1488a2],cl
  40b16d:	mov    BYTE PTR [eax+0xa],0xf
  40b171:	pop    edx
  40b172:	jge    0x40b175
  40b174:	xchg   ebp,eax
  40b175:	repnz loope 0x40b1a0
  40b178:	scas   al,BYTE PTR es:[edi]
  40b179:	or     dl,BYTE PTR [esi+0xb823278]
  40b17f:	push   ebx
  40b180:	loope  0x40b109
  40b182:	rcr    BYTE PTR [edx+0x4],1
  40b185:	shl    DWORD PTR [ebp-0x50bb0ebd],0xae
  40b18c:	push   ds
  40b18d:	(bad)  
  40b18e:	push   edx
  40b18f:	pop    DWORD PTR [esi-0x40]
  40b192:	mov    esi,0xcf499b06
  40b197:	xchg   ecx,eax
  40b198:	daa    
  40b199:	sbb    cl,dh
  40b19b:	push   ds
  40b19c:	add    eax,0x63
  40b19f:	hlt    
  40b1a0:	adc    edi,esi
  40b1a2:	aaa    
  40b1a3:	jbe    0x40b186
  40b1a5:	mov    al,ds:0x27d093b
  40b1aa:	xchg   ebx,eax
  40b1ab:	call   0xdd345f03
  40b1b0:	jmp    0xcb4d:0x73bfdf74
  40b1b7:	or     DWORD PTR [esi-0x6],ecx
  40b1ba:	sahf   
  40b1bb:	xchg   esp,eax
  40b1bc:	lods   eax,DWORD PTR ds:[esi]
  40b1bd:	add    esp,DWORD PTR [esi+0x68714d4b]
  40b1c3:	push   edi
  40b1c4:	xchg   ebx,eax
  40b1c5:	fucom  st(5)
  40b1c7:	test   eax,0xee7eeac7
  40b1cc:	(bad)  
  40b1ce:	inc    ebx
  40b1cf:	mov    ecx,0x413ee8a3
  40b1d4:	push   edx
  40b1d5:	jo     0x40b223
  40b1d7:	xor    BYTE PTR [edx+0x55],0x2c
  40b1db:	(bad)  
  40b1dc:	jl     0x40b198
  40b1de:	retf   
  40b1df:	pop    esi
  40b1e0:	mov    esp,0x2ace970f
  40b1e5:	xchg   edx,eax
  40b1e6:	fs ds loopne 0x40b1ca
  40b1ea:	pushf  
  40b1eb:	rcr    DWORD PTR [ebx],cl
  40b1ed:	jb     0x40b1a2
  40b1ef:	mov    ebp,0x8f04e0ed
  40b1f4:	adc    eax,0xb1f9ec84
  40b1f9:	(bad)  
  40b1fa:	and    DWORD PTR [ecx],ecx
  40b1fc:	fwait
  40b1fd:	les    ecx,FWORD PTR [ecx+0x16]
  40b200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b201:	ins    BYTE PTR es:[edi],dx
  40b202:	dec    eax
  40b203:	bound  esp,QWORD PTR [edx+0x72]
  40b206:	push   bx
  40b208:	or     BYTE PTR [edi+esi*2-0x4a],0x7f
  40b20d:	fidiv  DWORD PTR [edi]
  40b20f:	sti    
  40b210:	cmp    esp,DWORD PTR [edx+0x52]
  40b213:	mov    cl,0x90
  40b215:	adc    bh,al
  40b217:	imul   edx,DWORD PTR [ebp-0x69],0x37
  40b21b:	and    al,0x5e
  40b21d:	sbb    DWORD PTR [esi+0x45],0x7f
  40b221:	mov    eax,ds:0xcbd6a13
  40b226:	fisubr DWORD PTR [esi+ebp*2+0x529bb8b4]
  40b22d:	ja     0x40b1ee
  40b22f:	jnp    0x40b1d0
  40b231:	inc    eax
  40b232:	adc    al,0x81
  40b234:	adc    bh,BYTE PTR [ecx]
  40b236:	in     eax,0xd8
  40b238:	hlt    
  40b239:	or     BYTE PTR [esi+0x198e6902],ch
  40b23f:	in     al,0xab
  40b241:	mov    ds:0xf831d470,eax
  40b246:	or     eax,0xc954015a
  40b24b:	xchg   BYTE PTR [eax],bh
  40b24d:	jle    0x40b1e2
  40b24f:	pop    eax
  40b250:	gs jne 0x40b27a
  40b253:	push   ds
  40b254:	sbb    eax,0x62b1776f
  40b259:	cmp    ch,cl
  40b25b:	mov    cs,WORD PTR [eax]
  40b25d:	or     edx,esi
  40b25f:	or     DWORD PTR [eax+0xe3e4892],edi
  40b265:	dec    esp
  40b266:	sub    BYTE PTR [ebx-0x2461a344],ah
  40b26c:	inc    ebp
  40b26d:	and    BYTE PTR [eax+0x71],ah
  40b270:	daa    
  40b271:	sub    al,0xe4
  40b273:	pop    ebp
  40b274:	push   ebp
  40b275:	std    
  40b276:	add    al,bl
  40b278:	sbb    BYTE PTR [ecx-0x49],bl
  40b27b:	lock in al,dx
  40b27d:	cmp    DWORD PTR [ebx-0x21],eax
  40b280:	mov    BYTE PTR [edi+0x1c],ah
  40b283:	jge    0x40b2ff
  40b285:	xchg   edx,eax
  40b286:	jo     0x40b228
  40b288:	mov    BYTE PTR [esi+eax*8],ah
  40b28b:	mov    dh,0x9e
  40b28d:	mul    BYTE PTR cs:[ebx]
  40b290:	add    esi,eax
  40b292:	push   esi
  40b293:	cmp    al,bl
  40b295:	sbb    BYTE PTR [esi+0x7e26ee18],0x58
  40b29c:	cmp    BYTE PTR [ecx+ecx*2-0x58a8cfbc],0xc7
  40b2a4:	jne    0x40b312
  40b2a6:	push   eax
  40b2a7:	sbb    al,0xa4
  40b2a9:	pop    ss
  40b2aa:	lahf   
  40b2ab:	jbe    0x40b2ed
  40b2ad:	in     al,0x21
  40b2af:	outs   dx,BYTE PTR ds:[esi]
  40b2b0:	or     eax,0x714b6e4
  40b2b5:	pop    ebx
  40b2b6:	scas   eax,DWORD PTR es:[edi]
  40b2b7:	or     DWORD PTR [edx],ebp
  40b2b9:	pop    esp
  40b2ba:	fcomp  QWORD PTR [ebx-0x60]
  40b2bd:	xchg   ecx,eax
  40b2be:	inc    ebx
  40b2bf:	pop    edi
  40b2c0:	mov    bl,0x69
  40b2c2:	add    esp,edx
  40b2c4:	rcr    esp,1
  40b2c6:	aad    0xd1
  40b2c8:	add    cl,ah
  40b2ca:	mov    esp,0xb9479eca
  40b2cf:	call   0x90f5:0x6d966b45
  40b2d6:	div    DWORD PTR [ecx-0x6e]
  40b2d9:	rol    BYTE PTR [edi+0x1457a91c],1
  40b2df:	imul   eax,edx,0xffffffd3
  40b2e2:	and    DWORD PTR [ebp-0x6a],ebp
  40b2e5:	cmp    eax,0xbe4ebd96
  40b2ea:	popf   
  40b2eb:	enter  0x193c,0xb9
  40b2ef:	push   ss
  40b2f0:	stc    
  40b2f1:	push   ss
  40b2f2:	push   ss
  40b2f3:	push   ebp
  40b2f4:	mov    ch,0xc2
  40b2f6:	push   ebp
  40b2f7:	fld    TBYTE PTR [ecx+esi*1-0x10]
  40b2fb:	adc    dl,BYTE PTR [ecx+0x26]
  40b2fe:	int3   
  40b2ff:	pop    ebp
  40b300:	call   0x6c7472f1
  40b305:	mov    ah,BYTE PTR [edx+0x6d]
  40b308:	in     al,0xab
  40b30a:	cmp    BYTE PTR [edx+0x7a],bl
  40b30d:	jg     0x40b35f
  40b30f:	scas   al,BYTE PTR es:[edi]
  40b310:	push   ebp
  40b311:	and    al,BYTE PTR [ecx-0x16125c45]
  40b317:	ficomp DWORD PTR [esi+esi*2]
  40b31a:	mov    esi,0x18264003
  40b31f:	icebp  
  40b320:	pop    ecx
  40b321:	push   0xffffffea
  40b323:	mov    esp,0x5a05e8a1
  40b328:	mov    edi,0x50f59c77
  40b32d:	xbegin 0x5f41f9ff
  40b333:	cmp    DWORD PTR [ebx-0x78],ecx
  40b336:	fdivr  QWORD PTR [edx-0x48b54668]
  40b33c:	test   eax,0x18076070
  40b341:	lock mov bh,0xf1
  40b344:	loop   0x40b33e
  40b346:	jmp    0x8ae4:0x55471de
  40b34d:	xchg   esp,eax
  40b34e:	and    al,0xe0
  40b350:	cmp    ecx,ebp
  40b352:	aaa    
  40b353:	loope  0x40b342
  40b355:	pusha  
  40b356:	jl     0x40b364
  40b358:	imul   ebp,DWORD PTR [edi+0x4f],0x52
  40b35c:	mov    bh,0xad
  40b35e:	nop
  40b35f:	ins    DWORD PTR es:[edi],dx
  40b360:	outs   dx,DWORD PTR ds:[esi]
  40b361:	pop    eax
  40b362:	xchg   ebp,eax
  40b363:	sbb    al,0x16
  40b365:	adc    DWORD PTR [ebp-0x6bffe0bc],eax
  40b36b:	lds    edx,FWORD PTR [ecx+0x1f]
  40b36e:	gs (bad) 
  40b370:	retf   
  40b371:	bound  ebx,QWORD PTR [ecx+0x7ccfc548]
  40b377:	loopne 0x40b3ce
  40b379:	gs xchg ah,dh
  40b37c:	mov    ?,WORD PTR [ebx]
  40b37e:	add    esp,eax
  40b380:	push   ds
  40b381:	jo     0x40b360
  40b383:	ss je  0x40b3bd
  40b386:	fcmovnbe st,st(1)
  40b388:	out    0xa1,eax
  40b38a:	cmp    ah,dh
  40b38c:	shr    ch,cl
  40b38e:	inc    eax
  40b38f:	dec    edx
  40b390:	dec    ecx
  40b391:	arpl   WORD PTR [edi],sp
  40b393:	sub    eax,0xda9846a8
  40b398:	adc    edi,edi
  40b39a:	mov    ds,WORD PTR ds:0x70421161
  40b3a0:	ret    0x674f
  40b3a3:	or     ebp,DWORD PTR [ebx+0x2d]
  40b3a6:	mov    ebp,0x6db802af
  40b3ab:	jae    0x40b3a0
  40b3ad:	push   edx
  40b3ae:	popa   
  40b3af:	sahf   
  40b3b0:	fisttp DWORD PTR cs:[eax]
  40b3b3:	data16 fmul st(1),st
  40b3b6:	push   0x9d8b994f
  40b3bb:	out    0xa8,al
  40b3bd:	ficomp WORD PTR [ebp-0x59]
  40b3c0:	adc    al,0xed
  40b3c2:	cmc    
  40b3c3:	arpl   bx,cx
  40b3c5:	ins    BYTE PTR es:[edi],dx
  40b3c6:	xchg   esp,eax
  40b3c7:	jae    0x40b436
  40b3c9:	outs   dx,DWORD PTR ds:[esi]
  40b3ca:	mov    esp,0x743b10a8
  40b3cf:	les    edx,FWORD PTR [edi+0x793f7f68]
  40b3d5:	lock pop ss
  40b3d7:	hlt    
  40b3d8:	mov    ebp,edi
  40b3da:	xor    al,0x1b
  40b3dc:	sub    dl,BYTE PTR [ebp+eax*1-0x1b12c913]
  40b3e3:	xor    ecx,ebp
  40b3e5:	enter  0x1688,0x9f
  40b3e9:	nop    ebx
  40b3ec:	xchg   edx,eax
  40b3ed:	fist   WORD PTR [edx-0x4c5106c3]
  40b3f3:	mov    ds:0xe9a3e1e5,al
  40b3f8:	push   ds
  40b3f9:	mov    al,0x24
  40b3fb:	xchg   edi,eax
  40b3fc:	daa    
  40b3fd:	cmp    cl,BYTE PTR [esi+ebp*1-0x3b]
  40b401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b402:	aad    0x46
  40b404:	xor    bl,BYTE PTR [ebx]
  40b406:	ss cmc 
  40b408:	add    dh,ch
  40b40a:	jl     0x40b3b0
  40b40c:	mov    ah,0x59
  40b40e:	adc    eax,0x7484e4f5
  40b413:	mov    eax,0x78dd46d0
  40b418:	popf   
  40b419:	dec    esp
  40b41a:	mov    dl,0xc6
  40b41c:	cmp    BYTE PTR ds:0x2fda3493,al
  40b422:	ror    ebx,0xfe
  40b425:	leave  
  40b426:	sub    al,0xa6
  40b428:	fldenv es:[esi]
  40b42b:	std    
  40b42c:	xor    ah,dl
  40b42e:	not    BYTE PTR [edi]
  40b430:	scas   al,BYTE PTR es:[edi]
  40b431:	mov    esi,0x2b579a9f
  40b436:	in     al,0x62
  40b438:	(bad)  
  40b439:	mov    WORD PTR [ecx+0x41],?
  40b43c:	sub    ah,cl
  40b43e:	(bad)  [ebx+0x2b]
  40b441:	ins    BYTE PTR es:[edi],dx
  40b442:	jb     0x40b4a8
  40b444:	xchg   edi,eax
  40b445:	jnp    0x40b40b
  40b447:	cmp    esi,ecx
  40b449:	or     dh,bh
  40b44b:	push   edi
  40b44c:	ret    0x1118
  40b44f:	jmp    0x32f6a79d
  40b454:	repnz mov eax,ds:0x78232b8c
  40b45a:	cmp    DWORD PTR [edi],esp
  40b45c:	lock pop ebp
  40b45e:	xchg   eax,ebx
  40b460:	imul   edi,DWORD PTR [eax-0x3461492b],0xcc6a9e84
  40b46a:	outs   dx,BYTE PTR ds:[esi]
  40b46b:	jmp    0x1e8b51a8
  40b470:	push   cs
  40b471:	xacquire xchg DWORD PTR [esi+0x162a7a26],esi
  40b478:	ror    BYTE PTR [eax-0x7e20e822],0x3e
  40b47f:	push   esi
  40b480:	fld    QWORD PTR [eax+0x13]
  40b483:	(bad)  
  40b484:	cmp    ebx,DWORD PTR [edx+0x7c]
  40b487:	test   edx,ebp
  40b489:	sbb    eax,0xd0059a7c
  40b48e:	jb     0x40b4d8
  40b490:	fisubr DWORD PTR [eax]
  40b492:	call   0xae47:0x91ae25f7
  40b499:	jno    0x40b4ae
  40b49b:	push   cs
  40b49c:	(bad)
  40b49f:	shr    eax,0xb4
  40b4a2:	in     al,dx
  40b4a3:	xor    eax,0xa29a34d
  40b4a8:	pop    ebx
  40b4a9:	add    DWORD PTR [eax+ebx*1+0x28],0xcc1534dd
  40b4b1:	mov    eax,ds:0x67ecfc11
  40b4b6:	push   edi
  40b4b7:	xchg   esi,eax
  40b4b8:	sub    ah,cl
  40b4ba:	int3   
  40b4bb:	imul   edx,DWORD PTR [eax+ecx*4+0x7c08bf0b],0x1a17285a
  40b4c6:	int    0xc5
  40b4c8:	and    DWORD PTR [ebp-0x59b0be30],ecx
  40b4ce:	or     al,0x21
  40b4d0:	adc    eax,0xd880ada4
  40b4d5:	sbb    bh,BYTE PTR [ebp+0x37bcc800]
  40b4db:	and    al,0xf0
  40b4dd:	cmp    ebx,DWORD PTR [ebx-0x52542d21]
  40b4e3:	aam    0x18
  40b4e5:	stc    
  40b4e6:	dec    ecx
  40b4e7:	clc    
  40b4e8:	adc    BYTE PTR [ebp+0x649309d5],al
  40b4ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ef:	jl     0x40b4c2
  40b4f1:	jmp    0xba64e0ed
  40b4f6:	add    cl,BYTE PTR [ebp+ebx*8-0x7a]
  40b4fa:	pop    ss
  40b4fb:	pushf  
  40b4fc:	leave  
  40b4fd:	mov    esp,DWORD PTR [edx-0x3bbfeb1a]
  40b503:	adc    BYTE PTR [esi+0x1fe9ff29],0x5b
  40b50a:	jmp    0x3ae5:0xc1a935a
  40b511:	or     eax,0x941cb0c5
  40b516:	lods   al,BYTE PTR cs:[esi]
  40b518:	sbb    ebx,DWORD PTR [ecx+0x59]
  40b51b:	cmp    edi,DWORD PTR [ecx+0x68eafbee]
  40b521:	pop    esi
  40b522:	aad    0xa2
  40b524:	sub    ch,0x56
  40b527:	(bad)  
  40b528:	push   esi
  40b529:	loop   0x40b51c
  40b52b:	hlt    
  40b52c:	push   es
  40b52d:	xchg   DWORD PTR [esi-0x2b],ebp
  40b530:	pop    ds
  40b531:	jno    0x40b4bd
  40b533:	shl    BYTE PTR ds:[edx],0x4
  40b537:	or     eax,0x74be6af9
  40b53c:	adc    DWORD PTR [edx+esi*8+0x7045fb3a],0xffffffe9
  40b544:	mov    eax,ds:0x29e29c7d
  40b549:	push   ss
  40b54a:	add    ebx,esi
  40b54c:	push   ebp
  40b54d:	loopne 0x40b543
  40b54f:	push   ss
  40b550:	pop    esp
  40b551:	lea    eax,[ecx]
  40b553:	pop    ebx
  40b554:	cmc    
  40b555:	jae    0x40b56b
  40b557:	inc    edi
  40b558:	out    dx,eax
  40b559:	(bad)  
  40b55a:	out    0xba,al
  40b55c:	ins    DWORD PTR es:[edi],dx
  40b55d:	mov    edi,0x99e5f5c
  40b562:	push   ds
  40b563:	dec    ecx
  40b564:	push   cs
  40b565:	jae    0x40b573
  40b567:	dec    ebx
  40b568:	jg     0x40b539
  40b56a:	mul    BYTE PTR [edi+0x72]
  40b56d:	outs   dx,BYTE PTR ds:[esi]
  40b56e:	inc    edx
  40b56f:	pushf  
  40b570:	jg     0x40b524
  40b572:	push   edx
  40b573:	shl    DWORD PTR [ecx-0x4d],1
  40b576:	inc    edi
  40b577:	cli    
  40b578:	(bad)  
  40b579:	pop    esi
  40b57a:	and    DWORD PTR [edi-0x793f981d],ebx
  40b580:	sub    BYTE PTR [esi-0x4ba003ec],0xb8
  40b587:	sbb    eax,0xcee12330
  40b58c:	aam    0xa8
  40b58e:	fwait
  40b58f:	div    BYTE PTR [ebx]
  40b591:	xlat   BYTE PTR ds:[ebx]
  40b592:	or     al,0x46
  40b594:	shl    DWORD PTR [edi],0xf3
  40b597:	adc    eax,DWORD PTR [edx]
  40b599:	cmp    ch,BYTE PTR [edx]
  40b59b:	aad    0x77
  40b59d:	icebp  
  40b59e:	cmp    esp,DWORD PTR [ecx]
  40b5a0:	xchg   ebp,eax
  40b5a1:	cwde   
  40b5a2:	fadd   st,st(3)
  40b5a4:	mov    al,0x41
  40b5a6:	popf   
  40b5a7:	inc    esp
  40b5a8:	lods   al,BYTE PTR ds:[esi]
  40b5a9:	gs addr16 dec ebx
  40b5ac:	pop    es
  40b5ad:	inc    ebx
  40b5ae:	pop    eax
  40b5af:	(bad)
  40b5b3:	cmc    
  40b5b4:	data16 sub al,0x1b
  40b5b7:	jp     0x40b5a0
  40b5b9:	mov    edi,0xf51f80f0
  40b5be:	loope  0x40b5b3
  40b5c0:	sbb    ch,BYTE PTR [edx-0x3bd2c970]
  40b5c6:	test   eax,0x2438242c
  40b5cb:	test   DWORD PTR [ebp-0x79],edx
  40b5ce:	pop    esp
  40b5cf:	xchg   edx,eax
  40b5d0:	dec    esi
  40b5d1:	lds    edx,FWORD PTR [esi+0x4f3cba33]
  40b5d7:	jecxz  0x40b607
  40b5d9:	ins    BYTE PTR es:[edi],dx
  40b5da:	push   esi
  40b5db:	and    DWORD PTR [ebp-0x53baa3d8],esi
  40b5e1:	dec    ebx
  40b5e2:	xchg   ebp,eax
  40b5e3:	cmp    cl,bl
  40b5e5:	imul   edx,DWORD PTR [ecx+0x7740866f],0xffffffa7
  40b5ec:	add    ch,BYTE PTR [edi]
  40b5ee:	icebp  
  40b5ef:	fwait
  40b5f0:	fwait
  40b5f1:	jo     0x40b5f6
  40b5f3:	mov    eax,0x31c026e8
  40b5f8:	pop    ecx
  40b5f9:	shr    BYTE PTR ds:0xf7615e42,cl
  40b5ff:	fwait
  40b600:	or     al,BYTE PTR [esi+ecx*4]
  40b603:	inc    edi
  40b604:	jl     0x40b5b7
  40b606:	push   ds
  40b607:	pop    ebp
  40b608:	mov    ecx,0x1c0c96c1
  40b60d:	xchg   ebx,eax
  40b60e:	jno    0x40b65a
  40b610:	fwait
  40b611:	popf   
  40b612:	adc    BYTE PTR [edx+ecx*1-0xf],cl
  40b616:	mov    al,ds:0xa82b7fe2
  40b61b:	out    dx,eax
  40b61c:	outs   dx,DWORD PTR ds:[esi]
  40b61d:	add    DWORD PTR [edi],edi
  40b61f:	mov    BYTE PTR [edi-0x44],ah
  40b622:	push   ebx
  40b623:	arpl   WORD PTR [edi+0x10c5959b],bx
  40b629:	adc    DWORD PTR [ebx-0x12663dcc],edx
  40b62f:	imul   ebx,DWORD PTR [esi+0x2e],0x7a
  40b633:	sub    DWORD PTR [edi+0x2b],eax
  40b636:	pop    DWORD PTR [ebp+esi*4-0x24]
  40b63a:	(bad)  
  40b63b:	xchg   esi,eax
  40b63c:	pop    ebp
  40b63d:	pop    es
  40b63e:	xor    ebp,DWORD PTR [edx]
  40b640:	pop    ecx
  40b641:	nop
  40b642:	and    eax,0x398f5b81
  40b647:	fisubr DWORD PTR [eax]
  40b649:	mov    esi,0xe45f6c85
  40b64e:	inc    ecx
  40b64f:	ret    
  40b650:	outs   dx,BYTE PTR ds:[esi]
  40b651:	mov    bh,0xb0
  40b653:	mul    DWORD PTR [edx+ebp*4+0xa]
  40b657:	repnz aam 0x41
  40b65a:	lods   eax,DWORD PTR ds:[esi]
  40b65b:	into   
  40b65c:	xchg   ecx,eax
  40b65d:	ins    BYTE PTR es:[edi],dx
  40b65e:	dec    edx
  40b65f:	lods   al,BYTE PTR ds:[esi]
  40b660:	inc    eax
  40b661:	inc    ecx
  40b662:	sub    al,0xc0
  40b664:	jg     0x40b5eb
  40b666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b667:	mov    edx,0x7e96e909
  40b66c:	fisttp DWORD PTR [esp+ebp*2+0xbab5ac0]
  40b673:	xchg   edx,eax
  40b674:	sahf   
  40b675:	ret    
  40b676:	jmp    DWORD PTR [ebx]
  40b678:	shl    BYTE PTR [ecx-0x1e3d1c8d],1
  40b67e:	push   es
  40b67f:	and    al,0xf5
  40b681:	ins    DWORD PTR es:[edi],dx
  40b682:	rol    DWORD PTR [ebp-0x7fbaa5eb],1
  40b688:	fld    TBYTE PTR [ecx+ecx*1+0x2ff504f6]
  40b68f:	add    bl,BYTE PTR [esi-0x5abd39e0]
  40b695:	into   
  40b696:	and    al,0x6f
  40b698:	xor    BYTE PTR [eax-0x10],ah
  40b69b:	int3   
  40b69c:	sbb    eax,0x19824fef
  40b6a1:	adc    al,0xb6
  40b6a3:	ins    BYTE PTR es:[edi],dx
  40b6a4:	fstp   TBYTE PTR [eax]
  40b6a6:	dec    eax
  40b6a7:	mov    dl,0xfb
  40b6a9:	das    
  40b6aa:	cmc    
  40b6ab:	dec    edx
  40b6ac:	lds    esi,FWORD PTR [eax+ebp*8]
  40b6af:	fnstcw WORD PTR [eax-0x7c8091ab]
  40b6b5:	bound  ebx,QWORD PTR [edx+0x6e]
  40b6b8:	sbb    bh,BYTE PTR [eax+eiz*4]
  40b6bb:	fwait
  40b6bc:	pop    eax
  40b6bd:	in     eax,dx
  40b6be:	jae    0x40b69b
  40b6c0:	mov    BYTE PTR [esi],0x73
  40b6c3:	lods   al,BYTE PTR ds:[esi]
  40b6c4:	jle    0x40b708
  40b6c6:	mov    edx,0x778d31b9
  40b6cb:	dec    ebx
  40b6cc:	idiv   BYTE PTR [ecx+ecx*2]
  40b6cf:	jbe    0x40b6c2
  40b6d1:	cmc    
  40b6d2:	adc    dl,0x6
  40b6d5:	cmc    
  40b6d6:	sti    
  40b6d7:	sbb    BYTE PTR [eax-0x19a6d93d],al
  40b6dd:	push   cs
  40b6de:	mov    ah,0x11
  40b6e0:	pop    ebp
  40b6e1:	xor    dh,BYTE PTR [ebx-0xa22e504]
  40b6e7:	jbe    0x40b6d0
  40b6e9:	xchg   ebp,eax
  40b6ea:	in     eax,0xf3
  40b6ec:	inc    edi
  40b6ed:	enter  0x802e,0xbf
  40b6f1:	(bad)  
  40b6f3:	psubd  mm4,QWORD PTR [esi+ecx*4+0x20978989]
  40b6fb:	popa   
  40b6fc:	stc    
  40b6fd:	mov    eax,ds:0x5a72191f
  40b702:	mov    esi,0xbcf2ae92
  40b707:	add    eax,DWORD PTR [eax]
  40b709:	mov    ch,BYTE PTR [ebp+0x5b2be126]
  40b70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b710:	pop    esi
  40b711:	push   0x8648a83b
  40b716:	pushf  
  40b717:	sbb    ch,BYTE PTR [esi-0x6b]
  40b71a:	pop    ebp
  40b71b:	cwde   
  40b71c:	sub    ch,BYTE PTR [esi]
  40b71e:	pop    es
  40b71f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b720:	cmp    dh,BYTE PTR [edi-0x2ed9e5d8]
  40b726:	setne  BYTE PTR [ecx-0x3]
  40b72a:	fidivr WORD PTR [eax-0x104d38df]
  40b730:	leave  
  40b731:	or     eax,0x371c5e21
  40b736:	jmp    0x2fd2fd9
  40b73b:	aaa    
  40b73c:	mov    ebp,0xa3562618
  40b741:	push   esi
  40b742:	sbb    al,0xb
  40b744:	iret   
  40b745:	shl    eax,1
  40b747:	out    dx,eax
  40b748:	shl    BYTE PTR [edx+0x444bb10d],1
  40b74e:	pusha  
  40b74f:	arpl   WORD PTR [esi-0x2b],sp
  40b752:	pop    ebx
  40b753:	push   eax
  40b754:	xchg   esi,eax
  40b755:	mov    dh,0x9b
  40b757:	and    edx,DWORD PTR [edx+0x5a]
  40b75a:	add    al,0xe4
  40b75c:	sub    al,0xc5
  40b75e:	fs add al,0x80
  40b761:	clc    
  40b762:	adc    ah,BYTE PTR [ebx+eiz*2]
  40b765:	xchg   ebx,eax
  40b766:	push   ebp
  40b767:	(bad)  
  40b768:	test   cl,dl
  40b76a:	daa    
  40b76b:	mov    esi,0xd3f627ea
  40b770:	mov    eax,ds:0x273c0c49
  40b775:	rol    BYTE PTR [ecx+esi*4],cl
  40b778:	inc    ebp
  40b779:	jo     0x40b7e5
  40b77b:	mov    cl,0xd6
  40b77d:	sbb    eax,0x930f16ce
  40b782:	xor    eax,0x68a9319b
  40b787:	lahf   
  40b788:	dec    ebp
  40b789:	jnp    0x40b7da
  40b78b:	scas   al,BYTE PTR es:[edi]
  40b78c:	mov    ebx,0xd1020cce
  40b791:	dec    ebx
  40b792:	test   al,0xdd
  40b794:	jo     0x40b7cc
  40b796:	add    eax,0x4dc93c5b
  40b79b:	das    
  40b79c:	push   ebp
  40b79d:	xchg   edx,eax
  40b79e:	imul   edi,DWORD PTR [ebp-0x6f],0xce975eee
  40b7a5:	push   edi
  40b7a6:	fisub  DWORD PTR [ecx+0x323c3122]
  40b7ac:	sub    eax,DWORD PTR [esp+ebx*8-0x557873cd]
  40b7b3:	add    dl,BYTE PTR [edx+0x3b]
  40b7b6:	pop    ss
  40b7b7:	arpl   WORD PTR [eax+0x5d10003d],bx
  40b7bd:	ja     0x40b787
  40b7bf:	mov    ds:0x37674f25,al
  40b7c4:	(bad)  
  40b7c5:	nop
  40b7c6:	inc    ebp
  40b7c7:	mov    ss,edi
  40b7c9:	inc    ebx
  40b7ca:	inc    esp
  40b7cb:	call   0xa6221e8e
  40b7d0:	xchg   ebp,eax
  40b7d1:	or     BYTE PTR [edi],cl
  40b7d3:	cdq    
  40b7d4:	gs push edi
  40b7d6:	stos   BYTE PTR es:[edi],al
  40b7d7:	ror    edi,cl
  40b7d9:	mov    ah,0x67
  40b7db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7dc:	xor    ah,bh
  40b7de:	and    DWORD PTR [eax-0x24],esp
  40b7e1:	or     DWORD PTR [edi],edx
  40b7e3:	push   edx
  40b7e4:	rcl    BYTE PTR [ecx+ecx*8+0x4e35836f],0x93
  40b7ec:	out    dx,eax
  40b7ed:	out    dx,al
  40b7ee:	xor    al,0x76
  40b7f0:	pop    eax
  40b7f1:	add    BYTE PTR [edi],0x99
  40b7f4:	xlat   BYTE PTR ds:[ebx]
  40b7f5:	add    al,0x1e
  40b7f7:	xor    DWORD PTR [edx],eax
  40b7f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7fa:	push   ss
  40b7fb:	ret    0x7a63
  40b7fe:	or     cl,bl
  40b800:	pushf  
  40b801:	jg     0x40b877
  40b803:	mov    edi,0x8ad6ff4c
  40b808:	add    ebp,DWORD PTR ds:0xc0d08d42
  40b80e:	lods   al,BYTE PTR ds:[esi]
  40b80f:	jl     0x40b7a2
  40b811:	data16 fild DWORD PTR [ecx-0x58fadc9a]
  40b818:	xor    BYTE PTR [edi-0x58b3493],ch
  40b81e:	jmp    DWORD PTR [ebx+0x279058aa]
  40b824:	or     edi,DWORD PTR [ebp+0x6948be89]
  40b82a:	je     0x40b868
  40b82c:	stos   BYTE PTR es:[edi],al
  40b82d:	mov    edi,0xb9bc26a1
  40b832:	xor    BYTE PTR [ebx-0x60],0xed
  40b836:	retw   
  40b838:	sub    esi,DWORD PTR [edi-0x2665d521]
  40b83e:	fistp  DWORD PTR [eax]
  40b840:	push   ss
  40b841:	in     eax,0x24
  40b843:	adc    BYTE PTR [ecx],dl
  40b845:	loope  0x40b850
  40b847:	mov    ebx,0xc199b83b
  40b84c:	iret   
  40b84d:	stos   BYTE PTR es:[edi],al
  40b84e:	in     eax,dx
  40b84f:	loope  0x40b8cc
  40b851:	pop    ebp
  40b852:	fdivp  st(7),st
  40b854:	lods   al,BYTE PTR ds:[esi]
  40b855:	add    BYTE PTR ds:0x55cc82f6,ch
  40b85b:	inc    edi
  40b85c:	mov    esi,0x891abd47
  40b861:	mov    bh,BYTE PTR [ebx+0x24cf59b0]
  40b867:	ins    BYTE PTR es:[edi],dx
  40b868:	ins    DWORD PTR es:[edi],dx
  40b869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b86a:	mov    esp,0x6d1d6ae4
  40b86f:	aas    
  40b870:	push   ebx
  40b871:	jno    0x40b8c4
  40b873:	pop    es
  40b874:	pop    ebp
  40b875:	mov    ebp,0xdb9d1932
  40b87a:	ins    DWORD PTR es:[edi],dx
  40b87b:	sbb    DWORD PTR [edi-0xa],eax
  40b87e:	and    DWORD PTR [edi-0x5d],esp
  40b881:	adc    DWORD PTR [eax-0x4f],esp
  40b884:	(bad)  
  40b886:	xor    al,0xb2
  40b888:	imul   eax,DWORD PTR [ebp-0x4d],0x1c030956
  40b88f:	mov    dl,ch
  40b891:	adc    bl,cl
  40b893:	cmp    eax,0x19083614
  40b898:	and    esi,eax
  40b89a:	daa    
  40b89b:	shl    BYTE PTR [eax],1
  40b89d:	dec    edi
  40b89e:	adc    ecx,eax
  40b8a0:	push   esi
  40b8a1:	or     ebx,edx
  40b8a3:	mov    ecx,DWORD PTR [eax-0x9]
  40b8a6:	sahf   
  40b8a7:	inc    BYTE PTR [esi-0x76e632ff]
  40b8ad:	(bad)  
  40b8ae:	mov    WORD PTR [edi],?
  40b8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b1:	xor    WORD PTR [edx-0x62],cx
  40b8b5:	add    BYTE PTR [ecx+ebx*1],dh
  40b8b8:	aam    0xe6
  40b8ba:	(bad)  
  40b8bb:	cli    
  40b8bc:	xor    al,0x4d
  40b8be:	pop    ebx
  40b8bf:	in     eax,0x9a
  40b8c1:	xor    dl,BYTE PTR [ebp-0x7999848c]
  40b8c7:	xor    DWORD PTR [eax-0x13],esi
  40b8ca:	popa   
  40b8cb:	cdq    
  40b8cc:	repz dec eax
  40b8ce:	xor    esp,ebx
  40b8d0:	test   al,0xa
  40b8d2:	mov    ebx,gs
  40b8d4:	fsub   st(1),st
  40b8d6:	fstp   QWORD PTR [ebp-0x11]
  40b8d9:	mov    ah,0xe0
  40b8db:	and    DWORD PTR [edi-0x64f5b9d0],edi
  40b8e1:	push   edx
  40b8e2:	aas    
  40b8e3:	push   esp
  40b8e4:	lea    esp,[edx]
  40b8e6:	lods   al,BYTE PTR ds:[esi]
  40b8e7:	test   eax,0x336f409a
  40b8ec:	into   
  40b8ed:	sbb    DWORD PTR [esi],ebx
  40b8ef:	inc    esi
  40b8f0:	mov    bh,0x47
  40b8f2:	sub    eax,DWORD PTR [esi-0x40]
  40b8f5:	and    BYTE PTR [eax-0x20],cl
  40b8f8:	and    al,al
  40b8fa:	cmp    bh,BYTE PTR [eax]
  40b8fc:	pop    ecx
  40b8fd:	sbb    ebp,edi
  40b8ff:	pop    es
  40b900:	push   edx
  40b901:	iret   
  40b902:	pop    esi
  40b903:	(bad)  
  40b904:	mov    eax,es
  40b906:	out    0x69,eax
  40b908:	in     eax,0x4f
  40b90a:	test   al,0x7c
  40b90c:	mov    WORD PTR [eax+ebx*1+0x78cb2e8a],es
  40b913:	in     al,0x3c
  40b915:	pusha  
  40b916:	frstor [edi-0x67e9866c]
  40b91c:	xor    eax,0x8b9c4d85
  40b921:	mov    cl,0x61
  40b923:	pop    ebp
  40b924:	fild   QWORD PTR [ecx+edi*2+0x49]
  40b928:	xor    al,0x31
  40b92a:	repz cmp BYTE PTR [eax],dl
  40b92d:	jo     0x40b9a7
  40b92f:	loope  0x40b917
  40b931:	outs   dx,BYTE PTR ds:[esi]
  40b932:	sub    esp,DWORD PTR [edx-0x138dbcdb]
  40b938:	lahf   
  40b939:	fwait
  40b93a:	std    
  40b93b:	cwde   
  40b93c:	sub    bl,BYTE PTR [ebx+eiz*1-0x740ee41b]
  40b943:	mov    esp,0xf75b0b23
  40b948:	xor    cl,0xd6
  40b94b:	add    bl,BYTE PTR [eax]
  40b94d:	push   edx
  40b94e:	jle    0x40b981
  40b950:	jmp    0x40b8ea
  40b952:	daa    
  40b953:	lds    ebx,FWORD PTR [ebx]
  40b955:	xchg   ebx,eax
  40b956:	dec    edi
  40b957:	inc    ecx
  40b958:	into   
  40b959:	test   eax,0x94596234
  40b95e:	aas    
  40b95f:	test   al,0x22
  40b961:	push   DWORD PTR [ebx]
  40b963:	push   ebx
  40b964:	mov    BYTE PTR [eax+0x1ba432d7],dh
  40b96a:	adc    al,0x7a
  40b96c:	dec    esi
  40b96d:	loopne 0x40b95f
  40b96f:	fbld   TBYTE PTR [ecx+edi*1]
  40b972:	cmp    bl,BYTE PTR [edx+0x62]
  40b975:	jno    0x40b9b2
  40b977:	(bad)  
  40b978:	prefetch BYTE PTR ds:0x7556fcf1
  40b97f:	test   cl,cl
  40b981:	xchg   esi,eax
  40b982:	mov    edx,0x9643cc9c
  40b987:	push   cs
  40b988:	push   esp
  40b989:	xor    DWORD PTR [eax+0x6f],esp
  40b98c:	ret    0x1fbc
  40b98f:	cmp    BYTE PTR [edx+0x6aaa1c10],dh
  40b995:	test   eax,0xa6745690
  40b99a:	clc    
  40b99b:	cmp    ch,al
  40b99d:	in     al,dx
  40b99e:	xchg   ebx,eax
  40b99f:	scas   al,BYTE PTR es:[edi]
  40b9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9a1:	mov    edi,0xafa7a825
  40b9a6:	retf   
  40b9a7:	cmp    esp,DWORD PTR [eax-0x2baaafdf]
  40b9ad:	nop
  40b9ae:	cdq    
  40b9af:	fucom  st(0)
  40b9b1:	scas   al,BYTE PTR es:[edi]
  40b9b2:	ja     0x40b96d
  40b9b4:	arpl   WORD PTR [ecx],cx
  40b9b6:	or     eax,0xa79b2eb6
  40b9bb:	sbb    eax,0xdc5f1cf3
  40b9c0:	jmp    0xd1cf2af9
  40b9c5:	inc    esi
  40b9c6:	mov    dl,0x84
  40b9c8:	in     al,0x28
  40b9ca:	sub    al,0x4e
  40b9cc:	jne    0x40b96d
  40b9ce:	gs xchg edx,eax
  40b9d0:	xchg   esp,eax
  40b9d1:	jnp    0x40ba3a
  40b9d3:	test   eax,0x59a1a110
  40b9d8:	mov    ebp,0x91fbf4da
  40b9dd:	cmp    eax,0xc031efc0
  40b9e2:	sbb    BYTE PTR [eax-0x68978430],0x6b
  40b9e9:	aam    0x3f
  40b9eb:	sub    ebp,esi
  40b9ed:	loop   0x40ba52
  40b9ef:	pop    eax
  40b9f0:	ins    BYTE PTR es:[edi],dx
  40b9f1:	imul   ecx,edi,0xffffff9f
  40b9f4:	cmp    ah,BYTE PTR [esp+ebp*8-0x44e043da]
  40b9fb:	int3   
  40b9fc:	jecxz  0x40b9a7
  40b9fe:	pop    esi
  40b9ff:	or     DWORD PTR [eax+0x1870d5a6],ebx
  40ba05:	sbb    DWORD PTR [edx],edi
  40ba07:	sahf   
  40ba08:	and    BYTE PTR [ebx-0x6545d039],bl
  40ba0e:	aam    0xd4
  40ba10:	push   edx
  40ba11:	sub    eax,0xec8dac53
  40ba16:	aam    0x46
  40ba18:	ror    BYTE PTR [ebp-0x5b97b367],0xaf
  40ba1f:	or     eax,0xecf31b01
  40ba24:	mov    esi,0xe6630fec
  40ba29:	pop    ecx
  40ba2a:	push   ebx
  40ba2b:	push   esi
  40ba2c:	lahf   
  40ba2d:	retf   0x9c81
  40ba30:	adc    eax,0xdb23ec1f
  40ba35:	cmp    edi,DWORD PTR [esi-0x68e36c08]
  40ba3b:	or     BYTE PTR [edx],cl
  40ba3d:	mov    DWORD PTR [ebx+0xd],edx
  40ba40:	stos   DWORD PTR es:[edi],eax
  40ba41:	repnz mov bh,0x7e
  40ba44:	mov    ecx,0xb65ba58b
  40ba49:	mov    ebp,0xbaffd551
  40ba4e:	les    esi,FWORD PTR [ebp+0x1b894201]
  40ba54:	pshufw mm6,QWORD PTR [ecx],0x66
  40ba58:	call   0x42fbd886
  40ba5d:	push   0x83fb196e
  40ba62:	mov    eax,DWORD PTR [ecx-0x4a]
  40ba65:	es jo  0x40ba07
  40ba68:	xchg   BYTE PTR [ebx],ch
  40ba6a:	std    
  40ba6b:	ret    
  40ba6c:	push   esi
  40ba6d:	sub    al,0x57
  40ba6f:	sbb    eax,0xe2767dab
  40ba74:	jno    0x40baa2
  40ba76:	jp     0x40ba40
  40ba78:	push   ss
  40ba79:	push   edi
  40ba7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba7b:	cmc    
  40ba7c:	lock fidiv WORD PTR [esi+0x0]
  40ba80:	out    0x2c,eax
  40ba82:	in     al,dx
  40ba83:	or     al,0x24
  40ba85:	cmp    al,0x8b
  40ba87:	fmul   DWORD PTR [ecx+ecx*8]
  40ba8a:	scas   eax,DWORD PTR es:[edi]
  40ba8b:	push   0x68a48949
  40ba90:	daa    
  40ba91:	div    DWORD PTR [ecx]
  40ba93:	mov    ebx,0x2594ca45
  40ba98:	xchg   ah,bh
  40ba9a:	sbb    BYTE PTR [ebp-0x5494228e],dl
  40baa0:	test   al,0xd3
  40baa2:	add    edx,ebp
  40baa4:	call   0x9970570c
  40baa9:	xchg   eax,edx
  40baab:	jg     0x40baea
  40baad:	or     BYTE PTR [ebp+0x436d7f72],dh
  40bab3:	repnz dec eax
  40bab5:	aam    0xb3
  40bab7:	pop    edx
  40bab8:	and    eax,0xc99bcb43
  40babd:	xchg   ebx,eax
  40babe:	outs   dx,BYTE PTR ds:[esi]
  40babf:	lds    eax,FWORD PTR [esi-0x7a23d849]
  40bac5:	inc    eax
  40bac6:	pop    edi
  40bac7:	jl     0x40bb38
  40bac9:	dec    ecx
  40baca:	jmp    0x1a0e:0x5729679e
  40bad1:	inc    esp
  40bad2:	scas   al,BYTE PTR es:[edi]
  40bad3:	lods   eax,DWORD PTR ds:[esi]
  40bad4:	popa   
  40bad5:	outs   dx,DWORD PTR ds:[esi]
  40bad6:	xchg   ecx,eax
  40bad7:	popf   
  40bad8:	push   cs
  40bad9:	jbe    0x99f032f3
  40badf:	and    eax,0xc91ea681
  40bae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bae5:	jne    0x40ba9c
  40bae7:	test   BYTE PTR [eax+eax*4],ah
  40baea:	or     bl,BYTE PTR [ecx-0x8]
  40baed:	jbe    0x40bade
  40baef:	scas   eax,DWORD PTR es:[edi]
  40baf0:	mov    WORD PTR [ebx-0x77],es
  40baf3:	push   edi
  40baf4:	or     BYTE PTR ds:0xe4870f0b,ch
  40bafa:	ss and ch,bl
  40bafd:	stos   BYTE PTR es:[edi],al
  40bafe:	call   0x3b048b0a
  40bb03:	jb     0x40baf2
  40bb05:	cli    
  40bb06:	call   FWORD PTR [ebp-0x765fa0f1]
  40bb0c:	xor    bh,ah
  40bb0e:	dec    ebx
  40bb0f:	or     al,0x8d
  40bb11:	xor    eax,0x648f0f91
  40bb16:	cwde   
  40bb17:	les    esi,FWORD PTR [ecx]
  40bb19:	ss xchg ebx,eax
  40bb1b:	inc    esi
  40bb1c:	push   esp
  40bb1d:	sub    DWORD PTR [ebx-0x14732485],eax
  40bb23:	mov    bl,0xff
  40bb25:	cwde   
  40bb26:	sbb    esi,ebp
  40bb28:	mov    dh,0xae
  40bb2a:	mov    ebx,0x5db50a42
  40bb2f:	or     BYTE PTR [ecx+edi*2],0x9f
  40bb33:	retf   
  40bb34:	loop   0x40bb9b
  40bb36:	mov    dh,0xae
  40bb38:	mov    ecx,0x8072a64d
  40bb3d:	xchg   edi,eax
  40bb3e:	jns    0x40bb31
  40bb40:	mov    ebp,0xddf680ad
  40bb45:	xchg   esi,eax
  40bb46:	jecxz  0x40bb82
  40bb48:	ss adc al,0xe2
  40bb4b:	mov    ebx,0x1bc35b12
  40bb50:	pop    ds
  40bb51:	adc    DWORD PTR [edi],esp
  40bb53:	pop    ss
  40bb54:	dec    esi
  40bb55:	das    
  40bb56:	mov    ecx,0x1a1f03f7
  40bb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb5c:	mov    bh,BYTE PTR [ecx]
  40bb5e:	in     eax,0xfd
  40bb60:	sysenter 
  40bb62:	or     ah,BYTE PTR ds:0x6d846adc
  40bb68:	cmp    ecx,DWORD PTR [esi+0x3c]
  40bb6b:	pop    esi
  40bb6c:	xchg   esp,eax
  40bb6d:	jmp    0x3fcae813
  40bb72:	cdq    
  40bb73:	adc    eax,DWORD PTR [esp+edx*1+0x5e225309]
  40bb7a:	jb     0x40bbbd
  40bb7c:	sub    DWORD PTR [eax],esi
  40bb7e:	dec    edx
  40bb7f:	test   BYTE PTR [ebp-0x3b],cl
  40bb82:	sub    eax,0xd642e1f
  40bb87:	mov    dl,0x0
  40bb89:	in     al,0x83
  40bb8b:	jp     0x40bbd3
  40bb8d:	sub    DWORD PTR [edx],0xbf5a4ca1
  40bb93:	xchg   ebp,eax
  40bb94:	and    cl,BYTE PTR [edx+0x5]
  40bb97:	pop    ebx
  40bb98:	ror    DWORD PTR [edi],1
  40bb9a:	cmp    eax,DWORD PTR [edx+edi*8-0xdcecbf3]
  40bba1:	xchg   ebx,eax
  40bba2:	loop   0x40bc1f
  40bba4:	mov    ebp,0x4fbad73e
  40bba9:	pop    edx
  40bbaa:	pushf  
  40bbab:	add    BYTE PTR [edx-0x4afd81bd],0xf0
  40bbb2:	xchg   ebx,eax
  40bbb3:	fs cmp cl,ah
  40bbb6:	xchg   edx,eax
  40bbb7:	(bad)  
  40bbb8:	push   ss
  40bbb9:	jbe    0x40bb9c
  40bbbb:	xchg   edi,eax
  40bbbc:	bound  esi,QWORD PTR [ebx+0x1b]
  40bbbf:	das    
  40bbc0:	pop    ds
  40bbc1:	jae    0x40bb61
  40bbc3:	add    DWORD PTR [esi+0x40],ebp
  40bbc6:	mov    al,ds:0xdd867c46
  40bbcb:	rol    BYTE PTR [ebx+0x4c769c9e],0x14
  40bbd2:	or     BYTE PTR [edi+eiz*1],al
  40bbd5:	lods   eax,DWORD PTR ds:[esi]
  40bbd6:	mov    ecx,0xe25b65f9
  40bbdb:	std    
  40bbdc:	add    BYTE PTR [edx+0x2a5fab27],bl
  40bbe2:	pusha  
  40bbe3:	sbb    al,0x76
  40bbe5:	rcr    BYTE PTR [edx-0x4b],1
  40bbe8:	je     0x40bbc5
  40bbea:	push   cs
  40bbeb:	add    edx,DWORD PTR [esi-0x48]
  40bbee:	lock mov esi,0x1e7fe200
  40bbf4:	mov    cl,0xb9
  40bbf6:	mov    gs,edi
  40bbf8:	retf   
  40bbf9:	mov    bh,cl
  40bbfb:	mov    dl,0x7
  40bbfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbfe:	out    0x2d,eax
  40bc00:	sti    
  40bc01:	sub    BYTE PTR [ebp-0x4190bb35],dh
  40bc07:	add    BYTE PTR [esp+ecx*8],dh
  40bc0a:	dec    ecx
  40bc0b:	aam    0xd5
  40bc0d:	inc    DWORD PTR [edx-0x46]
  40bc10:	push   ebx
  40bc11:	cmp    DWORD PTR [ecx+0x71bca427],ecx
  40bc17:	fsub   st(5),st
  40bc19:	push   ebx
  40bc1a:	clc    
  40bc1b:	mov    ebp,0x73ed8b93
  40bc20:	cmp    BYTE PTR [ebp-0x47637c26],0x90
  40bc27:	mov    edx,0xd1285ad2
  40bc2c:	sub    esi,DWORD PTR [eax+0x2c]
  40bc2f:	or     al,0x89
  40bc31:	dec    eax
  40bc32:	mov    dh,0xa9
  40bc34:	or     BYTE PTR [ecx],0x52
  40bc37:	imul   edi,esi,0xffffffa6
  40bc3a:	inc    esi
  40bc3b:	push   ebx
  40bc3c:	jo     0x40bc83
  40bc3e:	rol    BYTE PTR [edx],1
  40bc40:	daa    
  40bc41:	xor    ebx,DWORD PTR [edi+0xe]
  40bc44:	pop    esp
  40bc45:	push   eax
  40bc46:	popa   
  40bc47:	lock xor dh,BYTE PTR [eax+edi*8]
  40bc4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc4c:	cmp    al,0x15
  40bc4e:	out    dx,eax
  40bc4f:	imul   edx,DWORD PTR [esi+eiz*8-0x48eb5b75],0x19fcfd58
  40bc5a:	xor    eax,0x67baf267
  40bc5f:	cmp    al,0xd
  40bc61:	cli    
  40bc62:	cld    
  40bc63:	lock push eax
  40bc65:	and    eax,0x79b16481
  40bc6a:	adc    dl,BYTE PTR [esi]
  40bc6c:	cmp    al,0xb7
  40bc6e:	push   es
  40bc6f:	jecxz  0x40bcc3
  40bc71:	je     0x40bc99
  40bc73:	dec    esp
  40bc74:	adc    bh,ah
  40bc76:	pop    esi
  40bc77:	push   esp
  40bc78:	inc    ebp
  40bc79:	adc    al,0x20
  40bc7b:	scas   eax,DWORD PTR es:[edi]
  40bc7c:	mov    ecx,0xc56e390b
  40bc81:	rol    DWORD PTR [edi+0x70a9847b],0x15
  40bc88:	mov    ecx,0xc9573fcd
  40bc8d:	hlt    
  40bc8e:	in     eax,0x2e
  40bc90:	retf   
  40bc91:	fwait
  40bc92:	push   ecx
  40bc93:	test   al,0x44
  40bc95:	mov    ds:0xe9452680,eax
  40bc9a:	cdq    
  40bc9b:	out    dx,eax
  40bc9c:	fs repnz stos DWORD PTR es:[edi],eax
  40bc9f:	daa    
  40bca0:	or     DWORD PTR ds:[eax],ebp
  40bca3:	in     al,0xba
  40bca5:	pop    esp
  40bca6:	and    cl,BYTE PTR [edi-0x8052fbb]
  40bcac:	scas   al,BYTE PTR es:[edi]
  40bcad:	sub    bh,BYTE PTR [esi-0x70]
  40bcb0:	adc    al,0x69
  40bcb2:	ins    BYTE PTR es:[edi],dx
  40bcb3:	pop    edx
  40bcb4:	fs out 0x4f,al
  40bcb7:	std    
  40bcb8:	xchg   esp,eax
  40bcb9:	dec    edx
  40bcba:	jge    0x40bc57
  40bcbc:	jbe    0x40bce2
  40bcbe:	mov    al,0xf3
  40bcc0:	sub    DWORD PTR [edx+0x3c],ebp
  40bcc3:	jno    0x40bc8f
  40bcc5:	loop   0x40bc68
  40bcc7:	sahf   
  40bcc8:	es dec eax
  40bcca:	pop    ss
  40bccb:	arpl   WORD PTR [ecx],bp
  40bccd:	adc    eax,0x248ac2f0
  40bcd2:	and    eax,0x8ef5b301
  40bcd7:	dec    ebx
  40bcd8:	sbb    eax,0x6ac1a2d6
  40bcdd:	xchg   ebp,eax
  40bcde:	mov    DWORD PTR [esi-0x22d51cc8],ecx
  40bce4:	mov    esi,esi
  40bce6:	mov    dh,BYTE PTR [ebx-0x5e]
  40bce9:	sbb    ebp,eax
  40bceb:	mov    dh,0x3a
  40bced:	cdq    
  40bcee:	push   ss
  40bcef:	pop    esi
  40bcf0:	fld    TBYTE PTR [eax+edi*8+0x64]
  40bcf4:	ja     0x40bcab
  40bcf6:	xchg   esi,eax
  40bcf7:	(bad)  
  40bcf8:	jne    0x40bcb4
  40bcfa:	push   edi
  40bcfb:	push   ecx
  40bcfc:	dec    esi
  40bcfd:	stos   DWORD PTR es:[edi],eax
  40bcfe:	sbb    eax,0x5619e6d1
  40bd03:	fist   DWORD PTR [eax]
  40bd05:	adc    DWORD PTR [ebx+0x5f],edx
  40bd08:	(bad)  
  40bd09:	in     al,dx
  40bd0a:	aad    0xf3
  40bd0c:	lods   al,BYTE PTR ds:[esi]
  40bd0d:	add    cl,BYTE PTR [eax]
  40bd0f:	or     ebp,0xe024e680
  40bd15:	pusha  
  40bd16:	sar    DWORD PTR [edx-0x30],cl
  40bd19:	mov    ds:0x1e831c84,al
  40bd1e:	cmc    
  40bd1f:	sub    cl,ch
  40bd21:	cmc    
  40bd22:	(bad)  
  40bd24:	xor    al,dl
  40bd26:	cdq    
  40bd27:	loopne 0x40bd14
  40bd29:	retf   0xf14a
  40bd2c:	sti    
  40bd2d:	jns    0x40bd86
  40bd2f:	push   0x66261554
  40bd34:	jecxz  0x40bcbe
  40bd36:	xchg   DWORD PTR [esi-0x5fc88ad],edi
  40bd3c:	push   edx
  40bd3d:	stos   BYTE PTR es:[edi],al
  40bd3e:	cmp    edi,DWORD PTR [ebx]
  40bd40:	repz ret 
  40bd42:	and    eax,0xb9e4f203
  40bd47:	xlat   BYTE PTR ds:[ebx]
  40bd48:	mov    WORD PTR [eax+0x6f54cb55],ds
  40bd4e:	(bad)  
  40bd4f:	es inc esp
  40bd51:	daa    
  40bd52:	jae    0x40bdbc
  40bd54:	ret    0x9d55
  40bd57:	data16 sti 
  40bd59:	jnp    0x40bda6
  40bd5b:	sub    cl,dl
  40bd5d:	pop    edx
  40bd5e:	adc    al,0x14
  40bd60:	mov    ds:0x7f88b738,eax
  40bd65:	ret    0x5de7
  40bd68:	xchg   DWORD PTR [ebx+0x62956d19],edi
  40bd6e:	ds out dx,eax
  40bd70:	enter  0x58d6,0xd4
  40bd74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd75:	or     BYTE PTR [esi],0x65
  40bd78:	push   es
  40bd79:	xchg   esp,eax
  40bd7a:	sbb    BYTE PTR [esi-0x6962aa8b],al
  40bd80:	pop    ds
  40bd81:	arpl   WORD PTR [ecx-0x3e],bp
  40bd84:	retf   
  40bd85:	or     bl,BYTE PTR [edi]
  40bd87:	add    edx,DWORD PTR [edx-0x519851a8]
  40bd8d:	push   ebx
  40bd8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd8f:	call   0x3cf20435
  40bd94:	ret    
  40bd95:	rol    BYTE PTR [eax-0x6f3c219a],1
  40bd9b:	int    0x63
  40bd9d:	mov    DWORD PTR [edi+0x5b],ecx
  40bda0:	retf   
  40bda1:	xor    ecx,DWORD PTR [esi+ebp*4+0x4aacf08d]
  40bda8:	push   esp
  40bda9:	push   cs
  40bdaa:	ud1    edi,DWORD PTR [esi+0x473f855c]
  40bdb1:	mov    bl,0xb2
  40bdb3:	add    DWORD PTR [edx+0x3e92761b],esi
  40bdb9:	rcr    BYTE PTR [eax-0x3e5bba6a],cl
  40bdbf:	add    BYTE PTR [ecx],dl
  40bdc1:	xchg   esp,eax
  40bdc2:	int3   
  40bdc3:	mov    dh,0x3e
  40bdc5:	mov    bh,0x6a
  40bdc7:	mov    cl,0x49
  40bdc9:	add    esp,ebx
  40bdcb:	fild   WORD PTR [ebp+ebx*8+0x55]
  40bdcf:	or     dl,ch
  40bdd1:	les    ebp,FWORD PTR [edi]
  40bdd3:	retf   
  40bdd4:	ins    DWORD PTR es:[edi],dx
  40bdd5:	iret   
  40bdd6:	mov    ebp,0x74366eb0
  40bddb:	and    esp,DWORD PTR [ebp+0x28]
  40bdde:	push   edx
  40bddf:	xor    ebx,esp
  40bde1:	lahf   
  40bde2:	jno    0x40bd90
  40bde4:	fimul  WORD PTR [eax+0x3]
  40bde7:	repnz xchg edx,eax
  40bde9:	pushaw 
  40bdeb:	pop    eax
  40bdec:	cs push ss
  40bdee:	outs   dx,BYTE PTR ds:[si]
  40bdf0:	in     eax,dx
  40bdf1:	fcomp  DWORD PTR [esi+ebx*1]
  40bdf4:	xchg   ecx,esp
  40bdf6:	sbb    eax,0x36faf788
  40bdfb:	xchg   edx,eax
  40bdfc:	ins    BYTE PTR es:[edi],dx
  40bdfd:	out    0x50,eax
  40bdff:	adc    DWORD PTR ds:0x452ec81,eax
  40be05:	cli    
  40be06:	fdivr  DWORD PTR [ebp+0xd]
  40be09:	sbb    BYTE PTR [ebp-0x72],dl
  40be0c:	mov    ebx,0x6539226f
  40be11:	in     eax,0xf3
  40be13:	scas   eax,DWORD PTR es:[edi]
  40be14:	dec    esi
  40be15:	aam    0x98
  40be17:	push   0x47d710f8
  40be1c:	imul   esp,DWORD PTR [edx],0x43e4cda5
  40be22:	arpl   WORD PTR [ebx+0x7a],dx
  40be25:	add    DWORD PTR [eax],esp
  40be27:	and    DWORD PTR [esi+0x3914a75d],ecx
  40be2d:	or     al,0x3a
  40be2f:	xchg   DWORD PTR [ebp-0xc],esp
  40be32:	push   0x4d
  40be34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be35:	mov    cl,0x5b
  40be37:	xchg   ebp,eax
  40be38:	mov    bl,0xdd
  40be3a:	mov    ebx,DWORD PTR ds:0xf460a5d1
  40be40:	jne    0x40beb3
  40be42:	mov    dh,0xe6
  40be44:	sub    bh,dl
  40be46:	dec    ecx
  40be47:	push   esp
  40be48:	loopne 0x40bea4
  40be4a:	mov    ds:0x46182c75,eax
  40be4f:	je     0x40be4e
  40be51:	sub    DWORD PTR [eax+ecx*4+0x326ec41c],esp
  40be58:	inc    ebp
  40be59:	mov    ch,BYTE PTR [esp+ebp*8+0xfdd7c1c]
  40be60:	test   al,0x66
  40be62:	mov    eax,ds:0x5c98e82d
  40be67:	mov    edi,DWORD PTR [edi+0x11ee5666]
  40be6d:	stos   DWORD PTR es:[edi],eax
  40be6e:	iret   
  40be6f:	scas   al,BYTE PTR es:[edi]
  40be70:	adc    bl,BYTE PTR [edx+0x7d807e21]
  40be76:	gs cmp ebp,edi
  40be79:	mov    WORD PTR [ebp-0x5a57e23],es
  40be7f:	outs   dx,DWORD PTR ds:[esi]
  40be80:	stos   DWORD PTR es:[edi],eax
  40be81:	and    DWORD PTR [ebx+0x24b758ef],esi
  40be87:	pop    esi
  40be88:	test   DWORD PTR [ebx-0x4e],esp
  40be8b:	int3   
  40be8c:	hlt    
  40be8d:	dec    edx
  40be8e:	iret   
  40be8f:	mov    al,0x4c
  40be91:	(bad)  
  40be92:	int3   
  40be93:	test   eax,0x128cdaef
  40be98:	cli    
  40be99:	ds push esi
  40be9b:	push   edi
  40be9c:	mov    bh,0xd6
  40be9e:	retf   0xeef7
  40bea1:	sti    
  40bea2:	gs pop eax
  40bea4:	mov    edx,0xbd204d43
  40bea9:	in     al,dx
  40beaa:	push   ecx
  40beab:	cmp    al,0xa0
  40bead:	out    0xb9,al
  40beaf:	adc    eax,0xaec8768f
  40beb4:	ja     0x40be5b
  40beb6:	mov    ds:0xbf792f36,al
  40bebb:	out    dx,al
  40bebc:	mov    edx,0x8cdb817c
  40bec1:	pop    ebp
  40bec2:	inc    eax
  40bec3:	(bad)  
  40bec4:	repnz gs aas 
  40bec7:	sub    esp,DWORD PTR [ecx+0x6b251969]
  40becd:	jmp    0xb907c2f4
  40bed2:	mov    esp,DWORD PTR [edx]
  40bed4:	fiadd  WORD PTR [eax+0x48]
  40bed7:	xor    al,0xb8
  40bed9:	or     DWORD PTR [eax+edx*4+0x47d96e16],0x69
  40bee1:	fadd   QWORD PTR [ecx]
  40bee3:	add    BYTE PTR [esp+esi*8-0x68],ah
  40bee7:	xchg   esp,eax
  40bee8:	adc    bl,BYTE PTR [ecx]
  40beea:	adc    BYTE PTR [esp+eax*1],cl
  40beed:	mov    al,0xcc
  40beef:	mov    bh,0xb1
  40bef1:	jae    0x40bee8
  40bef3:	int    0x5e
  40bef5:	jle    0x40be9d
  40bef7:	xlat   BYTE PTR ds:[ebx]
  40bef8:	stc    
  40bef9:	inc    edx
  40befa:	cmp    eax,0xbaa0ffeb
  40beff:	test   ecx,edi
  40bf01:	sbb    dl,dl
  40bf03:	add    al,BYTE PTR gs:[esi-0x5501e40a]
  40bf0a:	inc    ebx
  40bf0b:	sub    DWORD PTR [ebp-0x478136f1],esi
  40bf11:	pop    edx
  40bf12:	jo     0x40bf6b
  40bf14:	cwde   
  40bf15:	mov    cl,0x2d
  40bf17:	test   BYTE PTR [edx+0x26],0xb0
  40bf1b:	clc    
  40bf1c:	dec    esp
  40bf1d:	mov    esp,0x33965f5
  40bf22:	cmp    BYTE PTR [ebp+0x824d0a7],0xf9
  40bf29:	push   eax
  40bf2a:	lock adc DWORD PTR [edi+0x7fb26648],0x3531b287
  40bf35:	mov    edi,0xdaf85376
  40bf3a:	inc    ebp
  40bf3b:	xchg   edx,eax
  40bf3c:	inc    edx
  40bf3d:	sbb    BYTE PTR [edx],dh
  40bf3f:	mov    esp,0x4002a8a3
  40bf44:	lahf   
  40bf45:	pop    ecx
  40bf46:	jle    0x40bf89
  40bf48:	mov    ah,0x4e
  40bf4a:	cli    
  40bf4b:	or     BYTE PTR [ecx],al
  40bf4d:	xchg   ebp,eax
  40bf4e:	(bad)  
  40bf4f:	out    dx,al
  40bf50:	dec    ebp
  40bf51:	ret    0xa7d7
  40bf54:	sub    DWORD PTR [eax],edi
  40bf56:	lods   eax,DWORD PTR ds:[esi]
  40bf57:	hlt    
  40bf58:	cli    
  40bf59:	popa   
  40bf5a:	scas   al,BYTE PTR es:[edi]
  40bf5b:	imul   edi,DWORD PTR [ebp-0x5],0x5b
  40bf5f:	jmp    0x40bf6d
  40bf61:	dec    ebp
  40bf62:	push   edi
  40bf63:	jmp    esp
  40bf65:	or     al,0x90
  40bf67:	fwait
  40bf68:	mov    dh,0x72
  40bf6a:	xchg   esp,eax
  40bf6b:	mov    cl,0x77
  40bf6d:	mov    ebp,0x10de9303
  40bf72:	cdq    
  40bf73:	jmp    0xbf024789
  40bf78:	mov    edx,0x12763343
  40bf7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf7e:	push   edi
  40bf7f:	test   eax,0x14815f83
  40bf84:	lea    edx,[edi-0x3beb8a23]
  40bf8a:	aam    0x78
  40bf8c:	es pop esi
  40bf8e:	sub    al,0x85
  40bf90:	mov    edx,0xf506cb99
  40bf95:	fsub   DWORD PTR [ebp+0x69]
  40bf98:	xor    al,0xc1
  40bf9a:	cmp    BYTE PTR [ecx],cl
  40bf9c:	aad    0x1
  40bf9e:	ss ror ebx,1
  40bfa1:	jnp    0x40c00e
  40bfa3:	xchg   esi,eax
  40bfa4:	jae    0x40bfd0
  40bfa6:	out    dx,eax
  40bfa7:	dec    ebx
  40bfa8:	les    ebx,FWORD PTR [ebx+0x77312e8f]
  40bfae:	mov    ebp,0x77f27891
  40bfb3:	into   
  40bfb4:	mov    BYTE PTR [eax+eax*4-0x78],cl
  40bfb8:	xchg   esp,eax
  40bfb9:	js     0x40bfe5
  40bfbb:	test   DWORD PTR [edi],ecx
  40bfbd:	push   eax
  40bfbe:	outs   dx,DWORD PTR ds:[esi]
  40bfbf:	pushf  
  40bfc0:	fidiv  WORD PTR [esi-0x35]
  40bfc3:	xchg   DWORD PTR [ebp-0xd],edi
  40bfc6:	mov    eax,ds:0x9e94dfc9
  40bfcb:	mov    dh,0xba
  40bfcd:	pushf  
  40bfce:	inc    edx
  40bfcf:	pop    esp
  40bfd0:	bound  ebx,QWORD PTR ss:[ecx]
  40bfd3:	ds ret 
  40bfd5:	pop    ds
  40bfd6:	xor    eax,0x95789c90
  40bfdb:	add    BYTE PTR [ebx-0x57],0x2c
  40bfdf:	xchg   ecx,eax
  40bfe0:	xchg   edx,eax
  40bfe1:	scas   eax,DWORD PTR es:[edi]
  40bfe2:	aas    
  40bfe3:	fisub  DWORD PTR [eax-0x34]
  40bfe6:	jp     0x40bf94
  40bfe8:	mov    ebx,0x2589dd7a
  40bfed:	xor    al,0x0
  40bfef:	jmp    0x134:0x401ee5f0
  40bff6:	bound  ebp,QWORD PTR [ebx-0x477d8ea9]
  40bffc:	sbb    esi,esp
  40bffe:	inc    edx
  40bfff:	gs mov al,0x14
  40c002:	dec    ebx
  40c003:	add    edx,DWORD PTR [edx+0x31d0d49f]
  40c009:	dec    ebp
  40c00a:	jo     0x40c01e
  40c00c:	stc    
  40c00d:	retf   
  40c00e:	mov    ds:0x949bbbdb,al
  40c013:	sub    eax,0x5bd40d74
  40c018:	xchg   edx,eax
  40c019:	(bad)  
  40c01b:	sbb    dl,BYTE PTR [ecx]
  40c01d:	mov    DWORD PTR [ebp-0x26],edi
  40c020:	xchg   edi,eax
  40c021:	std    
  40c022:	pop    ss
  40c023:	cmp    eax,0xa753c2fe
  40c028:	scas   al,BYTE PTR es:[edi]
  40c029:	xchg   bh,cl
  40c02b:	jmp    0x569cd02a
  40c030:	out    0x36,eax
  40c032:	fisub  DWORD PTR [ebp+0x6c4d95b7]
  40c038:	push   cs
  40c039:	inc    edi
  40c03a:	dec    ebx
  40c03b:	or     ebp,DWORD PTR [eax+0x586bf641]
  40c041:	sbb    dl,BYTE PTR [ebp+0x57]
  40c044:	push   edi
  40c045:	xchg   DWORD PTR [edx],eax
  40c047:	jno    0x40c0a4
  40c049:	mov    esi,0x4bac2714
  40c04e:	mov    al,ds:0xe07b4190
  40c053:	inc    eax
  40c054:	ins    DWORD PTR es:[edi],dx
  40c055:	lock cwde 
  40c057:	pop    ebx
  40c058:	pop    esp
  40c059:	rol    DWORD PTR [ecx+0x170f8cb0],1
  40c05f:	pop    esi
  40c060:	xchg   ebp,eax
  40c061:	jecxz  0x40c0a4
  40c063:	adc    bh,BYTE PTR [edi+0x79af2a46]
  40c069:	pop    edx
  40c06a:	test   BYTE PTR [ecx+0xa],ah
  40c06d:	shl    DWORD PTR [eax+0x30],cl
  40c070:	nop
  40c071:	mov    ah,0xe0
  40c073:	pop    ebp
  40c074:	or     ecx,DWORD PTR [edx+0x210a0a30]
  40c07a:	test   DWORD PTR [ebx],0x4c8dd51b
  40c080:	call   0x566d444
  40c085:	push   cs
  40c086:	shl    dl,cl
  40c088:	mov    BYTE PTR [ebp+ecx*4-0x30579918],bl
  40c08f:	leave  
  40c090:	jnp    0x40c01a
  40c092:	mov    bl,0x33
  40c094:	loope  0x40c0d2
  40c096:	not    DWORD PTR ds:0xaf422b62
  40c09c:	cmp    cl,BYTE PTR [ebp-0x2d]
  40c09f:	(bad)  
  40c0a0:	out    0xa2,eax
  40c0a2:	mov    edx,0x87f96a8b
  40c0a7:	js     0x40c117
  40c0a9:	push   ss
  40c0aa:	mov    dl,bl
  40c0ac:	retf   0xa992
  40c0af:	dec    ebp
  40c0b0:	dec    eax
  40c0b1:	cs std 
  40c0b3:	pop    edx
  40c0b4:	dec    ebx
  40c0b5:	sar    DWORD PTR [edx],1
  40c0b7:	sub    bl,BYTE PTR [ecx+0x32]
  40c0ba:	inc    edx
  40c0bb:	scas   al,BYTE PTR es:[edi]
  40c0bc:	loope  0x40c040
  40c0be:	neg    BYTE PTR [edi-0x60]
  40c0c1:	mov    ah,0xc8
  40c0c3:	inc    ecx
  40c0c4:	scas   eax,DWORD PTR es:[edi]
  40c0c5:	call   FWORD PTR [ebx-0x7c]
  40c0c8:	sub    DWORD PTR [ecx-0x22],ebp
  40c0cb:	fmulp  st(7),st
  40c0cd:	cmp    BYTE PTR [eax-0x1024fcdf],ch
  40c0d3:	cmc    
  40c0d4:	leave  
  40c0d5:	pop    esp
  40c0d6:	xchg   ebx,eax
  40c0d7:	jmp    FWORD PTR [edi-0x76929661]
  40c0dd:	xlat   BYTE PTR ds:[ebx]
  40c0de:	inc    esp
  40c0df:	(bad)  
  40c0e0:	idiv   al
  40c0e2:	xchg   edx,eax
  40c0e3:	xchg   BYTE PTR [eax+0x41485bad],al
  40c0e9:	mov    eax,0xd7fa4fe2
  40c0ee:	adc    eax,0x8f91e10d
  40c0f3:	add    edi,DWORD PTR [eax-0xd34804c]
  40c0f9:	fcomp  DWORD PTR [esi]
  40c0fb:	mov    dl,0x69
  40c0fd:	mov    ecx,0x4dcf7ee5
  40c102:	je     0x40c181
  40c104:	jo     0x40c13e
  40c106:	xor    ebx,DWORD PTR [edi]
  40c108:	adc    eax,0x99dfec7c
  40c10d:	das    
  40c10e:	mov    eax,0xa2b944d1
  40c113:	cs out dx,eax
  40c115:	pop    ss
  40c116:	add    esp,DWORD PTR [ecx-0x23dd728a]
  40c11c:	aam    0xe0
  40c11e:	pop    edx
  40c11f:	cwde   
  40c120:	mov    al,ds:0x4646ad62
  40c125:	xchg   esp,eax
  40c126:	jge    0x40c0f4
  40c128:	sub    dl,BYTE PTR [ebx+0x4b]
  40c12b:	sub    eax,0x9efaf4f3
  40c130:	(bad)  
  40c132:	rol    bl,cl
  40c134:	fstp   DWORD PTR [ecx-0x77]
  40c137:	out    0xbd,al
  40c139:	ror    eax,cl
  40c13b:	scas   al,BYTE PTR es:[edi]
  40c13c:	popf   
  40c13d:	jg     0x40c129
  40c13f:	inc    edi
  40c140:	(bad)  
  40c141:	cld    
  40c142:	je     0x40c1a1
  40c144:	fstp   TBYTE PTR [eax]
  40c146:	movups xmm5,XMMWORD PTR [ebx+esi*2]
  40c14a:	ja     0x40c103
  40c14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c14d:	retf   
  40c14e:	cmp    DWORD PTR [ebp+0x36],0x23
  40c152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c153:	leave  
  40c154:	pop    edi
  40c155:	cmp    DWORD PTR [edx],0x45bf489c
  40c15b:	mov    BYTE PTR ds:0x6c9cee46,ch
  40c161:	and    eax,0x38ec7be8
  40c166:	sbb    edx,esp
  40c168:	jb     0x40c135
  40c16a:	pop    ebx
  40c16b:	frstor ds:0x65d34842
  40c171:	jecxz  0x40c1ac
  40c173:	shl    BYTE PTR [edi],0x21
  40c176:	mov    edx,0xa62f5ade
  40c17b:	das    
  40c17c:	push   0xffffffdc
  40c17e:	out    0x44,al
  40c180:	jb     0x40c12f
  40c182:	xor    ebp,ebx
  40c184:	dec    esp
  40c185:	pop    ebp
  40c186:	loop   0x40c1b2
  40c188:	movq   QWORD PTR [ebx-0x5b9bab6f],mm2
  40c18f:	or     eax,0x3fc13b50
  40c194:	pushf  
  40c195:	andps  xmm7,XMMWORD PTR [ebx+0x3]
  40c199:	fscale 
  40c19b:	dec    ecx
  40c19c:	gs clc 
  40c19e:	push   ecx
  40c19f:	cmp    eax,0x3f0bf023
  40c1a4:	int    0x5f
  40c1a6:	pop    ebx
  40c1a7:	add    eax,edx
  40c1a9:	dec    edi
  40c1aa:	mov    ecx,0xa58b3365
  40c1af:	and    bh,BYTE PTR [ecx-0x43cf5c00]
  40c1b5:	xor    bh,0x7c
  40c1b8:	sahf   
  40c1b9:	inc    esi
  40c1ba:	jp     0x40c237
  40c1bc:	nop
  40c1bd:	xchg   eax,ecx
  40c1bf:	rcr    DWORD PTR [ecx-0x3edaf701],0xc6
  40c1c6:	cmp    DWORD PTR [ecx+0x605bfe3d],0x46be227a
  40c1d0:	popa   
  40c1d1:	mov    ah,0xe6
  40c1d3:	fneni(8087 only) 
  40c1d5:	test   al,0xfb
  40c1d7:	cmp    BYTE PTR [edi+0x7c],ah
  40c1da:	inc    ecx
  40c1db:	imul   edx,edi,0x6bb164e
  40c1e1:	stc    
  40c1e2:	ret    0xfcc9
  40c1e5:	js     0x40c211
  40c1e7:	xor    eax,0x44b567a5
  40c1ec:	adc    bl,0xcd
  40c1ef:	xchg   edx,eax
  40c1f0:	add    eax,0x4f8a1b16
  40c1f5:	fsubr  DWORD PTR [edx+eax*4+0x74279f44]
  40c1fc:	repz repz xor ebp,ebp
  40c200:	push   ss
  40c201:	sub    eax,0x9ccd46e0
  40c206:	inc    eax
  40c207:	cmc    
  40c208:	popa   
  40c209:	xor    al,0xc
  40c20b:	mov    ecx,0xe45e802
  40c210:	jge    0x40c213
  40c212:	sbb    BYTE PTR [ebp-0x6bc91cf8],0x38
  40c219:	int3   
  40c21a:	shl    DWORD PTR [ebx+0x1ea83a6],cl
  40c220:	sbb    BYTE PTR [esi-0x48377d99],bl
  40c226:	adc    eax,0x51ae7f83
  40c22b:	or     BYTE PTR [ebx+0x1ae16cb],0xf6
  40c232:	cmp    eax,0xcf6f515
  40c237:	sub    dh,BYTE PTR [eax-0x75]
  40c23a:	fist   WORD PTR [ebp+0x36]
  40c23d:	adc    ecx,ecx
  40c23f:	cld    
  40c240:	test   DWORD PTR [edx-0x29410bbe],ebx
  40c246:	test   BYTE PTR [ebp-0x6192e807],al
  40c24c:	repz cwde 
  40c24e:	mov    eax,0xe5a3de12
  40c253:	xor    eax,DWORD PTR [eax+eiz*1-0x16]
  40c257:	loopne 0x40c2aa
  40c259:	and    al,0x23
  40c25b:	or     eax,0x2988e7da
  40c260:	cs push es
  40c262:	js     0x40c2ad
  40c264:	fdivp  st(4),st
  40c266:	cs mov bh,0xf9
  40c269:	addr16 aas 
  40c26b:	mul    BYTE PTR [ecx]
  40c26d:	mov    edi,0x7ce5102d
  40c272:	add    BYTE PTR [ebx+ebx*8-0x23bb809d],0x18
  40c27a:	mov    ch,BYTE PTR [ecx-0x7fc7d78e]
  40c280:	and    cl,BYTE PTR [ebp-0x77]
  40c283:	fwait
  40c284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c285:	jle    0x40c28d
  40c287:	test   BYTE PTR [edi],bh
  40c289:	fcom   DWORD PTR [ecx-0x76]
  40c28c:	imul   eax,DWORD PTR [eax+0x7b90d932],0xd15fa4c8
  40c296:	or     eax,0x6ff8020
  40c29b:	test   BYTE PTR [edx],dh
  40c29d:	mov    DWORD PTR [ecx],ebx
  40c29f:	test   al,0xb4
  40c2a1:	out    dx,al
  40c2a2:	add    eax,0xd76cebe0
  40c2a7:	xchg   ebp,eax
  40c2a8:	test   DWORD PTR [ebx+0x40],eax
  40c2ab:	pop    edi
  40c2ac:	ins    BYTE PTR es:[edi],dx
  40c2ad:	enter  0xbe1e,0x7a
  40c2b1:	(bad)  
  40c2b2:	loop   0x40c289
  40c2b4:	xlat   BYTE PTR ds:[ebx]
  40c2b5:	push   0x10
  40c2b7:	(bad)  
  40c2b8:	pop    edx
  40c2b9:	jmp    0x8b98b8a
  40c2be:	mov    ah,0x55
  40c2c0:	adc    bh,ch
  40c2c2:	mov    al,0x6c
  40c2c4:	pop    eax
  40c2c5:	push   0x57319013
  40c2ca:	xchg   ebp,eax
  40c2cb:	jecxz  0x40c29d
  40c2cd:	adc    eax,0xc8e33259
  40c2d2:	push   eax
  40c2d3:	popf   
  40c2d4:	imul   esi,esp,0xe82f50b0
  40c2da:	push   eax
  40c2db:	dec    ecx
  40c2dc:	mov    ecx,0xad0b00c3
  40c2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e2:	add    al,0xc7
  40c2e4:	adc    BYTE PTR [eax+0x262d4530],bh
  40c2ea:	pop    ebx
  40c2eb:	pusha  
  40c2ec:	and    eax,0x1c22c46f
  40c2f1:	add    edx,DWORD PTR [ebp+0x1256ff4]
  40c2f7:	and    al,0x1
  40c2f9:	sbb    ecx,DWORD PTR ss:[edi-0x6a59e7ae]
  40c300:	mov    ebp,0xe7348036
  40c305:	je     0x40c361
  40c307:	or     bl,ch
  40c309:	and    al,0xdb
  40c30b:	in     al,0x7e
  40c30d:	add    ebx,DWORD PTR [ecx+0xa9c2765]
  40c313:	outs   dx,BYTE PTR ds:[esi]
  40c314:	fwait
  40c315:	icebp  
  40c316:	(bad)  
  40c317:	(bad)  
  40c318:	xor    eax,0x1fe93a8f
  40c31d:	sbb    bl,BYTE PTR [ebx]
  40c31f:	sbb    bl,ah
  40c321:	int3   
  40c322:	mov    ebp,0x23bf8372
  40c327:	addr16 imul esp,edi,0x62a5de2
  40c32e:	lods   eax,DWORD PTR ds:[esi]
  40c32f:	cdq    
  40c330:	and    al,0x89
  40c332:	sahf   
  40c333:	imul   esp,esi,0x35316d83
  40c339:	aaa    
  40c33a:	out    dx,al
  40c33b:	and    eax,0x861b6dfb
  40c340:	ss jmp 0x40c320
  40c343:	into   
  40c344:	mov    BYTE PTR [edx+0x515a88c8],ah
  40c34a:	out    0x6a,al
  40c34c:	push   esi
  40c34d:	sahf   
  40c34e:	mov    bh,0xc0
  40c350:	stos   DWORD PTR es:[edi],eax
  40c351:	sahf   
  40c352:	xchg   ebx,eax
  40c353:	and    dh,BYTE PTR cs:0xf35b7858
  40c35a:	xchg   DWORD PTR [edx+0x6f],ebx
  40c35d:	out    0x81,eax
  40c35f:	and    DWORD PTR [ecx-0x6a92d9ff],0xaff312e3
  40c369:	or     DWORD PTR [edi-0x22],esi
  40c36c:	mov    bl,BYTE PTR [edx+0xafcfadd]
  40c372:	inc    ebp
  40c373:	xchg   edx,eax
  40c374:	aad    0x5c
  40c376:	and    ch,BYTE PTR [esi]
  40c378:	test   BYTE PTR [edi-0x2b22ddf0],al
  40c37e:	mov    al,ds:0x471d3b52
  40c383:	sahf   
  40c384:	fisub  WORD PTR [edx-0x13319bec]
  40c38a:	push   0x24bcaf08
  40c38f:	push   ebx
  40c390:	imul   ebp,esi,0x298fc5e3
  40c396:	das    
  40c397:	daa    
  40c398:	pop    esi
  40c399:	dec    eax
  40c39a:	sbb    al,0x21
  40c39c:	test   al,0x66
  40c39e:	pusha  
  40c39f:	xor    ebx,ebx
  40c3a1:	loopne 0x40c33e
  40c3a3:	dec    edx
  40c3a4:	loop   0x40c340
  40c3a6:	mov    ds:0xb133bffe,al
  40c3ab:	in     eax,dx
  40c3ac:	sub    dl,BYTE PTR [ebx+0x75ddb092]
  40c3b2:	xor    dh,bl
  40c3b4:	mov    cl,0x1a
  40c3b6:	or     BYTE PTR [ecx],al
  40c3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3b9:	out    dx,al
  40c3ba:	push   ebx
  40c3bb:	ss pop ds
  40c3bd:	mov    ah,0xe0
  40c3bf:	scas   al,BYTE PTR es:[edi]
  40c3c0:	push   ebx
  40c3c1:	dec    ecx
  40c3c2:	pop    edi
  40c3c3:	push   edx
  40c3c4:	or     al,0xd
  40c3c6:	add    al,0x12
  40c3c8:	es or  eax,0x90c03104
  40c3ce:	mov    ds:0xb190d61f,al
  40c3d3:	les    ebp,FWORD PTR [eax+edi*8]
  40c3d6:	and    eax,0xd79cfdee
  40c3db:	lahf   
  40c3dc:	aas    
  40c3dd:	fwait
  40c3de:	add    BYTE PTR [ecx-0x691f00e],bl
  40c3e4:	fnstcw WORD PTR [ebp-0x763f7898]
  40c3ea:	fistp  DWORD PTR [ebx+0x34]
  40c3ed:	xchg   ebx,eax
  40c3ee:	or     ebx,esi
  40c3f0:	leave  
  40c3f1:	inc    esi
  40c3f2:	dec    ebp
  40c3f3:	aas    
  40c3f4:	jne    0x40c3a9
  40c3f6:	sbb    dh,BYTE PTR [edi]
  40c3f8:	push   ecx
  40c3f9:	mov    al,ds:0x5a5f3cb8
  40c3fe:	adc    eax,0xe6d2e4d3
  40c403:	inc    eax
  40c404:	fild   WORD PTR es:[edx]
  40c407:	repnz cli 
  40c409:	out    dx,al
  40c40a:	cmp    DWORD PTR [esi+0x39],esi
  40c40d:	sub    edi,DWORD PTR [esi-0x1f]
  40c410:	and    eax,0x275f9b2e
  40c415:	cld    
  40c416:	dec    eax
  40c417:	mov    edx,0xe0fee457
  40c41c:	mov    edx,0xa8f23965
  40c421:	pop    edi
  40c422:	dec    esp
  40c423:	adc    eax,0xcca0ae33
  40c428:	ins    DWORD PTR es:[edi],dx
  40c429:	leave  
  40c42a:	dec    ebp
  40c42b:	sbb    ecx,ebp
  40c42d:	outs   dx,BYTE PTR ds:[esi]
  40c42e:	dec    esi
  40c42f:	and    DWORD PTR [edi+ecx*1+0x783898c6],0x20
  40c437:	loopne 0x40c3ea
  40c439:	lock bound esp,QWORD PTR [edx+0x1]
  40c43d:	sbb    ah,0x32
  40c440:	add    al,0xad
  40c442:	rcr    BYTE PTR [esi+0x7732a643],0xf9
  40c449:	fmul   DWORD PTR [eax-0x2e]
  40c44c:	cmp    al,0x2d
  40c44e:	inc    edx
  40c44f:	repz sbb esi,DWORD PTR [eax+0x52]
  40c453:	xor    cl,BYTE PTR [eax+0x574f906d]
  40c459:	call   0x3185:0x36026b6
  40c460:	push   eax
  40c461:	mov    WORD PTR [ecx],ds
  40c463:	or     edx,esp
  40c465:	iret   
  40c466:	mov    bh,0x18
  40c468:	lds    eax,FWORD PTR [esi-0x5f]
  40c46b:	xchg   esi,eax
  40c46c:	(bad)  
  40c46d:	data16 hlt 
  40c46f:	(bad)  
  40c470:	jnp    0x40c4e7
  40c472:	and    DWORD PTR [esi+0x6ce3efc3],ecx
  40c478:	lahf   
  40c479:	fmul   st(0),st
  40c47b:	add    al,0x56
  40c47d:	or     ecx,ebx
  40c47f:	and    al,0xcd
  40c481:	pop    ecx
  40c482:	sub    eax,0xddc31651
  40c487:	sbb    DWORD PTR [esi-0x68],edi
  40c48a:	sub    ebp,DWORD PTR [edi+0x35]
  40c48d:	inc    eax
  40c48e:	shl    DWORD PTR [eax-0x17],cl
  40c491:	(bad)  
  40c493:	pusha  
  40c494:	gs std 
  40c496:	xor    cl,BYTE PTR [ebx]
  40c498:	stos   DWORD PTR es:[edi],eax
  40c499:	(bad)  
  40c49a:	(bad)  [ebx]
  40c49c:	test   BYTE PTR [edx],0x7e
  40c49f:	inc    ebx
  40c4a0:	loopne 0x40c425
  40c4a2:	mov    cs:0x6deae319,al
  40c4a8:	addr16 shr edx,0x3b
  40c4ac:	daa    
  40c4ad:	out    0xba,al
  40c4af:	fld    QWORD PTR [ebp+esi*4+0x4f91c095]
  40c4b6:	repz loop 0x40c52e
  40c4b9:	mov    esi,0xf21f38c9
  40c4be:	sti    
  40c4bf:	outs   dx,BYTE PTR ds:[esi]
  40c4c0:	xchg   esp,eax
  40c4c1:	mov    ds:0xaab13aba,eax
  40c4c6:	mov    ecx,0xc8f640fc
  40c4cb:	jne    0x40c45a
  40c4cd:	je     0x40c4bf
  40c4cf:	stos   DWORD PTR es:[edi],eax
  40c4d0:	or     eax,0x99f5ae21
  40c4d5:	push   eax
  40c4d6:	nop
  40c4d7:	jb     0x40c539
  40c4d9:	retf   
  40c4da:	xchg   BYTE PTR [eax-0x28],al
  40c4dd:	or     eax,0x2e9826a1
  40c4e2:	fiadd  DWORD PTR [edi]
  40c4e4:	xlat   BYTE PTR ds:[ebx]
  40c4e6:	fcomip st,st(7)
  40c4e8:	mov    ds,WORD PTR [ecx+0x39]
  40c4eb:	icebp  
  40c4ec:	jp     0x40c4bf
  40c4ee:	(bad)  
  40c4ef:	push   eax
  40c4f0:	mov    edx,0x22457103
  40c4f5:	jno    0x40c4a9
  40c4f7:	inc    ebp
  40c4f8:	adc    al,0x8d
  40c4fa:	les    edx,FWORD PTR [esi]
  40c4fc:	mov    ebx,DWORD PTR [ebx]
  40c4fe:	(bad)  
  40c4ff:	mov    edi,0xf511cc7d
  40c504:	mov    ah,0x19
  40c506:	cmc    
  40c507:	pushf  
  40c508:	add    ah,dh
  40c50a:	pop    edx
  40c50b:	mov    cl,0x17
  40c50d:	in     eax,dx
  40c50e:	inc    edx
  40c50f:	stc    
  40c510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c511:	or     cl,BYTE PTR [edi-0x32a0201]
  40c517:	dec    edi
  40c518:	test   DWORD PTR [edx],ecx
  40c51a:	out    dx,al
  40c51b:	xlat   BYTE PTR ds:[ebx]
  40c51c:	xchg   edx,eax
  40c51d:	shl    BYTE PTR [esi-0xed811f1],1
  40c523:	aaa    
  40c524:	imul   edx,DWORD PTR ds:0x652e61f5,0x9e9d5216
  40c52e:	sti    
  40c52f:	inc    ecx
  40c531:	inc    esi
  40c532:	int3   
  40c533:	sbb    ch,BYTE PTR [ecx+eiz*2]
  40c536:	jmp    0x2d3dfe5b
  40c53b:	int3   
  40c53c:	div    BYTE PTR [esi]
  40c53e:	jae    0x40c5a2
  40c540:	aaa    
  40c541:	xor    eax,0xe72a97ab
  40c546:	and    eax,eax
  40c548:	add    bl,BYTE PTR [ebx]
  40c54a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c54b:	retf   
  40c54c:	rdpmc  
  40c54e:	xchg   ebx,eax
  40c54f:	outs   dx,BYTE PTR ds:[esi]
  40c550:	jo     0x40c5a5
  40c552:	mov    edi,0xfd51ab4
  40c557:	xchg   ecx,eax
  40c558:	xor    ebx,DWORD PTR [eax+0x26]
  40c55b:	cdq    
  40c55c:	shl    DWORD PTR [ecx-0x45e7e67d],cl
  40c562:	mov    DWORD PTR [ecx],edi
  40c564:	push   0x9f884e0c
  40c569:	jmp    0x40c582
  40c56b:	ss dec esi
  40c56d:	pusha  
  40c56e:	dec    esp
  40c56f:	dec    ebp
  40c570:	fistp  WORD PTR [edx]
  40c572:	or     bh,BYTE PTR [eax-0x69]
  40c575:	xor    dl,0x74
  40c578:	push   esp
  40c579:	or     al,0x6
  40c57b:	xor    edx,DWORD PTR [edx]
  40c57d:	push   esp
  40c57e:	pop    edi
  40c57f:	(bad)  
  40c581:	push   edi
  40c582:	and    ch,BYTE PTR [edx+0x53]
  40c585:	(bad)  
  40c586:	loop   0x40c58e
  40c588:	push   ecx
  40c589:	pusha  
  40c58a:	xchg   esp,eax
  40c58b:	test   DWORD PTR [eax+0x3c2dc7eb],ecx
  40c591:	jbe    0x40c553
  40c593:	push   ss
  40c594:	push   0x70
  40c596:	sti    
  40c597:	jp     0x40c553
  40c599:	mov    ebx,0x1e8bc87c
  40c59e:	mov    DWORD PTR [ecx],esp
  40c5a0:	push   eax
  40c5a1:	lods   al,BYTE PTR ds:[esi]
  40c5a2:	cmp    bh,BYTE PTR [ecx]
  40c5a4:	bound  eax,QWORD PTR [edi-0x40f2eb4d]
  40c5aa:	iret   
  40c5ab:	xchg   ecx,eax
  40c5ac:	inc    ebx
  40c5ad:	xchg   ebp,eax
  40c5ae:	add    BYTE PTR [eax],bh
  40c5b0:	retf   
  40c5b1:	mov    esi,0xf9b3f297
  40c5b6:	pop    eax
  40c5b7:	pop    ss
  40c5b8:	shl    eax,1
  40c5ba:	and    BYTE PTR [edi+0x2cfc83ba],dh
  40c5c0:	inc    ebp
  40c5c1:	(bad)  
  40c5c2:	in     eax,0xc6
  40c5c4:	pusha  
  40c5c5:	sub    ebx,esi
  40c5c7:	ss or  bh,BYTE PTR gs:[esi]
  40c5cb:	inc    edi
  40c5cc:	pop    esi
  40c5cd:	push   0xe3e1f431
  40c5d2:	lahf   
  40c5d3:	push   esp
  40c5d4:	icebp  
  40c5d5:	xor    BYTE PTR [edx+0x31],0x7d
  40c5d9:	aas    
  40c5da:	ret    0x4a42
  40c5dd:	and    BYTE PTR [eax],ch
  40c5df:	xor    dl,cl
  40c5e1:	ins    BYTE PTR es:[edi],dx
  40c5e2:	mov    ebp,0x730ce2e
  40c5e7:	jl     0x40c61b
  40c5e9:	cmp    al,BYTE PTR [esi+0x36c30e34]
  40c5ef:	add    BYTE PTR [eax+0x17],ch
  40c5f2:	dec    esp
  40c5f3:	ror    DWORD PTR [esi-0x27],cl
  40c5f6:	jbe    0x40c644
  40c5f8:	mov    cl,0x1b
  40c5fa:	mov    bl,0x66
  40c5fc:	cmp    edx,DWORD PTR [eax-0x62]
  40c5ff:	push   esi
  40c600:	fwait
  40c601:	stos   BYTE PTR es:[edi],al
  40c602:	sub    DWORD PTR [edx+0x76],esi
  40c605:	add    BYTE PTR [edi],bl
  40c607:	add    BYTE PTR [eax],dl
  40c609:	js     0x40c5fa
  40c60b:	ins    DWORD PTR es:[edi],dx
  40c60c:	xchg   BYTE PTR [edx-0xe],ch
  40c60f:	dec    eax
  40c610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c611:	xchg   esp,eax
  40c612:	ret    0x8591
  40c615:	mov    ecx,0xf8f52dc1
  40c61a:	imul   edi,DWORD PTR [esi+eiz*1+0x22c088b3],0xffffffcf
  40c622:	pushf  
  40c623:	pop    eax
  40c624:	push   0x4b
  40c626:	jnp    0x40c687
  40c628:	inc    ecx
  40c629:	int3   
  40c62a:	dec    ebp
  40c62b:	jns    0x40c5ea
  40c62d:	std    
  40c62e:	dec    esp
  40c62f:	call   0xb45:0x6f3b887b
  40c636:	in     eax,0xba
  40c638:	dec    edx
  40c639:	mov    ds:0xe8c766c9,al
  40c63e:	cwde   
  40c63f:	mov    dl,BYTE PTR [ecx+0x19]
  40c642:	mov    esp,0x5b50947b
  40c647:	enter  0x5be3,0x2e
  40c64b:	shr    BYTE PTR [esi+0x1e],cl
  40c64e:	push   esi
  40c64f:	pop    eax
  40c650:	in     eax,0xba
  40c652:	ins    BYTE PTR es:[edi],dx
  40c653:	cmp    al,0x60
  40c655:	ss enter 0xabb4,0xa6
  40c65a:	mov    BYTE PTR [edi],bl
  40c65c:	jno    0x40c60d
  40c65e:	fidivr DWORD PTR [eax+0x7d]
  40c661:	or     bl,BYTE PTR [eax+0x17]
  40c664:	imul   edx,edi,0xa07cb97e
  40c66a:	leave  
  40c66b:	neg    DWORD PTR [eax+0x3e51e81f]
  40c671:	pusha  
  40c672:	fild   DWORD PTR [ebp+0x23]
  40c675:	xor    ecx,DWORD PTR [ecx+0x54]
  40c678:	fisttp QWORD PTR [ebp+0x76]
  40c67b:	sbb    BYTE PTR [esi-0x12],0x71
  40c67f:	mov    WORD PTR [ecx],ds
  40c681:	or     al,0xe8
  40c683:	out    dx,al
  40c684:	scas   eax,DWORD PTR es:[edi]
  40c685:	mov    eax,ds:0xcb00edb4
  40c68a:	test   eax,0x1b8e5a2f
  40c68f:	adc    DWORD PTR [ecx-0x10],esi
  40c692:	into   
  40c693:	xchg   BYTE PTR [esi],al
  40c695:	xlat   BYTE PTR ds:[ebx]
  40c696:	fist   DWORD PTR [ebp-0x46]
  40c699:	pop    edx
  40c69a:	dec    eax
  40c69b:	into   
  40c69c:	(bad)  
  40c69d:	in     ax,dx
  40c69f:	sub    BYTE PTR [esi-0x29907a77],al
  40c6a5:	and    al,0x17
  40c6a7:	enter  0x4a96,0x7b
  40c6ab:	mov    edi,0xb569083b
  40c6b0:	pop    ebp
  40c6b1:	lahf   
  40c6b2:	int3   
  40c6b3:	jae    0x40c6b4
  40c6b5:	pop    edi
  40c6b6:	std    
  40c6b7:	or     esp,ecx
  40c6b9:	jns    0x40c67d
  40c6bb:	call   0x9e2499e2
  40c6c0:	xor    DWORD PTR [edx-0x42],eax
  40c6c3:	adc    esi,DWORD PTR [esi+0x1b]
  40c6c6:	pop    edi
  40c6c7:	xchg   BYTE PTR [edi-0x5e7a05bb],al
  40c6cd:	mov    ch,BYTE PTR [ebx+0x30]
  40c6d0:	cli    
  40c6d1:	xor    BYTE PTR [esi],bl
  40c6d3:	shl    DWORD PTR ds:0x926344df,1
  40c6d9:	push   edx
  40c6da:	mov    edx,0x55b43e1
  40c6df:	(bad)  
  40c6e0:	retf   
  40c6e1:	bound  edi,QWORD PTR [ecx+eax*2+0x50]
  40c6e5:	ret    
  40c6e6:	or     al,0x95
  40c6e8:	adc    ecx,DWORD PTR [eax+0x593449c]
  40c6ee:	and    BYTE PTR ds:[edi+0x1d24b505],0x8d
  40c6f6:	mov    ah,0x4b
  40c6f8:	pop    esp
  40c6f9:	mov    BYTE PTR [eax-0x38],dl
  40c6fc:	aaa    
  40c6fd:	vorps  xmm7,xmm3,xmm1
  40c701:	cmp    DWORD PTR [ebp+0x44],esi
  40c704:	pop    ss
  40c705:	fcomi  st,st(6)
  40c707:	xchg   bh,dl
  40c709:	lea    ebx,[edx+0x43]
  40c70c:	repz pop esp
  40c70e:	add    BYTE PTR [edx+ebp*8-0x48],cl
  40c712:	xor    al,0x60
  40c714:	out    0xc3,eax
  40c716:	fidivr WORD PTR [ecx+0x47bf550f]
  40c71c:	cdq    
  40c71d:	mov    al,0xe1
  40c71f:	sub    esp,DWORD PTR [eax-0x50007bc1]
  40c725:	aaa    
  40c726:	stos   DWORD PTR es:[edi],eax
  40c727:	mov    ch,al
  40c729:	mov    eax,ds:0x1c0005d5
  40c72e:	fdivr  DWORD PTR [ebp-0x6354bf27]
  40c734:	dec    eax
  40c735:	out    dx,al
  40c736:	daa    
  40c737:	mov    ecx,ecx
  40c739:	jle    0x40c7ad
  40c73b:	and    al,0xbc
  40c73d:	call   0x1ddee33c
  40c742:	and    DWORD PTR [ebx+0x2f4effed],ebx
  40c748:	iret   
  40c749:	outs   dx,DWORD PTR ds:[esi]
  40c74a:	push   ebx
  40c74b:	adc    eax,0xa52d0e1e
  40c750:	push   ds
  40c751:	sbb    bl,BYTE PTR [eax]
  40c753:	lock pop ebx
  40c755:	or     bl,ch
  40c757:	adc    ch,dh
  40c759:	adc    dl,dl
  40c75b:	xchg   ebp,eax
  40c75c:	(bad)  
  40c75d:	sbb    bh,BYTE PTR [ebx]
  40c75f:	lea    esp,[edx]
  40c761:	cmp    edx,0x7e
  40c764:	and    BYTE PTR [edx-0x4f],dh
  40c767:	pop    esp
  40c768:	enter  0x36b5,0x15
  40c76c:	js     0x40c709
  40c76e:	daa    
  40c76f:	sahf   
  40c770:	jns    0x40c73a
  40c772:	pop    ecx
  40c773:	or     al,0xc8
  40c775:	in     al,0x7b
  40c777:	in     al,dx
  40c778:	cmp    BYTE PTR [ecx+ebx*2+0x4ebf5e21],al
  40c77f:	cmp    BYTE PTR [ecx-0x6a51fa7e],ch
  40c785:	scas   al,BYTE PTR es:[edi]
  40c786:	repnz sti 
  40c788:	mov    ebp,0x2feff9cd
  40c78d:	and    BYTE PTR [ebx],dl
  40c78f:	call   0xab56:0x634cd893
  40c796:	sub    BYTE PTR [edx+ecx*8-0x6210760d],cl
  40c79d:	aad    0x11
  40c79f:	std    
  40c7a0:	pop    ecx
  40c7a1:	cli    
  40c7a2:	idiv   BYTE PTR [ebp+0x44]
  40c7a5:	and    dh,0xd
  40c7a8:	test   eax,0x58b6f9ac
  40c7ad:	enter  0x856d,0xd8
  40c7b1:	mov    ebx,0xf05305e8
  40c7b6:	hlt    
  40c7b7:	mov    BYTE PTR [eax+0x33b68fd6],ch
  40c7bd:	xor    al,0xd8
  40c7bf:	leave  
  40c7c0:	cmovnp ecx,DWORD PTR [ebx]
  40c7c3:	daa    
  40c7c4:	call   0x9967f201
  40c7c9:	jle    0x40c762
  40c7cb:	xor    ebp,ebp
  40c7cd:	iret   
  40c7ce:	and    BYTE PTR [esi+edx*4-0x1aea9185],0x20
  40c7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7d7:	test   eax,0x35236acb
  40c7dc:	xchg   esi,eax
  40c7dd:	mov    ch,0xbf
  40c7df:	dec    edi
  40c7e0:	ss enter 0xeef,0x40
  40c7e5:	cmp    DWORD PTR [edi-0x73],ebp
  40c7e8:	retf   
  40c7e9:	jmp    0x40c795
  40c7eb:	inc    ecx
  40c7ec:	and    dh,BYTE PTR [ebx]
  40c7ee:	dec    edx
  40c7ef:	pop    ebx
  40c7f0:	push   esi
  40c7f1:	bound  esp,QWORD PTR [ebx+eax*1+0x43ed3073]
  40c7f8:	or     bl,0xd6
  40c7fb:	daa    
  40c7fc:	pop    esi
  40c7fd:	fadd   DWORD PTR [eax-0x28bc01ce]
  40c803:	pop    edx
  40c804:	gs fsubr st(3),st
  40c807:	cld    
  40c808:	xchg   BYTE PTR cs:[ecx+0x74],cl
  40c80c:	mov    BYTE PTR [ebp+eiz*8-0x272703ce],0xb4
  40c814:	pushf  
  40c815:	pop    ecx
  40c816:	inc    esi
  40c817:	inc    ecx
  40c818:	push   esi
  40c819:	add    esi,edi
  40c81b:	pop    ds
  40c81c:	call   0xddaf:0x4213c0de
  40c823:	popa   
  40c824:	div    esp
  40c826:	das    
  40c827:	inc    eax
  40c828:	jle    0x40c7d5
  40c82a:	in     al,0x70
  40c82c:	sti    
  40c82d:	mov    cl,0x8
  40c82f:	sub    ecx,0xfffffff0
  40c832:	dec    eax
  40c833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c834:	jae    0x40c803
  40c836:	call   0x22f45218
  40c83b:	inc    ecx
  40c83c:	mov    eax,0x9c2dfefd
  40c841:	lea    esp,[ecx+esi*2]
  40c844:	rol    DWORD PTR [ebp+0x63],0xa8
  40c848:	cmc    
  40c849:	xchg   BYTE PTR [eax],ah
  40c84b:	mov    edi,0xb902ca17
  40c850:	dec    dl
  40c852:	pop    esp
  40c853:	out    0x17,eax
  40c855:	jo     0x40c894
  40c857:	test   al,0xdb
  40c859:	in     al,dx
  40c85a:	cmc    
  40c85b:	cwde   
  40c85c:	stos   DWORD PTR es:[edi],eax
  40c85d:	out    dx,eax
  40c85e:	push   esp
  40c85f:	je     0x40c835
  40c861:	jb     0x40c874
  40c863:	fist   WORD PTR [ecx+0x420e5306]
  40c869:	add    BYTE PTR [ebp-0x3a23d682],ah
  40c86f:	and    eax,0xd531cc5e
  40c874:	lds    ebp,FWORD PTR [ebp+0x4193d339]
  40c87a:	stc    
  40c87b:	pop    ebp
  40c87c:	jmp    FWORD PTR [ecx-0x6ac07ac5]
  40c882:	mov    dl,0xdd
  40c884:	mov    bh,bl
  40c886:	jmp    0x40c8bd
  40c888:	test   DWORD PTR [ebx],edx
  40c88a:	pop    ss
  40c88b:	jmp    0x40c8fd
  40c88d:	mov    BYTE PTR [esi+0x27308c1b],al
  40c893:	mov    bh,0xaf
  40c895:	xor    eax,0x4c1fb977
  40c89a:	cmp    DWORD PTR [ecx],edi
  40c89c:	fcmove st,st(4)
  40c89e:	lods   al,BYTE PTR ds:[esi]
  40c89f:	cmp    DWORD PTR [edi],0x33
  40c8a2:	cmp    esi,DWORD PTR [edx+ebp*8]
  40c8a5:	jno    0x40c8af
  40c8a7:	dec    edx
  40c8a8:	mov    ebx,0x8a059ee6
  40c8ad:	aas    
  40c8ae:	push   0xb1d1aa
  40c8b3:	inc    edi
  40c8b4:	sbb    al,0xe8
  40c8b6:	xor    eax,0x4e6773ef
  40c8bb:	cmp    al,0xd7
  40c8bd:	out    0x53,eax
  40c8bf:	push   0x7e7d2270
  40c8c4:	push   esi
  40c8c5:	cmc    
  40c8c6:	call   0xd76c:0x371fa4a0
  40c8cd:	mov    ecx,0x33c7997c
  40c8d2:	ins    DWORD PTR es:[edi],dx
  40c8d3:	daa    
  40c8d4:	add    ebp,0x5292294
  40c8da:	or     eax,0x9be590a8
  40c8df:	test   al,0xff
  40c8e1:	mov    edi,ebp
  40c8e3:	xchg   ebp,eax
  40c8e4:	clc    
  40c8e5:	cmp    BYTE PTR [ecx+edi*2+0x42],ch
  40c8e9:	lods   eax,DWORD PTR ds:[esi]
  40c8ea:	call   0x64935e82
  40c8ef:	outs   dx,BYTE PTR ds:[esi]
  40c8f0:	dec    ebx
  40c8f1:	jnp    0x40c948
  40c8f3:	dec    ebx
  40c8f4:	pop    esi
  40c8f5:	mov    edi,0x3a32227b
  40c8fa:	ret    0x663f
  40c8fd:	stc    
  40c8fe:	pop    eax
  40c8ff:	sbb    eax,DWORD PTR [ecx]
  40c901:	add    dl,BYTE PTR [edi-0x75]
  40c904:	lods   eax,DWORD PTR ds:[esi]
  40c905:	outs   dx,DWORD PTR ds:[esi]
  40c906:	cmp    ebp,DWORD PTR [eax]
  40c908:	int    0xcc
  40c90a:	lods   al,BYTE PTR ds:[esi]
  40c90b:	std    
  40c90c:	cld    
  40c90d:	nop
  40c90e:	xchg   ebp,eax
  40c90f:	les    ebp,FWORD PTR [edi-0xa237dca]
  40c915:	iret   
  40c916:	add    dh,BYTE PTR [eax-0x2f466cbe]
  40c91c:	mov    bl,0x58
  40c91e:	in     al,0xd4
  40c920:	outs   dx,BYTE PTR ds:[esi]
  40c921:	hlt    
  40c922:	push   ecx
  40c923:	adc    al,BYTE PTR [edi]
  40c925:	aas    
  40c926:	xor    al,0x92
  40c928:	xchg   DWORD PTR [edi+0x4f],edx
  40c92b:	jl     0x40c943
  40c92d:	jmp    0x5d8fef09
  40c932:	inc    ebp
  40c933:	out    dx,eax
  40c934:	ret    
  40c935:	pop    es
  40c936:	aas    
  40c937:	xor    DWORD PTR [edi+ebx*2+0x4c],ecx
  40c93b:	iret   
  40c93c:	fild   DWORD PTR [eax-0x20]
  40c93f:	mov    DWORD PTR [edx+0x7c4673cb],ebx
  40c945:	inc    esp
  40c946:	adc    esi,edx
  40c948:	ret    
  40c949:	push   edx
  40c94a:	push   eax
  40c94b:	xor    eax,0x8135e6cd
  40c950:	test   DWORD PTR [eax-0x6932bd89],esp
  40c956:	pusha  
  40c957:	push   edx
  40c958:	inc    ecx
  40c959:	mov    BYTE PTR [esi+eiz*8+0x31],bl
  40c95d:	or     cl,ch
  40c95f:	cmp    ebx,DWORD PTR [esp+ebp*8-0x69]
  40c963:	fmulp  st(1),st
  40c965:	sar    DWORD PTR [ebp-0xd1611e2],1
  40c96b:	icebp  
  40c96c:	mov    cl,0x81
  40c96e:	mov    dl,0x22
  40c970:	shr    BYTE PTR [eax+0x5fa7aea1],cl
  40c976:	jmp    0x573f:0xb1e5e3f2
  40c97d:	int    0x7e
  40c97f:	mov    DWORD PTR [edi+0x32623236],ebp
  40c985:	inc    edi
  40c986:	sub    DWORD PTR [ebp-0x44],edi
  40c989:	addr16 pop eax
  40c98b:	(bad)  
  40c98c:	jno    0x40c974
  40c98e:	lds    edx,FWORD PTR [edx]
  40c990:	or     eax,0x4020d222
  40c995:	rcr    DWORD PTR gs:[edi],0x89
  40c999:	js     0x40c9be
  40c99b:	leave  
  40c99c:	push   cs
  40c99d:	int    0xf0
  40c99f:	mov    ecx,eax
  40c9a1:	js     0x40c9c3
  40c9a3:	sbb    eax,DWORD PTR [eax]
  40c9a5:	mov    esi,0x302d103e
  40c9aa:	mov    bh,0x59
  40c9ac:	xchg   ebp,eax
  40c9ad:	and    esp,edx
  40c9af:	ds into 
  40c9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9b2:	xchg   ebp,eax
  40c9b3:	jmp    0x963db71b
  40c9b8:	iret   
  40c9b9:	and    al,0x2e
  40c9bb:	jg     0x40c9a2
  40c9bd:	loop   0x40c96a
  40c9bf:	and    bl,BYTE PTR [esp+edi*8-0x5d]
  40c9c3:	mov    ebp,0xab4be3e7
  40c9c8:	xor    BYTE PTR [edx],al
  40c9ca:	push   ds
  40c9cb:	rcr    dh,0x46
  40c9ce:	aaa    
  40c9cf:	xchg   ebx,eax
  40c9d0:	jne    0x40ca43
  40c9d2:	push   esp
  40c9d3:	cmp    cl,bl
  40c9d5:	cmp    al,0xcd
  40c9d7:	shl    edi,1
  40c9d9:	jne    0x40ca55
  40c9db:	jmp    0xf3e6:0x945d8223
  40c9e2:	pop    edx
  40c9e3:	inc    edi
  40c9e4:	or     eax,0xe7de7c7
  40c9e9:	xor    al,0x43
  40c9eb:	shl    DWORD PTR [ebx+0x67],cl
  40c9ee:	jp     0x40ca05
  40c9f0:	jae    0x40ca63
  40c9f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f3:	mov    ebp,0x551822cc
  40c9f8:	sub    BYTE PTR [edi-0x644bd8d3],dl
  40c9fe:	sub    esp,DWORD PTR [edi+ebx*4]
  40ca01:	xchg   BYTE PTR [eax-0x7092b35f],ah
  40ca07:	mov    esi,0x558ebd72
  40ca0c:	xchg   ebp,eax
  40ca0d:	inc    edx
  40ca0e:	mov    eax,ds:0xd55b986a
  40ca13:	jnp    0x40ca4c
  40ca15:	ss repz js 0x40c9a6
  40ca19:	xor    DWORD PTR [esp+ebx*8-0x22],0xc9f10720
  40ca21:	outs   dx,DWORD PTR ds:[si]
  40ca23:	fist   DWORD PTR [ecx-0x17]
  40ca26:	ret    
  40ca27:	sbb    ch,0xd0
  40ca2a:	add    ch,0xef
  40ca2d:	jo     0x40ca83
  40ca2f:	or     ebx,esi
  40ca31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca32:	mov    esi,0x644ffa55
  40ca37:	push   edi
  40ca38:	cli    
  40ca39:	idiv   BYTE PTR [ecx]
  40ca3b:	call   0xd6b7:0xea67d432
  40ca42:	mov    edi,0xd12bf8a8
  40ca47:	not    BYTE PTR [edx-0x4b]
  40ca4a:	lods   eax,DWORD PTR cs:[esi]
  40ca4c:	daa    
  40ca4d:	subps  xmm2,xmm1
  40ca50:	pop    edx
  40ca51:	cmp    bh,BYTE PTR [esp+edi*1-0x33130949]
  40ca58:	test   al,0x23
  40ca5a:	xlat   BYTE PTR ds:[ebx]
  40ca5b:	mov    al,ds:0x2c14e987
  40ca60:	sbb    al,0x0
  40ca62:	jno    0x40cae2
  40ca64:	adc    eax,0xad32d422
  40ca69:	xchg   ebx,eax
  40ca6a:	imul   eax,DWORD PTR [ecx],0xffffffe0
  40ca6d:	adc    BYTE PTR [edi-0x23db9c2f],al
  40ca73:	push   eax
  40ca74:	(bad)
  40ca78:	and    BYTE PTR [edx-0x54],ch
  40ca7b:	dec    ebp
  40ca7c:	inc    ebx
  40ca7d:	and    DWORD PTR [ebp-0x58],edi
  40ca80:	xchg   edx,eax
  40ca81:	shl    DWORD PTR [edi+esi*2+0x1496b626],cl
  40ca88:	loope  0x40ca38
  40ca8a:	or     eax,0x8089c1aa
  40ca8f:	xor    BYTE PTR [edx+0x1d],bl
  40ca92:	xor    ebx,DWORD PTR [edx+ebp*8-0x24b63915]
  40ca99:	jecxz  0x40ca8a
  40ca9b:	xchg   ecx,eax
  40ca9c:	xchg   ch,ch
  40ca9e:	call   0x1685:0xd89b6b4d
  40caa5:	push   ss
  40caa6:	pop    ecx
  40caa7:	mov    ds:0xd63c91,al
  40caac:	or     eax,0x2fc7c5ad
  40cab1:	outs   dx,DWORD PTR ds:[esi]
  40cab2:	cmp    eax,0x1996bf4b
  40cab7:	cwde   
  40cab8:	fnstsw WORD PTR [esi-0x74]
  40cabb:	into   
  40cabc:	sbb    BYTE PTR [ecx],ch
  40cabe:	ins    DWORD PTR es:[edi],dx
  40cabf:	mov    ecx,0x32a6b6f0
  40cac4:	aam    0x65
  40cac6:	loop   0x40caea
  40cac8:	jecxz  0x40cabf
  40caca:	sub    eax,0x5ce12c44
  40cacf:	sbb    al,BYTE PTR [edi-0x4]
  40cad2:	repz pop esp
  40cad4:	push   ecx
  40cad5:	jb     0x40cad9
  40cad7:	aaa    
  40cad8:	mov    eax,ds:0xae53bd15
  40cadd:	out    0xd,al
  40cadf:	pop    edx
  40cae0:	retf   
  40cae1:	jp     0x40caa9
  40cae3:	loope  0x40cafc
  40cae5:	ror    DWORD PTR [edi-0x76f7e69f],1
  40caeb:	push   ebx
  40caec:	add    BYTE PTR [edx-0x15],ah
  40caef:	lds    edi,FWORD PTR [ebx-0x47]
  40caf2:	jae    0x40cad0
  40caf4:	push   esi
  40caf5:	jnp    0x40cb1f
  40caf7:	sbb    DWORD PTR [ebx-0x5c],esp
  40cafa:	jge    0x40cb1d
  40cafc:	mov    esp,0x5209d50b
  40cb01:	mov    BYTE PTR [eax-0x8921200],ah
  40cb07:	push   ds
  40cb08:	imul   ecx,DWORD PTR [edx+0x6],0x61df3a5f
  40cb0f:	repz xchg esi,eax
  40cb11:	or     ecx,0xdf183fc
  40cb17:	inc    esi
  40cb18:	dec    edx
  40cb19:	push   ebp
  40cb1a:	cdq    
  40cb1b:	fiadd  WORD PTR [edi+ecx*8-0x15]
  40cb1f:	ror    BYTE PTR es:[ebp-0x50723e6d],1
  40cb26:	clc    
  40cb27:	xchg   edi,eax
  40cb28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb29:	cmp    esi,0x9253d30c
  40cb2f:	js     0x40cb7f
  40cb31:	pop    esi
  40cb32:	icebp  
  40cb33:	cli    
  40cb34:	lahf   
  40cb35:	add    eax,0xb50b9c78
  40cb3a:	and    edi,DWORD PTR [ecx-0x44]
  40cb3d:	cli    
  40cb3e:	fidivr DWORD PTR [edx+eiz*2-0x45]
  40cb42:	aam    0x48
  40cb44:	mov    ds:0x1fc58173,al
  40cb49:	sbb    DWORD PTR [ecx+0x13],esi
  40cb4c:	mov    al,0x40
  40cb4e:	mov    dl,0xa4
  40cb50:	mov    ecx,0x664f948b
  40cb55:	cmp    eax,0x83106c70
  40cb5a:	scas   al,BYTE PTR es:[edi]
  40cb5b:	es jnp 0x40cb69
  40cb5e:	not    bl
  40cb60:	jmp    0x40cb1c
  40cb62:	popa   
  40cb63:	jno    0x40cb35
  40cb65:	dec    ebp
  40cb66:	fstp   TBYTE PTR [edx+eax*8-0x4b]
  40cb6a:	dec    ebx
  40cb6b:	jno    0x40cb23
  40cb6d:	arpl   WORD PTR [esi-0x2bccea6b],bp
  40cb73:	xlat   BYTE PTR ds:[ebx]
  40cb74:	les    esi,FWORD PTR [ebp*1-0x257a1236]
  40cb7b:	pop    ebx
  40cb7c:	or     DWORD PTR [ebx-0x65bc8d9e],edx
  40cb82:	dec    esp
  40cb83:	jp     0x40cb71
  40cb85:	arpl   WORD PTR [eax+0x6d5851ea],cx
  40cb8b:	call   0x6144:0xe681d966
  40cb92:	mov    ecx,0xcd403b5d
  40cb97:	adc    dl,BYTE PTR [esi-0x4a]
  40cb9a:	pop    eax
  40cb9b:	push   0x2d
  40cb9d:	into   
  40cb9e:	inc    esp
  40cb9f:	(bad)  ds:0x7e518d2f
  40cba5:	pop    ds
  40cba6:	leave  
  40cba7:	or     al,0x8b
  40cba9:	mov    bh,0xe2
  40cbab:	push   0xfc6daaa5
  40cbb0:	clc    
  40cbb1:	xchg   esp,eax
  40cbb2:	addr16 mov al,ds:0x34a7
  40cbb6:	test   eax,0xaf420d
  40cbbb:	mov    bh,0x9d
  40cbbd:	shr    BYTE PTR [esi],cl
  40cbbf:	add    ebx,ebx
  40cbc1:	jle    0x40cb57
  40cbc3:	js     0x40cba6
  40cbc5:	mov    ds:0x91ae79ec,al
  40cbca:	xchg   ebp,eax
  40cbcb:	cli    
  40cbcc:	dec    ebx
  40cbcd:	sub    DWORD PTR [eax],0x529a562e
  40cbd3:	pop    eax
  40cbd4:	ss add eax,0x7db9d7fa
  40cbda:	xor    al,0x44
  40cbdc:	pusha  
  40cbdd:	inc    eax
  40cbde:	lock cli 
  40cbe0:	les    ebp,FWORD PTR [ebx+0x2c]
  40cbe3:	fmul   DWORD PTR [eax+0x25]
  40cbe6:	mov    eax,0xfcae0aa6
  40cbeb:	outs   dx,DWORD PTR ds:[esi]
  40cbec:	jne    0x40cc6c
  40cbee:	mov    bl,0x98
  40cbf0:	adc    ah,0x5d
  40cbf3:	retf   
  40cbf4:	popa   
  40cbf5:	fbld   TBYTE PTR [ebp-0x44620160]
  40cbfb:	fdivr  st(5),st
  40cbfd:	add    al,0x23
  40cbff:	scas   al,BYTE PTR es:[edi]
  40cc00:	jmp    0xa083710a
  40cc05:	jnp    0x40cbf5
  40cc07:	pop    edi
  40cc08:	xlat   BYTE PTR ds:[ebx]
  40cc09:	icebp  
  40cc0a:	out    dx,al
  40cc0b:	mov    dl,0x63
  40cc0d:	fcomp  DWORD PTR [eax+0x4acba3a3]
  40cc13:	cld    
  40cc14:	mov    ah,BYTE PTR [ecx+0x18035050]
  40cc1a:	mov    ebp,0x64fc9e19
  40cc1f:	jle    0x40cc31
  40cc21:	imul   edx,edi,0xd239e9ad
  40cc27:	xchg   BYTE PTR [ebx],al
  40cc29:	rcr    ah,0x15
  40cc2c:	xor    al,0x44
  40cc2e:	add    esp,DWORD PTR [edi-0x2e]
  40cc31:	jge    0x40cc0b
  40cc33:	inc    edi
  40cc34:	les    edx,FWORD PTR [edx]
  40cc36:	sbb    BYTE PTR [ecx+0x3b],dl
  40cc39:	fsubr  QWORD PTR [edx+0x3055a025]
  40cc3f:	(bad)  
  40cc40:	push   edi
  40cc41:	mov    dh,dh
  40cc43:	adc    BYTE PTR [ebx],bl
  40cc45:	fdiv   DWORD PTR [eax]
  40cc47:	into   
  40cc48:	in     eax,dx
  40cc49:	arpl   bp,cx
  40cc4b:	xor    DWORD PTR [edi+0x42a61dea],eax
  40cc51:	pop    ecx
  40cc52:	retf   0xd9d3
  40cc55:	push   edx
  40cc56:	dec    esi
  40cc57:	sbb    cl,BYTE PTR [ebx-0x60aafd2f]
  40cc5d:	xchg   esp,edi
  40cc5f:	lds    esi,FWORD PTR [edi-0x73]
  40cc62:	rol    esp,0xb0
  40cc65:	sub    DWORD PTR [ecx+0xbb4f4c8],edx
  40cc6b:	push   esi
  40cc6c:	cmp    BYTE PTR [ecx-0x64],cl
  40cc6f:	test   al,0x6
  40cc71:	imul   BYTE PTR [ebp+0x31c5236f]
  40cc77:	in     al,dx
  40cc78:	cs enter 0x3c84,0xdf
  40cc7d:	or     DWORD PTR [edx+0xf],0xddadf4b6
  40cc84:	mov    ebp,0x185998b8
  40cc89:	daa    
  40cc8a:	mov    bl,0xf7
  40cc8c:	cld    
  40cc8d:	dec    esp
  40cc8e:	mov    ebp,ecx
  40cc90:	not    DWORD PTR [eax]
  40cc92:	sub    DWORD PTR [ebp+0x234edae9],0x441c9ed3
  40cc9c:	and    bx,dx
  40cc9f:	push   edx
  40cca0:	test   ch,dl
  40cca2:	loopne 0x40cc29
  40cca4:	inc    ebp
  40cca5:	xor    al,0x56
  40cca7:	mov    bl,0xa8
  40cca9:	repnz out 0x59,eax
  40ccac:	popa   
  40ccad:	jle    0x40cd2c
  40ccaf:	bound  ebp,QWORD PTR [esi+0x55]
  40ccb2:	(bad)  [edi+ebx*8-0x11]
  40ccb6:	daa    
  40ccb7:	mov    eax,0xc9800d71
  40ccbc:	pause  
  40ccbe:	mov    dh,ch
  40ccc0:	cmc    
  40ccc1:	dec    ebp
  40ccc2:	dec    ebx
  40ccc3:	call   0x54fbac8
  40ccc8:	nop
  40ccc9:	add    BYTE PTR [eax+esi*1],al
  40cccc:	leave  
  40cccd:	or     ebx,esp
  40cccf:	dec    eax
  40ccd0:	addr16 pusha 
  40ccd2:	xchg   DWORD PTR [eax-0x1a],eax
  40ccd5:	xchg   ebx,eax
  40ccd6:	pop    ecx
  40ccd7:	aaa    
  40ccd8:	or     ebx,DWORD PTR [edi+0x4d]
  40ccdb:	std    
  40ccdc:	sub    DWORD PTR [esi-0x57fa3e9e],ecx
  40cce2:	ror    DWORD PTR [ebp-0x1f],cl
  40cce5:	jns    0x40ccbe
  40cce7:	mov    fs,WORD PTR [edi+ecx*2]
  40ccea:	stos   BYTE PTR es:[edi],al
  40cceb:	pop    es
  40ccec:	in     al,dx
  40cced:	sub    al,0x6
  40ccef:	lods   al,BYTE PTR ds:[esi]
  40ccf0:	dec    edx
  40ccf1:	dec    esp
  40ccf2:	lods   eax,DWORD PTR ds:[esi]
  40ccf3:	dec    ecx
  40ccf4:	stc    
  40ccf5:	pop    ds
  40ccf6:	bswap  esp
  40ccf8:	lods   eax,DWORD PTR ds:[esi]
  40ccf9:	mov    gs,WORD PTR [eax+0x31]
  40ccfc:	imul   esp,edx,0xfffffff2
  40ccff:	xor    bl,dh
  40cd01:	pop    es
  40cd02:	idiv   BYTE PTR [esi+0x68]
  40cd05:	nop
  40cd06:	mov    ds:0x25505323,eax
  40cd0b:	stc    
  40cd0c:	loop   0x40ccdf
  40cd0e:	mov    eax,eax
  40cd10:	adc    al,0x1c
  40cd12:	mov    esi,0xa3f9e315
  40cd17:	xchg   ah,dl
  40cd19:	pop    esi
  40cd1a:	jge    0x40ccd3
  40cd1c:	mov    eax,ds:0x6fe0ab24
  40cd21:	hlt    
  40cd22:	push   eax
  40cd23:	sbb    eax,0xb4300ce
  40cd28:	add    BYTE PTR ds:0x60fc9358,bl
  40cd2e:	and    eax,0xe0d92bd5
  40cd33:	pop    ds
  40cd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd35:	xor    DWORD PTR [esp+ebx*1],0x4c
  40cd39:	adc    bh,BYTE PTR [esi-0x62]
  40cd3c:	test   al,0x77
  40cd3e:	vpsrad ymm3,ymm3,XMMWORD PTR [ebx]
  40cd42:	ss retf 0xb539
  40cd46:	adc    BYTE PTR [esp+ebx*4+0x3c],bh
  40cd4a:	mov    eax,ds:0xece85446
  40cd4f:	fdiv   QWORD PTR [ebx+0x38]
  40cd52:	imul   ecx,esi,0x7d
  40cd55:	and    dh,0xcc
  40cd58:	loopne 0x40cce3
  40cd5a:	fsub   DWORD PTR [esi+0x2d]
  40cd5d:	pop    es
  40cd5e:	xchg   esp,eax
  40cd5f:	xchg   bh,bh
  40cd61:	dec    edx
  40cd62:	lods   al,BYTE PTR ds:[esi]
  40cd63:	sub    BYTE PTR [ebp-0x59],cl
  40cd66:	jmp    0x40cdb5
  40cd68:	in     eax,0x0
  40cd6a:	loope  0x40cdae
  40cd6c:	cwde   
  40cd6d:	test   eax,0xd88491b7
  40cd72:	push   0xffffffce
  40cd74:	adc    bl,BYTE PTR [eax+0x35a667d]
  40cd7a:	fsub   QWORD PTR [ebp+0x2b]
  40cd7d:	xchg   ebp,eax
  40cd7e:	out    dx,al
  40cd7f:	mov    al,ds:0x56da43a2
  40cd84:	arpl   WORD PTR [eax-0x7c90262d],ax
  40cd8a:	xchg   esi,eax
  40cd8b:	pop    ss
  40cd8c:	and    BYTE PTR [edx-0x42],cl
  40cd8f:	jnp    0x40cdd8
  40cd91:	scas   eax,DWORD PTR es:[edi]
  40cd92:	adc    al,0x67
  40cd94:	pop    edi
  40cd95:	rcr    DWORD PTR ds:0x3c8d3be2,0xf5
  40cd9c:	inc    ecx
  40cd9d:	adc    dl,BYTE PTR [eax-0x348339c7]
  40cda3:	jge    0x40cdf2
  40cda5:	in     eax,0xf5
  40cda7:	sbb    edi,edx
  40cda9:	push   ds
  40cdaa:	(bad)  
  40cdab:	pop    esi
  40cdac:	xor    BYTE PTR [eax-0x64],dh
  40cdaf:	cmp    al,0xbd
  40cdb1:	loopne 0x40cd3d
  40cdb3:	cmp    ecx,DWORD PTR [esi]
  40cdb5:	stos   DWORD PTR es:[edi],eax
  40cdb6:	test   DWORD PTR [eax-0x29],0x938d8bda
  40cdbd:	cmp    ecx,DWORD PTR [esi+0x18]
  40cdc0:	sbb    eax,DWORD PTR [eax]
  40cdc2:	adc    eax,0xe6a42e9c
  40cdc7:	xchg   edi,eax
  40cdc8:	xor    ebx,DWORD PTR [ecx+edi*2-0x5]
  40cdcc:	repnz add DWORD PTR [edi+0x1a],ebp
  40cdd0:	fld    TBYTE PTR [ebx]
  40cdd2:	fidiv  WORD PTR ds:0x9b7ae2e
  40cdd8:	scas   al,BYTE PTR es:[edi]
  40cdd9:	ss dec edi
  40cddb:	sbb    eax,0x6c7caa79
  40cde0:	cdq    
  40cde1:	sbb    DWORD PTR [edx-0x317e4c58],ecx
  40cde7:	adc    bh,BYTE PTR [esi]
  40cde9:	test   eax,0xd6861825
  40cdee:	or     ecx,DWORD PTR [edi+0x827345]
  40cdf4:	dec    esp
  40cdf5:	push   edi
  40cdf6:	mov    bl,0x1b
  40cdf8:	mov    al,ds:0xe64c9070
  40cdfd:	jns    0x40cdef
  40cdff:	test   bh,bl
  40ce01:	sub    esp,DWORD PTR ds:0x8bc7670b
  40ce07:	mov    ebx,0x4e555cf2
  40ce0c:	cld    
  40ce0d:	sar    DWORD PTR [eax+0x49f8d32c],1
  40ce13:	xchg   BYTE PTR [ebp-0x53d3dc70],dl
  40ce19:	cwde   
  40ce1a:	popa   
  40ce1b:	dec    ecx
  40ce1c:	nop
  40ce1d:	mov    BYTE PTR [edx+0x1a],dh
  40ce20:	out    dx,al
  40ce21:	pop    DWORD PTR [esi]
  40ce23:	ja     0x40cdf0
  40ce25:	(bad)  
  40ce26:	jecxz  0x40ce5b
  40ce28:	or     BYTE PTR [esi-0x2a1d3f40],ah
  40ce2e:	or     eax,0x7bd9b4c2
  40ce33:	sahf   
  40ce34:	mov    ebp,0xfd77c3f6
  40ce39:	rol    BYTE PTR [ebx+0x36077568],cl
  40ce3f:	fwait
  40ce40:	dec    eax
  40ce41:	lods   al,BYTE PTR ds:[esi]
  40ce42:	inc    ebp
  40ce43:	push   ss
  40ce44:	sahf   
  40ce45:	xchg   ebp,eax
  40ce46:	mov    al,0x5c
  40ce48:	mov    ds:0x541736fd,al
  40ce4d:	cmp    eax,0xbbbbbc
  40ce52:	and    BYTE PTR [ecx],dl
  40ce54:	pusha  
  40ce55:	mov    ebp,0x4210a9c8
  40ce5a:	mov    esi,0xeff94686
  40ce5f:	je     0x40ce12
  40ce61:	pop    es
  40ce62:	xor    eax,0xdc9281ba
  40ce67:	das    
  40ce68:	mov    ebp,0x1fc460ca
  40ce6d:	adc    edi,DWORD PTR fs:[edx]
  40ce70:	(bad)  
  40ce71:	in     eax,0x32
  40ce73:	rol    DWORD PTR [edi],0xce
  40ce76:	adc    cl,BYTE PTR [ecx-0x75bbf491]
  40ce7c:	pop    ebx
  40ce7d:	inc    edi
  40ce7e:	add    bl,BYTE PTR [edi]
  40ce80:	add    al,0x56
  40ce82:	mov    dl,0x5c
  40ce84:	sub    BYTE PTR [eax+0x20],ch
  40ce87:	loop   0x40ce83
  40ce89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce8a:	pushf  
  40ce8b:	aaa    
  40ce8c:	add    DWORD PTR [ecx+ebx*8-0x4d],ecx
  40ce90:	jo     0x40cea3
  40ce92:	fwait
  40ce93:	xor    cl,bl
  40ce95:	push   ss
  40ce96:	call   0xa6494bed
  40ce9b:	cmp    BYTE PTR [edi-0x49abda2b],bl
  40cea1:	loop   0x40ce88
  40cea3:	mov    ds:0x479010b,eax
  40cea8:	or     cl,ch
  40ceaa:	inc    ebp
  40ceab:	shl    DWORD PTR [edx],cl
  40cead:	and    eax,0x3716bd34
  40ceb2:	outs   dx,DWORD PTR ds:[esi]
  40ceb3:	icebp  
  40ceb4:	outs   dx,DWORD PTR ds:[esi]
  40ceb5:	mov    ecx,0x8b20f21e
  40ceba:	dec    edx
  40cebb:	jge    0x40cf0c
  40cebd:	sub    BYTE PTR [edi+0x37d9c50b],0xb3
  40cec4:	adc    DWORD PTR [eax+0x63b19aad],0xa63308dd
  40cece:	and    esp,DWORD PTR [edx-0x6a6ab260]
  40ced4:	call   0xf01d:0xdb965135
  40cedb:	dec    esp
  40cedc:	(bad)  
  40cedd:	mov    eax,0x192301f8
  40cee2:	add    ch,BYTE PTR [eax-0x4e32350]
  40cee8:	into   
  40cee9:	mov    BYTE PTR [edx-0x54f92936],0x27
  40cef0:	repz (bad) 
  40cef3:	inc    eax
  40cef4:	pop    esp
  40cef5:	inc    edx
  40cef6:	je     0x40cf3e
  40cef8:	test   DWORD PTR [ecx+0x1e],eax
  40cefb:	nop
  40cefc:	xor    dh,cl
  40cefe:	not    DWORD PTR [edx-0x73]
  40cf01:	fcom   st(3)
  40cf03:	aad    0x1a
  40cf05:	dec    ebp
  40cf06:	loop   0x40cf14
  40cf08:	in     eax,0xbb
  40cf0a:	mov    esp,0x342cffd6
  40cf0f:	bound  esp,QWORD PTR [edx]
  40cf11:	retf   0x8ba4
  40cf14:	xor    al,0x63
  40cf16:	sti    
  40cf17:	(bad)  [edi]
  40cf19:	mov    cl,0xa8
  40cf1b:	ror    DWORD PTR [edx],1
  40cf1d:	adc    bh,BYTE PTR [esi+eiz*4-0x6c]
  40cf21:	popa   
  40cf22:	inc    esi
  40cf23:	mov    eax,0x39c12cbd
  40cf28:	mov    edi,0xd948db2a
  40cf2d:	or     al,0x3d
  40cf2f:	les    ebx,FWORD PTR [esp+ebp*1-0xb]
  40cf33:	dec    ebx
  40cf34:	jb     0x40cf21
  40cf36:	(bad)  
  40cf37:	stc    
  40cf38:	lds    esp,FWORD PTR [edx-0x30]
  40cf3b:	mov    esi,0xd06f3765
  40cf40:	and    ch,BYTE PTR [esi*2-0x553327b3]
  40cf47:	push   0xffffffb1
  40cf49:	xor    cl,BYTE PTR [ecx-0x4a]
  40cf4c:	fucomi st,st(3)
  40cf4e:	mov    dh,0x8e
  40cf50:	sbb    edi,DWORD PTR [ebx]
  40cf52:	sub    al,0x8f
  40cf54:	(bad)  
  40cf55:	dec    ebp
  40cf56:	mov    DWORD PTR [esi-0x2b],ecx
  40cf59:	into   
  40cf5a:	jp     0x40cfa8
  40cf5c:	xor    DWORD PTR [eax+ebp*8],esi
  40cf5f:	xchg   dh,ah
  40cf61:	push   0x17
  40cf63:	nop
  40cf64:	test   al,0xa4
  40cf66:	jne    0x40cef9
  40cf68:	loopne 0x40cf8c
  40cf6a:	or     eax,0x6447e07c
  40cf6f:	cmp    ch,bl
  40cf71:	and    DWORD PTR [ebx+0x3f445c42],edi
  40cf77:	lahf   
  40cf78:	mov    ebx,0x33d1032b
  40cf7d:	ror    DWORD PTR [ebx+0x4340141d],cl
  40cf83:	add    BYTE PTR [ecx],cl
  40cf85:	sbb    eax,0x436018
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	sar    BYTE PTR [eax+eiz*8+0x35],0x65
  40cfb5:	loop   0x40d033
  40cfb7:	jl     0x40cfa4
  40cfb9:	pop    edi
  40cfba:	jl     0x40d038
  40cfbc:	dec    esp
  40cfbd:	pop    edx
  40cfbe:	adc    dl,al
  40cfc0:	dec    ebp
  40cfc1:	inc    BYTE PTR [edx]
  40cfc3:	sbb    DWORD PTR ds:0xc607dbd3,ecx
  40cfc9:	push   esp
  40cfca:	push   esi
  40cfcb:	cdq    
  40cfcc:	jnp    0x40cfda
  40cfce:	fsubr  QWORD PTR [esi+0x3bc9d579]
  40cfd4:	mov    ch,0xb7
  40cfd6:	imul   ecx,DWORD PTR ds:0xd4ee8941,0xbdda4a78
  40cfe0:	enter  0x2751,0x60
  40cfe4:	mov    ch,0xc6
  40cfe6:	sbb    edx,DWORD PTR [edx+0x4f05d48d]
  40cfec:	rcr    DWORD PTR [ebp-0x5d],0xb8
  40cff0:	push   eax
  40cff1:	test   al,0xfc
  40cff3:	repz xchg esp,eax
  40cff5:	cwde   
  40cff6:	stc    
  40cff7:	and    bl,BYTE PTR [eax+ecx*8]
  40cffa:	xor    eax,DWORD PTR [ebp+ebx*2-0x287d3977]
  40d001:	test   BYTE PTR [esi+ecx*2+0x7a17cfe],cl
  40d008:	daa    
  40d009:	xor    BYTE PTR [edx+0x66],bh
  40d00c:	retf   0x952f
  40d00f:	mov    cl,0x64
  40d011:	pusha  
  40d012:	dec    edi
  40d013:	mov    edx,0xc389c436
  40d018:	cmp    BYTE PTR [esi],0x6e
  40d01b:	lods   al,BYTE PTR ds:[esi]
  40d01c:	xor    bh,cl
  40d01e:	lds    ebx,FWORD PTR [esi+0x18]
  40d021:	push   0x583b61d4
  40d026:	xor    al,0x99
  40d028:	shl    BYTE PTR [ebp+esi*4+0x9],1
  40d02c:	lods   eax,DWORD PTR ds:[esi]
  40d02d:	daa    
  40d02e:	jnp    0x40cfed
  40d030:	mov    bh,0xbe
  40d032:	ins    DWORD PTR es:[edi],dx
  40d033:	mov    BYTE PTR [ecx],dh
  40d035:	imul   edx,ebx,0x3d
  40d038:	mov    ah,0xe0
  40d03a:	add    BYTE PTR [esi-0x59a404ad],al
  40d040:	sub    eax,DWORD PTR [edi-0x72ed3287]
  40d046:	sbb    ch,BYTE PTR [eax+0x40]
  40d049:	leave  
  40d04a:	pop    ss
  40d04b:	add    eax,0x82d7bdc6
  40d050:	inc    ecx
  40d052:	cli    
  40d053:	fld    st(1)
  40d055:	jl     0x40d056
  40d057:	jmp    0x6ea027a5
  40d05c:	retf   
  40d05d:	jno    0x40d069
  40d05f:	cs pop edi
  40d061:	repz xchg edi,eax
  40d063:	ss cs xchg edi,eax
  40d066:	loope  0x40d097
  40d068:	xchg   ebx,eax
  40d069:	or     esi,DWORD PTR [ecx+ebx*2]
  40d06c:	shl    DWORD PTR [ecx+0x31f91b78],cl
  40d072:	push   esp
  40d073:	dec    ebx
  40d074:	sub    DWORD PTR [ebp+0x6b],ebp
  40d077:	cmp    ebx,edx
  40d079:	addr16 jl 0x40d016
  40d07c:	push   ss
  40d07d:	inc    esp
  40d07e:	pop    ebx
  40d07f:	dec    ebp
  40d080:	mov    ?,WORD PTR [eax]
  40d082:	nop
  40d083:	ret    
  40d084:	pop    ecx
  40d085:	inc    edx
  40d086:	mov    cl,0x9e
  40d088:	xchg   ecx,eax
  40d089:	jle    0x40d0c7
  40d08b:	sbb    eax,DWORD PTR [ecx+ebx*4-0x3c7e384a]
  40d092:	adc    BYTE PTR [bx+di],0x3c
  40d096:	into   
  40d097:	sar    DWORD PTR [eax],0xfa
  40d09a:	inc    esi
  40d09b:	and    eax,0xe182f1d2
  40d0a0:	lea    edx,[ebx]
  40d0a2:	lds    ebp,FWORD PTR es:[ecx+ebp*4+0x5dc622e6]
  40d0aa:	jecxz  0x40d0a0
  40d0ac:	jecxz  0x40d086
  40d0ae:	pop    ecx
  40d0af:	imul   ebp,DWORD PTR es:[ecx],0x3e
  40d0b3:	iret   
  40d0b4:	retf   
  40d0b5:	push   ebx
  40d0b6:	jge    0x40d0ff
  40d0b8:	loope  0x40d079
  40d0ba:	push   eax
  40d0bb:	xor    eax,0x91412fc2
  40d0c0:	shl    edi,0x27
  40d0c3:	adc    BYTE PTR [edx-0x59],dl
  40d0c6:	lea    esi,[edx+0x64]
  40d0c9:	int3   
  40d0ca:	les    edi,FWORD PTR [edx-0x7b71d373]
  40d0d0:	mov    BYTE PTR [ebx-0x4b],al
  40d0d3:	add    ch,cl
  40d0d5:	mov    eax,0xc2dd17dd
  40d0da:	mov    eax,ds:0x8ed9f2e5
  40d0df:	or     DWORD PTR [ecx],esp
  40d0e1:	and    bh,BYTE PTR [ebx]
  40d0e3:	ror    BYTE PTR [eax],cl
  40d0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0e6:	sub    dl,0x2b
  40d0e9:	push   ecx
  40d0ea:	outs   dx,DWORD PTR ds:[esi]
  40d0eb:	es jnp 0x40d0a5
  40d0ee:	retf   0x70f2
  40d0f1:	mov    edx,0x383db3fd
  40d0f6:	push   edx
  40d0f7:	xor    eax,0x2820bb18
  40d0fc:	mov    esp,0x4d798329
  40d101:	stos   BYTE PTR es:[edi],al
  40d102:	add    esi,esi
  40d104:	cmp    DWORD PTR [esi],esi
  40d106:	stos   DWORD PTR es:[edi],eax
  40d107:	adc    BYTE PTR [edx],dh
  40d109:	lahf   
  40d10a:	inc    DWORD PTR [ecx+0x3e]
  40d10d:	jecxz  0x40d0f0
  40d10f:	loop   0x40d10e
  40d111:	sbb    DWORD PTR [edi],edx
  40d113:	inc    eax
  40d114:	sar    DWORD PTR ds:0x7bacf780,0xee
  40d11b:	xor    eax,0xe7bd8a97
  40d120:	neg    DWORD PTR [ecx+0x6a10ae9b]
  40d126:	in     al,dx
  40d127:	(bad)  
  40d128:	fldcw  WORD PTR [edi+0x56]
  40d12b:	dec    edx
  40d12c:	sbb    edi,esi
  40d12e:	adc    cl,BYTE PTR [edx-0x5d]
  40d131:	call   0x638c8c22
  40d136:	or     ch,BYTE PTR [ebx+0x23b3643e]
  40d13c:	mov    al,0x41
  40d13e:	xchg   edx,eax
  40d13f:	xor    bl,BYTE PTR [ecx+0x185dbd76]
  40d145:	cwde   
  40d146:	cs mov edx,0xfd998019
  40d14c:	popa   
  40d14d:	xor    BYTE PTR [edx],0x6
  40d150:	inc    edx
  40d151:	lods   al,BYTE PTR ds:[esi]
  40d152:	popf   
  40d153:	pusha  
  40d154:	pop    ebp
  40d155:	mov    BYTE PTR [ecx],al
  40d157:	pop    ebx
  40d158:	shl    dh,1
  40d15a:	popa   
  40d15b:	aas    
  40d15c:	add    DWORD PTR [ecx],eax
  40d15e:	in     eax,0x9a
  40d160:	out    0x7a,al
  40d162:	loope  0x40d1cf
  40d164:	mov    eax,ds:0x18d73166
  40d169:	xor    eax,0x860c315a
  40d16e:	xlat   BYTE PTR ds:[ebx]
  40d16f:	xchg   ebp,eax
  40d170:	xchg   edi,eax
  40d171:	int3   
  40d172:	pop    eax
  40d173:	sub    DWORD PTR [ebx+0x26],eax
  40d176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d177:	dec    ebp
  40d178:	test   eax,0x610e71ad
  40d17d:	and    ebx,DWORD PTR ds:0x3698a5a
  40d183:	xchg   cx,ax
  40d185:	or     DWORD PTR [ebp-0x66],ebx
  40d188:	lds    ebx,FWORD PTR [edi-0x4ef084f9]
  40d18e:	xchg   ebp,eax
  40d18f:	test   al,0x8f
  40d191:	fs in  eax,dx
  40d193:	sbb    al,0x88
  40d195:	sbb    dh,BYTE PTR [edi+0x613e7339]
  40d19b:	div    BYTE PTR [esp+edi*4+0x22859531]
  40d1a2:	or     al,0xf6
  40d1a4:	popa   
  40d1a5:	inc    ecx
  40d1a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1a7:	mov    ebx,0xd0b7bb16
  40d1ac:	js     0x40d1c1
  40d1ae:	push   esi
  40d1af:	or     eax,0x279557d0
  40d1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1b5:	mov    dh,BYTE PTR ds:0x1fab08bb
  40d1bb:	shr    DWORD PTR [eax-0x17],cl
  40d1be:	xor    BYTE PTR ds:0xaf34343f,bl
  40d1c4:	les    ebp,FWORD PTR [esi]
  40d1c6:	dec    eax
  40d1c7:	test   al,0x5f
  40d1c9:	dec    ecx
  40d1ca:	inc    edi
  40d1cb:	(bad)  
  40d1cc:	(bad)  
  40d1cd:	jmp    0x40d1e7
  40d1cf:	push   edx
  40d1d0:	sub    eax,0x1c0e16a0
  40d1d5:	shr    esi,cl
  40d1d7:	pop    edx
  40d1d8:	jge    0x40d237
  40d1da:	jmp    0x40d200
  40d1dc:	mov    edx,0x6e825fdb
  40d1e1:	dec    ecx
  40d1e2:	ins    DWORD PTR es:[edi],dx
  40d1e3:	jbe    0x40d1c1
  40d1e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1e6:	(bad)  
  40d1e7:	fsub   QWORD PTR [ebx+ebx*8-0x14]
  40d1eb:	cmp    cl,BYTE PTR [ebp-0x7f280ba9]
  40d1f1:	sub    al,0xd9
  40d1f3:	pop    ecx
  40d1f4:	mul    BYTE PTR [ebx]
  40d1f6:	adc    al,BYTE PTR [esp+eiz*2-0x52]
  40d1fa:	jns    0x40d188
  40d1fc:	push   ecx
  40d1fd:	cmp    al,0x57
  40d1ff:	(bad)  
  40d200:	pop    ebp
  40d201:	rol    DWORD PTR [edx-0x49],cl
  40d204:	cdq    
  40d205:	and    eax,0x1e5bf7c6
  40d20a:	xchg   ebx,eax
  40d20b:	ja     0x40d19b
  40d20d:	xchg   esp,eax
  40d20e:	mov    ch,0xf5
  40d210:	mov    cs,WORD PTR ds:0xaf29928c
  40d216:	or     DWORD PTR [bx+si+0x5e11],ecx
  40d21b:	sub    eax,0x429bd49f
  40d220:	ja     0x40d290
  40d222:	pop    ds
  40d223:	xchg   edi,eax
  40d224:	enter  0x73ce,0xc
  40d228:	pop    ds
  40d229:	pop    ecx
  40d22a:	cmp    eax,0xa60df81
  40d22f:	retf   
  40d230:	adc    ah,0x55
  40d233:	les    edx,FWORD PTR [ecx+edx*1-0x5a9f19c9]
  40d23a:	inc    esp
  40d23b:	push   esp
  40d23c:	and    ecx,DWORD PTR [ebp-0x58]
  40d23f:	sub    esi,ebp
  40d241:	jo     0x40d271
  40d243:	mov    ch,0xaa
  40d245:	xor    esp,DWORD PTR [eax-0x4f46f1cc]
  40d24b:	inc    eax
  40d24c:	(bad)  
  40d24d:	setae  BYTE PTR ds:0x41adebcf
  40d254:	sbb    eax,0x2a1f7f6a
  40d259:	addr16 aad 0x11
  40d25c:	push   ss
  40d25d:	cwde   
  40d25e:	stos   DWORD PTR es:[edi],eax
  40d25f:	sar    ch,1
  40d261:	stc    
  40d262:	(bad)  
  40d263:	ror    DWORD PTR [edx+0x689a3f72],1
  40d269:	test   eax,0x1280014
  40d26e:	std    
  40d26f:	xor    eax,DWORD PTR [eax-0x1dff0774]
  40d275:	mov    ebx,0xdccc7614
  40d27a:	addr16 (bad) 
  40d27c:	nop
  40d27d:	xor    BYTE PTR [edi-0x31],bh
  40d280:	mov    edi,0xc12c8b20
  40d285:	jp     0x40d213
  40d287:	and    BYTE PTR [edx+ebp*1+0x18efc8e9],dh
  40d28e:	xchg   dh,ch
  40d290:	mov    bl,0x51
  40d292:	xchg   DWORD PTR [edx],ecx
  40d294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d295:	xor    al,0x93
  40d297:	aam    0xb4
  40d299:	cmp    ebx,DWORD PTR [edi+0x4362637f]
  40d29f:	imul   eax,DWORD PTR [ebx-0x701c7808],0x73a97331
  40d2a9:	jg     0x40d24b
  40d2ab:	inc    ebx
  40d2ac:	pop    edx
  40d2ad:	push   eax
  40d2ae:	adc    eax,0x36bf9ed8
  40d2b3:	push   es
  40d2b4:	mov    ebx,0x9aae0694
  40d2b9:	push   esi
  40d2ba:	stos   BYTE PTR es:[edi],al
  40d2bb:	fadd   DWORD PTR gs:[ecx-0x5f]
  40d2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2c0:	pop    eax
  40d2c1:	retf   0xcf11
  40d2c4:	sub    eax,0xd115997f
  40d2c9:	xor    BYTE PTR [esi-0x29],bh
  40d2cc:	mov    al,ds:0x1fd35818
  40d2d1:	hlt    
  40d2d2:	pusha  
  40d2d3:	add    BYTE PTR [eax+eax*2-0x19f304da],bh
  40d2da:	jb     0x40d2aa
  40d2dc:	loop   0x40d26f
  40d2de:	push   edi
  40d2df:	cmp    edi,DWORD PTR [edi-0x54d01bc9]
  40d2e5:	dec    esp
  40d2e6:	(bad)  [esi-0x4374f695]
  40d2ec:	loopne 0x40d26f
  40d2ee:	mov    eax,0xa5014158
  40d2f3:	lea    edx,[esi]
  40d2f5:	or     ch,BYTE PTR [edi-0x53]
  40d2f8:	or     edx,edx
  40d2fa:	jns    0x40d281
  40d2fc:	fwait
  40d2fd:	push   ecx
  40d2fe:	enter  0x69b4,0xef
  40d302:	or     dl,BYTE PTR [eax-0x30]
  40d305:	ja     0x40d31c
  40d307:	movlps xmm3,QWORD PTR [edx]
  40d30a:	and    DWORD PTR [eax+eiz*4+0x3ac5a2fc],edx
  40d311:	(bad)  
  40d312:	jmp    0x36143ac5
  40d317:	adc    esp,ecx
  40d319:	jl     0x40d390
  40d31b:	jp     0x40d31a
  40d31d:	cmp    cl,BYTE PTR [ebx-0x36]
  40d320:	pop    esi
  40d321:	dec    edi
  40d322:	in     eax,dx
  40d323:	push   ebx
  40d324:	and    esi,DWORD PTR [esi+0x64244a33]
  40d32a:	xor    eax,0xcccccbb6
  40d32f:	cs mov eax,0x7b818f2c
  40d335:	sub    al,0x4f
  40d337:	xchg   esp,eax
  40d338:	sbb    DWORD PTR ds:0xae78788f,edx
  40d33e:	icebp  
  40d33f:	xlat   BYTE PTR ds:[ebx]
  40d340:	ss pop edi
  40d342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d343:	adc    bh,BYTE PTR ds:0xbb5c1720
  40d349:	shl    DWORD PTR [edi+0x31],1
  40d34c:	out    0xf,eax
  40d34e:	pop    esi
  40d34f:	push   eax
  40d350:	hlt    
  40d351:	aad    0xfa
  40d353:	rcr    esi,0x40
  40d356:	inc    ebx
  40d357:	punpcklbw mm6,DWORD PTR [ebx+edx*8+0x60df0799]
  40d35f:	leave  
  40d360:	add    eax,esp
  40d362:	xor    eax,0x673279e9
  40d367:	or     eax,0x22f6bb3e
  40d36c:	mov    edx,0x9cf3fb7d
  40d371:	mov    BYTE PTR ds:0x781a29bb,dh
  40d377:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40d379:	push   ecx
  40d37a:	imul   edi,DWORD PTR [ebx+0x64],0xb2514f6b
  40d381:	paddusb mm4,QWORD PTR [edi+0x4cf23a82]
  40d388:	into   
  40d389:	je     0x40d338
  40d38b:	mov    al,ds:0x30005f21
  40d390:	pop    edi
  40d391:	inc    edx
  40d392:	lods   eax,DWORD PTR ds:[esi]
  40d393:	mov    edx,0x7ea3290d
  40d398:	adc    bh,ah
  40d39a:	sbb    ecx,DWORD PTR [ecx+0x4365f264]
  40d3a0:	int    0x27
  40d3a2:	sbb    eax,0xcd114922
  40d3a7:	xchg   esp,eax
  40d3a8:	cld    
  40d3a9:	dec    esp
  40d3aa:	mov    al,ds:0x5b9ac2c5
  40d3af:	xor    BYTE PTR [edi+0x1ce618e9],bh
  40d3b5:	jne    0x40d35f
  40d3b7:	and    BYTE PTR [ecx-0x7443d5a7],0x9b
  40d3be:	inc    ebp
  40d3bf:	ins    DWORD PTR es:[edi],dx
  40d3c0:	add    esi,DWORD PTR [ebx+0x5908ae5d]
  40d3c6:	ins    BYTE PTR es:[edi],dx
  40d3c7:	xor    edi,DWORD PTR [edx-0x67]
  40d3ca:	aas    
  40d3cb:	sub    BYTE PTR [edx],al
  40d3cd:	pop    esp
  40d3ce:	sbb    eax,0x737fe30f
  40d3d3:	nop
  40d3d4:	sbb    al,0x99
  40d3d6:	sahf   
  40d3d7:	jge    0x40d3ff
  40d3d9:	pop    ebx
  40d3da:	dec    edx
  40d3db:	mov    edi,0x7cacb6c0
  40d3e0:	sbb    BYTE PTR [edx-0x10427a95],0xf4
  40d3e7:	enter  0xa51,0x5a
  40d3eb:	cmp    DWORD PTR [ecx+0x55],eax
  40d3ee:	imul   edx,esp,0xffffff95
  40d3f1:	mov    bl,0xce
  40d3f3:	lods   al,BYTE PTR ds:[esi]
  40d3f4:	jns    0x40d470
  40d3f6:	cdq    
  40d3f7:	jbe    0x40d424
  40d3f9:	sbb    al,BYTE PTR [esi]
  40d3fb:	js     0x40d3d2
  40d3fd:	out    dx,al
  40d3fe:	ficomp WORD PTR [edi]
  40d400:	fstp   st(1)
  40d402:	push   ecx
  40d403:	scas   eax,DWORD PTR es:[edi]
  40d404:	aas    
  40d405:	add    DWORD PTR [ecx-0x40],eax
  40d408:	pop    es
  40d409:	js     0x40d453
  40d40b:	xor    al,0x3c
  40d40d:	add    ecx,DWORD PTR ds:0x10f206a4
  40d413:	sub    BYTE PTR [ecx+0x47fd5a16],dh
  40d419:	jns    0x40d3ae
  40d41b:	xor    dl,BYTE PTR [ecx-0x3b]
  40d41e:	stos   DWORD PTR es:[edi],eax
  40d41f:	jb     0x40d492
  40d421:	jl     0x40d487
  40d423:	mov    ds:0xbd4b4467,eax
  40d428:	dec    ecx
  40d429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d42a:	cmp    al,0x2d
  40d42c:	xchg   DWORD PTR [eax+0x610b450e],ecx
  40d432:	mov    ebx,0x6b410216
  40d437:	push   ebx
  40d438:	xor    bl,cl
  40d43a:	dec    ebp
  40d43b:	xchg   ebp,eax
  40d43c:	sub    esp,DWORD PTR ds:[ecx-0x4]
  40d440:	fsub   QWORD PTR [ebx+0x21]
  40d443:	xor    BYTE PTR [eax],cl
  40d445:	pop    ebx
  40d446:	add    BYTE PTR [ebx],0xed
  40d449:	pop    edx
  40d44a:	push   ebx
  40d44b:	out    dx,al
  40d44c:	xchg   edi,eax
  40d44d:	popa   
  40d44e:	not    esi
  40d450:	push   eax
  40d451:	sbb    BYTE PTR [ebp+0x7ab25cd5],0x4c
  40d458:	jne    0x40d4a2
  40d45a:	sahf   
  40d45b:	dec    eax
  40d45c:	ss (bad) 
  40d45e:	stc    
  40d45f:	sbb    al,0x2f
  40d461:	cmovp  eax,eax
  40d464:	push   esi
  40d465:	cdq    
  40d466:	or     al,0x82
  40d468:	jbe    0x40d400
  40d46a:	ja     0x40d4e7
  40d46c:	pushf  
  40d46d:	pop    ebx
  40d46e:	cdq    
  40d46f:	sti    
  40d470:	jno    0x40d42d
  40d472:	pop    edx
  40d473:	xchg   ebp,eax
  40d474:	mov    ecx,0x65d3d63a
  40d479:	jmp    0x38c4b8db
  40d47e:	xor    DWORD PTR [ecx],0x347d36d5
  40d484:	jg     0x40d4ec
  40d486:	xor    al,0x69
  40d488:	ja     0x40d4bf
  40d48a:	xchg   DWORD PTR [ecx],esi
  40d48c:	xchg   edi,eax
  40d48d:	(bad)  
  40d48e:	daa    
  40d48f:	sub    al,0x6f
  40d491:	es popf 
  40d493:	aad    0x4d
  40d495:	push   cs
  40d496:	mov    cl,0x29
  40d498:	and    eax,0xe5e2fe78
  40d49d:	dec    esp
  40d49e:	mov    eax,ds:0xc51787e4
  40d4a3:	bound  edx,QWORD PTR [ebp-0x7a]
  40d4a6:	lods   eax,DWORD PTR ds:[esi]
  40d4a7:	add    eax,0xd57ff790
  40d4ac:	xchg   BYTE PTR [ecx],bl
  40d4ae:	cmp    eax,0xe77b1c2f
  40d4b3:	ficom  DWORD PTR [esi-0x3a8b900d]
  40d4b9:	xor    al,0xfb
  40d4bb:	icebp  
  40d4bc:	sbb    cl,dh
  40d4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4bf:	cs sahf 
  40d4c1:	fcomp  st(4)
  40d4c3:	xor    eax,0x2db86e73
  40d4c8:	out    dx,eax
  40d4c9:	mov    ah,0x4
  40d4cb:	pop    ebx
  40d4cc:	jo     0x40d52c
  40d4ce:	cmp    eax,0xedb7586a
  40d4d3:	jnp    0x40d4db
  40d4d5:	adc    bh,BYTE PTR [ecx-0x30875a8a]
  40d4db:	sub    ch,al
  40d4dd:	push   ebp
  40d4de:	adc    al,0xfc
  40d4e0:	or     ch,dl
  40d4e2:	mov    ds:0x9955839b,eax
  40d4e7:	add    DWORD PTR [ebp+0x60],0xd968218a
  40d4ee:	jo     0x30bbdeb6
  40d4f4:	adc    WORD PTR [eax-0x5a],cx
  40d4f8:	cmp    esi,DWORD PTR [esp+eiz*8]
  40d4fb:	test   edx,edi
  40d4fd:	and    al,0xe1
  40d4ff:	aam    0x4f
  40d501:	jl     0x40d545
  40d503:	test   eax,0x6280c93b
  40d508:	fbstp  TBYTE PTR [esi]
  40d50a:	cli    
  40d50b:	gs aam 0xea
  40d50e:	sub    BYTE PTR [ebx+edx*8-0x1396c391],bl
  40d515:	cs inc edi
  40d517:	sub    edi,DWORD PTR [ebp-0x3c]
  40d51a:	fsubrp st(5),st
  40d51c:	aam    0xd4
  40d51e:	arpl   WORD PTR [ecx-0x2a],di
  40d521:	mov    ds:0xccc3f772,al
  40d526:	pop    ebp
  40d527:	and    DWORD PTR [edi-0x7e4eff98],esp
  40d52d:	and    DWORD PTR [esi+0x29],ecx
  40d530:	addr16 retf 
  40d532:	xor    BYTE PTR fs:[ecx],0x39
  40d536:	cmp    al,BYTE PTR [esi+0xb767fee]
  40d53c:	push   0xbc786d63
  40d541:	fwait
  40d542:	outs   dx,DWORD PTR ds:[esi]
  40d543:	aam    0xac
  40d545:	xlat   BYTE PTR ds:[ebx]
  40d546:	das    
  40d547:	cmp    eax,esp
  40d549:	dec    ebp
  40d54a:	xchg   ecx,eax
  40d54b:	daa    
  40d54c:	ins    DWORD PTR es:[edi],dx
  40d54d:	js     0x40d569
  40d54f:	repz add al,0x6e
  40d552:	(bad)  
  40d553:	xchg   esi,eax
  40d554:	sub    al,0x49
  40d556:	fwait
  40d557:	rol    DWORD PTR [eax-0x4],0xb3
  40d55b:	cdq    
  40d55c:	jb     0x40d59c
  40d55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d55f:	xor    edx,edi
  40d561:	pop    ecx
  40d562:	data16 fild DWORD PTR [edx]
  40d565:	iret   
  40d566:	push   edx
  40d567:	xor    DWORD PTR [edx-0x688e6c91],edi
  40d56d:	addr16 sbb al,0x2b
  40d570:	aad    0xf4
  40d572:	jmp    0x13377005
  40d577:	xchg   ebx,eax
  40d578:	sti    
  40d579:	(bad)  
  40d57a:	icebp  
  40d57b:	and    eax,0x9032ca63
  40d580:	fisub  WORD PTR [edx+0x1fb0dc1d]
  40d586:	or     al,0xdb
  40d588:	sti    
  40d589:	and    edi,DWORD PTR [esi-0x2d]
  40d58c:	xabort 0xdd
  40d58f:	xor    eax,0x16517049
  40d594:	pop    eax
  40d595:	mov    cl,0x80
  40d597:	mov    dl,0xc3
  40d599:	fucom  st(3)
  40d59b:	fnstcw WORD PTR [eax+0x313aa788]
  40d5a1:	ja     0x40d538
  40d5a3:	add    eax,0x6a66a0c1
  40d5a8:	xor    edi,DWORD PTR [edi+0x1de0e449]
  40d5ae:	(bad)  
  40d5af:	cmp    eax,0x23e18b6
  40d5b4:	jmp    0x40d547
  40d5b6:	or     edi,DWORD PTR [edx+ecx*4+0xc5f5064]
  40d5bd:	and    edx,esi
  40d5bf:	mov    ds:0x618fd729,al
  40d5c4:	enter  0xafec,0xf5
  40d5c8:	dec    edi
  40d5c9:	push   ss
  40d5ca:	stos   BYTE PTR es:[edi],al
  40d5cb:	dec    esp
  40d5cc:	div    DWORD PTR [edi-0x53]
  40d5cf:	and    al,0x63
  40d5d1:	aaa    
  40d5d2:	xor    eax,0x2d4745fb
  40d5d7:	stc    
  40d5d8:	xchg   ecx,eax
  40d5d9:	cli    
  40d5da:	aad    0x2e
  40d5dc:	inc    edx
  40d5dd:	gs fwait
  40d5df:	stos   BYTE PTR es:[edi],al
  40d5e0:	push   esi
  40d5e1:	mov    dh,0x3a
  40d5e3:	adc    ebx,eax
  40d5e5:	mov    esp,0xe3bcfe25
  40d5ea:	(bad)  
  40d5eb:	call   0x415121b7
  40d5f0:	dec    esi
  40d5f1:	jo     0x40d5a5
  40d5f3:	xor    al,0xd0
  40d5f5:	lea    esi,[esi+0x18]
  40d5f8:	rcr    DWORD PTR [ecx-0x1e5c7e42],0x6a
  40d5ff:	xor    dh,ch
  40d601:	inc    edx
  40d602:	outs   dx,DWORD PTR ds:[esi]
  40d603:	inc    ecx
  40d604:	sbb    DWORD PTR [ebx],ebp
  40d606:	aam    0xc1
  40d608:	aam    0x3f
  40d60a:	daa    
  40d60b:	mov    al,0xb6
  40d60d:	pushf  
  40d60e:	(bad)  
  40d60f:	fsub   QWORD PTR ds:0x9d8607ad
  40d615:	mov    bl,0x71
  40d617:	fisub  DWORD PTR [edx-0x23]
  40d61a:	cmp    eax,0x676aa98a
  40d61f:	xor    eax,0x24c3ce0
  40d624:	(bad)  
  40d625:	repnz mov cl,0x6e
  40d628:	fsubr  QWORD PTR [ecx]
  40d62a:	mov    edx,0x3948a4fb
  40d62f:	xchg   ebp,eax
  40d630:	lahf   
  40d631:	sbb    DWORD PTR [eax+0x7236afb5],0xffffffa1
  40d638:	mov    al,ds:0x23a575a4
  40d63d:	sti    
  40d63e:	mov    al,0xdc
  40d640:	add    eax,0xfc67c8e1
  40d645:	pusha  
  40d646:	xor    BYTE PTR [edi+0x796c9b78],ch
  40d64c:	or     eax,ecx
  40d64e:	xor    bl,ah
  40d650:	cmp    eax,0xe17bf9ae
  40d655:	loope  0x40d60a
  40d657:	lods   al,BYTE PTR ds:[esi]
  40d658:	mov    cl,0x0
  40d65a:	call   0x8542afa7
  40d65f:	test   al,0x9b
  40d661:	mov    ch,0xb4
  40d663:	lock push 0xfc63b0d6
  40d669:	xchg   esp,eax
  40d66a:	sub    al,0xeb
  40d66c:	xchg   BYTE PTR [edx-0x5dd4317],dh
  40d672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d673:	stc    
  40d674:	pop    es
  40d675:	mov    edi,0xdb31101d
  40d67a:	mul    BYTE PTR [edx+eiz*2-0x6a5dc5f4]
  40d681:	push   0xfffffff6
  40d683:	sub    eax,0x41f57f9f
  40d688:	mov    edi,0x4d097b17
  40d68d:	adc    eax,0xef454107
  40d692:	and    DWORD PTR [ecx-0x6b],ebx
  40d695:	in     eax,dx
  40d696:	push   esi
  40d697:	sbb    ecx,DWORD PTR [ebp+0x6e677621]
  40d69d:	mov    dl,0x5b
  40d69f:	fadd   DWORD PTR [ecx+eax*4]
  40d6a2:	mov    edi,0x92b93dab
  40d6a7:	in     eax,dx
  40d6a8:	inc    esp
  40d6a9:	std    
  40d6aa:	adc    dl,al
  40d6ac:	xchg   esi,eax
  40d6ad:	aaa    
  40d6ae:	ja     0x40d64f
  40d6b0:	fiadd  WORD PTR [edx+0x50df1580]
  40d6b6:	dec    ecx
  40d6b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6b8:	pop    edx
  40d6b9:	or     dh,BYTE PTR [edx]
  40d6bb:	sub    ecx,DWORD PTR [esi]
  40d6bd:	pop    ecx
  40d6be:	push   ebp
  40d6bf:	cmp    cl,cl
  40d6c1:	sar    bl,1
  40d6c3:	sbb    al,0x47
  40d6c5:	fmul   st,st(0)
  40d6c7:	push   es
  40d6c8:	and    dl,BYTE PTR [edx]
  40d6ca:	fs pop esp
  40d6cc:	jl     0x40d732
  40d6ce:	dec    ebp
  40d6cf:	cmovns edx,ecx
  40d6d2:	outs   dx,BYTE PTR ds:[esi]
  40d6d3:	mov    al,ds:0x958931c0
  40d6d8:	ins    BYTE PTR es:[edi],dx
  40d6d9:	aas    
  40d6da:	cwde   
  40d6db:	or     eax,0xacfae45e
  40d6e0:	sbb    BYTE PTR [eax+0x2e1112ea],bl
  40d6e6:	out    0x61,al
  40d6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6e9:	push   edx
  40d6ea:	in     al,dx
  40d6eb:	retf   
  40d6ec:	test   DWORD PTR [eax-0x23d2ab81],ebp
  40d6f2:	cmp    ebx,DWORD PTR [edi-0xac80f74]
  40d6f8:	sub    al,0x9e
  40d6fa:	xor    al,0x79
  40d6fc:	sti    
  40d6fd:	pop    eax
  40d6fe:	in     eax,0xd
  40d700:	test   edx,edx
  40d702:	pop    eax
  40d703:	inc    ecx
  40d704:	retf   0x3e16
  40d707:	pop    ebx
  40d708:	dec    esi
  40d709:	nop    DWORD PTR [eax+0x582a6bb1]
  40d710:	jg     0x40d717
  40d712:	xchg   BYTE PTR [esi+0x74dab00c],cl
  40d718:	pusha  
  40d719:	ror    BYTE PTR [ebx],0x8b
  40d71c:	mov    ?,WORD PTR [ebx+0x74]
  40d71f:	fstp   TBYTE PTR [eax+edx*4-0x3b411906]
  40d726:	mov    ch,0xf3
  40d728:	(bad)  
  40d729:	cs aaa 
  40d72b:	xor    edi,DWORD PTR [edx+ebx*4-0x3d]
  40d72f:	fstp   TBYTE PTR [esi-0x71c12b74]
  40d735:	or     DWORD PTR [edx-0x2aebcbef],ebx
  40d73b:	mov    edi,0x434a1017
  40d740:	xor    DWORD PTR [edi+eax*4-0x36b93206],edx
  40d747:	or     eax,0xcef8233f
  40d74c:	dec    ebp
  40d74d:	cmp    bh,ah
  40d74f:	inc    edx
  40d750:	inc    esi
  40d751:	jno    0x40d788
  40d753:	imul   esp,DWORD PTR [edi+0x3f101275],0x57c39133
  40d75d:	das    
  40d75e:	cld    
  40d75f:	stos   DWORD PTR es:[edi],eax
  40d760:	jb     0x40d73a
  40d762:	sub    BYTE PTR [eax-0x706d779d],0x91
  40d769:	and    eax,0xbbb659ab
  40d76e:	jns    0x40d7ed
  40d770:	push   ebp
  40d771:	adc    DWORD PTR [edx-0xc],edi
  40d774:	jp     0x40d7ea
  40d776:	int    0x6b
  40d778:	shl    BYTE PTR [ebx+0x81a8a84],0xac
  40d77f:	scas   al,BYTE PTR es:[edi]
  40d780:	clc    
  40d781:	and    bh,bh
  40d783:	xor    DWORD PTR [ebx-0xa],edi
  40d786:	xchg   edi,eax
  40d787:	push   edi
  40d788:	push   es
  40d789:	dec    ecx
  40d78a:	mov    bh,0x11
  40d78c:	(bad)  
  40d78e:	pop    esp
  40d78f:	lods   al,BYTE PTR ds:[esi]
  40d790:	xor    ecx,DWORD PTR [edx+edi*2-0x46]
  40d794:	jns    0x40d74b
  40d796:	gs push ebx
  40d798:	jge    0x40d734
  40d79a:	push   ebx
  40d79b:	cmp    al,0x56
  40d79d:	ds mov bl,0xb
  40d7a0:	clc    
  40d7a1:	pop    ebx
  40d7a2:	lds    eax,FWORD PTR [edx+0x1c86c286]
  40d7a8:	xchg   DWORD PTR [ebp-0xf3fec4b],ebx
  40d7ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7af:	lods   al,BYTE PTR ds:[esi]
  40d7b0:	xor    eax,0x33ade20e
  40d7b5:	popa   
  40d7b6:	into   
  40d7b7:	inc    esi
  40d7b8:	cld    
  40d7b9:	bound  eax,QWORD PTR [ebx]
  40d7bb:	sbb    ah,BYTE PTR [edx-0xeeca006]
  40d7c1:	inc    ebx
  40d7c2:	loope  0x40d7c7
  40d7c4:	adc    al,0xf9
  40d7c6:	outs   dx,BYTE PTR ds:[esi]
  40d7c7:	push   esi
  40d7c8:	aad    0x81
  40d7ca:	aam    0x7c
  40d7cc:	push   ss
  40d7cd:	test   BYTE PTR [esi],bh
  40d7cf:	popf   
  40d7d0:	test   BYTE PTR [eax-0xf],0x12
  40d7d4:	xor    DWORD PTR [esi],ebp
  40d7d6:	push   eax
  40d7d7:	shr    BYTE PTR [ebx-0x32],cl
  40d7da:	add    al,0xd9
  40d7dc:	push   esi
  40d7dd:	inc    eax
  40d7de:	dec    edi
  40d7df:	mov    al,0x53
  40d7e1:	pop    ecx
  40d7e2:	(bad)  
  40d7e3:	out    0xe0,al
  40d7e5:	or     edi,edx
  40d7e7:	imul   ecx,DWORD PTR [edi+0x1d8ef3ce],0x6a
  40d7ee:	xor    BYTE PTR [ebx+edx*4+0x1b],cl
  40d7f2:	ret    
  40d7f3:	cld    
  40d7f4:	cld    
  40d7f5:	and    edx,esp
  40d7f7:	and    ebp,edx
  40d7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7fa:	dec    ebx
  40d7fb:	jge    0x40d7fa
  40d7fd:	and    ebx,DWORD PTR [ebx+ebp*4+0x39103f37]
  40d804:	int3   
  40d805:	jp     0x40d7fc
  40d807:	cmp    DWORD PTR [eax+ebp*8],esi
  40d80a:	lock outs dx,BYTE PTR ds:[esi]
  40d80c:	pop    ebp
  40d80d:	push   es
  40d80e:	jl     0x40d80f
  40d810:	cmp    al,0x7e
  40d812:	pop    ebp
  40d813:	mov    dl,0x28
  40d815:	pop    edx
  40d816:	and    al,0x31
  40d818:	xor    dh,BYTE PTR [edi-0x21]
  40d81b:	push   ecx
  40d81c:	mov    ds:0x887bf53f,eax
  40d821:	ss das 
  40d823:	loopne 0x40d867
  40d825:	cmp    BYTE PTR [esi-0x3f222cde],dl
  40d82b:	scas   eax,DWORD PTR es:[edi]
  40d82c:	push   0x7f641558
  40d831:	out    dx,eax
  40d832:	outs   dx,BYTE PTR ds:[esi]
  40d833:	jbe    0x40d878
  40d835:	sbb    cl,BYTE PTR [ebx+0x2c]
  40d838:	sub    DWORD PTR [edx-0x5ab7ccc3],edx
  40d83e:	imul   edx,esp,0x31
  40d841:	ins    DWORD PTR es:[edi],dx
  40d842:	in     eax,0xfb
  40d844:	pop    ecx
  40d845:	mov    edx,0xb12828c5
  40d84a:	icebp  
  40d84b:	es push edi
  40d84d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40d84f:	das    
  40d850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d851:	pop    eax
  40d852:	ins    BYTE PTR es:[edi],dx
  40d853:	arpl   WORD PTR [edi+0x1500fc4b],ax
  40d859:	ja     0x40d889
  40d85b:	and    al,0x43
  40d85d:	adc    dh,ch
  40d85f:	retf   0x5c59
  40d862:	cli    
  40d863:	jb     0x40d8e4
  40d865:	sub    dh,BYTE PTR [edi-0x6bc7d914]
  40d86b:	xor    BYTE PTR [ecx+0x2021f4e2],bl
  40d871:	das    
  40d872:	sbb    edi,DWORD PTR [edx+esi*8-0x30]
  40d876:	test   al,0xfc
  40d878:	and    dh,BYTE PTR [eax-0x73]
  40d87b:	call   0xafee91ff
  40d880:	idiv   cl
  40d882:	sub    BYTE PTR [esi],bl
  40d884:	pop    esp
  40d885:	cli    
  40d886:	adc    DWORD PTR [eax+0xb6e5c1b],eax
  40d88c:	mov    eax,0xb4348802
  40d891:	mov    ds:0x9ec9483a,al
  40d896:	shl    DWORD PTR [edx+0x35],0xbd
  40d89a:	mov    bl,0x92
  40d89c:	xchg   edx,eax
  40d89d:	mov    edi,0x12d41afe
  40d8a2:	mov    ch,0xf7
  40d8a4:	inc    ebp
  40d8a5:	lahf   
  40d8a6:	sub    ebp,edx
  40d8a8:	mov    edi,0xdd398f77
  40d8ad:	xchg   cl,cl
  40d8af:	scas   eax,DWORD PTR es:[edi]
  40d8b0:	mov    al,0xde
  40d8b2:	cmp    eax,0xed9aa839
  40d8b7:	xchg   edx,eax
  40d8b8:	pop    esp
  40d8b9:	push   ss
  40d8ba:	dec    esp
  40d8bb:	cwde   
  40d8bc:	jge    0x40d916
  40d8be:	popf   
  40d8bf:	or     ch,BYTE PTR [esi-0x67]
  40d8c2:	fwait
  40d8c3:	xor    ebp,DWORD PTR [esi+0x28c68c90]
  40d8c9:	and    DWORD PTR [edx+0x37],ecx
  40d8cc:	push   cs
  40d8cd:	shr    edx,1
  40d8cf:	data16 cmp BYTE PTR [ebx+0x2e],bh
  40d8d3:	jne    0x40d8f3
  40d8d5:	jne    0x40d85d
  40d8d7:	ret    0xcbd9
  40d8da:	mov    ch,0x67
  40d8dc:	adc    BYTE PTR ds:0x4e252016,cl
  40d8e2:	adc    esi,DWORD PTR [esi+0x14216159]
  40d8e8:	inc    eax
  40d8e9:	mov    ds:0x84399c7f,al
  40d8ee:	xor    dl,cl
  40d8f0:	xchg   DWORD PTR cs:[ecx+0x2b907e55],edi
  40d8f7:	(bad)  
  40d8f8:	adc    bl,BYTE PTR [eax]
  40d8fa:	je     0x40d8a9
  40d8fc:	sub    BYTE PTR [ebp+0x67],0xff
  40d900:	mov    ch,0x42
  40d902:	icebp  
  40d903:	pop    edi
  40d904:	sub    cl,BYTE PTR [ecx]
  40d906:	sti    
  40d907:	test   eax,0xc383060
  40d90c:	bound  edi,QWORD PTR [eax-0x4e]
  40d90f:	ds enterw 0xa27d,0x28
  40d915:	mov    esi,0x16e937b1
  40d91a:	push   0x4d
  40d91c:	ror    bl,1
  40d91e:	retf   
  40d91f:	sbb    eax,0x2f3d7f48
  40d924:	rcl    DWORD PTR [edi],cl
  40d926:	in     eax,0x7d
  40d928:	mov    ds:0xee059723,al
  40d92d:	fist   WORD PTR [ebx+edi*8+0x74]
  40d931:	add    BYTE PTR [ebx+0x62235b47],0x7
  40d938:	dec    eax
  40d939:	loop   0x40d949
  40d93b:	shl    BYTE PTR [ebx],cl
  40d93d:	or     dl,BYTE PTR [esi-0x1c]
  40d940:	mov    bh,0xaf
  40d942:	adc    dl,BYTE PTR [ebp-0x6041b964]
  40d948:	jl     0x40d90b
  40d94a:	xor    eax,0xe3e7ea0
  40d94f:	stos   DWORD PTR es:[edi],eax
  40d950:	gs dec eax
  40d952:	mov    eax,ds:0x42aab55a
  40d957:	mov    esp,0xfba75d43
  40d95c:	into   
  40d95d:	jl     0x40d926
  40d95f:	adc    BYTE PTR [eax-0x5e],dl
  40d962:	sub    DWORD PTR [edx],esp
  40d964:	ins    BYTE PTR es:[edi],dx
  40d965:	ja     0x40d91a
  40d967:	lods   eax,DWORD PTR ds:[esi]
  40d968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d969:	cmc    
  40d96a:	jmp    0xef62c70c
  40d96f:	xchg   esp,eax
  40d970:	ins    DWORD PTR es:[edi],dx
  40d971:	js     0x40d94e
  40d973:	mov    edi,esi
  40d975:	mov    dh,0x35
  40d977:	xchg   ecx,eax
  40d978:	mov    al,ds:0xe97fc06e
  40d97d:	inc    ebp
  40d97e:	sar    BYTE PTR gs:[ebp+0xdfc8d27],cl
  40d985:	mov    ecx,0x52ba9ef5
  40d98a:	push   esi
  40d98b:	mov    eax,0xf9eef79b
  40d990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d991:	mov    ds:0xf6d56dc9,al
  40d996:	jmp    0xe3:0xe2de8190
  40d99d:	cmp    bh,ah
  40d99f:	cli    
  40d9a0:	xor    DWORD PTR [ebx-0x1],esp
  40d9a3:	pop    ecx
  40d9a4:	daa    
  40d9a5:	fisttp QWORD PTR [edi+0x28cf0cb]
  40d9ab:	sbb    al,0x1
  40d9ad:	hlt    
  40d9ae:	add    al,BYTE PTR [esi-0x6df3bf1c]
  40d9b4:	data16 outs dx,BYTE PTR ds:[esi]
  40d9b6:	cmp    al,0x40
  40d9b8:	add    edx,DWORD PTR [esi+ecx*8]
  40d9bb:	out    0x19,eax
  40d9bd:	adc    edi,DWORD PTR [esi+0x1e]
  40d9c0:	leave  
  40d9c1:	dec    ebp
  40d9c2:	js     0x40d9dd
  40d9c4:	xlat   BYTE PTR ds:[ebx]
  40d9c5:	mov    ecx,0x69763d40
  40d9ca:	sbb    al,0x52
  40d9cc:	adc    edx,DWORD PTR [eax+0x2e88446f]
  40d9d2:	jecxz  0x40da17
  40d9d4:	les    esi,FWORD PTR [eax]
  40d9d6:	add    edi,DWORD PTR [esi]
  40d9d8:	jl     0x40d994
  40d9da:	push   0x32
  40d9dc:	jae    0x40d964
  40d9de:	dec    bx
  40d9e0:	and    BYTE PTR [ebp-0x282697b9],cl
  40d9e6:	ret    0x2d8f
  40d9e9:	int    0x15
  40d9eb:	das    
  40d9ec:	dec    esp
  40d9ed:	dec    edx
  40d9ee:	push   es
  40d9ef:	fild   DWORD PTR [ebx-0x20982833]
  40d9f5:	fisttp QWORD PTR fs:[ecx-0x788e53d2]
  40d9fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9fd:	cmp    DWORD PTR [ecx-0x72],0x6d9160b3
  40da04:	mov    ch,0x9b
  40da06:	nop
  40da07:	retf   
  40da08:	mov    al,0x19
  40da0a:	test   BYTE PTR [edi+0x5197d477],0x15
  40da11:	leave  
  40da12:	hlt    
  40da13:	imul   edi,edx,0xffffff95
  40da16:	int    0x70
  40da18:	and    esi,DWORD PTR [esi-0x66]
  40da1b:	(bad)  
  40da1c:	xchg   DWORD PTR [edx-0x53],esp
  40da1f:	or     DWORD PTR fs:[edi+0x19],eax
  40da23:	adc    bl,BYTE PTR [edx-0x18]
  40da26:	mov    esp,DWORD PTR [esi+0x49]
  40da29:	cld    
  40da2a:	int3   
  40da2b:	fiadd  DWORD PTR [eax-0x283f7f3f]
  40da31:	cdq    
  40da32:	shl    ebx,cl
  40da34:	popa   
  40da35:	mov    ah,0xaf
  40da37:	xor    esi,DWORD PTR [esi]
  40da39:	sbb    DWORD PTR [ecx+0x46],0x1d44caee
  40da40:	sbb    BYTE PTR [ecx],cl
  40da42:	ins    BYTE PTR es:[edi],dx
  40da43:	xchg   esi,eax
  40da44:	mov    ah,0x60
  40da46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da47:	lods   al,BYTE PTR ds:[esi]
  40da48:	ficomp WORD PTR ds:0x18f9e78
  40da4e:	pop    esi
  40da4f:	fisubr WORD PTR [ecx-0x37ec48c0]
  40da55:	mov    ebx,0x7611e842
  40da5a:	cmc    
  40da5b:	pusha  
  40da5c:	jmp    0x7b7f:0xd714ac54
  40da63:	mov    cl,0xe4
  40da65:	inc    edi
  40da66:	out    dx,eax
  40da67:	cmp    BYTE PTR [ebp+eax*2-0x7553ea20],dl
  40da6e:	hlt    
  40da6f:	in     eax,dx
  40da70:	mov    al,0x10
  40da72:	sbb    DWORD PTR [ebp+ebx*2+0x65],esi
  40da76:	sub    al,0x58
  40da78:	sbb    eax,0x6cd82a41
  40da7d:	inc    ebp
  40da7e:	or     DWORD PTR [ebp-0x54131b4b],esp
  40da84:	test   BYTE PTR fs:[edi-0x798ec750],al
  40da8b:	mov    gs,WORD PTR [edi+ebx*4]
  40da8e:	les    esp,FWORD PTR [ebp+0x459eeaa3]
  40da94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da95:	(bad)  
  40da96:	push   ss
  40da97:	push   ecx
  40da98:	inc    ecx
  40da99:	pop    edx
  40da9a:	fcmovbe st,st(2)
  40da9c:	cmp    eax,0xe75b2d8a
  40daa1:	popf   
  40daa2:	ss pop ebp
  40daa4:	fdivrp st(4),st
  40daa6:	sbb    dl,BYTE PTR [ebx+0x22a887dd]
  40daac:	adc    cl,bl
  40daae:	loop   0x40db27
  40dab0:	cmp    ah,BYTE PTR [ebp-0x71a7823a]
  40dab6:	pop    es
  40dab7:	push   eax
  40dab8:	sbb    DWORD PTR [eax+ecx*4-0x3a46ea71],ebx
  40dabf:	in     eax,0x63
  40dac1:	std    
  40dac2:	ror    BYTE PTR [edx-0x50],0xaf
  40dac6:	jge    0x40daec
  40dac8:	cmp    eax,0xcd4586aa
  40dacd:	and    al,0xda
  40dacf:	sub    al,0x6a
  40dad1:	cmp    esi,esi
  40dad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad4:	mov    ah,bh
  40dad6:	and    BYTE PTR [edx+edi*8-0x44f46402],ch
  40dadd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dade:	stos   DWORD PTR es:[edi],eax
  40dadf:	cwde   
  40dae0:	cmp    al,0x47
  40dae2:	xor    bl,BYTE PTR [edi+eiz*1-0x7e]
  40dae6:	xor    ecx,DWORD PTR es:[edx]
  40dae9:	mov    edx,0xb0de3f67
  40daee:	or     ebp,DWORD PTR ds:0x4ea75d5a
  40daf4:	mov    ebp,0x47330e1a
  40daf9:	cli    
  40dafa:	xor    esi,ecx
  40dafc:	ds or  eax,0x59f76cb1
  40db02:	(bad)  
  40db03:	shl    DWORD PTR es:[edx-0x16],1
  40db07:	inc    ebx
  40db08:	aas    
  40db09:	imul   eax,DWORD PTR [edi+0x1ac6a72a],0x9a1427c2
  40db13:	inc    ebp
  40db14:	sub    cl,bl
  40db16:	ja     0x40dad0
  40db18:	mov    ebp,0x23ae24b
  40db1d:	sbb    BYTE PTR [ebx-0x1efae403],al
  40db23:	fs lock jmp 0x40db4e
  40db27:	inc    edx
  40db28:	nop
  40db29:	rcl    BYTE PTR [esi+0x18],cl
  40db2c:	xchg   esp,eax
  40db2d:	sbb    bh,BYTE PTR [ecx+ebx*2-0x4aef5a]
  40db34:	leave  
  40db35:	nop
  40db36:	adc    eax,0xafde8a57
  40db3b:	ret    
  40db3c:	jns    0x40dac4
  40db3e:	jle    0x40db27
  40db40:	push   es
  40db41:	cmp    edi,DWORD PTR [ebx-0x77]
  40db44:	stc    
  40db45:	xchg   ebp,eax
  40db46:	sbb    cl,BYTE PTR [edx+0x25ad7866]
  40db4c:	push   edi
  40db4d:	and    ecx,ebx
  40db4f:	shr    DWORD PTR [edx],0x81
  40db52:	push   ss
  40db53:	push   cs
  40db54:	xor    dl,dl
  40db56:	push   edi
  40db57:	mov    eax,DWORD PTR [eax]
  40db59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db5b:	cwde   
  40db5c:	jecxz  0x40daf4
  40db5e:	fs jb  0x40db38
  40db61:	push   ebp
  40db62:	in     al,0xdb
  40db64:	inc    ebp
  40db65:	dec    ebp
  40db66:	std    
  40db67:	mov    bh,dl
  40db69:	inc    edx
  40db6a:	push   cs
  40db6b:	mov    al,ds:0xd1ebfd86
  40db70:	dec    ebp
  40db71:	retf   
  40db72:	and    DWORD PTR [ecx+edx*8+0x2f842e7f],esi
  40db79:	je     0x40db44
  40db7b:	push   eax
  40db7c:	inc    esp
  40db7d:	leave  
  40db7e:	movaps xmm4,XMMWORD PTR [edx+ebx*4+0x5f]
  40db83:	push   edx
  40db84:	pop    ebx
  40db85:	aad    0xb7
  40db87:	xor    bl,BYTE PTR [edi-0x6c]
  40db8a:	xchg   esp,eax
  40db8b:	inc    eax
  40db8c:	mov    eax,ds:0xd4be5f1e
  40db91:	rcl    DWORD PTR [edi+0x501bd1a6],1
  40db97:	pop    edi
  40db98:	js     0x40db7d
  40db9a:	pusha  
  40db9b:	jmp    0x40dc10
  40db9d:	clc    
  40db9e:	es inc esi
  40dba0:	mov    bl,0xdc
  40dba2:	cmp    BYTE PTR [ecx+0x57],0x5b
  40dba6:	xchg   edi,eax
  40dba7:	hlt    
  40dba8:	in     al,dx
  40dba9:	mov    edi,0xf2999f82
  40dbae:	push   ecx
  40dbaf:	sub    BYTE PTR [esi+esi*2],al
  40dbb2:	mov    al,0x4
  40dbb4:	cmovs  esp,DWORD PTR [ecx+0x1c0dee24]
  40dbbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbbc:	repnz pop esp
  40dbbe:	sbb    eax,0x6b37ca2e
  40dbc3:	cmp    ebp,DWORD PTR [edi+0x78b66cf1]
  40dbc9:	mov    gs,WORD PTR [eax]
  40dbcb:	and    DWORD PTR [esi-0x76],ecx
  40dbce:	xchg   BYTE PTR [eax],al
  40dbd0:	push   0x77
  40dbd2:	repnz push esp
  40dbd4:	jne    0x40dbb5
  40dbd6:	fwait
  40dbd7:	rol    ebp,0xe4
  40dbda:	out    0x31,al
  40dbdc:	daa    
  40dbdd:	out    0x24,eax
  40dbdf:	and    eax,0x554c21e9
  40dbe4:	popa   
  40dbe5:	inc    ebx
  40dbe6:	jo     0x40dbe7
  40dbe8:	call   0x8382:0x2467e071
  40dbef:	xor    ebp,DWORD PTR [edi+0x7fce5850]
  40dbf5:	cmp    edx,ecx
  40dbf7:	out    dx,al
  40dbf8:	retf   
  40dbf9:	pop    esi
  40dbfa:	int    0xd5
  40dbfc:	(bad)  
  40dbfd:	push   ds
  40dbfe:	and    BYTE PTR [eax+ecx*1],ah
  40dc01:	outs   dx,DWORD PTR ds:[esi]
  40dc02:	and    ah,BYTE PTR [edx-0x246bd52f]
  40dc08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc09:	adc    ebp,DWORD PTR [eax+0x261da505]
  40dc0f:	mov    edx,ebp
  40dc11:	xchg   esp,eax
  40dc12:	pop    es
  40dc13:	aas    
  40dc14:	pop    ecx
  40dc15:	ficomp WORD PTR [ebp+0x676bc32b]
  40dc1b:	sub    DWORD PTR [edi],edx
  40dc1d:	jae    0x40dc17
  40dc1f:	outs   dx,DWORD PTR ds:[esi]
  40dc20:	fwait
  40dc21:	dec    esp
  40dc22:	retf   0x44fa
  40dc25:	push   edi
  40dc26:	sub    BYTE PTR [eax],0xf
  40dc29:	shl    ecx,0xf4
  40dc2c:	(bad)  
  40dc2d:	jb     0x40dc2a
  40dc2f:	jo     0x40dc29
  40dc31:	pop    ss
  40dc32:	int3   
  40dc33:	je     0x40dc63
  40dc35:	jecxz  0x40dc54
  40dc37:	bound  ebp,QWORD PTR [ecx]
  40dc39:	and    edx,esp
  40dc3b:	repz mov eax,ds:0xa5172439
  40dc41:	out    0x2c,eax
  40dc43:	out    dx,eax
  40dc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc45:	loopne 0x40dbe1
  40dc47:	(bad)  
  40dc48:	adc    dh,BYTE PTR [edx-0xc]
  40dc4b:	lods   eax,DWORD PTR ds:[esi]
  40dc4c:	rol    BYTE PTR [edx],0xd1
  40dc4f:	lods   al,BYTE PTR ds:[esi]
  40dc50:	cwde   
  40dc51:	xor    cl,BYTE PTR [edi-0x21]
  40dc54:	xchg   ebp,eax
  40dc55:	push   eax
  40dc56:	dec    eax
  40dc57:	sub    DWORD PTR [ebx+eiz*1],esi
  40dc5a:	inc    eax
  40dc5b:	(bad)  
  40dc5c:	lock ins BYTE PTR es:[edi],dx
  40dc5e:	jo     0x40dc94
  40dc60:	js     0x40dc45
  40dc62:	call   0xe8c9:0x8a04f48a
  40dc69:	fld    TBYTE PTR [ecx+0x210d088f]
  40dc6f:	jle    0x40dc62
  40dc71:	mov    dh,0x3d
  40dc73:	sub    edi,ecx
  40dc75:	mov    eax,0xe19cd125
  40dc7a:	jo     0x40dca9
  40dc7c:	lock sahf 
  40dc7e:	jmp    0x47821b6b
  40dc83:	inc    esi
  40dc84:	iret   
  40dc85:	push   edx
  40dc86:	or     al,0x5c
  40dc88:	add    ecx,DWORD PTR [ecx-0x3a89aa29]
  40dc8e:	cmp    eax,0x22d52b59
  40dc93:	les    eax,FWORD PTR [esi+0x7401f44f]
  40dc99:	xchg   ebx,eax
  40dc9a:	xor    edx,DWORD PTR [ecx-0x4506b0c0]
  40dca0:	cld    
  40dca1:	out    0xdb,eax
  40dca3:	mov    esi,0xefa6b0f6
  40dca8:	lock dec esp
  40dcaa:	jp     0x40dc8f
  40dcac:	adc    bh,ah
  40dcae:	outs   dx,BYTE PTR ds:[esi]
  40dcaf:	dec    edi
  40dcb0:	shr    ch,0x57
  40dcb3:	mov    esp,0xe5487836
  40dcb8:	stc    
  40dcb9:	ret    0x5f40
  40dcbc:	add    ah,ah
  40dcbe:	cmp    al,0xbc
  40dcc0:	sbb    al,al
  40dcc2:	sub    DWORD PTR ds:0xd7abb8e1,ebx
  40dcc8:	and    DWORD PTR [ecx+0x1559b36e],ebx
  40dcce:	lahf   
  40dccf:	jb     0x40dce1
  40dcd1:	jecxz  0x40dd1a
  40dcd3:	pop    ebx
  40dcd4:	add    eax,0xced3dcab
  40dcd9:	rcr    bh,1
  40dcdb:	in     eax,0x2
  40dcdd:	xor    eax,0x76a0193f
  40dce2:	test   al,0xc3
  40dce4:	(bad)  
  40dce6:	popa   
  40dce7:	adc    esi,esi
  40dce9:	neg    BYTE PTR ds:0x4429a1da
  40dcef:	scas   al,BYTE PTR es:[edi]
  40dcf0:	cmp    bh,BYTE PTR [ecx+0x10da6e2]
  40dcf6:	aaa    
  40dcf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf8:	lock mov bh,0x8
  40dcfb:	out    0xb3,al
  40dcfd:	test   eax,0x8d5c3bd0
  40dd02:	adc    eax,DWORD PTR [esi]
  40dd04:	cwde   
  40dd05:	dec    ebx
  40dd06:	pusha  
  40dd07:	mov    WORD PTR [eax-0x40],es
  40dd0a:	fs retf 0x31af
  40dd0e:	inc    esp
  40dd0f:	mov    ebp,0x30c00470
  40dd14:	lds    edi,FWORD PTR [ebp+0x37]
  40dd17:	dec    eax
  40dd18:	sbb    al,0xbc
  40dd1a:	es (bad) 
  40dd1c:	and    esi,DWORD PTR [ecx-0x6]
  40dd1f:	std    
  40dd20:	leave  
  40dd21:	dec    esp
  40dd22:	mov    ds:0x4759cb8f,eax
  40dd27:	aaa    
  40dd28:	xchg   edx,eax
  40dd29:	lea    esi,[edi]
  40dd2b:	nop
  40dd2c:	cdq    
  40dd2d:	or     edx,DWORD PTR [eax-0x7beeddf0]
  40dd33:	scas   al,BYTE PTR es:[edi]
  40dd34:	xor    ecx,ebp
  40dd36:	mov    ds:0x4f19dcf9,al
  40dd3b:	stc    
  40dd3c:	fimul  WORD PTR [ecx]
  40dd3e:	pop    edi
  40dd3f:	repz mov ch,0x42
  40dd42:	fstp   QWORD PTR [eax]
  40dd44:	jo     0x40dce9
  40dd46:	push   0x11
  40dd48:	sbb    ebx,ebp
  40dd4a:	loopne 0x40dd94
  40dd4c:	mov    dl,0x3a
  40dd4e:	in     al,0x79
  40dd50:	sub    al,0xcd
  40dd52:	(bad)  
  40dd53:	adc    ecx,DWORD PTR [ebx-0x62d3c070]
  40dd59:	xchg   edx,eax
  40dd5a:	cld    
  40dd5b:	dec    esp
  40dd5c:	mov    cs,WORD PTR [edi]
  40dd5e:	mov    ds:0xff07888d,eax
  40dd63:	iret   
  40dd64:	inc    BYTE PTR [ebx+0x3692b63a]
  40dd6a:	add    DWORD PTR [esi],eax
  40dd6c:	pop    ebx
  40dd6d:	adc    cl,BYTE PTR [ebp+0x7063b883]
  40dd73:	pop    ebx
  40dd74:	js     0x40ddb8
  40dd76:	ins    DWORD PTR es:[edi],dx
  40dd77:	out    dx,al
  40dd78:	outs   dx,BYTE PTR ds:[esi]
  40dd79:	cmp    eax,0xe39d7232
  40dd7e:	(bad)  
  40dd7f:	idiv   DWORD PTR [edi+0x60]
  40dd82:	xchg   BYTE PTR [edi+0x32de6f8b],dl
  40dd88:	push   ebx
  40dd89:	sbb    cl,BYTE PTR [eax-0x1079c471]
  40dd8f:	sbb    eax,0xa9fa1ea1
  40dd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd95:	lods   al,BYTE PTR ds:[esi]
  40dd96:	aam    0x7a
  40dd98:	sti    
  40dd99:	pushf  
  40dd9a:	sti    
  40dd9b:	xchg   esp,eax
  40dd9c:	bound  esi,QWORD PTR [edx+0x31]
  40dd9f:	into   
  40dda0:	dec    ebp
  40dda1:	add    DWORD PTR [ecx],esp
  40dda3:	shl    BYTE PTR [edx],1
  40dda5:	mov    dl,0x64
  40dda7:	push   0x417b866e
  40ddac:	sbb    bh,dh
  40ddae:	add    BYTE PTR [eax-0xace623],cl
  40ddb4:	adc    DWORD PTR [edx+0x4d3f4558],0xffffff96
  40ddbb:	(bad)  
  40ddbd:	xchg   ebp,eax
  40ddbe:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddc0:	cmp    ch,BYTE PTR [esi+0xda0d054]
  40ddc6:	addr16 fwait
  40ddc8:	push   ecx
  40ddc9:	int    0x2b
  40ddcb:	aaa    
  40ddcc:	test   DWORD PTR [ebx],edx
  40ddce:	cmp    eax,0xb875e170
  40ddd3:	push   ds
  40ddd4:	and    DWORD PTR [eax-0x4fc4dfb9],esi
  40ddda:	cmp    al,0x46
  40dddc:	xor    al,0xfd
  40ddde:	pop    edx
  40dddf:	call   DWORD PTR [eax+ebx*1+0x5d]
  40dde3:	pop    ebx
  40dde4:	and    al,BYTE PTR [ebp+edx*4-0x31]
  40dde8:	sub    ebp,ebx
  40ddea:	enter  0x3521,0xce
  40ddee:	mov    DWORD PTR [edi-0x52],0xf318e580
  40ddf5:	int3   
  40ddf6:	push   edx
  40ddf7:	or     al,0xb
  40ddf9:	call   0x8603:0xa56b3cff
  40de00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de01:	cs dec ecx
  40de03:	fld    TBYTE PTR [esi-0x39]
  40de06:	(bad)  
  40de07:	in     al,dx
  40de08:	dec    edx
  40de09:	xor    BYTE PTR [edi],dl
  40de0b:	adc    BYTE PTR [edx-0x2de90f8e],dl
  40de11:	adc    BYTE PTR [eax-0x14],ch
  40de14:	jg     0x40de45
  40de16:	pop    ebp
  40de17:	push   ss
  40de18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de19:	lods   eax,DWORD PTR ds:[esi]
  40de1a:	mov    dh,0x1c
  40de1c:	imul   ah
  40de1e:	jp     0x40de5d
  40de20:	pop    edi
  40de21:	int    0x5e
  40de23:	push   0xcada6e0d
  40de28:	loopne 0x40dddb
  40de2a:	adc    eax,0xc145bd2e
  40de2f:	jno    0x40dde5
  40de31:	lods   al,BYTE PTR ds:[esi]
  40de32:	push   edx
  40de33:	lds    eax,FWORD PTR [ebx]
  40de35:	out    dx,eax
  40de36:	jg     0x40ddfa
  40de38:	inc    edx
  40de39:	xor    edi,DWORD PTR [eax]
  40de3b:	ret    
  40de3c:	cmp    ch,BYTE PTR ds:0x5cb16d39
  40de42:	adc    al,0x23
  40de44:	pop    ebp
  40de45:	xor    DWORD PTR [ebp+0x1f210cb6],eax
  40de4b:	jo     0x40deba
  40de4d:	xor    eax,0x6723c30a
  40de52:	adc    DWORD PTR [eax-0x2593ae4e],ebx
  40de58:	test   al,0x59
  40de5a:	dec    ebx
  40de5b:	vmovdqu xmm1,XMMWORD PTR ds:0x8ac670e8
  40de63:	stc    
  40de64:	fs mov al,0x11
  40de67:	jbe    0x40deb8
  40de69:	test   ebp,esi
  40de6b:	push   0x21
  40de6d:	sti    
  40de6e:	xor    eax,0xd6b728bd
  40de73:	cli    
  40de74:	mov    ch,0xd2
  40de76:	(bad)  
  40de77:	xchg   ebx,eax
  40de78:	mul    DWORD PTR [ebx]
  40de7a:	lock push ebp
  40de7c:	js     0x40de07
  40de7e:	adc    al,bh
  40de80:	xor    edx,DWORD PTR ds:0x1378598d
  40de86:	clc    
  40de87:	add    dh,BYTE PTR [edx]
  40de89:	mov    ds:0xed7ec947,al
  40de8e:	xor    eax,0x92c58713
  40de93:	inc    esi
  40de94:	mov    dh,0x13
  40de96:	jae    0x40de2f
  40de98:	sar    BYTE PTR [eax+0x4f],0x2a
  40de9c:	data16 mov al,al
  40de9f:	sar    BYTE PTR [ecx],0xb7
  40dea2:	jbe    0x40df0f
  40dea4:	lods   al,BYTE PTR ds:[esi]
  40dea5:	jo     0x40deb3
  40dea7:	dec    edx
  40dea8:	mov    ch,0x69
  40deaa:	xchg   edx,eax
  40deab:	and    al,0xc9
  40dead:	jnp    0x40deba
  40deaf:	mov    bl,0xf
  40deb1:	(bad)  
  40deb2:	and    al,BYTE PTR [ebx+0xd]
  40deb5:	xchg   ebx,eax
  40deb6:	mov    ebx,0x8376f36f
  40debb:	cmp    eax,0x74b5aae0
  40dec0:	into   
  40dec1:	dec    ecx
  40dec2:	lods   al,BYTE PTR ds:[esi]
  40dec3:	imul   edi,DWORD PTR [ebp-0x4f],0x99629974
  40deca:	mov    esi,0x117c79b5
  40decf:	add    al,0xbe
  40ded1:	repnz cwde 
  40ded3:	arpl   WORD PTR [edi+0x33],ax
  40ded6:	mov    bh,0x6
  40ded8:	mov    dh,0xf2
  40deda:	gs add ebp,edi
  40dedd:	inc    ebp
  40dede:	lock mov bh,0x59
  40dee1:	and    BYTE PTR [ebx],cl
  40dee3:	ins    BYTE PTR es:[edi],dx
  40dee4:	rcr    BYTE PTR [esi-0x6e13dd58],cl
  40deea:	push   eax
  40deeb:	pop    eax
  40deec:	mov    esi,0x41e9d8c3
  40def1:	arpl   WORD PTR [eax],ax
  40def3:	or     edx,esp
  40def5:	fstp   DWORD PTR [eax+0x4558ffc0]
  40defb:	sar    DWORD PTR [ebx+0x56],0x1c
  40deff:	hlt    
  40df00:	cmp    eax,0x83975e92
  40df05:	stc    
  40df06:	dec    ecx
  40df07:	dec    eax
  40df08:	repz pop eax
  40df0a:	mov    ebp,0x5228da61
  40df0f:	icebp  
  40df10:	loop   0x40df77
  40df12:	fs pop ss
  40df14:	inc    ebx
  40df15:	(bad)  [edi-0x6d]
  40df18:	or     eax,0x93d470ac
  40df1d:	cmp    al,0x39
  40df1f:	push   0x162c2873
  40df24:	xor    BYTE PTR [edx+0x10edbe9a],dh
  40df2a:	sbb    al,0xf
  40df2c:	pop    ecx
  40df2d:	(bad)  [ecx-0x6c]
  40df30:	sbb    esi,DWORD PTR [eax+0x1d14903d]
  40df36:	les    ebx,FWORD PTR [edi+0x6e]
  40df39:	not    cl
  40df3b:	ret    
  40df3c:	sti    
  40df3d:	jnp    0x40df2b
  40df3f:	inc    edx
  40df40:	daa    
  40df41:	cwde   
  40df42:	(bad)  
  40df43:	cld    
  40df44:	jg     0x40df08
  40df46:	fimul  WORD PTR [eax-0x74]
  40df49:	pop    edx
  40df4a:	loopne 0x40dfb5
  40df4c:	enter  0xf15f,0xe7
  40df50:	inc    esi
  40df51:	adc    BYTE PTR [ebp-0x77],al
  40df54:	ds addr16 inc ebp
  40df57:	in     al,0xca
  40df59:	sub    edx,DWORD PTR fs:[ecx+0x5ac7372d]
  40df60:	adc    DWORD PTR [edi+0x1ad1ab14],esp
  40df66:	push   es
  40df67:	mov    ecx,0x357cca0e
  40df6c:	cmc    
  40df6d:	pop    es
  40df6e:	das    
  40df6f:	adc    eax,0x25d9ab78
  40df74:	pop    edx
  40df75:	inc    edx
  40df77:	and    edx,DWORD PTR [ebx]
  40df79:	xor    ebx,DWORD PTR [edx-0x54]
  40df7c:	mov    ebx,0xdec56b2
  40df81:	test   DWORD PTR [ebx],edi
  40df83:	inc    esi
  40df84:	pop    edi
  40df85:	push   ds
  40df86:	nop
  40df87:	mov    bh,0x15
  40df89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df8a:	out    0xbb,al
  40df8c:	fidivr DWORD PTR [ebx]
  40df8e:	sahf   
  40df8f:	cwde   
  40df90:	mov    dh,0xd9
  40df92:	pop    ecx
  40df93:	adc    al,0x85
  40df95:	xchg   ebx,eax
  40df96:	ds push ecx
  40df98:	xchg   ecx,eax
  40df99:	jecxz  0x40e01a
  40df9b:	jecxz  0x40e01c
  40df9d:	jnp    0x40dff6
  40df9f:	fdivr  st,st(1)
  40dfa1:	inc    eax
  40dfa2:	stc    
  40dfa3:	or     eax,0xe11e0078
  40dfa8:	inc    edx
  40dfa9:	test   DWORD PTR [esi+0x34],esi
  40dfac:	sbb    BYTE PTR [ebx-0x67e8f3df],dh
  40dfb2:	adc    esi,DWORD PTR [ecx+esi*4+0x0]
  40dfb6:	pop    ds
  40dfb7:	mov    al,ds:0xe6d062ed
  40dfbc:	pushf  
  40dfbd:	stos   DWORD PTR es:[edi],eax
  40dfbe:	push   0x5c7969d2
  40dfc3:	jg     0x40df61
  40dfc5:	or     al,0xd7
  40dfc7:	jp     0x40df73
  40dfc9:	push   edi
  40dfca:	ss mov fs,esp
  40dfcd:	adc    al,0x22
  40dfcf:	jl     0x40dfe8
  40dfd1:	loope  0x40e033
  40dfd3:	sub    DWORD PTR [esi+0x3],ebx
  40dfd6:	inc    esi
  40dfd7:	lock or ah,bl
  40dfda:	adc    eax,0x3f14571
  40dfdf:	shl    BYTE PTR [ecx-0x6f934bcd],1
  40dfe5:	sbb    ah,dl
  40dfe7:	je     0x40dfcc
  40dfe9:	mov    ah,0x70
  40dfeb:	fwait
  40dfec:	jecxz  0x40e05b
  40dfee:	pop    ecx
  40dfef:	aam    0x7c
  40dff1:	addr16 mov edi,0x8489fbc3
  40dff7:	inc    edi
  40dff8:	addr16 pushf 
  40dffa:	dec    esp
  40dffb:	sub    eax,0xbc6eaf55
  40e000:	push   ecx
  40e001:	fisub  WORD PTR [edx+0x8]
  40e004:	push   edi
  40e005:	mov    BYTE PTR [edx+0x6b],bh
  40e008:	sbb    al,0x58
  40e00a:	mov    WORD PTR [ecx-0x2cbfa8ca],fs
  40e010:	es into 
  40e012:	or     ch,BYTE PTR [ecx-0x4d]
  40e015:	jne    0x40e01f
  40e017:	push   ebp
  40e018:	push   eax
  40e019:	cs pop es
  40e01b:	loopne 0x40dfc5
  40e01d:	shr    BYTE PTR [esi-0x34],1
  40e020:	sbb    al,0x1e
  40e022:	or     al,0x4a
  40e024:	or     ch,BYTE PTR [edi]
  40e026:	jle    0x40dfbc
  40e028:	push   ss
  40e029:	daa    
  40e02a:	icebp  
  40e02b:	jne    0x40e04c
  40e02d:	ror    DWORD PTR [edi-0x1b],1
  40e030:	jns    0x40e016
  40e032:	cmp    esp,ebp
  40e034:	xor    al,0xa3
  40e036:	lods   eax,DWORD PTR ds:[esi]
  40e037:	pusha  
  40e038:	cs sbb eax,ebp
  40e03b:	mov    al,0x8d
  40e03d:	xchg   ebp,eax
  40e03e:	imul   ecx,edi,0x8ae4fde2
  40e044:	jge    0x40dfd7
  40e046:	mov    bh,0x78
  40e048:	lods   al,BYTE PTR ds:[esi]
  40e049:	fiadd  WORD PTR [esi-0x62]
  40e04c:	rol    ch,1
  40e04e:	add    DWORD PTR [ebx+0x7d148e80],edx
  40e054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e055:	inc    ecx
  40e056:	js     0x40e08b
  40e058:	or     DWORD PTR [eax+0x434c8ec2],0xed1d0f86
  40e062:	int    0x7b
  40e064:	(bad)  
  40e065:	jo     0x40dff0
  40e067:	and    ebx,DWORD PTR [ebx+0x2b]
  40e06a:	jo     0x40e0c5
  40e06c:	nop
  40e06d:	and    BYTE PTR [ebx+0x71],bh
  40e070:	scas   al,BYTE PTR es:[edi]
  40e071:	ret    
  40e072:	xchg   edi,eax
  40e073:	fucomip st,st(4)
  40e075:	pop    ebx
  40e076:	add    DWORD PTR [esi-0x6bc76eb7],esi
  40e07c:	inc    esi
  40e07d:	mov    esi,0x4039a02e
  40e082:	inc    esp
  40e083:	xchg   esp,eax
  40e084:	inc    esp
  40e085:	(bad)  
  40e086:	jge    0x40e00a
  40e088:	or     al,0x8c
  40e08a:	jo     0x40e05f
  40e08c:	and    cl,BYTE PTR [eax-0x56b2b36c]
  40e092:	aaa    
  40e093:	dec    ecx
  40e094:	pop    esp
  40e095:	xor    DWORD PTR [eax-0x166be7d4],ebx
  40e09b:	pop    ecx
  40e09c:	test   al,0x2b
  40e09e:	sub    edi,edx
  40e0a0:	out    0x9c,eax
  40e0a2:	cmp    BYTE PTR [ebp+0x4e283d7],al
  40e0a8:	loopne 0x40e11d
  40e0aa:	or     DWORD PTR gs:[edx+0x669f619f],eax
  40e0b1:	jmp    0x1eacd300
  40e0b6:	xor    al,0xd1
  40e0b8:	das    
  40e0b9:	inc    edx
  40e0ba:	and    BYTE PTR [esi+edi*4],cl
  40e0bd:	add    BYTE PTR [eax+0x2e235a81],dh
  40e0c3:	mov    bl,0x99
  40e0c5:	sahf   
  40e0c6:	retf   0xa9b7
  40e0c9:	(bad)  
  40e0cb:	leave  
  40e0cc:	inc    ebx
  40e0cd:	sub    al,0x6a
  40e0cf:	in     al,0x78
  40e0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0d2:	pop    ebx
  40e0d3:	adc    bl,BYTE PTR [edx]
  40e0d5:	cmp    BYTE PTR [edi],0x39
  40e0d8:	adc    esi,DWORD PTR [ecx]
  40e0da:	xchg   ecx,eax
  40e0db:	popf   
  40e0dc:	out    0x68,eax
  40e0de:	xchg   edi,eax
  40e0df:	cmp    al,0xfb
  40e0e1:	adc    esi,DWORD PTR ds:0x8a84ee9f
  40e0e7:	dec    edx
  40e0e8:	and    eax,0xbed3372e
  40e0ed:	into   
  40e0ee:	test   eax,0x1719427a
  40e0f3:	fisttp QWORD PTR [ebx-0x2f]
  40e0f6:	test   BYTE PTR [edi-0x7a4877ec],dh
  40e0fc:	ret    0x6c63
  40e0ff:	sub    ebp,ecx
  40e101:	jg     0x40e140
  40e103:	mov    ebx,0xdf890800
  40e108:	or     eax,0x344fd143
  40e10d:	adc    esi,DWORD PTR ds:0x8409b80a
  40e113:	repz cmc 
  40e115:	dec    ebx
  40e116:	outs   dx,DWORD PTR ds:[esi]
  40e117:	adc    eax,0x50fa43d5
  40e11c:	pop    eax
  40e11d:	test   eax,0xb7b49188
  40e122:	test   eax,0xd060c007
  40e127:	push   ecx
  40e128:	push   ds
  40e129:	mov    dl,0x42
  40e12b:	xchg   edi,eax
  40e12c:	or     eax,0x8ec662b3
  40e131:	mov    eax,0xf8ddbbab
  40e136:	push   ecx
  40e137:	and    al,0xf3
  40e139:	xor    bl,al
  40e13b:	sar    DWORD PTR [eax],cl
  40e13d:	loope  0x40e130
  40e13f:	imul   edi,DWORD PTR [eax-0x5518524a],0xffffffff
  40e146:	push   eax
  40e147:	arpl   WORD PTR [eax+0x61754d4c],di
  40e14d:	mov    DWORD PTR [esi-0x3c],ebx
  40e150:	fistp  DWORD PTR [ebx-0x47]
  40e153:	push   0xc3534d3c
  40e158:	mov    bh,0x4
  40e15a:	arpl   WORD PTR [eax-0x7],ax
  40e15d:	popa   
  40e15e:	or     eax,0x3cfbac3d
  40e163:	add    al,0xf5
  40e165:	mov    ecx,gs
  40e167:	shr    BYTE PTR [ebp-0x2c],1
  40e16a:	and    dh,BYTE PTR [ebp+0x51]
  40e16d:	jns    0x40e137
  40e16f:	mov    cl,0xfa
  40e171:	daa    
  40e172:	mov    ds:0xa4617dd3,eax
  40e177:	shl    BYTE PTR [eax+0x5aed0fed],1
  40e17d:	fidivr WORD PTR [ecx+0x5c]
  40e180:	shr    BYTE PTR [edi-0x2],1
  40e183:	popa   
  40e184:	sahf   
  40e185:	mul    DWORD PTR [esi]
  40e187:	test   al,ch
  40e189:	xchg   BYTE PTR [eax-0x32b31ba8],bl
  40e18f:	and    WORD PTR [ebp+0x57366ccc],0xff86
  40e197:	lods   eax,DWORD PTR ds:[esi]
  40e198:	dec    esp
  40e199:	aaa    
  40e19a:	sub    al,0x41
  40e19c:	mov    edx,0xa7e16e3
  40e1a1:	nop
  40e1a2:	mov    ds:0x21f64c97,eax
  40e1a7:	mov    dl,0xd7
  40e1a9:	jp     0x40e228
  40e1ab:	and    al,0xfd
  40e1ad:	push   esi
  40e1ae:	sbb    ecx,ecx
  40e1b0:	bound  edx,QWORD PTR [ebx+0x675626de]
  40e1b6:	and    dl,BYTE PTR [ebp-0x46e5adf7]
  40e1bc:	scas   al,BYTE PTR es:[edi]
  40e1bd:	and    eax,0xafbffd7b
  40e1c2:	lds    ebp,FWORD PTR [esi-0x4e960db0]
  40e1c8:	imul   esi,DWORD PTR [esi+edx*1+0x27],0xffffffaa
  40e1cd:	add    ah,dh
  40e1cf:	enter  0xa39c,0x5
  40e1d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1d4:	shl    DWORD PTR [edi+eax*8],0x94
  40e1d8:	bsf    ebp,DWORD PTR [esi]
  40e1db:	jmp    0x4d536c92
  40e1e0:	or     DWORD PTR [ebx],ebp
  40e1e2:	jb     0x40e187
  40e1e4:	popa   
  40e1e5:	daa    
  40e1e6:	sbb    eax,0x2545b4bf
  40e1eb:	cwde   
  40e1ec:	arpl   WORD PTR [eax+0x6cb0ef65],sp
  40e1f2:	sahf   
  40e1f3:	ret    
  40e1f4:	xlat   BYTE PTR es:[ebx]
  40e1f6:	cmp    BYTE PTR [esi],dh
  40e1f8:	dec    edi
  40e1f9:	mov    al,ds:0xf3790d6b
  40e1fe:	mov    ebx,DWORD PTR ds:0xfa051e19
  40e204:	add    eax,DWORD PTR [eax-0x7b5f3dc2]
  40e20a:	addr16 adc al,0xc1
  40e20d:	mov    edx,gs
  40e20f:	cli    
  40e210:	and    eax,0x73f5e9ce
  40e215:	retf   
  40e216:	dec    esp
  40e217:	add    eax,0xf3829724
  40e21c:	outs   dx,BYTE PTR ds:[esi]
  40e21d:	jmp    0x46c9:0xd2f848ae
  40e224:	jb     0x40e291
  40e226:	and    bh,bl
  40e228:	pop    edi
  40e229:	je     0x40e287
  40e22b:	push   ecx
  40e22c:	and    edx,DWORD PTR ds:0x67948bf
  40e232:	push   ss
  40e233:	xchg   esi,eax
  40e234:	dec    eax
  40e235:	(bad)
  40e238:	jne    0x40e1d1
  40e23a:	mov    ds:0x1a0b6577,eax
  40e23f:	out    dx,al
  40e240:	mov    cl,dh
  40e242:	jno    0x40e1f3
  40e244:	add    al,0xc5
  40e246:	popf   
  40e247:	add    BYTE PTR [ebp+0x1a],ah
  40e24a:	lds    edx,FWORD PTR [ecx+0x3]
  40e24d:	adc    DWORD PTR [eax-0x62],ecx
  40e250:	or     cl,dl
  40e252:	mov    cl,0xf
  40e254:	imul   edi,esp,0xffffffa3
  40e257:	ja     0x40e1fe
  40e259:	inc    edx
  40e25a:	adc    eax,0x58382858
  40e25f:	les    ecx,FWORD PTR [ebx]
  40e261:	mov    fs,ebx
  40e263:	inc    esp
  40e264:	arpl   WORD PTR [edi],bx
  40e266:	and    DWORD PTR [ebx-0x25],edi
  40e269:	scas   al,BYTE PTR es:[edi]
  40e26a:	mov    ebp,0xea36f588
  40e26f:	mov    edx,0x9efca726
  40e274:	xchg   BYTE PTR [edi+0x19],dl
  40e277:	std    
  40e278:	adc    DWORD PTR [edi],ebx
  40e27a:	adc    eax,0x3dce880a
  40e27f:	adc    BYTE PTR [eax],0x6c
  40e282:	mov    esi,0x6a3f17f6
  40e287:	dec    eax
  40e288:	pop    edx
  40e289:	or     ebx,DWORD PTR [edx]
  40e28b:	lods   eax,DWORD PTR ds:[esi]
  40e28c:	adc    BYTE PTR ds:0x8ac1b516,bl
  40e292:	aaa    
  40e293:	push   cs
  40e294:	lods   eax,DWORD PTR ds:[esi]
  40e295:	sbb    bl,BYTE PTR [edx]
  40e297:	cmp    ch,BYTE PTR [eax+0x4e772389]
  40e29d:	loopne 0x40e23a
  40e29f:	sahf   
  40e2a0:	sub    DWORD PTR ds:0x7b0ec8d2,esp
  40e2a6:	shr    DWORD PTR ds:0x1494b496,cl
  40e2ad:	outs   dx,BYTE PTR ds:[esi]
  40e2ae:	sub    al,BYTE PTR [edi-0x5b1fd9f5]
  40e2b4:	push   cs
  40e2b5:	xchg   DWORD PTR es:[ebx+eax*8],esi
  40e2b9:	int3   
  40e2ba:	gs pop esp
  40e2bc:	test   cl,al
  40e2be:	faddp  st(3),st
  40e2c0:	retf   0x3d38
  40e2c3:	shl    DWORD PTR ds:0xa881647b,0x17
  40e2ca:	jmp    0x875e7389
  40e2cf:	jbe    0x40e298
  40e2d1:	fadd   st(4),st
  40e2d3:	pop    ebp
  40e2d4:	mov    BYTE PTR [esp+ebx*1+0x5d08c676],dh
  40e2db:	scas   eax,DWORD PTR es:[edi]
  40e2dc:	mov    ah,0xcf
  40e2de:	sub    eax,0xec3dd04f
  40e2e3:	dec    esp
  40e2e4:	sub    eax,0x69c6b046
  40e2e9:	add    eax,0x335caabb
  40e2ee:	(bad)  
  40e2ef:	or     al,0xc3
  40e2f1:	mov    al,ds:0x8a63166a
  40e2f6:	mov    ah,ch
  40e2f8:	adc    BYTE PTR [edx+0x2955d9df],bh
  40e2fe:	adc    bl,BYTE PTR [edx+eiz*2-0x19]
  40e302:	icebp  
  40e303:	mov    edi,0xc6b029d0
  40e308:	jbe    0x40e2b7
  40e30a:	(bad)  
  40e30b:	lods   eax,DWORD PTR ds:[esi]
  40e30c:	jo     0x40e2c9
  40e30e:	xchg   edx,eax
  40e30f:	mov    ds:0x76a1ad13,eax
  40e314:	inc    esi
  40e315:	js     0x40e36b
  40e317:	push   edi
  40e319:	aas    
  40e31a:	add    eax,0xc67136f2
  40e31f:	add    bl,BYTE PTR [ebp+ebp*2+0x6cd152dd]
  40e326:	loopne 0x40e3a4
  40e328:	xchg   ecx,eax
  40e329:	popa   
  40e32a:	jnp    0x40e2c2
  40e32c:	aam    0x44
  40e32e:	test   DWORD PTR [edi],esp
  40e330:	sahf   
  40e331:	jbe    0x40e2c0
  40e333:	mov    bh,0x60
  40e335:	push   esp
  40e336:	gs pop es
  40e338:	xchg   ebx,eax
  40e339:	xlat   BYTE PTR ds:[ebx]
  40e33a:	push   0xffffffe4
  40e33c:	clc    
  40e33d:	xchg   ecx,eax
  40e33e:	call   0x6e1b2dc6
  40e343:	nop
  40e344:	ss ret 0x2298
  40e348:	mov    ah,ah
  40e34a:	sbb    ch,BYTE PTR [ebx]
  40e34c:	test   al,0x3
  40e34e:	pop    ds
  40e34f:	mov    BYTE PTR [ebx],ch
  40e351:	fsub   st(3),st
  40e353:	retf   0xe7ac
  40e356:	or     al,0x2a
  40e358:	repz inc edx
  40e35a:	ss mov ebx,0xb4bb1b24
  40e360:	inc    edi
  40e361:	or     eax,0x9518ebd9
  40e366:	fldenv [ecx]
  40e368:	js     0x40e390
  40e36a:	xchg   edx,eax
  40e36b:	push   eax
  40e36c:	in     eax,dx
  40e36d:	sbb    al,0x7a
  40e36f:	int    0x5c
  40e371:	or     bl,dl
  40e373:	hlt    
  40e374:	mov    edi,0x2dcaccec
  40e379:	(bad)  
  40e37a:	adc    eax,0x4ade2c50
  40e37f:	dec    eax
  40e380:	pop    eax
  40e381:	dec    eax
  40e382:	and    ch,BYTE PTR [eax+0x6dcd1726]
  40e388:	xchg   ebp,eax
  40e389:	and    DWORD PTR [ebx-0xb],0xfffffff7
  40e38d:	out    dx,eax
  40e38e:	inc    esp
  40e38f:	jne    0x40e3f6
  40e391:	adc    BYTE PTR [ecx-0x57b32f1e],0xa7
  40e398:	jge    0x40e3f0
  40e39a:	inc    ebp
  40e39b:	int3   
  40e39c:	mov    ss,WORD PTR [ebx-0x14402599]
  40e3a2:	shl    eax,cl
  40e3a4:	jo     0x40e3ff
  40e3a6:	je     0x40e3ff
  40e3a8:	fiadd  DWORD PTR [esi+eiz*2+0x3f]
  40e3ac:	data16 test BYTE PTR [edx+0x6a4caee5],ah
  40e3b3:	sti    
  40e3b4:	cmp    ah,BYTE PTR [eax-0x3e93f82c]
  40e3ba:	outs   dx,BYTE PTR ds:[esi]
  40e3bb:	dec    esi
  40e3bc:	lods   al,BYTE PTR ds:[esi]
  40e3bd:	(bad)  
  40e3be:	and    al,0x9
  40e3c0:	mov    ah,0x2c
  40e3c2:	test   BYTE PTR [esi],dh
  40e3c4:	xor    eax,0xb1df0092
  40e3c9:	cld    
  40e3ca:	sub    eax,0x6520cd59
  40e3cf:	sbb    BYTE PTR [ecx-0x12],bl
  40e3d2:	mov    bl,0x91
  40e3d4:	push   es
  40e3d5:	xchg   ebp,eax
  40e3d6:	lahf   
  40e3d7:	or     ch,bh
  40e3d9:	cmp    eax,0x642234ee
  40e3de:	dec    edx
  40e3df:	mov    ecx,0xe8f4c7b8
  40e3e4:	rcl    DWORD PTR [edi-0x4],0x73
  40e3e8:	(bad)  
  40e3e9:	sub    eax,0xa2213215
  40e3ee:	leave  
  40e3ef:	fld    QWORD PTR [eax+0x9c08e2f]
  40e3f5:	mov    esi,0x7a31c2a4
  40e3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3fb:	(bad)  
  40e3fd:	loop   0x40e3fa
  40e3ff:	jmp    0x307b024b
  40e404:	add    eax,0xfa924aec
  40e409:	std    
  40e40a:	or     esp,DWORD PTR [edi-0x37]
  40e40d:	sbb    edi,DWORD PTR [esi-0x7d56014f]
  40e413:	aam    0xfd
  40e415:	sub    edi,ecx
  40e417:	popf   
  40e418:	mov    dl,0x29
  40e41a:	push   cs
  40e41b:	sub    DWORD PTR [edx],0xffffff98
  40e41e:	lock jmp 0x40e3b1
  40e421:	xchg   esp,ecx
  40e423:	fisttp QWORD PTR [ebx-0x3cf61cfa]
  40e429:	jae    0x40e437
  40e42b:	mov    ah,0x6b
  40e42d:	jnp    0x40e3ef
  40e42f:	mov    DWORD PTR [edx+0x2e],edx
  40e432:	and    dl,BYTE PTR [eax-0x7e]
  40e435:	cmp    al,0xd2
  40e437:	scas   eax,DWORD PTR es:[edi]
  40e438:	mov    esi,0xfd6bd01f
  40e43d:	cmp    edx,DWORD PTR [esi-0x62]
  40e440:	and    DWORD PTR [edi-0x3c],esi
  40e443:	push   0x24
  40e445:	in     al,0xfe
  40e447:	fs in  al,dx
  40e449:	push   edx
  40e44a:	or     ecx,esi
  40e44c:	mov    ds:0x3069f1c4,eax
  40e451:	scas   eax,DWORD PTR es:[edi]
  40e452:	into   
  40e453:	inc    ebp
  40e454:	into   
  40e455:	aas    
  40e456:	mov    ds:0x7342ba,eax
  40e45b:	cwde   
  40e45c:	sbb    BYTE PTR [edi+0x79],dl
  40e45f:	shr    ebx,cl
  40e461:	adc    dh,BYTE PTR [edi]
  40e463:	mov    ah,BYTE PTR [esi-0x5046653b]
  40e469:	xchg   edx,eax
  40e46a:	lea    edx,[eax+eiz*1+0x21]
  40e46e:	mov    cl,0x81
  40e470:	mov    ?,ebx
  40e472:	mov    DWORD PTR [ebx],esp
  40e474:	ja     0x40e404
  40e476:	loopne 0x40e4c3
  40e478:	fadd   QWORD PTR [ecx-0x224130b2]
  40e47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e47f:	mov    eax,ds:0x11b3d493
  40e484:	test   BYTE PTR [eax-0x35],dl
  40e487:	loope  0x40e42a
  40e489:	out    dx,al
  40e48a:	push   0xffffff9d
  40e48c:	pxor   mm1,mm3
  40e48f:	sbb    al,0x33
  40e491:	retf   0x795b
  40e494:	xchg   edi,eax
  40e495:	xchg   ebx,eax
  40e496:	add    bh,BYTE PTR [ebp-0x2835ed1d]
  40e49c:	mov    ebp,0x294bb489
  40e4a1:	xchg   ebx,eax
  40e4a2:	stc    
  40e4a3:	outs   dx,DWORD PTR ds:[esi]
  40e4a4:	out    dx,al
  40e4a5:	fbstp  TBYTE PTR [ebx-0x13de449d]
  40e4ab:	mov    edi,0xcf9fb9a
  40e4b0:	xor    al,0xf2
  40e4b2:	std    
  40e4b3:	xor    dl,BYTE PTR [edi]
  40e4b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4b6:	pop    ss
  40e4b7:	mov    dh,0x1d
  40e4b9:	add    BYTE PTR [esi],dh
  40e4bb:	fwait
  40e4bc:	adc    al,0xb7
  40e4be:	hlt    
  40e4bf:	mov    WORD PTR [edi+0x2d],fs
  40e4c2:	shl    dh,0x33
  40e4c5:	pop    ebp
  40e4c6:	jne    0x40e514
  40e4c8:	cmp    dh,ch
  40e4ca:	mov    dh,BYTE PTR [edx-0x1eb51529]
  40e4d0:	nop
  40e4d1:	arpl   WORD PTR [eax+0x52040da7],cx
  40e4d7:	call   0xa8b9:0x7f433e3a
  40e4de:	xchg   esp,eax
  40e4df:	enter  0xf9a0,0x58
  40e4e3:	cmp    al,0x77
  40e4e5:	aad    0x78
  40e4e7:	les    edx,FWORD PTR [ebx]
  40e4e9:	imul   ebx,DWORD PTR [eax-0x14],0x44dc04e2
  40e4f0:	xchg   edx,eax
  40e4f1:	cmc    
  40e4f2:	pop    ss
  40e4f3:	pop    esp
  40e4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4f5:	cwde   
  40e4f6:	aad    0x12
  40e4f8:	adc    BYTE PTR [edx+0x2aa14899],dh
  40e4fe:	jo     0x40e520
  40e500:	pop    esi
  40e501:	inc    edi
  40e502:	mov    ecx,esp
  40e504:	dec    ecx
  40e505:	lods   eax,DWORD PTR ds:[esi]
  40e506:	adc    ch,cl
  40e508:	js     0x40e572
  40e50a:	(bad)  
  40e50b:	pop    ecx
  40e50c:	int3   
  40e50d:	test   eax,0xf135f910
  40e512:	shl    BYTE PTR [edx-0x52],0xcf
  40e516:	push   ds
  40e517:	pop    edi
  40e518:	pop    ds
  40e519:	mov    ebx,0x50b39281
  40e51e:	sbb    bl,BYTE PTR [edi]
  40e520:	push   esi
  40e521:	push   esp
  40e522:	push   cs
  40e523:	push   eax
  40e524:	sbb    al,0x65
  40e526:	mov    BYTE PTR [ebp+0x67f38e08],bh
  40e52c:	jb     0x40e59d
  40e52e:	in     eax,0xb
  40e530:	push   ds
  40e531:	or     BYTE PTR [edx-0x566e02ed],bl
  40e537:	(bad)  
  40e538:	jae    0x40e4d1
  40e53a:	aam    0xa7
  40e53c:	fild   WORD PTR [ecx-0x9]
  40e53f:	xor    esi,DWORD PTR es:[edi+0x25]
  40e543:	ret    
  40e544:	add    edi,DWORD PTR [esi+0x40288ccf]
  40e54a:	cmp    eax,0xe3102096
  40e54f:	jle    0x40e4f6
  40e551:	js     0x40e572
  40e553:	pushf  
  40e554:	int3   
  40e555:	mov    cl,0x96
  40e557:	xor    BYTE PTR [edi-0x11],dl
  40e55a:	xchg   esp,eax
  40e55b:	mov    dh,0x2
  40e55d:	mov    WORD PTR ds:0xae1f3ed,cs
  40e563:	pop    es
  40e564:	repz int3 
  40e566:	std    
  40e567:	sub    DWORD PTR [esi-0x50f9f13b],ecx
  40e56d:	or     ah,bh
  40e56f:	mov    eax,ds:0x2b4ccb62
  40e574:	dec    ebx
  40e575:	scas   al,BYTE PTR es:[edi]
  40e576:	(bad)  
  40e577:	xchg   ebp,eax
  40e578:	jmp    0x40e5d8
  40e57a:	outs   dx,DWORD PTR ds:[esi]
  40e57b:	xchg   ebp,eax
  40e57c:	scas   eax,DWORD PTR es:[edi]
  40e57d:	int    0x63
  40e57f:	jle    0x40e562
  40e581:	ins    BYTE PTR es:[edi],dx
  40e582:	in     al,dx
  40e583:	mov    bl,0x88
  40e585:	mov    ah,0x46
  40e587:	in     eax,dx
  40e588:	outs   dx,DWORD PTR ds:[esi]
  40e589:	pop    ds
  40e58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e58b:	lods   al,BYTE PTR ds:[esi]
  40e58c:	aaa    
  40e58d:	push   ebx
  40e58e:	int3   
  40e58f:	sub    ebx,DWORD PTR [edi]
  40e591:	pop    ecx
  40e592:	cmp    edx,DWORD PTR [eax+eiz*2]
  40e595:	ret    
  40e596:	cli    
  40e597:	sub    eax,0xa12a67ee
  40e59c:	mov    ebp,0x4176fc2f
  40e5a1:	push   edi
  40e5a2:	lahf   
  40e5a3:	pushf  
  40e5a4:	xchg   ebx,eax
  40e5a5:	lds    ebp,FWORD PTR [edx-0x7cd4c180]
  40e5ab:	fst    QWORD PTR [edi+edi*2+0x266a86f9]
  40e5b2:	popf   
  40e5b3:	push   ss
  40e5b4:	dec    edi
  40e5b5:	das    
  40e5b6:	xor    eax,0x456f575
  40e5bb:	sti    
  40e5bc:	ret    
  40e5bd:	xchg   esp,eax
  40e5be:	adc    esp,DWORD PTR [esi+ebp*8-0x42]
  40e5c2:	jno    0x40e5a5
  40e5c4:	aas    
  40e5c5:	lods   eax,DWORD PTR ds:[esi]
  40e5c6:	cmp    BYTE PTR [edx-0x44a535cd],ch
  40e5cc:	cmp    bh,BYTE PTR [edi+0x4f]
  40e5cf:	sub    BYTE PTR [esi],cl
  40e5d1:	mov    esp,0x8e39b54e
  40e5d6:	or     al,0x49
  40e5d8:	aas    
  40e5d9:	mov    ah,0xb3
  40e5db:	repnz ror DWORD PTR [edx],1
  40e5de:	(bad)  
  40e5df:	mov    dh,0xe
  40e5e1:	cs push cs
  40e5e3:	popa   
  40e5e4:	call   0x85510425
  40e5e9:	mov    edx,0xe1035c85
  40e5ee:	fwait
  40e5ef:	call   0xb6f2:0xbd0e429
  40e5f6:	mov    ebp,0x9dbe1b23
  40e5fb:	adc    bh,dh
  40e5fd:	xchg   BYTE PTR [esi],cl
  40e5ff:	add    cl,BYTE PTR [ebx+ebp*8]
  40e602:	into   
  40e603:	out    dx,ax
  40e605:	jo     0x40e5d8
  40e607:	into   
  40e608:	aas    
  40e609:	sub    cl,BYTE PTR [edx+0x25]
  40e60c:	add    BYTE PTR [ebx+0x4c],dl
  40e60f:	dec    esi
  40e610:	jb     0x40e5a9
  40e612:	adc    esp,DWORD PTR [eax+0x66]
  40e615:	test   BYTE PTR [ebp-0x77ccec9f],ch
  40e61b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e61c:	or     DWORD PTR [edi-0x336f34f4],0x845c90ff
  40e626:	(bad)  
  40e627:	popf   
  40e628:	jle    0x40e639
  40e62a:	pusha  
  40e62b:	arpl   WORD PTR [eax-0x645ccc6b],ax
  40e631:	outs   dx,BYTE PTR ds:[esi]
  40e632:	fadd   DWORD PTR [ecx-0x2b8f673d]
  40e638:	lods   al,BYTE PTR ds:[esi]
  40e639:	pusha  
  40e63a:	ds cli 
  40e63c:	std    
  40e63d:	cld    
  40e63e:	inc    eax
  40e63f:	pop    ecx
  40e640:	das    
  40e641:	rol    BYTE PTR [edx-0x64],1
  40e644:	sub    eax,0xc193569e
  40e649:	mov    ch,0x65
  40e64b:	jae    0x40e6cb
  40e64d:	mov    ds:0xc7d22b6f,eax
  40e652:	sub    al,0x62
  40e654:	jno    0x40e65b
  40e656:	dec    ebx
  40e657:	enter  0xa5fc,0x2b
  40e65b:	push   edi
  40e65c:	js     0x40e62c
  40e65e:	gs xchg ebx,eax
  40e660:	dec    edx
  40e661:	push   edx
  40e662:	je     0x40e62a
  40e664:	in     eax,dx
  40e665:	inc    ebp
  40e666:	xor    ch,BYTE PTR [ecx-0x45bad108]
  40e66c:	leave  
  40e66d:	out    dx,al
  40e66e:	dec    esi
  40e66f:	pop    ecx
  40e670:	sbb    al,0x3d
  40e672:	fidiv  DWORD PTR [eax+0x2d]
  40e675:	push   ecx
  40e676:	into   
  40e677:	lea    ebp,[edx+ebx*4]
  40e67a:	inc    edx
  40e67b:	cmp    al,0x9e
  40e67d:	aad    0x16
  40e67f:	jne    0x40e69f
  40e681:	add    eax,0x236a353a
  40e686:	add    dl,BYTE PTR [ebx]
  40e688:	jg     0x40e617
  40e68a:	js     0x40e68e
  40e68c:	sub    al,0xf
  40e68e:	scas   al,BYTE PTR es:[edi]
  40e68f:	xor    eax,0x152bcb96
  40e694:	mov    eax,0x29712e17
  40e699:	inc    edi
  40e69a:	xchg   ecx,eax
  40e69b:	xor    ebx,0x5c
  40e69e:	mov    bh,0xfd
  40e6a0:	js     0x40e63a
  40e6a2:	sbb    cl,BYTE PTR [ecx+0x38384408]
  40e6a8:	sbb    al,ch
  40e6aa:	ficom  WORD PTR [ebp-0x3]
  40e6ad:	jno    0x40e68b
  40e6af:	cmp    al,0xbf
  40e6b1:	pop    eax
  40e6b2:	les    esp,FWORD PTR [edx-0x52]
  40e6b5:	and    eax,0x62820855
  40e6ba:	inc    esp
  40e6bb:	xor    edi,DWORD PTR [ebp+0x78]
  40e6be:	push   ebp
  40e6bf:	push   0xdb33e05b
  40e6c4:	(bad)  
  40e6c5:	adc    BYTE PTR [edi],dh
  40e6c7:	push   es
  40e6c8:	and    BYTE PTR [edi],dh
  40e6ca:	mov    ah,0x46
  40e6cc:	fsubr  QWORD PTR [eax-0x20371564]
  40e6d2:	mov    ecx,0x2ddb2d19
  40e6d7:	cdq    
  40e6d8:	(bad)  
  40e6d9:	les    esi,FWORD PTR [edx-0x3bb025bd]
  40e6df:	outs   dx,BYTE PTR ds:[esi]
  40e6e0:	fbld   TBYTE PTR [edx+ebp*4]
  40e6e3:	mov    al,ds:0xf98fea47
  40e6e8:	loop   0x40e72f
  40e6ea:	test   BYTE PTR [esi],bl
  40e6ec:	jmp    edi
  40e6ee:	and    ebp,esp
  40e6f0:	jo     0x40e6e9
  40e6f2:	test   al,0x88
  40e6f4:	xchg   ebp,eax
  40e6f5:	xchg   esi,eax
  40e6f6:	push   es
  40e6f7:	pop    esp
  40e6f8:	bswap  ebx
  40e6fa:	fwait
  40e6fb:	or     eax,0xb193a52a
  40e700:	adc    BYTE PTR [ebx-0x63],al
  40e703:	clc    
  40e704:	gs dec eax
  40e706:	mov    al,ds:0x5c6a0f69
  40e70b:	leave  
  40e70c:	dec    ebp
  40e70d:	fisubr WORD PTR [edx+0x31]
  40e710:	mov    cs,WORD PTR [edx-0x58edc039]
  40e716:	scas   eax,DWORD PTR es:[edi]
  40e717:	mov    cl,0xd0
  40e719:	jg     0x40e6df
  40e71b:	dec    ebx
  40e71c:	jnp    0x40e6a9
  40e71e:	dec    edx
  40e71f:	out    0x86,al
  40e721:	jle    0x40e70e
  40e723:	xlat   BYTE PTR ds:[ebx]
  40e724:	pop    ebp
  40e725:	jo     0x40e706
  40e727:	repz pop ds
  40e729:	cmp    dl,BYTE PTR [edx-0x1964c338]
  40e72f:	xor    eax,0x3995b316
  40e734:	adc    DWORD PTR [eax+0x5f],edx
  40e737:	outs   dx,BYTE PTR ds:[esi]
  40e738:	addr16 cdq 
  40e73a:	add    DWORD PTR [edx-0x34],ecx
  40e73d:	(bad)  
  40e73e:	pcmpgtb mm1,QWORD PTR [edi+0x60ae1fa8]
  40e745:	in     al,0x13
  40e747:	int3   
  40e748:	loope  0x40e749
  40e74a:	push   ebp
  40e74b:	cld    
  40e74c:	push   edi
  40e74d:	fcmovnbe st,st(5)
  40e74f:	push   ds
  40e750:	cmp    DWORD PTR [edx+eiz*4-0x49],ebp
  40e754:	outs   dx,DWORD PTR ds:[esi]
  40e755:	mov    BYTE PTR [ebp-0x10ced19b],al
  40e75b:	jg     0x40e764
  40e75d:	in     eax,dx
  40e75e:	fldcw  WORD PTR [ecx+edx*8]
  40e761:	ja     0x40e7d9
  40e763:	jge    0x40e74c
  40e765:	add    BYTE PTR [ebp-0x53],bl
  40e768:	shl    DWORD PTR [eax-0x4b],0x7
  40e76c:	sub    al,0x73
  40e76e:	lock ds sti 
  40e771:	(bad)  
  40e772:	int    0x18
  40e774:	cli    
  40e775:	(bad)  
  40e776:	jle    0x40e788
  40e778:	mov    DWORD PTR [esi],ebp
  40e77a:	jg     0x40e726
  40e77c:	sbb    DWORD PTR [ecx],0x7a371cc6
  40e782:	inc    eax
  40e783:	adc    eax,DWORD PTR [esi-0x4a]
  40e786:	mov    ?,WORD PTR [edx-0x70]
  40e789:	ss mov eax,0xcc40ccf6
  40e78f:	inc    edi
  40e790:	scas   eax,DWORD PTR es:[edi]
  40e791:	sbb    eax,eax
  40e793:	daa    
  40e794:	push   0xffffffaf
  40e796:	cmc    
  40e797:	call   0x9ff7:0x1db012f6
  40e79e:	pop    ebp
  40e79f:	jp     0x40e7a6
  40e7a1:	pop    edx
  40e7a2:	add    dh,dh
  40e7a4:	push   edx
  40e7a5:	call   DWORD PTR [edx-0x30d4a97c]
  40e7ab:	mov    ch,0xb9
  40e7ad:	xor    bh,BYTE PTR [eax+0x47a935ac]
  40e7b3:	out    0xf1,eax
  40e7b5:	adc    BYTE PTR [ebp+0x8],dl
  40e7b8:	pop    ds
  40e7b9:	cs aaa 
  40e7bb:	cmp    ah,0xc2
  40e7be:	cwde   
  40e7bf:	sbb    eax,esp
  40e7c1:	ds daa 
  40e7c3:	into   
  40e7c4:	mov    ebp,0xf79eac14
  40e7c9:	cmp    eax,0xed003976
  40e7ce:	outs   dx,BYTE PTR ds:[esi]
  40e7cf:	xor    eax,0xa0d0aab5
  40e7d4:	and    al,0x39
  40e7d6:	(bad)  
  40e7d7:	clc    
  40e7d8:	xlat   BYTE PTR ds:[ebx]
  40e7d9:	sbb    ebp,ebp
  40e7db:	ret    0x1762
  40e7de:	jp     0x40e773
  40e7e0:	add    eax,0xdb2193cc
  40e7e5:	test   BYTE PTR [ebp-0xf],dh
  40e7e8:	jmp    0x40e76a
  40e7ea:	(bad)  
  40e7eb:	cs pop edi
  40e7ed:	cld    
  40e7ee:	ud1    esp,DWORD PTR [edi+0x2df19690]
  40e7f5:	and    eax,0xa6ae8b63
  40e7fa:	mov    esi,0x8dcd222f
  40e7ff:	cdq    
  40e800:	mov    ds:0x91554a13,eax
  40e805:	xchg   ecx,eax
  40e806:	sbb    ebp,DWORD PTR [edx-0x64]
  40e809:	pop    esi
  40e80a:	and    DWORD PTR [eax],eax
  40e80c:	inc    ecx
  40e80d:	das    
  40e80e:	xchg   edi,eax
  40e80f:	sti    
  40e810:	repnz push 0xc6f539cc
  40e816:	mov    dh,0xd9
  40e818:	cwde   
  40e819:	add    ecx,DWORD PTR [ebp-0x47]
  40e81c:	adc    bh,al
  40e81e:	cmp    al,0x44
  40e820:	test   al,0xfb
  40e822:	bound  esp,QWORD PTR [edi+0x5a8312b3]
  40e828:	cli    
  40e829:	pop    ebp
  40e82a:	loop   0x40e884
  40e82c:	leave  
  40e82d:	cmp    al,ah
  40e82f:	repnz dec ebp
  40e831:	cmp    BYTE PTR [ebp-0x645421ac],0x67
  40e838:	bswap  esp
  40e83a:	in     al,dx
  40e83b:	(bad)  
  40e83c:	out    dx,eax
  40e83d:	int3   
  40e83e:	and    eax,0xc0df77e8
  40e843:	xchg   ebx,eax
  40e844:	xor    ecx,DWORD PTR [ecx]
  40e846:	inc    ebx
  40e847:	faddp  st(1),st
  40e849:	xchg   esp,eax
  40e84a:	pop    ecx
  40e84b:	sub    cl,ch
  40e84d:	cs cs cli 
  40e850:	and    eax,0xc858d123
  40e855:	aaa    
  40e856:	sub    al,0x4c
  40e858:	inc    esi
  40e859:	pop    esp
  40e85a:	ret    
  40e85b:	ja     0x40e81c
  40e85d:	outs   dx,DWORD PTR ds:[esi]
  40e85e:	xchg   DWORD PTR [ebp-0x298709f5],esp
  40e864:	out    0xec,eax
  40e866:	inc    ecx
  40e867:	jno    0x40e810
  40e869:	loop   0x40e89a
  40e86b:	arpl   WORD PTR [edi+0x4b],cx
  40e86e:	jp     0x40e83d
  40e870:	hlt    
  40e871:	sbb    al,0x2d
  40e873:	push   0x8
  40e875:	pop    edx
  40e876:	fwait
  40e877:	adc    edi,edx
  40e879:	in     eax,0xb2
  40e87b:	popf   
  40e87c:	add    BYTE PTR [edx+esi*8],ah
  40e87f:	dec    ebx
  40e880:	rcr    DWORD PTR [ebp-0x5c88217e],cl
  40e886:	stc    
  40e887:	inc    edx
  40e888:	ins    DWORD PTR es:[edi],dx
  40e889:	fst    QWORD PTR [ecx]
  40e88b:	ror    edx,1
  40e88d:	cs add al,0xff
  40e890:	test   edx,ecx
  40e892:	xchg   edi,eax
  40e893:	inc    eax
  40e894:	aad    0xc1
  40e896:	enter  0xfc25,0x15
  40e89a:	ds sub al,0xfa
  40e89d:	bound  ebp,QWORD PTR [esi]
  40e89f:	(bad)  
  40e8a0:	lods   al,BYTE PTR ds:[esi]
  40e8a1:	out    dx,eax
  40e8a2:	int3   
  40e8a3:	mov    ecx,0x786537d6
  40e8a8:	ins    DWORD PTR es:[edi],dx
  40e8a9:	push   edx
  40e8aa:	fsubr  DWORD PTR [edi]
  40e8ac:	aaa    
  40e8ad:	fcomp  st(7)
  40e8af:	mov    cl,0xf4
  40e8b1:	rcr    BYTE PTR [edi+0x2e],cl
  40e8b4:	leave  
  40e8b5:	in     eax,0x41
  40e8b7:	cld    
  40e8b8:	mov    ebp,0xe73e0c15
  40e8bd:	pop    esi
  40e8be:	outs   dx,DWORD PTR ds:[esi]
  40e8bf:	iret   
  40e8c0:	pop    esi
  40e8c1:	cs hlt 
  40e8c3:	or     al,0xc4
  40e8c5:	pop    eax
  40e8c6:	pop    ss
  40e8c7:	cld    
  40e8c8:	cld    
  40e8c9:	mov    esp,0xb6391d46
  40e8ce:	dec    edx
  40e8cf:	rol    BYTE PTR [ebp-0x4d3e938],cl
  40e8d5:	aad    0x4b
  40e8d7:	push   0xffffffc5
  40e8d9:	aad    0xda
  40e8db:	and    DWORD PTR [esi-0x5dbe9f0c],edx
  40e8e1:	aam    0x9e
  40e8e3:	sub    al,0x85
  40e8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8e6:	retf   0x71be
  40e8e9:	cdq    
  40e8ea:	int3   
  40e8eb:	jp     0x40e8b0
  40e8ed:	adc    ecx,DWORD PTR [ecx+0x4c47f6c3]
  40e8f3:	fidiv  DWORD PTR [edx+0x736fb756]
  40e8f9:	xor    eax,0x1473e28f
  40e8fe:	xchg   edi,eax
  40e8ff:	stc    
  40e900:	xor    eax,0xabac02ac
  40e905:	popf   
  40e906:	dec    esp
  40e907:	adc    eax,0xc8004ea4
  40e90c:	popa   
  40e90d:	sub    bh,BYTE PTR [esi]
  40e90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e910:	pop    ds
  40e911:	push   esp
  40e912:	and    eax,0x7a59cefb
  40e917:	mov    ah,0xb1
  40e919:	loopne 0x40e8f9
  40e91b:	adc    al,dl
  40e91d:	xchg   DWORD PTR [edx],ebx
  40e91f:	fcmovb st,st(6)
  40e921:	cmp    eax,0x6bea0488
  40e926:	adc    eax,0x3776bac1
  40e92b:	retf   0xf381
  40e92e:	mul    DWORD PTR [edi+0x2b]
  40e931:	and    BYTE PTR [ecx+0x38],0x4f
  40e935:	and    eax,DWORD PTR [ebx+0x2f]
  40e938:	sbb    BYTE PTR [eax-0x71dae155],ah
  40e93e:	mov    edx,0xc6036d53
  40e943:	jnp    0x40e9a1
  40e945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e946:	maskmovq mm0,(bad)
  40e947:	test   DWORD PTR [ebx],0xa12d8792
  40e94d:	fdivr  st(0),st
  40e94f:	add    al,bh
  40e951:	or     eax,0x73d5065c
  40e956:	pop    ds
  40e957:	push   esi
  40e958:	pop    ecx
  40e959:	aad    0xf2
  40e95b:	int3   
  40e95c:	and    DWORD PTR [edx-0x1c],ebx
  40e95f:	jbe    0x40e917
  40e961:	leave  
  40e962:	mov    esp,0x43329a64
  40e967:	add    DWORD PTR ds:0xdc4d71b7,ecx
  40e96d:	ret    0x72bf
  40e970:	outs   dx,BYTE PTR ds:[esi]
  40e971:	xor    edx,ebx
  40e973:	je     0x40e98d
  40e975:	scas   al,BYTE PTR es:[edi]
  40e976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e977:	call   DWORD PTR [ebx+esi*8-0xf]
  40e97b:	pop    eax
  40e97c:	test   al,0xb9
  40e97e:	push   esi
  40e97f:	ss aad 0x75
  40e982:	outs   dx,BYTE PTR ds:[esi]
  40e983:	mov    esp,0xed13b067
  40e988:	ret    0x7681
  40e98b:	fdecstp 
  40e98d:	pop    ds
  40e98e:	sub    DWORD PTR [eax+0x6af35afd],0x5edc7a22
  40e998:	xlat   BYTE PTR ds:[ebx]
  40e999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e99a:	into   
  40e99b:	pop    ebx
  40e99c:	repnz lds ecx,FWORD PTR [ebp+0x1f74c22b]
  40e9a3:	sbb    al,0x59
  40e9a5:	push   eax
  40e9a6:	jo     0x40ea0c
  40e9a8:	cld    
  40e9a9:	data16 fcom DWORD PTR [edi]
  40e9ac:	(bad)  
  40e9ad:	jnp    0x40e981
  40e9af:	and    BYTE PTR cs:[edx-0x3d],ch
  40e9b3:	fisttp QWORD PTR [ebp+0x4f2f8d6a]
  40e9b9:	and    ah,bl
  40e9bb:	adc    esp,DWORD PTR [ebp+edx*1-0x5446b92d]
  40e9c2:	push   0x263ccb47
  40e9c7:	sbb    eax,0x63a1af51
  40e9cc:	and    ebx,eax
  40e9ce:	sbb    DWORD PTR [edi+0xf],ebp
  40e9d1:	dec    eax
  40e9d2:	stos   BYTE PTR es:[edi],al
  40e9d3:	es mov fs,ecx
  40e9d6:	call   0xcf4a680f
  40e9db:	(bad)  
  40e9dc:	je     0x40e9e2
  40e9de:	loope  0x40e99f
  40e9e0:	mov    ds:0xb72217a,eax
  40e9e5:	cli    
  40e9e6:	dec    eax
  40e9e7:	xlat   BYTE PTR ds:[ebx]
  40e9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9e9:	nop/reserved BYTE PTR [ebx-0x9]
  40e9ed:	adc    ebx,DWORD PTR [eax]
  40e9ef:	test   esp,ebp
  40e9f1:	test   BYTE PTR [eax+0x5ece5986],0x63
  40e9f8:	inc    ecx
  40e9f9:	test   DWORD PTR [edi-0x53c74b2c],esi
  40e9ff:	xchg   esp,eax
  40ea00:	mov    ch,0xc3
  40ea02:	add    edi,eax
  40ea04:	ins    BYTE PTR es:[edi],dx
  40ea05:	fild   DWORD PTR [edx+eax*2+0x48]
  40ea09:	arpl   di,sp
  40ea0b:	stos   BYTE PTR es:[edi],al
  40ea0c:	and    al,0xed
  40ea0e:	mov    DWORD PTR [ebp+0x66],ebp
  40ea11:	inc    ecx
  40ea12:	jmp    0x40ea55
  40ea14:	inc    eax
  40ea15:	xor    dl,cl
  40ea17:	imul   ecx,DWORD PTR [ebp-0x21ca50f4],0xfa644ae0
  40ea21:	push   ss
  40ea22:	fldenv [ebp-0x3c]
  40ea25:	gs mov eax,0xd6a4b024
  40ea2b:	lock pop ds
  40ea2d:	xor    DWORD PTR [edx],ebx
  40ea2f:	jmp    0x40e9e1
  40ea31:	pusha  
  40ea32:	cli    
  40ea33:	dec    si
  40ea35:	sar    BYTE PTR [ebx+ebp*1+0x4845644b],0x2a
  40ea3d:	adc    DWORD PTR [ebx],edi
  40ea3f:	sbb    ebp,ecx
  40ea41:	std    
  40ea42:	clc    
  40ea43:	dec    ebp
  40ea44:	pop    ebp
  40ea45:	push   0x297be2ff
  40ea4a:	popf   
  40ea4b:	or     BYTE PTR [ebp-0x17],0xd0
  40ea4f:	(bad)  
  40ea50:	rol    DWORD PTR [ebx],cl
  40ea52:	cmp    esi,ebp
  40ea54:	jg     0x40ea4a
  40ea56:	sub    eax,ebp
  40ea58:	cmp    DWORD PTR [ecx-0x7b637c7e],0x34
  40ea5f:	push   cs
  40ea60:	fild   QWORD PTR [ebx+0x358bae0d]
  40ea66:	dec    edx
  40ea67:	lods   eax,DWORD PTR ds:[esi]
  40ea68:	lock inc ebp
  40ea6a:	loope  0x40e9fa
  40ea6c:	out    0xb4,al
  40ea6e:	arpl   ax,sp
  40ea70:	pop    ecx
  40ea71:	neg    BYTE PTR [ebx]
  40ea73:	push   ecx
  40ea74:	test   BYTE PTR [edx],bh
  40ea76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea77:	sar    BYTE PTR ds:0x4e675bad,0xf3
  40ea7e:	(bad)  
  40ea7f:	jge    0x40ea1d
  40ea81:	in     eax,0x79
  40ea83:	out    0xab,al
  40ea85:	test   al,0x59
  40ea87:	adc    eax,0xf1e87c11
  40ea8c:	fadd   DWORD PTR ds:0x17f0c10
  40ea92:	jae    0x40ea4b
  40ea94:	fistp  DWORD PTR [esi-0x53ce782a]
  40ea9a:	in     eax,0x8e
  40ea9c:	sahf   
  40ea9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea9f:	shl    BYTE PTR [ebx+0x3ec92916],1
  40eaa5:	int    0x2e
  40eaa7:	call   0xe559:0x8c749b82
  40eaae:	dec    edx
  40eaaf:	adc    bl,BYTE PTR [ecx-0x50]
  40eab2:	cmp    esi,DWORD PTR [ebx+0x5c]
  40eab5:	stos   BYTE PTR es:[edi],al
  40eab6:	pop    esi
  40eab7:	sbb    BYTE PTR [ebx-0x4eaa238e],0x30
  40eabe:	fdivr  QWORD PTR [bx+di]
  40eac1:	enter  0x6aa8,0xe7
  40eac5:	and    al,0x95
  40eac7:	test   ecx,esi
  40eac9:	pop    DWORD PTR [edx-0x68c9e7b1]
  40eacf:	es aaa 
  40ead1:	pop    es
  40ead2:	int3   
  40ead3:	xor    BYTE PTR [ebp+0x70],bh
  40ead6:	dec    ebx
  40ead7:	pop    ss
  40ead8:	add    eax,0x849d587e
  40eadd:	ins    DWORD PTR es:[edi],dx
  40eade:	sbb    eax,0x928e3cd1
  40eae3:	cs inc ebp
  40eae5:	out    dx,eax
  40eae6:	hlt    
  40eae7:	jp     0x40ead2
  40eae9:	ss mov ah,0xda
  40eaec:	mov    edi,0x9dc6f5b0
  40eaf1:	inc    esi
  40eaf2:	retf   
  40eaf3:	adc    dl,al
  40eaf5:	adc    edi,DWORD PTR [edi-0x57]
  40eaf8:	cmp    cl,BYTE PTR [edx]
  40eafa:	sbb    ecx,DWORD PTR [ebp+0x55c07bae]
  40eb00:	pushf  
  40eb01:	stc    
  40eb02:	inc    ebx
  40eb03:	push   0xec9c1f2c
  40eb08:	or     dh,BYTE PTR [ecx-0x49b4dc29]
  40eb0e:	pop    esi
  40eb0f:	add    eax,0x4f4bd2b1
  40eb14:	ret    0x317c
  40eb17:	ficomp DWORD PTR [ecx+0x74]
  40eb1a:	repnz mov fs:0x105f74f7,eax
  40eb21:	or     ah,0xf1
  40eb24:	jp     0x40eb95
  40eb26:	add    eax,0x7caf4fd8
  40eb2b:	aam    0x34
  40eb2d:	mov    edi,0xfe64b380
  40eb32:	mov    BYTE PTR [ebp-0x3eab9b7d],dh
  40eb38:	jge    0x40eb20
  40eb3a:	cld    
  40eb3b:	mov    ch,0x76
  40eb3d:	imul   eax,DWORD PTR [eax-0x80],0x4c
  40eb41:	pop    edx
  40eb42:	popf   
  40eb43:	je     0x40eacd
  40eb45:	cli    
  40eb46:	or     DWORD PTR [ecx+0x5a],ebp
  40eb49:	push   0x1a
  40eb4b:	hlt    
  40eb4c:	xor    ecx,DWORD PTR [ecx-0xe]
  40eb4f:	int    0x5c
  40eb51:	push   ebp
  40eb52:	bound  esp,QWORD PTR [ebx+esi*1]
  40eb55:	lock pop ds
  40eb57:	and    ebp,ebx
  40eb59:	and    ebp,DWORD PTR [ecx]
  40eb5b:	dec    edi
  40eb5d:	and    al,0x7d
  40eb5f:	jge    0x40eba0
  40eb61:	xor    bh,BYTE PTR [ebp+0x40]
  40eb64:	cld    
  40eb65:	mov    eax,fs
  40eb67:	add    edi,ebp
  40eb69:	dec    esi
  40eb6a:	fiadd  DWORD PTR [ecx+0x30]
  40eb6d:	test   DWORD PTR [ecx-0x57424d9f],edi
  40eb73:	xchg   esp,eax
  40eb74:	mov    bh,0xdc
  40eb76:	outs   dx,DWORD PTR ds:[esi]
  40eb77:	lods   al,BYTE PTR ds:[esi]
  40eb78:	xor    BYTE PTR [ebx-0x78],dh
  40eb7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb7c:	push   ebx
  40eb7d:	test   DWORD PTR [ecx-0x2b0a0cee],eax
  40eb83:	imul   esp,DWORD PTR [ebx],0xe
  40eb86:	test   DWORD PTR [eax],eax
  40eb88:	push   0x4cd8849d
  40eb8d:	add    eax,0x1ab03728
  40eb92:	adc    eax,0x1b79bd68
  40eb97:	out    0x45,eax
  40eb99:	mov    edi,0xaedd5e11
  40eb9e:	in     eax,0x4f
  40eba0:	cwde   
  40eba1:	cmp    DWORD PTR [edx+0x50],0x48
  40eba5:	xor    DWORD PTR [ebp+ebp*2+0x5941c2a1],0xdb614b15
  40ebb0:	call   0x9f8:0x32b86ae1
  40ebb7:	mov    cl,BYTE PTR [ebx+edi*2]
  40ebba:	aaa    
  40ebbb:	jmp    0xb0e2:0x46a84b73
  40ebc2:	jo     0x40ec24
  40ebc4:	add    edx,DWORD PTR [esi-0x5e859c2c]
  40ebca:	inc    ecx
  40ebcb:	stos   BYTE PTR es:[edi],al
  40ebcc:	jecxz  0x40ebfe
  40ebce:	and    BYTE PTR [edx+0x54],dl
  40ebd1:	mov    edx,0x65127a95
  40ebd6:	es mov esp,0x95b4e7c2
  40ebdc:	mov    ebp,0x85283185
  40ebe1:	cs pop es
  40ebe3:	leave  
  40ebe4:	dec    edi
  40ebe5:	ret    
  40ebe6:	pop    ds
  40ebe7:	xchg   ebp,eax
  40ebe8:	dec    eax
  40ebe9:	bound  esi,QWORD PTR [esi-0x68]
  40ebec:	test   eax,0xee601dba
  40ebf1:	pop    esi
  40ebf2:	es and eax,0x96e26f5f
  40ebf8:	mov    al,0x15
  40ebfa:	and    bh,BYTE PTR [esi-0x15]
  40ebfd:	unpckhps xmm1,XMMWORD PTR [edi+ebx*1-0x825136b]
  40ec05:	jb     0x40ec50
  40ec07:	lods   al,BYTE PTR ds:[esi]
  40ec08:	retf   
  40ec09:	into   
  40ec0a:	stc    
  40ec0b:	dec    eax
  40ec0c:	mov    ebx,0x11174293
  40ec11:	xor    bl,bh
  40ec13:	xchg   DWORD PTR [ebp+0x2f],eax
  40ec16:	and    ch,BYTE PTR [edx]
  40ec18:	dec    edi
  40ec19:	outs   dx,BYTE PTR ds:[esi]
  40ec1a:	adc    ch,bh
  40ec1c:	daa    
  40ec1d:	pop    ss
  40ec1e:	mov    bl,bh
  40ec20:	mov    eax,ds:0x89ef9d0d
  40ec25:	dec    esi
  40ec26:	jns    0x40ec46
  40ec28:	mov    edx,0x680ed19b
  40ec2d:	shr    DWORD PTR [edx-0x53],cl
  40ec30:	call   0xd958e2d3
  40ec35:	xchg   edi,eax
  40ec36:	sbb    edi,DWORD PTR [ecx]
  40ec38:	and    al,0xa2
  40ec3a:	loop   0x40ec70
  40ec3c:	mov    bh,0x86
  40ec3e:	(bad)  
  40ec3f:	das    
  40ec40:	loop   0x40ec12
  40ec42:	cli    
  40ec43:	dec    ebx
  40ec44:	outs   dx,BYTE PTR ds:[esi]
  40ec45:	jmp    0x80cf9536
  40ec4a:	in     eax,0x59
  40ec4c:	int3   
  40ec4d:	xor    ecx,edx
  40ec4f:	add    ch,BYTE PTR [edx-0x20]
  40ec52:	add    ah,bl
  40ec54:	and    eax,0x4eca7f30
  40ec59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec5a:	aam    0x3c
  40ec5c:	push   edi
  40ec5d:	fsub   DWORD PTR [edx-0x1]
  40ec60:	dec    dh
  40ec62:	push   edi
  40ec63:	push   cs
  40ec64:	xor    al,0x58
  40ec66:	push   ebx
  40ec67:	dec    edx
  40ec68:	push   edi
  40ec69:	or     eax,0x21fb1243
  40ec6e:	(bad)  
  40ec6f:	jnp    0x40ec2f
  40ec71:	test   al,0x4d
  40ec73:	ret    0xbc0a
  40ec76:	and    al,0x7f
  40ec78:	lahf   
  40ec79:	sahf   
  40ec7a:	inc    ebx
  40ec7b:	pop    ds
  40ec7c:	xchg   edx,eax
  40ec7d:	pushf  
  40ec7e:	dec    edi
  40ec7f:	dec    ebx
  40ec80:	cmp    DWORD PTR [ebp-0x2b],edi
  40ec83:	test   al,0xd5
  40ec85:	aas    
  40ec86:	jo     0x40ec52
  40ec88:	cmp    bh,dh
  40ec8a:	push   ds
  40ec8b:	(bad)  
  40ec8d:	gs pop edx
  40ec8f:	dec    edx
  40ec90:	loop   0x40ecb9
  40ec92:	or     al,bh
  40ec94:	clc    
  40ec95:	mov    WORD PTR [ebx-0x39],gs
  40ec98:	popf   
  40ec99:	lea    edi,[esi-0x5a87fcfb]
  40ec9f:	mov    edi,0xc7fab190
  40eca4:	mov    ecx,0x32972e51
  40eca9:	fcmovnu st,st(3)
  40ecab:	cmp    eax,0x91b83437
  40ecb0:	ins    BYTE PTR es:[edi],dx
  40ecb1:	xor    DWORD PTR [edi+edx*8-0xdb71c8b],0xffffffe8
  40ecb9:	mov    edx,DWORD PTR [edi]
  40ecbb:	dec    ecx
  40ecbc:	fs int3 
  40ecbe:	mov    al,0x4
  40ecc0:	pop    ebx
  40ecc1:	cmc    
  40ecc2:	sub    bl,BYTE PTR [edx]
  40ecc4:	(bad)  
  40ecc5:	dec    edi
  40ecc6:	inc    edi
  40ecc7:	popf   
  40ecc8:	fiadd  DWORD PTR [edi+edx*4-0x2e8aa0d3]
  40eccf:	shl    DWORD PTR ds:0xd49256b9,1
  40ecd5:	mov    WORD PTR [ecx+0x2be91c40],ss
  40ecdb:	ficomp DWORD PTR [edx+0x1a]
  40ecde:	xchg   esp,eax
  40ecdf:	inc    ecx
  40ece0:	mov    al,0xf
  40ece2:	mov    ds,WORD PTR [esi+0x1661ced0]
  40ece8:	icebp  
  40ece9:	imul   eax,DWORD PTR [eax+0x122e9942],0xffffffc9
  40ecf0:	imul   edi,DWORD PTR [ecx-0x3fa4f955],0x3a9e2813
  40ecfa:	xor    dh,al
  40ecfc:	add    ch,ch
  40ecfe:	pop    es
  40ecff:	aas    
  40ed00:	cmp    eax,0x37303f22
  40ed05:	push   ecx
  40ed06:	test   edi,0x6925a140
  40ed0c:	pop    ds
  40ed0d:	pop    ds
  40ed0e:	pop    es
  40ed0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed10:	ins    BYTE PTR es:[edi],dx
  40ed11:	outs   dx,BYTE PTR ds:[esi]
  40ed12:	dec    ebp
  40ed13:	jp     0x40ed72
  40ed15:	int3   
  40ed16:	sub    al,0x66
  40ed18:	fld    st(3)
  40ed1a:	push   cs
  40ed1b:	and    eax,0xf52ee46e
  40ed20:	sbb    esi,ecx
  40ed22:	cli    
  40ed23:	push   esi
  40ed24:	or     eax,edi
  40ed26:	lods   eax,DWORD PTR ds:[esi]
  40ed27:	clc    
  40ed28:	mov    edi,DWORD PTR [edx-0x70ce506f]
  40ed2e:	rol    BYTE PTR [esi+0x2],cl
  40ed31:	cmp    eax,0xc5ec81a5
  40ed36:	retf   
  40ed37:	stos   BYTE PTR es:[edi],al
  40ed38:	dec    ebx
  40ed39:	sub    cl,bh
  40ed3b:	dec    ecx
  40ed3c:	and    al,0xb
  40ed3e:	pushf  
  40ed3f:	pop    ds
  40ed40:	jmp    FWORD PTR [ecx-0xe]
  40ed43:	sahf   
  40ed44:	jle    0x40ed67
  40ed46:	and    dh,BYTE PTR [ebx]
  40ed48:	mov    dl,0x25
  40ed4a:	jg     0x40ed3a
  40ed4c:	mov    WORD PTR [ecx-0x58],gs
  40ed4f:	xchg   ebp,eax
  40ed50:	push   ebp
  40ed51:	sbb    ecx,DWORD PTR [ecx-0x47]
  40ed54:	dec    esp
  40ed55:	retf   
  40ed56:	inc    esp
  40ed57:	inc    edx
  40ed58:	and    eax,0xfdbfd89d
  40ed5d:	push   ebp
  40ed5e:	or     al,0x60
  40ed60:	xor    al,0x9
  40ed63:	or     dl,ah
  40ed65:	and    BYTE PTR [ebp-0x6d],bl
  40ed68:	dec    eax
  40ed69:	bound  edx,QWORD PTR [ebp-0x787b3f7d]
  40ed6f:	jb     0x40ed25
  40ed71:	mov    edx,0x5cc18593
  40ed76:	sub    esp,DWORD PTR [edi]
  40ed78:	gs out dx,eax
  40ed7a:	jne    0x40ed0d
  40ed7c:	fmul   DWORD PTR [esi-0x26]
  40ed7f:	dec    esi
  40ed80:	out    dx,al
  40ed81:	mov    ds:0x31964ae4,al
  40ed86:	mov    ebx,gs
  40ed88:	sbb    al,0x4b
  40ed8a:	jp     0x40edac
  40ed8c:	jl     0x40ee03
  40ed8e:	push   edx
  40ed8f:	fistp  WORD PTR [ebp+0x6e]
  40ed92:	push   ss
  40ed93:	scas   eax,DWORD PTR es:[edi]
  40ed94:	xor    eax,0x6ee2f759
  40ed99:	nop
  40ed9a:	nop
  40ed9b:	outs   dx,BYTE PTR ds:[esi]
  40ed9c:	push   es
  40ed9d:	push   esp
  40ed9e:	mov    cl,0x4f
  40eda0:	xchg   BYTE PTR [eax],bl
  40eda2:	jbe    0x40edd2
  40eda4:	cmp    BYTE PTR [edi+0x608d8a3d],ah
  40edaa:	outs   dx,DWORD PTR es:[esi]
  40edac:	out    0xe0,al
  40edae:	and    DWORD PTR [edi+eiz*1],0x5edc38bb
  40edb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edb6:	adc    ecx,DWORD PTR [ebx+eiz*4]
  40edb9:	push   es
  40edba:	fs sti 
  40edbc:	inc    esp
  40edbd:	push   esp
  40edbe:	arpl   WORD PTR [esi+0x60],bp
  40edc1:	adc    al,0x70
  40edc3:	inc    ebx
  40edc4:	fimul  DWORD PTR [ebp-0x1c1705f8]
  40edca:	(bad)  
  40edcc:	xchg   ebx,eax
  40edcd:	hlt    
  40edce:	(bad)  [bp+si+0x2a]
  40edd2:	ret    
  40edd3:	cli    
  40edd4:	mov    cl,0x45
  40edd6:	mov    al,0x9
  40edd8:	mov    cl,0xa3
  40edda:	push   eax
  40eddb:	mov    ebx,0x518d3441
  40ede0:	mov    eax,0x23c60713
  40ede5:	les    edi,FWORD PTR [ebx+0x5a]
  40ede8:	push   eax
  40ede9:	(bad)  
  40edea:	adc    eax,0xa892352d
  40edef:	xor    DWORD PTR es:[edi+eax*2],edx
  40edf3:	sub    eax,0x75e47b96
  40edf8:	jmp    0x5555a4ce
  40edfd:	and    ch,bl
  40edff:	dec    si
  40ee01:	in     al,dx
  40ee02:	push   ss
  40ee03:	and    eax,0x1f
  40ee06:	or     BYTE PTR [edx],cl
  40ee08:	xchg   BYTE PTR [edi],ah
  40ee0a:	jnp    0x40ee42
  40ee0c:	xor    DWORD PTR [esp+eax*4+0x1],0x2d
  40ee11:	mov    cs:0xc2d0946d,eax
  40ee17:	xchg   BYTE PTR [ebx-0x14ba305b],dh
  40ee1d:	sub    DWORD PTR [ecx],ebx
  40ee1f:	mov    ch,0xa8
  40ee21:	adc    al,0xad
  40ee23:	jnp    0x40ee76
  40ee25:	stos   DWORD PTR es:[edi],eax
  40ee26:	repnz push 0x74
  40ee29:	repnz pop edx
  40ee2c:	pushf  
  40ee2d:	loope  0x40edef
  40ee2f:	or     edx,ebp
  40ee31:	pop    ds
  40ee32:	fdiv   QWORD PTR [edi+0x9201582]
  40ee38:	cwde   
  40ee39:	cmp    DWORD PTR [ecx+esi*4],esi
  40ee3c:	mov    ebp,esp
  40ee3e:	popf   
  40ee3f:	xor    esi,DWORD PTR [esi]
  40ee41:	cmp    BYTE PTR [eax],al
  40ee43:	jae    0x40ede1
  40ee45:	inc    ebx
  40ee46:	lods   al,BYTE PTR ds:[esi]
  40ee47:	pushf  
  40ee48:	pop    esp
  40ee49:	jmp    0x40eea1
  40ee4b:	scas   al,BYTE PTR es:[edi]
  40ee4c:	pop    ebp
  40ee4d:	fcom   QWORD PTR [ebp+0xc]
  40ee50:	int3   
  40ee51:	ror    BYTE PTR [ebp-0x34cb92a8],cl
  40ee57:	pop    ebx
  40ee58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee59:	in     al,dx
  40ee5a:	inc    edx
  40ee5b:	inc    esi
  40ee5c:	mov    dh,0xa7
  40ee5e:	or     dh,BYTE PTR [edx]
  40ee60:	inc    esp
  40ee61:	cmp    al,0x19
  40ee63:	inc    edi
  40ee64:	popa   
  40ee65:	dec    ecx
  40ee66:	es jmp 0x5517:0x3ddabdff
  40ee6e:	scas   al,BYTE PTR es:[edi]
  40ee6f:	loop   0x40ee22
  40ee71:	ins    DWORD PTR es:[edi],dx
  40ee72:	mov    ebx,esi
  40ee74:	test   al,0x20
  40ee76:	mov    eax,ds:0xb3eb589b
  40ee7b:	or     ebp,DWORD PTR [ebp-0xc]
  40ee7e:	inc    ebp
  40ee7f:	jp     0x40ee65
  40ee81:	adc    eax,0xa8c9710a
  40ee86:	sub    DWORD PTR [eax+0x24],edx
  40ee89:	inc    eax
  40ee8a:	lods   eax,DWORD PTR ds:[esi]
  40ee8b:	sbb    ch,BYTE PTR [esi]
  40ee8d:	jecxz  0x40ee61
  40ee8f:	pushf  
  40ee90:	nop
  40ee91:	out    0x77,eax
  40ee93:	add    eax,0x1c8b8772
  40ee98:	outs   dx,BYTE PTR ds:[esi]
  40ee99:	push   ebp
  40ee9a:	jl     0x40ef09
  40ee9c:	mov    ds:0x60675bb0,al
  40eea1:	and    DWORD PTR [ebp-0x19],0xffffffb5
  40eea5:	cld    
  40eea6:	inc    ebp
  40eea7:	xlat   BYTE PTR ds:[ebx]
  40eea8:	xor    DWORD PTR [ebp-0x55],esp
  40eeab:	adc    ecx,esp
  40eead:	fdivr  QWORD PTR [ecx-0x42ba228c]
  40eeb3:	cmp    bh,ch
  40eeb5:	gs rcr DWORD PTR es:[esi+0x387e7d5e],cl
  40eebd:	xor    ebp,DWORD PTR ds:0xbe0b21c5
  40eec3:	out    0x27,al
  40eec5:	push   ebp
  40eec6:	xchg   ebx,eax
  40eec7:	cmp    al,0xd9
  40eec9:	and    eax,0xf4160e79
  40eece:	je     0x40eee2
  40eed0:	sub    eax,0x274654a1
  40eed5:	das    
  40eed6:	push   esi
  40eed7:	mov    cl,0x6f
  40eed9:	xchg   ebx,eax
  40eeda:	(bad)  
  40eedc:	jecxz  0x40ee78
  40eede:	ds mov al,0x59
  40eee1:	lods   al,BYTE PTR ds:[esi]
  40eee2:	mov    ecx,0xab8605b4
  40eee7:	mov    eax,esi
  40eee9:	jl     0x40ef42
  40eeeb:	mov    ?,edx
  40eeed:	and    DWORD PTR [ebp-0x1],0x6f
  40eef1:	iret   
  40eef2:	scas   al,BYTE PTR es:[edi]
  40eef3:	inc    ebp
  40eef4:	mov    bh,0xc5
  40eef6:	dec    ebx
  40eef7:	and    bh,BYTE PTR [edx]
  40eef9:	sub    eax,0xbbdaa825
  40eefe:	or     esp,DWORD PTR [ecx]
  40ef00:	outs   dx,DWORD PTR ds:[esi]
  40ef01:	xchg   ebp,eax
  40ef02:	or     eax,0xb2a5225b
  40ef07:	sahf   
  40ef08:	pop    eax
  40ef09:	in     eax,0xb8
  40ef0b:	inc    esp
  40ef0c:	push   edi
  40ef0d:	mov    ds:0x54b8b195,al
  40ef12:	cmp    DWORD PTR [eax],eax
  40ef14:	mov    edx,0xa9e7782f
  40ef19:	push   cs
  40ef1a:	jo     0x40ef24
  40ef1c:	cdq    
  40ef1d:	inc    ebp
  40ef1e:	leave  
  40ef1f:	sbb    bh,dh
  40ef21:	stos   BYTE PTR es:[edi],al
  40ef22:	stos   BYTE PTR es:[edi],al
  40ef23:	dec    ecx
  40ef24:	pop    eax
  40ef25:	sub    DWORD PTR [edx],ebx
  40ef27:	fs test al,0xcb
  40ef2a:	dec    eax
  40ef2b:	(bad)  
  40ef2c:	ins    BYTE PTR es:[edi],dx
  40ef2d:	pop    edi
  40ef2e:	pop    esp
  40ef2f:	test   al,0xdb
  40ef31:	and    al,0x19
  40ef33:	xlat   BYTE PTR ds:[ebx]
  40ef34:	popa   
  40ef35:	(bad)  
  40ef36:	push   eax
  40ef37:	lea    ebp,[eax+0x4d]
  40ef3a:	push   DWORD PTR [esi+0x77]
  40ef3d:	clc    
  40ef3e:	or     al,0xf4
  40ef40:	dec    edx
  40ef41:	mov    ds:0x8d9c4645,al
  40ef46:	sti    
  40ef47:	or     DWORD PTR [esi],eax
  40ef49:	rcl    BYTE PTR [ecx+0x6b],1
  40ef4c:	fcomp  QWORD PTR [eax]
  40ef4e:	adc    al,BYTE PTR [ecx]
  40ef50:	and    edi,0x31697a2d
  40ef56:	sub    eax,0x93d96e4c
  40ef5b:	dec    ebp
  40ef5c:	pop    ecx
  40ef5d:	mov    eax,DWORD PTR [edx]
  40ef5f:	and    DWORD PTR [edx-0x7],esp
  40ef62:	mov    WORD PTR [ebx],?
  40ef64:	push   edx
  40ef65:	into   
  40ef66:	cmp    al,0x55
  40ef68:	lock push esi
  40ef6a:	clc    
  40ef6b:	shl    DWORD PTR [eax+0x7f],0xaa
  40ef6f:	cmp    eax,0xe48b1bbc
  40ef74:	das    
  40ef75:	and    DWORD PTR [esi-0x75d1cc69],ecx
  40ef7b:	pop    eax
  40ef7c:	fisubr DWORD PTR [ecx+0x4d]
  40ef7f:	mov    eax,ds:0xa6d23a37
  40ef84:	inc    eax
  40ef85:	in     eax,dx
  40ef86:	mov    bl,0xb4
  40ef88:	xor    ebp,DWORD PTR [ecx-0x36e65c94]
  40ef8e:	leave  
  40ef8f:	out    dx,al
  40ef90:	inc    esi
  40ef91:	jns    0x40ef5c
  40ef93:	and    BYTE PTR [edi+0x29],0x6f
  40ef97:	add    eax,0x8b86544e
  40ef9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef9d:	sub    BYTE PTR [edx-0x48],dh
  40efa0:	xchg   al,ch
  40efa2:	push   ecx
  40efa3:	pop    ss
  40efa4:	call   0xa8a67d36
  40efa9:	stos   DWORD PTR es:[edi],eax
  40efaa:	jns    0x40f013
  40efac:	pop    esp
  40efad:	inc    edi
  40efae:	stos   BYTE PTR es:[edi],al
  40efaf:	jmp    0x40efd8
  40efb1:	into   
  40efb2:	adc    bh,BYTE PTR [ebx+0x59c61cce]
  40efb8:	xor    eax,DWORD PTR [ecx+0xe]
  40efbb:	xor    edx,DWORD PTR [edx-0x4a736e18]
  40efc1:	call   0xa5f1:0x3096dbaf
  40efc8:	ins    BYTE PTR es:[edi],dx
  40efc9:	nop
  40efca:	out    dx,eax
  40efcb:	xor    BYTE PTR [edi-0x5e3110d2],bh
  40efd1:	shr    BYTE PTR [ebx-0x18],1
  40efd4:	add    ecx,DWORD PTR [ebx]
  40efd6:	cmp    DWORD PTR [ebp+0x32362552],esp
  40efdc:	fisubr DWORD PTR [ebp-0x47d9f0d8]
  40efe2:	or     al,0xae
  40efe4:	ror    BYTE PTR es:[ecx+0x5b1e3f64],cl
  40efeb:	inc    ecx
  40efec:	nop
  40efed:	cmp    dl,BYTE PTR [eax-0x11]
  40eff0:	inc    esi
  40eff1:	or     BYTE PTR [ecx-0x4b6e9222],bh
  40eff7:	xor    al,0xc9
  40eff9:	lods   al,BYTE PTR ds:[esi]
  40effa:	aad    0xa3
  40effc:	addr16 enter 0x4ac0,0x17
  40f001:	call   0x8c61:0x7a0016
  40f008:	js     0x40efc3
  40f00a:	mov    ch,0xee
  40f00c:	xor    eax,0xdf9e2829
  40f011:	cdq    
  40f012:	inc    ebx
  40f013:	les    ecx,FWORD PTR [edx-0x19]
  40f016:	jae    0x40f022
  40f018:	sti    
  40f019:	js     0x40f069
  40f01b:	dec    edi
  40f01c:	std    
  40f01d:	mov    edi,0x4a6b70cf
  40f022:	add    al,0x3
  40f024:	inc    esp
  40f025:	xor    BYTE PTR [eax-0x41d2e3ee],dh
  40f02b:	add    eax,0x6a42d717
  40f030:	push   edi
  40f031:	pushf  
  40f032:	xlat   BYTE PTR ds:[ebx]
  40f033:	mov    ds:0x47d96160,al
  40f038:	mov    ds:0xff9d1cce,eax
  40f03e:	jp     0x40f029
  40f040:	loope  0x40f080
  40f042:	inc    ecx
  40f043:	or     esi,edx
  40f045:	out    0x10,eax
  40f047:	add    DWORD PTR [eax+0xac62fd7],ebp
  40f04d:	pop    es
  40f04e:	call   FWORD PTR [ecx+0x5f8efc0b]
  40f054:	test   eax,0x5dfcc3e9
  40f059:	lods   al,BYTE PTR ds:[esi]
  40f05a:	push   eax
  40f05b:	inc    esi
  40f05c:	mov    DWORD PTR [edx],ebx
  40f05e:	pop    eax
  40f05f:	xor    DWORD PTR ds:0x15b084b8,edx
  40f065:	out    0xc0,al
  40f067:	fistp  QWORD PTR [esi+edi*2+0x755fa7af]
  40f06e:	pop    ds
  40f06f:	jmp    0x40f002
  40f071:	dec    edx
  40f072:	in     eax,0x88
  40f074:	jo     0x40f0e3
  40f076:	sub    BYTE PTR [ebp+edx*1+0x2],cl
  40f07a:	push   eax
  40f07b:	adc    bh,al
  40f07d:	retf   0x959
  40f080:	cmp    al,BYTE PTR [eax+0x54f20a55]
  40f086:	jp     0x40f067
  40f088:	popa   
  40f089:	neg    DWORD PTR [ebp+0x54]
  40f08c:	mov    ah,ch
  40f08e:	mov    edx,0xa7c1464b
  40f093:	mov    al,0x68
  40f095:	lods   al,BYTE PTR ds:[esi]
  40f096:	dec    eax
  40f097:	out    dx,al
  40f098:	cmp    al,0x4e
  40f09a:	call   FWORD PTR [ebx-0xc]
  40f09d:	icebp  
  40f09e:	mov    eax,ds:0xceb56cb2
  40f0a3:	lock xchg edx,eax
  40f0a5:	out    0x4a,al
  40f0a7:	dec    edi
  40f0a8:	jns    0x40f077
  40f0aa:	add    eax,0xa2304c8f
  40f0af:	or     dh,BYTE PTR [eax]
  40f0b1:	mov    edi,0x1dabf0d7
  40f0b6:	and    DWORD PTR [edx],eax
  40f0b8:	adc    al,BYTE PTR [edx]
  40f0ba:	mov    cl,0x66
  40f0bc:	dec    ebx
  40f0bd:	mov    al,ds:0x28912707
  40f0c2:	push   0x4b717de9
  40f0c7:	pop    edi
  40f0c8:	sub    ebx,DWORD PTR [edi-0x18702423]
  40f0ce:	xchg   DWORD PTR [ecx],esp
  40f0d0:	aas    
  40f0d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d2:	shr    BYTE PTR [ebp-0x40b667ac],1
  40f0d8:	sti    
  40f0d9:	int    0x5
  40f0db:	sbb    ch,al
  40f0dd:	imul   edx,esp,0x505ce653
  40f0e3:	xchg   DWORD PTR [edx-0x9],eax
  40f0e6:	ret    0x9124
  40f0e9:	loop   0x40f117
  40f0eb:	(bad)
  40f0ef:	add    DWORD PTR [ebx-0x38],esi
  40f0f2:	xchg   esp,eax
  40f0f3:	adc    esi,DWORD PTR [ecx-0x15a3af2d]
  40f0f9:	or     al,0x27
  40f0fb:	push   ebx
  40f0fc:	pop    esi
  40f0fd:	jp     0x40f112
  40f0ff:	inc    edi
  40f100:	fld    QWORD PTR [edx+0x2076eff5]
  40f106:	lods   al,BYTE PTR ds:[esi]
  40f107:	sub    al,0x5d
  40f109:	adc    bl,BYTE PTR [edx-0x172be3cc]
  40f10f:	imul   ecx,DWORD PTR [ebp+0x3336d993],0xffffffdb
  40f116:	sub    eax,0x302c8ff6
  40f11b:	push   cs
  40f11c:	and    dh,dh
  40f11e:	adc    DWORD PTR [ecx-0x74e6ff5],ebx
  40f124:	call   0x9a546088
  40f129:	jnp    0x40f106
  40f12b:	inc    esi
  40f12c:	or     eax,0xa975babf
  40f131:	test   al,0xd4
  40f133:	sub    DWORD PTR [esi+0x5621817d],ebp
  40f139:	add    ecx,DWORD PTR [esi+ebx*2+0x24]
  40f13d:	fisub  WORD PTR [edi+0x304e5eb3]
  40f143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f144:	cmp    DWORD PTR [ebp+0x24f467e8],edx
  40f14a:	gs adc al,0x40
  40f14d:	pop    es
  40f14e:	xlat   BYTE PTR ds:[ebx]
  40f14f:	mov    ebx,0x70106e7a
  40f154:	pop    edx
  40f155:	pushf  
  40f156:	loop   0x40f101
  40f158:	jg     0x40f122
  40f15a:	mov    eax,0xf5b6fef1
  40f160:	adc    BYTE PTR ds:0xeba0ae95,0xd4
  40f167:	jbe    0x40f14a
  40f169:	dec    ebp
  40f16a:	ficomp WORD PTR [ecx+0x7c]
  40f16d:	sbb    BYTE PTR [eax-0x3b253ca8],cl
  40f173:	rcl    DWORD PTR [ebx],cl
  40f175:	imul   edi,edx,0xda225ab2
  40f17b:	popf   
  40f17c:	fscale 
  40f17e:	das    
  40f17f:	dec    edx
  40f180:	popf   
  40f181:	sahf   
  40f182:	test   DWORD PTR [esi+0x1c8d5bfd],0x219aef3e
  40f18c:	add    ch,BYTE PTR ds:0x227a050d
  40f192:	arpl   WORD PTR [ecx-0x7ef07815],cx
  40f198:	cwde   
  40f199:	stc    
  40f19a:	pop    ecx
  40f19b:	imul   esp,DWORD PTR [esi],0xffffffe2
  40f19e:	and    edi,DWORD PTR [edx+0x33692ec6]
  40f1a4:	fidiv  WORD PTR ds:0xc48bb7c5
  40f1aa:	push   ebx
  40f1ab:	cmp    DWORD PTR ds:0xc53985c0,esi
  40f1b1:	fld    TBYTE PTR [ebp+0x676a3596]
  40f1b7:	jmp    0x40f188
  40f1b9:	cld    
  40f1ba:	xchg   BYTE PTR [edi+esi*4-0x679e9867],al
  40f1c1:	out    0x4e,al
  40f1c3:	jecxz  0x40f216
  40f1c5:	sahf   
  40f1c6:	cmp    al,0x60
  40f1c8:	cmp    BYTE PTR [edx],al
  40f1ca:	mov    fs,WORD PTR [edx-0x5933f107]
  40f1d0:	inc    DWORD PTR [edi-0x2f]
  40f1d3:	mov    WORD PTR [edi-0x5fc921eb],ds
  40f1d9:	out    0xe3,eax
  40f1db:	test   DWORD PTR ds:0xe62fff2b,ebx
  40f1e1:	(bad)  [edi-0x22f7e6f6]
  40f1e7:	xchg   edx,eax
  40f1e8:	sub    al,0xb5
  40f1ea:	pop    ebx
  40f1eb:	call   0xa64:0x4499f6d1
  40f1f2:	inc    esp
  40f1f3:	icebp  
  40f1f4:	ins    BYTE PTR es:[edi],dx
  40f1f5:	stos   DWORD PTR es:[edi],eax
  40f1f6:	mov    esp,0x639dcaee
  40f1fb:	pop    es
  40f1fc:	cdq    
  40f1fd:	cs inc ebx
  40f1ff:	mov    ah,0xee
  40f201:	inc    ebx
  40f202:	or     eax,0xe7141f7c
  40f207:	fistp  QWORD PTR ds:0x617f4b38
  40f20d:	sub    ecx,DWORD PTR [ecx-0x78842d8]
  40f213:	sbb    DWORD PTR [ebp-0x774d082c],edx
  40f219:	jne    0x40f1f3
  40f21b:	ins    DWORD PTR es:[edi],dx
  40f21c:	dec    esi
  40f21d:	ins    DWORD PTR es:[edi],dx
  40f21e:	pop    edx
  40f21f:	dec    ecx
  40f220:	(bad)  
  40f221:	mov    al,0x26
  40f223:	callw  0xcb0b
  40f227:	arpl   WORD PTR [eax],sp
  40f229:	retf   
  40f22a:	loop   0x40f1f7
  40f22c:	sub    al,0xdd
  40f22e:	adc    ebx,DWORD PTR ds:0xa8387814
  40f234:	mov    ah,bh
  40f236:	pop    esi
  40f237:	dec    ebp
  40f238:	neg    BYTE PTR [edi+0xf57e4c1]
  40f23e:	sbb    BYTE PTR [eax-0x36],bl
  40f241:	ret    
  40f242:	retf   
  40f243:	mov    bl,0xc8
  40f245:	daa    
  40f246:	add    al,0x26
  40f248:	pop    ecx
  40f249:	adc    esi,DWORD PTR [ecx+0x79]
  40f24c:	(bad)  
  40f24e:	mov    dl,0x1b
  40f250:	or     edx,DWORD PTR [edi-0x1a]
  40f253:	dec    ecx
  40f254:	inc    edi
  40f255:	shl    BYTE PTR [ecx+0x67048e43],0x4c
  40f25c:	xchg   ecx,eax
  40f25d:	add    al,0xa
  40f25f:	daa    
  40f260:	sahf   
  40f261:	xchg   edi,esi
  40f263:	out    0xde,eax
  40f265:	pop    ds
  40f266:	shl    esp,1
  40f268:	jne    0x40f2af
  40f26a:	xor    BYTE PTR [ecx-0x45],ch
  40f26d:	push   es
  40f26e:	sbb    ah,BYTE PTR [edi+esi*4]
  40f271:	cmp    eax,0x1a341991
  40f276:	jb     0x40f22d
  40f278:	push   ds
  40f279:	in     eax,dx
  40f27a:	add    al,0x50
  40f27c:	sub    ecx,ecx
  40f27e:	retf   
  40f27f:	hlt    
  40f280:	scas   eax,DWORD PTR es:[edi]
  40f281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f282:	fcomp  DWORD PTR [eax+0x34568f5]
  40f288:	je     0x40f279
  40f28a:	pusha  
  40f28b:	mov    esp,edi
  40f28d:	(bad)  
  40f28e:	icebp  
  40f28f:	cmc    
  40f290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f291:	mov    al,0xe4
  40f293:	ret    
  40f294:	adc    BYTE PTR [edi-0x152c8ea9],dh
  40f29a:	sti    
  40f29b:	pop    ebp
  40f29c:	outs   dx,BYTE PTR ds:[esi]
  40f29d:	and    eax,0x5f79c538
  40f2a2:	pop    eax
  40f2a3:	cs dec eax
  40f2a5:	adc    ebp,DWORD PTR [edi-0x6b]
  40f2a8:	xor    al,0x29
  40f2aa:	lods   eax,DWORD PTR ds:[esi]
  40f2ab:	dec    ecx
  40f2ac:	push   ebp
  40f2ad:	jge    0x40f26b
  40f2af:	into   
  40f2b0:	pop    esp
  40f2b1:	and    al,0xf9
  40f2b3:	jl     0x40f254
  40f2b5:	popf   
  40f2b6:	nop
  40f2b7:	push   esi
  40f2b8:	rcl    BYTE PTR [edx+0x75],1
  40f2bb:	sub    DWORD PTR [eax-0x7d],0x8254d675
  40f2c2:	jmp    0x40f29f
  40f2c4:	dec    BYTE PTR [ebp+eax*4-0xe]
  40f2c8:	(bad)
  40f2cb:	ins    DWORD PTR es:[edi],dx
  40f2cc:	jbe    0x40f34c
  40f2ce:	or     al,bl
  40f2d0:	sbb    eax,0x358ff260
  40f2d5:	aam    0x66
  40f2d7:	jle    0x40f2b6
  40f2d9:	jp     0x40f2a3
  40f2db:	es (bad) 
  40f2dd:	cld    
  40f2de:	mov    cl,0xab
  40f2e0:	mov    dl,0x32
  40f2e2:	or     bl,ch
  40f2e4:	xor    eax,DWORD PTR [edi-0x6e]
  40f2e7:	pop    ds
  40f2e8:	dec    eax
  40f2e9:	test   eax,0x43613bce
  40f2ee:	push   ds
  40f2ef:	out    0xd5,al
  40f2f1:	jo     0x40f299
  40f2f3:	into   
  40f2f4:	sbb    BYTE PTR fs:[ebx+edx*2],al
  40f2f8:	or     al,0x2
  40f2fa:	or     ah,ch
  40f2fc:	mov    bl,0xdc
  40f2fe:	outs   dx,BYTE PTR ds:[esi]
  40f2ff:	daa    
  40f300:	sub    BYTE PTR [ecx+ebx*1],bh
  40f303:	enter  0x92cc,0xbd
  40f307:	jecxz  0x40f2ae
  40f309:	jecxz  0x40f353
  40f30b:	ja     0x40f2be
  40f30d:	jnp    0x40f30f
  40f30f:	push   esp
  40f310:	sub    al,0x49
  40f312:	xor    esi,DWORD PTR [edx+ebp*1]
  40f315:	pop    edi
  40f316:	xchg   edi,eax
  40f317:	xchg   esp,eax
  40f318:	dec    eax
  40f319:	inc    eax
  40f31a:	jge    0x40f373
  40f31c:	push   edx
  40f31d:	push   0x17
  40f31f:	sahf   
  40f320:	call   0x2dde5094
  40f325:	fsubr  st(1),st
  40f327:	xchg   ebp,eax
  40f328:	mul    DWORD PTR [ecx]
  40f32a:	fdivr  DWORD PTR [ebx+0x22]
  40f32d:	aas    
  40f32e:	xchg   ebp,eax
  40f32f:	lods   al,BYTE PTR ds:[esi]
  40f330:	cmp    BYTE PTR [edi],0xc0
  40f333:	mov    BYTE PTR [ebp+0x24],bh
  40f336:	pop    ds
  40f337:	jle    0x40f382
  40f339:	out    0xfe,al
  40f33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f33c:	xor    al,BYTE PTR [ecx+0x1]
  40f33f:	dec    ebp
  40f340:	mov    ecx,0x5475ff1e
  40f345:	not    esp
  40f347:	lods   al,BYTE PTR ds:[esi]
  40f348:	outs   dx,DWORD PTR ds:[esi]
  40f349:	adc    ebx,DWORD PTR [ebx-0x3a]
  40f34c:	lahf   
  40f34d:	cld    
  40f34e:	imul   BYTE PTR [edi-0x19]
  40f351:	xor    bh,BYTE PTR [esi+0xd81d703]
  40f357:	add    al,0x40
  40f359:	inc    ebx
  40f35a:	add    BYTE PTR [eax+eiz*2],bl
  40f35d:	inc    ebx
  40f35e:	add    BYTE PTR [ebx],ah
  40f360:	ror    DWORD PTR [ecx-0x25e44bab],cl
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	cmp    DWORD PTR [ebp-0x32232cae],ebx
  40f70d:	jl     0x40f78b
  40f70f:	jmp    0x40f770
  40f711:	jl     0x40f78f
  40f713:	test   BYTE PTR [edi+ecx*8],0x3e
  40f717:	mov    ?,WORD PTR [eax-0x17]
  40f71a:	push   esi
  40f71b:	mov    al,ds:0x1e7a9689
  40f720:	fs push ecx
  40f722:	cmp    edi,esp
  40f724:	xor    BYTE PTR [ebx-0x1d],ah
  40f727:	rcr    ah,cl
  40f729:	sub    DWORD PTR [ecx+0x62],ebx
  40f72c:	cmp    eax,DWORD PTR [edi-0x3b34c4]
  40f732:	nop    DWORD PTR [ebp-0x2abd267f]
  40f739:	into   
  40f73a:	inc    edx
  40f73b:	imul   esi,DWORD PTR [edx+0x552cd0c8],0xffffffb1
  40f742:	jae    0x40f782
  40f744:	sbb    dl,BYTE PTR [ebp+eiz*4+0x7e750ea3]
  40f74b:	cld    
  40f74c:	mov    edi,0xd65817ea
  40f751:	mov    edi,0x4c5f273f
  40f756:	ins    DWORD PTR es:[edi],dx
  40f757:	sub    al,dl
  40f759:	popa   
  40f75a:	out    0x45,al
  40f75c:	jb     0x40f714
  40f75e:	fs inc eax
  40f760:	mov    es,eax
  40f762:	es push eax
  40f764:	gs push eax
  40f766:	in     al,dx
  40f767:	test   eax,0x750ef05a
  40f76c:	mov    eax,ds:0xc56eb99e
  40f771:	cmp    esp,edx
  40f773:	shr    DWORD PTR [ebp+0x63ae2d0],0x18
  40f77a:	dec    esi
  40f77b:	test   DWORD PTR [eax+0x77],edi
  40f77e:	mov    esp,0x5b893400
  40f783:	fsubr  QWORD PTR [ecx]
  40f785:	jle    0x40f794
  40f787:	sub    al,BYTE PTR [edi]
  40f789:	pop    ebx
  40f78a:	ret    
  40f78b:	jno    0x40f786
  40f78d:	rcl    BYTE PTR [ebx],0xf
  40f790:	test   DWORD PTR [ebx-0x7],edi
  40f793:	mov    al,bl
  40f795:	xor    al,BYTE PTR [edi-0x1ad6e648]
  40f79b:	scas   eax,DWORD PTR es:[edi]
  40f79c:	add    eax,0xea1021b7
  40f7a1:	in     eax,dx
  40f7a2:	mov    al,0x30
  40f7a4:	mov    dh,BYTE PTR [esp+edx*1-0x4a]
  40f7a8:	jnp    0x40f818
  40f7aa:	cdq    
  40f7ab:	test   BYTE PTR [ecx-0x4e16b349],cl
  40f7b1:	jg     0x40f759
  40f7b3:	or     al,0x88
  40f7b5:	jne    0x40f753
  40f7b7:	jecxz  0x40f791
  40f7b9:	cli    
  40f7ba:	and    eax,0x3f4939ed
  40f7bf:	into   
  40f7c0:	scas   eax,DWORD PTR es:[edi]
  40f7c1:	mov    ch,BYTE PTR [eax-0x6b]
  40f7c4:	jg     0x40f7de
  40f7c6:	inc    ebp
  40f7c7:	int3   
  40f7c8:	mov    edx,0x6db700df
  40f7cd:	push   esi
  40f7ce:	sar    BYTE PTR [esi+0x27],cl
  40f7d1:	jbe    0x40f759
  40f7d3:	fwait
  40f7d4:	xor    bh,BYTE PTR [esi+0x3f41c36f]
  40f7da:	mov    bh,0xb2
  40f7dc:	push   cs
  40f7dd:	bound  esp,QWORD PTR [ecx]
  40f7df:	xchg   esp,esp
  40f7e1:	adc    edi,DWORD PTR [edi+0x14ba3e77]
  40f7e7:	mov    edi,0x7daab2b5
  40f7ec:	dec    ebx
  40f7ed:	adc    al,0x65
  40f7ef:	daa    
  40f7f0:	inc    edx
  40f7f1:	cwde   
  40f7f2:	add    eax,0x8ae2da21
  40f7f7:	jge    0x40f7aa
  40f7f9:	sub    ch,BYTE PTR [esi+0x45]
  40f7fc:	pop    ecx
  40f7fd:	cmp    ah,BYTE PTR [edx+0x3e]
  40f800:	div    BYTE PTR [edx+0x11]
  40f803:	adc    BYTE PTR [edi-0x61b40f2e],ch
  40f809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f80a:	jne    0x40f7d4
  40f80c:	in     al,dx
  40f80d:	inc    eax
  40f80e:	jg     0x40f827
  40f810:	imul   edx,DWORD PTR [esi+0x5e],0x72
  40f814:	rcl    eax,1
  40f816:	jge    0x40f7b2
  40f818:	cmp    DWORD PTR [eax+0x70],eax
  40f81b:	arpl   WORD PTR [eax-0x7c9c123f],bx
  40f821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f822:	in     al,dx
  40f823:	ret    
  40f824:	data16 in al,dx
  40f826:	push   ebx
  40f827:	add    ah,0x17
  40f82a:	repnz adc al,0xb3
  40f82d:	mov    ds:0x5db8a504,al
  40f832:	push   cs
  40f833:	test   DWORD PTR [ecx],ebp
  40f835:	pop    eax
  40f836:	lea    esp,[edi+0x67]
  40f839:	push   ss
  40f83a:	pop    ss
  40f83b:	mov    ch,0x72
  40f83d:	or     ecx,DWORD PTR [edi+0x775bc1f7]
  40f843:	loope  0x40f832
  40f845:	out    dx,al
  40f846:	xor    bl,dh
  40f848:	mov    ?,WORD PTR [edx+eax*4]
  40f84b:	pop    edx
  40f84c:	and    al,BYTE PTR ds:0x2a3b9233
  40f852:	fs push ecx
  40f854:	and    eax,0x65ca033c
  40f859:	rcl    esp,1
  40f85b:	lock xor ah,BYTE PTR [ebx-0x52]
  40f85f:	popf   
  40f860:	adc    al,al
  40f862:	xlat   BYTE PTR ds:[ebx]
  40f863:	and    BYTE PTR [esi-0x7a],bl
  40f866:	(bad)  
  40f867:	cmp    DWORD PTR [edi-0x16],eax
  40f86a:	jge    0x40f87b
  40f86c:	dec    ecx
  40f86d:	bound  esp,QWORD PTR [edx-0x36]
  40f870:	lea    eax,[edi]
  40f872:	xchg   esp,eax
  40f873:	dec    eax
  40f874:	aam    0xb0
  40f876:	jle    0x40f808
  40f878:	dec    edx
  40f879:	aam    0x85
  40f87b:	mov    bl,BYTE PTR [eax+0x75]
  40f87e:	sbb    DWORD PTR [edi+0x5a9a53d4],0x37
  40f885:	sub    dl,BYTE PTR [eax+0xb]
  40f888:	push   0xffffffef
  40f88a:	pop    ds
  40f88b:	(bad)  
  40f88c:	cs dec ebx
  40f88e:	mov    edi,0x3b910ae6
  40f893:	mov    ebp,0x1fb93eca
  40f898:	lahf   
  40f899:	cmp    BYTE PTR [edi],ah
  40f89b:	push   0xffffff93
  40f89d:	cs mov bl,0x2a
  40f8a0:	xor    edi,DWORD PTR [edx]
  40f8a2:	pop    eax
  40f8a3:	std    
  40f8a4:	xor    eax,0xcc91a789
  40f8a9:	mov    ds:0xc3584125,al
  40f8ae:	fwait
  40f8af:	mul    ah
  40f8b1:	loopne 0x40f900
  40f8b3:	mov    ch,0x55
  40f8b5:	outs   dx,BYTE PTR fs:[esi]
  40f8b7:	mov    esp,0x21879e91
  40f8bc:	cmc    
  40f8bd:	xlat   BYTE PTR ds:[ebx]
  40f8bf:	(bad)  
  40f8c2:	dec    eax
  40f8c3:	add    al,0xa4
  40f8c5:	and    eax,0xf87fcb28
  40f8ca:	jl     0x40f8ae
  40f8cc:	hlt    
  40f8cd:	test   BYTE PTR [ebx+0x1f],ah
  40f8d0:	push   esp
  40f8d1:	call   0x5fc05104
  40f8d6:	inc    edx
  40f8d7:	fcomp  DWORD PTR [ebx+eiz*4]
  40f8da:	(bad)  
  40f8db:	bound  esi,QWORD PTR ds:0x46d30d07
  40f8e1:	int    0xa
  40f8e3:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40f8e5:	jnp    0x40f95d
  40f8e7:	arpl   WORD PTR [eax+0x50f009cf],di
  40f8ed:	or     BYTE PTR [eax-0x3f97a23e],dl
  40f8f3:	in     al,dx
  40f8f4:	adc    al,0xe
  40f8f6:	ds xor bl,cl
  40f8f9:	push   edi
  40f8fa:	jmp    0x40f961
  40f8fc:	mov    al,ds:0x79f4a8f4
  40f901:	loope  0x40f8ae
  40f903:	fwait
  40f904:	int3   
  40f905:	test   DWORD PTR [eax-0x4744decf],ebp
  40f90b:	dec    ebx
  40f90c:	in     al,0x22
  40f90e:	mov    eax,0x2825250
  40f913:	data16 jecxz 0x40f8aa
  40f916:	in     al,dx
  40f917:	add    al,0x58
  40f919:	mov    ds:0xc7e2e35d,al
  40f91e:	lock or DWORD PTR [ecx+0x3],eax
  40f922:	int3   
  40f923:	xchg   dl,ch
  40f925:	xor    bl,BYTE PTR [edi+0x61ed81ef]
  40f92b:	retf   0x4a36
  40f92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f92f:	mov    edi,0xde0fe959
  40f934:	es xchg esp,eax
  40f936:	mov    bl,0x52
  40f938:	inc    eax
  40f939:	call   0x94fb06b7
  40f93e:	shr    DWORD PTR [esi],cl
  40f940:	sbb    ebx,DWORD PTR [esi+edx*8]
  40f943:	pop    edi
  40f944:	and    esi,ecx
  40f946:	shl    BYTE PTR [ecx-0x69],0xa2
  40f94a:	int    0xc
  40f94c:	mov    esi,0x77cf7e88
  40f951:	add    DWORD PTR [edi+0x6a],0x1e409227
  40f958:	jne    0x40f91c
  40f95a:	test   edx,ebx
  40f95c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f95d:	inc    esp
  40f95e:	add    eax,eax
  40f960:	pop    esi
  40f961:	es scas al,BYTE PTR es:[edi]
  40f963:	scas   eax,DWORD PTR es:[edi]
  40f964:	and    ebx,DWORD PTR [edi-0x5adc98b3]
  40f96a:	dec    edi
  40f96b:	and    cl,BYTE PTR [eax]
  40f96d:	push   es
  40f96e:	sub    ch,BYTE PTR [esi+eax*4-0x5afc9462]
  40f975:	int    0xcc
  40f977:	retf   
  40f978:	push   edx
  40f979:	test   DWORD PTR [esi],edx
  40f97b:	mov    WORD PTR [eax+0x577465a1],?
  40f981:	fs mov esp,0xcc0ee8fa
  40f987:	adc    eax,ecx
  40f989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f98a:	adc    eax,0xa8996cc3
  40f98f:	push   0xb87a5a84
  40f994:	cmp    eax,DWORD PTR ds:0xa518bb2
  40f99a:	and    DWORD PTR [edi-0x15],edx
  40f99d:	fwait
  40f99e:	xchg   ebx,eax
  40f99f:	int    0x62
  40f9a1:	add    esp,DWORD PTR [esi]
  40f9a3:	hlt    
  40f9a4:	stos   DWORD PTR es:[edi],eax
  40f9a5:	pop    edi
  40f9a6:	mov    ecx,0x4cdee7f4
  40f9ab:	push   esi
  40f9ac:	in     eax,dx
  40f9ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ae:	pop    es
  40f9af:	jb     0x40f934
  40f9b1:	data16 imul BYTE PTR es:[ebx-0x3d919b5d]
  40f9b9:	jo     0x40f95b
  40f9bb:	(bad)  
  40f9bc:	xlat   BYTE PTR ds:[ebx]
  40f9bd:	sub    edi,DWORD PTR [edx]
  40f9bf:	int    0x46
  40f9c1:	je     0x40f9e8
  40f9c3:	inc    eax
  40f9c4:	pop    ebp
  40f9c5:	sbb    eax,0xa74dd672
  40f9ca:	fidiv  WORD PTR [eax+0x7]
  40f9cd:	pop    ecx
  40f9ce:	in     eax,0x14
  40f9d0:	lea    edx,[esi+0x0]
  40f9d3:	add    al,0x4b
  40f9d5:	sub    BYTE PTR [ecx],cl
  40f9d7:	add    DWORD PTR [edi],esp
  40f9d9:	jmp    0x4234:0xdf54d6a6
  40f9e0:	jge    0x40f976
  40f9e2:	cdq    
  40f9e3:	lods   al,BYTE PTR ds:[esi]
  40f9e4:	push   cs
  40f9e5:	or     ebp,edi
  40f9e7:	rcr    dh,0xf1
  40f9ea:	xchg   dh,dl
  40f9ec:	mov    edx,0x29e40181
  40f9f1:	or     DWORD PTR [edi],0xffffffaa
  40f9f4:	sti    
  40f9f5:	mov    edx,0xfa141586
  40f9fa:	aam    0xde
  40f9fc:	pop    eax
  40f9fd:	lock xchg BYTE PTR [eax],ch
  40fa00:	aaa    
  40fa01:	shr    al,cl
  40fa03:	cmp    BYTE PTR [ecx-0x7f],dh
  40fa06:	loopne 0x40f9cd
  40fa08:	jmp    0x40f9e2
  40fa0a:	rol    DWORD PTR [eax+0x19],0xf3
  40fa0e:	das    
  40fa0f:	fwait
  40fa10:	add    BYTE PTR [edx-0x712fbe9b],dl
  40fa16:	or     BYTE PTR [ecx-0x721bab14],ch
  40fa1c:	pop    esi
  40fa1d:	scas   eax,DWORD PTR es:[edi]
  40fa1e:	pop    ecx
  40fa1f:	(bad)  
  40fa20:	dec    esp
  40fa21:	outs   dx,DWORD PTR ds:[esi]
  40fa22:	int3   
  40fa23:	arpl   WORD PTR [edx],bx
  40fa25:	xchg   esp,eax
  40fa26:	gs in  al,0x66
  40fa29:	xor    cl,BYTE PTR [eax-0x1f2400a0]
  40fa2f:	(bad)  
  40fa30:	cmp    DWORD PTR [eax-0x49],esp
  40fa33:	mov    bl,0x65
  40fa35:	scas   al,BYTE PTR es:[edi]
  40fa36:	lods   al,BYTE PTR ds:[esi]
  40fa37:	addr16 js 0x40fa79
  40fa3a:	sbb    eax,DWORD PTR [edi-0x10]
  40fa3d:	(bad)  
  40fa3e:	call   0xdcf7240e
  40fa43:	push   es
  40fa44:	stos   BYTE PTR es:[edi],al
  40fa45:	mov    ebp,0xc3bdbef2
  40fa4a:	es push esi
  40fa4c:	and    BYTE PTR [edi+0x642e1182],dh
  40fa52:	jns    0x40fa98
  40fa54:	out    dx,eax
  40fa55:	sub    BYTE PTR [esi+edx*4+0x68],ah
  40fa59:	mov    esp,0x542f5be7
  40fa5e:	mov    BYTE PTR [eax+0x2d],bl
  40fa61:	cmp    edi,DWORD PTR [eax]
  40fa63:	or     ebx,DWORD PTR [ebp-0xf]
  40fa66:	mov    fs,WORD PTR [ecx]
  40fa68:	pop    ds
  40fa69:	dec    esp
  40fa6a:	jb     0x40fac8
  40fa6c:	adc    DWORD PTR [ebx],esi
  40fa6e:	mov    ecx,0x2784c22c
  40fa73:	mov    WORD PTR [ebx],?
  40fa75:	jge    0x40fa87
  40fa77:	iret   
  40fa78:	mul    BYTE PTR [edi]
  40fa7a:	sbb    cl,cl
  40fa7c:	push   esi
  40fa7d:	aam    0x63
  40fa7f:	and    esi,DWORD PTR [edi+esi*8]
  40fa82:	neg    DWORD PTR [edi+0x10003f43]
  40fa88:	fisttp DWORD PTR [edi+0x75]
  40fa8b:	sub    esp,DWORD PTR [ebx]
  40fa8d:	mov    edx,0xaba5031e
  40fa92:	pop    eax
  40fa93:	leave  
  40fa94:	ror    DWORD PTR [eax-0x1d],1
  40fa97:	(bad)  
  40fa99:	adc    eax,0xc2b91e2f
  40fa9e:	and    ebp,esp
  40faa0:	inc    ecx
  40faa1:	cmp    al,0xe1
  40faa3:	inc    ebp
  40faa4:	jnp    0x40fb21
  40faa6:	push   ebp
  40faa7:	popa   
  40faa8:	adc    DWORD PTR fs:[esi-0x6a],ebx
  40faac:	fs cmc 
  40faae:	test   ah,ch
  40fab0:	call   0x7d1986c9
  40fab5:	retf   
  40fab6:	pop    ebx
  40fab7:	ret    0x821c
  40faba:	xor    DWORD PTR [eax-0x147be30e],edx
  40fac0:	stos   DWORD PTR es:[edi],eax
  40fac1:	xor    ecx,DWORD PTR [edi-0x39]
  40fac4:	(bad)
  40fac7:	es fwait
  40fac9:	xor    dl,ch
  40facb:	fnstcw WORD PTR [eax+0x6e]
  40face:	iret   
  40facf:	xor    eax,0xfa948cb2
  40fad4:	bound  edi,QWORD PTR [ecx+0x5e93552]
  40fada:	sbb    BYTE PTR [ebx],0xb5
  40fadd:	aas    
  40fade:	jp     0x40fb44
  40fae0:	ja     0x40fae1
  40fae2:	aaa    
  40fae3:	mov    ?,WORD PTR [ecx+0x66]
  40fae6:	sbb    eax,0xb9c63d9d
  40faeb:	cmp    BYTE PTR [ecx],0x46
  40faee:	mov    ch,0x7f
  40faf0:	push   cs
  40faf1:	repz or cl,al
  40faf4:	mov    ecx,0x604e3df7
  40faf9:	pushf  
  40fafa:	dec    esp
  40fafb:	jno    0x40fb44
  40fafd:	xchg   ecx,eax
  40fafe:	test   ch,bl
  40fb00:	pop    ss
  40fb01:	add    cl,BYTE PTR [eax+ecx*1+0x60bcd35c]
  40fb08:	jle    0x40faed
  40fb0a:	call   0x6552:0x855a1ec6
  40fb11:	dec    BYTE PTR [edi]
  40fb13:	jp     0x40fb39
  40fb15:	fcom   DWORD PTR [ecx+0x7c687a60]
  40fb1b:	(bad)  
  40fb1d:	mov    ah,0x8c
  40fb1f:	stos   BYTE PTR es:[edi],al
  40fb20:	mov    ds:0x413807c0,al
  40fb25:	pop    esp
  40fb26:	mov    esi,ss
  40fb28:	sbb    eax,0x1040c833
  40fb2d:	les    esp,FWORD PTR [ecx+eiz*8-0x2]
  40fb31:	fcomi  st,st(4)
  40fb33:	mov    ebp,0xe7400410
  40fb38:	mov    ds:0x9ae1a053,eax
  40fb3d:	dec    edi
  40fb3e:	call   0xa55a:0x3a41c744
  40fb45:	(bad)  
  40fb46:	gs mov ebx,0x294c64b0
  40fb4c:	push   esp
  40fb4d:	or     dl,BYTE PTR [edi-0x4576afe6]
  40fb53:	mov    al,ds:0x111cd16c
  40fb58:	xor    eax,0xecd9aef9
  40fb5d:	add    dl,BYTE PTR [ecx-0x3208839e]
  40fb63:	inc    edx
  40fb64:	pop    ebx
  40fb65:	int    0x35
  40fb67:	sub    edx,esp
  40fb69:	adc    BYTE PTR [ebx+ecx*2-0x1613500],ch
  40fb70:	lea    esp,[edx]
  40fb72:	pop    esp
  40fb73:	aad    0x99
  40fb75:	out    0x70,al
  40fb77:	fisubr DWORD PTR [ecx+0x4e]
  40fb7a:	leave  
  40fb7b:	mov    DWORD PTR [ebp+0x14],ecx
  40fb7e:	or     ecx,DWORD PTR [esi+0x61]
  40fb81:	loop   0x40fb24
  40fb83:	fstp   TBYTE PTR [ebx+0x68]
  40fb86:	pop    eax
  40fb87:	jno    0x40fb85
  40fb89:	stos   BYTE PTR es:[edi],al
  40fb8a:	loope  0x40fb3e
  40fb8c:	pop    ebx
  40fb8d:	mov    eax,ds:0x99d23fd3
  40fb92:	xchg   BYTE PTR ds:0xde6846fa,dh
  40fb98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb99:	icebp  
  40fb9a:	daa    
  40fb9b:	in     eax,0x50
  40fb9d:	out    0x58,al
  40fb9f:	imul   edi,DWORD PTR [eax],0xa39db76e
  40fba5:	das    
  40fba6:	adc    DWORD PTR [edx-0x5f],0xf88ae94c
  40fbad:	adc    esi,0xffffffb0
  40fbb0:	call   0xcc5b9665
  40fbb5:	jae    0x40fba1
  40fbb7:	stos   BYTE PTR es:[edi],al
  40fbb8:	push   gs
  40fbba:	fisttp QWORD PTR [edi-0x2f]
  40fbbd:	jle    0x40fc28
  40fbbf:	frstor [eax]
  40fbc1:	ror    DWORD PTR [ebx+0x3c],cl
  40fbc4:	jl     0x40fbd4
  40fbc6:	(bad)  
  40fbc7:	clc    
  40fbc8:	cmp    eax,0xcd6aada1
  40fbcd:	add    ah,al
  40fbcf:	scas   eax,DWORD PTR es:[edi]
  40fbd0:	cwde   
  40fbd1:	push   edi
  40fbd2:	popf   
  40fbd3:	jmp    0x40fc1d
  40fbd5:	or     eax,0xa4391fee
  40fbda:	dec    ecx
  40fbdb:	mov    al,0xd1
  40fbdd:	sahf   
  40fbde:	pop    edx
  40fbdf:	sbb    esp,DWORD PTR [ebp-0x58]
  40fbe2:	cwde   
  40fbe3:	data16 mov WORD PTR [eax],?
  40fbe6:	outs   dx,BYTE PTR ds:[esi]
  40fbe7:	or     esi,DWORD PTR [ebp+0x76]
  40fbea:	and    dl,BYTE PTR [edx]
  40fbec:	and    ebp,ebx
  40fbee:	mov    dl,0xf
  40fbf0:	pop    ds
  40fbf1:	add    al,0x99
  40fbf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbf4:	dec    edi
  40fbf5:	jle    0x40fb9a
  40fbf7:	aam    0xf7
  40fbf9:	xchg   DWORD PTR [ecx-0x6c5c2464],eax
  40fbff:	popf   
  40fc00:	dec    ebx
  40fc01:	sti    
  40fc02:	fdiv   DWORD PTR [ebp+0x248976cc]
  40fc08:	push   edx
  40fc09:	fst    DWORD PTR [ebx]
  40fc0b:	sub    eax,0xf68fe677
  40fc10:	icebp  
  40fc11:	pop    ebp
  40fc12:	fdiv   QWORD PTR [edi+eax*1-0x54]
  40fc16:	int3   
  40fc17:	fld    TBYTE PTR [edx]
  40fc19:	xchg   esp,eax
  40fc1a:	mov    bh,0xfc
  40fc1c:	into   
  40fc1d:	and    al,0x56
  40fc1f:	loop   0x40fc44
  40fc21:	gs pushf 
  40fc23:	xchg   BYTE PTR [eax+0x7534c363],dl
  40fc29:	push   ebx
  40fc2a:	mov    DWORD PTR [ebx+0x30],ebp
  40fc2d:	mov    bl,0x5b
  40fc2f:	sub    eax,0xc2d73504
  40fc34:	scas   al,BYTE PTR es:[edi]
  40fc35:	sub    bl,cl
  40fc37:	fisttp DWORD PTR [ebp+0x56]
  40fc3a:	in     eax,dx
  40fc3b:	mov    ecx,0x84ce597a
  40fc40:	imul   DWORD PTR [ecx-0x3aa9a490]
  40fc46:	sub    dh,dh
  40fc48:	mov    bh,0x84
  40fc4a:	mov    ebp,0x5f9d0591
  40fc4f:	dec    BYTE PTR [ecx+0x5dc84c5f]
  40fc55:	arpl   WORD PTR [ecx-0x6bdeb334],bx
  40fc5b:	test   BYTE PTR [edx-0x7a],bh
  40fc5e:	dec    eax
  40fc5f:	repnz sti 
  40fc61:	inc    esi
  40fc62:	aas    
  40fc63:	xor    al,BYTE PTR [edx-0x79845698]
  40fc69:	icebp  
  40fc6a:	stos   DWORD PTR es:[edi],eax
  40fc6b:	sahf   
  40fc6c:	into   
  40fc6d:	inc    esp
  40fc6e:	cmp    ah,BYTE PTR [edx]
  40fc70:	scas   al,BYTE PTR es:[edi]
  40fc71:	aas    
  40fc72:	jno    0x40fc32
  40fc74:	mov    al,ds:0x1f8293ed
  40fc79:	je     0x40fc03
  40fc7b:	pushf  
  40fc7c:	iret   
  40fc7d:	or     eax,0x9312c560
  40fc82:	repnz mov eax,ds:0xd016f49e
  40fc88:	hlt    
  40fc89:	fsub   DWORD PTR [ecx-0x35df3502]
  40fc8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc90:	mov    bh,0x1
  40fc92:	mov    ch,0x3e
  40fc94:	in     al,0x15
  40fc96:	push   es
  40fc97:	add    eax,0xfdd61903
  40fc9c:	pop    edx
  40fc9d:	jmp    0x46c4:0x1a973ad7
  40fca4:	ud2    
  40fca6:	inc    ebp
  40fca7:	scas   al,BYTE PTR es:[edi]
  40fca8:	inc    esp
  40fca9:	les    ebp,FWORD PTR [edi+ebx*1-0x1c]
  40fcad:	std    
  40fcae:	loope  0x40fd0d
  40fcb0:	in     eax,dx
  40fcb1:	jp     0x40fcb3
  40fcb3:	and    dh,BYTE PTR [edx-0x7c]
  40fcb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb7:	pop    eax
  40fcb8:	pop    ebp
  40fcb9:	loopne 0x40fcb4
  40fcbb:	inc    esp
  40fcbc:	pop    ecx
  40fcbd:	push   esi
  40fcbe:	mov    esi,0x21a273e5
  40fcc3:	aad    0x49
  40fcc5:	iret   
  40fcc6:	sbb    DWORD PTR [eax-0x52],ecx
  40fcc9:	pop    ss
  40fcca:	push   ss
  40fccb:	inc    esi
  40fccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fccd:	retf   0x708c
  40fcd0:	dec    esp
  40fcd1:	add    eax,DWORD PTR ds:0x6c118b1e
  40fcd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd8:	dec    edi
  40fcd9:	stos   BYTE PTR es:[edi],al
  40fcda:	and    al,0xa
  40fcdc:	cmp    ch,al
  40fcde:	mov    al,0x35
  40fce0:	loope  0x40fcb4
  40fce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce3:	fistp  DWORD PTR [ecx]
  40fce5:	mov    al,BYTE PTR [eax]
  40fce7:	pusha  
  40fce8:	cwde   
  40fce9:	gs daa 
  40fceb:	mov    WORD PTR [edi-0x7dded593],fs
  40fcf1:	sti    
  40fcf2:	and    DWORD PTR ds:0xb658d13b,ecx
  40fcf8:	mov    dl,BYTE PTR [edx]
  40fcfa:	or     eax,0x928e9464
  40fcff:	ins    BYTE PTR es:[edi],dx
  40fd00:	popf   
  40fd01:	jne    0x40fc89
  40fd03:	add    al,0x64
  40fd05:	sub    edi,ebx
  40fd07:	xor    al,0x5
  40fd09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd0a:	push   esi
  40fd0b:	addr16 mov ch,0xa3
  40fd0e:	mov    eax,ds:0x4384e91d
  40fd13:	push   ebx
  40fd14:	xchg   ebp,eax
  40fd15:	jne    0x40fcc2
  40fd17:	cmp    eax,0x5c664ffa
  40fd1c:	js     0x40fd7b
  40fd1e:	out    dx,al
  40fd1f:	ret    0x4ad2
  40fd22:	in     al,dx
  40fd23:	aas    
  40fd24:	sbb    eax,0x9fe78a07
  40fd29:	sub    eax,0x96d0104f
  40fd2e:	adc    al,0x5b
  40fd30:	ja     0x40fd0b
  40fd32:	outs   dx,BYTE PTR ds:[esi]
  40fd33:	out    dx,al
  40fd34:	mov    eax,cs:0xebebf06a
  40fd3a:	mov    ebp,0x837d2701
  40fd3f:	dec    DWORD PTR [edx-0x70]
  40fd42:	and    ebp,DWORD PTR [ebp+0x2c0062f0]
  40fd48:	sub    ecx,DWORD PTR [ebp+0x1aa9799c]
  40fd4e:	mov    ?,WORD PTR [ebx-0x38cafba9]
  40fd54:	fchs   
  40fd56:	enter  0xb50,0xc1
  40fd5a:	nop
  40fd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd5c:	dec    ebp
  40fd5d:	nop
  40fd5e:	stos   BYTE PTR es:[edi],al
  40fd5f:	scas   eax,DWORD PTR es:[edi]
  40fd60:	mov    dh,0x78
  40fd62:	shr    BYTE PTR [esi+0x6cb9fba],0x4c
  40fd69:	les    ebx,FWORD PTR [edi]
  40fd6b:	pop    ecx
  40fd6c:	(bad)  
  40fd6d:	ja     0x40fd04
  40fd6f:	imul   ebx,DWORD PTR [edi*4+0x400e0ff9],0xffffffac
  40fd77:	cmp    dl,BYTE PTR [ecx+0xc1425c4]
  40fd7d:	aam    0xa2
  40fd7f:	jne    0x40fd7e
  40fd81:	and    ch,bl
  40fd83:	adc    ecx,DWORD PTR [ebp-0x41a4470f]
  40fd89:	or     dl,BYTE PTR [esi+0x6d]
  40fd8c:	xlat   BYTE PTR ds:[ebx]
  40fd8d:	dec    edi
  40fd8e:	in     al,dx
  40fd8f:	and    edi,DWORD PTR [ecx]
  40fd91:	pusha  
  40fd92:	(bad)  
  40fd93:	idiv   BYTE PTR [ecx]
  40fd95:	test   BYTE PTR [edx+0x48],ah
  40fd98:	pop    ecx
  40fd99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd9a:	cmp    cl,dl
  40fd9c:	adc    BYTE PTR [ecx+0x55],al
  40fd9f:	std    
  40fda0:	pusha  
  40fda1:	in     eax,dx
  40fda2:	add    al,0x64
  40fda4:	imul   edi,DWORD PTR [edx+0x26],0xffffffea
  40fda8:	call   DWORD PTR [ebp+0x731d656e]
  40fdae:	js     0x40fe18
  40fdb0:	stos   BYTE PTR es:[edi],al
  40fdb1:	jmp    0xc77c:0xb8e60f64
  40fdb8:	sbb    DWORD PTR [edx-0x27],ebx
  40fdbb:	mov    al,0xab
  40fdbd:	jg     0x40fe19
  40fdbf:	mov    bl,0x9
  40fdc1:	mov    esp,0x73167cdd
  40fdc6:	out    dx,eax
  40fdc7:	int    0xfb
  40fdc9:	cmc    
  40fdca:	scas   al,BYTE PTR es:[edi]
  40fdcb:	jo     0x40fdc7
  40fdcd:	lock jo 0x40fda3
  40fdd0:	arpl   WORD PTR [edx-0x2e],sp
  40fdd3:	or     al,0xa4
  40fdd5:	xchg   esp,eax
  40fdd6:	dec    esp
  40fdd7:	loopne 0x40fe0f
  40fdd9:	out    dx,eax
  40fdda:	or     ecx,esp
  40fddc:	fbstp  TBYTE PTR [ecx]
  40fdde:	add    eax,0xbe5252ec
  40fde3:	sar    esi,0x3
  40fde6:	loop   0x40fdb9
  40fde8:	or     eax,0x47aeac03
  40fded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdee:	jno    0x40fe25
  40fdf0:	data16 aaa 
  40fdf2:	add    esi,DWORD PTR [ebx-0x117fff4c]
  40fdf8:	cmp    eax,0x6bd7f2ca
  40fdfd:	adc    edi,esi
  40fdff:	mov    al,ds:0x45ccedc7
  40fe04:	add    al,0x6
  40fe06:	outs   dx,DWORD PTR ds:[esi]
  40fe07:	cld    
  40fe08:	ins    BYTE PTR es:[edi],dx
  40fe09:	pop    edi
  40fe0a:	adc    al,0xd
  40fe0c:	je     0x40fe40
  40fe0e:	xchg   BYTE PTR [ebx+edi*8+0x198633b7],cl
  40fe15:	(bad)  
  40fe16:	sbb    bl,BYTE PTR [esp+ebx*8-0x3f31ef84]
  40fe1d:	push   ds
  40fe1e:	xor    ebx,DWORD PTR [esi]
  40fe20:	or     BYTE PTR [edx+0x4b7540ad],cl
  40fe26:	pop    ds
  40fe27:	and    DWORD PTR [edx+0x1ee1bbe0],ecx
  40fe2d:	les    eax,FWORD PTR ds:0xb8cc9ab
  40fe33:	icebp  
  40fe34:	fsub   st(2),st
  40fe36:	jp     0x40fe0b
  40fe38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe39:	and    bh,BYTE PTR [esi+0x19]
  40fe3c:	cmc    
  40fe3d:	fiadd  WORD PTR [esi]
  40fe3f:	xchg   esi,eax
  40fe40:	shl    DWORD PTR [edi],0x9b
  40fe43:	mov    esi,0xf676754d
  40fe48:	add    ah,BYTE PTR [ebx+0x50]
  40fe4b:	cmp    ah,bh
  40fe4d:	dec    esp
  40fe4e:	mov    DWORD PTR [ebx+0x74e5495b],ebx
  40fe54:	jo     0x40fe85
  40fe56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe57:	xchg   BYTE PTR [ecx-0x72],cl
  40fe5a:	xchg   DWORD PTR [ecx],edx
  40fe5c:	jo     0x40fdea
  40fe5e:	add    BYTE PTR [ebx+ebp*4-0x42],bh
  40fe62:	loopne 0x40feb3
  40fe64:	call   0xcdae:0x70fe0c07
  40fe6b:	jg     0x40fe44
  40fe6d:	jmp    0x40fe0b
  40fe6f:	pop    ebx
  40fe70:	pop    esi
  40fe71:	xchg   ch,al
  40fe73:	jns    0x40fe42
  40fe75:	imul   eax,esp,0xffffffb3
  40fe78:	out    0xf,eax
  40fe7a:	(bad)  
  40fe7b:	or     al,0xde
  40fe7d:	pop    esp
  40fe7e:	push   esp
  40fe7f:	pop    ecx
  40fe80:	in     al,0xac
  40fe82:	jb     0x40fe89
  40fe84:	fcmovnbe st,st(3)
  40fe86:	and    al,0xed
  40fe88:	bound  edx,QWORD PTR [esi-0x63]
  40fe8b:	shr    DWORD PTR [ebp-0xc],1
  40fe8e:	pusha  
  40fe8f:	mov    ebp,0xa873bc82
  40fe94:	xor    BYTE PTR [eax],cl
  40fe96:	xor    BYTE PTR [edx-0x522a699b],dh
  40fe9c:	push   ss
  40fe9d:	pop    ss
  40fe9e:	iret   
  40fe9f:	jne    0x40ff16
  40fea1:	lds    ebp,FWORD PTR [edi+0x22fcc1f]
  40fea7:	pop    edx
  40fea8:	jge    0x40fe31
  40feaa:	jp     0x40fe9d
  40feac:	pop    esp
  40fead:	ins    BYTE PTR es:[edi],dx
  40feae:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb0:	sbb    edx,DWORD PTR [ebx+0x77]
  40feb3:	ds mov edx,0x2353ce41
  40feb9:	das    
  40feba:	jno    0x40ff23
  40febc:	(bad)  
  40febd:	outs   dx,DWORD PTR ds:[esi]
  40febe:	pop    ebx
  40febf:	outs   dx,DWORD PTR ds:[esi]
  40fec0:	aaa    
  40fec1:	mov    ebp,0xeec6c80a
  40fec6:	sti    
  40fec7:	jnp    0x40fe5a
  40fec9:	lock jmp 0xbe4:0xd1c116b1
  40fed1:	and    dl,BYTE PTR [edi+eiz*8+0x47]
  40fed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fed6:	nop
  40fed7:	add    edi,edx
  40fed9:	mov    al,ds:0x8e5eb96
  40fede:	les    esp,FWORD PTR [ebp-0x42]
  40fee1:	(bad)
  40fee4:	(bad)  
  40fee5:	shl    DWORD PTR [ecx-0x34],1
  40fee8:	mov    eax,ds:0xea9dbe67
  40feed:	popa   
  40feee:	sbb    DWORD PTR [ebx-0x16ed1dea],ebx
  40fef4:	ja     0x40fea2
  40fef6:	xchg   ebp,eax
  40fef7:	xchg   BYTE PTR [edi-0x23],dh
  40fefa:	loop   0x40ff6c
  40fefc:	mov    al,ds:0xd26690d7
  40ff01:	add    bl,ah
  40ff03:	ret    
  40ff04:	outs   dx,DWORD PTR ds:[esi]
  40ff05:	in     eax,dx
  40ff06:	mov    WORD PTR [esi+0x1c82ace2],ds
  40ff0c:	mov    BYTE PTR [edi],bh
  40ff0e:	in     eax,0x34
  40ff10:	xor    DWORD PTR [edx-0x69679a37],esi
  40ff16:	jo     0x40ff17
  40ff18:	aas    
  40ff19:	popf   
  40ff1a:	scas   eax,DWORD PTR es:[edi]
  40ff1b:	aam    0x82
  40ff1d:	lds    esi,FWORD PTR [edx-0x42953f6f]
  40ff23:	(bad)  
  40ff24:	fidiv  DWORD PTR [edx-0x4a]
  40ff27:	ror    DWORD PTR [edx-0x26b1c8d8],0xf9
  40ff2e:	fisubr DWORD PTR [ebx]
  40ff30:	(bad)  
  40ff31:	inc    dh
  40ff33:	add    eax,0x3a57d24c
  40ff38:	fild   QWORD PTR [edi-0x6c]
  40ff3b:	and    esp,ecx
  40ff3d:	daa    
  40ff3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff3f:	cmp    ch,0x9
  40ff42:	fnstsw WORD PTR [eax-0x6ec19217]
  40ff48:	mov    cl,0x88
  40ff4a:	test   al,0xdc
  40ff4c:	outs   dx,BYTE PTR ds:[esi]
  40ff4d:	rcl    edx,cl
  40ff4f:	dec    edi
  40ff50:	fwait
  40ff51:	pop    ss
  40ff52:	das    
  40ff53:	cli    
  40ff54:	pop    ds
  40ff55:	jmp    0xf8fe:0x835d3aee
  40ff5c:	xlat   BYTE PTR ds:[ebx]
  40ff5d:	test   DWORD PTR [esi-0x53],esi
  40ff60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff61:	gs pop es
  40ff63:	or     DWORD PTR [edx],esi
  40ff65:	dec    edi
  40ff67:	call   0x2cf117a1
  40ff6c:	int    0x4d
  40ff6e:	mov    eax,ds:0xbd5b55c6
  40ff73:	ins    BYTE PTR es:[edi],dx
  40ff74:	call   0x10cf:0x4d05e392
  40ff7b:	jb     0x40ff0f
  40ff7d:	js     0x40ff4c
  40ff7f:	clc    
  40ff80:	sub    cl,dh
  40ff82:	sbb    eax,0x731e3b67
  40ff87:	adc    al,0xcf
  40ff89:	imul   esi,DWORD PTR [eax-0x7],0xd6d49ee5
  40ff90:	jg     0x40fff0
  40ff92:	sbb    dh,BYTE PTR [ebx]
  40ff94:	gs add al,0x2b
  40ff97:	pop    edi
  40ff98:	dec    esp
  40ff99:	mov    DWORD PTR [ebx+0x54],edx
  40ff9c:	in     al,0xb5
  40ff9e:	push   es
  40ff9f:	adc    dh,0x34
  40ffa2:	div    DWORD PTR [esi+0x4e]
  40ffa5:	mov    ebx,0x210d006f
  40ffaa:	mov    bl,0xa3
  40ffac:	push   ss
  40ffad:	jecxz  0x40ff32
  40ffaf:	ror    BYTE PTR [esi-0x6749aecb],cl
  40ffb5:	lods   al,BYTE PTR ds:[esi]
  40ffb6:	push   ds
  40ffb7:	in     eax,dx
  40ffb8:	arpl   WORD PTR [esi],di
  40ffba:	jge    0x40ff7a
  40ffbc:	dec    ecx
  40ffbd:	push   bp
  40ffbf:	test   edi,esi
  40ffc1:	test   eax,0x6be735c0
  40ffc6:	mov    bh,0x1e
  40ffc8:	jge    0x410030
  40ffca:	jecxz  0x40fff3
  40ffcc:	ss js  0x40ff54
  40ffcf:	xchg   edi,eax
  40ffd0:	pop    ebp
  40ffd1:	lock mov edx,0xc09e5e32
  40ffd7:	(bad)  
  40ffd8:	and    ecx,ecx
  40ffda:	xor    BYTE PTR [ecx-0x6f],ch
  40ffdd:	shl    DWORD PTR [eax],0xce
  40ffe0:	dec    esp
  40ffe1:	stos   BYTE PTR es:[edi],al
  40ffe2:	test   BYTE PTR [esi-0x41],ah
  40ffe5:	outs   dx,BYTE PTR ds:[esi]
  40ffe6:	mov    cl,0xc4
  40ffe8:	cmc    
  40ffe9:	inc    ecx
  40ffea:	(bad)  
  40ffeb:	jns    0x41002e
  40ffed:	push   0xddf52486
  40fff2:	mov    bh,BYTE PTR [ebx+0x7194dbf2]
  40fff8:	and    eax,0x17dbf050
  40fffd:	pop    edi
  40fffe:	popf   
  40ffff:	test   al,0xae
  410001:	jne    0x40ffb0
  410003:	or     ch,ch
  410005:	adc    eax,0xe09ad47b
  41000a:	pop    DWORD PTR [ecx+0x47faf7ea]
  410010:	pop    ebx
  410011:	xor    eax,0x481d3424
  410016:	add    BYTE PTR [ebx+ecx*8],bl
  410019:	mov    dl,0xf
  41001b:	(bad)  
  41001c:	jmp    0x41007a
  41001e:	pop    ds
  41001f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410020:	dec    edi
  410021:	shr    DWORD PTR [ecx+0x19],cl
  410024:	lahf   
  410025:	push   0x47
  410027:	fs shr dh,cl
  41002a:	pop    es
  41002b:	mov    eax,0x1219f20c
  410030:	or     al,0x94
  410032:	dec    ebx
  410033:	cmp    al,0x88
  410035:	xor    BYTE PTR [ecx],bh
  410037:	jge    0x41009e
  410039:	stos   DWORD PTR es:[edi],eax
  41003a:	outs   dx,BYTE PTR ds:[esi]
  41003b:	and    cl,BYTE PTR [edx]
  41003d:	mov    ds,WORD PTR [esi-0x4bf23979]
  410043:	fidiv  DWORD PTR [eax]
  410045:	mov    esi,0x8591a0a0
  41004a:	dec    esi
  41004b:	stos   DWORD PTR es:[edi],eax
  41004c:	pop    ecx
  41004d:	pushf  
  41004e:	loope  0x4100bc
  410050:	stos   DWORD PTR es:[edi],eax
  410051:	(bad)
  410056:	lahf   
  410057:	mov    esi,0x37f05080
  41005c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41005d:	adc    DWORD PTR [eax+ebp*2],ebp
  410060:	mov    DWORD PTR [edx],ecx
  410062:	inc    edi
  410063:	sbb    al,dh
  410065:	in     eax,dx
  410066:	and    esi,edi
  410068:	ret    
  410069:	div    DWORD PTR [esi-0x72]
  41006c:	(bad)  
  41006d:	cmp    eax,0xf9e99d79
  410072:	sub    ch,bl
  410074:	or     BYTE PTR [edi-0x58d71ce4],bh
  41007a:	mov    cl,BYTE PTR [ecx+0x3b101da6]
  410080:	js     0x4100ac
  410082:	adc    bl,al
  410084:	out    0xaf,eax
  410086:	loopne 0x410107
  410088:	jno    0x410066
  41008a:	mov    ecx,0xaad99442
  41008f:	fidivr DWORD PTR [edx+eiz*4+0x7b]
  410093:	clc    
  410094:	ins    DWORD PTR es:[edi],dx
  410095:	imul   edx,DWORD PTR [eax],0x3e
  410098:	stos   DWORD PTR es:[edi],eax
  410099:	or     bl,al
  41009b:	sbb    al,0x17
  41009d:	jmp    0x39cdc98d
  4100a2:	adc    DWORD PTR [edx+0x71e1b2b6],esi
  4100a8:	xchg   ebx,eax
  4100a9:	cmp    ah,dl
  4100ab:	ja     0x41005a
  4100ad:	pop    eax
  4100ae:	pop    edi
  4100af:	shl    ebp,0x19
  4100b2:	adc    BYTE PTR ds:0x6724319c,dl
  4100b8:	mov    bh,bl
  4100ba:	bound  ebp,QWORD PTR ds:[eax-0x55]
  4100be:	call   0x5012:0x349ccf7e
  4100c5:	imul   BYTE PTR [esi-0x677cbf59]
  4100cb:	jl     0x410078
  4100cd:	jle    0x410067
  4100cf:	xlat   BYTE PTR ds:[ebx]
  4100d0:	pusha  
  4100d1:	push   0x1c183bc9
  4100d6:	pop    ebx
  4100d7:	xchg   dl,bl
  4100d9:	sub    DWORD PTR [eax-0x5393200d],ebp
  4100df:	xchg   ecx,eax
  4100e0:	mov    eax,ss:0x517f575b
  4100e6:	imul   DWORD PTR [edx]
  4100e8:	add    ebp,edi
  4100ea:	pop    ecx
  4100eb:	pop    eax
  4100ec:	sub    DWORD PTR [edi],esi
  4100ee:	pop    ebx
  4100ef:	jmp    0x6276:0x224e7256
  4100f6:	jg     0x4100db
  4100f8:	imul   eax,esi,0xfffffff0
  4100fb:	jae    0x410149
  4100fd:	pop    es
  4100fe:	mov    edx,0xc43f6d47
  410103:	data16 xor al,BYTE PTR [ebx+0x6ed6f0d6]
  41010a:	xor    al,0x89
  41010c:	popa   
  41010d:	add    bh,BYTE PTR [edi+0x75]
  410110:	adc    edx,ebx
  410112:	cli    
  410113:	mov    ds:0x878c832d,al
  410118:	out    0x5e,al
  41011a:	mov    bh,0x9e
  41011c:	jg     0x410195
  41011e:	stos   BYTE PTR es:[edi],al
  41011f:	sbb    eax,eax
  410121:	mov    ebx,0x49478436
  410126:	pop    edx
  410127:	push   0xde722427
  41012c:	push   edx
  41012d:	mov    WORD PTR [ecx-0x7f],ds
  410130:	ins    DWORD PTR es:[edi],dx
  410131:	and    dl,ah
  410133:	rcl    BYTE PTR [ebp+0x50],1
  410136:	add    DWORD PTR [eax],ecx
  410138:	jne    0x4101a6
  41013a:	call   0x9256:0x1374162f
  410141:	(bad)  
  410142:	sbb    bh,BYTE PTR [esi]
  410144:	sbb    bh,BYTE PTR [edx+0x6f5d52b2]
  41014a:	sub    esp,DWORD PTR [ebp-0x58f75679]
  410150:	dec    ebp
  410151:	aaa    
  410152:	pusha  
  410153:	jp     0x410199
  410155:	ss sbb al,0x75
  410158:	xchg   BYTE PTR [edi],ch
  41015a:	or     cl,BYTE PTR [edi]
  41015c:	cmp    eax,0xf1b563bc
  410161:	test   al,0xb5
  410163:	aam    0xda
  410165:	dec    esi
  410166:	clc    
  410167:	cmp    eax,0x7fa9b66a
  41016c:	(bad)  
  41016d:	pop    ebp
  41016e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41016f:	cmc    
  410170:	iret   
  410171:	or     eax,0x4095c561
  410176:	mov    edx,0x8aa528d6
  41017b:	add    eax,edi
  41017d:	fisub  DWORD PTR [esi+ebp*8-0x10796855]
  410184:	or     al,0x18
  410186:	addr16 (bad) 
  410188:	loope  0x410196
  41018a:	xchg   DWORD PTR [ebx-0x1e],edx
  41018d:	lds    ecx,FWORD PTR [esi+0x2406af88]
  410193:	mov    ds:0x5e3d4e55,al
  410198:	inc    ecx
  410199:	test   eax,0x5a1d9295
  41019e:	int3   
  41019f:	outs   dx,DWORD PTR ds:[esi]
  4101a0:	push   0x3a86f721
  4101a5:	or     al,0x61
  4101a7:	or     al,0x34
  4101a9:	es jno 0x4101ab
  4101ac:	fisub  WORD PTR [esi-0x62df3489]
  4101b2:	dec    edi
  4101b3:	pop    ebp
  4101b4:	or     dl,ah
  4101b6:	(bad)  
  4101b7:	sbb    al,0x94
  4101b9:	ins    BYTE PTR es:[edi],dx
  4101ba:	mov    ecx,0xd875b1ae
  4101bf:	jmp    0x6885:0x56e89400
  4101c6:	in     eax,0x4e
  4101c8:	mov    bh,0x3f
  4101ca:	xor    DWORD PTR [esi+eiz*8-0x44c5203e],0xffffff9f
  4101d2:	adc    bh,BYTE PTR [esi+0x8]
  4101d5:	daa    
  4101d6:	in     al,dx
  4101d7:	push   DWORD PTR [edx-0x76]
  4101da:	in     al,0x7b
  4101dc:	jbe    0x41021f
  4101de:	in     al,dx
  4101df:	jmp    0x410260
  4101e1:	and    BYTE PTR [edi+0x4acb9f1e],cl
  4101e7:	retf   
  4101e8:	xchg   edx,eax
  4101e9:	ret    0x49e8
  4101ec:	cs enter 0xa3df,0x9c
  4101f1:	mov    eax,ds:0xfd6a015f
  4101f6:	ja     0x4101bc
  4101f8:	in     eax,dx
  4101f9:	xchg   edx,eax
  4101fa:	ret    0xbc1e
  4101fd:	call   0xfa72:0x3fe49e38
  410204:	dec    edi
  410205:	lock es out 0xf1,al
  410209:	fisubr WORD PTR [ebp-0x682627cd]
  41020f:	add    ecx,DWORD PTR [ebx]
  410211:	lahf   
  410212:	mov    ds:0xbcbfeb5,eax
  410217:	test   eax,0x110c3680
  41021c:	in     al,dx
  41021d:	xchg   ebx,eax
  41021e:	frstor [esi-0x77]
  410221:	inc    ecx
  410222:	fnstsw WORD PTR [edx]
  410224:	mov    dl,0xcd
  410226:	jmp    0x41025e
  410228:	mov    ecx,0x2397d45f
  41022d:	sbb    BYTE PTR [eax-0x402adf78],0xa7
  410234:	pushf  
  410235:	and    eax,0x3b4d971a
  41023a:	jecxz  0x4102ae
  41023c:	les    edi,FWORD PTR [esi]
  41023e:	fnsave [eax]
  410240:	xor    DWORD PTR [ebp+ebp*4+0x43],eax
  410244:	xchg   ecx,eax
  410245:	test   al,0x43
  410247:	sahf   
  410248:	in     eax,0xda
  41024a:	ins    BYTE PTR es:[edi],dx
  41024b:	add    al,0xf4
  41024d:	jp     0x410238
  41024f:	icebp  
  410250:	into   
  410251:	(bad)  
  410252:	or     BYTE PTR [ebx+0x6f],dl
  410255:	pop    ebx
  410256:	into   
  410257:	and    esi,DWORD PTR [ebp-0x78852fee]
  41025d:	and    cl,BYTE PTR [ecx+0x4148539]
  410263:	(bad)  
  410264:	pusha  
  410265:	dec    ebp
  410266:	mov    esi,0xca9fdd58
  41026b:	and    eax,0x701d8b22
  410270:	adc    BYTE PTR [ebx],0xb2
  410273:	adc    edi,DWORD PTR gs:[ebp+edi*1+0x706d488e]
  41027b:	xor    al,0xc8
  41027d:	jecxz  0x410254
  41027f:	in     al,dx
  410280:	xchg   edx,eax
  410281:	ins    DWORD PTR es:[edi],dx
  410282:	jns    0x4102cc
  410284:	ins    BYTE PTR es:[edi],dx
  410285:	in     al,0x41
  410287:	pop    edi
  410288:	dec    esp
  410289:	push   ecx
  41028a:	pmulhuw mm6,QWORD PTR [ebx-0x18]
  41028e:	pop    esi
  41028f:	jno    0x4102da
  410291:	xchg   BYTE PTR [edx],ah
  410293:	stc    
  410294:	jo     0x4102da
  410296:	mov    DWORD PTR [esi],ebp
  410298:	push   ebp
  410299:	push   ebx
  41029a:	jnp    0x4102cd
  41029c:	sub    cl,BYTE PTR [edi-0xd]
  41029f:	push   cs
  4102a0:	lods   eax,DWORD PTR ds:[esi]
  4102a1:	adc    eax,DWORD PTR [edi-0x50]
  4102a4:	or     DWORD PTR [ebx+ebx*1+0x27],edx
  4102a8:	sbb    al,0x5e
  4102aa:	and    dh,BYTE PTR [ebp+0x51b56c68]
  4102b0:	fs retf 
  4102b2:	loop   0x410294
  4102b4:	repz or BYTE PTR ds:0xb497f793,0x89
  4102bc:	xchg   edx,eax
  4102bd:	pop    esp
  4102be:	int3   
  4102bf:	mov    al,ds:0x1ebdf3e6
  4102c4:	fild   DWORD PTR [esi]
  4102c6:	pop    ecx
  4102c7:	and    DWORD PTR [eax-0x47b38196],eax
  4102cd:	pop    esp
  4102ce:	pop    esp
  4102cf:	cli    
  4102d0:	test   ebp,0x6882aba8
  4102d6:	sbb    eax,0x82eb38a2
  4102db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102dc:	cli    
  4102dd:	dec    esp
  4102de:	mov    al,ds:0x3eced1ba
  4102e3:	pop    esp
  4102e4:	xor    DWORD PTR [eax],esp
  4102e6:	sub    eax,0xcaf45fc5
  4102eb:	ret    
  4102ec:	lods   eax,DWORD PTR ds:[esi]
  4102ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102ee:	clc    
  4102ef:	jge    0x4102a9
  4102f1:	rol    DWORD PTR [eax+0x7f7620b3],0x48
  4102f8:	adc    al,0xbc
  4102fa:	lods   eax,DWORD PTR ds:[esi]
  4102fb:	gs xchg ebx,edi
  4102fe:	je     0x410319
  410300:	push   0x31
  410302:	mov    esp,0xfc4ef22a
  410307:	push   ds
  410308:	popa   
  410309:	cmp    DWORD PTR [eax-0x33],ecx
  41030c:	sbb    ch,ah
  41030e:	jno    0x410350
  410310:	ins    BYTE PTR es:[edi],dx
  410311:	(bad)  
  410312:	clc    
  410313:	xchg   edx,eax
  410314:	pop    ebx
  410315:	jb     0x4102ce
  410317:	fistp  QWORD PTR [ecx+0x60]
  41031a:	pop    ss
  41031b:	mov    ebp,0x21e2c379
  410320:	dec    eax
  410321:	jl     0x41037e
  410323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410324:	scas   eax,DWORD PTR es:[edi]
  410325:	sti    
  410326:	push   esi
  410327:	jbe    0x4102e1
  410329:	imul   ebp,DWORD PTR [edi+0x6e72cd5f],0xdeae7699
  410333:	adc    al,0xc6
  410335:	dec    ebx
  410336:	in     al,dx
  410337:	pop    esi
  410338:	and    BYTE PTR [ecx],bh
  41033a:	pop    edi
  41033b:	in     al,0x76
  41033d:	xor    ebp,esp
  41033f:	test   al,0x7a
  410341:	shl    BYTE PTR [ecx-0x58],cl
  410344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410345:	inc    ebp
  410346:	aam    0x1d
  410348:	xor    BYTE PTR [esi+0x5c],ah
  41034b:	aad    0xc
  41034d:	mov    gs,WORD PTR [edi+0x21f9373b]
  410353:	or     bh,BYTE PTR [edi+0x40]
  410356:	hlt    
  410357:	sub    BYTE PTR [ebx-0x1b],al
  41035a:	out    0xf2,al
  41035c:	das    
  41035d:	sbb    eax,0xeace222c
  410362:	inc    ebp
  410363:	call   0xa7a22c36
  410368:	cmp    al,0xc9
  41036a:	lds    esp,FWORD PTR [eax+0x10]
  41036d:	in     eax,dx
  41036e:	and    esi,DWORD PTR [edx-0x60922029]
  410374:	dec    esp
  410375:	(bad)  
  410376:	ficomp WORD PTR [ecx+0x25af05c1]
  41037c:	dec    ebx
  41037d:	int    0x32
  41037f:	imul   esi,ebx,0x5d
  410382:	push   ss
  410383:	addr16 xchg ebx,eax
  410385:	sbb    dl,ah
  410387:	sbb    ah,dh
  410389:	and    al,0x70
  41038b:	pop    esp
  41038c:	push   esp
  41038d:	imul   esi,ecx,0xbc126e91
  410393:	cmp    DWORD PTR [esi-0x468eadfb],edi
  410399:	inc    esi
  41039a:	(bad)  
  41039b:	cdq    
  41039c:	repnz push cs
  41039e:	stc    
  41039f:	or     ebx,DWORD PTR [ecx+0x6c8f2267]
  4103a5:	sbb    bh,BYTE PTR [edx+esi*1+0x7b]
  4103a9:	cmp    cl,0x56
  4103ac:	cmp    ch,ah
  4103ae:	jae    0x4103c7
  4103b0:	cwde   
  4103b1:	pop    ds
  4103b2:	out    dx,eax
  4103b3:	nop
  4103b4:	int    0xc1
  4103b6:	loop   0x410417
  4103b8:	and    eax,0x2257f956
  4103bd:	jmp    0x410427
  4103bf:	add    ah,bl
  4103c1:	inc    ebx
  4103c2:	or     eax,0x12a616c
  4103c7:	lahf   
  4103c8:	jns    0x41040b
  4103ca:	retf   0xb8d
  4103cd:	in     al,dx
  4103ce:	dec    edx
  4103cf:	add    DWORD PTR [ecx-0x6083374b],edi
  4103d5:	jmp    0x41037c
  4103d7:	sub    DWORD PTR [eax+0x74f7389b],0x8d4f6d88
  4103e1:	xchg   esp,eax
  4103e2:	jbe    0x4103cc
  4103e4:	bound  ebx,QWORD PTR ds:0xf1d60904
  4103ea:	mov    ds:0x969ed7f0,eax
  4103ef:	xchg   ebx,eax
  4103f0:	ffreep st(0)
  4103f2:	rol    BYTE PTR [edi+0x5f5ae3a9],1
  4103f8:	inc    edi
  4103f9:	mov    WORD PTR [esi-0x4],ss
  4103fc:	jl     0x4103ed
  4103fe:	mov    ah,0x12
  410400:	test   DWORD PTR [ecx-0x1bb30e0],esi
  410406:	mov    DWORD PTR [ebp+eax*4-0x68626e02],edi
  41040d:	cli    
  41040e:	xrelease mov BYTE PTR [edi-0x5307a76a],dh
  410415:	adc    cl,bl
  410417:	test   BYTE PTR [esp+ecx*2+0x7c],ch
  41041b:	scas   eax,DWORD PTR es:[edi]
  41041c:	aaa    
  41041d:	or     DWORD PTR [ecx-0x1fd8553f],ebx
  410423:	sbb    BYTE PTR [eax],dh
  410425:	leave  
  410426:	push   edx
  410427:	dec    ebp
  410428:	adc    eax,0x7a9fcde6
  41042d:	pop    ds
  41042e:	sbb    dl,cl
  410430:	(bad)  [ebx-0x2ecb11c8]
  410436:	push   ds
  410437:	mov    bl,0x8
  410439:	xchg   edi,ebp
  41043b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41043c:	push   0x26090e2
  410441:	sahf   
  410442:	js     0x4103d0
  410444:	retf   
  410445:	push   ebp
  410446:	adc    eax,0xd8d88e78
  41044b:	and    DWORD PTR [esp+0x2c6244],edx
  410452:	lea    ebp,[esi-0x3ceecac0]
  410458:	sub    eax,0xf74e3e
  41045d:	pop    ebx
  41045e:	pop    ecx
  41045f:	cmp    BYTE PTR [edi+eax*2],ah
  410462:	jb     0x4103f5
  410464:	sbb    eax,0x3d5a80c6
  410469:	pop    eax
  41046a:	and    edi,DWORD PTR [ebx-0x52]
  41046d:	add    bh,BYTE PTR [esi-0x200e082d]
  410473:	jmp    0x4103f8
  410475:	retf   
  410476:	sar    DWORD PTR [ebp+0x320e6e48],1
  41047c:	arpl   ax,cx
  41047e:	and    eax,0x8fc76011
  410483:	sbb    eax,0x19d0e642
  410488:	fistp  QWORD PTR [ebp+0xb]
  41048b:	fwait
  41048c:	adc    al,BYTE PTR [ebx+0x42753a44]
  410492:	push   0xcfdd809a
  410497:	push   0x43
  410499:	(bad)  
  41049a:	aad    0x4c
  41049c:	or     dh,bh
  41049e:	cmp    al,0xea
  4104a0:	call   0xd708:0xf9345a3c
  4104a7:	xor    BYTE PTR ss:[ecx+0x47],bl
  4104ab:	mov    esi,DWORD PTR [esp+ebx*8]
  4104ae:	add    ecx,ecx
  4104b0:	stos   DWORD PTR es:[edi],eax
  4104b1:	ss inc ecx
  4104b3:	call   0xeac0eeac
  4104b8:	sub    al,0xe9
  4104ba:	hlt    
  4104bb:	pushf  
  4104bc:	xor    esp,DWORD PTR [esi+0x14]
  4104bf:	test   al,0x1f
  4104c1:	sub    al,BYTE PTR [ecx]
  4104c3:	inc    edi
  4104c4:	bound  eax,QWORD PTR [ecx+0x38365f08]
  4104ca:	mov    bl,0x90
  4104cc:	push   ss
  4104cd:	mov    ah,0x64
  4104cf:	repz call 0xae49:0xb0838b5f
  4104d7:	mov    ebp,0x139130fa
  4104dc:	jp     0x41053b
  4104de:	mov    ah,0xf8
  4104e0:	push   ds
  4104e1:	pushf  
  4104e2:	cdq    
  4104e3:	xchg   ebp,eax
  4104e4:	jmp    0x487e234d
  4104e9:	inc    esi
  4104ea:	imul   edi,DWORD PTR [eax-0x1af01eb5],0xffffff94
  4104f1:	rcr    DWORD PTR [edx+0x3e7cb942],1
  4104f7:	fs cmp ebp,ebp
  4104fa:	ins    BYTE PTR es:[edi],dx
  4104fb:	inc    ebp
  4104fc:	xor    DWORD PTR [ebx],esp
  4104fe:	je     0x410552
  410500:	jg     0x410539
  410502:	mov    cl,0x62
  410504:	js     0x41049f
  410506:	repz sahf 
  410508:	sahf   
  410509:	test   eax,0x23e34b00
  41050e:	adc    al,BYTE PTR [ebx+0x7]
  410511:	push   esp
  410512:	sbb    bl,bh
  410514:	(bad)  
  410515:	push   0x24
  410517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410518:	ficomp WORD PTR [edi-0x16]
  41051b:	fiadd  WORD PTR [edi]
  41051d:	xchg   BYTE PTR [edx+eiz*4],cl
  410520:	sub    BYTE PTR [edx+ecx*1-0x6d182472],dh
  410527:	mov    ebx,0xfceb142f
  41052c:	or     edx,esp
  41052e:	mov    edi,0xa21744b0
  410533:	aad    0x31
  410535:	pop    ecx
  410536:	mov    ebx,ecx
  410538:	stos   BYTE PTR es:[edi],al
  410539:	add    ah,BYTE PTR [esi-0x3c]
  41053c:	jmp    0xce43:0x32fadd81
  410543:	xchg   ebp,eax
  410544:	cmp    DWORD PTR [esi+ecx*2+0xb],edi
  410548:	and    al,0xd1
  41054a:	clc    
  41054b:	loopne 0x410570
  41054d:	adc    DWORD PTR [edi+0x4f25e16e],ebp
  410553:	lods   eax,DWORD PTR ds:[esi]
  410554:	push   ebx
  410555:	ror    edi,0xad
  410558:	pop    ss
  410559:	jno    0x410539
  41055b:	xchg   esi,eax
  41055c:	fisttp WORD PTR [ebx+ebx*1+0x5926cbb5]
  410563:	lock jb 0x410594
  410566:	push   ecx
  410567:	inc    ebx
  410568:	pop    ss
  410569:	imul   ebp,ebp,0x5861e0c
  41056f:	cmp    ebx,edx
  410571:	push   edx
  410572:	repz add BYTE PTR [ecx],bh
  410575:	imul   esp,DWORD PTR [edx],0x2f
  410578:	pushf  
  410579:	cwde   
  41057a:	stos   BYTE PTR es:[edi],al
  41057b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41057c:	mov    ecx,ebx
  41057e:	xor    al,0x65
  410580:	sbb    BYTE PTR ss:[edx-0x33],cl
  410584:	arpl   WORD PTR [edx+0x12],cx
  410587:	push   ds
  410588:	fwait
  410589:	mov    ebx,DWORD PTR [ecx+0x77]
  41058c:	popf   
  41058d:	ins    DWORD PTR es:[edi],dx
  41058e:	mov    ebp,DWORD PTR [eax+0x7]
  410591:	adc    DWORD PTR ds:0x8112f116,ebx
  410597:	daa    
  410598:	shl    DWORD PTR [ebp+0x26452d38],0x93
  41059f:	or     esi,DWORD PTR [edx]
  4105a1:	mov    al,ds:0x98123a3a
  4105a6:	mov    ah,0x12
  4105a8:	in     eax,0x4b
  4105aa:	dec    edi
  4105ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105ac:	mov    edi,0x4707826e
  4105b1:	shl    DWORD PTR [edi-0x7bb7d0c0],1
  4105b7:	fdiv   QWORD PTR [edi-0x4fe44c96]
  4105bd:	and    BYTE PTR [edx+ebp*1],bh
  4105c0:	mov    bl,0x75
  4105c2:	std    
  4105c3:	xchg   edx,eax
  4105c4:	nop
  4105c5:	push   ebx
  4105c6:	mov    ah,0xe8
  4105c8:	cdq    
  4105c9:	xor    bl,0x44
  4105cc:	mov    ch,0xd3
  4105ce:	fstp   DWORD PTR [eax+edx*8-0x6a8730a1]
  4105d5:	jp     0x4105c2
  4105d7:	or     al,0xc7
  4105d9:	dec    edx
  4105da:	sub    al,0x99
  4105dc:	push   esi
  4105dd:	lahf   
  4105de:	mov    ah,0x5a
  4105e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105e1:	xor    BYTE PTR [eax-0x72],0x9c
  4105e5:	jl     0x41061e
  4105e7:	push   0x2f
  4105e9:	dec    esi
  4105ea:	ins    BYTE PTR es:[edi],dx
  4105eb:	mov    cl,BYTE PTR [ebp-0x652a4858]
  4105f1:	xchg   ecx,eax
  4105f2:	jbe    0x410600
  4105f4:	xor    eax,0x16472a7d
  4105f9:	pop    es
  4105fa:	int    0x45
  4105fc:	inc    ecx
  4105fd:	jb     0x41063f
  4105ff:	sbb    DWORD PTR [eax],0xffffffba
  410602:	push   ebp
  410603:	ins    DWORD PTR es:[edi],dx
  410604:	xlat   BYTE PTR ds:[ebx]
  410605:	add    ebx,DWORD PTR [ecx-0x400af806]
  41060b:	imul   ebp,DWORD PTR [edi+edi*4+0x63],0x66
  410610:	lods   eax,DWORD PTR ds:[esi]
  410611:	and    al,0xb1
  410613:	ja     0x410670
  410615:	(bad)  
  410616:	cdq    
  410617:	add    edx,DWORD PTR [esi+0x39]
  41061a:	test   DWORD PTR [ebx-0xc],esi
  41061d:	mov    cl,0x15
  41061f:	dec    ebx
  410620:	inc    esp
  410621:	mov    ds:0x57cd0f49,eax
  410626:	inc    eax
  410627:	cmp    ebx,DWORD PTR [esi+0x73]
  41062a:	fs pop ecx
  41062c:	mov    edi,0x27b42f75
  410631:	popf   
  410632:	jg     0x4105d7
  410634:	jge    0x41064e
  410636:	push   es
  410637:	loope  0x4105c5
  410639:	mov    bl,BYTE PTR [edx+0x54]
  41063c:	ja     0x41063c
  41063e:	test   BYTE PTR [ebx],0x3b
  410641:	in     eax,0x5
  410643:	fcomp  QWORD PTR [ebx+0x36436f85]
  410649:	cmp    eax,0x1f7c53d1
  41064e:	pop    DWORD PTR [edx-0x55425003]
  410654:	aas    
  410655:	stos   BYTE PTR es:[edi],al
  410656:	xor    DWORD PTR gs:0x79da67e7,edx
  41065d:	and    BYTE PTR [ecx],cl
  41065f:	icebp  
  410660:	mov    ds:0xfb9bdcbf,al
  410665:	inc    ebp
  410666:	jmp    0x41063b
  410668:	sahf   
  410669:	mov    edx,0x8da64dcc
  41066e:	idiv   ah
  410670:	mov    cl,0x4e
  410672:	imul   ecx,DWORD PTR [edi],0x18
  410675:	sub    DWORD PTR [edx],edi
  410677:	in     al,dx
  410678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410679:	mov    eax,0x406879b
  41067e:	xchg   ebp,eax
  41067f:	sar    DWORD PTR [edi+edi*1+0x4dfa39cf],0x27
  410687:	inc    eax
  410688:	or     esi,DWORD PTR [ecx-0xb]
  41068b:	ja     0x41069c
  41068d:	loopne 0x41067e
  41068f:	lock jae 0x41062f
  410692:	inc    DWORD PTR [eax]
  410694:	or     al,0x86
  410696:	xchg   esi,eax
  410697:	scas   eax,DWORD PTR es:[edi]
  410698:	mov    dl,cl
  41069a:	dec    edi
  41069b:	xor    DWORD PTR ds:0xd91ae67f,edi
  4106a1:	(bad)  
  4106a2:	fist   WORD PTR [esi+0x53]
  4106a5:	daa    
  4106a6:	arpl   bp,bx
  4106a8:	mov    ds:0x77d7d8d8,al
  4106ad:	jae    0x410681
  4106af:	(bad)  
  4106b0:	fbstp  TBYTE PTR [eax]
  4106b2:	imul   BYTE PTR [eax+0x6e63f0df]
  4106b8:	lock pusha 
  4106ba:	adc    eax,0x8bfbd840
  4106bf:	dec    edi
  4106c0:	scas   eax,DWORD PTR es:[edi]
  4106c1:	cmp    ebp,eax
  4106c3:	add    al,0x84
  4106c5:	repnz push 0x6f
  4106c8:	sar    DWORD PTR [ebx+ecx*8+0x4b6dab28],1
  4106cf:	mov    edx,0x9670054a
  4106d4:	dec    ebx
  4106d5:	aad    0x1a
  4106d7:	pop    esp
  4106d8:	cli    
  4106d9:	mov    bh,0x9e
  4106db:	pop    esp
  4106dc:	cmp    al,0x8f
  4106de:	mov    ebx,edx
  4106e0:	cmp    esp,edx
  4106e2:	mov    eax,0x9f141cd1
  4106e7:	jb     0x41071c
  4106e9:	xor    DWORD PTR [eax],edx
  4106eb:	out    0x83,eax
  4106ed:	std    
  4106ee:	xchg   esp,ecx
  4106f0:	push   esp
  4106f1:	pop    edi
  4106f2:	or     BYTE PTR [edi+0x7c],0xbd
  4106f6:	mov    edx,0x8f7c8738
  4106fb:	push   es
  4106fc:	fidiv  DWORD PTR ds:0x69c1626d
  410702:	stc    
  410703:	mov    al,ds:0xe58a7f6b
  410708:	mov    al,0x9c
  41070a:	mov    bl,0x47
  41070c:	stos   DWORD PTR es:[edi],eax
  41070d:	(bad)  
  41070e:	jo     0x41071d
  410710:	retf   0x9624
  410713:	and    eax,0xbd6dfd41
  410718:	mov    al,0xdc
  41071a:	fidiv  DWORD PTR [edi-0x4ed7977a]
  410720:	sbb    ebp,DWORD PTR [eax+0x58]
  410723:	pop    ecx
  410724:	in     eax,0xe
  410726:	sub    al,0x9d
  410728:	clc    
  410729:	lea    ebp,[ebp+eiz*1+0x27]
  41072d:	lds    edi,FWORD PTR [ebx]
  41072f:	arpl   WORD PTR [ebp-0x417f79f],di
  410735:	pmaxsw mm3,mm7
  410738:	xor    dl,BYTE PTR [ebp-0x18]
  41073b:	mov    ds:0x444984e3,eax
  410740:	add    bl,BYTE PTR [edi]
  410742:	mov    dh,0x60
  410744:	mov    edx,0x6ed92a2b
  410749:	cmp    bl,dl
  41074b:	pop    ds
  41074c:	pusha  
  41074d:	out    dx,eax
  41074e:	and    al,0x7c
  410750:	and    al,0x2c
  410752:	std    
  410753:	mov    ecx,0xed184273
  410758:	out    0xc3,al
  41075a:	icebp  
  41075b:	pop    ss
  41075c:	and    al,0x9e
  41075e:	sbb    al,0x2b
  410760:	mov    edi,0x7a6a0113
  410765:	xor    eax,0x816b3ced
  41076a:	mov    bl,0x4d
  41076c:	(bad)
  41076f:	adc    al,0xd3
  410771:	nop
  410772:	ret    
  410773:	push   ecx
  410774:	cli    
  410775:	pop    edi
  410776:	mov    BYTE PTR [ecx],bl
  410778:	fnstsw WORD PTR es:[edi-0x77460134]
  41077f:	fdiv   DWORD PTR [eax-0x74381450]
  410785:	add    DWORD PTR ds:[edi+0xde8404b],ebp
  41078c:	fcom   DWORD PTR [edx]
  41078e:	arpl   dx,dx
  410790:	or     al,0xb6
  410792:	fs stc 
  410794:	shr    BYTE PTR [edx+0x2cdad95e],cl
  41079a:	dec    edx
  41079b:	pop    ds
  41079c:	sub    al,0x3d
  41079e:	jnp    0x41077c
  4107a0:	jl     0x41072d
  4107a2:	rcr    DWORD PTR [edi+0x42a0db35],1
  4107a8:	ror    BYTE PTR [ebx-0x67],cl
  4107ab:	mov    ebp,0x638845de
  4107b0:	je     0x4107f5
  4107b2:	(bad)  
  4107b3:	ficomp WORD PTR [esi+0x39]
  4107b6:	pusha  
  4107b7:	imul   esp,edx,0x6e
  4107ba:	rcl    BYTE PTR [edi],1
  4107bc:	das    
  4107bd:	pop    esp
  4107be:	mov    ecx,0xba6cc06f
  4107c3:	out    0x2d,eax
  4107c5:	inc    ecx
  4107c6:	out    dx,eax
  4107c7:	not    DWORD PTR [eax-0x1adf26f4]
  4107cd:	fistp  WORD PTR [esi-0x386a8f06]
  4107d3:	popa   
  4107d4:	xchg   ecx,edi
  4107d6:	mov    ebx,0xbd393a55
  4107db:	jno    0x41076b
  4107dd:	test   al,0x0
  4107df:	cli    
  4107e0:	sbb    edi,edi
  4107e2:	jp     0x410850
  4107e4:	mov    dh,BYTE PTR [ebp+0x43]
  4107e7:	dec    esi
  4107e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107e9:	sub    dl,BYTE PTR [edi]
  4107eb:	call   0xa7a39577
  4107f0:	(bad)  
  4107f2:	mov    cl,0xb6
  4107f4:	push   ss
  4107f5:	push   ebx
  4107f6:	xchg   DWORD PTR [ebp-0x43],ebx
  4107f9:	stc    
  4107fa:	pop    esp
  4107fb:	or     al,0x62
  4107fd:	xchg   edx,eax
  4107fe:	dec    edx
  4107ff:	xchg   ebp,eax
  410800:	dec    BYTE PTR [edx-0x5855d6f]
  410806:	test   BYTE PTR [eax+eax*1-0x2d473a8f],bh
  41080d:	add    ebx,DWORD PTR [eax-0x13]
  410810:	mov    bl,0xf4
  410812:	dec    esp
  410813:	cmp    al,0xd6
  410815:	adc    BYTE PTR [esi],al
  410817:	neg    BYTE PTR [ebp-0x2709b132]
  41081d:	lods   al,BYTE PTR ds:[esi]
  41081e:	into   
  41081f:	out    0x5b,eax
  410821:	or     bl,BYTE PTR [ebp+edi*2+0x1f1c543e]
  410828:	or     eax,edi
  41082a:	data16 jno 0x410852
  41082d:	dec    ebp
  41082e:	xchg   esp,eax
  41082f:	sub    al,0xac
  410831:	retf   
  410832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410833:	add    DWORD PTR [edx],ebp
  410835:	cwde   
  410836:	stos   DWORD PTR es:[edi],eax
  410837:	arpl   cx,bp
  410839:	repnz (bad) [ebp-0x19ff97bb]
  410840:	mov    esi,0xb8b2f607
  410845:	aad    0x8
  410847:	xchg   esp,eax
  410848:	mov    bh,0x2c
  41084a:	or     BYTE PTR [edx],dl
  41084c:	enter  0x837d,0x95
  410850:	mov    al,0x13
  410852:	sti    
  410853:	lahf   
  410854:	pop    esi
  410855:	pop    ss
  410856:	pop    es
  410857:	imul   edi,DWORD PTR [ebx+0x46],0x54f045fa
  41085e:	cdq    
  41085f:	jmp    0x97af49b9
  410864:	fs es jp 0x410863
  410868:	dec    edx
  410869:	(bad)  
  41086a:	jmp    0xb0fc:0xbdbcebfb
  410871:	mov    dh,0xb5
  410873:	pop    eax
  410874:	imul   esi,DWORD PTR [esi+esi*8],0x36
  410878:	retf   0x716
  41087b:	imul   esi,DWORD PTR [ebx],0x72986299
  410881:	push   eax
  410882:	fbstp  TBYTE PTR [ecx+edx*4-0x53cbac75]
  410889:	cdq    
  41088a:	jne    0x4108af
  41088c:	mov    esp,0x535a16db
  410891:	fs cdq 
  410893:	call   0x957f477c
  410898:	dec    ebp
  410899:	out    dx,al
  41089a:	dec    esi
  41089b:	cli    
  41089c:	(bad)  
  41089d:	and    cl,BYTE PTR [esp+edi*2+0x2d]
  4108a1:	add    BYTE PTR [esi],0x29
  4108a4:	dec    eax
  4108a5:	stos   BYTE PTR es:[edi],al
  4108a6:	jbe    0x41083a
  4108a8:	fcomip st,st(5)
  4108aa:	pop    edi
  4108ab:	mov    ah,0x10
  4108ad:	jl     0x410869
  4108af:	cmc    
  4108b0:	stc    
  4108b1:	cmp    dh,BYTE PTR [ebx]
  4108b3:	jg     0x4108bf
  4108b5:	mov    DWORD PTR [esi],edx
  4108b7:	or     al,0x10
  4108b9:	xchg   ebp,eax
  4108ba:	push   ss
  4108bb:	xchg   BYTE PTR [ecx-0x1eea060f],dh
  4108c1:	inc    eax
  4108c2:	xor    edi,ecx
  4108c4:	mov    ebp,0x652aebd0
  4108c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108ca:	mov    cl,0xfa
  4108cc:	pop    es
  4108cd:	mov    cl,0xe8
  4108cf:	int3   
  4108d0:	cs ret 0xe35
  4108d4:	cld    
  4108d5:	mov    edx,DWORD PTR [ebp-0x7f722c62]
  4108db:	mov    eax,0x5e45576b
  4108e0:	nop
  4108e1:	fisubr WORD PTR [esp+ebp*4]
  4108e4:	mov    ecx,0x911e0cf5
  4108e9:	inc    esp
  4108ea:	mov    ch,0xbd
  4108ec:	aas    
  4108ed:	lahf   
  4108ee:	(bad)
  4108f3:	(bad)  
  4108f4:	in     al,0x74
  4108f6:	push   ss
  4108f7:	push   eax
  4108f8:	(bad)  
  4108f9:	aam    0xf
  4108fb:	and    al,0x22
  4108fd:	sbb    DWORD PTR [ecx+0x6d],esp
  410900:	ins    BYTE PTR es:[edi],dx
  410901:	push   ds
  410902:	push   es
  410903:	call   0x4611d401
  410908:	sti    
  410909:	clc    
  41090a:	inc    ecx
  41090b:	or     ecx,eax
  41090d:	mov    al,0xf
  41090f:	repnz aaa 
  410911:	cmp    edi,esp
  410913:	push   edi
  410914:	leave  
  410915:	data16 fcom QWORD PTR [edi-0xb]
  410919:	xor    DWORD PTR [ebp-0x7f0156c6],0xffffffa8
  410920:	xchg   ecx,eax
  410921:	loopne 0x410992
  410923:	pop    ebx
  410924:	inc    ebx
  410925:	mov    edx,0x1a42ee30
  41092a:	xor    cl,ch
  41092c:	xchg   edi,eax
  41092d:	sar    BYTE PTR [esi+0x70],1
  410930:	xchg   esp,eax
  410931:	sbb    dh,BYTE PTR [eax]
  410933:	mov    cl,0xb7
  410935:	sbb    ah,BYTE PTR [esi-0x5c]
  410938:	stos   DWORD PTR es:[edi],eax
  410939:	loope  0x4108f1
  41093b:	mov    ch,0x89
  41093d:	jne    0x410994
  41093f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410940:	(bad)  
  410942:	sahf   
  410943:	ret    
  410944:	add    ebx,DWORD PTR [eax]
  410946:	ds in  al,0x38
  410949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41094a:	jge    0x4109ad
  41094c:	bound  ebp,QWORD PTR [ecx-0x7d]
  41094f:	adc    eax,DWORD PTR [edx]
  410951:	jo     0x410922
  410953:	push   esi
  410954:	adc    al,0x1d
  410956:	cmp    DWORD PTR ds:0x55253ea,edi
  41095c:	inc    eax
  41095d:	mov    cs,WORD PTR [edx-0x33]
  410960:	popa   
  410961:	aam    0x6b
  410963:	adc    al,0x1
  410965:	lea    eax,[ebx-0x7]
  410968:	rcl    BYTE PTR [ebp-0x3f],0xf0
  41096c:	mov    ebx,esp
  41096e:	icebp  
  41096f:	xlat   BYTE PTR ds:[ebx]
  410970:	push   esp
  410971:	fcom   DWORD PTR [edx]
  410973:	lods   eax,DWORD PTR ds:[esi]
  410974:	in     eax,0x67
  410976:	(bad)  
  410977:	es dec esi
  410979:	mov    eax,ebx
  41097b:	inc    esi
  41097c:	push   ss
  41097d:	jmp    0x5c4fc5ad
  410982:	retf   0x3bcf
  410985:	xchg   ebp,eax
  410986:	repnz loope 0x41093e
  410989:	dec    ebx
  41098a:	inc    edi
  41098b:	lods   eax,DWORD PTR ds:[esi]
  41098c:	pop    esp
  41098d:	cmc    
  41098e:	mov    al,ds:0xfdb1866d
  410993:	(bad)  
  410994:	fwait
  410995:	mov    WORD PTR [edx+edx*2],cs
  410998:	ins    DWORD PTR es:[edi],dx
  410999:	or     dh,BYTE PTR [eax]
  41099b:	fcmove st,st(5)
  41099d:	mov    esp,0xa09a6d61
  4109a2:	jo     0x4109fd
  4109a4:	adc    ecx,DWORD PTR [edx]
  4109a6:	xchg   edx,eax
  4109a7:	pop    esp
  4109a8:	fild   DWORD PTR [edx]
  4109aa:	retf   0xb984
  4109ad:	repz (bad) 
  4109af:	fbstp  TBYTE PTR [ecx]
  4109b1:	dec    esp
  4109b2:	loopne 0x410972
  4109b4:	inc    eax
  4109b5:	pop    edi
  4109b6:	sbb    al,0x7c
  4109b8:	xchg   DWORD PTR [eax+0x62],esi
  4109bb:	mov    edx,0x5ff56db5
  4109c0:	ret    0x633b
  4109c3:	pop    ecx
  4109c4:	add    DWORD PTR [eax-0x3583c0a2],edx
  4109ca:	xor    al,0x2
  4109cc:	add    edx,DWORD PTR [ebx+0xe]
  4109cf:	retf   0x3c81
  4109d2:	aaa    
  4109d3:	lea    eax,gs:[edi]
  4109d6:	das    
  4109d7:	mov    ebp,0xf3e6f49e
  4109dc:	push   ebp
  4109dd:	cmp    al,0x76
  4109df:	pushf  
  4109e0:	adc    DWORD PTR [ebp+0x7fd87713],edx
  4109e6:	mov    edi,0x965d6587
  4109eb:	js     0x4109b1
  4109ed:	mov    esi,0xe6d054b2
  4109f2:	push   es
  4109f3:	sbb    al,0xc8
  4109f5:	lods   al,BYTE PTR ds:[esi]
  4109f6:	push   ds
  4109f7:	xchg   edx,eax
  4109f8:	pop    esp
  4109f9:	pop    ecx
  4109fa:	xchg   esi,eax
  4109fb:	les    edi,FWORD PTR [ecx+0x673a3a1a]
  410a01:	xor    al,0xa3
  410a03:	aaa    
  410a04:	and    al,BYTE PTR [ebx-0x79]
  410a07:	into   
  410a08:	push   esp
  410a09:	pop    edx
  410a0a:	not    DWORD PTR [esi]
  410a0c:	cmp    BYTE PTR [esi],al
  410a0e:	inc    ecx
  410a0f:	inc    edi
  410a10:	xchg   esp,eax
  410a11:	inc    ecx
  410a12:	adc    ebp,DWORD PTR [ebp-0x25d63621]
  410a18:	mov    esp,0x8a99c7f0
  410a1d:	lock cmp BYTE PTR [ecx+0x76ad112e],bl
  410a24:	xlat   BYTE PTR ds:[ebx]
  410a25:	pop    eax
  410a26:	jns    0x4109dc
  410a28:	rcl    esi,cl
  410a2a:	or     BYTE PTR [eax+0x66],0x54
  410a2e:	sub    eax,0x25b8d1eb
  410a33:	mov    edx,0xdd6e44b9
  410a38:	mov    dh,0x2e
  410a3a:	icebp  
  410a3b:	sub    edx,DWORD PTR [ecx+ecx*1]
  410a3e:	loope  0x410a19
  410a40:	mov    al,ds:0xa5e12031
  410a45:	imul   edx,DWORD PTR [eax-0x2e043619],0xd2d3d379
  410a4f:	lea    ecx,[eax]
  410a51:	daa    
  410a52:	push   es
  410a53:	xor    dh,BYTE PTR [ecx]
  410a55:	and    edx,0x1b92bf1d
  410a5b:	xor    DWORD PTR [ecx+0x67],edi
  410a5e:	stos   BYTE PTR es:[edi],al
  410a5f:	inc    esp
  410a60:	cmp    eax,0x28aa0fc7
  410a65:	loopne 0x410ab4
  410a67:	jge    0x410a61
  410a69:	jmp    0x7c2a756e
  410a6e:	les    edi,FWORD PTR [esi+0x66]
  410a71:	adc    edx,0x5d
  410a74:	ffreep st(3)
  410a76:	jnp    0x410a8d
  410a78:	xor    esi,esi
  410a7a:	je     0x410a38
  410a7c:	std    
  410a7d:	inc    ecx
  410a7e:	cmp    ch,BYTE PTR [esi+0x51]
  410a81:	sbb    cl,BYTE PTR [ebp+0x7d83d4d8]
  410a87:	sbb    dl,BYTE PTR [esi-0x36]
  410a8a:	pop    ebx
  410a8b:	add    ecx,DWORD PTR [edx+eax*1+0x12]
  410a8f:	retf   0x9d00
  410a92:	dec    edi
  410a93:	jns    0x410a44
  410a95:	dec    edx
  410a96:	lock imul edi,DWORD PTR [esi-0x29],0xd97d3185
  410a9e:	mov    esi,0xcb7634c6
  410aa3:	sub    al,0x92
  410aa5:	(bad)  
  410aa6:	jns    0x410ab3
  410aa8:	and    esp,DWORD PTR [esi+eiz*2-0x52]
  410aac:	mov    dl,0x4
  410aae:	loop   0x410aa4
  410ab0:	jns    0x410aa1
  410ab2:	gs add eax,0x13297ce9
  410ab8:	sub    DWORD PTR [ebx],0xeed1ab98
  410abe:	int3   
  410abf:	xor    bh,BYTE PTR [ebp-0x25]
  410ac2:	adc    ch,BYTE PTR ds:0x38175723
  410ac8:	lea    edi,[edi]
  410aca:	jg     0x410ab7
  410acc:	loop   0x410a76
  410ace:	xor    BYTE PTR [edi+0x70],0x43
  410ad2:	std    
  410ad3:	test   eax,0x768d7776
  410ad8:	jbe    0x410ab0
  410ada:	inc    ecx
  410adb:	dec    edi
  410adc:	rcr    ecx,0xb
  410adf:	and    eax,0x5095e4ea
  410ae4:	lods   eax,DWORD PTR ds:[esi]
  410ae5:	out    dx,al
  410ae6:	jnp    0x410a76
  410ae8:	fmul   DWORD PTR [esi-0x6d2bf05e]
  410aee:	inc    ebp
  410aef:	pop    esp
  410af0:	clc    
  410af1:	call   0x5472364b
  410af6:	cdq    
  410af7:	fild   WORD PTR [edx+0x2f0919e4]
  410afd:	dec    ecx
  410afe:	mov    al,ds:0x58bd860a
  410b03:	push   ebp
  410b04:	test   eax,0x204e1d95
  410b09:	cld    
  410b0a:	sbb    eax,0x11763b57
  410b0f:	push   ebp
  410b10:	push   edx
  410b11:	lods   al,BYTE PTR ds:[esi]
  410b12:	jbe    0x410ac7
  410b14:	jmp    0x410b5c
  410b16:	(bad)  
  410b17:	sbb    ebx,DWORD PTR [edi-0x80]
  410b1a:	sub    dh,al
  410b1c:	xor    ecx,edx
  410b1e:	xchg   DWORD PTR [edx],ebp
  410b20:	add    ah,BYTE PTR [eax+esi*8-0x52]
  410b24:	out    0x37,eax
  410b26:	push   eax
  410b27:	into   
  410b28:	push   es
  410b29:	daa    
  410b2a:	outs   dx,BYTE PTR ds:[esi]
  410b2b:	sbb    dh,BYTE PTR [ebx]
  410b2d:	arpl   dx,bx
  410b2f:	mov    ds:0x73b04f7f,al
  410b34:	outs   dx,DWORD PTR ds:[esi]
  410b35:	scas   al,BYTE PTR es:[edi]
  410b36:	repz pop esp
  410b38:	adc    bl,BYTE PTR [ecx+0x5d]
  410b3b:	or     dl,BYTE PTR [edx+0x5c359c22]
  410b41:	mov    bl,0x48
  410b43:	je     0x410b18
  410b45:	cdq    
  410b46:	ror    DWORD PTR [ebp-0x1ea2bf0e],cl
  410b4c:	call   0xc2bf:0xa6ee17c6
  410b53:	pop    ds
  410b54:	and    DWORD PTR [esi+edi*1],edx
  410b57:	call   0x8f3:0x2108a973
  410b5e:	ret    0xa320
  410b61:	inc    ebx
  410b62:	aas    
  410b63:	ret    0xbd9c
  410b66:	outs   dx,DWORD PTR ds:[esi]
  410b67:	sti    
  410b68:	mul    BYTE PTR [ebx+0x4b]
  410b6b:	jmp    0x2f033889
  410b70:	mov    ebx,0x14364a12
  410b75:	popf   
  410b76:	inc    eax
  410b77:	test   DWORD PTR [edx],ebp
  410b79:	ins    BYTE PTR es:[edi],dx
  410b7a:	sub    esp,esi
  410b7c:	mov    ds:0x87c9e951,al
  410b81:	shl    BYTE PTR [edx+0x22],cl
  410b84:	js     0x410b63
  410b86:	jb     0x410b42
  410b88:	push   ebp
  410b89:	cli    
  410b8a:	adc    BYTE PTR [ecx+0x41],cl
  410b8d:	adc    BYTE PTR [ecx-0x5900bd7e],0x43
  410b94:	or     esp,edi
  410b96:	lods   eax,DWORD PTR ds:[esi]
  410b97:	xor    BYTE PTR [esi],dh
  410b99:	add    bh,bh
  410b9b:	(bad)  
  410b9c:	cmp    ah,dl
  410b9e:	dec    ebp
  410b9f:	repnz inc BYTE PTR [ebp-0x7a]
  410ba3:	jmp    0x410c15
  410ba5:	or     al,0xa7
  410ba7:	xor    al,BYTE PTR [ebp-0x6f]
  410baa:	mov    dl,0x71
  410bac:	cmp    BYTE PTR [edi+0x38],bl
  410baf:	inc    DWORD PTR [ecx-0x21]
  410bb2:	add    ebp,edi
  410bb4:	or     eax,0x983b5088
  410bb9:	jg     0x410bef
  410bbb:	test   eax,0xac8016c1
  410bc0:	aad    0x5e
  410bc2:	in     eax,0xbf
  410bc4:	inc    esp
  410bc5:	ret    0x275d
  410bc8:	xchg   esp,eax
  410bc9:	inc    esp
  410bca:	test   BYTE PTR [edx],cl
  410bcc:	out    0x8c,eax
  410bce:	xchg   ebx,eax
  410bcf:	xchg   esi,eax
  410bd0:	push   edx
  410bd1:	jns    0x410bb1
  410bd3:	stos   BYTE PTR es:[edi],al
  410bd4:	mov    bl,0xc
  410bd6:	adc    ecx,DWORD PTR ds:0x8b3c41e8
  410bdc:	dec    edx
  410bdd:	retf   0x113a
  410be0:	pop    edx
  410be1:	retf   0xd461
  410be4:	mov    BYTE PTR [edx+0x5a2c409b],cl
  410bea:	jp     0x410c4b
  410bec:	in     eax,0xc0
  410bee:	and    dl,cl
  410bf0:	or     eax,esi
  410bf2:	add    edx,eax
  410bf4:	jmp    0x4814:0x34a66f86
  410bfb:	out    0xce,al
  410bfd:	xchg   BYTE PTR [edx+0x7f1322e0],bl
  410c03:	in     al,dx
  410c04:	daa    
  410c05:	and    eax,0xbcb89b52
  410c0a:	int    0x59
  410c0c:	add    edi,DWORD PTR [edi-0x5e10a142]
  410c12:	sub    BYTE PTR [edi+0x7139fd82],dl
  410c18:	add    al,0x61
  410c1a:	or     bh,BYTE PTR [esi+0x62]
  410c1d:	mov    cl,0xa5
  410c1f:	adc    edx,DWORD PTR [eax+0x4e5166f8]
  410c25:	cdq    
  410c26:	not    BYTE PTR [ecx]
  410c28:	jmp    0x410c17
  410c2a:	or     eax,0x1f2e7728
  410c2f:	xor    DWORD PTR [esi],eax
  410c31:	dec    eax
  410c32:	mov    DWORD PTR [ebx-0x6d19fb9a],ecx
  410c38:	xchg   ebp,eax
  410c39:	cmp    eax,DWORD PTR [ecx-0xd0564a2]
  410c3f:	loop   0x410c63
  410c41:	(bad)  
  410c42:	clc    
  410c43:	pop    esp
  410c44:	push   0xffffff88
  410c46:	cmp    al,0xdb
  410c48:	(bad)  
  410c49:	xchg   esi,eax
  410c4a:	lods   eax,DWORD PTR ds:[esi]
  410c4b:	gs push ss
  410c4d:	mov    WORD PTR [ecx-0x31cd2d54],es
  410c53:	jb     0x410c36
  410c55:	in     al,dx
  410c56:	sub    DWORD PTR [ebx-0x62],0x4e
  410c5a:	pop    edx
  410c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c5c:	or     DWORD PTR [eax-0x6d],0xb3ec35e9
  410c63:	pop    edi
  410c64:	jl     0x410cc6
  410c66:	scas   eax,DWORD PTR es:[edi]
  410c67:	add    eax,0xb22699de
  410c6c:	pop    esi
  410c6d:	add    DWORD PTR [ebx+eax*1-0x5340a576],ebp
  410c74:	ret    
  410c75:	out    0x7a,al
  410c77:	pushf  
  410c78:	and    al,0x92
  410c7a:	adc    al,0xca
  410c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c7d:	xchg   BYTE PTR [edx],bh
  410c7f:	or     edx,ebx
  410c81:	pop    ebp
  410c82:	das    
  410c83:	lahf   
  410c84:	sbb    BYTE PTR [eax],dh
  410c86:	pop    esi
  410c87:	push   ecx
  410c88:	cs out 0x5b,al
  410c8b:	jnp    0x410c2f
  410c8d:	xchg   ecx,eax
  410c8e:	adc    al,0xa3
  410c90:	mov    eax,DWORD PTR [esi+eax*1-0x27]
  410c94:	mov    esi,0x2c17e81e
  410c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c9a:	fst    DWORD PTR [esp+eiz*2-0x6a]
  410c9e:	dec    bx
  410ca0:	cmp    DWORD PTR [eax+edx*1-0x401238ba],0x2b7df360
  410cab:	pop    es
  410cac:	sbb    al,0x21
  410cae:	outs   dx,DWORD PTR ds:[esi]
  410caf:	adc    DWORD PTR [ebx+0x2e],ebx
  410cb2:	and    DWORD PTR [ebp+0x13],esp
  410cb5:	jo     0x410c73
  410cb7:	(bad)  
  410cb8:	xor    ebp,DWORD PTR ds:0xd2ef34db
  410cbe:	push   ecx
  410cbf:	stos   BYTE PTR es:[edi],al
  410cc0:	cli    
  410cc1:	cmp    dh,al
  410cc3:	cmp    BYTE PTR [ecx-0x51763e9c],0x38
  410cca:	mov    bh,0x32
  410ccc:	jmp    0x410c90
  410cce:	fsub   QWORD PTR [eax]
  410cd0:	mov    ch,0x9b
  410cd2:	sbb    dh,dh
  410cd4:	ss out dx,al
  410cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd7:	and    ah,BYTE PTR [edx]
  410cd9:	sahf   
  410cda:	outs   dx,DWORD PTR ds:[esi]
  410cdb:	push   ebx
  410cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cdd:	dec    ebp
  410cde:	xchg   ebx,eax
  410cdf:	je     0x410d43
  410ce1:	mov    bl,BYTE PTR [ebx-0xa]
  410ce4:	jbe    0x410d03
  410ce6:	pop    DWORD PTR [ebp+0x9]
  410ce9:	jns    0x410cdc
  410ceb:	push   ebp
  410cec:	in     eax,dx
  410ced:	lahf   
  410cee:	(bad)  
  410cef:	or     DWORD PTR [eax-0x1],edx
  410cf2:	(bad)  
  410cf3:	jle    0x410c86
  410cf5:	imul   ebp,DWORD PTR [eax-0x3a],0x5c10b2df
  410cfc:	xchg   edx,eax
  410cfd:	or     DWORD PTR [eax],edx
  410cff:	jns    0x410c83
  410d01:	mov    ebx,edx
  410d03:	ret    
  410d04:	jmp    0x3aeb:0xdd759f5b
  410d0b:	scas   al,BYTE PTR es:[edi]
  410d0c:	pop    edx
  410d0d:	(bad)  
  410d0e:	clc    
  410d0f:	imul   ecx,DWORD PTR [eax],0xffffffb0
  410d12:	fistp  QWORD PTR [ebp+0x66]
  410d15:	repnz iret 
  410d17:	sbb    esi,DWORD PTR [eax]
  410d19:	pop    edx
  410d1a:	cdq    
  410d1b:	add    DWORD PTR [edi+0x1b7c730a],esi
  410d21:	add    ebp,esp
  410d23:	mov    DWORD PTR [ecx],ecx
  410d25:	xchg   ebp,eax
  410d26:	retf   
  410d27:	jmp    0x4ff3e7d3
  410d2c:	jmp    0x410cc9
  410d2e:	dec    esi
  410d2f:	sbb    al,0x87
  410d31:	mov    cl,0x3b
  410d33:	xor    DWORD PTR [ecx-0x48474f4a],ebx
  410d39:	mov    ecx,0x7e910337
  410d3e:	cmp    al,0xe2
  410d40:	js     0x410db1
  410d42:	pop    esi
  410d43:	jb     0x410d1e
  410d45:	sub    al,0x9b
  410d47:	xor    ah,BYTE PTR [ebx+ebp*1]
  410d4a:	dec    DWORD PTR [edi]
  410d4c:	mov    ds:0xb6c0088f,eax
  410d51:	fstp   DWORD PTR [edx+0x79]
  410d54:	imul   ecx,DWORD PTR [ebp+0x7e],0xffffffa9
  410d58:	out    dx,al
  410d59:	sub    al,BYTE PTR [ebx]
  410d5b:	scas   al,BYTE PTR es:[edi]
  410d5c:	mov    bh,0x77
  410d5e:	jp     0x410d32
  410d60:	jno    0x410cfd
  410d62:	push   ds
  410d63:	ins    DWORD PTR es:[edi],dx
  410d64:	jb     0x410da3
  410d66:	std    
  410d67:	sub    ah,ch
  410d69:	sbb    BYTE PTR [edi],ah
  410d6b:	ss fld1 
  410d6e:	jmp    0x410d67
  410d70:	rcl    BYTE PTR [esi+0x7188a415],1
  410d76:	push   esi
  410d77:	cmp    DWORD PTR [ebx],ebx
  410d79:	sti    
  410d7a:	ficom  DWORD PTR [ebp-0x7a]
  410d7d:	int3   
  410d7e:	or     dl,BYTE PTR [edx-0x68]
  410d81:	jo     0x410db2
  410d83:	inc    ebp
  410d84:	icebp  
  410d85:	retf   0xb6a7
  410d88:	mov    eax,0x9e7f58fe
  410d8d:	sahf   
  410d8e:	xlat   BYTE PTR ds:[ebx]
  410d8f:	nop
  410d90:	jmp    0x410d5f
  410d92:	fwait
  410d93:	repz in al,dx
  410d95:	cld    
  410d96:	unpcklps xmm5,XMMWORD PTR [ecx+0xa41057b]
  410d9d:	std    
  410d9e:	dec    esp
  410d9f:	mov    ah,0x35
  410da1:	test   DWORD PTR [esi],eax
  410da3:	inc    ebp
  410da4:	sbb    ch,al
  410da6:	sub    DWORD PTR [ecx],ebx
  410da8:	les    ebp,FWORD PTR [ebp+eiz*1+0x0]
  410dac:	pop    ebx
  410dad:	les    ecx,FWORD PTR [ebx-0x51]
  410db0:	adc    eax,0xdace1132
  410db5:	dec    ebx
  410db6:	and    DWORD PTR [esi+eiz*1],esp
  410db9:	ret    0xbccf
  410dbc:	xor    dl,al
  410dbe:	(bad)  
  410dbf:	xchg   esi,eax
  410dc0:	pusha  
  410dc1:	push   cs
  410dc2:	add    eax,0x6f1ad68d
  410dc7:	pop    ds
  410dc8:	push   0x34
  410dca:	push   ss
  410dcb:	jle    0x410da7
  410dcd:	shl    BYTE PTR [edi+esi*2+0x22],1
  410dd1:	inc    edx
  410dd2:	fwait
  410dd3:	das    
  410dd4:	enter  0xa1e4,0xae
  410dd8:	out    0x9f,eax
  410dda:	push   ss
  410ddb:	js     0x410d73
  410ddd:	in     eax,dx
  410dde:	fmul   DWORD PTR [ebx+ecx*1-0x60]
  410de2:	pop    eax
  410de3:	push   ebx
  410de4:	jns    0x410e51
  410de6:	icebp  
  410de7:	mov    bh,ch
  410de9:	ror    ecx,0x66
  410dec:	adc    DWORD PTR [edx-0x6e],eax
  410def:	lods   al,BYTE PTR ds:[esi]
  410df0:	and    BYTE PTR [eax],ah
  410df2:	add    DWORD PTR [esi],esi
  410df4:	or     al,BYTE PTR [edi+0x4]
  410df7:	sbb    eax,0x4c10637c
  410dfc:	fnstenv [eax-0x78]
  410dff:	mov    cl,cl
  410e01:	out    dx,eax
  410e02:	cli    
  410e03:	mov    ch,0x53
  410e05:	inc    eax
  410e06:	cmc    
  410e07:	pop    ebp
  410e08:	fisttp QWORD PTR [esi-0x3f1382f6]
  410e0e:	jge    0x410de8
  410e10:	jl     0x410da9
  410e12:	dec    esi
  410e13:	popf   
  410e14:	cdq    
  410e15:	xlat   BYTE PTR ds:[ebx]
  410e16:	fwait
  410e17:	mov    BYTE PTR [esi+0x1],cl
  410e1a:	loopne 0x410e22
  410e1c:	inc    esp
  410e1d:	shr    BYTE PTR [ecx],0xd5
  410e20:	mov    DWORD PTR [edi],ecx
  410e22:	int    0x9d
  410e24:	push   esi
  410e25:	iret   
  410e26:	or     bl,BYTE PTR [ecx-0x131116f6]
  410e2c:	xchg   edx,eax
  410e2d:	(bad)  
  410e2e:	int    0x82
  410e30:	mov    dl,0x94
  410e32:	pop    ss
  410e33:	inc    eax
  410e34:	xchg   edx,eax
  410e35:	cmovbe ebp,DWORD PTR [edi]
  410e38:	sbb    bl,bh
  410e3a:	cmp    DWORD PTR [edi],0x14
  410e3d:	test   DWORD PTR ds:0xbac05730,esi
  410e43:	mov    ebx,0x1dfd85a7
  410e48:	add    BYTE PTR [ebx],ah
  410e4a:	jo     0x410e53
  410e4c:	xchg   ebx,eax
  410e4d:	mov    esi,0x9c649bab
  410e52:	clc    
  410e53:	cmp    esi,DWORD PTR [edx+0x5f33ec1d]
  410e59:	iret   
  410e5a:	cdq    
  410e5b:	(bad)  
  410e5c:	jnp    0x410ecc
  410e5e:	xchg   ecx,eax
  410e5f:	test   eax,0xa075f80
  410e64:	gs enter 0x14b8,0xd4
  410e69:	popf   
  410e6a:	mov    cl,0x48
  410e6c:	or     eax,0x755cc3d1
  410e71:	(bad)  
  410e72:	retf   0xb7e3
  410e75:	xor    ch,ah
  410e77:	ins    BYTE PTR es:[edi],dx
  410e78:	rcr    BYTE PTR [edi+edi*2+0x48],0x6a
  410e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e7e:	jmp    0xcc2a:0x2b074f01
  410e85:	lahf   
  410e86:	add    eax,0x3c7f39aa
  410e8b:	(bad)  
  410e8c:	pop    ecx
  410e8d:	ds loop 0x410e23
  410e90:	push   0x556b8fe5
  410e95:	mov    ebx,0xc9f1557f
  410e9a:	mov    eax,ds:0x1de10f43
  410e9f:	js     0x410efe
  410ea1:	stos   BYTE PTR es:[edi],al
  410ea2:	xchg   bh,ah
  410ea4:	sahf   
  410ea5:	out    0x82,al
  410ea7:	xor    DWORD PTR [edi+0x61f1d88d],ecx
  410ead:	es xchg ebx,eax
  410eaf:	xlat   BYTE PTR ds:[ebx]
  410eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eb1:	sub    al,0xe2
  410eb3:	add    eax,0x66358e0a
  410eb8:	sub    al,0x7c
  410eba:	jp     0x410e85
  410ebc:	inc    esp
  410ebd:	ins    DWORD PTR es:[edi],dx
  410ebe:	test   BYTE PTR [ecx-0x5b],cl
  410ec1:	stc    
  410ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ec4:	mov    esi,0x2cb65fd6
  410ec9:	mov    ebp,0x484d0c69
  410ece:	mov    ah,0x26
  410ed0:	scas   al,BYTE PTR es:[edi]
  410ed1:	mov    edi,0x857b90b
  410ed6:	cli    
  410ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ed8:	sbb    ebp,DWORD PTR [edx-0x46f85437]
  410ede:	ja     0x410f3c
  410ee0:	leave  
  410ee1:	mov    ecx,0xe5357f12
  410ee6:	xor    ebx,esi
  410ee8:	lods   al,BYTE PTR ds:[esi]
  410ee9:	dec    esp
  410eea:	inc    ebp
  410eeb:	jb     0x410ef2
  410eed:	aad    0x87
  410eef:	mov    bh,0x7c
  410ef1:	xor    DWORD PTR [edi+0x20703e7b],0xffffff9f
  410ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ef9:	and    al,0x59
  410efb:	cmp    eax,0x51c57665
  410f00:	lds    edi,FWORD PTR [esi]
  410f02:	test   DWORD PTR [ebp+0x6d],ecx
  410f05:	bound  ecx,QWORD PTR [esi+0x2c943dc3]
  410f0b:	mov    edi,esp
  410f0d:	lock test BYTE PTR [esp+ecx*8],0x1
  410f12:	pop    esp
  410f13:	jbe    0x410ea4
  410f15:	adc    eax,0x8273033c
  410f1a:	in     al,0xc
  410f1c:	pop    ecx
  410f1d:	fst    st(2)
  410f1f:	pusha  
  410f20:	or     eax,0xa86cf998
  410f25:	in     al,0x81
  410f27:	imul   edx,DWORD PTR [eax],0xb7eeacdf
  410f2d:	jb     0x410ee2
  410f2f:	lock inc esi
  410f31:	pusha  
  410f32:	adc    dh,dh
  410f34:	(bad)  
  410f36:	xor    ah,BYTE PTR [edi]
  410f38:	mov    ecx,0x5e6e3014
  410f3d:	xchg   edx,eax
  410f3e:	fs (bad) 
  410f40:	imul   edx,DWORD PTR [ecx],0xffffffce
  410f43:	cdq    
  410f44:	mov    cl,0xa0
  410f46:	js     0x410fc7
  410f48:	mov    ds:0x28347a54,al
  410f4d:	movups xmm6,xmm0
  410f50:	inc    edi
  410f51:	js     0x410f09
  410f53:	cmc    
  410f54:	sub    al,BYTE PTR ss:[eax+0x3a]
  410f58:	fcmovb st,st(3)
  410f5a:	jns    0x410f17
  410f5c:	push   edi
  410f5d:	scas   al,BYTE PTR es:[edi]
  410f5e:	xchg   edx,eax
  410f5f:	sbb    ebx,DWORD PTR [esi+0x55]
  410f62:	adc    al,0x96
  410f64:	sub    DWORD PTR [ecx-0x1a09e91f],edx
  410f6a:	push   0xffffff85
  410f6c:	imul   ebp,DWORD PTR [eax+0x4f615a73],0x4d6b326
  410f76:	or     eax,0x22c674a9
  410f7b:	push   edx
  410f7c:	addr16 retf 0xb432
  410f80:	mov    BYTE PTR [eax-0x4e33903c],al
  410f86:	or     ecx,esi
  410f88:	aam    0x7d
  410f8a:	fmul   DWORD PTR ds:0x622d930e
  410f90:	xchg   esp,eax
  410f91:	push   0xa03e4456
  410f96:	sub    esi,DWORD PTR [ebx+0x55a0c6b3]
  410f9c:	pop    ebx
  410f9d:	push   ds
  410f9e:	ret    0x6094
  410fa1:	test   eax,0x4f41c640
  410fa6:	and    al,0xf4
  410fa8:	xor    bh,BYTE PTR [ebx+eax*8+0x4a]
  410fac:	cld    
  410fad:	sbb    dh,BYTE PTR ds:0x93ba7d8f
  410fb3:	xchg   ebp,eax
  410fb4:	xor    esi,edi
  410fb6:	scas   eax,DWORD PTR es:[edi]
  410fb7:	mov    dh,dl
  410fb9:	js     0x410f54
  410fbb:	mov    al,0xca
  410fbd:	push   es
  410fbe:	lock int3 
  410fc0:	jb     0x410f71
  410fc2:	push   ebp
  410fc3:	and    DWORD PTR [esp+eiz*8],edx
  410fc6:	(bad)  [edx+0xa]
  410fc9:	lods   al,BYTE PTR ds:[esi]
  410fca:	lds    esi,FWORD PTR [ecx-0x2430b05b]
  410fd0:	arpl   WORD PTR [ebp-0x6e646aa1],ax
  410fd6:	mov    ds:0x598f1ec1,eax
  410fdb:	sub    BYTE PTR [ecx+edx*2],ch
  410fde:	pop    edi
  410fdf:	jg     0x410fc0
  410fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fe2:	in     al,dx
  410fe3:	xchg   ebx,eax
  410fe4:	sbb    DWORD PTR [ecx],ebx
  410fe6:	jge    0x410fa9
  410fe8:	shl    BYTE PTR ds:[esi],0xb0
  410fec:	mov    bl,BYTE PTR [esi-0x2baac44e]
  410ff2:	inc    edx
  410ff3:	mov    esp,0x27cac69b
  410ff8:	inc    ebp
  410ff9:	sbb    eax,0x68e0e302
  410ffe:	or     al,0xa4
  411000:	rcr    ebp,1
  411002:	jle    0x410fff
  411004:	xor    eax,0x9d28971a
  411009:	jl     0x411041
  41100b:	mov    esi,DWORD PTR [ecx-0x5123790a]
  411011:	mov    cl,0xde
  411013:	lahf   
  411014:	sub    al,0x79
  411016:	sbb    dl,0x5a
  411019:	cs jmp 0x411098
  41101c:	stos   BYTE PTR es:[edi],al
  41101d:	(bad)  
  41101e:	out    dx,al
  41101f:	jmp    0x8b9b9a4f
  411024:	and    esp,DWORD PTR [ecx-0x2b58f7cb]
  41102a:	dec    edx
  41102b:	or     al,0x1a
  41102d:	fdiv   DWORD PTR [ecx]
  41102f:	mov    WORD PTR [edi+0x2d6e3533],gs
  411035:	mov    ds:0x237614f7,eax
  41103a:	sbb    al,0xa2
  41103c:	jbe    0x411051
  41103e:	mov    eax,ds:0xef7df1b2
  411043:	xchg   ebp,eax
  411044:	dec    ebx
  411045:	lock jno 0x410ff4
  411048:	jbe    0x4110bd
  41104a:	dec    esp
  41104b:	adc    al,0x1b
  41104d:	stc    
  41104e:	xchg   esp,eax
  41104f:	add    eax,0x93ff6caa
  411054:	cmp    al,0x73
  411056:	add    BYTE PTR [ebp+0x75260899],dl
  41105c:	enter  0x498,0x21
  411060:	mov    ch,0xdf
  411062:	jl     0x411035
  411064:	xchg   BYTE PTR [edx],dh
  411066:	jns    0x411089
  411068:	xchg   esp,eax
  411069:	leave  
  41106a:	neg    DWORD PTR [edi+0x26]
  41106d:	ret    
  41106e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41106f:	out    0x98,eax
  411071:	sub    eax,0xab88c299
  411076:	pop    es
  411077:	pop    ss
  411078:	int3   
  411079:	stos   BYTE PTR es:[edi],al
  41107a:	add    al,0xae
  41107c:	in     eax,0x7
  41107e:	mov    edi,0x4ff3449a
  411083:	xor    DWORD PTR [edx],esp
  411085:	shl    esp,cl
  411087:	les    eax,FWORD PTR [edi]
  411089:	out    0xe9,al
  41108b:	mov    al,0x4
  41108d:	std    
  41108e:	daa    
  41108f:	sbb    BYTE PTR [esi+0x6de34c26],bl
  411095:	mov    edx,0xcca2c6e
  41109a:	loop   0x41107a
  41109c:	xor    BYTE PTR [ebp-0x18a8dc34],bl
  4110a2:	(bad)  
  4110a3:	jae    0x411059
  4110a5:	mov    eax,ds:0x9fcdbcc5
  4110aa:	retf   0xfc54
  4110ad:	sti    
  4110ae:	cmp    BYTE PTR [ebp+0x39],dh
  4110b1:	cdq    
  4110b2:	sub    al,bh
  4110b4:	icebp  
  4110b5:	repz daa 
  4110b7:	call   0xa004:0x71faa7d5
  4110be:	inc    ecx
  4110bf:	retf   0x54a7
  4110c2:	xor    al,0x6
  4110c4:	xor    edi,DWORD PTR [eax-0x37d38515]
  4110ca:	sbb    BYTE PTR [eax-0x576c99de],ah
  4110d0:	pop    es
  4110d1:	inc    ebp
  4110d2:	add    ah,dl
  4110d4:	push   ebx
  4110d5:	lods   eax,DWORD PTR ds:[esi]
  4110d6:	bound  ebp,QWORD PTR [eax-0x7d]
  4110d9:	or     eax,0xbc808b40
  4110de:	and    BYTE PTR [ecx],al
  4110e0:	xor    al,0xd3
  4110e2:	pop    ecx
  4110e3:	jmp    0x411128
  4110e5:	in     al,dx
  4110e6:	(bad)  
  4110e7:	rcr    BYTE PTR ds:0x7c669477,0x13
  4110ee:	and    BYTE PTR [ecx+0x65],0x1f
  4110f2:	mov    dh,0x0
  4110f4:	mov    edx,0x61e6e298
  4110f9:	cmp    dh,ch
  4110fb:	or     DWORD PTR [ecx-0x1e8aa1b0],0x9e671e42
  411105:	mov    ch,0x19
  411107:	dec    DWORD PTR [esi-0x27]
  41110a:	lock rcr DWORD PTR [ebx-0x4035c45e],cl
  411111:	rcl    BYTE PTR [esi+ebp*2+0x6fd321eb],1
  411118:	sbb    eax,0x24240965
  41111d:	stos   BYTE PTR es:[edi],al
  41111e:	dec    esi
  41111f:	sub    eax,0xd1c48ad1
  411124:	xchg   ebp,eax
  411125:	xor    al,0x40
  411127:	mov    eax,ds:0x5fee53cf
  41112c:	ss jl  0x41111b
  41112f:	inc    ecx
  411130:	mov    eax,ds:0x6e31f92b
  411135:	in     eax,0x36
  411137:	dec    esp
  411138:	sub    bh,BYTE PTR [ebp+0x12]
  41113b:	xor    al,0x67
  41113d:	popa   
  41113e:	cli    
  41113f:	jmp    0x6962:0x5ca7821d
  411146:	cmc    
  411147:	arpl   WORD PTR [edx+0x1c418b02],bx
  41114d:	pop    edx
  41114e:	pop    es
  41114f:	arpl   WORD PTR [eax-0x66],cx
  411152:	mov    bh,BYTE PTR ds:0xd8e79ce7
  411158:	push   esi
  411159:	cmp    eax,edi
  41115b:	add    BYTE PTR [esi+0x3e715c11],dl
  411161:	aas    
  411162:	inc    esi
  411163:	loop   0x41112e
  411165:	les    ebx,FWORD PTR [edx+0x11]
  411168:	mov    al,0x28
  41116a:	push   esp
  41116b:	and    al,0xa1
  41116d:	hlt    
  41116e:	mov    ecx,0x427d3b50
  411173:	or     bl,bh
  411175:	out    0x66,eax
  411177:	push   eax
  411178:	adc    DWORD PTR [eax],0x5b9f4a4b
  41117e:	pop    edx
  41117f:	test   eax,0x254cd84a
  411184:	jmp    0x411174
  411186:	pop    edx
  411187:	sub    BYTE PTR [edx],ch
  411189:	cli    
  41118a:	fcomp  DWORD PTR [eax+ebx*2+0x15]
  41118e:	repz jbe 0x411207
  411191:	popa   
  411192:	int    0x92
  411194:	adc    cl,BYTE PTR [eax]
  411196:	jnp    0x411181
  411198:	sub    eax,0x84ee2fad
  41119d:	jmp    0x41119c
  41119f:	ror    BYTE PTR es:[ebx+0x3aa704cd],cl
  4111a6:	mov    dh,0x51
  4111a8:	push   0xffffff8f
  4111aa:	cmp    al,0x31
  4111ac:	mov    eax,0xbca26d21
  4111b1:	fnstenv [ebp+0x45]
  4111b4:	pushf  
  4111b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b6:	xchg   BYTE PTR [edi+0x5a],dl
  4111b9:	mov    esp,0xb0374bb0
  4111be:	imul   eax,DWORD PTR [edx],0x1595edb
  4111c4:	jae    0x411193
  4111c6:	lds    ebx,FWORD PTR [esi]
  4111c8:	jnp    0x41118b
  4111ca:	adc    ebp,DWORD PTR [ebp+edi*4-0x58a6e73f]
  4111d1:	xor    al,0x28
  4111d3:	(bad)  
  4111d4:	jno    0x411164
  4111d6:	and    BYTE PTR [edi],dh
  4111d8:	fadd   QWORD PTR [eax-0x78120e7d]
  4111de:	pop    ebp
  4111df:	fld    DWORD PTR [ecx]
  4111e1:	scas   al,BYTE PTR es:[edi]
  4111e2:	sbb    DWORD PTR [edx-0x15],edi
  4111e5:	popf   
  4111e6:	push   eax
  4111e7:	(bad)  
  4111e8:	shl    DWORD PTR [eax-0x2b],1
  4111eb:	fcom   QWORD PTR [ebx-0x76310ae5]
  4111f1:	cmp    eax,DWORD PTR [eax]
  4111f3:	sbb    eax,0xee75f15d
  4111f8:	out    dx,eax
  4111f9:	aad    0xc9
  4111fb:	nop
  4111fc:	jge    0x41120f
  4111fe:	inc    ecx
  4111ff:	mov    dh,0x2
  411201:	mov    ebp,DWORD PTR [edi]
  411203:	lea    esp,[edx+0x223aaf65]
  411209:	outs   dx,BYTE PTR ds:[esi]
  41120a:	mov    eax,ebp
  41120c:	fdiv   DWORD PTR [edi]
  41120e:	gs adc eax,0xbdfae0bc
  411214:	push   0xffffffef
  411216:	and    al,0xd0
  411218:	sub    edi,eax
  41121a:	cli    
  41121b:	dec    ebp
  41121c:	repz pop eax
  41121e:	inc    edi
  41121f:	aad    0x4c
  411221:	jmp    0x3941:0x1a92aab7
  411228:	sub    BYTE PTR [edi+0x30],0x70
  41122c:	xor    DWORD PTR [ebp-0x21],esi
  41122f:	clc    
  411230:	sub    al,0x7a
  411232:	(bad)  
  411233:	add    BYTE PTR [eax+0x25a0736d],cl
  411239:	jo     0x4111d1
  41123b:	mov    ds:0x4d030026,al
  411240:	fxch   st(7)
  411242:	add    eax,0xf034dc8b
  411247:	inc    esp
  411248:	push   ebx
  411249:	ror    DWORD PTR [ebx-0x5684caf6],1
  41124f:	inc    edx
  411250:	fnstsw WORD PTR [ebp+0x6d]
  411253:	add    BYTE PTR [esi-0x43de20e3],bh
  411259:	inc    eax
  41125a:	xchg   cl,dl
  41125c:	sbb    al,0x7b
  41125e:	cmp    eax,0xe43bceae
  411263:	inc    edx
  411264:	int3   
  411265:	mov    ah,0x87
  411267:	or     eax,0x8fd590e0
  41126c:	push   ds
  41126d:	cmp    dl,BYTE PTR [ecx+0x42]
  411270:	aas    
  411271:	push   ss
  411272:	inc    edi
  411273:	and    al,BYTE PTR [edi]
  411275:	push   0x1d0ded4e
  41127a:	outs   dx,BYTE PTR ds:[esi]
  41127b:	cdq    
  41127c:	cmp    bh,BYTE PTR [eax+0x10]
  41127f:	pop    ss
  411280:	push   0xe90790c9
  411285:	out    0x65,al
  411287:	stc    
  411288:	leave  
  411289:	(bad)  
  41128b:	sbb    al,0x2b
  41128d:	mov    ch,0x11
  41128f:	mov    ebp,0x27ca9b30
  411294:	fst    QWORD PTR [esi+ecx*4]
  411297:	loopne 0x4112b6
  411299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41129a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41129b:	inc    eax
  41129c:	mov    bl,0xa3
  41129e:	xor    eax,0x1b654a96
  4112a3:	xor    edi,ebx
  4112a5:	and    dh,BYTE PTR [edx-0x456b994a]
  4112ab:	jge    0x4112f3
  4112ad:	pop    ebx
  4112ae:	sub    ebp,eax
  4112b0:	(bad)  
  4112b2:	enter  0x1797,0x88
  4112b6:	(bad)  
  4112b8:	sbb    DWORD PTR [ebp-0x58c7ba8f],ebp
  4112be:	mov    BYTE PTR [eax+0x419f34b5],bl
  4112c4:	ins    DWORD PTR es:[edi],dx
  4112c5:	sbb    al,0xb1
  4112c7:	in     eax,0xc5
  4112c9:	pop    edx
  4112ca:	push   ecx
  4112cb:	retf   0x4444
  4112ce:	adc    al,0xc0
  4112d0:	cwde   
  4112d1:	lds    edx,FWORD PTR [ecx]
  4112d3:	lods   al,BYTE PTR ds:[esi]
  4112d4:	into   
  4112d5:	fidiv  WORD PTR [ecx+edx*8-0x2451d055]
  4112dc:	and    al,0x7d
  4112de:	push   ebp
  4112df:	jnp    0x4112ef
  4112e1:	ror    BYTE PTR [esi+0x58854ee9],1
  4112e7:	fisttp WORD PTR [ebp+0x424bfb1b]
  4112ed:	xor    edx,DWORD PTR [esi+0x74]
  4112f0:	mov    dh,0x92
  4112f2:	popf   
  4112f3:	adc    ecx,DWORD PTR [ebx]
  4112f5:	rcl    BYTE PTR [edi+0x7d1fd357],1
  4112fb:	jle    0x4112e8
  4112fd:	xor    BYTE PTR [ebp+esi*2-0x79],0xc9
  411302:	mov    ebp,0xbbbb3b59
  411307:	sbb    DWORD PTR [edi+0x6fb5170e],edx
  41130d:	nop
  41130e:	inc    edi
  41130f:	mov    esp,0x6ce22346
  411314:	jmp    0x7225:0xf035a5d4
  41131b:	jle    0x4112f9
  41131d:	push   ss
  41131e:	aas    
  41131f:	(bad)  
  411321:	or     DWORD PTR [edx+edx*2-0xdad6477],edx
  411328:	test   al,0x32
  41132a:	cmp    dl,BYTE PTR ds:0xf570f28b
  411330:	xchg   edx,eax
  411331:	in     eax,0x3c
  411333:	je     0x411355
  411335:	push   es
  411336:	(bad)  
  411337:	ins    DWORD PTR es:[edi],dx
  411338:	sub    ebp,DWORD PTR [eax]
  41133a:	pop    eax
  41133b:	rcl    DWORD PTR [ecx+0x2b],1
  41133e:	js     0x4112ef
  411340:	out    dx,eax
  411341:	mov    edx,0x1dc52936
  411346:	dec    ebx
  411347:	lea    edx,[edx+esi*2]
  41134a:	push   DWORD PTR [ecx+0x5c]
  41134d:	or     ebp,DWORD PTR [esi+0x19ae99a0]
  411353:	xor    DWORD PTR [ecx],edx
  411355:	xchg   ebp,eax
  411356:	sbb    DWORD PTR [ebp+edx*2-0x4383cd66],0x66d23b72
  411361:	rcl    DWORD PTR [eax],cl
  411363:	ds clc 
  411365:	mov    ecx,0x9a717624
  41136a:	repz jne 0x411355
  41136d:	mov    ebx,0x9db87af3
  411372:	xchg   edi,eax
  411373:	scas   eax,DWORD PTR es:[edi]
  411374:	aaa    
  411375:	ds pop ds
  411377:	sub    edx,DWORD PTR [esi+ebp*2-0x13]
  41137b:	pop    ds
  41137c:	mov    al,ds:0x55e52fbe
  411381:	adc    al,0x15
  411383:	addr16 aam 0xe8
  411386:	pusha  
  411387:	sub    al,BYTE PTR [edi-0x63232d8a]
  41138d:	adc    ebx,DWORD PTR [esi+edi*2-0x29d2d2d1]
  411394:	das    
  411395:	jo     0x4113a1
  411397:	test   eax,0x879df841
  41139c:	daa    
  41139d:	dec    eax
  41139e:	xor    BYTE PTR ds:0x1719a944,ch
  4113a4:	lods   al,BYTE PTR ds:[esi]
  4113a5:	sub    BYTE PTR ds:0x53d9201c,0x39
  4113ac:	or     eax,0x87240de1
  4113b1:	(bad)  
  4113b2:	retf   
  4113b3:	and    edi,DWORD PTR [edx]
  4113b5:	jnp    0x4113cd
  4113b7:	call   DWORD PTR ds:0x11671ba5
  4113bd:	xchg   esp,eax
  4113be:	dec    esi
  4113bf:	aaa    
  4113c0:	test   edi,eax
  4113c2:	add    edi,DWORD PTR [edx]
  4113c4:	and    BYTE PTR [ebx+0x55798f2],dl
  4113ca:	dec    edx
  4113cb:	imul   edi,esp,0x74
  4113ce:	cmp    eax,0x66a59148
  4113d3:	push   ss
  4113d4:	fsincos 
  4113d6:	data16 jle 0x411409
  4113d9:	aad    0x90
  4113db:	cld    
  4113dc:	and    al,0x93
  4113de:	jmp    0x411393
  4113e0:	add    eax,0x69472df5
  4113e5:	ins    DWORD PTR es:[edi],dx
  4113e6:	ret    0x4d4e
  4113e9:	or     BYTE PTR [eax+0x2d168d48],dl
  4113ef:	adc    BYTE PTR [edi-0x6b02ebbb],0x36
  4113f6:	out    0x24,eax
  4113f8:	add    esp,DWORD PTR [eax-0x2e]
  4113fb:	fs pop ds
  4113fd:	xchg   esp,eax
  4113fe:	les    ebp,FWORD PTR [ebx]
  411400:	test   al,0x75
  411402:	sbb    DWORD PTR [ebp-0x2da40aa2],edi
  411408:	stc    
  411409:	push   eax
  41140a:	enter  0xfeab,0x7b
  41140e:	ss aaa 
  411410:	iret   
  411411:	ins    BYTE PTR es:[edi],dx
  411412:	ret    0x4bb2
  411415:	sbb    eax,0xdcc4c382
  41141a:	mov    al,ds:0x6e8d971d
  41141f:	cli    
  411420:	bound  edi,QWORD PTR [edx+0x52688216]
  411426:	pop    esp
  411427:	sbb    BYTE PTR [edx+0x32d0d581],ah
  41142d:	lods   eax,DWORD PTR ds:[esi]
  41142e:	pop    edx
  41142f:	popa   
  411430:	jl     0x411448
  411432:	mov    ah,dl
  411434:	jns    0x411470
  411436:	and    eax,0x433ad18a
  41143b:	test   BYTE PTR [eax],cl
  41143d:	gs push cs
  41143f:	outs   dx,DWORD PTR ds:[esi]
  411440:	in     eax,0x98
  411442:	jle    0x411445
  411444:	gs rol bl,1
  411447:	mov    esi,0x849b31a
  41144c:	sahf   
  41144d:	sahf   
  41144e:	loop   0x4113f2
  411450:	dec    ebx
  411451:	enter  0x4bb2,0xa1
  411455:	jbe    0x411481
  411457:	jp     0x4114c4
  411459:	jg     0x411414
  41145b:	and    al,0x1
  41145d:	dec    esp
  41145e:	jge    0x41141d
  411460:	inc    eax
  411461:	pop    edx
  411462:	lahf   
  411463:	or     al,0x88
  411465:	fadd   st(3),st
  411467:	out    0xe0,eax
  411469:	push   ds
  41146a:	push   0x4f428fff
  41146f:	fcom   QWORD PTR [ecx-0x1fbbed80]
  411475:	mov    bl,0x14
  411477:	or     eax,0x445b8ddd
  41147c:	fwait
  41147d:	or     BYTE PTR [eax-0x7a4cdacd],dh
  411483:	aas    
  411484:	call   0x1ba4:0x1d12129a
  41148b:	(bad)
  41148f:	das    
  411490:	cli    
  411491:	(bad)  
  411492:	mov    edx,0xef77cd09
  411497:	pop    ebx
  411498:	cmp    ch,BYTE PTR [ecx+0x750c24c1]
  41149e:	pusha  
  41149f:	and    BYTE PTR [edi+edx*1+0x41],0x24
  4114a4:	dec    esi
  4114a5:	scas   eax,DWORD PTR es:[edi]
  4114a6:	mov    bl,0xc9
  4114a8:	dec    edi
  4114a9:	outs   dx,DWORD PTR ds:[esi]
  4114aa:	xor    al,0xe2
  4114ac:	ficom  DWORD PTR [ebx]
  4114ae:	mov    ebx,0xdca2ac86
  4114b3:	into   
  4114b4:	sub    bh,BYTE PTR [eax]
  4114b6:	jo     0x41148b
  4114b8:	(bad)  
  4114b9:	cmp    eax,edi
  4114bb:	mov    esp,0x710d0a0c
  4114c0:	sar    ebp,cl
  4114c2:	js     0x4114cf
  4114c4:	bound  edx,QWORD PTR [edx+0x72]
  4114c7:	aad    0xc3
  4114c9:	dec    edx
  4114ca:	jle    0x4114e8
  4114cc:	repz push ebp
  4114ce:	adc    ecx,DWORD PTR [eax*1-0x2728454f]
  4114d5:	mov    bl,BYTE PTR [ebx]
  4114d7:	test   ebp,0x407216c8
  4114dd:	cli    
  4114de:	(bad)  
  4114df:	mov    bh,0x1d
  4114e1:	cmp    edi,DWORD PTR [ebp-0x3c97a097]
  4114e7:	sahf   
  4114e8:	push   ebp
  4114e9:	adc    DWORD PTR [ecx-0x3],esp
  4114ec:	scas   eax,DWORD PTR es:[edi]
  4114ed:	or     DWORD PTR [ecx],0x58472b45
  4114f3:	jnp    0x4114a6
  4114f5:	test   eax,0x9921f213
  4114fa:	lds    eax,FWORD PTR [esi]
  4114fc:	int    0xae
  4114fe:	out    dx,eax
  4114ff:	jo     0x411509
  411501:	sbb    eax,0x64f7fb9d
  411506:	mov    ds:0x7a476c2f,eax
  41150b:	lahf   
  41150c:	sbb    bl,BYTE PTR [edx]
  41150e:	add    edx,esi
  411510:	pop    edx
  411511:	inc    esp
  411512:	jbe    0x41152e
  411514:	call   0xcdfa:0xf489c28f
  41151b:	mov    bh,0xe3
  41151d:	loope  0x41155f
  41151f:	mov    edx,0x45b68090
  411524:	xchg   ebp,eax
  411525:	add    DWORD PTR [eax-0x5f],edi
  411528:	ds into 
  41152a:	push   esi
  41152b:	adc    eax,0x7c823fba
  411530:	ss cmp al,0xbc
  411533:	(bad)  
  411534:	popf   
  411535:	mov    fs,WORD PTR [edx-0x130e8ceb]
  41153b:	popf   
  41153c:	jbe    0x411594
  41153e:	xor    ebx,DWORD PTR [esi]
  411540:	sbb    edi,0x3e
  411543:	lods   eax,DWORD PTR ds:[esi]
  411544:	push   es
  411545:	sbb    ah,BYTE PTR [esi]
  411547:	mov    cl,0x4f
  411549:	pusha  
  41154a:	push   ss
  41154b:	rcl    BYTE PTR [ecx+0x784d15ab],1
  411551:	mov    ds:0x999f917a,al
  411556:	idiv   DWORD PTR [eax-0x27]
  411559:	push   ecx
  41155a:	repz or eax,0xf897db52
  411560:	cwde   
  411561:	push   eax
  411562:	xchg   ebx,eax
  411563:	nop
  411564:	popa   
  411565:	and    ch,BYTE PTR es:[eax+0x268b2aff]
  41156c:	push   esp
  41156d:	int3   
  41156e:	dec    esi
  41156f:	jae    0x4115d7
  411571:	mov    edi,0xa04342c8
  411576:	mov    esi,0xd6ea453f
  41157b:	das    
  41157c:	imul   ecx,DWORD PTR [ebp+eiz*2-0x17],0x25
  411581:	push   edx
  411582:	std    
  411583:	in     al,dx
  411584:	int3   
  411585:	jo     0x41152d
  411587:	dec    eax
  411588:	outs   dx,DWORD PTR ds:[esi]
  411589:	mov    esp,0xfa47821c
  41158e:	xor    BYTE PTR [esi],dh
  411590:	add    edx,DWORD PTR [ebx-0x11]
  411593:	mov    dl,0x68
  411595:	popa   
  411596:	mov    eax,0x1b105f39
  41159b:	dec    edi
  41159c:	mov    ds:0xec595ddf,al
  4115a1:	loop   0x4115b4
  4115a3:	mov    al,0x76
  4115a5:	inc    ebp
  4115a6:	sbb    al,0xbf
  4115a8:	jo     0x411584
  4115aa:	and    ah,BYTE PTR [edi-0x76]
  4115ad:	cmp    ch,bl
  4115af:	rcr    DWORD PTR [eax],1
  4115b1:	(bad)  
  4115b2:	cmc    
  4115b3:	inc    esi
  4115b4:	jo     0x41154d
  4115b6:	or     eax,0x78fb61da
  4115bb:	jle    0x411637
  4115bd:	xchg   ebx,eax
  4115be:	jl     0x411616
  4115c0:	jns    0x4115f7
  4115c2:	jl     0x411549
  4115c4:	push   cs
  4115c5:	inc    edi
  4115c6:	adc    ebp,DWORD PTR [edx-0x5254ea7]
  4115cc:	leave  
  4115cd:	clc    
  4115ce:	jbe    0x411647
  4115d0:	xchg   DWORD PTR [edi-0x703ac6d],edx
  4115d6:	add    BYTE PTR [ecx-0x2eb6328d],0xd4
  4115dd:	add    al,0x11
  4115df:	push   ebx
  4115e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e1:	ins    DWORD PTR es:[edi],dx
  4115e2:	xchg   esp,eax
  4115e3:	sub    al,0x32
  4115e5:	shl    DWORD PTR [ebx-0x731ce725],0xe8
  4115ec:	(bad)  
  4115ed:	aam    0x25
  4115ef:	(bad)  
  4115f2:	mov    esp,0x85d7eda5
  4115f7:	or     DWORD PTR [eax],edx
  4115f9:	dec    esi
  4115fa:	inc    ebp
  4115fb:	outs   dx,DWORD PTR ds:[esi]
  4115fc:	lods   al,BYTE PTR ds:[esi]
  4115fd:	xchg   ebx,eax
  4115fe:	jg     0x411610
  411600:	add    BYTE PTR [eax],ch
  411602:	lock scas al,BYTE PTR es:[edi]
  411604:	push   esp
  411605:	nop
  411606:	add    eax,0x53b05e9b
  41160b:	inc    esi
  41160c:	ss cli 
  41160e:	pop    ebx
  41160f:	mov    ?,WORD PTR [edi]
  411611:	outs   dx,BYTE PTR ds:[esi]
  411612:	retf   
  411613:	xchg   ebx,eax
  411614:	and    eax,0xd9cd432c
  411619:	jnp    0x411616
  41161b:	pop    eax
  41161c:	in     eax,0xe6
  41161e:	(bad)  
  411620:	mov    ds:0x2fd5920a,al
  411625:	out    0x43,al
  411627:	hlt    
  411628:	mov    cl,0xed
  41162a:	leave  
  41162b:	mov    fs,WORD PTR [edi]
  41162d:	add    BYTE PTR [ebx+0x48],bl
  411630:	or     DWORD PTR [ebp-0x2a4b754b],ecx
  411636:	imul   ebx,esp,0x3d4414f5
  41163c:	fmulp  st(0),st
  41163e:	jecxz  0x41167a
  411640:	xchg   WORD PTR [ebx-0x18],dx
  411644:	inc    esp
  411645:	(bad)  
  411646:	clc    
  411647:	cmp    DWORD PTR [ebx-0x7b11646d],ebp
  41164d:	and    bl,BYTE PTR [esp+ebx*8-0x20]
  411651:	jecxz  0x411641
  411653:	sub    BYTE PTR es:[eax+eiz*2-0x22],0xb9
  411659:	cmp    eax,0x94f4b174
  41165e:	aam    0x3a
  411660:	call   0x32eda170
  411665:	jmp    0x4116ce
  411667:	sbb    ah,BYTE PTR [ecx+edi*1]
  41166a:	mov    ds:0x831612e1,al
  41166f:	add    DWORD PTR ds:0xdb1a5afb,ecx
  411675:	dec    ecx
  411676:	jg     0x411620
  411678:	cwde   
  411679:	clc    
  41167a:	fwait
  41167b:	popa   
  41167c:	sub    BYTE PTR [eax-0x9],0xbc
  411680:	sbb    al,0x3c
  411682:	mov    WORD PTR [edx-0x2abdeae6],?
  411688:	mov    edi,0x32d85a9c
  41168d:	mov    edx,0x99dee5b6
  411692:	jne    0x4116bf
  411694:	inc    esi
  411695:	stos   DWORD PTR es:[edi],eax
  411696:	pop    ecx
  411697:	and    eax,0xb857d3fd
  41169c:	mov    ebp,0xc84306c8
  4116a1:	jmp    0x91a0:0xfa99348a
  4116a8:	psubd  mm3,QWORD PTR [ebp-0x5c]
  4116ac:	test   DWORD PTR [edi+ecx*8],esi
  4116af:	(bad)  
  4116b1:	hlt    
  4116b2:	loopne 0x4116f2
  4116b4:	dec    edx
  4116b5:	mov    eax,ds:0x8a555eaa
  4116ba:	cdq    
  4116bb:	popf   
  4116bc:	dec    eax
  4116bd:	pushf  
  4116be:	dec    ebp
  4116bf:	mov    ebp,0x44e5ab8f
  4116c4:	inc    eax
  4116c5:	sub    BYTE PTR [edi],cl
  4116c7:	repz mov bh,0xa7
  4116ca:	inc    eax
  4116cb:	xchg   esi,eax
  4116cc:	adc    al,BYTE PTR [ecx]
  4116ce:	pop    edx
  4116cf:	dec    eax
  4116d0:	outs   dx,DWORD PTR ds:[esi]
  4116d1:	repz cmp eax,0xaabade0f
  4116d7:	jno    0x4116a9
  4116d9:	adc    edi,DWORD PTR [edx-0x50]
  4116dc:	or     al,0xbc
  4116de:	jg     0x4116be
  4116e0:	jns    0x4116ed
  4116e2:	add    ebx,DWORD PTR ss:[ecx]
  4116e5:	not    DWORD PTR [ebp+0x52]
  4116e8:	mov    al,ds:0xd6a88c6
  4116ed:	mov    WORD PTR [ebx-0x5c],ds
  4116f0:	adc    al,0xdd
  4116f2:	cld    
  4116f3:	or     dl,BYTE PTR [esi+0x18]
  4116f6:	mov    es,WORD PTR [eax]
  4116f8:	rcr    esp,0xfc
  4116fb:	add    eax,0x997f31df
  411700:	popa   
  411701:	adc    eax,DWORD PTR [eax+0x2b]
  411704:	adc    al,0x54
  411706:	clc    
  411707:	int    0x8a
  411709:	xor    eax,0x9dec3dd7
  41170e:	sbb    DWORD PTR [edi],ecx
  411710:	mov    esp,0xeade5dfd
  411715:	out    0x5f,eax
  411717:	dec    eax
  411718:	test   DWORD PTR [edi-0x514f5c72],edx
  41171e:	js     0x4116f0
  411720:	mov    dl,0x95
  411722:	jg     0x41178f
  411724:	data16 clc 
  411726:	mov    gs:0xf6bd3191,eax
  41172c:	mov    cl,0x2a
  41172e:	shr    dl,1
  411730:	inc    eax
  411731:	outs   dx,BYTE PTR ds:[esi]
  411732:	mov    WORD PTR [ebx-0x6a],?
  411735:	aas    
  411736:	xor    ebp,DWORD PTR [esi+ebp*2]
  411739:	dec    ebx
  41173a:	xchg   ebx,eax
  41173b:	jl     0x4117a7
  41173d:	div    DWORD PTR [ebx-0x3]
  411740:	mov    ah,0x9a
  411742:	adc    DWORD PTR [ebx+0x42878610],0xffffff81
  411749:	popfw  
  41174b:	xchg   BYTE PTR [edx+ecx*2-0x2f],ch
  41174f:	lds    ecx,FWORD PTR [ecx-0x5afa3c4]
  411755:	dec    ebx
  411756:	arpl   WORD PTR [esi+0x2b],dx
  411759:	sub    edx,edi
  41175b:	cld    
  41175c:	addr16 std 
  41175e:	cli    
  41175f:	and    dh,ah
  411761:	hlt    
  411762:	or     ah,BYTE PTR [esi]
  411764:	ret    0xd25b
  411767:	js     0x411702
  411769:	push   ds
  41176a:	(bad)  
  41176b:	dec    ecx
  41176c:	shl    BYTE PTR [esi-0x78f173e7],0xd
  411773:	xchg   esi,eax
  411774:	ror    DWORD PTR [eax+edx*1+0x4e76e9d5],1
  41177b:	rcl    DWORD PTR [ebp-0x62],0xa4
  41177f:	loope  0x41171c
  411781:	push   ss
  411782:	push   esp
  411783:	repnz int 0x5d
  411786:	sbb    dh,BYTE PTR [ebx-0x59]
  411789:	or     edi,DWORD PTR [ebx-0x27]
  41178c:	mov    ch,0xfa
  41178e:	push   ebp
  41178f:	jno    0x411775
  411791:	adc    edi,DWORD PTR [eax]
  411793:	sub    dl,BYTE PTR [ebx-0x6c68c21a]
  411799:	sub    dh,BYTE PTR [eax]
  41179b:	(bad)  
  41179c:	jp     0x411761
  41179e:	in     eax,0xb8
  4117a0:	cmp    dh,ah
  4117a2:	mov    ss,WORD PTR [eax-0x3a]
  4117a5:	dec    ecx
  4117a6:	mov    ds,WORD PTR [ebx]
  4117a8:	sbb    BYTE PTR [edx+eiz*1+0x2b],bl
  4117ac:	sbb    BYTE PTR [ebp+0x78fe7df2],bh
  4117b2:	jg     0x411763
  4117b4:	pop    ss
  4117b5:	arpl   WORD PTR [edx],di
  4117b7:	mov    ecx,0x77d9b612
  4117bc:	shr    BYTE PTR [edi-0x1a],cl
  4117bf:	or     eax,0x23559f56
  4117c4:	and    ah,BYTE PTR [esi-0x4]
  4117c7:	(bad)  
  4117c8:	mov    al,0x49
  4117ca:	push   esi
  4117cb:	dec    eax
  4117cc:	inc    edi
  4117cd:	dec    esp
  4117ce:	outs   dx,BYTE PTR ds:[esi]
  4117cf:	popa   
  4117d0:	jle    0x411805
  4117d2:	dec    ebp
  4117d3:	sbb    eax,DWORD PTR [eax+0xf]
  4117d6:	lods   eax,DWORD PTR ds:[esi]
  4117d8:	loope  0x411859
  4117da:	sbb    BYTE PTR [esi],dl
  4117dc:	xchg   esi,eax
  4117dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117de:	fbld   TBYTE PTR [edi]
  4117e0:	in     eax,dx
  4117e1:	pop    ss
  4117e2:	adc    eax,DWORD PTR [edx-0x3c]
  4117e5:	(bad)  
  4117e6:	jg     0x411861
  4117e8:	loopne 0x4117c4
  4117ea:	pop    edi
  4117eb:	lock (bad) 
  4117ed:	aam    0xad
  4117ef:	(bad)  
  4117f0:	xchg   ebp,eax
  4117f1:	xchg   esp,eax
  4117f2:	cmp    ch,BYTE PTR [edx-0x1fbf1d37]
  4117f8:	inc    ebp
  4117f9:	ret    
  4117fa:	jmp    edi
  4117fc:	sub    al,0x92
  4117fe:	(bad)  
  4117ff:	lahf   
  411800:	inc    edi
  411801:	rol    dh,cl
  411803:	xchg   ebp,eax
  411804:	shl    esp,0xe8
  411807:	dec    ecx
  411808:	cmp    DWORD PTR [edx],esi
  41180a:	int    0xfb
  41180c:	shr    BYTE PTR [ecx-0x7c],cl
  41180f:	xor    eax,0x10db82aa
  411814:	mov    dh,0xf9
  411816:	push   edx
  411817:	mov    esi,ds
  411819:	fs jle 0x411883
  41181c:	sbb    DWORD PTR [ebp-0x5e],ebp
  41181f:	(bad)  
  411820:	lods   al,BYTE PTR ds:[esi]
  411821:	(bad)  
  411822:	mov    cl,0x6
  411824:	jmp    0x411878
  411826:	ror    DWORD PTR [edi-0x63],0x8c
  41182a:	mov    eax,0xba931d9d
  41182f:	mov    eax,0x68fe153
  411834:	sahf   
  411835:	icebp  
  411836:	sub    ch,BYTE PTR ds:0xd51131e
  41183c:	jp     0x4118ae
  41183e:	popf   
  41183f:	jle    0x41186b
  411841:	cwde   
  411842:	sbb    edi,DWORD PTR [eax]
  411844:	inc    edi
  411845:	add    DWORD PTR [eax],edx
  411847:	push   0x55
  411849:	cwde   
  41184a:	sahf   
  41184b:	xchg   esi,eax
  41184c:	clc    
  41184d:	mov    dh,BYTE PTR [eax-0x42]
  411850:	(bad)  
  411851:	xchg   edi,eax
  411852:	fdivrp st(1),st
  411854:	inc    edx
  411855:	add    edi,0x6d8fdbe4
  41185b:	cld    
  41185c:	test   DWORD PTR [edx-0x4556698],0xca147247
  411866:	(bad)  
  411867:	and    BYTE PTR [ecx],bh
  411869:	and    bh,BYTE PTR [ecx+0x4b]
  41186c:	leave  
  41186d:	inc    esp
  41186e:	(bad)  
  411870:	xlat   BYTE PTR ds:[ebx]
  411871:	dec    ebp
  411872:	cwde   
  411873:	jae    0x41184f
  411875:	dec    ecx
  411876:	(bad)  
  411879:	enter  0x873e,0xa1
  41187d:	gs in  eax,dx
  41187f:	inc    eax
  411880:	inc    esp
  411881:	dec    edx
  411882:	shr    BYTE PTR [ebx],1
  411884:	xor    al,0xec
  411886:	sar    DWORD PTR [edi-0xf],0x4e
  41188a:	jp     0x4118c7
  41188c:	push   edx
  41188d:	cdq    
  41188e:	das    
  41188f:	cld    
  411890:	jmp    0x9f85fbfc
  411895:	or     BYTE PTR [esi],bl
  411897:	sbb    ebp,ebp
  411899:	cs dec edi
  41189b:	dec    esp
  41189c:	jb     0x411865
  41189e:	shl    DWORD PTR [esi+0x7],1
  4118a1:	lds    esi,FWORD PTR [eax+0x1b]
  4118a4:	test   BYTE PTR [ecx],dh
  4118a6:	push   ds
  4118a7:	out    0xb,al
  4118a9:	stc    
  4118aa:	(bad)  
  4118ac:	mov    WORD PTR [edi+0x5],gs
  4118af:	out    0x76,al
  4118b1:	repz jecxz 0x411932
  4118b4:	mov    edi,0xb4a5e223
  4118b9:	jnp    0x4118ba
  4118bb:	hlt    
  4118bc:	cld    
  4118bd:	aad    0x20
  4118bf:	jne    0x411845
  4118c1:	inc    eax
  4118c2:	cmp    dl,BYTE PTR [edx-0x143c48c5]
  4118c8:	std    
  4118c9:	ror    BYTE PTR [esp+ecx*2-0x6e],1
  4118cd:	arpl   WORD PTR fs:[esi+0x7b],bp
  4118d1:	fs js  0x411918
  4118d4:	and    DWORD PTR [eax-0x5e3cbbc0],esp
  4118da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118db:	xchg   esi,eax
  4118dc:	mov    dl,BYTE PTR [edi-0x28]
  4118df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e0:	xchg   esp,eax
  4118e1:	push   edx
  4118e2:	aas    
  4118e3:	sbb    DWORD PTR [esi],eax
  4118e5:	imul   edx,DWORD PTR [ebx+ecx*1+0x2b],0x86f7babe
  4118ed:	jb     0x411873
  4118ef:	fld    QWORD PTR [ebx]
  4118f1:	push   esp
  4118f2:	fld    DWORD PTR [esi+0x285c2300]
  4118f8:	adc    ecx,ecx
  4118fa:	mov    dh,0xa4
  4118fc:	ficom  WORD PTR [ebx-0xaaa1b92]
  411902:	xchg   edi,eax
  411903:	aas    
  411904:	aaa    
  411905:	int    0xfe
  411907:	cmp    dh,BYTE PTR [eax]
  411909:	pop    eax
  41190a:	out    dx,eax
  41190b:	cli    
  41190c:	add    esp,edi
  41190e:	dec    edi
  41190f:	gs jp  0x41191a
  411912:	stc    
  411913:	fbld   TBYTE PTR [edi+ebp*8+0x7949b6b3]
  41191a:	shr    DWORD PTR [eax-0x50],0x24
  41191e:	rcl    BYTE PTR [eax],1
  411920:	mov    esi,0xac066848
  411925:	push   esi
  411926:	dec    edi
  411927:	mov    dh,0xd8
  411929:	iret   
  41192a:	gs inc edx
  41192c:	xchg   esi,eax
  41192d:	loope  0x411962
  41192f:	mov    edi,0x3d7ffa37
  411934:	pop    edx
  411935:	test   DWORD PTR [ecx+edx*4-0x26],ebx
  411939:	in     al,dx
  41193a:	imul   ah
  41193c:	lea    edi,[edi+ecx*2]
  41193f:	jne    0x411974
  411941:	mov    esp,0xc5f6dfb3
  411946:	popf   
  411947:	mov    ebp,0x989c40fd
  41194c:	mov    ds:0x4d254b8a,eax
  411951:	jg     0x41198b
  411953:	mov    eax,ds:0x8ac0726f
  411958:	fs mov edx,0xf73a9832
  41195e:	repz xor eax,esi
  411961:	mov    dh,BYTE PTR [esp+ecx*8+0x2c3553e2]
  411968:	xor    DWORD PTR [ebp-0x7c],0xffffffcc
  41196c:	std    
  41196d:	sbb    eax,0xcf8dd11
  411972:	jmp    DWORD PTR [eax+0x63]
  411975:	fsub   DWORD PTR [ebp-0x674289d6]
  41197b:	leave  
  41197c:	and    BYTE PTR [eax-0x685cddc6],0x46
  411983:	mov    esi,0x4043e007
  411988:	or     eax,ebx
  41198a:	or     bh,BYTE PTR [edi+0x50]
  41198d:	dec    ebx
  41198e:	sub    dh,dh
  411990:	fs push ebp
  411992:	and    ah,dl
  411994:	lods   eax,DWORD PTR ds:[esi]
  411995:	pop    ds
  411996:	jae    0x4119ed
  411998:	push   edi
  411999:	push   esi
  41199a:	in     al,0x37
  41199c:	loop   0x41196e
  41199e:	(bad)  
  41199f:	jp     0x4119c2
  4119a1:	fdivr  DWORD PTR [eax+0x24]
  4119a4:	(bad)  
  4119a5:	mov    ?,WORD PTR [ecx]
  4119a7:	stos   BYTE PTR es:[edi],al
  4119a8:	push   0xffffffa4
  4119aa:	mov    ah,BYTE PTR ds:0x1543f3fa
  4119b0:	jg     0x411941
  4119b2:	fdiv   DWORD PTR [ecx-0x7ba30b30]
  4119b8:	adc    al,0xb4
  4119ba:	lahf   
  4119bb:	retf   
  4119bc:	sub    eax,DWORD PTR ss:[ecx]
  4119bf:	jl     0x411988
  4119c1:	sbb    al,0x57
  4119c3:	fld    TBYTE PTR [eax]
  4119c5:	sub    eax,0x91f1cb97
  4119ca:	hlt    
  4119cb:	jle    0x4119df
  4119cd:	mov    ds:0x3c357e57,eax
  4119d2:	imul   ecx,DWORD PTR [edi],0xffffffa8
  4119d5:	mov    ebx,0x50d2eb4f
  4119da:	xchg   edi,eax
  4119db:	jp     0x4119f0
  4119dd:	cmp    esi,esp
  4119df:	lods   al,BYTE PTR ds:[esi]
  4119e0:	mov    eax,ds:0xeee3fe6b
  4119e5:	add    ebp,DWORD PTR [edx-0x14]
  4119e8:	xor    BYTE PTR [ecx+eax*8-0x40],ah
  4119ec:	jne    0x411993
  4119ee:	xchg   edx,eax
  4119ef:	xchg   edi,eax
  4119f0:	xor    BYTE PTR [ecx],al
  4119f2:	and    eax,0xb6059fef
  4119f7:	icebp  
  4119f8:	jmp    0x411a44
  4119fa:	mov    cl,0xa9
  4119fc:	xchg   edi,eax
  4119fd:	call   0x94132929
  411a02:	pop    edx
  411a03:	cmp    dh,BYTE PTR [ecx-0x459301a9]
  411a09:	pop    es
  411a0a:	dec    esp
  411a0b:	add    edi,0x80c7230a
  411a11:	mov    edi,0xcca8f319
  411a16:	jle    0x4119d4
  411a18:	inc    ebx
  411a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1a:	bound  edx,QWORD PTR [edx+0x2cb37b84]
  411a20:	(bad)  
  411a21:	mov    al,ds:0x23186e3
  411a26:	lods   al,BYTE PTR ds:[esi]
  411a27:	mov    fs,WORD PTR [ebp-0x28]
  411a2a:	push   0x18
  411a2c:	and    DWORD PTR [eax],edi
  411a2e:	pusha  
  411a2f:	or     esi,0x8cc16940
  411a35:	addr16 pusha 
  411a37:	or     ch,BYTE PTR [ecx]
  411a39:	or     al,0xba
  411a3b:	add    edx,esp
  411a3d:	jge    0x411a53
  411a3f:	in     eax,dx
  411a40:	sahf   
  411a41:	sbb    edi,esp
  411a43:	pop    eax
  411a44:	aas    
  411a45:	stos   DWORD PTR es:[edi],eax
  411a46:	iret   
  411a47:	jecxz  0x411a6a
  411a49:	add    ch,BYTE PTR [edi-0x56]
  411a4c:	mov    esi,0xc88994a8
  411a51:	push   ss
  411a52:	test   BYTE PTR [edi-0x786e280e],dh
  411a58:	jg     0x411a03
  411a5a:	out    dx,eax
  411a5b:	and    esi,DWORD PTR [ebx]
  411a5d:	xchg   ebx,eax
  411a5e:	add    DWORD PTR [ecx+0x10],ebx
  411a61:	sbb    esi,ecx
  411a63:	retf   
  411a64:	xchg   ecx,eax
  411a65:	(bad)  
  411a66:	fisub  DWORD PTR [ecx]
  411a68:	or     edi,DWORD PTR [esi]
  411a6a:	inc    edx
  411a6b:	adc    al,0x28
  411a6d:	ror    DWORD PTR [ebp-0x4d],0x33
  411a71:	jae    0x411a18
  411a73:	cld    
  411a74:	jo     0x411aec
  411a76:	jbe    0x411ac2
  411a78:	add    al,0x8e
  411a7a:	jae    0x411a0d
  411a7c:	xor    al,0xba
  411a7e:	lods   al,BYTE PTR ds:[esi]
  411a7f:	stos   DWORD PTR es:[edi],eax
  411a80:	outs   dx,DWORD PTR ds:[esi]
  411a81:	aaa    
  411a82:	sbb    al,0x80
  411a84:	inc    edi
  411a85:	aas    
  411a86:	fdiv   QWORD PTR [ebx+ecx*2-0x10]
  411a8a:	sbb    DWORD PTR [edi+0x5],eax
  411a8d:	adc    ah,BYTE PTR [edi]
  411a8f:	lahf   
  411a90:	popa   
  411a91:	int3   
  411a92:	and    BYTE PTR [edi+0x7ad8bb2c],ah
  411a98:	aas    
  411a99:	aam    0xef
  411a9b:	xor    DWORD PTR ds:0x3e3661c5,edx
  411aa1:	lock mov ecx,0xfc2b465f
  411aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa8:	test   bh,al
  411aaa:	mov    edx,DWORD PTR [ebp-0x18]
  411aad:	xor    edx,eax
  411aaf:	add    edx,esi
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	ss inc ebx
  411bf9:	fild   WORD PTR [ecx+0x7c7ca94b]
  411bff:	jmp    0x411c60
  411c01:	jl     0x411c7f
  411c03:	jmp    0x79de:0x5d500c89
  411c0a:	and    ebx,DWORD PTR [ebx+0x22adcff2]
  411c10:	sub    dl,BYTE PTR [edi]
  411c12:	xchg   ebp,eax
  411c13:	push   ecx
  411c14:	adc    edi,DWORD PTR [esi-0x376a73a5]
  411c1a:	xor    DWORD PTR [eax-0x17],edi
  411c1d:	fiadd  WORD PTR [esi*4-0xe5a54d5]
  411c24:	test   BYTE PTR [edi-0x72],cl
  411c27:	sub    bl,cl
  411c29:	je     0x411c36
  411c2b:	lods   eax,DWORD PTR ds:[esi]
  411c2c:	mov    bl,0x6f
  411c2e:	pop    ebp
  411c2f:	xchg   esp,eax
  411c30:	hlt    
  411c31:	pop    esi
  411c32:	sub    eax,0x4cc73978
  411c37:	and    edi,ecx
  411c39:	int3   
  411c3a:	xchg   edi,eax
  411c3b:	pop    ds
  411c3c:	sub    DWORD PTR [esp+edi*1],esp
  411c3f:	jae    0x411c23
  411c41:	cmp    DWORD PTR [esi],edx
  411c43:	and    eax,0xab65cabb
  411c48:	popa   
  411c49:	add    dh,ch
  411c4b:	outs   dx,DWORD PTR ds:[esi]
  411c4c:	mov    esp,0x4b40a82f
  411c51:	jl     0x411cc6
  411c53:	out    dx,eax
  411c54:	xchg   ebx,eax
  411c56:	jns    0x411c93
  411c58:	xchg   ebx,eax
  411c59:	mov    ds:0x705f78aa,eax
  411c5e:	xor    al,0xa
  411c60:	sub    cl,BYTE PTR [ecx+0x76]
  411c63:	pusha  
  411c64:	retf   
  411c65:	xor    bl,BYTE PTR ds:0x7c44fcfa
  411c6b:	(bad)  
  411c6c:	cmp    al,BYTE PTR [esi]
  411c6e:	or     DWORD PTR [esi+0x1c97a368],edx
  411c74:	dec    esp
  411c75:	push   esp
  411c76:	imul   edi,DWORD PTR [esi+0x13],0x2f8b0217
  411c7d:	leave  
  411c7e:	not    DWORD PTR [edx]
  411c80:	repz fisubr DWORD PTR [esi+0x28774173]
  411c87:	jb     0x411c95
  411c89:	pop    edx
  411c8a:	mov    ch,0x9f
  411c8c:	call   0x486f:0xd6c7e171
  411c93:	pushf  
  411c94:	push   es
  411c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c96:	mov    al,0x26
  411c98:	out    dx,al
  411c99:	fucomp st(6)
  411c9b:	(bad)  
  411c9c:	call   0x2976113b
  411ca1:	jle    0x411c93
  411ca3:	and    ah,bh
  411ca5:	fcmove st,st(5)
  411ca7:	(bad)  
  411ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ca9:	mov    esi,0xbe5096c
  411cae:	push   0xfffffffe
  411cb0:	scas   eax,DWORD PTR es:[edi]
  411cb1:	rol    DWORD PTR [ecx-0x5c884d02],cl
  411cb7:	lods   eax,DWORD PTR ds:[esi]
  411cb8:	(bad)  
  411cba:	int    0x4d
  411cbc:	adc    BYTE PTR [edi+0x2d0ec41],dl
  411cc2:	je     0x411d2f
  411cc4:	push   ss
  411cc5:	stos   DWORD PTR es:[edi],eax
  411cc6:	mov    edi,0x202ab960
  411ccb:	jecxz  0x411d2f
  411ccd:	cdq    
  411cce:	mov    bl,BYTE PTR [esi]
  411cd0:	scas   al,BYTE PTR es:[edi]
  411cd1:	fidiv  DWORD PTR [edx+0x109f878b]
  411cd7:	leave  
  411cd8:	add    DWORD PTR ds:0x1dbccc7c,0xffffff98
  411cdf:	sbb    esi,DWORD PTR [ebx+0x5241e9c2]
  411ce5:	sahf   
  411ce6:	jns    0x411d50
  411ce8:	and    eax,0x28eb7710
  411ced:	jle    0x411d25
  411cef:	in     eax,dx
  411cf0:	shr    DWORD PTR [ebx+0x5a],1
  411cf3:	aam    0xa8
  411cf5:	outs   dx,BYTE PTR gs:[esi]
  411cf7:	nop
  411cf8:	cli    
  411cf9:	and    DWORD PTR [ebx-0x6d],edx
  411cfc:	xor    ebp,DWORD PTR [edi+0x71b49feb]
  411d02:	cmp    DWORD PTR [edx-0xa],ebp
  411d05:	std    
  411d06:	sbb    ah,BYTE PTR [esi]
  411d08:	adc    eax,0xa8ba0660
  411d0d:	add    al,BYTE PTR [edx-0x40]
  411d10:	mov    cl,BYTE PTR [ebp-0x6e]
  411d13:	out    dx,eax
  411d14:	ja     0x411d4a
  411d16:	dec    eax
  411d17:	cmp    cl,ch
  411d19:	loope  0x411d0a
  411d1b:	(bad)  [ecx]
  411d1d:	mov    edx,0x7376806
  411d22:	int3   
  411d23:	xor    al,dl
  411d25:	mov    ebx,DWORD PTR [esi+0x2435723f]
  411d2b:	or     eax,edi
  411d2d:	xor    eax,0xe7fcafd
  411d32:	sub    eax,0x46c050e4
  411d37:	hlt    
  411d38:	pop    ebx
  411d39:	push   0x1c
  411d3b:	sti    
  411d3c:	ja     0x411da1
  411d3e:	adc    eax,ebp
  411d40:	adc    al,0x2d
  411d42:	sbb    edx,DWORD PTR ds:0x2a3e652a
  411d48:	lods   eax,DWORD PTR ds:[esi]
  411d49:	mov    ds:0x5d1ac457,al
  411d4e:	ins    BYTE PTR es:[edi],dx
  411d4f:	call   0x3f954956
  411d54:	mov    eax,0x4745162c
  411d59:	data16 aad 0xba
  411d5c:	dec    ebx
  411d5d:	bound  esp,QWORD PTR [edx+0x49bea6ca]
  411d63:	scas   eax,DWORD PTR es:[edi]
  411d64:	lods   eax,DWORD PTR ds:[esi]
  411d65:	mov    edi,0x1a683734
  411d6a:	test   eax,0x24f7a211
  411d6f:	mov    al,0xf7
  411d71:	jg     0x411daf
  411d73:	inc    esp
  411d74:	jno    0x411de7
  411d76:	out    dx,al
  411d77:	xlat   BYTE PTR ds:[ebx]
  411d78:	rcr    BYTE PTR [ebp-0x152bdde8],cl
  411d7e:	push   0xffffff8c
  411d80:	jl     0x411d24
  411d82:	cwde   
  411d83:	dec    edx
  411d84:	jnp    0x411d82
  411d86:	test   bl,0xe6
  411d89:	test   BYTE PTR ds:0x2b67e16e,0x21
  411d90:	pushf  
  411d91:	(bad)  
  411d92:	and    DWORD PTR [esi],esp
  411d94:	aaa    
  411d95:	mov    ecx,DWORD PTR [ebp+0x179d79f9]
  411d9b:	add    dl,ch
  411d9d:	les    esp,FWORD PTR [ecx]
  411d9f:	fwait
  411da0:	retf   
  411da1:	push   0x89fb085c
  411da6:	cli    
  411da7:	ja     0x411e22
  411da9:	push   esp
  411daa:	jb     0x411dec
  411dac:	(bad)  
  411dad:	xchg   ebp,eax
  411dae:	mov    al,0xe4
  411db0:	test   al,0x31
  411db2:	cwde   
  411db3:	(bad)  
  411db4:	xchg   ebx,eax
  411db5:	dec    edi
  411db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db7:	cmp    DWORD PTR [esi+0x59b02d5b],edi
  411dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dbe:	js     0x411d5d
  411dc0:	pusha  
  411dc1:	mov    dh,0x9d
  411dc3:	push   esi
  411dc4:	add    eax,0x9f2be4ba
  411dc9:	mov    ds:0xd6d149cb,eax
  411dce:	sbb    al,0x8d
  411dd0:	jnp    0x411e00
  411dd2:	mov    edi,0xe028e2aa
  411dd7:	jne    0x411d61
  411dd9:	frstor [edi+0x753b4cdc]
  411ddf:	popa   
  411de0:	add    DWORD PTR [eax+0x67ffc384],esi
  411de6:	push   ds
  411de7:	sbb    esp,DWORD PTR [ebx-0x41]
  411dea:	shl    BYTE PTR [eax],cl
  411dec:	cmp    BYTE PTR [ecx+ebx*8-0x3f],cl
  411df0:	loope  0x411d72
  411df2:	mov    ebx,0x38b5e453
  411df7:	mov    edx,0x9bbac10f
  411dfc:	push   cs
  411dfd:	push   ds
  411dfe:	mov    dl,0xef
  411e00:	int3   
  411e01:	sub    eax,0x8613f4e4
  411e06:	fwait
  411e07:	mov    esi,0x6b8825c6
  411e0c:	mov    WORD PTR [ebp+0x6c],es
  411e0f:	push   ebp
  411e10:	js     0x411e51
  411e12:	hlt    
  411e13:	cmp    edx,DWORD PTR [edi+ecx*4-0x489f117d]
  411e1a:	xor    esi,DWORD PTR [edx+0xe]
  411e1d:	mov    esi,0x64340e07
  411e22:	xchg   edi,eax
  411e23:	scas   al,BYTE PTR es:[edi]
  411e24:	mov    BYTE PTR [ecx+0x2a],ah
  411e27:	es cmp ebx,esp
  411e2a:	xor    cl,ch
  411e2c:	ret    
  411e2d:	(bad)  
  411e2e:	push   esp
  411e2f:	dec    esp
  411e30:	fisub  WORD PTR [ebx-0x5baeebde]
  411e36:	xchg   edx,eax
  411e37:	stos   DWORD PTR es:[edi],eax
  411e38:	or     BYTE PTR [eax+0x34],ah
  411e3b:	sbb    al,0x5f
  411e3d:	cmp    al,0x42
  411e3f:	movzx  edi,WORD PTR [edx+0x75]
  411e43:	rcl    BYTE PTR ds:0x83e6d48c,1
  411e49:	jecxz  0x411de7
  411e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e4c:	mov    bl,0xb2
  411e4e:	jb     0x411e5f
  411e50:	cmc    
  411e51:	adc    DWORD PTR [edx],ebx
  411e53:	adc    eax,0x701da8e
  411e58:	cwde   
  411e59:	test   eax,0xdb152bd6
  411e5e:	add    eax,0x9df1cd3
  411e63:	xchg   esi,eax
  411e64:	push   ecx
  411e65:	mov    ecx,DWORD PTR [ecx+0x76]
  411e68:	out    0xc9,eax
  411e6a:	xlat   BYTE PTR ds:[ebx]
  411e6b:	cld    
  411e6c:	push   ebx
  411e6d:	(bad)  
  411e6e:	out    dx,eax
  411e6f:	cvtdq2ps xmm6,XMMWORD PTR [edi-0x69d5ef0f]
  411e76:	adc    dh,ah
  411e78:	ss mov ebp,0xadc66e83
  411e7e:	inc    esp
  411e7f:	icebp  
  411e80:	jno    0x411e4d
  411e82:	mov    esi,0x85dae9d1
  411e87:	in     al,0x8b
  411e89:	ja     0x411e35
  411e8b:	or     bl,ah
  411e8d:	push   esi
  411e8e:	ret    
  411e8f:	call   0x94568a49
  411e94:	les    esi,FWORD PTR [ebp-0x39]
  411e97:	ins    DWORD PTR es:[edi],dx
  411e98:	sbb    bl,BYTE PTR [esi-0x26]
  411e9b:	mov    ah,0xf8
  411e9d:	lahf   
  411e9e:	mov    edx,0x938c5626
  411ea3:	sub    DWORD PTR ds:0x97c1c278,ebp
  411ea9:	(bad)  
  411eaa:	mov    ecx,0xe731bfbd
  411eaf:	or     al,0xea
  411eb1:	not    DWORD PTR [edi+0x57]
  411eb4:	jp     0x411f30
  411eb6:	gs cmp al,0x12
  411eb9:	push   ss
  411eba:	push   ss
  411ebb:	lods   al,BYTE PTR ds:[esi]
  411ebc:	lods   al,BYTE PTR ds:[esi]
  411ebd:	cli    
  411ebe:	dec    ebp
  411ebf:	(bad)  
  411ec0:	retf   0x21e
  411ec3:	lods   al,BYTE PTR ds:[esi]
  411ec4:	jmp    0xa13f280e
  411ec9:	movaps xmm7,XMMWORD PTR [ecx+0x6a]
  411ecd:	(bad)  
  411ece:	hlt    
  411ecf:	sbb    ebp,edi
  411ed1:	aaa    
  411ed2:	call   0x1a83c777
  411ed7:	dec    edx
  411ed8:	push   esp
  411ed9:	aam    0xf
  411edb:	pushf  
  411edc:	cmp    esi,esp
  411ede:	rol    bh,0xa9
  411ee1:	sub    esp,DWORD PTR [ecx+0x23]
  411ee4:	or     ch,bh
  411ee6:	fdiv   QWORD PTR [edx]
  411ee8:	mov    cl,0x2b
  411eea:	sub    esi,DWORD PTR [esi-0x65]
  411eed:	cdq    
  411eee:	jle    0x411e76
  411ef0:	fnstsw WORD PTR [edx+esi*1-0x26f4104e]
  411ef7:	in     eax,0x61
  411ef9:	push   esp
  411efa:	cmp    ah,al
  411efc:	leave  
  411efd:	add    al,cl
  411eff:	lea    edi,[ecx+0x15]
  411f02:	dec    ebx
  411f03:	adc    edi,DWORD PTR [eax+0x411910da]
  411f09:	je     0x411ea9
  411f0b:	mov    ebx,0xe31127ba
  411f10:	inc    ecx
  411f11:	mov    esp,esi
  411f13:	inc    esp
  411f14:	sub    eax,0xa46be35c
  411f19:	rol    ah,cl
  411f1b:	in     eax,0xf0
  411f1d:	sbb    al,0x5c
  411f1f:	xchg   edx,eax
  411f20:	shl    ecx,cl
  411f22:	mov    eax,0xf47d5ac
  411f27:	jne    0x411f50
  411f29:	loope  0x411efa
  411f2b:	mov    ecx,0x87eb2b3d
  411f30:	out    dx,eax
  411f31:	mov    dh,ch
  411f33:	cmc    
  411f34:	ins    BYTE PTR es:[edi],dx
  411f35:	hlt    
  411f36:	test   bh,0x82
  411f39:	sbb    al,0x77
  411f3b:	ins    BYTE PTR es:[edi],dx
  411f3c:	icebp  
  411f3d:	jmp    0x1272:0x9cf8be32
  411f44:	lods   al,BYTE PTR ds:[esi]
  411f45:	loopne 0x411eeb
  411f47:	adc    dl,cl
  411f49:	pop    esi
  411f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f4b:	push   ecx
  411f4c:	push   0x40
  411f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f4f:	push   edi
  411f50:	mov    esi,0xc7cf3586
  411f55:	dec    ecx
  411f56:	sub    eax,0xea7fa427
  411f5b:	frstor [ebx]
  411f5d:	bsr    edi,esp
  411f60:	xlat   BYTE PTR ds:[ebx]
  411f61:	sbb    al,0xe6
  411f63:	push   edx
  411f64:	mov    ds:0x4c3c6532,eax
  411f69:	call   0x54bf:0x47bdca52
  411f70:	inc    ebx
  411f71:	xchg   ecx,eax
  411f72:	out    dx,eax
  411f73:	mov    esi,0xa65f5175
  411f78:	xlat   BYTE PTR ds:[ebx]
  411f79:	or     dh,al
  411f7b:	sub    al,0x8b
  411f7d:	mov    bh,0x16
  411f7f:	inc    esi
  411f80:	fwait
  411f81:	mov    ah,0x1f
  411f83:	xchg   ebp,eax
  411f84:	push   edx
  411f85:	test   eax,0x8f581dce
  411f8a:	pop    ecx
  411f8b:	jns    0x411f18
  411f8d:	inc    esi
  411f8e:	test   BYTE PTR [eax],0xcf
  411f91:	mov    ebp,0xb09b3225
  411f96:	mov    DWORD PTR [esi+0x70a2221e],ebx
  411f9c:	test   eax,0x6cf73940
  411fa1:	leave  
  411fa2:	push   0xb4321777
  411fa7:	adc    dh,dl
  411fa9:	imul   edx,DWORD PTR [ebx+0x652fe2b3],0xffffffee
  411fb0:	test   BYTE PTR [edi+0x70],0x5d
  411fb4:	popf   
  411fb5:	lds    esp,FWORD PTR [edx+0x52]
  411fb8:	adc    BYTE PTR [esp+eax*8-0x3497605d],0x10
  411fc0:	repz or al,0x9c
  411fc3:	or     edx,edi
  411fc5:	jno    0x411f8a
  411fc7:	jp     0x411fca
  411fc9:	test   al,0xa2
  411fcb:	stos   DWORD PTR es:[edi],eax
  411fcc:	sub    DWORD PTR [esi],ebx
  411fce:	les    ebp,FWORD PTR [ecx+0x24]
  411fd1:	mov    bh,0x6e
  411fd3:	cmp    eax,0x96e10165
  411fd8:	add    DWORD PTR [edi+0x1b89954e],0x62
  411fdf:	div    BYTE PTR [ebx-0x79]
  411fe2:	adc    al,0x8e
  411fe4:	(bad)  
  411fe5:	cmp    al,ah
  411fe7:	pop    esi
  411fe8:	aaa    
  411fe9:	xor    al,0xe9
  411feb:	or     ebx,DWORD PTR [esi+0x608faedd]
  411ff1:	stos   BYTE PTR es:[edi],al
  411ff2:	adc    edi,ecx
  411ff4:	or     al,BYTE PTR cs:[esi+0x687b9d8e]
  411ffb:	and    bh,bl
  411ffd:	sbb    al,0x4f
  411fff:	sbb    DWORD PTR [ebx-0x1a],edx
  412002:	adc    DWORD PTR [ebp+0x4de38762],eax
  412008:	cmp    dh,BYTE PTR [esi+edx*2]
  41200b:	fs mov eax,0x186e42d8
  412011:	es push cs
  412013:	pmulhuw mm7,QWORD PTR [edx+eiz*4]
  412017:	pop    edi
  412018:	shl    esp,cl
  41201a:	pop    edx
  41201b:	fcom   QWORD PTR [eax+edx*8]
  41201e:	je     0x411fc4
  412020:	fcomp  st(3)
  412022:	xchg   ecx,eax
  412023:	xlat   BYTE PTR ds:[ebx]
  412024:	ret    
  412025:	push   cs
  412026:	and    edi,esp
  412028:	fmul   st,st(7)
  41202a:	data16 lahf 
  41202c:	ins    DWORD PTR es:[edi],dx
  41202d:	ja     0x41205d
  41202f:	mov    ds:0x26e749e5,eax
  412034:	dec    ecx
  412035:	mov    cl,0x74
  412037:	and    cl,BYTE PTR [ecx]
  412039:	push   edx
  41203a:	imul   eax,DWORD PTR [esi-0xa2b55aa],0xf5bf9a7a
  412044:	inc    ecx
  412045:	or     DWORD PTR [eax-0x24248710],ebx
  41204b:	push   esp
  41204c:	xchg   ebx,edi
  41204e:	(bad)
  412051:	retf   
  412052:	mov    esi,0x912b3857
  412057:	ss aas 
  412059:	and    eax,0x2c46e7e8
  41205e:	pop    ss
  41205f:	pop    ebp
  412060:	fcomip st,st(2)
  412062:	lods   eax,DWORD PTR ds:[esi]
  412063:	and    DWORD PTR [ecx-0x3c],edi
  412066:	imul   ecx,DWORD PTR [edi],0xffffff8a
  412069:	xchg   ebx,eax
  41206a:	cli    
  41206b:	cwde   
  41206c:	sub    al,0xae
  41206e:	sbb    eax,0x8936d74a
  412073:	mov    ch,0x12
  412075:	mov    ebp,0xad2b43ed
  41207a:	mov    edi,0x7b0b95c5
  41207f:	jmp    0xb70d013b
  412084:	xchg   bh,dh
  412086:	add    ecx,ebx
  412088:	xchg   ecx,eax
  412089:	fbstp  TBYTE PTR [ebx+0x72]
  41208c:	loope  0x412085
  41208e:	call   0x73cc:0x274d2856
  412095:	hlt    
  412096:	hlt    
  412097:	mov    ebx,0x604536da
  41209c:	loopne 0x412047
  41209e:	fistp  WORD PTR [ebp-0x25e2e0ee]
  4120a4:	mov    ebp,0xbc84c115
  4120a9:	mov    fs,eax
  4120ab:	das    
  4120ac:	adc    edx,DWORD PTR [ebx]
  4120ae:	cmp    eax,0x50f9ea8c
  4120b3:	adc    eax,DWORD PTR [edi+0x61]
  4120b6:	loop   0x4120f8
  4120b8:	push   edx
  4120b9:	dec    esi
  4120ba:	es call 0x2f28:0xf3ec6f8
  4120c2:	mov    ds,WORD PTR [eax-0x127560bd]
  4120c8:	sub    ecx,DWORD PTR [eax-0x30d8ac95]
  4120ce:	push   edi
  4120cf:	jno    0x412068
  4120d1:	in     al,0x2c
  4120d3:	push   0xc7b2ceb3
  4120d8:	pop    es
  4120d9:	out    0x1a,eax
  4120db:	idiv   BYTE PTR [ebp+0x36]
  4120de:	jbe    0x41208f
  4120e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120e1:	sub    bl,dh
  4120e3:	xlat   BYTE PTR ds:[ebx]
  4120e4:	icebp  
  4120e5:	ins    BYTE PTR es:[edi],dx
  4120e6:	push   esi
  4120e8:	test   esi,esp
  4120ea:	fst    QWORD PTR [ebx+edx*2-0x58]
  4120ee:	dec    esi
  4120ef:	pop    ebp
  4120f0:	jecxz  0x41215e
  4120f2:	inc    eax
  4120f3:	fstp   QWORD PTR [ebx-0x51]
  4120f6:	jns    0x4120b7
  4120f8:	test   DWORD PTR [ebp-0x31b1d87b],0xc24a0802
  412102:	pop    ebx
  412103:	pop    es
  412104:	rcpps  xmm1,XMMWORD PTR ds:0xa68a8546
  41210b:	aaa    
  41210c:	add    esp,DWORD PTR [edi-0x1a9658eb]
  412112:	imul   edx,ebx,0xffffffd5
  412115:	retf   0xea0a
  412118:	jmp    0x4120fa
  41211a:	mov    dl,0x91
  41211c:	jmp    0x412186
  41211e:	(bad)  
  41211f:	push   edx
  412120:	dec    ecx
  412121:	jecxz  0x41210a
  412123:	leave  
  412124:	(bad)  
  412125:	aaa    
  412126:	sbb    DWORD PTR [edi+0x4a],ebp
  412129:	ins    BYTE PTR es:[edi],dx
  41212a:	lods   al,BYTE PTR ds:[esi]
  41212b:	xor    BYTE PTR [edi-0x3],cl
  41212e:	(bad)  
  412130:	cld    
  412131:	es pop esp
  412133:	xlat   BYTE PTR ds:[ebx]
  412134:	out    0xc1,al
  412136:	(bad)  
  412137:	pop    esi
  412138:	out    0x62,eax
  41213a:	(bad)  [esi]
  41213c:	ficomp DWORD PTR [ebx]
  41213e:	cmp    bh,BYTE PTR [eax]
  412140:	jb     0x4121b8
  412142:	mov    dl,BYTE PTR [esi-0x43d9428b]
  412148:	ffree  st(3)
  41214a:	jne    0x412155
  41214c:	aad    0xfd
  41214e:	pop    ebx
  41214f:	into   
  412150:	retf   
  412151:	call   0x4f9:0x7b6569bb
  412158:	out    dx,eax
  412159:	dec    esi
  41215a:	push   ebp
  41215b:	push   esp
  41215c:	fadd   DWORD PTR [edi+0x4c]
  41215f:	mov    esi,0x643745ef
  412164:	dec    esi
  412165:	lahf   
  412166:	and    BYTE PTR [ebx],0x9d
  412169:	or     cl,bh
  41216b:	aas    
  41216c:	retf   
  41216d:	outs   dx,DWORD PTR ds:[esi]
  41216e:	sub    ecx,0xb585d618
  412174:	aad    0x27
  412176:	mov    esi,0x857d1ade
  41217b:	dec    edi
  41217c:	shr    BYTE PTR [esi+edi*8-0x15],1
  412180:	dec    ecx
  412181:	popf   
  412182:	call   0xfdc6:0xf43aeda
  412189:	mov    ds:0x18a41246,al
  41218e:	sub    ebp,eax
  412190:	shl    DWORD PTR [edx-0x5a4fb25f],1
  412196:	ins    BYTE PTR es:[edi],dx
  412197:	jbe    0x412173
  412199:	and    BYTE PTR [esp+ebp*2],bl
  41219c:	out    dx,eax
  41219d:	cmp    al,0xd1
  41219f:	ret    0x28d5
  4121a2:	and    al,0x87
  4121a4:	adc    ch,dl
  4121a6:	push   ebx
  4121a7:	enter  0x23c0,0xbf
  4121ab:	out    dx,eax
  4121ac:	mov    bl,0x8d
  4121ae:	mov    edi,0xc3996eff
  4121b3:	cmp    al,0x71
  4121b5:	mov    ecx,0xeb2ef79d
  4121ba:	pushf  
  4121bb:	pop    ebx
  4121bc:	ja     0x412184
  4121be:	int3   
  4121bf:	loope  0x4121db
  4121c1:	js     0x412144
  4121c3:	jge    0x412182
  4121c5:	cdq    
  4121c6:	or     cl,BYTE PTR [esi+eax*1-0x33344a3a]
  4121cd:	push   ecx
  4121ce:	ins    BYTE PTR es:[edi],dx
  4121cf:	(bad)  
  4121d0:	add    BYTE PTR [ebp+edx*1+0x363ff24a],0x57
  4121d8:	cmp    DWORD PTR [ebp+0x3],0xc365a3f7
  4121df:	repnz enter 0x93b7,0x9c
  4121e4:	es (bad) 
  4121e6:	cmp    bl,BYTE PTR [ebx+0x69]
  4121e9:	jae    0x412182
  4121eb:	mov    al,ds:0xea064a05
  4121f0:	push   edi
  4121f1:	mov    bh,0x5
  4121f3:	sbb    al,0x44
  4121f5:	pusha  
  4121f6:	push   esi
  4121f7:	call   0xe5e77ffa
  4121fc:	dec    esp
  4121fd:	(bad)  
  4121fe:	jl     0x4121a5
  412200:	lock fbld TBYTE PTR [edx+eax*2]
  412204:	mov    cl,0xcf
  412206:	sbb    al,0x2f
  412208:	aas    
  412209:	dec    ebx
  41220a:	fcom   DWORD PTR [edx+0x3492cb76]
  412210:	add    al,0xce
  412212:	sbb    cl,dh
  412214:	mov    ds:0xd28e90f4,al
  412219:	jmp    0x3cf8:0xb87a61ea
  412220:	inc    eax
  412221:	aad    0xf0
  412223:	pop    ds
  412224:	push   0x7c795891
  412229:	mov    al,0x5f
  41222b:	repnz pop esi
  41222d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41222e:	jp     0x4121e4
  412230:	add    cl,ch
  412232:	imul   ecx,edx,0xffffff91
  412235:	(bad)  
  412236:	mov    dl,0xda
  412238:	call   0x1916:0xf104da1b
  41223f:	sbb    eax,0x11d5b4b
  412244:	cmp    ebp,DWORD PTR [esi]
  412246:	mov    dl,0x9a
  412248:	mov    ds:0xb1d3b394,al
  41224d:	push   ss
  41224e:	test   al,0xf7
  412250:	call   0xa280:0xc025a8bd
  412257:	cmp    dl,BYTE PTR [esi-0x2fa689e6]
  41225d:	and    ebx,DWORD PTR [edi+0x53]
  412260:	dec    esp
  412261:	(bad)  
  412262:	dec    edi
  412263:	xor    DWORD PTR fs:[esi+0x4b],esi
  412267:	fs pop edx
  412269:	push   esp
  41226a:	nop
  41226b:	in     eax,0x3f
  41226d:	ror    BYTE PTR [eax-0x67233ede],1
  412273:	cmp    cl,ah
  412275:	in     al,0xff
  412277:	jns    0x4122ac
  412279:	jae    0x412293
  41227b:	ins    BYTE PTR es:[edi],dx
  41227c:	hlt    
  41227d:	add    eax,0x8f027a40
  412282:	jmp    0x412222
  412284:	stos   DWORD PTR es:[edi],eax
  412285:	enter  0x293c,0xe1
  412289:	or     esp,DWORD PTR [edx-0x4090ba2f]
  41228f:	test   al,0xff
  412291:	call   0xcb2e778e
  412296:	fst    QWORD PTR [edx]
  412298:	jne    0x412315
  41229a:	xchg   ecx,eax
  41229b:	lea    esi,[esi]
  41229d:	jno    0x4122ac
  41229f:	mov    esi,0x85fcf01c
  4122a4:	mov    dl,0xb4
  4122a6:	mov    bl,0x7b
  4122a8:	adc    BYTE PTR [edi-0x2b356ea7],0x86
  4122af:	pop    ecx
  4122b0:	push   ecx
  4122b1:	jne    0x412324
  4122b3:	mov    DWORD PTR [edi+0x15],ecx
  4122b6:	inc    ebp
  4122b7:	leave  
  4122b8:	pop    ds
  4122b9:	lea    ebx,[ebx]
  4122bb:	js     0x412244
  4122bd:	ins    BYTE PTR es:[edi],dx
  4122be:	imul   edi,esi,0x47164029
  4122c4:	mov    ah,0xf7
  4122c6:	std    
  4122c7:	add    al,BYTE PTR gs:[edx]
  4122ca:	sahf   
  4122cb:	inc    edi
  4122cc:	ss out 0x87,eax
  4122cf:	lahf   
  4122d0:	pop    edi
  4122d1:	inc    ebx
  4122d2:	cli    
  4122d3:	dec    edx
  4122d4:	jmp    0x1fc1dfcb
  4122d9:	daa    
  4122da:	push   ecx
  4122db:	pop    edx
  4122dc:	inc    esi
  4122dd:	cli    
  4122de:	pop    ebp
  4122df:	push   ebp
  4122e0:	jge    0x412339
  4122e2:	lahf   
  4122e3:	mov    bl,0xea
  4122e5:	test   eax,0x32873194
  4122ea:	out    0xe9,al
  4122ec:	and    edx,DWORD PTR [ebx]
  4122ee:	dec    ecx
  4122ef:	and    DWORD PTR [eax],0x31
  4122f2:	loopne 0x412284
  4122f4:	mov    dh,0x96
  4122f6:	stos   BYTE PTR es:[edi],al
  4122f7:	outs   dx,BYTE PTR ds:[esi]
  4122f8:	pop    ss
  4122f9:	sub    DWORD PTR [ebx+0x7c085e0],esp
  4122ff:	daa    
  412300:	mov    ebp,0x1edb78e9
  412305:	stos   DWORD PTR es:[edi],eax
  412306:	dec    DWORD PTR [edx+0x57]
  412309:	mov    edi,0x56164db7
  41230e:	xor    al,0xfb
  412310:	out    0xbc,al
  412312:	dec    edx
  412313:	and    BYTE PTR [eax],ah
  412315:	data16 addr16 fcmovnb st,st(4)
  412319:	adc    BYTE PTR [esi-0x3342ccbc],dl
  41231f:	test   eax,0x6822c846
  412324:	mov    ecx,0x999c4281
  412329:	in     eax,dx
  41232a:	imul   esi,ecx,0xffffffe2
  41232d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41232e:	(bad)  
  41232f:	pop    eax
  412330:	leave  
  412331:	adc    ch,BYTE PTR [eax]
  412333:	jne    0x4122ff
  412335:	into   
  412336:	fcom   DWORD PTR [ecx+0x50ad6b33]
  41233c:	(bad)  [ebx+ebp*4]
  41233f:	push   es
  412340:	iret   
  412341:	fs mov esi,0x6169c09c
  412347:	mov    bl,0xc
  412349:	push   cs
  41234a:	push   0xd0754def
  41234f:	or     DWORD PTR [edx+0x73c91e32],ecx
  412355:	in     eax,dx
  412356:	popa   
  412357:	jns    0x41237e
  412359:	sub    DWORD PTR [ecx+0x426d769e],edx
  41235f:	mov    esp,0xea810bc
  412364:	in     eax,dx
  412365:	stos   DWORD PTR es:[edi],eax
  412366:	hlt    
  412367:	pusha  
  412368:	xchg   edi,eax
  412369:	repnz inc esi
  41236b:	xchg   esp,eax
  41236c:	pop    esp
  41236d:	into   
  41236e:	ficomp DWORD PTR [edx-0x26]
  412371:	add    BYTE PTR [edx-0x1d],bl
  412374:	shl    DWORD PTR [ebx],cl
  412376:	xor    eax,0x435b5643
  41237b:	pop    esi
  41237c:	leave  
  41237d:	hlt    
  41237e:	cld    
  41237f:	mov    bh,0xd4
  412381:	adc    ah,ah
  412383:	push   esi
  412384:	gs loopne 0x4123bb
  412387:	sbb    BYTE PTR [ebx-0x5f],0x5
  41238b:	push   edi
  41238c:	sbb    eax,0x162a1860
  412391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412392:	push   0xffffff81
  412394:	jno    0x412364
  412396:	pop    ebp
  412397:	fldcw  WORD PTR [ebp+0x6a69d959]
  41239d:	fisubr WORD PTR [ebp+0x3399cb38]
  4123a3:	mov    ebp,0xafc25385
  4123a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a9:	mov    DWORD PTR [edi+0x7859da74],esp
  4123af:	jmp    0x8624:0xc7a609c7
  4123b6:	lea    edi,[ecx+0x1ab51a97]
  4123bc:	enter  0xe3fc,0x2b
  4123c0:	pop    ss
  4123c1:	inc    esi
  4123c2:	xchg   BYTE PTR [ebp+0x7958a5b0],bl
  4123c8:	popa   
  4123c9:	jle    0x4123a6
  4123cb:	and    dl,BYTE PTR [edi]
  4123cd:	push   0x6b2f29
  4123d2:	out    dx,al
  4123d3:	das    
  4123d4:	call   0x6afa54f9
  4123d9:	cmp    BYTE PTR [edx],dl
  4123db:	adc    al,0xa8
  4123de:	popf   
  4123df:	fcmovbe st,st(2)
  4123e1:	and    BYTE PTR [esi-0x746f87b9],bl
  4123e7:	ret    
  4123e8:	add    DWORD PTR [eax],esp
  4123ea:	es xor eax,0x3e951d7a
  4123f0:	add    ebx,DWORD PTR [ebx+0x1b]
  4123f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123f4:	push   ds
  4123f5:	pop    ebx
  4123f6:	dec    DWORD PTR [edx]
  4123f8:	test   BYTE PTR [eax+0x40bb11d0],dl
  4123fe:	sub    BYTE PTR [ecx-0x2b],0x7
  412402:	mov    esp,esi
  412404:	or     DWORD PTR [edi],esp
  412406:	or     al,0x9d
  412408:	push   0x1b
  41240a:	add    al,0xbe
  41240c:	dec    ecx
  41240d:	in     al,dx
  41240e:	jbe    0x41243b
  412410:	mov    esi,0x8c03b45d
  412415:	inc    ebx
  412416:	mov    al,ds:0x1eb68fba
  41241b:	int3   
  41241c:	imul   edi,DWORD PTR [edx],0xffffffe6
  41241f:	cs add eax,0x962de3bc
  412425:	push   edx
  412426:	in     al,dx
  412427:	shr    DWORD PTR [ebx+ebp*2-0x2a],cl
  41242b:	adc    BYTE PTR [ebx+0x3c],dl
  41242e:	fcomip st,st(7)
  412430:	inc    edx
  412431:	pop    ebp
  412432:	loopne 0x412477
  412434:	into   
  412435:	dec    esp
  412436:	mov    bh,0xb
  412438:	rcl    BYTE PTR [ecx-0x150e1fcc],1
  41243e:	jp     0x4124aa
  412440:	les    ebp,FWORD PTR [edx+esi*4]
  412443:	xchg   esp,eax
  412444:	mov    sp,0xa125
  412448:	adc    eax,0x42da06a0
  41244d:	test   al,0x57
  41244f:	xor    BYTE PTR [ebp+0x2f],al
  412452:	push   edi
  412453:	daa    
  412454:	outs   dx,BYTE PTR ds:[esi]
  412455:	jmp    0xa670530e
  41245a:	aas    
  41245b:	push   esp
  41245c:	xchg   ebp,eax
  41245d:	push   ds
  41245e:	neg    DWORD PTR [eax-0xa]
  412461:	jnp    0x412437
  412463:	faddp  st(4),st
  412465:	mov    ebx,0xa6a7554d
  41246a:	fsub   QWORD PTR [eax]
  41246c:	inc    edx
  41246d:	push   es
  41246e:	loope  0x412425
  412470:	fcom   DWORD PTR [ebx-0x48]
  412473:	rol    DWORD PTR [edx+eiz*4],cl
  412476:	adc    edi,DWORD PTR [ebx+0x41b24c6f]
  41247c:	int    0x18
  41247e:	(bad)  
  41247f:	jno    0x4124cb
  412481:	(bad)  
  412482:	dec    ebp
  412483:	fwait
  412484:	adc    ah,dl
  412486:	pusha  
  412487:	mov    dl,0x66
  412489:	out    0x2f,eax
  41248b:	mov    dh,0xc
  41248d:	(bad)  
  41248e:	xchg   edx,eax
  41248f:	(bad)
  412492:	and    ah,BYTE PTR [ebx-0x3a]
  412495:	mov    bl,0x50
  412497:	fadd   DWORD PTR [edi+0x4100bd9e]
  41249d:	div    ebx
  41249f:	push   ecx
  4124a0:	je     0x4124c3
  4124a2:	or     ebp,DWORD PTR [ebx-0x5f228889]
  4124a8:	test   BYTE PTR [edx+0x1a5cde31],0xa
  4124af:	jecxz  0x41252b
  4124b1:	lods   eax,DWORD PTR ds:[esi]
  4124b2:	pusha  
  4124b3:	mov    DWORD PTR [ecx],esi
  4124b5:	es mov cl,0x9c
  4124b8:	sahf   
  4124b9:	(bad)  
  4124bb:	sbb    al,0x5b
  4124bd:	retf   0xfb92
  4124c0:	add    eax,0x508d3334
  4124c5:	dec    esi
  4124c6:	mov    edi,0x235f34ba
  4124cb:	not    DWORD PTR [esp+eax*1+0x2a250ec7]
  4124d2:	cdq    
  4124d3:	xor    dl,BYTE PTR cs:0xacd3d9ee
  4124da:	xlat   BYTE PTR ds:[ebx]
  4124db:	adc    ch,BYTE PTR [ebx+0x48]
  4124de:	sbb    DWORD PTR [ecx-0x7c],esi
  4124e1:	pop    edi
  4124e2:	xor    DWORD PTR [eax-0x4451c471],ebx
  4124e8:	es inc ecx
  4124ea:	pop    edi
  4124eb:	jl     0x4124d3
  4124ed:	test   eax,0xe4aa70be
  4124f2:	jp     0x41256e
  4124f4:	je     0x41252b
  4124f6:	mov    ecx,0x2ccffca3
  4124fb:	ss cwde 
  4124fd:	fild   QWORD PTR [esi+0x0]
  412500:	mov    bh,0x8b
  412502:	xor    eax,0x983a85aa
  412507:	mov    BYTE PTR [edi+0x39],dl
  41250a:	inc    ebp
  41250b:	cdq    
  41250c:	loope  0x4124b7
  41250e:	test   eax,0xf6c5266e
  412513:	call   DWORD PTR [edi-0x6d]
  412516:	imul   edi,DWORD PTR [edx+esi*1],0xffffffc4
  41251a:	aam    0xa6
  41251c:	daa    
  41251d:	aad    0x24
  41251f:	mov    al,al
  412521:	mov    bl,BYTE PTR [ebp+0x6]
  412524:	mov    dh,BYTE PTR [edi]
  412526:	ret    
  412527:	cmp    DWORD PTR ds:0x15ad4a5c,eax
  41252d:	adc    dl,bl
  41252f:	aas    
  412530:	jg     0x412502
  412532:	stc    
  412533:	idiv   DWORD PTR ds:0x518a4aa5
  412539:	or     dl,BYTE PTR [esi]
  41253b:	les    edi,FWORD PTR [ebp-0x3bf37260]
  412541:	pop    ebx
  412542:	in     eax,0x4e
  412544:	call   0x3326c810
  412549:	pusha  
  41254a:	cs mov cl,0x95
  41254d:	adc    edx,edi
  41254f:	jnp    0x412516
  412551:	aad    0x45
  412553:	push   ebx
  412554:	shl    BYTE PTR [esi],cl
  412556:	pop    ds
  412557:	xor    DWORD PTR [ebx+eiz*4-0x5f5d2e34],0xc757e96d
  412562:	out    dx,al
  412563:	mov    al,ds:0xfa53265
  412568:	push   ss
  412569:	imul   edx,ebp,0x28
  41256c:	adc    al,0x32
  41256e:	mov    bl,0x70
  412570:	sbb    eax,0x1ef48eee
  412575:	push   0xfffffffa
  412577:	cmp    ebx,DWORD PTR [esi]
  412579:	icebp  
  41257a:	std    
  41257b:	mov    ch,0xa9
  41257d:	nop
  41257e:	(bad)  
  41257f:	jne    0x412585
  412581:	sbb    BYTE PTR [edi+0x1c6d4e03],al
  412587:	xchg   ebx,eax
  412588:	pusha  
  412589:	and    BYTE PTR [edi-0x7e],al
  41258c:	or     BYTE PTR [edx+0x60f9f3f4],0xd6
  412593:	cwde   
  412594:	pusha  
  412595:	xor    al,0x4f
  412597:	dec    esp
  412598:	cwde   
  412599:	cwde   
  41259a:	dec    ebx
  41259b:	mov    cl,0x41
  41259d:	ss dec esi
  41259f:	jle    0x4125ea
  4125a1:	mov    ch,0x4a
  4125a3:	jge    0x412583
  4125a5:	sub    al,0xe2
  4125a7:	test   DWORD PTR [esi-0x23fa2a86],eax
  4125ad:	pushf  
  4125ae:	sbb    al,0xff
  4125b0:	cmp    eax,0xb5db967d
  4125b5:	stos   BYTE PTR es:[edi],al
  4125b6:	and    esp,DWORD PTR [esi]
  4125b8:	(bad)  
  4125b9:	fist   DWORD PTR [ebp+0x2e]
  4125bc:	ror    ah,1
  4125be:	inc    edx
  4125bf:	sahf   
  4125c0:	xor    cl,dh
  4125c2:	arpl   WORD PTR [ebp-0xb],ax
  4125c5:	fbstp  TBYTE PTR [esi]
  4125c7:	stos   BYTE PTR es:[edi],al
  4125c8:	xchg   ebp,eax
  4125c9:	sbb    al,0xd0
  4125cb:	jmp    0x37e68e2
  4125d0:	aad    0x3e
  4125d2:	push   esi
  4125d3:	pop    ds
  4125d4:	pusha  
  4125d5:	jnp    0x4125a8
  4125d7:	push   ss
  4125d8:	fisttp DWORD PTR [ebx-0x38d8fa25]
  4125de:	(bad)  
  4125df:	stc    
  4125e0:	xor    al,0xab
  4125e2:	popf   
  4125e3:	or     ebp,ebx
  4125e5:	inc    ebx
  4125e6:	fcomi  st,st(0)
  4125e9:	xchg   eax,esp
  4125eb:	cmp    al,0x90
  4125ed:	cmp    dl,dh
  4125ef:	push   ebp
  4125f0:	mov    dl,0xf8
  4125f2:	fsub   DWORD PTR [ecx-0x312c3ce4]
  4125f8:	test   ah,0xf3
  4125fb:	jns    0x4125bb
  4125fd:	sbb    dl,BYTE PTR [edx+0x1b]
  412600:	cmp    bh,BYTE PTR [edx+ecx*4-0x42]
  412604:	imul   esp,ebp,0x2c
  412607:	cmp    eax,0xc14d188
  41260c:	fnstenv ds:0xb777fbf3
  412612:	jne    0x41267c
  412614:	clc    
  412615:	data16 clc 
  412617:	mov    dl,0xa5
  412619:	pop    edi
  41261a:	(bad)  
  41261b:	xlat   BYTE PTR ds:[ebx]
  41261c:	push   ebx
  41261d:	pop    ss
  41261e:	lds    ebx,FWORD PTR [edi]
  412620:	xor    dh,BYTE PTR [ebx]
  412622:	jle    0x41267a
  412624:	arpl   WORD PTR ds:0x141f75eb,cx
  41262a:	add    ecx,DWORD PTR [ebp+0x26]
  41262d:	daa    
  41262e:	jnp    0x4125b6
  412630:	mov    dl,0x26
  412632:	inc    edx
  412633:	mov    cl,0x1f
  412635:	sbb    eax,edx
  412637:	(bad)  
  412638:	jecxz  0x4126b1
  41263a:	jno    0x412673
  41263c:	and    al,0x38
  41263e:	outs   dx,BYTE PTR ds:[esi]
  41263f:	adc    al,0x6c
  412641:	cmc    
  412642:	dec    ebx
  412643:	fstp   DWORD PTR [edi-0x20]
  412646:	mov    al,ds:0xb56fb0f2
  41264b:	mov    WORD PTR [edi+0x3cdc27b],?
  412651:	adc    al,0xf6
  412653:	and    esi,0x944e1181
  412659:	sub    eax,0x5e995fe9
  41265e:	bound  eax,QWORD PTR [ebp-0x533bb95e]
  412664:	ds inc edx
  412666:	call   0xb5e6b0
  41266b:	sbb    eax,0xb336a523
  412670:	jl     0x412661
  412672:	repz and al,0x64
  412675:	lea    esp,[eax+0x7a6c800e]
  41267b:	sub    al,0x25
  41267d:	(bad)  
  41267e:	popf   
  41267f:	pop    ds
  412680:	cmp    BYTE PTR [ebp-0x20],bh
  412683:	pop    ebx
  412684:	mov    ebx,0xefa18ef5
  412689:	ret    
  41268a:	out    dx,al
  41268b:	or     eax,0xeaf91fa7
  412690:	jmp    0x41268c
  412692:	out    0x8d,al
  412694:	outs   dx,DWORD PTR ds:[esi]
  412695:	arpl   WORD PTR [edx-0x448813f2],bx
  41269b:	call   0xb1362113
  4126a0:	les    eax,FWORD PTR [edx]
  4126a2:	jl     0x412722
  4126a4:	gs out dx,eax
  4126a6:	push   ebx
  4126a7:	cmp    esi,DWORD PTR [esi+0x6102b35e]
  4126ad:	cdq    
  4126ae:	shl    DWORD PTR [edi],cl
  4126b0:	mov    ebp,0xba610292
  4126b5:	mov    edi,0xf387e6da
  4126ba:	lods   al,BYTE PTR ds:[esi]
  4126bb:	xlat   BYTE PTR ds:[ebx]
  4126bc:	mov    edi,DWORD PTR [edi]
  4126be:	enter  0xc9f1,0x1e
  4126c2:	lahf   
  4126c3:	jmp    0x4126a8
  4126c5:	xor    DWORD PTR [ecx-0x5b],eax
  4126c8:	or     al,0x50
  4126ca:	aas    
  4126cb:	push   esp
  4126cc:	pop    es
  4126cd:	xor    eax,0xdaaf24a3
  4126d2:	xlat   BYTE PTR ds:[ebx]
  4126d3:	inc    eax
  4126d4:	sbb    DWORD PTR [esi-0x7b],0xffffffa6
  4126d8:	mov    edx,0x73e1b782
  4126dd:	js     0x412673
  4126df:	sahf   
  4126e0:	dec    edx
  4126e1:	loopne 0x412673
  4126e3:	push   ss
  4126e4:	and    ebx,esi
  4126e6:	gs xchg esi,eax
  4126e8:	das    
  4126e9:	add    BYTE PTR [edx+ebx*8],cl
  4126ec:	lock mov ebx,0x90596443
  4126f2:	shr    DWORD PTR [edi-0x2a],0xa1
  4126f6:	xchg   BYTE PTR [edx],ch
  4126f8:	(bad)  
  4126f9:	fcmovnb st,st(6)
  4126fb:	push   0x404aa25b
  412700:	imul   eax,ebp,0xffffffbe
  412703:	pushf  
  412704:	jg     0x41269e
  412706:	push   ecx
  412707:	(bad)  [edx-0x60c5a6d0]
  41270d:	mov    eax,ds:0x9417eed0
  412712:	out    dx,eax
  412713:	pop    edi
  412714:	adc    ch,BYTE PTR [eax+0x1a873137]
  41271a:	adc    eax,0x8e71cee4
  41271f:	fsubr  QWORD PTR [edx+0x7e34fb49]
  412725:	sub    BYTE PTR ss:[ebx-0x95c64db],dl
  41272c:	rol    edi,cl
  41272e:	(bad)  
  41272f:	out    0xcd,al
  412731:	pusha  
  412732:	stos   BYTE PTR es:[edi],al
  412733:	fbld   TBYTE PTR cs:[ebx-0x2ae2098a]
  41273a:	scas   al,BYTE PTR es:[edi]
  41273b:	out    dx,eax
  41273c:	pop    ebp
  41273d:	inc    edi
  41273e:	das    
  41273f:	jns    0x412762
  412741:	in     eax,dx
  412742:	sub    DWORD PTR [ebx],0xc80ff709
  412748:	mov    bh,0x7a
  41274a:	lea    ecx,[ecx+0x63]
  41274d:	hlt    
  41274e:	mov    ecx,0xc14826b0
  412753:	inc    ebx
  412754:	mov    esp,edi
  412756:	or     DWORD PTR [ebx+0x4c],edx
  412759:	inc    ecx
  41275a:	lahf   
  41275b:	adc    al,0x5f
  41275d:	mov    DWORD PTR ds:[ebp-0x51ae134a],ebx
  412764:	rol    DWORD PTR [edx],1
  412766:	inc    ecx
  412767:	push   edi
  412768:	aaa    
  412769:	fistp  QWORD PTR [edi]
  41276b:	repnz pop edi
  41276d:	push   esi
  41276e:	scas   al,BYTE PTR es:[edi]
  41276f:	or     bh,BYTE PTR [edi+ebp*1+0x205959cc]
  412776:	mov    eax,0x3eb00c3c
  41277b:	jmp    0x4127c0
  41277d:	sub    al,0x4d
  41277f:	dec    ebp
  412780:	fwait
  412781:	dec    esp
  412782:	mov    BYTE PTR ds:0xb3c330db,dl
  412788:	outs   dx,BYTE PTR ds:[esi]
  412789:	xlat   BYTE PTR ds:[ebx]
  41278a:	sbb    BYTE PTR [edi],0x79
  41278d:	sahf   
  41278e:	inc    ebx
  41278f:	fmul   DWORD PTR [ecx+edx*2]
  412792:	and    edi,edx
  412794:	mov    dl,0xdc
  412796:	mov    ch,0x70
  412798:	bound  esp,QWORD PTR [ecx-0x1c1f7dce]
  41279e:	pop    edx
  41279f:	loope  0x412768
  4127a1:	pop    esp
  4127a2:	outs   dx,BYTE PTR ds:[esi]
  4127a3:	mov    ds:0xdc0309ff,al
  4127a8:	rol    BYTE PTR [edi-0x3e],1
  4127ab:	lods   al,BYTE PTR ds:[esi]
  4127ac:	int3   
  4127ad:	les    edi,FWORD PTR es:[ebx+0x7d]
  4127b1:	jge    0x41281d
  4127b3:	lea    edi,ds:[ecx-0x195dc1a2]
  4127ba:	xor    ch,BYTE PTR [esp+edx*8+0x948d22e]
  4127c1:	scas   al,BYTE PTR es:[edi]
  4127c2:	jbe    0x41274b
  4127c4:	(bad)  
  4127c5:	push   eax
  4127c6:	fnsave [edx]
  4127c8:	mov    WORD PTR [edi],?
  4127ca:	mov    eax,0xcfe877ee
  4127cf:	pop    ds
  4127d0:	push   esi
  4127d1:	pop    ebp
  4127d2:	arpl   WORD PTR [ecx+0x7f],bx
  4127d5:	xor    esp,DWORD PTR [esi]
  4127d7:	mov    esp,0x8fcf53ab
  4127dc:	pop    ds
  4127dd:	xor    DWORD PTR [esi+0x28],0x1cbe0c78
  4127e4:	sbb    al,BYTE PTR [eax]
  4127e6:	add    al,0x2a
  4127e8:	and    eax,0xac4a22e4
  4127ed:	pusha  
  4127ee:	xor    eax,0x5d77d611
  4127f3:	xor    al,0xc2
  4127f5:	(bad)  
  4127f6:	enter  0xe755,0xe7
  4127fa:	mov    ax,ds:0x55830837
  412800:	pushf  
  412801:	jl     0x412836
  412803:	(bad)  
  412804:	popf   
  412805:	(bad)  
  412806:	cld    
  412807:	ins    BYTE PTR es:[edi],dx
  412808:	hlt    
  412809:	scas   al,BYTE PTR es:[edi]
  41280a:	cmp    al,0x22
  41280c:	(bad)  
  41280d:	xlat   BYTE PTR ds:[ebx]
  41280e:	scas   al,BYTE PTR es:[edi]
  41280f:	ins    BYTE PTR es:[edi],dx
  412810:	xor    DWORD PTR [ebx+0x49],esi
  412813:	ins    BYTE PTR es:[edi],dx
  412814:	aaa    
  412815:	mov    eax,DWORD PTR [eax+0x31]
  412818:	and    ebp,DWORD PTR [eax+ebp*1+0x30]
  41281c:	in     eax,dx
  41281d:	(bad)  
  41281f:	push   ebp
  412820:	sbb    eax,edi
  412822:	cmc    
  412823:	fcmovb st,st(5)
  412825:	cmp    eax,0x4f4b03e4
  41282a:	sub    al,0x8a
  41282c:	ins    DWORD PTR es:[edi],dx
  41282d:	mov    eax,0xcd0b59bb
  412832:	sbb    eax,0x6b9fffa0
  412837:	or     cl,BYTE PTR [ebx+0x2d90104b]
  41283d:	ja     0x4128ba
  41283f:	xor    BYTE PTR [eax],0xf
  412842:	sub    ah,ch
  412844:	xor    al,0x85
  412846:	inc    eax
  412847:	push   es
  412848:	in     al,dx
  412849:	jge    0x41281e
  41284b:	scas   eax,DWORD PTR es:[edi]
  41284c:	or     eax,0x4a6572f6
  412851:	in     eax,dx
  412852:	lds    ebp,FWORD PTR [edi+0x27b6f949]
  412858:	and    BYTE PTR ds:0x38f4d4ca,ch
  41285e:	out    dx,eax
  41285f:	mov    DWORD PTR [esi],ecx
  412861:	and    al,0x7c
  412863:	fs jne 0x41287a
  412866:	mov    ebp,ecx
  412868:	adc    eax,0xef2fafbf
  41286d:	outs   dx,DWORD PTR ds:[esi]
  41286e:	xor    eax,0x2e9e82cf
  412873:	retf   
  412874:	inc    ecx
  412875:	ret    0x9a2a
  412878:	pusha  
  412879:	retf   0x6559
  41287c:	and    BYTE PTR [esi-0x41],ah
  41287f:	dec    ebx
  412880:	cmp    al,0xd1
  412882:	cwd    
  412884:	std    
  412885:	out    dx,al
  412886:	test   DWORD PTR [ecx],0xbdb7b215
  41288c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41288d:	push   ds
  41288e:	xchg   ecx,eax
  41288f:	shl    eax,0xbd
  412892:	jmp    0x412845
  412894:	rcr    BYTE PTR [eax],1
  412896:	(bad)  
  412897:	and    eax,0x51f6c5d3
  41289c:	daa    
  41289d:	fld    TBYTE PTR [edi-0x3a834fa4]
  4128a3:	and    dh,cl
  4128a5:	pushf  
  4128a6:	imul   ebx,DWORD PTR [edi],0xad3f1252
  4128ac:	fsub   QWORD PTR [esi+ebx*4]
  4128af:	mov    es,WORD PTR [ecx-0x5e]
  4128b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b3:	fmul   st,st(3)
  4128b5:	or     ecx,0xffffff92
  4128b8:	dec    ecx
  4128b9:	cmp    BYTE PTR [edi-0x75687967],ch
  4128bf:	aam    0xdd
  4128c1:	fld    DWORD PTR [ebp-0x70814550]
  4128c7:	sbb    eax,0xae52a03e
  4128cc:	out    0x9e,al
  4128ce:	jp     0x41292e
  4128d0:	fidiv  WORD PTR [eax+0x60a737a9]
  4128d6:	out    dx,al
  4128d7:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128d9:	xchg   esi,eax
  4128da:	in     eax,dx
  4128db:	shl    DWORD PTR [esi-0x26974c0],1
  4128e1:	mov    bl,0x29
  4128e3:	push   esi
  4128e4:	js     0x4128fd
  4128e6:	arpl   WORD PTR [eax+0x4633c9ea],ax
  4128ec:	cmp    eax,0xfb61e6ae
  4128f1:	das    
  4128f2:	sbb    dl,BYTE PTR ds:0x3a48e049
  4128f8:	cwde   
  4128f9:	stos   DWORD PTR es:[edi],eax
  4128fa:	fist   DWORD PTR [ebx-0x1e]
  4128fd:	jle    0x412979
  4128ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412900:	adc    bl,ch
  412902:	and    BYTE PTR [eax-0x6f2e166d],dl
  412908:	cmp    eax,0xf71ccd9
  41290d:	rcr    ch,cl
  41290f:	mov    esp,0x923e867b
  412914:	and    DWORD PTR [eax+0x3837c628],0x257d6f6c
  41291e:	adc    DWORD PTR [edx-0x63],eax
  412921:	not    DWORD PTR [esi]
  412923:	(bad)  
  412924:	xor    ah,BYTE PTR [ecx]
  412926:	shr    BYTE PTR [ebp+0x56],0x5b
  41292a:	add    al,0xa4
  41292c:	xor    al,0x78
  41292e:	sbb    BYTE PTR [eax+0x669951fb],ch
  412934:	xchg   esi,eax
  412935:	retf   
  412936:	adc    al,0xcd
  412938:	rcr    DWORD PTR [ebp-0x1d],0xa6
  41293c:	xchg   ebx,eax
  41293d:	aaa    
  41293e:	jge    0x412993
  412940:	mov    al,ds:0xbe48852a
  412945:	add    esi,eax
  412947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412948:	repnz sahf 
  41294a:	imul   ecx,DWORD PTR [ecx],0xffffffad
  41294d:	xchg   BYTE PTR [ecx],ah
  41294f:	xchg   DWORD PTR [ecx],esp
  412951:	ja     0x4129c2
  412953:	ja     0x4129d4
  412955:	test   al,0x49
  412957:	mov    WORD PTR [edi-0x36d57e7b],cs
  41295d:	pop    esp
  41295e:	mov    dh,dh
  412960:	jne    0x4129d2
  412962:	(bad)  
  412963:	push   DWORD PTR [ebp+edx*2-0x63a0cdb7]
  41296a:	stos   DWORD PTR es:[edi],eax
  41296b:	aaa    
  41296c:	push   edi
  41296d:	add    DWORD PTR [esp+ecx*4+0x68],esp
  412971:	and    dl,al
  412973:	aas    
  412974:	ret    
  412975:	daa    
  412976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412977:	pop    ds
  412978:	ret    0xe5a5
  41297b:	mov    edi,0x7797f04b
  412980:	(bad)  
  412981:	jmp    0x4129af
  412983:	pop    es
  412984:	in     al,0x3b
  412986:	add    al,0x29
  412988:	sbb    DWORD PTR cs:[esp+esi*8],ebp
  41298c:	push   esi
  41298d:	jne    0x412976
  41298f:	repnz scas al,BYTE PTR es:[edi]
  412991:	test   esi,ebx
  412993:	ror    DWORD PTR [ebp+0x5b86dee6],1
  412999:	out    dx,eax
  41299a:	and    al,0x5a
  41299c:	retf   
  41299d:	and    al,0x8a
  41299f:	or     dh,al
  4129a1:	cli    
  4129a2:	into   
  4129a3:	sar    DWORD PTR [edi-0x140b967f],1
  4129a9:	js     0x4129d6
  4129ab:	xchg   edx,eax
  4129ac:	aad    0xfd
  4129ae:	and    BYTE PTR [ecx+0x4f4e7e5c],ch
  4129b4:	mov    ch,0x3
  4129b6:	mov    ebx,0x14a518ea
  4129bb:	mov    esi,cs
  4129bd:	inc    esp
  4129be:	outs   dx,DWORD PTR ds:[esi]
  4129bf:	pop    eax
  4129c0:	mov    esp,0xf165334c
  4129c5:	lds    eax,FWORD PTR [edi-0x199eeb9f]
  4129cb:	adc    bh,BYTE PTR [edi]
  4129cd:	nop
  4129ce:	repnz mov eax,ds:0x2fd69c28
  4129d4:	jmp    0x4129c4
  4129d6:	lea    eax,[edi]
  4129d8:	(bad)  [esi]
  4129da:	push   ds
  4129db:	stos   BYTE PTR es:[edi],al
  4129dc:	and    dh,BYTE PTR [edi]
  4129de:	out    0x1d,eax
  4129e0:	pop    ebp
  4129e1:	or     eax,esp
  4129e3:	dec    ecx
  4129e4:	out    0xa,eax
  4129e6:	push   ss
  4129e7:	leave  
  4129e8:	cs mov dl,0xa8
  4129eb:	push   0xffffffb3
  4129ed:	sbb    eax,0xfb9be3ac
  4129f2:	cld    
  4129f3:	sub    al,0xe6
  4129f5:	and    ecx,DWORD PTR [edx]
  4129f7:	ja     0x4129fb
  4129f9:	push   0xffffffad
  4129fb:	repz cli 
  4129fd:	fwait
  4129fe:	and    esp,DWORD PTR [edi]
  412a00:	mov    DWORD PTR [ebx],eax
  412a02:	xchg   ebx,eax
  412a03:	fwait
  412a04:	cwde   
  412a05:	jmp    0x412a2d
  412a07:	xor    eax,0xe5427019
  412a0c:	xchg   DWORD PTR [ecx+0x16],eax
  412a0f:	call   0x9c2b:0x1261aced
  412a16:	jg     0x412a6f
  412a18:	jg     0x4129b5
  412a1a:	repz je 0x412a4d
  412a1d:	test   eax,0x1d01c2b9
  412a22:	pop    ebp
  412a23:	xchg   ecx,eax
  412a24:	cmp    eax,0x6f125fcf
  412a29:	jo     0x412a4f
  412a2b:	test   BYTE PTR [ecx+eiz*4-0x14],ch
  412a2f:	repnz and BYTE PTR [ebx+esi*4-0x17c16b24],bh
  412a37:	sbb    ebp,DWORD PTR [ecx]
  412a39:	shl    DWORD PTR [eax+0x644100b8],1
  412a3f:	xor    DWORD PTR [edi],ebp
  412a41:	in     eax,dx
  412a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a43:	aaa    
  412a44:	push   0x12eada97
  412a49:	popa   
  412a4a:	push   es
  412a4b:	in     al,dx
  412a4c:	lahf   
  412a4d:	or     BYTE PTR [ecx],dh
  412a4f:	jnp    0x412a71
  412a51:	xor    BYTE PTR [edx+0x33579354],dl
  412a57:	clc    
  412a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a59:	adc    ecx,edi
  412a5b:	iret   
  412a5c:	ja     0x412a14
  412a5e:	jo     0x4129e0
  412a60:	scas   eax,DWORD PTR es:[edi]
  412a61:	xchg   edi,eax
  412a62:	sti    
  412a63:	adc    ebx,DWORD PTR [eax]
  412a65:	fwait
  412a66:	and    eax,0xe09a753a
  412a6b:	jo     0x412a4c
  412a6d:	inc    bh
  412a6f:	scas   eax,DWORD PTR es:[edi]
  412a70:	(bad)  
  412a72:	push   0xcf52854f
  412a77:	(bad)  
  412a78:	and    ebx,eax
  412a7a:	sbb    eax,0x4f8466f1
  412a7f:	neg    DWORD PTR [ebx-0x1fe750e4]
  412a85:	mov    eax,ds:0xff649319
  412a8a:	sub    ebp,esi
  412a8c:	xchg   edi,eax
  412a8d:	out    dx,al
  412a8e:	cmp    ebp,DWORD PTR [ecx]
  412a90:	fcmovb st,st(1)
  412a92:	jmp    0xa055a561
  412a97:	push   ss
  412a98:	cmp    ecx,DWORD PTR [ebp+0xc724fb2]
  412a9e:	js     0x412aa3
  412aa0:	ds cmp al,0x66
  412aa3:	pop    ebx
  412aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aa5:	dec    edi
  412aa6:	inc    ebx
  412aa7:	lahf   
  412aa8:	push   es
  412aa9:	mov    ebx,0xe1bc37f6
  412aae:	adc    ecx,ebp
  412ab0:	(bad)  
  412ab1:	daa    
  412ab2:	adc    ah,cl
  412ab4:	loope  0x412b10
  412ab6:	rcl    BYTE PTR [esi+ebx*8-0x7e708241],1
  412abd:	mov    ebp,0x6f717149
  412ac2:	sub    DWORD PTR [ecx],edi
  412ac4:	ficom  DWORD PTR [edx]
  412ac6:	ror    BYTE PTR [ecx+0x6c],0x7f
  412aca:	int3   
  412acb:	loop   0x412ac9
  412acd:	pop    edi
  412ace:	and    eax,0xa2db0203
  412ad3:	test   al,0xd4
  412ad5:	sbb    DWORD PTR [ebx+0x22],ebx
  412ad8:	or     bl,al
  412ada:	std    
  412adb:	lock mov al,ds:0x974d358d
  412ae1:	pop    edx
  412ae2:	pop    ss
  412ae3:	sbb    eax,0x483c9221
  412ae8:	push   edx
  412ae9:	mov    ds:0xe20782fd,al
  412aee:	xor    esp,0x27d68aa
  412af4:	(bad)  
  412af5:	cli    
  412af6:	mov    edx,0x4499a8fa
  412afb:	scas   eax,DWORD PTR es:[edi]
  412afc:	addr16 hlt 
  412afe:	and    eax,0x9cd35947
  412b03:	push   0x54
  412b05:	icebp  
  412b06:	imul   eax,DWORD PTR [ebp-0x1f373843],0xb4507912
  412b10:	cmp    al,0x8a
  412b12:	lods   eax,DWORD PTR ds:[esi]
  412b13:	mov    ah,0x3e
  412b15:	loopne 0x412b72
  412b17:	push   es
  412b18:	cwde   
  412b19:	cmp    al,0x46
  412b1b:	cmc    
  412b1c:	xchg   ebp,eax
  412b1d:	jge    0x412b7f
  412b1f:	sub    bl,BYTE PTR [edx-0x6290c3a5]
  412b25:	jne    0x412ac2
  412b27:	lods   al,BYTE PTR ds:[esi]
  412b28:	aaa    
  412b29:	mov    dl,0x5b
  412b2b:	dec    edx
  412b2c:	fistp  WORD PTR [esi]
  412b2e:	push   edx
  412b2f:	or     esp,DWORD PTR [edi+eax*2]
  412b32:	and    BYTE PTR [ecx+0x333a733],bh
  412b38:	mov    ah,0xbe
  412b3a:	icebp  
  412b3b:	and    BYTE PTR [ecx],0x21
  412b3e:	faddp  st(5),st
  412b40:	cld    
  412b41:	mov    esp,0x3eb50274
  412b46:	xor    DWORD PTR [ecx],ecx
  412b48:	sub    eax,0xa1564852
  412b4d:	mov    ecx,0xf483209c
  412b52:	lea    edi,[ecx-0x74]
  412b55:	shr    DWORD PTR ds:0x8f86ef63,0x9d
  412b5c:	mov    dh,0x4f
  412b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b5f:	rcl    bh,cl
  412b61:	cs leave 
  412b63:	mov    edx,0xf428975
  412b68:	mov    al,ds:0x4a6cc575
  412b6d:	dec    eax
  412b6e:	ins    DWORD PTR es:[edi],dx
  412b6f:	mov    bl,dh
  412b71:	mov    bl,0x46
  412b73:	stos   BYTE PTR es:[edi],al
  412b74:	aam    0xad
  412b76:	lds    ebp,FWORD PTR [edi+ebx*2]
  412b79:	pop    ecx
  412b7a:	call   0xb0552ada
  412b7f:	inc    ebx
  412b80:	jae    0x412bc6
  412b82:	scas   al,BYTE PTR es:[edi]
  412b83:	pop    esi
  412b84:	adc    ah,0x77
  412b87:	enter  0x449e,0x59
  412b8b:	pavgw  mm0,QWORD PTR [ebx-0x7e6d7d6]
  412b92:	xchg   ebx,eax
  412b93:	mov    edx,0x2f70fee1
  412b98:	or     esi,DWORD PTR [edx+0x4b]
  412b9b:	fwait
  412b9c:	sub    al,0xea
  412b9e:	repnz add DWORD PTR [edi],eax
  412ba1:	out    0x81,eax
  412ba3:	fucomp st(1)
  412ba5:	dec    DWORD PTR [ecx+0x1b3781d2]
  412bab:	mov    dl,0x98
  412bad:	(bad)  
  412bae:	stos   DWORD PTR es:[edi],eax
  412baf:	mov    cl,0x30
  412bb1:	fldcw  WORD PTR [esi+0x43fb68a8]
  412bb7:	bound  ebx,QWORD PTR [esi+0x3f8d77e4]
  412bbd:	add    al,0x96
  412bbf:	xor    dh,ah
  412bc1:	or     DWORD PTR [ecx+0x4bb23329],0xffffffc4
  412bc8:	ds pop ebp
  412bca:	in     al,0x55
  412bcc:	hlt    
  412bcd:	cli    
  412bce:	push   edi
  412bcf:	pop    ecx
  412bd0:	inc    ebx
  412bd1:	push   ecx
  412bd2:	test   al,0x83
  412bd4:	das    
  412bd5:	push   ds
  412bd6:	fist   WORD PTR [esp+edi*8]
  412bd9:	das    
  412bda:	push   edi
  412bdb:	aas    
  412bdc:	ror    ch,1
  412bde:	push   esi
  412bdf:	pop    ecx
  412be0:	iret   
  412be1:	mov    ch,0xbe
  412be3:	fiadd  WORD PTR [ebp+0x17]
  412be6:	icebp  
  412be7:	mov    dl,0x92
  412be9:	fcmovnu st,st(6)
  412beb:	imul   esi,DWORD PTR [eax-0x11],0x71e10b2a
  412bf2:	sub    al,0x52
  412bf4:	xchg   esi,eax
  412bf5:	dec    ecx
  412bf6:	scas   al,BYTE PTR es:[edi]
  412bf7:	mov    eax,ds:0xa7804fc8
  412bfc:	scas   eax,DWORD PTR es:[edi]
  412bfd:	add    al,0x8d
  412bff:	aam    0x53
  412c01:	add    al,0x29
  412c03:	adc    DWORD PTR [ebx+0x30],ebp
  412c06:	leave  
  412c07:	fwait
  412c08:	mov    eax,0xf8d90d68
  412c0d:	fwait
  412c0e:	xchg   edx,eax
  412c0f:	aaa    
  412c10:	test   esi,0x66fffe3f
  412c16:	pop    es
  412c17:	jmp    DWORD PTR [ecx-0x3e]
  412c1a:	add    DWORD PTR [esi],eax
  412c1c:	sub    bh,al
  412c1e:	mov    edi,0x20235538
  412c23:	sub    BYTE PTR [edi],bl
  412c25:	or     DWORD PTR [ebp+0x13e76efe],edi
  412c2b:	cvtps2pi mm6,QWORD PTR [edx+eax*1-0x240d7726]
  412c33:	jmp    0x1fc0:0x2485fefe
  412c3a:	test   al,0x1
  412c3d:	xchg   ebx,eax
  412c3e:	or     al,0xa8
  412c40:	or     ebx,DWORD PTR [edx+0x28]
  412c43:	fwait
  412c44:	xor    BYTE PTR [edi],al
  412c46:	mov    al,ds:0x9ea06c43
  412c4b:	mov    cl,0x48
  412c4d:	test   esi,edx
  412c4f:	popf   
  412c50:	neg    DWORD PTR ds:0x20bfb55c
  412c56:	push   ds
  412c57:	inc    esp
  412c58:	repnz inc esp
  412c5a:	aam    0xd8
  412c5c:	xor    DWORD PTR [esi+0x75],edx
  412c5f:	imul   eax,DWORD PTR [esi],0x9adb93ae
  412c65:	mov    eax,ss
  412c67:	jmp    0x9633:0xab08a05c
  412c6e:	sar    BYTE PTR [edi],1
  412c70:	dec    esi
  412c71:	cmp    ch,BYTE PTR [eax]
  412c73:	cmp    al,0x2e
  412c75:	jnp    0x412cf3
  412c77:	aaa    
  412c78:	and    BYTE PTR [ebx-0x6],bh
  412c7b:	cs arpl cx,sp
  412c7e:	out    dx,eax
  412c7f:	mov    cl,0xd4
  412c81:	ret    
  412c82:	enter  0x1221,0xc1
  412c86:	(bad)  
  412c87:	mov    dl,0xe0
  412c89:	pop    ds
  412c8a:	fnstcw WORD PTR [eax-0x74]
  412c8d:	aad    0xdf
  412c8f:	mov    eax,0x1f237644
  412c94:	push   0xb412c26d
  412c99:	dec    ebp
  412c9a:	adc    DWORD PTR [ecx+0x14],ebp
  412c9d:	xchg   ecx,eax
  412c9e:	std    
  412c9f:	aaa    
  412ca0:	mov    ebx,0x5dbd3a95
  412ca5:	shl    DWORD PTR [eax+esi*4-0x51],cl
  412ca9:	sub    esi,eax
  412cab:	rcl    BYTE PTR [ecx],1
  412cad:	popf   
  412cae:	int    0x1
  412cb0:	out    0x2b,al
  412cb2:	mov    esp,0x1117d137
  412cb7:	aam    0x68
  412cb9:	stos   BYTE PTR es:[edi],al
  412cba:	in     al,dx
  412cbb:	mov    edi,0x37a15b0d
  412cc0:	xchg   edi,eax
  412cc1:	xlat   BYTE PTR ds:[ebx]
  412cc2:	shl    BYTE PTR [esi],1
  412cc4:	jbe    0x412d36
  412cc6:	or     BYTE PTR [ecx-0xb],bl
  412cc9:	(bad)  
  412cca:	pop    ebx
  412ccb:	inc    eax
  412ccc:	jb     0x412ce5
  412cce:	ret    0xfb5c
  412cd1:	xchg   edi,eax
  412cd2:	xor    DWORD PTR [edi-0xb],edx
  412cd5:	xchg   edi,eax
  412cd6:	arpl   WORD PTR [ecx+0x6c],sp
  412cd9:	scas   al,BYTE PTR es:[edi]
  412cda:	daa    
  412cdb:	std    
  412cdc:	inc    ebx
  412cdd:	addr16 pop ds
  412cdf:	adc    dh,BYTE PTR [edi-0x53]
  412ce2:	aad    0x8b
  412ce4:	mov    ebp,0xa3837ae8
  412ce9:	mov    al,ds:0xd32920e2
  412cee:	out    dx,al
  412cef:	adc    DWORD PTR [edi],ebx
  412cf1:	loopne 0x412cfb
  412cf3:	pop    ebx
  412cf4:	adc    BYTE PTR [edi],cl
  412cf6:	mov    al,ds:0x9d4b27
  412cfb:	cdq    
  412cfc:	test   bl,ah
  412cfe:	inc    esi
  412cff:	push   0xffffffce
  412d01:	pop    edx
  412d02:	xchg   edx,eax
  412d03:	lds    esp,FWORD PTR [esp+eiz*8]
  412d06:	push   cs
  412d07:	push   esi
  412d08:	stos   BYTE PTR es:[edi],al
  412d09:	jns    0x412d06
  412d0b:	push   edi
  412d0c:	imul   ebx,DWORD PTR [edi+0x1b],0x45bde3cb
  412d13:	daa    
  412d14:	add    BYTE PTR [edi+edx*2],0xfd
  412d18:	ss mov ebx,0x4a8028e4
  412d1e:	adc    ebx,ecx
  412d20:	lods   eax,DWORD PTR ds:[esi]
  412d21:	inc    ebp
  412d22:	mov    DWORD PTR [edx+0x69],ecx
  412d25:	xlat   BYTE PTR ds:[ebx]
  412d26:	mov    esp,0x30661b12
  412d2b:	test   al,0xe6
  412d2d:	test   eax,0x525ea9
  412d32:	loopne 0x412d2a
  412d34:	outs   dx,BYTE PTR ds:[esi]
  412d35:	sbb    BYTE PTR [ebp+0xa],ch
  412d38:	cs jmp 0x2e3:0x3bab6f77
  412d40:	je     0x412d2b
  412d42:	(bad)  
  412d43:	dec    ebp
  412d44:	mov    ds:0xa8525af2,eax
  412d49:	retf   0xebff
  412d4c:	cmp    DWORD PTR [ecx-0x6a],eax
  412d4f:	fimul  WORD PTR ds:0x5a05d57a
  412d55:	out    0xbd,eax
  412d57:	fild   WORD PTR [edi-0x44]
  412d5a:	clc    
  412d5b:	cmp    ah,BYTE PTR [ebp+0x4d4adeb1]
  412d61:	or     BYTE PTR [edx-0x13],al
  412d64:	or     al,0xe3
  412d66:	jns    0x412d91
  412d68:	call   0x4916:0x8e04ebe7
  412d6f:	pop    edx
  412d70:	mov    cl,0xcc
  412d72:	jno    0x412d5f
  412d74:	js     0x412d98
  412d76:	std    
  412d77:	mov    esi,0x8c4a3c97
  412d7c:	dec    edx
  412d7d:	(bad)  
  412d7e:	js     0x412d96
  412d80:	and    al,0x8
  412d82:	push   ds
  412d83:	in     al,dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	daa    
  412d86:	inc    ecx
  412d87:	sbb    DWORD PTR [edx+0xd9ab7d0],ecx
  412d8d:	and    dl,BYTE PTR [ebx]
  412d8f:	add    esi,edx
  412d91:	stos   BYTE PTR es:[edi],al
  412d92:	jg     0x412dac
  412d94:	les    eax,FWORD PTR [ecx+ecx*8]
  412d97:	mov    ss,edi
  412d99:	ret    
  412d9a:	or     eax,0x4226944f
  412d9f:	ss enter 0x306c,0x31
  412da4:	push   edx
  412da5:	or     DWORD PTR [ebx-0x62],esi
  412da8:	cmp    al,BYTE PTR [edx]
  412daa:	mov    ecx,ebp
  412dac:	hlt    
  412dad:	lock xchg DWORD PTR [ebp+ecx*4+0x2a85ec2c],edx
  412db5:	fmulp  st(2),st
  412db7:	sub    ecx,DWORD PTR [ebp+0x23]
  412dba:	retf   
  412dbb:	mov    DWORD PTR [ebp+0x60],ebx
  412dbe:	mov    al,0x9e
  412dc0:	push   esp
  412dc1:	cmc    
  412dc2:	aaa    
  412dc3:	mov    al,ds:0x3f311e9c
  412dc8:	div    dh
  412dca:	jmp    0x89cc16e8
  412dcf:	sub    al,0x35
  412dd1:	pop    ebp
  412dd2:	push   0x40
  412dd4:	ret    0x8ecc
  412dd7:	pop    esp
  412dd8:	jmp    0x5828bd5a
  412ddd:	cdq    
  412dde:	in     al,0x8f
  412de0:	sbb    al,0x54
  412de2:	je     0x412e35
  412de4:	adc    al,cl
  412de6:	sti    
  412de7:	pop    esi
  412de8:	mov    ecx,ecx
  412dea:	popa   
  412deb:	(bad)  
  412ded:	mov    DWORD PTR [ebp+0x3be434fd],edi
  412df3:	fidiv  DWORD PTR [esi]
  412df5:	xchg   esi,eax
  412df6:	sub    al,0x17
  412df8:	iret   
  412df9:	stc    
  412dfa:	cs pop edx
  412dfc:	inc    edi
  412dfd:	ins    DWORD PTR es:[edi],dx
  412dfe:	cmp    bh,BYTE PTR [ebp-0x32be5b57]
  412e04:	arpl   bp,ax
  412e06:	fsubr  DWORD PTR [esi]
  412e08:	dec    edi
  412e09:	fcom   QWORD PTR [ebp+0x3f]
  412e0c:	dec    edi
  412e0d:	loopne 0x412df2
  412e0f:	out    0x80,eax
  412e11:	into   
  412e12:	ds (bad) 
  412e14:	jecxz  0x412e07
  412e16:	lahf   
  412e17:	xchg   esi,eax
  412e18:	enter  0x5c65,0x55
  412e1c:	mov    edx,0xda02805
  412e21:	dec    esp
  412e22:	cmp    bh,BYTE PTR [eax-0x7d0f1090]
  412e28:	stos   BYTE PTR es:[edi],al
  412e29:	call   0xc77fe732
  412e2e:	js     0x412e50
  412e30:	cli    
  412e31:	xor    al,BYTE PTR [eax-0x6e25a446]
  412e37:	push   ss
  412e38:	cdq    
  412e39:	pop    eax
  412e3a:	in     al,0xf8
  412e3c:	xchg   ebx,eax
  412e3d:	(bad)  
  412e3e:	adc    al,BYTE PTR [eax]
  412e40:	xor    ah,bh
  412e42:	aas    
  412e43:	aaa    
  412e44:	fadd   DWORD PTR [eax]
  412e46:	jnp    0x412eb1
  412e48:	js     0x412de6
  412e4a:	or     al,0x33
  412e4c:	jecxz  0x412dd4
  412e4e:	dec    ecx
  412e4f:	test   eax,0xaa57dffa
  412e54:	inc    esi
  412e55:	fstp   QWORD PTR [ebx-0x3d]
  412e58:	push   cs
  412e59:	inc    BYTE PTR [ecx-0x3a]
  412e5c:	aas    
  412e5d:	push   cs
  412e5e:	jge    0x412e1e
  412e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e61:	pop    esp
  412e62:	lods   al,BYTE PTR ds:[esi]
  412e63:	leave  
  412e64:	inc    edx
  412e65:	jmp    0x412e7d
  412e67:	inc    esp
  412e68:	xchg   edx,eax
  412e69:	pushfw 
  412e6b:	jb     0x412e92
  412e6d:	jo     0x412ec7
  412e6f:	sub    ah,BYTE PTR [esi]
  412e71:	sbb    dh,BYTE PTR [esp+eiz*8-0x52]
  412e75:	mov    ds:0x5e79a60f,eax
  412e7a:	inc    esp
  412e7b:	xchg   BYTE PTR [eax+esi*4+0x51],dh
  412e7f:	jne    0x412e2e
  412e81:	loopne 0x412e95
  412e83:	(bad)  
  412e84:	mov    edx,0x1840363c
  412e89:	lock lds ecx,FWORD PTR [ecx]
  412e8c:	pusha  
  412e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e8e:	sub    ah,dh
  412e90:	shl    DWORD PTR [eax+edi*2-0x3eadc52a],1
  412e97:	jl     0x412ee2
  412e99:	mov    fs:0x49f46228,eax
  412e9f:	scas   al,BYTE PTR es:[edi]
  412ea0:	adc    al,0x7a
  412ea2:	ja     0x412e8c
  412ea4:	jmp    0xb842:0x1b37f57c
  412eab:	cli    
  412eac:	addr16 xchg edi,eax
  412eae:	pushf  
  412eaf:	lods   eax,DWORD PTR ds:[esi]
  412eb0:	loopne 0x412edb
  412eb2:	or     ebx,DWORD PTR [edx-0x2cfbaad4]
  412eb8:	add    bl,BYTE PTR [edi+0x6f711d7b]
  412ebe:	push   cs
  412ebf:	scas   eax,DWORD PTR es:[edi]
  412ec0:	sub    ebp,0x1c
  412ec3:	push   ebx
  412ec4:	rol    DWORD PTR [esi+0xff57cbc],0x3
  412ecb:	adc    BYTE PTR [edi-0x40e8c2fd],dl
  412ed1:	out    dx,al
  412ed2:	mov    eax,ds:0xeb325749
  412ed7:	mov    edx,0xea946831
  412edc:	push   eax
  412edd:	add    bh,bh
  412edf:	xchg   edi,eax
  412ee0:	mov    edi,esi
  412ee2:	mov    BYTE PTR [eax-0xedadfc1],dh
  412ee8:	pop    esi
  412ee9:	mov    eax,DWORD PTR [ecx]
  412eeb:	sbb    ecx,esi
  412eed:	arpl   si,di
  412eef:	cmp    al,0x4c
  412ef1:	in     eax,dx
  412ef2:	xor    BYTE PTR [ebx+0x18c3d5a1],bh
  412ef8:	add    al,0xfb
  412efa:	ror    DWORD PTR [edx+0x7b],0x8e
  412efe:	mov    esp,DWORD PTR [edi-0x7e0778b6]
  412f04:	inc    esi
  412f05:	and    eax,0xa424277d
  412f0a:	pushf  
  412f0b:	jo     0x412f09
  412f0d:	jno    0x412f62
  412f0f:	test   al,0x71
  412f11:	neg    esi
  412f13:	sbb    eax,0xca99328d
  412f18:	rcr    BYTE PTR [ebp+0x8b6021a],cl
  412f1e:	bndstx [edx+0x7446b40e],bnd2
  412f25:	pop    ecx
  412f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f27:	lods   al,BYTE PTR ds:[esi]
  412f28:	inc    esp
  412f29:	out    dx,al
  412f2a:	push   ebx
  412f2b:	retf   
  412f2c:	adc    BYTE PTR [esi+ecx*1+0x7d],bh
  412f30:	or     al,0xf1
  412f32:	xor    DWORD PTR [eax+0x54bda8f6],esi
  412f38:	neg    BYTE PTR [edi+0x69a49495]
  412f3e:	sahf   
  412f3f:	repz aad 0xf7
  412f42:	or     BYTE PTR ds:0x90a88b2,0x68
  412f49:	pop    esi
  412f4a:	push   esp
  412f4b:	pop    ecx
  412f4c:	mov    edx,0x2f9d9fde
  412f51:	imul   eax,DWORD PTR [edi+0x7c93e54b],0xffffffbd
  412f58:	lar    edi,WORD PTR [eax+edi*8]
  412f5c:	mov    al,0x47
  412f5e:	out    0xa0,al
  412f60:	lods   al,BYTE PTR ds:[esi]
  412f61:	pusha  
  412f62:	sub    esi,edx
  412f64:	in     eax,dx
  412f65:	mov    edi,0x88abbfb9
  412f6a:	int    0xee
  412f6c:	adc    al,ah
  412f6e:	fcmovnbe st,st(5)
  412f70:	pop    edx
  412f71:	mov    ch,0xce
  412f73:	xor    eax,0x88ba0841
  412f78:	cmp    BYTE PTR [ebp-0x49],dh
  412f7b:	(bad)  
  412f7c:	stc    
  412f7d:	and    eax,0xefd73ef2
  412f82:	xchg   edi,eax
  412f83:	xchg   ebp,eax
  412f84:	shl    DWORD PTR [eax],0x45
  412f87:	and    ebx,ebx
  412f89:	scas   al,BYTE PTR es:[edi]
  412f8a:	or     ecx,DWORD PTR [ebx+0x5c17ff8a]
  412f90:	daa    
  412f91:	dec    ebx
  412f92:	hlt    
  412f93:	pop    ebx
  412f94:	mov    DWORD PTR [esi+0x4d1b667f],edi
  412f9a:	mov    esi,ecx
  412f9c:	lock in al,0x94
  412f9f:	out    0x30,al
  412fa1:	(bad)  
  412fa2:	cmp    DWORD PTR [esi],esp
  412fa4:	cmc    
  412fa5:	dec    esp
  412fa6:	pop    eax
  412fa7:	call   0xd88b5809
  412fac:	adc    al,0x9d
  412fae:	jmp    0x834d:0x1dc22643
  412fb5:	jns    0x413005
  412fb7:	or     al,0xb7
  412fb9:	int    0xd2
  412fbb:	out    0x9,eax
  412fbd:	jno    0x413017
  412fbf:	push   ebx
  412fc0:	(bad)  
  412fc1:	bound  ecx,QWORD PTR [edx-0x36]
  412fc4:	xchg   esp,eax
  412fc5:	adc    dh,BYTE PTR [ebp+edi*1+0xd]
  412fc9:	test   eax,0x6b886789
  412fce:	sahf   
  412fcf:	jmp    0xd6c61387
  412fd4:	sbb    al,0x35
  412fd6:	lock mov esi,0xf79403da
  412fdc:	add    eax,0x96e5ba92
  412fe1:	xchg   DWORD PTR ds:0xd3517d82,edi
  412fe7:	imul   esp,esp,0x3aacc279
  412fed:	sub    DWORD PTR [eax-0x27],eax
  412ff0:	xor    eax,0x245c1a46
  412ff5:	xchg   ecx,ebx
  412ff7:	xchg   esi,eax
  412ff8:	fst    st(4)
  412ffa:	lea    ebx,[ebx+0x33e00d42]
  413000:	sbb    ch,bh
  413002:	daa    
  413003:	jp     0x412f8a
  413005:	stos   BYTE PTR es:[edi],al
  413006:	pop    ebp
  413007:	mov    BYTE PTR [ebx+edi*1+0x1a90d40a],bh
  41300e:	push   ebx
  41300f:	mov    edi,0x41b00097
  413014:	in     eax,0x69
  413016:	sub    al,0xf9
  413018:	xchg   ecx,eax
  413019:	add    al,0x5d
  41301b:	dec    edx
  41301c:	outs   dx,DWORD PTR ds:[esi]
  41301d:	jmp    0x412fd4
  41301f:	lock int3 
  413021:	(bad)  
  413022:	fld    QWORD PTR [eax]
  413024:	aam    0xf2
  413026:	shl    DWORD PTR [edi+esi*8+0x69e7b6e1],0xa8
  41302e:	mov    bl,ah
  413030:	bound  ebx,QWORD PTR [ecx]
  413032:	mov    ch,0x2f
  413034:	jmp    0xa65:0x71051d6
  41303b:	cs ret 
  41303d:	fwait
  41303e:	or     bh,BYTE PTR [ebx]
  413040:	(bad)  
  413041:	cld    
  413042:	dec    eax
  413043:	rcl    BYTE PTR [edx-0x35],0x44
  413047:	ror    BYTE PTR [ebx+ecx*2],cl
  41304a:	xchg   edi,eax
  41304b:	ret    0xd232
  41304e:	pop    eax
  41304f:	mov    esi,0xd268eb1d
  413054:	pop    es
  413055:	int3   
  413056:	sbb    DWORD PTR [ebx],0x70b31e7a
  41305c:	stc    
  41305d:	lea    ebp,[edx-0x26]
  413060:	out    0x8f,al
  413062:	mov    eax,0x99314be0
  413067:	inc    eax
  413068:	dec    ecx
  413069:	jo     0x4130df
  41306b:	push   ss
  41306c:	push   esp
  41306d:	lahf   
  41306e:	mov    edi,0x4a74bd00
  413073:	pop    esi
  413074:	push   ss
  413075:	sar    DWORD PTR [eax-0x73159977],0x79
  41307c:	or     eax,DWORD PTR [edi]
  41307e:	es jno 0x413083
  413081:	jo     0x413032
  413083:	push   ebp
  413084:	cmp    dl,al
  413086:	cmp    eax,0x8d9bd064
  41308b:	fcomi  st,st(5)
  41308d:	repz call 0x90b7:0xb64ca589
  413095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413096:	scas   al,BYTE PTR es:[edi]
  413097:	add    al,0x81
  413099:	adc    BYTE PTR [esi+0x3c],bh
  41309c:	(bad)  
  41309d:	shl    ecx,cl
  41309f:	jns    0x4130f8
  4130a1:	cmc    
  4130a2:	sub    BYTE PTR [ebp+0x1369b416],0x85
  4130a9:	xchg   ebx,eax
  4130aa:	inc    ebx
  4130ab:	ss addr16 pop ecx
  4130ae:	mov    dh,0xac
  4130b0:	es adc eax,0x4d6a6aa6
  4130b6:	out    0xec,eax
  4130b8:	(bad)  
  4130b9:	xchg   ebx,eax
  4130ba:	in     eax,0xa
  4130bc:	add    al,0xcb
  4130be:	or     DWORD PTR [ebp-0xb],0x85924a7a
  4130c5:	jo     0x41308b
  4130c7:	pop    ss
  4130c8:	pop    edx
  4130c9:	dec    ecx
  4130ca:	ret    0x4dcc
  4130cd:	add    DWORD PTR [esi+0x1aefb2dd],esi
  4130d3:	dec    esp
  4130d4:	cmp    eax,0x872820ce
  4130d9:	(bad)  
  4130db:	pop    edi
  4130dc:	and    DWORD PTR [ebp+0x12],eax
  4130df:	fldenv [eax+0x2507fe46]
  4130e5:	lods   al,BYTE PTR ds:[esi]
  4130e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130e7:	ins    BYTE PTR es:[edi],dx
  4130e8:	mov    bl,0xd0
  4130ea:	adc    eax,0x54dab23b
  4130ef:	xor    ecx,DWORD PTR [ecx-0x7d7eac54]
  4130f5:	es mov esp,0xa0fab8ca
  4130fb:	or     DWORD PTR [ecx-0x24],ebx
  4130fe:	sub    al,0x4e
  413100:	lods   eax,DWORD PTR ds:[esi]
  413101:	loopne 0x4130e4
  413103:	mov    edi,0x1e5adac9
  413108:	ja     0x4130a6
  41310a:	sbb    eax,0xb0df6156
  41310f:	sub    DWORD PTR [eax],esp
  413111:	retf   
  413112:	cld    
  413113:	mov    cl,0x67
  413115:	(bad)  
  413116:	dec    ebp
  413117:	mov    ebx,DWORD PTR [ebx+ebx*4]
  41311a:	jnp    0x41317b
  41311c:	pop    esp
  41311d:	fisub  DWORD PTR [esi-0x2a]
  413120:	dec    esi
  413121:	outs   dx,BYTE PTR fs:[esi]
  413123:	in     eax,0xb9
  413125:	out    0x5b,al
  413127:	mov    esi,0x68a508f7
  41312c:	jne    0x41312b
  41312e:	sbb    al,0x1e
  413130:	fild   QWORD PTR [edi]
  413132:	lock xchg esp,eax
  413134:	push   es
  413135:	xor    al,0xa7
  413137:	cmp    ch,BYTE PTR [edi]
  413139:	xor    esi,edx
  41313b:	lea    ebx,[ecx]
  41313d:	mov    esp,DWORD PTR [ecx+0x5c]
  413140:	cs ss mov dl,0x2f
  413144:	xchg   esi,eax
  413145:	mov    BYTE PTR [ebp-0x553b8d2d],dh
  41314b:	fnsetpm(287 only) 
  41314d:	pop    es
  41314e:	out    0xfc,eax
  413150:	jmp    0x596f:0x36c63237
  413157:	pusha  
  413158:	xchg   ecx,eax
  413159:	std    
  41315a:	dec    ebp
  41315b:	jp     0x4131bd
  41315d:	and    ch,BYTE PTR [edi+0x23]
  413160:	cmp    ebx,DWORD PTR [ebx+edi*8]
  413163:	pushf  
  413164:	jmp    0x413101
  413166:	push   eax
  413167:	jmp    0x413135
  413169:	mov    esi,0x22ee531
  41316e:	ret    
  41316f:	mov    ds:0xfbceecfc,al
  413174:	aam    0x5f
  413176:	and    al,0x23
  413178:	cdq    
  413179:	scas   al,BYTE PTR es:[edi]
  41317a:	sub    DWORD PTR [eax],0xffffffff
  41317d:	adc    eax,0xa574a151
  413182:	and    dh,BYTE PTR [edx]
  413184:	inc    esp
  413185:	push   ebp
  413186:	(bad)  
  413187:	fimul  DWORD PTR [ebx]
  413189:	adc    ebx,ebx
  41318b:	mov    esp,0x36897650
  413190:	adc    BYTE PTR [ebx+ebx*8+0x37f6a918],0xaa
  413198:	in     eax,dx
  413199:	jns    0x4131e5
  41319b:	loopne 0x41316e
  41319d:	cmp    BYTE PTR [esi-0x7],ch
  4131a0:	dec    ecx
  4131a1:	(bad)  
  4131a3:	cli    
  4131a4:	(bad)  
  4131a5:	sbb    dl,cl
  4131a7:	gs jbe 0x4131d7
  4131aa:	or     BYTE PTR [esp+edi*8+0x67ba24c5],al
  4131b1:	xor    DWORD PTR [ebx+0x45],edi
  4131b4:	mov    ebx,0x6bb42754
  4131b9:	sbb    al,0x37
  4131bb:	fcomp  DWORD PTR ds:0x14aaef16
  4131c1:	fadd   QWORD PTR [eax+0x6b]
  4131c4:	mov    esi,0x8391a903
  4131c9:	dec    esp
  4131ca:	mov    cl,0xb2
  4131cc:	push   edx
  4131cd:	sub    BYTE PTR [edi],ch
  4131cf:	aam    0xfd
  4131d1:	jae    0x4131e3
  4131d3:	xor    ch,BYTE PTR [edx-0x44]
  4131d6:	aas    
  4131d7:	push   ss
  4131d8:	daa    
  4131d9:	xor    al,0x3
  4131db:	or     dl,0x2a
  4131de:	leave  
  4131df:	lods   al,BYTE PTR ds:[esi]
  4131e0:	inc    ebx
  4131e1:	iret   
  4131e2:	sub    eax,eax
  4131e4:	sub    al,0x5c
  4131e6:	push   0xffffffbb
  4131e8:	(bad)  
  4131e9:	push   esi
  4131ea:	daa    
  4131eb:	cs fs mov ebx,0xe552df7d
  4131f2:	mov    ah,0xdc
  4131f4:	xchg   ebx,eax
  4131f5:	push   ebp
  4131f6:	or     DWORD PTR [eax+eax*4-0x5513749b],0xa64e5db2
  413201:	lds    ecx,FWORD PTR [edx+0x42]
  413204:	aad    0xe1
  413206:	dec    ecx
  413207:	pop    esi
  413208:	mov    ah,0x55
  41320a:	fwait
  41320b:	sbb    al,0x97
  41320d:	daa    
  41320e:	add    DWORD PTR [ebp+0x54b84ff8],0xffffffd7
  413215:	xchg   ebx,eax
  413216:	loop   0x4131aa
  413218:	into   
  413219:	cs (bad) 
  41321b:	cmp    edi,DWORD PTR [ecx]
  41321d:	jae    0x413289
  41321f:	ror    DWORD PTR [esi],cl
  413221:	daa    
  413222:	xor    esp,DWORD PTR ds:0xa9276cf
  413228:	loopne 0x413208
  41322a:	jge    0x413223
  41322c:	sbb    DWORD PTR [ecx],ebp
  41322e:	aad    0x48
  413230:	fldenv [eax-0x13146e8d]
  413236:	push   cs
  413237:	cmp    eax,0x25e73414
  41323c:	(bad)
  413240:	ja     0x4131f3
  413242:	xor    cl,BYTE PTR [ebx-0x5b6fe865]
  413248:	bsf    edx,eax
  41324b:	add    DWORD PTR [esi],edx
  41324d:	fwait
  41324e:	test   cl,0x42
  413251:	xor    ebp,edx
  413253:	inc    DWORD PTR [eax+0x4d68fa17]
  413259:	imul   edi
  41325b:	push   edx
  41325c:	sbb    bh,al
  41325e:	ins    BYTE PTR es:[edi],dx
  41325f:	scas   al,BYTE PTR es:[edi]
  413260:	fdiv   st,st(6)
  413262:	addr16 inc eax
  413264:	(bad)  
  413265:	mov    esp,0xc412fc46
  41326a:	loope  0x41321f
  41326c:	add    eax,0x54259962
  413271:	(bad)  
  413272:	sbb    eax,edx
  413274:	(bad)  
  413275:	sbb    al,0x36
  413277:	retf   
  413278:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41327a:	cli    
  41327b:	pop    ds
  41327c:	push   ecx
  41327d:	(bad)  
  41327f:	aam    0x5d
  413281:	sti    
  413282:	push   esi
  413283:	fwait
  413284:	(bad)
  413287:	mov    dh,0xf8
  413289:	sbb    ah,cl
  41328b:	sbb    DWORD PTR [ebx-0x304656a0],eax
  413291:	nop
  413292:	add    edx,DWORD PTR [ebp+eiz*4-0x22]
  413296:	(bad)  
  413297:	leave  
  413298:	int3   
  413299:	hlt    
  41329a:	dec    ebx
  41329b:	mov    ebx,0x928e1dc8
  4132a0:	(bad)  
  4132a1:	or     eax,0xb85e0a46
  4132a6:	jmp    0x7fd70fa1
  4132ab:	add    al,0x27
  4132ad:	ss rcl ch,1
  4132b0:	pop    ebp
  4132b1:	popf   
  4132b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132b3:	inc    edi
  4132b4:	(bad)  
  4132b5:	leave  
  4132b6:	sti    
  4132b7:	jns    0x413298
  4132b9:	pop    edi
  4132ba:	lahf   
  4132bb:	pushf  
  4132bc:	xchg   edi,eax
  4132bd:	scas   eax,DWORD PTR es:[edi]
  4132be:	jg     0x4132ba
  4132c0:	lahf   
  4132c1:	pop    esi
  4132c2:	vmread DWORD PTR [eax-0x10],eax
  4132c6:	push   ecx
  4132c7:	stos   BYTE PTR es:[edi],al
  4132c8:	inc    dx
  4132ca:	xor    eax,0xac6bd6ea
  4132cf:	xor    cl,dh
  4132d1:	cld    
  4132d2:	fnstsw WORD PTR [edx]
  4132d4:	(bad)  
  4132d6:	scas   eax,DWORD PTR es:[edi]
  4132d7:	(bad)  
  4132d8:	test   eax,0x38641ecc
  4132dd:	ror    DWORD PTR ds:0xd440aef5,0x6d
  4132e4:	je     0x413281
  4132e6:	add    al,0x3
  4132e8:	cdq    
  4132e9:	push   ecx
  4132ea:	mov    dl,0x2c
  4132ec:	xchg   ecx,eax
  4132ed:	jae    0x4132c5
  4132ef:	mov    edi,0xe10ae991
  4132f4:	(bad)  
  4132f5:	sub    dl,bh
  4132f7:	cmc    
  4132f8:	adc    ecx,DWORD PTR [ebp+0x6f]
  4132fb:	les    edx,FWORD PTR [edi]
  4132fd:	rcl    BYTE PTR [ecx+0xe],cl
  413300:	ret    
  413301:	jp     0x41328d
  413303:	sub    eax,0xed52b229
  413308:	outs   dx,DWORD PTR ds:[esi]
  413309:	adc    DWORD PTR [esi-0xb],edi
  41330c:	sahf   
  41330d:	popf   
  41330e:	stc    
  41330f:	enter  0xb35a,0xc7
  413313:	scas   eax,DWORD PTR es:[edi]
  413314:	mov    dh,0xdb
  413316:	iret   
  413317:	push   0x690e5510
  41331c:	cmp    BYTE PTR [eax-0xa4fc6b0],ah
  413322:	icebp  
  413323:	inc    esi
  413324:	(bad)  
  413325:	adc    eax,0x78b9e4b0
  41332a:	xor    BYTE PTR [ebx-0x46],0x3d
  41332e:	outs   dx,DWORD PTR ds:[esi]
  41332f:	fiadd  WORD PTR [edx+ecx*4]
  413332:	ja     0x4133aa
  413334:	pushf  
  413335:	dec    ebp
  413336:	ret    
  413337:	test   al,0x9e
  413339:	arpl   WORD PTR [esi-0x48d86e76],si
  41333f:	xor    ebx,DWORD PTR ds:[edi]
  413342:	jno    0x41339f
  413344:	pushf  
  413345:	(bad)  
  413346:	sub    al,0x3f
  413348:	xlat   BYTE PTR ds:[bx]
  41334a:	pop    ebp
  41334b:	sahf   
  41334c:	mov    bh,BYTE PTR [edi]
  41334e:	or     bh,cl
  413350:	sar    DWORD PTR [esi],cl
  413352:	jg     0x41336c
  413354:	jbe    0x413319
  413356:	jecxz  0x41339d
  413358:	inc    edx
  413359:	mov    edx,0xbbd88611
  41335e:	mov    edx,0x595bda36
  413363:	push   esp
  413364:	push   edi
  413365:	inc    esi
  413366:	mov    cl,0x46
  413368:	xchg   esi,eax
  413369:	leave  
  41336a:	test   BYTE PTR [esi+0x70],0xa3
  41336e:	xchg   esp,eax
  41336f:	pop    esi
  413370:	retf   
  413371:	in     al,0x4f
  413373:	in     al,dx
  413374:	push   ecx
  413375:	cmp    dh,bh
  413377:	iret   
  413378:	scas   eax,DWORD PTR es:[edi]
  413379:	imul   ecx,DWORD PTR [eax],0xfffffff6
  41337c:	xchg   ebx,eax
  41337d:	mov    BYTE PTR [edi+ebx*4+0xf],dl
  413381:	sar    edx,cl
  413383:	mov    eax,ds:0x7fadbe80
  413388:	popf   
  413389:	and    eax,DWORD PTR [ecx-0x142db9ee]
  41338f:	xchg   ebx,eax
  413390:	xchg   ebx,eax
  413391:	scas   eax,DWORD PTR es:[edi]
  413392:	pop    esi
  413393:	inc    ecx
  413394:	push   ebx
  413395:	jl     0x4133df
  413397:	adc    ebx,ebx
  413399:	mov    bh,BYTE PTR [edx-0x67]
  41339c:	dec    esi
  41339d:	mov    ds:0x7e9b0dd0,al
  4133a2:	icebp  
  4133a3:	daa    
  4133a4:	leave  
  4133a5:	mov    ah,0x55
  4133a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a8:	pop    ss
  4133a9:	jmp    0xad4cbbb9
  4133ae:	mov    cl,0xfb
  4133b0:	jmp    0x413356
  4133b2:	ficomp WORD PTR [edi+0x1949a3e7]
  4133b8:	push   edx
  4133b9:	imul   ecx,esi,0x5126d311
  4133bf:	inc    edx
  4133c0:	cs enter 0xc53a,0x6
  4133c5:	popa   
  4133c6:	xor    DWORD PTR [edi-0x78],ebp
  4133c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ca:	lahf   
  4133cb:	jmp    0x8428:0x7aafca63
  4133d2:	and    DWORD PTR [ebx+0x24ec8fd0],0xcd657c8c
  4133dc:	push   ss
  4133dd:	pop    ds
  4133de:	scas   al,BYTE PTR es:[edi]
  4133df:	cmp    al,0x2f
  4133e1:	dec    ebp
  4133e2:	neg    DWORD PTR [edx]
  4133e4:	pop    es
  4133e5:	fsubr  st(6),st
  4133e7:	(bad)  
  4133e8:	xchg   esp,eax
  4133e9:	(bad)  
  4133eb:	aad    0x90
  4133ed:	dec    ebx
  4133ee:	js     0x41340f
  4133f0:	push   DWORD PTR [eax+0x2a85ad81]
  4133f6:	stc    
  4133f7:	mov    ebx,0xc2eeaa55
  4133fc:	rcr    BYTE PTR [edx+0xc],1
  4133ff:	jecxz  0x4133ea
  413401:	adc    eax,0x10ff50c9
  413406:	fwait
  413407:	xor    DWORD PTR [edx+0x457e0afe],edx
  41340d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41340e:	outs   dx,DWORD PTR ds:[esi]
  41340f:	std    
  413410:	mov    edx,gs
  413412:	fadd   DWORD PTR [ecx-0x179aecb5]
  413418:	test   BYTE PTR [eax+0x28],bl
  41341b:	adc    bl,dl
  41341d:	inc    ecx
  41341e:	std    
  41341f:	retf   0x463e
  413422:	adc    dl,BYTE PTR [edx-0x77716928]
  413428:	mov    eax,?
  41342a:	aaa    
  41342b:	das    
  41342c:	pop    ebp
  41342d:	in     al,dx
  41342e:	mov    esi,0xb7d97f39
  413433:	mov    eax,DWORD PTR [esi-0x52bb852b]
  413439:	pop    ds
  41343a:	ror    BYTE PTR [edi],cl
  41343c:	(bad)  
  41343e:	push   ebp
  41343f:	not    BYTE PTR [edi-0x3]
  413442:	call   0xf0917046
  413447:	xor    BYTE PTR [esi-0x4d85827f],bh
  41344d:	loopne 0x41343f
  41344f:	inc    ebp
  413450:	inc    ebp
  413451:	ja     0x4134b1
  413453:	mov    ebx,0x1f8c3d33
  413458:	mov    bh,0xc3
  41345a:	add    BYTE PTR [eax+0x20],0xb4
  41345e:	push   edi
  41345f:	push   ebp
  413460:	rcl    dl,1
  413462:	sub    ebp,ebp
  413464:	mov    ebx,0x54570937
  413469:	les    esp,FWORD PTR [ecx]
  41346b:	popa   
  41346c:	mov    ebp,0x845ecf25
  413471:	mov    ch,0x3f
  413473:	jne    0x4134a6
  413475:	dec    esp
  413476:	sub    eax,0xfee806bf
  41347b:	adc    eax,0x74a6ac7d
  413480:	jl     0x4134dc
  413482:	arpl   si,bp
  413484:	(bad)  
  413485:	dec    esi
  413486:	cmp    bh,al
  413488:	mov    ebx,0xc49dd5cd
  41348d:	jno    0x413465
  41348f:	jmp    0xa501:0xdd9a7a32
  413496:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413498:	xchg   ebx,eax
  413499:	adc    BYTE PTR [ecx],bl
  41349b:	sbb    eax,0xcb5531aa
  4134a0:	xchg   edi,eax
  4134a1:	mov    dl,0x67
  4134a3:	pusha  
  4134a4:	jnp    0x4134a1
  4134a6:	cmp    DWORD PTR [edx+eax*8+0x78],ebp
  4134aa:	sbb    al,0xcc
  4134ac:	inc    ebp
  4134ad:	ins    BYTE PTR es:[edi],dx
  4134ae:	pop    edx
  4134af:	inc    edx
  4134b0:	add    ax,0xc87e
  4134b4:	add    BYTE PTR [edi],dh
  4134b6:	fisub  DWORD PTR [edx+0x287bc254]
  4134bc:	pop    esi
  4134bd:	pop    ecx
  4134be:	cmp    BYTE PTR [esi-0x2019b0c5],dh
  4134c4:	push   0xfffffffb
  4134c6:	lahf   
  4134c7:	leave  
  4134c8:	mov    es,WORD PTR [ebp-0x44eca7b6]
  4134ce:	outs   dx,BYTE PTR ds:[esi]
  4134cf:	jno    0x413490
  4134d1:	sbb    eax,0xe155d6c
  4134d6:	shl    BYTE PTR [ebp-0x693db512],cl
  4134dc:	push   ds
  4134dd:	adc    bh,BYTE PTR ds:0x71d7113d
  4134e3:	push   esi
  4134e4:	add    ecx,DWORD PTR [edi+eiz*4]
  4134e7:	dec    esp
  4134e8:	mov    al,0x3a
  4134ea:	fdiv   QWORD PTR ds:0x244d6b64
  4134f0:	xchg   edx,eax
  4134f1:	mov    ah,0x5c
  4134f3:	adc    BYTE PTR [eax-0x75e7be23],ch
  4134f9:	mov    cl,0xda
  4134fb:	mov    ?,WORD PTR [ecx-0x47]
  4134fe:	cli    
  4134ff:	or     eax,0xef3d4245
  413504:	push   esi
  413505:	jnp    0x413525
  413507:	add    al,BYTE PTR [esi]
  413509:	mov    edx,ecx
  41350b:	jge    0x413556
  41350d:	into   
  41350e:	pop    ds
  41350f:	in     eax,dx
  413510:	cli    
  413511:	jo     0x41356d
  413513:	sahf   
  413514:	mov    esi,0x400b63aa
  413519:	dec    ecx
  41351a:	leave  
  41351b:	pop    ebp
  41351c:	pop    edi
  41351d:	pop    edx
  41351e:	dec    esp
  41351f:	add    edi,0x993676e0
  413525:	stc    
  413526:	(bad)  
  413527:	mov    ch,0xdd
  413529:	sub    ah,ch
  41352b:	mov    al,ds:0x93ca0c0c
  413530:	or     eax,DWORD PTR [ebx-0x13630824]
  413536:	std    
  413537:	pop    ebx
  413538:	mov    ds:0xd374b9ac,al
  41353d:	push   esi
  41353e:	dec    ebx
  41353f:	add    eax,0x737c676e
  413544:	inc    ebx
  413545:	ins    DWORD PTR es:[edi],dx
  413546:	pop    esp
  413547:	mov    edi,ebx
  413549:	ror    cl,cl
  41354b:	inc    ecx
  41354c:	and    cl,BYTE PTR [edi-0x4107e91a]
  413552:	adc    edi,DWORD PTR [eax-0x67]
  413555:	(bad)  
  413556:	in     eax,dx
  413557:	or     esi,ebp
  413559:	xchg   esi,eax
  41355a:	addr16 mov ch,0xc1
  41355d:	dec    edx
  41355e:	or     DWORD PTR [ebx-0x7d],0x40
  413562:	xchg   ecx,eax
  413563:	xchg   DWORD PTR [ebx-0x6c1570a9],esp
  413569:	lods   al,BYTE PTR ds:[esi]
  41356a:	pop    ecx
  41356b:	rol    cl,1
  41356d:	ins    BYTE PTR es:[edi],dx
  41356e:	inc    esi
  41356f:	shl    BYTE PTR [eax+edi*8],1
  413572:	sub    BYTE PTR [edi],al
  413574:	sar    BYTE PTR [ebp-0x78cc495b],0x9f
  41357b:	xor    DWORD PTR [ebp-0x2e2abd0c],esi
  413581:	or     ah,cl
  413583:	inc    edx
  413584:	call   0x2aeac574
  413589:	aad    0x41
  41358b:	or     al,0xbd
  41358d:	scas   al,BYTE PTR es:[edi]
  41358e:	inc    edi
  41358f:	jno    0x413570
  413591:	imul   DWORD PTR [esi+0x4ee6c298]
  413597:	mov    WORD PTR gs:[eax+0x43],?
  41359b:	dec    eax
  41359c:	dec    esp
  41359d:	aam    0xf5
  41359f:	pushf  
  4135a0:	mov    esp,DWORD PTR [edi+edi*8+0x4c]
  4135a4:	push   ebp
  4135a5:	call   0x61f1:0x8706b756
  4135ac:	add    al,al
  4135ae:	pop    ds
  4135af:	int3   
  4135b0:	iret   
  4135b1:	cmp    al,0xd6
  4135b3:	mov    bh,0x95
  4135b5:	in     al,0xfd
  4135b7:	jb     0x413601
  4135b9:	and    ecx,edi
  4135bb:	and    ah,BYTE PTR [ebx]
  4135bd:	dec    eax
  4135be:	cmp    cl,BYTE PTR [ebp+0x2719d917]
  4135c4:	(bad)  
  4135c5:	fld    TBYTE PTR [eax-0x36]
  4135c8:	mov    eax,ds:0xe622d57e
  4135cd:	dec    ebp
  4135ce:	and    eax,0x91559091
  4135d3:	pushf  
  4135d4:	mov    esp,DWORD PTR [esi+eax*4-0x44]
  4135d8:	lahf   
  4135d9:	pop    es
  4135da:	lock cmp al,0x1d
  4135dd:	mov    al,0xf8
  4135df:	dec    edi
  4135e0:	add    al,0x63
  4135e2:	push   ds
  4135e3:	dec    ecx
  4135e4:	mov    bh,0x99
  4135e6:	pop    edx
  4135e7:	mov    edx,0x1e7df04a
  4135ec:	and    dl,ch
  4135ee:	mov    al,0x11
  4135f0:	mov    bl,0xf3
  4135f2:	repz push 0x72d6bad
  4135f8:	gs iret 
  4135fa:	add    esi,DWORD PTR [edx-0x424b6910]
  413600:	call   0x1d23d88f
  413605:	add    DWORD PTR es:0x803f1eb2,0xffffffb2
  41360d:	push   ebx
  41360e:	mov    ds:0x3fad947a,eax
  413613:	(bad)  
  413614:	in     eax,0xcf
  413616:	fnstcw WORD PTR [edi-0xf]
  413619:	in     eax,0xc
  41361b:	xchg   esi,eax
  41361c:	imul   dl
  41361e:	mov    cl,0xd0
  413620:	pusha  
  413621:	sub    esi,DWORD PTR [eax]
  413623:	xchg   DWORD PTR [eax],esi
  413625:	cmc    
  413626:	jns    0x4135fa
  413628:	push   0xb57efc47
  41362d:	mov    edx,DWORD PTR [esi]
  41362f:	daa    
  413630:	idiv   DWORD PTR [esi-0x62]
  413633:	lock test DWORD PTR [ecx],edi
  413636:	loop   0x413637
  413638:	(bad)  
  413639:	fnstcw WORD PTR [eax-0x6f89c360]
  41363f:	ss in  al,0x81
  413642:	retf   
  413643:	mov    dl,0x71
  413645:	pop    ds
  413646:	mov    edx,0x551f0eef
  41364b:	mov    ch,0xeb
  41364d:	outs   dx,DWORD PTR ds:[esi]
  41364e:	loope  0x4136b2
  413650:	jne    0x413675
  413652:	test   al,0x85
  413654:	jns    0x4135db
  413656:	and    BYTE PTR [ebp+0x18],dh
  413659:	add    ecx,ebp
  41365b:	sar    BYTE PTR [eax-0x4c7681cc],cl
  413661:	retf   
  413662:	jno    0x4135e5
  413664:	daa    
  413665:	jge    0x413621
  413667:	popf   
  413668:	cmp    eax,0xc049baad
  41366d:	xchg   edx,eax
  41366e:	(bad)  
  41366f:	aam    0x5a
  413671:	mov    esi,0x2d503f7b
  413676:	rcr    DWORD PTR [ecx-0x27202b40],0xd6
  41367d:	xchg   edx,eax
  41367e:	inc    edi
  41367f:	adc    eax,0x1393eff2
  413684:	xor    edi,esi
  413686:	into   
  413687:	call   0xc498de0c
  41368c:	ss mov bh,0xe5
  41368f:	dec    eax
  413690:	popa   
  413691:	jbe    0x41364d
  413693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413694:	sbb    edx,0x78e2479a
  41369a:	sbb    esi,DWORD PTR [esi+0x1ada614a]
  4136a0:	sar    BYTE PTR [ebp-0x26],0x1a
  4136a4:	outs   dx,BYTE PTR ds:[esi]
  4136a5:	xchg   esp,eax
  4136a6:	ret    0xa6b
  4136a9:	cmp    BYTE PTR [edx-0x67],dh
  4136ac:	or     ecx,DWORD PTR [ecx]
  4136ae:	ja     0x4136cb
  4136b0:	lock dec ebx
  4136b2:	addr16 ret 0x7bf9
  4136b6:	mov    ah,0x8
  4136b8:	aam    0xcf
  4136ba:	jae    0x4136c2
  4136bc:	dec    edx
  4136bd:	push   es
  4136be:	cld    
  4136bf:	adc    bl,0x55
  4136c2:	pop    edi
  4136c3:	fcomp  DWORD PTR [ebp+0x72]
  4136c6:	test   DWORD PTR [edx],edi
  4136c8:	dec    edx
  4136c9:	or     DWORD PTR [ecx-0x40546dbb],esi
  4136cf:	xor    DWORD PTR [ecx],edx
  4136d1:	push   0x56
  4136d3:	stos   DWORD PTR es:[edi],eax
  4136d4:	popa   
  4136d5:	fst    DWORD PTR [eax]
  4136d7:	xor    BYTE PTR [eax+0x35],bh
  4136da:	sub    al,0x41
  4136dc:	ret    0xd352
  4136df:	pop    es
  4136e0:	out    0xfa,eax
  4136e2:	mov    eax,0xd89ec59a
  4136e7:	retf   
  4136e8:	mov    ebp,0x15fff48e
  4136ed:	xchg   ebx,eax
  4136ee:	add    al,0x7d
  4136f0:	test   BYTE PTR [edi+0x47],dl
  4136f3:	call   0x13c7:0xe8db9251
  4136fa:	repnz push 0x2e
  4136fd:	mov    ds:0xed949b98,eax
  413702:	sub    BYTE PTR [ebx+0x2],dl
  413705:	fld    TBYTE PTR [esp+eax*1]
  413708:	dec    ebx
  413709:	jmp    0x413774
  41370b:	mov    dh,0xc6
  41370d:	sub    edi,ebx
  41370f:	sar    ebx,1
  413711:	(bad)  
  413712:	dec    ebp
  413713:	push   edx
  413714:	(bad)  
  413715:	addr16 jle 0x413717
  413718:	xchg   edi,eax
  413719:	std    
  41371a:	arpl   di,bp
  41371c:	out    dx,eax
  41371d:	rcl    DWORD PTR [ebp-0x1a],cl
  413720:	dec    eax
  413721:	imul   ecx,edx,0x7
  413724:	mov    esp,0xaa3fe272
  413729:	push   ds
  41372a:	add    eax,0x594a62a9
  41372f:	(bad)  
  413730:	outs   dx,DWORD PTR ds:[esi]
  413731:	mov    bh,0x5d
  413733:	mov    bl,0xac
  413735:	mov    esi,0x9b9909cd
  41373a:	les    ecx,FWORD PTR [edi]
  41373c:	hlt    
  41373d:	pusha  
  41373e:	add    DWORD PTR [ecx],ebp
  413740:	sahf   
  413741:	ds lock test edi,0xdec6f884
  413749:	lock sbb eax,0x22e1862c
  41374f:	jb     0x413711
  413751:	mov    esi,0xa2b16389
  413756:	rol    BYTE PTR [ebx-0x6cb65117],0x97
  41375d:	lea    edx,[edi-0x20]
  413760:	dec    ebp
  413761:	pop    ds
  413762:	sub    BYTE PTR [esi-0x55],ah
  413765:	(bad)  
  413766:	cld    
  413767:	jmp    0xdadb:0x6413668e
  41376e:	or     bl,ah
  413770:	imul   esi,edi,0xffffffa0
  413773:	outs   dx,BYTE PTR ds:[esi]
  413774:	sbb    al,0x4f
  413776:	sub    BYTE PTR ds:0x1fa62d2b,bl
  41377c:	lds    ebx,FWORD PTR [edx]
  41377e:	fldenv [ecx]
  413780:	lods   al,BYTE PTR fs:[esi]
  413782:	jno    0x413749
  413784:	into   
  413785:	or     DWORD PTR [esi+0x43],ebx
  413788:	or     dh,0xf2
  41378b:	call   0x7671:0x1877ddc1
  413792:	jo     0x41377f
  413794:	or     eax,0xcb94187a
  413799:	sti    
  41379a:	stc    
  41379b:	inc    edx
  41379c:	pop    es
  41379d:	add    BYTE PTR [ebx+eax*1-0x62],0x7d
  4137a2:	xchg   ebx,eax
  4137a3:	xchg   edx,eax
  4137a4:	push   eax
  4137a5:	mov    esi,0xdd0df2ef
  4137aa:	add    esp,DWORD PTR [esi-0x6d52294]
  4137b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137b1:	adc    al,0xf4
  4137b3:	add    DWORD PTR [esi],ebp
  4137b5:	cmp    dh,cl
  4137b7:	xchg   ebx,eax
  4137b8:	push   esp
  4137b9:	add    BYTE PTR [edx-0x4b],0x8f
  4137bd:	pop    edi
  4137be:	daa    
  4137bf:	mov    ebx,0x4eb3ccb0
  4137c4:	push   edi
  4137c5:	scas   al,BYTE PTR es:[edi]
  4137c6:	test   BYTE PTR [eax+0x4e],bh
  4137c9:	mov    esp,0xdce86458
  4137ce:	shl    edi,cl
  4137d0:	xor    al,0x29
  4137d2:	or     al,cl
  4137d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137d5:	xor    edx,DWORD PTR [ecx]
  4137d7:	loop   0x413786
  4137d9:	jne    0x41384c
  4137db:	test   ebx,ebp
  4137dd:	mov    esi,0x98d0fbe3
  4137e2:	daa    
  4137e3:	adc    al,0xf2
  4137e5:	inc    esp
  4137e6:	cs jnp 0x4137a1
  4137e9:	sub    eax,0x8463f01d
  4137ee:	test   DWORD PTR [edx],ebp
  4137f0:	call   0x9586:0x13f11ea
  4137f7:	xlat   BYTE PTR ds:[ebx]
  4137f8:	dec    ebp
  4137f9:	or     dh,al
  4137fb:	inc    ecx
  4137fc:	jge    0x41382e
  4137fe:	ins    DWORD PTR es:[edi],dx
  4137ff:	mov    ah,0x82
  413801:	jp     0x41381d
  413803:	pop    es
  413804:	pushf  
  413805:	in     al,dx
  413806:	lods   al,BYTE PTR ds:[esi]
  413807:	(bad)  
  413808:	out    0xc6,al
  41380a:	pop    esp
  41380b:	adc    ch,BYTE PTR [esi+0x5b]
  41380e:	adc    BYTE PTR [esi-0x7a97e4e9],bh
  413814:	dec    eax
  413815:	xchg   esi,eax
  413816:	in     al,0x79
  413818:	sub    al,0x55
  41381a:	xor    esi,DWORD PTR [eax]
  41381c:	xor    ecx,eax
  41381e:	aad    0xe
  413820:	in     al,dx
  413821:	mov    eax,ds:0x18a3bab7
  413826:	xchg   ebp,eax
  413827:	or     bl,BYTE PTR [ecx-0x4c]
  41382a:	ror    esp,cl
  41382c:	imul   eax,DWORD PTR [edi+0x57],0xffe049e4
  413833:	adc    esp,DWORD PTR [ecx+edi*4-0x2c]
  413837:	adc    edi,DWORD PTR [ecx-0x3a]
  41383a:	outs   dx,BYTE PTR ds:[esi]
  41383b:	dec    ebx
  41383c:	push   0xef5a4949
  413841:	lods   al,BYTE PTR ds:[esi]
  413842:	xchg   edx,eax
  413843:	mov    esi,0xf64a4db3
  413848:	lock pushf 
  41384a:	lods   eax,DWORD PTR ds:[esi]
  41384b:	mov    edx,0x2e5dd8cc
  413850:	push   ss
  413851:	inc    esp
  413852:	cmp    al,0x47
  413854:	and    BYTE PTR [edi+eiz*1-0x3],ah
  413858:	sub    DWORD PTR [edx+0x7c],eax
  41385b:	(bad)  
  41385c:	sub    edi,ebp
  41385e:	inc    esi
  41385f:	aad    0xce
  413861:	dec    ebx
  413862:	(bad)  
  413863:	push   ss
  413864:	jnp    0x413893
  413866:	xor    DWORD PTR [edx],edx
  413868:	daa    
  413869:	ja     0x413839
  41386b:	mov    bh,0xdf
  41386d:	clc    
  41386e:	scas   eax,DWORD PTR es:[edi]
  41386f:	(bad)  
  413871:	shl    DWORD PTR [ebp+0x2e27bf61],1
  413877:	(bad)  
  413878:	dec    eax
  413879:	xchg   edx,eax
  41387a:	repz jge 0x41387e
  41387d:	(bad)  
  41387e:	fs sbb ebx,esi
  413881:	int3   
  413882:	adc    al,0x61
  413884:	adc    DWORD PTR [ebx+edx*4+0x1b],esp
  413888:	pop    ds
  413889:	inc    edx
  41388a:	mov    esp,0xfc0361cb
  41388f:	mov    al,0x52
  413891:	and    al,0x2d
  413893:	jg     0x41384e
  413895:	in     eax,dx
  413896:	cmp    BYTE PTR [ecx+0x5108704f],al
  41389c:	pop    esp
  41389d:	ss in  al,0xcc
  4138a0:	loopne 0x413833
  4138a2:	out    dx,eax
  4138a3:	(bad)
  4138a7:	sbb    al,0xe
  4138a9:	push   ebx
  4138aa:	lea    ecx,[edx+esi*4]
  4138ad:	sub    eax,0xf4970f2c
  4138b2:	add    eax,0x272fecd0
  4138b7:	dec    edx
  4138b8:	lods   al,BYTE PTR ds:[esi]
  4138b9:	mov    cl,0x1d
  4138bb:	fdivr  st(1),st
  4138bd:	leave  
  4138be:	ja     0x4138c6
  4138c0:	fmul   QWORD PTR [ecx+eiz*4+0x3c]
  4138c4:	stc    
  4138c5:	mov    ebp,0x7c2359b6
  4138ca:	cmp    esp,0xffffffa3
  4138cd:	mov    eax,0xc93c417b
  4138d2:	fcom   DWORD PTR [esi]
  4138d4:	xchg   ebp,eax
  4138d5:	dec    edi
  4138d6:	lods   eax,DWORD PTR ds:[esi]
  4138d7:	rcl    BYTE PTR [eax+0x21],1
  4138da:	inc    ebp
  4138db:	sahf   
  4138dc:	icebp  
  4138dd:	mov    ecx,0xd0a45f0e
  4138e2:	scas   eax,DWORD PTR es:[edi]
  4138e3:	push   0xffffff81
  4138e5:	push   esp
  4138e6:	mov    edi,0xfee8196b
  4138eb:	inc    edx
  4138ec:	arpl   WORD PTR ds:[edi],ax
  4138ef:	dec    ebx
  4138f0:	stos   BYTE PTR es:[edi],al
  4138f1:	out    dx,eax
  4138f2:	sbb    BYTE PTR [edi-0x3e77a812],cl
  4138f8:	and    eax,0x96d5354
  4138fd:	push   ebx
  4138fe:	jge    0x4138c4
  413900:	in     al,dx
  413901:	sub    DWORD PTR [ebx-0xd],esp
  413904:	sahf   
  413905:	pop    esi
  413906:	repz push 0xffffffa4
  413909:	mov    edx,0x48cc679d
  41390e:	mov    bh,0x8c
  413910:	push   esp
  413911:	mov    edi,0x3121985a
  413916:	pop    ecx
  413917:	out    dx,al
  413918:	pop    edi
  413919:	jl     0x413919
  41391b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41391c:	lock fldcw WORD PTR [ebx-0x656c6a79]
  413923:	adc    eax,0x3d4e92c7
  413928:	shr    BYTE PTR [eax+esi*2+0x34],cl
  41392c:	arpl   WORD PTR [edx-0xa25a623],di
  413932:	add    ecx,DWORD PTR [ecx-0x36]
  413935:	rcr    BYTE PTR [eax],0xea
  413938:	add    al,0xfb
  41393a:	pop    ecx
  41393b:	in     al,0xdc
  41393d:	pop    ebp
  41393e:	shrd   DWORD PTR [ebp+0x7a],eax,cl
  413942:	xchg   ecx,eax
  413943:	or     BYTE PTR ds:0xa6f874ec,ah
  413949:	sti    
  41394a:	sbb    BYTE PTR gs:[edx-0x5d],bl
  41394e:	(bad)  
  41394f:	adc    eax,0xd20b37f3
  413954:	adc    al,0x98
  413956:	ret    
  413957:	sub    al,0x62
  413959:	stos   BYTE PTR es:[edi],al
  41395a:	fnstcw WORD PTR [ebx+0x4eae58cb]
  413960:	js     0x413998
  413962:	hlt    
  413963:	adc    BYTE PTR [ebx],bl
  413965:	mov    ebx,0xfc0cce85
  41396a:	sbb    BYTE PTR [edi+0x765ff356],bl
  413970:	sbb    DWORD PTR [esi+edi*2],eax
  413973:	mov    ecx,0xdc6a53b4
  413978:	cs add edi,esp
  41397b:	push   0xffffffc3
  41397d:	fmul   st(2),st
  41397f:	cld    
  413980:	xor    al,0xe8
  413982:	stc    
  413983:	pop    esi
  413984:	mul    DWORD PTR [ebp-0x5d]
  413987:	shl    DWORD PTR [edi+0x59],1
  41398a:	scas   al,BYTE PTR es:[edi]
  41398b:	lock jmp 0x81cf:0xc675d420
  413993:	mov    DWORD PTR [edx+0x5d136071],ecx
  413999:	cdq    
  41399a:	shl    DWORD PTR [esi+esi*8+0x2f],cl
  41399e:	and    al,0x6d
  4139a0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4139a2:	aam    0xf6
  4139a4:	sbb    BYTE PTR [eax],cl
  4139a6:	popa   
  4139a7:	push   es
  4139a8:	repnz retf 
  4139aa:	push   edi
  4139ab:	pop    edi
  4139ac:	ss pop ss
  4139ae:	pop    es
  4139af:	or     BYTE PTR [edx],dl
  4139b1:	test   ecx,ebp
  4139b3:	fsubr  QWORD PTR [ebx]
  4139b5:	repnz pop esi
  4139b7:	loope  0x413a19
  4139b9:	iret   
  4139ba:	sbb    BYTE PTR [eax],cl
  4139bc:	cld    
  4139bd:	mov    ds:0xe685ebab,al
  4139c2:	cmp    al,0xaf
  4139c4:	in     eax,dx
  4139c5:	and    DWORD PTR [ebx-0x7884cfc7],ebp
  4139cb:	pop    ebx
  4139cc:	hlt    
  4139cd:	imul   esi,DWORD PTR [ecx],0xffffff80
  4139d0:	lahf   
  4139d1:	or     ecx,edi
  4139d3:	and    al,BYTE PTR [eax]
  4139d5:	stos   BYTE PTR es:[edi],al
  4139d6:	push   ss
  4139d7:	pop    esp
  4139d8:	neg    DWORD PTR [ebp+0x46a02ba9]
  4139de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139df:	sbb    al,BYTE PTR [ecx-0x374fd6d2]
  4139e5:	sbb    al,0x3c
  4139e7:	mov    ds:0x9187ab34,al
  4139ec:	jbe    0x4139ee
  4139ee:	adc    eax,0xc35d2357
  4139f3:	push   esp
  4139f4:	scas   eax,DWORD PTR es:[edi]
  4139f5:	mov    eax,ds:0x9222bcc2
  4139fa:	mov    ah,0x6e
  4139fc:	add    DWORD PTR [edx-0x40],0xffffff9f
  413a00:	pop    es
  413a01:	pop    ss
  413a02:	stos   DWORD PTR es:[edi],eax
  413a03:	cmp    esp,DWORD PTR [eax+0x1aa6e72d]
  413a09:	in     eax,dx
  413a0a:	mov    ebx,0x82078f7b
  413a0f:	call   0x44cf89dc
  413a14:	dec    esi
  413a15:	sbb    ecx,DWORD PTR [ecx]
  413a17:	cmp    dh,BYTE PTR [ebx+0x55]
  413a1a:	push   ecx
  413a1b:	pop    ss
  413a1c:	xchg   DWORD PTR [ebx-0x6ffaab4d],edi
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	(bad)  
  413a24:	stc    
  413a25:	fs test al,0x4c
  413a28:	lock and al,0x5
  413a2b:	mov    esi,0xce4b13f2
  413a30:	sub    bh,cl
  413a32:	sar    DWORD PTR [esi-0x5ded12d2],cl
  413a38:	push   ds
  413a39:	push   ebp
  413a3a:	jo     0x413a8b
  413a3c:	out    dx,al
  413a3d:	retf   0xee0d
  413a40:	shr    edx,0xcf
  413a43:	jg     0x413a49
  413a45:	push   ss
  413a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a47:	int3   
  413a48:	sub    al,0x25
  413a4a:	pop    ds
  413a4b:	and    DWORD PTR [esi-0x6a],eax
  413a4e:	call   0x1e2b:0x2546cc9a
  413a55:	retf   
  413a56:	sub    ecx,DWORD PTR [edx-0x6f]
  413a59:	outs   dx,BYTE PTR ds:[esi]
  413a5a:	or     ebp,DWORD PTR [eax-0x515da3fe]
  413a60:	outs   dx,DWORD PTR ds:[esi]
  413a61:	(bad)  
  413a62:	mov    eax,ebp
  413a64:	je     0x4139f2
  413a66:	(bad)  
  413a68:	gs cdq 
  413a6a:	in     eax,dx
  413a6b:	inc    ecx
  413a6c:	out    0xf8,eax
  413a6e:	push   ebx
  413a6f:	jne    0x413aea
  413a71:	inc    ecx
  413a72:	push   esi
  413a73:	jmp    0x413a96
  413a75:	jb     0x413aa6
  413a77:	int    0x89
  413a79:	mov    al,0x49
  413a7b:	xchg   ebx,eax
  413a7c:	mov    bl,0xc2
  413a7e:	adc    dh,al
  413a80:	shl    cl,cl
  413a82:	xor    ebp,DWORD PTR [ebx+0x6d]
  413a85:	push   0xfffffffb
  413a87:	add    BYTE PTR [esi+0x66],bh
  413a8a:	std    
  413a8b:	mov    esi,esi
  413a8d:	sub    DWORD PTR [esi],0x19
  413a90:	scas   eax,DWORD PTR es:[edi]
  413a91:	inc    esi
  413a92:	ja     0x413aa4
  413a94:	push   ecx
  413a95:	add    eax,0xf4162ebe
  413a9a:	popf   
  413a9b:	leave  
  413a9c:	call   0x8296:0x25e83607
  413aa3:	dec    edx
  413aa4:	stos   DWORD PTR es:[edi],eax
  413aa5:	neg    BYTE PTR [eax-0x9fea9ab]
  413aab:	mov    ah,0xbb
  413aad:	aas    
  413aae:	(bad)  
  413ab0:	push   esi
  413ab1:	adc    esp,DWORD PTR [eax-0x6e]
  413ab4:	pop    ebx
  413ab5:	lods   eax,DWORD PTR ds:[esi]
  413ab6:	stc    
  413ab7:	push   edi
  413ab8:	(bad)  
  413ab9:	leave  
  413aba:	xchg   ebp,eax
  413abb:	jbe    0x413aee
  413abd:	push   esi
  413abe:	ret    
  413abf:	add    BYTE PTR [ebx+0x1e40db15],0xae
  413ac6:	mov    dl,0x42
  413ac8:	pop    esp
  413ac9:	(bad)  
  413aca:	fild   DWORD PTR [eax-0x31]
  413acd:	mov    dl,0xd0
  413acf:	jae    0x413af1
  413ad1:	inc    edx
  413ad2:	pop    esi
  413ad3:	mov    al,ds:0x2cf43772
  413ad8:	(bad)  
  413ad9:	rcr    DWORD PTR [ebx],1
  413adb:	dec    edx
  413adc:	push   ecx
  413add:	jne    0x413b07
  413adf:	aad    0x78
  413ae1:	int3   
  413ae2:	adc    cl,BYTE PTR [esi+0x47]
  413ae5:	in     al,0xb5
  413ae7:	ficom  WORD PTR [ecx]
  413ae9:	(bad)  
  413aea:	ret    0x262b
  413aed:	adc    eax,0x132b7993
  413af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413af3:	cmp    eax,0x52ecec6e
  413af8:	sub    al,BYTE PTR [edx+0x2]
  413afb:	outs   dx,BYTE PTR ds:[esi]
  413afc:	and    eax,0xdeebc162
  413b01:	(bad)  
  413b02:	cmc    
  413b03:	loop   0x413b40
  413b05:	fwait
  413b06:	xor    al,0xdc
  413b08:	std    
  413b09:	push   es
  413b0a:	jmp    0xc725:0xeb050da8
  413b11:	fsubr  st(2),st
  413b13:	dec    esp
  413b14:	cmp    al,0xeb
  413b16:	outs   dx,BYTE PTR ds:[esi]
  413b17:	mov    ebp,0x930b3c91
  413b1c:	data16 scas al,BYTE PTR es:[edi]
  413b1e:	in     al,0xc0
  413b20:	jnp    0x413ad7
  413b22:	fsub   QWORD PTR [ebp-0x18]
  413b25:	jns    0x413ac5
  413b27:	sbb    bl,bl
  413b29:	cmc    
  413b2a:	inc    ebx
  413b2b:	test   dh,dh
  413b2d:	mov    eax,0x72df918f
  413b32:	jge    0x413b7d
  413b34:	addr16 push ds
  413b36:	mov    eax,ds:0x2a1f7c9f
  413b3b:	lds    ebp,FWORD PTR [edx+0x5e304515]
  413b41:	js     0x413b73
  413b43:	mov    ebx,0x643b265a
  413b48:	add    eax,0xbd5ff324
  413b4d:	aas    
  413b4e:	lock push esp
  413b50:	xor    eax,0x587995bf
  413b55:	mov    bh,0x51
  413b57:	fwait
  413b58:	sti    
  413b59:	in     al,0xbe
  413b5b:	imul   ah
  413b5d:	pop    ss
  413b5e:	fdiv   QWORD PTR [ebp+0x20]
  413b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b62:	cmp    BYTE PTR [ecx],cl
  413b64:	cmp    esp,DWORD PTR [edi]
  413b66:	jmp    0xce7a:0x3b9c2642
  413b6d:	xchg   edi,eax
  413b6e:	aaa    
  413b6f:	sbb    ch,BYTE PTR [edx+edi*1-0x51]
  413b73:	sbb    DWORD PTR [eax-0x37a72ffe],ebx
  413b79:	(bad)  
  413b7a:	sub    eax,0x5e312c5e
  413b7f:	mov    ebp,0x1c19cf14
  413b84:	xchg   ebp,eax
  413b85:	or     al,0xb5
  413b87:	pop    eax
  413b88:	jbe    0x413b7c
  413b8a:	jmp    DWORD PTR [eax]
  413b8c:	test   DWORD PTR [ebx-0x17],ecx
  413b8f:	mov    ds:0x95037516,al
  413b94:	(bad)
  413b98:	push   0x12
  413b9a:	stc    
  413b9b:	or     al,0xb1
  413b9d:	adc    eax,0x3a52e752
  413ba2:	push   edi
  413ba3:	mov    dh,0x93
  413ba5:	pop    ss
  413ba6:	push   edi
  413ba7:	and    BYTE PTR [edx+0x7c],ch
  413baa:	out    0xd0,al
  413bac:	je     0x413b96
  413bae:	sbb    BYTE PTR [esp+edi*1+0x42],bl
  413bb2:	sbb    eax,0x602f0364
  413bb7:	push   0xffffff97
  413bb9:	test   eax,0xf1acc936
  413bbe:	or     edx,DWORD PTR [ecx]
  413bc0:	fs jns 0x413c04
  413bc3:	scas   eax,DWORD PTR es:[edi]
  413bc4:	push   edi
  413bc5:	loope  0x413b92
  413bc7:	mov    al,0xaf
  413bc9:	pop    es
  413bca:	xchg   edi,eax
  413bcb:	(bad)  
  413bcc:	mov    ebp,0x944800da
  413bd1:	xchg   ebp,eax
  413bd2:	imul   edx,DWORD PTR [eax],0x79e7c030
  413bd8:	ror    BYTE PTR fs:[esi],cl
  413bdb:	and    DWORD PTR [ebx+0x332efb68],0xffffffb0
  413be2:	sbb    BYTE PTR [eax+ecx*2+0x576c1640],ah
  413be9:	outs   dx,BYTE PTR ds:[esi]
  413bea:	bound  edx,QWORD PTR [esi+ebp*8+0x49]
  413bee:	retf   
  413bef:	hlt    
  413bf0:	jmp    0x5f4e9a12
  413bf5:	test   DWORD PTR [edi-0x70],ecx
  413bf8:	neg    eax
  413bfa:	mov    ch,0x86
  413bfc:	push   cs
  413bfd:	sbb    al,0xf
  413bff:	mov    ebx,0xa24b95a0
  413c04:	daa    
  413c05:	std    
  413c06:	fidivr WORD PTR [eax+0xe3b8f81]
  413c0c:	pop    ecx
  413c0d:	pop    ebx
  413c0e:	xchg   ebp,eax
  413c0f:	xor    BYTE PTR [eax],dh
  413c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c12:	test   BYTE PTR [edi],dl
  413c14:	mov    edx,0x10489d54
  413c19:	aaa    
  413c1a:	jecxz  0x413c27
  413c1c:	hlt    
  413c1d:	shr    BYTE PTR [esi-0x16],cl
  413c20:	push   0xfffffff1
  413c22:	jns    0x413c00
  413c24:	div    bh
  413c26:	mul    DWORD PTR [edx-0x6049d119]
  413c2c:	xchg   edx,eax
  413c2d:	test   BYTE PTR [eax+0xf],0x45
  413c31:	dec    edi
  413c32:	in     al,0xb8
  413c34:	mov    BYTE PTR [ecx+0x7],bh
  413c37:	popf   
  413c38:	push   ebx
  413c39:	lahf   
  413c3a:	popf   
  413c3b:	mov    al,ds:0xfdbf99e1
  413c40:	jns    0x413be3
  413c42:	cmp    BYTE PTR [edi],dl
  413c44:	cld    
  413c45:	push   ss
  413c46:	popa   
  413c47:	popf   
  413c48:	aad    0x68
  413c4a:	imul   ebx,DWORD PTR [eax],0x4
  413c4d:	gs xor eax,0xbc7ddedf
  413c53:	(bad)  
  413c54:	into   
  413c55:	pop    ds
  413c56:	mov    fs,WORD PTR [edx-0x19b5f5b6]
  413c5c:	jge    0x413bf3
  413c5e:	iret   
  413c5f:	fbstp  TBYTE PTR [edi-0x6ed3c28b]
  413c65:	adc    eax,0xa1abba53
  413c6a:	clc    
  413c6b:	adc    al,BYTE PTR [eax]
  413c6d:	in     al,dx
  413c6e:	or     al,0xf0
  413c70:	or     DWORD PTR [eax+ecx*1+0x77],esp
  413c74:	clc    
  413c75:	fidiv  WORD PTR [ebp+0x10]
  413c78:	data16 adc bl,BYTE PTR [eax]
  413c7b:	pop    edi
  413c7c:	(bad)  
  413c7d:	(bad)  
  413c7e:	pop    ebx
  413c7f:	loop   0x413c19
  413c81:	or     al,BYTE PTR [eax+ebp*2]
  413c84:	iret   
  413c85:	outs   dx,DWORD PTR ds:[esi]
  413c86:	in     eax,dx
  413c87:	fld    DWORD PTR [edx-0x2e]
  413c8a:	retf   
  413c8b:	jge    0x413c7b
  413c8d:	mov    al,ds:0x5fab9b82
  413c92:	scas   al,BYTE PTR es:[edi]
  413c93:	loop   0x413cab
  413c95:	xchg   esp,eax
  413c96:	add    bl,BYTE PTR [ebx]
  413c98:	sbb    BYTE PTR [eax-0x673c90ea],0xa8
  413c9f:	pop    ds
  413ca0:	nop
  413ca1:	cmp    al,0x85
  413ca3:	mov    bl,0x1f
  413ca5:	sub    eax,0xcbc91431
  413caa:	adc    bl,bl
  413cac:	push   edi
  413cad:	jb     0x413c88
  413caf:	aam    0xba
  413cb1:	bound  ebx,QWORD PTR [edx+0x68da2f8c]
  413cb7:	pop    ds
  413cb8:	cmp    cl,BYTE PTR [edi-0x62]
  413cbb:	pusha  
  413cbc:	pop    ebp
  413cbd:	jmp    0x48b7dbd8
  413cc2:	nop
  413cc3:	jmp    0x6e78:0x95fa3830
  413cca:	(bad)  
  413ccb:	dec    ebx
  413ccc:	lock mov eax,0xc0801d11
  413cd2:	push   eax
  413cd3:	ret    
  413cd4:	xchg   edx,eax
  413cd5:	mov    ds:0xe140bd1a,eax
  413cda:	sbb    eax,0xa0b834e4
  413cdf:	call   0x13fc:0x3f0f076d
  413ce6:	aam    0xd9
  413ce8:	pop    es
  413ce9:	push   ecx
  413cea:	dec    esi
  413ceb:	jbe    0x413d06
  413ced:	xchg   esi,eax
  413cee:	arpl   WORD PTR ds:0x2790a8bf,sp
  413cf4:	pop    ss
  413cf5:	cmp    esi,ebp
  413cf7:	adc    BYTE PTR [eax+0x7f],bh
  413cfa:	mov    edi,es
  413cfc:	int    0xa9
  413cfe:	jb     0x413d0f
  413d00:	cmp    edx,DWORD PTR [esi+0x402dc2a8]
  413d06:	add    eax,0x65ff070
  413d0b:	inc    esi
  413d0c:	out    dx,eax
  413d0d:	in     eax,0xbc
  413d0f:	test   BYTE PTR [edx-0x4f],bl
  413d12:	dec    esp
  413d13:	data16 dec al
  413d16:	cmc    
  413d17:	ds fwait
  413d19:	dec    eax
  413d1a:	iret   
  413d1b:	cld    
  413d1c:	daa    
  413d1d:	mov    fs,ebp
  413d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d20:	into   
  413d21:	rcr    ebp,0xb3
  413d24:	jbe    0x413cfa
  413d26:	mov    ah,0x47
  413d28:	pop    ebx
  413d29:	ja     0x413cef
  413d2b:	mov    ecx,0xb7d7735e
  413d30:	into   
  413d31:	xor    cl,BYTE PTR [ecx-0x2a]
  413d34:	adc    DWORD PTR [ebp+0x2c],edi
  413d37:	cs pusha 
  413d39:	retf   0x241
  413d3c:	dec    esi
  413d3d:	mov    dh,al
  413d3f:	test   DWORD PTR ds:0x9ece778d,eax
  413d45:	pop    ebp
  413d46:	test   BYTE PTR [eax+0x47c93a9c],ah
  413d4c:	xchg   ebp,eax
  413d4d:	mov    eax,ds:0xcfbb65ea
  413d52:	xchg   esp,eax
  413d53:	inc    edx
  413d54:	shl    dh,1
  413d56:	add    ebx,ebx
  413d58:	jecxz  0x413d1d
  413d5a:	add    al,0x29
  413d5c:	add    al,0xf1
  413d5e:	jmp    0xef5a:0x7807c8a0
  413d65:	sbb    edi,DWORD PTR [edx+0x31]
  413d68:	adc    al,0xa8
  413d6a:	enter  0xd4e8,0xd
  413d6e:	mov    dl,0x5f
  413d70:	mov    ds:0xa4382d33,eax
  413d75:	pop    ds
  413d76:	popa   
  413d77:	mov    DWORD PTR [edi-0x2cb61d80],0x49b7efd1
  413d81:	dec    esi
  413d82:	pop    edx
  413d83:	xchg   esi,eax
  413d84:	out    0xa8,al
  413d86:	mov    edi,0x7ec19824
  413d8b:	fwait
  413d8c:	xor    eax,DWORD PTR [edx]
  413d8e:	pop    esp
  413d8f:	cmc    
  413d90:	xor    DWORD PTR [eax-0x45],esi
  413d93:	add    dl,BYTE PTR [ecx+ecx*4-0x63]
  413d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d98:	add    esp,DWORD PTR [eax]
  413d9a:	test   ch,dh
  413d9c:	aas    
  413d9d:	dec    ebp
  413d9e:	and    dl,dl
  413da0:	pop    edx
  413da1:	jae    0x413dbb
  413da3:	jle    0x413d50
  413da5:	test   eax,0x4b60ca21
  413daa:	aas    
  413dab:	or     edx,DWORD PTR [eax]
  413dad:	inc    esi
  413dae:	fcmovnb st,st(6)
  413db0:	mov    edi,DWORD PTR [ebx+0x48]
  413db3:	sub    eax,0xb693bac6
  413db8:	jmp    0xce30781
  413dbd:	pop    esp
  413dbe:	xor    eax,0xef41fa27
  413dc3:	mov    WORD PTR [esp+ebx*1-0xc],?
  413dc7:	push   ds
  413dc8:	mov    ecx,0x1e99d284
  413dcd:	mov    WORD PTR [edx-0x1a540d5],gs
  413dd3:	hlt    
  413dd4:	dec    esp
  413dd5:	shl    BYTE PTR [ecx-0x3aef6966],0xdb
  413ddc:	movhps xmm0,QWORD PTR [edx]
  413ddf:	fwait
  413de0:	add    DWORD PTR [ebp+0x6595d9c9],ebp
  413de6:	loope  0x413e0a
  413de8:	mov    DWORD PTR [ebp-0x2fd68d82],edi
  413dee:	xchg   ecx,eax
  413def:	sbb    esi,esi
  413df1:	shl    BYTE PTR [esi-0x6b],cl
  413df4:	mov    cl,0xd4
  413df6:	or     dl,BYTE PTR [eax+0x1f]
  413df9:	fild   DWORD PTR [edi]
  413dfb:	out    0xc1,eax
  413dfd:	call   0x8ef5:0xdd8453a1
  413e04:	xor    eax,0xbf56a950
  413e09:	out    0x5e,eax
  413e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e0c:	mov    ?,edi
  413e0e:	ja     0x413dbc
  413e10:	xchg   esp,eax
  413e11:	add    ebx,0x5c4d7dba
  413e17:	xor    eax,DWORD PTR [eax+0x62]
  413e1a:	dec    esp
  413e1b:	aad    0xcf
  413e1d:	push   ebx
  413e1e:	and    esi,edi
  413e20:	jnp    0x413e20
  413e22:	push   0x2f
  413e24:	shl    DWORD PTR [edi],1
  413e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e28:	jmp    0x413dc8
  413e2a:	cli    
  413e2b:	popa   
  413e2c:	adc    DWORD PTR [esi],ebp
  413e2e:	fisubr WORD PTR [edi+eax*2+0x5a9bb49a]
  413e35:	adc    cl,ah
  413e37:	and    al,0x81
  413e39:	adc    edi,DWORD PTR [edi-0x30464a53]
  413e3f:	and    ah,ch
  413e41:	dec    esp
  413e42:	stc    
  413e43:	or     dl,dh
  413e45:	mov    ecx,0x50b4982d
  413e4a:	fist   DWORD PTR [ecx+edi*4+0x61]
  413e4e:	mov    esp,0xfa03f170
  413e53:	pop    ebp
  413e54:	mov    edx,0x68604020
  413e59:	bound  edx,QWORD PTR [edi]
  413e5b:	fisubr WORD PTR [ebp-0x78]
  413e5e:	aaa    
  413e5f:	push   ecx
  413e60:	out    dx,al
  413e61:	test   eax,0x348b385e
  413e66:	fiadd  WORD PTR [ebp+0x6f]
  413e69:	jae    0x413e40
  413e6b:	data16 aaa 
  413e6d:	jmp    0x9288475b
  413e72:	sbb    al,cl
  413e74:	jge    0x413ead
  413e76:	stos   DWORD PTR es:[edi],eax
  413e77:	cld    
  413e78:	adc    BYTE PTR [esi+0x49],dh
  413e7b:	add    al,0x41
  413e7d:	or     ebp,DWORD PTR [esi]
  413e7f:	mov    DWORD PTR [edi+0x20],esi
  413e82:	adc    eax,0xd29898e5
  413e87:	dec    edi
  413e88:	cmp    eax,0x79500a8d
  413e8d:	push   ebx
  413e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e8f:	cdq    
  413e90:	int    0xf5
  413e92:	push   edx
  413e93:	dec    edi
  413e94:	int3   
  413e95:	ret    
  413e96:	cmp    edx,DWORD PTR [ecx]
  413e98:	cmp    al,0xe2
  413e9a:	rcr    eax,1
  413e9c:	push   cs
  413e9d:	fidivr DWORD PTR [edx+eax*1]
  413ea0:	jae    0x413eea
  413ea2:	sbb    DWORD PTR [edx+0x248045af],esp
  413ea8:	push   ebx
  413ea9:	xchg   esp,eax
  413eaa:	cmp    al,0xbd
  413eac:	pop    esi
  413ead:	inc    esp
  413eae:	mov    ecx,0xc1038ee8
  413eb3:	inc    ebx
  413eb4:	ficomp DWORD PTR [ebx-0x7]
  413eb7:	and    BYTE PTR [edi*2+0x443dd226],0x42
  413ebf:	push   ecx
  413ec0:	pop    esp
  413ec1:	xchg   BYTE PTR [edi-0x33],bh
  413ec4:	jmp    0xd43ed37
  413ec9:	addr16 pusha 
  413ecb:	xchg   ecx,eax
  413ecc:	inc    eax
  413ecd:	psadbw mm7,QWORD PTR [esi+eiz*1]
  413ed1:	pop    es
  413ed2:	ret    0xc29d
  413ed5:	jp     0x413eca
  413ed7:	inc    ebx
  413ed8:	pushf  
  413ed9:	ins    BYTE PTR es:[edi],dx
  413eda:	add    dl,BYTE PTR [ebp+esi*2+0x366e8836]
  413ee1:	fild   DWORD PTR [ecx+0x5f]
  413ee4:	gs push ecx
  413ee6:	push   edx
  413ee7:	dec    edi
  413ee8:	dec    ebx
  413ee9:	sub    ch,bh
  413eeb:	pusha  
  413eec:	push   esp
  413eed:	cmp    bh,BYTE PTR [edx-0x13]
  413ef0:	leave  
  413ef1:	jecxz  0x413ea8
  413ef3:	jo     0x413f49
  413ef5:	xchg   DWORD PTR [esi],esp
  413ef7:	sub    eax,0xde024ce1
  413efc:	vprotq ymm3,xmm0,0x9f
  413f01:	scas   al,BYTE PTR es:[edi]
  413f02:	das    
  413f03:	ins    DWORD PTR es:[edi],dx
  413f04:	outs   dx,DWORD PTR ds:[esi]
  413f05:	mov    WORD PTR [ebx-0x3a],es
  413f08:	mov    ah,0xde
  413f0a:	xchg   DWORD PTR [eiz*8-0x32a77f2],eax
  413f11:	(bad)  
  413f13:	aam    0x55
  413f15:	mov    esi,DWORD PTR [edx+0x4995cec8]
  413f1b:	and    al,0x53
  413f1d:	sub    DWORD PTR es:[edi-0x2570e3d3],0x2e33edc1
  413f28:	push   esi
  413f29:	push   edx
  413f2a:	(bad)  
  413f2b:	fcmove st,st(7)
  413f2d:	and    BYTE PTR [esi-0x44],ah
  413f30:	sbb    edx,DWORD PTR [esi+0x326a7c73]
  413f36:	sahf   
  413f37:	pushf  
  413f38:	inc    ecx
  413f39:	add    dl,BYTE PTR ds:0xf750791e
  413f3f:	or     edi,edx
  413f41:	jns    0x413f04
  413f43:	jmp    0xd6d4e6c3
  413f48:	mov    cs,WORD PTR [esi]
  413f4a:	mov    eax,0x3d64d39c
  413f4f:	repnz mov esi,0x1e85bc46
  413f55:	lods   ax,WORD PTR ds:[esi]
  413f57:	mov    esi,0x4b476f0
  413f5c:	push   cs
  413f5d:	retf   0xced4
  413f60:	cmp    DWORD PTR [ebx],edx
  413f62:	and    eax,0xef679e23
  413f67:	mov    ecx,0xcbedf58b
  413f6c:	xor    dh,BYTE PTR [esi+0x14]
  413f6f:	jmp    0x4f237c1c
  413f74:	inc    esi
  413f75:	pop    ebp
  413f76:	cmp    eax,0x25f4da8d
  413f7b:	div    DWORD PTR [edi+0x747d5f0a]
  413f81:	jmp    0xf74d5b19
  413f86:	imul   edi,DWORD PTR [edx+0x33c0e2bb],0xeefb5649
  413f90:	mov    ebp,0x6ce8724c
  413f95:	dec    ebx
  413f96:	mov    DWORD PTR [ecx+0x15],ecx
  413f99:	and    al,0x8b
  413f9b:	push   ebp
  413f9c:	or     BYTE PTR [ebx-0x2fcc07a3],cl
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	in     al,dx
  414014:	dec    edx
  414015:	push   es
  414016:	lods   al,BYTE PTR ds:[esi]
  414017:	mov    ds:0xeb7c7c74,al
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	fldenv [eax-0x24]
  414022:	inc    edi
  414023:	fisubr DWORD PTR [eax+0x61b10e65]
  414029:	mov    ebp,0x7270b08d
  41402e:	jecxz  0x413ff1
  414030:	pop    ss
  414031:	jg     0x414045
  414033:	fwait
  414034:	push   ss
  414035:	cld    
  414036:	pop    ss
  414037:	lods   al,BYTE PTR ds:[esi]
  414038:	or     al,0x9b
  41403a:	push   0x7c29e896
  41403f:	jecxz  0x413fee
  414041:	mov    WORD PTR [eax],gs
  414043:	(bad)  
  414044:	mov    ebp,DWORD PTR [edi-0x27]
  414047:	shr    DWORD PTR [edi-0x66],cl
  41404a:	jae    0x413ff3
  41404c:	arpl   WORD PTR [eax+ecx*8+0x5f687d0a],di
  414053:	(bad)  
  414054:	and    eax,0x89435de8
  414059:	pusha  
  41405a:	inc    ebx
  41405b:	retf   
  41405c:	out    dx,eax
  41405d:	add    al,0xb2
  41405f:	pop    esp
  414060:	retf   0xac18
  414063:	faddp  st(7),st
  414065:	xchg   ebp,eax
  414066:	and    eax,0x8b447496
  41406b:	and    bh,cl
  41406d:	jg     0x4140e9
  41406f:	loopne 0x414072
  414071:	mov    ebp,DWORD PTR [ecx]
  414073:	pop    es
  414074:	and    eax,0x70000086
  414079:	adc    DWORD PTR [ebx],esi
  41407b:	sub    DWORD PTR [edi],ebx
  41407d:	pop    esi
  41407e:	call   0x2956a080
  414083:	ret    0x1130
  414086:	push   ecx
  414087:	push   0x11
  414089:	sub    ax,0x38e
  41408d:	jmp    0x71a3531d
  414092:	jl     0x414103
  414094:	mov    dh,0x9
  414096:	retf   0xe8df
  414099:	jne    0x4140ba
  41409b:	jo     0x4140ed
  41409d:	push   0x2075e076
  4140a2:	ret    
  4140a3:	cmc    
  4140a4:	test   eax,0xf56dafbb
  4140a9:	std    
  4140aa:	xor    edi,esi
  4140ac:	cs pop esi
  4140ae:	dec    edx
  4140af:	or     eax,eax
  4140b1:	pop    ss
  4140b2:	scas   al,BYTE PTR es:[edi]
  4140b3:	imul   DWORD PTR [ebp+0x6ee1a70e]
  4140b9:	popf   
  4140ba:	lahf   
  4140bb:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4140bd:	xor    al,0xeb
  4140bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c0:	int    0x74
  4140c2:	imul   ebx,eax,0xe4a579ca
  4140c8:	cdq    
  4140c9:	sbb    esi,DWORD PTR [edx]
  4140cb:	(bad)  
  4140cc:	cmp    eax,0x98844c8d
  4140d1:	in     eax,dx
  4140d2:	aam    0xb1
  4140d4:	loope  0x414122
  4140d6:	pop    ss
  4140d7:	adc    cl,cl
  4140d9:	push   ecx
  4140da:	test   BYTE PTR [ebx+0x17],dl
  4140dd:	inc    ecx
  4140de:	stos   DWORD PTR es:[edi],eax
  4140df:	int3   
  4140e0:	pop    ss
  4140e1:	sub    al,0x77
  4140e3:	outs   dx,BYTE PTR ds:[esi]
  4140e4:	jmp    0x8e6bc880
  4140e9:	adc    eax,0x5217382f
  4140ee:	rcl    al,1
  4140f0:	push   cs
  4140f1:	jge    0x4140c2
  4140f3:	clc    
  4140f4:	jmp    0xa16f21e0
  4140f9:	imul   esi,DWORD PTR [ecx+0x1cdb3730],0x209be16a
  414103:	pop    esi
  414104:	scas   al,BYTE PTR es:[edi]
  414105:	or     ebx,DWORD PTR [edi-0x6e]
  414108:	aas    
  414109:	cld    
  41410a:	fimul  WORD PTR [esp+eax*8]
  41410d:	std    
  41410e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41410f:	mov    ?,WORD PTR [ecx]
  414111:	jo     0x414176
  414113:	out    dx,eax
  414114:	cmp    eax,0xef6cb2c5
  414119:	clc    
  41411a:	inc    ecx
  41411b:	fistp  QWORD PTR [ebp-0x17f3b542]
  414121:	cwde   
  414122:	pop    esp
  414123:	clc    
  414124:	pop    edi
  414125:	gs xchg ecx,eax
  414127:	out    0x98,eax
  414129:	je     0x41412f
  41412b:	icebp  
  41412c:	ss fwait
  41412e:	xchg   edi,edi
  414130:	add    BYTE PTR [ecx+eiz*8],dl
  414133:	out    0xd8,al
  414135:	inc    esi
  414136:	xor    eax,0xa4b799c9
  41413b:	fwait
  41413c:	shr    ecx,cl
  41413e:	test   DWORD PTR [ecx-0x34abf188],esp
  414144:	(bad)
  414147:	fidivr DWORD PTR [eax-0x76cd6152]
  41414d:	fs xor eax,0x41170563
  414153:	mov    ecx,0x20704376
  414158:	mov    dh,BYTE PTR [edi]
  41415a:	sbb    DWORD PTR [ebx],ebx
  41415c:	inc    ebp
  41415d:	mov    cl,0x46
  41415f:	pop    esi
  414160:	push   ecx
  414161:	ret    0x3710
  414164:	mov    al,0xf8
  414166:	mov    esp,ebx
  414168:	les    ecx,FWORD PTR [eax-0x4e310ed1]
  41416e:	outs   dx,DWORD PTR ds:[esi]
  41416f:	inc    esp
  414170:	cmc    
  414171:	sbb    DWORD PTR [ebp-0x2d],eax
  414174:	mov    ebx,0x6f56b27d
  414179:	or     eax,0x61ee0db7
  41417e:	push   ss
  41417f:	shr    eax,cl
  414181:	mov    ecx,0x8e9566bc
  414186:	mov    eax,0x17b647db
  41418b:	out    dx,al
  41418c:	test   BYTE PTR [ecx+0x48],al
  41418f:	add    eax,DWORD PTR [esi]
  414191:	dec    esp
  414192:	into   
  414193:	push   eax
  414194:	xchg   edi,eax
  414195:	das    
  414196:	xor    edx,DWORD PTR [edx-0x74db01d6]
  41419c:	scas   al,BYTE PTR es:[edi]
  41419d:	shl    cl,1
  41419f:	add    BYTE PTR [esi-0x33],0x60
  4141a3:	lods   al,BYTE PTR ds:[esi]
  4141a4:	xchg   DWORD PTR [ebx-0x6103fe4f],ebx
  4141aa:	retf   0xe8e1
  4141ad:	fld    QWORD PTR [ebx+0x7]
  4141b0:	inc    edi
  4141b1:	mov    edx,0x1fe853b
  4141b6:	je     0x414142
  4141b8:	dec    dl
  4141ba:	xor    edi,edi
  4141bc:	ds sub esi,esp
  4141bf:	fdivr  QWORD PTR [ebx]
  4141c1:	adc    DWORD PTR [ebx+0x3a],ecx
  4141c4:	addr16 dec eax
  4141c6:	push   ecx
  4141c7:	pop    ebx
  4141c8:	sahf   
  4141c9:	loop   0x414184
  4141cb:	les    edi,FWORD PTR [ebp+edi*8-0x5f8ed518]
  4141d2:	in     eax,0x1a
  4141d4:	and    DWORD PTR [ecx-0x4b92cc62],edx
  4141da:	sub    DWORD PTR [ebx-0x38d63778],eax
  4141e0:	imul   ebp,DWORD PTR [edi+0x1067b355],0x895783fc
  4141ea:	push   eax
  4141eb:	(bad)  
  4141ec:	push   ebx
  4141ed:	jl     0x4141d3
  4141ef:	ins    BYTE PTR es:[edi],dx
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	mov    edi,0x1de40e86
  4141f6:	scas   eax,DWORD PTR es:[edi]
  4141f7:	mov    ds:0xd3323e7d,eax
  4141fc:	inc    ebp
  4141fd:	adc    bl,BYTE PTR [ebx]
  4141ff:	pop    edx
  414200:	and    eax,0x98c5959b
  414205:	add    dh,BYTE PTR [ebp-0x5c91b300]
  41420b:	dec    esi
  41420c:	jmp    0x6fa066a9
  414211:	adc    DWORD PTR [ecx+esi*2+0x692f9727],eax
  414218:	or     BYTE PTR [eax],bh
  41421a:	inc    ebp
  41421b:	jl     0x414216
  41421d:	icebp  
  41421e:	inc    ebx
  41421f:	cmp    dh,0xe2
  414222:	mov    ds:0xcd175171,ax
  414228:	lock xchg DWORD PTR [ebp-0x64],eax
  41422c:	inc    eax
  41422d:	dec    esp
  41422e:	jle    0x4141b7
  414230:	pop    ecx
  414231:	call   0xea882a63
  414236:	imul   BYTE PTR [ecx]
  414238:	mov    edi,0xab47825e
  41423d:	dec    ecx
  41423e:	sahf   
  41423f:	call   0x23f657
  414244:	mov    eax,0x1208e602
  414249:	or     dl,BYTE PTR [esi]
  41424b:	jne    0x414202
  41424d:	retf   0x6ca5
  414250:	xchg   DWORD PTR [esi+0x31840197],ecx
  414256:	cli    
  414257:	retf   0x3177
  41425a:	pop    fs
  41425c:	int    0x69
  41425e:	aaa    
  41425f:	outs   dx,DWORD PTR ds:[esi]
  414260:	daa    
  414261:	xor    al,0x23
  414263:	ins    DWORD PTR es:[edi],dx
  414264:	cs xor al,0xd4
  414267:	jl     0x414245
  414269:	dec    edx
  41426a:	sti    
  41426b:	push   ecx
  41426c:	mov    edi,0x1ec00fbb
  414271:	fcomp  QWORD PTR [edx]
  414273:	cdq    
  414274:	xor    al,0xad
  414276:	xchg   ebx,eax
  414277:	fidiv  DWORD PTR [edx-0xb]
  41427a:	aaa    
  41427b:	dec    ebx
  41427c:	xchg   esp,eax
  41427d:	adc    eax,0x17ee8973
  414282:	outs   dx,DWORD PTR ds:[esi]
  414283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414284:	and    ch,BYTE PTR [edx]
  414286:	and    BYTE PTR [edx-0x645d7ad1],cl
  41428c:	mov    al,0xb3
  41428e:	int    0xc5
  414290:	or     BYTE PTR [eax],0xf1
  414293:	mov    WORD PTR [edi+0x4d],gs
  414296:	in     eax,0x95
  414298:	xchg   ebx,eax
  414299:	(bad)  
  41429a:	loope  0x4142a0
  41429c:	and    dh,BYTE PTR [edx+0x2f]
  41429f:	push   ebp
  4142a0:	inc    ebx
  4142a1:	xchg   esp,eax
  4142a2:	repz fnstsw WORD PTR [edx]
  4142a5:	pop    edi
  4142a6:	mov    edx,0x43758546
  4142ab:	ja     0x41430a
  4142ad:	int    0xea
  4142af:	ins    BYTE PTR es:[edi],dx
  4142b0:	fs mov ch,0x7d
  4142b3:	jbe    0x4142ef
  4142b5:	leave  
  4142b6:	test   eax,0xe17f890
  4142bb:	lods   al,BYTE PTR ds:[esi]
  4142bc:	test   DWORD PTR [ebx+0x22222ec2],edi
  4142c2:	inc    ebp
  4142c3:	adc    BYTE PTR [esi+0x40983291],ch
  4142c9:	sti    
  4142ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142cb:	mov    al,0xae
  4142cd:	aaa    
  4142ce:	mov    edx,0x360f54cc
  4142d3:	leave  
  4142d4:	cld    
  4142d5:	jmp    0x3a5f:0x30a8172d
  4142dc:	sub    eax,0x57bcb6cf
  4142e1:	push   edi
  4142e2:	mul    BYTE PTR [edi-0x44fcd3b3]
  4142e8:	inc    ebx
  4142e9:	fld    QWORD PTR [eax]
  4142eb:	repz sub DWORD PTR [ecx+0x6],0xfffffffb
  4142f0:	xlat   BYTE PTR ds:[ebx]
  4142f1:	(bad)  
  4142f2:	(bad)  
  4142f4:	add    DWORD PTR [ebx-0x11cc9d15],ebx
  4142fa:	int    0x30
  4142fc:	aaa    
  4142fd:	clc    
  4142fe:	or     eax,0x67b8ff5a
  414303:	dec    edi
  414304:	jp     0x4142b8
  414306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414307:	jp     0x414302
  414309:	mov    cl,0x28
  41430b:	cwde   
  41430c:	push   cs
  41430d:	pop    eax
  41430e:	add    esp,DWORD PTR [eax-0x3e8a75af]
  414314:	sbb    cl,BYTE PTR [edi+0x2968b7e7]
  41431a:	dec    edi
  41431b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41431c:	jp     0x4142f6
  41431e:	leave  
  41431f:	ins    DWORD PTR es:[edi],dx
  414320:	dec    edi
  414321:	cwde   
  414322:	mov    bh,0xbc
  414324:	push   0x9
  414326:	neg    BYTE PTR [ecx+esi*8-0x15867e9]
  41432d:	sbb    BYTE PTR [ebp-0x5c],al
  414330:	mov    esp,0x9e5651a
  414335:	mov    al,ds:0x1bd8dcaf
  41433a:	lock sub ah,ch
  41433d:	sub    DWORD PTR [esi-0x58b08e4e],esp
  414343:	jl     0x4143bf
  414345:	ins    BYTE PTR es:[edi],dx
  414346:	cmc    
  414347:	clc    
  414348:	mov    ah,0x56
  41434a:	add    eax,0x642b408
  41434f:	inc    ebx
  414350:	retf   0x3ce7
  414353:	cmp    eax,0xc11051ef
  414358:	es add eax,0x97889f3f
  41435e:	mov    eax,ds:0xdeca0c5f
  414363:	sbb    DWORD PTR [ebx+0x63bf345f],eax
  414369:	in     al,dx
  41436a:	out    dx,al
  41436b:	mov    dh,0xc6
  41436d:	mov    ds:0x8d8ea773,al
  414372:	aad    0xb8
  414374:	cmp    BYTE PTR [ecx-0x3bad983a],dh
  41437a:	fmul   DWORD PTR [ebp+esi*4+0x3b]
  41437e:	scas   eax,DWORD PTR es:[edi]
  41437f:	div    esi
  414381:	and    dh,BYTE PTR [edx]
  414383:	iret   
  414384:	pop    edi
  414385:	clc    
  414386:	push   ebp
  414387:	bound  ebp,QWORD PTR [ebx-0x41]
  41438a:	cmp    al,0xa9
  41438c:	fmul   DWORD PTR [edi]
  41438e:	inc    edx
  41438f:	lea    edi,[eax]
  414391:	cwde   
  414392:	add    ecx,DWORD PTR [esi+ebx*4]
  414395:	xchg   BYTE PTR [ebx],dh
  414397:	not    BYTE PTR [edx+0x129cf1b0]
  41439d:	out    dx,eax
  41439e:	dec    eax
  41439f:	mov    ebx,0xaf64cdd
  4143a4:	sbb    ebx,edi
  4143a6:	pop    eax
  4143a7:	les    eax,FWORD PTR [ebp-0x3523540d]
  4143ad:	add    al,0x61
  4143af:	xor    DWORD PTR [esi+0x6d],esi
  4143b2:	mov    bh,0x91
  4143b4:	mov    ecx,0xb35adc55
  4143b9:	les    ecx,FWORD PTR [eax+0x45d05ed7]
  4143bf:	push   edi
  4143c0:	fild   QWORD PTR [ecx]
  4143c2:	shl    ebp,0x2f
  4143c5:	and    al,0xda
  4143c7:	dec    edi
  4143c8:	retf   
  4143c9:	das    
  4143ca:	or     esi,edx
  4143cc:	xlat   BYTE PTR ds:[ebx]
  4143cd:	jmp    0x4143a6
  4143cf:	jmp    0xed3c:0x2bd8f39e
  4143d6:	ja     0x414388
  4143d8:	das    
  4143d9:	loope  0x414419
  4143db:	add    ch,0x4f
  4143de:	sbb    DWORD PTR [ebx],esp
  4143e0:	and    DWORD PTR [esi+0x37],esp
  4143e3:	push   eax
  4143e4:	rol    BYTE PTR [eax+0x409a038a],1
  4143ea:	xor    eax,DWORD PTR [ebp+0x5edbe883]
  4143f0:	adc    BYTE PTR [edi+eiz*8+0x58a3cf8c],cl
  4143f7:	dec    edi
  4143f8:	mov    edx,0x22b0463f
  4143fd:	adc    BYTE PTR [eax],bh
  4143ff:	ins    DWORD PTR es:[edi],dx
  414400:	pop    ss
  414401:	(bad)  
  414402:	cmp    eax,0xe21dc898
  414407:	adc    DWORD PTR [eax+0xb77de2d],esi
  41440d:	inc    eax
  41440e:	das    
  41440f:	and    bl,0xb6
  414412:	or     esp,DWORD PTR [edi-0x65]
  414415:	in     eax,dx
  414416:	mov    dh,0xfb
  414418:	and    eax,0xe83a54a2
  41441d:	push   esi
  41441e:	loope  0x4143fa
  414420:	outs   dx,BYTE PTR ds:[esi]
  414421:	adc    ebx,ebx
  414423:	aad    0xb7
  414425:	loopne 0x4143c8
  414427:	sar    BYTE PTR [ecx+0x1e],1
  41442a:	and    DWORD PTR [si],0xffffffd9
  41442e:	cld    
  41442f:	pop    ebp
  414430:	jae    0x414403
  414432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414433:	jbe    0x4143db
  414435:	or     al,0x4b
  414438:	or     eax,0xc0bad241
  41443d:	mov    ch,0xec
  41443f:	pop    ds
  414440:	ja     0x4143d7
  414442:	add    edi,DWORD PTR [esi+ebp*4-0x66c817b5]
  414449:	xor    BYTE PTR [eax+0x77],bh
  41444c:	nop
  41444d:	(bad)  
  41444e:	xchg   edx,eax
  41444f:	jge    0x4144a1
  414451:	jmp    0x414405
  414453:	imul   esp,DWORD PTR [esi],0x3b
  414456:	loop   0x4144d6
  414458:	xor    bl,bh
  41445a:	sub    ch,BYTE PTR [esi-0x42]
  41445d:	jne    0x414423
  41445f:	jnp    0x41440c
  414461:	call   0xee3:0xa206f97
  414468:	fdiv   DWORD PTR [eax-0x13]
  41446b:	mov    edi,0xdc578833
  414470:	or     BYTE PTR [edx],dh
  414472:	push   cs
  414473:	cmp    BYTE PTR [edi+edi*8+0x5cfdcaae],cl
  41447a:	jl     0x4144ec
  41447c:	shld   DWORD PTR [ecx+0x59],edx,0x63
  414481:	loop   0x41443f
  414483:	cmp    eax,0x5e985ad1
  414488:	push   esi
  414489:	mov    dh,0xe7
  41448b:	sbb    al,bl
  41448d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41448e:	mov    cl,0x83
  414490:	(bad)  
  414491:	std    
  414492:	ins    DWORD PTR es:[edi],dx
  414493:	cwde   
  414494:	loope  0x414463
  414496:	rcl    DWORD PTR [ebx-0x1a23d4d7],cl
  41449c:	push   0x62bcdd41
  4144a1:	inc    esp
  4144a2:	cli    
  4144a3:	jl     0x414478
  4144a5:	sti    
  4144a6:	arpl   di,dx
  4144a8:	xchg   ebx,eax
  4144a9:	fidiv  DWORD PTR [eax]
  4144ab:	mov    dl,0x63
  4144ad:	retf   0x5c41
  4144b0:	(bad)  
  4144b1:	nop
  4144b2:	sbb    DWORD PTR [ebp+0x4a],eax
  4144b5:	ins    BYTE PTR es:[edi],dx
  4144b6:	xchg   edx,edx
  4144b8:	xchg   edx,eax
  4144b9:	popf   
  4144ba:	mov    ds:0x445ddc2c,al
  4144bf:	clc    
  4144c0:	add    al,0xe2
  4144c2:	sub    BYTE PTR [ebx-0x69],bl
  4144c5:	and    eax,0x21127fe4
  4144ca:	into   
  4144cb:	mul    DWORD PTR [edx+edx*4]
  4144ce:	dec    BYTE PTR [ebp+ebx*2+0x16]
  4144d2:	out    0x4c,al
  4144d4:	and    DWORD PTR [ecx-0x26],ecx
  4144d7:	push   ss
  4144d8:	inc    esp
  4144d9:	shr    BYTE PTR [edx+ebp*4-0x38863b3f],cl
  4144e0:	pop    ds
  4144e1:	iret   
  4144e2:	cmp    BYTE PTR ds:0x4741f123,dl
  4144e8:	daa    
  4144e9:	call   ebp
  4144eb:	cdq    
  4144ec:	sbb    al,0x3
  4144ee:	in     eax,dx
  4144ef:	mov    ds:0x3973e62a,eax
  4144f4:	push   esi
  4144f5:	mov    edx,ebp
  4144f7:	sub    DWORD PTR [edi+0x3bd3f24],ecx
  4144fd:	lahf   
  4144fe:	and    DWORD PTR [edx],eax
  414500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414501:	cmp    ebp,DWORD PTR [edx-0x3f]
  414504:	pop    es
  414505:	je     0x4144f4
  414507:	pop    ss
  414508:	sar    DWORD PTR [ebx],0x14
  41450b:	mov    WORD PTR [esi+0x71177646],ds
  414511:	inc    edx
  414512:	and    cl,dl
  414514:	sub    ch,bl
  414516:	rcl    DWORD PTR [eax+0x7d],1
  414519:	mov    ch,0x2
  41451b:	rcr    edx,1
  41451d:	sbb    DWORD PTR [ecx-0x63],edx
  414520:	pop    esi
  414521:	cmp    DWORD PTR [edx+ebp*4-0x6f],esi
  414525:	mov    DWORD PTR [eax],eax
  414527:	sahf   
  414528:	push   ebx
  414529:	xchg   edi,eax
  41452a:	sbb    BYTE PTR gs:[ecx+0x2c49a0bf],cl
  414531:	(bad)  [edx+edi*4-0x42dfef14]
  414538:	xor    al,0xe8
  41453a:	pop    edx
  41453b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41453c:	cmp    ecx,DWORD PTR [ebp+ebx*1+0x16]
  414540:	lock sbb BYTE PTR [edi+eiz*8+0x20],ch
  414545:	xor    DWORD PTR [ecx-0x28],edi
  414548:	aad    0x5e
  41454a:	in     al,dx
  41454b:	inc    ecx
  41454c:	retw   
  41454e:	push   0xcd79390a
  414553:	stos   BYTE PTR es:[edi],al
  414554:	gs out 0xd1,eax
  414557:	add    eax,0xdce308d4
  41455c:	sar    DWORD PTR [edi+0x12],1
  41455f:	mov    ch,0x67
  414561:	shl    DWORD PTR ss:[ecx],1
  414564:	aam    0xac
  414566:	not    esp
  414568:	mov    ecx,0x4acdf3ae
  41456d:	adc    al,0xb3
  41456f:	aaa    
  414570:	pop    ss
  414571:	hlt    
  414572:	scas   eax,DWORD PTR es:[edi]
  414573:	add    eax,0x394c8f9b
  414578:	jge    0x4145f8
  41457a:	arpl   WORD PTR [edi],si
  41457c:	dec    ebx
  41457d:	iret   
  41457e:	pop    ebp
  41457f:	stos   BYTE PTR es:[edi],al
  414580:	xor    bh,BYTE PTR [esi+0x45]
  414583:	adc    BYTE PTR [ebp-0x66],ch
  414586:	xlat   BYTE PTR ds:[ebx]
  414587:	cmp    edi,DWORD PTR [ebp-0x7993259d]
  41458d:	and    esi,DWORD PTR [edx+ebx*2-0x2ae6cc83]
  414594:	iret   
  414595:	xor    DWORD PTR [eax+0x77],edx
  414598:	fcmovne st,st(4)
  41459a:	ja     0x414557
  41459c:	jmp    0xf4aab0ba
  4145a1:	add    edx,DWORD PTR [ebp-0xd]
  4145a4:	cmp    DWORD PTR [ecx],eax
  4145a6:	jns    0x4145a1
  4145a8:	or     ecx,edx
  4145aa:	or     BYTE PTR [eax+0x49493016],0x76
  4145b1:	shl    ebx,0x21
  4145b4:	jp     0x414577
  4145b6:	arpl   WORD PTR [ebx-0x2269c7d],cx
  4145bc:	sar    eax,1
  4145be:	jle    0x4145d1
  4145c0:	ja     0x4145f2
  4145c2:	in     al,dx
  4145c3:	pushf  
  4145c4:	or     al,0x19
  4145c6:	(bad)  
  4145c7:	pop    edx
  4145c8:	loop   0x41457c
  4145ca:	fs mov bh,0xa2
  4145cd:	(bad)  
  4145ce:	iret   
  4145cf:	icebp  
  4145d0:	xor    BYTE PTR [esi-0x44],al
  4145d3:	retf   
  4145d4:	dec    esi
  4145d5:	test   BYTE PTR [ebx+0x10],dh
  4145d8:	sub    eax,0xf8bff7c
  4145dd:	in     eax,0x3f
  4145df:	dec    ebx
  4145e0:	xchg   DWORD PTR [edx-0x2a],ecx
  4145e3:	clc    
  4145e4:	sub    eax,0x6d17b0a0
  4145e9:	icebp  
  4145ea:	cmc    
  4145eb:	and    al,0x42
  4145ed:	int    0x90
  4145ef:	lahf   
  4145f0:	stc    
  4145f1:	mov    esp,0xa4a93049
  4145f6:	fld    st(6)
  4145f8:	jmp    0xec90ff86
  4145fd:	mov    DWORD PTR [edi+0x70fef178],esp
  414603:	leave  
  414604:	adc    DWORD PTR [edx+0x4d],0xc1f561
  41460b:	mov    al,0xe
  41460d:	pop    DWORD PTR [ecx+0x53]
  414610:	sar    dh,cl
  414612:	xchg   esp,eax
  414613:	pop    esp
  414614:	pop    ebp
  414615:	mov    ch,BYTE PTR [ebx-0x1f]
  414618:	std    
  414619:	adc    eax,0xcc0303c5
  41461e:	adc    BYTE PTR [ebp+0x762cc27b],al
  414624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414625:	or     eax,0x93b2b473
  41462a:	cdq    
  41462b:	dec    ebx
  41462c:	fwait
  41462d:	jecxz  0x41467b
  41462f:	add    BYTE PTR [edx+0x66a3bb07],dh
  414635:	rcl    BYTE PTR [ecx+0x2d96380f],0x8f
  41463c:	das    
  41463d:	lock rcl DWORD PTR [eax],0x96
  414641:	jp     0x4146bc
  414643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414644:	ja     0x414618
  414646:	fld    DWORD PTR [ecx-0xe]
  414649:	xor    BYTE PTR [ebx-0x449e5c14],ah
  41464f:	mov    BYTE PTR [edx],bl
  414651:	push   ss
  414652:	pop    es
  414653:	pop    esp
  414654:	jmp    0x54389ade
  414659:	jle    0x4145e6
  41465b:	xor    esp,DWORD PTR ds:0x815ff9d0
  414661:	pushf  
  414662:	sub    dh,BYTE PTR [ecx]
  414664:	sub    ebx,ebp
  414666:	and    BYTE PTR [ebx+0x4e2982c8],ah
  41466c:	or     ah,BYTE PTR [ecx]
  41466e:	pop    ebx
  41466f:	leave  
  414670:	into   
  414671:	adc    bl,BYTE PTR fs:[ebp+0x7a3ae8aa]
  414678:	xor    dh,dh
  41467a:	push   esp
  41467b:	mov    esi,0xf93c4b6e
  414680:	sbb    ch,BYTE PTR [eax-0x34d598b2]
  414686:	cmp    BYTE PTR [ebp-0x3],al
  414689:	lds    ebp,FWORD PTR [ebp+eiz*2-0x3a827239]
  414690:	stos   BYTE PTR es:[edi],al
  414691:	fild   WORD PTR ds:0x1c58f948
  414697:	jge    0x41461e
  414699:	dec    edi
  41469a:	jmp    0x414695
  41469c:	or     bl,ah
  41469e:	xchg   DWORD PTR [ebx-0x3a],ecx
  4146a1:	aad    0x7f
  4146a3:	inc    eax
  4146a4:	push   ecx
  4146a5:	mov    dh,0x9c
  4146a7:	test   eax,0x4ed3162d
  4146ac:	pusha  
  4146ad:	cmp    eax,0x960af2b6
  4146b2:	lea    ecx,[eax]
  4146b4:	popa   
  4146b5:	dec    eax
  4146b6:	xchg   ebx,eax
  4146b7:	pushf  
  4146b8:	adc    cl,BYTE PTR ds:[esi-0x605a2c62]
  4146bf:	call   FWORD PTR [eax]
  4146c1:	mov    edi,DWORD PTR [eax-0x7]
  4146c4:	inc    ecx
  4146c5:	call   FWORD PTR [esi]
  4146c7:	mov    ds:0xf60c492e,al
  4146cc:	idiv   DWORD PTR [ecx+0x18]
  4146cf:	lahf   
  4146d0:	sbb    al,0xe1
  4146d2:	mov    eax,ds:0xc2824d9f
  4146d7:	retf   0x60b8
  4146da:	ss sbb esp,esp
  4146dd:	and    dh,dh
  4146df:	popf   
  4146e0:	adc    edi,edx
  4146e2:	dec    esi
  4146e3:	pop    esp
  4146e4:	add    al,0x69
  4146e6:	mov    WORD PTR [edx-0x62847595],ds
  4146ec:	ret    0xecec
  4146ef:	test   ebx,esp
  4146f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f2:	adc    esi,DWORD PTR ss:[eax]
  4146f5:	push   ecx
  4146f6:	outs   dx,BYTE PTR ds:[esi]
  4146f7:	js     0x4146a6
  4146f9:	mov    esp,0xd01aac15
  4146fe:	mov    ?,ebx
  414700:	nop
  414701:	cmp    al,BYTE PTR [ebp-0x434e7c75]
  414707:	pand   mm4,QWORD PTR [ebx+0x11e817a]
  41470e:	call   0xa879:0xf1661a07
  414715:	push   ebx
  414716:	dec    esi
  414717:	sbb    BYTE PTR [eax+edi*4-0x74],cl
  41471b:	pop    esi
  41471c:	mov    ecx,0x1589796f
  414721:	das    
  414722:	(bad)
  414725:	retf   
  414726:	adc    ch,BYTE PTR [esi-0x39]
  414729:	pop    ebp
  41472a:	pop    esp
  41472b:	pop    esp
  41472c:	cmp    edi,DWORD PTR ds:0x4d71cffa
  414732:	sbb    edi,0xc9f3c59d
  414738:	adc    bh,bh
  41473a:	aaa    
  41473b:	push   ebp
  41473c:	lds    esp,FWORD PTR [eax+0x2f]
  41473f:	test   DWORD PTR [ebp+0x37],0x3ed064ac
  414746:	inc    ebx
  414747:	test   al,0x3d
  414749:	xchg   esp,eax
  41474a:	in     eax,0x21
  41474c:	jl     0x414797
  41474e:	inc    ebp
  41474f:	mov    ebx,0x4b47d214
  414754:	lea    ecx,[eax-0xe]
  414757:	lds    ebp,FWORD PTR [ecx]
  414759:	cld    
  41475a:	or     al,0xd0
  41475c:	es inc eax
  41475e:	mov    esp,0x43f36185
  414763:	lahf   
  414764:	jae    0x4147c4
  414766:	add    DWORD PTR [edx],0x258c12d1
  41476c:	adc    esp,ebx
  41476e:	jne    0x41471a
  414770:	xor    eax,0x7f2f3de1
  414775:	es stos DWORD PTR es:[edi],eax
  414777:	mov    bh,0x75
  414779:	inc    edx
  41477a:	jns    0x414748
  41477c:	and    eax,0xca1629b2
  414781:	jne    0x41471d
  414783:	(bad)  
  414785:	inc    ebx
  414786:	jp     0x4147f7
  414788:	adc    esi,DWORD PTR [ebx+0x2ec5cdf8]
  41478e:	arpl   WORD PTR [eax+0x6e],dx
  414791:	dec    eax
  414792:	bound  esp,QWORD PTR [ecx]
  414794:	mov    ds:0x3a94cb35,eax
  414799:	in     al,dx
  41479a:	daa    
  41479b:	cmc    
  41479c:	jmp    0x41480e
  41479e:	mov    WORD PTR [edi-0x11ed8191],?
  4147a4:	scas   al,BYTE PTR es:[edi]
  4147a5:	repz sti 
  4147a7:	jmp    0x99e98c4
  4147ac:	adc    al,0xc2
  4147ae:	sbb    al,0x3d
  4147b0:	jge    0x4147c0
  4147b2:	xchg   esp,eax
  4147b3:	std    
  4147b4:	sub    BYTE PTR [edi+0x49],al
  4147b7:	dec    ebp
  4147b8:	mov    al,0xea
  4147ba:	sahf   
  4147bb:	adc    eax,0x1063114e
  4147c0:	pop    edi
  4147c1:	pop    esp
  4147c2:	inc    esi
  4147c3:	mov    edi,0x1476a8f5
  4147c8:	xchg   edi,eax
  4147c9:	xchg   ebp,eax
  4147ca:	sar    DWORD PTR [edx],0xae
  4147cd:	mov    bh,0x6
  4147cf:	imul   ebx,DWORD PTR [esi-0x3ea69493],0xf1faae3d
  4147d9:	xlat   BYTE PTR ds:[ebx]
  4147da:	jo     0x414859
  4147dc:	in     eax,0x47
  4147de:	and    eax,0x4e8811e8
  4147e3:	out    0x17,eax
  4147e5:	dec    eax
  4147e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e7:	outs   dx,BYTE PTR ds:[esi]
  4147e8:	jge    0x414860
  4147ea:	sbb    al,0xce
  4147ec:	(bad)  
  4147ed:	pop    ds
  4147ee:	cmp    al,BYTE PTR [esi+0x25]
  4147f1:	ror    BYTE PTR [esi],1
  4147f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147f4:	(bad)  
  4147f5:	out    dx,al
  4147f6:	imul   ebx,DWORD PTR [eax],0xe255de32
  4147fc:	add    ah,BYTE PTR [ecx-0x64]
  4147ff:	push   esi
  414800:	ins    BYTE PTR es:[edi],dx
  414801:	mul    BYTE PTR [ecx+eiz*1]
  414804:	stos   DWORD PTR es:[edi],eax
  414805:	mov    al,ds:0xbe337666
  41480a:	ins    BYTE PTR es:[edi],dx
  41480b:	stc    
  41480c:	mov    ?,ebp
  41480e:	mov    esp,0x8c89b3f0
  414813:	xchg   edi,ebp
  414815:	fistp  QWORD PTR [ebp-0x4eec35cb]
  41481b:	cli    
  41481c:	sbb    al,0xbe
  41481e:	mov    eax,ds:0x1de7033f
  414823:	jge    0x4147f1
  414825:	mov    eax,edi
  414827:	mov    ss,WORD PTR [esi+0x70]
  41482a:	inc    esp
  41482b:	push   esp
  41482c:	pop    ecx
  41482d:	cmp    dl,BYTE PTR [edx]
  41482f:	les    esp,FWORD PTR [ebx]
  414831:	lds    esi,FWORD PTR [edx+0x7d]
  414834:	sbb    ebx,DWORD PTR [eax-0x22]
  414837:	add    BYTE PTR [ecx+0x7eb1bc8b],bh
  41483d:	pop    edi
  41483e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41483f:	dec    edx
  414840:	ret    0x9fa3
  414843:	addr16 and eax,0x1af63ab7
  41484a:	(bad)  
  41484b:	pusha  
  41484c:	mov    esp,0x585a2fb7
  414851:	mov    dl,0x12
  414853:	in     eax,dx
  414854:	in     al,dx
  414855:	fwait
  414856:	(bad)  
  414857:	test   ch,0x3b
  41485a:	sbb    dh,BYTE PTR [eax-0x6af9563b]
  414860:	jns    0x4148db
  414862:	ret    
  414863:	cmp    DWORD PTR [edi],edx
  414865:	mov    WORD PTR [eax],fs
  414867:	loope  0x4148b5
  414869:	enter  0x180d,0xe9
  41486d:	mov    dh,0x7d
  41486f:	jbe    0x41487b
  414871:	push   es
  414872:	lods   al,BYTE PTR ds:[esi]
  414873:	xchg   edx,eax
  414874:	jp     0x414809
  414876:	pop    ebx
  414877:	dec    edx
  414878:	div    al
  41487a:	mov    ebx,0x4759d099
  41487f:	fcomi  st,st(0)
  414881:	leave  
  414882:	push   edx
  414883:	js     0x414841
  414885:	ss lock pop eax
  414888:	push   ecx
  414889:	mov    ch,dh
  41488b:	lods   eax,DWORD PTR ds:[esi]
  41488c:	or     esi,DWORD PTR [esi+0x36]
  41488f:	jl     0x414907
  414891:	in     eax,0xee
  414893:	push   esp
  414894:	lods   al,BYTE PTR ds:[esi]
  414895:	ficomp WORD PTR [esp+esi*4]
  414898:	dec    edx
  414899:	fcomip st,st(1)
  41489b:	(bad)  
  41489c:	ror    DWORD PTR [esp+eax*8+0x5abfa8c4],0xd6
  4148a4:	fsub   QWORD PTR [edx+0x30]
  4148a7:	hlt    
  4148a8:	xor    dl,bl
  4148aa:	mov    di,0x607e
  4148ae:	dec    ebp
  4148af:	jns    0x414840
  4148b1:	sahf   
  4148b2:	jae    0x4148e8
  4148b4:	(bad)  
  4148b6:	nop
  4148b7:	stos   BYTE PTR es:[edi],al
  4148b8:	add    BYTE PTR [edi],dh
  4148ba:	fscale 
  4148bc:	pop    ss
  4148bd:	out    dx,al
  4148be:	xchg   ebp,eax
  4148bf:	sbb    bp,WORD PTR [edx-0x4f03b295]
  4148c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c7:	xchg   ebx,eax
  4148c8:	popf   
  4148c9:	sub    DWORD PTR [edx+0x3],ebp
  4148cc:	out    0x6c,eax
  4148ce:	push   esi
  4148cf:	xlat   BYTE PTR ds:[ebx]
  4148d0:	jl     0x414908
  4148d2:	dec    edx
  4148d3:	or     BYTE PTR [edx-0x504b3469],bh
  4148d9:	push   cs
  4148da:	inc    edi
  4148db:	scas   eax,DWORD PTR es:[edi]
  4148dc:	mov    ds:0xb9c8e2e1,al
  4148e1:	iret   
  4148e2:	pop    edi
  4148e3:	jo     0x4148bf
  4148e5:	mov    edi,0x311ec119
  4148ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148eb:	xor    al,0x69
  4148ed:	or     BYTE PTR [ebx+0x626bf1e2],bl
  4148f3:	and    edi,DWORD PTR [esi+0x5e]
  4148f6:	xchg   esi,eax
  4148f7:	fwait
  4148f8:	cmp    bh,BYTE PTR [ebx]
  4148fa:	(bad)  
  4148fb:	enter  0x1101,0xa3
  4148ff:	(bad)  
  414900:	mov    edi,0xcabb94e5
  414905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414906:	icebp  
  414907:	leave  
  414908:	rcr    BYTE PTR ds:0xb53748d5,1
  41490e:	test   DWORD PTR [ecx-0x41],ebx
  414911:	ss aas 
  414913:	sub    al,0x73
  414915:	fwait
  414916:	aaa    
  414917:	stc    
  414918:	test   BYTE PTR [ecx-0x44965939],dh
  41491e:	repz jo 0x414927
  414921:	outs   dx,DWORD PTR ds:[esi]
  414922:	push   ecx
  414923:	aaa    
  414924:	cs mov al,0x26
  414927:	sti    
  414928:	rcl    edx,1
  41492a:	not    BYTE PTR [eax-0x3154950e]
  414930:	and    al,0x7a
  414932:	dec    esi
  414933:	mov    cl,0xe0
  414935:	jnp    0x41495d
  414937:	jg     0x4148b9
  414939:	or     esi,edx
  41493b:	fcmovb st,st(4)
  41493d:	push   ebx
  41493e:	nop
  41493f:	mov    dl,BYTE PTR [ecx-0x6c6fea33]
  414945:	repz jmp 0x4056:0x1285376a
  41494d:	and    BYTE PTR [eax-0x789afbe1],bl
  414953:	push   esp
  414954:	jnp    0x4149bf
  414956:	lock push edx
  414958:	mov    ch,ch
  41495a:	test   eax,0x21528736
  41495f:	jecxz  0x414951
  414961:	loopne 0x4149c3
  414963:	fbstp  TBYTE PTR [ecx+0x40]
  414966:	mov    dl,0x4b
  414968:	mov    ds:0x79b49153,eax
  41496d:	mov    DWORD PTR [esi],esi
  41496f:	cs sti 
  414971:	inc    esp
  414972:	mov    cl,0x22
  414974:	cmp    eax,0xb577482f
  414979:	xchg   edx,eax
  41497a:	mov    DWORD PTR [ecx],ecx
  41497c:	in     eax,dx
  41497d:	push   ds
  41497e:	test   BYTE PTR [ebx+edx*2],dl
  414981:	jg     0x4149b4
  414983:	(bad)  
  414984:	mov    ecx,0x16ab8f21
  414989:	psrlq  mm3,QWORD PTR [ecx-0x248f4a5d]
  414990:	jnp    0x414995
  414992:	aam    0xc1
  414994:	jl     0x41492e
  414996:	out    0x1b,eax
  414998:	sub    DWORD PTR [esi],edi
  41499a:	jnp    0x414929
  41499c:	jmp    0x3131:0xcce85b57
  4149a3:	neg    ecx
  4149a5:	sbb    ebx,DWORD PTR [eax+0x13725f50]
  4149ab:	stos   DWORD PTR es:[edi],eax
  4149ac:	xchg   DWORD PTR [eax-0x17a4e577],esi
  4149b2:	stc    
  4149b3:	ret    0x4883
  4149b6:	test   BYTE PTR [edx+0x11],ah
  4149b9:	jmp    DWORD PTR [edi-0x3d]
  4149bc:	jg     0x4149d6
  4149be:	dec    edx
  4149bf:	ins    DWORD PTR es:[edi],dx
  4149c0:	sub    DWORD PTR ds:0xa109279c,0x1653065b
  4149ca:	mov    esi,0x5fbdd0b5
  4149cf:	sbb    ch,dl
  4149d1:	push   edx
  4149d2:	lock je 0x4149fe
  4149d5:	mov    eax,ds:0x15cbf99b
  4149da:	xchg   edi,eax
  4149db:	push   cs
  4149dc:	int3   
  4149dd:	xchg   ecx,eax
  4149de:	add    esi,DWORD PTR [ecx+0x60]
  4149e1:	ja     0x4149a5
  4149e3:	loope  0x4149c4
  4149e5:	mov    ah,0x11
  4149e7:	lahf   
  4149e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149e9:	xchg   edx,eax
  4149ea:	dec    esi
  4149eb:	call   0x7eb:0x81ec7415
  4149f2:	mov    DWORD PTR ds:0x8328bab5,edi
  4149f8:	into   
  4149f9:	in     al,dx
  4149fa:	xor    eax,0xfcba6f10
  4149ff:	sub    BYTE PTR [edi+0x66],dh
  414a02:	xor    dh,al
  414a04:	sbb    esp,esi
  414a06:	pushf  
  414a07:	push   edx
  414a08:	jp     0x414a08
  414a0a:	retf   
  414a0b:	push   eax
  414a0c:	test   WORD PTR [eax],sp
  414a0f:	xchg   edi,eax
  414a10:	js     0x414a36
  414a12:	imul   edx,ecx,0x628b3882
  414a18:	pushf  
  414a19:	int    0xc0
  414a1b:	or     ah,BYTE PTR [edi]
  414a1d:	mov    al,0xe0
  414a1f:	push   ds
  414a20:	test   BYTE PTR [ecx+0x115c592d],0x64
  414a27:	mov    eax,0xb5e7356b
  414a2c:	pop    ebx
  414a2d:	add    BYTE PTR [esi-0x1f67fcd2],0x26
  414a34:	mov    gs,WORD PTR [eax]
  414a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a37:	enter  0x931f,0x1
  414a3b:	outs   dx,BYTE PTR ds:[esi]
  414a3c:	pusha  
  414a3d:	imul   esi,DWORD PTR [ebp-0x5d694b84],0x564436ec
  414a47:	pop    edi
  414a48:	rcr    DWORD PTR [eax],1
  414a4a:	xor    al,0x4e
  414a4c:	push   ecx
  414a4d:	mov    edi,DWORD PTR [edx-0x3c2784c]
  414a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a54:	out    0x67,eax
  414a56:	mov    cl,0x4e
  414a58:	ins    DWORD PTR es:[edi],dx
  414a59:	pop    esp
  414a5a:	mov    bl,0x8d
  414a5c:	inc    ebx
  414a5d:	or     DWORD PTR [ebp+0x1b817aa0],esp
  414a63:	xchg   ecx,eax
  414a64:	inc    esp
  414a65:	push   eax
  414a66:	iret   
  414a67:	inc    ecx
  414a68:	pop    ecx
  414a69:	mov    esi,0xb66f91ef
  414a6e:	jns    0x414a3c
  414a70:	pop    ebx
  414a71:	xor    edx,esi
  414a73:	fwait
  414a74:	mov    ah,al
  414a76:	push   ds
  414a77:	mov    dh,0x90
  414a79:	mov    ebp,0x229f510f
  414a7e:	pop    ebx
  414a7f:	xlat   BYTE PTR ds:[ebx]
  414a80:	mov    edx,DWORD PTR ds:0x7d519190
  414a86:	and    DWORD PTR [edx],edi
  414a88:	adc    DWORD PTR [esi-0x60b396fe],esp
  414a8e:	jp     0x414a7e
  414a90:	les    esi,FWORD PTR [ebp+ebp*1+0x19]
  414a94:	inc    edi
  414a95:	loopne 0x414ad0
  414a97:	cli    
  414a98:	out    0x6d,al
  414a9a:	sar    BYTE PTR [ebp-0x13e53f71],0x89
  414aa1:	xchg   esi,eax
  414aa2:	outs   dx,DWORD PTR ds:[esi]
  414aa3:	xchg   esp,eax
  414aa4:	dec    edi
  414aa5:	sub    edi,esi
  414aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa8:	(bad)  
  414aa9:	rcl    ebx,1
  414aab:	or     ah,0x53
  414aae:	or     eax,0x685acb76
  414ab3:	fadd   DWORD PTR [esi-0x9]
  414ab6:	jns    0x414ae4
  414ab8:	shl    DWORD PTR [esi-0x4],cl
  414abb:	mov    edi,0x8c902591
  414ac0:	fistp  QWORD PTR [eax+0x7dc0e320]
  414ac6:	pop    ebp
  414ac7:	ror    DWORD PTR ss:[ecx],cl
  414aca:	push   ecx
  414acb:	jmp    0x57b2:0x1ac31a5e
  414ad2:	cmp    DWORD PTR [edi-0x228f03d4],ecx
  414ad8:	(bad)  
  414ad9:	(bad)  
  414ada:	outs   dx,BYTE PTR ds:[esi]
  414adb:	mov    cl,0x8b
  414add:	jp     0x414b2a
  414adf:	cld    
  414ae0:	fiadd  DWORD PTR [edx-0x501320e9]
  414ae6:	cmp    al,0x7c
  414ae8:	repnz and eax,DWORD PTR [esi-0xe]
  414aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aed:	xor    al,0x87
  414aef:	in     eax,0x96
  414af1:	jge    0x414b49
  414af3:	pop    es
  414af4:	enter  0x1f36,0x12
  414af8:	push   ss
  414af9:	loope  0x414ae6
  414afb:	(bad)  
  414afc:	in     eax,dx
  414afd:	add    dl,bl
  414aff:	fld    QWORD PTR [ecx+0x8]
  414b02:	pop    esi
  414b03:	sbb    eax,0x1566a476
  414b08:	ins    BYTE PTR es:[edi],dx
  414b09:	out    dx,al
  414b0a:	push   0x84547c2e
  414b0f:	dec    ebp
  414b10:	loope  0x414b2c
  414b12:	push   cs
  414b13:	shl    DWORD PTR [ebx+0x3c],cl
  414b16:	adc    eax,esi
  414b18:	lock jge 0x414b90
  414b1b:	test   al,0xd7
  414b1d:	call   0x33c9dee8
  414b22:	(bad)  
  414b23:	jl     0x414af8
  414b25:	pop    ebp
  414b26:	and    al,0xa7
  414b29:	std    
  414b2a:	fstp   QWORD PTR ds:0x91297e03
  414b30:	out    0x9e,al
  414b32:	mov    al,0x9b
  414b34:	in     eax,dx
  414b35:	inc    esi
  414b36:	adc    dl,BYTE PTR [ebx-0x76]
  414b39:	aam    0x53
  414b3b:	dec    esp
  414b3c:	(bad)  
  414b3d:	nop
  414b3e:	dec    edx
  414b3f:	(bad)  
  414b40:	lods   eax,DWORD PTR ds:[esi]
  414b41:	adc    edi,ebx
  414b43:	add    dh,BYTE PTR [ebp+edi*1-0x5e037314]
  414b4a:	and    ebx,esi
  414b4c:	push   ebp
  414b4d:	in     eax,dx
  414b4e:	clc    
  414b4f:	mov    BYTE PTR ss:[ebx+0x39],dl
  414b53:	out    0xe2,al
  414b55:	std    
  414b56:	sub    al,0x17
  414b58:	xchg   edx,eax
  414b59:	loopne 0x414bbc
  414b5b:	mov    cl,0x15
  414b5d:	push   ebx
  414b5e:	dec    edi
  414b5f:	stos   BYTE PTR es:[edi],al
  414b60:	je     0x414b0c
  414b62:	rcl    BYTE PTR [ecx+0x2b],cl
  414b65:	inc    esi
  414b66:	xchg   ebx,eax
  414b67:	cld    
  414b68:	shr    BYTE PTR [edx-0x53],cl
  414b6b:	in     al,dx
  414b6c:	sbb    bh,BYTE PTR [edi+0x7d222972]
  414b72:	gs ss in eax,dx
  414b75:	dec    ebx
  414b76:	sahf   
  414b77:	pusha  
  414b78:	sbb    ah,al
  414b7a:	sub    ebx,eax
  414b7c:	xchg   esi,eax
  414b7d:	hlt    
  414b7e:	das    
  414b7f:	lds    esp,FWORD PTR [edi+0x4bc59a19]
  414b85:	in     eax,0x89
  414b87:	mov    ah,0x7
  414b89:	mov    DWORD PTR [esi-0x2319a4d8],eax
  414b8f:	popf   
  414b90:	jp     0x414c0c
  414b92:	xchg   edi,eax
  414b93:	call   0x95b825c8
  414b98:	dec    ecx
  414b99:	or     ebx,0x7
  414b9c:	outs   dx,DWORD PTR ds:[esi]
  414b9d:	cmp    al,0x66
  414b9f:	jo     0x414c11
  414ba1:	xchg   BYTE PTR [edi],bh
  414ba3:	push   edi
  414ba4:	sub    cl,BYTE PTR [edi+0x198c219b]
  414baa:	push   ss
  414bab:	and    DWORD PTR [edi+0x44],esi
  414bae:	jp     0x414b6f
  414bb0:	sub    eax,0x5cff81f1
  414bb5:	retf   
  414bb6:	mov    ds:0x3ce0f7fe,al
  414bbb:	call   0x9141:0xe06fc5b7
  414bc2:	leave  
  414bc3:	sahf   
  414bc4:	dec    edx
  414bc5:	mov    eax,ds:0x1bdd7562
  414bca:	(bad)  
  414bcb:	jecxz  0x414bfe
  414bcd:	stc    
  414bce:	call   0xe371:0x77d3
  414bd4:	test   DWORD PTR [ebp+eiz*1-0x25793593],ebx
  414bdb:	adc    eax,0x9d468d53
  414be0:	xor    DWORD PTR [ebx+0x4d],ebx
  414be3:	adc    al,0x3a
  414be5:	or     BYTE PTR [eax],0x2b
  414be8:	push   ebx
  414be9:	aad    0x2c
  414beb:	mov    ch,0x32
  414bed:	ins    DWORD PTR es:[edi],dx
  414bee:	lods   al,BYTE PTR ds:[esi]
  414bef:	mov    cl,0xb0
  414bf1:	jp     0x414b80
  414bf3:	(bad)  
  414bf7:	jbe    0x414b95
  414bf9:	lods   al,BYTE PTR ds:[esi]
  414bfa:	dec    edx
  414bfb:	call   0x4f2a56aa
  414c00:	xor    edi,DWORD PTR [ebp-0x64]
  414c03:	push   ecx
  414c04:	mov    ebx,0x864e7d71
  414c09:	in     al,dx
  414c0a:	ror    DWORD PTR [eax+0x29b25a5a],0x7c
  414c11:	call   0x212a:0x63dbe037
  414c18:	lods   eax,DWORD PTR ds:[esi]
  414c19:	rcr    ebx,0x67
  414c1c:	jb     0x414bbe
  414c1e:	int    0x1a
  414c20:	stc    
  414c21:	and    al,0x9a
  414c23:	lods   eax,DWORD PTR ds:[esi]
  414c24:	xchg   edi,eax
  414c25:	mov    esi,0xe11ca09e
  414c2a:	nop
  414c2b:	adc    ah,BYTE PTR [eax+eax*8+0x9]
  414c2f:	clc    
  414c30:	gs jne 0x414c80
  414c33:	lods   eax,DWORD PTR ds:[esi]
  414c34:	ss es cdq 
  414c37:	xchg   esp,eax
  414c38:	dec    esi
  414c39:	mov    esi,0xc0088b9f
  414c3e:	xchg   esi,eax
  414c3f:	add    eax,0xbdc6acc6
  414c44:	call   0xb7856162
  414c49:	jge    0x414ca9
  414c4b:	mov    ebx,0xad60662f
  414c50:	mov    ds:0x146a8d46,eax
  414c55:	mov    ecx,0x3d163402
  414c5a:	sbb    eax,0x54741459
  414c5f:	lea    eax,[edi-0x3f]
  414c62:	lds    edi,FWORD PTR [di]
  414c65:	(bad)  
  414c66:	pop    ss
  414c67:	cmp    ebx,DWORD PTR [edi+0x2a]
  414c6a:	jno    0x414c2a
  414c6c:	aaa    
  414c6d:	and    DWORD PTR [edi],0xffffff88
  414c70:	mov    WORD PTR [edi-0x30],fs
  414c73:	sbb    DWORD PTR [edx+0x566a2bb],ecx
  414c79:	mov    ah,0x83
  414c7b:	push   es
  414c7c:	xchg   DWORD PTR [esi+eiz*8-0x478d7de1],ebp
  414c83:	jle    0x414ce9
  414c85:	hlt    
  414c86:	outs   dx,DWORD PTR ds:[esi]
  414c87:	xor    eax,DWORD PTR [eax-0x77c233e0]
  414c8d:	or     BYTE PTR [ebx-0x3d],al
  414c90:	retf   
  414c91:	jne    0x414caf
  414c93:	xor    DWORD PTR [ebx-0x1d933a37],eax
  414c99:	lods   al,BYTE PTR ds:[esi]
  414c9a:	mov    cl,0x96
  414c9c:	sar    DWORD PTR [ebx-0x50],cl
  414c9f:	in     al,dx
  414ca0:	dec    eax
  414ca1:	pop    ss
  414ca2:	xchg   BYTE PTR [ecx-0x282594d1],ch
  414ca8:	inc    ebp
  414ca9:	hlt    
  414caa:	or     BYTE PTR [edx+esi*8],cl
  414cad:	xor    al,0xe
  414caf:	enter  0xc113,0xe4
  414cb3:	lds    edi,FWORD PTR [ebx+0x5a]
  414cb6:	test   DWORD PTR [edi-0x51e5a6d9],edi
  414cbc:	ins    BYTE PTR es:[edi],dx
  414cbd:	outs   dx,DWORD PTR ds:[esi]
  414cbe:	cli    
  414cbf:	jl     0x414c45
  414cc1:	adc    bh,BYTE PTR [ecx+0x68839bdf]
  414cc7:	pop    ds
  414cc8:	fdivrp st(7),st
  414cca:	mov    ebx,0x810fb60c
  414ccf:	jmp    0x9aa1:0x6153e821
  414cd6:	in     eax,dx
  414cd7:	in     al,0xe6
  414cd9:	jg     0x414c92
  414cdb:	mov    edx,0x2ce80def
  414ce0:	adc    al,0x9e
  414ce2:	fnstcw WORD PTR [ecx-0x12]
  414ce5:	adc    edi,DWORD PTR [esi+0x19]
  414ce8:	or     ah,ah
  414cea:	lahf   
  414ceb:	into   
  414cec:	sbb    esp,esp
  414cee:	fild   QWORD PTR [esi]
  414cf0:	add    eax,0x57ad6c6
  414cf5:	jmp    0x414cbd
  414cf7:	sub    cl,BYTE PTR [edi*2-0x5db23b17]
  414cfe:	add    cl,BYTE PTR [ebp*8+0xa62fd48]
  414d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d06:	pop    edi
  414d07:	or     dl,BYTE PTR [ecx]
  414d09:	fcom   DWORD PTR [edi+0x4b91bdb9]
  414d0f:	pop    eax
  414d10:	pop    ss
  414d11:	out    dx,eax
  414d12:	inc    ebp
  414d13:	add    al,0xd0
  414d15:	add    DWORD PTR [bp+si-0x5f],ebp
  414d19:	arpl   WORD PTR [ebx+edx*4],si
  414d1c:	inc    ebx
  414d1d:	jmp    0x771f:0xe4fbe42f
  414d24:	sub    dh,BYTE PTR [esi]
  414d26:	add    al,0xd6
  414d28:	fsub   DWORD PTR [ebx]
  414d2a:	jecxz  0x414ccf
  414d2c:	ror    eax,0x4c
  414d2f:	test   DWORD PTR [esi+ebp*4-0x5551feaa],0x19deea00
  414d3a:	adc    eax,0x9ae42caa
  414d3f:	popf   
  414d40:	xchg   esi,eax
  414d41:	and    ch,bl
  414d43:	xchg   ebx,edi
  414d45:	sub    eax,0x7861a9af
  414d4a:	or     al,0xa2
  414d4c:	push   0xffffffad
  414d4e:	mov    ebx,0xa70eb959
  414d53:	mov    bl,0xf6
  414d55:	ja     0x414d12
  414d57:	(bad)  
  414d58:	(bad)  
  414d59:	sbb    DWORD PTR [eax-0x7cebfbb],edi
  414d5f:	lds    ecx,FWORD PTR [edx]
  414d61:	ret    0xb126
  414d64:	test   DWORD PTR [edi-0x19],0x1dd22424
  414d6b:	arpl   si,dx
  414d6d:	jp     0x414dc1
  414d6f:	lahf   
  414d70:	xor    ebp,DWORD PTR [edx+0x37]
  414d73:	xor    al,0x74
  414d75:	mov    esp,0xb64e99aa
  414d7a:	mov    ebx,0x2da71720
  414d7f:	mov    eax,0x5c4b6c46
  414d84:	cmp    eax,0x5bb38ea8
  414d89:	jne    0x414da9
  414d8b:	add    eax,0xd19cd3e
  414d90:	jae    0x414de3
  414d92:	add    DWORD PTR [esi-0x59dca25],eax
  414d98:	mov    al,ds:0x3f3abb44
  414d9d:	jl     0x414da4
  414d9f:	or     al,0x27
  414da1:	sub    eax,esp
  414da3:	jp     0x414d87
  414da5:	jnp    0x414df2
  414da7:	mov    dl,bl
  414da9:	jae    0x414d53
  414dab:	stos   BYTE PTR es:[edi],al
  414dac:	popf   
  414dad:	inc    ebp
  414dae:	mov    DWORD PTR [edi+esi*1+0x22195e53],ebp
  414db5:	xchg   ebx,eax
  414db6:	adc    al,0xe4
  414db8:	cwde   
  414db9:	(bad)  
  414dba:	daa    
  414dbb:	or     ch,BYTE PTR [edx-0x4]
  414dbe:	adc    bl,BYTE PTR [ecx+ebp*2]
  414dc1:	or     DWORD PTR [edi-0x6b],eax
  414dc4:	dec    ebp
  414dc5:	sub    al,BYTE PTR [edx+0x3d5b96e0]
  414dcb:	sub    eax,0x37b27d1
  414dd0:	mov    esi,0x685a07cf
  414dd5:	out    0x46,eax
  414dd7:	xor    eax,0x2a6e984e
  414ddc:	push   ecx
  414ddd:	setle  BYTE PTR [edx+0x242209cf]
  414de4:	icebp  
  414de5:	and    BYTE PTR [edi+0x1cde1e22],ch
  414deb:	push   edx
  414dec:	arpl   bx,si
  414dee:	jo     0x414e6e
  414df0:	std    
  414df1:	jmp    0x65d5:0x698ac2f1
  414df8:	dec    esi
  414df9:	pusha  
  414dfa:	push   esi
  414dfb:	int3   
  414dfc:	ret    
  414dfd:	or     bh,dh
  414dff:	mov    edx,0xeb323824
  414e04:	xor    al,0x55
  414e06:	adc    bh,BYTE PTR ds:0x98f293d0
  414e0c:	xor    edx,DWORD PTR ds:[edi-0x6e]
  414e10:	push   ecx
  414e11:	fwait
  414e12:	and    al,0x48
  414e14:	mov    ebx,gs
  414e16:	frndint 
  414e18:	cmp    ebp,edi
  414e1a:	push   ebp
  414e1b:	out    0x65,al
  414e1d:	fist   WORD PTR [edi-0x4]
  414e20:	jae    0x414e2c
  414e22:	inc    esp
  414e23:	sbb    dl,dl
  414e25:	and    DWORD PTR [ebx-0x2a],edx
  414e28:	dec    esp
  414e29:	pop    eax
  414e2a:	rcl    bh,0xb1
  414e2d:	cli    
  414e2e:	scas   eax,DWORD PTR es:[edi]
  414e2f:	ins    DWORD PTR es:[edi],dx
  414e30:	push   eax
  414e31:	add    BYTE PTR [edx-0x48],cl
  414e34:	dec    esi
  414e35:	stos   DWORD PTR es:[edi],eax
  414e36:	jbe    0x414e9c
  414e38:	in     eax,0x6c
  414e3a:	cdq    
  414e3b:	xchg   edx,eax
  414e3c:	ret    0xfdca
  414e3f:	(bad)  
  414e40:	loope  0x414df9
  414e42:	mov    eax,ds:0x9c2207ad
  414e47:	lahf   
  414e48:	inc    eax
  414e49:	fiadd  WORD PTR [esi-0x6a]
  414e4c:	jbe    0x414def
  414e4e:	and    DWORD PTR [edi+0x3c],ebx
  414e51:	imul   eax,DWORD PTR [eax+0x4e600277],0xdf484be3
  414e5b:	js     0x414ed1
  414e5d:	mov    DWORD PTR [edi],esp
  414e5f:	fucomi st,st(6)
  414e61:	jecxz  0x414ebd
  414e63:	call   0x3d40c031
  414e68:	jmp    0x7904bcc
  414e6d:	ds inc ebx
  414e6f:	jne    0x414ec8
  414e71:	(bad)  
  414e72:	arpl   WORD PTR [edx],bp
  414e74:	xchg   edi,eax
  414e75:	iret   
  414e76:	sbb    al,0x5d
  414e78:	xor    eax,0x10f9cbb3
  414e7d:	imul   edi,DWORD PTR [ebx+0x27],0xfca01378
  414e84:	fmul   st(0),st
  414e86:	les    ebx,FWORD PTR ds:0xebc59bbf
  414e8c:	or     DWORD PTR [ebx+0x29],esp
  414e8f:	pop    esi
  414e90:	adc    al,0x7
  414e92:	push   ss
  414e93:	push   eax
  414e94:	inc    eax
  414e95:	push   edi
  414e96:	repnz cmp al,0x24
  414e99:	adc    ah,cl
  414e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e9c:	dec    eax
  414e9d:	xor    DWORD PTR [ebx],ebx
  414e9f:	mov    edx,0x3c6567dd
  414ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ea5:	mov    cl,0xbc
  414ea7:	das    
  414ea8:	mov    al,0x7
  414eaa:	fcmovb st,st(5)
  414eac:	adc    ch,dh
  414eae:	mov    al,ds:0x57a511ac
  414eb4:	sahf   
  414eb5:	ds aas 
  414eb7:	xor    al,0xa
  414eb9:	lahf   
  414eba:	sahf   
  414ebb:	mov    al,ds:0xcfd56fb1
  414ec0:	outs   dx,BYTE PTR ds:[esi]
  414ec1:	mov    ebx,0x9288768d
  414ec6:	jl     0x414e51
  414ec8:	mov    ebx,0xccc13e00
  414ecd:	mov    ecx,0x2561148b
  414ed2:	es out dx,eax
  414ed4:	stos   DWORD PTR es:[edi],eax
  414ed5:	fdiv   QWORD PTR [ebx]
  414ed7:	adc    DWORD PTR [edi],ecx
  414ed9:	cmp    DWORD PTR [esp+ebx*1+0x5b],0x56
  414ede:	add    DWORD PTR [esi+ecx*1-0x1a],esp
  414ee2:	and    eax,0xbff58b9c
  414ee7:	stos   DWORD PTR es:[edi],eax
  414ee8:	mov    ebp,0x617044ee
  414eed:	dec    esi
  414eee:	dec    ebx
  414eef:	sahf   
  414ef0:	sub    BYTE PTR [ecx],al
  414ef2:	pop    ebx
  414ef3:	mov    eax,0xdb7d418c
  414ef8:	cvtps2pi mm7,QWORD PTR [eax-0x72]
  414efc:	aam    0x3c
  414efe:	call   0x1171:0x1cafaf66
  414f05:	fistp  DWORD PTR [eax-0x3346fc8b]
  414f0b:	inc    ebx
  414f0c:	int3   
  414f0d:	mov    ch,BYTE PTR [ecx+0x2e]
  414f10:	adc    cl,ch
  414f12:	jl     0x414f61
  414f14:	cmp    ecx,0x64eebc6e
  414f1a:	mov    al,0x21
  414f1c:	out    0xf5,eax
  414f1e:	loope  0x414f95
  414f20:	shl    BYTE PTR [eax+eax*1+0x185d2f57],1
  414f27:	adc    BYTE PTR [edi],0x3a
  414f2a:	fyl2x  
  414f2c:	shl    BYTE PTR gs:[ecx],cl
  414f2f:	jl     0x414eff
  414f31:	daa    
  414f32:	lods   eax,DWORD PTR ds:[esi]
  414f33:	pop    ss
  414f34:	push   ecx
  414f35:	fwait
  414f36:	mov    cl,0x35
  414f38:	jmp    0x7856f529
  414f3d:	test   eax,0xa3b72148
  414f42:	ret    0x85e0
  414f45:	mov    dl,0x6f
  414f47:	mov    DWORD PTR [eax],ecx
  414f49:	hlt    
  414f4a:	mov    ds:0x8abe93d6,eax
  414f4f:	retf   0x6c0
  414f52:	or     BYTE PTR [ebp+0x368f54ae],bl
  414f58:	psllw  mm0,mm1
  414f5b:	stc    
  414f5c:	lea    esi,[edi+0x37]
  414f5f:	cmp    eax,0xaef5afde
  414f64:	pusha  
  414f65:	repz xchg edx,eax
  414f67:	inc    ebx
  414f68:	dec    eax
  414f69:	adc    eax,0x7d0a5c38
  414f6e:	mov    bl,0xcb
  414f70:	jmp    0x196b:0xef99f91b
  414f77:	test   eax,0x33e589a
  414f7c:	inc    DWORD PTR [esi]
  414f7e:	or     dl,BYTE PTR [esi]
  414f80:	jb     0x414f12
  414f82:	ret    0x600c
  414f85:	sub    BYTE PTR [esi-0x71d0eab3],dl
  414f8b:	push   ebp
  414f8c:	cmp    al,0xb5
  414f8e:	add    ebx,eax
  414f90:	jns    0x414fea
  414f92:	rcl    BYTE PTR [ebp+0x7f97804d],1
  414f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f99:	aad    0x40
  414f9b:	lock rcr ecx,0x52
  414f9f:	test   BYTE PTR [edx+0x56],ch
  414fa2:	or     edx,DWORD PTR [ebp+0x7c4e9f2f]
  414fa8:	dec    ebp
  414fa9:	sub    eax,0x7e3690ad
  414fae:	dec    eax
  414faf:	popf   
  414fb0:	jp     0x41500d
  414fb2:	daa    
  414fb3:	ret    0x11a1
  414fb6:	dec    esp
  414fb7:	fild   QWORD PTR ds:0x9962134f
  414fbd:	jge    0x415016
  414fbf:	lods   eax,DWORD PTR ds:[esi]
  414fc0:	add    ebx,DWORD PTR [esi-0x6e]
  414fc3:	(bad)  
  414fc5:	push   esi
  414fc6:	ficomp DWORD PTR [eax-0x13]
  414fc9:	(bad)  
  414fca:	repnz stos DWORD PTR es:[edi],eax
  414fcc:	imul   ecx,ebx,0xe7dbf844
  414fd2:	dec    edx
  414fd3:	clc    
  414fd4:	dec    eax
  414fd5:	dec    esi
  414fd6:	push   ecx
  414fd7:	dec    edi
  414fd8:	inc    edx
  414fd9:	sub    eax,0x1130e126
  414fde:	jge    0x414fa2
  414fe0:	mov    dl,0xe1
  414fe2:	rcr    BYTE PTR [edi-0x64],1
  414fe5:	sub    BYTE PTR [eax],0x60
  414fe8:	loop   0x415066
  414fea:	fisttp WORD PTR [ebp+0x795c443c]
  414ff0:	mov    DWORD PTR [ecx-0x52],esp
  414ff3:	sbb    DWORD PTR [edx+edi*1-0x6bb34a93],edi
  414ffa:	shr    BYTE PTR [edx-0x3ce2d65c],0x48
  415001:	sub    ah,BYTE PTR [ecx]
  415003:	std    
  415004:	jnp    0x415008
  415006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415007:	or     BYTE PTR [ecx-0x55a35910],dh
  41500d:	inc    esp
  41500e:	and    eax,0x8768828d
  415013:	dec    esp
  415014:	add    eax,0xc37d8781
  415019:	outs   dx,BYTE PTR ds:[esi]
  41501a:	loopne 0x41503a
  41501c:	push   0xffffff99
  41501e:	adc    edx,ebx
  415020:	fidiv  DWORD PTR [eax-0x58c9bb79]
  415026:	sub    edi,DWORD PTR [eax-0x54a1a193]
  41502c:	(bad)  
  41502d:	shl    dh,0x4
  415030:	mov    edi,DWORD PTR [esi*2+0x3c708669]
  415037:	xchg   ebx,eax
  415038:	xchg   ecx,eax
  415039:	jne    0x415073
  41503b:	lods   al,BYTE PTR ds:[esi]
  41503c:	mov    bh,0x71
  41503e:	mov    ds:0x404d2eda,al
  415043:	inc    edx
  415044:	sub    DWORD PTR [eax-0xa0d9ea],ebx
  41504a:	mov    dl,0x77
  41504c:	pop    esi
  41504d:	mov    ds:0x3fce1f2e,al
  415052:	inc    eax
  415053:	cmp    BYTE PTR gs:[ebp-0x50],ah
  415057:	(bad)  
  415058:	jns    0x4150c3
  41505a:	mov    al,0xb1
  41505c:	pop    esi
  41505d:	lea    esi,[edi+0x7aa62b74]
  415063:	jecxz  0x41509c
  415065:	cmp    cl,BYTE PTR [eax-0x2af4cb5c]
  41506b:	and    bh,ah
  41506d:	or     al,0xb1
  415070:	scas   al,BYTE PTR es:[edi]
  415071:	rcl    edi,1
  415073:	adc    bh,al
  415075:	jbe    0x415060
  415077:	in     eax,dx
  415078:	sysret 
  41507a:	jno    0x41509c
  41507c:	repz cdq 
  41507e:	adc    edi,DWORD PTR [ebp+0x1bbd0150]
  415084:	push   ebp
  415085:	mov    dl,0xe1
  415087:	mov    ch,0xe6
  415089:	mov    edi,DWORD PTR [edx-0x32600732]
  41508f:	aad    0x1c
  415091:	mov    al,ds:0x1a22226
  415096:	push   ds
  415097:	jg     0x415098
  415099:	xor    al,0xfe
  41509b:	outs   dx,BYTE PTR ds:[esi]
  41509c:	call   0x65eb:0xe30cc4cb
  4150a3:	sti    
  4150a4:	pop    ebp
  4150a5:	inc    eax
  4150a6:	push   cs
  4150a7:	in     eax,dx
  4150a8:	nop
  4150a9:	ret    0x3337
  4150ac:	lods   eax,DWORD PTR ds:[esi]
  4150ad:	jno    0x415113
  4150af:	dec    eax
  4150b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150b1:	(bad)  
  4150b2:	fsubr  DWORD PTR [ecx+ebx*1-0x3e]
  4150b6:	in     eax,0x27
  4150b8:	in     al,dx
  4150b9:	stc    
  4150ba:	test   al,0x68
  4150bc:	push   0x4b80f211
  4150c1:	mov    esp,0xda3c2fde
  4150c6:	push   ds
  4150c7:	sub    eax,0x3b803d70
  4150cc:	add    ch,BYTE PTR [esi-0x7995dc64]
  4150d2:	pop    ecx
  4150d3:	sar    BYTE PTR [ebp+0x29],0x18
  4150d7:	fisttp WORD PTR [esi-0x52]
  4150da:	sbb    al,0x36
  4150dc:	and    eax,0x653e2dbc
  4150e1:	(bad)  
  4150e2:	mov    cs,WORD PTR [ebx-0x2c]
  4150e5:	clc    
  4150e6:	dec    eax
  4150e7:	(bad)  
  4150e8:	dec    ebx
  4150e9:	inc    edx
  4150ea:	or     dh,dh
  4150ec:	clc    
  4150ed:	sub    dl,ah
  4150ef:	stos   DWORD PTR es:[edi],eax
  4150f0:	xchg   DWORD PTR [esi],edx
  4150f2:	das    
  4150f3:	stos   DWORD PTR es:[edi],eax
  4150f4:	fistp  DWORD PTR [eax]
  4150f6:	test   al,0xb8
  4150f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150f9:	icebp  
  4150fa:	shl    edi,0x86
  4150fd:	bound  eax,QWORD PTR [ebx]
  4150ff:	push   cs
  415100:	push   0x4ac4f12c
  415105:	sbb    cl,cl
  415107:	or     al,0x2b
  415109:	mov    ch,BYTE PTR [ecx]
  41510b:	cmp    eax,0x2aaa5e00
  415110:	mov    ebx,esi
  415112:	sub    BYTE PTR [edi-0x6e],0x96
  415116:	out    dx,al
  415117:	ins    BYTE PTR es:[edi],dx
  415118:	add    DWORD PTR [edx],0xd5da0167
  41511e:	push   ebp
  41511f:	jge    0x4150e2
  415121:	ror    DWORD PTR [edx+esi*1+0x4b],0x4b
  415126:	jnp    0x415112
  415128:	jo     0x415136
  41512a:	and    DWORD PTR [ebx-0x26b8d2c4],edi
  415130:	jbe    0x4151a8
  415132:	loop   0x41511c
  415134:	sub    BYTE PTR [ebp+0x61],cl
  415137:	cwde   
  415138:	mov    ebx,gs
  41513a:	pop    esi
  41513b:	nop
  41513c:	mov    al,ds:0xde7ebf0f
  415141:	daa    
  415142:	mov    ds:0xd0c5cfbd,al
  415147:	fdiv   st(7),st
  415149:	pop    edi
  41514a:	gs pusha 
  41514c:	mov    eax,ds:0x30d34656
  415151:	and    eax,0xe951efc7
  415156:	mov    dl,0x88
  415158:	inc    ecx
  415159:	aas    
  41515a:	aad    0x72
  41515c:	in     al,0xcd
  41515e:	je     0x41514e
  415160:	scas   al,BYTE PTR es:[edi]
  415161:	mov    esp,0x93e056db
  415166:	sbb    al,0xec
  415168:	popf   
  415169:	mov    ds:0x2c9215ae,eax
  41516e:	(bad)  
  41516f:	mov    BYTE PTR [edx+0x13d692b9],dh
  415175:	mov    al,ds:0x231da328
  41517a:	enter  0xac59,0xf7
  41517e:	mov    dl,0x74
  415180:	xchg   DWORD PTR [ebx+0x3e],ebp
  415183:	fld    st(6)
  415185:	mov    esi,0x890f6dfb
  41518a:	popa   
  41518b:	mov    edi,0x6e2f9766
  415190:	test   DWORD PTR [edi+edx*4-0x44c3facb],ecx
  415197:	hlt    
  415198:	bound  edi,QWORD PTR [ecx+eax*1]
  41519b:	push   edx
  41519c:	or     ah,BYTE PTR ds:0xdcab761e
  4151a2:	dec    eax
  4151a3:	shl    dl,0x16
  4151a6:	adc    ebp,DWORD PTR [esi]
  4151a8:	and    bl,BYTE PTR [eax+0x2100c3f7]
  4151ae:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4151b0:	outs   dx,BYTE PTR ds:[esi]
  4151b1:	and    eax,0xaa9a3a33
  4151b6:	sub    eax,0x2390831
  4151bb:	mov    dl,ah
  4151bd:	fisub  DWORD PTR [eax-0x2095d1bc]
  4151c3:	pop    ss
  4151c4:	std    
  4151c5:	fwait
  4151c6:	in     eax,0x85
  4151c8:	(bad)  
  4151ca:	lock push ss
  4151cc:	mov    esp,0x6826f87c
  4151d1:	push   ss
  4151d2:	into   
  4151d3:	mov    ah,0xaa
  4151d5:	jne    0x4151bf
  4151d7:	(bad)  
  4151d8:	pop    esp
  4151d9:	outs   dx,BYTE PTR ds:[esi]
  4151da:	cmp    DWORD PTR [eax-0x16272800],edx
  4151e0:	pushf  
  4151e1:	pop    edx
  4151e2:	ins    BYTE PTR es:[edi],dx
  4151e3:	adc    eax,0x82248a48
  4151e8:	dec    edi
  4151e9:	sbb    al,0xf9
  4151eb:	jle    0x4151c1
  4151ed:	fwait
  4151ee:	mov    esp,0x32b45aa6
  4151f3:	sbb    bl,bh
  4151f5:	pop    ebx
  4151f6:	jecxz  0x4151bf
  4151f8:	lods   eax,DWORD PTR ds:[esi]
  4151f9:	sar    ah,0x31
  4151fc:	lods   al,BYTE PTR ds:[esi]
  4151fd:	and    BYTE PTR [edi+0x6296ca75],0x4c
  415204:	xchg   ecx,eax
  415205:	push   esp
  415206:	repz imul ebx,DWORD PTR [ecx+0x3a],0x72
  41520b:	(bad)  
  41520c:	enter  0x706,0x64
  415210:	mov    ds:0x4e488020,al
  415215:	adc    bl,ah
  415217:	fst    QWORD PTR [edi-0x1c]
  41521a:	and    DWORD PTR [eax-0x1f165622],edx
  415220:	adc    al,0x9e
  415222:	adc    DWORD PTR [eax-0x5ad058cb],ecx
  415228:	adc    ebp,ecx
  41522a:	fdiv   QWORD PTR [esi]
  41522c:	(bad)  
  41522d:	clc    
  41522e:	(bad)  
  415230:	mov    ds,WORD PTR [eax-0x7c]
  415233:	mov    al,ds:0xb88c86d7
  415238:	sub    esp,ecx
  41523a:	into   
  41523b:	sub    esp,DWORD PTR [edx-0x86d1456]
  415241:	and    BYTE PTR [esi-0x7c],al
  415244:	shr    BYTE PTR [edx],0x1e
  415247:	mov    edx,0x3ae49468
  41524c:	xor    eax,0xed82413c
  415251:	test   eax,0x74542458
  415256:	inc    edi
  415257:	or     al,0x58
  415259:	jmp    0x4152d3
  41525b:	push   ebp
  41525c:	out    0x80,al
  41525e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41525f:	icebp  
  415260:	xchg   ebx,eax
  415261:	int    0x8f
  415263:	shr    BYTE PTR [eax+ecx*2+0x40],1
  415267:	dec    eax
  415268:	pop    ds
  415269:	cmp    edx,DWORD PTR [ebx-0x20]
  41526c:	aaa    
  41526d:	pop    ebx
  41526e:	push   0x5b
  415270:	das    
  415271:	ja     0x4152a0
  415273:	out    dx,eax
  415274:	add    BYTE PTR [esi],dl
  415276:	enter  0x50d1,0x38
  41527a:	dec    eax
  41527b:	xchg   edx,eax
  41527c:	gs jne 0x415289
  41527f:	inc    eax
  415280:	stc    
  415281:	(bad)  
  415282:	mov    dh,BYTE PTR [esi+0x1d537c76]
  415288:	sbb    esi,DWORD PTR [ebx]
  41528a:	mov    ds:0xb09fe52,al
  41528f:	nop
  415290:	hlt    
  415291:	das    
  415292:	or     al,0xb
  415294:	xchg   ebx,eax
  415295:	pop    es
  415296:	inc    ebp
  415297:	pop    ss
  415298:	mov    ebp,DWORD PTR [edi]
  41529a:	push   edi
  41529b:	sub    al,0xdb
  41529d:	sub    DWORD PTR [edx+ebx*4+0x7a],esp
  4152a1:	sbb    BYTE PTR [edx],cl
  4152a3:	sbb    BYTE PTR [ecx+0x0],dl
  4152a6:	dec    ebp
  4152a7:	pusha  
  4152a8:	inc    edi
  4152a9:	pop    ecx
  4152aa:	xor    al,0xa6
  4152ac:	xchg   ebp,eax
  4152ad:	mov    ch,0x62
  4152af:	repz rcr DWORD PTR [ebp-0x19],0x9f
  4152b4:	data16 mov BYTE PTR [ecx-0x27a35d3d],dh
  4152bb:	add    bh,BYTE PTR [esi-0x7d2424a7]
  4152c1:	loope  0x41529e
  4152c3:	ja     0x4152cd
  4152c5:	mov    ecx,0x47d44f4
  4152ca:	mov    esp,es
  4152cc:	push   ecx
  4152cd:	or     bl,BYTE PTR [eax+0x2f9ed8f4]
  4152d3:	xchg   ebp,eax
  4152d4:	push   ebx
  4152d5:	gs mov ah,0xe4
  4152d8:	repnz dec ebx
  4152da:	mov    dh,0x28
  4152dc:	jl     0x4152c6
  4152de:	test   BYTE PTR [edi],0x91
  4152e1:	jge    0x415282
  4152e3:	mov    ds:0xa1e1beee,eax
  4152e8:	jle    0x415289
  4152ea:	ret    
  4152eb:	addr16 push ecx
  4152ed:	lds    eax,FWORD PTR [esi+ebp*2-0x59]
  4152f1:	inc    ebx
  4152f2:	and    bl,al
  4152f4:	sub    al,0x40
  4152f6:	rcr    al,0xc5
  4152f9:	push   edi
  4152fa:	imul   esp,DWORD PTR [edi-0x11861ffa],0xc6a1d8cc
  415304:	xchg   ebx,edi
  415306:	in     eax,dx
  415307:	scas   al,BYTE PTR es:[edi]
  415308:	dec    eax
  415309:	jb     0x415337
  41530b:	push   esp
  41530c:	mov    ebx,0x506f2cbf
  415311:	ret    0xc3a8
  415314:	xlat   BYTE PTR ds:[ebx]
  415315:	jns    0x4152d2
  415317:	cdq    
  415318:	cli    
  415319:	xor    ebp,ecx
  41531b:	xor    eax,0x97f695c0
  415320:	xchg   ebp,eax
  415321:	jb     0x41530d
  415323:	mov    esi,0x5c01cd42
  415328:	aam    0xe8
  41532a:	xchg   ecx,eax
  41532b:	jbe    0x415311
  41532d:	pop    ebx
  41532e:	call   0xd344:0x74bf80c7
  415335:	ds adc ah,dl
  415338:	stc    
  415339:	xor    BYTE PTR [esi+ecx*8-0xa],bl
  41533d:	xchg   esp,eax
  41533e:	mov    ds:0x63f93855,eax
  415343:	lods   al,BYTE PTR ds:[esi]
  415344:	jno    0x415337
  415346:	int    0x77
  415348:	cmp    eax,0x3b6181e5
  41534d:	test   eax,0xe961b57b
  415352:	xor    bh,BYTE PTR [edx+0xa14a039]
  415358:	sbb    eax,0x64bbacb9
  41535d:	mov    ?,WORD PTR [ebx+0x1baf4fd8]
  415363:	je     0x415310
  415365:	clc    
  415366:	(bad)  
  415367:	ss xchg edi,eax
  415369:	cmp    cl,bl
  41536b:	or     al,0x2e
  41536d:	mov    bh,0xcd
  41536f:	out    dx,al
  415370:	retf   0xc1c1
  415373:	rol    DWORD PTR [eax],0xd1
  415376:	ss (bad) 
  415378:	fdivrp st(4),st
  41537a:	in     eax,0x7a
  41537c:	adc    eax,0x96292981
  415381:	test   BYTE PTR [edx-0x6bb835d2],dh
  415387:	adc    BYTE PTR [edi+0x672e544e],cl
  41538d:	mov    cl,0xdb
  41538f:	sti    
  415390:	and    DWORD PTR [ecx-0x1],ecx
  415393:	aaa    
  415394:	stc    
  415395:	lock ret 0x3f33
  415399:	pop    ecx
  41539a:	push   eax
  41539b:	ins    DWORD PTR es:[edi],dx
  41539c:	xchg   BYTE PTR [eax-0x66824fc5],dl
  4153a2:	push   eax
  4153a3:	push   0x86f92a98
  4153a8:	jnp    0x41541a
  4153aa:	inc    eax
  4153ab:	shr    BYTE PTR [eax],0xf3
  4153ae:	mov    ebx,0xfd7a77f3
  4153b3:	call   0x43cfc3df
  4153b8:	inc    esp
  4153b9:	hlt    
  4153ba:	jmp    0x415355
  4153bc:	loope  0x415370
  4153be:	aas    
  4153bf:	mov    cl,0x78
  4153c1:	mov    al,0x5
  4153c3:	loop   0x4153dd
  4153c5:	js     0x41536b
  4153c7:	popf   
  4153c8:	cdq    
  4153c9:	cs push es
  4153cb:	(bad)  
  4153cc:	aaa    
  4153cd:	xor    eax,0x9b7eece6
  4153d2:	inc    edi
  4153d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153d4:	mov    edx,0x39fe4124
  4153d9:	mov    ebp,DWORD PTR [ecx]
  4153db:	sbb    ebp,DWORD PTR [edi]
  4153dd:	lods   al,BYTE PTR ds:[esi]
  4153de:	mov    dh,0xdf
  4153e0:	or     ah,BYTE PTR [eax+0x7919aa8a]
  4153e6:	shl    DWORD PTR ds:0x56784bf6,1
  4153ec:	in     al,dx
  4153ed:	cmp    cl,BYTE PTR [ebx]
  4153ef:	sub    DWORD PTR [ebx-0x2],edx
  4153f2:	push   edi
  4153f3:	mov    edx,DWORD PTR [edx-0x13cc65dc]
  4153f9:	pop    edx
  4153fa:	outs   dx,DWORD PTR ds:[esi]
  4153fb:	adc    BYTE PTR [edi],cl
  4153fd:	sti    
  4153fe:	arpl   WORD PTR [ebx+edx*2+0x534c8d42],dx
  415405:	cdq    
  415406:	out    0xf4,al
  415408:	mov    al,es:0x5f545681
  41540e:	bound  eax,QWORD PTR [edx-0x15]
  415411:	(bad)  
  415412:	outs   dx,BYTE PTR ds:[esi]
  415413:	or     ah,dl
  415415:	adc    ebx,DWORD PTR [edx]
  415417:	jnp    0x4153e6
  415419:	shl    DWORD PTR [eax-0x80],cl
  41541c:	(bad)  
  41541d:	into   
  41541e:	mov    edi,0x89d8b017
  415423:	dec    ebp
  415424:	pop    ecx
  415425:	outs   dx,BYTE PTR ds:[esi]
  415426:	dec    ebp
  415427:	sbb    edi,DWORD PTR [eax]
  415429:	ret    0x70b9
  41542c:	dec    ebx
  41542d:	dec    esp
  41542e:	jecxz  0x415482
  415430:	mov    bl,0x1a
  415432:	lea    ebp,[edi+0x20]
  415435:	pop    es
  415436:	xor    DWORD PTR [edx],0x77
  415439:	xchg   edi,eax
  41543a:	pop    ss
  41543b:	lahf   
  41543c:	int3   
  41543d:	cld    
  41543e:	push   ebx
  41543f:	sbb    esp,0xca07f9a1
  415445:	into   
  415446:	jp     0x41546d
  415448:	mov    ah,0x61
  41544a:	fwait
  41544b:	cmp    edi,DWORD PTR [eax+0x370a5ea6]
  415451:	sbb    eax,0x5a3e36a2
  415456:	or     BYTE PTR [esp+esi*4],cl
  415459:	dec    ecx
  41545a:	fnsave [edi-0x59]
  41545d:	bound  eax,QWORD PTR [edx]
  41545f:	retf   0xfd2a
  415462:	ret    
  415463:	sahf   
  415464:	adc    eax,0x2896f0f2
  415469:	adc    dh,0x78
  41546c:	mov    bl,0xf8
  41546e:	fdivr  DWORD PTR [ecx]
  415470:	xor    BYTE PTR [ecx+edx*2-0x59],0xe
  415475:	jmp    0x415473
  415477:	mul    BYTE PTR [edx]
  415479:	push   es
  41547a:	mov    dl,0xd9
  41547c:	lds    edx,FWORD PTR [ecx-0x34ddef51]
  415482:	sub    DWORD PTR [esi],edx
  415484:	scas   al,BYTE PTR es:[edi]
  415485:	ret    
  415486:	xor    esi,DWORD PTR [ebx]
  415488:	add    eax,0x82722498
  41548d:	repz pop es
  41548f:	retf   0x55a7
  415492:	out    dx,eax
  415493:	outs   dx,BYTE PTR ds:[esi]
  415494:	mov    esi,0xbdbc51cd
  415499:	sub    DWORD PTR [esi-0x77],eax
  41549c:	repz js 0x4154d9
  41549f:	jo     0x415465
  4154a1:	add    cl,cl
  4154a3:	loop   0x41551b
  4154a5:	test   al,0xd8
  4154a7:	cmp    DWORD PTR [eax+0x5e],ebx
  4154aa:	inc    edx
  4154ab:	or     eax,0x6ecaed67
  4154b0:	iret   
  4154b1:	jno    0x4154b5
  4154b3:	das    
  4154b4:	pop    ebx
  4154b5:	popf   
  4154b6:	cmp    eax,0x4df39760
  4154bb:	jo     0x4154ce
  4154bd:	and    BYTE PTR es:[edi+0x511f2caf],0xa1
  4154c5:	pop    es
  4154c6:	loopne 0x41550a
  4154c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154c9:	int    0x4e
  4154cb:	pop    ecx
  4154cc:	inc    esi
  4154cd:	leave  
  4154ce:	dec    esp
  4154cf:	adc    DWORD PTR [esi+0x7e],ecx
  4154d2:	sub    BYTE PTR [esi-0x11],cl
  4154d5:	gs xchg edx,eax
  4154d7:	sar    ebx,cl
  4154d9:	inc    ebp
  4154da:	loop   0x415493
  4154dc:	and    eax,0x83c00219
  4154e1:	inc    esp
  4154e2:	(bad)  
  4154e3:	ds and al,0x6b
  4154e6:	mov    gs,edi
  4154e8:	mov    bl,0xa7
  4154ea:	mov    cl,BYTE PTR [edi+0x75]
  4154ed:	fs jns 0x41556f
  4154f0:	loop   0x415477
  4154f2:	sub    eax,DWORD PTR [ecx+0x245d79b]
  4154f8:	(bad)  
  4154f9:	jnp    0x415551
  4154fb:	jo     0x41555d
  4154fd:	mov    dl,0xfa
  4154ff:	mov    BYTE PTR [esi-0x35],cl
  415502:	imul   ax,WORD PTR [ebp+0x65],0x2a61
  415508:	mov    ds:0xbbdbd619,al
  41550d:	ins    BYTE PTR es:[edi],dx
  41550e:	mov    bh,0xb5
  415510:	xor    al,BYTE PTR [ebx+0x12]
  415513:	add    esp,edx
  415515:	add    bh,BYTE PTR [edx-0x2d0b9d4d]
  41551b:	fidiv  WORD PTR [ebx+ebx*1+0x73]
  41551f:	dec    edi
  415520:	pop    eax
  415521:	jno    0x415534
  415523:	pop    edx
  415524:	je     0x41551a
  415526:	mov    ebp,0xef08712b
  41552b:	shl    BYTE PTR [ecx-0x1fd70a19],0xf
  415532:	in     eax,0xdc
  415534:	xchg   BYTE PTR [eax+0x5],ch
  415537:	mov    bl,0x4e
  415539:	jl     0x4154c4
  41553b:	cmp    BYTE PTR [esi],dl
  41553d:	fcmove st,st(4)
  41553f:	dec    ebp
  415540:	clc    
  415541:	inc    ebp
  415542:	cmp    BYTE PTR [edx+0x791934d2],0x6e
  415549:	xchg   ecx,eax
  41554a:	fisub  WORD PTR [ecx+edi*2-0x15]
  41554e:	push   ebx
  41554f:	xor    ecx,edi
  415551:	enter  0x75be,0x5f
  415555:	std    
  415556:	jp     0x415519
  415558:	or     ah,dl
  41555a:	das    
  41555b:	and    al,0x48
  41555d:	clc    
  41555e:	xor    al,BYTE PTR [ecx-0x3713f9e0]
  415564:	retf   0xd024
  415567:	retf   
  415568:	push   esp
  415569:	sub    eax,0xf6fb106f
  41556e:	sbb    al,0x48
  415570:	pop    ds
  415571:	sub    bl,ch
  415573:	rcl    ah,cl
  415575:	fldcw  WORD PTR [esi+0x8ff890]
  41557b:	inc    edi
  41557c:	sub    BYTE PTR [edx],0x12
  41557f:	adc    ebx,DWORD PTR [ebx-0x36]
  415582:	mov    edx,0x9086c3ca
  415587:	lahf   
  415588:	hlt    
  415589:	loopne 0x415598
  41558b:	mov    ebx,0x27ddc9ea
  415590:	(bad)
  415593:	and    BYTE PTR [ebx-0x9],cl
  415596:	repz rcl eax,cl
  415599:	jge    0x4155b1
  41559b:	mov    dh,0x5d
  41559d:	pop    edi
  41559e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41559f:	mov    ebx,0x1fb90498
  4155a4:	cwde   
  4155a5:	mov    esi,0x8fa7ecb8
  4155aa:	test   al,0x3b
  4155ac:	ret    0x2de5
  4155af:	or     DWORD PTR [edi+0x7a],0x8b496ed
  4155b6:	dec    ebx
  4155b7:	sub    al,0xb7
  4155b9:	into   
  4155ba:	mov    dh,0xb
  4155bc:	aaa    
  4155bd:	aam    0x20
  4155bf:	aas    
  4155c0:	mov    WORD PTR [esi+0x1d86b739],ds
  4155c6:	lock ds mov tr7,edx
  4155cb:	adc    DWORD PTR [esi+edx*8],esp
  4155ce:	or     al,0xb7
  4155d0:	lds    edx,FWORD PTR [ebp+0x64]
  4155d3:	mov    BYTE PTR [ebp-0x44e621ab],bl
  4155d9:	ja     0x415626
  4155db:	mov    ebp,0x81ed4659
  4155e0:	dec    esi
  4155e1:	iret   
  4155e2:	xchg   ecx,eax
  4155e3:	ja     0x415565
  4155e5:	jmp    0xda67aa46
  4155ea:	adc    ch,ah
  4155ec:	nop
  4155ed:	sbb    DWORD PTR [ebx-0x2b],0xb957a061
  4155f4:	jne    0x41564e
  4155f6:	sbb    dl,dh
  4155f8:	seto   cl
  4155fb:	mov    dl,0x88
  4155fd:	aaa    
  4155fe:	iret   
  4155ff:	xor    ch,BYTE PTR [edx-0x43]
  415602:	xor    al,0x53
  415604:	test   eax,0xbfc6ca33
  415609:	gs xor eax,0xb9c8e99c
  41560f:	adc    al,0x23
  415611:	add    DWORD PTR [ebx-0x3ceeafa6],0x44ba7570
  41561b:	jge    0x4155dd
  41561d:	sub    BYTE PTR [esi*8+0x68a88dda],0x8e
  415625:	xchg   BYTE PTR [ecx-0xf],ch
  415628:	cmp    al,0xc8
  41562a:	arpl   di,dx
  41562c:	jmp    0xebc05959
  415631:	sbb    BYTE PTR [ecx],0xa
  415634:	push   di
  415636:	cmc    
  415637:	sub    al,0x5e
  415639:	fwait
  41563a:	shr    bl,cl
  41563c:	imul   ebx,DWORD PTR [ecx+0x51f9a380],0xa8699604
  415646:	add    eax,DWORD PTR [ecx]
  415648:	xor    al,0x71
  41564a:	pop    edi
  41564b:	and    edi,DWORD PTR [esi-0x12]
  41564e:	mov    ah,0x6e
  415650:	mov    al,ds:0xa5a9ddfc
  415655:	data16 mov ah,0x8
  415658:	add    al,ch
  41565a:	loope  0x415685
  41565c:	cmc    
  41565d:	loope  0x415642
  41565f:	adc    esp,ebx
  415661:	push   edi
  415662:	push   ds
  415663:	(bad)  
  415664:	xchg   esi,eax
  415665:	(bad)  
  415666:	out    dx,eax
  415667:	adc    eax,0x717bb71d
  41566c:	cwde   
  41566d:	out    dx,al
  41566e:	and    ch,BYTE PTR [esp+ebp*1-0x6cc70cd3]
  415675:	dec    esp
  415676:	mul    DWORD PTR [ecx+0x4dc87650]
  41567c:	mov    ah,0x49
  41567e:	mov    al,al
  415680:	xor    BYTE PTR [esp+ebp*1-0x4781c3de],bh
  415687:	push   0x232b5263
  41568c:	into   
  41568d:	cmp    DWORD PTR [edx+0x57],esp
  415690:	mov    bh,0x6f
  415692:	(bad)  
  415693:	out    dx,al
  415694:	icebp  
  415695:	mov    esi,?
  415697:	out    0xc4,eax
  415699:	mov    bl,0x99
  41569b:	push   es
  41569c:	xchg   ecx,eax
  41569d:	iret   
  41569e:	xchg   ebp,eax
  41569f:	(bad)  
  4156a0:	or     al,0x95
  4156a2:	aas    
  4156a3:	mov    ds:0xb9bea56d,eax
  4156a8:	push   edi
  4156a9:	outs   dx,BYTE PTR ds:[esi]
  4156aa:	mov    WORD PTR [ebx],fs
  4156ac:	adc    bh,dl
  4156ae:	ret    
  4156af:	xchg   BYTE PTR [edi],dl
  4156b1:	xor    esi,ecx
  4156b3:	or     DWORD PTR [edx],edx
  4156b5:	inc    ecx
  4156b6:	aam    0xc3
  4156b8:	jl     0x41565e
  4156ba:	es cmp al,0x74
  4156bd:	scas   al,BYTE PTR es:[edi]
  4156be:	push   ebx
  4156bf:	out    0x95,eax
  4156c1:	push   0x359d9bf2
  4156c6:	pop    esi
  4156c7:	les    eax,FWORD PTR [esi]
  4156c9:	test   DWORD PTR [edx],esp
  4156cb:	rcl    ebp,0xf4
  4156ce:	pusha  
  4156cf:	jb     0x415729
  4156d1:	cs jmp 0x415742
  4156d4:	and    eax,0xf935148a
  4156d9:	inc    ebp
  4156da:	mov    ah,BYTE PTR [edx-0x69]
  4156dd:	jl     0x415691
  4156df:	xor    ah,BYTE PTR [edi]
  4156e1:	pop    eax
  4156e2:	jge    0x4156f4
  4156e4:	out    dx,eax
  4156e5:	ja     0x415753
  4156e7:	lock enter 0xb0bc,0x7c
  4156ec:	daa    
  4156ed:	inc    ebp
  4156ee:	iret   
  4156ef:	jne    0x4156c9
  4156f1:	out    dx,eax
  4156f2:	and    dl,BYTE PTR [eax-0x49347095]
  4156f8:	fdivrp st(0),st
  4156fa:	inc    ecx
  4156fb:	xor    al,BYTE PTR [eax+0x7c724226]
  415701:	out    0xe2,al
  415703:	mov    ah,0x18
  415705:	fistp  WORD PTR [eax]
  415707:	mov    eax,0x6e0f0727
  41570c:	rcl    DWORD PTR [ecx],cl
  41570e:	xor    BYTE PTR [esi-0x5c],dh
  415711:	lea    ecx,[edx-0x1145f0da]
  415717:	pop    eax
  415718:	int3   
  415719:	sub    al,0xa3
  41571b:	jo     0x415790
  41571d:	shl    DWORD PTR [ecx],1
  41571f:	dec    esi
  415720:	gs pop ecx
  415722:	dec    ecx
  415723:	lahf   
  415724:	out    dx,eax
  415725:	mov    edi,0x3bd1788b
  41572a:	push   eax
  41572b:	mov    ebp,gs
  41572d:	dec    ecx
  41572e:	dec    ebx
  41572f:	lods   eax,DWORD PTR ds:[esi]
  415730:	xor    bl,BYTE PTR [edx]
  415732:	pop    eax
  415733:	adc    BYTE PTR [ecx+0x3ce20559],bh
  415739:	adc    DWORD PTR [esi+0x32b2bb21],esi
  41573f:	cmp    al,0xae
  415741:	and    ch,BYTE PTR [eax]
  415743:	mov    BYTE PTR [edi-0x4181e55],dl
  415749:	push   ecx
  41574a:	(bad)  
  41574b:	dec    esp
  41574c:	(bad)  
  41574d:	loop   0x41570c
  41574f:	sbb    ah,BYTE PTR ds:0xfaa221f
  415755:	leave  
  415756:	fcmovbe st,st(6)
  415758:	mov    ebp,DWORD PTR [esi+0x77860651]
  41575e:	mov    eax,ds:0x3a6d71e9
  415763:	sbb    cl,BYTE PTR ds:0xe05011c7
  415769:	sub    BYTE PTR [ecx-0x1aafdb0c],bh
  41576f:	mov    ebx,0x80b1385d
  415774:	mov    bl,0x77
  415776:	test   DWORD PTR [esi-0x41e4e0a4],0x2c750b01
  415780:	in     al,0x40
  415782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415783:	sub    bl,BYTE PTR [ebx]
  415785:	cdq    
  415786:	mov    eax,ds:0x47213c10
  41578b:	retf   
  41578c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41578d:	aad    0x53
  41578f:	call   0x276f:0x6939c12
  415796:	test   BYTE PTR [edx-0x4a],dh
  415799:	inc    esi
  41579a:	sub    DWORD PTR [eax],eax
  41579c:	shr    BYTE PTR ds:0x908dccf2,1
  4157a2:	(bad)  
  4157a3:	stc    
  4157a4:	es xchg ebx,eax
  4157a6:	add    BYTE PTR [ebx],cl
  4157a8:	xor    BYTE PTR [ebx+0x7be968e9],ah
  4157ae:	and    DWORD PTR [ebx-0x4d],esi
  4157b1:	in     al,dx
  4157b2:	pop    ds
  4157b3:	pop    ds
  4157b4:	inc    ebp
  4157b5:	(bad)  
  4157b6:	int3   
  4157b7:	ins    BYTE PTR es:[edi],dx
  4157b8:	inc    esi
  4157b9:	aad    0xa6
  4157bb:	mov    eax,0xd492c538
  4157c0:	ror    DWORD PTR gs:[ebx+0x23],cl
  4157c4:	inc    edx
  4157c5:	and    eax,DWORD PTR [ebp+0x42985079]
  4157cb:	sbb    ecx,DWORD PTR [ebp-0x38addefc]
  4157d1:	ins    DWORD PTR es:[edi],dx
  4157d2:	xchg   esi,eax
  4157d3:	in     al,0xe3
  4157d5:	les    eax,FWORD PTR [ebx+0x7b1adb70]
  4157db:	pop    es
  4157dc:	cmp    eax,ecx
  4157de:	adc    al,0x76
  4157e0:	pop    esp
  4157e1:	mov    edx,DWORD PTR [eax-0x7f]
  4157e4:	mov    ds:0xc9d74332,al
  4157e9:	and    BYTE PTR [ebx+ecx*1+0x68],dl
  4157ed:	icebp  
  4157ee:	push   esi
  4157ef:	mov    esp,DWORD PTR [eax-0x14]
  4157f2:	and    al,BYTE PTR [ecx-0x42]
  4157f5:	pop    ds
  4157f6:	xchg   esi,eax
  4157f7:	or     ah,BYTE PTR [esi]
  4157f9:	retf   
  4157fa:	into   
  4157fb:	inc    ebx
  4157fc:	sub    BYTE PTR [edi],dl
  4157fe:	mov    bl,0x91
  415800:	jns    0x415820
  415802:	mov    ecx,0xd803d625
  415807:	xor    al,dh
  415809:	pop    edx
  41580a:	repnz outs dx,DWORD PTR ds:[esi]
  41580c:	repnz add DWORD PTR [ebp-0x31],0xa6ed2cb3
  415814:	out    0xbc,al
  415816:	mov    ds:0x68005cac,eax
  41581b:	mov    edi,0xddf3aac8
  415820:	jnp    0x415861
  415822:	xchg   esp,eax
  415823:	js     0x41582f
  415825:	push   ebx
  415826:	xlat   BYTE PTR ds:[ebx]
  415827:	imul   eax,DWORD PTR [ecx-0x4b],0x8591db5c
  41582e:	arpl   WORD PTR [ebx+0x2e655692],bx
  415834:	sbb    eax,0x72395610
  415839:	hlt    
  41583a:	mov    DWORD PTR [edx+ecx*4+0x6c628062],esi
  415841:	in     eax,dx
  415842:	ret    0x8f91
  415845:	jns    0x4157e8
  415847:	enter  0xfd81,0xc5
  41584b:	in     eax,dx
  41584c:	jp     0x4158a8
  41584e:	add    edi,esi
  415850:	outs   dx,BYTE PTR ds:[esi]
  415851:	xor    edi,DWORD PTR [ecx-0x53]
  415854:	xchg   ebx,eax
  415855:	push   ss
  415856:	je     0x415888
  415858:	inc    ebx
  415859:	sub    ch,dh
  41585b:	inc    ebp
  41585c:	neg    BYTE PTR [ecx-0x71fe18bb]
  415862:	test   DWORD PTR [edi+0x78],esi
  415865:	outs   dx,DWORD PTR ds:[esi]
  415866:	outs   dx,DWORD PTR ds:[esi]
  415867:	aas    
  415868:	jp     0x4158de
  41586a:	mov    esp,0x3cf9d26e
  41586f:	and    DWORD PTR [edi-0x2b40bb0e],edx
  415875:	lods   al,BYTE PTR ds:[esi]
  415876:	in     eax,0x8b
  415878:	mov    bl,0x36
  41587a:	mov    ?,edi
  41587c:	leave  
  41587d:	mov    bl,0x12
  41587f:	mov    ah,dl
  415881:	test   al,0x45
  415883:	jns    0x415894
  415885:	mov    ah,0x47
  415887:	push   ds
  415888:	add    BYTE PTR [ebx],bl
  41588a:	fiadd  WORD PTR [esi*4+0x656c0e3f]
  415891:	jbe    0x415901
  415893:	(bad)  
  415895:	jbe    0x4158a5
  415897:	int    0xbe
  415899:	or     DWORD PTR [edi-0x5b24efd6],edi
  41589f:	outs   dx,DWORD PTR ds:[esi]
  4158a0:	data16 into 
  4158a2:	xchg   ebp,eax
  4158a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a4:	mov    ds:0x5d4fbcfa,eax
  4158a9:	mov    ds:0x9c779994,al
  4158ae:	jae    0x415873
  4158b0:	dec    edx
  4158b1:	stc    
  4158b2:	add    dl,ah
  4158b4:	(bad)  
  4158b5:	dec    bh
  4158b7:	pop    ebx
  4158b8:	push   esp
  4158b9:	mov    ebx,0x5abc1699
  4158be:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158c0:	cmp    edx,DWORD PTR [esi-0x5287116c]
  4158c6:	or     BYTE PTR [ecx+0x797383a9],cl
  4158cc:	push   cs
  4158cd:	repz fild WORD PTR [ebp+0x73]
  4158d1:	adc    ecx,DWORD PTR [eax-0x50]
  4158d4:	(bad)  
  4158d5:	mov    bh,0x56
  4158d7:	xor    esp,DWORD PTR ds:0xb66bfd3
  4158dd:	mov    bh,0x50
  4158df:	out    0xc0,eax
  4158e1:	stc    
  4158e2:	xor    ecx,DWORD PTR [eax-0x787362a1]
  4158e8:	in     eax,dx
  4158e9:	push   es
  4158ea:	xor    BYTE PTR ds:[ecx-0x5f],cl
  4158ee:	mov    al,0x9a
  4158f0:	dec    esi
  4158f1:	sbb    eax,esi
  4158f3:	mov    WORD PTR [eax+ecx*1-0x279d4fdb],gs
  4158fa:	cwde   
  4158fb:	jmp    0xf9a5f369
  415900:	mov    al,0xbb
  415902:	mov    bl,0x51
  415904:	in     al,dx
  415905:	scas   eax,DWORD PTR es:[edi]
  415906:	inc    esi
  415907:	mov    ?,WORD PTR [edx+edx*2+0x5e]
  41590b:	sbb    esp,DWORD PTR [edx]
  41590d:	fistp  DWORD PTR [eax+0x7a6e63b2]
  415913:	mov    eax,0xea1acc14
  415918:	(bad)  
  41591a:	add    eax,0x22f9a954
  41591f:	xor    eax,0xecad6f2d
  415924:	dec    ebp
  415925:	inc    BYTE PTR [edx+eax*1]
  415928:	pop    edi
  415929:	add    BYTE PTR [edx],dl
  41592b:	push   ss
  41592c:	or     edi,DWORD PTR [esi+0x2c899725]
  415932:	ror    DWORD PTR [esi],1
  415934:	jbe    0x41594f
  415936:	mov    eax,ds:0xe5f12c98
  41593b:	lahf   
  41593c:	pop    ebx
  41593d:	add    DWORD PTR [edi+0x2e42476f],ecx
  415943:	lock stos DWORD PTR es:[edi],eax
  415945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415946:	in     eax,0x77
  415948:	loope  0x415988
  41594a:	adc    DWORD PTR [eax],ecx
  41594c:	int    0xc5
  41594e:	mov    dh,0x88
  415950:	fnsave [esp+ebp*1]
  415953:	xor    esp,DWORD PTR [ebx]
  415955:	or     esp,DWORD PTR [esi-0x58]
  415958:	mov    edx,0xa90a0c68
  41595d:	and    eax,0x644bd881
  415962:	ins    DWORD PTR es:[edi],dx
  415963:	call   0xdf28ddb6
  415968:	arpl   si,si
  41596a:	add    edi,DWORD PTR [edx+0x6268011]
  415970:	test   esi,0x697f68dc
  415976:	stos   DWORD PTR es:[edi],eax
  415977:	fstp   TBYTE PTR [ebp-0x40]
  41597a:	xchg   esp,eax
  41597b:	mov    esp,0xc4fecb39
  415980:	retf   0x9f29
  415983:	pusha  
  415984:	or     ecx,edi
  415986:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  415988:	or     bl,ah
  41598a:	push   edx
  41598b:	(bad)  
  41598c:	ins    DWORD PTR es:[edi],dx
  41598d:	imul   edx,DWORD PTR [esi+0x57ab64d2],0x90ac33fc
  415997:	jmp    0x57619162
  41599c:	cmp    eax,0x1
  41599f:	rcl    DWORD PTR [esp+eiz*8],cl
  4159a2:	sub    al,bl
  4159a4:	sub    al,0x19
  4159a6:	outs   dx,DWORD PTR ds:[esi]
  4159a7:	mov    DWORD PTR [edx+eax*4-0x68],edx
  4159ab:	gs sti 
  4159ad:	retf   
  4159ae:	push   ds
  4159af:	in     al,0xb8
  4159b1:	js     0x415a10
  4159b3:	and    esi,DWORD PTR ds:[eax-0x1]
  4159b7:	test   DWORD PTR [ebx],eax
  4159b9:	xchg   esp,eax
  4159ba:	sbb    esi,DWORD PTR [edi+0x75]
  4159bd:	cmp    BYTE PTR [edx],dh
  4159bf:	repz stc 
  4159c1:	nop
  4159c2:	sbb    ch,BYTE PTR [esp+ebx*2+0x486799a0]
  4159c9:	xchg   BYTE PTR [eax-0x1b],bl
  4159cc:	inc    ebx
  4159cd:	ror    DWORD PTR [ebx+0x2a],0xe5
  4159d1:	adc    ah,dl
  4159d3:	test   BYTE PTR [esi+0x6d62f927],0xe7
  4159da:	or     al,0x6f
  4159dc:	scas   eax,DWORD PTR es:[edi]
  4159dd:	ret    
  4159de:	clc    
  4159df:	js     0x415972
  4159e1:	mov    esi,0x92bee543
  4159e6:	mov    bh,0x29
  4159e8:	mov    al,ds:0x689b28aa
  4159ed:	out    dx,al
  4159ee:	enter  0x193d,0x3a
  4159f2:	fninit 
  4159f4:	adc    BYTE PTR [ebx-0x202557fd],cl
  4159fa:	add    DWORD PTR [ecx+ebp*1],esp
  4159fd:	adc    al,0x83
  4159ff:	sahf   
  415a00:	push   esp
  415a01:	mov    ebx,0xdcbef0b5
  415a06:	pop    ss
  415a07:	into   
  415a08:	xchg   cl,bh
  415a0a:	ss lock sub al,0xcd
  415a0e:	cmp    DWORD PTR [ebp+0x22efb303],edx
  415a14:	mov    eax,0xe97739be
  415a19:	repz sbb BYTE PTR fs:[edx],bh
  415a1d:	dec    eax
  415a1e:	fldenv [ebp-0x443d47c8]
  415a24:	dec    ebx
  415a25:	jecxz  0x4159d7
  415a27:	sahf   
  415a28:	dec    ecx
  415a29:	xchg   ebx,eax
  415a2a:	cmp    al,0xa
  415a2c:	inc    eax
  415a2d:	dec    ebp
  415a2e:	pop    edx
  415a2f:	xor    BYTE PTR [eax+0x47],ah
  415a32:	mov    ebp,0x23324c1d
  415a37:	pop    ds
  415a38:	cmp    esi,0x1577e12b
  415a3e:	mov    al,0x76
  415a40:	xchg   edx,eax
  415a41:	sar    BYTE PTR [ebx+0x7977af93],0x37
  415a48:	popa   
  415a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4a:	jp     0x415ab3
  415a4c:	call   0xbb60e05b
  415a51:	scas   al,BYTE PTR es:[edi]
  415a52:	ret    
  415a53:	mov    ebp,0x666d268
  415a58:	sti    
  415a59:	xlat   BYTE PTR ds:[ebx]
  415a5a:	cld    
  415a5b:	cld    
  415a5c:	mov    esi,DWORD PTR [ebx]
  415a5e:	sbb    BYTE PTR [esi],ch
  415a60:	das    
  415a61:	imul   DWORD PTR [esi+0x3]
  415a64:	ja     0x415a96
  415a66:	push   cs
  415a67:	xchg   esi,eax
  415a68:	mov    dh,BYTE PTR [ecx]
  415a6a:	neg    BYTE PTR [esi+0x3]
  415a6d:	or     DWORD PTR [edx+0x3f],0x96e2f16e
  415a74:	lea    ebx,[esi+0x6c]
  415a77:	fdiv   QWORD PTR [edx-0xa2cc771]
  415a7d:	ss push ss
  415a7f:	mov    bl,0x10
  415a81:	ret    0x8b00
  415a84:	fwait
  415a85:	cwde   
  415a86:	jns    0x415a69
  415a88:	stos   BYTE PTR es:[edi],al
  415a89:	call   0x863b4584
  415a8e:	add    edx,esi
  415a90:	xchg   edi,eax
  415a91:	push   edx
  415a92:	mov    ecx,0xc7f577b6
  415a97:	or     BYTE PTR [ebx-0x713fb40c],dh
  415a9d:	loopne 0x415a3f
  415a9f:	test   eax,0x8748bbd1
  415aa4:	ds test eax,0x993059af
  415aaa:	cmc    
  415aab:	jle    0x415b1d
  415aad:	mov    ss,ebx
  415aaf:	data16 shr BYTE PTR [ebx+ebp*8-0x447f1e50],0xf6
  415ab8:	loope  0x415a4e
  415aba:	jp     0x415a5e
  415abc:	cmp    al,0x30
  415abe:	push   cs
  415abf:	inc    eax
  415ac0:	add    eax,0x436e2410
  415ac5:	push   ss
  415ac6:	cdq    
  415ac7:	xchg   ebp,eax
  415ac8:	sub    al,0xc7
  415aca:	pop    es
  415acb:	clc    
  415acc:	inc    edi
  415acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ace:	sub    cl,BYTE PTR [ebx+0x84cd9d2]
  415ad4:	mov    eax,ds:0xd9d1d5d5
  415ad9:	inc    esi
  415ada:	xor    DWORD PTR [edi],esp
  415adc:	mov    ds:0x304fddd5,al
  415ae1:	cmp    DWORD PTR [ebx+edx*8+0x7b],esi
  415ae5:	(bad)  
  415ae6:	hlt    
  415ae7:	xor    DWORD PTR [edx+ecx*1+0x1c],esp
  415aeb:	(bad)
  415aef:	xchg   DWORD PTR [edi],ebp
  415af1:	and    DWORD PTR ds:0x932c,ebp
  415af6:	(bad)  
  415af7:	or     DWORD PTR [eax],eax
  415af9:	add    al,0x46
  415afb:	or     esi,DWORD PTR [edx]
  415afd:	and    BYTE PTR [eax-0x66],ch
  415b00:	(bad)  
  415b02:	cmp    bl,bl
  415b04:	mov    eax,ds:0x815cab2a
  415b09:	int3   
  415b0a:	inc    esi
  415b0b:	pop    edx
  415b0c:	cmp    al,0x5b
  415b0e:	je     0x415ace
  415b10:	imul   esp,DWORD PTR [ebp-0x29],0x13
  415b14:	shl    BYTE PTR [ebx-0x2c],0x7c
  415b18:	and    ah,bh
  415b1a:	stc    
  415b1b:	push   ebp
  415b1c:	cld    
  415b1d:	mov    edi,0xfc954b2e
  415b22:	fisub  DWORD PTR [edx+0x46b5b2cd]
  415b28:	dec    ebp
  415b29:	nop
  415b2a:	loope  0x415aff
  415b2c:	jne    0x415b74
  415b2e:	add    ch,BYTE PTR [ecx+eiz*1-0x7a34a7e]
  415b35:	in     al,dx
  415b36:	sbb    dl,bh
  415b38:	ja     0x415b49
  415b3a:	pop    edx
  415b3b:	jo     0x415b30
  415b3d:	js     0x415b07
  415b3f:	mov    eax,0x7c9ef370
  415b44:	adc    ah,BYTE PTR [ecx-0x74a5227d]
  415b4a:	dec    esp
  415b4b:	mov    bl,BYTE PTR [ecx]
  415b4d:	popf   
  415b4e:	out    0xa2,al
  415b50:	jmp    0xa771c9b9
  415b55:	je     0x415b21
  415b57:	xchg   edi,eax
  415b58:	mov    dl,0x11
  415b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b5b:	jecxz  0x415b34
  415b5d:	std    
  415b5e:	js     0x415b59
  415b60:	or     ebx,edx
  415b62:	(bad)  
  415b63:	neg    esi
  415b65:	jmp    0xdc9c:0x71a69e3c
  415b6c:	out    dx,al
  415b6d:	imul   bl
  415b6f:	dec    esp
  415b70:	test   BYTE PTR [edx-0x8aacdf9],ch
  415b76:	cmp    BYTE PTR [ecx-0x43],bl
  415b79:	lea    ecx,[edi]
  415b7b:	push   0x38eb4582
  415b80:	jne    0x415bf1
  415b82:	lods   eax,DWORD PTR ds:[esi]
  415b83:	sub    esp,ebx
  415b85:	popa   
  415b86:	fwait
  415b87:	push   es
  415b88:	mov    eax,0xf953d011
  415b8d:	adc    DWORD PTR [ecx],0xffffff89
  415b90:	push   edx
  415b91:	pop    ds
  415b92:	pop    ss
  415b93:	sub    eax,0xcc7216d8
  415b98:	jbe    0x415b38
  415b9a:	mov    dl,0xca
  415b9c:	out    0x4,eax
  415b9e:	push   edx
  415b9f:	mov    al,0x92
  415ba1:	and    al,0xf2
  415ba3:	xchg   ebx,eax
  415ba4:	push   cs
  415ba5:	std    
  415ba6:	mov    ebx,cs
  415ba8:	repnz loope 0x415c07
  415bab:	fsub   QWORD PTR [eax]
  415bad:	add    al,0x50
  415baf:	std    
  415bb0:	sub    esp,0xfffffff7
  415bb3:	(bad)  
  415bb4:	outs   dx,DWORD PTR ds:[esi]
  415bb5:	das    
  415bb6:	aas    
  415bb7:	sar    DWORD PTR ds:0x5d6c96fe,1
  415bbd:	mov    ss,WORD PTR [edx]
  415bbf:	and    BYTE PTR ss:[edx-0x4b71c490],ch
  415bc6:	ins    DWORD PTR es:[edi],dx
  415bc7:	stos   BYTE PTR es:[edi],al
  415bc8:	and    eax,0xdb3ef8e2
  415bcd:	arpl   WORD PTR [ecx-0x21],di
  415bd0:	div    cl
  415bd2:	push   eax
  415bd3:	fst    QWORD PTR [ebx+0x15]
  415bd6:	jno    0x415c2d
  415bd8:	in     eax,0x6d
  415bda:	call   0xdf95b772
  415bdf:	add    DWORD PTR [esi],edx
  415be1:	mov    ebp,0xafd5f32d
  415be6:	in     eax,0xa4
  415be8:	mov    edx,0x87a9ae2e
  415bed:	sbb    BYTE PTR [eax-0x8934055],ah
  415bf3:	sbb    eax,0x35941d96
  415bf8:	loope  0x415b8e
  415bfa:	mov    di,0xeaf1
  415bfe:	loopne 0x415c49
  415c00:	push   cs
  415c01:	sub    edi,DWORD PTR [eax]
  415c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c04:	xchg   edi,eax
  415c05:	aam    0xa1
  415c07:	and    BYTE PTR [edi-0x9],al
  415c0a:	or     eax,0xb7fc145a
  415c0f:	stos   BYTE PTR es:[edi],al
  415c10:	pop    ds
  415c11:	inc    eax
  415c12:	add    ebx,ebp
  415c14:	xchg   esi,eax
  415c15:	add    DWORD PTR es:[eax+ebx*1+0xb58feee],ecx
  415c1d:	retf   
  415c1e:	inc    esp
  415c1f:	popa   
  415c20:	mov    DWORD PTR [eax-0x39809c7b],esp
  415c26:	lahf   
  415c27:	repnz loope 0x415bb3
  415c2a:	aad    0xde
  415c2c:	call   0xa56a25e6
  415c31:	mov    edi,0xb4f4fb2e
  415c36:	(bad)  
  415c37:	retf   
  415c38:	neg    DWORD PTR [edi+0x60748f0e]
  415c3e:	adc    ebx,DWORD PTR [ecx+ebp*1+0x63]
  415c42:	fs dec edx
  415c44:	inc    esp
  415c45:	pop    edx
  415c46:	xchg   BYTE PTR ds:[eax+0x1a],bh
  415c4a:	retf   
  415c4b:	fild   QWORD PTR [esi-0x41f1939c]
  415c51:	cwde   
  415c52:	loop   0x415bea
  415c54:	xchg   DWORD PTR [ebp-0x76d7c657],ebp
  415c5a:	retf   0xb02a
  415c5d:	pop    esp
  415c5e:	jg     0x415c62
  415c60:	sti    
  415c61:	push   ds
  415c62:	pop    ebx
  415c63:	(bad)  
  415c64:	sti    
  415c65:	(bad)  
  415c66:	popa   
  415c67:	inc    ebx
  415c68:	outs   dx,DWORD PTR ds:[esi]
  415c69:	mov    edx,0x684ef14f
  415c6e:	sub    eax,0xb23973d5
  415c73:	inc    edi
  415c74:	inc    eax
  415c75:	push   esp
  415c76:	stos   BYTE PTR es:[edi],al
  415c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c78:	pop    edx
  415c79:	mov    esi,0xa0edf03a
  415c7e:	loope  0x415c17
  415c80:	xchg   edx,eax
  415c81:	inc    esi
  415c82:	adc    ch,0xb6
  415c85:	push   edi
  415c86:	aaa    
  415c87:	mov    eax,ds:0x4c692941
  415c8c:	ror    BYTE PTR es:[ebx],0xde
  415c90:	mov    WORD PTR [ebp-0x68],cs
  415c93:	jecxz  0x415cb4
  415c95:	mov    al,0xe3
  415c97:	xchg   esp,eax
  415c98:	xor    DWORD PTR [ecx+0x15],eax
  415c9b:	and    eax,0xf66cc558
  415ca0:	dec    edi
  415ca1:	push   0x54
  415ca3:	rcl    DWORD PTR ds:[eax-0x10],0xe6
  415ca8:	sbb    BYTE PTR ds:0xdde4b224,dh
  415cae:	and    eax,0xa7909db
  415cb3:	jecxz  0x415ca6
  415cb5:	sub    cl,BYTE PTR [edi-0x28]
  415cb8:	lods   al,BYTE PTR ds:[esi]
  415cb9:	js     0x415c55
  415cbb:	dec    ecx
  415cbc:	jbe    0x415c73
  415cbe:	jne    0x415d21
  415cc0:	test   eax,0xe37ebbf7
  415cc5:	and    BYTE PTR [edx],ah
  415cc7:	cmp    DWORD PTR [eax+0x33],esp
  415cca:	cmp    al,0xa9
  415ccc:	cmp    al,0x7e
  415cce:	scas   al,BYTE PTR es:[edi]
  415ccf:	ds pop ebp
  415cd1:	fist   WORD PTR [ebp+0x7df543ed]
  415cd7:	outs   dx,DWORD PTR ds:[esi]
  415cd8:	mov    eax,ds:0x183263ba
  415cdd:	adc    al,0x16
  415cdf:	cmc    
  415ce0:	loope  0x415d53
  415ce2:	and    eax,0x88497836
  415ce7:	push   edi
  415ce9:	pop    eax
  415cea:	call   0xbf9a9469
  415cef:	mov    al,0x6
  415cf1:	scas   eax,DWORD PTR es:[edi]
  415cf2:	pop    ss
  415cf3:	fbstp  TBYTE PTR [ebx-0x3204e81e]
  415cf9:	jmp    0xee68:0x8e135125
  415d00:	lds    eax,FWORD PTR [ebp+0x5b]
  415d03:	cmp    eax,0xa0bc5b81
  415d08:	xchg   ecx,eax
  415d09:	fiadd  WORD PTR [edi]
  415d0b:	push   0xffffff86
  415d0d:	cli    
  415d0e:	and    ebp,DWORD PTR [ebx+0x19343386]
  415d14:	or     DWORD PTR [esi-0xefc3c04],ecx
  415d1a:	stc    
  415d1b:	pop    ebx
  415d1c:	les    edx,FWORD PTR [edi]
  415d1e:	xor    eax,DWORD PTR [edi]
  415d20:	in     al,0xcd
  415d22:	mov    bh,0x4a
  415d24:	lea    eax,[edi-0x49]
  415d27:	mov    al,ds:0x8603224e
  415d2c:	or     BYTE PTR [esi-0x42],0x80
  415d30:	mov    esi,0xcf27ffd1
  415d35:	loope  0x415cc5
  415d37:	iret   
  415d38:	dec    ecx
  415d39:	or     eax,0x56ace24a
  415d3e:	dec    eax
  415d3f:	adc    ch,dl
  415d41:	imul   eax,DWORD PTR [edi-0x17],0xfffffffa
  415d45:	mov    edx,esi
  415d47:	in     al,dx
  415d48:	loop   0x415d43
  415d4a:	sbb    BYTE PTR [edx-0x7973d38a],cl
  415d50:	scas   al,BYTE PTR es:[edi]
  415d51:	imul   ecx,DWORD PTR [edx],0x8dab4809
  415d57:	inc    eax
  415d58:	xchg   edi,eax
  415d59:	popa   
  415d5a:	sub    eax,0xa872f1bc
  415d5f:	lds    ebx,FWORD PTR [esi]
  415d61:	arpl   WORD PTR [edi+esi*1+0x42],ax
  415d65:	xchg   edi,eax
  415d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d67:	int3   
  415d68:	stos   DWORD PTR es:[edi],eax
  415d69:	test   DWORD PTR [edx+0x2e73fafd],ebp
  415d6f:	dec    esp
  415d70:	fimul  DWORD PTR [ecx+0x68c3434d]
  415d76:	mov    ds:0x22767626,eax
  415d7b:	sub    eax,0xf7ea2d5d
  415d80:	call   0xc74e:0x2644e890
  415d87:	or     DWORD PTR [esi],edx
  415d89:	lods   eax,DWORD PTR ds:[esi]
  415d8a:	mov    cl,0x50
  415d8c:	addr16 sub al,0x82
  415d8f:	dec    esp
  415d90:	mov    bl,0xbd
  415d92:	sar    BYTE PTR [esi-0x191ec7dd],1
  415d98:	inc    esp
  415d99:	ficom  DWORD PTR [edx+0x6130e3da]
  415d9f:	mov    dh,0x5b
  415da1:	adc    ch,al
  415da3:	xor    ch,BYTE PTR [eax-0x481bab2f]
  415da9:	xchg   ebp,eax
  415daa:	mov    edi,0x1a8b8cc2
  415daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db0:	(bad)  
  415db1:	call   0x755ffd4a
  415db6:	ins    DWORD PTR es:[edi],dx
  415db7:	jmp    0x415dc9
  415db9:	lock add eax,0xe2484040
  415dbf:	in     al,dx
  415dc0:	sub    eax,0x18498f44
  415dc5:	cwde   
  415dc6:	xchg   ebx,eax
  415dc7:	sbb    al,0x6b
  415dc9:	adc    esp,DWORD PTR [ebx-0x49263df5]
  415dcf:	cmp    BYTE PTR [eax-0x26],dl
  415dd2:	mov    dl,0x25
  415dd4:	mov    eax,ds:0xce59c0a
  415dd9:	inc    ecx
  415dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ddb:	retf   0x1339
  415dde:	gs dec ebp
  415de0:	fxch   st(6)
  415de2:	mov    ds:0xa12ed4a6,eax
  415de7:	and    eax,0x9ee3b4ee
  415dec:	or     edi,DWORD PTR [ebx+0x6aa9a045]
  415df2:	inc    edx
  415df3:	mov    ebx,0x54905fe5
  415df8:	sahf   
  415df9:	sub    al,0xa1
  415dfb:	sbb    bh,BYTE PTR [edx-0x6e]
  415dfe:	mov    ebx,0xae03f4c0
  415e03:	jnp    0x415e7f
  415e05:	lods   eax,DWORD PTR ds:[esi]
  415e06:	inc    ebp
  415e07:	sahf   
  415e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e09:	mov    edi,0x4fc9e25f
  415e0e:	and    ah,BYTE PTR [esi-0x2f]
  415e11:	and    BYTE PTR [eax+ecx*1+0x1],ah
  415e15:	sbb    BYTE PTR ds:0x5159edb5,dl
  415e1b:	cmp    ebp,DWORD PTR [edi+0x778bc710]
  415e21:	and    ah,bh
  415e23:	and    al,0xf4
  415e25:	data16 loope 0x415e8d
  415e28:	push   esi
  415e29:	scas   al,BYTE PTR es:[edi]
  415e2a:	mov    ah,BYTE PTR [ebp+edx*8-0x49]
  415e2e:	jae    0x415df1
  415e30:	adc    eax,0xa082f8c9
  415e35:	enter  0x9584,0x6e
  415e39:	mov    ecx,0x57a933c6
  415e3e:	(bad)  
  415e40:	add    al,0x38
  415e42:	push   ecx
  415e43:	fwait
  415e44:	out    0x8f,al
  415e46:	sbb    DWORD PTR [ecx+0x43],ebx
  415e49:	fcom   QWORD PTR [esi+0x7d]
  415e4c:	adc    DWORD PTR [esi],0xffffffd2
  415e4f:	sub    BYTE PTR [ebx+edi*2-0x34],al
  415e53:	mov    ah,BYTE PTR [esi+0x43]
  415e56:	shl    ebp,1
  415e58:	jp     0x415e53
  415e5a:	mov    esp,0x5d4ccb70
  415e5f:	jmp    0x597becc9
  415e64:	push   0x19e73899
  415e69:	xchg   bl,dh
  415e6b:	stos   BYTE PTR es:[edi],al
  415e6c:	inc    edi
  415e6d:	(bad)  
  415e6e:	jecxz  0x415e49
  415e70:	sub    al,0x30
  415e72:	dec    esi
  415e73:	addr16 jnp 0x415dfe
  415e76:	es xchg esp,eax
  415e78:	ror    BYTE PTR [ebp+0x4e],0xf9
  415e7c:	lahf   
  415e7d:	imul   edi,esi,0x314293af
  415e83:	jnp    0x415ef7
  415e85:	or     eax,0x49fde3f6
  415e8a:	push   ss
  415e8b:	xchg   ebx,eax
  415e8c:	(bad)  
  415e8d:	test   al,0xda
  415e8f:	ja     0x415e2e
  415e91:	int    0x69
  415e93:	cmp    eax,0x9e225a62
  415e98:	inc    ebx
  415e99:	mov    eax,ds:0x28b1d51f
  415e9e:	and    eax,0xb824d79a
  415ea3:	test   BYTE PTR [edx+0x6],ch
  415ea6:	popf   
  415ea7:	std    
  415ea8:	dec    esp
  415eaa:	lea    edx,[ebp-0x7fbaf51e]
  415eb0:	and    bl,BYTE PTR [eax-0x1b47a235]
  415eb6:	(bad)  
  415eb7:	mov    al,ds:0xd36642d2
  415ebc:	lods   eax,DWORD PTR ds:[esi]
  415ebd:	fiadd  WORD PTR [eax+eiz*4-0x7e]
  415ec1:	(bad)  
  415ec2:	outs   dx,BYTE PTR ds:[esi]
  415ec3:	add    ecx,edx
  415ec5:	adc    al,0xe8
  415ec7:	clc    
  415ec8:	jns    0x415eb5
  415eca:	stos   DWORD PTR es:[edi],eax
  415ecb:	loop   0x415ed0
  415ecd:	arpl   WORD PTR [esi+0x6be81c71],bx
  415ed3:	push   es
  415ed4:	ret    
  415ed5:	and    ch,dh
  415ed7:	push   esi
  415ed8:	jecxz  0x415ebc
  415eda:	aam    0x1
  415edc:	pop    ebx
  415edd:	adc    BYTE PTR [ebp+0x4cda4a9b],dl
  415ee3:	fcomp  QWORD PTR [ebx-0x33fd25f3]
  415ee9:	pop    esp
  415eea:	push   edi
  415eeb:	out    0xd7,eax
  415eed:	nop
  415eee:	scas   al,BYTE PTR es:[edi]
  415eef:	sbb    DWORD PTR [edi+0x29cee8b8],edx
  415ef5:	ja     0x415f25
  415ef7:	mov    edi,0x6a4ea77f
  415efc:	imul   esi,DWORD PTR ss:[ecx],0xf
  415f00:	adc    eax,0x36317083
  415f05:	stc    
  415f06:	int3   
  415f07:	sbb    edi,DWORD PTR [ecx-0x600638f8]
  415f0d:	ss cli 
  415f0f:	int3   
  415f10:	dec    esp
  415f11:	addr16 xchg edi,eax
  415f13:	add    al,BYTE PTR [edi]
  415f15:	shr    BYTE PTR [esi+eiz*2+0x5d],1
  415f19:	and    eax,ebx
  415f1b:	ror    DWORD PTR [edx+0x47b16b9d],0x76
  415f22:	stc    
  415f23:	mov    ebp,0x5bb5b56b
  415f28:	loopne 0x415f43
  415f2a:	cpuid  
  415f2c:	in     al,dx
  415f2d:	aaa    
  415f2e:	mov    ah,0xf8
  415f30:	test   DWORD PTR [eax+0x16],esp
  415f33:	adc    BYTE PTR [eax],ah
  415f35:	sbb    al,0x21
  415f37:	in     al,0x35
  415f39:	leave  
  415f3a:	push   0xb71f81f6
  415f3f:	aas    
  415f40:	mov    edx,0x5b6fec86
  415f45:	test   BYTE PTR [esi-0x316a6854],dh
  415f4b:	pop    edx
  415f4c:	jne    0x415f6d
  415f4e:	fadd   QWORD PTR [eax-0x65]
  415f51:	ins    DWORD PTR es:[edi],dx
  415f52:	clc    
  415f53:	mov    edi,0x4c6517b6
  415f58:	mov    ecx,0x372ba845
  415f5d:	loope  0x415f41
  415f5f:	pop    edx
  415f60:	jp     0x415f4d
  415f62:	addr16 mov dh,0xda
  415f65:	into   
  415f66:	sbb    esi,edi
  415f68:	lea    esp,[ebx]
  415f6a:	mov    ebp,0xd797a1a4
  415f6f:	xor    eax,0x424be27a
  415f74:	mov    ecx,0xe2ff1ba7
  415f79:	mov    ?,WORD PTR [ebp+0x22f51ba]
  415f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f80:	cmp    DWORD PTR [esi+0x5d3ee5b2],0x13
  415f87:	jne    0x415fde
  415f89:	fdivr  QWORD PTR [eax+ebx*2-0x35]
  415f8d:	je     0x415fcb
  415f8f:	jo     0x415fa3
  415f91:	jl     0x415f20
  415f93:	arpl   WORD PTR [edi],sp
  415f95:	pop    edx
  415f96:	xor    DWORD PTR [ebx],ecx
  415f98:	repz xchg edi,eax
  415f9a:	dec    esp
  415f9b:	mov    ebx,0x399e9da
  415fa0:	scas   al,BYTE PTR es:[edi]
  415fa1:	scas   eax,DWORD PTR es:[edi]
  415fa2:	fdiv   DWORD PTR [edi+0x6c807314]
  415fa8:	(bad)  
  415fa9:	pusha  
  415faa:	(bad)  
  415fab:	cld    
  415fac:	cwde   
  415fad:	inc    edi
  415fae:	loop   0x41602b
  415fb0:	mov    al,ds:0x83cfb612
  415fb5:	mov    dl,0x87
  415fb7:	mov    ebx,0xbb970024
  415fbc:	ss push esi
  415fbe:	nop
  415fbf:	outs   dx,BYTE PTR ds:[esi]
  415fc0:	mov    al,ds:0xa2e69d41
  415fc5:	pusha  
  415fc6:	mov    ch,0x24
  415fc8:	pop    ss
  415fc9:	and    bl,dl
  415fcb:	sbb    ebx,DWORD PTR [ebx]
  415fcd:	xor    bh,BYTE PTR [esi+0x2730a8f6]
  415fd3:	jb     0x416022
  415fd5:	stc    
  415fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd7:	pop    ebp
  415fd8:	sbb    ecx,DWORD PTR [ebp+0xc]
  415fdb:	xchg   esi,eax
  415fdc:	mov    ch,0xa3
  415fde:	push   cs
  415fdf:	sub    eax,0xa46ba985
  415fe4:	out    0x90,al
  415fe6:	jae    0x415f71
  415fe8:	sub    eax,0x6f649245
  415fed:	(bad)  
  415fef:	xchg   ecx,eax
  415ff0:	xchg   edx,eax
  415ff1:	and    eax,0xf8e6fbb4
  415ff6:	scas   eax,DWORD PTR es:[edi]
  415ff7:	mul    BYTE PTR [edx+0x2fecbd88]
  415ffd:	jns    0x415fb2
  415fff:	sub    edi,edi
  416001:	jno    0x416066
  416003:	out    dx,al
  416004:	inc    esp
  416005:	and    ah,BYTE PTR [ecx+ecx*2-0x37]
  416009:	outs   dx,DWORD PTR ds:[esi]
  41600a:	mov    ebp,0x9a252d3c
  41600f:	mov    eax,esi
  416011:	mov    bl,0x61
  416013:	(bad)
  416016:	leave  
  416017:	adc    ecx,DWORD PTR [edi+ebx*1]
  41601a:	sbb    al,al
  41601c:	mov    cl,0xab
  41601e:	pop    ecx
  41601f:	mov    ah,0x5b
  416021:	mov    esi,0xe44b86a0
  416026:	(bad)  
  416027:	add    eax,0x4729e3f0
  41602c:	call   0x1ea3a191
  416031:	sbb    BYTE PTR [ecx+0x7c0e7b31],0xb7
  416038:	xchg   esp,eax
  416039:	add    DWORD PTR [ebx],0x687afab
  41603f:	lds    ebx,FWORD PTR [ecx-0x2cfcd8d8]
  416045:	add    bl,BYTE PTR [ebp-0x37]
  416048:	jo     0x415fd4
  41604a:	jle    0x415fe6
  41604c:	ins    BYTE PTR es:[edi],dx
  41604d:	not    BYTE PTR [ecx-0x7dcbd490]
  416053:	jge    0x4160a9
  416055:	mov    ebx,DWORD PTR [eax]
  416057:	add    eax,0x245ee30a
  41605c:	inc    ebp
  41605d:	fiadd  WORD PTR [eax]
  41605f:	loope  0x416059
  416061:	out    0xdb,eax
  416063:	sbb    dl,bl
  416065:	lock adc DWORD PTR ds:0xcec603ad,0xffffffe7
  41606d:	jns    0x41608b
  41606f:	je     0x4160c5
  416071:	inc    edi
  416072:	add    DWORD PTR [esi],eax
  416074:	xor    BYTE PTR [esi+eax*4-0x3a],0xb2
  416079:	inc    esi
  41607a:	ret    
  41607b:	sub    eax,0x77927547
  416080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416081:	cdq    
  416082:	cmp    esi,DWORD PTR es:[ebx+0x6c954d34]
  416089:	adc    al,0xe6
  41608b:	ins    BYTE PTR es:[edi],dx
  41608c:	inc    esi
  41608d:	ins    BYTE PTR es:[edi],dx
  41608e:	xor    DWORD PTR [eax],0xef3511bf
  416094:	retf   0xfda4
  416097:	push   ebx
  416098:	mov    ds:0xd7117b1,al
  41609d:	push   edi
  41609e:	push   eax
  41609f:	sbb    al,0xd9
  4160a1:	out    0xc3,al
  4160a3:	push   esp
  4160a4:	ficomp DWORD PTR fs:[esi+0x753af89]
  4160ab:	mov    ah,0xe2
  4160ad:	les    esi,FWORD PTR [edi]
  4160af:	loopne 0x41609d
  4160b1:	mov    ecx,ecx
  4160b3:	repz or BYTE PTR [edi+eax*8+0x7a],0xce
  4160b9:	sbb    al,0x2
  4160bb:	std    
  4160bc:	fcomp  st(7)
  4160be:	push   ss
  4160bf:	fwait
  4160c0:	aaa    
  4160c1:	add    al,BYTE PTR [eax]
  4160c3:	cmp    ebx,esi
  4160c5:	pop    ebx
  4160c6:	cwde   
  4160c7:	mov    eax,ds:0x95d0ff2c
  4160cc:	bt     ebx,0x5d
  4160d0:	out    0xfc,al
  4160d2:	lock xchg edi,eax
  4160d4:	hlt    
  4160d5:	push   cs
  4160d6:	aad    0x7
  4160d8:	push   es
  4160d9:	adc    cl,BYTE PTR [ebx-0x63]
  4160dc:	adc    DWORD PTR [ebx+0x4b],edx
  4160df:	stos   BYTE PTR es:[edi],al
  4160e0:	nop
  4160e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e2:	xchg   BYTE PTR [eax-0x7c],bh
  4160e5:	cli    
  4160e6:	jle    0x416100
  4160e8:	adc    BYTE PTR [edi],dl
  4160ea:	mov    dl,0xce
  4160ec:	into   
  4160ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ee:	jl     0x416077
  4160f0:	sub    edx,DWORD PTR [edi]
  4160f2:	popf   
  4160f3:	fld    TBYTE PTR [eax*1-0x6985a90d]
  4160fa:	jmp    FWORD PTR [ecx-0x44]
  4160fd:	dec    edi
  4160fe:	rcr    BYTE PTR [edi+0x7f465c78],0x60
  416105:	jnp    0x4160a6
  416107:	imul   ecx,DWORD PTR ds:0x7797fb98,0xdde9774c
  416111:	jg     0x41612c
  416113:	or     ebp,DWORD PTR [esi-0x30]
  416116:	loop   0x416128
  416118:	popf   
  416119:	or     ah,BYTE PTR [eax-0x76]
  41611c:	scas   al,BYTE PTR es:[edi]
  41611d:	jns    0x4160cb
  41611f:	cmp    al,0x1
  416121:	fld    TBYTE PTR [edx+0x1c]
  416124:	mov    eax,0x6811cee4
  416129:	sti    
  41612a:	inc    eax
  41612b:	das    
  41612c:	jns    0x416176
  41612e:	dec    esi
  41612f:	push   esi
  416130:	mov    edi,DWORD PTR [esi+0x62]
  416133:	sbb    BYTE PTR [esi-0x3d],0x45
  416137:	push   es
  416138:	and    cl,BYTE PTR [ecx]
  41613a:	aas    
  41613b:	mov    esp,0xc69702e8
  416140:	push   0xfed3bba3
  416145:	fcom   QWORD PTR [edx+0x6084a8db]
  41614b:	push   ss
  41614c:	test   ch,0x65
  41614f:	ds gs push 0x67
  416153:	mov    ecx,0x8837c7d6
  416158:	ins    DWORD PTR es:[edi],dx
  416159:	xchg   ebp,eax
  41615a:	add    al,0xb3
  41615c:	cs mov edx,0x67e63b6b
  416162:	lahf   
  416163:	push   ecx
  416164:	lds    esi,FWORD PTR [edx-0x204b0635]
  41616a:	adc    al,BYTE PTR [edx-0x58]
  41616d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41616e:	mov    dl,0x11
  416170:	xchg   ebp,eax
  416171:	dec    edx
  416172:	push   es
  416173:	adc    eax,0xc22f2759
  416178:	out    dx,eax
  416179:	pop    ds
  41617a:	pop    eax
  41617b:	pop    es
  41617c:	cli    
  41617d:	mov    al,BYTE PTR [edx+0x7f]
  416180:	mov    fs,WORD PTR [ebx]
  416182:	or     ebx,DWORD PTR [ecx-0x2b59ba53]
  416188:	jo     0x41610f
  41618a:	test   DWORD PTR cs:[edx+0x20c87d59],esi
  416191:	push   ss
  416192:	rcr    bh,cl
  416194:	loop   0x416146
  416196:	ror    DWORD PTR [edx+0x49],1
  416199:	sub    cl,BYTE PTR [ebx]
  41619b:	aaa    
  41619c:	es pushf 
  41619e:	and    DWORD PTR [edx-0x66],esi
  4161a1:	gs mov ebx,0x15443028
  4161a7:	mov    ebx,0x317de7b7
  4161ac:	jo     0x41619e
  4161ae:	clc    
  4161af:	ficom  WORD PTR [eax+0x49671bc7]
  4161b5:	mov    al,0x63
  4161b7:	push   cs
  4161b8:	test   bh,al
  4161ba:	jle    0x416169
  4161bc:	out    0x6d,al
  4161be:	(bad)  
  4161bf:	pop    ebp
  4161c0:	mov    esi,0xd95c39b0
  4161c5:	xchg   ebp,eax
  4161c6:	sbb    dl,BYTE PTR [ecx]
  4161c8:	and    eax,0xdd077754
  4161cd:	fidivr WORD PTR [ecx-0x41]
  4161d0:	scas   eax,DWORD PTR es:[edi]
  4161d1:	or     ebx,eax
  4161d3:	dec    ebp
  4161d4:	rcl    DWORD PTR [ebp+0x28c07cbd],1
  4161da:	pop    eax
  4161db:	jge    0x4161d0
  4161dd:	js     0x416204
  4161df:	aad    0x3a
  4161e1:	and    al,BYTE PTR [ebx+0x7a6dd4ad]
  4161e7:	push   0xffffff9a
  4161e9:	stos   BYTE PTR es:[edi],al
  4161ea:	mov    bl,BYTE PTR [edx-0x79]
  4161ed:	call   0xcc8a:0xb5b72974
  4161f4:	and    eax,0x8610aa8f
  4161f9:	daa    
  4161fa:	int3   
  4161fb:	dec    eax
  4161fc:	das    
  4161fd:	je     0x416194
  4161ff:	adc    BYTE PTR [ecx-0x14bf6b7e],dh
  416205:	lea    ebx,ds:0xb7003cf3
  41620b:	sub    eax,0x919b37b3
  416210:	loop   0x4161b8
  416212:	or     edi,DWORD PTR [ebx+0x2c7548d2]
  416218:	cmp    eax,0x9ff4f2a4
  41621d:	ss push ss
  41621f:	push   edi
  416220:	not    DWORD PTR [ebx]
  416222:	inc    edi
  416223:	int3   
  416224:	imul   edi,DWORD PTR [esi+0x74],0x21
  416228:	retf   0xd30c
  41622b:	jbe    0x416291
  41622d:	cmp    BYTE PTR [esi],dl
  41622f:	popf   
  416230:	cs in  eax,dx
  416232:	pop    ebp
  416233:	icebp  
  416234:	fdivr  QWORD PTR ds:0xc8639392
  41623a:	dec    eax
  41623b:	ret    0x8878
  41623e:	stc    
  41623f:	cmp    BYTE PTR [ecx+0x15],dh
  416242:	or     eax,0xa11bba8
  416247:	jmp    DWORD PTR [edi]
  416249:	(bad)  
  41624a:	dec    ebp
  41624b:	and    DWORD PTR [ecx-0x1ca91e6d],eax
  416251:	scas   eax,DWORD PTR es:[edi]
  416252:	shr    DWORD PTR [edx+0x62411fe1],cl
  416258:	adc    eax,ebx
  41625a:	pop    edx
  41625b:	inc    eax
  41625c:	dec    esi
  41625d:	gs dec esp
  41625f:	mov    ebp,0x7316a6ed
  416264:	and    DWORD PTR [edx+esi*1-0x2c0cb42d],0xe
  41626c:	fdivr  DWORD PTR [eax+edx*4]
  41626f:	adc    BYTE PTR [ebx+0x2a],0x1d
  416273:	mov    cl,0x4d
  416275:	shl    bh,0x2f
  416278:	sahf   
  416279:	or     al,0xe7
  41627b:	leave  
  41627c:	lods   al,BYTE PTR ds:[esi]
  41627d:	cdq    
  41627e:	mov    dh,0x7e
  416280:	jb     0x4162b9
  416282:	xlat   BYTE PTR ds:[ebx]
  416283:	lock jb 0x41626d
  416286:	ins    DWORD PTR es:[edi],dx
  416287:	xchg   edi,eax
  416288:	adc    DWORD PTR [ebp+0x709b77c],edx
  41628e:	add    esi,eax
  416290:	test   BYTE PTR [edi+0x52],ch
  416293:	jg     0x4162ec
  416295:	mov    ds:0xa7aa15a0,al
  41629a:	and    edi,eax
  41629c:	push   esp
  41629d:	or     DWORD PTR [ebp-0x60],ebp
  4162a0:	push   esi
  4162a1:	xor    al,0xd9
  4162a3:	sub    DWORD PTR [ecx+0x364acb19],edi
  4162a9:	pusha  
  4162aa:	pop    ss
  4162ab:	fild   DWORD PTR [edx-0xc6cbe7]
  4162b1:	pop    ecx
  4162b2:	ret    
  4162b3:	lods   al,BYTE PTR ds:[esi]
  4162b4:	sub    BYTE PTR [ebx],bl
  4162b6:	push   ecx
  4162b7:	mov    ecx,0xa6472d3c
  4162bc:	add    cl,dl
  4162be:	adc    eax,0x27fdc0cc
  4162c3:	jo     0x416288
  4162c5:	add    ah,BYTE PTR [eax]
  4162c7:	push   0x9d276a2b
  4162cc:	das    
  4162cd:	pop    ecx
  4162ce:	das    
  4162cf:	jo     0x416310
  4162d1:	push   0x3333251d
  4162d6:	mov    ebx,0x8257f2cc
  4162db:	jmp    0x5079e659
  4162e0:	sar    ebp,1
  4162e2:	mov    eax,eax
  4162e4:	int3   
  4162e5:	aas    
  4162e6:	cmp    BYTE PTR [edx+0x47],dl
  4162e9:	push   cs
  4162ea:	adc    al,0x6b
  4162ec:	bound  eax,QWORD PTR es:[esi]
  4162ef:	fisttp QWORD PTR [esi]
  4162f1:	or     al,0x83
  4162f3:	and    al,0x5
  4162f5:	jmp    0xad4a:0x883b78f6
  4162fc:	pusha  
  4162fd:	icebp  
  4162fe:	stos   DWORD PTR es:[edi],eax
  4162ff:	dec    ecx
  416300:	shld   DWORD PTR [edx],ebx,cl
  416303:	rcl    BYTE PTR [edx-0x76de1a02],1
  416309:	std    
  41630a:	add    DWORD PTR [edx-0x443d5858],eax
  416310:	mov    WORD PTR [edi],ds
  416312:	push   eax
  416313:	nop
  416314:	sbb    ebp,DWORD PTR [ebx+0x46]
  416317:	jp     0x41629d
  416319:	leave  
  41631a:	mov    ebp,esp
  41631c:	jnp    0x41635b
  41631e:	xor    ch,BYTE PTR [edx-0x8]
  416321:	out    dx,al
  416322:	xor    dl,BYTE PTR [esi+0x5e]
  416325:	retf   0xc5ec
  416328:	int    0xf5
  41632a:	fisubr DWORD PTR [edi]
  41632c:	loopne 0x4163a4
  41632e:	fiadd  WORD PTR [ebp+0x33]
  416331:	lds    esi,FWORD PTR [edx+0x4e]
  416334:	push   ecx
  416335:	xor    al,0xb5
  416337:	or     al,0x5f
  416339:	push   ebp
  41633a:	scas   eax,DWORD PTR es:[edi]
  41633b:	fld    TBYTE PTR [esi]
  41633d:	(bad)  
  41633e:	fisub  WORD PTR [edi+0x7637b6d2]
  416344:	shl    esp,0xe5
  416347:	ficomp WORD PTR [edi-0x66]
  41634a:	push   eax
  41634b:	adc    cl,BYTE PTR [ebx-0x218cc68f]
  416351:	bnd call 0x457b0401
  416357:	and    ah,BYTE PTR [ebp-0x77]
  41635a:	push   ecx
  41635b:	ror    BYTE PTR ss:[eax-0x7c],cl
  41635f:	push   cs
  416360:	mov    esi,0x6d3259ef
  416365:	les    edx,FWORD PTR [ecx+ebx*2]
  416368:	jb     0x4163d7
  41636a:	dec    ebp
  41636b:	sbb    DWORD PTR [edi+0x769123b0],0x13
  416372:	arpl   WORD PTR [ebp+0x49],cx
  416375:	inc    ebx
  416376:	or     BYTE PTR [eax+0x94aa604],ah
  41637c:	test   al,0x66
  41637e:	push   edi
  41637f:	cmp    eax,0x6823923b
  416384:	scas   al,BYTE PTR es:[edi]
  416385:	test   BYTE PTR [edi],bh
  416387:	cli    
  416388:	je     0x4163bd
  41638a:	adc    eax,0x2a3a1117
  41638f:	(bad)  
  416390:	dec    eax
  416391:	mov    bh,0xa1
  416393:	rol    cl,cl
  416395:	mov    eax,0xbe61541f
  41639a:	icebp  
  41639b:	sub    al,0xd0
  41639d:	ss pushf 
  41639f:	sbb    bh,BYTE PTR [esi+0x4c]
  4163a2:	popf   
  4163a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163a4:	dec    esi
  4163a5:	daa    
  4163a6:	scas   eax,DWORD PTR es:[edi]
  4163a7:	hlt    
  4163a8:	ds mov dh,0x65
  4163ab:	(bad)  
  4163ac:	cmp    eax,esp
  4163ae:	push   ebp
  4163af:	in     al,dx
  4163b0:	(bad)  
  4163b1:	or     dl,BYTE PTR [edx+0x2b]
  4163b4:	pop    ss
  4163b5:	jno    0x4163e2
  4163b7:	fiadd  DWORD PTR [ebx]
  4163b9:	pop    ebp
  4163ba:	mov    esp,0x8bbc5d89
  4163bf:	push   ebp
  4163c0:	or     BYTE PTR [ebx],dh
  4163c2:	rol    BYTE PTR [ebx],1
  4163c4:	(bad)  
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	xchg   ecx,eax
  4165c5:	loop   0x4165a5
  4165c7:	call   0xd5bb:0x41ee7d5a
  4165ce:	std    
  4165cf:	mov    dh,0x63
  4165d1:	cwde   
  4165d2:	or     eax,0x119
  4165d7:	add    BYTE PTR [ebx+0x3a],al
  4165da:	pop    esp
  4165db:	inc    ebx
  4165dc:	jne    0x416650
  4165de:	jb     0x416645
  4165e0:	outs   dx,BYTE PTR ds:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0xd988cf31
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [esi-0x13fffffd],ch
  419e8a:	adc    al,0x16
  419e8c:	mov    eax,ds:0x333df668
  419e91:	add    BYTE PTR [eax],0xd9
  419e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e95:	push   edx
  419e96:	scas   eax,DWORD PTR es:[edi]
  419e97:	push   0xb1ef1ece
  419e9c:	sub    edx,DWORD PTR [ebx]
  419e9e:	mov    al,ds:0x135bfd4f
  419ea3:	idiv   BYTE PTR [ecx-0x627d5638]
  419ea9:	sub    dh,BYTE PTR [ecx-0x79782f59]
  419eaf:	out    dx,eax
  419eb0:	ins    DWORD PTR es:[edi],dx
  419eb1:	mov    ebx,0x444b7bdc
  419eb6:	pop    eax
  419eb7:	mov    ebx,0x77b26494
  419ebc:	fdivr  QWORD PTR [ecx]
  419ebe:	push   ebx
  419ebf:	ror    BYTE PTR [esi+0x34],cl
  419ec2:	out    0xe1,eax
  419ec4:	mov    al,0x0
  419ec6:	or     eax,0x3cb0c9ef
  419ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ecc:	push   ebx
  419ecd:	mov    dh,0xa8
  419ecf:	in     eax,dx
  419ed0:	in     eax,0x5b
  419ed2:	sbb    DWORD PTR [eax],0x870d233d
  419ed8:	mov    esi,0x8617ec82
  419edd:	pop    ebx
  419ede:	adc    BYTE PTR [esi],bh
  419ee0:	xor    cl,BYTE PTR [edx-0x70]
  419ee3:	scas   al,BYTE PTR es:[edi]
  419ee4:	out    dx,eax
  419ee5:	xchg   esi,eax
  419ee6:	pop    edi
  419ee7:	add    al,0xc0
  419ee9:	out    dx,eax
  419eea:	popa   
  419eeb:	add    eax,0x58787e1a
  419ef0:	dec    esp
  419ef1:	xchg   ebx,eax
  419ef2:	and    edi,ecx
  419ef4:	out    dx,eax
  419ef5:	sub    BYTE PTR [edi-0x38],bh
  419ef8:	pop    ds
  419ef9:	nop
  419efa:	inc    ecx
  419efb:	pop    esi
  419efc:	jmp    0xd557:0xdafe844b
  419f03:	(bad)  
  419f04:	push   edx
  419f05:	in     eax,dx
  419f06:	ret    
  419f07:	cmp    al,0xd3
  419f09:	push   edx
  419f0a:	mov    cl,0xea
  419f0c:	adc    al,0x25
  419f0e:	xor    BYTE PTR [eax],dl
  419f10:	sub    BYTE PTR [ebp-0x6622381f],cl
  419f16:	repz mov cl,0x66
  419f19:	sahf   
  419f1a:	mov    ebp,0xdc3b72d5
  419f1f:	push   eax
  419f20:	iret   
  419f21:	ss out dx,al
  419f23:	ins    BYTE PTR es:[edi],dx
  419f24:	lods   eax,DWORD PTR ds:[esi]
  419f25:	sub    al,0xd9
  419f27:	js     0x419ef3
  419f29:	jmp    0x419f07
  419f2b:	loopne 0x419f45
  419f2d:	add    DWORD PTR [ebp+0x270e5d71],edi
  419f33:	mov    eax,0x55ebe2f0
  419f38:	lods   al,BYTE PTR ds:[esi]
  419f39:	inc    esi
  419f3a:	out    dx,al
  419f3b:	or     BYTE PTR [esp+eiz*2],cl
  419f3e:	lahf   
  419f3f:	mov    al,cl
  419f41:	cwde   
  419f42:	sbb    al,0xe5
  419f44:	sub    edx,DWORD PTR [edi+0x59fb99a]
  419f4a:	loop   0x419faf
  419f4c:	int    0xac
  419f4e:	mov    ebp,DWORD PTR [edi-0x5e3dc7ee]
  419f54:	stos   BYTE PTR es:[edi],al
  419f55:	sub    DWORD PTR [ebp+esi*1-0x6ab4d474],esp
  419f5c:	and    al,0x34
  419f5e:	mov    ch,0xd0
  419f60:	xor    edi,eax
  419f62:	jg     0x419f80
  419f64:	retf   
  419f65:	cmp    edx,DWORD PTR [ecx-0x23]
  419f68:	dec    ebp
  419f69:	pop    esi
  419f6a:	dec    edx
  419f6b:	iret   
  419f6c:	or     al,0xc5
  419f6f:	loope  0x419fcb
  419f71:	and    BYTE PTR [esi+eiz*2],al
  419f74:	enter  0xdb7,0xa8
  419f78:	rol    DWORD PTR [esi],0x5c
  419f7b:	sub    ebx,DWORD PTR [edi+0x3db7a4b0]
  419f81:	pop    esi
  419f82:	mov    eax,ds:0x92f2939c
  419f87:	fs jmp 0x99e8:0xb13a7f57
  419f8f:	dec    ebp
  419f90:	add    al,0x2d
  419f92:	cli    
  419f93:	imul   esp,DWORD PTR [esi+ebp*1-0x2603d378],0xffffff95
  419f9b:	push   ds
  419f9c:	callw  0xdcd9
  419fa0:	lods   eax,DWORD PTR ds:[esi]
  419fa1:	push   edi
  419fa2:	jmp    0x6802:0x9ee7f0b9
  419fa9:	aaa    
  419faa:	repnz fmul DWORD PTR [edi-0x2e9546a]
  419fb1:	cli    
  419fb2:	push   edx
  419fb3:	or     ebx,esp
  419fb5:	pop    eax
  419fb6:	call   0xd48d:0x8965e256
  419fbd:	xlat   BYTE PTR ds:[ebx]
  419fbe:	cmp    al,0x1
  419fc0:	(bad)  
  419fc2:	push   es
  419fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fc4:	dec    ecx
  419fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fc6:	mov    ch,0x1c
  419fc8:	std    
  419fc9:	dec    ebp
  419fca:	or     ebx,DWORD PTR [esi+esi*2-0x578baf80]
  419fd1:	mulps  xmm3,XMMWORD PTR fs:[edx]
  419fd5:	push   0xb31c63f0
  419fda:	cld    
  419fdb:	or     ebp,DWORD PTR [edx-0x63]
  419fde:	cdq    
  419fdf:	jmp    0x41a047
  419fe1:	cs xchg bl,bl
  419fe4:	stos   BYTE PTR es:[edi],al
  419fe5:	es stc 
  419fe7:	sub    BYTE PTR [ebx-0x50],dh
  419fea:	inc    BYTE PTR [ebx-0x40]
  419fed:	adc    BYTE PTR cs:[esi],0x4e
  419ff1:	dec    ebp
  419ff2:	add    eax,DWORD PTR [edi-0x6f800f90]
  419ff8:	xor    edi,ecx
  419ffa:	mov    bl,0x65
  419ffc:	ja     0x419ffa
  419ffe:	out    0x65,al
  41a000:	mov    WORD PTR [esi+eiz*1+0x51df17a9],?
  41a007:	jmp    0x56b:0xda72fbfc
  41a00e:	les    ecx,FWORD PTR [esi]
  41a010:	daa    
  41a011:	call   0xee3d5941
  41a016:	sbb    BYTE PTR [edi+0x954d048],bh
  41a01c:	(bad)  
  41a01d:	fdiv   DWORD PTR [ecx+0x43]
  41a020:	ficom  WORD PTR [eax-0xf]
  41a023:	outs   dx,DWORD PTR ds:[esi]
  41a024:	or     al,BYTE PTR [eax-0x1b]
  41a027:	lea    eax,[ebx]
  41a029:	leave  
  41a02a:	pop    esi
  41a02b:	mov    bh,0xc3
  41a02d:	cmp    eax,0x3223933d
  41a032:	xchg   DWORD PTR [ebx+0x5c],esp
  41a035:	imul   ecx,DWORD PTR [ecx+0x5d],0x5946f35
  41a03c:	mov    eax,ds:0x38a78eee
  41a041:	jmp    0xb64e9cd9
  41a046:	int    0x28
  41a048:	cmp    cl,BYTE PTR [eax]
  41a04a:	sub    eax,0x71480167
  41a04f:	inc    edx
  41a050:	int    0x9c
  41a052:	(bad)  
  41a053:	jae    0x41a03c
  41a055:	or     DWORD PTR [ebx-0x267f8868],ebp
  41a05b:	imul   DWORD PTR [edi-0x1a]
  41a05e:	adc    ecx,esp
  41a060:	xchg   ebx,eax
  41a061:	xchg   edi,eax
  41a062:	ficomp DWORD PTR [eax+0x42fce439]
  41a068:	xlat   BYTE PTR ds:[ebx]
  41a069:	or     al,0xd4
  41a06b:	inc    eax
  41a06c:	in     al,dx
  41a06d:	mov    BYTE PTR [esi+0x29],bl
  41a070:	mov    dh,BYTE PTR [ecx+0x79]
  41a073:	retf   
  41a074:	call   0x11a0:0x360b6180
  41a07b:	mov    dl,0x7f
  41a07d:	dec    ebx
  41a07e:	xor    BYTE PTR [ebx-0x720c49e6],0x86
  41a085:	test   al,0xfb
  41a087:	xchg   edi,eax
  41a088:	ror    BYTE PTR [eax],0x72
  41a08b:	mov    ch,dl
  41a08d:	loopne 0x41a04e
  41a08f:	rcl    dl,0x51
  41a092:	iret   
  41a093:	outs   dx,DWORD PTR ds:[esi]
  41a094:	mov    ch,BYTE PTR [eax-0x1be5ecd5]
  41a09a:	retf   0xc719
  41a09d:	jbe    0x41a0f3
  41a09f:	ins    DWORD PTR es:[edi],dx
  41a0a0:	fldenv [eax-0x107d2c12]
  41a0a6:	(bad)  
  41a0a7:	jl     0x41a0c0
  41a0a9:	pop    esp
  41a0aa:	fcmovnb st,st(2)
  41a0ac:	pop    ebp
  41a0ad:	push   esp
  41a0ae:	cmp    DWORD PTR [edx],ebp
  41a0b0:	mov    ah,0x98
  41a0b2:	ficomp DWORD PTR [edi+0x7f3a95f6]
  41a0b8:	mov    bl,0x63
  41a0ba:	mov    edx,0x6aa55229
  41a0bf:	mov    ecx,0x55839942
  41a0c4:	xor    al,0xe9
  41a0c6:	int    0x98
  41a0c8:	cmp    cl,BYTE PTR [eax-0x64d33c00]
  41a0ce:	push   ss
  41a0cf:	add    cl,cl
  41a0d1:	jmp    0x6c8c:0xb05de70a
  41a0d8:	js     0x41a09f
  41a0da:	add    al,0x6e
  41a0dc:	ds ds xchg ebp,eax
  41a0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0e0:	or     BYTE PTR [eax],bl
  41a0e2:	mov    cl,0x32
  41a0e4:	popa   
  41a0e5:	sub    al,0x57
  41a0e7:	push   0x2
  41a0e9:	ret    
  41a0ea:	dec    ebp
  41a0eb:	aaa    
  41a0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ed:	mov    al,ds:0x79c1ce01
  41a0f2:	mov    ds:0xf52a2f23,al
  41a0f7:	lock sub BYTE PTR fs:0xfd916461,al
  41a0ff:	leave  
  41a100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a101:	imul   eax,DWORD PTR [ebx],0xfffffff4
  41a104:	std    
  41a105:	aam    0x59
  41a107:	jl     0x41a0f7
  41a109:	cld    
  41a10a:	dec    edi
  41a10b:	sti    
  41a10c:	sub    esi,DWORD PTR [esi]
  41a10e:	and    al,0xf
  41a110:	fistp  WORD PTR [ebp*8-0x61263308]
  41a117:	popf   
  41a118:	push   edx
  41a119:	mov    edx,0xe579ec0f
  41a11e:	adc    ebp,DWORD PTR [ebp-0x5f]
  41a121:	pop    edi
  41a122:	sahf   
  41a123:	psllq  mm5,QWORD PTR [esp+esi*8]
  41a127:	es nop
  41a129:	and    eax,DWORD PTR [eax+ebp*2]
  41a12c:	repnz shr BYTE PTR ds:0x469727d3,1
  41a133:	xchg   edi,eax
  41a134:	pop    edi
  41a135:	out    0x39,al
  41a137:	popa   
  41a138:	aas    
  41a139:	sub    eax,0x8625d7f
  41a13e:	cs sub eax,0x18af317b
  41a144:	(bad)  
  41a145:	std    
  41a146:	in     al,dx
  41a147:	or     eax,DWORD PTR ds:0x2216e3ec
  41a14d:	xchg   ebp,eax
  41a14e:	in     eax,0x4f
  41a150:	mov    dl,0xbe
  41a152:	neg    BYTE PTR [eax]
  41a154:	in     al,0xe4
  41a156:	aam    0xb3
  41a158:	les    esp,FWORD PTR [edx+ebx*4]
  41a15b:	add    eax,0xde075b96
  41a160:	clc    
  41a161:	rcl    DWORD PTR [eax+0x7999c250],cl
  41a167:	aam    0x17
  41a169:	mov    ecx,DWORD PTR [ebx+0x48]
  41a16c:	popf   
  41a16d:	lock imul esp,DWORD PTR [edi+0x7b700030],0x33a651cf
  41a178:	das    
  41a179:	xchg   ebx,eax
  41a17a:	cmp    al,0x2b
  41a17c:	scas   eax,DWORD PTR es:[edi]
  41a17d:	fwait
  41a17e:	mov    ebp,0x6c98f834
  41a183:	pop    es
  41a184:	popf   
  41a185:	popf   
  41a186:	cmp    dh,BYTE PTR [ebp+edx*2+0x55ffd97a]
  41a18d:	nop
  41a18e:	pop    ss
  41a18f:	fucompp 
  41a191:	es pop edx
  41a193:	ds push esi
  41a195:	and    DWORD PTR [edi+ebp*4-0x1ffb7a82],ebp
  41a19c:	mov    eax,0x718bcee6
  41a1a1:	mov    BYTE PTR [ebx+0x22dc6905],al
  41a1a7:	xchg   ecx,eax
  41a1a8:	jle    0x41a1fb
  41a1aa:	or     al,dl
  41a1ac:	sahf   
  41a1ad:	inc    BYTE PTR [eax+0x64516a34]
  41a1b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1b5:	cs fwait
  41a1b7:	jns    0x41a1b0
  41a1b9:	shl    ah,0x98
  41a1bc:	sub    eax,0xaa45178b
  41a1c1:	retf   
  41a1c2:	fwait
  41a1c3:	cli    
  41a1c4:	lods   al,BYTE PTR ds:[esi]
  41a1c5:	adc    eax,0xdd351d72
  41a1ca:	hlt    
  41a1cb:	ins    BYTE PTR es:[edi],dx
  41a1cc:	mov    ch,0x2f
  41a1ce:	loopne 0x41a24c
  41a1d0:	js     0x41a1a5
  41a1d2:	add    eax,0xa4f6611a
  41a1d7:	adc    eax,0x887e0cf2
  41a1dc:	jl     0x41a1b9
  41a1de:	fnstsw WORD PTR [edx]
  41a1e0:	push   edi
  41a1e1:	sbb    bl,BYTE PTR [ecx-0x63501581]
  41a1e7:	push   es
  41a1e8:	jecxz  0x41a243
  41a1ea:	js     0x41a217
  41a1ec:	rol    DWORD PTR [eax+0xe],1
  41a1ef:	pop    esi
  41a1f0:	or     BYTE PTR [edx-0x27],0x7b
  41a1f4:	jl     0x41a241
  41a1f6:	cmp    al,0xc9
  41a1f8:	jg     0x41a239
  41a1fa:	pop    ebx
  41a1fb:	idiv   cl
  41a1fd:	inc    edi
  41a1fe:	mov    ebp,0x538139d1
  41a203:	add    dh,BYTE PTR [ebx]
  41a205:	or     DWORD PTR [esi-0x6c23d131],ebp
  41a20b:	cmp    esp,DWORD PTR [edi+0x41363712]
  41a211:	sbb    DWORD PTR [edi+0x58],0x11
  41a215:	repnz outs dx,DWORD PTR ds:[esi]
  41a217:	dec    ebp
  41a218:	cmp    BYTE PTR [ebx+0x77],bh
  41a21b:	ficomp DWORD PTR [esp+edx*1]
  41a21e:	ret    0x16f2
  41a221:	dec    ebp
  41a222:	or     al,0xdd
  41a224:	in     al,dx
  41a225:	add    cl,BYTE PTR [ecx]
  41a227:	adc    edx,DWORD PTR [esp+eax*4]
  41a22a:	outs   dx,DWORD PTR ds:[esi]
  41a22b:	in     eax,dx
  41a22c:	ds rol dh,1
  41a22f:	hlt    
  41a230:	mov    BYTE PTR [ecx-0x13],al
  41a233:	loop   0x41a22e
  41a235:	xor    ecx,eax
	...
  41a23f:	add    BYTE PTR [eax],al
  41a241:	scas   al,BYTE PTR es:[edi]
  41a242:	add    ebx,ebp
  41a244:	mov    ds:0xdeeebef,eax
  41a249:	mov    ebp,DWORD PTR [edi]
  41a24b:	ins    BYTE PTR es:[edi],dx
  41a24c:	adc    DWORD PTR [edx+0x13e99fbd],esp
  41a252:	and    BYTE PTR [ecx],al
  41a254:	add    BYTE PTR [esi+0x30000003],ch
  41a25a:	aad    0xb4
  41a25c:	xor    edi,DWORD PTR [eax+0x4793079c]
  41a262:	add    eax,0x53761089
  41a267:	iret   
  41a268:	mov    cs,WORD PTR [edi]
  41a26a:	inc    edi
  41a26b:	sbb    bl,cl
  41a26d:	int3   
  41a26e:	adc    al,0xb9
  41a270:	cld    
  41a271:	pop    ebp
  41a272:	imul   edx,edi,0xffffff9b
  41a275:	pop    esp
  41a276:	adc    al,BYTE PTR [esi]
  41a278:	aaa    
  41a279:	sub    ecx,DWORD PTR [ebp-0x44]
  41a27c:	(bad)  
  41a27d:	arpl   WORD PTR [ecx+0x63],dx
  41a280:	test   al,0x92
  41a282:	cmp    edx,edx
  41a284:	push   edx
  41a285:	pushf  
  41a286:	pop    eax
  41a287:	or     BYTE PTR [eax],dl
  41a289:	mov    bl,0x64
  41a28b:	mov    ch,0xf7
  41a28d:	pmuludq mm5,mm3
  41a290:	inc    esp
  41a291:	in     al,dx
  41a292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a293:	mov    ecx,0x7cabbea1
  41a298:	in     al,dx
  41a299:	clc    
  41a29a:	mov    al,0x25
  41a29c:	pop    es
  41a29d:	pop    ds
  41a29e:	pushf  
  41a29f:	sbb    ah,BYTE PTR [edx]
  41a2a1:	adc    DWORD PTR [esi],0xc03c1cfd
  41a2a7:	imul   edi,DWORD PTR [eax+0xb],0x9f00d9fa
  41a2ae:	pop    ebx
  41a2af:	call   0xc10a:0x51e6100f
  41a2b6:	pop    eax
  41a2b7:	(bad)  
  41a2b8:	(bad)  
  41a2ba:	xchg   ebp,eax
  41a2bb:	ds mov cl,0x1c
  41a2be:	xor    BYTE PTR [edi-0x21e01501],bh
  41a2c4:	in     eax,dx
  41a2c5:	call   0x35559453
  41a2ca:	xor    ah,BYTE PTR [ebx-0x68]
  41a2cd:	stos   BYTE PTR es:[edi],al
  41a2ce:	sbb    DWORD PTR [ecx+0x2],edi
  41a2d1:	fs dec esp
  41a2d3:	xor    DWORD PTR [edx+ecx*2+0x75],eax
  41a2d7:	xor    BYTE PTR [ebx+esi*1-0x23c8f717],0x21
  41a2df:	sbb    BYTE PTR [esp+eax*1+0x16],0xc7
  41a2e4:	call   0xe415:0x8f4a324a
  41a2eb:	je     0x41a2a7
  41a2ed:	sbb    BYTE PTR ds:0xd73f907b,dl
  41a2f3:	adc    DWORD PTR [ebp+0x2f],esi
  41a2f6:	je     0x41a339
  41a2f8:	aas    
  41a2f9:	or     al,0xf2
  41a2fb:	adc    dh,dl
  41a2fd:	test   BYTE PTR [ebx+0x760f37c3],al
  41a303:	pop    esi
  41a304:	mov    eax,ds:0x90e44077
  41a309:	addr16 cmc 
  41a30b:	mov    ebx,0xaa1a3b25
  41a310:	mov    ds:0xda2680f9,al
  41a315:	aaa    
  41a316:	sub    bl,BYTE PTR ds:0x915a6ae5
  41a31c:	(bad)  
  41a31d:	mov    ch,0xc5
  41a31f:	add    eax,0xddf4f7f9
  41a324:	xor    BYTE PTR [edi],ch
  41a326:	sbb    al,0xed
  41a328:	sub    eax,0x6b777286
  41a32d:	lods   eax,DWORD PTR ds:[esi]
  41a32e:	fs inc esp
  41a330:	xchg   DWORD PTR [ebx-0x5c4f3a4f],ecx
  41a336:	mov    DWORD PTR [edi+0x4c],edi
  41a339:	js     0x41a354
  41a33b:	xor    BYTE PTR [eax+0x22],0x18
  41a33f:	and    BYTE PTR [edi],dl
  41a341:	pop    edi
  41a342:	repnz xchg ebp,eax
  41a344:	push   0x7e9be925
  41a349:	jnp    0x41a2fb
  41a34b:	enter  0x8c1,0xe9
  41a34f:	mov    eax,0xd2fa9a6f
  41a354:	add    cl,BYTE PTR [edx+0x4eea1764]
  41a35a:	cmc    
  41a35b:	cs mov edx,0x331f8df9
  41a361:	xchg   BYTE PTR [ebp+edi*4+0x6bb6f43a],bh
  41a368:	inc    esi
  41a369:	cmp    eax,0x7579db44
  41a36e:	and    edx,DWORD PTR [esp+edi*1+0x4]
  41a372:	and    eax,0x9bbdf423
  41a377:	sub    BYTE PTR [edi+edi*4],ah
  41a37a:	out    0xeb,al
  41a37c:	push   edx
  41a37d:	push   ds
  41a37e:	(bad)  
  41a380:	jo     0x41a39f
  41a382:	int    0x9d
  41a384:	pop    ds
  41a385:	fdiv   QWORD PTR [esi-0x2c]
  41a388:	stc    
  41a389:	push   es
  41a38a:	ror    BYTE PTR [edi+edx*4-0x15f02022],1
  41a391:	aas    
  41a392:	xchg   ebx,eax
  41a393:	setb   BYTE PTR [esp+edi*2+0x5d5f7a39]
  41a39b:	jmp    FWORD PTR [edx+0x31]
  41a39e:	cmp    eax,0x7831c508
  41a3a3:	leave  
  41a3a4:	fdivr  DWORD PTR [edx+0x32e7c277]
  41a3aa:	mov    DWORD PTR [eax],esp
  41a3ac:	and    eax,0xcada5176
  41a3b1:	repnz sub ebp,DWORD PTR [eax]
  41a3b4:	into   
  41a3b5:	fwait
  41a3b6:	mov    cl,0x4e
  41a3b8:	and    eax,0xda5e4fd3
  41a3bd:	mov    eax,0x1f5ee1d2
  41a3c2:	test   eax,0x9d42791b
  41a3c7:	inc    edi
  41a3c8:	pop    esi
  41a3c9:	inc    edi
  41a3ca:	(bad)  
  41a3cb:	call   0xc15ccb43
  41a3d0:	popf   
  41a3d1:	loopne 0x41a392
  41a3d3:	enter  0xab8d,0x78
  41a3d7:	inc    ebp
  41a3d8:	ror    BYTE PTR [ecx],cl
  41a3da:	loopne 0x41a3b8
  41a3dc:	mov    BYTE PTR [ecx-0x2f50e568],al
  41a3e2:	xlat   BYTE PTR ds:[ebx]
  41a3e3:	iret   
  41a3e4:	(bad)  
  41a3e5:	repnz push 0xffffffdd
  41a3e8:	add    ah,BYTE PTR [ebx-0xc]
  41a3eb:	add    eax,0xf8f67654
  41a3f0:	jmp    ebx
  41a3f2:	mov    DWORD PTR [edx],edi
  41a3f4:	lahf   
  41a3f5:	fyl2xp1 
  41a3f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f8:	inc    edi
  41a3f9:	iret   
  41a3fa:	das    
  41a3fb:	loopne 0x41a3ca
  41a3fd:	paddusb mm2,QWORD PTR [ebx+0x54]
  41a401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a402:	xor    cl,BYTE PTR [edx]
  41a404:	into   
  41a405:	push   ss
  41a406:	cwde   
  41a407:	pop    edx
  41a408:	xchg   edx,eax
  41a409:	hlt    
  41a40a:	mov    esp,0xdfbd3b41
  41a40f:	push   0x51
  41a411:	fdiv   DWORD PTR [esi+ebx*1]
  41a414:	call   0x5ec0cbe7
  41a419:	inc    esi
  41a41a:	mov    dh,BYTE PTR [ebx-0xa498d8c]
  41a420:	xchg   edx,eax
  41a421:	shl    BYTE PTR [esi],0xe9
  41a424:	out    0x74,al
  41a426:	mov    ch,bh
  41a428:	(bad)  
  41a429:	scas   eax,DWORD PTR es:[edi]
  41a42a:	xchg   DWORD PTR [eax+0x5118195d],esi
  41a430:	inc    ecx
  41a431:	repnz mov bl,0x1d
  41a434:	lds    edx,FWORD PTR [ecx-0x7d]
  41a437:	icebp  
  41a438:	popa   
  41a439:	add    al,0x44
  41a43b:	cmp    al,0x5b
  41a43d:	sar    BYTE PTR [edx],cl
  41a43f:	xchg   esi,eax
  41a440:	mov    edi,0x225646e1
  41a445:	scas   eax,DWORD PTR es:[edi]
  41a446:	jno    0x77e1d6e6
  41a44c:	leave  
  41a44d:	sub    DWORD PTR [ebp+0x5d7ee08a],ecx
  41a453:	lock xor ah,al
  41a456:	sub    DWORD PTR [edi],eax
  41a458:	lds    esp,FWORD PTR [ebx+esi*2]
  41a45b:	repz sub eax,0x18ca6a0e
  41a461:	mov    edx,0x6495b86a
  41a466:	cdq    
  41a467:	mov    eax,0x693c6a8f
  41a46c:	les    esi,FWORD PTR [ecx]
  41a46e:	mov    esi,0xa965ab83
  41a473:	mov    ch,0xf8
  41a475:	ret    
  41a476:	cdq    
  41a477:	inc    eax
  41a478:	jae    0x41a466
  41a47a:	mov    al,0x2c
  41a47c:	imul   esi,edi,0x1fb75550
  41a482:	lds    ecx,FWORD PTR [eax-0x5e]
  41a485:	lea    ebp,[ebp-0x61]
  41a488:	fwait
  41a489:	out    0x6b,eax
  41a48b:	inc    edx
  41a48c:	push   0x2b938bb3
  41a491:	outs   dx,DWORD PTR ds:[esi]
  41a492:	mov    eax,ds:0x94a2f9af
  41a497:	fs jmp 0x540588df
  41a49d:	mov    cl,0xc0
  41a49f:	adc    eax,0xe55c148a
  41a4a4:	gs inc edi
  41a4a6:	xchg   esp,eax
  41a4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4a8:	pop    ds
  41a4a9:	test   al,0x49
  41a4ab:	mov    BYTE PTR [edi-0x27cac432],cl
  41a4b1:	rcr    BYTE PTR [eax-0x29],0x50
  41a4b5:	cmp    DWORD PTR [esi+0x22],0x3a
  41a4b9:	mov    esp,0xc633e56f
  41a4be:	jmp    0x41a4e6
  41a4c0:	ror    DWORD PTR [eax],0x89
  41a4c3:	dec    ebx
  41a4c4:	adc    ch,0xd5
  41a4c7:	cmp    al,0x30
  41a4c9:	inc    ecx
  41a4ca:	pusha  
  41a4cb:	xchg   edi,eax
  41a4cc:	xlat   BYTE PTR ds:[ebx]
  41a4cd:	cli    
  41a4ce:	and    eax,0x41df07e0
  41a4d3:	cmp    bl,bl
  41a4d5:	sti    
  41a4d6:	gs cwde 
  41a4d8:	(bad)  
  41a4d9:	rcl    dl,cl
  41a4db:	nop
  41a4dc:	push   ecx
  41a4dd:	cdq    
  41a4de:	(bad)  
  41a4df:	and    al,BYTE PTR [edi-0x402e59e8]
  41a4e5:	push   0x1c
  41a4e7:	inc    ebp
  41a4e8:	ror    BYTE PTR [ebp+0x521c8b82],0x6f
  41a4ef:	nop
  41a4f0:	iret   
  41a4f1:	jge    0x41a50a
  41a4f3:	pop    ss
  41a4f4:	or     BYTE PTR [edi+0x795f7161],0x1b
  41a4fb:	sbb    ebp,DWORD PTR [edi]
  41a4fd:	adc    ah,BYTE PTR [eax-0x26]
  41a500:	dec    ecx
  41a501:	adc    al,0xfa
  41a503:	lods   eax,DWORD PTR ds:[esi]
  41a504:	xor    ch,BYTE PTR [eax-0x6645d55e]
  41a50a:	icebp  
  41a50b:	fsubr  st(1),st
  41a50d:	aam    0x1f
  41a50f:	push   ss
  41a510:	ret    
  41a511:	and    eax,0x66616b97
  41a516:	data16 daa 
  41a518:	jg     0x41a55d
  41a51a:	and    eax,0x888d7676
  41a51f:	sub    BYTE PTR [edi-0x56b6a2c],0xf1
  41a526:	add    eax,0x5eea9f5
  41a52b:	xchg   esi,eax
  41a52c:	and    DWORD PTR [eax],edx
  41a52e:	mov    esi,0x1767c60d
  41a533:	xchg   ebp,eax
  41a534:	jae    0x41a4f5
  41a536:	(bad)  
  41a537:	mov    edi,0xc950614c
  41a53c:	or     dh,BYTE PTR [edx+ecx*4-0xd]
  41a540:	test   al,0x69
  41a542:	and    al,0x98
  41a544:	je     0xe6122b78
  41a54a:	xor    al,0xc8
  41a54c:	push   edx
  41a54d:	imul   esi,edi,0xbfc58441
  41a553:	jp     0x41a4ff
  41a555:	lock sub eax,0x388937d9
  41a55b:	sbb    DWORD PTR [ecx+0x74],0x20a17ac7
  41a562:	cmp    esp,DWORD PTR [esi+0x2]
  41a565:	mov    eax,esi
  41a567:	imul   esp,DWORD PTR [ebp-0x6f9ecfdb],0xda196336
  41a571:	pop    ecx
  41a572:	in     al,0x86
  41a574:	inc    edx
  41a575:	leave  
  41a576:	pop    edi
  41a577:	shr    BYTE PTR [ecx-0x302f5379],cl
  41a57d:	out    0x2b,al
  41a57f:	mov    ds:0x847a7bf8,eax
  41a584:	and    dl,BYTE PTR [edi]
  41a586:	mov    ah,0x78
  41a588:	add    BYTE PTR [eax+0x33],dl
  41a58b:	dec    ecx
  41a58c:	xchg   esi,eax
  41a58d:	out    0xf4,al
  41a58f:	mov    eax,0x42fe67e2
  41a594:	mov    eax,ds:0xc19eb048
  41a599:	pop    ebp
  41a59a:	pop    edi
  41a59b:	pusha  
  41a59c:	xor    DWORD PTR [esi-0x24],esi
  41a59f:	and    eax,0xf96ead47
  41a5a4:	xor    cl,bl
  41a5a6:	and    eax,0x37e8d32e
  41a5ab:	pop    esi
  41a5ac:	pop    ecx
  41a5ad:	rcl    DWORD PTR [ecx+0x64],0xf3
  41a5b1:	xchg   DWORD PTR [esp+eax*1-0x17169aa6],ecx
  41a5b8:	pop    esp
  41a5b9:	mov    ch,0x4b
  41a5bb:	jmp    0x3818dad
  41a5c0:	and    al,0x46
  41a5c2:	leave  
  41a5c3:	and    edi,DWORD PTR ss:[esi-0x13]
  41a5c7:	int3   
  41a5c8:	aam    0x52
  41a5ca:	cwde   
  41a5cb:	cdq    
  41a5cc:	mov    ebp,0xebf2453
  41a5d1:	das    
  41a5d2:	or     DWORD PTR [esi+edi*4-0x561918e5],ebx
  41a5d9:	xchg   esi,eax
  41a5da:	lods   eax,DWORD PTR ds:[esi]
  41a5db:	pop    edx
  41a5dc:	das    
  41a5dd:	mov    bl,0x5f
  41a5df:	or     dh,BYTE PTR [ebx-0x5f]
  41a5e2:	lods   eax,DWORD PTR ds:[esi]
  41a5e3:	dec    edx
  41a5e4:	pushf  
  41a5e5:	aaa    
  41a5e6:	sub    eax,0x2ff1e967
  41a5eb:	mov    ds:0x869283ca,al
  41a5f0:	and    al,0x4e
  41a5f2:	call   0xf1c6:0xec842754
  41a5f9:	push   es
  41a5fa:	in     eax,dx
  41a5fb:	test   DWORD PTR [edi-0x42],ebp
  41a5fe:	xchg   ebp,eax
  41a5ff:	xchg   edi,eax
  41a600:	push   edi
  41a601:	out    0x69,al
  41a603:	push   cs
  41a604:	in     eax,dx
  41a605:	test   BYTE PTR [bx+si],0x0
	...
  41a611:	aam    0xbf
  41a613:	(bad)  
  41a614:	(bad)  
  41a615:	(bad)  
  41a616:	in     eax,dx
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xc13f:0xf0eaeb4e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [esi+0x42000003],ch
  41a62a:	push   ds
  41a62b:	das    
  41a62c:	jb     0x41a5df
  41a62e:	xor    eax,0x313d63e5
  41a633:	inc    ebx
  41a634:	mov    eax,0xb06d1061
  41a639:	mov    DWORD PTR [esi+0x7c385ce8],edx
  41a63f:	mov    al,ds:0x472aeb6b
  41a644:	mov    ds:0xf90227af,eax
  41a649:	mov    ebx,0xc50146e9
  41a64e:	cmp    cl,BYTE PTR [edx-0x1ca2005]
  41a654:	add    DWORD PTR [ebx+ebx*2-0x6d518aa1],esp
  41a65b:	or     bh,BYTE PTR [edi+0x19f65854]
  41a661:	mov    bl,0xc4
  41a663:	psrad  mm1,QWORD PTR [edx-0x30]
  41a667:	sub    ah,ch
  41a669:	xchg   DWORD PTR [ebx-0x2],esi
  41a66c:	inc    edi
  41a66d:	xor    eax,0x8377524b
  41a672:	xor    DWORD PTR [esi],esi
  41a674:	test   esp,ebp
  41a676:	and    eax,0xc477a028
  41a67b:	int3   
  41a67c:	xor    eax,ecx
  41a67e:	adc    BYTE PTR [eax-0x75cf744e],0x1b
  41a685:	dec    edx
  41a686:	adc    ah,bh
  41a688:	jne    0x41a67d
  41a68a:	mov    WORD PTR [edi],fs
  41a68c:	dec    DWORD PTR [ebp+ecx*8+0x4cffcfa]
  41a693:	pop    ss
  41a694:	adc    DWORD PTR [edi],ebp
  41a696:	std    
  41a697:	dec    esp
  41a698:	popf   
  41a699:	cs mov ch,0x7
  41a69c:	mov    ebx,0xfe6d8316
  41a6a1:	push   ecx
  41a6a2:	popf   
  41a6a3:	pop    ebx
  41a6a4:	call   0x74048a80
  41a6a9:	neg    DWORD PTR [ecx]
  41a6ab:	test   dh,ch
  41a6ad:	pop    es
  41a6ae:	sbb    al,0xd2
  41a6b0:	ja     0x41a6a7
  41a6b2:	jbe    0x41a6c0
  41a6b4:	in     al,0x79
  41a6b6:	mov    BYTE PTR [ebx],0x6c
  41a6b9:	or     BYTE PTR [edx-0x6dcf2090],dh
  41a6bf:	jno    0x41a64f
  41a6c1:	out    0xdc,eax
  41a6c3:	push   0x5c548b53
  41a6c8:	mov    cl,0x9c
  41a6cb:	arpl   WORD PTR [edx-0x7b],sp
  41a6ce:	and    eax,DWORD PTR [ecx-0x153d73ca]
  41a6d4:	jge    0x41a65d
  41a6d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6d7:	std    
  41a6d8:	or     ebp,DWORD PTR [esi-0x6]
  41a6db:	stc    
  41a6dc:	sti    
  41a6dd:	fimul  WORD PTR [ebp+eax*1+0x5e]
  41a6e1:	adc    edx,DWORD PTR [ecx]
  41a6e3:	lea    ebx,[edi-0x39]
  41a6e6:	mov    ecx,0xdee98001
  41a6eb:	sub    eax,0xbbba5951
  41a6f0:	sbb    ebp,esi
  41a6f2:	loop   0x41a6ab
  41a6f4:	out    dx,eax
  41a6f5:	inc    eax
  41a6f6:	stc    
  41a6f7:	xor    BYTE PTR [edx],cl
  41a6f9:	mov    eax,0x31169d67
  41a6fe:	inc    ebx
  41a6ff:	pop    edi
  41a700:	pop    ebp
  41a701:	(bad)  [ecx-0x433d3520]
  41a707:	mov    ds:0x1a45c562,eax
  41a70c:	mov    esp,0x759dd472
  41a711:	add    DWORD PTR [esi+0x74],edx
  41a714:	push   0xbd3c7f52
  41a719:	jns    0x41a771
  41a71b:	popf   
  41a71c:	xor    al,0xe7
  41a71e:	cmp    BYTE PTR [ebp+0x10e59e8a],bl
  41a724:	dec    esp
  41a725:	out    0xc,eax
  41a727:	popa   
  41a728:	sbb    eax,0xa94368d6
  41a72d:	cld    
  41a72e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a72f:	add    esp,DWORD PTR [edi+0x30]
  41a732:	aad    0x6f
  41a734:	ret    0x2b59
  41a737:	nop
  41a738:	cmp    eax,DWORD PTR [ebp+0x15c6e3a]
  41a73e:	das    
  41a73f:	stos   BYTE PTR es:[edi],al
  41a740:	fcom   DWORD PTR [ebx+0x6f]
  41a743:	jbe    0x41a6d9
  41a745:	jg     0x41a73e
  41a747:	pop    es
  41a748:	xchg   ebx,eax
  41a749:	retf   
  41a74a:	jmp    0x41a790
  41a74c:	pop    edx
  41a74d:	lods   eax,DWORD PTR ds:[esi]
  41a74e:	inc    edx
  41a74f:	cmc    
  41a750:	loope  0x41a6fa
  41a752:	push   ecx
  41a753:	je     0x41a7c1
  41a755:	and    bh,BYTE PTR [ebx-0x2]
  41a758:	cdq    
  41a759:	pop    ds
  41a75a:	mov    bh,0x24
  41a75c:	int    0xbb
  41a75e:	cmp    al,0xe4
  41a760:	jp     0x41a75c
  41a762:	and    BYTE PTR [esi],bl
  41a764:	dec    ebp
  41a765:	lods   eax,DWORD PTR ds:[esi]
  41a766:	sub    bh,cl
  41a768:	jge    0x41a792
  41a76a:	xchg   edi,eax
  41a76b:	idiv   BYTE PTR [edi+0x1f]
  41a76e:	cmp    dl,BYTE PTR [esi+0x36]
  41a771:	cli    
  41a772:	mov    esp,0xa04db3e9
  41a777:	(bad)  
  41a778:	dec    edx
  41a779:	xor    ch,BYTE PTR [eax]
  41a77b:	lock out dx,eax
  41a77d:	pop    edx
  41a77e:	cwde   
  41a77f:	push   eax
  41a780:	call   0x2883:0x80997d40
  41a787:	fisubr WORD PTR [edx+esi*2+0x79]
  41a78b:	sub    DWORD PTR [edi+0x50998284],eax
  41a791:	mov    edi,0x4a9c13b4
  41a796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a797:	pop    edi
  41a798:	jno    0x41a74c
  41a79a:	or     al,0x26
  41a79c:	mov    ah,0x6d
  41a79e:	data16 mov WORD PTR ds:0x7035554d,ds
  41a7a5:	sub    eax,0x75eff264
  41a7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ab:	xchg   ebx,eax
  41a7ac:	inc    ecx
  41a7ad:	or     al,al
  41a7af:	mov    eax,0x36831d64
  41a7b4:	mov    ds:0xe4c5304e,al
  41a7b9:	stos   DWORD PTR es:[edi],eax
  41a7ba:	push   edi
  41a7bb:	or     eax,0x86faaf74
  41a7c0:	mov    ds:0x67dde908,eax
  41a7c5:	mov    esi,0xece4b809
  41a7ca:	mov    eax,ds:0x870dc45a
  41a7cf:	call   0xfab2:0x19c81283
  41a7d6:	outs   dx,DWORD PTR ds:[esi]
  41a7d7:	fs push ebx
  41a7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7da:	mov    ah,0x66
  41a7dc:	sub    DWORD PTR [ebp+0x29],edi
  41a7df:	adc    BYTE PTR [eax-0x6],bh
  41a7e2:	js     0x41a7d6
  41a7e4:	add    bl,BYTE PTR [ecx]
  41a7e6:	push   ebp
  41a7e7:	js     0x41a7cb
  41a7e9:	pop    ss
  41a7ea:	mov    bl,BYTE PTR [esi]
  41a7ec:	cmp    al,0x20
  41a7ee:	nop
  41a7ef:	fsub   QWORD PTR [edx]
  41a7f1:	add    BYTE PTR [edx-0x2d7ee55],dl
  41a7f7:	shl    DWORD PTR [ebx+0x1],1
  41a7fa:	inc    ebx
  41a7fb:	pop    ebp
  41a7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7fd:	retf   0x170c
  41a800:	sub    DWORD PTR [eax+ecx*1+0x6ce0601b],edi
  41a807:	mov    esp,0xc33d65d6
  41a80c:	pop    ebp
  41a80d:	inc    esi
  41a80e:	sbb    DWORD PTR [esi+eax*1],eax
  41a811:	call   0x8ab9b9c6
  41a816:	retf   0xc33
  41a819:	iret   
  41a81a:	hlt    
  41a81b:	cli    
  41a81c:	xor    DWORD PTR [edi+0x748d3abd],eax
  41a822:	and    DWORD PTR [edx+0x4de1406a],ecx
  41a828:	push   ebx
  41a829:	or     eax,DWORD PTR [edx-0x5123ee9b]
  41a82f:	jnp    0x41a85e
  41a831:	push   0xffffff92
  41a833:	lds    esp,FWORD PTR [edx-0x11fca8bc]
  41a839:	stos   BYTE PTR es:[edi],al
  41a83a:	cmp    bl,al
  41a83c:	xor    al,0x38
  41a83e:	push   edx
  41a83f:	(bad)  
  41a840:	xchg   DWORD PTR [di],esi
  41a843:	sub    eax,0xb9317a2b
  41a848:	or     ebx,esp
  41a84a:	push   edi
  41a84b:	mov    bh,0xef
  41a84d:	(bad)  
  41a84e:	xor    al,0x98
  41a850:	test   BYTE PTR [ebx+eax*8+0x7d],dl
  41a854:	je     0x41a80e
  41a856:	cmp    al,0x85
  41a858:	add    dl,BYTE PTR [ecx-0x3d01d706]
  41a85e:	fcmove st,st(0)
  41a860:	jecxz  0x41a7fc
  41a862:	cmp    ecx,DWORD PTR [esp+edx*4+0x5278957f]
  41a869:	dec    edi
  41a86a:	fimul  WORD PTR [edx]
  41a86c:	(bad)  
  41a86d:	loopne 0x41a84d
  41a86f:	addr16 cs inc edi
  41a872:	dec    edi
  41a873:	xlat   BYTE PTR ds:[ebx]
  41a874:	js     0x41a8c9
  41a876:	mov    eax,ds:0x86e97454
  41a87b:	mov    ds:0xa9ebab46,eax
  41a880:	daa    
  41a881:	inc    eax
  41a882:	jp     0x41a8e5
  41a884:	and    eax,0x128db195
  41a889:	cmp    DWORD PTR [esi-0x6f],eax
  41a88c:	xchg   BYTE PTR [eax+0x63],bl
  41a88f:	or     eax,DWORD PTR [edx+0x3e]
  41a892:	sub    eax,0xaac20d27
  41a897:	movups xmm5,XMMWORD PTR [eax+0x7eb179b3]
  41a89e:	xchg   edx,eax
  41a89f:	loop   0x41a8f9
  41a8a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8a2:	push   cs
  41a8a3:	jp     0x41a8d0
  41a8a5:	xchg   ebx,eax
  41a8a6:	add    al,ch
  41a8a8:	cli    
  41a8a9:	loope  0x41a86b
  41a8ab:	adc    esi,eax
  41a8ad:	iret   
  41a8ae:	push   esp
  41a8af:	xor    ecx,DWORD PTR [edi-0x52dbb33e]
  41a8b5:	cs ss jb 0x41a925
  41a8b9:	add    al,0x74
  41a8bb:	sub    eax,0xfcb3f9dc
  41a8c0:	repnz lods eax,DWORD PTR ds:[esi]
  41a8c2:	mov    bh,0x6a
  41a8c4:	daa    
  41a8c5:	dec    edi
  41a8c6:	adc    ch,BYTE PTR [edx]
  41a8c8:	inc    ebp
  41a8c9:	dec    ebp
  41a8ca:	loop   0x41a86c
  41a8cc:	imul   edx,DWORD PTR [ecx+0x3],0xa9d33e90
  41a8d3:	cs inc ebp
  41a8d5:	outs   dx,DWORD PTR ds:[esi]
  41a8d6:	xor    dl,BYTE PTR [ecx-0x52]
  41a8d9:	fst    QWORD PTR gs:[eax-0x62]
  41a8dd:	sbb    BYTE PTR [esi],bl
  41a8df:	int3   
  41a8e0:	xchg   ebx,eax
  41a8e1:	ret    
  41a8e2:	cmc    
  41a8e3:	or     ch,BYTE PTR [esi+0x665f13c1]
  41a8e9:	push   ebx
  41a8ea:	inc    esp
  41a8eb:	pusha  
  41a8ec:	das    
  41a8ed:	xor    bh,BYTE PTR cs:[eax+0x9]
  41a8f1:	jle    0x41a919
  41a8f3:	xchg   BYTE PTR [edx+edi*1+0x4241ccf8],dh
  41a8fa:	lods   al,BYTE PTR ds:[esi]
  41a8fb:	sti    
  41a8fc:	repz jns 0x41a8fb
  41a8ff:	es or  al,0x5e
  41a902:	and    eax,0xc150a9b4
  41a907:	inc    ecx
  41a908:	adc    eax,0x449963c5
  41a90d:	push   cs
  41a90e:	stc    
  41a90f:	cmp    DWORD PTR [ecx-0x5f43feb1],ecx
  41a915:	and    dh,BYTE PTR [edi-0x15885822]
  41a91b:	mov    ch,0x27
  41a91d:	mov    ds:0xb1a0ff72,eax
  41a922:	dec    esi
  41a923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a924:	cs cld 
  41a926:	test   edx,0x1790ffb0
  41a92c:	push   edx
  41a92d:	ret    
  41a92e:	add    eax,0x54542661
  41a933:	or     al,0xc2
  41a935:	les    edx,FWORD PTR [edx+0x27]
  41a938:	cli    
  41a939:	mov    dh,0xe1
  41a93b:	dec    ebx
  41a93c:	clc    
  41a93d:	inc    ebx
  41a93e:	fdiv   DWORD PTR [edx-0x62518325]
  41a944:	sbb    BYTE PTR [eax+0x305b288f],dl
  41a94a:	(bad)  
  41a94b:	fcomp  QWORD PTR [ebx+0x47a7d7da]
  41a951:	repz or ebx,edi
  41a954:	inc    ebp
  41a955:	cli    
  41a956:	ins    BYTE PTR es:[edi],dx
  41a957:	inc    ecx
  41a958:	call   0xde9f:0x59289541
  41a95f:	(bad)  
  41a960:	sbb    dl,BYTE PTR [eax]
  41a962:	push   ecx
  41a963:	shr    DWORD PTR [eax-0x78],cl
  41a966:	(bad)  
  41a968:	rcl    BYTE PTR [edi+0x4e],cl
  41a96b:	mov    cs,WORD PTR [esi]
  41a96d:	push   esp
  41a96e:	lock jnp 0x41a967
  41a971:	or     al,0xc
  41a973:	pop    edx
  41a974:	cli    
  41a975:	xor    eax,0xb1c07793
  41a97a:	dec    esi
  41a97b:	xor    dl,BYTE PTR [eax-0x4b8952df]
  41a981:	pop    ebx
  41a982:	or     dh,BYTE PTR [ecx+0x10]
  41a985:	(bad)  
  41a987:	out    0x23,al
  41a989:	fisubr DWORD PTR ds:0x58a42407
  41a98f:	sub    BYTE PTR [edx+eax*4+0xf],bl
  41a993:	pop    edx
  41a994:	das    
  41a995:	dec    esp
  41a996:	mov    al,0xe5
  41a998:	clc    
  41a999:	enter  0x5ecb,0xba
  41a99d:	in     al,dx
  41a99e:	add    esp,DWORD PTR [edx+0x79]
  41a9a1:	xor    al,0xc2
  41a9a3:	dec    edx
  41a9a4:	pop    ebp
  41a9a5:	sbb    al,0x9c
  41a9a7:	push   ebp
  41a9a8:	push   0x9e76c0bc
  41a9ad:	push   ds
  41a9ae:	jno    0x41a94e
  41a9b0:	push   cs
  41a9b1:	pop    ds
  41a9b2:	out    dx,eax
  41a9b3:	rol    BYTE PTR [edx+0x6a],cl
  41a9b6:	mov    ds:0x3af58a78,al
  41a9bb:	sbb    al,0xa0
  41a9bd:	mov    cs,WORD PTR [edi+eiz*4]
  41a9c0:	mov    dl,0x85
  41a9c2:	push   eax
  41a9c3:	popa   
  41a9c4:	lock popa 
  41a9c6:	or     BYTE PTR [ecx],al
  41a9c8:	ins    DWORD PTR es:[edi],dx
  41a9c9:	fsubp  st(5),st
  41a9cb:	push   ebx
  41a9cc:	sbb    esi,DWORD PTR [edx]
  41a9ce:	lea    esp,[ebp+0x2]
  41a9d1:	sbb    eax,0x5fc40c68
  41a9d6:	adc    DWORD PTR [eax],eax
	...
  41a9e0:	add    BYTE PTR [ebx-0x8],al
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	dec    ecx
  41a9ee:	xchg   esp,eax
  41a9ef:	jg     0x41aa66
  41a9f1:	outs   dx,DWORD PTR ds:[esi]
  41a9f2:	daa    
  41a9f3:	add    DWORD PTR [eax],eax
  41a9f5:	scas   al,BYTE PTR es:[edi]
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [edi],dh
  41a9fa:	adc    esi,ecx
  41a9fc:	inc    eax
  41a9fd:	adc    BYTE PTR [ebp+0x54],0x5a
  41aa01:	imul   ebp,DWORD PTR [ebx+eiz*2-0x24e32af0],0x89b9a6ce
  41aa0c:	cld    
  41aa0d:	push   ss
  41aa0e:	push   edi
  41aa0f:	pop    esp
  41aa10:	icebp  
  41aa11:	xlat   BYTE PTR ds:[ebx]
  41aa12:	(bad)  
  41aa13:	mov    edi,0xa13fec82
  41aa18:	xchg   esi,eax
  41aa19:	sub    ebx,ecx
  41aa1b:	dec    esi
  41aa1c:	jae    0x41aa4c
  41aa1e:	xchg   esi,eax
  41aa1f:	mov    ds:0x365df939,eax
  41aa24:	xor    al,0x43
  41aa26:	(bad)  
  41aa27:	out    dx,eax
  41aa28:	jp     0x41aa91
  41aa2a:	int3   
  41aa2b:	sub    eax,0xd78d203f
  41aa30:	and    eax,eax
  41aa32:	adc    al,0xb0
  41aa34:	stc    
  41aa35:	repnz iret 
  41aa37:	push   edi
  41aa38:	cli    
  41aa39:	(bad)  
  41aa3a:	in     al,0x69
  41aa3c:	imul   ebp,DWORD PTR [esp+eiz*2],0xa
  41aa40:	pop    edx
  41aa41:	jle    0x41aab5
  41aa43:	jp     0x41a9c8
  41aa45:	xor    al,bh
  41aa47:	pop    esp
  41aa48:	mov    WORD PTR [ecx],cs
  41aa4a:	mov    WORD PTR [eax+0x29],es
  41aa4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa4e:	sahf   
  41aa4f:	and    al,0x87
  41aa51:	adc    dl,BYTE PTR ds:0x7b62ae16
  41aa57:	bound  ebx,QWORD PTR [esi-0x29]
  41aa5a:	gs mov edx,0x40b65792
  41aa60:	fwait
  41aa61:	test   bh,cl
  41aa63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa64:	add    BYTE PTR [edi+0x52],al
  41aa67:	pop    es
  41aa68:	repz bound esp,QWORD PTR [edx+0x77131117]
  41aa6f:	fiadd  DWORD PTR gs:[esi]
  41aa72:	loop   0x41aa79
  41aa74:	(bad)  
  41aa75:	out    dx,al
  41aa76:	in     al,0xdc
  41aa78:	dec    eax
  41aa79:	in     eax,0x98
  41aa7b:	fdivr  DWORD PTR [esi+0x4fabf113]
  41aa81:	(bad)  
  41aa82:	ret    0x578
  41aa85:	dec    edx
  41aa86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa87:	lods   eax,DWORD PTR ds:[esi]
  41aa89:	outs   dx,DWORD PTR ds:[esi]
  41aa8a:	iret   
  41aa8b:	popf   
  41aa8c:	ror    BYTE PTR [ebp-0x1f],0x5e
  41aa90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa91:	sbb    al,ch
  41aa93:	int3   
  41aa94:	jns    0x41aad6
  41aa96:	loop   0x41aaa2
  41aa98:	jl     0x41aae6
  41aa9a:	mov    ecx,0x57a7fd0
  41aa9f:	inc    ebx
  41aaa0:	xor    BYTE PTR [ecx-0x567caa12],bh
  41aaa6:	and    edx,DWORD PTR [eax]
  41aaa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaa9:	pop    ss
  41aaaa:	fstp   DWORD PTR [edx-0x2c]
  41aaad:	out    0xb1,al
  41aaaf:	pop    ss
  41aab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aab1:	mov    ecx,0xeaecdfd9
  41aab6:	scas   eax,DWORD PTR es:[edi]
  41aab7:	call   0xff3e981f
  41aabc:	js     0x41aad2
  41aabe:	lods   al,BYTE PTR ds:[esi]
  41aabf:	xchg   ch,cl
  41aac1:	outs   dx,DWORD PTR ds:[esi]
  41aac2:	in     eax,dx
  41aac3:	dec    esp
  41aac4:	test   al,0x65
  41aac6:	or     al,BYTE PTR [eax-0x4c2a1310]
  41aacc:	sub    edi,0xffffffa3
  41aacf:	or     ah,BYTE PTR [edi+0x3]
  41aad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aad3:	and    al,0xe1
  41aad5:	and    eax,0xc82f8121
  41aada:	xchg   esi,eax
  41aadb:	and    al,0x2e
  41aadd:	in     eax,0x9
  41aadf:	sbb    esp,esi
  41aae1:	dec    ebp
  41aae2:	addr16 adc eax,esp
  41aae5:	es popf 
  41aae7:	repnz fbstp TBYTE PTR [edx]
  41aaea:	cmp    al,0x80
  41aaec:	dec    ebx
  41aaed:	loope  0x41ab6b
  41aaef:	js     0x41ab61
  41aaf1:	shr    cl,0xf3
  41aaf4:	jb     0x41ab1a
  41aaf6:	pushf  
  41aaf7:	scas   al,BYTE PTR es:[edi]
  41aaf8:	sti    
  41aaf9:	sti    
  41aafa:	outs   dx,DWORD PTR ds:[esi]
  41aafb:	dec    eax
  41aafc:	sub    DWORD PTR [ebp+0x78191256],0x2da76cc1
  41ab06:	sahf   
  41ab07:	dec    ebp
  41ab08:	shl    DWORD PTR [eax-0x6b05c505],cl
  41ab0e:	jbe    0x41ab44
  41ab10:	in     al,dx
  41ab11:	mov    BYTE PTR [ebx+eiz*4-0x7a],0x9a
  41ab16:	mov    ah,0xd7
  41ab18:	dec    ecx
  41ab19:	outs   dx,DWORD PTR ds:[esi]
  41ab1a:	pushf  
  41ab1b:	lahf   
  41ab1c:	xchg   edx,eax
  41ab1d:	push   ebx
  41ab1e:	jge    0x41ab63
  41ab20:	or     DWORD PTR [edx+0x2dbb2d79],ecx
  41ab26:	out    dx,eax
  41ab27:	add    al,0xab
  41ab29:	and    BYTE PTR [eax-0x146334eb],ch
  41ab2f:	fs xchg edi,eax
  41ab31:	fwait
  41ab32:	add    esi,edi
  41ab34:	add    al,0x6e
  41ab36:	push   edi
  41ab37:	ins    DWORD PTR es:[edi],dx
  41ab38:	pop    edi
  41ab39:	and    eax,0x10c9fcb9
  41ab3e:	xchg   edi,eax
  41ab3f:	cmp    DWORD PTR [ecx+eiz*1],eax
  41ab42:	jne    0x41abbe
  41ab44:	sti    
  41ab45:	sahf   
  41ab46:	cdq    
  41ab47:	fwait
  41ab48:	sub    ecx,esp
  41ab4a:	adc    ebx,0xf57fef90
  41ab50:	std    
  41ab51:	mov    esp,0x81906275
  41ab56:	ins    BYTE PTR es:[edi],dx
  41ab57:	jg     0x41ab06
  41ab59:	add    BYTE PTR [eax],bh
  41ab5b:	emms   
  41ab5d:	jg     0x41ab51
  41ab5f:	out    0x4a,al
  41ab61:	fisubr DWORD PTR ds:0xf639ebd1
  41ab67:	or     al,0x49
  41ab69:	cmc    
  41ab6a:	in     eax,0x36
  41ab6c:	out    0x8f,al
  41ab6e:	in     eax,0xd7
  41ab70:	int    0x79
  41ab72:	fstp   TBYTE PTR [ebx-0x23fba32c]
  41ab78:	enter  0x392d,0x4c
  41ab7c:	xor    DWORD PTR [edx+0x1e],ebx
  41ab7f:	and    dl,BYTE PTR [ebx-0x67]
  41ab82:	ins    BYTE PTR es:[edi],dx
  41ab83:	mov    dh,0xb
  41ab85:	push   cs
  41ab86:	dec    edx
  41ab87:	fcmove st,st(2)
  41ab89:	jp     0x41ab8e
  41ab8b:	out    dx,al
  41ab8c:	addr16 sbb al,0x85
  41ab8f:	pop    esi
  41ab90:	dec    eax
  41ab91:	push   0xffffff93
  41ab93:	pop    edi
  41ab94:	and    eax,0xed023b98
  41ab99:	push   cs
  41ab9a:	inc    ebp
  41ab9b:	jo     0x41ac11
  41ab9d:	enter  0x4b69,0x41
  41aba1:	jne    0x41ac07
  41aba3:	(bad)  
  41aba4:	aad    0xf2
  41aba6:	xchg   ebx,eax
  41aba7:	shl    BYTE PTR [ecx],cl
  41aba9:	cdq    
  41abaa:	repnz dec ecx
  41abac:	in     eax,0x12
  41abae:	sub    BYTE PTR [eax],0x71
  41abb1:	into   
  41abb2:	ins    BYTE PTR es:[edi],dx
  41abb3:	jbe    0x41ab59
  41abb5:	nop
  41abb6:	adc    BYTE PTR ds:0x154beff4,cl
  41abbc:	(bad)  
  41abbd:	and    ebx,DWORD PTR [ebp+eiz*8-0x41]
  41abc1:	and    DWORD PTR [ebx],ebx
  41abc3:	jg     0x41ab5d
  41abc5:	gs fwait
  41abc7:	jae    0x41abd1
  41abc9:	sbb    al,BYTE PTR [ebp+eiz*2-0x1b97ac13]
  41abd0:	stos   DWORD PTR es:[edi],eax
  41abd1:	sub    al,0x94
  41abd3:	aaa    
  41abd4:	or     DWORD PTR ds:[eax],ecx
  41abd7:	icebp  
  41abd8:	sbb    al,0xe9
  41abda:	mov    bl,0x12
  41abdc:	and    DWORD PTR [edi+0x75e3eb06],0x2b
  41abe3:	dec    eax
  41abe4:	cli    
  41abe5:	cdq    
  41abe6:	jl     0x41abd0
  41abe8:	jle    0x41ac2c
  41abea:	dec    eax
  41abeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abec:	xchg   ebx,eax
  41abed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abee:	cmp    esi,DWORD PTR [esi-0x29]
  41abf1:	pop    eax
  41abf2:	ja     0x41ab8d
  41abf4:	jmp    0x36ea:0xf0122713
  41abfb:	outs   dx,BYTE PTR ds:[esi]
  41abfc:	dec    ecx
  41abfd:	sar    BYTE PTR [ebp+0x6aa9b1a9],cl
  41ac03:	neg    BYTE PTR [ecx-0x5f]
  41ac06:	jp     0x41abaa
  41ac08:	mov    esi,0xdf9a312b
  41ac0d:	lahf   
  41ac0e:	xchg   ebx,eax
  41ac0f:	loopne 0x41ac06
  41ac11:	inc    edi
  41ac12:	cld    
  41ac13:	and    esi,edi
  41ac15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac16:	leave  
  41ac17:	cdq    
  41ac18:	mov    fs,WORD PTR [ebx-0x26]
  41ac1b:	call   DWORD PTR [edx+0x79]
  41ac1e:	ja     0x41ac4e
  41ac20:	cld    
  41ac21:	int    0x8f
  41ac23:	mov    fs,WORD PTR [eax+0x1c]
  41ac26:	popa   
  41ac27:	rcr    BYTE PTR ds:[esi],cl
  41ac2a:	mov    al,0x82
  41ac2c:	dec    edi
  41ac2d:	lock mov ecx,?
  41ac30:	sub    ebx,eax
  41ac32:	or     eax,0x2419c09
  41ac37:	jge    0x41ac32
  41ac39:	inc    ebx
  41ac3a:	test   BYTE PTR [edx+0x692f2a50],ah
  41ac40:	xchg   DWORD PTR [esi*2-0x7f2fc547],esi
  41ac47:	(bad)  
  41ac48:	ds mov dl,0x93
  41ac4b:	(bad)  
  41ac4c:	rcr    esp,cl
  41ac4e:	adc    DWORD PTR [edx],0x3f
  41ac51:	cmp    eax,edi
  41ac53:	out    0xd5,eax
  41ac55:	mov    dl,0x59
  41ac57:	mov    dh,0xc5
  41ac59:	dec    ecx
  41ac5a:	and    BYTE PTR [eax+0x613ec0c],dl
  41ac60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac61:	push   ecx
  41ac62:	sahf   
  41ac63:	or     DWORD PTR [eax+0x19],esp
  41ac66:	neg    BYTE PTR [edx+0x18]
  41ac69:	fadd   st(0),st
  41ac6b:	jg     0x41ac4a
  41ac6d:	cld    
  41ac6e:	pop    esi
  41ac6f:	sbb    eax,0xf2982434
  41ac74:	aas    
  41ac75:	ret    0x241f
  41ac78:	and    BYTE PTR [edx-0x3b],bl
  41ac7b:	mov    esi,0xe5d351dc
  41ac80:	(bad)  
  41ac82:	xlat   BYTE PTR ds:[ebx]
  41ac83:	jno    0x41ac0e
  41ac85:	mov    cl,0x85
  41ac87:	ins    DWORD PTR es:[edi],dx
  41ac88:	mov    ds:0x35b637c4,al
  41ac8d:	mov    WORD PTR ds:0x1c0ac815,cs
  41ac93:	popaw  
  41ac95:	popa   
  41ac96:	and    eax,0xbc6cc40d
  41ac9b:	xchg   dl,bl
  41ac9d:	push   ebp
  41ac9e:	scas   al,BYTE PTR es:[edi]
  41ac9f:	mov    eax,0xf3f54a9d
  41aca4:	ret    0xa89e
  41aca7:	add    esi,DWORD PTR [edx]
  41aca9:	daa    
  41acaa:	call   0xbf033585
  41acaf:	pop    ds
  41acb0:	rol    ebx,cl
  41acb2:	xchg   ebp,eax
  41acb3:	jp     0x41acd8
  41acb5:	dec    ecx
  41acb6:	mov    ah,0x46
  41acb8:	cld    
  41acb9:	idiv   ebp
  41acbb:	addr16 divps xmm0,xmm6
  41acbf:	ins    DWORD PTR es:[edi],dx
  41acc0:	outs   dx,DWORD PTR ds:[esi]
  41acc1:	in     eax,0xa
  41acc3:	ror    ecx,0xf7
  41acc6:	or     eax,0x5e748e5f
  41accb:	dec    esp
  41accc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41accd:	hlt    
  41acce:	pop    ds
  41accf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acd0:	in     al,0x50
  41acd2:	in     eax,dx
  41acd3:	rep ins BYTE PTR es:[edi],dx
  41acd5:	pop    esp
  41acd6:	je     0x41acf2
  41acd8:	popf   
  41acd9:	jg     0x41acf4
  41acdb:	outs   dx,BYTE PTR ds:[esi]
  41acdc:	les    ebx,FWORD PTR [ecx+edx*2]
  41acdf:	mov    dl,0x48
  41ace1:	xor    eax,0xbf6330ff
  41ace6:	adc    BYTE PTR [eax+ebp*8-0x60],ch
  41acea:	add    DWORD PTR [eax+0x3],esp
  41aced:	push   cs
  41acee:	aaa    
  41acef:	mov    dl,0x9f
  41acf1:	fisubr WORD PTR [edi+0x1fb9fe4]
  41acf7:	xchg   ebp,eax
  41acf8:	cmp    eax,0xa90e3f85
  41acfd:	test   DWORD PTR [edx],0xc4fe4de0
  41ad03:	jmp    0x55e6:0xd29a83d1
  41ad0a:	cmp    ecx,DWORD PTR [eax]
  41ad0c:	shl    DWORD PTR [esi+0x63],1
  41ad0f:	dec    eax
  41ad10:	or     BYTE PTR [eax],cl
  41ad12:	jo     0x41acad
  41ad14:	mov    dl,0x20
  41ad16:	in     al,dx
  41ad17:	scas   al,BYTE PTR es:[edi]
  41ad18:	in     al,0x71
  41ad1a:	dec    ecx
  41ad1b:	ret    0xd24f
  41ad1e:	push   0x5c
  41ad20:	rcr    BYTE PTR [esi-0x95753e9],1
  41ad26:	mov    eax,0x2f971e9c
  41ad2b:	mov    eax,0xed7e3cb1
  41ad30:	call   0xe108:0x85be0270
  41ad37:	fcmovbe st,st(6)
  41ad39:	call   0xf2b7:0xddc64a7c
  41ad40:	and    al,0x90
  41ad42:	lock inc eax
  41ad44:	cmc    
  41ad45:	xchg   esi,eax
  41ad46:	cmp    DWORD PTR ds:0xc042f71c,0x1
  41ad4d:	data16 mov cl,0x30
  41ad50:	jecxz  0x41ad60
  41ad52:	pop    edx
  41ad53:	xchg   esi,eax
  41ad54:	cmp    DWORD PTR [ebp+0x77393733],0x28420e76
  41ad5e:	pop    es
  41ad5f:	pop    ds
  41ad60:	xchg   BYTE PTR [ecx],bh
  41ad62:	cmp    eax,0xde9045d0
  41ad67:	xchg   ebp,eax
  41ad68:	sbb    bh,BYTE PTR [ebx-0x22]
  41ad6b:	mov    es,WORD PTR [eax-0x64]
  41ad6e:	(bad)  
  41ad70:	mov    edi,0xdfabf4da
  41ad75:	outs   dx,BYTE PTR ds:[esi]
  41ad76:	push   ecx
  41ad77:	fst    QWORD PTR [ecx]
  41ad79:	xor    DWORD PTR [ebx+0x7279dacd],0x4b
  41ad80:	xor    BYTE PTR [esi+0x1e4df922],0xe3
  41ad87:	es loope 0x41ad60
  41ad8a:	in     eax,dx
  41ad8b:	(bad)  
  41ad8c:	sahf   
  41ad8d:	rol    BYTE PTR [edx-0x12],cl
  41ad90:	xchg   bh,cl
  41ad92:	add    esi,eax
  41ad94:	jmp    0x41ad5d
  41ad96:	in     al,dx
  41ad97:	jnp    0x41adff
  41ad99:	fptan  
  41ad9b:	pop    ecx
  41ad9c:	and    al,0xaa
  41ad9e:	dec    ebx
  41ad9f:	xchg   ecx,eax
  41ada0:	out    0x66,eax
  41ada2:	ret    
  41ada3:	pop    ss
  41ada4:	iret   
  41ada5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ada6:	jmp    0x41ada8
	...
  41adb0:	add    BYTE PTR [edi],al
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4-0x480f36ab],0x1d
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [esi-0x41fffffd],ch
  41adca:	fs (bad) 
  41adcc:	retf   0x107b
  41adcf:	jmp    0x1fde:0x57e2dc7f
  41add6:	imul   eax,esp,0x8dbea9ce
  41addc:	neg    DWORD PTR ds:0x7f7e8a93
  41ade2:	test   al,0x39
  41ade4:	mov    al,BYTE PTR [ecx]
  41ade6:	(bad)  
  41ade7:	sar    BYTE PTR [ecx+edx*8+0x7c],cl
  41adeb:	int    0x8e
  41aded:	xor    cl,BYTE PTR [esi]
  41adef:	mov    al,ds:0x3e82c5a6
  41adf4:	popf   
  41adf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf6:	nop
  41adf7:	pushf  
  41adf8:	lahf   
  41adf9:	ins    DWORD PTR es:[edi],dx
  41adfa:	dec    edx
  41adfb:	adc    bh,BYTE PTR [edi+0xbfa0e94]
  41ae01:	les    edi,FWORD PTR [ecx+0x10a16031]
  41ae07:	rcr    BYTE PTR [ebp-0x30b70be9],0xc2
  41ae0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae0f:	aad    0x21
  41ae11:	pusha  
  41ae12:	mov    eax,0x11ab0489
  41ae17:	and    DWORD PTR [eax+eax*4+0x3a],edx
  41ae1b:	sub    eax,0x22ad9593
  41ae20:	mov    ah,dh
  41ae22:	std    
  41ae23:	or     cl,dl
  41ae25:	inc    ebx
  41ae26:	mov    dl,cl
  41ae28:	dec    esp
  41ae29:	(bad)  
  41ae2a:	out    dx,eax
  41ae2b:	add    DWORD PTR [ebx+ebx*4],edi
  41ae2e:	fwait
  41ae2f:	hlt    
  41ae30:	adc    BYTE PTR [edi-0xc],dl
  41ae33:	push   ss
  41ae34:	stos   DWORD PTR es:[edi],eax
  41ae35:	dec    ebx
  41ae36:	das    
  41ae37:	lock push ss
  41ae39:	xchg   ebp,eax
  41ae3a:	call   0xea51dbef
  41ae3f:	out    dx,al
  41ae40:	and    DWORD PTR [esi],eax
  41ae42:	mov    ah,0x7b
  41ae44:	fwait
  41ae45:	xchg   ebx,eax
  41ae46:	cld    
  41ae47:	cmp    esi,DWORD PTR [ebx-0x79]
  41ae4a:	retf   
  41ae4b:	adc    ecx,DWORD PTR [edi]
  41ae4d:	sub    DWORD PTR [ebp+0x42fa244e],ebp
  41ae53:	clc    
  41ae54:	adc    eax,0xcd72fc00
  41ae59:	(bad)  
  41ae5a:	rol    dl,1
  41ae5c:	cmp    al,0x7d
  41ae5e:	mov    ebx,0x4dcf7248
  41ae63:	sbb    BYTE PTR [ebp+0x4b],0xe1
  41ae67:	cwde   
  41ae68:	into   
  41ae69:	inc    ebx
  41ae6a:	push   ebp
  41ae6b:	cdq    
  41ae6c:	mov    ebp,0xb61f658b
  41ae71:	inc    esi
  41ae72:	xchg   esp,eax
  41ae73:	std    
  41ae74:	pop    esp
  41ae75:	or     BYTE PTR [edx],al
  41ae77:	nop
  41ae78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae79:	test   DWORD PTR [ebx+0x606e6609],ecx
  41ae7f:	xor    BYTE PTR [ebp+0x76],dl
  41ae82:	test   al,0xf
  41ae84:	adc    BYTE PTR ds:0x5dd19b02,dh
  41ae8a:	xor    al,0xb3
  41ae8c:	pop    ss
  41ae8d:	scas   eax,DWORD PTR es:[edi]
  41ae8e:	xor    BYTE PTR [esi],0xf6
  41ae91:	(bad)  
  41ae92:	and    esp,edi
  41ae94:	(bad)  
  41ae95:	jmp    0x41aeb8
  41ae97:	retf   
  41ae98:	fwait
  41ae99:	mov    eax,0x7dc9e495
  41ae9e:	sub    BYTE PTR [edx-0x1e],bh
  41aea1:	nop
  41aea2:	mov    ds:0x1744f663,eax
  41aea7:	dec    ebp
  41aea8:	mov    esp,eax
  41aeaa:	inc    esp
  41aeab:	adc    ecx,edi
  41aead:	lahf   
  41aeae:	push   0xffffffe5
  41aeb0:	xchg   ebx,eax
  41aeb1:	call   0xf710:0x4cc31820
  41aeb8:	inc    esi
  41aeb9:	pop    ss
  41aeba:	outs   dx,BYTE PTR ds:[esi]
  41aebb:	push   esi
  41aebc:	sbb    al,0xfe
  41aebe:	dec    ebp
  41aebf:	out    0x57,eax
  41aec1:	mov    ecx,0xe2cf3d11
  41aec6:	jge    0x41aee6
  41aec8:	cmp    al,0xe4
  41aeca:	loope  0x41aead
  41aecc:	and    BYTE PTR [esi+0x6015a4c],al
  41aed2:	jle    0x41ae85
  41aed4:	das    
  41aed5:	push   cs
  41aed6:	sbb    eax,0x9a36c85e
  41aedb:	ds push edi
  41aedd:	imul   edi,esp,0xfffffffc
  41aee0:	pop    ds
  41aee1:	nop
  41aee2:	xor    esp,esp
  41aee4:	pop    ecx
  41aee5:	lock dec ebx
  41aee7:	int3   
  41aee8:	jno    0x41ae9b
  41aeea:	jnp    0x41ae6e
  41aeec:	add    ah,BYTE PTR [esp+eax*1+0x78cce21]
  41aef3:	adc    ecx,DWORD PTR [esi]
  41aef5:	into   
  41aef6:	test   al,0x24
  41aef8:	push   ecx
  41aef9:	cmp    al,0xde
  41aefb:	jo     0x41ae7e
  41aefd:	cmp    DWORD PTR cs:[ecx+0x6236a123],0xffffffcd
  41af05:	xchg   esp,eax
  41af06:	leave  
  41af07:	add    bh,BYTE PTR [ecx-0x5b]
  41af0a:	(bad)  
  41af0b:	jbe    0x41af50
  41af0d:	fimul  WORD PTR [edi]
  41af0f:	cmp    al,BYTE PTR [esi+0x2351f2c6]
  41af15:	in     al,dx
  41af16:	pop    ebx
  41af17:	dec    ebp
  41af18:	int3   
  41af19:	xor    ebx,DWORD PTR [ebx-0x681e2a8d]
  41af1f:	daa    
  41af20:	in     eax,dx
  41af21:	sahf   
  41af22:	sub    eax,DWORD PTR [eax-0x45]
  41af25:	add    eax,0x1fc052b3
  41af2a:	xor    al,0x4c
  41af2c:	add    al,0xc6
  41af2e:	pop    ds
  41af2f:	add    ah,cl
  41af31:	in     eax,0xdf
  41af33:	xor    DWORD PTR [ecx+0x2e1ba603],esi
  41af39:	inc    ebp
  41af3a:	icebp  
  41af3b:	or     ebx,0xa54507a5
  41af41:	(bad)  [edi]
  41af43:	outs   dx,BYTE PTR ds:[esi]
  41af44:	push   eax
  41af45:	xor    dh,0x30
  41af48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af49:	sbb    edi,DWORD PTR [ecx-0x1e06f010]
  41af4f:	cmp    DWORD PTR [edx+ebx*2+0x2443aeb7],eax
  41af56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af57:	or     eax,0x6a231ccf
  41af5c:	out    0x6,eax
  41af5e:	pop    edx
  41af5f:	iret   
  41af60:	(bad)  [ebx-0x31]
  41af63:	shl    DWORD PTR [ebx+0x2d],0x63
  41af67:	cli    
  41af68:	adc    edx,DWORD PTR ds:0xa3ab80dd
  41af6e:	rol    DWORD PTR [edx+0x883c243],cl
  41af74:	mov    eax,ds:0x5cc669ff
  41af79:	ret    
  41af7a:	sbb    eax,DWORD PTR [eax]
  41af7c:	shl    DWORD PTR ds:0x856e35bf,1
  41af82:	loop   0x41af2a
  41af84:	mov    ds:0x9eb0b117,al
  41af89:	xchg   ebx,eax
  41af8a:	aaa    
  41af8b:	sbb    bl,ah
  41af8d:	add    DWORD PTR [eax+0x42],edx
  41af90:	cmp    DWORD PTR [ecx+0x2ac596a1],0x7ffa2dc1
  41af9a:	cs adc al,0xe3
  41af9d:	adc    DWORD PTR [ecx],edx
  41af9f:	mov    dh,0xdc
  41afa1:	mov    ds:0xcd54a53b,eax
  41afa6:	aam    0xd6
  41afa8:	cmp    eax,0xa6dbc6c6
  41afad:	cmp    eax,0x506d1adc
  41afb2:	inc    esp
  41afb3:	rcl    BYTE PTR [eax+eax*4+0x79e4e5b7],1
  41afba:	cmp    DWORD PTR [edi],ebp
  41afbc:	inc    eax
  41afbd:	sbb    DWORD PTR [ebp-0x6ffa767f],0xfffffff6
  41afc4:	stc    
  41afc5:	lds    ecx,FWORD PTR [edx-0x71]
  41afc8:	cmc    
  41afc9:	push   ebp
  41afca:	data16 lahf 
  41afcc:	mov    dl,0x7e
  41afce:	test   al,0x50
  41afd0:	and    cl,BYTE PTR [ebx+0x46]
  41afd3:	jno    0x41af74
  41afd5:	aas    
  41afd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afd7:	hlt    
  41afd8:	mov    ch,al
  41afda:	inc    ecx
  41afdb:	cld    
  41afdc:	adc    ch,ah
  41afde:	(bad)  
  41afdf:	mov    dl,0x30
  41afe1:	xor    eax,0x24329168
  41afe6:	je     0x41afb7
  41afe8:	push   edx
  41afe9:	push   ecx
  41afea:	xlat   BYTE PTR ds:[ebx]
  41afeb:	shl    DWORD PTR [ebx+esi*4+0x56],cl
  41afef:	outs   dx,BYTE PTR ds:[esi]
  41aff0:	test   BYTE PTR [esi],dh
  41aff2:	adc    eax,0x690cc473
  41aff7:	xchg   edx,eax
  41aff8:	fucomip st,st(3)
  41affa:	xchg   ebp,eax
  41affb:	aaa    
  41affc:	das    
  41affd:	enter  0xc711,0x25
  41b001:	mov    bl,0xd6
  41b003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b004:	in     eax,0x85
  41b006:	dec    esp
  41b007:	test   al,0xce
  41b009:	jmp    0x2852:0x2ff9a329
  41b010:	inc    edi
  41b011:	fimul  DWORD PTR [ebp+0x6d60fb5b]
  41b017:	enter  0x48ff,0x30
  41b01b:	sub    dh,0x97
  41b01e:	adc    eax,0x186cbfe4
  41b023:	cmp    ah,ah
  41b025:	adc    DWORD PTR [eax+0x39332082],ebx
  41b02b:	imul   esp,edi,0xffffffc8
  41b02e:	and    DWORD PTR [ebx+0x2d],0x7cceadf3
  41b035:	mov    ebp,0x85b194e3
  41b03a:	sub    DWORD PTR ds:0x4ab0bd77,esi
  41b040:	stos   DWORD PTR es:[edi],eax
  41b041:	inc    ebp
  41b042:	jne    0x41b04d
  41b044:	mov    eax,0x2cf28785
  41b049:	retf   
  41b04a:	pop    ebp
  41b04b:	iret   
  41b04c:	xor    al,0x48
  41b04e:	stos   DWORD PTR es:[edi],eax
  41b04f:	mov    ch,0xc0
  41b051:	jecxz  0x41b096
  41b053:	retf   
  41b054:	sub    DWORD PTR [edi],eax
  41b056:	pop    es
  41b057:	inc    esp
  41b058:	shr    edx,1
  41b05a:	mov    ?,WORD PTR [esi-0x38]
  41b05d:	mov    ds:0xac86e1a8,al
  41b062:	ret    
  41b063:	mov    edi,0x3737c360
  41b068:	imul   eax,DWORD PTR [eax+0x56],0x0
  41b06c:	mov    al,ds:0x9c5f4b0f
  41b071:	jno    0x41b02a
  41b073:	ins    BYTE PTR es:[edi],dx
  41b074:	jl     0x41b022
  41b076:	popf   
  41b077:	pop    eax
  41b078:	(bad)  
  41b07a:	mov    ebx,0x8dc7c792
  41b07f:	inc    edx
  41b080:	lods   al,BYTE PTR ds:[esi]
  41b081:	sub    al,0x29
  41b083:	pop    ecx
  41b084:	jno    0x41b081
  41b086:	add    ch,ah
  41b088:	mov    al,0xcf
  41b08a:	inc    esp
  41b08b:	je     0x41b0bd
  41b08d:	mov    dh,BYTE PTR [edx+0x6146edfc]
  41b093:	(bad)  
  41b095:	fld    TBYTE PTR [edi]
  41b097:	xchg   edx,eax
  41b098:	inc    eax
  41b099:	outs   dx,BYTE PTR ds:[esi]
  41b09a:	test   al,0x10
  41b09c:	jae    0x41b0e7
  41b09e:	aaa    
  41b09f:	add    dl,BYTE PTR [edx-0x2a9b050b]
  41b0a5:	in     eax,0x64
  41b0a7:	dec    ebx
  41b0a8:	(bad)  
  41b0a9:	push   eax
  41b0aa:	mov    ds:0xd23c18ce,al
  41b0af:	jle    0x41b0ba
  41b0b1:	push   cs
  41b0b2:	xchg   edi,eax
  41b0b3:	xchg   esp,eax
  41b0b4:	out    dx,al
  41b0b5:	pop    ss
  41b0b6:	aas    
  41b0b7:	xor    dh,BYTE PTR [edx]
  41b0b9:	rep stos BYTE PTR es:[edi],al
  41b0bb:	xlat   BYTE PTR ds:[ebx]
  41b0bc:	imul   esi,DWORD PTR [ecx-0x5d],0x6d2e3fbe
  41b0c3:	out    0xe6,al
  41b0c5:	(bad)  
  41b0c6:	sahf   
  41b0c7:	cmp    DWORD PTR [ebp+0x2f3affd0],esi
  41b0cd:	xchg   esp,eax
  41b0ce:	loope  0x41b0a1
  41b0d0:	jg     0x41b0c7
  41b0d2:	jnp    0x41b080
  41b0d4:	lea    edi,[ebx+ebx*1]
  41b0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d8:	dec    esp
  41b0d9:	or     edx,DWORD PTR [edi-0x54]
  41b0dc:	enter  0x8665,0x6b
  41b0e0:	cmp    esi,edx
  41b0e2:	adc    DWORD PTR [ebp+0x51e7ca2c],edi
  41b0e8:	push   cs
  41b0e9:	loop   0x41b164
  41b0eb:	sti    
  41b0ec:	inc    esp
  41b0ed:	iret   
  41b0ee:	inc    esp
  41b0ef:	mov    esp,0x1e0c57e
  41b0f4:	jne    0x41b12a
  41b0f6:	pop    esp
  41b0f7:	ret    
  41b0f8:	sbb    DWORD PTR [edi+0x78],0xffffffce
  41b0fc:	fidivr WORD PTR [edx-0x4334c591]
  41b102:	dec    esi
  41b103:	mov    dh,0x4a
  41b105:	fs sbb al,0x20
  41b108:	sti    
  41b109:	popw   ds
  41b10b:	push   0x9374e526
  41b110:	mov    esi,edx
  41b112:	cmp    eax,0x44e2961
  41b117:	push   cs
  41b118:	jmp    0x41b192
  41b11a:	nop
  41b11b:	push   eax
  41b11c:	rcr    DWORD PTR ds:0x81b901ca,cl
  41b122:	pop    edx
  41b123:	and    cl,dh
  41b125:	aas    
  41b126:	jnp    0x41b194
  41b128:	and    DWORD PTR [edi],0x78
  41b12b:	ja     0x41b0ee
  41b12d:	xchg   esp,eax
  41b12e:	into   
  41b12f:	adc    dh,BYTE PTR ds:0x44b2161f
  41b135:	int    0xfd
  41b137:	pushf  
  41b138:	int    0xda
  41b13a:	pop    ss
  41b13b:	push   edx
  41b13c:	push   esi
  41b13d:	lods   eax,DWORD PTR ds:[esi]
  41b13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b13f:	sti    
  41b140:	(bad)  
  41b141:	dec    edi
  41b142:	jns    0x41b128
  41b144:	xor    eax,0xcd41e7f7
  41b149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b14a:	fbstp  TBYTE PTR [edx+0x30]
  41b14d:	sbb    ah,ch
  41b14f:	sbb    BYTE PTR [edx+0x5ac112bf],dh
  41b155:	pop    es
  41b156:	pushf  
  41b157:	push   edi
  41b158:	add    ebx,DWORD PTR [ebp+0x66421dd6]
  41b15e:	adc    al,0x1b
  41b160:	hlt    
  41b161:	sub    dl,bl
  41b163:	adc    eax,DWORD PTR [ecx-0x13db9ab7]
  41b169:	adc    eax,0x9416bcb1
  41b16e:	mov    eax,0x904581af
  41b173:	mov    ds:0x5a94df,eax
	...
  41b180:	add    bl,ah
  41b182:	call   0xf8dd8217
  41b187:	jecxz  0x41b184
  41b189:	jns    0x41b1d5
  41b18b:	shr    ebp,0x87
  41b18e:	js     0x41b16a
  41b190:	das    
  41b191:	retf   
  41b192:	add    DWORD PTR cs:[eax],eax
  41b195:	scas   al,BYTE PTR es:[edi]
  41b196:	add    eax,DWORD PTR [eax]
  41b198:	add    BYTE PTR [esi+0x2a4f2279],ah
  41b19e:	or     BYTE PTR [eax+0x67],0x83
  41b1a2:	in     al,0xc4
  41b1a4:	jbe    0x41b218
  41b1a6:	dec    edx
  41b1a7:	jg     0x41b1a4
  41b1a9:	lock jno 0x41b176
  41b1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1ad:	das    
  41b1ae:	pop    esp
  41b1af:	bnd jmp 0x41b1c8
  41b1b2:	stos   DWORD PTR es:[edi],eax
  41b1b3:	or     eax,0x290368e0
  41b1b8:	in     al,0x63
  41b1ba:	xor    BYTE PTR [edi+0x4],cl
  41b1bd:	test   eax,0xb7d246e3
  41b1c2:	fdivr  DWORD PTR [esi-0x7c]
  41b1c5:	mov    ecx,0x4ac18afd
  41b1ca:	jb     0x41b17b
  41b1cc:	out    0x6f,eax
  41b1ce:	xor    dl,BYTE PTR [edx-0xa]
  41b1d1:	(bad)  
  41b1d2:	sti    
  41b1d3:	add    bl,BYTE PTR [ebp-0x2a]
  41b1d6:	sar    DWORD PTR [edx],cl
  41b1d8:	xor    al,0x19
  41b1da:	icebp  
  41b1db:	jbe    0x41b17b
  41b1dd:	adc    DWORD PTR [esp+edi*8],0xffffffa8
  41b1e1:	sbb    esi,DWORD PTR [esi+0x3cbcf802]
  41b1e7:	or     cl,BYTE PTR [eax-0x62]
  41b1ea:	sqrtps xmm1,XMMWORD PTR [esi]
  41b1ed:	out    dx,al
  41b1ee:	pop    ss
  41b1ef:	mov    ch,0x75
  41b1f1:	inc    edx
  41b1f2:	and    eax,0xd3974204
  41b1f7:	mov    ch,BYTE PTR [edi-0x682f4b79]
  41b1fd:	jp     0x41b1d6
  41b1ff:	addr16 cmp ch,dl
  41b202:	cli    
  41b203:	leave  
  41b204:	call   0x25c2:0x67efbe1b
  41b20b:	outs   dx,BYTE PTR ds:[esi]
  41b20c:	or     BYTE PTR [ecx-0x4b],cl
  41b20f:	pop    ds
  41b210:	dec    esi
  41b211:	fcom   QWORD PTR ds:[eax-0x2b75a70f]
  41b218:	push   edx
  41b219:	je     0x41b1d8
  41b21b:	mov    al,0x39
  41b21d:	cld    
  41b21e:	jle    0x41b1a3
  41b220:	push   edx
  41b221:	adc    ch,BYTE PTR [esi+0x5d]
  41b224:	pop    ds
  41b225:	inc    edi
  41b226:	mov    cs,WORD PTR [esi+0x4e]
  41b229:	inc    eax
  41b22a:	ins    DWORD PTR es:[edi],dx
  41b22b:	mov    al,ds:0x78089d48
  41b230:	int3   
  41b231:	pop    ds
  41b232:	mov    cl,BYTE PTR [esi]
  41b234:	fistp  WORD PTR [esi+0x3af3fe2f]
  41b23a:	mov    al,BYTE PTR [edi+eiz*4]
  41b23d:	dec    ecx
  41b23e:	pop    edx
  41b23f:	cmp    dl,BYTE PTR [esi]
  41b241:	das    
  41b242:	stos   BYTE PTR es:[edi],al
  41b243:	push   ebx
  41b244:	sbb    cl,dh
  41b246:	mov    bh,0x41
  41b248:	sbb    ebp,eax
  41b24a:	iret   
  41b24b:	loop   0x41b1f5
  41b24d:	repnz outs dx,DWORD PTR ds:[esi]
  41b24f:	mov    bh,0x5d
  41b251:	and    al,0xc6
  41b253:	sub    al,0xe0
  41b255:	(bad)  
  41b256:	in     eax,dx
  41b257:	push   eax
  41b258:	jg     0x41b286
  41b25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b25b:	and    BYTE PTR [ecx+0x6d],dh
  41b25e:	mov    eax,0x26f452f2
  41b263:	or     dh,bl
  41b265:	rcr    ebx,0x78
  41b268:	dec    ebx
  41b269:	inc    BYTE PTR [ebx+0x5b66509d]
  41b26f:	xchg   esi,eax
  41b270:	ss das 
  41b272:	mov    esp,0x31c1b251
  41b277:	add    esp,DWORD PTR [esi-0x50]
  41b27a:	jle    0x41b283
  41b27c:	out    0x24,eax
  41b27e:	adc    DWORD PTR [esi*1+0x3a9ce49b],ebx
  41b285:	jle    0x41b219
  41b287:	xlat   BYTE PTR ds:[ebx]
  41b288:	lods   eax,DWORD PTR ds:[esi]
  41b289:	mov    ebp,0xbb858265
  41b28e:	arpl   WORD PTR [edi],si
  41b290:	push   ss
  41b291:	xchg   edx,eax
  41b292:	sub    al,0x12
  41b294:	mov    bh,0x28
  41b296:	push   ebp
  41b297:	shr    BYTE PTR [ebp-0x1e],cl
  41b29a:	inc    eax
  41b29b:	cmp    edi,esp
  41b29d:	sub    eax,0xfcefbab0
  41b2a2:	jp     0x41b2fc
  41b2a4:	test   eax,0x626da564
  41b2a9:	adc    eax,0x4e2dfb53
  41b2ae:	push   ss
  41b2af:	daa    
  41b2b0:	int    0x92
  41b2b2:	jge    0x41b2fe
  41b2b4:	sub    al,bl
  41b2b6:	xor    DWORD PTR [ebx],esp
  41b2b8:	mov    esp,0x699b537a
  41b2bd:	mov    ecx,esp
  41b2bf:	test   eax,0x206aaf0d
  41b2c4:	push   cs
  41b2c5:	push   cs
  41b2c6:	lahf   
  41b2c7:	mov    esp,ebx
  41b2c9:	xor    ch,al
  41b2cb:	lock push cs
  41b2cd:	call   0x2488b699
  41b2d2:	dec    esp
  41b2d3:	xor    dh,dl
  41b2d5:	ds jle 0x41b277
  41b2d8:	mov    dh,0x12
  41b2da:	test   DWORD PTR [edx],ecx
  41b2dc:	ror    ebp,cl
  41b2de:	lock jbe 0x41b318
  41b2e1:	adc    esi,DWORD PTR [eax-0x4a0c948e]
  41b2e7:	mov    dh,0xae
  41b2e9:	mov    eax,ds:0x85ce9962
  41b2ee:	out    dx,al
  41b2ef:	leave  
  41b2f0:	in     al,0x5d
  41b2f2:	jle    0x41b2fd
  41b2f4:	push   ebx
  41b2f5:	xor    DWORD PTR [edx-0x58ef7c47],0xca3ea9a0
  41b2ff:	pop    ds
  41b300:	into   
  41b301:	addr16 cwde 
  41b303:	adc    ch,BYTE PTR [ebx]
  41b305:	rcl    ch,1
  41b307:	test   eax,0x90279e34
  41b30c:	(bad)  
  41b30d:	pop    ss
  41b30e:	push   esp
  41b30f:	stos   BYTE PTR es:[edi],al
  41b310:	pop    ecx
  41b311:	dec    ebp
  41b312:	or     ebx,DWORD PTR [ecx+0x7c9f0fad]
  41b318:	pop    ebx
  41b319:	call   0xf2d6:0xa0fd45b5
  41b320:	(bad)  
  41b321:	clc    
  41b322:	mov    ebx,0xe8cdcd17
  41b327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b328:	addr16 xchg edi,eax
  41b32a:	sub    edx,DWORD PTR [edx-0x1e4a3688]
  41b330:	jmp    0x18f09ca
  41b335:	cs out 0x57,eax
  41b338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b339:	(bad)  
  41b33a:	loopne 0x41b38f
  41b33c:	mov    ecx,0x6bef0161
  41b341:	std    
  41b342:	gs mov dh,0xbc
  41b345:	cmp    al,0x6
  41b347:	mov    ebx,0xc6d84163
  41b34d:	add    BYTE PTR [ebx-0x28],al
  41b350:	test   edi,esp
  41b352:	outs   dx,DWORD PTR ds:[esi]
  41b353:	cmp    DWORD PTR [edi],ebx
  41b355:	push   cs
  41b356:	xor    esi,DWORD PTR [eax]
  41b358:	add    DWORD PTR [ebx+0x4dc80a62],esi
  41b35e:	and    DWORD PTR [eax+0x270cb64c],esp
  41b364:	pusha  
  41b365:	mov    dh,0xd
  41b367:	and    BYTE PTR ds:0x16f5b40d,ah
  41b36d:	jno    0x41b32f
  41b36f:	mov    ch,0xcb
  41b371:	inc    esi
  41b372:	btr    DWORD PTR [edx+0x28],0x1
  41b377:	jmp    0x41b36f
  41b379:	push   edx
  41b37a:	mov    eax,gs:0xe62607c3
  41b380:	add    eax,0x240743a6
  41b385:	mov    ds:0x1703f6aa,eax
  41b38a:	push   0xffffffa1
  41b38c:	es jbe 0x41b3d5
  41b38f:	inc    ecx
  41b390:	add    DWORD PTR [ebx+esi*8-0x34],eax
  41b394:	je     0x41b379
  41b396:	jae    0x41b38f
  41b398:	push   ebp
  41b399:	lods   eax,DWORD PTR ds:[esi]
  41b39a:	push   0x5d
  41b39c:	repz push ebp
  41b39e:	jmp    DWORD PTR [ebp-0x2d]
  41b3a1:	cdq    
  41b3a2:	jbe    0x41b3e0
  41b3a4:	xor    ebx,DWORD PTR [ebx]
  41b3a6:	mov    ds:0xdf20a4a1,eax
  41b3ab:	outs   dx,BYTE PTR ds:[esi]
  41b3ac:	inc    esp
  41b3ad:	cwde   
  41b3ae:	sahf   
  41b3af:	or     ah,ch
  41b3b1:	leave  
  41b3b2:	jmp    DWORD PTR [ecx]
  41b3b4:	push   esi
  41b3b5:	sbb    esi,DWORD PTR [edx]
  41b3b7:	ss mov ch,0xcc
  41b3ba:	dec    edi
  41b3bb:	xchg   ecx,eax
  41b3bc:	stos   BYTE PTR es:[edi],al
  41b3bd:	pop    ecx
  41b3be:	push   es
  41b3bf:	jle    0x41b369
  41b3c1:	sbb    edx,edi
  41b3c3:	mov    esi,0x30d0fd5e
  41b3c8:	fistp  DWORD PTR [esi]
  41b3ca:	xor    cl,bl
  41b3cc:	bound  ebx,QWORD PTR [ebp-0x3ba2a9a0]
  41b3d2:	sbb    BYTE PTR [eax],ah
  41b3d4:	sub    edi,eax
  41b3d6:	mov    bl,0xfe
  41b3d8:	fsub   DWORD PTR [edx]
  41b3da:	repz adc DWORD PTR [eax-0x69],0xffffffa8
  41b3df:	inc    esp
  41b3e0:	(bad)  
  41b3e1:	popf   
  41b3e2:	dec    edx
  41b3e3:	xor    bh,BYTE PTR [esi+0x37]
  41b3e6:	xor    al,0x87
  41b3e8:	sbb    BYTE PTR [ebp+0x7c8dd61a],0x17
  41b3ef:	jmp    0x6910:0x74e58902
  41b3f6:	xchg   esp,eax
  41b3f7:	bound  esi,QWORD PTR [esi-0x5306037b]
  41b3fd:	rep outs dx,BYTE PTR ss:[esi]
  41b400:	sub    ch,BYTE PTR [edi]
  41b402:	xor    edi,DWORD PTR [edx+0xe]
  41b405:	clc    
  41b406:	rol    ecx,cl
  41b408:	imul   ebx,DWORD PTR [edx-0x1c],0x26
  41b40c:	mov    eax,ds:0xe3fa5c5c
  41b411:	add    edi,DWORD PTR [ebp+0x0]
  41b414:	lods   eax,DWORD PTR ds:[esi]
  41b415:	dec    eax
  41b416:	push   eax
  41b417:	jnp    0x41b407
  41b419:	gs add eax,0xe711dd22
  41b41f:	sbb    dl,0xb9
  41b422:	cmp    al,0x7e
  41b424:	jp     0x41b3f3
  41b426:	push   ebx
  41b427:	or     DWORD PTR [esi+ebp*4+0x34563cfa],esp
  41b42e:	sbb    edx,ebx
  41b430:	sub    esp,eax
  41b432:	adc    bh,BYTE PTR [eax+0x397512c4]
  41b438:	ja     0x41b427
  41b43a:	mov    ds:0x4c25f7fd,eax
  41b43f:	xor    BYTE PTR [esp+ebx*2-0x7b],0xa6
  41b444:	adc    BYTE PTR [ecx],0x6b
  41b447:	sub    eax,0x735e74fb
  41b44c:	mov    eax,ds:0xfdc71b96
  41b451:	cmp    DWORD PTR [edi],0x2a
  41b454:	cmp    DWORD PTR [eax+0x29523a],eax
  41b45a:	sub    eax,0x60ff3662
  41b45f:	repnz sub al,0x9d
  41b462:	and    al,0x48
  41b464:	arpl   dx,si
  41b466:	adc    dh,0x3
  41b469:	pop    ecx
  41b46a:	push   es
  41b46b:	das    
  41b46c:	pop    eax
  41b46d:	(bad)  
  41b46e:	rol    BYTE PTR [eax-0x7e],cl
  41b471:	push   eax
  41b472:	sbb    ah,BYTE PTR ds:0x65c32b32
  41b478:	dec    ebp
  41b479:	xchg   esp,eax
  41b47a:	addr16 retf 0x97d1
  41b47e:	xchg   esp,eax
  41b47f:	out    dx,al
  41b480:	xor    eax,0xcd7cfa07
  41b485:	or     al,0xea
  41b487:	fild   QWORD PTR [eax]
  41b489:	mov    ch,0x6f
  41b48b:	mov    ch,0x6f
  41b48d:	xchg   dh,al
  41b48f:	dec    ebx
  41b490:	ds xor eax,0x887810e9
  41b496:	fstp   TBYTE PTR [esi-0x30a4ac44]
  41b49c:	jl     0x41b4f0
  41b49e:	inc    edx
  41b49f:	ja     0x41b4e6
  41b4a1:	cwde   
  41b4a2:	pop    esi
  41b4a3:	sbb    bh,BYTE PTR [edx+edi*8+0x4f]
  41b4a7:	fwait
  41b4a8:	inc    edi
  41b4a9:	sbb    BYTE PTR [esi+0x6d493b6e],0x50
  41b4b0:	pop    ecx
  41b4b1:	cmp    al,0xd6
  41b4b3:	push   cs
  41b4b4:	jmp    0x41b4ba
  41b4b6:	pop    eax
  41b4b7:	push   edx
  41b4b8:	fstp   QWORD PTR [edx+0x12]
  41b4bb:	add    DWORD PTR [esi+0x3e],ecx
  41b4be:	sar    DWORD PTR [ebp+0x74],0xfa
  41b4c2:	outs   dx,BYTE PTR ds:[esi]
  41b4c3:	adc    bl,BYTE PTR gs:[ebx-0x80]
  41b4c7:	lods   eax,DWORD PTR ss:[esi]
  41b4c9:	out    dx,al
  41b4ca:	int3   
  41b4cb:	mov    ecx,cs
  41b4cd:	das    
  41b4ce:	inc    ebp
  41b4cf:	nop
  41b4d0:	push   ds
  41b4d1:	mov    ebx,0xa539d5cf
  41b4d6:	or     al,0x9a
  41b4d8:	rcr    DWORD PTR [edi-0x4628e10c],cl
  41b4de:	(bad)  
  41b4df:	neg    DWORD PTR [edi]
  41b4e1:	mov    dh,0x44
  41b4e3:	sub    BYTE PTR [edi],bh
  41b4e5:	jmp    0x42ee:0x59b5ec66
  41b4ec:	rep lods al,BYTE PTR ds:[esi]
  41b4ee:	push   0xd03d38b7
  41b4f3:	int3   
  41b4f4:	pop    esi
  41b4f5:	iret   
  41b4f6:	pop    edx
  41b4f7:	mov    ebx,0x9090f55c
  41b4fc:	cmp    ebp,DWORD PTR [ebx+0x6d]
  41b4ff:	(bad)  
  41b501:	(bad)  
  41b502:	cdq    
  41b503:	sbb    edx,0xffffffb3
  41b506:	repz pop ebx
  41b508:	xchg   esi,eax
  41b509:	sahf   
  41b50a:	add    edx,ebx
  41b50c:	rol    DWORD PTR [ecx+esi*8],0x3a
  41b510:	inc    ecx
  41b511:	rol    DWORD PTR [ebp+0x4b38f79d],1
  41b517:	jmp    0x41b4e9
  41b519:	mov    BYTE PTR [edi+ebp*2-0x1447dc29],ah
  41b520:	xor    DWORD PTR [edi],edi
  41b522:	gs ret 
  41b524:	pop    esp
  41b525:	adc    eax,0x16a92a5f
  41b52a:	shr    DWORD PTR ds:0x54a4679d,cl
  41b530:	retf   
  41b531:	xchg   ebp,eax
  41b532:	mov    al,BYTE PTR [ecx+0x57]
  41b535:	and    DWORD PTR [esi-0x3b],0x5e2a7cd5
  41b53c:	cli    
  41b53d:	mov    esp,DWORD PTR [edx-0x2a284656]
  41b543:	add    eax,0x6705d5
	...
  41b550:	add    dh,ch
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0x94076770
  41b561:	jns    0x41b595
  41b563:	add    DWORD PTR [eax],eax
  41b565:	scas   al,BYTE PTR es:[edi]
  41b566:	add    eax,DWORD PTR [eax]
  41b568:	add    BYTE PTR [ecx+edx*2+0x64],ah
  41b56c:	mov    al,ds:0xbf539368
  41b571:	and    DWORD PTR [edi-0x4d8daea6],0x6b
  41b578:	xor    DWORD PTR [ebx],ebx
  41b57a:	push   edi
  41b57b:	adc    eax,0xdfb16ece
  41b580:	ret    0x67d
  41b583:	pop    ebp
  41b584:	sub    esp,0x70
  41b587:	clc    
  41b588:	dec    ecx
  41b589:	sbb    al,0xa
  41b58b:	imul   esp,DWORD PTR [eax-0x44],0xfffffff7
  41b58f:	mov    BYTE PTR [ebx],0xb8
  41b592:	cs int3 
  41b594:	push   esp
  41b595:	test   DWORD PTR [eax-0x4bb6250b],edx
  41b59b:	jns    0x41b615
  41b59d:	(bad)  
  41b59e:	push   ss
  41b59f:	call   0x6894:0xb5061017
  41b5a6:	jb     0x41b5c6
  41b5a8:	ins    BYTE PTR es:[edi],dx
  41b5a9:	dec    esp
  41b5aa:	test   BYTE PTR [edx+0x27],0xc9
  41b5ae:	mov    cl,0xdb
  41b5b0:	ret    0x9f6d
  41b5b3:	mov    ebp,0x79b45bcf
  41b5b8:	loop   0x41b597
  41b5ba:	fist   DWORD PTR [ecx+edi*8]
  41b5bd:	cmp    BYTE PTR [ebx+0x4d20e51b],dh
  41b5c3:	les    edi,FWORD PTR [edx]
  41b5c5:	push   esi
  41b5c6:	fcom   QWORD PTR [edx-0x26]
  41b5c9:	xchg   ebp,eax
  41b5ca:	jmp    0xdef97b3
  41b5cf:	xchg   BYTE PTR [ebx-0x492eefd6],ah
  41b5d5:	into   
  41b5d6:	mov    ebx,0x7e6fa08f
  41b5db:	sar    BYTE PTR [eax-0x6a988b76],1
  41b5e1:	js     0x41b61e
  41b5e3:	pop    ds
  41b5e4:	aaa    
  41b5e5:	retf   0xefb0
  41b5e8:	stos   DWORD PTR es:[edi],eax
  41b5e9:	sub    al,0xa4
  41b5eb:	test   ebp,ebp
  41b5ed:	and    DWORD PTR [esi-0x324c5578],ebp
  41b5f3:	pop    ss
  41b5f4:	sti    
  41b5f5:	cmp    DWORD PTR [esi-0x63191caa],0x14b7d192
  41b5ff:	dec    edi
  41b600:	inc    ecx
  41b601:	imul   ebp,DWORD PTR [edx+edi*2+0x485ac0d9],0xc29b42d5
  41b60c:	mov    ebp,0x4e0c4383
  41b611:	mov    esi,0x21f534ee
  41b616:	xchg   edi,eax
  41b617:	(bad)  
  41b618:	(bad)
  41b61b:	ss ret 0xf8a8
  41b61f:	mov    dl,bh
  41b621:	jb     0x41b5a6
  41b623:	out    0x5d,eax
  41b625:	mov    eax,0x56061b9c
  41b62a:	inc    edi
  41b62b:	add    al,0x89
  41b62d:	and    BYTE PTR [eax+0x11],ch
  41b630:	jae    0x41b60d
  41b632:	outs   dx,BYTE PTR ds:[esi]
  41b633:	ret    0x9264
  41b636:	cmp    ebp,ecx
  41b638:	xor    BYTE PTR [edi],al
  41b63a:	not    DWORD PTR [eax+0x7b]
  41b63d:	(bad)  
  41b63e:	mov    ah,0x9a
  41b640:	in     eax,0xd9
  41b642:	xchg   ebx,eax
  41b643:	or     eax,0xc7b27be2
  41b648:	scas   al,BYTE PTR es:[edi]
  41b649:	xchg   ebx,eax
  41b64a:	stos   DWORD PTR es:[edi],eax
  41b64b:	popf   
  41b64c:	or     eax,0x2778c604
  41b651:	mov    gs,WORD PTR ds:0xcabb51ee
  41b657:	pusha  
  41b658:	push   0x51
  41b65a:	mov    bl,0x46
  41b65c:	sbb    dl,0xaf
  41b65f:	ja     0x41b6d0
  41b661:	fdiv   DWORD PTR [eax+0x13136cbb]
  41b667:	fsubrp st(5),st
  41b669:	push   0xffffffeb
  41b66b:	scas   eax,DWORD PTR es:[edi]
  41b66c:	xor    al,0x77
  41b66e:	imul   ebx,DWORD PTR [ebx+0x5b],0x59
  41b672:	push   es
  41b673:	and    eax,0xb81729fa
  41b678:	bound  esi,QWORD PTR ds:0xadd0
  41b67d:	nop
  41b67e:	retf   0xe755
  41b681:	jl     0x41b679
  41b683:	sbb    eax,0xa8b11f00
  41b688:	or     eax,DWORD PTR [edi]
  41b68a:	mov    dh,0xd6
  41b68c:	add    DWORD PTR [edx-0x2d556695],esi
  41b692:	fcos   
  41b694:	adc    cl,bl
  41b696:	imul   ebp,DWORD PTR [edi-0x67f29e8a],0x7e
  41b69d:	test   al,0x29
  41b69f:	sub    eax,0xa8db739f
  41b6a4:	xchg   ebx,eax
  41b6a5:	mov    ebx,edx
  41b6a7:	test   eax,0x12ea4e1f
  41b6ac:	pushf  
  41b6ad:	mov    DWORD PTR [ebx-0x34a8f102],ebp
  41b6b3:	or     edi,ebx
  41b6b5:	jo     0x41b6a6
  41b6b7:	mov    eax,ds:0xa8001fdb
  41b6bc:	and    dl,BYTE PTR [edi-0x2a]
  41b6bf:	pop    edx
  41b6c0:	nop
  41b6c1:	or     ah,BYTE PTR [ecx+0x18abe45c]
  41b6c7:	pop    ebx
  41b6c8:	adc    bl,dh
  41b6ca:	sbb    esi,edi
  41b6cc:	xor    eax,0x4e10a23c
  41b6d1:	aam    0x1b
  41b6d3:	jl     0x41b682
  41b6d5:	fs mov edi,0xc0ca735a
  41b6db:	data16 jge 0x41b6d7
  41b6de:	jb     0x41b714
  41b6e0:	hlt    
  41b6e1:	out    0x19,eax
  41b6e3:	lods   al,BYTE PTR ds:[esi]
  41b6e4:	pop    edi
  41b6e5:	push   edx
  41b6e6:	das    
  41b6e7:	or     al,0xb4
  41b6e9:	sub    ecx,edi
  41b6eb:	fist   WORD PTR [ebx+0x587ad0bd]
  41b6f1:	div    DWORD PTR [ebx+edi*1-0x28]
  41b6f5:	and    al,0xd8
  41b6f7:	data16 fisubr WORD PTR [edx+0x23]
  41b6fb:	cmc    
  41b6fc:	test   eax,0xbc69279e
  41b701:	addr16 rcr edx,cl
  41b704:	or     eax,DWORD PTR [esi+0x7c]
  41b707:	jecxz  0x41b6a6
  41b709:	nop
  41b70a:	add    al,BYTE PTR [edi-0x5a]
  41b70d:	int3   
  41b70e:	dec    edi
  41b70f:	lods   eax,DWORD PTR ds:[esi]
  41b710:	mov    dl,al
  41b712:	into   
  41b713:	xor    dl,BYTE PTR [ebx-0x3d403bb2]
  41b719:	push   ecx
  41b71a:	stos   DWORD PTR es:[edi],eax
  41b71b:	sub    eax,0x14129dfa
  41b720:	xlat   BYTE PTR ds:[ebx]
  41b722:	int    0xcc
  41b724:	mov    esi,0xbcaddf76
  41b729:	js     0x41b765
  41b72b:	(bad)  
  41b72d:	clc    
  41b72e:	jmp    0x1fa2:0x29ed549b
  41b735:	lock repnz (bad) 
  41b738:	lahf   
  41b739:	and    eax,0x75361f7
  41b73e:	xchg   ecx,eax
  41b73f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b740:	in     eax,dx
  41b741:	stos   DWORD PTR es:[edi],eax
  41b742:	push   edi
  41b743:	(bad)  [edi-0x15]
  41b746:	adc    al,bl
  41b748:	fistp  DWORD PTR [eax-0x1d]
  41b74b:	xchg   edi,eax
  41b74c:	lods   al,BYTE PTR ds:[esi]
  41b74d:	gs jns 0x41b79f
  41b750:	add    DWORD PTR [esi-0x3b],0xb5c8d4bd
  41b757:	sbb    esi,ebp
  41b759:	hlt    
  41b75a:	jge    0x41b749
  41b75c:	fdiv   DWORD PTR [esp+edx*8]
  41b75f:	xchg   ebx,eax
  41b760:	xchg   edx,eax
  41b761:	pop    ebp
  41b762:	clc    
  41b763:	shr    BYTE PTR [ecx-0x32],0xbf
  41b767:	fs inc esp
  41b769:	dec    eax
  41b76a:	mul    DWORD PTR [esi-0x49]
  41b76d:	adc    al,0xd4
  41b76f:	scas   eax,DWORD PTR es:[edi]
  41b770:	adc    BYTE PTR [esi],dh
  41b772:	mov    ah,0x37
  41b774:	outs   dx,BYTE PTR ds:[esi]
  41b775:	mov    ebp,0xca014a9c
  41b77a:	out    dx,eax
  41b77b:	scas   eax,DWORD PTR es:[edi]
  41b77c:	ss pop edx
  41b77e:	sub    eax,0xe61fb253
  41b783:	cmp    dl,BYTE PTR [edi-0x71b6c824]
  41b789:	dec    edx
  41b78a:	mov    dl,0x5
  41b78c:	scas   al,BYTE PTR es:[edi]
  41b78d:	cmp    DWORD PTR [esp+edx*4+0x8],esp
  41b791:	mov    eax,ds:0xad213f4
  41b796:	in     al,0xd
  41b798:	adc    bh,BYTE PTR [edx]
  41b79a:	pop    ds
  41b79b:	and    eax,DWORD PTR [ecx+ecx*1]
  41b79e:	xchg   WORD PTR [ebx],sp
  41b7a1:	rcl    DWORD PTR [esi+0x4f0c106f],cl
  41b7a7:	or     eax,0xd657bd54
  41b7ac:	jbe    0x41b7ee
  41b7ae:	lock dec eax
  41b7b0:	in     eax,0x83
  41b7b2:	xor    esp,DWORD PTR [ecx+0x4c]
  41b7b5:	pop    ebp
  41b7b6:	iret   
  41b7b7:	sbb    DWORD PTR [edi],ebp
  41b7b9:	xchg   edx,eax
  41b7ba:	cli    
  41b7bb:	dec    edi
  41b7bc:	pusha  
  41b7bd:	sub    ecx,0x11677d35
  41b7c3:	mov    ecx,0xe42ea89f
  41b7c8:	xchg   edi,ebp
  41b7ca:	stc    
  41b7cb:	mov    ch,0x33
  41b7cd:	sub    bh,BYTE PTR [edi+0x2de53a74]
  41b7d3:	dec    eax
  41b7d4:	dec    edi
  41b7d5:	fadd   QWORD PTR [eax]
  41b7d7:	xor    dl,BYTE PTR [esi-0x23fb04f8]
  41b7dd:	pusha  
  41b7de:	out    dx,al
  41b7df:	xchg   edi,eax
  41b7e0:	and    DWORD PTR [ebx],0xddc91be0
  41b7e6:	inc    ebx
  41b7e7:	ret    
  41b7e8:	mov    esp,0xe35901eb
  41b7ed:	mov    ?,esp
  41b7ef:	mov    al,0xd9
  41b7f1:	jns    0x41b836
  41b7f3:	in     al,dx
  41b7f4:	dec    eax
  41b7f5:	pop    ebx
  41b7f6:	fbstp  TBYTE PTR [ecx]
  41b7f8:	loope  0x41b845
  41b7fa:	sbb    bh,dl
  41b7fc:	xchg   dl,ch
  41b7fe:	or     ch,BYTE PTR ds:0xac943d34
  41b804:	xor    al,0xaa
  41b806:	fs jg  0x41b857
  41b809:	pop    esi
  41b80a:	(bad)  
  41b80b:	jge    0x41b7f1
  41b80d:	mov    ch,0xce
  41b80f:	jo     0x41b795
  41b811:	test   al,0xf6
  41b813:	es mov edx,0x2249cdf8
  41b819:	xchg   edi,eax
  41b81a:	enter  0x81ff,0xe2
  41b81e:	lods   eax,DWORD PTR ds:[esi]
  41b81f:	jo     0x41b84d
  41b821:	pop    ss
  41b822:	repz loopne 0x41b80a
  41b825:	repz inc ebx
  41b827:	mov    DWORD PTR [edi+eiz*4],edx
  41b82a:	or     ah,BYTE PTR [edi]
  41b82c:	cmc    
  41b82d:	xchg   esi,eax
  41b82e:	inc    edi
  41b82f:	pop    edx
  41b830:	cmp    eax,0xb9f01ea9
  41b835:	push   cs
  41b836:	pop    ss
  41b837:	jnp    0x41b7b9
  41b839:	push   ds
  41b83a:	pop    es
  41b83b:	or     esp,0x51
  41b83e:	xchg   ecx,edi
  41b840:	lds    ebx,FWORD PTR [edx+0x1b]
  41b843:	adc    eax,0x9ed2a431
  41b848:	fdiv   DWORD PTR [esp+eax*1]
  41b84b:	pop    eax
  41b84c:	xchg   edi,eax
  41b84d:	jo     0x41b88c
  41b84f:	clc    
  41b850:	repnz sub eax,0xe4014756
  41b856:	mov    bh,0xc
  41b858:	xor    eax,0xd8a93d20
  41b85d:	rol    DWORD PTR [edi],cl
  41b85f:	sbb    BYTE PTR ds:0x66b06712,ch
  41b865:	pop    esp
  41b866:	scas   al,BYTE PTR es:[edi]
  41b867:	push   ecx
  41b868:	mov    edi,0x6090b70a
  41b86d:	bound  eax,QWORD PTR [edx]
  41b86f:	shl    BYTE PTR [edx-0x2ea2dd9a],0x6b
  41b876:	mov    bh,0x4f
  41b878:	inc    esp
  41b879:	xor    eax,0x5a048bac
  41b87e:	outs   dx,BYTE PTR ds:[esi]
  41b87f:	ins    DWORD PTR es:[edi],dx
  41b880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b881:	or     al,0xa5
  41b884:	cli    
  41b885:	or     edx,eax
  41b887:	into   
  41b888:	adc    ebx,DWORD PTR [edi-0x75]
  41b88b:	mov    al,ds:0xed716837
  41b890:	or     eax,0xcc1a0854
  41b895:	ja     0x41b8c5
  41b897:	dec    ebp
  41b898:	mov    WORD PTR [ecx],gs
  41b89a:	cmp    edx,DWORD PTR [ebx+0x69]
  41b89d:	mov    al,ds:0xeb285aaa
  41b8a2:	add    BYTE PTR [eax-0x2c],dh
  41b8a5:	push   esi
  41b8a6:	std    
  41b8a7:	into   
  41b8a8:	loopne 0x41b8be
  41b8aa:	cmp    ah,ch
  41b8ac:	sbb    BYTE PTR [edx+0x34],bh
  41b8af:	add    DWORD PTR [ecx],ecx
  41b8b1:	iret   
  41b8b2:	ror    DWORD PTR [edx+0x3c0ab18a],1
  41b8b8:	lods   al,BYTE PTR ds:[esi]
  41b8b9:	loop   0x41b90e
  41b8bb:	add    al,0x84
  41b8bd:	push   0x1186d9fc
  41b8c2:	in     al,0xed
  41b8c4:	nop
  41b8c5:	popf   
  41b8c6:	popa   
  41b8c7:	sub    BYTE PTR ds:0x2accf8ee,dl
  41b8cd:	cli    
  41b8ce:	xor    al,0x66
  41b8d0:	scas   al,BYTE PTR es:[edi]
  41b8d1:	leave  
  41b8d2:	fist   WORD PTR [ecx+0x47479c50]
  41b8d8:	lods   al,BYTE PTR ds:[esi]
  41b8d9:	pop    es
  41b8da:	shr    edi,1
  41b8dc:	and    al,0x41
  41b8de:	out    dx,al
  41b8df:	pop    edx
  41b8e0:	xor    al,0xf7
  41b8e2:	jo     0x41b94f
  41b8e4:	enter  0x1376,0x82
  41b8e8:	out    0x65,al
  41b8ea:	cmp    eax,0x2ee003d8
  41b8ef:	fucomi st,st(6)
  41b8f1:	imul   ebx,DWORD PTR [ebp+eiz*4+0xf5ad173],0xffffffd4
  41b8f9:	into   
  41b8fa:	dec    eax
  41b8fb:	xchg   ecx,ebp
  41b8fd:	push   ecx
  41b8fe:	retf   0x39c9
  41b901:	mov    edi,0xfb07ab8a
  41b906:	pop    ecx
  41b907:	lahf   
  41b908:	icebp  
  41b909:	inc    esi
  41b90a:	popf   
  41b90b:	dec    esi
  41b90c:	iret   
  41b90d:	ins    DWORD PTR es:[edi],dx
  41b90e:	and    BYTE PTR fs:[ebx+0x7df5ed33],bh
  41b915:	xchg   ebp,eax
  41b916:	sub    al,BYTE PTR [eax]
	...
  41b920:	add    BYTE PTR ds:0x7fd60e68,dl
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi-0x56],ah
  41b92e:	mov    eax,0x36273143
  41b933:	add    DWORD PTR [eax],eax
  41b935:	scas   al,BYTE PTR es:[edi]
  41b936:	add    eax,DWORD PTR [eax]
  41b938:	add    BYTE PTR ds:0x74add1df,cl
  41b93e:	mov    dl,0x18
  41b940:	sbb    DWORD PTR [ebx],ebp
  41b942:	jmp    0x14f49c39
  41b947:	xor    al,0x8a
  41b949:	sbb    BYTE PTR [ebx],bh
  41b94b:	mov    al,0x3b
  41b94d:	cmp    ebx,esp
  41b94f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b950:	push   ebp
  41b951:	xchg   edi,eax
  41b952:	mov    al,ds:0x7a5d8737
  41b957:	cwde   
  41b958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b959:	scas   al,BYTE PTR es:[edi]
  41b95a:	add    BYTE PTR [esi],al
  41b95c:	loopne 0x41b9ae
  41b95e:	push   esp
  41b95f:	xchg   ebx,eax
  41b960:	sub    DWORD PTR [eax+0x5827ca6d],0x1f
  41b967:	in     al,0x95
  41b969:	push   ecx
  41b96a:	dec    ebx
  41b96b:	fnstenv [ebp+edi*4+0x4d]
  41b96f:	shl    DWORD PTR [ebp+0x3fe2ac1],1
  41b975:	adc    bh,BYTE PTR [esi-0x36]
  41b978:	cmp    DWORD PTR [eax-0x572e06ad],0x7d
  41b97f:	mov    ebx,0xa90ce484
  41b984:	in     al,dx
  41b985:	stos   BYTE PTR es:[edi],al
  41b986:	stos   BYTE PTR es:[edi],al
  41b987:	test   ebp,esp
  41b989:	cs data16 sti 
  41b98c:	pusha  
  41b98d:	inc    ecx
  41b98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b98f:	jmp    0x41b93a
  41b991:	dec    ebx
  41b992:	nop
  41b993:	sub    bh,0x7d
  41b996:	ror    DWORD PTR [ecx],0x96
  41b999:	popa   
  41b99a:	pop    ecx
  41b99b:	fistp  QWORD PTR [eax-0x34c95f31]
  41b9a1:	sahf   
  41b9a2:	gs inc ecx
  41b9a4:	retf   0x1d37
  41b9a7:	loopne 0x41b986
  41b9a9:	cmp    BYTE PTR [ebx-0x3f],0x8e
  41b9ad:	retf   0x864e
  41b9b0:	scas   al,BYTE PTR es:[edi]
  41b9b1:	mov    bh,0xe9
  41b9b3:	xor    DWORD PTR [eax+0xb],0xca503540
  41b9ba:	push   eax
  41b9bb:	lahf   
  41b9bc:	mov    ds:0xac845891,al
  41b9c1:	out    dx,eax
  41b9c2:	inc    ebx
  41b9c3:	sub    esp,DWORD PTR [edx-0x2e]
  41b9c6:	dec    ebp
  41b9c7:	lods   al,BYTE PTR ds:[esi]
  41b9c9:	sbb    bl,BYTE PTR [ecx]
  41b9cb:	sbb    DWORD PTR [ebp+0x2bbbda61],esp
  41b9d1:	mov    al,ds:0xa56a75c6
  41b9d6:	and    edx,DWORD PTR [edi+0x2073bd29]
  41b9dc:	sub    ch,ah
  41b9de:	mov    ch,0xfe
  41b9e0:	dec    esi
  41b9e1:	ds ss sbb eax,0x24aacb8
  41b9e8:	mov    ds:0xa5b49220,eax
  41b9ed:	jecxz  0x41ba58
  41b9ef:	jmp    0x41b9e7
  41b9f1:	popa   
  41b9f2:	dec    ecx
  41b9f3:	jmp    0x13da:0x89217b2c
  41b9fa:	dec    esp
  41b9fb:	pop    ds
  41b9fc:	cmp    BYTE PTR [edx],0xe9
  41b9ff:	mov    dl,0x13
  41ba01:	adc    al,BYTE PTR [esi+0x51]
  41ba04:	xchg   esi,eax
  41ba05:	pop    edi
  41ba06:	push   esi
  41ba07:	stos   DWORD PTR es:[edi],eax
  41ba08:	or     eax,0x675e255
  41ba0d:	enter  0x3ced,0x85
  41ba11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba12:	adc    bl,cl
  41ba14:	jmp    0xdc7d91c5
  41ba19:	(bad)  
  41ba1a:	xor    bl,ch
  41ba1c:	shl    edi,cl
  41ba1e:	je     0x41ba94
  41ba20:	xor    DWORD PTR [edi-0x4d],ecx
  41ba23:	dec    edi
  41ba25:	jmp    0xb7b5102a
  41ba2a:	push   0xa97b914c
  41ba2f:	jl     0x41ba58
  41ba31:	pop    ebp
  41ba32:	mov    ecx,0x850067b5
  41ba37:	mov    ds:0x937befde,eax
  41ba3c:	adc    eax,0xe052241e
  41ba41:	pop    eax
  41ba42:	bnd jns 0x41ba25
  41ba45:	sti    
  41ba46:	scas   eax,DWORD PTR es:[edi]
  41ba47:	cmp    eax,0x6c36996a
  41ba4c:	jmp    0x2930a05a
  41ba51:	sbb    DWORD PTR [ebp+0x68],edx
  41ba54:	jmp    0x41ba9f
  41ba56:	lods   al,BYTE PTR ds:[esi]
  41ba57:	cdq    
  41ba58:	stos   BYTE PTR es:[edi],al
  41ba59:	or     DWORD PTR [ecx+0x6f],ecx
  41ba5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba5d:	rol    DWORD PTR [edi+0x4be21474],cl
  41ba63:	cmp    esi,DWORD PTR [edx+0x7c94c444]
  41ba69:	in     al,0xcb
  41ba6b:	test   ch,bl
  41ba6d:	call   0xb5c2:0x44780bbd
  41ba74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba75:	adc    BYTE PTR [edi],dh
  41ba77:	std    
  41ba78:	cmp    ecx,DWORD PTR [ecx-0x72e34157]
  41ba7e:	aas    
  41ba7f:	repz cmp eax,DWORD PTR [ecx]
  41ba82:	call   0xd9a85bc3
  41ba87:	pop    esi
  41ba88:	mov    esp,DWORD PTR [edi-0x40449dfb]
  41ba8e:	icebp  
  41ba8f:	sub    bl,cl
  41ba91:	lds    ebx,FWORD PTR [esi+0x1d]
  41ba94:	je     0x41ba37
  41ba96:	aaa    
  41ba97:	pop    ss
  41ba98:	(bad)  
  41ba99:	cmp    DWORD PTR [esi],ecx
  41ba9b:	ins    BYTE PTR es:[edi],dx
  41ba9c:	jmp    0xa6fcbf54
  41baa1:	pop    esp
  41baa2:	sbb    al,0xa
  41baa4:	or     ah,BYTE PTR [ecx+0x1357aa4c]
  41baaa:	call   0x567f:0xcc73577f
  41bab1:	xchg   ecx,eax
  41bab2:	das    
  41bab3:	rcr    BYTE PTR [esi],cl
  41bab5:	jbe    0x41ba80
  41bab7:	sti    
  41bab8:	fistp  QWORD PTR [edx+0xd]
  41babb:	in     al,0x2f
  41babd:	xchg   ebx,eax
  41babe:	mov    bl,0xc0
  41bac0:	mov    WORD PTR [esi],fs
  41bac2:	or     BYTE PTR [ebp-0x22],cl
  41bac5:	scas   eax,DWORD PTR es:[edi]
  41bac6:	popf   
  41bac7:	sbb    DWORD PTR ss:[edi],edx
  41baca:	sub    eax,DWORD PTR [eax+0x12]
  41bacd:	aam    0xc8
  41bacf:	loope  0x41ba92
  41bad1:	pop    edi
  41bad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad3:	lock aam 0x1a
  41bad6:	pusha  
  41bad7:	push   ss
  41bad8:	inc    eax
  41bad9:	mov    ebp,0xe64cad25
  41bade:	call   0xab24:0x33d3cdb5
  41bae5:	adc    DWORD PTR [ebx+edi*4],esi
  41bae8:	outs   dx,DWORD PTR ds:[esi]
  41bae9:	jg     0x41bad3
  41baeb:	inc    eax
  41baec:	adc    al,BYTE PTR [esi-0x80]
  41baef:	xor    edx,edi
  41baf1:	test   eax,0xb03b9d1d
  41baf6:	or     al,dh
  41baf8:	add    BYTE PTR [edi+0x39],al
  41bafb:	xchg   ebp,eax
  41bafc:	and    al,0xfd
  41bafe:	idiv   BYTE PTR [ecx+0x3f]
  41bb01:	inc    ecx
  41bb02:	mov    dh,0x97
  41bb04:	push   ds
  41bb05:	jne    0x41badb
  41bb07:	ja     0x41bab7
  41bb09:	cmc    
  41bb0a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0c:	pop    esp
  41bb0d:	inc    edi
  41bb0e:	imul   esp,DWORD PTR [edx+0x71],0xffffffef
  41bb12:	(bad)  
  41bb14:	(bad)  
  41bb15:	(bad)  
  41bb17:	xchg   edx,eax
  41bb18:	fmul   QWORD PTR [edx-0x57]
  41bb1b:	je     0x41bb4d
  41bb1d:	lds    edx,FWORD PTR [ebx-0x6f539763]
  41bb23:	imul   ecx,DWORD PTR [edx-0x4b],0x520ce031
  41bb2a:	push   edi
  41bb2b:	dec    edi
  41bb2c:	aad    0x86
  41bb2e:	stc    
  41bb2f:	fstp   DWORD PTR [esi-0x1]
  41bb32:	cmp    eax,0x352752f0
  41bb38:	je     0x41bb71
  41bb3a:	jle    0x41bae8
  41bb3c:	jnp    0x41bb46
  41bb3e:	ffree  st(6)
  41bb40:	aaa    
  41bb41:	pop    ds
  41bb42:	fdivr  QWORD PTR [eax]
  41bb44:	fadd   DWORD PTR [eax+0x6]
  41bb47:	add    ah,dh
  41bb49:	mov    DWORD PTR [ecx+0x6e6c583c],ebx
  41bb4f:	add    ebx,0xffffffb3
  41bb52:	neg    edi
  41bb54:	mov    ds:0x15a02aa4,al
  41bb59:	rcl    DWORD PTR [ebp-0x71],0xa6
  41bb5d:	mov    cl,0x9
  41bb5f:	mov    bh,dh
  41bb61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb62:	push   esp
  41bb63:	xor    ch,al
  41bb65:	jp     0x41bb1e
  41bb67:	bound  ecx,QWORD PTR [ebp+eax*8+0x7c]
  41bb6b:	mov    ebx,0x62263443
  41bb70:	mov    bh,0x96
  41bb72:	sahf   
  41bb73:	jp     0x41bb89
  41bb75:	fsubr  QWORD PTR [esi-0x16]
  41bb78:	sbb    BYTE PTR [edi],ah
  41bb7a:	mov    cs,WORD PTR [edx+0x9]
  41bb7d:	inc    edi
  41bb7e:	sti    
  41bb7f:	add    eax,eax
  41bb81:	pop    edi
  41bb82:	idiv   BYTE PTR [ecx-0x4c]
  41bb85:	sbb    eax,0x6777d826
  41bb8a:	rcr    DWORD PTR [eax-0x44],cl
  41bb8d:	dec    ecx
  41bb8e:	(bad)  
  41bb90:	dec    eax
  41bb91:	mov    al,ds:0xba986c7c
  41bb96:	cdq    
  41bb97:	push   ss
  41bb98:	jmp    0x41bb7a
  41bb9a:	test   al,0xc0
  41bb9c:	xchg   edx,eax
  41bb9d:	add    ch,bl
  41bb9f:	dec    ecx
  41bba0:	add    eax,0x70a1787
  41bba5:	mov    cl,0x58
  41bba7:	rdpmc  
  41bba9:	cmp    eax,esp
  41bbab:	enter  0x827d,0x52
  41bbaf:	dec    ecx
  41bbb0:	mov    edi,0x96f759d
  41bbb5:	add    al,0xa0
  41bbb7:	ins    BYTE PTR es:[edi],dx
  41bbb8:	popa   
  41bbb9:	nop
  41bbba:	test   eax,0x80e23b39
  41bbbf:	pop    ecx
  41bbc0:	pop    ds
  41bbc1:	in     al,dx
  41bbc2:	mov    ds:0xf6f6e418,eax
  41bbc7:	ret    0xe1b1
  41bbca:	jb     0x41bb78
  41bbcc:	add    eax,0x5ffadaf8
  41bbd1:	inc    ebp
  41bbd2:	iret   
  41bbd3:	jge    0x41bbc4
  41bbd5:	and    ch,BYTE PTR [ecx-0x12]
  41bbd8:	or     al,0x7d
  41bbda:	jne    0x41bc0d
  41bbdc:	xchg   ebx,esi
  41bbde:	push   ebp
  41bbdf:	fnstsw WORD PTR [esp+edi*1]
  41bbe2:	mov    eax,0xf7b2eec2
  41bbe7:	add    ecx,0xf0e78f5d
  41bbed:	jno    0x41bc01
  41bbef:	fs out dx,eax
  41bbf1:	add    ecx,ecx
  41bbf3:	jge    0x41bb7e
  41bbf5:	cmp    BYTE PTR [esi+0x6c],al
  41bbf8:	cwde   
  41bbf9:	sahf   
  41bbfa:	push   ecx
  41bbfb:	sub    edx,esi
  41bbfd:	sub    al,0x33
  41bbff:	mov    dh,BYTE PTR [ebx]
  41bc01:	aas    
  41bc02:	sub    ecx,DWORD PTR [esi-0x5fa7e798]
  41bc08:	rcr    DWORD PTR [ecx+0x34],cl
  41bc0b:	mov    ah,0xc9
  41bc0d:	std    
  41bc0e:	pop    ds
  41bc0f:	inc    ecx
  41bc10:	cwde   
  41bc11:	stos   DWORD PTR es:[edi],eax
  41bc12:	adc    dl,cl
  41bc14:	pop    edx
  41bc15:	in     eax,0x2d
  41bc17:	sub    al,0x9e
  41bc19:	ss stos BYTE PTR es:[edi],al
  41bc1b:	aaa    
  41bc1c:	mov    ebp,0x9e01bf05
  41bc21:	loopne 0x41bbe2
  41bc23:	mov    eax,ds:0x943ac7b4
  41bc28:	mov    al,ds:0xd5e182d0
  41bc2d:	in     eax,0xb6
  41bc2f:	lods   eax,DWORD PTR ds:[esi]
  41bc30:	inc    eax
  41bc31:	pop    edx
  41bc32:	shl    DWORD PTR [eax+ebx*4],cl
  41bc35:	and    ch,bl
  41bc37:	aam    0xfb
  41bc39:	adc    DWORD PTR [ecx+0x1a],eax
  41bc3c:	xor    eax,0xe9a85bd7
  41bc41:	push   0x2a968e7e
  41bc46:	xchg   esp,eax
  41bc47:	dec    BYTE PTR [ecx+0x77]
  41bc4a:	ret    0xaeb2
  41bc4d:	loop   0x41bbf0
  41bc4f:	mov    DWORD PTR [ebx+ecx*1-0x7413a74e],edi
  41bc56:	push   cs
  41bc57:	or     ebp,eax
  41bc59:	mov    eax,0xa80422b2
  41bc5e:	jnp    0x41bcb2
  41bc60:	imul   ecx,eax,0xffffffd4
  41bc63:	mov    bh,0x5f
  41bc65:	pop    esp
  41bc66:	push   edi
  41bc67:	inc    ebp
  41bc68:	jmp    0xf449c604
  41bc6d:	mov    esp,cs
  41bc6f:	mov    ds:0x6d1a29a8,al
  41bc74:	jnp    0x41bc41
  41bc76:	stos   BYTE PTR es:[edi],al
  41bc77:	mov    al,0xc3
  41bc79:	into   
  41bc7a:	push   es
  41bc7b:	stos   BYTE PTR es:[edi],al
  41bc7c:	or     ebx,esp
  41bc7e:	xor    eax,0xac896717
  41bc83:	call   0xa70a:0xf67b0010
  41bc8a:	fld    st(4)
  41bc8c:	xor    DWORD PTR [edx+0x13591e0c],ebp
  41bc92:	arpl   WORD PTR ds:[edx+ebx*1],bp
  41bc96:	pop    ds
  41bc97:	idiv   DWORD PTR [edx-0x1]
  41bc9a:	and    ecx,DWORD PTR [eax+0x5bb312b1]
  41bca0:	sbb    eax,0x3f890579
  41bca5:	pop    ebx
  41bca6:	add    al,0x85
  41bca8:	dec    si
  41bcaa:	popf   
  41bcab:	mov    fs,ecx
  41bcad:	or     bl,BYTE PTR [eax+edi*8+0x52]
  41bcb1:	leave  
  41bcb2:	sbb    esi,edi
  41bcb4:	push   0xc536876
  41bcb9:	test   DWORD PTR [eax+eax*4-0x6],edx
  41bcbd:	cmp    eax,0x78074065
  41bcc2:	sbb    ah,BYTE PTR [esi]
  41bcc4:	in     eax,0x99
  41bcc6:	les    ebx,FWORD PTR [esi-0x7757e8d6]
  41bccc:	sub    edx,eax
  41bcce:	addr16 cmp cl,bl
  41bcd1:	mov    ds:0xd73749d7,al
  41bcd6:	cwde   
  41bcd7:	fidivr WORD PTR [ebp-0x75db70bb]
  41bcdd:	in     eax,0xa7
  41bcdf:	and    BYTE PTR [edx],cl
  41bce1:	imul   edx,DWORD PTR [esi],0xffffffbf
  41bce4:	dec    eax
  41bce5:	in     eax,0x69
	...
  41bcef:	add    BYTE PTR [eax],al
  41bcf1:	cld    
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	and    eax,0xd534257b
  41bd02:	cmp    DWORD PTR [ecx],eax
  41bd04:	add    BYTE PTR [esi-0x7cfffffd],ch
  41bd0a:	cmp    DWORD PTR [esi+0x95929e2],ebp
  41bd10:	test   al,0xfc
  41bd12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd13:	push   edx
  41bd14:	js     0x41bcba
  41bd16:	(bad)  
  41bd17:	pop    ds
  41bd18:	mov    ebp,0x1fdc50a
  41bd1d:	imul   edx,DWORD PTR ds:[edi+0x690fca67],0xffffffe7
  41bd25:	xchg   ebp,eax
  41bd26:	test   DWORD PTR [edx-0x127c3796],edx
  41bd2c:	mov    eax,0xb31ece70
  41bd31:	clc    
  41bd32:	xchg   edi,eax
  41bd33:	jmp    0xb159:0x73b62246
  41bd3a:	mov    edi,0x2cf9ed5a
  41bd3f:	jmp    0x41bd7c
  41bd41:	and    al,cl
  41bd43:	imul   edi,DWORD PTR [ecx-0x49],0x24ee82cf
  41bd4a:	aad    0x9d
  41bd4c:	fisttp QWORD PTR [edx-0x41]
  41bd4f:	or     eax,0xb4708c6b
  41bd54:	psrad  mm3,QWORD PTR [eax-0x301fbddf]
  41bd5b:	inc    ebp
  41bd5c:	rcl    cl,cl
  41bd5e:	call   0x2c6e0b25
  41bd63:	push   ecx
  41bd64:	mov    al,ds:0xd01d4ea7
  41bd69:	icebp  
  41bd6a:	data16 cld 
  41bd6c:	shl    DWORD PTR [ebp+ebx*8+0x5dcaa16b],1
  41bd73:	or     ebx,DWORD PTR ds:0xca563f3
  41bd79:	adc    BYTE PTR [edi+0x7ffe79a1],0x1c
  41bd80:	mov    dh,0xfe
  41bd82:	sub    BYTE PTR [ebx],bh
  41bd84:	ins    BYTE PTR es:[edi],dx
  41bd85:	sbb    esi,DWORD PTR [ecx+0x54cb021b]
  41bd8b:	lods   al,BYTE PTR ds:[esi]
  41bd8c:	test   ebx,edx
  41bd8e:	cld    
  41bd8f:	call   0xd2cad693
  41bd94:	xor    edi,ebp
  41bd96:	repnz pushf 
  41bd98:	lock cs loopne 0x41be0e
  41bd9c:	push   ebx
  41bd9d:	sub    eax,edi
  41bd9f:	dec    esp
  41bda0:	enter  0x9d0,0xc9
  41bda4:	mov    edi,0xa6bfd0c2
  41bda9:	test   BYTE PTR [ecx],bl
  41bdab:	ret    
  41bdac:	mov    bl,0xd9
  41bdae:	jmp    0x19b2bf3f
  41bdb3:	pop    ebp
  41bdb4:	out    dx,al
  41bdb5:	mov    edx,0x2ceac27f
  41bdba:	push   ebp
  41bdbb:	xor    dl,BYTE PTR [ecx+esi*2]
  41bdbe:	xor    eax,0x717d82
  41bdc3:	inc    eax
  41bdc4:	xchg   edi,eax
  41bdc5:	cdq    
  41bdc6:	inc    ebp
  41bdc7:	inc    eax
  41bdc8:	add    bl,BYTE PTR [esi]
  41bdca:	shl    BYTE PTR [eax+ebx*8],0x9c
  41bdce:	add    DWORD PTR [edx],ebx
  41bdd0:	pop    ds
  41bdd1:	xchg   esp,eax
  41bdd2:	in     al,dx
  41bdd3:	js     0x41bd97
  41bdd5:	shl    BYTE PTR [ecx-0x3df4ef6],cl
  41bddb:	sbb    edx,DWORD PTR [eax+0x3e9d0740]
  41bde1:	fist   DWORD PTR [edi-0x6]
  41bde4:	and    DWORD PTR [ebx+ecx*4-0x28b06f22],esi
  41bdeb:	ret    
  41bdec:	pop    ds
  41bded:	popf   
  41bdee:	pop    esi
  41bdef:	ja     0x41bdf8
  41bdf1:	call   0xd74b602e
  41bdf6:	int    0xc1
  41bdf8:	in     eax,dx
  41bdf9:	mov    edi,0x19ab6d9
  41bdfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be00:	mov    ds:0x6be6ee58,al
  41be05:	sbb    BYTE PTR [edx-0x7ee047a3],0x13
  41be0c:	adc    edx,ebp
  41be0e:	mov    eax,0x65da1d6
  41be13:	cmp    DWORD PTR [eax+0x42],ecx
  41be16:	enter  0xd896,0x23
  41be1a:	pop    ds
  41be1b:	ss in  eax,dx
  41be1d:	cmp    edx,ecx
  41be1f:	push   edi
  41be20:	hlt    
  41be21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be22:	xor    eax,ebp
  41be24:	xor    bh,bh
  41be26:	out    dx,al
  41be27:	pop    es
  41be28:	or     bl,BYTE PTR [ebx-0x7e90b116]
  41be2e:	scas   eax,DWORD PTR es:[edi]
  41be2f:	sahf   
  41be30:	nop
  41be31:	fcom   DWORD PTR [ecx-0x66ca1e2e]
  41be37:	mov    esp,0x9c5ef83
  41be3c:	inc    ebp
  41be3d:	cwde   
  41be3e:	(bad)  
  41be3f:	push   ebp
  41be40:	fwait
  41be41:	mov    bh,0xd9
  41be43:	addr16 cwde 
  41be45:	(bad)  
  41be46:	cmp    ah,BYTE PTR [ecx]
  41be48:	inc    ebx
  41be49:	lods   al,BYTE PTR ds:[esi]
  41be4a:	push   ebp
  41be4b:	dec    eax
  41be4c:	leave  
  41be4d:	aas    
  41be4e:	aaa    
  41be4f:	mov    bh,0x13
  41be51:	mov    ah,0xbd
  41be53:	or     bh,BYTE PTR [ebx]
  41be55:	lods   al,BYTE PTR ds:[esi]
  41be56:	cmp    eax,0x8c12493e
  41be5b:	xchg   ebx,eax
  41be5c:	cmp    eax,0x7155b2ab
  41be61:	adc    esp,edx
  41be63:	sub    DWORD PTR [edi+eiz*2],ebp
  41be66:	dec    eax
  41be67:	int    0xda
  41be69:	sub    eax,0x4394b298
  41be6e:	mov    edi,0xb7125dbd
  41be73:	outs   dx,BYTE PTR ds:[esi]
  41be74:	fild   WORD PTR [ebx-0x6b]
  41be77:	in     al,dx
  41be78:	xchg   ebx,eax
  41be79:	pop    ds
  41be7a:	add    edi,DWORD PTR [edx+eiz*1-0x72b2d05a]
  41be81:	mov    ah,0xd1
  41be83:	add    BYTE PTR [ecx-0x47797948],0x2
  41be8a:	mov    edx,0xe2ee5019
  41be8f:	loopne 0x41be47
  41be91:	add    bh,bl
  41be93:	adc    DWORD PTR [esi+edi*4],0xcba2efd5
  41be9a:	cmp    al,0xa6
  41be9c:	mov    dh,0xe5
  41be9e:	inc    eax
  41be9f:	(bad)  
  41bea0:	cmp    BYTE PTR [eax-0x1],ch
  41bea3:	jmp    0x583e407c
  41bea8:	rcr    BYTE PTR ds:0x6c685520,0x76
  41beaf:	dec    ebp
  41beb0:	push   edi
  41beb1:	sbb    DWORD PTR [ebx],eax
  41beb3:	jmp    0xe81a:0x3d58efa5
  41beba:	push   ebx
  41bebb:	rcr    BYTE PTR [ebx+0x4914fd7],0x6b
  41bec2:	mov    ds:0xc58445fa,eax
  41bec7:	test   al,0x4b
  41bec9:	dec    eax
  41beca:	jno    0x41be94
  41becc:	test   DWORD PTR [edi+0x4e81cc45],edi
  41bed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bed3:	xchg   esp,eax
  41bed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bed5:	pop    esp
  41bed6:	cmp    dh,ah
  41bed8:	iret   
  41bed9:	fwait
  41beda:	or     al,0x2a
  41bedc:	js     0x41bf26
  41bede:	(bad)  
  41bedf:	(bad)  
  41bee0:	in     al,0x93
  41bee2:	and    DWORD PTR [ebx],edx
  41bee4:	push   edx
  41bee5:	cmp    esp,DWORD PTR [ebx]
  41bee7:	fistp  QWORD PTR [ebx+0x6839def1]
  41beed:	jb     0x41bf5a
  41beef:	sbb    eax,DWORD PTR [edi+0x772c4bae]
  41bef5:	push   ebx
  41bef6:	retf   0x71b9
  41bef9:	jp     0x41bf5d
  41befb:	out    dx,al
  41befc:	jge    0x41bf60
  41befe:	imul   di,WORD PTR [edi-0x74b9e38b],0x7d
  41bf06:	test   ebp,edx
  41bf08:	jns    0x41bf2b
  41bf0a:	ins    DWORD PTR es:[edi],dx
  41bf0b:	mov    ds:0xee591900,eax
  41bf10:	ss and dh,bh
  41bf13:	mov    ebp,DWORD PTR [edx+0x58]
  41bf16:	lock push ds
  41bf18:	lds    eax,FWORD PTR [esi]
  41bf1a:	ds push ecx
  41bf1c:	fdiv   DWORD PTR [ecx]
  41bf1e:	das    
  41bf1f:	test   DWORD PTR [eax],0xe5381d59
  41bf25:	popa   
  41bf26:	ins    BYTE PTR es:[edi],dx
  41bf27:	mov    WORD PTR [ebp+0x53],gs
  41bf2a:	sub    ecx,ebx
  41bf2c:	call   0xdc1fde24
  41bf31:	int3   
  41bf32:	es inc edi
  41bf34:	test   BYTE PTR [ecx+ebx*2+0x79],cl
  41bf38:	jle    0x41bf58
  41bf3a:	call   0x25a61319
  41bf3f:	jne    0x41bf41
  41bf41:	fild   QWORD PTR [edi]
  41bf43:	xchg   esi,eax
  41bf44:	mov    dh,0xbc
  41bf46:	aas    
  41bf47:	push   ds
  41bf48:	(bad)  
  41bf49:	sub    DWORD PTR [esi+0x2d],eax
  41bf4c:	lock out 0x72,eax
  41bf4f:	dec    ebx
  41bf50:	fs push es
  41bf52:	data16 fnstcw WORD PTR [ebx-0x65eab952]
  41bf59:	fdiv   DWORD PTR [ecx]
  41bf5b:	or     dh,BYTE PTR [edi+0x403e682d]
  41bf61:	int3   
  41bf62:	frstor [edi+0x53f11f02]
  41bf68:	sub    al,0xb1
  41bf6a:	jbe    0x41bf05
  41bf6c:	push   edx
  41bf6d:	sub    eax,DWORD PTR [ecx+0x2f]
  41bf70:	inc    edi
  41bf71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf72:	sub    DWORD PTR [eax+0x3b3207bf],ebp
  41bf78:	into   
  41bf79:	push   es
  41bf7a:	dec    ebx
  41bf7b:	addr16 push edx
  41bf7d:	mov    bl,0x77
  41bf7f:	fild   DWORD PTR [ebx-0x59]
  41bf82:	add    edx,DWORD PTR [edx]
  41bf84:	ficom  WORD PTR [edx-0x34]
  41bf87:	inc    edx
  41bf88:	scas   al,BYTE PTR es:[edi]
  41bf89:	sbb    eax,0x5348bb58
  41bf8e:	dec    edx
  41bf8f:	cmp    ch,BYTE PTR [ebp+edx*1-0x6c917a4]
  41bf96:	sbb    BYTE PTR [ecx],ah
  41bf98:	sti    
  41bf99:	sub    eax,0x5f971c9b
  41bf9e:	mov    dl,0xd3
  41bfa0:	addr16 wbinvd 
  41bfa3:	add    DWORD PTR [edi],edx
  41bfa5:	fucomp st(6)
  41bfa7:	cwde   
  41bfa8:	retf   0x57
  41bfab:	lds    eax,FWORD PTR [ecx-0x4]
  41bfae:	mov    edx,es
  41bfb0:	scas   eax,DWORD PTR es:[edi]
  41bfb1:	(bad)  
  41bfb2:	cld    
  41bfb3:	cli    
  41bfb4:	daa    
  41bfb5:	cmp    DWORD PTR [edx+0x4c],esp
  41bfb8:	mov    ah,0x78
  41bfba:	jnp    0x41bfc6
  41bfbc:	adc    DWORD PTR [esi+0x3f],edi
  41bfbf:	ins    BYTE PTR es:[edi],dx
  41bfc0:	add    ch,BYTE PTR [edi+0x12]
  41bfc3:	imul   ecx,DWORD PTR [eax-0x6368e1c1],0x51
  41bfca:	xlat   BYTE PTR ds:[ebx]
  41bfcb:	or     BYTE PTR [edx-0x67],bl
  41bfce:	cld    
  41bfcf:	rol    BYTE PTR [ebp-0x55],1
  41bfd2:	push   0xc6fb08c2
  41bfd7:	sbb    edx,esi
  41bfd9:	(bad)  
  41bfda:	fbld   TBYTE PTR [ebp-0x57]
  41bfdd:	icebp  
  41bfde:	and    DWORD PTR [edi+0x60],ecx
  41bfe1:	scas   al,BYTE PTR es:[edi]
  41bfe2:	mov    ebp,0xc6707c96
  41bfe7:	mov    ds:0xbc8c6211,al
  41bfec:	lods   al,BYTE PTR ds:[esi]
  41bfed:	and    ch,dl
  41bfef:	mov    ss,WORD PTR [ecx-0x24ba7b8b]
  41bff5:	pop    esp
  41bff6:	loopne 0x41bf8e
  41bff8:	xor    esp,esp
  41bffa:	retf   
  41bffb:	or     al,dh
  41bffd:	and    ebp,0x160d81be
  41c003:	push   0xffffffbf
  41c005:	xchg   edi,eax
  41c006:	in     al,0x1b
  41c008:	pop    edi
  41c009:	iret   
  41c00a:	cld    
  41c00b:	jmp    0x3d9d9592
  41c010:	mov    edi,0xac1d8e9b
  41c015:	popa   
  41c016:	aad    0xaa
  41c018:	inc    edi
  41c019:	popf   
  41c01a:	aad    0x1f
  41c01c:	mov    bl,0xf5
  41c01e:	push   ebp
  41c01f:	add    DWORD PTR [esi],esp
  41c021:	les    ebx,FWORD PTR [eax+0x21000c3b]
  41c027:	adc    DWORD PTR [ebp+esi*2-0x642b9257],esp
  41c02e:	in     eax,0x22
  41c030:	adc    ebp,DWORD PTR [ecx-0x26]
  41c033:	push   ds
  41c034:	add    bl,dl
  41c036:	dec    eax
  41c037:	jecxz  0x41c05d
  41c039:	jp     0x41c0b9
  41c03b:	inc    ebp
  41c03c:	arpl   WORD PTR [ecx],sp
  41c03e:	pop    ebx
  41c03f:	adc    al,0xd0
  41c041:	js     0x41bfd6
  41c043:	lahf   
  41c044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c045:	clc    
  41c046:	(bad)  
  41c047:	mov    cl,0x38
  41c049:	pop    es
  41c04a:	mov    ds:0x2f1edebf,eax
  41c04f:	imul   BYTE PTR [ecx]
  41c051:	jae    0x41c086
  41c053:	(bad)  [ecx]
  41c055:	rol    DWORD PTR fs:[esi],0x5d
  41c059:	rcr    DWORD PTR [eax+0x72],0xab
  41c05d:	stc    
  41c05e:	cmc    
  41c05f:	or     eax,0xaaed1587
  41c064:	push   0xffffffb5
  41c066:	sbb    edi,DWORD PTR [esi]
  41c068:	cwde   
  41c069:	pop    edi
  41c06a:	stos   BYTE PTR es:[edi],al
  41c06b:	mov    ch,0xf2
  41c06d:	pushf  
  41c06e:	lock sbb edi,DWORD PTR [bp+di-0x6c]
  41c073:	bound  esi,QWORD PTR [ebx]
  41c075:	mov    WORD PTR cs:[esi],?
  41c078:	mov    ebx,0x13552e1a
  41c07d:	adc    DWORD PTR [edx],edi
  41c07f:	cmp    DWORD PTR [eax],esi
  41c081:	in     eax,0xa5
  41c083:	and    eax,0x5a73123a
  41c088:	sbb    DWORD PTR [eax-0x5d],esp
  41c08b:	xor    BYTE PTR [eax+eiz*4],ah
  41c08e:	mov    WORD PTR [esi],?
  41c090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c091:	in     eax,0x1a
  41c093:	xchg   ecx,eax
  41c094:	ficomp DWORD PTR [esi]
  41c096:	sub    eax,0x38a064d1
  41c09b:	jmp    0x9cf576d1
  41c0a0:	pop    ds
  41c0a1:	test   DWORD PTR [eax+ecx*4-0xbeae03c],0x265f3f25
  41c0ac:	loope  0x41c0fb
  41c0ae:	outs   dx,DWORD PTR ds:[esi]
  41c0af:	add    al,0xeb
  41c0b1:	ds mov ah,0xe4
  41c0b4:	mov    edi,0x569e
	...
  41c0c1:	retf   
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1-0x20]
  41c0ce:	cmp    DWORD PTR [eax],esi
  41c0d0:	daa    
  41c0d1:	cmp    DWORD PTR ds:0x3ae0001,0x0
  41c0d8:	add    BYTE PTR [ebx-0x56105ab],ah
  41c0de:	cdq    
  41c0df:	das    
  41c0e0:	pop    ecx
  41c0e1:	fistp  DWORD PTR [esi]
  41c0e3:	mov    BYTE PTR [esi],dh
  41c0e5:	call   0x3b4:0xe5546167
  41c0ec:	nop
  41c0ed:	mov    al,0x4b
  41c0ef:	cmp    ecx,DWORD PTR [ecx-0x7a4097f7]
  41c0f5:	add    esp,DWORD PTR [edi-0x73]
  41c0f8:	dec    esi
  41c0f9:	mov    cl,0xed
  41c0fb:	fwait
  41c0fc:	adc    bl,BYTE PTR [ebp+edi*8+0x9]
  41c100:	pusha  
  41c101:	push   esp
  41c102:	loop   0x41c0fd
  41c104:	mov    bl,0x14
  41c106:	bound  edi,QWORD PTR ds:0xc0979830
  41c10c:	cmp    cl,cl
  41c10e:	jne    0x41c0ce
  41c110:	and    edx,edx
  41c112:	or     BYTE PTR [edi-0x56],bh
  41c115:	fistp  QWORD PTR [esi]
  41c117:	add    edi,ebp
  41c119:	xor    BYTE PTR [esi+0x6],ch
  41c11c:	out    dx,al
  41c11d:	arpl   WORD PTR ds:0x659f2dac,sp
  41c123:	pop    esp
  41c124:	xor    eax,0xeedb1d85
  41c129:	icebp  
  41c12a:	inc    eax
  41c12b:	inc    ecx
  41c12c:	jne    0x41c0bf
  41c12e:	shr    DWORD PTR [edi-0x22e724c0],0xff
  41c135:	clc    
  41c136:	jp     0x41c14e
  41c138:	dec    eax
  41c139:	cmp    DWORD PTR [ebp-0x6e],edx
  41c13c:	xchg   ecx,eax
  41c13d:	push   esi
  41c13e:	or     eax,0x4c6249c6
  41c143:	pop    ecx
  41c144:	retf   
  41c145:	inc    eax
  41c146:	or     al,0x84
  41c148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c149:	add    edi,DWORD PTR [esi+0x48ad83fe]
  41c14f:	mov    WORD PTR [eax-0x79],gs
  41c152:	push   edx
  41c153:	mov    DWORD PTR [ecx],edi
  41c155:	push   edi
  41c156:	mov    bl,dh
  41c158:	mov    edx,ebx
  41c15a:	icebp  
  41c15b:	xor    al,bh
  41c15d:	push   ebx
  41c15e:	xchg   ecx,edx
  41c160:	jno    0x41c1c6
  41c162:	icebp  
  41c163:	(bad)  
  41c164:	jae    0x41c115
  41c166:	outs   dx,BYTE PTR ds:[esi]
  41c167:	xchg   DWORD PTR [ebx+0x76753e3c],edx
  41c16d:	pop    ecx
  41c16e:	ror    BYTE PTR [eax+0x32],0xb0
  41c172:	ret    0xf183
  41c175:	test   bl,dl
  41c177:	dec    eax
  41c178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c179:	in     al,dx
  41c17a:	aas    
  41c17b:	fs sbb dl,ch
  41c17e:	sbb    DWORD PTR [ebx],eax
  41c180:	das    
  41c181:	pop    ebx
  41c182:	test   ebp,ecx
  41c184:	(bad)  
  41c185:	mov    ecx,esi
  41c187:	adc    eax,ecx
  41c189:	inc    esi
  41c18a:	je     0x41c204
  41c18c:	xchg   ecx,eax
  41c18d:	and    bh,BYTE PTR [edi+0x7f455893]
  41c193:	add    eax,0xab04e701
  41c198:	sti    
  41c199:	lahf   
  41c19a:	pusha  
  41c19b:	ds jbe 0x41c1f5
  41c19e:	repnz xchg al,bl
  41c1a1:	test   DWORD PTR [ebx],0x8689951b
  41c1a7:	or     eax,0xca2b7db7
  41c1ac:	ficom  WORD PTR [ecx-0x75fb1140]
  41c1b2:	lods   eax,DWORD PTR ds:[esi]
  41c1b3:	push   ds
  41c1b4:	xor    dl,BYTE PTR [ecx]
  41c1b6:	add    BYTE PTR [esi+0x2a],bh
  41c1b9:	inc    edx
  41c1ba:	or     edi,ebp
  41c1bc:	pop    esi
  41c1bd:	retf   
  41c1be:	pop    esi
  41c1bf:	aaa    
  41c1c0:	push   cs
  41c1c1:	dec    esp
  41c1c2:	hlt    
  41c1c3:	popa   
  41c1c4:	mov    ecx,0x5796bd73
  41c1c9:	adc    al,0x9b
  41c1cb:	or     al,0xfd
  41c1cd:	xor    ah,BYTE PTR [esi+0x52f93985]
  41c1d3:	add    DWORD PTR ds:0xcf58f0df,esp
  41c1d9:	or     BYTE PTR [ecx],al
  41c1db:	mov    dh,0xa6
  41c1dd:	sbb    eax,0x6ce82696
  41c1e2:	sbb    esp,DWORD PTR [esi+0x52e1ab84]
  41c1e8:	inc    esi
  41c1e9:	mov    DWORD PTR [esi+0x40],esp
  41c1ec:	push   ds
  41c1ed:	int    0xdb
  41c1ef:	and    BYTE PTR [esi],al
  41c1f1:	pop    esi
  41c1f2:	dec    BYTE PTR [edi-0x656f5632]
  41c1f8:	fnstsw WORD PTR [esi+eax*8+0x5a]
  41c1fc:	dec    esp
  41c1fd:	sub    DWORD PTR [edi+eiz*2],esi
  41c200:	inc    eax
  41c201:	xchg   ebx,eax
  41c202:	in     eax,dx
  41c203:	(bad)  
  41c205:	sub    ebx,edi
  41c207:	jle    0x41c1b1
  41c209:	fistp  WORD PTR ds:0x55eeb904
  41c20f:	jns    0x41c27e
  41c211:	cld    
  41c212:	repz into 
  41c214:	stos   DWORD PTR es:[edi],eax
  41c215:	imul   ebp,DWORD PTR [edx*2-0x3715f0d2],0xffffffa4
  41c21d:	inc    esi
  41c21e:	in     eax,dx
  41c21f:	dec    ebp
  41c220:	pop    ecx
  41c221:	xor    edi,DWORD PTR [ecx+0xc]
  41c224:	mov    ecx,0x54cdbd97
  41c229:	push   edi
  41c22a:	push   0xffffffee
  41c22c:	sbb    al,BYTE PTR [ebx]
  41c22e:	or     esp,edx
  41c230:	aad    0xa4
  41c232:	xor    BYTE PTR [ecx+0x60],bl
  41c235:	ins    DWORD PTR es:[edi],dx
  41c236:	pushf  
  41c237:	cmp    BYTE PTR [edx],bh
  41c239:	jne    0x41c211
  41c23b:	xor    BYTE PTR [ecx+0x4caeb4e8],bl
  41c241:	sahf   
  41c242:	arpl   bx,sp
  41c244:	mov    ah,0xa9
  41c246:	add    ah,BYTE PTR [esi+0x2f]
  41c249:	stc    
  41c24a:	and    ch,dl
  41c24c:	dec    edi
  41c24d:	inc    ebp
  41c24e:	sub    dl,BYTE PTR [edx]
  41c250:	dec    ebx
  41c251:	jbe    0x41c24a
  41c253:	jbe    0x41c2ce
  41c255:	mov    ah,BYTE PTR [edx+0x4b]
  41c258:	and    edi,DWORD PTR [ebx-0x48]
  41c25b:	dec    eax
  41c25c:	ds mov dh,ah
  41c25f:	imul   ebp,DWORD PTR [esi+esi*8-0x50252a8f],0x57025d86
  41c26a:	xor    al,0xf8
  41c26c:	xor    BYTE PTR [ebp-0xd54e12a],cl
  41c272:	mov    WORD PTR [edx],cs
  41c274:	mov    bh,0x79
  41c276:	call   0xd94f:0x3d3f8df3
  41c27d:	mov    ebp,ds
  41c27f:	mov    ecx,DWORD PTR [ebp-0x63]
  41c282:	addr16 repz mov ebx,0x2a10d700
  41c289:	mov    BYTE PTR [ebp-0x22d20ee5],0xd3
  41c290:	sub    ebx,ebp
  41c292:	pop    ds
  41c293:	hlt    
  41c294:	add    eax,0xc89b0907
  41c299:	jge    0x41c2fc
  41c29b:	fsubp  st(5),st
  41c29d:	xor    al,0xe6
  41c29f:	frstor ds:0xb4b29529
  41c2a5:	adc    al,0xd3
  41c2a7:	xchg   DWORD PTR [ecx+0x42ba7e1f],edi
  41c2ad:	sub    esp,ebx
  41c2af:	xchg   DWORD PTR [ecx-0x22],ebx
  41c2b2:	int3   
  41c2b3:	xchg   ebp,eax
  41c2b4:	cdq    
  41c2b5:	add    BYTE PTR [ebp-0x4a],bl
  41c2b8:	into   
  41c2b9:	jl     0x41c2b2
  41c2bb:	push   0xffffff9c
  41c2bd:	or     BYTE PTR [edi],al
  41c2bf:	shr    ebp,cl
  41c2c1:	popf   
  41c2c2:	inc    ebp
  41c2c3:	fsubr  DWORD PTR [esi+0x7206c93c]
  41c2c9:	lea    ebx,[eax]
  41c2cb:	push   ecx
  41c2cc:	fwait
  41c2cd:	test   al,0x94
  41c2cf:	dec    esi
  41c2d0:	adc    DWORD PTR [eax+0x6ba30a40],0x748ce969
  41c2da:	dec    ebp
  41c2db:	scas   eax,DWORD PTR es:[edi]
  41c2dc:	pop    ss
  41c2dd:	dec    esi
  41c2de:	and    eax,0x2146d96b
  41c2e3:	call   0x1060f6ed
  41c2e8:	mov    edx,0x5dcdae83
  41c2ed:	loop   0x41c2d2
  41c2ef:	dec    edi
  41c2f0:	ret    0x617
  41c2f3:	test   DWORD PTR [ebp+eiz*8+0x62],edi
  41c2f7:	inc    edx
  41c2f8:	nop
  41c2f9:	jp     0x41c322
  41c2fb:	mov    dh,0x8d
  41c2fd:	fmul   QWORD PTR [ecx]
  41c2ff:	xchg   edi,eax
  41c300:	inc    ebx
  41c301:	and    eax,esi
  41c303:	je     0x41c2ce
  41c305:	adc    ecx,DWORD PTR [ecx+0x5b23880c]
  41c30b:	xor    ah,BYTE PTR [eax-0x4cd44be0]
  41c311:	inc    eax
  41c312:	into   
  41c313:	lock call 0xbbf24efc
  41c319:	xor    bl,BYTE PTR [ecx]
  41c31b:	ja     0x41c2af
  41c31d:	enter  0x82d7,0x8
  41c321:	out    0xdd,eax
  41c323:	mov    eax,0x452321b
  41c328:	out    dx,al
  41c329:	idiv   BYTE PTR ds:0xb849545d
  41c32f:	fs jb  0x41c302
  41c332:	icebp  
  41c333:	ror    DWORD PTR [ebx+0x283eb643],cl
  41c339:	or     ebp,DWORD PTR [eax-0x4f4032e8]
  41c33f:	ins    BYTE PTR es:[edi],dx
  41c340:	inc    ebp
  41c341:	inc    ecx
  41c342:	ret    
  41c343:	mov    ebp,ss
  41c345:	and    eax,0x2ede15c6
  41c34a:	adc    BYTE PTR [edx+0x487e06e7],dh
  41c350:	dec    esp
  41c351:	dec    ebp
  41c352:	and    dl,BYTE PTR [ebp+0x3f9761e0]
  41c358:	ret    0x6eb
  41c35b:	inc    eax
  41c35c:	pop    ds
  41c35d:	mov    ebp,0x774a8442
  41c362:	popa   
  41c363:	adc    al,0xaf
  41c365:	fs xchg esp,eax
  41c367:	dec    esi
  41c368:	jae    0x41c3ad
  41c36a:	ficom  WORD PTR [ebp-0x218b6140]
  41c370:	fucomi st,st(4)
  41c372:	lea    esp,[edx]
  41c374:	cmp    DWORD PTR [ebx+0x63],0xffffffa5
  41c378:	mul    edi
  41c37a:	mov    edx,0x7a32891e
  41c37f:	test   BYTE PTR [esi+0x1b1633c],al
  41c385:	cli    
  41c386:	adc    DWORD PTR [edi+0x64],ecx
  41c389:	push   ebx
  41c38a:	repz sbb ebx,DWORD PTR [esi+0x10]
  41c38e:	sbb    DWORD PTR [ebx+eiz*1],ebx
  41c391:	shr    DWORD PTR [esi+0x70],cl
  41c394:	jb     0x41c3e6
  41c396:	pop    ebp
  41c397:	sub    BYTE PTR [eax-0x80],bl
  41c39a:	inc    esp
  41c39b:	push   eax
  41c39c:	add    eax,0x96f2155a
  41c3a1:	shl    BYTE PTR [edi],1
  41c3a3:	cli    
  41c3a4:	pop    edx
  41c3a5:	dec    ecx
  41c3a6:	ret    0x70c8
  41c3a9:	push   0xa64b611b
  41c3ae:	xacquire xchg BYTE PTR [edx],bh
  41c3b1:	jne    0x41c3c4
  41c3b3:	xor    eax,0xb5c0518
  41c3b8:	or     eax,0xdfc9c066
  41c3bd:	dec    ecx
  41c3be:	mov    edi,0xcba764f5
  41c3c3:	or     eax,0xe6fa017
  41c3c8:	dec    esp
  41c3c9:	mov    bl,0xee
  41c3cb:	lahf   
  41c3cc:	inc    ebp
  41c3cd:	cmp    ecx,DWORD PTR [edi+0x1f]
  41c3d0:	dec    ecx
  41c3d1:	dec    ecx
  41c3d2:	dec    edx
  41c3d3:	mov    ds:0x1aef4b32,eax
  41c3d8:	add    al,0x38
  41c3da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3db:	xor    ch,BYTE PTR [eax+0x21]
  41c3de:	add    DWORD PTR [ebx],ebx
  41c3e0:	add    al,0x4e
  41c3e2:	push   0x67
  41c3e4:	aas    
  41c3e5:	adc    ch,BYTE PTR [eax]
  41c3e7:	xor    cl,dh
  41c3e9:	jg     0x41c3d0
  41c3eb:	fcmovu st,st(4)
  41c3ed:	mov    ebx,0x807e1b7d
  41c3f2:	xor    eax,0x204f981a
  41c3f7:	in     al,0xd0
  41c3f9:	inc    ecx
  41c3fa:	xor    BYTE PTR [edx-0x4],0xd5
  41c3fe:	data16 ja 0x41c3cc
  41c401:	mov    ds:0x74c468a,al
  41c406:	add    ecx,esp
  41c408:	into   
  41c409:	aaa    
  41c40a:	cdq    
  41c40b:	jl     0x41c42b
  41c40d:	out    dx,eax
  41c40e:	or     dl,dl
  41c410:	mov    WORD PTR [ebp-0x16162ef1],ss
  41c416:	adc    DWORD PTR [ebx+0x7f],ecx
  41c419:	pop    edi
  41c41a:	pusha  
  41c41b:	adc    esp,ebp
  41c41d:	jge    0x41c3da
  41c41f:	out    0xc9,al
  41c421:	lods   eax,DWORD PTR ds:[esi]
  41c422:	dec    ecx
  41c423:	push   ecx
  41c424:	ins    DWORD PTR es:[di],dx
  41c426:	mov    esp,ecx
  41c428:	scas   eax,DWORD PTR es:[edi]
  41c429:	mov    ah,0x54
  41c42b:	mov    cl,0xe7
  41c42d:	dec    eax
  41c42e:	inc    eax
  41c42f:	(bad)  
  41c430:	push   ss
  41c431:	jecxz  0x41c3fe
  41c433:	repnz scas al,BYTE PTR es:[edi]
  41c435:	repnz mov dh,0xb8
  41c438:	pop    ecx
  41c439:	aas    
  41c43a:	push   ebp
  41c43b:	mov    esi,0x2ea905d6
  41c440:	or     BYTE PTR [ebp-0x202cd3be],cl
  41c446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c447:	fiadd  WORD PTR [eax-0xf74f6c6]
  41c44d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c44e:	push   ds
  41c44f:	arpl   WORD PTR [edx+0x50],di
  41c452:	mov    eax,0x3bb0a70a
  41c457:	inc    edi
  41c458:	xchg   esp,eax
  41c459:	adc    DWORD PTR [ecx+0x30d2450c],0xf
  41c460:	dec    ebx
  41c461:	aas    
  41c462:	shl    BYTE PTR [edx-0x389b9cc],1
  41c468:	call   0xfc92:0x662097f6
  41c46f:	xchg   esi,eax
  41c470:	sub    al,0x2c
  41c472:	jne    0x41c46f
  41c474:	cmp    BYTE PTR [edx+0x13],ch
  41c477:	in     al,dx
  41c478:	out    0x36,eax
  41c47a:	sub    eax,0x9e338d81
  41c47f:	outs   dx,BYTE PTR ds:[esi]
  41c480:	imul   ebx,DWORD PTR [edx],0x3e
  41c483:	sub    DWORD PTR [ebx],esi
  41c485:	fbld   TBYTE PTR [eax+0x0]
  41c48b:	add    BYTE PTR [eax],al
  41c48d:	add    BYTE PTR [eax],al
  41c48f:	add    BYTE PTR [eax],al
  41c491:	mov    ah,0x4f
  41c493:	sbb    al,0x53
  41c495:	call   DWORD PTR [ebx-0x1]
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0xf894b32
  41c4a0:	mov    ch,0x31
  41c4a2:	inc    ecx
  41c4a3:	add    DWORD PTR [eax],eax
  41c4a5:	scas   al,BYTE PTR es:[edi]
  41c4a6:	add    eax,DWORD PTR [eax]
  41c4a8:	add    ah,al
  41c4aa:	ins    DWORD PTR es:[edi],dx
  41c4ab:	add    eax,0xf6f7cc0d
  41c4b0:	imul   DWORD PTR [eax+0x28a5967c]
  41c4b6:	jg     0x41c4ba
  41c4b8:	xor    edi,ecx
  41c4ba:	mov    esp,DWORD PTR [eax]
  41c4bc:	aam    0x24
  41c4be:	mov    ss,WORD PTR [esp+eax*8]
  41c4c1:	data16 cld 
  41c4c3:	push   ebx
  41c4c4:	push   0xffffff94
  41c4c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4c7:	push   0x830dba9f
  41c4cc:	sub    bl,BYTE PTR es:[edx]
  41c4cf:	sbb    ebp,DWORD PTR [eax]
  41c4d1:	icebp  
  41c4d2:	add    DWORD PTR ds:0xaca4c2d0,edx
  41c4d8:	jmp    0xf28d:0x7495c466
  41c4df:	lods   al,BYTE PTR ds:[esi]
  41c4e0:	out    dx,al
  41c4e1:	pop    es
  41c4e2:	aam    0x73
  41c4e4:	add    ecx,DWORD PTR [ecx+0x74]
  41c4e7:	retf   0x9190
  41c4ea:	xlat   BYTE PTR ds:[ebx]
  41c4eb:	mov    cl,0x4f
  41c4ed:	add    ebp,0x14f97c50
  41c4f3:	shl    ch,1
  41c4f5:	pop    eax
  41c4f6:	mul    DWORD PTR [edi+0x35]
  41c4f9:	out    0xdf,al
  41c4fb:	nop
  41c4fc:	mov    BYTE PTR [ecx+edx*8+0x1c],ah
  41c500:	es shl DWORD PTR fs:[eax+esi*2+0x124126f8],1
  41c509:	out    0xfc,al
  41c50b:	or     BYTE PTR [ecx-0x310b0167],cl
  41c511:	sbb    BYTE PTR [eax],cl
  41c513:	jb     0x41c4d5
  41c515:	aad    0x5b
  41c517:	jle    0x41c553
  41c519:	fcmovb st,st(5)
  41c51b:	(bad)  
  41c51c:	fimul  DWORD PTR [edx+ebx*4]
  41c51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c520:	cmp    dh,BYTE PTR [esi-0x16bf06d2]
  41c526:	into   
  41c527:	and    al,0xca
  41c529:	test   BYTE PTR [edi],dh
  41c52b:	cld    
  41c52c:	and    al,0x5
  41c52e:	sbb    al,BYTE PTR [ebp+0x3b]
  41c531:	into   
  41c532:	call   0x479b:0x8e73f15f
  41c539:	test   al,0xf9
  41c53b:	ins    BYTE PTR es:[edi],dx
  41c53c:	pop    eax
  41c53d:	gs aam 0xd7
  41c540:	adc    eax,0xef081f57
  41c545:	daa    
  41c546:	mov    WORD PTR [ebx+0x1a],cs
  41c549:	pop    ecx
  41c54a:	xchg   DWORD PTR [edx],esp
  41c54c:	mov    al,ds:0xc58a79c0
  41c551:	leave  
  41c552:	sbb    ecx,esp
  41c554:	mov    ecx,0x6595f7
  41c559:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c55b:	mov    eax,0xf3454c61
  41c560:	mov    edi,DWORD PTR [edx]
  41c562:	gs imul ecx,DWORD PTR es:[edx+0x8510754],0x11
  41c56b:	pop    esp
  41c56c:	fcom   st(6)
  41c56e:	idiv   DWORD PTR [edi+eax*4-0x55]
  41c572:	cmp    al,0xce
  41c574:	mov    edi,0x6db451c3
  41c579:	push   ecx
  41c57a:	dec    esi
  41c57b:	repnz aaa 
  41c57d:	pop    ebp
  41c57e:	cld    
  41c57f:	daa    
  41c580:	in     al,0x5f
  41c582:	out    0xc6,al
  41c584:	pop    ebp
  41c585:	cld    
  41c586:	pop    edi
  41c587:	inc    ebx
  41c588:	lods   eax,DWORD PTR ds:[esi]
  41c589:	sub    dh,BYTE PTR [edi]
  41c58b:	or     cl,BYTE PTR [eax+0x25a983f5]
  41c591:	int    0xf5
  41c593:	pop    ebx
  41c594:	repnz cmp DWORD PTR [ecx+0x58408df3],0x4f
  41c59c:	outs   dx,DWORD PTR ds:[esi]
  41c59d:	push   esi
  41c59e:	aaa    
  41c59f:	ror    BYTE PTR [ebx+0x485509b],0xcb
  41c5a6:	adc    al,0x7c
  41c5a8:	fdivr  QWORD PTR [eax]
  41c5aa:	add    al,dl
  41c5ac:	push   es
  41c5ad:	das    
  41c5ae:	sub    al,al
  41c5b0:	(bad)  
  41c5b1:	dec    esi
  41c5b2:	mov    edx,0xf1ff4707
  41c5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b8:	div    al
  41c5ba:	jmp    0x7bb7023f
  41c5bf:	mov    ds:0x1646217e,al
  41c5c4:	push   esi
  41c5c5:	mov    ds:0x4e4edc23,eax
  41c5ca:	cwde   
  41c5cb:	popf   
  41c5cc:	test   DWORD PTR ss:[ebx],0x4382301a
  41c5d3:	mov    ecx,0x78d76098
  41c5d8:	dec    edx
  41c5d9:	fild   WORD PTR [ecx-0x694ece27]
  41c5df:	jmp    0x3a24:0x892af0dc
  41c5e6:	and    BYTE PTR [eax],dh
  41c5e8:	or     eax,DWORD PTR [esi]
  41c5ea:	mov    bl,0x71
  41c5ec:	leave  
  41c5ed:	fstp   DWORD PTR [edx+0x44283d50]
  41c5f3:	mov    bl,0xf8
  41c5f5:	adc    bl,bl
  41c5f7:	mov    dh,0xb2
  41c5f9:	sub    eax,0xc1a1bdcb
  41c5fe:	or     BYTE PTR [eax-0x793b385],bh
  41c604:	inc    ecx
  41c605:	mov    WORD PTR [ebx],ss
  41c607:	pop    ecx
  41c608:	fwait
  41c609:	mov    ebx,0xcea3690
  41c60e:	and    DWORD PTR ss:[eax],ecx
  41c611:	lea    ebp,[eax-0x4b]
  41c614:	jmp    0x41c684
  41c616:	push   edi
  41c617:	fcom   DWORD PTR [ebp+0x7b11d41]
  41c61d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c61e:	invd   
  41c620:	add    eax,0xce543ca4
  41c625:	call   0xafe1:0x4b54bd50
  41c62c:	int    0x10
  41c62e:	sub    ch,cl
  41c630:	pushf  
  41c631:	sbb    DWORD PTR [edx+0x2ec331b9],edi
  41c637:	adc    al,0x44
  41c639:	div    edx
  41c63b:	inc    ebp
  41c63c:	add    ah,BYTE PTR [esi-0x73]
  41c63f:	xchg   DWORD PTR [eax],esi
  41c641:	mov    edi,0x6359eae1
  41c646:	js     0x41c615
  41c648:	(bad)  
  41c649:	and    eax,0x69de367a
  41c64e:	popf   
  41c64f:	sahf   
  41c650:	dec    ebp
  41c651:	loopne 0x41c663
  41c653:	inc    esi
  41c654:	xor    dl,BYTE PTR [edx+0x7e]
  41c657:	test   al,0x5a
  41c659:	jbe    0x41c60e
  41c65b:	mov    edx,0xe49d38ae
  41c660:	xchg   edi,eax
  41c661:	adc    al,0xeb
  41c663:	test   DWORD PTR [eax],ebx
  41c665:	retf   
  41c666:	jno    0x41c60f
  41c668:	fdivr  st(1),st
  41c66a:	test   al,0xef
  41c66c:	aas    
  41c66d:	jmp    0x849f1766
  41c672:	std    
  41c673:	call   FWORD PTR [ebp+0x7eecb0e]
  41c679:	mov    bl,0xf4
  41c67b:	inc    ebx
  41c67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c67d:	push   ebp
  41c67e:	push   0xb198c388
  41c683:	dec    eax
  41c684:	and    dh,BYTE PTR [ebx-0x3a]
  41c687:	fwait
  41c688:	mov    ebx,0xac946e9b
  41c68d:	lahf   
  41c68e:	icebp  
  41c68f:	and    DWORD PTR ds:0x12632ba0,0x1a
  41c696:	xchg   ebp,eax
  41c697:	lods   al,BYTE PTR ds:[esi]
  41c698:	or     eax,0x3231b0ef
  41c69d:	sub    eax,0xbca1c769
  41c6a2:	inc    esp
  41c6a3:	aaa    
  41c6a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6a5:	call   0x53e4e745
  41c6aa:	in     eax,0x73
  41c6ac:	xor    DWORD PTR [ecx+0x7],ebp
  41c6af:	and    dh,cl
  41c6b1:	or     dh,BYTE PTR [ebx+ecx*4+0x3e]
  41c6b5:	sbb    DWORD PTR [ebp+0x7c1de9b1],edi
  41c6bb:	sub    al,0xd3
  41c6bd:	scas   eax,DWORD PTR es:[edi]
  41c6be:	mov    eax,es:0x67c27e
  41c6c4:	jno    0x41c720
  41c6c6:	stos   DWORD PTR es:[edi],eax
  41c6c7:	lahf   
  41c6c8:	cwde   
  41c6c9:	jl     0x41c65d
  41c6cb:	or     DWORD PTR [edi],esi
  41c6cd:	sub    al,BYTE PTR [esi-0x2b96fe7e]
  41c6d3:	inc    esp
  41c6d4:	(bad)  [eax+edi*1+0x17]
  41c6d8:	nop
  41c6d9:	out    0x95,al
  41c6db:	mov    ds,eax
  41c6dd:	bound  eax,QWORD PTR [esi+0x50df1d0f]
  41c6e3:	stos   BYTE PTR es:[edi],al
  41c6e4:	pop    ds
  41c6e5:	out    0x63,al
  41c6e7:	mov    bh,0x5f
  41c6e9:	xlat   BYTE PTR ds:[ebx]
  41c6ea:	mov    ah,0xc9
  41c6ec:	jecxz  0x41c6a8
  41c6ee:	loopne 0x41c710
  41c6f0:	adc    BYTE PTR [esi+0x4f],ah
  41c6f3:	mov    eax,ds:0xb06a2d94
  41c6f8:	or     eax,0x1baab4ab
  41c6fd:	rol    DWORD PTR ds:0xea0d86e0,1
  41c703:	lods   al,BYTE PTR ds:[esi]
  41c704:	repnz cmp eax,DWORD PTR [eax+0x35186e11]
  41c70b:	loopne 0x41c704
  41c70d:	or     eax,DWORD PTR [eax]
  41c70f:	adc    al,0xe8
  41c711:	into   
  41c712:	sub    al,0x55
  41c714:	dec    eax
  41c715:	dec    esi
  41c716:	icebp  
  41c717:	es mov eax,0x8e867eb3
  41c71d:	ss push eax
  41c71f:	mov    WORD PTR [ebp+0x7053f45e],fs
  41c725:	(bad)  
  41c726:	fadd   QWORD PTR [ebp+0x7c527075]
  41c72c:	push   eax
  41c72d:	cmp    al,0xf2
  41c72f:	aas    
  41c730:	add    BYTE PTR [eax],ah
  41c732:	aad    0xf9
  41c734:	popf   
  41c735:	dec    edx
  41c736:	imul   esi,DWORD PTR [edx+edx*4],0x85e3ccac
  41c73d:	hlt    
  41c73e:	mov    ds:0x833aa14f,al
  41c743:	out    0x1d,eax
  41c745:	cmc    
  41c746:	stc    
  41c747:	daa    
  41c748:	fiadd  WORD PTR [ecx-0x4b]
  41c74b:	cmp    DWORD PTR [edi-0x77],0xffffff94
  41c74f:	jnp    0x41c708
  41c751:	pop    edx
  41c752:	add    eax,0x3de21df6
  41c757:	inc    edi
  41c758:	retf   
  41c759:	cmp    bh,bl
  41c75b:	sti    
  41c75c:	mov    ebx,0x876d1eb9
  41c761:	das    
  41c762:	mov    edx,0xc8e28912
  41c767:	inc    ebx
  41c768:	mov    ebp,DWORD PTR [eax]
  41c76a:	xchg   ecx,eax
  41c76b:	out    dx,eax
  41c76c:	push   0x61
  41c76e:	(bad)  
  41c76f:	jmp    0xe775:0x23cf224
  41c776:	jns    0x41c796
  41c778:	fldcw  WORD PTR [ecx+0x63]
  41c77b:	mov    DWORD PTR [esi+eiz*4+0x23],ebp
  41c77f:	mov    cl,0x27
  41c781:	repnz pop esp
  41c783:	mov    edx,0xa7081c99
  41c788:	pop    ebp
  41c789:	jmp    0xbc76:0x386eb6b5
  41c790:	jp     0x41c73e
  41c792:	sbb    ecx,DWORD PTR ds:0x63542159
  41c798:	ret    
  41c799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c79a:	adc    DWORD PTR ss:[ebx-0x66],esi
  41c79e:	lods   al,BYTE PTR ds:[esi]
  41c79f:	out    dx,eax
  41c7a0:	(bad)  
  41c7a1:	into   
  41c7a2:	hlt    
  41c7a3:	xor    BYTE PTR [ebx+0x6aa354ea],0x93
  41c7aa:	repz cmp ch,cl
  41c7ad:	push   ds
  41c7ae:	add    ecx,ebp
  41c7b0:	mov    ebx,0xbb801a61
  41c7b5:	js     0x41c806
  41c7b7:	sar    DWORD PTR [esi],0xe1
  41c7ba:	push   edi
  41c7bb:	(bad)  
  41c7bc:	loop   0x41c7d0
  41c7be:	and    dl,BYTE PTR [eax]
  41c7c0:	add    BYTE PTR [eax],bh
  41c7c2:	leave  
  41c7c3:	mov    al,0x82
  41c7c5:	or     al,0x41
  41c7c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7c8:	sbb    eax,0xc4b4d6c
  41c7cd:	inc    eax
  41c7ce:	mov    eax,0xf5b530b2
  41c7d3:	and    DWORD PTR [eax-0x5f4795b0],ebp
  41c7d9:	(bad)  
  41c7da:	mov    esi,0x78df19a
  41c7df:	mov    esp,0xcbcfdb5d
  41c7e4:	mov    ds:0xb482397d,al
  41c7e9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7eb:	imul   edx,DWORD PTR [ebx-0x47ba371b],0x1dd05770
  41c7f5:	popf   
  41c7f6:	iret   
  41c7f7:	shl    BYTE PTR [edx+0x19b2e916],0xb4
  41c7fe:	push   ebp
  41c7ff:	int3   
  41c800:	jbe    0x41c7e2
  41c802:	mov    esp,DWORD PTR [ecx+ecx*8]
  41c805:	cs cwde 
  41c807:	std    
  41c808:	stos   DWORD PTR es:[edi],eax
  41c809:	dec    ebp
  41c80a:	xor    eax,0xa0cb73df
  41c80f:	retf   
  41c810:	das    
  41c811:	test   al,0x73
  41c813:	sub    esp,DWORD PTR [eax+ecx*1+0x7d9d6036]
  41c81a:	gs push ecx
  41c81c:	je     0x41c824
  41c81e:	jmp    0xb27e10ce
  41c823:	mov    cs,WORD PTR [eax+0x71914655]
  41c829:	adc    DWORD PTR [ebx+0x5b21a9d4],ecx
  41c82f:	push   edx
  41c830:	loope  0x41c85b
  41c832:	xchg   ebp,eax
  41c833:	mov    edx,DWORD PTR [eax-0x59]
  41c836:	test   eax,0x6b84ace2
  41c83b:	pop    edx
  41c83c:	adc    eax,0x98f1e1a7
  41c841:	stc    
  41c842:	mov    al,ds:0xfd1fea49
  41c847:	fwait
  41c848:	inc    ebx
  41c849:	mov    edi,0xa0f3795c
  41c84e:	or     bh,BYTE PTR [ecx+edi*2]
  41c851:	int    0xd7
  41c853:	xor    BYTE PTR [edx],dh
  41c855:	and    al,0xe6
	...
  41c85f:	add    BYTE PTR [eax],al
  41c861:	(bad)  
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     edi,eax
  41c86e:	imul   edi,DWORD PTR [ebp+0x1b],0x144df
  41c875:	scas   al,BYTE PTR es:[edi]
  41c876:	add    eax,DWORD PTR [eax]
  41c878:	add    dl,bh
  41c87a:	jne    0x41c881
  41c87c:	jg     0x41c85b
  41c87e:	pop    es
  41c87f:	shl    DWORD PTR [eax+0xb9fdc67],cl
  41c885:	inc    ebp
  41c886:	mov    esi,0x2fb22359
  41c88b:	jg     0x41c8a8
  41c88d:	in     eax,0x7f
  41c88f:	fidivr DWORD PTR [edi-0xbb38f76]
  41c895:	mov    al,0x2e
  41c897:	xor    ebp,DWORD PTR [ebp+0x2b]
  41c89a:	hlt    
  41c89b:	scas   al,BYTE PTR es:[edi]
  41c89c:	xchg   edx,ebx
  41c89e:	jge    0x41c915
  41c8a0:	push   cs
  41c8a1:	mov    bh,BYTE PTR [edx+0x73ded92f]
  41c8a7:	mov    esi,DWORD PTR [esi+0xbf38e12]
  41c8ad:	add    BYTE PTR [edi],0x70
  41c8b0:	and    edi,edi
  41c8b2:	xchg   edi,eax
  41c8b3:	cmp    BYTE PTR [ecx+0x6cadc7ab],bh
  41c8b9:	pop    esi
  41c8ba:	inc    esi
  41c8bb:	pop    ss
  41c8bc:	jo     0x41c8f0
  41c8be:	jle    0x41c8ca
  41c8c0:	push   ss
  41c8c1:	fwait
  41c8c2:	push   0xa6fb0fd0
  41c8c7:	fbld   TBYTE PTR [edx+eax*2+0x75e7168e]
  41c8ce:	xchg   ebp,eax
  41c8cf:	jno    0x41c8e3
  41c8d1:	push   ds
  41c8d2:	mov    eax,0xa55e93e8
  41c8d7:	mov    ch,0x54
  41c8d9:	pop    edi
  41c8da:	sub    ch,BYTE PTR [ebp+0x16]
  41c8dd:	xor    edi,DWORD PTR [ebp+0x3f]
  41c8e0:	inc    edi
  41c8e1:	or     BYTE PTR [eax+ebx*4+0x542420f6],dl
  41c8e8:	lea    esp,[edi]
  41c8ea:	push   ebx
  41c8eb:	jge    0x41c87b
  41c8ed:	lods   al,BYTE PTR ds:[esi]
  41c8ee:	mov    ds,WORD PTR [esi-0x79dfade8]
  41c8f4:	shl    BYTE PTR es:[esi+0x77],0xe3
  41c8f9:	cmp    DWORD PTR [eax],ebp
  41c8fb:	add    eax,0x352f4e9
  41c900:	mov    bl,0x6b
  41c902:	cli    
  41c903:	(bad)  
  41c905:	mov    bh,0x6f
  41c907:	not    BYTE PTR [ecx]
  41c909:	jb     0x41c88d
  41c90b:	cmc    
  41c90c:	nop
  41c90d:	mov    esi,0xed89986a
  41c912:	inc    ecx
  41c913:	xor    al,0xda
  41c915:	stos   BYTE PTR es:[edi],al
  41c916:	icebp  
  41c917:	arpl   ax,cx
  41c919:	icebp  
  41c91a:	sub    dh,BYTE PTR ds:0x2fd5520b
  41c920:	jnp    0x41c8b2
  41c922:	retf   0x20c
  41c925:	push   0x956c514e
  41c92a:	mov    eax,0x30a3c67
  41c92f:	push   0x35
  41c931:	jnp    0x41c996
  41c933:	add    ecx,DWORD PTR [edx+0x77]
  41c936:	sbb    BYTE PTR [ebx-0x100a0fed],0x85
  41c93d:	stc    
  41c93e:	inc    edx
  41c93f:	jb     0x41c9a3
  41c941:	xor    al,0x31
  41c943:	mov    esi,0x7a2f79c
  41c948:	push   ebx
  41c949:	adc    DWORD PTR ds:0x749c8c83,0x1f
  41c950:	nop
  41c951:	push   0xffffff88
  41c953:	inc    ecx
  41c954:	mov    BYTE PTR [edi+esi*8+0x36],al
  41c958:	and    DWORD PTR [edi-0x43],esp
  41c95b:	pop    ds
  41c95c:	dec    eax
  41c95d:	icebp  
  41c95e:	inc    ebx
  41c95f:	out    0x75,al
  41c961:	jmp    0xb46b:0x621a3e4c
  41c968:	imul   ebp,DWORD PTR [ebx-0x77d80e13],0xd02fec
  41c972:	rol    BYTE PTR [edi-0x27],1
  41c975:	add    DWORD PTR [ecx+0x3534c9a0],ebx
  41c97b:	int    0xc2
  41c97d:	nop
  41c97e:	js     0x41c910
  41c980:	in     eax,dx
  41c981:	hlt    
  41c982:	lods   eax,DWORD PTR ds:[esi]
  41c983:	ja     0x41c97e
  41c985:	jo     0x41c9e1
  41c987:	dec    esi
  41c988:	(bad)  
  41c989:	aam    0xe6
  41c98b:	mov    ebp,ecx
  41c98d:	aaa    
  41c98e:	das    
  41c98f:	sub    esi,ebp
  41c991:	cmp    eax,0x65f9370e
  41c996:	and    eax,0xe9e6c0b1
  41c99b:	jmp    0xe2da:0x6c77c38e
  41c9a2:	stc    
  41c9a3:	outs   dx,BYTE PTR ds:[esi]
  41c9a4:	xchg   esp,eax
  41c9a5:	xchg   edx,eax
  41c9a6:	adc    edx,ebp
  41c9a8:	gs jno 0x41c98f
  41c9ab:	xchg   DWORD PTR [edi],edi
  41c9ad:	into   
  41c9ae:	inc    esp
  41c9af:	lods   eax,DWORD PTR ds:[esi]
  41c9b0:	or     al,0x1b
  41c9b2:	push   0xffffff91
  41c9b4:	data16 cli 
  41c9b6:	mov    ds:0x350794d0,eax
  41c9bb:	add    eax,0xa6612510
  41c9c0:	sbb    bl,0x35
  41c9c3:	push   esi
  41c9c4:	shl    BYTE PTR [eax+0x42],1
  41c9c7:	cmp    ecx,DWORD PTR [edx+ebx*4+0x29]
  41c9cb:	call   0xc6182e2f
  41c9d0:	lahf   
  41c9d1:	lods   al,BYTE PTR ds:[esi]
  41c9d2:	stos   BYTE PTR es:[edi],al
  41c9d3:	jmp    0x5277ed62
  41c9d8:	mov    eax,DWORD PTR [ebp-0x6e]
  41c9db:	pop    ecx
  41c9dc:	mov    ebp,0x7d712618
  41c9e1:	idiv   ch
  41c9e3:	mov    edi,?
  41c9e5:	pop    ecx
  41c9e6:	jbe    0x41ca1a
  41c9e8:	or     DWORD PTR [edx],ecx
  41c9ea:	mov    ds:0xd5632a07,eax
  41c9ef:	xor    bh,BYTE PTR [ebx-0x51d39955]
  41c9f5:	mov    eax,DWORD PTR [ebp+0x7]
  41c9f8:	mov    BYTE PTR [eax+edx*2+0x93e5134],0x9b
  41ca00:	dec    esi
  41ca01:	js     0x41ca05
  41ca03:	aam    0x39
  41ca05:	cmp    eax,0xd02a1666
  41ca0a:	lods   eax,DWORD PTR ds:[esi]
  41ca0b:	loop   0x41ca83
  41ca0d:	adc    DWORD PTR [edi+ebx*8-0x31218e5d],0x40
  41ca15:	test   BYTE PTR [esi+0x23f03f35],bl
  41ca1b:	push   cs
  41ca1c:	sub    al,0xeb
  41ca1e:	imul   edx,DWORD PTR [edx+0x34],0x16c1d609
  41ca25:	dec    ebx
  41ca26:	rol    DWORD PTR [ecx+0x1ddc99b4],1
  41ca2c:	add    esi,DWORD PTR [ecx]
  41ca2e:	out    dx,al
  41ca2f:	in     al,dx
  41ca30:	xchg   DWORD PTR [ecx+eax*1],esp
  41ca33:	jl     0x41ca2e
  41ca35:	xchg   DWORD PTR [ecx],edi
  41ca37:	mov    ch,BYTE PTR [esi-0x109594c4]
  41ca3d:	lods   eax,DWORD PTR ds:[esi]
  41ca3e:	imul   eax,DWORD PTR [ebx+0xff481ab],0x4
  41ca45:	mov    edx,0x1881cf6e
  41ca4a:	dec    edi
  41ca4b:	fsub   DWORD PTR ds:0x691afd03
  41ca51:	es pop ebx
  41ca53:	test   eax,0xfccd5287
  41ca58:	idiv   DWORD PTR [edx-0x4bb935f1]
  41ca5e:	push   esi
  41ca5f:	jnp    0x41ca2e
  41ca61:	stos   BYTE PTR es:[edi],al
  41ca62:	stc    
  41ca63:	ror    BYTE PTR [esi],0xc7
  41ca66:	pop    ebx
  41ca67:	and    eax,0x8544eab
  41ca6c:	data16 repnz addr16 mov ah,0x8c
  41ca71:	xor    DWORD PTR [ecx+0x45],edi
  41ca74:	cli    
  41ca75:	pop    esp
  41ca76:	cmp    al,0x4a
  41ca78:	lds    esp,FWORD PTR [edi+0x6d]
  41ca7b:	iret   
  41ca7c:	cmp    dl,BYTE PTR [eax+eiz*8]
  41ca7f:	mov    al,ds:0xfc324902
  41ca84:	mov    WORD PTR [ecx+0x2e769921],cs
  41ca8a:	push   esp
  41ca8b:	push   ss
  41ca8c:	sti    
  41ca8d:	loopne 0x41cafa
  41ca8f:	je     0x41cacb
  41ca91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca92:	mov    al,0x62
  41ca94:	add    DWORD PTR [eax],0xe5f54ef2
  41ca9a:	or     ch,al
  41ca9c:	enter  0xec9a,0xcc
  41caa0:	cli    
  41caa1:	ror    DWORD PTR [edx+0x49266a88],1
  41caa7:	and    BYTE PTR [ecx],0x59
  41caaa:	cli    
  41caab:	dec    ecx
  41caac:	pop    esi
  41caad:	push   cs
  41caae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caaf:	out    0xd1,al
  41cab1:	xchg   edx,eax
  41cab2:	lock outs dx,DWORD PTR ds:[esi]
  41cab4:	(bad)  
  41cab5:	xchg   esp,eax
  41cab6:	xchg   ecx,eax
  41cab7:	mov    edx,0x2486a47d
  41cabc:	dec    esi
  41cabd:	gs in  al,0x67
  41cac0:	push   edx
  41cac1:	cs pop ebp
  41cac3:	inc    ecx
  41cac4:	cmp    esp,DWORD PTR [ebx]
  41cac6:	cdq    
  41cac7:	mov    ch,0xb9
  41cac9:	mov    bl,0x5f
  41cacb:	cld    
  41cacc:	popa   
  41cacd:	inc    ecx
  41cace:	inc    esi
  41cacf:	(bad)  
  41cad0:	imul   eax,edi,0x29759623
  41cad6:	mov    ebx,0xd3ebbcfb
  41cadb:	les    eax,FWORD PTR [edx]
  41cadd:	test   al,0x56
  41cadf:	xchg   DWORD PTR [ecx],edi
  41cae1:	adc    al,0x49
  41cae3:	int3   
  41cae4:	or     al,BYTE PTR [esi+0x6a2b9664]
  41caea:	ins    DWORD PTR es:[edi],dx
  41caeb:	dec    ecx
  41caec:	lock push esi
  41caee:	xor    esi,eax
  41caf0:	rcr    BYTE PTR [ecx],cl
  41caf2:	ret    
  41caf3:	int    0x44
  41caf5:	dec    edx
  41caf6:	shl    DWORD PTR [ecx],0xeb
  41caf9:	jo     0x41cb1a
  41cafb:	and    edi,edx
  41cafd:	xlat   BYTE PTR ds:[ebx]
  41cafe:	mov    gs,WORD PTR [ebp-0x6b08a46c]
  41cb04:	mov    al,0xf9
  41cb06:	or     al,0x18
  41cb08:	xlat   BYTE PTR ds:[ebx]
  41cb09:	inc    esp
  41cb0a:	cdq    
  41cb0b:	adc    eax,0x89db201d
  41cb10:	fld    QWORD PTR [edi]
  41cb12:	aam    0x82
  41cb14:	into   
  41cb15:	jp     0x41caba
  41cb17:	mov    ecx,0xc8225403
  41cb1c:	rcr    esi,0xb7
  41cb1f:	or     DWORD PTR ds:0xae479d20,esi
  41cb25:	sub    DWORD PTR [ecx],ebx
  41cb27:	fdivr  QWORD PTR [eax]
  41cb29:	repnz sbb eax,DWORD PTR [ebp+0x4e66f821]
  41cb30:	jns    0x41cba2
  41cb32:	push   esi
  41cb33:	push   edx
  41cb34:	ds mov dh,0x3a
  41cb37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb39:	cli    
  41cb3a:	mov    cl,0xdf
  41cb3c:	fnstenv [eax]
  41cb3e:	int    0x83
  41cb40:	mov    ebp,0xc5a6d633
  41cb45:	outs   dx,BYTE PTR ds:[esi]
  41cb46:	les    ebp,FWORD PTR [ebx]
  41cb48:	jns    0x41cbbd
  41cb4a:	(bad)
  41cb4e:	fistp  QWORD PTR [ebp+0x601997e4]
  41cb54:	sub    cl,BYTE PTR [ecx+eiz*1]
  41cb57:	test   DWORD PTR [ebx+0x11d170c8],ebp
  41cb5d:	push   ds
  41cb5e:	(bad)  
  41cb5f:	ror    edx,cl
  41cb61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb62:	pop    ecx
  41cb63:	xlat   BYTE PTR ds:[ebx]
  41cb64:	xchg   BYTE PTR [esi+0x4394a84e],al
  41cb6a:	or     eax,0x76f95027
  41cb6f:	push   ebx
  41cb70:	(bad)  
  41cb71:	fidivr DWORD PTR [edi+0x678de02e]
  41cb77:	mov    ah,0x74
  41cb79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb7a:	jb     0x41cafd
  41cb7c:	push   ds
  41cb7d:	jno    0x41cb02
  41cb7f:	dec    ebp
  41cb80:	imul   edx,DWORD PTR [ebp+0x1f],0xcd8f955b
  41cb87:	inc    esp
  41cb88:	cmp    BYTE PTR [ecx],al
  41cb8a:	lods   eax,DWORD PTR ds:[esi]
  41cb8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb8c:	xor    eax,0xb099d0c8
  41cb91:	mov    esp,0x9020a41b
  41cb96:	nop
  41cb97:	(bad)  
  41cb98:	aam    0x91
  41cb9a:	cwde   
  41cb9b:	call   0x7a84:0x5455b8e0
  41cba2:	mov    ebp,0x1d51b97e
  41cba7:	mov    esp,0x570c4c9
  41cbac:	std    
  41cbad:	stos   DWORD PTR es:[edi],eax
  41cbae:	and    edi,DWORD PTR [ecx+0x616834d6]
  41cbb4:	pop    es
  41cbb5:	idiv   BYTE PTR [edi-0x7d]
  41cbb8:	jb     0x41cb45
  41cbba:	popa   
  41cbbb:	gs stc 
  41cbbd:	mov    dl,0x12
  41cbbf:	loopne 0x41cbae
  41cbc1:	outs   dx,DWORD PTR ds:[esi]
  41cbc2:	pop    esp
  41cbc3:	dec    ebp
  41cbc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbc5:	xor    al,ch
  41cbc7:	jmp    0xf8d11715
  41cbcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbcd:	mov    bl,0x40
  41cbcf:	mov    ch,0x5d
  41cbd1:	or     dl,dl
  41cbd3:	cmp    esi,0xffffffb2
  41cbd6:	mov    esp,DWORD PTR [bp+si-0x3cc4]
  41cbdb:	sub    eax,0x2f6d16c0
  41cbe0:	mov    ebx,0x4ae110fd
  41cbe5:	and    al,dl
  41cbe7:	mov    ecx,0x543b2db0
  41cbec:	out    dx,eax
  41cbed:	ss out dx,al
  41cbef:	fcomi  st,st(4)
  41cbf1:	or     BYTE PTR [edi],bh
  41cbf3:	jle    0x41cb7d
  41cbf5:	loopne 0x41cb7a
  41cbf7:	ins    DWORD PTR es:[edi],dx
  41cbf8:	loop   0x41cbe8
  41cbfa:	fcmovbe st,st(4)
  41cbfc:	lods   al,BYTE PTR ds:[esi]
  41cbfd:	cwde   
  41cbfe:	sbb    dl,BYTE PTR [edx-0x41]
  41cc01:	cmc    
  41cc02:	ret    0x2a98
  41cc05:	aas    
  41cc06:	push   eax
  41cc07:	test   DWORD PTR [ecx-0x77],esi
  41cc0a:	add    DWORD PTR [esi],edx
  41cc0c:	jg     0x41cc07
  41cc0e:	clc    
  41cc0f:	fstp   DWORD PTR [esi-0x2993cfbf]
  41cc15:	in     al,0xbc
  41cc17:	inc    esi
  41cc18:	xchg   edx,eax
  41cc19:	leave  
  41cc1a:	std    
  41cc1b:	fadd   st(5),st
  41cc1d:	pop    esp
  41cc1e:	inc    BYTE PTR [esi]
  41cc20:	popf   
  41cc21:	inc    ecx
  41cc22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc23:	jbe    0x41cc1c
  41cc25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc26:	push   cs
	...
  41cc2f:	add    BYTE PTR [eax],al
  41cc31:	cdq    
  41cc32:	ja     0x41cc23
  41cc34:	out    dx,al
  41cc35:	out    dx,eax
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0x961a685,ecx
  41cc41:	lea    ecx,[eax+0x1]
  41cc44:	add    BYTE PTR [esi+0x4d000003],ch
  41cc4a:	mov    DWORD PTR [esi-0x642edd7f],eax
  41cc50:	retf   
  41cc51:	fidiv  WORD PTR [ebp-0x7e37446e]
  41cc57:	lds    ebx,FWORD PTR [ebp-0xe]
  41cc5a:	adc    ecx,esi
  41cc5c:	shrd   DWORD PTR [eax],ebp,0x69
  41cc60:	std    
  41cc61:	daa    
  41cc62:	dec    esi
  41cc63:	mov    eax,0x737fd805
  41cc68:	ss in  eax,dx
  41cc6a:	xor    DWORD PTR cs:[edi],edi
  41cc6d:	ror    dl,0x41
  41cc70:	in     al,dx
  41cc71:	xchg   ecx,eax
  41cc72:	mov    ds:0x56de54e0,eax
  41cc77:	jp     0x41cc25
  41cc79:	lods   al,BYTE PTR ds:[esi]
  41cc7a:	or     esi,ebx
  41cc7c:	push   eax
  41cc7d:	dec    esi
  41cc7e:	sub    al,0x24
  41cc80:	mov    ah,0xfc
  41cc82:	rol    DWORD PTR [edx*2+0x6dfaab21],0xb8
  41cc8a:	push   esi
  41cc8b:	xor    DWORD PTR [eax+0x69],0x1f9aee23
  41cc92:	pop    ebx
  41cc93:	push   esp
  41cc94:	sub    bl,ch
  41cc96:	shl    DWORD PTR [ebp+0x6e],cl
  41cc99:	rcl    DWORD PTR [edi*8+0x6c10f970],1
  41cca0:	push   ecx
  41cca1:	jb     0x41cc35
  41cca3:	or     eax,0xbb55b7eb
  41cca8:	mov    ah,BYTE PTR [ecx+esi*2+0x363aa1b6]
  41ccaf:	xchg   DWORD PTR [edx+0x3a],esp
  41ccb2:	out    0x2,eax
  41ccb4:	and    DWORD PTR [esp+edi*2+0x34979dfc],esp
  41ccbb:	xchg   esp,eax
  41ccbc:	mov    bh,0x78
  41ccbe:	push   0x1936a302
  41ccc3:	push   ecx
  41ccc4:	and    esi,DWORD PTR [ebx+0x15]
  41ccc7:	pusha  
  41ccc8:	inc    edi
  41ccc9:	in     eax,dx
  41ccca:	mov    bl,0x9
  41cccc:	adc    bp,0xffe0
  41ccd0:	jb     0x41cd3a
  41ccd2:	into   
  41ccd3:	or     al,BYTE PTR [edi]
  41ccd5:	push   ss
  41ccd6:	out    dx,eax
  41ccd7:	daa    
  41ccd8:	xor    BYTE PTR ds:0xef74c430,bh
  41ccde:	sbb    BYTE PTR [ecx+0x4a605ee0],ch
  41cce4:	jecxz  0x41cce8
  41cce6:	addr16 jge 0x41ccae
  41cce9:	mov    esi,0x2620cc54
  41ccee:	shr    DWORD PTR [esi+edx*8-0x634b90e8],1
  41ccf5:	mov    bl,0xc9
  41ccf7:	cdq    
  41ccf8:	fisubr DWORD PTR [eax+0x25]
  41ccfb:	imul   ebx
  41ccfd:	std    
  41ccfe:	imul   edi,DWORD PTR [ebx-0x76],0x61eda7a9
  41cd05:	lea    ebp,[ecx+0x4f]
  41cd08:	add    al,0x3d
  41cd0a:	mov    dl,0x1f
  41cd0c:	add    al,0x8c
  41cd0e:	jp     0x41cd7b
  41cd10:	push   cs
  41cd11:	dec    edi
  41cd12:	dec    ecx
  41cd13:	(bad)  
  41cd14:	test   al,0x25
  41cd16:	mov    dl,0x7e
  41cd18:	stc    
  41cd19:	fild   QWORD PTR [edx]
  41cd1b:	aam    0x5d
  41cd1d:	push   esp
  41cd1e:	mov    esp,0x9c10f8b3
  41cd23:	into   
  41cd24:	or     eax,0x4747f405
  41cd29:	add    DWORD PTR [eax+eiz*2],0x79
  41cd2d:	inc    ebp
  41cd2e:	outs   dx,DWORD PTR ds:[esi]
  41cd2f:	ror    DWORD PTR [ebx+0x69],cl
  41cd32:	inc    ebp
  41cd33:	jae    0x41cd9c
  41cd35:	fbld   TBYTE PTR [eax-0x1e8059aa]
  41cd3b:	fmul   DWORD PTR [esi+0x3eb412ce]
  41cd41:	into   
  41cd42:	cmp    edi,esi
  41cd44:	lahf   
  41cd45:	cdq    
  41cd46:	sub    DWORD PTR [esp+eax*8-0x24280eb9],esp
  41cd4d:	(bad)  
  41cd4e:	sbb    edi,esi
  41cd50:	inc    esi
  41cd51:	mov    al,ds:0x3ee974d4
  41cd56:	sub    DWORD PTR [ecx-0x79c91018],eax
  41cd5c:	xchg   DWORD PTR [edi-0x74],edi
  41cd5f:	das    
  41cd60:	or     cl,cl
  41cd62:	fbstp  TBYTE PTR [ebp+edx*2-0x6b9d1f0c]
  41cd69:	xchg   ebp,eax
  41cd6a:	xchg   edx,eax
  41cd6b:	sbb    edx,DWORD PTR [ecx+0x6f505c79]
  41cd71:	push   es
  41cd72:	dec    BYTE PTR [eax+0x28]
  41cd75:	je     0x41cdb1
  41cd77:	fsub   QWORD PTR [edi+0x62]
  41cd7a:	fistp  QWORD PTR [ebx]
  41cd7c:	in     eax,0xd7
  41cd7e:	sbb    ch,BYTE PTR [ebx-0x2d0a56f6]
  41cd84:	xor    ch,dl
  41cd86:	in     eax,dx
  41cd87:	shl    BYTE PTR [ebp+ecx*8-0x5b],1
  41cd8b:	sti    
  41cd8c:	loop   0x41cdf5
  41cd8e:	repnz outs dx,BYTE PTR ds:[esi]
  41cd90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd91:	adc    eax,0xda419823
  41cd96:	dec    ecx
  41cd97:	mov    ebp,0xced3d157
  41cd9c:	pop    ebx
  41cd9d:	or     al,0x24
  41cd9f:	push   ss
  41cda0:	ins    BYTE PTR es:[edi],dx
  41cda1:	inc    edx
  41cda2:	pop    eax
  41cda3:	leave  
  41cda4:	mov    esi,0xf2323a6
  41cda9:	mov    bl,0x15
  41cdab:	sar    DWORD PTR [esi+0x57558176],0xd3
  41cdb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdb3:	ret    
  41cdb4:	sar    BYTE PTR [ecx+0x12],cl
  41cdb7:	dec    ecx
  41cdb8:	test   cl,dh
  41cdba:	mov    al,ds:0x830b47ee
  41cdbf:	retf   0x10c4
  41cdc2:	xor    eax,0xbf0feb53
  41cdc7:	test   DWORD PTR [edi],0x457574ab
  41cdcd:	lods   al,BYTE PTR ds:[esi]
  41cdce:	or     ah,BYTE PTR [ebp-0xa412277]
  41cdd4:	in     eax,dx
  41cdd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdd6:	sub    bl,BYTE PTR [esi+0x6]
  41cdd9:	jmp    0xf8895e72
  41cdde:	je     0x41cd71
  41cde0:	and    ah,BYTE PTR [ecx-0x63498f18]
  41cde6:	sbb    BYTE PTR [ecx-0x4ea6da1d],bh
  41cdec:	sub    DWORD PTR [eax-0x68],ebx
  41cdef:	sbb    esp,DWORD PTR [eax+0x3e859d30]
  41cdf5:	pop    edi
  41cdf6:	adc    DWORD PTR [edx-0x11505877],edi
  41cdfc:	jnp    0x41ce33
  41cdfe:	mov    ecx,0x7458912f
  41ce03:	repz loope 0x41cdf6
  41ce06:	mov    gs,WORD PTR [esp+ebp*2]
  41ce09:	sub    bh,bh
  41ce0b:	fiadd  DWORD PTR [ecx+0x48]
  41ce0e:	adc    DWORD PTR [ebx-0x74],esi
  41ce11:	mov    ch,0x73
  41ce13:	push   0x80f5a467
  41ce18:	lock outs dx,BYTE PTR ds:[esi]
  41ce1a:	cld    
  41ce1b:	and    esi,DWORD PTR [edi-0x4123e65]
  41ce21:	or     DWORD PTR [eax+0x55],ecx
  41ce24:	pop    ecx
  41ce25:	mov    ds:0x4199bdb6,al
  41ce2a:	mov    ds:0xe43dd259,eax
  41ce2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce30:	shl    edi,0x5f
  41ce33:	repnz dec edi
  41ce35:	dec    ebx
  41ce36:	aas    
  41ce37:	adc    DWORD PTR [esi-0x39793032],esi
  41ce3d:	dec    ebp
  41ce3e:	cdq    
  41ce3f:	(bad)  
  41ce40:	fsubr  st,st(1)
  41ce42:	or     edx,DWORD PTR [eax]
  41ce44:	adc    edx,edx
  41ce46:	mov    esi,0xc0f6654e
  41ce4b:	mov    ds:0x863defa3,al
  41ce50:	sub    cl,al
  41ce52:	ins    BYTE PTR es:[edi],dx
  41ce53:	scas   al,BYTE PTR es:[edi]
  41ce54:	(bad)  
  41ce55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce56:	in     eax,dx
  41ce57:	lods   al,BYTE PTR ds:[esi]
  41ce58:	inc    ecx
  41ce59:	mov    edi,0x6d23ff28
  41ce5e:	pop    ebx
  41ce5f:	dec    DWORD PTR [ebx-0x53]
  41ce62:	punpckhwd mm4,mm2
  41ce65:	dec    ebp
  41ce66:	dec    ebx
  41ce67:	fimul  DWORD PTR [esi+0x519f1f02]
  41ce6d:	or     DWORD PTR [ecx-0x30],esp
  41ce70:	les    ecx,FWORD PTR [ebp+0xa]
  41ce73:	jo     0x41ceeb
  41ce75:	inc    ebp
  41ce76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce77:	pop    esp
  41ce78:	scas   eax,DWORD PTR es:[edi]
  41ce79:	mov    ds:0x914ed5de,al
  41ce7e:	stos   BYTE PTR es:[edi],al
  41ce7f:	push   eax
  41ce80:	jecxz  0x41cec3
  41ce82:	sti    
  41ce83:	xchg   esi,eax
  41ce84:	scas   eax,DWORD PTR es:[edi]
  41ce85:	dec    ebp
  41ce86:	imul   ebp,DWORD PTR [eax],0xffffffd5
  41ce89:	cmp    BYTE PTR [ebx-0x498a4670],0x9e
  41ce90:	adc    al,cl
  41ce92:	pop    ss
  41ce93:	add    ebp,DWORD PTR [ebx]
  41ce95:	mov    ecx,0x40c7a71d
  41ce9a:	cdq    
  41ce9b:	jno    0x41ced5
  41ce9d:	mov    bl,0x33
  41ce9f:	adc    BYTE PTR [ecx],0x72
  41cea2:	bound  ecx,QWORD PTR [ecx-0x36ab7629]
  41cea8:	clc    
  41cea9:	jp     0x41cede
  41ceab:	mov    edx,0xc173fa5a
  41ceb0:	adc    DWORD PTR [eax-0x6e],ebx
  41ceb3:	push   edi
  41ceb4:	mov    eax,0x6014e3de
  41ceb9:	dec    ebx
  41ceba:	jmp    0x41cf24
  41cebc:	shl    al,1
  41cebe:	out    0x28,al
  41cec0:	test   BYTE PTR [ebp+0x3e],al
  41cec3:	test   DWORD PTR ds:0xc1c6fd7a,edx
  41cec9:	mov    ebx,0x2d939839
  41cece:	mov    ecx,0xe46edf25
  41ced3:	pop    ebp
  41ced4:	pop    edx
  41ced5:	sbb    esi,DWORD PTR [ebp+0x1b]
  41ced8:	mov    ah,0x7b
  41ceda:	imul   edx,DWORD PTR [edi+0x4a],0xa5985b26
  41cee1:	cmp    al,BYTE PTR [ecx-0x2ac4bac6]
  41cee7:	mov    edx,0x41535327
  41ceec:	call   0x7964:0xf6549d0
  41cef3:	repz sub ebp,ecx
  41cef6:	inc    edx
  41cef7:	fsubr  DWORD PTR [edi+0x57dafa1e]
  41cefd:	loope  0x41cf14
  41ceff:	xor    BYTE PTR ds:0x55fe5308,ch
  41cf05:	icebp  
  41cf06:	jp     0x41cf81
  41cf08:	scas   eax,DWORD PTR es:[edi]
  41cf09:	mov    ds:0x3126b337,eax
  41cf0e:	fs dec edx
  41cf10:	aaa    
  41cf11:	enter  0xd7c8,0x74
  41cf15:	mov    ebp,DWORD PTR [ecx+0x13]
  41cf18:	push   0xa389daeb
  41cf1d:	int    0xdf
  41cf1f:	lods   al,BYTE PTR ds:[esi]
  41cf20:	pop    ecx
  41cf21:	and    DWORD PTR [ebx+ebx*4-0x6ffc0903],eax
  41cf28:	dec    eax
  41cf29:	std    
  41cf2a:	pushf  
  41cf2b:	dec    esi
  41cf2c:	xchg   esp,eax
  41cf2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf2e:	int3   
  41cf2f:	outs   dx,BYTE PTR ds:[esi]
  41cf30:	retf   0x1c60
  41cf33:	pushf  
  41cf34:	xor    al,0x87
  41cf36:	push   cs
  41cf37:	lds    ebx,FWORD PTR ds:0x889a1d76
  41cf3d:	adc    BYTE PTR [edi],dh
  41cf3f:	jmp    0x41cf06
  41cf41:	or     cl,BYTE PTR [edx]
  41cf43:	out    0x7b,al
  41cf45:	jno    0x41cf4b
  41cf47:	dec    eax
  41cf48:	push   es
  41cf49:	adc    al,0xb2
  41cf4b:	add    BYTE PTR [eax],cl
  41cf4d:	ret    
  41cf4e:	cmp    al,0x7e
  41cf50:	aad    0x9e
  41cf52:	xchg   edi,eax
  41cf53:	push   0x22a74804
  41cf58:	pusha  
  41cf59:	mov    ds:0x1c361b09,eax
  41cf5e:	test   al,0x6a
  41cf60:	jne    0x41cf35
  41cf62:	xchg   ecx,eax
  41cf63:	shl    BYTE PTR [edi+0x66f8ebe4],0x46
  41cf6a:	js     0x41cf6a
  41cf6c:	xchg   dl,bl
  41cf6e:	fld    DWORD PTR [eax]
  41cf70:	cmp    eax,0x9b533f2f
  41cf75:	push   edi
  41cf76:	leave  
  41cf77:	cli    
  41cf78:	nop
  41cf79:	add    eax,0xb996cbec
  41cf7e:	inc    esi
  41cf7f:	ret    
  41cf80:	sub    al,0x2e
  41cf82:	int3   
  41cf83:	pop    esp
  41cf84:	jmp    0x41cf38
  41cf86:	pop    esi
  41cf87:	js     0x41cfdc
  41cf89:	and    eax,0xd5a691cd
  41cf8e:	jmp    0x41cfb2
  41cf90:	mov    ebp,0x9ebb954b
  41cf95:	out    0x62,eax
  41cf97:	cmovns edx,DWORD PTR [esi-0x6dcef5fb]
  41cf9e:	dec    edi
  41cf9f:	or     al,0x8a
  41cfa1:	call   0x9247:0x1c8eac
  41cfa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfa9:	push   0x5b541659
  41cfae:	(bad)  
  41cfaf:	mov    ebp,0xea7c49de
  41cfb4:	mov    esp,0x8a5a0f2f
  41cfb9:	push   esp
  41cfba:	(bad)  
  41cfbb:	hlt    
  41cfbc:	mov    ds:0x5df3e1fc,eax
  41cfc1:	xchg   DWORD PTR [edx+0x21c229d7],esi
  41cfc7:	inc    edx
  41cfc8:	std    
  41cfc9:	sbb    edi,esi
  41cfcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfcc:	pop    ecx
  41cfcd:	cmp    ebp,0x24
  41cfd0:	or     bh,BYTE PTR ds:0xa63b8c41
  41cfd6:	popa   
  41cfd7:	push   ebx
  41cfd8:	ins    BYTE PTR es:[edi],dx
  41cfd9:	pusha  
  41cfda:	out    0x39,al
  41cfdc:	xchg   ecx,eax
  41cfdd:	imul   eax,DWORD PTR [ebx],0xffffff88
  41cfe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe1:	jg     0x41d05e
  41cfe3:	cmc    
  41cfe4:	adc    DWORD PTR [edi-0x11],eax
  41cfe7:	test   esi,edi
  41cfe9:	push   0xffffff88
  41cfeb:	dec    esi
  41cfec:	or     al,0x98
  41cfee:	mov    edi,0x7de5a262
  41cff3:	add    DWORD PTR [edx+0x4f],0xc8
  41cffa:	add    BYTE PTR [eax],al
  41cffc:	add    BYTE PTR [eax],al
  41cffe:	add    BYTE PTR [eax],al
  41d000:	add    BYTE PTR [edx-0x217875bc],dl
  41d006:	iret   
  41d007:	lahf   
  41d008:	push   ebp
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	daa    
  41d00e:	push   ecx
  41d00f:	scas   eax,DWORD PTR es:[edi]
  41d010:	aad    0x3b
  41d012:	dec    esp
  41d013:	add    DWORD PTR [eax],eax
  41d015:	scas   al,BYTE PTR es:[edi]
  41d016:	add    eax,DWORD PTR [eax]
  41d018:	add    BYTE PTR [ebp+0x1233f95c],al
  41d01e:	jge    0x41d01a
  41d020:	ret    
  41d021:	or     dh,BYTE PTR [eax+0x11]
  41d024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d025:	push   ds
  41d026:	clc    
  41d027:	inc    ebp
  41d028:	sbb    BYTE PTR [ecx-0x2],0x7f
  41d02c:	mov    ecx,0xb41dbf29
  41d031:	dec    esp
  41d032:	mov    ch,0x20
  41d034:	sbb    eax,0xf8990ba9
  41d039:	loopne 0x41d0b1
  41d03b:	mov    bh,0xe3
  41d03d:	and    DWORD PTR [eax+0x7c],edx
  41d040:	std    
  41d041:	inc    ebx
  41d042:	paddb  mm1,QWORD PTR [eax]
  41d045:	push   edx
  41d046:	pusha  
  41d047:	cmp    edi,DWORD PTR [ebx-0x60]
  41d04a:	retf   
  41d04b:	xor    ch,BYTE PTR [ebx+0x39]
  41d04e:	ins    BYTE PTR es:[edi],dx
  41d04f:	pop    ebx
  41d050:	(bad)  
  41d051:	fdiv   QWORD PTR [edx+0x53]
  41d054:	rcr    BYTE PTR [ecx+0x26],0xd
  41d058:	lods   al,BYTE PTR ds:[esi]
  41d059:	outs   dx,BYTE PTR ds:[esi]
  41d05a:	sub    DWORD PTR [eax+0x5f138896],edx
  41d060:	pusha  
  41d061:	cs std 
  41d063:	fmul   st,st(2)
  41d065:	fistp  DWORD PTR [edx+0x38]
  41d068:	sbb    ecx,DWORD PTR [edx+0xe6c7ae8]
  41d06e:	sahf   
  41d06f:	xor    al,0xe4
  41d071:	mov    ah,0x2d
  41d073:	dec    BYTE PTR [edx+ebp*8-0xac1e61]
  41d07a:	jmp    0xfb9e:0xc0f5dbc2
  41d081:	les    eax,FWORD PTR [esp+ecx*8]
  41d084:	inc    esp
  41d085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d086:	or     al,0x55
  41d088:	sub    BYTE PTR [edi+0xca5fabb],0xbb
  41d08f:	arpl   sp,bp
  41d091:	arpl   WORD PTR [ebp+0x6],di
  41d094:	pop    ds
  41d095:	iret   
  41d096:	sbb    bh,BYTE PTR [ebx+0x5d]
  41d099:	dec    ebp
  41d09a:	hlt    
  41d09b:	rcl    DWORD PTR [ecx-0x11],1
  41d09e:	add    bl,BYTE PTR [ebp-0x79]
  41d0a1:	outs   dx,BYTE PTR ds:[esi]
  41d0a2:	xchg   ebp,eax
  41d0a3:	scas   al,BYTE PTR es:[edi]
  41d0a4:	inc    esp
  41d0a5:	scas   eax,DWORD PTR es:[edi]
  41d0a6:	mov    ds:0x11f331fe,eax
  41d0ab:	mov    ecx,0x616afcf5
  41d0b0:	adc    BYTE PTR [ebp+0x6d],dl
  41d0b3:	cmc    
  41d0b4:	adc    DWORD PTR [esi],esi
  41d0b6:	pop    edx
  41d0b7:	inc    ecx
  41d0b8:	mov    al,0x91
  41d0ba:	and    edx,eax
  41d0bc:	fisttp QWORD PTR [ecx]
  41d0be:	jae    0x41d080
  41d0c0:	mov    dh,0x6d
  41d0c2:	xchg   ecx,eax
  41d0c3:	jl     0x41d0b4
  41d0c5:	xor    al,0xf8
  41d0c7:	retf   0x896e
  41d0ca:	mov    cl,0xe5
  41d0cc:	push   es
  41d0cd:	popa   
  41d0ce:	ret    0xd5fd
  41d0d1:	or     al,0xcc
  41d0d3:	lods   eax,DWORD PTR ds:[esi]
  41d0d4:	addr16 (bad) 
  41d0d6:	mov    ebp,0xf8a16947
  41d0db:	stc    
  41d0dc:	cmp    esi,DWORD PTR [edx]
  41d0de:	jnp    0x41d0a9
  41d0e0:	pushf  
  41d0e1:	push   esi
  41d0e2:	adc    esi,edx
  41d0e4:	fs push 0xe7e2c18c
  41d0ea:	adc    DWORD PTR [edi],0x72
  41d0ed:	dec    eax
  41d0ee:	dec    esi
  41d0ef:	ja     0x41d079
  41d0f1:	inc    esp
  41d0f2:	loop   0x41d0cc
  41d0f4:	or     dl,dh
  41d0f6:	dec    eax
  41d0f7:	repnz push 0x2
  41d0fa:	mov    ds:0x714da9b3,eax
  41d0ff:	in     al,dx
  41d100:	stos   DWORD PTR es:[edi],eax
  41d101:	fstp   DWORD PTR [ecx+0x7b]
  41d104:	push   edi
  41d105:	or     al,0xb1
  41d107:	retf   
  41d108:	sbb    dh,BYTE PTR [esp+esi*4+0x25]
  41d10c:	fidiv  WORD PTR [esi-0x5fb832e7]
  41d112:	or     DWORD PTR [eax],0xfbcf9015
  41d118:	ror    DWORD PTR [edx+0x2904040c],cl
  41d11e:	mov    bl,0x29
  41d120:	(bad)  
  41d121:	and    edi,DWORD PTR [ecx]
  41d123:	push   edx
  41d124:	push   0x21
  41d126:	and    DWORD PTR [eax-0x4],0x18
  41d12a:	mov    edi,0x19c441f6
  41d12f:	enter  0x191d,0xa0
  41d133:	(bad)  
  41d134:	loopne 0x41d153
  41d136:	and    al,0x86
  41d138:	mov    dl,0x95
  41d13a:	mov    BYTE PTR [ebx-0x3d7fcabd],ch
  41d140:	(bad)  
  41d141:	call   0xc9fa3d9e
  41d146:	or     al,0xd4
  41d148:	ja     0x41d17d
  41d14a:	imul   edi,ebp,0x9a01b38f
  41d150:	adc    eax,0xc4244f78
  41d155:	inc    esi
  41d156:	in     eax,dx
  41d157:	push   ecx
  41d158:	jge    0x41d0e1
  41d15a:	rcl    DWORD PTR [eax+eiz*4+0x4249af29],cl
  41d161:	mov    ebx,edi
  41d163:	sbb    BYTE PTR [ebx],dl
  41d165:	mov    eax,ds:0x6f8a0e0b
  41d16a:	add    eax,0x71a4a7dd
  41d16f:	test   al,0xc3
  41d171:	ja     0x41d118
  41d173:	imul   ebp,DWORD PTR [eax+ebp*8],0xffffffa7
  41d177:	mov    cl,0xb7
  41d179:	ss dec edx
  41d17b:	or     ah,BYTE PTR [esi]
  41d17d:	jge    0x41d1bd
  41d17f:	lahf   
  41d180:	cli    
  41d181:	dec    ebx
  41d182:	xor    DWORD PTR [edi-0x55],eax
  41d185:	pop    ebp
  41d186:	sub    eax,0x7f1afd7
  41d18b:	out    dx,eax
  41d18c:	cmp    dl,BYTE PTR [ecx+0x732998ec]
  41d192:	add    al,0x12
  41d195:	push   eax
  41d196:	ret    0x5062
  41d199:	sub    BYTE PTR [eax-0x7b],bl
  41d19c:	or     eax,0x488c6cee
  41d1a1:	shr    DWORD PTR [esi-0x5415ebc1],cl
  41d1a7:	in     eax,dx
  41d1a8:	cmp    DWORD PTR [esi+edi*4-0x7b704111],edi
  41d1af:	btr    edi,ebp
  41d1b2:	retf   0xd2
  41d1b5:	jnp    0x41d1c6
  41d1b7:	or     dl,ah
  41d1b9:	fisttp DWORD PTR [ebx]
  41d1bb:	xlat   BYTE PTR ds:[ebx]
  41d1bc:	sti    
  41d1bd:	inc    esi
  41d1be:	aas    
  41d1bf:	mov    dl,0xbc
  41d1c1:	xchg   esp,eax
  41d1c2:	cwde   
  41d1c3:	xchg   esi,eax
  41d1c4:	add    BYTE PTR [eax-0x220c810b],0x49
  41d1cb:	popf   
  41d1cc:	fsub   DWORD PTR [ebx-0xe]
  41d1cf:	mov    esi,0x6c87dfd3
  41d1d4:	pushf  
  41d1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1d6:	inc    edi
  41d1d7:	pop    ss
  41d1d8:	xchg   BYTE PTR [ebp+0x297da688],bh
  41d1de:	es lock push ebp
  41d1e1:	ficom  WORD PTR [edx-0x185848bc]
  41d1e7:	(bad)  
  41d1e8:	adc    al,0x53
  41d1ea:	stc    
  41d1eb:	push   0xd7f3ad6e
  41d1f0:	aam    0x19
  41d1f2:	(bad)  
  41d1f3:	repnz mov edi,0xa14354a
  41d1f9:	mov    ecx,0x439a9feb
  41d1fe:	mov    WORD PTR [edx+0x6b],fs
  41d201:	lock push esp
  41d203:	or     DWORD PTR [esi-0x732f7715],esp
  41d209:	cs (bad) 
  41d20c:	sub    eax,DWORD PTR [ebp+0x15d4f460]
  41d212:	sbb    di,WORD PTR [esi+0x3a]
  41d216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d217:	imul   ecx,ecx,0x69f0ca
  41d21d:	sti    
  41d21e:	push   ecx
  41d21f:	mov    ebx,0xb274f0a7
  41d224:	and    al,0xa6
  41d226:	add    esp,ebx
  41d228:	pushf  
  41d229:	xor    edi,eax
  41d22b:	push   ebp
  41d22c:	lea    ebp,[esi+0x7fb15096]
  41d232:	je     0x41d1dd
  41d234:	lds    esp,FWORD PTR [ebx]
  41d236:	gs (bad) 
  41d238:	pop    ebp
  41d239:	pop    ss
  41d23a:	pop    esi
  41d23b:	int    0x80
  41d23d:	retf   0x65ac
  41d240:	mov    esp,0x67b30be4
  41d245:	mov    dh,0x4
  41d247:	cdq    
  41d248:	mov    eax,0x3e8c9d38
  41d24d:	push   edi
  41d24e:	fnstenv [edx+0x630c51eb]
  41d254:	dec    eax
  41d255:	jbe    0x41d253
  41d257:	fwait
  41d258:	js     0x41d2ba
  41d25a:	fisttp WORD PTR [edi-0x4b]
  41d25d:	cmp    eax,0x2a859b8
  41d262:	jecxz  0x41d26a
  41d264:	dec    ebx
  41d265:	adc    esp,DWORD PTR [edi]
  41d267:	or     eax,DWORD PTR [esp+ebp*2-0x29]
  41d26b:	pop    esp
  41d26c:	mov    ds:0x326c6af1,eax
  41d271:	pop    esi
  41d272:	lds    edi,FWORD PTR [edi+0x1b229c42]
  41d278:	or     dh,BYTE PTR [esi-0x7a343de9]
  41d27e:	add    ecx,DWORD PTR [edx]
  41d280:	dec    ebp
  41d281:	mov    ds:0xb0c0f081,al
  41d286:	xor    eax,DWORD PTR [ecx+edx*4]
  41d289:	sti    
  41d28a:	gs jle 0x41d2b2
  41d28d:	ja     0x41d2d3
  41d28f:	lods   al,BYTE PTR ds:[esi]
  41d290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d291:	pop    edi
  41d292:	repnz (bad) [ecx]
  41d295:	(bad)  
  41d296:	jae    0x41d2ba
  41d298:	test   BYTE PTR [ecx+ebp*8-0x3b],dh
  41d29c:	jecxz  0x41d2a7
  41d29e:	or     bh,bh
  41d2a0:	or     BYTE PTR [eax+0x3fe3d6c],bh
  41d2a6:	jne    0x41d268
  41d2a8:	mov    ds:0xccc7ccac,eax
  41d2ad:	push   ss
  41d2ae:	hlt    
  41d2af:	sbb    esi,DWORD PTR [eax+0x7ba3cfc8]
  41d2b5:	call   DWORD PTR [eax+0x6a]
  41d2b8:	push   edi
  41d2b9:	scas   al,BYTE PTR es:[edi]
  41d2ba:	sti    
  41d2bb:	mov    cl,0x59
  41d2bd:	dec    ebx
  41d2be:	xchg   DWORD PTR [edi],edi
  41d2c0:	jecxz  0x41d298
  41d2c2:	int    0x45
  41d2c4:	into   
  41d2c5:	sub    BYTE PTR [eax-0x2c],ch
  41d2c8:	sbb    eax,0x47142681
  41d2cd:	out    0x3d,al
  41d2cf:	pop    ebx
  41d2d0:	jmp    0x41d275
  41d2d2:	sbb    al,0x5e
  41d2d4:	or     bl,ah
  41d2d6:	(bad)  
  41d2d7:	out    0xc0,al
  41d2d9:	call   0xb50b:0xb45ccbd0
  41d2e0:	sub    eax,0x2c3ffce7
  41d2e5:	mov    BYTE PTR [ecx],0xd4
  41d2e8:	ret    
  41d2e9:	lea    ecx,[esi-0x1]
  41d2ec:	test   BYTE PTR [esi+0x54],dh
  41d2ef:	mov    ch,0x3c
  41d2f1:	leave  
  41d2f2:	xchg   BYTE PTR [edi+0x7b],al
  41d2f5:	imul   esp,DWORD PTR [eax],0x36
  41d2f8:	and    DWORD PTR [eax+0x6e55083c],ecx
  41d2fe:	cmp    al,0xd7
  41d300:	inc    ebp
  41d301:	ror    DWORD PTR [edi+eiz*8-0x57],cl
  41d305:	xor    ebx,DWORD PTR [bp+di-0x7195]
  41d30a:	mov    esi,DWORD PTR [ebx]
  41d30c:	cmp    edx,DWORD PTR [ebx+eiz*1]
  41d30f:	push   ebp
  41d310:	xlat   BYTE PTR ds:[ebx]
  41d311:	rcr    BYTE PTR [eax+0x4b8650ec],0x33
  41d318:	adc    cl,cl
  41d31a:	jne    0x41d36c
  41d31c:	and    ch,BYTE PTR [esi+edx*4-0x53fd841d]
  41d323:	clc    
  41d324:	mov    dl,0x36
  41d326:	xor    DWORD PTR [esi],0xfe183569
  41d32c:	retf   0xf6a1
  41d32f:	xchg   DWORD PTR ds:0x46bc05e0,edx
  41d335:	aaa    
  41d336:	sub    BYTE PTR [edi+0x5532bf50],dl
  41d33c:	jl     0x41d30b
  41d33e:	xor    BYTE PTR [eax],ch
  41d340:	stos   BYTE PTR es:[edi],al
  41d341:	lods   al,BYTE PTR ds:[esi]
  41d342:	loop   0x41d34f
  41d344:	xchg   edx,eax
  41d345:	sbb    al,0x5b
  41d347:	pusha  
  41d348:	mov    WORD PTR [ebx],gs
  41d34a:	cmp    esi,DWORD PTR cs:[edi]
  41d34d:	pop    edi
  41d34e:	sbb    BYTE PTR [ecx-0x5ac6c532],bh
  41d354:	mov    ecx,0x8c4780bc
  41d359:	fiadd  WORD PTR [ecx+0x6]
  41d35c:	xchg   DWORD PTR [esi+eax*1+0xd184c1b],edx
  41d363:	or     DWORD PTR [esi-0x517ee997],0xd8776fd6
  41d36d:	es jnp 0x41d321
  41d370:	icebp  
  41d371:	mov    al,0xd2
  41d373:	xchg   edx,eax
  41d375:	sahf   
  41d376:	ja     0x41d3da
  41d378:	push   ebp
  41d379:	add    bh,BYTE PTR [ebx-0x48]
  41d37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d37d:	mov    ah,0x6b
  41d37f:	sbb    dh,BYTE PTR [edx]
  41d381:	pop    ebp
  41d382:	test   al,0xf8
  41d384:	xchg   esp,eax
  41d385:	sub    DWORD PTR [esi+0x3c],edx
  41d388:	pushf  
  41d389:	push   esp
  41d38a:	pop    ebp
  41d38b:	xchg   esi,eax
  41d38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d38d:	fisttp DWORD PTR [ebx+esi*2-0x77]
  41d391:	mov    dh,0x35
  41d393:	ins    DWORD PTR es:[edi],dx
  41d394:	xchg   ecx,eax
  41d395:	mov    DWORD PTR [ebx+0x15],ebx
  41d398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d399:	jmp    0x717b0c51
  41d39e:	jp     0x41d3b7
  41d3a0:	imul   ebx,DWORD PTR [edi-0x2cbea5fb],0x68
  41d3a7:	dec    ebx
  41d3a8:	sub    ebx,DWORD PTR [ebx]
  41d3aa:	xchg   edi,eax
  41d3ab:	push   ds
  41d3ac:	lock jl 0x41d34f
  41d3af:	fild   QWORD PTR [edx+0x327ff5d0]
  41d3b5:	mov    DWORD PTR [ecx+ebx*8],edi
  41d3b8:	in     al,dx
  41d3b9:	mov    esp,0xb0d97329
  41d3be:	inc    ebp
  41d3bf:	jnp    0x41d399
  41d3c1:	idiv   DWORD PTR [edi-0x29]
  41d3c4:	add    BYTE PTR [ebx+0xf5],dh
  41d3ca:	add    BYTE PTR [eax],al
  41d3cc:	add    BYTE PTR [eax],al
  41d3ce:	add    BYTE PTR [eax],al
  41d3d0:	add    BYTE PTR [edx-0x300eb0aa],bl
  41d3d6:	stc    
  41d3d7:	mov    esi,0xe316497f
  41d3dc:	stos   BYTE PTR es:[edi],al
  41d3dd:	lods   al,BYTE PTR ds:[esi]
  41d3de:	nop
  41d3df:	dec    esp
  41d3e0:	out    0xe9,al
  41d3e2:	dec    edi
  41d3e3:	add    DWORD PTR [eax],eax
  41d3e5:	scas   al,BYTE PTR es:[edi]
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    BYTE PTR [eax+0x22d4114d],dl
  41d3ee:	push   ss
  41d3ef:	cmp    al,0xb2
  41d3f1:	cmp    DWORD PTR [ebp-0x6e],ebp
  41d3f4:	and    bh,bl
  41d3f6:	pop    eax
  41d3f7:	test   DWORD PTR [ebp-0x7b],0xfd04bf65
  41d3fe:	mov    al,0xfd
  41d400:	and    al,0x37
  41d402:	sub    al,0xbb
  41d404:	mov    dh,0xed
  41d406:	push   0x41a8eaf
  41d40b:	mov    bl,0x95
  41d40d:	xor    al,0x45
  41d40f:	ins    BYTE PTR es:[edi],dx
  41d410:	xor    BYTE PTR [edx-0x5c0bf3cf],0x10
  41d417:	mov    ebx,DWORD PTR [edi+0x15]
  41d41a:	add    cl,BYTE PTR [esi]
  41d41c:	repnz xchg ebx,eax
  41d41e:	loope  0x41d3f4
  41d420:	(bad)  
  41d421:	xor    esp,edi
  41d423:	or     ecx,edx
  41d425:	stos   BYTE PTR es:[edi],al
  41d426:	dec    esp
  41d427:	cdq    
  41d428:	test   dh,0xc5
  41d42b:	in     al,0xb5
  41d42d:	mov    ds:0xf5423631,eax
  41d432:	lods   al,BYTE PTR ds:[esi]
  41d433:	(bad)  
  41d434:	icebp  
  41d435:	pop    ss
  41d436:	nop
  41d437:	mov    bl,0xad
  41d439:	lods   al,BYTE PTR ds:[esi]
  41d43a:	js     0x41d423
  41d43c:	(bad)  [ebx]
  41d43e:	jl     0x41d3d7
  41d440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d441:	jno    0x41d3fc
  41d443:	xor    esi,DWORD PTR [ecx]
  41d445:	add    DWORD PTR [edx],ebx
  41d447:	aad    0x98
  41d449:	inc    edi
  41d44a:	mov    ebx,0xe6192ed9
  41d44f:	loop   0x41d40b
  41d451:	xchg   esp,eax
  41d452:	cmp    BYTE PTR [edx-0x30cb1ae2],ah
  41d458:	mov    ds:0x7a49ffd,eax
  41d45d:	ss repnz int3 
  41d460:	dec    eax
  41d461:	fimul  WORD PTR [ecx+0x32c1abf9]
  41d467:	xchg   ebp,ecx
  41d469:	xchg   edi,eax
  41d46a:	popa   
  41d46b:	and    al,0xa4
  41d46d:	jg     0x41d4ec
  41d46f:	sub    DWORD PTR [esi],0x9c85e693
  41d475:	mov    ebx,0xbb69a19c
  41d47a:	and    cl,cl
  41d47c:	out    dx,eax
  41d47d:	sub    dh,BYTE PTR [eax-0x690bc195]
  41d483:	push   esi
  41d484:	sbb    esi,eax
  41d486:	je     0x41d433
  41d488:	ss push eax
  41d48a:	pop    ecx
  41d48b:	mov    esp,0x27ebd52
  41d490:	jle    0x41d4ff
  41d492:	call   0xecf24e54
  41d497:	ret    0x990a
  41d49a:	out    0x1e,al
  41d49c:	out    dx,al
  41d49d:	into   
  41d49e:	push   0xb7092a48
  41d4a3:	popf   
  41d4a4:	data16 hlt 
  41d4a6:	mov    esi,0xa390993a
  41d4ab:	and    ch,cl
  41d4ad:	sbb    BYTE PTR [ebp-0x275df33d],ah
  41d4b3:	pop    esp
  41d4b4:	icebp  
  41d4b5:	xor    esp,DWORD PTR [ebp+0x73]
  41d4b8:	call   0x2f879fdc
  41d4bd:	cwde   
  41d4be:	dec    esp
  41d4bf:	jae    0x41d51b
  41d4c1:	lahf   
  41d4c2:	adc    edx,esi
  41d4c4:	and    eax,DWORD PTR [esi-0x1f]
  41d4c7:	add    eax,ecx
  41d4c9:	push   eax
  41d4ca:	mov    dl,BYTE PTR [ebx+0x4f56c828]
  41d4d0:	fstp   st(0)
  41d4d2:	sahf   
  41d4d3:	jle    0x41d46a
  41d4d5:	mov    edx,0xc1f3313
  41d4da:	or     al,ah
  41d4dc:	lds    esp,FWORD PTR [edi+0xe]
  41d4df:	or     dh,BYTE PTR [ebx-0x5a2ce22e]
  41d4e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4e6:	ror    BYTE PTR [eax-0x14c2a74c],cl
  41d4ec:	aas    
  41d4ed:	xchg   esp,eax
  41d4ee:	call   ecx
  41d4f0:	fcomp  QWORD PTR [eax]
  41d4f2:	cmp    eax,0x8ac43b7
  41d4f7:	ja     0x41d551
  41d4f9:	mov    eax,ds:0xa38c8e50
  41d4fe:	jbe    0x41d577
  41d500:	xor    esi,edi
  41d502:	jg     0x41d51e
  41d504:	iret   
  41d505:	popf   
  41d506:	aam    0xf0
  41d508:	and    dl,BYTE PTR [eax+0x5d454c72]
  41d50e:	xor    cl,BYTE PTR [eax-0x70]
  41d511:	push   ecx
  41d512:	sub    al,0x36
  41d514:	ins    DWORD PTR es:[edi],dx
  41d515:	gs test al,0x57
  41d518:	xor    cl,BYTE PTR [edx+0x56f06b6b]
  41d51e:	mov    ds:0x5a18fc5e,al
  41d523:	pop    edi
  41d524:	dec    ebp
  41d525:	and    eax,0x44a059f1
  41d52a:	xor    DWORD PTR [edi+ecx*1],esp
  41d52d:	stos   BYTE PTR es:[edi],al
  41d52e:	mov    ah,0xe8
  41d530:	call   0x1e7a:0xfecff5a8
  41d537:	outs   dx,DWORD PTR ds:[esi]
  41d538:	mov    esi,edi
  41d53a:	push   ss
  41d53b:	fdivr  QWORD PTR [ebx-0x13]
  41d53e:	and    eax,0x2fccb382
  41d543:	mov    ebx,0x7858819a
  41d548:	add    ebp,0xffffffad
  41d54b:	test   DWORD PTR cs:[edi+0x16],ebp
  41d54f:	ror    DWORD PTR [eax-0x79],0x4c
  41d553:	cmp    dh,ah
  41d555:	adc    eax,0x67
  41d558:	lods   al,BYTE PTR ds:[esi]
  41d559:	push   ebx
  41d55a:	scas   eax,DWORD PTR es:[edi]
  41d55b:	push   ebp
  41d55c:	jns    0x41d5aa
  41d55e:	ins    DWORD PTR es:[edi],dx
  41d55f:	mov    edx,DWORD PTR [edx-0x2af09201]
  41d565:	jle    0x41d561
  41d567:	xchg   ebx,eax
  41d568:	ja     0x41d4ea
  41d56a:	lods   eax,DWORD PTR ds:[esi]
  41d56b:	cmp    BYTE PTR [edx-0xd77df41],bh
  41d571:	mov    esi,0x119a6ba0
  41d576:	xor    edx,DWORD PTR [edx+0x6d]
  41d579:	mov    edx,0xf3bacf68
  41d57e:	jmp    0x41d59f
  41d580:	push   0x280daee0
  41d585:	sbb    al,BYTE PTR [ebx-0x70]
  41d588:	cmp    bh,ah
  41d58a:	mov    ebp,DWORD PTR [ecx+0x6e6611e4]
  41d590:	sahf   
  41d591:	ins    DWORD PTR es:[edi],dx
  41d592:	cmp    BYTE PTR [esp+edx*2+0x7a],0x78
  41d597:	imul   BYTE PTR [edx-0x3b]
  41d59a:	jnp    0x41d5a8
  41d59c:	cmp    DWORD PTR [edi],esp
  41d59e:	or     ebp,DWORD PTR [ecx+0x5d]
  41d5a1:	xchg   ebp,eax
  41d5a2:	retf   0xf722
  41d5a5:	aas    
  41d5a6:	sub    bh,BYTE PTR [edx]
  41d5a8:	mov    bh,0x1a
  41d5aa:	scas   eax,DWORD PTR es:[edi]
  41d5ab:	push   ds
  41d5ac:	jmp    0x41d5a1
  41d5ae:	dec    esi
  41d5af:	cdq    
  41d5b0:	inc    esp
  41d5b1:	into   
  41d5b2:	mov    ds:0xdb4ba04b,al
  41d5b7:	les    esi,FWORD PTR [edx+eiz*4]
  41d5ba:	mov    al,0xc1
  41d5bc:	and    al,0x58
  41d5be:	mov    ch,BYTE PTR [ecx+0x1be4c754]
  41d5c4:	fadd   QWORD PTR [esi]
  41d5c6:	sbb    edx,edi
  41d5c8:	xor    cl,al
  41d5ca:	add    ah,BYTE PTR [eax-0xcf12229]
  41d5d0:	rcr    BYTE PTR [esp+ecx*8-0x5f],0xb5
  41d5d5:	add    eax,0xf57328c1
  41d5da:	les    ecx,FWORD PTR [ecx-0x5f]
  41d5dd:	dec    eax
  41d5de:	cs inc ebx
  41d5e0:	js     0x41d5b4
  41d5e2:	push   cs
  41d5e3:	sub    DWORD PTR [esi+0x268be952],0xfce97e2d
  41d5ed:	bound  ecx,QWORD PTR [ecx]
  41d5ef:	popa   
  41d5f0:	xchg   dx,ax
  41d5f2:	bound  ebx,QWORD PTR [ebx+eiz*4]
  41d5f5:	in     al,0x79
  41d5f7:	daa    
  41d5f8:	push   ds
  41d5f9:	in     al,0x49
  41d5fb:	jg     0x41d651
  41d5fd:	push   ebx
  41d5fe:	and    eax,0x9f095e3c
  41d603:	imul   edi,DWORD PTR [ecx-0x70],0xffffffb4
  41d607:	call   0x6e49:0x967173d0
  41d60e:	adc    DWORD PTR [edi-0x50800556],eax
  41d614:	xor    al,0x2e
  41d616:	js     0x41d646
  41d618:	cmc    
  41d619:	jns    0x41d5bb
  41d61b:	popf   
  41d61c:	out    0xa0,al
  41d61e:	loopne 0x41d5b0
  41d620:	outs   dx,DWORD PTR ds:[esi]
  41d621:	stos   BYTE PTR es:[edi],al
  41d622:	cmp    eax,0x361452de
  41d627:	mov    ds:0xed77cf41,eax
  41d62c:	adc    DWORD PTR ds:[ebx-0x38],esp
  41d630:	es ins DWORD PTR es:[edi],dx
  41d632:	jne    0x41d69c
  41d634:	cmp    dh,BYTE PTR [eax+0x6a87e49c]
  41d63a:	(bad)  [esi+0x6154aee]
  41d640:	dec    esi
  41d641:	xor    edi,edx
  41d643:	test   BYTE PTR [edx+0x5],0xc5
  41d647:	lea    esp,[ebx+esi*1+0x626f0a97]
  41d64e:	(bad)  [ebp+0x1d]
  41d651:	mov    ds:0x1fe67f55,eax
  41d656:	inc    ebp
  41d657:	sbb    esi,DWORD PTR [ebp-0x1c]
  41d65a:	dec    esi
  41d65b:	lods   al,BYTE PTR ds:[esi]
  41d65c:	xor    BYTE PTR [eax],0x8d
  41d65f:	sub    al,0x76
  41d661:	fist   DWORD PTR [ecx+0x3f]
  41d664:	fbld   TBYTE PTR [ebx]
  41d666:	cmp    cl,BYTE PTR [ebp-0x502abb47]
  41d66c:	cmp    BYTE PTR [ebp-0x11],cl
  41d66f:	and    BYTE PTR [ebp+0x34],ah
  41d672:	dec    edx
  41d673:	loope  0x41d625
  41d675:	aas    
  41d676:	add    edi,esp
  41d678:	in     al,0x96
  41d67a:	inc    ebp
  41d67b:	xchg   ebx,eax
  41d67c:	(bad)  
  41d67d:	ja     0x41d6d3
  41d67f:	mov    bl,0x5e
  41d681:	pop    ecx
  41d682:	retf   
  41d683:	and    ah,BYTE PTR [ebp-0x4eecfbe7]
  41d689:	sbb    cl,dh
  41d68b:	dec    ecx
  41d68c:	popa   
  41d68d:	mov    esi,0x7c691a53
  41d692:	(bad)  
  41d693:	addr16 pop esi
  41d695:	sub    bl,al
  41d697:	or     bh,BYTE PTR [edx+esi*4-0x6b281051]
  41d69e:	(bad)  
  41d69f:	div    DWORD PTR [ecx]
  41d6a1:	push   esi
  41d6a2:	or     bh,BYTE PTR [edx-0x31]
  41d6a5:	and    al,0x35
  41d6a7:	xchg   DWORD PTR [esi+eiz*2-0x53],ecx
  41d6ab:	ss nop
  41d6ad:	loope  0x41d651
  41d6af:	loop   0x41d6b1
  41d6b1:	jb     0x41d731
  41d6b3:	lods   eax,DWORD PTR ds:[esi]
  41d6b4:	push   ds
  41d6b5:	fmul   st(7),st
  41d6b7:	mov    al,0x5e
  41d6b9:	(bad)  [edi+0x53743f43]
  41d6bf:	jb     0x41d659
  41d6c1:	outs   dx,BYTE PTR ds:[esi]
  41d6c2:	fwait
  41d6c3:	and    dh,al
  41d6c5:	(bad)
  41d6c8:	neg    BYTE PTR [esi-0x5b]
  41d6cb:	fstp   TBYTE PTR [edx-0x76698bf]
  41d6d1:	cli    
  41d6d2:	std    
  41d6d3:	dec    ecx
  41d6d4:	inc    edx
  41d6d5:	iret   
  41d6d6:	mov    cl,0xbe
  41d6d8:	mov    dl,0xfe
  41d6da:	lock mov WORD PTR [eax],ds
  41d6dd:	in     eax,0x2a
  41d6df:	cs dec esi
  41d6e1:	test   al,0xf1
  41d6e3:	jno    0x41d708
  41d6e5:	int3   
  41d6e6:	enter  0x55b,0x2d
  41d6ea:	jo     0x41d731
  41d6ec:	sti    
  41d6ed:	cs xchg edi,eax
  41d6ef:	push   edi
  41d6f0:	ja     0x41d6f2
  41d6f2:	mov    edx,0xd93cdd44
  41d6f7:	cs mov ebp,0x259fb24a
  41d6fd:	hlt    
  41d6fe:	mov    cl,0x32
  41d700:	xchg   edx,eax
  41d701:	inc    esi
  41d702:	and    BYTE PTR [edx+0x64db3034],bl
  41d708:	push   ds
  41d709:	inc    eax
  41d70a:	gs push edx
  41d70c:	pop    ss
  41d70d:	mov    WORD PTR [ebx],?
  41d70f:	ss in  eax,0xc4
  41d712:	dec    esi
  41d713:	pop    eax
  41d714:	jmp    0x41d790
  41d716:	push   0x103e64be
  41d71b:	adc    al,bh
  41d71d:	ror    BYTE PTR [eax-0x424c25ad],0x88
  41d724:	sub    ch,BYTE PTR [ebp+0x59]
  41d727:	sub    DWORD PTR [ebp+ecx*4+0x18],ebx
  41d72b:	sub    al,0x89
  41d72d:	repnz loop 0x41d6c4
  41d730:	mov    bl,0xe7
  41d732:	dec    edi
  41d733:	in     al,0x91
  41d735:	hlt    
  41d736:	popf   
  41d737:	push   eax
  41d738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d739:	sahf   
  41d73a:	add    eax,0x27d4f24d
  41d73f:	rol    ecx,0xcf
  41d742:	call   0x182c:0x80633e23
  41d749:	cld    
  41d74a:	jae    0x41d76a
  41d74c:	daa    
  41d74d:	fmul   QWORD PTR ds:0x9c759ef5
  41d753:	jne    0x41d7c7
  41d755:	push   edx
  41d756:	loop   0x41d7a0
  41d758:	push   esi
  41d759:	aam    0xeb
  41d75b:	mov    esp,0x670f229
  41d760:	mov    eax,ds:0xa996dbca
  41d765:	rcr    BYTE PTR [ebp+0x1cebd8ad],cl
  41d76b:	les    edi,FWORD PTR [ecx+0x27]
  41d76e:	sahf   
  41d76f:	retf   
  41d770:	(bad)  
  41d771:	jns    0x41d765
  41d773:	or     eax,0x9655c86
  41d778:	add    ebx,DWORD PTR [edi+0x2a0b7b7a]
  41d77e:	or     DWORD PTR gs:0x64c5ef68,esi
  41d785:	or     dh,al
  41d787:	retf   
  41d788:	out    0xe,al
  41d78a:	mov    ah,0xe9
  41d78c:	and    al,0xcf
  41d78e:	aaa    
  41d78f:	cdq    
  41d790:	jb     0x41d7bb
  41d792:	and    al,0x7a
  41d794:	xchg   edi,eax
  41d795:	mov    bh,0x6a
	...
  41d79f:	add    BYTE PTR [eax],al
  41d7a1:	cld    
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx-0x1cfaec5e],ah
  41d7af:	jbe    0x41d77d
  41d7b1:	xchg   edi,eax
  41d7b2:	push   ebx
  41d7b3:	add    DWORD PTR [eax],eax
  41d7b5:	scas   al,BYTE PTR es:[edi]
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    BYTE PTR [ecx],bl
  41d7ba:	mov    DWORD PTR [esi-0x5c],ebx
  41d7bd:	ja     0x41d838
  41d7bf:	shl    BYTE PTR [edi],0xd8
  41d7c2:	enter  0xf4e7,0x26
  41d7c6:	inc    edx
  41d7c7:	and    BYTE PTR [ecx-0x44db9be4],ah
  41d7cd:	xor    dl,al
  41d7cf:	jg     0x41d800
  41d7d1:	hlt    
  41d7d2:	add    BYTE PTR [eax+ebp*8+0x2790e2f3],dh
  41d7d9:	inc    esi
  41d7da:	das    
  41d7db:	mov    dh,BYTE PTR [esi-0x58]
  41d7de:	(bad)  
  41d7df:	fisub  WORD PTR [edx+esi*2-0x70]
  41d7e3:	or     al,0x4b
  41d7e5:	sub    eax,0xbc81320a
  41d7ea:	sub    edx,esp
  41d7ec:	(bad)  
  41d7ed:	lods   al,BYTE PTR ds:[esi]
  41d7ee:	iret   
  41d7ef:	jl     0x41d77c
  41d7f1:	outs   dx,BYTE PTR ds:[esi]
  41d7f2:	call   0x6b58f489
  41d7f7:	(bad)  
  41d7f9:	mov    bh,0x32
  41d7fb:	aas    
  41d7fc:	mov    cl,0xc0
  41d7fe:	cmc    
  41d7ff:	js     0x41d79c
  41d801:	xchg   esp,eax
  41d802:	mov    al,0x71
  41d804:	in     al,0x99
  41d806:	pop    ecx
  41d807:	mov    eax,ds:0x792acb86
  41d80c:	fadd   DWORD PTR [ebx-0x6b53ece]
  41d812:	or     DWORD PTR [edi+0x79d20ec],edi
  41d818:	js     0x41d845
  41d81a:	rcr    BYTE PTR [esi],1
  41d81c:	mov    ah,0x6f
  41d81e:	jmp    0xf9b8fb94
  41d823:	adc    eax,0x857c7b92
  41d828:	mov    bl,0x44
  41d82a:	cwde   
  41d82b:	mov    WORD PTR [ecx-0x5af78e08],?
  41d831:	mov    dh,0xdf
  41d833:	fistp  DWORD PTR [edi-0x3cadb737]
  41d839:	lea    edi,[eax-0x64bb2f09]
  41d83f:	ins    DWORD PTR es:[edi],dx
  41d840:	adc    al,0x38
  41d842:	sub    eax,0xf47785ce
  41d847:	mov    WORD PTR [ebx],?
  41d849:	icebp  
  41d84a:	cwde   
  41d84b:	cmp    eax,0xf800b44
  41d850:	jns    0x41d817
  41d852:	in     al,0xfa
  41d854:	popa   
  41d855:	xchg   ecx,eax
  41d856:	cmp    eax,0xbfa005af
  41d85b:	xchg   edi,eax
  41d85c:	jp     0x41d844
  41d85e:	gs push esi
  41d860:	add    eax,0xd56fa0a6
  41d865:	xor    BYTE PTR ds:0xb6c73e70,cl
  41d86b:	lods   al,BYTE PTR ds:[esi]
  41d86c:	jge    0x41d82a
  41d86e:	in     al,0xd4
  41d870:	mov    ds:0x47557ae4,al
  41d875:	inc    edx
  41d876:	jecxz  0x41d87e
  41d878:	jne    0x41d8cd
  41d87a:	mov    ebx,0xca978d30
  41d87f:	mov    cl,bh
  41d881:	mov    ecx,0x102c9b33
  41d886:	lahf   
  41d887:	repz xchg edi,eax
  41d889:	cmp    BYTE PTR [eax-0x2bf52fa8],0x10
  41d890:	xchg   ebp,eax
  41d891:	jecxz  0x41d8ab
  41d893:	mov    dl,0xbe
  41d895:	push   ss
  41d896:	sbb    bh,BYTE PTR [ebp-0x711e6c81]
  41d89c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d89d:	or     eax,0xc066dfaf
  41d8a2:	int3   
  41d8a3:	push   es
  41d8a4:	mov    dl,ah
  41d8a6:	xchg   edx,eax
  41d8a7:	xchg   BYTE PTR ds:[edi],bl
  41d8aa:	push   0x20
  41d8ac:	xor    BYTE PTR [edi-0x23],0x74
  41d8b0:	shr    DWORD PTR [eax+0x7384e62f],0x3
  41d8b7:	call   0xbd7c:0xf78f0747
  41d8be:	and    DWORD PTR [eax+0x4b],esi
  41d8c1:	push   es
  41d8c2:	sub    esi,ebp
  41d8c4:	ins    DWORD PTR es:[edi],dx
  41d8c5:	cmp    BYTE PTR [edx-0x24a09545],ch
  41d8cb:	dec    edi
  41d8cc:	mov    al,ds:0x1b3f16db
  41d8d1:	lods   al,BYTE PTR ds:[esi]
  41d8d2:	enter  0x3bf3,0x5e
  41d8d6:	adc    BYTE PTR [ebp+0x45687298],al
  41d8dc:	daa    
  41d8dd:	sub    ah,BYTE PTR [ebp+0x60bfdf5d]
  41d8e3:	xchg   ebx,eax
  41d8e4:	inc    ecx
  41d8e5:	and    edi,esp
  41d8e7:	mov    ds:0x15558149,eax
  41d8ec:	imul   BYTE PTR [edi]
  41d8ee:	adc    edx,DWORD PTR [edx]
  41d8f0:	lods   al,BYTE PTR ds:[esi]
  41d8f1:	push   edx
  41d8f2:	jg     0x41d8fc
  41d8f4:	adc    eax,edi
  41d8f6:	data16 cld 
  41d8f8:	cmp    ecx,DWORD PTR [ecx+0x15]
  41d8fb:	push   edi
  41d8fc:	pop    ebp
  41d8fd:	pop    ecx
  41d8fe:	add    ah,cl
  41d900:	lock push ds
  41d902:	sbb    DWORD PTR [ecx+ecx*2-0x22df3443],esp
  41d909:	inc    eax
  41d90a:	pop    esi
  41d90b:	mov    ebx,0xc9f9837c
  41d910:	mov    eax,ds:0x837cda37
  41d915:	mov    BYTE PTR [eax+0x16],dh
  41d918:	gs sahf 
  41d91a:	mov    dl,0x46
  41d91c:	scas   eax,DWORD PTR es:[edi]
  41d91d:	inc    esp
  41d91e:	inc    edi
  41d91f:	retf   
  41d920:	fs jecxz 0x41d94d
  41d923:	add    eax,0x7ae248d3
  41d928:	or     eax,0x6024e2b7
  41d92d:	jne    0x41d93e
  41d92f:	push   ss
  41d930:	jecxz  0x41d8ee
  41d932:	mov    ebx,0x783e33af
  41d937:	in     eax,dx
  41d938:	(bad)  
  41d93a:	pop    edx
  41d93b:	mov    dl,0x2
  41d93d:	dec    edx
  41d93e:	pusha  
  41d93f:	mov    eax,ds:0x2afb5c06
  41d944:	sub    bh,dh
  41d946:	cwde   
  41d947:	dec    esi
  41d948:	push   edi
  41d949:	cdq    
  41d94a:	adc    BYTE PTR [edx],ah
  41d94c:	adc    dl,ch
  41d94e:	or     esi,DWORD PTR [ecx-0x7c5c64e5]
  41d954:	ret    
  41d955:	fdiv   DWORD PTR ds:0xd1a303a1
  41d95b:	out    dx,eax
  41d95c:	pop    eax
  41d95d:	pusha  
  41d95e:	clc    
  41d95f:	jae    0x41d8e2
  41d961:	mov    edi,0xc94fdaf7
  41d966:	sub    al,0x40
  41d968:	inc    ebx
  41d969:	int    0x4
  41d96b:	push   edx
  41d96c:	mov    al,ds:0xc2c4b851
  41d971:	inc    edx
  41d972:	push   esi
  41d973:	ret    0x4de8
  41d976:	jg     0x41d938
  41d978:	dec    eax
  41d979:	jl     0x41d9bd
  41d97b:	(bad)  
  41d97c:	sub    eax,0x7d777e5b
  41d981:	fs (bad) 
  41d983:	sub    eax,0xb3461650
  41d988:	cli    
  41d989:	pop    eax
  41d98a:	cmp    DWORD PTR ds:0x4a23c156,0xffffffa5
  41d991:	pop    ds
  41d992:	push   0x56
  41d994:	(bad)  
  41d995:	mov    edx,0x3f78f383
  41d99a:	inc    esp
  41d99b:	pop    ecx
  41d99c:	mov    esp,DWORD PTR [edx]
  41d99e:	stc    
  41d99f:	imul   ecx,DWORD PTR [ebp-0x648554dc],0x2a
  41d9a6:	pop    edx
  41d9a7:	icebp  
  41d9a8:	push   eax
  41d9a9:	jmp    0x81f7:0x45642628
  41d9b0:	mov    eax,ds:0x1dad36cb
  41d9b5:	jle    0x41d9a7
  41d9b7:	shr    BYTE PTR ds:0xbc7660bc,1
  41d9bd:	cmp    ebp,edi
  41d9bf:	push   ecx
  41d9c0:	adc    eax,0xf32ac1d6
  41d9c5:	pop    ecx
  41d9c6:	addr16 jae 0x41d996
  41d9c9:	(bad)  
  41d9ca:	or     ebp,DWORD PTR es:0x3b0b1afb
  41d9d1:	push   ecx
  41d9d2:	dec    ebx
  41d9d3:	repnz dec esi
  41d9d5:	mov    ds:0x3334d071,al
  41d9da:	sti    
  41d9db:	ror    DWORD PTR [edi],cl
  41d9dd:	push   es
  41d9de:	pop    edi
  41d9df:	out    dx,al
  41d9e0:	sbb    bh,BYTE PTR [ecx]
  41d9e2:	nop
  41d9e3:	sub    ch,ah
  41d9e5:	cdq    
  41d9e6:	and    eax,0x88876107
  41d9eb:	xchg   esp,eax
  41d9ec:	je     0x41da60
  41d9ee:	adc    eax,0x1c2c68d0
  41d9f3:	hlt    
  41d9f4:	adc    edi,DWORD PTR [ecx+eax*1]
  41d9f7:	add    dl,BYTE PTR [eax+0x70]
  41d9fa:	sbb    eax,0x6d1687bc
  41d9ff:	xchg   ebp,eax
  41da00:	pop    esp
  41da01:	int    0x5e
  41da03:	data16 ins BYTE PTR es:[edi],dx
  41da05:	aaa    
  41da06:	sub    al,BYTE PTR [esi]
  41da08:	cld    
  41da09:	sbb    al,0x5f
  41da0b:	shl    DWORD PTR [ebx+ecx*4+0x1d800c06],0xff
  41da13:	lea    ebx,[edx-0x5c6f1240]
  41da19:	scas   eax,DWORD PTR es:[edi]
  41da1a:	or     ecx,DWORD PTR [esi]
  41da1c:	sub    al,0xb7
  41da1e:	dec    esi
  41da1f:	test   DWORD PTR [ebp-0x4],eax
  41da22:	(bad)  
  41da24:	shl    BYTE PTR [eax-0x79],0x4b
  41da28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da29:	xor    ebp,ebp
  41da2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da2c:	add    BYTE PTR [esi-0x33],bl
  41da2f:	jp     0x41daaa
  41da31:	or     dh,BYTE PTR [esi+ebp*8+0x3cdd27cc]
  41da38:	dec    ebx
  41da39:	shl    ebp,1
  41da3b:	outs   dx,BYTE PTR ds:[esi]
  41da3c:	sar    BYTE PTR [ebp-0x42],cl
  41da3f:	fadd   QWORD PTR [esi]
  41da41:	xor    al,0xd5
  41da43:	sahf   
  41da44:	xor    BYTE PTR ds:0xc7417614,bh
  41da4a:	xchg   esp,eax
  41da4b:	adc    BYTE PTR ds:0x5680c39,0xf1
  41da52:	add    eax,0x438be2fd
  41da57:	fidivr DWORD PTR [edi-0x4d]
  41da5a:	dec    esp
  41da5b:	popa   
  41da5c:	outs   dx,DWORD PTR ds:[esi]
  41da5d:	outs   dx,BYTE PTR ds:[esi]
  41da5e:	repz rol bh,cl
  41da61:	mov    eax,ds:0x16b5c331
  41da66:	retf   
  41da67:	xor    ecx,DWORD PTR [edx-0x657e853b]
  41da6d:	jecxz  0x41da98
  41da6f:	mov    esi,0x48b8bf89
  41da74:	sbb    eax,0x5af856bc
  41da79:	xor    ebx,DWORD PTR [ecx-0x2c]
  41da7c:	popf   
  41da7d:	pop    esp
  41da7e:	inc    esi
  41da7f:	sbb    eax,0x5d6a79dd
  41da84:	neg    DWORD PTR [ecx+0x58f749c1]
  41da8a:	lock mov al,0xc7
  41da8d:	ret    0xbdd2
  41da90:	lahf   
  41da91:	adc    ah,BYTE PTR [eax-0x34]
  41da94:	mov    ebp,0x7bbad7ab
  41da99:	dec    ebx
  41da9a:	icebp  
  41da9b:	fidiv  WORD PTR [edx]
  41da9d:	je     0x41da9f
  41da9f:	mov    edi,0x6e04da65
  41daa4:	loopne 0x41dab4
  41daa6:	mov    ebp,edi
  41daa8:	mov    al,0x40
  41daaa:	int    0x60
  41daac:	call   0xfd77:0xfa029efc
  41dab3:	lods   eax,DWORD PTR ds:[esi]
  41dab4:	ins    BYTE PTR es:[edi],dx
  41dab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab6:	cld    
  41dab7:	ja     0x41da46
  41dab9:	sti    
  41daba:	scas   al,BYTE PTR es:[edi]
  41dabb:	mov    cl,0xf0
  41dabd:	mov    ch,0x6b
  41dabf:	sbb    ah,bh
  41dac1:	or     DWORD PTR [ebx+edx*4],ebx
  41dac4:	out    dx,al
  41dac5:	popf   
  41dac6:	mov    eax,ss:0x45924e49
  41dacc:	(bad)  
  41dacd:	outs   dx,DWORD PTR ds:[esi]
  41dace:	xchg   ecx,eax
  41dacf:	out    dx,al
  41dad0:	dec    ebx
  41dad1:	sti    
  41dad2:	sbb    BYTE PTR [edi],0xf4
  41dad5:	cmp    DWORD PTR [edi+esi*4+0x6372899d],edx
  41dadc:	mov    ds:0x415fde80,al
  41dae1:	sub    eax,0x1eb06d61
  41dae6:	bnd jmp 0x41dabc
  41dae9:	dec    edi
  41daea:	repnz pop edi
  41daec:	mov    al,ds:0x4d1a284c
  41daf1:	xor    BYTE PTR [ebx+0x4b1574dd],dh
  41daf7:	int3   
  41daf8:	or     BYTE PTR [esi-0x2e],dh
  41dafb:	stos   DWORD PTR es:[edi],eax
  41dafc:	mov    bh,0xc5
  41dafe:	xchg   edi,eax
  41daff:	fisub  DWORD PTR [ebx-0x44]
  41db02:	or     edx,edi
  41db04:	push   ss
  41db05:	outs   dx,BYTE PTR ds:[esi]
  41db06:	xchg   ecx,eax
  41db07:	mov    dl,0xb4
  41db09:	ds mov ebp,0x606bc7a8
  41db0f:	sbb    edi,DWORD PTR [ebx]
  41db11:	loope  0x41db5d
  41db13:	push   eax
  41db14:	xchg   ebx,eax
  41db15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db16:	push   ecx
  41db17:	sbb    al,0xba
  41db19:	or     ebx,esp
  41db1b:	sbb    esi,esp
  41db1d:	jmp    0x41daf1
  41db1f:	imul   ebp,DWORD PTR [ecx+eax*1],0xffffffeb
  41db23:	iret   
  41db24:	(bad)  
  41db25:	pusha  
  41db26:	je     0x41db35
  41db28:	cwde   
  41db29:	xor    esi,esi
  41db2b:	lock cmc 
  41db2d:	daa    
  41db2e:	xlat   BYTE PTR ds:[ebx]
  41db2f:	mov    eax,ds:0xec9fa9f1
  41db34:	pop    esp
  41db35:	(bad)  
  41db36:	rol    BYTE PTR [edx],0xb8
  41db39:	cmp    bl,BYTE PTR [eax+0x43]
  41db3c:	jno    0x41db5d
  41db3e:	int    0x50
  41db40:	mov    ds:0x67b59b20,al
  41db45:	je     0x41daec
  41db47:	repnz addr16 mov ebx,0x163d7a3d
  41db4e:	dec    ebx
  41db4f:	imul   edx,DWORD PTR ds:0x5480dd0b,0xffffffac
  41db56:	test   BYTE PTR [ebp-0x5c],dh
  41db59:	mov    dl,0x84
  41db5b:	or     al,0xab
  41db5d:	sar    dh,0xa5
  41db60:	sahf   
  41db61:	or     al,0x93
  41db63:	daa    
  41db64:	neg    BYTE PTR [esi+0xed]
  41db6a:	add    BYTE PTR [eax],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	add    BYTE PTR [eax],al
  41db70:	add    BYTE PTR [ecx-0x11],al
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0x9bb1e62
  41db80:	loop   0x41dbc7
  41db82:	push   edi
  41db83:	add    DWORD PTR [eax],eax
  41db85:	scas   al,BYTE PTR es:[edi]
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    BYTE PTR [ecx+ebp*4+0x63615595],bl
  41db8f:	scas   eax,DWORD PTR es:[edi]
  41db90:	fidiv  WORD PTR [ecx]
  41db92:	and    al,0x61
  41db94:	push   edi
  41db95:	mov    edx,0x921793ff
  41db9a:	push   es
  41db9b:	xlat   BYTE PTR ds:[ebx]
  41db9c:	shl    DWORD PTR [ebp+0x6c2befc5],0xd9
  41dba3:	inc    edx
  41dba4:	adc    al,0xfd
  41dba6:	add    eax,0xf7e6dc5c
  41dbab:	loopne 0x41dc0b
  41dbad:	ds mov ch,0x35
  41dbb0:	test   eax,0x594e474b
  41dbb5:	jnp    0x41dbb3
  41dbb7:	sub    DWORD PTR [edi+edi*4+0x52865737],esp
  41dbbe:	xchg   DWORD PTR [eax+edx*1],esi
  41dbc1:	(bad)  
  41dbc2:	aas    
  41dbc3:	and    edi,DWORD PTR [eax]
  41dbc5:	jo     0x41dbf9
  41dbc7:	clc    
  41dbc8:	bound  ebp,QWORD PTR [edi+esi*1+0x1c57c0e]
  41dbcf:	loopne 0x41dc4c
  41dbd1:	add    eax,DWORD PTR [edi-0x75921019]
  41dbd7:	aam    0x44
  41dbd9:	jg     0x41dc20
  41dbdb:	adc    eax,0x8ee59037
  41dbe0:	sub    DWORD PTR [eax+0x40],0xffffff89
  41dbe4:	mov    ds:0x1016355,al
  41dbe9:	add    DWORD PTR ds:0xb56c4a1b,ecx
  41dbef:	lods   eax,DWORD PTR ds:[esi]
  41dbf0:	jmp    0x203095ed
  41dbf5:	dec    ebp
  41dbf6:	ficomp DWORD PTR [ecx-0xfbd982]
  41dbfc:	pop    esi
  41dbfd:	jno    0x41dbdf
  41dbff:	push   edi
  41dc00:	icebp  
  41dc01:	mov    ch,0xbd
  41dc03:	add    cl,bl
  41dc05:	sbb    eax,0xeae7a490
  41dc0a:	mov    al,0xd3
  41dc0c:	sbb    al,0x81
  41dc0e:	hlt    
  41dc0f:	pop    ebx
  41dc10:	ja     0x41dc8f
  41dc12:	imul   BYTE PTR [ecx+0x50]
  41dc15:	dec    ebx
  41dc16:	mov    ds:0xb1e20894,al
  41dc1b:	xchg   edi,esi
  41dc1d:	mul    DWORD PTR [edx+0x4c]
  41dc20:	cs enter 0x1093,0x62
  41dc25:	pop    ecx
  41dc26:	lods   eax,DWORD PTR ds:[esi]
  41dc27:	mov    dl,0xf0
  41dc29:	sahf   
  41dc2a:	pushf  
  41dc2b:	leave  
  41dc2c:	push   esp
  41dc2d:	mov    eax,0x51cc2fe6
  41dc32:	inc    DWORD PTR [ebx]
  41dc34:	adc    BYTE PTR [edi-0x2db82615],ch
  41dc3a:	cmp    BYTE PTR [ebp+0x52],ah
  41dc3d:	dec    edi
  41dc3e:	sbb    BYTE PTR [bx+0x6c],cl
  41dc42:	(bad)  
  41dc43:	cmp    BYTE PTR [edi+0x10b85f22],bh
  41dc49:	mov    esi,0x22afb9b4
  41dc4e:	push   ebp
  41dc4f:	xor    edi,edx
  41dc51:	ja     0x41dc32
  41dc53:	sub    ah,BYTE PTR [edi-0x3305133f]
  41dc59:	pop    es
  41dc5a:	loope  0x41dcba
  41dc5c:	pop    edi
  41dc5d:	imul   ebp,DWORD PTR [edx+ebx*1+0x787fc8a5],0x1952f84c
  41dc68:	and    cl,ah
  41dc6a:	xlat   BYTE PTR ds:[ebx]
  41dc6b:	stos   DWORD PTR es:[edi],eax
  41dc6c:	dec    esp
  41dc6d:	scas   eax,DWORD PTR es:[edi]
  41dc6e:	mov    ecx,0x8b741b4c
  41dc73:	dec    edi
  41dc74:	mov    dl,0x8c
  41dc76:	f2xm1  
  41dc78:	cli    
  41dc79:	mov    ds:0x59ae5139,al
  41dc7e:	popa   
  41dc7f:	fiadd  WORD PTR [edx+0x7d390eb2]
  41dc85:	or     BYTE PTR [esi-0x58],dl
  41dc88:	inc    ecx
  41dc89:	inc    edx
  41dc8a:	mov    al,ds:0x553ce5d4
  41dc8f:	push   ebp
  41dc90:	stos   DWORD PTR es:[edi],eax
  41dc91:	mov    ebx,0xed7a3821
  41dc96:	pop    edx
  41dc97:	pusha  
  41dc98:	das    
  41dc99:	cdq    
  41dc9a:	call   0x5b1fa5a1
  41dc9f:	out    dx,al
  41dca0:	lods   al,BYTE PTR ds:[esi]
  41dca1:	pushf  
  41dca2:	dec    ebp
  41dca3:	stc    
  41dca4:	push   ecx
  41dca5:	imul   esp,DWORD PTR [ecx],0x1
  41dca8:	xchg   ecx,eax
  41dca9:	es dec ecx
  41dcab:	mov    al,ss:0xd0b7ff65
  41dcb1:	add    BYTE PTR [esi-0x40],bh
  41dcb4:	fistp  DWORD PTR [eax+ecx*2-0x60]
  41dcb8:	stos   BYTE PTR es:[edi],al
  41dcb9:	jp     0x41dc6d
  41dcbb:	ja     0x41dd14
  41dcbd:	rcr    BYTE PTR [ebp-0x5d],0xa0
  41dcc1:	ja     0x41dc6c
  41dcc3:	push   ecx
  41dcc4:	inc    ebx
  41dcc5:	and    BYTE PTR [ebp+0x2e],bh
  41dcc8:	adc    bl,cl
  41dcca:	cwde   
  41dccb:	pop    ds
  41dccc:	push   edx
  41dccd:	adc    al,0xd1
  41dccf:	sti    
  41dcd0:	sbb    BYTE PTR [esp+edx*8-0x1dc07220],bh
  41dcd7:	sbb    al,0xbd
  41dcd9:	add    al,0x34
  41dcdb:	jmp    0x41dd15
  41dcdd:	pop    eax
  41dcde:	loopne 0x41dd21
  41dce0:	sub    eax,0x84f83577
  41dce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dce6:	repnz ins BYTE PTR es:[edi],dx
  41dce8:	(bad)  
  41dce9:	jmp    0x41dc75
  41dceb:	cmp    ebx,eax
  41dced:	jno    0x41dcd7
  41dcef:	mov    ch,BYTE PTR [ebx-0x115a05f7]
  41dcf5:	mul    DWORD PTR [edx-0x436b739f]
  41dcfb:	jo     0x41dcbc
  41dcfd:	mov    ds:0xee54d2b8,al
  41dd02:	xor    ebx,esi
  41dd04:	xchg   BYTE PTR cs:[ebp+0x12128d9],ah
  41dd0b:	test   edx,eax
  41dd0d:	cmp    al,0xd5
  41dd0f:	mov    edx,0xb3981d66
  41dd14:	in     eax,0xc2
  41dd16:	add    BYTE PTR [eax],bl
  41dd18:	outs   dx,DWORD PTR ds:[esi]
  41dd19:	jbe    0x41dcfe
  41dd1b:	mov    ebp,DWORD PTR [ebp+ebp*8-0x14]
  41dd1f:	mov    cl,0x66
  41dd21:	adc    BYTE PTR [ecx+0x726e4acf],ah
  41dd27:	hlt    
  41dd28:	sub    DWORD PTR [eax-0x1d],eax
  41dd2b:	xor    DWORD PTR [ebx+0x5838c756],ebp
  41dd31:	or     al,ah
  41dd33:	lahf   
  41dd34:	pop    ebx
  41dd35:	sub    ebx,DWORD PTR [edx]
  41dd37:	sbb    al,0xda
  41dd39:	mov    al,0xc
  41dd3b:	cdq    
  41dd3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd3d:	out    dx,eax
  41dd3e:	aas    
  41dd3f:	div    ah
  41dd41:	outs   dx,DWORD PTR ds:[esi]
  41dd42:	call   0x620b2ea0
  41dd47:	lods   eax,DWORD PTR ds:[esi]
  41dd48:	inc    eax
  41dd49:	or     dh,bh
  41dd4b:	sbb    DWORD PTR [esi+0x3a9dc0b9],esi
  41dd51:	mov    cl,ch
  41dd53:	push   esp
  41dd54:	mov    edx,0x9831a8dd
  41dd59:	data16 sbb al,0xd1
  41dd5c:	or     al,0xb0
  41dd5e:	cdq    
  41dd5f:	sbb    BYTE PTR [ebx],ah
  41dd61:	int3   
  41dd62:	fistp  WORD PTR [esi+0x4]
  41dd65:	inc    edi
  41dd66:	fidiv  DWORD PTR [ecx]
  41dd68:	add    al,0xb1
  41dd6a:	loop   0x41ddd4
  41dd6c:	repnz mov ebp,0xa78ec38c
  41dd72:	lds    esp,FWORD PTR [edx-0x43b4dcb8]
  41dd78:	pop    ebp
  41dd79:	popa   
  41dd7a:	push   0x44
  41dd7c:	and    eax,0x7709bbaf
  41dd81:	push   edx
  41dd82:	mov    dh,0xd0
  41dd84:	outs   dx,BYTE PTR ds:[esi]
  41dd85:	push   ss
  41dd86:	outs   dx,BYTE PTR ds:[esi]
  41dd87:	xchg   ebx,eax
  41dd88:	dec    ecx
  41dd89:	push   edx
  41dd8a:	sbb    ebx,ebp
  41dd8c:	mov    ds:0xe3ceb781,eax
  41dd91:	add    bl,dl
  41dd93:	std    
  41dd94:	clc    
  41dd95:	div    DWORD PTR ds:0xea122003
  41dd9b:	fs inc esi
  41dd9d:	jp     0x41ddef
  41dd9f:	lock imul eax,DWORD PTR [edi+0x2a],0x49
  41dda4:	loop   0x41ddb8
  41dda6:	mul    BYTE PTR [ebx+0x6d]
  41dda9:	out    0xbc,eax
  41ddab:	mov    BYTE PTR [esi+0x83f2ac4],bh
  41ddb1:	stc    
  41ddb2:	inc    eax
  41ddb3:	pop    edi
  41ddb4:	sub    eax,0xaac9c2a7
  41ddb9:	or     esi,DWORD PTR [ecx+0x65]
  41ddbc:	popa   
  41ddbd:	repz cmp eax,0x8b5331bb
  41ddc3:	loopne 0x41ddf8
  41ddc5:	xchg   esi,eax
  41ddc6:	push   ebp
  41ddc7:	jbe    0x41de24
  41ddc9:	test   BYTE PTR [ebp+0x5c282975],bl
  41ddcf:	dec    eax
  41ddd0:	mov    eax,ds:0xf7cbb82e
  41ddd5:	mov    ebx,0xb17c3e91
  41ddda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dddb:	bound  ebp,QWORD PTR [ebx+0x569be31e]
  41dde1:	mov    ds:0x9a51040d,eax
  41dde6:	adc    eax,DWORD PTR [eax]
  41dde8:	imul   esp,DWORD PTR [ecx],0x41
  41ddeb:	mov    dh,0x7e
  41dded:	jecxz  0x41ddaf
  41ddef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddf0:	xchg   esp,eax
  41ddf1:	cmp    BYTE PTR [eax-0x58],bh
  41ddf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddf5:	and    dh,BYTE PTR [ecx-0x20]
  41ddf8:	pop    esp
  41ddf9:	jp     0x41de35
  41ddfb:	test   eax,0xe11aea8f
  41de00:	xchg   BYTE PTR [edx+0x4c49573d],cl
  41de06:	fld    DWORD PTR [eax-0x63366a15]
  41de0c:	xchg   esp,eax
  41de0d:	jmp    0xe20d:0xf947d1d2
  41de14:	scas   eax,DWORD PTR es:[edi]
  41de15:	call   0x125096f7
  41de1a:	adc    al,0x1c
  41de1c:	gs cli 
  41de1e:	fwait
  41de1f:	pop    edx
  41de20:	cs jne 0x41de8a
  41de23:	push   eax
  41de24:	ss pop ebx
  41de26:	daa    
  41de27:	and    eax,0xffb2ca20
  41de2c:	and    bl,BYTE PTR [ebp-0x22]
  41de2f:	popa   
  41de30:	mov    dh,0xa
  41de32:	jmp    0xa9ff124a
  41de37:	enter  0x9bc1,0xfa
  41de3b:	sbb    al,0x22
  41de3d:	in     eax,dx
  41de3e:	repz inc ebp
  41de40:	sbb    BYTE PTR [eax],cl
  41de42:	nop
  41de43:	ins    BYTE PTR es:[edi],dx
  41de44:	push   ebx
  41de45:	push   ecx
  41de46:	fsub   QWORD PTR [ebx+0x61]
  41de49:	mov    WORD PTR [ebx+0x2e],gs
  41de4c:	and    eax,0x13d7b513
  41de51:	pop    esp
  41de52:	pop    ecx
  41de53:	xlat   BYTE PTR ds:[ebx]
  41de54:	jnp    0x41de44
  41de56:	ins    BYTE PTR es:[edi],dx
  41de57:	into   
  41de58:	bound  eax,QWORD PTR [edi-0x69b6e531]
  41de5e:	jns    0x41de88
  41de60:	dec    esi
  41de61:	xlat   BYTE PTR ds:[ebx]
  41de62:	nop
  41de63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de64:	xor    eax,0x95d44719
  41de69:	dec    edi
  41de6a:	cmp    DWORD PTR [eax],ebx
  41de6c:	in     eax,dx
  41de6d:	retf   0xc379
  41de70:	mov    cl,0x76
  41de72:	mov    ebp,0xa7ddf88e
  41de77:	js     0x41de42
  41de79:	scas   al,BYTE PTR es:[edi]
  41de7a:	pop    ecx
  41de7b:	xor    ecx,DWORD PTR [ebx]
  41de7d:	push   edi
  41de7e:	gs scas al,BYTE PTR es:[edi]
  41de80:	sub    ebx,eax
  41de82:	std    
  41de83:	scas   eax,DWORD PTR es:[edi]
  41de84:	sti    
  41de85:	pop    edx
  41de86:	mov    edi,0x36f92006
  41de8b:	cmp    eax,0x37b72f48
  41de90:	ret    0x4add
  41de93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de94:	mov    bh,BYTE PTR ds:0xceb8d580
  41de9a:	sti    
  41de9b:	jmp    0x41deb4
  41de9d:	xchg   ebp,eax
  41de9e:	sti    
  41de9f:	mov    ss,ebp
  41dea1:	add    al,0x93
  41dea3:	mov    edx,0xf6d7bbf3
  41dea8:	adc    DWORD PTR [edi+edi*2],eax
  41deab:	out    0xe4,al
  41dead:	shl    DWORD PTR [esi-0x2ea358ed],cl
  41deb3:	and    DWORD PTR [ebx],edi
  41deb5:	call   0x3d39360d
  41deba:	jbe    0x41ded3
  41debc:	fstp   DWORD PTR [edi+0x76aa0a77]
  41dec2:	jbe    0x41de99
  41dec4:	jno    0x41df2e
  41dec6:	fiadd  DWORD PTR [eax+0x1d]
  41dec9:	pop    edx
  41deca:	sub    ebx,0xde1be60
  41ded0:	ret    0x7538
  41ded3:	rol    BYTE PTR [edx-0x6ce56c72],1
  41ded9:	mov    WORD PTR [edx],gs
  41dedb:	lea    edi,[edx]
  41dedd:	(bad)  
  41dede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dedf:	rol    BYTE PTR [eax],cl
  41dee1:	push   ebx
  41dee2:	(bad)  
  41dee3:	in     eax,0x56
  41dee5:	sbb    eax,0x405fc6bb
  41deea:	scas   eax,DWORD PTR es:[edi]
  41deeb:	jmp    0x41de95
  41deed:	arpl   dx,di
  41deef:	mov    DWORD PTR [eax],ebp
  41def1:	rcr    ch,1
  41def3:	dec    esp
  41def4:	pop    eax
  41def5:	push   0xffffffde
  41def7:	cld    
  41def8:	jmp    0x69f0:0x170f0251
  41deff:	pop    ecx
  41df00:	push   ebp
  41df01:	mov    ebp,0x580d273c
  41df06:	popa   
  41df07:	(bad)  
  41df08:	and    BYTE PTR [edi+0x6bf21e40],al
  41df0e:	mov    ds:0xb471fe34,al
  41df13:	jo     0x41deae
  41df15:	fcom   QWORD PTR [ebx-0x7a]
  41df18:	fidivr DWORD PTR [ebp-0x72]
  41df1b:	loope  0x41df06
  41df1d:	mov    al,ds:0x7f006861
  41df22:	loop   0x41df0f
  41df24:	stos   DWORD PTR es:[edi],eax
  41df25:	sbb    DWORD PTR [edi+0x6bca7faf],ebp
  41df2b:	pop    ecx
  41df2c:	jno    0x41df77
  41df2e:	xchg   ebp,eax
  41df2f:	in     al,dx
  41df30:	mov    ch,0x30
  41df32:	add    dh,dl
  41df34:	mov    al,0x8e
  41df36:	sbb    al,BYTE PTR [eax]
	...
  41df40:	add    BYTE PTR ds:0x7f7d7f79,dl
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	cmp    BYTE PTR [ebx+0x7a],0x40
  41df50:	gs repz pop edx
  41df53:	add    DWORD PTR [eax],eax
  41df55:	scas   al,BYTE PTR es:[edi]
  41df56:	add    eax,DWORD PTR [eax]
  41df58:	add    BYTE PTR [edx-0x27],cl
  41df5b:	test   DWORD PTR [ebx],0xcbf5ca03
  41df61:	fsub   DWORD PTR [eax]
  41df63:	out    0xe8,eax
  41df65:	cmp    al,BYTE PTR [ebx+0x2b]
  41df68:	shr    DWORD PTR [esi],cl
  41df6a:	int    0x2
  41df6c:	cli    
  41df6d:	mov    eax,0xee4ed0a2
  41df72:	pushf  
  41df73:	inc    ebp
  41df74:	data16 adc dl,BYTE PTR [esi]
  41df77:	cmc    
  41df78:	mov    edx,0x14ff2bb7
  41df7d:	cs pop ebx
  41df7f:	pop    es
  41df80:	dec    edx
  41df81:	inc    ebx
  41df82:	sahf   
  41df83:	inc    esp
  41df84:	lods   al,BYTE PTR ds:[esi]
  41df85:	mov    ch,BYTE PTR [ebx]
  41df87:	sar    al,cl
  41df89:	add    eax,0x313afee6
  41df8e:	pop    edi
  41df8f:	dec    esi
  41df90:	and    al,0xd3
  41df92:	sub    ch,dh
  41df94:	adc    al,0x8e
  41df96:	add    DWORD PTR [eax],ecx
  41df98:	repz rcr ebp,0x54
  41df9c:	jge    0x41dfbe
  41df9e:	test   al,0x99
  41dfa0:	mov    BYTE PTR [ebx-0x77],0xfe
  41dfa4:	lea    edi,[esi-0x5d]
  41dfa7:	lahf   
  41dfa8:	test   DWORD PTR [eax+ecx*2+0x6245a5d3],ecx
  41dfaf:	and    bh,ch
  41dfb1:	inc    esp
  41dfb2:	cmp    edi,DWORD PTR es:[esi-0x5]
  41dfb6:	dec    DWORD PTR [eax]
  41dfb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfb9:	imul   dh
  41dfbb:	fadd   DWORD PTR [esi]
  41dfbd:	call   0x93c3:0x932eb0d3
  41dfc4:	mov    WORD PTR [ecx+0x5421b60a],?
  41dfca:	inc    edi
  41dfcb:	mov    ecx,0xa61f7854
  41dfd0:	sbb    BYTE PTR [ebx+0x535ed888],0x77
  41dfd7:	push   eax
  41dfd8:	inc    edi
  41dfd9:	nop
  41dfda:	dec    eax
  41dfdb:	cmp    eax,0xe8da898c
  41dfe0:	dec    ecx
  41dfe1:	mov    dh,0x2f
  41dfe3:	stos   DWORD PTR es:[edi],eax
  41dfe4:	inc    ebx
  41dfe5:	mov    edx,ebx
  41dfe7:	pop    ebp
  41dfe8:	pop    esp
  41dfe9:	mov    cl,BYTE PTR [ebx]
  41dfeb:	int    0x38
  41dfed:	iret   
  41dfee:	mov    al,0xfc
  41dff0:	sub    esi,edi
  41dff2:	and    BYTE PTR ds:0x3d961d26,dl
  41dff8:	xchg   ebx,ecx
  41dffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dffb:	out    dx,eax
  41dffc:	sub    eax,0x8e50b266
  41e001:	outs   dx,BYTE PTR ds:[esi]
  41e002:	jecxz  0x41e013
  41e004:	repnz fs adc eax,0x6d00aa3
  41e00b:	sub    BYTE PTR ds:0x79f39e3b,0xfb
  41e012:	mov    ebp,0x5ad1c62d
  41e017:	inc    eax
  41e018:	cmp    ecx,DWORD PTR [ebx+edi*8-0x6c]
  41e01c:	enter  0x9d6a,0x7e
  41e020:	in     eax,0x2
  41e022:	pop    esp
  41e023:	xchg   edx,eax
  41e024:	add    DWORD PTR [eax],ecx
  41e026:	test   eax,0x3c17df9f
  41e02b:	push   cs
  41e02c:	les    esp,FWORD PTR ds:[ebx-0x6a718185]
  41e033:	push   cs
  41e034:	sbb    ebp,DWORD PTR [ebx-0x15]
  41e037:	gs int 0x33
  41e03a:	xchg   esi,eax
  41e03b:	imul   edi,DWORD PTR [ebx-0x19],0x85c7a943
  41e042:	call   0xbdf1:0x1d5b5bbf
  41e049:	aas    
  41e04a:	sahf   
  41e04b:	jp     0x41e04c
  41e04d:	mov    BYTE PTR [edx],bh
  41e04f:	mov    dl,0x3b
  41e051:	retf   
  41e052:	pushf  
  41e053:	nop
  41e054:	int3   
  41e055:	mov    bh,0x89
  41e057:	jne    0x41e022
  41e059:	stos   BYTE PTR es:[edi],al
  41e05a:	adc    al,0xf7
  41e05c:	int3   
  41e05d:	and    esp,DWORD PTR [ebp-0x17]
  41e060:	sbb    esp,DWORD PTR [ecx+0x2f19683a]
  41e066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e067:	loop   0x41e03a
  41e069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e06a:	mov    edx,0x203bc812
  41e06f:	fist   WORD PTR [edi-0x157c2474]
  41e075:	rcr    BYTE PTR ds:0xe1ed1c54,1
  41e07b:	inc    edi
  41e07c:	jge    0x41e0cb
  41e07e:	mov    ch,0x12
  41e080:	mov    ds:0xee23b0e1,eax
  41e085:	add    al,0x26
  41e087:	div    DWORD PTR [eax+0x69]
  41e08a:	ins    DWORD PTR es:[edi],dx
  41e08b:	push   ds
  41e08c:	ret    
  41e08d:	inc    ecx
  41e08e:	outs   dx,BYTE PTR es:[esi]
  41e090:	out    0xbc,al
  41e092:	pop    ebp
  41e093:	xchg   dl,ah
  41e095:	ret    0xa6d6
  41e098:	dec    ebx
  41e099:	push   edx
  41e09a:	push   ebx
  41e09b:	mov    edx,0xf927d8cf
  41e0a0:	leave  
  41e0a1:	lods   al,BYTE PTR ds:[esi]
  41e0a2:	inc    esp
  41e0a3:	test   BYTE PTR [edi-0x73],ah
  41e0a6:	test   eax,0xaeaf646c
  41e0ab:	imul   esi,ebx,0xffffff84
  41e0ae:	push   eax
  41e0af:	cmp    bh,BYTE PTR [esi-0x6c4872ea]
  41e0b5:	aam    0xc8
  41e0b7:	hlt    
  41e0b8:	mov    BYTE PTR ds:0xd847781c,dh
  41e0be:	dec    edx
  41e0bf:	fistp  WORD PTR [edx-0x74]
  41e0c2:	sbb    BYTE PTR [eax-0x5a],bl
  41e0c5:	xor    eax,0x1a255fe5
  41e0ca:	(bad)  
  41e0cb:	sub    eax,0xc3d78b0b
  41e0d0:	pop    es
  41e0d1:	dec    ecx
  41e0d2:	mov    esi,0xd922a9c5
  41e0d7:	pusha  
  41e0d8:	xlat   BYTE PTR ds:[ebx]
  41e0d9:	leave  
  41e0da:	push   edx
  41e0db:	addr16 jg 0x41e07e
  41e0de:	inc    ebp
  41e0df:	in     al,0x2
  41e0e1:	xchg   esi,eax
  41e0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e3:	push   esi
  41e0e4:	das    
  41e0e5:	jno    0x41e087
  41e0e7:	add    BYTE PTR [eax+0x4790bf21],bl
  41e0ed:	cmp    al,0x90
  41e0ef:	xchg   edi,eax
  41e0f0:	sub    eax,0xa8dc1181
  41e0f5:	and    BYTE PTR [ecx+0x40983662],al
  41e0fb:	xlat   BYTE PTR ds:[ebx]
  41e0fc:	outs   dx,BYTE PTR ds:[esi]
  41e0fd:	ret    
  41e0fe:	imul   edi,DWORD PTR [eax-0x19],0x6c
  41e102:	rcr    BYTE PTR [edx+0x1e6a21bd],1
  41e108:	mov    WORD PTR [edx-0x7875423b],cs
  41e10e:	mov    bh,0x36
  41e110:	mov    ebx,eax
  41e112:	adc    ah,0xcd
  41e115:	xchg   ebx,eax
  41e116:	jmp    0x7d75388d
  41e11b:	lods   al,BYTE PTR ds:[esi]
  41e11c:	daa    
  41e11d:	xor    DWORD PTR [edi],ebp
  41e11f:	std    
  41e120:	fnsave [ebx+ecx*4-0x3f31b2cc]
  41e127:	pushf  
  41e128:	fnstenv [edi-0x2dae7270]
  41e12e:	ret    
  41e12f:	push   ecx
  41e130:	mov    ebx,0xd850d1fb
  41e135:	cmp    eax,0xdc669328
  41e13a:	xor    al,0xa8
  41e13c:	add    al,0x7e
  41e13e:	mov    ecx,0x408317d0
  41e143:	call   0xb1cf804a
  41e148:	mov    cl,0x83
  41e14a:	sub    DWORD PTR [ebp+0x47],esp
  41e14d:	adc    ecx,DWORD PTR [ebp+0x3b]
  41e150:	sub    al,0x55
  41e152:	shr    ch,0xf
  41e155:	cmc    
  41e156:	imul   esp,DWORD PTR [ecx],0xab9afbf6
  41e15c:	outs   dx,BYTE PTR ds:[esi]
  41e15d:	pop    ebp
  41e15e:	hlt    
  41e15f:	mov    WORD PTR [eax],?
  41e161:	dec    dx
  41e163:	cmp    bh,BYTE PTR [edi-0xd]
  41e166:	push   0xeaf4ec82
  41e16b:	ja     0x41e1d5
  41e16d:	push   ebp
  41e16e:	cmc    
  41e16f:	jl     0x41e1e2
  41e171:	jno    0x41e19a
  41e173:	addr16 cdq 
  41e175:	mov    edx,0x27665554
  41e17a:	jbe    0x41e1cc
  41e17c:	(bad)  
  41e17d:	cvtdq2ps xmm1,xmm3
  41e180:	pop    edx
  41e181:	call   0xcc96:0xcdf56873
  41e188:	adc    bh,dl
  41e18a:	sub    ecx,edi
  41e18c:	inc    esi
  41e18d:	pop    ds
  41e18e:	fdiv   QWORD PTR [esi]
  41e190:	xor    ebp,DWORD PTR [ebp+esi*2+0x1ec40071]
  41e197:	or     ah,ch
  41e199:	dec    edi
  41e19a:	(bad)  
  41e19b:	fisttp WORD PTR [ebp+edx*2+0x68cce028]
  41e1a2:	pusha  
  41e1a3:	lock inc edx
  41e1a5:	aam    0x92
  41e1a7:	jne    0x41e164
  41e1a9:	cmp    eax,0x2d428430
  41e1ae:	cdq    
  41e1af:	dec    esp
  41e1b0:	xchg   edi,eax
  41e1b1:	and    edi,DWORD PTR [ebx+0x76]
  41e1b4:	aaa    
  41e1b5:	aad    0x4a
  41e1b7:	ja     0x41e1a6
  41e1b9:	adc    DWORD PTR ds:[ecx+0x72688037],eax
  41e1c0:	mov    dh,0xf0
  41e1c2:	pop    ecx
  41e1c3:	sub    eax,0xe1ced9a3
  41e1c8:	xor    eax,DWORD PTR [edx-0x2f6a713e]
  41e1ce:	mov    dl,0x1e
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	mov    dl,0xce
  41e1d3:	mov    bl,0x1c
  41e1d5:	jl     0x41e23f
  41e1d7:	mov    cl,0x4c
  41e1d9:	mov    ah,0x21
  41e1db:	aad    0x46
  41e1dd:	es iret 
  41e1df:	jecxz  0x41e1f5
  41e1e1:	mov    bl,0xa8
  41e1e3:	nop
  41e1e4:	out    dx,eax
  41e1e5:	mov    ah,0xed
  41e1e7:	sbb    esp,esi
  41e1e9:	adc    al,0xc9
  41e1eb:	inc    edi
  41e1ec:	cmp    al,0x16
  41e1ee:	bound  ebx,QWORD PTR [eax-0x76]
  41e1f1:	mov    ah,BYTE PTR [edi+0x5]
  41e1f4:	sbb    dh,ch
  41e1f6:	stos   BYTE PTR es:[edi],al
  41e1f7:	sbb    eax,0x51f700b8
  41e1fc:	push   ebx
  41e1fd:	push   es
  41e1fe:	pop    esi
  41e1ff:	or     al,0xc1
  41e201:	out    dx,al
  41e202:	pop    ebp
  41e203:	in     al,0x8c
  41e205:	sti    
  41e206:	(bad)  
  41e208:	div    BYTE PTR [eax-0x753135d0]
  41e20e:	dec    edx
  41e20f:	mov    ebp,0x13e485a6
  41e214:	jle    0x41e28f
  41e216:	test   DWORD PTR [edi+0x71bd77f6],esi
  41e21c:	jae    0x41e21e
  41e21e:	jbe    0x41e23a
  41e220:	fucomp st(0)
  41e222:	(bad)  
  41e224:	xor    esp,esp
  41e226:	mov    DWORD PTR ds:0x5eb22af3,esp
  41e22c:	push   ss
  41e22d:	add    eax,0xb58ebb12
  41e232:	xchg   BYTE PTR [ebx+0x6f376200],ch
  41e238:	icebp  
  41e239:	jg     0x41e256
  41e23b:	add    BYTE PTR ds:0xf294fe0c,bh
  41e241:	out    dx,eax
  41e242:	xchg   edi,eax
  41e243:	fild   WORD PTR [ebx-0x761acffc]
  41e249:	mov    ds:0xce7736f2,al
  41e24e:	add    eax,DWORD PTR [ecx]
  41e250:	shl    DWORD PTR [ebx-0x3c],1
  41e253:	shl    cl,1
  41e255:	jb     0x41e1f2
  41e257:	lea    edi,[ebx-0x57]
  41e25a:	dec    ebp
  41e25b:	xchg   ecx,eax
  41e25c:	iret   
  41e25d:	cs dec cx
  41e260:	mov    eax,ds:0x571c985d
  41e265:	sbb    al,BYTE PTR [esi-0x5550b70f]
  41e26b:	sbb    BYTE PTR [edi+edi*2+0x50],bh
  41e26f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e270:	push   0xd584359a
  41e275:	ret    
  41e276:	sbb    DWORD PTR ds:0xa900b862,esp
  41e27c:	stos   BYTE PTR es:[edi],al
  41e27d:	mov    bh,0x10
  41e27f:	in     al,dx
  41e280:	cmp    BYTE PTR [eax+0x4a],bl
  41e283:	xchg   dh,bl
  41e285:	scas   eax,DWORD PTR es:[edi]
  41e286:	test   al,0x8a
  41e288:	pop    edx
  41e289:	stc    
  41e28a:	sub    ebx,esi
  41e28c:	push   esi
  41e28d:	sbb    edx,edx
  41e28f:	and    DWORD PTR [edi+esi*2],0xec20c57a
  41e296:	xor    DWORD PTR [ebx+0x27],ebp
  41e299:	call   0xe54004e8
  41e29e:	test   BYTE PTR [ebp+0xf69f4ae],ch
  41e2a4:	cmp    DWORD PTR [eax],esp
  41e2a6:	and    ebx,ebx
  41e2a8:	sub    eax,0x6672be89
  41e2ad:	push   ds
  41e2ae:	lea    edi,[ecx+edx*2-0x231038a]
  41e2b5:	cmp    DWORD PTR [edi+0x6f],esp
  41e2b8:	add    al,0xff
  41e2ba:	and    al,0xde
  41e2bc:	xchg   ebp,eax
  41e2bd:	cmc    
  41e2be:	mov    eax,ds:0x45bd0434
  41e2c3:	cwde   
  41e2c4:	imul   BYTE PTR [eax+eax*8+0x59]
  41e2c8:	jecxz  0x41e267
  41e2ca:	(bad)  
  41e2cb:	das    
  41e2cc:	data16 aam 0xbd
  41e2cf:	(bad)  
  41e2d0:	cmp    al,0xd
  41e2d2:	bound  esi,QWORD PTR [ecx-0x59]
  41e2d5:	xchg   esp,eax
  41e2d6:	jg     0x41e333
  41e2d8:	and    al,BYTE PTR [ecx-0x5]
  41e2db:	mov    ecx,0x63aa3d29
  41e2e0:	push   edi
  41e2e1:	jecxz  0x41e2f7
  41e2e3:	and    eax,0x4f193cfa
  41e2e8:	and    eax,DWORD PTR [eax]
  41e2ea:	faddp  st(5),st
  41e2ec:	loopne 0x41e364
  41e2ee:	ret    0x37c0
  41e2f1:	add    BYTE PTR [eax+0x3f2931a5],dh
  41e2f7:	cmova  esp,DWORD PTR [ecx]
  41e2fa:	imul   edx,DWORD PTR [ecx+0x18],0x58
  41e2fe:	mov    eax,0x2c8489ed
  41e303:	loop   0x41e36d
  41e305:	mov    al,ds:0xd6
  41e30a:	add    BYTE PTR [eax],al
  41e30c:	add    BYTE PTR [eax],al
  41e30e:	add    BYTE PTR [eax],al
  41e310:	add    BYTE PTR [esi-0x9],ch
  41e313:	mov    ebx,0xfe6dbb69
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	cld    
  41e31e:	jnp    0x41e306
  41e320:	add    al,0xa1
  41e322:	pop    esi
  41e323:	add    DWORD PTR [eax],eax
  41e325:	scas   al,BYTE PTR es:[edi]
  41e326:	add    eax,DWORD PTR [eax]
  41e328:	add    BYTE PTR [ebx],ah
  41e32a:	adc    eax,DWORD PTR [ebx]
  41e32c:	dec    eax
  41e32d:	adc    DWORD PTR [edx+0x4f],esp
  41e330:	sub    BYTE PTR [ebx-0x41],al
  41e333:	leave  
  41e334:	jecxz  0x41e322
  41e336:	dec    esi
  41e337:	loopne 0x41e39f
  41e339:	xchg   ecx,eax
  41e33a:	repnz add edi,DWORD PTR [edi-0x7c]
  41e33e:	sbb    BYTE PTR [esi-0x2cd6b2ac],ah
  41e344:	in     eax,dx
  41e345:	pop    es
  41e346:	mov    bh,0xcb
  41e348:	test   BYTE PTR [edi+0x37d04baa],dl
  41e34e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e34f:	mov    eax,ds:0xb1d15a0b
  41e354:	push   eax
  41e355:	retf   0xcb70
  41e358:	jecxz  0x41e3ab
  41e35a:	xor    dh,BYTE PTR [esp+ebp*4-0x53]
  41e35e:	lods   eax,DWORD PTR ds:[esi]
  41e35f:	cmp    cl,BYTE PTR [eax+0x52]
  41e362:	jo     0x41e355
  41e364:	inc    BYTE PTR [ebx+edx*2-0x2576c53]
  41e36b:	pop    ebp
  41e36c:	push   esi
  41e36d:	inc    ebx
  41e36e:	add    eax,0x60b33aaa
  41e373:	or     al,0x1c
  41e375:	scas   al,BYTE PTR es:[edi]
  41e376:	scas   al,BYTE PTR es:[edi]
  41e377:	shl    BYTE PTR [ebx],cl
  41e379:	iret   
  41e37a:	pop    ecx
  41e37b:	ffreep st(2)
  41e37d:	inc    ebp
  41e37e:	shl    DWORD PTR [edi],0xc2
  41e381:	ret    
  41e382:	mov    ebx,0xc2d1675
  41e387:	out    0xc1,eax
  41e389:	inc    eax
  41e38a:	lds    eax,FWORD PTR [edx]
  41e38c:	scas   eax,DWORD PTR es:[edi]
  41e38d:	cmp    edi,edx
  41e38f:	jns    0x41e325
  41e391:	iret   
  41e392:	das    
  41e393:	add    eax,0x3f3a73ea
  41e398:	clc    
  41e399:	mov    al,ds:0xdf361f04
  41e39e:	ds dec eax
  41e3a0:	jg     0x41e409
  41e3a2:	and    eax,0xaed40ff1
  41e3a7:	xchg   DWORD PTR [eax-0x6479e691],edi
  41e3ad:	aas    
  41e3ae:	push   ebp
  41e3af:	jg     0x41e3db
  41e3b1:	cmp    DWORD PTR [ebx+0xe],edx
  41e3b4:	aam    0x4b
  41e3b6:	pop    eax
  41e3b7:	jno    0x41e437
  41e3b9:	xchg   edi,eax
  41e3ba:	iret   
  41e3bb:	test   BYTE PTR [edx-0x7b],0x81
  41e3bf:	push   ss
  41e3c0:	shl    BYTE PTR ds:0xd230b4a2,cl
  41e3c6:	pop    ebp
  41e3c7:	inc    ebx
  41e3c8:	xchg   esp,eax
  41e3c9:	inc    esp
  41e3ca:	jge    0x41e350
  41e3cc:	daa    
  41e3cd:	test   bh,bl
  41e3cf:	(bad)  
  41e3d0:	rcr    DWORD PTR [ecx],0xc1
  41e3d3:	(bad)  
  41e3d4:	adc    esp,DWORD PTR [edx-0x5e]
  41e3d7:	and    BYTE PTR [ebp-0x62281216],al
  41e3dd:	pop    ds
  41e3de:	rcl    DWORD PTR [esi],0x11
  41e3e1:	setp   BYTE PTR [edi-0x24c85cf]
  41e3e8:	fidivr DWORD PTR [esi+0x6e1ed93c]
  41e3ee:	or     eax,edx
  41e3f0:	cwde   
  41e3f1:	cmp    DWORD PTR [ebx-0x1a57a561],0xffffffaf
  41e3f8:	outs   dx,BYTE PTR ds:[esi]
  41e3f9:	inc    ebx
  41e3fa:	cmp    esp,DWORD PTR [eax]
  41e3fc:	push   ds
  41e3fd:	je     0x41e430
  41e3ff:	xor    DWORD PTR [esi+0x1bd96908],esp
  41e405:	int3   
  41e406:	adc    dh,BYTE PTR [edi-0x64]
  41e409:	fdiv   DWORD PTR [ebx+eax*8+0x12]
  41e40d:	mov    DWORD PTR [ebx],esp
  41e40f:	adc    BYTE PTR [edi+0x7a0e983c],0x7e
  41e416:	push   eax
  41e417:	push   ebp
  41e418:	cmp    DWORD PTR [ecx-0x169a2b1a],ebx
  41e41e:	add    dh,BYTE PTR [eax]
  41e420:	pop    es
  41e421:	inc    ecx
  41e422:	hlt    
  41e423:	sbb    eax,0x68bdd60b
  41e428:	mov    esi,cs
  41e42a:	add    DWORD PTR [ebx],edi
  41e42c:	and    DWORD PTR [ebx+ebx*1-0x54],ebx
  41e430:	outs   dx,BYTE PTR ds:[esi]
  41e431:	mov    eax,0xce804747
  41e436:	in     al,0xa5
  41e438:	sbb    BYTE PTR [esi+esi*4],ch
  41e43b:	(bad)  
  41e43d:	ja     0x41e486
  41e43f:	pop    esp
  41e440:	xor    eax,DWORD PTR [eax-0x65]
  41e443:	mov    eax,0x6037b424
  41e448:	(bad)  
  41e449:	jge    0x41e419
  41e44b:	sub    esp,DWORD PTR [eax+eax*4+0x43]
  41e44f:	out    dx,al
  41e450:	rol    BYTE PTR [ecx+0x45f69ab],cl
  41e456:	cli    
  41e457:	cmp    BYTE PTR [ebx-0x30],0xa3
  41e45b:	int    0xed
  41e45d:	push   ss
  41e45e:	inc    BYTE PTR [eax+0x2e]
  41e461:	lea    ebp,[ecx+edx*1+0x5]
  41e465:	pop    ebx
  41e466:	(bad)  
  41e467:	cmp    eax,0xf5c929af
  41e46c:	fcmovnbe st,st(2)
  41e46e:	fcom   DWORD PTR gs:[esp+ebp*4+0x5c]
  41e473:	(bad)  
  41e474:	enter  0xc7cb,0xaa
  41e478:	in     eax,0xc4
  41e47a:	push   ebp
  41e47b:	push   ebp
  41e47c:	int    0x3f
  41e47e:	ja     0x41e4ab
  41e480:	dec    eax
  41e481:	(bad)  
  41e483:	or     eax,0xf63afe98
  41e488:	mov    dl,0xac
  41e48a:	imul   ebx,DWORD PTR [edi+0x3292de99],0xab25cc3
  41e494:	vmwrite ecx,DWORD PTR [edx]
  41e497:	mov    ?,edx
  41e499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e49a:	inc    ecx
  41e49b:	cmp    edi,edx
  41e49d:	call   0xa3fed58c
  41e4a2:	or     al,0x6a
  41e4a4:	repnz add DWORD PTR [eax],esp
  41e4a7:	mov    edx,0xc1758ab3
  41e4ac:	mov    edx,0x582c3efb
  41e4b1:	mov    bh,dl
  41e4b3:	sbb    eax,0x72eb1514
  41e4b8:	repz mov eax,ds:0x44a94d2b
  41e4be:	xchg   esp,eax
  41e4bf:	mov    al,0xf4
  41e4c1:	sub    eax,DWORD PTR [edi-0x5f]
  41e4c4:	ja     0x41e4c2
  41e4c6:	xor    al,BYTE PTR [eax-0x2cd0c42e]
  41e4cc:	adc    DWORD PTR [ecx],0xb364237
  41e4d2:	sbb    esp,DWORD PTR [eax]
  41e4d4:	xor    esi,edx
  41e4d6:	push   ecx
  41e4d7:	mov    ah,0xf7
  41e4d9:	jo     0x41e4ff
  41e4db:	ins    BYTE PTR es:[edi],dx
  41e4dc:	je     0x41e4db
  41e4de:	adc    eax,0x2c2f51dc
  41e4e3:	mov    WORD PTR [ebx-0x4241e81b],cs
  41e4e9:	or     dh,BYTE PTR [edi+eax*4-0x6d53adff]
  41e4f0:	mov    ch,0x1d
  41e4f2:	sbb    esi,DWORD PTR [edx+ebp*4+0x37]
  41e4f6:	and    DWORD PTR [esi+0x2ded76f],esi
  41e4fc:	popa   
  41e4fd:	stos   BYTE PTR es:[edi],al
  41e4fe:	or     bh,BYTE PTR [eax+0x71de9ccf]
  41e504:	cmc    
  41e505:	(bad)  
  41e506:	popa   
  41e507:	ror    DWORD PTR [edi-0x7babb6b4],cl
  41e50d:	and    al,0x6a
  41e50f:	into   
  41e510:	test   al,0x7f
  41e512:	ret    0xef8f
  41e515:	or     ebp,DWORD PTR [esi]
  41e517:	js     0x41e4c5
  41e519:	rcl    DWORD PTR ds:[edx],1
  41e51c:	dec    ecx
  41e51d:	pop    edx
  41e51e:	daa    
  41e51f:	fwait
  41e520:	js     0x41e4bd
  41e522:	jge    0x41e4e7
  41e524:	pusha  
  41e525:	push   cs
  41e526:	add    eax,DWORD PTR [ebp+0x3a7efe41]
  41e52c:	aaa    
  41e52d:	xor    eax,0xe9426ed8
  41e532:	(bad)  
  41e533:	neg    ecx
  41e535:	and    DWORD PTR [esi-0x212f919d],ebp
  41e53b:	push   ss
  41e53c:	pop    edx
  41e53d:	or     eax,0x2302a9e5
  41e542:	pop    edx
  41e543:	inc    eax
  41e544:	sub    ecx,eax
  41e546:	cmp    eax,DWORD PTR [edx-0x62]
  41e549:	jnp    0x41e50d
  41e54b:	dec    eax
  41e54c:	imul   ebx,DWORD PTR [edx],0xffffffc1
  41e54f:	fisubr WORD PTR [ebx-0x76b4f27]
  41e555:	adc    esi,DWORD PTR [ecx+0x1]
  41e558:	mov    ds:0x6079ad0a,eax
  41e55d:	xor    eax,0xf44b5584
  41e562:	pop    eax
  41e563:	rcl    BYTE PTR [eax+0x39],1
  41e566:	(bad)  [esp+esi*4+0x1c42441f]
  41e56d:	sar    BYTE PTR [esi],1
  41e56f:	jp     0x41e515
  41e571:	mov    ah,0x2d
  41e573:	cmc    
  41e574:	and    BYTE PTR [edi-0x56],dl
  41e577:	sub    dh,BYTE PTR ds:0x87e3df1d
  41e57d:	aas    
  41e57e:	dec    esp
  41e57f:	dec    edi
  41e580:	mov    al,0x94
  41e582:	xor    WORD PTR [ebx+0x3ff4d0a0],ax
  41e589:	test   DWORD PTR [edi+0x11d7e90e],esi
  41e58f:	xor    al,0x34
  41e591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e592:	sbb    ebx,DWORD PTR cs:[ebp+0x6d10c86e]
  41e599:	in     eax,0xec
  41e59b:	les    ecx,FWORD PTR [ebp+0xe]
  41e59e:	loop   0x41e5cb
  41e5a0:	mov    cl,ch
  41e5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a3:	fs sbb al,0xe0
  41e5a6:	imul   edi,DWORD PTR [esi+0x1f89f9e7],0x4e
  41e5ad:	mov    al,ds:0xf4580454
  41e5b2:	(bad)  
  41e5b4:	stos   BYTE PTR es:[edi],al
  41e5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5b6:	inc    edi
  41e5b7:	mov    DWORD PTR [ecx+edx*8],eax
  41e5ba:	ror    ah,0xe8
  41e5bd:	or     DWORD PTR [edx-0x72],esp
  41e5c0:	inc    ecx
  41e5c1:	dec    esi
  41e5c2:	ins    DWORD PTR es:[edi],dx
  41e5c3:	pusha  
  41e5c4:	ror    ebx,0x2e
  41e5c7:	sbb    BYTE PTR [ebx-0x8],dh
  41e5ca:	sbb    eax,DWORD PTR [ebx-0x42]
  41e5cd:	shl    eax,1
  41e5cf:	xchg   esp,eax
  41e5d0:	inc    esp
  41e5d1:	adc    al,BYTE PTR [edi-0x73ff9465]
  41e5d7:	mov    eax,ds:0xf1db6d97
  41e5dc:	aas    
  41e5dd:	add    al,0x6e
  41e5df:	sub    al,0xe3
  41e5e1:	int    0xdd
  41e5e3:	sti    
  41e5e4:	out    0x8,al
  41e5e6:	rol    bh,0x48
  41e5e9:	xchg   esi,eax
  41e5ea:	(bad)  
  41e5eb:	(bad)  
  41e5ed:	es jo  0x41e5e5
  41e5f0:	sbb    eax,0x848500eb
  41e5f5:	data16 div BYTE PTR [eax-0x32aaca05]
  41e5fc:	cmc    
  41e5fd:	out    dx,eax
  41e5fe:	in     eax,0x90
  41e600:	mov    ebp,0x6fba1180
  41e605:	cld    
  41e606:	scas   eax,DWORD PTR es:[edi]
  41e607:	ret    
  41e608:	(bad)  
  41e609:	sbb    BYTE PTR [edx],ah
  41e60b:	lods   al,BYTE PTR ds:[esi]
  41e60c:	iret   
  41e60d:	lds    esp,FWORD PTR [edi-0x6e]
  41e610:	pop    ds
  41e611:	mov    fs,WORD PTR [eax+0x702b5bc4]
  41e617:	jmp    0x29746df
  41e61c:	pop    edi
  41e61d:	rcr    cl,cl
  41e61f:	in     al,dx
  41e620:	adc    cl,BYTE PTR [edi]
  41e622:	icebp  
  41e623:	into   
  41e624:	push   ebx
  41e625:	inc    edx
  41e626:	sbb    DWORD PTR [esi],ebp
  41e628:	adc    dh,dh
  41e62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e62b:	pop    ebp
  41e62c:	sbb    DWORD PTR ds:[edx],esi
  41e62f:	mov    eax,DWORD PTR [edi]
  41e631:	adc    eax,0x6555b2e9
  41e636:	inc    ebp
  41e637:	imul   ebp,DWORD PTR [ecx-0x18],0x34
  41e63b:	ficom  WORD PTR [edi]
  41e63d:	idiv   DWORD PTR [edx]
  41e63f:	int3   
  41e640:	out    0xd5,al
  41e642:	rol    BYTE PTR [eax+edi*1+0x11],1
  41e646:	jle    0x41e608
  41e648:	call   0x6a48:0x88025f10
  41e64f:	push   esp
  41e650:	icebp  
  41e651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e652:	stos   BYTE PTR es:[edi],al
  41e653:	adc    ebx,ebp
  41e655:	leave  
  41e656:	dec    ecx
  41e657:	add    DWORD PTR [ebx],eax
  41e659:	sahf   
  41e65a:	jb     0x41e5f4
  41e65c:	xor    eax,0xdd4e1b89
  41e661:	bound  edx,QWORD PTR [ecx+0x30]
  41e664:	inc    eax
  41e665:	lods   al,BYTE PTR ds:[esi]
  41e666:	pop    ss
  41e667:	or     al,0x83
  41e669:	enter  0xc58c,0x81
  41e66d:	inc    ebx
  41e66e:	dec    ebx
  41e66f:	jns    0x41e64d
  41e671:	xor    BYTE PTR [eax-0x4b],al
  41e674:	add    ecx,eax
  41e676:	test   BYTE PTR [ebx-0x5d],bh
  41e679:	push   ebx
  41e67a:	rcl    DWORD PTR [ebx+0x24f0fd50],1
  41e680:	out    0xe,al
  41e682:	xchg   DWORD PTR [edx-0x1abc8545],edi
  41e688:	and    ebx,esp
  41e68a:	dec    esp
  41e68b:	jg     0x41e6e8
  41e68d:	sbb    BYTE PTR [edi-0x5d],ch
  41e690:	adc    edx,DWORD PTR [eax]
  41e692:	cmc    
  41e693:	call   0x791a7f71
  41e698:	repz jmp 0x35c94648
  41e69e:	sti    
  41e69f:	xchg   ax,ax
  41e6a1:	add    DWORD PTR [ebp+0x0],0xd6dc919b
  41e6a8:	lods   al,BYTE PTR ds:[esi]
  41e6a9:	jo     0x41e729
  41e6ab:	jp     0x41e6db
  41e6ad:	(bad)  
  41e6ae:	cwde   
  41e6af:	jo     0x41e67e
  41e6b1:	clc    
  41e6b2:	inc    edx
  41e6b3:	mov    esi,ebx
  41e6b5:	xor    ebp,DWORD PTR [ebp+0x4698327e]
  41e6bb:	or     cl,cl
  41e6bd:	dec    ecx
  41e6be:	nop
  41e6bf:	ds je  0x41e68c
  41e6c2:	dec    BYTE PTR ss:[edi]
  41e6c5:	pop    esi
  41e6c6:	inc    edx
  41e6c7:	inc    esi
  41e6c8:	mov    esi,0xf4664117
  41e6cd:	inc    ebx
  41e6ce:	mov    BYTE PTR [esi],al
  41e6d0:	add    eax,0xb5ffdd56
  41e6d5:	pop    edi
  41e6d6:	pop    edi
	...
  41e6df:	add    BYTE PTR [eax],al
  41e6e1:	sub    eax,0xfffb5fc4
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0xa947d65d
  41e6f0:	addr16 dec edi
  41e6f2:	bound  eax,QWORD PTR [ecx]
  41e6f4:	add    BYTE PTR [esi+0x3e000003],ch
  41e6fa:	(bad)  
  41e6fb:	cmp    ebx,ebp
  41e6fd:	push   ebp
  41e6fe:	pop    edx
  41e6ff:	mov    esi,0x56472371
  41e704:	daa    
  41e705:	xor    eax,0x1df76c52
  41e70a:	sahf   
  41e70b:	dec    esi
  41e70c:	adc    esp,DWORD PTR [eax-0xb27f1e1]
  41e712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e713:	xchg   DWORD PTR [ebp-0xf],edx
  41e716:	cmp    BYTE PTR [edi+0x4d],bl
  41e719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e71a:	ins    BYTE PTR es:[edi],dx
  41e71b:	xchg   ecx,eax
  41e71c:	xchg   ebp,eax
  41e71d:	fcomp  st(6)
  41e71f:	inc    esi
  41e720:	jmp    0xd836fc99
  41e725:	mov    bh,0x49
  41e727:	gs (bad) 
  41e729:	cmp    ecx,esp
  41e72b:	outs   dx,BYTE PTR fs:[esi]
  41e72d:	adc    BYTE PTR [ebx+0x6d],bh
  41e730:	(bad)  
  41e731:	outs   dx,BYTE PTR ds:[esi]
  41e732:	push   ebp
  41e733:	or     al,0x4b
  41e735:	mov    ch,0x46
  41e737:	fiadd  WORD PTR [esi+0x4b]
  41e73a:	les    ebp,FWORD PTR [ecx]
  41e73c:	and    ah,0x40
  41e73f:	icebp  
  41e740:	lds    edi,FWORD PTR [ebx+0x17]
  41e743:	mov    al,ds:0xe3bf3385
  41e748:	test   al,0x44
  41e74a:	push   ebx
  41e74b:	pop    edi
  41e74c:	ficom  WORD PTR [eax-0x4]
  41e74f:	sbb    edi,ebx
  41e751:	sub    ch,cl
  41e753:	sub    DWORD PTR [ebx-0x43fd80a9],ebx
  41e759:	gs inc edx
  41e75b:	stos   BYTE PTR es:[edi],al
  41e75c:	add    BYTE PTR [ecx+0x45f7428b],al
  41e762:	mov    DWORD PTR [esi-0x10],esi
  41e765:	xor    al,0xf4
  41e767:	cmp    BYTE PTR [esi-0x65ade466],ah
  41e76d:	mov    ebp,0x8105151c
  41e772:	pop    ecx
  41e773:	test   DWORD PTR [ebp-0x6b17c42f],esi
  41e779:	adc    eax,DWORD PTR [ebx-0x66]
  41e77c:	cmp    DWORD PTR ds:0xf86195a,edi
  41e782:	push   ebp
  41e783:	je     0x41e7a1
  41e785:	mov    edx,ebp
  41e787:	jg     0x41e728
  41e789:	mov    cl,0x45
  41e78b:	jnp    0x41e7b7
  41e78d:	or     bl,BYTE PTR [edi-0x62]
  41e790:	shl    BYTE PTR [ebx+0x3a425f37],cl
  41e796:	fdivp  st(0),st
  41e798:	xor    eax,0xa4d487c7
  41e79d:	ja     0x41e7fa
  41e79f:	mov    cs,ecx
  41e7a1:	call   DWORD PTR [eax+esi*2]
  41e7a4:	pop    ds
  41e7a5:	xchg   DWORD PTR [ebx-0x53ae5356],ebp
  41e7ab:	xchg   BYTE PTR [ecx+0x573af341],al
  41e7b1:	adc    al,0x6d
  41e7b3:	adc    BYTE PTR [esi-0x805933b],0xfb
  41e7ba:	jnp    0x41e7a7
  41e7bc:	mov    ecx,0x3c6dee75
  41e7c1:	inc    edi
  41e7c2:	leave  
  41e7c3:	pop    edi
  41e7c4:	rcr    DWORD PTR [ecx+0x76],1
  41e7c7:	jno    0x41e784
  41e7c9:	mov    ds:0x154bf044,eax
  41e7ce:	lods   eax,DWORD PTR ds:[esi]
  41e7cf:	cld    
  41e7d0:	jecxz  0x41e75d
  41e7d2:	mov    edi,0x2dc1d98b
  41e7d7:	mov    eax,ds:0xb9adc3fd
  41e7dc:	and    DWORD PTR [eax+0x59acd1c5],esi
  41e7e2:	sub    BYTE PTR [edi],0x9d
  41e7e5:	push   esi
  41e7e7:	gs push 0xe8fc5602
  41e7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ee:	push   0xffffffc6
  41e7f0:	scas   eax,DWORD PTR es:[edi]
  41e7f1:	xchg   edi,eax
  41e7f2:	or     ebx,DWORD PTR [ecx-0x2e]
  41e7f5:	dec    esi
  41e7f6:	out    0xab,al
  41e7f8:	fldenv [esi]
  41e7fa:	fwait
  41e7fb:	ds cmc 
  41e7fd:	imul   ebp,edx,0x56096780
  41e803:	int    0xdf
  41e805:	int    0x58
  41e807:	out    0xa,al
  41e809:	lock leave 
  41e80b:	sub    ch,BYTE PTR [ecx-0x71]
  41e80e:	daa    
  41e80f:	lods   al,BYTE PTR ds:[esi]
  41e810:	pop    esi
  41e811:	test   eax,0x995a38cd
  41e816:	aam    0xa1
  41e818:	and    eax,DWORD PTR [eax+0x18]
  41e81b:	sub    eax,0xba003ab
  41e820:	xor    eax,ebx
  41e822:	stc    
  41e823:	jo     0x41e843
  41e825:	inc    esi
  41e826:	in     eax,0x6a
  41e828:	fidivr DWORD PTR [edx-0x5]
  41e82b:	retf   0x7d59
  41e82e:	dec    BYTE PTR [edi+ecx*2+0xa]
  41e832:	sbb    ah,BYTE PTR [eax-0x7f450e2d]
  41e838:	imul   DWORD PTR [edi]
  41e83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e83b:	enter  0xbee0,0xdc
  41e83f:	aad    0xba
  41e841:	add    BYTE PTR [edx+ecx*8],al
  41e844:	and    BYTE PTR [edx],0x7c
  41e847:	adc    edi,DWORD PTR [edi]
  41e849:	(bad)  
  41e84a:	out    dx,al
  41e84b:	sar    ecx,cl
  41e84d:	mov    al,ds:0x8696a686
  41e852:	cmp    ecx,DWORD PTR [edx+0x1f]
  41e855:	push   0x9980f356
  41e85a:	add    bl,BYTE PTR ds:0xb0b4fd3b
  41e860:	jle    0x41e8c9
  41e862:	jmp    0xcf44:0x414a3760
  41e869:	jo     0x41e8cc
  41e86b:	jne    0x41e8a8
  41e86d:	jmp    0x2bc12b2f
  41e872:	rcl    BYTE PTR [eax-0x6c45f586],1
  41e878:	xchg   DWORD PTR [edx+0x17],ecx
  41e87b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e87c:	mov    ds:0xf4e9b7e1,al
  41e881:	jmp    DWORD PTR [ecx+0x3a]
  41e884:	and    BYTE PTR [ebx-0x12],al
  41e887:	loop   0x41e8e0
  41e889:	cs dec eax
  41e88b:	call   0x87a1a7f5
  41e890:	cmc    
  41e891:	adc    BYTE PTR [ebx-0x1],dl
  41e894:	arpl   WORD PTR [ebx],bx
  41e896:	add    eax,0x351ee3b1
  41e89b:	jae    0x41e82d
  41e89d:	mov    bh,0xec
  41e89f:	mov    esp,0xeb533165
  41e8a4:	sahf   
  41e8a5:	sub    esi,ecx
  41e8a7:	push   0xbc1b7176
  41e8ac:	add    edx,DWORD PTR ds:0xde3a3d7b
  41e8b2:	mov    eax,0x12f698a2
  41e8b7:	ja     0x41e8af
  41e8b9:	push   edx
  41e8ba:	dec    edi
  41e8bb:	les    esi,FWORD PTR [esi-0x54]
  41e8be:	lahf   
  41e8bf:	cdq    
  41e8c0:	jmp    0x41e8f5
  41e8c2:	xchg   ebp,eax
  41e8c3:	adc    eax,0xc2929c07
  41e8c8:	sub    eax,0xffffff97
  41e8cb:	stc    
  41e8cc:	mov    ?,eax
  41e8ce:	jl     0x41e931
  41e8d0:	mov    esi,esp
  41e8d2:	loop   0x41e894
  41e8d4:	or     eax,0x18da9268
  41e8d9:	jb     0x41e8ed
  41e8db:	mov    gs,esi
  41e8dd:	mov    ds,esp
  41e8df:	in     al,0xf8
  41e8e1:	xchg   esp,eax
  41e8e2:	sub    al,0x52
  41e8e4:	ins    BYTE PTR es:[edi],dx
  41e8e5:	and    bh,0xe2
  41e8e8:	pusha  
  41e8e9:	and    al,0x75
  41e8eb:	or     DWORD PTR [edx+0x5a],ecx
  41e8ee:	das    
  41e8ef:	imul   BYTE PTR [esp+ebp*8]
  41e8f2:	fmul   st,st(7)
  41e8f4:	leave  
  41e8f5:	stc    
  41e8f6:	leave  
  41e8f7:	mov    ch,0x3b
  41e8f9:	ja     0x41e8fe
  41e8fb:	mov    dl,0x66
  41e8fd:	push   0xffffffaa
  41e8ff:	into   
  41e900:	aad    0xb
  41e902:	add    DWORD PTR [esi+0x50e1d03b],ecx
  41e908:	adc    esp,ecx
  41e90a:	and    DWORD PTR [esi+eiz*8+0x77],esp
  41e90e:	push   ebp
  41e90f:	repnz push edx
  41e911:	mov    bh,0x77
  41e913:	or     DWORD PTR [edx-0x44],ecx
  41e916:	pop    esi
  41e917:	arpl   WORD PTR [esi+0x5a12d385],bp
  41e91d:	ds cwde 
  41e91f:	mov    ah,0x1e
  41e921:	dec    ebx
  41e922:	dec    edx
  41e923:	(bad)  
  41e924:	fwait
  41e925:	ins    BYTE PTR es:[edi],dx
  41e926:	enter  0x7f52,0xbc
  41e92a:	xor    dh,dh
  41e92c:	xor    dh,BYTE PTR [esi]
  41e92e:	lds    esp,FWORD PTR [ebx+ebx*4-0x272f8144]
  41e935:	in     eax,0x82
  41e937:	imul   edi,DWORD PTR [ebp-0x1d9b73a7],0x26573561
  41e941:	or     edx,edi
  41e943:	mov    esi,0xc8afd085
  41e948:	ror    BYTE PTR [ecx+0x19],1
  41e94b:	lock sbb esp,DWORD PTR [ebx+0x1b]
  41e94f:	sbb    al,0x1c
  41e951:	clc    
  41e952:	mov    DWORD PTR [ebp-0x17e2c71a],eax
  41e958:	int3   
  41e959:	mov    esi,DWORD PTR [edi+0x63]
  41e95c:	ss test al,0xed
  41e95f:	fucomp st(2)
  41e961:	add    eax,0x586f81ed
  41e966:	aas    
  41e967:	out    0x31,eax
  41e969:	loopne 0x41e918
  41e96b:	clc    
  41e96c:	or     esi,DWORD PTR [esi-0x66]
  41e96f:	in     al,dx
  41e970:	mov    ds:0xe080b211,al
  41e975:	sub    BYTE PTR [ebp+0x40],ch
  41e978:	sbb    al,0x8e
  41e97a:	dec    edi
  41e97b:	jmp    0xea5c811b
  41e980:	mov    al,ds:0x436716f1
  41e985:	add    edx,0x41
  41e988:	or     DWORD PTR [ebx],esi
  41e98a:	pop    eax
  41e98b:	push   es
  41e98c:	lahf   
  41e98d:	xlat   BYTE PTR ds:[ebx]
  41e98e:	mov    ds:0x6f6fd9c,al
  41e993:	(bad)  
  41e995:	ficom  DWORD PTR [ecx+0x0]
  41e998:	jmp    0x41e9df
  41e99a:	or     eax,0x6e33d9fb
  41e99f:	xchg   ecx,eax
  41e9a0:	xlat   BYTE PTR ds:[ebx]
  41e9a1:	adc    DWORD PTR [edi-0x5fb2ee2c],eax
  41e9a7:	ja     0x41e9c6
  41e9a9:	ret    0x3e3c
  41e9ac:	xor    DWORD PTR [ecx],ecx
  41e9ae:	int3   
  41e9af:	mov    esi,0xd8388a44
  41e9b4:	imul   ebp,DWORD PTR [ebx-0x27],0x2e12ced4
  41e9bb:	or     esp,DWORD PTR [ebx]
  41e9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9be:	pop    ebx
  41e9bf:	sub    ebp,DWORD PTR [esi-0x33113fb]
  41e9c5:	push   edi
  41e9c6:	iret   
  41e9c7:	jb     0x41ea44
  41e9c9:	mov    ds:0x4810e93a,eax
  41e9ce:	pop    esp
  41e9cf:	dec    edx
  41e9d0:	inc    esi
  41e9d1:	inc    ebp
  41e9d2:	outs   dx,BYTE PTR ds:[esi]
  41e9d3:	jbe    0x41ea4f
  41e9d5:	ins    DWORD PTR es:[edi],dx
  41e9d6:	rcr    DWORD PTR [edx-0x3e],1
  41e9d9:	idiv   BYTE PTR [edx]
  41e9db:	sar    DWORD PTR [ebp-0x37eb8ea3],cl
  41e9e1:	ror    BYTE PTR [edx+0x40],1
  41e9e4:	mov    ecx,0x85c01392
  41e9e9:	sbb    al,0x1b
  41e9eb:	jmp    0x3bf7f831
  41e9f0:	jle    0x41e9f3
  41e9f2:	addr16 mov al,ds:0xb843
  41e9f6:	addr16 test al,0x2f
  41e9f9:	mov    DWORD PTR [eax],edi
  41e9fb:	push   ebx
  41e9fc:	or     eax,0xf04feed8
  41ea01:	cmp    eax,eax
  41ea03:	data16 or al,0xe
  41ea06:	pusha  
  41ea07:	das    
  41ea08:	shr    DWORD PTR [ebp-0x45],1
  41ea0b:	leave  
  41ea0c:	mov    bl,0x8d
  41ea0e:	mov    ah,BYTE PTR [edi-0x43c1f034]
  41ea14:	cmp    al,0x93
  41ea16:	cmc    
  41ea17:	sbb    cl,ah
  41ea19:	mov    ecx,0x2a20fe8e
  41ea1e:	cmp    al,0xfa
  41ea20:	dec    eax
  41ea21:	jmp    0x4665:0x3ac79024
  41ea28:	fistp  QWORD PTR [edx-0x1a]
  41ea2b:	ja     0x41ea5c
  41ea2d:	mov    ds:0x4aadd1e2,al
  41ea32:	mov    esp,0xbc0fff92
  41ea37:	mov    esi,0x9b6083d7
  41ea3c:	and    BYTE PTR [ebx+0x4e],ah
  41ea3f:	xchg   BYTE PTR [eax-0x7b864d6b],dh
  41ea45:	jle    0x41eab6
  41ea47:	jmp    0xbc72:0x77b22060
  41ea4e:	mov    bl,0xf3
  41ea50:	clc    
  41ea51:	adc    eax,0xa3119c4f
  41ea56:	lds    esi,FWORD PTR [eax+ebx*1]
  41ea59:	mov    ah,0x9d
  41ea5b:	retf   
  41ea5c:	xor    DWORD PTR [ecx],ecx
  41ea5e:	or     BYTE PTR [eax],cl
  41ea60:	sar    ecx,cl
  41ea62:	sar    DWORD PTR [esi+edi*4+0x48],1
  41ea66:	xlat   BYTE PTR ds:[ebx]
  41ea67:	xchg   DWORD PTR [ecx+0x4b],ebx
  41ea6a:	push   esi
  41ea6b:	mov    bh,0x7
  41ea6d:	inc    edi
  41ea6e:	scas   eax,DWORD PTR es:[edi]
  41ea6f:	cmp    esp,ebx
  41ea71:	mov    ds:0x5e410813,eax
  41ea76:	out    0x4,eax
  41ea78:	stc    
  41ea79:	idiv   DWORD PTR [esi-0x75]
  41ea7c:	into   
  41ea7d:	add    ch,al
  41ea7f:	out    0x3a,al
  41ea81:	sbb    BYTE PTR [eax+ebp*4-0x2a9e208f],cl
  41ea88:	push   edi
  41ea89:	jns    0x41eab9
  41ea8b:	dec    ecx
  41ea8c:	sbb    DWORD PTR [ecx-0x4d032d1e],edx
  41ea92:	inc    ebp
  41ea93:	dec    edi
  41ea94:	(bad)  
  41ea95:	and    BYTE PTR ds:0x30c5210,bh
  41ea9b:	sub    edi,eax
  41ea9d:	sub    ecx,DWORD PTR [ecx+0xb5edb53]
  41eaa3:	pop    ecx
  41eaa4:	pusha  
  41eaa5:	and    eax,esp
	...
  41eaaf:	add    BYTE PTR [eax],al
  41eab1:	jle    0x41ea75
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0x4a
  41eabe:	xchg   edx,eax
  41eabf:	xlat   BYTE PTR ds:[ebx]
  41eac0:	inc    esp
  41eac1:	std    
  41eac2:	add    DWORD PTR gs:[eax],eax
  41eac5:	scas   al,BYTE PTR es:[edi]
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    BYTE PTR [esi+ebp*1+0x3c],bh
  41eacc:	sar    DWORD PTR [ebx+0x33],cl
  41eacf:	cs jge 0x41eaf9
  41ead2:	push   0xffffffa3
  41ead4:	(bad)  
  41ead5:	adc    DWORD PTR [esp+esi*1-0x3a85e7e1],ecx
  41eadc:	call   0x2ea1:0x1e5266fb
  41eae3:	call   0xe614:0x9f6c15c1
  41eaea:	ins    BYTE PTR es:[edi],dx
  41eaeb:	adc    al,0x4
  41eaed:	out    dx,eax
  41eaee:	call   0xaf17:0x85a021af
  41eaf5:	or     eax,0xeb43caad
  41eafa:	mov    esi,0x56124551
  41eaff:	mov    ds:0xcd430958,eax
  41eb04:	arpl   WORD PTR [edi],cx
  41eb06:	not    ebx
  41eb08:	adc    DWORD PTR [ebx],esp
  41eb0a:	and    ch,BYTE PTR [ebx-0x497bdaa3]
  41eb10:	or     BYTE PTR [ecx+0x2c],ch
  41eb13:	jge    0x41ead8
  41eb15:	mov    ebx,DWORD PTR [edx]
  41eb17:	out    0xa7,al
  41eb19:	mov    ds:0x7b048b48,eax
  41eb1e:	cmp    BYTE PTR [edi-0x3635b3d6],bl
  41eb24:	pusha  
  41eb25:	adc    ecx,DWORD PTR [ecx+edx*2]
  41eb28:	and    BYTE PTR [eax+ebp*1-0x21],dh
  41eb2c:	sub    eax,DWORD PTR [ebp+edx*4+0x27e3d153]
  41eb33:	lds    ebp,FWORD PTR [edx+0x12]
  41eb36:	dec    esp
  41eb37:	sub    BYTE PTR [edx],ah
  41eb39:	hlt    
  41eb3a:	pop    ss
  41eb3b:	sbb    BYTE PTR [ebx+0x6825bb57],ch
  41eb41:	pop    ss
  41eb42:	out    dx,al
  41eb43:	push   eax
  41eb44:	dec    ebp
  41eb45:	and    al,0x6
  41eb47:	scas   eax,DWORD PTR es:[edi]
  41eb48:	push   edx
  41eb49:	and    DWORD PTR [esp+esi*2+0x24],eax
  41eb4d:	and    edi,DWORD PTR [esi+0x2e956bf3]
  41eb53:	xchg   ecx,eax
  41eb54:	bnd js 0x41eaf2
  41eb57:	jnp    0x41eb15
  41eb59:	mov    eax,0xdf292392
  41eb5e:	mov    eax,ds:0xc10c8497
  41eb63:	arpl   WORD PTR [ebx],ax
  41eb65:	dec    edi
  41eb66:	cdq    
  41eb67:	cmp    eax,0xdb02bcc3
  41eb6c:	data16 cmc 
  41eb6e:	jne    0x41eb4f
  41eb70:	inc    ebp
  41eb71:	mov    BYTE PTR [edx],ah
  41eb73:	pop    ss
  41eb74:	cmp    al,0x66
  41eb76:	mov    ds:0x4653e604,eax
  41eb7b:	out    0x81,eax
  41eb7d:	dec    eax
  41eb7e:	sub    BYTE PTR [ebx-0x7b],bl
  41eb81:	inc    ah
  41eb83:	push   edx
  41eb84:	arpl   WORD PTR [edi-0x28],cx
  41eb87:	cs pop eax
  41eb89:	scas   eax,DWORD PTR es:[edi]
  41eb8a:	jmp    0x6227:0x9ce2bd66
  41eb91:	push   edx
  41eb92:	(bad)  
  41eb93:	xor    eax,0xba197272
  41eb98:	in     al,0x85
  41eb9a:	sub    eax,0xc331b3e5
  41eb9f:	push   eax
  41eba0:	inc    ecx
  41eba1:	xor    al,0xdb
  41eba3:	jbe    0x41ec22
  41eba5:	fdiv   st(3),st
  41eba7:	stos   BYTE PTR es:[edi],al
  41eba8:	sub    al,0xb9
  41ebaa:	inc    esp
  41ebab:	pop    eax
  41ebac:	xchg   ecx,eax
  41ebad:	jle    0x41eb40
  41ebaf:	lods   eax,DWORD PTR ds:[esi]
  41ebb0:	lods   eax,DWORD PTR ds:[esi]
  41ebb1:	imul   ecx
  41ebb3:	jnp    0x41eb38
  41ebb5:	jne    0x41eb91
  41ebb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebb8:	fstp   DWORD PTR [ecx]
  41ebba:	inc    ebx
  41ebbb:	mov    ds:0xe5e0671e,eax
  41ebc0:	fisubr DWORD PTR [edx]
  41ebc2:	out    0xfc,al
  41ebc4:	mov    esi,0x5b15863b
  41ebc9:	jbe    0x41eb6c
  41ebcb:	ret    0x77f3
  41ebce:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41ebd0:	add    bh,bh
  41ebd2:	xchg   ebx,eax
  41ebd3:	push   ebp
  41ebd4:	loopne 0x41ebae
  41ebd6:	test   BYTE PTR [edi],0x4e
  41ebd9:	cli    
  41ebda:	std    
  41ebdb:	mov    edx,0x476b6616
  41ebe0:	int    0x65
  41ebe2:	xor    DWORD PTR [ebx-0x63],edi
  41ebe5:	add    BYTE PTR [ebx+esi*2-0x72976fc],bl
  41ebec:	jecxz  0x41ebc6
  41ebee:	test   eax,0x385d6a04
  41ebf3:	add    edi,DWORD PTR [ebx-0x6e]
  41ebf6:	jnp    0x41ebc1
  41ebf8:	jne    0x41ec3c
  41ebfa:	cs adc al,0xe8
  41ebfd:	stos   DWORD PTR es:[edi],eax
  41ebfe:	ins    BYTE PTR es:[edi],dx
  41ebff:	and    BYTE PTR [edi],ch
  41ec01:	jmp    FWORD PTR [ebx-0x3c]
  41ec04:	loop   0x41eb8e
  41ec06:	xchg   ebx,eax
  41ec07:	adc    al,0x54
  41ec09:	scas   al,BYTE PTR es:[edi]
  41ec0a:	pop    es
  41ec0b:	aas    
  41ec0c:	push   eax
  41ec0d:	xchg   esp,eax
  41ec0e:	dec    eax
  41ec0f:	inc    ebx
  41ec10:	clc    
  41ec11:	or     ebp,DWORD PTR [eax-0x64]
  41ec14:	add    ebp,edi
  41ec16:	fstp   QWORD PTR ds:0xb3978fca
  41ec1c:	sbb    al,0x2e
  41ec1e:	lds    edx,FWORD PTR [eax-0x34]
  41ec21:	test   al,0x39
  41ec23:	pop    edx
  41ec24:	dec    esp
  41ec25:	mov    dh,0x2e
  41ec27:	test   DWORD PTR [ecx],esi
  41ec29:	xor    BYTE PTR [ebp+0x1ef3f57],cl
  41ec2f:	int    0x98
  41ec31:	sub    edx,ebp
  41ec33:	mov    BYTE PTR [ebx-0x3f],ah
  41ec36:	ret    
  41ec37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec38:	in     eax,0x33
  41ec3a:	scas   al,BYTE PTR es:[edi]
  41ec3b:	cdq    
  41ec3c:	sub    edi,DWORD PTR cs:[ebp+0x4f]
  41ec40:	inc    esi
  41ec41:	ss jne 0x41ec5b
  41ec44:	cmp    ebx,DWORD PTR [esi-0xb]
  41ec47:	mov    edx,0x2105daef
  41ec4c:	in     al,0x4a
  41ec4e:	and    al,0xff
  41ec50:	pop    esi
  41ec51:	popa   
  41ec52:	arpl   WORD PTR [esi-0x21],bp
  41ec55:	stos   BYTE PTR es:[edi],al
  41ec56:	pop    eax
  41ec57:	or     ah,BYTE PTR [esi]
  41ec59:	pop    ecx
  41ec5a:	pop    eax
  41ec5b:	outs   dx,BYTE PTR ds:[esi]
  41ec5c:	jbe    0x41ec1d
  41ec5e:	cld    
  41ec5f:	lea    edi,[eax+eax*2-0x64]
  41ec63:	pop    edi
  41ec64:	mov    bh,0x3e
  41ec66:	xor    al,0x28
  41ec68:	inc    edx
  41ec69:	popa   
  41ec6a:	in     eax,0x25
  41ec6c:	sbb    esi,esi
  41ec6e:	fdivr  DWORD PTR [ebp-0x91eca7b]
  41ec74:	add    esi,esi
  41ec76:	mov    esi,0x5ebf627
  41ec7b:	rol    BYTE PTR [esi+0x146d3be3],0x85
  41ec82:	push   ds
  41ec83:	push   ss
  41ec84:	fldcw  WORD PTR [edi-0x524a6ecc]
  41ec8a:	mov    al,ds:0x99f3bc6d
  41ec8f:	imul   ebp,DWORD PTR [edx-0x32],0xffffff96
  41ec93:	pop    ds
  41ec94:	cld    
  41ec95:	jb     0x41ecf1
  41ec97:	test   al,0x85
  41ec99:	clc    
  41ec9a:	call   0x918c1a75
  41ec9f:	mov    fs,WORD PTR [edx-0x67]
  41eca2:	mov    al,ds:0x637e36a8
  41eca7:	fisttp DWORD PTR [ebx*8-0x6c5dddd]
  41ecae:	cmp    DWORD PTR [eax-0x50],esi
  41ecb1:	lods   eax,DWORD PTR ds:[esi]
  41ecb2:	pop    ebp
  41ecb3:	mov    eax,0x5c611d79
  41ecb8:	xchg   edi,eax
  41ecb9:	scas   eax,DWORD PTR es:[di]
  41ecbb:	pop    ss
  41ecbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecbd:	sub    eax,0xa9f696a0
  41ecc2:	das    
  41ecc3:	inc    edx
  41ecc4:	jb     0x41ec84
  41ecc6:	daa    
  41ecc7:	js     0x41ed3d
  41ecc9:	sbb    BYTE PTR [edx+0x12],bh
  41eccc:	fwait
  41eccd:	jge    0x41ece1
  41eccf:	push   esp
  41ecd0:	aad    0x69
  41ecd2:	stos   BYTE PTR es:[edi],al
  41ecd3:	dec    ebp
  41ecd4:	fs jmp 0x64537cff
  41ecda:	into   
  41ecdb:	stos   BYTE PTR es:[edi],al
  41ecdc:	aad    0x3a
  41ecde:	add    ebx,DWORD PTR [edx+0x30]
  41ece1:	cmp    BYTE PTR cs:[edi-0x1487dfb],bh
  41ece8:	nop
  41ece9:	pop    ebx
  41ecea:	cmp    eax,0x64baa83d
  41ecef:	outs   dx,BYTE PTR ds:[esi]
  41ecf0:	icebp  
  41ecf1:	jecxz  0x41ec96
  41ecf3:	aas    
  41ecf4:	and    eax,0x22b052c4
  41ecf9:	push   0xe3c30de5
  41ecfe:	loopne 0x41ed44
  41ed00:	dec    ecx
  41ed01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed02:	sbb    eax,0x984df5ed
  41ed07:	popa   
  41ed08:	inc    ebp
  41ed09:	mov    al,0x62
  41ed0b:	jnp    0x41ed3c
  41ed0d:	sub    edi,DWORD PTR [edi-0x26]
  41ed10:	jl     0x41ed3d
  41ed12:	lahf   
  41ed13:	push   ecx
  41ed14:	xchg   esp,eax
  41ed15:	or     al,0x6b
  41ed17:	add    esi,ecx
  41ed19:	xchg   ebx,eax
  41ed1a:	dec    esp
  41ed1b:	icebp  
  41ed1c:	fs jle 0x41ed5d
  41ed1f:	leave  
  41ed20:	mov    esi,0xddf1c529
  41ed25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed26:	lods   al,BYTE PTR ds:[esi]
  41ed27:	xchg   esp,eax
  41ed28:	or     edx,esi
  41ed2a:	pop    ebx
  41ed2b:	xor    al,0x94
  41ed2d:	(bad)  
  41ed2f:	iret   
  41ed30:	lea    esi,[esi]
  41ed32:	push   cs
  41ed33:	xor    bh,bl
  41ed35:	mov    ebp,0x3e29ac12
  41ed3a:	rol    ebx,cl
  41ed3c:	mov    esi,DWORD PTR [eax+edx*1+0x65]
  41ed40:	add    eax,0xff84a148
  41ed45:	xor    dl,BYTE PTR [ecx+eax*2-0x9d2f9fb]
  41ed4c:	loope  0x41ed92
  41ed4e:	test   bh,bl
  41ed50:	stc    
  41ed51:	mov    ebx,0xbd317520
  41ed56:	leave  
  41ed57:	xchg   BYTE PTR [ebp-0x4c5e7ad6],bh
  41ed5d:	push   0x6f0a53ba
  41ed62:	inc    ebp
  41ed63:	mov    al,0x49
  41ed65:	mov    bl,BYTE PTR [esi]
  41ed67:	push   ebx
  41ed68:	cmp    al,0x77
  41ed6a:	and    eax,0x5b6b4a3e
  41ed6f:	int3   
  41ed70:	leave  
  41ed71:	arpl   WORD PTR [edi],bx
  41ed73:	pusha  
  41ed74:	mov    cl,0xd9
  41ed76:	xor    al,0x6c
  41ed78:	push   0x7f334407
  41ed7d:	int    0x60
  41ed7f:	add    DWORD PTR [eax+0x67],ebx
  41ed82:	push   ds
  41ed83:	das    
  41ed84:	add    ah,BYTE PTR [ecx+0x55]
  41ed87:	or     al,0x3f
  41ed89:	shl    DWORD PTR [ebp+0x55],0x43
  41ed8d:	push   es
  41ed8e:	ins    BYTE PTR es:[edi],dx
  41ed8f:	shl    BYTE PTR ds:0x7cbcc7f0,1
  41ed95:	jae    0x41ed58
  41ed97:	xor    eax,0xb4037aad
  41ed9c:	call   0x994168bc
  41eda1:	sub    ch,bh
  41eda3:	sar    DWORD PTR [eax],1
  41eda5:	adc    DWORD PTR [esi-0x15],ebx
  41eda8:	out    0x9,eax
  41edaa:	cld    
  41edab:	dec    ebp
  41edac:	pop    esi
  41edad:	push   esp
  41edae:	mov    esp,0x7819c573
  41edb3:	jle    0x41ed97
  41edb5:	add    al,0xe3
  41edb7:	or     al,bh
  41edb9:	pusha  
  41edba:	inc    ecx
  41edbb:	push   edx
  41edbc:	ins    BYTE PTR es:[edi],dx
  41edbd:	and    ebx,DWORD PTR [eax-0x7d115ee9]
  41edc3:	lahf   
  41edc4:	pop    eax
  41edc6:	pop    esi
  41edc7:	fdiv   QWORD PTR [edi+0x5aadb7cc]
  41edcd:	add    dl,BYTE PTR [ecx-0x2b5f2758]
  41edd3:	jno    0x41ee15
  41edd5:	sbb    eax,DWORD PTR [edi]
  41edd7:	push   ss
  41edd8:	adc    bl,BYTE PTR [eax+0x581bbb75]
  41edde:	cmp    ecx,DWORD PTR [ecx+0x26]
  41ede1:	push   edi
  41ede2:	mov    WORD PTR [ebx+0xf],cs
  41ede5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede6:	out    0x51,eax
  41ede8:	and    al,0x7a
  41edea:	test   dh,0x86
  41eded:	adc    BYTE PTR [ebx-0x74],dl
  41edf0:	retf   0x2b97
  41edf3:	test   eax,0x4ac09eba
  41edf8:	jb     0x41ee05
  41edfa:	aad    0x4f
  41edfc:	jae    0x41edf3
  41edfe:	xor    eax,0x3900e4d2
  41ee03:	push   edi
  41ee04:	cmp    DWORD PTR [eax],edx
  41ee06:	xchg   ecx,eax
  41ee07:	cwde   
  41ee08:	out    0x19,eax
  41ee0a:	loope  0x41edda
  41ee0c:	aas    
  41ee0d:	loope  0x41ee00
  41ee0f:	outs   dx,BYTE PTR ds:[esi]
  41ee10:	xor    DWORD PTR [esi-0x21],0x387d3707
  41ee17:	jbe    0x41ee72
  41ee19:	xchg   bl,cl
  41ee1b:	dec    ecx
  41ee1c:	mov    eax,0x7dc39297
  41ee21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee22:	fbld   TBYTE PTR [edi-0x6a155f1b]
  41ee28:	mov    bl,BYTE PTR [edx+esi*2]
  41ee2b:	push   ecx
  41ee2c:	aam    0xf0
  41ee2e:	cmp    ecx,DWORD PTR [esi+ebp*8+0x5c]
  41ee32:	xchg   edi,eax
  41ee33:	leave  
  41ee34:	retf   0x2f66
  41ee37:	pushf  
  41ee38:	arpl   WORD PTR [esi-0x28456106],bx
  41ee3e:	sub    ebx,ebp
  41ee40:	and    al,0x5c
  41ee42:	cmp    BYTE PTR [ebx+0x7313ce89],0xb5
  41ee49:	outs   dx,DWORD PTR ds:[esi]
  41ee4a:	mov    ecx,0x2f480943
  41ee4f:	lds    ebx,FWORD PTR [ecx+0xb9f8363]
  41ee55:	outs   dx,DWORD PTR ds:[esi]
  41ee56:	sbb    eax,0xf88bb7f0
  41ee5b:	pop    ecx
  41ee5c:	cmp    eax,0xe3c747fd
  41ee61:	movq   QWORD PTR [esi+edi*2+0x16fdb358],mm1
  41ee69:	clc    
  41ee6a:	add    DWORD PTR [esi+0x1616477f],ebx
  41ee70:	pushf  
  41ee71:	cmp    eax,0x2d8865d0
  41ee76:	mov    eax,0x0
  41ee7b:	add    BYTE PTR [eax],al
  41ee7d:	add    BYTE PTR [eax],al
  41ee7f:	add    BYTE PTR [eax],al
  41ee81:	dec    esi
  41ee82:	leave  
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0x362f76e4
  41ee8e:	add    eax,DWORD PTR [esi+0xf]
  41ee91:	stos   DWORD PTR es:[edi],eax
  41ee92:	imul   eax,DWORD PTR [ecx],0x3ae00
  41ee98:	add    BYTE PTR [ecx-0x5],dh
  41ee9b:	inc    ebx
  41ee9c:	pop    ds
  41ee9d:	cli    
  41ee9e:	ja     0x41ee6a
  41eea0:	sbb    BYTE PTR [edx-0xa],bl
  41eea3:	lock cdq 
  41eea5:	mov    ds:0x18bade4,eax
  41eeaa:	fst    DWORD PTR [ebp+0x46]
  41eead:	mov    bl,BYTE PTR [esp+edi*8+0x4ab58885]
  41eeb4:	sbb    BYTE PTR [ecx+ecx*1-0x5fb1ea71],bl
  41eebb:	adc    ch,dh
  41eebd:	mov    dh,BYTE PTR [edi-0x1b]
  41eec0:	jne    0x41ef22
  41eec2:	dec    ebp
  41eec3:	dec    eax
  41eec4:	lods   al,BYTE PTR ds:[esi]
  41eec5:	fdivrp st(1),st
  41eec7:	xchg   esi,eax
  41eec8:	popa   
  41eec9:	retf   0xae4d
  41eecc:	sub    DWORD PTR [edx+0x39],edi
  41eecf:	mov    DWORD PTR [ecx],0x328e24d4
  41eed5:	fwait
  41eed6:	lods   al,BYTE PTR ds:[esi]
  41eed7:	enter  0x1d60,0xfa
  41eedb:	mov    BYTE PTR [esi+0x745196e6],cl
  41eee1:	cld    
  41eee2:	jne    0x41eebf
  41eee4:	ds cmc 
  41eee6:	lock sub eax,0x57ab319c
  41eeec:	loopne 0x41ef1d
  41eeee:	dec    edx
  41eeef:	iret   
  41eef0:	mov    ds:0x3b6c015,al
  41eef5:	or     ecx,ebx
  41eef7:	pop    ds
  41eef8:	sub    dh,BYTE PTR [ecx-0x2619ccc5]
  41eefe:	bound  esi,QWORD PTR [ebx]
  41ef00:	repz rol DWORD PTR [ecx+0xf],1
  41ef04:	call   0x7f01502c
  41ef09:	jo     0x41eef8
  41ef0b:	jmp    0x41ef5b
  41ef0d:	jmp    0xe02121ef
  41ef12:	fst    DWORD PTR [ecx+0x13]
  41ef15:	rol    dl,1
  41ef17:	scas   al,BYTE PTR es:[edi]
  41ef18:	xor    al,0x26
  41ef1a:	hlt    
  41ef1b:	sbb    DWORD PTR [esi],esi
  41ef1d:	sbb    al,0x20
  41ef1f:	mov    BYTE PTR [ebx-0x5c28f77c],dl
  41ef25:	mov    dl,0x41
  41ef27:	xlat   BYTE PTR ds:[ebx]
  41ef28:	ds stos BYTE PTR es:[edi],al
  41ef2a:	(bad)  
  41ef2b:	call   0x33bf4410
  41ef30:	xlat   BYTE PTR ds:[ebx]
  41ef31:	outs   dx,DWORD PTR ds:[esi]
  41ef32:	xchg   edx,eax
  41ef33:	push   edi
  41ef34:	jae    0x41ef70
  41ef36:	(bad)  
  41ef37:	sub    DWORD PTR [eax+eax*8-0xcbe02af],eax
  41ef3e:	aaa    
  41ef3f:	out    dx,eax
  41ef40:	push   0x47
  41ef42:	in     eax,dx
  41ef43:	pop    ss
  41ef44:	vsqrtsd xmm5,xmm1,xmm5
  41ef48:	add    ch,BYTE PTR [edx+0x37]
  41ef4b:	scas   eax,DWORD PTR es:[edi]
  41ef4c:	dec    edi
  41ef4d:	or     ebp,ebx
  41ef4f:	iret   
  41ef50:	popa   
  41ef51:	push   ebp
  41ef52:	sbb    esp,ebp
  41ef54:	mov    WORD PTR [esi+0x64],es
  41ef57:	gs jno 0x41ef67
  41ef5a:	sbb    bl,BYTE PTR ds:[ecx+0x58]
  41ef5e:	fmul   DWORD PTR [eax+0x73]
  41ef61:	cmp    BYTE PTR [eax],cl
  41ef63:	shr    BYTE PTR [esi+0x5e],1
  41ef66:	loope  0x41ef8d
  41ef68:	xchg   edi,eax
  41ef69:	in     al,dx
  41ef6a:	rcl    DWORD PTR [eax+0x54],cl
  41ef6d:	mov    bh,0x60
  41ef6f:	sbb    eax,0x7e72b9af
  41ef74:	adc    DWORD PTR [ebx],ebx
  41ef76:	cmp    eax,0x706f1412
  41ef7b:	mov    ebp,0xaa5ae1a2
  41ef80:	dec    ecx
  41ef81:	xor    al,0xf4
  41ef83:	fidiv  WORD PTR [edi-0x8]
  41ef86:	dec    ecx
  41ef87:	mov    al,0xd9
  41ef89:	ja     0x41ef89
  41ef8b:	fstp   QWORD PTR [ecx+0x1319a9d7]
  41ef91:	retf   
  41ef92:	retf   0x2bb0
  41ef95:	int    0xb4
  41ef97:	adc    BYTE PTR [eax+0x5e],ch
  41ef9a:	(bad)  
  41ef9b:	cmp    al,0x77
  41ef9d:	xor    ebp,0x5c
  41efa0:	mov    edx,0x87992f17
  41efa5:	or     DWORD PTR [edx-0x24494d73],esi
  41efab:	jns    0x41ef6e
  41efad:	adc    DWORD PTR [esp+ebx*8+0x5b26ae31],edx
  41efb4:	and    BYTE PTR [edi+0x17],ah
  41efb7:	cmp    ah,BYTE PTR [edi]
  41efb9:	push   eax
  41efba:	retf   
  41efbb:	int3   
  41efbc:	(bad)  [edx+0x40]
  41efbf:	enter  0xc20,0xc7
  41efc3:	adc    eax,0x1f544a04
  41efc8:	add    BYTE PTR [edi-0xdcd8db9],0xc6
  41efcf:	clc    
  41efd0:	out    dx,al
  41efd1:	rcr    DWORD PTR [edi-0x45],cl
  41efd4:	aaa    
  41efd5:	out    dx,al
  41efd6:	in     eax,dx
  41efd7:	add    eax,DWORD PTR [edx-0x4c]
  41efda:	dec    esp
  41efdb:	sbb    DWORD PTR [edi+0x7e],edx
  41efde:	or     ah,cl
  41efe0:	pop    edx
  41efe1:	test   al,0xa1
  41efe3:	pop    esp
  41efe4:	daa    
  41efe5:	call   0xa3f7:0xa82c409e
  41efec:	js     0x41efde
  41efee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efef:	enter  0xd99,0x3d
  41eff3:	(bad)  
  41eff5:	repnz mov ebp,0x38088206
  41effc:	mov    cl,bl
  41effe:	mov    ah,0xf9
  41f000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f001:	and    DWORD PTR [edi+0x4833899],esi
  41f007:	xchg   esp,eax
  41f008:	sub    esp,edi
  41f00a:	inc    esp
  41f00b:	out    dx,al
  41f00c:	mov    DWORD PTR [ecx+edi*2-0x7f1eeeab],ecx
  41f013:	lods   al,BYTE PTR ds:[esi]
  41f014:	sub    BYTE PTR [ebp+0x389d5a7a],bh
  41f01a:	in     eax,0x4a
  41f01c:	aas    
  41f01d:	or     esi,esi
  41f01f:	fistp  QWORD PTR [ebp-0x14]
  41f022:	jge    0x41f087
  41f024:	jns    0x41efce
  41f026:	jl     0x41f066
  41f028:	lods   eax,DWORD PTR ds:[esi]
  41f029:	test   BYTE PTR [edx-0x7e],dh
  41f02c:	or     BYTE PTR [edx-0x8],bh
  41f02f:	xor    DWORD PTR [edi-0xb],ecx
  41f032:	test   ah,cl
  41f034:	ss stos BYTE PTR es:[edi],al
  41f036:	fbld   TBYTE PTR [edx]
  41f038:	lock sahf 
  41f03a:	leave  
  41f03b:	dec    ebp
  41f03c:	and    al,0x27
  41f03e:	js     0x41f02a
  41f040:	sti    
  41f041:	jl     0x41f084
  41f043:	cmp    eax,0x1c29848e
  41f048:	and    BYTE PTR [esi+0x7c80c427],cl
  41f04e:	push   esp
  41f04f:	push   ecx
  41f050:	js     0x41efd4
  41f052:	adc    BYTE PTR [edx],bl
  41f054:	loop   0x41f003
  41f056:	aas    
  41f057:	jmp    0xdaabca4
  41f05c:	shr    ebp,cl
  41f05e:	popf   
  41f05f:	gs (bad) 
  41f062:	stos   BYTE PTR es:[edi],al
  41f063:	loopne 0x41f075
  41f065:	mov    DWORD PTR [ecx],esi
  41f067:	test   al,0xdc
  41f069:	(bad)  
  41f06a:	ret    
  41f06b:	(bad)  
  41f06c:	icebp  
  41f06d:	and    esp,DWORD PTR ds:0xf2b6a328
  41f073:	(bad)  
  41f075:	push   ebp
  41f076:	loopne 0x41f02d
  41f078:	das    
  41f079:	into   
  41f07a:	dec    esp
  41f07b:	jmp    DWORD PTR [esi+edx*2+0x76]
  41f07f:	test   eax,0x80a3041
  41f084:	jl     0x41f00e
  41f086:	push   0x4c
  41f088:	add    ch,al
  41f08a:	mov    eax,ds:0xf6514e0c
  41f08f:	int    0x6f
  41f091:	sub    ebx,DWORD PTR [ebp+ecx*1+0x15]
  41f095:	scas   al,BYTE PTR es:[edi]
  41f096:	(bad)  
  41f097:	xchg   BYTE PTR [edi],bh
  41f099:	jne    0x41f0d4
  41f09b:	idiv   BYTE PTR [eax*4+0x6c9edc15]
  41f0a2:	inc    edx
  41f0a3:	xor    eax,0x20d88a
  41f0a8:	dec    BYTE PTR [esi+0x3c]
  41f0ab:	mov    DWORD PTR [edi],esp
  41f0ad:	das    
  41f0ae:	cs xchg edi,eax
  41f0b0:	xchg   edi,eax
  41f0b1:	adc    al,0x60
  41f0b3:	inc    edi
  41f0b4:	jo     0x41f08f
  41f0b6:	adc    esi,DWORD PTR ds:0xbd503f1
  41f0bc:	scas   eax,DWORD PTR es:[edi]
  41f0bd:	add    ch,BYTE PTR [edx+0x22]
  41f0c0:	xchg   ebp,eax
  41f0c1:	fsubr  QWORD PTR [esi]
  41f0c3:	(bad)  
  41f0c4:	dec    edx
  41f0c5:	(bad)  
  41f0c7:	add    eax,0x52c4d7de
  41f0cc:	mov    esp,0x9f4d6822
  41f0d1:	or     al,0x85
  41f0d3:	outs   dx,DWORD PTR ds:[esi]
  41f0d4:	mov    edi,0xdbedb19f
  41f0d9:	clc    
  41f0da:	and    ebx,DWORD PTR [eax]
  41f0dc:	fdivr  DWORD PTR [edx-0x45]
  41f0df:	out    dx,al
  41f0e0:	mov    edx,edi
  41f0e2:	stc    
  41f0e3:	(bad)  
  41f0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e5:	inc    eax
  41f0e6:	(bad)  
  41f0e7:	ins    BYTE PTR es:[edi],dx
  41f0e8:	cdq    
  41f0e9:	adc    ebx,DWORD PTR [edi+0x16]
  41f0ec:	loope  0x41f07f
  41f0ee:	mov    bh,0xe3
  41f0f0:	(bad)
  41f0f4:	and    esi,DWORD PTR [edi-0x6822924e]
  41f0fa:	push   esp
  41f0fb:	add    edx,DWORD PTR [edi]
  41f0fd:	idiv   DWORD PTR [edx+ebx*4-0x58]
  41f101:	push   ecx
  41f102:	stc    
  41f103:	stos   BYTE PTR es:[edi],al
  41f104:	outs   dx,BYTE PTR ds:[esi]
  41f105:	call   0x2cb1:0xe72ee2b7
  41f10c:	frndint 
  41f10e:	arpl   WORD PTR [ecx-0x61bab3e6],di
  41f114:	mov    DWORD PTR [eax+0x9],ecx
  41f117:	jmp    0x2936:0x7f993123
  41f11e:	test   al,0xbb
  41f120:	and    DWORD PTR [ebx],esp
  41f122:	or     DWORD PTR [edx+esi*2+0x12],esp
  41f126:	xchg   ebx,eax
  41f127:	dec    esp
  41f128:	inc    esp
  41f129:	dec    edx
  41f12a:	loope  0x41f0bd
  41f12c:	mov    ebx,0x8b5666dd
  41f131:	sub    BYTE PTR [esp+edi*2-0x7bfc5081],bl
  41f138:	imul   ebp,DWORD PTR [ecx-0x5efb49c7],0xbdc66d19
  41f142:	jne    0x41f18a
  41f144:	cmp    bh,ch
  41f146:	cmc    
  41f147:	std    
  41f148:	sbb    bl,BYTE PTR [edx+eax*2]
  41f14b:	add    eax,0xb75fc56b
  41f150:	jae    0x41f108
  41f152:	jl     0x41f162
  41f154:	and    bl,BYTE PTR [ebp-0x78]
  41f157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f158:	aaa    
  41f159:	cwde   
  41f15a:	push   es
  41f15b:	retf   
  41f15c:	retf   
  41f15d:	addr16 imul ebp,ebp,0x35
  41f161:	mov    bl,0x34
  41f163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f164:	xchg   edi,eax
  41f165:	retf   0x1f21
  41f168:	in     al,dx
  41f169:	sti    
  41f16a:	sub    esp,DWORD PTR [eax+0x30f2ec60]
  41f170:	pop    esi
  41f171:	push   esi
  41f172:	ss shr ecx,1
  41f175:	repz sub eax,0x38f91dcc
  41f17b:	test   DWORD PTR [esi+0x3c],edx
  41f17e:	and    al,0xb7
  41f180:	fisttp QWORD PTR [eax+0x1301f1cf]
  41f186:	cli    
  41f187:	ror    BYTE PTR [ecx+0x2b],cl
  41f18a:	add    DWORD PTR [ebp+0x36cb2ac7],eax
  41f190:	imul   eax,edx,0xffffffc5
  41f193:	dec    ebp
  41f194:	or     dh,BYTE PTR [ebp-0x23]
  41f197:	xor    eax,0xc9640c97
  41f19c:	cdq    
  41f19d:	scas   eax,DWORD PTR es:[edi]
  41f19e:	cmp    al,0x34
  41f1a0:	pop    ecx
  41f1a1:	call   0x8aee6bb7
  41f1a6:	sub    ebp,DWORD PTR [ecx+0x7d]
  41f1a9:	ins    DWORD PTR es:[edi],dx
  41f1aa:	les    esp,FWORD PTR [ebp+0x39d88812]
  41f1b0:	or     al,0xdb
  41f1b2:	jo     0x41f1d2
  41f1b4:	xchg   DWORD PTR [ebx+ecx*1+0x3d459199],edx
  41f1bb:	test   eax,0x2b3a7000
  41f1c0:	int3   
  41f1c1:	jl     0x41f14e
  41f1c3:	add    ebx,DWORD PTR [edi-0x25f4efca]
  41f1c9:	inc    edi
  41f1ca:	sar    DWORD PTR [ebp+0x40],cl
  41f1cd:	xchg   BYTE PTR [ecx],ch
  41f1cf:	int3   
  41f1d0:	ins    BYTE PTR es:[edi],dx
  41f1d1:	nop
  41f1d2:	nop
  41f1d3:	push   0xbf038a7c
  41f1d8:	dec    eax
  41f1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1da:	add    BYTE PTR [ecx+0x42],cl
  41f1dd:	lods   al,BYTE PTR ds:[esi]
  41f1de:	imul   eax,DWORD PTR [esi+0x37b334dc],0x72
  41f1e5:	call   0x678bca82
  41f1ea:	(bad)  
  41f1eb:	sti    
  41f1ec:	pop    esi
  41f1ed:	or     BYTE PTR [eax+0x5e8c75e3],ch
  41f1f3:	sub    DWORD PTR [ecx+0x54],ebx
  41f1f6:	mov    eax,edx
  41f1f8:	in     al,0xea
  41f1fa:	adc    ecx,esi
  41f1fc:	sub    BYTE PTR [ebx+ebx*2],dh
  41f1ff:	and    dl,ch
  41f201:	push   edi
  41f202:	xor    cl,dl
  41f204:	cs dec eax
  41f206:	push   edx
  41f207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f208:	jl     0x41f1b6
  41f20a:	sbb    esp,DWORD PTR [edi]
  41f20c:	and    ebx,edi
  41f20e:	ins    DWORD PTR es:[edi],dx
  41f20f:	je     0x41f234
  41f211:	add    BYTE PTR [edx+0x72736a4b],dh
  41f217:	loop   0x41f229
  41f219:	pop    edx
  41f21a:	sbb    al,0xc4
  41f21c:	sti    
  41f21d:	out    0x5c,al
  41f21f:	mov    esi,0x7188d5fc
  41f224:	inc    esp
  41f225:	fwait
  41f226:	inc    eax
  41f227:	or     ch,BYTE PTR [edx+0x57]
  41f22a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f22b:	bound  ebp,QWORD PTR [ebx+eax*2-0x7a3b67b3]
  41f232:	ret    
  41f233:	inc    ecx
  41f234:	and    ch,bl
  41f236:	ret    
  41f237:	inc    edx
  41f238:	cwde   
  41f239:	sub    al,0x53
  41f23b:	add    al,0x33
  41f23d:	dec    ecx
  41f23e:	fldcw  WORD PTR [ecx-0x75]
  41f241:	arpl   WORD PTR [ebp-0x5e],cx
  41f244:	jl     0x41f1e4
  41f246:	aam    0x0
	...
  41f250:	add    BYTE PTR [eax],dh
  41f252:	ret    0xe921
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx-0x3],ebx
  41f25e:	gs cmp dh,al
  41f261:	pop    ecx
  41f262:	ins    DWORD PTR es:[edi],dx
  41f263:	add    DWORD PTR [eax],eax
  41f265:	scas   al,BYTE PTR es:[edi]
  41f266:	add    eax,DWORD PTR [eax]
  41f268:	add    BYTE PTR [ecx-0x528f0ff9],cl
  41f26e:	push   ecx
  41f26f:	sahf   
  41f270:	popf   
  41f271:	js     0x41f1ff
  41f273:	adc    eax,0x81f5197e
  41f278:	dec    esi
  41f279:	jmp    0x17fd:0x506d7e38
  41f280:	scas   al,BYTE PTR es:[edi]
  41f281:	xrelease mov DWORD PTR [eax+0x61dd5fb5],edx
  41f288:	inc    ebx
  41f289:	dec    esp
  41f28a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f28b:	out    0x84,eax
  41f28d:	mov    dh,0x1c
  41f28f:	gs in  al,dx
  41f291:	cmp    eax,0xcc6f5b9e
  41f296:	sar    bh,cl
  41f298:	jp     0x41f28b
  41f29a:	test   eax,0x1b7936ee
  41f29f:	cmp    eax,ecx
  41f2a1:	xchg   ecx,eax
  41f2a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a3:	or     DWORD PTR [edi],ebx
  41f2a5:	mov    edx,0x42a7646
  41f2aa:	cli    
  41f2ab:	xchg   esp,eax
  41f2ac:	push   ebx
  41f2ad:	or     eax,0x659b223c
  41f2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2b3:	mov    ebx,DWORD PTR [ebx]
  41f2b5:	push   edi
  41f2b6:	mov    BYTE PTR [ebx+ebx*2],bh
  41f2b9:	jo     0x41f2af
  41f2bb:	dec    ebx
  41f2bc:	push   0x5c
  41f2be:	adc    BYTE PTR [ebp-0x15],cl
  41f2c1:	aad    0xcb
  41f2c3:	jecxz  0x41f324
  41f2c5:	adc    DWORD PTR [eax],eax
  41f2c7:	cmp    al,0x7b
  41f2c9:	sub    eax,DWORD PTR [esi]
  41f2cb:	add    al,0x21
  41f2cd:	pop    eax
  41f2ce:	xor    al,0xe
  41f2d0:	push   ebp
  41f2d1:	inc    ebx
  41f2d2:	and    ecx,ebx
  41f2d4:	inc    eax
  41f2d5:	push   esi
  41f2d6:	ret    0x8de
  41f2d9:	(bad)  
  41f2da:	or     esi,DWORD PTR [edi-0xa]
  41f2dd:	sub    eax,0xe82c56c2
  41f2e2:	pop    es
  41f2e3:	ficomp DWORD PTR [ecx+0x394c9219]
  41f2e9:	jo     0x41f313
  41f2eb:	mov    esp,0x400564ef
  41f2f0:	inc    edx
  41f2f1:	loop   0x41f2f5
  41f2f3:	xchg   edx,eax
  41f2f4:	hlt    
  41f2f5:	pushf  
  41f2f6:	fadd   DWORD PTR [esi]
  41f2f8:	stos   BYTE PTR es:[edi],al
  41f2f9:	xchg   edi,eax
  41f2fa:	stos   BYTE PTR es:[edi],al
  41f2fb:	push   ecx
  41f2fc:	hlt    
  41f2fd:	adc    al,0x5a
  41f2ff:	pop    es
  41f300:	dec    edi
  41f301:	adc    DWORD PTR [ebp-0x77],ecx
  41f304:	icebp  
  41f305:	out    dx,al
  41f306:	fcom   QWORD PTR [edx-0xe9d01ea]
  41f30c:	sub    al,0x6d
  41f30e:	nop
  41f30f:	clc    
  41f310:	popa   
  41f311:	push   ds
  41f312:	push   eax
  41f313:	pop    eax
  41f314:	rcl    BYTE PTR [edx],0x1d
  41f317:	mov    dl,0x78
  41f319:	xchg   edx,eax
  41f31a:	fidivr WORD PTR [ecx+esi*8-0x5ca0a374]
  41f321:	push   es
  41f322:	stc    
  41f323:	cmp    DWORD PTR [edx],ecx
  41f325:	imul   ebx,DWORD PTR [eax],0xffffffc2
  41f328:	ss add eax,0xf0090531
  41f32e:	mov    eax,ds:0x58ffba15
  41f333:	enter  0xf214,0x4d
  41f337:	push   ebx
  41f338:	xor    ebp,DWORD PTR [eax]
  41f33a:	loop   0x41f375
  41f33c:	push   eax
  41f33d:	popf   
  41f33e:	scas   eax,DWORD PTR es:[edi]
  41f33f:	call   0xbd54:0x9983fd98
  41f346:	pop    esi
  41f347:	nop
  41f348:	xchg   edi,eax
  41f349:	retf   0xd2d2
  41f34c:	pushf  
  41f34d:	or     al,0xb5
  41f34f:	and    DWORD PTR [edi],esp
  41f351:	enter  0x95ce,0x57
  41f355:	mov    edx,0xca93c41a
  41f35a:	popa   
  41f35b:	inc    esi
  41f35c:	sahf   
  41f35d:	mov    edi,0xc38cfc2e
  41f362:	imul   edi,ecx,0xca56d49d
  41f368:	mov    cl,bh
  41f36a:	push   esp
  41f36b:	call   0xa2476166
  41f370:	mov    ds:0xc2f0aaa4,al
  41f375:	push   ebx
  41f376:	loopne 0x41f307
  41f378:	inc    ebp
  41f379:	jg     0x41f39c
  41f37b:	mov    ebx,0xd1c0dc86
  41f380:	(bad)  
  41f381:	out    dx,al
  41f382:	ins    BYTE PTR es:[edi],dx
  41f383:	push   ds
  41f384:	mov    edx,0x6feb77d9
  41f389:	rol    BYTE PTR [edx],cl
  41f38b:	aad    0x73
  41f38d:	inc    esp
  41f38e:	vdivss xmm5,xmm0,DWORD PTR [esi]
  41f392:	xchg   edx,eax
  41f393:	and    ecx,eax
  41f395:	sti    
  41f396:	out    0x3e,eax
  41f398:	scas   eax,DWORD PTR es:[edi]
  41f399:	sub    bh,BYTE PTR ds:0xc8110bbb
  41f39f:	or     al,0x21
  41f3a1:	lahf   
  41f3a2:	lea    edx,[edx+0x4b]
  41f3a5:	mov    edx,0x35ac81b0
  41f3aa:	mov    cl,0xc8
  41f3ac:	int3   
  41f3ad:	pop    ebp
  41f3ae:	dec    ebp
  41f3af:	and    DWORD PTR ds:0xebfdcb51,ecx
  41f3b5:	or     BYTE PTR [ebx],dl
  41f3b7:	sar    BYTE PTR [ecx],0xeb
  41f3ba:	js     0x41f3e9
  41f3bc:	sub    dl,ah
  41f3be:	shl    BYTE PTR [edi+0x7],cl
  41f3c1:	jmp    0x41f394
  41f3c3:	test   al,0xfc
  41f3c5:	mov    al,ds:0xb602e3b1
  41f3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3cb:	cwde   
  41f3cc:	mov    edi,0x1545b411
  41f3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3d2:	sbb    al,0x4b
  41f3d4:	xor    BYTE PTR [ebx],dl
  41f3d6:	fdivr  QWORD PTR [ecx+0x3f372c30]
  41f3dc:	xlat   BYTE PTR ds:[ebx]
  41f3dd:	lods   eax,DWORD PTR ds:[esi]
  41f3de:	xchg   ah,dh
  41f3e0:	jno    0x41f386
  41f3e2:	ds dec esp
  41f3e4:	(bad)
  41f3e7:	clc    
  41f3e8:	rol    DWORD PTR [ecx],0xe3
  41f3eb:	pop    ds
  41f3ec:	lea    eax,[ebx+0xd]
  41f3ef:	cli    
  41f3f0:	push   edi
  41f3f1:	outs   dx,BYTE PTR ds:[esi]
  41f3f2:	jae    0x41f3e8
  41f3f4:	ins    BYTE PTR es:[edi],dx
  41f3f5:	push   ecx
  41f3f6:	pop    ds
  41f3f7:	and    esp,esi
  41f3f9:	dec    edx
  41f3fa:	out    0x47,al
  41f3fc:	jge    0x41f382
  41f3fe:	sub    al,0xfb
  41f400:	xchg   DWORD PTR [edi-0xa495f4d],esi
  41f406:	mov    bl,cl
  41f408:	dec    edi
  41f409:	or     al,0x97
  41f40b:	pop    edx
  41f40c:	es push ebp
  41f40e:	in     eax,0x1
  41f410:	std    
  41f411:	xchg   sp,ax
  41f413:	cld    
  41f414:	(bad)  
  41f415:	pop    edx
  41f416:	les    ecx,FWORD PTR [eax+ebp*4-0x2321b10]
  41f41d:	std    
  41f41e:	inc    ecx
  41f41f:	jne    0x41f3c8
  41f421:	sub    eax,0xe98b0008
  41f426:	enter  0xbf8c,0x13
  41f42a:	xchg   DWORD PTR [ecx],esi
  41f42c:	add    ah,0x36
  41f42f:	ja     0x41f48c
  41f431:	push   bx
  41f433:	sub    al,BYTE PTR [esp+edi*1-0x70ac9d8f]
  41f43a:	aad    0x0
  41f43c:	push   esp
  41f43d:	(bad)  
  41f43e:	iret   
  41f43f:	jb     0x41f490
  41f441:	inc    ebp
  41f442:	add    ebx,DWORD PTR [eax+0x16]
  41f445:	push   0x981e1088
  41f44a:	sbb    ah,BYTE PTR [esi-0x55]
  41f44d:	scas   eax,DWORD PTR es:[edi]
  41f44e:	ins    BYTE PTR es:[edi],dx
  41f44f:	mov    DWORD PTR [ecx],edx
  41f451:	hlt    
  41f452:	push   edi
  41f453:	out    0x4b,al
  41f455:	fwait
  41f456:	loopne 0x41f422
  41f458:	fdivp  st(0),st
  41f45a:	pusha  
  41f45b:	dec    DWORD PTR [edx]
  41f45d:	cld    
  41f45e:	mov    al,0x50
  41f460:	xchg   ecx,eax
  41f461:	push   eax
  41f462:	jle    0x41f4d3
  41f464:	aas    
  41f465:	sub    cl,cl
  41f467:	jp     0x41f486
  41f469:	cmp    BYTE PTR [edx],ah
  41f46b:	daa    
  41f46c:	xor    cl,ah
  41f46e:	idiv   BYTE PTR [eax+0x79]
  41f471:	dec    edi
  41f472:	sub    BYTE PTR [ebx-0x2981bd7e],dl
  41f478:	and    dh,bl
  41f47a:	pop    ss
  41f47b:	mov    dl,0x20
  41f47d:	add    edx,esi
  41f47f:	cmp    edx,DWORD PTR [ebx-0x714357af]
  41f485:	pop    edi
  41f486:	aad    0x7d
  41f488:	shr    DWORD PTR [ebp-0x27],1
  41f48b:	lahf   
  41f48c:	mov    esp,0xd904950d
  41f491:	enter  0xe3a4,0x48
  41f495:	sti    
  41f496:	jl     0x41f45c
  41f498:	daa    
  41f499:	retf   
  41f49a:	je     0x41f45d
  41f49c:	dec    edi
  41f49d:	ja     0x41f4e3
  41f49f:	into   
  41f4a0:	call   0xe0ab7cd6
  41f4a5:	pop    ss
  41f4a6:	xlat   BYTE PTR ds:[ebx]
  41f4a7:	sub    DWORD PTR [ebx],eax
  41f4a9:	gs stos BYTE PTR es:[edi],al
  41f4ab:	call   FWORD PTR [ebx-0x536bf98d]
  41f4b1:	jmp    0x60b33306
  41f4b6:	xor    BYTE PTR [bp+di-0x43],dl
  41f4ba:	jl     0x41f536
  41f4bc:	fld1   
  41f4be:	mov    dh,ch
  41f4c0:	ins    DWORD PTR es:[edi],dx
  41f4c1:	mov    edx,0x638bed71
  41f4c6:	or     DWORD PTR [ecx+0x29ed519c],0x20
  41f4cd:	jl     0x41f4e9
  41f4cf:	inc    esp
  41f4d0:	mov    fs,WORD PTR [edx-0x6b]
  41f4d3:	mov    es,WORD PTR [edx+ebp*2+0x1f21c0d0]
  41f4da:	popa   
  41f4db:	mov    BYTE PTR [esi+0x79554ea0],dl
  41f4e1:	cmc    
  41f4e2:	sub    al,0xec
  41f4e4:	pushf  
  41f4e5:	jns    0x41f4e5
  41f4e7:	fadd   QWORD PTR [ebx+0x3c]
  41f4ea:	test   eax,0x51f10a02
  41f4ef:	jmp    0xb3aff2a1
  41f4f4:	(bad)  [ebp+0x75908134]
  41f4fa:	mov    ds:0x945037cc,al
  41f4ff:	nop
  41f500:	sub    ch,dl
  41f502:	fisubr WORD PTR [ebp+0x5fd3204c]
  41f508:	sar    edx,cl
  41f50a:	push   0xffffffc3
  41f50c:	leave  
  41f50d:	outs   dx,BYTE PTR ds:[si]
  41f510:	xlat   BYTE PTR ds:[bx]
  41f512:	aad    0xd4
  41f514:	icebp  
  41f515:	call   0x2e8f706
  41f51a:	loope  0x41f593
  41f51c:	mov    DWORD PTR [edx+0x41],0x79ced6c2
  41f523:	mov    DWORD PTR [ebx],esp
  41f525:	sar    DWORD PTR [eax*2-0xdb6b920],cl
  41f52c:	xor    BYTE PTR [esi+0x510e95fc],cl
  41f532:	sub    al,ah
  41f534:	sub    BYTE PTR ds:0xb638c2aa,cl
  41f53a:	pop    edi
  41f53b:	mov    ebp,0x5c865691
  41f540:	lock pop edi
  41f542:	das    
  41f543:	out    dx,al
  41f544:	add    eax,DWORD PTR [ecx+ebp*1-0x65793370]
  41f54b:	add    al,0xf
  41f54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f54e:	cmp    eax,0x34c78a42
  41f553:	inc    eax
  41f554:	or     eax,0x6b467671
  41f559:	call   0xd559a9d6
  41f55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f55f:	out    0xaf,al
  41f561:	ins    DWORD PTR es:[edi],dx
  41f562:	arpl   WORD PTR [eax],ax
  41f564:	lds    ebx,FWORD PTR [eax]
  41f566:	sbb    ah,BYTE PTR [edx+0x34]
  41f569:	mov    ebx,0x20c3d84b
  41f56e:	cmc    
  41f56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f570:	dec    esp
  41f571:	sbb    DWORD PTR [eax+0x21],ebp
  41f574:	pop    ss
  41f575:	mov    edi,0xb6064b82
  41f57a:	imul   ecx,DWORD PTR ss:[edx+0x58f01f11],0xffffffba
  41f582:	stos   BYTE PTR es:[edi],al
  41f583:	add    BYTE PTR [ebx],ah
  41f585:	cmp    bh,BYTE PTR [edx-0x205f280e]
  41f58b:	sub    ebp,edi
  41f58d:	std    
  41f58e:	xchg   edi,eax
  41f58f:	stos   BYTE PTR es:[edi],al
  41f590:	les    edi,FWORD PTR [ebp+edi*1-0x5dbce803]
  41f597:	push   eax
  41f598:	les    ebx,FWORD PTR [edx-0x5b]
  41f59b:	mov    edi,0x530b7451
  41f5a0:	or     ecx,DWORD PTR [ebp+0x4ab9771d]
  41f5a6:	push   ecx
  41f5a7:	out    dx,al
  41f5a8:	mov    dh,0x1e
  41f5aa:	lock push ebp
  41f5ac:	pminsw mm0,QWORD PTR [edx+0x49]
  41f5b0:	sbb    eax,0xca4e86ac
  41f5b5:	pusha  
  41f5b6:	xor    cl,BYTE PTR [ecx+0x24]
  41f5b9:	shl    cl,1
  41f5bb:	jo     0x41f594
  41f5bd:	icebp  
  41f5be:	and    bl,BYTE PTR [ecx]
  41f5c0:	out    dx,eax
  41f5c1:	xor    DWORD PTR [edi-0x49],esi
  41f5c4:	cmp    cl,BYTE PTR [esi+0x32aae49a]
  41f5ca:	sysenter 
  41f5cc:	and    al,0x6a
  41f5ce:	push   edi
  41f5cf:	cdq    
  41f5d0:	sahf   
  41f5d1:	in     eax,0xc2
  41f5d3:	jmp    0x226:0xd7a064f6
  41f5da:	cdq    
  41f5db:	sbb    BYTE PTR [edx+0x4b],dh
  41f5de:	pushf  
  41f5df:	std    
  41f5e0:	scas   eax,DWORD PTR es:[edi]
  41f5e1:	aaa    
  41f5e2:	or     bl,BYTE PTR [eax+esi*8+0x28]
  41f5e6:	push   0xffffffa4
  41f5e8:	pop    eax
  41f5e9:	js     0x41f5c8
  41f5eb:	icebp  
  41f5ec:	push   ss
  41f5ed:	test   eax,0xa9689f84
  41f5f2:	out    0xcc,al
  41f5f4:	add    DWORD PTR [ecx],ebx
  41f5f6:	cmp    BYTE PTR [eax],ah
  41f5f8:	mov    al,0x91
  41f5fa:	pop    ebp
  41f5fb:	jge    0x41f640
  41f5fd:	daa    
  41f5fe:	jns    0x41f62e
  41f600:	pop    eax
  41f601:	xchg   edx,eax
  41f602:	cdq    
  41f603:	lahf   
  41f604:	sar    ch,cl
  41f606:	cmp    BYTE PTR [edi-0x33ed8920],dh
  41f60c:	push   esi
  41f60d:	xchg   BYTE PTR [esi],ch
  41f60f:	ja     0x41f59d
  41f611:	mov    cl,0xd
  41f613:	cmp    al,0xf0
  41f615:	xor    BYTE PTR [ecx+0x0],bl
	...
  41f620:	add    BYTE PTR [edx+0x5],al
  41f623:	and    BYTE PTR [eax+0x67],ah
  41f626:	gs inc edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	mov    al,0x65
  41f62f:	xchg   esp,eax
  41f630:	and    eax,0x17107
  41f635:	scas   al,BYTE PTR es:[edi]
  41f636:	add    eax,DWORD PTR [eax]
  41f638:	add    BYTE PTR [eax],bl
  41f63a:	in     eax,0x8a
  41f63c:	jae    0x41f6a6
  41f63e:	ds jle 0x41f5e2
  41f641:	push   ebp
  41f642:	mov    dh,0x69
  41f644:	sbb    cl,bh
  41f646:	(bad)  
  41f647:	push   DWORD PTR [eax]
  41f649:	jmp    0x41f638
  41f64b:	dec    esi
  41f64c:	stos   DWORD PTR es:[edi],eax
  41f64d:	data16 in al,dx
  41f64f:	retf   
  41f650:	xor    ch,bl
  41f652:	pushf  
  41f653:	pop    ecx
  41f654:	imul   ebx,edi,0x43e93f9
  41f65a:	mov    ds,edx
  41f65c:	in     eax,dx
  41f65d:	jne    0x41f657
  41f65f:	jno    0x41f68f
  41f661:	lods   eax,DWORD PTR ds:[esi]
  41f662:	fnstenv [esi]
  41f664:	jecxz  0x41f60e
  41f666:	stos   BYTE PTR es:[edi],al
  41f667:	std    
  41f668:	cmp    eax,0x254d0578
  41f66d:	xor    dl,BYTE PTR [esi-0x70]
  41f670:	mov    cl,0xc4
  41f672:	cwde   
  41f673:	mov    ebp,0xd9bd441d
  41f678:	cmp    BYTE PTR [edi],ah
  41f67a:	xor    DWORD PTR [ebp-0x6f],esi
  41f67d:	xchg   esp,eax
  41f67e:	xchg   dh,bl
  41f680:	jle    0x41f666
  41f682:	jmp    0xdc478a7f
  41f687:	lods   al,BYTE PTR ds:[esi]
  41f688:	sbb    al,ch
  41f68a:	repnz (bad) 
  41f68e:	por    mm1,QWORD PTR [ecx+eax*2+0x185ef7df]
  41f696:	gs scas eax,DWORD PTR es:[edi]
  41f698:	inc    esi
  41f699:	mov    al,ds:0x4e29939a
  41f69e:	in     eax,0xc3
  41f6a0:	sub    DWORD PTR [esi-0x708e7587],ebp
  41f6a6:	mov    ah,0x67
  41f6a8:	adc    esp,DWORD PTR [eax+0x4b]
  41f6ab:	xlat   BYTE PTR ds:[ebx]
  41f6ac:	enter  0x7181,0xfe
  41f6b0:	repnz mov BYTE PTR [ecx+esi*2-0x655cc78a],dl
  41f6b8:	pop    ecx
  41f6b9:	push   edi
  41f6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6bb:	push   ebp
  41f6bc:	mov    BYTE PTR [ecx],al
  41f6be:	and    eax,0xec80ee1e
  41f6c3:	clc    
  41f6c4:	xor    BYTE PTR [esi],ah
  41f6c6:	dec    eax
  41f6c7:	dec    ecx
  41f6c8:	xchg   edi,eax
  41f6c9:	jns    0x41f677
  41f6cb:	repz dec ebx
  41f6cd:	xchg   esp,eax
  41f6ce:	push   esp
  41f6cf:	mov    ebp,0x5a787ab7
  41f6d4:	mov    bl,0x9f
  41f6d6:	mov    gs,WORD PTR [esi+ecx*8]
  41f6d9:	push   edx
  41f6da:	pop    ebp
  41f6db:	shl    DWORD PTR [edx-0x5abf2a87],cl
  41f6e1:	dec    eax
  41f6e2:	sbb    BYTE PTR [esi+0x5620921c],al
  41f6e8:	dec    esi
  41f6e9:	jg     0x41f708
  41f6eb:	xchg   dh,cl
  41f6ed:	or     edi,DWORD PTR [ecx-0x50981d6a]
  41f6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6f4:	jg     0x41f6ab
  41f6f6:	push   esi
  41f6f7:	pushf  
  41f6f8:	jl     0x41f693
  41f6fa:	adc    eax,0x2923162e
  41f6ff:	cdq    
  41f700:	stos   DWORD PTR es:[edi],eax
  41f701:	ret    
  41f702:	mov    eax,0xb30ad36f
  41f707:	jecxz  0x41f68f
  41f709:	inc    ebp
  41f70a:	add    BYTE PTR [ecx],ch
  41f70c:	mov    ebp,0x2f93e3c2
  41f711:	mov    ebp,0xe760694d
  41f716:	push   esp
  41f717:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f719:	int3   
  41f71a:	sub    al,0xf5
  41f71c:	jbe    0x41f760
  41f71e:	stos   DWORD PTR es:[edi],eax
  41f71f:	ins    DWORD PTR es:[edi],dx
  41f720:	popf   
  41f721:	lods   eax,DWORD PTR ds:[esi]
  41f722:	(bad)  
  41f723:	xor    bl,bh
  41f725:	into   
  41f726:	lock inc edx
  41f728:	es popf 
  41f72a:	cs popa 
  41f72c:	mov    eax,ds:0x61749385
  41f731:	xchg   BYTE PTR [esp+ecx*1],ah
  41f734:	gs (bad) 
  41f736:	retf   0xb667
  41f739:	dec    DWORD PTR [esi]
  41f73b:	fidivr WORD PTR [eax-0x17]
  41f73e:	fldln2 
  41f740:	xchg   ecx,eax
  41f741:	test   BYTE PTR [edi+ebp*8-0x4448cc05],al
  41f748:	clc    
  41f749:	xor    DWORD PTR [edx-0x3e],edx
  41f74c:	(bad)  
  41f74d:	into   
  41f74e:	sar    DWORD PTR [ebp+ebx*4-0x2c],0xb8
  41f753:	test   DWORD PTR [ecx],0x636871f3
  41f759:	jae    0x41f6ef
  41f75b:	retf   
  41f75c:	or     bh,BYTE PTR [esi+edi*2+0x10fcc73]
  41f763:	push   eax
  41f764:	cld    
  41f765:	pop    ss
  41f766:	and    al,0xf3
  41f768:	js     0x41f786
  41f76a:	and    eax,0x683a5c3b
  41f76f:	pop    ecx
  41f770:	push   0x40
  41f772:	push   edx
  41f773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f774:	jmp    0x5506:0xbb1a155b
  41f77b:	cmp    eax,0xc9a017c
  41f780:	lgs    edx,FWORD PTR [edx-0x72]
  41f784:	imul   edx,DWORD PTR [edx],0xc3aad864
  41f78a:	jp     0x41f802
  41f78c:	fs cdq 
  41f78e:	xchg   edi,eax
  41f78f:	jno    0x41f750
  41f791:	cli    
  41f792:	outs   dx,BYTE PTR ds:[esi]
  41f793:	cwde   
  41f794:	fisubr WORD PTR [esi+0x21c61dee]
  41f79a:	cmc    
  41f79b:	jecxz  0x41f74f
  41f79d:	mov    eax,ds:0xad79d2d0
  41f7a2:	sub    ah,bh
  41f7a4:	fs add ah,0x20
  41f7a8:	aas    
  41f7a9:	add    dl,ah
  41f7ab:	xchg   esp,eax
  41f7ac:	sub    esp,DWORD PTR [ecx+0x67]
  41f7af:	cwde   
  41f7b0:	push   edx
  41f7b1:	sub    ecx,edx
  41f7b3:	cmp    BYTE PTR [edi+0x32],dl
  41f7b6:	adc    DWORD PTR [esp+ecx*4],ecx
  41f7b9:	add    DWORD PTR [eax+esi*1-0x16],0x7dfce84a
  41f7c1:	jmp    0xc50f6f97
  41f7c6:	sbb    DWORD PTR [ebx-0x53],ebp
  41f7c9:	dec    esp
  41f7ca:	mov    edi,0xf4575095
  41f7cf:	not    dh
  41f7d1:	add    bl,BYTE PTR [ebx]
  41f7d3:	jmp    0xedc0:0xe236ca17
  41f7da:	push   eax
  41f7db:	outs   dx,DWORD PTR ds:[esi]
  41f7dc:	push   eax
  41f7dd:	clc    
  41f7de:	sti    
  41f7df:	loopne 0x41f798
  41f7e1:	cmc    
  41f7e2:	mov    ebx,0x6b195e51
  41f7e7:	xor    ebp,0xc72d4525
  41f7ed:	jp     0x41f799
  41f7ef:	stos   BYTE PTR es:[edi],al
  41f7f0:	ds push esp
  41f7f2:	lods   al,BYTE PTR ds:[esi]
  41f7f3:	push   0x863d4919
  41f7f8:	add    ebx,DWORD PTR [eax-0x91c9c78]
  41f7fe:	je     0x41f80e
  41f800:	xchg   edx,edx
  41f802:	mov    edx,0xf44066ee
  41f807:	pop    esp
  41f808:	rcl    BYTE PTR [edx+0x6e],1
  41f80b:	loopne 0x41f85a
  41f80d:	add    ecx,DWORD PTR [ebx+0x5bdb6ff4]
  41f813:	mov    DWORD PTR [ebp-0x43],esp
  41f816:	xor    dh,BYTE PTR [edx-0x1a66ab6]
  41f81c:	cmp    ch,BYTE PTR [esi+0x1f]
  41f81f:	sbb    DWORD PTR [esi],ebx
  41f821:	daa    
  41f822:	sub    bh,dh
  41f824:	loop   0x41f813
  41f826:	xchg   ebp,eax
  41f827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f828:	jbe    0x41f89e
  41f82a:	push   edi
  41f82b:	arpl   WORD PTR [ebp-0x7c90fa66],sp
  41f831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f832:	mov    al,BYTE PTR [esi-0x605b9dae]
  41f838:	mov    bl,0x8c
  41f83a:	dec    ecx
  41f83b:	test   al,0xe5
  41f83d:	mov    dl,0x9a
  41f83f:	and    DWORD PTR [edi],0x6a
  41f842:	cmp    al,0x70
  41f844:	sub    al,0x68
  41f846:	mov    eax,0xb48464ed
  41f84b:	xchg   edi,eax
  41f84c:	and    al,BYTE PTR [eax+0x4761d8b1]
  41f852:	mov    eax,ds:0xacd9d8bc
  41f857:	loope  0x41f810
  41f859:	inc    ecx
  41f85a:	and    eax,0xa2e5de9e
  41f85f:	inc    esi
  41f860:	in     al,dx
  41f861:	xchg   DWORD PTR [esi-0x2b],ecx
  41f864:	inc    ebx
  41f865:	push   edi
  41f866:	call   0x98e48caa
  41f86b:	pop    esi
  41f86c:	push   cs
  41f86d:	pushf  
  41f86e:	sbb    bh,BYTE PTR [ebp+edi*4-0x5a12402d]
  41f875:	fucomi st,st(0)
  41f877:	retf   0x541c
  41f87a:	in     al,0x5
  41f87c:	shl    DWORD PTR [edi+0x17],1
  41f87f:	and    ebp,esi
  41f881:	sbb    DWORD PTR [esi],edx
  41f883:	xchg   esi,eax
  41f884:	test   eax,0x24174509
  41f889:	jbe    0x41f8f4
  41f88b:	inc    edx
  41f88c:	push   esp
  41f88d:	leave  
  41f88e:	popf   
  41f88f:	xor    BYTE PTR [ebx+0x58],ch
  41f892:	or     BYTE PTR [eax],ch
  41f894:	cmp    al,0xb3
  41f896:	push   ecx
  41f897:	iret   
  41f898:	pop    edi
  41f899:	imul   ebx,DWORD PTR [ebx],0xffffffdd
  41f89c:	outs   dx,BYTE PTR ds:[esi]
  41f89d:	or     dl,dl
  41f89f:	push   es
  41f8a0:	hlt    
  41f8a1:	jge    0x41f85c
  41f8a3:	mov    al,0x23
  41f8a5:	mov    ch,0x3f
  41f8a7:	inc    eax
  41f8a8:	jo     0x41f8e6
  41f8aa:	out    dx,al
  41f8ab:	aas    
  41f8ac:	cwde   
  41f8ad:	sbb    bl,ah
  41f8af:	imul   esp,DWORD PTR [edi],0x9c590139
  41f8b5:	ds fs add eax,0xce203088
  41f8bc:	out    dx,al
  41f8bd:	jns    0x41f933
  41f8bf:	bound  esi,QWORD PTR [esi]
  41f8c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8c2:	cld    
  41f8c3:	mov    bh,0x14
  41f8c5:	fbld   TBYTE PTR [ebx]
  41f8c7:	add    al,0x53
  41f8c9:	push   ss
  41f8ca:	add    BYTE PTR [edi+0xeda886c],al
  41f8d0:	jecxz  0x41f909
  41f8d2:	out    dx,eax
  41f8d3:	loop   0x41f856
  41f8d5:	inc    edi
  41f8d6:	sub    BYTE PTR [edi],bl
  41f8d8:	fmul   QWORD PTR [esi+0x1e]
  41f8db:	add    DWORD PTR ds:0xd9556fa0,ecx
  41f8e1:	xchg   edi,eax
  41f8e2:	in     al,0x99
  41f8e4:	loop   0x41f965
  41f8e6:	dec    ebx
  41f8e7:	adc    DWORD PTR ds:0x4dc2a8ac,eax
  41f8ed:	dec    edx
  41f8ee:	pop    edx
  41f8ef:	outs   dx,DWORD PTR ds:[esi]
  41f8f0:	sbb    BYTE PTR [edi],ch
  41f8f2:	cmp    dl,BYTE PTR [eax-0x4550bdb1]
  41f8f8:	pop    es
  41f8f9:	cmp    al,0x57
  41f8fb:	xchg   ebx,eax
  41f8fc:	dec    esp
  41f8fd:	cs daa 
  41f8ff:	or     esi,ecx
  41f901:	xor    DWORD PTR [ebp-0x41df6a37],0xf1db6093
  41f90b:	sub    eax,0xbca3a32d
  41f910:	imul   edi,DWORD PTR [esi+0x5ea9819d],0xf506ab39
  41f91a:	popf   
  41f91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f91c:	push   0xffffff95
  41f91e:	out    dx,al
  41f91f:	repz popa 
  41f921:	in     al,dx
  41f922:	sub    ah,dl
  41f924:	(bad)
  41f928:	or     al,0xd2
  41f92a:	(bad)  
  41f92b:	fisubr WORD PTR [ebx]
  41f92d:	xor    esp,DWORD PTR [edx-0x378e5dca]
  41f933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f934:	adc    al,al
  41f936:	test   BYTE PTR [edx+0x39],al
  41f939:	xchg   DWORD PTR [ebp+0xfb3f1e5],esp
  41f93f:	std    
  41f940:	sub    al,0x4d
  41f942:	dec    esi
  41f943:	lock and ch,BYTE PTR [ecx+0x435fbad3]
  41f94a:	jg     0x41f909
  41f94c:	mov    al,0xd7
  41f94e:	daa    
  41f94f:	pop    esp
  41f950:	sti    
  41f951:	push   0x5
  41f953:	retf   
  41f954:	bound  esp,QWORD PTR [edi-0x51ddaa67]
  41f95a:	out    0x7e,al
  41f95c:	mov    edx,0xb66c72d
  41f961:	jle    0x41f937
  41f963:	dec    eax
  41f964:	sub    al,0x61
  41f966:	jne    0x41f925
  41f968:	ins    DWORD PTR es:[edi],dx
  41f969:	and    DWORD PTR [edx],edi
  41f96b:	sub    ah,BYTE PTR [ecx-0x2d]
  41f96e:	or     bl,ch
  41f970:	mov    ds:0xbf73b550,al
  41f975:	jae    0x41f9d9
  41f977:	jmp    0x41f96a
  41f979:	aas    
  41f97a:	inc    edi
  41f97b:	xchg   ebx,eax
  41f97c:	lea    esi,ds:0x5e073b66
  41f982:	and    eax,0xe4c950c9
  41f987:	hlt    
  41f988:	sar    DWORD PTR [ecx+0x72e7dff5],0x46
  41f98f:	or     cl,cl
  41f991:	popf   
  41f992:	loopne 0x41f94c
  41f994:	push   ecx
  41f995:	cwde   
  41f996:	ficomp WORD PTR [eax+0x2b]
  41f999:	data16 sub dh,ah
  41f99c:	shl    DWORD PTR [ebx-0x3c],1
  41f99f:	pop    ds
  41f9a0:	shl    DWORD PTR [ebx],1
  41f9a2:	arpl   bx,cx
  41f9a4:	in     eax,dx
  41f9a5:	js     0x41f9a8
  41f9a7:	add    al,0x84
  41f9a9:	dec    esp
  41f9aa:	jb     0x41f979
  41f9ac:	in     al,dx
  41f9ad:	mov    eax,0x78210a8
  41f9b2:	jecxz  0x41fa01
  41f9b4:	sbb    al,0xf
  41f9b6:	xchg   ebx,eax
  41f9b7:	or     eax,0x4e0ee94
  41f9bc:	call   0x8c33110f
  41f9c1:	push   ss
  41f9c2:	sar    BYTE PTR [ebx-0x6d1365c],cl
  41f9c8:	sahf   
  41f9c9:	jbe    0x41f9a1
  41f9cb:	gs in  eax,dx
  41f9cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ce:	xchg   ebp,eax
  41f9cf:	in     al,0x7e
  41f9d1:	stc    
  41f9d2:	pop    eax
  41f9d3:	cli    
  41f9d4:	jno    0x41fa04
  41f9d6:	lds    eax,FWORD PTR [ecx-0x1929748]
  41f9dc:	or     esp,ebp
  41f9de:	retf   0x3a73
  41f9e1:	push   esi
  41f9e2:	lock cmp ah,al
  41f9e5:	aam    0x11
	...
  41f9ef:	add    BYTE PTR [eax],al
  41f9f1:	mov    edi,0x9c801c2f
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	mov    bl,0x9b
  41f9ff:	iret   
  41fa00:	fnsave [ebp-0x51fffe8c]
  41fa06:	add    eax,DWORD PTR [eax]
  41fa08:	add    cl,ah
  41fa0a:	pushf  
  41fa0b:	outs   dx,DWORD PTR ds:[esi]
  41fa0c:	mov    ebx,0x93f53f0d
  41fa11:	in     eax,dx
  41fa12:	mov    es,ebp
  41fa14:	push   ss
  41fa15:	adc    al,0xdc
  41fa17:	fnstenv [ebp-0x4496f977]
  41fa1d:	mov    ah,0xe4
  41fa1f:	cdq    
  41fa20:	push   ebp
  41fa21:	jo     0x41f9e9
  41fa23:	and    bh,bl
  41fa25:	cmp    al,0x34
  41fa27:	jb     0x41fa8f
  41fa29:	pop    ecx
  41fa2a:	and    ch,BYTE PTR [edi-0x42c8bd8c]
  41fa30:	div    BYTE PTR [edx+0x78]
  41fa33:	push   ss
  41fa34:	out    dx,eax
  41fa35:	sub    eax,ebp
  41fa37:	shl    DWORD PTR [ebp-0x52f5e6e],cl
  41fa3d:	jb     0x41fa57
  41fa3f:	cmp    BYTE PTR [ebx-0x5a],dl
  41fa42:	or     eax,0x9cf0bc22
  41fa47:	xor    al,0x85
  41fa49:	adc    eax,0x9ddd712e
  41fa4e:	or     DWORD PTR [edx+esi*4+0x7c],eax
  41fa52:	mov    ah,0x3b
  41fa54:	cmc    
  41fa55:	iret   
  41fa56:	in     eax,0x43
  41fa58:	fstp   TBYTE PTR [ecx-0x2d]
  41fa5b:	mov    al,ds:0xbc9fb077
  41fa60:	test   ch,bl
  41fa62:	mov    dl,0x52
  41fa64:	xlat   BYTE PTR ds:[ebx]
  41fa65:	or     ebp,DWORD PTR [esi-0x3db7bc]
  41fa6b:	sahf   
  41fa6c:	or     dl,BYTE PTR [ecx]
  41fa6e:	inc    eax
  41fa6f:	mov    dl,0x61
  41fa71:	sub    BYTE PTR [esi+0x5e63766e],cl
  41fa77:	lds    eax,FWORD PTR [ebp+0x7]
  41fa7a:	adc    al,0xd5
  41fa7c:	ins    BYTE PTR es:[edi],dx
  41fa7d:	lods   eax,DWORD PTR ds:[esi]
  41fa7e:	out    dx,eax
  41fa7f:	je     0x41facf
  41fa81:	ins    DWORD PTR es:[edi],dx
  41fa82:	mov    eax,0x9a395aaf
  41fa87:	sub    eax,0x1166a6f5
  41fa8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa8d:	jnp    0x41fa3a
  41fa8f:	dec    eax
  41fa90:	test   edi,edx
  41fa92:	enter  0x55d0,0x98
  41fa96:	sub    eax,0x3618eb9b
  41fa9b:	outs   dx,DWORD PTR ds:[esi]
  41fa9c:	sub    dl,BYTE PTR [edx+0x10b887c2]
  41faa2:	bound  ebp,QWORD PTR [ebx+0xe3eb339]
  41faa8:	cli    
  41faa9:	aam    0xe6
  41faab:	add    al,0x6b
  41faad:	jno    0x41fb22
  41faaf:	test   eax,0x417e06e0
  41fab4:	test   BYTE PTR [esi],bh
  41fab6:	adc    eax,0x6e6cac73
  41fabb:	loopne 0x41fb26
  41fabd:	lds    ebp,FWORD PTR [edi+0xe]
  41fac0:	stc    
  41fac1:	inc    ebx
  41fac2:	push   0x52
  41fac4:	jge    0x41fae4
  41fac6:	pop    ds
  41fac7:	adc    esp,DWORD PTR [eax-0x50]
  41faca:	sub    al,0xd8
  41facc:	mov    WORD PTR [esi],gs
  41face:	lea    ecx,[esi-0x7c]
  41fad1:	aam    0x1c
  41fad3:	dec    ecx
  41fad4:	mov    DWORD PTR [edx+0x465baf66],ebx
  41fada:	push   edi
  41fadb:	push   cs
  41fadc:	mov    esi,0x75a92583
  41fae1:	fisub  WORD PTR [ebp-0x6b757f4e]
  41fae7:	test   BYTE PTR [eax+0x34],dh
  41faea:	sbb    al,0x73
  41faec:	pop    es
  41faed:	xchg   edx,eax
  41faee:	aas    
  41faef:	jns    0x41fa86
  41faf1:	fild   QWORD PTR [edx]
  41faf3:	lahf   
  41faf4:	jg     0x41fab0
  41faf6:	push   0x34e28ebf
  41fafb:	jle    0x41fa7f
  41fafd:	jl     0x41fadc
  41faff:	dec    eax
  41fb00:	arpl   WORD PTR [eax-0x3c],bp
  41fb03:	inc    esi
  41fb04:	pop    ds
  41fb05:	add    ebp,DWORD PTR [edx]
  41fb07:	pop    edi
  41fb08:	test   eax,0x9a6595dd
  41fb0d:	sahf   
  41fb0e:	pop    edi
  41fb0f:	pop    ebp
  41fb10:	xor    DWORD PTR [ebp-0x59],edi
  41fb13:	dec    ebp
  41fb14:	scas   al,BYTE PTR es:[edi]
  41fb15:	jae    0x41fb1b
  41fb17:	or     edi,esi
  41fb19:	stc    
  41fb1a:	and    DWORD PTR [ebp-0x68],0xd022674
  41fb21:	jb     0x41fb74
  41fb23:	fld    QWORD PTR [ecx]
  41fb25:	push   eax
  41fb26:	mov    ?,WORD PTR [edx+0x25]
  41fb29:	scas   eax,DWORD PTR es:[edi]
  41fb2a:	and    al,0x22
  41fb2c:	out    0x50,al
  41fb2e:	jmp    0x1f7ac281
  41fb33:	dec    ebp
  41fb34:	stos   BYTE PTR es:[edi],al
  41fb35:	scas   eax,DWORD PTR es:[edi]
  41fb36:	push   esi
  41fb37:	push   ss
  41fb38:	pusha  
  41fb39:	shl    BYTE PTR [ebp-0x6e],0xa5
  41fb3d:	sub    al,0xac
  41fb3f:	xor    al,0xec
  41fb41:	pop    ss
  41fb42:	push   cs
  41fb43:	mov    ch,0x12
  41fb45:	clc    
  41fb46:	cmp    al,0xb6
  41fb48:	jge    0x41fad4
  41fb4a:	out    dx,al
  41fb4b:	(bad)  
  41fb4c:	jno    0x41fbb7
  41fb4e:	jne    0x41fb78
  41fb50:	lea    esp,[ebx]
  41fb52:	cmp    DWORD PTR [esi+eiz*4-0x4c],edx
  41fb56:	out    dx,al
  41fb57:	cmp    eax,0xd2ea6dfc
  41fb5c:	push   0xffffffef
  41fb5e:	mov    DWORD PTR [edx-0x3daa6eb0],0xfcf2e3de
  41fb68:	std    
  41fb69:	inc    ecx
  41fb6a:	pop    edi
  41fb6b:	pop    eax
  41fb6c:	dec    ebx
  41fb6d:	mov    eax,0x41aef30b
  41fb72:	xor    DWORD PTR [eax-0x5b],eax
  41fb75:	sbb    ebp,ebx
  41fb77:	mov    ds:0x28dd4fa2,al
  41fb7c:	sbb    eax,DWORD PTR [esi+eax*8+0x671219cc]
  41fb83:	pushf  
  41fb84:	data16 aaa 
  41fb86:	pop    ebx
  41fb87:	jg     0x41fbc8
  41fb89:	mov    al,0x5e
  41fb8b:	dec    ebp
  41fb8c:	inc    esp
  41fb8d:	pop    eax
  41fb8e:	shr    dl,1
  41fb90:	bound  eax,QWORD PTR [edi-0xbdc5125]
  41fb96:	sub    BYTE PTR [edx+0x328547f2],cl
  41fb9c:	mov    eax,0xd791c4d9
  41fba1:	into   
  41fba2:	add    esi,0xffffffa2
  41fba5:	shl    BYTE PTR [ecx+0x5f],1
  41fba8:	xchg   ecx,eax
  41fba9:	aam    0xd0
  41fbab:	cmp    edx,ecx
  41fbad:	leave  
  41fbae:	stc    
  41fbaf:	sbb    eax,0xc4c6bc78
  41fbb4:	jo     0x41fb76
  41fbb6:	mov    ds:0x1e423786,eax
  41fbbb:	inc    edi
  41fbbc:	outs   dx,BYTE PTR ds:[esi]
  41fbbd:	jl     0x41fb6a
  41fbbf:	bound  ebx,QWORD PTR [edx-0x3e52a5f5]
  41fbc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbc6:	cli    
  41fbc7:	jo     0x41fc3f
  41fbc9:	inc    edi
  41fbca:	pusha  
  41fbcb:	mov    BYTE PTR [ebp+0x67c0e2a0],cl
  41fbd1:	dec    esi
  41fbd2:	mov    eax,ds:0x82456cd5
  41fbd7:	pop    es
  41fbd8:	push   cs
  41fbd9:	ja     0x41fb88
  41fbdb:	cmp    al,0x17
  41fbdd:	jnp    0x41fc25
  41fbdf:	or     BYTE PTR [edi-0x4b],0x78
  41fbe3:	fs (bad) 
  41fbe6:	cmp    DWORD PTR [ebp-0x55],0xc8de9742
  41fbed:	(bad)  
  41fbee:	shl    esp,cl
  41fbf0:	push   ecx
  41fbf1:	jp     0x41fc24
  41fbf3:	sub    dh,BYTE PTR [esi-0x7]
  41fbf6:	dec    edx
  41fbf7:	fsub   st,st(3)
  41fbf9:	ret    
  41fbfa:	sar    DWORD PTR [edx-0x7fad85ef],0x1
  41fc01:	bound  esi,QWORD PTR [esi-0x66510707]
  41fc07:	inc    edx
  41fc08:	jmp    0x54ac:0xac7447a8
  41fc0f:	push   DWORD PTR [edx+0x21]
  41fc12:	inc    ebx
  41fc13:	cwde   
  41fc14:	loope  0x41fc73
  41fc16:	in     al,0xf6
  41fc18:	pop    ebp
  41fc19:	mov    ds:0xcfcf5c6f,eax
  41fc1e:	das    
  41fc1f:	and    DWORD PTR [ecx],edi
  41fc21:	loop   0x41fbe2
  41fc23:	or     eax,0xfb4ab782
  41fc28:	and    al,0x8f
  41fc2a:	js     0x41fbf4
  41fc2c:	lods   eax,DWORD PTR ds:[esi]
  41fc2d:	mov    esi,0xae8b675
  41fc32:	ins    DWORD PTR es:[edi],dx
  41fc33:	inc    edi
  41fc34:	popa   
  41fc35:	jmp    0x1270:0x8f3a1fb9
  41fc3c:	aam    0x3e
  41fc3e:	ret    0x4c23
  41fc41:	shl    DWORD PTR [ecx-0x11],0x4d
  41fc45:	in     al,0x72
  41fc47:	test   DWORD PTR [ebx],ebp
  41fc49:	sub    esi,DWORD PTR [ebx+0x505a5697]
  41fc4f:	ror    esi,1
  41fc51:	adc    al,0xb
  41fc53:	ja     0x41fc93
  41fc55:	mov    eax,ds:0x2604d7d9
  41fc5a:	pushf  
  41fc5b:	jae    0x41fc87
  41fc5d:	pop    ss
  41fc5e:	jecxz  0x41fc12
  41fc60:	enter  0xddbe,0xae
  41fc64:	(bad)  
  41fc66:	mov    eax,ds:0x3317e7c7
  41fc6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc6c:	shr    ch,0x76
  41fc6f:	xchg   ebx,eax
  41fc70:	mov    ds:0xa4d6c68a,al
  41fc75:	dec    eax
  41fc76:	adc    eax,0xd0292902
  41fc7b:	jge    0x41fc6e
  41fc7d:	fisubr WORD PTR [eax+ebp*1-0x148276a8]
  41fc84:	add    al,0x89
  41fc86:	dec    esp
  41fc87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc89:	or     al,0x59
  41fc8b:	adc    DWORD PTR [ecx+0x59],ecx
  41fc8e:	xor    al,BYTE PTR [ebx+0xe57c704]
  41fc94:	lds    esp,FWORD PTR [esi]
  41fc96:	ds mov ah,0x66
  41fc99:	mov    al,ds:0xaf5721cb
  41fc9e:	inc    ecx
  41fc9f:	add    ecx,DWORD PTR [ecx-0x64]
  41fca2:	mov    bl,0xba
  41fca4:	fimul  DWORD PTR [edx+0x4f94cb41]
  41fcaa:	inc    ebp
  41fcab:	(bad)  
  41fcac:	xor    al,0x61
  41fcae:	and    DWORD PTR [eax+ebp*8-0x77],esi
  41fcb2:	clc    
  41fcb3:	loope  0x41fcba
  41fcb5:	ss jbe 0x41fd29
  41fcb8:	dec    ebx
  41fcb9:	sbb    DWORD PTR [edi],esp
  41fcbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcbc:	and    al,0x37
  41fcbe:	mov    cl,0xc5
  41fcc0:	jae    0x41fcc6
  41fcc2:	cli    
  41fcc3:	add    eax,0xeff96c08
  41fcc8:	xlat   BYTE PTR ds:[ebx]
  41fcc9:	psubd  mm5,QWORD PTR [ecx]
  41fccc:	gs ss loopne 0x41fd1c
  41fcd0:	cli    
  41fcd1:	inc    edx
  41fcd2:	cmp    ch,dl
  41fcd4:	adc    al,0xab
  41fcd6:	sbb    DWORD PTR [eax+eiz*1-0x767caa1e],ecx
  41fcdd:	neg    BYTE PTR [esi-0x3220363c]
  41fce3:	mov    ebp,0x4eb651c7
  41fce8:	mov    ah,0xc4
  41fcea:	daa    
  41fceb:	mov    eax,0x7500dc8b
  41fcf0:	in     eax,dx
  41fcf1:	mov    BYTE PTR [eax],ch
  41fcf3:	push   0x3c
  41fcf5:	push   edx
  41fcf6:	daa    
  41fcf7:	dec    edx
  41fcf8:	lock push cs
  41fcfa:	iret   
  41fcfb:	cld    
  41fcfc:	int3   
  41fcfd:	pushf  
  41fcfe:	add    esi,eax
  41fd00:	xchg   edx,eax
  41fd01:	xchg   ebp,eax
  41fd02:	mov    esp,DWORD PTR [eax+edi*2-0x3bed4f04]
  41fd09:	pop    ds
  41fd0a:	sbb    dh,ch
  41fd0c:	outs   dx,BYTE PTR ds:[esi]
  41fd0d:	add    ah,dl
  41fd0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd10:	stc    
  41fd11:	mov    dh,BYTE PTR [ebx-0x14c91157]
  41fd17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd18:	repz (bad) 
  41fd1b:	icebp  
  41fd1c:	enter  0xcbed,0xba
  41fd20:	lea    esp,[edi-0x5e]
  41fd23:	aaa    
  41fd24:	mov    BYTE PTR [edx],0xb6
  41fd27:	ret    
  41fd28:	sahf   
  41fd29:	or     ch,ah
  41fd2b:	adc    ebx,DWORD PTR [esi]
  41fd2d:	aad    0xce
  41fd2f:	imul   ebp,DWORD PTR [edx],0xfba5ea06
  41fd35:	mov    al,al
  41fd37:	or     BYTE PTR [esi-0xf],ch
  41fd3a:	sbb    ebp,0x61c34a10
  41fd40:	std    
  41fd41:	js     0x41fd2b
  41fd43:	nop
  41fd44:	inc    ebx
  41fd45:	mov    edx,esi
  41fd47:	or     esp,DWORD PTR [ecx+0x10]
  41fd4a:	out    dx,al
  41fd4b:	jg     0x41fda8
  41fd4d:	push   esp
  41fd4e:	mov    dl,0xaa
  41fd50:	mov    bh,0x22
  41fd52:	ins    BYTE PTR es:[edi],dx
  41fd53:	mov    bh,0xc5
  41fd55:	das    
  41fd56:	xchg   ecx,eax
  41fd57:	push   esp
  41fd58:	not    edi
  41fd5a:	sub    eax,0xd72d9259
  41fd5f:	sub    DWORD PTR [eax+0x1d0cc5f1],eax
  41fd65:	stc    
  41fd66:	or     BYTE PTR [eax+0x2a],dl
  41fd69:	push   esi
  41fd6a:	adc    DWORD PTR [ebx],ebx
  41fd6c:	xor    DWORD PTR [eax],eax
  41fd6e:	out    0xe4,eax
  41fd70:	add    ecx,0x1
  41fd73:	enter  0xd50,0x4d
  41fd77:	sahf   
  41fd78:	pop    ebp
  41fd79:	xor    eax,0xd4829758
  41fd7e:	test   eax,0xd9389816
  41fd83:	xchg   edi,eax
  41fd84:	and    al,0xa7
  41fd86:	and    eax,0x3098b2ed
  41fd8b:	sahf   
  41fd8c:	pop    eax
  41fd8d:	mov    ebx,0xf49477d6
  41fd92:	sbb    eax,0xe550ef1b
  41fd97:	mov    DWORD PTR [ecx],esp
  41fd99:	sub    DWORD PTR [ebx-0x1c],edi
  41fd9c:	xor    eax,0x7bbb0008
  41fda1:	jnp    0x41fdc2
  41fda3:	and    ch,BYTE PTR [edi-0x2ce8a39]
  41fda9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdaa:	xchg   esp,eax
  41fdab:	mov    cl,0x21
  41fdad:	cmp    bh,bh
  41fdaf:	shl    BYTE PTR [esi-0x42db07c],1
  41fdb5:	pop    ebp
  41fdb6:	add    al,BYTE PTR [eax]
	...
  41fdc0:	add    BYTE PTR [ecx-0x400c494c],cl
  41fdc6:	repz int 0xfe
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	xchg   edi,eax
  41fdce:	aam    0x9d
  41fdd0:	packsswb mm7,QWORD PTR [eax+0x1]
  41fdd4:	add    BYTE PTR [esi+0x14000003],ch
  41fdda:	xlat   BYTE PTR ds:[ebx]
  41fddb:	sub    dl,BYTE PTR [ecx+0x690ce718]
  41fde1:	add    DWORD PTR [eax+eax*1],0x26e778d2
  41fde8:	pushf  
  41fde9:	stos   DWORD PTR es:[edi],eax
  41fdea:	or     DWORD PTR [edx],edx
  41fdec:	fisub  DWORD PTR [edi+ebp*4]
  41fdef:	ffreep st(6)
  41fdf1:	push   cs
  41fdf2:	cmp    eax,0xdef739e5
  41fdf7:	mov    esi,0x6ccc0846
  41fdfc:	aas    
  41fdfd:	pusha  
  41fdfe:	je     0x41fe61
  41fe00:	scas   al,BYTE PTR es:[edi]
  41fe01:	mov    al,0xd3
  41fe03:	cwde   
  41fe04:	sbb    BYTE PTR [eax],bl
  41fe06:	out    dx,al
  41fe07:	mov    ebp,DWORD PTR [ebx+esi*2]
  41fe0a:	mov    ah,BYTE PTR [edx]
  41fe0c:	imul   ecx,ebx,0xde838a27
  41fe12:	cmp    eax,0x16c31c62
  41fe17:	clc    
  41fe18:	cmp    edx,DWORD PTR [edx-0x2e]
  41fe1b:	or     al,0x23
  41fe1d:	mov    ecx,0x2ee318bb
  41fe22:	and    eax,0x44de1b61
  41fe27:	jmp    0xe115:0x269e2bed
  41fe2e:	pop    esp
  41fe2f:	push   es
  41fe30:	inc    edx
  41fe31:	ins    DWORD PTR es:[edi],dx
  41fe32:	test   eax,0xc61a3e64
  41fe37:	inc    esp
  41fe38:	xchg   esp,eax
  41fe39:	gs mov al,0xc4
  41fe3c:	pusha  
  41fe3d:	mov    edx,0x16e1e57e
  41fe42:	pop    esi
  41fe43:	fidivr WORD PTR [ecx]
  41fe45:	xchg   edx,eax
  41fe46:	mov    esi,0x3045f8ef
  41fe4b:	cmp    BYTE PTR [edi],ch
  41fe4d:	div    DWORD PTR [edx]
  41fe4f:	ret    0x377c
  41fe52:	sbb    BYTE PTR [edi-0x13],bh
  41fe55:	repz pop ss
  41fe57:	jge    0x41fe56
  41fe59:	int    0x66
  41fe5b:	jle    0x41febc
  41fe5d:	aas    
  41fe5e:	ret    0xa6d8
  41fe61:	lea    eax,[ecx+0xe]
  41fe64:	adc    BYTE PTR [ebx],0x5
  41fe67:	lahf   
  41fe68:	fisub  DWORD PTR [ebx-0x7d]
  41fe6b:	imul   ebp,DWORD PTR [ebp+0x6409458c],0xffffff80
  41fe72:	addr16 cmp ebp,ebx
  41fe75:	push   esp
  41fe76:	in     eax,0xb7
  41fe78:	cli    
  41fe79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe7a:	mov    gs,WORD PTR [ebx]
  41fe7c:	iret   
  41fe7d:	fistp  WORD PTR [ebp+0x739f9ee]
  41fe83:	mov    esp,0x87c251b0
  41fe88:	jo     0x41fed0
  41fe8a:	in     al,0xfd
  41fe8c:	adc    ecx,esp
  41fe8e:	xor    BYTE PTR [ebp-0x1848c21d],cl
  41fe94:	mov    bh,BYTE PTR [eax+ecx*8-0xe]
  41fe98:	pop    eax
  41fe99:	clc    
  41fe9a:	rcr    BYTE PTR [eax],cl
  41fe9c:	out    0x14,eax
  41fe9e:	aam    0x1b
  41fea0:	sub    DWORD PTR [ebp+0x36b5c786],ecx
  41fea6:	sbb    eax,0xc2c4d1c1
  41feab:	xor    ebx,esp
  41fead:	push   0xfb218560
  41feb2:	addr16 xchg edx,eax
  41feb4:	data16 daa 
  41feb6:	xor    bh,ah
  41feb8:	outs   dx,BYTE PTR ds:[esi]
  41feb9:	mov    ecx,0xd652b134
  41febe:	mov    edx,0xbb1bec63
  41fec3:	sub    BYTE PTR [edi],ah
  41fec5:	popa   
  41fec6:	xor    DWORD PTR [ebx-0x67],ebx
  41fec9:	scas   al,BYTE PTR es:[edi]
  41feca:	mov    ds:0x51536ccb,eax
  41fecf:	add    edi,DWORD PTR [edx+0x49]
  41fed2:	mov    bh,BYTE PTR [ebx]
  41fed4:	loopne 0x41ff51
  41fed6:	ret    0x94ba
  41fed9:	adc    esp,DWORD PTR [edi-0x63]
  41fedc:	fst    QWORD PTR [ebp+ebp*4-0x4224f963]
  41fee3:	sahf   
  41fee4:	xchg   ebx,eax
  41fee5:	push   ss
  41fee6:	push   edx
  41fee7:	jg     0x41fe7e
  41fee9:	dec    BYTE PTR [ecx+0x66]
  41feec:	mov    DWORD PTR [ebx+0x31],ecx
  41feef:	xor    al,0x98
  41fef1:	scas   al,BYTE PTR es:[edi]
  41fef2:	push   ecx
  41fef3:	xchg   ecx,eax
  41fef4:	push   ecx
  41fef5:	clc    
  41fef6:	fnstenv fs:[ebx+0x36]
  41fefa:	stc    
  41fefb:	and    BYTE PTR [ebx],bl
  41fefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fefe:	retf   0xe16f
  41ff01:	push   eax
  41ff02:	test   DWORD PTR [ecx],esi
  41ff04:	mov    ecx,0xfddd14cb
  41ff09:	pop    edi
  41ff0a:	(bad)  
  41ff0b:	mov    ch,0x25
  41ff0d:	mov    ecx,0xb083b171
  41ff12:	repnz addr16 aad 0xbd
  41ff16:	cmp    eax,0x1cdc605e
  41ff1b:	mov    esp,0x1979b5b8
  41ff20:	and    DWORD PTR [eax+0x1ea28fbf],esi
  41ff26:	clc    
  41ff27:	ds jle 0x41ff59
  41ff2a:	jl     0x41ff16
  41ff2c:	js     0x41ff6f
  41ff2e:	sti    
  41ff2f:	call   0xb9c5:0xc01f0d3
  41ff36:	mov    ebp,0x4fdaa62c
  41ff3b:	adc    BYTE PTR [edi],0xdd
  41ff3e:	fadd   QWORD PTR [ebp+ecx*1+0x6a2be3b8]
  41ff45:	pop    edi
  41ff46:	pop    edx
  41ff47:	ds lock out dx,eax
  41ff4a:	adc    ah,BYTE PTR [esp+edx*8+0x5e]
  41ff4e:	dec    edi
  41ff4f:	sub    bh,BYTE PTR [esi]
  41ff51:	out    0xe9,al
  41ff53:	pop    ss
  41ff54:	cmp    eax,DWORD PTR [esi+0x60081a18]
  41ff5a:	sub    DWORD PTR [ecx+0x58],0xffffffda
  41ff5e:	dec    edx
  41ff5f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ff61:	push   esi
  41ff62:	adc    eax,0xe5394eb0
  41ff67:	hlt    
  41ff68:	mov    ds:0xc976e5ef,al
  41ff6d:	sti    
  41ff6e:	sahf   
  41ff6f:	(bad)  [edx+ebx*1-0x2c54a5a3]
  41ff76:	stc    
  41ff77:	push   esi
  41ff78:	cmp    DWORD PTR [edx-0x69e341d9],ebp
  41ff7e:	mov    eax,0x219a2918
  41ff83:	ret    
  41ff84:	inc    eax
  41ff85:	fs dec esi
  41ff87:	je     0x420002
  41ff89:	test   al,0xb1
  41ff8b:	sahf   
  41ff8c:	stos   DWORD PTR es:[edi],eax
  41ff8d:	fs push ds
  41ff8f:	sub    DWORD PTR [esi],esp
  41ff91:	shl    ebp,0x72
  41ff94:	pop    esi
  41ff95:	test   BYTE PTR [edx+0x61a62cb1],bh
  41ff9b:	push   eax
  41ff9c:	xchg   ebx,eax
  41ff9d:	inc    ebp
  41ff9e:	jno    0x41ffa3
  41ffa0:	cmp    BYTE PTR [ebx+0x5d],cl
  41ffa3:	(bad)
  41ffa7:	lock bound esp,QWORD PTR [ecx]
  41ffaa:	dec    edi
  41ffab:	xchg   ecx,eax
  41ffac:	ins    DWORD PTR es:[edi],dx
  41ffad:	inc    esp
  41ffae:	in     al,dx
  41ffaf:	xor    bh,0xe6
  41ffb2:	and    al,0x82
  41ffb4:	daa    
  41ffb5:	inc    edx
  41ffb6:	sub    ebx,esi
  41ffb8:	addr16 sbb al,bl
  41ffbb:	int3   
  41ffbc:	stos   BYTE PTR es:[edi],al
  41ffbd:	pop    ecx
  41ffbe:	push   esp
  41ffbf:	adc    al,bh
  41ffc1:	or     BYTE PTR [esi-0x52],bl
  41ffc4:	and    eax,DWORD PTR [edx+0x4c6d1bfa]
  41ffca:	inc    edx
  41ffcb:	and    al,0xa4
  41ffcd:	fbstp  TBYTE PTR [eax+edi*8]
  41ffd0:	add    ch,BYTE PTR ds:0x1bb84d34
  41ffd6:	lock jnp 0x41ff93
  41ffd9:	test   BYTE PTR [ebp-0xb05baab],cl
  41ffdf:	pop    ss
  41ffe0:	in     al,dx
  41ffe1:	aaa    
  41ffe2:	mov    ecx,0xa7387ae1
  41ffe7:	ficom  WORD PTR [ecx]
  41ffe9:	and    eax,0xfd424ef3
  41ffee:	int    0x3f
  41fff0:	out    0xd9,eax
  41fff2:	xchg   edi,eax
  41fff3:	or     cl,BYTE PTR [ebp+0x59823d18]
  41fff9:	cmc    
  41fffa:	ins    BYTE PTR es:[edi],dx
  41fffb:	into   
  41fffc:	adc    DWORD PTR [ebx],esi
  41fffe:	cmp    al,0xa1
  420000:	push   ds
  420001:	in     eax,0xf6
  420003:	dec    edi
  420004:	mov    eax,0x5ca80082
  420009:	xor    eax,0x1d3273b3
  42000e:	cmp    BYTE PTR [ebx-0x1e],ch
  420011:	int    0x43
  420013:	pop    edi
  420014:	test   DWORD PTR [ecx+eax*4],esi
  420017:	shl    bl,1
  420019:	aas    
  42001a:	jp     0x420044
  42001c:	cld    
  42001d:	and    al,0xe1
  42001f:	mov    bl,0xa7
  420021:	mov    al,ds:0xe497cb18
  420026:	mov    cl,0x72
  420028:	push   esi
  420029:	les    edi,FWORD PTR [eax-0x66]
  42002c:	and    bl,cl
  42002e:	jns    0x420098
  420030:	add    DWORD PTR [ecx-0x10dd8846],esp
  420036:	icebp  
  420037:	jmp    0xf38cc14b
  42003c:	in     al,dx
  42003d:	sbb    al,0xaa
  42003f:	test   BYTE PTR [ebx],ch
  420041:	jg     0x4200a5
  420043:	dec    DWORD PTR [eax-0x20]
  420046:	mov    BYTE PTR [eax],bl
  420048:	dec    esp
  420049:	(bad)  
  42004a:	pause  
  42004c:	or     BYTE PTR [ebx-0x6955f5d1],dl
  420052:	xchg   ecx,eax
  420053:	(bad)  
  420054:	cwde   
  420055:	sub    edx,DWORD PTR [ebp+0x40]
  420058:	sub    BYTE PTR ds:0x2f9d256f,dl
  42005e:	loopne 0x420019
  420060:	mov    ecx,0x35a379f0
  420065:	addr16 mov ecx,0xe41f8922
  42006b:	pop    es
  42006c:	jo     0x42007e
  42006e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42006f:	cmc    
  420070:	enter  0xe0d4,0x1d
  420074:	add    ebx,ebp
  420076:	loop   0x41fffc
  420078:	lds    edx,FWORD PTR [edx]
  42007a:	xchg   edi,eax
  42007b:	fs push 0xd8f55973
  420081:	sbb    BYTE PTR [edi],bh
  420083:	jns    0x420100
  420085:	fild   DWORD PTR [esi-0x68]
  420088:	dec    ebx
  420089:	test   DWORD PTR [edx-0x3d446994],edx
  42008f:	out    0x3c,al
  420091:	mov    edx,0x513aee41
  420096:	jne    0x42006c
  420098:	mov    ds:0x3c1725fe,eax
  42009d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42009e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42009f:	jmp    0x900f:0xab06488
  4200a6:	jbe    0x42007a
  4200a8:	(bad)  
  4200a9:	nop
  4200aa:	(bad)  
  4200ab:	or     BYTE PTR [edx+esi*1],al
  4200ae:	cdq    
  4200af:	pop    ebx
  4200b0:	jo     0x4200f0
  4200b2:	ror    BYTE PTR [edx-0x3f],1
  4200b5:	adc    BYTE PTR [edi-0x48],0xa0
  4200b9:	hlt    
  4200ba:	dec    ebx
  4200bb:	inc    esp
  4200bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200bd:	mov    al,0xc9
  4200bf:	pop    DWORD PTR [ebx+0x709f539e]
  4200c5:	push   ss
  4200c6:	jns    0x4200ae
  4200c8:	(bad)  
  4200c9:	std    
  4200ca:	sub    ebx,eax
  4200cc:	arpl   WORD PTR [ecx-0x1d],ax
  4200cf:	jl     0x4200e5
  4200d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d2:	sub    ebp,edx
  4200d4:	jns    0x42014d
  4200d6:	push   ebp
  4200d7:	pop    ds
  4200d8:	sbb    al,0x4f
  4200da:	xchg   edx,eax
  4200db:	push   ecx
  4200dc:	jecxz  0x42013b
  4200de:	adc    eax,0xe6953ad9
  4200e3:	ss or  al,0x43
  4200e6:	(bad)  
  4200e7:	pop    ebp
  4200e8:	hlt    
  4200e9:	test   DWORD PTR [eax+0x43],edi
  4200ec:	into   
  4200ed:	aam    0xf6
  4200ef:	addr16 js 0x42011e
  4200f2:	jo     0x4200c5
  4200f4:	fdiv   st(5),st
  4200f6:	mov    ebp,0x844c879b
  4200fb:	mov    bh,0xa7
  4200fd:	sub    al,0x89
  4200ff:	dec    esp
  420100:	xchg   ecx,eax
  420101:	push   ecx
  420102:	gs jl  0x42012e
  420105:	and    cl,BYTE PTR [edi-0x4e]
  420108:	inc    edx
  420109:	push   DWORD PTR [ecx-0x4a]
  42010c:	add    eax,0xbe19f4f2
  420111:	retf   
  420112:	add    eax,0x179f6e63
  420117:	or     BYTE PTR [ebx+edx*2+0x4e],bl
  42011b:	ret    
  42011c:	or     ecx,esp
  42011e:	add    ch,ch
  420120:	int    0xc6
  420122:	mov    dl,0xb1
  420124:	or     al,ah
  420126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420127:	add    eax,0x1c08471c
  42012c:	xor    al,0xe
  42012e:	xchg   edx,ebp
  420130:	stc    
  420131:	pusha  
  420132:	jmp    0xc54a:0x36d49713
  420139:	(bad)  
  42013a:	jmp    0x42018e
  42013c:	adc    ecx,esp
  42013e:	add    eax,0x358a96e
  420143:	and    ecx,DWORD PTR [edi+edx*4+0x66d4a486]
  42014a:	pop    esi
  42014b:	xor    eax,0x7fd626a7
  420150:	fdivrp st(0),st
  420152:	sbb    eax,DWORD PTR [edi-0x5e]
  420155:	test   al,0x42
  420157:	dec    esp
  420158:	cdq    
  420159:	fs pop edx
  42015b:	shl    DWORD PTR [ebx+0x697028f6],cl
  420161:	pop    ebx
  420162:	cmp    bh,BYTE PTR [esi]
  420164:	pop    ebx
  420165:	(bad)  [ebx+eiz*2+0x35f40662]
  42016c:	jbe    0x4201d1
  42016e:	cli    
  42016f:	mov    DWORD PTR [eax],0x24b55f5e
  420175:	add    ch,BYTE PTR [esi-0x21e3b3d9]
  42017b:	pushf  
  42017c:	hlt    
  42017d:	pop    ebp
  42017e:	jae    0x42011c
  420180:	fwait
  420181:	jnp    0x4201d0
  420183:	sbb    al,0xb4
  420185:	mov    al,0xa
	...
  42018f:	add    BYTE PTR [eax],al
  420191:	xchg   esp,eax
  420192:	or     bl,BYTE PTR [ebp-0x6a6060f4]
  420198:	call   0x8ee4:0x7836e732
  42019f:	(bad)  
  4201a1:	adc    DWORD PTR [ecx+eax*1+0x0],edi
  4201a5:	scas   al,BYTE PTR es:[edi]
  4201a6:	add    eax,DWORD PTR [eax]
  4201a8:	add    BYTE PTR [ebp-0x22],ch
  4201ab:	lods   ax,WORD PTR ds:[esi]
  4201ad:	jnp    0x4201cf
  4201af:	adc    dl,al
  4201b1:	repz mov ds:0x9a182f61,eax
  4201b7:	pop    ss
  4201b8:	push   eax
  4201b9:	add    al,0x6a
  4201bb:	std    
  4201bc:	push   ecx
  4201bd:	lock pop ds
  4201bf:	sbb    ah,BYTE PTR [ebx]
  4201c1:	mov    eax,0x7625864a
  4201c6:	xchg   edx,eax
  4201c7:	sub    al,ch
  4201c9:	cmp    bl,0x93
  4201cc:	in     eax,dx
  4201cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ce:	sub    esi,DWORD PTR [esi+0x385b4f83]
  4201d4:	mov    dl,al
  4201d6:	scas   eax,DWORD PTR es:[edi]
  4201d7:	dec    ecx
  4201d8:	jmp    0x3a256bca
  4201dd:	fisttp DWORD PTR [eax-0x12d80e62]
  4201e3:	into   
  4201e4:	cmc    
  4201e5:	test   eax,0xbe929d4
  4201ea:	inc    esi
  4201eb:	ins    BYTE PTR es:[edi],dx
  4201ec:	test   DWORD PTR [ebx-0x504f3ddb],0x3701c7bb
  4201f6:	add    dh,BYTE PTR [ebx+edi*2-0x76]
  4201fa:	push   ds
  4201fb:	cld    
  4201fc:	test   al,0xe1
  4201fe:	dec    ebx
  4201ff:	xor    al,0x17
  420201:	pop    esp
  420202:	xor    BYTE PTR [esi+edi*8+0x18459a50],cl
  420209:	mov    BYTE PTR [ebx+ebx*8],bl
  42020c:	jbe    0x42023f
  42020e:	xchg   DWORD PTR [edi+eax*8],ebx
  420211:	jecxz  0x4201e0
  420213:	stos   BYTE PTR es:[edi],al
  420214:	pop    esp
  420215:	add    eax,DWORD PTR [esi-0x2c1d8e5]
  42021b:	sbb    al,0x53
  42021d:	sbb    ecx,ecx
  42021f:	adc    ch,ch
  420221:	jmp    0x42021f
  420223:	shl    DWORD PTR [ebx+0x3969d73b],0xaf
  42022a:	mov    dl,0xb6
  42022c:	enter  0x75fa,0xc2
  420230:	std    
  420231:	pusha  
  420232:	pop    ebp
  420233:	int3   
  420234:	adc    bl,al
  420236:	ins    BYTE PTR es:[edi],dx
  420237:	iret   
  420238:	and    DWORD PTR [edx],0xda6d09c3
  42023e:	aam    0x11
  420240:	test   eax,0x69025715
  420245:	not    DWORD PTR [esi]
  420247:	or     eax,0x43f7130c
  42024c:	adc    eax,0x9e1ae489
  420251:	loopne 0x420207
  420253:	cwde   
  420254:	test   DWORD PTR [edx+0x7d],ecx
  420257:	add    eax,0xac1772a4
  42025c:	mov    edi,0xbd7cfc5f
  420261:	jo     0x4202de
  420263:	rcr    DWORD PTR [edx+ebp*2+0x66a98b38],cl
  42026a:	xchg   esi,eax
  42026b:	retf   
  42026c:	jle    0x420201
  42026e:	sbb    esp,DWORD PTR [esi+0x1d]
  420271:	fdiv   DWORD PTR [ecx+0x38]
  420274:	retf   
  420275:	cdq    
  420276:	cmp    ebp,ebx
  420278:	fiadd  DWORD PTR [esi-0x1]
  42027b:	mov    dl,0xc0
  42027d:	sub    DWORD PTR [ecx+ecx*4-0x551610c0],esi
  420284:	iret   
  420285:	push   ss
  420286:	test   bl,ah
  420288:	fs loope 0x4202e1
  42028b:	pop    eax
  42028c:	mov    bh,0x77
  42028e:	retf   0xc797
  420291:	or     esi,DWORD PTR ss:[ebp-0x4e1f0d7f]
  420298:	fs mov cl,0xdc
  42029b:	inc    esp
  42029c:	inc    ebp
  42029d:	sub    eax,0x31c402b9
  4202a2:	mov    ecx,0x4247c84f
  4202a7:	mov    bh,0x1f
  4202a9:	scas   eax,DWORD PTR es:[edi]
  4202aa:	lods   eax,DWORD PTR ds:[esi]
  4202ab:	test   al,0xc5
  4202ad:	jg     0x4202b1
  4202af:	aaa    
  4202b0:	cmp    BYTE PTR [ebp*8+0x8e3b6e4],dh
  4202b7:	inc    ebp
  4202b8:	leave  
  4202b9:	inc    ecx
  4202ba:	sub    ebp,DWORD PTR [ebp+0x4562091b]
  4202c0:	sbb    al,0xf9
  4202c2:	nop    DWORD PTR [esi]
  4202c5:	test   al,0x96
  4202c7:	ss cli 
  4202c9:	jno    0x42033e
  4202cb:	mov    ds:0xf6ffb7bf,al
  4202d0:	mov    ch,0x19
  4202d2:	icebp  
  4202d3:	inc    esp
  4202d4:	out    dx,eax
  4202d5:	clc    
  4202d6:	sub    dl,BYTE PTR [eax-0x72]
  4202d9:	mov    ebx,0xb0902c08
  4202de:	inc    edi
  4202df:	loopne 0x420299
  4202e1:	out    dx,eax
  4202e2:	mov    edi,DWORD PTR [esi]
  4202e4:	int3   
  4202e5:	mov    ah,0x21
  4202e7:	push   edi
  4202e8:	xchg   BYTE PTR ds:0x1beed4ca,ch
  4202ee:	add    ah,BYTE PTR ds:0xd001c70b
  4202f4:	cwde   
  4202f5:	iret   
  4202f6:	inc    ecx
  4202f7:	dec    ebx
  4202f8:	test   edi,ebp
  4202fa:	xchg   ebx,eax
  4202fb:	or     ecx,DWORD PTR [edx+0x79]
  4202fe:	add    al,0x7f
  420300:	and    ch,al
  420302:	mov    cl,0x38
  420304:	inc    eax
  420305:	call   FWORD PTR [ebp-0x495907d8]
  42030b:	(bad)  
  42030c:	push   edx
  42030d:	adc    dl,ah
  42030f:	ffreep st(6)
  420311:	jno    0x4202c7
  420313:	push   edi
  420314:	addr16 gs int3 
  420317:	sub    eax,0x85326255
  42031c:	adc    DWORD PTR [edx+0x18],eax
  42031f:	push   0x4564fc91
  420324:	ficomp WORD PTR [ebx]
  420326:	(bad)
  42032b:	cmp    ch,bh
  42032d:	in     eax,0x73
  42032f:	pop    esi
  420330:	pop    esi
  420331:	mov    dh,0x9c
  420333:	jnp    0x420365
  420335:	fsub   st,st(1)
  420337:	pop    ecx
  420338:	push   ds
  420339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42033a:	mov    BYTE PTR [edx-0x18],bl
  42033d:	mov    al,ds:0xb6a3df78
  420342:	xor    BYTE PTR [ebp-0x60c09e51],0x10
  420349:	or     dh,BYTE PTR [edi]
  42034b:	xchg   esi,eax
  42034c:	push   eax
  42034d:	push   esp
  42034e:	daa    
  42034f:	fs mov ah,0xb8
  420352:	std    
  420353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420354:	mov    fs:0xba3883b2,al
  42035a:	pop    ebp
  42035b:	pop    esi
  42035c:	loopne 0x420358
  42035e:	mov    esi,0x91ebd81
  420363:	mov    dl,0xde
  420365:	inc    edi
  420366:	mov    dh,0x78
  420368:	mov    dl,0x7e
  42036a:	pop    es
  42036b:	in     al,0x70
  42036d:	jns    0x42030f
  42036f:	mov    ebp,0x5d183d52
  420374:	fild   QWORD PTR [eax+0x1472839f]
  42037a:	enter  0xcf2c,0x11
  42037e:	jecxz  0x4203c5
  420380:	gs sub esi,0x62
  420384:	push   edi
  420385:	stos   DWORD PTR es:[edi],eax
  420386:	push   es
  420387:	xlat   BYTE PTR ds:[ebx]
  420388:	out    dx,al
  420389:	call   0xa9f77a12
  42038e:	dec    ebp
  420390:	aas    
  420391:	xor    cl,BYTE PTR [eax+0x513e6ac3]
  420397:	xchg   ecx,eax
  420398:	and    al,0x84
  42039a:	adc    edx,DWORD PTR [ebx]
  42039c:	pop    ss
  42039d:	cmp    BYTE PTR [ebx],dh
  42039f:	test   al,0x7a
  4203a1:	sub    dl,dh
  4203a3:	out    0xfe,eax
  4203a5:	sar    DWORD PTR [ebx+0x3b815eb1],cl
  4203ab:	sub    DWORD PTR [ebx],esi
  4203ad:	aas    
  4203ae:	add    al,0xe
  4203b0:	adc    DWORD PTR [ebp-0x531d915b],0xfe365039
  4203ba:	int3   
  4203bb:	xchg   DWORD PTR [edx],ebx
  4203bd:	jle    0x4203f3
  4203bf:	loopne 0x4203be
  4203c1:	enter  0x7412,0x13
  4203c5:	stc    
  4203c6:	and    eax,0x556f6480
  4203cb:	out    0xc5,eax
  4203cd:	fisttp QWORD PTR ds:[ebx+0x39446a0e]
  4203d4:	push   ebx
  4203d5:	cld    
  4203d6:	dec    ebx
  4203d7:	xor    DWORD PTR [edi],edi
  4203d9:	les    ebx,FWORD PTR [ebx]
  4203db:	popf   
  4203dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203dd:	cmp    al,0xe
  4203df:	scas   eax,DWORD PTR es:[edi]
  4203e0:	fld    DWORD PTR [eax-0x11]
  4203e3:	sub    al,0xe7
  4203e5:	push   ds
  4203e6:	jle    0x42040f
  4203e8:	out    dx,al
  4203e9:	in     al,0x53
  4203eb:	xor    esi,DWORD PTR ds:0x33f4b5e6
  4203f1:	sub    eax,0x935df4b5
  4203f6:	dec    ecx
  4203f7:	mov    esp,0x41d3769e
  4203fc:	shr    DWORD PTR [ecx+0x74e568cf],0xf7
  420403:	aad    0x46
  420405:	adc    edi,0xffffffb7
  420408:	aam    0x9a
  42040a:	and    al,0x7e
  42040c:	test   BYTE PTR [esp+ecx*2+0xe],ah
  420410:	sbb    BYTE PTR [esi-0x5b],dl
  420413:	repz dec ecx
  420415:	call   0x43a2:0xd6132511
  42041c:	fisubr WORD PTR [edx+0x34e22fba]
  420422:	scas   al,BYTE PTR es:[edi]
  420423:	dec    edx
  420424:	adc    BYTE PTR [edi+edi*4+0x24449535],bh
  42042b:	sub    eax,0x326d4461
  420430:	xor    ebp,ecx
  420432:	aas    
  420433:	jl     0x420402
  420435:	jge    0x4204a0
  420437:	and    bh,bl
  420439:	jno    0x4203d1
  42043b:	mov    ch,0x26
  42043d:	jl     0x159bc599
  420443:	addr16 enter 0x311b,0x99
  420448:	mov    ebp,0x3483bba2
  42044d:	sbb    edi,edx
  42044f:	repnz int 0x20
  420452:	jns    0x4204ca
  420454:	adc    eax,DWORD PTR [ecx]
  420456:	pushf  
  420457:	daa    
  420458:	push   es
  420459:	test   al,0x1c
  42045b:	mov    ah,0x55
  42045d:	cmp    DWORD PTR [edi+0x754f5fd2],ebp
  420463:	fcmovnu st,st(1)
  420465:	jmp    0x1a11f6f3
  42046a:	out    dx,eax
  42046b:	out    0x1,eax
  42046d:	leave  
  42046e:	xchg   esi,eax
  42046f:	shl    DWORD PTR [esi],0x65
  420472:	ss fcmovne st,st(3)
  420475:	add    ebp,0x65081c9
  42047b:	jp     0x420458
  42047d:	and    BYTE PTR [esi-0xf],0xce
  420481:	sub    edx,esp
  420483:	lahf   
  420484:	mov    dh,0xcb
  420486:	bound  esi,QWORD PTR [ebp+0x2d]
  420489:	inc    esp
  42048a:	inc    ecx
  42048b:	sub    cl,BYTE PTR [edx-0x69ccd5d5]
  420491:	mov    dh,0x0
  420493:	cwde   
  420494:	jg     0x420476
  420496:	retf   
  420497:	xor    bl,ah
  420499:	or     al,0xd7
  42049b:	dec    esi
  42049c:	add    ebp,DWORD PTR [ecx+0x3a]
  42049f:	test   DWORD PTR [esi],0x7f5145b2
  4204a5:	cmp    al,0xc7
  4204a7:	rol    DWORD PTR [ebp-0x6d],0x9a
  4204ab:	in     eax,dx
  4204ac:	inc    esi
  4204ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204ae:	dec    esi
  4204af:	mov    cl,BYTE PTR [ebp+ebx*1-0x2f24ef66]
  4204b6:	push   edi
  4204b7:	or     ch,BYTE PTR [esi+0x7d]
  4204ba:	mov    dh,0xff
  4204bc:	stos   DWORD PTR es:[edi],eax
  4204bd:	or     eax,0xb40bf3cf
  4204c2:	add    al,BYTE PTR ds:0x3edd0e92
  4204c8:	sahf   
  4204c9:	mov    edx,0x2448f7ea
  4204ce:	std    
  4204cf:	cmp    eax,0x2ecec111
  4204d4:	cld    
  4204d5:	je     0x42048c
  4204d7:	hlt    
  4204d8:	xchg   BYTE PTR [esp+ebp*8],dh
  4204db:	sub    eax,0x2370a8d3
  4204e0:	retf   
  4204e1:	xor    al,al
  4204e3:	mov    dl,0x45
  4204e5:	adc    eax,0x9f18f340
  4204ea:	sub    DWORD PTR [esi+edi*2+0x1a],eax
  4204ee:	mov    al,ds:0x9eb093f3
  4204f3:	mov    bl,BYTE PTR [eax]
  4204f5:	dec    esi
  4204f6:	push   es
  4204f7:	push   eax
  4204f8:	add    al,0xf8
  4204fa:	xor    ah,ch
  4204fc:	mov    esi,0x814eeef0
  420501:	dec    ebx
  420502:	into   
  420503:	push   esp
  420504:	jp     0x42052d
  420506:	ss gs jmp 0x6f24:0x89176e05
  42050f:	and    al,0x43
  420511:	or     bl,bh
  420513:	cmp    edi,edx
  420515:	jmp    0x724e48f7
  42051a:	xlat   BYTE PTR ds:[ebx]
  42051b:	inc    ebx
  42051c:	or     al,0x93
  42051e:	and    edi,DWORD PTR ds:0xdd7caacc
  420524:	push   edx
  420525:	add    cl,dh
  420527:	lds    esp,FWORD PTR [ecx+0x54]
  42052a:	ficom  DWORD PTR [ecx+0x3b70fb5d]
  420530:	adc    al,BYTE PTR [ecx]
  420532:	cli    
  420533:	add    ecx,DWORD PTR [ebp+0x4412d4b2]
  420539:	sub    BYTE PTR [edi-0x933e377],ch
  42053f:	fsubrp st(6),st
  420541:	mov    ebx,0x491c1781
  420546:	push   0xd13cf473
  42054b:	sub    eax,0xcb642f2b
  420550:	mov    bl,0x5c
  420552:	mov    dh,0x2e
  420554:	xor    al,0xdc
  420556:	jmp    0x0:0x0
  42055d:	add    BYTE PTR [eax],al
  42055f:	add    BYTE PTR [eax],al
  420561:	nop
  420562:	mov    bl,0x8c
  420564:	fild   QWORD PTR [edi-0x1b002c01]
  42056a:	and    dh,0xd4
  42056d:	push   eax
  42056e:	mov    BYTE PTR [edi-0x36],bl
  420571:	mov    edi,0xae00017f
  420576:	add    eax,DWORD PTR [eax]
  420578:	add    BYTE PTR [edx-0x7c803e09],cl
  42057e:	fbstp  TBYTE PTR [ecx]
  420580:	pop    ebp
  420581:	and    DWORD PTR ds:0x60681d14,ebx
  420587:	sahf   
  420588:	(bad)  
  420589:	stos   DWORD PTR es:[edi],eax
  42058a:	repz popf 
  42058c:	xchg   BYTE PTR [ebx],bl
  42058e:	lods   al,BYTE PTR ds:[esi]
  42058f:	and    edi,DWORD PTR [ecx]
  420591:	jbe    0x4205fe
  420593:	(bad)  
  420594:	mov    ds:0xcd2b06ff,al
  420599:	hlt    
  42059a:	xchg   ebx,eax
  42059b:	and    al,0x20
  42059d:	and    ebx,DWORD PTR ds:0xc714aaed
  4205a3:	in     al,0xa
  4205a5:	mov    eax,0x796fe772
  4205aa:	(bad)  
  4205ab:	and    eax,0xbe7bde5a
  4205b0:	add    dh,dh
  4205b2:	sub    al,0x4d
  4205b4:	repnz shl BYTE PTR [edx],cl
  4205b7:	das    
  4205b8:	mov    dh,0xce
  4205ba:	adc    esi,DWORD PTR [ebx+0x26]
  4205bd:	xchg   ebx,eax
  4205be:	cmp    eax,0x5f22b29e
  4205c3:	ret    0xe1d6
  4205c6:	sbb    DWORD PTR [esi],ecx
  4205c8:	std    
  4205c9:	es test eax,0xec5eab8f
  4205cf:	jmp    0xe7abf161
  4205d4:	in     al,0xd8
  4205d6:	call   0x5392:0xdc5ebb72
  4205dd:	fmul   st(4),st
  4205df:	mov    bh,0x1c
  4205e1:	sbb    eax,ecx
  4205e3:	pop    ds
  4205e4:	adc    eax,DWORD PTR [ebp+0x65e24346]
  4205ea:	ja     0x4205a9
  4205ec:	mov    edi,0x76fc6aac
  4205f1:	ficom  DWORD PTR [esi-0x50c945e0]
  4205f7:	loopne 0x4205ed
  4205f9:	adc    ax,0xb029
  4205fd:	or     al,0xc8
  4205ff:	dec    eax
  420600:	jne    0x42067d
  420602:	and    cl,BYTE PTR [ebx+edx*8]
  420605:	call   0x2e45:0x9fd2e0cc
  42060c:	mov    ch,0x3a
  42060e:	ret    0x30ed
  420611:	or     ebx,edx
  420613:	ins    DWORD PTR es:[edi],dx
  420614:	repz mov ah,al
  420617:	cmp    al,0x1c
  420619:	xchg   ecx,eax
  42061a:	je     0x4205d9
  42061c:	add    eax,0xaddf3650
  420621:	hlt    
  420622:	mov    esi,0x78801b98
  420627:	dec    eax
  420628:	add    eax,0x8b2199e1
  42062d:	in     eax,dx
  42062e:	cwde   
  42062f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420630:	add    ch,BYTE PTR [ebp+0x1701e17a]
  420636:	scas   al,BYTE PTR es:[edi]
  420637:	in     eax,0xe2
  420639:	test   DWORD PTR [ebx+0x4d8f2a53],0x590f0598
  420643:	add    al,0x29
  420645:	sbb    eax,0xe19b3bda
  42064a:	pop    edx
  42064b:	mov    eax,ds:0xa3af225d
  420650:	arpl   WORD PTR [ebp-0x5d],ax
  420653:	push   eax
  420654:	fstp   QWORD PTR [edi-0x5be2b448]
  42065a:	pop    esp
  42065b:	sub    al,0x24
  42065d:	out    0x49,al
  42065f:	ds pop ss
  420661:	icebp  
  420662:	leave  
  420663:	dec    esp
  420664:	int3   
  420665:	inc    eax
  420666:	and    eax,DWORD PTR [edi+0x5783fc61]
  42066c:	shr    BYTE PTR [eax+ebx*2],0x94
  420670:	mov    bl,0xf0
  420672:	or     al,0xe6
  420674:	sub    ebp,DWORD PTR [eax-0x2c0a0f33]
  42067a:	cmp    BYTE PTR [edx],bh
  42067c:	pop    edx
  42067d:	mov    ah,al
  42067f:	mov    edi,0xa99d6d98
  420684:	xchg   ebx,eax
  420685:	xchg   edx,eax
  420686:	jb     0x420696
  420688:	sbb    eax,0xa21de1d3
  42068d:	sbb    eax,0x9baf5613
  420692:	xchg   DWORD PTR [edi+0xcd182a1],edx
  420698:	xchg   edx,eax
  420699:	mov    bh,al
  42069b:	jns    0x42069a
  42069d:	jne    0x4206ba
  42069f:	mov    cl,0x23
  4206a1:	lods   al,BYTE PTR ds:[esi]
  4206a2:	lea    edi,[ebp-0x3ed5359c]
  4206a8:	(bad)  
  4206a9:	sbb    ah,ch
  4206ab:	push   edi
  4206ac:	into   
  4206ad:	ffreep st(2)
  4206af:	push   0x3417f4ad
  4206b4:	mov    ebp,0xc6b3695a
  4206b9:	addr16 or dh,al
  4206bc:	cmp    BYTE PTR [ecx-0x52],al
  4206bf:	dec    ebp
  4206c0:	lea    esp,[edx-0x48]
  4206c3:	push   ds
  4206c4:	aam    0x45
  4206c6:	test   ch,al
  4206c8:	lock nop
  4206ca:	jno    0x420708
  4206cc:	cmp    al,0x99
  4206ce:	and    eax,0xfb724906
  4206d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206d4:	jo     0x420695
  4206d6:	cli    
  4206d7:	rcr    eax,cl
  4206d9:	mov    al,0x76
  4206db:	stos   BYTE PTR es:[edi],al
  4206dc:	sub    esp,DWORD PTR [esi]
  4206de:	rcl    DWORD PTR [ecx],cl
  4206e0:	mov    ds,WORD PTR [ecx]
  4206e2:	inc    edi
  4206e3:	jge    0x42068b
  4206e5:	and    DWORD PTR [ecx],0xa377f17a
  4206eb:	push   eax
  4206ec:	fmul   st,st(5)
  4206ee:	dec    edi
  4206ef:	sub    ah,BYTE PTR [ebx-0x46f78d45]
  4206f5:	lahf   
  4206f6:	jbe    0x4206a7
  4206f8:	iret   
  4206f9:	dec    ebp
  4206fa:	int    0xc2
  4206fc:	add    eax,0x278826e4
  420701:	cmc    
  420702:	mov    cs:0x86eae635,al
  420708:	das    
  420709:	jmp    0x420719
  42070b:	ds jns 0x420725
  42070e:	jg     0x4206e6
  420710:	and    ah,BYTE PTR [ebp-0x16]
  420713:	adc    ch,BYTE PTR [ebx]
  420715:	jmp    0x420795
  420717:	mov    ebp,ecx
  420719:	ins    DWORD PTR es:[edi],dx
  42071a:	jnp    0x42076d
  42071c:	push   ss
  42071d:	sbb    BYTE PTR [ecx-0x3c6c1b51],ch
  420723:	jp     0x4206f2
  420725:	ds push ebx
  420727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420728:	je     0x420725
  42072a:	cld    
  42072b:	push   ss
  42072c:	or     eax,0xddfce93a
  420731:	cmp    eax,0x7ed1abfe
  420736:	pop    ecx
  420737:	div    BYTE PTR [ecx]
  420739:	sub    BYTE PTR [ecx],0xee
  42073c:	dec    esp
  42073d:	push   edx
  42073e:	dec    esp
  42073f:	cs std 
  420741:	std    
  420742:	jnp    0x42070e
  420744:	fst    DWORD PTR ds:0x5bcc30e8
  42074a:	out    0x11,eax
  42074c:	sar    esp,1
  42074e:	pop    ecx
  42074f:	push   cs
  420750:	in     eax,dx
  420751:	dec    ecx
  420752:	gs imul ebp,ebx,0xffffff9b
  420756:	(bad)
  420759:	or     al,0x96
  42075b:	lods   eax,DWORD PTR ds:[esi]
  42075c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42075d:	cdq    
  42075e:	pop    edi
  42075f:	mov    ebx,0xf2f3255b
  420764:	icebp  
  420765:	outs   dx,BYTE PTR ds:[esi]
  420766:	and    DWORD PTR [edx],edi
  420768:	xor    edx,DWORD PTR [esi]
  42076a:	adc    eax,0x121d3ee3
  42076f:	je     0x420707
  420771:	in     al,dx
  420772:	sbb    DWORD PTR [ebp-0x63],esp
  420775:	addr16 in eax,dx
  420777:	out    0xbd,eax
  420779:	pop    ebp
  42077a:	ret    0x99fd
  42077d:	adc    dl,BYTE PTR [edi+edx*4]
  420780:	test   BYTE PTR [edx+0x6477f0eb],dh
  420786:	(bad)  
  420787:	mov    dl,0x2e
  420789:	sbb    esi,ebx
  42078b:	mov    al,0xb2
  42078d:	lahf   
  42078e:	jb     0x4207a7
  420790:	xor    DWORD PTR [edi+ebp*4+0x6d],ecx
  420794:	pop    ebp
  420795:	out    0xcf,al
  420797:	shufps xmm4,xmm6,0x6a
  42079b:	mov    ebp,0xe4108191
  4207a0:	inc    esi
  4207a1:	int    0x70
  4207a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207a4:	cmp    eax,0xced71e54
  4207a9:	mov    edx,0xfb813ae7
  4207ae:	and    eax,0x1fe6a223
  4207b3:	mov    edi,0x88c07dc0
  4207b8:	sbb    edx,DWORD PTR [edi-0x61dea071]
  4207be:	ror    DWORD PTR [edx],cl
  4207c0:	dec    ebx
  4207c1:	cli    
  4207c2:	jns    0x42074e
  4207c4:	jae    0x420832
  4207c6:	aas    
  4207c7:	popf   
  4207c8:	or     eax,0x5d13e13
  4207cd:	xlat   BYTE PTR ds:[ebx]
  4207ce:	std    
  4207cf:	repz cs jbe 0x4207e9
  4207d3:	dec    eax
  4207d4:	cli    
  4207d5:	jge    0x4207b6
  4207d7:	dec    esp
  4207d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d9:	cmp    edi,DWORD PTR [ebp-0x24]
  4207dc:	cmp    ch,al
  4207de:	mov    ds:0xebc0bd06,eax
  4207e3:	test   eax,0x97004620
  4207e8:	pmulhuw mm6,QWORD PTR cs:[edx]
  4207ec:	sub    al,0x6c
  4207ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ef:	aad    0x4b
  4207f1:	test   bh,bh
  4207f3:	repz or eax,DWORD PTR [eax-0x2bf9c45c]
  4207fa:	jmp    0xf1b4:0x790f742e
  420801:	shl    DWORD PTR [edx+edx*1+0x24],0x51
  420806:	int    0x36
  420808:	pop    edi
  420809:	add    DWORD PTR [eax+0xc8b00b6],ecx
  42080f:	test   eax,0xd8f7d8ed
  420814:	ficomp DWORD PTR ds:0xad32249a
  42081a:	dec    esp
  42081b:	mov    al,BYTE PTR [ebx]
  42081d:	jmp    0x5efe:0xb98a1dc7
  420824:	cmp    eax,0x7bd995b5
  420829:	(bad)  
  42082a:	out    0x10,eax
  42082c:	cmp    esp,DWORD PTR [ecx+0x37f2e3d4]
  420832:	stos   BYTE PTR es:[edi],al
  420833:	pop    ecx
  420834:	adc    DWORD PTR [ebx+esi*4+0x250796b0],ebx
  42083b:	push   ds
  42083c:	jo     0x420808
  42083e:	shr    DWORD PTR [edx+0x1b],1
  420841:	test   BYTE PTR [edx*4+0x6511dfd],bl
  420848:	mov    ebp,0x9a01c98a
  42084d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42084e:	call   0x52ee:0xb8ea740b
  420855:	inc    edi
  420856:	lods   eax,DWORD PTR ds:[esi]
  420857:	icebp  
  420858:	xchg   ecx,eax
  420859:	fst    QWORD PTR [ecx+0x5a]
  42085c:	int3   
  42085d:	or     al,0x94
  42085f:	sub    eax,0xf13f9894
  420864:	jnp    0x420800
  420866:	hlt    
  420867:	push   esi
  420868:	push   eax
  420869:	dec    edx
  42086a:	outs   dx,DWORD PTR ds:[esi]
  42086b:	add    ebp,DWORD PTR [ecx]
  42086d:	imul   ebx,eax,0xeb7ec5f8
  420873:	push   cs
  420874:	ins    BYTE PTR es:[edi],dx
  420875:	xchg   esp,eax
  420876:	mov    bh,0x99
  420878:	dec    ebx
  420879:	mov    ebp,0xce115d0f
  42087e:	std    
  42087f:	daa    
  420880:	and    eax,0xc51355cc
  420885:	les    edi,FWORD PTR [ebx-0x5e9aa695]
  42088b:	jnp    0x420835
  42088d:	adc    ebp,DWORD PTR [ecx+0x4e]
  420890:	fs xchg ebx,eax
  420892:	daa    
  420893:	and    DWORD PTR [ebp-0x9],ebp
  420896:	xlat   BYTE PTR ds:[ebx]
  420897:	cs cmp al,0x80
  42089a:	aad    0x79
  42089c:	in     eax,0x9a
  42089e:	popa   
  42089f:	add    esi,DWORD PTR [edx-0x73]
  4208a2:	inc    ecx
  4208a3:	sub    eax,0xe182541b
  4208a8:	xor    eax,0xf300e31c
  4208ad:	inc    DWORD PTR [edx]
  4208af:	cmp    al,0x5b
  4208b1:	out    dx,al
  4208b2:	fs xchg edx,eax
  4208b4:	dec    esp
  4208b5:	es inc ecx
  4208b7:	loopne 0x420849
  4208b9:	leave  
  4208ba:	xchg   ebp,eax
  4208bb:	pusha  
  4208bc:	ror    eax,1
  4208be:	cmp    eax,0xd482b0ba
  4208c3:	pusha  
  4208c4:	out    dx,eax
  4208c5:	shr    BYTE PTR [ebx],0xb4
  4208c8:	cdq    
  4208c9:	inc    edx
  4208ca:	or     edx,0x7c2629d1
  4208d0:	jne    0x4208f9
  4208d2:	sbb    ah,dh
  4208d4:	test   eax,0xaf328b07
  4208d9:	call   0x47e78464
  4208de:	mov    esi,DWORD PTR [esi-0x28e86b44]
  4208e4:	fisub  DWORD PTR [ebx]
  4208e6:	ret    
  4208e7:	mov    esi,0x1f37ffb9
  4208ec:	adc    eax,0x6c1a2bf6
  4208f1:	mov    al,ds:0x3aad26dc
  4208f6:	mov    bl,0xd5
  4208f8:	jmp    0xe8d52984
  4208fd:	dec    esp
  4208fe:	pop    ebp
  4208ff:	dec    eax
  420900:	add    bh,BYTE PTR [eax+0x51]
  420903:	int    0x7d
  420905:	jns    0x420889
  420907:	addr16 aad 0xf8
  42090a:	sub    bh,0xdb
  42090d:	icebp  
  42090e:	repnz cmp al,bl
  420911:	test   eax,0x72f60ced
  420916:	imul   ebp,DWORD PTR [edx],0xa448d3ce
  42091c:	cmp    al,0x14
  42091e:	cmp    eax,ebx
  420920:	rcl    ch,cl
  420922:	popa   
  420923:	rcr    BYTE PTR ds:0x2557,cl
	...
  420931:	dec    ecx
  420932:	test   eax,0x9df89d38
  420937:	in     eax,dx
  420938:	std    
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2-0x5c76afb1],0x6d
  420942:	add    DWORD PTR [ecx],0x0
  420945:	scas   al,BYTE PTR es:[edi]
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    bh,ch
  42094a:	mov    bl,BYTE PTR [ebx+0x5a3a053b]
  420950:	inc    edi
  420951:	in     al,dx
  420952:	addr16 push esi
  420954:	ret    
  420955:	jnp    0x4208e0
  420957:	sbb    eax,0xd9df7966
  42095c:	and    dh,BYTE PTR [ebp+0x2a]
  42095f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420960:	pop    ecx
  420961:	ds in  eax,dx
  420963:	div    ch
  420965:	xor    BYTE PTR [ecx+0x5c2a9232],al
  42096b:	or     BYTE PTR [ebx+0x1c6a77e9],dl
  420971:	cwde   
  420972:	push   edi
  420973:	or     al,BYTE PTR [ecx-0x46]
  420976:	mov    ecx,0xaec63f8f
  42097b:	lock dec edi
  42097d:	push   ss
  42097e:	aaa    
  42097f:	cmp    edi,DWORD PTR [eax+esi*8-0x3ef6b0b4]
  420986:	ficom  DWORD PTR [ebp+0x48ba7be2]
  42098c:	mov    al,0x78
  42098e:	wrmsr  
  420990:	sar    BYTE PTR [ecx],0x36
  420993:	popa   
  420994:	ins    DWORD PTR es:[edi],dx
  420995:	sti    
  420996:	(bad)
  420999:	cdq    
  42099a:	adc    BYTE PTR [esi+0x2e3ed7b5],0xf7
  4209a1:	pop    esp
  4209a2:	dec    ecx
  4209a3:	ins    DWORD PTR es:[edi],dx
  4209a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209a5:	call   0x139f:0xea7411c9
  4209ac:	and    BYTE PTR [edx+0x234c1cf6],ch
  4209b2:	mov    al,ds:0xbb378152
  4209b7:	and    BYTE PTR [eax],ah
  4209b9:	fld    QWORD PTR [eax-0x250424d4]
  4209bf:	cdq    
  4209c0:	xchg   ebp,eax
  4209c1:	std    
  4209c2:	jo     0x42094a
  4209c4:	ss xor eax,0x572e17e0
  4209ca:	jp     0x420a20
  4209cc:	add    DWORD PTR [edi-0x65a6f64d],edi
  4209d2:	sub    bh,BYTE PTR [ecx]
  4209d4:	daa    
  4209d5:	loopne 0x4209b1
  4209d7:	into   
  4209d8:	jo     0x420975
  4209da:	xor    ebp,DWORD PTR [edx+0x76]
  4209dd:	cdq    
  4209de:	jmp    0x4209e4
  4209e0:	daa    
  4209e1:	mov    eax,0xa9d030b0
  4209e6:	lock clc 
  4209e8:	das    
  4209e9:	lds    ebp,FWORD PTR [ebx-0x31]
  4209ec:	out    0x4a,eax
  4209ee:	lods   al,BYTE PTR ds:[esi]
  4209ef:	call   0x72f8:0xdb62a
  4209f6:	jle    0x420a3c
  4209f8:	sahf   
  4209f9:	inc    edi
  4209fa:	ror    BYTE PTR [ebp+0x67],0xa9
  4209fe:	dec    ebp
  4209ff:	(bad)  
  420a00:	jmp    FWORD PTR [ebp+0x13]
  420a03:	and    esi,DWORD PTR [edi]
  420a05:	sub    ah,dl
  420a07:	or     edi,ebx
  420a09:	loop   0x420a03
  420a0b:	xchg   BYTE PTR [edx+0x53d2661e],bl
  420a11:	pushf  
  420a12:	arpl   WORD PTR [esi],cx
  420a14:	inc    cx
  420a16:	xchg   ebp,eax
  420a17:	cmp    ebp,DWORD PTR [ebx+0x3ba852b4]
  420a1d:	cmp    esp,DWORD PTR [ebp-0x75]
  420a20:	stc    
  420a21:	addr16 jl 0x4209db
  420a24:	mov    ah,0x73
  420a26:	ret    0xdade
  420a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a2b:	xchg   esi,eax
  420a2c:	mov    ebx,0xcb3feae7
  420a31:	fistp  DWORD PTR [ebx-0x5b758c83]
  420a37:	aaa    
  420a38:	jnp    0x4209ff
  420a3a:	and    dh,BYTE PTR [ebp+0x13811ce]
  420a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a41:	cmp    eax,0xe86c7f78
  420a46:	mov    esp,0x9de5dce0
  420a4b:	(bad)  
  420a4c:	leave  
  420a4d:	rol    BYTE PTR [ecx+0x805a7ef],0xb7
  420a54:	jns    0x420a3b
  420a56:	push   esi
  420a57:	(bad)  
  420a58:	and    esi,DWORD PTR ds:0xe7b19294
  420a5e:	mov    ds:0xfc047b28,al
  420a63:	in     eax,0x15
  420a65:	jae    0x420a97
  420a67:	gs xchg ecx,eax
  420a69:	pop    ds
  420a6a:	jne    0x420a13
  420a6c:	retf   0xfb0
  420a6f:	mov    ?,esp
  420a71:	aaa    
  420a72:	pop    eax
  420a73:	sub    dl,cl
  420a75:	and    eax,0x9b09fd59
  420a7a:	and    al,dl
  420a7c:	repnz lds ecx,FWORD PTR [eax-0x16779d07]
  420a83:	stos   BYTE PTR es:[edi],al
  420a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a85:	addr16 mov ds:0xf3b4,al
  420a89:	sbb    DWORD PTR [ecx],0xffffff89
  420a8c:	stos   DWORD PTR es:[edi],eax
  420a8d:	jne    0x420a2e
  420a8f:	xchg   esp,eax
  420a90:	daa    
  420a91:	or     DWORD PTR [edx+0x70a2be39],esi
  420a97:	or     dh,BYTE PTR [edx]
  420a99:	daa    
  420a9a:	test   DWORD PTR [ebp+esi*8+0x48],esp
  420a9e:	les    ecx,FWORD PTR [edi]
  420aa0:	xchg   ebp,eax
  420aa1:	js     0x420aae
  420aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aa4:	mov    edi,0x439c32fe
  420aa9:	ret    
  420aaa:	adc    BYTE PTR [edx+0x4eda5ddb],bl
  420ab0:	add    eax,0x28beb093
  420ab5:	and    BYTE PTR [edx+0x4471de49],cl
  420abb:	cmp    esp,DWORD PTR [edi-0x3223b958]
  420ac1:	push   esp
  420ac2:	shr    DWORD PTR [edx-0x8],cl
  420ac5:	and    al,0xf7
  420ac7:	lea    esi,[ebx+0x15]
  420aca:	test   eax,0x1469a460
  420acf:	ja     0x420a90
  420ad1:	inc    esp
  420ad2:	xchg   DWORD PTR [ebp+0x5060cb7e],ebx
  420ad8:	inc    ebp
  420ad9:	in     eax,0x45
  420adb:	sub    bl,BYTE PTR [ecx-0x7af6bc6]
  420ae1:	cli    
  420ae2:	mov    WORD PTR [edx-0x5a],?
  420ae5:	or     DWORD PTR [eax-0x46],ecx
  420ae8:	sbb    DWORD PTR [ebp+0x104624ce],esp
  420aee:	cmp    bh,ch
  420af0:	std    
  420af1:	pusha  
  420af2:	imul   ecx,DWORD PTR [edi-0x671e18eb],0x44
  420af9:	lods   al,BYTE PTR ds:[esi]
  420afa:	xor    BYTE PTR ds:0xff245c9,ah
  420b00:	mov    al,ds:0xd8cfb3d3
  420b05:	mov    DWORD PTR [edx+0x714c080a],ebp
  420b0b:	(bad)  
  420b0c:	ja     0x420afb
  420b0e:	and    bl,BYTE PTR [edx]
  420b10:	ins    DWORD PTR es:[edi],dx
  420b11:	pop    es
  420b12:	jp     0x420ac3
  420b14:	mov    ds:0xc59cb4be,eax
  420b19:	(bad)  
  420b1a:	or     bh,bl
  420b1c:	test   DWORD PTR [ecx],0xcc6d2a31
  420b22:	jge    0x420b16
  420b24:	mov    dl,0x81
  420b26:	or     cl,BYTE PTR ds:0xead0dce3
  420b2c:	inc    esi
  420b2d:	sti    
  420b2e:	repz in eax,0x57
  420b31:	add    eax,0xf41b994d
  420b36:	bound  edi,QWORD PTR [ebx+0x1ee8db3]
  420b3c:	pop    edx
  420b3d:	xchg   DWORD PTR [esi],esp
  420b3f:	outs   dx,BYTE PTR ds:[esi]
  420b40:	ficom  WORD PTR [ebx+edx*1+0x70]
  420b44:	or     bl,0xb9
  420b47:	mov    ss,WORD PTR [ebp+0x48d39fec]
  420b4d:	push   ds
  420b4e:	ret    0x59e0
  420b51:	icebp  
  420b52:	adc    al,0xd3
  420b54:	(bad)  
  420b55:	push   edx
  420b56:	pop    edi
  420b57:	rcl    DWORD PTR ds:0xd708a33a,1
  420b5d:	bound  esp,QWORD PTR gs:[edi]
  420b60:	(bad)  
  420b61:	pop    ebx
  420b62:	out    0x91,al
  420b64:	pop    esp
  420b65:	inc    BYTE PTR [esi+0xa1a40dc]
  420b6b:	adc    eax,0x58cad4f2
  420b70:	int3   
  420b71:	(bad)  
  420b72:	or     eax,0x654aceb3
  420b77:	ja     0x420ba5
  420b79:	cdq    
  420b7a:	popf   
  420b7b:	mov    ecx,0xcf170233
  420b80:	inc    edi
  420b81:	xor    bl,BYTE PTR [ebx]
  420b83:	ds cmp eax,0xfebb7792
  420b89:	pop    ebp
  420b8a:	push   esi
  420b8b:	stc    
  420b8c:	pop    eax
  420b8d:	scas   eax,DWORD PTR es:[edi]
  420b8e:	pop    edx
  420b8f:	stos   BYTE PTR es:[edi],al
  420b90:	mov    DWORD PTR [eax-0x11],esp
  420b93:	hlt    
  420b94:	in     eax,0xc9
  420b96:	xchg   ebx,eax
  420b97:	shr    BYTE PTR [esi-0x2],cl
  420b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b9b:	test   edi,ebp
  420b9d:	jnp    0x420b55
  420b9f:	fwait
  420ba0:	imul   eax,DWORD PTR [eax+0x4b4a9d4],0xffffff8d
  420ba7:	lods   al,BYTE PTR ds:[esi]
  420ba8:	xor    DWORD PTR [esi],esi
  420baa:	hlt    
  420bab:	or     bl,bl
  420bad:	(bad)  
  420bae:	shr    DWORD PTR [ecx+0x9],cl
  420bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bb2:	xor    DWORD PTR [esi-0x17],esi
  420bb5:	push   es
  420bb6:	mov    ch,0x34
  420bb8:	ss mov edi,0x931c5f11
  420bbe:	fs mul ebp
  420bc1:	dec    esi
  420bc2:	sbb    ch,al
  420bc4:	in     eax,dx
  420bc5:	jle    0x420c44
  420bc7:	out    dx,al
  420bc8:	sbb    BYTE PTR [eax],ah
  420bca:	(bad)  
  420bcb:	pop    esi
  420bcc:	add    al,0x55
  420bce:	lock iret 
  420bd0:	jmp    DWORD PTR [ebx+eax*4+0x3b]
  420bd4:	push   es
  420bd5:	sbb    eax,DWORD PTR cs:[ebp-0xe2e5e8f]
  420bdc:	cmp    eax,0x4c42621e
  420be1:	(bad)  
  420be2:	loope  0x420b90
  420be4:	mov    ds:0x66c8d8bb,al
  420be9:	retf   0x5984
  420bec:	jae    0x420c1f
  420bee:	jle    0x420b80
  420bf0:	jbe    0x420bf7
  420bf2:	and    eax,0x389e7d94
  420bf7:	mov    ?,WORD PTR [edx-0x22]
  420bfa:	mov    ebx,0x1da74238
  420bff:	loopne 0x420c06
  420c01:	cli    
  420c02:	stc    
  420c03:	adc    eax,0xc4d24e6b
  420c08:	data16 int3 
  420c0a:	mov    eax,ds:0xa06c3eed
  420c0f:	cs jne 0x420c8b
  420c12:	arpl   bx,ax
  420c14:	or     dl,bl
  420c16:	hlt    
  420c17:	pushf  
  420c18:	jo     0x420c6d
  420c1a:	push   ds
  420c1b:	ret    0x1cb0
  420c1e:	mov    bh,BYTE PTR [ebp+esi*8-0x29]
  420c22:	and    eax,0xa27e498c
  420c27:	std    
  420c28:	add    al,0xa8
  420c2a:	retf   0xae46
  420c2d:	inc    edi
  420c2e:	(bad)  
  420c2f:	ins    DWORD PTR es:[edi],dx
  420c30:	leave  
  420c31:	or     eax,0xc5470132
  420c36:	popa   
  420c37:	imul   BYTE PTR [ebp+0x1]
  420c3a:	dec    edi
  420c3b:	dec    eax
  420c3c:	cmp    dh,BYTE PTR [ecx]
  420c3e:	(bad)  
  420c3f:	lahf   
  420c40:	add    bh,BYTE PTR [eax+0x4c0258b7]
  420c46:	imul   ebp,DWORD PTR [ebp+0x61fda814],0xffffffd8
  420c4d:	jmp    0xa0c2:0xed99836c
  420c54:	leave  
  420c55:	mov    dh,BYTE PTR [ecx]
  420c57:	or     eax,0x5295961e
  420c5c:	jecxz  0x420c8b
  420c5e:	clc    
  420c5f:	sti    
  420c60:	or     eax,edi
  420c62:	adc    al,0xe3
  420c64:	shl    DWORD PTR [edi],1
  420c66:	jb     0x420ce2
  420c68:	or     BYTE PTR [edx-0x12],0x51
  420c6c:	cmp    DWORD PTR [ebp+0x171af96c],esp
  420c72:	(bad)  
  420c73:	call   0x9d14:0x502e4390
  420c7a:	pop    ebp
  420c7b:	jb     0x420cbc
  420c7d:	adc    eax,0xc48bee02
  420c82:	aam    0x8a
  420c84:	sub    al,0x5f
  420c86:	jge    0x420ca5
  420c88:	dec    cx
  420c8a:	sti    
  420c8b:	fisttp DWORD PTR [esi+ebp*1-0x1e82c945]
  420c92:	push   eax
  420c93:	lea    eax,[esi+0x7fdd3d72]
  420c99:	stc    
  420c9a:	mov    DWORD PTR [esi+0x2aca8e11],eax
  420ca0:	xor    ecx,DWORD PTR [edi-0x4852a8e5]
  420ca6:	aad    0x7a
  420ca8:	jmp    0x198583ed
  420cad:	sar    BYTE PTR [ecx-0x3213a59a],1
  420cb3:	and    ah,BYTE PTR [esi-0x11a47441]
  420cb9:	xchg   esp,eax
  420cba:	(bad)  
  420cbb:	(bad)  
  420cbc:	out    0xd7,al
  420cbe:	and    ah,dh
  420cc0:	mov    esi,0x544979d
  420cc5:	adc    esp,DWORD PTR [ebx+0x3d]
  420cc8:	mov    dh,0x6b
  420cca:	call   0xa445:0xa8c56a47
  420cd1:	dec    ebp
  420cd2:	pop    edi
  420cd3:	inc    edx
  420cd4:	int3   
  420cd5:	adc    DWORD PTR [ebx],ecx
  420cd7:	inc    ebp
  420cd8:	jo     0x420c5e
  420cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cdc:	gs jne 0x420d07
  420cdf:	lods   eax,DWORD PTR ds:[esi]
  420ce0:	push   cs
  420ce1:	lods   al,BYTE PTR ds:[esi]
  420ce2:	stos   DWORD PTR es:[edi],eax
  420ce3:	push   esi
  420ce4:	sbb    BYTE PTR [eax+0x24],ah
  420ce7:	fsub   DWORD PTR ds:0x6a6f4c12
  420ced:	out    0x24,al
  420cef:	loope  0x420cac
  420cf1:	mov    es,WORD PTR [eax+0x35fba19d]
	...
  420cff:	add    BYTE PTR [eax],al
  420d01:	es mov eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	aaa    
  420d0e:	and    cl,ah
  420d10:	cmp    ebx,DWORD PTR [ebx]
  420d12:	xchg   DWORD PTR [ecx],eax
  420d14:	add    BYTE PTR [esi-0x39fffffd],ch
  420d1a:	das    
  420d1b:	sbb    BYTE PTR [edi],ah
  420d1d:	setb   BYTE PTR [edx+0x7dbb8f08]
  420d24:	(bad)  
  420d25:	sahf   
  420d26:	mov    bh,0xbc
  420d28:	sub    bh,dh
  420d2a:	out    dx,al
  420d2b:	jns    0x420d34
  420d2d:	xlat   BYTE PTR ds:[ebx]
  420d2e:	clc    
  420d2f:	jo     0x420d63
  420d31:	mov    ds:0x7050690a,al
  420d36:	ds jne 0x420cc9
  420d39:	mov    al,ds:0x34a37f14
  420d3e:	hlt    
  420d3f:	sbb    eax,DWORD PTR [ecx]
  420d41:	sar    BYTE PTR [eax+0x50b09d4],1
  420d47:	sub    dh,BYTE PTR [eax-0x24b91c39]
  420d4d:	cwde   
  420d4e:	imul   edi,eax,0x31
  420d51:	sbb    DWORD PTR [ebx-0x64],ecx
  420d54:	pop    esi
  420d55:	push   esi
  420d56:	fisub  WORD PTR [edi]
  420d58:	sub    eax,0xd4ad7498
  420d5d:	dec    ebx
  420d5e:	push   es
  420d5f:	adc    cl,bl
  420d61:	push   es
  420d62:	test   al,0x60
  420d64:	mov    ecx,0x61c4a231
  420d69:	in     al,dx
  420d6a:	sub    ebp,DWORD PTR [eax+0x29]
  420d6d:	pop    ds
  420d6e:	das    
  420d6f:	push   ss
  420d70:	pop    edx
  420d71:	or     eax,0x54a2a464
  420d76:	xor    ch,dl
  420d78:	int    0x6a
  420d7a:	aas    
  420d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d7c:	xchg   esp,eax
  420d7d:	test   al,0xf
  420d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d80:	scas   eax,DWORD PTR es:[edi]
  420d81:	mov    edi,0x7e88fb5
  420d86:	dec    ecx
  420d87:	fbld   TBYTE PTR [eax+0x47]
  420d8a:	adc    BYTE PTR [ecx],bl
  420d8c:	leave  
  420d8d:	iret   
  420d8e:	mov    ecx,0xcf4e7a91
  420d93:	sti    
  420d94:	and    al,0xb0
  420d96:	js     0x420d22
  420d98:	xchg   BYTE PTR [eax-0x6b05f7a1],dh
  420d9e:	js     0x420da3
  420da0:	(bad)  
  420da1:	fld    DWORD PTR ds:0x8d7605b2
  420da7:	and    eax,0x5b3afa47
  420dac:	jecxz  0x420d34
  420dae:	pusha  
  420daf:	sbb    al,0xa7
  420db1:	pop    DWORD PTR [edx]
  420db3:	push   edi
  420db4:	imul   ecx,DWORD PTR [edx],0xffffffe9
  420db7:	das    
  420db8:	cld    
  420db9:	xchg   ecx,eax
  420dba:	dec    ebx
  420dbb:	mov    ecx,0x8c4969a5
  420dc0:	xchg   DWORD PTR [esi],eax
  420dc2:	arpl   di,sp
  420dc4:	sub    eax,DWORD PTR [esi]
  420dc6:	push   ecx
  420dc7:	or     DWORD PTR [edi],0x859dfc6a
  420dcd:	sbb    al,0x78
  420dcf:	adc    ebp,DWORD PTR [eax]
  420dd1:	test   eax,0x23e951d1
  420dd6:	lahf   
  420dd7:	pop    edx
  420dd8:	sbb    al,0x36
  420dda:	(bad)  
  420ddb:	repnz cmp esi,DWORD PTR [eax+eiz*1]
  420ddf:	gs xchg ecx,eax
  420de1:	ret    
  420de2:	pop    ebx
  420de3:	pushf  
  420de4:	and    bl,cl
  420de6:	mov    esi,0xf709f261
  420deb:	daa    
  420dec:	dec    esi
  420ded:	lods   eax,DWORD PTR ds:[esi]
  420dee:	aad    0x87
  420df0:	and    BYTE PTR [edi],dh
  420df2:	xor    eax,DWORD PTR ds:0xaae7742e
  420df8:	mov    ?,WORD PTR [edx-0x26]
  420dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dfc:	out    dx,eax
  420dfd:	cmp    esp,DWORD PTR [edi]
  420dff:	sub    BYTE PTR [esi+0x52],0x24
  420e03:	xchg   edi,eax
  420e04:	aam    0xa0
  420e06:	ins    DWORD PTR es:[edi],dx
  420e07:	xlat   BYTE PTR ds:[ebx]
  420e08:	in     al,dx
  420e09:	sahf   
  420e0a:	nop
  420e0b:	adc    al,0x6d
  420e0d:	jl     0x420e0f
  420e0f:	imul   edi,DWORD PTR [eax+0x2b82cb77],0x2deb2677
  420e19:	fst    DWORD PTR [edx-0xc5b78ef]
  420e1f:	xor    DWORD PTR [edi],eax
  420e21:	xor    al,0x41
  420e23:	adc    eax,DWORD PTR [edx]
  420e25:	and    al,0xc2
  420e27:	mov    esp,0x88611081
  420e2c:	(bad)  
  420e2d:	fcomp  QWORD PTR [esi+0x7847fc8c]
  420e33:	dec    ebx
  420e34:	mov    BYTE PTR [esi-0x68],dl
  420e37:	gs mov ch,0xc6
  420e3a:	daa    
  420e3b:	mov    DWORD PTR [eax-0x54],edx
  420e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e3f:	dec    ebx
  420e40:	pop    esi
  420e41:	jnp    0x420e7f
  420e43:	mov    eax,ds:0x781b5743
  420e48:	call   0x90f:0x5087b9a3
  420e4f:	and    eax,0x6d295a39
  420e54:	add    eax,0xb212cfaf
  420e59:	retf   
  420e5a:	mov    eax,0xc5f76f5d
  420e5f:	inc    ebp
  420e60:	inc    eax
  420e61:	pushaw 
  420e63:	pop    edi
  420e64:	lock inc ecx
  420e66:	push   esi
  420e67:	sbb    BYTE PTR [edx+0x5ee4d30c],bl
  420e6d:	push   edi
  420e6e:	and    DWORD PTR [ebx],esp
  420e70:	xchg   ecx,eax
  420e71:	in     al,dx
  420e72:	adc    eax,0xa5c29923
  420e77:	pop    eax
  420e78:	and    ecx,esi
  420e7a:	jnp    0x420ede
  420e7c:	test   eax,0xf6e2d8df
  420e81:	jnp    0x420ed4
  420e83:	sar    BYTE PTR [edi+0x35],0x49
  420e87:	push   es
  420e88:	push   ss
  420e89:	or     eax,0x73d2215c
  420e8e:	test   ebp,eax
  420e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e91:	mov    ebx,0x5ba6026e
  420e96:	(bad)  
  420e97:	xchg   ecx,eax
  420e98:	jp     0x420ea9
  420e9a:	aaa    
  420e9b:	ficomp WORD PTR [edi+0x5b658b39]
  420ea1:	cli    
  420ea2:	(bad)  
  420ea3:	cdq    
  420ea4:	loopne 0x420f0f
  420ea6:	daa    
  420ea7:	pop    ebp
  420ea8:	rol    BYTE PTR [ecx+0x14562ef0],1
  420eae:	inc    esp
  420eaf:	sbb    dl,dl
  420eb1:	jmp    0x420eb2
  420eb3:	ror    DWORD PTR [esi],0x47
  420eb6:	in     al,dx
  420eb7:	les    edi,FWORD PTR [esp+edi*4+0x47]
  420ebb:	mov    ds:0x32dff91d,eax
  420ec0:	sub    ebp,DWORD PTR [ebx+eiz*2-0xb]
  420ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ec5:	dec    ebp
  420ec6:	xchg   ebp,eax
  420ec7:	push   ecx
  420ec8:	and    ebx,DWORD PTR [edi-0x72]
  420ecb:	jb     0x420e57
  420ecd:	push   edi
  420ece:	dec    edi
  420ecf:	popa   
  420ed0:	push   edx
  420ed1:	(bad)  
  420ed2:	cmp    esi,DWORD PTR [edi+0x629e9124]
  420ed8:	(bad)  
  420ed9:	ror    BYTE PTR [ebx+0x2e1bf46b],1
  420edf:	inc    esi
  420ee0:	add    eax,0x9617f39f
  420ee5:	cs aaa 
  420ee7:	sbb    al,0x2a
  420ee9:	xlat   BYTE PTR ds:[ebx]
  420eea:	rol    DWORD PTR [ebx],cl
  420eec:	xchg   edx,eax
  420eed:	aam    0xba
  420eef:	gs sti 
  420ef1:	sbb    DWORD PTR [edx-0x44ba5e84],edx
  420ef7:	ret    
  420ef8:	popf   
  420ef9:	repz test DWORD PTR [eax+0x1f],0x4ad91be9
  420f01:	or     ah,ch
  420f03:	sbb    eax,0x7d0a0d9
  420f08:	pop    ss
  420f09:	stc    
  420f0a:	mov    ?,ebx
  420f0c:	inc    eax
  420f0d:	xchg   DWORD PTR [edx],edi
  420f0f:	xor    dl,bh
  420f11:	retf   
  420f12:	icebp  
  420f13:	jg     0x420f58
  420f15:	mov    dh,0xbc
  420f17:	aas    
  420f18:	call   0xe653:0xd98d46e6
  420f1f:	xchg   esp,eax
  420f20:	xchg   ecx,eax
  420f21:	mov    bh,0x47
  420f23:	push   ebp
  420f24:	dec    edi
  420f25:	lea    ebx,[edx]
  420f27:	das    
  420f28:	test   DWORD PTR [ecx-0x34],eax
  420f2b:	and    al,0xb8
  420f2d:	xor    al,0xa6
  420f2f:	adc    DWORD PTR [eax-0x5f],ebp
  420f32:	out    0xf4,eax
  420f34:	mov    cl,0x5c
  420f36:	pop    ebp
  420f37:	xchg   esi,eax
  420f38:	jle    0x420f94
  420f3a:	pop    ebp
  420f3b:	sbb    eax,0xfe7187e9
  420f40:	ins    BYTE PTR es:[edi],dx
  420f41:	in     al,0x51
  420f43:	test   eax,0x2d52e294
  420f48:	push   0x10
  420f4a:	xchg   esi,eax
  420f4b:	and    esi,DWORD PTR [ebx]
  420f4d:	cli    
  420f4e:	mov    edx,0x9019095e
  420f53:	ins    BYTE PTR es:[edi],dx
  420f54:	loope  0x420fac
  420f56:	int    0xaa
  420f58:	adc    al,0x8f
  420f5a:	cwde   
  420f5b:	add    esp,DWORD PTR [ebx]
  420f5d:	jmp    0x1b1e:0xbff4c0d4
  420f64:	daa    
  420f65:	xor    al,al
  420f67:	sub    dl,ch
  420f69:	sub    BYTE PTR [ecx+0x61ea8f75],ch
  420f6f:	inc    ebp
  420f70:	mov    edx,0xaea44500
  420f75:	das    
  420f76:	mov    cl,0xb4
  420f78:	sub    al,0x66
  420f7a:	add    BYTE PTR [edx-0x6e1dfa8a],ch
  420f80:	stos   DWORD PTR es:[edi],eax
  420f81:	mov    ds:0x5031c4e6,al
  420f86:	ret    0x8b48
  420f89:	jne    0x420fab
  420f8b:	inc    ebx
  420f8c:	or     dh,0xc
  420f8f:	inc    edx
  420f90:	and    ebx,ecx
  420f92:	pop    ebx
  420f93:	jecxz  0x420f74
  420f95:	mov    ch,0xaa
  420f97:	xchg   ecx,eax
  420f98:	ret    
  420f99:	js     0x420fdc
  420f9b:	sbb    DWORD PTR [ebx-0xb],ebx
  420f9e:	call   0xfdf6f344
  420fa3:	jo     0x420fbb
  420fa5:	jo     0x420f84
  420fa7:	sbb    bh,BYTE PTR [edx-0x183f2f7a]
  420fad:	shr    DWORD PTR [ecx],0xdd
  420fb0:	sub    eax,0x9812fd4d
  420fb5:	sub    esi,0xef4fa02f
  420fbb:	and    eax,DWORD PTR [edx+0x2409ee50]
  420fc1:	scas   al,BYTE PTR es:[edi]
  420fc2:	cwde   
  420fc3:	xor    BYTE PTR [eax],dh
  420fc5:	jnp    0x420ff5
  420fc7:	cmp    bp,0x5502
  420fcc:	dec    edi
  420fcd:	or     eax,0xcebbb2f4
  420fd2:	mov    dl,0x54
  420fd4:	push   edx
  420fd5:	rcr    ecx,1
  420fd7:	fyl2x  
  420fd9:	adc    ebx,esp
  420fdb:	jge    0x421038
  420fdd:	add    DWORD PTR [eax],ebp
  420fdf:	pop    eax
  420fe0:	rol    DWORD PTR [ecx-0x71],cl
  420fe3:	mov    al,0xd0
  420fe5:	stos   DWORD PTR es:[edi],eax
  420fe6:	pop    ebx
  420fe7:	or     BYTE PTR [ebx+0x29],bl
  420fea:	pusha  
  420feb:	push   edx
  420fec:	dec    esi
  420fed:	pop    DWORD PTR [edi+0x3299ae3d]
  420ff3:	inc    BYTE PTR [ebx-0x68]
  420ff6:	ret    0x4283
  420ff9:	add    DWORD PTR [eax+0x60],edi
  420ffc:	ins    DWORD PTR es:[edi],dx
  420ffd:	jmp    0x421054
  420fff:	aam    0x4a
  421001:	outs   dx,DWORD PTR ds:[esi]
  421003:	xchg   ebp,eax
  421004:	gs pop eax
  421006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421007:	jmp    0xeaef:0x8a9e1a22
  42100e:	test   eax,0xe4ed4ef7
  421013:	gs push eax
  421015:	scas   eax,DWORD PTR es:[edi]
  421016:	ins    BYTE PTR es:[edi],dx
  421017:	jae    0x420fbe
  421019:	xchg   edi,eax
  42101a:	(bad)  
  42101b:	fnstsw WORD PTR [ecx]
  42101d:	mov    ebp,0xa4f39dfc
  421022:	js     0x42105d
  421024:	outs   dx,WORD PTR ds:[esi]
  421026:	div    DWORD PTR [eax]
  421028:	mov    WORD PTR [edi+0x59783ef5],?
  42102e:	cmp    esp,DWORD PTR [bx+di]
  421031:	ss push esp
  421033:	test   al,0x61
  421035:	cld    
  421036:	int    0x7f
  421038:	mov    ah,0x15
  42103a:	aad    0xaf
  42103c:	(bad)  
  42103d:	sub    DWORD PTR [eax+0x3256b136],esi
  421043:	ret    
  421044:	into   
  421045:	fdivr  DWORD PTR [edx+0x36e224c2]
  42104b:	stos   BYTE PTR es:[edi],al
  42104c:	repnz fst DWORD PTR [ebx]
  42104f:	retf   0xb79b
  421052:	add    bh,BYTE PTR [eax-0x4adfb2ae]
  421058:	dec    ebx
  421059:	retf   0xb7b8
  42105c:	and    eax,0xa283675
  421061:	leave  
  421062:	ins    DWORD PTR es:[edi],dx
  421063:	push   esp
  421064:	fs push es
  421066:	hlt    
  421067:	cmc    
  421068:	mov    ch,0xa0
  42106a:	or     al,0xe
  42106c:	sbb    esp,DWORD PTR [ecx]
  42106e:	sahf   
  42106f:	mov    ebp,0xea2d0c1d
  421074:	inc    ebp
  421075:	jl     0x421017
  421077:	pusha  
  421078:	xchg   esp,eax
  421079:	lea    eax,ds:0x3c0e563d
  42107f:	out    dx,eax
  421080:	sbb    al,0x1a
  421082:	mov    cl,0x3c
  421084:	xor    DWORD PTR [eax+0x23b7d544],ebx
  42108a:	xor    esi,DWORD PTR [ebx+0x531891b1]
  421090:	lahf   
  421091:	or     al,0xa4
  421093:	loopne 0x421114
  421095:	fs repnz mov ch,0xec
  421099:	imul   eax,edx,0x68
  42109c:	jp     0x4210af
  42109e:	add    eax,0xa6ffa3fc
  4210a3:	mov    eax,ds:0x8210d0a5
  4210a8:	(bad)  
  4210a9:	imul   edx,DWORD PTR [edx+0x64ca15d3],0xa1d6d68
  4210b3:	and    eax,0x282eba70
  4210b8:	arpl   bp,ax
  4210ba:	arpl   WORD PTR [ecx+0x2298b4b9],si
  4210c0:	push   esp
  4210c1:	mov    dl,0x2f
  4210c3:	and    ah,BYTE PTR [ecx]
  4210c5:	push   edi
  4210c6:	rol    BYTE PTR [eax],0x0
	...
  4210d1:	dec    edx
  4210d2:	jo     0x4210ac
  4210d4:	jl     0x4210d0
  4210d6:	cld    
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	call   0x18a:0xc9c61e13
  4210e4:	add    BYTE PTR [esi+0x2000003],ch
  4210ea:	jbe    0x4210a6
  4210ec:	sbb    BYTE PTR [edi-0x1f],ah
  4210ef:	or     eax,0x52234863
  4210f4:	add    bl,BYTE PTR [ebp+0x6a855798]
  4210fa:	(bad)  
  4210fb:	xor    dl,BYTE PTR [eax]
  4210fd:	xchg   edi,eax
  4210fe:	xor    eax,0x5eed9c38
  421103:	dec    edx
  421104:	in     eax,0xc4
  421106:	loop   0x421185
  421108:	mov    ebx,0xe799c0a8
  42110d:	nop
  42110e:	fbstp  TBYTE PTR cs:[ebx-0x79712b5f]
  421115:	push   esp
  421116:	mov    bh,0x17
  421118:	out    dx,eax
  421119:	sub    eax,DWORD PTR [ebp-0x1f]
  42111c:	or     al,0xbe
  42111e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42111f:	ret    0x34b5
  421122:	mov    WORD PTR [eax-0x229a987d],cs
  421128:	jge    0x4210cb
  42112a:	jne    0x421128
  42112c:	pop    esi
  42112d:	push   esp
  42112e:	les    eax,FWORD PTR [esi]
  421130:	int    0x54
  421132:	imul   edx,DWORD PTR [edx-0x4867625b],0x1c
  421139:	retf   0xc895
  42113c:	les    eax,FWORD PTR [ebx-0x5d]
  42113f:	or     esp,DWORD PTR [eax-0x5bb6aa1]
  421145:	jne    0x421133
  421147:	push   es
  421148:	mov    dh,0x48
  42114a:	fcomp  QWORD PTR [ebx+0x72]
  42114d:	xchg   esp,eax
  42114e:	mov    bl,0x1c
  421150:	in     al,dx
  421151:	or     edx,DWORD PTR [eax+0x250a109e]
  421157:	cdq    
  421158:	and    bl,BYTE PTR [edx]
  42115a:	add    eax,0x2418c644
  42115f:	out    dx,eax
  421160:	loope  0x4210ef
  421162:	add    ebx,0x8e948589
  421168:	xchg   DWORD PTR [ebp+0x5e40fe8e],eax
  42116e:	popa   
  42116f:	mov    al,ds:0x1b83bc83
  421174:	push   edi
  421175:	xor    DWORD PTR [esi+0x52494c3b],esi
  42117b:	push   es
  42117c:	cmp    DWORD PTR [ecx-0x7caddcc6],edi
  421182:	mul    edi
  421184:	pop    ebx
  421185:	addr16 or eax,0x64c9569e
  42118b:	test   BYTE PTR [edx],bl
  42118d:	iret   
  42118e:	push   ds
  42118f:	cwde   
  421190:	bound  edx,QWORD PTR [ebp+0x7222adb9]
  421196:	and    ecx,DWORD PTR [ebx]
  421198:	xchg   ebp,eax
  421199:	jle    0x42116d
  42119b:	dec    eax
  42119c:	xor    al,0x80
  42119e:	lds    esp,FWORD PTR [edx+ecx*8+0x240dabf6]
  4211a5:	fmul   DWORD PTR [ecx+0x1bbc8bde]
  4211ab:	lods   eax,DWORD PTR ds:[esi]
  4211ac:	jnp    0x4211eb
  4211ae:	je     0x4211a9
  4211b0:	inc    ebx
  4211b1:	je     0x4211cb
  4211b3:	mov    esi,0xe58dbf7c
  4211b8:	outs   dx,BYTE PTR ds:[esi]
  4211b9:	int    0xcd
  4211bb:	cmc    
  4211bc:	int3   
  4211bd:	push   ecx
  4211be:	jo     0x42115c
  4211c0:	xor    al,0x6f
  4211c2:	cwde   
  4211c3:	out    0xeb,al
  4211c5:	push   cs
  4211c6:	in     eax,dx
  4211c7:	mul    BYTE PTR [edx+0x75]
  4211ca:	jne    0x421201
  4211cc:	(bad)  
  4211cd:	or     eax,0x7efc1cf9
  4211d2:	frstor [ecx+0x23]
  4211d5:	pop    esp
  4211d6:	test   DWORD PTR fs:[ecx-0x24],edi
  4211da:	dec    edi
  4211db:	out    0xc9,eax
  4211dd:	into   
  4211de:	stos   DWORD PTR es:[edi],eax
  4211df:	mul    DWORD PTR [edi-0x1c]
  4211e2:	inc    ebp
  4211e3:	mov    eax,ds:0x3833ff72
  4211e8:	sbb    eax,0x11ca4764
  4211ed:	dec    eax
  4211ee:	jae    0x42120e
  4211f0:	jae    0x421228
  4211f2:	mov    ds:0x15184cb,al
  4211f7:	lds    eax,FWORD PTR ds:0xf3744613
  4211fd:	xchg   DWORD PTR [edx+0x2b],esi
  421200:	das    
  421201:	rcl    DWORD PTR [eax+0x40],0xb8
  421205:	std    
  421206:	add    eax,0x9a5dfac3
  42120b:	xlat   BYTE PTR ds:[ebx]
  42120c:	sub    BYTE PTR [edx-0x78],dh
  42120f:	idiv   DWORD PTR ss:[ecx-0x73d34601]
  421216:	mov    ds:0xd9e972c2,al
  42121b:	sub    DWORD PTR [esi],eax
  42121d:	fprem  
  42121f:	xchg   BYTE PTR ds:[edi],cl
  421222:	iret   
  421223:	cmp    DWORD PTR gs:[edi],0x37
  421227:	test   BYTE PTR [edi],dh
  421229:	icebp  
  42122a:	out    dx,al
  42122b:	fcmovnu st,st(5)
  42122d:	fwait
  42122e:	cmp    al,0xd
  421230:	leave  
  421231:	test   al,0xd7
  421233:	add    edi,DWORD PTR ds:0x2a109fd2
  421239:	pop    edx
  42123a:	jno    0x4211ef
  42123c:	loope  0x4211c6
  42123e:	or     al,0x3c
  421240:	mov    ah,BYTE PTR [ecx+0x5e1638bd]
  421246:	sbb    DWORD PTR [ecx],ebp
  421248:	push   DWORD PTR [edx]
  42124a:	fldenv fs:0xe4f1b6ef
  421251:	lock xor al,0xb1
  421254:	mov    cl,BYTE PTR [esi]
  421256:	xchg   esp,eax
  421257:	out    0xc4,al
  421259:	mov    esi,0x583cb565
  42125e:	dec    ebx
  42125f:	inc    ebp
  421260:	adc    eax,0x2283f7ea
  421265:	xchg   ebp,eax
  421266:	jp     0x4212c3
  421268:	or     al,0xd
  42126a:	mov    eax,0x768f468c
  42126f:	jle    0x4211fe
  421271:	retf   0x34f1
  421274:	mov    BYTE PTR [ebp+0x1],bl
  421277:	(bad)  
  421278:	cmp    BYTE PTR [esi+0x2fa1752d],bh
  42127e:	repz mov esi,?
  421281:	or     cl,al
  421283:	sub    DWORD PTR [edi],esp
  421285:	ja     0x421234
  421287:	ds or  ecx,edi
  42128a:	es ja  0x42125e
  42128d:	push   edx
  42128e:	iret   
  42128f:	imul   edi,DWORD PTR [ebx+0x60aa6e6a],0x79
  421296:	aas    
  421297:	pop    ecx
  421298:	inc    edi
  421299:	adc    edx,DWORD PTR [ebp-0x6d4445af]
  42129f:	rcr    BYTE PTR [edx-0x35],0xe2
  4212a3:	xchg   esp,eax
  4212a4:	or     DWORD PTR [edi-0x44],0xffffff8a
  4212a8:	js     0x42130a
  4212aa:	sub    al,al
  4212ac:	xor    cl,BYTE PTR [edx]
  4212ae:	dec    esp
  4212af:	leave  
  4212b0:	mov    ecx,0x906b0354
  4212b5:	and    al,0x81
  4212b7:	add    DWORD PTR [edx+esi*1+0x57],0x8f260981
  4212bf:	daa    
  4212c0:	mov    esi,0xffde9c83
  4212c5:	jmp    0xe000f33d
  4212ca:	jnp    0x4212aa
  4212cc:	cmp    edx,ebx
  4212ce:	push   esi
  4212cf:	and    BYTE PTR [esi-0x72],0x4d
  4212d3:	es call 0x64270894
  4212d9:	add    BYTE PTR [ebx-0x5a],bh
  4212dc:	sub    eax,0x5466f671
  4212e1:	loope  0x421308
  4212e3:	fistp  DWORD PTR [ebx]
  4212e5:	cli    
  4212e6:	xchg   edi,edi
  4212e8:	cmp    eax,0x29f1d972
  4212ed:	pop    eax
  4212ee:	cmp    DWORD PTR [edx],eax
  4212f0:	scas   al,BYTE PTR es:[edi]
  4212f1:	mov    dl,0x22
  4212f3:	sbb    edi,0x21d4943
  4212f9:	adc    bl,BYTE PTR [ebp+0x8]
  4212fc:	sub    bh,0xdd
  4212ff:	into   
  421300:	mov    ds:0xfa3c70d,eax
  421305:	daa    
  421306:	cmp    al,0xd4
  421308:	test   eax,0x10c338ec
  42130d:	loope  0x421313
  42130f:	jb     0x42130f
  421311:	(bad)  
  421312:	fs pop ebp
  421314:	inc    edi
  421315:	dec    ecx
  421316:	jmp    0x8ca0c009
  42131b:	into   
  42131c:	in     eax,0xd1
  42131e:	aas    
  42131f:	call   0x7781:0xb40a563c
  421326:	lods   al,BYTE PTR ds:[esi]
  421327:	inc    esp
  421328:	fst    DWORD PTR [ecx]
  42132a:	push   ebp
  42132b:	fisttp QWORD PTR [eax+0x32071c46]
  421331:	push   ebx
  421332:	jmp    0x932c:0xc7762694
  421339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42133a:	mov    ebp,0x9a95beb1
  42133f:	pop    ds
  421340:	cmc    
  421341:	ds mov esp,0x5d7acbfb
  421347:	xlat   BYTE PTR ds:[ebx]
  421348:	das    
  421349:	lahf   
  42134a:	xchg   ebx,eax
  42134b:	jns    0x42130a
  42134d:	(bad)  
  42134e:	ret    
  42134f:	xor    al,0xa4
  421351:	cdq    
  421352:	jnp    0x42138d
  421354:	jmp    0x4213b0
  421356:	adc    eax,0xb1d42d27
  42135b:	repnz dec ecx
  42135d:	nop
  42135e:	paddsb mm3,QWORD PTR [eax+0x35219d5e]
  421365:	cdq    
  421366:	jp     0x4213d8
  421368:	cld    
  421369:	mov    cl,0x64
  42136b:	repz jl 0x421313
  42136e:	xchg   ecx,ebp
  421370:	(bad)  
  421372:	fmul   QWORD PTR [edx+0x6979ff4d]
  421378:	outs   dx,DWORD PTR ds:[esi]
  421379:	ds call 0x234e28fc
  42137f:	adc    eax,0x445b8c81
  421384:	leave  
  421385:	addr16 dec edi
  421387:	lods   al,BYTE PTR ds:[esi]
  421388:	mov    ecx,0x9df26d63
  42138d:	or     BYTE PTR [esi],cl
  42138f:	(bad)  
  421390:	jnp    0x4213de
  421392:	adc    ecx,DWORD PTR [ebx-0x27]
  421395:	test   al,0x69
  421397:	out    0x9a,al
  421399:	mov    eax,0xe5e7061a
  42139e:	xor    bl,BYTE PTR [ebp+edx*4-0x71d82b91]
  4213a5:	pop    ecx
  4213a6:	pop    edx
  4213a7:	iret   
  4213a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a9:	jno    0x42133e
  4213ab:	sub    edi,DWORD PTR ss:[edi-0x50]
  4213af:	pop    ecx
  4213b0:	mov    esi,esi
  4213b2:	pushf  
  4213b3:	enter  0x6643,0xcc
  4213b7:	xchg   edi,eax
  4213b8:	or     eax,0xe4dab440
  4213bd:	retf   
  4213be:	xor    eax,0xeb2a5420
  4213c3:	popa   
  4213c4:	mov    BYTE PTR [esi+0x1d],ah
  4213c7:	adc    al,0xb9
  4213c9:	inc    ebp
  4213ca:	cmp    eax,0xf92ca414
  4213cf:	repz loope 0x421407
  4213d2:	imul   ebx,DWORD PTR [eax+0xc],0xfffffffe
  4213d6:	ss test eax,0xd02298af
  4213dc:	scas   al,BYTE PTR es:[edi]
  4213dd:	or     DWORD PTR [ebx+eiz*8+0x3c],0x7154f658
  4213e5:	ret    
  4213e6:	add    al,0xbe
  4213e8:	pop    edi
  4213e9:	sbb    esp,DWORD PTR [ebx+0x5daa5947]
  4213ef:	scas   al,BYTE PTR es:[edi]
  4213f0:	mov    ah,0xd2
  4213f2:	push   es
  4213f3:	fisub  DWORD PTR [ebx-0x23413ac4]
  4213f9:	out    0x9,al
  4213fb:	je     0x421417
  4213fd:	retf   
  4213fe:	cs xchg ebp,eax
  421400:	call   0xe659:0x45c5d305
  421407:	cdq    
  421408:	or     eax,0xbbf0ee1e
  42140d:	or     eax,0xc002a4c9
  421412:	inc    edx
  421413:	cld    
  421414:	data16 (bad) 
  421416:	and    cl,bh
  421418:	jmp    0x42144d
  42141a:	fidiv  DWORD PTR [ecx]
  42141c:	sbb    BYTE PTR [ebx],ah
  42141e:	xlat   BYTE PTR ds:[ebx]
  42141f:	push   esp
  421420:	rol    dl,1
  421422:	ret    
  421423:	push   eax
  421424:	lods   al,BYTE PTR ds:[esi]
  421425:	pop    edx
  421426:	mov    ch,0x72
  421428:	pusha  
  421429:	out    0x6a,al
  42142b:	out    dx,al
  42142c:	sub    BYTE PTR [eax-0x42],0x27
  421430:	add    cl,cl
  421432:	in     eax,0xe1
  421434:	(bad)  
  421436:	mov    ch,0xef
  421438:	call   0x3bac08a0
  42143d:	inc    esp
  42143e:	push   ebx
  42143f:	enter  0x12cb,0xa8
  421443:	stos   DWORD PTR es:[edi],eax
  421444:	cs loop 0x421484
  421447:	ror    BYTE PTR [ebp+0x297f3311],cl
  42144d:	jecxz  0x421434
  42144f:	out    0x49,eax
  421451:	dec    esp
  421452:	aaa    
  421453:	mov    edi,DWORD PTR [esi]
  421455:	retf   
  421456:	xchg   dh,ch
  421458:	aam    0x3c
  42145a:	(bad)  
  42145b:	out    dx,eax
  42145c:	mov    cl,0x1b
  42145e:	mov    al,BYTE PTR [ecx-0x36]
  421461:	shr    DWORD PTR [edx],cl
  421463:	inc    esi
  421464:	popf   
  421465:	inc    eax
  421466:	sti    
  421467:	push   eax
  421468:	pushf  
  421469:	pop    ebx
  42146a:	icebp  
  42146b:	mov    ds:0x4b16abae,eax
  421470:	pop    edi
  421471:	repnz out 0x4d,eax
  421474:	aaa    
  421475:	loop   0x4214af
  421477:	and    al,0x88
  421479:	xor    ecx,esp
  42147b:	fisttp WORD PTR [edx]
  42147d:	lahf   
  42147e:	jmp    0x62ba:0x6201094c
  421485:	bound  ebx,QWORD PTR [edx-0xf98c722]
  42148b:	cwde   
  42148c:	rcr    DWORD PTR [ebp+0x5b4f6531],1
  421492:	int    0x8c
  421494:	sar    ebp,0xac
	...
  42149f:	add    BYTE PTR [eax],al
  4214a1:	(bad)  
  4214a2:	fld    QWORD PTR [ebx-0x70212c74]
  4214a8:	fstp   QWORD PTR [ebp+0x61279950]
  4214ae:	packssdw mm7,QWORD PTR [ebp+0x77]
  4214b2:	mov    es,WORD PTR [ecx]
  4214b4:	add    BYTE PTR [esi-0x1dfffffd],ch
  4214ba:	or     al,0x3f
  4214bc:	lahf   
  4214bd:	sahf   
  4214be:	out    0x7f,al
  4214c0:	sub    al,0xbc
  4214c2:	mov    ds,WORD PTR [eax+0x3f]
  4214c5:	add    eax,0x9f7a09a0
  4214ca:	mov    dl,0x23
  4214cc:	push   ebx
  4214cd:	xchg   BYTE PTR [edx+0x22],cl
  4214d0:	push   esi
  4214d1:	adc    al,0x35
  4214d3:	inc    edx
  4214d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214d5:	add    BYTE PTR [eax],bh
  4214d7:	scas   eax,DWORD PTR es:[edi]
  4214d8:	test   DWORD PTR [esi],edx
  4214da:	push   0x133bfd4f
  4214df:	inc    ebx
  4214e0:	ins    BYTE PTR es:[edi],dx
  4214e1:	inc    esi
  4214e2:	push   eax
  4214e3:	jmp    0x1cdf9024
  4214e8:	or     ebp,esi
  4214ea:	jbe    0x421495
  4214ec:	ins    BYTE PTR es:[edi],dx
  4214ed:	inc    edx
  4214ee:	into   
  4214ef:	in     al,dx
  4214f0:	shl    BYTE PTR [eax-0x7f],1
  4214f3:	stos   BYTE PTR es:[edi],al
  4214f4:	dec    ebx
  4214f5:	dec    edi
  4214f6:	in     al,0x96
  4214f8:	xlat   BYTE PTR ds:[ebx]
  4214f9:	jg     0x4214ce
  4214fb:	and    edi,DWORD PTR [eax+esi*8-0x35394a92]
  421502:	jae    0x42152c
  421504:	push   edi
  421505:	xlat   BYTE PTR ds:[ebx]
  421506:	data16 mov al,0x1c
  421509:	push   ecx
  42150a:	sahf   
  42150b:	lgs    ebp,FWORD PTR [esi]
  42150e:	lods   al,BYTE PTR ds:[esi]
  42150f:	mov    edi,0xccfd8393
  421514:	add    esp,DWORD PTR [esi]
  421516:	enter  0x9cf,0x9c
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	das    
  42151c:	iret   
  42151d:	call   FWORD PTR [esi+0x29ee9388]
  421523:	push   0x27
  421525:	stos   BYTE PTR es:[edi],al
  421526:	(bad)  
  421527:	pop    eax
  421528:	push   esi
  421529:	xchg   edi,eax
  42152a:	push   ebx
  42152b:	and    dh,dl
  42152d:	icebp  
  42152e:	xlat   BYTE PTR ds:[ebx]
  42152f:	aad    0x8
  421531:	shl    BYTE PTR [eax-0x1583b49a],1
  421537:	xor    al,0x56
  421539:	adc    DWORD PTR [edx+0x61],eax
  42153c:	pop    edi
  42153d:	nop
  42153e:	mov    ds:0xab3e6012,al
  421543:	setb   BYTE PTR [edi+0x1b]
  421547:	psubq  mm6,QWORD PTR [ebx]
  42154a:	add    BYTE PTR [edx-0x20b49807],0x9b
  421551:	pop    es
  421552:	shl    BYTE PTR [ebp+0x194acb79],0xe1
  421559:	add    eax,edi
  42155b:	cmc    
  42155c:	cmp    eax,eax
  42155e:	jl     0x42150b
  421560:	add    DWORD PTR [esi],eax
  421562:	icebp  
  421563:	div    DWORD PTR [esi]
  421565:	xor    eax,0x3246fabb
  42156a:	stos   BYTE PTR es:[edi],al
  42156b:	es push esp
  42156d:	cmp    al,BYTE PTR [ecx]
  42156f:	mov    eax,0x4dbd926c
  421574:	fst    QWORD PTR [esp+eax*1]
  421577:	and    edi,DWORD PTR [esi-0x2005182]
  42157d:	push   edx
  42157e:	outs   dx,BYTE PTR ds:[esi]
  42157f:	mov    bl,0x89
  421581:	mov    dh,0xd0
  421583:	push   eax
  421584:	test   al,0xcb
  421586:	pop    edx
  421587:	pop    ecx
  421588:	aaa    
  421589:	or     BYTE PTR [edx-0x1c],dh
  42158c:	add    dh,ah
  42158e:	out    dx,eax
  42158f:	ret    
  421590:	ins    BYTE PTR es:[edi],dx
  421591:	xchg   ebp,eax
  421592:	stos   BYTE PTR es:[edi],al
  421593:	rol    esi,0xfd
  421596:	cmp    esi,DWORD PTR [edi+ecx*2+0x46]
  42159a:	and    ecx,ecx
  42159c:	test   DWORD PTR [edx],esp
  42159e:	cmp    edi,DWORD PTR cs:[ecx-0x79ceac0]
  4215a5:	call   0x9bcef0aa
  4215aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215ab:	fsubr  QWORD PTR [edx-0x273ba709]
  4215b1:	push   edi
  4215b2:	mov    DWORD PTR [edx+edx*8],ebx
  4215b5:	fs loop 0x4215cb
  4215b8:	into   
  4215b9:	and    BYTE PTR [eax],cl
  4215bb:	push   es
  4215bc:	sbb    eax,0x3dea035e
  4215c1:	scas   eax,DWORD PTR es:[edi]
  4215c2:	cmp    eax,0xd692f63a
  4215c7:	sar    BYTE PTR [ebx-0xa],1
  4215ca:	mov    ch,0xcf
  4215cc:	cdq    
  4215cd:	mov    esi,0x1cdf71ab
  4215d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215d3:	popf   
  4215d4:	and    al,BYTE PTR [edx-0x61]
  4215d7:	dec    esp
  4215d8:	jne    0x42156e
  4215da:	stos   BYTE PTR es:[edi],al
  4215db:	ins    BYTE PTR es:[edi],dx
  4215dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215dd:	adc    eax,0xa1c70527
  4215e2:	push   0xffffffe9
  4215e4:	ret    
  4215e5:	xchg   esi,eax
  4215e6:	clc    
  4215e7:	pop    edx
  4215e8:	daa    
  4215e9:	cmp    BYTE PTR [ebp+0x69bf1f8a],cl
  4215ef:	jb     0x421635
  4215f1:	xchg   esp,eax
  4215f2:	mov    al,0xc4
  4215f4:	adc    eax,eax
  4215f6:	xchg   edi,eax
  4215f7:	push   0x1f
  4215f9:	add    DWORD PTR [edx-0x73],esi
  4215fc:	lds    esp,FWORD PTR [ebx-0x79]
  4215ff:	cmp    BYTE PTR [eax+ebx*8+0x509b491],ah
  421606:	xor    al,0x10
  421608:	(bad)  
  421609:	jnp    0x421683
  42160b:	xor    cl,ch
  42160d:	fst    st(4)
  42160f:	je     0x4215b3
  421611:	dec    esp
  421612:	push   ss
  421613:	scas   eax,DWORD PTR es:[edi]
  421614:	arpl   WORD PTR [esi],si
  421616:	out    0x23,al
  421618:	push   cs
  421619:	pusha  
  42161a:	std    
  42161b:	inc    edx
  42161c:	(bad)  
  42161d:	and    eax,0xf86e9726
  421622:	or     eax,DWORD PTR [esi+0x27a64dd8]
  421628:	push   0x45
  42162a:	mov    ds:0x96b0a4b1,al
  42162f:	lea    ebp,[ebx+0x640c1f6b]
  421635:	push   ecx
  421636:	sbb    BYTE PTR [eax+0x7dba945e],0x30
  42163d:	data16 xor al,0xd2
  421640:	sbb    eax,0x9e67aea6
  421645:	cmp    al,0xe6
  421647:	pushf  
  421648:	inc    ecx
  421649:	pop    edi
  42164a:	outs   dx,BYTE PTR ds:[esi]
  42164b:	shl    BYTE PTR [esi-0x48af1dbb],0xc5
  421652:	mov    DWORD PTR ds:0xc193605b,ebp
  421658:	loopne 0x421668
  42165a:	aam    0x70
  42165c:	mov    esp,0xcd6a9ed8
  421661:	add    ebp,DWORD PTR [ebx-0x4b]
  421664:	repnz and ah,BYTE PTR [ebx-0x13fdad1f]
  42166b:	jg     0x42162e
  42166d:	xor    eax,0x9b7fa499
  421672:	sub    al,0x69
  421674:	jp     0x42162e
  421676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421677:	in     al,0x23
  421679:	fsub   QWORD PTR [esi+0x35]
  42167c:	pop    esi
  42167d:	inc    ebp
  42167e:	(bad)  
  42167f:	js     0x4216bb
  421681:	mov    ebp,0x20ed665a
  421686:	or     DWORD PTR [ebp-0x4c],0x26
  42168a:	popa   
  42168b:	mov    DWORD PTR [esi-0x4b1c1d0],ebp
  421691:	jae    0x421620
  421693:	daa    
  421694:	repz mov cl,0x15
  421697:	cld    
  421698:	jnp    0x421701
  42169a:	(bad)  
  42169b:	out    0x2d,eax
  42169d:	mov    ds:0x3f8b81e6,al
  4216a2:	(bad)  
  4216a3:	stc    
  4216a4:	cli    
  4216a5:	lods   eax,DWORD PTR ds:[esi]
  4216a6:	xchg   esi,eax
  4216a7:	pop    edi
  4216a8:	(bad)  
  4216a9:	int3   
  4216aa:	inc    bl
  4216ac:	dec    ecx
  4216ad:	cs dec eax
  4216af:	or     eax,0x3ee1d173
  4216b4:	adc    ecx,ebp
  4216b6:	in     al,dx
  4216b7:	sbb    ah,bl
  4216b9:	ret    
  4216ba:	jo     0x421705
  4216bc:	test   ebx,ebx
  4216be:	and    eax,0xe603c43
  4216c3:	jbe    0x4216d1
  4216c5:	aam    0x69
  4216c7:	retf   
  4216c8:	xor    BYTE PTR [eax+0xb],dh
  4216cb:	sbb    DWORD PTR [ebx-0x74045a6],edi
  4216d1:	sbb    al,0xcc
  4216d3:	jbe    0x421712
  4216d5:	jb     0x421702
  4216d7:	mov    ebx,0x4798e48b
  4216dc:	jnp    0x42173b
  4216de:	xchg   ecx,eax
  4216df:	mov    ch,0x14
  4216e1:	test   BYTE PTR [eax+0x4c],bl
  4216e4:	(bad)  
  4216e5:	jmp    0x14a4:0x31b178e5
  4216ec:	mov    bl,0x72
  4216ee:	or     bl,BYTE PTR [esi]
  4216f0:	test   DWORD PTR [edx-0x2a],edi
  4216f3:	ficom  DWORD PTR ds:0x9cdd1388
  4216f9:	stos   DWORD PTR es:[edi],eax
  4216fa:	int3   
  4216fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216fc:	dec    edi
  4216fd:	cmc    
  4216fe:	dec    ebx
  4216ff:	lea    esp,[ecx+0x2754746d]
  421705:	inc    esp
  421706:	imul   esi,ecx,0xffffffb1
  421709:	pop    ecx
  42170a:	fdivr  QWORD PTR [esi]
  42170c:	test   BYTE PTR [eax],bl
  42170e:	mov    ah,0x71
  421710:	lods   eax,DWORD PTR ds:[esi]
  421711:	ja     0x42169a
  421713:	pop    ds
  421714:	bnd jbe 0x421736
  421717:	pushf  
  421718:	das    
  421719:	loope  0x4216c7
  42171b:	push   ecx
  42171c:	inc    ebx
  42171d:	xor    eax,0x1e191820
  421722:	adc    al,0x85
  421724:	scas   al,BYTE PTR es:[edi]
  421725:	cmp    BYTE PTR [ecx-0x2c],dl
  421728:	bnd jmp 0x421736
  42172b:	add    DWORD PTR [edi],edi
  42172d:	pop    es
  42172e:	mov    DWORD PTR [esi],ecx
  421730:	jl     0x42172a
  421732:	mov    DWORD PTR ds:0x665b3177,0x5ee7b785
  42173c:	ins    BYTE PTR es:[edi],dx
  42173d:	add    al,0xa1
  42173f:	push   eax
  421740:	mov    bl,0xd0
  421742:	xor    al,al
  421744:	imul   ebp,edi,0xffffffb5
  421747:	xor    DWORD PTR [ebx+eax*2-0x5],ebx
  42174b:	jp     0x4216f9
  42174d:	push   0xffffff8a
  42174f:	repz jmp FWORD PTR [edi]
  421752:	mov    esi,0x68e34293
  421757:	test   DWORD PTR [ebx-0x61],ebx
  42175a:	xchg   esp,eax
  42175b:	jnp    0x421790
  42175d:	mov    bl,BYTE PTR [eax-0x7b14f793]
  421763:	mov    ebp,0x114c07e8
  421768:	das    
  421769:	es push esp
  42176b:	shl    DWORD PTR [esi],cl
  42176d:	cmp    ebx,DWORD PTR [ecx]
  42176f:	je     0x42171b
  421771:	push   es
  421772:	pop    ss
  421773:	mov    ebp,0xa3749e26
  421778:	push   ebp
  421779:	retf   0xaad3
  42177c:	je     0x4217e2
  42177e:	(bad)  
  42177f:	jne    0x4217af
  421781:	lods   al,BYTE PTR ds:[esi]
  421782:	fdiv   DWORD PTR [ebx-0x571a2ccf]
  421788:	cmp    esp,DWORD PTR [edx+0x78]
  42178b:	hlt    
  42178c:	lock or edi,0xffffffb3
  421790:	fmul   DWORD PTR [ebx-0x7b]
  421793:	stc    
  421794:	lds    esp,FWORD PTR [esi+0x5e]
  421797:	jmp    0x58e4:0x8a273e43
  42179e:	jo     0x4217cb
  4217a0:	aas    
  4217a1:	repz je 0x4217a5
  4217a4:	xchg   ebp,eax
  4217a5:	lds    edx,FWORD PTR [edi+0x137c63aa]
  4217ab:	dec    ebp
  4217ac:	or     DWORD PTR [ebx+0x1d],edx
  4217af:	add    BYTE PTR [ecx-0x27],dh
  4217b2:	mov    esp,0x416411b3
  4217b7:	out    0x39,eax
  4217b9:	call   0x71d3:0xf9e9c842
  4217c0:	outs   dx,BYTE PTR ds:[esi]
  4217c1:	fiadd  WORD PTR [esi+ebp*1-0x5a6fcbf9]
  4217c8:	test   eax,0xad87f96d
  4217cd:	push   cs
  4217ce:	jp     0x4217e6
  4217d0:	cmp    ebp,ecx
  4217d2:	sbb    ah,bh
  4217d4:	ud0    ebx,DWORD PTR [edi+0xe434585]
  4217db:	push   cs
  4217dc:	xchg   ecx,eax
  4217dd:	ins    BYTE PTR es:[edi],dx
  4217de:	sar    BYTE PTR [ebx-0x18231114],cl
  4217e4:	in     eax,0x60
  4217e6:	xor    al,BYTE PTR [ebx-0x79e48125]
  4217ec:	sbb    ecx,0xb2913b13
  4217f2:	jmp    0x42180e
  4217f4:	add    al,0x31
  4217f6:	jmp    DWORD PTR [eax-0x21]
  4217f9:	add    esi,DWORD PTR [ecx-0x7bb4a6a8]
  4217ff:	loop   0x421817
  421801:	cli    
  421802:	sar    BYTE PTR cs:0x7da0de2f,1
  421809:	js     0x421810
  42180b:	mov    esi,DWORD PTR [ecx]
  42180d:	popf   
  42180e:	in     eax,0x8e
  421810:	push   esi
  421811:	stos   DWORD PTR es:[edi],eax
  421812:	xor    ch,BYTE PTR ds:0xa5b9995d
  421818:	or     BYTE PTR [ebx-0x4a],dl
  42181b:	sub    eax,0x663dec5d
  421820:	and    dl,BYTE PTR [ecx]
  421822:	ins    BYTE PTR es:[edi],dx
  421823:	mov    ah,0x2c
  421825:	sbb    esi,DWORD PTR [edx+0x71]
  421828:	mov    edx,0x218dfce1
  42182d:	or     BYTE PTR [eax],dl
  42182f:	sbb    ebx,edi
  421831:	mov    BYTE PTR [edx-0x4f],ch
  421834:	leave  
  421835:	pop    ss
  421836:	mov    edx,0x90d283e3
  42183b:	cmp    dh,BYTE PTR [ebp+0x53]
  42183e:	imul   ecx,DWORD PTR [ecx-0x62b49c82],0x6c
  421845:	rcl    DWORD PTR [ebx+ecx*2-0x99be0a8],1
  42184c:	enter  0x3b7a,0x55
  421850:	(bad)  
  421851:	or     ah,0xb1
  421854:	sbb    DWORD PTR [ebx+0x2d],ebp
  421857:	or     ebx,DWORD PTR [ecx-0x25e46d4]
  42185d:	mov    eax,gs
  42185f:	jns    0x4217f7
  421861:	sbb    BYTE PTR [eax+0x5e49038c],bh
	...
  42186f:	add    BYTE PTR [eax],al
  421871:	ds inc esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    DWORD PTR [eax+edx*8],esi
  42187f:	adc    al,0x3f
  421881:	and    eax,0xae000192
  421886:	add    eax,DWORD PTR [eax]
  421888:	add    BYTE PTR [ecx],dh
  42188a:	xlat   BYTE PTR ds:[ebx]
  42188b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42188c:	xchg   edi,eax
  42188d:	ins    BYTE PTR es:[edi],dx
  42188e:	aad    0x6a
  421890:	aas    
  421891:	in     al,dx
  421892:	pop    ds
  421893:	fxam   
  421895:	loopne 0x421882
  421897:	jae    0x42189b
  421899:	(bad)  
  42189a:	in     al,dx
  42189b:	shl    DWORD PTR [ebp+0x48e905f2],cl
  4218a1:	out    dx,al
  4218a2:	cmp    dl,BYTE PTR [esi-0x49ae3b52]
  4218a8:	xchg   esi,eax
  4218a9:	retf   
  4218aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218ab:	push   ss
  4218ac:	stos   DWORD PTR es:[edi],eax
  4218ad:	fldenv [edi+0x59]
  4218b0:	scas   al,BYTE PTR es:[edi]
  4218b1:	xlat   BYTE PTR ds:[ebx]
  4218b2:	ins    BYTE PTR es:[edi],dx
  4218b3:	mov    WORD PTR [edx+0x26],es
  4218b6:	lahf   
  4218b7:	pushf  
  4218b8:	and    eax,0xaed1ee44
  4218bd:	repnz repz cs cmp eax,0x940b65d7
  4218c5:	shl    DWORD PTR [ecx],1
  4218c7:	cld    
  4218c8:	div    DWORD PTR [ecx-0x7666f33]
  4218ce:	push   esp
  4218cf:	sub    eax,0x6bc76d27
  4218d4:	mov    bl,0xe
  4218d6:	mov    WORD PTR [esi+0x28c9dbaa],fs
  4218dc:	sub    al,0x9e
  4218de:	and    BYTE PTR ds:0x8e1489f6,ch
  4218e4:	and    edx,ecx
  4218e6:	jecxz  0x4218ea
  4218e8:	pop    ss
  4218e9:	mov    eax,ds:0xa188da12
  4218ee:	js     0x4218c6
  4218f0:	nop
  4218f1:	scas   al,BYTE PTR es:[edi]
  4218f2:	je     0x421947
  4218f4:	pop    eax
  4218f5:	out    0xd0,al
  4218f7:	inc    ebp
  4218f8:	lods   eax,DWORD PTR ds:[esi]
  4218f9:	adc    BYTE PTR [ebp+0x701a8cfa],0x24
  421900:	push   edx
  421901:	icebp  
  421902:	arpl   WORD PTR [ebp+0x2d1fe4d5],di
  421908:	pushw  ss
  42190a:	aam    0x78
  42190c:	je     0x421951
  42190e:	je     0x4218a6
  421910:	push   edx
  421911:	data16 out dx,al
  421913:	cmp    dl,BYTE PTR [edi-0x2a]
  421916:	mov    ds:0xa2b624a6,al
  42191b:	inc    ebp
  42191c:	lahf   
  42191d:	ins    DWORD PTR es:[edi],dx
  42191e:	popa   
  42191f:	cmp    BYTE PTR [ecx+ebx*4+0x557bff6c],dl
  421926:	adc    bh,BYTE PTR [edi]
  421928:	adc    ch,BYTE PTR [ebx+0x16ac4496]
  42192e:	daa    
  42192f:	mov    eax,ds:0x98129cfc
  421934:	mov    ds:0xec0d8279,al
  421939:	dec    eax
  42193a:	call   edi
  42193c:	xchg   ebp,eax
  42193d:	jns    0x42196c
  42193f:	stc    
  421940:	shr    eax,cl
  421942:	dec    esp
  421943:	jmp    0xf759:0x72273d31
  42194a:	jae    0x42190e
  42194c:	les    ecx,FWORD PTR [ebp+0x16f8cbc0]
  421952:	loopne 0x421952
  421954:	push   eax
  421955:	push   es
  421956:	pop    ecx
  421957:	jp     0x421957
  421959:	xchg   esi,eax
  42195a:	loop   0x421958
  42195c:	retf   
  42195d:	xchg   esp,eax
  42195e:	sub    esp,edx
  421960:	cli    
  421961:	repz in al,0xe8
  421964:	xchg   edx,eax
  421965:	out    dx,al
  421966:	xchg   edx,eax
  421967:	pop    ds
  421968:	cmp    ax,0x274e
  42196c:	sbb    edx,DWORD PTR [edx-0x3c]
  42196f:	sub    BYTE PTR ss:[edi],0x95
  421973:	cmp    ch,BYTE PTR [esi]
  421975:	adc    DWORD PTR [edi+0x51],ebp
  421978:	mov    ch,0x36
  42197a:	std    
  42197b:	adc    DWORD PTR ds:0xad5d9803,0xffffffa1
  421982:	aaa    
  421983:	push   0x6b353f67
  421988:	fs int3 
  42198a:	clc    
  42198b:	cmp    eax,0x3a38de5a
  421990:	add    ebx,DWORD PTR [edx+edx*1-0x42fb6ee2]
  421997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421998:	pop    ebp
  421999:	add    DWORD PTR [edx-0x5d9ab48f],esi
  42199f:	sub    eax,0xf2f73549
  4219a4:	sbb    al,0xec
  4219a6:	hlt    
  4219a7:	(bad)  
  4219a8:	test   al,0x4e
  4219aa:	lock sub eax,0x71e337d5
  4219b0:	mov    dl,0x87
  4219b2:	mov    ch,0xb0
  4219b4:	les    ebx,FWORD PTR [esi+0x7012b861]
  4219ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219bb:	pop    ebx
  4219bc:	pop    edi
  4219bd:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4219bf:	loopne 0x421a26
  4219c1:	retf   0xaf28
  4219c4:	mov    edx,0xb38b6754
  4219c9:	aad    0xe7
  4219cb:	push   cs
  4219cc:	xchg   edi,eax
  4219cd:	in     eax,dx
  4219ce:	sbb    al,0xc3
  4219d0:	arpl   WORD PTR ds:0x9899db36,sp
  4219d6:	jp     0x4219b2
  4219d8:	add    DWORD PTR [ebx-0x5d],esp
  4219db:	stos   BYTE PTR es:[edi],al
  4219dc:	and    ah,BYTE PTR [ebx+0x5813a2ba]
  4219e2:	icebp  
  4219e3:	push   ebp
  4219e4:	pusha  
  4219e5:	iret   
  4219e6:	int    0x17
  4219e8:	ret    0x712f
  4219eb:	rol    BYTE PTR [ecx-0x76fa23bf],0x3d
  4219f2:	scas   eax,DWORD PTR es:[edi]
  4219f3:	aam    0xa2
  4219f5:	mov    dh,0xc2
  4219f7:	in     eax,dx
  4219f8:	sbb    eax,0x43150dbf
  4219fd:	daa    
  4219fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ff:	jno    0x421a54
  421a01:	inc    eax
  421a02:	je     0x421987
  421a04:	and    al,0xe2
  421a06:	jae    0x4219c0
  421a08:	(bad)  
  421a0a:	sbb    al,0xc
  421a0c:	ins    DWORD PTR es:[edi],dx
  421a0d:	jbe    0x421a05
  421a0f:	loope  0x421a05
  421a11:	inc    esi
  421a12:	leave  
  421a13:	repz les eax,FWORD PTR [esi+0x88a79a6]
  421a1a:	lock add al,0xd4
  421a1d:	sbb    esp,esp
  421a1f:	cld    
  421a20:	ins    DWORD PTR es:[edi],dx
  421a21:	inc    esp
  421a22:	cmp    WORD PTR [edi],bp
  421a25:	xchg   BYTE PTR [eax+0x60],ch
  421a28:	enter  0x645e,0x86
  421a2c:	inc    edi
  421a2d:	in     al,0x29
  421a2f:	mov    edi,0x9fa1ffa5
  421a34:	jmp    0xc8e7b1f4
  421a39:	test   al,0xf9
  421a3b:	test   al,0x21
  421a3d:	add    BYTE PTR [edx],dl
  421a3f:	scas   eax,DWORD PTR es:[edi]
  421a40:	(bad)  
  421a41:	out    dx,eax
  421a42:	sbb    eax,0x3cbd6b59
  421a47:	enter  0xd4e7,0xa2
  421a4b:	in     eax,0xc2
  421a4d:	jle    0x4219d3
  421a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a50:	mov    ds:0x7d7147cc,eax
  421a55:	push   ecx
  421a56:	div    DWORD PTR [esi+0x48]
  421a59:	jmp    0x421a78
  421a5b:	sbb    eax,0x2893563f
  421a60:	mov    ah,0x46
  421a62:	mov    ds:0xf54ea646,al
  421a67:	jle    0x421a1b
  421a69:	adc    BYTE PTR [ecx-0x4166e775],al
  421a6f:	rcl    ebp,1
  421a71:	test   al,0x20
  421a73:	sahf   
  421a74:	and    al,0xa2
  421a76:	(bad)  
  421a77:	mov    ds:0x279d026c,eax
  421a7c:	outs   dx,BYTE PTR ds:[esi]
  421a7d:	(bad)
  421a80:	pop    esi
  421a81:	xlat   BYTE PTR ds:[ebx]
  421a82:	sbb    al,0xeb
  421a84:	scas   al,BYTE PTR es:[edi]
  421a85:	in     al,0x4c
  421a87:	repnz xor bh,dl
  421a8a:	push   edx
  421a8b:	sbb    BYTE PTR [eax+0x12bbe73c],bl
  421a91:	mov    dh,dl
  421a93:	out    0x9d,eax
  421a95:	inc    esi
  421a96:	mov    ds:0x34da975d,eax
  421a9b:	neg    cl
  421a9d:	add    al,0x76
  421a9f:	mov    es,WORD PTR [ebp-0x715a0da]
  421aa5:	sbb    eax,0xdd30440e
  421aaa:	mov    bl,0xff
  421aac:	xchg   BYTE PTR [edx-0x70],bl
  421aaf:	mov    esi,0xc3f94c04
  421ab4:	or     al,BYTE PTR [edx]
  421ab6:	pop    ds
  421ab7:	jmp    0x421b0f
  421ab9:	dec    ebp
  421aba:	push   edi
  421abb:	mov    ch,0x24
  421abd:	cmp    BYTE PTR [esi-0x6f602fb1],ah
  421ac3:	and    DWORD PTR [edi],ecx
  421ac5:	ror    DWORD PTR [edi+esi*2],cl
  421ac8:	rcr    BYTE PTR [ebx],1
  421aca:	pop    edi
  421acb:	dec    edi
  421acc:	mov    ah,0x37
  421ace:	daa    
  421acf:	adc    al,BYTE PTR [esi-0x717a8e64]
  421ad5:	mov    ss,edx
  421ad7:	cmp    bh,BYTE PTR [edx-0xebb7af6]
  421add:	dec    edx
  421ade:	mov    bl,BYTE PTR [eax-0x70]
  421ae1:	aam    0xcf
  421ae3:	jp     0x421ad4
  421ae5:	sub    DWORD PTR [esi+0x4cfba668],esp
  421aeb:	inc    esi
  421aec:	ret    0xfba4
  421aef:	iret   
  421af0:	icebp  
  421af1:	and    edx,0xd1ae9f55
  421af7:	jno    0x421b38
  421af9:	ins    DWORD PTR es:[edi],dx
  421afa:	mov    ecx,eax
  421afc:	pop    es
  421afd:	xchg   BYTE PTR [ebp-0x73bafd1a],bl
  421b03:	in     al,dx
  421b04:	cld    
  421b05:	test   DWORD PTR [ebx+0x75],edi
  421b08:	add    al,0x52
  421b0a:	add    al,0x95
  421b0c:	sbb    eax,0xda963d3f
  421b11:	adc    al,0xea
  421b13:	retf   
  421b14:	out    0xbc,al
  421b16:	sbb    BYTE PTR [edx],0x8e
  421b19:	test   eax,0x42f7161a
  421b1e:	push   ds
  421b1f:	xchg   edi,eax
  421b20:	pop    ebp
  421b21:	cmp    al,0x3d
  421b23:	push   0x64
  421b25:	into   
  421b26:	int    0xf4
  421b28:	out    0x66,al
  421b2a:	out    0x96,al
  421b2c:	pop    es
  421b2d:	mov    bh,0xeb
  421b2f:	xor    BYTE PTR [ecx+0x30],0x8b
  421b33:	or     bl,BYTE PTR [bx+si]
  421b36:	pop    edi
  421b37:	nop
  421b38:	loop   0x421add
  421b3a:	push   eax
  421b3b:	jle    0x421b30
  421b3d:	std    
  421b3e:	aad    0x96
  421b40:	(bad)  
  421b41:	jp     0x421b90
  421b43:	ror    DWORD PTR [esi+0x7ef941f9],1
  421b49:	rcr    DWORD PTR [ebx-0x1e057e79],0xa4
  421b50:	fs add eax,0x8bce1a24
  421b56:	cli    
  421b57:	leave  
  421b58:	cdq    
  421b59:	mov    esp,0x4dffdb9a
  421b5e:	sbb    DWORD PTR gs:[ecx],0xffffffe0
  421b62:	js     0x421bdb
  421b64:	add    al,BYTE PTR [eax-0x74]
  421b67:	push   es
  421b68:	inc    ebx
  421b69:	dec    edx
  421b6a:	inc    ebp
  421b6b:	jecxz  0x421aee
  421b6d:	lahf   
  421b6e:	or     cl,dl
  421b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b71:	and    BYTE PTR [edx+0x4dc28a50],bl
  421b77:	retf   
  421b78:	add    DWORD PTR [ecx],edi
  421b7a:	add    DWORD PTR [edi],0xffffffb5
  421b7d:	push   esp
  421b7e:	jbe    0x421bb2
  421b80:	out    dx,al
  421b81:	xor    eax,0x417c74b5
  421b86:	fwait
  421b87:	xor    bh,dh
  421b89:	dec    esi
  421b8a:	mov    ds:0x48cedcf1,al
  421b8f:	into   
  421b90:	mov    esi,ecx
  421b92:	js     0x421b74
  421b94:	and    DWORD PTR [eax-0x53],ebp
  421b97:	adc    DWORD PTR [ecx-0x3eee8296],0xffffff91
  421b9e:	add    BYTE PTR [edx],0xd6
  421ba1:	in     eax,0xce
  421ba3:	add    al,0x74
  421ba5:	sbb    edi,DWORD PTR [eax]
  421ba7:	and    ebx,edx
  421ba9:	xchg   edi,eax
  421baa:	mov    ebx,0xd05125d9
  421baf:	imul   edx,DWORD PTR [eax],0xffffffd1
  421bb2:	aaa    
  421bb3:	mov    al,0x39
  421bb5:	icebp  
  421bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bb8:	mov    ecx,0xb73da5b3
  421bbd:	sar    DWORD PTR [ebx+esi*1-0x1fdfdb5a],0xa6
  421bc5:	sub    eax,0x17fd1b5
  421bca:	push   esi
  421bcb:	adc    DWORD PTR [edi],ebp
  421bcd:	or     eax,0x957920db
  421bd2:	push   0xffffffa5
  421bd4:	pop    ss
  421bd5:	loop   0x421ba6
  421bd7:	cmp    eax,0xc6c22049
  421bdc:	dec    ebx
  421bdd:	push   esp
  421bde:	or     dl,ch
  421be0:	sub    DWORD PTR [eax-0x63a57b36],ebp
  421be6:	mov    ecx,0xd09c9859
  421beb:	sub    al,bl
  421bed:	mov    ss,WORD PTR [ebx]
  421bef:	sub    edi,DWORD PTR [edi-0x47]
  421bf2:	jns    0x421bf1
  421bf4:	popf   
  421bf5:	dec    eax
  421bf6:	jmp    0x421ba1
  421bf8:	loop   0x421c4c
  421bfa:	daa    
  421bfb:	adc    ecx,DWORD PTR [ecx+esi*8-0x3035be4b]
  421c02:	cmp    ch,BYTE PTR [eax+0x2fb2b75c]
  421c08:	into   
  421c09:	jns    0x421c71
  421c0b:	add    edi,DWORD PTR [edi-0x6846a5eb]
  421c11:	test   BYTE PTR cs:[eax],ah
  421c14:	push   ebp
  421c15:	pop    si
  421c17:	shl    ecx,cl
  421c19:	jae    0x421c4a
  421c1b:	and    eax,0x26e26e02
  421c20:	mov    dl,0x47
  421c22:	xor    DWORD PTR [edx-0x7c],ecx
  421c25:	jae    0x421be6
  421c27:	sbb    DWORD PTR [edx],eax
  421c29:	clc    
  421c2a:	retf   0x8006
  421c2d:	push   cs
  421c2e:	inc    edi
  421c2f:	jb     0x421c77
  421c31:	(bad)  
  421c32:	(bad)  
  421c33:	lea    ecx,[esp+ebx*4]
  421c36:	push   ds
	...
  421c3f:	add    BYTE PTR [eax],al
  421c41:	or     al,0xc2
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0xe9971a56
  421c4e:	cmc    
  421c4f:	adc    BYTE PTR [ebx-0x2d],bh
  421c52:	xchg   ebp,eax
  421c53:	add    DWORD PTR [eax],eax
  421c55:	scas   al,BYTE PTR es:[edi]
  421c56:	add    eax,DWORD PTR [eax]
  421c58:	add    BYTE PTR [eax],al
  421c5a:	mov    eax,0xaee5d076
  421c5f:	jp     0x421caf
  421c61:	jmp    0x421c93
  421c63:	push   eax
  421c64:	(bad)  
  421c65:	jmp    0x421c13
  421c67:	jbe    0x421c15
  421c69:	mov    cl,0xfe
  421c6b:	fiadd  DWORD PTR [edi]
  421c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c6e:	iret   
  421c6f:	or     ch,BYTE PTR [edi+0x4ee51fbc]
  421c75:	rol    DWORD PTR [esi+0x4d93d662],1
  421c7b:	push   es
  421c7c:	fistp  DWORD PTR [ecx+0x3dae8d3c]
  421c82:	fs xchg esp,eax
  421c84:	push   0x92bfff0
  421c89:	(bad)  
  421c8a:	adc    BYTE PTR [ebx-0x2d5efc2a],bl
  421c90:	and    ebx,DWORD PTR [eax+0x17093017]
  421c96:	add    cl,BYTE PTR [ebx-0x56cc5b77]
  421c9c:	jno    0x421cf3
  421c9e:	mov    BYTE PTR [eax+0x3ee61464],0xb1
  421ca5:	retf   0xb5e0
  421ca8:	jns    0x421c70
  421caa:	mov    ah,0x84
  421cac:	scas   eax,DWORD PTR es:[edi]
  421cad:	push   edi
  421cae:	xchg   BYTE PTR [eax],dh
  421cb0:	sahf   
  421cb1:	mov    esp,0xc5d32631
  421cb6:	stos   BYTE PTR es:[edi],al
  421cb7:	mov    cl,0x9d
  421cb9:	jno    0x421ccc
  421cbb:	adc    esi,DWORD PTR [ebp+eiz*2+0x22]
  421cbf:	sahf   
  421cc0:	jp     0x421c92
  421cc2:	test   al,0x60
  421cc4:	sub    ah,BYTE PTR [edx+0x46]
  421cc7:	bound  eax,QWORD PTR [edx]
  421cc9:	bound  ebp,QWORD PTR [esi+0x61]
  421ccc:	not    BYTE PTR [ebp+0x4e]
  421ccf:	loope  0x421c7e
  421cd1:	nop
  421cd2:	adc    al,cl
  421cd4:	(bad)  
  421cd5:	jle    0x421d4a
  421cd7:	pusha  
  421cd8:	pop    ebp
  421cd9:	mov    es,WORD PTR [ebp-0x14]
  421cdc:	push   0x13
  421cde:	mov    bh,0x79
  421ce0:	(bad)  
  421ce1:	jnp    0x421d48
  421ce3:	stos   BYTE PTR es:[edi],al
  421ce4:	fs push bp
  421ce7:	test   DWORD PTR [ebp-0xc],ecx
  421cea:	mov    dl,0xf6
  421cec:	lahf   
  421ced:	mov    ds:0xa7e9d1b8,eax
  421cf2:	mov    ecx,0xe942d791
  421cf7:	out    0x37,eax
  421cf9:	(bad)  
  421cfa:	cwde   
  421cfb:	mov    ah,0x8d
  421cfd:	adc    DWORD PTR ds:0x91b82f12,0x9b14ac84
  421d07:	stos   DWORD PTR es:[edi],eax
  421d08:	dec    ecx
  421d09:	les    eax,FWORD PTR [esp+esi*1-0x69]
  421d0d:	xchg   edx,eax
  421d0e:	popa   
  421d0f:	adc    al,0x43
  421d11:	int    0xec
  421d13:	xchg   ebx,eax
  421d14:	and    ebx,DWORD PTR [edx]
  421d16:	in     al,dx
  421d17:	std    
  421d18:	retf   0x22fd
  421d1b:	cmp    BYTE PTR [edi-0x6cfce1b9],bl
  421d21:	mov    esp,0xd07de519
  421d26:	arpl   WORD PTR ds:0x61d63bba,bp
  421d2c:	cmp    DWORD PTR [ebp+0x1a21fc01],0xc4d61c5f
  421d36:	xchg   BYTE PTR [edi+0x71],al
  421d39:	push   0xffffff90
  421d3b:	ins    DWORD PTR es:[edi],dx
  421d3c:	mov    edx,0x3ed7b7e6
  421d41:	(bad)  
  421d42:	xlat   BYTE PTR ds:[ebx]
  421d43:	inc    ax
  421d45:	lahf   
  421d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d47:	std    
  421d48:	cld    
  421d49:	ins    DWORD PTR es:[edi],dx
  421d4a:	sub    edi,edi
  421d4c:	pusha  
  421d4d:	xchg   DWORD PTR [eax-0x7a],edi
  421d50:	dec    eax
  421d51:	ror    DWORD PTR [esi+0x60],cl
  421d54:	pusha  
  421d55:	push   ecx
  421d56:	adc    ebp,DWORD PTR [edx-0x7263bc88]
  421d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d5d:	ins    BYTE PTR es:[edi],dx
  421d5e:	push   ss
  421d5f:	arpl   WORD PTR [eax-0x40],di
  421d62:	sbb    ebp,eax
  421d64:	inc    ecx
  421d65:	jnp    0x421d9b
  421d67:	and    edi,eax
  421d69:	das    
  421d6a:	cs mov edi,0x567379eb
  421d70:	mov    ebx,DWORD PTR gs:[edi-0x1b]
  421d74:	mov    al,0x6c
  421d76:	hlt    
  421d77:	fisubr WORD PTR [edx+0x18bef5c0]
  421d7d:	xchg   ebp,eax
  421d7e:	cmc    
  421d7f:	jmp    0x37c7f2db
  421d84:	mov    ah,0xb
  421d86:	dec    ecx
  421d87:	mov    cl,0x18
  421d89:	pusha  
  421d8a:	scas   al,BYTE PTR es:[edi]
  421d8b:	iret   
  421d8c:	cld    
  421d8d:	mov    DWORD PTR [ecx+0x2f],ebp
  421d90:	push   edi
  421d91:	and    ecx,ecx
  421d93:	and    ah,0xa1
  421d96:	int    0x61
  421d98:	jp     0x421db2
  421d9a:	push   ss
  421d9b:	mov    ebx,0x750fa1d2
  421da0:	lods   eax,DWORD PTR ds:[esi]
  421da1:	push   esi
  421da2:	mov    ch,0x52
  421da5:	inc    esi
  421da6:	lds    eax,FWORD PTR [ecx-0x76]
  421da9:	or     ch,BYTE PTR [edx+0x20]
  421dac:	push   ecx
  421dad:	push   0x47
  421daf:	or     eax,0xd399829a
  421db4:	imul   eax,esp,0x372020b3
  421dba:	(bad)  
  421dbc:	inc    esi
  421dbd:	mul    BYTE PTR [ecx-0xa]
  421dc0:	call   0xed63b60c
  421dc5:	(bad)  
  421dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dc8:	rcr    BYTE PTR [ebp+0x3e6fcb2c],cl
  421dce:	je     0x421e31
  421dd0:	xchg   edi,eax
  421dd1:	in     al,0x58
  421dd3:	outs   dx,DWORD PTR ds:[esi]
  421dd4:	jmp    0xf8f000a
  421dd9:	mov    ebp,0x59e00079
  421dde:	repz cli 
  421de0:	inc    edi
  421de1:	mov    ah,0x2a
  421de3:	(bad)  
  421de4:	ins    BYTE PTR es:[edi],dx
  421de5:	adc    bh,BYTE PTR [eax]
  421de7:	add    eax,0x596490df
  421dec:	cmp    ah,dl
  421dee:	call   0x3b59c979
  421df3:	stc    
  421df4:	rcr    DWORD PTR [esi-0x13],0x4e
  421df8:	sbb    dh,BYTE PTR [eax]
  421dfa:	cmc    
  421dfb:	mov    edi,0x43ddc058
  421e00:	adc    ch,BYTE PTR [esi]
  421e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e03:	cli    
  421e04:	add    bh,cl
  421e06:	jns    0x421dc0
  421e08:	std    
  421e09:	enter  0xd086,0x90
  421e0d:	and    DWORD PTR [ecx-0x14],esp
  421e10:	lea    edx,[ebx+0x1ef21440]
  421e16:	dec    DWORD PTR [eax+ebx*8-0x7b]
  421e1a:	inc    esp
  421e1b:	add    al,0x42
  421e1d:	sub    al,0x50
  421e1f:	(bad)  
  421e20:	dec    eax
  421e21:	pop    edx
  421e22:	mov    ah,0xd1
  421e24:	jl     0x421dce
  421e26:	les    esp,FWORD PTR ds:0xe8792d5
  421e2c:	aaa    
  421e2d:	cmc    
  421e2e:	push   ebp
  421e2f:	fisttp DWORD PTR [edi]
  421e31:	jmp    0x421df9
  421e33:	mov    esi,0x8d3744f1
  421e38:	loopne 0x421e0d
  421e3a:	push   cs
  421e3b:	lock nop
  421e3d:	push   esi
  421e3e:	pop    es
  421e3f:	retf   
  421e40:	loop   0x421e84
  421e42:	ins    BYTE PTR es:[edi],dx
  421e43:	jmp    0xda130baa
  421e48:	fisttp WORD PTR [eax+0x7a375ebb]
  421e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e4f:	jns    0x421ecf
  421e51:	push   edx
  421e52:	je     0x421e16
  421e54:	data16 je 0x421ebf
  421e57:	inc    esi
  421e58:	rcr    DWORD PTR [esi],cl
  421e5a:	pop    esp
  421e5b:	ins    DWORD PTR es:[edi],dx
  421e5c:	(bad)  
  421e5d:	das    
  421e5e:	mov    bh,0xc8
  421e60:	adc    ebx,DWORD PTR [ebp+0x4d]
  421e63:	jle    0x421e4f
  421e65:	es sub al,0xf0
  421e68:	cmp    ah,bl
  421e6a:	out    dx,al
  421e6b:	adc    bl,ah
  421e6d:	and    BYTE PTR [edi],0x12
  421e70:	(bad)  
  421e71:	cdq    
  421e72:	mov    eax,0x6014dc1b
  421e77:	pop    ebp
  421e78:	mov    eax,0x823b441
  421e7d:	mov    DWORD PTR [esi],ebp
  421e7f:	imul   ebx,ebp,0x5812d44c
  421e85:	mov    eax,0xb3283b93
  421e8a:	jns    0x421ec4
  421e8c:	push   ds
  421e8d:	pop    edi
  421e8e:	test   eax,0x7e28683f
  421e93:	mov    BYTE PTR [ebx],ah
  421e95:	hlt    
  421e96:	imul   ecx,DWORD PTR [ebp-0x6a],0x751017e3
  421e9d:	mov    cl,BYTE PTR [edx+0x64]
  421ea0:	popf   
  421ea1:	fcom   DWORD PTR [ebx-0x2c3e1e14]
  421ea7:	std    
  421ea8:	mov    ecx,0x40d77c56
  421ead:	std    
  421eae:	and    eax,0xb7ca0710
  421eb3:	cmp    eax,DWORD PTR [ebx]
  421eb5:	push   edi
  421eb6:	sub    cl,BYTE PTR [eax-0x1]
  421eb9:	ja     0x421f22
  421ebb:	mov    ebp,0x70dabd59
  421ec0:	fcmovb st,st(0)
  421ec2:	xor    al,0x99
  421ec4:	sbb    DWORD PTR [eax-0xceca4d3],ebp
  421eca:	je     0x421e60
  421ecc:	dec    eax
  421ecd:	sub    al,0x5b
  421ecf:	mov    esi,0xe3a3d0bc
  421ed4:	xchg   ebp,eax
  421ed5:	mov    esi,0x33a21193
  421eda:	jne    0x421f2f
  421edc:	push   ss
  421edd:	jl     0x421e84
  421edf:	sub    eax,0xd0469d7a
  421ee4:	inc    edi
  421ee5:	out    dx,al
  421ee6:	ins    BYTE PTR es:[edi],dx
  421ee7:	ja     0x421f3a
  421ee9:	sub    edx,edx
  421eeb:	mov    ebx,0x71d8f382
  421ef0:	inc    edi
  421ef1:	sar    DWORD PTR [edi],0xb5
  421ef4:	jge    0x421f0a
  421ef6:	ds nop
  421ef8:	das    
  421ef9:	sub    eax,0x204695fa
  421efe:	hlt    
  421eff:	inc    ecx
  421f00:	repnz mov dh,0x4b
  421f03:	jmp    0x4e41:0x768a53f7
  421f0a:	mov    al,0x9f
  421f0c:	or     edx,edi
  421f0e:	xchg   BYTE PTR [esi-0x7d],bl
  421f11:	dec    ebx
  421f12:	popf   
  421f13:	push   ds
  421f14:	push   ecx
  421f15:	jo     0x421ed4
  421f17:	pop    esp
  421f18:	iret   
  421f19:	adc    DWORD PTR [ebx-0x47],0x57
  421f1d:	xor    DWORD PTR [esi],ebx
  421f1f:	jmp    0x421ea3
  421f21:	lahf   
  421f22:	(bad)  
  421f23:	fmul   QWORD PTR [edi-0x3da3261]
  421f29:	lods   eax,DWORD PTR ds:[esi]
  421f2a:	add    DWORD PTR [ebx],edi
  421f2c:	dec    edx
  421f2d:	hlt    
  421f2e:	ret    0x8630
  421f31:	test   eax,0x298bc69f
  421f36:	push   cs
  421f37:	ja     0x421f1d
  421f39:	pop    ds
  421f3a:	std    
  421f3b:	sub    ecx,DWORD PTR ds:0xe29abe18
  421f41:	jae    0x421f78
  421f43:	xchg   ecx,eax
  421f44:	mov    bh,0xd6
  421f46:	inc    ebx
  421f47:	jno    0x421ef3
  421f49:	stos   BYTE PTR es:[edi],al
  421f4a:	sub    eax,0x7147ee74
  421f4f:	addr16 push esi
  421f51:	test   eax,0x69cceef3
  421f56:	add    ebx,ecx
  421f58:	call   0x894563e6
  421f5d:	cs sub eax,0xd7e0afb8
  421f63:	ins    BYTE PTR es:[edi],dx
  421f64:	push   0x7c
  421f66:	push   0xffffff88
  421f68:	mov    eax,ds:0x20e45642
  421f6d:	push   eax
  421f6e:	add    BYTE PTR [ecx-0x56d8324f],bh
  421f74:	mov    esp,edx
  421f76:	push   0xffffff8e
  421f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f79:	iret   
  421f7a:	dec    eax
  421f7b:	inc    esp
  421f7c:	ret    0x9eef
  421f7f:	and    eax,0x70ecbc98
  421f84:	sahf   
  421f85:	ds sub al,0x41
  421f88:	fisub  DWORD PTR [edx]
  421f8a:	xchg   bp,ax
  421f8c:	lahf   
  421f8d:	dec    edx
  421f8e:	dec    esp
  421f8f:	dec    edx
  421f90:	add    BYTE PTR [edi+0x28],bh
  421f93:	cmc    
  421f94:	cmp    DWORD PTR [edx+0x4381219],edi
  421f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f9c:	pushf  
  421f9d:	data16 jle 0x421f8b
  421fa0:	xlat   BYTE PTR ds:[ebx]
  421fa1:	and    BYTE PTR [esp+edx*1+0x65],ch
  421fa5:	test   BYTE PTR [edx+0x1dba85c9],bh
  421fab:	cmp    al,0xdf
  421fad:	jnp    0x421f5b
  421faf:	push   ebx
  421fb0:	xchg   edi,eax
  421fb1:	push   edx
  421fb2:	pop    ebp
  421fb3:	mov    DWORD PTR [ebp+edi*4-0x22],ebx
  421fb7:	or     eax,0x370884a8
  421fbc:	and    eax,0x3dd74d7a
  421fc1:	cmp    dh,BYTE PTR [ebx-0x47]
  421fc4:	daa    
  421fc5:	lahf   
  421fc6:	sbb    cl,BYTE PTR [ebp+0x4a]
  421fc9:	mov    eax,0x7413d4d1
  421fce:	fcom   st(5)
  421fd0:	add    eax,0x2d7564e
  421fd5:	or     al,0xd9
  421fd7:	sbb    BYTE PTR [ecx-0x55],0xe8
  421fdb:	stos   DWORD PTR es:[edi],eax
  421fdc:	sar    BYTE PTR [edi+0x2d],cl
  421fdf:	fwait
  421fe0:	mov    bl,0xce
  421fe2:	into   
  421fe3:	mul    BYTE PTR [esi-0x22]
  421fe6:	mov    dh,0x35
  421fe8:	xor    edx,DWORD PTR [ebx+eiz*2]
  421feb:	jns    0x422062
  421fed:	sbb    ebx,DWORD PTR [ebp-0x3e]
  421ff0:	sub    BYTE PTR [ecx+0x36],ch
  421ff3:	cs xor ch,bh
  421ff6:	sub    al,0x9
  421ff8:	dec    eax
  421ff9:	inc    ecx
  421ffa:	sbb    BYTE PTR [eax-0x35cff2b4],0x3a
  422001:	xor    DWORD PTR [ebp-0x2e],ebx
  422004:	fmul   st,st(3)
  422006:	sbb    DWORD PTR [eax],eax
	...
  422010:	add    BYTE PTR [edx+0x4f],al
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0x8d863b76
  422020:	xchg   esi,eax
  422021:	sbb    DWORD PTR [ecx+0x3ae0001],0xcee80000
  42202b:	sbb    al,0x1d
  42202d:	(bad)  
  42202e:	jmp    0xc71ec260
  422033:	icebp  
  422034:	push   edi
  422035:	jae    0x4220ab
  422037:	lea    eax,[ecx]
  422039:	jl     0x4220b4
  42203b:	ffree  st(6)
  42203d:	call   0xd1ae:0xe2f56963
  422044:	jle    0x42203d
  422046:	lds    ebp,FWORD PTR [eax+0x3d]
  422049:	xchg   BYTE PTR [ebx+0x30ece0e0],bl
  42204f:	gs jmp 0xab4a:0x678d2d3f
  422057:	xor    DWORD PTR [esi+0x1ecd29e5],ebp
  42205d:	inc    eax
  42205e:	dec    ecx
  42205f:	in     eax,dx
  422060:	cs mov edi,0xc3081c12
  422066:	fwait
  422067:	jge    0x422066
  422069:	jnp    0x422022
  42206b:	mov    cl,0x6
  42206d:	(bad)  
  42206e:	fimul  WORD PTR [ecx-0x3a]
  422071:	pop    ebp
  422072:	out    dx,eax
  422073:	sbb    eax,DWORD PTR [edi]
  422075:	push   es
  422076:	popa   
  422077:	push   edx
  422078:	ja     0x42205a
  42207a:	stos   DWORD PTR es:[edi],eax
  42207b:	push   0x6849ccdd
  422080:	cmp    eax,0xa726e3d6
  422085:	lds    ebp,FWORD PTR [ebx]
  422087:	cmc    
  422088:	enter  0xaeee,0xbc
  42208c:	outs   dx,BYTE PTR ds:[esi]
  42208d:	gs ins DWORD PTR es:[edi],dx
  42208f:	and    edi,DWORD PTR [ebx-0x39f3afea]
  422095:	jmp    0x280d2b3b
  42209a:	adc    eax,eax
  42209c:	mov    ah,0xda
  42209e:	imul   edi,DWORD PTR [ebx-0x55],0xffffffc4
  4220a2:	xlat   BYTE PTR ds:[ebx]
  4220a3:	sahf   
  4220a4:	icebp  
  4220a5:	test   al,0x10
  4220a7:	jmp    0xc059dca8
  4220ac:	sbb    BYTE PTR [edx-0x53],0xff
  4220b0:	inc    ecx
  4220b1:	cdq    
  4220b2:	out    dx,eax
  4220b3:	aad    0x25
  4220b5:	ds dec edx
  4220b7:	call   0x8e800fb
  4220bc:	in     eax,dx
  4220bd:	xchg   ebx,eax
  4220be:	mov    eax,ds:0x2bcddfde
  4220c3:	xor    bh,BYTE PTR [edi+0x74]
  4220c6:	xchg   esp,eax
  4220c7:	pop    edx
  4220c8:	mov    dh,0xbc
  4220ca:	adc    bh,ah
  4220cc:	les    esi,FWORD PTR [esi]
  4220ce:	fisub  DWORD PTR [eax]
  4220d0:	pop    ebp
  4220d1:	pop    esp
  4220d2:	pop    esp
  4220d3:	mov    ebx,0x8cacafe3
  4220d8:	add    BYTE PTR [ecx+0x1cca3ab5],ah
  4220de:	out    dx,eax
  4220df:	jge    0x422078
  4220e1:	xor    BYTE PTR [eax+ecx*2-0x3d3b0239],0xe1
  4220e9:	sbb    dl,cl
  4220eb:	jns    0x4220b3
  4220ed:	mov    ebp,0x47e644a7
  4220f2:	rcr    DWORD PTR [edi-0x32],cl
  4220f5:	mov    ds:0xb25fce9d,eax
  4220fa:	cmp    ecx,DWORD PTR [edi+ebx*2+0x4c554339]
  422101:	in     al,0x48
  422103:	popf   
  422104:	xchg   ebx,eax
  422105:	sar    BYTE PTR [ebp-0x3b4e637c],1
  42210b:	call   0xb8fc3f07
  422110:	sbb    BYTE PTR [edi*1+0x29139ac6],0x9c
  422118:	push   DWORD PTR fs:[esi+0x7b9a4b3c]
  42211f:	mov    ebx,0xf07bc37b
  422124:	sahf   
  422125:	out    dx,al
  422126:	mov    eax,0xec5c8dc1
  42212b:	sbb    DWORD PTR [ecx+0x45],edx
  42212e:	mov    eax,0x6847d468
  422133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422134:	xchg   DWORD PTR [edi+0x39627077],edi
  42213a:	push   esp
  42213b:	xor    eax,0x85d6747d
  422140:	mov    eax,0xcebd1ce5
  422145:	into   
  422146:	popa   
  422147:	sbb    esi,esi
  422149:	lahf   
  42214a:	stos   BYTE PTR es:[edi],al
  42214b:	sbb    cl,dl
  42214d:	xor    eax,0x44a0a5a5
  422152:	mov    dh,0x32
  422154:	arpl   WORD PTR [ebp-0x31],di
  422157:	cmp    BYTE PTR [edx-0x2b],cl
  42215a:	sub    esp,esi
  42215c:	in     eax,0xe3
  42215e:	or     esp,DWORD PTR [edx]
  422160:	xchg   esi,eax
  422161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422162:	mov    eax,ds:0x10815299
  422167:	(bad)  
  422168:	pop    edi
  422169:	jbe    0x422145
  42216b:	call   0xb742d428
  422170:	mov    ebp,0xe6a7dd95
  422175:	pop    edx
  422176:	push   edx
  422177:	nop
  422178:	int    0xf9
  42217a:	dec    ebp
  42217b:	cli    
  42217c:	sub    al,0x30
  42217e:	adc    esi,esi
  422180:	out    0xa7,al
  422182:	dec    esp
  422183:	out    0x96,al
  422185:	pop    ds
  422186:	not    DWORD PTR [edi-0x27]
  422189:	xor    DWORD PTR [ebp+0x3d],ecx
  42218c:	jl     0x4221b0
  42218e:	and    BYTE PTR [ebp-0x3e],0x49
  422192:	sbb    esi,DWORD PTR [ecx+0xb32e2ed]
  422198:	jbe    0x422136
  42219a:	xor    BYTE PTR [eax-0x9f21350],ah
  4221a0:	sub    esp,edx
  4221a2:	add    DWORD PTR [esi-0x5e],esp
  4221a5:	inc    esp
  4221a6:	jl     0x422152
  4221a8:	mov    edx,0x945d8ce4
  4221ad:	call   0x8ef0:0x30f8e3e7
  4221b4:	sbb    edx,DWORD PTR [ebp-0x48]
  4221b7:	pop    edi
  4221b8:	dec    ebp
  4221b9:	and    ah,ch
  4221bb:	push   ebx
  4221bc:	jno    0x42218a
  4221be:	mov    ebp,0x17a748fe
  4221c3:	adc    ch,al
  4221c5:	mov    cs,esi
  4221c7:	xchg   BYTE PTR [ebp-0x22],ch
  4221ca:	sahf   
  4221cb:	jge    0x42216e
  4221cd:	(bad)  
  4221cf:	popa   
  4221d0:	fisubr WORD PTR [ebx+esi*2+0x285c85f3]
  4221d7:	mov    edx,DWORD PTR ds:0xa8ed8ff8
  4221dd:	and    BYTE PTR [edi+0x64],dh
  4221e0:	mov    bh,0x6b
  4221e2:	mov    ebp,0xa3b71923
  4221e7:	(bad)  
  4221e8:	adc    BYTE PTR ds:0xf07ec30f,ah
  4221ee:	pop    ds
  4221ef:	shl    DWORD PTR ds:0xdd25eaf,0xa2
  4221f6:	bnd jl 0x422206
  4221f9:	dec    esp
  4221fa:	mov    bl,ah
  4221fc:	shl    BYTE PTR [edx],0x25
  4221ff:	xchg   edx,eax
  422200:	dec    esp
  422201:	fstp   st(1)
  422203:	fbld   TBYTE PTR [ecx+0x55]
  422206:	mov    dh,0x8c
  422208:	fwait
  422209:	js     0x42223f
  42220b:	mov    esp,0x4c7cede8
  422210:	stc    
  422211:	call   0xfc2a001e
  422216:	aad    0x6
  422218:	fsubr  DWORD PTR [esp+ebp*1+0x60d87d52]
  42221f:	dec    eax
  422220:	and    dh,BYTE PTR [esi]
  422222:	retf   
  422223:	je     0x422264
  422225:	rcr    BYTE PTR [esi+0x74],0x67
  422229:	cmc    
  42222a:	push   cs
  42222b:	into   
  42222c:	outs   dx,BYTE PTR ds:[esi]
  42222d:	sub    dh,dh
  42222f:	xor    ah,cl
  422231:	pop    edi
  422232:	sbb    al,0x3b
  422234:	xchg   ebx,eax
  422235:	dec    edi
  422236:	loopne 0x422270
  422238:	inc    edx
  422239:	push   ebx
  42223a:	fcom   QWORD PTR [ebx+0x41]
  42223d:	lock jle 0x422260
  422240:	fdivr  QWORD PTR [edi+0x3d399723]
  422246:	dec    eax
  422247:	sbb    cl,cl
  422249:	dec    esp
  42224a:	lea    edx,[eax+ebx*8]
  42224d:	shl    BYTE PTR [esi-0x165f34f0],0x5c
  422254:	daa    
  422255:	sbb    al,0xa3
  422257:	push   esi
  422258:	push   esp
  422259:	and    eax,0x8685e7ec
  42225e:	push   es
  42225f:	xchg   edi,eax
  422260:	adc    eax,0xc0743f7f
  422265:	mov    ecx,?
  422267:	test   ah,ah
  422269:	cli    
  42226a:	push   edx
  42226b:	dec    esi
  42226c:	mov    ds:0x7fb0ab76,al
  422271:	lock push ebx
  422273:	cmc    
  422274:	ss aas 
  422276:	mov    eax,ds:0xedbaaf6e
  42227b:	(bad)  
  42227c:	fld    st(7)
  42227e:	xlat   BYTE PTR ds:[ebx]
  42227f:	inc    ecx
  422280:	push   ecx
  422281:	xor    dh,BYTE PTR [edx-0x14]
  422284:	repz addr16 addr16 js 0x42222b
  422289:	xchg   esp,eax
  42228a:	jb     0x422213
  42228c:	push   ss
  42228d:	(bad)  
  42228e:	daa    
  42228f:	stos   BYTE PTR es:[edi],al
  422290:	cmp    BYTE PTR [edi],ch
  422292:	add    BYTE PTR [ecx-0x32],dl
  422295:	std    
  422296:	adc    al,0xff
  422298:	adc    eax,0x6bef6465
  42229d:	inc    BYTE PTR [ebp-0x3b113921]
  4222a3:	jne    0x4222e0
  4222a5:	in     al,0x1a
  4222a7:	in     eax,0x28
  4222a9:	xor    al,0x8
  4222ab:	nop
  4222ac:	mov    edi,0x50bc4160
  4222b1:	sbb    eax,DWORD PTR [edx+0x5d]
  4222b4:	jmp    0x4222dc
  4222b6:	call   0x7022:0x14b295fc
  4222bd:	imul   eax,edx,0x2b
  4222c0:	(bad)  
  4222c1:	mov    cl,0x79
  4222c3:	mov    eax,0xd7ae51b6
  4222c8:	sbb    dh,BYTE PTR [esi+0x5]
  4222cb:	fwait
  4222cc:	call   0xeae0c0b1
  4222d1:	jbe    0x422333
  4222d3:	push   ds
  4222d4:	mov    BYTE PTR [ecx+0x425384],ah
  4222da:	pop    ebp
  4222db:	or     DWORD PTR [eax],esi
  4222dd:	scas   al,BYTE PTR es:[edi]
  4222de:	push   eax
  4222df:	lods   eax,DWORD PTR ds:[esi]
  4222e0:	adc    eax,0x7cb273c1
  4222e5:	xchg   BYTE PTR [esp+edx*2+0x35],dh
  4222e9:	mov    edi,0x328ac332
  4222ee:	adc    eax,0x61c3b450
  4222f3:	cmp    eax,0x8cbc65ff
  4222f8:	xor    eax,0xfa9c8096
  4222fd:	aas    
  4222fe:	mov    BYTE PTR [ebx+edx*4],bh
  422301:	test   eax,0x7072c4fb
  422306:	cmc    
  422307:	mov    dh,0x9e
  422309:	xchg   DWORD PTR [edx-0x7a],ebp
  42230c:	int    0x7f
  42230e:	xor    eax,0xc6bd66ef
  422313:	sbb    BYTE PTR [ebx+0x45d7f057],0xb8
  42231a:	fisub  WORD PTR [esp+ecx*8-0x1f97dfd9]
  422321:	push   ss
  422322:	in     eax,0x83
  422324:	call   0x5ef28a86
  422329:	xor    al,0x29
  42232b:	pop    ecx
  42232c:	jl     0x422338
  42232e:	push   ds
  42232f:	sbb    ecx,DWORD PTR [ebx+0x66757f1]
  422335:	sbb    al,0x32
  422337:	dec    edi
  422338:	lods   al,BYTE PTR ds:[esi]
  422339:	mov    ebx,0xfd963f72
  42233e:	fisttp WORD PTR [ecx-0x7749d7a9]
  422344:	add    BYTE PTR [eax],0x84
  422347:	sbb    BYTE PTR [eax-0x5a],cl
  42234a:	pop    ecx
  42234b:	cmp    eax,0xe2dac9d
  422350:	cwde   
  422351:	xor    BYTE PTR [edi+0x47],dl
  422354:	xchg   ecx,eax
  422355:	jecxz  0x4222df
  422357:	rol    BYTE PTR [edx-0x107c8898],cl
  42235d:	add    eax,0x10d0d51d
  422362:	ja     0x4223c1
  422364:	add    DWORD PTR ds:[ecx-0x2e],0x29
  422369:	push   cs
  42236a:	lahf   
  42236b:	xor    DWORD PTR [eax-0x60a6c52c],esp
  422371:	repnz mov BYTE PTR ds:0x17384724,ah
  422378:	out    0x23,al
  42237a:	jecxz  0x4223cc
  42237c:	pop    ss
  42237d:	push   eax
  42237e:	rcr    DWORD PTR [eax+0x23],0xa6
  422382:	xor    eax,0xdded574d
  422387:	aam    0x35
  422389:	cmp    esp,DWORD PTR [ecx-0x61]
  42238c:	sbb    BYTE PTR [ecx+0x2ced0d1e],bh
  422392:	jne    0x422404
  422394:	test   DWORD PTR [eax+0x69],ebx
  422397:	arpl   WORD PTR [ebx-0x470eb2e0],ax
  42239d:	inc    edi
  42239e:	jno    0x42241a
  4223a0:	fisttp QWORD PTR [esi+0x4]
  4223a3:	push   ebx
  4223a4:	mov    ebx,DWORD PTR [ebx]
  4223a6:	(bad)  
  4223a7:	mov    edx,0x127d552f
  4223ac:	addr16 dec esp
  4223ae:	movq   mm6,mm5
  4223b1:	xor    BYTE PTR [ecx-0x487fd4ee],dh
  4223b7:	in     al,dx
  4223b8:	sub    ebp,DWORD PTR [ecx-0x13]
  4223bb:	jecxz  0x4223ec
  4223bd:	push   ss
  4223be:	aam    0x48
  4223c0:	fstp   st(7)
  4223c2:	aas    
  4223c3:	jmp    FWORD PTR [eax-0x3f]
  4223c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223c7:	and    eax,DWORD PTR [esi-0x5f]
  4223ca:	daa    
  4223cb:	call   0x6284:0x1432b1e8
  4223d2:	or     al,0x9e
  4223d4:	loope  0x42236a
  4223d6:	add    DWORD PTR [eax],eax
	...
  4223e0:	add    BYTE PTR [esi+0x7c],ah
  4223e3:	loopne 0x4223a0
  4223e5:	cli    
  4223e6:	mov    edi,0xa15cfd7f
  4223eb:	pop    esp
  4223ec:	dec    edi
  4223ed:	mov    BYTE PTR [esi],dh
  4223ef:	call   0x1df53b0
  4223f4:	add    BYTE PTR [esi-0x32fffffd],ch
  4223fa:	sub    DWORD PTR [edi-0x22ac660e],ebx
  422400:	(bad)  
  422401:	aam    0xab
  422403:	xchg   ebx,eax
  422404:	inc    esp
  422405:	int3   
  422406:	retf   0xff69
  422409:	jmp    0x4223d9
  42240b:	fisttp QWORD PTR [ebx+0x47]
  42240e:	jb     0x422443
  422410:	rcl    DWORD PTR [esp+eax*4+0x7d],cl
  422414:	sahf   
  422415:	fidivr WORD PTR [edi]
  422417:	dec    ebp
  422418:	pop    ss
  422419:	outs   dx,DWORD PTR ds:[esi]
  42241a:	jle    0x42240f
  42241c:	ins    BYTE PTR es:[edi],dx
  42241d:	gs repnz inc eax
  422420:	xor    ch,BYTE PTR [edx]
  422422:	pop    esp
  422423:	stos   DWORD PTR es:[edi],eax
  422424:	xor    ecx,DWORD PTR [ebx]
  422426:	jle    0x422439
  422428:	mov    dl,0x70
  42242a:	push   ecx
  42242b:	call   0x959b8f91
  422430:	cs and al,0xa3
  422433:	ds push eax
  422435:	adc    ecx,DWORD PTR [ecx-0x2d]
  422438:	pop    edx
  422439:	inc    ebx
  42243a:	mov    dl,0x1b
  42243c:	cdq    
  42243d:	div    DWORD PTR [esi]
  42243f:	mov    edx,0x5a0f202
  422444:	loopne 0x42243a
  422446:	and    al,0xde
  422448:	adc    ecx,DWORD PTR [edx-0x37]
  42244b:	in     eax,dx
  42244c:	jecxz  0x4223eb
  42244e:	cli    
  42244f:	jg     0x42248c
  422451:	mov    ebx,0xf88e711a
  422456:	mov    fs,esp
  422458:	(bad)  [edx+0x10]
  42245b:	cmp    eax,0x16c4ca73
  422460:	leave  
  422461:	add    eax,0x32ae706b
  422466:	push   ecx
  422467:	and    BYTE PTR [ecx],al
  422469:	lods   eax,DWORD PTR ds:[esi]
  42246a:	dec    eax
  42246b:	sub    al,0x86
  42246d:	mov    cl,0xce
  42246f:	adc    eax,DWORD PTR [esi+0x28]
  422472:	pop    ebp
  422473:	fisubr DWORD PTR ds:0xc087dd8d
  422479:	add    DWORD PTR [edx+0x36],ebx
  42247c:	sbb    esi,DWORD PTR [ebx+esi*8-0x12a3add]
  422483:	pop    eax
  422484:	and    DWORD PTR [ebp-0x1c],edx
  422487:	ja     0x4224f0
  422489:	outs   dx,BYTE PTR ds:[esi]
  42248a:	cmp    edi,DWORD PTR [edi]
  42248c:	loopne 0x422444
  42248e:	jb     0x4224c1
  422490:	loopne 0x42249e
  422492:	xor    edi,ecx
  422494:	div    DWORD PTR [eax-0x30]
  422497:	sub    bh,BYTE PTR [esi+esi*4-0x435b1c61]
  42249e:	outs   dx,BYTE PTR ds:[esi]
  42249f:	fs push esp
  4224a1:	gs (bad) 
  4224a4:	cmp    ch,BYTE PTR [edi]
  4224a6:	and    al,0xb4
  4224a8:	sbb    BYTE PTR [ebx-0x68],ah
  4224ab:	pop    edi
  4224ac:	sub    ecx,DWORD PTR [ecx-0x56]
  4224af:	(bad)  
  4224b0:	jns    0x4224b2
  4224b2:	adc    BYTE PTR [ebx-0x3f87c8bc],bl
  4224b8:	mov    esi,0x171c8807
  4224bd:	imul   esp,DWORD PTR [ebx-0x707f7cb],0x2
  4224c4:	aad    0xe
  4224c6:	mov    ch,0xda
  4224c8:	pop    ss
  4224c9:	sbb    eax,0x7b1f108f
  4224ce:	in     eax,0x42
  4224d0:	in     al,0xa8
  4224d2:	jmp    0x487:0xf11a300a
  4224d9:	stc    
  4224da:	sbb    ecx,0xffffffc3
  4224dd:	das    
  4224de:	inc    ecx
  4224df:	cmp    BYTE PTR [ebx+0x58696aa0],dl
  4224e5:	ss call 0x28d4:0xcea2c6ac
  4224ed:	popa   
  4224ee:	mov    edi,0xeb5a52ab
  4224f3:	bound  ebx,QWORD PTR [ebx-0x5a]
  4224f6:	or     esp,DWORD PTR [edi+0x11]
  4224f9:	rol    DWORD PTR es:[edi+0x62beb71d],0xf1
  422501:	popa   
  422502:	mov    dl,0x73
  422504:	add    eax,0xd8cfea53
  422509:	inc    ebx
  42250a:	rcr    BYTE PTR [eax-0x13886687],1
  422510:	cmc    
  422511:	fidiv  WORD PTR [esi]
  422513:	loop   0x42251a
  422515:	cmp    ah,dl
  422517:	dec    eax
  422518:	sbb    ebx,ebx
  42251a:	outs   dx,BYTE PTR ds:[esi]
  42251b:	fadd   st,st(3)
  42251d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42251e:	or     eax,0xd6a62e07
  422523:	jmp    0x80d8:0xd3093cf3
  42252a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42252b:	cmp    eax,0xa3edeced
  422530:	mov    ebp,0x8cdec42d
  422535:	shl    DWORD PTR [esi-0x19],cl
  422538:	jmp    0x3fce:0xfc5c23be
  42253f:	jno    0x422549
  422541:	nop
  422542:	jb     0x42256e
  422544:	addr16 pop edi
  422546:	pop    ds
  422547:	(bad)  
  422548:	mov    edi,0x90d1d779
  42254d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42254e:	dec    ebp
  42254f:	xchg   edx,eax
  422550:	mov    bh,BYTE PTR [eax-0x79a3b6bf]
  422556:	mov    eax,0xa7686e17
  42255b:	(bad)  
  42255c:	sbb    al,0x2c
  42255e:	(bad)  
  42255f:	xchg   ebx,eax
  422560:	push   es
  422561:	push   ss
  422562:	sub    eax,0x9d803bdb
  422567:	inc    ebx
  422568:	and    esi,esi
  42256a:	and    DWORD PTR [ebp+ebp*2-0x5a],ebx
  42256e:	xchg   esi,eax
  42256f:	out    dx,al
  422570:	stos   BYTE PTR es:[edi],al
  422571:	mov    ch,0x9e
  422573:	jmp    0xad26:0x9ac57d65
  42257a:	fs jae 0x42258b
  42257d:	mov    edi,0x3b076c0b
  422582:	add    ecx,ebp
  422584:	in     eax,0xca
  422586:	mov    eax,0xb02fb28f
  42258b:	sahf   
  42258c:	sbb    bl,BYTE PTR [esp+ebp*2+0x55d35c29]
  422593:	loope  0x4225d9
  422595:	sub    bh,BYTE PTR [eax+edi*8+0x75feede4]
  42259c:	xor    DWORD PTR [ebp-0x51],esp
  42259f:	inc    esp
  4225a0:	mov    al,ds:0x7d765071
  4225a5:	and    al,0xcf
  4225a7:	mov    ch,0xec
  4225a9:	pop    ebp
  4225aa:	xor    BYTE PTR [esi-0x1511d2bf],dl
  4225b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225b1:	pop    es
  4225b2:	mov    ecx,0xe73e81c2
  4225b7:	push   0x24
  4225b9:	leave  
  4225ba:	test   edx,ebx
  4225bc:	out    0x8,eax
  4225be:	jmp    0x4f05bbb8
  4225c3:	mov    esp,0xbc651b83
  4225c8:	jl     0x4225d4
  4225ca:	stos   BYTE PTR es:[edi],al
  4225cb:	inc    edx
  4225cc:	cli    
  4225cd:	sub    ebx,DWORD PTR [esp+ebx*8-0x1]
  4225d1:	inc    esp
  4225d2:	pop    ebp
  4225d3:	sub    DWORD PTR [edi+eiz*8-0x1bede659],esp
  4225da:	arpl   WORD PTR [ebx-0x4dbf37ba],ax
  4225e0:	inc    ebx
  4225e1:	mov    ch,0xf6
  4225e3:	lds    esi,FWORD PTR [ecx+0x44]
  4225e6:	aaa    
  4225e7:	xor    DWORD PTR [ecx],ebp
  4225e9:	loop   0x422624
  4225eb:	pop    ebp
  4225ec:	xor    eax,0xb873565c
  4225f1:	loope  0x4225e0
  4225f3:	lock das 
  4225f5:	pushf  
  4225f6:	xchg   edi,eax
  4225f7:	mov    esp,0xbc2723b2
  4225fc:	test   BYTE PTR ds:0x97c34994,dl
  422602:	test   DWORD PTR [ebp-0x1b29593f],ebx
  422608:	add    ch,BYTE PTR [edi]
  42260a:	test   eax,0x21716dc1
  42260f:	mov    bl,0xa7
  422611:	idiv   BYTE PTR [eax]
  422613:	retf   0x33c7
  422616:	ss imul esi,ebp,0xfe3bbd39
  42261d:	(bad)  
  42261e:	mov    fs,WORD PTR [eax+0x7d13153b]
  422624:	mov    gs,WORD PTR [ecx-0x18]
  422627:	xchg   edi,eax
  422628:	jae    0x42267a
  42262a:	sub    eax,DWORD PTR [ecx]
  42262c:	or     DWORD PTR [eax],0x6d612daf
  422632:	aad    0x50
  422634:	push   esi
  422635:	enter  0xddfc,0xb7
  422639:	cmp    eax,0xa8d84bdf
  42263e:	rol    BYTE PTR [edi],cl
  422640:	jmp    0x51a4:0x48d268b1
  422647:	data16 jp 0x422656
  42264a:	mov    ch,0x59
  42264c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42264d:	jg     0x422697
  42264f:	jle    0x4225e0
  422651:	sub    ebx,DWORD PTR [ebp-0x69e6588]
  422657:	test   eax,0x32b96ed5
  42265c:	cmp    DWORD PTR cs:[ebx-0x50ce8672],0xffffff80
  422664:	xchg   ebp,eax
  422665:	and    dl,BYTE PTR [edi-0x4fc9c2bd]
  42266b:	xor    DWORD PTR [eax+0x1eb94e26],0xffffffe0
  422672:	in     al,dx
  422673:	data16 jae 0x4226b9
  422676:	aaa    
  422677:	(bad)  
  422678:	mov    dh,0x67
  42267a:	(bad)  
  42267b:	sub    DWORD PTR gs:[ecx+0x1ab2aace],ecx
  422682:	adc    BYTE PTR [ecx],bl
  422684:	xor    al,0x73
  422686:	sub    BYTE PTR [esi],0xb4
  422689:	dec    edx
  42268a:	xchg   BYTE PTR [edx+0x43918642],cl
  422690:	mov    ds:0x4ce59e3b,al
  422695:	xchg   ebx,eax
  422696:	jmp    0x5c05:0x43dcb766
  42269d:	jecxz  0x4226ad
  42269f:	mov    ds:0x4b93f009,eax
  4226a4:	je     0x4226d8
  4226a6:	xchg   ebp,eax
  4226a7:	jmp    0x21ec:0x22e47b6d
  4226ae:	(bad)  
  4226af:	enter  0xb3d4,0x8a
  4226b3:	retf   0x6b75
  4226b6:	cmp    edx,DWORD PTR [esi]
  4226b8:	(bad)  
  4226b9:	mov    ecx,0x91aff471
  4226be:	mov    dl,0x4f
  4226c0:	nop
  4226c1:	enter  0x65d5,0x1a
  4226c5:	aam    0x26
  4226c7:	cmp    DWORD PTR [ebx+0x68],0x570d5831
  4226ce:	loopne 0x4226fb
  4226d0:	rol    BYTE PTR [esi+0x2b],1
  4226d3:	mov    dl,0x5a
  4226d5:	retf   
  4226d6:	retf   0xf817
  4226d9:	retf   0x320b
  4226dc:	jns    0x42273e
  4226de:	outs   dx,DWORD PTR ds:[esi]
  4226df:	ror    DWORD PTR [ecx-0x323d4cc9],0x56
  4226e6:	popa   
  4226e7:	and    DWORD PTR ds:[ebp+eiz*8+0x59],edi
  4226ec:	in     eax,dx
  4226ed:	imul   ebp,DWORD PTR [ecx+0x28433d0f],0xfffffffa
  4226f4:	arpl   WORD PTR [esi],dx
  4226f6:	xor    esi,esp
  4226f8:	dec    edx
  4226f9:	xchg   ebx,eax
  4226fa:	jge    0x4226cc
  4226fc:	sbb    al,0x4b
  4226fe:	pop    edx
  4226ff:	fdiv   QWORD PTR [esi+0x19]
  422702:	or     cl,BYTE PTR [ebp+0x48]
  422705:	les    esp,FWORD PTR [eax]
  422707:	pop    ss
  422708:	pop    es
  422709:	ret    0x1f22
  42270c:	ins    BYTE PTR es:[edi],dx
  42270d:	(bad)  
  42270e:	push   DWORD PTR [ebx-0x5a877c2d]
  422714:	mul    edx
  422716:	int    0xb0
  422718:	sahf   
  422719:	ds sbb edx,esp
  42271c:	xchg   esi,eax
  42271d:	cwde   
  42271e:	xchg   ecx,eax
  42271f:	mov    ah,BYTE PTR [ebx+0x4d]
  422722:	pop    es
  422723:	mov    cl,0x97
  422725:	lods   al,BYTE PTR ds:[esi]
  422726:	es sub esi,esp
  422729:	aaa    
  42272a:	inc    edx
  42272b:	retf   
  42272c:	mov    esi,0x651e4cb1
  422731:	fmul   st(2),st
  422733:	cwde   
  422734:	dec    esi
  422735:	int3   
  422736:	std    
  422737:	add    al,0xf2
  422739:	stc    
  42273a:	push   ebx
  42273b:	mov    dl,BYTE PTR [ebp-0x65203d1b]
  422741:	(bad)  
  422742:	out    0xb,al
  422744:	mov    esi,0x5306c4f1
  422749:	sbb    ch,BYTE PTR [edi+0x57035284]
  42274f:	mov    bl,0xa7
  422751:	iret   
  422752:	jmp    0xc4f1:0x71b03d6b
  422759:	outs   dx,DWORD PTR ds:[esi]
  42275a:	lods   al,BYTE PTR ds:[esi]
  42275b:	sub    BYTE PTR [ebx],ch
  42275d:	xor    ah,BYTE PTR es:[esi]
  422760:	pop    edi
  422761:	mov    edx,0xb0fd97db
  422766:	data16 int3 
  422768:	sub    BYTE PTR [eax+0x52],al
  42276b:	sub    edx,0x360dfc2d
  422771:	fs ins DWORD PTR es:[edi],dx
  422773:	mov    edi,0x583adfdb
  422778:	pop    eax
  422779:	ss shr al,0x26
  42277d:	push   esp
  42277e:	ret    0xedff
  422781:	scas   eax,DWORD PTR es:[edi]
  422782:	sub    eax,0x3f2cba94
  422787:	dec    ecx
  422788:	scas   eax,DWORD PTR es:[edi]
  422789:	(bad)  
  42278a:	pushf  
  42278b:	test   BYTE PTR [eax+edi*8],ah
  42278e:	fmul   st,st(1)
  422790:	push   ss
  422791:	push   es
  422792:	pop    esi
  422793:	dec    edi
  422794:	in     eax,dx
  422795:	cmp    ebp,DWORD PTR [ebp+ebx*4-0x6]
  422799:	cmp    eax,0x22fc3d3f
  42279e:	inc    esi
  42279f:	jg     0x4227d4
  4227a1:	jnp    0x4227ca
  4227a3:	sub    edi,edi
  4227a5:	nop
  4227a6:	jns    0x4227a8
	...
  4227b0:	add    BYTE PTR [edi+0x75],ah
  4227b3:	int3   
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	xor    dl,BYTE PTR [ecx]
  4227bf:	mov    esi,0x1a0dd8a
  4227c4:	add    BYTE PTR [esi+0xc000003],ch
  4227ca:	imul   eax
  4227cc:	mov    esi,0xf51c47bb
  4227d1:	or     BYTE PTR [esi-0x5edf7275],0xb2
  4227d8:	push   ecx
  4227d9:	mov    edi,0x14aa2aa
  4227de:	jl     0x422802
  4227e0:	dec    edx
  4227e1:	test   DWORD PTR [ebp+0x6f],0xcff4d930
  4227e8:	add    dh,dl
  4227ea:	mov    al,0x56
  4227ec:	jge    0x42283b
  4227ee:	pushf  
  4227ef:	fs mov dh,0x8b
  4227f2:	inc    ecx
  4227f3:	mov    bh,0xdf
  4227f5:	cmovo  esi,DWORD PTR [ecx+0x7f9890e1]
  4227fc:	aas    
  4227fd:	stos   DWORD PTR es:[edi],eax
  4227fe:	add    al,0xa5
  422800:	out    dx,eax
  422801:	push   0x4d7e3104
  422806:	push   ebx
  422807:	cmp    eax,0x1a7dae84
  42280c:	fs pop ss
  42280e:	inc    esi
  42280f:	mov    bh,0xd7
  422811:	jmp    0x422825
  422813:	out    dx,eax
  422814:	mov    esi,0x2b9c1bac
  422819:	pop    eax
  42281a:	cli    
  42281b:	ret    0x517b
  42281e:	ins    DWORD PTR es:[edi],dx
  42281f:	arpl   WORD PTR [edx-0x129c0096],ax
  422825:	pop    ds
  422826:	sub    al,0x59
  422828:	loop   0x4227d4
  42282a:	sub    bh,bl
  42282c:	in     al,dx
  42282d:	out    0xc0,eax
  42282f:	and    bl,BYTE PTR [ecx+eiz*8-0x433fd086]
  422836:	fisttp WORD PTR [esi+esi*1]
  422839:	retf   
  42283a:	pop    esp
  42283b:	dec    edx
  42283c:	out    0x2a,al
  42283e:	fsub   QWORD PTR [ebp+edi*4+0x1392b568]
  422845:	xor    eax,edx
  422847:	in     eax,0xca
  422849:	nop
  42284a:	push   ecx
  42284b:	mov    bl,0x4f
  42284d:	fwait
  42284e:	mov    ecx,0xdf96dd54
  422853:	jo     0x422828
  422855:	aas    
  422856:	sub    al,0xa9
  422858:	fdivr  QWORD PTR [ebp-0x73]
  42285b:	in     eax,dx
  42285c:	xadd   ecx,esp
  42285f:	lods   eax,DWORD PTR ds:[esi]
  422860:	fmul   st,st(3)
  422862:	retf   0xfea7
  422865:	and    al,0x92
  422867:	sub    eax,0xb1fa8dcf
  42286c:	and    eax,0x67cb6f03
  422871:	jg     0x422862
  422873:	adc    eax,0x605d3752
  422878:	cmp    cl,bh
  42287a:	out    0x60,eax
  42287c:	dec    edi
  42287d:	pushf  
  42287e:	loope  0x422803
  422880:	xchg   esi,eax
  422881:	push   esi
  422882:	cwde   
  422883:	rol    BYTE PTR [edx+0x44f4f360],cl
  422889:	push   ds
  42288a:	pop    edx
  42288b:	or     al,0x6f
  42288d:	jecxz  0x4228a5
  42288f:	dec    esi
  422890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422891:	pop    ds
  422892:	les    esi,FWORD PTR ds:0x415a5308
  422898:	arpl   WORD PTR [edx+0x15e848ce],bx
  42289e:	jle    0x422833
  4228a0:	sbb    edi,esp
  4228a2:	or     BYTE PTR [edi],al
  4228a4:	dec    eax
  4228a5:	outs   dx,BYTE PTR ds:[esi]
  4228a6:	mov    dl,0x47
  4228a8:	adc    eax,0x840f65f1
  4228ad:	aas    
  4228ae:	std    
  4228af:	fnstcw WORD PTR [edx+0x717a9dc3]
  4228b5:	mov    ds:0x77b9fbd0,al
  4228ba:	pop    ebx
  4228bb:	mov    ebp,0xed433cd
  4228c0:	pop    ss
  4228c1:	mov    ds:0x21372c57,eax
  4228c6:	ds pop ebx
  4228c8:	or     bl,BYTE PTR [edi]
  4228ca:	int    0x67
  4228cc:	in     al,dx
  4228cd:	pusha  
  4228ce:	retf   0x6b4
  4228d1:	movq   mm1,mm1
  4228d4:	sub    BYTE PTR [ecx],ah
  4228d6:	sub    dh,BYTE PTR [ebp+0x752377df]
  4228dc:	add    eax,0xddb55b6b
  4228e1:	aas    
  4228e2:	aaa    
  4228e3:	in     al,0x12
  4228e5:	and    esi,ebp
  4228e7:	in     al,dx
  4228e8:	(bad)  
  4228e9:	lds    ebx,FWORD PTR [ecx+0x2e]
  4228ec:	ja     0x42294a
  4228ee:	dec    edx
  4228ef:	fisttp DWORD PTR [ebp+0x79]
  4228f2:	mov    esp,DWORD PTR [esi+0x29]
  4228f5:	inc    ebp
  4228f6:	aaa    
  4228f7:	and    DWORD PTR [edi+ecx*1-0x56],0xf0186032
  4228ff:	out    dx,eax
  422900:	arpl   dx,si
  422902:	aas    
  422903:	retf   
  422904:	loopne 0x422974
  422906:	and    ebx,DWORD PTR [ecx+0x51424a2b]
  42290c:	jecxz  0x422974
  42290e:	aam    0x3e
  422910:	pop    eax
  422911:	icebp  
  422912:	jo     0x422949
  422914:	sbb    DWORD PTR [ebx],ecx
  422916:	lock adc esp,DWORD PTR [edi+0x3f260ed1]
  42291d:	sbb    DWORD PTR [eax+0x7f],esp
  422920:	inc    edi
  422921:	dec    ecx
  422922:	(bad)  
  422923:	mov    ds:0x9a097eff,eax
  422928:	xor    esp,DWORD PTR [ebp-0x23]
  42292b:	mov    DWORD PTR [ebp+0x1c],ebp
  42292e:	push   0xf1524ca1
  422933:	add    DWORD PTR [ecx-0x6d],0xf094cf9
  42293a:	nop
  42293b:	dec    ebx
  42293c:	sub    BYTE PTR [esp+ebx*2+0x20],dh
  422940:	xchg   esi,eax
  422941:	aad    0x33
  422943:	addr16 std 
  422945:	clc    
  422946:	sub    eax,0xb61bbb3d
  42294b:	adc    al,0x34
  42294d:	mov    esp,DWORD PTR [ebx]
  42294f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422950:	ret    0xe555
  422953:	xchg   ebp,eax
  422954:	test   DWORD PTR [eax+0x3f],0x9e1aa262
  42295b:	aaa    
  42295c:	adc    ecx,DWORD PTR [ecx-0x68b1771d]
  422962:	cmp    al,bh
  422964:	add    dh,BYTE PTR [ebp-0x7828b6db]
  42296a:	loope  0x422955
  42296c:	jae    0x422912
  42296e:	fild   DWORD PTR [edi+eiz*4]
  422971:	lock mov ebx,edx
  422974:	pop    esi
  422975:	cmp    ah,BYTE PTR [esi]
  422977:	adc    al,0xa2
  422979:	mov    edi,0x83e3f265
  42297e:	mov    eax,0xc569a05e
  422983:	loopne 0x4229d6
  422985:	cmp    eax,esi
  422987:	iret   
  422988:	pop    ebx
  422989:	mov    BYTE PTR [ecx-0x1a],bh
  42298c:	outs   dx,DWORD PTR ds:[esi]
  42298d:	rcl    DWORD PTR [ecx],0xea
  422990:	and    ecx,eax
  422992:	add    al,0xce
  422994:	mov    WORD PTR ds:0xdc0e10a8,?
  42299a:	sub    BYTE PTR [esi+esi*8],ah
  42299d:	fidiv  WORD PTR [ecx+0x2a]
  4229a0:	xchg   ecx,eax
  4229a1:	or     WORD PTR [ecx-0x3cf2246d],dx
  4229a8:	mov    dl,0x40
  4229aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229ab:	stc    
  4229ac:	stos   BYTE PTR es:[edi],al
  4229ad:	repnz call 0x81a1:0x93995e9e
  4229b5:	call   0x73a6ac6
  4229ba:	mov    dl,BYTE PTR [esi+0x56]
  4229bd:	fwait
  4229be:	dec    ebp
  4229bf:	je     0x4229e1
  4229c1:	stos   BYTE PTR es:[edi],al
  4229c2:	push   ebx
  4229c3:	sbb    DWORD PTR [edi],eax
  4229c5:	outs   dx,BYTE PTR ds:[esi]
  4229c6:	retf   0xb448
  4229c9:	xchg   ecx,eax
  4229ca:	inc    edx
  4229cb:	dec    ecx
  4229cc:	push   ss
  4229cd:	retf   0xace4
  4229d0:	stc    
  4229d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229d2:	dec    ebx
  4229d3:	pop    edi
  4229d4:	or     DWORD PTR [eax-0x23],ebx
  4229d7:	mov    ch,0xf5
  4229d9:	xor    al,0xd2
  4229db:	ror    DWORD PTR [edi],1
  4229dd:	rcr    ch,cl
  4229df:	(bad)  [edi+0x1bdb3a9e]
  4229e5:	rcl    DWORD PTR [esi-0x61],0x4b
  4229e9:	pop    eax
  4229ea:	stc    
  4229eb:	out    dx,al
  4229ec:	pop    ebp
  4229ed:	dec    esi
  4229ee:	test   al,0xb4
  4229f0:	pop    DWORD PTR [edi]
  4229f2:	mov    ecx,0x4c806176
  4229f7:	push   edi
  4229f8:	icebp  
  4229f9:	lea    edi,[esi+ebp*1]
  4229fc:	jae    0x422a31
  4229fe:	call   DWORD PTR [esi]
  422a00:	adc    ebp,DWORD PTR [edi+0x28546290]
  422a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a07:	cs aad 0xb5
  422a0a:	shl    BYTE PTR [edi+ebp*1],1
  422a0d:	stos   BYTE PTR es:[edi],al
  422a0e:	pop    ss
  422a0f:	neg    BYTE PTR [esi+esi*2]
  422a12:	cmp    eax,0x8a167fc2
  422a17:	test   DWORD PTR [ebx+0x33],ebx
  422a1a:	jbe    0x42299e
  422a1c:	out    0x3d,eax
  422a1e:	sub    al,0x95
  422a20:	pop    es
  422a21:	pop    ds
  422a22:	pop    ebx
  422a23:	lods   eax,DWORD PTR ds:[esi]
  422a24:	dec    ebx
  422a25:	lock and BYTE PTR [esi+0x527f48d3],ah
  422a2c:	xchg   esp,eax
  422a2d:	adc    al,dh
  422a2f:	and    bh,ch
  422a31:	(bad)  
  422a32:	cmp    esi,DWORD PTR [ecx]
  422a34:	out    0xb7,al
  422a36:	dec    esp
  422a37:	jo     0x422a01
  422a39:	js     0x4229cb
  422a3b:	add    ch,BYTE PTR [ebx]
  422a3d:	repz inc edx
  422a3f:	test   DWORD PTR [ebx-0x18],0xc9f3f90f
  422a46:	call   0x81db:0x122f4519
  422a4d:	dec    ebp
  422a4e:	inc    edi
  422a4f:	sub    eax,DWORD PTR [esi+edi*1]
  422a52:	or     ch,BYTE PTR [edx+0x57]
  422a55:	icebp  
  422a56:	sub    DWORD PTR [eax],ecx
  422a58:	jmp    0x8f3d:0x31e1c2de
  422a5f:	or     DWORD PTR [ebx-0x3f4f0581],ecx
  422a65:	xor    al,0x57
  422a67:	das    
  422a68:	into   
  422a69:	call   0x1623:0xfda932c7
  422a70:	and    eax,0xd1a1943e
  422a75:	(bad)  
  422a76:	adc    BYTE PTR [eax],bl
  422a78:	pushw  es
  422a7a:	pop    esp
  422a7b:	xchg   cl,dh
  422a7d:	xor    DWORD PTR [edx+0x5b564399],0xffffff80
  422a84:	mov    esi,0x55e18909
  422a89:	add    al,0xe6
  422a8b:	pop    ebx
  422a8c:	ror    DWORD PTR [ebp+edx*1-0x638b2ed2],1
  422a93:	mov    ecx,0x95fce0c1
  422a98:	sbb    ch,dl
  422a9a:	adc    ah,BYTE PTR [eax+edi*8]
  422a9d:	jae    0x422a61
  422a9f:	shr    DWORD PTR [ebp-0x4a3d60a4],1
  422aa5:	jg     0x422a2f
  422aa7:	pop    esp
  422aa8:	and    al,0x95
  422aaa:	pop    ebx
  422aab:	mov    al,ds:0x713eb4a2
  422ab0:	and    al,0x1c
  422ab2:	imul   eax,DWORD PTR [ebx-0x29501adb],0xffffff80
  422ab9:	sbb    al,0xa6
  422abb:	test   al,0x28
  422abd:	xor    al,0xa1
  422abf:	inc    esi
  422ac0:	inc    ebp
  422ac1:	jp     0x422ac3
  422ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ac4:	push   edi
  422ac5:	imul   esp,edi,0x5a4ef00
  422acb:	(bad)  
  422acc:	cwde   
  422acd:	out    dx,al
  422ace:	ds ret 0x8423
  422ad2:	xchg   ebp,eax
  422ad3:	nop
  422ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ad5:	out    0x36,al
  422ad7:	outs   dx,BYTE PTR ds:[esi]
  422ad8:	fwait
  422ad9:	push   DWORD PTR [ecx]
  422adb:	(bad)  
  422add:	jecxz  0x422ae7
  422adf:	cli    
  422ae0:	fstp   st(7)
  422ae2:	ret    
  422ae3:	xor    esp,DWORD PTR [ecx+0x77497c56]
  422ae9:	test   al,0xba
  422aeb:	std    
  422aec:	xchg   ecx,eax
  422aed:	stos   WORD PTR es:[edi],ax
  422aef:	mov    ds:0x18e19a3e,eax
  422af4:	in     al,dx
  422af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422af6:	pushf  
  422af7:	sub    ebp,DWORD PTR [ecx-0x4d]
  422afa:	cmp    edx,DWORD PTR [ebx+0x77]
  422afd:	retf   
  422afe:	(bad)  
  422aff:	mov    bh,0xdf
  422b01:	push   cs
  422b02:	and    al,0x69
  422b04:	sbb    al,0xfe
  422b06:	pop    esi
  422b07:	pushf  
  422b08:	push   0x210d99eb
  422b0d:	mov    esi,0x8f0687bc
  422b12:	mov    ebx,0xa331828a
  422b17:	and    ecx,esi
  422b19:	pop    es
  422b1a:	or     eax,0x1b9dd460
  422b1f:	sub    BYTE PTR [eax+0x19],0x2c
  422b23:	dec    esi
  422b24:	test   DWORD PTR [edx-0x77],edi
  422b27:	icebp  
  422b28:	inc    ebx
  422b29:	ror    DWORD PTR [eax+0x71067271],0xb8
  422b30:	sbb    BYTE PTR [ecx+eiz*4+0xfd81037],bl
  422b37:	and    cl,BYTE PTR [eax-0x1d]
  422b3a:	add    al,0x28
  422b3c:	mov    ecx,0xf8c8d6d7
  422b41:	js     0x422b95
  422b43:	and    al,0xab
  422b45:	adc    BYTE PTR [edi+0x41],bl
  422b48:	inc    DWORD PTR [eax-0x68f178c4]
  422b4e:	pop    es
  422b4f:	xchg   ecx,eax
  422b50:	xor    al,0x78
  422b52:	add    ah,BYTE PTR ds:0x76f4f4dd
  422b58:	(bad)  
  422b59:	hlt    
  422b5a:	adc    BYTE PTR [ecx-0x3d7af9d1],bl
  422b60:	push   edi
  422b61:	scas   al,BYTE PTR es:[edi]
  422b62:	and    eax,0x2b777c71
  422b67:	lahf   
  422b68:	push   esp
  422b69:	mov    edi,0xaf50659a
  422b6e:	sar    BYTE PTR [ebp+0x59],0xb7
  422b72:	ret    
  422b73:	out    dx,eax
  422b74:	pop    edi
  422b75:	out    dx,al
  422b76:	dec    ebx
	...
  422b7f:	add    BYTE PTR [eax],al
  422b81:	mov    al,ds:0xbc09b42c
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    ah,BYTE PTR [esi]
  422b8e:	leave  
  422b8f:	inc    eax
  422b90:	inc    esp
  422b91:	mov    esp,DWORD PTR [ecx+eax*1+0x3ae00]
  422b98:	add    BYTE PTR [esi-0x72],bh
  422b9b:	pop    ebp
  422b9c:	imul   eax,DWORD PTR [ebx+edi*1+0x76],0xa58b1af9
  422ba4:	jnp    0x422b3a
  422ba6:	jecxz  0x422bb0
  422ba8:	leave  
  422ba9:	ret    0x39c0
  422bac:	cmp    eax,DWORD PTR [ebp+0x14]
  422baf:	jae    0x422c22
  422bb1:	dec    eax
  422bb2:	pop    ebp
  422bb3:	or     edx,DWORD PTR [esi-0x72610b1c]
  422bb9:	in     al,dx
  422bba:	je     0x422bb1
  422bbc:	and    BYTE PTR [esi+edx*8+0x6e],bh
  422bc0:	push   esi
  422bc1:	jle    0x422c22
  422bc3:	loopne 0x422c3b
  422bc5:	mov    esp,0x989cb1a1
  422bca:	mov    eax,0xb7afb31f
  422bcf:	jle    0x422bf4
  422bd1:	sub    bl,0xa3
  422bd4:	sbb    edx,DWORD PTR [ecx+0x2d88365f]
  422bda:	fdivr  DWORD PTR [ebx-0x596b745a]
  422be0:	cdq    
  422be1:	xchg   BYTE PTR [eax-0x5a5155e9],ch
  422be7:	inc    eax
  422be8:	pushf  
  422be9:	es test al,0x77
  422bec:	fiadd  DWORD PTR [eax-0x53b44c9]
  422bf2:	mov    ebx,0x8a23acd6
  422bf7:	and    BYTE PTR [eax-0x36],cl
  422bfa:	mov    BYTE PTR [ebp+0x44ed1a1d],dl
  422c00:	dec    ebx
  422c01:	sub    DWORD PTR [esi],ebp
  422c03:	ins    DWORD PTR es:[edi],dx
  422c04:	mov    ebx,0x74b2703b
  422c09:	rol    BYTE PTR [esi+edi*1-0x415328db],0x60
  422c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c12:	dec    esi
  422c13:	add    eax,0xd40d4ba
  422c18:	push   ds
  422c19:	lock mov ah,ch
  422c1c:	into   
  422c1d:	mov    al,0xc4
  422c1f:	loopne 0x422bed
  422c21:	hlt    
  422c22:	and    cl,bl
  422c24:	jns    0x422c01
  422c26:	loope  0x422be4
  422c28:	xchg   ebx,eax
  422c29:	arpl   WORD PTR ds:0xa98626b9,ax
  422c2f:	cmp    al,BYTE PTR [ecx-0x58]
  422c32:	jne    0x422c54
  422c34:	clc    
  422c35:	jle    0x422c8e
  422c37:	adc    BYTE PTR [edx+0x0],dl
  422c3a:	out    0x5f,al
  422c3c:	aas    
  422c3d:	xchg   DWORD PTR [esi+edi*1],ebx
  422c40:	cmp    eax,0xe2e2b419
  422c45:	dec    esp
  422c46:	sub    ah,BYTE PTR [edi+0x392c1b71]
  422c4c:	mov    esi,0x42e4e303
  422c51:	xor    eax,0xeb6462dd
  422c56:	xlat   BYTE PTR ds:[ebx]
  422c57:	pop    ebp
  422c58:	jb     0x422c7b
  422c5a:	aaa    
  422c5b:	aaa    
  422c5c:	xchg   ebx,eax
  422c5d:	mov    ds:0x5a8fbad6,al
  422c62:	dec    ebp
  422c63:	les    eax,FWORD PTR [esi+0x32d5aebc]
  422c69:	add    eax,0xa59d45c
  422c6e:	pop    eax
  422c6f:	ret    
  422c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c71:	fdiv   QWORD PTR [ebx-0xb7bc41b]
  422c77:	and    BYTE PTR [ecx],dl
  422c79:	arpl   WORD PTR [edx+0x27d04298],di
  422c7f:	lds    esp,FWORD PTR [ecx]
  422c81:	ins    DWORD PTR es:[edi],dx
  422c82:	fimul  DWORD PTR [ecx]
  422c84:	ss out dx,al
  422c86:	(bad)  
  422c87:	xor    al,cl
  422c89:	push   es
  422c8a:	loope  0x422c8e
  422c8c:	xlat   BYTE PTR ds:[ebx]
  422c8d:	shl    BYTE PTR [ebp-0x4d],0x8c
  422c91:	mov    eax,ds:0x54c704cb
  422c96:	add    eax,edi
  422c98:	xor    ch,BYTE PTR [esi-0x1d84d75e]
  422c9e:	mov    esi,0x867c47d1
  422ca3:	add    BYTE PTR [esi+ebx*4-0x1],bl
  422ca7:	push   eax
  422ca8:	sbb    eax,0x341fb693
  422cad:	aas    
  422cae:	sub    ah,BYTE PTR [ebx]
  422cb0:	lods   al,BYTE PTR ds:[esi]
  422cb1:	xchg   DWORD PTR [ebp-0x72],ecx
  422cb4:	xor    al,0xd4
  422cb6:	cmp    ebx,ecx
  422cb8:	add    dl,0xfa
  422cbb:	fimul  WORD PTR [edi-0x3d]
  422cbe:	in     al,dx
  422cbf:	dec    esp
  422cc0:	stos   DWORD PTR es:[edi],eax
  422cc1:	stc    
  422cc2:	aam    0xfe
  422cc4:	ror    BYTE PTR fs:[ecx],1
  422cc7:	out    0x26,eax
  422cc9:	pop    edx
  422cca:	mov    ebp,0xb01554b4
  422ccf:	xlat   BYTE PTR ds:[ebx]
  422cd0:	jecxz  0x422d3b
  422cd2:	or     dh,dh
  422cd4:	cmp    eax,0x2a2982da
  422cd9:	add    DWORD PTR [edx],esp
  422cdb:	dec    esi
  422cdc:	inc    ebp
  422cdd:	inc    esp
  422cde:	inc    di
  422ce0:	lea    edi,[eax]
  422ce2:	sub    ecx,ecx
  422ce4:	xlat   BYTE PTR ds:[ebx]
  422ce5:	cdq    
  422ce6:	jmp    DWORD PTR [esi+ebx*2-0x6]
  422cea:	pop    ebp
  422ceb:	mov    ebx,?
  422ced:	or     eax,0x67
  422cf0:	fld    DWORD PTR [ecx]
  422cf2:	xchg   esp,eax
  422cf3:	push   ss
  422cf4:	inc    esp
  422cf5:	lds    edx,FWORD PTR [ebx]
  422cf7:	dec    eax
  422cf8:	and    eax,0x15ba4d8d
  422cfd:	ins    DWORD PTR es:[edi],dx
  422cfe:	sbb    bl,0x46
  422d01:	mov    dh,BYTE PTR [esi]
  422d03:	call   DWORD PTR [edx+0x252865]
  422d09:	mov    BYTE PTR [ebx],cl
  422d0b:	(bad)
  422d0f:	lock lds edi,FWORD PTR [esi+0x266f804f]
  422d16:	pop    ecx
  422d17:	test   eax,0xf5531854
  422d1c:	jno    0x422d48
  422d1e:	mov    ebx,0x2bea2156
  422d23:	fcom   st(6)
  422d25:	stos   BYTE PTR es:[edi],al
  422d26:	enter  0xaf4a,0x5d
  422d2a:	scas   al,BYTE PTR es:[edi]
  422d2b:	mov    bl,0xd6
  422d2d:	std    
  422d2e:	daa    
  422d2f:	test   DWORD PTR [ecx+0x656b449f],ebp
  422d35:	nop
  422d36:	cs pop eax
  422d38:	pop    edx
  422d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d3a:	xor    BYTE PTR [ecx],0xcf
  422d3d:	jo     0x422d6e
  422d3f:	sbb    DWORD PTR [esi],edx
  422d41:	cmp    BYTE PTR [edi-0x25089d43],cl
  422d47:	push   esi
  422d48:	in     eax,dx
  422d49:	pop    DWORD PTR [eax+0x52f330f6]
  422d4f:	inc    esi
  422d50:	or     eax,0xa915384
  422d55:	pop    ss
  422d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d57:	xchg   ecx,esp
  422d59:	pop    ss
  422d5a:	sbb    eax,0xdcdfb56d
  422d5f:	push   ecx
  422d60:	cmp    DWORD PTR [ecx+0x74134d7d],0x441e8f4d
  422d6a:	sub    eax,0x520359ac
  422d6f:	dec    esi
  422d70:	mov    bh,BYTE PTR [ebx+0xbcd0879]
  422d76:	push   0x3f333155
  422d7b:	and    ch,BYTE PTR [ebx]
  422d7d:	push   esp
  422d7e:	pop    edi
  422d7f:	or     bh,bh
  422d81:	ds in  al,0x9d
  422d84:	cdq    
  422d85:	scas   eax,DWORD PTR es:[edi]
  422d86:	lds    eax,FWORD PTR [edi+0x20]
  422d89:	cmp    BYTE PTR [edx-0x7c],dh
  422d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d8d:	subps  xmm6,xmm0
  422d90:	mov    cl,0xf
  422d92:	or     al,0x95
  422d94:	shl    BYTE PTR [edi+0x264e14ba],cl
  422d9a:	push   es
  422d9b:	mov    eax,0x5b8e03bb
  422da0:	sti    
  422da1:	rol    BYTE PTR [esi],0xbb
  422da4:	inc    esi
  422da5:	dec    esp
  422da6:	icebp  
  422da7:	adc    eax,0xac1de17
  422dac:	or     BYTE PTR [esi+0x3b],bl
  422daf:	pop    esi
  422db0:	inc    ecx
  422db1:	dec    edx
  422db2:	das    
  422db3:	bound  eax,QWORD PTR [eax-0x3d]
  422db6:	(bad)  
  422db7:	test   al,0x21
  422db9:	jo     0x422e28
  422dbb:	mov    dh,0xc7
  422dbd:	push   DWORD PTR [ecx]
  422dbf:	popf   
  422dc0:	push   0xffffffdb
  422dc2:	fs dec esi
  422dc4:	xor    al,BYTE PTR ds:0xfa83f0a3
  422dca:	fistp  DWORD PTR [eax-0x26]
  422dcd:	add    DWORD PTR [eax-0x3d],ebp
  422dd0:	cmp    DWORD PTR [esi+0x1],esp
  422dd3:	mov    ecx,0x99990f22
  422dd8:	dec    ecx
  422dd9:	xor    eax,0xccef942d
  422dde:	scas   eax,DWORD PTR es:[edi]
  422ddf:	mov    WORD PTR [ebx-0x22],?
  422de2:	out    0xc2,eax
  422de4:	lods   al,BYTE PTR ds:[esi]
  422de5:	mov    esi,0xaaba7ded
  422dea:	call   0x1a83:0xc067aed5
  422df1:	xchg   esi,eax
  422df2:	mov    bh,0x3
  422df4:	inc    edx
  422df5:	lods   al,BYTE PTR ds:[esi]
  422df6:	jmp    0x422d7d
  422df8:	sub    BYTE PTR [ebx-0x77],dh
  422dfb:	fldcw  WORD PTR [ebp+0x22]
  422dfe:	sbb    DWORD PTR [ecx],esp
  422e00:	add    ebx,DWORD PTR [edi]
  422e02:	inc    esi
  422e03:	jnp    0x422df9
  422e05:	neg    BYTE PTR [ebx+0x18]
  422e08:	mov    DWORD PTR [ebx],edx
  422e0a:	dec    ebx
  422e0b:	dec    esi
  422e0c:	nop
  422e0d:	jnp    0x422e03
  422e0f:	popa   
  422e10:	iret   
  422e11:	jnp    0x422e81
  422e13:	hlt    
  422e14:	mov    eax,0x65abfb6f
  422e19:	mul    ah
  422e1b:	clc    
  422e1c:	es ds dec esp
  422e1f:	scas   al,BYTE PTR es:[edi]
  422e20:	nop
  422e21:	jg     0x422e73
  422e23:	xlat   BYTE PTR ds:[ebx]
  422e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e25:	pop    esi
  422e26:	stc    
  422e27:	or     ecx,DWORD PTR [ebp-0x2]
  422e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e2b:	pop    edi
  422e2c:	xchg   ebp,eax
  422e2d:	jle    0x422e2c
  422e2f:	ins    BYTE PTR es:[edi],dx
  422e30:	push   ebp
  422e31:	or     edx,DWORD PTR [ebp+0x476c3aef]
  422e37:	mov    eax,es
  422e39:	or     ebx,DWORD PTR [eax]
  422e3b:	add    eax,DWORD PTR [edi-0x32]
  422e3e:	fs xchg ebp,eax
  422e40:	add    bl,al
  422e42:	inc    ebx
  422e43:	cli    
  422e44:	or     bh,BYTE PTR [eax-0x22]
  422e47:	addr16 mov esp,0xb51ac2d8
  422e4d:	dec    edx
  422e4e:	inc    esp
  422e4f:	aaa    
  422e50:	mov    edx,0x8fbb6913
  422e55:	adc    BYTE PTR [ebx+0x4d],dl
  422e58:	out    dx,al
  422e59:	fcom   QWORD PTR [edi-0x42823373]
  422e5f:	adc    DWORD PTR [ecx-0xc21083],ebx
  422e65:	test   DWORD PTR [esp+ebx*2],0xa6f75568
  422e6c:	push   esi
  422e6d:	data16 ds ins BYTE PTR es:[edi],dx
  422e70:	xor    cl,BYTE PTR [ecx-0x5facd33b]
  422e76:	rcr    BYTE PTR [ecx+0x5e],0x63
  422e7a:	aas    
  422e7b:	mov    al,ds:0x7c22e471
  422e80:	ja     0x422eb5
  422e82:	or     eax,0x7abe42b8
  422e87:	xchg   edi,eax
  422e88:	pop    ebx
  422e89:	loop   0x422ea4
  422e8b:	div    DWORD PTR [eax+0x53]
  422e8e:	lahf   
  422e8f:	stos   DWORD PTR es:[edi],eax
  422e90:	inc    edx
  422e91:	or     BYTE PTR [ebp-0x61c0fc70],bh
  422e97:	jno    0x422ed8
  422e99:	out    0x9a,al
  422e9b:	aam    0xd1
  422e9d:	scas   eax,DWORD PTR es:[edi]
  422e9e:	and    DWORD PTR [ebx+0x39],esp
  422ea1:	fimul  DWORD PTR [eax]
  422ea3:	loop   0x422eb0
  422ea5:	sbb    ah,dh
  422ea7:	or     BYTE PTR [edi],ch
  422ea9:	xor    eax,0x9e54109f
  422eae:	ins    DWORD PTR es:[edi],dx
  422eaf:	adc    BYTE PTR ds:0x38f9c51e,bh
  422eb5:	fiadd  WORD PTR [edx+0x49a2730b]
  422ebb:	sar    DWORD PTR [ebx-0x13e0acf2],0x2c
  422ec2:	lock add DWORD PTR [edx+0x4a],esp
  422ec6:	lahf   
  422ec7:	aam    0xb2
  422ec9:	xchg   DWORD PTR [esi-0x7c],ecx
  422ecc:	jne    0x422f1f
  422ece:	sbb    bh,BYTE PTR [ecx-0x73]
  422ed1:	mov    ebx,0xf06e8033
  422ed6:	xor    DWORD PTR [eax-0x1f],ebx
  422ed9:	jle    0x422e8e
  422edb:	sahf   
  422edc:	add    ecx,edi
  422ede:	enter  0x1b5e,0xfb
  422ee2:	xchg   ecx,eax
  422ee3:	js     0x422ec3
  422ee5:	fcmovnbe st,st(3)
  422ee7:	mov    bh,0x75
  422ee9:	mov    ah,0x3b
  422eeb:	imul   ebx,DWORD PTR [ebp+0x75],0xb7d3b32e
  422ef2:	lock mov ?,WORD PTR [ebx]
  422ef5:	pop    edx
  422ef6:	jg     0x422f25
  422ef8:	jno    0x422eff
  422efa:	pop    es
  422efb:	cmp    eax,0xf3d9a56f
  422f00:	and    eax,0xf9bc8b34
  422f05:	rcl    ch,1
  422f07:	cwde   
  422f08:	cmp    BYTE PTR [eax-0x34],cl
  422f0b:	jnp    0x422f67
  422f0d:	jmp    0x119d5333
  422f12:	inc    bl
  422f14:	loope  0x422ed2
  422f16:	dec    ecx
  422f17:	addr16 mov al,ds:0x7eb1
  422f1b:	add    DWORD PTR [esi-0x52],esi
  422f1e:	xchg   edi,eax
  422f1f:	mov    ds:0xbd17c2d4,eax
  422f24:	lods   al,BYTE PTR ds:[esi]
  422f25:	mov    esp,0xce24b45
  422f2a:	xchg   esi,eax
  422f2b:	enter  0xc588,0xfb
  422f2f:	test   DWORD PTR [eax+0x464c7022],0x5de7d02c
  422f39:	retf   0xb38c
  422f3c:	push   esp
  422f3d:	sub    cl,BYTE PTR [ecx+0x424b2041]
  422f43:	ret    0xb53d
  422f46:	pop    ss
	...
  422f4f:	add    BYTE PTR [eax],al
  422f51:	add    dh,BYTE PTR [ebx]
  422f53:	mov    edi,DWORD PTR [eax]
  422f55:	mov    ebx,0xb63bb3b8
  422f5a:	fsubp  st(3),st
  422f5c:	mov    bh,0x36
  422f5e:	test   BYTE PTR [edx],bl
  422f60:	cmp    eax,0x1a839
  422f65:	scas   al,BYTE PTR es:[edi]
  422f66:	add    eax,DWORD PTR [eax]
  422f68:	add    BYTE PTR [esi],dl
  422f6a:	or     BYTE PTR [edi-0x2d7adbe1],cl
  422f70:	mov    ch,0x79
  422f72:	xchg   bl,dh
  422f74:	nop
  422f75:	pop    ecx
  422f76:	and    dh,BYTE PTR [edx+esi*1-0x6e13251b]
  422f7d:	mov    esi,0x62d9f7fb
  422f82:	xchg   edx,eax
  422f83:	xor    dh,BYTE PTR [eax+0x3a]
  422f86:	bound  esi,QWORD PTR [ecx-0x4c49e77]
  422f8c:	ins    BYTE PTR es:[edi],dx
  422f8d:	add    esi,DWORD PTR es:0x3a962ce1
  422f94:	neg    DWORD PTR [ebp+0x20]
  422f97:	rcl    DWORD PTR [edi+0x67],cl
  422f9a:	jbe    0x422f64
  422f9c:	retf   0x8ad6
  422f9f:	popf   
  422fa0:	cmp    BYTE PTR [edi],bh
  422fa2:	out    dx,al
  422fa3:	sub    ch,ah
  422fa5:	jecxz  0x422fdc
  422fa7:	and    ah,BYTE PTR [ebp+0x2fc5db80]
  422fad:	or     bl,BYTE PTR [edx]
  422faf:	rcr    DWORD PTR [ebx-0x59],cl
  422fb2:	add    eax,0xb42d59e4
  422fb7:	xor    al,0x98
  422fb9:	in     eax,dx
  422fba:	mov    DWORD PTR [ecx+0x1b020178],esp
  422fc0:	test   eax,0xc379f5dd
  422fc5:	mov    edi,0x39e4b1a2
  422fca:	jb     0x422fb7
  422fcc:	pop    ecx
  422fcd:	sub    DWORD PTR [esi],eax
  422fcf:	stos   BYTE PTR es:[edi],al
  422fd0:	lahf   
  422fd1:	pop    edi
  422fd2:	gs push esp
  422fd4:	cdq    
  422fd5:	ds sahf 
  422fd7:	dec    esi
  422fd8:	cmp    BYTE PTR [edi+0x2f2fe058],dl
  422fde:	scas   al,BYTE PTR es:[edi]
  422fdf:	push   edx
  422fe0:	xchg   edi,eax
  422fe1:	cmp    BYTE PTR [ebx+0xe],cl
  422fe4:	and    eax,esi
  422fe6:	stos   DWORD PTR es:[edi],eax
  422fe7:	(bad)  
  422fe9:	fisubr DWORD PTR ds:0x57be98da
  422fef:	repnz retf 0xb8f4
  422ff3:	or     BYTE PTR [eax+0x4b4bfe0f],ch
  422ff9:	jmp    0x1a2d:0x80f44872
  423000:	mov    al,ds:0xeb5f1a47
  423005:	lods   al,BYTE PTR ds:[esi]
  423006:	adc    DWORD PTR [ebp-0x10],ecx
  423009:	sahf   
  42300a:	sbb    esi,DWORD PTR [ebx]
  42300c:	push   0xffffffc1
  42300e:	js     0x423064
  423010:	cmp    al,0xc9
  423012:	neg    DWORD PTR [esp+eiz*2+0x71]
  423016:	sar    BYTE PTR [ebx-0x50],cl
  423019:	stc    
  42301a:	add    BYTE PTR [edx+eiz*2-0x26],dh
  42301e:	ins    DWORD PTR es:[edi],dx
  42301f:	out    0x4d,eax
  423021:	inc    ebx
  423022:	add    al,0xe4
  423024:	mov    ecx,DWORD PTR [eax]
  423026:	imul   eax,DWORD PTR [edi-0x5f],0x4c80f0d3
  42302d:	outs   dx,DWORD PTR ds:[esi]
  42302e:	add    BYTE PTR [ecx+eiz*8+0x51],dl
  423032:	jnp    0x423019
  423034:	lods   eax,DWORD PTR ds:[esi]
  423035:	cmc    
  423036:	(bad)  
  423037:	mov    esi,DWORD PTR [edi+0x1a7be9d7]
  42303d:	sub    DWORD PTR [esi-0x1a],ebp
  423040:	and    eax,0xfbf61e3
  423045:	scas   al,BYTE PTR es:[edi]
  423046:	mov    ?,WORD PTR [ebx+0x483ec7fa]
  42304c:	add    BYTE PTR [ebp+0x4419c635],bh
  423052:	pop    es
  423053:	sbb    BYTE PTR [ebx-0x6ea9a7f5],ch
  423059:	call   0xe3469214
  42305e:	jne    0x4230bb
  423060:	cmp    al,0x34
  423062:	jb     0x4230cc
  423064:	xchg   DWORD PTR [ebp+0x3],edi
  423067:	xor    ebp,DWORD PTR [eax+0x53]
  42306a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42306b:	pop    ebp
  42306c:	fsubr  QWORD PTR [esi]
  42306e:	xchg   ecx,eax
  42306f:	push   0x27
  423071:	push   0x3815d31e
  423076:	shr    DWORD PTR [edi+0x64],0xd1
  42307a:	int    0xce
  42307c:	mov    fs:0x9bf962c,eax
  423082:	je     0x4230d5
  423084:	aas    
  423085:	or     DWORD PTR [edi+edx*2-0x53],edi
  423089:	cli    
  42308a:	and    ebp,DWORD PTR [esi-0x203cc338]
  423090:	xchg   BYTE PTR [edi-0x32],cl
  423093:	inc    eax
  423094:	xor    ch,BYTE PTR [ebx-0x2c]
  423097:	test   eax,0x24c716bb
  42309c:	dec    esp
  42309d:	mov    esp,0x792c7d66
  4230a2:	sub    BYTE PTR [edi],bh
  4230a4:	lods   al,BYTE PTR ds:[esi]
  4230a5:	js     0x423052
  4230a7:	int    0x96
  4230a9:	xlat   BYTE PTR ds:[ebx]
  4230aa:	mov    BYTE PTR [ebp+0x600001b8],dh
  4230b0:	or     al,0x3
  4230b2:	mov    dh,0xa7
  4230b4:	jne    0x423039
  4230b6:	jne    0x423127
  4230b8:	add    bh,BYTE PTR [edi]
  4230ba:	jnp    0x4230e3
  4230bc:	and    ebp,ecx
  4230be:	cmp    al,0xfd
  4230c0:	hlt    
  4230c1:	shl    BYTE PTR [ebp+0x48750126],0xfd
  4230c8:	scas   al,BYTE PTR es:[edi]
  4230c9:	je     0x423095
  4230cb:	cmp    BYTE PTR [ebx+0x1b],ah
  4230ce:	adc    eax,0xd5c32d08
  4230d3:	dec    edi
  4230d4:	add    eax,0xf359f5b1
  4230d9:	fmul   DWORD PTR [ecx]
  4230db:	test   DWORD PTR [esi],edi
  4230dd:	cmp    al,0xa9
  4230df:	inc    ebx
  4230e0:	xor    BYTE PTR [ebp+0x6],dh
  4230e3:	adc    eax,0x540c5fa5
  4230e8:	push   0x1d
  4230ea:	push   ebx
  4230eb:	add    BYTE PTR [edi+0x16],ch
  4230ee:	addr16 (bad) 
  4230f0:	loopne 0x4230a9
  4230f2:	jb     0x42310e
  4230f4:	push   es
  4230f5:	jno    0x423112
  4230f7:	shl    DWORD PTR [edx+0x8b37ce7],cl
  4230fd:	data16 js 0x4230c3
  423100:	jmp    0x89c854f4
  423105:	sbb    ebx,edx
  423107:	dec    eax
  423108:	inc    esp
  423109:	push   ebp
  42310a:	repz push ss
  42310c:	retf   
  42310d:	hlt    
  42310e:	fstp   QWORD PTR [ebx-0x396bf5a1]
  423114:	dec    ebx
  423115:	repnz data16 fild QWORD PTR [ecx+0x59]
  42311a:	pop    ss
  42311b:	mov    eax,ds:0x57749a7c
  423120:	sar    DWORD PTR [eax-0x1f3cfa0a],0x36
  423127:	dec    eax
  423128:	sub    al,0xe2
  42312a:	fisttp QWORD PTR [eax-0x68]
  42312d:	cli    
  42312e:	mov    edi,0x36f79622
  423133:	jl     0x4230f7
  423135:	jmp    0x42313d
  423137:	imul   eax,DWORD PTR ds:0xcd731877,0x9357881b
  423141:	fs add al,0x3a
  423144:	push   es
  423145:	jbe    0x4231b5
  423147:	mov    eax,ds:0xaa51ee09
  42314c:	push   ebx
  42314d:	daa    
  42314e:	xchg   BYTE PTR [ebp+0x21],dl
  423151:	inc    esp
  423152:	jno    0x423183
  423154:	mov    al,0x98
  423156:	mov    eax,0x1e71f50f
  42315b:	cmp    al,0xa9
  42315d:	sahf   
  42315e:	dec    eax
  42315f:	jo     0x423125
  423161:	aam    0x90
  423163:	jmp    0x9369:0xb376d099
  42316a:	push   ebx
  42316b:	stos   BYTE PTR es:[edi],al
  42316c:	sbb    edi,DWORD PTR [edi+0x9cad088]
  423172:	lahf   
  423173:	pop    edi
  423174:	add    eax,DWORD PTR [eax+0x178ddcf]
  42317a:	add    ebx,DWORD PTR [ebp-0x61]
  42317d:	add    BYTE PTR [eax],ah
  42317f:	pop    edi
  423180:	mov    dh,0xa5
  423182:	adc    cl,bl
  423184:	cmp    bl,BYTE PTR [ebx]
  423186:	scas   al,BYTE PTR es:[edi]
  423187:	jmp    0x283cbfff
  42318c:	and    eax,0x7f01a9b8
  423191:	push   0x26
  423193:	fisubr DWORD PTR [edi+0x76]
  423196:	xchg   ebx,eax
  423197:	xchg   edi,eax
  423198:	mov    al,ds:0xde66226a
  42319d:	mov    ds:0x6aa76447,eax
  4231a2:	xchg   ebx,eax
  4231a3:	mov    al,0xb3
  4231a5:	cmp    BYTE PTR [ecx],ah
  4231a7:	aas    
  4231a8:	hlt    
  4231a9:	data16 int3 
  4231ab:	adc    cl,ah
  4231ad:	cs jge 0x42322f
  4231b0:	push   esi
  4231b1:	mov    ebp,0x7fc2eb51
  4231b6:	inc    eax
  4231b7:	stc    
  4231b8:	mov    dh,0x33
  4231ba:	outs   dx,DWORD PTR ds:[esi]
  4231bb:	xchg   edx,eax
  4231bc:	dec    edx
  4231bd:	xor    al,0x49
  4231bf:	test   bl,dl
  4231c1:	repz cld 
  4231c3:	xor    eax,0x64bf6f06
  4231c8:	cs leave 
  4231ca:	mov    edx,0x8296971c
  4231cf:	fwait
  4231d0:	push   0x2035d4de
  4231d5:	sbb    al,0xae
  4231d7:	mov    ds:0x2695768b,eax
  4231dc:	lea    edx,[esi]
  4231de:	ror    ah,cl
  4231e0:	xor    al,0x4e
  4231e2:	loop   0x423176
  4231e4:	dec    esp
  4231e5:	(bad)  
  4231e6:	retf   0x117a
  4231e9:	or     BYTE PTR [eax],cl
  4231eb:	xchg   ebp,eax
  4231ec:	mov    fs,WORD PTR [edi]
  4231ee:	sub    al,0xbc
  4231f0:	push   ss
  4231f1:	sbb    ebp,esp
  4231f3:	enter  0xeb47,0xf2
  4231f7:	mov    ebp,0xcd6e3f22
  4231fc:	sub    eax,0xbb15cae5
  423201:	cdq    
  423202:	push   edi
  423203:	sub    bl,BYTE PTR [esi]
  423205:	retf   
  423206:	enter  0x7ca5,0xb8
  42320a:	mov    WORD PTR [edx+eiz*2-0x15],?
  42320e:	jb     0x4231f1
  423210:	(bad)  
  423211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423212:	xchg   edx,eax
  423213:	cwde   
  423214:	pop    ebp
  423215:	repnz shl BYTE PTR [ebx+esi*1+0x18],1
  42321a:	or     al,0x3a
  42321c:	sahf   
  42321d:	out    0xfe,al
  42321f:	jmp    0xb231c1da
  423224:	adc    BYTE PTR [edi+0x63bacf50],al
  42322a:	xor    cl,dl
  42322c:	xor    dl,BYTE PTR [ecx]
  42322e:	in     eax,dx
  42322f:	fsubr  DWORD PTR [esi+edi*4-0x23]
  423233:	aad    0x3c
  423235:	aaa    
  423236:	lock fldenv [eax-0x3bef04e2]
  42323d:	bound  di,DWORD PTR [edi+0x30]
  423241:	xlat   BYTE PTR ds:[ebx]
  423242:	mov    al,ds:0xe9f50b1c
  423247:	loop   0x423237
  423249:	dec    ebp
  42324a:	and    al,0x7e
  42324c:	pop    ecx
  42324d:	add    eax,0x377db95a
  423252:	inc    ebx
  423253:	adc    esi,DWORD PTR [ecx]
  423255:	mov    WORD PTR [edx+0x14],gs
  423258:	inc    esi
  423259:	or     dl,BYTE PTR [edi+0x6c]
  42325c:	xchg   DWORD PTR [ebx-0x54c22491],eax
  423262:	mov    WORD PTR [ebp-0x29399586],es
  423268:	and    al,0x2a
  42326a:	repz test eax,0x33bcd40
  423270:	push   ebx
  423271:	(bad)  
  423273:	sbb    al,0x13
  423275:	icebp  
  423276:	(bad)  
  423277:	mov    esi,0x440debb4
  42327c:	dec    eax
  42327d:	in     eax,dx
  42327e:	mov    ebp,0xe1d27bf2
  423283:	xor    ebx,DWORD PTR [esi-0x525ffe4a]
  423289:	addr16 pop edi
  42328b:	mov    edi,0x69ee4a8
  423290:	xchg   ebx,eax
  423291:	add    eax,0x7054c116
  423296:	int    0x60
  423298:	sbb    eax,esi
  42329a:	mov    ah,BYTE PTR [ebp-0xa7b2150]
  4232a0:	jecxz  0x42325a
  4232a2:	or     BYTE PTR [esi+0x12],ah
  4232a5:	push   edx
  4232a6:	pushf  
  4232a7:	jp     0x4232b3
  4232a9:	sub    DWORD PTR [edi+0x2f],0xffffffb4
  4232ad:	xchg   DWORD PTR [edi],ecx
  4232af:	std    
  4232b0:	out    dx,al
  4232b1:	push   ecx
  4232b2:	sub    eax,0xc893ce98
  4232b7:	imul   edi,DWORD PTR [ecx],0x6884e747
  4232bd:	retf   
  4232be:	sub    esi,DWORD PTR [eax+0x64]
  4232c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232c2:	into   
  4232c3:	inc    esi
  4232c4:	pop    es
  4232c5:	nop    edx
  4232c8:	(bad)  
  4232c9:	addr16 sti 
  4232cb:	jnp    0x42329b
  4232cd:	shl    dl,1
  4232cf:	adc    bl,dh
  4232d1:	test   eax,0x3a520c68
  4232d6:	pop    edx
  4232d7:	daa    
  4232d8:	jg     0x423331
  4232da:	das    
  4232db:	arpl   WORD PTR [edx-0x60],sp
  4232de:	sti    
  4232df:	pushf  
  4232e0:	dec    ecx
  4232e1:	ds aas 
  4232e3:	adc    al,BYTE PTR [esi+edx*8-0x587da59d]
  4232ea:	inc    esi
  4232eb:	mov    eax,0x9c855ecd
  4232f0:	mov    bh,0x79
  4232f2:	cmp    al,BYTE PTR [ebx]
  4232f4:	jecxz  0x423348
  4232f6:	and    DWORD PTR [edi],edi
  4232f8:	add    DWORD PTR [esi+0x23462ac],ebx
  4232fe:	sub    al,0x42
  423300:	data16 test al,0x1e
  423303:	or     ebx,DWORD PTR [ecx+ecx*1+0x5c]
  423307:	cmc    
  423308:	test   al,0x70
  42330a:	dec    ebx
  42330b:	mov    dl,BYTE PTR [edx]
  42330d:	nop
  42330e:	mov    edi,0x4434c90d
  423313:	mov    ebp,esi
  423315:	cmp    BYTE PTR [esi+0x0],ch
	...
  423320:	add    dl,bh
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0xd1
  42332e:	mov    eax,0xabe711be
  423333:	add    DWORD PTR [eax],eax
  423335:	scas   al,BYTE PTR es:[edi]
  423336:	add    eax,DWORD PTR [eax]
  423338:	add    ah,ah
  42333a:	xlat   BYTE PTR ds:[ebx]
  42333b:	std    
  42333c:	jo     0x4233a7
  42333e:	or     ebp,DWORD PTR ds:0xb7732a32
  423344:	or     dl,ch
  423346:	xchg   ebx,eax
  423347:	or     ah,al
  423349:	fld    st(4)
  42334b:	push   esi
  42334c:	out    0x6b,eax
  42334e:	adc    eax,0xdfc984d1
  423353:	int3   
  423354:	ficom  DWORD PTR [ebp+0x64]
  423357:	popa   
  423358:	in     eax,dx
  423359:	mov    cs,WORD PTR [ebx-0x7d6ab3e7]
  42335f:	mov    dl,0x3e
  423361:	rol    DWORD PTR [ecx+edi*1-0x3a05d136],cl
  423368:	inc    esi
  423369:	jmp    FWORD PTR [esi-0x50eea80]
  42336f:	aad    0x75
  423371:	jle    0x423360
  423373:	xchg   DWORD PTR [edi],ebx
  423375:	cmp    eax,0x86314c3c
  42337a:	std    
  42337b:	push   edi
  42337c:	out    0x56,al
  42337e:	jnp    0x423389
  423380:	and    al,BYTE PTR [ecx]
  423382:	ror    DWORD PTR [esi],cl
  423384:	mov    cl,cl
  423386:	lea    eax,[eax+0x13cadb58]
  42338c:	sub    ebx,DWORD PTR [ecx]
  42338e:	into   
  42338f:	test   eax,0xed2e555d
  423394:	fmul   DWORD PTR [esi]
  423396:	out    0xb4,eax
  423398:	sbb    dh,BYTE PTR [edi]
  42339a:	mov    edx,ebx
  42339c:	daa    
  42339d:	xor    BYTE PTR [edx],bh
  42339f:	adc    eax,ebp
  4233a1:	adc    esp,DWORD PTR [edx+esi*1]
  4233a4:	mov    ebp,0x65f7241
  4233a9:	lea    edx,[esp+ecx*8+0x66d42c2e]
  4233b0:	cmp    dh,BYTE PTR [edx-0x5620f8a4]
  4233b6:	inc    ecx
  4233b7:	into   
  4233b8:	mov    dh,0x60
  4233ba:	mov    WORD PTR [ecx+ecx*8-0x1eea41da],?
  4233c1:	adc    cl,BYTE PTR ds:0xefbb83eb
  4233c7:	xor    DWORD PTR [ebx+ecx*4-0x1d],edi
  4233cb:	or     al,BYTE PTR [ecx]
  4233cd:	sbb    DWORD PTR [edx],0x64
  4233d0:	outs   dx,BYTE PTR ds:[esi]
  4233d1:	out    0x41,al
  4233d3:	inc    esp
  4233d4:	sbb    bh,BYTE PTR [edx+edi*8]
  4233d7:	dec    esp
  4233d8:	aas    
  4233d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233da:	xchg   esi,eax
  4233db:	jnp    0x42338e
  4233dd:	aam    0x5c
  4233df:	pop    ss
  4233e0:	xor    esi,esi
  4233e2:	or     eax,0xd760f960
  4233e7:	fwait
  4233e8:	mov    eax,0x6d9485d4
  4233ed:	push   eax
  4233ee:	xchg   DWORD PTR ds:0x1271de4b,ebp
  4233f4:	xchg   BYTE PTR [ebp+0x42012af7],dl
  4233fa:	in     al,dx
  4233fb:	std    
  4233fc:	repz sbb bh,dl
  4233ff:	sahf   
  423400:	sub    eax,0x1bfb12cb
  423405:	push   esp
  423406:	inc    esi
  423407:	outs   dx,DWORD PTR ds:[esi]
  423408:	test   eax,0xe9381f2a
  42340d:	or     al,0xc9
  42340f:	sar    ah,1
  423411:	aaa    
  423412:	mov    eax,ds:0xb9833ee4
  423417:	ss femms 
  42341a:	repnz pop eax
  42341c:	scas   al,BYTE PTR es:[edi]
  42341d:	adc    esi,DWORD PTR [ebx-0x29]
  423420:	xor    ch,BYTE PTR [edx-0x14]
  423423:	imul   esp,esp,0x730f6935
  423429:	popa   
  42342a:	jbe    0x423406
  42342c:	sbb    BYTE PTR [edx-0x1e],dh
  42342f:	inc    edx
  423430:	dec    edx
  423431:	pop    es
  423432:	jnp    0x423403
  423434:	mov    edx,0x4c5da666
  423439:	jno    0x42348a
  42343b:	repnz dec esp
  42343d:	mov    ch,0xc8
  42343f:	(bad)  
  423440:	sti    
  423441:	shr    DWORD PTR [ebx+eiz*8],1
  423444:	call   0x60a3:0x5f2a494c
  42344b:	ss call 0x9039139c
  423451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423452:	and    DWORD PTR [edx+0x1c48528b],edi
  423458:	and    BYTE PTR gs:[esi],bh
  42345b:	js     0x42349a
  42345d:	jnp    0x423482
  42345f:	hlt    
  423460:	sbb    ah,BYTE PTR [edx]
  423462:	fst    st(2)
  423464:	sahf   
  423465:	mov    esi,0xc465d7c8
  42346a:	add    ebp,DWORD PTR [ecx-0x37c03c63]
  423470:	push   ebx
  423471:	sbb    cl,BYTE PTR [ebp+ecx*1-0x12]
  423475:	test   BYTE PTR [ecx-0x4e0e09e2],0xdb
  42347c:	call   0x245883b8
  423481:	shl    BYTE PTR [ebx+0x31],1
  423484:	jns    0x423502
  423486:	or     BYTE PTR [eax+0x22],bl
  423489:	dec    edx
  42348a:	lods   eax,DWORD PTR ds:[esi]
  42348b:	retf   
  42348c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42348d:	sub    esp,edx
  42348f:	jne    0x4234ff
  423491:	ficomp WORD PTR [esi-0x7ecc5edb]
  423497:	push   0x5ab0b953
  42349c:	mov    al,0x54
  42349e:	test   BYTE PTR [esi-0x607f028d],0x1a
  4234a5:	pop    esi
  4234a6:	mov    al,0x7a
  4234a8:	mov    al,0x3e
  4234aa:	cmp    eax,0x593a638c
  4234af:	(bad)  
  4234b0:	and    BYTE PTR [ecx+0x79aa3e44],dl
  4234b6:	stos   DWORD PTR es:[edi],eax
  4234b7:	sub    ecx,0x1d
  4234ba:	cdq    
  4234bb:	(bad)  
  4234bc:	stc    
  4234bd:	mov    edx,0x2277df10
  4234c2:	fcmove st,st(0)
  4234c4:	jmp    0x54a5f872
  4234c9:	loope  0x42353d
  4234cb:	adc    eax,0xe48ac5b0
  4234d0:	sub    eax,0x15c7d1f0
  4234d5:	dec    ecx
  4234d6:	scas   al,BYTE PTR es:[edi]
  4234d7:	or     al,0x70
  4234d9:	aaa    
  4234da:	jl     0x423517
  4234dc:	pop    dx
  4234de:	add    esi,DWORD PTR [eax-0x3c]
  4234e1:	push   ss
  4234e2:	test   bl,0xf3
  4234e5:	pusha  
  4234e6:	or     DWORD PTR [esi-0x26],0x5e10dee6
  4234ed:	xchg   DWORD PTR [ebx+0x2c],esi
  4234f0:	into   
  4234f1:	pop    es
  4234f2:	add    dl,BYTE PTR [ecx+0x10]
  4234f5:	push   ebp
  4234f6:	mov    eax,0x9064d52b
  4234fb:	out    dx,al
  4234fc:	push   ebx
  4234fd:	inc    ebx
  4234fe:	sbb    cl,bl
  423500:	outs   dx,BYTE PTR ds:[esi]
  423501:	call   0xb8ba132d
  423506:	cld    
  423507:	(bad)  
  423508:	xchg   esp,eax
  423509:	into   
  42350a:	jno    0x42357c
  42350c:	jg     0x4234ba
  42350e:	inc    edx
  42350f:	xchg   ebp,eax
  423510:	popa   
  423511:	cmp    DWORD PTR [esi+0x26],eax
  423514:	pop    edi
  423515:	pop    esi
  423516:	cmp    BYTE PTR [ebx+ebx*8-0x69],bh
  42351a:	mov    ds:0xff02b7c,al
  42351f:	mov    al,ds:0xf127a3cd
  423524:	test   DWORD PTR [edx],ebx
  423526:	or     dh,BYTE PTR [ebx]
  423528:	or     esi,edx
  42352a:	jns    0x423516
  42352c:	push   esi
  42352d:	mov    bh,0x75
  42352f:	fcmovnu st,st(0)
  423531:	add    dx,cx
  423534:	dec    esp
  423535:	js     0x4235a2
  423537:	lods   al,BYTE PTR es:[esi]
  423539:	mov    eax,DWORD PTR [ebp-0x4d745bc9]
  42353f:	aam    0x1c
  423541:	inc    ecx
  423542:	lea    esi,[ebx-0x76d3bc3c]
  423548:	jae    0x423543
  42354a:	syscall 
  42354c:	stc    
  42354d:	jge    0x423560
  42354f:	mov    cl,0xc5
  423551:	adc    al,0x20
  423553:	arpl   WORD PTR cs:[edi+ecx*2-0x2d3a5ba],sp
  42355b:	sub    DWORD PTR [edi-0x48ab467b],ebp
  423561:	fmul   QWORD PTR [ebp+0xa10fc20]
  423567:	jmp    0xcd8e:0xecb0e173
  42356e:	popf   
  42356f:	aas    
  423570:	xchg   edi,eax
  423571:	fadd   QWORD PTR [ecx-0x6b0d2933]
  423577:	mov    al,ds:0x6b4e3d0d
  42357c:	popa   
  42357d:	fistp  QWORD PTR [esi+0x21]
  423580:	or     eax,0xccb578c
  423585:	cwde   
  423586:	vpsubsb xmm1{k7}{z},xmm3,XMMWORD PTR [ebx+0x40]
  42358d:	aas    
  42358e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42358f:	ins    DWORD PTR es:[edi],dx
  423590:	push   esi
  423591:	cmp    BYTE PTR [eax+0x1d],bl
  423594:	mov    dh,0xfb
  423596:	push   edi
  423597:	loop   0x42353c
  423599:	stc    
  42359a:	jbe    0x4235c5
  42359c:	mov    eax,ds:0x57d356f
  4235a1:	push   0x57f0b82d
  4235a6:	cmp    dh,ah
  4235a8:	(bad)  
  4235a9:	pop    ebp
  4235aa:	sub    eax,0xee67f3a6
  4235af:	cmp    bh,BYTE PTR [eax-0x5]
  4235b2:	inc    ecx
  4235b3:	inc    eax
  4235b4:	mov    dl,0x62
  4235b6:	imul   BYTE PTR [edi-0x8]
  4235b9:	loope  0x4235d2
  4235bb:	and    esi,edx
  4235bd:	and    edi,DWORD PTR [ebx+0x28]
  4235c0:	jmp    0x817b0e9c
  4235c5:	cmp    al,0x81
  4235c7:	cmc    
  4235c8:	inc    esp
  4235c9:	aam    0xf7
  4235cb:	add    DWORD PTR [ebx-0x32],0x77709442
  4235d2:	mov    bl,0xf1
  4235d4:	ret    
  4235d5:	mov    edi,edi
  4235d7:	(bad)  
  4235d8:	pushf  
  4235d9:	dec    esp
  4235da:	cmp    ah,BYTE PTR [edi-0x28]
  4235dd:	(bad)  
  4235df:	lock or al,0xfc
  4235e2:	test   al,0x4a
  4235e4:	push   ecx
  4235e5:	cmp    eax,0xff62b6a6
  4235ea:	push   ebx
  4235eb:	out    dx,eax
  4235ec:	mov    DWORD PTR cs:[esi-0x59],ebp
  4235f0:	or     ecx,DWORD PTR [edi-0x28]
  4235f3:	or     al,0xc
  4235f5:	into   
  4235f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235f7:	imul   eax,DWORD PTR [ebp-0x22915a55],0xa88c818e
  423601:	inc    edx
  423602:	aad    0x1f
  423604:	sbb    al,0xf4
  423606:	mov    ebx,0x12b73a6f
  42360b:	mov    edx,0xabb60853
  423610:	jmp    0x4e8c969e
  423615:	mov    esi,0x7e97fa14
  42361a:	sahf   
  42361b:	in     eax,0x4c
  42361d:	adc    BYTE PTR ds:0x2c610188,ah
  423623:	mov    bh,0xc0
  423625:	retf   0x12c5
  423628:	add    ah,cl
  42362a:	test   BYTE PTR [edi-0x31],ch
  42362d:	dec    edi
  42362e:	clc    
  42362f:	shr    BYTE PTR [ebp-0x54],1
  423632:	call   0x2f6cf611
  423637:	je     0x42360d
  423639:	mov    ah,0x98
  42363b:	pushf  
  42363c:	or     BYTE PTR [esi+0x2e],bl
  42363f:	adc    al,0x77
  423641:	into   
  423642:	sub    ecx,DWORD PTR [si+0x52]
  423646:	sbb    ch,BYTE PTR gs:[edx]
  423649:	shr    DWORD PTR [eax],1
  42364b:	push   esp
  42364c:	aaa    
  42364d:	dec    esp
  42364e:	div    DWORD PTR [edi-0x7a]
  423651:	and    DWORD PTR [edi+0x14ada6fc],edi
  423657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423658:	repz (bad) 
  42365a:	dec    ebp
  42365b:	jmp    0x10b6a116
  423660:	add    al,0xa8
  423662:	jnp    0x4236dd
  423664:	(bad)  [ecx]
  423666:	inc    edi
  423667:	scas   al,BYTE PTR es:[edi]
  423668:	push   es
  423669:	shr    DWORD PTR [edx+0x3b783ee3],0x62
  423670:	sbb    bh,BYTE PTR [eax-0x1e]
  423673:	cmp    dh,BYTE PTR [esi]
  423675:	push   0x4c5cb839
  42367a:	add    al,0x94
  42367c:	out    dx,al
  42367d:	scas   al,BYTE PTR es:[edi]
  42367e:	leave  
  42367f:	add    DWORD PTR ds:0xd3020043,ecx
  423685:	pop    ss
  423686:	call   0x2025:0x79ae1e5e
  42368d:	das    
  42368e:	mov    ds,ecx
  423690:	inc    esp
  423691:	adc    dl,BYTE PTR ds:0x8598fd30
  423697:	xor    eax,0xa40d8a32
  42369c:	dec    ebx
  42369d:	sbb    dh,BYTE PTR [ebx]
  42369f:	in     al,0xe7
  4236a1:	jo     0x4236a0
  4236a3:	jne    0x423682
  4236a5:	pop    ds
  4236a6:	dec    esi
  4236a7:	sub    cl,BYTE PTR [ecx-0x27]
  4236aa:	(bad)  
  4236ab:	scas   al,BYTE PTR es:[edi]
  4236ac:	pop    esi
  4236ad:	inc    esp
  4236ae:	and    esi,DWORD PTR [ecx+eiz*2+0x19]
  4236b2:	sbb    ecx,DWORD PTR [eax+ecx*4+0x5d]
  4236b6:	xchg   DWORD PTR [edx+0x1c],ecx
  4236b9:	or     BYTE PTR [ebx],cl
  4236bb:	loopne 0x4236a2
  4236bd:	push   ecx
  4236be:	or     al,0x4c
  4236c0:	fimul  DWORD PTR [ecx-0x5c]
  4236c3:	dec    esi
  4236c4:	shl    DWORD PTR [ebx],cl
  4236c6:	and    DWORD PTR ds:[ebx+0x333a4da7],eax
  4236cd:	xchg   edi,eax
  4236ce:	xchg   ebx,eax
  4236cf:	repz fs pop ebp
  4236d2:	mov    edi,db7
  4236d5:	les    edi,FWORD PTR [ebp+0x2c]
  4236d8:	fidiv  WORD PTR [eax+0x51854d6f]
  4236de:	js     0x423670
  4236e0:	add    esp,DWORD PTR [ecx]
  4236e2:	xchg   esp,eax
  4236e3:	(bad)  
  4236e4:	fisub  WORD PTR [ebx*8+0x0]
  4236eb:	add    BYTE PTR [eax],al
  4236ed:	add    BYTE PTR [eax],al
  4236ef:	add    BYTE PTR [eax],al
  4236f1:	sbb    al,0x66
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax+0xff0faee],dh
  423701:	xchg   ebp,eax
  423702:	scas   eax,DWORD PTR es:[edi]
  423703:	add    DWORD PTR [eax],eax
  423705:	scas   al,BYTE PTR es:[edi]
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    BYTE PTR [esi+0x6f],ah
  42370b:	gs push cs
  42370d:	imul   ebp,DWORD PTR [edx-0x79f03498],0x9f4d12fe
  423717:	sub    edi,DWORD PTR [eax]
  423719:	push   esp
  42371a:	or     dl,dl
  42371c:	pop    esp
  42371d:	aas    
  42371e:	pusha  
  42371f:	adc    bh,BYTE PTR [eax+0x3b]
  423722:	stos   BYTE PTR es:[edi],al
  423723:	and    al,cl
  423725:	fdiv   DWORD PTR [ecx+0x37ecfb9d]
  42372b:	mov    ch,0xd7
  42372d:	pop    edx
  42372e:	adc    eax,0xf5ca8072
  423733:	jo     0x42378b
  423735:	mov    eax,0x4a781bc4
  42373a:	mov    esi,0xa6b6f862
  42373f:	pop    ebp
  423740:	test   eax,0xc1233ba8
  423745:	imul   edi,DWORD PTR [edi+edx*8+0x4d],0x35
  42374a:	leave  
  42374b:	sbb    DWORD PTR [eax-0x116af4a4],ebx
  423751:	(bad)  
  423752:	in     al,0x80
  423754:	jl     0x423712
  423756:	inc    si
  423758:	clc    
  423759:	or     esi,DWORD PTR [eax-0x51]
  42375c:	mov    ds:0x54777b1a,al
  423761:	push   0x18
  423763:	sbb    al,0x97
  423765:	arpl   bp,cx
  423767:	scas   eax,DWORD PTR es:[edi]
  423768:	clc    
  423769:	in     al,dx
  42376a:	jmp    0xbebf2c5e
  42376f:	lea    ebx,[edi+0x79]
  423772:	aam    0xe4
  423774:	xlat   BYTE PTR ds:[ebx]
  423775:	fst    QWORD PTR [edx+0x5c654b2f]
  42377b:	mov    eax,0xf4d8ef26
  423780:	adc    DWORD PTR [edx+0x31e54dc2],ebx
  423786:	aaa    
  423787:	jb     0x423717
  423789:	sub    bh,al
  42378b:	xchg   esi,eax
  42378c:	inc    eax
  42378d:	inc    ebp
  42378e:	mov    es,WORD PTR [edx+0x53]
  423791:	inc    esp
  423792:	jae    0x4237bb
  423794:	xor    eax,esp
  423796:	icebp  
  423797:	call   0x524bfbf1
  42379c:	xchg   edi,eax
  42379d:	push   edx
  42379e:	ret    0x2f9b
  4237a1:	repz adc eax,0xe713b4a
  4237a7:	pop    esi
  4237a8:	jnp    0x423755
  4237aa:	lock aam 0x5c
  4237ad:	dec    edi
  4237ae:	add    ch,ch
  4237b0:	jge    0x42382a
  4237b2:	cmp    DWORD PTR [esi-0xfb1f2ea],esi
  4237b8:	in     eax,dx
  4237b9:	into   
  4237ba:	std    
  4237bb:	push   esp
  4237bc:	mov    WORD PTR [edx],?
  4237be:	fsubr  DWORD PTR [esi+edx*8-0x6e1dcdac]
  4237c5:	ficomp DWORD PTR [ebx+0x3]
  4237c8:	out    dx,al
  4237c9:	fsubr  DWORD PTR [edi-0x20e28327]
  4237cf:	cmp    al,0x7b
  4237d1:	std    
  4237d2:	jmp    0xcbf04e36
  4237d7:	ret    0xf91d
  4237da:	mov    ecx,0x60af234d
  4237df:	arpl   WORD PTR [ebx],sp
  4237e1:	sub    edi,DWORD PTR [edi+0x72699dc2]
  4237e7:	jmp    0x9b40:0xe1e6e674
  4237ee:	in     al,dx
  4237ef:	jnp    0x423838
  4237f1:	fwait
  4237f2:	daa    
  4237f3:	sub    dl,dh
  4237f5:	inc    ecx
  4237f6:	and    edi,ebp
  4237f8:	out    dx,al
  4237f9:	jl     0x4237d0
  4237fb:	popf   
  4237fc:	xchg   ebp,eax
  4237fd:	jmp    FWORD PTR [ebx+0x45]
  423800:	mov    dl,0xb0
  423802:	or     al,0xa7
  423804:	xor    eax,0xf9dd56bb
  423809:	sahf   
  42380a:	push   edi
  42380b:	mov    al,0xb6
  42380d:	pop    ecx
  42380e:	push   edi
  42380f:	in     eax,dx
  423810:	mov    ds:0x9ee72206,eax
  423815:	xor    esi,esi
  423817:	loope  0x423837
  423819:	mov    edx,0x2ca9f27
  42381e:	(bad)  
  42381f:	nop
  423820:	mov    esi,0x248c63c0
  423825:	sub    eax,0x79c258b0
  42382a:	mov    ch,0x76
  42382c:	loop   0x42386c
  42382e:	fadd   QWORD PTR [esi-0x5]
  423831:	adc    DWORD PTR [eax-0x2bde4d33],0xd
  423838:	int3   
  423839:	push   0xe
  42383b:	xchg   ebx,eax
  42383c:	mov    ds:0xa3e2ec33,eax
  423841:	nop
  423842:	jno    0x423869
  423844:	push   ds
  423845:	test   al,0x4b
  423847:	xchg   ecx,eax
  423848:	fiadd  WORD PTR [ecx-0x9aa79c4]
  42384e:	sbb    al,0xf9
  423850:	cmp    al,0x82
  423852:	les    ebp,FWORD PTR [edx+edi*8-0x4d847194]
  423859:	xor    eax,0x3f8f8400
  42385e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42385f:	loope  0x423811
  423861:	shr    BYTE PTR [esi-0x77],1
  423864:	sahf   
  423865:	xchg   ebp,eax
  423866:	adc    dl,dl
  423868:	mov    cl,0x50
  42386a:	push   ebx
  42386b:	stc    
  42386c:	mov    dh,0x89
  42386e:	cmp    bl,BYTE PTR [ebx]
  423870:	and    al,0xd0
  423872:	adc    eax,0xcace84ae
  423877:	push   esi
  423878:	ss (bad) 
  42387a:	mov    ds:0x541b360d,al
  42387f:	xchg   edi,eax
  423880:	das    
  423881:	mov    BYTE PTR [ecx],0xa2
  423884:	nop
  423885:	jmp    0x423881
  423887:	cmp    esi,DWORD PTR [ebp+0x50]
  42388a:	or     ebp,DWORD PTR [edx+eax*2]
  42388d:	push   es
  42388e:	and    dh,BYTE PTR [edi+0x44]
  423891:	sbb    BYTE PTR [ebx+0x30],ah
  423894:	jae    0x4238f4
  423896:	jp     0x4238ed
  423898:	xlat   BYTE PTR ds:[ebx]
  423899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42389a:	xor    DWORD PTR [edi+0x62fc81cb],ebx
  4238a0:	lock gs enter 0xc6f7,0x46
  4238a6:	cwde   
  4238a7:	sub    al,0x72
  4238a9:	cmp    al,0x9e
  4238ab:	out    0xc0,al
  4238ad:	shr    DWORD PTR [edx+0x47],1
  4238b0:	mov    bl,0x1c
  4238b2:	retf   
  4238b3:	test   eax,0x93412f99
  4238b8:	jg     0x423939
  4238ba:	or     BYTE PTR [edx+0x4f0ef465],dl
  4238c0:	pop    ecx
  4238c1:	jnp    0x423884
  4238c3:	out    dx,eax
  4238c4:	aas    
  4238c5:	mov    ds:0xec2a093d,eax
  4238ca:	xor    DWORD PTR [edx+0xc95d14d],esp
  4238d0:	jp     0x4238d3
  4238d2:	add    ah,BYTE PTR [ecx]
  4238d4:	inc    ecx
  4238d5:	jne    0x423932
  4238d7:	in     al,0x9b
  4238d9:	or     al,0x67
  4238db:	retf   
  4238dc:	sti    
  4238dd:	mov    al,0xb1
  4238df:	inc    ecx
  4238e0:	sti    
  4238e1:	lds    ecx,FWORD PTR [ebx]
  4238e3:	clc    
  4238e4:	pop    ss
  4238e5:	inc    ecx
  4238e6:	sub    eax,0x2e0e3502
  4238eb:	in     eax,dx
  4238ec:	call   0x6332a33a
  4238f1:	mov    ch,0x18
  4238f3:	jmp    0x423891
  4238f5:	xlat   BYTE PTR ds:[ebx]
  4238f6:	js     0x4238ff
  4238f8:	pop    ebp
  4238f9:	fs dec ebp
  4238fb:	outs   dx,BYTE PTR ds:[esi]
  4238fc:	and    al,0x38
  4238fe:	jg     0x423921
  423900:	(bad)  
  423901:	xor    BYTE PTR [ecx+0x58],ah
  423904:	push   esi
  423905:	iret   
  423906:	ja     0x42394a
  423908:	lock iret 
  42390a:	jecxz  0x42392d
  42390c:	add    eax,0x9789a510
  423911:	mov    eax,ds:0xae73be73
  423916:	jne    0x4238bc
  423918:	cs retf 
  42391a:	retf   0x51af
  42391d:	mov    bh,0x6e
  42391f:	xor    dl,dh
  423921:	xchg   ebx,eax
  423922:	sbb    BYTE PTR [ebp-0x5d],bh
  423925:	out    dx,eax
  423926:	push   esi
  423927:	cli    
  423928:	add    DWORD PTR [ebx-0x6ac2302f],esi
  42392e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42392f:	pop    es
  423930:	in     al,dx
  423931:	dec    edi
  423932:	add    eax,0x977802df
  423937:	mov    ebx,0x5180976
  42393c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42393d:	xor    ecx,ebx
  42393f:	mov    gs,WORD PTR [ecx-0x6e]
  423942:	push   edi
  423943:	test   BYTE PTR [eax-0x4],cl
  423946:	sar    DWORD PTR [ecx+0x64488996],1
  42394c:	lods   al,BYTE PTR ds:[esi]
  42394d:	test   BYTE PTR [ebp+0x7e],bl
  423950:	arpl   WORD PTR [ebx+ecx*1],ax
  423953:	mov    bh,0x35
  423955:	sub    ebx,ebx
  423957:	jecxz  0x42399f
  423959:	lahf   
  42395a:	ror    DWORD PTR [esi-0x20c6993c],cl
  423960:	and    edx,DWORD PTR ds:0xd69004d2
  423966:	sub    al,0xac
  423968:	iret   
  423969:	(bad)  
  42396a:	xchg   edx,eax
  42396b:	adc    bh,BYTE PTR [edx+0x7a7e50d3]
  423971:	pop    ebp
  423972:	or     eax,0xc034ff84
  423977:	inc    ebx
  423978:	mov    ecx,0xf20b04b2
  42397d:	mov    dl,0x39
  42397f:	dec    ecx
  423980:	pop    esi
  423981:	mov    ch,0x4a
  423983:	pop    es
  423984:	imul   edx,DWORD PTR [edx-0xf705c71],0xd09746e7
  42398e:	fisubr DWORD PTR [edi-0x14]
  423991:	xor    esi,0xe995ba1
  423997:	or     cl,BYTE PTR [ebx-0x2eb4a4da]
  42399d:	in     eax,0xb5
  42399f:	inc    edx
  4239a0:	in     eax,0x41
  4239a2:	ss mov dl,0xcd
  4239a5:	rcr    bh,cl
  4239a7:	mov    WORD PTR [esi],cs
  4239a9:	ins    DWORD PTR es:[edi],dx
  4239aa:	push   eax
  4239ab:	push   ds
  4239ac:	lea    edi,[eax]
  4239ae:	std    
  4239af:	cmp    al,0xab
  4239b1:	les    ebp,FWORD PTR [edx]
  4239b3:	adc    eax,0x404a3b9b
  4239b8:	cwde   
  4239b9:	(bad)  
  4239bb:	leave  
  4239bc:	in     eax,0x5d
  4239be:	add    bh,0x33
  4239c1:	stc    
  4239c2:	xlat   BYTE PTR ds:[ebx]
  4239c3:	test   BYTE PTR [edi-0xcb6fb7d],ch
  4239c9:	inc    DWORD PTR [esi-0x2b709b56]
  4239cf:	mov    ebp,0x29621337
  4239d4:	cli    
  4239d5:	fimul  DWORD PTR [esi-0x36e40962]
  4239db:	mov    ebp,0x54f8509b
  4239e0:	fldcw  WORD PTR [edx-0xe]
  4239e3:	jp     0x423a3a
  4239e5:	je     0x42396c
  4239e7:	jmp    0x740f:0x5f8995f6
  4239ee:	xor    al,0x49
  4239f0:	(bad)  
  4239f1:	mov    dl,0x87
  4239f3:	adc    DWORD PTR [edi],0xf7ac8559
  4239f9:	shr    bl,1
  4239fb:	push   esi
  4239fc:	push   ebp
  4239fd:	xor    BYTE PTR [edi+eax*8],0xc1
  423a01:	fmul   DWORD PTR [ecx+0x7ca21ce0]
  423a07:	scas   eax,DWORD PTR es:[edi]
  423a08:	xchg   ebp,eax
  423a09:	inc    ecx
  423a0a:	push   eax
  423a0b:	cmp    ah,BYTE PTR [esi]
  423a0d:	fdecstp 
  423a0f:	inc    eax
  423a10:	(bad)  
  423a11:	pop    esp
  423a12:	lock adc BYTE PTR [ebx],ah
  423a15:	mov    bh,0xa3
  423a17:	cmp    esi,edx
  423a19:	rcl    BYTE PTR [edx-0x39],0xb9
  423a1d:	test   ebx,0x88672881
  423a23:	bound  esi,QWORD PTR [ebx+0x5bb7a7fd]
  423a29:	sahf   
  423a2a:	aad    0xbc
  423a2c:	cmp    BYTE PTR [edx+0x58],dh
  423a2f:	adc    eax,0x96d9741
  423a34:	pop    es
  423a35:	lods   eax,DWORD PTR ds:[si]
  423a37:	sbb    BYTE PTR [ebp-0x2b],dh
  423a3a:	and    ebp,DWORD PTR [eax]
  423a3c:	cmp    al,0xde
  423a3e:	dec    BYTE PTR [ecx]
  423a40:	mov    eax,0xcc84aa56
  423a45:	sbb    BYTE PTR [ebx-0x708baa00],cl
  423a4b:	inc    ebp
  423a4c:	or     BYTE PTR [esi+0x27],al
  423a4f:	pop    ebx
  423a50:	or     ch,BYTE PTR ds:0x6729068b
  423a56:	mov    dl,0x72
  423a58:	lds    edi,FWORD PTR [ecx+0x276d17aa]
  423a5e:	jle    0x423a95
  423a60:	daa    
  423a61:	adc    dh,BYTE PTR [ebx-0x10]
  423a64:	xchg   edi,eax
  423a65:	or     eax,0xf9a1628c
  423a6a:	dec    ecx
  423a6b:	jne    0x423a12
  423a6d:	add    ch,ah
  423a6f:	mov    dh,0x60
  423a71:	into   
  423a72:	ins    BYTE PTR es:[edi],dx
  423a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a74:	mov    bl,0x19
  423a76:	call   0xe67eaf03
  423a7b:	inc    ebx
  423a7c:	ret    0xee97
  423a7f:	push   0xffffff91
  423a81:	jne    0x423a59
  423a83:	jle    0x423acc
  423a85:	fdivr  st,st(1)
  423a87:	mov    bh,0x66
  423a89:	ret    
  423a8a:	outs   dx,DWORD PTR ds:[esi]
  423a8b:	(bad)  
  423a8c:	stc    
  423a8d:	stos   DWORD PTR es:[edi],eax
  423a8e:	add    ebp,DWORD PTR [esi-0x4b]
  423a91:	mov    ebx,0xa5be2edf
  423a96:	push   edi
  423a97:	bound  esi,QWORD PTR [ebx]
  423a99:	inc    esp
  423a9a:	add    ah,BYTE PTR [edi+0x3f]
  423a9d:	ret    
  423a9e:	jb     0x423adc
  423aa0:	leave  
  423aa1:	adc    cl,ah
  423aa3:	lods   al,BYTE PTR ds:[esi]
  423aa4:	cmp    ah,BYTE PTR [edx-0x5ba19407]
  423aaa:	and    DWORD PTR [ebx+0x267345c4],edx
  423ab0:	or     ecx,DWORD PTR [esi+eax*4]
  423ab3:	push   cs
  423ab4:	test   al,0x3f
  423ab6:	sub    eax,DWORD PTR [eax]
	...
  423ac0:	add    BYTE PTR [ecx-0x6],cl
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi+0x0],cs
  423ace:	out    dx,eax
  423acf:	sbb    al,0x27
  423ad1:	inc    ebx
  423ad2:	mov    bl,0x1
  423ad4:	add    BYTE PTR [esi-0x2bfffffd],ch
  423ada:	pop    edx
  423adb:	mov    edi,0x8383dc84
  423ae0:	lahf   
  423ae1:	cli    
  423ae2:	push   ebp
  423ae3:	out    dx,al
  423ae4:	pusha  
  423ae5:	xchg   edi,eax
  423ae6:	or     al,0x8
  423ae8:	gs pop ss
  423aea:	and    bh,BYTE PTR [edx-0x50]
  423aed:	inc    edx
  423aee:	fisubr WORD PTR [eax-0x36]
  423af1:	xor    DWORD PTR [eax],eax
  423af3:	aas    
  423af4:	or     al,0x92
  423af6:	addr16 (bad) 
  423af8:	jmp    0x423b4b
  423afa:	int3   
  423afb:	or     cl,bh
  423afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423afe:	mul    ch
  423b00:	mov    dh,0xe
  423b02:	pop    ebx
  423b03:	push   es
  423b04:	push   ds
  423b05:	cmp    eax,0x6d67b9b4
  423b0a:	data16 icebp 
  423b0c:	in     eax,0x2f
  423b0e:	enter  0xbf71,0x81
  423b12:	loope  0x423ad5
  423b14:	es (bad) 
  423b17:	push   ds
  423b18:	jo     0x423b70
  423b1a:	aaa    
  423b1b:	ror    DWORD PTR [edx-0x46e0921c],cl
  423b21:	inc    eax
  423b22:	mov    edi,DWORD PTR [ebx]
  423b24:	inc    ebp
  423b25:	dec    eax
  423b26:	xchg   ecx,edi
  423b28:	push   edi
  423b29:	ficom  WORD PTR [ebp-0x5f]
  423b2c:	dec    ebx
  423b2d:	bound  edx,QWORD PTR [ebx-0x1146362f]
  423b33:	imul   esi,DWORD PTR gs:[esi],0x11d13211
  423b3a:	inc    edx
  423b3b:	inc    ecx
  423b3c:	sub    edi,DWORD PTR [edx+eax*8-0x2f]
  423b40:	bound  esp,QWORD PTR [ebx]
  423b42:	sub    BYTE PTR [ebp+0x10e318c],0x7
  423b49:	pop    ebp
  423b4a:	push   ecx
  423b4b:	dec    esp
  423b4c:	(bad)  
  423b4d:	push   esi
  423b4e:	inc    esi
  423b4f:	enter  0xba43,0x30
  423b53:	inc    ebx
  423b54:	sbb    BYTE PTR [esi+0x2c55396d],dh
  423b5a:	daa    
  423b5b:	loop   0x423b3c
  423b5d:	loop   0x423b18
  423b5f:	inc    edx
  423b60:	pop    esi
  423b61:	cmp    DWORD PTR [ecx],esp
  423b63:	in     eax,dx
  423b64:	jns    0x423af4
  423b66:	(bad)  
  423b67:	mov    esi,0x74bc3dd1
  423b6c:	xchg   esp,eax
  423b6d:	lds    ecx,FWORD PTR [edi+0x1b741361]
  423b73:	xor    BYTE PTR [ecx+eax*8+0x7fab28b4],0xd0
  423b7b:	into   
  423b7c:	stos   BYTE PTR es:[edi],al
  423b7d:	inc    ebx
  423b7e:	(bad)
  423b82:	fist   DWORD PTR [ebx]
  423b84:	jmp    0x491c:0xe50e2fc4
  423b8b:	stos   BYTE PTR es:[edi],al
  423b8c:	fsub   QWORD PTR [edi-0x55251e7]
  423b92:	mov    al,ds:0xce6d90f4
  423b97:	inc    esp
  423b98:	out    dx,eax
  423b99:	mov    ebp,0x13f0ac3e
  423b9e:	add    DWORD PTR [edi+ecx*2+0x53],edx
  423ba2:	and    eax,0x2aa8f449
  423ba7:	mov    gs,ebp
  423ba9:	add    eax,0x56a7fb56
  423bae:	test   DWORD PTR [ebp-0xd],ebp
  423bb1:	pmaddwd mm1,QWORD PTR [edx]
  423bb4:	les    esi,FWORD PTR [ebp+0x7aa77a6e]
  423bba:	pop    ds
  423bbb:	mov    ebp,0x65b95cb8
  423bc0:	xchg   ecx,eax
  423bc1:	(bad)
  423bc4:	or     ch,BYTE PTR ds:0xfe91f9a
  423bca:	je     0x423b89
  423bcc:	icebp  
  423bcd:	sub    edx,DWORD PTR [ebx+0x73]
  423bd0:	pop    ss
  423bd1:	ds pushf 
  423bd3:	sahf   
  423bd4:	xor    al,0x55
  423bd6:	je     0x423bfb
  423bd8:	int3   
  423bd9:	shr    DWORD PTR [esi-0x6e],1
  423bdc:	aad    0x2f
  423bde:	fwait
  423bdf:	loope  0x423c02
  423be1:	and    eax,0xab19fdbc
  423be6:	or     BYTE PTR [esi+0x1a],cl
  423be9:	push   esi
  423bea:	in     al,0xa1
  423bec:	loope  0x423bae
  423bee:	frstor [esi+eax*8]
  423bf1:	in     al,0x5
  423bf3:	and    edi,DWORD PTR ds:0xd987cfca
  423bf9:	cld    
  423bfa:	scas   al,BYTE PTR es:[edi]
  423bfb:	jbe    0x423b97
  423bfd:	popf   
  423bfe:	add    al,0x30
  423c00:	test   BYTE PTR [ecx+0x6f49cb33],dl
  423c06:	pop    eax
  423c07:	repnz mov edi,0xae13e87
  423c0d:	jne    0x423c55
  423c0f:	fcmovnu st,st(6)
  423c11:	arpl   WORD PTR [ebp+0x587b0d0b],di
  423c17:	push   ss
  423c18:	(bad)  
  423c19:	shl    BYTE PTR [edi-0x3e5ff099],0x92
  423c20:	fimul  WORD PTR [ebx-0xd85bafc]
  423c26:	rol    cl,0x84
  423c29:	mov    al,ds:0x86be4eb2
  423c2e:	outs   dx,BYTE PTR ds:[esi]
  423c2f:	pop    edi
  423c30:	daa    
  423c31:	dec    edx
  423c32:	mov    ebx,0x309eba5e
  423c37:	push   es
  423c38:	sbb    esi,DWORD PTR [esi+0x22e204da]
  423c3e:	pop    ebx
  423c3f:	sahf   
  423c40:	mov    edx,0xd68d0b8d
  423c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c46:	in     eax,0xca
  423c48:	lds    esp,FWORD PTR [edx+0x2e977cae]
  423c4e:	loop   0x423c1e
  423c50:	xchg   edi,eax
  423c51:	outs   dx,DWORD PTR ds:[esi]
  423c52:	cs cmp al,bh
  423c55:	mov    edi,0x3669b581
  423c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c5b:	test   BYTE PTR [eax],ah
  423c5d:	pusha  
  423c5e:	sbb    ah,BYTE PTR [esi-0x3f]
  423c61:	repz sbb BYTE PTR [esi+0x63],dh
  423c65:	aas    
  423c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c68:	dec    ebp
  423c69:	outs   dx,DWORD PTR ds:[esi]
  423c6a:	imul   ecx,DWORD PTR [edi-0x28],0xffffffdd
  423c6e:	mov    DWORD PTR [esi+0x6c81a998],ebx
  423c74:	mov    al,0x39
  423c76:	cwde   
  423c77:	shl    esi,0xdc
  423c7a:	stc    
  423c7b:	std    
  423c7c:	mov    ebp,0xdd7017e9
  423c81:	add    esi,DWORD PTR [esi]
  423c83:	xchg   DWORD PTR [eax+0x2410885e],edx
  423c89:	(bad)  [ebx-0x5b3993e2]
  423c8f:	mov    ds:0xd5f26674,al
  423c94:	loopne 0x423ca8
  423c96:	pop    esp
  423c97:	and    eax,0x8a1134dc
  423c9c:	imul   edi,DWORD PTR [ebx-0x2e],0xb627d72a
  423ca3:	jo     0x423c57
  423ca5:	inc    ebx
  423ca6:	push   edx
  423ca7:	mov    al,0x6d
  423ca9:	pop    eax
  423caa:	mov    ecx,0xc49fb1f
  423caf:	test   eax,0x6cc98ca0
  423cb4:	xchg   esi,eax
  423cb5:	rol    BYTE PTR [ecx],0x1c
  423cb8:	and    BYTE PTR [esi+0x22],bh
  423cbb:	ins    BYTE PTR es:[edi],dx
  423cbc:	ret    0xb722
  423cbf:	sub    eax,0x54bf8a02
  423cc4:	imul   esi,DWORD PTR [edx-0x53db0d72],0x4a
  423ccb:	or     edi,ecx
  423ccd:	jle    0x423d2a
  423ccf:	pop    esp
  423cd0:	cld    
  423cd1:	cmp    al,BYTE PTR [ecx-0x446a87fb]
  423cd7:	mov    bh,0x90
  423cd9:	addr16 dec edi
  423cdb:	cwde   
  423cdc:	mov    eax,DWORD PTR [ebp+0x5247a2dc]
  423ce2:	clc    
  423ce3:	out    0xed,al
  423ce5:	sub    bh,ah
  423ce7:	mov    edi,edx
  423ce9:	dec    ebp
  423cea:	dec    ebp
  423ceb:	sbb    DWORD PTR [ebp+0x7e],esp
  423cee:	mov    dh,0xe7
  423cf0:	push   edi
  423cf1:	push   edx
  423cf2:	inc    ebx
  423cf3:	icebp  
  423cf4:	or     al,0xbb
  423cf6:	cs ins BYTE PTR es:[edi],dx
  423cf8:	test   eax,0x3d361914
  423cfd:	popa   
  423cfe:	js     0x423d43
  423d00:	add    eax,0x2b27a5b5
  423d05:	fld    TBYTE PTR [esi-0x27]
  423d08:	adc    DWORD PTR [ebp+0x72],esp
  423d0b:	test   ecx,0x7d342234
  423d11:	out    0xe7,al
  423d13:	(bad)  
  423d15:	outs   dx,DWORD PTR ds:[esi]
  423d16:	xchg   ebx,eax
  423d17:	cmc    
  423d18:	inc    ebp
  423d19:	xchg   DWORD PTR [ebp-0x5b],ebp
  423d1c:	aam    0x9b
  423d1e:	bnd jne 0x423d5c
  423d21:	mov    esi,0xc74e8ab5
  423d26:	sar    bh,cl
  423d28:	xor    DWORD PTR [edi+0x73],edx
  423d2b:	jl     0x423cf9
  423d2d:	popa   
  423d2e:	test   BYTE PTR [ebp+0x60c2ed73],ch
  423d34:	aas    
  423d35:	xchg   ebp,eax
  423d36:	jmp    0x423cbf
  423d38:	sbb    DWORD PTR [ebx-0x9e4fa17],ecx
  423d3e:	hlt    
  423d3f:	xchg   BYTE PTR [eax-0x61e9702],dh
  423d45:	sbb    al,0x8
  423d47:	pop    es
  423d48:	sar    dh,1
  423d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d4b:	sbb    ch,BYTE PTR [ebx]
  423d4d:	push   edi
  423d4e:	ins    DWORD PTR es:[edi],dx
  423d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d50:	sbb    BYTE PTR [edi-0x73],bh
  423d53:	cmp    BYTE PTR [ebp+0x57],0x75
  423d57:	repz mov ah,0x15
  423d5a:	aaa    
  423d5b:	cmp    DWORD PTR [ebp+0x1c5589f7],esi
  423d61:	cmp    BYTE PTR [eax+edi*2],0xb7
  423d65:	mov    DWORD PTR [eax-0x2d],eax
  423d68:	push   esi
  423d69:	add    al,0x45
  423d6b:	mov    esi,cs
  423d6d:	call   0x2483:0x7728a497
  423d74:	nop
  423d75:	mov    ds:0x4f8f0202,al
  423d7a:	cmc    
  423d7b:	outs   dx,DWORD PTR ds:[esi]
  423d7c:	mov    al,0x7b
  423d7e:	mov    dh,0xb5
  423d80:	(bad)  
  423d81:	les    ebp,FWORD PTR cs:[edi]
  423d84:	aam    0x6a
  423d86:	sub    al,0x11
  423d88:	fmul   st(0),st
  423d8a:	sbb    esi,ecx
  423d8c:	mov    WORD PTR [ebp-0x5b],gs
  423d8f:	and    al,0x5
  423d91:	scas   al,BYTE PTR es:[edi]
  423d92:	cmp    edx,esi
  423d94:	mov    cl,0xd5
  423d96:	xlat   BYTE PTR ds:[ebx]
  423d97:	xor    al,0x56
  423d99:	jns    0x423d6d
  423d9b:	inc    eax
  423d9c:	sbb    DWORD PTR [ecx-0x34],esi
  423d9f:	and    BYTE PTR [ebx],dh
  423da1:	ins    DWORD PTR es:[edi],dx
  423da2:	ret    
  423da3:	jmp    0x423d5d
  423da5:	pop    esi
  423da6:	cwde   
  423da7:	jg     0x423d9b
  423da9:	jnp    0x423e0a
  423dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dac:	mov    edi,0x42f2d451
  423db1:	outs   dx,BYTE PTR ds:[esi]
  423db2:	in     eax,dx
  423db3:	sahf   
  423db4:	jl     0x423d53
  423db6:	or     ebp,DWORD PTR [ebp+0x31070473]
  423dbc:	sti    
  423dbd:	sub    ebp,DWORD PTR [edi+0x4cd60544]
  423dc3:	das    
  423dc4:	jne    0x423d9b
  423dc6:	cmc    
  423dc7:	es mov bh,0x44
  423dca:	push   ebx
  423dcb:	push   0xffffffca
  423dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dce:	sub    ah,al
  423dd0:	mov    WORD PTR [eax+0x7b7cff9b],?
  423dd6:	loopne 0x423e2f
  423dd8:	cmp    BYTE PTR [ebp+0x7d4e72f5],ch
  423dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ddf:	std    
  423de0:	mov    esi,0x93795b7b
  423de5:	xor    ebp,DWORD PTR [ecx]
  423de7:	push   edx
  423de8:	scas   eax,DWORD PTR es:[edi]
  423de9:	jnp    0x423e62
  423deb:	and    eax,0x38b53023
  423df0:	test   BYTE PTR [eax],al
  423df2:	jg     0x423e10
  423df4:	lea    ecx,[esi+esi*2-0x4d]
  423df8:	jmp    FWORD PTR [ecx]
  423dfa:	mov    eax,ds:0xe79e51c5
  423dff:	cwde   
  423e00:	hlt    
  423e01:	sbb    eax,0xe4c56134
  423e06:	enter  0x21b3,0xd4
  423e0a:	sub    DWORD PTR [esi+0x858ae76],eax
  423e10:	imul   ecx,eax,0x62
  423e13:	pop    ebp
  423e14:	je     0x423e8f
  423e16:	rcr    DWORD PTR [eax],0x65
  423e19:	push   0xffffffc2
  423e1b:	mov    DWORD PTR [eax+0x13673cd1],ebx
  423e21:	outs   dx,DWORD PTR ds:[esi]
  423e22:	bound  edi,QWORD PTR [ebp+edx*8-0x29]
  423e26:	jo     0x423ea4
  423e28:	mov    al,ds:0x878f3492
  423e2d:	pop    edx
  423e2e:	dec    eax
  423e2f:	sub    DWORD PTR [edi-0x55f59e4d],ecx
  423e35:	jmp    0xbf8d:0x23d5dee7
  423e3c:	mov    ah,0x4b
  423e3e:	std    
  423e3f:	ins    DWORD PTR es:[edi],dx
  423e40:	sbb    DWORD PTR [edi],ebp
  423e42:	dec    eax
  423e43:	push   ebx
  423e44:	jnp    0x423dd5
  423e46:	neg    DWORD PTR [eax-0x58857fc]
  423e4c:	sbb    esi,eax
  423e4e:	loope  0x423e67
  423e50:	dec    ebp
  423e51:	out    0xe7,eax
  423e53:	dec    edx
  423e54:	cmp    BYTE PTR [edi],dl
  423e56:	mov    eax,cs:0xdca0c55a
  423e5c:	aas    
  423e5d:	jmp    0xc2e8b5d9
  423e62:	out    dx,eax
  423e63:	pop    esi
  423e64:	adc    al,0x8c
  423e66:	into   
  423e67:	fild   WORD PTR [ebx]
  423e69:	in     eax,dx
  423e6a:	(bad)  
  423e6b:	(bad)  
  423e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e6d:	mov    esi,0xd1b7b826
  423e72:	(bad)  
  423e73:	enter  0x616b,0xcb
  423e77:	mov    BYTE PTR [edx],dl
  423e79:	mov    WORD PTR [esp+ecx*2+0xc5a2cd2],cs
  423e80:	cli    
  423e81:	mov    al,ds:0x82294e77
  423e86:	sub    eax,0x0
  423e8b:	add    BYTE PTR [eax],al
  423e8d:	add    BYTE PTR [eax],al
  423e8f:	add    BYTE PTR [eax],al
  423e91:	xor    ebx,ecx
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0xffffffeb
  423e9e:	gs xor eax,0x1b6f198
  423ea4:	add    BYTE PTR [esi+0x5000003],ch
  423eaa:	mov    al,BYTE PTR [esi+0x13]
  423ead:	add    eax,0xc0dfa975
  423eb2:	or     bl,BYTE PTR [ecx]
  423eb4:	pop    ss
  423eb5:	xor    al,0x53
  423eb7:	jnp    0x423e89
  423eb9:	sbb    ecx,esi
  423ebb:	jno    0x423f0e
  423ebd:	sti    
  423ebe:	sbb    BYTE PTR [edi+ebx*4],bh
  423ec1:	aam    0x37
  423ec3:	stos   BYTE PTR es:[edi],al
  423ec4:	in     eax,dx
  423ec5:	mov    eax,0x36a500f0
  423eca:	add    DWORD PTR [ecx-0x80fe247],ebx
  423ed0:	ret    
  423ed1:	jmp    0x6728:0xa2796c0f
  423ed8:	push   es
  423ed9:	mov    ah,0xaa
  423edb:	std    
  423edc:	scas   eax,DWORD PTR es:[edi]
  423edd:	loope  0x423e96
  423edf:	mov    esi,0x824fd8e2
  423ee4:	les    esp,FWORD PTR [edi+eiz*2]
  423ee7:	fdivr  st(1),st
  423ee9:	or     eax,DWORD PTR [esi]
  423eeb:	(bad)  
  423eec:	ror    DWORD PTR [eax],cl
  423eee:	pusha  
  423eef:	rcr    DWORD PTR [edx-0x3a417ce],1
  423ef5:	popf   
  423ef6:	or     al,0xb7
  423ef8:	sbb    DWORD PTR [eax+0x0],edx
  423efb:	sub    al,BYTE PTR [edi-0x45556be1]
  423f01:	lds    esp,FWORD PTR [eax+0x13c5488f]
  423f07:	retf   
  423f08:	stos   DWORD PTR es:[edi],eax
  423f09:	jecxz  0x423ea3
  423f0b:	xchg   ecx,eax
  423f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f0d:	rol    al,cl
  423f0f:	and    DWORD PTR [ecx+0x5c],0x4a826914
  423f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f17:	add    eax,DWORD PTR [esi]
  423f19:	sub    BYTE PTR [edx],bh
  423f1b:	sti    
  423f1c:	call   0x57ac88ee
  423f21:	(bad)  
  423f23:	mov    cl,0xd7
  423f25:	sahf   
  423f26:	and    bh,BYTE PTR [esi-0x50c95533]
  423f2c:	cmp    DWORD PTR [edx],edx
  423f2e:	adc    ah,ch
  423f30:	ins    BYTE PTR es:[edi],dx
  423f31:	push   eax
  423f32:	mov    ds:0xa5ab11c8,eax
  423f37:	sub    ebx,ebp
  423f39:	mov    ebp,0x2392558
  423f3e:	imul   ecx,DWORD PTR [edx-0x41e6b5c6],0x6899a225
  423f48:	or     ch,BYTE PTR [eax-0x78]
  423f4b:	lds    esp,FWORD PTR [edx-0x15f20567]
  423f51:	ret    0x7678
  423f54:	jmp    0x798d:0x1d642c27
  423f5b:	push   ss
  423f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f5d:	jae    0x423fc7
  423f5f:	data16 jno 0x423fdc
  423f62:	sbb    al,0x1a
  423f64:	sar    DWORD PTR [esi+0x41],cl
  423f67:	dec    ebp
  423f68:	jecxz  0x423f1f
  423f6a:	xor    al,0x16
  423f6c:	mov    ebp,0x1751faec
  423f71:	sbb    al,0x4d
  423f73:	xchg   DWORD PTR [esi],esp
  423f75:	add    BYTE PTR [edi+0x35fd081e],dl
  423f7b:	inc    esp
  423f7c:	adc    ebx,ebp
  423f7e:	cmp    ecx,DWORD PTR [ecx-0x1b]
  423f81:	js     0x423f22
  423f83:	test   al,0x2c
  423f85:	add    esi,esp
  423f87:	push   edi
  423f88:	jae    0x423feb
  423f8a:	jno    0x423f54
  423f8c:	adc    DWORD PTR [ebx],ebx
  423f8e:	mov    dh,ah
  423f90:	js     0x423f7b
  423f92:	pop    ebp
  423f93:	and    BYTE PTR gs:[ebp-0x5],dh
  423f97:	pop    esp
  423f98:	mov    cl,0xe2
  423f9a:	xchg   edi,eax
  423f9b:	adc    eax,0x11e0ed49
  423fa0:	mov    BYTE PTR [ebx+0x35dd4cbb],bh
  423fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fa7:	das    
  423fa8:	cmp    dh,BYTE PTR [esp+ebx*2+0x32e4c489]
  423faf:	data16 mov ah,0x24
  423fb2:	mov    ecx,0xc750df1f
  423fb7:	mov    esp,0x53d7481f
  423fbc:	jb     0x424032
  423fbe:	sbb    al,0xda
  423fc0:	sbb    bh,BYTE PTR [ebp-0x74]
  423fc3:	lds    edx,FWORD PTR [ebp+0x5e]
  423fc6:	call   0xe9dbb9bf
  423fcb:	mov    ebx,0xc1055bd6
  423fd0:	xchg   ebp,eax
  423fd1:	sub    ah,BYTE PTR [eax+0x120c3750]
  423fd7:	ret    
  423fd8:	xor    eax,0x816cb23a
  423fdd:	inc    eax
  423fde:	xchg   ecx,eax
  423fdf:	(bad)
  423fe2:	div    esp
  423fe4:	imul   eax,DWORD PTR [eax-0x11],0x645ae1b1
  423feb:	jl     0x423fee
  423fed:	cmp    eax,0x34241485
  423ff2:	clc    
  423ff3:	arpl   WORD PTR [ecx],ax
  423ff5:	jmp    0x7dbb:0xdc8867d6
  423ffc:	xor    eax,0x301c00a9
  424001:	mov    eax,?
  424003:	data16 add al,0xfd
  424006:	rcl    DWORD PTR [edx+0x5],cl
  424009:	lea    esp,[ebp-0x50]
  42400c:	xor    al,BYTE PTR [ecx+eax*2]
  42400f:	adc    al,0x5f
  424011:	xchg   ebp,eax
  424012:	stos   DWORD PTR es:[edi],eax
  424013:	jmp    0x423fa7
  424015:	imul   eax,DWORD PTR [edi+0x43],0xffffff91
  424019:	stos   DWORD PTR es:[edi],eax
  42401a:	fst    QWORD PTR [ebx]
  42401c:	out    dx,al
  42401d:	xor    BYTE PTR [ecx+edi*2-0x42],cl
  424021:	jbe    0x423fb9
  424023:	imul   esi,DWORD PTR [edx+0x1dd7071f],0xc98ab004
  42402d:	mov    ah,0x2e
  42402f:	mov    ch,BYTE PTR [esi]
  424031:	cmp    DWORD PTR [esi+eiz*4-0xe9959ed],edx
  424038:	jnp    0x42406f
  42403a:	xor    al,0x6
  42403c:	fcmovb st,st(4)
  42403e:	pop    ebp
  42403f:	push   eax
  424040:	dec    ebx
  424041:	mov    ebx,0xe5791339
  424046:	or     eax,0xaadb1f0e
  42404b:	in     al,0x7e
  42404d:	inc    esi
  42404e:	dec    edx
  42404f:	push   ds
  424050:	daa    
  424051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424052:	jne    0x423ffe
  424054:	dec    esi
  424055:	pop    ds
  424056:	and    eax,0x6b4faa65
  42405b:	or     BYTE PTR [esi],al
  42405d:	not    dh
  42405f:	jae    0x42405b
  424061:	xchg   edx,eax
  424063:	es cli 
  424065:	adc    BYTE PTR [edx+0x12feb375],0x3a
  42406c:	jns    0x4240bf
  42406e:	xor    eax,0xc76faf9b
  424073:	out    dx,eax
  424074:	ret    0xd560
  424077:	sbb    ebx,DWORD PTR [edx+0x23]
  42407a:	jmp    0x4240a7
  42407c:	push   eax
  42407d:	cmp    al,0xcd
  42407f:	leave  
  424080:	daa    
  424081:	(bad)  
  424082:	mov    cl,0x8
  424084:	mov    ch,0x2d
  424086:	pop    es
  424087:	lds    ebx,FWORD PTR [esi+eax*4-0x3f7d682e]
  42408e:	pop    ds
  42408f:	jmp    0x42405a
  424091:	jno    0x42407d
  424093:	adc    dl,ah
  424095:	mov    al,ds:0xbc299d95
  42409a:	xchg   edx,eax
  42409b:	push   edx
  42409c:	inc    eax
  42409d:	adc    al,0x0
  42409f:	mov    al,0x90
  4240a1:	aad    0xe
  4240a3:	xchg   BYTE PTR [ebx-0x66042e7c],al
  4240a9:	nop
  4240aa:	push   edi
  4240ab:	or     ebx,DWORD PTR [ebp+0x2c08a508]
  4240b1:	pop    ds
  4240b2:	lea    eax,[edx+0x262650ca]
  4240b8:	cli    
  4240b9:	push   ebp
  4240ba:	inc    ecx
  4240bb:	lock and BYTE PTR [edx+0x72],dl
  4240bf:	retf   
  4240c0:	inc    edx
  4240c1:	and    dh,al
  4240c3:	jmp    0x52f0:0x23dcad17
  4240ca:	jg     0x42411b
  4240cc:	mov    ebx,0xb3498a64
  4240d1:	pop    esp
  4240d2:	es jnp 0x424077
  4240d5:	and    ch,dh
  4240d7:	inc    esi
  4240d8:	test   al,0xb1
  4240da:	add    al,0x31
  4240dc:	cmc    
  4240dd:	retf   
  4240de:	add    al,0xcb
  4240e0:	lods   eax,DWORD PTR ds:[esi]
  4240e1:	inc    DWORD PTR [edi+0x2f]
  4240e4:	xor    BYTE PTR [ebx+0x12],ah
  4240e7:	jmp    0xe77d:0x7b6824c3
  4240ee:	pusha  
  4240ef:	mov    al,0x62
  4240f1:	jmp    0x3497:0x1720c6a4
  4240f8:	inc    eax
  4240f9:	cli    
  4240fa:	add    BYTE PTR [eax-0x605c04c2],al
  424100:	mov    ds:0xf0f8cc87,eax
  424105:	arpl   WORD PTR [edi+0x16],sp
  424108:	push   eax
  424109:	adc    eax,0xd8c4b9be
  42410e:	out    dx,al
  42410f:	retf   
  424110:	add    BYTE PTR [edi+0x76],dl
  424113:	mov    bh,0x59
  424115:	js     0x424142
  424117:	dec    esp
  424118:	add    DWORD PTR [ecx+0x6],esi
  42411b:	cmp    cl,BYTE PTR [esi]
  42411d:	aaa    
  42411e:	in     al,0xa8
  424120:	jns    0x42413a
  424122:	imul   DWORD PTR [edx-0x439f53a2]
  424128:	enter  0x940e,0x93
  42412c:	mov    al,0x51
  42412e:	xchg   BYTE PTR [ebx-0x5614030f],cl
  424134:	xor    BYTE PTR [edi-0x295c542f],0xb7
  42413b:	lods   al,BYTE PTR ds:[esi]
  42413c:	cli    
  42413d:	sbb    ebx,DWORD PTR [eax+0x11]
  424140:	pop    esi
  424141:	sub    ecx,DWORD PTR [ebx+0x6124b494]
  424147:	inc    ebx
  424148:	dec    esp
  424149:	clc    
  42414a:	adc    edi,ecx
  42414c:	frstor [esi+0x8785d3]
  424152:	stos   DWORD PTR es:[edi],eax
  424153:	xlat   BYTE PTR ds:[ebx]
  424154:	js     0x4240e0
  424156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424157:	jmp    FWORD PTR [eax]
  424159:	and    BYTE PTR [edi-0x64b2ae8e],ah
  42415f:	aaa    
  424160:	repnz mov esp,0xa0e4d3aa
  424166:	add    al,0x47
  424168:	mov    cl,0xe4
  42416a:	into   
  42416b:	and    al,0xeb
  42416d:	cwde   
  42416e:	jnp    0x424123
  424170:	fisubr WORD PTR [edx]
  424172:	pop    ds
  424173:	fstp   QWORD PTR [ebx]
  424175:	popf   
  424176:	es jno 0x42412a
  424179:	inc    ebx
  42417a:	ins    DWORD PTR es:[edi],dx
  42417b:	cmp    ch,dh
  42417d:	jnp    0x4241e4
  42417f:	mov    al,0x80
  424181:	(bad)  
  424182:	sbb    dh,dh
  424184:	test   DWORD PTR [edi+ebx*1-0x12d17866],ebp
  42418b:	stos   BYTE PTR es:[edi],al
  42418c:	cmp    eax,0x9b0e228
  424191:	push   ebx
  424192:	ja     0x424177
  424194:	test   DWORD PTR [esi+0xc],ebx
  424197:	(bad)  
  424199:	push   ecx
  42419a:	in     eax,0x61
  42419c:	dec    ecx
  42419d:	adc    cl,bh
  42419f:	stos   DWORD PTR es:[edi],eax
  4241a0:	mov    dl,bl
  4241a2:	jg     0x4241c1
  4241a4:	bswap  edi
  4241a6:	jmp    0x8802def6
  4241ab:	pusha  
  4241ac:	sbb    eax,0x228b9c30
  4241b1:	lahf   
  4241b2:	icebp  
  4241b3:	xor    DWORD PTR [esi+0x2d4019f1],0x34
  4241ba:	cmp    DWORD PTR [esi+ebp*2],ebp
  4241bd:	and    ah,BYTE PTR [edi+edx*1]
  4241c0:	xchg   ebp,eax
  4241c1:	aam    0x41
  4241c3:	and    edx,DWORD PTR [eax+edi*4+0xc5841ad]
  4241ca:	sub    WORD PTR es:[ebx+0x6e16137],di
  4241d2:	and    dl,0xe4
  4241d5:	mov    edi,0x35072ef
  4241da:	push   cs
  4241db:	jnp    0x4241a1
  4241dd:	jmp    0xa5ad:0x7e14b17c
  4241e4:	or     eax,0xf115592d
  4241e9:	cmp    eax,0x282cda7d
  4241ee:	dec    edi
  4241ef:	xlat   BYTE PTR ds:[ebx]
  4241f0:	scas   al,BYTE PTR es:[edi]
  4241f1:	cmp    edx,DWORD PTR [esi-0x66490f52]
  4241f7:	jo     0x424239
  4241f9:	push   es
  4241fa:	cwde   
  4241fb:	sbb    edx,edi
  4241fd:	inc    eax
  4241fe:	jae    0x424229
  424200:	popf   
  424201:	fbstp  TBYTE PTR [eax]
  424203:	mov    BYTE PTR [esi-0x6c2c9e9f],bl
  424209:	add    DWORD PTR [edi+0x6f800023],edx
  42420f:	(bad)  
  424210:	sub    eax,0x107a1b44
  424215:	xchg   edx,eax
  424216:	in     al,0x7d
  424218:	push   ss
  424219:	push   0x35c90e5e
  42421e:	sbb    BYTE PTR [edi+0x4fceb849],ah
  424224:	fstp   TBYTE PTR [edi-0x2a]
  424227:	icebp  
  424228:	shr    BYTE PTR [esi],0xbc
  42422b:	loopne 0x424260
  42422d:	and    ch,BYTE PTR [esi]
  42422f:	push   ecx
  424230:	pop    es
  424231:	retf   0x5336
  424234:	je     0x42422f
  424236:	inc    ebx
  424237:	shr    edi,0x22
  42423a:	jbe    0x4241fd
  42423c:	pushf  
  42423d:	jmp    0xed82:0x1c849387
  424244:	mov    ch,0x9b
  424246:	add    edi,DWORD PTR ds:0x29f27e5d
  42424c:	inc    esp
  42424d:	cmp    al,0x67
  42424f:	aad    0x16
  424251:	pop    edx
  424252:	test   DWORD PTR [ecx-0x9],ecx
  424255:	out    dx,eax
  424256:	pop    es
	...
  42425f:	add    BYTE PTR [eax],al
  424261:	mul    ebp
  424263:	lahf   
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi-0x7e17ded4],1
  42426f:	cwde   
  424270:	(bad)  
  424271:	lahf   
  424272:	mov    edx,0x3ae0001
  424277:	add    BYTE PTR [eax],al
  424279:	repnz or ecx,ecx
  42427c:	xchg   BYTE PTR [ecx],ch
  42427e:	fist   DWORD PTR [edi]
  424280:	lea    ecx,[ecx+0x26169fbc]
  424286:	outs   dx,BYTE PTR ds:[esi]
  424287:	add    DWORD PTR [ecx],ecx
  424289:	rol    DWORD PTR [esi*1+0x6b7ee556],0xc0
  424291:	sahf   
  424292:	enter  0x4bf2,0x6c
  424296:	adc    BYTE PTR [eax+0x23efa832],ah
  42429c:	sub    esp,DWORD PTR [ecx]
  42429e:	or     DWORD PTR [esi],ebp
  4242a0:	mov    ds:0xab866b4e,al
  4242a5:	mov    bl,0xf5
  4242a7:	mov    BYTE PTR [ecx],cl
  4242a9:	mov    eax,0x968bc9e3
  4242ae:	es add bh,dh
  4242b1:	push   ss
  4242b2:	in     al,dx
  4242b3:	test   BYTE PTR [eax],dl
  4242b5:	push   esi
  4242b6:	push   edx
  4242b7:	mov    ah,0x69
  4242b9:	je     0x424254
  4242bb:	shl    DWORD PTR [edi],0x2f
  4242be:	dec    ebp
  4242bf:	shl    DWORD PTR [eax+0x4e],0x86
  4242c3:	(bad)  
  4242c4:	dec    esp
  4242c5:	mov    BYTE PTR [edx],dl
  4242c7:	aad    0x78
  4242c9:	push   cs
  4242ca:	stc    
  4242cb:	cmp    edx,ecx
  4242cd:	pop    ebp
  4242ce:	daa    
  4242cf:	mov    dl,0x61
  4242d1:	enter  0x430d,0xf4
  4242d5:	mov    eax,0x8438d011
  4242da:	les    esi,FWORD PTR [ecx+0x58450d81]
  4242e0:	dec    esp
  4242e1:	lahf   
  4242e2:	ds call 0x4dae:0x213ea6cc
  4242ea:	mov    DWORD PTR [eax+0x1b],edi
  4242ed:	fwait
  4242ee:	pop    esi
  4242ef:	mov    bl,0xe4
  4242f1:	add    eax,0x4db22d8f
  4242f6:	dec    edx
  4242f7:	sar    esi,0xfe
  4242fa:	pop    ecx
  4242fb:	lea    ebp,[ebx-0x3fc63233]
  424301:	pop    ds
  424302:	lds    esp,FWORD PTR [esi+0x7d7de834]
  424308:	xchg   ebx,eax
  424309:	dec    al
  42430b:	int3   
  42430c:	stos   BYTE PTR es:[edi],al
  42430d:	lock fistp QWORD PTR [edx+0x661988b6]
  424314:	ja     0x4242a4
  424316:	aam    0xfa
  424318:	add    dh,BYTE PTR [ecx]
  42431a:	mov    esp,0x8a9a7bb1
  42431f:	fimul  WORD PTR [edi]
  424321:	push   esi
  424322:	rol    ah,cl
  424324:	shr    DWORD PTR [edx+0x73],0x15
  424328:	ror    BYTE PTR [esi-0x45],1
  42432b:	sbb    al,BYTE PTR [ecx]
  42432d:	or     eax,0xd9e380f5
  424332:	lea    eax,[esi]
  424334:	leave  
  424335:	test   DWORD PTR [edi-0x78],esp
  424338:	stos   DWORD PTR es:[edi],eax
  424339:	arpl   WORD PTR [edx],bx
  42433b:	cli    
  42433c:	inc    ecx
  42433d:	inc    esp
  42433e:	iret   
  42433f:	stos   DWORD PTR es:[edi],eax
  424340:	in     al,dx
  424341:	push   0x326fb2e4
  424346:	xor    eax,0x28a7b3cb
  42434b:	repz dec eax
  42434d:	dec    edi
  42434e:	aam    0x1e
  424350:	aam    0x28
  424352:	sti    
  424353:	inc    esp
  424354:	ret    
  424355:	icebp  
  424356:	gs (bad) 
  424358:	in     al,dx
  424359:	xor    BYTE PTR [esi+0x4f],ch
  42435c:	or     ah,dh
  42435e:	popa   
  42435f:	and    edx,ebp
  424361:	imul   eax,DWORD PTR [edi-0x31],0x56edccf0
  424368:	rol    DWORD PTR [edx],0xb
  42436b:	pusha  
  42436c:	push   es
  42436d:	and    esi,esi
  42436f:	cmp    eax,0xc081fcd8
  424374:	mov    esi,0x671bc9cd
  424379:	fisubr WORD PTR [esi-0xa1f4795]
  42437f:	gs out dx,eax
  424381:	add    al,0x78
  424383:	cmp    bh,BYTE PTR [edx]
  424385:	stc    
  424386:	xor    dh,al
  424388:	leave  
  424389:	aas    
  42438a:	cwde   
  42438b:	xor    ch,dh
  42438d:	cli    
  42438e:	or     DWORD PTR [ebx],0xedb16ce5
  424394:	xor    ecx,ebp
  424396:	push   eax
  424397:	add    al,0xa9
  424399:	mov    ebp,0x6eb2858b
  42439e:	loope  0x424366
  4243a0:	jp     0x4243c7
  4243a2:	(bad)  
  4243a3:	test   dh,bl
  4243a5:	jmp    0x424423
  4243a7:	into   
  4243a8:	pop    edi
  4243a9:	mov    edi,es
  4243ab:	ret    
  4243ac:	iret   
  4243ad:	sbb    ch,BYTE PTR [eax-0x5b]
  4243b0:	or     bh,ah
  4243b2:	push   ebp
  4243b3:	and    eax,DWORD PTR [esi-0x60c5d457]
  4243b9:	scas   eax,DWORD PTR es:[edi]
  4243ba:	push   ecx
  4243bb:	sub    al,0x8f
  4243bd:	sbb    BYTE PTR [ebp+0x3],0xb7
  4243c1:	(bad)  
  4243c2:	test   DWORD PTR [esi],ebx
  4243c4:	nop
  4243c5:	xor    ecx,eax
  4243c7:	je     0x4243bd
  4243c9:	xchg   DWORD PTR [edi],ebx
  4243cb:	retf   0xaf2
  4243ce:	ins    BYTE PTR es:[edi],dx
  4243cf:	xchg   esi,eax
  4243d0:	test   bl,dl
  4243d2:	stos   DWORD PTR es:[di],eax
  4243d4:	loope  0x424446
  4243d6:	cwde   
  4243d7:	mov    ecx,0xc0a57cc9
  4243dc:	or     al,0xf1
  4243de:	hlt    
  4243df:	pop    ebx
  4243e0:	mov    esp,0x33e8278c
  4243e5:	jmp    0x42441c
  4243e7:	sbb    bh,dh
  4243e9:	push   0xfdf26b1a
  4243ee:	dec    edx
  4243ef:	sbb    DWORD PTR [edi+edi*8-0x5e06b79],0x19
  4243f7:	adc    eax,0xd94e4829
  4243fc:	xchg   esi,eax
  4243fd:	jecxz  0x42438c
  4243ff:	test   DWORD PTR [esi-0x6],ebx
  424402:	cmc    
  424403:	xchg   ebx,eax
  424404:	call   0x7aed:0x7e84f8e0
  42440b:	cwde   
  42440c:	repz sti 
  42440e:	add    dl,BYTE PTR [esi-0x30]
  424411:	adc    DWORD PTR [ebx+ebp*2],0x57
  424415:	push   es
  424416:	mov    esp,0x7fb2ee80
  42441b:	lds    edi,FWORD PTR [ebp-0x624e5220]
  424421:	test   BYTE PTR [ecx],dl
  424423:	push   eax
  424424:	jmp    0x2a5409a6
  424429:	pop    es
  42442a:	stc    
  42442b:	push   ebx
  42442c:	push   edi
  42442d:	sub    al,0xe
  42442f:	jnp    0x4244b0
  424431:	jnp    0x4243f7
  424433:	retf   
  424434:	pop    eax
  424435:	mov    bl,0xa0
  424437:	dec    esp
  424438:	push   ebp
  424439:	dec    ebx
  42443a:	jnp    0x4244a7
  42443c:	mov    ds:0xa2ea6d22,al
  424441:	ret    0xa805
  424444:	xchg   edi,eax
  424445:	inc    ebx
  424446:	leave  
  424447:	mov    dh,0x95
  424449:	pop    ss
  42444a:	cmp    eax,0xddc8990b
  42444f:	adc    BYTE PTR [esi+0x18bdf4cc],ah
  424455:	xchg   edi,eax
  424456:	js     0x4243ff
  424458:	mov    bl,0x8
  42445a:	pop    ebx
  42445b:	scas   al,BYTE PTR es:[edi]
  42445c:	mov    dh,0x30
  42445e:	cmp    eax,0x75b384ed
  424463:	call   0xf864:0x27b71f62
  42446a:	into   
  42446b:	repz ficom DWORD PTR [edi-0x66]
  42446f:	sbb    BYTE PTR [esi+0x4],dl
  424472:	das    
  424473:	mov    ah,0xd1
  424475:	fst    QWORD PTR [ebx+ebx*1+0xe]
  424479:	dec    edi
  42447a:	dec    ax
  42447c:	aam    0x14
  42447e:	ffreep st(5)
  424480:	adc    eax,0xb1a45383
  424485:	loop   0x424436
  424487:	xor    al,0x55
  424489:	sti    
  42448a:	adc    BYTE PTR [ebx+ebp*2-0x51],ch
  42448e:	jg     0x424479
  424490:	sbb    dh,dl
  424492:	(bad)  
  424493:	cmp    eax,0x941ba3d4
  424498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424499:	cmp    eax,0xd81789d9
  42449e:	repnz clc 
  4244a0:	nop
  4244a1:	sub    eax,0x3e3fe66
  4244a6:	xlat   BYTE PTR ds:[ebx]
  4244a7:	sbb    ah,BYTE PTR [eax]
  4244a9:	jmp    0x268dfd9a
  4244ae:	mov    eax,0xcc09208b
  4244b3:	sub    eax,ebp
  4244b5:	xor    ecx,ebx
  4244b7:	outs   dx,DWORD PTR ds:[esi]
  4244b8:	mov    ebx,0xe9d6ab5b
  4244bd:	jb     0x424473
  4244bf:	addr16 inc eax
  4244c1:	(bad)  
  4244c2:	push   ebx
  4244c3:	and    ecx,DWORD PTR [esi-0x31]
  4244c6:	test   eax,0x47ac78b7
  4244cb:	or     eax,0x600f8970
  4244d0:	dec    esp
  4244d1:	xchg   ecx,eax
  4244d2:	cmp    bh,ch
  4244d4:	ins    BYTE PTR es:[edi],dx
  4244d5:	inc    eax
  4244d7:	mov    edi,ss
  4244d9:	clc    
  4244da:	fisttp QWORD PTR [edi]
  4244dc:	je     0x4244bd
  4244de:	dec    ecx
  4244df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244e0:	or     ecx,esi
  4244e2:	and    eax,0x2a0842ec
  4244e7:	jl     0x424523
  4244e9:	or     bl,BYTE PTR [edi+esi*4+0x79]
  4244ed:	iret   
  4244ee:	aad    0x8e
  4244f0:	nop
  4244f1:	pop    edi
  4244f2:	ret    0xf6d0
  4244f5:	lods   al,BYTE PTR ds:[esi]
  4244f6:	cmp    al,0x50
  4244f8:	enter  0xa2d0,0x11
  4244fc:	or     eax,0xd44ad9ab
  424501:	lock lds ebx,FWORD PTR [ecx-0x3b675ba6]
  424508:	sub    eax,0x4a9a29f0
  42450d:	lahf   
  42450e:	out    dx,eax
  42450f:	sahf   
  424510:	shl    BYTE PTR gs:[esi+edx*8],cl
  424514:	mov    ecx,0x39731f3f
  424519:	mov    al,0xeb
  42451b:	or     dh,BYTE PTR [esi+0x8954504]
  424521:	xor    al,0xb2
  424523:	jo     0x42459a
  424525:	les    esi,FWORD PTR [ecx+0x40]
  424528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424529:	call   0x6ced:0xce594d31
  424530:	popf   
  424531:	repnz cmp al,0x3
  424534:	aas    
  424535:	retf   
  424536:	jecxz  0x424548
  424538:	pop    ebx
  424539:	in     al,dx
  42453a:	add    eax,0x3b2bca0e
  42453f:	mov    bh,0x4
  424541:	xchg   edx,eax
  424542:	xlat   BYTE PTR ds:[ebx]
  424543:	and    BYTE PTR [edx-0x2862b505],dh
  424549:	push   ds
  42454a:	lods   eax,DWORD PTR ds:[esi]
  42454b:	xchg   esi,eax
  42454c:	pusha  
  42454d:	cs add dl,BYTE PTR cs:[esi-0x6e58515a]
  424555:	xor    edi,DWORD PTR [eax+ecx*8+0x1ef0fd22]
  42455c:	gs in  eax,dx
  42455e:	sub    ah,BYTE PTR [ebp+0x128b68d5]
  424564:	and    ecx,DWORD PTR [edi]
  424566:	loopne 0x42459e
  424568:	es (bad) 
  42456b:	retf   
  42456c:	dec    edi
  42456d:	(bad)  
  42456e:	lds    ebx,FWORD PTR [ebp-0x74d75cba]
  424574:	jb     0x4245dd
  424576:	adc    eax,0x74fb18fc
  42457b:	clc    
  42457c:	jl     0x4245fb
  42457e:	dec    ebp
  42457f:	push   edi
  424580:	jns    0x424527
  424582:	push   ss
  424583:	loopne 0x42459b
  424585:	std    
  424586:	jg     0x4245b4
  424588:	push   ebp
  424589:	(bad)  
  42458a:	mov    ah,0xc
  42458c:	int    0xa7
  42458e:	fstp   QWORD PTR [eax-0x79]
  424591:	aam    0x97
  424593:	mov    ch,0x47
  424595:	jmp    0x424569
  424597:	(bad)  
  424598:	ret    
  424599:	sub    bh,dh
  42459b:	shl    BYTE PTR [edx-0x4d6fb51b],cl
  4245a1:	(bad)  
  4245a2:	adc    dl,BYTE PTR ss:[eax]
  4245a5:	jne    0x424587
  4245a7:	arpl   WORD PTR [edx+0x5c],ax
  4245aa:	cmc    
  4245ab:	mov    ecx,0x744766ea
  4245b0:	rep lods al,BYTE PTR ds:[esi]
  4245b2:	and    esi,DWORD PTR [eax]
  4245b4:	aaa    
  4245b5:	jge    0x424577
  4245b7:	nop
  4245b8:	cdq    
  4245b9:	sti    
  4245ba:	inc    eax
  4245bb:	leave  
  4245bc:	sbb    bh,bh
  4245be:	sub    DWORD PTR [esi-0x260b1c8],0xf8af3660
  4245c8:	fldenv [eax+0x4b]
  4245cb:	cdq    
  4245cc:	ja     0x4245c5
  4245ce:	mov    ebp,0x619140d9
  4245d3:	repnz add DWORD PTR [eax+0x385ed108],ebx
  4245da:	sbb    eax,0xfc244783
  4245df:	fwait
  4245e0:	xor    eax,0xcd26ae16
  4245e5:	pop    esp
  4245e6:	cmp    bl,bh
  4245e8:	popa   
  4245e9:	loop   0x42460c
  4245eb:	xor    DWORD PTR [edi+esi*1+0x79],eax
  4245ef:	mov    edi,0xb3137ce9
  4245f4:	test   BYTE PTR [esi+0x5ecf0393],cl
  4245fa:	xlat   BYTE PTR ds:[ebx]
  4245fb:	dec    esp
  4245fc:	int3   
  4245fd:	int3   
  4245fe:	std    
  4245ff:	aas    
  424600:	fisttp QWORD PTR [ebx]
  424602:	cmp    DWORD PTR [ebx-0x7a],ebp
  424605:	stos   DWORD PTR es:[edi],eax
  424606:	shl    DWORD PTR [ecx+0x7faa1e94],1
  42460c:	dec    ebx
  42460d:	sahf   
  42460e:	jp     0x42465c
  424610:	popa   
  424611:	pop    ebp
  424612:	add    al,al
  424614:	pop    ecx
  424615:	outs   dx,DWORD PTR ds:[esi]
  424616:	pop    ebx
  424617:	sbb    BYTE PTR [esi+0x63],dl
  42461a:	sbb    DWORD PTR [esi+0x33],ebp
  42461d:	pop    edx
  42461e:	mov    eax,ds:0xa06f2fb0
  424623:	ret    
  424624:	scas   eax,DWORD PTR es:[edi]
  424625:	sbb    eax,0xe8
  42462a:	add    BYTE PTR [eax],al
  42462c:	add    BYTE PTR [eax],al
  42462e:	add    BYTE PTR [eax],al
  424630:	add    BYTE PTR [ebx-0x71],ch
  424633:	mov    bh,BYTE PTR [esi+ebp*8+0x7d]
  424637:	call   FWORD PTR [edi+0x4fc17c56]
  42463d:	xor    al,0xdd
  42463f:	cmc    
  424640:	jmp    0x3ae:0x1be4d
  424647:	add    BYTE PTR [eax],al
  424649:	jmp    0xb311:0x69dba4f2
  424650:	pop    esi
  424651:	sbb    cl,BYTE PTR [edi+0x7c]
  424654:	add    al,0x2f
  424656:	xchg   bh,cl
  424658:	ror    BYTE PTR ds:0x1e91fb64,0xc5
  42465f:	cmp    DWORD PTR [bp+si-0xa],edi
  424663:	je     0x424639
  424665:	or     eax,0x38b2cfac
  42466a:	call   ebp
  42466c:	test   eax,0x68219fa6
  424671:	or     al,0x5e
  424673:	fs xchg edx,eax
  424675:	xor    eax,0xccb80222
  42467a:	and    bl,BYTE PTR [ecx-0x5f2daa40]
  424680:	jne    0x42460e
  424682:	je     0x424648
  424684:	xchg   ebp,eax
  424685:	imul   edi,DWORD PTR [edx-0x29],0x66
  424689:	ss jge 0x42461c
  42468c:	das    
  42468d:	pop    ecx
  42468e:	(bad)  
  42468f:	cmp    edx,edx
  424691:	sbb    edx,DWORD PTR [edi-0x3c2a236c]
  424697:	call   0x7ec2ec45
  42469c:	lds    edi,FWORD PTR [ecx]
  42469e:	popf   
  42469f:	pop    esi
  4246a0:	mov    dl,BYTE PTR [edi-0x650e160c]
  4246a6:	pop    ss
  4246a7:	psubusw mm4,QWORD PTR [edi]
  4246aa:	jne    0x424688
  4246ac:	adc    ebx,DWORD PTR [ecx]
  4246ae:	lahf   
  4246af:	jo     0x4246c0
  4246b1:	scas   al,BYTE PTR es:[di]
  4246b3:	pop    ebp
  4246b4:	jle    0x42465b
  4246b6:	ss loope 0x42465c
  4246b9:	dec    ebx
  4246ba:	ror    DWORD PTR [ecx],0xe3
  4246bd:	aad    0x86
  4246bf:	push   0x76
  4246c1:	lahf   
  4246c2:	jp     0x4246ac
  4246c4:	push   0x9e14c510
  4246c9:	dec    esi
  4246ca:	ins    BYTE PTR es:[edi],dx
  4246cb:	add    esi,DWORD PTR [ebx-0x3bfdd177]
  4246d1:	jnp    0x424721
  4246d3:	js     0x424698
  4246d5:	and    eax,0x53a706b6
  4246da:	js     0x424748
  4246dc:	inc    eax
  4246dd:	rol    BYTE PTR [edx+0x75],1
  4246e0:	je     0x4246ae
  4246e2:	ins    BYTE PTR es:[edi],dx
  4246e3:	xchg   edi,eax
  4246e4:	outs   dx,BYTE PTR ds:[esi]
  4246e5:	cmp    BYTE PTR [eax+0x7f09c186],bh
  4246eb:	in     al,dx
  4246ec:	call   0x9fc1:0xd56ea800
  4246f3:	fisttp QWORD PTR [edi]
  4246f5:	mov    al,ds:0x6aaba3b0
  4246fa:	fiadd  DWORD PTR [edi-0x532ee6ba]
  424700:	je     0x4246d7
  424702:	fsubp  st(3),st
  424704:	jbe    0x424767
  424706:	pop    ecx
  424707:	imul   ebx,DWORD PTR [edi+eax*8-0x80],0x5fcb0c00
  42470f:	stos   BYTE PTR es:[edi],al
  424710:	adc    al,BYTE PTR [edx+0x614b276c]
  424716:	out    0x7e,eax
  424718:	cmp    cl,BYTE PTR [edi+0x46]
  42471b:	(bad)  [ebx+edi*4-0x54]
  42471f:	jnp    0x42473e
  424721:	pop    ebx
  424722:	mov    cl,0xa3
  424724:	xor    eax,0xa5e31c4e
  424729:	daa    
  42472a:	lods   eax,DWORD PTR gs:[esi]
  42472c:	mov    al,0xd3
  42472e:	mov    eax,0x34b3bf17
  424733:	mov    edi,0x899f6cc7
  424738:	popa   
  424739:	retf   0x75e2
  42473c:	jb     0x424731
  42473e:	adc    al,bh
  424740:	rcr    ecx,0x4b
  424743:	xlat   BYTE PTR ds:[ebx]
  424744:	mov    al,BYTE PTR [eax-0x1a]
  424747:	sub    ch,BYTE PTR [edx]
  424749:	inc    esi
  42474a:	inc    ebp
  42474b:	pop    ss
  42474c:	(bad)  [esi+0x21cb993e]
  424752:	cli    
  424753:	aaa    
  424754:	jp     0x424783
  424756:	cld    
  424757:	clc    
  424758:	jp     0x4246ed
  42475a:	push   esi
  42475b:	dec    edx
  42475c:	mov    al,0x9c
  42475e:	add    al,0x26
  424760:	xlat   BYTE PTR ds:[ebx]
  424761:	outs   dx,BYTE PTR ds:[esi]
  424762:	pop    ebx
  424763:	fnstsw WORD PTR [esi+0x7826e2ac]
  424769:	jmp    0x424700
  42476b:	loop   0x424754
  42476d:	clc    
  42476e:	jnp    0x4246f4
  424770:	cmp    eax,DWORD PTR [eax-0x9]
  424773:	daa    
  424774:	aad    0xd
  424776:	ja     0x424710
  424778:	add    BYTE PTR [edi+0x39],dh
  42477b:	lock (bad) 
  42477d:	(bad)  
  42477e:	test   eax,0x87692adf
  424783:	es stc 
  424785:	sub    al,0x36
  424787:	adc    bl,dh
  424789:	jo     0x4247db
  42478b:	faddp  st(5),st
  42478d:	pop    eax
  42478e:	mov    WORD PTR [edx],cs
  424790:	pop    es
  424791:	jge    0x4247b5
  424793:	pop    esi
  424794:	std    
  424795:	in     al,dx
  424796:	(bad)  [esi+0x56]
  424799:	inc    eax
  42479a:	aam    0xdc
  42479c:	lock inc ecx
  42479e:	cdq    
  42479f:	add    cl,BYTE PTR [edi]
  4247a1:	jge    0x42481c
  4247a3:	ret    0xefbc
  4247a6:	jmp    0x6a0955bd
  4247ab:	(bad)  
  4247ac:	out    dx,eax
  4247ad:	push   edi
  4247ae:	xchg   esi,eax
  4247b0:	mov    ebp,0x65e21868
  4247b5:	adc    ah,dl
  4247b7:	cmp    edx,DWORD PTR ds:0x54c3d2f0
  4247bd:	pop    esi
  4247be:	push   cs
  4247bf:	xchg   DWORD PTR [ebx-0x4d],ebx
  4247c2:	dec    edi
  4247c3:	mov    ds:0xa4086014,eax
  4247c8:	and    eax,0x8789968d
  4247cd:	sar    BYTE PTR [esi+0x17f3f565],cl
  4247d3:	fdiv   QWORD PTR [ebx]
  4247d5:	jle    0x4247c0
  4247d7:	pop    ebp
  4247d8:	adc    cl,BYTE PTR [eax+0x2df441f3]
  4247de:	int3   
  4247df:	std    
  4247e0:	sub    al,0x32
  4247e2:	adc    BYTE PTR [edx],dh
  4247e4:	mov    edi,0xf1f38c8d
  4247e9:	rcl    DWORD PTR [ecx-0x4e5ea4f6],1
  4247ef:	aas    
  4247f0:	or     esi,ebx
  4247f2:	pop    es
  4247f3:	jns    0x424830
  4247f5:	pop    ds
  4247f6:	mov    WORD PTR [ebx+ebx*8-0x412dae65],?
  4247fd:	out    dx,al
  4247fe:	xchg   DWORD PTR [ebp+0xb],edx
  424801:	cmp    DWORD PTR [ebp-0x436b05c3],esi
  424807:	stc    
  424808:	cdq    
  424809:	mov    ebx,0xb2075ad6
  42480e:	loopne 0x4247cf
  424810:	repnz retf 0x17a2
  424814:	daa    
  424815:	jp     0x42485e
  424817:	sbb    DWORD PTR [edx-0x7c6fc52],esp
  42481d:	fmulp  st(1),st
  42481f:	mov    al,0x6
  424821:	sub    DWORD PTR [ebx+0x37738771],ecx
  424827:	in     eax,dx
  424828:	sub    eax,0xf5f9d935
  42482e:	sub    eax,0x4ebad9be
  424833:	or     esi,DWORD PTR [ebp+0x480f8398]
  424839:	(bad)  
  42483a:	das    
  42483b:	mov    ds:0xa8db81ac,eax
  424840:	jle    0x4247d0
  424842:	out    dx,eax
  424843:	inc    eax
  424844:	nop
  424845:	inc    edi
  424846:	xchg   DWORD PTR [ecx],ecx
  424848:	lock sahf 
  42484a:	test   al,0x4c
  42484c:	xor    bl,BYTE PTR [edi-0x24]
  42484f:	or     DWORD PTR [eax-0x202e7f4e],0xa26987ca
  424859:	fbstp  TBYTE PTR [esi+0x61c8d737]
  42485f:	pop    ecx
  424860:	xchg   edi,eax
  424861:	pop    edi
  424862:	xchg   esp,eax
  424863:	xchg   esi,eax
  424864:	cwde   
  424865:	and    eax,0xad3aa077
  42486a:	mov    eax,ds:0x70499533
  42486f:	sar    DWORD PTR [ecx+ebp*8-0x3703519f],0x69
  424877:	call   0x325b:0x30091b66
  42487e:	ins    DWORD PTR es:[edi],dx
  42487f:	lea    esp,[edx+0x34]
  424882:	xor    BYTE PTR [edx],bl
  424884:	sub    eax,0x2c7ece38
  424889:	clc    
  42488a:	cli    
  42488b:	(bad)  
  42488d:	idiv   BYTE PTR [eax+0x61]
  424890:	jbe    0x4248d1
  424892:	inc    ebx
  424893:	sub    eax,0xda5c1114
  424898:	lods   al,BYTE PTR ds:[esi]
  424899:	sbb    al,0x7d
  42489b:	xchg   ebp,eax
  42489c:	mov    bh,BYTE PTR [ebx]
  42489e:	in     eax,0x9d
  4248a0:	in     eax,dx
  4248a1:	mov    esi,0x5df1878a
  4248a6:	xor    BYTE PTR [ebp+0x3a],ah
  4248a9:	sbb    ecx,DWORD PTR [ecx]
  4248ab:	in     eax,dx
  4248ac:	nop
  4248ad:	retf   
  4248ae:	cmp    eax,0xfb2f2ab
  4248b3:	ss es out dx,al
  4248b6:	aam    0x36
  4248b8:	push   ebp
  4248b9:	dec    esi
  4248ba:	scas   eax,DWORD PTR es:[edi]
  4248bb:	add    BYTE PTR [ecx+0x7afe2315],ch
  4248c1:	mov    DWORD PTR [esp+ebp*4+0x4a],eax
  4248c5:	sbb    BYTE PTR [edx],dl
  4248c7:	(bad)  
  4248c8:	out    0xd1,al
  4248ca:	fcom   DWORD PTR [ebp+0x5dd14a55]
  4248d0:	or     al,0x27
  4248d2:	jno    0x4248f7
  4248d4:	jmp    0x6077:0x895ff330
  4248db:	sub    cl,BYTE PTR [edx+ecx*4-0x3ae07451]
  4248e2:	int3   
  4248e3:	push   0x4f
  4248e5:	mov    dl,BYTE PTR [edi-0x1b9af568]
  4248eb:	or     BYTE PTR [ecx-0x58],ch
  4248ee:	adc    ch,BYTE PTR gs:[ecx-0x59]
  4248f2:	pop    eax
  4248f3:	mov    esi,0x5c816600
  4248f8:	pusha  
  4248f9:	jnp    0x424925
  4248fb:	ficomp DWORD PTR [ebx]
  4248fd:	(bad)  
  4248fe:	sub    al,0xcd
  424900:	inc    esp
  424901:	pushf  
  424902:	ror    edi,0x85
  424905:	fisttp QWORD PTR [ebx-0x5e]
  424908:	xchg   BYTE PTR [eax-0x2585c8d1],al
  42490e:	sub    al,BYTE PTR [edi+0x4ca08206]
  424914:	jg     0x424947
  424916:	shl    DWORD PTR [ebx+ecx*2+0x23],cl
  42491a:	and    al,0x76
  42491c:	cli    
  42491d:	lahf   
  42491e:	dec    esp
  42491f:	test   eax,0x9b39527c
  424924:	mov    eax,ds:0x81a50fee
  424929:	sub    BYTE PTR [ebp+0x5f5b336b],cl
  42492f:	adc    eax,0xbd562674
  424934:	ds mov dl,0x70
  424937:	adc    eax,0x76e8c9e6
  42493c:	sbb    eax,0x7bc34e8c
  424941:	nop
  424942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424944:	adc    BYTE PTR [ebx-0x5c],al
  424947:	outs   dx,BYTE PTR ds:[esi]
  424948:	cmp    eax,0x87c7729d
  42494d:	push   edx
  42494e:	out    0x7d,al
  424950:	(bad)  
  424951:	out    dx,eax
  424952:	mov    ecx,0x5d3111c6
  424957:	gs jno 0x4249c4
  42495a:	daa    
  42495b:	out    dx,eax
  42495c:	sub    al,0x48
  42495e:	mov    ds:0x6b3d8a79,al
  424963:	ins    DWORD PTR es:[edi],dx
  424964:	ficomp DWORD PTR [esi-0x4fbeb177]
  42496a:	test   ecx,ebx
  42496c:	fisubr DWORD PTR [ebx]
  42496e:	(bad)  
  42496f:	xchg   DWORD PTR [eax],eax
  424971:	stc    
  424972:	mov    edx,0x66a5fd83
  424977:	es jnp 0x4249a2
  42497a:	push   ebp
  42497b:	dec    ebp
  42497c:	jmp    0x424954
  42497e:	pop    ebp
  42497f:	sbb    ch,BYTE PTR [edx-0x4f024346]
  424985:	mov    ecx,0xbb211e3d
  42498a:	dec    esi
  42498b:	jne    0x42496d
  42498d:	xchg   ebp,eax
  42498e:	int3   
  42498f:	and    edi,DWORD PTR [ebp-0x45152ecc]
  424995:	ret    
  424996:	pop    ds
  424997:	mov    ds:0x8406e705,al
  42499c:	and    edi,ecx
  42499e:	call   0xa5de5afe
  4249a3:	ins    BYTE PTR es:[edi],dx
  4249a4:	and    DWORD PTR [eax],ecx
  4249a6:	cmp    al,BYTE PTR ds:0x52db7481
  4249ac:	das    
  4249ad:	mov    ds:0xc06fbce9,al
  4249b2:	sbb    bh,bl
  4249b4:	inc    edx
  4249b5:	dec    edx
  4249b6:	xlat   BYTE PTR ds:[ebx]
  4249b7:	pop    es
  4249b8:	adc    al,0x67
  4249ba:	jno    0x4249c1
  4249bc:	jmp    0x829b676f
  4249c1:	inc    esp
  4249c2:	popf   
  4249c3:	mov    esp,0x661d0a5f
  4249c8:	daa    
  4249c9:	in     al,dx
  4249ca:	(bad)  
  4249ce:	vpsubusb ymm1,ymm0,YMMWORD PTR [edi-0x1d]
  4249d3:	repz jecxz 0x4249b3
  4249d6:	jmp    FWORD PTR [esi+0x1c89fe90]
  4249dc:	in     eax,0xca
  4249de:	inc    edi
  4249df:	mov    ds:0x56ea2cb0,eax
  4249e4:	sti    
  4249e5:	pop    ebx
  4249e6:	sbb    DWORD PTR [ecx],edi
  4249e8:	add    eax,0x835a74b6
  4249ed:	daa    
  4249ee:	popf   
  4249ef:	sub    DWORD PTR [esi],esi
  4249f1:	and    DWORD PTR ds:[edi+0x404a50],esi
	...
  424a00:	add    BYTE PTR [ebp+0x6a],dl
  424a03:	out    0xb3,al
  424a05:	(bad)  
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	gs adc eax,0xc1fb13e1
  424a13:	add    DWORD PTR [eax],eax
  424a15:	scas   al,BYTE PTR es:[edi]
  424a16:	add    eax,DWORD PTR [eax]
  424a18:	add    al,cl
  424a1a:	aas    
  424a1b:	mov    edx,0xe45671a6
  424a20:	jl     0x424a54
  424a22:	dec    esp
  424a23:	pop    es
  424a24:	loopne 0x424a12
  424a26:	jo     0x424a97
  424a28:	fdivr  DWORD PTR [edi]
  424a2a:	jmp    0xf7f2df72
  424a2f:	sahf   
  424a30:	scas   al,BYTE PTR es:[edi]
  424a31:	test   BYTE PTR [esp+esi*2],bl
  424a34:	mov    ds:0x9998139e,al
  424a39:	stos   BYTE PTR es:[edi],al
  424a3a:	and    eax,0xc1eedd58
  424a3f:	xor    eax,0xc0f1f72b
  424a44:	scas   al,BYTE PTR es:[edi]
  424a45:	mov    esi,0x67f9f434
  424a4a:	jmp    0xc72e1091
  424a4f:	es dec ebx
  424a51:	out    0xc5,eax
  424a53:	and    eax,0x2d63a06f
  424a58:	mov    dh,0x4a
  424a5a:	lock ror BYTE PTR [edi+0x5cf8ccce],0xfa
  424a62:	gs adc al,0x87
  424a65:	pusha  
  424a66:	mov    ecx,0x273eaff8
  424a6b:	xchg   edi,eax
  424a6c:	sbb    ah,BYTE PTR [esi-0x76]
  424a6f:	inc    esi
  424a70:	js     0x424a54
  424a72:	fdiv   st(6),st
  424a74:	adc    esi,DWORD PTR [ecx+ebp*1+0x403ff276]
  424a7b:	das    
  424a7c:	pop    edx
  424a7d:	js     0x424a29
  424a7f:	pop    ebp
  424a80:	xchg   edi,eax
  424a81:	in     eax,0x90
  424a83:	dec    ecx
  424a84:	add    eax,0x33f2abcb
  424a89:	jp     0x424a12
  424a8b:	into   
  424a8c:	pop    esi
  424a8d:	or     ah,BYTE PTR [edx+0x34cbff75]
  424a93:	cmp    DWORD PTR [esi+0x29],edx
  424a96:	mov    ecx,0x6737cf7a
  424a9b:	ret    0xbf71
  424a9e:	or     DWORD PTR [ebx],esp
  424aa0:	popa   
  424aa1:	inc    ebp
  424aa2:	iret   
  424aa3:	es push esp
  424aa5:	jle    0x424aea
  424aa7:	enter  0xade4,0xc8
  424aab:	pop    ss
  424aac:	push   0xe0c506f0
  424ab1:	mov    eax,ds:0x13b94a3a
  424ab6:	aam    0xfd
  424ab8:	push   fs
  424aba:	pop    ebp
  424abb:	out    dx,eax
  424abc:	dec    edx
  424abd:	test   DWORD PTR [esi],edx
  424abf:	xchg   esp,eax
  424ac0:	in     eax,0x92
  424ac2:	xor    BYTE PTR [ecx+0x68],0x1c
  424ac6:	rcr    BYTE PTR [edi+esi*1],0x6a
  424aca:	int3   
  424acb:	mov    ebx,0xb3178a4c
  424ad0:	aam    0x67
  424ad2:	stc    
  424ad3:	mov    edi,0xe5a5a467
  424ad8:	arpl   ax,dx
  424ada:	les    ebp,FWORD PTR [eax+0x12322399]
  424ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ae1:	pop    edi
  424ae2:	mov    edi,0x14531ef5
  424ae7:	pop    esi
  424ae8:	jge    0x424a86
  424aea:	mov    eax,0xd14bb79d
  424aef:	(bad)  
  424af0:	mov    BYTE PTR [ebx],al
  424af2:	sbb    bh,BYTE PTR [ebx-0x3c76abd]
  424af8:	imul   esp,eax,0x4c76ef21
  424afe:	iret   
  424aff:	test   eax,0x25dd62a0
  424b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b05:	repz out dx,al
  424b07:	jb     0x424b57
  424b09:	mov    fs,edx
  424b0b:	ficomp DWORD PTR [eax]
  424b0d:	sub    eax,0x14cc932b
  424b12:	and    edi,DWORD PTR fs:[ebp+0x1ad42f60]
  424b19:	push   edx
  424b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b1b:	mov    eax,ds:0x9c209789
  424b20:	pop    eax
  424b21:	mov    esi,0x85a5fe5b
  424b26:	fs mov esp,0x49a4f9af
  424b2c:	dec    eax
  424b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b2e:	jg     0x424b62
  424b30:	inc    eax
  424b31:	pop    es
  424b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b33:	sti    
  424b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b35:	mov    ds:0xba0128a,al
  424b3a:	and    ecx,DWORD PTR [eax]
  424b3c:	out    dx,eax
  424b3d:	in     al,dx
  424b3e:	xchg   BYTE PTR [eax-0x66],ah
  424b41:	pop    esi
  424b42:	mov    edx,0xe326ad56
  424b47:	xchg   ecx,eax
  424b48:	loopne 0x424b8a
  424b4a:	and    eax,0xaf9edd97
  424b4f:	push   cs
  424b50:	shl    ch,1
  424b52:	or     BYTE PTR [ecx+0x502a5618],ah
  424b58:	mov    edx,DWORD PTR [esi+0x1f]
  424b5b:	(bad)  
  424b5c:	jbe    0x424ae3
  424b5e:	xchg   ecx,eax
  424b5f:	pop    ebx
  424b60:	pop    esp
  424b61:	push   ebx
  424b62:	push   cs
  424b63:	repnz arpl WORD PTR [ebx],si
  424b66:	sub    al,0xc6
  424b68:	out    0x64,al
  424b6a:	mov    ebp,0xe272163d
  424b6f:	test   al,0x37
  424b71:	jne    0x424ba7
  424b73:	sbb    BYTE PTR [ecx-0x2569ee18],0x2b
  424b7a:	stc    
  424b7b:	rcr    eax,cl
  424b7d:	jmp    0xa6a40d57
  424b82:	push   ebp
  424b83:	in     eax,dx
  424b84:	lds    ebp,FWORD PTR [eax+edx*1-0x74]
  424b88:	pop    DWORD PTR [edi+0x748d2dc0]
  424b8e:	push   ecx
  424b8f:	push   es
  424b90:	out    0xec,al
  424b92:	sbb    eax,0x558fd8c3
  424b97:	dec    edx
  424b98:	mov    edi,0x74a2b71a
  424b9d:	mov    edx,DWORD PTR [edx+0x4cc3a58]
  424ba3:	inc    ebx
  424ba4:	hlt    
  424ba5:	fistp  DWORD PTR [esi]
  424ba7:	pop    edi
  424ba8:	retf   
  424ba9:	cli    
  424baa:	jmp    0xccc4:0xa76db181
  424bb1:	jmp    0x57369de4
  424bb6:	jne    0x424c34
  424bb8:	dec    esi
  424bb9:	mov    WORD PTR [eax],?
  424bbb:	cmp    esp,DWORD PTR [ecx-0x5cfd8b8d]
  424bc1:	adc    DWORD PTR [ebx-0x6cb8a287],ebx
  424bc7:	push   cs
  424bc8:	xchg   ecx,ecx
  424bca:	xor    eax,0x37411a71
  424bcf:	cmc    
  424bd0:	mov    bh,0x70
  424bd2:	and    eax,0x6831975c
  424bd7:	xchg   esi,eax
  424bd8:	cdq    
  424bd9:	fcomi  st,st(7)
  424bdb:	mov    bl,0x54
  424bdd:	test   al,0xca
  424bdf:	icebp  
  424be0:	push   edi
  424be1:	jl     0x424b72
  424be3:	shl    BYTE PTR [eax],cl
  424be5:	sub    eax,0x7a0bac96
  424bea:	cwde   
  424beb:	pop    ds
  424bec:	mov    ch,0x71
  424bee:	adc    eax,0x6b8b51c
  424bf3:	adc    eax,DWORD PTR [esi+0x39044611]
  424bf9:	jo     0x424c2d
  424bfb:	(bad)  [ecx-0x65886343]
  424c01:	sbb    ebp,ebp
  424c03:	jle    0x424be0
  424c05:	jmp    0x424c5b
  424c07:	dec    edi
  424c08:	xlat   BYTE PTR ds:[ebx]
  424c09:	add    bl,BYTE PTR [esi+0x375800f7]
  424c0f:	rcl    BYTE PTR [edi+eax*4+0x13],cl
  424c13:	xlat   BYTE PTR ds:[ebx]
  424c14:	jle    0x424c13
  424c16:	xchg   ebp,eax
  424c17:	fcomp  DWORD PTR [ecx-0x77ae1d32]
  424c1d:	into   
  424c1e:	not    BYTE PTR [eax+0x2a]
  424c21:	mov    edi,0xc89337ee
  424c26:	push   es
  424c27:	lods   eax,DWORD PTR ds:[esi]
  424c28:	pop    ds
  424c29:	push   ds
  424c2a:	mov    ch,0x16
  424c2c:	jmp    0x8e6a0a6a
  424c31:	push   0xffffff92
  424c33:	mov    esp,0x68d3576d
  424c38:	xlat   BYTE PTR ds:[ebx]
  424c39:	into   
  424c3a:	pop    esp
  424c3b:	shl    esp,0x25
  424c3e:	mov    cl,0x2d
  424c40:	jno    0x424c9e
  424c42:	add    BYTE PTR [eax-0x68],ch
  424c45:	or     bl,BYTE PTR [edi+0x3cd530a3]
  424c4b:	pop    ecx
  424c4c:	dec    esi
  424c4d:	aad    0x48
  424c4f:	mov    fs,WORD PTR [edi]
  424c51:	mov    fs,WORD PTR [ebp-0x3c]
  424c54:	mov    edi,0xca83fa92
  424c59:	leave  
  424c5a:	push   ebx
  424c5b:	clc    
  424c5c:	inc    eax
  424c5d:	mov    ch,0xc9
  424c5f:	sbb    eax,0xca4cd92e
  424c64:	jbe    0x424cd5
  424c66:	(bad)  
  424c67:	mov    esi,0xb825faf
  424c6c:	mov    dl,BYTE PTR [ebp+0x58]
  424c6f:	pop    es
  424c70:	xor    BYTE PTR [ebx-0x287bf17f],0x88
  424c77:	int    0xbf
  424c79:	mov    bh,0x47
  424c7b:	inc    esp
  424c7d:	dec    ebp
  424c7e:	push   0xffffff85
  424c80:	icebp  
  424c81:	adc    DWORD PTR [edi],edi
  424c83:	fst    QWORD PTR [ebp-0x3a]
  424c86:	mov    esi,0xdbe22c7e
  424c8b:	dec    esp
  424c8c:	mov    gs:0xb23705a,eax
  424c92:	ret    0xef64
  424c95:	or     ecx,DWORD PTR [edi-0x60]
  424c98:	sub    ebx,ebx
  424c9a:	mov    ds:0x6c55004a,eax
  424c9f:	xor    eax,0x13426fcd
  424ca4:	shl    BYTE PTR [eax],cl
  424ca6:	mov    bh,0x30
  424ca8:	loop   0x424ce2
  424caa:	lds    ecx,FWORD PTR [ebp+0x2e]
  424cad:	pop    ds
  424cae:	add    DWORD PTR [ecx],edx
  424cb0:	inc    ebx
  424cb1:	cmp    al,0x70
  424cb3:	cmp    cl,BYTE PTR [ebx-0x57]
  424cb6:	sbb    dh,BYTE PTR [eax-0x3717d855]
  424cbc:	push   ss
  424cbd:	fnsave [edx]
  424cbf:	arpl   WORD PTR [edx-0x745aba56],sp
  424cc5:	in     eax,dx
  424cc6:	dec    eax
  424cc7:	mov    al,0x4c
  424cc9:	xchg   bx,ax
  424ccb:	js     0x424cc4
  424ccd:	icebp  
  424cce:	sbb    al,0x23
  424cd0:	loope  0x424ce6
  424cd2:	dec    eax
  424cd3:	test   eax,0x3db617ff
  424cd8:	or     BYTE PTR [edx-0x19a56ee0],al
  424cde:	cmp    bl,ch
  424ce0:	and    al,0x16
  424ce2:	xchg   BYTE PTR [edx+0x5fefd812],cl
  424ce8:	sti    
  424ce9:	mov    BYTE PTR [ebx+0x2d],0xe0
  424ced:	mov    ch,dh
  424cef:	fnstenv [ecx+0x3b5ae954]
  424cf5:	rcr    BYTE PTR ds:0xce1cab6b,1
  424cfb:	or     al,0xde
  424cfd:	jmp    0x424d31
  424cff:	mov    ch,0xc5
  424d01:	cmp    eax,esi
  424d03:	fsub   QWORD PTR [ebp-0x51]
  424d06:	sar    DWORD PTR [esi],1
  424d08:	sar    dl,1
  424d0a:	xchg   ecx,eax
  424d0b:	pop    es
  424d0c:	stc    
  424d0d:	sbb    esi,DWORD PTR [esi]
  424d0f:	inc    edi
  424d10:	xor    al,0x7a
  424d13:	mov    ds:0x6ba1d7d6,eax
  424d18:	or     al,0x96
  424d1a:	jb     0x424d41
  424d1c:	push   ebx
  424d1d:	jno    0x424cbc
  424d1f:	dec    eax
  424d20:	loope  0x424d4f
  424d22:	in     eax,0x91
  424d24:	and    dl,BYTE PTR [ebp-0xa8f71f2]
  424d2a:	or     DWORD PTR [ecx+0x5f],0x7e
  424d2e:	daa    
  424d2f:	mov    al,0xb0
  424d31:	jmp    0x424cbf
  424d33:	sbb    al,0x46
  424d35:	push   es
  424d36:	mov    WORD PTR [edx+edi*4+0x26d68ccb],cs
  424d3d:	add    dl,BYTE PTR [edx+0x26a408dc]
  424d43:	push   0xfffffffe
  424d45:	retf   0xacdf
  424d48:	sbb    ecx,ebp
  424d4a:	js     0x424d46
  424d4c:	loop   0x424ce6
  424d4e:	cli    
  424d4f:	and    cl,BYTE PTR ds:[eax+0x46fa07d1]
  424d56:	stos   DWORD PTR es:[edi],eax
  424d57:	jg     0x424d6f
  424d59:	adc    bl,BYTE PTR [eax+0x18]
  424d5c:	and    DWORD PTR [ebp-0x33],edx
  424d5f:	mov    dh,0x8d
  424d61:	cmp    dl,dl
  424d63:	adc    eax,0x60aecd0d
  424d68:	popf   
  424d69:	add    DWORD PTR [edx],ebp
  424d6b:	and    eax,0xb8dd73da
  424d70:	sub    BYTE PTR [esi+0x225371e],al
  424d76:	xor    DWORD PTR [edi],ebx
  424d78:	rcr    edi,cl
  424d7a:	cmp    eax,0x7c400833
  424d7f:	sub    al,0x72
  424d81:	inc    ebx
  424d82:	loop   0x424dbe
  424d84:	sub    dl,dl
  424d86:	lods   al,BYTE PTR ds:[esi]
  424d87:	jmp    0xec82a21f
  424d8c:	sbb    esi,DWORD PTR [ecx+0x79c9c492]
  424d92:	push   ss
  424d93:	pop    esi
  424d94:	inc    edx
  424d95:	mov    WORD PTR [edx+esi*2+0xd],?
  424d99:	outs   dx,BYTE PTR ds:[esi]
  424d9a:	xor    ch,BYTE PTR [ecx]
  424d9c:	xor    DWORD PTR [eax+esi*1+0xe],esp
  424da0:	inc    ecx
  424da1:	loopne 0x424d3e
  424da3:	cmp    dh,BYTE PTR [ebp-0x52f76923]
  424da9:	outs   dx,BYTE PTR ds:[esi]
  424daa:	leave  
  424dab:	je     0x424d64
  424dad:	dec    esi
  424dae:	dec    DWORD PTR [edi]
  424db0:	rcl    DWORD PTR [edx-0x3c],1
  424db3:	test   BYTE PTR [edx+0x71bb1de2],cl
  424db9:	jne    0x424e11
  424dbb:	pop    edx
  424dbc:	ins    DWORD PTR es:[edi],dx
  424dbd:	lods   eax,DWORD PTR ds:[esi]
  424dbe:	jl     0x424d74
  424dc0:	mov    eax,0xf55c8f40
  424dc5:	gs jp  0x424dc8
	...
  424dd0:	add    BYTE PTR [esi-0x42494e3],cl
  424dd6:	(bad)  
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    dl,BYTE PTR [edi-0x56ee529b]
  424de2:	lds    eax,FWORD PTR [ecx]
  424de4:	add    BYTE PTR [esi-0x73fffffd],ch
  424dea:	(bad)  
  424deb:	aaa    
  424dec:	push   esi
  424ded:	push   esp
  424dee:	jl     0x424dc6
  424df0:	(bad)  [ebp+0x104b0ab1]
  424df6:	pop    es
  424df7:	mov    eax,ds:0xd5da11c7
  424dfc:	retf   
  424dfd:	mov    cs,WORD PTR ds:[esi-0x7c17d43a]
  424e04:	pop    ds
  424e05:	pop    ebp
  424e06:	mov    eax,ds:0xe3441bdf
  424e0b:	popf   
  424e0c:	push   edi
  424e0d:	aas    
  424e0e:	push   0xffffffa2
  424e10:	loopne 0x424dd9
  424e12:	xor    BYTE PTR [edi+0x72759390],dh
  424e18:	sbb    al,0xb0
  424e1a:	(bad)  
  424e1b:	(bad)  
  424e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e1d:	xchg   BYTE PTR [edi+eiz*4-0x32],dh
  424e21:	lds    edi,FWORD PTR [ecx]
  424e23:	inc    ebx
  424e24:	sbb    eax,0x84c9a943
  424e29:	dec    ecx
  424e2a:	cmp    al,0x36
  424e2c:	sub    DWORD PTR [esi-0x59],edx
  424e2f:	out    dx,al
  424e30:	lock dec ebp
  424e32:	mov    WORD PTR [edi+esi*8],gs
  424e35:	ins    BYTE PTR es:[edi],dx
  424e36:	pop    edi
  424e37:	(bad)  
  424e38:	xchg   edi,eax
  424e39:	xchg   edi,eax
  424e3a:	or     al,0x54
  424e3c:	xor    BYTE PTR [edx+esi*1+0x2e75215d],0xe4
  424e44:	pop    es
  424e45:	sub    DWORD PTR [ebx-0x76],ecx
  424e48:	fst    DWORD PTR [edi+ebx*4-0x6ca70e87]
  424e4f:	fstp   st(3)
  424e51:	mov    edx,0xede4068d
  424e56:	dec    esp
  424e57:	out    dx,al
  424e58:	stos   BYTE PTR es:[edi],al
  424e59:	mov    eax,ds:0x5e712670
  424e5e:	out    dx,eax
  424e5f:	mov    ss,WORD PTR [edi-0x2]
  424e62:	add    al,BYTE PTR [esi+eiz*4]
  424e65:	and    DWORD PTR [edx+0x15116c73],ecx
  424e6b:	stc    
  424e6c:	jnp    0x424e72
  424e6e:	fist   WORD PTR [edi-0x6e9032a7]
  424e74:	add    BYTE PTR [ecx-0x38],bl
  424e77:	push   ebp
  424e78:	lods   eax,DWORD PTR ds:[esi]
  424e79:	fchs   
  424e7b:	push   ecx
  424e7c:	mov    dh,0xd2
  424e7e:	fcomp  DWORD PTR [ecx+ecx*1-0x6270223d]
  424e85:	cmp    al,al
  424e87:	or     DWORD PTR [edx+ecx*2],eax
  424e8a:	dec    edx
  424e8b:	dec    ebx
  424e8c:	inc    ebx
  424e8d:	into   
  424e8e:	or     al,0x6a
  424e90:	dec    esp
  424e91:	jno    0x424f0d
  424e93:	pop    ds
  424e94:	ret    
  424e95:	inc    ebx
  424e96:	add    BYTE PTR [ebx+esi*4-0x39],dh
  424e9a:	aaa    
  424e9b:	and    DWORD PTR [edi+0x5c1d66ea],0x72
  424ea2:	cmp    BYTE PTR [ebx],cl
  424ea4:	(bad)  
  424ea5:	adc    eax,0x2d05ded2
  424eaa:	adc    al,0x6c
  424eac:	cmc    
  424ead:	sti    
  424eae:	and    bh,BYTE PTR [ebx-0x7e659edd]
  424eb4:	call   DWORD PTR [ebx-0x65]
  424eb7:	or     DWORD PTR [di-0x6ad8],eax
  424ebc:	add    DWORD PTR [edx+0x74],esp
  424ebf:	ja     0x424f35
  424ec1:	adc    BYTE PTR [ecx+0x1718aa8f],bl
  424ec7:	dec    ebx
  424ec8:	cli    
  424ec9:	inc    edi
  424eca:	push   esp
  424ecb:	add    DWORD PTR [esi-0x5b6a8337],0x14a04e09
  424ed5:	sub    al,0x42
  424ed7:	scas   al,BYTE PTR es:[edi]
  424ed8:	rcl    BYTE PTR [ecx],0x62
  424edb:	in     eax,dx
  424edc:	shl    DWORD PTR [eax-0x71],0x2d
  424ee0:	sbb    BYTE PTR [ecx+ebp*2],ah
  424ee3:	mov    WORD PTR [ecx-0x49],?
  424ee6:	imul   ecx,DWORD PTR [edx+0x63dab44d],0x89210b1c
  424ef0:	push   esp
  424ef1:	push   edx
  424ef2:	pcmpgtw mm6,QWORD PTR [edx-0x4c]
  424ef6:	pop    edi
  424ef7:	(bad)  
  424ef8:	fdivr  DWORD PTR [edx-0x45]
  424efb:	xchg   ebp,eax
  424efc:	jmp    0x424f20
  424efe:	mov    esi,0x27f548ff
  424f03:	sbb    al,0x72
  424f05:	mov    ebx,eax
  424f07:	addr16 mov dl,0x6a
  424f0a:	daa    
  424f0b:	xchg   BYTE PTR [edx],al
  424f0d:	or     edi,DWORD PTR [ebx-0xda8208]
  424f13:	jnp    0x18195b27
  424f19:	cmp    al,BYTE PTR [ebx+esi*2+0x63]
  424f1d:	lods   al,BYTE PTR ds:[esi]
  424f1e:	std    
  424f1f:	mov    cl,0x82
  424f21:	imul   edi,esi,0xffffffb1
  424f24:	sub    cl,BYTE PTR [ebp+0x1c79d54a]
  424f2a:	ret    
  424f2b:	jbe    0x424faa
  424f2d:	nop
  424f2e:	jne    0x424f3b
  424f30:	xor    eax,0x774bc485
  424f35:	xor    esp,DWORD PTR [edi-0x10]
  424f38:	inc    ebx
  424f39:	xchg   ecx,eax
  424f3a:	sbb    dl,BYTE PTR [ecx+0x1f]
  424f3d:	or     eax,0x278eb66d
  424f42:	sbb    ecx,esi
  424f44:	cdq    
  424f45:	ror    DWORD PTR [ebp+0x5cdb581f],1
  424f4b:	lods   al,BYTE PTR ds:[esi]
  424f4c:	dec    esp
  424f4d:	fld    DWORD PTR [esi]
  424f4f:	jno    0x424efb
  424f51:	xor    bh,BYTE PTR [ebp+0x7a]
  424f54:	push   edx
  424f55:	lods   eax,DWORD PTR ds:[esi]
  424f56:	sub    dh,bh
  424f58:	jle    0x424f2e
  424f5a:	div    BYTE PTR [ebx+eax*2+0x42]
  424f5e:	stc    
  424f5f:	xchg   esi,eax
  424f60:	sub    DWORD PTR [esi+eiz*1],esp
  424f63:	aaa    
  424f64:	sbb    BYTE PTR [edi-0xe],ch
  424f67:	in     al,dx
  424f68:	mov    ebx,0x361c0d71
  424f6d:	scas   al,BYTE PTR es:[edi]
  424f6e:	(bad)  
  424f6f:	lock pop ebp
  424f71:	mov    dh,0x60
  424f73:	mov    esp,0x8d283f77
  424f78:	sub    al,0x79
  424f7a:	adc    BYTE PTR [ebp-0x43],0x63
  424f7e:	(bad)  [esi+0x4f]
  424f81:	leave  
  424f82:	mov    ah,0xe7
  424f84:	jg     0x424f63
  424f86:	pop    DWORD PTR [esi]
  424f88:	sub    bl,BYTE PTR [ebx+0x2a]
  424f8b:	xor    ch,BYTE PTR [esi]
  424f8d:	cwde   
  424f8e:	sbb    DWORD PTR ds:0xd2805a4f,ebp
  424f94:	adc    DWORD PTR [ebx+edi*2+0x47782a5c],0x1e
  424f9c:	ja     0x424fcf
  424f9e:	repnz xlat BYTE PTR ds:[ebx]
  424fa0:	push   eax
  424fa1:	jno    0x425007
  424fa3:	ins    BYTE PTR es:[edi],dx
  424fa4:	aaa    
  424fa5:	cmp    ah,cl
  424fa7:	cmc    
  424fa8:	sub    al,0x66
  424faa:	leave  
  424fab:	xchg   ebx,eax
  424fac:	std    
  424fad:	mov    ebx,0xa40db9a
  424fb2:	add    DWORD PTR [esi-0x7],eax
  424fb5:	jmp    0xc1b2:0xae55d2bd
  424fbc:	push   ecx
  424fbd:	or     edi,DWORD PTR [esi+0x61557e83]
  424fc3:	and    edx,edx
  424fc5:	imul   BYTE PTR [eax-0x6610266a]
  424fcb:	pop    ecx
  424fcc:	retf   0x5f4f
  424fcf:	pop    edx
  424fd0:	inc    ebp
  424fd1:	sub    esp,DWORD PTR [ebx]
  424fd3:	test   BYTE PTR [esi-0x673d843d],dh
  424fd9:	mov    ds,WORD PTR [ebx]
  424fdb:	sbb    ebp,0xffffffa6
  424fde:	fcom   DWORD PTR [ebp+edx*4-0x68]
  424fe2:	or     cl,bh
  424fe4:	retf   
  424fe5:	lods   al,BYTE PTR ds:[esi]
  424fe6:	ret    
  424fe7:	push   esi
  424fe8:	mov    ch,0xdf
  424fea:	test   eax,0x340b2862
  424fef:	mov    eax,ds:0x93b3eb08
  424ff4:	cmp    ecx,DWORD PTR [esi+0x69ba09c7]
  424ffa:	lea    ebp,[ebx+0x59337b5]
  425000:	les    ecx,FWORD PTR [ebp+eax*2+0x73]
  425004:	push   edi
  425005:	mov    al,0xb1
  425007:	ins    BYTE PTR es:[edi],dx
  425008:	ss sahf 
  42500a:	js     0x425019
  42500c:	add    eax,0x7e7a50e7
  425011:	and    cl,dl
  425013:	cs jmp 0x4b19b123
  425019:	enter  0x4cf9,0xa8
  42501d:	nop
  42501e:	sub    edx,DWORD PTR [ebp-0x27]
  425021:	dec    ecx
  425022:	pushf  
  425023:	jb     0x42507e
  425025:	mov    bl,0x4f
  425027:	add    BYTE PTR [ecx-0x64],ch
  42502a:	jae    0x425052
  42502c:	out    0x2d,al
  42502e:	(bad)  
  42502f:	js     0x425071
  425031:	xor    DWORD PTR [ecx],esp
  425033:	jo     0x424fb5
  425035:	imul   esp,DWORD PTR [esi-0x3a021b8a],0x5b4009f5
  42503f:	imul   ebx,DWORD PTR [ebx-0x4a],0xe6294180
  425046:	jle    0x424fff
  425048:	enter  0x1da8,0x9c
  42504c:	js     0x425046
  42504e:	jnp    0x425065
  425050:	dec    esi
  425051:	inc    ebx
  425052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425053:	push   edi
  425054:	fs daa 
  425056:	push   0xffffff94
  425058:	mov    DWORD PTR [eax+ecx*2],eax
  42505b:	js     0x425071
  42505d:	pop    esi
  42505e:	jmp    0x424fe3
  425060:	xor    al,0x2e
  425062:	xchg   edx,eax
  425063:	je     0x425035
  425065:	xlat   BYTE PTR ds:[ebx]
  425066:	sbb    edi,ebx
  425068:	ss scas al,BYTE PTR es:[edi]
  42506a:	push   0xda748bc6
  42506f:	stos   BYTE PTR es:[edi],al
  425070:	bound  ebx,QWORD PTR [ecx-0x7d]
  425073:	xchg   ebp,eax
  425074:	fstp   TBYTE PTR [edi-0x6b]
  425077:	std    
  425078:	in     al,dx
  425079:	cmp    DWORD PTR [edi],esp
  42507b:	out    0xec,al
  42507d:	(bad)  [edi]
  42507f:	fiadd  DWORD PTR [esi+0x4c]
  425082:	cmp    dl,ah
  425084:	sbb    bl,0x4f
  425087:	sti    
  425088:	xchg   esp,eax
  425089:	and    cl,BYTE PTR [edx-0x5034f625]
  42508f:	add    BYTE PTR [edi+0x17c4b4f1],0xa8
  425096:	jge    0x42509d
  425098:	jle    0x4250c9
  42509a:	sti    
  42509b:	jp     0x4250f1
  42509d:	cmp    al,BYTE PTR [eax]
  42509f:	xlat   BYTE PTR ds:[ebx]
  4250a0:	adc    bl,0xd1
  4250a3:	cmc    
  4250a4:	pop    esi
  4250a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250a6:	fidivr DWORD PTR [ebx-0x55bf61f7]
  4250ac:	mov    al,ds:0x16cb42b6
  4250b1:	shl    BYTE PTR [edx+0x6f0102fb],1
  4250b7:	adc    DWORD PTR [esi+0x59014c2f],0x11e64ac1
  4250c1:	sub    eax,0x7cb26c48
  4250c6:	shr    BYTE PTR [eax-0x53846497],0x25
  4250cd:	mov    WORD PTR [eax-0x7c7942e0],es
  4250d3:	leave  
  4250d4:	jae    0x4250e0
  4250d6:	mov    bh,0xd
  4250d8:	push   edx
  4250d9:	(bad)
  4250dc:	js     0x4250b0
  4250de:	ds mov ecx,?
  4250e1:	cwde   
  4250e2:	dec    eax
  4250e3:	call   0x60d4:0x80895774
  4250ea:	popa   
  4250eb:	lds    ecx,FWORD PTR [ecx]
  4250ed:	retf   
  4250ee:	sbb    ebp,esi
  4250f0:	(bad)  
  4250f1:	fwait
  4250f2:	pushf  
  4250f3:	inc    BYTE PTR [eax-0x54]
  4250f6:	add    ah,BYTE PTR [bp+si]
  4250f9:	daa    
  4250fa:	scas   al,BYTE PTR es:[di]
  4250fc:	mov    bh,0x1
  4250fe:	sub    eax,0xe3161042
  425103:	mov    dl,0xd5
  425105:	sub    cl,BYTE PTR [esi+0x27]
  425108:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42510a:	xchg   esp,eax
  42510b:	clc    
  42510c:	cld    
  42510d:	imul   ebp,DWORD PTR [ebp+0x71],0x4d01e9cf
  425114:	fdiv   st(7),st
  425116:	adc    BYTE PTR [edx],bh
  425118:	in     eax,dx
  425119:	cs arpl bx,sp
  42511c:	daa    
  42511d:	in     eax,0x7
  42511f:	xchg   DWORD PTR [ebp-0x7f42959f],ebp
  425125:	sti    
  425126:	jns    0x4250c1
  425128:	stc    
  425129:	push   cs
  42512a:	or     eax,0x222efd92
  42512f:	sbb    edx,ecx
  425131:	mov    esi,0xee26ef2
  425136:	fcomp  DWORD PTR [edi+0x7307646c]
  42513c:	in     eax,dx
  42513d:	ficomp DWORD PTR [esi]
  42513f:	and    WORD PTR cs:[esi+edi*8],ax
  425144:	leave  
  425145:	sbb    DWORD PTR [edi-0x7261de1e],ecx
  42514b:	imul   ebp,ecx,0x4b
  42514e:	jp     0x425117
  425150:	enter  0xce36,0xba
  425154:	and    DWORD PTR [edx+0x523a7cd4],0x2ee8153a
  42515e:	dec    edi
  42515f:	mov    DWORD PTR [esi+ecx*8+0x5f],edi
  425163:	(bad)  
  425164:	enter  0xc031,0x9f
  425168:	les    edi,FWORD PTR [esi-0x6]
  42516b:	mov    ah,0xe7
  42516d:	mov    edx,0x374f35a5
  425172:	aam    0x8
  425174:	or     DWORD PTR [ebp-0x1095fa90],edx
  42517a:	mov    dl,BYTE PTR [edi+0x47268dcf]
  425180:	mov    eax,0x7863d57a
  425185:	loope  0x4251c0
  425187:	lods   al,BYTE PTR ds:[esi]
  425188:	cli    
  425189:	dec    esp
  42518a:	and    ch,0x87
  42518d:	mov    DWORD PTR [eax-0x5638df5a],esp
  425193:	pop    esi
  425194:	or     DWORD PTR [edx],esi
  425196:	xor    eax,DWORD PTR [eax]
	...
  4251a0:	add    BYTE PTR [ecx-0x42],ch
  4251a3:	cmp    esi,DWORD PTR [esi-0x124801]
  4251a9:	jnp    0x4251f5
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	mov    cl,0x3d
  4251af:	test   BYTE PTR [ecx+0x1c957],ah
  4251b5:	scas   al,BYTE PTR es:[edi]
  4251b6:	add    eax,DWORD PTR [eax]
  4251b8:	add    BYTE PTR [ecx+0x6b6dde8c],dl
  4251be:	push   edi
  4251bf:	cmp    al,BYTE PTR [esi+0x27]
  4251c2:	fwait
  4251c3:	popf   
  4251c4:	pop    edx
  4251c5:	mov    al,ds:0xec2b7bdb
  4251ca:	icebp  
  4251cb:	jp     0x4251a1
  4251cd:	fiadd  DWORD PTR [eax-0x515e99e5]
  4251d3:	or     al,0x88
  4251d5:	push   eax
  4251d6:	(bad)  [ebp+0x25]
  4251d9:	dec    DWORD PTR [ebp+0x5f]
  4251dc:	bnd ja 0x4251c9
  4251df:	ja     0x425203
  4251e1:	mov    eax,ds:0xef8effa0
  4251e6:	adc    BYTE PTR [ebx-0x1a84d26d],dl
  4251ec:	cmc    
  4251ed:	adc    ebp,eax
  4251ef:	aaa    
  4251f0:	add    al,0xcc
  4251f2:	and    esi,DWORD PTR [ebx-0x1a]
  4251f5:	push   es
  4251f6:	int3   
  4251f7:	ds pop ds
  4251f9:	jo     0x4251b9
  4251fb:	xchg   ecx,eax
  4251fc:	dec    ah
  4251fe:	in     eax,0xcb
  425200:	inc    ecx
  425201:	push   0x4f
  425203:	outs   dx,BYTE PTR ds:[esi]
  425204:	and    ebx,DWORD PTR [ecx+0x0]
  425207:	jp     0x4251f4
  425209:	pop    ebp
  42520a:	daa    
  42520b:	sbb    ecx,DWORD PTR [edi-0x14deb4fa]
  425211:	loopne 0x425235
  425213:	mov    BYTE PTR [ebp-0x7ff77ec5],ah
  425219:	pop    edi
  42521a:	cmp    cl,BYTE PTR [edi]
  42521c:	retf   
  42521d:	test   ah,al
  42521f:	mov    eax,ds:0x6a760f66
  425224:	xchg   edx,eax
  425225:	mov    ch,0x7b
  425227:	and    bl,cl
  425229:	adc    eax,0x7a03e785
  42522e:	mov    edx,0xb7e5adb7
  425233:	jno    0x425204
  425235:	sub    bl,BYTE PTR [ecx-0x1a]
  425238:	shr    BYTE PTR [ecx+0x1086d9aa],cl
  42523e:	add    eax,0xd63717c1
  425243:	and    BYTE PTR [edx-0x6eccdaf2],ch
  425249:	ror    DWORD PTR [ecx+0x56],1
  42524c:	inc    ebp
  42524d:	(bad)  
  42524e:	or     BYTE PTR gs:[ecx+eax*4],bh
  425252:	mov    DWORD PTR [edi],0xdef6b055
  425258:	aam    0xfa
  42525a:	inc    eax
  42525b:	stos   BYTE PTR es:[edi],al
  42525c:	out    dx,al
  42525d:	aam    0x1d
  42525f:	sahf   
  425260:	push   ecx
  425261:	into   
  425262:	mov    eax,es
  425264:	inc    eax
  425265:	push   ss
  425266:	mov    al,0x31
  425268:	aad    0xcd
  42526a:	sahf   
  42526b:	sti    
  42526c:	pop    ds
  42526d:	add    al,0x1
  42526f:	add    al,cl
  425271:	shl    BYTE PTR [eax+0x26],1
  425274:	add    al,0xa4
  425276:	sti    
  425277:	(bad)  [ebp+0x75e8979b]
  42527d:	es add eax,ebx
  425280:	cmp    ecx,DWORD PTR [edx-0x106181b7]
  425286:	xor    eax,0xd2f01824
  42528b:	fwait
  42528c:	xor    DWORD PTR [edi],esi
  42528e:	xchg   edx,eax
  42528f:	mov    dl,al
  425291:	je     0x42529c
  425293:	add    BYTE PTR gs:[ebp-0x3],ah
  425297:	mov    edx,DWORD PTR [ebp-0x72]
  42529a:	les    eax,FWORD PTR [eax-0x6d4d4f38]
  4252a0:	stc    
  4252a1:	push   0x9cab0bb0
  4252a6:	out    dx,eax
  4252a7:	into   
  4252a8:	jnp    0x42524d
  4252aa:	add    DWORD PTR [eax],ecx
  4252ac:	pop    eax
  4252ad:	sbb    ebx,DWORD PTR [esi+0x10]
  4252b0:	jp     0x42530a
  4252b2:	dec    ebx
  4252b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252b4:	inc    ecx
  4252b5:	inc    ebp
  4252b6:	sub    edi,DWORD PTR [ebp+0x12]
  4252b9:	or     al,0x63
  4252bb:	jmp    0x606d:0xbe3fa0bf
  4252c2:	push   ecx
  4252c3:	les    ebx,FWORD PTR [eax+0x4b]
  4252c6:	lea    edx,[ecx+eax*1+0x606cbfad]
  4252cd:	add    eax,0x8b73101
  4252d2:	imul   ebp,edi,0x826ebfd2
  4252d8:	or     DWORD PTR [esi-0x2b],edx
  4252db:	pop    ebp
  4252dc:	xor    BYTE PTR [eax],dh
  4252de:	xchg   esp,eax
  4252df:	inc    edx
  4252e0:	push   edx
  4252e1:	jge    0x425291
  4252e3:	pop    eax
  4252e4:	(bad)  
  4252e5:	and    al,0xe4
  4252e7:	fisttp WORD PTR [edx+0x31]
  4252ea:	sti    
  4252eb:	sub    al,0x58
  4252ed:	pop    eax
  4252ee:	loop   0x42533c
  4252f0:	imul   eax,DWORD PTR [ebx+0x260ef008],0xffffff84
  4252f7:	dec    eax
  4252f8:	mov    ss,ebp
  4252fa:	out    0x3d,eax
  4252fc:	or     ah,BYTE PTR [edi+0x73eaf89f]
  425302:	(bad)  
  425303:	mov    esp,0x14a03be6
  425308:	hlt    
  425309:	test   BYTE PTR [edi+0x50df5611],al
  42530f:	(bad)  
  425310:	bound  edi,QWORD PTR [eax-0x25]
  425313:	cmp    eax,ecx
  425315:	icebp  
  425316:	js     0x4252c6
  425318:	mov    dl,0x19
  42531a:	pushf  
  42531b:	jmp    0x42531f
  42531d:	mov    bl,0x6a
  42531f:	or     ebx,esp
  425321:	ret    0x490f
  425324:	inc    esp
  425325:	xor    eax,0x86b52d81
  42532a:	fcomp  QWORD PTR [ecx]
  42532c:	fistp  QWORD PTR [ecx+0x6d]
  42532f:	pop    ebx
  425330:	icebp  
  425331:	stc    
  425332:	dec    esp
  425333:	jo     0x42532a
  425335:	inc    eax
  425336:	mov    edi,0x1c24fefd
  42533b:	stos   DWORD PTR es:[edi],eax
  42533c:	xor    eax,0xc148c301
  425341:	cdq    
  425342:	les    esi,FWORD PTR [edx+0x742f3757]
  425348:	mov    al,ds:0xd30a24dd
  42534d:	mov    cl,cl
  42534f:	push   esp
  425350:	cmp    al,0x84
  425352:	js     0x425369
  425354:	shl    DWORD PTR [eax],1
  425356:	dec    eax
  425357:	push   edi
  425358:	xor    eax,0x56a0ac2
  42535d:	in     eax,dx
  42535e:	xchg   ecx,eax
  42535f:	jno    0x425302
  425361:	mov    esi,0x50ac94a6
  425366:	lock sub BYTE PTR [eax],al
  425369:	or     eax,0x15da2a15
  42536e:	inc    esi
  42536f:	push   edx
  425370:	jmp    0x42536e
  425372:	push   cs
  425373:	iret   
  425374:	xchg   ecx,eax
  425375:	sbb    BYTE PTR [eax-0x5],bh
  425378:	ja     0x4253a8
  42537a:	mov    ch,0x35
  42537c:	cwde   
  42537d:	inc    esi
  42537e:	out    0xf8,al
  425380:	cld    
  425381:	mov    BYTE PTR [edx],bl
  425383:	or     bl,dl
  425385:	invd   
  425387:	and    al,0xf
  425389:	fsubr  QWORD PTR [esi+0x259c763c]
  42538f:	push   esp
  425390:	and    ah,BYTE PTR [edi-0x8eede23]
  425396:	xchg   ebp,eax
  425397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425398:	mov    ah,dl
  42539a:	or     esp,DWORD PTR [ebx+0xc]
  42539d:	mov    ah,0xa7
  42539f:	mov    dl,0x7b
  4253a1:	(bad)  
  4253a2:	mov    edx,0xd8938a76
  4253a7:	adc    DWORD PTR [esp+0x3b],0x6e
  4253ac:	test   eax,0xd85028c6
  4253b1:	fcomp  st(3)
  4253b3:	je     0x4253a3
  4253b5:	xor    DWORD PTR [eax],eax
  4253b7:	dec    edi
  4253b8:	push   edx
  4253b9:	test   BYTE PTR [ebx],bl
  4253bb:	mov    eax,ds:0x2a3689dc
  4253c0:	iret   
  4253c1:	mov    al,ah
  4253c3:	test   BYTE PTR [ebp+0x6f162c8d],cl
  4253c9:	add    eax,0x2e66ea49
  4253ce:	jnp    0x4253ec
  4253d0:	retf   
  4253d1:	or     ch,BYTE PTR [edi+0x17]
  4253d4:	ja     0x425437
  4253d6:	sti    
  4253d7:	pop    ebp
  4253d8:	shl    esi,0x25
  4253db:	push   esp
  4253dc:	out    0x88,eax
  4253de:	lock sub DWORD PTR [ecx+0x54],eax
  4253e2:	adc    al,0xca
  4253e4:	push   esi
  4253e5:	mov    al,ds:0x86e44c5d
  4253ea:	mov    dh,0xac
  4253ec:	fild   DWORD PTR [ebx+0x60]
  4253ef:	sbb    eax,DWORD PTR [ebp-0x1e8d451c]
  4253f5:	xchg   esp,eax
  4253f6:	hlt    
  4253f7:	out    dx,eax
  4253f8:	test   al,0x6e
  4253fa:	jns    0x4253c3
  4253fc:	ret    
  4253fd:	inc    ebp
  4253fe:	or     al,0x49
  425400:	cmp    eax,0xd35cc850
  425405:	jmp    0x425389
  425407:	jbe    0x425448
  425409:	sub    cl,BYTE PTR [esp+eiz*8]
  42540c:	dec    ebx
  42540d:	sub    ebx,esi
  42540f:	dec    ebp
  425410:	mov    dl,BYTE PTR [edx-0xfc26a68]
  425416:	in     eax,0x82
  425418:	xchg   ecx,eax
  425419:	fnstsw WORD PTR [edx+0x8ae4044]
  42541f:	mov    bl,BYTE PTR [eax+0x29d7a4c4]
  425425:	gs push ds
  425427:	ret    
  425428:	mov    ecx,0x37130a77
  42542d:	inc    ebx
  42542e:	aas    
  42542f:	(bad)  
  425430:	or     edi,DWORD PTR [edi+0x1d]
  425433:	dec    edx
  425434:	cwde   
  425435:	fist   WORD PTR [ecx+edi*4]
  425438:	pusha  
  425439:	xor    DWORD PTR [esi-0x24d37c96],0xffffffc1
  425440:	js     0x425437
  425442:	lods   al,BYTE PTR ds:[esi]
  425443:	hlt    
  425444:	push   0xc94999a8
  425449:	mov    ecx,0x5945a6be
  42544e:	(bad)  
  42544f:	pop    edx
  425450:	jno    0x425407
  425452:	jmp    0x4254bb
  425454:	aas    
  425455:	and    eax,0x6308eb65
  42545a:	and    eax,DWORD PTR [eax+0x1b]
  42545d:	jns    0x4254d1
  42545f:	push   ebp
  425460:	or     eax,0x60ec366b
  425465:	retf   
  425466:	call   0x92aa:0xd0e1db58
  42546d:	jbe    0x42548e
  42546f:	lods   al,BYTE PTR ds:[esi]
  425470:	add    eax,0x70fc88b4
  425475:	shr    BYTE PTR [esi-0x17],1
  425478:	adc    BYTE PTR [edx+0x75],bh
  42547b:	adc    ch,BYTE PTR [esi+ecx*8-0x39]
  42547f:	inc    esi
  425480:	jecxz  0x425416
  425482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425483:	fidiv  DWORD PTR [edx+eiz*1-0x3a]
  425487:	fisttp QWORD PTR [ebx-0x601f6a4f]
  42548d:	inc    ecx
  42548e:	aas    
  42548f:	stos   DWORD PTR es:[edi],eax
  425490:	jp     0x42548f
  425492:	jns    0x425470
  425494:	push   eax
  425495:	in     eax,0x54
  425497:	(bad)  
  425499:	ins    DWORD PTR es:[edi],dx
  42549a:	mov    ds:0x3cd9385c,eax
  42549f:	sub    al,0xc
  4254a1:	mov    ch,0x6f
  4254a3:	repz out 0xd2,al
  4254a6:	rcr    DWORD PTR [eax],0x6
  4254a9:	stos   BYTE PTR es:[edi],al
  4254aa:	mov    BYTE PTR ds:0xa19acb1,ah
  4254b0:	mov    WORD PTR [edx-0x4aa1b9a6],es
  4254b6:	sub    DWORD PTR [eax-0x5be2d582],0x27bb7818
  4254c0:	mov    ah,0x54
  4254c2:	addr16 (bad) 
  4254c4:	pop    ebx
  4254c5:	jmp    0x425462
  4254c7:	into   
  4254c8:	dec    edx
  4254c9:	paddsb mm7,QWORD PTR [edi-0x75]
  4254cd:	rol    BYTE PTR [edi],cl
  4254cf:	addr16 xor dh,dl
  4254d2:	(bad)  
  4254d3:	sbb    eax,0xec48419a
  4254d8:	cmp    edi,DWORD PTR [ecx+eax*1-0x7d]
  4254dc:	and    al,0xfc
  4254de:	outs   dx,BYTE PTR ds:[esi]
  4254df:	inc    ecx
  4254e0:	ret    0x4a46
  4254e3:	cmovg  edx,DWORD PTR [ebp-0x7f]
  4254e7:	(bad)  
  4254e9:	pop    ds
  4254ea:	dec    ecx
  4254eb:	dec    edx
  4254ec:	cmp    al,0xe2
  4254ee:	xor    al,bh
  4254f0:	push   esi
  4254f1:	fdiv   st(1),st
  4254f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254f4:	jle    0x4254b7
  4254f6:	loope  0x4254d0
  4254f8:	sbb    ebp,ebx
  4254fa:	lods   eax,DWORD PTR ds:[esi]
  4254fb:	push   0x938024d7
  425500:	int    0x96
  425502:	ja     0x425581
  425504:	std    
  425505:	xor    edx,edx
  425507:	shl    DWORD PTR [edx+0x74],0xd5
  42550b:	adc    edi,ebx
  42550d:	out    0x5f,eax
  42550f:	and    BYTE PTR [ecx+0x53935b71],0xac
  425516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425517:	sub    esi,DWORD PTR [ecx-0x163c4f72]
  42551d:	mov    eax,DWORD PTR ds:0xe4960345
  425523:	mov    ebx,0xe41d7d0
  425528:	and    al,0xa
  42552a:	(bad)  
  42552b:	repz mov bh,0x95
  42552e:	or     al,0x98
  425530:	mov    al,ds:0x91d5a5b2
  425535:	xor    DWORD PTR [ebx-0x4],edi
  425538:	in     al,0x6d
  42553a:	dec    edx
  42553b:	jb     0x4254d9
  42553d:	jne    0x425524
  42553f:	shl    DWORD PTR [edi],1
  425541:	pop    ebx
  425542:	ja     0x425529
  425544:	hlt    
  425545:	call   0x1e61:0x9c41145a
  42554c:	dec    edx
  42554d:	cmp    BYTE PTR [edi+0x23],dh
  425550:	aaa    
  425551:	push   esp
  425552:	fwait
  425553:	push   cs
  425554:	hlt    
  425555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425556:	and    BYTE PTR [eax-0x38ebee29],0xcc
  42555d:	repz inc eax
  42555f:	ret    0xef71
  425562:	xchg   edi,eax
  425563:	hlt    
  425564:	sbb    DWORD PTR [eax+ecx*4],eax
	...
  42556f:	add    BYTE PTR [eax],al
  425571:	jmp    0x4255bb
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     eax,DWORD PTR [ecx+0x44]
  42557f:	sub    cl,BYTE PTR [eax]
  425581:	add    eax,0xae0001cd
  425586:	add    eax,DWORD PTR [eax]
  425588:	add    dh,al
  42558a:	xchg   esp,eax
  42558b:	pusha  
  42558c:	test   eax,0xfeb29468
  425591:	dec    ecx
  425592:	jg     0x4255c4
  425594:	mov    edi,0x4197eb64
  425599:	in     eax,dx
  42559a:	push   eax
  42559b:	test   DWORD PTR [esp+ebp*2],eax
  42559e:	pop    edi
  42559f:	cmp    esp,DWORD PTR [ebp-0x79]
  4255a2:	sbb    DWORD PTR [ecx+0x52839d7f],ebp
  4255a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255a9:	and    al,0x3a
  4255ab:	das    
  4255ac:	add    al,0xd4
  4255ae:	ins    BYTE PTR es:[edi],dx
  4255af:	inc    edx
  4255b0:	rcr    DWORD PTR [ecx],0xee
  4255b3:	push   ds
  4255b4:	push   0x67
  4255b6:	and    eax,0xfe111676
  4255bb:	rol    esi,0x5b
  4255be:	jge    0x4255e5
  4255c0:	(bad)  
  4255c1:	in     al,0xb1
  4255c3:	adc    BYTE PTR [esi+ecx*8-0x2764b6b9],bl
  4255ca:	call   DWORD PTR [esi]
  4255cc:	mov    dl,0x89
  4255ce:	(bad)  
  4255cf:	rol    edx,0x22
  4255d2:	pop    edx
  4255d3:	pop    edi
  4255d4:	cwde   
  4255d5:	and    ebp,DWORD PTR gs:[eax]
  4255d8:	out    0xa8,al
  4255da:	sbb    BYTE PTR [eax+0x6004df13],0x6e
  4255e1:	bnd jp 0x42563a
  4255e4:	or     BYTE PTR [esi+edi*1],bl
  4255e7:	sub    DWORD PTR [edi-0x42810260],0x59
  4255ee:	mov    ah,BYTE PTR ds:0x4eabbf85
  4255f4:	sbb    eax,0xf2e00021
  4255f9:	add    ecx,DWORD PTR [eax+0x55dbbec2]
  4255ff:	(bad)  
  425601:	jge    0x4255ad
  425603:	push   es
  425604:	push   esi
  425605:	inc    esp
  425606:	loopne 0x425593
  425608:	sbb    eax,0x8821ca5
  42560d:	adc    DWORD PTR [ebx],esi
  42560f:	clc    
  425610:	jns    0x425619
  425612:	push   cs
  425613:	popa   
  425614:	aam    0x16
  425616:	mov    ds:0x4efcfedb,al
  42561b:	inc    esi
  42561c:	pop    edx
  42561d:	xor    edx,DWORD PTR [esi-0xa]
  425620:	inc    esp
  425621:	ds sahf 
  425623:	push   ebp
  425624:	xchg   esp,eax
  425625:	sahf   
  425626:	jb     0x4255e1
  425628:	and    esi,eax
  42562a:	add    eax,0x5519b812
  42562f:	pusha  
  425630:	adc    DWORD PTR [ecx+esi*1+0x59],ecx
  425634:	sbb    esi,DWORD PTR [edx+0x428ac925]
  42563a:	lods   eax,DWORD PTR ds:[esi]
  42563b:	mov    ch,0x76
  42563d:	shr    dl,0xd3
  425640:	mov    al,0x1f
  425642:	add    edi,DWORD PTR [esi]
  425644:	(bad)  
  425645:	lods   eax,DWORD PTR ds:[esi]
  425646:	outs   dx,BYTE PTR ds:[esi]
  425647:	(bad)  
  425648:	jmp    0x4255ea
  42564a:	jb     0x4255e0
  42564c:	jno    0x4255cf
  42564e:	cmp    al,0x1
  425650:	repnz inc ebp
  425652:	addr16 mov ah,0xfd
  425655:	sahf   
  425656:	and    DWORD PTR [esi+0x76ac32b0],eax
  42565c:	enter  0x3480,0x20
  425660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425661:	mov    dl,BYTE PTR [esp+ecx*1-0x56e5a8d5]
  425668:	dec    BYTE PTR [ebx-0x2b]
  42566b:	sbb    al,bl
  42566d:	(bad)  
  42566e:	dec    ecx
  42566f:	xor    al,0xfa
  425671:	call   0xfab7:0x932713d9
  425678:	add    BYTE PTR [edx-0x58],ch
  42567b:	rcr    BYTE PTR [ecx+eax*4],1
  42567e:	gs std 
  425680:	or     ch,dl
  425682:	in     eax,dx
  425683:	repz in al,dx
  425685:	add    edx,DWORD PTR [ecx-0x5f14e04e]
  42568b:	jp     0x42564b
  42568d:	pop    edi
  42568e:	cwde   
  42568f:	out    0x11,al
  425691:	scas   al,BYTE PTR es:[edi]
  425692:	pop    ebx
  425693:	xor    BYTE PTR [ebx+0x48],ah
  425696:	lahf   
  425697:	ror    bl,cl
  425699:	rcr    BYTE PTR [ebx],1
  42569b:	call   0xd1ad6be2
  4256a0:	cmp    ecx,DWORD PTR [ecx]
  4256a2:	mov    eax,ds:0x37aca3cc
  4256a7:	ss div eax
  4256aa:	sar    ebx,1
  4256ac:	arpl   WORD PTR [edx-0x6b9ce03],ax
  4256b2:	aas    
  4256b3:	cmp    al,0xfd
  4256b5:	and    DWORD PTR [edi],esi
  4256b7:	mov    eax,ds:0xd97e4aa6
  4256bc:	stos   BYTE PTR es:[edi],al
  4256bd:	inc    ebx
  4256be:	push   edi
  4256bf:	gs pop esp
  4256c2:	push   ebp
  4256c3:	std    
  4256c4:	fldcw  WORD PTR [ebp+0x36]
  4256c7:	retf   0xaaf6
  4256ca:	push   ebx
  4256cb:	fs push eax
  4256cd:	stos   BYTE PTR es:[edi],al
  4256ce:	es inc ecx
  4256d0:	std    
  4256d1:	clc    
  4256d2:	imul   edx,DWORD PTR [edx],0x9ee504ac
  4256d8:	push   esp
  4256d9:	std    
  4256da:	leave  
  4256db:	xor    eax,0xc21009e0
  4256e0:	mov    eax,ds:0x1ef5b5b6
  4256e5:	in     eax,0x47
  4256e7:	fistp  QWORD PTR [ecx]
  4256e9:	add    cl,al
  4256eb:	ins    DWORD PTR es:[edi],dx
  4256ec:	sbb    al,BYTE PTR [ecx+edx*1]
  4256ef:	jmp    0x8de:0x11e5ff7c
  4256f6:	ss scas al,BYTE PTR es:[edi]
  4256f8:	jmp    0x425764
  4256fa:	(bad)  
  4256fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256fc:	and    ch,BYTE PTR es:[esi+0x1ed3194f]
  425703:	add    dh,BYTE PTR [ebp-0x4a83cf89]
  425709:	jb     0x42575b
  42570b:	dec    ebp
  42570c:	push   0x171aecce
  425711:	ds (bad) 
  425713:	mov    ebp,esi
  425715:	and    ecx,DWORD PTR [ecx+0x70]
  425718:	push   ss
  425719:	mov    al,0x45
  42571b:	or     esi,eax
  42571d:	push   ds
  42571e:	ror    BYTE PTR [edx-0x61],cl
  425721:	int3   
  425722:	inc    edi
  425723:	(bad)  
  425724:	jb     0x42571a
  425726:	xor    BYTE PTR [eax],ch
  425728:	cmp    eax,0xd7cc8912
  42572d:	mov    ah,0x2c
  42572f:	js     0x425769
  425731:	pop    edi
  425732:	push   ss
  425733:	and    eax,0xa43b7514
  425738:	in     al,dx
  425739:	fwait
  42573a:	sub    eax,0xd7cac9
  42573f:	adc    al,0x87
  425741:	pop    es
  425742:	push   edx
  425743:	out    0x67,al
  425745:	mov    ds:0x28aa0038,eax
  42574a:	sar    BYTE PTR [ecx+0x44],1
  42574d:	xchg   BYTE PTR [ebx],bh
  42574f:	mov    eax,ds:0x798dc9d0
  425754:	sti    
  425755:	outs   dx,BYTE PTR ds:[esi]
  425756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425757:	ffree  st(3)
  425759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42575a:	jo     0x4257ab
  42575c:	dec    ebp
  42575d:	call   0xf4cd:0x1810561d
  425764:	out    dx,eax
  425765:	xlat   BYTE PTR ds:[ebx]
  425766:	dec    esp
  425767:	int    0xb8
  425769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42576a:	sbb    ch,cl
  42576c:	jl     0x425785
  42576e:	cdq    
  42576f:	sub    al,0x9
  425771:	data16 scas al,BYTE PTR es:[edi]
  425773:	and    al,BYTE PTR fs:[esi-0x7f31db39]
  42577a:	inc    BYTE PTR [ebx-0x19]
  42577d:	inc    eax
  42577e:	gs iret 
  425780:	jns    0x4257c2
  425782:	mov    ebp,0x8536ba76
  425787:	mov    cs,WORD PTR [ebx]
  425789:	pop    ss
  42578a:	fstp   TBYTE PTR [edx]
  42578c:	icebp  
  42578d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42578e:	sub    BYTE PTR [ebx+0x10fb0d60],0xfe
  425795:	imul   edx,esp,0x8a1a6449
  42579b:	cmp    al,0x9f
  42579d:	mov    esi,0xd2584634
  4257a2:	idiv   ah
  4257a4:	dec    ecx
  4257a5:	imul   ebx
  4257a7:	inc    eax
  4257a8:	inc    ecx
  4257a9:	test   DWORD PTR [ebp-0x5f],0x2f1bab65
  4257b0:	and    eax,DWORD PTR ds:0xe1df9f15
  4257b6:	(bad)  
  4257b7:	jbe    0x4257cd
  4257b9:	(bad)  
  4257ba:	iret   
  4257bb:	enter  0xc36f,0x13
  4257bf:	sub    BYTE PTR [eax+0x26],dl
  4257c2:	xor    al,0x4c
  4257c4:	aad    0xb4
  4257c6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257c8:	pop    ecx
  4257c9:	das    
  4257ca:	punpckhwd mm6,QWORD PTR [ebx]
  4257cd:	xchg   ebx,eax
  4257ce:	xchg   esp,eax
  4257cf:	in     al,0x3d
  4257d1:	aad    0xed
  4257d3:	mov    dh,0x30
  4257d5:	daa    
  4257d6:	xchg   edx,eax
  4257d7:	shl    BYTE PTR [esi-0x58],1
  4257da:	or     eax,0xcb065979
  4257df:	cmp    ecx,DWORD PTR [ecx+esi*4+0x12]
  4257e3:	xchg   edi,eax
  4257e4:	mov    ecx,0x38a00119
  4257e9:	(bad)  
  4257ea:	out    dx,eax
  4257eb:	(bad)  
  4257ec:	in     al,dx
  4257ed:	hlt    
  4257ee:	scas   al,BYTE PTR es:[edi]
  4257ef:	or     BYTE PTR ds:0x59deadd5,cl
  4257f5:	mov    eax,ds:0xb7506406
  4257fa:	add    bh,cl
  4257fc:	adc    bh,BYTE PTR [ecx]
  4257fe:	test   al,0x72
  425800:	outs   dx,DWORD PTR ds:[esi]
  425801:	xor    eax,0xcc796eb
  425806:	retf   
  425807:	push   ecx
  425808:	loopne 0x425881
  42580a:	and    BYTE PTR [esi-0x85fcc5d],dl
  425810:	ret    
  425811:	xchg   ebp,eax
  425812:	lock bound ebp,QWORD PTR [eax]
  425815:	daa    
  425816:	ins    BYTE PTR es:[edi],dx
  425817:	mov    edx,0xb6f12c0a
  42581c:	fdivp  st(2),st
  42581e:	dec    ebp
  42581f:	and    BYTE PTR [ebp+0x7f4cfa7b],bl
  425825:	mov    bh,dl
  425827:	bound  ebx,QWORD PTR [eax]
  425829:	mov    edx,0x5efdbc6f
  42582e:	aad    0xb1
  425830:	mov    WORD PTR [ecx],ss
  425832:	pop    es
  425833:	iret   
  425834:	lock jnp 0x425835
  425837:	int    0xde
  425839:	in     eax,0x88
  42583b:	jb     0x4258a4
  42583d:	mov    WORD PTR ds:[eax],gs
  425840:	inc    edi
  425841:	ror    ebx,0x64
  425844:	pop    ecx
  425845:	(bad)  
  425846:	aam    0xf9
  425848:	mov    edx,0x5275be02
  42584d:	repnz mov eax,ds:0x60b15b2e
  425853:	jo     0x425875
  425855:	or     ah,0x92
  425858:	cli    
  425859:	div    esp
  42585b:	aas    
  42585c:	or     ebx,DWORD PTR [edi]
  42585e:	test   al,0x59
  425860:	mov    BYTE PTR [edi+0x453e3e74],al
  425866:	scas   eax,DWORD PTR es:[edi]
  425867:	jecxz  0x4258bd
  425869:	xor    DWORD PTR [edi+0x5],0x265cb6de
  425870:	test   BYTE PTR [edx+0x7b],cl
  425873:	xchg   edx,eax
  425874:	jo     0x425826
  425876:	inc    ebx
  425877:	mov    esi,0x1f8eab36
  42587c:	aam    0x12
  42587e:	mov    DWORD PTR [edi],edi
  425880:	pop    DWORD PTR [ecx+0x4002aa26]
  425886:	inc    eax
  425887:	fdivr  QWORD PTR [ecx]
  425889:	dec    eax
  42588a:	add    eax,0x81991b0
  42588f:	stc    
  425890:	push   cs
  425891:	pop    ds
  425892:	test   BYTE PTR [edi-0x4e],bh
  425895:	dec    BYTE PTR [edx]
  425897:	mov    bh,0xcc
  425899:	test   DWORD PTR [esi-0x528e0a26],ebp
  42589f:	in     eax,0x6f
  4258a1:	ss push edx
  4258a3:	stc    
  4258a4:	jl     0x4258ea
  4258a6:	aaa    
  4258a7:	(bad)  
  4258a9:	pop    ss
  4258aa:	dec    ebx
  4258ab:	xchg   edx,eax
  4258ac:	fwait
  4258ad:	(bad)  
  4258ae:	int    0x1b
  4258b0:	mov    dl,0x40
  4258b2:	fdiv   QWORD PTR [eax]
  4258b4:	arpl   WORD PTR [edi+esi*8+0x59],di
  4258b8:	icebp  
  4258b9:	cmc    
  4258ba:	call   0xc4ca:0x46b554fb
  4258c1:	repnz pushf 
  4258c3:	aaa    
  4258c4:	rcl    BYTE PTR [esi+0x5f3dcea8],cl
  4258ca:	push   edx
  4258cb:	loop   0x4258f0
  4258cd:	mov    dl,ch
  4258cf:	add    eax,edi
  4258d1:	or     ah,0x61
  4258d4:	sbb    eax,0x99ad784d
  4258d9:	xor    BYTE PTR [ebp+0x2b],0x14
  4258dd:	mov    DWORD PTR [edi-0x24],ebp
  4258e0:	or     eax,eax
  4258e2:	xchg   edx,eax
  4258e3:	in     al,dx
  4258e4:	and    eax,0x5411a418
  4258e9:	in     eax,dx
  4258ea:	(bad)  
  4258eb:	and    bh,bh
  4258ed:	jae    0x425950
  4258ef:	arpl   WORD PTR [esi],sp
  4258f1:	sub    ecx,esi
  4258f3:	push   ss
  4258f4:	stos   DWORD PTR es:[edi],eax
  4258f5:	sbb    al,0x6
  4258f7:	cmp    DWORD PTR [eax],edx
  4258f9:	(bad)  
  4258fa:	hlt    
  4258fb:	or     bh,BYTE PTR [edi-0x7e]
  4258fe:	and    edi,DWORD PTR [edi+0x679aec14]
  425904:	cmp    BYTE PTR [ecx],ch
  425906:	push   ss
  425907:	je     0x425890
  425909:	mov    esp,0x90aeee4f
  42590e:	xchg   edi,eax
  42590f:	sub    al,0xc9
  425911:	rol    bl,0x19
  425914:	pop    edi
  425915:	push   ebx
  425916:	pop    ss
  425917:	mov    esi,0xdba3d44e
  42591c:	mov    bh,0xb0
  42591e:	(bad)  
  42591f:	sbb    esi,DWORD PTR [ebp-0x4a]
  425922:	xor    dh,BYTE PTR [edx-0x5cb131d8]
  425928:	(bad)  
  425929:	shr    DWORD PTR [edi-0x3b011a34],0x96
  425930:	ret    0xf91f
  425933:	and    DWORD PTR [eax+ebx*4+0x87],ebp
  42593a:	add    BYTE PTR [eax],al
  42593c:	add    BYTE PTR [eax],al
  42593e:	add    BYTE PTR [eax],al
  425940:	add    ah,ch
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx-0x5007cd70],ah
  425951:	mov    bl,0xd0
  425953:	add    DWORD PTR [eax],eax
  425955:	scas   al,BYTE PTR es:[edi]
  425956:	add    eax,DWORD PTR [eax]
  425958:	add    BYTE PTR [esi-0x32],cl
  42595b:	bnd jb 0x42596a
  42595e:	dec    eax
  42595f:	sub    esi,ebp
  425961:	cs enter 0xed6b,0x4e
  425966:	mov    esi,0x30541cdf
  42596b:	lods   eax,DWORD PTR ds:[esi]
  42596c:	mov    esi,0xc6fa5dd8
  425971:	sbb    BYTE PTR [ebx+0x1c],0x56
  425975:	test   eax,0x73025309
  42597a:	pop    ecx
  42597b:	mov    esi,0xf3b76e73
  425980:	or     al,0xd3
  425982:	sbb    bh,BYTE PTR [edi+0x4f]
  425985:	(bad)  
  425986:	arpl   WORD PTR [ebp-0x7a],cx
  425989:	jle    0x4259bf
  42598b:	fst    QWORD PTR [ebx]
  42598d:	in     al,0x9e
  42598f:	ins    BYTE PTR es:[edi],dx
  425990:	pop    es
  425991:	int3   
  425992:	outs   dx,BYTE PTR ds:[esi]
  425993:	outs   dx,DWORD PTR ds:[esi]
  425994:	xchg   edi,eax
  425995:	cli    
  425996:	outs   dx,DWORD PTR ds:[esi]
  425997:	xlat   BYTE PTR ds:[ebx]
  425998:	and    al,BYTE PTR [ecx-0x75]
  42599b:	imul   BYTE PTR [esp+eiz*2+0x54d9a779]
  4259a2:	xor    eax,0x8b148e5a
  4259a7:	sbb    ah,BYTE PTR [eax+eax*4-0x6fad23d5]
  4259ae:	pop    esi
  4259af:	dec    ebp
  4259b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259b1:	out    0xd9,al
  4259b3:	icebp  
  4259b4:	stos   BYTE PTR es:[edi],al
  4259b5:	xchg   edi,eax
  4259b6:	or     eax,0xdb13024a
  4259bb:	retf   0xca89
  4259be:	popf   
  4259bf:	into   
  4259c0:	popa   
  4259c1:	imul   ecx,DWORD PTR [eax],0x6c50fc25
  4259c7:	xor    BYTE PTR [ebp+0x4d],al
  4259ca:	call   0x9751:0x2e45ef94
  4259d1:	enter  0x4efb,0x54
  4259d5:	repnz lock rep ins DWORD PTR es:[edi],dx
  4259d9:	loop   0x42596c
  4259db:	das    
  4259dc:	adc    ebx,DWORD PTR [ebx+0x11104911]
  4259e2:	mov    edi,0xe40544c8
  4259e7:	mov    dh,0xdd
  4259e9:	inc    ebx
  4259ea:	mov    edx,0xeb720367
  4259ef:	int3   
  4259f0:	mov    esp,0x771758ec
  4259f5:	idiv   edx
  4259f7:	dec    edx
  4259f8:	popa   
  4259f9:	cld    
  4259fa:	daa    
  4259fb:	arpl   WORD PTR [ebx+edx*2],si
  4259fe:	fstp   QWORD PTR [ebx]
  425a00:	sahf   
  425a01:	and    al,0x38
  425a03:	and    BYTE PTR [eax],cl
  425a05:	rol    BYTE PTR [edx-0x23],1
  425a08:	inc    BYTE PTR [edx]
  425a0a:	mov    al,dl
  425a0c:	and    al,0xda
  425a0e:	mov    al,ds:0xfd5435c3
  425a13:	xchg   cl,cl
  425a15:	das    
  425a16:	hlt    
  425a17:	adc    dl,dh
  425a19:	call   0xad7c:0x7c961c3d
  425a20:	xchg   ebp,eax
  425a21:	fld    TBYTE PTR [eax-0x299c778]
  425a27:	mov    WORD PTR [edi*8-0x5f4288c5],cs
  425a2e:	push   ecx
  425a2f:	pop    ss
  425a30:	test   DWORD PTR [edi-0x12f05873],0xc3326d3a
  425a3a:	dec    eax
  425a3b:	pop    eax
  425a3c:	scas   eax,DWORD PTR es:[edi]
  425a3d:	ds aam 0xaa
  425a40:	adc    dh,dl
  425a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a43:	xchg   ebp,eax
  425a44:	mov    ecx,0xceda907
  425a49:	cmp    ch,ch
  425a4b:	push   0x2de548b7
  425a50:	retf   0xb67a
  425a53:	aad    0xcb
  425a55:	aam    0xfe
  425a57:	xor    dh,BYTE PTR [edi+ecx*4-0x12d63f6c]
  425a5e:	mov    edx,edi
  425a60:	emms   
  425a62:	jne    0x425a8d
  425a64:	test   BYTE PTR ds:0x12cdcc59,dh
  425a6a:	les    edi,FWORD PTR ds:0xdc35bd33
  425a70:	and    al,0xd3
  425a72:	jns    0x425adb
  425a74:	cli    
  425a75:	ror    BYTE PTR [edx+0x16],0x18
  425a79:	hlt    
  425a7a:	sub    BYTE PTR [ecx+0x3f],al
  425a7d:	cld    
  425a7e:	xchg   edx,eax
  425a7f:	aam    0xd6
  425a81:	dec    ecx
  425a82:	and    BYTE PTR [esi+ebx*4-0x1c7d2335],ch
  425a89:	inc    edi
  425a8a:	iret   
  425a8b:	pushf  
  425a8c:	jnp    0x425a7d
  425a8e:	and    esi,edi
  425a90:	mov    dl,BYTE PTR [ecx+0x15]
  425a93:	pop    ecx
  425a94:	dec    ebx
  425a95:	retf   0x3ee
  425a98:	pusha  
  425a99:	shl    DWORD PTR [ecx+ebp*1],0x3d
  425a9d:	icebp  
  425a9e:	and    DWORD PTR [eax-0x26],0xf9d51197
  425aa5:	out    0xc6,al
  425aa7:	(bad)  [ecx+0x6b]
  425aaa:	bound  edx,QWORD PTR [esi-0x70]
  425aad:	outs   dx,BYTE PTR ds:[esi]
  425aaf:	cld    
  425ab0:	mov    dh,BYTE PTR [esi]
  425ab2:	or     ebx,DWORD PTR [ebp+eax*2-0x318c1cf6]
  425ab9:	cld    
  425aba:	mov    ds:0xbe61cc46,eax
  425abf:	das    
  425ac0:	retf   0xa181
  425ac3:	inc    eax
  425ac4:	or     bh,bl
  425ac6:	jae    0x425a90
  425ac8:	pop    esi
  425ac9:	test   al,0xae
  425acb:	les    ebx,FWORD PTR [ecx-0x7b]
  425ace:	xor    eax,0xd8a2f4bb
  425ad3:	inc    edx
  425ad4:	outs   dx,BYTE PTR ds:[esi]
  425ad5:	inc    edx
  425ad6:	loop   0x425a98
  425ad8:	mov    ds:0x75e158ca,eax
  425add:	(bad)  
  425ade:	loop   0x425a93
  425ae0:	rcl    BYTE PTR [edx+ebp*2+0xf395ad9],cl
  425ae7:	xor    eax,0x98523a2c
  425aec:	inc    edi
  425aed:	add    bl,BYTE PTR [edi+0x4155f290]
  425af3:	cmp    ebx,DWORD PTR [edi+edx*1+0x3c97b13e]
  425afa:	xchg   DWORD PTR [esi],edi
  425afc:	repnz out 0x29,eax
  425aff:	xlat   BYTE PTR ds:[ebx]
  425b00:	mov    bl,0xc5
  425b02:	jb     0x425b16
  425b04:	cmp    DWORD PTR [eax],ecx
  425b06:	push   ds
  425b07:	push   ebx
  425b08:	jnp    0x425b6f
  425b0a:	jl     0x425ae8
  425b0c:	clc    
  425b0d:	mov    ds:0x9206fb15,al
  425b12:	sub    DWORD PTR [ebp-0x68],ecx
  425b15:	cs cmp al,0xdf
  425b18:	push   edi
  425b19:	arpl   bp,si
  425b1b:	dec    eax
  425b1c:	loopne 0x425ae2
  425b1e:	aad    0x7c
  425b20:	pusha  
  425b21:	out    dx,al
  425b22:	mov    WORD PTR [eax],?
  425b24:	pop    eax
  425b25:	lods   eax,DWORD PTR ds:[esi]
  425b26:	std    
  425b27:	cmp    BYTE PTR [eax+ecx*4-0x7c],al
  425b2b:	pushf  
  425b2c:	mov    ebp,0x309391ed
  425b31:	aad    0x0
  425b33:	adc    al,BYTE PTR [esi]
  425b35:	inc    esi
  425b36:	and    al,0xc1
  425b38:	adc    ecx,0x97613b98
  425b3e:	out    0x27,al
  425b40:	push   edx
  425b41:	mov    WORD PTR [esi],ds
  425b43:	aad    0x20
  425b45:	xchg   ebx,eax
  425b46:	mov    eax,DWORD PTR [eax]
  425b48:	xor    eax,0xcb8130da
  425b4d:	ins    DWORD PTR es:[edi],dx
  425b4e:	loopne 0x425b78
  425b50:	add    ah,ch
  425b52:	outs   dx,BYTE PTR ds:[esi]
  425b54:	(bad)  
  425b55:	pop    ebp
  425b56:	dec    edi
  425b57:	mov    ebp,0x385bc708
  425b5c:	inc    edi
  425b5d:	mov    es:0x39a69876,al
  425b63:	push   es
  425b64:	bound  eax,QWORD PTR [edi]
  425b66:	xchg   ebx,eax
  425b67:	stos   DWORD PTR es:[edi],eax
  425b68:	int    0x7c
  425b6a:	leave  
  425b6b:	mov    esi,0x47845d03
  425b70:	xchg   DWORD PTR [edi+0x2573b8be],esi
  425b76:	inc    eax
  425b77:	sub    cl,BYTE PTR [ebp+edi*4-0x2f]
  425b7b:	sub    al,0x93
  425b7d:	ret    0xba84
  425b80:	mov    dh,0x8a
  425b82:	mov    esp,0x2f5ad244
  425b87:	sbb    BYTE PTR [edx+edx*1],ah
  425b8a:	mov    esp,0x80fd5c8
  425b8f:	xchg   edx,eax
  425b90:	pop    eax
  425b91:	imul   ebp,DWORD PTR [edi-0x2a531fa5],0xe5e87bad
  425b9b:	xor    al,0xf9
  425b9d:	inc    edx
  425b9e:	mov    esi,DWORD PTR [esp+ebp*1+0x5b8859a5]
  425ba5:	ins    BYTE PTR es:[edi],dx
  425ba6:	inc    ecx
  425ba7:	jmp    0x9c14:0xdb044cea
  425bae:	lds    edx,FWORD PTR [esi+0x47]
  425bb1:	cmp    BYTE PTR [ebx],ch
  425bb3:	inc    eax
  425bb4:	mov    edi,0xf6c24a22
  425bb9:	in     al,0x4b
  425bbb:	jle    0x425bfe
  425bbd:	stos   BYTE PTR es:[edi],al
  425bbe:	ficom  DWORD PTR [ebp+edx*4+0x1e33898a]
  425bc5:	mov    edi,0x297368a5
  425bca:	xor    eax,0x56a47e2a
  425bcf:	mov    bh,BYTE PTR [ecx+0x72]
  425bd2:	mov    dl,0x74
  425bd4:	mov    cl,0x77
  425bd6:	sbb    BYTE PTR [edi],ch
  425bd8:	ret    0x589c
  425bdb:	scas   eax,DWORD PTR es:[edi]
  425bdc:	lds    eax,FWORD PTR [edx]
  425bde:	fmul   st,st(2)
  425be0:	lahf   
  425be1:	cmp    al,0xe2
  425be3:	push   cs
  425be4:	sbb    esp,0xfc62e050
  425bea:	fmul   DWORD PTR [ecx+0x1de8a2d2]
  425bf0:	push   ecx
  425bf1:	cmp    bl,0xc9
  425bf4:	repz and eax,DWORD PTR [eax-0x15]
  425bf8:	aaa    
  425bf9:	fld    TBYTE PTR [eax+0x66]
  425bfc:	das    
  425bfd:	pop    ecx
  425bfe:	es pop esi
  425c00:	xchg   ecx,eax
  425c01:	add    ch,0xe
  425c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c05:	mov    esp,0x480f73fe
  425c0a:	add    BYTE PTR [edi],cl
  425c0c:	adc    ebx,eax
  425c0e:	and    al,0xe3
  425c10:	retf   
  425c11:	mov    cl,0x7b
  425c13:	push   esp
  425c14:	cli    
  425c15:	cmp    eax,DWORD PTR [edx+0x72]
  425c18:	jbe    0x425bac
  425c1a:	xchg   edx,eax
  425c1b:	loop   0x425c6b
  425c1d:	mov    al,0x98
  425c1f:	xor    dl,BYTE PTR [ebx+0x20]
  425c22:	loop   0x425c49
  425c24:	outs   dx,BYTE PTR ds:[esi]
  425c25:	pop    ds
  425c26:	push   edi
  425c27:	pushf  
  425c28:	inc    edi
  425c29:	ja     0x425c88
  425c2b:	rcl    esi,cl
  425c2d:	add    bl,BYTE PTR [ebx]
  425c2f:	cmc    
  425c30:	dec    eax
  425c31:	out    0x11,eax
  425c33:	xchg   ecx,eax
  425c34:	mov    WORD PTR [esp+edi*8],es
  425c37:	mov    al,0x83
  425c39:	pop    esi
  425c3a:	sti    
  425c3b:	pop    edx
  425c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c3d:	mov    edx,?
  425c3f:	pusha  
  425c40:	or     DWORD PTR [ebp-0x6b],0xe41f1993
  425c47:	mov    ecx,0xb9bea1
  425c4c:	mov    eax,0xbfd78d5f
  425c51:	xor    dh,BYTE PTR [ebx]
  425c53:	inc    edi
  425c54:	shl    DWORD PTR [eax],1
  425c56:	data16 (bad) 
  425c58:	jae    0x425c7c
  425c5a:	loop   0x425c1a
  425c5c:	and    al,0x3
  425c5e:	xchg   ebx,eax
  425c5f:	xor    eax,DWORD PTR [eax-0x40]
  425c62:	xchg   edx,eax
  425c63:	pop    esi
  425c64:	repz imul ecx,ebp,0x4544b8f2
  425c6b:	jle    0x425c3e
  425c6d:	push   ecx
  425c6e:	leave  
  425c6f:	out    0x68,eax
  425c71:	cdq    
  425c72:	pop    eax
  425c73:	mov    bh,BYTE PTR [ebx-0x702d1337]
  425c79:	xlat   BYTE PTR ds:[ebx]
  425c7a:	mov    DWORD PTR [ebx+0x47],esp
  425c7d:	(bad)  
  425c7e:	addr16 and esp,ecx
  425c81:	bound  esp,QWORD PTR [edi-0x3a6be675]
  425c87:	inc    ebx
  425c88:	push   edx
  425c89:	outs   dx,DWORD PTR ds:[esi]
  425c8a:	cld    
  425c8b:	lds    ebx,FWORD PTR [edi+eax*4+0x5b]
  425c8f:	adc    eax,0xcf45bdee
  425c94:	push   ebx
  425c95:	mov    esp,0x67827b4b
  425c9a:	sub    eax,0xb3d36e72
  425c9f:	ret    0xc400
  425ca2:	jae    0x425d10
  425ca4:	jle    0x425cfd
  425ca6:	inc    ecx
  425ca7:	pop    ds
  425ca8:	mov    dl,0xc2
  425caa:	dec    eax
  425cab:	test   DWORD PTR [edi-0x24da4554],esi
  425cb1:	push   0x6c
  425cb3:	imul   edi,DWORD PTR ds:0xeddb4e60,0x48
  425cba:	or     eax,0xec99f0e1
  425cbf:	mov    bh,0x8f
  425cc1:	clc    
  425cc2:	xor    DWORD PTR [ebp+0x16],edx
  425cc5:	cmp    ah,BYTE PTR [esi-0x5ad4ebb5]
  425ccb:	test   al,0xc7
  425ccd:	xchg   DWORD PTR [esi],ebp
  425ccf:	lahf   
  425cd0:	mov    ecx,0x838f56b9
  425cd5:	ins    DWORD PTR es:[edi],dx
  425cd6:	add    al,0xc9
  425cd8:	out    dx,al
  425cd9:	mov    ecx,ss
  425cdb:	mov    edi,0x58dbff83
  425ce0:	cmp    al,0xe2
  425ce2:	int3   
  425ce3:	stos   BYTE PTR es:[edi],al
  425ce4:	sub    ebp,esi
  425ce6:	mov    eax,ds:0xb12f1ca6
  425ceb:	shl    DWORD PTR [edi-0x65],1
  425cee:	mov    edx,0x22561510
  425cf3:	adc    bh,BYTE PTR [ebx+eax*1-0x56d6f13a]
  425cfa:	jnp    0x425cca
  425cfc:	xor    dh,bl
  425cfe:	mov    bh,0xfa
  425d00:	out    0xab,eax
  425d02:	inc    ecx
  425d03:	sbb    DWORD PTR [ecx+0xc21a],edx
	...
  425d11:	pop    edx
  425d12:	push   ecx
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	lock sub BYTE PTR fs:[edx],ah
  425d1f:	pop    ds
  425d20:	loop   0x425d83
  425d22:	aam    0x1
  425d24:	add    BYTE PTR [esi+0x16000003],ch
  425d2a:	xchg   ecx,eax
  425d2b:	push   edi
  425d2c:	xchg   edi,eax
  425d2d:	(bad)  
  425d2e:	imul   ebx,ebx,0x6
  425d31:	jge    0x425d14
  425d33:	inc    edx
  425d34:	stos   BYTE PTR es:[edi],al
  425d35:	push   esi
  425d36:	mov    cl,0x90
  425d38:	ins    DWORD PTR es:[edi],dx
  425d39:	ret    
  425d3a:	sub    BYTE PTR [ecx-0x762b9ce2],ch
  425d40:	test   BYTE PTR [ebp+0xf3975d4],bh
  425d46:	in     eax,0xfb
  425d48:	mov    ds:0x30f1bd6,eax
  425d4d:	xor    cl,BYTE PTR [ebp-0x24]
  425d50:	dec    ebx
  425d51:	mov    dl,0xe9
  425d53:	aam    0x80
  425d55:	lock stos BYTE PTR es:[edi],al
  425d57:	push   0xffffffb8
  425d59:	fdivr  DWORD PTR [edx-0x168aaa36]
  425d5f:	scas   eax,DWORD PTR es:[edi]
  425d60:	cmp    eax,0x9e7ed41c
  425d65:	xor    DWORD PTR [esi-0x2c51b849],ebp
  425d6b:	mov    bh,0x77
  425d6d:	and    ch,BYTE PTR [edx+0x49ed84bd]
  425d73:	mov    esp,ecx
  425d75:	pop    es
  425d76:	pop    eax
  425d77:	inc    esi
  425d78:	sbb    bh,BYTE PTR [edi]
  425d7a:	cwde   
  425d7b:	cmp    dl,BYTE PTR [esi-0x7005e426]
  425d81:	cmp    cl,BYTE PTR [ebx-0x55e651cb]
  425d87:	xchg   ecx,eax
  425d88:	sub    al,BYTE PTR [edi-0x65]
  425d8b:	hlt    
  425d8c:	push   0x8
  425d8e:	sub    bh,BYTE PTR [ebp+0x4c2643d7]
  425d94:	repnz dec edi
  425d96:	adc    BYTE PTR [edx-0x1c995b80],ch
  425d9c:	pop    edx
  425d9d:	sbb    DWORD PTR [ecx+edi*1+0x5883b5a5],esi
  425da4:	xchg   ecx,eax
  425da5:	leave  
  425da6:	mov    eax,ds:0x50cc0254
  425dab:	outs   dx,DWORD PTR ds:[esi]
  425dac:	push   0xf67169d7
  425db1:	mov    edi,0xf8767367
  425db6:	in     al,0xfb
  425db8:	or     eax,0xd8519ad7
  425dbd:	mov    ch,0xfd
  425dbf:	adc    eax,0xa6d9a129
  425dc4:	jne    0x425d7e
  425dc6:	jae    0x425e01
  425dc8:	imul   ecx,edx,0xffffffde
  425dcb:	out    0xc9,al
  425dcd:	mov    ebx,0x7cd68f3
  425dd2:	iret   
  425dd3:	daa    
  425dd4:	test   BYTE PTR [edx+0x2d],0x34
  425dd8:	test   DWORD PTR [ecx],0xa57bf111
  425dde:	or     ch,bl
  425de0:	aas    
  425de1:	push   eax
  425de2:	jecxz  0x425e49
  425de4:	hlt    
  425de5:	leave  
  425de6:	or     al,0x2d
  425de8:	jmp    0x92ac:0x5a60cb3d
  425def:	jecxz  0x425e0e
  425df1:	stos   BYTE PTR es:[edi],al
  425df2:	scas   eax,DWORD PTR es:[edi]
  425df3:	loope  0x425de7
  425df5:	mov    ds:0x30fcceb5,al
  425dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dfb:	pop    edx
  425dfc:	sbb    eax,0xfeb2e030
  425e01:	das    
  425e02:	std    
  425e03:	aas    
  425e04:	into   
  425e05:	sbb    al,0x15
  425e07:	fisubr DWORD PTR [ecx+edi*2+0x5076ec4d]
  425e0e:	lods   al,BYTE PTR ds:[esi]
  425e0f:	sub    eax,0x117d135
  425e14:	or     eax,0x5d17858c
  425e19:	dec    edx
  425e1a:	sub    al,0x86
  425e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e1d:	sbb    eax,0x25169984
  425e22:	mov    ds:0x4763ac0a,al
  425e27:	mov    ah,0xc
  425e29:	dec    eax
  425e2a:	pop    esp
  425e2b:	and    bl,BYTE PTR [ecx-0x75142ea6]
  425e31:	sub    edi,DWORD PTR [ebp-0x31]
  425e34:	je     0x425e2a
  425e36:	ror    DWORD PTR [eax+0x20],1
  425e39:	ja     0x425e72
  425e3b:	cli    
  425e3c:	mov    al,0x2f
  425e3e:	fild   QWORD PTR [edx+0x3d46fb4e]
  425e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e45:	dec    edi
  425e46:	popf   
  425e47:	inc    esi
  425e48:	pushf  
  425e49:	es out 0xe3,al
  425e4c:	mov    ds:0x322ea822,al
  425e51:	cmp    esi,edi
  425e53:	test   al,0x49
  425e55:	xor    dl,0xf6
  425e58:	test   DWORD PTR [ecx],esi
  425e5a:	fmul   DWORD PTR [ecx+ecx*1-0x77]
  425e5e:	or     DWORD PTR [edx-0x63],esp
  425e61:	(bad)  
  425e62:	fist   WORD PTR [edi]
  425e64:	pusha  
  425e65:	inc    eax
  425e66:	or     al,0xb0
  425e68:	popf   
  425e69:	mov    esp,0xdc27800f
  425e6e:	mov    bh,0xd6
  425e70:	dec    eax
  425e71:	jno    0x425eb0
  425e73:	add    esp,DWORD PTR [ecx+esi*1]
  425e76:	leave  
  425e77:	mov    eax,eax
  425e79:	out    dx,eax
  425e7a:	add    ebp,DWORD PTR [ecx+0xdf7bf67]
  425e80:	cdq    
  425e81:	ja     0x425e73
  425e83:	stos   DWORD PTR es:[edi],eax
  425e84:	popf   
  425e85:	push   ss
  425e86:	clc    
  425e87:	push   esi
  425e88:	hlt    
  425e89:	sbb    eax,0x96e903eb
  425e8e:	lock arpl bx,si
  425e91:	adc    edi,DWORD PTR [ebx]
  425e93:	mov    ebp,DWORD PTR ds:0x4542244c
  425e99:	cld    
  425e9a:	lods   eax,DWORD PTR ds:[esi]
  425e9b:	and    dl,BYTE PTR [edx+0x4c01699b]
  425ea1:	daa    
  425ea2:	or     ecx,DWORD PTR [edx+eax*1+0x32]
  425ea6:	outs   dx,BYTE PTR ds:[esi]
  425ea7:	inc    ecx
  425ea8:	imul   ecx,DWORD PTR [ecx],0xe8d9790
  425eae:	push   eax
  425eaf:	mov    esp,0xf7757bf0
  425eb4:	repz mov bh,BYTE PTR [ecx-0x66]
  425eb8:	add    al,0x54
  425eba:	ss lock and ecx,eax
  425ebe:	in     eax,0x1d
  425ec0:	and    BYTE PTR [ecx+0x5ac333a6],dh
  425ec6:	sub    cl,BYTE PTR [edx+0x5]
  425ec9:	add    BYTE PTR [edx],al
  425ecb:	push   eax
  425ecc:	mov    eax,ds:0xc15f30fa
  425ed1:	xchg   ebx,eax
  425ed2:	mov    al,0xe5
  425ed4:	jb     0x425ea3
  425ed6:	int    0x23
  425ed8:	xchg   DWORD PTR [ebx],edx
  425eda:	jl     0x425ed3
  425edc:	leave  
  425edd:	jle    0x425eff
  425edf:	push   0x93fcb335
  425ee4:	jmp    0xd4f89624
  425ee9:	sub    edi,DWORD PTR [edi+0x1d]
  425eec:	mov    ecx,0x8ca4961b
  425ef1:	jne    0x425ec3
  425ef3:	or     bh,BYTE PTR [ecx]
  425ef5:	shl    BYTE PTR [eax],cl
  425ef7:	popa   
  425ef8:	in     eax,0xf4
  425efa:	xchg   edi,eax
  425efb:	addr16 (bad) 
  425efd:	ja     0x425ea9
  425eff:	xchg   ebp,eax
  425f00:	push   ebx
  425f01:	mov    al,ds:0x34710e5d
  425f06:	xchg   BYTE PTR [ebx-0x75238fff],cl
  425f0c:	jns    0x425eec
  425f0e:	sbb    eax,0x91213d54
  425f13:	shl    DWORD PTR [esi+0x63],0x54
  425f17:	push   eax
  425f18:	or     cl,BYTE PTR [edx-0xb24ce2f]
  425f1e:	push   es
  425f1f:	ja     0x425f4d
  425f21:	test   eax,0xcab02f34
  425f26:	(bad)  
  425f28:	jb     0x425f76
  425f2a:	jmp    FWORD PTR [ebx+0x73457e64]
  425f30:	outs   dx,BYTE PTR ds:[esi]
  425f31:	test   BYTE PTR [ecx],0x11
  425f34:	mov    cl,BYTE PTR [ebp+0x7d04ab97]
  425f3a:	aad    0xf
  425f3c:	dec    ebp
  425f3d:	int3   
  425f3e:	fwait
  425f3f:	push   esi
  425f40:	dec    ebp
  425f41:	fiadd  WORD PTR [edx-0x78c3a238]
  425f47:	scas   al,BYTE PTR es:[edi]
  425f48:	cdq    
  425f49:	stos   BYTE PTR es:[edi],al
  425f4a:	sub    esp,DWORD PTR [ebx-0x43]
  425f4d:	xor    al,0xea
  425f4f:	sahf   
  425f50:	xchg   esp,eax
  425f51:	add    bh,BYTE PTR [eax+ebp*2+0x77612a20]
  425f58:	fidiv  WORD PTR [eax-0x209ca99]
  425f5e:	mov    DWORD PTR [ebx+esi*1+0x17],edx
  425f62:	push   eax
  425f63:	mov    al,ds:0xb659df9e
  425f68:	push   ecx
  425f69:	xor    al,0x24
  425f6b:	mov    ah,0x2d
  425f6d:	pop    eax
  425f6e:	sub    al,0x98
  425f70:	sbb    al,0xcf
  425f72:	or     al,0x6c
  425f74:	not    BYTE PTR [edx+0x47a1eaf3]
  425f7a:	aaa    
  425f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f7c:	cmovae ecx,DWORD PTR [ebp-0x72]
  425f80:	mov    edx,0x5c68c63f
  425f85:	scas   al,BYTE PTR es:[edi]
  425f86:	or     ah,BYTE PTR [edi+ecx*1-0x2627856c]
  425f8d:	xor    al,0xf2
  425f8f:	push   cs
  425f90:	add    al,0x7a
  425f92:	out    0xf,eax
  425f94:	xor    DWORD PTR [edx-0x19ffa28d],esp
  425f9a:	rol    bl,cl
  425f9c:	jne    0x425f63
  425f9e:	add    eax,eax
  425fa0:	hlt    
  425fa1:	leave  
  425fa2:	push   0xffffffe3
  425fa4:	mov    bl,0x2e
  425fa6:	test   DWORD PTR [ecx],edx
  425fa8:	jmp    0x4f568f1c
  425fad:	out    dx,al
  425fae:	inc    eax
  425faf:	je     0x425f6c
  425fb1:	loop   0x425f6a
  425fb3:	inc    ecx
  425fb4:	mov    dh,ch
  425fb6:	push   cs
  425fb7:	div    BYTE PTR [ebx]
  425fb9:	push   cs
  425fba:	sti    
  425fbb:	adc    eax,0x34e2a217
  425fc0:	inc    eax
  425fc1:	jo     0x425f80
  425fc3:	dec    edi
  425fc4:	in     eax,0x3e
  425fc6:	aas    
  425fc7:	mov    eax,ds:0x2ab0b57
  425fcc:	aas    
  425fcd:	inc    ebx
  425fce:	adc    BYTE PTR [ebx],0x47
  425fd1:	mov    DWORD PTR [eax],eax
  425fd3:	loopne 0x425f96
  425fd5:	lahf   
  425fd6:	xor    DWORD PTR [edi-0x66572520],esi
  425fdc:	jb     0x42604f
  425fde:	push   esi
  425fdf:	es push ebp
  425fe1:	mov    esi,0xc449ae37
  425fe6:	xor    DWORD PTR [ecx],edi
  425fe8:	cmp    eax,0xe459da9c
  425fed:	rol    BYTE PTR [esi-0x6a439442],1
  425ff3:	xchg   ebp,eax
  425ff4:	pop    ebx
  425ff5:	pop    esp
  425ff6:	sub    cl,ah
  425ff8:	pop    edx
  425ff9:	push   esi
  425ffa:	pop    edi
  425ffb:	xchg   esp,eax
  425ffc:	stos   BYTE PTR es:[edi],al
  425ffd:	ja     0x425fd3
  425fff:	nop
  426000:	ret    
  426001:	mov    ebx,0xe33cbb81
  426006:	jmp    0xeeb79c1c
  42600b:	sub    eax,0xe01fa2af
  426010:	xlat   BYTE PTR ds:[ebx]
  426011:	add    ch,cl
  426013:	add    eax,0x7bd6dac9
  426018:	(bad)  
  426019:	or     eax,0x2f33a8ec
  42601e:	iret   
  42601f:	jecxz  0x42609f
  426021:	mov    bl,0x16
  426023:	push   ds
  426024:	jmp    0x14c3:0x74b477ed
  42602b:	les    esp,FWORD PTR [esi-0x7b7488cd]
  426031:	int    0x20
  426033:	inc    eax
  426034:	shl    BYTE PTR [esi-0x6e125a97],cl
  42603a:	sub    BYTE PTR [edi],al
  42603c:	jmp    0xe77993bc
  426041:	stos   BYTE PTR es:[edi],al
  426042:	add    DWORD PTR [ebx+edx*2],esi
  426045:	loope  0x426090
  426047:	inc    ecx
  426048:	or     cl,BYTE PTR [eax-0x79e056db]
  42604e:	test   DWORD PTR [edi+ebx*4+0x3d996d39],eax
  426055:	mov    edx,0x7be512a3
  42605a:	inc    ecx
  42605b:	cmp    al,0x3d
  42605d:	cs pop es
  42605f:	jb     0x426030
  426061:	sub    esi,DWORD PTR [ebx*8-0x690a10a2]
  426068:	mov    ecx,0x3f501769
  42606d:	rcr    BYTE PTR [edx+0x2704650d],cl
  426073:	xchg   ebx,eax
  426074:	iret   
  426075:	pop    esp
  426076:	mov    ds:0x48e0b89b,al
  42607b:	lock inc edi
  42607d:	(bad)  
  42607e:	int3   
  42607f:	jle    0x42608f
  426081:	ins    DWORD PTR es:[edi],dx
  426082:	loop   0x426102
  426084:	and    ebx,DWORD PTR [ebx+0xa0e91]
  42608a:	mov    ecx,0x54c542bd
  42608f:	and    BYTE PTR [edi],dh
  426091:	call   0x6d69dff1
  426096:	pop    esi
  426097:	sub    eax,0xe441d2
  42609c:	data16 or al,0x93
  42609f:	sar    DWORD PTR [esi],1
  4260a1:	sub    eax,0xad63d098
  4260a6:	jbe    0x426053
  4260a8:	inc    eax
  4260a9:	xchg   ebp,eax
  4260aa:	or     al,0x42
  4260ac:	shl    BYTE PTR [eax+0x3a80b1c7],1
  4260b2:	call   0x57a9:0x1ca55152
  4260b9:	mov    eax,0x43756bd
  4260be:	jle    0x4260f8
  4260c0:	cdq    
  4260c1:	and    ebx,ebx
  4260c3:	sub    DWORD PTR [ecx],esi
  4260c5:	aas    
  4260c6:	fmul   QWORD PTR cs:[esi]
  4260c9:	sbb    ecx,eax
  4260cb:	adc    ebp,edi
  4260cd:	nop
  4260ce:	dec    edx
  4260cf:	inc    ecx
  4260d0:	and    dl,ah
  4260d2:	(bad)  
  4260d3:	pop    eax
  4260d4:	push   ss
  4260d5:	or     DWORD PTR [esi],0x0
  4260db:	add    BYTE PTR [eax],al
  4260dd:	add    BYTE PTR [eax],al
  4260df:	add    BYTE PTR [eax],al
  4260e1:	sbb    ch,al
  4260e3:	mov    ebx,esp
  4260e5:	sti    
  4260e6:	call   FWORD PTR [edi-0x12]
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    ebp,DWORD PTR [esi+0xf7bb8a9]
  4260f2:	fadd   DWORD PTR [ecx]
  4260f4:	add    BYTE PTR [esi-0x68fffffd],ch
  4260fa:	into   
  4260fb:	xor    al,0xdb
  4260fd:	push   ebp
  4260fe:	or     BYTE PTR [ebx+0x56],ch
  426101:	sub    eax,0x5e87cb2e
  426106:	inc    ebp
  426107:	cmp    cl,BYTE PTR [eax-0x2]
  42610a:	ins    DWORD PTR es:[edi],dx
  42610b:	cld    
  42610c:	and    eax,0x7b7a153c
  426111:	cwde   
  426112:	cmp    ecx,eax
  426114:	aas    
  426115:	into   
  426116:	sbb    DWORD PTR [ebx+0x10],ebx
  426119:	mov    eax,DWORD PTR [esi+0x3d04bb08]
  42611f:	push   ecx
  426120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426121:	jb     0x4260a8
  426123:	mov    edi,0x2af60e98
  426128:	and    esi,0x75
  42612b:	xchg   ebp,eax
  42612c:	cmc    
  42612d:	addr16 aad 0xfd
  426130:	push   esi
  426131:	cmp    BYTE PTR [edx-0x48473f74],bl
  426137:	aad    0x41
  426139:	shl    BYTE PTR [edi],cl
  42613b:	and    ah,BYTE PTR [edx+0x5345dbcc]
  426141:	outs   dx,BYTE PTR ds:[esi]
  426142:	dec    edi
  426143:	xor    eax,0x4ad2849f
  426148:	push   eax
  426149:	pop    edi
  42614a:	iret   
  42614b:	or     bl,BYTE PTR [edx+ebx*4+0x24]
  42614f:	lahf   
  426150:	and    esp,DWORD PTR [esi]
  426152:	xchg   edx,eax
  426153:	inc    ecx
  426154:	test   DWORD PTR [ebx-0x5f],0x51cb9609
  42615b:	push   ebp
  42615c:	in     al,dx
  42615d:	cmp    DWORD PTR [ecx],0xffffff8f
  426160:	(bad)  
  426161:	aaa    
  426162:	sar    DWORD PTR [edi-0x35c6eb63],1
  426168:	cmc    
  426169:	mov    esp,0x843da79f
  42616e:	push   ss
  42616f:	jg     0x426129
  426171:	dec    esp
  426172:	sbb    DWORD PTR [ebp+0x2a29de7a],0xffffff82
  426179:	inc    ebp
  42617a:	xor    DWORD PTR [ecx],edx
  42617c:	sub    al,BYTE PTR [edi-0x8]
  42617f:	rcr    BYTE PTR [ebx-0x7f],1
  426182:	adc    eax,0x17b2a58e
  426187:	aad    0xe4
  426189:	lahf   
  42618a:	mov    al,0xb6
  42618c:	rol    esp,cl
  42618e:	xor    ebp,ebx
  426190:	fisttp QWORD PTR [edx-0x5353bf64]
  426196:	xchg   ebx,edx
  426198:	pop    ecx
  426199:	mov    edi,0xa5e7e292
  42619e:	jne    0x426122
  4261a0:	add    DWORD PTR [ebp-0xf],0x71
  4261a4:	inc    eax
  4261a5:	jnp    0x4261df
  4261a7:	mov    ch,0x4f
  4261a9:	ss enter 0xdf7e,0x67
  4261ae:	sbb    ecx,ecx
  4261b0:	inc    ecx
  4261b1:	cmp    al,0x75
  4261b3:	push   0x24
  4261b5:	mov    al,ds:0x44844120
  4261ba:	jg     0x42618b
  4261bc:	(bad)  
  4261bd:	sub    eax,0x4d9db84e
  4261c2:	das    
  4261c3:	ret    0x3123
  4261c6:	cdq    
  4261c7:	cli    
  4261c8:	(bad)  
  4261c9:	bound  edx,QWORD PTR [esp+ecx*1+0x4c0d5ff]
  4261d0:	adc    al,0xda
  4261d2:	arpl   WORD PTR [edi],si
  4261d4:	mov    eax,0xcdff78ec
  4261d9:	ja     0x4261d0
  4261db:	push   ds
  4261dc:	mov    ecx,0x6d1900ac
  4261e1:	ins    DWORD PTR es:[edi],dx
  4261e2:	mov    esi,0xffb5f499
  4261e7:	rcr    dh,cl
  4261e9:	scas   eax,DWORD PTR es:[edi]
  4261ea:	push   es
  4261eb:	test   BYTE PTR [ebx-0x2d],dh
  4261ee:	or     dl,dh
  4261f0:	add    al,0x3a
  4261f2:	in     al,dx
  4261f3:	xor    eax,0xa6340ade
  4261f8:	imul   edx,DWORD PTR [esi],0xe3483e59
  4261fe:	add    al,BYTE PTR [ebx]
  426200:	stos   DWORD PTR es:[edi],eax
  426201:	push   esi
  426202:	sbb    edi,edx
  426204:	dec    edx
  426205:	test   ebx,esi
  426207:	jge    0x42618f
  426209:	shl    DWORD PTR ds:0xc687b734,0x78
  426210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426212:	dec    ebx
  426213:	jae    0x42621e
  426215:	or     al,0xcf
  426217:	cmc    
  426218:	push   es
  426219:	push   ecx
  42621a:	ins    BYTE PTR es:[edi],dx
  42621b:	push   0xffffffc8
  42621d:	dec    cl
  42621f:	jmp    0x426242
  426221:	dec    ecx
  426222:	lds    ebp,FWORD PTR [ebx+eiz*4]
  426225:	outs   dx,DWORD PTR ds:[esi]
  426226:	sub    DWORD PTR [ecx+0x78],ebp
  426229:	jge    0x4262a6
  42622b:	retf   
  42622c:	mov    bl,0x94
  42622e:	cmp    BYTE PTR [eax-0x64],dl
  426231:	xchg   edi,eax
  426232:	call   0xd8b28111
  426237:	xchg   esp,eax
  426238:	shl    DWORD PTR [edi-0x4e680e0e],cl
  42623e:	pop    edx
  42623f:	jp     0x4261c6
  426241:	mov    dl,0x12
  426243:	std    
  426244:	(bad)  
  426245:	lea    edx,[ecx+ebp*1]
  426248:	fisubr DWORD PTR [ebx]
  42624a:	fs xchg esi,eax
  42624c:	ret    0xacbb
  42624f:	lods   eax,DWORD PTR ds:[esi]
  426250:	lahf   
  426251:	mov    WORD PTR [ecx],?
  426253:	pop    ecx
  426254:	jnp    0x4262cd
  426256:	mov    al,ds:0x8f5aa01
  42625b:	stos   BYTE PTR es:[edi],al
  42625c:	rol    ecx,cl
  42625e:	ret    0x35ab
  426261:	mov    bl,0x24
  426263:	gs dec esp
  426265:	pop    esp
  426266:	push   esp
  426267:	repz retf 
  426269:	mov    ah,0x24
  42626b:	mul    DWORD PTR ds:0x8b434732
  426271:	mov    al,0x83
  426273:	xor    al,0x5c
  426275:	push   edi
  426276:	popf   
  426277:	leave  
  426278:	test   dl,0xf1
  42627b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42627c:	dec    ebp
  42627d:	cld    
  42627e:	lock dec edx
  426280:	test   al,0x57
  426282:	(bad)  
  426283:	cld    
  426284:	mov    gs,WORD PTR [ebx-0x19]
  426287:	add    eax,0x352e3706
  42628c:	ret    
  42628d:	adc    al,0x2c
  42628f:	mov    ebx,0x5282dc56
  426294:	adc    dl,dl
  426296:	inc    esi
  426297:	out    0x4a,al
  426299:	repnz shr BYTE PTR [eax],1
  42629c:	(bad)  
  42629d:	es out 0xfa,al
  4262a0:	leave  
  4262a1:	dec    ecx
  4262a2:	mov    al,0x8
  4262a4:	xchg   ebp,eax
  4262a5:	adc    ebx,DWORD PTR [edi+0x6b]
  4262a8:	mov    ecx,0xd0a4da9c
  4262ad:	es pop ebx
  4262b0:	mov    esp,0x36345e1c
  4262b5:	jb     0x426248
  4262b7:	add    al,bl
  4262b9:	jmp    0xb36f1649
  4262be:	sub    DWORD PTR [edi],0xffffff9d
  4262c1:	add    eax,0xe4b08857
  4262c6:	stos   DWORD PTR es:[edi],eax
  4262c7:	into   
  4262c8:	push   cs
  4262c9:	mov    ds:0x6a177eff,eax
  4262ce:	adc    edi,esi
  4262d0:	stos   BYTE PTR es:[edi],al
  4262d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262d2:	or     eax,0xf2a26f85
  4262d7:	and    al,ah
  4262d9:	xor    BYTE PTR ds:[ebp+eiz*2+0x10],bh
  4262de:	or     al,0x5
  4262e0:	xchg   esp,eax
  4262e1:	ds das 
  4262e3:	mov    WORD PTR fs:[ecx+0x61],fs
  4262e7:	mov    eax,ds:0x23c0aaed
  4262ec:	mov    ah,0x6c
  4262ee:	mov    ecx,0x80f1c23b
  4262f3:	inc    BYTE PTR [ebx-0x2a]
  4262f6:	jmp    0x4262a9
  4262f8:	out    dx,eax
  4262f9:	addr16 mov edi,0xcbd6efb7
  4262ff:	int3   
  426300:	xor    DWORD PTR [ebx],0x8f83c0d7
  426306:	fidivr WORD PTR ss:[ebp-0x6d]
  42630a:	cmp    BYTE PTR [ebp-0x47],bl
  42630d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42630e:	adc    ebx,esi
  426310:	jbe    0x426344
  426312:	pop    ebp
  426313:	push   ecx
  426314:	repnz and esi,ecx
  426317:	fst    QWORD PTR [edx]
  426319:	sbb    al,0x1c
  42631b:	arpl   bx,di
  42631d:	mov    bl,0xb0
  42631f:	jb     0x426329
  426321:	push   ebx
  426322:	lods   al,BYTE PTR ds:[esi]
  426323:	add    DWORD PTR [eax-0x654cf92],eax
  426329:	pop    ds
  42632a:	jbe    0x426343
  42632c:	jae    0x426390
  42632e:	in     al,0xb3
  426330:	sub    BYTE PTR [edi],bh
  426332:	push   cs
  426333:	mov    dh,0xc0
  426335:	pop    ds
  426336:	mov    BYTE PTR [edx],0xb1
  426339:	sub    al,0x5e
  42633b:	retf   0x7373
  42633e:	stos   BYTE PTR es:[edi],al
  42633f:	je     0x4263ad
  426341:	repnz xor ebx,DWORD PTR [esi+0x4ab6d0de]
  426348:	fs inc ebx
  42634a:	test   BYTE PTR [ebx],dl
  42634c:	jno    0x426362
  42634e:	push   ecx
  42634f:	jmp    0x3257327f
  426354:	frstor [esi]
  426356:	repz in al,0xd
  426359:	jmp    0x95bbb8c3
  42635e:	add    ah,BYTE PTR [ecx+0x4]
  426361:	(bad)  
  426362:	outs   dx,DWORD PTR ds:[esi]
  426363:	mov    ebx,eax
  426365:	or     eax,0xa5debf28
  42636a:	push   ebp
  42636b:	pop    es
  42636c:	repz dec ecx
  42636e:	and    ah,ah
  426370:	cmc    
  426371:	sub    DWORD PTR [eax-0x37ff2916],ebx
  426377:	pop    ebx
  426378:	mov    ebx,0x329eb9d2
  42637d:	aad    0xc9
  42637f:	sbb    bh,dl
  426381:	dec    esi
  426382:	les    ebx,FWORD PTR [esp+edi*8-0x34]
  426386:	js     0x42635b
  426388:	sbb    DWORD PTR [eax+0x2782f349],ebp
  42638e:	(bad)  
  42638f:	mov    ds:0x16630c63,al
  426394:	lock ret 0xb19e
  426398:	add    al,0x3d
  42639a:	es mov ecx,0x5baa47e2
  4263a0:	dec    ebp
  4263a1:	add    al,0x68
  4263a3:	jg     0x4263c4
  4263a5:	fadd   st(3),st
  4263a7:	fucomip st,st(0)
  4263a9:	(bad)  
  4263aa:	scas   al,BYTE PTR es:[edi]
  4263ab:	cld    
  4263ac:	xlat   BYTE PTR ds:[ebx]
  4263ad:	das    
  4263ae:	push   ebx
  4263af:	mov    eax,0xe10cfb8c
  4263b4:	ins    BYTE PTR es:[edi],dx
  4263b5:	mov    ah,0x2b
  4263b7:	out    0x52,eax
  4263b9:	mov    ds:0x2056f279,al
  4263be:	in     al,dx
  4263bf:	dec    ebx
  4263c0:	mov    ebp,0x2682156c
  4263c5:	xor    al,0xd8
  4263c7:	jp     0x4263fa
  4263c9:	add    esp,DWORD PTR [ecx]
  4263cb:	jne    0x42637a
  4263cd:	bound  ebp,QWORD PTR [esi+ecx*4-0x4e09c975]
  4263d4:	bound  esi,QWORD PTR ds:0xd2d25658
  4263da:	repnz cdq 
  4263dc:	mov    ds:0xd35248c5,al
  4263e1:	out    dx,eax
  4263e2:	(bad)
  4263e5:	(bad)
  4263e8:	xchg   ecx,eax
  4263e9:	jns    0x4263c8
  4263eb:	add    DWORD PTR [ebp+0x16b58dfb],ecx
  4263f1:	popf   
  4263f2:	sub    al,0x2c
  4263f4:	mov    ds:0x1e9cb06b,al
  4263f9:	add    DWORD PTR [ebx],esp
  4263fb:	lock scas eax,DWORD PTR es:[edi]
  4263fd:	(bad)  
  4263fe:	retf   0x855
  426401:	pop    eax
  426402:	lock sub eax,DWORD PTR [esi]
  426405:	out    dx,al
  426406:	and    esp,edx
  426408:	inc    ecx
  426409:	mov    eax,0xaa8eee8c
  42640e:	ins    BYTE PTR es:[edi],dx
  42640f:	push   edx
  426410:	inc    edi
  426411:	(bad)  
  426412:	loopne 0x4263f7
  426414:	shl    DWORD PTR [ebx],1
  426416:	iret   
  426417:	pop    ecx
  426418:	push   ebp
  426419:	xchg   ebp,eax
  42641a:	push   0x29
  42641c:	mov    ebx,0xbbc66a2f
  426421:	and    ecx,DWORD PTR [ebp-0x7]
  426424:	jl     0x4263bf
  426426:	nop
  426427:	and    eax,0xb6693fd9
  42642c:	add    esi,eax
  42642e:	xchg   esi,eax
  42642f:	cwde   
  426430:	xor    dl,BYTE PTR [eax-0x6d]
  426433:	pop    ebp
  426434:	dec    eax
  426435:	or     eax,0x8bff6185
  42643a:	inc    ebx
  42643b:	sbb    dh,BYTE PTR [ebp+edi*1-0x75496bd0]
  426442:	test   ebp,0x98e97c0b
  426448:	sub    DWORD PTR [ebx],edi
  42644a:	jne    0x426405
  42644c:	mov    BYTE PTR [edi+0x34],ah
  42644f:	sub    DWORD PTR [edi+0x53a07b4],esp
  426455:	fdivr  DWORD PTR [ecx+ebx*2]
  426458:	inc    eax
  426459:	loope  0x4264b5
  42645b:	loop   0x4264d2
  42645d:	mov    ch,0xe5
  42645f:	adc    al,0xd7
  426461:	xlat   BYTE PTR ds:[ebx]
  426462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426463:	push   edx
  426464:	dec    edi
  426465:	mov    ecx,DWORD PTR [ecx]
  426467:	push   esi
  426468:	mov    edx,0xaa471cc6
  42646d:	fcomip st,st(1)
  42646f:	in     eax,dx
  426470:	hlt    
  426471:	or     esi,edi
  426473:	cdq    
  426474:	sbb    BYTE PTR [eax],bl
  426476:	fldenv ds:0xbfd56ec8
  42647c:	add    eax,0x23dbefd
  426481:	shr    ch,1
  426483:	rcl    DWORD PTR [edi-0x57],1
  426486:	(bad)
  42648a:	or     al,BYTE PTR [edi]
  42648c:	add    ah,ah
  42648e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42648f:	popf   
  426490:	push   edx
  426491:	out    0xac,eax
  426493:	out    dx,al
  426494:	iret   
  426495:	jo     0x426417
  426497:	and    BYTE PTR [ecx],0x8e
  42649a:	shr    DWORD PTR [ecx-0x3f],1
  42649d:	cmovo  edi,DWORD PTR [ebp-0x42]
  4264a1:	dec    ebp
  4264a2:	adc    al,0xa1
  4264a4:	fadd   st,st(7)
  4264a6:	jne    0x4264a8
	...
  4264b0:	add    dl,ah
  4264b2:	jnp    0x426505
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     eax,DWORD PTR [edx-0x4220f9e2]
  4264c2:	fild   DWORD PTR [ecx]
  4264c4:	add    BYTE PTR [esi+0x29000003],ch
  4264ca:	mov    bh,0x50
  4264cc:	les    ebx,FWORD PTR [esi]
  4264ce:	stos   BYTE PTR es:[edi],al
  4264cf:	nop
  4264d0:	xlat   BYTE PTR ds:[ebx]
  4264d1:	jg     0x42649d
  4264d3:	sti    
  4264d4:	aas    
  4264d5:	enter  0xab4b,0x13
  4264d9:	mov    ah,0x26
  4264db:	mov    edi,0x28d9c243
  4264e0:	(bad)  
  4264e1:	repz or eax,0x16047034
  4264e7:	sti    
  4264e8:	out    dx,al
  4264e9:	test   al,0x2c
  4264eb:	xchg   esp,eax
  4264ec:	fs mov ah,0x55
  4264ef:	(bad)
  4264f2:	imul   ebp,ebp,0x14
  4264f5:	in     al,0xf8
  4264f7:	sar    BYTE PTR [esi+0x44],1
  4264fa:	fbld   TBYTE PTR [esi+ecx*1+0x468c471d]
  426501:	sbb    DWORD PTR [edi+0x56],0x5c
  426505:	and    bl,ch
  426507:	ins    DWORD PTR es:[edi],dx
  426508:	jns    0x426515
  42650a:	adc    al,0xe1
  42650c:	(bad)  
  42650d:	jmp    0x131614e7
  426512:	clc    
  426513:	clc    
  426514:	cmp    DWORD PTR [eax+0x466c7053],ebx
  42651a:	icebp  
  42651b:	ins    BYTE PTR es:[edi],dx
  42651c:	aaa    
  42651d:	pop    ebx
  42651e:	shr    BYTE PTR [esi+0x9f2cdaa],1
  426524:	cmp    eax,0x57632918
  426529:	mov    edi,0xdab9e3f2
  42652e:	push   edx
  42652f:	push   ecx
  426530:	xchg   BYTE PTR [edi],cl
  426532:	fld    TBYTE PTR [ebp-0x5d]
  426535:	ds hlt 
  426537:	xor    al,0xfe
  426539:	jbe    0x4264fc
  42653b:	pop    ecx
  42653c:	dec    esi
  42653d:	xor    eax,DWORD PTR [ebx]
  42653f:	retf   
  426540:	outs   dx,DWORD PTR ds:[esi]
  426541:	mov    ecx,0xc1a24e3c
  426546:	fcmovnb st,st(3)
  426548:	scas   eax,DWORD PTR es:[edi]
  426549:	dec    edx
  42654a:	sbb    al,BYTE PTR [edx]
  42654c:	ins    BYTE PTR es:[edi],dx
  42654d:	lods   eax,DWORD PTR ds:[esi]
  42654e:	fsub   st,st(6)
  426550:	jo     0x426512
  426552:	mov    bh,0x4f
  426554:	push   ebx
  426555:	sbb    edi,DWORD PTR [edi]
  426557:	ds ja  0x426504
  42655a:	push   ds
  42655b:	retf   0x1e99
  42655e:	adc    edi,ebp
  426560:	pop    ebx
  426561:	mov    esp,0x55af7a97
  426566:	sar    BYTE PTR [ebx+0x66eecd50],cl
  42656c:	je     0x426541
  42656e:	and    cl,ah
  426570:	jns    0x42658a
  426572:	addr16 push 0x98cc1bca
  426578:	mov    es,WORD PTR ds:0x302b221b
  42657e:	cmp    eax,0xffec0936
  426583:	fcmovb st,st(6)
  426585:	adc    bh,0x7d
  426588:	and    ah,BYTE PTR [eax-0x587a61c4]
  42658e:	nop
  42658f:	fdiv   DWORD PTR [ecx]
  426591:	mov    ds:0xf07bd9bc,al
  426596:	push   ds
  426597:	sahf   
  426598:	push   cs
  426599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42659a:	(bad)  
  42659b:	dec    ebx
  42659c:	loop   0x4265d6
  42659e:	adc    ah,BYTE PTR [esi]
  4265a0:	ds lahf 
  4265a2:	scas   al,BYTE PTR es:[edi]
  4265a3:	sbb    eax,0x54e61814
  4265a8:	xlat   BYTE PTR ds:[ebx]
  4265a9:	xchg   esi,eax
  4265aa:	or     eax,0x122d346e
  4265af:	push   esp
  4265b0:	scas   al,BYTE PTR es:[edi]
  4265b1:	loopne 0x42658f
  4265b3:	jmp    0xac7832a3
  4265b8:	sub    DWORD PTR [eax-0x50af96ba],ecx
  4265be:	into   
  4265bf:	ret    0x259f
  4265c2:	push   ds
  4265c3:	push   eax
  4265c4:	repz mov esp,0x9c22b4e2
  4265ca:	mov    BYTE PTR [esi-0x4eb64f05],bh
  4265d0:	out    dx,eax
  4265d1:	jno    0x4265d9
  4265d3:	cdq    
  4265d4:	cwde   
  4265d5:	repz shl dh,0x8f
  4265d9:	js     0x4265e1
  4265db:	jns    0x4265b4
  4265dd:	adc    al,0x79
  4265df:	cmp    BYTE PTR ds:0x9c4101f1,dl
  4265e5:	mov    ds:0x52d97df3,eax
  4265ea:	pop    ss
  4265eb:	(bad)  
  4265ec:	in     al,0x58
  4265ee:	loop   0x426657
  4265f0:	push   es
  4265f1:	xchg   ecx,eax
  4265f2:	inc    eax
  4265f3:	sti    
  4265f4:	cmp    bh,BYTE PTR [ebp-0x6822fa27]
  4265fa:	ficom  DWORD PTR [ecx]
  4265fc:	or     eax,DWORD PTR [eax]
  4265fe:	jmp    0xc278:0x3b0b5a8a
  426605:	mov    ?,WORD PTR [eax+0x65313440]
  42660b:	sti    
  42660c:	into   
  42660d:	pop    es
  42660e:	lods   al,BYTE PTR ds:[esi]
  42660f:	mov    edi,0xfca9bec0
  426614:	xchg   esi,eax
  426615:	push   ss
  426616:	stos   DWORD PTR es:[edi],eax
  426617:	in     al,0x4
  426619:	enter  0xf523,0x13
  42661d:	pop    edi
  42661e:	pop    esp
  42661f:	popa   
  426620:	scas   al,BYTE PTR es:[edi]
  426621:	les    ebx,FWORD PTR [ebx+0x5a]
  426624:	xor    DWORD PTR [esi],ecx
  426626:	inc    edx
  426627:	pushf  
  426628:	mov    eax,ds:0x140313eb
  42662d:	call   0x8bb5:0x49baea92
  426634:	add    eax,0x74ad496b
  426639:	jp     0x426600
  42663b:	sahf   
  42663c:	in     eax,dx
  42663d:	mov    gs,WORD PTR [edi+0x77056502]
  426643:	jle    0x426653
  426645:	add    eax,DWORD PTR [ebx-0x1e]
  426648:	ss (bad) 
  42664a:	je     0x426602
  42664c:	outs   dx,DWORD PTR ds:[esi]
  42664d:	pop    es
  42664e:	jo     0x426697
  426650:	pop    ebx
  426651:	popf   
  426652:	inc    ebx
  426653:	dec    ecx
  426654:	add    eax,0xd449485c
  426659:	jb     0x4266ce
  42665b:	sbb    ah,ch
  42665d:	jbe    0x426633
  42665f:	or     al,0x0
  426661:	adc    al,0x99
  426663:	cmp    ch,BYTE PTR [ebx]
  426665:	fdivr  QWORD PTR [ebp+0x59d9aace]
  42666b:	or     edx,DWORD PTR [ecx+0x6e]
  42666e:	in     eax,dx
  42666f:	inc    edi
  426670:	xchg   ebp,eax
  426671:	xchg   WORD PTR [ebp-0x4],di
  426675:	ins    DWORD PTR es:[edi],dx
  426676:	das    
  426677:	pushf  
  426678:	mov    dh,0x53
  42667a:	repz cmc 
  42667c:	pop    ebp
  42667d:	mov    BYTE PTR [edx-0x1e9bb5e7],bl
  426683:	dec    ebx
  426684:	mov    ch,0x11
  426686:	stc    
  426687:	es dec eax
  426689:	or     al,0x2b
  42668b:	pop    edi
  42668c:	mov    al,ds:0xe4a17f3a
  426691:	fs daa 
  426693:	lock pop edi
  426695:	inc    edx
  426696:	jno    0x42670f
  426698:	pushf  
  426699:	dec    ebp
  42669a:	shr    BYTE PTR [ebp-0x79],cl
  42669d:	in     al,dx
  42669e:	int    0xeb
  4266a0:	xchg   edx,eax
  4266a1:	cmp    bl,bl
  4266a3:	push   ebp
  4266a4:	or     bh,cl
  4266a6:	aam    0xcf
  4266a8:	(bad)
  4266ab:	add    eax,DWORD PTR ds:0x412759fb
  4266b1:	mov    eax,0x525f3d0b
  4266b6:	cmp    edx,DWORD PTR [ebx+0x63341bf7]
  4266bc:	jno    0x4266cc
  4266be:	and    al,0x54
  4266c0:	and    BYTE PTR [esi+0x7c748a28],bl
  4266c6:	jmp    0x951d:0xd0df7afc
  4266cd:	xor    eax,0xd1763ed9
  4266d2:	ret    
  4266d3:	sahf   
  4266d4:	sbb    cl,0x95
  4266d7:	jp     0x4266e1
  4266d9:	push   ebx
  4266da:	arpl   WORD PTR [edx+edx*1],si
  4266dd:	push   es
  4266de:	cmp    dh,bl
  4266e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266e1:	dec    eax
  4266e2:	cmc    
  4266e3:	data16 xor al,0xcf
  4266e6:	add    DWORD PTR [ecx-0x42],0xffffffe4
  4266ea:	xor    BYTE PTR [ebp-0x32],ah
  4266ed:	loopne 0x426739
  4266ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266f0:	sub    DWORD PTR [ebx-0x7f],esi
  4266f3:	lock sbb eax,0xa9cc04e7
  4266f9:	adc    al,0xb7
  4266fb:	jp     0x426733
  4266fd:	fbstp  TBYTE PTR [bp+si]
  426700:	mov    ah,0x25
  426702:	sar    BYTE PTR [eax-0xad61b1e],0x78
  426709:	pop    esi
  42670a:	pop    eax
  42670b:	shl    ecx,cl
  42670d:	rol    DWORD PTR [eax+0x60886c72],0xd1
  426714:	and    ah,BYTE PTR [esi]
  426716:	ja     0x426710
  426718:	xchg   edi,eax
  426719:	aad    0x3e
  42671b:	or     ah,ah
  42671d:	pop    esi
  42671e:	aaa    
  42671f:	xchg   edi,eax
  426720:	inc    esi
  426721:	inc    edx
  426722:	jbe    0x42675b
  426724:	xor    al,BYTE PTR [esi-0x3dc4b518]
  42672a:	xchg   esp,eax
  42672b:	xchg   esi,eax
  42672c:	pop    ebx
  42672d:	test   al,0x8b
  42672f:	scas   eax,DWORD PTR es:[edi]
  426730:	fmul   DWORD PTR [ebx-0x25582f29]
  426736:	(bad)  
  426738:	pop    esp
  426739:	xchg   ebp,eax
  42673a:	fwait
  42673b:	xor    BYTE PTR [ebx-0x4bc829e5],ah
  426741:	push   ebx
  426742:	test   al,0xd6
  426744:	mov    bh,0x4f
  426746:	xchg   DWORD PTR [ecx+eiz*8-0x2a],esi
  42674a:	dec    edx
  42674b:	jmp    0x8a4ad633
  426750:	push   cs
  426751:	sbb    al,0xc
  426753:	adc    edx,edi
  426755:	retf   0x5a70
  426758:	leave  
  426759:	add    eax,0x25fc9da
  42675e:	fneni(8087 only) 
  426760:	xor    esp,DWORD PTR [eax-0x235015d5]
  426766:	mov    ?,WORD PTR [edx+edx*8+0x9]
  42676a:	pop    es
  42676b:	data16 jge 0x4267d2
  42676e:	aaa    
  42676f:	rcl    BYTE PTR [eax],cl
  426771:	mov    al,0x3b
  426773:	cmp    edi,DWORD PTR [ebx]
  426775:	cmp    eax,0x60d543e2
  42677a:	out    0x73,eax
  42677c:	sbb    eax,ebp
  42677e:	ins    BYTE PTR es:[edi],dx
  42677f:	mov    ds:0x8e7d7f7c,al
  426784:	mov    edx,0xb0438551
  426789:	xchg   BYTE PTR ds:0xbbc3857c,dh
  42678f:	addr16 inc ebp
  426791:	stos   DWORD PTR es:[edi],eax
  426792:	ret    0x5677
  426795:	mov    ah,0xf1
  426797:	sbb    DWORD PTR [eax-0x79cb71d9],eax
  42679d:	mov    WORD PTR [ebp-0x3bb3561b],?
  4267a3:	xchg   DWORD PTR [ebx+0x18],esi
  4267a6:	inc    edi
  4267a7:	jmp    0x10db:0xfd08b630
  4267ae:	in     al,0x1b
  4267b0:	inc    ebx
  4267b1:	lock jb 0x42681f
  4267b4:	cmp    bh,BYTE PTR [esi+eax*4+0x20451d0a]
  4267bb:	aaa    
  4267bc:	in     eax,0x16
  4267be:	dec    edx
  4267bf:	push   esi
  4267c0:	sti    
  4267c1:	push   ebp
  4267c2:	mov    al,ds:0x17768ee7
  4267c7:	loop   0x4267b4
  4267c9:	jge    0x42678d
  4267cb:	mov    ebx,0x89376575
  4267d0:	mov    ds:0x59771df0,al
  4267d5:	sub    BYTE PTR [ebx-0x4db53d52],0x68
  4267dc:	(bad)  
  4267dd:	xor    al,bl
  4267df:	jno    0x426851
  4267e1:	mov    ebp,0x4cb3682
  4267e6:	pop    ecx
  4267e7:	das    
  4267e8:	fsub   QWORD PTR [esi]
  4267ea:	icebp  
  4267eb:	fidivr DWORD PTR [esi]
  4267ed:	jne    0x426773
  4267ef:	js     0x426824
  4267f1:	inc    esi
  4267f2:	and    DWORD PTR [ebx+0x3a],0xffffffbe
  4267f6:	jb     0x426814
  4267f8:	stos   BYTE PTR es:[edi],al
  4267f9:	pop    eax
  4267fa:	xchg   ecx,eax
  4267fb:	jp     0x4267c9
  4267fd:	dec    esp
  4267fe:	inc    esi
  4267ff:	jmp    eax
  426801:	outs   dx,BYTE PTR ds:[esi]
  426802:	jecxz  0x4267b6
  426804:	inc    edi
  426805:	shl    BYTE PTR [ebx],1
  426807:	and    edi,esi
  426809:	call   0x27b3:0xc25de7e4
  426810:	mov    WORD PTR [eax+0x5],?
  426813:	dec    edi
  426814:	aad    0x37
  426816:	sbb    ecx,DWORD PTR [eax]
  426818:	retf   0x48cf
  42681b:	inc    ecx
  42681c:	popf   
  42681d:	mov    ds:0xee6e06a,eax
  426822:	test   eax,0xdce22951
  426827:	inc    edi
  426828:	push   ecx
  426829:	pop    edx
  42682a:	lds    esp,FWORD PTR [edx-0x1f]
  42682d:	leave  
  42682e:	or     eax,0x5aa906f2
  426833:	lahf   
  426834:	(bad)  
  426835:	dec    cl
  426837:	adc    edx,DWORD PTR [ebx]
  426839:	pushf  
  42683a:	gs jg  0x426819
  42683d:	add    BYTE PTR [edx-0x77],ah
  426840:	xlat   BYTE PTR ds:[ebx]
  426841:	mov    dh,0x12
  426843:	push   esp
  426844:	sbb    al,0x4e
  426846:	mov    esp,0x2c009fb0
  42684b:	adc    edi,0x4a9405fd
  426851:	stos   BYTE PTR es:[edi],al
  426852:	push   ecx
  426853:	cmp    bl,cl
  426855:	loope  0x426898
  426857:	mov    edi,0x1864898
  42685c:	pop    es
  42685d:	ins    BYTE PTR es:[edi],dx
  42685e:	add    esi,DWORD PTR [eax+0x64]
  426861:	std    
  426862:	pop    esp
  426864:	inc    edi
  426865:	cmc    
  426866:	icebp  
  426867:	in     eax,dx
  426868:	mov    al,BYTE PTR ds:0x121f8643
  42686e:	icebp  
  42686f:	mov    ebp,0x8a2787a5
  426874:	imul   edx,DWORD PTR [ecx],0x81
  42687a:	add    BYTE PTR [eax],al
  42687c:	add    BYTE PTR [eax],al
  42687e:	add    BYTE PTR [eax],al
  426880:	add    cl,al
  426882:	into   
  426883:	psrld  mm1,QWORD PTR [edi]
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	jmp    0x42688a
  42688f:	(bad)  
  426890:	in     eax,dx
  426891:	imul   ebx,edi,0x1
  426894:	add    BYTE PTR [esi+0xa000003],ch
  42689a:	(bad)  
  42689b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42689c:	rcr    DWORD PTR [eax],1
  42689e:	add    al,0xb6
  4268a0:	test   eax,0x97c9e543
  4268a5:	lock (bad) 
  4268a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268a8:	es popf 
  4268aa:	jle    0x4268ae
  4268ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268ad:	imul   esp,DWORD PTR ds:0xbac53657,0x3a
  4268b4:	test   DWORD PTR [ebx+eax*4-0x70],ebp
  4268b8:	jne    0x426871
  4268ba:	mov    edi,0x9fc7093a
  4268bf:	retf   
  4268c0:	cmp    edx,eax
  4268c2:	scas   al,BYTE PTR es:[edi]
  4268c3:	adc    ebx,DWORD PTR [esi-0x2ecc33d7]
  4268c9:	sbb    DWORD PTR [edi+0x5875852b],eax
  4268cf:	mov    esi,0xe12356ef
  4268d4:	mov    eax,ds:0x557315e7
  4268d9:	aam    0xe8
  4268db:	add    DWORD PTR [ebx],0x21
  4268de:	xchg   esp,eax
  4268df:	adc    DWORD PTR [ebx+0x7e],ebp
  4268e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268e3:	dec    ebp
  4268e4:	mov    eax,0x7023904b
  4268e9:	lods   eax,DWORD PTR ds:[esi]
  4268ea:	and    edx,DWORD PTR [ecx-0x70]
  4268ed:	mov    edi,ss
  4268ef:	inc    ebx
  4268f0:	mov    ds:0x8c80113,eax
  4268f5:	and    bh,bh
  4268f7:	(bad)  
  4268f8:	ret    0xf290
  4268fb:	pop    edi
  4268fc:	mov    edi,0x84648978
  426901:	les    edx,FWORD PTR [edi+0x30]
  426904:	imul   edx,DWORD PTR [ebx],0xed30fa63
  42690a:	push   edx
  42690b:	xor    ax,0xea9b
  42690f:	test   DWORD PTR [ebx+0x6ed13713],esi
  426915:	push   ebp
  426916:	or     bh,BYTE PTR ds:0x4fc51808
  42691c:	push   eax
  42691d:	pop    edx
  42691e:	call   0xf7098c91
  426923:	sbb    al,0xd7
  426925:	mov    al,0xd8
  426927:	ret    0x931c
  42692a:	cld    
  42692b:	sub    bh,bl
  42692d:	stc    
  42692e:	mov    al,ds:0xcf11669d
  426933:	or     BYTE PTR ds:0x7a0796f9,0x24
  42693a:	push   eax
  42693b:	stos   DWORD PTR es:[edi],eax
  42693c:	daa    
  42693d:	aaa    
  42693e:	xchg   DWORD PTR [ebx+edi*4+0x21fdbe14],ecx
  426945:	push   ebp
  426946:	pushf  
  426947:	jmp    0x42692b
  426949:	loope  0x42690e
  42694b:	xchg   BYTE PTR [ebx-0x12],dl
  42694e:	and    BYTE PTR [edx],dh
  426950:	retf   
  426951:	hlt    
  426952:	jl     0x426929
  426954:	scas   al,BYTE PTR es:[edi]
  426955:	aad    0x77
  426957:	and    BYTE PTR [edx-0x34],ah
  42695a:	fs out 0x51,al
  42695d:	imul   esp,DWORD PTR [ecx+0x14097a2a],0x7bdc9a16
  426967:	inc    ecx
  426968:	sti    
  426969:	mov    dh,BYTE PTR [ecx+0x541067c0]
  42696f:	test   eax,ebx
  426971:	stc    
  426972:	and    DWORD PTR ds:0x76ab11d,edx
  426978:	inc    eax
  426979:	popf   
  42697a:	sar    DWORD PTR [esi-0x3a33ba5c],1
  426980:	mov    ah,0xc1
  426982:	pop    esi
  426983:	jp     0x42699d
  426985:	pop    edi
  426986:	and    BYTE PTR [edi-0x4],al
  426989:	pop    eax
  42698a:	(bad)  
  42698b:	dec    ebp
  42698c:	or     dl,0x10
  42698f:	les    edx,FWORD PTR [edi-0x11b9cceb]
  426995:	out    0x9c,al
  426997:	not    DWORD PTR [edi+0x74]
  42699a:	popa   
  42699b:	fstp   DWORD PTR [esi+0x5dacd899]
  4269a1:	and    DWORD PTR [esi+ecx*2+0x56d3e06e],0x34
  4269a9:	or     dh,BYTE PTR [ecx+0x11]
  4269ac:	test   BYTE PTR [edx+0x2f],dh
  4269af:	xchg   esp,eax
  4269b0:	adc    BYTE PTR [ebx+0x31469117],ch
  4269b6:	push   esi
  4269b7:	cs jnp 0x4269a7
  4269ba:	pop    ecx
  4269bb:	push   esi
  4269bc:	jmp    0x58d7:0xaef692df
  4269c3:	js     0x4269c3
  4269c5:	js     0x426a45
  4269c7:	popf   
  4269c8:	gs (bad) 
  4269ca:	mov    dl,0x59
  4269cc:	fst    DWORD PTR [ebp+0x51]
  4269cf:	or     eax,0xb0923da7
  4269d4:	mov    dl,BYTE PTR [ebp-0x6284289f]
  4269da:	fsubr  st(2),st
  4269dc:	fs mov ecx,0xfc2d5c4e
  4269e2:	imul   ecx,esi,0xffffffbc
  4269e5:	mov    esp,0x5f69bc47
  4269ea:	pusha  
  4269eb:	add    ah,BYTE PTR [ebp+0x4ba80a15]
  4269f1:	adc    cl,cl
  4269f3:	fcmovbe st,st(7)
  4269f5:	dec    ebx
  4269f6:	loope  0x42699e
  4269f8:	cmp    bh,BYTE PTR [edx]
  4269fa:	das    
  4269fb:	inc    ebx
  4269fc:	lds    ecx,FWORD PTR [ebx+eax*8-0x399174a3]
  426a03:	fs loope 0x4269cf
  426a06:	scas   al,BYTE PTR es:[edi]
  426a07:	xchg   ebp,eax
  426a08:	pop    ebx
  426a09:	push   eax
  426a0a:	outs   dx,BYTE PTR ds:[esi]
  426a0b:	icebp  
  426a0c:	cld    
  426a0d:	gs xchg ebp,eax
  426a0f:	outs   dx,BYTE PTR ds:[esi]
  426a10:	jae    0x42699e
  426a12:	es add eax,0xe7b0edab
  426a18:	cmp    eax,0xfb484369
  426a1d:	jbe    0x4269cf
  426a1f:	pop    ss
  426a20:	jno    0x426a1d
  426a22:	mov    esi,0x4334135b
  426a27:	sbb    esi,DWORD PTR [edx-0x7fbae059]
  426a2d:	sub    al,ch
  426a2f:	mov    cl,0x87
  426a31:	in     eax,0xf6
  426a33:	and    al,ah
  426a35:	and    al,0xf3
  426a37:	sti    
  426a38:	pop    ss
  426a39:	pop    ebp
  426a3a:	jmp    0x3bf7:0xc2680385
  426a41:	xchg   DWORD PTR [esi-0x72],edi
  426a44:	sbb    al,0x80
  426a46:	sbb    DWORD PTR [eax+0x71d0cb56],esi
  426a4c:	icebp  
  426a4d:	dec    esi
  426a4e:	push   esp
  426a4f:	mov    edx,0x13f538b6
  426a54:	jbe    0x426a33
  426a56:	sar    edi,cl
  426a58:	jmp    0x426a0c
  426a5a:	addr16 aaa 
  426a5c:	fdiv   DWORD PTR [esi-0x294df507]
  426a62:	scas   eax,DWORD PTR es:[edi]
  426a63:	dec    esi
  426a64:	ret    0xb56c
  426a67:	in     al,dx
  426a68:	xchg   ebx,eax
  426a69:	fld    QWORD PTR [edi+0x10ff1e39]
  426a6f:	aaa    
  426a70:	aam    0xb3
  426a72:	cmp    ah,BYTE PTR [ebp-0x64b016c1]
  426a78:	mov    ebx,0x66db6b2b
  426a7d:	fnstcw WORD PTR [ecx+0x7262914e]
  426a83:	add    DWORD PTR [ebx+0x0],esi
  426a86:	js     0x426ae2
  426a88:	xchg   ebx,eax
  426a89:	icebp  
  426a8a:	out    dx,al
  426a8b:	cmp    ch,BYTE PTR [ebx-0x26ebcf77]
  426a91:	adc    DWORD PTR [ebp-0x1a],esi
  426a94:	rcl    BYTE PTR [ebx-0x2a99aef6],1
  426a9a:	cmp    ch,BYTE PTR [eax-0x62]
  426a9d:	add    dh,BYTE PTR [edx]
  426a9f:	in     al,dx
  426aa0:	inc    BYTE PTR [ecx-0x45]
  426aa3:	xchg   ebp,eax
  426aa4:	mov    dh,0x77
  426aa6:	mov    ch,dl
  426aa8:	imul   eax,DWORD PTR [edi+0x79],0xbaa60b98
  426aaf:	lods   al,BYTE PTR ds:[esi]
  426ab0:	sub    dl,BYTE PTR [esi+0x32]
  426ab3:	mov    al,0xfe
  426ab5:	adc    ch,dl
  426ab7:	adc    BYTE PTR [edi-0x6a83e90],al
  426abd:	jno    0x426b01
  426abf:	mov    ds:0x4ef606ab,al
  426ac4:	loopne 0x426a70
  426ac6:	adc    al,0x6b
  426ac8:	out    dx,al
  426ac9:	push   eax
  426aca:	sbb    DWORD PTR [edx-0x31752130],eax
  426ad0:	mov    al,BYTE PTR [eax+0x21e59db0]
  426ad6:	jmp    0x426a91
  426ad8:	lds    ecx,FWORD PTR [edx]
  426ada:	call   0x3ea3:0x5abe2014
  426ae1:	sub    al,0x1d
  426ae3:	add    eax,0xb4ef07b1
  426ae8:	jg     0x426b51
  426aea:	mov    al,ds:0x761dcbe3
  426aef:	pop    eax
  426af0:	mov    ah,0x9
  426af2:	and    al,0x4c
  426af4:	sti    
  426af5:	mov    ecx,0xf16fa282
  426afa:	mov    edx,0xfbc6ef29
  426aff:	neg    DWORD PTR [ebx]
  426b01:	adc    bl,BYTE PTR [esi-0x416f4757]
  426b07:	xchg   edi,eax
  426b08:	mov    dl,0x99
  426b0a:	push   ecx
  426b0b:	xchg   esi,eax
  426b0c:	xchg   ebx,eax
  426b0d:	pop    ecx
  426b0e:	mov    edx,0x7e6d3dd3
  426b13:	sti    
  426b14:	dec    ebx
  426b15:	loope  0x426b80
  426b17:	mov    edx,0x51115ef0
  426b1c:	jl     0x426ad4
  426b1e:	mov    WORD PTR [eax+0x6e8446b1],fs
  426b24:	jno    0x426b2d
  426b26:	adc    al,0x4a
  426b28:	cmp    edi,edi
  426b2a:	jae    0x426ace
  426b2c:	add    DWORD PTR [ebp+0x52],esi
  426b2f:	and    bl,ch
  426b31:	dec    DWORD PTR [esi]
  426b33:	(bad)  
  426b34:	dec    ebp
  426b35:	jo     0x426aeb
  426b37:	jns    0x426b66
  426b39:	sub    al,0x7b
  426b3b:	jns    0x426b1a
  426b3d:	sbb    BYTE PTR [eax-0x68],0xd3
  426b41:	add    cl,BYTE PTR [edi-0x69057bc6]
  426b47:	call   0x550e:0x87c72ec4
  426b4e:	mov    al,0xa0
  426b50:	jl     0x426b96
  426b52:	cdq    
  426b53:	scas   eax,DWORD PTR es:[edi]
  426b54:	mov    cl,0x5d
  426b56:	lock fld TBYTE PTR [ebp+0x7137fa2a]
  426b5d:	xchg   edi,eax
  426b5e:	mov    edx,0x31a15f76
  426b63:	stos   BYTE PTR es:[edi],al
  426b64:	dec    edx
  426b65:	test   DWORD PTR [edi+ebx*2-0x37],esp
  426b69:	js     0x426b40
  426b6b:	aas    
  426b6c:	and    eax,0x5308560f
  426b71:	mov    ebx,0xed0660d4
  426b76:	inc    edx
  426b77:	cmp    BYTE PTR [esi+ebp*4],al
  426b7a:	ficomp WORD PTR [ebx]
  426b7c:	fcom   DWORD PTR [eax+0x22ac1a54]
  426b82:	out    dx,eax
  426b83:	push   eax
  426b84:	out    0x14,eax
  426b86:	int    0xb5
  426b88:	in     eax,0xd2
  426b8a:	jp     0x426b40
  426b8c:	into   
  426b8d:	cdq    
  426b8e:	outs   dx,DWORD PTR ds:[esi]
  426b8f:	(bad)  [esi-0xd03fdd9]
  426b95:	in     al,0x91
  426b97:	or     BYTE PTR [ebx+edx*8-0x2bb29d45],al
  426b9e:	inc    edx
  426b9f:	dec    esi
  426ba0:	add    eax,0x70e16b6a
  426ba5:	popa   
  426ba6:	and    bh,ah
  426ba8:	call   0x1782:0x9ec02c8e
  426baf:	xor    edi,esp
  426bb1:	push   ss
  426bb2:	fidivr WORD PTR [eax-0x4029e270]
  426bb8:	xlat   BYTE PTR ds:[ebx]
  426bb9:	mov    ah,0x85
  426bbb:	pop    es
  426bbc:	push   ebp
  426bbd:	ror    ah,1
  426bbf:	or     al,0x94
  426bc1:	mov    ds:0x9690b21d,al
  426bc6:	mov    WORD PTR [edx],?
  426bc8:	push   edx
  426bc9:	mov    al,0xf7
  426bcb:	data16 rol cl,cl
  426bce:	or     DWORD PTR [ebx+0x2c],0x3436c2d4
  426bd5:	dec    ebp
  426bd6:	test   al,0x4e
  426bd8:	inc    ecx
  426bd9:	mov    ah,BYTE PTR [ebx+edi*2]
  426bdc:	mov    ebp,0xdafd42c2
  426be1:	aam    0xdf
  426be3:	int    0x76
  426be5:	test   DWORD PTR [ebp+0x7a],edi
  426be8:	rol    BYTE PTR [ebx+0x11],1
  426beb:	xchg   BYTE PTR [eax-0x5617e9b4],cl
  426bf1:	dec    eax
  426bf2:	nop
  426bf3:	rcl    DWORD PTR [ebp+0xf],1
  426bf6:	mov    fs,edi
  426bf8:	sub    eax,0x7ddb949e
  426bfd:	fwait
  426bfe:	push   ebp
  426bff:	mov    eax,0x35edc251
  426c04:	dec    edx
  426c05:	inc    esi
  426c06:	mov    ds:0x6a4bec69,al
  426c0b:	int3   
  426c0c:	clc    
  426c0d:	mov    gs,WORD PTR [edx-0x10]
  426c10:	sar    dh,cl
  426c12:	dec    ecx
  426c13:	inc    ebx
  426c14:	ds pushf 
  426c16:	lods   eax,DWORD PTR ds:[esi]
  426c17:	cdq    
  426c18:	out    dx,eax
  426c19:	ror    BYTE PTR [ecx+ecx*4-0x47],1
  426c1d:	aas    
  426c1e:	dec    esp
  426c1f:	outs   dx,DWORD PTR ds:[esi]
  426c20:	jb     0x426c9b
  426c22:	jb     0x426c3a
  426c24:	fldenv [eax+0x77241cfd]
  426c2a:	(bad)  
  426c2b:	mov    ah,0x3
  426c2d:	sbb    ch,bh
  426c2f:	cmp    DWORD PTR [esi-0x1a583077],ebp
  426c35:	int    0xe8
  426c37:	mov    ecx,0x84c32250
  426c3c:	fnstsw WORD PTR [esp+ebp*2-0x4be06492]
  426c43:	lea    esi,[edx]
  426c45:	das    
  426c46:	xlat   BYTE PTR ds:[ebx]
	...
  426c4f:	add    BYTE PTR [eax],al
  426c51:	lock lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp edx,DWORD PTR [edx+0x19e9b0e4]
  426c62:	jecxz  0x426c65
  426c64:	add    BYTE PTR [esi+0x24000003],ch
  426c6a:	cmp    eax,0x78a25b87
  426c6f:	sbb    al,0x51
  426c71:	add    DWORD PTR [edi],0xfb694e2a
  426c77:	arpl   WORD PTR [ebp+0xb0b00c9],ax
  426c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c7e:	inc    ebp
  426c7f:	addr16 push esi
  426c81:	dec    edi
  426c82:	ja     0x426c05
  426c84:	repnz mov dl,BYTE PTR [ebx+0x709dc855]
  426c8b:	jns    0x426c0f
  426c8d:	fs xchg ebp,eax
  426c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c90:	push   ebp
  426c91:	cmp    ah,dl
  426c93:	fistp  WORD PTR [edi-0x16]
  426c96:	pop    ds
  426c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c98:	adc    eax,0xda95c517
  426c9d:	push   ds
  426c9e:	add    BYTE PTR [edi],cl
  426ca0:	cmp    eax,0x2f40c910
  426ca5:	sub    edx,DWORD PTR es:[eax-0x7d]
  426ca9:	pop    ebp
  426caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cab:	inc    esi
  426cac:	add    al,0x3a
  426cae:	rcr    DWORD PTR [edx+ebp*1],cl
  426cb1:	scas   eax,DWORD PTR es:[edi]
  426cb2:	inc    edi
  426cb3:	(bad)  
  426cb4:	inc    esp
  426cb5:	push   ecx
  426cb6:	frstor [edx-0x21]
  426cb9:	mov    al,0xed
  426cbb:	shl    DWORD PTR [eax],0x76
  426cbe:	in     al,0x32
  426cc0:	aaa    
  426cc1:	mov    dh,0x42
  426cc3:	gs add edi,edi
  426cc6:	jb     0x426cd2
  426cc8:	jmp    DWORD PTR [eax+0x3db72f1b]
  426cce:	inc    edi
  426ccf:	hlt    
  426cd0:	push   ebp
  426cd1:	mov    esp,0x918665ad
  426cd6:	adc    esp,DWORD PTR [edi+0x33fbaef4]
  426cdc:	retf   0xd949
  426cdf:	add    BYTE PTR [ebp-0x6b846d9],dh
  426ce5:	jbe    0x426d30
  426ce7:	cmp    al,0x21
  426ce9:	adc    edx,esp
  426ceb:	xor    ah,BYTE PTR [ebx-0x7b87af62]
  426cf1:	js     0x426d53
  426cf3:	cmp    ecx,0x20593b18
  426cf9:	and    al,0xf1
  426cfb:	out    0xe,al
  426cfd:	(bad)  
  426cfe:	call   0xd80085e8
  426d03:	mov    ebp,0x3cd9a1f0
  426d08:	dec    DWORD PTR [ebp+0x41]
  426d0b:	fnstcw WORD PTR ds:0x60200b8d
  426d11:	mov    DWORD PTR [ebx],esi
  426d13:	lds    edx,FWORD PTR [edx+0x68]
  426d16:	cmp    DWORD PTR [edi],esi
  426d18:	xchg   ebp,eax
  426d19:	clc    
  426d1a:	cwde   
  426d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d1d:	aam    0x73
  426d1f:	fld    DWORD PTR [eax+ebx*2]
  426d22:	aaa    
  426d23:	cmp    ah,BYTE PTR [eax+0x9462af1]
  426d29:	mov    edi,0x66e968d9
  426d2e:	pusha  
  426d2f:	test   al,0x45
  426d31:	shl    DWORD PTR [ebx-0x51],1
  426d34:	sbb    bl,BYTE PTR [edx+0x63]
  426d37:	fild   QWORD PTR [edi]
  426d39:	(bad)  
  426d3a:	es call 0x5440fce9
  426d40:	int    0x1
  426d42:	out    0x96,al
  426d44:	push   ss
  426d45:	cmovge ecx,DWORD PTR [edx]
  426d48:	fmulp  st(5),st
  426d4a:	mov    ds:0x25fa0207,al
  426d4f:	ss xchg edx,eax
  426d51:	mov    ebp,0x839cb0ad
  426d56:	aas    
  426d57:	dec    esi
  426d58:	push   0xec2047bd
  426d5d:	ins    DWORD PTR es:[edi],dx
  426d5e:	imul   ecx,DWORD PTR ds:0xe7105590,0xbb540411
  426d68:	cwde   
  426d69:	mov    ch,0x32
  426d6b:	dec    edi
  426d6c:	daa    
  426d6d:	jo     0x426d92
  426d6f:	mov    BYTE PTR [edx],ch
  426d71:	bnd addr16 ja 0x426d84
  426d75:	pop    es
  426d76:	test   BYTE PTR [edi+eiz*8],ah
  426d79:	cmp    DWORD PTR [edi],ecx
  426d7b:	pusha  
  426d7c:	xor    eax,0xab026713
  426d81:	lock in eax,dx
  426d83:	fs enter 0x73fb,0x80
  426d88:	sti    
  426d89:	aaa    
  426d8a:	xchg   edi,eax
  426d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d8c:	sub    DWORD PTR ds:[ebx-0x26],eax
  426d90:	cmp    dl,BYTE PTR cs:[ebp+eiz*1-0x33]
  426d95:	lods   al,BYTE PTR ds:[esi]
  426d96:	pop    ebx
  426d97:	mov    esp,0x90195222
  426d9c:	pusha  
  426d9d:	mov    ds:0xbacd6797,al
  426da2:	cdq    
  426da3:	sub    al,0x6a
  426da5:	pop    edx
  426da6:	call   0xaf0a36a2
  426dab:	test   al,0xf6
  426dad:	fist   WORD PTR [edx-0x8d2f727]
  426db3:	(bad)  
  426db5:	dec    ebx
  426db6:	pop    edi
  426db7:	sbb    bh,dh
  426db9:	mov    ecx,0xc557aefa
  426dbe:	xchg   dh,ah
  426dc0:	xor    eax,0xef59504c
  426dc5:	mov    bh,0xc2
  426dc7:	pop    ss
  426dc8:	aas    
  426dc9:	leavew 
  426dcb:	addr16 stc 
  426dcd:	sub    al,0xc9
  426dcf:	adc    BYTE PTR ds:0x2a5ec413,dl
  426dd5:	inc    eax
  426dd6:	lea    esp,[esi+0x66674e38]
  426ddc:	mov    bh,0xf0
  426dde:	clc    
  426ddf:	jmp    0x426dfb
  426de1:	and    BYTE PTR [ebp+0x6aec84f2],0x4e
  426de8:	scas   eax,DWORD PTR es:[edi]
  426de9:	cmc    
  426dea:	or     BYTE PTR [esi+ebp*8+0x4f],0x3d
  426def:	fs retf 
  426df1:	pop    edx
  426df2:	pop    eax
  426df3:	shr    BYTE PTR [eax+0x44],1
  426df6:	cmc    
  426df7:	lods   al,BYTE PTR ds:[esi]
  426df8:	ins    BYTE PTR es:[edi],dx
  426df9:	xchg   esp,eax
  426dfa:	test   eax,0xa5fd8eb9
  426dff:	jbe    0x426d84
  426e01:	les    edx,FWORD PTR [edi+0x75]
  426e04:	stos   DWORD PTR es:[edi],eax
  426e05:	popa   
  426e06:	sbb    BYTE PTR ds:0xba478c45,cl
  426e0c:	mov    edi,DWORD PTR [edi]
  426e0e:	adc    al,0x7d
  426e10:	and    bh,BYTE PTR [edx-0x6b]
  426e13:	jle    0x426e20
  426e15:	fs nop
  426e17:	std    
  426e18:	push   edi
  426e19:	call   0x6e9e87d5
  426e1e:	xchg   esi,eax
  426e1f:	jno    0x426daf
  426e21:	mov    ds:0x82f84011,eax
  426e26:	xchg   ecx,eax
  426e27:	dec    ebx
  426e28:	jmp    0x4f40:0xf2bcbb11
  426e2f:	xchg   esp,eax
  426e30:	rcl    ah,0xc2
  426e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e34:	mov    ecx,0xa0afb611
  426e39:	sbb    eax,0xcc8b7df9
  426e3e:	retf   
  426e3f:	out    0x32,al
  426e41:	cli    
  426e42:	stos   DWORD PTR es:[edi],eax
  426e43:	jns    0x426e02
  426e45:	iret   
  426e46:	cmp    BYTE PTR ds:[edx],dh
  426e49:	fisubr WORD PTR [eax-0x9]
  426e4c:	fld    DWORD PTR [ebx+edx*4-0x7a]
  426e50:	clc    
  426e51:	and    eax,0x72b8361c
  426e56:	outs   dx,DWORD PTR ds:[esi]
  426e57:	into   
  426e58:	cmp    eax,0x3fa0d9bb
  426e5d:	and    ecx,ebp
  426e5f:	mov    bh,0xf5
  426e61:	aas    
  426e62:	loopne 0x426eb1
  426e64:	(bad)  
  426e65:	test   eax,0x750be679
  426e6a:	jbe    0x426e19
  426e6c:	mov    ecx,0x4251b286
  426e71:	popf   
  426e72:	retf   0x3e09
  426e75:	pop    esi
  426e76:	jl     0x426edd
  426e78:	inc    eax
  426e79:	jae    0xc15990b1
  426e7f:	push   ds
  426e80:	pop    ecx
  426e81:	repz push 0x31b7a7bc
  426e87:	push   esp
  426e88:	xor    dl,dh
  426e8a:	fs pusha 
  426e8c:	cld    
  426e8d:	xchg   edx,eax
  426e8e:	(bad)  
  426e8f:	in     eax,dx
  426e90:	jle    0x426f0a
  426e92:	or     dl,BYTE PTR [ebx]
  426e94:	jb     0x426ee7
  426e96:	cmp    al,0x19
  426e98:	inc    ecx
  426e99:	sbb    BYTE PTR [edx+0x4f4f4881],bl
  426e9f:	sbb    eax,0xfd30f2
  426ea4:	fs fs shl al,1
  426ea8:	sbb    al,0x68
  426eaa:	push   edi
  426eab:	fldenv [eax-0x612b121]
  426eb1:	clc    
  426eb2:	loope  0x426ea4
  426eb4:	fisttp WORD PTR [esi]
  426eb6:	mov    ds:0x262fde81,al
  426ebb:	retf   
  426ebc:	mov    ah,0xd8
  426ebe:	push   edi
  426ebf:	push   cs
  426ec0:	xchg   DWORD PTR [esi],ebx
  426ec2:	cmp    eax,0xf13dd7c6
  426ec7:	fld    DWORD PTR [ebx-0x3ce8ebc7]
  426ecd:	(bad)  
  426ece:	push   edx
  426ecf:	neg    dl
  426ed1:	test   al,0xde
  426ed3:	sahf   
  426ed4:	push   eax
  426ed5:	test   BYTE PTR [edx-0x2dbd8a87],dh
  426edb:	pop    ecx
  426edc:	outs   dx,DWORD PTR ds:[esi]
  426edd:	ficomp DWORD PTR [ebx]
  426edf:	inc    ebp
  426ee0:	or     eax,0xd2732886
  426ee5:	fwait
  426ee6:	imul   edi,DWORD PTR [ebp+0x7920163a],0x13
  426eed:	inc    ecx
  426eee:	adc    BYTE PTR [edi+ebp*1-0x61],dl
  426ef2:	rcr    BYTE PTR [ebx+0x34574be1],0x3f
  426ef9:	pop    ecx
  426efa:	test   DWORD PTR [edx+0x4df3a2dd],ebp
  426f00:	xchg   edx,eax
  426f01:	jbe    0x426eee
  426f03:	scas   al,BYTE PTR es:[edi]
  426f04:	pop    ebx
  426f05:	(bad)
  426f08:	or     dl,al
  426f0a:	stos   BYTE PTR es:[edi],al
  426f0b:	pop    ds
  426f0c:	(bad)  
  426f0d:	jae    0x426ee3
  426f0f:	je     0x426edc
  426f11:	les    ebx,FWORD PTR [ecx-0x3a]
  426f14:	adc    eax,DWORD PTR [edx-0x18]
  426f17:	mov    ecx,DWORD PTR [ebp+0x1c]
  426f1a:	rep outs dx,DWORD PTR ds:[esi]
  426f1c:	std    
  426f1d:	es iret 
  426f1f:	cwde   
  426f20:	and    al,0x9e
  426f22:	fidivr DWORD PTR [edi]
  426f24:	mov    ds:0xb5ff9b82,eax
  426f29:	leave  
  426f2a:	cmp    eax,0xd047b51a
  426f2f:	(bad)  
  426f30:	cmp    BYTE PTR [edx],bl
  426f32:	sbb    ebx,DWORD PTR [ebp+0x456c3719]
  426f38:	sub    BYTE PTR [edi+ecx*8],ch
  426f3b:	adc    al,0x98
  426f3d:	sbb    bl,BYTE PTR [edx+eiz*2]
  426f40:	in     al,0x3b
  426f42:	inc    edi
  426f43:	push   ecx
  426f44:	xor    esp,DWORD PTR [eax-0x17]
  426f47:	(bad)  
  426f48:	jae    0x426f51
  426f4a:	mov    BYTE PTR [edx+0x1df9cedb],ch
  426f50:	leave  
  426f51:	js     0x426ef8
  426f53:	lods   al,BYTE PTR ds:[esi]
  426f54:	push   0xffffffa7
  426f56:	aad    0x71
  426f58:	fidiv  DWORD PTR [edx]
  426f5a:	mov    al,ds:0xde2bc6c3
  426f5f:	lahf   
  426f60:	xor    esp,DWORD PTR [ebp+ecx*8+0x23]
  426f64:	dec    esi
  426f65:	arpl   WORD PTR [ebp+0x174c9a47],dx
  426f6b:	cmp    eax,0xb7dec8c
  426f70:	aaa    
  426f71:	mov    ecx,0xd8f3609c
  426f76:	loop   0x426f17
  426f78:	daa    
  426f79:	popa   
  426f7a:	dec    ecx
  426f7b:	cmp    al,0x54
  426f7d:	inc    ebx
  426f7e:	jg     0x426fd1
  426f80:	xor    BYTE PTR [ebx+0xcd1aec6],ch
  426f86:	mov    edx,0x4853d818
  426f8b:	fcomp  QWORD PTR [edi-0x688ae517]
  426f91:	out    0xf4,al
  426f93:	inc    ecx
  426f94:	aaa    
  426f95:	mov    esi,0xb8d631c6
  426f9a:	mov    dh,BYTE PTR [ecx+0x5553621f]
  426fa0:	xchg   esi,eax
  426fa1:	aad    0x95
  426fa3:	mov    edx,0x4b573cbb
  426fa8:	and    al,0xd6
  426faa:	jbe    0x42700f
  426fac:	mov    ebx,DWORD PTR [edx]
  426fae:	ins    BYTE PTR es:[edi],dx
  426faf:	add    eax,0xb0525753
  426fb4:	retf   
  426fb5:	mov    esp,esp
  426fb7:	cmc    
  426fb8:	mov    ds:0xc9621c7f,eax
  426fbd:	dec    ebp
  426fbe:	xor    esi,DWORD PTR [esi-0x3b03c7d0]
  426fc4:	rcr    edi,1
  426fc6:	loopne 0x426f52
  426fc8:	mov    ds:0x8da29687,al
  426fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fce:	inc    edx
  426fcf:	add    BYTE PTR [bx+0x1dcc],al
  426fd4:	shr    DWORD PTR [esp+eax*8],1
  426fd7:	inc    esp
  426fd8:	cmp    eax,0x31c865bd
  426fdd:	cs xchg edi,eax
  426fdf:	xchg   edi,eax
  426fe0:	or     DWORD PTR [ecx],edi
  426fe2:	add    BYTE PTR [esi],ah
  426fe4:	stos   DWORD PTR es:[edi],eax
  426fe5:	(bad)  
  426fe6:	std    
  426fe7:	test   ebp,ecx
  426fe9:	xchg   ebp,eax
  426fea:	adc    al,0x73
  426fec:	mov    ch,0x13
  426fee:	xchg   esp,eax
  426fef:	lods   al,BYTE PTR ds:[esi]
  426ff0:	jbe    0x426fe9
  426ff2:	mov    eax,ds:0x5e5713e
  426ff7:	pop    ebp
  426ff8:	sbb    DWORD PTR [esi],esp
  426ffa:	jl     0x42706b
  426ffc:	xor    bl,BYTE PTR [ecx-0xf62674d]
  427002:	or     esp,DWORD PTR [edx+0x75]
  427005:	adc    DWORD PTR [eax],0x6fe150f0
  42700b:	mov    al,0xe0
  42700d:	leave  
  42700e:	add    bl,ah
  427010:	clc    
  427011:	es jp  0x42700a
  427014:	push   edi
  427015:	je     0x426fd7
	...
  42701f:	add    BYTE PTR [eax],al
  427021:	sbb    eax,DWORD PTR [ebp+0x65]
  427024:	ret    
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	shl    al,cl
  42702e:	mov    edx,0xe6c7031a
  427033:	add    DWORD PTR [eax],eax
  427035:	scas   al,BYTE PTR es:[edi]
  427036:	add    eax,DWORD PTR [eax]
  427038:	add    cl,dh
  42703a:	test   BYTE PTR [edi],cl
  42703c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42703d:	fidivr WORD PTR [esp+ebx*2+0x56]
  427041:	and    ah,BYTE PTR [eax+0x5e]
  427044:	out    dx,eax
  427045:	test   al,0x72
  427047:	mov    ecx,0x8fc08ca2
  42704c:	retf   0x9f3d
  42704f:	cwde   
  427050:	mov    bl,0x4
  427052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427053:	fisttp WORD PTR [ebx]
  427055:	test   al,0xa2
  427057:	pop    ss
  427058:	(bad)  
  427059:	shl    DWORD PTR [edx],cl
  42705b:	and    eax,0xccf95935
  427060:	popf   
  427061:	push   es
  427062:	bound  ecx,QWORD PTR [ebp+0x67]
  427065:	(bad)  
  427066:	mov    dh,0x20
  427068:	inc    edx
  427069:	or     al,0x54
  42706b:	dec    esi
  42706c:	and    eax,0x34497b2f
  427071:	jp     0x427049
  427073:	dec    esp
  427074:	mov    esp,0xd70a80f8
  427079:	fmul   QWORD PTR [ebp+0x1]
  42707c:	mov    eax,0x90394255
  427081:	imul   edi,DWORD PTR [eax-0x56],0x8522a164
  427088:	xchg   edi,eax
  427089:	sbb    BYTE PTR [eax],bl
  42708b:	push   edi
  42708c:	sub    al,0xca
  42708e:	retf   
  42708f:	icebp  
  427090:	jge    0x427086
  427092:	jmp    0xf5875c4e
  427097:	cmp    ah,BYTE PTR [esi+0x41]
  42709a:	test   al,0x1
  42709c:	adc    al,BYTE PTR [eax+ebx*1]
  42709f:	(bad)  
  4270a0:	fwait
  4270a1:	sub    eax,0x76e8eee9
  4270a6:	fucomp st(0)
  4270a8:	in     eax,0xe0
  4270aa:	shl    BYTE PTR [edx-0x2f],cl
  4270ad:	cmp    BYTE PTR [eax],dl
  4270af:	aam    0xc7
  4270b1:	test   al,0xc1
  4270b3:	mov    ss,WORD PTR [ebx+0x3733bf5f]
  4270b9:	push   ebp
  4270ba:	sbb    BYTE PTR [edx],0xde
  4270bd:	push   edi
  4270be:	fild   DWORD PTR [esi-0x73]
  4270c1:	fld    QWORD PTR [edx-0x3fea1002]
  4270c7:	dec    esi
  4270c8:	add    DWORD PTR [esi+0x6b],ebx
  4270cb:	and    bl,BYTE PTR [edi-0x63f83874]
  4270d1:	popf   
  4270d2:	arpl   WORD PTR [edx+0x40],cx
  4270d5:	mov    ds:0xc89670ba,eax
  4270da:	inc    edi
  4270db:	sub    BYTE PTR [ebx-0x64],0x59
  4270df:	mov    cl,0x4a
  4270e1:	loop   0x42714c
  4270e3:	imul   ebx,DWORD PTR [esi-0x5a],0xaf27445c
  4270ea:	dec    ecx
  4270eb:	adc    al,0x88
  4270ed:	jb     0x4270c1
  4270ef:	push   edi
  4270f0:	inc    ebp
  4270f1:	dec    edi
  4270f2:	leave  
  4270f3:	sbb    BYTE PTR ds:0xb82b6ec9,ah
  4270f9:	dec    ebx
  4270fa:	mov    edx,0x228d03f0
  4270ff:	mov    WORD PTR [ebp+0x29],cs
  427102:	mov    al,ds:0x41876739
  427107:	sbb    esi,DWORD PTR [ebp+0x5b]
  42710a:	inc    edi
  42710b:	sub    BYTE PTR [ecx+0x564475d6],bh
  427111:	fcomip st,st(4)
  427113:	shl    DWORD PTR [esi-0x740df14c],1
  427119:	cmp    al,0x1a
  42711b:	dec    ecx
  42711c:	cmp    BYTE PTR [edi-0x29],ah
  42711f:	xchg   ebp,eax
  427120:	mov    dh,0xe9
  427122:	(bad)  
  427123:	sar    BYTE PTR [ecx+0x10d0a2dc],cl
  427129:	test   eax,0x2044a2b1
  42712e:	jb     0x42719a
  427130:	dec    esi
  427131:	imul   eax,DWORD PTR [eax+0x3022b569],0xa3f9893a
  42713b:	sbb    dl,0xe5
  42713e:	jnp    0x4270d2
  427140:	aad    0xb1
  427142:	lods   eax,DWORD PTR ds:[esi]
  427143:	push   edx
  427144:	cwde   
  427145:	repz scas eax,DWORD PTR es:[edi]
  427147:	inc    eax
  427148:	inc    ecx
  427149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42714a:	mov    esp,0x7f132e4f
  42714f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427151:	cmp    al,BYTE PTR [esi]
  427153:	push   ecx
  427154:	mov    bh,0x40
  427156:	fist   DWORD PTR [eax+ecx*1+0x495dafbf]
  42715d:	adc    dh,0x7e
  427160:	(bad)  
  427162:	mov    dl,0x29
  427164:	mov    ecx,DWORD PTR [edx]
  427166:	mov    ecx,0x4e8117a3
  42716b:	sbb    DWORD PTR [ebp-0x5b],ecx
  42716e:	(bad)  
  42716f:	cmp    ebx,DWORD PTR [ebx+0x66]
  427172:	out    0xa0,al
  427174:	ja     0x4271c2
  427176:	ror    BYTE PTR [edi+0x6f],0x51
  42717a:	mov    ebp,DWORD PTR [ecx-0x71372623]
  427180:	xlat   BYTE PTR ds:[ebx]
  427181:	pop    ebp
  427182:	shr    DWORD PTR [edi-0x1c],cl
  427185:	push   ss
  427186:	fnsave [edi+0xd]
  427189:	mov    al,ds:0xca592ba3
  42718e:	mov    edi,DWORD PTR [edi]
  427190:	inc    edx
  427191:	adc    eax,0x53865814
  427196:	inc    ecx
  427197:	lds    ecx,FWORD PTR [edx]
  427199:	jmp    0xd471:0xeda51e4a
  4271a0:	mov    al,0xeb
  4271a2:	setb   al
  4271a5:	or     BYTE PTR [edi+0x10b42148],al
  4271ab:	inc    edi
  4271ac:	jne    0x4271af
  4271ae:	or     al,0x48
  4271b0:	xchg   DWORD PTR [edi+0x2f],ebp
  4271b3:	(bad)  
  4271b5:	mov    ah,0xd1
  4271b7:	clc    
  4271b8:	(bad)  
  4271b9:	shl    BYTE PTR [eax],cl
  4271bb:	sahf   
  4271bc:	inc    ebx
  4271bd:	push   edx
  4271be:	pop    es
  4271bf:	sub    edi,ecx
  4271c1:	adc    BYTE PTR [ebp+0x5f92d232],0x8f
  4271c8:	call   0x8e4e:0xdab62e1f
  4271cf:	ss in  eax,dx
  4271d1:	jmp    0xb609:0xf59b30cc
  4271d8:	jno    0x427227
  4271da:	jb     0x42722b
  4271dc:	xor    al,0xd7
  4271de:	mov    al,ds:0x9be2e22a
  4271e3:	and    al,0x99
  4271e5:	push   ebx
  4271e6:	push   eax
  4271e7:	push   ss
  4271e8:	into   
  4271e9:	cmp    eax,0x4d14965f
  4271ee:	inc    edx
  4271ef:	sub    DWORD PTR [ebx+0x27],ebp
  4271f2:	add    ah,cl
  4271f4:	outs   dx,BYTE PTR ds:[esi]
  4271f5:	ret    
  4271f6:	fwait
  4271f7:	add    cl,BYTE PTR [edx+eax*2]
  4271fa:	xlat   BYTE PTR ds:[ebx]
  4271fb:	mov    ch,0xe7
  4271fd:	mov    ah,BYTE PTR [esi+0x5854837]
  427203:	inc    ecx
  427204:	fisttp DWORD PTR ds:0x966d7f39
  42720a:	jmp    0xdf1f74bc
  42720f:	dec    esp
  427210:	test   DWORD PTR [esi],0xd905b9fe
  427216:	mov    WORD PTR [edx],cs
  427218:	mov    cl,0x15
  42721a:	pop    ebp
  42721b:	sbb    esp,esi
  42721d:	popf   
  42721e:	sbb    DWORD PTR [eax],esp
  427220:	out    dx,eax
  427221:	mov    eax,ds:0x621fb848
  427226:	addr16 shr cl,1
  427229:	xchg   ebp,eax
  42722a:	add    al,0xff
  42722c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42722d:	xchg   esp,eax
  42722e:	mov    ch,0x25
  427230:	jge    0x42729c
  427232:	jnp    0x427248
  427234:	or     al,0x67
  427236:	lds    ecx,FWORD PTR [esi]
  427238:	stos   BYTE PTR es:[edi],al
  427239:	xor    dl,BYTE PTR ds:0x48d95b48
  42723f:	mov    WORD PTR [ebp-0x1d],ss
  427242:	sub    cl,0xf2
  427245:	xchg   edi,eax
  427246:	fistp  QWORD PTR [esi]
  427248:	mov    ecx,0x2d255e8a
  42724d:	fldcw  WORD PTR [edi+eiz*4]
  427250:	inc    DWORD PTR [ebx-0xe]
  427253:	cdq    
  427254:	add    BYTE PTR [esi+0x6c33e549],cl
  42725a:	icebp  
  42725b:	pop    ebx
  42725c:	clc    
  42725d:	icebp  
  42725e:	test   eax,0xe9ae238b
  427263:	test   eax,0x1133942a
  427268:	loopne 0x427212
  42726a:	add    edx,DWORD PTR [edi-0x3b]
  42726d:	out    dx,al
  42726e:	(bad)  
  42726f:	sar    DWORD PTR [eax+edi*4+0x6f],cl
  427273:	push   0x1b
  427275:	loop   0x427267
  427277:	xor    edi,ebp
  427279:	shl    BYTE PTR [ebp-0x563bd9db],0x94
  427280:	clc    
  427281:	(bad)  
  427282:	fidiv  DWORD PTR [ebp+0x3e26c400]
  427288:	popa   
  427289:	xor    bl,ah
  42728b:	xchg   ecx,eax
  42728c:	or     eax,0x2f6e1c4a
  427291:	or     DWORD PTR [ebx+edx*8-0x7cf81cba],0xa19bf114
  42729c:	popf   
  42729d:	into   
  42729e:	mov    dl,0xb4
  4272a0:	popa   
  4272a1:	lods   eax,DWORD PTR ds:[esi]
  4272a2:	popa   
  4272a3:	mov    cs,WORD PTR [ebp-0x3e794c95]
  4272a9:	retf   0x60b6
  4272ac:	adc    DWORD PTR [ebp-0x23a60c88],ebp
  4272b2:	mov    ebp,es
  4272b4:	mov    al,0xa2
  4272b6:	ss jno 0x42726b
  4272b9:	call   0xc11a1bb0
  4272be:	daa    
  4272bf:	xchg   al,ch
  4272c1:	mov    dh,0xde
  4272c3:	jns    0x42729e
  4272c5:	or     eax,0xf4fcd095
  4272ca:	sub    esi,ecx
  4272cc:	das    
  4272cd:	scas   eax,DWORD PTR es:[edi]
  4272ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272cf:	leave  
  4272d0:	cmc    
  4272d1:	or     esi,ecx
  4272d3:	xchg   DWORD PTR [edx+0x6decbabc],esp
  4272d9:	mov    dl,BYTE PTR [ebp+0x6b]
  4272dc:	cmp    al,0xc9
  4272de:	jge    0x427339
  4272e0:	pop    edi
  4272e1:	sti    
  4272e2:	pop    ds
  4272e3:	cld    
  4272e4:	in     eax,0x2f
  4272e6:	ret    
  4272e7:	pop    es
  4272e8:	dec    esi
  4272e9:	fisubr WORD PTR ds:0x52da2fc1
  4272ef:	sub    al,0x54
  4272f1:	push   eax
  4272f2:	xchg   ecx,eax
  4272f3:	xchg   ebx,eax
  4272f4:	shl    esi,1
  4272f6:	ret    
  4272f7:	mov    edi,0xbb03c40f
  4272fc:	inc    edx
  4272fd:	xor    BYTE PTR [eax+0x34],bh
  427300:	sbb    al,0x0
  427302:	in     eax,0xe5
  427304:	dec    esp
  427305:	aas    
  427306:	out    dx,al
  427307:	outs   dx,BYTE PTR ds:[esi]
  427308:	mov    ds:0x11d8b246,al
  42730d:	bound  edi,QWORD PTR [ebp+ebx*2-0x34391ade]
  427314:	lock outs dx,DWORD PTR ds:[esi]
  427316:	lahf   
  427317:	mov    ecx,0x2bccf79b
  42731c:	fisubr DWORD PTR [edx+0x5d9ee3cb]
  427322:	push   eax
  427323:	sbb    cl,BYTE PTR [ebx-0x5ae6b6f3]
  427329:	sahf   
  42732a:	pop    ecx
  42732b:	and    edi,DWORD PTR [eax-0x5e]
  42732e:	cli    
  42732f:	dec    esp
  427330:	in     al,dx
  427331:	fstp   DWORD PTR [eax+0x3416866b]
  427337:	and    bh,dl
  427339:	ftst   
  42733b:	push   ecx
  42733c:	fwait
  42733d:	pop    esi
  42733e:	fnstenv [ecx+0x2cf6ad2e]
  427344:	leave  
  427345:	(bad)  
  427346:	aas    
  427347:	xchg   DWORD PTR [ebx-0x2d],edx
  42734a:	rol    BYTE PTR [edx+0x6c],1
  42734d:	cdq    
  42734e:	adc    al,0x0
  427350:	mov    al,0x26
  427352:	fcomp  DWORD PTR [edx]
  427354:	cld    
  427355:	xchg   esp,eax
  427356:	jb     0x4272da
  427358:	cmp    BYTE PTR [eax],dl
  42735a:	xchg   bh,ah
  42735c:	hlt    
  42735d:	sub    al,0xb1
  42735f:	xchg   esp,eax
  427360:	daa    
  427361:	add    al,0x5c
  427363:	lea    edx,[eax]
  427365:	jl     0x427313
  427367:	sub    al,BYTE PTR [eax+esi*4-0x7d]
  42736b:	xor    al,0xb8
  42736d:	adc    eax,0xdeab9f12
  427372:	xor    ch,BYTE PTR [ebx]
  427374:	cmc    
  427375:	loopne 0x4273a2
  427377:	stc    
  427378:	mov    dl,0x7e
  42737a:	pop    ds
  42737b:	mov    ebp,0x22bea21c
  427380:	add    eax,DWORD PTR [edx]
  427382:	cmp    dh,BYTE PTR [eax+0x2bad41eb]
  427388:	jnp    0x427326
  42738a:	or     DWORD PTR [eax],ebx
  42738c:	xchg   BYTE PTR [ecx-0x458a4c8],bl
  427392:	loope  0x427400
  427394:	inc    ebx
  427395:	xor    bh,ah
  427397:	loopne 0x42732e
  427399:	in     al,0x32
  42739b:	push   es
  42739c:	mov    ecx,0x70de8050
  4273a1:	xchg   esp,eax
  4273a2:	jns    0x427325
  4273a4:	jle    0x4273cc
  4273a6:	mov    BYTE PTR [edi+0x2cbfed10],0x1
  4273ad:	push   esi
  4273ae:	test   eax,0x5ded2e8a
  4273b3:	lods   al,BYTE PTR ds:[esi]
  4273b4:	fs push ecx
  4273b6:	push   DWORD PTR [ebp+0x62]
  4273b9:	or     dh,0x1d
  4273bc:	shr    BYTE PTR [ebp+0x5e97a045],0x32
  4273c3:	fmul   DWORD PTR [edi]
  4273c5:	popf   
  4273c6:	adc    DWORD PTR [eax-0x1cb4fdaa],ecx
  4273cc:	push   ecx
  4273cd:	pushf  
  4273ce:	loop   0x427444
  4273d0:	mov    bl,BYTE PTR [ebx+0x23580a5b]
  4273d6:	and    esp,ebp
  4273d8:	xor    DWORD PTR [esi],esp
  4273da:	push   ds
  4273db:	mov    dl,0x8c
  4273dd:	mov    bl,0x4c
  4273df:	ret    0xd6b9
  4273e2:	(bad)  
  4273e3:	std    
  4273e4:	cdq    
  4273e5:	adc    BYTE PTR [esi+0x0],dh
	...
  4273f0:	add    BYTE PTR [edi+eax*2],cl
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0xfd19f609
  4273fe:	jns    0x427433
  427400:	pop    edx
  427401:	jne    0x4273ed
  427403:	add    DWORD PTR [eax],eax
  427405:	scas   al,BYTE PTR es:[edi]
  427406:	add    eax,DWORD PTR [eax]
  427408:	add    BYTE PTR [esi+ebx*2-0x5f],ch
  42740c:	inc    edx
  42740d:	dec    esp
  42740e:	cs inc eax
  427410:	mov    al,0x93
  427412:	sub    al,0x14
  427414:	jle    0x427476
  427416:	mov    fs,WORD PTR [ecx-0x8]
  427419:	and    ah,dl
  42741b:	cwde   
  42741c:	inc    ecx
  42741d:	gs dec edi
  42741f:	lahf   
  427420:	or     DWORD PTR [ebx*2+0x40165a40],esi
  427427:	cmc    
  427428:	fdivr  DWORD PTR [edi+ebp*4-0x273b961]
  42742f:	into   
  427430:	jb     0x427488
  427432:	xor    ah,BYTE PTR [edx+0x6010a092]
  427438:	stos   BYTE PTR es:[edi],al
  427439:	cmp    edi,DWORD PTR [ebx]
  42743b:	push   eax
  42743c:	push   ss
  42743d:	add    DWORD PTR [eax+ecx*4],eax
  427440:	jbe    0x427411
  427442:	mov    ecx,0x53568851
  427447:	in     al,dx
  427448:	int    0x35
  42744a:	adc    bh,BYTE PTR [ebx+0x47]
  42744d:	jno    0x4274ad
  42744f:	adc    BYTE PTR [ebx+0x14652a11],bl
  427455:	and    edx,ebp
  427457:	jo     0x4273eb
  427459:	and    DWORD PTR [edi-0x21],0xffffffcb
  42745d:	in     al,0x1d
  42745f:	xchg   ebp,eax
  427460:	ror    DWORD PTR [edi+0x7e656075],0xe6
  427467:	sbb    BYTE PTR [ecx-0x27],ch
  42746a:	rol    DWORD PTR [eax-0x80],1
  42746d:	(bad)  [ebx+0x30]
  427470:	popf   
  427471:	adc    dl,BYTE PTR [ebx+0x66]
  427474:	ret    0x59
  427477:	cld    
  427478:	push   cs
  427479:	mov    dl,0xff
  42747b:	inc    eax
  42747c:	push   edx
  42747d:	mov    al,ds:0x6fb191d0
  427482:	shl    DWORD PTR [edi-0x62],1
  427485:	push   esp
  427486:	pop    ds
  427487:	dec    esp
  427488:	jbe    0x427462
  42748a:	ins    BYTE PTR es:[edi],dx
  42748b:	idiv   DWORD PTR [esi]
  42748d:	mov    ds:0xa7da7c89,al
  427492:	and    al,0xd2
  427494:	inc    esi
  427495:	fs fcomi st,st(1)
  427498:	push   ebx
  427499:	push   0x79
  42749b:	mov    ebp,0x6e7aef35
  4274a0:	pop    ds
  4274a1:	push   cs
  4274a2:	mov    cl,0x4a
  4274a4:	bound  edi,QWORD PTR [ebx-0x37]
  4274a7:	inc    ecx
  4274a8:	popf   
  4274a9:	add    BYTE PTR [ebx-0x32f4d195],ah
  4274af:	sbb    BYTE PTR [ecx],dh
  4274b1:	test   al,0x90
  4274b3:	xchg   esi,eax
  4274b4:	inc    ebp
  4274b5:	cmp    BYTE PTR [esi-0x510b3fdc],dl
  4274bb:	ds mov al,0xc9
  4274be:	jne    0x427487
  4274c0:	pop    esi
  4274c1:	mov    DWORD PTR [edi+0x3daeca8e],edi
  4274c7:	xor    eax,0x962bec8a
  4274cc:	push   0xb4283682
  4274d1:	mov    bh,0xe4
  4274d3:	pop    es
  4274d4:	add    DWORD PTR [eax-0x16],edi
  4274d7:	into   
  4274d8:	rcr    DWORD PTR [edx-0x1d],cl
  4274db:	ds je  0x427541
  4274de:	jge    0x427545
  4274e0:	adc    BYTE PTR [esp+ecx*2-0x21],0xf0
  4274e5:	jae    0x427524
  4274e7:	mov    bh,0xd5
  4274e9:	mov    eax,0xaba5246d
  4274ee:	adc    edi,DWORD PTR [esi-0x3abfe04d]
  4274f4:	dec    ecx
  4274f5:	rcl    cl,0x32
  4274f8:	add    cl,al
  4274fa:	xchg   edx,eax
  4274fb:	cld    
  4274fc:	popa   
  4274fd:	pop    esi
  4274fe:	add    eax,0xe94ca9dd
  427503:	pop    ebx
  427504:	push   esp
  427505:	jmp    0x427513
  427507:	push   ebp
  427508:	push   edx
  427509:	xchg   ecx,eax
  42750a:	in     al,dx
  42750b:	call   0xae71:0x2e4214fd
  427512:	arpl   WORD PTR [esp+eiz*8],sp
  427515:	mov    esp,0x8be25415
  42751a:	and    eax,0xd30b6703
  42751f:	mov    esp,0x916a019e
  427524:	add    edx,DWORD PTR [ebx]
  427526:	test   eax,0x2c2c4909
  42752b:	test   DWORD PTR [eax+0x1e],0xf74776d8
  427532:	sbb    al,0xcd
  427534:	mov    edi,0x233ea588
  427539:	and    ebx,DWORD PTR [edx]
  42753b:	mov    ch,0x93
  42753d:	mov    edx,0x3a68e05a
  427542:	pop    ds
  427543:	int3   
  427544:	stos   BYTE PTR es:[edi],al
  427545:	dec    eax
  427546:	and    edi,DWORD PTR [ecx+0x5ba575ea]
  42754c:	cmp    DWORD PTR [esi-0xc],ebx
  42754f:	and    ebx,0x33
  427552:	dec    edi
  427553:	push   ecx
  427554:	cli    
  427555:	mov    esp,0x5dd4d517
  42755a:	xchg   ebp,eax
  42755b:	sub    ch,bh
  42755d:	xor    al,0xb
  42755f:	into   
  427560:	shl    DWORD PTR [ecx+ebx*8],cl
  427563:	in     eax,0x20
  427565:	loope  0x427564
  427567:	pop    ss
  427568:	scas   eax,DWORD PTR es:[edi]
  427569:	push   ebx
  42756a:	cld    
  42756b:	(bad)  
  42756d:	fldcw  WORD PTR [ebx-0x54]
  427570:	inc    esp
  427571:	mov    eax,ds:0x85b5409b
  427576:	mov    ebp,0x21995084
  42757b:	add    edx,DWORD PTR [ecx]
  42757d:	push   edi
  42757e:	es ret 0x4bd7
  427582:	sbb    bh,BYTE PTR ss:[edi]
  427585:	jbe    0x427605
  427587:	pop    esi
  427588:	sbb    BYTE PTR [esi+eiz*4-0x4b],bl
  42758c:	ret    
  42758d:	fwait
  42758e:	push   edi
  42758f:	xchg   esp,eax
  427590:	inc    ecx
  427591:	std    
  427592:	sbb    BYTE PTR [edi+0x49],0x2f
  427596:	call   0x6e6d:0x6f86fc5d
  42759d:	out    0xc3,al
  42759f:	mov    ebx,0x75d3f1a4
  4275a4:	jg     0x427624
  4275a6:	test   al,0x73
  4275a8:	hlt    
  4275a9:	mov    edi,0xc52a344
  4275ae:	popf   
  4275af:	xor    eax,ebp
  4275b1:	adc    edi,DWORD PTR [edx-0xb]
  4275b4:	pusha  
  4275b5:	or     edi,DWORD PTR [eax-0x5ed77f50]
  4275bb:	inc    esp
  4275bc:	lods   eax,DWORD PTR ds:[esi]
  4275bd:	cmp    BYTE PTR [ebx],bh
  4275bf:	or     edx,ecx
  4275c1:	ds xchg esp,eax
  4275c3:	je     0x427576
  4275c5:	mov    al,0xa1
  4275c7:	cdq    
  4275c8:	mov    WORD PTR [edx-0xe0c9859],?
  4275ce:	int    0x6d
  4275d0:	dec    edi
  4275d1:	adc    DWORD PTR ds:0xcb6d550f,ebx
  4275d7:	sbb    edi,DWORD PTR [ecx+0x52]
  4275da:	hlt    
  4275db:	push   ebx
  4275dc:	jno    0x4275b7
  4275de:	sbb    bh,BYTE PTR [ecx+edi*4+0x2654f8ca]
  4275e5:	cmp    DWORD PTR [ebx+0x7951fbf8],eax
  4275eb:	add    al,0x85
  4275ed:	fwait
  4275ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275ef:	in     eax,0x33
  4275f1:	repnz jecxz 0x427640
  4275f4:	cli    
  4275f5:	xchg   BYTE PTR [ebp-0x2c0fa5ee],dl
  4275fb:	jb     0x42765b
  4275fd:	test   al,0x3a
  4275ff:	and    DWORD PTR [esi+eiz*2-0x6],ecx
  427603:	inc    ebx
  427604:	out    0xf7,eax
  427606:	pop    ebp
  427607:	dec    ebp
  427608:	cwde   
  427609:	and    al,BYTE PTR [eax+0x2]
  42760c:	ffreep st(3)
  42760e:	retf   
  42760f:	lock xchg edi,eax
  427611:	inc    esi
  427612:	loop   0x4275ef
  427614:	sub    DWORD PTR [ecx],ebx
  427616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427617:	adc    edi,esp
  427619:	adc    esi,0xe4b24eb7
  42761f:	mov    ebx,0xefdfd3b4
  427624:	xchg   ebx,eax
  427625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427626:	pop    ebp
  427627:	sub    ah,al
  427629:	xor    DWORD PTR [esi+edi*4],0xffffffce
  42762d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42762e:	xchg   edx,eax
  42762f:	out    dx,al
  427630:	aad    0x2a
  427632:	popa   
  427633:	push   0xffffffd5
  427635:	inc    edi
  427636:	or     DWORD PTR [ebx+eiz*4],esp
  427639:	jmp    0xbae3:0xcb734e96
  427640:	dec    ecx
  427641:	call   0x358d7358
  427646:	mov    DWORD PTR [eax-0x308a74ac],esi
  42764c:	mov    ebx,0x8f4ac53f
  427651:	fadd   QWORD PTR [edx+ecx*8-0x4b]
  427655:	mov    ah,0x96
  427657:	pop    esp
  427658:	aad    0x62
  42765a:	lods   eax,DWORD PTR ds:[esi]
  42765b:	inc    esi
  42765c:	loopne 0x4275ff
  42765e:	out    dx,eax
  42765f:	test   DWORD PTR [ebp-0x5db61bfb],esi
  427665:	cmp    DWORD PTR [esp+ebx*4-0x1],esi
  427669:	adc    al,0xec
  42766b:	ss stos BYTE PTR es:[edi],al
  42766d:	cmp    DWORD PTR [esi],eax
  42766f:	sar    BYTE PTR [esi-0x77],0x91
  427673:	aad    0xbe
  427675:	cs inc edx
  427677:	fcom   QWORD PTR [eax]
  427679:	rcr    BYTE PTR ds:0x938965b9,0x5a
  427680:	fwait
  427681:	jecxz  0x4276d6
  427683:	or     BYTE PTR [ecx-0x3a14873],0x85
  42768a:	sbb    eax,0x6dfbd25f
  42768f:	cwd    
  427691:	mov    edi,0x7eb62a54
  427696:	repz mov bl,0xec
  427699:	cmp    BYTE PTR [esi-0x28910d7d],0x20
  4276a0:	jmp    0xb189d7b6
  4276a5:	addr16 jns 0x427680
  4276a8:	mov    ecx,0xd2a90646
  4276ad:	mov    al,0x45
  4276af:	add    edi,ebp
  4276b1:	(bad)  
  4276b2:	and    eax,0xf035b8b
  4276b7:	leave  
  4276b8:	add    al,0x81
  4276ba:	ins    BYTE PTR es:[edi],dx
  4276bb:	jb     0x42769d
  4276bd:	(bad)  
  4276be:	out    dx,al
  4276bf:	xchg   BYTE PTR [edx],dh
  4276c1:	fidiv  DWORD PTR [esi-0x1cb45001]
  4276c7:	add    eax,0x44c0e1b4
  4276cc:	sahf   
  4276cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276ce:	das    
  4276cf:	rcl    BYTE PTR [edx+0x79],0x2b
  4276d3:	jmp    0x4276a6
  4276d5:	sbb    BYTE PTR [ebp-0x16],dh
  4276d8:	mov    ecx,DWORD PTR [esi+ebx*4]
  4276db:	pop    esp
  4276dc:	xchg   edx,eax
  4276dd:	ins    DWORD PTR es:[edi],dx
  4276de:	loope  0x42772a
  4276e0:	(bad)  
  4276e1:	scas   eax,DWORD PTR es:[edi]
  4276e2:	xchg   esp,eax
  4276e3:	imul   ebx,DWORD PTR [ebx+edi*2+0x24063ea7],0xa2c7a2c4
  4276ee:	cmp    ecx,DWORD PTR [esi]
  4276f0:	enter  0x22f5,0x23
  4276f4:	addr16 sub dl,bh
  4276f7:	ja     0x4276a3
  4276f9:	inc    edi
  4276fa:	mov    bl,0xa3
  4276fc:	repz add al,0xc2
  4276ff:	jle    0x427728
  427701:	jae    0x42774d
  427703:	loope  0x427762
  427705:	push   0xf
  427707:	stc    
  427708:	jle    0x427765
  42770a:	and    ah,ah
  42770c:	sbb    al,0xe9
  42770e:	xchg   esi,eax
  42770f:	outs   dx,DWORD PTR ds:[esi]
  427710:	adc    BYTE PTR [esi-0x15],bl
  427713:	lods   eax,DWORD PTR ds:[esi]
  427714:	pop    ds
  427715:	les    edi,FWORD PTR [esi+eiz*2-0x4b]
  427719:	mov    edi,0x28795852
  42771e:	mov    eax,0xc629d798
  427723:	mov    eax,ds:0xa36c2eb9
  427728:	aam    0xf3
  42772a:	jnp    0x42770f
  42772c:	retf   
  42772d:	out    0xb2,al
  42772f:	cli    
  427730:	fadd   QWORD PTR [eax+0x26d84365]
  427736:	jo     0x427793
  427738:	pop    edi
  427739:	add    DWORD PTR [edx-0x4c],edi
  42773c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42773d:	mov    dl,0x8
  42773f:	pusha  
  427740:	push   edx
  427741:	shl    cl,1
  427743:	sbb    bl,BYTE PTR [eax]
  427745:	(bad)  
  427746:	js     0x427779
  427748:	add    bh,dh
  42774a:	sub    esi,DWORD PTR [eax]
  42774c:	(bad)  
  42774d:	sbb    eax,0xddae5d96
  427752:	loopne 0x4276f1
  427754:	mov    ds:0x32fd20bb,al
  427759:	stos   DWORD PTR es:[edi],eax
  42775a:	mov    bh,0xc8
  42775c:	ins    DWORD PTR es:[edi],dx
  42775d:	hlt    
  42775e:	into   
  42775f:	push   ds
  427760:	pop    esi
  427761:	adc    eax,0xbce61032
  427766:	push   eax
  427767:	or     ah,ch
  427769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42776a:	sbb    al,BYTE PTR [esi-0x44e891e8]
  427770:	fsubr  QWORD PTR [edx+0x418def97]
  427776:	cmp    DWORD PTR ss:[edi-0x24],edx
  42777a:	inc    ebp
  42777b:	mov    ebx,0x1f4477fd
  427780:	pop    edi
  427781:	cmp    eax,0x35e63ce
  427786:	pushf  
  427787:	cmp    esi,ecx
  427789:	nop
  42778a:	mov    bl,0x68
  42778c:	sub    al,0xe8
  42778e:	cmc    
  42778f:	(bad)  
  427790:	hlt    
  427791:	jbe    0x427751
  427793:	aas    
  427794:	repnz inc ebx
  427796:	push   cs
  427797:	pop    ebp
  427798:	adc    ebx,ebx
  42779a:	push   ebx
  42779b:	aad    0x69
  42779d:	jmp    0x427720
  42779f:	pop    esi
  4277a0:	popa   
  4277a1:	aam    0x8a
  4277a3:	sub    BYTE PTR [edx-0x11],0xfa
  4277a7:	std    
  4277a8:	in     eax,0x7a
  4277aa:	imul   edi,DWORD PTR [ebx+edx*4-0x48b42542],0x8129774a
  4277b5:	aaa    
  4277b6:	xchg   esp,eax
	...
  4277bf:	add    BYTE PTR [eax],al
  4277c1:	sub    al,0x44
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp-0x7f255d8a]
  4277cf:	cli    
  4277d0:	dec    ecx
  4277d1:	and    ebp,esi
  4277d3:	add    DWORD PTR [eax],eax
  4277d5:	scas   al,BYTE PTR es:[edi]
  4277d6:	add    eax,DWORD PTR [eax]
  4277d8:	add    BYTE PTR [edx-0x2c],ah
  4277db:	jne    0x427774
  4277dd:	or     al,0x16
  4277df:	jnp    0x42780f
  4277e1:	test   eax,0x9894bf26
  4277e6:	sbb    al,0xed
  4277e8:	jge    0x4277e1
  4277ea:	popa   
  4277eb:	jbe    0x427846
  4277ed:	jo     0x42781c
  4277ef:	leave  
  4277f0:	inc    ebp
  4277f1:	add    eax,0x97c820e
  4277f6:	ins    BYTE PTR es:[edi],dx
  4277f7:	(bad)  
  4277f8:	cmp    al,0xed
  4277fa:	mov    ebx,0xbe90d8ee
  4277ff:	mov    esi,0x310107eb
  427804:	call   0xe40e:0xc0e393dc
  42780b:	dec    esp
  42780c:	sbb    eax,0xce9c22d9
  427811:	es cmc 
  427813:	cld    
  427814:	loope  0x42787e
  427816:	repz (bad) 
  427818:	int    0x6e
  42781a:	push   ebx
  42781b:	leave  
  42781c:	inc    DWORD PTR [eax]
  42781e:	mov    ebx,0x3eebddba
  427823:	(bad)  
  427824:	lock icebp 
  427826:	mov    DWORD PTR [eax-0x1d050dac],eax
  42782c:	mov    ds,WORD PTR [edi]
  42782e:	pop    es
  42782f:	inc    edx
  427830:	xlat   BYTE PTR ds:[ebx]
  427831:	lahf   
  427832:	jne    0x4277cd
  427834:	jp     0x427830
  427836:	cmp    esp,DWORD PTR [edi]
  427838:	cmp    al,0xff
  42783a:	cmp    edi,DWORD PTR ds:0x8dca9d46
  427840:	xchg   esp,eax
  427841:	mov    BYTE PTR [ecx],0xea
  427844:	retf   
  427845:	lock clc 
  427847:	hlt    
  427848:	into   
  427849:	fs mov eax,0x9a58b9dc
  42784f:	dec    DWORD PTR [eax+0x20]
  427852:	sub    BYTE PTR [ebx-0x6e],0xa2
  427856:	sti    
  427857:	test   al,0x3a
  427859:	mov    ds:0x7afccb5f,al
  42785e:	not    BYTE PTR [ebx-0x66]
  427861:	inc    ebx
  427862:	fdiv   QWORD PTR [ebx-0x53bd64fd]
  427868:	jl     0x4278bd
  42786a:	adc    ch,0xae
  42786d:	shl    BYTE PTR [edi],0x57
  427870:	arpl   WORD PTR [esi+0x6040dfdc],bp
  427876:	cmp    DWORD PTR [ebx+0x1b],ecx
  427879:	pop    edx
  42787a:	lock inc ebx
  42787c:	out    0xcb,al
  42787e:	in     eax,dx
  42787f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427880:	jb     0x42784b
  427882:	loope  0x4278d0
  427884:	inc    ecx
  427885:	retf   0xe1ce
  427888:	(bad)  
  427889:	jl     0x427851
  42788b:	fst    DWORD PTR [esi+0x39]
  42788e:	aad    0x63
  427890:	stos   BYTE PTR es:[edi],al
  427891:	in     al,dx
  427892:	mov    bh,0x34
  427894:	out    0x35,eax
  427896:	pusha  
  427897:	je     0x427898
  427899:	cld    
  42789a:	add    BYTE PTR [ecx],ch
  42789c:	sbb    DWORD PTR [edi-0x24],eax
  42789f:	sub    al,0xd3
  4278a1:	cmp    DWORD PTR [ebx-0x4a],eax
  4278a4:	scas   al,BYTE PTR es:[edi]
  4278a5:	(bad)  [eax-0x78876426]
  4278ab:	je     0x42787a
  4278ad:	mov    cl,0xad
  4278af:	xchg   esi,eax
  4278b0:	or     ax,0x302f
  4278b4:	xor    bl,BYTE PTR [ecx]
  4278b6:	int3   
  4278b7:	ds xchg cl,dh
  4278ba:	cmp    bl,BYTE PTR [ebp+esi*2-0x47]
  4278be:	adc    eax,0x70d86790
  4278c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278c4:	jmp    0x427878
  4278c6:	int3   
  4278c7:	jns    0x4278f3
  4278c9:	test   eax,0x325d44c0
  4278ce:	adc    bl,BYTE PTR [eax]
  4278d0:	or     eax,DWORD PTR [ecx+0x2ad3b0a0]
  4278d6:	ins    BYTE PTR es:[edi],dx
  4278d7:	(bad)  
  4278d9:	popf   
  4278da:	sbb    eax,0x6299c0da
  4278df:	inc    esi
  4278e0:	ficomp DWORD PTR [esi+0x1ccd397c]
  4278e6:	mov    esp,0x5a45f403
  4278eb:	cmp    al,0xaa
  4278ed:	in     al,0x1a
  4278ef:	or     bl,0x90
  4278f2:	rol    DWORD PTR [edi+eax*2-0x60],cl
  4278f6:	(bad)  
  4278f7:	mov    ds:0x3c90ea20,eax
  4278fc:	mov    DWORD PTR es:[eax-0x3a],esp
  427900:	icebp  
  427901:	sub    BYTE PTR [edx],bh
  427903:	pop    ecx
  427904:	not    DWORD PTR [eax-0x67196d72]
  42790a:	(bad)  
  42790b:	stos   DWORD PTR es:[edi],eax
  42790c:	std    
  42790d:	sbb    esp,esp
  42790f:	in     eax,dx
  427910:	xor    BYTE PTR [ebx+esi*8],0x9
  427914:	xchg   ebp,eax
  427915:	ret    0x7abb
  427918:	mov    esi,ebp
  42791a:	adc    DWORD PTR [edi+0x271e491b],edi
  427920:	sub    al,0x99
  427922:	push   0xfffffffb
  427924:	stos   BYTE PTR es:[edi],al
  427925:	loope  0x427994
  427927:	push   eax
  427928:	pop    ecx
  427929:	sbb    eax,DWORD PTR [esi-0x15bcd183]
  42792f:	jp     0x427948
  427931:	test   al,0xc
  427933:	add    al,0x79
  427935:	dec    esi
  427936:	int    0x6b
  427938:	push   edx
  427939:	aaa    
  42793a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42793b:	or     eax,0x6c88e4c9
  427940:	rcl    DWORD PTR [eax],0x3a
  427943:	sti    
  427944:	push   0xffffffb1
  427946:	das    
  427947:	adc    cl,BYTE PTR [ebp+0x7f737596]
  42794d:	mov    edx,edi
  42794f:	sbb    BYTE PTR [esi-0x1ca9c95b],dl
  427955:	cmp    DWORD PTR [ebp+ebx*2+0x2c],esi
  427959:	jmp    0x6064:0xff0e1d62
  427960:	sahf   
  427961:	xchg   esp,eax
  427962:	inc    ecx
  427963:	rol    BYTE PTR [edx-0x1015599c],cl
  427969:	scas   eax,DWORD PTR es:[edi]
  42796a:	or     dh,BYTE PTR [edi+eiz*1+0x5ce08853]
  427971:	sub    al,0x14
  427973:	mov    ecx,0x9c93c94c
  427978:	and    BYTE PTR [esi],0x49
  42797b:	int3   
  42797c:	xlat   BYTE PTR ds:[ebx]
  42797d:	lahf   
  42797e:	push   ds
  42797f:	fadd   st(2),st
  427981:	mov    edi,0x98919ed
  427986:	pop    ebx
  427987:	pop    edx
  427988:	mov    bh,0x29
  42798a:	std    
  42798b:	cli    
  42798c:	aad    0x6a
  42798e:	pop    edi
  42798f:	dec    ebx
  427990:	ficom  WORD PTR [ebp-0x29]
  427993:	(bad)  
  427994:	dec    edx
  427995:	scas   al,BYTE PTR es:[edi]
  427996:	stos   BYTE PTR es:[edi],al
  427997:	cli    
  427998:	(bad)  [edx-0x35]
  42799b:	cwde   
  42799c:	fld    DWORD PTR [ebp+ebx*4+0x2f]
  4279a0:	mov    ebp,0xaaae9e89
  4279a5:	inc    edi
  4279a6:	sbb    eax,0x66b32491
  4279ab:	mov    bl,0xd3
  4279ad:	mov    esi,0xb4f2ab16
  4279b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279b3:	sbb    ebp,edx
  4279b5:	push   ss
  4279b6:	(bad)  
  4279b7:	aad    0xd9
  4279b9:	xchg   BYTE PTR [edi-0x79],al
  4279bc:	neg    DWORD PTR [esi+edi*4+0x1a]
  4279c0:	sti    
  4279c1:	mov    al,ds:0xa7c17f30
  4279c6:	out    dx,eax
  4279c7:	addr16 inc esp
  4279c9:	push   esp
  4279ca:	inc    esi
  4279cb:	in     al,dx
  4279cc:	or     ch,BYTE PTR [edx]
  4279ce:	or     cl,BYTE PTR [edi+0x4ca8d335]
  4279d4:	sbb    cl,bh
  4279d6:	fstp   QWORD PTR [eax+0x1d]
  4279d9:	jae    0x4279e3
  4279db:	idiv   BYTE PTR [edi-0x5718007f]
  4279e1:	lock jmp 0x253cf850
  4279e7:	cmp    bh,0x22
  4279ea:	mov    bl,0xf5
  4279ec:	push   cs
  4279ed:	test   eax,0x5e34acc1
  4279f2:	pop    ecx
  4279f3:	int    0xf2
  4279f5:	pop    ebp
  4279f6:	aaa    
  4279f7:	push   edi
  4279f8:	arpl   dx,ax
  4279fa:	loope  0x4279d7
  4279fc:	push   cs
  4279fd:	pop    ebp
  4279fe:	jmp    FWORD PTR [ecx+eiz*4]
  427a01:	scas   eax,DWORD PTR es:[edi]
  427a02:	add    al,0x8f
  427a04:	cmp    DWORD PTR [ebx+0x74],ebx
  427a07:	cmc    
  427a08:	sub    BYTE PTR [ebx+0x60],0x2a
  427a0c:	xchg   esi,eax
  427a0d:	ds xchg ecx,eax
  427a0f:	shr    bl,cl
  427a11:	push   edx
  427a12:	jg     0x4279fb
  427a14:	inc    esi
  427a15:	mov    bh,0x6e
  427a17:	pop    esp
  427a18:	(bad)
  427a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a1c:	add    esp,DWORD PTR [ebp-0x4a]
  427a1f:	das    
  427a20:	rcr    ebp,1
  427a22:	adc    eax,0x82268d27
  427a27:	cld    
  427a28:	(bad)  
  427a29:	in     al,dx
  427a2a:	and    al,BYTE PTR ds:[ecx+0x5f]
  427a2e:	mov    eax,0xf84f9a78
  427a33:	ret    0xcc6f
  427a36:	jbe    0x427ab3
  427a38:	idiv   DWORD PTR [ecx+0x6d]
  427a3b:	jne    0x427a7d
  427a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a3e:	jo     0x4279ef
  427a40:	cs scas al,BYTE PTR es:[edi]
  427a42:	mov    bl,0x74
  427a44:	mov    eax,0xd4c097b0
  427a49:	pop    edx
  427a4a:	cld    
  427a4b:	stos   BYTE PTR es:[edi],al
  427a4c:	test   ah,0xc1
  427a4f:	xor    eax,0x26f917fc
  427a54:	cli    
  427a55:	push   esi
  427a56:	mov    al,0xc9
  427a58:	cdq    
  427a59:	retf   0xbd0f
  427a5c:	jge    0x427a11
  427a5e:	sbb    DWORD PTR [eax],ebx
  427a60:	add    BYTE PTR [ebx+0x289a2945],al
  427a66:	inc    ecx
  427a67:	jg     0x427a8a
  427a69:	xchg   esp,eax
  427a6a:	adc    ebp,DWORD PTR [ebx-0x5f22a08b]
  427a70:	(bad)  
  427a71:	ins    BYTE PTR es:[edi],dx
  427a72:	jo     0x427abe
  427a74:	adc    DWORD PTR [esi+0x796fc0bf],esi
  427a7a:	sbb    esi,ebx
  427a7c:	mov    eax,0xf7d67e86
  427a81:	mov    ds:0x16b5aede,al
  427a86:	hlt    
  427a87:	in     al,dx
  427a88:	push   eax
  427a89:	arpl   WORD PTR [eax],bp
  427a8b:	mov    eax,ds:0x8e5fe52
  427a90:	push   cs
  427a91:	or     al,BYTE PTR [ebx-0x62c9c820]
  427a97:	lds    ebx,FWORD PTR [edx]
  427a99:	loop   0x427a92
  427a9b:	sub    BYTE PTR [edx],ah
  427a9d:	and    edx,DWORD PTR [ecx]
  427a9f:	dec    edi
  427aa0:	cs mov ebp,0x72fdab67
  427aa6:	daa    
  427aa7:	call   0x9113:0xd740349e
  427aae:	or     eax,ebp
  427ab0:	adc    eax,0x9dd84f4b
  427ab5:	aam    0x29
  427ab7:	adc    al,0x6d
  427ab9:	xchg   DWORD PTR [esi-0x5709e8f3],edx
  427abf:	jecxz  0x427abf
  427ac1:	test   BYTE PTR ds:0x28e017ad,ah
  427ac7:	mov    eax,0x877f146e
  427acc:	push   esp
  427acd:	nop
  427ace:	mov    ds:0xa2dcc9bb,eax
  427ad3:	mov    DWORD PTR [ebp+eiz*2+0x61],ebx
  427ad7:	cs push edi
  427ad9:	sub    dl,BYTE PTR [ebx+0x78]
  427adc:	pop    ss
  427add:	pusha  
  427ade:	rcr    bh,cl
  427ae0:	and    eax,0x7b9679bb
  427ae5:	or     BYTE PTR [esi-0x450f0b0],0x20
  427aec:	dec    esp
  427aed:	cmp    DWORD PTR [ecx-0x62],ecx
  427af0:	mov    bh,0x4f
  427af2:	in     al,0x59
  427af4:	jecxz  0x427b66
  427af6:	xchg   ebp,eax
  427af7:	jmp    0x427a83
  427af9:	xchg   ebx,eax
  427afa:	and    al,0xbc
  427afc:	lahf   
  427afd:	retf   0x8c2b
  427b00:	loopne 0x427b41
  427b02:	cmp    DWORD PTR [esi+edi*8+0x27732bcf],ecx
  427b09:	dec    edx
  427b0a:	iret   
  427b0b:	pop    ebx
  427b0c:	mov    bh,BYTE PTR ds:0x27d718ad
  427b12:	lock dec BYTE PTR [edx+0x3e]
  427b16:	test   eax,0x167f0cd4
  427b1b:	mov    WORD PTR [edi-0x1f],cs
  427b1e:	lahf   
  427b1f:	or     ah,BYTE PTR [ebp-0x6d]
  427b22:	stos   BYTE PTR es:[edi],al
  427b23:	cmp    al,BYTE PTR [esi+0x620eaf00]
  427b29:	mov    ch,0x7f
  427b2b:	inc    esi
  427b2c:	sub    cl,BYTE PTR [esi-0x66]
  427b2f:	push   edx
  427b30:	fwait
  427b31:	lds    esi,FWORD PTR [eax+0x29]
  427b34:	ds cli 
  427b36:	push   ebp
  427b37:	mov    eax,0xf957ec00
  427b3c:	in     al,0x89
  427b3e:	mov    DWORD PTR [ebx],edi
  427b40:	fidivr DWORD PTR [edi+eiz*1]
  427b43:	inc    BYTE PTR [esi+ecx*4]
  427b46:	(bad)
  427b4a:	cmp    al,0x1f
  427b4c:	ja     0x427b8f
  427b4e:	inc    esp
  427b4f:	fadd   QWORD PTR [ebx-0x181dbc1e]
  427b55:	fs (bad) 
  427b58:	push   ebx
  427b59:	pop    edx
  427b5a:	inc    ecx
  427b5b:	xchg   ecx,eax
  427b5c:	inc    ecx
  427b5d:	dec    eax
  427b5e:	mov    eax,0x45952c8
  427b63:	pop    ebx
  427b65:	and    cl,BYTE PTR [edx-0x6cce860d]
  427b6b:	or     al,0x73
  427b6d:	pop    edi
  427b6e:	fisttp QWORD PTR [ecx]
  427b70:	pushf  
  427b71:	daa    
  427b72:	cmp    esp,DWORD PTR [ebx]
  427b74:	mov    ds:0x1d1185c,eax
  427b79:	aaa    
  427b7a:	sub    ebx,DWORD PTR [edx-0x60]
  427b7d:	push   ebx
  427b7e:	aaa    
  427b7f:	fiadd  DWORD PTR [edx+0xb549277]
  427b85:	xor    al,0xe7
	...
  427b8f:	add    BYTE PTR [eax],al
  427b91:	sub    esp,eax
  427b93:	jnp    0x427bcd
  427b95:	sti    
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    DWORD PTR [ebp-0x49],eax
  427b9f:	pop    edi
  427ba0:	not    cl
  427ba2:	icebp  
  427ba3:	add    DWORD PTR [eax],eax
  427ba5:	scas   al,BYTE PTR es:[edi]
  427ba6:	add    eax,DWORD PTR [eax]
  427ba8:	add    ch,bl
  427baa:	dec    esp
  427bab:	add    edi,DWORD PTR [esi-0x47dfb3fc]
  427bb1:	sub    al,0x6d
  427bb3:	pop    esi
  427bb4:	mov    DWORD PTR [eax+0x59e4541b],edi
  427bba:	loope  0x427bf6
  427bbc:	mov    ds:0xe7dfa63d,al
  427bc1:	aaa    
  427bc2:	mov    bh,0x2e
  427bc4:	xor    al,0x21
  427bc6:	xchg   edx,eax
  427bc7:	repz je 0x427bec
  427bca:	test   eax,0x94cb8e6e
  427bcf:	dec    esi
  427bd0:	arpl   cx,bx
  427bd2:	mov    ss,WORD PTR [edx]
  427bd4:	add    ebx,esi
  427bd6:	cmp    edi,DWORD PTR [edx]
  427bd8:	sbb    ah,dl
  427bda:	and    bh,cl
  427bdc:	and    BYTE PTR [eax+0xe],bh
  427bdf:	ror    DWORD PTR [esi],cl
  427be1:	outs   dx,BYTE PTR ds:[esi]
  427be2:	add    edx,eax
  427be4:	jmp    edi
  427be6:	in     eax,dx
  427be7:	call   0x5ce5:0xb662c9b9
  427bee:	mov    ss:0xf3846baf,al
  427bf4:	stos   DWORD PTR es:[edi],eax
  427bf5:	add    dl,BYTE PTR [edi]
  427bf7:	inc    ebx
  427bf8:	sahf   
  427bf9:	push   0x80a1e87f
  427bfe:	icebp  
  427bff:	add    eax,0x98775ab9
  427c04:	add    eax,0x2d1a2c2b
  427c09:	iret   
  427c0a:	pop    edi
  427c0b:	jmp    0x427bdc
  427c0d:	(bad)  
  427c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c0f:	xor    al,0x83
  427c11:	dec    esp
  427c12:	aaa    
  427c13:	in     eax,dx
  427c14:	pushf  
  427c15:	xchg   BYTE PTR [esi],al
  427c17:	stc    
  427c18:	xchg   ecx,eax
  427c19:	retf   0x79b3
  427c1c:	sets   bl
  427c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c20:	shr    DWORD PTR [edi-0x6b],cl
  427c23:	mov    esi,ebx
  427c25:	in     eax,0x3d
  427c27:	fcom   DWORD PTR [ecx-0x8bac831]
  427c2d:	xor    DWORD PTR [ecx-0x38],edx
  427c30:	outs   dx,DWORD PTR ds:[esi]
  427c31:	fbstp  TBYTE PTR [edi+0x3b]
  427c35:	mov    edi,0x83ac18d2
  427c3a:	push   ebx
  427c3b:	cwde   
  427c3c:	call   0x9a2f:0x2ed87639
  427c43:	leave  
  427c44:	les    ebp,FWORD PTR gs:[ebx+0x2e8f9a37]
  427c4b:	(bad)  
  427c4c:	out    dx,eax
  427c4d:	fsubr  QWORD PTR [edx]
  427c4f:	adc    al,0x35
  427c51:	xor    WORD PTR [ecx-0x6c],bx
  427c55:	mov    ebx,0xe584715
  427c5a:	ficomp WORD PTR [esi+0x76]
  427c5d:	lds    ecx,FWORD PTR [esp+edi*1+0x23]
  427c61:	push   edx
  427c62:	and    dl,BYTE PTR [edx+eiz*1]
  427c65:	pusha  
  427c66:	lock pop esp
  427c68:	jle    0x427c58
  427c6a:	cmp    ebp,esi
  427c6c:	popa   
  427c6d:	xchg   edi,eax
  427c6e:	add    DWORD PTR [esi+0x67],ebp
  427c71:	aas    
  427c72:	xor    BYTE PTR [ebp-0xd094305],al
  427c78:	data16 stos BYTE PTR es:[edi],al
  427c7a:	add    BYTE PTR [esi],ah
  427c7c:	pop    es
  427c7d:	aas    
  427c7e:	pop    ebp
  427c7f:	add    eax,0xffffff93
  427c82:	idiv   bh
  427c84:	hlt    
  427c85:	pop    edi
  427c86:	mov    ecx,ebx
  427c88:	inc    ebx
  427c89:	dec    esi
  427c8a:	imul   edi,DWORD PTR [edi+0x59886284],0x4eaa93a0
  427c94:	fs pop ecx
  427c96:	push   edx
  427c97:	test   al,0x81
  427c99:	mov    ds:0x76d0d3a,eax
  427c9e:	cmp    bl,BYTE PTR [ebx+0x2a3f8c76]
  427ca4:	push   ds
  427ca5:	dec    ecx
  427ca6:	mov    dl,0x99
  427ca8:	fs add eax,0xca275652
  427cae:	xor    eax,0xc754bd9a
  427cb3:	sub    dh,cl
  427cb5:	data16 cmp cl,BYTE PTR [edi-0x1]
  427cb9:	pop    ds
  427cba:	mov    bl,0x93
  427cbc:	jle    0x427cd7
  427cbe:	xor    al,BYTE PTR [edx-0x49]
  427cc1:	repz sub DWORD PTR [eax],0xf72ccf4a
  427cc8:	cmp    BYTE PTR [eax],al
  427cca:	xor    ch,cl
  427ccc:	bound  esi,QWORD PTR [edi]
  427cce:	lods   al,BYTE PTR ds:[esi]
  427ccf:	sbb    dh,BYTE PTR [ecx]
  427cd1:	call   0xd1e2a220
  427cd6:	call   0x8502:0x9aebf5ae
  427cdd:	add    DWORD PTR [ebx],ebp
  427cdf:	ret    
  427ce0:	fstp   QWORD PTR cs:[ebx+0x15802a0d]
  427ce7:	out    dx,eax
  427ce8:	retf   0xbb99
  427ceb:	test   eax,0xfdcc9b2c
  427cf0:	rcr    ecx,1
  427cf2:	or     eax,0xfb15525c
  427cf7:	rol    BYTE PTR [edx+0x48],1
  427cfa:	xchg   ebx,eax
  427cfb:	mov    bl,0x33
  427cfd:	xor    eax,0x9eaab6a2
  427d02:	stos   BYTE PTR es:[edi],al
  427d03:	xor    dh,ah
  427d05:	clc    
  427d06:	outs   dx,BYTE PTR ds:[esi]
  427d07:	sub    al,0x85
  427d09:	sub    eax,0xa11ced8d
  427d0e:	(bad)  
  427d10:	sbb    DWORD PTR [edx+0x231bdf79],esi
  427d16:	out    dx,eax
  427d17:	call   0x153cec7
  427d1c:	aaa    
  427d1d:	invd   
  427d1f:	es call 0xa4f64ea9
  427d25:	and    ebp,DWORD PTR [esi+0x5d]
  427d28:	repz or bh,dl
  427d2b:	dec    esp
  427d2c:	adc    BYTE PTR [ecx+eax*2],0x15
  427d30:	out    dx,al
  427d31:	sub    eax,0xe39b1cfa
  427d36:	or     bh,BYTE PTR [ebx-0x705679f9]
  427d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d3d:	or     al,0xfc
  427d3f:	jbe    0x427ceb
  427d41:	push   es
  427d42:	loop   0x427d75
  427d44:	dec    ebp
  427d45:	pop    ss
  427d46:	dec    esi
  427d47:	push   esi
  427d48:	hlt    
  427d49:	hlt    
  427d4a:	jno    0x427d40
  427d4c:	and    eax,0xe930f7a0
  427d51:	sbb    DWORD PTR [edx+0x68],esi
  427d54:	popf   
  427d55:	std    
  427d56:	ja     0x427d46
  427d58:	retf   0x19ad
  427d5b:	(bad)  
  427d5d:	pusha  
  427d5e:	rcl    DWORD PTR [eax-0x5dceb5a9],0x24
  427d65:	add    ah,BYTE PTR [esi-0x6649d9dc]
  427d6b:	dec    eax
  427d6c:	push   ecx
  427d6d:	pop    eax
  427d6e:	adc    DWORD PTR [edi+0x3a149e64],edi
  427d74:	or     ah,BYTE PTR [ecx+ebx*2]
  427d77:	or     eax,0x82f5224
  427d7c:	cmp    eax,0x53fa789a
  427d81:	pop    edi
  427d82:	mov    ebx,0xc1d60f55
  427d87:	mov    bh,0xeb
  427d89:	ins    BYTE PTR es:[edi],dx
  427d8a:	jmp    DWORD PTR [ecx+0x8]
  427d8d:	pop    edi
  427d8e:	stos   BYTE PTR es:[edi],al
  427d8f:	xchg   BYTE PTR [ebx+ebp*8+0x6291ce94],bh
  427d96:	adc    DWORD PTR [ecx+esi*2],0x58daf3a6
  427d9d:	ds dec eax
  427d9f:	mov    DWORD PTR [esi-0xf],0x8fde45c6
  427da6:	sub    DWORD PTR [ecx],0xfffffffd
  427da9:	xchg   esi,eax
  427daa:	call   0xcb32:0x8bb02c22
  427db1:	pop    eax
  427db2:	push   ebx
  427db3:	jne    0x427d57
  427db5:	dec    eax
  427db7:	test   al,0x46
  427db9:	mov    ebx,0x767b1d5d
  427dbe:	and    al,0xe7
  427dc0:	xchg   edx,eax
  427dc1:	inc    esp
  427dc2:	xchg   esi,eax
  427dc3:	imul   esp,DWORD PTR [edx-0x1405bdb5],0x7fa1eb83
  427dcd:	lods   eax,DWORD PTR ds:[esi]
  427dce:	inc    eax
  427dcf:	cdq    
  427dd0:	js     0x427e2b
  427dd2:	cmp    cl,BYTE PTR [esi]
  427dd4:	xchg   ecx,eax
  427dd5:	and    eax,0x5172ad8a
  427dda:	jno    0x427e0c
  427ddc:	push   esp
  427ddd:	icebp  
  427dde:	xor    DWORD PTR [ecx-0x64],ebp
  427de1:	cmp    dh,BYTE PTR [edi+0x4f48ca9b]
  427de7:	(bad)  
  427de8:	daa    
  427de9:	or     cl,bh
  427deb:	daa    
  427dec:	(bad)  [edi-0x56a010a2]
  427df2:	cmp    edx,DWORD PTR [ebp+0x45c126aa]
  427df8:	pop    ss
  427df9:	xchg   DWORD PTR [ebp+0x65a13cbc],ecx
  427dff:	lea    edx,[eax-0x7ad9c623]
  427e05:	cmp    eax,0x7540da6d
  427e0a:	or     ebp,DWORD PTR [edi]
  427e0c:	fnclex 
  427e0e:	and    eax,0x5a867f72
  427e13:	push   edi
  427e14:	add    BYTE PTR ds:0x6bcd4cd5,ah
  427e1a:	jg     0x427e87
  427e1c:	mov    eax,0x1ac3ae9c
  427e21:	and    ebx,DWORD PTR [edi-0x17b8874f]
  427e27:	mov    bh,0x3f
  427e29:	and    eax,0xca58be6a
  427e2e:	retf   0xe761
  427e31:	rcr    dh,0x8c
  427e34:	cmc    
  427e35:	push   ecx
  427e36:	pop    eax
  427e37:	push   ebx
  427e38:	sahf   
  427e39:	outs   dx,DWORD PTR ds:[esi]
  427e3a:	cmp    eax,DWORD PTR [eax]
  427e3c:	jg     0x427e26
  427e3e:	mov    bh,0x13
  427e40:	lahf   
  427e41:	clc    
  427e42:	inc    eax
  427e43:	fadd   DWORD PTR [eax+ebp*2]
  427e46:	out    0x78,eax
  427e48:	test   DWORD PTR [ecx-0x55],edx
  427e4b:	call   0xd27:0xee0093c7
  427e52:	inc    edx
  427e53:	add    al,BYTE PTR [ebx]
  427e55:	and    dh,BYTE PTR [ebp-0x76e4cfa7]
  427e5b:	inc    ebp
  427e5c:	aam    0xd1
  427e5e:	mov    esi,esp
  427e60:	pop    ds
  427e61:	outs   dx,BYTE PTR ds:[esi]
  427e62:	and    ah,BYTE PTR [ebx-0x64fc63b1]
  427e68:	nop
  427e69:	mov    cl,0xeb
  427e6b:	repnz enter 0x6ff3,0x68
  427e70:	sbb    DWORD PTR ds:[ecx+0x56802a25],0xffffffe6
  427e78:	sub    esp,edi
  427e7a:	push   ecx
  427e7b:	imul   edx,DWORD PTR [ebx+0x30],0xffffffa4
  427e7f:	stos   DWORD PTR es:[edi],eax
  427e80:	lea    esi,[edx+ebp*4+0x4d]
  427e84:	add    BYTE PTR cs:[ecx-0x32654e7d],0x5a
  427e8c:	mov    eax,ds:0x6525c2d
  427e91:	jge    0x427f0c
  427e93:	push   ds
  427e94:	aad    0xde
  427e96:	hlt    
  427e97:	repnz jecxz 0x427e9c
  427e9a:	ror    BYTE PTR [ebx+0x4386ce7a],cl
  427ea0:	fsubp  st(7),st
  427ea2:	sbb    DWORD PTR [eax],esp
  427ea4:	mov    dh,0x48
  427ea6:	lds    ax,DWORD PTR [ebx]
  427ea9:	aaa    
  427eaa:	scas   al,BYTE PTR es:[edi]
  427eab:	push   esp
  427eac:	dec    ebx
  427ead:	aad    0x11
  427eaf:	jge    0x427e98
  427eb1:	mov    WORD PTR [edx],gs
  427eb3:	ds into 
  427eb5:	rol    BYTE PTR [edi+0x3a53666],0x96
  427ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ebd:	jae    0x427ef4
  427ebf:	add    BYTE PTR [ebx],ch
  427ec1:	mov    ds:0x86118a17,al
  427ec6:	mov    bl,0x50
  427ec8:	mov    ah,0x41
  427eca:	sub    eax,0x83dc1c7f
  427ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ed0:	pop    edi
  427ed1:	inc    ecx
  427ed2:	dec    eax
  427ed3:	and    BYTE PTR [eax+ecx*4+0xbfaba36],ah
  427eda:	rcr    BYTE PTR [eax+eiz*4],1
  427edd:	nop
  427ede:	cmp    al,0x82
  427ee0:	xchg   ebx,eax
  427ee1:	loopne 0x427f43
  427ee3:	out    dx,eax
  427ee4:	gs in  eax,dx
  427ee6:	jb     0x427e9d
  427ee8:	sti    
  427ee9:	mov    dh,0xd7
  427eeb:	shl    DWORD PTR [edi],1
  427eed:	mov    edx,0x3bad7faa
  427ef2:	mov    esp,0x4668f1d3
  427ef7:	rcr    cl,0xf0
  427efa:	and    edi,DWORD PTR [ebp-0x1d]
  427efd:	(bad)  gs:[ecx]
  427f00:	pushw  es
  427f02:	daa    
  427f03:	xchg   ebp,eax
  427f04:	ss aad 0x69
  427f07:	stos   DWORD PTR es:[edi],eax
  427f08:	in     eax,dx
  427f09:	mov    dl,0xfd
  427f0b:	fst    DWORD PTR [edx+0x5a]
  427f0e:	push   eax
  427f0f:	adc    BYTE PTR [ebp+0x33],0x27
  427f13:	sar    DWORD PTR [ecx],cl
  427f15:	iret   
  427f16:	adc    eax,0x464793b
  427f1b:	xchg   ecx,eax
  427f1c:	sub    BYTE PTR [edx-0x71baa5dc],dl
  427f22:	dec    eax
  427f23:	iret   
  427f24:	mov    ds:0xe17e1b50,eax
  427f29:	int    0x84
  427f2b:	or     al,0xd2
  427f2d:	sub    al,0xbb
  427f2f:	sub    BYTE PTR [eax],al
  427f31:	mov    eax,ds:0x4014781b
  427f36:	repnz jmp 0xef63:0x6128743d
  427f3e:	rcl    DWORD PTR [esp+ecx*8+0x2998da27],cl
  427f45:	test   BYTE PTR [ecx+0x3ddbc4f0],0x1a
  427f4c:	in     eax,0x62
  427f4e:	sar    edx,0x4d
  427f51:	add    ebp,ecx
  427f53:	hlt    
  427f54:	repz and BYTE PTR [ecx+0x0],dl
  427f5b:	add    BYTE PTR [eax],al
  427f5d:	add    BYTE PTR [eax],al
  427f5f:	add    BYTE PTR [eax],al
  427f61:	mov    ah,0x8b
  427f63:	(bad)
  427f66:	fbstp  TBYTE PTR [esi-0x1e57cf15]
  427f6c:	mov    ebx,0x5639ee95
  427f71:	jg     0x427f68
  427f73:	add    DWORD PTR [eax],eax
  427f75:	xchg   ebx,eax
  427f76:	add    eax,DWORD PTR [eax]
  427f78:	add    BYTE PTR [edi-0xfc0008e],ch
  427f7e:	paddq  mm7,QWORD PTR [edx+0xc]
  427f82:	mov    edx,0x4b284207
  427f87:	mov    ecx,ebp
  427f89:	or     BYTE PTR [edx+0x7582462d],cl
  427f8f:	add    ebx,DWORD PTR [edi]
  427f91:	jmp    0x427f95
  427f93:	mov    dl,0x35
  427f95:	add    al,0xe
  427f97:	loopne 0x427f3f
  427f99:	mov    cl,0x35
  427f9b:	loop   0x427fe8
  427f9d:	ret    
  427f9e:	popf   
  427f9f:	jle    0x427fee
  427fa1:	jno    0x427f42
  427fa3:	mov    BYTE PTR [ebx],dh
  427fa5:	xor    eax,0xd8bd5529
  427faa:	push   ds
  427fab:	xor    ecx,DWORD PTR [edx]
  427fad:	pop    es
  427fae:	fs in  al,0x97
  427fb1:	xchg   ebx,eax
  427fb2:	ja     0x427fa7
  427fb4:	jmp    0x599e3bf8
  427fb9:	fldenv [esp+edx*1-0x48892051]
  427fc0:	(bad)  
  427fc1:	fstp   QWORD PTR [edx]
  427fc3:	jno    0x428027
  427fc5:	xchg   edx,eax
  427fc6:	cmovnp edi,DWORD PTR [edi+0x10dc415a]
  427fcd:	(bad)  
  427fce:	jne    0x428046
  427fd0:	dec    eax
  427fd1:	push   ss
  427fd2:	(bad)  
  427fd3:	popa   
  427fd4:	outs   dx,BYTE PTR ds:[esi]
  427fd5:	inc    eax
  427fd6:	fsub   QWORD PTR [esi+0xb]
  427fd9:	dec    eax
  427fda:	sbb    BYTE PTR [edx-0x23164b8f],dl
  427fe0:	xor    al,0x2d
  427fe2:	sbb    DWORD PTR [ebx-0x6a],edi
  427fe5:	xchg   esp,eax
  427fe6:	jmp    FWORD PTR [esp+edi*2]
  427fe9:	sbb    DWORD PTR [eax],esi
  427feb:	lea    esi,[ecx+0x45]
  427fee:	(bad)  
  427ff0:	aas    
  427ff1:	or     ecx,eax
  427ff3:	pop    ecx
  427ff4:	fisub  WORD PTR [esi+ebx*2+0x3b]
  427ff8:	retf   0x1096
  427ffb:	(bad)  
  427ffc:	loopne 0x427fbc
  427ffe:	cmp    ebx,ebp
  428000:	nop
  428001:	mov    dh,0x50
  428003:	or     dh,dl
  428005:	adc    esi,ebx
  428007:	pop    ebx
  428008:	loopne 0x427fb8
  42800a:	add    ch,BYTE PTR [ecx+ebp*4-0x6b]
  42800e:	das    
  42800f:	loope  0x428016
  428011:	and    BYTE PTR [ebx+0x34],bh
  428014:	mov    edi,0x1a0d65c3
  428019:	xor    edx,esp
  42801b:	(bad)  
  42801c:	es xchg edi,eax
  42801e:	dec    edi
  42801f:	dec    edx
  428020:	icebp  
  428021:	sub    ebx,DWORD PTR [ebx+0x63ac1748]
  428027:	sub    BYTE PTR [esi+0x41fca55e],bl
  42802d:	outs   dx,DWORD PTR ds:[esi]
  42802e:	ins    BYTE PTR es:[edi],dx
  42802f:	push   edx
  428030:	or     eax,0x6674afea
  428035:	mov    DWORD PTR [esi],esp
  428037:	rep outs dx,DWORD PTR ds:[esi]
  428039:	inc    esi
  42803a:	in     al,0x3a
  42803c:	sub    BYTE PTR [edx+0x1c],bh
  42803f:	adc    ah,BYTE PTR [ecx]
  428041:	pop    es
  428042:	stos   DWORD PTR es:[edi],eax
  428043:	jo     0x427ffb
  428045:	mov    esp,0x6b8f1acc
  42804a:	mov    ebx,0x8ef932ea
  42804f:	dec    ebp
  428050:	xor    al,0x43
  428052:	ficom  WORD PTR [edi]
  428054:	inc    edi
  428055:	imul   esp,DWORD PTR [ecx+eiz*2+0x5f1fb0ed],0x2c
  42805d:	pop    ss
  42805e:	sub    esi,ecx
  428060:	push   esi
  428061:	loopne 0x428043
  428063:	nop
  428064:	cmp    al,BYTE PTR [edx]
  428066:	jbe    0x4280ac
  428068:	mov    al,ds:0x55bdfc56
  42806d:	mov    cl,0x1c
  42806f:	fs jge 0x42807e
  428072:	gs retf 
  428074:	daa    
  428075:	sbb    bl,BYTE PTR [ecx]
  428077:	imul   ebx,ebx,0x248e36b7
  42807d:	pushf  
  42807e:	pushf  
  42807f:	imul   eax,DWORD PTR [edi-0x7dd67a5],0xffffff81
  428086:	xor    BYTE PTR [bx+0x17],ah
  42808a:	retf   0x15e3
  42808d:	mov    al,0x21
  42808f:	fcmove st,st(2)
  428091:	adc    al,0xa
  428093:	add    al,0x9b
  428095:	inc    edi
  428096:	(bad)  
  428098:	xchg   edx,eax
  428099:	sub    DWORD PTR [edi+0x55],ecx
  42809c:	xchg   BYTE PTR [esi],cl
  42809e:	outs   dx,DWORD PTR ds:[esi]
  42809f:	xor    ah,al
  4280a1:	das    
  4280a2:	xchg   ecx,eax
  4280a3:	jge    0x42809e
  4280a5:	cmc    
  4280a6:	popa   
  4280a7:	das    
  4280a8:	mov    dh,0x11
  4280aa:	mov    ah,0x85
  4280ac:	push   0xcd5ca38a
  4280b1:	sub    DWORD PTR [edi+0x701c0b14],esi
  4280b7:	sub    DWORD PTR ds:0xd213405,edi
  4280bd:	fbstp  TBYTE PTR [ecx+0x16]
  4280c0:	push   es
  4280c1:	(bad)  
  4280c2:	in     eax,dx
  4280c3:	or     esi,DWORD PTR [edx-0x3205f356]
  4280c9:	inc    ecx
  4280ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280cb:	jmp    0x4280b6
  4280cd:	loope  0x428097
  4280cf:	nop
  4280d0:	mov    DWORD PTR [ebx],esp
  4280d2:	rol    ebp,cl
  4280d4:	fidiv  WORD PTR [ebx]
  4280d6:	push   ebx
  4280d7:	mov    fs,WORD PTR [eax]
  4280d9:	in     eax,dx
  4280da:	jl     0x4280b9
  4280dc:	jp     0x428127
  4280de:	mov    bh,0x7c
  4280e0:	test   DWORD PTR [edi-0x75ee825a],ecx
  4280e6:	dec    edi
  4280e7:	fisttp DWORD PTR [edi+0x2e]
  4280ea:	sub    ah,BYTE PTR [esi+0x4]
  4280ed:	add    ecx,DWORD PTR ds:0x19dd5b0c
  4280f3:	imul   ebx,DWORD PTR [ebp+0xdff9ba7],0xffffffa5
  4280fa:	xchg   DWORD PTR [ecx+0x5a2774f6],edi
  428100:	push   edi
  428101:	mov    ah,0xf9
  428103:	scas   al,BYTE PTR es:[edi]
  428104:	shr    DWORD PTR [esp+edi*2-0x74c7240f],cl
  42810b:	(bad)  
  42810c:	mov    esi,0xcf8f5b47
  428111:	out    0xb7,eax
  428113:	mov    ah,0x23
  428115:	mov    eax,esi
  428117:	bound  ebp,QWORD PTR [esp+edi*2+0x583f5126]
  42811e:	cmp    ebx,ebp
  428120:	jmp    0x42812b
  428122:	or     BYTE PTR [edi],cl
  428124:	loopne 0x428151
  428126:	add    ah,bl
  428128:	lea    eax,[ecx+0x55]
  42812b:	stc    
  42812c:	out    0x43,al
  42812e:	pop    edi
  42812f:	xchg   ecx,eax
  428130:	xchg   esp,esi
  428132:	fld    DWORD PTR [edx]
  428134:	inc    edi
  428135:	cs in  al,dx
  428137:	jl     0xf8450454
  42813d:	fidivr WORD PTR [eax]
  42813f:	jecxz  0x428183
  428141:	arpl   bx,dx
  428143:	rol    BYTE PTR [ebx+esi*4-0x2970bf48],1
  42814a:	add    al,0x8
  42814c:	mov    edi,0xc2a3cc01
  428151:	or     esp,DWORD PTR [ebp+eiz*2+0x6e]
  428155:	pop    ebx
  428156:	mov    bl,0xaf
  428158:	xor    DWORD PTR [edi-0x3159ce0f],eax
  42815e:	inc    ecx
  42815f:	and    BYTE PTR [edx+edi*1],al
  428162:	push   edi
  428163:	xchg   ebx,eax
  428164:	pop    edi
  428165:	sysexit 
  428167:	(bad)  
  428169:	push   ss
  42816a:	(bad)  
  42816b:	fild   DWORD PTR [edi+0x3d5c79da]
  428171:	popa   
  428172:	push   ss
  428173:	push   eax
  428174:	xor    cl,BYTE PTR ds:0x902acddd
  42817a:	lods   al,BYTE PTR ds:[esi]
  42817b:	pop    esp
  42817c:	jg     0x428191
  42817e:	inc    ebx
  42817f:	push   ss
  428180:	jmp    0x2346:0x824944f
  428187:	in     eax,dx
  428188:	xor    edi,eax
  42818a:	(bad)  
  42818c:	outs   dx,BYTE PTR ds:[esi]
  42818d:	adc    ecx,DWORD PTR [esi+0x277caac4]
  428193:	jo     0x428191
  428195:	enter  0x296c,0x59
  428199:	add    ecx,0x131d24eb
  42819f:	jmp    DWORD PTR [ecx-0x63c8d1]
  4281a5:	mov    edx,cs
  4281a7:	cdq    
  4281a8:	xor    eax,0x53c44bc1
  4281ad:	mov    bl,0x95
  4281af:	retf   
  4281b0:	xchg   esi,eax
  4281b1:	and    DWORD PTR [esi+eiz*1-0x1b],edx
  4281b5:	xchg   esi,eax
  4281b6:	call   0x3621d200
  4281bb:	push   es
  4281bc:	stc    
  4281bd:	dec    ebx
  4281be:	fist   DWORD PTR [esi-0x9db99e1]
  4281c4:	xor    DWORD PTR [eax+eax*8+0x252b1ba6],edx
  4281cb:	fidiv  DWORD PTR [ebp-0x49c60185]
  4281d1:	mov    esp,0x9ae9c41f
  4281d6:	xor    BYTE PTR [ecx-0x6607331c],ah
  4281dc:	mov    esp,0x8bda16ab
  4281e1:	test   ebp,0x978199a2
  4281e7:	pop    eax
  4281e8:	outs   dx,BYTE PTR ds:[esi]
  4281e9:	jnp    0x4281f9
  4281eb:	(bad)  
  4281ed:	retf   0x964f
  4281f0:	retf   0x3052
  4281f3:	jl     0x4281d1
  4281f5:	xchg   esp,eax
  4281f6:	and    BYTE PTR [ebp+edx*1+0x5e],ah
  4281fa:	popf   
  4281fb:	sub    edi,edx
  4281fd:	mov    dl,0x36
  4281ff:	ror    BYTE PTR [edx-0x5c],1
  428202:	out    0xe5,eax
  428204:	xchg   DWORD PTR [ebx],ecx
  428206:	mov    ah,0x49
  428208:	test   BYTE PTR [esi+0x645df7bc],ch
  42820e:	adc    DWORD PTR ds:0x979f8be6,ebp
  428214:	push   ecx
  428215:	jb     0x428279
  428217:	popa   
  428218:	fsub   DWORD PTR [ebx-0x435170d7]
  42821e:	sbb    eax,0x6cf3b11
  428223:	in     al,0x14
  428225:	addr16 not ebp
  428228:	int3   
  428229:	(bad)  
  42822b:	fscale 
  42822d:	dec    ebx
  42822e:	sbb    BYTE PTR [ecx],bl
  428230:	jg     0x428283
  428232:	rcr    BYTE PTR [esi],cl
  428234:	leave  
  428235:	xchg   edx,eax
  428236:	xlat   BYTE PTR ds:[ebx]
  428237:	mov    ds:0x5c19e638,al
  42823c:	das    
  42823d:	mov    ds:0x5f25553f,eax
  428242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428243:	adc    eax,DWORD PTR [esi+0x3826a2f0]
  428249:	or     edx,edx
  42824b:	xor    dl,0x9
  42824e:	popf   
  42824f:	or     edi,DWORD PTR [eax-0x4a]
  428252:	mov    cl,0x44
  428254:	das    
  428255:	xlat   BYTE PTR ds:[ebx]
  428256:	ds std 
  428258:	pop    ss
  428259:	add    ebp,DWORD PTR [edi-0x2e]
  42825c:	adc    al,0x3d
  42825e:	inc    edi
  42825f:	enter  0x4443,0x90
  428263:	xchg   BYTE PTR [ebx-0x6319c95b],al
  428269:	cmp    DWORD PTR [ecx-0xa],esp
  42826c:	dec    ecx
  42826d:	mov    bl,0x14
  42826f:	mov    edi,0xd2607b88
  428274:	out    dx,eax
  428275:	imul   ebp,DWORD PTR [edx-0x45],0xffffff8b
  428279:	inc    edx
  42827a:	test   BYTE PTR [esi+0x54c02ddc],ch
  428280:	dec    esi
  428281:	outs   dx,BYTE PTR ds:[esi]
  428282:	add    BYTE PTR [edi+0x19],dh
  428285:	gs and al,0xf1
  428288:	cmp    DWORD PTR [ebp-0x21],ebp
  42828b:	push   cs
  42828c:	(bad)  
  42828d:	cli    
  42828e:	(bad)  
  428290:	pusha  
  428291:	lods   al,BYTE PTR ds:[esi]
  428292:	push   cs
  428293:	les    ebp,FWORD PTR [ecx*4+0x21d24119]
  42829a:	test   eax,0x50a7c856
  42829f:	mov    cl,0xe3
  4282a1:	(bad)  
  4282a2:	xchg   edi,eax
  4282a3:	inc    esp
  4282a4:	inc    eax
  4282a5:	mov    edi,0x933c81b3
  4282aa:	xchg   ecx,eax
  4282ab:	dec    ebp
  4282ac:	test   bl,0xf0
  4282af:	push   esp
  4282b0:	push   0x65
  4282b2:	es call 0x3c58d20b
  4282b8:	jno    0x428326
  4282ba:	retf   0x4eb5
  4282bd:	ins    BYTE PTR es:[edi],dx
  4282be:	sub    al,0xeb
  4282c0:	test   al,0x5
  4282c2:	mov    ch,0xe7
  4282c4:	test   eax,0x71e6790
  4282c9:	js     0x428284
  4282cb:	push   edx
  4282cc:	out    0xbf,eax
  4282ce:	(bad)  
  4282cf:	and    eax,0xa1455cfd
  4282d4:	in     eax,dx
  4282d5:	and    dh,0x26
  4282d8:	push   cs
  4282d9:	test   eax,0xf2760935
  4282de:	xlat   BYTE PTR ds:[ebx]
  4282df:	lods   eax,DWORD PTR ds:[esi]
  4282e0:	xor    al,0x23
  4282e2:	dec    ecx
  4282e3:	dec    ebx
  4282e4:	xchg   ecx,eax
  4282e5:	push   cs
  4282e6:	test   cl,bh
  4282e8:	fild   QWORD PTR [ecx]
  4282ea:	jns    0x4282a9
  4282ec:	(bad)  
  4282ee:	xchg   DWORD PTR [ebx+ebx*2+0x4b],esi
  4282f2:	inc    ebp
  4282f3:	cmp    cl,BYTE PTR ds:0xf26335f8
  4282f9:	xor    edx,ebx
  4282fb:	bound  ebx,QWORD PTR [ecx-0x55]
  4282fe:	popf   
  4282ff:	inc    eax
  428300:	or     DWORD PTR [edi+0x6d],edx
  428303:	mov    ebx,0x9a714335
  428308:	repz push ebx
  42830a:	mov    al,ds:0x12
	...
