
88ec4726ce3bf0b3ff46aa9fc7065c65ea4788159236bcf419efdf08b96b8422.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	adc    DWORD PTR [esi-0x4811916c],edx
  411006:	mov    bl,0x84
  411008:	mov    ebx,0xe863613d
  41100d:	xchg   ecx,eax
  41100e:	out    dx,al
  41100f:	retf   0x5351
  411012:	lock sbb bl,dh
  411015:	mov    DWORD PTR [edi+0x30],ebp
  411018:	fcmovu st,st(3)
  41101a:	out    0xae,al
  41101c:	test   BYTE PTR [eax-0x6d03bd7a],bl
  411022:	pop    eax
  411023:	ret    
  411024:	sub    dl,0x50
  411027:	scas   eax,DWORD PTR es:[edi]
  411028:	ins    BYTE PTR es:[edi],dx
  411029:	aam    0x15
  41102b:	aaa    
  41102c:	and    al,0x9b
  41102e:	mov    ds:0x9d8f9a9f,eax
  411033:	sbb    al,0x1c
  411035:	xchg   edi,eax
  411036:	mov    esp,0x2a56decb
  41103b:	das    
  41103c:	ret    0x206b
  41103f:	mov    al,0x25
  411041:	das    
  411042:	sti    
  411043:	mov    al,ds:0x2ca2f0c
  411048:	jge    0x4110c4
  41104a:	jecxz  0x411046
  41104c:	inc    esp
  41104d:	jge    0x411017
  41104f:	addr16 dec ecx
  411051:	ret    0x2f26
  411054:	popa   
  411055:	out    dx,ax
  411057:	sub    DWORD PTR [ebx-0x6b1deda1],ebp
  41105d:	inc    ebx
  41105e:	pop    eax
  41105f:	push   ss
  411060:	sbb    eax,0xd8d0f08
  411065:	and    eax,0x9d6bffde
  41106a:	into   
  41106b:	push   ecx
  41106c:	inc    eax
  41106d:	inc    eax
  41106e:	div    DWORD PTR [esi-0x223f50e6]
  411074:	sbb    dl,dh
  411076:	enter  0x151d,0x9d
  41107a:	outs   dx,DWORD PTR ds:[esi]
  41107b:	addr16 int 0x52
  41107e:	jecxz  0x41107a
  411080:	jg     0x41106e
  411082:	cmp    eax,0x2e7b7139
  411087:	imul   eax,DWORD PTR [eax-0x30],0x90f243f2
  41108e:	mov    ecx,0xab0e024
  411093:	inc    ecx
  411094:	xor    BYTE PTR [ebx-0x41408532],ah
  41109a:	nop
  41109b:	inc    esi
  41109c:	inc    edi
  41109d:	sbb    al,0x1d
  41109f:	leave  
  4110a0:	lea    esi,[edi-0x5c93e051]
  4110a6:	retf   
  4110a7:	or     DWORD PTR [ebx+0x48aa516d],0x42c3f437
  4110b1:	pop    ss
  4110b2:	stc    
  4110b3:	inc    edi
  4110b4:	retf   0xcddb
  4110b7:	mov    dh,0x30
  4110b9:	adc    eax,0x2aca7834
  4110be:	or     ebx,DWORD PTR [edi-0x2e]
  4110c1:	xor    eax,0x7a5f8326
  4110c6:	mov    dh,0x6a
  4110c8:	frstor [eax+0x5c994f71]
  4110ce:	xchg   edi,eax
  4110cf:	dec    ebp
  4110d0:	sub    BYTE PTR [eax+edi*4+0x2507a96c],ch
  4110d7:	lds    ebp,FWORD PTR [ebx]
  4110d9:	push   eax
  4110da:	ins    BYTE PTR es:[edi],dx
  4110db:	arpl   WORD PTR [eax+0x7e],di
  4110de:	sub    al,0x4
  4110e0:	bound  ebp,QWORD PTR [ecx+0x4e]
  4110e3:	mov    dl,BYTE PTR [ebx+0x46]
  4110e6:	mov    cl,0xc8
  4110e8:	in     eax,dx
  4110e9:	pop    ds
  4110ea:	ror    DWORD PTR ds:0xa6cb0282,0xcf
  4110f1:	lea    esi,[edi+0x1ea7dd86]
  4110f7:	loope  0x41113a
  4110f9:	cmp    esi,DWORD PTR [ebp+ebx*4+0x1c]
  4110fd:	aam    0xf3
  4110ff:	jb     0x411105
  411101:	cmp    eax,DWORD PTR [ebx]
  411103:	push   es
  411104:	das    
  411105:	jecxz  0x411129
  411107:	test   DWORD PTR [edi+0x674ab7f1],eax
  41110d:	test   eax,0x15b166b3
  411112:	push   cs
  411113:	repnz es sar DWORD PTR fs:[ecx+edx*4],1
  411119:	and    al,dh
  41111b:	(bad)  
  41111c:	sbb    DWORD PTR [esi+0x40],edi
  41111f:	xchg   ecx,eax
  411120:	add    dl,al
  411122:	xchg   BYTE PTR [edx+0x36],dl
  411125:	push   ebx
  411126:	out    0x7d,eax
  411128:	inc    eax
  411129:	xchg   ebx,eax
  41112a:	pusha  
  41112b:	and    ebp,esp
  41112d:	pop    ds
  41112e:	fist   DWORD PTR ds:0x786b5312
  411134:	sbb    al,BYTE PTR [ecx+0x1790d6b9]
  41113a:	jo     0x41113c
  41113c:	aas    
  41113d:	mov    edx,DWORD PTR [ebp-0x5d539dae]
  411143:	or     eax,ebp
  411145:	sub    cl,BYTE PTR [edx-0x4ad0a754]
  41114b:	cli    
  41114c:	lock push esi
  41114e:	lds    edx,FWORD PTR ds:0x2ccf1a25
  411154:	cmp    edi,ebx
  411156:	ja     0x4110eb
  411158:	das    
  411159:	sbb    al,0x8e
  41115b:	cmp    ebp,DWORD PTR [eax-0x1e8bdb6b]
  411161:	dec    esp
  411162:	mov    dh,0xb3
  411164:	xchg   eax,edi
  411166:	sbb    BYTE PTR [esp+edi*4-0x6f],cl
  41116a:	enter  0xe4df,0xe8
  41116e:	add    eax,esi
  411170:	jo     0x4111c2
  411172:	mov    ebp,0x1f32d8a7
  411177:	imul   esp,edx,0x4d
  41117a:	inc    ecx
  41117b:	xchg   edx,eax
  41117c:	inc    edi
  41117d:	stc    
  41117e:	call   0xa92b:0x7b4f1632
  411185:	ins    DWORD PTR es:[edi],dx
  411186:	adc    esp,ebp
  411188:	loopne 0x4111d2
  41118a:	cmp    al,0x51
  41118c:	mov    ch,0x33
  41118e:	add    al,0xd3
  411190:	mov    WORD PTR ds:0x48f13369,fs
  411196:	icebp  
  411197:	xlat   BYTE PTR es:[ebx]
  411199:	mov    esp,0x4f8ffaeb
  41119e:	xlat   BYTE PTR ds:[ebx]
  41119f:	sbb    DWORD PTR [edi+0x56],edi
  4111a2:	mov    eax,ds:0xbe7aa63d
  4111a7:	popa   
  4111a8:	add    al,0xfd
  4111aa:	lods   eax,DWORD PTR ds:[esi]
  4111ab:	ins    BYTE PTR es:[edi],dx
  4111ac:	ds ss push es
  4111af:	mov    esi,0xd98397fd
  4111b4:	sub    DWORD PTR [ebp-0x707f2aac],esp
  4111ba:	repz jp 0x411153
  4111bd:	adc    dh,0x69
  4111c0:	mov    ebp,0x36c1984e
  4111c5:	ret    0x4dab
  4111c8:	outs   dx,BYTE PTR ds:[esi]
  4111c9:	fxam   
  4111cb:	stos   DWORD PTR es:[edi],eax
  4111cc:	push   esp
  4111cd:	cmp    bl,dh
  4111cf:	mov    WORD PTR [ecx-0x5f],es
  4111d2:	push   ebx
  4111d3:	in     al,0x16
  4111d5:	stos   BYTE PTR es:[edi],al
  4111d6:	xchg   edi,eax
  4111d7:	(bad)  
  4111d8:	neg    BYTE PTR [ebp+0x5e]
  4111db:	jns    0x411214
  4111dd:	scas   eax,DWORD PTR es:[edi]
  4111de:	popf   
  4111df:	jp     0x411210
  4111e1:	loope  0x411183
  4111e3:	sbb    al,0x8a
  4111e5:	sbb    bl,BYTE PTR [ebx]
  4111e7:	pop    ss
  4111e8:	xor    DWORD PTR [ebx],edx
  4111ea:	dec    esi
  4111eb:	push   ebx
  4111ec:	sbb    BYTE PTR [edi],cl
  4111ee:	fnstcw WORD PTR [ebx+ebx*2+0x69]
  4111f2:	sub    eax,0x48486dd3
  4111f7:	out    0x9a,eax
  4111f9:	not    DWORD PTR [esi+0x734b9aa6]
  4111ff:	es aaa 
  411201:	(bad)  
  411202:	inc    ebx
  411203:	pushf  
  411204:	push   es
  411205:	sub    eax,0xf9c92e5a
  41120a:	sahf   
  41120b:	ss into 
  41120d:	mov    eax,ds:0xdc17d98f
  411212:	inc    esi
  411213:	xor    al,0xdb
  411215:	add    eax,0x63973945
  41121a:	mov    al,0x9f
  41121c:	cs jg  0x411221
  41121f:	int    0x7b
  411221:	clc    
  411222:	add    bh,BYTE PTR [ecx]
  411224:	popa   
  411225:	outs   dx,BYTE PTR ds:[esi]
  411226:	mov    esi,0x38222ff6
  41122b:	mov    eax,ds:0xb9f3b8db
  411230:	js     0x41122f
  411232:	or     ch,dh
  411234:	jecxz  0x41126d
  411236:	gs push es
  411238:	adc    eax,0x7a680fa1
  41123d:	and    edi,ecx
  41123f:	adc    al,BYTE PTR [edi+0x7fbc75d8]
  411245:	jo     0x41121b
  411247:	ins    DWORD PTR es:[edi],dx
  411248:	xor    al,0xce
  41124a:	ds pop edx
  41124c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41124d:	std    
  41124e:	jg     0x411297
  411250:	das    
  411251:	hlt    
  411252:	daa    
  411253:	gs (bad) 
  411255:	rol    dh,1
  411257:	push   cs
  411258:	mov    al,0x6
  41125a:	lahf   
  41125b:	enter  0x86d0,0xfe
  41125f:	adc    edi,0xfffffffd
  411262:	dec    edx
  411263:	pop    esi
  411264:	mov    cl,0x9e
  411266:	xchg   edi,eax
  411267:	mov    dh,0x22
  411269:	pop    ecx
  41126a:	jo     0x411227
  41126c:	inc    edx
  41126d:	sbb    dh,dh
  41126f:	test   al,0x6c
  411271:	cmp    al,0x52
  411273:	cmp    esi,DWORD PTR [ebx-0x20e1e72a]
  411279:	inc    edx
  41127a:	jmp    0x9beb5bdc
  41127f:	scas   eax,DWORD PTR es:[edi]
  411280:	mov    cl,0xcb
  411282:	fwait
  411283:	mov    ecx,0x926a1491
  411288:	shl    bl,0x7a
  41128b:	mov    dh,0x57
  41128d:	sub    dh,bh
  41128f:	cmp    BYTE PTR [ebx],bl
  411291:	and    al,0x67
  411293:	mov    esi,0x2b7462ce
  411298:	sub    al,0xc2
  41129a:	arpl   WORD PTR [eax-0x3f2551c2],bx
  4112a0:	int    0xad
  4112a2:	mov    dl,0xe9
  4112a4:	rol    eax,cl
  4112a6:	sub    cl,BYTE PTR [eax+0x9]
  4112a9:	inc    ecx
  4112aa:	sbb    al,ch
  4112ac:	gs cmc 
  4112ae:	fldcw  WORD PTR ds:0xf1fc33a9
  4112b4:	mov    al,0x4e
  4112b6:	cwde   
  4112b7:	out    0xb3,eax
  4112b9:	push   0x1d
  4112bb:	push   esi
  4112bc:	xchg   esp,eax
  4112bd:	inc    edx
  4112be:	adc    BYTE PTR [ebx],bh
  4112c0:	mov    esi,0x65446f2d
  4112c5:	mov    ch,0xa6
  4112c7:	push   ebp
  4112c8:	lock or al,BYTE PTR [ecx]
  4112cb:	daa    
  4112cc:	in     al,0xd
  4112ce:	loope  0x41126c
  4112d0:	int3   
  4112d1:	cwde   
  4112d2:	jbe    0x41131b
  4112d4:	push   0xc211f6a2
  4112d9:	aam    0x80
  4112db:	mov    ebp,0x3294c8a7
  4112e0:	(bad)  
  4112e1:	call   0x9584:0x1587bc31
  4112e8:	sbb    esi,0x4e
  4112eb:	outs   dx,BYTE PTR ds:[esi]
  4112ec:	(bad)  
  4112ed:	int    0x90
  4112ef:	rcl    BYTE PTR [ebp+0x7b],1
  4112f2:	pop    es
  4112f3:	aas    
  4112f4:	sar    esi,1
  4112f6:	sbb    BYTE PTR [eax-0x3e],0xf5
  4112fa:	jo     0x41128c
  4112fc:	imul   edx,DWORD PTR [edi],0x71
  4112ff:	jg     0x41135e
  411301:	dec    esi
  411302:	xchg   ebx,eax
  411303:	(bad)  
  411304:	std    
  411305:	mov    bh,0x51
  411307:	dec    BYTE PTR [edi+eiz*4]
  41130a:	mov    ebp,0x9a8f0ae8
  41130f:	sbb    al,0x82
  411311:	sbb    eax,0x7bf14473
  411316:	lock not esp
  411319:	pop    esi
  41131a:	in     eax,0x37
  41131c:	sub    bl,bh
  41131e:	lahf   
  41131f:	(bad)  
  411321:	adc    DWORD PTR fs:[ebp+0x7b],ecx
  411325:	fist   DWORD PTR [ebx]
  411327:	es clc 
  411329:	mov    ebx,0x1ead24f6
  41132e:	xchg   ebx,eax
  41132f:	and    eax,0xb2255f35
  411334:	adc    DWORD PTR [edi-0x2c],ebx
  411337:	or     eax,0xab6a9218
  41133c:	sti    
  41133d:	(bad)  
  41133e:	mov    bh,0x3
  411340:	mov    DWORD PTR [ebp-0x7299e7ae],ecx
  411346:	pop    ss
  411347:	adc    esp,DWORD PTR ds:0xe8895706
  41134d:	dec    DWORD PTR [esi+0xb]
  411350:	into   
  411351:	jno    0x411390
  411353:	jae    0x411366
  411355:	ror    DWORD PTR [esi-0x380544d7],1
  41135b:	aam    0x11
  41135d:	scas   eax,DWORD PTR es:[edi]
  41135e:	xchg   DWORD PTR [ecx-0x39],edx
  411361:	test   BYTE PTR [ebx+ebp*4-0x7b],dh
  411365:	inc    esp
  411366:	mov    edi,0x555adcfa
  41136b:	sbb    eax,DWORD PTR [edx-0x6fc71687]
  411371:	mov    ecx,0x90229afc
  411376:	nop
  411377:	or     dh,cl
  411379:	jno    0x41136e
  41137b:	leave  
  41137c:	shr    BYTE PTR [ebx-0x69],cl
  41137f:	jp     0x4113c3
  411381:	and    dl,BYTE PTR [ecx+0xa]
  411384:	out    0xfd,eax
  411386:	pushf  
  411387:	in     al,0x79
  411389:	jp     0x411367
  41138b:	scas   al,BYTE PTR es:[edi]
  41138c:	into   
  41138d:	jge    0x41132a
  41138f:	les    edi,FWORD PTR [esp+esi*1+0x5163920f]
  411396:	sbb    BYTE PTR [edx],0x65
  411399:	rol    BYTE PTR [esi+0x44],cl
  41139c:	inc    ebx
  41139d:	mov    al,0x6e
  41139f:	sar    BYTE PTR [ecx-0x28],1
  4113a2:	dec    esi
  4113a3:	and    ah,dl
  4113a5:	ror    esi,1
  4113a7:	mov    al,0x57
  4113a9:	dec    ecx
  4113aa:	dec    ebx
  4113ab:	in     eax,dx
  4113ac:	enter  0x3a47,0x86
  4113b0:	jmp    DWORD PTR [edx]
  4113b2:	mov    edx,0x5c9b60fa
  4113b7:	add    ecx,DWORD PTR [eax+ebx*2+0x2c]
  4113bb:	inc    edx
  4113bc:	fst    QWORD PTR [esi-0x3e]
  4113bf:	mov    ebp,0xa89afe43
  4113c4:	mov    eax,ds:0xf42d7fea
  4113c9:	push   esp
  4113ca:	mov    edi,DWORD PTR [esi+edi*4+0x9]
  4113ce:	push   ds
  4113cf:	mov    ch,0xb8
  4113d1:	lahf   
  4113d2:	push   0x47f349ea
  4113d7:	and    DWORD PTR [esi+0x71e1845e],ebp
  4113dd:	shl    BYTE PTR [esi+0x3597eb3e],1
  4113e3:	cmc    
  4113e4:	lea    ecx,[eax]
  4113e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e7:	mov    bh,0x1
  4113e9:	pop    ecx
  4113ea:	mov    esp,0xae4c2055
  4113ef:	(bad)  
  4113f0:	out    dx,al
  4113f1:	xchg   edi,eax
  4113f2:	cs jnp 0x41138f
  4113f5:	fmul   QWORD PTR [eax+0x4eab2779]
  4113fb:	mov    ah,0x8c
  4113fd:	mov    DWORD PTR [ebp+0x1edce707],ebp
  411403:	and    DWORD PTR [esi+0x38],0x11fc4c6b
  41140a:	outs   dx,BYTE PTR ds:[esi]
  41140b:	push   esp
  41140c:	sar    DWORD PTR [ebx-0x6cc36cdb],cl
  411412:	jns    0x4113c3
  411414:	sar    DWORD PTR [edi+ebx*8+0x12],1
  411418:	mov    dl,dl
  41141a:	mov    dl,BYTE PTR [ecx+ebp*4]
  41141d:	jns    0x4113dd
  41141f:	add    eax,DWORD PTR [ebx+ebx*4]
  411422:	fcom   QWORD PTR [ebx-0x29]
  411425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411426:	in     al,dx
  411427:	jmp    0x411432
  411429:	inc    edi
  41142a:	add    DWORD PTR [esi+0x2b],esi
  41142d:	fwait
  41142e:	pop    edx
  41142f:	nop
  411430:	dec    ecx
  411431:	jno    0x4113eb
  411433:	jle    0x4113cc
  411435:	fst    QWORD PTR [edx]
  411437:	cmp    BYTE PTR [edi+0x20],al
  41143a:	outs   dx,BYTE PTR ds:[esi]
  41143b:	add    dl,cl
  41143d:	jb     0x411486
  41143f:	pop    ebp
  411440:	dec    edx
  411441:	das    
  411442:	sbb    al,0x52
  411444:	pop    ebx
  411445:	mov    esp,0xc912a27e
  41144a:	sub    eax,DWORD PTR [edi+0x54]
  41144d:	cmp    eax,0x9c5e1918
  411452:	bound  edx,QWORD PTR [eax+0x77]
  411455:	loopne 0x4114bf
  411457:	repz mov edx,0xfd403f41
  41145d:	nop
  41145e:	mov    al,0xbe
  411460:	mov    ah,0xda
  411462:	pop    edi
  411463:	fmul   DWORD PTR [ebp-0x5e]
  411466:	pushf  
  411467:	xlat   BYTE PTR ds:[ebx]
  411468:	or     BYTE PTR [ebp+0x7b],bl
  41146b:	fwait
  41146c:	adc    BYTE PTR ds:0x8c53ebb0,ah
  411472:	out    0xde,al
  411474:	test   DWORD PTR [esi-0x112bd385],ecx
  41147a:	or     bl,dh
  41147c:	mov    ebx,0x5d6e6ef1
  411481:	iret   
  411482:	fdiv   QWORD PTR [ebx-0x14]
  411485:	xchg   ebx,eax
  411486:	dec    esp
  411487:	pop    ds
  411488:	stos   BYTE PTR es:[edi],al
  411489:	sub    DWORD PTR [ecx+edx*4+0x3e06755e],esi
  411490:	adc    eax,0x8f254126
  411495:	hlt    
  411496:	dec    edi
  411497:	(bad)  
  411498:	xlat   BYTE PTR ds:[ebx]
  411499:	dec    esp
  41149a:	test   DWORD PTR [edx],edx
  41149c:	pop    ds
  41149d:	jb     0x411446
  41149f:	imul   esi,DWORD PTR [edx+0x5f],0xffffffd7
  4114a3:	add    dl,BYTE PTR ds:0xa642be23
  4114a9:	ds xchg ebx,eax
  4114ab:	mov    esi,0x72b07fc3
  4114b0:	push   0x5f85abfb
  4114b5:	aas    
  4114b6:	jl     0x41144f
  4114b8:	rcr    BYTE PTR [edx+0x42079e6e],1
  4114be:	add    BYTE PTR [ecx],0xdd
  4114c1:	test   eax,0x9461f048
  4114c6:	sbb    al,0x6b
  4114c8:	mov    ebp,0xdf5140f2
  4114cd:	dec    esi
  4114ce:	cmp    ch,BYTE PTR [edx+0x452a768f]
  4114d4:	imul   edx,DWORD PTR [ecx-0x63fd86b7],0xffffffc7
  4114db:	lock out 0xac,eax
  4114de:	or     eax,0x70ae183f
  4114e3:	ins    DWORD PTR es:[edi],dx
  4114e4:	push   ebp
  4114e5:	sahf   
  4114e6:	and    DWORD PTR [ecx],0xffffffe5
  4114e9:	dec    dx
  4114eb:	mov    ch,0xf1
  4114ed:	loope  0x4114d5
  4114ef:	pop    esi
  4114f0:	rcl    DWORD PTR [ebp+0x39834399],cl
  4114f6:	es adc al,0x36
  4114f9:	fs ja  0x41157b
  4114fc:	das    
  4114fd:	stos   BYTE PTR es:[edi],al
  4114fe:	jp     0x4114ad
  411500:	sub    BYTE PTR [ecx+ebx*2-0x29318a1f],0x1a
  411508:	inc    esp
  411509:	mov    al,ds:0x96c92226
  41150e:	sbb    al,0x95
  411510:	test   DWORD PTR [ebx+0x16],edx
  411513:	mov    ds:0xdf338330,al
  411518:	mov    eax,0x2c2f9625
  41151e:	and    cl,BYTE PTR [esi-0x1ab94a7a]
  411524:	pop    ebx
  411525:	mov    edi,0xec2103ce
  41152a:	in     al,0xdd
  41152c:	sub    ebp,DWORD PTR [ebx]
  41152e:	stos   DWORD PTR es:[edi],eax
  41152f:	push   ecx
  411530:	dec    edi
  411531:	xchg   edx,eax
  411532:	mov    DWORD PTR [edx+0x2a],esp
  411535:	test   eax,0x38428fb1
  41153a:	jbe    0x4114e3
  41153c:	pop    eax
  41153d:	sbb    DWORD PTR [edi],0x72a53999
  411543:	rol    DWORD PTR [ecx-0x25],0x14
  411547:	inc    eax
  411548:	push   ecx
  411549:	cmp    al,0x43
  41154b:	mov    eax,ds:0xcbaadcc
  411550:	scas   al,BYTE PTR es:[edi]
  411551:	mov    edi,0x7438f1e4
  411556:	jp     0x4115ac
  411558:	sbb    esi,DWORD PTR [esi+0x3a7eca33]
  41155e:	loopne 0x41156f
  411560:	aas    
  411561:	mov    BYTE PTR [ebx+0x1e2f2fc9],bh
  411567:	loopne 0x4114eb
  411569:	jmp    0x63c3f339
  41156e:	mov    fs,WORD PTR [ebx-0x4ac87d96]
  411574:	and    al,0x4a
  411576:	hlt    
  411577:	sbb    ah,cl
  411579:	jb     0x4115f0
  41157b:	push   cs
  41157c:	loopne 0x411547
  41157e:	adc    esi,DWORD PTR [ecx+0x767354c1]
  411584:	enter  0x62a6,0x29
  411588:	sub    eax,0x2ec13592
  41158d:	test   al,0xf9
  41158f:	mov    esi,?
  411591:	in     al,0x24
  411593:	mov    ch,0xb0
  411595:	adc    DWORD PTR [edx],eax
  411597:	shr    edi,cl
  411599:	call   0x38ca:0x341969a9
  4115a0:	sbb    DWORD PTR [edx+0x50],eax
  4115a3:	imul   ebp,DWORD PTR [ecx+0x55],0xffffffc9
  4115a7:	mov    bh,0xaa
  4115a9:	cmp    dl,ch
  4115ab:	mov    esp,0x6061b651
  4115b0:	mov    esp,0xdb4a8b79
  4115b5:	and    eax,0x66f1a4d8
  4115ba:	in     al,dx
  4115bb:	std    
  4115bc:	je     0x4115ae
  4115be:	aam    0xaf
  4115c0:	in     al,dx
  4115c1:	cdq    
  4115c2:	mov    cl,BYTE PTR [esi]
  4115c4:	shl    esp,cl
  4115c6:	push   ecx
  4115c7:	push   edi
  4115c8:	dec    ebp
  4115c9:	jge    0x4115cf
  4115cb:	jne    0x411550
  4115cd:	add    al,0x4b
  4115cf:	add    ebp,esi
  4115d1:	stos   DWORD PTR es:[edi],eax
  4115d2:	or     al,0x5e
  4115d4:	push   0x4889908b
  4115d9:	adc    DWORD PTR [esi-0xc],ebp
  4115dc:	push   ds
  4115dd:	jb     0x41158d
  4115df:	jp     0x411637
  4115e1:	cdq    
  4115e2:	inc    edi
  4115e3:	pop    ecx
  4115e4:	xchg   ecx,eax
  4115e5:	arpl   WORD PTR [ecx+0x550c3a8a],dx
  4115eb:	adc    BYTE PTR gs:[edi+0x6d],0x39
  4115f0:	sub    DWORD PTR [esi],0x71
  4115f3:	push   0x5
  4115f5:	mov    ebp,0xe6cfb050
  4115fa:	nop
  4115fb:	iret   
  4115fc:	mov    ah,0x6d
  4115fe:	inc    edx
  4115ff:	xor    al,0x86
  411601:	dec    ecx
  411602:	stos   DWORD PTR es:[edi],eax
  411603:	jno    0x4115d6
  411605:	push   0x3dc9b8a3
  41160a:	mov    ds:0xac844c0c,al
  41160f:	add    BYTE PTR [edx+edx*1+0x3a07692e],dh
  411616:	push   ebp
  411617:	ret    0xee1e
  41161a:	dec    eax
  41161b:	test   eax,0x552b0f3c
  411620:	add    DWORD PTR [ecx+0x3c],0x3d6d3839
  411627:	fidivr WORD PTR [ebp-0x529faa9]
  41162d:	int    0x93
  41162f:	nop
  411630:	xchg   DWORD PTR [ebx+0x25],edx
  411633:	jp     0x411658
  411635:	into   
  411636:	mov    edi,0x48decbc0
  41163b:	add    BYTE PTR [esi+0x5e5432c8],bl
  411641:	xchg   ebp,eax
  411642:	add    DWORD PTR [edi+0x48ad5f80],edi
  411648:	mov    eax,ds:0x18ce0f00
  41164d:	inc    eax
  41164e:	jmp    0x5b80:0xc380d5a9
  411655:	inc    edx
  411656:	pusha  
  411657:	fidivr DWORD PTR [ebx+ebx*1]
  41165a:	jle    0x41169e
  41165c:	das    
  41165d:	sbb    edx,eax
  41165f:	jge    0x4116b3
  411661:	leave  
  411662:	cli    
  411663:	in     eax,0xd7
  411665:	mov    DWORD PTR ds:0xc7876092,ecx
  41166b:	aad    0xf8
  41166d:	arpl   cx,cx
  41166f:	cmp    DWORD PTR [eax+edx*1],edx
  411672:	es (bad) 
  411674:	dec    ecx
  411675:	(bad)
  411678:	into   
  411679:	scas   eax,DWORD PTR es:[edi]
  41167a:	sti    
  41167b:	push   0x12
  41167d:	and    eax,0xbb6ffbd
  411682:	lea    esi,[edi]
  411684:	sbb    al,0xb7
  411686:	stc    
  411687:	or     ah,0xf2
  41168a:	shl    edi,0x36
  41168d:	call   0xa8a23624
  411692:	pusha  
  411693:	dec    ebp
  411694:	jmp    0x41170e
  411696:	mov    edx,fs
  411698:	fstp   QWORD PTR [ebp-0x52]
  41169b:	ins    BYTE PTR es:[edi],dx
  41169c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41169d:	sar    esi,1
  41169f:	xor    DWORD PTR [ebp+0x3566ffa],ebx
  4116a5:	fdivp  st(3),st
  4116a7:	mov    ch,0x16
  4116a9:	or     esp,DWORD PTR [esi+0x3f78dcaa]
  4116af:	in     eax,dx
  4116b0:	ins    BYTE PTR es:[edi],dx
  4116b1:	sbb    ebp,DWORD PTR [edx+edx*8-0x2832dcd8]
  4116b8:	test   al,dh
  4116ba:	add    ah,cl
  4116bc:	cmp    DWORD PTR [edx-0x71],0x78fc52ac
  4116c3:	das    
  4116c4:	xchg   edx,eax
  4116c5:	inc    ebp
  4116c6:	add    ah,cl
  4116c8:	sub    DWORD PTR [esp+esi*2],edi
  4116cb:	inc    ebx
  4116cc:	out    0x40,eax
  4116ce:	dec    edx
  4116cf:	or     esi,DWORD PTR [ebx+edx*2-0x6110b076]
  4116d6:	aad    0x55
  4116d8:	push   eax
  4116d9:	xchg   edx,eax
  4116da:	loope  0x411714
  4116dc:	cmp    dl,cl
  4116de:	add    dl,BYTE PTR [esi]
  4116e0:	ss pop ds
  4116e2:	test   al,0x14
  4116e4:	mov    ah,0xe4
  4116e6:	(bad)  
  4116e7:	icebp  
  4116e8:	call   0xf628d869
  4116ed:	outs   dx,BYTE PTR ds:[esi]
  4116ee:	fidivr WORD PTR [edx-0x30]
  4116f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f2:	(bad)  
  4116f3:	sti    
  4116f4:	and    DWORD PTR [esi+ebx*2+0x236896c9],0x1a
  4116fc:	and    BYTE PTR [ebx-0x46],al
  4116ff:	data16 out dx,al
  411701:	cmc    
  411702:	and    dl,cl
  411704:	jne    0x41171d
  411706:	(bad)  
  411707:	jno    0x411736
  411709:	lods   eax,DWORD PTR ds:[esi]
  41170a:	in     eax,0xdd
  41170c:	retf   0x9490
  41170f:	fwait
  411710:	icebp  
  411711:	add    DWORD PTR [edx+0x64aee899],edx
  411717:	mov    ds:0x69015aff,eax
  41171d:	sbb    esi,DWORD PTR [ecx]
  41171f:	jge    0x4116de
  411721:	xchg   ebx,eax
  411722:	jbe    0x41177c
  411724:	dec    edi
  411725:	or     dh,BYTE PTR [esi+0x58546c21]
  41172b:	mov    cs,WORD PTR [ebx+0x756076d0]
  411731:	xchg   DWORD PTR [ecx+0x38],edx
  411734:	mov    dh,0x55
  411736:	arpl   WORD PTR [edi-0x26],cx
  411739:	fnstenv [edi+0x1e]
  41173c:	xchg   esp,eax
  41173d:	in     eax,dx
  41173e:	sbb    bl,BYTE PTR [esi]
  411740:	rep stos DWORD PTR es:[edi],eax
  411742:	dec    ecx
  411743:	xor    ch,bh
  411745:	sbb    esp,DWORD PTR [ecx-0x4b8a0bdf]
  41174b:	jbe    0x41174a
  41174d:	push   ecx
  41174e:	add    bh,BYTE PTR [ecx-0x7c58bd19]
  411754:	dec    eax
  411755:	dec    eax
  411756:	stos   BYTE PTR es:[edi],al
  411757:	aaa    
  411758:	push   ebx
  411759:	jae    0x41176c
  41175b:	jle    0x41175b
  41175d:	or     DWORD PTR [ebx+edx*4],eax
  411760:	mov    eax,0xd2277647
  411765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411766:	mov    ds:0x8b6b8fc6,eax
  41176b:	nop
  41176c:	mov    edx,0x7821fe3c
  411771:	repnz add BYTE PTR [ecx-0xef00218],dl
  411778:	xor    dl,BYTE PTR [ecx-0x18]
  41177b:	jge    0x411716
  41177d:	jmp    0x411788
  41177f:	dec    esi
  411780:	bound  esp,QWORD PTR [edx+0x28]
  411783:	(bad)  
  411784:	pop    eax
  411785:	adc    al,0x2d
  411787:	mov    ebx,DWORD PTR [ebx]
  411789:	push   0x46
  41178b:	mov    al,ds:0x3a01dcf6
  411790:	cwde   
  411791:	xor    BYTE PTR [ecx],bh
  411793:	(bad)  
  411794:	sbb    al,0x2f
  411796:	xor    al,0x88
  411798:	ror    bh,cl
  41179a:	push   sp
  41179c:	xchg   ebx,eax
  41179d:	push   esp
  41179e:	fmul   st(3),st
  4117a0:	rol    ebp,cl
  4117a2:	aaa    
  4117a3:	js     0x4117fa
  4117a5:	cmc    
  4117a6:	(bad)  
  4117a7:	aas    
  4117a8:	je     0x4117a9
  4117aa:	jne    0x41177b
  4117ac:	dec    edx
  4117ad:	mov    dh,0x29
  4117af:	int3   
  4117b0:	jns    0x411742
  4117b2:	enter  0x3222,0x2b
  4117b6:	mov    eax,ds:0xd420a8f1
  4117bb:	xchg   edi,eax
  4117bc:	loopne 0x411818
  4117be:	pop    edi
  4117bf:	dec    esp
  4117c0:	push   ss
  4117c1:	xor    esi,DWORD PTR [ebx-0x286366c3]
  4117c7:	mov    BYTE PTR [ebp+0x8b6da12],ch
  4117cd:	mov    ecx,0x9cabe43c
  4117d2:	scas   al,BYTE PTR es:[edi]
  4117d3:	xor    DWORD PTR [ebx-0x4725b5ae],0xa4be1b78
  4117dd:	xchg   edi,eax
  4117de:	dec    esp
  4117df:	out    dx,eax
  4117e0:	xor    edx,DWORD PTR [esi]
  4117e2:	repz dec eax
  4117e4:	and    ebp,DWORD PTR [edi+0x2a3d4e44]
  4117ea:	add    BYTE PTR [eax-0x3d8bc60a],bl
  4117f0:	gs jo  0x41178f
  4117f3:	scas   eax,DWORD PTR es:[edi]
  4117f4:	lods   eax,DWORD PTR ds:[esi]
  4117f5:	mov    al,0xbd
  4117f7:	test   al,0x4d
  4117f9:	xchg   DWORD PTR [edx-0x39e7a557],esp
  4117ff:	imul   eax,DWORD PTR [ebp-0x17220331],0xffffffde
  411806:	or     ah,BYTE PTR [ebx+0x77bdaa18]
  41180c:	fmul   QWORD PTR [edi-0x5c]
  41180f:	fstp   st(3)
  411811:	push   ecx
  411812:	add    bh,bh
  411814:	pusha  
  411815:	(bad)  
  411816:	dec    edx
  411817:	dec    ebx
  411818:	mov    eax,ds:0x5885c01e
  41181d:	mov    ch,0xcb
  41181f:	mov    BYTE PTR [eax+0x3dc626c0],al
  411825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411826:	mov    al,0x7a
  411828:	lods   al,BYTE PTR ds:[esi]
  411829:	daa    
  41182a:	inc    esi
  41182b:	jmp    0x2957:0x60cd42d4
  411832:	jno    0x41189b
  411834:	push   ds
  411835:	fsubp  st(4),st
  411837:	ror    DWORD PTR [edi-0x2e6b8b9b],0x86
  41183e:	mov    ds:0x5e7b05c2,al
  411843:	sbb    di,bx
  411846:	adc    ecx,esi
  411848:	add    ah,BYTE PTR [ebp+0x41]
  41184b:	xor    BYTE PTR [edx],dh
  41184d:	jne    0x411850
  41184f:	jb     0x4117e9
  411851:	inc    ebp
  411852:	adc    ch,BYTE PTR [edi-0x217ce68b]
  411858:	out    0x71,eax
  41185a:	or     DWORD PTR [ebp+eiz*4-0x1400ff52],edi
  411861:	dec    ebx
  411862:	aam    0x2c
  411864:	mov    esp,0xa11c4b62
  411869:	repnz imul edx,DWORD PTR [edx-0x15823ee0],0xf444cd04
  411874:	mov    BYTE PTR [eax],cl
  411876:	xor    eax,0x54ae72b
  41187b:	mov    eax,0xfe96ceae
  411880:	pop    eax
  411881:	mov    ch,BYTE PTR [eax]
  411883:	jns    0x4118ff
  411885:	ins    BYTE PTR es:[edi],dx
  411886:	dec    edx
  411887:	rol    DWORD PTR [ebp-0x7e],0xba
  41188b:	dec    ebp
  41188c:	(bad)  
  41188d:	mov    cl,0x30
  41188f:	xlat   BYTE PTR ds:[ebx]
  411890:	outs   dx,BYTE PTR ds:[esi]
  411891:	push   es
  411892:	xor    BYTE PTR [esi-0x1530c480],ch
  411898:	sub    ecx,esp
  41189a:	or     dl,cl
  41189c:	push   ds
  41189d:	adc    al,0x36
  41189f:	mov    ebx,0xbb97a7bc
  4118a4:	mov    dh,0xd8
  4118a6:	push   cs
  4118a7:	ins    DWORD PTR es:[edi],dx
  4118a8:	cwde   
  4118a9:	das    
  4118aa:	fld    DWORD PTR [ebx+0x19b1e32a]
  4118b0:	lds    esp,FWORD PTR [eax-0x80]
  4118b3:	ret    0x6d06
  4118b6:	out    dx,al
  4118b7:	cmp    dl,al
  4118b9:	aad    0x16
  4118bb:	cmp    eax,0xc1316f2a
  4118c0:	sti    
  4118c1:	scas   eax,DWORD PTR es:[edi]
  4118c2:	adc    ah,BYTE PTR [ecx]
  4118c4:	mov    ds:0x1a1e498,al
  4118c9:	cmp    ecx,DWORD PTR [esi-0x4038e6b7]
  4118cf:	loope  0x4118b8
  4118d1:	fbld   TBYTE PTR [edi+0x6573b986]
  4118d7:	cld    
  4118d8:	push   es
  4118d9:	sub    eax,0xb03446f8
  4118de:	push   eax
  4118df:	ja     0x4118c4
  4118e1:	in     al,dx
  4118e2:	push   esi
  4118e3:	push   ebp
  4118e4:	shl    ebx,1
  4118e6:	or     bh,bl
  4118e8:	inc    ebp
  4118e9:	icebp  
  4118ea:	xchg   esi,eax
  4118eb:	push   esp
  4118ec:	pop    edx
  4118ed:	and    BYTE PTR [ebx+0x3d5d3c87],cl
  4118f3:	jb     0x411955
  4118f5:	jno    0x411917
  4118f7:	pop    esi
  4118f8:	xor    al,0x1f
  4118fa:	inc    ebp
  4118fb:	jne    0x4118b1
  4118fd:	stos   DWORD PTR es:[edi],eax
  4118fe:	test   DWORD PTR ds:0x3fe61f53,edx
  411904:	in     eax,dx
  411905:	scas   eax,DWORD PTR es:[edi]
  411906:	dec    eax
  411907:	(bad)  
  411909:	jbe    0x411956
  41190b:	test   al,0x1a
  41190d:	inc    eax
  41190e:	inc    eax
  41190f:	nop
  411910:	push   edi
  411911:	nop
  411912:	sbb    eax,0x5af6ce5a
  411917:	lea    esi,[esp+ecx*4-0x4721824e]
  41191e:	fs push esp
  411920:	(bad)  
  411921:	jle    0x411939
  411923:	shr    BYTE PTR [ebp+0x476d4427],0x24
  41192a:	outs   dx,BYTE PTR ds:[esi]
  41192b:	jge    0x411943
  41192d:	popa   
  41192e:	imul   edi,DWORD PTR [ebp+0x17],0xffffff9c
  411932:	dec    edx
  411933:	cmp    BYTE PTR [edx+0x4e029a4a],al
  411939:	or     eax,edx
  41193b:	xor    eax,0xab21cb1a
  411940:	ja     0x411930
  411942:	add    eax,0xce62acea
  411947:	push   esi
  411948:	pusha  
  411949:	(bad)  
  41194a:	push   eax
  41194b:	sbb    al,0x98
  41194d:	leave  
  41194e:	mov    es,WORD PTR [edi-0x10]
  411951:	pop    ebx
  411952:	hlt    
  411953:	and    eax,DWORD PTR [ebx]
  411955:	xor    edi,ebx
  411957:	mov    ebp,0xb32f76d5
  41195c:	std    
  41195d:	pop    ebp
  41195e:	fiadd  DWORD PTR [edi+0x30]
  411961:	popa   
  411962:	and    BYTE PTR [ecx],al
  411964:	xlat   BYTE PTR ds:[ebx]
  411965:	mov    al,es:0x6092934e
  41196b:	cmp    DWORD PTR [ebx+edx*2-0x11],ebx
  41196f:	stos   DWORD PTR es:[edi],eax
  411970:	push   es
  411971:	sti    
  411972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411973:	pop    ebx
  411974:	enter  0xc051,0x73
  411978:	push   ebp
  411979:	(bad)  
  41197a:	cmp    ebx,eax
  41197c:	add    dl,BYTE PTR [esi+0x6eed3e36]
  411982:	and    bl,BYTE PTR ds:0xb8411639
  411988:	inc    eax
  411989:	call   0x55493c10
  41198e:	xor    dl,BYTE PTR [edx]
  411990:	imul   ebx,DWORD PTR [eax],0x94a0b12a
  411996:	mov    ch,0xbc
  411998:	mov    ?,WORD PTR [esi+0x685b72dc]
  41199e:	sub    DWORD PTR [esi],esi
  4119a0:	push   0xf1c3ef62
  4119a5:	das    
  4119a6:	sub    eax,0x8d9322eb
  4119ab:	ins    BYTE PTR es:[edi],dx
  4119ac:	add    al,0xcb
  4119ae:	imul   ebp,DWORD PTR [ecx-0x66],0x783a621e
  4119b5:	repnz adc ecx,DWORD PTR es:[esi-0x3d]
  4119ba:	fisub  WORD PTR [ecx+0x152a283b]
  4119c0:	fs mov ecx,0x8c449684
  4119c6:	loop   0x41194b
  4119c8:	mov    DWORD PTR [edi-0x70a790af],ecx
  4119ce:	xor    al,0xc2
  4119d0:	(bad)  
  4119d1:	fisttp QWORD PTR [ebp-0x201689ba]
  4119d7:	jle    0x411968
  4119d9:	sub    dl,dh
  4119db:	dec    edx
  4119dc:	push   ebp
  4119dd:	in     al,0xaa
  4119df:	scas   al,BYTE PTR es:[edi]
  4119e0:	lods   eax,DWORD PTR ds:[esi]
  4119e1:	push   edi
  4119e2:	adc    eax,esi
  4119e4:	test   al,0x5a
  4119e6:	mov    edi,0x13340538
  4119eb:	sub    eax,0xa14a5e26
  4119f0:	cdq    
  4119f1:	sub    bl,dl
  4119f3:	and    eax,0x12f1cdb2
  4119f8:	fist   DWORD PTR [ecx-0x5d652e34]
  4119fe:	add    eax,0x1f511de6
  411a03:	aaa    
  411a04:	dec    ecx
  411a05:	and    eax,0x806c1dfe
  411a0a:	inc    esi
  411a0b:	test   eax,ebx
  411a0d:	call   0x9b04373c
  411a12:	rol    BYTE PTR [ebp-0xb],cl
  411a15:	sub    DWORD PTR [esi],ebx
  411a17:	add    DWORD PTR [ebx],ebp
  411a19:	adc    edi,DWORD PTR [edi-0x689e36d3]
  411a1f:	fldcw  WORD PTR [edx-0x5]
  411a22:	out    0x9,eax
  411a24:	xchg   esi,eax
  411a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a26:	mov    edx,0xdc48e54b
  411a2b:	push   0xb5f8ef6b
  411a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a31:	inc    edi
  411a32:	(bad)  
  411a33:	sub    eax,DWORD PTR [ebx-0x96a8cc8]
  411a39:	xchg   ebp,eax
  411a3a:	mov    edx,0xbf5c4b1c
  411a3f:	jne    0x411a2b
  411a41:	cs (bad) 
  411a43:	and    eax,0x78fda022
  411a48:	mov    esp,0xc05d3116
  411a4d:	cmp    eax,DWORD PTR ds:0x2bf8dd51
  411a53:	loopne 0x411a7b
  411a55:	out    dx,eax
  411a56:	mov    bh,0x2c
  411a58:	add    BYTE PTR [eax+0x4f],bh
  411a5b:	inc    esi
  411a5c:	lahf   
  411a5d:	sbb    DWORD PTR [ebx],esp
  411a5f:	inc    esi
  411a60:	xchg   ecx,eax
  411a61:	mov    dh,0x93
  411a63:	pop    ebp
  411a64:	(bad)  
  411a65:	lea    ebp,[eax-0x563de56a]
  411a6b:	cmp    eax,0xf2221e63
  411a70:	adc    DWORD PTR [eax+0x2e],0x7a4f435
  411a77:	cmp    eax,DWORD PTR [edi+0x1bd44cf0]
  411a7d:	into   
  411a7e:	jl     0x411a78
  411a80:	lea    ebp,[ebx-0xf]
  411a83:	jno    0x411aa8
  411a85:	dec    esi
  411a86:	mov    ebp,0xe0ac1a6
  411a8b:	(bad)  
  411a8c:	mov    ecx,0x4e89f40d
  411a91:	xor    ecx,DWORD PTR [edi+eiz*4-0x62e3557e]
  411a98:	shl    BYTE PTR [eax-0x438d3b09],cl
  411a9e:	and    DWORD PTR ds:0xc9ad90ba,ebp
  411aa4:	cmp    DWORD PTR [esi],esp
  411aa6:	dec    edi
  411aa7:	dec    ebp
  411aa8:	mov    ecx,0xf4e3b1d1
  411aad:	xor    al,0x93
  411aaf:	add    eax,0x9b6bf1f1
  411ab4:	dec    esp
  411ab5:	jno    0x411ae7
  411ab7:	dec    ebp
  411ab8:	sbb    DWORD PTR [ecx],0x5d08ecd6
  411abe:	jmp    0x411b0c
  411ac0:	push   0xbd0570a0
  411ac5:	lods   eax,DWORD PTR ds:[esi]
  411ac6:	mov    cl,BYTE PTR [ecx+0x1b]
  411ac9:	imul   esp,ecx,0x41
  411acc:	fadd   DWORD PTR [ecx-0x4406811a]
  411ad2:	push   esi
  411ad3:	pop    ds
  411ad4:	mov    edi,0xb62f335e
  411ad9:	add    esp,edx
  411adb:	push   ecx
  411adc:	jb     0x411a90
  411ade:	xchg   esi,eax
  411adf:	jmp    0xabe527af
  411ae4:	jecxz  0x411b43
  411ae6:	and    eax,0x8ed25dba
  411aeb:	stos   DWORD PTR es:[edi],eax
  411aec:	loopne 0x411b34
  411aee:	cli    
  411aef:	sub    ah,BYTE PTR [edx+0x48]
  411af2:	mov    dh,0x5a
  411af4:	repnz sub BYTE PTR [ecx+0x34],al
  411af8:	mov    DWORD PTR [ebp+0x22b74420],edx
  411afe:	sbb    DWORD PTR ds:0x95e2d6ed,ecx
  411b04:	mov    al,0x6f
  411b06:	xor    DWORD PTR [ebx+0x38],esp
  411b09:	loope  0x411ae7
  411b0b:	or     eax,0xd4c6a1d3
  411b10:	icebp  
  411b11:	pushf  
  411b12:	imul   esp,DWORD PTR [edx],0x8d60cda4
  411b18:	or     eax,0xce53a495
  411b1d:	pushf  
  411b1e:	lock fsub QWORD PTR [esi+esi*1-0x68]
  411b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b24:	jnp    0x411ae5
  411b26:	mov    edi,0xd694d240
  411b2b:	int3   
  411b2c:	sahf   
  411b2d:	leave  
  411b2e:	adc    BYTE PTR [eax],al
  411b30:	les    ebp,FWORD PTR [edi]
  411b32:	pop    ds
  411b33:	add    BYTE PTR [esi+0xb7e42f4],al
  411b39:	data16 lods al,BYTE PTR es:[esi]
  411b3c:	inc    esp
  411b3d:	adc    ebx,DWORD PTR [edi]
  411b3f:	inc    eax
  411b40:	cli    
  411b41:	jne    0x411b49
  411b43:	and    bl,dl
  411b45:	retf   
  411b46:	test   DWORD PTR [ebx],edx
  411b48:	add    bh,ch
  411b4a:	xor    BYTE PTR [esi+0x2595be00],bh
  411b50:	adc    edx,DWORD PTR [esi+0x23]
  411b53:	ins    DWORD PTR es:[edi],dx
  411b54:	stos   BYTE PTR es:[edi],al
  411b55:	xor    dl,BYTE PTR [ebx+edi*4-0x50]
  411b59:	dec    edx
  411b5a:	push   esi
  411b5b:	sub    BYTE PTR [ecx],ch
  411b5d:	xchg   ebx,eax
  411b5e:	loope  0x411b83
  411b60:	mov    esi,0x4aba8951
  411b65:	jecxz  0x411aec
  411b67:	xchg   ebp,eax
  411b68:	push   ebx
  411b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b6a:	sbb    BYTE PTR [esp+edi*8-0x2],ah
  411b6e:	mov    ds:0x31dd1ff9,eax
  411b73:	std    
  411b74:	in     al,0x7e
  411b76:	mov    ecx,0xe31fa8b
  411b7b:	sbb    al,0x6a
  411b7d:	push   ebx
  411b7e:	popa   
  411b7f:	(bad)  
  411b80:	in     al,dx
  411b81:	or     BYTE PTR [edi],dh
  411b83:	push   eax
  411b84:	int3   
  411b85:	mov    BYTE PTR [eax],ah
  411b87:	cdq    
  411b88:	in     eax,0xc6
  411b8a:	fbld   TBYTE PTR [ebp+0x64f5103f]
  411b90:	test   ch,al
  411b92:	adc    al,0xe9
  411b94:	(bad)  
  411b95:	ficomp WORD PTR [edi+0x59]
  411b98:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411b9a:	xchg   edi,eax
  411b9b:	jb     0x411bbf
  411b9d:	sub    al,0x97
  411b9f:	xchg   edx,eax
  411ba0:	ds sub ebx,ebx
  411ba3:	adc    DWORD PTR [ebp+esi*8-0x27fef8f],ebx
  411baa:	mov    DWORD PTR [ebx+esi*2+0x5f03a8a2],0xc48d7d4c
  411bb5:	inc    ebx
  411bb6:	pop    eax
  411bb7:	sbb    DWORD PTR [eax+ebx*4-0x2c844ded],ebx
  411bbe:	xor    BYTE PTR ds:0x3cec0793,bh
  411bc4:	icebp  
  411bc5:	adc    eax,0xba9e6d20
  411bca:	xchg   ecx,eax
  411bcb:	fs nop
  411bcd:	sar    DWORD PTR [eax-0x61a29e32],1
  411bd3:	or     BYTE PTR [edi+0x1980190f],0x14
  411bda:	add    DWORD PTR [edx-0x3bc4af67],edi
  411be0:	adc    al,0x18
  411be2:	sub    eax,ecx
  411be4:	scas   eax,DWORD PTR es:[edi]
  411be5:	(bad)  
  411be6:	cli    
  411be7:	call   0xa820:0xcf7de24
  411bee:	jnp    0x411bd7
  411bf0:	std    
  411bf1:	ins    BYTE PTR es:[edi],dx
  411bf2:	sub    edi,DWORD PTR [ebx+0x54]
  411bf5:	(bad)  
  411bf7:	lods   eax,DWORD PTR ds:[esi]
  411bf8:	mov    eax,0x149053ff
  411bfd:	retf   
  411bfe:	sub    al,0x40
  411c00:	xor    al,BYTE PTR [ebx-0x110474ac]
  411c06:	xchg   edx,eax
  411c07:	inc    esi
  411c08:	shl    dh,1
  411c0a:	mov    edx,0xae52451e
  411c0f:	and    BYTE PTR [edi+0x3ce7c4b9],dh
  411c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c16:	sub    al,BYTE PTR [ebx]
  411c18:	add    edi,eax
  411c1a:	jle    0x411ba2
  411c1c:	out    dx,al
  411c1d:	inc    ecx
  411c1e:	enter  0x5440,0x64
  411c22:	dec    esi
  411c23:	enter  0xa933,0xaa
  411c27:	je     0x411c14
  411c29:	xor    eax,0xd0f522b3
  411c2e:	and    BYTE PTR [esp+edx*2],ah
  411c31:	lea    eax,[esi-0x19]
  411c34:	mov    esp,0x6915d804
  411c39:	fwait
  411c3a:	shr    DWORD PTR [esp+eax*1],0x53
  411c3e:	xlat   BYTE PTR ds:[ebx]
  411c3f:	push   0xffffffd6
  411c41:	sbb    BYTE PTR cs:[esi+0x21ae3095],ch
  411c48:	sbb    BYTE PTR [edi+0x697f2de2],ah
  411c4e:	lock inc ebp
  411c50:	inc    eax
  411c51:	push   eax
  411c52:	sti    
  411c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c54:	call   0x8c77fa93
  411c59:	and    eax,0xb85c5db9
  411c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c5f:	or     dh,0x5d
  411c62:	xor    DWORD PTR [esi],esp
  411c64:	jbe    0x411c14
  411c66:	out    dx,al
  411c67:	cmp    al,0x26
  411c69:	fwait
  411c6a:	sar    BYTE PTR [edi+0x70],0x4e
  411c6e:	lea    ebp,[edx-0x2ca348]
  411c74:	and    esi,edx
  411c76:	outs   dx,DWORD PTR ds:[esi]
  411c77:	sub    edi,DWORD PTR [ebx+0x17]
  411c7a:	lods   eax,DWORD PTR ds:[esi]
  411c7b:	scas   al,BYTE PTR es:[edi]
  411c7c:	dec    ecx
  411c7d:	ror    DWORD PTR [ecx-0x32f4f70],0xed
  411c84:	dec    esi
  411c85:	and    dh,ch
  411c87:	xlat   BYTE PTR ds:[ebx]
  411c88:	dec    ecx
  411c89:	mov    al,0x6f
  411c8b:	stos   DWORD PTR es:[edi],eax
  411c8c:	loop   0x411c4d
  411c8e:	add    eax,0xffffffe4
  411c91:	mov    al,ds:0x8b578efd
  411c96:	fucomp st(0)
  411c98:	retf   
  411c99:	into   
  411c9a:	test   eax,0x535e0954
  411c9f:	lea    esp,[ebp+0x42a8a679]
  411ca5:	push   edx
  411ca6:	int    0x2a
  411ca8:	mov    ebp,0x76b3c9f3
  411cad:	in     al,0xbd
  411caf:	sub    ebx,DWORD PTR [ecx]
  411cb1:	jle    0x411c5e
  411cb3:	mov    ebp,0xfcc93b2e
  411cb8:	rol    DWORD PTR [edx],1
  411cba:	jno    0x411c83
  411cbc:	pop    es
  411cbd:	xchg   ecx,eax
  411cbe:	and    eax,0xcdca882a
  411cc3:	(bad)  
  411cc4:	cmp    al,0xc5
  411cc6:	pop    ecx
  411cc7:	and    dh,dh
  411cc9:	retf   0x2dc2
  411ccc:	cmp    BYTE PTR [esi+0x40c219dc],dh
  411cd2:	fadd   QWORD PTR [eax]
  411cd4:	inc    ebp
  411cd5:	inc    ebp
  411cd6:	and    esi,DWORD PTR [ebx+0x5]
  411cd9:	mov    BYTE PTR [esi+0x25],dl
  411cdc:	push   eax
  411cdd:	in     al,dx
  411cde:	pop    es
  411cdf:	sub    DWORD PTR [esi+0x5],0xffffffa4
  411ce3:	out    0xfa,eax
  411ce5:	ja     0x411c9d
  411ce7:	enter  0x73d,0xa1
  411ceb:	adc    BYTE PTR [ebx-0x64],ah
  411cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cef:	mov    ds:0xd64e0a97,al
  411cf4:	pop    eax
  411cf5:	rcl    DWORD PTR [ebp+0x2bd72820],1
  411cfb:	imul   ebp,DWORD PTR ds:0x4968230a,0x4d
  411d02:	sbb    al,BYTE PTR [esi]
  411d04:	arpl   WORD PTR [ebx-0x45],ax
  411d07:	sbb    BYTE PTR [edx-0x9517758],0x31
  411d0e:	retfw  
  411d10:	push   edx
  411d11:	div    BYTE PTR [edx-0x37]
  411d14:	aaa    
  411d15:	lahf   
  411d16:	gs inc ebp
  411d18:	out    0x2c,eax
  411d1a:	out    0xa4,al
  411d1c:	adc    al,0x60
  411d1e:	mov    edi,0x3bfa5c6
  411d23:	cmp    al,dl
  411d25:	pop    edx
  411d26:	push   esp
  411d27:	leave  
  411d28:	mov    al,0xa
  411d2a:	and    BYTE PTR [ebx+0x3d],dl
  411d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d2e:	shl    DWORD PTR [ebx],1
  411d30:	jge    0x411cfd
  411d32:	out    dx,al
  411d33:	adc    eax,0xc403460e
  411d38:	xchg   esp,eax
  411d39:	loop   0x411d4f
  411d3b:	jmp    0xec01:0xc3e16cfc
  411d42:	or     BYTE PTR [ecx+0x1f],al
  411d45:	pop    eax
  411d46:	fnstsw WORD PTR [esi+0x4]
  411d49:	mov    edi,0x7d3cfead
  411d4e:	int    0x27
  411d50:	out    dx,al
  411d51:	push   ds
  411d52:	jp     0x411d9d
  411d54:	inc    esi
  411d55:	adc    edi,DWORD PTR cs:[ecx-0xe]
  411d59:	jmp    0x411ce9
  411d5b:	lods   eax,DWORD PTR ds:[esi]
  411d5c:	adc    edx,esp
  411d5e:	inc    esp
  411d5f:	sbb    DWORD PTR [ebx],eax
  411d61:	call   0x1ffb:0x3261628a
  411d68:	rcr    DWORD PTR [edx+0x17b4d4bc],cl
  411d6e:	sub    BYTE PTR [ebx+0x24],ah
  411d71:	mov    eax,0xe73eb6
  411d76:	in     eax,dx
  411d77:	dec    ecx
  411d78:	ins    BYTE PTR es:[edi],dx
  411d79:	test   DWORD PTR [edx+0x30ed384],ecx
  411d7f:	and    esp,edx
  411d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d82:	aaa    
  411d83:	(bad)  [edx+esi*8+0x77]
  411d87:	xchg   ebp,eax
  411d88:	hlt    
  411d89:	cmp    al,0xee
  411d8b:	xor    al,0xd9
  411d8d:	retf   0xf939
  411d90:	dec    eax
  411d91:	push   edi
  411d92:	xor    ah,BYTE PTR [eax+0x10]
  411d95:	stos   BYTE PTR es:[edi],al
  411d96:	icebp  
  411d97:	push   eax
  411d98:	mov    al,0x23
  411d9a:	leave  
  411d9b:	cli    
  411d9c:	dec    esp
  411d9d:	add    dl,BYTE PTR [ecx-0x1eee3dd9]
  411da3:	jnp    0x411de2
  411da5:	int    0x80
  411da7:	outs   dx,DWORD PTR ds:[esi]
  411da8:	dec    ecx
  411da9:	xchg   ebx,eax
  411daa:	repnz push ebp
  411dac:	mov    bh,bl
  411dae:	push   ss
  411daf:	js     0x411d79
  411db1:	mov    esi,0x9354e190
  411db6:	jl     0x411d9c
  411db8:	div    BYTE PTR [esi]
  411dba:	adc    ah,BYTE PTR [edx-0x79]
  411dbd:	loop   0x411dff
  411dbf:	jmp    0x411dcb
  411dc1:	test   DWORD PTR [edi-0x1a],0x336f7cd3
  411dc8:	inc    edx
  411dc9:	out    0x43,al
  411dcb:	cmp    BYTE PTR [ebx+ebp*2+0x3],bh
  411dcf:	jmp    0x411e4f
  411dd1:	lock dec esi
  411dd3:	(bad)  
  411dd4:	call   0x6f262ca5
  411dd9:	fs cmp eax,0xf433558a
  411ddf:	div    DWORD PTR [esi+eiz*1]
  411de2:	jecxz  0x411d93
  411de4:	jmp    0x411de2
  411de6:	shr    BYTE PTR [esi-0x5e],1
  411de9:	dec    esi
  411dea:	das    
  411deb:	pop    ecx
  411dec:	sbb    eax,0x9af30fbf
  411df1:	shr    BYTE PTR [edi-0x26],0x7a
  411df5:	mov    BYTE PTR [ecx+0x2e],bl
  411df8:	loope  0x411e46
  411dfa:	adc    DWORD PTR [ebx+0x33],ebx
  411dfd:	mov    dl,0xb3
  411dff:	jmp    0x44b0ea0e
  411e04:	out    0x34,al
  411e06:	push   ebx
  411e07:	nop
  411e08:	ror    DWORD PTR ds:0xb4609765,cl
  411e0e:	push   ds
  411e0f:	adc    dl,cl
  411e11:	leave  
  411e12:	push   ds
  411e13:	add    al,BYTE PTR [edx+edi*2-0x2ba1e8ef]
  411e1a:	outs   dx,BYTE PTR ds:[esi]
  411e1b:	xor    dh,BYTE PTR [ecx]
  411e1d:	mov    esp,?
  411e1f:	test   eax,0x6cf5fb96
  411e25:	pushf  
  411e26:	mov    cl,BYTE PTR [bx+di+0x45]
  411e2a:	out    0x9d,eax
  411e2c:	jp     0x411dcb
  411e2e:	ret    0x7096
  411e31:	jne    0x411dd9
  411e33:	call   DWORD PTR [eax-0x4b]
  411e36:	popa   
  411e37:	mov    al,0xa6
  411e39:	mov    es,WORD PTR [edx+0x5a]
  411e3c:	inc    edi
  411e3e:	jns    0x411dd3
  411e40:	mov    fs,WORD PTR [edx]
  411e42:	jl     0x411e1c
  411e44:	jmp    0x17aca4e5
  411e49:	xor    eax,0xa6343caa
  411e4e:	stos   DWORD PTR es:[edi],eax
  411e4f:	mov    ds:0xf00a4ab0,eax
  411e54:	imul   esp,edx,0x7e
  411e57:	xchg   BYTE PTR [esi-0x234bb058],cl
  411e5d:	push   cs
  411e5e:	xor    eax,0x4b351468
  411e63:	fld    TBYTE PTR [eax]
  411e65:	or     eax,DWORD PTR ds:0xc6d22d54
  411e6b:	out    dx,al
  411e6c:	adc    eax,0x58a87d6f
  411e71:	leave  
  411e72:	cli    
  411e73:	pop    ebx
  411e74:	cmp    eax,0xfd5a7716
  411e79:	dec    ebx
  411e7a:	into   
  411e7b:	sbb    DWORD PTR [ebp+0x74108cd2],ecx
  411e81:	or     cl,BYTE PTR [esi]
  411e83:	cmp    al,0x62
  411e85:	pop    ss
  411e86:	inc    esp
  411e87:	xchg   edi,eax
  411e88:	xor    DWORD PTR [eax],ecx
  411e8a:	test   BYTE PTR fs:[bp+di-0x37],al
  411e8f:	pop    ds
  411e90:	cmp    al,0x5a
  411e92:	(bad)  
  411e93:	leave  
  411e94:	mov    ebx,0x250f8e7b
  411e99:	ins    DWORD PTR es:[edi],dx
  411e9a:	fnstsw WORD PTR [edi]
  411e9c:	loopne 0x411e6d
  411e9e:	test   DWORD PTR [ebp-0x7c],eax
  411ea1:	sbb    dl,ch
  411ea3:	mov    ebp,0xc96b3091
  411ea8:	test   bh,bl
  411eaa:	push   edi
  411eab:	mov    esp,0x66f48927
  411eb0:	shl    BYTE PTR [ebp+0x54],0x33
  411eb4:	push   ecx
  411eb5:	xor    DWORD PTR [edi-0x5ed9af33],edi
  411ebb:	jbe    0x411f2c
  411ebd:	cmp    al,0xd0
  411ebf:	shl    BYTE PTR [esi-0x6652ba1c],1
  411ec5:	mov    ds:0xd668591f,eax
  411eca:	lock outs dx,BYTE PTR ds:[esi]
  411ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ecd:	sti    
  411ece:	dec    esp
  411ecf:	cwde   
  411ed0:	pop    ecx
  411ed1:	hlt    
  411ed2:	out    dx,al
  411ed3:	xor    DWORD PTR [esi],ebx
  411ed5:	lds    ecx,FWORD PTR [edi+edi*2]
  411ed8:	loop   0x411f33
  411eda:	sbb    al,0x3c
  411edc:	push   eax
  411edd:	test   DWORD PTR [ebp+0x75],edx
  411ee0:	sbb    BYTE PTR [esi],ch
  411ee2:	sub    DWORD PTR [eax],ecx
  411ee4:	je     0x411f2b
  411ee6:	scas   eax,DWORD PTR es:[edi]
  411ee7:	int3   
  411ee8:	aam    0xd0
  411eea:	scas   al,BYTE PTR es:[edi]
  411eeb:	dec    eax
  411eec:	sbb    DWORD PTR [ecx-0x78],ebp
  411eef:	mov    dh,0x69
  411ef1:	xor    eax,0x6749c241
  411ef6:	xchg   ebx,eax
  411ef7:	mov    ch,0x11
  411ef9:	push   ebp
  411efa:	sbb    bl,cl
  411efc:	fiadd  WORD PTR [eax+edx*8]
  411eff:	jo     0x411f4e
  411f01:	xchg   esi,eax
  411f02:	mov    bl,0xaf
  411f04:	scas   al,BYTE PTR es:[edi]
  411f05:	mov    BYTE PTR [ebp+0x69],cl
  411f08:	in     al,dx
  411f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f0a:	retf   
  411f0b:	jo     0x411f78
  411f0d:	hlt    
  411f0e:	enter  0x3aca,0x38
  411f12:	push   edi
  411f13:	ins    BYTE PTR es:[edi],dx
  411f14:	xor    BYTE PTR [eax+0x16],dl
  411f17:	cmp    eax,0xe73ced83
  411f1c:	cmp    al,bh
  411f1e:	clc    
  411f1f:	adc    bh,bl
  411f21:	cmp    ah,BYTE PTR [ecx-0x48bb85cc]
  411f27:	jo     0x411f83
  411f29:	dec    ebx
  411f2a:	jl     0x411f97
  411f2c:	push   ds
  411f2d:	ret    
  411f2e:	jmp    0xa26c2b7c
  411f33:	inc    ebx
  411f34:	jmp    DWORD PTR [ecx+0xc]
  411f37:	xor    cl,BYTE PTR [esi-0x70]
  411f3a:	xor    ecx,DWORD PTR [eax-0x5fdb90f5]
  411f40:	imul   edi,ebx,0xf2223ae8
  411f46:	mov    ds:0xcc794d66,al
  411f4b:	xchg   edx,eax
  411f4c:	mov    ebx,0x9ac15949
  411f51:	push   es
  411f52:	ret    
  411f53:	repz push 0x93990069
  411f59:	dec    ebx
  411f5a:	xchg   esi,eax
  411f5b:	jmp    0x26eff1d4
  411f60:	cdq    
  411f61:	rcl    BYTE PTR [ebx+0x61],1
  411f64:	inc    esi
  411f65:	push   ecx
  411f66:	sti    
  411f67:	dec    esp
  411f68:	jl     0x411f47
  411f6a:	jb     0x411f97
  411f6c:	push   eax
  411f6d:	dec    esi
  411f6e:	stos   DWORD PTR es:[edi],eax
  411f6f:	ds scas eax,DWORD PTR es:[edi]
  411f71:	pop    ds
  411f72:	dec    BYTE PTR [ecx+0x17]
  411f75:	pop    ds
  411f76:	push   ebx
  411f77:	jae    0x411f92
  411f79:	sti    
  411f7a:	je     0x411f73
  411f7c:	ror    dl,0x36
  411f7f:	jge    0x411fa1
  411f81:	popf   
  411f82:	mov    ch,0x5e
  411f84:	cmp    eax,0xf1689485
  411f89:	stos   DWORD PTR es:[edi],eax
  411f8a:	aad    0xc0
  411f8c:	pop    ebx
  411f8d:	ret    
  411f8e:	les    ebp,FWORD PTR [ebp+0x4a37a79c]
  411f94:	test   BYTE PTR [ebp+0x42ec359d],al
  411f9a:	int    0xc6
  411f9c:	push   edi
  411f9d:	and    eax,0x9263feec
  411fa2:	sbb    BYTE PTR [edx-0x2e9d7bc1],dh
  411fa8:	mov    al,ds:0x28497aeb
  411fad:	mov    ah,ah
  411faf:	inc    eax
  411fb0:	mov    al,ds:0x4426b1e3
  411fb5:	add    bl,BYTE PTR [ecx-0x56]
  411fb8:	jnp    0x411faa
  411fba:	xchg   ebp,ebx
  411fbc:	mov    eax,ds:0x4de4b985
  411fc1:	ins    DWORD PTR es:[edi],dx
  411fc2:	popa   
  411fc3:	pop    ebp
  411fc4:	popf   
  411fc5:	out    0x9f,eax
  411fc7:	mov    esi,0xb93eb9db
  411fcc:	das    
  411fcd:	rcl    BYTE PTR [ebp+0x2d9d1b14],1
  411fd3:	(bad)  
  411fd4:	(bad)  [eax-0x491e2e6c]
  411fda:	jmp    0x2f421431
  411fdf:	pop    ecx
  411fe0:	lock loope 0x411f9b
  411fe3:	fsubr  DWORD PTR [ebx]
  411fe5:	jno    0x411f79
  411fe7:	scas   eax,DWORD PTR es:[edi]
  411fe8:	cmp    eax,0x4526b26f
  411fed:	loopne 0x411fcf
  411fef:	jp     0x412013
  411ff1:	add    esi,edi
  411ff3:	mov    ch,0x92
  411ff5:	mov    BYTE PTR [ecx+0x4d932e1],al
  411ffb:	inc    esi
  411ffc:	push   ss
  411ffd:	stos   BYTE PTR es:[edi],al
  411ffe:	fsubr  QWORD PTR [edx-0x23847f61]
  412004:	xchg   ebx,eax
  412005:	mov    al,0x70
  412007:	mov    edx,eax
  412009:	push   0x69
  41200b:	pop    ds
  41200c:	jbe    0x412077
  41200e:	scas   al,BYTE PTR es:[edi]
  41200f:	aam    0x43
  412011:	adc    DWORD PTR [edx-0x30e5a505],ebx
  412017:	sbb    al,0x0
  412019:	adc    ah,BYTE PTR [ecx-0x3a07d211]
  41201f:	cld    
  412020:	hlt    
  412021:	mov    esp,0xfaa14a1e
  412026:	shl    al,cl
  412028:	jbe    0x411fd2
  41202a:	dec    edx
  41202b:	and    BYTE PTR [ebp-0x89aac4b],dl
  412031:	jo     0x412027
  412033:	pusha  
  412034:	pop    es
  412035:	sub    BYTE PTR [edi+edx*2-0x1406ac7e],bl
  41203c:	outs   dx,BYTE PTR ds:[esi]
  41203d:	pop    esp
  41203e:	xchg   ebp,eax
  41203f:	and    al,BYTE PTR [ebx+ebx*4]
  412042:	xchg   edi,eax
  412043:	enter  0x6e80,0xb7
  412047:	in     al,0x77
  412049:	mov    ds:0xe74c4f10,eax
  41204e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41204f:	cmp    ch,BYTE PTR [edx+0x42499fda]
  412055:	add    ebp,DWORD PTR [ecx+eiz*8+0x2c]
  412059:	xchg   esi,eax
  41205a:	mov    dh,0xef
  41205c:	iret   
  41205d:	ror    BYTE PTR [ebp-0x76],0x97
  412061:	lahf   
  412062:	or     al,0x94
  412064:	mov    ah,0xce
  412066:	push   edi
  412067:	add    eax,0x27578cfb
  41206c:	or     dl,BYTE PTR [ebx-0x74]
  41206f:	loopne 0x41202a
  412071:	push   edx
  412072:	or     eax,0x8f916a01
  412077:	xchg   esp,eax
  412078:	push   edx
  412079:	sub    DWORD PTR [edi],edx
  41207b:	xchg   ebx,eax
  41207c:	sub    al,0x51
  41207e:	and    ecx,edi
  412080:	fwait
  412081:	mov    al,0x4
  412083:	cmp    edx,DWORD PTR [ecx+esi*1-0x44fbf368]
  41208a:	or     edx,DWORD PTR gs:[ecx]
  41208d:	and    al,BYTE PTR ds:0x77834621
  412093:	and    BYTE PTR [ecx],dh
  412095:	shl    BYTE PTR [edx+eax*8],0x19
  412099:	push   es
  41209a:	mov    ch,0xad
  41209c:	jne    0x4120e3
  41209e:	xchg   edi,eax
  41209f:	push   ebp
  4120a0:	pop    esi
  4120a1:	jmp    0xc87f2cd6
  4120a6:	xchg   ecx,eax
  4120a7:	mov    DWORD PTR [ebp-0x419d4e05],ebp
  4120ad:	lods   eax,DWORD PTR ds:[esi]
  4120ae:	aam    0x8d
  4120b0:	add    cl,BYTE PTR [ecx-0xfc303]
  4120b6:	stc    
  4120b7:	mov    esp,0xf5c6f482
  4120bc:	test   DWORD PTR [ecx+esi*2+0x57],ecx
  4120c0:	sbb    eax,0x7ed8f31f
  4120c5:	popf   
  4120c6:	sub    al,0x5e
  4120c8:	xor    DWORD PTR [edx+ebp*4-0x3a],ecx
  4120cc:	pop    ecx
  4120cd:	imul   edx,ecx,0x7b
  4120d0:	call   0x50094edc
  4120d5:	test   DWORD PTR [ebx+eax*4-0x4c],ecx
  4120d9:	pop    esp
  4120da:	sbb    DWORD PTR [eax+esi*2+0x6824ea19],ecx
  4120e1:	add    ecx,DWORD PTR fs:[edx-0x45]
  4120e5:	test   BYTE PTR [edx-0x75],0x95
  4120e9:	sub    esp,ebx
  4120eb:	pop    eax
  4120ec:	sahf   
  4120ed:	xchg   esp,esp
  4120ef:	dec    edi
  4120f0:	mov    eax,0x8809682e
  4120f5:	xchg   ecx,eax
  4120f6:	xor    ch,BYTE PTR ds:0xce8fe08b
  4120fc:	out    dx,al
  4120fd:	add    eax,0x7cdb597b
  412102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412103:	(bad)  
  412104:	push   esi
  412105:	fnstcw WORD PTR [ebx-0x2fa73c17]
  41210b:	xchg   BYTE PTR [eax+0x68],bl
  41210e:	enter  0x2c7c,0x39
  412112:	test   al,0xd6
  412114:	mov    ecx,0x8382e48d
  412119:	push   edi
  41211a:	add    al,0x12
  41211c:	pop    edi
  41211d:	lods   al,BYTE PTR ds:[esi]
  41211e:	cmp    al,0x49
  412120:	jge    0x412119
  412122:	daa    
  412123:	pop    edx
  412124:	rcr    DWORD PTR [bp+di-0x13],cl
  412128:	ret    0x2d89
  41212b:	call   0xd41cba95
  412130:	inc    edx
  412131:	ficom  WORD PTR [ebp+ecx*4+0x42]
  412135:	sbb    al,0x69
  412137:	jno    0x41214a
  412139:	cmp    cl,BYTE PTR [edi-0x8]
  41213c:	mov    ?,WORD PTR [ebp-0x16d9dd18]
  412142:	test   eax,0x31581ff5
  412147:	and    ah,BYTE PTR [ecx+0x11629377]
  41214d:	dec    esp
  41214e:	(bad)  
  41214f:	ins    BYTE PTR es:[edi],dx
  412150:	and    edx,ebp
  412152:	xchg   edx,eax
  412153:	stc    
  412154:	sub    al,0x4b
  412156:	lods   eax,DWORD PTR ds:[esi]
  412157:	fs dec ebp
  412159:	jge    0x412141
  41215b:	popf   
  41215c:	out    0xb3,al
  41215e:	adc    eax,0x44f10c7
  412163:	pop    ss
  412164:	ret    0x225c
  412167:	sbb    ch,BYTE PTR [edx]
  412169:	xchg   ebx,eax
  41216a:	jne    0x41213c
  41216c:	loope  0x412156
  41216e:	dec    edi
  41216f:	add    eax,0x35f16100
  412174:	mov    dh,0xa2
  412176:	cmp    al,0x65
  412178:	xchg   edi,eax
  412179:	retf   0xc152
  41217c:	cmp    ah,BYTE PTR [ecx]
  41217e:	repz cs pop edx
  412181:	rcr    DWORD PTR [edx],0x54
  412184:	sub    eax,0xb777ea0
  412189:	mov    edx,0x8c1faa78
  41218e:	dec    edi
  41218f:	and    BYTE PTR [edi+0x71a8fcbc],cl
  412195:	xor    eax,0x42960e90
  41219a:	ds dec edx
  41219c:	ret    
  41219d:	into   
  41219e:	inc    esi
  41219f:	inc    edi
  4121a0:	mov    eax,esi
  4121a2:	iret   
  4121a3:	mov    eax,0xeefda13d
  4121a8:	sbb    al,0xe8
  4121aa:	jno    0x412134
  4121ac:	loopne 0x4121af
  4121ae:	adc    ecx,DWORD PTR [esp+eiz*8]
  4121b1:	sti    
  4121b2:	imul   esi,edi,0x29162379
  4121b8:	xor    bh,BYTE PTR [eax]
  4121ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121bb:	(bad)  
  4121bc:	adc    bl,BYTE PTR es:[ecx+0x30ae5864]
  4121c3:	shl    DWORD PTR [eax+0x1979ca1e],0x5f
  4121ca:	ror    BYTE PTR [edx-0x23f86cde],1
  4121d0:	(bad)  
  4121d1:	xchg   ebx,eax
  4121d2:	mov    WORD PTR [ebp-0x155392a5],?
  4121d8:	mov    edx,0xad89b9ce
  4121dd:	xlat   BYTE PTR ds:[ebx]
  4121de:	jns    0x41220b
  4121e0:	cmp    eax,0xc3302f9e
  4121e5:	jle    0x412225
  4121e7:	and    DWORD PTR [edx*8+0x24f03806],esi
  4121ee:	push   cs
  4121ef:	add    eax,0xf3114ef1
  4121f4:	addr16 iret 
  4121f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f7:	lock add bh,cl
  4121fa:	int    0x6a
  4121fc:	fidiv  DWORD PTR [eax+0x746bc7b5]
  412202:	xchg   ecx,eax
  412203:	inc    edi
  412204:	adc    DWORD PTR ds:0xff5140fe,ebx
  41220a:	xchg   edx,eax
  41220b:	mov    esi,0xbf5e16b4
  412210:	sbb    al,0x2e
  412212:	push   ecx
  412213:	repz jb 0x412291
  412216:	cld    
  412217:	cmp    BYTE PTR [ebx+0x4b],al
  41221a:	cmp    al,0x4f
  41221c:	imul   ecx,edi,0x64
  41221f:	mov    esp,0xba05bb48
  412224:	mov    ah,ch
  412226:	jecxz  0x41220c
  412228:	out    dx,eax
  412229:	push   esi
  41222a:	mov    esi,0x4107887e
  41222f:	stc    
  412230:	mov    esi,0xa887c52d
  412235:	or     edx,esp
  412237:	in     al,dx
  412238:	fild   WORD PTR [ecx]
  41223a:	and    al,0xc7
  41223c:	add    DWORD PTR ds:0xb33a725f,ecx
  412242:	add    al,0x49
  412244:	add    al,0xc2
  412246:	sub    dl,BYTE PTR [eax+eiz*8]
  412249:	cwde   
  41224a:	xchg   esp,eax
  41224b:	xchg   edi,eax
  41224c:	inc    esp
  41224d:	dec    ebp
  41224e:	xchg   esp,eax
  41224f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412250:	call   DWORD PTR [ecx]
  412252:	shl    BYTE PTR [ecx+0x49],0x5f
  412256:	mov    fs,WORD PTR [esi+ecx*2+0x7ed07a5d]
  41225d:	and    al,0x94
  41225f:	jl     0x4122ce
  412261:	and    eax,0x13d3beb4
  412266:	mov    ebp,0xe8e8c137
  41226b:	dec    edx
  41226c:	cmp    cl,0xcb
  41226f:	(bad)  
  412270:	in     al,dx
  412271:	xchg   ebx,eax
  412272:	jge    0x412273
  412274:	push   edx
  412275:	lds    esi,FWORD PTR [eax-0x47]
  412278:	mov    cl,0x64
  41227a:	mov    bh,0xe7
  41227c:	shr    BYTE PTR [esi-0x6d],cl
  41227f:	jge    0x412240
  412281:	fst    DWORD PTR [esi+0xe8fde55]
  412287:	lea    esi,[edx]
  412289:	pop    ebp
  41228a:	jb     0x41221b
  41228c:	fcom   QWORD PTR [esi-0x6871a51e]
  412292:	dec    esp
  412293:	xor    DWORD PTR [ecx],ebp
  412295:	sti    
  412296:	mov    ch,BYTE PTR [ebp-0x6526ceb7]
  41229c:	sbb    ebp,DWORD PTR [ecx-0x47ae7949]
  4122a2:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4122a4:	and    bl,BYTE PTR [edi+0x53]
  4122a7:	fsubrp st(4),st
  4122a9:	lods   al,BYTE PTR ds:[esi]
  4122aa:	jns    0x412292
  4122ac:	inc    esp
  4122ae:	pop    es
  4122af:	and    ecx,edi
  4122b1:	xchg   edx,eax
  4122b2:	xor    al,0xea
  4122b4:	sub    BYTE PTR [ebx+0x3cde4181],bl
  4122ba:	inc    ebp
  4122bb:	fdivr  DWORD PTR [ecx]
  4122bd:	cmp    eax,0x1618bb14
  4122c2:	hlt    
  4122c3:	mov    ah,0x41
  4122c5:	sub    al,dh
  4122c7:	inc    ecx
  4122c8:	lock sbb al,0xaa
  4122cb:	fist   DWORD PTR [ecx]
  4122cd:	jle    0x4122d5
  4122cf:	(bad)  
  4122d0:	dec    ebx
  4122d1:	push   eax
  4122d2:	retf   
  4122d3:	add    ebx,DWORD PTR [ecx-0x9]
  4122d6:	jecxz  0x41232a
  4122d8:	aaa    
  4122d9:	pop    ds
  4122da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122db:	bound  eax,QWORD PTR [eax+0x4b]
  4122de:	in     al,0x8d
  4122e0:	xor    ch,dh
  4122e2:	jnp    0x4122be
  4122e4:	or     cl,BYTE PTR [ecx]
  4122e6:	stos   BYTE PTR es:[edi],al
  4122e7:	inc    esp
  4122e8:	inc    ebx
  4122e9:	loope  0x412327
  4122eb:	xor    DWORD PTR [ebx+0x50],0xffffffbe
  4122ef:	dec    ebp
  4122f0:	popf   
  4122f1:	mov    ds:0x2e2ec350,al
  4122f6:	jb     0x412296
  4122f8:	fdivr  DWORD PTR [esi-0x28c21e]
  4122fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ff:	and    dl,ch
  412301:	les    ecx,FWORD PTR ds:0xf7df86e6
  412307:	xchg   ebx,eax
  412308:	xchg   ebx,eax
  412309:	adc    esp,DWORD PTR [esi]
  41230b:	dec    edx
  41230c:	jns    0x4122c3
  41230e:	cli    
  41230f:	sbb    al,bh
  412311:	mov    ebp,DWORD PTR [eax+0x481cc572]
  412317:	xlat   BYTE PTR ds:[ebx]
  412318:	xchg   BYTE PTR ds:0xe1242bea,al
  41231e:	rol    esp,cl
  412320:	pop    ecx
  412321:	sbb    dh,BYTE PTR [edi+esi*4-0x4a]
  412325:	out    dx,al
  412326:	mov    ?,esi
  412328:	push   ds
  412329:	add    BYTE PTR [ebx],al
  41232b:	fwait
  41232c:	ins    BYTE PTR es:[edi],dx
  41232d:	pop    edi
  41232e:	cmp    eax,0xe9b5f068
  412333:	neg    DWORD PTR [esi+0x4]
  412336:	dec    edi
  412337:	push   cs
  412338:	xor    DWORD PTR [ebp+0x68addb48],0xffffff84
  41233f:	add    eax,DWORD PTR [ebx]
  412341:	aad    0x86
  412343:	jle    0x4123ad
  412345:	outs   dx,BYTE PTR ds:[esi]
  412346:	xchg   esp,eax
  412347:	mov    bh,0x7e
  412349:	pop    esi
  41234a:	inc    ebp
  41234b:	lock inc esp
  41234d:	(bad)  
  41234e:	jecxz  0x4123a6
  412350:	xchg   esp,eax
  412351:	mov    eax,0xacb006ff
  412356:	dec    edx
  412357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412358:	push   ebp
  412359:	mov    ds:0x6d0d1ea0,eax
  41235e:	fsubrp st(1),st
  412360:	pop    esi
  412361:	mov    ebp,0x9f4f17be
  412366:	pop    ecx
  412367:	xchg   DWORD PTR [ebx+0xa7341db],esi
  41236d:	into   
  41236e:	push   eax
  41236f:	(bad)  
  412370:	jmp    0x412397
  412372:	jae    0x41231c
  412374:	icebp  
  412375:	aad    0xd4
  412377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412378:	ret    
  412379:	jno    0x41233d
  41237b:	test   dl,bl
  41237d:	and    BYTE PTR [ebx-0x5d483fbd],al
  412383:	pop    eax
  412384:	pop    esi
  412385:	sbb    ah,BYTE PTR [eax]
  412387:	adc    eax,ebx
  412389:	or     al,0x97
  41238b:	cwde   
  41238c:	adc    al,0xf9
  41238e:	cld    
  41238f:	dec    ebp
  412390:	stos   DWORD PTR es:[edi],eax
  412391:	sub    esi,DWORD PTR [edi-0x23d766f1]
  412397:	inc    ecx
  412398:	icebp  
  412399:	aad    0x21
  41239b:	xchg   BYTE PTR [edi-0x12],bl
  41239e:	lock outs dx,DWORD PTR ds:[esi]
  4123a0:	imul   ecx,ebp,0x47f2ce5a
  4123a6:	rol    DWORD PTR [edx],cl
  4123a8:	imul   ecx,DWORD PTR [esi+edx*4+0x15c5b5a2],0x19063a70
  4123b3:	mov    BYTE PTR [eax],al
  4123b5:	idiv   edi
  4123b7:	adc    eax,0xcd58f4fb
  4123bc:	and    ecx,edi
  4123be:	dec    esi
  4123bf:	push   ecx
  4123c0:	addr16 in eax,dx
  4123c2:	mov    esp,0x101c269c
  4123c7:	inc    edx
  4123c8:	add    eax,0x2f8eadf0
  4123cd:	sti    
  4123ce:	pop    edi
  4123cf:	mov    eax,ds:0x28765859
  4123d4:	dec    ebx
  4123d5:	jg     0x41236d
  4123d7:	push   esi
  4123d8:	out    0xb7,al
  4123da:	inc    ebx
  4123db:	sub    DWORD PTR [ebp-0x57],0xffffffa6
  4123df:	int    0xf
  4123e1:	popf   
  4123e2:	sub    DWORD PTR [eax],esi
  4123e4:	stos   DWORD PTR es:[edi],eax
  4123e5:	mov    DWORD PTR [edi-0xa],eax
  4123e8:	pop    ss
  4123e9:	mov    ebx,0xeea49a75
  4123ee:	ins    BYTE PTR es:[edi],dx
  4123ef:	mov    ch,0x98
  4123f1:	and    BYTE PTR [eax],ah
  4123f3:	imul   edi,DWORD PTR [eax+0x6a],0x1b
  4123f7:	xchg   DWORD PTR [ebx+0x5d],edx
  4123fa:	enter  0x7dbc,0x6f
  4123fe:	xchg   ebx,eax
  4123ff:	imul   eax,DWORD PTR [edx+0xd],0xffffffd1
  412403:	mov    cl,0x5
  412405:	lahf   
  412406:	adc    al,0x42
  412408:	push   0xc68c8fcf
  41240d:	imul   esi,DWORD PTR [eax],0x20
  412410:	cs push 0xffffff95
  412413:	(bad)  
  412414:	inc    ebx
  412415:	dec    ebp
  412416:	xor    al,dh
  412418:	pop    ebx
  412419:	sub    ch,0x9a
  41241c:	xor    al,0x66
  41241e:	dec    esi
  41241f:	or     DWORD PTR [edx-0x7d],ebx
  412422:	int3   
  412423:	nop    DWORD PTR [edi]
  412426:	ins    BYTE PTR es:[edi],dx
  412427:	xchg   ebp,eax
  412428:	pop    esp
  412429:	ins    BYTE PTR es:[edi],dx
  41242a:	xchg   BYTE PTR [esi],dh
  41242c:	dec    ecx
  41242d:	aam    0x75
  41242f:	jno    0x412480
  412431:	fisubr WORD PTR [ebp-0x5f]
  412434:	mov    ecx,0x7b581716
  412439:	jnp    0x412492
  41243b:	add    BYTE PTR cs:[edx],0x16
  41243f:	cwde   
  412440:	pushf  
  412441:	push   edx
  412442:	call   0xfb0f0226
  412447:	xchg   edx,eax
  412448:	push   0x5d
  41244a:	out    0xba,al
  41244c:	rol    DWORD PTR [eax],1
  41244e:	leave  
  41244f:	pop    esi
  412450:	xor    eax,0x770858db
  412455:	dec    edi
  412456:	(bad)  
  412457:	push   ebx
  412458:	xchg   esp,eax
  412459:	jmp    0x646bfa34
  41245e:	cmc    
  41245f:	inc    esp
  412460:	mov    eax,ds:0x1c13a412
  412465:	aam    0xb6
  412467:	loop   0x4124b7
  412469:	rol    BYTE PTR [edx+0x707f431c],cl
  41246f:	in     eax,0x4a
  412471:	mov    ah,0x49
  412473:	push   ebp
  412474:	arpl   WORD PTR [eax+edi*2],sp
  412477:	push   ebx
  412478:	stos   DWORD PTR es:[edi],eax
  412479:	sub    eax,0xa0089be0
  41247e:	mov    esp,0xd9b2246c
  412483:	fs adc ch,al
  412486:	mov    ebp,0xcbf3ed39
  41248b:	and    ah,dh
  41248d:	sti    
  41248e:	pop    ds
  41248f:	xor    DWORD PTR ss:[edi+edx*8],ebp
  412493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412494:	sti    
  412495:	popf   
  412496:	shl    DWORD PTR [edi-0x3f],cl
  412499:	inc    ecx
  41249a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41249b:	jae    0x412427
  41249d:	adc    BYTE PTR [edx+0x7d2475ed],dh
  4124a3:	adc    DWORD PTR [eax-0x1ccccd99],esp
  4124a9:	(bad)  
  4124aa:	test   eax,0xafa973eb
  4124af:	dec    edi
  4124b0:	or     esp,ebp
  4124b2:	int    0x46
  4124b4:	mov    bh,0xae
  4124b6:	imul   edx,DWORD PTR [esp+edx*1-0x46a13dac],0x86b54c1f
  4124c1:	or     eax,0x674c6a51
  4124c6:	sbb    DWORD PTR [edx+esi*4+0x1f074771],0x5108f98b
  4124d1:	mov    ch,0x24
  4124d3:	ss sbb eax,0xabc803dc
  4124d9:	hlt    
  4124da:	jmp    0x5ae1ae66
  4124df:	xchg   ecx,eax
  4124e0:	mov    WORD PTR [ebx],fs
  4124e2:	pop    edx
  4124e3:	or     edi,DWORD PTR [edi+0x424995ab]
  4124e9:	and    dh,bh
  4124eb:	jo     0x4124a4
  4124ed:	popf   
  4124ee:	div    DWORD PTR [ebx-0x43b9911f]
  4124f4:	ss call 0x34478072
  4124fa:	mov    ebp,0x467ee2c1
  4124ff:	mov    bh,0x1e
  412501:	lods   al,BYTE PTR ds:[esi]
  412502:	repz sti 
  412504:	mov    edx,0x398fa82e
  412509:	or     ebp,DWORD PTR [ebp-0x30]
  41250c:	fmulp  st(7),st
  41250e:	dec    eax
  41250f:	pop    ebx
  412510:	mov    DWORD PTR [eax+0x307b807d],ebx
  412516:	test   al,0xb1
  412518:	cwde   
  412519:	das    
  41251a:	push   ebx
  41251b:	loopne 0x41255a
  41251d:	setl   BYTE PTR ds:0x9b7c96b7
  412524:	stc    
  412525:	push   edi
  412526:	pop    eax
  412527:	xchg   ecx,eax
  412528:	mov    al,0x4
  41252a:	cmp    BYTE PTR [edx-0x9],cl
  41252d:	cdq    
  41252e:	mov    ch,BYTE PTR [edi+ebp*1]
  412531:	frstor [ecx+eax*8+0x7028fcef]
  412538:	div    al
  41253a:	xchg   esp,edx
  41253c:	stos   DWORD PTR es:[edi],eax
  41253d:	inc    ecx
  41253e:	outs   dx,DWORD PTR ds:[esi]
  41253f:	jne    0x412577
  412541:	push   es
  412542:	stos   DWORD PTR es:[edi],eax
  412543:	out    0x17,al
  412545:	jnp    0x4124d5
  412547:	and    ebx,ecx
  412549:	in     al,0xde
  41254b:	outs   dx,DWORD PTR ds:[esi]
  41254c:	cld    
  41254d:	xchg   ecx,eax
  41254e:	push   es
  41254f:	ret    
  412550:	int3   
  412551:	push   edi
  412552:	sub    ebx,DWORD PTR [ebx]
  412554:	lock in eax,0x9a
  412557:	(bad)
  41255a:	mov    bh,0x57
  41255c:	mov    bh,0x3e
  41255e:	mov    ebx,0xc6866f51
  412563:	mov    al,dl
  412565:	jmp    0x8983f1a3
  41256a:	cwde   
  41256b:	sar    DWORD PTR [ebx-0x29],cl
  41256e:	xor    DWORD PTR [esi+0xc6e6263],0xa2e4e42d
  412578:	sub    eax,DWORD PTR [eax-0x71]
  41257b:	jae    0x41256c
  41257d:	jecxz  0x412503
  41257f:	repz sub BYTE PTR ds:0x6e124537,0x36
  412587:	pop    ecx
  412588:	add    esi,DWORD PTR [ecx]
  41258a:	jle    0x412511
  41258c:	push   ss
  41258d:	imul   edi,DWORD PTR [esi],0x130a046b
  412593:	ins    BYTE PTR es:[edi],dx
  412594:	imul   ecx,eax,0xffffffe5
  412597:	popa   
  412598:	in     eax,dx
  412599:	mov    esi,0x35f4c4cf
  41259e:	jns    0x412573
  4125a0:	xchg   esi,eax
  4125a1:	imul   ebp,DWORD PTR [eax],0x76
  4125a4:	lahf   
  4125a5:	jbe    0x412589
  4125a7:	jno    0x412606
  4125a9:	test   eax,0xdf163a
  4125ae:	dec    ecx
  4125af:	mov    ecx,0x2b3108b1
  4125b4:	inc    ebx
  4125b5:	mov    esi,0xb7c1323f
  4125ba:	or     eax,esp
  4125bc:	outs   dx,BYTE PTR ds:[esi]
  4125bd:	stos   BYTE PTR es:[edi],al
  4125be:	(bad)  
  4125bf:	add    BYTE PTR [edx+0x5e],ah
  4125c2:	push   esi
  4125c3:	scas   al,BYTE PTR es:[edi]
  4125c4:	push   ebx
  4125c5:	dec    esp
  4125c6:	int    0x70
  4125c8:	mov    dl,BYTE PTR [eax]
  4125ca:	inc    esi
  4125cb:	lock not DWORD PTR [ebp+0x61107c20]
  4125d2:	dec    ecx
  4125d3:	call   0x5d2f2e70
  4125d8:	dec    eax
  4125d9:	xchg   ebp,eax
  4125da:	bound  edx,QWORD PTR [eax]
  4125dc:	iret   
  4125dd:	mov    ebx,0xd4ff22b5
  4125e2:	and    cl,dl
  4125e4:	dec    ebp
  4125e5:	cdq    
  4125e6:	cmp    esi,ebx
  4125e8:	test   BYTE PTR [edx],ah
  4125ea:	or     eax,0xa4cfede1
  4125ef:	lods   eax,DWORD PTR ds:[esi]
  4125f0:	dec    ecx
  4125f1:	clc    
  4125f2:	aaa    
  4125f3:	imul   ebp,DWORD PTR [eax+0x493337db],0x6847bb9d
  4125fd:	fld    QWORD PTR [ebx]
  4125ff:	lds    eax,FWORD PTR [ecx]
  412601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412602:	rcl    DWORD PTR [ebp+0x75],0x77
  412606:	sub    al,0xe7
  412608:	xchg   DWORD PTR [esi],ecx
  41260a:	nop
  41260b:	lea    ebx,[ebp-0x4a]
  41260e:	mov    al,0x3f
  412610:	add    DWORD PTR [ebx-0x1a9e40ee],edi
  412616:	mul    BYTE PTR [esi-0x70]
  412619:	sbb    al,0x1a
  41261b:	inc    ebx
  41261c:	sbb    al,0xc0
  41261e:	jmp    0x41266b
  412620:	xchg   edi,eax
  412621:	mov    ds:0x52db7473,al
  412626:	popf   
  412627:	(bad)  
  412628:	das    
  412629:	jne    0x41267d
  41262b:	test   al,0xdd
  41262d:	mov    ch,0xb9
  41262f:	mov    ?,WORD PTR [esi]
  412631:	rol    BYTE PTR [ebp-0x37b79caa],0x7d
  412638:	aad    0xe6
  41263a:	pop    ebx
  41263b:	(bad)  
  41263c:	loopne 0x4125ec
  41263e:	inc    esp
  41263f:	je     0x4126ac
  412641:	cmp    DWORD PTR [eax+0x576a1e14],edx
  412647:	imul   esp,DWORD PTR [eax-0x30],0x221807e9
  41264e:	mov    esi,0x13f9252b
  412653:	xor    al,0xac
  412655:	xchg   ebx,eax
  412656:	jbe    0x412600
  412658:	add    dh,BYTE PTR [ecx-0x66]
  41265b:	stos   BYTE PTR es:[edi],al
  41265c:	sub    ch,BYTE PTR [edx+0x72]
  41265f:	push   eax
  412660:	dec    esp
  412661:	(bad)  
  412662:	mov    dh,0xf
  412664:	test   al,0x3e
  412666:	ja     0x412628
  412668:	inc    eax
  412669:	imul   esp,DWORD PTR [ebx+0x69],0xcab65c1d
  412670:	push   cs
  412671:	aam    0x56
  412673:	(bad)  
  412674:	outs   dx,DWORD PTR ds:[esi]
  412675:	add    dl,0xaf
  412678:	fcmovnb st,st(6)
  41267a:	fcomp  QWORD PTR ds:0x3b85857d
  412680:	(bad)  
  412681:	fild   QWORD PTR [esi-0x19bea5f9]
  412687:	pop    ecx
  412688:	adc    al,0xb7
  41268a:	loope  0x4126b2
  41268c:	imul   ebx,DWORD PTR [edx-0x1d452e6a],0x18929aa5
  412696:	sub    eax,0xd6038f9e
  41269b:	xor    al,0xd8
  41269d:	sahf   
  41269e:	jle    0x41264a
  4126a0:	ins    BYTE PTR es:[edi],dx
  4126a1:	add    ch,bl
  4126a3:	das    
  4126a4:	sub    eax,0x3dc83804
  4126a9:	ret    0xb240
  4126ac:	or     eax,0x2670713c
  4126b1:	and    DWORD PTR [ebx],edx
  4126b3:	mov    esp,0x4df28ced
  4126b8:	mov    ?,WORD PTR [ebx+edx*1]
  4126bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126bc:	xchg   esi,eax
  4126bd:	mov    ds:0xf1b8775e,al
  4126c2:	mov    ch,BYTE PTR [ebp-0x1e9be6be]
  4126c8:	rol    BYTE PTR ds:0x5a8aa7cb,1
  4126ce:	bound  ebp,QWORD PTR [ebx-0x64]
  4126d1:	ret    0xca91
  4126d4:	push   edx
  4126d5:	cwde   
  4126d6:	sub    eax,0xd1b0670a
  4126db:	push   ss
  4126dc:	pop    ds
  4126dd:	out    dx,eax
  4126de:	test   esi,ebp
  4126e0:	push   edi
  4126e1:	jle    0x412723
  4126e3:	test   BYTE PTR [eax+0x2c6b9b52],dh
  4126e9:	mov    eax,0x744f332c
  4126ee:	sahf   
  4126ef:	cmc    
  4126f0:	jle    0x412715
  4126f2:	retf   
  4126f3:	xlat   BYTE PTR ds:[ebx]
  4126f4:	stos   BYTE PTR es:[edi],al
  4126f5:	out    0x2f,eax
  4126f7:	ss aam 0xcf
  4126fa:	mov    edi,ebx
  4126fc:	ins    DWORD PTR es:[edi],dx
  4126fd:	mov    edi,DWORD PTR [ecx]
  4126ff:	xchg   esp,eax
  412700:	inc    esi
  412701:	mov    ch,0x57
  412703:	call   0xa3ce:0xf91ebd4a
  41270a:	in     eax,0xfc
  41270c:	and    ebp,ebx
  41270e:	stos   DWORD PTR es:[edi],eax
  41270f:	(bad)  
  412710:	add    edx,eax
  412712:	cmp    esp,DWORD PTR [edx-0x37]
  412715:	inc    ebp
  412716:	adc    eax,0x80175b80
  41271b:	shl    eax,cl
  41271d:	xchg   esp,eax
  41271e:	jge    0x4126f2
  412720:	lock mov ds:0x66d82389,eax
  412726:	xchg   esp,eax
  412727:	jno    0x41275f
  412729:	cmp    esp,ebx
  41272b:	mov    cl,0x15
  41272d:	add    DWORD PTR [edx-0x4a],0x6d
  412731:	(bad)  
  412732:	(bad)  
  412733:	lods   eax,DWORD PTR ds:[esi]
  412734:	shl    BYTE PTR [eax],1
  412736:	(bad)  
  412737:	js     0x412782
  412739:	shr    BYTE PTR [eax+0x54],cl
  41273c:	mov    ds:0x8fcd21ef,al
  412741:	aad    0x10
  412743:	mov    bh,0x78
  412745:	mov    WORD PTR [ebx-0x5],cs
  412748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412749:	clc    
  41274a:	push   eax
  41274b:	(bad)  
  41274c:	dec    ebp
  41274d:	(bad)  
  41274e:	mov    edi,0x6d8de190
  412753:	inc    esi
  412754:	call   0xd868:0xee8d3d48
  41275b:	sbb    cl,0x9c
  41275e:	sub    cl,bh
  412760:	xor    esp,DWORD PTR [edi+0x53f1a152]
  412766:	sub    al,0xbd
  412768:	add    ebx,ecx
  41276a:	pop    ds
  41276b:	xor    al,0xb2
  41276d:	(bad)  
  41276e:	or     BYTE PTR [ecx+eiz*2],ch
  412771:	mov    esi,0x48a77d24
  412776:	dec    eax
  412777:	call   0x7143324
  41277c:	or     BYTE PTR [ecx+0x45],bl
  41277f:	jno    0x41279c
  412781:	mov    al,BYTE PTR gs:0x37498e29
  412788:	mov    esi,DWORD PTR [ebx+0x3a67bf7]
  41278e:	call   0x4010:0x99f73da6
  412795:	pop    esp
  412796:	pushf  
  412797:	push   ebx
  412798:	dec    esp
  412799:	mov    BYTE PTR [ecx-0x1a440af6],bl
  41279f:	test   BYTE PTR [eax-0x6394197f],0x9c
  4127a6:	fisub  WORD PTR [edi+eax*8+0x16]
  4127aa:	and    al,0x2
  4127ac:	push   eax
  4127ad:	inc    esi
  4127ae:	cmp    al,0x31
  4127b0:	into   
  4127b1:	mov    bh,0x36
  4127b3:	sbb    cl,BYTE PTR [ebx+0x44]
  4127b6:	inc    ebp
  4127b7:	pop    esp
  4127b8:	rol    DWORD PTR [ebp-0x1c],1
  4127bb:	xchg   BYTE PTR [edi+0x2a74e544],al
  4127c1:	mov    ebp,0x40f05fe0
  4127c6:	dec    ebp
  4127c7:	test   eax,0xdea17714
  4127cc:	in     eax,dx
  4127cd:	fcom   DWORD PTR [ebx-0x52d3ceb6]
  4127d3:	enter  0x51bc,0x7a
  4127d7:	out    dx,eax
  4127d8:	stos   BYTE PTR es:[edi],al
  4127d9:	movntps XMMWORD PTR ds:0x7e1ad0dd,xmm3
  4127e0:	sahf   
  4127e1:	mov    cl,0x8a
  4127e3:	fnstenv [ebx]
  4127e5:	and    edx,ebx
  4127e7:	in     al,0x5b
  4127e9:	js     0x4127f1
  4127eb:	scas   al,BYTE PTR es:[edi]
  4127ec:	pop    esi
  4127ed:	repnz mov BYTE PTR [edi+0x427814a5],0xc7
  4127f5:	jecxz  0x4127bc
  4127f7:	dec    DWORD PTR [esi]
  4127f9:	add    edi,DWORD PTR [edi-0xcd8ef65]
  4127ff:	adc    ch,BYTE PTR [edi]
  412801:	test   eax,0x3c2bfbb4
  412806:	push   ebp
  412807:	shr    ah,1
  412809:	ds dec edx
  41280b:	aad    0xf9
  41280d:	add    DWORD PTR [eax],0x2d
  412810:	xor    DWORD PTR [eax-0x4c76bc2f],0xc9cc7fa3
  41281a:	adc    BYTE PTR [eax+0x7a],dl
  41281d:	les    edi,FWORD PTR [ebx]
  41281f:	xchg   ecx,eax
  412820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412821:	inc    ebp
  412822:	mul    cl
  412824:	ds dec esp
  412826:	jp     0x412886
  412828:	mov    dh,0x90
  41282a:	aad    0xb6
  41282c:	mov    eax,DWORD PTR [ebp+0x4e845181]
  412832:	(bad)  
  412833:	call   FWORD PTR [esi+0x7338cc54]
  412839:	lds    esp,FWORD PTR [eax+0x1b]
  41283c:	inc    ebx
  41283d:	push   ds
  41283e:	mov    dl,0xff
  412840:	loop   0x41285a
  412842:	jo     0x4127e2
  412844:	jmp    0x52b71314
  412849:	push   esi
  41284a:	jns    0x412832
  41284c:	push   esi
  41284d:	sbb    BYTE PTR [eax],ah
  41284f:	pop    eax
  412850:	(bad)  
  412852:	pop    eax
  412853:	leave  
  412854:	sbb    DWORD PTR [ebx],ebx
  412856:	popf   
  412857:	out    0x98,al
  412859:	test   DWORD PTR [eax+0x70],ecx
  41285c:	add    esi,DWORD PTR [ebp+0x58]
  41285f:	mov    dl,0xd6
  412861:	ins    DWORD PTR es:[edi],dx
  412862:	dec    ebx
  412863:	(bad)  
  412864:	mov    dl,0x58
  412866:	inc    ebx
  412867:	arpl   WORD PTR [ebp-0x3e],bx
  41286a:	dec    eax
  41286b:	test   DWORD PTR [eax+eax*4-0x3d],eax
  41286f:	imul   esi,DWORD PTR [eax-0x52891a71],0x27
  412876:	icebp  
  412877:	jno    0x412804
  412879:	add    esi,DWORD PTR [esi+0x4bbf8589]
  41287f:	sbb    cl,BYTE PTR [ebx]
  412881:	fldcw  WORD PTR [ebp-0x57919e27]
  412887:	sar    BYTE PTR [ebx+0x17],cl
  41288a:	aaa    
  41288b:	shl    DWORD PTR [ebp+0x759b1f1b],cl
  412891:	pop    esi
  412892:	push   edi
  412893:	jecxz  0x412849
  412895:	fisttp WORD PTR [edx+0x42]
  412898:	in     al,dx
  412899:	test   DWORD PTR [esi+0x50ce004d],eax
  41289f:	xor    eax,0x516459df
  4128a4:	pop    esi
  4128a5:	dec    esi
  4128a6:	scas   eax,DWORD PTR es:[edi]
  4128a7:	stos   DWORD PTR es:[edi],eax
  4128a8:	push   0x79b4d6ac
  4128ad:	dec    edi
  4128ae:	xchg   ebx,eax
  4128af:	push   0xa03b0310
  4128b4:	sub    eax,0x2b380a29
  4128b9:	and    edi,DWORD PTR [ebp-0x31]
  4128bc:	push   0x33
  4128be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128bf:	jg     0x412870
  4128c1:	repz inc edi
  4128c3:	push   ds
  4128c4:	mov    bl,0xa3
  4128c6:	add    BYTE PTR [esi-0x3e5249ae],dh
  4128cc:	pop    esi
  4128cd:	xor    al,0xae
  4128cf:	inc    ebp
  4128d0:	pop    eax
  4128d1:	pop    ss
  4128d2:	mov    cl,0x36
  4128d4:	and    DWORD PTR [ebp+0x2d8577f9],edi
  4128da:	dec    ebx
  4128db:	pop    ebp
  4128dc:	fwait
  4128dd:	scas   eax,DWORD PTR es:[edi]
  4128de:	popa   
  4128df:	mov    BYTE PTR [ecx+0x50],cl
  4128e2:	inc    ebp
  4128e3:	push   es
  4128e4:	cwde   
  4128e5:	sub    DWORD PTR [ecx],ecx
  4128e7:	ja     0x412934
  4128e9:	xor    DWORD PTR [edx+0x6ae8e7a5],edx
  4128ef:	xchg   ebp,eax
  4128f0:	lods   al,BYTE PTR ds:[esi]
  4128f1:	cdq    
  4128f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128f3:	lds    ecx,FWORD PTR [edx+0x6c5268de]
  4128f9:	iret   
  4128fa:	in     eax,0x1c
  4128fc:	mov    eax,0x3c2655fe
  412901:	mov    edi,0x8deb1de3
  412906:	xchg   edi,eax
  412907:	xor    eax,0x4ab26d28
  41290c:	int3   
  41290d:	test   al,0x68
  41290f:	dec    edx
  412910:	imul   ebp,DWORD PTR [edx+0x38],0xcdb2f989
  412917:	jge    0x4128d3
  412919:	ins    DWORD PTR es:[edi],dx
  41291a:	xchg   edx,eax
  41291b:	mov    fs,WORD PTR [esi+0x1e]
  41291e:	cli    
  41291f:	mov    edx,0x1e3a096e
  412924:	inc    edi
  412925:	jg     0x4128d7
  412927:	mov    dl,0x47
  412929:	and    BYTE PTR [ebx],ah
  41292b:	xchg   esi,eax
  41292c:	pop    ss
  41292d:	cmp    edi,DWORD PTR [edx+0x71]
  412930:	xchg   edi,eax
  412931:	push   ebp
  412932:	test   BYTE PTR [edi-0x5aacff54],ch
  412938:	popf   
  412939:	ret    0xed90
  41293c:	inc    ebp
  41293d:	mov    ebx,0xd5f67f84
  412942:	add    esp,DWORD PTR [edx+0x1a]
  412945:	and    al,0xae
  412947:	ret    
  412948:	call   FWORD PTR [ebp+0x145daa4e]
  41294e:	adc    DWORD PTR [ecx-0x5a],ebp
  412951:	mov    edi,0x6629509a
  412956:	add    eax,0xdff04627
  41295b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41295c:	xor    al,0x49
  41295e:	push   esp
  41295f:	call   0x19d1571f
  412964:	jmp    0x412947
  412966:	dec    esp
  412967:	dec    edx
  412968:	lahf   
  412969:	sub    BYTE PTR [ecx-0x57],bl
  41296c:	inc    edx
  41296d:	pusha  
  41296e:	dec    eax
  41296f:	dec    edi
  412970:	add    edi,DWORD PTR [edx-0x48dc811]
  412976:	ror    BYTE PTR [edx],cl
  412978:	inc    ebp
  412979:	xchg   DWORD PTR [eax-0x23701ece],ecx
  41297f:	and    eax,0x9c8dbafd
  412984:	sub    DWORD PTR [eax-0x23],0x1c
  412988:	sub    eax,ebx
  41298a:	sub    DWORD PTR [ebp+0x63eb03a4],edi
  412990:	pop    ebx
  412991:	and    esp,ecx
  412993:	out    dx,al
  412994:	adc    dl,BYTE PTR [esp+edi*4]
  412997:	stc    
  412998:	inc    ebp
  412999:	jne    0x412947
  41299b:	jp     0x412a09
  41299d:	xor    al,0x38
  41299f:	mov    ch,0xbb
  4129a1:	mov    WORD PTR ds:0xf6f139a2,es
  4129a7:	dec    ecx
  4129a8:	outs   dx,BYTE PTR ds:[esi]
  4129a9:	jnp    0x4129c3
  4129ab:	jno    0x412a15
  4129ad:	mov    eax,ds:0xd7758945
  4129b2:	aam    0xf9
  4129b4:	xor    al,BYTE PTR [edi-0x7d310962]
  4129ba:	or     ah,cl
  4129bc:	hlt    
  4129bd:	xchg   ebp,eax
  4129be:	xchg   esi,eax
  4129bf:	inc    edx
  4129c0:	(bad)  
  4129c1:	mov    ah,0x45
  4129c3:	jnp    0x412976
  4129c5:	data16 jo 0x412a07
  4129c8:	outs   dx,DWORD PTR ds:[esi]
  4129c9:	mov    ch,0x25
  4129cb:	mov    edx,0x16929227
  4129d0:	push   0x2bdd7529
  4129d5:	(bad)  
  4129d6:	jp     0x412a3f
  4129d8:	cmp    BYTE PTR [edx+0x24e69352],ch
  4129de:	je     0x4129be
  4129e0:	jp     0x412a5a
  4129e2:	pusha  
  4129e3:	push   ss
  4129e4:	xchg   edx,eax
  4129e5:	shr    esi,1
  4129e7:	std    
  4129e8:	aad    0x14
  4129ea:	repz cmp ebx,esi
  4129ed:	mov    ebp,0x576879e2
  4129f2:	pop    ebp
  4129f3:	adc    al,0x8c
  4129f5:	lahf   
  4129f6:	cli    
  4129f7:	scas   al,BYTE PTR es:[edi]
  4129f8:	mov    esp,0xc2df4919
  4129fd:	xor    DWORD PTR [edi+0x6978e17b],ebp
  412a03:	dec    ebp
  412a04:	xor    BYTE PTR [esi-0xd],bl
  412a07:	dec    eax
  412a08:	adc    BYTE PTR [edi+ebx*4],bh
  412a0b:	inc    eax
  412a0c:	popf   
  412a0d:	es xchg ebx,eax
  412a0f:	xchg   edx,eax
  412a10:	add    ebx,edi
  412a12:	jbe    0x4129be
  412a14:	outs   dx,BYTE PTR ds:[esi]
  412a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a16:	fadd   QWORD PTR [edx-0x68]
  412a19:	jo     0x4129bd
  412a1b:	jae    0x412a62
  412a1d:	mov    ch,0x85
  412a1f:	pop    ebp
  412a20:	mov    dh,0x55
  412a22:	shl    DWORD PTR [edx],0x54
  412a25:	adc    dl,dh
  412a27:	(bad)  
  412a28:	push   ebp
  412a29:	xor    bh,al
  412a2b:	sbb    BYTE PTR [ebp+0x7e927b48],ch
  412a31:	in     al,0x4c
  412a33:	scas   al,BYTE PTR es:[edi]
  412a34:	stos   DWORD PTR es:[edi],eax
  412a35:	pop    ebx
  412a36:	sub    dl,BYTE PTR [edi+0x2b]
  412a39:	mov    BYTE PTR [edi-0x51],bh
  412a3c:	call   0x1d586135
  412a41:	and    cx,WORD PTR [eax-0xa]
  412a45:	mov    ch,0x4f
  412a47:	out    dx,al
  412a48:	scas   al,BYTE PTR es:[edi]
  412a49:	cmp    ah,BYTE PTR [ecx+0x69]
  412a4c:	and    ch,BYTE PTR [ecx]
  412a4e:	sti    
  412a4f:	mov    WORD PTR [eax+ebx*1-0x51],ds
  412a53:	inc    esi
  412a54:	mov    cl,0x3c
  412a56:	and    eax,0x237c2068
  412a5b:	dec    eax
  412a5c:	ret    
  412a5d:	in     eax,dx
  412a5e:	mov    dh,0x15
  412a60:	out    dx,al
  412a61:	mov    ch,BYTE PTR [esi+0x2]
  412a64:	test   al,0xa4
  412a66:	ins    DWORD PTR es:[edi],dx
  412a67:	xchg   ebp,eax
  412a68:	ja     0x4129fc
  412a6a:	xor    BYTE PTR [edx+0x6e0db001],0xad
  412a71:	cmc    
  412a72:	push   ebp
  412a73:	ret    
  412a74:	mov    esi,0xae3354c1
  412a79:	cs add al,0x3d
  412a7c:	data16 jge 0x412a44
  412a7f:	sub    ecx,DWORD PTR [edx]
  412a81:	push   esi
  412a82:	push   edi
  412a83:	stos   DWORD PTR es:[edi],eax
  412a84:	daa    
  412a85:	scas   al,BYTE PTR es:[edi]
  412a86:	(bad)  
  412a87:	sbb    esp,ebp
  412a89:	push   ecx
  412a8a:	fidivr DWORD PTR [esi+0x38]
  412a8d:	cli    
  412a8e:	mov    ds:0x8422d3dd,eax
  412a93:	aaa    
  412a94:	pushf  
  412a95:	add    eax,0x612cfc7a
  412a9a:	in     al,0xe3
  412a9c:	fild   QWORD PTR [ecx+0x7e]
  412a9f:	adc    ch,BYTE PTR [ebx]
  412aa1:	sbb    eax,0x3c0d77e4
  412aa6:	cdq    
  412aa7:	sbb    DWORD PTR [edx+ebx*4],esp
  412aaa:	(bad)  [edi]
  412aac:	xchg   edi,eax
  412aad:	xchg   ecx,eax
  412aae:	inc    esp
  412aaf:	jne    0x412a82
  412ab1:	mov    DWORD PTR [eax+0x31fcefd7],ecx
  412ab7:	and    ecx,DWORD PTR [ebp-0x56fd500d]
  412abd:	jp     0x412ae4
  412abf:	jmp    0x983e:0x731011ad
  412ac6:	xchg   edi,eax
  412ac7:	gs pop ecx
  412ac9:	lock test BYTE PTR [esi-0x2d],al
  412acd:	mov    ds:0xca67bb69,eax
  412ad2:	or     BYTE PTR [esi],ch
  412ad4:	sbb    al,0x77
  412ad6:	pop    ecx
  412ad7:	(bad)  
  412ad8:	punpckhbw mm3,QWORD PTR [eax]
  412adb:	dec    ebx
  412adc:	push   ds
  412add:	fwait
  412ade:	jle    0x412a6b
  412ae0:	pop    ebp
  412ae1:	or     eax,0x485ad285
  412ae6:	xor    BYTE PTR [edi],ch
  412ae8:	push   edi
  412ae9:	arpl   WORD PTR [edi+0x1c627bc0],cx
  412aef:	ds cmp al,0xf9
  412af2:	xchg   ecx,eax
  412af3:	dec    esp
  412af4:	adc    eax,0x666b1d36
  412af9:	sbb    esi,DWORD PTR [ebx+0x7326cc87]
  412aff:	lods   al,BYTE PTR ds:[esi]
  412b00:	out    dx,al
  412b01:	shr    BYTE PTR [ebp+0x1281a90c],1
  412b07:	shl    BYTE PTR ds:[ebp-0xdea9358],cl
  412b0e:	(bad)  [eax]
  412b10:	lahf   
  412b11:	ins    DWORD PTR es:[edi],dx
  412b12:	sti    
  412b13:	fcom   DWORD PTR [edx-0x3b]
  412b16:	pop    edi
  412b17:	test   eax,0x5550a88c
  412b1c:	jbe    0x412abe
  412b1e:	cmp    DWORD PTR [edi+0x35],0xffffffc5
  412b22:	sub    al,0xc9
  412b24:	out    dx,al
  412b25:	mov    ebx,0x9bf00a25
  412b2a:	sti    
  412b2b:	xchg   ebp,eax
  412b2c:	test   BYTE PTR [ebp-0x48],0x29
  412b30:	mov    ecx,0xa7c4cda2
  412b35:	sbb    DWORD PTR [edi-0x7b5b8b90],ebx
  412b3b:	ret    0x4e46
  412b3e:	std    
  412b3f:	imul   edx,DWORD PTR [edx-0x3a3998b8],0x5af5fc17
  412b49:	pop    ss
  412b4a:	movhps QWORD PTR [esi],xmm3
  412b4d:	dec    ebx
  412b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b4f:	sbb    ah,BYTE PTR [ebx-0x30]
  412b52:	adc    ch,BYTE PTR [eax+0x3538a5ed]
  412b58:	stc    
  412b59:	xchg   BYTE PTR [bx-0x4921],ah
  412b5e:	add    al,dh
  412b60:	(bad)  
  412b61:	cmp    BYTE PTR [esi+0x79],ch
  412b64:	push   esi
  412b65:	js     0x412b36
  412b67:	(bad)  
  412b68:	bound  esi,QWORD PTR [edx]
  412b6a:	push   esp
  412b6b:	repz mov ds:0x37725c99,eax
  412b71:	sub    DWORD PTR [ecx+0x78],ebx
  412b74:	add    BYTE PTR [edx],dl
  412b76:	dec    edx
  412b77:	fsubrp st(3),st
  412b79:	out    dx,eax
  412b7a:	jae    0x412be8
  412b7c:	push   ecx
  412b7d:	push   cs
  412b7e:	add    edi,DWORD PTR [si-0x586c]
  412b83:	clc    
  412b84:	jno    0x412b42
  412b86:	(bad)  
  412b87:	outs   dx,BYTE PTR ds:[esi]
  412b88:	jle    0x412b0d
  412b8a:	nop
  412b8b:	mov    al,ds:0x1c3697f9
  412b90:	mov    bh,ah
  412b92:	rcr    BYTE PTR [esi-0x781294b],0xb1
  412b99:	stos   BYTE PTR es:[edi],al
  412b9a:	mov    esi,0x4a65f8e5
  412b9f:	jnp    0x412bc8
  412ba1:	fsub   st,st(0)
  412ba3:	test   ebp,esi
  412ba5:	mov    bl,0x9e
  412ba7:	mov    WORD PTR [eax],?
  412ba9:	sub    DWORD PTR [ecx],ebx
  412bab:	xchg   ecx,eax
  412bac:	cmp    bl,dh
  412bae:	mov    bl,0xc3
  412bb0:	cwde   
  412bb1:	ins    DWORD PTR es:[edi],dx
  412bb2:	sub    BYTE PTR [edx],0x58
  412bb5:	scas   al,BYTE PTR es:[edi]
  412bb6:	sbb    al,0x25
  412bb8:	nop
  412bb9:	(bad)  
  412bba:	push   edx
  412bbb:	ficom  DWORD PTR [edi-0x10]
  412bbe:	out    dx,eax
  412bbf:	push   edx
  412bc0:	pop    ebx
  412bc1:	sbb    al,0xc1
  412bc3:	fstp   QWORD PTR [edx+ecx*4]
  412bc6:	ins    DWORD PTR es:[edi],dx
  412bc7:	mov    WORD PTR [edi-0x7203eb4f],cs
  412bcd:	adc    DWORD PTR gs:[eax+0x6e69eec2],0x11
  412bd5:	add    BYTE PTR [ebx-0x1e],ch
  412bd8:	pop    edi
  412bd9:	jle    0x412c0e
  412bdb:	ss (bad) 
  412bdd:	sti    
  412bde:	fwait
  412bdf:	in     al,dx
  412be0:	aad    0x1a
  412be2:	(bad)  
  412be3:	push   ebx
  412be4:	fdiv   DWORD PTR [ecx]
  412be6:	inc    esp
  412be7:	mov    al,ds:0xf2fc4e02
  412bec:	add    al,BYTE PTR [ebp-0x2b]
  412bef:	cmc    
  412bf0:	sahf   
  412bf1:	add    eax,0x529e608
  412bf6:	jmp    0x412c11
  412bf8:	lea    edi,[esi]
  412bfa:	push   esi
  412bfb:	call   DWORD PTR [esi]
  412bfd:	mov    BYTE PTR ds:0x3831933d,ah
  412c03:	int3   
  412c04:	add    BYTE PTR [ecx+0x67],ch
  412c07:	dec    ecx
  412c08:	inc    ebx
  412c09:	xor    eax,0x7eb44fd0
  412c0e:	push   edi
  412c0f:	push   ebx
  412c10:	mov    ebx,ebp
  412c12:	sbb    al,dh
  412c14:	mov    edx,0xe92a35da
  412c19:	outs   dx,BYTE PTR ds:[esi]
  412c1a:	mov    eax,ds:0xae4a04af
  412c1f:	push   esi
  412c20:	sub    eax,ebp
  412c22:	(bad)  
  412c24:	aas    
  412c25:	lahf   
  412c26:	jmp    0x412bd6
  412c28:	fwait
  412c29:	popa   
  412c2a:	inc    esi
  412c2b:	pushf  
  412c2c:	or     al,0x8
  412c2f:	or     DWORD PTR [esi],ecx
  412c31:	das    
  412c32:	retf   0x68d7
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	ficomp DWORD PTR [eax]
  412c38:	jmp    0x412c7a
  412c3a:	sub    al,0xc6
  412c3c:	ins    DWORD PTR es:[edi],dx
  412c3d:	dec    ebx
  412c3e:	popa   
  412c3f:	pusha  
  412c40:	jp     0x412c7a
  412c42:	cwde   
  412c43:	sbb    BYTE PTR [esi],bh
  412c45:	xor    esp,DWORD PTR [edx-0x9]
  412c48:	mov    al,0x5e
  412c4a:	xchg   ebp,eax
  412c4b:	xor    ebp,ebx
  412c4d:	pop    ecx
  412c4e:	cli    
  412c4f:	imul   eax,DWORD PTR [ebx+edi*4+0x21],0xffffffd4
  412c54:	cmc    
  412c55:	mov    ah,0x41
  412c57:	mov    BYTE PTR [ebx],bh
  412c59:	les    eax,FWORD PTR [eax-0x45]
  412c5c:	test   DWORD PTR [eax],edi
  412c5e:	xchg   BYTE PTR [esi-0x3986b8f4],dl
  412c64:	(bad)
  412c69:	in     eax,0xbe
  412c6b:	inc    esp
  412c6c:	push   ecx
  412c6d:	das    
  412c6e:	or     al,0x40
  412c70:	push   ds
  412c71:	fisttp DWORD PTR [esi-0x37]
  412c74:	data16 sub dh,BYTE PTR [edx+edi*8+0x28]
  412c79:	adc    eax,0xa798b95a
  412c7e:	cmp    dl,BYTE PTR [edi+0x15]
  412c81:	ret    
  412c82:	inc    eax
  412c83:	out    dx,al
  412c84:	int3   
  412c85:	adc    al,0xf4
  412c87:	ins    DWORD PTR es:[edi],dx
  412c88:	je     0x412cbe
  412c8a:	jae    0x412d04
  412c8c:	sub    ch,bl
  412c8e:	xchg   esp,eax
  412c8f:	add    bh,BYTE PTR [edx]
  412c91:	sbb    al,0x78
  412c93:	out    dx,eax
  412c94:	in     al,dx
  412c95:	imul   edx,esp,0x29
  412c98:	lods   eax,DWORD PTR ds:[esi]
  412c99:	adc    edi,ecx
  412c9b:	push   esi
  412c9c:	jmp    0xefe7:0x5bbf3f2d
  412ca3:	pop    esp
  412ca4:	cld    
  412ca5:	jb     0x412cca
  412ca7:	mov    cl,0xc6
  412ca9:	(bad)  
  412caa:	mov    ebp,0x5f71d00f
  412caf:	cli    
  412cb0:	retf   0xab07
  412cb3:	aam    0x63
  412cb5:	retf   0xc94a
  412cb8:	repz fnstenv [ecx-0x1ec5fb76]
  412cbf:	mov    edx,DWORD PTR [ebp-0x285d2bb1]
  412cc5:	imul   esi,edx,0x61
  412cc8:	xchg   ebp,eax
  412cc9:	call   0x86fd:0xc70f37b4
  412cd0:	jmp    0xfa3421bd
  412cd5:	sahf   
  412cd6:	push   es
  412cd7:	sti    
  412cd8:	lea    eax,[ecx]
  412cda:	push   ecx
  412cdb:	stos   DWORD PTR es:[edi],eax
  412cdc:	les    ebx,FWORD PTR [eax+0x14]
  412cdf:	mov    ch,0xcb
  412ce1:	loope  0x412d2a
  412ce3:	mov    al,0x2d
  412ce5:	and    al,0xf4
  412ce7:	and    DWORD PTR [edx+esi*2],ebx
  412cea:	sti    
  412ceb:	out    dx,eax
  412cec:	mov    al,ds:0xc48371ea
  412cf1:	sub    eax,0x7c69fbf8
  412cf6:	ror    DWORD PTR [eax-0x1b],cl
  412cf9:	fldenv ds:0x6fa34748
  412cff:	adc    DWORD PTR ds:0x70d52eea,esi
  412d05:	bound  edi,QWORD PTR cs:[ebx-0x32f12ef6]
  412d0c:	jns    0x412d45
  412d0e:	fisub  WORD PTR [ecx*1-0x3aea7955]
  412d15:	mov    esp,0xb8d6f3de
  412d1a:	in     al,0x87
  412d1c:	sub    al,0x1c
  412d1e:	add    BYTE PTR [eax-0x1dbe763d],bl
  412d24:	out    dx,al
  412d25:	clc    
  412d26:	test   eax,0x416e8d98
  412d2b:	sbb    edi,edx
  412d2d:	lods   al,BYTE PTR ds:[esi]
  412d2e:	jo     0x412cef
  412d30:	fdivr  st,st(3)
  412d32:	jno    0x412cca
  412d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d35:	mov    BYTE PTR [eax-0x37],dl
  412d38:	out    dx,eax
  412d39:	out    dx,eax
  412d3a:	jns    0x412d00
  412d3c:	fs clc 
  412d3e:	or     al,0x25
  412d40:	jo     0x412d3e
  412d42:	jbe    0x412db0
  412d44:	or     al,0x14
  412d46:	mov    ebx,0x72f30286
  412d4b:	aam    0x67
  412d4d:	test   eax,0xed6e4aae
  412d52:	mov    dl,0x7e
  412d54:	inc    edx
  412d55:	mov    dl,0x75
  412d57:	outs   dx,BYTE PTR ds:[esi]
  412d58:	popa   
  412d59:	cmp    BYTE PTR [esi],0x56
  412d5c:	in     al,0x78
  412d5e:	sub    DWORD PTR [esi+0x240febd6],0xa50d3559
  412d68:	push   esp
  412d69:	push   eax
  412d6a:	test   eax,0x260bbd19
  412d6f:	pop    edi
  412d70:	jg     0x412dd6
  412d72:	or     ch,BYTE PTR ds:0x8e237b7e
  412d78:	add    al,0xce
  412d7a:	xchg   BYTE PTR [ebx-0x4578d7a0],bl
  412d80:	xchg   esi,eax
  412d81:	sub    DWORD PTR [edx+0x28],edi
  412d84:	int3   
  412d85:	leave  
  412d86:	mov    WORD PTR [eax-0x9b5f267],cs
  412d8c:	int3   
  412d8d:	stos   BYTE PTR es:[edi],al
  412d8e:	loopne 0x412e05
  412d90:	mov    ds:0xc05b7e74,al
  412d95:	cli    
  412d96:	xor    BYTE PTR [ebx+0x4c],dl
  412d99:	adc    dh,BYTE PTR [esi-0x24081043]
  412d9f:	xor    BYTE PTR ds:0x2160344,ah
  412da5:	xchg   BYTE PTR [eax+0x529e08ec],dl
  412dab:	sub    BYTE PTR [ecx+0x28466770],dl
  412db1:	in     eax,0x5f
  412db3:	retf   0xdae4
  412db6:	ins    DWORD PTR es:[edi],dx
  412db7:	adc    eax,0x77762983
  412dbc:	imul   esi,DWORD PTR [esi-0x4690f1d5],0xfffffff5
  412dc3:	lds    esi,FWORD PTR [ebp-0x5e81e431]
  412dc9:	ds dec esi
  412dcb:	shr    DWORD PTR [edx-0x4a1aa2d3],cl
  412dd1:	rcl    DWORD PTR [edx+0x4f],0xae
  412dd5:	hlt    
  412dd6:	inc    edi
  412dd7:	shl    esp,0xe5
  412dda:	imul   esi,DWORD PTR [ebx-0x2b649b9a],0xd6fb9d17
  412de4:	mov    ch,0xd8
  412de7:	fistp  DWORD PTR [ebp-0x7b]
  412dea:	mov    dl,0x69
  412dec:	out    dx,eax
  412ded:	dec    edi
  412dee:	scas   al,BYTE PTR es:[edi]
  412def:	push   esp
  412df0:	test   BYTE PTR [ebx],0x21
  412df3:	push   ss
  412df4:	pop    es
  412df5:	fadd   QWORD PTR [ebp+eax*8+0x19]
  412df9:	test   ah,0xe7
  412dfc:	jb     0x412e53
  412dfe:	out    0x95,al
  412e00:	jnp    0x412dac
  412e02:	jbe    0x412e3f
  412e04:	xchg   esi,eax
  412e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e06:	xchg   ebp,eax
  412e07:	hlt    
  412e08:	mov    eax,0x8a1c1691
  412e0d:	stos   BYTE PTR es:[edi],al
  412e0e:	mov    dl,0xaa
  412e10:	jecxz  0x412dba
  412e12:	add    DWORD PTR [esi],edx
  412e14:	mov    dl,0xa2
  412e16:	popa   
  412e17:	int    0x2f
  412e19:	retf   
  412e1a:	(bad)  
  412e1b:	lea    esi,[ebx+esi*8+0x2c2794ce]
  412e22:	cmp    al,0x42
  412e24:	cwde   
  412e25:	jo     0x412dd6
  412e27:	fisub  DWORD PTR [edi]
  412e29:	cmp    DWORD PTR [esi],ecx
  412e2b:	shl    DWORD PTR [edi-0x7202f2f1],1
  412e31:	popf   
  412e32:	pop    ss
  412e33:	jmp    0x412e56
  412e35:	ror    DWORD PTR [ecx+0x49],0xb5
  412e39:	mov    ebp,0x36818411
  412e3e:	jno    0x412dd2
  412e40:	xchg   edi,eax
  412e41:	das    
  412e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e43:	sahf   
  412e44:	xchg   ecx,eax
  412e45:	mov    al,0x99
  412e47:	dec    eax
  412e48:	mov    esi,esi
  412e4a:	shl    DWORD PTR [ebx-0x66bc8c3e],1
  412e50:	adc    ebp,esp
  412e52:	cmp    DWORD PTR [ebx-0x57],edi
  412e55:	mov    bl,0xe6
  412e57:	pop    ds
  412e58:	fist   WORD PTR [ebp+0x56]
  412e5b:	adc    ax,0x5c2c
  412e5f:	inc    ecx
  412e60:	push   0x1c
  412e62:	xor    eax,0xd7cd8af9
  412e67:	push   edi
  412e68:	shl    DWORD PTR ds:0x51a5040a,0x9d
  412e6f:	dec    edi
  412e70:	aas    
  412e71:	lods   al,BYTE PTR ds:[esi]
  412e72:	fisub  WORD PTR [ecx+0x1ce40f28]
  412e78:	dec    edi
  412e79:	inc    ebx
  412e7a:	aam    0x2f
  412e7c:	cld    
  412e7d:	mov    ecx,0x63339687
  412e82:	and    ebp,eax
  412e84:	lahf   
  412e85:	pop    ebp
  412e86:	inc    ebx
  412e87:	fmulp  st(1),st
  412e89:	ror    DWORD PTR [esi],0x99
  412e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e8d:	inc    ecx
  412e8e:	push   0x127c1bc3
  412e93:	inc    ecx
  412e94:	xchg   ecx,eax
  412e95:	pop    edx
  412e96:	(bad)  
  412e98:	jecxz  0x412e3c
  412e9a:	imul   esp,edi,0x2a15fb4
  412ea0:	jnp    0x412e77
  412ea2:	es push ebx
  412ea4:	repz push es
  412ea6:	xor    eax,0x871f1392
  412eab:	loopne 0x412ed8
  412ead:	test   edx,edi
  412eaf:	xchg   edx,eax
  412eb0:	into   
  412eb1:	into   
  412eb2:	pop    ebp
  412eb3:	jne    0x412e39
  412eb5:	pop    edi
  412eb6:	jecxz  0x412e91
  412eb8:	inc    esi
  412eb9:	pop    eax
  412eba:	addr16 add eax,0xb7033e5
  412ec0:	mov    eax,ds:0x6a3d7c52
  412ec5:	test   DWORD PTR [eax+0x13],edi
  412ec8:	mov    al,ds:0x78239386
  412ecd:	iret   
  412ece:	push   cs
  412ecf:	enter  0x860a,0x25
  412ed3:	mov    al,dl
  412ed5:	pushf  
  412ed6:	(bad)  [eax-0x3b278c87]
  412edc:	sbb    BYTE PTR [ebx-0x70],dh
  412edf:	jae    0x412efc
  412ee1:	and    ecx,DWORD PTR [eax+0x2d]
  412ee4:	sbb    al,BYTE PTR [edi-0x772e67a5]
  412eea:	repz mov WORD PTR [edi-0x4a],es
  412eee:	mov    dl,0xe4
  412ef0:	cmp    al,0xf2
  412ef2:	xchg   edi,eax
  412ef3:	add    al,0x35
  412ef5:	retf   0xe129
  412ef8:	jg     0x412ebe
  412efa:	cwde   
  412efb:	dec    ebp
  412efc:	test   DWORD PTR [ebx-0x6f],ecx
  412eff:	mov    ebp,0x74394c02
  412f04:	scas   al,BYTE PTR es:[edi]
  412f05:	lods   eax,DWORD PTR ds:[esi]
  412f06:	add    dh,BYTE PTR [ebx+0x6c368b21]
  412f0c:	add    cl,BYTE PTR [ebx]
  412f0e:	dec    ebp
  412f0f:	bnd je 0x412f33
  412f12:	push   cs
  412f13:	push   0xa
  412f15:	into   
  412f16:	pop    eax
  412f17:	add    ch,0xa0
  412f1a:	sbb    DWORD PTR [edx+0x467f8ccb],esi
  412f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f21:	fstp   DWORD PTR [esi+0x5c]
  412f24:	pop    edi
  412f25:	popf   
  412f26:	outs   dx,BYTE PTR ds:[esi]
  412f27:	outs   dx,DWORD PTR ds:[esi]
  412f28:	pop    ebx
  412f29:	cdq    
  412f2a:	shl    bl,0x20
  412f2d:	shl    DWORD PTR [ecx-0x47dd6255],1
  412f33:	loopne 0x412f13
  412f35:	arpl   WORD PTR [ebp+0x3c7b73b0],bx
  412f3b:	push   cs
  412f3c:	jmp    0x412f40
  412f3e:	das    
  412f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f40:	push   ds
  412f41:	rcr    DWORD PTR [edx+ebx*1+0x57],1
  412f45:	mov    ds,WORD PTR [ebx]
  412f47:	pop    es
  412f48:	(bad)  [edx+esi*2+0xf]
  412f4c:	mov    cl,0x9f
  412f4e:	xor    bh,BYTE PTR [eax-0x64]
  412f51:	cdq    
  412f52:	mov    bh,0x70
  412f54:	aas    
  412f55:	lods   eax,DWORD PTR ds:[esi]
  412f56:	repnz in eax,0xf4
  412f59:	loope  0x412f69
  412f5b:	rcl    BYTE PTR [eax],0xc7
  412f5e:	pop    ds
  412f5f:	push   ebx
  412f60:	dec    ecx
  412f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f62:	xor    edi,DWORD PTR [ebx+0x35]
  412f65:	int3   
  412f66:	or     al,dl
  412f68:	stc    
  412f69:	push   0x2ad971c3
  412f6e:	repnz (bad) 
  412f70:	fldcw  WORD PTR [ecx+ecx*2+0x1af130e6]
  412f77:	mov    ebp,0xde61d1e6
  412f7c:	push   0xa8bfaf30
  412f81:	mov    eax,0x906d8071
  412f86:	(bad)  [eiz*8-0x7d3bdb91]
  412f8d:	jne    0x412f30
  412f8f:	push   0xffffff9e
  412f91:	pop    ebp
  412f92:	out    0x38,eax
  412f94:	fiadd  WORD PTR ds:0x4c1a9bc2
  412f9a:	cmp    BYTE PTR [edi-0x74beb4f7],ch
  412fa0:	sbb    ah,dl
  412fa2:	dec    edi
  412fa3:	into   
  412fa4:	ins    DWORD PTR es:[edi],dx
  412fa5:	adc    DWORD PTR [edx+0x1c],esp
  412fa8:	fcom   st(6)
  412faa:	sub    eax,eax
  412fac:	mov    dl,0xb8
  412fae:	cmp    esp,DWORD PTR [ebx+0x60]
  412fb1:	jnp    0x412fd9
  412fb3:	(bad)  
  412fb4:	or     al,0x3b
  412fb6:	(bad)  
  412fb7:	outs   dx,DWORD PTR ds:[esi]
  412fb8:	dec    esi
  412fb9:	test   bh,dh
  412fbb:	out    0x1,al
  412fbd:	dec    ebx
  412fbe:	inc    esp
  412fbf:	mov    eax,ds:0xbe32d01f
  412fc4:	jb     0x412f92
  412fc6:	xor    al,BYTE PTR [edi-0x242969a8]
  412fcc:	mov    dh,0xc1
  412fce:	xor    al,0x6e
  412fd0:	sub    al,0x8f
  412fd2:	inc    edi
  412fd3:	cs xchg esp,eax
  412fd5:	push   edx
  412fd6:	push   edi
  412fd7:	cmp    al,0x62
  412fd9:	pop    es
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	out    dx,al
  412fdc:	push   es
  412fdd:	retf   0xfe17
  412fe0:	mov    eax,ds:0x9a3f77ef
  412fe5:	and    esp,ebx
  412fe7:	test   BYTE PTR [ecx],dl
  412fe9:	lahf   
  412fea:	(bad)
  412fee:	push   ebp
  412fef:	ins    BYTE PTR es:[edi],dx
  412ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff1:	ret    0xb29e
  412ff4:	in     eax,dx
  412ff5:	and    ch,0x56
  412ff8:	bound  esp,QWORD PTR [esp+eiz*8+0x5f]
  412ffc:	in     eax,dx
  412ffd:	cmp    ah,bh
  412fff:	jg     0x413048
  413001:	mov    eax,ds:0x2fd27b8d
  413006:	aas    
  413007:	push   ebx
  413008:	mov    edi,ecx
  41300a:	js     0x413015
  41300c:	cdq    
  41300d:	cmp    eax,0x7f736e0
  413012:	clc    
  413013:	adc    ebx,DWORD PTR [edi+0x43e55d28]
  413019:	ins    DWORD PTR es:[edi],dx
  41301a:	cld    
  41301b:	fiadd  DWORD PTR [ecx]
  41301d:	add    ecx,DWORD PTR [edi+0x63]
  413020:	push   eax
  413021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413022:	adc    DWORD PTR [eax],ebp
  413024:	or     BYTE PTR [edi+0x2d],ch
  413027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413028:	dec    ebp
  413029:	mov    al,0x94
  41302b:	sub    dl,BYTE PTR [ecx-0x6a]
  41302e:	or     DWORD PTR [esi+0x3472beb0],ebx
  413034:	or     ecx,DWORD PTR [ebp+0x268089e1]
  41303a:	jae    0x41304d
  41303c:	adc    ch,BYTE PTR [esp+edi*8+0x384152db]
  413043:	retf   
  413044:	or     dl,cl
  413046:	mov    DWORD PTR [ebx],ecx
  413048:	neg    DWORD PTR [ebx]
  41304a:	push   ebp
  41304b:	mov    ah,0xb7
  41304d:	mov    dh,0x3a
  41304f:	icebp  
  413050:	push   esi
  413051:	cli    
  413052:	loopne 0x413007
  413054:	add    esp,esp
  413056:	jg     0x41307c
  413058:	iret   
  413059:	mov    cl,0xf
  41305b:	xor    DWORD PTR ds:0x1b0ec13e,ebp
  413061:	aaa    
  413062:	in     eax,0xac
  413064:	jle    0x413003
  413066:	jmp    0x4130e5
  413068:	nop
  413069:	xchg   esi,eax
  41306a:	jl     0x4130e4
  41306c:	ret    0x28be
  41306f:	out    dx,al
  413070:	stos   BYTE PTR es:[edi],al
  413071:	fmulp  st(4),st
  413073:	(bad)  
  413074:	ror    DWORD PTR [eax-0x56],1
  413077:	sbb    BYTE PTR [esi+edi*1-0x29],bl
  41307b:	stos   DWORD PTR es:[edi],eax
  41307c:	push   edi
  41307d:	jbe    0x413086
  41307f:	ficomp DWORD PTR [edi]
  413081:	dec    edi
  413082:	out    0x70,al
  413084:	fadd   DWORD PTR [ebx]
  413086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413087:	sub    eax,0x8ff380fb
  41308c:	pop    ss
  41308d:	shl    DWORD PTR [edi-0x38],1
  413090:	fild   WORD PTR [edx]
  413092:	fistp  DWORD PTR [ecx+ebp*4+0xb]
  413096:	or     eax,0xe8e3407f
  41309b:	mov    ds:0x332d256c,eax
  4130a0:	out    0x4a,al
  4130a2:	shl    DWORD PTR [edi-0x1ef082ce],1
  4130a8:	mov    esp,0x834ba990
  4130ad:	fidiv  DWORD PTR [eax-0x51]
  4130b0:	mov    al,0x14
  4130b2:	arpl   WORD PTR [esi],sp
  4130b4:	enter  0x3eff,0x79
  4130b8:	(bad)  
  4130b9:	push   ebx
  4130ba:	inc    DWORD PTR ds:0x5216e6bf
  4130c1:	addr16 push 0x54
  4130c4:	in     eax,dx
  4130c5:	cmc    
  4130c6:	or     eax,0x3c477432
  4130cb:	push   cs
  4130cc:	sub    edx,DWORD PTR gs:[ecx-0x47bd495e]
  4130d3:	sub    BYTE PTR [ecx+0x1b],cl
  4130d6:	inc    edx
  4130d7:	and    al,0x6a
  4130d9:	int3   
  4130da:	or     al,0xf9
  4130dc:	mov    ebp,0x87c3f3d2
  4130e1:	aam    0xe4
  4130e3:	std    
  4130e4:	cmp    BYTE PTR [edi+0x37d2d54a],cl
  4130ea:	inc    ebp
  4130eb:	retf   
  4130ec:	fwait
  4130ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ee:	fstp   TBYTE PTR [edi+0x6ccc88a9]
  4130f4:	call   0xc6bba16
  4130f9:	mov    dl,0x8b
  4130fb:	push   0x66fe00e1
  413100:	dec    esi
  413101:	inc    ebx
  413102:	jge    0x413142
  413104:	cmp    ecx,eax
  413106:	idiv   eax
  413108:	xlat   BYTE PTR ds:[ebx]
  413109:	inc    ebx
  41310a:	inc    ecx
  41310b:	clc    
  41310c:	add    DWORD PTR [ebx-0x71a79e1e],ebp
  413112:	or     eax,0xa8963836
  413117:	jb     0x4130ff
  413119:	les    edx,FWORD PTR [ecx]
  41311b:	repnz mul DWORD PTR es:[ebx]
  41311f:	mov    BYTE PTR [ecx],al
  413121:	push   cs
  413122:	outs   dx,BYTE PTR ds:[esi]
  413123:	sbb    ebp,DWORD PTR [edx]
  413125:	mov    ds:0x7cb1edde,eax
  41312a:	mov    BYTE PTR [eax*1-0x4c71d6c2],cl
  413131:	jb     0x413171
  413133:	dec    esi
  413134:	xor    al,0x6a
  413136:	sar    BYTE PTR [ebp+0x54],0x49
  41313a:	push   ebx
  41313b:	pusha  
  41313c:	sbb    DWORD PTR [eax],ebp
  41313e:	cmp    BYTE PTR [eax-0x4d],dl
  413141:	push   es
  413142:	call   0x48bf:0xf1940273
  413149:	in     al,0x4e
  41314b:	mov    al,ds:0x706e0240
  413150:	sub    al,0xd8
  413152:	dec    ebp
  413153:	call   0x3278:0x6a36278f
  41315a:	add    bl,BYTE PTR [eax-0x2f4b2dd7]
  413160:	adc    al,0x6d
  413162:	xor    al,0x3d
  413164:	dec    esi
  413165:	cmp    al,0x2b
  413167:	push   edi
  413168:	mov    es,WORD PTR [ebp+0x61bcd3a3]
  41316e:	or     ch,BYTE PTR [eax]
  413170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413171:	rol    esi,cl
  413173:	pop    ss
  413174:	shl    DWORD PTR [eax+0x10],0x9a
  413178:	stos   DWORD PTR es:[edi],eax
  413179:	shr    DWORD PTR [esi+0x603eea66],cl
  41317f:	sub    dl,cl
  413181:	ror    bh,cl
  413183:	pop    eax
  413184:	retf   
  413185:	les    eax,FWORD PTR [ebx+ebp*4-0x6e]
  413189:	pop    edi
  41318a:	push   ebx
  41318b:	adc    al,0x3
  41318d:	jmp    0xc805:0x118a545d
  413194:	test   BYTE PTR [ebx+0x2615507d],al
  41319a:	mov    eax,ds:0x566d268
  41319f:	cwde   
  4131a0:	and    esp,ebp
  4131a2:	push   eax
  4131a3:	(bad)
  4131a6:	test   al,0x51
  4131a9:	retf   0x6a99
  4131ac:	(bad)  
  4131ad:	mov    edx,0xc4b51000
  4131b2:	repnz add esp,DWORD PTR [ebx]
  4131b5:	int3   
  4131b6:	add    dh,BYTE PTR [edi+0x3240ef08]
  4131bc:	push   ebp
  4131bd:	jp     0x41322a
  4131bf:	jg     0x413207
  4131c1:	popa   
  4131c2:	iret   
  4131c3:	(bad)  
  4131c4:	lods   eax,DWORD PTR ds:[esi]
  4131c5:	adc    DWORD PTR [ebx+0x74],ecx
  4131c8:	and    DWORD PTR [esi+0x32c6e5a0],ebx
  4131ce:	inc    ebx
  4131cf:	imul   ebp,DWORD PTR [ebx],0xbf23351d
  4131d5:	ja     0x4131fc
  4131d7:	jae    0x4131b1
  4131d9:	cld    
  4131da:	xor    al,0x1f
  4131dc:	push   0xe3e3fa41
  4131e1:	push   esp
  4131e2:	xor    eax,0x395bff8b
  4131e7:	pop    ebx
  4131e8:	xchg   edi,eax
  4131e9:	jmp    0xcf926085
  4131ee:	pushf  
  4131ef:	xor    eax,DWORD PTR [esi-0x7e258235]
  4131f5:	xor    dh,0x56
  4131f8:	repnz dec esi
  4131fa:	adc    eax,0x41602798
  4131ff:	push   0x9ccd380b
  413204:	bound  edi,QWORD PTR [esi+0x397dc040]
  41320a:	sahf   
  41320b:	mov    ecx,0xad3f1455
  413210:	ja     0x4131fc
  413212:	adc    al,0x89
  413214:	int3   
  413215:	xchg   edx,eax
  413216:	pushf  
  413217:	test   BYTE PTR [ecx],ch
  413219:	bound  esp,QWORD PTR [esi]
  41321b:	add    eax,DWORD PTR [ecx-0x6171025e]
  413221:	rcl    DWORD PTR [edx+0x24699d96],0xe7
  413228:	dec    esi
  413229:	mov    DWORD PTR [esp+eiz*8+0x2556869e],0x4902fda1
  413234:	xchg   ebp,eax
  413235:	xor    BYTE PTR [edx],bh
  413237:	leave  
  413238:	mov    eax,ds:0x37a77b0b
  41323d:	jae    0x41326b
  41323f:	cmp    bh,bh
  413241:	push   ds
  413242:	and    dl,BYTE PTR [esi-0x56a31ce6]
  413248:	jecxz  0x4132c0
  41324a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41324b:	dec    ecx
  41324c:	xor    eax,0x537b8c26
  413251:	add    ch,BYTE PTR [ebx]
  413253:	adc    al,0x74
  413255:	sbb    eax,0xa81d4a69
  41325a:	jecxz  0x4132ce
  41325c:	add    eax,0xe5b42d08
  413261:	repnz out 0x7f,al
  413264:	push   ds
  413265:	adc    BYTE PTR [edx-0x243e73f0],ch
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	or     esi,esp
  41326e:	or     eax,0xaadad75e
  413273:	or     ah,ch
  413275:	aam    0x64
  413277:	retf   0x6545
  41327a:	push   es
  41327b:	and    esp,DWORD PTR [ebx]
  41327d:	shr    BYTE PTR [esi+0x1aba7890],cl
  413283:	sub    dl,dh
  413285:	les    ebx,FWORD PTR [ebx]
  413287:	in     eax,dx
  413288:	popa   
  413289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41328a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41328b:	jp     0x4132b9
  41328d:	xchg   ebx,eax
  41328e:	xor    ecx,DWORD PTR [ebx+0x52]
  413291:	dec    eax
  413292:	stos   BYTE PTR es:[edi],al
  413293:	cld    
  413294:	xor    eax,DWORD PTR [eax-0x36a25d04]
  41329a:	retf   
  41329b:	cmp    eax,0xe9b843b8
  4132a0:	pop    esi
  4132a1:	dec    ebx
  4132a2:	ret    
  4132a3:	repz pop ebp
  4132a5:	xor    BYTE PTR [edi+0x17],al
  4132a8:	add    al,0xe6
  4132aa:	mov    bh,0x1e
  4132ac:	mov    ebx,0x1c39c6a1
  4132b1:	inc    edx
  4132b2:	fs in  al,0xb2
  4132b5:	in     al,0xdb
  4132b7:	int    0xb8
  4132b9:	or     cl,BYTE PTR [ebp+0x6a]
  4132bc:	add    esp,DWORD PTR [ecx]
  4132be:	mov    al,ah
  4132c0:	aad    0xef
  4132c2:	nop
  4132c3:	add    esp,ebx
  4132c5:	pop    edx
  4132c6:	mov    ah,0x6e
  4132c8:	call   0x29654dd2
  4132cd:	sti    
  4132ce:	call   0x15b4dfbc
  4132d3:	dec    edi
  4132d4:	repnz bound ebx,QWORD PTR [edi+edx*2+0x21]
  4132d9:	xor    DWORD PTR [ebx-0x3c],esi
  4132dc:	sbb    ebp,ecx
  4132de:	xor    dh,BYTE PTR [edi+ecx*4]
  4132e1:	sub    dl,bh
  4132e3:	stc    
  4132e4:	sub    eax,0x8cd09d0a
  4132e9:	shl    BYTE PTR [esi-0x9],cl
  4132ec:	xor    al,0x5b
  4132ee:	shl    BYTE PTR [edx+eax*2],0x8a
  4132f2:	popa   
  4132f3:	mov    DWORD PTR [ecx-0x1d00914f],ebx
  4132f9:	(bad)  
  4132fa:	mov    esi,0x6d3048ef
  4132ff:	in     al,0x2e
  413301:	cmp    al,0x58
  413303:	dec    edi
  413304:	mov    dl,0x6a
  413306:	loope  0x41335f
  413308:	ror    DWORD PTR [ebp-0x5550c857],0xc5
  41330f:	jne    0x4132be
  413311:	jl     0x4132b5
  413313:	mov    BYTE PTR [ebx+0x6378cb74],ah
  413319:	jp     0x413343
  41331b:	dec    ebx
  41331c:	mov    ds:0x21dea2d9,al
  413321:	add    dl,dh
  413323:	ja     0x41339a
  413325:	pop    esi
  413326:	call   0xd3be6f25
  41332b:	out    0xa5,al
  41332d:	xchg   edi,ebp
  41332f:	xor    BYTE PTR [ecx+ebp*8],dl
  413332:	fs std 
  413334:	and    al,0xe3
  413336:	pusha  
  413337:	(bad)  
  413338:	fucomp st(4)
  41333a:	cmp    eax,0x3d01e776
  41333f:	out    0x7,al
  413341:	ficom  WORD PTR [edi+0x3a]
  413344:	jne    0x4132db
  413346:	dec    esp
  413347:	sahf   
  413348:	lea    ebp,[ebx]
  41334a:	fwait
  41334b:	jmp    0xd5a92bc0
  413350:	mov    edx,0xc37a3f18
  413355:	enter  0x38eb,0xca
  413359:	lods   al,BYTE PTR ds:[esi]
  41335a:	pop    ss
  41335b:	call   0xfc540655
  413360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413361:	jecxz  0x4132f6
  413363:	jb     0x413349
  413365:	inc    esp
  413366:	mov    dh,0x71
  413368:	or     eax,edi
  41336a:	pop    edi
  41336b:	and    ebx,esi
  41336d:	add    al,0x55
  41336f:	xor    esp,DWORD PTR [eax-0x62]
  413372:	das    
  413373:	ins    DWORD PTR es:[edi],dx
  413374:	or     al,0x1e
  413376:	nop
  413377:	push   eax
  413378:	push   0xffffffaf
  41337a:	jmp    0x34ac3c06
  41337f:	(bad)  
  413380:	adc    al,0x55
  413382:	stos   DWORD PTR es:[edi],eax
  413383:	dec    esi
  413384:	leave  
  413385:	(bad)  
  413386:	xchg   ecx,eax
  413387:	and    ecx,esp
  413389:	je     0x413397
  41338b:	jmp    0x413371
  41338d:	aam    0x3b
  41338f:	arpl   WORD PTR [ebp-0x42],bp
  413392:	mov    ds:0x2e98bd7e,eax
  413397:	sar    DWORD PTR [ebp+0x65],1
  41339a:	adc    eax,0x9e59480c
  41339f:	dec    esp
  4133a0:	arpl   sp,ax
  4133a2:	loopne 0x41332b
  4133a4:	sbb    DWORD PTR [edx+0x31458dd5],eax
  4133aa:	sbb    eax,0x3164ec57
  4133af:	sysret 
  4133b1:	push   0x227fe72b
  4133b6:	enter  0x9e,0xd6
  4133ba:	push   cs
  4133bb:	xchg   edx,eax
  4133bc:	xchg   edi,eax
  4133bd:	stos   DWORD PTR es:[edi],eax
  4133be:	ret    
  4133bf:	inc    eax
  4133c0:	fisubr WORD PTR [ebx+0x29]
  4133c3:	fadd   DWORD PTR [ebx-0x14b17400]
  4133c9:	jno    0x41339e
  4133cb:	(bad)  
  4133cc:	cwde   
  4133cd:	sahf   
  4133ce:	inc    eax
  4133cf:	xchg   esi,eax
  4133d0:	xchg   edx,eax
  4133d1:	cmc    
  4133d2:	push   0x6c
  4133d4:	test   BYTE PTR [edx-0x4bd6b6a7],al
  4133da:	and    eax,0x827b370c
  4133df:	jae    0x413451
  4133e1:	mov    ch,bh
  4133e3:	enter  0xccd9,0x44
  4133e7:	adc    edx,ebp
  4133e9:	rcr    BYTE PTR [edx],cl
  4133eb:	jbe    0x4133cf
  4133ed:	push   0xf
  4133ef:	shr    DWORD PTR [eax+0x1f],0xd
  4133f3:	ret    
  4133f4:	bound  edx,QWORD PTR [ecx+edi*1+0x1a9298fa]
  4133fb:	call   0x73a7:0x1f021cc1
  413402:	dec    esp
  413403:	jmp    0x3b1d:0xb3dfca05
  41340a:	lea    ebp,ds:0xdbe77fbe
  413410:	adc    BYTE PTR [edx],ch
  413412:	push   es
  413413:	sbb    eax,0x173104fb
  413418:	stos   BYTE PTR es:[edi],al
  413419:	xor    esp,DWORD PTR [esi-0x4c]
  41341c:	(bad)  
  41341e:	ss dec edi
  413420:	xor    esi,0x8e389ef6
  413426:	push   ebx
  413427:	xchg   edi,eax
  413428:	mov    BYTE PTR [esi],al
  41342a:	cs ds mov esi,0x98b0be1d
  413431:	jmp    0x4523:0x15606d82
  413438:	jb     0x413420
  41343a:	ret    0xa31f
  41343d:	xchg   DWORD PTR [ebx+0x1f1e4ae2],ecx
  413443:	mov    edi,0xfba2212b
  413448:	gs dec eax
  41344a:	aam    0xb9
  41344c:	mov    cl,0x75
  41344e:	mov    ebp,0xc1d12bf5
  413453:	mov    edi,0x155282af
  413458:	sahf   
  413459:	xchg   BYTE PTR [edi],dl
  41345b:	xor    eax,0x3e3dbce4
  413460:	push   0x6b
  413462:	leave  
  413463:	pop    ss
  413464:	out    0x68,al
  413466:	push   ebp
  413467:	stos   DWORD PTR es:[edi],eax
  413468:	jmp    0x4b7f:0x8a6772e4
  41346f:	fidiv  DWORD PTR [edi+0x41072609]
  413475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413476:	cmp    al,0xda
  413478:	mov    cl,0xae
  41347a:	sub    edx,0xffffffc7
  41347d:	imul   edx,DWORD PTR [esi-0x4cee0b7a],0xc96b4d1e
  413487:	in     al,0x90
  413489:	push   edx
  41348a:	xlat   BYTE PTR ds:[ebx]
  41348b:	dec    esp
  41348c:	iret   
  41348d:	in     eax,dx
  41348e:	cmp    ah,bh
  413490:	cmp    al,0xa3
  413492:	ins    DWORD PTR es:[edi],dx
  413493:	out    0x4b,eax
  413495:	mov    bh,0xe6
  413497:	adc    eax,0xcc5fa1b4
  41349c:	or     eax,0xcdb260bc
  4134a1:	(bad)  
  4134a2:	popf   
  4134a3:	aam    0xb8
  4134a5:	dec    ebp
  4134a6:	jnp    0x413487
  4134a8:	lods   al,BYTE PTR ds:[esi]
  4134a9:	mov    edx,0x40bba50e
  4134ae:	cdq    
  4134af:	push   eax
  4134b0:	jmp    0xeb19:0x7bf354bb
  4134b7:	jo     0x4134ca
  4134b9:	jge    0x4134ee
  4134bb:	sbb    BYTE PTR [edx-0x25],ah
  4134be:	mov    ch,0x6b
  4134c0:	adc    DWORD PTR [ebx-0x6e],0x34b0f2df
  4134c7:	push   edx
  4134c8:	in     eax,dx
  4134c9:	outs   dx,DWORD PTR ds:[esi]
  4134ca:	sbb    ebx,DWORD PTR [eax]
  4134cc:	push   ebp
  4134cd:	or     ecx,DWORD PTR [ebx-0x1663c36f]
  4134d3:	add    BYTE PTR [ecx],bl
  4134d5:	dec    BYTE PTR [eax+0x2d239f11]
  4134db:	ret    
  4134dc:	shl    DWORD PTR [esi-0x1c],cl
  4134df:	mov    bl,BYTE PTR [ecx+0x53]
  4134e2:	fbstp  TBYTE PTR [edi+edi*1+0x7b]
  4134e6:	jl     0x4134cb
  4134e8:	sbb    ecx,DWORD PTR [ebp+0x4a07ac93]
  4134ee:	in     eax,dx
  4134ef:	mov    ah,0xef
  4134f1:	add    DWORD PTR [edi],0xffffffe3
  4134f4:	out    dx,eax
  4134f5:	int3   
  4134f6:	add    eax,0x59cc170
  4134fb:	and    DWORD PTR [ebx+0x43],eax
  4134fe:	sbb    BYTE PTR [ecx+0x325cd0f0],0x6d
  413505:	pop    esp
  413506:	push   esi
  413507:	sub    edi,ecx
  413509:	arpl   sp,sp
  41350b:	in     al,0x3b
  41350d:	sub    al,0x6a
  41350f:	xchg   ecx,eax
  413510:	lods   eax,DWORD PTR ds:[esi]
  413511:	inc    ecx
  413512:	sub    DWORD PTR [ecx+0xf],esp
  413515:	xchg   ecx,eax
  413516:	loope  0x4134f7
  413518:	dec    edi
  413519:	fwait
  41351a:	and    al,0x37
  41351c:	ror    dl,cl
  41351e:	pusha  
  41351f:	jb     0x4134ec
  413521:	ins    DWORD PTR es:[edi],dx
  413522:	push   0x5d70243e
  413527:	ret    0x696
  41352a:	xchg   esp,eax
  41352b:	stos   DWORD PTR es:[edi],eax
  41352c:	leave  
  41352d:	dec    esi
  41352e:	mov    BYTE PTR ds:0xc760d494,dh
  413534:	sar    BYTE PTR [esi],1
  413536:	loope  0x4134db
  413538:	(bad)  
  41353a:	or     al,0x27
  41353c:	mov    bl,0x89
  41353e:	lods   al,BYTE PTR ds:[esi]
  41353f:	ins    BYTE PTR es:[edi],dx
  413540:	imul   BYTE PTR [ebp-0x1090021b]
  413546:	mov    edx,0xddd634e
  41354b:	gs cs xchg edx,eax
  41354e:	imul   esi,DWORD PTR [edi],0x31
  413551:	cmp    DWORD PTR [ecx+0x4a],esp
  413554:	mov    dl,0xb4
  413556:	mov    ebx,0x85af307c
  41355b:	push   ebx
  41355c:	(bad)  
  41355d:	pop    ds
  41355e:	dec    ebp
  41355f:	imul   eax,DWORD PTR [eax+0x26],0x62
  413563:	out    0xec,eax
  413565:	sbb    cl,BYTE PTR [ebp-0x1b]
  413568:	mov    DWORD PTR [esi-0x2e56ac3d],ebx
  41356e:	xor    DWORD PTR [edx+0x2794104],esp
  413574:	loop   0x41350c
  413576:	xchg   esp,eax
  413577:	push   ecx
  413578:	jmp    0x9bcacd81
  41357d:	cli    
  41357e:	mov    eax,0x22c32c68
  413583:	mov    eax,0x7d9bf341
  413588:	pop    ecx
  413589:	fwait
  41358a:	or     edx,DWORD PTR [eax+esi*4-0x2f]
  41358e:	push   ebp
  41358f:	mov    ds,esp
  413591:	mov    DWORD PTR [edi-0x2554f18a],0x1d76390d
  41359b:	sbb    BYTE PTR [eax+0x2f7d262f],ch
  4135a1:	jne    0x413535
  4135a3:	int    0x37
  4135a5:	mov    cl,0xe1
  4135a7:	mov    ds:0xa7888fea,eax
  4135ac:	arpl   bp,si
  4135ae:	pop    ebp
  4135af:	scas   eax,DWORD PTR es:[edi]
  4135b0:	fmul   DWORD PTR [edi+0x4]
  4135b3:	loope  0x413570
  4135b5:	pop    ecx
  4135b6:	xchg   ecx,eax
  4135b7:	fcmovnb st,st(7)
  4135b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ba:	in     al,0xaa
  4135bc:	push   es
  4135bd:	test   BYTE PTR [edi],dh
  4135bf:	pop    eax
  4135c0:	rcl    DWORD PTR ds:0x38eacc6b,1
  4135c6:	gs jne 0x413627
  4135c9:	pusha  
  4135ca:	fist   WORD PTR [ecx]
  4135cc:	fwait
  4135cd:	or     edx,esp
  4135cf:	mov    edi,0xc25fa9bb
  4135d4:	sub    eax,0xfc9ca09f
  4135d9:	push   cs
  4135da:	fst    DWORD PTR [ebx+esi*4-0xa1a6b6d]
  4135e1:	xor    ch,BYTE PTR ds:0x73a31ba1
  4135e7:	(bad)  
  4135e9:	in     al,0xbe
  4135eb:	mov    edi,edx
  4135ed:	inc    edi
  4135ee:	dec    ebx
  4135ef:	ins    DWORD PTR es:[edi],dx
  4135f0:	xor    eax,0xf0dd9135
  4135f5:	mov    bl,0x65
  4135f7:	inc    edi
  4135f8:	jbe    0x4135d8
  4135fa:	xchg   esi,eax
  4135fb:	and    al,0x47
  4135fd:	pop    ebp
  4135fe:	push   es
  4135ff:	or     ecx,esi
  413601:	adc    eax,0x15994b62
  413606:	in     al,0x3d
  413608:	sbb    ebx,DWORD PTR ds:0x612ea7c0
  41360e:	fnstenv [esi-0x2fae7f2]
  413614:	jns    0x41365e
  413616:	retf   
  413617:	push   ecx
  413618:	int3   
  413619:	popf   
  41361a:	push   edx
  41361b:	jb     0x4135d5
  41361d:	mov    edx,0x799b598
  413622:	push   ss
  413623:	fwait
  413624:	lock gs sub ebx,edx
  413628:	test   eax,0xc4aecb1
  41362d:	and    DWORD PTR ds:0xfa49b297,esp
  413633:	sub    eax,0x9d9b44ad
  413638:	ret    0xd51c
  41363b:	test   al,0xd5
  41363d:	pop    edx
  41363e:	inc    edx
  41363f:	push   eax
  413640:	cmc    
  413641:	pop    ecx
  413642:	repz pop eax
  413644:	sti    
  413645:	stos   DWORD PTR es:[edi],eax
  413646:	mov    eax,ds:0x30db986
  41364b:	aaa    
  41364c:	mov    al,0xfe
  41364e:	or     DWORD PTR [edx-0x6c],eax
  413651:	sub    esi,DWORD PTR [ebx]
  413653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413654:	pushf  
  413655:	out    dx,eax
  413656:	aad    0xea
  413658:	mov    WORD PTR [esi],ss
  41365a:	not    BYTE PTR [edi-0x444730cd]
  413660:	cmp    DWORD PTR [eax-0x5d594ef3],ebx
  413666:	cmp    cl,BYTE PTR [edx]
  413668:	sub    al,0xc7
  41366a:	jmp    0x413639
  41366c:	cmp    al,0x3c
  41366e:	push   0xffffff95
  413670:	fdivr  QWORD PTR [ebx+0x52]
  413673:	xchg   esi,eax
  413674:	lea    ecx,[ebx+0x17]
  413677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413678:	stos   BYTE PTR es:[edi],al
  413679:	mov    ecx,0x6e9f7e55
  41367e:	sub    eax,0x54a65881
  413683:	pop    eax
  413684:	mov    esi,0x792570d8
  413689:	out    dx,eax
  41368a:	mov    edi,0xe511dfd9
  41368f:	das    
  413690:	sbb    edi,DWORD PTR [edx-0x105c57ed]
  413696:	sub    BYTE PTR [ecx],bl
  413698:	aam    0xf2
  41369a:	pusha  
  41369b:	sbb    DWORD PTR [edi+0x72c80881],edi
  4136a1:	ja     0x4136fb
  4136a3:	xchg   ebp,eax
  4136a4:	mov    edx,0x8398ce47
  4136a9:	in     al,0x46
  4136ab:	fcom   DWORD PTR [ecx+esi*1]
  4136ae:	push   esp
  4136af:	dec    eax
  4136b0:	mov    ecx,0x82e8595a
  4136b5:	test   al,0xc7
  4136b7:	call   0xe39c369f
  4136bc:	sbb    eax,DWORD PTR [eax]
  4136be:	call   0x6cbfed1f
  4136c3:	pop    eax
  4136c4:	and    BYTE PTR [edi],dh
  4136c6:	push   0xf7780fcd
  4136cb:	outs   dx,DWORD PTR ds:[esi]
  4136cc:	jne    0x4136a1
  4136ce:	adc    bl,dl
  4136d0:	add    al,BYTE PTR [esp+eiz*8]
  4136d3:	nop
  4136d4:	xchg   edx,eax
  4136d5:	dec    eax
  4136d6:	or     DWORD PTR [ecx-0x34ecfb7],ecx
  4136dc:	xor    al,0xd3
  4136de:	sbb    edi,DWORD PTR [esi]
  4136e0:	push   ebx
  4136e1:	dec    ebx
  4136e2:	lahf   
  4136e3:	sbb    dl,BYTE PTR [eax]
  4136e5:	and    eax,0xfbc9d575
  4136ea:	mov    cl,0x26
  4136ec:	in     al,0x2c
  4136ee:	push   0xf7cce0ad
  4136f3:	add    BYTE PTR [ebp+0x47],ch
  4136f6:	sub    BYTE PTR [edi],ah
  4136f8:	sbb    ebx,DWORD PTR [edx+0x5ccdae14]
  4136fe:	or     BYTE PTR ds:0x1b951bd4,bh
  413704:	inc    ebx
  413705:	fimul  WORD PTR [ebp-0x3c6eda4d]
  41370b:	leave  
  41370c:	aas    
  41370d:	repnz cmp esi,esi
  413710:	sbb    al,bl
  413712:	jb     0x4136d9
  413714:	mov    esp,0x5980b60
  413719:	xchg   DWORD PTR [ebx],esi
  41371b:	shr    ebx,cl
  41371d:	(bad)  
  41371e:	dec    edi
  41371f:	dec    esi
  413720:	repz and esi,DWORD PTR ds:0x6f121783
  413727:	xchg   ebp,eax
  413728:	push   ds
  413729:	scas   al,BYTE PTR es:[edi]
  41372a:	fcom   st(6)
  41372c:	mov    edi,0x4e833d42
  413731:	and    al,0x9c
  413733:	test   BYTE PTR [ebx],al
  413735:	cs gs int3 
  413738:	test   BYTE PTR [esi+0x5b3833d3],0x2a
  41373f:	shl    BYTE PTR [edi+0x689230d5],cl
  413745:	mov    WORD PTR [esp+edi*4],?
  413748:	mov    ebx,0x591030fc
  41374d:	jne    0x4136da
  41374f:	outs   dx,DWORD PTR ds:[esi]
  413750:	jl     0x413783
  413752:	sbb    DWORD PTR [ebp+0x390ccd09],ebx
  413758:	xor    eax,0xa6fcb642
  41375d:	dec    eax
  41375e:	and    dl,BYTE PTR cs:[edi]
  413761:	jg     0x413726
  413763:	pop    eax
  413764:	fistp  WORD PTR [ebp+0x0]
  413767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413768:	inc    ebp
  413769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41376a:	push   esi
  41376b:	fidiv  WORD PTR [eax-0x21ee28df]
  413771:	leave  
  413772:	xchg   esi,eax
  413773:	sub    eax,0xd3138732
  413778:	inc    edx
  413779:	jg     0x4137e3
  41377b:	loopne 0x4137ac
  41377d:	xor    DWORD PTR [edi+ecx*8+0x347f366a],ebx
  413784:	shl    BYTE PTR [esi+edi*8-0x61d2ed77],1
  41378b:	test   DWORD PTR [edx-0x2244d564],esp
  413791:	xchg   esp,eax
  413792:	loop   0x4137df
  413794:	imul   ebp,DWORD PTR [edi-0x5f17913c],0xc0409dd4
  41379e:	and    edx,DWORD PTR [eax-0x28c12e12]
  4137a4:	imul   edx,DWORD PTR ds:0x3224e50e,0x534047b3
  4137ae:	inc    ebp
  4137af:	xchg   esi,eax
  4137b0:	test   eax,0x64b4ac7d
  4137b5:	popa   
  4137b6:	xor    BYTE PTR [edi-0x4b],0x1a
  4137ba:	(bad)  
  4137bb:	test   eax,0xa9bd04f9
  4137c0:	shr    DWORD PTR [ecx],0xaa
  4137c3:	mov    dl,0xe7
  4137c5:	sub    dl,bh
  4137c7:	loop   0x41378b
  4137c9:	pop    ecx
  4137ca:	mov    bh,dl
  4137cc:	ret    
  4137cd:	mov    esp,0xb2e141c4
  4137d2:	(bad)  
  4137d3:	into   
  4137d4:	adc    BYTE PTR [ebp-0x16],al
  4137d7:	push   ebp
  4137d8:	cwde   
  4137d9:	sub    ebx,DWORD PTR [edx]
  4137db:	and    eax,0x4b53b8ce
  4137e0:	sub    edi,edi
  4137e2:	enter  0xd0b4,0x91
  4137e6:	fcom   QWORD PTR [ecx]
  4137e8:	xchg   esi,eax
  4137e9:	cmp    BYTE PTR [edx+0x180c25dc],bl
  4137ef:	jae    0x413822
  4137f1:	rol    DWORD PTR [ecx+0x419fa35e],1
  4137f7:	push   edx
  4137f8:	loopne 0x41382b
  4137fa:	pusha  
  4137fb:	imul   eax,ebx,0xc35864c5
  413801:	mov    DWORD PTR [ebx],edx
  413803:	xor    dh,dh
  413805:	or     DWORD PTR [esi-0x5],edx
  413808:	jns    0x41383d
  41380a:	dec    ebx
  41380b:	ins    BYTE PTR es:[edi],dx
  41380c:	cs and al,0x61
  41380f:	call   0x6570:0xd962830c
  413816:	fidiv  DWORD PTR [esi*2-0x30baaf30]
  41381d:	or     ebx,DWORD PTR [ecx-0x5c]
  413820:	or     bh,BYTE PTR [ecx-0x6a]
  413823:	jae    0x4137d3
  413825:	push   0x13018a54
  41382a:	and    bl,BYTE PTR [edx]
  41382c:	popa   
  41382d:	xor    BYTE PTR [edi+esi*8],ah
  413830:	pop    eax
  413831:	imul   eax,ebx,0xfddcb8be
  413837:	sub    ah,dh
  413839:	jb     0x4137fc
  41383b:	fild   QWORD PTR [edi-0x7]
  41383e:	jno    0x4138b5
  413840:	mov    dh,0x2
  413842:	push   edx
  413843:	dec    ecx
  413844:	jp     0x4138a4
  413846:	mov    bl,0x7
  413848:	aad    0xfe
  41384a:	daa    
  41384b:	push   cs
  41384c:	clc    
  41384d:	repz mov ah,0xc0
  413850:	push   ebp
  413851:	sbb    eax,DWORD PTR [edi-0x2a4b1d55]
  413857:	inc    ebp
  413858:	imul   esp,DWORD PTR [edx+0x58],0xa34d2053
  41385f:	or     bl,BYTE PTR [edx]
  413861:	xor    al,0x43
  413863:	ffreep st(2)
  413865:	dec    eax
  413866:	mov    ds:0xc9d4fd0b,al
  41386b:	pop    edx
  41386c:	arpl   WORD PTR [edx],di
  41386e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41386f:	aas    
  413870:	xor    eax,0xc0844b23
  413875:	ds or  eax,0xcfe93ac6
  41387b:	outs   dx,BYTE PTR ds:[esi]
  41387c:	call   0x69be026b
  413881:	sti    
  413882:	xchg   edx,eax
  413883:	xchg   ebx,eax
  413884:	loopne 0x41388d
  413886:	les    esp,FWORD PTR [eax+0x97b7ca6]
  41388c:	(bad)  
  41388d:	ror    BYTE PTR [edi+0x42bc39f4],cl
  413893:	mov    BYTE PTR [ebx-0x40],ch
  413896:	mov    ss,WORD PTR [edi-0x58]
  413899:	sbb    eax,0xe2b11770
  41389e:	loop   0x413832
  4138a0:	pop    es
  4138a1:	mov    esi,0x312683a
  4138a6:	and    dl,bl
  4138a8:	fld    QWORD PTR [ecx-0x7]
  4138ab:	repz and bl,BYTE PTR [esi+0x111e68e8]
  4138b2:	sbb    ah,0x59
  4138b5:	std    
  4138b6:	sbb    dl,BYTE PTR [eax]
  4138b8:	mov    es,WORD PTR [ebx]
  4138ba:	xchg   ebp,eax
  4138bb:	fild   DWORD PTR [edx-0x26]
  4138be:	push   ebp
  4138bf:	in     al,dx
  4138c0:	dec    DWORD PTR [ecx-0x5a]
  4138c3:	mov    bh,0xcb
  4138c5:	xchg   edx,eax
  4138c6:	push   es
  4138c7:	shl    DWORD PTR [ebp+0x48b54c26],1
  4138cd:	and    edx,DWORD PTR [ebp+0x23b06423]
  4138d3:	xchg   esp,eax
  4138d4:	push   eax
  4138d5:	sub    al,0x54
  4138d7:	retf   0x2898
  4138da:	and    al,0xc
  4138dc:	jg     0x413918
  4138de:	push   esi
  4138df:	aad    0xf1
  4138e1:	add    eax,0x3f87384d
  4138e6:	int3   
  4138e7:	adc    BYTE PTR [ebp-0x7ec36e3a],bl
  4138ed:	jmp    0x8718:0x7bdafd47
  4138f4:	add    BYTE PTR [eax],cl
  4138f6:	cmp    al,BYTE PTR [ecx+0x14a24d0a]
  4138fc:	stos   DWORD PTR es:[edi],eax
  4138fd:	or     BYTE PTR [ecx+0x6d],ch
  413900:	dec    ebp
  413901:	jmp    0x2940700a
  413906:	ss loopne 0x41393e
  413909:	test   al,0x2a
  41390b:	sub    dh,BYTE PTR [ecx-0x4f]
  41390e:	cmp    BYTE PTR [esi-0x262e48c4],cl
  413914:	sbb    DWORD PTR [ebx],ebx
  413916:	inc    eax
  413917:	mov    ebx,0xaac8fa82
  41391c:	scas   eax,DWORD PTR es:[edi]
  41391d:	nop
  41391e:	jno    0x4138b9
  413920:	inc    ebp
  413921:	icebp  
  413922:	(bad)  
  413923:	stc    
  413924:	out    dx,al
  413925:	fldenv [edx-0x14]
  413928:	fst    DWORD PTR [edi]
  41392a:	jp     0x413959
  41392c:	add    eax,0x746bc134
  413931:	pop    eax
  413932:	dec    esp
  413933:	adc    ch,BYTE PTR [edx]
  413935:	mov    bh,0xeb
  413937:	les    esp,FWORD PTR [esi+0x3b]
  41393a:	cli    
  41393b:	adc    esi,eax
  41393d:	inc    esi
  41393e:	mov    ebx,esi
  413940:	cwde   
  413941:	jns    0x4138fe
  413943:	or     al,bl
  413945:	push   0xf6f921c8
  41394a:	cld    
  41394b:	iret   
  41394c:	mov    dh,0xa2
  41394e:	sub    esi,DWORD PTR [esi-0x13766b71]
  413954:	dec    eax
  413955:	out    dx,eax
  413956:	fild   QWORD PTR [ebp+0x72]
  413959:	sub    al,0xc2
  41395b:	sbb    dl,cl
  41395d:	xor    al,0x1a
  41395f:	jb     0x41399a
  413961:	mov    ch,BYTE PTR [edi-0x68]
  413964:	pop    ds
  413965:	jbe    0x413945
  413967:	push   ebx
  413968:	push   esp
  413969:	arpl   WORD PTR [ebx],cx
  41396b:	adc    eax,0xa22aed0f
  413970:	dec    esp
  413971:	mov    ?,WORD PTR [edi+edx*1+0x3f]
  413975:	lds    ebx,FWORD PTR [ebx+0x574c542d]
  41397b:	std    
  41397c:	push   cs
  41397d:	imul   ecx,edi,0xffffff9b
  413980:	cmc    
  413981:	mov    cl,0xaf
  413983:	js     0x413919
  413985:	inc    eax
  413986:	dec    esp
  413987:	sti    
  413988:	mov    edx,0x69588daf
  41398d:	js     0xf682e3e0
  413993:	jmp    0xcf21:0x22e5e30a
  41399a:	mov    ds:0x44a3c65d,eax
  41399f:	adc    al,0x2
  4139a1:	shr    BYTE PTR [edx-0x1790e482],1
  4139a7:	sub    dh,0xc3
  4139aa:	or     eax,0x61
  4139ad:	inc    edi
  4139ae:	pop    es
  4139af:	ins    DWORD PTR es:[edi],dx
  4139b0:	add    DWORD PTR ds:0x3e3ab778,edx
  4139b6:	ficomp WORD PTR [eax-0x7e]
  4139b9:	stos   BYTE PTR es:[edi],al
  4139ba:	push   edx
  4139bb:	repz enter 0x5c72,0x0
  4139c0:	add    al,0x80
  4139c2:	(bad)  [ecx+0x62]
  4139c5:	pop    ecx
  4139c6:	dec    ebp
  4139c7:	aaa    
  4139c8:	sub    al,0xf0
  4139ca:	add    eax,0xf9e671b0
  4139cf:	addr16 and eax,0xe7b5d5b0
  4139d5:	or     edi,DWORD PTR [ebp+0x3e]
  4139d8:	mov    cl,0xef
  4139da:	repnz push edx
  4139dc:	xor    esi,DWORD PTR [ecx-0x48d4d199]
  4139e2:	out    dx,eax
  4139e3:	jecxz  0x4139a0
  4139e5:	mov    edi,0xe08619a0
  4139ea:	mov    eax,ds:0x9668f8f5
  4139ef:	cmp    ah,bh
  4139f1:	mov    bl,0x49
  4139f3:	cmp    al,0x81
  4139f5:	and    al,0x81
  4139f7:	push   0x5e
  4139f9:	sbb    BYTE PTR [ebp+0x2113e043],dh
  4139ff:	dec    ebx
  413a00:	imul   ecx,DWORD PTR [edi-0x25],0x68
  413a04:	ffreep st(5)
  413a06:	pop    esp
  413a07:	xchg   edx,eax
  413a08:	repnz stc 
  413a0a:	inc    esi
  413a0b:	fdiv   DWORD PTR [ebp-0x28]
  413a0e:	xchg   ebx,eax
  413a0f:	push   esi
  413a10:	out    0xe9,al
  413a12:	in     eax,dx
  413a13:	pop    edi
  413a14:	ds test eax,0xf14df78
  413a1a:	mov    al,0x32
  413a1c:	or     eax,0x60504699
  413a21:	mov    ch,BYTE PTR [edi-0x65]
  413a24:	cmp    DWORD PTR [eax+eiz*2-0x6d],esi
  413a28:	movq   QWORD PTR [edi+0x408574ee],mm0
  413a2f:	pop    esi
  413a30:	out    dx,eax
  413a31:	js     0x413a7d
  413a33:	(bad)  
  413a34:	mov    ecx,0x7b7e1064
  413a39:	pop    es
  413a3a:	sub    al,0x8b
  413a3c:	lds    ecx,FWORD PTR [edx-0x29df227e]
  413a42:	aaa    
  413a43:	aad    0x2f
  413a45:	xor    DWORD PTR [ecx],edi
  413a47:	cs cmp eax,0x2b43197c
  413a4d:	ins    DWORD PTR es:[edi],dx
  413a4e:	mov    BYTE PTR [edx+0x23],al
  413a51:	and    edx,DWORD PTR [eax]
  413a53:	aam    0x1
  413a55:	fstp   QWORD PTR [esi-0x4c]
  413a58:	adc    BYTE PTR [ecx+ebx*4+0x1c],al
  413a5c:	out    dx,eax
  413a5d:	inc    ecx
  413a5e:	add    dl,bh
  413a60:	neg    BYTE PTR [ebp+eiz*1+0x14]
  413a64:	(bad)  
  413a66:	ret    
  413a67:	or     DWORD PTR [esp+ebx*4],ecx
  413a6a:	data16 mov ah,0xf2
  413a6d:	xor    eax,0xed83299c
  413a72:	imul   eax,DWORD PTR [ecx-0x4a],0xffffffc9
  413a76:	mov    dh,BYTE PTR [edx-0x38335437]
  413a7c:	pop    edi
  413a7d:	sbb    BYTE PTR [edi],ah
  413a7f:	retf   
  413a80:	cmc    
  413a81:	js     0x413aa5
  413a83:	outs   dx,BYTE PTR ds:[esi]
  413a84:	dec    ebx
  413a85:	imul   ebx,DWORD PTR [edx*8+0xa8290a6],0xffffffda
  413a8d:	in     al,0xbe
  413a8f:	(bad)  
  413a90:	neg    DWORD PTR [ebp+0x19]
  413a93:	(bad)  
  413a94:	int3   
  413a95:	data16 fist WORD PTR [ebx]
  413a98:	test   DWORD PTR [edi-0x5b],eax
  413a9b:	xchg   edi,ecx
  413a9d:	mov    BYTE PTR [eax-0x4d],dh
  413aa0:	loop   0x413aac
  413aa2:	stos   BYTE PTR es:[edi],al
  413aa3:	mov    ds:0x81c39641,al
  413aa8:	sbb    eax,0x3a417c0a
  413aad:	sbb    al,dh
  413aaf:	xor    DWORD PTR [esi],0xfcd41118
  413ab5:	dec    edx
  413ab6:	popa   
  413ab7:	sbb    ch,0x4c
  413aba:	add    ecx,0x78
  413abd:	repz push es
  413abf:	and    BYTE PTR [ecx+0x4e],bh
  413ac2:	sbb    ebp,ebp
  413ac4:	inc    ebp
  413ac5:	test   eax,0x28e0f493
  413aca:	lock dec esp
  413acc:	add    dh,ah
  413ace:	inc    ebx
  413acf:	ja     0x413af8
  413ad1:	add    eax,0x84860318
  413ad6:	inc    edi
  413ad7:	mov    ds:0x2bc17434,al
  413adc:	xchg   ebp,eax
  413add:	or     BYTE PTR fs:[edx-0x77729ba6],bh
  413ae4:	das    
  413ae5:	aaa    
  413ae6:	in     al,0xb1
  413ae8:	ins    DWORD PTR es:[edi],dx
  413ae9:	call   0xd7379d38
  413aee:	push   edx
  413aef:	(bad)  
  413af0:	arpl   WORD PTR [ecx+0x723129c],bx
  413af6:	inc    esi
  413af7:	and    eax,0xe10e3d34
  413afc:	mov    ds:0xb389d5d6,al
  413b01:	enter  0x81da,0x60
  413b05:	xlat   BYTE PTR ds:[ebx]
  413b06:	in     al,0x25
  413b08:	call   0xafbe860b
  413b0d:	jle    0x413b23
  413b0f:	mov    ebx,ecx
  413b11:	hlt    
  413b12:	pusha  
  413b13:	call   FWORD PTR [ebx+ecx*2-0x14]
  413b17:	(bad)  
  413b18:	div    DWORD PTR [edx]
  413b1a:	mov    ch,0x76
  413b1c:	mov    ecx,0xd811643e
  413b21:	pop    ss
  413b22:	push   edx
  413b23:	jmp    0xbd07:0xc6ade80f
  413b2a:	leave  
  413b2b:	dec    esp
  413b2c:	or     eax,0xa15a441b
  413b31:	(bad)  
  413b32:	nop
  413b33:	fwait
  413b34:	sub    DWORD PTR [esi-0x74],0x91b8b194
  413b3b:	dec    esp
  413b3c:	xchg   edi,eax
  413b3d:	push   esp
  413b3f:	imul   edx,DWORD PTR [ecx-0x28],0x81355a27
  413b46:	pop    ebx
  413b47:	rcr    ecx,0x1
  413b4a:	stos   BYTE PTR es:[edi],al
  413b4b:	mov    bl,BYTE PTR [eax]
  413b4d:	xchg   esi,eax
  413b4e:	data16 sti 
  413b50:	or     dl,ah
  413b52:	mov    WORD PTR [edx+0x3dd4c0c4],fs
  413b58:	and    DWORD PTR [ecx-0x4b],ebp
  413b5b:	int3   
  413b5c:	push   ecx
  413b5d:	cmp    bh,BYTE PTR [ebp-0x21]
  413b60:	push   edi
  413b61:	add    al,0xb5
  413b63:	popa   
  413b64:	repz mov bh,0x44
  413b67:	sub    al,0xc
  413b69:	inc    ebp
  413b6a:	and    DWORD PTR [edi-0x19],edi
  413b6d:	adc    eax,0x5686cde7
  413b72:	xchg   BYTE PTR [eax-0x1b140af8],ah
  413b78:	int3   
  413b79:	jo     0x413b5d
  413b7b:	ja     0x413bf3
  413b7d:	dec    ebp
  413b7e:	lock xor eax,ecx
  413b81:	mov    ds,WORD PTR [ecx]
  413b83:	and    DWORD PTR [eax+eax*1+0x3],eax
  413b87:	push   0xffffff9f
  413b89:	mov    al,ds:0x86955f3d
  413b8e:	xchg   dx,ax
  413b90:	popa   
  413b91:	push   ecx
  413b92:	mov    DWORD PTR [edx-0x2f],ebp
  413b95:	push   0x27
  413b97:	rol    al,cl
  413b99:	dec    ecx
  413b9a:	or     DWORD PTR [ebp+0x5a],ecx
  413b9d:	lods   eax,DWORD PTR ds:[esi]
  413b9e:	mov    edx,0xe3b20c95
  413ba3:	xchg   BYTE PTR [edx+0x43],ah
  413ba6:	jb     0x413bf5
  413ba8:	int    0x1e
  413baa:	jne    0x413bca
  413bac:	sub    ebx,DWORD PTR [edi]
  413bae:	loopne 0x413bf9
  413bb0:	loopne 0x413c17
  413bb2:	ja     0x413b9f
  413bb4:	adc    DWORD PTR [edi+eax*2+0x36],eax
  413bb8:	dec    esp
  413bba:	pop    edi
  413bbb:	add    dh,dl
  413bbd:	mov    ds:0x8f05a063,eax
  413bc2:	sub    edx,edx
  413bc4:	or     BYTE PTR [ebp-0x1b],cl
  413bc7:	xor    edi,ecx
  413bc9:	out    0x1d,eax
  413bcb:	mov    al,ds:0xd90f80ef
  413bd0:	dec    esp
  413bd1:	inc    edx
  413bd2:	into   
  413bd3:	cmp    DWORD PTR [eax],0x5d
  413bd6:	mov    bh,0xc8
  413bd8:	sar    dh,0xbb
  413bdb:	test   DWORD PTR [ecx+edi*4+0x54],ebx
  413bdf:	shr    BYTE PTR [edx-0x42],0x22
  413be3:	aam    0xb4
  413be5:	lock mov ch,0xef
  413be8:	fwait
  413be9:	mov    esi,0xfd724912
  413bee:	sub    ebx,ebp
  413bf0:	adc    edx,DWORD PTR fs:[ecx]
  413bf3:	sbb    ch,bh
  413bf5:	div    DWORD PTR [edx+0x3d]
  413bf8:	push   es
  413bf9:	xchg   BYTE PTR [ecx+0x6b],al
  413bfc:	sar    BYTE PTR [eax],0xe7
  413bff:	cmp    ebp,DWORD PTR [ebp+ebp*8+0x1f774fb]
  413c06:	dec    edi
  413c07:	icebp  
  413c08:	add    BYTE PTR [ebx],al
  413c0a:	adc    BYTE PTR [edx-0x4],dl
  413c0d:	ficomp DWORD PTR [ebp+0x1032fd6c]
  413c13:	ins    BYTE PTR es:[edi],dx
  413c14:	sub    eax,0xf60a4a5a
  413c19:	dec    ecx
  413c1a:	push   0xffffff87
  413c1c:	jbe    0x413bd5
  413c1e:	dec    ebp
  413c1f:	enter  0x7111,0x31
  413c23:	iret   
  413c24:	and    esp,DWORD PTR [eax-0x70]
  413c27:	push   es
  413c28:	push   edi
  413c29:	xlat   BYTE PTR ds:[ebx]
  413c2a:	nop
  413c2b:	pop    eax
  413c2c:	shl    BYTE PTR ds:0xfc31e8,cl
  413c32:	dec    ebp
  413c33:	outs   dx,BYTE PTR ds:[esi]
  413c34:	xor    eax,0xc321b5b0
  413c39:	add    eax,0x849843b0
  413c3f:	sti    
  413c40:	add    al,0xbe
  413c42:	sub    BYTE PTR [eax-0x54dc0983],0x6b
  413c49:	lock push edx
  413c4b:	sub    DWORD PTR ds:0x8f050f7,edi
  413c51:	pop    edx
  413c52:	jl     0x413ccd
  413c54:	out    dx,al
  413c55:	scas   eax,DWORD PTR es:[edi]
  413c56:	mov    ds:0xd6d064c7,al
  413c5b:	or     BYTE PTR [esi-0x5c997382],bh
  413c61:	mov    ds:0xfce9841e,eax
  413c66:	dec    esp
  413c67:	jl     0x413bef
  413c69:	pop    ecx
  413c6a:	pop    ebx
  413c6b:	test   al,0x6d
  413c6d:	xchg   esi,eax
  413c6e:	push   cs
  413c6f:	ss jo  0x413cf1
  413c72:	jge    0x413cae
  413c74:	xor    BYTE PTR [ecx-0x80],dh
  413c77:	dec    DWORD PTR [edx+0x3f]
  413c7a:	out    dx,al
  413c7b:	or     edi,eax
  413c7d:	push   eax
  413c7e:	xchg   ecx,eax
  413c7f:	adc    bh,BYTE PTR [ecx-0x3a]
  413c82:	cwde   
  413c83:	retf   0xcb88
  413c86:	loopne 0x413cc6
  413c88:	loop   0x413c9a
  413c8a:	push   ecx
  413c8b:	xchg   BYTE PTR [edi-0x17],ah
  413c8e:	mov    eax,ds:0x4ef88a97
  413c93:	iret   
  413c94:	in     al,0xa3
  413c96:	sti    
  413c97:	jne    0x413c8a
  413c99:	out    dx,eax
  413c9a:	mov    dl,0xb3
  413c9c:	push   eax
  413c9d:	add    al,0x15
  413c9f:	mov    ch,0xa8
  413ca1:	or     BYTE PTR [eax-0xf4f8b6b],0x59
  413ca8:	adc    al,BYTE PTR [ebx-0x40efb17c]
  413cae:	jmp    FWORD PTR ds:0x7a6d257c
  413cb4:	push   0xffffffd3
  413cb6:	and    DWORD PTR [ebp+0x5d],edi
  413cb9:	clc    
  413cba:	jno    0x413cc3
  413cbc:	xchg   edx,eax
  413cbd:	mov    dh,0xd9
  413cbf:	pop    edx
  413cc0:	daa    
  413cc1:	inc    edi
  413cc2:	mov    esp,esi
  413cc4:	jb     0x413d02
  413cc6:	cmp    al,0x6e
  413cc8:	adc    BYTE PTR [edx-0x76647fad],bl
  413cce:	xchg   ecx,eax
  413ccf:	push   ebx
  413cd0:	push   eax
  413cd1:	das    
  413cd2:	push   edx
  413cd3:	ins    DWORD PTR es:[edi],dx
  413cd4:	and    ah,ch
  413cd6:	xlat   BYTE PTR ds:[ebx]
  413cd7:	outs   dx,DWORD PTR ds:[esi]
  413cd8:	push   ss
  413cd9:	ret    0x7dd5
  413cdc:	pop    ecx
  413cdd:	ins    BYTE PTR es:[edi],dx
  413cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cdf:	retf   
  413ce0:	inc    esp
  413ce1:	ins    BYTE PTR es:[edi],dx
  413ce2:	loop   0x413d4d
  413ce4:	push   cs
  413ce5:	xchg   ebx,eax
  413ce6:	pop    esp
  413ce7:	test   BYTE PTR [ecx],al
  413ce9:	xchg   ebp,eax
  413cea:	xchg   ebx,esp
  413cec:	sbb    DWORD PTR [esi-0x63cb1045],0xffffff8a
  413cf3:	int    0x63
  413cf5:	fs and ebx,esi
  413cf8:	push   ds
  413cf9:	aas    
  413cfa:	lea    eax,[ebp+0x5857f5fd]
  413d00:	bound  ebx,QWORD PTR [esi+eiz*2]
  413d03:	sub    BYTE PTR [ecx+ecx*1+0x10],dl
  413d07:	adc    bh,BYTE PTR [ebx]
  413d09:	lea    ebp,[edx]
  413d0b:	xchg   ecx,eax
  413d0c:	push   edx
  413d0d:	test   esp,eax
  413d0f:	jg     0x413d15
  413d11:	cvtpi2ps xmm7,QWORD PTR [esi-0x2704233b]
  413d18:	inc    esp
  413d19:	ins    DWORD PTR es:[edi],dx
  413d1a:	bound  eax,QWORD PTR [ebp-0x7268f08b]
  413d20:	add    bh,ah
  413d22:	mov    ?,esp
  413d24:	pusha  
  413d25:	call   0x190d4e99
  413d2a:	(bad)  
  413d2b:	sub    BYTE PTR [eax-0x42439ee7],dh
  413d31:	mov    al,ds:0xce4a2d74
  413d36:	js     0x413cc7
  413d38:	inc    ebx
  413d39:	jl     0x413cc3
  413d3b:	xchg   ebp,eax
  413d3c:	stc    
  413d3d:	mul    DWORD PTR [edx-0x2a]
  413d40:	push   es
  413d41:	xor    esi,DWORD PTR [eax]
  413d43:	std    
  413d44:	clc    
  413d45:	das    
  413d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d47:	xchg   edi,eax
  413d48:	inc    ecx
  413d49:	dec    esp
  413d4a:	xchg   ebx,eax
  413d4b:	adc    bl,BYTE PTR [bx+si-0x46]
  413d4f:	outs   dx,DWORD PTR ds:[esi]
  413d50:	in     eax,dx
  413d51:	sbb    DWORD PTR [ebp+ebx*8+0x7b9136fc],ebp
  413d58:	mov    ds:0x9ef3a0e3,eax
  413d5d:	or     eax,0xa4e94f0
  413d62:	mov    al,ds:0x83441de6
  413d67:	push   ds
  413d68:	xor    al,ch
  413d6a:	mov    eax,ds:0x73c74fe3
  413d6f:	xchg   esi,eax
  413d70:	push   ds
  413d71:	jb     0x413d29
  413d73:	adc    BYTE PTR [edx],cl
  413d75:	bound  edi,QWORD PTR [ebx]
  413d77:	retf   
  413d78:	out    0xaa,eax
  413d7a:	les    ebp,FWORD PTR [edx+0x67]
  413d7d:	imul   edx,DWORD PTR [edx],0xc8221664
  413d83:	pop    ss
  413d84:	cmp    eax,0x3b779cd1
  413d89:	mov    WORD PTR [ecx-0x244a3dcc],fs
  413d8f:	inc    edx
  413d90:	mov    ebp,DWORD PTR [ebp-0x18]
  413d93:	push   0x1d1990b0
  413d98:	adc    al,0x3c
  413d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d9b:	and    BYTE PTR [edi-0x61cc105e],ah
  413da1:	stc    
  413da2:	sar    ah,cl
  413da4:	jb     0x413dc4
  413da6:	mov    dl,0x56
  413da8:	lds    ecx,FWORD PTR [eax+ebx*2+0x10044e95]
  413daf:	dec    esp
  413db0:	mov    dl,0xd6
  413db2:	mov    ah,0x2f
  413db4:	cld    
  413db5:	mov    ecx,eax
  413db7:	xchg   edx,eax
  413db8:	push   esp
  413db9:	mov    edi,gs
  413dbb:	dec    ebx
  413dbc:	sbb    al,BYTE PTR [edx+0x67]
  413dbf:	inc    ecx
  413dc0:	xor    al,0xa6
  413dc2:	and    ebx,DWORD PTR [edi]
  413dc4:	cld    
  413dc5:	(bad)  
  413dc6:	xor    eax,0x40528fd5
  413dcb:	data16 jns 0x413d92
  413dce:	mov    edx,0x2a3d48cd
  413dd3:	inc    edi
  413dd4:	push   eax
  413dd5:	push   ss
  413dd6:	in     al,0x8e
  413dd8:	cli    
  413dd9:	jno    0x413e59
  413ddb:	mov    ?,WORD PTR [edi-0x57]
  413dde:	push   ds
  413ddf:	out    dx,eax
  413de0:	test   DWORD PTR [edi],0x45a151dd
  413de6:	or     dl,BYTE PTR [edx-0x12e4dd21]
  413dec:	pop    ss
  413ded:	and    edx,edi
  413def:	jl     0x413e1d
  413df1:	loop   0x413dff
  413df3:	loop   0x413e32
  413df5:	test   DWORD PTR [ebx+0x21],ebx
  413df8:	sub    eax,0xc62895a1
  413dfd:	mov    WORD PTR ds:0x926cce5f,es
  413e03:	popa   
  413e04:	inc    eax
  413e05:	test   eax,0x80d412dd
  413e0a:	fst    DWORD PTR [edi+0x36fcfde7]
  413e10:	push   esi
  413e11:	jmp    0x413dd0
  413e13:	jg     0x413da3
  413e15:	cli    
  413e16:	jle    0x413dc7
  413e18:	xor    DWORD PTR [esi],ebp
  413e1a:	pop    ecx
  413e1b:	jne    0x413e90
  413e1d:	mov    ds:0xc37faed9,eax
  413e22:	xor    al,0x4f
  413e24:	mov    ah,0x3e
  413e26:	sahf   
  413e27:	popf   
  413e28:	adc    esp,DWORD PTR [edi+edi*4+0x36a3c627]
  413e2f:	xchg   esi,eax
  413e30:	xchg   ebp,eax
  413e31:	xor    eax,0x5924e62
  413e36:	pop    ecx
  413e37:	push   esp
  413e38:	dec    eax
  413e39:	(bad)  
  413e3a:	mov    bl,0xc3
  413e3c:	cs mov ah,0xcb
  413e40:	pop    esi
  413e41:	dec    ebx
  413e42:	data16 adc BYTE PTR [ebx+esi*2],dl
  413e46:	adc    eax,0x6c19a8
  413e4b:	xor    al,0x64
  413e4d:	mul    DWORD PTR [eax]
  413e4f:	jbe    0x413ebf
  413e51:	inc    esi
  413e52:	xor    DWORD PTR [eax-0x5e],edi
  413e55:	dec    esi
  413e56:	xchg   ebx,eax
  413e57:	outs   dx,BYTE PTR ds:[esi]
  413e58:	out    0xde,al
  413e5a:	les    ecx,FWORD PTR [esi]
  413e5c:	inc    edi
  413e5d:	push   eax
  413e5e:	jb     0x413e1f
  413e60:	dec    esi
  413e61:	fild   QWORD PTR [esi+0x5b]
  413e64:	mov    cl,0x7c
  413e66:	jnp    0x413ed0
  413e68:	dec    esp
  413e69:	ins    DWORD PTR es:[edi],dx
  413e6a:	pop    es
  413e6b:	nop
  413e6c:	je     0x413e8f
  413e6e:	dec    ecx
  413e6f:	les    esi,FWORD PTR [edx-0x6e]
  413e72:	cmp    edi,esp
  413e74:	mul    bh
  413e76:	test   al,0x3c
  413e78:	sar    DWORD PTR [edi+0x1b],cl
  413e7b:	ins    BYTE PTR es:[edi],dx
  413e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e7d:	add    esp,DWORD PTR [esi]
  413e7f:	mov    bl,0xec
  413e81:	inc    ebp
  413e82:	(bad)  [ecx+0x62]
  413e85:	inc    esi
  413e86:	(bad)  
  413e87:	repz into 
  413e89:	push   ds
  413e8a:	addr16 push 0xfffffffe
  413e8d:	ins    BYTE PTR es:[edi],dx
  413e8e:	leave  
  413e8f:	jl     0x413e9e
  413e91:	clts   
  413e93:	dec    ebx
  413e94:	arpl   WORD PTR [ebx],ax
  413e96:	(bad)  
  413e97:	adc    al,0x9a
  413e99:	cmp    BYTE PTR [esi-0x77],cl
  413e9c:	enter  0xd47b,0x5b
  413ea0:	std    
  413ea1:	xchg   ebx,eax
  413ea2:	mov    eax,ds:0x7202b2bd
  413ea7:	mov    bl,0x85
  413ea9:	or     BYTE PTR [ebp-0x4],dl
  413eac:	xor    al,0xbb
  413eae:	mov    BYTE PTR [ebx-0x3c],al
  413eb1:	cdq    
  413eb2:	adc    ecx,edx
  413eb4:	inc    edx
  413eb5:	pop    edi
  413eb6:	mov    al,0xb
  413eb8:	adc    dh,BYTE PTR [ebx]
  413eba:	push   ecx
  413ebb:	outs   dx,DWORD PTR ds:[esi]
  413ebc:	(bad)  [ebp-0x70]
  413ebf:	xchg   edi,eax
  413ec0:	inc    edx
  413ec1:	adc    DWORD PTR [edi+0x12],eax
  413ec4:	jle    0x413ef7
  413ec6:	inc    edx
  413ec7:	xchg   edi,eax
  413ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec9:	xchg   edi,eax
  413eca:	mov    dh,0xbe
  413ecc:	jae    0x413f28
  413ece:	les    ecx,FWORD PTR [ebx+edx*8-0x34ca507f]
  413ed5:	lahf   
  413ed6:	in     al,dx
  413ed7:	cmp    eax,0x914b402e
  413edc:	adc    eax,edx
  413ede:	sar    dh,cl
  413ee0:	lock (bad) 
  413ee2:	pop    eax
  413ee3:	mov    ch,0x25
  413ee5:	xor    DWORD PTR [ecx],esi
  413ee7:	fld    DWORD PTR [eax]
  413ee9:	push   esp
  413eea:	push   0x44
  413eec:	das    
  413eed:	clc    
  413eee:	cmp    esp,DWORD PTR [ebx]
  413ef0:	ret    
  413ef1:	jecxz  0x413f1b
  413ef3:	fisttp WORD PTR [bp+di-0x31e]
  413ef8:	pushf  
  413ef9:	test   al,0xc9
  413efb:	xor    eax,0xf1e0c570
  413f00:	adc    eax,0xabf2ff01
  413f05:	pop    esi
  413f06:	add    cl,ah
  413f08:	xor    DWORD PTR [esi-0x456acb36],ebx
  413f0e:	and    al,BYTE PTR [edx+0x77]
  413f11:	xchg   esi,eax
  413f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f13:	rcl    DWORD PTR [eax-0x52acbf64],cl
  413f19:	pop    ds
  413f1a:	push   ebx
  413f1b:	dec    ebx
  413f1c:	arpl   WORD PTR [ecx+0x52],si
  413f1f:	pop    ds
  413f20:	dec    edi
  413f21:	xchg   ebx,eax
  413f22:	mov    WORD PTR [edi+0x35d2cd94],ds
  413f28:	push   edi
  413f29:	mov    ds:0x3c6beebb,eax
  413f2e:	adc    edx,DWORD PTR [ecx]
  413f30:	test   al,0x41
  413f32:	call   0xfddc8e89
  413f37:	mov    ecx,0xa058c1f5
  413f3c:	dec    edx
  413f3d:	rcr    DWORD PTR [edx],0xc4
  413f40:	inc    ebx
  413f41:	mov    esp,0x69fdd892
  413f46:	add    eax,0x287a9ef0
  413f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f4c:	cmc    
  413f4d:	mov    WORD PTR ds:0x1e3a53c0,es
  413f53:	out    dx,eax
  413f54:	inc    esp
  413f55:	out    0xe1,eax
  413f57:	or     edx,DWORD PTR [ebp+0x3d163f74]
  413f5d:	jecxz  0x413f1c
  413f5f:	rcr    DWORD PTR [edx+0x1e2c2204],0xd1
  413f66:	and    eax,0x6e0877da
  413f6b:	push   ebx
  413f6c:	inc    ebx
  413f6d:	dec    edi
  413f6e:	cli    
  413f6f:	adc    bl,BYTE PTR [ecx]
  413f71:	dec    esi
  413f72:	jle    0x413fbd
  413f74:	iret   
  413f75:	jecxz  0x413fa4
  413f77:	lahf   
  413f78:	retf   0xafb1
  413f7b:	mov    ecx,0x23265393
  413f80:	dec    esp
  413f81:	std    
  413f82:	call   0x739de5b2
  413f87:	jge    0x413f56
  413f89:	adc    al,0x4f
  413f8b:	mov    bh,0x36
  413f8d:	mov    ah,0x47
  413f8f:	int3   
  413f90:	imul   esi,DWORD PTR [esi],0x3e602573
  413f96:	push   0xffffffa4
  413f98:	retf   0x40d8
  413f9b:	pop    edx
  413f9c:	imul   esi,DWORD PTR [eax+edx*2+0x71],0x4b
  413fa1:	xchg   edx,eax
  413fa2:	ds fwait
  413fa4:	call   DWORD PTR [esi+eax*4-0x3a933593]
  413fab:	fwait
  413fac:	fwait
  413fad:	clc    
  413fae:	inc    edx
  413faf:	pop    ebp
  413fb0:	fisttp QWORD PTR [edx]
  413fb2:	cli    
  413fb3:	mov    cl,0x73
  413fb5:	adc    DWORD PTR ds:0xa3b9a4e6,esp
  413fbb:	test   BYTE PTR [esi+0x73],bl
  413fbe:	nop
  413fbf:	dec    ecx
  413fc0:	push   ebx
  413fc1:	stc    
  413fc2:	pop    ds
  413fc3:	cmp    bh,bl
  413fc5:	sub    al,0xc5
  413fc7:	cli    
  413fc8:	nop
  413fc9:	push   eax
  413fca:	mov    esp,0x6029f9d6
  413fcf:	test   DWORD PTR [edx],ebp
  413fd1:	pop    ds
  413fd2:	test   BYTE PTR [ebx+0x37],al
  413fd5:	cmp    eax,esi
  413fd7:	jecxz  0x413fbf
  413fd9:	inc    ecx
  413fda:	shr    DWORD PTR [eax+0x6356e763],1
  413fe0:	mov    ah,0x5
  413fe2:	pop    ebp
  413fe3:	adc    BYTE PTR [ebp-0x6c],ah
  413fe6:	push   cs
  413fe7:	lds    edi,FWORD PTR [edx+0x21]
  413fea:	ds dec ebp
  413fec:	adc    esi,eax
  413fee:	jg     0x413ff4
  413ff0:	xorps  xmm2,XMMWORD PTR [ecx+0x38]
  413ff4:	xor    al,0xaf
  413ff6:	mov    al,ds:0x8703b020
  413ffb:	ficomp DWORD PTR [edx+0xcd55f3]
  414001:	popf   
  414002:	push   ebx
  414003:	or     DWORD PTR [esi],esi
  414005:	imul   BYTE PTR [edi+0x3a]
  414008:	push   ebp
  414009:	aam    0x6f
  41400b:	in     eax,0x5
  41400d:	(bad)  
  41400f:	inc    esp
  414010:	stos   BYTE PTR es:[edi],al
  414011:	test   al,0xfb
  414013:	gs retf 0xe200
  414017:	test   ah,0xd
  41401a:	data16 je 0x413fc7
  41401d:	cmp    esp,DWORD PTR [ebp+0x61eabf07]
  414023:	add    ebp,eax
  414025:	mov    dh,0xa2
  414027:	(bad)  
  414029:	mov    bl,0xb2
  41402b:	xor    al,0x99
  41402d:	lock ins BYTE PTR es:[edi],dx
  41402f:	and    BYTE PTR [esi],cl
  414031:	jg     0x413fde
  414033:	push   0xffffffbb
  414035:	sbb    ch,cl
  414037:	cmp    BYTE PTR [edi-0x5c599b8a],dl
  41403d:	or     DWORD PTR [edx-0x7c150eb1],ebx
  414043:	pop    edx
  414044:	lea    ecx,[esi-0x7eeba9c2]
  41404a:	hlt    
  41404b:	ret    0xf094
  41404e:	xchg   DWORD PTR [ebx-0x16],edi
  414051:	and    BYTE PTR ds:0x5efd0595,dh
  414057:	ds scas eax,DWORD PTR es:[edi]
  414059:	jle    0x414025
  41405b:	xor    bh,BYTE PTR [ecx]
  41405d:	sahf   
  41405e:	(bad)  
  41405f:	adc    BYTE PTR [edi-0x2fe3c6f5],ah
  414065:	or     dh,BYTE PTR [ebp+0x39]
  414068:	cmc    
  414069:	push   0x57c552c5
  41406e:	cs icebp 
  414070:	(bad)  
  414071:	and    al,0xd2
  414073:	dec    esp
  414074:	add    eax,0x93fceb22
  414079:	inc    esp
  41407a:	push   ebp
  41407b:	fld    DWORD PTR [edx]
  41407d:	cmp    al,0x12
  41407f:	fwait
  414080:	cld    
  414081:	and    DWORD PTR [esi],0x5f51152b
  414087:	jnp    0x414043
  414089:	rol    BYTE PTR [edi],cl
  41408b:	cmp    cl,0x21
  41408e:	mov    dh,0x9b
  414090:	mov    esp,0x47e56b1e
  414095:	sbb    DWORD PTR [esi+0x306aa2fd],ebx
  41409b:	pop    eax
  41409c:	inc    eax
  41409d:	in     eax,0xb1
  41409f:	cmp    al,0xc7
  4140a1:	or     DWORD PTR [edi-0x5d1c5a4b],ecx
  4140a7:	xchg   ebp,eax
  4140a8:	mov    ecx,0x5bafb9fa
  4140ad:	cmp    DWORD PTR [ebp-0x496b9696],0x5f39cbcd
  4140b7:	imul   esp,DWORD PTR [eax+0x29],0x5934efc6
  4140be:	test   eax,0xc6c46a4f
  4140c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140c4:	add    dl,ah
  4140c6:	sub    ch,dl
  4140c8:	(bad)  
  4140c9:	ret    
  4140ca:	add    eax,0x75b0aa67
  4140cf:	inc    esi
  4140d0:	dec    BYTE PTR [eax+0x63]
  4140d3:	enter  0x3ef1,0xb0
  4140d7:	test   DWORD PTR [edx-0x289a6890],0x7358c590
  4140e1:	into   
  4140e2:	pop    es
  4140e3:	fldpi  
  4140e5:	retf   
  4140e6:	retf   
  4140e7:	shufps xmm5,xmm1,0x5a
  4140eb:	arpl   WORD PTR [eax-0x53],cx
  4140ee:	rcl    BYTE PTR [ebp-0x5e],cl
  4140f1:	dec    edx
  4140f2:	fxch   st(6)
  4140f4:	mov    ds:0xc8d382a2,al
  4140f9:	test   eax,0x931700dd
  4140fe:	bound  esp,QWORD PTR [edi+0x7c410555]
  414104:	mov    ebx,DWORD PTR [edx]
  414106:	mov    bl,0x2f
  414108:	mov    eax,ds:0x8ba746c6
  41410d:	into   
  41410e:	mov    ds:0x2cd8184b,eax
  414113:	adc    BYTE PTR [eax+0x2c207bae],dh
  414119:	push   ss
  41411a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41411b:	add    ch,BYTE PTR [edx-0x4c3b29fe]
  414121:	and    ch,BYTE PTR [edx+0x8]
  414124:	retf   
  414125:	into   
  414126:	scas   eax,DWORD PTR es:[edi]
  414127:	popf   
  414128:	(bad)  
  41412a:	loopne 0x414100
  41412c:	or     DWORD PTR [ebp-0xfa05a9d],eax
  414132:	xlat   BYTE PTR ds:[ebx]
  414133:	aaa    
  414134:	push   cs
  414135:	(bad)  
  414136:	cs mov edx,0x8c9a6fd0
  41413c:	int3   
  41413d:	(bad)  
  41413e:	cld    
  41413f:	retf   0xf32b
  414142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414143:	out    0x75,al
  414145:	fmul   QWORD PTR [ecx+0x1bcede10]
  41414b:	enter  0x97c4,0x9
  41414f:	sbb    eax,0x4f4a52d0
  414154:	call   0xe8c7b37e
  414159:	hlt    
  41415a:	add    eax,0xea765006
  41415f:	ins    DWORD PTR es:[edi],dx
  414160:	out    0xe5,al
  414162:	mov    al,ds:0x1f6f8fbe
  414167:	mov    WORD PTR [ebx-0x6d],cs
  41416a:	pop    esi
  41416b:	mov    ds:0x78ca0ff7,eax
  414170:	pop    es
  414171:	inc    edx
  414172:	(bad)  
  414173:	into   
  414174:	mov    DWORD PTR [edx+edx*2-0x7c],esp
  414178:	hlt    
  414179:	jg     0x4141ea
  41417b:	stos   BYTE PTR es:[edi],al
  41417c:	cli    
  41417d:	mov    esp,0x3d86c2a5
  414182:	pop    ds
  414183:	mov    WORD PTR [ebp+0x271be645],ds
  414189:	out    0x47,eax
  41418b:	dec    esi
  41418c:	mov    ecx,0xaf52b323
  414191:	cmp    BYTE PTR [eax+0x61],bl
  414194:	fs inc esp
  414196:	pop    ebp
  414197:	sar    eax,1
  414199:	mul    BYTE PTR [ebp-0x69]
  41419c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41419d:	cmc    
  41419e:	sub    BYTE PTR [ebx+eiz*4],0x3
  4141a2:	sub    ah,BYTE PTR [ecx]
  4141a4:	xchg   ebp,eax
  4141a5:	mov    ebp,0xcd438a45
  4141aa:	pop    edi
  4141ab:	jp     0x414177
  4141ad:	fsub   DWORD PTR [ebp-0x79df884c]
  4141b3:	adc    eax,0x109c60a1
  4141b8:	in     eax,0x72
  4141ba:	dec    ebx
  4141bb:	shr    BYTE PTR [eax],1
  4141bd:	xchg   ecx,eax
  4141be:	sbb    BYTE PTR [edi-0x43],ch
  4141c1:	pop    ss
  4141c2:	xchg   ebp,eax
  4141c3:	and    ebp,DWORD PTR [eax-0x6b]
  4141c6:	mov    ?,WORD PTR [ebx-0x3c55cee7]
  4141cc:	push   ecx
  4141cd:	push   0xea5e1463
  4141d2:	outs   dx,DWORD PTR ds:[esi]
  4141d3:	mov    esi,0x78708948
  4141d8:	cmovl  ebp,DWORD PTR ds:0x62262fa2
  4141df:	inc    edx
  4141e0:	(bad)  
  4141e1:	and    dh,0x37
  4141e4:	sub    ebp,DWORD PTR [ecx+eax*8-0x322354ed]
  4141eb:	push   eax
  4141ec:	or     esp,edx
  4141ee:	jnp    0x4141f9
  4141f0:	adc    ebp,DWORD PTR [ecx]
  4141f2:	jmp    0x75ab9601
  4141f7:	lea    edi,[edx]
  4141f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141fa:	xchg   DWORD PTR [ecx+0x22],ecx
  4141fd:	sbb    al,0x76
  4141ff:	in     al,0x76
  414201:	fwait
  414202:	sbb    DWORD PTR [esp+eiz*4],ecx
  414205:	xor    dh,BYTE PTR [ebx+0x4aa627a7]
  41420b:	push   ds
  41420c:	scas   al,BYTE PTR es:[edi]
  41420d:	sub    BYTE PTR [ebx],ch
  41420f:	cmc    
  414210:	xor    esp,DWORD PTR [edi-0x7d]
  414213:	sti    
  414214:	pop    ss
  414215:	int    0x58
  414217:	inc    ebx
  414218:	jnp    0x4141ae
  41421a:	gs pop ds
  41421c:	call   0x68dc:0xd77eba77
  414223:	jge    0x41425c
  414225:	xor    ch,bh
  414227:	outs   dx,DWORD PTR ds:[esi]
  414228:	es iret 
  41422a:	xor    ecx,DWORD PTR [ecx+0x23]
  41422d:	pop    edi
  41422e:	sbb    eax,0x480a6dc5
  414233:	push   eax
  414234:	jmp    0x4141ed
  414236:	mov    ebx,0x667ed1f3
  41423b:	ret    0x838e
  41423e:	pop    ebx
  41423f:	adc    DWORD PTR [ecx-0x71],esp
  414242:	pop    eax
  414243:	mov    dl,0xd9
  414245:	inc    edi
  414246:	stos   DWORD PTR es:[edi],eax
  414247:	cmp    al,0x1e
  414249:	es jl  0x414231
  41424c:	push   0x18e0f830
  414251:	imul   edi,DWORD PTR [ebx-0x2b],0x52
  414255:	inc    edx
  414256:	mov    edx,0x82a9c963
  41425b:	int    0x1f
  41425d:	in     eax,0x71
  41425f:	clc    
  414260:	sub    BYTE PTR [edx+0x5b],al
  414263:	fldcw  WORD PTR [edi+0x61]
  414266:	xchg   edi,eax
  414267:	mov    edi,0x15cc2d9c
  41426c:	sub    ebx,edi
  41426e:	stc    
  41426f:	imul   edx,DWORD PTR [edx-0x32a40173],0xb00b124e
  414279:	sbb    esi,DWORD PTR [edi+ecx*8+0x79]
  41427d:	and    dl,BYTE PTR [ebp-0x53]
  414280:	xchg   ebx,eax
  414281:	in     al,dx
  414282:	pop    ss
  414283:	jge    0x41429e
  414285:	and    DWORD PTR [ebx+0x4a],0x4219a893
  41428c:	rcr    dl,0x19
  41428f:	fcmovnbe st,st(1)
  414291:	mov    ch,0x3c
  414293:	mov    ds,WORD PTR [edi+0x2a0a9664]
  414299:	xor    edx,DWORD PTR [ebx-0x4a7e8213]
  41429f:	clc    
  4142a0:	out    0x6e,eax
  4142a2:	int    0x29
  4142a4:	xlat   BYTE PTR ds:[ebx]
  4142a5:	cmp    eax,0x95e0c3b6
  4142aa:	rcl    BYTE PTR [eax],cl
  4142ac:	pop    edi
  4142ad:	bnd jmp 0xa2f67d31
  4142b3:	xor    dl,BYTE PTR [ebx]
  4142b5:	out    0xb6,eax
  4142b7:	xchg   ecx,eax
  4142b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142b9:	push   0xffffff91
  4142bb:	mov    dh,0x50
  4142bd:	xchg   esi,eax
  4142be:	popa   
  4142bf:	xor    eax,DWORD PTR ds:[ebp-0x5682087c]
  4142c6:	inc    esi
  4142c7:	mov    edi,0x81af7975
  4142cc:	fcom   QWORD PTR [edx+ebx*1+0x3b]
  4142d0:	push   ds
  4142d1:	ss pop ebp
  4142d3:	and    DWORD PTR fs:0xe40ce6a7,edi
  4142da:	mov    eax,cs:0x30f613d0
  4142e0:	mov    ebp,0x7fb7b6b4
  4142e5:	jbe    0x4142e3
  4142e7:	not    DWORD PTR [ebx+0x2d37f698]
  4142ed:	add    DWORD PTR ds:0x1324c322,ebx
  4142f3:	ins    BYTE PTR es:[edi],dx
  4142f4:	lahf   
  4142f5:	xor    ch,BYTE PTR [ecx-0x68b358b3]
  4142fb:	jmp    0xdd57:0x8021ef63
  414302:	xchg   edi,eax
  414303:	sub    BYTE PTR [ebx],cl
  414305:	mov    ds,WORD PTR [eax+0x71]
  414308:	xchg   BYTE PTR [edi+0x596e6ca],bl
  41430e:	faddp  st(1),st
  414310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414311:	mov    cl,bl
  414313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414314:	xchg   BYTE PTR [edi],bl
  414316:	out    dx,al
  414317:	dec    BYTE PTR [eax+0x51]
  41431a:	sbb    edi,ebx
  41431c:	jle    0x41430d
  41431e:	inc    DWORD PTR [ebp+0x73]
  414321:	and    dl,BYTE PTR [edx]
  414323:	inc    ecx
  414324:	and    al,0x81
  414326:	addr16 imul ebp,esp,0x68c09651
  41432d:	je     0x4142bc
  41432f:	inc    edx
  414330:	adc    ecx,DWORD PTR [eax+0x5331dba6]
  414336:	scas   eax,DWORD PTR es:[edi]
  414337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414338:	repz lock (bad)
  41433c:	bound  ebp,QWORD PTR [edi+eax*1-0x37b434fb]
  414343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414344:	xchg   edi,eax
  414345:	call   0xcae4:0x7e8f77b6
  41434c:	inc    ecx
  41434d:	xchg   BYTE PTR [edx-0x27987377],ah
  414353:	sbb    al,0x95
  414355:	mov    BYTE PTR [esi],ch
  414357:	js     0x41437c
  414359:	cmp    bh,BYTE PTR [ecx-0x16]
  41435c:	cmp    dl,dh
  41435e:	and    al,0xb2
  414360:	cwde   
  414361:	fucomi st,st(4)
  414363:	icebp  
  414364:	mov    cl,0x74
  414366:	je     0x4143a2
  414368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414369:	addr16 ss aad 0xa6
  41436d:	pop    es
  41436e:	xchg   ebp,eax
  41436f:	lahf   
  414370:	jg     0x4143e0
  414372:	jp     0x414327
  414374:	lods   al,BYTE PTR ds:[esi]
  414375:	out    0xfd,eax
  414377:	mov    ch,0x2
  414379:	push   cs
  41437a:	int3   
  41437b:	sbb    BYTE PTR [edx+0x5c],al
  41437e:	data16 sbb al,0xe6
  414381:	fstp   DWORD PTR [ebx]
  414383:	adc    eax,0x8f56333c
  414388:	adc    bh,BYTE PTR ds:0x4ec0ccb8
  41438e:	in     al,dx
  41438f:	fst    QWORD PTR [eax-0x4475c2e8]
  414395:	sbb    eax,0x6ee6d3ad
  41439a:	inc    eax
  41439b:	ret    0xca67
  41439e:	jbe    0x4143e4
  4143a0:	jmp    0x414353
  4143a2:	jae    0x4143a3
  4143a4:	addr16 (bad) 
  4143a6:	xor    eax,0xc931da8c
  4143ab:	(bad)  
  4143ac:	sbb    al,0xcf
  4143ae:	mov    dh,BYTE PTR [edi+0xf]
  4143b1:	cs scas al,BYTE PTR es:[edi]
  4143b3:	mov    dh,0x4a
  4143b5:	call   0xe50daa1c
  4143ba:	cmc    
  4143bb:	aaa    
  4143bc:	and    dl,BYTE PTR [eax]
  4143be:	aad    0xcb
  4143c0:	clc    
  4143c1:	xchg   edi,eax
  4143c2:	(bad)  
  4143c3:	mov    ds:0x6eb360af,al
  4143c8:	xor    DWORD PTR [ecx+esi*2],ebx
  4143cb:	sar    BYTE PTR [edi+edx*1-0x769c4ff7],cl
  4143d2:	sub    ecx,DWORD PTR cs:[ecx]
  4143d5:	jge    0x414400
  4143d7:	add    bh,BYTE PTR [esp+eax*2-0x24a6760e]
  4143de:	mov    BYTE PTR ds:[ebx+0x3511c2d6],dh
  4143e5:	aad    0x23
  4143e7:	mov    al,0xc8
  4143e9:	add    eax,0xe64157db
  4143ee:	jns    0x4143d3
  4143f0:	mov    bl,0x71
  4143f2:	push   ds
  4143f3:	and    DWORD PTR [ecx],ebx
  4143f5:	test   bh,dl
  4143f7:	jns    0x414397
  4143f9:	sbb    eax,0x204d5290
  4143fe:	dec    edx
  4143ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414400:	inc    ebp
  414401:	ja     0x414448
  414403:	std    
  414404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414405:	cmc    
  414406:	sub    al,0xa2
  414408:	xchg   edx,eax
  414409:	mov    eax,ds:0xa1615951
  41440e:	dec    edi
  41440f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414410:	data16 (bad) 
  414412:	test   eax,0xddddcd21
  414417:	loope  0x414475
  414419:	sbb    al,0x5
  41441b:	lahf   
  41441c:	xchg   DWORD PTR [ecx+0x5f],ecx
  41441f:	jmp    0xc205446a
  414424:	vmaxps ymm0,ymm6,YMMWORD PTR [eax]
  414428:	shr    DWORD PTR [edx+eiz*4+0x105a79c1],0x91
  414430:	fimul  DWORD PTR [esi]
  414432:	mov    dh,0x60
  414434:	ficomp DWORD PTR [esi]
  414436:	or     BYTE PTR [edi-0x7a],cl
  414439:	and    al,0x34
  41443b:	mov    ds:0x15de2ac,al
  414440:	mov    bh,0x3b
  414442:	loopne 0x41447e
  414444:	int    0xcb
  414446:	retf   0xf60
  414449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41444a:	or     dh,dh
  41444c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41444d:	fidiv  WORD PTR [ebp-0x59fc1361]
  414453:	stos   DWORD PTR es:[edi],eax
  414454:	icebp  
  414455:	aaa    
  414456:	pop    edi
  414457:	sbb    bh,dh
  414459:	sbb    eax,0xa9ffcfa3
  41445e:	inc    ebx
  41445f:	ins    BYTE PTR es:[edi],dx
  414460:	les    ecx,FWORD PTR [ebx-0x71]
  414463:	aaa    
  414464:	adc    DWORD PTR [ebx],0xffffffad
  414467:	je     0x4144d5
  414469:	add    esp,DWORD PTR [ecx+0x6e]
  41446c:	mov    ch,0x79
  41446e:	push   0x379d79d0
  414473:	mov    ebp,0xa82962e6
  414478:	fwait
  414479:	loope  0x41449b
  41447b:	lock pushf 
  41447d:	sbb    dl,BYTE PTR es:[esi+edi*8+0x12]
  414482:	mov    edi,0x97610769
  414487:	sahf   
  414488:	scas   eax,DWORD PTR es:[edi]
  414489:	mov    bl,0xab
  41448b:	jne    0x414421
  41448d:	std    
  41448e:	push   esi
  41448f:	ss sub al,0x5b
  414492:	xor    edi,DWORD PTR [eax+0x1]
  414495:	mov    eax,ds:0xbb5a3e67
  41449a:	xor    cl,BYTE PTR [ebp-0x6]
  41449d:	stc    
  41449e:	xlat   BYTE PTR ds:[ebx]
  41449f:	repz add eax,0x1a8c9ece
  4144a5:	push   ebp
  4144a6:	pusha  
  4144a7:	push   edx
  4144a8:	adc    al,0x99
  4144aa:	pop    edx
  4144ab:	loopne 0x41448b
  4144ad:	dec    eax
  4144ae:	clc    
  4144af:	and    bh,0x94
  4144b2:	jns    0x41447d
  4144b4:	arpl   dx,cx
  4144b6:	sbb    BYTE PTR [edx],bh
  4144b8:	outs   dx,DWORD PTR ds:[esi]
  4144b9:	cld    
  4144ba:	(bad)  
  4144bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144bc:	retf   
  4144bd:	adc    edx,ebp
  4144bf:	jge    0x4144ac
  4144c1:	mov    dh,al
  4144c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144c4:	ret    0xd073
  4144c7:	call   0x51eaa54e
  4144cc:	fwait
  4144cd:	in     al,dx
  4144ce:	xlat   BYTE PTR ds:[ebx]
  4144cf:	push   cs
  4144d0:	lahf   
  4144d1:	aam    0x6c
  4144d3:	cld    
  4144d4:	mov    eax,ds:0x52a72e89
  4144d9:	add    BYTE PTR [edi+ecx*4-0x29],bl
  4144dd:	adc    bh,BYTE PTR [ecx-0x20]
  4144e0:	xor    eax,0x7c1732be
  4144e5:	and    ebx,DWORD PTR [edi+ecx*4+0x58]
  4144e9:	ins    BYTE PTR es:[edi],dx
  4144ea:	ret    0x991e
  4144ed:	pushf  
  4144ee:	jb     0x414479
  4144f0:	ffree  st(7)
  4144f2:	xchg   esp,eax
  4144f3:	adc    DWORD PTR [esi+0x3bbf9548],edi
  4144f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144fa:	jo     0x414549
  4144fc:	cmp    DWORD PTR [ecx-0x73a9082e],ecx
  414502:	call   0x369e:0x9962ff2b
  414509:	jae    0x4144d4
  41450b:	and    al,BYTE PTR [edi-0x4a]
  41450e:	xchg   edi,eax
  41450f:	in     eax,dx
  414510:	mov    bh,0xf0
  414512:	xor    al,BYTE PTR [edx]
  414514:	cmc    
  414515:	xor    edi,DWORD PTR [edx+0x797d7eb4]
  41451b:	and    al,0x78
  41451d:	xor    al,0x26
  41451f:	(bad)  
  414520:	mov    ah,0xc
  414522:	inc    ecx
  414523:	imul   eax,DWORD PTR [eax-0x16501cee],0xffffffd9
  41452a:	mov    ecx,0xa00306d3
  41452f:	pop    es
  414530:	or     al,0x8c
  414532:	xlat   BYTE PTR ds:[ebx]
  414533:	mov    DWORD PTR [ebp-0x3d],ebx
  414536:	pusha  
  414537:	in     al,0xb5
  414539:	retf   
  41453a:	push   edx
  41453b:	je     0x4144c8
  41453d:	dec    esp
  41453e:	sbb    BYTE PTR [ecx+eax*1],ah
  414541:	fadd   st,st(6)
  414543:	shl    DWORD PTR [edx],1
  414545:	cmp    eax,0x6532857d
  41454a:	mov    BYTE PTR [eax],ch
  41454c:	cld    
  41454d:	imul   ecx
  41454f:	jbe    0x414524
  414551:	xlat   BYTE PTR ds:[ebx]
  414552:	rcl    DWORD PTR [ecx-0x31523676],cl
  414558:	or     DWORD PTR [ecx-0x2d],edx
  41455b:	test   DWORD PTR [ebp+0x5f4e040b],0x42c54dc
  414565:	xor    al,0x6f
  414567:	fs aas 
  414569:	fst    st(6)
  41456b:	dec    ebx
  41456c:	cwde   
  41456d:	(bad)  
  41456e:	rcl    BYTE PTR [edi+0x245659a4],0xdb
  414575:	mov    ch,0xd7
  414577:	jmp    0x414506
  414579:	pushf  
  41457a:	call   0x6941f94
  41457f:	mov    ecx,0xdac009a6
  414584:	pop    ecx
  414585:	or     eax,0xaefbb687
  41458a:	lods   eax,DWORD PTR ds:[esi]
  41458b:	adc    al,0x5a
  41458d:	mov    dh,0x2d
  41458f:	retf   0x325a
  414592:	es cmp al,0x38
  414596:	xor    bh,BYTE PTR [ebp-0x28c6808f]
  41459c:	cmp    BYTE PTR [ebx+0x1384f446],bh
  4145a2:	mov    esp,0xa2e755cd
  4145a7:	add    DWORD PTR [ebx+0x3b86d394],esi
  4145ad:	fsub   st,st(3)
  4145af:	sbb    cl,dh
  4145b1:	adc    ah,bl
  4145b3:	js     0x414603
  4145b5:	or     cl,BYTE PTR [edx+ecx*4]
  4145b8:	push   esp
  4145b9:	mov    cl,0x25
  4145bb:	in     al,0x82
  4145bd:	call   0x495442bb
  4145c2:	cmp    eax,0x576c82f
  4145c7:	sub    ebp,edi
  4145c9:	push   edi
  4145ca:	add    BYTE PTR [ebp+0x38caff5a],cl
  4145d0:	ja     0x414628
  4145d2:	retf   0x94a0
  4145d5:	pop    ecx
  4145d6:	xlat   BYTE PTR ds:[ebx]
  4145d7:	pop    ds
  4145d8:	call   0x96e43ccc
  4145dd:	or     al,0xab
  4145df:	jbe    0x414569
  4145e1:	xlat   BYTE PTR ds:[ebx]
  4145e2:	loop   0x414605
  4145e4:	push   DWORD PTR ds:0x31bcfec7
  4145ea:	mov    BYTE PTR [eax],cl
  4145ec:	daa    
  4145ed:	data16 gs aaa 
  4145f0:	scas   eax,DWORD PTR es:[edi]
  4145f1:	pushf  
  4145f2:	dec    eax
  4145f3:	ins    DWORD PTR es:[edi],dx
  4145f4:	je     0x4145f4
  4145f6:	(bad)  
  4145f7:	call   0x6b367929
  4145fc:	sub    eax,0xaa49318e
  414601:	inc    ebx
  414602:	in     eax,0x39
  414604:	lods   al,BYTE PTR ds:[esi]
  414605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414606:	fwait
  414607:	mov    eax,0x28312eb4
  41460c:	adc    eax,0x992c5606
  414611:	sahf   
  414612:	cmp    edx,DWORD PTR [esi+0x2287a176]
  414618:	or     DWORD PTR [edi+0x71530046],edi
  41461e:	ss gs popf 
  414621:	hlt    
  414622:	lods   al,BYTE PTR ds:[esi]
  414623:	push   esp
  414624:	cmp    al,0x43
  414626:	dec    esi
  414627:	test   BYTE PTR [edi+0x6a0b4764],bh
  41462d:	ret    
  41462e:	cmp    al,0xe8
  414630:	xchg   edi,eax
  414631:	scas   al,BYTE PTR es:[edi]
  414632:	repnz ss pop ebp
  414635:	test   bl,cl
  414637:	mov    DWORD PTR [esi+0x2d],eax
  41463a:	jb     0x4146b6
  41463c:	pop    esp
  41463d:	dec    BYTE PTR [ebx-0x29]
  414640:	frstor [edi]
  414642:	xchg   ebx,eax
  414643:	xchg   DWORD PTR [ecx+0x5691288],eax
  414649:	dec    esi
  41464a:	imul   edx,DWORD PTR [ecx+0x7fec8ffc],0x31
  414651:	into   
  414652:	vpmaxsw xmm3,xmm0,XMMWORD PTR [eax]
  414656:	xchg   esi,eax
  414657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414658:	pop    edi
  414659:	out    0x1f,eax
  41465b:	js     0x414656
  41465d:	pop    ds
  41465e:	cmp    bl,al
  414660:	jge    0x414663
  414662:	jb     0x4146ce
  414664:	mov    DWORD PTR [ebx],ebp
  414666:	mov    WORD PTR [ebx],fs
  414668:	inc    esi
  414669:	add    bh,BYTE PTR [esi+0x587949d5]
  41466f:	xor    eax,0x652538f6
  414674:	push   es
  414675:	sub    ebp,ecx
  414677:	sub    BYTE PTR [edx],cl
  414679:	inc    eax
  41467a:	mov    ah,0xfe
  41467c:	sub    al,0xa6
  41467e:	mov    ?,WORD PTR [ecx]
  414680:	pop    ecx
  414681:	pop    esi
  414682:	test   dl,ah
  414684:	pop    edx
  414685:	cdq    
  414686:	lods   al,BYTE PTR ds:[esi]
  414687:	xor    al,0x80
  414689:	mov    esp,0x7fdee696
  41468e:	test   DWORD PTR [edx],esi
  414690:	loope  0x4146e9
  414692:	stc    
  414693:	jae    0x4146a7
  414695:	lods   eax,DWORD PTR ds:[esi]
  414696:	xor    DWORD PTR [eax],edx
  414698:	jbe    0x414691
  41469a:	and    BYTE PTR [ebx],al
  41469c:	xchg   BYTE PTR [eax+eax*8-0x508f805b],cl
  4146a3:	aas    
  4146a4:	sbb    eax,0x549f48ed
  4146a9:	jae    0x41470c
  4146ab:	push   es
  4146ac:	ins    DWORD PTR es:[edi],dx
  4146ad:	adc    DWORD PTR [ecx+0x29],0x80dbcdf7
  4146b4:	xchg   edx,eax
  4146b5:	mov    eax,ds:0xf1523876
  4146ba:	aam    0x53
  4146bc:	push   edi
  4146bd:	imul   ecx,DWORD PTR [eax-0x3c],0x42fbd4aa
  4146c4:	sar    DWORD PTR [edx],0x2b
  4146c7:	xchg   ebx,eax
  4146c8:	mov    eax,0xcf2c3e32
  4146cd:	xchg   ebx,eax
  4146ce:	lods   eax,DWORD PTR ds:[esi]
  4146cf:	pop    esp
  4146d0:	inc    edx
  4146d1:	pop    es
  4146d2:	mov    al,0x56
  4146d4:	mov    eax,gs
  4146d6:	jno    0x414738
  4146d8:	sub    DWORD PTR [edx],edx
  4146da:	bnd jmp 0x3d5f492b
  4146e0:	stos   BYTE PTR es:[edi],al
  4146e1:	push   ebx
  4146e2:	sbb    edi,DWORD PTR [edi+edi*4-0x12]
  4146e6:	dec    edx
  4146e7:	out    dx,al
  4146e8:	or     ch,BYTE PTR [eax-0x6248620]
  4146ee:	stos   DWORD PTR es:[edi],eax
  4146ef:	and    BYTE PTR [eax-0x711170b6],0x93
  4146f6:	push   es
  4146f7:	or     bh,bh
  4146f9:	and    al,0x3a
  4146fb:	mov    ecx,0xdab4cf62
  414700:	sbb    eax,ecx
  414702:	and    ah,cl
  414704:	jo     0xa303d247
  41470a:	xor    dh,0xe1
  41470d:	push   ebp
  41470e:	sbb    DWORD PTR [eax+eax*8+0x4d],edi
  414712:	out    0x1a,al
  414714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414715:	sub    DWORD PTR gs:[esi-0x51342182],0x523dbae
  414720:	int3   
  414721:	cwde   
  414722:	inc    ecx
  414723:	lock call 0xf2595cfa
  414729:	mov    dh,ch
  41472b:	cwde   
  41472c:	jb     0x41474b
  41472e:	fsubr  QWORD PTR [eax-0x1b]
  414731:	ret    
  414732:	stos   BYTE PTR es:[edi],al
  414733:	mov    dl,0x23
  414735:	pushf  
  414736:	jecxz  0x414709
  414738:	or     BYTE PTR [ecx-0x56],dh
  41473b:	les    ebp,FWORD PTR [eax+0x43]
  41473e:	in     al,dx
  41473f:	pop    edi
  414740:	lods   al,BYTE PTR ds:[esi]
  414741:	xlat   BYTE PTR ds:[ebx]
  414742:	push   edx
  414743:	lsl    esp,sp
  414746:	arpl   si,si
  414748:	cmp    BYTE PTR [edx],bh
  41474a:	call   0xd4516272
  41474f:	or     DWORD PTR [eax+0x26b4785c],ecx
  414755:	out    0xf2,eax
  414757:	scas   al,BYTE PTR es:[edi]
  414758:	or     eax,0xdce5b2e7
  41475d:	in     eax,0x5
  41475f:	cmp    al,bl
  414761:	retf   0xa5fa
  414764:	call   0xce7e83df
  414769:	push   esp
  41476a:	xor    bh,BYTE PTR [esi]
  41476c:	lahf   
  41476d:	sbb    al,0xab
  41476f:	dec    esp
  414770:	fild   DWORD PTR [esi-0x74c14466]
  414776:	stos   DWORD PTR es:[edi],eax
  414777:	test   DWORD PTR [ebx+0x6a],ecx
  41477a:	paddusw mm5,QWORD PTR [ebp+0x7f1a380b]
  414781:	in     al,0xf4
  414783:	cmc    
  414784:	(bad)  
  414785:	sti    
  414786:	test   al,0xa8
  414788:	xor    BYTE PTR [eax-0x39],ch
  41478b:	ja     0x414802
  41478d:	jne    0x414713
  41478f:	data16 fild WORD PTR [edi-0x1]
  414793:	fs pop es
  414795:	sar    esi,0x66
  414798:	call   0x5646:0xca7b5e56
  41479f:	add    eax,0x9d3dc1a1
  4147a4:	out    0x47,al
  4147a6:	fistp  QWORD PTR [esi+0x1eb31bc0]
  4147ac:	xchg   esi,eax
  4147ad:	pop    es
  4147ae:	xchg   ecx,eax
  4147af:	lock or BYTE PTR [ecx+0x6bbe5209],ch
  4147b6:	outs   dx,DWORD PTR ds:[esi]
  4147b7:	sbb    eax,0x26863d31
  4147bc:	aas    
  4147bd:	mov    ch,0xab
  4147bf:	pushf  
  4147c0:	jp     0x4147ed
  4147c2:	jae    0x4147b6
  4147c4:	aam    0x6b
  4147c6:	es mov ebx,0x9a2bca23
  4147cc:	mov    bh,ch
  4147ce:	and    cl,al
  4147d0:	mov    al,0x11
  4147d2:	cld    
  4147d3:	or     ebx,DWORD PTR [edi+eiz*1]
  4147d6:	mov    fs,eax
  4147d8:	addr16 adc eax,0x428a5b35
  4147de:	stos   DWORD PTR es:[edi],eax
  4147df:	ss xchg ebp,eax
  4147e1:	dec    ecx
  4147e2:	fst    DWORD PTR [edi]
  4147e4:	push   edx
  4147e5:	(bad)  
  4147e6:	je     0x4147b8
  4147e8:	inc    esp
  4147e9:	dec    esp
  4147ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147eb:	mov    al,0xa4
  4147ed:	das    
  4147ee:	adc    ah,cl
  4147f0:	fwait
  4147f1:	mov    bh,0xd6
  4147f3:	out    dx,eax
  4147f4:	mov    esp,DWORD PTR [edi-0x4fbb957e]
  4147fa:	aam    0x4f
  4147fc:	mov    dl,0x6a
  4147fe:	fwait
  4147ff:	pop    eax
  414800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414801:	adc    BYTE PTR [esi+edi*1-0x5cab64a1],0xfa
  414809:	fs mov dl,dh
  41480c:	inc    ebp
  41480d:	adc    al,0x38
  41480f:	repz mov edx,0xfb797f4a
  414815:	leave  
  414816:	and    al,0x1
  414818:	shl    DWORD PTR [ebx-0x33],0xd8
  41481c:	mov    edi,0x5e215762
  414821:	pushf  
  414822:	in     eax,dx
  414823:	loope  0x4147f4
  414825:	lods   al,BYTE PTR ds:[esi]
  414826:	mov    edx,0x5b4969c3
  41482b:	(bad)  
  41482d:	cs stc 
  41482f:	cs push cs
  414831:	inc    esp
  414832:	lahf   
  414833:	xchg   DWORD PTR [edx-0x51],esp
  414836:	dec    esi
  414837:	or     BYTE PTR [ebx+eax*8],0x2f
  41483b:	daa    
  41483c:	dec    edi
  41483d:	xor    edi,edi
  41483f:	cmp    eax,0x3183197
  414844:	jno    0x414803
  414846:	dec    edi
  414847:	mov    esi,0x50418805
  41484c:	add    esp,DWORD PTR [esi+0x453fb23b]
  414852:	adc    al,0x57
  414854:	adc    al,0x49
  414856:	inc    ecx
  414857:	les    eax,FWORD PTR [ecx-0x52]
  41485a:	push   0x16
  41485c:	adc    ecx,edx
  41485e:	rcr    DWORD PTR [eax-0x7d],cl
  414861:	out    dx,al
  414862:	call   0x3c53:0x5ba1392b
  414869:	add    DWORD PTR [edx],edi
  41486b:	jns    0x414814
  41486d:	shl    DWORD PTR [ebx-0x337b2041],1
  414873:	cmp    al,0x6b
  414875:	push   es
  414876:	or     BYTE PTR [edx-0x7a982550],dl
  41487c:	mov    esi,0x88dc4e8f
  414881:	mov    esi,0xca05929b
  414886:	push   0xeef7fb1c
  41488b:	cmp    esp,DWORD PTR [eax+0x4e]
  41488e:	popa   
  41488f:	cmp    eax,0x31c1a68e
  414894:	xor    eax,DWORD PTR [edi+eax*1+0x2]
  414898:	pop    esp
  414899:	or     al,0xf1
  41489b:	jae    0x414899
  41489d:	ss jmp 0xc076:0x174491c6
  4148a5:	cmp    eax,0xaa2c86ab
  4148aa:	push   esp
  4148ab:	and    ah,ah
  4148ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ae:	ins    DWORD PTR es:[edi],dx
  4148af:	sub    BYTE PTR [edx+0x5f],cl
  4148b2:	jno    0x414904
  4148b4:	xor    esp,DWORD PTR [edi-0x320f47e9]
  4148ba:	lods   eax,DWORD PTR ds:[esi]
  4148bb:	loopne 0x4148a5
  4148bd:	ja     0x414844
  4148bf:	jb     0x414928
  4148c1:	mov    cs,WORD PTR [ecx+0x6f]
  4148c4:	test   eax,0xbe80bc18
  4148c9:	ins    BYTE PTR es:[edi],dx
  4148ca:	jne    0x414892
  4148cc:	std    
  4148cd:	jbe    0x414931
  4148cf:	pop    ss
  4148d0:	mov    ah,0x6d
  4148d2:	push   edi
  4148d3:	lahf   
  4148d4:	jno    0x4148c4
  4148d6:	sub    BYTE PTR [ebp+0x2d],cl
  4148d9:	pop    esi
  4148da:	push   0xffffffd0
  4148dc:	sti    
  4148dd:	sbb    BYTE PTR [edx+0x36],ch
  4148e0:	xor    bh,BYTE PTR [edi-0x1b91ad3f]
  4148e6:	out    dx,eax
  4148e7:	shl    BYTE PTR [esi-0xc],cl
  4148ea:	mov    esp,0xeaa44561
  4148ef:	loope  0x41487d
  4148f1:	call   0x856b:0x374822dc
  4148f8:	sub    DWORD PTR [esi-0x2b],edi
  4148fb:	push   edi
  4148fc:	sti    
  4148fd:	fcmovb st,st(2)
  4148ff:	out    0x5a,eax
  414901:	adc    DWORD PTR [ebx+0x1f8b61ab],ebp
  414907:	mov    dl,0x8
  414909:	or     dh,ah
  41490b:	jl     0x4148d0
  41490d:	mov    eax,ds:0xd6f5151
  414912:	fadd   DWORD PTR [ebx+0x16]
  414915:	xchg   ebx,eax
  414916:	stos   BYTE PTR es:[edi],al
  414917:	fs jno 0x4148fa
  41491a:	pushf  
  41491b:	jl     0x414923
  41491d:	outs   dx,DWORD PTR ds:[esi]
  41491e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41491f:	dec    esp
  414920:	mov    DWORD PTR [eax],edx
  414922:	in     al,dx
  414923:	aam    0x61
  414925:	dec    eax
  414926:	test   BYTE PTR [edx+0x64],0xe6
  41492a:	fmul   st(2),st
  41492c:	scas   eax,DWORD PTR es:[edi]
  41492d:	aas    
  41492e:	push   cs
  41492f:	pop    eax
  414930:	jnp    0x4149af
  414932:	dec    BYTE PTR [ecx+0x61]
  414935:	enter  0x2406,0xb8
  414939:	outs   dx,BYTE PTR ds:[esi]
  41493a:	test   DWORD PTR [ebp+ecx*1-0x474e0442],edi
  414941:	xchg   DWORD PTR [ebp-0x42],eax
  414944:	(bad)  
  414945:	shl    DWORD PTR [edi-0x58],cl
  414948:	add    al,0x3
  41494a:	rol    BYTE PTR [eax-0x4],cl
  41494d:	test   al,0xe0
  41494f:	test   eax,0xf437a7eb
  414954:	(bad)  
  414955:	fsub   DWORD PTR [ecx-0x1b]
  414958:	xchg   edx,eax
  414959:	sbb    ecx,DWORD PTR [esi]
  41495b:	pop    ebx
  41495c:	mov    bl,0x98
  41495e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414960:	cwde   
  414961:	lahf   
  414962:	cmp    eax,0xc159c7a2
  414967:	sub    eax,0x23662007
  41496c:	xchg   esi,eax
  41496d:	arpl   WORD PTR [ecx+0x5a],ax
  414970:	mov    al,0x96
  414972:	cli    
  414973:	adc    al,0x13
  414975:	(bad)  
  414976:	push   ss
  414977:	push   esp
  414978:	(bad)  
  414979:	xchg   ebx,eax
  41497a:	imul   esi,edi,0x60623bed
  414980:	sar    BYTE PTR [esi+0x71b2ac2a],1
  414986:	jb     0x4149dc
  414988:	lods   al,BYTE PTR cs:[esi]
  41498a:	mov    al,ds:0x709a895a
  41498f:	xchg   eax,ebp
  414991:	dec    esp
  414992:	cli    
  414993:	mov    ebp,0xad335325
  414998:	andnps xmm3,XMMWORD PTR [esi+0x3]
  41499c:	or     al,0xce
  41499e:	dec    edx
  41499f:	xchg   esi,eax
  4149a0:	jo     0x414928
  4149a2:	iret   
  4149a3:	xor    eax,0xbca9fcbd
  4149a8:	ret    0x225f
  4149ab:	aaa    
  4149ac:	jno    0x4149b4
  4149ae:	xor    eax,0x36b64903
  4149b3:	mov    BYTE PTR [ebx-0x4d],bl
  4149b6:	cmp    DWORD PTR [ebx+ebx*8-0x67],esi
  4149ba:	aam    0x43
  4149bc:	adc    dl,BYTE PTR [edx-0x74]
  4149bf:	stc    
  4149c0:	and    al,0x85
  4149c2:	xchg   esp,eax
  4149c3:	add    cl,bl
  4149c5:	xor    eax,0x714a0a1a
  4149ca:	mov    ss,WORD PTR [esi]
  4149cc:	mov    es,WORD PTR [edx-0x1]
  4149cf:	pop    ecx
  4149d0:	xchg   esp,eax
  4149d1:	test   al,0x3f
  4149d3:	adc    esi,DWORD PTR [ecx]
  4149d5:	or     ebx,esi
  4149d7:	outs   dx,BYTE PTR ds:[esi]
  4149d8:	es ret 0x4f39
  4149dc:	sbb    edi,esp
  4149de:	xor    esp,edi
  4149e0:	idiv   DWORD PTR [ecx-0xdb95ed8]
  4149e6:	jecxz  0x4149bf
  4149e8:	popf   
  4149e9:	lds    edi,FWORD PTR [esi+0x19]
  4149ec:	jns    0x414979
  4149ee:	aad    0x19
  4149f0:	adc    al,0x9a
  4149f2:	into   
  4149f3:	clc    
  4149f4:	mov    BYTE PTR [eax],ch
  4149f6:	or     eax,0x26280e41
  4149fb:	sub    BYTE PTR ss:[eax+ecx*1+0x675b0e73],al
  414a03:	dec    edx
  414a04:	ja     0x4149f1
  414a06:	aas    
  414a07:	or     esp,DWORD PTR [ebp+0x1c]
  414a0a:	dec    esi
  414a0b:	mov    dh,0x97
  414a0d:	in     al,0xd4
  414a0f:	inc    edi
  414a10:	fwait
  414a11:	ret    
  414a12:	jnp    0x4149b7
  414a14:	add    al,0x3c
  414a16:	sub    al,al
  414a18:	jo     0x4149a8
  414a1a:	adc    dl,bh
  414a1c:	mov    dh,0x37
  414a1e:	je     0x414a35
  414a20:	pop    ebx
  414a21:	int    0x53
  414a23:	jecxz  0x4149a7
  414a25:	mov    al,0x41
  414a27:	pop    ds
  414a28:	loop   0x414a62
  414a2a:	pop    ebx
  414a2b:	in     eax,dx
  414a2c:	cwde   
  414a2d:	mov    BYTE PTR [ebp-0x3],dh
  414a30:	or     eax,0x8ab0cc69
  414a35:	sub    eax,edi
  414a37:	adc    dh,bl
  414a39:	push   0xe9374fe0
  414a3e:	pop    ss
  414a3f:	cmp    eax,0x73d0e6d2
  414a44:	test   DWORD PTR [edi],0x60a53b78
  414a4a:	mov    cl,0x21
  414a4c:	stos   BYTE PTR es:[edi],al
  414a4d:	stos   DWORD PTR es:[edi],eax
  414a4e:	mov    ch,0x9f
  414a50:	mov    eax,esi
  414a52:	(bad)  
  414a53:	jno    0x414a57
  414a55:	mov    ?,edx
  414a57:	imul   ebp,eax,0x1f558ff0
  414a5d:	adc    BYTE PTR [ecx+0x21],ah
  414a60:	xchg   BYTE PTR [eax+ecx*1-0x34ec18ef],dl
  414a67:	fs out dx,eax
  414a69:	lods   al,BYTE PTR ds:[esi]
  414a6a:	cs xor al,0x72
  414a6d:	addr16 sbb eax,0x660f4705
  414a73:	jns    0x414a39
  414a75:	xchg   ebp,eax
  414a76:	cmp    DWORD PTR [edx],esp
  414a78:	xchg   DWORD PTR [ebp+0x2cc22a76],ecx
  414a7e:	cli    
  414a7f:	clc    
  414a80:	push   cs
  414a81:	addr16 data16 repz jmp 0x414a67
  414a86:	mov    ecx,0x7e1d2a18
  414a8b:	mov    dh,al
  414a8d:	push   eax
  414a8e:	mov    edx,0x52c3dc1c
  414a93:	stos   DWORD PTR es:[edi],eax
  414a94:	mov    bh,0xfe
  414a96:	fs mov ebx,0x50c5dd88
  414a9c:	call   0xbea47bb5
  414aa1:	ds push cs
  414aa3:	adc    BYTE PTR [esi-0x4d58112d],ah
  414aa9:	pmulhuw mm2,mm4
  414aac:	cmc    
  414aad:	mov    edx,DWORD PTR [ebx]
  414aaf:	xor    eax,0x2adc1e5c
  414ab4:	sub    cl,BYTE PTR [edx]
  414ab6:	rol    DWORD PTR [ebp-0x566e072],cl
  414abc:	imul   ebx,DWORD PTR [edx],0xc645eee8
  414ac2:	mov    edi,0xddb393
  414ac7:	mov    al,ds:0xbff5efa1
  414acc:	rcl    DWORD PTR [ebx-0x2de4e61a],cl
  414ad2:	inc    ebx
  414ad3:	xchg   ecx,eax
  414ad4:	pop    esp
  414ad5:	pop    ds
  414ad6:	data16 fstp TBYTE PTR [ebx]
  414ad9:	xor    bh,BYTE PTR [esi+0x7e77ee69]
  414adf:	in     eax,dx
  414ae0:	or     DWORD PTR [eax],eax
  414ae2:	mov    eax,ds:0x429ef647
  414ae7:	not    DWORD PTR [ebp-0x6b8aa2ea]
  414aed:	dec    edi
  414aee:	jmp    0xadec:0xaac29bcd
  414af5:	pop    ebp
  414af6:	add    ah,al
  414af8:	inc    eax
  414af9:	jl     0x414b11
  414afb:	push   eax
  414afc:	mov    esi,0x252329c1
  414b01:	inc    esi
  414b02:	out    0x27,eax
  414b04:	bound  ecx,QWORD PTR [esp+ebx*8]
  414b07:	fsub   st,st(5)
  414b09:	cmp    DWORD PTR [ebx],esi
  414b0b:	adc    bl,dl
  414b0d:	int3   
  414b0e:	add    BYTE PTR [edx+0x3f94a211],dl
  414b14:	aad    0xbe
  414b16:	push   0xb82369bf
  414b1b:	xchg   esi,eax
  414b1c:	loop   0x414b2d
  414b1e:	pop    ds
  414b1f:	xchg   ecx,eax
  414b20:	js     0x414b6e
  414b22:	pop    ecx
  414b23:	push   edx
  414b24:	gs popa 
  414b26:	and    BYTE PTR [ebp+0x13d5a769],dl
  414b2c:	pop    ecx
  414b2d:	mov    DWORD PTR [ebp+ebp*4+0x4c8bc4a3],ecx
  414b34:	popf   
  414b35:	call   0xa2bf:0x8704ff2b
  414b3c:	fs inc ecx
  414b3e:	mov    BYTE PTR [ebx],cl
  414b40:	mov    bh,0xbc
  414b42:	imul   DWORD PTR [esi-0x3d75668e]
  414b48:	mov    cl,0xf1
  414b4a:	shr    BYTE PTR [ebx],0x4a
  414b4d:	adc    eax,0x4acca9c3
  414b52:	or     BYTE PTR [edi+eiz*4-0x7414bf67],ah
  414b59:	push   edx
  414b5a:	das    
  414b5b:	int    0x6a
  414b5d:	or     bh,BYTE PTR [ecx+0x14]
  414b60:	push   esi
  414b61:	in     eax,0x65
  414b63:	aaa    
  414b64:	aad    0xa1
  414b66:	jg     0x414b76
  414b68:	sbb    BYTE PTR [edx-0x5b],bh
  414b6b:	es push edi
  414b6d:	outs   dx,DWORD PTR ds:[esi]
  414b6e:	je     0x414bb7
  414b70:	dec    edx
  414b71:	pop    esp
  414b72:	data16 jo 0x414b82
  414b75:	xchg   ecx,eax
  414b76:	(bad)  
  414b78:	inc    eax
  414b79:	cmp    edi,0x62
  414b7c:	add    ebp,DWORD PTR ds:0x6420eec3
  414b82:	pusha  
  414b83:	test   al,0xc3
  414b85:	in     al,0x4f
  414b87:	inc    esp
  414b88:	xor    eax,0x4909ccfb
  414b8d:	sub    ebp,eax
  414b8f:	xchg   ebx,eax
  414b90:	(bad)  
  414b91:	xor    eax,0x65752a23
  414b96:	or     al,0x2b
  414b98:	outs   dx,DWORD PTR ds:[esi]
  414b99:	add    ecx,DWORD PTR gs:[ecx]
  414b9c:	xor    BYTE PTR [edx],dl
  414b9e:	sub    DWORD PTR [edi-0x3bbcd7ca],0xffffffb6
  414ba5:	les    esp,FWORD PTR [ebx]
  414ba7:	mov    eax,0x42a9408e
  414bac:	stos   BYTE PTR es:[edi],al
  414bad:	mov    BYTE PTR [eax],bh
  414baf:	mov    al,ds:0x2228ebde
  414bb4:	xor    eax,0xd69496da
  414bb9:	ss daa 
  414bbb:	push   0x6e
  414bbd:	(bad)  [ecx-0x2f]
  414bc0:	mov    ebx,0xd79a39a6
  414bc5:	sahf   
  414bc6:	jne    0x414bf5
  414bc8:	push   ebp
  414bc9:	pop    ebx
  414bca:	ds jp  0x414c11
  414bcd:	ins    DWORD PTR es:[edi],dx
  414bce:	test   BYTE PTR [esi+0x5b],bl
  414bd1:	mov    bh,0x3f
  414bd3:	retf   
  414bd4:	jp     0x414c03
  414bd6:	in     al,dx
  414bd7:	inc    eax
  414bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd9:	rol    BYTE PTR [esi],cl
  414bdb:	nop
  414bdc:	mov    bh,0xe0
  414bde:	mov    eax,0xf1d5c944
  414be3:	test   ecx,edi
  414be5:	xor    al,0xdb
  414be7:	dec    esi
  414be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414be9:	dec    ebp
  414bea:	in     al,dx
  414beb:	je     0x414bce
  414bed:	adc    al,0x43
  414bef:	mov    al,ds:0x4f45b0c0
  414bf4:	lfs    edi,FWORD PTR [edx+esi*1]
  414bf8:	jecxz  0x414c5c
  414bfa:	je     0x414c10
  414bfc:	sbb    eax,0x5d7ee7cf
  414c01:	or     ch,dh
  414c03:	push   eax
  414c04:	icebp  
  414c05:	mov    bl,0xad
  414c07:	dec    esp
  414c08:	loopne 0x414c7d
  414c0a:	xchg   DWORD PTR [ecx+eax*8],eax
  414c0d:	scas   al,BYTE PTR es:[edi]
  414c0e:	fnstcw WORD PTR [ebp-0x1]
  414c11:	fidiv  WORD PTR [edi-0x270b765a]
  414c17:	mov    WORD PTR ds:0x6647fa75,?
  414c1d:	and    ebp,ebp
  414c1f:	arpl   WORD PTR [eax+eiz*2-0xe],ax
  414c23:	cmp    DWORD PTR [ebx],0xc3528bfc
  414c29:	addr16 xchg ebp,eax
  414c2b:	adc    bl,dl
  414c2d:	dec    edi
  414c2e:	cmp    al,dh
  414c30:	inc    edx
  414c31:	pop    esi
  414c32:	inc    edi
  414c33:	in     al,dx
  414c34:	jmp    0x414c93
  414c36:	add    ch,dl
  414c38:	xchg   BYTE PTR [ecx-0x7b],al
  414c3b:	mov    cl,0x4a
  414c3d:	jae    0x414bc3
  414c3f:	aad    0x88
  414c41:	xchg   esp,eax
  414c42:	dec    ebp
  414c43:	push   ds
  414c44:	cmp    bl,BYTE PTR [edx+edx*8]
  414c47:	out    dx,al
  414c48:	push   esi
  414c49:	mov    esp,0x43d67c7a
  414c4e:	js     0x414c66
  414c50:	pop    edi
  414c51:	push   es
  414c52:	xor    BYTE PTR [ebp+ebx*8-0x305c0d17],0xc5
  414c5a:	sbb    ebp,DWORD PTR [eax-0x442511a8]
  414c60:	adc    ch,BYTE PTR [ebx+ecx*8]
  414c63:	leave  
  414c64:	jecxz  0x414c4b
  414c66:	cdq    
  414c67:	inc    edi
  414c68:	scas   al,BYTE PTR es:[edi]
  414c69:	test   eax,0x3da303df
  414c6e:	mov    DWORD PTR [esi+0x3b3bc74c],esp
  414c74:	jle    0x414c88
  414c76:	push   0xbdcd1799
  414c7b:	mov    al,0x5a
  414c7d:	inc    esi
  414c7e:	pop    edi
  414c7f:	add    eax,0x311890c8
  414c84:	push   edx
  414c85:	gs dec eax
  414c87:	or     al,0x38
  414c89:	add    BYTE PTR [eax+0x7],bl
  414c8c:	pop    ds
  414c8d:	out    dx,eax
  414c8e:	into   
  414c8f:	pop    edx
  414c90:	sub    BYTE PTR [edi+0x217c943f],ch
  414c96:	push   cs
  414c97:	mov    ecx,0x3345fc4d
  414c9c:	test   DWORD PTR [esp+esi*1+0x6634df36],eax
  414ca3:	in     al,dx
  414ca4:	hlt    
  414ca5:	jbe    0x414c28
  414ca7:	adc    DWORD PTR [ecx+ebp*4+0x61],eax
  414cab:	sbb    esp,edx
  414cad:	dec    ecx
  414cae:	mov    DWORD PTR [eax+edx*2],edx
  414cb1:	arpl   WORD PTR [ebp+ecx*1+0x1183a958],cx
  414cb8:	outs   dx,DWORD PTR ds:[esi]
  414cb9:	and    dh,0xa9
  414cbc:	push   edx
  414cbd:	push   es
  414cbe:	fs sub bh,0xe8
  414cc2:	push   ds
  414cc3:	mov    dl,0x7f
  414cc5:	and    bl,cl
  414cc7:	loopne 0x414cae
  414cc9:	icebp  
  414cca:	pop    esp
  414ccb:	pop    esp
  414ccc:	mov    al,0x21
  414cce:	icebp  
  414ccf:	add    DWORD PTR [eax],esp
  414cd1:	pop    es
  414cd2:	pop    esp
  414cd3:	mov    bl,0x12
  414cd5:	add    edx,DWORD PTR [ebp+0x2]
  414cd8:	jp     0x414d2b
  414cda:	(bad)  
  414cdb:	sub    al,0xec
  414cdd:	inc    eax
  414cde:	shr    ecx,cl
  414ce0:	inc    esi
  414ce1:	or     ebp,DWORD PTR [ebx]
  414ce3:	mov    edx,0xbcbc069d
  414ce8:	stos   BYTE PTR es:[edi],al
  414ce9:	daa    
  414cea:	test   eax,0x3a98de30
  414cef:	jge    0x414d0e
  414cf1:	sbb    al,0xba
  414cf3:	jno    0x414cd5
  414cf5:	xchg   esp,eax
  414cf6:	xor    BYTE PTR [ecx-0x131ec599],al
  414cfc:	popa   
  414cfd:	into   
  414cfe:	inc    eax
  414cff:	pop    ebp
  414d00:	and    DWORD PTR [esi-0x4d],esp
  414d03:	enter  0x2067,0xd1
  414d07:	jge    0x414d08
  414d09:	bound  esp,QWORD PTR [edi-0x5980e4eb]
  414d0f:	mov    al,0xc9
  414d11:	cmp    BYTE PTR [edx-0x5cbc9a4f],cl
  414d17:	jg     0x414cc8
  414d19:	outs   dx,DWORD PTR ds:[esi]
  414d1a:	(bad)  
  414d1b:	into   
  414d1c:	rcl    edi,1
  414d1e:	cwde   
  414d1f:	sub    esi,edx
  414d21:	xor    BYTE PTR [ecx],dl
  414d23:	adc    eax,0xb50030af
  414d28:	push   0xffffffba
  414d2a:	sub    edx,DWORD PTR [edx+0x6ac770cc]
  414d30:	gs push edx
  414d32:	iret   
  414d33:	mov    eax,ds:0xf5c75fd0
  414d38:	lahf   
  414d39:	inc    ebp
  414d3a:	rol    ch,cl
  414d3c:	xchg   ecx,eax
  414d3d:	call   0x57f1:0x478bccdf
  414d44:	add    BYTE PTR [esi-0x3d],bh
  414d47:	mov    ebp,0xb7137e53
  414d4c:	dec    eax
  414d4d:	mov    DWORD PTR [ecx+eiz*2+0x5],eax
  414d51:	loope  0x414d82
  414d53:	add    BYTE PTR [ebp+0x4b],ah
  414d56:	arpl   WORD PTR [edi+eax*4],dx
  414d59:	outs   dx,DWORD PTR ds:[esi]
  414d5a:	int3   
  414d5b:	sbb    BYTE PTR [ebp+0x87f0aca],cl
  414d61:	scas   al,BYTE PTR es:[edi]
  414d62:	xchg   ecx,eax
  414d63:	(bad)  
  414d64:	in     eax,dx
  414d65:	pop    ss
  414d66:	repz ror DWORD PTR [ebx-0x5f6f08c7],cl
  414d6d:	gs lahf 
  414d6f:	mov    edx,ds
  414d71:	sti    
  414d72:	push   ss
  414d73:	stos   BYTE PTR es:[edi],al
  414d74:	xchg   esi,eax
  414d75:	pop    esi
  414d76:	xor    esi,eax
  414d78:	cmp    edi,DWORD PTR [ebp+eax*1+0x25]
  414d7c:	dec    edi
  414d7d:	in     eax,dx
  414d7e:	adc    DWORD PTR [ecx-0x860d439],edx
  414d84:	in     al,0xab
  414d86:	enter  0x889,0x24
  414d8a:	sti    
  414d8b:	cmp    BYTE PTR [ebx+edx*4-0x6f],al
  414d8f:	les    esp,FWORD PTR [eax+edx*1+0x1b71435f]
  414d96:	or     BYTE PTR ds:0x71fd590e,bh
  414d9c:	mov    eax,ds:0x6cc399f6
  414da1:	add    DWORD PTR [ebx+edx*2],eax
  414da4:	out    0x9c,al
  414da6:	push   edi
  414da7:	fstp   DWORD PTR [eax+0x36]
  414daa:	sub    ecx,DWORD PTR [esi-0x2e]
  414dad:	cld    
  414dae:	pop    esp
  414daf:	mov    bh,0x39
  414db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414db2:	mov    bh,0x5b
  414db4:	mov    al,0xfe
  414db6:	cs call 0xc87bfc6d
  414dbc:	ins    DWORD PTR es:[edi],dx
  414dbd:	das    
  414dbe:	mov    ecx,0xed4fd422
  414dc3:	mov    dl,0x18
  414dc5:	sbb    eax,0xb71245f8
  414dca:	pop    ss
  414dcb:	fdivp  st(3),st
  414dcd:	xor    al,0x9
  414dcf:	fwait
  414dd0:	pop    ebx
  414dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd2:	outs   dx,BYTE PTR ds:[esi]
  414dd3:	(bad)  
  414dd4:	das    
  414dd5:	outs   dx,DWORD PTR ds:[esi]
  414dd6:	sti    
  414dd7:	cli    
  414dd8:	and    DWORD PTR [ebx],ebp
  414dda:	rcl    BYTE PTR [eax+ecx*4-0x54],cl
  414dde:	mov    esp,0xdf612b1d
  414de3:	es jecxz 0x414e37
  414de6:	in     eax,0xd2
  414de8:	dec    esi
  414de9:	test   al,0x12
  414deb:	daa    
  414dec:	inc    eax
  414ded:	call   0x988a8ffe
  414df2:	push   edx
  414df3:	fcmove st,st(4)
  414df5:	sbb    dh,BYTE PTR [ebx+ebp*2-0x394a239]
  414dfc:	mov    ch,0x4b
  414dfe:	scas   al,BYTE PTR es:[edi]
  414dff:	pop    ds
  414e00:	in     eax,0x96
  414e02:	jmp    0xa06a:0x983a1799
  414e09:	jno    0x414dc2
  414e0b:	cmp    al,0xc0
  414e0d:	test   eax,0x9c78b128
  414e12:	loop   0x414e5a
  414e14:	cli    
  414e15:	(bad)  
  414e16:	dec    ebp
  414e17:	adc    esp,ecx
  414e19:	push   0xd381059e
  414e1e:	ret    
  414e1f:	ja     0x414dc5
  414e21:	loopne 0x414e1c
  414e23:	leave  
  414e24:	test   eax,0x1570b7f6
  414e29:	fsub   DWORD PTR ds:0x9a041ad2
  414e2f:	mov    edx,0x53fc32fd
  414e34:	inc    ebp
  414e35:	(bad)  
  414e37:	shr    al,1
  414e39:	xlat   BYTE PTR ds:[ebx]
  414e3a:	mov    ecx,0xc19d48a5
  414e3f:	(bad)  
  414e41:	or     ebp,esp
  414e43:	jg     0x414e6f
  414e45:	in     eax,0x1a
  414e47:	call   0xf419aae7
  414e4c:	mov    dh,0x82
  414e4e:	sti    
  414e4f:	push   0xffffff82
  414e51:	mov    ch,0x4e
  414e53:	cs or  al,0xdb
  414e56:	mov    esp,0x34defb23
  414e5b:	mov    ds:0x5b00444a,eax
  414e60:	(bad)  
  414e61:	repz inc ebp
  414e63:	out    0xfa,eax
  414e65:	and    al,0x63
  414e67:	push   esi
  414e68:	int3   
  414e69:	push   esp
  414e6a:	fcos   
  414e6c:	fbld   TBYTE PTR [eax+0x42c24dcf]
  414e72:	sti    
  414e73:	inc    edx
  414e74:	out    0xd7,eax
  414e76:	push   esi
  414e77:	jge    0x414ef6
  414e79:	sbb    DWORD PTR [edx+esi*1-0x2],esi
  414e7d:	test   DWORD PTR [eax],eax
  414e7f:	mov    esp,0x6a25db82
  414e84:	dec    ebp
  414e85:	and    ebx,DWORD PTR [esi]
  414e87:	popa   
  414e88:	jmp    0x414e5b
  414e8a:	popf   
  414e8b:	jae    0x414ea7
  414e8d:	test   DWORD PTR [edx+0x6895ad5f],edi
  414e93:	(bad)  [ebx+0x3b8b90ab]
  414e99:	ins    DWORD PTR es:[edi],dx
  414e9a:	inc    ebp
  414e9b:	pop    ebp
  414e9c:	and    al,BYTE PTR [edi+0x11467445]
  414ea2:	mov    ch,0x28
  414ea4:	xchg   ecx,eax
  414ea5:	lods   al,BYTE PTR ss:[esi]
  414ea7:	jl     0x414e2a
  414ea9:	aam    0xb2
  414eab:	cwde   
  414eac:	cld    
  414ead:	add    DWORD PTR [esi+ecx*8],0x4b03196e
  414eb4:	pop    ebx
  414eb5:	mov    al,0x26
  414eb7:	lock push ecx
  414eb9:	sahf   
  414eba:	push   ebp
  414ebb:	or     al,0x45
  414ebd:	(bad)  
  414ebe:	ins    BYTE PTR es:[edi],dx
  414ebf:	out    0x19,al
  414ec1:	lahf   
  414ec2:	mov    esi,0xd1877fac
  414ec7:	xor    edi,DWORD PTR [edx+0x23fbd826]
  414ecd:	adc    DWORD PTR [eax-0x72],0x23cd0ff7
  414ed4:	and    DWORD PTR [ebp+0x5c],0x99ebf122
  414edb:	xchg   edi,eax
  414edc:	dec    esp
  414edd:	cmc    
  414ede:	mov    BYTE PTR [ecx+0xc5cb217],0x70
  414ee5:	not    BYTE PTR [ecx+0x67308ecf]
  414eeb:	rcl    ah,0x38
  414eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eef:	pop    esp
  414ef0:	xchg   BYTE PTR [ebp+0x40b92b8],dl
  414ef6:	call   0x80f283dd
  414efb:	xchg   esp,eax
  414efc:	adc    bl,BYTE PTR [eax]
  414efe:	and    ebx,DWORD PTR [edx]
  414f00:	jg     0x414ef2
  414f02:	fcmove st,st(7)
  414f04:	jp     0x414eb5
  414f06:	sub    DWORD PTR [ebx+0x55387c4a],ebp
  414f0c:	repnz sar BYTE PTR [edi+0x4b],1
  414f10:	sub    BYTE PTR [ebx+edx*4+0x7f338879],ah
  414f17:	fwait
  414f18:	fwait
  414f19:	mov    ebx,0xdbdd01bf
  414f1e:	or     eax,0x901a2141
  414f23:	fsub   st,st(7)
  414f25:	pop    esi
  414f26:	inc    esp
  414f27:	shl    DWORD PTR [eax+0x11974768],1
  414f2d:	jae    0x414ed6
  414f2f:	xchg   BYTE PTR [esi+0x25],bl
  414f32:	xor    al,0xbb
  414f34:	cdq    
  414f35:	or     DWORD PTR [esi+eiz*2-0x20348486],eax
  414f3c:	(bad)
  414f40:	dec    esp
  414f41:	push   ebx
  414f42:	xor    dh,bl
  414f44:	fsubr  QWORD PTR [ebx]
  414f46:	ins    DWORD PTR es:[edi],dx
  414f47:	cli    
  414f48:	adc    ebp,edx
  414f4a:	pop    ds
  414f4b:	test   DWORD PTR ds:0xd6fc8e6b,esp
  414f51:	(bad)  
  414f52:	xchg   edi,eax
  414f53:	jmp    0x8c1c:0xf89e7e66
  414f5a:	test   al,0xd0
  414f5c:	add    DWORD PTR [ecx-0x64300f9d],esp
  414f62:	dec    esi
  414f63:	cmp    ah,BYTE PTR [edi-0x8646343]
  414f69:	mov    ebp,0x2efa216f
  414f6e:	pop    edi
  414f6f:	ror    BYTE PTR [esi],cl
  414f71:	(bad)  
  414f72:	shl    BYTE PTR [eax+0x0],1
  414f75:	loop   0x414fe0
  414f77:	test   DWORD PTR [esi-0x105966fe],ebp
  414f7d:	rcr    BYTE PTR [edx+0x51b0c09b],cl
  414f83:	xor    esi,ecx
  414f85:	in     al,0xfb
  414f87:	rcr    bh,1
  414f89:	retf   0x62a9
  414f8c:	loope  0x414f7d
  414f8e:	pop    edi
  414f8f:	lea    edx,[eax]
  414f91:	sar    DWORD PTR [edx],1
  414f93:	stos   BYTE PTR es:[edi],al
  414f94:	mov    al,0x90
  414f96:	dec    esp
  414f97:	push   ds
  414f98:	sbb    dl,BYTE PTR [esi]
  414f9a:	jle    0x414f3f
  414f9c:	dec    ebp
  414f9d:	aaa    
  414f9e:	shr    BYTE PTR [esi-0x67],0x53
  414fa2:	outs   dx,BYTE PTR ds:[esi]
  414fa3:	jg     0x414fe2
  414fa5:	push   ebp
  414fa6:	(bad)  ds:0xa0ca4710
  414fac:	cmp    bh,dl
  414fae:	push   ds
  414faf:	adc    eax,0x9efcb1c8
  414fb4:	fdiv   st,st(1)
  414fb6:	iret   
  414fb7:	jl     0x414fc9
  414fb9:	stc    
  414fba:	dec    ebp
  414fbb:	xor    eax,0xbcd39f07
  414fc0:	add    ebx,edi
  414fc2:	add    eax,0x3d6acde0
  414fc7:	imul   edi,DWORD PTR [eax-0x11],0xc
  414fcb:	shl    DWORD PTR [eax-0x1d],0x2b
  414fcf:	jb     0x414fe3
  414fd1:	out    0x74,eax
  414fd3:	loope  0x415041
  414fd5:	imul   eax,DWORD PTR [esi],0x646bff21
  414fdb:	icebp  
  414fdc:	fbstp  TBYTE PTR [esi]
  414fde:	aad    0xf1
  414fe0:	inc    edi
  414fe1:	mov    BYTE PTR [edi-0x15],dh
  414fe4:	mov    al,0x5d
  414fe6:	outs   dx,BYTE PTR ds:[esi]
  414fe7:	adc    DWORD PTR [esi+0x6e2b66a8],edx
  414fed:	jnp    0x414f9a
  414fef:	mov    ds,WORD PTR [ebx]
  414ff1:	aam    0x56
  414ff3:	jbe    0x414fce
  414ff5:	popf   
  414ff6:	dec    esi
  414ff7:	mov    bl,0x6d
  414ff9:	mov    dh,0x96
  414ffb:	pop    ss
  414ffc:	es adc BYTE PTR cs:[eax+0x25],bh
  415001:	pop    esp
  415002:	sub    BYTE PTR ds:0x1c64dbad,dh
  415008:	push   esp
  415009:	xchg   edi,eax
  41500a:	in     eax,dx
  41500b:	imul   eax,DWORD PTR [edx+0x46a12e4e],0x53fcaad8
  415015:	popa   
  415016:	(bad)  
  415017:	adc    ah,bh
  415019:	call   ebp
  41501b:	pop    ecx
  41501c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41501d:	daa    
  41501e:	xor    DWORD PTR [edx-0x70c30f62],esi
  415024:	and    eax,0xb2966f9d
  415029:	in     al,0x5f
  41502b:	das    
  41502c:	aad    0xdf
  41502e:	mov    bl,0x0
  415030:	pushf  
  415031:	sti    
  415032:	add    eax,DWORD PTR [esp+ebp*4]
  415035:	push   es
  415036:	jb     0x415026
  415038:	das    
  415039:	dec    eax
  41503a:	add    ebp,0x2f9cc082
  415040:	into   
  415041:	and    eax,0xb6204985
  415046:	lods   al,BYTE PTR ds:[esi]
  415047:	daa    
  415048:	cmp    eax,0xd5d3facd
  41504d:	mov    eax,es
  41504f:	jmp    0x414ff2
  415051:	ret    
  415052:	(bad)
  415055:	adc    al,0x27
  415057:	sbb    cl,ch
  415059:	repz popa 
  41505b:	jbe    0x414ffc
  41505d:	js     0x41500d
  41505f:	popf   
  415060:	scas   eax,DWORD PTR es:[edi]
  415061:	test   eax,0x4c0ab861
  415066:	data16 in al,0x6
  415069:	lds    edx,FWORD PTR [esp+0x65dc0c38]
  415070:	imul   eax,DWORD PTR [ebp+0x72],0x89c594a4
  415077:	jo     0x4150da
  415079:	inc    eax
  41507a:	jecxz  0x41502d
  41507c:	lods   al,BYTE PTR ds:[esi]
  41507d:	or     al,0xa6
  41507f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415080:	aaa    
  415081:	sti    
  415082:	cmp    BYTE PTR [esp+edx*2-0x5f],ch
  415086:	cli    
  415087:	outs   dx,DWORD PTR ds:[esi]
  415088:	ret    0x7e62
  41508b:	out    dx,al
  41508c:	aad    0xa1
  41508e:	icebp  
  41508f:	jae    0x41504d
  415091:	les    eax,FWORD PTR [eax]
  415093:	inc    ebx
  415094:	cmc    
  415095:	cmp    ecx,DWORD PTR [ebx-0x30]
  415098:	sbb    BYTE PTR [ecx-0x7a],bl
  41509b:	push   edi
  41509c:	push   edx
  41509d:	mov    esp,0x4055ecd5
  4150a2:	outs   dx,BYTE PTR ds:[esi]
  4150a3:	retf   0x79fa
  4150a6:	mov    dl,0x30
  4150a8:	add    dh,BYTE PTR [ebp-0x3cd90405]
  4150ae:	cmp    eax,0x89448663
  4150b3:	into   
  4150b4:	dec    ebx
  4150b5:	pop    ss
  4150b6:	sbb    dl,ah
  4150b8:	sub    BYTE PTR [ebx],cl
  4150ba:	les    ebp,FWORD PTR [ebx-0x42]
  4150bd:	cmp    dh,dh
  4150bf:	mov    DWORD PTR [ebx],ecx
  4150c1:	data16 int3 
  4150c3:	xor    al,0x57
  4150c5:	push   ebp
  4150c6:	loope  0x4150b1
  4150c8:	scas   eax,DWORD PTR es:[edi]
  4150c9:	out    0xe6,eax
  4150cb:	in     al,0x0
  4150cd:	add    DWORD PTR [esi*4+0x5de2097d],edi
  4150d4:	pop    ds
  4150d5:	cli    
  4150d6:	cs ja  0x41511c
  4150d9:	jl     0x415060
  4150db:	adc    ch,BYTE PTR [ebp+0x36fa632e]
  4150e1:	stos   BYTE PTR es:[edi],al
  4150e2:	xor    eax,0x5a4e16e7
  4150e7:	inc    eax
  4150e8:	dec    ebp
  4150e9:	or     BYTE PTR [ebx+0x16],ch
  4150ec:	icebp  
  4150ed:	jo     0x415095
  4150ef:	(bad)
  4150f2:	leave  
  4150f3:	jg     0x415088
  4150f5:	or     BYTE PTR [esi+eiz*1+0x2de55b6f],dh
  4150fc:	lock addr16 adc eax,0x3d4a93aa
  415103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415104:	daa    
  415105:	mov    edi,DWORD PTR [ecx+0x5b5b91dc]
  41510b:	sub    BYTE PTR [ebx+0x646265f2],ah
  415111:	lahf   
  415112:	stc    
  415113:	xchg   esi,eax
  415114:	cmp    esi,DWORD PTR [ebp-0x568e0dd3]
  41511a:	or     bh,bh
  41511c:	cmp    BYTE PTR [ebx],ch
  41511e:	jmp    0x7a74301e
  415123:	cmp    WORD PTR [ecx+edx*1-0x24100fdb],bp
  41512b:	loope  0x41516e
  41512d:	gs pop ss
  41512f:	pop    ds
  415130:	push   0xd230b4f6
  415135:	(bad)  
  415136:	aad    0x5e
  415138:	aad    0x52
  41513a:	jg     0x415133
  41513c:	hlt    
  41513d:	inc    esp
  41513e:	jbe    0x41518f
  415140:	mov    ecx,DWORD PTR [ecx+0x4b]
  415143:	jle    0x4150d2
  415145:	fadd   st(0),st
  415147:	sar    DWORD PTR ds:0x7636573e,cl
  41514d:	xor    DWORD PTR [ebp+0x49478edc],eax
  415153:	lods   al,BYTE PTR ds:[esi]
  415154:	pop    ebp
  415155:	xchg   ecx,eax
  415156:	jle    0x415106
  415158:	inc    esp
  415159:	fwait
  41515a:	(bad)  
  41515b:	pop    edi
  41515c:	dec    esi
  41515d:	mov    ah,0x8e
  41515f:	leave  
  415160:	ror    al,1
  415162:	call   0x5fbb:0x6026d120
  415169:	push   ebp
  41516a:	out    0x85,al
  41516c:	rcl    DWORD PTR [edi-0x4153301c],0x5a
  415173:	mov    esi,0xfbf3ebe5
  415178:	jmp    0xbdfe453f
  41517d:	and    cl,BYTE PTR [ebp-0x1489e2ff]
  415183:	or     esp,DWORD PTR [edi+0x14]
  415186:	jo     0x4151d2
  415188:	cmp    eax,0xb0e4a3b2
  41518d:	into   
  41518e:	iret   
  41518f:	mov    bl,0xfc
  415191:	pop    ebp
  415192:	or     al,0xd2
  415194:	(bad)  [ebp-0x6d]
  415197:	push   cs
  415198:	adc    esi,0x6527b2e5
  41519e:	push   ss
  41519f:	enter  0x2235,0xfa
  4151a3:	xor    ebx,eax
  4151a5:	mov    esi,0x9ed40019
  4151aa:	inc    ecx
  4151ab:	jno    0x415170
  4151ad:	inc    edi
  4151ae:	jbe    0x415157
  4151b0:	shl    DWORD PTR [edi-0x4b],1
  4151b3:	ss retf 0xca38
  4151b7:	dec    eax
  4151b8:	jp     0x415232
  4151ba:	pop    esp
  4151bb:	xlat   BYTE PTR ds:[ebx]
  4151bc:	(bad)  
  4151bd:	xor    dh,BYTE PTR [ecx-0x32]
  4151c0:	rcr    cl,cl
  4151c2:	jne    0x4151af
  4151c4:	iret   
  4151c5:	add    BYTE PTR [edx+0x5b324e63],0x57
  4151cc:	pop    edx
  4151cd:	lock pop esi
  4151cf:	jmp    0x7db6e995
  4151d4:	out    dx,eax
  4151d5:	ds pop ds
  4151d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d8:	leave  
  4151d9:	jbe    0x4151fc
  4151db:	sbb    al,0x7b
  4151dd:	fdiv   st,st(7)
  4151df:	pop    es
  4151e0:	dec    edi
  4151e1:	int    0x4d
  4151e3:	pushf  
  4151e4:	imul   ebp,DWORD PTR [ebx+0x4365e1da],0x25510e79
  4151ee:	data16 ja 0x415260
  4151f1:	or     al,0xaa
  4151f3:	xchg   DWORD PTR [eax],ebp
  4151f5:	in     al,dx
  4151f6:	sbb    edx,DWORD PTR [esi]
  4151f8:	add    dh,bh
  4151fa:	mov    DWORD PTR [ecx],ebp
  4151fc:	mov    DWORD PTR [ebx+ebp*8+0x727bd3bc],ebp
  415203:	outs   dx,DWORD PTR ds:[esi]
  415204:	mov    fs,WORD PTR [eax+0x6b76d5e6]
  41520a:	and    al,0x22
  41520c:	dec    eax
  41520d:	out    0xf7,eax
  41520f:	aad    0x8f
  415211:	retf   0xe455
  415214:	or     al,0x29
  415216:	int3   
  415217:	cmp    DWORD PTR [eax-0x28],eax
  41521a:	je     0x4151b3
  41521c:	jns    0x41524e
  41521e:	fdiv   DWORD PTR [ecx+0x33de9fef]
  415224:	lods   eax,DWORD PTR ds:[esi]
  415225:	mov    esi,0x6c14a5c2
  41522a:	sar    BYTE PTR [esp+eiz*2],1
  41522d:	fistp  WORD PTR [esp+ebp*8-0x60aae784]
  415234:	jno    0x41525f
  415236:	and    dh,dl
  415238:	mov    esi,0xe119f43c
  41523d:	mov    cl,0x95
  41523f:	and    al,0xef
  415241:	fcom   st(4)
  415243:	sub    al,bl
  415245:	sbb    eax,0x9be31154
  41524a:	jno    0x41522d
  41524c:	das    
  41524d:	sti    
  41524e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41524f:	(bad)  [ebx+edi*4]
  415252:	sar    BYTE PTR [eax+0x21],0x43
  415256:	ds test cl,al
  415259:	push   es
  41525a:	xchg   esp,eax
  41525b:	mov    edi,0x42b836ae
  415260:	(bad)  
  415261:	mov    eax,ds:0x73c9dcd1
  415266:	aaa    
  415267:	in     al,0x63
  415269:	xlat   BYTE PTR ds:[ebx]
  41526a:	pop    eax
  41526b:	in     al,dx
  41526c:	fs add eax,0x4dbaaed2
  415272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415273:	adc    DWORD PTR [edx-0x31],edi
  415276:	clc    
  415277:	scas   al,BYTE PTR es:[edi]
  415278:	xchg   esi,eax
  415279:	es repz mov dl,0xe2
  41527d:	call   FWORD PTR [edx+0x76]
  415280:	das    
  415281:	pop    ebp
  415282:	xchg   ecx,eax
  415283:	dec    edx
  415284:	inc    esp
  415285:	call   0x9c0a:0xe24702e1
  41528c:	mov    WORD PTR [ebp+0x5994734],ss
  415292:	div    BYTE PTR [eax-0x75]
  415295:	addr16 jo 0x4152a2
  415298:	pop    ecx
  415299:	xchg   ebx,eax
  41529a:	inc    edx
  41529b:	add    ecx,DWORD PTR [ecx]
  41529d:	sub    DWORD PTR [ebx],eax
  41529f:	mov    bh,0xae
  4152a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a2:	adc    eax,DWORD PTR [esi-0x4dd8a841]
  4152a8:	xor    bl,BYTE PTR [ebx]
  4152aa:	cmp    al,0x27
  4152ad:	or     BYTE PTR [edi],bl
  4152af:	jns    0x4152fa
  4152b1:	out    dx,eax
  4152b2:	les    ebx,FWORD PTR [edx]
  4152b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b5:	data16 stos BYTE PTR es:[edi],al
  4152b7:	push   edx
  4152b8:	outs   dx,DWORD PTR ds:[esi]
  4152b9:	dec    esp
  4152ba:	addr16 mov esp,0x76bac66a
  4152c0:	les    ebp,FWORD PTR [ecx+ebp*8-0x3ebcc132]
  4152c7:	clc    
  4152c8:	ds jle 0x415287
  4152cb:	mov    bl,0x97
  4152cd:	xchg   edi,eax
  4152ce:	scas   eax,DWORD PTR es:[edi]
  4152cf:	push   DWORD PTR [ebx+0x6f74da3c]
  4152d5:	int    0x66
  4152d7:	retf   
  4152d8:	test   al,0x81
  4152da:	mov    ecx,0xed278f4d
  4152df:	dec    ecx
  4152e0:	rdmsr  
  4152e2:	pop    esp
  4152e3:	loop   0x415335
  4152e5:	jmp    0xc127:0x8bc103eb
  4152ec:	loopne 0x4152cd
  4152ee:	fidiv  DWORD PTR [ebp+0x3d125d92]
  4152f4:	mov    edi,0x6880f92
  4152f9:	ss push ebx
  4152fb:	mov    ebx,0xb5c5f644
  415300:	and    al,0x33
  415302:	sub    DWORD PTR [eax],ebx
  415304:	mov    esi,ebp
  415306:	push   esp
  415307:	enter  0xc1b5,0x49
  41530b:	fstp   TBYTE PTR [edi-0x1bd01d3a]
  415311:	sbb    ecx,edx
  415313:	fs mov dh,0x6
  415316:	pop    edx
  415317:	lock jge 0x415353
  41531a:	jns    0x415349
  41531c:	and    bl,BYTE PTR [ecx]
  41531e:	xchg   ebx,esi
  415320:	pop    es
  415321:	nop
  415322:	pop    edi
  415323:	repz loopne 0x4152f2
  415326:	js     0x4152df
  415328:	in     al,dx
  415329:	mov    al,ds:0x7d17503f
  41532e:	inc    esp
  41532f:	popa   
  415330:	retf   0x6b48
  415333:	or     esp,ebx
  415335:	pop    esi
  415336:	test   al,0xb7
  415338:	inc    edx
  415339:	push   ss
  41533a:	rcr    DWORD PTR [ecx],cl
  41533c:	ins    DWORD PTR es:[edi],dx
  41533d:	popa   
  41533e:	rol    esi,0x61
  415341:	pusha  
  415342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415343:	les    edi,FWORD PTR [eax]
  415345:	jle    0x4153c4
  415347:	aam    0xba
  415349:	xor    ch,0x10
  41534c:	jb     0x4153a6
  41534e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41534f:	xor    DWORD PTR [edx-0x51eb5884],esi
  415355:	xor    DWORD PTR [ecx],0x32958b18
  41535b:	pop    ss
  41535c:	out    dx,eax
  41535d:	add    al,0xf0
  41535f:	mov    dl,0x1c
  415361:	neg    DWORD PTR [eax]
  415363:	inc    edi
  415364:	mov    bh,0x8c
  415366:	mov    esi,0x85fea982
  41536b:	cmp    BYTE PTR [edx+0x707c4162],al
  415371:	out    0xe4,eax
  415373:	pop    edi
  415374:	sbb    ebx,DWORD PTR [edi-0x60545fb5]
  41537a:	(bad)  
  41537b:	stos   BYTE PTR es:[edi],al
  41537c:	addr16 or esp,edi
  41537f:	(bad)  
  415380:	cmp    eax,0x7e369bd4
  415385:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  415387:	arpl   WORD PTR ds:0xaa251f8d,bx
  41538d:	dec    edx
  41538e:	in     eax,dx
  41538f:	je     0x41535c
  415391:	cmp    dh,BYTE PTR [ecx+0x61a4d907]
  415397:	push   ds
  415398:	arpl   WORD PTR [ebx-0x2ee6a27c],cx
  41539e:	pop    ebx
  41539f:	jo     0x4153d2
  4153a1:	inc    edi
  4153a2:	popf   
  4153a3:	add    edi,DWORD PTR [ecx]
  4153a5:	adc    ebx,DWORD PTR [eax-0x7732bb13]
  4153ab:	xlat   BYTE PTR ds:[ebx]
  4153ac:	in     eax,0xc6
  4153ae:	fs mov esp,0xd4be989
  4153b4:	sbb    BYTE PTR [edi+0x58],bl
  4153b7:	inc    ebx
  4153b8:	lods   al,BYTE PTR ds:[esi]
  4153b9:	inc    edx
  4153ba:	mov    DWORD PTR [esi+esi*1],ecx
  4153bd:	push   ss
  4153be:	sbb    eax,0xa36d936a
  4153c3:	ror    DWORD PTR [ebx+eax*1],0x7f
  4153c7:	outs   dx,DWORD PTR ds:[esi]
  4153c8:	xchg   edx,eax
  4153c9:	fimul  DWORD PTR [eax]
  4153cb:	repz sub BYTE PTR [ebp+0x8],ch
  4153cf:	mov    edi,0x1560a660
  4153d4:	inc    esp
  4153d5:	out    0xe7,al
  4153d7:	jb     0x4153f1
  4153d9:	push   0xffffff9f
  4153db:	cli    
  4153dc:	sbb    BYTE PTR [esi+ebp*8],al
  4153df:	pop    ds
  4153e0:	dec    ecx
  4153e1:	adc    DWORD PTR [eax-0x3ada3e1f],ebx
  4153e7:	ins    DWORD PTR es:[edi],dx
  4153e8:	mov    dh,0x3a
  4153ea:	cld    
  4153eb:	fucomip st,st(2)
  4153ed:	test   eax,0xd8c7cd3
  4153f2:	push   eax
  4153f3:	ror    bl,cl
  4153f5:	xchg   ecx,eax
  4153f6:	ss mov ebp,0xdf9f30d7
  4153fc:	ret    0xe5e1
  4153ff:	ins    BYTE PTR es:[edi],dx
  415400:	fdiv   DWORD PTR [ecx]
  415402:	xchg   DWORD PTR [esi+0x2d],ebp
  415405:	out    0x93,eax
  415407:	sub    al,0xf9
  415409:	mov    ecx,0x487292cf
  41540e:	ret    0xed54
  415411:	mov    bl,BYTE PTR [edi+ebx*4-0x63c2d80c]
  415418:	inc    edi
  415419:	ins    BYTE PTR es:[edi],dx
  41541a:	pusha  
  41541b:	shl    DWORD PTR [eax+0x758cbc86],0x88
  415422:	mov    edi,0xd72686a
  415427:	aad    0x90
  415429:	cli    
  41542a:	je     0x4153e9
  41542c:	mov    BYTE PTR [eax-0x80],ch
  41542f:	pushf  
  415430:	cmp    eax,0xe1eaedb4
  415435:	jnp    0x41540c
  415437:	dec    DWORD PTR [ebx-0x61]
  41543a:	shl    DWORD PTR [eax-0x14],0x70
  41543e:	pop    ebp
  41543f:	ret    
  415440:	sbb    al,0x16
  415442:	lock pop ss
  415444:	mov    ds:0xb5362605,al
  415449:	inc    edi
  41544a:	push   0xffffffe5
  41544c:	test   DWORD PTR [ebp-0x2e],edi
  41544f:	jmp    0x1df91fc0
  415454:	xchg   BYTE PTR [eax],cl
  415456:	stc    
  415457:	fcomip st,st(4)
  415459:	cmp    bl,dh
  41545b:	pop    edx
  41545c:	ins    BYTE PTR es:[edi],dx
  41545d:	jnp    0x415443
  41545f:	or     BYTE PTR ds:0x7da88e,dh
  415465:	xor    eax,0x9bea285c
  41546a:	adc    bl,BYTE PTR ds:0x8ed73d5d
  415470:	jb     0x41546e
  415472:	adc    DWORD PTR [edx-0x42],edi
  415475:	dec    edx
  415476:	out    0x7,eax
  415478:	std    
  415479:	iret   
  41547a:	jmp    0x41540f
  41547c:	aas    
  41547d:	sub    edi,DWORD PTR [ebx+0x6459e317]
  415483:	cmc    
  415484:	outs   dx,DWORD PTR ds:[esi]
  415485:	test   DWORD PTR [edi+0x1e],ecx
  415488:	fsincos 
  41548a:	push   es
  41548b:	shl    BYTE PTR [eax+0x3fd86900],cl
  415491:	xchg   esp,eax
  415492:	sub    DWORD PTR [edx+ebp*8-0x31],ebx
  415496:	pop    eax
  415497:	sub    DWORD PTR [edi],edi
  415499:	es cdq 
  41549b:	stos   BYTE PTR es:[edi],al
  41549c:	xor    eax,0x56eded13
  4154a1:	inc    esi
  4154a2:	jecxz  0x41546d
  4154a4:	sar    BYTE PTR [esi+0x437c062],1
  4154aa:	aaa    
  4154ab:	dec    edx
  4154ac:	pop    edi
  4154ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ae:	pusha  
  4154af:	add    edi,DWORD PTR [eax]
  4154b1:	into   
  4154b2:	xchg   DWORD PTR [eax],esi
  4154b4:	dec    ebx
  4154b5:	iret   
  4154b6:	ds stos DWORD PTR es:[edi],eax
  4154b8:	or     DWORD PTR [ebp+0x52],edi
  4154bb:	pop    ebx
  4154bc:	fwait
  4154bd:	pop    esi
  4154be:	test   BYTE PTR [edx+edx*4],bh
  4154c1:	repz cmp eax,0xc4b84940
  4154c7:	mov    ds:0xba2c1c2c,eax
  4154cc:	jo     0x41549b
  4154ce:	and    DWORD PTR [eax-0x56],edx
  4154d1:	mov    ds:0x1e451c2a,al
  4154d6:	or     DWORD PTR [esi-0x2aa4da5b],esi
  4154dc:	pop    ss
  4154dd:	stos   DWORD PTR es:[edi],eax
  4154de:	fistp  WORD PTR [eax]
  4154e0:	dec    edi
  4154e1:	xor    eax,0x8dec7cc4
  4154e6:	clc    
  4154e7:	xchg   esi,eax
  4154e8:	idiv   BYTE PTR [ebx+0x52]
  4154eb:	push   eax
  4154ec:	or     ebx,DWORD PTR [ebp-0x73c4d42]
  4154f2:	sub    eax,0xbbcdc70d
  4154f7:	dec    ebx
  4154f8:	jb     0x4154a9
  4154fa:	xlat   BYTE PTR ds:[ebx]
  4154fb:	loope  0x415562
  4154fd:	pop    edi
  4154fe:	or     al,0x32
  415500:	add    edi,DWORD PTR [esi-0x18a7f734]
  415506:	sub    BYTE PTR [esi],al
  415508:	fisubr WORD PTR [esi+0x60ec1403]
  41550e:	inc    esi
  41550f:	sbb    edi,DWORD PTR [esi]
  415511:	call   0xbeeb1edd
  415516:	jle    0x415586
  415518:	clc    
  415519:	push   edi
  41551a:	mov    al,ds:0x1c30745d
  41551f:	xchg   edi,eax
  415520:	push   ebx
  415521:	mov    bl,0xdb
  415523:	pop    bx
  415525:	mov    gs,WORD PTR [eax]
  415527:	pop    esp
  415528:	shl    BYTE PTR [ecx+eax*4-0x65],cl
  41552c:	mov    esi,0x355e5ee8
  415531:	jg     0x41554f
  415533:	and    eax,0xbfe3f1b0
  415538:	std    
  415539:	(bad)
  41553d:	sub    esp,DWORD PTR ds:0x8f5d9363
  415543:	fidivr WORD PTR [edi+0x73cdb490]
  415549:	mov    ah,0xc3
  41554b:	push   0x9f99737d
  415550:	(bad)  [edx-0x3ec0d23]
  415556:	push   esp
  415557:	aad    0x7
  415559:	iret   
  41555a:	jmp    0x4155bc
  41555c:	sub    eax,0x34191c95
  415561:	dec    ebp
  415562:	out    0xed,eax
  415564:	lea    esi,[eax-0x67bbd98f]
  41556a:	loope  0x415580
  41556c:	mov    WORD PTR [edx+0x34],?
  41556f:	push   eax
  415570:	test   BYTE PTR [ecx+0x5361346a],ch
  415576:	bswap  eax
  415578:	ins    DWORD PTR es:[edi],dx
  415579:	xchg   esp,eax
  41557a:	and    al,0xbd
  41557c:	sub    BYTE PTR [ebx],0xad
  41557f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415580:	scas   al,BYTE PTR es:[edi]
  415581:	call   0xb727b34f
  415586:	push   esi
  415587:	jae    0x415567
  415589:	sbb    edi,DWORD PTR [ecx+ecx*1]
  41558c:	pop    esp
  41558d:	mov    ebp,0xeab16889
  415592:	aam    0x1b
  415594:	push   esi
  415595:	mov    cl,0x76
  415597:	pminub mm5,QWORD PTR [esi+eiz*1+0x5b9b352a]
  41559f:	xor    al,0x71
  4155a1:	imul   ecx,esp,0x29473c89
  4155a7:	add    bl,BYTE PTR [eax]
  4155a9:	dec    edx
  4155aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ac:	cmp    eax,DWORD PTR [ebx]
  4155ae:	inc    edx
  4155af:	lds    ebp,FWORD PTR [eax]
  4155b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b2:	cmp    al,0x8f
  4155b4:	push   esi
  4155b5:	push   0x2a
  4155b7:	add    edx,esi
  4155b9:	(bad)  
  4155ba:	push   cs
  4155bb:	pop    esp
  4155bc:	xlat   BYTE PTR ds:[ebx]
  4155bd:	mov    ebx,0x8646fcc3
  4155c2:	aam    0xbe
  4155c4:	jecxz  0x4155e0
  4155c6:	cmp    DWORD PTR [esi+0x24],ebp
  4155c9:	add    eax,0xfb00c7dd
  4155ce:	enter  0x404c,0x98
  4155d2:	cwde   
  4155d3:	pop    esi
  4155d4:	adc    al,0x83
  4155d6:	pop    ecx
  4155d7:	mul    BYTE PTR [edi-0x1a1e90a0]
  4155dd:	hlt    
  4155de:	fxch   st(7)
  4155e0:	aaa    
  4155e1:	stos   BYTE PTR es:[edi],al
  4155e2:	and    cl,dl
  4155e4:	sbb    BYTE PTR [edx],bh
  4155e6:	(bad)  
  4155e7:	cmp    bh,BYTE PTR [esi]
  4155e9:	mov    al,BYTE PTR [ebx]
  4155eb:	sbb    bh,BYTE PTR [eax]
  4155ed:	mov    eax,0xbb8f2c23
  4155f2:	sbb    DWORD PTR [ebx+0x2d],edx
  4155f5:	popf   
  4155f6:	pop    ebp
  4155f7:	int    0x87
  4155f9:	add    BYTE PTR [ebx-0x649e6246],ch
  4155ff:	test   DWORD PTR [ecx],0x9241157b
  415605:	call   0x48c62883
  41560a:	les    ebp,FWORD PTR [edi]
  41560c:	add    esp,edi
  41560e:	jb     0x4155d8
  415610:	sahf   
  415611:	fdivp  st(7),st
  415613:	inc    ebp
  415614:	dec    edx
  415615:	aaa    
  415616:	xchg   esi,eax
  415617:	cs adc al,dh
  41561a:	sahf   
  41561b:	out    dx,al
  41561c:	inc    ebp
  41561d:	push   esp
  41561e:	lahf   
  41561f:	mov    BYTE PTR [edi],dl
  415621:	inc    esi
  415622:	mov    esp,0xf0c2d322
  415627:	popf   
  415628:	lea    esi,[edx]
  41562a:	jle    0x415609
  41562c:	xchg   ebp,eax
  41562d:	mov    BYTE PTR ss:[esi],ch
  415630:	in     al,dx
  415631:	retf   0x3cb5
  415634:	dec    eax
  415635:	retf   0x4110
  415638:	mov    cl,0xa8
  41563a:	mov    al,ds:0x8ea483be
  41563f:	outs   dx,DWORD PTR ds:[esi]
  415640:	cli    
  415641:	push   cs
  415642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415643:	aam    0x4
  415645:	mov    esp,ebp
  415647:	ss inc esp
  415649:	cld    
  41564a:	dec    eax
  41564b:	lods   al,BYTE PTR ds:[esi]
  41564c:	or     BYTE PTR [esi],0x5e
  41564f:	cmp    al,bl
  415651:	sbb    BYTE PTR [edx],bl
  415653:	rol    DWORD PTR ss:[edx+eax*1],1
  415657:	jbe    0x41566e
  415659:	dec    ebx
  41565a:	mov    ch,0x9c
  41565c:	in     eax,0xa3
  41565e:	mov    dl,0xf1
  415660:	sbb    dl,BYTE PTR [ecx]
  415662:	push   ds
  415663:	or     al,0xb5
  415665:	in     al,dx
  415666:	sub    esi,esp
  415668:	ins    BYTE PTR es:[edi],dx
  415669:	pop    eax
  41566a:	jge    0x4156d7
  41566c:	scas   eax,DWORD PTR es:[edi]
  41566d:	fnstsw WORD PTR [esp+eiz*8+0x55]
  415671:	mov    edi,0xd7359eac
  415676:	push   es
  415677:	inc    esi
  415678:	pop    edi
  415679:	ins    BYTE PTR es:[edi],dx
  41567a:	test   al,0x2b
  41567c:	mov    cs,WORD PTR [ebp-0x1]
  41567f:	rcl    dl,cl
  415681:	mov    esi,0xbea2e4b9
  415686:	pop    esp
  415687:	inc    esp
  415688:	push   ss
  415689:	mov    ebp,0xd1bcf9e
  41568e:	mov    BYTE PTR [ecx],bl
  415690:	cs pop esi
  415692:	sub    eax,DWORD PTR [ebx-0x5e0719c4]
  415698:	or     al,0x97
  41569a:	fld    TBYTE PTR [edi]
  41569c:	jl     0x41563f
  41569e:	sub    al,0xa8
  4156a0:	neg    DWORD PTR [esi]
  4156a2:	sbb    ecx,esp
  4156a4:	es adc dl,cl
  4156a7:	sub    BYTE PTR [eax-0x12],bl
  4156aa:	test   bl,ah
  4156ac:	xor    bh,BYTE PTR [ecx+0x6314160f]
  4156b2:	fcom   DWORD PTR [edx-0x2f]
  4156b5:	cmp    BYTE PTR [esi+0x17],0x91
  4156b9:	cmc    
  4156ba:	pushf  
  4156bb:	jnp    0x41564d
  4156bd:	sbb    DWORD PTR [ebp-0x36fac20a],edx
  4156c3:	push   ds
  4156c4:	sbb    cl,BYTE PTR [esi+0x1564bc39]
  4156ca:	lods   eax,DWORD PTR ds:[esi]
  4156cb:	sbb    BYTE PTR [ebp+0x39292d31],bl
  4156d1:	push   esi
  4156d2:	sti    
  4156d3:	ss pusha 
  4156d5:	cmp    ecx,esp
  4156d7:	sub    DWORD PTR [ebp+0x3],eax
  4156da:	mov    esp,0xef7d1a27
  4156df:	mov    al,ds:0x1940db7a
  4156e4:	sub    eax,0x83352c59
  4156e9:	and    al,0xb5
  4156eb:	retf   0x90c9
  4156ee:	aam    0x2e
  4156f0:	(bad)  
  4156f1:	sbb    BYTE PTR [edx],dh
  4156f3:	sbb    DWORD PTR [edx],edx
  4156f5:	fild   DWORD PTR [edi-0x1b]
  4156f8:	je     0x41568f
  4156fa:	daa    
  4156fb:	ret    0x5a7
  4156fe:	(bad)  
  4156ff:	mov    eax,0x4f2cb3fe
  415704:	enter  0xce6e,0xf8
  415708:	aad    0xa
  41570a:	(bad)  
  41570b:	aam    0xf
  41570d:	push   ds
  41570e:	mul    BYTE PTR [ecx-0x1e]
  415711:	push   edx
  415712:	push   ss
  415713:	or     ebx,DWORD PTR [eax+0x2cb32]
  415719:	ret    0xf648
  41571c:	aas    
  41571d:	jnp    0x4156ac
  41571f:	stos   DWORD PTR es:[edi],eax
  415720:	sub    al,0x29
  415722:	pop    esp
  415723:	not    BYTE PTR [eax+0x71c49cff]
  415729:	dec    esi
  41572a:	xor    eax,0xcf57f0e0
  41572f:	loopne 0x4156c7
  415731:	(bad)  [esi-0x749b9bfe]
  415737:	sbb    DWORD PTR [eax-0x353bae],eax
  41573d:	or     eax,0x9e80a3f2
  415742:	loope  0x4156c9
  415744:	fadd   QWORD PTR [esi]
  415746:	lds    esp,FWORD PTR [ebp+0xb]
  415749:	ffreep st(5)
  41574b:	js     0x4157a5
  41574d:	ins    DWORD PTR es:[edi],dx
  41574e:	xchg   BYTE PTR [eax-0x46],dl
  415751:	stos   DWORD PTR es:[edi],eax
  415752:	jbe    0x415721
  415754:	sbb    ecx,DWORD PTR [ebp-0x3ac11d0a]
  41575a:	mov    bh,0x48
  41575c:	(bad)  
  41575d:	cmp    bl,BYTE PTR [esi-0x3]
  415760:	mov    DWORD PTR [edx],ebx
  415762:	sbb    ebp,DWORD PTR [esi+0x8]
  415765:	je     0x415783
  415767:	dec    ecx
  415768:	xor    DWORD PTR [ebp+0x3c3ba9d8],ecx
  41576e:	shl    DWORD PTR [esp],cl
  415771:	inc    esp
  415772:	push   cs
  415773:	xchg   edx,eax
  415774:	xchg   esi,eax
  415775:	and    BYTE PTR [ebp+0x5d9d872d],al
  41577b:	ins    BYTE PTR es:[edi],dx
  41577c:	jns    0x4157c8
  41577e:	scas   eax,DWORD PTR es:[edi]
  41577f:	pop    eax
  415780:	(bad)  
  415782:	and    dl,al
  415784:	cmc    
  415785:	ret    0x3dc2
  415788:	fst    DWORD PTR [edx]
  41578a:	addr16 jg 0x4157e2
  41578d:	in     al,0x70
  41578f:	retf   0xfe83
  415792:	jp     0x41573e
  415794:	or     ah,cl
  415796:	data16 (bad) 
  415799:	xchg   ebx,eax
  41579a:	and    bh,BYTE PTR [ecx+0x30]
  41579d:	dec    ebx
  41579e:	lods   al,BYTE PTR ds:[esi]
  41579f:	aad    0x88
  4157a1:	or     bh,BYTE PTR [esi+0xb475651]
  4157a7:	and    edx,esp
  4157a9:	xor    DWORD PTR [esi],0x770ce1c7
  4157af:	mov    eax,DWORD PTR [edx-0x58cb5d09]
  4157b5:	fs xchg ebp,eax
  4157b7:	push   0x1e39b16f
  4157bc:	adc    BYTE PTR ds:0x8e2248b4,al
  4157c2:	add    al,BYTE PTR [ecx-0x5b]
  4157c5:	dec    edx
  4157c6:	xchg   BYTE PTR [eax-0x34399846],bl
  4157cc:	leave  
  4157cd:	mov    ebx,0xe09b9777
  4157d2:	mov    WORD PTR [eax-0x29],ss
  4157d5:	mov    esi,0x6ef6835d
  4157da:	out    0xc7,al
  4157dc:	dec    ebx
  4157dd:	sbb    al,0xeb
  4157df:	mov    BYTE PTR [ebx],ch
  4157e1:	pop    es
  4157e2:	sbb    al,BYTE PTR [edx]
  4157e4:	(bad)  
  4157e5:	mov    eax,ds:0x9f942c5
  4157ea:	push   ss
  4157eb:	in     eax,0xc3
  4157ed:	(bad)  
  4157ee:	mov    WORD PTR [esi],cs
  4157f0:	add    BYTE PTR [edi],0x17
  4157f3:	mov    ebp,0xef87d160
  4157f8:	mov    db0,eax
  4157fb:	call   ebp
  4157fd:	das    
  4157fe:	push   cs
  4157ff:	sahf   
  415800:	sbb    edx,edi
  415802:	loopne 0x415787
  415804:	clc    
  415805:	push   esp
  415806:	into   
  415807:	adc    al,0x97
  415809:	lock jnp 0x41585a
  41580c:	rcl    DWORD PTR [edx+0x34527a],cl
  415812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415813:	rcl    BYTE PTR [eax],cl
  415815:	repz cmp al,0xc9
  415818:	retf   
  415819:	pop    ebx
  41581a:	add    al,0x1f
  41581c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41581d:	adc    BYTE PTR [ebx-0x5b],ah
  415820:	adc    edi,edx
  415822:	mov    bl,0x3a
  415824:	mov    ds:0x8fb5a067,al
  415829:	mov    esi,0xa420a496
  41582e:	leave  
  41582f:	xchg   edi,eax
  415830:	fadd   DWORD PTR [eax-0xe83c41f]
  415836:	add    edx,DWORD PTR [ebx]
  415838:	add    eax,DWORD PTR [ebp+0x7f]
  41583b:	fsubr  QWORD PTR [ebp-0x70]
  41583e:	jmp    DWORD PTR [edx-0x23]
  415841:	adc    DWORD PTR [edx-0x4c],esi
  415844:	xchg   ebp,eax
  415845:	jnp    0x415899
  415847:	out    dx,eax
  415848:	clc    
  415849:	cmc    
  41584a:	iret   
  41584b:	fisttp WORD PTR [esi-0x1e]
  41584e:	mov    eax,0xed45cb3d
  415853:	lahf   
  415854:	leave  
  415855:	jmp    DWORD PTR [edx]
  415857:	push   cs
  415858:	and    al,0x4d
  41585a:	jmp    0x6cfe:0xe5abaee0
  415861:	jl     0x4157eb
  415863:	aas    
  415864:	fwait
  415865:	je     0x415814
  415867:	ins    BYTE PTR es:[edi],dx
  415868:	cdq    
  415869:	and    BYTE PTR [ebp+0x35],cl
  41586c:	sbb    eax,0x3b695e5a
  415871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415872:	shr    ebp,0x9e
  415875:	jg     0x415859
  415877:	cmp    eax,0x3e25506e
  41587c:	ret    0x10df
  41587f:	scas   al,BYTE PTR es:[edi]
  415880:	pop    ecx
  415881:	pop    eax
  415882:	mov    ecx,0x994d97ee
  415887:	iret   
  415888:	test   DWORD PTR [ebx],0xfd219e1f
  41588e:	xchg   ebp,eax
  41588f:	(bad)
  415893:	or     ecx,eax
  415895:	add    eax,0xf89a0bf7
  41589a:	imul   esi,DWORD PTR [edi-0x16983c3a],0xffffffc0
  4158a1:	mov    BYTE PTR [eax],dh
  4158a3:	or     al,0x87
  4158a5:	push   cs
  4158a6:	inc    edi
  4158a7:	sub    ah,ch
  4158a9:	jle    0x41592a
  4158ab:	scas   al,BYTE PTR es:[edi]
  4158ac:	enter  0xc28,0x2e
  4158b0:	sbb    eax,0xe78402b5
  4158b5:	mov    ecx,0x3b71cd82
  4158ba:	sub    eax,0xb750ff0d
  4158bf:	xchg   ebx,eax
  4158c0:	lock cmovae esi,DWORD PTR [edi]
  4158c4:	sbb    BYTE PTR [eax],ah
  4158c6:	(bad)  
  4158c7:	call   0xc82fdd1f
  4158cc:	aas    
  4158cd:	stos   DWORD PTR es:[edi],eax
  4158ce:	test   eax,0x192a2989
  4158d3:	sbb    al,0x19
  4158d5:	xchg   BYTE PTR [eax],bl
  4158d7:	push   esi
  4158d8:	xchg   ebx,eax
  4158d9:	lods   eax,DWORD PTR ds:[esi]
  4158da:	mov    esi,0xc40ca699
  4158df:	adc    esp,esi
  4158e1:	sub    BYTE PTR [esi],bh
  4158e3:	xchg   edx,eax
  4158e4:	pop    ds
  4158e5:	mov    bl,0xd
  4158e7:	lods   al,BYTE PTR ds:[esi]
  4158e8:	xchg   BYTE PTR [ebx+0x79],dh
  4158eb:	test   DWORD PTR [edx],edi
  4158ed:	outs   dx,DWORD PTR ds:[esi]
  4158ee:	xchg   esi,eax
  4158ef:	xor    DWORD PTR ds:0x1357af94,0x3f
  4158f6:	jmp    0x8310bc8f
  4158fb:	sub    dl,BYTE PTR [edx]
  4158fd:	data16 jo 0x41592e
  415900:	call   0x45148937
  415905:	pop    esp
  415906:	push   0x7f
  415908:	add    BYTE PTR [ebp+0x7fc09209],cl
  41590e:	push   edx
  41590f:	xor    eax,DWORD PTR [ebp+esi*8-0x23]
  415913:	shl    BYTE PTR [edx],1
  415915:	jmp    0x882f:0x40c76c32
  41591c:	jo     0x41596c
  41591e:	test   al,0x78
  415920:	sbb    WORD PTR [edx+esi*8+0x5c930301],0x82ef
  41592a:	jne    0x4158d0
  41592c:	out    0x79,al
  41592e:	xchg   edi,eax
  41592f:	rcr    DWORD PTR [eax],0xb3
  415932:	or     eax,0x7ea20cc
  415937:	icebp  
  415938:	jbe    0x4159a4
  41593a:	repz pop esi
  41593c:	mov    ebx,0x3a324db4
  415941:	cmp    ecx,DWORD PTR [edx-0x7281b89e]
  415947:	xchg   ebx,eax
  415948:	dec    esp
  415949:	out    dx,al
  41594a:	aad    0xb4
  41594c:	add    eax,0x119566b6
  415951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415952:	cmp    DWORD PTR [eax+0x4c],0xffffffe9
  415956:	mov    ah,0xaa
  415958:	(bad)  
  415959:	xchg   esp,eax
  41595a:	and    al,cl
  41595c:	push   eax
  41595d:	addr16 pop esi
  41595f:	into   
  415960:	outs   dx,DWORD PTR ss:[esi]
  415962:	jno    0x4158fe
  415964:	and    eax,ecx
  415966:	and    al,0x80
  415968:	shl    BYTE PTR [esi+eax*8],1
  41596b:	sub    BYTE PTR [ebx+0x72],dl
  41596e:	loopne 0x4158f4
  415970:	int3   
  415971:	and    al,0xd5
  415973:	pop    es
  415974:	mov    BYTE PTR [eax+0x12b4653e],dh
  41597a:	sub    DWORD PTR [ebx-0x4f],esi
  41597d:	xor    DWORD PTR [ebx],0xffffffcb
  415980:	adc    DWORD PTR [eax],0xed15779
  415986:	sbb    al,0x91
  415988:	push   cs
  415989:	mov    esi,0xa4821368
  41598e:	push   ebp
  41598f:	neg    esp
  415991:	ins    BYTE PTR es:[edi],dx
  415992:	mov    esp,0xb9ea8c35
  415997:	cmp    esi,eax
  415999:	ret    0xcf40
  41599c:	mov    ecx,0x8fe3622c
  4159a1:	mov    ah,0x92
  4159a3:	xlat   BYTE PTR ds:[ebx]
  4159a4:	jle    0x4159cb
  4159a6:	cmp    BYTE PTR [edx+0x5a],ch
  4159a9:	or     BYTE PTR [ebp+0x75e102d4],cl
  4159af:	jns    0x4159d7
  4159b1:	fwait
  4159b2:	xor    bh,al
  4159b4:	cmp    esi,0x44
  4159b7:	sub    eax,0xa0ef335a
  4159bc:	cmp    dh,bh
  4159be:	bnd jp 0x415a27
  4159c1:	dec    edi
  4159c2:	aad    0x97
  4159c4:	cmp    eax,0x1d82261
  4159c9:	push   ss
  4159ca:	aaa    
  4159cb:	sub    ecx,eax
  4159cd:	out    dx,eax
  4159ce:	aam    0xac
  4159d0:	lods   eax,DWORD PTR ds:[esi]
  4159d1:	ret    0x9291
  4159d4:	xchg   ecx,eax
  4159d5:	sub    al,BYTE PTR [eax-0x6d78397e]
  4159db:	retf   
  4159dc:	jns    0x415a43
  4159de:	ret    0xdcbb
  4159e1:	inc    ebx
  4159e2:	shl    BYTE PTR [ebx+0x7d],0x78
  4159e6:	cmc    
  4159e7:	sub    DWORD PTR [ebx+ecx*4],esi
  4159ea:	pop    ds
  4159eb:	fdiv   QWORD PTR [eax-0xc]
  4159ee:	js     0x4159d2
  4159f0:	leave  
  4159f1:	push   DWORD PTR [esi+0x3a87c249]
  4159f7:	inc    ebx
  4159f8:	cmc    
  4159f9:	(bad)  
  4159fa:	out    dx,eax
  4159fb:	imul   edx,DWORD PTR [edi+edi*2],0xffffffa9
  4159ff:	pusha  
  415a00:	je     0x4159a7
  415a02:	mov    bl,0x4
  415a04:	pop    es
  415a05:	jp     0x4159e3
  415a07:	(bad)  
  415a08:	cs test al,0xaa
  415a0b:	cmp    bl,BYTE PTR [ebx]
  415a0d:	fadd   DWORD PTR [edi+ecx*2]
  415a10:	repnz xchg ecx,eax
  415a12:	jno    0x415a8e
  415a14:	mov    DWORD PTR [eax-0x63],edi
  415a17:	pop    ds
  415a18:	push   edi
  415a19:	rcl    BYTE PTR [esi+0x330f8c96],cl
  415a1f:	sbb    al,0xea
  415a21:	mov    ds:0x7d9c52e7,al
  415a26:	ret    0x88a0
  415a29:	and    ecx,DWORD PTR [edi]
  415a2b:	stos   BYTE PTR es:[edi],al
  415a2c:	ret    0x9026
  415a2f:	fild   DWORD PTR [eax+0x7c]
  415a32:	add    eax,0xb128d720
  415a37:	mov    WORD PTR [ebp-0x2e],gs
  415a3a:	in     al,0x6b
  415a3c:	sub    al,0x59
  415a3e:	lock push 0x25
  415a41:	popa   
  415a42:	cwde   
  415a43:	pusha  
  415a44:	inc    ecx
  415a45:	ins    BYTE PTR es:[edi],dx
  415a46:	lahf   
  415a47:	in     al,dx
  415a48:	xor    ebx,eax
  415a4a:	inc    eax
  415a4b:	cdq    
  415a4c:	fidiv  DWORD PTR [esi+0x2f]
  415a4f:	adc    BYTE PTR [esi-0x1722de13],al
  415a55:	dec    ebp
  415a56:	cmp    al,0x68
  415a58:	jg     0x415a18
  415a5a:	adc    DWORD PTR [edx*8-0x33fd03ae],esi
  415a61:	push   ds
  415a62:	rol    BYTE PTR [edx-0x15],1
  415a65:	and    esi,edx
  415a67:	or     ch,dl
  415a69:	retf   
  415a6a:	mov    WORD PTR [edi+0x60b03850],ss
  415a70:	sub    al,ch
  415a72:	outs   dx,BYTE PTR ds:[esi]
  415a73:	cs clc 
  415a75:	pop    ecx
  415a76:	add    DWORD PTR [esi-0x8],ebx
  415a79:	sti    
  415a7a:	cli    
  415a7b:	adc    al,0xd7
  415a7d:	imul   ebx,DWORD PTR cs:[esi],0x2b2e9dc3
  415a84:	inc    edi
  415a85:	mov    al,ds:0x37144934
  415a8a:	pop    edi
  415a8b:	(bad)  
  415a8c:	call   0xbe1a7d2f
  415a91:	fsubrp st(7),st
  415a93:	daa    
  415a94:	xchg   esi,eax
  415a95:	jnp    0x415ac1
  415a97:	std    
  415a98:	jmp    DWORD PTR [ebx+0x42]
  415a9b:	cmp    eax,0x246da37b
  415aa0:	mov    dh,bl
  415aa2:	jae    0x415a71
  415aa4:	sbb    al,0x9b
  415aa6:	pop    ecx
  415aa7:	pop    es
  415aa8:	adc    bl,cl
  415aaa:	mov    bl,0x7
  415aac:	(bad)  
  415aad:	retf   0xf429
  415ab0:	ins    DWORD PTR es:[edi],dx
  415ab1:	outs   dx,DWORD PTR es:[esi]
  415ab3:	arpl   WORD PTR [eax+eiz*1+0xa],ax
  415ab7:	xchg   edi,eax
  415ab8:	mov    esi,0x7502a035
  415abd:	and    bl,BYTE PTR [ebx+0x2]
  415ac0:	push   0xffffffcc
  415ac2:	jecxz  0x415a62
  415ac4:	mov    DWORD PTR ds:0x67c338d,esi
  415aca:	into   
  415acb:	inc    esp
  415acc:	mov    WORD PTR [edi-0xf],es
  415acf:	dec    edx
  415ad0:	aas    
  415ad1:	pop    ebx
  415ad2:	xchg   esp,eax
  415ad3:	add    DWORD PTR [esi+edx*1+0x6fe89ad2],esi
  415ada:	mov    al,0xb3
  415adc:	fild   DWORD PTR [edi+0x17d0517]
  415ae2:	aam    0x25
  415ae4:	pushf  
  415ae5:	ins    DWORD PTR es:[edi],dx
  415ae6:	out    dx,eax
  415ae7:	fucomi st,st(0)
  415ae9:	cmp    eax,0x3fa6dfb5
  415aee:	mov    DWORD PTR [ebx+0x613ebe],esp
  415af4:	xchg   edi,eax
  415af5:	xchg   ebp,eax
  415af6:	out    dx,al
  415af7:	mov    eax,0x611e4e01
  415afc:	sbb    dl,BYTE PTR [ecx+0x110671de]
  415b02:	ins    DWORD PTR es:[edi],dx
  415b03:	pop    esp
  415b04:	dec    ebx
  415b05:	jnp    0x415add
  415b07:	mov    ?,WORD PTR [edi+eiz*1+0x486d4b6a]
  415b0e:	cmp    eax,0x73c9b8f4
  415b13:	loop   0x415b4d
  415b15:	xchg   BYTE PTR ds:0xe135b7d2,ch
  415b1b:	mov    WORD PTR [ebx+0x28],fs
  415b1e:	pop    ss
  415b1f:	push   0xffffffa7
  415b21:	or     edx,esi
  415b23:	adc    al,0xed
  415b25:	mov    bl,0xea
  415b27:	cli    
  415b28:	rcr    DWORD PTR ds:[eax+0x3b],1
  415b2c:	xor    ax,0xc201
  415b30:	fidiv  WORD PTR [esi]
  415b32:	std    
  415b33:	ins    BYTE PTR es:[edi],dx
  415b34:	inc    ebx
  415b35:	add    BYTE PTR [edi+edi*8-0x2d39e3ed],0xb2
  415b3d:	add    al,0x3f
  415b3f:	in     al,dx
  415b40:	hlt    
  415b41:	(bad)  
  415b42:	pop    eax
  415b43:	(bad)  
  415b44:	push   ecx
  415b45:	loopne 0x415b58
  415b47:	mov    BYTE PTR [edi+0x5ba5deca],0xbd
  415b4e:	pop    ebp
  415b4f:	and    eax,0x87b6b687
  415b54:	pop    eax
  415b55:	sbb    DWORD PTR ds:0x7243b996,ebx
  415b5b:	push   0xc6619b7f
  415b60:	not    bh
  415b62:	out    dx,eax
  415b63:	jns    0x415bdb
  415b65:	and    al,bl
  415b67:	gs dec ebx
  415b69:	gs sahf 
  415b6b:	shl    DWORD PTR [esi+edi*8],cl
  415b6e:	mov    esp,0x4570a791
  415b73:	into   
  415b74:	jmp    0xd1d32aa4
  415b79:	dec    eax
  415b7a:	call   0xfb46a65c
  415b7f:	cmp    al,0x43
  415b81:	and    DWORD PTR [edx+0x66],ebx
  415b84:	std    
  415b85:	lock mov ds:0x488ff097,eax
  415b8b:	mov    eax,ds:0xd92f8e40
  415b90:	ffree  st(6)
  415b92:	ficomp WORD PTR [esi-0x2a]
  415b95:	fwait
  415b96:	sbb    ebp,DWORD PTR [edi+ebx*8]
  415b99:	and    BYTE PTR [edx],dl
  415b9b:	stc    
  415b9c:	sub    cl,BYTE PTR [edi+0x10]
  415b9f:	in     al,dx
  415ba0:	(bad)  
  415ba2:	pushf  
  415ba3:	cmp    ebx,DWORD PTR [ebp+0x4c]
  415ba6:	xchg   ebp,eax
  415ba7:	mov    bh,0x8e
  415ba9:	fistp  QWORD PTR [eax-0x6b]
  415bac:	stc    
  415bad:	sub    DWORD PTR [esp+ebp*4],0xffffff95
  415bb1:	mov    cl,0xb5
  415bb3:	push   esp
  415bb4:	in     al,0xe1
  415bb6:	cs mov ah,0xb6
  415bb9:	dec    ecx
  415bba:	jb     0x415c14
  415bbc:	xor    esi,DWORD PTR [edx-0x33bcb3fc]
  415bc2:	stos   BYTE PTR es:[edi],al
  415bc3:	push   ebx
  415bc4:	cli    
  415bc5:	(bad)  
  415bc6:	(bad)  
  415bc7:	(bad)  
  415bc9:	add    DWORD PTR [ebx+edx*2-0x46750265],ebp
  415bd0:	push   cs
  415bd1:	cdq    
  415bd2:	into   
  415bd3:	aaa    
  415bd4:	scas   eax,DWORD PTR es:[edi]
  415bd5:	mov    bh,0xaf
  415bd7:	es xchg esp,eax
  415bd9:	add    BYTE PTR [ebp+0x55858f18],0xca
  415be0:	test   al,0x56
  415be2:	mov    bl,0x98
  415be4:	add    esp,edi
  415be6:	mov    ebp,0xe300bc9b
  415beb:	jmp    0x415c62
  415bed:	repnz mov BYTE PTR [ecx-0x1d6453d],bh
  415bf4:	mov    ch,0xb
  415bf6:	fwait
  415bf7:	add    eax,DWORD PTR [esi-0x3a2ed35b]
  415bfd:	(bad)  
  415bfe:	lock xchg esp,eax
  415c00:	mov    BYTE PTR [eax],bl
  415c02:	and    bl,BYTE PTR [edx+0x1e5ab727]
  415c08:	loop   0x415bd0
  415c0a:	ss jbe 0x415b8e
  415c0d:	int    0x19
  415c0f:	sti    
  415c10:	push   cs
  415c11:	xchg   ebx,eax
  415c12:	adc    dl,dh
  415c14:	(bad)  
  415c15:	or     DWORD PTR [ecx-0x2],esp
  415c18:	mov    al,0xd0
  415c1a:	sbb    BYTE PTR [eax],0xaa
  415c1d:	push   esi
  415c1e:	call   0xfd68:0x106c09fe
  415c25:	xchg   esp,eax
  415c26:	icebp  
  415c27:	mov    al,ds:0xae880c53
  415c2c:	pop    es
  415c2d:	pop    edx
  415c2e:	push   cs
  415c2f:	and    DWORD PTR [esi],ecx
  415c31:	adc    DWORD PTR [ebx+0x7f],edi
  415c34:	jge    0x415bd0
  415c36:	imul   esi,DWORD PTR [ecx+ebx*4-0x57b2dfeb],0x75
  415c3e:	xor    esi,eax
  415c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c41:	stc    
  415c42:	mov    fs,WORD PTR [edi]
  415c44:	xchg   esi,eax
  415c45:	add    DWORD PTR [ecx],edi
  415c47:	pop    ss
  415c48:	popa   
  415c49:	push   0xfffffff6
  415c4b:	pop    ebp
  415c4c:	(bad)  
  415c4d:	neg    BYTE PTR [eax-0x5e87e736]
  415c53:	adc    eax,0xe0bcbb46
  415c58:	sar    bl,cl
  415c5a:	loope  0x415caa
  415c5c:	jne    0x415cc3
  415c5e:	and    esp,edi
  415c60:	not    DWORD PTR [ebp+0x3bf39b61]
  415c66:	pushf  
  415c67:	sbb    al,0x4e
  415c69:	pop    ss
  415c6a:	sbb    dl,BYTE PTR [ebp+0x58]
  415c6d:	push   ds
  415c6e:	jle    0x415c53
  415c70:	div    DWORD PTR [esi+ecx*1]
  415c73:	dec    eax
  415c74:	xchg   ecx,eax
  415c75:	xchg   esp,eax
  415c77:	frstor [esi-0x7d8631b4]
  415c7d:	mov    esp,0x225a82b5
  415c82:	fs push esi
  415c84:	xchg   ecx,eax
  415c85:	push   eax
  415c86:	cli    
  415c87:	jg     0x415d08
  415c89:	mov    BYTE PTR [edx-0x7a],al
  415c8c:	test   BYTE PTR [esi+0x6e],dl
  415c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c90:	push   edx
  415c91:	add    BYTE PTR ds:0x72448517,dh
  415c97:	imul   ebp,esp,0xcb3a06a0
  415c9d:	push   ebx
  415c9e:	outs   dx,BYTE PTR gs:[esi]
  415ca0:	mov    ds:0x872a89d8,al
  415ca5:	test   eax,0xdf640f14
  415caa:	lahf   
  415cab:	stc    
  415cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cad:	out    0xec,eax
  415caf:	mov    cl,0x1
  415cb1:	mov    edx,0xfaa05568
  415cb6:	push   edi
  415cb7:	aas    
  415cb8:	loopne 0x415d34
  415cba:	pop    ds
  415cbb:	pop    es
  415cbc:	in     eax,0xf6
  415cbe:	push   ebp
  415cbf:	(bad)  
  415cc0:	cmp    dh,BYTE PTR ds:0x77ffc6b9
  415cc6:	dec    ebp
  415cc7:	jo     0x415d0a
  415cc9:	popa   
  415cca:	push   ebp
  415ccb:	xor    ch,ch
  415ccd:	sti    
  415cce:	data16 jg 0x415cf9
  415cd1:	fs call 0x5dfa:0x539db74
  415cd9:	je     0x415d1f
  415cdb:	and    al,0x4a
  415cdd:	jl     0x415d2b
  415cdf:	mov    dh,0x59
  415ce1:	mov    bh,0x7
  415ce3:	aad    0x84
  415ce5:	mov    esp,0xfec2365
  415cea:	clc    
  415ceb:	lock dec DWORD PTR [esi-0x2b2898f]
  415cf2:	test   ecx,edi
  415cf4:	xchg   ebx,eax
  415cf5:	push   esi
  415cf6:	(bad)  
  415cf7:	dec    ebp
  415cf8:	jns    0x415d58
  415cfa:	mov    WORD PTR [ebx-0x50e338bf],cs
  415d00:	add    esp,eax
  415d02:	xor    al,0x62
  415d04:	idiv   dl
  415d06:	ror    eax,1
  415d08:	cmp    al,0x3a
  415d0a:	xchg   ebx,eax
  415d0b:	fwait
  415d0c:	pop    esi
  415d0d:	cmp    DWORD PTR [eax-0x3],ebp
  415d10:	mov    ecx,0x2478cee9
  415d15:	fld    DWORD PTR [edi-0x6b]
  415d18:	pop    edi
  415d19:	mov    cl,0xa3
  415d1b:	cld    
  415d1c:	or     ch,dl
  415d1e:	or     al,0x5c
  415d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d21:	add    eax,DWORD PTR [esp+edi*1-0x13749d91]
  415d28:	adc    ebx,edi
  415d2a:	xor    ecx,DWORD PTR [edx+0x34]
  415d2d:	ins    BYTE PTR es:[edi],dx
  415d2e:	pop    ecx
  415d2f:	dec    ecx
  415d30:	gs aam 0xd9
  415d33:	mov    edi,0xca98c923
  415d38:	cmp    BYTE PTR ds:0xc1fe1eb5,ch
  415d3e:	inc    esp
  415d3f:	je     0x415cfa
  415d41:	adc    DWORD PTR cs:[ecx-0x6db6512d],0xffffff98
  415d49:	xor    eax,0x3b0b149b
  415d4e:	es test edi,esi
  415d51:	add    DWORD PTR [edx],ebx
  415d53:	cmp    eax,0x3996b5af
  415d58:	cmp    eax,DWORD PTR [ebx]
  415d5a:	jmp    0x415dca
  415d5c:	xor    eax,0x4578ebb4
  415d61:	rol    BYTE PTR [ebp+0x5c],0xec
  415d65:	shl    DWORD PTR [ebx+0x33fde73e],cl
  415d6b:	aam    0x36
  415d6d:	scas   al,BYTE PTR es:[edi]
  415d6e:	push   edx
  415d6f:	mov    cl,0xc8
  415d71:	pusha  
  415d72:	arpl   WORD PTR [edx-0x1e],bx
  415d75:	in     eax,dx
  415d76:	sbb    bh,cl
  415d78:	push   esi
  415d79:	je     0x415d15
  415d7b:	addr16 cmp al,0x5
  415d7e:	stos   DWORD PTR es:[edi],eax
  415d7f:	add    eax,0x3f0ac818
  415d84:	xor    BYTE PTR cs:0x658bfd9c,0x95
  415d8c:	add    edi,esi
  415d8e:	mov    ds:0x8677c0ce,eax
  415d93:	gs dec esp
  415d95:	jge    0x415d53
  415d97:	fist   WORD PTR ds:0xaa779e0a
  415d9d:	(bad)
  415da0:	adc    DWORD PTR [ebx-0x22330a02],ebp
  415da6:	std    
  415da7:	out    dx,al
  415da8:	sub    eax,0x18589623
  415dad:	out    0x25,eax
  415daf:	mov    dl,0x67
  415db1:	loope  0x415d7c
  415db3:	jae    0x415da9
  415db5:	ret    0xe125
  415db8:	mov    ch,BYTE PTR fs:[ebx]
  415dbb:	repnz in eax,0x9d
  415dbe:	jbe    0x415dad
  415dc0:	dec    ecx
  415dc1:	mov    dh,0x6e
  415dc3:	inc    esp
  415dc4:	mov    cl,0x36
  415dc6:	mov    ebp,DWORD PTR [eax+ebx*2]
  415dc9:	je     0x415d69
  415dcb:	jmp    0x708773ab
  415dd0:	or     ebx,DWORD PTR [ecx]
  415dd2:	(bad)  
  415dd3:	sub    ah,BYTE PTR [ebx-0x68034041]
  415dd9:	xchg   ecx,eax
  415dda:	ret    
  415ddb:	daa    
  415ddc:	outs   dx,DWORD PTR ds:[esi]
  415ddd:	or     al,0xf4
  415ddf:	(bad)  [ecx+0x6c]
  415de2:	adc    eax,0x4e03d31d
  415de7:	(bad)  
  415de8:	out    0x8d,al
  415dea:	jmp    0x3d3821b1
  415def:	dec    edx
  415df0:	paddd  mm6,mm2
  415df3:	fisttp WORD PTR [edi]
  415df5:	je     0x415dc8
  415df7:	adc    BYTE PTR [edi-0x24],dh
  415dfa:	repz mov al,ds:0xc454eb4a
  415e00:	mov    al,0x1a
  415e02:	cmpps  xmm6,XMMWORD PTR [esi-0x7f],0xbd
  415e07:	lds    esi,FWORD PTR [ebx+0x78fc4e5a]
  415e0d:	popa   
  415e0e:	test   eax,0xda320ac0
  415e13:	mov    ebp,0x28c507bc
  415e18:	(bad)  
  415e19:	xor    al,0xfe
  415e1b:	mov    bl,0xce
  415e1d:	jne    0x415e98
  415e1f:	cdq    
  415e20:	and    esp,DWORD PTR [ebx-0x7f]
  415e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e24:	sub    eax,0xf18ff799
  415e29:	imul   ebp,esp,0xf945731a
  415e2f:	xchg   DWORD PTR ss:[esi+eax*8-0xed5ed4],edx
  415e37:	xchg   edx,eax
  415e38:	rcr    BYTE PTR [edx],cl
  415e3a:	jg     0x415ea4
  415e3c:	mov    dl,0x60
  415e3e:	sbb    ah,BYTE PTR [eax+0x40d02448]
  415e44:	adc    DWORD PTR [ebx+0x5b],0xffffff86
  415e48:	inc    ebp
  415e49:	in     eax,dx
  415e4a:	adc    DWORD PTR [ecx+0x18],eax
  415e4d:	lahf   
  415e4e:	add    esp,ecx
  415e50:	xchg   ebp,eax
  415e51:	jne    0x415ea8
  415e53:	dec    ebx
  415e54:	stos   BYTE PTR es:[edi],al
  415e55:	xchg   esi,eax
  415e56:	mov    bl,0x8b
  415e58:	add    BYTE PTR [eax-0x38631c24],dh
  415e5e:	and    al,0x35
  415e60:	mov    ecx,0xf915bc4b
  415e65:	popf   
  415e66:	sbb    BYTE PTR [eax+ebp*2],cl
  415e69:	xchg   ecx,eax
  415e6a:	arpl   WORD PTR [eax+0x5b],sp
  415e6d:	xchg   esi,eax
  415e6e:	call   0x2cbb:0x38e515d2
  415e75:	dec    edi
  415e76:	jo     0x415e34
  415e78:	dec    edi
  415e79:	inc    edx
  415e7a:	repnz stos BYTE PTR es:[edi],al
  415e7c:	or     al,0xd5
  415e7e:	aaa    
  415e7f:	loope  0x415e72
  415e81:	pop    edx
  415e82:	stc    
  415e83:	ins    BYTE PTR es:[edi],dx
  415e84:	retf   
  415e85:	ins    BYTE PTR es:[edi],dx
  415e86:	adc    eax,0x853160f3
  415e8b:	hlt    
  415e8c:	and    eax,DWORD PTR [ebx+0x88a9302]
  415e92:	sub    al,0x61
  415e94:	cwde   
  415e95:	push   0xffffffb7
  415e97:	mov    edx,DWORD PTR [eax]
  415e99:	jae    0x415ef4
  415e9b:	inc    eax
  415e9c:	xchg   ebx,eax
  415e9d:	jns    0x415ef9
  415e9f:	push   ds
  415ea0:	int3   
  415ea1:	xchg   dh,ah
  415ea3:	das    
  415ea4:	jno    0x415ef1
  415ea6:	and    edi,DWORD PTR [eax-0x3d884dd3]
  415eac:	cwde   
  415ead:	xchg   ebp,eax
  415eae:	(bad)  
  415eaf:	jg     0x415f06
  415eb1:	lods   al,BYTE PTR ds:[esi]
  415eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb3:	jo     0x415e6d
  415eb5:	shr    BYTE PTR cs:[eax+0x30],0x50
  415eba:	adc    DWORD PTR [eax+0x2b],esi
  415ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ebe:	mov    eax,0x14ee83a6
  415ec3:	cdq    
  415ec4:	imul   ebp,DWORD PTR [edi-0x6deae0cb],0x9b04e45e
  415ece:	sub    esp,DWORD PTR [edx+0x265796c3]
  415ed4:	and    eax,0x23d5cd95
  415ed9:	ret    0x714c
  415edc:	mov    edx,0xcf788b05
  415ee1:	ret    0xbb19
  415ee4:	dec    edx
  415ee5:	xchg   ebp,eax
  415ee6:	frstor [edx-0x1729d31b]
  415eec:	cmp    DWORD PTR [edi-0x2a],0xdd99f1f9
  415ef3:	xchg   ecx,eax
  415ef4:	(bad)  
  415ef5:	call   0xf7ae:0xd9f10cc3
  415efc:	cmc    
  415efd:	bound  ebp,QWORD PTR [edi]
  415eff:	(bad)  [esi+0xb]
  415f02:	and    BYTE PTR [eax+0x4c],dh
  415f05:	mov    ?,esi
  415f07:	sbb    eax,0xd6872903
  415f0c:	cs xchg esp,eax
  415f0e:	loopne 0x415eaa
  415f10:	(bad)  
  415f11:	lahf   
  415f12:	pushf  
  415f13:	push   0x9dcbb54a
  415f18:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  415f1a:	or     esi,DWORD PTR [ebx+0x61]
  415f1d:	retf   0xf7c3
  415f20:	xor    BYTE PTR [edi-0x5afa901b],ah
  415f26:	and    eax,0x21311e51
  415f2b:	mov    al,ds:0x1b7da8d0
  415f30:	xor    DWORD PTR [ebx-0x39],ebp
  415f33:	ins    DWORD PTR es:[edi],dx
  415f34:	fidiv  WORD PTR [ebp-0x6b1cd229]
  415f3a:	mov    eax,0xc2e5dd70
  415f3f:	xchg   ebp,eax
  415f40:	pop    ebp
  415f41:	sbb    al,0xd5
  415f43:	adc    al,0x82
  415f45:	and    al,al
  415f47:	test   BYTE PTR [ebx-0x50f56426],0xbe
  415f4e:	(bad)
  415f52:	vcmpss xmm2,xmm4,DWORD PTR [edx],0x6e
  415f57:	(bad)  
  415f58:	sub    BYTE PTR [edx-0x12],bh
  415f5b:	mov    dh,0x78
  415f5d:	or     DWORD PTR [ebp+0x2b],esi
  415f60:	dec    ecx
  415f61:	xchg   ebx,ebp
  415f63:	sbb    eax,0x773d40c5
  415f68:	clc    
  415f69:	imul   edx,edx,0x6185e2f
  415f6f:	mov    dh,0x5
  415f71:	cdq    
  415f72:	loop   0x415f85
  415f74:	imul   ecx,ecx,0x28
  415f77:	sub    BYTE PTR [ecx-0x25],cl
  415f7a:	neg    DWORD PTR [eax-0x1702a6]
  415f80:	inc    esi
  415f81:	sbb    al,0xdd
  415f83:	sub    esp,edi
  415f85:	sbb    al,0xaa
  415f87:	pop    esp
  415f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f8a:	lea    esp,ds:0xd8b248cf
  415f90:	jnp    0x415f28
  415f92:	loop   0x415fea
  415f94:	icebp  
  415f95:	lahf   
  415f96:	cmp    DWORD PTR [eax+0x23],edi
  415f99:	pop    es
  415f9a:	sub    BYTE PTR [ebx],0x93
  415f9d:	mov    dh,0x1d
  415f9f:	push   edi
  415fa0:	fadd   DWORD PTR [eax+0x5a]
  415fa3:	dec    esp
  415fa4:	popf   
  415fa5:	xor    ah,BYTE PTR [eax-0x70]
  415fa8:	sbb    ecx,DWORD PTR [ecx+0x358e5246]
  415fae:	and    BYTE PTR [esi-0xdeb78d4],dh
  415fb4:	inc    ecx
  415fb5:	not    BYTE PTR [edi]
  415fb7:	dec    esi
  415fb8:	mov    ecx,0xe3bc0e93
  415fbd:	push   eax
  415fbe:	mov    ebp,0x4539fe13
  415fc3:	jp     0x415fc1
  415fc5:	aad    0xe0
  415fc7:	mov    edx,DWORD PTR [ecx-0xa03952d]
  415fcd:	add    al,BYTE PTR [ebx]
  415fcf:	(bad)  
  415fd0:	ins    DWORD PTR es:[edi],dx
  415fd1:	aas    
  415fd2:	sub    dl,BYTE PTR [esi-0x7c3dc075]
  415fd8:	mov    ch,0x5e
  415fda:	jge    0x415f90
  415fdc:	inc    edi
  415fdd:	ret    
  415fde:	mov    ah,0x57
  415fe0:	out    0x9e,al
  415fe2:	add    al,0x9
  415fe4:	out    dx,al
  415fe5:	xchg   esi,eax
  415fe6:	pop    ds
  415fe7:	dec    edx
  415fe8:	int3   
  415fe9:	pop    ecx
  415fea:	repnz mov bh,0x32
  415fed:	daa    
  415fee:	sti    
  415fef:	and    eax,0xb398b9b5
  415ff4:	out    0x8e,al
  415ff6:	retf   
  415ff7:	(bad)  
  415ff8:	arpl   WORD PTR [ecx+edx*1],bp
  415ffb:	cmp    bh,BYTE PTR [esi+eiz*8]
  415ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fff:	mov    edx,0xf5bfa945
  416004:	mov    es,WORD PTR [edi]
  416006:	mov    al,0xe1
  416008:	cdq    
  416009:	mov    WORD PTR [ecx-0x2f84ccbb],?
  41600f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416010:	imul   ecx,edx,0xffffffec
  416013:	or     BYTE PTR [esi],0x2a
  416016:	pop    edx
  416017:	stos   DWORD PTR es:[edi],eax
  416018:	add    ebx,DWORD PTR [eax-0x7a43ae9d]
  41601e:	dec    edi
  41601f:	add    esp,esi
  416021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416022:	adc    eax,0xb401a79
  416027:	xchg   ecx,eax
  416028:	mov    esp,0x56c75c56
  41602d:	shl    BYTE PTR [ebx],1
  41602f:	add    dl,dl
  416031:	adc    al,0xdf
  416033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416034:	ins    BYTE PTR es:[edi],dx
  416035:	mov    ds:0x6239eca8,al
  41603a:	push   eax
  41603b:	adc    eax,0x80013aea
  416040:	xchg   ecx,eax
  416041:	dec    ebp
  416042:	int3   
  416043:	or     BYTE PTR [eax+0x2926e2ae],0x5d
  41604a:	call   0xaf40:0x4d791d65
  416051:	sub    BYTE PTR fs:[edi+0x6f],bl
  416055:	add    BYTE PTR [ecx+0x14ad012d],0xe9
  41605c:	push   edi
  41605d:	fadd   st,st(6)
  41605f:	push   ebx
  416060:	pop    esi
  416061:	mov    ebx,0x60f6cb99
  416066:	xchg   esp,eax
  416067:	rcl    edx,cl
  416069:	in     eax,0xa
  41606b:	pop    esi
  41606c:	mov    dh,0xf6
  41606e:	jmp    0xd3b15077
  416073:	jno    0x416098
  416075:	div    BYTE PTR [ebp-0x1a]
  416078:	cwde   
  416079:	das    
  41607a:	rol    esp,cl
  41607c:	mov    bl,al
  41607e:	aad    0x7d
  416080:	(bad)  
  416081:	jne    0x4160ee
  416083:	inc    edx
  416084:	je     0x4160b6
  416086:	fcomp  QWORD PTR [edx+0x3a]
  416089:	pop    ebx
  41608a:	pop    edx
  41608b:	add    eax,0x5919afb7
  416090:	je     0x416037
  416092:	lds    esp,FWORD PTR [edx+0x2529fd5a]
  416098:	ss pop ecx
  41609a:	loope  0x416113
  41609c:	pop    esi
  41609d:	jo     0x416091
  41609f:	test   eax,0x54fe54f4
  4160a4:	jg     0x4160a7
  4160a6:	into   
  4160a7:	lock and ebp,eax
  4160aa:	push   ecx
  4160ab:	xchg   ecx,eax
  4160ac:	lods   al,BYTE PTR ds:[esi]
  4160ad:	scas   al,BYTE PTR es:[edi]
  4160ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160af:	cli    
  4160b0:	adc    DWORD PTR [ecx-0x1e5cd08b],edi
  4160b6:	(bad)  
  4160b7:	sbb    edx,DWORD PTR [edx+eiz*2]
  4160ba:	cdq    
  4160bb:	dec    eax
  4160bc:	enter  0xf520,0xcf
  4160c0:	add    eax,0x59b8ab84
  4160c5:	adc    BYTE PTR [edi-0x2e],0x74
  4160c9:	ret    0xc804
  4160cc:	lods   eax,DWORD PTR ds:[esi]
  4160cd:	cmp    al,BYTE PTR [eax-0x56513811]
  4160d3:	mov    ds:0x6c571530,eax
  4160d8:	int    0x0
  4160da:	fsubr  DWORD PTR [eax+ebx*1-0xc580acd]
  4160e1:	pusha  
  4160e2:	mov    ds:0x15c4f565,eax
  4160e7:	xor    esi,esi
  4160e9:	sbb    ah,ch
  4160eb:	aas    
  4160ec:	and    DWORD PTR [edi+0x1b],ebx
  4160ef:	add    ebx,DWORD PTR ds:0x4b5770cc
  4160f5:	xchg   BYTE PTR [esi],ah
  4160f7:	rol    BYTE PTR [ecx],0xfa
  4160fa:	loopne 0x4160e8
  4160fc:	pop    eax
  4160fd:	sbb    BYTE PTR [esi+0x2c],0x2a
  416101:	add    ecx,ecx
  416103:	jae    0x416133
  416105:	into   
  416106:	adc    edx,ebp
  416108:	mov    bl,0x90
  41610a:	cli    
  41610b:	inc    esi
  41610c:	fst    DWORD PTR [edi]
  41610e:	push   ecx
  41610f:	mov    dh,0xa9
  416111:	pop    ebp
  416112:	dec    ebp
  416113:	lods   eax,DWORD PTR ds:[esi]
  416114:	jmp    0x416132
  416116:	cld    
  416117:	jb     0x4160a2
  416119:	jl     0x416197
  41611b:	imul   edx,DWORD PTR [edi-0x18b59827],0x58
  416122:	cmp    BYTE PTR [eax],dh
  416124:	jl     0x416101
  416126:	xor    dh,BYTE PTR [esi+0xb]
  416129:	xor    eax,DWORD PTR [ebp-0x338bcb25]
  41612f:	jb     0x416196
  416131:	dec    ecx
  416132:	mov    dh,0x2d
  416134:	jl     0x4160e8
  416136:	and    DWORD PTR [eax+0x5420913b],0x25
  41613d:	add    DWORD PTR [ebx+0x325a985b],edi
  416143:	fs xor al,0x53
  416146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416147:	mov    dh,0xac
  416149:	mov    cl,0xe8
  41614b:	das    
  41614c:	shr    ah,cl
  41614e:	mov    bl,BYTE PTR [ebx-0x31]
  416151:	add    al,0xe0
  416153:	cli    
  416154:	das    
  416155:	cli    
  416156:	sub    eax,0x190aa810
  41615b:	xchg   esi,eax
  41615c:	jmp    0x41613b
  41615e:	imul   esi,ecx,0x63aa9c40
  416164:	imul   esp,DWORD PTR [ebx+0x1cfa8947],0x5142510b
  41616e:	jmp    0x85decc7c
  416173:	jb     0x416158
  416175:	mov    ch,0x54
  416177:	mov    edx,0x4f7f74c7
  41617c:	mov    ds:0x73339a57,al
  416181:	xchg   edx,eax
  416182:	mov    esp,0xb7ac0ccf
  416187:	in     al,0x5d
  416189:	sub    al,0x14
  41618b:	sbb    al,0x3f
  41618d:	or     bh,cl
  41618f:	sub    BYTE PTR [ebx-0x7912ad61],0x67
  416196:	mov    dl,0x9c
  416198:	pavgw  mm0,QWORD PTR [ebx+0x4d]
  41619c:	inc    edx
  41619d:	lods   eax,DWORD PTR ds:[esi]
  41619e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41619f:	mov    ecx,0x632f6d4c
  4161a4:	ficom  DWORD PTR [ecx+0x5f]
  4161a7:	xchg   ebx,eax
  4161a8:	lock pushf 
  4161aa:	add    BYTE PTR [esp+esi*8],ah
  4161ad:	inc    ebx
  4161ae:	stos   DWORD PTR es:[edi],eax
  4161af:	xor    cl,BYTE PTR [ecx]
  4161b1:	repnz loop 0x41621b
  4161b4:	iret   
  4161b5:	fadd   DWORD PTR [esp+eax*8+0x1db4cdbb]
  4161bc:	scas   eax,DWORD PTR es:[edi]
  4161bd:	repnz icebp 
  4161bf:	js     0x416207
  4161c1:	inc    esi
  4161c2:	gs pop eax
  4161c4:	dec    edx
  4161c5:	xor    al,0x4a
  4161c7:	sub    al,0xdc
  4161c9:	mov    cl,0xc7
  4161cb:	ret    
  4161cc:	mov    ds:0x94d64c29,al
  4161d1:	fisub  DWORD PTR [edx+0x712a7648]
  4161d7:	icebp  
  4161d8:	(bad)  
  4161d9:	mov    ds:0x4c639823,eax
  4161de:	xchg   ebp,eax
  4161df:	(bad)  [edx+0x55]
  4161e2:	test   al,0xb6
  4161e4:	pop    edi
  4161e5:	jbe    0x41617b
  4161e7:	adc    ah,bh
  4161e9:	(bad)  
  4161ea:	adc    bh,BYTE PTR [edi+0x58]
  4161ed:	aaa    
  4161ee:	in     al,0x5b
  4161f0:	add    DWORD PTR [ecx+edx*8+0x51],eax
  4161f4:	jb     0x4161ec
  4161f6:	sub    DWORD PTR [ebp+eiz*4+0x3b],edx
  4161fa:	out    0x14,eax
  4161fc:	pop    ebp
  4161fd:	mov    esi,0x71c68530
  416202:	(bad)  
  416203:	mov    ebx,0xbec5fc09
  416208:	jl     0x416240
  41620a:	shl    DWORD PTR [eax+0x65a189d9],1
  416210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416211:	into   
  416212:	add    DWORD PTR [edi+0x68d71e30],ebx
  416218:	xlat   BYTE PTR ds:[ebx]
  416219:	jge    0x416251
  41621b:	enter  0xf690,0xf7
  41621f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416221:	cmp    BYTE PTR [ebp+0x59c3d7f6],al
  416227:	mov    edi,0x70ce8ca5
  41622c:	sbb    esp,DWORD PTR [ecx]
  41622e:	xchg   BYTE PTR [ebx-0x49],ch
  416231:	cwde   
  416232:	ja     0x4162a8
  416234:	stos   BYTE PTR es:[edi],al
  416235:	mov    edx,0xd4a977d3
  41623a:	mov    cl,0x8f
  41623c:	push   ss
  41623d:	push   0x9
  41623f:	jnp    0x4162b3
  416241:	xchg   bh,bh
  416243:	dec    eax
  416244:	xor    edx,esi
  416246:	add    eax,0x9b9b02b6
  41624b:	repz mov edx,0x69f275a8
  416251:	das    
  416252:	push   ebp
  416253:	mov    DWORD PTR fs:[edx-0x13684c7a],ecx
  41625a:	popa   
  41625b:	and    bl,0x54
  41625e:	sub    ebp,DWORD PTR [edx+esi*1+0x42]
  416262:	cmp    al,0x69
  416264:	jo     0x4162c8
  416266:	lahf   
  416267:	das    
  416268:	sbb    BYTE PTR [esi],0x25
  41626b:	clc    
  41626c:	jno    0x41623a
  41626e:	sub    BYTE PTR [edi],0xfc
  416271:	jae    0x4162b1
  416273:	loope  0x416205
  416275:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416277:	fdiv   DWORD PTR [eax+eax*2+0x51]
  41627b:	adc    ecx,ecx
  41627d:	sub    al,dl
  41627f:	inc    edx
  416280:	cmp    dh,al
  416282:	sbb    eax,0x69a04c9a
  416287:	fbld   TBYTE PTR [edi+eax*2+0x38]
  41628b:	xchg   ebp,eax
  41628c:	push   cs
  41628d:	cmp    al,0x67
  41628f:	hlt    
  416290:	lods   al,BYTE PTR ds:[esi]
  416291:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416293:	pop    es
  416294:	or     al,0xc5
  416296:	cmp    ebx,DWORD PTR [esi-0x62117134]
  41629c:	lods   eax,DWORD PTR ds:[esi]
  41629d:	dec    esi
  41629e:	cmp    ah,BYTE PTR [edx-0x1c]
  4162a1:	cdq    
  4162a2:	or     DWORD PTR [eax],edx
  4162a4:	out    dx,al
  4162a5:	cmp    cl,dh
  4162a7:	fdivrp st(3),st
  4162a9:	(bad)  
  4162aa:	ss or  bh,dl
  4162ad:	stc    
  4162ae:	ret    
  4162af:	rol    DWORD PTR [eax],1
  4162b1:	jp     0x4162dc
  4162b3:	(bad)  
  4162b4:	xor    DWORD PTR ss:[eax-0x4e],edx
  4162b8:	dec    esp
  4162b9:	in     eax,0xc2
  4162bb:	cli    
  4162bc:	sti    
  4162bd:	xor    dh,BYTE PTR [eax]
  4162bf:	mov    ebp,DWORD PTR [ebx-0x4f]
  4162c2:	in     al,dx
  4162c3:	jmp    0x694b:0x9d2df10
  4162ca:	push   ebx
  4162cb:	push   edx
  4162cc:	mov    ebx,0x88a602a5
  4162d1:	rcr    edi,0x3d
  4162d4:	test   al,0x90
  4162d6:	xacquire xchg BYTE PTR [eax+0x4b0a126d],ch
  4162dd:	mov    ecx,es
  4162df:	pop    DWORD PTR [ebp-0x7eeb3e95]
  4162e5:	xchg   BYTE PTR [edx+0x61],cl
  4162e8:	or     al,0xb0
  4162ea:	push   0xe55533f8
  4162ef:	cld    
  4162f0:	leave  
  4162f1:	dec    ebp
  4162f2:	mov    edx,0xed7bf8a0
  4162f7:	sub    al,0xfd
  4162f9:	outs   dx,DWORD PTR ds:[esi]
  4162fa:	xchg   ebx,eax
  4162fb:	ja     0x41634a
  4162fd:	mov    esi,DWORD PTR [edi+0x3a26f7c5]
  416303:	retf   0xda74
  416306:	outs   dx,DWORD PTR ds:[esi]
  416307:	dec    ebx
  416308:	les    esp,FWORD PTR [edx+0x4b]
  41630b:	jmp    0x67759360
  416310:	arpl   WORD PTR [ecx],di
  416312:	cmp    ah,BYTE PTR [ecx-0xc0a68f9]
  416318:	int    0xfc
  41631a:	jnp    0x4162c2
  41631c:	push   0x25
  41631e:	fisubr DWORD PTR [edx-0x39]
  416321:	lock out dx,eax
  416323:	outs   dx,BYTE PTR ds:[esi]
  416324:	mov    ah,0xce
  416326:	cmp    DWORD PTR [edx+0x72228569],esi
  41632c:	icebp  
  41632d:	das    
  41632e:	aam    0x4e
  416330:	rcl    DWORD PTR [ecx-0x3],cl
  416333:	xor    ch,ah
  416335:	into   
  416336:	in     eax,dx
  416337:	push   ss
  416338:	adc    al,0x13
  41633a:	adc    ch,BYTE PTR [edi+edx*1+0x6d]
  41633e:	loopne 0x41638d
  416340:	and    DWORD PTR [esi+0x71],ebp
  416343:	out    dx,eax
  416344:	loope  0x416304
  416346:	push   ss
  416347:	loope  0x4162df
  416349:	pop    edx
  41634a:	add    BYTE PTR [edi-0x72],cl
  41634d:	nop
  41634e:	rcl    edi,cl
  416350:	in     eax,0x91
  416352:	and    BYTE PTR [eax+0x2afe70bc],0x33
  416359:	stos   DWORD PTR es:[edi],eax
  41635a:	jl     0x41636a
  41635c:	pop    ds
  41635d:	xor    BYTE PTR [ecx-0x6e],ch
  416360:	or     esi,DWORD PTR es:[esi-0x4e]
  416364:	inc    ebp
  416365:	lock sbb esi,DWORD PTR [edx-0x6e]
  416369:	rcr    DWORD PTR [edx],0x4d
  41636c:	cmp    BYTE PTR [ebp+0x6db3d744],dl
  416372:	jbe    0x4163c1
  416374:	leave  
  416375:	mov    edx,0x40e5d5c0
  41637a:	and    DWORD PTR [ebx-0x19],esp
  41637d:	xchg   ebx,eax
  41637e:	pop    ecx
  41637f:	mov    ds,WORD PTR [esi]
  416381:	addr16 mov edi,0x2cb1f3b3
  416387:	sar    DWORD PTR [ebp-0x76],cl
  41638a:	out    dx,eax
  41638b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41638c:	iret   
  41638d:	jbe    0x41636e
  41638f:	push   0xffffffc1
  416391:	mov    WORD PTR ds:[edi-0x72],?
  416395:	push   edx
  416396:	push   esi
  416397:	hlt    
  416398:	cmc    
  416399:	fstp   st(5)
  41639b:	jb     0x41637a
  41639d:	mov    ah,0x82
  41639f:	jmp    0x41638f
  4163a1:	sti    
  4163a2:	lds    ebx,FWORD PTR [ebx-0x259855dc]
  4163a8:	pop    ebp
  4163a9:	jns    0x4163dd
  4163ab:	arpl   si,bx
  4163ad:	jno    0x4163a6
  4163af:	shr    BYTE PTR [edi-0x6e],0xb5
  4163b3:	fist   DWORD PTR [ecx+ebx*2]
  4163b6:	jnp    0x41642e
  4163b8:	xchg   BYTE PTR [esi+0x71],cl
  4163bb:	sbb    BYTE PTR [eax+0x35],0xae
  4163bf:	inc    ebp
  4163c0:	dec    ecx
  4163c1:	add    cl,BYTE PTR [eax]
  4163c3:	lods   eax,DWORD PTR ds:[esi]
  4163c4:	add    DWORD PTR [edi+0x45b69b4e],ebx
  4163ca:	daa    
  4163cb:	cld    
  4163cc:	or     ah,cl
  4163ce:	cmc    
  4163cf:	jns    0x4163e5
  4163d1:	lock or DWORD PTR [eax-0x96ec608],0xa1dd360d
  4163dc:	aaa    
  4163dd:	fiadd  DWORD PTR [esi-0x666c0312]
  4163e3:	pusha  
  4163e4:	(bad)  
  4163e5:	ins    DWORD PTR es:[edi],dx
  4163e6:	(bad)  
  4163e7:	sti    
  4163e8:	pop    es
  4163e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163ea:	jns    0x4163bc
  4163ec:	dec    ecx
  4163ed:	sub    DWORD PTR [ebx],eax
  4163ef:	inc    eax
  4163f0:	call   0x484:0x8322d2d7
  4163f7:	pop    edi
  4163f8:	push   eax
  4163f9:	dec    ecx
  4163fa:	add    BYTE PTR [ecx-0x3da6c6e8],dh
  416400:	sbb    BYTE PTR ds:0x25738dad,0x2f
  416407:	ror    DWORD PTR [ebx],0xc
  41640a:	jl     0x416475
  41640c:	mov    edx,0x4fbc1b77
  416411:	jp     0x416431
  416413:	pop    eax
  416414:	pop    edi
  416415:	cwde   
  416416:	pop    eax
  416417:	mov    eax,ds:0x9a5ab41e
  41641c:	xor    BYTE PTR [edi],bl
  41641e:	jmp    0xcfb0c204
  416423:	jno    0x4163db
  416425:	lock xchg esp,eax
  416427:	cmp    al,0x5a
  416429:	and    al,0xf9
  41642b:	and    ch,ch
  41642d:	pushf  
  41642e:	push   ds
  41642f:	jecxz  0x416400
  416431:	cmp    cl,dl
  416433:	imul   esi,DWORD PTR [eax],0xffffffc9
  416436:	xor    edi,eax
  416438:	push   0x36
  41643a:	add    BYTE PTR [ebx],ah
  41643c:	mov    edx,0x5d58700c
  416441:	push   ecx
  416442:	sub    al,0xe9
  416444:	sbb    eax,0xbe5e195d
  416449:	mov    al,ds:0xdcd0e8cd
  41644e:	mov    ebp,0x6dfe40c4
  416453:	lods   eax,DWORD PTR ds:[esi]
  416454:	shl    BYTE PTR [eax-0x1c],cl
  416457:	je     0x4164be
  416459:	sar    edi,cl
  41645b:	mov    edi,eax
  41645d:	push   es
  41645e:	xchg   al,bl
  416460:	adc    al,0x3d
  416462:	outs   dx,BYTE PTR ds:[esi]
  416463:	push   ss
  416464:	cdq    
  416465:	push   esi
  416466:	mov    ebp,0xb9162ab4
  41646b:	mov    bl,0x26
  41646d:	dec    edi
  41646e:	inc    ebp
  41646f:	jle    0x4163ff
  416471:	not    BYTE PTR [edi+0x57]
  416474:	sahf   
  416475:	stos   BYTE PTR es:[edi],al
  416476:	jmp    FWORD PTR [esi+0x3b]
  416479:	das    
  41647a:	inc    ebx
  41647b:	popa   
  41647c:	pushf  
  41647d:	in     eax,0x46
  41647f:	lds    ebx,FWORD PTR [esi+0x41]
  416482:	or     eax,0x8af39b3
  416487:	xor    BYTE PTR es:[esi-0x44d88c8a],0x50
  41648f:	jecxz  0x4164c1
  416491:	jno    0x41641c
  416493:	cmp    BYTE PTR cs:[ecx-0x51e6689e],cl
  41649a:	pusha  
  41649b:	sub    bl,BYTE PTR [esi+0x2b]
  41649e:	test   eax,0xd4a42ac2
  4164a3:	sub    ebp,DWORD PTR [esi-0x3523ced5]
  4164a9:	out    dx,al
  4164aa:	sbb    eax,0xb19487a7
  4164af:	lock scas al,BYTE PTR es:[edi]
  4164b1:	cmp    eax,0xa894b4cb
  4164b6:	push   es
  4164b7:	jge    0x4164b2
  4164b9:	dec    edi
  4164ba:	les    ebx,FWORD PTR [ebx-0x5b85f7bb]
  4164c0:	xchg   ebx,eax
  4164c1:	imul   ebp,DWORD PTR [esi+ebp*1+0x4a6c04d0],0x17a8d953
  4164cc:	sbb    al,0xe4
  4164ce:	sub    bh,dh
  4164d0:	daa    
  4164d1:	rol    BYTE PTR [edx-0x22db6b75],cl
  4164d7:	mov    al,0xa0
  4164d9:	and    DWORD PTR gs:[edx],ebx
  4164dc:	push   ss
  4164dd:	lods   eax,DWORD PTR ds:[esi]
  4164de:	ror    DWORD PTR ds:0xa4b5f660,0x9c
  4164e5:	mov    esp,0x55e90cad
  4164ea:	call   0x2a73984d
  4164ef:	mov    cl,0x61
  4164f1:	(bad)  
  4164f2:	xor    bh,ah
  4164f4:	or     edi,DWORD PTR [edi+esi*1-0x62]
  4164f8:	push   eax
  4164f9:	data16 rep lods ax,WORD PTR ds:[esi]
  4164fd:	jno    0x416503
  4164ff:	xchg   esp,eax
  416500:	ja     0x416535
  416502:	sbb    BYTE PTR [esp+ebp*2+0x31],0x3a
  416507:	nop
  416508:	out    dx,eax
  416509:	iret   
  41650a:	and    al,0x1e
  41650c:	pusha  
  41650d:	and    BYTE PTR [esp+ebp*4],0x6
  416511:	xor    ebp,DWORD PTR ds:0x2e5c15ca
  416517:	mov    WORD PTR [edi-0x5c],fs
  41651a:	test   al,cl
  41651c:	xchg   esi,eax
  41651d:	adc    eax,0x6143d876
  416522:	(bad)  
  416523:	cdq    
  416524:	inc    esp
  416525:	ret    
  416526:	fiadd  DWORD PTR [ecx]
  416528:	lods   al,BYTE PTR ds:[esi]
  416529:	xchg   edi,eax
  41652a:	les    esp,FWORD PTR [eax]
  41652c:	imul   ebx,DWORD PTR [ecx-0x56],0x806c6e86
  416533:	adc    BYTE PTR [ecx-0x2adcce91],al
  416539:	fmul   DWORD PTR [ecx-0x66db0209]
  41653f:	sbb    DWORD PTR [eax],edi
  416541:	push   ss
  416542:	mov    ds:0x2267cceb,eax
  416547:	push   0xc56b2451
  41654c:	fcmovne st,st(2)
  41654e:	add    esi,edi
  416550:	mov    ds:0x7ddd1ed5,eax
  416555:	mov    gs,edx
  416557:	xor    al,0xad
  416559:	cmp    BYTE PTR [edi+0x2a98f2f2],ch
  41655f:	ss mov ebx,0x31631c64
  416565:	or     al,0xe2
  416567:	inc    esp
  416568:	sar    dl,cl
  41656a:	or     ebp,DWORD PTR [ebx+0x64]
  41656d:	push   ss
  41656e:	pop    ebx
  41656f:	fbstp  TBYTE PTR [ecx]
  416571:	adc    BYTE PTR cs:[ebp+0x6c],cl
  416575:	lea    ecx,[ecx-0x57e76ec7]
  41657b:	or     BYTE PTR [ecx+eiz*4+0x77],bl
  41657f:	sti    
  416580:	pop    ebp
  416581:	test   eax,0x5c4edef5
  416586:	pop    edx
  416587:	inc    ecx
  416588:	sbb    WORD PTR [esi],ax
  41658b:	and    BYTE PTR [esi-0x18437a81],bl
  416591:	pop    ecx
  416592:	sub    BYTE PTR [ebx],0x4f
  416595:	ret    
  416596:	cli    
  416597:	rcl    BYTE PTR [edi-0x44],0x6d
  41659b:	pop    edx
  41659c:	ins    BYTE PTR es:[edi],dx
  41659d:	lds    eax,FWORD PTR [edx+ecx*1-0x69d35b33]
  4165a4:	pop    ebx
  4165a5:	add    ebp,esp
  4165a7:	jnp    0x416542
  4165a9:	mov    ebp,0x9568dec9
  4165ae:	scas   eax,DWORD PTR es:[edi]
  4165af:	inc    eax
  4165b0:	std    
  4165b1:	enter  0xf79c,0xe7
  4165b5:	and    DWORD PTR [esp],ecx
  4165b8:	jno    0x41658b
  4165ba:	inc    eax
  4165bb:	stos   BYTE PTR es:[edi],al
  4165bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165bd:	sub    edi,DWORD PTR [eax+0x21]
  4165c0:	add    al,0xa7
  4165c2:	sub    eax,0xac9cb7ef
  4165c7:	xor    eax,0x9f89adec
  4165cc:	add    DWORD PTR [esi+0x4],0xfffffffa
  4165d0:	repz fs cwde 
  4165d3:	idiv   BYTE PTR ds:0xa6637aa6
  4165d9:	fdivr  DWORD PTR [ebx+0x29e8b504]
  4165df:	or     esp,edx
  4165e1:	jecxz  0x4165a3
  4165e3:	sti    
  4165e4:	leave  
  4165e5:	cmc    
  4165e6:	in     eax,0x32
  4165e8:	cmp    eax,0xa78a9b34
  4165ed:	daa    
  4165ee:	xchg   edx,eax
  4165ef:	jae    0x41662d
  4165f1:	clc    
  4165f2:	in     al,0x55
  4165f4:	dec    edx
  4165f5:	pop    esp
  4165f6:	pop    esi
  4165f7:	push   ds
  4165f8:	adc    DWORD PTR [ecx-0x5e],edx
  4165fb:	mul    BYTE PTR [ebx-0x55]
  4165fe:	cdq    
  4165ff:	xor    edi,DWORD PTR [esi]
  416601:	in     eax,dx
  416602:	xchg   esp,eax
  416603:	or     DWORD PTR [edi-0x4f814781],edx
  416609:	xor    eax,0x9b5299e1
  41660e:	mov    bh,0x58
  416610:	or     BYTE PTR [eax-0x4e9b2be8],al
  416616:	mov    ecx,0x28681ee
  41661b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41661c:	clc    
  41661d:	fidiv  DWORD PTR [ebx-0x34]
  416620:	push   edx
  416621:	not    DWORD PTR [edx-0x78]
  416624:	test   al,0x5f
  416626:	and    eax,0x4c620474
  41662b:	xor    DWORD PTR [ebx+esi*8+0x7cb217a6],esp
  416632:	xor    ebx,esi
  416634:	mov    esp,0x29c386d8
  416639:	sbb    DWORD PTR [edx],esp
  41663b:	pop    es
  41663c:	jbe    0x416630
  41663e:	cmp    ah,BYTE PTR [esi*8-0x5827e303]
  416645:	sbb    eax,0xd1ec08cb
  41664a:	adc    cl,al
  41664c:	pop    eax
  41664d:	outs   dx,DWORD PTR ds:[esi]
  41664e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41664f:	fsub   st(6),st
  416651:	mov    bl,0x44
  416653:	push   eax
  416654:	aaa    
  416655:	fcmovne st,st(6)
  416657:	ins    BYTE PTR es:[edi],dx
  416658:	int    0x94
  41665a:	mov    ebx,0x8299708f
  41665f:	or     eax,DWORD PTR [eax+0x4a045f]
  416665:	popa   
  416666:	(bad)  
  416667:	fnstcw WORD PTR [edx+0x1ef272a3]
  41666d:	popf   
  41666e:	call   0x6cca7680
  416673:	sub    eax,0x401ec09e
  416678:	stos   BYTE PTR es:[edi],al
  416679:	es lahf 
  41667b:	mov    ds:0xf5aba1f1,eax
  416680:	xchg   ecx,eax
  416681:	aas    
  416682:	sub    al,BYTE PTR [ebx+0x67a5f34f]
  416688:	repz aaa 
  41668a:	mov    cl,0xe4
  41668c:	rcl    DWORD PTR [ecx-0x414fa87c],cl
  416692:	sbb    DWORD PTR [ebp+0x1b627ed3],ecx
  416698:	imul   esi,DWORD PTR [edi+0x55299e54],0x5e005c95
  4166a2:	or     edx,esp
  4166a4:	test   BYTE PTR [esi],ah
  4166a6:	add    DWORD PTR [eax+0x2b3efeeb],esp
  4166ac:	and    esi,edi
  4166ae:	lock lea edx,[ebp+0x15]
  4166b2:	pop    ecx
  4166b3:	je     0x4166a9
  4166b5:	mov    ch,0x82
  4166b7:	mov    ebp,0x809a1b73
  4166bc:	mul    BYTE PTR [edx+0x34]
  4166bf:	cdq    
  4166c0:	pop    ds
  4166c1:	lock int3 
  4166c3:	jns    0x4166f5
  4166c5:	jmp    DWORD PTR [esi+ebp*2-0x84d09ba]
  4166cc:	xchg   DWORD PTR [edi],ebp
  4166ce:	fdivr  QWORD PTR [eax]
  4166d0:	repz push es
  4166d2:	push   es
  4166d3:	sbb    BYTE PTR ds:0x64376284,0x70
  4166da:	xor    DWORD PTR [esi],eax
  4166dc:	scas   eax,DWORD PTR es:[edi]
  4166dd:	cld    
  4166de:	(bad)  
  4166df:	div    DWORD PTR [esi-0x3608cc21]
  4166e5:	enter  0xc022,0x2
  4166e9:	jle    0x41670a
  4166eb:	or     eax,ebx
  4166ed:	xchg   ebp,eax
  4166ee:	jl     0x416729
  4166f0:	jp     0x416673
  4166f2:	jo     0x416716
  4166f4:	ins    DWORD PTR es:[edi],dx
  4166f5:	mov    dl,0x48
  4166f7:	imul   esi,ebx,0x30151de0
  4166fd:	mov    ecx,0xb92e325d
  416702:	mov    al,0x74
  416704:	mov    al,ds:0xe6a5ea14
  416709:	jmp    0xd5658469
  41670e:	jmp    0x4166e3
  416710:	loop   0x4166b1
  416712:	jp     0x41672a
  416714:	dec    ebp
  416715:	retf   0x3740
  416718:	imul   esi,DWORD PTR [ebx-0x3fcd2a48],0xffffff9b
  41671f:	(bad)  [edi+0x6b2d3cd3]
  416725:	(bad)  
  416726:	cdq    
  416727:	gs mov ah,0x7d
  41672a:	mov    WORD PTR [edi+0x4a],es
  41672d:	xor    edx,DWORD PTR [ebx-0x6f]
  416730:	scas   al,BYTE PTR es:[edi]
  416731:	pop    esi
  416732:	vmread ebx,eax
  416735:	and    eax,0x60ab3a82
  41673a:	and    esi,DWORD PTR [ebx-0x7a]
  41673d:	aaa    
  41673e:	adc    ah,BYTE PTR [edx+0x64]
  416741:	out    dx,al
  416742:	lods   al,BYTE PTR ds:[esi]
  416743:	(bad)  
  416745:	jnp    0x4167af
  416747:	pop    es
  416748:	jle    0x416780
  41674a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41674b:	xchg   esp,eax
  41674c:	int3   
  41674d:	mov    dl,0x2d
  41674f:	sbb    dl,BYTE PTR [eax]
  416751:	loop   0x41675e
  416753:	sbb    bl,BYTE PTR [ecx-0x2832b3f3]
  416759:	int3   
  41675a:	dec    edx
  41675b:	xchg   BYTE PTR [ecx-0x29],bh
  41675e:	out    dx,eax
  41675f:	jmp    0x695c:0x6ef0ce69
  416766:	adc    al,0x81
  416768:	pushf  
  416769:	std    
  41676a:	lock sub BYTE PTR [ebx-0x48df7303],dl
  416771:	xor    DWORD PTR ds:0x890b001f,ebp
  416777:	in     eax,dx
  416778:	pop    esi
  416779:	add    al,0x44
  41677b:	shl    DWORD PTR [ecx+0x2c3e510d],1
  416781:	jo     0x4167ea
  416783:	popa   
  416784:	and    BYTE PTR [ebx],dh
  416786:	add    eax,0xec46776e
  41678b:	dec    ebx
  41678c:	rcr    DWORD PTR [ecx-0x34],cl
  41678f:	mov    cl,0x3
  416791:	cmp    esp,ebp
  416793:	jmp    0xaa2c:0xaa0cc71e
  41679a:	retf   
  41679b:	push   ebp
  41679c:	in     al,dx
  41679d:	xor    dl,0x81
  4167a0:	dec    eax
  4167a1:	dec    ecx
  4167a2:	lahf   
  4167a3:	loop   0x416813
  4167a5:	jae    0x416810
  4167a7:	xchg   cl,ah
  4167a9:	icebp  
  4167aa:	je     0x41681a
  4167ac:	stc    
  4167ad:	neg    BYTE PTR [ecx+0x1b95ac0c]
  4167b3:	inc    ecx
  4167b4:	pop    ss
  4167b5:	inc    esp
  4167b6:	lds    edx,FWORD PTR [esi-0x17]
  4167b9:	jne    0x4167e0
  4167bb:	loop   0x4167f7
  4167bd:	out    dx,eax
  4167be:	test   DWORD PTR [esi-0x773be2bc],0xf43642ff
  4167c8:	push   esi
  4167c9:	jp     0x416805
  4167cb:	mov    eax,0x818839ad
  4167d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167d1:	inc    esi
  4167d2:	scas   al,BYTE PTR es:[edi]
  4167d3:	push   0xffffffeb
  4167d5:	mov    ah,0x85
  4167d7:	test   DWORD PTR [esi-0x3c],edx
  4167da:	mov    eax,ds:0xa18a9651
  4167df:	(bad)  
  4167e1:	(bad)  
  4167e2:	in     eax,0x38
  4167e4:	mov    edi,0x93b11387
  4167e9:	scas   eax,DWORD PTR es:[edi]
  4167ea:	push   0xffffffa2
  4167ec:	and    al,BYTE PTR [edi+0x5]
  4167ef:	retf   0x239c
  4167f2:	cwde   
  4167f3:	cli    
  4167f4:	ins    DWORD PTR es:[edi],dx
  4167f5:	hlt    
  4167f6:	syscall 
  4167f8:	clc    
  4167f9:	(bad)  
  4167fa:	cmp    bl,BYTE PTR [ecx]
  4167fc:	xor    DWORD PTR [ebp-0x5b],ebp
  4167ff:	jmp    0x4167c3
  416801:	fidivr WORD PTR [esi]
  416803:	mov    dh,BYTE PTR [ecx+0x3e33902b]
  416809:	jmp    0x581a:0x128c693c
  416810:	lea    ebx,[edx]
  416812:	jmp    0x4167ff
  416814:	(bad)  
  416815:	jmp    0x416836
  416817:	repnz sbb DWORD PTR [eax+esi*2],ebx
  41681b:	jbe    0x416866
  41681d:	dec    edx
  41681e:	xor    al,BYTE PTR [esi+eax*2-0x4256931a]
  416825:	lods   eax,DWORD PTR ds:[esi]
  416826:	outs   dx,BYTE PTR ds:[esi]
  416827:	xor    DWORD PTR [ebx-0x5cf65fa9],ebx
  41682d:	lahf   
  41682e:	push   ss
  41682f:	into   
  416830:	dec    BYTE PTR [eax+0x66]
  416833:	jne    0x4167bd
  416835:	fcmovnbe st,st(3)
  416837:	shl    bl,0x8a
  41683a:	xchg   edx,eax
  41683b:	sub    BYTE PTR [ebp+eiz*2+0x7a6b16b2],al
  416842:	(bad)  
  416843:	mov    edi,eax
  416845:	enter  0x339d,0x37
  416849:	adc    al,0xde
  41684b:	jbe    0x416851
  41684d:	jns    0x41686c
  41684f:	ss data16 js 0x4167ec
  416853:	mov    bl,0xac
  416855:	fcmovbe st,st(4)
  416857:	jmp    DWORD PTR [edx-0x55e695c8]
  41685d:	sub    DWORD PTR [esi+eax*8-0x1c636921],edi
  416864:	cmp    DWORD PTR [edi+0x0],ecx
  416867:	dec    eax
  416868:	out    dx,al
  416869:	ret    0xd338
  41686c:	sbb    ah,BYTE PTR [ecx]
  41686e:	test   DWORD PTR [ebp+0x70],edi
  416871:	add    bl,bh
  416873:	fistp  DWORD PTR [edi-0x56d5a0fe]
  416879:	push   ebp
  41687a:	(bad)  
  41687b:	iret   
  41687c:	lahf   
  41687d:	sbb    al,0xfe
  41687f:	and    al,0xe8
  416881:	outs   dx,DWORD PTR ds:[esi]
  416882:	loope  0x41680a
  416884:	jo     0x41687a
  416886:	mov    BYTE PTR [edi+0x17ff524e],ah
  41688c:	popa   
  41688d:	xchg   edi,eax
  41688e:	dec    ecx
  41688f:	mov    esi,0x42d83ecd
  416894:	pop    es
  416895:	ds fxch st(6)
  416898:	into   
  416899:	inc    edi
  41689a:	dec    edi
  41689b:	xor    cl,BYTE PTR [eax-0x53]
  41689e:	lea    esi,[ecx+ebx*4]
  4168a1:	fmulp  st(4),st
  4168a3:	sub    eax,0x9a70be86
  4168a8:	mov    esp,edi
  4168aa:	mov    bh,0x4f
  4168ac:	(bad)  
  4168ae:	pushf  
  4168af:	inc    ebx
  4168b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b1:	sbb    ebx,DWORD PTR [esi+ebx*4-0x4cdd2e5a]
  4168b8:	mov    bl,0xa0
  4168ba:	mov    ch,0x3
  4168bc:	xor    esp,0x84e6961d
  4168c2:	scas   al,BYTE PTR es:[edi]
  4168c3:	pop    ecx
  4168c4:	jmp    0x41690d
  4168c6:	test   BYTE PTR [ecx+0x2f],bh
  4168c9:	and    DWORD PTR [ebp+0x64b5fe36],0x24
  4168d0:	sub    ecx,esi
  4168d2:	xchg   ecx,eax
  4168d3:	in     al,0xb0
  4168d5:	cmp    BYTE PTR [ebp-0x38],cl
  4168d8:	sub    al,0xdb
  4168da:	into   
  4168db:	sahf   
  4168dc:	add    BYTE PTR gs:[edx],cl
  4168df:	inc    eax
  4168e0:	outs   dx,BYTE PTR ds:[esi]
  4168e1:	cmp    DWORD PTR [edi-0x5e3f906b],edi
  4168e7:	ins    BYTE PTR es:[edi],dx
  4168e8:	out    dx,al
  4168e9:	push   ecx
  4168ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168eb:	aaa    
  4168ec:	sub    eax,0xf40ca4ac
  4168f1:	mov    ss:0xd32cfd93,eax
  4168f7:	sbb    al,al
  4168f9:	ds test eax,0x640bf445
  4168ff:	inc    eax
  416900:	jmp    0x416966
  416902:	sbb    cl,dh
  416904:	loopne 0x4168d3
  416906:	rcl    DWORD PTR [ebp-0x4f564948],1
  41690c:	mov    al,ds:0xa85d2fe1
  416911:	xor    DWORD PTR ds:0x318da4d9,esi
  416917:	inc    esp
  416918:	xchg   edi,eax
  416919:	sahf   
  41691a:	push   ds
  41691b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41691d:	(bad)  
  41691e:	push   0xa6ad3bb3
  416923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416924:	jl     0x416968
  416926:	push   edi
  416927:	repz cwde 
  416929:	test   eax,0xddbd3ea2
  41692e:	and    esp,edx
  416930:	pop    ss
  416931:	push   ebx
  416932:	push   ebp
  416933:	mov    ah,dl
  416935:	or     ecx,DWORD PTR [esi]
  416937:	jmp    0x8e56:0x297c5781
  41693e:	adc    al,0x52
  416940:	mov    ds:0x694c55c6,eax
  416945:	call   0xc1247406
  41694a:	test   eax,0xf4ce85db
  41694f:	fidivr WORD PTR fs:[esi-0x37]
  416953:	cmp    DWORD PTR [edx],ecx
  416955:	out    0x52,al
  416957:	inc    ecx
  416958:	shl    ebx,0xc2
  41695b:	pop    es
  41695c:	fidiv  WORD PTR [eax-0x69240b70]
  416962:	sub    dl,ah
  416964:	jae    0x4168ed
  416966:	addr16 sti 
  416968:	jne    0x4168ef
  41696a:	vpminsw ymm1,ymm3,YMMWORD PTR [ebx]
  41696e:	leave  
  41696f:	push   esp
  416970:	mov    esp,ecx
  416972:	fs daa 
  416974:	pop    ss
  416975:	inc    edx
  416976:	inc    ebp
  416977:	and    DWORD PTR ds:0x12553124,edx
  41697d:	xchg   BYTE PTR [ebx-0x4a],al
  416980:	sbb    ecx,DWORD PTR [eax+0x4a]
  416983:	add    dh,ah
  416985:	push   esi
  416986:	(bad)  
  416987:	cli    
  416988:	rcl    BYTE PTR [edx],1
  41698a:	push   esi
  41698b:	jne    0x416971
  41698d:	scas   al,BYTE PTR es:[edi]
  41698e:	adc    BYTE PTR [ebp-0x31],0xc9
  416992:	in     eax,0x83
  416994:	je     0x416993
  416996:	mov    WORD PTR [ebp+0x32],gs
  416999:	and    eax,0x9520a3b1
  41699e:	das    
  41699f:	lods   eax,DWORD PTR ds:[esi]
  4169a0:	mov    bh,0xd0
  4169a2:	neg    ebp
  4169a4:	out    0xec,al
  4169a6:	imul   DWORD PTR [edx]
  4169a8:	fsubr  QWORD PTR ds:[ebx]
  4169ab:	or     DWORD PTR fs:[ecx+0x2],ecx
  4169af:	mov    edi,0x753db9c
  4169b4:	cmp    eax,0xdf42c3dd
  4169b9:	pushf  
  4169ba:	fadd   QWORD PTR [ebx+0x6b016828]
  4169c0:	and    dh,BYTE PTR [edi-0x24]
  4169c3:	adc    BYTE PTR ds:0xb86e7eb6,al
  4169c9:	mov    ah,0x98
  4169cb:	sbb    DWORD PTR [edx],esi
  4169cd:	sub    eax,0xda35ce75
  4169d2:	xor    BYTE PTR [ebx-0x39],0x96
  4169d6:	push   ss
  4169d7:	dec    esi
  4169d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d9:	int    0xee
  4169db:	pushf  
  4169dc:	sahf   
  4169dd:	rol    ch,1
  4169df:	int3   
  4169e0:	cmp    esi,DWORD PTR [ecx]
  4169e2:	mov    WORD PTR [ebx],ds
  4169e4:	push   ecx
  4169e5:	(bad)  
  4169e6:	shl    BYTE PTR [esi+0x46],cl
  4169e9:	out    dx,al
  4169ea:	imul   ebx,DWORD PTR [edi-0xc12ada7],0x20
  4169f1:	shr    BYTE PTR [ebx],0x13
  4169f4:	enter  0x7951,0xb3
  4169f8:	mov    bl,0x80
  4169fa:	fwait
  4169fb:	push   0x181bbb56
  416a00:	out    dx,eax
  416a01:	mov    bl,BYTE PTR [esp+edx*1+0xa]
  416a05:	fisttp WORD PTR [ebp+0x7066c419]
  416a0b:	int3   
  416a0c:	(bad)  
  416a0d:	mov    dl,0x7f
  416a0f:	mov    al,ds:0xf2b0aebd
  416a14:	jg     0x416a2b
  416a16:	fdiv   QWORD PTR [eax+0x37]
  416a19:	imul   edi,DWORD PTR [esi],0xf443e5b7
  416a1f:	xchg   ebx,eax
  416a20:	cmp    eax,0x906c131f
  416a25:	push   edi
  416a26:	and    DWORD PTR [ecx+edi*1+0x28eac7d7],edi
  416a2d:	fs add eax,0x4ff64292
  416a33:	bnd jae 0x416a08
  416a36:	jmp    0x416a6b
  416a38:	mov    BYTE PTR [eax+0x5277667b],bl
  416a3e:	fist   DWORD PTR [edx]
  416a40:	(bad)  
  416a41:	push   esp
  416a42:	nop
  416a43:	leave  
  416a44:	xor    ebx,ecx
  416a46:	aas    
  416a47:	test   BYTE PTR [ebx+0x53e13742],ah
  416a4d:	rcr    DWORD PTR [ebp+0x31c06efd],1
  416a53:	(bad)  
  416a54:	retf   
  416a55:	scas   al,BYTE PTR es:[edi]
  416a56:	jo     0x416a23
  416a58:	ss jmp 0x6f4:0xf8d46cd9
  416a60:	jnp    0x416aa7
  416a62:	idiv   bh
  416a64:	cmp    BYTE PTR [ebx],0x49
  416a67:	jecxz  0x4169eb
  416a69:	pop    esi
  416a6a:	pop    eax
  416a6c:	inc    edi
  416a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a6e:	in     al,dx
  416a6f:	test   al,0x24
  416a71:	add    DWORD PTR [edx],esi
  416a73:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a75:	push   esp
  416a76:	push   ebp
  416a77:	dec    edi
  416a78:	shl    esp,cl
  416a7a:	shr    esi,0xc1
  416a7d:	mov    bh,ah
  416a7f:	adc    edx,DWORD PTR [ebp-0x30]
  416a82:	in     eax,dx
  416a83:	xlat   BYTE PTR ds:[ebx]
  416a84:	pusha  
  416a85:	inc    ebp
  416a86:	mov    ecx,0x4ed42d97
  416a8b:	mov    edi,0xc2dfa208
  416a90:	inc    esi
  416a91:	aaa    
  416a92:	jmp    FWORD PTR [edi-0x414b2123]
  416a98:	sbb    DWORD PTR [edx+0x33c68876],edi
  416a9e:	inc    ecx
  416a9f:	jle    0x416a28
  416aa1:	fst    QWORD PTR [ebx-0x50]
  416aa4:	int3   
  416aa5:	rol    DWORD PTR [ebx-0x74b649f6],1
  416aab:	and    al,0x1
  416aad:	add    BYTE PTR [ebx],cl
  416aaf:	inc    esp
  416ab0:	cmp    cl,BYTE PTR [ecx]
  416ab2:	lods   al,BYTE PTR ds:[esi]
  416ab3:	js     0x416abf
  416ab5:	in     al,0xf4
  416ab7:	aam    0x9b
  416ab9:	int    0x22
  416abb:	inc    esi
  416abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416abd:	mov    ebx,DWORD PTR [edi-0x19c34a9f]
  416ac3:	push   edi
  416ac4:	and    eax,DWORD PTR [ebx]
  416ac6:	les    ebp,FWORD PTR [esi]
  416ac8:	adc    al,0x66
  416aca:	sbb    ecx,edx
  416acc:	dec    ebp
  416acd:	ins    DWORD PTR es:[edi],dx
  416ace:	cmp    bh,BYTE PTR [ebx-0x3da90143]
  416ad4:	loop   0x416b22
  416ad6:	ror    eax,0x6
  416ad9:	add    ah,BYTE PTR ss:[eax+0x741ebb0d]
  416ae0:	and    dh,BYTE PTR [eax+0x6731c7f4]
  416ae6:	pop    ebx
  416ae7:	mov    esp,0x62bf24bd
  416aec:	jno    0x416ae8
  416aee:	ror    ebp,1
  416af0:	stc    
  416af1:	mov    edi,0xae3acea5
  416af6:	xchg   esi,eax
  416af7:	rol    BYTE PTR [ecx],cl
  416af9:	mov    edi,DWORD PTR [ebp+ebx*2+0x7417fbdb]
  416b00:	mov    dl,0xe6
  416b02:	mov    bl,0xa5
  416b04:	mov    fs,WORD PTR [ebp+0xf]
  416b07:	or     al,0x19
  416b09:	cmc    
  416b0a:	add    eax,0x6465f242
  416b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b10:	sbb    eax,0x72588a27
  416b15:	jl     0x416b54
  416b17:	or     al,0x32
  416b19:	fild   WORD PTR [eax+0x1edb573d]
  416b1f:	or     edi,DWORD PTR [ecx+0x30663af6]
  416b25:	cmc    
  416b26:	xor    eax,0xc0e8e1e7
  416b2b:	jne    0x416b55
  416b2d:	cld    
  416b2e:	lds    ebx,FWORD PTR [ebx]
  416b30:	pop    ebp
  416b31:	mov    ecx,esi
  416b33:	cli    
  416b34:	loop   0x416af5
  416b36:	mov    ebx,0x2c6c5334
  416b3b:	shl    DWORD PTR [edi-0xf],cl
  416b3e:	dec    ecx
  416b3f:	test   BYTE PTR [ecx+0x626eeb9b],al
  416b45:	dec    esp
  416b46:	push   esi
  416b47:	repz dec ebp
  416b49:	sti    
  416b4a:	retf   
  416b4b:	inc    eax
  416b4c:	pusha  
  416b4d:	lds    edi,FWORD PTR [edi-0x3ef5de71]
  416b53:	mov    al,ds:0xc942e85b
  416b58:	dec    esi
  416b59:	jle    0x416b3c
  416b5b:	test   DWORD PTR [esi+ebp*4-0x54],0x112a138a
  416b63:	fs hlt 
  416b65:	push   es
  416b66:	dec    bx
  416b68:	jne    0x416b97
  416b6a:	dec    ebp
  416b6b:	(bad)  
  416b6c:	sbb    ecx,DWORD PTR [ebx]
  416b6e:	outs   dx,BYTE PTR ds:[esi]
  416b6f:	in     al,0xf0
  416b71:	gs cmp eax,0xd7f9beb4
  416b77:	pop    ss
  416b78:	lds    edx,FWORD PTR [ecx-0x33fcb626]
  416b7e:	push   edi
  416b7f:	pop    es
  416b80:	rcl    ebx,cl
  416b82:	mov    ch,0xc9
  416b84:	ds stos DWORD PTR es:[edi],eax
  416b86:	mov    edx,0x6f507179
  416b8b:	and    al,0x79
  416b8d:	or     eax,ecx
  416b8f:	imul   edx,DWORD PTR [ecx+0x566c57bb],0x6e422e8e
  416b99:	out    dx,eax
  416b9a:	inc    ebx
  416b9b:	push   ecx
  416b9c:	fisub  WORD PTR ds:0x60d2f138
  416ba2:	inc    ecx
  416ba3:	inc    eax
  416ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ba5:	in     al,dx
  416ba6:	nop
  416ba7:	jno    0x416b96
  416ba9:	cli    
  416baa:	faddp  st(5),st
  416bac:	popa   
  416bad:	mov    esp,0xcf0d1cdd
  416bb2:	xchg   esi,eax
  416bb3:	call   0xfcfe:0x8a6f91e5
  416bba:	mov    ch,0x25
  416bbc:	stos   BYTE PTR es:[edi],al
  416bbd:	mov    ch,0x74
  416bbf:	and    al,0xdc
  416bc1:	jo     0x416c37
  416bc3:	add    bl,BYTE PTR [ebx]
  416bc5:	fs (bad) 
  416bc7:	loopne 0x416c02
  416bc9:	or     DWORD PTR [eax+0x2ef93a43],edx
  416bcf:	pusha  
  416bd0:	jbe    0x416bf8
  416bd2:	push   edi
  416bd3:	mov    ds:0x2658178d,eax
  416bd8:	mov    DWORD PTR [eax+0x21bbea04],esi
  416bde:	mov    ch,0x21
  416be0:	jge    0x416b95
  416be2:	push   ss
  416be3:	fwait
  416be4:	loopne 0x416b89
  416be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be7:	pop    esi
  416be8:	test   BYTE PTR ds:0x3a017ead,dh
  416bee:	mov    ah,ch
  416bf0:	in     al,dx
  416bf1:	jbe    0x416c32
  416bf3:	hlt    
  416bf4:	xor    al,0x65
  416bf6:	inc    edi
  416bf7:	pop    edi
  416bf8:	mov    ecx,0x9b6f94d5
  416bfd:	sub    dl,BYTE PTR [ebp+eax*8-0x37]
  416c01:	ins    BYTE PTR es:[edi],dx
  416c02:	dec    ecx
  416c03:	(bad)  
  416c04:	fiadd  DWORD PTR [esi]
  416c06:	aas    
  416c07:	push   cs
  416c08:	mov    cl,0x21
  416c0a:	push   ss
  416c0b:	pop    ss
  416c0c:	push   esi
  416c0d:	pushf  
  416c0e:	cs mov dh,0xc4
  416c11:	(bad)  
  416c12:	fldenv [edi-0x9ba7a74]
  416c18:	push   cs
  416c19:	cs data16 jae 0x416c14
  416c1d:	cmp    al,0x9
  416c1f:	(bad)  
  416c20:	es out 0xde,al
  416c23:	dec    eax
  416c24:	enter  0x9017,0x38
  416c28:	xchg   ecx,eax
  416c29:	ja     0x416bca
  416c2b:	scas   eax,DWORD PTR es:[edi]
  416c2c:	add    DWORD PTR [esi+eiz*4+0x1f],edx
  416c30:	fst    QWORD PTR [esi-0x1f37fad2]
  416c36:	adc    dl,BYTE PTR [eax]
  416c38:	lods   al,BYTE PTR ds:[esi]
  416c39:	gs je  0x416ca1
  416c3c:	(bad)  
  416c3d:	loope  0x416be5
  416c3f:	ret    0x1a33
  416c42:	inc    esp
  416c43:	retf   
  416c44:	push   cs
  416c45:	cmp    eax,0xc76f993f
  416c4a:	inc    edi
  416c4b:	ss das 
  416c4d:	popf   
  416c4e:	adc    eax,eax
  416c50:	jp     0x416cc0
  416c52:	and    ebx,edx
  416c54:	sbb    al,0xff
  416c56:	jg     0x416c5a
  416c58:	inc    edi
  416c59:	lods   al,BYTE PTR ds:[esi]
  416c5a:	and    eax,0xaa99e867
  416c5f:	pop    es
  416c60:	test   eax,0xacecdd16
  416c65:	or     eax,DWORD PTR [eax+0x5]
  416c68:	and    eax,0xcc068558
  416c6d:	sbb    bh,dl
  416c6f:	push   edx
  416c70:	or     esp,DWORD PTR [edx+0x50f28ca5]
  416c76:	add    DWORD PTR [ecx+0x1fe85940],ebx
  416c7c:	mov    esp,0x9ddf77c2
  416c81:	pop    esp
  416c82:	xor    DWORD PTR [ecx-0x3c],0xffffffba
  416c86:	cwde   
  416c87:	js     0x416cf4
  416c89:	out    dx,eax
  416c8a:	push   esi
  416c8b:	outs   dx,DWORD PTR ds:[esi]
  416c8c:	cmp    eax,0x665a4f6
  416c91:	adc    eax,0x80acb754
  416c96:	iret   
  416c97:	sbb    eax,0x3e4e2cae
  416c9c:	out    dx,eax
  416c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c9e:	in     al,dx
  416c9f:	pushf  
  416ca0:	in     eax,dx
  416ca1:	jnp    0x416c42
  416ca3:	inc    edx
  416ca4:	stc    
  416ca5:	xchg   BYTE PTR [ebp+0x6e43ab96],al
  416cab:	lock sub eax,0x1c975a2e
  416cb1:	inc    ecx
  416cb2:	dec    esp
  416cb3:	and    DWORD PTR [edi-0xe],esp
  416cb6:	out    dx,eax
  416cb7:	push   ebp
  416cb8:	inc    esi
  416cb9:	lock inc eax
  416cbb:	push   edi
  416cbc:	in     eax,dx
  416cbd:	out    0xf4,al
  416cbf:	inc    edx
  416cc0:	adc    DWORD PTR [ebp+0x705a46e0],edx
  416cc6:	(bad)  
  416cc7:	or     BYTE PTR [ebp+0x3f],bl
  416cca:	fisub  DWORD PTR [ebx+ebx*2+0x26]
  416cce:	sahf   
  416ccf:	inc    esp
  416cd0:	fwait
  416cd1:	xchg   ebx,eax
  416cd2:	push   es
  416cd3:	jge    0x416d1e
  416cd5:	fldcw  WORD PTR [esi-0x6b]
  416cd8:	push   ss
  416cd9:	in     eax,dx
  416cda:	std    
  416cdb:	xchg   edx,eax
  416cdc:	mov    esi,0x1a5821e4
  416ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce2:	clc    
  416ce3:	cmp    al,0x3a
  416ce5:	lods   eax,DWORD PTR ds:[esi]
  416ce6:	sets   al
  416ce9:	gs aam 0x22
  416cec:	adc    al,0xf0
  416cee:	mov    ?,eax
  416cf0:	mul    BYTE PTR [eax-0x2e]
  416cf3:	(bad)  
  416cf4:	and    ch,ch
  416cf6:	add    al,0x60
  416cf8:	out    dx,al
  416cf9:	pop    edi
  416cfa:	aaa    
  416cfb:	adc    edi,DWORD PTR [eax-0x78232b0b]
  416d01:	pop    ebx
  416d02:	and    al,0xe0
  416d04:	jae    0x416ce6
  416d06:	out    dx,eax
  416d07:	pop    esp
  416d08:	into   
  416d09:	cmp    BYTE PTR [edi],dh
  416d0b:	cwde   
  416d0c:	outs   dx,DWORD PTR ds:[esi]
  416d0d:	inc    ebx
  416d0e:	or     al,0x8c
  416d10:	mov    ecx,0x860aa5dd
  416d15:	ins    BYTE PTR es:[edi],dx
  416d16:	push   edi
  416d17:	shr    DWORD PTR [ebx],1
  416d19:	test   eax,0xc98928a9
  416d1e:	(bad)  [eax+0x3c]
  416d21:	repnz (bad) 
  416d23:	push   ecx
  416d24:	nop
  416d25:	pop    esi
  416d26:	add    esi,DWORD PTR [eax-0x28]
  416d29:	arpl   WORD PTR [eax-0x5ae90192],di
  416d2f:	shr    BYTE PTR [edi+0x7f9f700],cl
  416d35:	or     eax,DWORD PTR [ecx-0x11]
  416d38:	out    dx,eax
  416d39:	inc    ecx
  416d3a:	jae    0x416d56
  416d3c:	and    cl,ch
  416d3e:	mov    esp,0xe5e31589
  416d43:	lods   al,BYTE PTR ds:[esi]
  416d44:	das    
  416d45:	pop    ebx
  416d46:	push   esi
  416d47:	xor    ecx,ecx
  416d49:	xlat   BYTE PTR ds:[ebx]
  416d4a:	inc    ebp
  416d4b:	ja     0x416d91
  416d4d:	mov    al,ds:0x64259686
  416d52:	adc    al,BYTE PTR [eax+0x53]
  416d55:	mov    DWORD PTR [ebx-0x2090493],edx
  416d5b:	dec    ecx
  416d5c:	nop
  416d5d:	cmp    al,0x8e
  416d5f:	inc    ecx
  416d60:	fsub   DWORD PTR [eax+eax*2-0x2]
  416d64:	ins    BYTE PTR es:[edi],dx
  416d65:	into   
  416d66:	mov    eax,ds:0x7a6ab3e
  416d6b:	and    BYTE PTR [edx+ebp*8],al
  416d6e:	scas   al,BYTE PTR es:[edi]
  416d6f:	xor    eax,edx
  416d71:	aaa    
  416d72:	mov    esp,0x6ab22ee7
  416d77:	lds    ecx,FWORD PTR [ebx+edx*8]
  416d7a:	mov    DWORD PTR [ecx-0x21],0x9a20315e
  416d81:	lds    ebp,FWORD PTR [ebp+ebx*4-0x2c]
  416d85:	out    0x18,al
  416d87:	xchg   edx,eax
  416d88:	cmp    dh,al
  416d8a:	js     0x416d97
  416d8c:	(bad)  
  416d8d:	ja     0x416e08
  416d8f:	xlat   BYTE PTR ds:[ebx]
  416d90:	jae    0x416da9
  416d92:	shl    BYTE PTR [ecx+0x749ea851],cl
  416d98:	pushf  
  416d99:	jns    0x416e00
  416d9b:	pop    ebp
  416d9c:	xchg   DWORD PTR [edi-0x6e],ecx
  416d9f:	xchg   ebp,eax
  416da0:	dec    ecx
  416da1:	sub    al,0x58
  416da3:	in     al,dx
  416da4:	test   al,0xe7
  416da6:	xchg   esi,eax
  416da7:	jno    0x416de2
  416da9:	aam    0xe4
  416dab:	mov    ch,0xe7
  416dad:	loope  0x416d6a
  416daf:	mov    ds:0x5361e4f8,al
  416db4:	clc    
  416db5:	aaa    
  416db6:	(bad)  
  416db7:	ret    
  416db8:	or     eax,0xa8e216b5
  416dbd:	out    0x40,al
  416dbf:	pusha  
  416dc0:	mov    edx,0xa15ae360
  416dc5:	out    0xca,eax
  416dc7:	or     BYTE PTR [ebx+0x242827ff],dl
  416dcd:	mov    cl,0xd4
  416dcf:	pop    edx
  416dd0:	mov    esi,0xe50bbc19
  416dd5:	(bad)  
  416dd7:	mov    ebx,0x9e61570d
  416ddc:	das    
  416ddd:	jmp    0x416e34
  416ddf:	push   ecx
  416de0:	pop    ss
  416de1:	xor    DWORD PTR [esp+edi*1],ebx
  416de4:	lahf   
  416de5:	out    0xa9,al
  416de7:	mov    esp,DWORD PTR ds:0x9ee79614
  416ded:	xchg   edi,eax
  416dee:	xchg   BYTE PTR [edi],dh
  416df0:	add    eax,0x3f3cde19
  416df5:	ja     0x416d95
  416df7:	xlat   BYTE PTR ds:[ebx]
  416df8:	gs out 0xd4,eax
  416dfb:	lods   al,BYTE PTR ds:[esi]
  416dfc:	dec    esi
  416dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dfe:	jl     0x416db3
  416e00:	test   BYTE PTR [eax-0x3a],dh
  416e03:	in     al,dx
  416e04:	mov    edx,0xe634bb98
  416e09:	lea    ecx,[ecx-0x4248b038]
  416e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e10:	mov    ds:0x5f90d28c,eax
  416e15:	mov    ebx,0x6a886696
  416e1a:	add    al,BYTE PTR [edi+eiz*2-0x55e259e]
  416e21:	mov    cl,0xcc
  416e23:	cmp    esp,DWORD PTR [edx-0x4fdca02]
  416e29:	xor    eax,0x5ec1773e
  416e2e:	outs   dx,DWORD PTR ds:[esi]
  416e2f:	jecxz  0x416e07
  416e31:	xor    bl,al
  416e33:	or     BYTE PTR [ecx+0x2],al
  416e36:	pop    ecx
  416e37:	mov    cl,BYTE PTR [esi-0x63b9d2c8]
  416e3d:	out    dx,al
  416e3e:	add    DWORD PTR [edi],0x8a0986c8
  416e44:	repnz xchg ecx,eax
  416e46:	jno    0x416e5d
  416e48:	pop    edi
  416e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e4b:	mov    dl,0x9
  416e4d:	push   edi
  416e4e:	jg     0x416e56
  416e50:	(bad)  
  416e51:	pop    ds
  416e52:	(bad)  
  416e53:	xchg   edx,eax
  416e54:	in     eax,dx
  416e55:	fisubr WORD PTR [ebx+0x6a127696]
  416e5b:	adc    al,0xaa
  416e5d:	mov    WORD PTR [esi],es
  416e5f:	popa   
  416e60:	pop    ss
  416e61:	repnz iret 
  416e63:	inc    edx
  416e64:	or     eax,0x49e1ce0f
  416e69:	mov    ebx,0x6ebc06e3
  416e6e:	gs jb  0x416dfc
  416e71:	or     al,0xfe
  416e73:	and    dh,BYTE PTR [ebx+ebp*1]
  416e76:	adc    al,0xf6
  416e78:	lods   al,BYTE PTR ds:[esi]
  416e79:	aam    0x49
  416e7b:	shl    esi,0xd3
  416e7e:	clc    
  416e7f:	lods   al,BYTE PTR ds:[esi]
  416e80:	pop    edx
  416e81:	mov    BYTE PTR [esi+0x3fe8418c],0x76
  416e88:	cmp    al,0x7e
  416e8a:	rcl    BYTE PTR [ecx-0x7c296fa],cl
  416e90:	add    al,0xc
  416e92:	xchg   BYTE PTR [ebp-0x78],ah
  416e95:	push   edx
  416e96:	ss jg  0x416e99
  416e99:	inc    dx
  416e9b:	dec    edx
  416e9c:	retf   0x5919
  416e9f:	sbb    BYTE PTR [ecx],al
  416ea1:	jl     0x416e4b
  416ea3:	sbb    al,0xd7
  416ea5:	cmc    
  416ea6:	test   eax,0x23a534e3
  416eab:	outs   dx,BYTE PTR ds:[esi]
  416eac:	bound  ecx,QWORD PTR [ecx+0x56]
  416eaf:	mov    eax,0x874b8546
  416eb4:	in     eax,0x7a
  416eb6:	and    bh,BYTE PTR [ebx-0x51230598]
  416ebc:	js     0x416f2b
  416ebe:	sub    esp,ebp
  416ec0:	add    eax,0x97c64c36
  416ec5:	xchg   edi,eax
  416ec6:	inc    ebp
  416ec7:	mov    esi,0x4a31ba0f
  416ecc:	popf   
  416ecd:	cmp    cl,BYTE PTR [ebp-0x2a]
  416ed0:	sbb    esp,DWORD PTR [edi]
  416ed2:	popf   
  416ed3:	scas   al,BYTE PTR es:[edi]
  416ed4:	xchg   DWORD PTR [eax-0x7c4f99d7],ebx
  416eda:	sbb    DWORD PTR [eax],esp
  416edc:	adc    DWORD PTR [eax],ebx
  416ede:	adc    al,0x49
  416ee0:	mov    ds:0xdd98e3a8,al
  416ee5:	div    DWORD PTR [esi+0x1f]
  416ee8:	(bad)
  416eeb:	jle    0x416e71
  416eed:	xchg   ecx,eax
  416eee:	jmp    0x416f2d
  416ef0:	mov    ds:0xcace4f2b,al
  416ef5:	lds    ebp,FWORD PTR [ecx+0x4ec683a3]
  416efb:	mov    edx,0x7a2898b0
  416f00:	mov    ch,0x5a
  416f02:	push   0xa476faa6
  416f07:	jl     0x416f87
  416f09:	xchg   esi,eax
  416f0a:	loope  0x416f5f
  416f0c:	push   0x4b60f8b0
  416f11:	cmp    bl,BYTE PTR [esp+edi*1]
  416f14:	xchg   ecx,eax
  416f15:	add    DWORD PTR [edi-0x75fbb22f],edx
  416f1b:	es out 0x4d,eax
  416f1e:	leave  
  416f1f:	in     al,dx
  416f20:	mov    bl,0x98
  416f22:	sbb    BYTE PTR [esi],bh
  416f24:	push   esp
  416f25:	xlat   BYTE PTR ds:[ebx]
  416f26:	ds test al,0x1d
  416f29:	mov    bh,BYTE PTR ds:0x30a413fa
  416f2f:	and    DWORD PTR [edx+0x6d],esi
  416f32:	dec    esi
  416f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f34:	sbb    al,0xf8
  416f36:	add    BYTE PTR [eax+ebx*1+0x304230ce],dh
  416f3d:	rcl    edi,0x10
  416f40:	mov    ds:0x8e91f224,eax
  416f45:	nop
  416f46:	inc    ecx
  416f47:	add    DWORD PTR [eax+ebx*8],eax
  416f4a:	jns    0x416ee8
  416f4c:	(bad)  
  416f4d:	cmc    
  416f4e:	pop    ds
  416f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f50:	push   ecx
  416f51:	sbb    esp,edi
  416f53:	and    cl,BYTE PTR [eax+0x593e3e7a]
  416f59:	cmc    
  416f5a:	cmp    al,0xbe
  416f5c:	arpl   WORD PTR [edi+ebp*4-0x725d368f],ax
  416f63:	fistp  DWORD PTR [edx]
  416f65:	cmp    BYTE PTR [ecx+ecx*4+0x41],bh
  416f69:	aaa    
  416f6a:	cmp    eax,0xdcdbd89d
  416f6f:	lahf   
  416f70:	inc    esi
  416f71:	cmp    dh,BYTE PTR [ebx]
  416f73:	ror    BYTE PTR [edx+0x148334f3],1
  416f79:	pop    ebp
  416f7a:	and    eax,0x9a2f64f2
  416f7f:	xlat   BYTE PTR ds:[ebx]
  416f80:	into   
  416f81:	(bad)  
  416f82:	shr    bl,0x22
  416f85:	(bad)  
  416f86:	xchg   edi,eax
  416f87:	push   eax
  416f88:	mov    ecx,0x52fe8c57
  416f8d:	cmp    eax,0x5d9dce64
  416f92:	ficom  WORD PTR [eax]
  416f94:	aad    0x16
  416f96:	xchg   BYTE PTR [ebp+ecx*2-0x676c05a],dh
  416f9d:	inc    ebp
  416f9e:	pop    ebx
  416f9f:	pop    edx
  416fa0:	lods   al,BYTE PTR ds:[esi]
  416fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa2:	and    al,0xf0
  416fa4:	jecxz  0x417013
  416fa6:	sub    eax,0x70f4c075
  416fab:	jns    0x416f56
  416fad:	pop    ss
  416fae:	mov    ds:0x927bb5a8,al
  416fb3:	xchg   edx,esp
  416fb5:	fist   DWORD PTR [eax+0xbddba]
  416fbb:	ret    
  416fbc:	xlat   BYTE PTR ds:[ebx]
  416fbd:	sbb    ah,0xa3
  416fc0:	jl     0x416ff3
  416fc2:	and    ebx,0x3c2289ca
  416fc8:	test   eax,0x77c58d58
  416fcd:	mov    cs,WORD PTR [eax]
  416fcf:	xchg   edx,eax
  416fd0:	cmp    dh,BYTE PTR [edi-0x16]
  416fd3:	and    eax,0x47432fd9
  416fd8:	mov    ecx,0x208c82a6
  416fdd:	test   eax,0xccc6f5a9
  416fe2:	sahf   
  416fe3:	mov    cl,BYTE PTR [ebx+0x4a107b64]
  416fe9:	aas    
  416fea:	add    ecx,DWORD PTR ds:0xf7b2aa67
  416ff0:	popa   
  416ff1:	mov    ebx,0xf99a6ddb
  416ff6:	lods   al,BYTE PTR ds:[esi]
  416ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff8:	loopne 0x417063
  416ffa:	mov    ch,0xac
  416ffc:	inc    eax
  416ffd:	(bad)  
  416ffe:	adc    ah,cl
  417000:	mov    esp,0x2bb23be7
  417005:	out    0xbb,eax
  417007:	fist   WORD PTR [edi+0x29]
  41700a:	sar    DWORD PTR [ebp-0x3d],cl
  41700d:	hlt    
  41700e:	imul   edx,DWORD PTR [esi+0x43fa8dac],0x130f693d
  417018:	ficom  WORD PTR [eax+0x75]
  41701b:	outs   dx,DWORD PTR ds:[esi]
  41701c:	push   esp
  41701d:	xchg   esp,eax
  41701e:	sbb    al,0x60
  417020:	jge    0x417019
  417022:	sbb    DWORD PTR ds:0x627b420e,0x662ba3a0
  41702c:	sbb    eax,0x56c5a72
  417031:	cmp    BYTE PTR [eax],dl
  417033:	sar    DWORD PTR [edi+0x69c6f5ea],0xd5
  41703a:	mov    ?,WORD PTR [ebx+edi*1+0x56]
  41703e:	sbb    BYTE PTR [esi-0x35],bl
  417041:	mov    edx,0x2d6ceec1
  417046:	imul   esi,ecx,0x5b
  417049:	jge    0x417034
  41704b:	outs   dx,BYTE PTR ds:[esi]
  41704c:	cmp    edx,DWORD PTR [ebx+0x4cf0a0cf]
  417052:	inc    esp
  417053:	shl    BYTE PTR [edx-0x4],cl
  417056:	pop    ebx
  417057:	rcr    BYTE PTR [ecx+0x5850effd],1
  41705d:	mov    WORD PTR [edx],?
  41705f:	mov    edi,0xda0ddf7c
  417064:	iret   
  417065:	fidivr WORD PTR [esi+esi*2-0x12e15dd7]
  41706c:	dec    edx
  41706d:	cs loop 0x41706d
  417070:	outs   dx,BYTE PTR ds:[esi]
  417071:	repnz cmp BYTE PTR [esi+ebp*2-0x27],al
  417076:	dec    edx
  417077:	and    eax,DWORD PTR [esi-0x66a97d95]
  41707d:	out    dx,eax
  41707e:	into   
  41707f:	test   al,0x13
  417081:	jne    0x41704d
  417083:	xchg   esi,eax
  417084:	inc    edi
  417085:	cs pushw 0x73
  417089:	(bad)  
  41708a:	data16 outs dx,BYTE PTR ds:[esi]
  41708c:	adc    ch,BYTE PTR [ebx]
  41708e:	jns    0x4170b8
  417090:	xchg   ebx,eax
  417091:	xor    eax,0x899d7976
  417096:	mov    ds:0xe731ca48,eax
  41709b:	dec    eax
  41709c:	(bad)  
  41709e:	xchg   edi,eax
  41709f:	push   edi
  4170a0:	and    al,0x2a
  4170a2:	mov    dh,0x2
  4170a4:	(bad)  
  4170a5:	jno    0x417114
  4170a7:	mov    bl,0xd7
  4170a9:	sub    DWORD PTR [esi],0xffffffca
  4170ac:	cmp    eax,0x24721c1c
  4170b1:	dec    ebx
  4170b2:	adc    al,0xfc
  4170b4:	lds    ebx,FWORD PTR [edx+0x17]
  4170b7:	fs sbb ebp,eax
  4170ba:	mov    ds:0x2b57b9dd,al
  4170bf:	stc    
  4170c0:	ja     0x417067
  4170c2:	sahf   
  4170c3:	add    eax,0xa49daebc
  4170c8:	mov    dl,0x13
  4170ca:	mov    ebp,0x50168952
  4170cf:	xor    al,0x7b
  4170d1:	mov    dl,0x56
  4170d3:	lds    ebp,FWORD PTR [eax-0x1c2824ba]
  4170d9:	call   0x23d8c9a9
  4170de:	push   ebp
  4170df:	inc    esi
  4170e0:	pop    eax
  4170e1:	or     eax,0xfef7397d
  4170e6:	push   0x24b34251
  4170eb:	mov    edi,0x50cec30
  4170f0:	bound  ebx,QWORD PTR [edx-0x4885d804]
  4170f6:	pusha  
  4170f7:	cmp    al,0x6a
  4170f9:	out    0xf9,eax
  4170fb:	mov    ebx,0x88fa6649
  417100:	mov    dl,0x66
  417102:	xor    DWORD PTR [eax],ecx
  417104:	jae    0x417109
  417106:	js     0x4170e9
  417108:	inc    ebp
  417109:	js     0x41712e
  41710b:	in     al,0xf7
  41710d:	and    al,0xd9
  41710f:	gs mov ah,0x7a
  417112:	cwde   
  417113:	xchg   esp,eax
  417114:	rcl    DWORD PTR [ecx-0x56],0xce
  417118:	lahf   
  417119:	xchg   ch,dl
  41711b:	(bad)  
  41711d:	xor    bl,BYTE PTR [eax+0x14]
  417120:	jmp    0x417180
  417122:	push   ebx
  417123:	popa   
  417124:	test   DWORD PTR [eax+ecx*2+0x32],ebp
  417128:	popf   
  417129:	js     0x417178
  41712b:	jge    0x417112
  41712d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41712e:	jp     0x417172
  417130:	sbb    eax,0xc8a4a79
  417135:	xchg   ecx,eax
  417136:	shl    BYTE PTR [esi+0x70af38f4],1
  41713c:	xchg   esp,eax
  41713d:	lea    edi,[eax+0x5f]
  417140:	add    ah,ch
  417142:	fld    TBYTE PTR [esi]
  417144:	adc    DWORD PTR [eax+0x53],edx
  417147:	test   BYTE PTR [esi+eiz*8+0x2a9b6f59],0x94
  41714f:	test   al,0xc9
  417151:	loop   0x417194
  417153:	push   ds
  417154:	push   esp
  417155:	sub    ecx,ecx
  417157:	outs   dx,DWORD PTR ds:[esi]
  417158:	in     eax,dx
  417159:	outs   dx,DWORD PTR ds:[esi]
  41715a:	push   ss
  41715b:	cmp    DWORD PTR [eax-0x2f94b545],edi
  417161:	out    dx,eax
  417162:	pop    esi
  417163:	and    bh,ah
  417165:	jns    0x41714e
  417167:	scas   eax,DWORD PTR es:[edi]
  417168:	pop    eax
  417169:	jnp    0x417146
  41716b:	mov    ch,0x7b
  41716d:	xchg   BYTE PTR [ebx+eax*8-0x12fefe3b],ah
  417174:	mov    ebp,0x327ed46d
  417179:	stc    
  41717a:	push   edx
  41717b:	pop    edi
  41717c:	ret    0xf86b
  41717f:	hlt    
  417180:	push   edi
  417181:	fimul  WORD PTR [edi+0x7f]
  417184:	sub    DWORD PTR [edi+0x5b],edi
  417187:	add    DWORD PTR [eax-0x3],ebp
  41718a:	inc    ecx
  41718b:	mov    edx,0x92e1ca65
  417190:	mov    ecx,0xf4be0bcb
  417195:	add    al,0x34
  417197:	dec    ebx
  417198:	or     dl,al
  41719a:	nop
  41719b:	scas   al,BYTE PTR es:[edi]
  41719c:	pop    eax
  41719d:	(bad)  
  41719e:	mov    ebx,0xe72a8786
  4171a3:	rcl    DWORD PTR [eax-0x5157798b],0x87
  4171aa:	dec    esi
  4171ab:	(bad)  [esi+0x79]
  4171ae:	cdq    
  4171af:	hlt    
  4171b0:	sbb    DWORD PTR [eax-0x55],edx
  4171b3:	clc    
  4171b4:	xor    ebx,DWORD PTR [eax-0x45]
  4171b7:	(bad)  
  4171b8:	nop
  4171b9:	clc    
  4171ba:	push   ss
  4171bb:	jl     0x4171a5
  4171bd:	cmp    DWORD PTR [ebp-0x59],0xcff4ed9c
  4171c4:	imul   esp,eax,0x1d
  4171c7:	scas   al,BYTE PTR es:[edi]
  4171c8:	dec    eax
  4171c9:	(bad)  
  4171ca:	push   edx
  4171cb:	mov    ch,0xa
  4171cd:	fst    QWORD PTR [ebx+0x1f]
  4171d0:	jmp    0x41719d
  4171d2:	les    edi,FWORD PTR [esi-0x9]
  4171d5:	call   0xfedc:0xd82d64a1
  4171dc:	repnz iret 
  4171de:	ror    bl,0x5e
  4171e1:	retf   
  4171e2:	or     dh,BYTE PTR [ebx-0x488dc6bc]
  4171e8:	and    DWORD PTR [esi],edi
  4171ea:	(bad)  
  4171ec:	inc    edx
  4171ed:	out    dx,eax
  4171ee:	lahf   
  4171ef:	sar    BYTE PTR [esi+esi*4+0x77],0x4d
  4171f4:	out    dx,eax
  4171f5:	cmp    eax,0x18dcd6e3
  4171fa:	or     esi,DWORD PTR [esi+edi*4+0x74c91cb0]
  417201:	sar    BYTE PTR [edx],1
  417203:	mov    eax,ds:0x1914384b
  417208:	(bad)  
  417209:	xor    eax,0x3529e0a4
  41720e:	adc    eax,0x5f7a16f1
  417213:	pop    eax
  417214:	and    ch,bl
  417216:	add    edi,DWORD PTR [eax-0x5c69b29]
  41721c:	jecxz  0x417270
  41721e:	mov    WORD PTR [ebx+0x21],gs
  417221:	rcl    BYTE PTR [esp+eax*4+0x134223db],0xd
  417229:	add    al,0x7d
  41722b:	xchg   edi,eax
  41722c:	aas    
  41722d:	dec    edx
  41722e:	cdq    
  41722f:	mov    dh,0x8f
  417231:	push   0x53cd6e4d
  417236:	xor    DWORD PTR [esi],ecx
  417238:	sbb    DWORD PTR [edi+0x39dfc1e0],ecx
  41723e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41723f:	arpl   WORD PTR [ebp+0x3e],bx
  417242:	dec    edi
  417243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417244:	pusha  
  417245:	mov    edx,0xac768358
  41724a:	add    al,0x80
  41724c:	or     BYTE PTR [esi+0x1f9b0c61],dl
  417252:	jecxz  0x417233
  417254:	imul   esp,DWORD PTR [edi],0x831aa8ce
  41725a:	mov    edi,0x9102886b
  41725f:	push   esi
  417260:	jnp    0x41723a
  417262:	out    0x9a,eax
  417264:	repz and eax,0x19852ae3
  41726a:	fbstp  TBYTE PTR [edi+ebx*4]
  41726d:	xchg   al,ah
  41726f:	int    0xb8
  417271:	cmp    cl,al
  417273:	sub    bl,BYTE PTR [edi+0x6decf2a0]
  417279:	or     BYTE PTR [eax+0x3e],ah
  41727c:	inc    ebp
  41727d:	rcr    DWORD PTR [ebx-0x2c],0x41
  417281:	cwde   
  417282:	and    BYTE PTR ds:0x14ef5a35,dl
  417288:	aam    0x1c
  41728a:	push   cs
  41728b:	or     edx,DWORD PTR [ebp+0x4]
  41728e:	popa   
  41728f:	mov    ?,WORD PTR [esi]
  417291:	mov    dh,0x2a
  417293:	or     DWORD PTR [edi+ebp*1+0x622b937],ebp
  41729a:	xchg   ebx,eax
  41729b:	adc    eax,0xfe9ac034
  4172a0:	pop    edi
  4172a1:	or     BYTE PTR [ecx-0x49438085],bh
  4172a7:	pop    ecx
  4172a8:	xor    DWORD PTR [ecx],esp
  4172aa:	gs retf 
  4172ac:	out    dx,eax
  4172ad:	and    ah,ch
  4172af:	jbe    0x4172d2
  4172b1:	std    
  4172b2:	dec    esp
  4172b3:	lods   eax,DWORD PTR ds:[esi]
  4172b4:	inc    ecx
  4172b5:	or     BYTE PTR [ebx],0xe9
  4172b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172b9:	push   ecx
  4172ba:	or     al,0x43
  4172bc:	ret    0xbb3a
  4172bf:	inc    ebx
  4172c0:	stos   BYTE PTR es:[edi],al
  4172c1:	inc    edx
  4172c2:	icebp  
  4172c3:	(bad)  
  4172c4:	cmp    edi,edx
  4172c6:	jo     0x417292
  4172c8:	ffree  st(6)
  4172ca:	sub    al,0x2d
  4172cc:	(bad)  
  4172cd:	jle    0x417310
  4172cf:	or     ebp,edx
  4172d1:	and    DWORD PTR [eax-0x468e23bd],edx
  4172d7:	xor    eax,DWORD PTR [ecx+ecx*8]
  4172da:	jl     0x417290
  4172dc:	mov    edx,0x3fd4cda0
  4172e1:	iret   
  4172e2:	fcomp  DWORD PTR [ebx-0x7b]
  4172e5:	add    eax,0x69c3b808
  4172ea:	cmp    edi,edx
  4172ec:	imul   BYTE PTR [ebp-0x28]
  4172ef:	imul   eax,DWORD PTR [ecx],0x45667519
  4172f5:	and    cl,BYTE PTR [esi]
  4172f7:	or     eax,0x768b0b32
  4172fc:	push   esi
  4172fd:	imul   ebp,DWORD PTR [edx-0x1b],0xa4729501
  417304:	das    
  417305:	cld    
  417306:	mov    cs,WORD PTR [ecx-0x5f]
  417309:	jmp    0x417319
  41730b:	retf   
  41730c:	mov    esp,0x268d7f86
  417311:	dec    esi
  417312:	(bad)  
  417313:	fmul   DWORD PTR [ecx+0x5fa85f9d]
  417319:	daa    
  41731a:	rol    dl,1
  41731c:	hlt    
  41731d:	fisubr WORD PTR [edi-0x7f7a695d]
  417323:	addr16 rol edx,1
  417326:	jmp    0x4172ff
  417328:	xchg   esi,eax
  417329:	jg     0x41734e
  41732b:	ins    BYTE PTR es:[edi],dx
  41732c:	mov    edi,0x4f9a3d06
  417331:	mov    esp,DWORD PTR [ecx-0xe]
  417334:	in     al,0x8f
  417336:	stos   BYTE PTR es:[edi],al
  417337:	sub    eax,0x60e13a4e
  41733c:	neg    DWORD PTR [esi+0x6f]
  41733f:	xchg   esp,eax
  417340:	mov    WORD PTR [ecx-0x7c],gs
  417343:	rol    ebx,cl
  417345:	lea    esi,[ebp-0x30d16078]
  41734b:	and    DWORD PTR [edx+0x5],0x2
  41734f:	xor    BYTE PTR [eax-0x7d3f50f7],bl
  417355:	xor    dl,bl
  417357:	sub    al,0xda
  417359:	(bad)  
  41735b:	lahf   
  41735c:	lods   al,BYTE PTR ds:[esi]
  41735d:	inc    edi
  41735e:	outs   dx,DWORD PTR ds:[esi]
  41735f:	add    DWORD PTR [ecx-0x2d5f7ca8],edi
  417365:	jb     0x4173a7
  417367:	mov    bh,0xfb
  417369:	inc    ecx
  41736a:	lahf   
  41736b:	add    eax,0xaff421ba
  417370:	mov    bh,0x6
  417372:	fs shl ebp,cl
  417375:	call   0x6303:0xd2f1bd4a
  41737c:	loopne 0x417310
  41737e:	bnd jo 0x4173db
  417381:	(bad)  
  417382:	sub    cl,BYTE PTR [esi+0x19c1b413]
  417388:	sbb    ebp,DWORD PTR [eax]
  41738a:	pop    ebp
  41738b:	or     dl,bh
  41738d:	int3   
  41738e:	pop    ebp
  41738f:	mov    dh,0x18
  417391:	mov    WORD PTR [eax+0x3a1bbdd9],fs
  417397:	pop    ss
  417398:	inc    ecx
  417399:	push   ebp
  41739a:	and    DWORD PTR [eax+0x3cf39657],esi
  4173a0:	jp     0x417414
  4173a2:	mov    ecx,0xc878def3
  4173a7:	call   0xa1be:0xda51538e
  4173ae:	cdq    
  4173af:	mov    bl,0xea
  4173b1:	or     ah,BYTE PTR [edx-0x30]
  4173b4:	add    eax,0x6fa5b285
  4173b9:	call   ebx
  4173bb:	shl    BYTE PTR [edx],1
  4173bd:	arpl   WORD PTR ds:0xc762a9ae,cx
  4173c3:	sbb    bh,al
  4173c5:	fsub   st(6),st
  4173c7:	lahf   
  4173c8:	jmp    0x4173a2
  4173ca:	fs scas eax,DWORD PTR es:[edi]
  4173cc:	adc    eax,0x431252f3
  4173d1:	push   ss
  4173d2:	imul   BYTE PTR [edx-0x1aa0213d]
  4173d8:	cmp    eax,0xae2434e6
  4173dd:	stc    
  4173de:	fldcw  WORD PTR [ebp+0x36a279fc]
  4173e4:	shl    bh,0xd
  4173e7:	pushf  
  4173e8:	sub    dl,BYTE PTR [esi-0x76]
  4173eb:	call   0x2f8ee22e
  4173f0:	pop    edi
  4173f1:	cdq    
  4173f2:	fwait
  4173f3:	(bad)  
  4173f4:	push   esi
  4173f5:	dec    edi
  4173f6:	out    0x6d,eax
  4173f8:	test   DWORD PTR [ebx],ecx
  4173fa:	cld    
  4173fb:	call   0xbc68:0xc66fe12d
  417402:	xchg   ecx,eax
  417403:	cli    
  417404:	(bad)  
  417406:	add    ebx,DWORD PTR [ebx+0x41]
  417409:	add    BYTE PTR [ecx+0x3b],0x13
  41740d:	imul   esp,DWORD PTR [edx-0x1fa7eeea],0xffffffde
  417414:	add    DWORD PTR [esi-0x22],edx
  417417:	loope  0x417484
  417419:	dec    ebx
  41741a:	xchg   ebp,eax
  41741b:	sbb    al,cl
  41741d:	pop    ebx
  41741e:	outs   dx,BYTE PTR ds:[esi]
  41741f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417420:	retf   
  417421:	and    esi,DWORD PTR [edi-0x27e857ed]
  417427:	jmp    0xef68:0x5e245dd6
  41742e:	loop   0x417437
  417430:	enter  0x9860,0xce
  417434:	sbb    edi,edi
  417436:	pop    ebx
  417437:	cli    
  417438:	sub    BYTE PTR ds:0xfeeb6c29,al
  41743e:	jo     0x41741f
  417440:	push   esi
  417441:	cs sub eax,0x30ba6f81
  417447:	out    dx,al
  417448:	mov    edi,0x8746a9e8
  41744d:	std    
  41744e:	push   esp
  41744f:	(bad)  
  417450:	mov    WORD PTR [edi-0x3f],?
  417453:	aad    0xe2
  417455:	jae    0x41746d
  417457:	jb     0x417486
  417459:	xchg   BYTE PTR [esp+ecx*1-0xe],dh
  41745d:	mov    edx,0xccec5c5b
  417462:	popa   
  417463:	fcmovnb st,st(3)
  417465:	mov    dh,0x55
  417467:	pop    ds
  417468:	push   cs
  417469:	int    0x8f
  41746b:	cli    
  41746c:	pop    esp
  41746d:	daa    
  41746e:	neg    ch
  417470:	mov    cl,0x3e
  417472:	dec    ebp
  417473:	sub    bh,BYTE PTR [esi+edx*4-0x5af581ca]
  41747a:	shl    ecx,cl
  41747c:	jbe    0x417407
  41747e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41747f:	pop    edi
  417480:	nop
  417481:	in     al,dx
  417482:	and    DWORD PTR [ecx+ecx*8-0x6eb1b770],ecx
  417489:	rol    BYTE PTR [ecx+0xedcb603],1
  41748f:	or     eax,0x3335e634
  417494:	clc    
  417495:	outs   dx,DWORD PTR ds:[esi]
  417496:	adc    eax,0x4b4adb4
  41749b:	cmc    
  41749c:	adc    DWORD PTR [ebx],ecx
  41749e:	sub    eax,0x3c5943fe
  4174a3:	dec    ebx
  4174a4:	xor    DWORD PTR [esi-0x3b4eb4d0],edi
  4174aa:	mov    al,ds:0x5970ef42
  4174af:	jae    0x4174c0
  4174b1:	mov    dl,0xdc
  4174b3:	stos   DWORD PTR es:[edi],eax
  4174b4:	scas   al,BYTE PTR es:[edi]
  4174b5:	lock pop es
  4174b7:	and    eax,0xd8192c79
  4174bc:	or     dh,ah
  4174be:	pop    ds
  4174bf:	and    al,BYTE PTR [edx]
  4174c1:	loope  0x4174e7
  4174c3:	js     0x4174ea
  4174c5:	push   edi
  4174c6:	inc    esp
  4174c7:	add    DWORD PTR [bx+si-0x65f4],edx
  4174cc:	loop   0x417455
  4174ce:	jns    0x4174c6
  4174d0:	sahf   
  4174d1:	lea    ebp,[ebp+0x42]
  4174d4:	lock out dx,al
  4174d6:	loopne 0x417526
  4174d8:	adc    ch,dl
  4174da:	(bad)  
  4174db:	dec    ebp
  4174dc:	stos   BYTE PTR es:[edi],al
  4174dd:	or     al,BYTE PTR [esi-0xc]
  4174e0:	inc    ecx
  4174e1:	shr    DWORD PTR [ebx],0xd9
  4174e4:	jmp    0x10d5dd54
  4174e9:	xchg   ebx,eax
  4174ea:	adc    DWORD PTR [edi+0x70a868c7],esp
  4174f0:	in     al,0xe1
  4174f2:	push   ss
  4174f3:	aam    0x17
  4174f5:	push   esp
  4174f6:	inc    ecx
  4174f7:	mov    ah,0x41
  4174f9:	sub    al,0xab
  4174fb:	(bad)  
  4174fc:	ss jnp 0x417488
  4174ff:	jo     0x4174ec
  417501:	fisubr DWORD PTR [esi+0x6e]
  417504:	sbb    DWORD PTR [edi+ebx*8],edi
  417507:	xchg   ebx,eax
  417508:	push   0xa7070cc2
  41750d:	jg     0x417577
  41750f:	outs   dx,DWORD PTR ds:[esi]
  417510:	xlat   BYTE PTR ds:[ebx]
  417511:	bound  ecx,QWORD PTR [ebx]
  417513:	and    edi,DWORD PTR ds:0x373711ab
  417519:	(bad)  
  41751a:	faddp  st(1),st
  41751c:	ds dec edx
  41751e:	xlat   BYTE PTR ds:[ebx]
  41751f:	jmp    0x417534
  417521:	add    DWORD PTR [esi+ebp*4+0x22],ecx
  417525:	stc    
  417526:	into   
  417527:	or     eax,0x21988b3
  41752c:	adc    edi,DWORD PTR [ecx]
  41752e:	add    al,0x1
  417530:	lds    edi,FWORD PTR [eax+0x37]
  417533:	inc    esi
  417534:	jno    0x417545
  417536:	fldlg2 
  417538:	fwait
  417539:	add    dl,BYTE PTR [ebx]
  41753b:	mov    bl,0xb3
  41753d:	xchg   ebx,eax
  41753e:	pop    ecx
  41753f:	bound  ecx,QWORD PTR [ebx*1-0x27f4936b]
  417546:	ror    ecx,cl
  417548:	fwait
  417549:	jp     0x4175c7
  41754b:	inc    edx
  41754c:	mov    DWORD PTR [ecx-0x4a],esp
  41754f:	out    dx,al
  417550:	sub    dl,bh
  417552:	sub    al,0xfe
  417554:	xlat   BYTE PTR ds:[ebx]
  417555:	lods   eax,DWORD PTR ds:[esi]
  417556:	add    BYTE PTR [esi+0x75ae6915],ch
  41755c:	ds push es
  41755e:	push   esi
  41755f:	enter  0x7465,0xb8
  417563:	inc    esp
  417564:	mov    al,0x36
  417566:	imul   ecx,DWORD PTR [esi+edi*4-0x5f],0xffffffbd
  41756b:	xchg   BYTE PTR [eax+ecx*2],al
  41756e:	jmp    0x21d8e0e0
  417573:	mov    al,BYTE PTR [ebx]
  417575:	sahf   
  417576:	or     DWORD PTR [edi+0x3a0b0373],edi
  41757c:	xchg   ecx,eax
  41757d:	and    esi,DWORD PTR [edi-0x40]
  417580:	cmp    al,0x45
  417582:	mov    ds:0xc22814a3,al
  417587:	dec    ebx
  417588:	xor    dl,BYTE PTR [esp+edx*8+0x4eb87ac3]
  41758f:	or     edx,edi
  417591:	int    0x1b
  417593:	lds    edi,FWORD PTR [eax+0x37ebd25d]
  417599:	pop    ss
  41759a:	pop    ds
  41759b:	xchg   esi,eax
  41759c:	bound  esp,QWORD PTR [edi+eax*2+0x68247a46]
  4175a3:	fisubr WORD PTR [esi+eax*4+0x4c0b3595]
  4175aa:	fistp  DWORD PTR [esi+0x17e181ea]
  4175b0:	sub    eax,edi
  4175b2:	fdivr  QWORD PTR [ebp-0x641000fa]
  4175b8:	xchg   ebp,eax
  4175b9:	jecxz  0x41760d
  4175bb:	push   ebp
  4175bc:	popa   
  4175bd:	adc    edi,DWORD PTR [ecx-0x530cf26]
  4175c3:	ret    0xf346
  4175c6:	or     dh,BYTE PTR [edi-0x1b]
  4175c9:	out    dx,al
  4175ca:	stos   DWORD PTR es:[edi],eax
  4175cb:	icebp  
  4175cc:	push   esp
  4175cd:	and    eax,0x68cd4392
  4175d2:	leave  
  4175d3:	mov    esi,0x9f8a9062
  4175d8:	fpatan 
  4175da:	mov    es,WORD PTR [edx+0x4c]
  4175dd:	xchg   ecx,eax
  4175de:	xchg   edx,eax
  4175df:	je     0x41764d
  4175e1:	fcom   st(4)
  4175e3:	xor    esp,DWORD PTR [edx+0x73]
  4175e6:	xchg   BYTE PTR ds:0x4f63548a,cl
  4175ec:	pop    esp
  4175ed:	mov    ds:0x34217414,al
  4175f2:	cli    
  4175f3:	stc    
  4175f4:	push   ebx
  4175f5:	push   ds
  4175f6:	push   es
  4175f7:	addr16 mov esi,0xfcb88d83
  4175fd:	sub    eax,DWORD PTR [edx-0x5d]
  417600:	pop    ebp
  417601:	lods   eax,DWORD PTR ds:[esi]
  417602:	idiv   dl
  417604:	jno    0x4175fc
  417606:	cmp    eax,0x3e767fc5
  41760b:	xor    eax,0xbf74f1d8
  417610:	lahf   
  417611:	sbb    ah,BYTE PTR [eax-0x3c]
  417614:	mov    edx,0xad80819d
  417619:	dec    eax
  41761a:	retfw  
  41761c:	cmp    ah,bh
  41761e:	in     al,0x9b
  417620:	mov    al,ds:0xaf55ad22
  417625:	lods   al,BYTE PTR ds:[si]
  417627:	shl    BYTE PTR [ebx+0x1a4fb8b0],1
  41762d:	test   DWORD PTR [ebx+0x202936b],esp
  417633:	ins    DWORD PTR es:[edi],dx
  417634:	outs   dx,DWORD PTR ds:[esi]
  417635:	dec    ebp
  417636:	dec    eax
  417637:	inc    ecx
  417638:	push   ds
  417639:	xor    DWORD PTR [eax],eax
  41763b:	mov    edi,0x1bdce049
  417640:	inc    ebx
  417641:	push   esi
  417642:	dec    esp
  417643:	int    0xe3
  417645:	jb     0x417618
  417647:	stc    
  417648:	nop
  417649:	pop    edx
  41764a:	push   ebp
  41764b:	fistp  WORD PTR [edi]
  41764d:	lods   al,BYTE PTR ds:[esi]
  41764e:	xchg   edx,eax
  41764f:	cwde   
  417650:	iret   
  417651:	bound  ebp,QWORD PTR [esi]
  417653:	pushf  
  417654:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  417656:	mov    ebx,0x16575696
  41765b:	or     eax,0x31b248ad
  417660:	inc    ebp
  417661:	xchg   BYTE PTR [ecx-0x31283c50],bh
  417667:	mov    esp,0xd9030606
  41766c:	repnz lds ebx,FWORD PTR [edx+ecx*4]
  417670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417671:	loopne 0x417694
  417673:	sub    ecx,DWORD PTR [ecx+ebp*2+0x215ee1ef]
  41767a:	sub    DWORD PTR [ebp+0x1d],0xffffffb0
  41767e:	pop    ds
  41767f:	fs js  0x41764a
  417682:	push   ds
  417683:	add    bh,dh
  417685:	stc    
  417686:	xor    BYTE PTR [ebx+esi*1+0x232ec02a],ch
  41768d:	pop    edi
  41768e:	mov    cs,WORD PTR [esi-0x2a6479fc]
  417694:	jge    0x417634
  417696:	sahf   
  417697:	push   esp
  417698:	and    eax,DWORD PTR [ecx+0x2625bb1c]
  41769e:	mov    bl,0x39
  4176a0:	(bad)
  4176a3:	addr16 data16 adc dl,ch
  4176a7:	mov    ebx,0xfeb1832b
  4176ac:	inc    edi
  4176ad:	mov    ecx,0xec5b8cf5
  4176b2:	sub    eax,0xc5ea49e5
  4176b8:	mov    eax,ds:0x1b7ac141
  4176bd:	dec    eax
  4176be:	xor    DWORD PTR [edx+0x78],edi
  4176c1:	push   0x5f
  4176c3:	pop    ebp
  4176c4:	sti    
  4176c5:	mov    ecx,ss
  4176c7:	inc    ebx
  4176c8:	xlat   BYTE PTR ds:[ebx]
  4176c9:	add    al,0xa1
  4176cb:	bound  ecx,QWORD PTR [esi]
  4176cd:	mov    ch,BYTE PTR [esi+0x49]
  4176d0:	jne    0x41769a
  4176d2:	aas    
  4176d3:	pop    esp
  4176d4:	pop    edi
  4176d5:	imul   ebp,DWORD PTR [esi],0xead4cad5
  4176db:	mov    WORD PTR [edi-0x2e],es
  4176de:	mov    ds:0x3c0ae2b3,eax
  4176e3:	inc    eax
  4176e4:	gs hlt 
  4176e6:	or     eax,0xf742e1f8
  4176eb:	out    dx,al
  4176ec:	sub    dh,0xc
  4176ef:	int3   
  4176f0:	sbb    ecx,DWORD PTR ds:0x771fbb58
  4176f6:	test   DWORD PTR [eax-0x3a71a885],ebx
  4176fc:	stos   DWORD PTR es:[edi],eax
  4176fd:	ja     0x41777c
  4176ff:	dec    eax
  417700:	idiv   BYTE PTR [ebp-0x42fd2e44]
  417706:	jmp    0xe4fd:0xf6b84fd4
  41770d:	mov    dh,0x56
  41770f:	or     DWORD PTR [ecx-0x3b75a6bd],ebx
  417715:	loop   0x417735
  417717:	mov    ecx,0x331deeca
  41771c:	ins    BYTE PTR es:[edi],dx
  41771d:	out    0x8c,al
  41771f:	out    0x5c,eax
  417721:	call   0xd13e:0xd4b43097
  417728:	lods   eax,DWORD PTR ds:[esi]
  417729:	adc    eax,0x267eef83
  41772e:	fsub   QWORD PTR ds:0xcf796338
  417734:	gs push esi
  417736:	fadd   DWORD PTR [ebx-0x7674310b]
  41773c:	fist   DWORD PTR [ecx-0x64]
  41773f:	and    eax,0x7440c8ad
  417744:	mov    edi,0xf8bfae2e
  417749:	inc    esp
  41774a:	out    dx,eax
  41774b:	mov    ds:0xda619808,al
  417750:	jae    0x4177c1
  417752:	push   eax
  417753:	sub    al,0x41
  417755:	mov    cl,0x28
  417757:	retf   0x15e9
  41775a:	pop    esp
  41775b:	ja     0x417723
  41775d:	jl     0x417711
  41775f:	cli    
  417760:	adc    DWORD PTR [eax],edi
  417762:	push   ss
  417763:	push   0xa561f697
  417768:	outs   dx,BYTE PTR ds:[esi]
  417769:	add    al,BYTE PTR [ecx+0x11]
  41776c:	pop    ds
  41776d:	test   DWORD PTR [ecx],0xd6f6f0a1
  417773:	jbe    0x41777a
  417775:	jecxz  0x41778c
  417777:	sti    
  417778:	inc    edx
  417779:	je     0x4177c1
  41777b:	sbb    BYTE PTR [esi+0x6],0x80
  41777f:	mov    dh,0x9d
  417781:	mov    dh,0x7a
  417783:	not    BYTE PTR [edx]
  417785:	retf   
  417786:	mov    bl,0xd6
  417788:	cwde   
  417789:	xchg   esp,eax
  41778a:	retf   0x4601
  41778d:	fstp   DWORD PTR [edx]
  41778f:	mov    bh,0x4d
  417791:	popf   
  417792:	(bad)  
  417793:	cmp    eax,0xa7d7ca67
  417798:	dec    esp
  417799:	jne    0x4177a9
  41779b:	out    dx,eax
  41779c:	div    BYTE PTR [ebp-0x4]
  41779f:	and    bl,BYTE PTR [eax]
  4177a1:	ds dec edx
  4177a3:	and    eax,0xe5c6b71c
  4177a8:	and    eax,0x7251a92c
  4177ad:	lods   al,BYTE PTR ds:[esi]
  4177ae:	aas    
  4177af:	lahf   
  4177b0:	aam    0x5f
  4177b2:	rcr    al,1
  4177b4:	pushf  
  4177b5:	imul   esp,DWORD PTR [ebp+0x5b3b2a83],0xffffffbb
  4177bc:	xchg   esi,eax
  4177bd:	mov    ebp,0x105d751
  4177c2:	sub    al,0x56
  4177c4:	or     dh,BYTE PTR [edx-0x28]
  4177c7:	mov    BYTE PTR [edi+0x4],bl
  4177ca:	test   ch,al
  4177cc:	ja     0x41776b
  4177ce:	adc    al,BYTE PTR [esi+0x6550d058]
  4177d4:	loopne 0x4177d3
  4177d6:	mov    edx,0xfd565982
  4177db:	push   ebx
  4177dc:	push   esi
  4177dd:	mov    eax,ds:0xb79df861
  4177e2:	popa   
  4177e3:	fnstcw WORD PTR [esi+0x3424f1e7]
  4177e9:	out    0xbe,eax
  4177eb:	dec    eax
  4177ec:	(bad)  
  4177ed:	mov    ?,WORD PTR [edx]
  4177ef:	dec    ecx
  4177f0:	xor    eax,0xb897d09e
  4177f5:	xchg   BYTE PTR [ecx+0x15b759e2],dl
  4177fb:	dec    esp
  4177fc:	dec    edx
  4177fd:	xor    al,0xcb
  4177ff:	mov    ecx,DWORD PTR [edx-0x71]
  417802:	scas   al,BYTE PTR es:[edi]
  417803:	mov    WORD PTR [esi],?
  417805:	mov    esi,0x9c13a0a7
  41780a:	jecxz  0x4177f9
  41780c:	ins    BYTE PTR es:[edi],dx
  41780d:	scas   eax,DWORD PTR es:[edi]
  41780e:	pop    eax
  41780f:	ss in  eax,0xe0
  417812:	pop    ss
  417813:	retf   0x25f0
  417816:	std    
  417817:	cwde   
  417818:	xor    bl,BYTE PTR [ecx]
  41781a:	inc    eax
  41781b:	and    al,BYTE PTR [edx]
  41781d:	pusha  
  41781e:	sbb    cl,dl
  417820:	ds jo  0x417803
  417823:	jecxz  0x4177ed
  417825:	cmp    BYTE PTR [eax+0x6c47dcd8],bl
  41782b:	xchg   ecx,eax
  41782c:	fisub  WORD PTR [eax+0x66739759]
  417832:	jge    0x4178a0
  417834:	jle    0x417859
  417836:	fiadd  DWORD PTR [edi]
  417838:	sbb    BYTE PTR ds:0x57db9f7e,ah
  41783e:	dec    edx
  41783f:	repnz (bad) 
  417842:	lds    edx,FWORD PTR [eax-0x4d89a9ba]
  417848:	stc    
  417849:	mov    ah,0x2d
  41784b:	jns    0x4178b8
  41784d:	or     edx,DWORD PTR [edx-0x33]
  417850:	jmp    0x4177d7
  417852:	rdtsc  
  417854:	bnd ret 
  417856:	mov    cl,0x67
  417858:	ror    DWORD PTR [esi-0x5b672e94],cl
  41785e:	xor    DWORD PTR [eax],0xffffff84
  417861:	outs   dx,DWORD PTR ds:[esi]
  417862:	icebp  
  417863:	retf   0x5d88
  417866:	push   ds
  417867:	loopne 0x41782d
  417869:	cli    
  41786a:	or     dl,BYTE PTR [ebx+0x66]
  41786d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41786e:	cmp    al,0xb3
  417870:	push   esp
  417871:	std    
  417872:	cli    
  417873:	test   DWORD PTR [edi-0x64],esp
  417876:	xor    BYTE PTR [edx-0x24964fe1],al
  41787c:	inc    edi
  41787d:	cld    
  41787e:	(bad)  
  417880:	in     eax,0x2d
  417882:	inc    ecx
  417883:	mov    ?,WORD PTR ds:0xa11272d4
  417889:	dec    ecx
  41788a:	add    DWORD PTR [ecx-0x17182de5],edi
  417890:	xor    al,0x4d
  417892:	stc    
  417893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417894:	cmp    BYTE PTR ds:0x591a31f8,dl
  41789a:	scas   eax,DWORD PTR es:[edi]
  41789b:	out    0x92,al
  41789d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41789e:	jne    0x417857
  4178a0:	pop    edi
  4178a1:	rcr    DWORD PTR [ebx+0x3d],cl
  4178a4:	push   es
  4178a5:	push   0x64
  4178a7:	xchg   ebx,eax
  4178a8:	bound  esp,QWORD PTR es:[esi-0x74826364]
  4178af:	jmp    DWORD PTR [ebx-0x33c9ae88]
  4178b5:	push   es
  4178b6:	lea    esp,[eax+0x1edb65a1]
  4178bc:	js     0x417919
  4178be:	cdq    
  4178bf:	xchg   ebp,eax
  4178c0:	sub    DWORD PTR [ebx+0x78705561],esi
  4178c6:	cld    
  4178c7:	adc    edx,DWORD PTR [ebx]
  4178c9:	lods   eax,DWORD PTR ds:[esi]
  4178ca:	dec    ebp
  4178cb:	leave  
  4178cc:	shr    DWORD PTR [ebp+0x10],1
  4178cf:	add    BYTE PTR [edi+0x2],dh
  4178d2:	sbb    edi,DWORD PTR [esi+0x97b1ce5]
  4178d8:	into   
  4178d9:	jne    0x41794f
  4178db:	cmp    eax,ecx
  4178dd:	shr    eax,cl
  4178df:	sbb    BYTE PTR [edx-0x7e0d99c9],0xf2
  4178e6:	inc    esp
  4178e7:	dec    esp
  4178e8:	xchg   edx,eax
  4178e9:	iret   
  4178ea:	push   edx
  4178eb:	jnp    0x4178aa
  4178ed:	cmp    ch,cl
  4178ef:	fisubr WORD PTR [esi]
  4178f1:	sbb    eax,0x57648805
  4178f6:	enter  0x5064,0x2e
  4178fa:	inc    edi
  4178fb:	(bad)  
  4178fc:	fsub   st(3),st
  4178fe:	adc    al,BYTE PTR [eax-0x58]
  417901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417902:	xor    ah,BYTE PTR [ebp+0x2f]
  417905:	fscale 
  417907:	pusha  
  417908:	popa   
  417909:	pop    edi
  41790a:	sub    BYTE PTR [ecx],dh
  41790c:	ret    0x234d
  41790f:	popa   
  417910:	jg     0x417917
  417912:	out    dx,al
  417913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417914:	das    
  417915:	lods   eax,DWORD PTR ds:[esi]
  417916:	test   DWORD PTR [edx+0x16c5b01],ebp
  41791c:	push   edx
  41791d:	jle    0x417906
  41791f:	sti    
  417920:	sub    al,0xdc
  417922:	inc    eax
  417923:	cdq    
  417924:	pop    ebp
  417925:	jae    0x4178be
  417927:	test   eax,0x8c43eba5
  41792c:	add    eax,0xca120f79
  417931:	xchg   edx,eax
  417932:	add    esi,DWORD PTR [esp+ebp*1-0x2363f26e]
  417939:	pop    ecx
  41793a:	dec    ecx
  41793b:	bound  eax,QWORD PTR [edx+0x3d693e79]
  417941:	mov    edi,0x823bbaa9
  417946:	pop    ds
  417947:	xor    cl,BYTE PTR [ecx-0x12562c5]
  41794d:	xor    DWORD PTR [edi+0x6d],ebp
  417950:	mov    ebp,0xff5aab01
  417955:	jge    0x4179a9
  417957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417958:	into   
  417959:	add    esi,esp
  41795b:	mov    al,ds:0x6b6825f4
  417960:	jnp    0x41798d
  417962:	ins    DWORD PTR es:[edi],dx
  417963:	adc    al,BYTE PTR [eax-0x2a3c757f]
  417969:	jge    0x417925
  41796b:	mov    esp,0xaea953a4
  417970:	ins    DWORD PTR es:[edi],dx
  417971:	xor    esp,eax
  417973:	sbb    BYTE PTR [ecx-0x61a457e9],dh
  417979:	std    
  41797a:	cli    
  41797b:	add    al,dh
  41797d:	(bad)  
  41797e:	sahf   
  41797f:	jbe    0x417906
  417981:	or     al,0x25
  417983:	sti    
  417984:	dec    ecx
  417985:	popa   
  417986:	sub    BYTE PTR [eax],dh
  417988:	jo     0x4179da
  41798a:	call   0xf6d7:0x7235bfc0
  417991:	mov    esp,0x7002eb96
  417996:	mov    BYTE PTR [eax+0x7b],dl
  417999:	xchg   ebx,eax
  41799a:	jae    0x417935
  41799c:	or     ecx,esp
  41799e:	dec    eax
  41799f:	sub    eax,0x133ce49c
  4179a4:	lds    edi,FWORD PTR [ecx]
  4179a6:	xor    DWORD PTR [esi],0x6ba74d46
  4179ac:	pop    edx
  4179ad:	jae    0x417957
  4179af:	or     DWORD PTR [ebp+edi*4+0x11],0x52c3c466
  4179b7:	and    al,0x4a
  4179b9:	fsub   QWORD PTR [ebx+0x41ae234b]
  4179bf:	cvtdq2ps xmm1,xmm3
  4179c2:	inc    eax
  4179c3:	pop    ss
  4179c4:	lock xor DWORD PTR [esi-0x2c3732b4],ecx
  4179cb:	sub    ch,bh
  4179cd:	jb     0x4179f3
  4179cf:	ins    DWORD PTR es:[edi],dx
  4179d0:	or     al,0x6
  4179d2:	(bad)  
  4179d3:	mov    eax,ds:0x2f08182f
  4179d8:	push   ss
  4179d9:	adc    bh,bl
  4179db:	popf   
  4179dc:	xchg   BYTE PTR [eax-0x814df0f],dh
  4179e2:	dec    eax
  4179e3:	call   0x2ae18940
  4179e8:	push   ecx
  4179e9:	add    eax,DWORD PTR [esi+0x8]
  4179ec:	pusha  
  4179ed:	and    DWORD PTR [esi-0x4910a7ad],ebx
  4179f3:	leave  
  4179f4:	sar    BYTE PTR [edi+0x41137302],0x3d
  4179fb:	sbb    esi,DWORD PTR [edx-0x18]
  4179fe:	inc    esi
  4179ff:	ret    
  417a00:	popa   
  417a01:	jbe    0x41798e
  417a03:	and    al,0xdb
  417a05:	outs   dx,DWORD PTR ds:[esi]
  417a06:	sbb    edx,ebp
  417a08:	imul   ecx,DWORD PTR [ebp-0x5652ae17],0x9e551308
  417a12:	xchg   esp,eax
  417a13:	mov    gs:0x177d2e51,al
  417a19:	aaa    
  417a1a:	xchg   edx,eax
  417a1b:	and    BYTE PTR [esi],dh
  417a1d:	pavgb  mm0,QWORD PTR [ebx-0x6bde09aa]
  417a24:	dec    ebp
  417a25:	pop    edi
  417a26:	ins    BYTE PTR es:[edi],dx
  417a27:	jne    0x4179c4
  417a29:	jnp    0x417a13
  417a2b:	add    BYTE PTR ss:[eax-0xd],cl
  417a2f:	shl    DWORD PTR [ebp+0x474d7afc],0x42
  417a36:	mov    ecx,0x2d2dc1cf
  417a3b:	push   ecx
  417a3c:	push   esp
  417a3d:	fwait
  417a3e:	mov    dh,0x4b
  417a40:	cmp    ebx,0x73
  417a43:	mov    bh,BYTE PTR [eax]
  417a45:	test   ebp,0x6c2599f4
  417a4b:	mov    ?,eax
  417a4d:	lods   eax,DWORD PTR ds:[esi]
  417a4e:	or     edx,DWORD PTR ds:0x8348a81e
  417a54:	std    
  417a55:	shr    DWORD PTR [ebx+0x64324626],0x7e
  417a5c:	scas   eax,DWORD PTR es:[edi]
  417a5d:	retf   0x8c5b
  417a60:	fiadd  DWORD PTR [ebx-0x23]
  417a63:	jle    0x417adf
  417a65:	ficom  WORD PTR [ebp+0x28fb0c7e]
  417a6b:	push   ebx
  417a6c:	pop    eax
  417a6d:	scas   al,BYTE PTR es:[edi]
  417a6e:	xor    DWORD PTR [ebx+0x33],eax
  417a71:	xor    bl,BYTE PTR [esi]
  417a73:	pop    eax
  417a74:	pusha  
  417a75:	icebp  
  417a76:	xchg   ecx,eax
  417a77:	outs   dx,BYTE PTR ds:[esi]
  417a78:	cmp    eax,0xd896487
  417a7d:	int3   
  417a7e:	lock icebp 
  417a80:	cwde   
  417a81:	push   es
  417a82:	mul    BYTE PTR [esi-0xb1e1de]
  417a88:	push   eax
  417a89:	retf   0x5de2
  417a8c:	aam    0xd1
  417a8e:	and    al,0x44
  417a90:	neg    BYTE PTR [ebx]
  417a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a93:	mov    ecx,0x55b4743
  417a98:	addr16 push edi
  417a9a:	mov    ecx,0x9e3a51b
  417a9f:	lock pop es
  417aa1:	inc    ebx
  417aa2:	mov    edi,0xd2895c60
  417aa7:	(bad)  
  417aa9:	int3   
  417aaa:	outs   dx,BYTE PTR ds:[esi]
  417aab:	repz or esp,esi
  417aae:	inc    ecx
  417aaf:	data16 hlt 
  417ab1:	add    DWORD PTR [esi-0x2d089001],0xffffffc3
  417ab8:	or     ebp,esi
  417aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417abb:	das    
  417abc:	mov    bl,0x5a
  417abe:	or     eax,0x1c656b11
  417ac3:	mov    esi,0x67dd0980
  417ac8:	ret    0x5fb1
  417acb:	aam    0x11
  417acd:	cmp    bh,BYTE PTR [esp+eiz*2+0x4f]
  417ad1:	and    bl,ch
  417ad3:	pop    edx
  417ad4:	push   ds
  417ad5:	jb     0x417a89
  417ad7:	adc    eax,0xe0d4822c
  417adc:	fld    DWORD PTR [edx+0x8ef8653]
  417ae2:	pusha  
  417ae3:	pop    ebp
  417ae4:	ficom  DWORD PTR ds:0xe49845f2
  417aea:	sub    al,0xf0
  417aec:	int    0x8e
  417aee:	fs ret 
  417af0:	popa   
  417af1:	stos   BYTE PTR es:[edi],al
  417af2:	add    eax,0x50b41ce4
  417af7:	mov    eax,eax
  417af9:	adc    al,BYTE PTR [edx-0x356ddacf]
  417aff:	push   0xd16cae0f
  417b04:	jno    0x417b60
  417b06:	(bad)
  417b0a:	cwde   
  417b0b:	clc    
  417b0c:	xchg   esi,eax
  417b0d:	or     esp,DWORD PTR [ebp+0x6d]
  417b10:	push   ecx
  417b11:	aam    0x3e
  417b13:	dec    edx
  417b14:	and    ax,0x66e7
  417b18:	fnstenv [ecx-0x649555a6]
  417b1e:	addr16 cmp eax,0x2f467920
  417b24:	mov    ds:0xae321b3b,eax
  417b29:	rcl    BYTE PTR [ebp+0x12],cl
  417b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b2d:	cmp    esi,edx
  417b2f:	fadd   st,st(3)
  417b31:	ins    DWORD PTR es:[edi],dx
  417b32:	ret    0x7f97
  417b35:	dec    eax
  417b36:	test   al,0xc8
  417b38:	std    
  417b39:	cmp    BYTE PTR [edx-0x3ed23195],dh
  417b3f:	cmc    
  417b40:	mov    esi,0xcc0c7791
  417b45:	ret    
  417b46:	push   esi
  417b47:	mov    bh,0xdc
  417b49:	gs dec eax
  417b4b:	(bad)  
  417b4c:	add    ah,bh
  417b4e:	pop    ecx
  417b4f:	icebp  
  417b50:	out    0x63,al
  417b52:	or     ah,bl
  417b54:	or     BYTE PTR [esi-0x690bcc8],al
  417b5a:	or     DWORD PTR [edi+ebp*2+0x3c],edx
  417b5e:	push   ds
  417b5f:	jne    0x417b9c
  417b61:	xchg   ecx,eax
  417b62:	rcl    DWORD PTR ds:0xbcb1db1e,1
  417b68:	adc    eax,0xf4e0f6c7
  417b6d:	sub    BYTE PTR [esi-0x1c970c98],cl
  417b73:	mov    bh,0x21
  417b75:	push   ss
  417b76:	data16 into 
  417b78:	pop    ebp
  417b79:	adc    DWORD PTR [ecx],0xffffffc2
  417b7c:	push   es
  417b7d:	or     al,0x1b
  417b7f:	pop    ebx
  417b80:	inc    edi
  417b81:	xor    BYTE PTR [edx+0x4e],bh
  417b84:	lds    ecx,FWORD PTR [edx-0x416c2d78]
  417b8a:	popf   
  417b8b:	xlat   BYTE PTR ds:[ebx]
  417b8c:	out    0x27,al
  417b8e:	push   es
  417b8f:	dec    esp
  417b90:	nop
  417b91:	sti    
  417b92:	or     DWORD PTR [edx+0x65],0x37eb48ff
  417b99:	in     eax,dx
  417b9a:	adc    al,0x66
  417b9c:	dec    eax
  417b9d:	xchg   dl,bl
  417b9f:	mov    ebx,0x9c878df2
  417ba4:	cmp    DWORD PTR [ebp-0x1772d48b],edi
  417baa:	int3   
  417bab:	lock inc ecx
  417bad:	in     al,dx
  417bae:	fidiv  WORD PTR [esi-0x31e312c]
  417bb4:	xor    esp,esi
  417bb6:	adc    al,BYTE PTR [esi]
  417bb8:	add    al,0x91
  417bba:	xor    edx,ebp
  417bbc:	rcl    DWORD PTR [esi],0x79
  417bbf:	(bad)
  417bc3:	shl    DWORD PTR [eax],1
  417bc5:	jae    0x417bf9
  417bc7:	pop    ecx
  417bc8:	loope  0x417b8a
  417bca:	sbb    DWORD PTR [edx+0x414a381e],edi
  417bd0:	adc    DWORD PTR [esi+0x3f],0x55
  417bd4:	xchg   ebp,eax
  417bd5:	xchg   BYTE PTR [edx-0x1d4b9505],dl
  417bdb:	shr    esp,cl
  417bdd:	pop    ecx
  417bde:	dec    ecx
  417bdf:	ja     0x417bf3
  417be1:	cmp    dh,BYTE PTR [edi]
  417be3:	dec    DWORD PTR [esi+edi*8-0x60]
  417be7:	icebp  
  417be8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417bea:	and    esi,DWORD PTR [edx]
  417bec:	in     eax,0x27
  417bee:	jbe    0x417bd1
  417bf0:	shr    BYTE PTR ds:0xaaec3d32,1
  417bf6:	xchg   ecx,eax
  417bf7:	fwait
  417bf8:	test   ebp,ecx
  417bfa:	dec    ecx
  417bfb:	mov    ch,0xe
  417bfd:	stos   DWORD PTR es:[edi],eax
  417bfe:	(bad)  
  417c00:	and    eax,0x5eac2023
  417c05:	pop    eax
  417c06:	dec    ebp
  417c07:	repz sub edx,eax
  417c0a:	bound  edi,QWORD PTR [ecx*2+0x1cd158e5]
  417c11:	lods   eax,DWORD PTR ds:[esi]
  417c12:	das    
  417c13:	iret   
  417c14:	jo     0x417c48
  417c16:	(bad)  
  417c17:	fcmovu st,st(4)
  417c19:	fmul   QWORD PTR [ecx]
  417c1b:	js     0x417bf5
  417c1d:	xor    al,0xc
  417c1f:	sub    BYTE PTR [edx+0x66],0xdc
  417c23:	push   esi
  417c24:	mul    BYTE PTR cs:[esi+0x73eee0b2]
  417c2b:	loop   0x417c2e
  417c2d:	cli    
  417c2e:	jns    0x417ca5
  417c30:	aad    0xb2
  417c32:	mov    dl,0xb1
  417c34:	xchg   DWORD PTR [esi],esp
  417c36:	push   esi
  417c37:	mul    DWORD PTR [esi]
  417c39:	mov    cl,0xdb
  417c3b:	push   0x5e0a56e6
  417c40:	dec    ecx
  417c41:	mov    al,ds:0x7be02b3f
  417c46:	dec    edx
  417c47:	mov    al,ds:0x78ef1e08
  417c4c:	xchg   ecx,eax
  417c4d:	cs iret 
  417c4f:	push   ecx
  417c50:	sbb    ecx,edx
  417c52:	(bad)  
  417c53:	imul   edi,DWORD PTR [edi-0x5a],0xffffffc1
  417c57:	call   0xeebb:0xb57a6300
  417c5e:	ss push 0xffffffa0
  417c61:	dec    edx
  417c62:	ffreep st(2)
  417c64:	and    esp,DWORD PTR [eax]
  417c66:	rol    BYTE PTR [esi-0x5a],0x45
  417c6a:	rcl    BYTE PTR [ebp-0x35501e66],0xf4
  417c71:	ror    DWORD PTR [esi-0x1ee6fd06],cl
  417c77:	cmc    
  417c78:	(bad)  
  417c79:	jo     0x417c70
  417c7b:	sbb    BYTE PTR [edx],al
  417c7d:	inc    esp
  417c7e:	jecxz  0x417cd6
  417c80:	adc    BYTE PTR [ecx+0x17],ah
  417c83:	add    eax,0x504bdd47
  417c88:	loop   0x417c45
  417c8a:	adc    dh,BYTE PTR [eax]
  417c8c:	call   0x6169:0x8ec4b8
  417c93:	mov    eax,ds:0x24cfdc7e
  417c98:	fisttp DWORD PTR [edx+0xefcc93d]
  417c9e:	mov    eax,0xdd7bc55c
  417ca3:	dec    esi
  417ca4:	retf   0xab3b
  417ca7:	sbb    BYTE PTR [esi],0xfe
  417caa:	call   0xcdf9cdc4
  417caf:	sbb    al,0xa2
  417cb1:	test   al,0x83
  417cb3:	popa   
  417cb4:	cmp    DWORD PTR [ecx+0x19c12b3b],0xfffffff5
  417cbb:	(bad)  
  417cbc:	fnstenv [esi+0x26]
  417cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc0:	inc    ebp
  417cc1:	jecxz  0x417cf7
  417cc3:	(bad)  
  417cc4:	mov    ss,WORD PTR [ebx-0x4c661c1]
  417cca:	fwait
  417ccb:	adc    ch,BYTE PTR [ecx-0x4fa0a38e]
  417cd1:	add    dh,BYTE PTR [ecx-0x6f357b97]
  417cd7:	adc    DWORD PTR [si+0x6e17],ebx
  417cdc:	or     al,0x31
  417cde:	inc    esp
  417cdf:	and    BYTE PTR [edx+edx*1+0x117b870a],al
  417ce6:	adc    DWORD PTR [eax],edx
  417ce8:	add    esi,DWORD PTR [ebx-0x74]
  417ceb:	add    edi,esp
  417ced:	test   BYTE PTR [edi+0x77b53c70],ah
  417cf3:	mov    edi,DWORD PTR [ecx]
  417cf5:	ins    DWORD PTR es:[edi],dx
  417cf6:	arpl   WORD PTR [esi],si
  417cf8:	in     al,0x70
  417cfa:	mov    ebx,0x32b67835
  417cff:	pushf  
  417d00:	mov    ebx,0x505a7389
  417d05:	mov    ah,0xb3
  417d07:	fdivr  DWORD PTR [edi-0x1ed7fb06]
  417d0d:	popa   
  417d0e:	pop    esi
  417d0f:	cmc    
  417d10:	xchg   ebp,eax
  417d11:	bound  ecx,QWORD PTR ds:0x38e17002
  417d17:	mov    esi,0x8f1344f5
  417d1c:	iret   
  417d1d:	scas   eax,DWORD PTR es:[edi]
  417d1e:	cs aaa 
  417d20:	bound  esp,QWORD PTR [edi+0x22a71e3b]
  417d26:	mov    ebx,0x41c602a9
  417d2b:	xor    ebx,edi
  417d2d:	cli    
  417d2e:	mov    ah,0x56
  417d30:	gs call 0xa41d8ecb
  417d36:	sub    BYTE PTR [edx+edi*2+0x5a8d27c4],dh
  417d3d:	pop    edi
  417d3e:	fnstenv [edi]
  417d40:	inc    esi
  417d41:	repz ds int3 
  417d44:	ins    BYTE PTR es:[edi],dx
  417d45:	js     0x417ccd
  417d47:	call   edx
  417d49:	retf   
  417d4a:	test   DWORD PTR [ebx-0x8e22e61],eax
  417d50:	jp     0x417d1d
  417d52:	lods   eax,DWORD PTR ds:[esi]
  417d53:	adc    eax,0xbcd690e8
  417d58:	cli    
  417d59:	mov    cl,0xf8
  417d5b:	cmc    
  417d5c:	nop
  417d5d:	mov    bh,0x70
  417d5f:	int3   
  417d60:	push   ebp
  417d61:	inc    ebx
  417d62:	js     0x417d25
  417d64:	cli    
  417d65:	enter  0xc1dc,0x48
  417d69:	xchg   edx,eax
  417d6a:	(bad)  
  417d6b:	icebp  
  417d6c:	popf   
  417d6d:	test   DWORD PTR [esi-0x785039cd],esp
  417d73:	inc    edx
  417d74:	mov    edx,0x30a409ff
  417d79:	lods   eax,DWORD PTR ds:[esi]
  417d7a:	sub    al,0x4a
  417d7c:	outs   dx,DWORD PTR ds:[esi]
  417d7d:	fs aaa 
  417d7f:	pushf  
  417d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d81:	push   ds
  417d82:	popa   
  417d83:	clc    
  417d84:	push   ebp
  417d85:	add    eax,0xbfb02073
  417d8a:	mov    ecx,0x8bc34311
  417d8f:	push   ecx
  417d90:	in     al,dx
  417d91:	push   0xe80f2886
  417d96:	and    al,BYTE PTR [eax+ebp*2]
  417d99:	(bad)  
  417d9a:	cmp    ch,BYTE PTR [ecx]
  417d9c:	xor    BYTE PTR [edx+0x5578e425],bh
  417da2:	in     al,0xbb
  417da4:	fbstp  TBYTE PTR [eax+edi*1-0x2f]
  417da8:	shl    bl,1
  417daa:	pop    eax
  417dab:	fcom   DWORD PTR [ebx]
  417dad:	mov    ds:0x74465e2b,al
  417db2:	add    bh,BYTE PTR [ecx+0x3a811db8]
  417db8:	stos   DWORD PTR es:[edi],eax
  417db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dba:	data16 stos BYTE PTR es:[edi],al
  417dbc:	adc    eax,DWORD PTR [ecx+0x2a]
  417dbf:	lods   eax,DWORD PTR ds:[esi]
  417dc0:	test   eax,0xbf8e9494
  417dc5:	in     eax,0x4a
  417dc7:	sbb    bl,BYTE PTR [edi]
  417dc9:	aaa    
  417dca:	and    DWORD PTR [esi-0x7d],ebx
  417dcd:	cmp    eax,0x682189e9
  417dd2:	or     al,0x62
  417dd4:	in     al,0xc3
  417dd6:	jle    0x417d8b
  417dd8:	enter  0xa1a6,0x2e
  417ddc:	mov    ?,WORD PTR [esi]
  417dde:	call   0x7b73:0xe726
  417de4:	mov    bh,0xd2
  417de6:	or     al,0x66
  417de8:	adc    al,0xe8
  417dea:	lea    esp,[ebx+0x1c]
  417ded:	retf   
  417dee:	xchg   ecx,eax
  417def:	neg    BYTE PTR [ebp-0x5bc99f42]
  417df5:	cld    
  417df6:	add    DWORD PTR [ecx-0x1c],0x2b
  417dfa:	xlat   BYTE PTR ds:[ebx]
  417dfb:	iret   
  417dfc:	and    eax,0x7b98014b
  417e01:	scas   eax,DWORD PTR es:[edi]
  417e02:	jno    0x417e7e
  417e04:	push   ebp
  417e05:	retf   
  417e06:	push   ebp
  417e07:	xchg   BYTE PTR [ecx],bl
  417e09:	xchg   ebx,eax
  417e0a:	jb     0x417dae
  417e0c:	(bad)  
  417e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e0e:	into   
  417e0f:	sub    DWORD PTR [esi],ecx
  417e11:	out    0x3e,eax
  417e13:	(bad)  
  417e14:	es xor bh,bh
  417e17:	fistp  QWORD PTR [ebx+0x660f1851]
  417e1d:	repz fdiv st(4),st
  417e20:	scas   eax,DWORD PTR es:[edi]
  417e21:	xchg   ebx,eax
  417e22:	mov    esp,DWORD PTR [esi]
  417e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e25:	mov    bh,BYTE PTR [ebp+0x7e4051c6]
  417e2b:	jns    0x417e89
  417e2d:	jae    0x417e46
  417e2f:	nop
  417e30:	jae    0x417e04
  417e32:	xor    BYTE PTR [esi],ah
  417e34:	adc    DWORD PTR [edx],eax
  417e36:	mov    esp,DWORD PTR [ebx-0x61]
  417e39:	call   0xcdfc:0x87d35048
  417e40:	push   cs
  417e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e42:	fwait
  417e43:	call   0x3e76:0x9c69177c
  417e4a:	fsub   QWORD PTR [edx-0x4f42d020]
  417e50:	jnp    0x417de3
  417e52:	scas   al,BYTE PTR es:[edi]
  417e53:	ds inc eax
  417e55:	inc    eax
  417e56:	inc    edx
  417e57:	rol    cl,1
  417e59:	inc    eax
  417e5a:	pop    edx
  417e5b:	out    0x76,eax
  417e5d:	xor    al,0x1b
  417e5f:	das    
  417e60:	or     DWORD PTR [edx-0x6b],esi
  417e63:	push   edx
  417e64:	cwde   
  417e65:	push   ss
  417e66:	jmp    0x417e24
  417e68:	mov    eax,0x1366bec2
  417e6d:	stos   DWORD PTR es:[edi],eax
  417e6e:	aaa    
  417e6f:	mov    ebx,0xd9e099fd
  417e74:	add    BYTE PTR [ecx+0x1bf41de1],dh
  417e7a:	pswapd mm7,QWORD PTR [esi]
  417e7e:	xlat   BYTE PTR ds:[ebx]
  417e7f:	push   cs
  417e80:	xor    ecx,DWORD PTR [esi-0x43]
  417e83:	inc    esi
  417e84:	pushf  
  417e85:	jp     0x417e1d
  417e87:	sbb    eax,0xa4c53cbf
  417e8c:	push   eax
  417e8d:	mov    bl,0x5d
  417e8f:	xor    ecx,DWORD PTR [esi+0x398e24f0]
  417e95:	jbe    0x417e20
  417e97:	push   ds
  417e98:	inc    ebx
  417e99:	cdq    
  417e9a:	out    0x31,al
  417e9c:	cld    
  417e9d:	and    al,BYTE PTR [ecx]
  417e9f:	(bad)  
  417ea0:	cwde   
  417ea1:	jle    0x417f0e
  417ea3:	popf   
  417ea4:	add    ecx,DWORD PTR [esi+0x27e9095d]
  417eaa:	imul   ebp,DWORD PTR [esi+edx*1],0x22bc0a85
  417eb1:	mov    bh,0xae
  417eb3:	fiadd  DWORD PTR [edx]
  417eb5:	mov    bl,BYTE PTR [esp+eax*1-0x754b5ed9]
  417ebc:	xchg   edi,eax
  417ebd:	outs   dx,BYTE PTR ds:[esi]
  417ebe:	mov    BYTE PTR [esi-0x1e],ah
  417ec1:	mov    ch,0x5e
  417ec3:	adc    dl,ah
  417ec5:	test   dh,cl
  417ec7:	xchg   DWORD PTR [esi],ebx
  417ec9:	cmp    BYTE PTR [esp+edx*8-0x39109f36],dl
  417ed0:	mov    ?,WORD PTR ds:0x976c366a
  417ed6:	pop    es
  417ed7:	pop    edi
  417ed8:	retf   0xc4b4
  417edb:	mov    ch,0xab
  417edd:	xchg   ebp,eax
  417ede:	xor    eax,DWORD PTR [edx-0x38072842]
  417ee4:	sub    BYTE PTR [eax],0xe4
  417ee7:	sub    eax,0x85f34488
  417eec:	ret    0x4feb
  417eef:	and    ecx,DWORD PTR [ecx]
  417ef1:	fsubr  st,st(4)
  417ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ef4:	xchg   ebx,eax
  417ef5:	scas   eax,DWORD PTR es:[edi]
  417ef6:	in     eax,dx
  417ef7:	xor    BYTE PTR [edi],ah
  417ef9:	hlt    
  417efa:	int3   
  417efb:	xlat   BYTE PTR ds:[ebx]
  417efc:	mov    ch,0xe1
  417efe:	mov    eax,0xdb8aa280
  417f03:	jmp    0xdadc:0x88e2e587
  417f0a:	cs push ss
  417f0c:	mov    eax,edx
  417f0e:	call   0x9f9284f7
  417f13:	std    
  417f14:	in     eax,0xc4
  417f16:	push   ss
  417f17:	sbb    ebx,ecx
  417f19:	dec    edi
  417f1a:	std    
  417f1b:	or     eax,0x1ace0be9
  417f20:	out    0xa4,eax
  417f22:	sar    BYTE PTR [esi],1
  417f24:	pop    esi
  417f25:	daa    
  417f26:	mov    cl,0xc6
  417f28:	fwait
  417f29:	push   0x6b
  417f2b:	jle    0x417f8d
  417f2d:	mov    BYTE PTR [edx+ecx*4+0x65],bl
  417f31:	cmc    
  417f32:	and    eax,0xa1630402
  417f37:	ins    DWORD PTR es:[edi],dx
  417f38:	sbb    dh,bl
  417f3a:	nop
  417f3b:	push   ebp
  417f3c:	mov    ch,dh
  417f3e:	fwait
  417f3f:	shl    DWORD PTR [ecx+0x6f],cl
  417f42:	jns    0x417fa1
  417f44:	jg     0x417fb9
  417f46:	icebp  
  417f47:	repz mov esp,0x510786e4
  417f4d:	inc    eax
  417f4e:	call   0xc29c728c
  417f53:	jo     0x417f99
  417f55:	add    DWORD PTR [ebx],eax
  417f57:	mov    ah,0xcd
  417f59:	aam    0x23
  417f5b:	jmp    FWORD PTR [edx+0x61fb635b]
  417f61:	retf   0x1eb8
  417f64:	gs jns 0x417f04
  417f67:	xchg   ch,al
  417f69:	mov    al,ds:0x43f63194
  417f6e:	icebp  
  417f6f:	and    BYTE PTR [edx+0x20],ah
  417f72:	je     0x417f62
  417f74:	stos   DWORD PTR es:[edi],eax
  417f75:	neg    cl
  417f77:	test   BYTE PTR [ebx-0x3aea0120],ah
  417f7d:	or     dh,BYTE PTR [ebx]
  417f7f:	into   
  417f80:	pop    eax
  417f81:	js     0x417f23
  417f83:	xor    DWORD PTR [ecx],esi
  417f85:	mov    eax,ds:0xefe3d260
  417f8a:	add    ah,BYTE PTR [ecx-0x36]
  417f8d:	pop    ebp
  417f8e:	xchg   esp,eax
  417f8f:	add    eax,0xacd825bd
  417f94:	pop    esi
  417f95:	jecxz  0x417fce
  417f97:	push   edi
  417f98:	push   0x4a345cab
  417f9d:	or     dh,al
  417f9f:	stc    
  417fa0:	sbb    eax,0xa2ae386
  417fa5:	jo     0x417fd7
  417fa7:	test   BYTE PTR [edi],ah
  417fa9:	sbb    esp,DWORD PTR [eax-0x7c]
  417fac:	sahf   
  417fad:	dec    esp
  417fae:	mov    DWORD PTR [edi-0x6c],edx
  417fb1:	and    ecx,DWORD PTR [edi-0x4d]
  417fb4:	adc    cl,BYTE PTR [edx]
  417fb6:	mov    ds:0x8338521b,al
  417fbb:	popf   
  417fbc:	lods   al,BYTE PTR ds:[esi]
  417fbd:	das    
  417fbe:	sbb    eax,0xc1e8a8e2
  417fc3:	mov    edi,0xd522760a
  417fc8:	mov    ecx,DWORD PTR [edx]
  417fca:	aam    0x2b
  417fcc:	sbb    BYTE PTR [edi-0x439c4c19],cl
  417fd2:	sub    BYTE PTR [edx-0x20],al
  417fd5:	dec    edi
  417fd6:	or     ebp,ecx
  417fd8:	sub    eax,0x8dc4125d
  417fdd:	ret    
  417fde:	dec    edx
  417fdf:	loopne 0x418032
  417fe1:	stc    
  417fe2:	loopne 0x417f89
  417fe4:	dec    esi
  417fe5:	inc    edx
  417fe6:	mov    edi,0xb07b1d66
  417feb:	jp     0x418010
  417fed:	adc    al,0x85
  417fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff0:	push   cs
  417ff1:	sbb    BYTE PTR [edx],bh
  417ff3:	pushf  
  417ff4:	imul   eax,DWORD PTR [ebx-0x2320768f],0x47
  417ffb:	dec    eax
  417ffc:	mov    sp,0xac98
  418000:	ins    BYTE PTR es:[edi],dx
  418001:	(bad)  
  418002:	stos   DWORD PTR es:[edi],eax
  418003:	ins    BYTE PTR es:[edi],dx
  418004:	(bad)  
  418005:	repz repnz sahf 
  418008:	pushf  
  418009:	sbb    BYTE PTR [edi-0x67f4a959],0x2b
  418010:	cmp    BYTE PTR [edi+0x3a],bh
  418013:	loop   0x417ffe
  418015:	xchg   ecx,eax
  418016:	inc    ebx
  418017:	push   edi
  418018:	mov    al,0xda
  41801a:	inc    eax
  41801b:	sbb    esi,DWORD PTR [eax-0xb055e42]
  418021:	pop    ecx
  418022:	jl     0x4180a2
  418024:	pop    esp
  418025:	clc    
  418026:	adc    eax,0xb9408702
  41802b:	mov    es,WORD PTR cs:[ecx-0x6458557a]
  418032:	push   es
  418033:	or     al,dh
  418035:	mov    ds:0xa89557ce,eax
  41803a:	call   0x5bbd:0xf73f396d
  418041:	sub    cl,al
  418043:	stos   DWORD PTR es:[edi],eax
  418044:	fdivr  DWORD PTR [edx-0x55]
  418047:	sub    DWORD PTR [ebx-0x50],esp
  41804a:	mov    ch,BYTE PTR [ecx-0x2]
  41804d:	dec    ebx
  41804e:	push   ds
  41804f:	mov    DWORD PTR [edi+0x4559014e],esi
  418055:	jg     0x418058
  418057:	adc    eax,0xe3a1b0b4
  41805c:	scas   al,BYTE PTR es:[edi]
  41805d:	shl    bl,cl
  41805f:	adc    DWORD PTR [ebp+0x69],eax
  418062:	mov    BYTE PTR [edi+0x4deae945],ah
  418068:	cmc    
  418069:	(bad)  
  41806a:	mov    bh,0xa6
  41806c:	fwait
  41806d:	inc    ebp
  41806e:	int3   
  41806f:	outs   dx,DWORD PTR ds:[esi]
  418070:	inc    ebx
  418071:	shl    dl,0x47
  418074:	and    ah,BYTE PTR [edi+eax*2+0x119d28d9]
  41807b:	enter  0x7250,0x8d
  41807f:	mov    esi,0xcedfc681
  418084:	outs   dx,DWORD PTR ds:[esi]
  418085:	mov    ch,0x22
  418087:	retf   
  418088:	std    
  418089:	or     ecx,eax
  41808b:	mov    eax,0xab485403
  418090:	xor    al,0x6f
  418092:	xchg   esi,eax
  418093:	add    DWORD PTR [edx-0x30],ecx
  418096:	cli    
  418097:	and    bl,BYTE PTR [edi+0x736fa929]
  41809d:	inc    esp
  41809e:	xlat   BYTE PTR ds:[ebx]
  41809f:	sbb    BYTE PTR [ebx+0x2ce86c73],ch
  4180a5:	sbb    eax,0x79127a68
  4180aa:	cmp    BYTE PTR [edx-0x56014f2e],bh
  4180b0:	sti    
  4180b1:	push   0x63
  4180b3:	mov    ebx,0x24382756
  4180b8:	and    esp,esp
  4180ba:	mov    ecx,0xf509b867
  4180bf:	aam    0x1e
  4180c1:	mov    edx,0x9177c854
  4180c6:	lahf   
  4180c7:	int3   
  4180c8:	push   eax
  4180c9:	into   
  4180ca:	mov    ds:0x17d1ecb9,al
  4180cf:	adc    BYTE PTR [ecx],0xe4
  4180d2:	out    dx,eax
  4180d3:	call   0xc8a2bfdb
  4180d8:	push   es
  4180d9:	sar    BYTE PTR [ebx+esi*4+0x27],1
  4180dd:	mov    ds:0xcb37f97e,eax
  4180e2:	in     al,0x53
  4180e4:	inc    esp
  4180e5:	pushf  
  4180e6:	mov    bh,ch
  4180e8:	sbb    BYTE PTR [esi-0xa2c05c8],dh
  4180ee:	or     BYTE PTR [ebx],ah
  4180f0:	inc    ebx
  4180f1:	in     eax,0x8f
  4180f3:	push   edx
  4180f4:	jmp    0x4180d3
  4180f6:	data16 fs jns 0x41813c
  4180fa:	push   0x63
  4180fc:	aam    0x59
  4180fe:	mov    eax,ds:0x4df3480
  418103:	dec    edi
  418104:	lods   eax,DWORD PTR ds:[esi]
  418105:	ret    0xaa45
  418108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418109:	mov    eax,es
  41810b:	push   ds
  41810c:	shr    BYTE PTR [edx-0x61],cl
  41810f:	mov    edx,0x37643467
  418114:	or     BYTE PTR [esi],cl
  418116:	xor    eax,DWORD PTR [ebx+0x289df2ed]
  41811c:	(bad)  
  41811d:	sbb    ebp,DWORD PTR [ebp-0x2553879b]
  418123:	xchg   DWORD PTR [esi-0x7198e840],edx
  418129:	inc    esp
  41812a:	jmp    0x4180df
  41812c:	test   eax,0x8cf0f1cd
  418131:	test   al,0x50
  418133:	(bad)  
  418134:	cwde   
  418135:	or     ebp,DWORD PTR [edi+0x5a]
  418138:	dec    eax
  418139:	jo     0x41816c
  41813b:	dec    edi
  41813c:	pop    esi
  41813d:	add    DWORD PTR [ecx-0x29a891ed],0xfd6ca040
  418147:	stos   BYTE PTR es:[edi],al
  418148:	pop    ds
  418149:	push   es
  41814a:	repz xchg esp,eax
  41814c:	outs   dx,DWORD PTR ds:[esi]
  41814d:	shl    DWORD PTR [ecx-0x57],1
  418150:	or     bl,BYTE PTR [ebx+0x22]
  418153:	dec    ebp
  418154:	dec    eax
  418155:	cs adc eax,0x64279b60
  41815b:	ss push ds
  41815d:	sbb    al,0x5f
  41815f:	mov    ah,BYTE PTR [eax+0x769ac61e]
  418165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418166:	bound  esp,QWORD PTR [esi]
  418168:	sub    al,0x15
  41816a:	imul   esi,DWORD PTR [esi+0xb],0xffffff9f
  41816e:	pop    ds
  41816f:	and    BYTE PTR [edx+0x2439136b],bh
  418175:	dec    ebx
  418176:	inc    edi
  418177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418178:	mov    eax,0x21552784
  41817d:	addr16 mov esi,0x1f759351
  418183:	call   DWORD PTR [ebx]
  418185:	push   cs
  418186:	pushf  
  418187:	shr    BYTE PTR [edi+0x3e],0xd4
  41818b:	addr16 pusha 
  41818d:	mov    cl,bh
  41818f:	lahf   
  418190:	mov    al,0x15
  418192:	xor    eax,0xf456b209
  418197:	sbb    bh,BYTE PTR [ebx+0x65]
  41819a:	dec    ebx
  41819b:	stc    
  41819c:	addr16 mov bh,0x53
  41819f:	cmp    BYTE PTR ds:0x32cc0910,ah
  4181a5:	lahf   
  4181a6:	test   eax,0xb80a95e9
  4181ab:	stos   BYTE PTR es:[edi],al
  4181ac:	inc    ebp
  4181ad:	add    DWORD PTR [ebp-0x2add7feb],ebp
  4181b3:	ins    BYTE PTR es:[edi],dx
  4181b4:	mov    WORD PTR [eax+ebp*2+0x7e],ss
  4181b8:	and    BYTE PTR [ecx+edi*1-0x76],0xae
  4181bd:	inc    edi
  4181be:	mov    esp,0x184cbe1c
  4181c3:	or     bh,ch
  4181c5:	nop
  4181c6:	out    dx,al
  4181c7:	dec    ebp
  4181c8:	addr16 daa 
  4181ca:	iret   
  4181cb:	ds xor eax,0x4f7ddc41
  4181d1:	xchg   esi,eax
  4181d2:	xor    al,BYTE PTR [eax]
  4181d4:	cli    
  4181d5:	dec    BYTE PTR ds:0x57496b0e
  4181db:	adc    DWORD PTR [esi-0x277d9dc1],edx
  4181e1:	sahf   
  4181e2:	jecxz  0x4181e1
  4181e4:	xchg   ecx,eax
  4181e5:	fstp   QWORD PTR [esi+eax*4+0x482cc832]
  4181ec:	outs   dx,DWORD PTR ds:[esi]
  4181ed:	mov    DWORD PTR [eax],eax
  4181ef:	jle    0x4181d9
  4181f1:	shr    BYTE PTR [esi+0x7573fa5e],cl
  4181f7:	adc    DWORD PTR [esi+0x20db32f8],ebx
  4181fd:	xor    al,0x63
  4181ff:	cmp    DWORD PTR [esi-0x5a],edi
  418202:	es gs test esp,ebp
  418206:	dec    ebp
  418207:	jo     0x4181fc
  418209:	mov    esp,esi
  41820b:	and    al,0x62
  41820d:	dec    esi
  41820e:	or     eax,ebx
  418210:	jecxz  0x418243
  418212:	fisub  DWORD PTR [esi-0x2501e422]
  418218:	xchg   BYTE PTR [di-0x49],dh
  41821c:	sbb    DWORD PTR [esi+0x638d14f6],edi
  418222:	mov    dl,0xf9
  418224:	mov    cl,0x85
  418226:	pushf  
  418227:	call   0x7fac:0x64ea9252
  41822e:	pop    eax
  41822f:	xor    BYTE PTR [ebp-0x5c],cl
  418232:	mov    dh,0x11
  418234:	or     ebx,DWORD PTR [ebx-0x27]
  418237:	in     eax,dx
  418238:	(bad)  
  418239:	dec    ebp
  41823a:	xor    DWORD PTR [eax+ecx*2],0x2d
  41823e:	lahf   
  41823f:	inc    ebx
  418240:	(bad)
  418244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418245:	and    BYTE PTR [ebx-0x7d],al
  418248:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41824a:	retf   0xc270
  41824d:	in     eax,0xa2
  41824f:	mov    ah,0x16
  418251:	pop    ebx
  418252:	out    dx,eax
  418253:	mov    dh,BYTE PTR [edi-0x5af6e74d]
  418259:	punpcklbw mm4,mm1
  41825c:	cmp    BYTE PTR [eax-0x3f],bh
  41825f:	mov    esp,0xd588e3b
  418264:	out    dx,al
  418265:	cmp    bh,BYTE PTR [ebp+ecx*2-0x182a0a34]
  41826c:	jns    0x4182ea
  41826e:	dec    edx
  41826f:	sbb    edi,ebp
  418271:	dec    esp
  418272:	cmc    
  418273:	inc    ecx
  418274:	in     eax,0x98
  418276:	stos   BYTE PTR es:[edi],al
  418277:	(bad)  
  418278:	mov    ecx,0x956fcb7b
  41827d:	stc    
  41827e:	or     dh,cl
  418280:	add    BYTE PTR [ebp+0x6dbb5483],dh
  418286:	adc    ecx,DWORD PTR [eax-0x4f]
  418289:	push   esp
  41828a:	or     al,0x1d
  41828c:	call   0x4bc3aa18
  418291:	xor    eax,0x4ef798e
  418296:	shl    DWORD PTR [ebp-0x5f],1
  418299:	jno    0x41822e
  41829b:	jbe    0x4182db
  41829d:	div    edx
  41829f:	sbb    cl,BYTE PTR [edi]
  4182a1:	std    
  4182a2:	in     eax,0xd2
  4182a4:	in     eax,0x4d
  4182a6:	cmc    
  4182a7:	stos   BYTE PTR es:[edi],al
  4182a8:	push   ecx
  4182a9:	call   0x8593:0xc39e10d7
  4182b0:	add    BYTE PTR [esi],dh
  4182b2:	int3   
  4182b3:	push   DWORD PTR [bx+di-0x64]
  4182b7:	adc    esp,edx
  4182b9:	jp     0x4182d2
  4182bb:	push   ss
  4182bc:	test   DWORD PTR [ebx-0x4ddcb370],0x26ef049a
  4182c6:	xor    ebx,DWORD PTR [ebx]
  4182c8:	bound  esi,QWORD PTR [ebx]
  4182ca:	popf   
  4182cb:	mov    DWORD PTR [ebp+0x11],edx
  4182ce:	lock nop
  4182d0:	and    bl,BYTE PTR [ecx]
  4182d2:	adc    BYTE PTR [edi+0x1f],dl
  4182d5:	std    
  4182d6:	js     0x41829d
  4182d8:	loop   0x418333
  4182da:	cmp    al,0xff
  4182dc:	loope  0x41831c
  4182de:	or     edx,DWORD PTR [edx+0x6f]
  4182e1:	jne    0x418309
  4182e3:	int    0x3b
  4182e5:	xchg   esi,eax
  4182e6:	inc    edx
  4182e7:	jmp    0x4182ae
  4182e9:	icebp  
  4182ea:	mov    eax,ds:0xe925d57b
  4182ef:	(bad)  
  4182f1:	in     al,0x61
  4182f3:	int    0x23
  4182f5:	push   ebp
  4182f6:	push   0xe8b5b814
  4182fb:	bound  ecx,QWORD PTR [edx+0x29]
  4182fe:	jle    0x41836e
  418300:	and    ebp,DWORD PTR [edi+0x5ad0dd48]
  418306:	es lock scas eax,DWORD PTR es:[edi]
  418309:	sbb    al,BYTE PTR [ebx]
  41830b:	dec    ebp
  41830c:	out    dx,al
  41830d:	loopne 0x41837d
  41830f:	data16 jge 0x418350
  418312:	push   eax
  418313:	cmp    al,0x1e
  418315:	inc    ecx
  418316:	mov    edx,0xb9add39e
  41831b:	and    al,0x34
  41831d:	call   0x39f:0x1d24d453
  418324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418325:	jle    0x4182d9
  418327:	and    bh,cl
  418329:	pop    ds
  41832a:	sahf   
  41832b:	retf   0xdf79
  41832e:	in     eax,dx
  41832f:	jmp    0x4182d3
  418331:	inc    esp
  418332:	pop    edi
  418333:	jmp    0x237702e5
  418338:	xchg   edx,eax
  418339:	and    ah,bh
  41833b:	add    bh,BYTE PTR [eax-0x49]
  41833e:	loop   0x4182eb
  418340:	pop    ss
  418341:	xor    al,0x8f
  418343:	(bad)  fs:[eax+0x63]
  418347:	adc    dh,BYTE PTR [eax]
  418349:	xlat   BYTE PTR ds:[ebx]
  41834a:	xchg   esp,eax
  41834b:	and    al,0xd3
  41834d:	ins    DWORD PTR es:[edi],dx
  41834e:	sbb    ch,ch
  418350:	pop    esi
  418351:	push   ss
  418352:	or     BYTE PTR [eax],0x43
  418355:	xchg   edi,eax
  418356:	sahf   
  418357:	push   0xd5e567fa
  41835c:	dec    ebp
  41835d:	push   edx
  41835e:	cli    
  41835f:	dec    edx
  418360:	sub    DWORD PTR [edi+0x57],ecx
  418363:	loop   0x418313
  418365:	ret    
  418366:	out    0xb9,al
  418368:	shl    DWORD PTR [edi-0x736f01cc],cl
  41836e:	das    
  41836f:	addr16 ret 
  418371:	jo     0x4183a7
  418373:	pop    ss
  418374:	push   ebp
  418375:	fstp   QWORD PTR [edx-0x76745337]
  41837b:	push   ebp
  41837c:	xchg   ebx,eax
  41837d:	xchg   edx,eax
  41837e:	sbb    BYTE PTR [ebp+0x1d],dl
  418381:	in     al,dx
  418382:	pop    ebx
  418383:	pop    ebx
  418384:	call   DWORD PTR [edi]
  418386:	in     al,0x5c
  418388:	stc    
  418389:	sbb    BYTE PTR [esp+ebp*1-0x3bda99ba],0xe9
  418391:	in     al,0x7d
  418393:	add    cl,BYTE PTR [eax-0x1b8958ce]
  418399:	ret    0x3411
  41839c:	and    edx,DWORD PTR [edx+0x34db9568]
  4183a2:	add    eax,0x722b5b91
  4183a7:	in     al,0xd8
  4183a9:	je     0x41833b
  4183ab:	xchg   edi,eax
  4183ac:	inc    eax
  4183ad:	dec    esp
  4183ae:	(bad)  
  4183af:	and    al,0xa1
  4183b1:	lods   eax,DWORD PTR ds:[esi]
  4183b2:	mov    edx,0x5d684f55
  4183b7:	mov    bh,0x41
  4183b9:	out    0x21,al
  4183bb:	enter  0x81d5,0xb6
  4183bf:	int3   
  4183c0:	push   ebx
  4183c1:	mov    edx,0x70bdec4e
  4183c6:	adc    eax,0x7d491b2d
  4183cb:	sahf   
  4183cc:	test   DWORD PTR [ecx],edx
  4183ce:	pop    ds
  4183cf:	jnp    0x418394
  4183d1:	cwde   
  4183d2:	xchg   ebp,eax
  4183d3:	lock rcl DWORD PTR [edx+0x4f],0x8a
  4183d8:	push   0xffe5c173
  4183dd:	pop    ebp
  4183de:	adc    BYTE PTR [ecx-0x68123280],0xe7
  4183e5:	push   eax
  4183e6:	jge    0x41839a
  4183e8:	leave  
  4183e9:	and    DWORD PTR ds:0x6182ea18,edi
  4183ef:	jnp    0x418372
  4183f1:	in     al,0xb
  4183f3:	push   cs
  4183f4:	cmp    al,0x42
  4183f6:	cmc    
  4183f7:	push   0xffffffbb
  4183f9:	adc    bl,BYTE PTR [ebp+0xc]
  4183fc:	aad    0xf9
  4183fe:	aad    0x64
  418400:	push   ds
  418401:	clc    
  418402:	cdq    
  418403:	out    dx,al
  418404:	jmp    0xfbb253fb
  418409:	scas   eax,DWORD PTR es:[edi]
  41840a:	adc    ecx,DWORD PTR gs:[edx+ebp*8-0x35]
  41840f:	mov    bl,0x24
  418411:	jnp    0x41848f
  418413:	mov    eax,ds:0xb65ffaa4
  418418:	or     eax,0x7918c2ea
  41841d:	scas   al,BYTE PTR es:[edi]
  41841e:	imul   esi,DWORD PTR [esi],0xffffffc4
  418421:	adc    al,0x75
  418423:	jae    0x4183ba
  418425:	lea    edx,[edx+0x5f]
  418428:	inc    ebx
  418429:	and    eax,0x679efa6c
  41842e:	cmp    al,0xcf
  418430:	xchg   ebp,eax
  418431:	fimul  DWORD PTR [eax]
  418433:	xor    eax,0xf3c8a4da
  418438:	cmp    esp,ecx
  41843a:	arpl   WORD PTR [ebx-0x782f4188],bx
  418440:	adc    esp,0x3d
  418443:	push   0x8810062d
  418448:	leave  
  418449:	mov    bh,cl
  41844b:	cli    
  41844c:	xchg   ecx,eax
  41844d:	sbb    BYTE PTR [edi-0x6b],bh
  418450:	cs xchg edx,eax
  418452:	pop    edi
  418453:	shl    BYTE PTR cs:[esi+0x6383632],0x36
  41845b:	and    ah,al
  41845d:	std    
  41845e:	imul   ebp,DWORD PTR [edx+ebp*2+0x6d],0x1b
  418463:	cmp    BYTE PTR [edi],dh
  418465:	fwait
  418466:	dec    ecx
  418467:	sbb    ah,BYTE PTR [edi]
  418469:	xchg   ecx,eax
  41846a:	hlt    
  41846b:	xor    eax,0x1a6afeef
  418470:	xchg   ebp,eax
  418471:	jbe    0x4184c2
  418473:	retf   0x5172
  418476:	mov    al,0x39
  418478:	shl    ah,0x8b
  41847b:	lds    edi,FWORD PTR [edx-0x7e]
  41847e:	and    al,0xb0
  418480:	fs pusha 
  418482:	repnz aam 0x94
  418485:	mov    dh,0x30
  418487:	pop    ebp
  418488:	adc    eax,0x16f72e6d
  41848d:	aaa    
  41848e:	enter  0xa966,0x44
  418492:	push   ss
  418493:	dec    ecx
  418494:	es jmp 0xb770:0xdccc00ca
  41849c:	fisubr WORD PTR [esi-0x5a]
  41849f:	pop    esi
  4184a0:	sub    eax,0xa04068e2
  4184a5:	test   eax,0xf5d2dfe1
  4184aa:	dec    edi
  4184ab:	cld    
  4184ac:	loope  0x41844b
  4184ae:	imul   ecx,DWORD PTR [ebp+0x5bc548c9],0xffffff94
  4184b5:	sub    al,0x26
  4184b7:	ja     0x41843e
  4184b9:	je     0x418487
  4184bb:	loop   0x418455
  4184bd:	(bad)  
  4184be:	(bad)  
  4184bf:	rdtsc  
  4184c1:	je     0x41844c
  4184c3:	xor    bh,ch
  4184c5:	add    eax,esp
  4184c7:	pop    edi
  4184c8:	in     al,0xf8
  4184ca:	test   BYTE PTR [ebp-0x32ce80af],dl
  4184d0:	mov    esp,edi
  4184d2:	push   eax
  4184d3:	push   ebx
  4184d4:	pop    esp
  4184d5:	lahf   
  4184d6:	pop    edi
  4184d7:	or     DWORD PTR [esi+0x6],esp
  4184da:	dec    ebp
  4184db:	jmp    0xf309:0x6683bb7e
  4184e2:	leave  
  4184e3:	pop    ecx
  4184e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184e5:	inc    esp
  4184e6:	inc    edx
  4184e7:	sahf   
  4184e8:	shr    BYTE PTR [edx],1
  4184ea:	xchg   BYTE PTR [esi+0x57],cl
  4184ed:	mov    dl,0x19
  4184ef:	ret    0x3010
  4184f2:	xor    BYTE PTR [ecx-0x60d527ec],dh
  4184f8:	mov    WORD PTR [ebx+0x2790a9a7],ss
  4184fe:	xchg   esi,eax
  4184ff:	ret    
  418500:	jg     0x418545
  418502:	pop    ds
  418503:	imul   ebp,ebp,0x3920f7d9
  418509:	enter  0x818d,0xd1
  41850d:	(bad)  
  41850e:	mov    ebx,0x14cbb7d6
  418513:	cwde   
  418514:	pop    edx
  418515:	(bad)  
  418516:	int    0x5b
  418518:	adc    edi,ebx
  41851a:	imul   esi,DWORD PTR [edi-0x34],0x7a
  41851e:	sti    
  41851f:	mov    edi,edx
  418521:	(bad)  
  418522:	std    
  418523:	mov    cl,0x34
  418525:	repz and edx,DWORD PTR [esi]
  418528:	xor    esi,DWORD PTR [eax+ebx*1+0x4400cd2b]
  41852f:	xor    edx,DWORD PTR ds:0x9ce53c56
  418535:	xor    esp,edx
  418537:	fs jmp 0x41858c
  41853a:	scas   al,BYTE PTR es:[edi]
  41853b:	cmp    eax,0x3e071725
  418540:	add    al,0x7e
  418542:	(bad)  
  418543:	xchg   ebx,eax
  418544:	adc    DWORD PTR [eax-0x70fc81e1],edx
  41854a:	mov    ebp,0x8c5e4b26
  41854f:	jae    0x70d134fe
  418555:	jmp    0x7132:0x9e539141
  41855c:	jge    0x4185d1
  41855e:	sbb    eax,0xc2354c1d
  418563:	inc    eax
  418564:	dec    edi
  418565:	push   edx
  418566:	pop    ebp
  418567:	call   0x83715677
  41856c:	xchg   DWORD PTR [ebp+edi*1-0x69],ebp
  418570:	sub    BYTE PTR [ebx],bl
  418572:	rol    al,1
  418574:	jmp    0x4185e2
  418576:	pop    esi
  418577:	fistp  DWORD PTR [edx+0x50]
  41857a:	xchg   esi,eax
  41857b:	hlt    
  41857c:	xor    BYTE PTR [esi-0x4f0104ed],0x7e
  418583:	not    BYTE PTR ds:0xaef1ad98
  418589:	pop    edi
  41858a:	mov    bl,0x76
  41858c:	push   es
  41858d:	jle    0x4185aa
  41858f:	jl     0x418553
  418591:	sbb    ebp,eax
  418593:	arpl   WORD PTR [ecx],di
  418595:	jo     0x418578
  418597:	ja     0x4185d8
  418599:	cmc    
  41859a:	push   eax
  41859b:	push   ss
  41859c:	(bad)
  41859f:	paddusw mm3,QWORD PTR [eax-0x6ac243c3]
  4185a6:	mov    dh,0x5
  4185a8:	sbb    ecx,eax
  4185aa:	push   0xf48d91a4
  4185af:	test   al,0x83
  4185b1:	dec    esp
  4185b2:	cmp    cl,dl
  4185b4:	inc    eax
  4185b5:	cmc    
  4185b6:	imul   esi,edi,0xffffff89
  4185b9:	add    DWORD PTR [ecx],ecx
  4185bb:	stc    
  4185bc:	jo     0x418597
  4185be:	jl     0x4185db
  4185c0:	fidiv  DWORD PTR [edx+eax*1+0x78]
  4185c4:	popf   
  4185c5:	jg     0x418617
  4185c7:	xor    eax,0x405f9a1e
  4185cc:	ret    
  4185cd:	xor    ebp,ebp
  4185cf:	jg     0x4185b3
  4185d1:	add    ebx,DWORD PTR [esi-0x19]
  4185d4:	nop
  4185d5:	out    dx,eax
  4185d6:	shl    BYTE PTR [ebx+0x7f6a968e],1
  4185dc:	(bad)  
  4185dd:	out    dx,al
  4185de:	mov    dh,0x4e
  4185e0:	jecxz  0x4185dc
  4185e2:	mov    esp,0x8a4e6863
  4185e7:	retf   0x26e2
  4185ea:	fisubr DWORD PTR [esi+eiz*2+0x47]
  4185ee:	cmp    DWORD PTR [esi-0x78a3c0ff],0x43
  4185f5:	add    DWORD PTR [ecx+ebp*2-0x1d],edx
  4185f9:	push   ebp
  4185fa:	or     al,0x2f
  4185fc:	and    eax,0x3273cc85
  418601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418602:	or     eax,0x35176504
  418607:	mov    ebx,0xb760dbca
  41860c:	mov    edi,DWORD PTR [ecx+eax*2]
  41860f:	js     0x418621
  418611:	jne    0x41867a
  418613:	je     0x4185d6
  418615:	and    eax,0xa810cda8
  41861a:	jbe    0x41867c
  41861c:	imul   ecx,edi,0x5480cdce
  418622:	lock mov ecx,0x5ad8c32e
  418628:	pop    esi
  418629:	mov    edx,0xf503c1eb
  41862e:	mov    esi,0x846168f0
  418633:	and    BYTE PTR [eax],0xb0
  418636:	(bad)  
  418637:	adc    al,0x1f
  418639:	aad    0x75
  41863b:	sub    ebx,DWORD PTR [eax+0x201dc15d]
  418641:	loop   0x418619
  418643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418644:	sbb    eax,0x5fcbfe4f
  418649:	mov    al,BYTE PTR [edi-0x69]
  41864c:	and    al,0x7f
  41864e:	out    dx,al
  41864f:	adc    eax,0x6f3aab08
  418654:	sub    eax,0xf9543fa3
  418659:	js     0x4186a2
  41865b:	pop    ds
  41865c:	inc    ebp
  41865d:	pop    eax
  41865e:	fcomp  DWORD PTR ss:[ebx+0x70]
  418662:	cmp    BYTE PTR [eax+0x41],ah
  418665:	call   0x8a3c34ce
  41866a:	and    esi,esp
  41866c:	fild   QWORD PTR [edi]
  41866e:	stos   BYTE PTR es:[edi],al
  41866f:	and    BYTE PTR [edx+0x3],bl
  418672:	out    dx,eax
  418673:	(bad)  
  418675:	xchg   edi,eax
  418676:	jne    0x418679
  418678:	loope  0x418633
  41867a:	push   edx
  41867b:	shl    bh,0xea
  41867e:	push   es
  41867f:	test   bh,al
  418681:	add    eax,0x2823680f
  418686:	dec    esp
  418687:	std    
  418688:	outs   dx,BYTE PTR ds:[esi]
  418689:	add    eax,0x622addf6
  41868e:	js     0x4186cc
  418690:	inc    edi
  418691:	mov    ss,WORD PTR [esi]
  418693:	xchg   ebx,eax
  418694:	fidivr WORD PTR [edi]
  418696:	inc    ecx
  418697:	mov    edi,0xd3bc64f1
  41869c:	daa    
  41869d:	adc    eax,0x13d55340
  4186a2:	scas   al,BYTE PTR es:[edi]
  4186a3:	fist   DWORD PTR [ecx+0x19a8bbe7]
  4186a9:	jmp    0x456c:0xcab22b16
  4186b0:	mov    edx,0x5a9e8dec
  4186b5:	mov    dh,0x1f
  4186b7:	jbe    0x4186a0
  4186b9:	push   cs
  4186ba:	repz or eax,0xe2959527
  4186c0:	js     0x4186a1
  4186c2:	xor    ebx,DWORD PTR [edi]
  4186c4:	sub    DWORD PTR [ebp+0x4d],ebx
  4186c7:	add    DWORD PTR [esp+edx*4],esi
  4186ca:	xchg   esp,eax
  4186cb:	push   eax
  4186cc:	xchg   edi,eax
  4186cd:	and    eax,0x45865c37
  4186d2:	xor    eax,0x28b85188
  4186d7:	mov    eax,0x1ca22e43
  4186dc:	out    dx,al
  4186dd:	jle    0x418702
  4186df:	(bad)
  4186e2:	es mov ebx,0x447d75fb
  4186e8:	fwait
  4186e9:	icebp  
  4186ea:	test   BYTE PTR [ecx],ah
  4186ec:	xchg   bp,ax
  4186ee:	test   al,0x4f
  4186f0:	aad    0xac
  4186f2:	inc    esi
  4186f3:	and    bh,BYTE PTR [ecx-0x3a]
  4186f6:	imul   ecx,DWORD PTR [ebx+0x77],0x25
  4186fa:	push   ds
  4186fb:	jecxz  0x41869a
  4186fd:	xchg   edi,eax
  4186fe:	mov    ds:0x9a534a07,eax
  418703:	aaa    
  418704:	cmp    esi,esi
  418706:	out    dx,eax
  418707:	loopne 0x41876a
  418709:	push   esi
  41870a:	enter  0xa29c,0x2a
  41870e:	xchg   edx,eax
  41870f:	mov    ds:0xdbeeba39,eax
  418714:	jmp    0xe2a8:0xa03f4b4d
  41871b:	sub    BYTE PTR [ebx],dl
  41871d:	jmp    0x462977cd
  418722:	push   ds
  418723:	mov    esp,0xec30ac93
  418728:	xor    DWORD PTR [ebx-0x3da287a8],ecx
  41872e:	mov    ds:0xe644fdf,al
  418733:	je     0x418740
  418735:	stc    
  418736:	cmp    eax,DWORD PTR [ecx]
  418738:	in     eax,dx
  418739:	xor    al,0xac
  41873b:	pop    ss
  41873c:	cmp    di,WORD PTR [eax-0x35]
  418740:	das    
  418741:	stos   DWORD PTR es:[edi],eax
  418742:	rol    DWORD PTR [esi+0x7e],0x5c
  418746:	jl     0x418762
  418748:	add    ecx,eax
  41874a:	(bad)  
  41874b:	and    BYTE PTR [eax-0x58a6b713],al
  418751:	dec    esp
  418752:	cmp    esp,DWORD PTR [edi+0x43]
  418755:	sub    eax,0x2c1e5094
  41875a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41875b:	adc    edi,esi
  41875d:	out    0xe0,al
  41875f:	adc    edi,ecx
  418761:	mov    bl,0x7c
  418763:	call   0x5ecd956
  418768:	add    edx,0x59d5427c
  41876e:	mov    esp,0xe08eca3a
  418773:	jle    0x4187f1
  418775:	jb     0x4187e3
  418777:	(bad)  
  418778:	(bad)  
  418779:	cmp    DWORD PTR [edx+eax*8],esi
  41877c:	push   ss
  41877d:	loopne 0x418702
  41877f:	and    bh,BYTE PTR [edi-0x49]
  418782:	mov    cl,0xdf
  418784:	sbb    eax,0x557a8d72
  418789:	mov    al,0x87
  41878b:	aas    
  41878c:	xor    cl,BYTE PTR [edi-0x49]
  41878f:	sar    DWORD PTR [eax+edi*8-0x6a],0xa5
  418794:	ss stos DWORD PTR es:[edi],eax
  418796:	add    eax,ebp
  418798:	enter  0x6d8e,0x68
  41879c:	aaa    
  41879d:	cs jp  0x418780
  4187a0:	adc    ecx,DWORD PTR [edi+0x5ff2170c]
  4187a6:	dec    ecx
  4187a7:	add    al,0xb3
  4187a9:	push   ecx
  4187aa:	adc    DWORD PTR [edi+0x6d],ebx
  4187ad:	and    esp,ebx
  4187af:	pop    ebp
  4187b0:	test   dh,dh
  4187b2:	(bad)  
  4187b4:	jnp    0x4187ac
  4187b6:	call   0x9946:0x3a7902cc
  4187bd:	jno    0x4187ca
  4187bf:	jmp    0x4187da
  4187c1:	adc    esp,ebx
  4187c3:	fdivr  st,st(3)
  4187c5:	(bad)  
  4187c6:	mov    esp,0x95865ecd
  4187cb:	dec    edi
  4187cc:	add    al,BYTE PTR [esi+eiz*8-0x56c6c150]
  4187d3:	jae    0x418786
  4187d5:	stc    
  4187d6:	pop    es
  4187d7:	inc    edi
  4187d8:	jne    0x41877c
  4187da:	cld    
  4187db:	setg   bl
  4187de:	dec    esi
  4187df:	pop    esi
  4187e0:	xchg   edi,ebx
  4187e2:	sahf   
  4187e3:	aad    0xc6
  4187e5:	push   esp
  4187e6:	dec    edx
  4187e7:	inc    ebx
  4187e8:	lock leave 
  4187ea:	bound  ebx,QWORD PTR [ebp+0x1f2b559e]
  4187f0:	adc    ch,0xb6
  4187f3:	cmp    eax,0x7560848d
  4187f8:	div    BYTE PTR [edx+0x7678b3e]
  4187fe:	inc    esp
  4187ff:	mov    edx,0xbcce166b
  418804:	lods   eax,DWORD PTR ds:[esi]
  418805:	pop    ebp
  418806:	aaa    
  418807:	mov    bh,0xf1
  418809:	mov    eax,0x18ff56bd
  41880e:	pop    es
  41880f:	pop    edx
  418810:	jmp    0xf989:0x40d958d2
  418817:	dec    ecx
  418818:	js     0x418899
  41881a:	adc    BYTE PTR [ebx],dh
  41881c:	dec    ecx
  41881d:	add    DWORD PTR [ebp-0x6927683d],eax
  418823:	fnstcw WORD PTR [edx-0x6554f449]
  418829:	jecxz  0x418899
  41882b:	adc    eax,edx
  41882d:	mov    ds:0xe067f007,eax
  418832:	xchg   DWORD PTR [ebp+0x7cde7787],esp
  418838:	inc    edx
  418839:	jecxz  0x418817
  41883b:	jo     0x418870
  41883d:	popf   
  41883e:	jo     0x4187cd
  418840:	sub    eax,0xa4afae97
  418845:	mov    ds:0xeb199525,al
  41884a:	sub    al,0xd7
  41884c:	bound  esi,QWORD PTR [ebp-0x291baf80]
  418852:	sub    ah,al
  418854:	cmp    BYTE PTR [edx],0x1b
  418857:	jg     0x4188cd
  418859:	push   esp
  41885a:	sbb    edx,eax
  41885c:	shr    DWORD PTR [ebp+0x45],1
  41885f:	test   eax,0xcc283f1a
  418864:	pop    es
  418865:	push   esp
  418866:	(bad)  
  418867:	or     BYTE PTR [ebp+0x5d],bl
  41886a:	xor    DWORD PTR [ecx-0x22],ecx
  41886d:	jmp    0x5f54:0xfd82e861
  418874:	jae    0x41884e
  418876:	push   esp
  418877:	fs push esi
  418879:	mov    eax,ds:0xff79914
  41887e:	es cmc 
  418880:	ins    BYTE PTR es:[edi],dx
  418881:	pop    ss
  418882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418883:	lds    edx,FWORD PTR ds:0x7919a18a
  418889:	mov    al,0x10
  41888b:	jmp    0x418838
  41888d:	xor    BYTE PTR [esi],ch
  41888f:	call   0x379d:0x5d50b490
  418896:	adc    BYTE PTR [eax+0x1c],bh
  418899:	into   
  41889a:	popa   
  41889b:	lods   al,BYTE PTR ds:[esi]
  41889d:	ret    
  41889e:	inc    edi
  41889f:	dec    edx
  4188a0:	(bad)  
  4188a1:	ins    DWORD PTR es:[edi],dx
  4188a2:	xor    BYTE PTR [esi+0x55750516],ah
  4188a8:	enter  0x3aff,0x20
  4188ac:	cld    
  4188ad:	mov    fs,WORD PTR [esi]
  4188af:	adc    al,0x4
  4188b1:	pop    eax
  4188b2:	loope  0x4188c3
  4188b4:	pop    ds
  4188b5:	mov    ?,WORD PTR [edi]
  4188b7:	leave  
  4188b8:	inc    ecx
  4188b9:	cmp    DWORD PTR [edx],esp
  4188bb:	int3   
  4188bc:	mov    ebx,DWORD PTR [eax-0x69]
  4188bf:	hlt    
  4188c0:	mov    eax,ds:0xfcd2c976
  4188c5:	in     al,dx
  4188c6:	arpl   sp,cx
  4188c8:	daa    
  4188c9:	lds    esp,FWORD PTR [ebx+0x17]
  4188cc:	test   al,0xdb
  4188ce:	inc    edx
  4188cf:	xlat   BYTE PTR ds:[ebx]
  4188d0:	mov    dh,0xa2
  4188d2:	push   ecx
  4188d3:	xor    dh,BYTE PTR [bp+0x1820]
  4188d8:	mov    ebp,0x9437baf9
  4188dd:	jg     0x41886c
  4188df:	out    dx,eax
  4188e0:	jmp    0x9183:0x3a176b30
  4188e7:	mov    eax,ds:0xa016fe31
  4188ec:	xchg   edi,eax
  4188ed:	push   ecx
  4188ee:	sub    DWORD PTR [esi-0xa73d079],eax
  4188f4:	jge    0x4188c0
  4188f6:	aam    0x36
  4188f8:	js     0x418950
  4188fa:	and    BYTE PTR [eax-0x226ff4da],dh
  418900:	adc    DWORD PTR [edi+eiz*1-0x50],ebx
  418904:	xor    ah,BYTE PTR [eax+0x69]
  418907:	out    0x6a,eax
  418909:	pand   mm7,QWORD PTR [ebp+0x1]
  41890d:	popf   
  41890e:	xor    DWORD PTR [edx],esp
  418910:	cli    
  418911:	leave  
  418912:	mov    ds:0x38d71e6b,eax
  418917:	enter  0x250d,0x2e
  41891b:	popa   
  41891c:	mov    BYTE PTR [eax],bh
  41891e:	inc    esp
  41891f:	into   
  418920:	mov    eax,ds:0xa04214cd
  418925:	imul   ecx,ebx,0x61
  418928:	jl     0x418956
  41892a:	stos   BYTE PTR es:[edi],al
  41892b:	mov    dh,0xba
  41892d:	inc    ebp
  41892e:	adc    BYTE PTR [ebx+ebp*8-0x17e54891],dh
  418935:	xor    dh,BYTE PTR [edx-0x68]
  418938:	int    0x4d
  41893a:	ret    
  41893b:	fsubr  QWORD PTR [eax+esi*2]
  41893e:	shl    dl,cl
  418940:	xchg   esp,eax
  418941:	out    0xf6,al
  418943:	popa   
  418944:	sti    
  418945:	leave  
  418946:	test   DWORD PTR [ebp-0x2d],0xb04e1eda
  41894d:	jbe    0x4188df
  41894f:	and    BYTE PTR [ecx+0xb],ah
  418952:	(bad)  
  418953:	mov    dl,0x81
  418955:	mov    eax,ds:0xa067d34d
  41895a:	ret    
  41895b:	and    DWORD PTR [edx+eax*8],eax
  41895e:	mov    DWORD PTR [edi+0x6c],esi
  418961:	test   DWORD PTR [eax],edx
  418963:	mov    eax,ds:0xef142c2b
  418968:	add    BYTE PTR [esi+esi*2+0x32],al
  41896c:	cmp    bh,ch
  41896e:	mov    eax,0x55e7b376
  418973:	cs dec esi
  418975:	and    al,0x7e
  418977:	jns    0x4189c8
  418979:	rcl    DWORD PTR ds:0x950ba495,0xa
  418980:	fcmovne st,st(4)
  418982:	in     eax,0x90
  418984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418985:	cwde   
  418986:	out    dx,eax
  418987:	ss add al,0x2c
  41898a:	add    ecx,ecx
  41898c:	push   esi
  41898d:	stos   DWORD PTR es:[edi],eax
  41898e:	push   es
  41898f:	sbb    BYTE PTR [edx],bh
  418991:	fld    DWORD PTR cs:[eax]
  418994:	xor    BYTE PTR [edx-0x1dc8a550],ch
  41899a:	jmp    0x418996
  41899c:	lahf   
  41899d:	mov    ebx,0x6180cc52
  4189a2:	lock call 0xd52f:0xd451c4f1
  4189aa:	jns    0x418968
  4189ac:	dec    ecx
  4189ad:	outs   dx,BYTE PTR ds:[esi]
  4189ae:	push   ss
  4189af:	fldenv [edi+ebx*1-0x2f]
  4189b3:	xor    eax,eax
  4189b5:	jl     0x418987
  4189b7:	scas   al,BYTE PTR es:[edi]
  4189b8:	dec    eax
  4189b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189ba:	ficomp DWORD PTR [edx-0x39]
  4189bd:	mov    eax,0x95393b2a
  4189c2:	mov    ss,WORD PTR [edi+0x72]
  4189c5:	jnp    0x4189fb
  4189c7:	or     ebp,ebp
  4189c9:	dec    ecx
  4189ca:	pop    edx
  4189cb:	test   eax,0x6887e3c4
  4189d0:	inc    edi
  4189d1:	imul   BYTE PTR [eax+0x35]
  4189d4:	or     bh,BYTE PTR [eax-0x79]
  4189d7:	add    eax,0x8bab6000
  4189dc:	sbb    BYTE PTR [ecx-0x772eae16],cl
  4189e2:	sbb    dl,BYTE PTR [ebx-0x6f0c3d01]
  4189e8:	fild   DWORD PTR ds:0x1fa6ce76
  4189ee:	mov    ecx,0x95edabd4
  4189f3:	mov    al,dh
  4189f5:	sbb    esi,DWORD PTR [edx]
  4189f7:	addr16 jno 0x418987
  4189fa:	xchg   ecx,eax
  4189fb:	mov    ah,0x86
  4189fd:	cld    
  4189fe:	aas    
  4189ff:	fstp   QWORD PTR [ebx]
  418a01:	(bad)  
  418a02:	mov    dh,0xda
  418a04:	lods   al,BYTE PTR ds:[esi]
  418a05:	inc    esi
  418a06:	div    BYTE PTR [ebx+esi*2]
  418a09:	push   edx
  418a0a:	loopne 0x4189ba
  418a0c:	or     BYTE PTR [eax+0x797bc8fc],dl
  418a12:	xor    bl,BYTE PTR cs:[eax-0x771cf87f]
  418a19:	push   edi
  418a1a:	mov    ch,0x83
  418a1c:	cmp    eax,0xe5a5fefb
  418a21:	push   es
  418a22:	pop    ebx
  418a23:	and    al,0x82
  418a25:	outs   dx,DWORD PTR ds:[esi]
  418a26:	inc    ecx
  418a27:	sbb    al,0xaf
  418a29:	aaa    
  418a2a:	ss jbe 0x418a75
  418a2d:	pop    edi
  418a2e:	adc    dh,BYTE PTR [ecx+0x2aa838f7]
  418a34:	jl     0x418a64
  418a36:	mov    ds:0x61f3ee33,al
  418a3b:	push   esi
  418a3c:	scas   eax,DWORD PTR es:[edi]
  418a3d:	pop    edx
  418a3e:	stos   DWORD PTR es:[edi],eax
  418a3f:	pop    ebx
  418a40:	push   ebp
  418a41:	push   cs
  418a42:	adc    esp,DWORD PTR [ecx+ebp*2+0x22b9fb3]
  418a49:	push   ecx
  418a4a:	jae    0x418a70
  418a4c:	or     eax,0xf042e357
  418a51:	add    ch,BYTE PTR [edi+0xf]
  418a54:	arpl   WORD PTR [edi+0x17],ax
  418a57:	dec    esi
  418a58:	or     eax,0x486d4a18
  418a5d:	pop    edi
  418a5e:	pop    esp
  418a5f:	ror    BYTE PTR [ecx],1
  418a61:	dec    esi
  418a62:	mov    edi,edx
  418a64:	mov    ah,0x88
  418a66:	clc    
  418a67:	popa   
  418a68:	cli    
  418a69:	and    bh,BYTE PTR [edx+ecx*1+0x44]
  418a6d:	xchg   edx,eax
  418a6e:	jge    0x418ae0
  418a70:	fdiv   DWORD PTR [edx-0x3d]
  418a73:	push   ebx
  418a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a75:	dec    esp
  418a76:	cmp    BYTE PTR [ebx-0x50a799e6],0xa1
  418a7d:	mov    ecx,0x735419f9
  418a82:	jno    0x418a3b
  418a84:	push   esp
  418a85:	mov    bh,0xdf
  418a87:	pop    esp
  418a88:	jmp    0xd568e03f
  418a8d:	push   edi
  418a8e:	pop    ss
  418a8f:	into   
  418a90:	pop    edx
  418a91:	mov    BYTE PTR [edx],bl
  418a93:	pop    ds
  418a94:	lock enter 0x4eaf,0xe4
  418a99:	mov    ah,0x2f
  418a9b:	mov    ah,0x2e
  418a9d:	stc    
  418a9e:	jno    0x418a5b
  418aa0:	jmp    0x724942c
  418aa5:	mov    edx,DWORD PTR [esi-0x3a899f56]
  418aab:	mov    ebx,0x2eec0c9b
  418ab0:	or     eax,0x94399be4
  418ab5:	adc    edx,ebx
  418ab7:	add    ch,0xae
  418aba:	push   edx
  418abb:	jg     0x418a81
  418abd:	jb     0x418a6c
  418abf:	push   eax
  418ac0:	shr    BYTE PTR ds:0x2db5b877,0x77
  418ac7:	jecxz  0x418af8
  418ac9:	jp     0x418a5d
  418acb:	repnz push es
  418acd:	mov    ecx,0x230399e8
  418ad2:	ror    DWORD PTR ds:[esi-0x4602b65a],1
  418ad9:	jle    0x418b53
  418adb:	mov    ch,0x84
  418add:	mov    DWORD PTR [ebx],ebp
  418adf:	sbb    ah,BYTE PTR [edx-0x2f340335]
  418ae5:	or     al,BYTE PTR [eax+0x14e36cc8]
  418aeb:	push   ebx
  418aec:	push   ss
  418aed:	out    0xda,eax
  418aef:	(bad)  
  418af0:	mov    ds:0x8cd73308,eax
  418af5:	cli    
  418af6:	or     BYTE PTR [edx+0x38d43520],0x8a
  418afd:	fucompp 
  418aff:	adc    bp,0x727e
  418b04:	es dec edi
  418b06:	dec    edi
  418b07:	pop    eax
  418b08:	push   0x11cabbf0
  418b0d:	ret    0xc7e3
  418b10:	add    al,0x8a
  418b12:	pop    ebp
  418b13:	stos   BYTE PTR es:[edi],al
  418b14:	fxch   st(0)
  418b16:	out    0x69,al
  418b18:	popf   
  418b19:	sbb    eax,0x50f533d6
  418b1e:	repz mov edi,0xda2a66f1
  418b24:	pop    ds
  418b25:	lea    edx,ds:0xa23503bb
  418b2b:	cdq    
  418b2c:	inc    ebp
  418b2d:	push   0xffffff95
  418b2f:	clc    
  418b30:	add    esp,esp
  418b32:	aaa    
  418b33:	mov    esi,0xb0196303
  418b38:	push   0x6e880ccd
  418b3d:	sub    bl,BYTE PTR [esi+0x3b]
  418b40:	jns    0x418b9d
  418b42:	sar    DWORD PTR [ebx+eax*4-0x7e],cl
  418b46:	xchg   edx,eax
  418b47:	dec    eax
  418b48:	push   0xa77cdc3f
  418b4d:	mov    ebx,0x809c5e6
  418b52:	mov    ds:0xbdc9cb1c,eax
  418b57:	sbb    BYTE PTR [edi+0x493b030e],dh
  418b5d:	ret    0x4a3
  418b60:	and    al,0x22
  418b62:	mov    ebp,0x1eec7a7a
  418b67:	mov    cl,0x5
  418b69:	inc    ebp
  418b6a:	mov    al,0xd4
  418b6c:	repnz int 0x72
  418b6f:	add    esi,DWORD PTR [ecx+ebp*1]
  418b72:	push   ebp
  418b73:	xchg   edi,eax
  418b74:	inc    edi
  418b75:	dec    edi
  418b76:	mov    esi,0x3d3ed6d3
  418b7b:	mov    edx,DWORD PTR [ecx+0x687da7a7]
  418b81:	pop    edi
  418b82:	push   edx
  418b83:	jno    0x418b4a
  418b85:	sub    BYTE PTR [ebp+ecx*1+0x75],dh
  418b89:	cmc    
  418b8a:	stos   BYTE PTR es:[edi],al
  418b8b:	and    bl,bl
  418b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b8e:	push   0x232e289a
  418b93:	enter  0x3434,0x6c
  418b97:	inc    ecx
  418b98:	xor    cl,BYTE PTR fs:[eax-0xba76429]
  418b9f:	xor    DWORD PTR [ebx+0x2e],0xa58ed918
  418ba6:	out    dx,eax
  418ba7:	sar    BYTE PTR [eax],cl
  418ba9:	add    edx,DWORD PTR [ebx+0x3b9de443]
  418baf:	test   BYTE PTR [ebp+esi*2-0x286f7d46],al
  418bb6:	xchg   edx,eax
  418bb7:	xchg   ebp,eax
  418bb8:	adc    DWORD PTR ds:0x61a6,esp
  418bbd:	inc    ecx
  418bbe:	add    BYTE PTR [eax],bh
  418bc0:	in     eax,dx
  418bc1:	or     al,0xc1
  418bc3:	jge    0x418bcc
  418bc5:	rcr    ebx,1
  418bc7:	repnz popf 
  418bc9:	sbb    al,BYTE PTR [esi+0x17b1d161]
  418bcf:	and    eax,0xe79e6e97
  418bd4:	xchg   ecx,eax
  418bd5:	xor    ebx,edx
  418bd7:	inc    ebx
  418bd8:	sub    al,0x14
  418bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bdb:	mov    dh,0xc6
  418bdd:	stos   BYTE PTR es:[edi],al
  418bde:	sub    DWORD PTR [edi],ebx
  418be0:	aas    
  418be1:	ins    BYTE PTR es:[edi],dx
  418be2:	jl     0x418bc9
  418be4:	mov    DWORD PTR [ebp+0xf2728fe],ebp
  418bea:	mov    ebx,0x9fa21e09
  418bef:	imul   esp,DWORD PTR [esi-0x13d401a4],0xce7e1034
  418bf9:	mov    eax,0x6dae285c
  418bfe:	add    DWORD PTR [ecx],esi
  418c00:	arpl   WORD PTR [ecx+0x613c92f9],dx
  418c06:	arpl   WORD PTR [eax],di
  418c08:	adc    dh,0xee
  418c0b:	and    dh,BYTE PTR [eax+0x23]
  418c0e:	retf   
  418c0f:	sub    al,0xc6
  418c11:	xchg   ebp,eax
  418c12:	xchg   esi,eax
  418c13:	jb     0x418c30
  418c15:	pop    esi
  418c16:	clc    
  418c17:	in     al,0x7d
  418c19:	(bad)  
  418c1a:	dec    ecx
  418c1b:	xor    eax,0xe3ae17c8
  418c20:	sub    DWORD PTR [ecx],ebp
  418c22:	shl    BYTE PTR [esi+ecx*1-0x20],cl
  418c26:	xchg   esp,eax
  418c27:	pmulhuw mm0,QWORD PTR [ebx]
  418c2a:	dec    edx
  418c2b:	or     bl,BYTE PTR [ebx]
  418c2d:	cld    
  418c2e:	pop    ebx
  418c2f:	adc    DWORD PTR [esi-0x5b],esi
  418c32:	xchg   edx,eax
  418c33:	and    bh,bl
  418c35:	mov    al,0x4c
  418c37:	inc    edi
  418c38:	jb     0x418c39
  418c3a:	mov    dl,0x69
  418c3c:	mov    edx,0x2e6d1c28
  418c41:	test   al,0xc0
  418c43:	int3   
  418c44:	dec    esp
  418c45:	mov    bh,0xf
  418c47:	imul   esp,DWORD PTR [ebp+0x41],0x4d252181
  418c4e:	add    ebx,ecx
  418c50:	adc    ebp,DWORD PTR [ecx]
  418c52:	loope  0x418bf1
  418c54:	retf   
  418c55:	shr    DWORD PTR [esi],0xb5
  418c58:	pop    esi
  418c59:	in     eax,0xf0
  418c5b:	ins    DWORD PTR es:[edi],dx
  418c5c:	cmp    al,0x8a
  418c5e:	dec    ebx
  418c5f:	push   eax
  418c60:	xchg   ebp,eax
  418c61:	xchg   esp,eax
  418c62:	or     bl,BYTE PTR [eax+0x3ab1b22b]
  418c68:	aaa    
  418c69:	sub    edx,edx
  418c6b:	shl    BYTE PTR [edi+ebp*8],1
  418c6e:	popa   
  418c6f:	aas    
  418c70:	jecxz  0x418c90
  418c72:	mov    bh,BYTE PTR [esi-0x77]
  418c75:	sbb    eax,0x7ad4bb7b
  418c7a:	push   esp
  418c7b:	lods   eax,DWORD PTR ds:[esi]
  418c7c:	cli    
  418c7d:	test   DWORD PTR [ebx+edi*2-0x36e41db4],ecx
  418c84:	xor    DWORD PTR [eax+0x7844766a],esi
  418c8a:	mov    ah,0x4b
  418c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8d:	sbb    ebp,0xffffffc4
  418c90:	push   es
  418c91:	and    eax,0xf0085a30
  418c96:	mov    bl,0x36
  418c98:	call   0x44d1:0x81dfc47c
  418c9f:	arpl   WORD PTR [ecx-0x778c4d67],bp
  418ca5:	sbb    esi,ecx
  418ca7:	and    BYTE PTR ds:0xb363be4,dh
  418cad:	push   ss
  418cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418caf:	mov    dh,0xdc
  418cb1:	adc    DWORD PTR [ebp+0x1e],edx
  418cb4:	mov    dh,0x40
  418cb6:	das    
  418cb7:	inc    eax
  418cb8:	sbb    edi,esi
  418cba:	adc    esi,DWORD PTR [eax-0x1a]
  418cbd:	push   edx
  418cbe:	mov    ss,WORD PTR [esi+edi*8+0x53]
  418cc2:	mov    bl,0xca
  418cc4:	sub    bh,BYTE PTR [esi]
  418cc6:	xchg   ecx,ebx
  418cc8:	loop   0x418c75
  418cca:	retf   
  418ccb:	or     al,0x30
  418ccd:	mov    ah,0xb6
  418ccf:	outs   dx,DWORD PTR ds:[esi]
  418cd0:	or     al,0x28
  418cd2:	push   ds
  418cd3:	sbb    DWORD PTR [ecx],ebp
  418cd5:	pop    es
  418cd6:	jb     0x418cef
  418cd8:	xor    BYTE PTR [edx-0x53],0xf1
  418cdc:	nop
  418cdd:	jp     0x418cac
  418cdf:	push   edi
  418ce0:	adc    al,0xca
  418ce2:	sub    BYTE PTR [eax-0x5c03294c],0x75
  418ce9:	cwde   
  418cea:	pop    edx
  418ceb:	adc    BYTE PTR [eax],bh
  418ced:	out    0x66,eax
  418cef:	outs   dx,DWORD PTR ds:[esi]
  418cf0:	or     BYTE PTR [ebx],dl
  418cf2:	cvtpi2ps xmm0,QWORD PTR [esp+eax*4-0x66185700]
  418cfa:	mov    bh,0xff
  418cfc:	ror    ebp,1
  418cfe:	inc    esp
  418d00:	sti    
  418d01:	rcl    DWORD PTR [eax-0x4f],0x9d
  418d05:	(bad)  
  418d06:	cdq    
  418d07:	std    
  418d08:	xlat   BYTE PTR ds:[ebx]
  418d09:	xlat   BYTE PTR ds:[ebx]
  418d0a:	inc    eax
  418d0b:	adc    eax,0xb53cd0cf
  418d10:	es pop eax
  418d12:	add    eax,0x24a14f2
  418d17:	inc    edx
  418d18:	jbe    0x418cc7
  418d1a:	push   edi
  418d1b:	mov    DWORD PTR [ecx+ebp*2],esi
  418d1e:	fs push ebx
  418d20:	push   0x8d81090c
  418d25:	adc    al,0xce
  418d27:	inc    edx
  418d28:	call   0x1d3a:0x508c2c65
  418d2f:	(bad)
  418d32:	shr    BYTE PTR [edx+0x67],cl
  418d35:	pop    ebp
  418d36:	cwde   
  418d37:	jae    0x418d87
  418d39:	push   ds
  418d3a:	rol    DWORD PTR [edx],1
  418d3c:	push   esi
  418d3d:	shr    edi,0x5e
  418d40:	xchg   al,cl
  418d42:	hlt    
  418d43:	repnz pop esi
  418d45:	call   0x30bd:0x1974f00f
  418d4c:	jl     0x418d97
  418d4e:	mov    cl,0x4c
  418d50:	xor    ch,BYTE PTR [edi-0x58edea92]
  418d56:	add    WORD PTR [edi-0x16],ax
  418d5a:	xor    DWORD PTR [ebx+0x5e],esp
  418d5d:	add    al,dh
  418d5f:	sbb    bh,BYTE PTR [esi-0x144db2a7]
  418d65:	fld    DWORD PTR [eax]
  418d67:	lea    esi,[esi]
  418d69:	push   cs
  418d6a:	repnz clc 
  418d6c:	push   edx
  418d6d:	sbb    cl,BYTE PTR [esi]
  418d6f:	dec    ecx
  418d70:	mov    BYTE PTR [edi-0x50cf748a],bh
  418d76:	dec    ecx
  418d77:	jl     0x418d4f
  418d79:	mov    DWORD PTR [edi+0x5d83cef5],esp
  418d7f:	jle    0x418d18
  418d81:	enter  0x7ba3,0xa3
  418d85:	push   ebp
  418d86:	in     eax,0xee
  418d88:	xor    DWORD PTR [esi-0x6585efde],0xbd41e990
  418d92:	mov    DWORD PTR [esi+0xca623fe],edx
  418d98:	(bad)  
  418d99:	(bad)  [edx]
  418d9b:	inc    eax
  418d9c:	(bad)  
  418d9d:	nop
  418d9e:	int    0xae
  418da0:	push   esp
  418da1:	sbb    al,0xb9
  418da3:	(bad)  
  418da4:	push   ebx
  418da5:	icebp  
  418da6:	je     0x418de3
  418da8:	fcom   DWORD PTR [ebp+0xb6383d1]
  418dae:	(bad)  
  418daf:	cli    
  418db0:	cwde   
  418db1:	mov    WORD PTR [ebx],es
  418db3:	jp     0x418e28
  418db5:	js     0x418deb
  418db7:	mov    ecx,0x8e221fa5
  418dbc:	stos   DWORD PTR es:[edi],eax
  418dbd:	inc    bh
  418dbf:	jmp    0xc8f8:0x47405312
  418dc6:	bound  esi,QWORD PTR [ebx+0x48]
  418dc9:	shl    esi,1
  418dcb:	lock bound eax,QWORD PTR [eax+edx*1-0x6f]
  418dd0:	into   
  418dd1:	fnstcw WORD PTR [esi]
  418dd3:	mov    ch,0x74
  418dd5:	mov    al,ds:0x2606bb06
  418dda:	ins    DWORD PTR es:[edi],dx
  418ddb:	sbb    DWORD PTR [edi-0x73],esi
  418dde:	inc    eax
  418ddf:	mov    bh,0xec
  418de1:	test   BYTE PTR [esi],al
  418de3:	icebp  
  418de4:	retf   0xeb19
  418de7:	jne    0x418e32
  418de9:	mov    BYTE PTR [ebx+0xa],dh
  418dec:	popf   
  418ded:	test   al,0x87
  418def:	sbb    BYTE PTR [eax+0x71087121],cl
  418df5:	or     DWORD PTR [esp+esi*1+0x7d],ecx
  418df9:	adc    edx,DWORD PTR [ebx]
  418dfb:	mov    ds:0xb04174ca,eax
  418e00:	pop    edx
  418e01:	jbe    0x418e5a
  418e03:	sub    DWORD PTR [edi],0x7c606785
  418e09:	in     eax,0xe
  418e0b:	cmp    ebx,ecx
  418e0d:	add    eax,0x61da6f63
  418e12:	addr16 mov ch,0x1c
  418e15:	daa    
  418e16:	imul   ebx,DWORD PTR [edx-0x5],0xa
  418e1a:	fild   WORD PTR [esi]
  418e1c:	fwait
  418e1d:	shl    DWORD PTR [ebp-0x2f],1
  418e20:	sub    bl,cl
  418e22:	loop   0x418e8a
  418e24:	out    0x4e,eax
  418e26:	arpl   WORD PTR [esi-0x1b7af6f1],cx
  418e2c:	dec    ebx
  418e2d:	xlat   BYTE PTR ds:[ebx]
  418e2e:	add    ebp,ebx
  418e30:	pop    eax
  418e31:	stc    
  418e32:	js     0x418e5b
  418e34:	call   0x55c031f8
  418e39:	pop    edi
  418e3a:	pop    esi
  418e3b:	pop    edi
  418e3c:	dec    ecx
  418e3d:	ffree  st(7)
  418e3f:	sbb    dh,BYTE PTR [eax]
  418e41:	pop    esi
  418e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e43:	stos   BYTE PTR es:[edi],al
  418e44:	xor    cl,BYTE PTR [edi-0x3c101183]
  418e4a:	sub    cl,bl
  418e4c:	repnz mov ds:0x3d8a9a27,eax
  418e52:	and    al,BYTE PTR [edi]
  418e54:	push   ecx
  418e55:	mov    DWORD PTR [ebx+ebx*4+0x62],ebp
  418e59:	stos   BYTE PTR es:[edi],al
  418e5a:	pop    edx
  418e5b:	mov    BYTE PTR [esp+eax*8-0x2f],dl
  418e5f:	mov    eax,DWORD PTR [ebx-0x169f0124]
  418e65:	outs   dx,DWORD PTR ds:[esi]
  418e66:	pop    edi
  418e67:	bound  esi,QWORD PTR [ebx+0x76]
  418e6a:	shl    BYTE PTR [ebp-0x47],0xb
  418e6e:	inc    edi
  418e6f:	adc    eax,0x9ca4050c
  418e74:	js     0x418e08
  418e76:	jmp    0x418e0b
  418e78:	push   ebx
  418e79:	(bad)  
  418e7b:	or     ebx,0xffffffa4
  418e7e:	jg     0x418e63
  418e80:	ins    BYTE PTR es:[edi],dx
  418e81:	sbb    al,0x6
  418e83:	xchg   esi,eax
  418e84:	div    BYTE PTR [edx]
  418e86:	add    DWORD PTR [ebx+ebp*4-0x562c4a4e],esp
  418e8d:	popa   
  418e8e:	push   es
  418e8f:	sub    DWORD PTR [eax],edi
  418e91:	bound  eax,QWORD PTR [esi+eiz*2]
  418e94:	pop    ss
  418e95:	ror    BYTE PTR [esi],0x98
  418e98:	xchg   edi,eax
  418e99:	push   edi
  418e9a:	(bad)  
  418e9c:	cmp    al,0x61
  418e9e:	or     eax,0x96b94220
  418ea3:	mov    ch,0x62
  418ea5:	arpl   WORD PTR [ecx+0x35],ax
  418ea8:	fcmovb st,st(2)
  418eaa:	addr16 sahf 
  418eac:	imul   DWORD PTR [ebx+0x16f39a0]
  418eb2:	sub    al,0xb1
  418eb4:	ds mov edx,0xf8b9ab3e
  418eba:	rcr    DWORD PTR ss:[edi-0xa],0xb3
  418ebf:	inc    esi
  418ec0:	push   es
  418ec1:	xor    edi,DWORD PTR [ecx]
  418ec3:	rol    DWORD PTR [ebp+ebx*8+0x14],0xb2
  418ec8:	cmc    
  418ec9:	ret    
  418eca:	outs   dx,BYTE PTR ds:[esi]
  418ecb:	add    bh,bh
  418ecd:	pop    ebx
  418ece:	pop    eax
  418ecf:	lods   al,BYTE PTR ds:[esi]
  418ed0:	retf   
  418ed1:	xchg   ecx,eax
  418ed2:	push   ebp
  418ed3:	(bad)  
  418ed4:	pop    eax
  418ed5:	scas   eax,DWORD PTR es:[edi]
  418ed6:	mov    dl,0xd7
  418ed8:	hlt    
  418ed9:	jmp    0x2f073e4d
  418ede:	mov    ebp,0x2008f91e
  418ee3:	mov    dl,0xe6
  418ee5:	fldcw  WORD PTR [esi+0x4cddbeda]
  418eeb:	jmp    0x418f2c
  418eed:	test   al,0xc4
  418eef:	dec    ebx
  418ef0:	mov    cl,0x19
  418ef2:	in     al,0xce
  418ef4:	pop    ds
  418ef5:	and    bl,BYTE PTR [ecx+0x42]
  418ef8:	add    al,0xf1
  418efa:	shl    DWORD PTR [edx],1
  418efc:	pop    edx
  418efd:	xlat   BYTE PTR ds:[ebx]
  418efe:	dec    esi
  418eff:	dec    ecx
  418f00:	sbb    edx,ebx
  418f02:	test   al,0x55
  418f04:	adc    BYTE PTR [eax],0xe1
  418f07:	or     esi,DWORD PTR [ebp-0x7c]
  418f0a:	pop    edi
  418f0b:	into   
  418f0c:	cmp    al,0xdf
  418f0e:	push   ss
  418f0f:	jns    0x418e98
  418f11:	jle    0x418f84
  418f13:	sub    DWORD PTR [eax-0x48],eax
  418f16:	pusha  
  418f17:	jne    0x418f4e
  418f19:	repz dec ecx
  418f1b:	ret    
  418f1c:	out    dx,eax
  418f1d:	test   DWORD PTR [ebx+0x4296d8e5],ebx
  418f23:	adc    edx,ecx
  418f25:	mov    dh,BYTE PTR [edx]
  418f27:	pop    ds
  418f28:	jmp    0x418ee3
  418f2a:	mov    eax,0x89f66ce0
  418f2f:	out    0x6f,al
  418f31:	xchg   ebx,eax
  418f32:	jnp    0x418f87
  418f34:	mov    esi,0xc381b6cd
  418f39:	add    DWORD PTR [ecx+0x21],eax
  418f3c:	popf   
  418f3d:	dec    eax
  418f3e:	cmp    al,0x22
  418f40:	sub    eax,0xd64275b2
  418f45:	jb     0x418f41
  418f47:	repz ffree st(1)
  418f4a:	and    ch,0x58
  418f4d:	push   esp
  418f4e:	enter  0xadd7,0x95
  418f52:	jns    0x418ee0
  418f54:	mov    eax,0x254298bb
  418f59:	inc    edx
  418f5a:	jae    0x418edc
  418f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f5d:	aaa    
  418f5e:	xor    al,0x13
  418f60:	mov    ds:0x1c36b84c,al
  418f65:	cmp    ecx,DWORD PTR [esi]
  418f67:	gs adc eax,eax
  418f6a:	push   esi
  418f6b:	push   ebp
  418f6c:	and    edx,DWORD PTR [ebp+0x1b]
  418f6f:	mov    edi,0xa7355b06
  418f74:	seta   BYTE PTR [edx]
  418f77:	cwde   
  418f78:	loopne 0x418fec
  418f7a:	loopne 0x418f16
  418f7c:	inc    eax
  418f7d:	stos   BYTE PTR es:[edi],al
  418f7e:	lods   al,BYTE PTR ds:[esi]
  418f7f:	sub    ah,BYTE PTR [ebp-0x15dc55a7]
  418f85:	jns    0x418fdd
  418f87:	cdq    
  418f88:	je     0x418ff0
  418f8a:	pop    esp
  418f8b:	fcmove st,st(6)
  418f8d:	mov    ds:0xc88dfe10,al
  418f92:	mov    ebp,0xe48fea37
  418f97:	int    0xd5
  418f99:	inc    ebx
  418f9a:	jns    0x418f8c
  418f9c:	lds    eax,FWORD PTR [ebx]
  418f9e:	xor    eax,DWORD PTR [edi+0x26c93032]
  418fa4:	mov    eax,0xdfa7ea31
  418fa9:	xor    DWORD PTR [esi-0x30],0xfffffff0
  418fad:	into   
  418fae:	in     al,0x4e
  418fb0:	inc    ebx
  418fb1:	ror    DWORD PTR [edx-0x6e0cde3d],1
  418fb7:	inc    esp
  418fb8:	adc    ch,0x83
  418fbb:	fsub   QWORD PTR [esi-0x16]
  418fbe:	or     ch,ah
  418fc0:	ret    
  418fc1:	sbb    al,0x8a
  418fc3:	and    esp,0xffffffb6
  418fc6:	mov    dl,0xd1
  418fc8:	xchg   ebp,eax
  418fc9:	loop   0x418fe7
  418fcb:	in     eax,dx
  418fcc:	mov    bl,0x4
  418fce:	jmp    0xd8f7fe2a
  418fd3:	out    0xf2,al
  418fd5:	sub    eax,0xf7fb18ba
  418fda:	das    
  418fdb:	pusha  
  418fdc:	ret    
  418fdd:	mov    al,0x42
  418fdf:	pop    ss
  418fe0:	stos   DWORD PTR es:[edi],eax
  418fe1:	jl     0x418f8b
  418fe3:	shl    BYTE PTR [esi+0x36f60db6],cl
  418fe9:	mov    BYTE PTR [ebp+0x8],0x62
  418fed:	(bad)  
  418fee:	fisubr WORD PTR [ecx+0x3d]
  418ff1:	and    BYTE PTR [ecx-0x59],dl
  418ff4:	stc    
  418ff5:	test   al,0xb8
  418ff7:	and    eax,0x315408d6
  418ffc:	ins    DWORD PTR es:[edi],dx
  418ffd:	lahf   
  418ffe:	mov    esp,0x4853aa4f
  419003:	add    al,dh
  419005:	push   fs
  419007:	pusha  
  419008:	push   ebx
  419009:	cli    
  41900a:	pop    esi
  41900b:	ss das 
  41900d:	(bad)  
  41900e:	cmp    ebp,ebx
  419010:	test   eax,0x70d36ab0
  419015:	pushf  
  419016:	test   BYTE PTR [ebx+ebx*1],bl
  419019:	mov    dl,0xda
  41901b:	and    dh,BYTE PTR [edx+0x17f6b78f]
  419021:	push   esp
  419022:	ins    DWORD PTR es:[edi],dx
  419023:	xchg   ecx,eax
  419024:	repnz sbb eax,0x56408a8a
  41902a:	outs   dx,BYTE PTR ds:[esi]
  41902b:	push   ss
  41902c:	dec    edx
  41902d:	cmp    DWORD PTR [ebp+0x575df044],ecx
  419033:	inc    esp
  419034:	xchg   edi,eax
  419035:	jg     0x4190b3
  419037:	test   BYTE PTR [ebx-0x539af30e],0x8f
  41903e:	adc    DWORD PTR [eax+0x51],0xffffff9d
  419042:	aam    0x7b
  419044:	mov    BYTE PTR [ecx+eiz*1-0x5d],bh
  419048:	fistp  QWORD PTR ds:[eax+0x74]
  41904c:	fisttp WORD PTR [edi+0x477a1653]
  419052:	and    eax,0x63f6059c
  419057:	xchg   DWORD PTR [edx],eax
  419059:	ss push eax
  41905b:	outs   dx,DWORD PTR ds:[esi]
  41905c:	inc    edx
  41905d:	xor    eax,0x5e241602
  419062:	push   DWORD PTR [eax]
  419064:	cli    
  419065:	push   ebx
  419066:	dec    ebp
  419067:	mov    dl,0x3b
  419069:	mov    bh,0x2f
  41906b:	mov    al,0x7a
  41906d:	dec    edi
  41906e:	cmp    BYTE PTR [edx+edi*8+0x5d],al
  419072:	ficom  DWORD PTR [ebp+0x25]
  419075:	ja     0x41902e
  419077:	xchg   ebx,eax
  419078:	xchg   edi,eax
  419079:	jp     0x419063
  41907b:	xchg   edi,eax
  41907c:	out    dx,al
  41907d:	(bad)  
  41907e:	ds leave 
  419080:	fcom   st(2)
  419082:	rol    DWORD PTR [edi],0x9f
  419085:	pop    eax
  419086:	and    al,0x76
  419088:	adc    esi,DWORD PTR [edi+0xfc1e8b2]
  41908e:	out    0xd0,al
  419090:	and    eax,0x5d402f90
  419095:	(bad)  
  419096:	out    dx,eax
  419097:	les    eax,FWORD PTR [esi-0x3a]
  41909a:	es xor cl,cl
  41909d:	shl    BYTE PTR ds:0x7b63729b,cl
  4190a3:	dec    ebp
  4190a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a5:	dec    edi
  4190a6:	pop    edx
  4190a7:	add    DWORD PTR ds:0x7964869a,edx
  4190ad:	into   
  4190ae:	imul   esp,DWORD PTR [ebx+0x27],0xffffffac
  4190b2:	xlat   BYTE PTR ds:[ebx]
  4190b3:	sbb    eax,0x879c42c0
  4190b8:	fisubr DWORD PTR ds:0x1f210e38
  4190be:	retf   
  4190bf:	mov    WORD PTR [esi+edx*2],ds
  4190c2:	into   
  4190c3:	je     0x41908d
  4190c5:	push   eax
  4190c6:	xchg   ecx,eax
  4190c7:	repnz int3 
  4190c9:	lock ret 0x5920
  4190cd:	cdq    
  4190ce:	jp     0x4190da
  4190d0:	not    BYTE PTR [ebx]
  4190d2:	xlat   BYTE PTR ds:[ebx]
  4190d3:	(bad)  
  4190d5:	sub    eax,0x99788b67
  4190da:	add    al,0x1d
  4190dc:	inc    edx
  4190dd:	jp     0x4190e5
  4190df:	ja     0x419083
  4190e1:	imul   ecx,eax,0xffffffe1
  4190e4:	pop    edx
  4190e5:	inc    ebp
  4190e6:	test   eax,0xc90a36f4
  4190eb:	sub    al,0xb1
  4190ed:	xchg   edi,eax
  4190ee:	in     al,0xb6
  4190f0:	das    
  4190f1:	adc    eax,0x17956a15
  4190f6:	sbb    esp,DWORD PTR [edi]
  4190f8:	inc    ebx
  4190f9:	sub    ecx,DWORD PTR [edi]
  4190fb:	icebp  
  4190fc:	adc    ch,al
  4190fe:	dec    ebp
  4190ff:	cdq    
  419100:	lods   eax,DWORD PTR ds:[esi]
  419101:	jo     0x419119
  419103:	repnz inc ebx
  419105:	fwait
  419106:	xlat   BYTE PTR fs:[ebx]
  419108:	or     DWORD PTR [ecx],0xffffffd3
  41910b:	repz out dx,al
  41910d:	xlat   BYTE PTR ds:[ebx]
  41910e:	xor    DWORD PTR [eax],ebx
  419110:	pop    si
  419112:	mov    DWORD PTR [ecx+ebx*4-0x51],ecx
  419116:	js     0x419187
  419118:	stos   BYTE PTR es:[edi],al
  419119:	lea    esi,[edi-0x57]
  41911c:	push   ss
  41911d:	jl     0x41915d
  41911f:	fs sub eax,0xac5cde32
  419125:	std    
  419126:	add    BYTE PTR [esp+esi*2-0x6fe5c8e3],cl
  41912d:	push   cs
  41912e:	shr    BYTE PTR [esi],0x9c
  419131:	icebp  
  419132:	jle    0x41911b
  419134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419136:	lea    esi,[edx-0x4701c6a7]
  41913c:	sub    eax,0x46629686
  419141:	push   esi
  419142:	mov    edi,0x4fb865cc
  419147:	mov    DWORD PTR [ebp+eiz*1-0x67],ecx
  41914b:	adc    dh,BYTE PTR [ebx]
  41914d:	jp     0x4191a7
  41914f:	xchg   edx,eax
  419150:	adc    edi,0x7a38faf0
  419156:	cmp    eax,0x8b2520bc
  41915b:	(bad)  
  41915c:	gs scas eax,DWORD PTR es:[edi]
  41915e:	jl     0x4191cb
  419160:	cdq    
  419161:	fnstenv [edi+ebp*4]
  419164:	lea    esp,[ebp+0x1b]
  419167:	scas   al,BYTE PTR es:[edi]
  419168:	out    0xe,al
  41916a:	xchg   esi,eax
  41916b:	xor    BYTE PTR [esi-0x4f],0x2b
  41916f:	mov    ebx,fs
  419171:	cs dec esp
  419173:	sti    
  419174:	push   edi
  419175:	jnp    0x4191a3
  419177:	mov    ch,0x3d
  419179:	inc    esi
  41917a:	sti    
  41917b:	adc    bh,BYTE PTR [ecx]
  41917d:	jmp    0x9c8970ba
  419182:	imul   DWORD PTR [edx+0x6a4a2e3a]
  419188:	test   eax,0xe65eb20b
  41918d:	mov    ds:0xf9d2ff12,al
  419192:	jns    0x41911b
  419194:	jae    0x419157
  419196:	add    edx,DWORD PTR [eax+0x7efdd9c5]
  41919c:	sub    DWORD PTR ds:0x9650f7cb,ebx
  4191a2:	repnz sub BYTE PTR [esi-0x16],al
  4191a6:	ret    0xcc72
  4191a9:	inc    edx
  4191aa:	mov    eax,0xad8974e2
  4191af:	rcr    eax,0x49
  4191b2:	(bad)  
  4191b3:	cmp    edx,DWORD PTR [eax]
  4191b5:	push   ebp
  4191b6:	mov    al,0x93
  4191b8:	das    
  4191b9:	aaa    
  4191ba:	iret   
  4191bb:	dec    eax
  4191bc:	adc    edx,DWORD PTR ds:0xf2b9a1d
  4191c2:	loope  0x4191c6
  4191c4:	adc    esp,eax
  4191c6:	or     DWORD PTR [eax+0x4d],esp
  4191c9:	retf   
  4191ca:	std    
  4191cb:	inc    esi
  4191cc:	repnz gs mov dh,0x2c
  4191d0:	lock sbb dh,0x70
  4191d4:	test   DWORD PTR [ebp-0x2],0xa56cc7c6
  4191db:	mov    cl,0x1d
  4191de:	inc    ecx
  4191df:	pop    edi
  4191e0:	sub    DWORD PTR [edx+0x7324fb],esp
  4191e6:	sub    eax,DWORD PTR [ecx]
  4191e8:	stos   DWORD PTR es:[edi],eax
  4191e9:	lock mov esi,0xbac0182f
  4191ef:	pop    edx
  4191f0:	fsubr  DWORD PTR [edi-0x6]
  4191f3:	jp     0x41917f
  4191f5:	mov    dh,0x4
  4191f7:	sub    eax,0xedd8fe51
  4191fc:	int3   
  4191fd:	aas    
  4191fe:	(bad)  
  4191ff:	bound  ecx,QWORD PTR [edx+ebp*4+0x27b75622]
  419206:	adc    eax,edi
  419208:	inc    ebx
  419209:	jmp    0x4191f2
  41920b:	mov    eax,ds:0x93299eab
  419210:	xor    al,0x22
  419212:	bnd jo 0x419215
  419215:	pop    ds
  419216:	lods   eax,DWORD PTR ds:[esi]
  419217:	fidiv  WORD PTR [esi+0x56]
  41921a:	mov    bl,0x8f
  41921c:	js     0x419298
  41921e:	push   ebp
  41921f:	cmc    
  419220:	mov    DWORD PTR [ecx-0x42],ecx
  419223:	inc    eax
  419224:	fisub  DWORD PTR [edx-0x4309c91d]
  41922a:	xlat   BYTE PTR ds:[ebx]
  41922b:	ror    BYTE PTR fs:[edi+0x521b7b5d],cl
  419232:	popf   
  419233:	lea    ebx,[edx+0x52]
  419236:	jb     0x4191c0
  419238:	mov    esp,0xbff47457
  41923d:	push   DWORD PTR cs:[ecx-0x29]
  419241:	and    al,BYTE PTR [edi]
  419243:	jb     0x4192ab
  419245:	pop    ss
  419246:	xlat   BYTE PTR ds:[ebx]
  419247:	std    
  419248:	pushf  
  419249:	mov    ?,WORD PTR ds:0x49c74044
  41924f:	loop   0x419264
  419251:	ins    BYTE PTR es:[edi],dx
  419252:	sbb    DWORD PTR [edi-0x15112d7b],ebp
  419258:	nop
  419259:	push   ebx
  41925a:	(bad)  [ecx-0x3635efd9]
  419260:	test   BYTE PTR [eax+ebp*4-0x3cc088bc],0x7c
  419268:	sub    esi,DWORD PTR [ebp+0x9e1828]
  41926e:	mov    bh,BYTE PTR [edi+0x5c]
  419271:	and    dh,BYTE PTR [eax]
  419273:	add    DWORD PTR [eax+eax*1+0x4fc46655],edi
  41927a:	into   
  41927b:	(bad)  [edi]
  41927d:	xchg   esp,eax
  41927e:	mov    bh,0xb5
  419280:	add    bl,ah
  419282:	inc    edx
  419283:	mov    esi,0xa9dec9b4
  419288:	mov    ah,0xef
  41928a:	mov    DWORD PTR [edx],ebp
  41928c:	mov    cl,0x32
  41928e:	inc    ebx
  41928f:	jecxz  0x41926c
  419291:	adc    BYTE PTR [eax],0xdc
  419294:	xor    ecx,DWORD PTR [edi+0x3e]
  419297:	push   ds
  419298:	ror    bl,cl
  41929a:	and    DWORD PTR [ebx-0x59facb59],ebx
  4192a0:	push   0x15
  4192a2:	cld    
  4192a3:	unpckhps xmm0,XMMWORD PTR [eax+0x45aa9db0]
  4192aa:	inc    ecx
  4192ab:	mov    edx,0xec30a2b7
  4192b0:	cmp    al,0x60
  4192b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192b3:	adc    cl,bh
  4192b5:	scas   al,BYTE PTR es:[edi]
  4192b6:	shr    BYTE PTR [edx-0x6],1
  4192b9:	cld    
  4192ba:	popa   
  4192bb:	mov    bh,0x4a
  4192bd:	out    0xf1,al
  4192bf:	je     0x41933c
  4192c1:	sti    
  4192c2:	or     eax,DWORD PTR [ecx+0x299548af]
  4192c8:	shl    cl,1
  4192ca:	dec    ecx
  4192cb:	(bad)  
  4192cc:	adc    DWORD PTR [ebp-0x5b0731e6],edi
  4192d2:	fdiv   DWORD PTR [ebx]
  4192d4:	or     al,dh
  4192d6:	addr16 inc esi
  4192d8:	cmp    eax,0xbe3d06ef
  4192dd:	daa    
  4192de:	xor    eax,0xc558927d
  4192e3:	fcom   DWORD PTR [esi+0x4a]
  4192e6:	inc    edx
  4192e7:	out    0xb3,eax
  4192e9:	sub    DWORD PTR [ecx-0x45],esi
  4192ec:	jno    0x4192a7
  4192ee:	or     eax,0x16ccaeb
  4192f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192f4:	outs   dx,DWORD PTR ds:[esi]
  4192f5:	aam    0x6e
  4192f7:	inc    esi
  4192f8:	clc    
  4192f9:	add    eax,0xb7e32cf3
  4192fe:	add    ah,al
  419300:	in     eax,0xf5
  419302:	jmp    0x4192ab
  419304:	jo     0x4192f9
  419306:	pop    es
  419307:	(bad)
  41930a:	icebp  
  41930b:	add    al,0x24
  41930d:	push   esp
  41930e:	(bad)  
  41930f:	fisubr DWORD PTR [ecx-0x4b5c744a]
  419315:	xor    eax,0xded4d02
  41931a:	sub    BYTE PTR [ebp+eax*2-0x3f43e38b],bl
  419321:	daa    
  419322:	sbb    eax,0x8f997576
  419327:	mov    ds:0x2683bbae,eax
  41932c:	iret   
  41932d:	cmp    eax,0x9f51a2b9
  419332:	fwait
  419333:	add    al,0xfe
  419336:	inc    edx
  419337:	sub    eax,0x29d1a0d2
  41933c:	call   0x70d6efc3
  419341:	adc    BYTE PTR [eax-0x494f665a],0xf5
  419348:	push   esi
  419349:	xchg   esp,eax
  41934a:	data16 sbb al,0xc5
  41934d:	and    ebx,DWORD PTR [ebx]
  41934f:	fldcw  WORD PTR [esi]
  419351:	arpl   bp,dx
  419353:	test   BYTE PTR [ebx-0x7b33cdc4],ah
  419359:	sub    eax,0xd64cdc99
  41935e:	je     0x419302
  419360:	gs push ss
  419362:	int3   
  419363:	xchg   esi,eax
  419364:	fsub   QWORD PTR [ebp+0x60]
  419367:	outs   dx,BYTE PTR ds:[esi]
  419368:	aas    
  419369:	dec    ebp
  41936a:	xor    eax,0xe6b7ed27
  41936f:	jno    0x41935b
  419371:	inc    edi
  419372:	js     0x419390
  419374:	mov    eax,ds:0xb6c9735
  419379:	loopne 0x4193c7
  41937b:	mov    ds:0xa3def5e4,eax
  419380:	and    esp,DWORD PTR es:[eax-0x25ff609f]
  419387:	es pop ecx
  419389:	(bad)  
  41938a:	fisttp WORD PTR [eax+0x65b08940]
  419390:	dec    edi
  419391:	(bad)  
  419392:	fwait
  419393:	add    dh,bh
  419395:	mov    DWORD PTR [ebp+0x6d],eax
  419398:	xor    bh,BYTE PTR [ecx]
  41939a:	push   cs
  41939b:	test   al,0x13
  41939d:	pop    es
  41939e:	imul   edi,ebp,0xcddf1d5f
  4193a4:	lock push ds
  4193a6:	ins    BYTE PTR es:[edi],dx
  4193a7:	mov    esp,0x5cc07959
  4193ac:	jb     0x419366
  4193ae:	fimul  WORD PTR [ecx-0x55fb2357]
  4193b4:	and    esi,DWORD PTR [esi-0x7]
  4193b7:	ja     0x41934b
  4193b9:	loop   0x419406
  4193bb:	and    ah,dl
  4193bd:	popa   
  4193be:	inc    eax
  4193bf:	in     al,dx
  4193c0:	pop    edx
  4193c1:	pop    ss
  4193c2:	dec    ecx
  4193c3:	or     bl,BYTE PTR ds:0xb326afa3
  4193c9:	mov    ebp,DWORD PTR [edx-0x2d1e3754]
  4193cf:	(bad)  
  4193d0:	push   esi
  4193d1:	mov    edi,0x80f8d0c1
  4193d6:	in     al,dx
  4193d7:	adc    BYTE PTR [edx+0x20],cl
  4193da:	test   DWORD PTR [ebp-0x46],0x9f8f493e
  4193e1:	and    eax,0x83e4898c
  4193e6:	stos   BYTE PTR es:[edi],al
  4193e7:	xchg   DWORD PTR [eax],ebp
  4193e9:	mov    dh,0xc2
  4193eb:	xchg   esp,eax
  4193ec:	bound  eax,QWORD PTR [ecx]
  4193ee:	loope  0x4193f0
  4193f0:	lods   al,BYTE PTR ds:[esi]
  4193f1:	and    eax,0x94d7927c
  4193f6:	dec    edx
  4193f7:	fidiv  DWORD PTR [ebx-0x3888c8d4]
  4193fd:	addr16 pop ecx
  4193ff:	mov    DWORD PTR [ecx],esp
  419401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419402:	test   dh,0x19
  419405:	cwde   
  419406:	(bad)  
  419407:	hlt    
  419408:	aas    
  419409:	retf   0x1429
  41940c:	push   ebx
  41940d:	test   ch,bh
  41940f:	fdiv   DWORD PTR [esi]
  419411:	or     eax,0x7a9f608e
  419416:	mov    dh,0x20
  419418:	or     ch,BYTE PTR [edx]
  41941a:	dec    BYTE PTR [esi+ebx*4-0x31]
  41941e:	mov    ecx,0x66ce0b6c
  419423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419424:	sbb    eax,0x59dd8b3d
  419429:	adc    DWORD PTR [edi+0x24d6233f],ecx
  41942f:	mov    ecx,0x7954e9f
  419434:	inc    edx
  419435:	out    0x26,eax
  419437:	loopne 0x41940f
  419439:	sub    al,ah
  41943b:	cmp    al,0x9e
  41943d:	setae  ah
  419440:	inc    esp
  419441:	shl    DWORD PTR [eax-0x3c],1
  419444:	add    al,cl
  419446:	ror    DWORD PTR [ebp+0x65],cl
  419449:	test   eax,0x2e798e4b
  41944e:	popf   
  41944f:	pop    ecx
  419450:	cld    
  419451:	sub    eax,0x1cb6605c
  419456:	adc    DWORD PTR [esi+0x10],ebx
  419459:	mov    WORD PTR [eax+0x27],?
  41945c:	mov    ch,0x58
  41945e:	adc    al,0xc8
  419460:	test   al,0xf0
  419462:	ins    BYTE PTR es:[edi],dx
  419463:	inc    eax
  419464:	mov    esi,0x3f51e1ba
  419469:	adc    dh,al
  41946b:	fcom   st(5)
  41946d:	arpl   si,bp
  41946f:	sbb    bh,dl
  419471:	seto   ah
  419474:	sbb    dh,dl
  419476:	dec    esi
  419477:	mov    edx,0x668542dd
  41947c:	ret    
  41947d:	test   al,0x4f
  41947f:	adc    DWORD PTR [eax+0x2fe67a15],edx
  419485:	mov    dh,0x7f
  419487:	cmc    
  419488:	retf   
  419489:	inc    ecx
  41948a:	cmp    eax,0xba3fb1f8
  41948f:	or     BYTE PTR [edx+ecx*4],bh
  419492:	cdq    
  419493:	cwde   
  419494:	ror    DWORD PTR [edx+ebx*1+0x75],0xba
  419499:	inc    eax
  41949a:	inc    ebx
  41949b:	js     0x4194a2
  41949d:	inc    eax
  41949e:	data16 jbe 0x4194ef
  4194a1:	int    0xa8
  4194a3:	cmp    BYTE PTR [esi+0x4a],dl
  4194a6:	inc    edx
  4194a7:	sbb    esi,DWORD PTR [esi]
  4194a9:	test   al,dl
  4194ab:	add    al,0x58
  4194ad:	mov    dh,0x67
  4194af:	(bad)  
  4194b1:	mov    bh,bl
  4194b3:	test   BYTE PTR [ebp+0x4deca40d],dh
  4194b9:	popf   
  4194ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194bb:	in     al,dx
  4194bc:	push   ss
  4194bd:	xchg   ecx,eax
  4194be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194bf:	jge    0x419468
  4194c1:	div    cl
  4194c3:	jmp    0x685c1bcc
  4194c8:	addr16 inc ecx
  4194ca:	and    al,0x7
  4194cc:	sub    edi,ebp
  4194ce:	repz sub dh,dh
  4194d1:	and    dl,BYTE PTR [eax+0x1f]
  4194d4:	add    al,0x5c
  4194d6:	adc    DWORD PTR [esi],eax
  4194d8:	sbb    DWORD PTR [ebp-0x359c2eac],esi
  4194de:	xor    BYTE PTR [ecx-0x40],cl
  4194e1:	ss push ebp
  4194e3:	aam    0xd6
  4194e5:	(bad)  
  4194e6:	mov    ch,0xa7
  4194e8:	add    DWORD PTR [ebp+eax*4+0x2db6079b],ebp
  4194ef:	push   edx
  4194f0:	sub    al,0x9a
  4194f2:	lock mov dl,0xd2
  4194f5:	sub    ch,BYTE PTR [esi+ecx*1+0xeb03729]
  4194fc:	adc    DWORD PTR [edi],ebp
  4194fe:	xor    esp,DWORD PTR [ebp+0x20d01aaa]
  419504:	les    ecx,FWORD PTR [edx-0x5a476967]
  41950a:	lock inc ebp
  41950c:	out    0x52,al
  41950e:	pop    ss
  41950f:	ss (bad) 
  419511:	iret   
  419512:	popfw  
  419514:	or     ebp,DWORD PTR [esi]
  419516:	or     BYTE PTR [ecx+0x76],0x5e
  41951a:	sub    esp,eax
  41951c:	call   0x9fc0:0xb6da0b5e
  419523:	push   0xb9d284df
  419528:	mov    ds:0x210c4417,eax
  41952d:	std    
  41952e:	stos   DWORD PTR es:[edi],eax
  41952f:	retf   0x1678
  419532:	test   al,0xc5
  419534:	out    0xf0,al
  419536:	and    DWORD PTR [eax],eax
  419538:	int    0x3a
  41953a:	rcl    BYTE PTR [ebx-0x4],0x2c
  41953e:	mov    ah,0xa6
  419540:	dec    edi
  419541:	add    edx,esi
  419543:	add    al,0xd9
  419545:	cmp    eax,0xe766faf2
  41954a:	dec    edx
  41954b:	scas   al,BYTE PTR es:[edi]
  41954c:	adc    al,0xa8
  41954e:	dec    ebp
  41954f:	mov    edx,0x84dcee
  419554:	jg     0x41955e
  419556:	fstp   DWORD PTR [eax]
  419558:	jno    0x4194fd
  41955a:	add    ebp,DWORD PTR [esi]
  41955c:	shl    BYTE PTR [edi-0x4f],0x79
  419560:	out    0x40,al
  419562:	and    eax,0xcb6b592a
  419567:	jl     0x419553
  419569:	xchg   ah,bh
  41956b:	dec    ebx
  41956c:	add    eax,DWORD PTR [edi]
  41956e:	int3   
  41956f:	add    ch,0xf5
  419572:	leave  
  419573:	rcr    al,0x92
  419576:	int3   
  419577:	cmp    eax,0x5dbf8a1b
  41957c:	mov    ecx,0x8aa18996
  419581:	inc    ecx
  419582:	push   ebx
  419583:	in     eax,0xa7
  419585:	cmp    al,0x52
  419587:	loop   0x419533
  419589:	mov    WORD PTR ds:0x313f7978,?
  41958f:	push   ebx
  419590:	pop    eax
  419591:	lods   eax,DWORD PTR ds:[esi]
  419592:	mov    esi,0xa678cfef
  419597:	cwde   
  419598:	and    dh,BYTE PTR [eax-0x6c7cd717]
  41959e:	mov    ebx,0x9034da50
  4195a3:	lea    edi,[edi]
  4195a5:	sub    eax,0x2c0df5f
  4195aa:	es in  eax,dx
  4195ac:	test   al,0x5c
  4195ae:	(bad)  
  4195b0:	jg     0x4195e4
  4195b2:	repnz rcl BYTE PTR [ebx],cl
  4195b5:	(bad)  
  4195b7:	fldenv [eax+0x5306413b]
  4195bd:	inc    ebp
  4195be:	mov    ebx,0x43934afb
  4195c3:	loopne 0x4195f2
  4195c5:	popf   
  4195c6:	test   DWORD PTR [esi],edi
  4195c8:	mov    ecx,0x5999dc4a
  4195cd:	mov    WORD PTR [esi+0x6dd8efb6],gs
  4195d3:	inc    ebx
  4195d4:	and    edx,DWORD PTR [edx-0x226f8e48]
  4195da:	lds    eax,FWORD PTR [edi+0x3]
  4195dd:	xchg   ebp,eax
  4195de:	push   esp
  4195df:	(bad)  
  4195e0:	fcomp  DWORD PTR [ecx+ebx*8+0x27]
  4195e4:	adc    eax,0x9382db55
  4195e9:	clc    
  4195ea:	adc    ebp,eax
  4195ec:	icebp  
  4195ed:	sbb    al,0x83
  4195ef:	lea    ebp,[ebp-0x7f]
  4195f2:	cs icebp 
  4195f4:	xchg   esp,eax
  4195f5:	jp     0x4195e6
  4195f7:	pop    esp
  4195f8:	inc    ecx
  4195f9:	xchg   ecx,eax
  4195fa:	and    DWORD PTR [eax+esi*4-0xa],edi
  4195fe:	outs   dx,BYTE PTR ds:[esi]
  4195ff:	xchg   ebx,eax
  419600:	and    al,0x2c
  419602:	imul   eax,DWORD PTR [ecx],0xffffff9d
  419605:	(bad)  
  419607:	mov    eax,ds:0x4ef4be69
  41960c:	sub    DWORD PTR [edi-0x56],edi
  41960f:	je     0x419628
  419611:	inc    edi
  419612:	mov    ?,WORD PTR [ecx-0x1fbd0b80]
  419618:	mov    edi,DWORD PTR [ecx]
  41961a:	imul   eax,eax,0xc704b0b3
  419620:	mov    esp,0x1c987dc8
  419625:	push   ebp
  419626:	imul   esi,DWORD PTR [ecx],0x618dd0d9
  41962c:	ds sub eax,0x49
  419630:	pop    ds
  419631:	xchg   esp,eax
  419632:	bound  esp,QWORD PTR [edx]
  419634:	je     0x4196b0
  419636:	mov    edi,0x20a691f1
  41963b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41963c:	mov    al,0xa2
  41963e:	hlt    
  41963f:	sbb    ch,BYTE PTR [eax+ebx*2-0x8]
  419643:	dec    esp
  419644:	mov    ah,0x29
  419646:	inc    eax
  419647:	mov    dh,0x1d
  419649:	push   ds
  41964a:	and    BYTE PTR [ebx-0x2a0b51d6],0x3e
  419651:	inc    edx
  419652:	and    BYTE PTR [eax+0x55],ch
  419655:	jns    0x41967e
  419657:	pushf  
  419658:	cmp    DWORD PTR [edi-0x3518a5b1],edi
  41965e:	mov    esp,0xe27258a
  419663:	fcomp  DWORD PTR [edi-0x5e]
  419666:	mov    ch,0x2d
  419668:	repnz mov eax,ds:0x35d6bdfe
  41966e:	mov    bl,0x6a
  419670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419671:	jge    0x41963c
  419673:	sub    ecx,eax
  419675:	mov    al,0x3b
  419677:	adc    eax,0x2badb9d2
  41967c:	test   BYTE PTR [eax+0x33d02fad],dh
  419682:	mov    ds,eax
  419684:	mov    edx,0xfe097d16
  419689:	xchg   ebx,eax
  41968a:	xchg   edx,eax
  41968b:	fdivr  QWORD PTR [ebx+0x3741c6d]
  419691:	cmc    
  419692:	xchg   esi,eax
  419693:	in     eax,dx
  419694:	sub    eax,0x66623593
  419699:	mov    bh,0x89
  41969b:	or     BYTE PTR [edx+0x17857983],dh
  4196a1:	xor    al,0x43
  4196a3:	fnsave [ebp+0x6f]
  4196a6:	sub    eax,0xdb51fd24
  4196ab:	arpl   WORD PTR [edx-0x77],ax
  4196ae:	and    al,0x97
  4196b0:	dec    ecx
  4196b1:	int3   
  4196b2:	and    cl,BYTE PTR [eax-0x62]
  4196b5:	cmp    BYTE PTR [ebx-0x32],al
  4196b8:	push   edx
  4196b9:	adc    DWORD PTR [ebx],esp
  4196bb:	je     0x4196ba
  4196bd:	sbb    DWORD PTR [edx],edi
  4196bf:	loop   0x4196c3
  4196c1:	pop    ds
  4196c2:	dec    edi
  4196c3:	push   edx
  4196c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196c5:	aaa    
  4196c6:	xor    bl,BYTE PTR ds:0x11a6cf9b
  4196cc:	lea    eax,[eax-0x9]
  4196cf:	xchg   ebp,eax
  4196d0:	pushf  
  4196d1:	push   0xc2ccd836
  4196d6:	sub    al,0x21
  4196d8:	mov    dl,0x6d
  4196da:	mov    ds:0x77156cf1,al
  4196df:	cmp    ah,BYTE PTR [ebp-0x5cc2f61]
  4196e5:	mov    eax,ds:0x3287e925
  4196ea:	inc    eax
  4196eb:	or     ecx,ebp
  4196ed:	jae    0x4196ce
  4196ef:	inc    eax
  4196f0:	out    0xcc,al
  4196f2:	test   BYTE PTR [edi+0x70bcd0cf],dl
  4196f8:	xor    eax,0xe3360936
  4196fd:	jp     0x419763
  4196ff:	push   ds
  419700:	das    
  419701:	mov    dl,BYTE PTR [edx+0x4d1d1a72]
  419707:	aaa    
  419708:	mov    edx,0x657150f3
  41970d:	(bad)  [ebp-0x54b5c73]
  419713:	jmp    0xd04a55c9
  419718:	xchg   ebp,eax
  419719:	fcmovb st,st(3)
  41971b:	inc    ecx
  41971c:	scas   al,BYTE PTR es:[edi]
  41971d:	xchg   edi,eax
  41971e:	iret   
  41971f:	pop    di
  419721:	jge    0x419737
  419723:	in     al,0x46
  419725:	jo     0x41971f
  419727:	sar    DWORD PTR [esi+0x4b087f25],cl
  41972d:	fdiv   DWORD PTR [esi+edx*2]
  419730:	fadd   QWORD PTR [edx-0x1c]
  419733:	mov    eax,ds:0xc57640cc
  419738:	adc    BYTE PTR [eax+0x5d],al
  41973b:	test   eax,0xc7121172
  419740:	loop   0x419748
  419742:	lock retf 
  419744:	and    al,0xfa
  419746:	and    BYTE PTR [ebx+0x40b9ce84],al
  41974c:	arpl   WORD PTR [esi],ax
  41974e:	jl     0x419761
  419750:	in     al,0xac
  419752:	enter  0xc49,0xf
  419756:	clc    
  419757:	mov    cl,0x3c
  419759:	cmp    ah,dh
  41975b:	popf   
  41975c:	pop    esp
  41975d:	push   es
  41975e:	jno    0x419725
  419760:	mov    ds:0xa409cd13,eax
  419765:	les    ebp,FWORD PTR [ecx]
  419767:	scas   eax,DWORD PTR es:[edi]
  419768:	inc    ecx
  419769:	out    dx,eax
  41976a:	jge    0x4196fa
  41976c:	mov    ebp,0xfc31b6ab
  419771:	aam    0x63
  419773:	jp     0x4197ba
  419775:	dec    esp
  419776:	int    0x16
  419778:	dec    ebx
  419779:	mov    dl,0xa1
  41977b:	pop    edx
  41977c:	add    eax,0x686d90d6
  419781:	xchg   ecx,eax
  419782:	sahf   
  419783:	xor    al,0x33
  419785:	dec    esp
  419786:	pop    ecx
  419787:	push   ss
  419788:	mov    eax,ds:0x21e16f3e
  41978d:	mov    ah,0x4b
  41978f:	test   BYTE PTR [ebx-0x1ef0fa22],al
  419795:	inc    esp
  419796:	jecxz  0x4197fe
  419798:	xchg   DWORD PTR [ecx-0x569e9547],ebx
  41979e:	push   edx
  41979f:	sbb    DWORD PTR ds:0x9162ae6d,ebx
  4197a5:	mov    ?,WORD PTR [esi+0x36]
  4197a8:	pop    ss
  4197a9:	jnp    0x41974f
  4197ab:	dec    esp
  4197ac:	push   ds
  4197ad:	nop
  4197ae:	inc    ebx
  4197af:	mov    cl,0xe6
  4197b1:	imul   eax,DWORD PTR [ecx-0x30],0x3d3c54c4
  4197b8:	fcomp  DWORD PTR [esi-0x63]
  4197bb:	(bad)  
  4197bc:	stc    
  4197bd:	mov    bl,0xbd
  4197bf:	adc    DWORD PTR [ecx-0x4e3bad27],edx
  4197c5:	sub    al,0x6d
  4197c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197c8:	xor    bl,ch
  4197ca:	cmp    DWORD PTR [ecx*4-0x2efcd8e7],0x1d
  4197d2:	outs   dx,BYTE PTR ds:[esi]
  4197d3:	jp     0x419838
  4197d5:	dec    edi
  4197d6:	jp     0x4197a8
  4197d8:	jmp    0xa13c6ea8
  4197dd:	je     0x41977e
  4197df:	icebp  
  4197e0:	adc    ah,BYTE PTR [ebp-0x43]
  4197e3:	stc    
  4197e4:	test   eax,0xa82dd73f
  4197e9:	dec    esi
  4197ea:	xchg   edx,eax
  4197eb:	loopne 0x4197b9
  4197ed:	jbe    0x4197a1
  4197ef:	xor    BYTE PTR [ebp-0x39],dl
  4197f2:	push   ebp
  4197f3:	cmp    al,0x72
  4197f5:	adc    dl,al
  4197f7:	rcr    DWORD PTR [edx],cl
  4197f9:	push   ss
  4197fa:	adc    ebp,esp
  4197fc:	clc    
  4197fd:	push   ecx
  4197fe:	jmp    0xbde70dd2
  419803:	dec    eax
  419804:	fiadd  DWORD PTR [edi-0x6a]
  419807:	or     eax,eax
  419809:	mov    dl,0x4d
  41980b:	std    
  41980c:	mov    ecx,0xb8ce4734
  419811:	mov    ecx,DWORD PTR [esi-0x2b]
  419814:	arpl   WORD PTR [esi+0x26],ax
  419817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419818:	out    0x94,eax
  41981a:	je     0x419808
  41981c:	out    0x3e,eax
  41981e:	mov    eax,0xdc03aaaf
  419823:	dec    edx
  419824:	out    0x18,al
  419826:	inc    edi
  419827:	mov    dh,0xd0
  419829:	retf   
  41982a:	rol    DWORD PTR fs:[edx+esi*2-0x5b],1
  41982f:	fs jae 0x419874
  419832:	jbe    0x4197e4
  419834:	enter  0x4a5e,0x5f
  419838:	inc    esi
  419839:	imul   ebx,DWORD PTR [ecx+0x39],0xffffff97
  41983d:	mov    DWORD PTR [edi],esp
  41983f:	loopne 0x41984e
  419841:	jecxz  0x41988d
  419843:	adc    DWORD PTR [esi+0x3f],ebp
  419846:	int    0x97
  419848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419849:	lahf   
  41984a:	repz add esp,esi
  41984d:	cmova  ebp,DWORD PTR [ebx-0x7e5450cf]
  419854:	rcl    DWORD PTR [edi-0x71],cl
  419857:	lods   al,BYTE PTR ds:[esi]
  419858:	xor    al,0x9e
  41985a:	push   esi
  41985b:	dec    esi
  41985c:	sub    esi,0x2f
  41985f:	lods   al,BYTE PTR ds:[esi]
  419860:	mov    ds:0x20646b56,al
  419865:	aam    0x8a
  419867:	push   ds
  419868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419869:	outs   dx,DWORD PTR ds:[esi]
  41986a:	lods   eax,DWORD PTR ds:[esi]
  41986b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41986c:	imul   ebp,DWORD PTR [edx],0xffffff91
  41986f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419870:	ret    0x3352
  419873:	loopne 0x419841
  419875:	lods   al,BYTE PTR ds:[esi]
  419876:	adc    ah,BYTE PTR [ebx+0x5c]
  419879:	lods   al,BYTE PTR ds:[esi]
  41987a:	adc    DWORD PTR ds:0x31bff714,0xd9475abd
  419884:	xor    esi,DWORD PTR [ebp-0x4b]
  419887:	lahf   
  419888:	mov    esp,0xac736a53
  41988d:	int    0xa8
  41988f:	xchg   edi,eax
  419890:	bound  edi,QWORD PTR [ebp+0x6339204a]
  419896:	(bad)  
  419897:	xchg   ebx,eax
  419898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419899:	sub    al,0x54
  41989b:	and    eax,0x17de95a0
  4198a0:	mov    cl,0xd8
  4198a2:	fsub   QWORD PTR [edi-0x196a74fe]
  4198a8:	fcom   DWORD PTR [edx-0x74]
  4198ab:	mov    al,0x54
  4198ad:	mov    al,ds:0x9e87cf10
  4198b2:	mov    WORD PTR [eax],fs
  4198b4:	mov    al,ds:0x16919c0c
  4198b9:	jbe    0x41989b
  4198bb:	mov    cl,0xf8
  4198bd:	sti    
  4198be:	ja     0x4198e1
  4198c0:	dec    eax
  4198c1:	push   ebp
  4198c2:	leave  
  4198c3:	pop    edi
  4198c4:	call   DWORD PTR [eax+0x34]
  4198c7:	xor    BYTE PTR [edx+0x4],dh
  4198ca:	inc    esi
  4198cb:	mov    WORD PTR ds:0xee2ab304,cs
  4198d1:	pop    ecx
  4198d2:	mov    ?,esi
  4198d4:	loopne 0x4198f6
  4198d6:	dec    esi
  4198d7:	jns    0x419944
  4198d9:	scas   al,BYTE PTR es:[edi]
  4198da:	sbb    DWORD PTR [eax+0x60],edx
  4198dd:	and    esi,DWORD PTR [ebp-0x4f]
  4198e0:	inc    edx
  4198e1:	stc    
  4198e2:	mov    eax,0x1cf2be7
  4198e7:	and    eax,0x40d7fe75
  4198ec:	jne    0x4198b8
  4198ee:	and    ebx,ecx
  4198f0:	jmp    0x4a04:0x5dc067c
  4198f7:	cli    
  4198f8:	pop    ecx
  4198f9:	push   ss
  4198fa:	scas   al,BYTE PTR es:[edi]
  4198fb:	mov    esi,0xac872eba
  419900:	xchg   edi,eax
  419901:	fcmovnbe st,st(1)
  419903:	popf   
  419904:	dec    edx
  419905:	xor    BYTE PTR [ecx-0x75],bh
  419908:	fsubr  QWORD PTR [eax]
  41990a:	lock mov ebp,0xfdde59d2
  419910:	data16 mov dh,BYTE PTR [eax-0x7c]
  419914:	test   al,0x31
  419916:	fstp   TBYTE PTR ds:0x960db7db
  41991c:	pop    ecx
  41991d:	fstp   st(3)
  41991f:	daa    
  419920:	mov    bl,0x29
  419922:	jge    0x419961
  419924:	and    eax,DWORD PTR [ebp+edi*8+0xd1c6a0d]
  41992b:	pop    ebx
  41992c:	cmp    ebx,DWORD PTR [ecx-0x22]
  41992f:	cdq    
  419930:	push   edx
  419931:	stos   BYTE PTR es:[edi],al
  419932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419933:	xor    ah,BYTE PTR ss:[edi+0x43f19f31]
  41993a:	xor    DWORD PTR [edx],ebp
  41993c:	faddp  st(0),st
  41993e:	daa    
  41993f:	out    0x2d,eax
  419941:	adc    eax,ebp
  419943:	or     al,0xbc
  419945:	add    dh,BYTE PTR [ebp+0x6d49bb3d]
  41994b:	scas   al,BYTE PTR es:[edi]
  41994c:	inc    ebp
  41994d:	jmp    0x4198db
  41994f:	xor    eax,0x4100fdb1
  419954:	jp     0x4199a4
  419956:	adc    ah,BYTE PTR [edx+0x19]
  419959:	mov    ebp,0x6a88dc3c
  41995e:	out    0xe,eax
  419960:	fisub  WORD PTR [ecx-0x6a1ad08e]
  419966:	popf   
  419967:	aam    0x46
  419969:	xor    DWORD PTR [ebp-0x2c],edx
  41996c:	outs   dx,BYTE PTR ds:[esi]
  41996d:	sub    ax,WORD PTR es:[edi+0x28b2f078]
  419975:	xor    DWORD PTR es:[edi-0x1c8dbbf3],0x46
  41997d:	das    
  41997e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41997f:	lds    eax,FWORD PTR [ecx-0x39fdd363]
  419985:	xchg   ebx,eax
  419986:	repz das 
  419988:	pop    edi
  419989:	jecxz  0x419979
  41998b:	sub    BYTE PTR [ebx],dh
  41998d:	jno    0x419942
  41998f:	inc    ecx
  419990:	pop    ebx
  419991:	ror    DWORD PTR [ebx],0x68
  419994:	add    bl,bh
  419996:	push   0xfffffff7
  419998:	and    DWORD PTR [eax],edi
  41999a:	imul   cl
  41999c:	xor    dl,0xc2
  41999f:	sahf   
  4199a0:	or     BYTE PTR [ebx],bh
  4199a2:	sub    al,0xfc
  4199a4:	or     al,0x43
  4199a6:	call   0x22d165e5
  4199ab:	xor    al,0x82
  4199ad:	push   eax
  4199ae:	cmp    edx,esp
  4199b0:	inc    eax
  4199b1:	(bad)  
  4199b3:	mov    bh,0x78
  4199b5:	loop   0x4199a4
  4199b7:	(bad)  
  4199b8:	cld    
  4199b9:	mov    eax,0x6e3a271e
  4199be:	jne    0x41995d
  4199c0:	adc    ebp,edx
  4199c2:	pop    edi
  4199c3:	xchg   esi,eax
  4199c4:	sub    DWORD PTR [ebx-0x20dc891d],0xac417332
  4199ce:	test   DWORD PTR [esi],edx
  4199d0:	out    0x8e,al
  4199d2:	(bad)  
  4199d3:	ror    DWORD PTR [edx+0x39],1
  4199d6:	call   0x9bc3:0x539d5d3c
  4199dd:	fisub  WORD PTR [ebx-0x70]
  4199e0:	jle    0x4199e7
  4199e2:	das    
  4199e3:	push   esi
  4199e4:	mov    ah,0x3
  4199e6:	mov    gs,WORD PTR [eax+0xa4a87c9]
  4199ec:	mov    ebp,0xbe2842be
  4199f1:	ja     0x419987
  4199f3:	aaa    
  4199f4:	mov    ds:0xffb20dff,al
  4199f9:	ror    esp,0xce
  4199fc:	fbstp  TBYTE PTR [esp+ecx*8]
  4199ff:	sub    DWORD PTR [eax],esi
  419a01:	test   DWORD PTR [edi],ecx
  419a03:	mov    edx,0x57e5728c
  419a08:	jns    0x419a24
  419a0a:	sub    eax,0x9c52efc9
  419a0f:	jno    0x4199f8
  419a11:	adc    eax,ebp
  419a13:	mov    ecx,0xdb560913
  419a18:	mov    BYTE PTR [eax-0x6f],ch
  419a1b:	xlat   BYTE PTR ds:[ebx]
  419a1c:	mov    gs,edx
  419a1e:	in     eax,dx
  419a1f:	rcl    BYTE PTR [ecx+0x11c4bf0c],0xcc
  419a26:	pop    edi
  419a27:	retf   
  419a28:	lea    esi,[esi+ecx*1]
  419a2b:	in     eax,0x82
  419a2d:	lea    ebp,[ebp-0x34]
  419a30:	lahf   
  419a31:	or     DWORD PTR [ecx],edx
  419a33:	cmp    esi,DWORD PTR [esi-0x59fc5dcf]
  419a39:	loopne 0x4199ec
  419a3b:	or     bl,BYTE PTR [edi+edi*8]
  419a3e:	adc    ah,ch
  419a40:	add    BYTE PTR [esi-0x7607febc],bh
  419a46:	add    ebp,edx
  419a48:	add    BYTE PTR [esi-0x34513624],0x2f
  419a4f:	adc    bl,BYTE PTR [edx-0x78]
  419a52:	stos   BYTE PTR es:[edi],al
  419a53:	cs push edi
  419a55:	cld    
  419a56:	lds    ecx,FWORD PTR [edi+esi*1-0xb]
  419a5a:	outs   dx,DWORD PTR ds:[esi]
  419a5b:	xor    al,0x35
  419a5d:	jp     0x419abe
  419a5f:	cmp    cl,BYTE PTR [ecx+0x4699d48d]
  419a65:	fwait
  419a66:	cwde   
  419a67:	pushf  
  419a68:	fdivr  st(7),st
  419a6a:	fs push 0x29
  419a6d:	adc    eax,0x6d3d1d8
  419a72:	mov    esp,0x3dd26695
  419a77:	adc    esi,DWORD PTR [ecx]
  419a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a7a:	inc    ecx
  419a7b:	pop    ds
  419a7c:	lds    ebp,FWORD PTR [esi+0x655ab0e8]
  419a82:	add    al,0xb3
  419a84:	and    dh,dl
  419a86:	sub    bh,bl
  419a88:	rcl    BYTE PTR [esi+0x4e7bbbb2],1
  419a8e:	pop    ss
  419a8f:	loope  0x419a35
  419a91:	mov    DWORD PTR [esi+0xd925a2f],esi
  419a97:	outs   dx,DWORD PTR ds:[esi]
  419a98:	xor    ah,BYTE PTR [edi-0x5e038ebb]
  419a9e:	stos   DWORD PTR es:[edi],eax
  419a9f:	ficom  WORD PTR [esi-0x3b]
  419aa2:	cmp    BYTE PTR [edi+0x1f06bc70],cl
  419aa8:	jmp    0x9925ffef
  419aad:	sub    eax,0x322dbb2b
  419ab2:	inc    edi
  419ab3:	mov    ds:0x2e07a187,al
  419ab8:	jmp    0x43675bc7
  419abd:	xchg   edx,eax
  419abe:	ja     0x419aba
  419ac0:	push   0x1c3b5704
  419ac5:	mov    al,cl
  419ac7:	daa    
  419ac8:	sti    
  419ac9:	cmp    DWORD PTR [ebp+0x24fd6b90],0x7e65dfd4
  419ad3:	pusha  
  419ad4:	or     ch,BYTE PTR [ebx+esi*1-0x31db930]
  419adb:	or     bh,bh
  419add:	and    ebx,edi
  419adf:	dec    ecx
  419ae0:	xor    eax,0x5f66f79d
  419ae5:	and    BYTE PTR [eax+0x6c],cl
  419ae8:	test   BYTE PTR ds:0xa2d04c7c,dl
  419aee:	mov    ss,WORD PTR [edx]
  419af0:	int3   
  419af1:	call   DWORD PTR [ebx+0x38]
  419af4:	or     DWORD PTR [edx+0x55],eax
  419af7:	jns    0x419b69
  419af9:	aas    
  419afa:	or     ebp,edi
  419afc:	out    dx,eax
  419afd:	repz xor ebx,DWORD PTR [esi-0x4d]
  419b01:	imul   edx,DWORD PTR [eax-0x1c28af87],0xfffffffd
  419b08:	pop    edi
  419b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b0a:	inc    edi
  419b0b:	or     eax,0x935005fa
  419b10:	xchg   esp,eax
  419b11:	in     eax,dx
  419b12:	and    DWORD PTR [ebx-0x61],0x4c
  419b16:	pop    ss
  419b17:	add    al,0x34
  419b19:	sar    BYTE PTR [eax],cl
  419b1b:	cdq    
  419b1c:	add    eax,0xbe7027d9
  419b21:	aad    0xdd
  419b23:	mov    esp,0x827706c3
  419b28:	loop   0x419b3a
  419b2a:	sub    al,0x7a
  419b2c:	in     eax,0xfb
  419b2e:	dec    esp
  419b2f:	fld    QWORD PTR [edx+0x52]
  419b32:	enter  0xc740,0xf4
  419b36:	retf   
  419b37:	in     al,0xad
  419b39:	(bad)  
  419b3a:	test   BYTE PTR [esi-0x34],bl
  419b3d:	pop    ecx
  419b3e:	dec    ecx
  419b3f:	mov    edi,0x1b6fdc3d
  419b44:	les    eax,FWORD PTR [ebp-0x41]
  419b47:	jmp    0x64a0:0x6f891762
  419b4e:	(bad)  
  419b51:	nop
  419b52:	cli    
  419b53:	scas   eax,DWORD PTR es:[edi]
  419b54:	call   0x637e:0xb6c7fc07
  419b5b:	fsubr  DWORD PTR [ebx+0x56]
  419b5e:	popa   
  419b5f:	loopne 0x419bb7
  419b61:	sub    ecx,eax
  419b63:	repz fcomp QWORD PTR [ebp-0x1deaa3a9]
  419b6a:	fld    QWORD PTR [eax-0x4c]
  419b6d:	adc    BYTE PTR [eax+0x33],ah
  419b70:	int    0x12
  419b72:	xchg   esp,eax
  419b73:	mov    ?,ecx
  419b75:	jp     0x419afa
  419b77:	bound  eax,QWORD PTR [esi]
  419b79:	cmp    BYTE PTR [ebx],bh
  419b7b:	mov    al,dh
  419b7d:	push   ds
  419b7e:	iret   
  419b7f:	jo     0x419b02
  419b81:	jns    0x419b38
  419b83:	xlat   BYTE PTR ds:[ebx]
  419b84:	rep stos BYTE PTR es:[edi],al
  419b86:	loope  0x419b0a
  419b88:	out    0x3e,al
  419b8a:	clc    
  419b8b:	jo     0x419b6f
  419b8d:	fisttp DWORD PTR [ebp-0x56afffef]
  419b93:	push   eax
  419b94:	imul   ecx,DWORD PTR [eax+0x6d459263],0x19
  419b9b:	mov    fs,WORD PTR [edx-0x7]
  419b9e:	mov    ah,0xcb
  419ba0:	xor    BYTE PTR [edx],bl
  419ba2:	push   es
  419ba3:	ret    0xeb57
  419ba6:	and    cl,BYTE PTR [edi]
  419ba8:	inc    eax
  419ba9:	sti    
  419baa:	adc    eax,0xa6e2daef
  419baf:	cli    
  419bb0:	sbb    bl,BYTE PTR [edi]
  419bb2:	cmp    edi,DWORD PTR [ecx+0x44]
  419bb5:	jb     0x419b5b
  419bb7:	sahf   
  419bb8:	js     0x419ba5
  419bba:	jp     0x419c06
  419bbc:	xchg   ebx,eax
  419bbd:	xchg   DWORD PTR [ecx],ecx
  419bbf:	add    al,0x6a
  419bc1:	cmp    eax,0x7303f665
  419bc6:	fucomi st,st(4)
  419bc8:	xchg   edx,eax
  419bc9:	lds    edx,FWORD PTR [ebp-0x3d]
  419bcc:	fild   QWORD PTR [ebx+0x67]
  419bcf:	mov    dl,0x95
  419bd1:	pop    ecx
  419bd2:	scas   eax,DWORD PTR es:[edi]
  419bd3:	addr16 pop ebp
  419bd5:	cdq    
  419bd6:	cmp    al,0x1f
  419bd8:	fs inc esp
  419bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bdb:	and    al,0x99
  419bdd:	sub    DWORD PTR [edx-0xa],eax
  419be0:	fs mov bh,0x76
  419be3:	fidiv  WORD PTR [edi]
  419be5:	cdq    
  419be6:	test   al,0x7a
  419be8:	mov    eax,ds:0x41baa63a
  419bed:	test   BYTE PTR [ebp-0x7c],bh
  419bf0:	cli    
  419bf1:	pop    ds
  419bf2:	mov    ds:0x1659b573,eax
  419bf7:	repz aaa 
  419bf9:	in     al,0x36
  419bfb:	mov    ecx,0x4660bb86
  419c00:	cmp    DWORD PTR [ebp-0x18c108d9],0x78de65c4
  419c0a:	dec    edx
  419c0b:	into   
  419c0c:	jmp    0x1eff:0xf3e0
  419c12:	stc    
  419c13:	jae    0x419c16
  419c15:	xchg   ebx,eax
  419c16:	mov    ah,0x65
  419c19:	push   edi
  419c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c1b:	hlt    
  419c1c:	frndint 
  419c1e:	ds mov edi,0xc96480b4
  419c24:	jp     0x419c63
  419c26:	ror    cl,cl
  419c28:	jne    0x419c32
  419c2a:	aam    0x9d
  419c2c:	add    eax,0x5f81daee
  419c31:	mov    al,0xe
  419c33:	pop    esp
  419c34:	clc    
  419c35:	xchg   ebp,eax
  419c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c37:	sub    eax,0x28fb0653
  419c3c:	icebp  
  419c3d:	adc    cl,BYTE PTR [eax-0x4c]
  419c40:	adc    dh,ah
  419c42:	repz addr16 dec edx
  419c45:	ins    WORD PTR es:[di],dx
  419c48:	imul   esp,DWORD PTR [ebx],0x5f
  419c4b:	jmp    0xc0eb5610
  419c50:	aaa    
  419c51:	mov    bh,0x1a
  419c53:	aaa    
  419c54:	and    al,0xb4
  419c56:	mov    edx,0xf8cdfb05
  419c5b:	adc    edx,edi
  419c5d:	or     al,0xe9
  419c5f:	push   ebx
  419c60:	xchg   esi,eax
  419c61:	push   eax
  419c62:	jecxz  0x419c21
  419c64:	outs   dx,BYTE PTR ds:[esi]
  419c65:	stos   BYTE PTR es:[edi],al
  419c66:	rol    BYTE PTR [ebx+0x60],0xd6
  419c6a:	pop    ebp
  419c6b:	or     DWORD PTR [edi+0x5e39a532],ebp
  419c71:	sar    ah,1
  419c73:	pop    edi
  419c74:	sar    ebp,0x49
  419c77:	or     DWORD PTR [ebx-0x31],ebp
  419c7a:	or     BYTE PTR [esi],0x80
  419c7d:	into   
  419c7e:	scas   eax,DWORD PTR es:[edi]
  419c7f:	scas   eax,DWORD PTR es:[edi]
  419c80:	data16 rol WORD PTR [edx+0x5f],0x37
  419c86:	dec    ecx
  419c87:	fistp  DWORD PTR [ebp+edi*2-0x2]
  419c8b:	jg     0x419c7a
  419c8d:	push   esp
  419c8e:	cli    
  419c8f:	icebp  
  419c90:	or     eax,0x1e714889
  419c95:	sub    al,0x7e
  419c97:	dec    esp
  419c98:	mov    esp,0x9572cba0
  419c9d:	inc    esi
  419c9e:	xchg   esi,eax
  419c9f:	fisttp DWORD PTR [esi+0x44eed68]
  419ca5:	les    ebp,FWORD PTR [esi-0x4b7dcae4]
  419cab:	cld    
  419cac:	mul    DWORD PTR [esi-0x65]
  419caf:	pop    ebx
  419cb0:	lods   al,BYTE PTR ds:[esi]
  419cb1:	push   bx
  419cb3:	rol    DWORD PTR [eax+ebx*1+0x558240af],cl
  419cba:	ins    BYTE PTR es:[edi],dx
  419cbb:	lods   eax,DWORD PTR ds:[esi]
  419cbc:	pushf  
  419cbd:	adc    DWORD PTR [eax+0x32],0xffffffea
  419cc1:	popf   
  419cc2:	xchg   esi,eax
  419cc3:	mov    bh,0x3d
  419cc5:	mov    ebx,0xaccc3005
  419cca:	das    
  419ccb:	jae    0x419cec
  419ccd:	push   ebp
  419cce:	call   DWORD PTR [ebp+0x35]
  419cd1:	in     al,dx
  419cd2:	pop    eax
  419cd3:	cmp    ah,BYTE PTR [eax+0x23]
  419cd6:	es pop ecx
  419cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cd9:	cmp    bh,ch
  419cdb:	into   
  419cdc:	lods   eax,DWORD PTR ds:[esi]
  419cdd:	fwait
  419cde:	inc    edi
  419cdf:	cmc    
  419ce0:	dec    ebp
  419ce1:	adc    al,dl
  419ce3:	in     eax,dx
  419ce4:	stos   DWORD PTR es:[edi],eax
  419ce5:	aaa    
  419ce6:	out    0x56,al
  419ce8:	in     al,0xd8
  419cea:	push   cs
  419ceb:	mov    DWORD PTR [edx+0x60],0x9b81117b
  419cf2:	call   0x9bc12b3c
  419cf7:	dec    DWORD PTR [ebx-0x354fd182]
  419cfd:	outs   dx,BYTE PTR ds:[esi]
  419cfe:	lock mov ?,WORD PTR [eax]
  419d01:	sbb    esp,esi
  419d03:	add    ch,BYTE PTR [edi-0x5]
  419d06:	(bad)  
  419d07:	xor    bl,BYTE PTR [eax]
  419d09:	into   
  419d0a:	push   ebx
  419d0b:	and    ebp,DWORD PTR [ecx]
  419d0d:	or     DWORD PTR [ebx-0x704b7530],edi
  419d13:	and    DWORD PTR [ebx-0x11bb3f76],ebx
  419d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d1a:	xor    DWORD PTR [esi+0x46ccaa62],ebx
  419d20:	push   edi
  419d21:	mov    eax,ds:0x8286fda5
  419d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d27:	mov    al,ds:0x1ec11fcf
  419d2c:	dec    edi
  419d2d:	jns    0x419d4d
  419d2f:	push   ds
  419d30:	pop    DWORD PTR [ebx-0x5b5e942e]
  419d36:	jns    0x419d86
  419d38:	cmp    al,BYTE PTR [ecx]
  419d3a:	in     al,dx
  419d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d3c:	enter  0x1cdb,0xf2
  419d40:	(bad)  
  419d42:	or     eax,0x5a2ca37e
  419d47:	add    eax,0xd83fd757
  419d4c:	clc    
  419d4d:	xor    eax,0xd4b787a9
  419d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d53:	push   eax
  419d54:	xchg   ecx,eax
  419d55:	out    0x65,eax
  419d57:	sbb    BYTE PTR [ebx],cl
  419d59:	jl     0x419dcb
  419d5b:	leave  
  419d5c:	call   0xdf2a:0xb0491e08
  419d63:	jbe    0x419da6
  419d65:	cli    
  419d66:	sub    al,0x11
  419d68:	xlat   BYTE PTR ds:[ebx]
  419d69:	adc    bl,dh
  419d6b:	mov    ss,WORD PTR [ecx+eiz*4]
  419d6e:	push   0xffffffdb
  419d70:	or     eax,0xbdc9be87
  419d75:	ds mov edi,0x503b42d9
  419d7b:	addr16 rcr bh,cl
  419d7e:	cmp    bl,dl
  419d80:	mov    edi,0xf0df547d
  419d85:	mov    edx,0xc2dbfc7c
  419d8a:	or     al,0x1d
  419d8c:	dec    bh
  419d8e:	push   edi
  419d8f:	xor    bh,bh
  419d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d92:	das    
  419d93:	pop    ebp
  419d94:	mov    esp,0xbb1a1101
  419d99:	jl     0x419d98
  419d9b:	jmp    0x8f772090
  419da0:	jecxz  0x419dc5
  419da2:	mov    ss,WORD PTR [ebx+0x737392aa]
  419da8:	add    BYTE PTR [ecx-0xc540f29],dh
  419dae:	mov    edx,0xe5cd886e
  419db3:	sti    
  419db4:	outs   dx,DWORD PTR ds:[esi]
  419db5:	sbb    DWORD PTR [edi+0xf],eax
  419db8:	cmp    al,0x5c
  419dba:	test   BYTE PTR ds:0x6dc6d398,bl
  419dc0:	das    
  419dc1:	mov    WORD PTR gs:[edx+eiz*8],fs
  419dc5:	das    
  419dc6:	and    BYTE PTR [edi],bl
  419dc8:	push   ebp
  419dc9:	rcl    esi,1
  419dcb:	push   0xffffffd6
  419dcd:	mov    eax,0xb6294620
  419dd2:	push   ecx
  419dd3:	mov    ebx,0xd79e35cb
  419dd8:	es pop ds
  419dda:	xor    eax,0x6ff5b6ae
  419ddf:	cmp    DWORD PTR [ecx+0x1c237b82],ecx
  419de5:	pcmpgtw mm1,QWORD PTR [esi]
  419de8:	jae    0x419dac
  419dea:	fs retf 
  419dec:	mov    ch,0xe7
  419dee:	fistp  DWORD PTR [ebx]
  419df0:	mov    al,cl
  419df2:	(bad)  
  419df3:	jge    0x419d96
  419df5:	aaa    
  419df6:	jae    0x419dfc
  419df8:	shl    DWORD PTR es:[esi],cl
  419dfb:	(bad)  
  419dfd:	fwait
  419dfe:	loope  0x419e52
  419e00:	loopne 0x419ddd
  419e02:	xlat   BYTE PTR ds:[ebx]
  419e03:	test   eax,0x5f963093
  419e08:	nop
  419e09:	mov    DWORD PTR [ebp+0x2cc1575f],edx
  419e0f:	pop    edi
  419e10:	mov    edi,0x608ce7fe
  419e15:	mov    edi,0xc9ce7580
  419e1a:	sar    dl,cl
  419e1c:	inc    edx
  419e1d:	cs les ecx,FWORD PTR cs:[edi]
  419e21:	mov    cs,WORD PTR [ecx]
  419e23:	test   esi,ebp
  419e25:	sub    ah,BYTE PTR [ebp+0x44]
  419e28:	mov    al,0x6f
  419e2a:	(bad)  
  419e2b:	lods   eax,DWORD PTR ds:[esi]
  419e2c:	out    dx,eax
  419e2d:	mov    eax,0xa3d1d549
  419e32:	jno    0x419e98
  419e34:	add    eax,0x7bc790f2
  419e39:	jl     0x419e38
  419e3b:	fucomp st(3)
  419e3d:	adc    eax,0xf20e9bb5
  419e42:	mov    ch,0x11
  419e44:	or     dl,BYTE PTR [ecx-0x4e9bb99f]
  419e4a:	sbb    al,0x5c
  419e4c:	mov    dl,0x9e
  419e4e:	adc    al,0x9e
  419e50:	mov    dl,0x2
  419e52:	dec    ecx
  419e53:	mov    esi,DWORD PTR [edx-0x40afb1e9]
  419e59:	and    al,0x77
  419e5b:	jmp    0xce3a:0x129c3260
  419e62:	adc    al,0xb5
  419e64:	les    esi,FWORD PTR [edx-0x32]
  419e67:	je     0x419dfe
  419e69:	sub    BYTE PTR [eax],0xf
  419e6c:	(bad)  
  419e6d:	or     al,0x76
  419e6f:	push   0xffffff95
  419e71:	popa   
  419e72:	push   edx
  419e73:	xchg   edi,eax
  419e74:	add    ebx,DWORD PTR [edx+edi*1+0x6ca097ca]
  419e7b:	hlt    
  419e7c:	icebp  
  419e7d:	dec    edi
  419e7e:	xor    ebx,edx
  419e80:	jle    0x419e38
  419e82:	rcl    ecx,0x67
  419e85:	sub    BYTE PTR [esi],ah
  419e87:	imul   esp,DWORD PTR [eax-0x62],0x10
  419e8b:	dec    edi
  419e8c:	jp     0x419eec
  419e8e:	(bad)  
  419e8f:	into   
  419e90:	mov    al,ds:0x3951e95c
  419e95:	sbb    DWORD PTR [esp+eiz*4+0x39],0x2f
  419e9a:	test   DWORD PTR [edx-0x308b66ee],eax
  419ea0:	ret    
  419ea1:	jecxz  0x419ec0
  419ea3:	mov    WORD PTR [esi-0x5],cs
  419ea6:	test   ecx,esi
  419ea8:	mov    WORD PTR [ebx+0x4e],ss
  419eab:	sub    BYTE PTR [edx],ah
  419ead:	fcom   DWORD PTR [ecx]
  419eaf:	jmp    0xcb9fbe35
  419eb4:	aas    
  419eb5:	push   DWORD PTR cs:[edi-0x7495cc9e]
  419ebc:	xor    al,0xf1
  419ebe:	dec    ebx
  419ebf:	xchg   ebx,eax
  419ec0:	mov    cl,0x8d
  419ec2:	cmp    al,0xcc
  419ec4:	or     ecx,DWORD PTR [ebp-0x75f963c5]
  419eca:	fstp   QWORD PTR [ecx]
  419ecc:	sub    al,0xca
  419ece:	out    dx,eax
  419ecf:	sub    BYTE PTR [edi],0xac
  419ed2:	sub    cl,BYTE PTR [esi]
  419ed4:	fild   QWORD PTR ds:0xcb01bfad
  419eda:	dec    ebx
  419edb:	mov    dl,0xb1
  419edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ede:	scas   eax,DWORD PTR es:[edi]
  419edf:	sti    
  419ee0:	xchg   esi,eax
  419ee1:	fmul   DWORD PTR [ecx+0x69f25e6f]
  419ee7:	jae    0x419ea5
  419ee9:	sti    
  419eea:	and    DWORD PTR [esi],esp
  419eec:	dec    ebp
  419eed:	(bad)  
  419eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eef:	test   eax,0x86e95fa1
  419ef4:	gs jle 0x419f15
  419ef7:	sbb    al,0x61
  419ef9:	daa    
  419efa:	or     DWORD PTR [edi],edi
  419efc:	stos   DWORD PTR es:[edi],eax
  419efd:	nop
  419efe:	rcr    BYTE PTR [edx],0xa4
  419f01:	rcl    BYTE PTR [eax-0x585b71f6],cl
  419f07:	aaa    
  419f08:	repnz pop es
  419f0a:	lea    edi,[esi-0x3f53720e]
  419f10:	dec    esp
  419f11:	and    al,0xe6
  419f13:	ins    BYTE PTR es:[edi],dx
  419f14:	push   edx
  419f15:	inc    esi
  419f16:	and    ebp,0xffffff94
  419f19:	push   edi
  419f1a:	push   ss
  419f1b:	(bad)  
  419f1c:	rol    BYTE PTR [ebp-0x6a],1
  419f1f:	out    dx,eax
  419f20:	pop    eax
  419f21:	mov    edi,0xa35bc5d1
  419f26:	jl     0x419f99
  419f28:	or     al,0xcb
  419f2a:	out    0x2,eax
  419f2c:	repz fstp QWORD PTR [bx+0x1e]
  419f31:	nop
  419f32:	aad    0xf8
  419f34:	xchg   edi,eax
  419f35:	jmp    0x419fa6
  419f37:	mov    cl,0x1e
  419f39:	fld    QWORD PTR [esi+0xcf8a65f]
  419f3f:	cmc    
  419f40:	jno    0x419f2c
  419f42:	jae    0x419f6c
  419f44:	push   esp
  419f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f46:	or     BYTE PTR [ecx+0x46ce7415],al
  419f4c:	test   BYTE PTR [ebx+ebx*8],al
  419f4f:	imul   ebx,DWORD PTR [edi],0x3a
  419f52:	sub    DWORD PTR [ebp+0x21],ebp
  419f55:	push   eax
  419f56:	hlt    
  419f57:	pop    ebx
  419f58:	adc    DWORD PTR [ecx+edx*2-0x9],0x66
  419f5d:	loopne 0x419f53
  419f5f:	lock mov gs,WORD PTR [ecx]
  419f62:	xchg   edx,eax
  419f63:	test   al,0x12
  419f65:	icebp  
  419f66:	cs dec esp
  419f68:	fidivr DWORD PTR [esi+0x29bde98c]
  419f6e:	mov    bh,0x9d
  419f70:	xchg   esp,eax
  419f71:	jbe    0x419f84
  419f73:	mov    DWORD PTR [ecx],eax
  419f75:	inc    esp
  419f76:	mov    eax,0xfa99565a
  419f7b:	xlat   BYTE PTR ds:[ebx]
  419f7c:	dec    esp
  419f7d:	(bad)  
  419f7e:	cmp    eax,0x14321869
  419f83:	stos   BYTE PTR es:[edi],al
  419f84:	frstor [eax+edi*1+0x1ce6b3db]
  419f8b:	mov    al,0xa7
  419f8d:	cli    
  419f8e:	adc    al,0x17
  419f90:	repnz popa 
  419f92:	lods   eax,DWORD PTR ds:[esi]
  419f93:	pop    esp
  419f94:	imul   edx,DWORD PTR [edx],0xffffffae
  419f97:	in     al,0xfb
  419f99:	sti    
  419f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f9b:	xor    eax,0xea813666
  419fa0:	sbb    al,0x3e
  419fa2:	pop    esp
  419fa3:	retf   
  419fa4:	mov    ds:0x715f0630,al
  419fa9:	fimul  DWORD PTR [edx-0x758afcb9]
  419faf:	sahf   
  419fb0:	out    0x33,al
  419fb2:	mov    dh,0x4
  419fb4:	or     eax,0x823a87a2
  419fb9:	lods   eax,DWORD PTR ds:[esi]
  419fba:	rcl    DWORD PTR [ebp+ecx*1+0x73471bcf],1
  419fc1:	adc    eax,0xa7f0b0b8
  419fc6:	jmp    0x419f74
  419fc8:	(bad)  
  419fca:	mov    dh,0x56
  419fcc:	or     ebp,DWORD PTR [esi]
  419fce:	mov    esp,eax
  419fd0:	int3   
  419fd1:	repz and al,0xc9
  419fd4:	xchg   edi,eax
  419fd5:	jmp    0x41a015
  419fd7:	out    dx,al
  419fd8:	dec    edi
  419fd9:	aaa    
  419fda:	popa   
  419fdb:	xor    ebx,DWORD PTR [esi-0xd1ce4c9]
  419fe1:	test   al,0x6e
  419fe3:	dec    esp
  419fe4:	or     DWORD PTR [edi-0x17],ebp
  419fe7:	stos   BYTE PTR es:[edi],al
  419fe8:	push   ebp
  419fe9:	cmp    eax,0xc4ca235b
  419fee:	fist   DWORD PTR [esi-0x5f85363d]
  419ff4:	push   edi
  419ff5:	jge    0x419ffb
  419ff7:	mov    bh,0x31
  419ff9:	gs or  eax,0x803b6e42
  419fff:	fnstcw WORD PTR [edx]
  41a001:	sub    al,0x8c
  41a003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a004:	mov    cl,0x17
  41a006:	mov    eax,es:0xd3983782
  41a00c:	mov    DWORD PTR [ebp-0x67a7d82c],edx
  41a012:	ror    al,cl
  41a014:	mov    ds:0xc646907a,al
  41a019:	fistp  DWORD PTR [ebp+0x18]
  41a01c:	jne    0x41a036
  41a01e:	pushf  
  41a01f:	mov    ebx,0xf0764979
  41a024:	lods   eax,DWORD PTR ds:[esi]
  41a025:	das    
  41a026:	aam    0xa9
  41a028:	ja     0x419ff5
  41a02a:	fdiv   QWORD PTR [ecx+0x38]
  41a02d:	mov    ecx,0x1a23f9de
  41a032:	dec    eax
  41a033:	xor    al,0x2
  41a035:	scas   eax,DWORD PTR es:[edi]
  41a036:	sbb    eax,0xc770637f
  41a03b:	push   esi
  41a03c:	fmul   st(6),st
  41a03e:	cmp    dh,BYTE PTR [ecx+ebp*8-0x5b]
  41a042:	cmp    al,0xe0
  41a044:	into   
  41a045:	or     eax,0x82c5961f
  41a04a:	(bad)  
  41a04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a04c:	shl    BYTE PTR [esi-0x53],0x3b
  41a050:	and    eax,0x4e670509
  41a055:	add    BYTE PTR ss:[edi-0x25],ah
  41a059:	sub    eax,0x674379b1
  41a05e:	and    BYTE PTR [ebx],0x60
  41a061:	cwde   
  41a062:	mov    al,ds:0x114a2d7d
  41a067:	adc    esi,DWORD PTR [esi+0x11]
  41a06a:	dec    eax
  41a06b:	int3   
  41a06c:	mov    esi,0x8babacca
  41a071:	pop    edx
  41a072:	jne    0x41a06a
  41a074:	pushf  
  41a075:	mov    cl,0x96
  41a077:	jne    0x41a0c2
  41a079:	mov    dh,0x68
  41a07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a07c:	ret    0x5ced
  41a07f:	(bad)  
  41a080:	(bad)  
  41a082:	xchg   esp,eax
  41a083:	jns    0x41a00a
  41a085:	fbld   TBYTE PTR [edx+0x42f3fe87]
  41a08b:	int    0x1b
  41a08d:	stos   BYTE PTR es:[edi],al
  41a08e:	inc    ebx
  41a08f:	lock add eax,0xf75dba8f
  41a095:	in     eax,dx
  41a096:	pop    ds
  41a097:	in     eax,0x55
  41a099:	loopne 0x41a0f3
  41a09b:	cmp    DWORD PTR [ecx-0x25dc1c38],0xf0be4161
  41a0a5:	std    
  41a0a6:	div    BYTE PTR [ebx]
  41a0a8:	data16 cmp BYTE PTR [esi],cl
  41a0ab:	push   0xffffffee
  41a0ad:	sub    cl,al
  41a0af:	popw   ds
  41a0b1:	test   BYTE PTR [ecx+0x7a],dh
  41a0b4:	inc    esi
  41a0b5:	push   0x23
  41a0b7:	imul   esp,edi,0xd9912f80
  41a0bd:	xchg   DWORD PTR [edi+0x4],ebx
  41a0c0:	sbb    al,0x13
  41a0c2:	xor    ebx,ebp
  41a0c4:	shr    DWORD PTR [ebp-0x2fc8bc17],0x19
  41a0cb:	pop    eax
  41a0cc:	cld    
  41a0cd:	push   ds
  41a0ce:	sbb    esp,DWORD PTR [ebp+0x28]
  41a0d1:	xor    eax,0x52ebd827
  41a0d6:	lods   al,BYTE PTR ds:[esi]
  41a0d7:	repnz mov ds:0x825fe7e7,al
  41a0dd:	dec    ebp
  41a0de:	(bad)  
  41a0df:	cwde   
  41a0e0:	inc    esp
  41a0e1:	ret    
  41a0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0e3:	mov    ebx,0xc2ab7c97
  41a0e8:	dec    ebx
  41a0e9:	sbb    cl,cl
  41a0eb:	outs   dx,BYTE PTR ds:[esi]
  41a0ec:	and    al,0x3
  41a0ee:	push   0x57ff317e
  41a0f3:	mov    ah,0xb
  41a0f5:	das    
  41a0f6:	fstp   QWORD PTR [edi]
  41a0f8:	xchg   esi,eax
  41a0f9:	daa    
  41a0fa:	pop    ebp
  41a0fb:	jnp    0x41a167
  41a0fd:	push   ebx
  41a0fe:	outs   dx,BYTE PTR ds:[esi]
  41a0ff:	and    BYTE PTR [edx+0x5e],bl
  41a102:	mov    al,ds:0x65ee95ee
  41a107:	dec    esi
  41a108:	mov    DWORD PTR [esi-0x74],0xc674fd35
  41a10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a110:	adc    ah,BYTE PTR ds:[ebx]
  41a113:	xchg   edi,eax
  41a114:	fwait
  41a115:	shl    DWORD PTR [edx-0x50],cl
  41a118:	je     0x41a154
  41a11a:	jp     0x41a11e
  41a11c:	imul   eax,esp,0xfa2f01da
  41a122:	fs mov edx,0x51bfc637
  41a128:	fwait
  41a129:	out    0xc0,al
  41a12b:	cmp    eax,0x2079ed3d
  41a130:	sbb    bh,BYTE PTR [ecx-0x2788039]
  41a136:	pushf  
  41a137:	push   edi
  41a138:	pop    edi
  41a139:	mov    ecx,0x3639448b
  41a13e:	in     eax,0x57
  41a140:	cmp    eax,0xb7a9616d
  41a145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a146:	push   cs
  41a147:	mov    bl,0xa
  41a149:	aas    
  41a14a:	xchg   ebp,eax
  41a14b:	pop    eax
  41a14c:	inc    edx
  41a14d:	ins    DWORD PTR es:[edi],dx
  41a14e:	mov    al,ch
  41a150:	pop    ebx
  41a151:	mov    edx,0x46f0e3e8
  41a156:	cmp    ch,bl
  41a158:	or     BYTE PTR [esi+0x77f4696b],0xac
  41a15f:	dec    eax
  41a160:	enter  0x88ed,0xad
  41a164:	adc    eax,0xe2457140
  41a169:	daa    
  41a16a:	popa   
  41a16b:	nop
  41a16c:	xchg   ch,dh
  41a16e:	sbb    ebp,DWORD PTR [ecx-0x1ede3a62]
  41a174:	mov    bh,0xc8
  41a176:	(bad)  
  41a177:	(bad)  
  41a178:	xchg   ebp,eax
  41a179:	das    
  41a17a:	cdq    
  41a17b:	inc    edi
  41a17c:	fwait
  41a17d:	ret    
  41a17e:	inc    ecx
  41a17f:	push   ecx
  41a180:	in     al,0x48
  41a182:	pop    edi
  41a183:	inc    edi
  41a184:	add    DWORD PTR [ebx+ebp*4],eax
  41a187:	shr    BYTE PTR [eax+ecx*8-0x4e],0xe
  41a18c:	mov    WORD PTR [edi-0x79],es
  41a18f:	pop    DWORD PTR [edx]
  41a191:	outs   dx,BYTE PTR ds:[esi]
  41a192:	fistp  QWORD PTR [ebp+0x5e6ba190]
  41a198:	mov    esp,0xa0d4d3b6
  41a19d:	popa   
  41a19e:	scas   al,BYTE PTR es:[edi]
  41a19f:	int    0x18
  41a1a1:	mov    DWORD PTR gs:[esi-0xb],edx
  41a1a5:	pop    es
  41a1a6:	lods   eax,DWORD PTR ds:[esi]
  41a1a7:	add    DWORD PTR [edi+0x600cbd21],esi
  41a1ad:	clc    
  41a1ae:	or     eax,0xfdd02b88
  41a1b3:	fld    TBYTE PTR [edi]
  41a1b5:	loop   0x41a18d
  41a1b7:	scas   eax,DWORD PTR es:[edi]
  41a1b8:	push   esi
  41a1b9:	retf   
  41a1ba:	leave  
  41a1bb:	enter  0xa8da,0x51
  41a1bf:	cmp    BYTE PTR [edx-0x7469097],cl
  41a1c5:	cmp    al,0x2f
  41a1c7:	mov    edi,0xdfdbbf8c
  41a1cc:	mov    al,0x5a
  41a1ce:	test   eax,0x1798babc
  41a1d3:	in     al,dx
  41a1d4:	adc    al,BYTE PTR [eax]
  41a1d6:	mov    bh,0x2d
  41a1d8:	mov    ch,0x7b
  41a1da:	mov    DWORD PTR [esp+eiz*8-0xf],0x9b7a5ce0
  41a1e2:	mov    ch,0xfe
  41a1e4:	int3   
  41a1e5:	out    dx,eax
  41a1e6:	add    DWORD PTR [ebx],edx
  41a1e8:	sbb    DWORD PTR [edi+0x55ebd4bb],0x36ef8d8b
  41a1f2:	ror    ebp,1
  41a1f4:	out    dx,eax
  41a1f5:	and    al,BYTE PTR [eax+0x36]
  41a1f8:	mov    DWORD PTR [ebp-0x73],0x16882fb9
  41a1ff:	or     ecx,DWORD PTR [ebx+0xabca7f9]
  41a205:	pop    esi
  41a206:	sub    cl,BYTE PTR [ebp+0x43c3f8b9]
  41a20c:	and    cl,BYTE PTR [esi-0x6b]
  41a20f:	jo     0x41a1f3
  41a211:	sub    DWORD PTR [esp+ebx*2],esi
  41a214:	xchg   esi,eax
  41a215:	outs   dx,BYTE PTR ds:[esi]
  41a216:	out    0xd3,eax
  41a218:	mov    eax,0x5271ea38
  41a21d:	jne    0x41a1c5
  41a21f:	(bad)  
  41a220:	jmp    0x41a228
  41a222:	enter  0xf6b3,0xb7
  41a226:	sbb    DWORD PTR [ebx+0x2],esp
  41a229:	inc    edx
  41a22a:	mov    ah,0xd8
  41a22c:	dec    BYTE PTR [ebx]
  41a22e:	xor    esp,0x23
  41a231:	jge    0x41a227
  41a233:	or     BYTE PTR [esi],ah
  41a235:	mov    ebx,0x95372db
  41a23a:	mov    esp,esp
  41a23c:	and    eax,0x5330dedd
  41a241:	adc    al,0x83
  41a243:	imul   DWORD PTR [ebp-0x17]
  41a246:	mov    edi,0x4c3ad7a7
  41a24b:	dec    ecx
  41a24c:	ficom  WORD PTR [ebx]
  41a24e:	mov    ebp,0x6530d75e
  41a253:	or     esi,ebx
  41a255:	jge    0x41a285
  41a257:	imul   ebp,DWORD PTR [ecx],0xffffffe9
  41a25a:	clc    
  41a25b:	or     BYTE PTR [edi],cl
  41a25d:	or     BYTE PTR [edi],dl
  41a25f:	in     eax,dx
  41a260:	inc    edx
  41a261:	mov    eax,0xf2379207
  41a266:	iret   
  41a267:	gs int3 
  41a269:	xchg   ebp,eax
  41a26a:	inc    ecx
  41a26b:	dec    esi
  41a26c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a26d:	cmc    
  41a26e:	out    0x19,eax
  41a270:	gs loope 0x41a22d
  41a273:	cs xchg esp,eax
  41a275:	call   0xc7bc:0xfc2a645c
  41a27c:	aad    0xdb
  41a27e:	daa    
  41a27f:	and    DWORD PTR [ebp+ebp*8+0x4d522abb],edi
  41a286:	lds    edi,FWORD PTR [ecx]
  41a288:	popa   
  41a289:	in     eax,0xbd
  41a28b:	loopne 0x41a25a
  41a28d:	outs   dx,BYTE PTR ds:[esi]
  41a28e:	dec    ecx
  41a28f:	push   esp
  41a290:	jl     0x41a2a2
  41a292:	push   esi
  41a293:	sub    eax,0x3d10233e
  41a298:	in     al,dx
  41a299:	gs inc ebp
  41a29b:	js     0x41a236
  41a29d:	push   esp
  41a29e:	jno    0x41a261
  41a2a0:	xchg   ecx,eax
  41a2a1:	pop    ds
  41a2a2:	jmp    0x2dc4:0xcd05a049
  41a2a9:	(bad)  
  41a2aa:	xchg   edi,eax
  41a2ab:	ds int 0x70
  41a2ae:	dec    edi
  41a2af:	push   ebx
  41a2b0:	sbb    BYTE PTR [ebp-0x6f],ah
  41a2b3:	jge    0x41a31f
  41a2b5:	or     eax,0xc1d9390f
  41a2ba:	dec    esi
  41a2bb:	add    eax,0x13d4e0b8
  41a2c0:	cmp    al,0xed
  41a2c2:	sbb    esp,DWORD PTR [ebx]
  41a2c4:	stos   BYTE PTR es:[edi],al
  41a2c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c6:	mov    bh,0x2d
  41a2c8:	xchg   edx,eax
  41a2c9:	mov    eax,ds:0xdc15d0bd
  41a2ce:	mov    ebx,0x9ca136a3
  41a2d3:	cli    
  41a2d4:	mov    bh,0x46
  41a2d6:	pusha  
  41a2d7:	push   cs
  41a2d8:	inc    ecx
  41a2d9:	test   DWORD PTR [ebp-0x34],esi
  41a2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2dd:	stos   BYTE PTR es:[edi],al
  41a2de:	or     BYTE PTR [eax],al
  41a2e0:	pop    ebx
  41a2e1:	sub    ecx,0x3d6fe167
  41a2e7:	adc    BYTE PTR [ebx],ah
  41a2e9:	cs jg  0x41a2df
  41a2ec:	mov    DWORD PTR [esi],edx
  41a2ee:	jmp    0xdb654f9e
  41a2f3:	adc    eax,0x913273a
  41a2f8:	aaa    
  41a2f9:	loopne 0x41a2ec
  41a2fb:	xchg   esi,ebx
  41a2fd:	mul    DWORD PTR [ebp-0xd]
  41a300:	rol    DWORD PTR fs:[ebp-0x6a],1
  41a304:	outs   dx,DWORD PTR ds:[esi]
  41a305:	das    
  41a306:	rcl    DWORD PTR [ebx+0x5d9acca1],1
  41a30c:	fsub   DWORD PTR [edx]
  41a30e:	add    al,bh
  41a310:	sti    
  41a311:	add    DWORD PTR [edi+0x51],0xd01c2e9c
  41a318:	adc    eax,0x394e0b22
  41a31d:	sbb    eax,0x359f29ba
  41a322:	mov    ds:0xb978b31f,eax
  41a327:	cmc    
  41a328:	xchg   ebp,eax
  41a329:	fsub   DWORD PTR [edi+edx*1-0x4d]
  41a32d:	dec    ecx
  41a32e:	jecxz  0x41a35c
  41a330:	adc    DWORD PTR [esi-0x7d],eax
  41a333:	push   esp
  41a334:	dec    esi
  41a335:	(bad)  
  41a336:	repnz dec esp
  41a338:	je     0x41a2d5
  41a33a:	cmp    eax,0x8dd863c3
  41a33f:	xor    dl,bl
  41a341:	scas   eax,DWORD PTR es:[edi]
  41a342:	mov    ah,0xeb
  41a344:	call   0x121d:0xa74424b6
  41a34b:	push   esi
  41a34c:	add    eax,0xe4c145b5
  41a351:	push   eax
  41a352:	clc    
  41a353:	out    0x18,eax
  41a355:	and    BYTE PTR fs:[ecx-0x52],cl
  41a359:	jne    0x41a309
  41a35b:	mov    edi,esp
  41a35d:	adc    eax,0x5ca3a6ad
  41a362:	dec    ebx
  41a363:	mov    edi,0x754ac0d6
  41a368:	out    0xc,eax
  41a36a:	jno    0x41a3e6
  41a36c:	pusha  
  41a36d:	sbb    al,0xa0
  41a36f:	pop    eax
  41a370:	fidiv  WORD PTR [esi+0x21a1b255]
  41a376:	fstp   TBYTE PTR [ebp-0x24]
  41a379:	mov    cl,0xf5
  41a37b:	adc    DWORD PTR [ecx+0x6c114d50],edx
  41a381:	in     eax,dx
  41a382:	mov    al,0x1b
  41a384:	ins    DWORD PTR es:[edi],dx
  41a385:	jecxz  0x41a30d
  41a387:	jno    0x41a327
  41a389:	add    eax,0x96fa9adb
  41a38e:	xor    al,0x52
  41a390:	lds    ecx,FWORD PTR [esi+0x44]
  41a393:	xchg   edx,eax
  41a394:	xor    eax,0xe98bdeda
  41a399:	daa    
  41a39a:	mov    ds:0x4e965c6a,eax
  41a39f:	fwait
  41a3a0:	mov    edi,0x4fcf83b8
  41a3a5:	jecxz  0x41a41d
  41a3a7:	cmp    al,0xf8
  41a3a9:	adc    eax,0x274fc8f8
  41a3ae:	jge    0x41a39b
  41a3b0:	xchg   esp,eax
  41a3b1:	iret   
  41a3b2:	adc    ebx,edi
  41a3b4:	fld    QWORD PTR [edx-0x476b79ba]
  41a3ba:	(bad)  
  41a3bb:	push   eax
  41a3bc:	(bad)  
  41a3bd:	adc    ah,BYTE PTR [edi]
  41a3bf:	mov    WORD PTR [eax],fs
  41a3c1:	out    dx,al
  41a3c2:	mov    al,ds:0x182e8573
  41a3c7:	mov    ds:0x7b7a7394,al
  41a3cc:	mov    eax,0x112a69c7
  41a3d1:	push   ss
  41a3d2:	jbe    0x41a3f5
  41a3d4:	cmp    al,0x34
  41a3d6:	push   edi
  41a3d7:	in     eax,0x59
  41a3d9:	js     0x41a39e
  41a3db:	mov    dh,0xbf
  41a3dd:	shl    DWORD PTR [edx-0x85d1e96],0xbc
  41a3e4:	jmp    0xb9412112
  41a3e9:	cli    
  41a3ea:	sub    dh,BYTE PTR [ecx+0x1db3c41f]
  41a3f0:	push   0xffffffd2
  41a3f2:	sub    ecx,ebx
  41a3f4:	call   0x6a355c76
  41a3f9:	addr16 and ebp,edx
  41a3fc:	mov    eax,ds:0xc8d2ac17
  41a401:	push   esi
  41a402:	push   es
  41a403:	ss js  0x41a413
  41a406:	mov    edi,0xa78d47fd
  41a40b:	xchg   edx,eax
  41a40c:	inc    BYTE PTR cs:[esi]
  41a40f:	ret    0x835c
  41a412:	stos   DWORD PTR es:[di],eax
  41a414:	(bad)  [edi-0x64117859]
  41a41a:	pop    ss
  41a41b:	xor    al,0x3
  41a41d:	mov    esi,0x587a1074
  41a422:	add    cl,BYTE PTR [edx]
  41a424:	push   ds
  41a425:	add    al,0xfa
  41a427:	inc    esi
  41a428:	in     eax,dx
  41a429:	in     al,0x1e
  41a42b:	fwait
  41a42c:	mov    al,0xd3
  41a42e:	jge    0x41a456
  41a430:	repz ja 0x41a438
  41a433:	sbb    eax,0x3a80feb1
  41a438:	push   edx
  41a439:	imul   ebx,DWORD PTR ss:[eax+0x1241b961],0x87df64e6
  41a444:	into   
  41a445:	mov    bl,0x28
  41a447:	stos   DWORD PTR es:[edi],eax
  41a448:	(bad)  
  41a449:	xchg   ebp,eax
  41a44a:	gs cmp cl,dl
  41a44d:	outs   dx,DWORD PTR ds:[esi]
  41a44e:	inc    edi
  41a44f:	add    ch,bh
  41a451:	push   ss
  41a452:	test   DWORD PTR [ecx+0x26],esi
  41a455:	loop   0x41a413
  41a457:	jae    0x41a462
  41a459:	cmp    al,0x2a
  41a45b:	mov    ch,0xe1
  41a45d:	add    al,0xda
  41a45f:	pushf  
  41a460:	arpl   WORD PTR [esp+eax*8],dx
  41a463:	lock add al,0x5c
  41a466:	and    al,0xe4
  41a468:	rcl    DWORD PTR [ecx],1
  41a46a:	test   DWORD PTR [edi+0x75],edi
  41a46d:	jo     0x41a419
  41a46f:	pop    es
  41a470:	add    dl,BYTE PTR [ebx+edi*8+0x72d12a57]
  41a477:	adc    eax,0xc8e30054
  41a47c:	test   ecx,eax
  41a47e:	lods   al,BYTE PTR ds:[esi]
  41a47f:	pop    eax
  41a480:	scas   al,BYTE PTR es:[edi]
  41a481:	repnz hlt 
  41a483:	jns    0x41a4ab
  41a485:	shl    al,cl
  41a487:	inc    ebx
  41a488:	loop   0x41a441
  41a48a:	call   0x99738dcf
  41a48f:	sbb    dh,dl
  41a491:	push   ss
  41a492:	jmp    0x41a4ab
  41a494:	jmp    0x9f90697a
  41a499:	inc    ebx
  41a49a:	cmp    DWORD PTR [ecx-0x29eab018],0x4f125003
  41a4a4:	sub    eax,0xef9ec19
  41a4a9:	(bad)  
  41a4aa:	sbb    ah,bh
  41a4ac:	rcr    BYTE PTR [edx-0x66],0x29
  41a4b0:	fcomp  st(4)
  41a4b2:	fucomi st,st(2)
  41a4b4:	jb     0x41a48c
  41a4b6:	jecxz  0x41a47f
  41a4b8:	(bad)  
  41a4b9:	push   esi
  41a4ba:	jnp    0x41a456
  41a4bc:	or     al,0x42
  41a4be:	ja     0x41a47f
  41a4c0:	inc    edi
  41a4c1:	xor    DWORD PTR [edx-0xf],esi
  41a4c4:	aas    
  41a4c5:	dec    eax
  41a4c6:	pop    ecx
  41a4c7:	adc    edx,DWORD PTR ds:0x9e3044a1
  41a4cd:	cmc    
  41a4ce:	pop    ecx
  41a4cf:	pusha  
  41a4d0:	fisub  WORD PTR [edi+0x5da504fe]
  41a4d6:	push   edx
  41a4d7:	adc    dh,BYTE PTR [eax]
  41a4d9:	mov    esi,edi
  41a4db:	sbb    ecx,0x6250524d
  41a4e1:	inc    edi
  41a4e2:	stc    
  41a4e3:	dec    ebp
  41a4e4:	add    al,0x48
  41a4e6:	popf   
  41a4e7:	lea    esi,[edx+0x39b0040b]
  41a4ed:	stos   DWORD PTR es:[edi],eax
  41a4ee:	call   0xd9f19bb
  41a4f3:	(bad)  
  41a4f4:	sub    esp,DWORD PTR [ecx-0x208add7f]
  41a4fa:	jp     0x41a4f5
  41a4fc:	test   DWORD PTR [ebp-0x49],ebp
  41a4ff:	lods   al,BYTE PTR ds:[esi]
  41a500:	mov    edi,0x4bb92c29
  41a505:	push   es
  41a506:	inc    ebx
  41a507:	in     eax,0xbd
  41a509:	jns    0x41a4e2
  41a50b:	cmp    DWORD PTR [eax+esi*4-0x38728d05],edx
  41a512:	xor    al,0xdb
  41a514:	sub    al,0xd4
  41a516:	popf   
  41a517:	pop    DWORD PTR [edx]
  41a519:	sahf   
  41a51a:	mov    ds:0x4f788ab3,eax
  41a51f:	test   ah,al
  41a521:	xchg   cl,cl
  41a523:	add    dl,BYTE PTR [ecx-0x7f]
  41a526:	daa    
  41a527:	adc    eax,0xd26b5dff
  41a52c:	std    
  41a52d:	jo     0x41a4cd
  41a52f:	push   ebp
  41a530:	sbb    al,0x1e
  41a532:	cwde   
  41a533:	add    dh,al
  41a535:	(bad)  
  41a536:	jecxz  0x41a4f3
  41a538:	mov    ebx,DWORD PTR [ebx-0x9efd061]
  41a53e:	push   ss
  41a53f:	xor    BYTE PTR [edx],dl
  41a541:	jmp    0x41a53f
  41a543:	cdq    
  41a544:	dec    ecx
  41a545:	int3   
  41a546:	add    ecx,esp
  41a548:	xchg   esp,eax
  41a549:	imul   ecx,DWORD PTR [esi-0x218f4e48],0x8fb41278
  41a553:	xchg   ecx,eax
  41a554:	add    eax,0xbcc9fce8
  41a559:	push   ss
  41a55a:	push   edi
  41a55b:	data16 mov bl,BYTE PTR [esp+esi*2]
  41a55f:	ret    
  41a560:	inc    ebp
  41a561:	ret    
  41a562:	or     BYTE PTR [ebx+0x600c0ff8],al
  41a568:	xor    al,0xa8
  41a56a:	xchg   esp,eax
  41a56b:	or     DWORD PTR [edi-0x7b238fac],eax
  41a571:	mov    bl,0x8c
  41a573:	mov    edi,0x4b211a9d
  41a578:	inc    eax
  41a579:	scas   al,BYTE PTR es:[edi]
  41a57a:	push   eax
  41a57b:	iret   
  41a57c:	jne    0x41a50d
  41a57e:	pop    esp
  41a57f:	sar    DWORD PTR [esi+0x474ae15e],0x18
  41a586:	into   
  41a587:	mov    ebx,0x84387b04
  41a58c:	pop    edx
  41a58d:	cli    
  41a58e:	xchg   ebp,eax
  41a58f:	add    al,ch
  41a591:	adc    al,0xc3
  41a593:	test   DWORD PTR [eax],ecx
  41a595:	mov    eax,ds:0x26c451d0
  41a59a:	ja     0x41a60a
  41a59c:	xchg   esi,eax
  41a59d:	adc    DWORD PTR [ecx+0x5c],0x7
  41a5a1:	jo     0x41a60c
  41a5a3:	(bad)  
  41a5a4:	or     dl,bl
  41a5a6:	sub    al,0x16
  41a5a8:	or     BYTE PTR es:[esi+0x32b8df30],ah
  41a5af:	pop    esp
  41a5b0:	sti    
  41a5b1:	inc    esp
  41a5b2:	mov    al,ds:0xe1dfe708
  41a5b7:	inc    edx
  41a5b8:	jl     0x41a637
  41a5ba:	sbb    eax,0xcfda1d6a
  41a5bf:	ins    BYTE PTR es:[edi],dx
  41a5c0:	pop    edx
  41a5c1:	nop
  41a5c2:	xlat   BYTE PTR ds:[ebx]
  41a5c3:	retf   0x15ea
  41a5c6:	mov    bh,0x6e
  41a5c8:	add    eax,0x4ba447ac
  41a5cd:	sub    DWORD PTR [edi],edi
  41a5cf:	dec    ebp
  41a5d0:	xor    eax,0x855b6d7d
  41a5d5:	pushf  
  41a5d6:	rep lods al,BYTE PTR ds:[esi]
  41a5d8:	ss pop esp
  41a5da:	fs pop esp
  41a5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5dd:	in     eax,dx
  41a5de:	rcr    DWORD PTR [ebx+ecx*1],0x5b
  41a5e2:	add    esi,DWORD PTR [ebx+0x1b]
  41a5e5:	mov    esp,0x98f73a3
  41a5ea:	stos   DWORD PTR es:[edi],eax
  41a5eb:	inc    DWORD PTR [ecx+0x71]
  41a5ee:	sahf   
  41a5ef:	scas   al,BYTE PTR es:[edi]
  41a5f0:	jns    0x41a5a8
  41a5f2:	repz test al,0xf8
  41a5f5:	and    eax,0x31fb20c5
  41a5fa:	cmp    cl,BYTE PTR [ebx+0x1991d8e]
  41a600:	dec    esp
  41a601:	into   
  41a602:	inc    ebp
  41a604:	push   esi
  41a605:	aam    0x9
  41a607:	sbb    eax,0x5e9bff8a
  41a60c:	mov    eax,0x22104cc4
  41a611:	repnz std 
  41a613:	jno    0x41a618
  41a615:	test   DWORD PTR [esi+0x63],ebp
  41a618:	nop
  41a619:	dec    edx
  41a61a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a61b:	push   0xb982ec27
  41a620:	icebp  
  41a621:	pop    edi
  41a622:	xchg   ebp,eax
  41a623:	cld    
  41a624:	in     eax,dx
  41a625:	or     esi,eax
  41a627:	inc    eax
  41a628:	cmp    eax,0x109884ea
  41a62d:	sbb    esp,0xffffffae
  41a630:	popa   
  41a631:	mov    edi,0xb4eacf9f
  41a636:	mov    cl,0xe5
  41a638:	jbe    0x41a680
  41a63a:	mov    DWORD PTR [ecx],esi
  41a63c:	and    DWORD PTR cs:[ebx],esp
  41a63f:	xchg   DWORD PTR [esi],edi
  41a641:	repnz xor al,0x2c
  41a644:	clc    
  41a645:	(bad)  
  41a646:	mov    ecx,DWORD PTR [edi-0x12a71c1c]
  41a64c:	inc    edx
  41a64d:	mov    edi,0xc0134589
  41a652:	mov    ebp,0xcd879dd6
  41a657:	mov    cl,0xf6
  41a659:	retf   0xa14c
  41a65c:	add    DWORD PTR [ebp-0x6a8176f6],esp
  41a662:	mov    ebp,0x394fa5db
  41a667:	push   es
  41a668:	adc    BYTE PTR [edi+0x3d],dh
  41a66b:	adc    esi,edi
  41a66d:	ficom  DWORD PTR [esi]
  41a66f:	call   0xedeb:0x39659ca8
  41a676:	sub    ebx,DWORD PTR [ecx]
  41a678:	xchg   esp,eax
  41a679:	out    0x48,al
  41a67b:	rcl    ch,1
  41a67d:	mov    ecx,0xbbbc991b
  41a682:	stos   BYTE PTR es:[edi],al
  41a683:	jnp    0x41a6df
  41a685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a686:	out    dx,eax
  41a687:	test   esi,esi
  41a689:	xchg   edx,eax
  41a68a:	(bad)  
  41a68b:	mov    ebp,0x21d625dc
  41a690:	push   0xf67c9f4d
  41a695:	add    eax,0x400c2ea4
  41a69a:	mov    dl,0xb4
  41a69c:	push   esp
  41a69d:	inc    edx
  41a69e:	dec    ecx
  41a69f:	xchg   esp,eax
  41a6a0:	ins    BYTE PTR es:[edi],dx
  41a6a1:	add    eax,0x6e312103
  41a6a6:	fnsave [ebx+0x2eb4f86e]
  41a6ac:	test   al,0x50
  41a6ae:	cmc    
  41a6af:	push   es
  41a6b0:	popa   
  41a6b1:	loop   0x41a6d7
  41a6b3:	imul   esi,ebx,0xe2076d09
  41a6b9:	push   es
  41a6ba:	inc    esp
  41a6bb:	mov    ah,0xcc
  41a6bd:	mov    ds:0xb42f7b6d,al
  41a6c2:	mov    BYTE PTR [edi],bh
  41a6c4:	mov    ecx,0xb863baf2
  41a6c9:	inc    ebx
  41a6ca:	push   ds
  41a6cb:	or     eax,0x6e1ed9b5
  41a6d0:	xor    eax,0x65d2e3a5
  41a6d5:	out    0x3d,eax
  41a6d7:	xor    esp,DWORD PTR [edx+edx*4]
  41a6da:	pop    ds
  41a6db:	and    BYTE PTR [esi-0x52a97c41],bh
  41a6e1:	in     eax,0xae
  41a6e3:	jne    0x41a6bf
  41a6e5:	xchg   DWORD PTR [ebx+ebx*1-0x40],eax
  41a6e9:	aas    
  41a6ea:	mov    cl,bl
  41a6ec:	out    dx,eax
  41a6ed:	jp     0x41a745
  41a6ef:	nop
  41a6f0:	scas   al,BYTE PTR es:[edi]
  41a6f1:	jmp    0xc7f1a124
  41a6f6:	cwde   
  41a6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6f8:	adc    dl,BYTE PTR cs:[ebx-0x7cddf369]
  41a6ff:	mov    eax,0xaf6f103
  41a704:	in     eax,0x3b
  41a706:	rcl    BYTE PTR [ecx-0x27],0xba
  41a70a:	push   edx
  41a70b:	jno    0x41a706
  41a70d:	pop    ebx
  41a70e:	lea    esi,[esi-0x1d41057e]
  41a714:	out    0xe7,eax
  41a716:	fstsw  WORD PTR [edi]
  41a719:	xor    eax,0x4d509a8f
  41a71e:	pushw  cs
  41a720:	push   esp
  41a721:	js     0x41a6c3
  41a723:	push   ebx
  41a724:	push   eax
  41a725:	mov    edx,0xf433d2c1
  41a72a:	sub    DWORD PTR [edx+0x41e14ae9],edi
  41a730:	mov    ecx,0x9376392c
  41a735:	scas   al,BYTE PTR es:[edi]
  41a736:	sub    eax,0xe94bdb6
  41a73b:	loope  0x41a79c
  41a73d:	jl     0x41a74d
  41a73f:	cwde   
  41a740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a741:	ficomp DWORD PTR [edx+eiz*1]
  41a744:	cmp    ah,al
  41a746:	lea    edx,[edx+0x4f]
  41a749:	push   edi
  41a74a:	lea    esp,[edx+0xd]
  41a74d:	into   
  41a74e:	cld    
  41a74f:	es push esi
  41a751:	mov    ds:0x9edc84c7,eax
  41a756:	stc    
  41a757:	pop    ds
  41a758:	or     al,0xc0
  41a75a:	or     DWORD PTR [eax],edi
  41a75c:	cmp    eax,0x1cb17186
  41a761:	cmp    BYTE PTR gs:[ebx+0x22],ch
  41a765:	adc    DWORD PTR [edx-0x17],edx
  41a768:	mov    ?,WORD PTR [ebp+0x6bc261d0]
  41a76e:	imul   edi,DWORD PTR [edi-0xab79911],0xec038809
  41a778:	cmp    ebx,DWORD PTR [ebx]
  41a77a:	(bad)
  41a77d:	sar    DWORD PTR ds:0x1c17d77c,cl
  41a783:	xlat   BYTE PTR ds:[ebx]
  41a784:	outs   dx,DWORD PTR ds:[esi]
  41a785:	inc    ebx
  41a786:	inc    BYTE PTR [ecx-0x276920ce]
  41a78c:	inc    eax
  41a78d:	sbb    al,0xcd
  41a78f:	nop
  41a790:	out    0x22,al
  41a792:	jns    0x41a76c
  41a794:	aad    0x26
  41a796:	and    edx,ecx
  41a798:	or     ch,bl
  41a79a:	mov    al,ch
  41a79c:	xor    edx,0xffffffed
  41a79f:	xor    DWORD PTR [edx+0x43e4624d],esi
  41a7a5:	addr16 ret 0xcf08
  41a7a9:	dec    esp
  41a7aa:	add    BYTE PTR [edx-0x23663dfc],0x6a
  41a7b1:	dec    ebx
  41a7b2:	mov    edx,0xc59c9d00
  41a7b7:	inc    eax
  41a7b8:	pop    edx
  41a7b9:	mov    ecx,0xafb8203e
  41a7be:	fucomp st(0)
  41a7c0:	adc    al,bl
  41a7c2:	cmp    DWORD PTR [ebp+0x7],0x41
  41a7c6:	xlat   BYTE PTR ds:[ebx]
  41a7c7:	xchg   esp,eax
  41a7c8:	jp     0x41a7ee
  41a7ca:	xchg   ecx,eax
  41a7cb:	adc    al,0xe0
  41a7cd:	jp     0x41a7a4
  41a7cf:	repnz xchg ecx,eax
  41a7d1:	inc    ecx
  41a7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7d3:	add    dl,BYTE PTR [ebx+0x4]
  41a7d6:	xlat   BYTE PTR ds:[ebx]
  41a7d7:	jmp    0xd7b9:0x2ba7ffd1
  41a7de:	cmp    eax,0xfee74423
  41a7e3:	test   DWORD PTR [esi+edi*1+0x71fc329f],ecx
  41a7ea:	pop    ecx
  41a7eb:	jmp    0xca03ac3d
  41a7f0:	jmp    0x41a7eb
  41a7f2:	cmp    esi,edi
  41a7f4:	out    dx,al
  41a7f5:	adc    esi,DWORD PTR ds:0x8cf6d3b2
  41a7fb:	enter  0x1c96,0xab
  41a7ff:	les    edi,FWORD PTR [esi-0x7140d719]
  41a805:	mul    edx
  41a807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a808:	mov    dh,0x3
  41a80a:	or     al,0xd0
  41a80c:	sub    esp,eax
  41a80e:	test   DWORD PTR [ecx-0x449e61b0],0xe8be678
  41a818:	mov    gs,ecx
  41a81a:	cmp    ebp,DWORD PTR [edi+ebp*8-0x56681f38]
  41a821:	sar    BYTE PTR [edi-0x4b5e9f59],cl
  41a827:	dec    edi
  41a829:	dec    esp
  41a82a:	call   0x5eb50d3f
  41a82f:	xchg   ecx,eax
  41a830:	push   edx
  41a831:	cmp    ah,BYTE PTR [esi]
  41a833:	push   ecx
  41a834:	jae    0x41a8ab
  41a836:	shl    DWORD PTR ds:0xa055ea4b,0x66
  41a83d:	loop   0x41a8b5
  41a83f:	cmc    
  41a840:	ins    DWORD PTR es:[edi],dx
  41a841:	mov    gs,WORD PTR [edx-0x6a76ee5f]
  41a847:	mov    al,0x7e
  41a849:	xor    eax,0xacc1adeb
  41a84e:	xor    dl,dh
  41a850:	clc    
  41a851:	add    ebx,DWORD PTR [edx+0x1d]
  41a854:	jnp    0x41a8b6
  41a856:	into   
  41a857:	sub    edx,edx
  41a859:	jle    0x41a870
  41a85b:	xor    eax,0x2c798d1e
  41a860:	ds pop es
  41a862:	adc    cl,al
  41a864:	sbb    al,BYTE PTR [edi+0x5091f133]
  41a86a:	cli    
  41a86b:	dec    edi
  41a86c:	hlt    
  41a86d:	inc    ebp
  41a86e:	aas    
  41a86f:	jmp    DWORD PTR [ebp-0x3c1e5ef0]
  41a875:	xlat   BYTE PTR ds:[ebx]
  41a876:	jo     0x41a8b0
  41a878:	adc    cl,BYTE PTR ds:0xe3fa4401
  41a87e:	and    DWORD PTR [esi-0x4cb312bd],0xffffffee
  41a885:	ins    BYTE PTR es:[edi],dx
  41a886:	clc    
  41a887:	mov    ah,0xdb
  41a889:	xor    eax,0xd59b1c54
  41a88e:	inc    eax
  41a88f:	popa   
  41a890:	push   ds
  41a891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a892:	mov    BYTE PTR [ebp+eax*4+0x40e63739],cl
  41a899:	aas    
  41a89a:	div    esi
  41a89c:	push   ebx
  41a89d:	rol    DWORD PTR [eax+ebp*2+0x3d],cl
  41a8a1:	mov    WORD PTR [ecx+0x4ac6d11f],?
  41a8a7:	(bad)  
  41a8a8:	test   DWORD PTR [edi],edi
  41a8aa:	leave  
  41a8ab:	test   eax,0xdc2116e0
  41a8b0:	(bad)  
  41a8b1:	add    al,0x20
  41a8b3:	lea    eax,[ebx+0x5d]
  41a8b6:	or     ebp,ecx
  41a8b8:	and    cl,0xd0
  41a8bb:	xchg   esp,eax
  41a8bc:	push   eax
  41a8bd:	ret    
  41a8be:	jg     0x41a93c
  41a8c0:	iret   
  41a8c1:	jae    0x41a941
  41a8c3:	loope  0x41a85d
  41a8c5:	sbb    DWORD PTR [esi],ebx
  41a8c7:	inc    ebp
  41a8c8:	pushf  
  41a8c9:	test   BYTE PTR [eax+0x32f11d81],bl
  41a8cf:	jmp    0x22b3eee8
  41a8d4:	pop    es
  41a8d5:	imul   eax,DWORD PTR [edi],0x54f69fad
  41a8db:	sub    eax,0x7f904aa3
  41a8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e1:	stc    
  41a8e2:	stc    
  41a8e3:	sar    dl,1
  41a8e5:	dec    ebx
  41a8e6:	and    bh,BYTE PTR [ecx+eax*1]
  41a8e9:	popf   
  41a8ea:	lds    eax,FWORD PTR ds:0xf1172052
  41a8f0:	jmp    0x8542350d
  41a8f5:	xor    eax,0x4728dd08
  41a8fa:	out    dx,al
  41a8fb:	xchg   edx,eax
  41a8fc:	fdiv   QWORD PTR [ebp-0x6b]
  41a8ff:	xchg   DWORD PTR [eax+0x5],ebp
  41a902:	repnz mov esp,0x8e6f574b
  41a908:	push   ebp
  41a909:	jmp    0x3457054
  41a90e:	mov    BYTE PTR [edi+0x100721dc],al
  41a914:	push   cs
  41a915:	dec    esi
  41a916:	pop    es
  41a917:	sbb    DWORD PTR [edi-0x1a13efc7],ecx
  41a91d:	jg     0x41a8de
  41a91f:	cld    
  41a920:	jns    0x41a972
  41a922:	and    bl,BYTE PTR [eax-0x7bf2f13d]
  41a928:	ret    0xb20d
  41a92b:	cmc    
  41a92c:	push   ecx
  41a92d:	inc    edx
  41a92e:	mov    ebx,0xeba247f8
  41a933:	cli    
  41a934:	rol    ecx,cl
  41a936:	(bad)  
  41a937:	adc    BYTE PTR [edx+0x6d],ah
  41a93a:	out    dx,eax
  41a93b:	cmp    DWORD PTR [edi-0x3f527737],ebx
  41a941:	js     0x41a90a
  41a943:	mov    ds:0x9d8919e2,eax
  41a948:	sub    edi,DWORD PTR [ebp+0xf]
  41a94b:	jne    0x41a9bf
  41a94d:	jecxz  0x41a92d
  41a94f:	in     al,dx
  41a950:	xchg   esp,eax
  41a951:	lock nop
  41a953:	jge    0x41a938
  41a955:	pop    esi
  41a956:	arpl   WORD PTR [ecx+eiz*2-0x6a],si
  41a95a:	dec    edi
  41a95b:	pushf  
  41a95c:	jmp    0xfa80:0x79fb7ca0
  41a963:	pop    es
  41a964:	push   ds
  41a965:	dec    ecx
  41a966:	imul   DWORD PTR [ecx+0xd]
  41a969:	ficomp WORD PTR [ebx+ebx*1]
  41a96c:	sti    
  41a96d:	mov    ds:0x8ab31b0,eax
  41a972:	out    dx,al
  41a973:	xchg   DWORD PTR [edi+0xc10732c],ebx
  41a979:	(bad)  
  41a97a:	int3   
  41a97b:	xor    BYTE PTR [ebx+ebp*4+0x1aedbace],cl
  41a982:	and    DWORD PTR [eax],0xffffff96
  41a985:	jo     0x41a96d
  41a987:	aam    0x93
  41a989:	es dec esi
  41a98b:	push   ebx
  41a98c:	push   ecx
  41a98d:	push   edx
  41a98e:	test   DWORD PTR [edi+0x9],ebx
  41a991:	ror    BYTE PTR [ecx],cl
  41a993:	pop    eax
  41a994:	xchg   edx,eax
  41a995:	mov    ebp,0xfed8e647
  41a99a:	clc    
  41a99b:	mov    dl,0xf2
  41a99d:	retf   
  41a99e:	loopne 0x41a961
  41a9a0:	xor    BYTE PTR [edx-0x67],0xdd
  41a9a4:	adc    al,0xa8
  41a9a6:	in     al,0xfe
  41a9a8:	cmp    eax,0x66854596
  41a9ad:	ficom  WORD PTR [ebx-0x72]
  41a9b0:	mov    bl,0x6d
  41a9b2:	sbb    eax,esp
  41a9b4:	dec    ebp
  41a9b5:	cwde   
  41a9b6:	jg     0x41a9bb
  41a9b8:	mov    ds,WORD PTR [esi-0x35]
  41a9bb:	inc    ecx
  41a9bc:	out    0xcd,eax
  41a9be:	mov    ecx,0xb1b22439
  41a9c3:	dec    ebx
  41a9c4:	jmp    0x41a9f0
  41a9c6:	mov    eax,ds:0xf08c2e32
  41a9cb:	pop    edx
  41a9cc:	pushf  
  41a9cd:	xchg   esi,eax
  41a9ce:	xchg   edx,eax
  41a9cf:	into   
  41a9d0:	loopne 0x41a9f9
  41a9d2:	adc    al,0x3a
  41a9d4:	hlt    
  41a9d5:	adc    eax,0x524e6570
  41a9da:	push   cs
  41a9db:	dec    ebp
  41a9dc:	ds test al,0xfe
  41a9df:	outs   dx,DWORD PTR ds:[esi]
  41a9e0:	push   ebx
  41a9e1:	mov    edx,0x8bd73f3c
  41a9e6:	int    0xb8
  41a9e8:	push   edx
  41a9e9:	and    esp,DWORD PTR [ecx]
  41a9eb:	jbe    0x41a9c8
  41a9ed:	pop    ebx
  41a9ee:	das    
  41a9ef:	lods   eax,DWORD PTR ds:[esi]
  41a9f0:	int3   
  41a9f1:	gs repz mov edx,gs
  41a9f5:	jno    0x41a9da
  41a9f7:	add    bh,BYTE PTR [ecx]
  41a9f9:	std    
  41a9fa:	xor    esi,edx
  41a9fc:	xor    bl,bl
  41a9fe:	aad    0xeb
  41aa00:	pushf  
  41aa01:	dec    esi
  41aa02:	dec    eax
  41aa03:	push   edi
  41aa04:	(bad)  
  41aa05:	dec    ebp
  41aa06:	div    cl
  41aa08:	push   es
  41aa09:	and    BYTE PTR [eax+ebp*1],ah
  41aa0c:	mov    edx,ecx
  41aa0e:	je     0x41aa3d
  41aa10:	jle    0x41a9fe
  41aa12:	ja     0x41a9d9
  41aa14:	and    BYTE PTR [ebp-0xd],dl
  41aa17:	(bad)  
  41aa19:	jmp    0x41aa5e
  41aa1b:	pop    edi
  41aa1c:	dec    ebx
  41aa1d:	shr    BYTE PTR [esi-0x4b],cl
  41aa20:	xchg   BYTE PTR [eax-0x6e11f2ee],bh
  41aa26:	push   cs
  41aa27:	in     al,0x6f
  41aa29:	xchg   edx,eax
  41aa2a:	sub    esi,DWORD PTR [ecx]
  41aa2c:	sub    bl,BYTE PTR [edi-0x483fedb9]
  41aa32:	adc    BYTE PTR [edx+ebp*4],ch
  41aa35:	std    
  41aa36:	push   0xffffffec
  41aa38:	call   ecx
  41aa3a:	gs into 
  41aa3c:	and    edx,DWORD PTR ds:0x3bab69f1
  41aa42:	jg     0x41aa2f
  41aa44:	mov    ebx,0x1f44c97c
  41aa49:	add    edx,DWORD PTR [edx+0x13]
  41aa4c:	out    0x77,al
  41aa4e:	pop    esi
  41aa4f:	pushf  
  41aa50:	jecxz  0x41a9eb
  41aa52:	sbb    al,0x29
  41aa54:	mov    dh,0x4c
  41aa56:	pop    edi
  41aa57:	mov    cl,0x63
  41aa59:	lahf   
  41aa5a:	(bad)  
  41aa5b:	lods   al,BYTE PTR ds:[esi]
  41aa5c:	jb     0x41aa95
  41aa5e:	(bad)  
  41aa5f:	push   ds
  41aa60:	aas    
  41aa61:	ja     0x41aa22
  41aa63:	xor    eax,0xf31a7dc8
  41aa68:	arpl   WORD PTR [eax+0x6f9b98f5],ax
  41aa6e:	push   0x49134a04
  41aa73:	cmp    ebx,esi
  41aa75:	xchg   DWORD PTR [edi+ebp*4-0x26bc41b6],edx
  41aa7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa7d:	jno    0x41aa9a
  41aa7f:	pop    edi
  41aa80:	mov    dl,0x1f
  41aa82:	leave  
  41aa83:	lods   eax,DWORD PTR ds:[esi]
  41aa84:	adc    edi,DWORD PTR [edx+0x44]
  41aa87:	cli    
  41aa88:	jne    0x41aa67
  41aa8a:	stc    
  41aa8b:	into   
  41aa8c:	xor    ah,bh
  41aa8e:	sbb    cl,BYTE PTR [edi]
  41aa90:	adc    cl,bh
  41aa92:	rol    DWORD PTR [esi-0x56],1
  41aa95:	cmp    WORD PTR [eax-0x4d0dc808],cx
  41aa9c:	xchg   ebx,eax
  41aa9d:	push   ss
  41aa9e:	test   DWORD PTR [esi+0x419c8a92],ebp
  41aaa4:	and    DWORD PTR [esi],ecx
  41aaa6:	or     dl,BYTE PTR [esp+edx*8+0x20]
  41aaaa:	and    eax,0xef1e8c24
  41aaaf:	loop   0x41ab01
  41aab1:	or     al,0x2f
  41aab3:	test   BYTE PTR [edi],ch
  41aab5:	cwde   
  41aab6:	sbb    ch,BYTE PTR [ebx]
  41aab8:	inc    eax
  41aab9:	icebp  
  41aaba:	mul    DWORD PTR [ebp+eax*8-0x6bbe9a97]
  41aac1:	jnp    0x41aa50
  41aac3:	or     DWORD PTR [edx+esi*2+0x2],0xe43ddc81
  41aacb:	fild   DWORD PTR [edx-0x23]
  41aace:	push   cs
  41aacf:	adc    BYTE PTR [ebp+ecx*4-0x4013840a],bl
  41aad6:	cmp    DWORD PTR [edi+edi*4+0x33],edx
  41aada:	(bad)  
  41aadb:	sbb    eax,0xcd997950
  41aae0:	icebp  
  41aae1:	rcl    DWORD PTR [ebx],0x6b
  41aae4:	xor    edx,ecx
  41aae6:	jmp    0x4a95:0x15db95df
  41aaed:	in     al,dx
  41aaee:	push   ecx
  41aaef:	mov    ch,0x12
  41aaf1:	mov    ds:0x324ff047,al
  41aaf6:	mov    ah,0x26
  41aaf8:	fimul  DWORD PTR [esi+0x35cf6f74]
  41aafe:	mov    ch,BYTE PTR [ecx]
  41ab00:	dec    eax
  41ab01:	in     al,dx
  41ab02:	push   0x2d3df327
  41ab07:	frstor [eax-0x1]
  41ab0a:	outs   dx,BYTE PTR ds:[esi]
  41ab0b:	rol    BYTE PTR [eax-0x55],cl
  41ab0e:	mov    di,0x97f4
  41ab12:	xor    edi,DWORD PTR [edi]
  41ab14:	fistp  WORD PTR [edi]
  41ab16:	shr    eax,1
  41ab18:	daa    
  41ab19:	push   ss
  41ab1a:	mov    ebp,0xcac5e10f
  41ab1f:	sti    
  41ab20:	pushf  
  41ab21:	sub    BYTE PTR [edx],0x82
  41ab24:	in     al,dx
  41ab25:	aas    
  41ab26:	pop    ecx
  41ab27:	ret    0x2914
  41ab2a:	xchg   BYTE PTR ds:0x7e276760,cl
  41ab30:	add    BYTE PTR [ebp-0x3e],bl
  41ab33:	xor    ebp,DWORD PTR [ebx+0x18]
  41ab36:	retf   0xcc4b
  41ab39:	add    al,0x59
  41ab3b:	mov    ah,0xb9
  41ab3d:	cmp    BYTE PTR [ecx+edx*4],cl
  41ab40:	add    BYTE PTR [edi+ebx*2-0x6e],bl
  41ab44:	je     0x41ab00
  41ab46:	sub    eax,0xa3282a60
  41ab4b:	or     ah,dh
  41ab4d:	sbb    ebx,DWORD PTR [esi-0x3a02945]
  41ab53:	out    dx,eax
  41ab54:	push   ss
  41ab55:	inc    esp
  41ab56:	and    edx,DWORD PTR [ecx-0x36d877c7]
  41ab5c:	xchg   ebp,edi
  41ab5e:	aas    
  41ab5f:	into   
  41ab60:	in     eax,dx
  41ab61:	clc    
  41ab62:	icebp  
  41ab63:	push   es
  41ab64:	data16 mov bl,0x5e
  41ab67:	jmp    0x61a0:0x12ddd481
  41ab6e:	lods   al,BYTE PTR ds:[esi]
  41ab6f:	jmp    0x6d0b2db8
  41ab74:	fwait
  41ab75:	mov    ecx,0x3a9bde1a
  41ab7a:	scas   eax,DWORD PTR es:[edi]
  41ab7b:	jmp    0x41ab6b
  41ab7d:	gs test al,0x6
  41ab80:	ins    BYTE PTR es:[edi],dx
  41ab81:	mov    ecx,0x1fd46d31
  41ab86:	loop   0x41ab59
  41ab88:	add    al,0x77
  41ab8a:	xchg   ebp,eax
  41ab8b:	imul   edx,esi,0x4d
  41ab8e:	mov    ah,0xae
  41ab90:	jmp    0x41ac00
  41ab92:	and    eax,0xbcf0e5c0
  41ab97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab98:	mov    al,0xd5
  41ab9a:	test   DWORD PTR [edx-0x2c10023b],eax
  41aba0:	cmp    bh,BYTE PTR [esi+0x74]
  41aba3:	popf   
  41aba4:	jp     0x41abae
  41aba6:	push   edx
  41aba7:	sbb    bh,0x57
  41abaa:	inc    esp
  41abab:	jo     0x41ab47
  41abad:	outs   dx,DWORD PTR ds:[esi]
  41abae:	call   0xe3c5:0x6ec95f61
  41abb5:	fild   DWORD PTR [ebx-0x53]
  41abb8:	out    dx,al
  41abb9:	(bad)  
  41abba:	cld    
  41abbb:	repz popf 
  41abbd:	xchg   esi,eax
  41abbe:	daa    
  41abbf:	xor    DWORD PTR [eax],ecx
  41abc1:	test   al,0x71
  41abc3:	mov    al,ds:0xa310b9e6
  41abc8:	pusha  
  41abc9:	sub    al,BYTE PTR [edx]
  41abcb:	push   ebx
  41abcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abcd:	mov    ah,0x3e
  41abcf:	pop    es
  41abd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abd1:	jge    0x41abb9
  41abd3:	mov    ecx,0x98c74faf
  41abd8:	iret   
  41abd9:	(bad)  
  41abda:	lds    ebx,FWORD PTR [ecx-0xf40cae5]
  41abe0:	mov    dl,0xa7
  41abe2:	xchg   edi,eax
  41abe3:	jecxz  0x41abca
  41abe5:	call   0x7185:0xb7527b4e
  41abec:	mov    edi,DWORD PTR [edx+0x40]
  41abef:	mov    edx,0xe804dce3
  41abf4:	pop    ebx
  41abf5:	jae    0x41ac38
  41abf7:	push   ecx
  41abf8:	out    dx,al
  41abf9:	fdivr  st(4),st
  41abfb:	push   es
  41abfc:	lods   eax,DWORD PTR ds:[esi]
  41abfd:	cmp    edx,ebp
  41abff:	push   edi
  41ac00:	mov    eax,ds:0x57b330e6
  41ac05:	jbe    0x41ac38
  41ac07:	jl     0x41ac16
  41ac09:	(bad)  
  41ac0a:	call   0x83d9:0x2365cd70
  41ac11:	pop    edi
  41ac12:	xor    BYTE PTR ds:0x7f53b67a,al
  41ac18:	hlt    
  41ac19:	and    BYTE PTR [ebx],0x7f
  41ac1c:	xor    ah,BYTE PTR [edx]
  41ac1e:	add    eax,0x1624e30f
  41ac23:	dec    edi
  41ac24:	or     ecx,DWORD PTR [edi+esi*1+0x37]
  41ac28:	pop    ss
  41ac29:	in     eax,dx
  41ac2a:	add    BYTE PTR [esi],ch
  41ac2c:	xor    BYTE PTR [ebx-0x6d666b0b],cl
  41ac32:	sub    edx,DWORD PTR [edx-0x1b165977]
  41ac38:	gs xchg esp,eax
  41ac3a:	call   0xdf6e:0x1ef2a2c4
  41ac41:	xlat   BYTE PTR ds:[ebx]
  41ac42:	pop    eax
  41ac43:	cmp    eax,0xee977a00
  41ac48:	sub    bh,al
  41ac4a:	cli    
  41ac4b:	adc    BYTE PTR [edi],bl
  41ac4d:	fwait
  41ac4e:	mov    DWORD PTR [eax+0x61ad1a71],eax
  41ac54:	(bad)  
  41ac56:	xchg   DWORD PTR [ebx+0x78],esi
  41ac59:	dec    esi
  41ac5a:	nop
  41ac5b:	repnz add cl,BYTE PTR [edx-0x24]
  41ac5f:	sub    BYTE PTR [ebp-0x4746f496],ch
  41ac65:	pushf  
  41ac66:	imul   BYTE PTR [edx]
  41ac68:	dec    ecx
  41ac69:	inc    edx
  41ac6a:	popa   
  41ac6b:	jb     0x41acbd
  41ac6d:	lock bound esi,QWORD PTR [eax+edi*4+0x2047a143]
  41ac75:	or     BYTE PTR [edi+ecx*1+0x3158fdb0],bh
  41ac7c:	jns    0x41acd2
  41ac7e:	popa   
  41ac7f:	je     0x41ac9c
  41ac81:	sbb    ah,BYTE PTR [ebx+0x35c4329a]
  41ac87:	pop    ebx
  41ac88:	leave  
  41ac89:	mov    bh,0xf8
  41ac8b:	into   
  41ac8c:	bound  edx,QWORD PTR [ecx+0x16]
  41ac8f:	std    
  41ac90:	outs   dx,BYTE PTR ds:[esi]
  41ac91:	sbb    edx,DWORD PTR [esi]
  41ac93:	fcomp  DWORD PTR gs:[ecx-0x4b]
  41ac97:	mov    esp,cs
  41ac99:	mov    ebx,0xadc35d56
  41ac9e:	push   ds
  41ac9f:	xlat   BYTE PTR ds:[ebx]
  41aca0:	stos   DWORD PTR es:[edi],eax
  41aca1:	xor    eax,DWORD PTR es:[edx-0x4013761c]
  41aca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aca9:	mov    bl,0xec
  41acab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acac:	rcl    DWORD PTR [esi-0x6],cl
  41acaf:	pop    ebx
  41acb0:	(bad)  
  41acb1:	lea    edx,[edi]
  41acb3:	aam    0x82
  41acb5:	loop   0x41acfc
  41acb7:	xchg   DWORD PTR [esi+0x7e],esp
  41acba:	fadd   DWORD PTR [eax+0x1a]
  41acbd:	int    0x9f
  41acbf:	sbb    cl,dh
  41acc1:	mov    ebp,0x2ed39419
  41acc6:	push   ebx
  41acc7:	ins    DWORD PTR es:[edi],dx
  41acc8:	leave  
  41acc9:	je     0x41ad2f
  41accb:	fnstsw WORD PTR [ebx-0x53]
  41acce:	cmp    DWORD PTR [eax],eax
  41acd0:	popf   
  41acd1:	mov    esi,0xe58f51ea
  41acd6:	(bad)  
  41acd7:	cmp    DWORD PTR [ecx],eax
  41acd9:	xor    eax,0x38007db8
  41acde:	add    eax,0xe67af620
  41ace3:	xor    DWORD PTR es:[edi-0x32],0xc92cd71b
  41aceb:	pop    ebx
  41acec:	adc    bh,BYTE PTR [ebx-0x18]
  41acef:	imul   esp,DWORD PTR [esi+0x4340b640],0x6ada183f
  41acf9:	and    al,0x9b
  41acfb:	push   ds
  41acfc:	stos   DWORD PTR es:[edi],eax
  41acfd:	sbb    bl,BYTE PTR [ebp+0x2]
  41ad00:	repz sub eax,0x162c62f7
  41ad06:	fidivr DWORD PTR [esi+0x452870e0]
  41ad0c:	test   al,0xb1
  41ad0e:	cmp    DWORD PTR [esi],0xadd08d2d
  41ad14:	cmp    ah,bh
  41ad16:	xor    cl,bl
  41ad18:	adc    esi,DWORD PTR [ebp+0x35]
  41ad1b:	xor    al,0x37
  41ad1d:	xlat   BYTE PTR ds:[ebx]
  41ad1e:	push   0x6e303147
  41ad23:	jmp    0x9d0acb88
  41ad28:	mov    edi,esp
  41ad2a:	adc    BYTE PTR ds:0x2a79e37f,ah
  41ad30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad31:	or     ecx,ebx
  41ad33:	sub    dl,BYTE PTR [esi-0x4c]
  41ad36:	mov    cl,0xa
  41ad38:	lea    ebp,ds:0x8c347848
  41ad3e:	sbb    eax,edi
  41ad40:	nop
  41ad41:	pop    ebx
  41ad42:	add    esp,DWORD PTR [ecx-0x1c]
  41ad45:	inc    ax
  41ad47:	push   ebp
  41ad48:	mov    ebp,0x2c740c3e
  41ad4d:	mov    DWORD PTR [eax],ebx
  41ad4f:	or     ah,dh
  41ad51:	arpl   WORD PTR [ebp+0x4b],bx
  41ad54:	je     0x41adc7
  41ad56:	pop    ecx
  41ad57:	aam    0x4
  41ad59:	inc    ebx
  41ad5a:	cmp    BYTE PTR [eax-0x5957e0f3],ah
  41ad60:	out    0x82,eax
  41ad62:	adc    ebp,DWORD PTR [esi-0x3d]
  41ad65:	pcmpeqd mm5,QWORD PTR [edx+esi*4]
  41ad69:	jno    0x41ad95
  41ad6b:	and    DWORD PTR [esp+eax*4-0x2c],esi
  41ad6f:	mov    ds:0xd62fefda,eax
  41ad74:	(bad)  
  41ad75:	stc    
  41ad76:	aas    
  41ad77:	js     0x41adf0
  41ad79:	js     0x41ad15
  41ad7b:	stos   DWORD PTR es:[edi],eax
  41ad7c:	fs sub eax,0x314a3fac
  41ad82:	jno    0x41ad64
  41ad84:	dec    edi
  41ad85:	jp     0x41ad66
  41ad87:	add    al,0xee
  41ad89:	adc    DWORD PTR ds:0x73cb61df,edx
  41ad8f:	loopne 0x41adea
  41ad91:	in     al,dx
  41ad92:	not    BYTE PTR [eax+0x1a42ec19]
  41ad98:	pop    ecx
  41ad99:	inc    edx
  41ad9a:	cmp    BYTE PTR [edi],bl
  41ad9c:	sub    DWORD PTR [ebx+0x6c],eax
  41ad9f:	test   BYTE PTR [ebx+ebp*2+0x3ca28bb0],ah
  41ada6:	inc    esp
  41ada7:	(bad)  
  41ada8:	out    dx,al
  41ada9:	fimul  WORD PTR [ecx+0x27]
  41adac:	pop    ebx
  41adad:	cmp    eax,0xc308d4ba
  41adb2:	nop
  41adb3:	adc    ecx,eax
  41adb5:	inc    ecx
  41adb6:	es jmp 0x2acc4ae4
  41adbc:	xchg   ebp,eax
  41adbd:	push   ss
  41adbe:	dec    esp
  41adbf:	sbb    al,0x6c
  41adc1:	mov    edx,esi
  41adc3:	cmp    ch,BYTE PTR [ebp-0x30931c84]
  41adc9:	mov    eax,0xdaef1ba6
  41adce:	mov    ch,0xff
  41add0:	push   esp
  41add1:	call   0x4cf6dfae
  41add6:	out    dx,eax
  41add7:	sahf   
  41add8:	sub    esi,DWORD PTR [edi]
  41adda:	or     eax,0x4b7e1dfa
  41addf:	mov    bl,0x4d
  41ade1:	inc    esi
  41ade2:	sub    edx,ebx
  41ade4:	jb     0x41ad99
  41ade6:	call   0x4e51:0xcd2c13ec
  41aded:	xor    eax,DWORD PTR [ecx]
  41adef:	jp     0x41ae6e
  41adf1:	dec    ebx
  41adf2:	dec    ecx
  41adf3:	sbb    DWORD PTR [esi+0x1b],edi
  41adf6:	pop    esp
  41adf7:	fdivr  DWORD PTR [edx+0x3593a236]
  41adfd:	icebp  
  41adfe:	xchg   esp,eax
  41adff:	adc    BYTE PTR [ebp-0x11554724],cl
  41ae05:	gs inc edx
  41ae07:	fdiv   DWORD PTR [edi]
  41ae09:	cmp    al,0x15
  41ae0b:	loopne 0x41ae56
  41ae0d:	popf   
  41ae0e:	xchg   ebx,eax
  41ae0f:	ins    DWORD PTR es:[edi],dx
  41ae10:	scas   al,BYTE PTR es:[edi]
  41ae11:	xchg   ebx,eax
  41ae12:	test   al,0x7b
  41ae14:	and    ah,BYTE PTR [edx]
  41ae16:	mov    ebp,0xd9241052
  41ae1b:	adc    BYTE PTR [eax+0x28],0xe0
  41ae1f:	imul   edx,edi,0xffffffe2
  41ae22:	jae    0x41adf2
  41ae24:	test   eax,0x3681b504
  41ae29:	bound  ecx,QWORD PTR [eax+0x5c]
  41ae2c:	or     BYTE PTR [edx-0x24e7bb60],bl
  41ae32:	or     ebx,DWORD PTR [esi]
  41ae34:	push   ebx
  41ae35:	out    dx,al
  41ae36:	aaa    
  41ae37:	adc    al,0xe
  41ae39:	dec    edi
  41ae3a:	arpl   WORD PTR [edx],dx
  41ae3c:	outs   dx,BYTE PTR ds:[esi]
  41ae3d:	js     0x41ade1
  41ae3f:	inc    ebp
  41ae40:	sub    esp,DWORD PTR ds:0x8e68fbc6
  41ae46:	mov    esp,0x395f9d0f
  41ae4b:	or     ch,cl
  41ae4d:	dec    edx
  41ae4e:	and    BYTE PTR [edx],bh
  41ae50:	and    al,0xa4
  41ae52:	fucomi st,st(0)
  41ae54:	push   ebx
  41ae55:	pushf  
  41ae56:	test   eax,0xb2f0a14c
  41ae5b:	(bad)  
  41ae5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae5d:	push   esp
  41ae5e:	dec    ebp
  41ae5f:	adc    eax,0x11393655
  41ae64:	es sbb dh,bl
  41ae67:	pop    ebx
  41ae68:	pop    ebp
  41ae69:	or     al,0x58
  41ae6b:	cmc    
  41ae6c:	cmp    edi,DWORD PTR [ebx+0x719ee303]
  41ae72:	fcomp  DWORD PTR ds:0x97f3df54
  41ae78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae79:	xor    BYTE PTR [edx],0xd1
  41ae7c:	dec    esp
  41ae7d:	hlt    
  41ae7e:	mov    esp,0xc0adb0d
  41ae83:	adc    ebp,DWORD PTR [ecx]
  41ae85:	push   esi
  41ae86:	xchg   esi,eax
  41ae87:	mov    al,ds:0xb432bf
  41ae8c:	rol    dl,0x4c
  41ae8f:	push   ebp
  41ae90:	daa    
  41ae91:	adc    BYTE PTR [edi+0x7fd5dae3],dh
  41ae97:	xchg   edi,eax
  41ae98:	jp     0x41ae5e
  41ae9a:	lea    ebx,[ebp+0x54a3799e]
  41aea0:	pop    es
  41aea1:	shl    BYTE PTR [ebp+0x337814bd],1
  41aea7:	push   ebp
  41aea8:	ss loope 0x41af22
  41aeab:	push   edx
  41aeac:	rol    BYTE PTR [esi],cl
  41aeae:	sahf   
  41aeaf:	test   DWORD PTR [eax],edx
  41aeb1:	add    DWORD PTR [ecx],edx
  41aeb3:	xor    DWORD PTR [edi+0x4b],edx
  41aeb6:	pop    ecx
  41aeb7:	inc    eax
  41aeb8:	jle    0x41af1a
  41aeba:	ja     0x41af00
  41aebc:	scas   eax,DWORD PTR es:[edi]
  41aebd:	add    al,0x21
  41aebf:	loopne 0x41aef9
  41aec1:	in     eax,dx
  41aec2:	loopne 0x41aeea
  41aec4:	ins    DWORD PTR es:[edi],dx
  41aec5:	xchg   esi,eax
  41aec6:	test   dl,bh
  41aec8:	aad    0x89
  41aeca:	fldcw  WORD PTR [edi-0x19263f42]
  41aed0:	cmp    ebp,DWORD PTR [esi+0x37c47879]
  41aed6:	jp     0x41aebe
  41aed8:	xchg   BYTE PTR [ecx],bh
  41aeda:	test   al,0xf1
  41aedc:	jmp    0x3384:0x12d69a35
  41aee3:	jl     0x41aef0
  41aee5:	mov    esp,0xbc5f1540
  41aeea:	out    dx,al
  41aeeb:	pop    ss
  41aeec:	stc    
  41aeed:	int3   
  41aeee:	popa   
  41aeef:	rol    esp,cl
  41aef1:	mov    cl,0x17
  41aef3:	lahf   
  41aef4:	aaa    
  41aef5:	rol    DWORD PTR [edi-0x16ca785b],0x16
  41aefc:	rol    BYTE PTR [ebp-0x78],cl
  41aeff:	xlat   BYTE PTR ds:[ebx]
  41af00:	push   cs
  41af01:	outs   dx,DWORD PTR ds:[esi]
  41af02:	mov    ch,0xf5
  41af04:	and    al,ah
  41af06:	outs   dx,BYTE PTR ds:[esi]
  41af07:	popf   
  41af08:	cmp    edi,esp
  41af0a:	jo     0x41af77
  41af0c:	mov    ah,0xcc
  41af0e:	(bad)  
  41af0f:	jp     0x41aeb1
  41af11:	retf   
  41af12:	or     ch,dh
  41af14:	aam    0xb7
  41af16:	fidiv  DWORD PTR [esi+ecx*8]
  41af19:	mov    edx,DWORD PTR [edx+ecx*8]
  41af1c:	dec    ebp
  41af1d:	dec    edi
  41af1e:	ret    0xfb21
  41af21:	add    DWORD PTR [ecx],0xc95c11b8
  41af27:	mov    ebx,0x3174c805
  41af2c:	pusha  
  41af2d:	mov    eax,0x22d7642d
  41af32:	arpl   bx,bp
  41af34:	outs   dx,DWORD PTR ds:[esi]
  41af35:	out    dx,al
  41af36:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41af38:	call   0x3b7c:0x5c84973c
  41af3f:	sub    BYTE PTR cs:[edi+0xb561a05],0x1c
  41af47:	or     al,0x74
  41af49:	mov    ds:0x73240817,eax
  41af4e:	xchg   ebp,eax
  41af4f:	or     esi,edi
  41af51:	dec    eax
  41af52:	call   FWORD PTR [edx-0x45]
  41af55:	sbb    DWORD PTR [ebx+esi*2+0x40],ebp
  41af59:	or     eax,0x989e52dc
  41af5e:	clc    
  41af5f:	adc    BYTE PTR [eax-0x80],cl
  41af62:	inc    esi
  41af63:	(bad)  
  41af64:	xchg   edi,eax
  41af65:	jl     0x41afe0
  41af67:	adc    ah,ch
  41af69:	jecxz  0x41aeeb
  41af6b:	adc    eax,0xf6563815
  41af70:	mov    edi,0xe7352ce2
  41af75:	scas   eax,DWORD PTR es:[edi]
  41af76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af77:	dec    esp
  41af78:	(bad)  
  41af79:	jle    0x41afaa
  41af7b:	fcmovu st,st(7)
  41af7d:	mov    eax,ds:0x5edfd6a0
  41af82:	stos   BYTE PTR es:[edi],al
  41af83:	in     al,0x2a
  41af85:	cmp    cl,BYTE PTR cs:[ebx-0x42]
  41af89:	adc    ch,BYTE PTR [edx+0x5b]
  41af8c:	out    dx,al
  41af8d:	sbb    DWORD PTR ds:[edi-0x5bfe1876],edx
  41af94:	mov    eax,ds:0x9f891759
  41af99:	push   esp
  41af9a:	mov    cl,0x54
  41af9c:	sub    al,0xd1
  41af9e:	out    dx,al
  41af9f:	pop    ss
  41afa0:	cmp    DWORD PTR ds:0xc5e6c806,edx
  41afa6:	xchg   edi,eax
  41afa7:	data16 not BYTE PTR [esp+eax*8-0x41988daa]
  41afaf:	(bad)  
  41afb0:	adc    esp,esi
  41afb2:	pusha  
  41afb3:	push   0xeeab10c3
  41afb8:	jp     0x41af45
  41afba:	adc    dl,0xbd
  41afbd:	or     DWORD PTR [esi+edx*2+0x185dafbf],0x8a627afa
  41afc8:	lods   al,BYTE PTR ds:[esi]
  41afc9:	retf   
  41afca:	or     cl,BYTE PTR [edi+0x52]
  41afcd:	mov    ?,esi
  41afcf:	adc    DWORD PTR [ebx],ebp
  41afd1:	push   0x4f
  41afd3:	jnp    0x41b006
  41afd5:	sub    al,0x22
  41afd7:	mov    ebx,0x36273f05
  41afdc:	jo     0x41af5f
  41afde:	ins    BYTE PTR es:[edi],dx
  41afdf:	sub    BYTE PTR [eax-0x50],ah
  41afe2:	jmp    0xc402bbb7
  41afe7:	imul   ecx,DWORD PTR [edi-0x43326342],0xdfe0df88
  41aff1:	pop    ds
  41aff2:	sbb    eax,0xbec20576
  41aff7:	int3   
  41aff8:	test   eax,0xe8567d70
  41affd:	(bad)  
  41affe:	pop    edx
  41afff:	cmp    dl,BYTE PTR [eax-0x50204db3]
  41b005:	fnsave [ecx-0x43]
  41b008:	cmp    ecx,esp
  41b00a:	adc    al,BYTE PTR [ecx-0x37]
  41b00d:	enter  0x6f8c,0x84
  41b011:	es sbb eax,0x2075b352
  41b017:	rcr    BYTE PTR [ebx-0xd],0xab
  41b01b:	sub    edx,DWORD PTR [edx]
  41b01d:	add    al,0xa9
  41b01f:	fmul   st,st(7)
  41b021:	add    esi,esp
  41b023:	imul   ebx,DWORD PTR [edi+eiz*2-0x12],0xb
  41b028:	sub    ah,BYTE PTR [ecx+0x3b]
  41b02b:	mov    al,ds:0x9f78769
  41b030:	xchg   ebp,eax
  41b031:	outs   dx,BYTE PTR ds:[esi]
  41b032:	mov    ebx,0x3b2fc65b
  41b037:	dec    ecx
  41b038:	pop    esp
  41b039:	adc    dl,BYTE PTR [ecx]
  41b03b:	es int3 
  41b03d:	loopne 0x41b057
  41b03f:	xor    dl,BYTE PTR [edx]
  41b041:	fsubr  DWORD PTR [edi-0x7d13bea8]
  41b047:	sub    esp,eax
  41b049:	sbb    al,0x24
  41b04b:	aaa    
  41b04c:	push   es
  41b04d:	test   DWORD PTR ds:0x97c1c687,ebp
  41b053:	and    eax,0xc9523703
  41b058:	(bad)  
  41b059:	and    esi,ebp
  41b05b:	mov    ds:0x25eda176,al
  41b060:	(bad)  [edi]
  41b062:	cli    
  41b063:	inc    ebp
  41b064:	hlt    
  41b065:	xchg   ebp,eax
  41b066:	cmc    
  41b067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b068:	inc    ebx
  41b069:	mov    cs,WORD PTR [eax+eiz*1+0x3093a9d9]
  41b070:	leave  
  41b071:	add    al,0xb2
  41b073:	adc    eax,0xb63f3ba3
  41b078:	mov    ebx,0x8be9ba6f
  41b07d:	ds lahf 
  41b07f:	inc    ebp
  41b080:	pop    edi
  41b081:	pushf  
  41b082:	(bad)  
  41b083:	pop    ebx
  41b084:	ret    
  41b085:	mov    WORD PTR [ebx+0x5d],ds
  41b088:	dec    edx
  41b089:	js     0x41b017
  41b08b:	push   edx
  41b08c:	mov    esi,0xfe90bbbf
  41b091:	pop    es
  41b092:	pop    esp
  41b093:	add    bh,dh
  41b095:	sub    DWORD PTR [eax+0x6c],esp
  41b098:	add    BYTE PTR [eax],bh
  41b09a:	sub    BYTE PTR [ecx-0x5f],bl
  41b09d:	or     DWORD PTR [ecx-0x66a977c5],0x46
  41b0a4:	dec    esp
  41b0a5:	stos   DWORD PTR es:[edi],eax
  41b0a6:	mov    BYTE PTR [eax-0x6b],0xdd
  41b0aa:	and    esp,DWORD PTR [edx+0x566a5dcf]
  41b0b0:	fnstsw WORD PTR [ecx]
  41b0b2:	sbb    DWORD PTR [eax+eax*8-0x1978255d],edx
  41b0b9:	rcl    DWORD PTR cs:[edx-0x5c],cl
  41b0bd:	cmp    al,0xf6
  41b0bf:	pop    esi
  41b0c0:	scas   al,BYTE PTR es:[edi]
  41b0c1:	aad    0xae
  41b0c3:	test   al,0x8
  41b0c5:	rol    DWORD PTR [esi+0x5d153c7d],0x7c
  41b0cc:	out    dx,eax
  41b0cd:	(bad)  
  41b0ce:	pop    ecx
  41b0cf:	pop    esi
  41b0d0:	call   0x7896:0x57dc4534
  41b0d7:	jmp    0xe80936d3
  41b0dc:	leave  
  41b0dd:	jmp    0x4cd465ae
  41b0e2:	mov    edx,0xd9c5e3ba
  41b0e7:	dec    ebx
  41b0e8:	clc    
  41b0e9:	mov    dh,0xf2
  41b0eb:	jle    0x41b081
  41b0ed:	popa   
  41b0ee:	jmp    0xb675:0x61d7aee6
  41b0f5:	rcl    DWORD PTR [ebp+0x14dd2d63],1
  41b0fb:	push   0x35
  41b0fd:	out    dx,al
  41b0fe:	dec    edx
  41b0ff:	mov    cl,dl
  41b101:	stc    
  41b102:	or     al,0xb
  41b104:	std    
  41b105:	imul   BYTE PTR [edx+0x49]
  41b108:	mov    esp,0x95385643
  41b10d:	fsubr  st,st(4)
  41b10f:	scas   eax,DWORD PTR es:[edi]
  41b110:	jl     0x41b095
  41b112:	and    eax,DWORD PTR [ebx-0x4f]
  41b115:	arpl   WORD PTR [edi],si
  41b117:	(bad)  
  41b118:	loopne 0x41b0f6
  41b11a:	xor    BYTE PTR [edx+0x4719207c],ch
  41b120:	mul    BYTE PTR [edi-0x248a1305]
  41b126:	sub    BYTE PTR ds:0x29fbe66e,ah
  41b12c:	in     al,dx
  41b12d:	rol    DWORD PTR [ecx],1
  41b12f:	jb     0x41b169
  41b131:	pop    ebp
  41b132:	in     eax,0xd3
  41b134:	fwait
  41b135:	ss je  0x41b0f7
  41b138:	and    DWORD PTR [ebx],ebp
  41b13a:	adc    dl,BYTE PTR [edx+ebp*2-0x26]
  41b13e:	fimul  WORD PTR [esi-0x7f]
  41b141:	test   al,0xf0
  41b143:	add    DWORD PTR [ecx-0x47a85415],ecx
  41b149:	aam    0x90
  41b14b:	xchg   ecx,eax
  41b14c:	out    dx,eax
  41b14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b14e:	or     ah,BYTE PTR [edx-0x6b]
  41b151:	mov    esi,0x64dd0cb6
  41b156:	xchg   esp,eax
  41b157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b158:	inc    ecx
  41b159:	and    al,0x3d
  41b15b:	sub    ah,BYTE PTR [eax-0x691c16ec]
  41b161:	xor    al,0xb1
  41b163:	sub    ecx,DWORD PTR [edx+eax*8+0x9bb99c7]
  41b16a:	repz jge 0x41b1a4
  41b16d:	add    BYTE PTR [edi],0xde
  41b170:	adc    dh,BYTE PTR [ebx]
  41b172:	and    ch,BYTE PTR [edx+0x1b]
  41b175:	mov    eax,DWORD PTR [ebp+0x48]
  41b178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b179:	call   esp
  41b17b:	adc    DWORD PTR [edx+0x3e],eax
  41b17e:	adc    DWORD PTR [ecx-0x29f1e6ca],ebx
  41b184:	push   es
  41b185:	loop   0x41b13e
  41b187:	pop    ebx
  41b188:	mov    ecx,0x3e68c36b
  41b18d:	scas   eax,DWORD PTR es:[edi]
  41b18e:	aad    0x38
  41b190:	imul   eax,DWORD PTR [eax+ebp*2],0x85281491
  41b197:	cmp    eax,0x93933b8f
  41b19c:	adc    dl,BYTE PTR [eax+ebp*2-0x73]
  41b1a0:	add    DWORD PTR [ebx+0x1a],ebx
  41b1a3:	pop    ebx
  41b1a4:	loopne 0x41b18c
  41b1a6:	div    DWORD PTR [ecx+0x45198fb3]
  41b1ac:	mov    BYTE PTR [ebx-0x80],ah
  41b1af:	mov    ch,0x4f
  41b1b1:	fs inc ebx
  41b1b3:	test   al,0x4a
  41b1b5:	and    ebx,DWORD PTR [ebx-0x70]
  41b1b8:	mov    bh,BYTE PTR [ebx]
  41b1ba:	cwde   
  41b1bb:	arpl   sp,sp
  41b1bd:	xor    bh,BYTE PTR [esi]
  41b1bf:	sar    DWORD PTR [esp+edx*1-0x66],1
  41b1c3:	(bad)  
  41b1c4:	mov    dh,0xd6
  41b1c6:	xchg   ebp,eax
  41b1c7:	add    bl,BYTE PTR [ecx-0x29966fa9]
  41b1cd:	mul    cl
  41b1cf:	jo     0x41b173
  41b1d1:	enter  0xe309,0x86
  41b1d5:	lds    edi,FWORD PTR [eax+0x1]
  41b1d8:	add    DWORD PTR [edx-0x239629fc],ecx
  41b1de:	push   ds
  41b1df:	adc    BYTE PTR [edi+edx*4],dl
  41b1e2:	or     DWORD PTR [esi-0x22],0x6bd18f9a
  41b1e9:	dec    ecx
  41b1ea:	call   FWORD PTR [edi+eax*4]
  41b1ed:	xchg   cl,bl
  41b1ef:	xchg   ebp,eax
  41b1f0:	and    dl,BYTE PTR [ebp-0x6d]
  41b1f3:	stc    
  41b1f4:	add    al,0xdf
  41b1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1f7:	push   0x2982de1d
  41b1fc:	shl    BYTE PTR [ebp-0x5eadb4a8],1
  41b202:	ds in  al,0x15
  41b205:	cmp    ch,BYTE PTR [ebx]
  41b207:	sub    ch,BYTE PTR [ebp+0x498ea0bc]
  41b20d:	lock fwait
  41b20f:	clc    
  41b210:	sar    dl,cl
  41b212:	jae    0x41b27d
  41b214:	je     0x41b210
  41b216:	fcom   DWORD PTR [edi+0x6b]
  41b219:	aaa    
  41b21a:	mov    ah,0x40
  41b21d:	mov    ds:0xb5883596,eax
  41b222:	ins    DWORD PTR es:[edi],dx
  41b223:	mov    ch,0xf9
  41b225:	jne    0x41b28d
  41b227:	cmc    
  41b228:	adc    al,0xd7
  41b22a:	int3   
  41b22b:	sub    eax,0x350e173f
  41b230:	lods   eax,DWORD PTR ds:[esi]
  41b231:	cs or  eax,0x7be7dc79
  41b237:	dec    esp
  41b238:	(bad)
  41b23b:	cmp    al,0x80
  41b23d:	scas   eax,DWORD PTR es:[edi]
  41b23e:	pushf  
  41b23f:	mov    gs,ebx
  41b241:	add    ecx,esp
  41b243:	mov    ebx,0x16c487e1
  41b248:	sbb    DWORD PTR [eax-0x2d],0x641595ac
  41b24f:	mov    dh,0x5f
  41b251:	pop    ds
  41b252:	imul   ecx,DWORD PTR [esi-0x1],0xffffffda
  41b256:	mov    bl,BYTE PTR ds:0xb26210c0
  41b25c:	adc    dl,BYTE PTR [ebp-0x6]
  41b25f:	xor    BYTE PTR [ebp-0x26],bl
  41b262:	out    0x80,al
  41b264:	dec    ebx
  41b265:	pop    es
  41b266:	inc    eax
  41b267:	cdq    
  41b268:	and    DWORD PTR [ebx],eax
  41b26a:	cmp    al,0x21
  41b26c:	pushf  
  41b26d:	xchg   esi,eax
  41b26e:	and    al,0xa2
  41b270:	cmp    al,0xcb
  41b272:	xchg   edx,eax
  41b273:	ja     0x41b2e6
  41b275:	pop    esi
  41b276:	int3   
  41b277:	mov    al,0x6a
  41b279:	out    dx,eax
  41b27a:	pop    edx
  41b27b:	repz mov ch,0x80
  41b27e:	test   BYTE PTR ds:0x7d97cf86,al
  41b284:	fucomi st,st(2)
  41b286:	push   0x21
  41b288:	rcr    DWORD PTR [eax],cl
  41b28a:	loope  0x41b22f
  41b28c:	div    DWORD PTR [edi+0x3f]
  41b28f:	add    DWORD PTR [esi],0xdffef4c5
  41b295:	repnz xchg edx,eax
  41b297:	xchg   esi,eax
  41b298:	fstp   TBYTE PTR [ebx-0xf]
  41b29b:	imul   BYTE PTR [eax-0x36e06708]
  41b2a1:	int3   
  41b2a2:	inc    eax
  41b2a3:	je     0x41b30b
  41b2a5:	shl    DWORD PTR [eax+0x188895e],1
  41b2ab:	mov    ds:0x4d22113f,eax
  41b2b0:	ret    
  41b2b1:	inc    edi
  41b2b2:	adc    edx,DWORD PTR [ecx+0x1b]
  41b2b5:	mov    ch,0x97
  41b2b7:	call   0xb827:0xe8791794
  41b2be:	mov    eax,ds:0x71158912
  41b2c3:	fldenv ds:0xb1da8905
  41b2c9:	push   0x4c8ab8f7
  41b2ce:	in     eax,0x9c
  41b2d0:	ja     0xae996621
  41b2d6:	adc    ah,ch
  41b2d8:	push   0x2c
  41b2da:	sub    BYTE PTR [edi+0x14863df6],0xdf
  41b2e1:	(bad)  
  41b2e2:	stc    
  41b2e3:	push   0xca58a69
  41b2e8:	lea    edi,[esi-0x111ab702]
  41b2ee:	mov    ebp,0xe7a07861
  41b2f3:	adc    DWORD PTR [ebp+0x278dd025],ebp
  41b2f9:	push   cs
  41b2fa:	xchg   BYTE PTR [esi+0x5f032d70],ah
  41b300:	ds mov ch,0x4d
  41b303:	outs   dx,DWORD PTR ds:[esi]
  41b304:	pop    edi
  41b305:	adc    dl,al
  41b307:	in     eax,0x38
  41b309:	bound  eax,QWORD PTR [ecx+0x1ec53ffe]
  41b30f:	mov    ds:0xc9dccf29,al
  41b314:	inc    edx
  41b315:	pop    es
  41b316:	in     al,dx
  41b317:	mov    ds,WORD PTR [edx+0x2e]
  41b31a:	popf   
  41b31b:	jp     0x41b360
  41b31d:	addr16 adc al,0xd9
  41b320:	lgs    edx,FWORD PTR [ebx+ebp*8-0x6]
  41b325:	mov    ds:0x29e51ac1,al
  41b32a:	fcomp  DWORD PTR [ebx+0x439b959f]
  41b330:	call   0x1d5:0xb46fc90f
  41b337:	add    esp,eax
  41b339:	mov    al,0x85
  41b33b:	xchg   BYTE PTR [ebx+0x48],dl
  41b33e:	test   BYTE PTR [edi],dl
  41b340:	in     al,0x80
  41b342:	mov    ds:0x99281bfd,al
  41b347:	arpl   WORD PTR ds:[edi],bp
  41b34a:	mov    edi,0x91b5f9c9
  41b34f:	scas   eax,DWORD PTR es:[edi]
  41b350:	xchg   esp,eax
  41b351:	inc    esi
  41b352:	(bad)  
  41b353:	out    0xd3,al
  41b355:	(bad)
  41b358:	popa   
  41b359:	or     esi,DWORD PTR [eax]
  41b35b:	(bad)  
  41b35c:	stc    
  41b35d:	hlt    
  41b35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b35f:	sar    BYTE PTR [ebx+0x464c7352],cl
  41b365:	cmp    eax,0x161a80d
  41b36a:	xor    bh,BYTE PTR [eax-0xa16124f]
  41b370:	sub    eax,0xd270ab1d
  41b375:	fisttp WORD PTR [ebx-0x6a]
  41b378:	push   edi
  41b379:	xchg   esp,eax
  41b37a:	ret    
  41b37b:	cdq    
  41b37c:	push   0x77553419
  41b381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b382:	into   
  41b383:	aad    0xd0
  41b385:	push   edx
  41b386:	push   cs
  41b387:	pop    ss
  41b388:	jmp    0x41b377
  41b38a:	push   esi
  41b38b:	bound  edx,QWORD PTR [esi]
  41b38d:	or     BYTE PTR [ecx+0x42252eca],bh
  41b393:	call   0x1b6:0xb0f57c6b
  41b39a:	cld    
  41b39b:	stos   BYTE PTR es:[edi],al
  41b39c:	in     al,0x84
  41b39e:	push   sp
  41b3a0:	mov    ?,WORD PTR [ecx]
  41b3a2:	aad    0xcd
  41b3a4:	lods   eax,DWORD PTR ds:[esi]
  41b3a5:	iret   
  41b3a6:	and    al,0xe4
  41b3a8:	mov    ch,0xf8
  41b3aa:	rcl    eax,0x33
  41b3ad:	jmp    0xdab38173
  41b3b2:	inc    esi
  41b3b3:	mov    ds:0x32deb2cf,eax
  41b3b8:	stos   DWORD PTR es:[edi],eax
  41b3b9:	cmp    bl,dh
  41b3bb:	dec    ebx
  41b3bc:	pushf  
  41b3bd:	ins    BYTE PTR es:[edi],dx
  41b3be:	sub    eax,0x14a605b2
  41b3c3:	inc    eax
  41b3c4:	es call 0x4899:0xab4c5a47
  41b3cc:	push   ss
  41b3cd:	mov    ch,ah
  41b3cf:	or     esi,DWORD PTR [ecx-0x636e77d0]
  41b3d5:	scas   al,BYTE PTR es:[edi]
  41b3d6:	push   esp
  41b3d7:	sub    DWORD PTR [edi-0x1d],0xfffffff6
  41b3db:	and    dl,BYTE PTR [edx+esi*2+0x4]
  41b3df:	xlat   BYTE PTR ds:[ebx]
  41b3e0:	in     eax,0x68
  41b3e2:	jbe    0x41b3ef
  41b3e4:	rol    BYTE PTR [edx+0x6edfd51f],1
  41b3ea:	stc    
  41b3eb:	lods   al,BYTE PTR ds:[esi]
  41b3ec:	add    eax,ecx
  41b3ee:	lods   eax,DWORD PTR ds:[esi]
  41b3ef:	daa    
  41b3f0:	outs   dx,BYTE PTR ds:[esi]
  41b3f1:	ficom  WORD PTR [esi+0x11539959]
  41b3f7:	xlat   BYTE PTR ds:[ebx]
  41b3f8:	mov    ebx,0xbb62caff
  41b3fd:	cs (bad) 
  41b3ff:	fcmove st,st(7)
  41b401:	sub    ebx,esi
  41b403:	adc    dh,ch
  41b405:	jno    0x41b3a1
  41b407:	jae    0x41b402
  41b409:	mov    eax,ds:0x3769193f
  41b40e:	addr16 mov edi,0x6f6a17a3
  41b414:	dec    edi
  41b415:	imul   edx,edi,0xffffffdd
  41b418:	cwde   
  41b419:	inc    edx
  41b41a:	cmp    eax,0x4c438293
  41b41f:	stos   BYTE PTR es:[edi],al
  41b420:	jo     0x41b3c3
  41b422:	adc    eax,DWORD PTR [edx-0x14]
  41b425:	mov    ecx,0x6e1dc3db
  41b42a:	shl    esp,cl
  41b42c:	sub    dh,ch
  41b42e:	cmp    BYTE PTR [edi+0xc66c54],dl
  41b434:	out    0x69,eax
  41b436:	dec    eax
  41b437:	pop    esp
  41b438:	sub    DWORD PTR [edi-0x8],ebx
  41b43b:	adc    edx,DWORD PTR [eax+esi*2-0x56561cdd]
  41b442:	sub    eax,0x98eb0c61
  41b447:	in     eax,0xbf
  41b449:	jmp    0x4aa9:0x447cf720
  41b450:	sub    DWORD PTR [ebp-0x135b95fc],0xffffffbf
  41b457:	cld    
  41b458:	call   0x9893:0x863deb70
  41b45f:	add    al,0x6e
  41b461:	ja     0x41b4df
  41b463:	cmp    ebx,DWORD PTR [esi-0x4886274b]
  41b469:	jns    0x41b403
  41b46b:	fld    QWORD PTR [esi+0x165de113]
  41b471:	jne    0x41b422
  41b473:	sti    
  41b474:	or     bl,dh
  41b476:	pop    edx
  41b477:	(bad)  
  41b478:	retf   0x6d00
  41b47b:	je     0x41b4f6
  41b47d:	sbb    BYTE PTR [ecx-0x3042c46a],bh
  41b483:	sub    edi,DWORD PTR [ebx-0x6]
  41b486:	fsubr  st,st(1)
  41b488:	faddp  st(6),st
  41b48a:	sbb    BYTE PTR [edx],cl
  41b48c:	jp     0x41b4db
  41b48e:	test   al,0x45
  41b490:	je     0x41b4aa
  41b492:	xchg   esi,eax
  41b493:	cli    
  41b494:	add    al,0xbb
  41b496:	or     edx,ecx
  41b498:	add    BYTE PTR [edx-0x8b5508c],bl
  41b49e:	cmp    edx,0xd351d762
  41b4a4:	xchg   dx,ax
  41b4a6:	mov    eax,0x59349bb1
  41b4ab:	out    0x30,al
  41b4ad:	gs pop es
  41b4af:	sub    al,0x9d
  41b4b1:	fidiv  WORD PTR [ebx]
  41b4b3:	mov    bl,0x72
  41b4b5:	pop    esp
  41b4b6:	nop
  41b4b7:	sbb    eax,0xfd017065
  41b4bc:	retf   
  41b4bd:	imul   esi,esp,0x18
  41b4c0:	stos   DWORD PTR es:[edi],eax
  41b4c1:	sar    BYTE PTR [edx+0x2fa51fe],0x2
  41b4c8:	test   esp,esi
  41b4ca:	aad    0x19
  41b4cc:	call   0xd2b3:0x43f01b54
  41b4d3:	add    ebx,DWORD PTR [edx+eiz*1-0x4e]
  41b4d7:	jl     0x41b539
  41b4d9:	jl     0x41b523
  41b4db:	aas    
  41b4dc:	xchg   ebx,eax
  41b4dd:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4df:	jne    0x41b501
  41b4e1:	fs push ebx
  41b4e3:	dec    esp
  41b4e4:	mov    edi,0x817940bb
  41b4e9:	inc    edx
  41b4ea:	mov    esi,0x99b465ea
  41b4ef:	aas    
  41b4f0:	mov    ebp,0xd144a50
  41b4f5:	inc    edx
  41b4f6:	je     0x41b552
  41b4f8:	push   cs
  41b4f9:	add    al,0xa
  41b4fb:	(bad)  
  41b4fc:	(bad)  
  41b4fd:	cmp    esi,ebx
  41b4ff:	mov    dh,0x98
  41b501:	ins    DWORD PTR es:[edi],dx
  41b502:	inc    esp
  41b503:	call   0xaf52:0xedc85f04
  41b50a:	in     eax,dx
  41b50b:	pushf  
  41b50c:	inc    esp
  41b50d:	adc    al,0xab
  41b50f:	sub    DWORD PTR [ecx],esp
  41b511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b512:	sbb    eax,0x5405ec80
  41b517:	xchg   ecx,eax
  41b518:	(bad)  
  41b519:	pop    ecx
  41b51a:	pop    edx
  41b51b:	cwde   
  41b51c:	(bad)  
  41b51d:	cld    
  41b51e:	loop   0x41b52d
  41b520:	call   0x5afb0829
  41b525:	mov    al,0x78
  41b527:	mov    ecx,0x85154cb3
  41b52c:	jmp    0x41b542
  41b52e:	mov    cl,0x72
  41b530:	mov    al,ds:0xdd01d17f
  41b535:	sub    DWORD PTR [ebx-0x7c399d61],0xc0cbb654
  41b53f:	pop    ecx
  41b540:	int    0x56
  41b542:	xor    al,0x8f
  41b544:	pop    edi
  41b545:	in     al,0x1e
  41b547:	lock je 0x41b5c9
  41b54a:	out    0x27,al
  41b54c:	push   ds
  41b54d:	into   
  41b54e:	push   esi
  41b54f:	dec    edx
  41b550:	sub    eax,0xb575b004
  41b555:	sbb    eax,0xb88a6549
  41b55a:	inc    ebx
  41b55b:	or     BYTE PTR [ecx-0x4a],ah
  41b55e:	sbb    DWORD PTR [edx],0x40
  41b561:	xlat   BYTE PTR ds:[ebx]
  41b562:	pop    es
  41b563:	fnstenv [eax+edi*2]
  41b566:	cdq    
  41b567:	inc    esi
  41b568:	scas   eax,DWORD PTR es:[edi]
  41b569:	lods   al,BYTE PTR ds:[esi]
  41b56a:	jne    0x41b5a4
  41b56c:	sbb    eax,0x806c3738
  41b571:	dec    ebp
  41b572:	scas   eax,DWORD PTR es:[di]
  41b574:	lea    edx,[edi+esi*2]
  41b577:	and    BYTE PTR [esi+eax*1],bh
  41b57a:	pop    ss
  41b57b:	dec    edi
  41b57c:	pop    ss
  41b57d:	mov    ds:0x565dc370,eax
  41b582:	jmp    0x139b:0xac31b1b1
  41b589:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b58b:	(bad)  
  41b58c:	mov    ebp,0xbedd72b0
  41b591:	rol    DWORD PTR [esi+0x60],0xd4
  41b595:	ds test al,0xd1
  41b598:	int3   
  41b599:	out    0xfe,al
  41b59b:	adc    DWORD PTR [ecx],edx
  41b59d:	push   cs
  41b59e:	adc    esi,DWORD PTR [ecx+eax*8]
  41b5a1:	xchg   BYTE PTR [ebx+0x41],cl
  41b5a4:	mov    edx,0xfcff3358
  41b5a9:	sahf   
  41b5aa:	loopne 0x41b5a4
  41b5ac:	mov    edx,0xbf481489
  41b5b1:	sub    BYTE PTR [edi],0x8e
  41b5b4:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41b5b6:	jne    0x41b5ff
  41b5b8:	outs   dx,BYTE PTR ds:[esi]
  41b5b9:	ss loope 0x41b581
  41b5bc:	pop    ss
  41b5bd:	xchg   ebx,eax
  41b5be:	pop    ds
  41b5bf:	lods   eax,DWORD PTR ds:[esi]
  41b5c0:	iret   
  41b5c1:	arpl   WORD PTR [ecx-0x4c],si
  41b5c4:	test   eax,0x3e8615d1
  41b5c9:	push   edi
  41b5ca:	push   ebx
  41b5cb:	mov    ebx,0x1180bebb
  41b5d0:	jne    0x41b59d
  41b5d2:	pop    ss
  41b5d3:	scas   eax,DWORD PTR es:[edi]
  41b5d4:	push   esp
  41b5d5:	pop    edi
  41b5d6:	sbb    cl,BYTE PTR [ebx+edx*4-0x7e]
  41b5da:	sbb    BYTE PTR [ebx],ch
  41b5dc:	(bad)  
  41b5dd:	pop    ecx
  41b5de:	(bad)  
  41b5df:	clc    
  41b5e0:	xchg   esp,eax
  41b5e1:	mov    esi,0x2039367e
  41b5e6:	and    al,BYTE PTR ds:0x1955c5e6
  41b5ec:	add    bl,BYTE PTR [eax+0x90e1e13]
  41b5f2:	push   ebx
  41b5f3:	int3   
  41b5f4:	cmp    eax,0x2030276d
  41b5f9:	in     eax,0x27
  41b5fb:	and    eax,DWORD PTR [esi-0x7ac6d7d9]
  41b601:	js     0x41b619
  41b603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b604:	hlt    
  41b605:	call   0x9ab06747
  41b60a:	cmp    bl,BYTE PTR [eax]
  41b60c:	cmp    al,0x78
  41b60e:	test   DWORD PTR [edx],0x2daf7987
  41b614:	jle    0x41b639
  41b616:	data16 cwd 
  41b619:	sub    BYTE PTR [ecx],0x7f
  41b61c:	arpl   WORD PTR [eax-0x39350925],bp
  41b622:	repnz mov bh,0x99
  41b625:	popa   
  41b626:	push   0xffffffc8
  41b628:	jno    0x41b5e2
  41b62a:	push   eax
  41b62b:	mov    dh,0xf1
  41b62d:	int3   
  41b62e:	dec    edi
  41b62f:	pop    edi
  41b630:	icebp  
  41b631:	data16 cmp al,0xa2
  41b634:	daa    
  41b635:	mov    ecx,0x4eff7d6
  41b63a:	std    
  41b63b:	fwait
  41b63c:	dec    esi
  41b63d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b63e:	push   0xffffffe8
  41b640:	pop    eax
  41b641:	arpl   sp,cx
  41b643:	out    dx,eax
  41b644:	(bad)  [ebp+0x6b4d2eb4]
  41b64a:	inc    DWORD PTR [ecx]
  41b64c:	mov    esi,DWORD PTR [edx]
  41b64e:	enter  0x2df0,0xec
  41b652:	sbb    dl,dh
  41b654:	mov    bl,0xfe
  41b656:	xor    BYTE PTR [eax-0x4d05f396],bl
  41b65c:	js     0x41b61a
  41b65e:	jl     0x41b692
  41b660:	xor    dl,BYTE PTR [eax+0x50e8c889]
  41b666:	inc    ebp
  41b667:	dec    esi
  41b668:	xchg   edx,eax
  41b669:	jg     0x41b627
  41b66b:	sbb    ebx,DWORD PTR [esi+0x70f7e4a3]
  41b671:	and    al,0xf8
  41b673:	call   0x4d4e:0x9b80aba4
  41b67a:	test   esp,ebp
  41b67c:	adc    esi,esp
  41b67e:	loope  0x41b641
  41b680:	nop
  41b681:	int3   
  41b682:	jmp    0x41b6ab
  41b684:	and    BYTE PTR [edx+0x3b8670b3],0x60
  41b68b:	mov    esi,0xae33f0a3
  41b690:	or     edx,DWORD PTR [edx]
  41b692:	mov    al,0x34
  41b694:	add    BYTE PTR [edx],0x4d
  41b697:	and    eax,0x272ee96
  41b69c:	packsswb mm0,mm5
  41b69f:	cli    
  41b6a0:	jnp    0x41b693
  41b6a2:	fld    TBYTE PTR [esi+ecx*8-0xc1ef1ea]
  41b6a9:	arpl   WORD PTR [eax+0x75],di
  41b6ac:	inc    edx
  41b6ad:	outs   dx,DWORD PTR ds:[esi]
  41b6ae:	push   esi
  41b6af:	sub    esp,0x89e6c049
  41b6b5:	cld    
  41b6b6:	mov    al,ds:0xe5606842
  41b6bb:	ins    DWORD PTR es:[edi],dx
  41b6bc:	and    al,0x19
  41b6be:	jae    0x41b686
  41b6c0:	push   0xffffffb3
  41b6c2:	inc    esi
  41b6c3:	xor    ch,BYTE PTR [esi+0x31]
  41b6c6:	popa   
  41b6c7:	mov    eax,ds:0xcb134d13
  41b6cc:	sbb    eax,0xeccc9310
  41b6d1:	push   eax
  41b6d2:	or     al,0x10
  41b6d4:	or     BYTE PTR [esp+edx*2+0x34],cl
  41b6d8:	inc    edi
  41b6d9:	loop   0x41b743
  41b6db:	dec    esi
  41b6dc:	xor    ch,BYTE PTR [edi+esi*8-0x5204419c]
  41b6e3:	sbb    eax,0x923a6fe9
  41b6e8:	and    BYTE PTR [edi+0x1],bh
  41b6eb:	daa    
  41b6ec:	(bad)  
  41b6ed:	pop    ss
  41b6ee:	loope  0x41b709
  41b6f0:	ror    BYTE PTR [esi],0x88
  41b6f3:	pop    ebx
  41b6f4:	or     al,0x19
  41b6f6:	lock pop eax
  41b6f8:	mov    ds:0xc6446c8f,eax
  41b6fd:	lods   al,BYTE PTR ds:[esi]
  41b6fe:	call   0xf88ab645
  41b703:	jmp    0x3e0d:0xe618acde
  41b70a:	xchg   BYTE PTR [eax+0x160ebb2f],dh
  41b710:	and    eax,0x3f3a53e6
  41b715:	inc    esi
  41b716:	into   
  41b717:	mov    ebx,0x42943e85
  41b71c:	in     al,dx
  41b71d:	seta   ch
  41b720:	cdq    
  41b721:	dec    edx
  41b722:	ror    edx,1
  41b724:	cdq    
  41b725:	and    BYTE PTR [edi-0x79d97a29],bl
  41b72b:	inc    ebx
  41b72c:	cwde   
  41b72d:	xchg   esi,eax
  41b72e:	push   esi
  41b72f:	jmp    0x73dd:0xaa6a4e39
  41b736:	xchg   BYTE PTR [eax+esi*2],cl
  41b739:	stc    
  41b73a:	fst    st(3)
  41b73c:	mov    edx,DWORD PTR [ebp+esi*4+0xf91e053]
  41b743:	das    
  41b744:	fdiv   DWORD PTR [edi+0x29]
  41b747:	dec    esp
  41b748:	push   edx
  41b749:	ret    0x4ea
  41b74c:	dec    ebp
  41b74d:	pushf  
  41b74e:	or     DWORD PTR [eax+0x258f8cd8],ecx
  41b754:	loop   0x41b7aa
  41b756:	outs   dx,BYTE PTR ds:[esi]
  41b757:	pop    edi
  41b758:	jp     0x41b741
  41b75a:	cli    
  41b75b:	jnp    0x41b789
  41b75d:	adc    al,0x31
  41b75f:	les    ecx,FWORD PTR [ecx+edx*4]
  41b762:	das    
  41b763:	mov    ds:0x6b6642e3,eax
  41b768:	push   0xfffffff1
  41b76a:	stos   DWORD PTR es:[edi],eax
  41b76b:	sbb    DWORD PTR [edi],edi
  41b76d:	arpl   WORD PTR [esp+eax*4-0x447ff0ac],bp
  41b774:	mov    ch,0xdb
  41b776:	out    0xd9,al
  41b778:	dec    edx
  41b779:	cmp    ebp,DWORD PTR [edx-0x300745e2]
  41b77f:	sti    
  41b780:	jbe    0x41b734
  41b782:	cmp    al,0xc9
  41b784:	pop    ebx
  41b785:	pop    es
  41b786:	mov    ds:0x18b64d04,al
  41b78b:	push   ecx
  41b78c:	sbb    ebx,ebp
  41b78e:	ins    DWORD PTR es:[edi],dx
  41b78f:	xchg   ecx,eax
  41b790:	lock jne 0x41b727
  41b793:	cmp    esi,0xbf30980b
  41b799:	scas   al,BYTE PTR es:[edi]
  41b79a:	sub    al,BYTE PTR [ecx+0x30]
  41b79d:	xchg   ebx,eax
  41b79e:	pop    edx
  41b79f:	add    al,0xd0
  41b7a1:	cmp    ch,BYTE PTR [ecx]
  41b7a3:	out    0xe3,al
  41b7a5:	mov    dl,0xa8
  41b7a7:	data16 shl bl,cl
  41b7aa:	xor    eax,0x31dc4ab0
  41b7af:	outs   dx,DWORD PTR ds:[esi]
  41b7b0:	mov    ds:0xe345bd3c,eax
  41b7b5:	mov    dl,BYTE PTR [eax]
  41b7b7:	dec    ebx
  41b7b8:	jmp    0x41b7c6
  41b7ba:	loopne 0x41b74b
  41b7bc:	mov    edi,0x1b0865c7
  41b7c1:	(bad)  
  41b7c2:	fucomi st,st(0)
  41b7c4:	or     DWORD PTR [eax+0x41],edi
  41b7c7:	mov    edx,0xa8018496
  41b7cc:	push   esp
  41b7cd:	jns    0x41b841
  41b7cf:	pop    es
  41b7d0:	stos   BYTE PTR es:[edi],al
  41b7d1:	jl     0x41b7ea
  41b7d3:	sahf   
  41b7d4:	mov    al,ds:0xf2f7de3c
  41b7d9:	or     eax,0xa7550974
  41b7de:	adc    DWORD PTR [edx-0x47],esp
  41b7e1:	fs jbe 0x41b7ca
  41b7e4:	sbb    BYTE PTR [esi],dh
  41b7e6:	xchg   DWORD PTR [ecx],ebx
  41b7e8:	shl    BYTE PTR [edi+eax*1-0xf],1
  41b7ec:	jbe    0x41b785
  41b7ee:	shl    DWORD PTR [ebx],1
  41b7f0:	xchg   edx,eax
  41b7f1:	or     ch,cl
  41b7f3:	and    BYTE PTR [ecx],bh
  41b7f5:	jnp    0x41b823
  41b7f7:	cmp    al,0xfb
  41b7f9:	daa    
  41b7fa:	leave  
  41b7fb:	out    0x4,eax
  41b7fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7fe:	stos   DWORD PTR es:[edi],eax
  41b7ff:	push   ebx
  41b800:	mov    ds:0x8f958d61,eax
  41b805:	into   
  41b806:	popf   
  41b807:	and    ecx,DWORD PTR [esi+eax*8+0x53]
  41b80b:	(bad)  
  41b80c:	adc    al,0x64
  41b80e:	adc    eax,0x7d881b04
  41b813:	ficomp DWORD PTR [ecx+0x6b]
  41b816:	mov    edx,esi
  41b818:	sbb    DWORD PTR [eax+ebx*4-0x7c],eax
  41b81c:	and    esp,DWORD PTR [esi]
  41b81e:	pop    esi
  41b81f:	adc    ebp,esi
  41b821:	stos   BYTE PTR es:[edi],al
  41b822:	jp     0x41b7f4
  41b824:	mov    dl,0x67
  41b826:	sbb    ch,ch
  41b828:	test   BYTE PTR [ecx],ch
  41b82a:	xchg   ebp,eax
  41b82b:	add    DWORD PTR [edi-0x20],0x2df0269d
  41b832:	ror    dh,1
  41b834:	pop    edi
  41b835:	add    al,0xf3
  41b837:	sub    al,0x20
  41b839:	adc    eax,0xd3374fd7
  41b83e:	push   eax
  41b83f:	mov    ebx,0x98d740c0
  41b844:	sti    
  41b845:	or     BYTE PTR [ebp+0x5b0bf7d0],bl
  41b84b:	addr16 (bad) 
  41b84d:	pop    esp
  41b84e:	popa   
  41b84f:	inc    ebp
  41b850:	fisub  DWORD PTR [esi]
  41b852:	pop    ecx
  41b853:	mov    bh,0x42
  41b855:	test   DWORD PTR [ebp-0x32],esi
  41b858:	inc    esp
  41b859:	or     BYTE PTR [ebp-0x71],dl
  41b85c:	push   esp
  41b85d:	cwde   
  41b85e:	push   0x2e
  41b860:	loopne 0x41b8a8
  41b862:	and    DWORD PTR [edi],0x16
  41b865:	fidiv  WORD PTR es:[eax]
  41b868:	sbb    BYTE PTR [edi-0x4ec90eff],ch
  41b86e:	pop    esi
  41b86f:	sbb    al,0x7b
  41b871:	jmp    0x9002:0xa29fc173
  41b878:	aam    0x2
  41b87a:	ret    0x3723
  41b87d:	shr    DWORD PTR [ebp-0x18c89408],cl
  41b883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b884:	mov    edi,0xd63825ce
  41b889:	sbb    eax,0x4ed69427
  41b88e:	scas   al,BYTE PTR es:[edi]
  41b88f:	mov    dl,0x3e
  41b891:	cmp    edi,edi
  41b893:	enter  0xa968,0x9c
  41b897:	imul   esi,DWORD PTR [ecx+eax*1-0x3f],0x6c7aea59
  41b89f:	mov    dh,0xc0
  41b8a1:	int    0x43
  41b8a3:	outs   dx,DWORD PTR ds:[esi]
  41b8a4:	xchg   ebp,eax
  41b8a5:	lahf   
  41b8a6:	mov    ch,0xcc
  41b8a8:	lds    esp,FWORD PTR [ebx+0x4a4a5e9e]
  41b8ae:	sbb    eax,0x62cb2a20
  41b8b3:	push   ecx
  41b8b4:	add    ch,BYTE PTR [edi-0x31]
  41b8b7:	add    eax,0xf75377b4
  41b8bc:	fdiv   QWORD PTR [eax+0x71]
  41b8bf:	idiv   DWORD PTR [eax-0x23f0eb2a]
  41b8c5:	mov    edx,0x3b7c17
  41b8ca:	cmp    ebx,ebx
  41b8cc:	push   ds
  41b8cd:	clc    
  41b8ce:	add    bl,al
  41b8d0:	cld    
  41b8d1:	push   ss
  41b8d2:	add    esp,DWORD PTR [esp+ebp*1+0x66]
  41b8d6:	or     al,0x65
  41b8d8:	fsubr  QWORD PTR [edx+0x38ff52b6]
  41b8de:	mov    ds:0xf9c3c867,al
  41b8e3:	sub    eax,0xecbfef8b
  41b8e8:	xchg   esp,eax
  41b8e9:	jbe    0x41b8f9
  41b8eb:	mov    edx,0xa1620c35
  41b8f0:	inc    ecx
  41b8f1:	pop    edx
  41b8f2:	test   DWORD PTR [esi-0x72677d7f],edi
  41b8f8:	loope  0x41b8d4
  41b8fa:	mov    dx,0xee70
  41b8fe:	dec    eax
  41b8ff:	dec    ebx
  41b900:	sar    BYTE PTR ds:0x533a,0xca
  41b906:	fnsave [ebp-0x2dbad469]
  41b90c:	mov    bh,0x39
  41b90e:	adc    ebp,eax
  41b910:	pop    edx
  41b911:	das    
  41b912:	cs cwde 
  41b914:	popf   
  41b915:	and    al,0xc2
  41b917:	int    0x1c
  41b919:	addr16 pop ecx
  41b91b:	test   BYTE PTR [ecx-0x30],0x55
  41b91f:	cmp    edi,DWORD PTR [edi]
  41b921:	jb     0x41b974
  41b923:	inc    ebp
  41b924:	mov    dl,0xae
  41b926:	ret    
  41b927:	and    eax,0xd70b0039
  41b92c:	mov    DWORD PTR [esi+0x718f8519],edi
  41b932:	std    
  41b933:	cmp    al,0x3b
  41b935:	ds or  edx,ebp
  41b938:	(bad)  
  41b939:	and    al,0xb6
  41b93b:	ret    0x1d2c
  41b93e:	sbb    bh,BYTE PTR [edx]
  41b940:	push   edi
  41b941:	test   eax,0x4a161369
  41b946:	xchg   ebx,eax
  41b947:	out    dx,al
  41b948:	xchg   DWORD PTR [esi-0x5e],edi
  41b94b:	pop    esp
  41b94c:	mov    ebx,0xc9786459
  41b951:	inc    esp
  41b952:	inc    ecx
  41b953:	push   esp
  41b954:	ins    BYTE PTR es:[edi],dx
  41b955:	mov    ebp,0xc43d3131
  41b95a:	xchg   edx,eax
  41b95b:	inc    esp
  41b95c:	and    al,0xad
  41b95e:	xlat   BYTE PTR ds:[ebx]
  41b95f:	push   esp
  41b960:	int    0x2
  41b962:	inc    ebx
  41b963:	es rcr edi,0x9b
  41b967:	in     eax,0x51
  41b969:	int    0x19
  41b96b:	and    dl,BYTE PTR [esi-0x5e5d32f6]
  41b971:	sbb    al,0x11
  41b973:	(bad)  
  41b974:	pop    esp
  41b975:	fimul  DWORD PTR [edi]
  41b977:	(bad)  
  41b978:	repnz push esi
  41b97a:	or     dh,dl
  41b97c:	in     eax,0xd4
  41b97e:	iret   
  41b97f:	inc    esi
  41b980:	(bad)  
  41b981:	jo     0x41b93d
  41b983:	jo     0x41b9db
  41b985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b986:	and    BYTE PTR [eax],bh
  41b988:	mov    ds:0x2fba061,al
  41b98d:	gs das 
  41b98f:	mov    bh,0x30
  41b991:	in     eax,dx
  41b992:	push   edx
  41b993:	ror    bh,0x8d
  41b996:	loop   0x41b9ed
  41b998:	sbb    ebx,DWORD PTR [eax-0x5ba3e143]
  41b99e:	xor    al,0x82
  41b9a0:	(bad)  
  41b9a2:	fs sbb al,0xfe
  41b9a5:	ret    0x8a65
  41b9a8:	xor    bl,BYTE PTR [ecx+edi*1+0x27]
  41b9ac:	in     al,0x68
  41b9ae:	or     ecx,DWORD PTR [edi-0x8]
  41b9b1:	mov    ecx,0xba509f22
  41b9b6:	pop    ebp
  41b9b7:	sbb    eax,0x4196bf46
  41b9bc:	add    BYTE PTR ds:0x61b33741,bh
  41b9c2:	or     eax,0x6cedb0de
  41b9c7:	dec    bl
  41b9c9:	outs   dx,DWORD PTR ds:[esi]
  41b9ca:	push   edi
  41b9cb:	pop    edx
  41b9cc:	fstp   DWORD PTR [ebx+0x29891a39]
  41b9d2:	push   0xffffff97
  41b9d4:	xor    ebx,edx
  41b9d6:	inc    BYTE PTR [ecx+0x159863c6]
  41b9dc:	xchg   dh,dh
  41b9de:	int    0x23
  41b9e0:	int3   
  41b9e1:	push   ebx
  41b9e2:	cli    
  41b9e3:	loopne 0x41b983
  41b9e5:	pop    ecx
  41b9e6:	out    dx,al
  41b9e7:	icebp  
  41b9e8:	test   DWORD PTR [esi-0x5e],eax
  41b9eb:	(bad)  
  41b9ec:	(bad)  
  41b9ed:	mov    edx,0xd9128f37
  41b9f2:	out    0xc0,eax
  41b9f4:	mov    ah,0xa8
  41b9f6:	add    DWORD PTR [edi+0x34],ebp
  41b9f9:	aas    
  41b9fa:	cdq    
  41b9fb:	xchg   ecx,eax
  41b9fc:	xor    BYTE PTR ds:0x337623c4,dl
  41ba02:	gs add al,0x79
  41ba05:	jg     0x41ba6d
  41ba07:	dec    esi
  41ba08:	test   eax,0x82ff9d81
  41ba0d:	leave  
  41ba0e:	xchg   esi,eax
  41ba0f:	ds pop ebx
  41ba11:	ret    0x5993
  41ba14:	icebp  
  41ba15:	dec    esp
  41ba16:	clc    
  41ba17:	retf   0xbb23
  41ba1a:	xor    DWORD PTR ds:0xf97257c,ebx
  41ba20:	pop    edi
  41ba21:	adc    al,0x1a
  41ba23:	cmc    
  41ba24:	add    ecx,DWORD PTR ds:0xda03931c
  41ba2a:	loope  0x41ba3a
  41ba2c:	mov    ch,0xfb
  41ba2e:	dec    esp
  41ba2f:	(bad)  
  41ba30:	sbb    ebx,DWORD PTR [eax+0x68]
  41ba33:	push   esp
  41ba34:	mov    ds:0x766cefd4,al
  41ba39:	xor    esp,DWORD PTR [edx+ebp*2-0x2e473e65]
  41ba40:	pop    eax
  41ba41:	fcom   DWORD PTR [eax+esi*2]
  41ba44:	mov    ds:0xf921626,eax
  41ba49:	xor    ecx,ebx
  41ba4b:	adc    dh,BYTE PTR [esi-0x6e]
  41ba4e:	or     al,0xdb
  41ba50:	add    al,0xf4
  41ba52:	inc    ebx
  41ba53:	in     al,dx
  41ba54:	ins    BYTE PTR es:[edi],dx
  41ba55:	push   ds
  41ba56:	mov    esp,DWORD PTR [ecx]
  41ba58:	xor    al,0xb4
  41ba5a:	fbld   TBYTE PTR [edi+eiz*1]
  41ba5d:	lods   eax,DWORD PTR ds:[esi]
  41ba5e:	in     eax,0x45
  41ba60:	and    eax,ecx
  41ba62:	loopne 0x41b9ec
  41ba64:	push   edi
  41ba65:	pop    ebx
  41ba66:	arpl   bx,bp
  41ba68:	pop    esi
  41ba69:	scas   eax,DWORD PTR es:[edi]
  41ba6a:	jae    0x41baae
  41ba6c:	xor    esi,DWORD PTR [edi-0x8]
  41ba6f:	outs   dx,DWORD PTR ds:[esi]
  41ba70:	loop   0x41ba8f
  41ba72:	add    ah,BYTE PTR [ebx-0xc]
  41ba75:	icebp  
  41ba76:	jecxz  0x41bae7
  41ba78:	retf   0x8248
  41ba7b:	mov    ?,esp
  41ba7d:	stos   DWORD PTR es:[edi],eax
  41ba7e:	test   DWORD PTR [eax+0x25155365],ecx
  41ba84:	lea    esp,ds:0x2e85338b
  41ba8a:	sbb    al,0x44
  41ba8c:	mov    ds:0x60bb235b,eax
  41ba91:	dec    edi
  41ba92:	jmp    0xd4747556
  41ba97:	adc    BYTE PTR [ebx],bh
  41ba99:	fnstsw WORD PTR [eax]
  41ba9b:	fsub   st(0),st
  41ba9d:	adc    al,0xec
  41ba9f:	sti    
  41baa0:	imul   DWORD PTR [edx]
  41baa2:	adc    dl,ah
  41baa4:	jl     0x41babf
  41baa6:	and    dl,BYTE PTR [eax+0x5]
  41baa9:	lods   eax,DWORD PTR ds:[esi]
  41baaa:	lods   al,BYTE PTR ds:[esi]
  41baab:	jmp    0xa9c6d449
  41bab0:	adc    DWORD PTR [ecx],0xffffffe4
  41bab3:	enter  0x694b,0x28
  41bab7:	pop    ss
  41bab8:	cmp    eax,0x2a0da197
  41babd:	int3   
  41babe:	pop    ds
  41babf:	adc    ebx,DWORD PTR [ecx+eax*2]
  41bac2:	mov    bh,0x45
  41bac4:	inc    ecx
  41bac5:	imul   edx,ebx,0x15
  41bac8:	adc    DWORD PTR [edx+0x7236c996],ecx
  41bace:	(bad)  
  41bacf:	test   BYTE PTR [ecx+0x517f70a8],dl
  41bad5:	ret    0x1224
  41bad8:	jb     0x41bae4
  41bada:	inc    eax
  41badb:	aam    0x89
  41badd:	xor    eax,0xab094069
  41bae2:	pop    ecx
  41bae3:	imul   esi,DWORD PTR ds:0x52106695,0xde22522
  41baed:	inc    ebx
  41baee:	sub    DWORD PTR [esi+0x25],esi
  41baf1:	lock jecxz 0x41bb42
  41baf4:	(bad)  
  41baf6:	xchg   ecx,eax
  41baf7:	mov    ah,0x4e
  41baf9:	int3   
  41bafa:	dec    ecx
  41bafb:	cmc    
  41bafc:	mov    dh,0x7d
  41bafe:	jp     0x41bb48
  41bb00:	pop    eax
  41bb01:	jne    0x41bb07
  41bb03:	das    
  41bb04:	mov    ecx,0x9ddc4c4
  41bb09:	xor    DWORD PTR [edx],0xffffff8f
  41bb0c:	lods   eax,DWORD PTR ds:[esi]
  41bb0d:	or     al,0xb
  41bb0f:	pop    ebp
  41bb10:	push   ss
  41bb11:	mov    eax,0xeb76fb21
  41bb16:	cmpxchg DWORD PTR [ecx+0xf],edx
  41bb1a:	mov    ebp,0x95c5fd88
  41bb1f:	push   edi
  41bb20:	and    al,0x45
  41bb22:	mov    esi,esp
  41bb24:	mov    al,0x2a
  41bb26:	xchg   edi,eax
  41bb27:	inc    eax
  41bb28:	push   edx
  41bb29:	adc    eax,0x248a0367
  41bb2e:	lds    ebp,FWORD PTR [ebx]
  41bb30:	into   
  41bb31:	pop    esp
  41bb32:	mov    eax,0xefa78d5a
  41bb37:	mov    esp,0xf087a3a4
  41bb3c:	pop    edi
  41bb3d:	xchg   ebx,eax
  41bb3e:	mov    ds:0xceb16273,al
  41bb43:	stos   BYTE PTR es:[edi],al
  41bb44:	mov    dl,0x5f
  41bb46:	sbb    al,0xcf
  41bb48:	pusha  
  41bb49:	pop    es
  41bb4a:	push   ebp
  41bb4b:	sub    eax,DWORD PTR [edi+0x63]
  41bb4e:	mov    eax,ds:0x4814a05
  41bb53:	adc    ebp,esi
  41bb55:	pop    esi
  41bb56:	fdivr  st,st(5)
  41bb58:	adc    eax,0x73236628
  41bb5d:	xor    al,0xbf
  41bb5f:	mov    edx,0xca886aca
  41bb64:	ins    DWORD PTR es:[edi],dx
  41bb65:	jns    0x41bbaf
  41bb67:	aaa    
  41bb68:	xchg   edi,eax
  41bb69:	popaw  
  41bb6b:	ins    BYTE PTR es:[edi],dx
  41bb6c:	daa    
  41bb6d:	fs in  eax,0x20
  41bb70:	aad    0x50
  41bb72:	xchg   ecx,eax
  41bb73:	ret    0x27c0
  41bb76:	inc    ecx
  41bb78:	in     eax,dx
  41bb79:	or     DWORD PTR [esi*2-0x76850221],edx
  41bb80:	imul   edi,DWORD PTR [ecx-0x4b13a40],0xffffff8b
  41bb87:	inc    esi
  41bb88:	sbb    eax,0xc16c84f8
  41bb8d:	jecxz  0x41bb4b
  41bb8f:	push   cs
  41bb90:	or     eax,0x195d8624
  41bb95:	mov    ebx,0xfb0a8b6e
  41bb9a:	(bad)  
  41bb9b:	icebp  
  41bb9c:	mov    gs,WORD PTR [ebp+edi*2-0x2937f8f1]
  41bba3:	xchg   ebx,eax
  41bba4:	(bad)  
  41bba5:	jo     0x41bbaa
  41bba7:	sbb    dl,al
  41bba9:	out    0x65,eax
  41bbab:	mov    ch,0x2a
  41bbad:	in     eax,dx
  41bbae:	clc    
  41bbaf:	popa   
  41bbb0:	add    DWORD PTR [edx-0x6e],edx
  41bbb3:	pop    es
  41bbb4:	clc    
  41bbb5:	imul   eax,DWORD PTR [eax],0x37
  41bbb8:	mov    al,ds:0x2758ffeb
  41bbbd:	dec    esp
  41bbbe:	bound  ebx,QWORD PTR [ebx+0x6e]
  41bbc1:	in     eax,0x3
  41bbc3:	pop    ds
  41bbc4:	call   0x1bd4:0xf20d5297
  41bbcb:	sbb    cl,BYTE PTR [esi]
  41bbcd:	and    al,0x56
  41bbcf:	dec    edi
  41bbd0:	hlt    
  41bbd1:	popa   
  41bbd2:	mov    BYTE PTR [ebp+eiz*8+0x71735242],ah
  41bbd9:	cwde   
  41bbda:	mov    ah,0xd8
  41bbdc:	jne    0x41bb7f
  41bbde:	dec    esi
  41bbdf:	fwait
  41bbe0:	pop    ds
  41bbe1:	jle    0x41bb78
  41bbe3:	stc    
  41bbe4:	and    ah,BYTE PTR ds:0x97bb0eb9
  41bbea:	push   esi
  41bbeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbec:	js     0x41bc3e
  41bbee:	push   esp
  41bbef:	aad    0x4e
  41bbf1:	jne    0x41bc05
  41bbf3:	adc    DWORD PTR [edx+0x6375bbfd],eax
  41bbf9:	xchg   BYTE PTR [ecx+0x13a91bfc],ah
  41bbff:	and    bh,cl
  41bc01:	gs push eax
  41bc03:	test   BYTE PTR [esi-0x49f08348],dl
  41bc09:	stos   BYTE PTR es:[edi],al
  41bc0a:	push   ss
  41bc0b:	aas    
  41bc0c:	je     0x41bb94
  41bc0e:	dec    esi
  41bc0f:	into   
  41bc10:	dec    ebp
  41bc11:	pushf  
  41bc12:	inc    ebx
  41bc13:	lds    eax,FWORD PTR [eax-0x1e]
  41bc16:	in     eax,dx
  41bc17:	fcmovb st,st(6)
  41bc19:	stc    
  41bc1a:	jns    0x41bbbe
  41bc1c:	shr    BYTE PTR [edx-0x425571a0],1
  41bc22:	mov    esi,DWORD PTR ds:0xb6ca8b16
  41bc28:	dec    eax
  41bc29:	(bad)  
  41bc2a:	jg     0x41bc63
  41bc2c:	xlat   BYTE PTR ds:[ebx]
  41bc2d:	cld    
  41bc2e:	fdivr  st,st(2)
  41bc30:	iret   
  41bc31:	dec    edx
  41bc33:	test   eax,0xf699b56e
  41bc38:	jecxz  0x41bc67
  41bc3a:	xor    eax,0x372125f2
  41bc3f:	call   0x23f8b2e
  41bc44:	add    esp,ebp
  41bc46:	clc    
  41bc47:	nop
  41bc48:	sbb    esp,DWORD PTR [edx-0x67791bc6]
  41bc4e:	fcomp  DWORD PTR [ebp+0x56]
  41bc51:	sbb    DWORD PTR [ecx-0x4a],eax
  41bc54:	pop    edi
  41bc55:	ss arpl WORD PTR ds:[edi+0x70032d4f],sp
  41bc5d:	popa   
  41bc5e:	pop    esi
  41bc5f:	fwait
  41bc60:	adc    eax,0x74f99751
  41bc65:	pop    ebp
  41bc66:	add    edi,DWORD PTR [esi-0x7eb5851]
  41bc6c:	adc    DWORD PTR [esp+ecx*4-0x639dc3ab],ecx
  41bc73:	cmp    eax,0xff955aca
  41bc78:	fstp   QWORD PTR [ebp-0x3e10f6d3]
  41bc7e:	pop    edi
  41bc7f:	xchg   edi,eax
  41bc80:	cld    
  41bc81:	shl    eax,1
  41bc83:	cmp    eax,0x70c3829
  41bc88:	adc    eax,0xc26db330
  41bc8d:	ins    BYTE PTR es:[edi],dx
  41bc8e:	stos   DWORD PTR es:[edi],eax
  41bc8f:	add    dh,dh
  41bc91:	in     eax,dx
  41bc92:	mov    eax,ds:0x89d2c369
  41bc97:	retf   
  41bc98:	inc    eax
  41bc99:	jb     0x41bc77
  41bc9b:	fs or  al,0x48
  41bc9e:	push   esp
  41bc9f:	xchg   ecx,eax
  41bca0:	cmp    esp,esi
  41bca2:	js     0x41bc84
  41bca4:	nop
  41bca5:	xor    al,0x78
  41bca7:	adc    DWORD PTR [ebp+0x28],ebp
  41bcaa:	stc    
  41bcab:	stos   DWORD PTR es:[edi],eax
  41bcac:	inc    edx
  41bcad:	add    DWORD PTR [edi],edi
  41bcaf:	mul    DWORD PTR [eax]
  41bcb1:	mov    ecx,DWORD PTR [edx]
  41bcb3:	sbb    DWORD PTR ss:[esi+edx*2-0x1e],0x16
  41bcb9:	cld    
  41bcba:	jno    0x41bc4c
  41bcbc:	jno    0x41bd33
  41bcbe:	enter  0x72cc,0xba
  41bcc2:	clc    
  41bcc3:	repz ret 
  41bcc5:	mov    DWORD PTR [edi+ebp*4],esp
  41bcc8:	outs   dx,BYTE PTR ds:[esi]
  41bcc9:	xchg   ecx,ebx
  41bccb:	add    BYTE PTR [ebp+0xb9e4e55],ch
  41bcd1:	sub    DWORD PTR [esi],0xffffffb2
  41bcd4:	mov    WORD PTR [esp+edx*2-0x3875a58c],cs
  41bcdb:	and    al,0x93
  41bcdd:	lock sbb eax,0x31c4b888
  41bce3:	enter  0x70d8,0x78
  41bce7:	daa    
  41bce8:	push   es
  41bce9:	nop
  41bcea:	mov    dh,bh
  41bcec:	int    0x3c
  41bcee:	mov    WORD PTR [esi-0x6],es
  41bcf1:	test   BYTE PTR [eax+0x577f9c66],0x2c
  41bcf8:	and    DWORD PTR [esi],eax
  41bcfa:	push   esp
  41bcfb:	retf   
  41bcfc:	mov    edi,DWORD PTR [edi]
  41bcfe:	aad    0x6
  41bd00:	mov    bh,0x67
  41bd02:	add    eax,0xb66f0647
  41bd07:	pop    ebx
  41bd08:	sub    al,0xfd
  41bd0a:	sub    al,0x7f
  41bd0c:	or     ecx,DWORD PTR [edi-0x47ef74ae]
  41bd12:	inc    ebx
  41bd13:	xor    eax,0xc4d430df
  41bd18:	cwde   
  41bd19:	mov    ebp,0xf14a2cfa
  41bd1e:	lods   al,BYTE PTR ds:[esi]
  41bd1f:	imul   DWORD PTR [esp+ebp*4-0x36d1cd4c]
  41bd26:	or     edx,DWORD PTR [ebx]
  41bd28:	call   0x22bc276
  41bd2d:	stos   BYTE PTR es:[edi],al
  41bd2e:	mov    cl,0x46
  41bd30:	jg     0x41bcc8
  41bd32:	inc    ebp
  41bd33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd34:	ja     0x41bd7d
  41bd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd37:	ja     0x41bcf1
  41bd39:	adc    al,BYTE PTR ds:0x9bc2bd6
  41bd3f:	adc    edx,ebx
  41bd41:	jne    0x41bd22
  41bd43:	jg     0x41bcd4
  41bd45:	push   ebx
  41bd46:	mov    ch,bh
  41bd48:	adc    DWORD PTR [eax],ebp
  41bd4a:	jb     0x41bd8e
  41bd4c:	push   0xdb4d907f
  41bd51:	fimul  WORD PTR ds:0xbec6854d
  41bd57:	int3   
  41bd58:	fldenv [ecx-0x4]
  41bd5b:	dec    esi
  41bd5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd5d:	cmp    ah,BYTE PTR ds:0xb76b558f
  41bd63:	fwait
  41bd64:	adc    al,0xd5
  41bd66:	inc    edi
  41bd67:	clc    
  41bd68:	xor    BYTE PTR [ebp+0x794c7ef1],dh
  41bd6e:	ret    
  41bd6f:	mov    ecx,0x71388788
  41bd74:	retf   
  41bd75:	in     eax,dx
  41bd76:	into   
  41bd77:	mov    eax,0x19e879dc
  41bd7c:	xchg   ecx,eax
  41bd7d:	adc    al,0x4f
  41bd7f:	inc    eax
  41bd80:	add    cl,ch
  41bd82:	loop   0x41bdbc
  41bd84:	xor    eax,0x7c0c9ef1
  41bd89:	into   
  41bd8a:	and    DWORD PTR [edx-0x3b629706],ebx
  41bd90:	xor    BYTE PTR fs:[eax],0x58
  41bd94:	call   0x88b518ca
  41bd99:	pusha  
  41bd9a:	xlat   BYTE PTR ds:[ebx]
  41bd9b:	(bad)  
  41bd9c:	in     al,0xf1
  41bd9e:	jno    0x41bd82
  41bda0:	test   DWORD PTR [ebx-0x21],esi
  41bda3:	dec    esp
  41bda4:	xchg   edi,eax
  41bda5:	rcr    ebp,cl
  41bda7:	pop    edi
  41bda8:	dec    edi
  41bda9:	lods   eax,DWORD PTR ds:[esi]
  41bdaa:	cdq    
  41bdab:	adc    al,0xe0
  41bdad:	fsub   DWORD PTR [eax+0x7c835fbe]
  41bdb3:	mov    bh,0xc
  41bdb5:	retf   
  41bdb6:	stos   BYTE PTR es:[edi],al
  41bdb7:	loope  0x41bd7f
  41bdb9:	loope  0x41bde0
  41bdbb:	rcr    BYTE PTR [ebx+0x475c04fe],1
  41bdc1:	xchg   ecx,eax
  41bdc2:	test   al,0xd6
  41bdc4:	sbb    bl,BYTE PTR [eax-0x4fa82a94]
  41bdca:	je     0x41bdc7
  41bdcc:	xchg   edi,eax
  41bdcd:	repz mov esp,0xc104dc
  41bdd3:	push   cs
  41bdd4:	adc    BYTE PTR [ebx-0x2a],bl
  41bdd7:	push   ss
  41bdd8:	push   ebp
  41bdd9:	adc    eax,0x48924bff
  41bdde:	test   eax,0x2004ba4e
  41bde3:	push   ds
  41bde4:	icebp  
  41bde5:	push   ss
  41bde6:	sbb    BYTE PTR [ecx-0xdab7bed],dh
  41bdec:	mov    al,0x41
  41bdee:	inc    ebp
  41bdef:	cdq    
  41bdf0:	in     eax,dx
  41bdf1:	cmp    al,BYTE PTR [edx]
  41bdf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdf4:	xchg   DWORD PTR [eax+esi*2-0x77c00051],ebp
  41bdfb:	push   0xffffffca
  41bdfd:	push   0x2b7e6290
  41be02:	and    ecx,esi
  41be04:	or     ah,ch
  41be06:	sbb    ah,ch
  41be08:	add    al,0x9a
  41be0a:	scas   al,BYTE PTR es:[edi]
  41be0b:	jmp    0xfebf:0x7b6fe80e
  41be12:	ret    
  41be13:	cmc    
  41be14:	fmul   st,st(6)
  41be16:	test   eax,0x25f837d2
  41be1b:	inc    ebx
  41be1c:	sbb    DWORD PTR [edi+0x3482dd44],edi
  41be22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be23:	xchg   ecx,eax
  41be24:	enter  0x3342,0x80
  41be28:	leave  
  41be29:	repnz sti 
  41be2b:	retf   0xe789
  41be2e:	inc    ebx
  41be2f:	cld    
  41be30:	cli    
  41be31:	dec    ebx
  41be32:	push   es
  41be33:	into   
  41be34:	adc    DWORD PTR [ecx-0x49],edx
  41be37:	fwait
  41be38:	dec    edx
  41be39:	dec    esi
  41be3a:	js     0x41bdf8
  41be3c:	icebp  
  41be3d:	xlat   BYTE PTR ds:[ebx]
  41be3e:	inc    esi
  41be3f:	mov    esi,0x41759b94
  41be44:	and    al,0x55
  41be46:	idiv   DWORD PTR [ecx-0x2b213940]
  41be4c:	push   es
  41be4d:	xchg   esi,eax
  41be4e:	push   esi
  41be4f:	and    BYTE PTR [esi+ebx*2-0x468793f5],dh
  41be56:	int    0x56
  41be58:	rcl    BYTE PTR [esi+0x78],0xeb
  41be5c:	enter  0xb3fe,0x73
  41be60:	(bad)  
  41be61:	jge    0x41bdf8
  41be63:	xchg   DWORD PTR [ecx-0x3aaacfbc],edi
  41be69:	in     eax,0x38
  41be6b:	sar    BYTE PTR [ebp-0x4a8f5d60],cl
  41be71:	clc    
  41be72:	pop    ecx
  41be73:	dec    esp
  41be74:	cwde   
  41be75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be76:	test   BYTE PTR cs:[eax+0x27],ch
  41be7a:	call   0x9296:0x5c9234e1
  41be81:	mov    ch,0xf5
  41be83:	mov    eax,0xae526b52
  41be88:	call   0xcb71:0xd2d9d027
  41be8f:	test   eax,0xd3c4f790
  41be94:	rcr    DWORD PTR [eax-0x56],cl
  41be97:	pop    ss
  41be98:	fcom   DWORD PTR [eax+0x66d0899f]
  41be9e:	std    
  41be9f:	xor    bl,dh
  41bea1:	cmp    dh,BYTE PTR [ecx]
  41bea3:	scas   al,BYTE PTR es:[edi]
  41bea4:	mov    edx,DWORD PTR [edi]
  41bea6:	ret    
  41bea7:	add    BYTE PTR [ebx],dl
  41bea9:	xchg   edx,eax
  41beaa:	int    0x10
  41beac:	jmp    FWORD PTR [eax+0x5]
  41beaf:	push   esp
  41beb0:	cmp    edx,DWORD PTR [ecx+0x78]
  41beb3:	loop   0x41bee8
  41beb5:	icebp  
  41beb6:	and    edx,edx
  41beb8:	jns    0x41bee9
  41beba:	into   
  41bebb:	addr16 es fs xchg esp,eax
  41bebf:	jmp    0xac156a1c
  41bec4:	ins    DWORD PTR es:[edi],dx
  41bec5:	push   ebp
  41bec6:	rcr    BYTE PTR [eax+0x79460004],0x7c
  41becd:	push   ebx
  41bece:	sub    BYTE PTR [edi-0x41],0x91
  41bed2:	aad    0xc5
  41bed4:	mov    al,0x16
  41bed6:	mov    ah,0x23
  41bed8:	je     0x41bed4
  41beda:	retf   
  41bedb:	push   esi
  41bedc:	push   ebx
  41bedd:	xchg   BYTE PTR [ebp+0x49],dl
  41bee0:	mov    al,ds:0x9b6e7530
  41bee5:	xchg   ebp,eax
  41bee6:	xchg   edx,eax
  41bee7:	fsub   st(6),st
  41bee9:	push   edi
  41beea:	mov    ds:0x261a354,al
  41beef:	and    BYTE PTR [esi-0x25],dh
  41bef2:	loop   0x41be74
  41bef4:	fisubr DWORD PTR [ebx+0x31a87a13]
  41befa:	xor    DWORD PTR [esi+0x10],edx
  41befd:	mov    dh,0x38
  41beff:	shl    BYTE PTR [ecx-0x67da926d],cl
  41bf05:	dec    ebx
  41bf06:	sti    
  41bf07:	xlat   BYTE PTR ds:[ebx]
  41bf08:	xor    eax,0xb37e20c6
  41bf0d:	lea    edx,ds:0xf387318b
  41bf13:	lahf   
  41bf14:	loopne 0x41bf2a
  41bf16:	popf   
  41bf17:	sub    al,0x1d
  41bf19:	inc    ebx
  41bf1a:	sbb    ecx,0xffffff8d
  41bf1d:	push   esp
  41bf1e:	imul   ebp,DWORD PTR [ebx+eiz*4+0x6c0a0c33],0x4092fc6e
  41bf29:	jl     0x41bf42
  41bf2b:	pop    ecx
  41bf2c:	sub    BYTE PTR [edx],cl
  41bf2e:	je     0x41bee0
  41bf30:	mov    ah,0xc5
  41bf32:	lock xor dl,bh
  41bf35:	hlt    
  41bf36:	es (bad) 
  41bf38:	clc    
  41bf39:	pop    edi
  41bf3a:	(bad)  
  41bf3b:	add    WORD PTR [ecx+0x2292f2ee],sp
  41bf42:	aas    
  41bf43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf44:	out    dx,al
  41bf45:	es (bad) 
  41bf47:	stos   BYTE PTR es:[edi],al
  41bf48:	jl     0x41bf19
  41bf4a:	(bad)  
  41bf4b:	cmc    
  41bf4c:	mov    esi,0x92555b60
  41bf51:	jns    0x41bf69
  41bf53:	pop    esp
  41bf54:	pop    ss
  41bf55:	stos   BYTE PTR es:[edi],al
  41bf56:	and    al,0x6b
  41bf58:	arpl   bx,ax
  41bf5a:	ret    
  41bf5b:	retf   
  41bf5c:	mov    eax,DWORD PTR [edi]
  41bf5e:	push   ds
  41bf5f:	aas    
  41bf60:	(bad)  
  41bf62:	or     DWORD PTR [eax-0x64],esi
  41bf65:	xchg   esi,eax
  41bf66:	cmp    ch,BYTE PTR [edi+0x28f1236e]
  41bf6c:	pop    ecx
  41bf6d:	sub    al,0xdc
  41bf6f:	iret   
  41bf70:	inc    edi
  41bf71:	push   ds
  41bf72:	ret    
  41bf73:	out    dx,eax
  41bf74:	shr    cl,1
  41bf76:	inc    eax
  41bf77:	inc    ebx
  41bf78:	mov    edx,0xe577a8d
  41bf7d:	sar    DWORD PTR [edi],cl
  41bf7f:	fwait
  41bf80:	call   0x876d:0x8fcb924a
  41bf87:	pop    ebp
  41bf88:	in     al,0xc6
  41bf8a:	pop    ss
  41bf8b:	retf   
  41bf8c:	shl    DWORD PTR [ecx+0x522dde87],0xb9
  41bf93:	or     DWORD PTR [edi-0x13be58b8],esp
  41bf99:	fidivr WORD PTR [ebp+0x79]
  41bf9c:	and    eax,0x6d3b9f99
  41bfa1:	pop    es
  41bfa2:	std    
  41bfa3:	mov    ?,WORD PTR [edx-0x5c]
  41bfa6:	aaa    
  41bfa7:	retf   0x6062
  41bfaa:	mov    ecx,0xa0e616c9
  41bfaf:	xor    bh,al
  41bfb1:	inc    edx
  41bfb2:	repz xlat BYTE PTR ds:[ebx]
  41bfb4:	or     BYTE PTR [edx+0x4b922a54],0xe9
  41bfbb:	push   0x7e
  41bfbd:	xchg   edi,eax
  41bfbe:	lds    ecx,FWORD PTR [eax+ecx*4+0x49]
  41bfc2:	mov    esp,0xe6e9f34a
  41bfc7:	rcr    DWORD PTR [eax],cl
  41bfc9:	fwait
  41bfca:	push   esp
  41bfcb:	daa    
  41bfcc:	fld    TBYTE PTR ds:0x16d86690
  41bfd2:	or     esi,DWORD PTR [ebx-0x56]
  41bfd5:	add    eax,0x44a46f62
  41bfda:	jp     0x41bf8b
  41bfdc:	scas   al,BYTE PTR es:[edi]
  41bfdd:	pop    esi
  41bfde:	es and eax,0xe616dc63
  41bfe4:	out    dx,eax
  41bfe5:	dec    ebx
  41bfe6:	adc    dl,al
  41bfe8:	dec    edx
  41bfe9:	outs   dx,BYTE PTR ds:[esi]
  41bfea:	call   0x62394a31
  41bfef:	xchg   bh,cl
  41bff1:	jp     0x41bf92
  41bff3:	(bad)  
  41bff5:	dec    esp
  41bff6:	cmp    eax,0x95c7b496
  41bffb:	inc    esp
  41bffc:	or     ch,bl
  41bffe:	sub    BYTE PTR [ebp+0x14379a87],cl
  41c004:	xor    al,BYTE PTR [eax+ebx*1]
  41c007:	ins    DWORD PTR es:[edi],dx
  41c008:	pop    eax
  41c009:	lock aam 0xd
  41c00c:	xsavec [esi]
  41c00f:	jae    0x41c079
  41c011:	pop    ss
  41c012:	push   ebp
  41c013:	sub    ah,BYTE PTR [esi+0x3fa001f5]
  41c019:	xor    edx,esp
  41c01b:	sub    eax,0x47329c02
  41c020:	ja     0x41bfd1
  41c022:	scas   eax,DWORD PTR es:[edi]
  41c023:	into   
  41c024:	adc    eax,0xf3aaca0c
  41c029:	xchg   ebp,eax
  41c02a:	or     BYTE PTR [edx-0x3a],bl
  41c02d:	pop    ebx
  41c02e:	fldenv [ebx+ebp*1]
  41c031:	addr16 jp 0x41bfe1
  41c034:	sub    DWORD PTR [ecx+0x5],ebp
  41c037:	add    bl,BYTE PTR [eax]
  41c039:	xchg   DWORD PTR [ecx-0x15],ebx
  41c03c:	(bad)  
  41c03d:	push   ds
  41c03e:	sbb    al,0x4a
  41c040:	neg    BYTE PTR [eax+0x7891a83c]
  41c046:	adc    edi,DWORD PTR [ecx]
  41c048:	xor    bl,BYTE PTR [edi+eax*4]
  41c04b:	push   eax
  41c04c:	dec    esi
  41c04d:	xchg   edi,eax
  41c04e:	cdq    
  41c04f:	and    eax,DWORD PTR [ecx-0xcd8cec]
  41c055:	or     cl,BYTE PTR [esi+0x26d6f851]
  41c05b:	pop    ss
  41c05c:	lock xor bh,BYTE PTR [edi-0x70]
  41c060:	outs   dx,DWORD PTR ds:[esi]
  41c061:	cli    
  41c062:	aam    0xd5
  41c064:	xor    eax,0xab5a3ca2
  41c069:	rcr    dl,1
  41c06b:	or     eax,DWORD PTR [edi+0x4]
  41c06e:	rcl    BYTE PTR [ecx-0x68],0x86
  41c072:	and    esp,0xb61889b7
  41c078:	fistp  QWORD PTR [edi+0x69]
  41c07b:	ror    BYTE PTR [esi],0x70
  41c07e:	lods   al,BYTE PTR ds:[esi]
  41c07f:	mov    WORD PTR [esi],fs
  41c081:	out    dx,eax
  41c082:	sub    DWORD PTR [ebx+0x638b8a5e],ebp
  41c088:	jno    0x41c0af
  41c08a:	dec    ecx
  41c08b:	and    eax,0x2aff1f6e
  41c090:	nop
  41c091:	cwde   
  41c092:	(bad)  
  41c093:	pushf  
  41c094:	call   0x1bb2503
  41c099:	out    0x76,eax
  41c09b:	jo     0x41c0a3
  41c09d:	jl     0x41c033
  41c09f:	imul   ebx,DWORD PTR [eax-0x1c],0xffffffc4
  41c0a3:	sbb    DWORD PTR [esi+0x65],ebx
  41c0a6:	xchg   ebx,eax
  41c0a7:	iret   
  41c0a8:	cmp    eax,0xe5cbffe4
  41c0ad:	ret    
  41c0ae:	adc    BYTE PTR ss:[ebp+0x27],0x8d
  41c0b3:	ret    
  41c0b4:	fdiv   DWORD PTR [eax+0x42615c5c]
  41c0ba:	dec    esp
  41c0bb:	pop    edx
  41c0bc:	pop    edx
  41c0bd:	or     dh,bl
  41c0bf:	sar    BYTE PTR [eax-0x3775647e],cl
  41c0c5:	mul    edx
  41c0c7:	mov    ebp,0x7df76a4d
  41c0cc:	lds    edx,FWORD PTR [eax+0x75]
  41c0cf:	push   ss
  41c0d0:	fstp   DWORD PTR [ebp-0x4778d2c6]
  41c0d6:	mov    DWORD PTR ds:0x3f614c05,ebx
  41c0dc:	pushf  
  41c0dd:	jae    0x41c0c2
  41c0df:	out    0xb0,eax
  41c0e1:	mov    ah,0x2f
  41c0e3:	shl    BYTE PTR [esi+0x692df697],cl
  41c0e9:	jns    0x41c0d7
  41c0eb:	ins    BYTE PTR es:[edi],dx
  41c0ec:	add    DWORD PTR [ebx-0x6349994c],edi
  41c0f2:	mov    BYTE PTR [ecx+0x1f7a4e06],ah
  41c0f8:	jg     0x41c0dc
  41c0fa:	into   
  41c0fb:	and    cl,BYTE PTR [eax+0x2d1a4443]
  41c101:	mul    esp
  41c103:	xchg   esi,eax
  41c104:	pushf  
  41c105:	inc    ecx
  41c106:	lods   eax,DWORD PTR ss:[esi]
  41c108:	retf   0x1af5
  41c10b:	jmp    0xdaba:0x2ed874a8
  41c112:	test   DWORD PTR [esi],esp
  41c114:	push   0xffffffa7
  41c116:	in     eax,dx
  41c117:	dec    esi
  41c118:	popa   
  41c119:	and    edi,ebx
  41c11b:	js     0x41c0e0
  41c11d:	or     BYTE PTR [eax],ch
  41c11f:	push   esi
  41c120:	xor    BYTE PTR [edx-0x29d9636b],0x99
  41c127:	imul   ebx,edi,0x59
  41c12a:	gs xor bl,bl
  41c12d:	outs   dx,BYTE PTR ds:[esi]
  41c12e:	xor    edx,ebp
  41c130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c131:	xor    DWORD PTR [ebp+eax*8+0xd88ed87],0xffffff99
  41c139:	loop   0x41c0f0
  41c13b:	(bad)  
  41c13c:	fmul   DWORD PTR ds:0xbcacfb1d
  41c142:	or     dh,dl
  41c144:	(bad)
  41c147:	push   es
  41c148:	and    al,0x98
  41c14b:	out    dx,eax
  41c14c:	test   DWORD PTR [ecx+0x2f],ebp
  41c14f:	inc    edi
  41c150:	dec    esp
  41c151:	iret   
  41c152:	call   0x39770261
  41c157:	inc    esp
  41c158:	cld    
  41c159:	in     eax,0x1e
  41c15b:	imul   esp,esi,0xffffffc0
  41c15e:	(bad)  
  41c15f:	aaa    
  41c160:	hlt    
  41c161:	add    eax,0x857d48f6
  41c166:	aad    0xcb
  41c168:	sub    BYTE PTR [ecx-0x7007fb38],bl
  41c16e:	inc    edx
  41c16f:	cmp    al,0xb
  41c171:	fnsave [esp+edi*8+0x2879fe18]
  41c178:	bound  edi,QWORD PTR [esi]
  41c17a:	dec    esi
  41c17b:	jle    0x41c13d
  41c17d:	cld    
  41c17e:	xor    DWORD PTR ss:[ecx+0x1a7d9cb],eax
  41c185:	push   ds
  41c186:	sbb    DWORD PTR [esi-0x2d],eax
  41c189:	lahf   
  41c18a:	sub    BYTE PTR [edi+eax*2-0x7407b371],0x14
  41c192:	out    dx,eax
  41c193:	sub    BYTE PTR [edx],ah
  41c195:	ret    
  41c196:	sub    BYTE PTR [eax-0x20320586],dh
  41c19c:	cmp    DWORD PTR [esi+0x64],esi
  41c19f:	adc    eax,0x7f366d2b
  41c1a4:	das    
  41c1a5:	mov    ebp,0x2f82bef1
  41c1aa:	mov    ds:0x90bd4f9a,eax
  41c1af:	xor    BYTE PTR [edi-0x64],0xd8
  41c1b3:	loopne 0x41c1c6
  41c1b5:	pop    ebp
  41c1b6:	in     al,0xe7
  41c1b8:	pop    ebp
  41c1b9:	mov    eax,ds:0x11011dfb
  41c1be:	dec    ecx
  41c1bf:	or     ah,BYTE PTR [ecx]
  41c1c1:	add    DWORD PTR [ecx+0x486f3aab],0x3727084
  41c1cb:	out    0x3a,eax
  41c1cd:	cmp    BYTE PTR [ecx+0x3b8ec341],0x14
  41c1d4:	rcr    BYTE PTR [eax+0x6cbc9919],0xa6
  41c1db:	mov    DWORD PTR [ebx],esi
  41c1dd:	mov    esi,0x4619848e
  41c1e2:	dec    ebp
  41c1e3:	hlt    
  41c1e4:	mov    ch,0x6b
  41c1e6:	cmp    edi,ebx
  41c1e8:	xor    cl,cl
  41c1ea:	cmp    bh,bl
  41c1ec:	icebp  
  41c1ed:	out    0xa6,al
  41c1ef:	and    ch,bh
  41c1f1:	or     edi,DWORD PTR [ebx]
  41c1f3:	pop    esi
  41c1f4:	mov    ah,0xd6
  41c1f6:	lods   al,BYTE PTR ds:[esi]
  41c1f7:	(bad)  
  41c1f8:	out    0x1f,al
  41c1fa:	sbb    cl,BYTE PTR ss:[eax+ebp*1]
  41c1fe:	cmp    al,0xcf
  41c200:	push   esi
  41c201:	cwde   
  41c202:	out    dx,al
  41c203:	in     eax,0x74
  41c205:	jo     0x41c191
  41c207:	push   eax
  41c208:	and    esi,0xffffffa9
  41c20b:	scas   eax,DWORD PTR es:[edi]
  41c20c:	jle    0x41c1a7
  41c20e:	rol    dh,1
  41c210:	int    0x9f
  41c212:	inc    eax
  41c213:	sti    
  41c214:	shr    BYTE PTR [ebp+0x56],cl
  41c217:	dec    ebx
  41c218:	jp     0x41c1fd
  41c21a:	(bad)  
  41c21b:	(bad)  
  41c21c:	lea    ebx,ds:0x135216af
  41c222:	sub    eax,0xe818cba9
  41c227:	arpl   WORD PTR [eax+eax*8-0x7c],dx
  41c22b:	neg    BYTE PTR [edi]
  41c22d:	rcl    BYTE PTR [ebx+eiz*4+0x10],0x5c
  41c232:	pop    ds
  41c233:	cmp    eax,0x73b2dfd9
  41c238:	je     0x41c1cd
  41c23a:	or     al,0x8c
  41c23c:	sbb    ch,BYTE PTR [ecx+0x12]
  41c23f:	in     al,dx
  41c240:	add    ecx,0xffffffda
  41c243:	fsubr  QWORD PTR [edi]
  41c245:	push   esp
  41c246:	into   
  41c247:	jmp    0x41c209
  41c249:	sub    al,BYTE PTR [edi]
  41c24b:	mov    dh,0xa7
  41c24d:	adc    al,0x6a
  41c24f:	out    0x90,al
  41c251:	into   
  41c252:	inc    esi
  41c253:	fwait
  41c254:	loope  0x41c26a
  41c256:	mov    bh,0x79
  41c258:	sbb    eax,0x191b90d7
  41c25d:	mov    al,ds:0xdc825c35
  41c262:	xchg   BYTE PTR ds:0xec7044ea,dl
  41c268:	inc    edx
  41c269:	mov    ebp,0x4e884de1
  41c26e:	je     0x41c293
  41c270:	fs std 
  41c272:	(bad)  
  41c273:	push   0x3f
  41c275:	sub    DWORD PTR [edx-0x9],ebp
  41c278:	mov    cl,0x4b
  41c27a:	xor    DWORD PTR [ebx],ebp
  41c27c:	push   ebp
  41c27d:	idiv   DWORD PTR [ecx]
  41c27f:	jg     0x41c256
  41c281:	push   esp
  41c282:	shl    BYTE PTR [eax+0x24f60e76],0x87
  41c289:	xchg   edi,eax
  41c28a:	scas   al,BYTE PTR es:[edi]
  41c28b:	arpl   WORD PTR [edi],dx
  41c28d:	outs   dx,DWORD PTR ds:[esi]
  41c28e:	dec    ebp
  41c28f:	or     DWORD PTR [ebx+0xfd6d457],0xffffffc1
  41c296:	sar    BYTE PTR [edi-0x66],0x87
  41c29a:	dec    ebx
  41c29b:	imul   esi,esp,0xa90a4b04
  41c2a1:	shr    bl,1
  41c2a3:	imul   ebp,DWORD PTR [eax-0x5c],0x32adcc33
  41c2aa:	inc    eax
  41c2ab:	adc    al,0x31
  41c2ad:	jge    0x41c2d5
  41c2af:	adc    DWORD PTR [edx],ebp
  41c2b1:	icebp  
  41c2b2:	out    0xca,al
  41c2b4:	xchg   DWORD PTR [ebx-0x3],esi
  41c2b7:	xor    ebx,edi
  41c2b9:	aas    
  41c2ba:	sbb    eax,0x45a6db5f
  41c2bf:	fs aaa 
  41c2c1:	push   edi
  41c2c2:	lods   al,BYTE PTR ds:[esi]
  41c2c3:	pop    ecx
  41c2c4:	pop    ecx
  41c2c5:	xchg   edi,eax
  41c2c6:	xor    eax,0x50e0959
  41c2cb:	aaa    
  41c2cc:	push   ebx
  41c2cd:	push   edx
  41c2ce:	out    dx,eax
  41c2cf:	jle    0x41c254
  41c2d1:	jl     0x41c2d9
  41c2d3:	push   edx
  41c2d4:	sub    esi,DWORD PTR [ebx+0x44]
  41c2d7:	jp     0x41c2da
  41c2d9:	or     al,0xc4
  41c2db:	dec    edx
  41c2dc:	dec    ecx
  41c2dd:	jge    0x41c266
  41c2df:	into   
  41c2e0:	cli    
  41c2e1:	inc    ecx
  41c2e2:	mov    ebx,0x6613589e
  41c2e7:	sub    eax,0xf0016491
  41c2ec:	cld    
  41c2ed:	jb     0x41c2ec
  41c2ef:	xchg   esi,eax
  41c2f0:	icebp  
  41c2f1:	dec    ebx
  41c2f2:	fwait
  41c2f3:	lahf   
  41c2f4:	cmp    bl,BYTE PTR [edi]
  41c2f6:	(bad)  
  41c2f7:	dec    esi
  41c2f8:	inc    edx
  41c2f9:	mov    ah,0x23
  41c2fb:	ins    DWORD PTR es:[edi],dx
  41c2fc:	sub    al,0x25
  41c2fe:	aaa    
  41c2ff:	adc    ch,BYTE PTR fs:0x1b5d6d70
  41c306:	push   DWORD PTR [edi-0x3c]
  41c309:	mov    eax,ds:0xb1d815ed
  41c30e:	add    BYTE PTR [edi+0x1bcc59df],0x46
  41c315:	mov    ss,WORD PTR [ebx]
  41c317:	scas   eax,DWORD PTR es:[edi]
  41c318:	mov    ch,0x86
  41c31a:	xlat   BYTE PTR ds:[ebx]
  41c31b:	es or  al,0xdd
  41c31e:	xchg   ecx,eax
  41c31f:	cmp    al,0xb7
  41c321:	pop    edi
  41c322:	dec    edi
  41c323:	jmp    0xb0ee8439
  41c328:	mov    edi,esi
  41c32a:	xchg   edx,eax
  41c32b:	cmp    BYTE PTR [edx+0x4b],0x21
  41c32f:	in     eax,0x9e
  41c331:	repnz les esp,FWORD PTR [edi+0x74]
  41c335:	xchg   esi,eax
  41c336:	(bad)  
  41c337:	cmp    DWORD PTR [esi],ebp
  41c339:	adc    BYTE PTR [ebx-0x225cb791],ch
  41c33f:	dec    eax
  41c340:	adc    eax,0x6eaadc22
  41c345:	and    ebx,esi
  41c347:	call   0xd429:0x269cc466
  41c34e:	pop    edi
  41c34f:	sar    DWORD PTR [edx-0x74],cl
  41c352:	jle    0x41c386
  41c354:	(bad)
  41c357:	jae    0x41c3aa
  41c359:	push   0x64973f86
  41c35e:	xor    bl,al
  41c360:	(bad)  
  41c361:	push   edx
  41c362:	sti    
  41c363:	addr16 jp 0x41c398
  41c366:	sub    esp,DWORD PTR [eax+0x4a]
  41c369:	imul   esp,edi,0x7463e2fb
  41c36f:	pop    ecx
  41c370:	add    ch,bl
  41c372:	cmp    al,0x91
  41c375:	aad    0xdd
  41c377:	adc    esi,DWORD PTR [edx-0x1c]
  41c37a:	scas   eax,DWORD PTR es:[edi]
  41c37b:	enter  0x3762,0xef
  41c37f:	dec    esi
  41c380:	pop    ebx
  41c381:	mov    edx,0xba6cc392
  41c386:	jbe    0x41c309
  41c388:	xor    BYTE PTR [eax+0x71af4ac7],dl
  41c38e:	ja     0x41c3cf
  41c390:	or     eax,0x87ef3077
  41c395:	fnsave ds:0x3333b457
  41c39b:	loop   0x41c3ff
  41c39d:	int    0x60
  41c39f:	adc    eax,0x819b8538
  41c3a4:	aam    0xf0
  41c3a6:	scas   al,BYTE PTR es:[edi]
  41c3a7:	mov    bl,BYTE PTR [edx*8+0x20d9ccfd]
  41c3ae:	mov    esp,DWORD PTR [ebx+0x14f122f1]
  41c3b4:	(bad)
  41c3b7:	add    al,0xd3
  41c3b9:	pop    esp
  41c3ba:	arpl   WORD PTR [ecx+0x6d45faed],sp
  41c3c0:	outs   dx,DWORD PTR ds:[esi]
  41c3c1:	add    BYTE PTR [edi+0x7a],al
  41c3c4:	dec    ecx
  41c3c5:	or     DWORD PTR [esi],esi
  41c3c7:	sbb    eax,DWORD PTR ds:[esi-0x6e]
  41c3cb:	inc    esp
  41c3cc:	das    
  41c3cd:	and    eax,0xd5df1336
  41c3d2:	jg     0x41c3ef
  41c3d4:	jp     0x41c447
  41c3d6:	stc    
  41c3d7:	jno    0x41c42e
  41c3d9:	das    
  41c3da:	cmp    DWORD PTR [esi-0x264a820e],0x54
  41c3e1:	dec    ebp
  41c3e2:	dec    edi
  41c3e3:	iret   
  41c3e4:	adc    al,0x63
  41c3e6:	sub    eax,0x856b94ea
  41c3eb:	xor    ch,BYTE PTR [ecx+esi*4]
  41c3ee:	pusha  
  41c3ef:	xchg   DWORD PTR [ecx+edx*4],esi
  41c3f2:	xor    DWORD PTR [edx],ebx
  41c3f4:	jge    0x41c3b5
  41c3f6:	loop   0x41c43e
  41c3f8:	fs or  al,0x36
  41c3fb:	in     al,0x3b
  41c3fd:	jae    0x41c457
  41c3ff:	push   esi
  41c400:	(bad)  
  41c401:	jle    0x41c3aa
  41c403:	mov    edi,0x2ca0dffc
  41c408:	sub    eax,0xa37e357e
  41c40d:	mov    cl,0x30
  41c40f:	outs   dx,DWORD PTR ds:[esi]
  41c410:	xor    eax,0xb17b2f2c
  41c415:	ds dec esi
  41c417:	cmp    DWORD PTR [edx],0xfffffff6
  41c41a:	fldcw  WORD PTR [ecx-0x59]
  41c41d:	pop    ss
  41c41e:	(bad)  
  41c41f:	pop    ebp
  41c420:	or     BYTE PTR [ecx],al
  41c422:	pop    eax
  41c423:	out    0x6f,eax
  41c425:	repnz popa 
  41c427:	pop    ds
  41c428:	outs   dx,DWORD PTR ds:[esi]
  41c429:	or     esi,0x215ab6a6
  41c42f:	mov    dl,0x85
  41c431:	push   ecx
  41c432:	popf   
  41c433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c434:	jb     0x41c42d
  41c436:	retf   
  41c437:	enter  0x7c5f,0x2f
  41c43b:	mul    DWORD PTR [ecx-0x48]
  41c43e:	jl     0x41c47b
  41c440:	mov    ebx,0xf35caed1
  41c445:	out    0x4b,eax
  41c447:	jp     0x41c417
  41c449:	js     0x41c3d8
  41c44b:	jbe    0x41c440
  41c44d:	clc    
  41c44e:	rcr    BYTE PTR [eax+0x27904314],0x70
  41c455:	(bad)  
  41c457:	or     cl,BYTE PTR [eax]
  41c459:	or     eax,0xc4d3eba0
  41c45e:	sub    bh,ch
  41c460:	xchg   edi,eax
  41c461:	stos   BYTE PTR es:[edi],al
  41c462:	jle    0x41c425
  41c464:	jnp    0x41c460
  41c466:	inc    esp
  41c467:	jle    0x41c472
  41c469:	jmp    0x4d39f6ca
  41c46e:	call   0x33f5d902
  41c473:	out    0x7a,al
  41c475:	(bad)  
  41c477:	(bad)  
  41c478:	dec    edx
  41c479:	lahf   
  41c47a:	mov    dl,0xd4
  41c47c:	add    eax,0x464e9427
  41c481:	data16 mov ah,0x44
  41c484:	xor    BYTE PTR [edx+0x1b],dh
  41c487:	push   ds
  41c488:	(bad)
  41c48b:	rcl    DWORD PTR [edi],1
  41c48d:	iret   
  41c48e:	aam    0x4c
  41c490:	in     al,dx
  41c491:	pop    ebx
  41c492:	loopne 0x41c446
  41c494:	arpl   WORD PTR [eax+edx*8+0x50],si
  41c498:	jle    0xd924bb42
  41c49e:	test   BYTE PTR [ebp+0x76c9f0d3],bl
  41c4a4:	imul   ebp,DWORD PTR [esi],0xffffffce
  41c4a7:	(bad)  
  41c4a8:	mov    bl,0x44
  41c4aa:	push   ebx
  41c4ab:	xor    esp,edx
  41c4ad:	iret   
  41c4ae:	cmp    BYTE PTR [eax+0x2e],dl
  41c4b1:	add    al,0xf5
  41c4b3:	sub    BYTE PTR [edx+edi*4],dl
  41c4b6:	push   esp
  41c4b7:	cld    
  41c4b8:	add    BYTE PTR [ebp+0x79bbf7b3],bh
  41c4be:	iret   
  41c4bf:	retf   0x505c
  41c4c2:	daa    
  41c4c3:	int    0x96
  41c4c5:	add    eax,edx
  41c4c7:	inc    eax
  41c4c8:	jb     0x41c492
  41c4ca:	sub    eax,0xa4f9768b
  41c4cf:	push   eax
  41c4d0:	out    dx,eax
  41c4d1:	imul   esp,DWORD PTR [ebp-0xcca5bc],0x574b9eff
  41c4db:	dec    eax
  41c4dc:	lods   eax,DWORD PTR ds:[esi]
  41c4dd:	pop    esp
  41c4de:	das    
  41c4df:	fcomp  st(2)
  41c4e1:	adc    DWORD PTR ds:0x70021014,ebx
  41c4e7:	and    al,0xaf
  41c4e9:	xor    al,0x22
  41c4eb:	lods   al,BYTE PTR ds:[esi]
  41c4ec:	data16 daa 
  41c4ee:	mov    ds:0x5ac7fe05,al
  41c4f3:	xchg   esi,eax
  41c4f4:	mov    ds:0x674b8c4,eax
  41c4f9:	scas   al,BYTE PTR es:[edi]
  41c4fa:	es inc ebx
  41c4fc:	adc    edi,ebp
  41c4fe:	or     bh,al
  41c500:	adc    BYTE PTR [ecx],ch
  41c502:	adc    BYTE PTR [eax-0x6d],cl
  41c505:	mov    bh,0x42
  41c507:	aad    0xe
  41c509:	scas   eax,DWORD PTR es:[edi]
  41c50a:	loopne 0x41c4d5
  41c50c:	stos   DWORD PTR es:[edi],eax
  41c50d:	sar    ebx,1
  41c50f:	add    cl,cl
  41c511:	pop    ebp
  41c512:	inc    edx
  41c513:	fwait
  41c514:	lods   eax,DWORD PTR ds:[esi]
  41c515:	mov    edx,0x25559d4c
  41c51a:	or     cl,BYTE PTR [edi]
  41c51c:	lds    edi,FWORD PTR [esi+0x8]
  41c51f:	pop    ebp
  41c520:	sbb    edx,DWORD PTR ds:0xfc82d7ca
  41c526:	out    0xa7,eax
  41c528:	xor    dl,0x32
  41c52b:	leave  
  41c52c:	out    0x9,eax
  41c52e:	stos   DWORD PTR es:[edi],eax
  41c52f:	add    ah,0x57
  41c532:	or     BYTE PTR [edx-0x61cdb5b8],0xc7
  41c539:	add    DWORD PTR [ebx],edx
  41c53b:	mov    eax,DWORD PTR [ebx]
  41c53d:	div    dh
  41c53f:	rcr    DWORD PTR [esi],1
  41c541:	sub    eax,0x413e4f9f
  41c546:	lods   al,BYTE PTR ds:[esi]
  41c547:	ja     0x41c52e
  41c549:	cmc    
  41c54a:	out    dx,al
  41c54b:	and    al,0x12
  41c54d:	add    al,ch
  41c54f:	cs das 
  41c551:	push   cs
  41c552:	adc    edx,DWORD PTR [ecx+0x6cc78749]
  41c558:	adc    eax,DWORD PTR [ebp+0x3b]
  41c55b:	mov    ch,0x5b
  41c55d:	and    BYTE PTR [esi+0x1269e7da],dh
  41c563:	jle    0x41c51a
  41c565:	int    0x63
  41c567:	xchg   ebx,eax
  41c568:	(bad)  
  41c569:	jnp    0x41c5b8
  41c56b:	pop    edi
  41c56c:	and    eax,ebx
  41c56e:	leave  
  41c56f:	mov    bl,0x86
  41c571:	adc    DWORD PTR [edx+0x1],esp
  41c574:	push   edi
  41c575:	cmp    cl,0x21
  41c578:	jmp    FWORD PTR [eax]
  41c57a:	xchg   edx,eax
  41c57b:	(bad)  
  41c57c:	in     al,dx
  41c57d:	jp     0x41c5ac
  41c57f:	push   edx
  41c580:	dec    eax
  41c581:	lock or eax,DWORD PTR [ebx+0x543ea0e0]
  41c588:	jae    0x41c51d
  41c58a:	pop    eax
  41c58b:	add    al,0xb6
  41c58d:	mov    bh,0xfc
  41c58f:	stc    
  41c590:	or     eax,0x8b659d4c
  41c595:	cwde   
  41c596:	inc    esp
  41c597:	lods   eax,DWORD PTR ds:[esi]
  41c598:	jmp    FWORD PTR ds:0xe9e93fd5
  41c59e:	enter  0x1b2a,0x27
  41c5a2:	add    eax,0x87f535a5
  41c5a7:	fwait
  41c5a8:	sahf   
  41c5a9:	lahf   
  41c5aa:	jmp    DWORD PTR [ecx]
  41c5ac:	mov    ch,0x66
  41c5ae:	or     al,0x85
  41c5b0:	int    0xa5
  41c5b2:	cmp    al,0xec
  41c5b4:	and    dh,BYTE PTR ds:0x2e64bb62
  41c5ba:	popa   
  41c5bb:	jno    0x41c622
  41c5bd:	lock mov ecx,0x6e21333e
  41c5c3:	push   esi
  41c5c4:	popa   
  41c5c5:	in     eax,0x83
  41c5c7:	std    
  41c5c8:	jg     0x41c62d
  41c5ca:	stos   DWORD PTR es:[edi],eax
  41c5cb:	(bad)  
  41c5cc:	cld    
  41c5cd:	sbb    ebx,DWORD PTR [edx+0x50]
  41c5d0:	jmp    0xc910:0xffe6e8db
  41c5d7:	mov    dh,0xbc
  41c5d9:	cmp    eax,0xcc75913c
  41c5de:	or     ebx,DWORD PTR [edi]
  41c5e0:	mov    edi,0x545afd45
  41c5e5:	ins    BYTE PTR es:[edi],dx
  41c5e6:	popa   
  41c5e7:	retf   
  41c5e8:	fwait
  41c5e9:	inc    edi
  41c5ea:	add    al,0xcc
  41c5ec:	inc    ebp
  41c5ed:	or     bl,BYTE PTR [eax]
  41c5ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5f0:	ds dec edi
  41c5f2:	rol    BYTE PTR [esi+eax*8+0x63],0x95
  41c5f7:	cmp    al,0x11
  41c5f9:	xchg   bh,bl
  41c5fb:	or     al,0xa9
  41c5fd:	data16 clc 
  41c5ff:	out    0x1d,al
  41c601:	cmp    al,0x29
  41c603:	add    esp,edx
  41c605:	adc    ch,BYTE PTR [edx+0x189fb1b4]
  41c60b:	jo     0x41c66e
  41c60d:	pop    ebp
  41c60e:	js     0x41c618
  41c610:	pop    edi
  41c611:	cld    
  41c612:	push   0xa133e132
  41c617:	adc    BYTE PTR [ebx],cl
  41c619:	push   DWORD PTR [ecx+ebx*2+0x6c]
  41c61d:	and    dl,al
  41c61f:	into   
  41c620:	xchg   ebp,eax
  41c621:	(bad)  
  41c622:	jno    0x41c5fb
  41c624:	jle    0x41c5ba
  41c626:	add    BYTE PTR [eax+0x24],dh
  41c629:	out    dx,eax
  41c62a:	pop    ecx
  41c62b:	inc    ebx
  41c62c:	pop    ebp
  41c62d:	into   
  41c62e:	mov    edi,DWORD PTR [ebx]
  41c630:	inc    eax
  41c631:	mov    DWORD PTR [eax+0x51],ebp
  41c634:	loopne 0x41c64a
  41c636:	lahf   
  41c637:	cdq    
  41c638:	adc    BYTE PTR [esi],ch
  41c63a:	inc    edx
  41c63b:	or     ah,BYTE PTR [edx-0x8]
  41c63e:	cwde   
  41c63f:	push   ss
  41c640:	adc    BYTE PTR [esp+ebx*1-0x4e],cl
  41c644:	mov    DWORD PTR [ecx-0x8],esp
  41c647:	adc    al,0xc4
  41c649:	push   0x59515a2d
  41c64e:	and    DWORD PTR [esi+esi*2+0x5],ebp
  41c652:	push   0x13406a50
  41c657:	fistp  DWORD PTR [ebx]
  41c659:	cld    
  41c65a:	push   ecx
  41c65b:	test   ch,bh
  41c65d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c65e:	xchg   esi,eax
  41c65f:	jmp    0x8499:0xc1cd53f6
  41c666:	out    0x33,al
  41c668:	and    edx,eax
  41c66a:	cdq    
  41c66b:	test   BYTE PTR [edx+esi*1],bl
  41c66e:	lahf   
  41c66f:	or     eax,0x18bdf7b3
  41c674:	push   edx
  41c675:	mov    bl,0x6a
  41c677:	rcr    ch,cl
  41c679:	inc    edx
  41c67a:	test   DWORD PTR [edx+esi*1-0x4466de8c],esi
  41c681:	bound  ecx,QWORD PTR [edi+ebp*8-0x36]
  41c685:	fwait
  41c686:	adc    DWORD PTR [eax+edi*8-0xd],ecx
  41c68a:	clc    
  41c68b:	mov    ch,0xf
  41c68d:	pusha  
  41c68e:	clc    
  41c68f:	sbb    cl,BYTE PTR [edx]
  41c691:	push   esi
  41c692:	and    al,dh
  41c694:	add    ecx,ebp
  41c696:	retf   0x94d
  41c699:	out    dx,eax
  41c69a:	dec    ecx
  41c69b:	mov    bh,0xef
  41c69d:	sub    al,0x4
  41c69f:	ror    BYTE PTR [edx-0xe],0xe1
  41c6a3:	out    0x6a,eax
  41c6a5:	jbe    0x41c69d
  41c6a7:	in     al,dx
  41c6a8:	in     eax,0x57
  41c6aa:	jge    0x41c6a6
  41c6ac:	inc    edx
  41c6ad:	jmp    0x82d5:0xe40a0c1e
  41c6b4:	mov    cl,0x7d
  41c6b6:	fimul  WORD PTR ss:[edx]
  41c6b9:	(bad)  
  41c6ba:	sub    eax,0x593e0c34
  41c6bf:	pop    es
  41c6c0:	jnp    0x41c6c3
  41c6c2:	mov    edi,0xf3d81a35
  41c6c7:	cmp    ebx,0xffffffc6
  41c6ca:	inc    ecx
  41c6cb:	out    0x11,eax
  41c6cd:	or     eax,0x6ebf1b4e
  41c6d2:	xchg   edx,eax
  41c6d3:	mov    dh,0x42
  41c6d5:	or     BYTE PTR [ecx-0x50],ch
  41c6d8:	out    dx,al
  41c6d9:	push   0x5
  41c6db:	sbb    eax,0x6418e5b
  41c6e0:	mov    ah,bh
  41c6e2:	xchg   BYTE PTR [edi-0x79],bh
  41c6e5:	inc    esi
  41c6e6:	sub    al,0x44
  41c6e8:	pop    es
  41c6e9:	jne    0x41c694
  41c6eb:	xor    BYTE PTR [esp+esi*2+0x220697c8],ch
  41c6f2:	das    
  41c6f3:	ins    DWORD PTR es:[edi],dx
  41c6f4:	cmp    al,0x19
  41c6f6:	push   edx
  41c6f7:	cmp    al,0xb8
  41c6f9:	mov    ebp,0x1964decb
  41c6fe:	loope  0x41c6b0
  41c700:	add    DWORD PTR [esi],edx
  41c702:	add    al,0x2c
  41c704:	iret   
  41c705:	arpl   WORD PTR [ebp+0xacf840f],di
  41c70b:	test   bh,0xcd
  41c70e:	addr16 arpl sp,bp
  41c711:	cmp    eax,0x61b786f0
  41c716:	push   ds
  41c717:	out    0x5b,eax
  41c719:	push   ss
  41c71a:	inc    eax
  41c71b:	cld    
  41c71c:	or     esi,DWORD PTR [edx]
  41c71e:	rcl    BYTE PTR [ecx+0x2ce94c9],cl
  41c724:	push   esi
  41c725:	mov    ebp,0xf2e76301
  41c72a:	stos   BYTE PTR es:[edi],al
  41c72b:	out    dx,al
  41c72c:	push   0x22
  41c72e:	jge    0x41c767
  41c730:	arpl   WORD PTR [ebx+ebp*1],cx
  41c733:	fidivr DWORD PTR [eax+0x1a9658a5]
  41c739:	add    dh,ah
  41c73b:	mov    al,0x4c
  41c73d:	xor    bh,BYTE PTR [ebx*4-0x199200dc]
  41c744:	lods   al,BYTE PTR ds:[esi]
  41c745:	dec    ebp
  41c746:	mov    eax,esi
  41c748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c749:	adc    DWORD PTR [edi+0x35],esp
  41c74c:	mov    BYTE PTR [ebx],dl
  41c74e:	mov    ebp,0x9a3926b
  41c753:	mov    esp,0x28611b34
  41c758:	(bad)  [esi]
  41c75a:	adc    DWORD PTR [ebx],edi
  41c75c:	inc    ebp
  41c75d:	push   0x4b
  41c75f:	repz loop 0x41c73b
  41c762:	dec    eax
  41c763:	adc    al,0xdd
  41c765:	stc    
  41c766:	mov    bl,0x7b
  41c768:	bound  edi,QWORD PTR [edi-0x60589c1a]
  41c76e:	pop    eax
  41c76f:	lods   eax,DWORD PTR ds:[esi]
  41c770:	ficom  DWORD PTR [esi]
  41c772:	dec    ecx
  41c773:	js     0x41c7ea
  41c775:	retf   0xd762
  41c778:	pushf  
  41c779:	fchs   
  41c77b:	out    0x54,eax
  41c77d:	xlat   BYTE PTR ds:[ebx]
  41c77e:	pop    ebp
  41c77f:	mov    bh,0x37
  41c781:	loope  0x41c724
  41c783:	loop   0x41c7a8
  41c785:	mov    ds:0x201f1139,al
  41c78a:	pusha  
  41c78b:	in     al,0x83
  41c78d:	xor    ebp,DWORD PTR [edx]
  41c78f:	mov    edx,0xc631eae8
  41c794:	int    0x65
  41c796:	sub    DWORD PTR [edi+0xc49df5d],esp
  41c79c:	xor    eax,0x8e94e1d7
  41c7a1:	out    0xc3,eax
  41c7a3:	sar    BYTE PTR [ebp-0x49],cl
  41c7a6:	popf   
  41c7a7:	pop    esp
  41c7a8:	jg     0x41c7a1
  41c7aa:	(bad)  
  41c7ab:	push   edi
  41c7ac:	daa    
  41c7ad:	fisubr DWORD PTR [eiz*8+0x61c0248d]
  41c7b4:	jno    0x41c7dc
  41c7b6:	dec    ebx
  41c7b7:	je     0x41c7cb
  41c7b9:	cmp    dh,bl
  41c7bb:	xor    al,0xc4
  41c7bd:	popa   
  41c7be:	push   ebp
  41c7bf:	in     al,0x58
  41c7c1:	and    ecx,DWORD PTR [ecx-0x3da65557]
  41c7c7:	ss jg  0x41c841
  41c7ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7cb:	mov    bh,0xcf
  41c7cd:	pop    ebp
  41c7ce:	gs push ds
  41c7d0:	mov    WORD PTR [edi+0x9321e2c],ss
  41c7d6:	shl    DWORD PTR ds:0xa2abe96b,0x93
  41c7dd:	lods   al,BYTE PTR ds:[esi]
  41c7de:	int    0xc4
  41c7e0:	pop    edx
  41c7e1:	std    
  41c7e2:	jne    0x41c828
  41c7e4:	ss jl  0x41c81b
  41c7e7:	dec    esp
  41c7e8:	lods   al,BYTE PTR gs:[si]
  41c7eb:	nop
  41c7ec:	test   DWORD PTR [ebp+0xd],ebx
  41c7ef:	and    DWORD PTR [ecx+ebp*4-0xf4ec75f],0xe6ca4622
  41c7fa:	jnp    0x41c7f5
  41c7fc:	mov    edx,0xcae7b1f1
  41c801:	cwde   
  41c802:	jo     0x41c7a7
  41c804:	leave  
  41c805:	loop   0x41c813
  41c807:	inc    esi
  41c808:	loopne 0x41c80d
  41c80a:	push   eax
  41c80b:	pop    esi
  41c80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c80d:	or     al,0xd4
  41c80f:	popf   
  41c810:	sub    al,0x5d
  41c812:	adc    esi,DWORD PTR gs:[edx+eax*2+0x23]
  41c817:	pop    esi
  41c818:	sbb    edi,ecx
  41c81a:	mov    ch,0x90
  41c81c:	pop    ebp
  41c81d:	push   esi
  41c81e:	or     DWORD PTR [eax],ecx
  41c820:	pop    ebp
  41c821:	and    eax,ebp
  41c823:	ins    DWORD PTR es:[edi],dx
  41c824:	mov    cl,BYTE PTR [edx+0x53]
  41c827:	in     al,dx
  41c828:	in     eax,0x10
  41c82a:	adc    BYTE PTR [ebx+ebx*1+0x7f9692e9],dh
  41c831:	addr16 jb 0x41c836
  41c834:	xor    eax,0x6f7b036b
  41c839:	lea    esi,[ebx+edi*8-0x74]
  41c83d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c83e:	mov    bl,0x35
  41c840:	repz popa 
  41c842:	cli    
  41c843:	dec    ebx
  41c844:	inc    esp
  41c845:	fist   WORD PTR ds:[edx+0x70]
  41c849:	ss or  eax,0x7738de81
  41c84f:	push   0xc2717b39
  41c854:	jno    0x41c845
  41c856:	rol    ch,cl
  41c858:	pop    ebx
  41c859:	pop    ebp
  41c85a:	out    dx,al
  41c85b:	(bad)  
  41c85d:	aas    
  41c85e:	out    0x64,eax
  41c860:	retf   0x2b6c
  41c863:	mov    ebp,eax
  41c865:	les    edi,FWORD PTR [eax-0x8]
  41c868:	lea    eax,[esp+edi*2+0x52364155]
  41c86f:	call   0x646b83cf
  41c874:	bound  esp,QWORD PTR [edx-0x63]
  41c877:	dec    esi
  41c878:	jmp    0x8b7f:0xef10573a
  41c87f:	mov    al,0x22
  41c881:	loope  0x41c87c
  41c883:	sahf   
  41c884:	push   edi
  41c885:	pusha  
  41c886:	dec    ebp
  41c887:	out    dx,al
  41c888:	cmp    ebx,DWORD PTR ds:[ecx]
  41c88b:	aad    0xa2
  41c88d:	jg     0x41c81d
  41c88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c890:	sti    
  41c891:	sub    DWORD PTR [ebp+0x3569d93d],esi
  41c897:	test   DWORD PTR [eax+ebx*2],esi
  41c89a:	adc    eax,0xc017e584
  41c89f:	fwait
  41c8a0:	(bad)  
  41c8a1:	ds retf 
  41c8a3:	sbb    edx,DWORD PTR [ebx+0x46e2e5ff]
  41c8a9:	and    eax,0xcfd81b52
  41c8ae:	jg     0x41c86c
  41c8b0:	fld    st(6)
  41c8b2:	push   eax
  41c8b3:	loopne 0x41c885
  41c8b5:	lods   al,BYTE PTR ds:[esi]
  41c8b6:	xlat   BYTE PTR ds:[ebx]
  41c8b7:	pop    ss
  41c8b8:	sbb    dh,ah
  41c8ba:	shl    BYTE PTR [esi+0x1a374430],1
  41c8c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8c1:	leave  
  41c8c2:	sbb    dh,bl
  41c8c4:	xchg   esp,eax
  41c8c5:	sub    dl,BYTE PTR [edx-0x41cfbbb8]
  41c8cb:	push   edx
  41c8cc:	cli    
  41c8cd:	xchg   ebp,eax
  41c8ce:	popa   
  41c8cf:	pop    ss
  41c8d0:	jp     0x41c913
  41c8d2:	add    eax,0x92e7fb9f
  41c8d7:	inc    DWORD PTR [eax+0x6805a03d]
  41c8dd:	add    edx,ebx
  41c8df:	push   edi
  41c8e0:	push   ecx
  41c8e1:	fimul  WORD PTR [eax]
  41c8e3:	xor    bh,BYTE PTR [esi-0x19]
  41c8e6:	jns    0x41c933
  41c8e8:	push   cs
  41c8e9:	push   esp
  41c8ea:	loopne 0x41c8c9
  41c8ec:	jmp    0x41c911
  41c8ee:	jb     0x41c957
  41c8f0:	into   
  41c8f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f2:	int3   
  41c8f3:	es mov bh,0x8d
  41c8f6:	cld    
  41c8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8f8:	imul   edx,DWORD PTR [eax+0x46],0x1523d075
  41c8ff:	out    dx,eax
  41c900:	repnz mov al,0x15
  41c903:	adc    dh,BYTE PTR [eax+0x3e7c7abf]
  41c909:	mov    ah,BYTE PTR [ecx+0x2]
  41c90c:	arpl   WORD PTR cs:[esi+0x65f90ac],bp
  41c913:	stc    
  41c914:	ins    DWORD PTR es:[edi],dx
  41c915:	pop    es
  41c916:	les    ebp,FWORD PTR [edx]
  41c918:	xchg   ebx,eax
  41c919:	stos   DWORD PTR es:[edi],eax
  41c91a:	pop    ecx
  41c91b:	arpl   WORD PTR [ecx-0x1b],si
  41c91e:	loop   0x41c900
  41c920:	mov    cl,0x1b
  41c922:	mov    edx,0xa2b7bf3c
  41c927:	fimul  WORD PTR [ebx]
  41c929:	repz push 0x2
  41c92c:	es jns 0x41c93b
  41c92f:	nop
  41c930:	mov    esp,0x5147d8c9
  41c935:	inc    ecx
  41c936:	pusha  
  41c937:	inc    ebx
  41c938:	inc    ebx
  41c939:	xor    bh,al
  41c93b:	mov    ecx,0xac803a1e
  41c940:	sub    al,0xaf
  41c942:	ror    BYTE PTR [eax+0x1f6d9560],0x35
  41c949:	xchg   edx,eax
  41c94a:	ins    DWORD PTR es:[edi],dx
  41c94b:	mov    ds:0x2b3bd4b5,eax
  41c950:	cmp    eax,0xaf6acb2f
  41c955:	sbb    DWORD PTR ds:0xd2d8802d,edx
  41c95b:	cmp    eax,0x934978d9
  41c960:	ins    BYTE PTR es:[edi],dx
  41c961:	shl    dl,1
  41c963:	adc    DWORD PTR [ecx+0x7f694ee5],0x82b2e393
  41c96d:	fisubr WORD PTR [ebp+0x25]
  41c970:	sti    
  41c971:	mov    ss,WORD PTR [esi-0x7e]
  41c974:	pop    DWORD PTR [edx]
  41c976:	jg     0x41c960
  41c978:	adc    ch,BYTE PTR [eax+0x67]
  41c97b:	cmp    eax,0x9e151f1
  41c980:	mov    edi,0xc0e15a48
  41c985:	adc    edi,DWORD PTR [ecx-0x38e9a4e]
  41c98b:	sbb    ebp,DWORD PTR [edi-0x19b883ba]
  41c991:	aad    0x76
  41c993:	cdq    
  41c994:	cwde   
  41c995:	jg     0x41c96b
  41c997:	mov    dl,0x29
  41c999:	int3   
  41c99a:	mov    ?,WORD PTR [edx]
  41c99c:	xchg   ebp,eax
  41c99d:	mov    esi,0xeab26544
  41c9a2:	(bad)  
  41c9a3:	push   ss
  41c9a4:	loopne 0x41c9b2
  41c9a6:	pusha  
  41c9a7:	f2xm1  
  41c9a9:	(bad)  
  41c9aa:	shl    ebp,cl
  41c9ac:	adc    esi,DWORD PTR [ebp+0x48]
  41c9af:	mov    al,0x71
  41c9b1:	loop   0x41c9a8
  41c9b3:	in     eax,dx
  41c9b4:	jo     0x41c963
  41c9b6:	fmul   QWORD PTR [edi+0x4c]
  41c9b9:	sbb    al,0x45
  41c9bb:	scas   eax,DWORD PTR es:[edi]
  41c9bc:	(bad)  
  41c9bd:	cs pop edx
  41c9bf:	into   
  41c9c0:	push   cs
  41c9c1:	and    DWORD PTR [ecx+0x66bb11a2],0xffffffd3
  41c9c8:	mov    bh,0xef
  41c9ca:	ret    0x67e5
  41c9cd:	lods   al,BYTE PTR ds:[esi]
  41c9ce:	ret    0x3905
  41c9d1:	adc    DWORD PTR [ebx-0x4cd4d95f],ebx
  41c9d7:	cmp    eax,DWORD PTR [edi-0x3b]
  41c9da:	nop
  41c9db:	push   es
  41c9dc:	jo     0x41c981
  41c9de:	push   cs
  41c9df:	and    bl,bh
  41c9e1:	in     al,dx
  41c9e2:	ja     0x41ca47
  41c9e4:	fsubr  DWORD PTR [ebp-0x70e9736c]
  41c9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9eb:	dec    esp
  41c9ec:	sub    BYTE PTR [eax-0x474a0d28],bl
  41c9f2:	adc    al,0xf6
  41c9f4:	aas    
  41c9f5:	cmc    
  41c9f6:	push   0xffffffcd
  41c9f8:	push   ecx
  41c9f9:	retf   0xe9df
  41c9fc:	xchg   DWORD PTR [ecx+0x26b87a26],edi
  41ca02:	mov    al,0x83
  41ca04:	pop    ss
  41ca05:	cmp    eax,0xd1346d44
  41ca0a:	in     al,0xa5
  41ca0c:	push   DWORD PTR [esi-0x21]
  41ca0f:	push   0xd96a4d2f
  41ca14:	xchg   BYTE PTR [ebx-0x3f],dl
  41ca17:	nop
  41ca18:	int    0xf4
  41ca1a:	inc    ecx
  41ca1b:	icebp  
  41ca1c:	rcr    DWORD PTR [edx+0x1d],cl
  41ca1f:	fwait
  41ca20:	mov    eax,ds:0x87f28d74
  41ca25:	lods   eax,DWORD PTR ds:[esi]
  41ca26:	mov    al,BYTE PTR [edi+0x58]
  41ca29:	je     0x41ca85
  41ca2b:	xlat   BYTE PTR ds:[ebx]
  41ca2c:	sbb    al,0xe
  41ca2e:	inc    edx
  41ca2f:	push   0x70
  41ca31:	out    0x3c,al
  41ca33:	add    edi,DWORD PTR [ecx+0x1274448f]
  41ca39:	call   0x28bb:0x69eded8c
  41ca40:	push   0xffffffe8
  41ca42:	or     al,0x8
  41ca44:	sbb    eax,0x58febd13
  41ca49:	add    al,BYTE PTR [esi+0x7b839220]
  41ca4f:	pop    edx
  41ca50:	pushf  
  41ca51:	xor    ebp,DWORD PTR [esi]
  41ca53:	mov    esi,0x4d8d06f2
  41ca58:	mov    bh,0xcf
  41ca5a:	pop    ebp
  41ca5b:	lock mov bh,0x1f
  41ca5e:	or     al,0x1f
  41ca60:	addr16 jno 0x41ca1a
  41ca63:	xchg   edx,eax
  41ca64:	lock pop esi
  41ca66:	sub    eax,DWORD PTR [ebx-0x3b536405]
  41ca6c:	jae    0x41ca5e
  41ca6e:	mov    bl,0x85
  41ca70:	out    0xea,eax
  41ca72:	jnp    0x41ca35
  41ca74:	or     BYTE PTR [edi+eiz*2],cl
  41ca77:	xchg   edx,eax
  41ca78:	push   edx
  41ca79:	popf   
  41ca7a:	repnz dec edi
  41ca7c:	int3   
  41ca7d:	mov    ebx,0x539f2408
  41ca82:	fcmovnbe st,st(7)
  41ca84:	gs shl ch,1
  41ca87:	mov    eax,ds:0xa214a7ef
  41ca8c:	test   DWORD PTR [ecx-0x31],0x9dc6c65e
  41ca93:	pop    ss
  41ca94:	cmp    al,0x83
  41ca96:	(bad)  
  41ca97:	jp     0x41ca83
  41ca99:	mov    WORD PTR [eax-0x7d9ca73f],ss
  41ca9f:	dec    esp
  41caa0:	ss out 0xe3,eax
  41caa3:	pop    ebp
  41caa4:	cmc    
  41caa5:	dec    edi
  41caa6:	(bad)  
  41caa7:	imul   edx,DWORD PTR [edi],0x79
  41caaa:	or     DWORD PTR [ecx+edi*8+0x6fe786da],ebx
  41cab1:	jl     0x41cb05
  41cab3:	in     eax,dx
  41cab4:	adc    bh,cl
  41cab6:	inc    eax
  41cab7:	and    bh,bl
  41cab9:	mov    al,0xf8
  41cabb:	test   al,0xd
  41cabd:	sbb    eax,0xf9374509
  41cac2:	xchg   ebp,eax
  41cac3:	popa   
  41cac4:	shl    DWORD PTR [ebp+0xa704500],1
  41caca:	push   esp
  41cacb:	mov    al,0xc8
  41cacd:	cmp    eax,0xb24ba65
  41cad2:	adc    dh,dh
  41cad4:	xchg   esp,eax
  41cad5:	rcl    BYTE PTR [edx-0x6f246715],cl
  41cadb:	mov    ds:0x684ff6e0,al
  41cae0:	or     DWORD PTR [esi+0x65c100f6],0x7c
  41cae7:	(bad)  
  41cae8:	fistp  QWORD PTR [esp+eax*4]
  41caeb:	shr    BYTE PTR [eax],1
  41caed:	sub    BYTE PTR [ebp+0x73],bh
  41caf0:	bound  edx,QWORD PTR [ebx+0xc]
  41caf3:	mov    dl,0x20
  41caf5:	cmp    BYTE PTR [edi+edi*4-0x2e2650a6],ah
  41cafc:	add    eax,0x5b98e07
  41cb01:	clc    
  41cb02:	or     eax,0xe107be1d
  41cb07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb08:	adc    al,0x2
  41cb0a:	xor    BYTE PTR [eax+edi*4-0x5],dh
  41cb0e:	pop    ds
  41cb0f:	dec    ebp
  41cb10:	dec    edi
  41cb11:	jae    0x41cb4a
  41cb13:	fwait
  41cb14:	mov    bl,0x99
  41cb16:	or     edx,ebx
  41cb18:	aas    
  41cb19:	retf   
  41cb1a:	jns    0x41cb2d
  41cb1c:	mov    ch,0xdd
  41cb1e:	push   0x4b
  41cb20:	mov    esi,0xbb48dcbe
  41cb25:	sub    DWORD PTR [edx-0x5545a061],eax
  41cb2b:	lea    esi,[ebx+ebp*4+0x5fda9a73]
  41cb32:	fld    TBYTE PTR [ebx+0x47]
  41cb35:	xchg   edx,eax
  41cb36:	inc    esp
  41cb37:	hlt    
  41cb38:	imul   ebp,DWORD PTR [esi],0x12
  41cb3b:	(bad)  
  41cb3c:	std    
  41cb3d:	jmp    0x39a767b
  41cb42:	in     al,dx
  41cb43:	mov    dl,0x30
  41cb45:	dec    ebx
  41cb46:	push   ecx
  41cb47:	pushf  
  41cb48:	int3   
  41cb49:	jne    0x41cbca
  41cb4b:	add    al,0x39
  41cb4d:	xlat   BYTE PTR ds:[ebx]
  41cb4e:	test   al,0x92
  41cb50:	xor    eax,0xa22cce60
  41cb55:	mov    ds:0xdb94a2cb,al
  41cb5a:	jl     0x41cb56
  41cb5c:	jle    0x41cb7d
  41cb5e:	mov    ss,WORD PTR [esi+0x1e9f7af2]
  41cb64:	shl    DWORD PTR [edi-0x7ebab98e],1
  41cb6a:	addr16 add edx,esi
  41cb6d:	ret    
  41cb6e:	lea    edi,[edx-0x2bd603dc]
  41cb74:	lods   eax,DWORD PTR ds:[esi]
  41cb75:	mov    ecx,0x464b2d4a
  41cb7a:	jno    0x41cb00
  41cb7c:	jae    0x41cba1
  41cb7e:	inc    esp
  41cb7f:	xor    edi,esp
  41cb81:	xor    al,0x75
  41cb83:	inc    ebp
  41cb84:	mov    edi,0x83bef4ed
  41cb89:	xchg   ebp,eax
  41cb8a:	mov    bh,0x2
  41cb8c:	js     0x41cbc8
  41cb8e:	lock mov ecx,DWORD PTR [esi+0x76e67953]
  41cb95:	inc    ebx
  41cb96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb97:	mov    ch,0x9d
  41cb99:	in     eax,dx
  41cb9a:	mov    ebp,0x37ffe7b2
  41cb9f:	std    
  41cba0:	sub    BYTE PTR ds:0x5933ed48,bl
  41cba6:	push   ebp
  41cba7:	sar    ebp,cl
  41cba9:	jae    0x41cbca
  41cbab:	mov    bl,0xae
  41cbad:	cmp    al,0xaa
  41cbaf:	jmp    0x84a1:0x3b4a7540
  41cbb6:	leave  
  41cbb7:	add    edx,esi
  41cbb9:	mov    BYTE PTR [ebx],cl
  41cbbb:	xchg   BYTE PTR [esi+eax*2-0x5e9c4402],ah
  41cbc2:	shl    DWORD PTR [edi],cl
  41cbc4:	sar    BYTE PTR [ebp+edi*2-0x7e751170],0x9f
  41cbcc:	stc    
  41cbcd:	mov    edx,0xcc2fa24f
  41cbd2:	punpckhwd mm1,QWORD PTR [ebp+0x0]
  41cbd6:	or     eax,0x80daec8d
  41cbdb:	(bad)  
  41cbdc:	mov    ebp,0xc67af477
  41cbe1:	imul   edx,DWORD PTR [eax],0x2e76575c
  41cbe7:	rcl    DWORD PTR [ecx+0x6ebfbc90],0x2
  41cbee:	lods   eax,DWORD PTR ds:[esi]
  41cbef:	push   ds
  41cbf0:	out    0x9c,eax
  41cbf2:	cmp    ah,BYTE PTR [ebp-0x5b]
  41cbf5:	sub    esp,ecx
  41cbf7:	out    dx,eax
  41cbf8:	mov    eax,0x98aaff5e
  41cbfd:	dec    ebp
  41cbfe:	lea    ebx,[ecx]
  41cc00:	test   DWORD PTR [ecx-0x44],0x990a5afc
  41cc07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc08:	and    al,0x85
  41cc0a:	mov    eax,ds:0xfd168773
  41cc0f:	and    cl,ah
  41cc11:	lahf   
  41cc12:	dec    esp
  41cc13:	and    eax,0xc0edf7e
  41cc18:	xchg   edx,eax
  41cc19:	ja     0x41cc8f
  41cc1b:	fcomp  QWORD PTR [edi]
  41cc1d:	test   BYTE PTR [esi-0xd72c9ad],0x20
  41cc24:	rol    DWORD PTR [ecx-0x46],1
  41cc27:	imul   ebx,DWORD PTR [esi-0x5f74831c],0xffffff9d
  41cc2e:	and    BYTE PTR [ecx],0x49
  41cc31:	push   esi
  41cc32:	stos   BYTE PTR es:[edi],al
  41cc33:	(bad)  
  41cc34:	popf   
  41cc35:	and    BYTE PTR [eax-0x401ed77d],ah
  41cc3b:	retf   
  41cc3c:	xchg   ebp,eax
  41cc3d:	sub    al,0x98
  41cc3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc40:	add    edi,DWORD PTR [esi-0x43]
  41cc43:	mov    esp,0xcc1a7bce
  41cc48:	cmp    dh,BYTE PTR [ebp+0x53]
  41cc4b:	xor    esp,DWORD PTR [esi+0x78]
  41cc4e:	and    al,0x8d
  41cc50:	imul   esp,DWORD PTR [eax],0x29
  41cc53:	jae    0x41cc52
  41cc55:	xchg   ecx,eax
  41cc56:	ins    DWORD PTR es:[edi],dx
  41cc57:	mov    edx,cs
  41cc59:	pusha  
  41cc5a:	dec    ebx
  41cc5b:	mov    ecx,0x3fc67dbb
  41cc60:	mov    dl,0xb3
  41cc62:	xchg   ebx,eax
  41cc63:	push   esp
  41cc64:	stos   BYTE PTR es:[edi],al
  41cc65:	jb     0x41ccc0
  41cc67:	mov    al,ds:0x452669f5
  41cc6c:	sbb    DWORD PTR [edx],ebp
  41cc6e:	es jno 0x41cc95
  41cc71:	jae    0x41cc4b
  41cc73:	imul   ecx,DWORD PTR [esi],0x861ac240
  41cc79:	in     al,0x58
  41cc7b:	inc    eax
  41cc7c:	(bad)  
  41cc7d:	(bad)  [ecx+0x2c00c36f]
  41cc83:	pop    es
  41cc84:	cld    
  41cc85:	iret   
  41cc86:	jns    0x41ccf7
  41cc88:	xor    eax,0x1a8cb6ea
  41cc8d:	pop    eax
  41cc8e:	mov    eax,0xe73701ca
  41cc93:	(bad)  
  41cc94:	sub    bl,BYTE PTR [ecx+0x48]
  41cc97:	dec    edx
  41cc98:	fmul   DWORD PTR fs:0xa57ec79
  41cc9f:	sub    al,0x82
  41cca1:	inc    ebp
  41cca2:	jecxz  0x41cc5c
  41cca4:	inc    ebx
  41cca5:	xor    edx,DWORD PTR [esp+ebx*2+0x5abc4279]
  41ccac:	cmp    al,0x96
  41ccae:	inc    ebp
  41ccaf:	add    DWORD PTR [ecx],esp
  41ccb1:	add    al,0x81
  41ccb3:	std    
  41ccb4:	arpl   di,bp
  41ccb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccb7:	mov    ds:0xa690f4db,al
  41ccbc:	mov    dl,0x8e
  41ccbe:	in     al,0xe
  41ccc0:	icebp  
  41ccc1:	fisubr WORD PTR [esi+0x638f8b2d]
  41ccc7:	mov    ecx,0x30c6cce6
  41cccc:	fsub   DWORD PTR [esi-0x3e4abcc6]
  41ccd2:	or     BYTE PTR [esi],cl
  41ccd4:	push   edi
  41ccd5:	or     ecx,DWORD PTR [esi+0x46]
  41ccd8:	inc    ecx
  41ccd9:	mov    al,cs:0xb65a4d00
  41ccdf:	inc    eax
  41cce0:	shl    DWORD PTR [eax-0x67],cl
  41cce3:	outs   dx,DWORD PTR ds:[esi]
  41cce4:	data16 mov ah,0xda
  41cce7:	repnz idiv DWORD PTR [esi]
  41ccea:	cs fisubr WORD PTR cs:[eax+ecx*8]
  41ccef:	pop    ds
  41ccf0:	xor    DWORD PTR [eax-0x6ecc3e0b],0x72
  41ccf7:	pand   mm2,mm7
  41ccfa:	in     al,0x1
  41ccfc:	fcmovu st,st(7)
  41ccfe:	sar    DWORD PTR [ecx-0x6b81ef2c],cl
  41cd04:	inc    eax
  41cd05:	add    al,0x62
  41cd07:	mov    dh,0xc5
  41cd09:	es clc 
  41cd0b:	hlt    
  41cd0c:	jmp    0xde7180fb
  41cd11:	xchg   DWORD PTR [eax+0x6d],ecx
  41cd14:	shl    ch,cl
  41cd16:	ins    DWORD PTR es:[edi],dx
  41cd17:	loop   0x41cd5b
  41cd19:	jmp    0x5a56:0x4d98b754
  41cd20:	(bad)  
  41cd21:	icebp  
  41cd22:	inc    edi
  41cd23:	pop    ebx
  41cd24:	xchg   dh,bh
  41cd26:	add    eax,0xec67a8da
  41cd2b:	out    dx,eax
  41cd2c:	and    ebp,esi
  41cd2e:	inc    ebx
  41cd2f:	shl    DWORD PTR [esi+0x1639a5b4],cl
  41cd35:	dec    ebx
  41cd36:	jmp    0xec4394e7
  41cd3b:	and    BYTE PTR [ebp-0x79],dl
  41cd3e:	mov    ch,BYTE PTR [edi+0x1a]
  41cd41:	xor    DWORD PTR [ecx-0x29],0x75
  41cd45:	fcomp  DWORD PTR [ecx]
  41cd47:	adc    ebx,ecx
  41cd49:	ret    0x1757
  41cd4c:	call   0xc514:0x835417f5
  41cd53:	and    BYTE PTR [edx],ah
  41cd55:	repnz gs pop ebp
  41cd58:	(bad)  
  41cd59:	mov    esp,?
  41cd5b:	scas   eax,DWORD PTR es:[edi]
  41cd5c:	rcr    DWORD PTR [edx-0x61],1
  41cd5f:	cmc    
  41cd60:	jno    0x41cd7b
  41cd62:	mov    ch,0xd8
  41cd64:	ror    DWORD PTR [esi],1
  41cd66:	fistp  DWORD PTR [ebx-0x80]
  41cd69:	ins    BYTE PTR es:[edi],dx
  41cd6a:	push   0x1d6b03f0
  41cd6f:	or     dl,BYTE PTR gs:[ebx+0x59]
  41cd73:	xchg   edi,eax
  41cd74:	hlt    
  41cd75:	mov    bl,dl
  41cd77:	or     ah,BYTE PTR [ecx-0x4a134aa2]
  41cd7d:	xchg   ebp,eax
  41cd7e:	push   ss
  41cd7f:	(bad)  
  41cd80:	outs   dx,BYTE PTR es:[esi]
  41cd82:	jecxz  0x41cd75
  41cd84:	idiv   BYTE PTR [ebx]
  41cd86:	loop   0x41cdcf
  41cd88:	enter  0xb143,0xe1
  41cd8c:	into   
  41cd8d:	test   DWORD PTR [esi],ecx
  41cd8f:	outs   dx,DWORD PTR ds:[esi]
  41cd90:	nop
  41cd91:	sbb    DWORD PTR [edx-0x3d],ebp
  41cd94:	mov    eax,ds:0xc56702c7
  41cd99:	and    DWORD PTR [edi],edi
  41cd9b:	into   
  41cd9c:	jbe    0x41cdb9
  41cd9e:	dec    esp
  41cd9f:	outs   dx,DWORD PTR ds:[esi]
  41cda0:	outs   dx,DWORD PTR ds:[esi]
  41cda1:	clc    
  41cda2:	mov    ebp,0x8419b744
  41cda7:	ins    BYTE PTR es:[edi],dx
  41cda8:	pop    eax
  41cda9:	sbb    al,0x7d
  41cdab:	inc    esp
  41cdac:	bound  esp,QWORD PTR [edx]
  41cdae:	add    bl,ah
  41cdb0:	cld    
  41cdb1:	xchg   esi,eax
  41cdb2:	jns    0x41cd8c
  41cdb4:	push   ebx
  41cdb5:	mov    ecx,0x728475e1
  41cdba:	cmp    dh,al
  41cdbc:	sbb    BYTE PTR [ecx-0x2fca7e48],dh
  41cdc2:	add    al,BYTE PTR [eax-0x5f3faefe]
  41cdc8:	add    ebp,DWORD PTR [ebx-0x4a]
  41cdcb:	fnstenv ds:0xc3e0e1c4
  41cdd1:	and    dl,BYTE PTR [ecx-0x4c3a79f0]
  41cdd7:	add    eax,0x4fc6e78f
  41cddc:	std    
  41cddd:	xchg   ebx,eax
  41cdde:	jns    0x41cda6
  41cde0:	in     eax,0xcb
  41cde2:	dec    edx
  41cde3:	fs push esp
  41cde5:	mov    ecx,0xf963ece
  41cdea:	pop    edi
  41cdeb:	sbb    al,BYTE PTR fs:[edi]
  41cdee:	push   es
  41cdef:	cld    
  41cdf0:	jmp    0x3a936ddf
  41cdf5:	inc    ebx
  41cdf6:	rcl    DWORD PTR [ecx-0x26],cl
  41cdf9:	dec    ecx
  41cdfa:	in     eax,0x3d
  41cdfc:	ret    0x1cce
  41cdff:	cld    
  41ce00:	sub    ch,ch
  41ce02:	mov    dl,0x59
  41ce04:	mov    al,ds:0xa3de6612
  41ce09:	xor    DWORD PTR [edx],eax
  41ce0b:	out    0x4f,al
  41ce0d:	jl     0x41cdfb
  41ce0f:	fiadd  WORD PTR [edi]
  41ce11:	pushf  
  41ce12:	arpl   di,di
  41ce14:	retf   0x3dbd
  41ce17:	fistp  DWORD PTR [edi-0x4]
  41ce1a:	sub    edx,ebx
  41ce1c:	popf   
  41ce1d:	mov    ah,0x11
  41ce1f:	mov    ds:0x3c32a092,al
  41ce24:	in     eax,0xac
  41ce26:	(bad)  
  41ce27:	leave  
  41ce28:	jmp    0x1377862c
  41ce2d:	add    al,0x5
  41ce2f:	out    0xd9,eax
  41ce31:	out    0x53,al
  41ce33:	enter  0xf1a3,0x5
  41ce37:	aaa    
  41ce38:	jmp    0x8898c781
  41ce3d:	and    DWORD PTR gs:0xb6cf154f,eax
  41ce44:	leave  
  41ce45:	test   BYTE PTR [edi],ah
  41ce47:	outs   dx,BYTE PTR ds:[esi]
  41ce48:	pop    esp
  41ce49:	call   0x58b1:0xa773d80f
  41ce50:	aaa    
  41ce51:	iret   
  41ce52:	mov    edi,0x52f9bb96
  41ce57:	pop    esi
  41ce58:	jmp    0x536:0xc26c71c0
  41ce5f:	mov    ds:0x7d8717aa,al
  41ce64:	sbb    edi,edi
  41ce66:	sti    
  41ce67:	cmc    
  41ce68:	stos   BYTE PTR es:[edi],al
  41ce69:	add    DWORD PTR [eax-0x743567ac],esi
  41ce6f:	cmp    edi,DWORD PTR [esi-0x4e638ae5]
  41ce75:	lock dec ecx
  41ce77:	addr16 out dx,al
  41ce79:	or     dl,BYTE PTR [eax]
  41ce7b:	dec    ebp
  41ce7c:	adc    eax,0x9d1c2435
  41ce81:	mov    ebp,0x8a3b7f2f
  41ce86:	mov    dh,0x18
  41ce88:	and    ecx,DWORD PTR ds:0xc354dade
  41ce8e:	mov    bl,0xc2
  41ce90:	pop    esi
  41ce91:	(bad)  
  41ce92:	jns    0x41ceb2
  41ce94:	(bad)  
  41ce95:	adc    al,0xee
  41ce97:	sbb    eax,0x6a45cbc7
  41ce9c:	dec    esp
  41ce9d:	scas   eax,DWORD PTR es:[edi]
  41ce9e:	or     DWORD PTR ds:0xacd1b9ae,edi
  41cea4:	call   0xdba6:0xef9e4bc3
  41ceab:	xor    DWORD PTR [edx+0x40854064],esi
  41ceb1:	leave  
  41ceb2:	pop    ebx
  41ceb3:	sub    eax,0x76ad3b2
  41ceb8:	shl    BYTE PTR [esi+0x11c05de4],1
  41cebe:	inc    edx
  41cebf:	jns    0x41ce86
  41cec1:	nop
  41cec2:	clc    
  41cec3:	or     ebp,DWORD PTR [edi]
  41cec5:	or     dh,BYTE PTR [ebp+0x30]
  41cec8:	(bad)  
  41cec9:	lea    esp,[ecx+0x34]
  41cecc:	pop    edi
  41cecd:	out    0xa1,eax
  41cecf:	cmc    
  41ced0:	jnp    0x41ce5d
  41ced2:	xchg   ecx,eax
  41ced3:	mov    edx,0x49702b78
  41ced8:	mov    ebx,0x91bf35ea
  41cedd:	add    dl,BYTE PTR [edx]
  41cedf:	jle    0x41cec3
  41cee1:	jno    0x41cf25
  41cee3:	xchg   esp,eax
  41cee4:	and    ah,BYTE PTR [ebx-0x5d]
  41cee7:	sub    eax,0x34c29d3
  41ceec:	lock jg 0x41cedb
  41ceef:	mov    al,ds:0x2de2236d
  41cef4:	mov    edi,0xd96851b
  41cef9:	xchg   esp,eax
  41cefa:	mov    dl,0xec
  41cefc:	in     eax,dx
  41cefd:	fld    TBYTE PTR [esi]
  41ceff:	dec    ecx
  41cf00:	cwde   
  41cf01:	(bad)  
  41cf02:	cmp    al,0x19
  41cf04:	popa   
  41cf05:	pop    eax
  41cf06:	lea    edi,[edi+0x39]
  41cf09:	in     eax,0xa8
  41cf0b:	outs   dx,BYTE PTR ds:[esi]
  41cf0c:	repz retf 
  41cf0e:	dec    esp
  41cf0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf10:	add    al,0x62
  41cf12:	jb     0x41cf4d
  41cf14:	or     DWORD PTR [ebp-0x7b],edi
  41cf17:	sbb    al,0x88
  41cf19:	pop    ss
  41cf1a:	mov    dh,0x1
  41cf1c:	rol    DWORD PTR [eax+0x32092ccc],0x5d
  41cf23:	es out dx,al
  41cf25:	out    dx,al
  41cf26:	sbb    edx,DWORD PTR [edx+0x31]
  41cf29:	adc    DWORD PTR [eax+0x7c],0xe
  41cf2d:	mov    esi,0xdda31c5d
  41cf32:	or     eax,0xa8d07096
  41cf37:	and    cl,BYTE PTR [ebp-0x69c8060f]
  41cf3d:	bound  ebx,QWORD PTR [ecx+esi*2]
  41cf40:	mov    BYTE PTR [eax-0x7],0x24
  41cf44:	out    dx,eax
  41cf45:	jle    0x41cfa2
  41cf47:	(bad)  
  41cf48:	(bad)  
  41cf49:	push   esi
  41cf4a:	adc    al,0x21
  41cf4c:	repnz imul ebx,DWORD PTR [ebx+0x6e],0xffffff93
  41cf51:	clc    
  41cf52:	jae    0x41cf7f
  41cf54:	out    dx,al
  41cf55:	sub    al,0x98
  41cf57:	cs pop ebx
  41cf59:	dec    esi
  41cf5a:	or     ch,BYTE PTR [ebx+0x45a93216]
  41cf60:	sysret 
  41cf62:	pop    es
  41cf63:	out    dx,al
  41cf64:	add    dl,BYTE PTR cs:[ebx-0x4f]
  41cf68:	jbe    0x41cf41
  41cf6a:	lds    edx,FWORD PTR [edx-0x59]
  41cf6d:	stos   DWORD PTR es:[edi],eax
  41cf6e:	push   ecx
  41cf6f:	int3   
  41cf70:	jno    0x41cfee
  41cf72:	push   ecx
  41cf73:	not    DWORD PTR [ecx+edi*1]
  41cf76:	sbb    DWORD PTR [ebp+ecx*4+0x75],ebx
  41cf7a:	cmp    cl,BYTE PTR [eax+0x6674aa83]
  41cf80:	sub    esi,DWORD PTR [eax]
  41cf82:	repz xchg ebx,eax
  41cf84:	pop    esp
  41cf85:	xor    BYTE PTR [ebx+ecx*1-0x77],cl
  41cf89:	arpl   bp,dx
  41cf8b:	icebp  
  41cf8c:	aaa    
  41cf8d:	pop    esi
  41cf8e:	jp     0x41cf76
  41cf90:	dec    esp
  41cf91:	add    eax,DWORD PTR [ebx+ebp*4-0x3c]
  41cf95:	leave  
  41cf96:	mov    dl,0x8b
  41cf98:	(bad)  
  41cf99:	out    0x46,eax
  41cf9b:	and    DWORD PTR [edi+0x3d],0x2
  41cf9f:	test   DWORD PTR [eax+0x1a],ebp
  41cfa2:	mov    ebp,0xa207297e
  41cfa7:	iret   
  41cfa8:	sar    ebp,1
  41cfaa:	fwait
  41cfab:	nop
  41cfac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfad:	and    al,0x95
  41cfaf:	cld    
  41cfb0:	and    BYTE PTR [eax+ebp*1-0x2e749447],0xeb
  41cfb8:	sbb    cl,BYTE PTR [edi-0x73]
  41cfbb:	mov    bl,BYTE PTR [esi-0x391b36eb]
  41cfc1:	js     0x41d01c
  41cfc3:	xchg   BYTE PTR ds:[eax],dh
  41cfc6:	std    
  41cfc7:	mov    bl,BYTE PTR [ebx+0x6c25b5d7]
  41cfcd:	lea    ebx,[ebp-0x20d27d3f]
  41cfd3:	cmc    
  41cfd4:	sbb    al,0xeb
  41cfd6:	mov    edi,0x3ba6c2c9
  41cfdb:	cld    
  41cfdc:	xchg   esp,eax
  41cfdd:	jns    0x41cfdc
  41cfdf:	das    
  41cfe0:	mov    gs,esi
  41cfe2:	sub    al,0x16
  41cfe4:	dec    esi
  41cfe5:	loop   0x41cf78
  41cfe7:	mov    ds:0x36981d97,eax
  41cfec:	std    
  41cfed:	addr16 and al,0xb6
  41cff0:	nop
  41cff1:	icebp  
  41cff2:	(bad)  
  41cff3:	imul   eax,DWORD PTR [edi],0xffffffba
  41cff6:	jge    0x41d06b
  41cff8:	or     BYTE PTR [ebp+0x77c68bb6],bl
  41cffe:	mov    dl,0x81
  41d000:	mov    dh,0xfa
  41d002:	mov    al,ds:0xe8a05ee3
  41d007:	test   al,0xeb
  41d009:	out    dx,eax
  41d00a:	fsubr  DWORD PTR [edx]
  41d00c:	aad    0x7f
  41d00e:	cmp    BYTE PTR [ebp-0x5c],dl
  41d011:	adc    DWORD PTR [edi-0xe1fd80],0x14d91045
  41d01b:	and    al,0xa3
  41d01d:	(bad)  
  41d01e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d020:	outs   dx,DWORD PTR ds:[esi]
  41d021:	mov    eax,0x81f0a8d0
  41d026:	popf   
  41d027:	ja     0x41d037
  41d029:	and    BYTE PTR [esi-0x6ea374f8],ch
  41d02f:	fbstp  TBYTE PTR [esp+edi*1]
  41d032:	in     eax,dx
  41d033:	pop    edi
  41d034:	fistp  WORD PTR [edi+0x4cdc2f8a]
  41d03a:	(bad)  
  41d03b:	pop    edx
  41d03c:	xor    ebx,DWORD PTR [ebx-0x66]
  41d03f:	and    edx,edi
  41d041:	shl    BYTE PTR [ebx+0x7df7986f],cl
  41d047:	hlt    
  41d048:	loop   0x41d00a
  41d04a:	or     BYTE PTR [edi-0x34c834f4],cl
  41d050:	push   ss
  41d051:	add    al,0x82
  41d053:	imul   edx,DWORD PTR [ebx],0xb94958bc
  41d059:	mov    dl,0x75
  41d05b:	in     eax,dx
  41d05c:	push   ebp
  41d05d:	xor    al,0x22
  41d05f:	xchg   esi,eax
  41d060:	call   0x815a:0x729a10ae
  41d067:	jb     0x41d0b2
  41d069:	rcr    ah,0x43
  41d06c:	cmp    eax,0xac9b582a
  41d071:	sub    eax,0x9cc54550
  41d076:	mov    esp,0x6cc93071
  41d07b:	sahf   
  41d07c:	mov    ebx,0x861952c
  41d081:	out    dx,al
  41d082:	add    edi,DWORD PTR [edi+0x6866af55]
  41d088:	nop
  41d089:	inc    ebx
  41d08a:	mov    dl,0x52
  41d08c:	cmp    edi,edx
  41d08e:	(bad)  
  41d08f:	arpl   WORD PTR [ebx],bx
  41d091:	sbb    eax,0x7b496cbf
  41d096:	hlt    
  41d097:	in     eax,0xdb
  41d099:	xchg   ecx,eax
  41d09a:	inc    ecx
  41d09b:	out    0x7b,eax
  41d09d:	and    eax,0x5c8020ad
  41d0a2:	fs xchg ecx,eax
  41d0a4:	cmp    esi,edi
  41d0a6:	hlt    
  41d0a7:	cmp    DWORD PTR [ebp+0x1f],ecx
  41d0aa:	rcl    dl,cl
  41d0ac:	push   0x73be148
  41d0b1:	push   cs
  41d0b2:	adc    ch,ah
  41d0b4:	jae    0x41d101
  41d0b6:	fwait
  41d0b7:	push   0xffffffe3
  41d0b9:	ins    BYTE PTR es:[edi],dx
  41d0ba:	push   esp
  41d0bb:	jmp    0xa7d75970
  41d0c0:	ds cmc 
  41d0c2:	jno    0x41d078
  41d0c4:	push   eax
  41d0c5:	bound  ebp,QWORD PTR ds:0x98d3002e
  41d0cb:	add    edx,DWORD PTR [ecx+eax*8+0x40]
  41d0cf:	int    0xab
  41d0d1:	lock push ebx
  41d0d3:	dec    ecx
  41d0d4:	idiv   BYTE PTR [edi-0x12]
  41d0d7:	xor    ch,BYTE PTR [ecx+ecx*8+0x1a]
  41d0db:	fadd   QWORD PTR [ebp+0x6abfdd3c]
  41d0e1:	idiv   DWORD PTR [ebx+0xcb9d469]
  41d0e7:	xchg   esp,eax
  41d0e8:	mov    ebx,0x8f432d63
  41d0ed:	pushf  
  41d0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0ef:	mov    dh,0x9f
  41d0f1:	test   DWORD PTR [ecx+0x36],esi
  41d0f4:	pop    eax
  41d0f5:	inc    ecx
  41d0f6:	repnz sbb ebp,edi
  41d0f9:	or     DWORD PTR [esi-0x21],ebx
  41d0fc:	rcl    DWORD PTR [edi-0x62a20b1e],0xdd
  41d103:	cmp    al,0x49
  41d105:	xor    esp,ebp
  41d107:	in     eax,0x38
  41d109:	popf   
  41d10a:	repnz not DWORD PTR [esi]
  41d10d:	out    dx,eax
  41d10e:	pop    ds
  41d10f:	out    0x78,eax
  41d111:	hlt    
  41d112:	icebp  
  41d113:	loopne 0x41d0c8
  41d115:	dec    edi
  41d116:	lahf   
  41d117:	pop    ebp
  41d118:	sti    
  41d119:	ret    0xede4
  41d11c:	cmp    al,0xfe
  41d11e:	xlat   BYTE PTR ds:[ebx]
  41d11f:	pop    edi
  41d120:	(bad)  
  41d121:	stc    
  41d122:	adc    ebp,esp
  41d124:	cwde   
  41d125:	xchg   esp,eax
  41d126:	dec    ebp
  41d127:	outs   dx,BYTE PTR ds:[esi]
  41d128:	adc    al,0xc2
  41d12a:	(bad)  
  41d12b:	imul   esp
  41d12d:	xchg   esp,eax
  41d12e:	fwait
  41d12f:	adc    esi,DWORD PTR [edi-0x3f1a4fb6]
  41d135:	adc    ebp,DWORD PTR [esi]
  41d137:	pop    edx
  41d138:	fild   QWORD PTR ds:0x48785512
  41d13e:	outs   dx,DWORD PTR ds:[esi]
  41d13f:	xchg   ebx,eax
  41d140:	in     eax,dx
  41d141:	jns    0x41d1a4
  41d143:	in     eax,dx
  41d144:	imul   ebx,DWORD PTR [ebx],0xc17e66de
  41d14a:	mov    es,WORD PTR [edx+0x5c]
  41d14d:	sub    al,0xbe
  41d14f:	pop    esi
  41d150:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d152:	or     dh,BYTE PTR [ecx-0x1ca2f6d0]
  41d158:	pop    esi
  41d159:	adc    DWORD PTR [ecx],edx
  41d15b:	in     eax,0x21
  41d15d:	arpl   WORD PTR [edx-0x23],bp
  41d160:	adc    eax,0x66c3f9bb
  41d165:	jmp    0x305b35b5
  41d16a:	jo     0x41d0ed
  41d16c:	cmc    
  41d16d:	jge    0x41d1ca
  41d16f:	xchg   si,ax
  41d171:	clc    
  41d172:	lock ss dec ecx
  41d175:	not    BYTE PTR [edi]
  41d177:	out    dx,al
  41d178:	cmp    eax,0xfd0c3927
  41d17d:	call   0x6c194bae
  41d182:	xor    al,0x43
  41d184:	jae    0x41d189
  41d186:	(bad)  
  41d187:	xor    DWORD PTR [ebx+0x35],ebx
  41d18a:	dec    edx
  41d18b:	lock sbb eax,0x63b13e24
  41d191:	cmc    
  41d192:	repz fist WORD PTR [ebx+edx*1]
  41d196:	jne    0x41d191
  41d198:	adc    esp,DWORD PTR [ecx-0x2e]
  41d19b:	and    DWORD PTR [edx+0x7a59ddd0],eax
  41d1a1:	(bad)  
  41d1a3:	fild   QWORD PTR [eax-0x22cbbe3c]
  41d1a9:	inc    esp
  41d1aa:	push   ebp
  41d1ab:	fadd   DWORD PTR [esi]
  41d1ad:	(bad)  
  41d1ae:	fsub   DWORD PTR [edx-0x3c77bf49]
  41d1b4:	jmp    0x41d179
  41d1b6:	fmul   DWORD PTR [esi]
  41d1b8:	popf   
  41d1b9:	lock call 0x7be25994
  41d1bf:	push   edi
  41d1c0:	pusha  
  41d1c1:	sbb    edx,DWORD PTR [ebp+0x63]
  41d1c4:	push   esp
  41d1c5:	or     esp,DWORD PTR [ebx+0x77]
  41d1c8:	mov    bh,0xc4
  41d1ca:	gs mov al,0xd1
  41d1cd:	pop    ds
  41d1ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1cf:	stos   DWORD PTR es:[edi],eax
  41d1d0:	xchg   ebp,eax
  41d1d1:	std    
  41d1d2:	rol    DWORD PTR [ecx-0x15df6b80],1
  41d1d8:	mov    bl,0xfd
  41d1da:	mov    ah,0x3c
  41d1dc:	imul   edx,DWORD PTR [ecx],0x1b
  41d1df:	jb     0x41d222
  41d1e1:	je     0x41d256
  41d1e3:	daa    
  41d1e4:	mov    BYTE PTR [esp+esi*2+0x49],al
  41d1e8:	jg     0x41d255
  41d1ea:	or     DWORD PTR [ecx-0x9e5d2b7],ecx
  41d1f0:	pushw  ss
  41d1f2:	fdivr  DWORD PTR [edi+edx*2-0x1b516e09]
  41d1f9:	leave  
  41d1fa:	and    eax,0x84a8f9fd
  41d200:	sti    
  41d201:	test   esp,esp
  41d203:	push   eax
  41d204:	dec    ebp
  41d205:	push   ss
  41d206:	mov    edi,0x4abf3735
  41d20b:	push   es
  41d20c:	xor    dl,ch
  41d20e:	mov    al,0x81
  41d210:	rcl    BYTE PTR [ebx-0x3efe1484],0x7f
  41d217:	sar    bh,1
  41d219:	cmp    DWORD PTR [esi-0x55],ecx
  41d21c:	cmp    dh,BYTE PTR [esi+ecx*4-0x3c2acea4]
  41d223:	add    eax,0x7ebab626
  41d228:	pop    edx
  41d229:	pushw  ss
  41d22b:	test   eax,0x1a725a98
  41d230:	nop
  41d231:	xor    eax,0x9b6246db
  41d236:	retf   
  41d237:	dec    edi
  41d238:	xchg   BYTE PTR [ebx-0x5ac64283],bl
  41d23e:	mov    al,ds:0xf3654324
  41d243:	test   al,0x19
  41d245:	(bad)  [ebx+0x3951026d]
  41d24b:	jnp    0x41d292
  41d24d:	cmp    ebx,DWORD PTR [eax-0x4f7e46d4]
  41d253:	push   eax
  41d254:	or     al,0xa5
  41d256:	lea    ecx,[edi+eiz*1-0x60]
  41d25a:	call   DWORD PTR [ebx-0x69]
  41d25d:	adc    ebp,eax
  41d25f:	inc    eax
  41d260:	dec    esp
  41d261:	(bad)  
  41d262:	in     eax,0xfb
  41d264:	push   ds
  41d265:	dec    BYTE PTR [ecx]
  41d267:	std    
  41d268:	in     al,0x6b
  41d26a:	in     eax,0x33
  41d26c:	popa   
  41d26d:	mov    ch,al
  41d26f:	jp     0x41d224
  41d271:	int3   
  41d272:	xor    BYTE PTR [eax+0x1b],0x51
  41d276:	ss int 0xf8
  41d279:	cmp    ah,BYTE PTR [ebp-0x14]
  41d27c:	inc    edi
  41d27d:	lds    eax,FWORD PTR [eax-0x1abca201]
  41d283:	shl    dl,cl
  41d285:	mov    dl,0x64
  41d287:	dec    esp
  41d288:	in     eax,0x9b
  41d28a:	pushf  
  41d28b:	adc    al,0xcc
  41d28d:	cmp    DWORD PTR [esi],ebp
  41d28f:	push   ebx
  41d290:	jae    0x41d2d7
  41d292:	xor    DWORD PTR [ecx],0x73d62e82
  41d298:	icebp  
  41d299:	lahf   
  41d29a:	paddsw mm2,QWORD PTR [ebp-0x62c524b]
  41d2a1:	fld    DWORD PTR [esi+0x12]
  41d2a4:	aad    0xf
  41d2a6:	mov    bh,0x5e
  41d2a8:	mov    cl,0xb7
  41d2aa:	inc    ebp
  41d2ab:	jle    0x41d321
  41d2ad:	mov    ds:0xc75fbb24,al
  41d2b2:	(bad)  
  41d2b3:	cs inc eax
  41d2b5:	pop    ecx
  41d2b6:	mov    cs,ebx
  41d2b8:	add    BYTE PTR [esi+0x72df3eb2],cl
  41d2be:	ds add eax,0x241cb7cb
  41d2c4:	and    ebp,edi
  41d2c6:	xchg   esi,eax
  41d2c7:	(bad)  
  41d2c8:	(bad)  
  41d2c9:	jo     0x41d292
  41d2cb:	push   esi
  41d2cc:	inc    esi
  41d2cd:	push   es
  41d2ce:	jg     0x41d2d5
  41d2d0:	cmp    al,0x2c
  41d2d2:	int3   
  41d2d3:	push   cs
  41d2d4:	aam    0xa1
  41d2d6:	mov    dh,0x2
  41d2d8:	inc    eax
  41d2d9:	sub    cl,BYTE PTR [edx-0x49]
  41d2dc:	(bad)  
  41d2dd:	sbb    al,0xa3
  41d2df:	mov    bl,0xd1
  41d2e1:	shl    cl,cl
  41d2e3:	mov    esp,0x1b043d01
  41d2e8:	and    dh,cl
  41d2ea:	popf   
  41d2eb:	mov    dh,0x84
  41d2ed:	loop   0x41d307
  41d2ef:	ins    BYTE PTR es:[edi],dx
  41d2f0:	daa    
  41d2f1:	pop    ss
  41d2f2:	sub    DWORD PTR [ecx-0x2e6389aa],ebx
  41d2f8:	iret   
  41d2f9:	push   ebp
  41d2fa:	mov    ebx,0xb107030c
  41d2ff:	inc    esi
  41d300:	fsub   st(5),st
  41d302:	push   ebx
  41d303:	mov    ebx,0x2f01a5ab
  41d308:	mov    esi,0x80d2d2d0
  41d30d:	sar    BYTE PTR [ecx-0x7],0x7e
  41d311:	jae    0x41d314
  41d313:	pushf  
  41d314:	adc    ebx,DWORD PTR [edx]
  41d316:	std    
  41d317:	xchg   esi,eax
  41d318:	fadd   st(5),st
  41d31a:	js     0x41d393
  41d31c:	mov    esi,0xb183074c
  41d321:	mov    eax,0xadd3583a
  41d326:	cmc    
  41d327:	js     0x41d35c
  41d329:	int    0x57
  41d32b:	pop    ds
  41d32c:	pop    edi
  41d32d:	stos   DWORD PTR es:[edi],eax
  41d32e:	sbb    eax,0xe03888f0
  41d333:	stc    
  41d334:	push   edx
  41d335:	adc    esi,DWORD PTR ds:0x822cb1df
  41d33b:	mov    WORD PTR [esi],?
  41d33d:	xor    dh,BYTE PTR [esi+eiz*1+0xf]
  41d341:	in     al,dx
  41d342:	aam    0x3f
  41d344:	xor    al,0x6c
  41d346:	mul    DWORD PTR ds:0xfafaf4d7
  41d34c:	pextrw esi,(bad),0xc5
  41d34e:	mov    bh,0xc5
  41d350:	das    
  41d351:	mov    ecx,0xf5dc3434
  41d356:	inc    esp
  41d357:	jb     0x41d39b
  41d359:	fs in  al,0x51
  41d35c:	ss out 0xea,eax
  41d35f:	mov    al,0xf4
  41d361:	popf   
  41d362:	(bad)  
  41d363:	fnstcw WORD PTR [esi-0x5bf390e5]
  41d369:	aas    
  41d36a:	call   0x675ff2d3
  41d36f:	nop
  41d370:	push   ebp
  41d371:	cmp    DWORD PTR [ebx],esp
  41d373:	std    
  41d374:	xor    edi,DWORD PTR [edx]
  41d376:	(bad)  
  41d377:	(bad)  
  41d379:	adc    BYTE PTR [eax-0x50],ch
  41d37c:	test   BYTE PTR [ebp+0x0],bl
  41d37f:	lahf   
  41d380:	stc    
  41d381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d382:	mov    ds:0x4c2413c3,eax
  41d387:	data16 adc bh,BYTE PTR [ebx+0xff1c6ff]
  41d38e:	scas   eax,DWORD PTR es:[edi]
  41d38f:	cld    
  41d390:	and    al,0xa1
  41d392:	ret    0xdd25
  41d395:	cs xchg ebx,eax
  41d397:	mov    ecx,0xfeb27b04
  41d39c:	pop    esi
  41d39d:	jle    0x41d34f
  41d39f:	test   DWORD PTR [ebp+0xd619010],ecx
  41d3a5:	(bad)  
  41d3a6:	shr    BYTE PTR [edx+0x5a],cl
  41d3a9:	es sahf 
  41d3ab:	fdivr  QWORD PTR fs:[esi+0x539a78c3]
  41d3b2:	lahf   
  41d3b3:	xor    al,0x69
  41d3b5:	mov    esi,0xd304ad3
  41d3ba:	adc    al,0x75
  41d3bc:	jmp    0x5c13:0x467a4ad6
  41d3c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c4:	in     eax,dx
  41d3c5:	loope  0x41d396
  41d3c7:	sbb    BYTE PTR [ecx],dh
  41d3c9:	into   
  41d3ca:	pop    DWORD PTR [eax+edx*8+0x676278e]
  41d3d1:	fisub  DWORD PTR [esi]
  41d3d3:	pop    esi
  41d3d4:	lahf   
  41d3d5:	hlt    
  41d3d6:	jg     0x41d3ab
  41d3d8:	sub    bl,BYTE PTR [ebp-0x1379db03]
  41d3de:	mov    cl,0x3e
  41d3e0:	xchg   edx,eax
  41d3e1:	inc    esp
  41d3e2:	dec    eax
  41d3e3:	inc    ebx
  41d3e4:	in     al,0x7c
  41d3e6:	xor    ah,BYTE PTR [ebp+0xa341485]
  41d3ec:	scas   al,BYTE PTR es:[edi]
  41d3ed:	retf   
  41d3ee:	cdq    
  41d3ef:	iret   
  41d3f0:	mov    eax,ds:0x25890a98
  41d3f5:	scas   al,BYTE PTR es:[edi]
  41d3f6:	inc    esi
  41d3f7:	retf   0x43df
  41d3fa:	repz dec ecx
  41d3fc:	popf   
  41d3fd:	test   cl,ch
  41d3ff:	pop    eax
  41d400:	fsub   DWORD PTR [ebx-0x234910f4]
  41d406:	dec    ebp
  41d407:	and    BYTE PTR [edx-0x226ef82b],dl
  41d40d:	mov    ch,0x99
  41d40f:	and    al,0x2f
  41d411:	jl     0x41d428
  41d413:	dec    ecx
  41d414:	ret    0x1455
  41d417:	or     eax,0xc50139c0
  41d41c:	adc    DWORD PTR [edx-0x717beb9],0xffffff95
  41d423:	retf   0xbc66
  41d426:	enter  0x1c1d,0xd0
  41d42a:	iret   
  41d42b:	cmp    edx,DWORD PTR [edx+ebp*1+0x3]
  41d42f:	fwait
  41d430:	enter  0x524a,0x54
  41d434:	xor    eax,0x1dedbbfb
  41d439:	add    eax,DWORD PTR [edx]
  41d43b:	push   ss
  41d43c:	cwde   
  41d43d:	pushf  
  41d43e:	push   ecx
  41d43f:	neg    eax
  41d441:	xchg   esi,eax
  41d442:	and    DWORD PTR [ebx],0x20d636b5
  41d448:	cli    
  41d449:	fcmovu st,st(4)
  41d44b:	xor    esi,DWORD PTR [edx]
  41d44d:	(bad)  
  41d450:	in     al,0x15
  41d452:	mov    ecx,0x5aafcd46
  41d457:	cmp    ebp,DWORD PTR [edi-0x1c]
  41d45a:	(bad)  
  41d45b:	fs enter 0xcdce,0x58
  41d460:	adc    ch,bh
  41d462:	pop    esi
  41d463:	int3   
  41d464:	sub    edi,DWORD PTR [edi-0x15433e79]
  41d46a:	pop    edi
  41d46b:	loopne 0x41d402
  41d46d:	xchg   ecx,eax
  41d46e:	push   ebx
  41d46f:	push   ebx
  41d470:	mov    edi,0xf470554c
  41d475:	sbb    eax,0x1ac98841
  41d47a:	pusha  
  41d47b:	imul   eax,DWORD PTR [edx],0x66
  41d47e:	shr    DWORD PTR [esi],cl
  41d480:	xchg   edx,eax
  41d481:	or     BYTE PTR [edx],0xa0
  41d484:	lods   al,BYTE PTR ds:[esi]
  41d485:	mov    ecx,0x2d43d2bc
  41d48a:	mov    esi,edx
  41d48c:	enter  0x325,0xb1
  41d490:	xor    BYTE PTR [eax+0x43ad10bc],bl
  41d496:	adc    al,0x88
  41d498:	mov    cl,BYTE PTR [esi]
  41d49a:	ja     0x41d489
  41d49c:	and    ecx,DWORD PTR [eax]
  41d49e:	pop    edi
  41d49f:	xor    BYTE PTR [esi],bl
  41d4a1:	inc    edi
  41d4a2:	fist   DWORD PTR [esi-0x22]
  41d4a5:	outs   dx,DWORD PTR ds:[esi]
  41d4a6:	sahf   
  41d4a7:	(bad)  
  41d4a8:	lock xchg edx,eax
  41d4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ab:	mov    eax,0x44a69958
  41d4b0:	xchg   ebp,eax
  41d4b1:	aas    
  41d4b2:	push   es
  41d4b3:	push   ebp
  41d4b4:	mov    edi,0x66643b16
  41d4b9:	std    
  41d4ba:	stos   BYTE PTR es:[edi],al
  41d4bb:	jns    0x41d51d
  41d4bd:	sahf   
  41d4be:	push   0xa038fb5c
  41d4c3:	mov    bh,0xb4
  41d4c5:	dec    esp
  41d4c6:	(bad)  
  41d4c7:	(bad)  
  41d4c9:	cmc    
  41d4ca:	ins    BYTE PTR es:[edi],dx
  41d4cb:	cmp    ah,ch
  41d4cd:	cmp    eax,0x5fb4f3e3
  41d4d2:	jmp    0xc6e6:0xaaef29b7
  41d4d9:	wbinvd 
  41d4db:	shl    BYTE PTR [esi-0x70cc1780],0x76
  41d4e2:	hlt    
  41d4e3:	loopne 0x41d47e
  41d4e5:	adc    al,0x35
  41d4e7:	jle    0x41d4f6
  41d4e9:	fild   QWORD PTR [ebp-0x2d9f5da6]
  41d4ef:	cmp    edi,DWORD PTR [esi+0x2e6766b3]
  41d4f5:	mov    eax,ds:0x5314cac2
  41d4fa:	push   0xbae34ebe
  41d4ff:	cdq    
  41d500:	pop    ecx
  41d501:	mov    dh,0xe4
  41d503:	mov    ah,0xd4
  41d505:	ret    0x8aaf
  41d508:	mov    edi,0xf6d89c93
  41d50d:	sbb    dl,BYTE PTR [esi-0x5b4f9a07]
  41d513:	dec    edx
  41d514:	dec    edi
  41d515:	jns    0x41d4cf
  41d517:	mov    edx,0x89792b71
  41d51c:	xor    dl,ah
  41d51e:	std    
  41d51f:	imul   edx,DWORD PTR [ebp+0x68],0xffffffce
  41d523:	jae    0x41d4ca
  41d525:	and    eax,0xaa1a5817
  41d52a:	add    al,0x7b
  41d52c:	xor    DWORD PTR [edx-0x77c2c135],eax
  41d532:	and    al,bl
  41d534:	retf   
  41d535:	stc    
  41d536:	rcr    DWORD PTR [eax],0xaf
  41d539:	aaa    
  41d53a:	leave  
  41d53b:	(bad)  
  41d53d:	push   ecx
  41d53e:	or     al,BYTE PTR [eax+edx*2]
  41d541:	outs   dx,BYTE PTR ds:[esi]
  41d542:	out    dx,eax
  41d543:	call   0x2a6b8cdb
  41d548:	(bad)  
  41d54a:	pop    esp
  41d54b:	sbb    eax,0x980da6d
  41d550:	in     al,0xd6
  41d552:	call   0x2f1f9ff3
  41d557:	and    eax,eax
  41d559:	repnz xchg ebx,eax
  41d55b:	xlat   BYTE PTR ds:[ebx]
  41d55c:	mov    ds:0x50a51b71,eax
  41d561:	sub    ecx,esi
  41d563:	in     eax,0x1e
  41d565:	pop    edi
  41d566:	arpl   WORD PTR fs:[esi],ax
  41d569:	mov    ds:0x198d730,eax
  41d56e:	lods   al,BYTE PTR ds:[esi]
  41d56f:	mov    edi,DWORD PTR [esi-0x5]
  41d572:	pop    esi
  41d573:	imul   esp,DWORD PTR [edi],0x77af92cc
  41d579:	(bad)  
  41d57a:	in     eax,dx
  41d57b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d57c:	test   DWORD PTR [edx+0x1c],0x3dc75d8b
  41d583:	inc    edx
  41d584:	cld    
  41d585:	jmp    0x5da24c0c
  41d58a:	(bad)  
  41d58b:	out    dx,al
  41d58c:	cmp    ch,0x43
  41d58f:	jo     0x41d5d2
  41d591:	in     al,dx
  41d592:	adc    eax,0xe1213f42
  41d597:	in     eax,dx
  41d598:	xor    al,0x4c
  41d59a:	loopne 0x41d5dc
  41d59c:	dec    esp
  41d59d:	test   al,0x1c
  41d59f:	arpl   si,dx
  41d5a1:	fisub  DWORD PTR [ebx-0x5f]
  41d5a4:	dec    edi
  41d5a5:	cld    
  41d5a6:	xchg   esi,eax
  41d5a7:	dec    esi
  41d5a8:	xchg   esi,eax
  41d5a9:	out    dx,eax
  41d5aa:	in     eax,dx
  41d5ab:	sub    eax,0x906df529
  41d5b0:	mov    ah,0x30
  41d5b2:	sub    BYTE PTR [edi],0x1e
  41d5b5:	data16 jg 0x41d620
  41d5b8:	aas    
  41d5b9:	mov    cl,bh
  41d5bb:	mov    DWORD PTR [ecx+0x62],edx
  41d5be:	push   0x7
  41d5c0:	sub    ah,dl
  41d5c2:	int    0xa1
  41d5c4:	test   eax,0x414a034
  41d5c9:	sbb    DWORD PTR [edi],0x77ab3356
  41d5cf:	mov    BYTE PTR [eax+0x38],ah
  41d5d2:	push   esp
  41d5d3:	test   BYTE PTR [ebx-0x75c6494a],dl
  41d5d9:	fmul   st(7),st
  41d5db:	(bad)  
  41d5dc:	dec    ecx
  41d5dd:	mov    cs,ebp
  41d5df:	in     al,dx
  41d5e0:	pop    esi
  41d5e1:	shl    DWORD PTR [esi-0x12],cl
  41d5e4:	xchg   ebx,eax
  41d5e5:	dec    edi
  41d5e6:	xor    eax,0x47a3cb9b
  41d5eb:	add    al,0x93
  41d5ed:	cmc    
  41d5ee:	(bad)
  41d5f1:	not    DWORD PTR ds:0x569aae6e
  41d5f7:	jne    0x41d5f9
  41d5f9:	mov    dh,0xfa
  41d5fb:	mov    WORD PTR [ecx],?
  41d5fd:	out    dx,eax
  41d5fe:	dec    ecx
  41d5ff:	and    BYTE PTR [edx],0xbe
  41d602:	icebp  
  41d603:	cmp    eax,0x9dd304b8
  41d608:	xor    esi,esi
  41d60a:	inc    ebx
  41d60b:	nop
  41d60c:	cli    
  41d60d:	xor    eax,0xcafeef89
  41d612:	dec    ecx
  41d613:	mov    ds,WORD PTR [edx-0x1]
  41d616:	cdq    
  41d617:	mov    bh,0xc1
  41d619:	call   0x4aacd8ed
  41d61e:	sub    DWORD PTR [esi-0x78],ecx
  41d621:	int3   
  41d622:	push   0xffffff86
  41d624:	mov    fs,eax
  41d626:	jae    0x41d5b0
  41d628:	xchg   edi,eax
  41d629:	dec    esi
  41d62a:	cli    
  41d62b:	test   DWORD PTR [esi],ebx
  41d62d:	test   eax,0xe4e9695
  41d632:	pop    esi
  41d633:	jmp    0x43795e13
  41d638:	pop    esp
  41d639:	fnop   
  41d63b:	les    esp,FWORD PTR [esi-0x75bd1a93]
  41d641:	jmp    0x450d1aa4
  41d646:	jl     0x41d629
  41d648:	mov    ecx,0xf31785c
  41d64d:	and    BYTE PTR [edx+0x2730e490],cl
  41d653:	repnz mov bl,cl
  41d656:	sub    BYTE PTR [ebx-0x49],al
  41d659:	gs ret 
  41d65b:	dec    ecx
  41d65c:	push   es
  41d65d:	xchg   ecx,eax
  41d65e:	das    
  41d65f:	call   0x6eb8:0x37216be1
  41d666:	ret    0x9ab
  41d669:	out    0xa9,eax
  41d66b:	adc    BYTE PTR [eax-0x1f],cl
  41d66e:	mov    eax,ds:0x4ac06761
  41d673:	das    
  41d674:	dec    ebx
  41d675:	jae    0x41d621
  41d677:	sbb    al,0xa
  41d679:	inc    ebp
  41d67a:	aas    
  41d67b:	iret   
  41d67c:	fst    DWORD PTR [ebx]
  41d67e:	pop    es
  41d67f:	mov    eax,ds:0x89b4c904
  41d684:	add    edi,esi
  41d686:	push   esi
  41d687:	push   edx
  41d688:	push   esp
  41d689:	xchg   esi,eax
  41d68a:	jp     0x41d64e
  41d68c:	mov    bl,0xf1
  41d68e:	sbb    al,0xc0
  41d691:	fstp   DWORD PTR [edi-0x50]
  41d694:	in     al,dx
  41d695:	ins    BYTE PTR es:[edi],dx
  41d696:	xor    DWORD PTR [edx],0x2a78d0d2
  41d69c:	inc    ecx
  41d69d:	inc    esi
  41d69e:	addr16 (bad) 
  41d6a0:	call   0x572b:0x7b89aecd
  41d6a7:	cmp    eax,0xc12e3ed9
  41d6ac:	xchg   edx,eax
  41d6ad:	hlt    
  41d6ae:	inc    ebx
  41d6af:	sbb    BYTE PTR [ebx+0x2b866cb],dh
  41d6b5:	and    edx,ebp
  41d6b7:	jp     0x41d738
  41d6b9:	sub    BYTE PTR ds:0xabe4c137,cl
  41d6bf:	shl    BYTE PTR [edi],0xbe
  41d6c2:	cdq    
  41d6c3:	retf   0x31aa
  41d6c6:	shl    BYTE PTR [ecx-0x46],1
  41d6c9:	sbb    BYTE PTR [esi],0xd0
  41d6cc:	sbb    BYTE PTR [ebp-0x2d],al
  41d6cf:	loop   0x41d729
  41d6d1:	dec    ecx
  41d6d2:	jbe    0x41d6ac
  41d6d4:	aad    0x6a
  41d6d6:	mov    ebp,0xf9eaf36a
  41d6db:	and    DWORD PTR [ebx-0x21],esi
  41d6de:	xor    BYTE PTR [eax+eiz*4+0x1b],cl
  41d6e2:	dec    ecx
  41d6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6e4:	push   0xf0fe2527
  41d6e9:	mov    cl,0x85
  41d6eb:	adc    bl,cl
  41d6ed:	inc    edx
  41d6ee:	mov    ebp,0x945c937f
  41d6f3:	jne    0x41d732
  41d6f5:	push   esp
  41d6f6:	add    bh,BYTE PTR [esi+0x5f]
  41d6f9:	jno    0x41d714
  41d6fb:	pop    ebx
  41d6fc:	pop    ecx
  41d6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6fe:	jg     0x41d6d0
  41d700:	gs mov al,0xbf
  41d703:	cwde   
  41d704:	cmp    ah,BYTE PTR [ebp-0x3c]
  41d707:	push   ds
  41d708:	fdiv   st,st(6)
  41d70a:	cli    
  41d70b:	cmc    
  41d70c:	inc    ecx
  41d70d:	lock and BYTE PTR [edx],dl
  41d710:	sbb    eax,0x1f60b1da
  41d715:	push   es
  41d716:	sub    edi,DWORD PTR [edx]
  41d718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d719:	sub    eax,0x89988ab6
  41d71e:	bound  edx,QWORD PTR [edi]
  41d720:	xchg   ebp,eax
  41d721:	cdq    
  41d722:	xor    DWORD PTR [edx+0x3a663d1a],eax
  41d728:	call   0xa07a:0x50aef9b0
  41d72f:	sahf   
  41d730:	les    ebx,FWORD PTR [edx]
  41d732:	call   0x51cfdf97
  41d737:	xor    DWORD PTR [eax+0x6f],eax
  41d73a:	and    BYTE PTR [ebp-0x26],dl
  41d73d:	or     eax,0xd9b030d3
  41d742:	test   al,0xd
  41d744:	popf   
  41d745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d746:	std    
  41d747:	div    BYTE PTR [eax+eiz*8]
  41d74a:	out    dx,eax
  41d74b:	cmp    eax,0x19068383
  41d750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d751:	sub    dh,bl
  41d753:	inc    ecx
  41d754:	jmp    0x60e:0x4d2c5d8a
  41d75b:	cwde   
  41d75c:	je     0x41d70d
  41d75e:	mov    edi,0x341c2c52
  41d763:	dec    dl
  41d765:	fcom   st(2)
  41d767:	pop    edi
  41d768:	xbegin 0x4f38fb3b
  41d76e:	pop    ebp
  41d76f:	outs   dx,DWORD PTR ds:[esi]
  41d770:	mov    WORD PTR [eax+0xa],cs
  41d773:	int3   
  41d774:	jl     0x41d7d9
  41d776:	mov    bh,0xc2
  41d778:	int3   
  41d779:	and    BYTE PTR [edx-0x4a],cl
  41d77c:	or     esi,esi
  41d77e:	in     al,dx
  41d77f:	sub    dh,BYTE PTR [ebp-0x5cbad999]
  41d785:	xchg   esi,eax
  41d786:	xor    esp,edi
  41d788:	xchg   edx,eax
  41d789:	add    bl,bh
  41d78b:	xchg   esp,eax
  41d78c:	inc    cl
  41d78e:	jae    0x41d761
  41d790:	xor    al,0x2a
  41d792:	and    BYTE PTR ds:0xb0b90825,dh
  41d798:	mov    ah,0xba
  41d79a:	cdq    
  41d79b:	xor    al,0x92
  41d79d:	cmp    al,0xf8
  41d79f:	dec    eax
  41d7a0:	lods   eax,DWORD PTR ds:[esi]
  41d7a1:	into   
  41d7a2:	lods   al,BYTE PTR ds:[esi]
  41d7a3:	xchg   ebp,eax
  41d7a4:	lods   eax,DWORD PTR ds:[esi]
  41d7a5:	adc    al,0x89
  41d7a7:	or     DWORD PTR [ebx-0x43],0xacf9bbce
  41d7ae:	out    dx,al
  41d7af:	xchg   ebp,eax
  41d7b0:	mov    esi,esp
  41d7b2:	push   ds
  41d7b3:	sbb    eax,0xf49f6b50
  41d7b8:	clc    
  41d7b9:	mov    edi,0x365f61fd
  41d7be:	ret    0x2615
  41d7c1:	repz jae 0x41d7ea
  41d7c4:	call   0xd12d6a8e
  41d7c9:	pusha  
  41d7ca:	pop    ebx
  41d7cb:	ss cld 
  41d7cd:	xchg   edi,esp
  41d7cf:	shr    DWORD PTR [ebx+0x13],cl
  41d7d2:	addr16 mov bl,0x4c
  41d7d5:	sbb    BYTE PTR ds:[esi+eiz*8-0x72],0x67
  41d7db:	repnz pop edi
  41d7dd:	mov    al,0x6
  41d7df:	fs je  0x41d83b
  41d7e2:	data16 imul BYTE PTR [edi+edx*1]
  41d7e6:	dec    esi
  41d7e7:	jl     0x41d76d
  41d7e9:	xor    BYTE PTR [edi+0x6c],0xdd
  41d7ed:	sbb    BYTE PTR [esi],0xaa
  41d7f0:	cld    
  41d7f1:	cs pop ss
  41d7f3:	mov    DWORD PTR [ebx+0x4c],edi
  41d7f6:	jne    0x41d811
  41d7f8:	rol    BYTE PTR [ecx-0x45fb2883],cl
  41d7fe:	imul   DWORD PTR [eax]
  41d800:	lods   al,BYTE PTR ds:[esi]
  41d801:	xchg   edx,eax
  41d802:	in     eax,dx
  41d803:	retf   
  41d804:	into   
  41d805:	comiss xmm6,DWORD PTR [ecx+edx*4+0x2eb4fb51]
  41d80d:	(bad)  
  41d80e:	shl    ebx,1
  41d810:	and    esi,DWORD PTR [ecx]
  41d812:	jle    0x41d7bd
  41d814:	not    BYTE PTR [edi]
  41d816:	inc    eax
  41d817:	sbb    ebp,DWORD PTR [ebx]
  41d819:	dec    edi
  41d81a:	xlat   BYTE PTR ds:[ebx]
  41d81b:	(bad)  
  41d81c:	push   ds
  41d81d:	cwde   
  41d81e:	(bad)  
  41d81f:	mov    esi,0xe0722239
  41d824:	rol    BYTE PTR [edx-0x72],0x6a
  41d828:	out    0xdb,eax
  41d82a:	adc    BYTE PTR [eax+0x5ac3c4c0],0x25
  41d831:	mov    dl,0x34
  41d833:	adc    DWORD PTR [edx],0x70bc928f
  41d839:	sub    DWORD PTR [eax],ebx
  41d83b:	xchg   esi,eax
  41d83c:	push   ecx
  41d83d:	ja     0x41d8b5
  41d83f:	ficom  WORD PTR [eax]
  41d841:	dec    ebx
  41d842:	arpl   WORD PTR [ebp-0x75],dx
  41d845:	sub    BYTE PTR [ebp-0x52],bh
  41d848:	add    DWORD PTR ds:0x792a375a,0xdd59bb60
  41d852:	nop
  41d853:	or     eax,DWORD PTR [ebp+eiz*2+0x6a]
  41d857:	adc    DWORD PTR [edx],0x51
  41d85a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d85b:	dec    edi
  41d85c:	sbb    al,0x5d
  41d85e:	inc    edx
  41d85f:	xor    ecx,ecx
  41d861:	push   cs
  41d862:	push   0x178d3eb
  41d867:	cmp    cl,bh
  41d869:	mov    esp,0x12622611
  41d86e:	mov    eax,ds:0x1664af6f
  41d873:	pop    edi
  41d874:	jo     0x41d805
  41d876:	push   0x22bfafc8
  41d87b:	xor    al,dh
  41d87d:	jne    0x41d8f4
  41d87f:	add    ebx,DWORD PTR [ebx+0x42]
  41d882:	in     eax,0xc8
  41d884:	inc    esp
  41d885:	mul    BYTE PTR [edi-0x4c]
  41d888:	inc    edx
  41d889:	sub    al,0xe
  41d88b:	scas   eax,DWORD PTR es:[edi]
  41d88c:	cmp    BYTE PTR [ebp+0x7b],bh
  41d88f:	push   es
  41d890:	test   DWORD PTR [edx-0x5773ba5d],esi
  41d896:	and    al,0xae
  41d898:	mov    dl,0xe0
  41d89a:	leave  
  41d89b:	add    eax,0x21f7e22b
  41d8a0:	fucomp st(7)
  41d8a2:	or     dh,ch
  41d8a4:	add    BYTE PTR [ecx],ch
  41d8a6:	pop    es
  41d8a7:	(bad)  
  41d8a8:	aad    0x2f
  41d8aa:	fs in  eax,0xf
  41d8ad:	ins    DWORD PTR es:[edi],dx
  41d8ae:	cmc    
  41d8af:	ins    BYTE PTR es:[edi],dx
  41d8b0:	dec    eax
  41d8b1:	ja     0x41d8a0
  41d8b3:	inc    esp
  41d8b4:	sti    
  41d8b5:	and    cl,BYTE PTR [edx+0x6a7e7a23]
  41d8bb:	xchg   ebp,eax
  41d8bc:	shr    BYTE PTR [ebx],0x7b
  41d8bf:	fsub   st,st(1)
  41d8c1:	pop    esp
  41d8c2:	mov    dl,0x9a
  41d8c4:	icebp  
  41d8c5:	inc    ebp
  41d8c6:	jp     0x41d88c
  41d8c8:	cmp    BYTE PTR [esi+0x61],dl
  41d8cb:	je     0x41d863
  41d8cd:	(bad)  
  41d8ce:	das    
  41d8cf:	aaa    
  41d8d0:	xlat   BYTE PTR ds:[ebx]
  41d8d1:	jg     0x41d8e2
  41d8d3:	cmc    
  41d8d4:	fcomp  DWORD PTR ds:0xf86b5935
  41d8da:	fwait
  41d8db:	dec    ebp
  41d8dc:	cmp    ebp,DWORD PTR [ebp+edx*8+0x16baa4f3]
  41d8e3:	in     eax,0x57
  41d8e5:	xchg   edi,eax
  41d8e6:	cmp    DWORD PTR [edx-0x3e793ee1],edi
  41d8ec:	fwait
  41d8ed:	xchg   ebp,eax
  41d8ee:	ja     0x41d944
  41d8f0:	retf   
  41d8f1:	or     al,BYTE PTR [ebp+0x1c]
  41d8f4:	aas    
  41d8f5:	sbb    al,0xa5
  41d8f7:	push   edi
  41d8f8:	or     DWORD PTR [ebp+0x258f391c],edx
  41d8fe:	pusha  
  41d8ff:	pop    ecx
  41d900:	mov    cl,BYTE PTR [ebp+0x6f]
  41d903:	mov    BYTE PTR [edi+ecx*2-0x17],0x12
  41d908:	test   BYTE PTR [ecx+ecx*8-0x7ea698c2],dl
  41d90f:	pop    ebx
  41d910:	repz mov es,WORD PTR [eax-0x43]
  41d914:	movq   mm1,QWORD PTR [eax]
  41d917:	sbb    eax,0x6a86aa06
  41d91c:	fstp   DWORD PTR [eax+0x34]
  41d91f:	push   ebx
  41d920:	cmp    BYTE PTR [esi+ebp*4],cl
  41d923:	(bad)  
  41d925:	push   ss
  41d926:	xchg   edi,eax
  41d927:	fcmovnu st,st(3)
  41d929:	nop
  41d92a:	push   es
  41d92b:	test   BYTE PTR [edi+0x3100bb0e],ah
  41d931:	pop    edi
  41d932:	arpl   WORD PTR [ebp-0x166d7c4d],cx
  41d938:	jl     0x41d9b9
  41d93a:	dec    ecx
  41d93b:	rcr    BYTE PTR [esi],1
  41d93d:	mov    ch,0xd
  41d93f:	sub    BYTE PTR [edi+0x2be3a85d],0x35
  41d946:	fist   WORD PTR [ebx+0x6d]
  41d949:	fst    QWORD PTR [ebp-0x13]
  41d94c:	inc    esi
  41d94d:	inc    esi
  41d94e:	jl     0x41d99c
  41d950:	jecxz  0x41d9a3
  41d952:	fdivr  st(4),st
  41d954:	ins    DWORD PTR es:[edi],dx
  41d955:	sti    
  41d956:	inc    ebx
  41d957:	(bad)  
  41d959:	mov    ds:0xaabe919e,al
  41d95e:	idiv   BYTE PTR [ebp-0x7651d955]
  41d964:	dec    eax
  41d965:	add    al,0x85
  41d967:	ss dec edx
  41d969:	add    BYTE PTR [edx-0x4e99a238],bl
  41d96f:	pop    ebp
  41d970:	clc    
  41d971:	iret   
  41d972:	pop    eax
  41d973:	cmp    DWORD PTR [eax+0x1ebdb2e0],edi
  41d979:	dec    esp
  41d97a:	mov    eax,ds:0xd4d8ef12
  41d97f:	(bad)  
  41d980:	mov    cl,0xdf
  41d982:	adc    ecx,0xffffffec
  41d985:	push   0xfffffff5
  41d987:	fstp   TBYTE PTR [ecx-0x5af1ee85]
  41d98d:	push   es
  41d98e:	cs inc edi
  41d990:	pop    edi
  41d991:	pop    ss
  41d992:	and    eax,0x41c6f941
  41d997:	aad    0x77
  41d999:	xchg   al,ah
  41d99b:	repnz cwde 
  41d99d:	xchg   ebx,eax
  41d99e:	jbe    0x41d929
  41d9a0:	(bad)  
  41d9a1:	ret    0xedf1
  41d9a4:	sbb    ah,ch
  41d9a6:	or     ebx,ecx
  41d9a8:	dec    ebx
  41d9a9:	jge    0x41da0a
  41d9ab:	mov    bh,0xeb
  41d9ad:	push   0xb299c756
  41d9b2:	cmc    
  41d9b3:	pushf  
  41d9b4:	enter  0x729e,0x7
  41d9b8:	cmc    
  41d9b9:	pop    edx
  41d9ba:	cdq    
  41d9bb:	loope  0x41d94c
  41d9bd:	push   ds
  41d9be:	gs mov ecx,0x67965b69
  41d9c4:	inc    edx
  41d9c5:	loope  0x41d950
  41d9c7:	mov    edi,0xb1abff93
  41d9cc:	ret    
  41d9cd:	repz mov dh,0x59
  41d9d0:	shl    DWORD PTR [esi-0x5d],0x84
  41d9d4:	leave  
  41d9d5:	mov    dl,0x8c
  41d9d7:	repnz out 0x53,al
  41d9da:	jmp    0x368b3645
  41d9df:	push   esi
  41d9e0:	and    ah,bh
  41d9e2:	pop    esi
  41d9e3:	pop    edi
  41d9e4:	test   DWORD PTR [edx],edi
  41d9e6:	push   fs
  41d9e8:	push   es
  41d9e9:	sti    
  41d9ea:	jmp    0xa9a9:0x914272fb
  41d9f1:	stc    
  41d9f2:	jns    0x41d9f1
  41d9f4:	sub    eax,0x8e9f30f4
  41d9f9:	push   ss
  41d9fa:	mov    dh,0x24
  41d9fc:	jle    0x41d9e1
  41d9fe:	jne    0x41d9ef
  41da00:	jb     0x41da2c
  41da02:	shl    BYTE PTR [esi-0x7a],cl
  41da05:	(bad)  
  41da06:	mov    ch,0x1b
  41da08:	sub    eax,0x2b228489
  41da0d:	data16 aam 0xb
  41da10:	pop    eax
  41da11:	push   ss
  41da12:	dec    edi
  41da13:	push   es
  41da14:	cmp    BYTE PTR [edi+eax*8],dl
  41da17:	outs   dx,BYTE PTR ds:[esi]
  41da18:	(bad)  [eax-0x10]
  41da1b:	push   ebp
  41da1c:	out    dx,eax
  41da1d:	sub    bh,BYTE PTR [ebx]
  41da1f:	adc    esp,DWORD PTR [edi-0xba08d40]
  41da25:	lods   eax,DWORD PTR ds:[esi]
  41da26:	icebp  
  41da27:	push   0x56
  41da29:	push   esi
  41da2a:	bound  ebp,QWORD PTR [ebx]
  41da2c:	pop    ds
  41da2d:	mov    al,0xc7
  41da2f:	push   ecx
  41da30:	(bad)  
  41da31:	(bad)  
  41da32:	sbb    BYTE PTR [esi],al
  41da34:	adc    eax,0x255fdc52
  41da39:	inc    ebp
  41da3a:	dec    eax
  41da3b:	daa    
  41da3c:	mov    cl,0x93
  41da3e:	and    eax,0x7284301f
  41da43:	sbb    DWORD PTR [ecx],edx
  41da45:	pop    esp
  41da46:	sbb    eax,0xfb77a81a
  41da4b:	and    esp,DWORD PTR [eax-0xd81555a]
  41da51:	out    0x79,al
  41da53:	fs xor al,0x14
  41da56:	xor    DWORD PTR [esi+0x7c3cbf0d],esi
  41da5c:	xchg   edi,eax
  41da5d:	test   BYTE PTR [edi+eiz*8+0x5e6b57b8],bl
  41da64:	dec    esi
  41da65:	test   al,0xe4
  41da67:	fnstsw WORD PTR [edx+0x46]
  41da6a:	mov    es,WORD PTR [edx-0x21]
  41da6d:	pop    es
  41da6e:	dec    ebp
  41da6f:	(bad)  
  41da70:	scas   al,BYTE PTR es:[edi]
  41da71:	es jne 0x41daa8
  41da74:	pop    ecx
  41da75:	aas    
  41da76:	push   eax
  41da77:	adc    BYTE PTR [ecx+edi*4],ah
  41da7a:	mov    ebx,edx
  41da7c:	ror    BYTE PTR [esi+0x32],cl
  41da7f:	dec    esi
  41da80:	mov    edx,0x33134721
  41da85:	xchg   edi,eax
  41da86:	ret    
  41da87:	jmp    0x41da98
  41da89:	test   ebx,eax
  41da8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da8c:	(bad)  
  41da8d:	xor    eax,0xa0bcc8b4
  41da92:	dec    esp
  41da93:	popa   
  41da94:	(bad)  
  41da95:	sti    
  41da96:	push   ds
  41da97:	dec    cl
  41da99:	rcl    ecx,1
  41da9b:	test   bl,bh
  41da9d:	test   eax,0x7c416a9f
  41daa2:	imul   ebp,DWORD PTR [ebp-0x6bfe50e1],0xfffffffe
  41daa9:	add    ebp,esp
  41daab:	mov    ch,0xad
  41daad:	pushw  ds
  41daaf:	(bad)  
  41dab1:	cmp    eax,0x87e5a
  41dab6:	in     al,dx
  41dab7:	xchg   edx,eax
  41dab8:	mov    eax,0xce6bf0c7
  41dabd:	das    
  41dabe:	cmp    dl,BYTE PTR [edi+0x54]
  41dac1:	add    ah,BYTE PTR [esi]
  41dac3:	int    0x7b
  41dac5:	shl    edx,0x62
  41dac8:	mov    edx,0xf177b7d0
  41dacd:	js     0x41dad9
  41dacf:	push   edi
  41dad0:	mov    dl,BYTE PTR [edi]
  41dad2:	mov    ?,WORD PTR [edi-0x75]
  41dad5:	xchg   DWORD PTR [eax+0x3c],esp
  41dad8:	mov    al,0x6f
  41dada:	frstor [eax]
  41dadc:	movd   mm0,eax
  41dadf:	mov    ds:0xa347c5e4,eax
  41dae4:	scas   al,BYTE PTR es:[edi]
  41dae5:	dec    edx
  41dae6:	les    edx,FWORD PTR [ebx+0x18]
  41dae9:	add    eax,0x390c90da
  41daee:	mov    al,ds:0xb9e1c1dc
  41daf3:	cmp    al,0xeb
  41daf5:	loopne 0x41dae8
  41daf7:	bnd ret 
  41daf9:	sbb    al,0x95
  41dafb:	repnz das 
  41dafd:	adc    DWORD PTR [esi+ebx*1+0x585f631e],edx
  41db04:	ds mov eax,0x9fe5e91d
  41db0a:	mov    dh,0xfa
  41db0c:	(bad)  
  41db0d:	mov    fs,WORD PTR [ebp-0x7f]
  41db10:	ja     0x41dab5
  41db12:	ja     0x41db1b
  41db14:	sti    
  41db15:	sahf   
  41db16:	loope  0x41dab2
  41db18:	dec    eax
  41db19:	fcom   QWORD PTR [edx+0x0]
  41db1c:	shl    BYTE PTR [eax-0x577f704f],cl
  41db22:	ds push esp
  41db24:	and    ecx,DWORD PTR [ebx+eax*4+0x36]
  41db28:	aad    0x23
  41db2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db2b:	mov    cl,0x95
  41db2d:	popa   
  41db2e:	mov    bl,0x1b
  41db30:	mov    ch,0xa
  41db32:	or     bh,0x22
  41db35:	test   eax,0xedffdd3d
  41db3a:	fst    DWORD PTR [ebp+0x4a]
  41db3d:	lock dec ebx
  41db3f:	mov    dl,0xbe
  41db41:	cmc    
  41db42:	cmp    eax,0x68b77846
  41db47:	addr16 aas 
  41db49:	data16 aam 0x8b
  41db4c:	push   0x63
  41db4e:	pushf  
  41db4f:	or     al,0xd4
  41db51:	jge    0x41db01
  41db53:	icebp  
  41db54:	dec    esp
  41db55:	sti    
  41db56:	nop
  41db57:	aaa    
  41db58:	icebp  
  41db59:	sub    al,0xb2
  41db5b:	mov    DWORD PTR [edx-0x57],edi
  41db5e:	gs enter 0xa697,0xd4
  41db63:	sub    DWORD PTR [esi+eiz*1],edi
  41db66:	data16 ja 0x41db8b
  41db69:	sbb    ch,dl
  41db6b:	or     DWORD PTR [ecx-0x14],ebx
  41db6e:	xchg   ebx,eax
  41db6f:	rcr    BYTE PTR [edi+0x7c],0x48
  41db73:	jecxz  0x41db70
  41db75:	retf   
  41db76:	xor    bl,dh
  41db78:	inc    edx
  41db79:	adc    bh,bh
  41db7b:	mov    bh,0x7b
  41db7d:	sub    DWORD PTR [eax+0x42],esp
  41db80:	into   
  41db81:	xchg   ecx,eax
  41db82:	fsubrp st(4),st
  41db84:	dec    eax
  41db85:	pop    esi
  41db86:	(bad)  
  41db87:	lods   eax,DWORD PTR ds:[esi]
  41db88:	loop   0x41db91
  41db8a:	test   eax,edx
  41db8c:	mov    eax,0x6826c7a6
  41db91:	enter  0xa66b,0x93
  41db95:	pop    edx
  41db96:	inc    ecx
  41db97:	inc    edx
  41db98:	loope  0x41dbbb
  41db9a:	rcr    BYTE PTR [esi],cl
  41db9c:	sub    ah,BYTE PTR [edi+0x7a]
  41db9f:	pusha  
  41dba0:	sbb    eax,0xa66d0f19
  41dba5:	inc    ebx
  41dba6:	cmc    
  41dba7:	push   edx
  41dba8:	(bad)  
  41dba9:	pop    esi
  41dbaa:	int    0xdf
  41dbac:	aaa    
  41dbad:	call   FWORD PTR [edx]
  41dbaf:	loop   0x41db4c
  41dbb1:	mov    edi,0xbcda5107
  41dbb6:	add    bh,BYTE PTR [ebp+0x62c127da]
  41dbbc:	dec    esi
  41dbbd:	mov    DWORD PTR [esi-0x2cccd6ba],edx
  41dbc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbc4:	je     0x41dbe3
  41dbc6:	sub    ch,BYTE PTR [edx]
  41dbc8:	rcl    DWORD PTR [ebp-0xcd715c6],0x90
  41dbcf:	inc    ebx
  41dbd0:	(bad)  
  41dbd2:	add    ebp,DWORD PTR ds:0x41a3dd0f
  41dbd8:	inc    esp
  41dbd9:	sub    ah,bl
  41dbdb:	push   0x64
  41dbdd:	cs enter 0xc833,0xec
  41dbe2:	adc    BYTE PTR [esp+eax*1-0x2027bf69],bl
  41dbe9:	mov    ah,0x4b
  41dbeb:	or     eax,0x9798422b
  41dbf0:	inc    edi
  41dbf1:	cdq    
  41dbf2:	mov    ds:0xe83fb156,eax
  41dbf7:	add    esp,edi
  41dbf9:	lahf   
  41dbfa:	mov    ecx,0x15bc8d76
  41dbff:	cdq    
  41dc00:	mov    ecx,0xc6246c2d
  41dc05:	and    eax,0x682f82e7
  41dc0a:	shl    edi,0x77
  41dc0d:	mov    edi,0x44837e20
  41dc12:	mov    bl,0xdb
  41dc14:	xor    esi,esi
  41dc16:	sub    al,0xe0
  41dc18:	or     al,0x5d
  41dc1a:	pop    ebx
  41dc1b:	cwde   
  41dc1c:	scas   eax,DWORD PTR es:[edi]
  41dc1d:	or     esp,ecx
  41dc1f:	and    eax,0xe94e714
  41dc24:	jmp    0xb6b9548f
  41dc29:	add    ebx,DWORD PTR [esi]
  41dc2b:	neg    ebx
  41dc2d:	pop    ebx
  41dc2e:	mov    dl,0x9e
  41dc30:	push   ecx
  41dc31:	sub    bh,0x30
  41dc34:	mov    eax,ds:0x64ec011b
  41dc39:	mov    eax,0xffa19bcd
  41dc3e:	mov    esp,0x8023dd3
  41dc43:	fidivr WORD PTR [edi-0xe90eb70]
  41dc49:	ins    BYTE PTR es:[edi],dx
  41dc4a:	pop    ebp
  41dc4b:	outs   dx,DWORD PTR ds:[esi]
  41dc4c:	xchg   edx,eax
  41dc4d:	imul   edx,DWORD PTR [ebx],0x7826919a
  41dc53:	ss pop es
  41dc55:	lods   al,BYTE PTR ds:[esi]
  41dc56:	sub    BYTE PTR [esi],dl
  41dc58:	dec    ebx
  41dc59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc5a:	aaa    
  41dc5b:	pop    es
  41dc5c:	adc    BYTE PTR [eax-0x1a2db623],bh
  41dc62:	in     eax,dx
  41dc63:	cld    
  41dc64:	das    
  41dc65:	mov    dh,0x80
  41dc67:	jge    0x41dca6
  41dc69:	xchg   edi,eax
  41dc6a:	push   es
  41dc6b:	jle    0x41dcaa
  41dc6d:	out    0xb5,al
  41dc6f:	push   0xefb0e274
  41dc74:	sbb    eax,0x7cf5d7fe
  41dc79:	sub    eax,eax
  41dc7b:	std    
  41dc7c:	rcr    edi,1
  41dc7e:	sti    
  41dc7f:	fwait
  41dc80:	or     al,0x9a
  41dc82:	out    dx,al
  41dc83:	test   ebp,0x87ff388
  41dc89:	xor    al,0x9f
  41dc8b:	add    al,0x83
  41dc8d:	std    
  41dc8e:	call   0x2b4b93da
  41dc93:	add    al,0x5b
  41dc95:	daa    
  41dc96:	imul   edx,ecx,0x35
  41dc99:	pop    edi
  41dc9a:	lea    ebp,[edx+0x30f6d38a]
  41dca0:	sbb    al,0xd2
  41dca2:	fidiv  DWORD PTR [eax+0x3e]
  41dca5:	mov    esi,0xc38dbc18
  41dcaa:	je     0x41dcf9
  41dcac:	in     al,dx
  41dcad:	outs   dx,BYTE PTR gs:[esi]
  41dcaf:	xor    ebx,ebx
  41dcb1:	sbb    ebp,eax
  41dcb3:	lahf   
  41dcb4:	test   DWORD PTR [eax+0x5bcfc873],ebx
  41dcba:	xlat   BYTE PTR ds:[ebx]
  41dcbb:	lahf   
  41dcbc:	push   eax
  41dcbd:	(bad)  
  41dcbe:	loope  0x41dc5c
  41dcc0:	mov    edx,0x7f51f7bf
  41dcc5:	mov    cl,0xb3
  41dcc7:	inc    esi
  41dcc8:	test   al,0x86
  41dcca:	cmp    DWORD PTR [ecx],0xd2565df9
  41dcd0:	sbb    esp,DWORD PTR [ecx+0x2d]
  41dcd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd4:	shl    BYTE PTR [edi],cl
  41dcd6:	mov    ss:0x4f0722fb,eax
  41dcdc:	imul   ebp,DWORD PTR [ecx],0x52aee03b
  41dce2:	inc    edx
  41dce3:	rcr    DWORD PTR [ebp+0x23],cl
  41dce6:	pop    esp
  41dce7:	daa    
  41dce8:	fwait
  41dce9:	dec    eax
  41dcea:	jg     0x41dd24
  41dcec:	mov    ch,0x8a
  41dcee:	std    
  41dcef:	xor    eax,DWORD PTR [eax-0x23036ba6]
  41dcf5:	cmp    BYTE PTR [edi-0x13f091c3],dh
  41dcfb:	jns    0x41dd2f
  41dcfd:	push   es
  41dcfe:	lods   eax,DWORD PTR ds:[esi]
  41dcff:	or     BYTE PTR [edi],ch
  41dd01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd02:	inc    ecx
  41dd03:	mov    edx,0x61be5d86
  41dd08:	ret    
  41dd09:	bound  esp,QWORD PTR [edx-0x6f]
  41dd0c:	mov    WORD PTR [esp+edi*8],?
  41dd0f:	out    dx,eax
  41dd10:	cwde   
  41dd11:	mov    esp,0x57362496
  41dd16:	pop    esp
  41dd17:	xor    BYTE PTR ds:[esi],dh
  41dd1a:	loope  0x41dce4
  41dd1c:	jmp    0xf6f7:0xdd3e654e
  41dd23:	jge    0x41dd25
  41dd25:	or     dh,BYTE PTR [eax]
  41dd27:	mov    al,ds:0xae529291
  41dd2c:	add    al,ch
  41dd2e:	pop    es
  41dd2f:	cmp    esp,DWORD PTR [ebx-0x422ef160]
  41dd35:	scas   al,BYTE PTR es:[edi]
  41dd36:	pop    esi
  41dd37:	and    al,BYTE PTR [eax-0x38]
  41dd3a:	push   ds
  41dd3b:	das    
  41dd3c:	and    BYTE PTR [edx+eiz*1],dh
  41dd3f:	and    ecx,DWORD PTR [bx+si+0x1a27]
  41dd44:	or     BYTE PTR [ecx],al
  41dd46:	xchg   ebx,eax
  41dd47:	mov    eax,ds:0x6697bcc7
  41dd4c:	fwait
  41dd4d:	and    cl,ah
  41dd4f:	inc    ecx
  41dd50:	sub    cl,BYTE PTR [edx+0x5b]
  41dd53:	jg     0x41ddc2
  41dd55:	xchg   ebx,eax
  41dd56:	dec    ebx
  41dd57:	pushf  
  41dd58:	stc    
  41dd59:	and    DWORD PTR [ebx],edi
  41dd5b:	(bad)  
  41dd5c:	out    0x9d,al
  41dd5e:	add    ecx,esp
  41dd60:	fabs   
  41dd62:	pop    ds
  41dd63:	adc    ah,BYTE PTR [esp+ecx*1]
  41dd66:	sbb    al,0x11
  41dd68:	xlat   BYTE PTR ds:[ebx]
  41dd69:	mov    eax,ds:0xc1bbaa09
  41dd6e:	icebp  
  41dd6f:	push   ebp
  41dd70:	js     0x41dd15
  41dd72:	or     BYTE PTR [ebp+0x67ded4b1],dh
  41dd78:	and    ch,BYTE PTR [ebp-0x6]
  41dd7b:	js     0x41dde7
  41dd7d:	out    dx,al
  41dd7e:	push   edx
  41dd7f:	mov    eax,0xdac46d1c
  41dd84:	(bad)  
  41dd85:	push   es
  41dd86:	call   0xc208:0x2e89e6ac
  41dd8d:	lods   al,BYTE PTR ds:[esi]
  41dd8e:	jl     0x41ddcf
  41dd90:	pop    es
  41dd91:	lock xchg BYTE PTR [ebx+eiz*4+0x2d3ff557],cl
  41dd99:	xcrypt-ctr (bad)
  41dd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd9b:	fcmovnbe st,st(3)
  41dd9d:	sbb    BYTE PTR [ebp+0x2f],ah
  41dda0:	out    0x6e,eax
  41dda2:	in     al,0x56
  41dda4:	ss xchg edi,eax
  41dda6:	out    0x6c,al
  41dda8:	test   BYTE PTR [ebx+0x2e565e28],bh
  41ddae:	fst    DWORD PTR [eax]
  41ddb0:	shr    BYTE PTR [edi+ebx*8+0xce6353c],0x55
  41ddb8:	call   0x28fa:0xf6710d95
  41ddbf:	mov    cs,WORD PTR [eax+ebp*4]
  41ddc2:	pushf  
  41ddc3:	pop    ss
  41ddc4:	dec    esp
  41ddc5:	(bad)  
  41ddc6:	enter  0x4a9d,0x99
  41ddca:	inc    esi
  41ddcb:	push   0x93baf86f
  41ddd0:	hlt    
  41ddd1:	out    dx,al
  41ddd2:	je     0x41ddc5
  41ddd4:	and    al,0xa4
  41ddd6:	rcr    DWORD PTR [ebx-0xcb0e102],1
  41dddc:	fwait
  41dddd:	and    ch,BYTE PTR [ecx]
  41dddf:	imul   ecx,esi,0xcd82cf5c
  41dde5:	adc    BYTE PTR [eax+ecx*2],bh
  41dde8:	ror    DWORD PTR [edx-0x61fcbdc9],cl
  41ddee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddef:	inc    esi
  41ddf0:	cmp    eax,ebp
  41ddf2:	mov    eax,ds:0x8c4b0ab6
  41ddf7:	(bad)  
  41ddf8:	rcr    BYTE PTR [edx],1
  41ddfa:	and    DWORD PTR [edi-0x3a],ebx
  41ddfd:	jmp    0x41ddd3
  41ddff:	out    0xd3,eax
  41de01:	mov    edx,0x2dc3b78b
  41de06:	enter  0x2a08,0xd7
  41de0a:	(bad)  
  41de0b:	fnstcw WORD PTR [eax+0x42d5eff8]
  41de11:	xor    al,BYTE PTR [edx+0x6dc69f8]
  41de17:	ins    BYTE PTR es:[edi],dx
  41de18:	idiv   DWORD PTR [eax+0x9c2f0f5]
  41de1e:	dec    esi
  41de1f:	or     esp,0xffffffea
  41de22:	lahf   
  41de23:	into   
  41de24:	fs es cmp al,0xa0
  41de28:	cmp    dh,dh
  41de2a:	ret    
  41de2b:	shl    DWORD PTR [edx+0x76dd4096],1
  41de31:	in     al,0xd9
  41de33:	popa   
  41de34:	or     bh,0xbc
  41de37:	imul   ebp,ebp,0xffffffca
  41de3a:	data16 (bad) 
  41de3c:	sar    bl,cl
  41de3e:	push   ebp
  41de3f:	ds push edi
  41de41:	cdq    
  41de42:	lock or al,0xc
  41de45:	fsubr  st,st(2)
  41de47:	mov    bh,0xbd
  41de49:	fs xchg edi,eax
  41de4b:	push   cs
  41de4c:	sbb    BYTE PTR [eax+0x39],dl
  41de4f:	int    0x40
  41de51:	lahf   
  41de52:	cmp    eax,0x1d0dfa31
  41de57:	sbb    ebp,DWORD PTR [ecx]
  41de59:	test   bh,bh
  41de5b:	push   0x4fc570a2
  41de60:	xchg   edi,eax
  41de61:	xor    eax,0xfe8e1a60
  41de66:	and    BYTE PTR [ecx+ebp*8],0xab
  41de6a:	ror    DWORD PTR [esi-0x1f547199],cl
  41de70:	dec    esi
  41de71:	stc    
  41de72:	out    0x86,eax
  41de74:	ins    DWORD PTR es:[edi],dx
  41de75:	sbb    BYTE PTR [edx-0x27e75bfb],dh
  41de7b:	mov    bh,0xd9
  41de7d:	mov    eax,ds:0x10bd892c
  41de82:	pushf  
  41de83:	sub    BYTE PTR [esi+ebp*4+0x7],bl
  41de87:	fidiv  WORD PTR [ebp-0x2824d607]
  41de8d:	rcr    ah,0xea
  41de90:	(bad)  
  41de91:	sbb    eax,0x63ad3875
  41de96:	cmp    ah,BYTE PTR [edx+0x13]
  41de99:	cmp    al,0x90
  41de9b:	or     al,0x3f
  41de9d:	xor    ecx,DWORD PTR [edx+eax*4]
  41dea0:	adc    ebp,DWORD PTR [edi]
  41dea2:	pop    ebx
  41dea3:	pop    esi
  41dea4:	sub    ecx,ebp
  41dea6:	fwait
  41dea7:	inc    edx
  41dea8:	scas   eax,DWORD PTR es:[edi]
  41dea9:	sub    eax,0x9b4e4c5d
  41deae:	or     al,0x7e
  41deb0:	sbb    bh,BYTE PTR [ebx+0x6b62599]
  41deb6:	jo     0x41de82
  41deb8:	jmp    0x6b4:0x73ea9794
  41debf:	dec    edx
  41dec0:	mov    edi,0xdc047d1a
  41dec5:	xchg   ecx,eax
  41dec6:	retf   0xdfb2
  41dec9:	jb     0x41dec1
  41decb:	mov    ds:0x830cb1ca,eax
  41ded0:	sub    ebp,DWORD PTR [esi+esi*2-0x31]
  41ded4:	mov    edi,0x26de00cf
  41ded9:	fs or  al,0x8e
  41dedc:	jo     0x41df53
  41dede:	xor    DWORD PTR [edi-0x13660877],esp
  41dee4:	call   0xea64:0xc0e707d7
  41deeb:	sub    bh,BYTE PTR [ebp+0x3d7e0e40]
  41def1:	test   BYTE PTR [ecx],ch
  41def3:	and    al,BYTE PTR [ebp+ebx*2-0x9b69b4c]
  41defa:	(bad)  
  41defb:	ss mov ah,0xf9
  41defe:	pusha  
  41deff:	add    ah,BYTE PTR [ebp-0x1f]
  41df02:	fidivr WORD PTR [esi+ecx*4]
  41df05:	mov    es,WORD PTR [ecx+0xd92b5f3]
  41df0b:	repnz push esi
  41df0d:	sqrtps xmm2,XMMWORD PTR [eax+0x72f11371]
  41df14:	sbb    dh,BYTE PTR [esi+ebx*8-0x952d344]
  41df1b:	jns    0x41df8b
  41df1d:	cld    
  41df1e:	mov    al,0xa8
  41df20:	mov    ah,0xb0
  41df22:	int    0x47
  41df24:	jp     0x41df3b
  41df26:	dec    ebp
  41df27:	lea    edx,[eax-0x75317ca8]
  41df2d:	ret    
  41df2e:	rcl    BYTE PTR [ebp-0x3c],cl
  41df31:	adc    ah,ch
  41df33:	ins    BYTE PTR es:[edi],dx
  41df34:	add    DWORD PTR [edi],esp
  41df36:	xchg   esp,eax
  41df37:	mov    ch,BYTE PTR [ecx-0x6c]
  41df3a:	out    dx,al
  41df3b:	jp     0x41df1d
  41df3d:	jb     0x41df76
  41df3f:	lods   al,BYTE PTR ds:[esi]
  41df40:	out    0x5f,al
  41df42:	jecxz  0x41df39
  41df44:	dec    ecx
  41df45:	loope  0x41df82
  41df47:	stc    
  41df48:	dec    di
  41df4a:	int3   
  41df4b:	jle    0x41df29
  41df4d:	push   esp
  41df4e:	push   ebx
  41df4f:	sub    DWORD PTR [edx+0x1fc8069d],edi
  41df55:	sub    esi,edi
  41df57:	mov    ah,0x6f
  41df59:	mov    ah,0x5a
  41df5b:	dec    esp
  41df5c:	les    edi,FWORD PTR [eax]
  41df5e:	out    dx,al
  41df5f:	pop    eax
  41df60:	push   0xffffff82
  41df62:	sbb    bh,0x5c
  41df65:	mov    eax,0xf398038b
  41df6a:	rcr    DWORD PTR [ecx],1
  41df6c:	xor    ebx,edx
  41df6e:	inc    ebp
  41df6f:	mov    dl,0xb0
  41df71:	fsubr  st,st(0)
  41df73:	push   ds
  41df74:	pop    edx
  41df75:	(bad)  
  41df76:	out    0x7d,al
  41df78:	lods   al,BYTE PTR ds:[esi]
  41df79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7a:	mov    WORD PTR [edx],ss
  41df7c:	sbb    BYTE PTR [ebx],dl
  41df7e:	rol    DWORD PTR [edx-0x4a],0x68
  41df82:	ja     0x41df5c
  41df84:	icebp  
  41df85:	aad    0x3b
  41df87:	sbb    eax,0xcc2c85f8
  41df8c:	retf   0x6ee1
  41df8f:	(bad)  
  41df90:	adc    al,0x79
  41df92:	mov    ebx,0xf16ea889
  41df97:	clc    
  41df98:	xchg   edi,esp
  41df9a:	les    eax,FWORD PTR [ebx+0x3]
  41df9d:	jecxz  0x41dfe8
  41df9f:	add    ah,al
  41dfa1:	cmc    
  41dfa2:	mov    ds:0x72ecb108,eax
  41dfa7:	dec    ebx
  41dfa8:	cmp    DWORD PTR [eax],esp
  41dfaa:	pop    ecx
  41dfab:	and    dh,BYTE PTR [eax-0x6d7377a2]
  41dfb1:	inc    eax
  41dfb2:	mov    al,0x54
  41dfb4:	test   al,0x34
  41dfb6:	fsubrp st(7),st
  41dfb8:	call   0x72fc2231
  41dfbd:	add    eax,0xf6ef7d76
  41dfc2:	jmp    0x41dfdb
  41dfc4:	inc    BYTE PTR [esi-0x48]
  41dfc7:	mov    ds:0x63c0d318,eax
  41dfcc:	pop    eax
  41dfcd:	mov    ds:0xb2fc6da1,al
  41dfd2:	out    dx,al
  41dfd3:	aaa    
  41dfd4:	cmp    ebp,ebx
  41dfd6:	jne    0x41e001
  41dfd8:	mov    ds:0x5fb528cc,eax
  41dfdd:	cmp    cl,BYTE PTR [ecx-0x26bac31]
  41dfe3:	rol    DWORD PTR [eax-0x4a5939b0],0xc2
  41dfea:	stc    
  41dfeb:	imul   ecx,DWORD PTR [ebp+0x2c],0x48e1aa4e
  41dff2:	sbb    BYTE PTR [edx+0x6e],0x9f
  41dff6:	and    al,0x61
  41dff8:	and    eax,0xd9fb2763
  41dffd:	xchg   esp,eax
  41dffe:	mov    al,ds:0xd49c4fd3
  41e003:	enter  0x140b,0xd5
  41e007:	or     ah,bh
  41e009:	cmp    edi,0xffffff8f
  41e00c:	fimul  DWORD PTR [esi+0x7e]
  41e00f:	arpl   cx,ax
  41e011:	mov    ds,WORD PTR [esi+0x26]
  41e014:	ror    BYTE PTR [edx],1
  41e016:	mov    dl,0x3a
  41e018:	jbe    0x41e01a
  41e01a:	sub    ebx,ecx
  41e01c:	call   0x1d6478b1
  41e021:	inc    esp
  41e022:	fs add esi,edx
  41e025:	push   es
  41e026:	inc    ebx
  41e027:	enter  0xf6ac,0xdb
  41e02b:	pop    esi
  41e02c:	out    0x29,al
  41e02e:	mov    edx,0xad47f41c
  41e033:	and    BYTE PTR [ebx],dh
  41e035:	xor    ah,BYTE PTR [ecx+0x44c758d8]
  41e03b:	ret    
  41e03c:	aas    
  41e03d:	repz jg 0x41e094
  41e040:	popa   
  41e041:	mov    al,ds:0x7fe1ae7a
  41e046:	jo     0x41e001
  41e048:	push   ecx
  41e049:	mov    bh,0x47
  41e04b:	cmc    
  41e04c:	xchg   bh,ch
  41e04e:	xlat   BYTE PTR ds:[ebx]
  41e04f:	dec    ebp
  41e050:	mov    DWORD PTR [ebx],edx
  41e052:	in     eax,dx
  41e053:	scas   eax,DWORD PTR es:[edi]
  41e054:	and    BYTE PTR [eax+0x3e],bl
  41e057:	mov    dh,0x3e
  41e059:	and    ebp,edx
  41e05b:	mov    dl,0x99
  41e05d:	mov    eax,0x712403e8
  41e062:	idiv   DWORD PTR [eax+0x79ab948c]
  41e068:	iret   
  41e069:	jmp    0x41dff2
  41e06b:	sti    
  41e06c:	in     eax,0x27
  41e06e:	xchg   ebp,eax
  41e06f:	jno    0x41e018
  41e071:	inc    cl
  41e073:	out    dx,eax
  41e074:	cmp    ah,0xac
  41e077:	into   
  41e078:	iret   
  41e079:	mov    eax,0xb626c2d0
  41e07e:	jb     0x41e075
  41e080:	jno    0x41e094
  41e082:	dec    ecx
  41e083:	or     eax,0x84331888
  41e088:	adc    eax,0x24ea1317
  41e08d:	scas   al,BYTE PTR es:[edi]
  41e08e:	fimul  WORD PTR [esi+0x69346ca5]
  41e094:	(bad)
  41e097:	pushf  
  41e098:	sbb    al,0xe6
  41e09a:	inc    esp
  41e09b:	repnz movs DWORD PTR es:[di],DWORD PTR ds:[si]
  41e09e:	lds    esp,FWORD PTR [edx-0x3e]
  41e0a1:	pop    ecx
  41e0a2:	mov    ah,0x20
  41e0a4:	jecxz  0x41e02a
  41e0a6:	sub    al,0xd4
  41e0a8:	sbb    DWORD PTR [esi-0x26],esp
  41e0ab:	jns    0x41e0c6
  41e0ad:	mov    cl,0xba
  41e0af:	xchg   esp,eax
  41e0b0:	mov    edi,DWORD PTR [esi+0x73f64284]
  41e0b6:	ja     0x41e0bd
  41e0b8:	(bad)  
  41e0b9:	neg    BYTE PTR [ebp+0x1b]
  41e0bc:	lahf   
  41e0bd:	enter  0xc218,0xc6
  41e0c1:	jmp    FWORD PTR [edi+0x44d52b98]
  41e0c7:	call   0x2533:0x87a68b12
  41e0ce:	mov    dh,0xd3
  41e0d0:	sbb    eax,ecx
  41e0d2:	sbb    ebp,DWORD PTR [esi+eiz*8+0x7]
  41e0d6:	mov    bh,0x1a
  41e0d8:	inc    ebp
  41e0d9:	mov    eax,0x1ec38206
  41e0de:	sbb    ecx,DWORD PTR [ebx-0x6a0edf8e]
  41e0e4:	inc    esi
  41e0e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e6:	pushf  
  41e0e7:	es std 
  41e0e9:	mov    dh,0x45
  41e0eb:	and    ebp,esi
  41e0ed:	inc    esi
  41e0ee:	mov    cl,0xfb
  41e0f0:	test   ch,bh
  41e0f2:	pusha  
  41e0f3:	js     0x41e0bb
  41e0f5:	add    DWORD PTR [esi+ebp*1+0x7a],ebx
  41e0f9:	cmp    ebx,DWORD PTR [edx+0x57ee38e7]
  41e0ff:	sub    BYTE PTR ds:0xa2ccb4fb,dl
  41e105:	xor    BYTE PTR [edi-0x62],cl
  41e108:	adc    dl,al
  41e10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e10b:	cmp    al,0xf2
  41e10d:	out    dx,eax
  41e10e:	xor    esp,edi
  41e110:	stos   BYTE PTR es:[edi],al
  41e111:	pop    ebx
  41e112:	in     al,0xd4
  41e114:	mov    bl,0xc2
  41e116:	xor    BYTE PTR [esi],al
  41e118:	stos   DWORD PTR es:[edi],eax
  41e119:	jl     0x41e163
  41e11b:	add    al,0xef
  41e11d:	loope  0x41e129
  41e11f:	sti    
  41e120:	ss pop edx
  41e122:	sar    DWORD PTR [ecx-0x4b],0xd9
  41e126:	push   ds
  41e127:	je     0x41e12b
  41e129:	arpl   WORD PTR [edx-0x2f],dx
  41e12c:	addr16 cld 
  41e12e:	aaa    
  41e12f:	lods   al,BYTE PTR ds:[esi]
  41e130:	pop    es
  41e131:	mov    ebx,0xf25689bb
  41e136:	push   esi
  41e137:	sub    al,0xf4
  41e139:	push   esp
  41e13a:	dec    BYTE PTR [edi-0x53]
  41e13d:	outs   dx,BYTE PTR ds:[esi]
  41e13e:	jle    0x41e1aa
  41e140:	cld    
  41e141:	push   ds
  41e142:	idiv   DWORD PTR [edx-0x37]
  41e145:	add    ebp,eax
  41e147:	ror    DWORD PTR [edx],cl
  41e149:	adc    dl,BYTE PTR [edx+edx*2+0x25]
  41e14d:	fisubr WORD PTR [ecx+eax*4+0x37]
  41e151:	icebp  
  41e152:	(bad)  
  41e153:	in     eax,0xb1
  41e155:	push   eax
  41e156:	xchg   esp,eax
  41e157:	ss in  al,dx
  41e159:	push   esp
  41e15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15b:	test   eax,0xa744b7d6
  41e160:	call   0xd61ac0f
  41e165:	(bad)
  41e16a:	pop    ebp
  41e16b:	ss or  eax,0xba344966
  41e171:	mov    edx,0xb6f1e510
  41e176:	fild   DWORD PTR [eax+0x37]
  41e179:	daa    
  41e17a:	and    cl,BYTE PTR [ecx]
  41e17c:	xchg   esi,eax
  41e17d:	cmp    DWORD PTR [esp+edi*1-0x51ea8d75],0x3b1df5e3
  41e188:	cmp    al,0x7
  41e18a:	into   
  41e18b:	add    eax,0x88a5f07a
  41e190:	std    
  41e191:	xchg   BYTE PTR [ecx+0x74],dl
  41e194:	cli    
  41e195:	imul   edi,DWORD PTR [edx+0x2c4a933b],0x79d9d05
  41e19f:	das    
  41e1a0:	call   0xe04ba712
  41e1a5:	jne    0x41e1ed
  41e1a7:	cmp    eax,0xe714963e
  41e1ac:	push   cs
  41e1ad:	bound  ecx,QWORD PTR [ebx+ecx*8+0x53ce64ea]
  41e1b4:	inc    esi
  41e1b5:	and    eax,DWORD PTR ds:0x7a124b30
  41e1bb:	test   DWORD PTR [eiz*2+0x7230d1c7],0xd7056ae
  41e1c6:	es adc cl,ch
  41e1c9:	inc    edx
  41e1ca:	xchg   esi,eax
  41e1cb:	adc    dl,BYTE PTR [esi+0xdabf255]
  41e1d1:	pop    esp
  41e1d2:	fcomp  DWORD PTR [eax-0x3c0bd3ae]
  41e1d8:	adc    ch,al
  41e1da:	jecxz  0x41e16c
  41e1dc:	ret    
  41e1dd:	mov    ecx,DWORD PTR [ebp+0x4da4a953]
  41e1e3:	cmc    
  41e1e4:	or     eax,0x36986f99
  41e1e9:	icebp  
  41e1ea:	aaa    
  41e1eb:	fwait
  41e1ec:	mov    al,0x70
  41e1ee:	push   ss
  41e1ef:	mov    ch,0xe4
  41e1f1:	(bad)  
  41e1f2:	sti    
  41e1f3:	stos   DWORD PTR es:[edi],eax
  41e1f4:	cmp    al,0x28
  41e1f6:	lods   eax,DWORD PTR ds:[esi]
  41e1f7:	loope  0x41e18c
  41e1f9:	ds xchg esi,eax
  41e1fb:	add    DWORD PTR [ebx],ecx
  41e1fd:	or     ecx,DWORD PTR ds:0xca0295b9
  41e203:	mov    edi,0x87f77f95
  41e208:	hlt    
  41e209:	mov    al,0x35
  41e20b:	into   
  41e20c:	cmp    al,0x8c
  41e20e:	shr    BYTE PTR [eax-0xf],0x23
  41e212:	dec    edi
  41e213:	mov    ds:0x53a19218,al
  41e218:	mov    ebx,0xf17ef091
  41e21d:	popa   
  41e21e:	inc    ebp
  41e21f:	cdq    
  41e220:	xor    eax,0x9a676d86
  41e225:	in     al,0x30
  41e227:	or     DWORD PTR [ebx],eax
  41e229:	lahf   
  41e22a:	fwait
  41e22b:	scas   eax,DWORD PTR es:[edi]
  41e22c:	cmp    al,0xa8
  41e22e:	sub    BYTE PTR [ebp-0x35],0x41
  41e232:	sbb    edi,DWORD PTR [edi]
  41e234:	in     al,0x11
  41e236:	jb     0x41e29f
  41e238:	push   ebx
  41e239:	loop   0x41e29d
  41e23b:	cdq    
  41e23c:	(bad)  
  41e23d:	icebp  
  41e23e:	pop    esp
  41e23f:	or     eax,0xf4698b62
  41e244:	out    dx,al
  41e245:	xchg   edx,eax
  41e246:	or     ebp,ecx
  41e248:	pop    es
  41e249:	xchg   ebx,eax
  41e24a:	enter  0x7b66,0x11
  41e24e:	cmp    DWORD PTR [eax],edi
  41e250:	adc    eax,0xf5ebca1e
  41e255:	dec    esi
  41e256:	jmp    0xf88a07b9
  41e25b:	xor    al,0xd
  41e25d:	sub    cl,ah
  41e25f:	inc    ebx
  41e260:	retf   
  41e261:	add    DWORD PTR [esi+0x25c99bb1],ecx
  41e267:	pop    edi
  41e268:	les    edx,FWORD PTR [ecx-0x7d]
  41e26b:	in     eax,dx
  41e26c:	je     0x41e2df
  41e26e:	adc    bl,BYTE PTR [esp+ebp*2]
  41e271:	mov    dl,0x2f
  41e273:	into   
  41e274:	lds    esi,FWORD PTR [ebx+0x4c]
  41e277:	jle    0x41e269
  41e279:	sbb    DWORD PTR [ebp+eiz*2+0x73],0x8a6d97ee
  41e281:	or     al,0x34
  41e283:	inc    esi
  41e284:	inc    ebx
  41e285:	cmp    ebx,eax
  41e287:	cmp    al,0xd1
  41e289:	cmp    eax,0x42b1d1b0
  41e28e:	fstp   QWORD PTR [edx]
  41e290:	jp     0x41e247
  41e292:	icebp  
  41e293:	cmp    edx,DWORD PTR [edx]
  41e295:	iret   
  41e296:	pusha  
  41e297:	scas   al,BYTE PTR es:[edi]
  41e298:	mov    esp,0x821c7739
  41e29d:	aad    0xae
  41e29f:	imul   ebp,DWORD PTR [esp+edx*4-0x6],0xffffffff
  41e2a4:	cmp    al,0x6e
  41e2a6:	and    edx,eax
  41e2a8:	mov    edi,0x5116ac6d
  41e2ad:	hlt    
  41e2ae:	(bad)  
  41e2af:	mov    esi,0x89d633f6
  41e2b4:	or     BYTE PTR ds:0x2b5a6fdb,ah
  41e2ba:	mov    bl,0x6b
  41e2bc:	lods   eax,DWORD PTR ds:[esi]
  41e2bd:	ret    0x2923
  41e2c0:	jecxz  0x41e332
  41e2c2:	dec    edx
  41e2c3:	sub    al,0xc6
  41e2c5:	add    al,0x38
  41e2c7:	je     0x41e28c
  41e2c9:	jmp    0x6a0:0x29294497
  41e2d0:	das    
  41e2d1:	push   cs
  41e2d2:	loop   0x41e255
  41e2d4:	leave  
  41e2d5:	add    al,BYTE PTR [ecx+0x25ebb5f8]
  41e2db:	test   al,0x6a
  41e2dd:	mov    dh,0x3d
  41e2df:	fwait
  41e2e0:	rol    BYTE PTR [ebp-0x698d5c8d],1
  41e2e6:	daa    
  41e2e7:	call   0xe64752fd
  41e2ec:	aad    0x26
  41e2ee:	aaa    
  41e2ef:	cmp    DWORD PTR [edi],edi
  41e2f1:	cmp    BYTE PTR [ebp+0x39229bed],dh
  41e2f7:	aad    0x76
  41e2f9:	cmp    cl,BYTE PTR ds:0x41a03027
  41e2ff:	leave  
  41e300:	sub    edx,ecx
  41e302:	scas   al,BYTE PTR es:[edi]
  41e303:	imul   ecx,ebp,0xffffffef
  41e306:	adc    eax,0x882db807
  41e30b:	loop   0x41e2a0
  41e30d:	cmp    dl,BYTE PTR [edx]
  41e30f:	mov    bl,0x5d
  41e311:	or     DWORD PTR [edi-0x6c513da8],0xa86df7a5
  41e31b:	mov    ch,0x79
  41e31d:	push   edi
  41e31e:	shl    BYTE PTR [edx-0x746c9bcc],0x45
  41e325:	int    0xdc
  41e327:	add    eax,DWORD PTR [edx+0x15]
  41e32a:	mov    edx,0xdaca602
  41e32f:	aam    0x67
  41e331:	xchg   ebx,eax
  41e332:	psrlq  mm1,QWORD PTR [edx]
  41e335:	daa    
  41e336:	out    dx,eax
  41e337:	lahf   
  41e338:	add    cl,al
  41e33a:	pushf  
  41e33b:	adc    edx,DWORD PTR [ecx-0x6efe9198]
  41e341:	clc    
  41e342:	outs   dx,DWORD PTR ds:[esi]
  41e343:	fistp  QWORD PTR [eax+0x22]
  41e346:	adc    al,0xaa
  41e348:	lea    edi,[ecx+edi*1]
  41e34b:	sub    BYTE PTR [edi-0x41c18434],ch
  41e351:	or     al,0x2f
  41e353:	adc    esp,DWORD PTR [esi+0x3c26a055]
  41e359:	xchg   ecx,eax
  41e35a:	js     0x41e382
  41e35c:	stos   DWORD PTR es:[edi],eax
  41e35d:	cwde   
  41e35e:	in     al,dx
  41e35f:	push   ss
  41e360:	fmul   st(0),st
  41e362:	mov    al,ds:0xd24ab4f4
  41e367:	jb     0x41e378
  41e369:	icebp  
  41e36a:	into   
  41e36b:	in     eax,0x73
  41e36d:	das    
  41e36e:	je     0x41e324
  41e370:	xor    DWORD PTR ds:0x54cea8c3,0x57e245b2
  41e37a:	mov    al,0x35
  41e37c:	adc    ecx,DWORD PTR [ebx-0x7c]
  41e37f:	inc    esp
  41e380:	jnp    0x41e3a6
  41e382:	sbb    cl,BYTE PTR [ecx]
  41e384:	loop   0x41e363
  41e386:	pop    edx
  41e387:	ror    eax,0x30
  41e38a:	es pushf 
  41e38c:	stos   DWORD PTR es:[edi],eax
  41e38d:	not    ebp
  41e38f:	push   edi
  41e391:	push   0x39
  41e393:	push   0x903104cf
  41e398:	xchg   DWORD PTR [edx-0x5d909bf3],ecx
  41e39e:	sbb    BYTE PTR [eax+0x15f2dbe6],dl
  41e3a4:	xor    cl,al
  41e3a6:	push   es
  41e3a7:	cs pusha 
  41e3a9:	mov    eax,0x2684fd42
  41e3ae:	in     al,0x3d
  41e3b0:	stos   BYTE PTR es:[edi],al
  41e3b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3b2:	out    dx,eax
  41e3b3:	fwait
  41e3b4:	cmp    DWORD PTR [eax-0x11],edi
  41e3b7:	mov    eax,ds:0x4247f175
  41e3bc:	sub    eax,0x8bc76539
  41e3c1:	gs aam 0x7d
  41e3c4:	adc    eax,esp
  41e3c6:	mov    eax,ds:0xfd638e58
  41e3cb:	dec    ebp
  41e3cc:	add    dh,BYTE PTR [ebp-0x2403b765]
  41e3d2:	call   0x4349:0x445728bf
  41e3d9:	(bad)  
  41e3da:	cld    
  41e3db:	jl     0x41e367
  41e3dd:	(bad)  
  41e3de:	das    
  41e3df:	pop    ss
  41e3e0:	fimul  DWORD PTR [esp+esi*2]
  41e3e3:	iret   
  41e3e4:	jg     0x41e417
  41e3e6:	call   0x2863d682
  41e3eb:	outs   dx,BYTE PTR ds:[esi]
  41e3ec:	popa   
  41e3ed:	sahf   
  41e3ee:	arpl   WORD PTR [esi+0x79],ax
  41e3f1:	arpl   WORD PTR [esi],cx
  41e3f3:	mov    bh,0xbc
  41e3f5:	lds    edx,FWORD PTR [ecx]
  41e3f7:	jbe    0x41e3ee
  41e3f9:	(bad)  
  41e3fa:	in     al,0xbd
  41e3fc:	mov    al,0x4
  41e3fe:	xor    BYTE PTR [eax-0xa0c356d],al
  41e404:	mov    DWORD PTR fs:[ecx],ebx
  41e407:	and    BYTE PTR [edx+0x1c0132a7],bl
  41e40d:	sub    al,0x5f
  41e40f:	lods   eax,DWORD PTR ds:[esi]
  41e410:	shr    BYTE PTR [edi-0x23],cl
  41e413:	pop    ds
  41e414:	jp     0x41e457
  41e416:	push   esp
  41e417:	push   ebp
  41e418:	jmp    0x41e42d
  41e41a:	popf   
  41e41b:	outs   dx,BYTE PTR ds:[esi]
  41e41c:	popf   
  41e41d:	mov    WORD PTR [ebp+0x6c78931],gs
  41e423:	push   ebp
  41e424:	call   0x15c4:0x2a5a4e71
  41e42b:	xchg   esi,eax
  41e42c:	mov    WORD PTR [eax],ds
  41e42e:	leave  
  41e42f:	(bad)  
  41e431:	sbb    ecx,DWORD PTR ds:0xa23b4be1
  41e437:	(bad)  
  41e438:	mov    dl,0xb0
  41e43a:	sahf   
  41e43b:	jle    0x41e443
  41e43d:	sub    DWORD PTR ds:0xc445c87d,esp
  41e443:	dec    edx
  41e444:	push   ds
  41e445:	stos   BYTE PTR es:[edi],al
  41e446:	nop
  41e447:	jl     0x41e494
  41e449:	stc    
  41e44a:	outs   dx,DWORD PTR ds:[esi]
  41e44b:	xor    BYTE PTR [edx],dh
  41e44d:	xor    DWORD PTR [ebp+0x7f7135a9],esp
  41e453:	or     BYTE PTR [eax-0x28d91988],dl
  41e459:	out    0x1c,al
  41e45b:	lea    ebx,[ebp+0x3b373a1a]
  41e461:	hlt    
  41e462:	push   0xffffff8e
  41e464:	test   eax,0xa4715614
  41e469:	xchg   ebx,eax
  41e46a:	cmc    
  41e46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e46c:	pop    edi
  41e46d:	adc    al,0xff
  41e46f:	add    eax,0x8279a629
  41e474:	add    bl,ah
  41e476:	mov    ebx,0x68edd718
  41e47b:	mov    dl,0x20
  41e47d:	mov    al,0x3a
  41e47f:	jno    0x41e477
  41e481:	sbb    ecx,esi
  41e483:	pushf  
  41e484:	retf   
  41e485:	jnp    0x41e48c
  41e487:	or     BYTE PTR [eax+edi*1],bl
  41e48a:	cmp    eax,0xf4340231
  41e48f:	pop    ecx
  41e490:	cdq    
  41e491:	and    al,0xa6
  41e493:	xchg   ebp,eax
  41e494:	jg     0x41e47f
  41e496:	stos   DWORD PTR es:[edi],eax
  41e497:	push   ebp
  41e498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e499:	pop    esi
  41e49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e49b:	or     bh,BYTE PTR [eax]
  41e49d:	nop
  41e49e:	mov    ah,0x98
  41e4a0:	pop    edi
  41e4a1:	pop    ss
  41e4a2:	sbb    DWORD PTR [ecx+ebx*8+0xde3e416],esp
  41e4a9:	bound  ebp,QWORD PTR [edx]
  41e4ab:	mov    eax,0x8f481dbc
  41e4b0:	test   BYTE PTR [edi-0x4170e9d1],bl
  41e4b6:	cmp    al,0x97
  41e4b8:	(bad)  
  41e4b9:	sti    
  41e4ba:	sbb    al,0x84
  41e4bc:	push   ecx
  41e4bd:	xor    ch,BYTE PTR [eax]
  41e4bf:	mov    DWORD PTR [edx+esi*2-0x69],ebx
  41e4c3:	xor    ebp,edx
  41e4c5:	js     0x41e4eb
  41e4c7:	cmp    eax,0x38dab31
  41e4cc:	out    dx,eax
  41e4cd:	cs mov bl,0x69
  41e4d0:	scas   al,BYTE PTR es:[edi]
  41e4d1:	call   0x6a0f:0x8caf6460
  41e4d8:	in     al,0xdd
  41e4da:	mov    ds:0x7daf2dde,eax
  41e4df:	or     bh,al
  41e4e1:	push   ecx
  41e4e2:	in     al,dx
  41e4e3:	int    0xda
  41e4e5:	in     eax,0x99
  41e4e7:	mov    al,ds:0x693c18cf
  41e4ec:	iret   
  41e4ed:	scas   al,BYTE PTR es:[edi]
  41e4ee:	pop    eax
  41e4ef:	mov    DWORD PTR [eax],ebp
  41e4f1:	adc    eax,0x3ebbd5cc
  41e4f6:	mov    ah,BYTE PTR [edx+0x37742c55]
  41e4fc:	inc    eax
  41e4fd:	sub    eax,0x2eaee0db
  41e502:	pop    ss
  41e503:	jle    0x41e577
  41e505:	call   0x6198:0xfa6d43b4
  41e50c:	jge    0x41e49d
  41e50e:	push   ebx
  41e50f:	sar    DWORD PTR [ebx+0x7d804c74],0x6f
  41e516:	and    bl,BYTE PTR [eax]
  41e518:	dec    esp
  41e519:	popa   
  41e51a:	sti    
  41e51b:	mov    ds:0x998dfcc2,eax
  41e520:	into   
  41e521:	sub    eax,ebx
  41e523:	clc    
  41e524:	lea    ebx,ds:0x76366486
  41e52a:	adc    al,BYTE PTR [esi]
  41e52c:	aas    
  41e52d:	bnd je 0x41e515
  41e530:	xchg   DWORD PTR [edi-0x519f7079],esi
  41e536:	sbb    ah,dl
  41e538:	pushf  
  41e539:	add    al,BYTE PTR [ebx+ebp*4]
  41e53c:	or     eax,DWORD PTR [esi-0x62]
  41e53f:	aas    
  41e540:	mov    esi,0x7b2d33d
  41e545:	mov    ds:0x8a0653d0,al
  41e54a:	xchg   edi,eax
  41e54b:	imul   DWORD PTR [ebx]
  41e54d:	mov    ebx,0x1b506265
  41e552:	call   0x63853c3b
  41e557:	retf   0xc8cc
  41e55a:	mov    dh,0xc0
  41e55c:	jg     0x41e5db
  41e55e:	mov    al,0xc3
  41e560:	out    dx,al
  41e561:	lds    ebx,FWORD PTR [ebp+ecx*2+0x79a8e84a]
  41e568:	add    al,0x8e
  41e56a:	and    BYTE PTR [edi-0x56],bh
  41e56d:	loope  0x41e535
  41e56f:	fcmovnbe st,st(4)
  41e571:	outs   dx,DWORD PTR ds:[esi]
  41e572:	fs add bh,ch
  41e575:	test   edx,eax
  41e577:	pop    ds
  41e578:	repnz dec eax
  41e57a:	(bad)  
  41e57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e57c:	inc    esi
  41e57d:	inc    edi
  41e57e:	cmc    
  41e57f:	aas    
  41e580:	jnp    0x41e52b
  41e582:	ss mov ah,0xbd
  41e585:	sub    bl,BYTE PTR es:[esi]
  41e588:	jge    0x41e5ae
  41e58a:	imul   edi
  41e58c:	and    ebp,DWORD PTR [edi-0x74]
  41e58f:	popf   
  41e590:	enter  0x1e47,0x56
  41e594:	mov    bh,0x5c
  41e596:	add    DWORD PTR [edi],0xffffffdc
  41e599:	fcom   st(7)
  41e59b:	arpl   bx,bp
  41e59d:	jns    0x41e5a7
  41e59f:	adc    eax,0x9f7aecbf
  41e5a4:	mul    DWORD PTR [eax+0x64]
  41e5a7:	push   esi
  41e5a8:	aad    0x46
  41e5aa:	(bad)  
  41e5ab:	and    ch,BYTE PTR [ebp-0x6a]
  41e5ae:	mov    eax,0x808bebaa
  41e5b3:	jl     0x41e58c
  41e5b5:	dec    ecx
  41e5b6:	mov    ebx,0xc935b44c
  41e5bb:	dec    ah
  41e5bd:	add    ebx,esi
  41e5bf:	je     0x41e592
  41e5c1:	rcr    DWORD PTR [ecx-0x6d58d194],0xfe
  41e5c8:	faddp  st(7),st
  41e5ca:	jmp    0xefa38b83
  41e5cf:	out    dx,eax
  41e5d0:	(bad)  
  41e5d2:	fdivr  DWORD PTR [ebp-0x25c60753]
  41e5d8:	sahf   
  41e5d9:	inc    edi
  41e5da:	repnz adc edx,DWORD PTR [eax]
  41e5dd:	arpl   WORD PTR [eax+ebp*8],ax
  41e5e0:	mov    bl,0xe4
  41e5e2:	es jae 0x41e5af
  41e5e5:	and    BYTE PTR [eax+0x1b],bh
  41e5e8:	xchg   ecx,eax
  41e5e9:	sahf   
  41e5ea:	in     al,0x9e
  41e5ec:	and    DWORD PTR [ebp+0x44],0x43
  41e5f0:	ret    0x9fc2
  41e5f3:	test   al,0x6f
  41e5f5:	rcl    DWORD PTR [ebx],1
  41e5f7:	mov    ?,ecx
  41e5f9:	mov    ch,0x39
  41e5fb:	xlat   BYTE PTR ds:[ebx]
  41e5fc:	adc    eax,0x64957ad3
  41e601:	xchg   edx,eax
  41e602:	or     edi,DWORD PTR [ebp-0x13]
  41e605:	es dec edi
  41e607:	jle    0x41e5a7
  41e609:	or     al,0x89
  41e60b:	popf   
  41e60c:	or     ebx,esi
  41e60e:	aas    
  41e60f:	inc    DWORD PTR [ebx+edi*8]
  41e612:	adc    eax,0x3b13417f
  41e617:	lods   al,BYTE PTR ds:[esi]
  41e618:	stos   BYTE PTR es:[edi],al
  41e619:	adc    DWORD PTR [esi+ebp*4],eax
  41e61c:	sbb    eax,0xc9b37ee5
  41e621:	jae    0x41e5c5
  41e623:	mov    ds:0x131695a1,al
  41e628:	je     0x41e603
  41e62a:	and    al,0x90
  41e62c:	push   ds
  41e62d:	xor    DWORD PTR [edx+0x19],ecx
  41e630:	push   ebp
  41e631:	call   0xda16ffc0
  41e636:	les    ebp,FWORD PTR [esi+0x1e]
  41e639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e63b:	call   0x9392:0x5677f2cb
  41e642:	add    BYTE PTR [ecx],cl
  41e644:	cmp    DWORD PTR [ebx+ebp*8],eax
  41e647:	imul   ebx,DWORD PTR [ebx-0x29dd481b],0x6004e755
  41e651:	ret    
  41e652:	add    edi,DWORD PTR [eax]
  41e654:	popf   
  41e655:	xchg   ebp,eax
  41e656:	sar    BYTE PTR [esi+0x190d8f8c],cl
  41e65c:	jb     0x41e6d7
  41e65e:	jmp    0xd3cb248
  41e663:	cli    
  41e664:	das    
  41e665:	xor    eax,0xb7e6d390
  41e66a:	mov    DWORD PTR [esi+0x5d],ecx
  41e66d:	ret    0xe26f
  41e670:	arpl   WORD PTR [edx-0x4b],bx
  41e673:	popf   
  41e674:	mov    bl,0xf5
  41e676:	push   esi
  41e677:	ror    BYTE PTR [esi],cl
  41e679:	pop    esp
  41e67a:	call   0xfd417e58
  41e67f:	mov    eax,ds:0x33b37df7
  41e684:	stos   DWORD PTR es:[edi],eax
  41e685:	sbb    BYTE PTR [esi-0x27],cl
  41e688:	dec    ebp
  41e689:	pop    esi
  41e68a:	cs cmp al,0x19
  41e68d:	jecxz  0x41e6b5
  41e68f:	jmp    0x452eed2c
  41e694:	loop   0x41e6fb
  41e696:	xchg   edx,ecx
  41e698:	mov    edx,0x2c53e017
  41e69d:	test   BYTE PTR [esp+eiz*2-0x5e],cl
  41e6a1:	mov    esi,0xf48fc64e
  41e6a6:	mov    ?,WORD PTR [ebp+esi*1-0xb]
  41e6aa:	xor    DWORD PTR [eax],edx
  41e6ac:	dec    ebx
  41e6ad:	gs inc esp
  41e6af:	adc    al,0x3b
  41e6b1:	in     al,dx
  41e6b2:	push   eax
  41e6b3:	jae    0x41e709
  41e6b5:	ja     0x41e646
  41e6b7:	and    DWORD PTR [eax-0x31],ebp
  41e6ba:	fs mov ch,0x8
  41e6bd:	loope  0x41e64e
  41e6bf:	js     0x41e6c0
  41e6c1:	pop    esp
  41e6c2:	and    al,0x5b
  41e6c4:	fst    QWORD PTR [ecx+0x36]
  41e6c7:	pop    edi
  41e6c8:	xor    eax,0xda796aae
  41e6cd:	xor    ebx,ecx
  41e6cf:	sbb    BYTE PTR [ecx],dl
  41e6d1:	jp     0x41e709
  41e6d3:	call   0x35a0893
  41e6d8:	jg     0x41e71a
  41e6da:	imul   edx,DWORD PTR [edi+0x10],0x6c7b8ad3
  41e6e1:	ret    
  41e6e2:	arpl   WORD PTR [ebp-0x30],cx
  41e6e5:	sbb    DWORD PTR [edx],edi
  41e6e7:	jmp    0x3eb11ec
  41e6ec:	sbb    al,0x52
  41e6ee:	jle    0x41e6f3
  41e6f0:	cli    
  41e6f1:	out    dx,al
  41e6f2:	(bad)  
  41e6f3:	sbb    eax,0x4cae7ec6
  41e6f8:	(bad)  [eax-0x22]
  41e6fb:	jbe    0x41e772
  41e6fd:	lds    ebx,FWORD PTR [ecx+0x50]
  41e700:	lock dec edi
  41e702:	in     eax,dx
  41e703:	test   al,0x39
  41e705:	mov    BYTE PTR [edx-0xf],dh
  41e708:	mov    ebx,esi
  41e70a:	pop    ds
  41e70b:	dec    eax
  41e70c:	jne    0x41e74a
  41e70e:	push   ss
  41e70f:	jno    0x41e788
  41e711:	mov    ebx,0xc946352b
  41e716:	pop    es
  41e717:	fnsave [eax]
  41e719:	and    BYTE PTR [edi-0x7b],0x5f
  41e71d:	xor    DWORD PTR [ebx+0x705b0b18],0x84eae39d
  41e727:	popf   
  41e728:	adc    edx,esi
  41e72a:	std    
  41e72b:	cmc    
  41e72c:	fidivr DWORD PTR [ecx-0x476a30b8]
  41e732:	sbb    eax,0x6b836ce
  41e737:	les    edi,FWORD PTR [ebx-0x9996bda]
  41e73d:	fstp   st(5)
  41e73f:	add    BYTE PTR [edx],dh
  41e741:	into   
  41e742:	jecxz  0x41e782
  41e744:	mov    edi,0x60037e2
  41e749:	(bad)  
  41e74a:	(bad)  
  41e74b:	fmul   st(6),st
  41e74d:	or     bh,BYTE PTR [ebx-0x56]
  41e750:	out    dx,eax
  41e751:	or     BYTE PTR [eax-0x24fce9db],al
  41e757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e758:	mov    bl,BYTE PTR [ecx+0x77]
  41e75b:	lods   al,BYTE PTR ds:[esi]
  41e75c:	and    esp,eax
  41e75e:	push   ebp
  41e75f:	iret   
  41e760:	inc    edi
  41e761:	push   edi
  41e762:	icebp  
  41e763:	scas   al,BYTE PTR es:[edi]
  41e764:	and    eax,DWORD PTR [edx+ebp*1+0x74]
  41e768:	xor    DWORD PTR [ebx-0x57],0x747b164
  41e76f:	mov    edi,0x9129ff7f
  41e774:	std    
  41e775:	or     ah,0x9a
  41e778:	cmp    DWORD PTR [esi],ebx
  41e77a:	cwde   
  41e77b:	leave  
  41e77c:	and    ebp,edi
  41e77e:	test   BYTE PTR [ecx],0x14
  41e781:	push   eax
  41e782:	fld    QWORD PTR [edi+0x5]
  41e785:	sub    DWORD PTR [ecx-0x11],0x80bd11ec
  41e78c:	fadd   DWORD PTR [eax-0x49b372bf]
  41e792:	push   ds
  41e793:	mov    al,0x9d
  41e795:	mov    edx,ebp
  41e797:	sbb    BYTE PTR [ebx],dh
  41e799:	in     al,0x53
  41e79b:	ret    
  41e79c:	pop    ebx
  41e79d:	test   eax,0xabd04900
  41e7a2:	sub    DWORD PTR [edx-0x764aaaf4],ebp
  41e7a8:	call   0xcff37d74
  41e7ad:	or     al,0xd7
  41e7af:	cmp    al,0x60
  41e7b1:	jg     0x41e7dc
  41e7b3:	fmul   DWORD PTR [ebx]
  41e7b5:	pop    esi
  41e7b6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e7b8:	dec    edx
  41e7b9:	xor    BYTE PTR [edx-0x6d],al
  41e7bc:	lods   al,BYTE PTR ds:[esi]
  41e7bd:	sbb    al,BYTE PTR [edi-0x66]
  41e7c0:	mov    al,0xf9
  41e7c2:	fwait
  41e7c3:	xchg   dh,al
  41e7c5:	into   
  41e7c6:	xchg   esi,eax
  41e7c7:	and    BYTE PTR [ecx-0x35d34b27],0x53
  41e7ce:	xchg   ebx,eax
  41e7cf:	test   BYTE PTR [ecx-0x3a3bacf9],dh
  41e7d5:	xchg   ebp,eax
  41e7d6:	mov    ch,0x7b
  41e7d8:	inc    edx
  41e7d9:	loope  0x41e84e
  41e7db:	dec    esp
  41e7dc:	xor    ebp,DWORD PTR [ebp-0x7d]
  41e7df:	retf   
  41e7e0:	jno    0x41e82a
  41e7e2:	(bad)  
  41e7e3:	pop    ebx
  41e7e4:	lds    ebx,FWORD PTR [esi]
  41e7e6:	sub    al,0xaf
  41e7e8:	xor    eax,0x3722399e
  41e7ed:	sub    ah,BYTE PTR [eax+0x1b]
  41e7f0:	xchg   ebx,eax
  41e7f1:	aaa    
  41e7f2:	pop    esi
  41e7f3:	fwait
  41e7f4:	aaa    
  41e7f5:	es xchg edx,eax
  41e7f7:	cli    
  41e7f8:	jl     0x41e7c1
  41e7fa:	mov    ebx,0x88734175
  41e7ff:	sbb    ebx,DWORD PTR [edx-0x3e6071b1]
  41e805:	rcr    BYTE PTR es:[edi-0x13],1
  41e809:	ds cmp eax,0xe49a956a
  41e80f:	dec    esi
  41e810:	lods   eax,DWORD PTR ds:[esi]
  41e811:	out    0xdc,al
  41e813:	xor    al,al
  41e815:	mov    ebx,cs
  41e817:	mov    cl,0xa5
  41e819:	aaa    
  41e81a:	mul    BYTE PTR [ecx]
  41e81c:	sub    BYTE PTR [ebp+0x5d44a10a],dh
  41e822:	push   ecx
  41e823:	add    bh,BYTE PTR [ebx+0x54]
  41e826:	inc    esp
  41e827:	repnz adc al,0x15
  41e82a:	push   0xd9e2150d
  41e82f:	popf   
  41e830:	mov    bl,0xbd
  41e832:	aam    0x7d
  41e834:	dec    ebx
  41e835:	popa   
  41e836:	cmp    ebx,esp
  41e838:	adc    dl,BYTE PTR ds:[edx]
  41e83b:	cmp    BYTE PTR [eax+0x71],bl
  41e83e:	rol    ah,1
  41e840:	adc    esp,DWORD PTR [ebp+0x3b]
  41e843:	or     eax,0xd33cab53
  41e848:	push   esi
  41e849:	lahf   
  41e84a:	pop    ebx
  41e84b:	cmp    ch,cl
  41e84d:	in     al,0x79
  41e84f:	ret    0x2db
  41e852:	sbb    BYTE PTR [ebp-0x44c8be10],ah
  41e858:	and    DWORD PTR [ebx-0x1d2452b2],ebx
  41e85e:	loop   0x41e871
  41e860:	xchg   ecx,eax
  41e861:	pop    ds
  41e862:	ds scas eax,DWORD PTR es:[edi]
  41e864:	xchg   DWORD PTR [eax],ecx
  41e866:	lods   al,BYTE PTR ds:[esi]
  41e867:	hlt    
  41e868:	stc    
  41e869:	and    BYTE PTR [ecx-0x6930b830],dl
  41e86f:	mov    bh,0x93
  41e871:	and    esi,DWORD PTR [ecx-0x4c]
  41e874:	js     0x41e8d8
  41e876:	imul   esi,DWORD PTR [ecx],0xffffffde
  41e879:	fdivp  st(0),st
  41e87b:	nop
  41e87c:	mov    ds:0x99915fd,eax
  41e881:	cmc    
  41e882:	loopne 0x41e88f
  41e884:	add    esi,DWORD PTR [eax+eax*2]
  41e887:	jg     0x41e8a4
  41e889:	xchg   edi,eax
  41e88a:	xchg   ebx,eax
  41e88b:	jns    0x41e883
  41e88d:	leave  
  41e88e:	int3   
  41e88f:	lahf   
  41e890:	push   eax
  41e891:	xor    al,0xa0
  41e893:	fbld   TBYTE PTR [eax-0x713a7353]
  41e899:	sar    esp,cl
  41e89b:	(bad)  
  41e89c:	(bad)  
  41e89d:	imul   DWORD PTR [eax+0x68]
  41e8a0:	mov    ds:0x5cc1d112,al
  41e8a5:	clc    
  41e8a6:	push   esi
  41e8a7:	push   ds
  41e8a8:	pop    ecx
  41e8a9:	test   eax,0x257dc3c9
  41e8ae:	sub    eax,0x72a6aeee
  41e8b3:	repnz imul ebp,DWORD PTR [esi],0x22
  41e8b7:	push   esp
  41e8b8:	lahf   
  41e8b9:	mov    dl,0xa1
  41e8bb:	ror    DWORD PTR [edx],0xbe
  41e8be:	dec    esp
  41e8bf:	icebp  
  41e8c0:	lds    ecx,FWORD PTR [edi]
  41e8c2:	xchg   ecx,eax
  41e8c3:	adc    BYTE PTR [eax+0x17],al
  41e8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8c7:	push   ss
  41e8c8:	std    
  41e8c9:	aaa    
  41e8ca:	cli    
  41e8cb:	pop    es
  41e8cc:	jmp    0x9b4a:0x1ef79831
  41e8d3:	mov    ah,0xaa
  41e8d5:	jg     0x41e8c4
  41e8d7:	jmp    0x4d6d:0x874b8995
  41e8de:	scas   al,BYTE PTR es:[edi]
  41e8df:	sti    
  41e8e0:	fwait
  41e8e1:	dec    ebx
  41e8e2:	rcr    DWORD PTR [edi-0xc],cl
  41e8e5:	mov    ds:0x418d1ade,al
  41e8ea:	daa    
  41e8eb:	and    edi,DWORD PTR [ecx-0x19]
  41e8ee:	int    0xbd
  41e8f0:	iret   
  41e8f1:	push   eax
  41e8f2:	and    al,0xe0
  41e8f4:	mov    ds:0xac9fe0ca,eax
  41e8f9:	inc    eax
  41e8fa:	out    0x68,al
  41e8fc:	test   BYTE PTR [ebp+0x7],0xb2
  41e900:	sti    
  41e901:	arpl   bp,ax
  41e903:	dec    esi
  41e904:	(bad)  
  41e906:	in     al,0xfa
  41e908:	push   ss
  41e909:	lahf   
  41e90a:	xchg   ebx,eax
  41e90b:	mov    dl,0x4e
  41e90d:	cmc    
  41e90e:	mov    BYTE PTR [edx],bh
  41e910:	cmp    DWORD PTR [ebp+ebx*2+0x5d33c06f],edx
  41e917:	pop    ebx
  41e918:	sub    al,dh
  41e91a:	je     0x41e909
  41e91c:	xor    ebp,0x71
  41e91f:	fisubr WORD PTR [edx-0x2cbef8bd]
  41e925:	adc    eax,0xbfc0f26c
  41e92a:	dec    ecx
  41e92b:	(bad)  
  41e92c:	std    
  41e92d:	fmul   DWORD PTR [edi+0x2bcd5658]
  41e933:	lods   eax,DWORD PTR ds:[esi]
  41e934:	or     esi,DWORD PTR [eax+edi*8+0x2e]
  41e938:	in     eax,0x79
  41e93a:	loope  0x41e9b4
  41e93c:	xchg   esp,eax
  41e93d:	or     esi,DWORD PTR [edi]
  41e93f:	mov    ch,0x49
  41e941:	mov    ecx,0x887bce1e
  41e946:	pop    esi
  41e947:	jb     0x41e958
  41e949:	pop    esi
  41e94a:	cmp    ebx,edi
  41e94c:	or     esi,esp
  41e94e:	cmp    dl,BYTE PTR [edi+0x54]
  41e951:	mov    BYTE PTR [eax+0x60],ch
  41e954:	pusha  
  41e955:	xor    dl,bh
  41e957:	sub    BYTE PTR ds:0xf3be63ff,bh
  41e95d:	aam    0x51
  41e95f:	(bad)  
  41e960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e961:	rcpps  xmm5,XMMWORD PTR [edx]
  41e964:	fnstcw WORD PTR [edx-0x7bde1a35]
  41e96a:	pop    eax
  41e96b:	mov    ds:0x2434606d,al
  41e970:	inc    edi
  41e971:	clc    
  41e972:	mov    esi,0x522a8274
  41e977:	cs fwait
  41e979:	pop    ebp
  41e97a:	std    
  41e97b:	mov    DWORD PTR [ebx],ebp
  41e97d:	js     0x41e95c
  41e97f:	pop    edi
  41e980:	xchg   edi,eax
  41e981:	mov    bl,0x60
  41e983:	pop    esi
  41e984:	mov    ds:0x79f4628e,eax
  41e989:	inc    esp
  41e98a:	or     edx,edi
  41e98c:	push   edx
  41e98d:	mov    ebp,DWORD PTR [ecx]
  41e98f:	mov    DWORD PTR [esi],ebp
  41e991:	ror    BYTE PTR [edi+0x41f031ae],cl
  41e997:	dec    eax
  41e998:	pop    ecx
  41e999:	mov    esp,0xba9ff837
  41e99e:	(bad)  
  41e99f:	leave  
  41e9a0:	pop    ss
  41e9a1:	dec    eax
  41e9a2:	loop   0x41e98d
  41e9a4:	sub    al,0x3e
  41e9a6:	in     eax,0xae
  41e9a8:	mov    esp,0x5a1e8c4
  41e9ad:	std    
  41e9ae:	popf   
  41e9af:	addr16 xor eax,0x8a3f8146
  41e9b5:	fsub   DWORD PTR [eax+0x64]
  41e9b8:	mov    esp,0xc1b21e5e
  41e9bd:	xor    eax,0xd181c4c0
  41e9c2:	add    BYTE PTR [edi-0x694a3adc],dl
  41e9c8:	or     eax,0xc38cb198
  41e9cd:	ja     0x41e9b0
  41e9cf:	dec    ebx
  41e9d0:	mov    bh,0x3a
  41e9d2:	das    
  41e9d3:	es iret 
  41e9d5:	or     DWORD PTR [ecx+eax*1-0x5b],ecx
  41e9d9:	loope  0x41e993
  41e9db:	jnp    0x41ea4f
  41e9dd:	sar    BYTE PTR [ecx],cl
  41e9df:	data16 xlat BYTE PTR ds:[ebx]
  41e9e1:	cwde   
  41e9e2:	cli    
  41e9e3:	fsubp  st(5),st
  41e9e5:	daa    
  41e9e6:	in     al,0xc2
  41e9e8:	rcl    dh,1
  41e9ea:	adc    cl,dl
  41e9ec:	pop    eax
  41e9ed:	out    dx,al
  41e9ee:	inc    ecx
  41e9ef:	add    eax,0xa6c44024
  41e9f4:	out    0x9f,al
  41e9f6:	sbb    dl,BYTE PTR [esi]
  41e9f8:	xor    bl,dh
  41e9fa:	xor    eax,0xbcb55c43
  41e9ff:	imul   ebp,DWORD PTR [edi-0x65],0x58
  41ea03:	add    BYTE PTR [eax-0x32],dl
  41ea06:	jns    0x41e9a9
  41ea08:	jp     0x41ea85
  41ea0a:	push   edx
  41ea0b:	aad    0x8
  41ea0d:	retf   0x6a7f
  41ea10:	push   eax
  41ea11:	(bad)  
  41ea12:	dec    ecx
  41ea13:	sti    
  41ea14:	xor    dh,BYTE PTR [edi-0x10]
  41ea17:	or     BYTE PTR [ecx+edi*2-0x31],bh
  41ea1b:	adc    al,0x28
  41ea1d:	mov    cs,WORD PTR [edi-0x746afd1f]
  41ea23:	clc    
  41ea24:	loope  0x41e9f7
  41ea26:	dec    esi
  41ea27:	test   BYTE PTR [ebx],0xbf
  41ea2a:	push   eax
  41ea2b:	xchg   BYTE PTR [ebp-0x10],dh
  41ea2e:	ss jbe 0x41ea84
  41ea31:	mov    ss,WORD PTR [edx-0x40]
  41ea34:	daa    
  41ea35:	bound  edx,QWORD PTR [eax+0x2bce13a4]
  41ea3b:	pop    edx
  41ea3c:	mov    bh,0x4
  41ea3e:	xchg   ebp,eax
  41ea3f:	push   edi
  41ea40:	inc    edi
  41ea41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea42:	sti    
  41ea43:	(bad)  
  41ea44:	lock sti 
  41ea46:	adc    dl,BYTE PTR [ecx+0x567688bb]
  41ea4c:	cmp    eax,0x7eff5cf4
  41ea51:	pop    edi
  41ea52:	arpl   WORD PTR [edi],cx
  41ea54:	and    esi,DWORD PTR ds:0x71ec930a
  41ea5a:	outs   dx,BYTE PTR ds:[esi]
  41ea5b:	dec    ebp
  41ea5c:	sbb    eax,0x9c85da1c
  41ea61:	push   0xdcb09b54
  41ea66:	cmp    DWORD PTR ds:0x1a24fa8f,0xffffffa5
  41ea6d:	repnz push ebx
  41ea6f:	xchg   ebx,eax
  41ea70:	inc    edi
  41ea71:	push   eax
  41ea72:	xchg   DWORD PTR [ecx],esp
  41ea74:	mul    eax
  41ea76:	xor    dh,BYTE PTR [edx]
  41ea78:	lods   eax,DWORD PTR ds:[esi]
  41ea79:	or     ecx,DWORD PTR ds:[ebp-0x2e2d1415]
  41ea80:	mov    eax,ds:0x8c72e700
  41ea85:	mov    ds,ebx
  41ea87:	cs call 0x8b2b:0xf67e3ef7
  41ea8f:	mov    ds:0x425f4fcc,eax
  41ea94:	or     al,0x55
  41ea96:	mov    ecx,0x2f340d46
  41ea9b:	sbb    ah,ah
  41ea9d:	adc    BYTE PTR [ebx-0x54],dl
  41eaa0:	inc    esi
  41eaa1:	push   ss
  41eaa2:	dec    eax
  41eaa3:	lahf   
  41eaa4:	jmp    0x1b48b88d
  41eaa9:	xchg   edx,eax
  41eaaa:	and    al,BYTE PTR [ebp-0x6d]
  41eaad:	dec    dl
  41eaaf:	jp     0x41eaad
  41eab1:	jmp    0x41ea95
  41eab3:	mov    ecx,0xde456a23
  41eab8:	xchg   ecx,eax
  41eab9:	sbb    DWORD PTR [edi],0xcb2b7641
  41eabf:	scas   eax,DWORD PTR es:[edi]
  41eac0:	push   cs
  41eac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac2:	cli    
  41eac3:	int3   
  41eac4:	dec    ecx
  41eac5:	xor    BYTE PTR [edx+0x102fe6f6],ah
  41eacb:	jg     0x41eaec
  41eacd:	ins    BYTE PTR es:[edi],dx
  41eace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eacf:	xor    bh,BYTE PTR [eax]
  41ead1:	enter  0x11a1,0xe0
  41ead5:	lea    ebx,[edi+0x65]
  41ead8:	jne    0x41eb10
  41eada:	addr16 aaa 
  41eadc:	mov    ds:0x2ac5607a,al
  41eae1:	hlt    
  41eae2:	(bad)  
  41eae3:	jp     0x41eaa2
  41eae5:	test   dl,dl
  41eae7:	aaa    
  41eae8:	mov    ah,0xf0
  41eaea:	repz int 0x6a
  41eaed:	nop
  41eaee:	or     ebp,DWORD PTR [esi]
  41eaf0:	loope  0x41eb66
  41eaf2:	adc    ebx,DWORD PTR [ecx+0x1a]
  41eaf5:	retf   0x2bc9
  41eaf8:	jae    0x41ea85
  41eafa:	xor    DWORD PTR fs:[edi],ecx
  41eafd:	sahf   
  41eafe:	ror    BYTE PTR [ebp-0x23],cl
  41eb01:	jae    0x41eb2d
  41eb03:	or     DWORD PTR [edi],ebp
  41eb05:	pop    ebp
  41eb06:	ss or  eax,0xc655b583
  41eb0c:	outs   dx,BYTE PTR ds:[esi]
  41eb0d:	sub    BYTE PTR [edx],dh
  41eb0f:	cvtpi2ps xmm6,QWORD PTR [eax]
  41eb12:	ret    
  41eb13:	push   cs
  41eb14:	je     0x41eb14
  41eb16:	(bad)  
  41eb18:	scas   eax,DWORD PTR es:[edi]
  41eb19:	pop    esp
  41eb1a:	packuswb mm3,QWORD PTR [ecx]
  41eb1d:	or     eax,0xf4db4069
  41eb22:	sti    
  41eb23:	mov    esi,0x4ab29f2
  41eb28:	add    ecx,eax
  41eb2a:	test   ebx,0x6571a81
  41eb30:	shr    BYTE PTR [esp+edi*8-0x381a27b0],cl
  41eb37:	call   0x2b27:0xe0a1640e
  41eb3e:	(bad)  
  41eb40:	mov    ecx,eax
  41eb42:	cmp    BYTE PTR ds:[edi-0x4424810],dh
  41eb49:	cld    
  41eb4a:	push   ebp
  41eb4b:	cmp    cl,0x0
  41eb4e:	dec    ecx
  41eb4f:	mov    edx,0x4cb14e7
  41eb54:	jg     0x41eb9e
  41eb56:	sahf   
  41eb57:	xor    BYTE PTR [ebx-0x76],dl
  41eb5a:	xchg   ebx,eax
  41eb5b:	mov    ebx,0x1f4cd34d
  41eb60:	stos   BYTE PTR es:[edi],al
  41eb61:	inc    esp
  41eb62:	sbb    al,0x73
  41eb64:	push   ss
  41eb65:	aas    
  41eb66:	mov    ch,0x50
  41eb68:	jae    0x41eb60
  41eb6a:	pop    edi
  41eb6b:	call   0x7322:0xb7c40b5e
  41eb72:	push   eax
  41eb73:	mov    ecx,0x66338ea0
  41eb78:	mov    esi,0xe2cbcba4
  41eb7d:	sbb    esp,DWORD PTR [edi+0x31]
  41eb80:	stos   BYTE PTR es:[edi],al
  41eb81:	in     al,0xf8
  41eb83:	mov    cl,0xca
  41eb85:	ja     0x41eb10
  41eb87:	popf   
  41eb88:	mov    ch,0xb9
  41eb8a:	push   ds
  41eb8b:	push   ecx
  41eb8c:	pop    ebp
  41eb8d:	dec    ebx
  41eb8e:	pop    edi
  41eb8f:	jmp    0x74e8:0x1d4a7841
  41eb96:	or     ch,BYTE PTR [edi+0x706b1403]
  41eb9c:	xor    al,0x3e
  41eb9e:	lock mov eax,0x2b8dc383
  41eba4:	and    eax,0x5fb752dc
  41eba9:	lahf   
  41ebaa:	push   ebp
  41ebab:	pop    edx
  41ebac:	(bad)  
  41ebad:	sahf   
  41ebae:	hlt    
  41ebaf:	lea    eax,[ebp-0x31efd531]
  41ebb5:	mov    ebp,0x37d614a
  41ebba:	mov    edi,0xb9b51867
  41ebbf:	jmp    0x41ec15
  41ebc1:	pop    ss
  41ebc2:	dec    edi
  41ebc3:	and    DWORD PTR [esi-0x6f],ecx
  41ebc6:	mov    eax,ds:0x457132cc
  41ebcb:	mov    dh,0xac
  41ebcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebce:	scas   al,BYTE PTR es:[edi]
  41ebcf:	shl    bh,1
  41ebd1:	mov    bh,0x14
  41ebd3:	or     ah,ch
  41ebd5:	mov    edi,0x123ccbb1
  41ebda:	push   eax
  41ebdb:	jae    0x41eb72
  41ebdd:	cmp    ecx,edx
  41ebdf:	retf   
  41ebe0:	mov    eax,0xd55033f1
  41ebe5:	outs   dx,DWORD PTR ds:[esi]
  41ebe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe7:	bsr    esi,DWORD PTR [eax]
  41ebea:	push   esp
  41ebeb:	adc    eax,0x713932bd
  41ebf0:	cmp    eax,0xa4208d16
  41ebf5:	arpl   bp,cx
  41ebf7:	mov    eax,0x2b8d5ae7
  41ebfc:	push   edx
  41ebfd:	mov    ds,esp
  41ebff:	push   ebx
  41ec00:	push   ss
  41ec01:	loope  0x41ec82
  41ec03:	add    eax,0x7450f065
  41ec08:	call   0xb946d46a
  41ec0d:	or     edx,DWORD PTR [ecx-0x2]
  41ec10:	imul   edi,DWORD PTR [eax+0x40a8573b],0x96c6620f
  41ec1a:	xor    DWORD PTR [esi+0x466fa7a2],edx
  41ec20:	xor    eax,0xe73a159a
  41ec25:	das    
  41ec26:	pop    edi
  41ec27:	addr16 push es
  41ec29:	aaa    
  41ec2a:	dec    esp
  41ec2b:	cmp    al,0x8d
  41ec2d:	dec    esp
  41ec2e:	dec    ebp
  41ec2f:	in     eax,dx
  41ec30:	push   eax
  41ec31:	xor    BYTE PTR [esi+0x5c],bh
  41ec34:	out    dx,eax
  41ec35:	hlt    
  41ec36:	mov    bh,0x47
  41ec38:	mov    ch,0x55
  41ec3a:	test   DWORD PTR [eax+ebp*8-0x1a],ebx
  41ec3e:	adc    esp,DWORD PTR [ebx+0x5a]
  41ec41:	outs   dx,BYTE PTR ds:[esi]
  41ec42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec43:	ins    DWORD PTR es:[edi],dx
  41ec44:	(bad)
  41ec47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec48:	mov    eax,0x47f0b1c2
  41ec4d:	xchg   ecx,eax
  41ec4e:	es gs loop 0x41ec00
  41ec52:	nop
  41ec53:	popf   
  41ec54:	arpl   WORD PTR [eax+0x4214263b],ax
  41ec5a:	lea    ebp,[edi-0x1f]
  41ec5d:	push   ss
  41ec5e:	dec    esi
  41ec5f:	sti    
  41ec60:	push   0xffffffbd
  41ec62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec63:	loop   0x41ec30
  41ec65:	or     al,0x15
  41ec67:	(bad)  
  41ec68:	out    dx,al
  41ec69:	punpckhwd mm5,QWORD PTR [edx]
  41ec6c:	dec    ecx
  41ec6d:	fadd   DWORD PTR [esp+esi*1]
  41ec70:	fst    st(0)
  41ec72:	mov    edi,0x728f916d
  41ec77:	dec    eax
  41ec78:	ds loope 0x41ec40
  41ec7b:	outs   dx,BYTE PTR ds:[esi]
  41ec7c:	jbe    0x41ece1
  41ec7e:	repz xor al,0x25
  41ec81:	std    
  41ec82:	in     al,0x97
  41ec84:	sub    al,0x8f
  41ec86:	or     al,ah
  41ec88:	(bad)  
  41ec89:	jg     0x41ec7e
  41ec8b:	sbb    edx,DWORD PTR [ebx-0x56]
  41ec8e:	repz sbb ch,cl
  41ec91:	cmc    
  41ec92:	pop    ebx
  41ec93:	jno    0x41ed08
  41ec95:	shl    BYTE PTR [esi],cl
  41ec97:	mov    dl,BYTE PTR [edx-0x80]
  41ec9a:	loope  0x41ec33
  41ec9c:	mov    al,0x9f
  41ec9e:	or     BYTE PTR [edi+eax*2-0x69],dh
  41eca2:	dec    ebp
  41eca3:	cmc    
  41eca4:	pop    ecx
  41eca5:	dec    edx
  41eca6:	dec    eax
  41eca7:	push   edi
  41eca8:	addr16 and al,0x58
  41ecab:	cwde   
  41ecac:	les    ebp,FWORD PTR [eax-0x5f]
  41ecaf:	fild   WORD PTR [edx+0x0]
  41ecb2:	mov    dl,0x85
  41ecb4:	ja     0x41ec4e
  41ecb6:	pop    eax
  41ecb7:	sbb    BYTE PTR [ebp-0x25],cl
  41ecba:	push   eax
  41ecbb:	(bad)  
  41ecbc:	sbb    BYTE PTR [ebp+0x1669417],cl
  41ecc2:	pop    esi
  41ecc3:	mov    bl,0x72
  41ecc5:	ss popf 
  41ecc7:	imul   edx,esi,0xffffffde
  41ecca:	mov    dl,0xda
  41eccc:	adc    esp,edx
  41ecce:	mov    edx,0xcef57d9b
  41ecd3:	pop    ds
  41ecd4:	jb     0x41ed41
  41ecd6:	pop    ebx
  41ecd7:	dec    ebx
  41ecd8:	cdq    
  41ecd9:	jecxz  0x41ecda
  41ecdb:	retf   
  41ecdc:	std    
  41ecdd:	test   BYTE PTR [ecx+0x7d],cl
  41ece0:	ficom  DWORD PTR [edi+0x623270f4]
  41ece6:	and    eax,0x9fc4636a
  41eceb:	mov    ah,BYTE PTR [ecx]
  41eced:	mov    cl,BYTE PTR [edi]
  41ecef:	aam    0x2
  41ecf1:	jle    0x41ed63
  41ecf3:	xor    BYTE PTR [eax+0x64],ah
  41ecf6:	in     al,0x1b
  41ecf8:	adc    dl,BYTE PTR [esi+ecx*4-0x1a00de81]
  41ecff:	mov    bl,BYTE PTR [ebp+0x1]
  41ed02:	lock push ss
  41ed04:	aas    
  41ed05:	mov    edi,0x15d15118
  41ed0a:	dec    eax
  41ed0b:	xchg   edx,eax
  41ed0c:	test   DWORD PTR [eax+ebx*2],edx
  41ed0f:	sar    BYTE PTR [eax+0x35],cl
  41ed12:	push   0x9112a161
  41ed17:	(bad)  
  41ed18:	lods   al,BYTE PTR ds:[esi]
  41ed19:	lods   al,BYTE PTR ds:[esi]
  41ed1a:	out    0x40,al
  41ed1c:	jnp    0x41ed88
  41ed1e:	shl    ecx,1
  41ed20:	clc    
  41ed21:	popa   
  41ed22:	pop    eax
  41ed23:	jle    0x41ed0a
  41ed25:	jno    0x41ed19
  41ed27:	dec    esp
  41ed28:	add    BYTE PTR [esi-0x76],bh
  41ed2b:	jecxz  0x41ed10
  41ed2d:	fs popa 
  41ed2f:	fsub   DWORD PTR [edx+0x19]
  41ed32:	mov    edx,DWORD PTR [eax+0x5d]
  41ed35:	test   eax,0x2c4fe2e8
  41ed3a:	lock mov DWORD PTR [ebp+0x52e45b5b],ebp
  41ed41:	sbb    eax,0x23d7861c
  41ed46:	nop
  41ed47:	cmc    
  41ed48:	jge    0x41edad
  41ed4a:	inc    ebp
  41ed4b:	cmp    eax,0x8dc8ffec
  41ed50:	cmp    al,0xb4
  41ed52:	rcr    ch,1
  41ed54:	mov    WORD PTR [eax+0x73288fb],gs
  41ed5a:	int    0x41
  41ed5c:	(bad)  
  41ed5d:	jb     0x41ed5e
  41ed5f:	stos   BYTE PTR es:[edi],al
  41ed60:	test   eax,0x77a53173
  41ed65:	mov    ds:0x610957b1,al
  41ed6a:	inc    ecx
  41ed6b:	adc    eax,0x11e14891
  41ed70:	pop    ebp
  41ed71:	in     al,0xfb
  41ed73:	push   ss
  41ed74:	addr16 iret 
  41ed76:	jecxz  0x41edd1
  41ed78:	mov    cl,0x50
  41ed7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed7b:	dec    esp
  41ed7c:	cmp    bl,BYTE PTR [eax*1+0x74f43499]
  41ed83:	test   al,0x14
  41ed85:	jge    0x41ed63
  41ed87:	mov    ebx,0x4498dafb
  41ed8c:	cmp    edx,DWORD PTR [ecx]
  41ed8e:	or     DWORD PTR [ecx+0x56466cc],ebx
  41ed94:	mov    ecx,cs
  41ed96:	std    
  41ed97:	ret    0x9183
  41ed9a:	(bad)  
  41ed9b:	and    dl,al
  41ed9d:	(bad)  
  41ed9e:	pop    esp
  41ed9f:	sahf   
  41eda0:	iret   
  41eda1:	ret    0xff8f
  41eda4:	and    DWORD PTR [esi+0x46381d80],esi
  41edaa:	mov    ebp,0x4cce9816
  41edaf:	add    esi,DWORD PTR ds:0x233ffca
  41edb5:	jecxz  0x41edb1
  41edb7:	cmp    bl,dl
  41edb9:	out    dx,al
  41edba:	pusha  
  41edbb:	je     0x233f6403
  41edc1:	pop    ss
  41edc2:	add    DWORD PTR [edi],edx
  41edc4:	leave  
  41edc5:	xchg   ebx,eax
  41edc6:	out    0x28,al
  41edc8:	aaa    
  41edc9:	fwait
  41edca:	rol    DWORD PTR [esi-0x6d],0xfd
  41edce:	dec    edi
  41edcf:	loop   0x41ee24
  41edd1:	mov    bh,0x82
  41edd3:	dec    ebp
  41edd4:	repz push 0x79
  41edd7:	mov    DWORD PTR [edx],esi
  41edd9:	retf   0x82b3
  41eddc:	fiadd  DWORD PTR ds:0xb80bb11a
  41ede2:	cmp    dl,BYTE PTR [esi+eiz*8]
  41ede5:	mov    edi,0x4f4e57ae
  41edea:	or     ebx,eax
  41edec:	loop   0x41ee11
  41edee:	sub    al,BYTE PTR [edx]
  41edf0:	inc    ebx
  41edf1:	into   
  41edf2:	(bad)  [edi+0x72]
  41edf5:	mov    WORD PTR [ebp+0x23492818],cs
  41edfb:	add    eax,0x90db01af
  41ee00:	push   cs
  41ee01:	jle    0x41ee29
  41ee03:	cwde   
  41ee04:	push   ebx
  41ee05:	mov    edi,0x61abc914
  41ee0a:	mov    ch,0xbe
  41ee0c:	mov    edx,esp
  41ee0e:	test   eax,0xf7f47ebd
  41ee13:	xor    bh,BYTE PTR [ebp+0xdeaee40]
  41ee19:	mov    ds:0x17a247c9,al
  41ee1e:	or     DWORD PTR [eax],edi
  41ee20:	inc    edx
  41ee21:	shr    BYTE PTR [edi],1
  41ee23:	inc    esi
  41ee24:	pop    edx
  41ee25:	arpl   dx,di
  41ee27:	out    0x22,al
  41ee29:	jecxz  0x41edb1
  41ee2b:	loop   0x41eddd
  41ee2d:	jge    0x41ee11
  41ee2f:	add    eax,0xafd05939
  41ee34:	mov    DWORD PTR [edi-0x7f972097],ebp
  41ee3a:	sub    eax,0xed34ea1f
  41ee3f:	xchg   edi,eax
  41ee40:	scas   al,BYTE PTR es:[edi]
  41ee41:	int3   
  41ee42:	int3   
  41ee43:	fld    TBYTE PTR [ebx]
  41ee45:	sbb    al,0x9c
  41ee47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee48:	jge    0x41edf5
  41ee4a:	scas   eax,DWORD PTR es:[edi]
  41ee4b:	mov    bl,0xf1
  41ee4d:	pop    es
  41ee4e:	inc    edx
  41ee4f:	sti    
  41ee50:	cmc    
  41ee51:	sub    al,0x5e
  41ee53:	inc    ebp
  41ee54:	mov    esp,0x866263e3
  41ee59:	and    BYTE PTR [edx],ah
  41ee5b:	add    ebp,ebx
  41ee5d:	(bad)  
  41ee5e:	xor    eax,0x61ca9ea3
  41ee63:	test   al,0xee
  41ee65:	push   edi
  41ee66:	js     0x41eeba
  41ee68:	mov    ebp,0xb910e091
  41ee6d:	xor    BYTE PTR ds:0x798387e0,ah
  41ee73:	(bad)  
  41ee74:	mov    eax,ds:0x3e581bcb
  41ee79:	sub    edx,DWORD PTR [eax+0x6c]
  41ee7c:	out    0xc,al
  41ee7e:	mov    edx,DWORD PTR [eax]
  41ee80:	rcr    BYTE PTR [ebp-0x69],cl
  41ee83:	jnp    0x41ee6a
  41ee85:	popf   
  41ee86:	jne    0x41ee66
  41ee88:	mov    edx,0x7aaa1119
  41ee8d:	mov    cl,BYTE PTR [edx+0x56]
  41ee90:	xor    bl,BYTE PTR [ecx]
  41ee92:	cmp    ecx,DWORD PTR [bp+si-0x64]
  41ee96:	scas   al,BYTE PTR es:[edi]
  41ee97:	(bad)  
  41ee99:	push   0xd869205d
  41ee9e:	daa    
  41ee9f:	(bad)  
  41eea0:	nop
  41eea1:	and    BYTE PTR [edi+0x5d6d1279],bl
  41eea7:	xor    al,0xf2
  41eea9:	(bad)  ds:0xd7810f6b
  41eeaf:	push   edx
  41eeb0:	sbb    al,0x51
  41eeb2:	ret    0x6682
  41eeb5:	xor    dl,al
  41eeb7:	imul   ebx,DWORD PTR [ebx+0x70],0xffffff96
  41eebb:	stc    
  41eebc:	adc    ecx,esp
  41eebe:	aas    
  41eebf:	ret    0xfd3b
  41eec2:	xor    DWORD PTR [eax+0x38f68d2a],ebp
  41eec8:	sbb    BYTE PTR [edx+0x55fd7d30],dl
  41eece:	push   0xffffffb7
  41eed0:	shl    BYTE PTR [edx-0x40d19c1f],0xda
  41eed7:	arpl   WORD PTR [esi+0x6e],sp
  41eeda:	aam    0x38
  41eedc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eedd:	aaa    
  41eede:	pop    ds
  41eedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eee0:	dec    esi
  41eee1:	add    esi,DWORD PTR [ecx+0x72885332]
  41eee7:	lds    esi,FWORD PTR [ecx+0x27]
  41eeea:	mov    BYTE PTR [ebx+0x0],cl
  41eeed:	mov    edi,0x5f73f2b
  41eef2:	pop    ebp
  41eef3:	adc    al,0xf7
  41eef5:	out    dx,al
  41eef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef7:	or     bx,WORD PTR [eax-0x51dfa54b]
  41eefe:	pop    ebp
  41eeff:	jne    0x41eeca
  41ef01:	sub    BYTE PTR [edx-0x5a],bl
  41ef04:	push   cs
  41ef05:	ret    
  41ef06:	stos   DWORD PTR es:[edi],eax
  41ef07:	stc    
  41ef08:	in     al,dx
  41ef09:	and    dh,BYTE PTR [edi-0x3706dd30]
  41ef0f:	ja     0x41eee6
  41ef11:	out    dx,eax
  41ef12:	fstp   QWORD PTR [ebx]
  41ef14:	sbb    DWORD PTR ds:0x26a7bcae,esp
  41ef1a:	add    BYTE PTR [ecx+eax*8-0x4c7496b5],cl
  41ef21:	xor    eax,0x88993432
  41ef26:	jb     0x41eede
  41ef28:	jns    0x41efa0
  41ef2a:	in     eax,0x84
  41ef2c:	fdivr  DWORD PTR [edx-0x5f983c4f]
  41ef32:	sbb    BYTE PTR [ebx],ah
  41ef34:	outs   dx,DWORD PTR ds:[esi]
  41ef35:	stos   DWORD PTR es:[edi],eax
  41ef36:	dec    ecx
  41ef37:	or     ch,BYTE PTR [ecx-0x30e26e6b]
  41ef3d:	or     BYTE PTR [edi-0x2f382ec3],ch
  41ef43:	xchg   ebx,eax
  41ef44:	or     ebx,0x53
  41ef47:	icebp  
  41ef48:	xchg   ebp,eax
  41ef49:	dec    DWORD PTR [edx-0x31]
  41ef4c:	shr    BYTE PTR [edi+eax*4-0x25b56236],1
  41ef53:	pop    edi
  41ef54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef55:	xchg   edi,eax
  41ef56:	shl    BYTE PTR [eax+0x6e863129],0x9a
  41ef5d:	stos   BYTE PTR es:[edi],al
  41ef5e:	je     0x41ef0e
  41ef60:	(bad)  
  41ef61:	push   0x98ad8574
  41ef66:	scas   al,BYTE PTR es:[edi]
  41ef67:	pop    ecx
  41ef68:	cmp    eax,0x9eb7b21f
  41ef6d:	mov    edx,0xdf692254
  41ef72:	xchg   edx,eax
  41ef73:	in     al,dx
  41ef74:	push   ebx
  41ef75:	int3   
  41ef76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef77:	fwait
  41ef78:	(bad)  
  41ef7a:	fcmovu st,st(4)
  41ef7c:	test   eax,0x8ed868e4
  41ef81:	repz repz inc esi
  41ef84:	push   edi
  41ef85:	retf   0x1cbf
  41ef88:	imul   ebx
  41ef8a:	push   cs
  41ef8b:	fsub   DWORD PTR [edx+0x37]
  41ef8e:	adc    bl,BYTE PTR [ebx-0x9]
  41ef91:	(bad)  
  41ef92:	out    0xea,eax
  41ef94:	jecxz  0x41f010
  41ef96:	(bad)  
  41ef97:	imul   edx,DWORD PTR [edi+0x69],0x2c4811f8
  41ef9e:	cmp    esi,edi
  41efa0:	jmp    0x7bc484e7
  41efa5:	into   
  41efa6:	outs   dx,BYTE PTR ds:[esi]
  41efa7:	mov    cl,BYTE PTR [edx+0x28a4b1c3]
  41efad:	mov    eax,0xd9c80553
  41efb2:	loop   0x41efd0
  41efb4:	pop    ecx
  41efb5:	sub    cl,bl
  41efb7:	or     DWORD PTR ds:[ebx],edi
  41efba:	adc    ch,BYTE PTR [ecx+edi*8-0x11]
  41efbe:	(bad)
  41efc1:	xor    al,0x46
  41efc3:	out    0xf6,al
  41efc5:	lock sub ch,BYTE PTR [edi+eiz*8]
  41efc9:	add    al,BYTE PTR [ecx]
  41efcb:	jmp    0xc353:0xb99f4f4b
  41efd2:	jecxz  0x41efd5
  41efd4:	mov    ch,0x3a
  41efd6:	cmpxchg DWORD PTR [eax],ebp
  41efd9:	mov    cl,0xe7
  41efdb:	xor    al,0x45
  41efdd:	nop
  41efde:	adc    bh,BYTE PTR ds:0xdb9bd632
  41efe4:	dec    ecx
  41efe5:	adc    edx,0xffffffd4
  41efe8:	sub    edx,esi
  41efea:	xchg   dh,ah
  41efec:	inc    esi
  41efed:	push   ecx
  41efee:	ss mov ch,0xe7
  41eff1:	dec    esi
  41eff2:	fidivr DWORD PTR [esi-0x35f4420]
  41eff8:	xor    BYTE PTR [esi],cl
  41effa:	out    dx,al
  41effb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41effc:	enter  0x3967,0x72
  41f000:	les    ecx,FWORD PTR ds:0x12d76f4b
  41f006:	and    BYTE PTR [esi],bh
  41f008:	and    dh,BYTE PTR [ebx-0x25]
  41f00b:	(bad)  
  41f00c:	adc    al,0xc8
  41f00e:	add    BYTE PTR [esi],0x48
  41f011:	cmc    
  41f012:	idiv   BYTE PTR [edi+0xd]
  41f015:	and    BYTE PTR [esi],ch
  41f017:	(bad)  
  41f018:	fsubr  QWORD PTR [ecx+0x8]
  41f01b:	xor    eax,0xf2048541
  41f020:	lods   eax,DWORD PTR ds:[esi]
  41f021:	nop
  41f022:	popf   
  41f023:	push   ds
  41f024:	sub    ecx,edi
  41f026:	mov    ch,0xe2
  41f028:	dec    esp
  41f029:	or     edx,ebx
  41f02b:	jmp    0xb5ea2f87
  41f030:	pusha  
  41f031:	mov    BYTE PTR [eax],ch
  41f033:	sbb    DWORD PTR [ebx+0xc1149e8],eax
  41f039:	fwait
  41f03a:	mov    dl,dl
  41f03c:	or     BYTE PTR [ecx-0x23c6f2f1],al
  41f042:	pop    eax
  41f043:	xor    eax,0xe6920c83
  41f048:	sbb    edi,DWORD PTR [edi+0x352d8761]
  41f04e:	add    eax,DWORD PTR [esi-0x238f7a9d]
  41f054:	call   0x87bb:0x85a97b73
  41f05b:	sub    cl,BYTE PTR [ecx-0x5cf124f]
  41f061:	dec    edx
  41f062:	in     al,0xfa
  41f064:	mov    WORD PTR [ecx],cs
  41f066:	out    0x54,eax
  41f068:	and    BYTE PTR [ebx-0x7a],dl
  41f06b:	mov    eax,ds:0x2e4a45fb
  41f070:	push   0x64
  41f072:	push   0x15
  41f074:	cs mov cl,0xb6
  41f077:	mov    eax,ds:0xee236738
  41f07c:	push   esp
  41f07d:	jg     0x41f089
  41f07f:	imul   ebx,esp,0x9e05b7e1
  41f085:	jbe    0x41f0d7
  41f087:	mov    edx,0x47134434
  41f08c:	jb     0x41f0d4
  41f08e:	push   eax
  41f08f:	out    0x4c,eax
  41f091:	dec    eax
  41f092:	fsubr  QWORD PTR [eax+0x74b0add3]
  41f098:	jg     0x41f06f
  41f09a:	sti    
  41f09b:	push   esi
  41f09c:	push   0x68
  41f09e:	pop    edi
  41f09f:	fstp   TBYTE PTR [edi-0x59d29a21]
  41f0a5:	cmc    
  41f0a6:	mov    edx,0x8d8dc169
  41f0ab:	mov    esp,eax
  41f0ad:	and    esi,DWORD PTR [edx+0x3d]
  41f0b0:	rcl    ch,cl
  41f0b2:	jl     0x41f0d2
  41f0b4:	shl    BYTE PTR ds:0x606f9528,0x43
  41f0bb:	xchg   edi,eax
  41f0bc:	jae    0x41f07f
  41f0be:	xchg   DWORD PTR [edi],esi
  41f0c0:	retf   0xbc10
  41f0c3:	sti    
  41f0c4:	std    
  41f0c5:	push   ss
  41f0c6:	push   ss
  41f0c7:	call   0xda64:0xf6822491
  41f0ce:	dec    ebp
  41f0cf:	scas   al,BYTE PTR es:[edi]
  41f0d0:	pop    ecx
  41f0d1:	dec    edx
  41f0d2:	jmp    0x41f09e
  41f0d4:	push   0x28
  41f0d6:	hlt    
  41f0d7:	inc    ebp
  41f0d8:	sahf   
  41f0d9:	push   es
  41f0da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0db:	push   ebp
  41f0dc:	stc    
  41f0dd:	pop    ebp
  41f0de:	jb     0x41f14f
  41f0e0:	sti    
  41f0e1:	cli    
  41f0e2:	ret    0x9f7c
  41f0e5:	mov    bl,0x27
  41f0e7:	cdq    
  41f0e8:	ins    BYTE PTR es:[edi],dx
  41f0e9:	sub    al,0xa9
  41f0eb:	add    al,BYTE PTR [edx]
  41f0ed:	xchg   DWORD PTR [eax],ebx
  41f0ef:	cli    
  41f0f0:	dec    esi
  41f0f1:	repz or eax,0x42c37f33
  41f0f7:	pop    ss
  41f0f8:	test   DWORD PTR [ebx-0x4],edx
  41f0fb:	cs jmp 0x41f145
  41f0fe:	cmp    edx,DWORD PTR [eax+edx*2]
  41f101:	mov    eax,ds:0x5994b403
  41f106:	out    dx,al
  41f107:	xor    eax,0x2ce025b4
  41f10c:	cdq    
  41f10d:	jnp    0x41f09c
  41f10f:	adc    ah,BYTE PTR [ebx-0x5c5e0c0e]
  41f115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f116:	cs jge 0x41f18c
  41f119:	bound  ecx,QWORD PTR [ebx+0x4d]
  41f11c:	xor    edi,DWORD PTR [ebx+esi*2-0x552c0cfe]
  41f123:	imul   ebx,ebx,0xfffffffd
  41f126:	repz add BYTE PTR [ecx],bh
  41f129:	sbb    dl,dh
  41f12b:	push   eax
  41f12c:	xlat   BYTE PTR ds:[ebx]
  41f12d:	stc    
  41f12e:	mov    edx,0x5a851eca
  41f133:	push   ecx
  41f134:	mov    ah,0xf6
  41f136:	mov    WORD PTR [ecx-0x7e],ds
  41f139:	gs add esi,esp
  41f13c:	and    esp,DWORD PTR [ecx]
  41f13e:	cmp    esp,DWORD PTR [edx+0x55c5f1b0]
  41f144:	dec    ebx
  41f145:	cmp    DWORD PTR [ebx],ecx
  41f147:	clc    
  41f148:	sub    eax,0xe754559f
  41f14d:	jmp    0x41f147
  41f14f:	push   edx
  41f150:	cmp    eax,0xd54b6765
  41f155:	outs   dx,BYTE PTR ds:[esi]
  41f156:	mov    al,ds:0xd8dc9a15
  41f15b:	int    0xa9
  41f15d:	xor    al,0xfb
  41f15f:	add    BYTE PTR [edx-0x48],ah
  41f162:	mov    ax,ds:0xff47e6d7
  41f168:	add    bl,BYTE PTR [ecx-0x22]
  41f16b:	les    ebx,FWORD PTR [edi+0x6230f1cf]
  41f171:	sar    DWORD PTR [edi+0xc],cl
  41f174:	mov    edx,0x63b4fca2
  41f179:	add    BYTE PTR [edi],al
  41f17b:	mov    DWORD PTR [edi-0x22],esi
  41f17e:	in     al,0x45
  41f180:	(bad)  
  41f182:	stc    
  41f183:	or     cl,BYTE PTR [eax-0x6f]
  41f186:	cmp    al,0xec
  41f188:	je     0x41f1e2
  41f18a:	pop    edi
  41f18b:	pop    ss
  41f18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f18d:	mov    bh,0x32
  41f18f:	loope  0x41f13f
  41f191:	dec    eax
  41f192:	sub    esi,DWORD PTR [ebx+0x2080b0c7]
  41f198:	cmp    eax,0x4284121c
  41f19d:	and    bh,0xd9
  41f1a0:	shr    cl,1
  41f1a2:	add    ah,BYTE PTR [ebp+edx*1+0x3e]
  41f1a6:	xor    al,0x6a
  41f1a8:	lea    esi,[eax+0x21a7b997]
  41f1ae:	cdq    
  41f1af:	pop    esp
  41f1b0:	push   esi
  41f1b1:	sbb    al,0x33
  41f1b3:	int3   
  41f1b4:	mov    edi,0xbeafddc0
  41f1b9:	cmp    BYTE PTR [edi-0x4512e9fe],dh
  41f1bf:	pop    esp
  41f1c0:	loopne 0x41f144
  41f1c2:	mov    cs,WORD PTR [esi-0x3]
  41f1c5:	ins    BYTE PTR es:[edi],dx
  41f1c6:	push   esi
  41f1c7:	dec    edx
  41f1c8:	mov    DWORD PTR [edi],esi
  41f1ca:	popa   
  41f1cb:	shl    BYTE PTR [ebx+0x23],cl
  41f1ce:	sbb    DWORD PTR [edi-0x17],eax
  41f1d1:	sbb    eax,0x68c81323
  41f1d6:	fs mov dl,0xfa
  41f1d9:	mov    ds:0x7193aee5,al
  41f1de:	mov    edx,0x28a471fc
  41f1e3:	nop
  41f1e4:	(bad)  
  41f1e5:	adc    ebx,DWORD PTR [ecx-0x2148c3ec]
  41f1eb:	mov    esp,0x8ee93713
  41f1f0:	pop    ebx
  41f1f1:	pop    DWORD PTR [edi+0x62]
  41f1f4:	pop    edx
  41f1f5:	in     eax,dx
  41f1f6:	(bad)  
  41f1f8:	pop    esp
  41f1f9:	jmp    0x41f217
  41f1fb:	(bad)  
  41f1fc:	sub    ch,BYTE PTR [esi-0x80]
  41f1ff:	xor    eax,0xc9d139e0
  41f204:	jg     0x41f19f
  41f206:	pop    es
  41f207:	or     BYTE PTR [esi+0x47],ch
  41f20a:	mov    ds:0x22138c60,eax
  41f20f:	mov    ecx,fs
  41f211:	add    bl,BYTE PTR [ebp+0x60e9a43e]
  41f217:	push   esi
  41f218:	adc    cl,cl
  41f21a:	out    dx,al
  41f21b:	lods   al,BYTE PTR ds:[esi]
  41f21c:	hlt    
  41f21d:	push   esp
  41f21e:	sub    edx,DWORD PTR [edx]
  41f220:	sbb    DWORD PTR [ecx+0x29],esi
  41f223:	xchg   DWORD PTR [ecx+0x517f064b],edi
  41f229:	dec    esi
  41f22a:	mov    eax,ds:0x856d9fc6
  41f22f:	dec    ebx
  41f230:	iret   
  41f231:	adc    eax,0x7fbb2e6e
  41f236:	fsub   DWORD PTR [ebx-0x4b997316]
  41f23c:	sbb    BYTE PTR [eax-0x5924fa5a],bl
  41f242:	sbb    al,0xed
  41f244:	addr16 jb 0x41f25e
  41f247:	add    eax,0xacced01a
  41f24c:	not    esp
  41f24e:	mov    DWORD PTR [ecx-0x426efe0e],esi
  41f254:	repz pop ecx
  41f256:	sub    ah,bl
  41f258:	adc    eax,0xa2b768f1
  41f25d:	gs call 0x4c4234b5
  41f263:	dec    edx
  41f264:	outs   dx,BYTE PTR ds:[esi]
  41f265:	jbe    0x41f237
  41f267:	mov    ah,0x3
  41f269:	jo     0x41f259
  41f26b:	jno    0x41f2a1
  41f26d:	data16 cli 
  41f26f:	push   ebx
  41f270:	rol    BYTE PTR [edx-0x2381d574],cl
  41f276:	cmp    al,0xa3
  41f278:	jne    0x41f202
  41f27a:	test   al,0x8f
  41f27c:	ror    DWORD PTR [esp+edi*4+0x2a8efb19],0xa9
  41f284:	dec    eax
  41f285:	jbe    0x41f232
  41f287:	pop    esp
  41f288:	push   ds
  41f289:	push   edx
  41f28a:	shr    BYTE PTR [ebp+eax*8+0x22],0xc1
  41f28f:	mov    bl,0xee
  41f291:	mov    DWORD PTR [esp+ebx*8-0x40],edi
  41f295:	fwait
  41f296:	rcl    DWORD PTR [edx+0x70],0x8
  41f29a:	jle    0x41f28d
  41f29c:	xchg   esi,eax
  41f29d:	mov    ecx,0xc021ab31
  41f2a2:	xor    BYTE PTR [eax+ebp*2+0x55882762],ah
  41f2a9:	je     0x41f22e
  41f2ab:	xor    BYTE PTR [ecx],0x5e
  41f2ae:	sbb    dl,dh
  41f2b0:	out    dx,eax
  41f2b1:	shl    BYTE PTR [eax+0x247be0f5],1
  41f2b7:	sahf   
  41f2b8:	imul   ecx
  41f2ba:	pop    ecx
  41f2bb:	jp     0x41f2ff
  41f2bd:	jnp    0x41f33d
  41f2bf:	add    BYTE PTR [ebx],cl
  41f2c1:	add    ch,al
  41f2c3:	push   cs
  41f2c4:	gs xchg edx,eax
  41f2c6:	mov    esi,DWORD PTR [ebp-0x2ed05b1b]
  41f2cc:	xor    BYTE PTR [eax-0x7c],dl
  41f2cf:	jl     0x41f2ef
  41f2d1:	mov    edi,0xf48a7c8
  41f2d6:	add    ah,BYTE PTR [ecx]
  41f2d8:	(bad)  
  41f2d9:	dec    edi
  41f2da:	lds    ebx,FWORD PTR [edx+0x3d]
  41f2dd:	xor    edi,ebp
  41f2df:	xchg   esi,eax
  41f2e0:	dec    edi
  41f2e1:	and    ecx,DWORD PTR [ecx]
  41f2e3:	stos   BYTE PTR es:[edi],al
  41f2e4:	(bad)  
  41f2e5:	xchg   edi,eax
  41f2e6:	rol    BYTE PTR [eax+0x689e9b62],1
  41f2ec:	push   esp
  41f2ed:	jo     0x41f338
  41f2ef:	arpl   sp,di
  41f2f1:	xchg   esp,eax
  41f2f2:	cmc    
  41f2f3:	sbb    edx,edi
  41f2f5:	xchg   ebx,eax
  41f2f6:	mov    esp,0xedb9780b
  41f2fb:	mov    al,ds:0x65c91ead
  41f300:	jnp    0x41f309
  41f302:	pop    eax
  41f303:	push   ss
  41f304:	les    esp,FWORD PTR [ebp+edi*8+0x2c]
  41f308:	call   0x64e04975
  41f30d:	mov    BYTE PTR [esp+edi*8],dh
  41f310:	rol    DWORD PTR [edi-0x52],0xd0
  41f314:	aad    0x49
  41f316:	call   0xc3c6:0x215bd720
  41f31d:	mov    DWORD PTR [ebx-0x24],ebx
  41f320:	or     eax,0x4ae9d778
  41f325:	inc    esi
  41f326:	(bad)  
  41f327:	dec    ebp
  41f328:	jecxz  0x41f32b
  41f32a:	sub    ch,BYTE PTR [ecx+edi*8]
  41f32d:	loop   0x41f384
  41f32f:	shl    eax,1
  41f331:	adc    dl,bl
  41f333:	out    0x52,al
  41f335:	daa    
  41f336:	(bad)  
  41f337:	fidiv  DWORD PTR [edx]
  41f339:	repnz (bad) 
  41f33b:	mov    ds:0x2b850e8c,al
  41f340:	mov    dl,BYTE PTR [ebp-0x46b3265a]
  41f346:	xchg   ebp,eax
  41f347:	sti    
  41f348:	inc    ebx
  41f349:	int3   
  41f34a:	and    ebp,DWORD PTR [ebp+0xb05b89]
  41f350:	lods   eax,DWORD PTR ds:[esi]
  41f351:	outs   dx,BYTE PTR ds:[esi]
  41f352:	inc    esp
  41f353:	stos   BYTE PTR es:[edi],al
  41f354:	arpl   WORD PTR [eax],cx
  41f356:	mov    cl,0x31
  41f358:	or     edx,esi
  41f35a:	inc    edx
  41f35b:	popa   
  41f35c:	dec    eax
  41f35d:	and    esi,edi
  41f35f:	into   
  41f360:	pop    edx
  41f361:	hlt    
  41f362:	sar    BYTE PTR [esi],cl
  41f364:	cli    
  41f365:	jnp    0x41f3cd
  41f367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f368:	adc    DWORD PTR [eax-0x17d09dd3],ebx
  41f36e:	adc    DWORD PTR [eax],eax
  41f370:	xchg   ecx,eax
  41f371:	in     al,dx
  41f372:	gs out dx,eax
  41f374:	stos   DWORD PTR es:[edi],eax
  41f375:	daa    
  41f376:	jge    0x41f36f
  41f378:	jnp    0x41f389
  41f37a:	jecxz  0x41f33f
  41f37c:	in     al,dx
  41f37d:	adc    al,0xd5
  41f37f:	cwde   
  41f380:	mov    cl,0x7c
  41f382:	mov    bh,BYTE PTR [ebx+0x17]
  41f385:	jg     0x41f3a5
  41f387:	add    ebp,DWORD PTR [ecx-0x72a16665]
  41f38d:	daa    
  41f38e:	mov    ecx,0x80c549f1
  41f393:	push   ebp
  41f394:	add    al,0x3e
  41f396:	popf   
  41f397:	fisubr WORD PTR [esi]
  41f399:	(bad)  
  41f39a:	pushf  
  41f39b:	in     eax,dx
  41f39c:	mov    ebp,0x483e55eb
  41f3a1:	test   bh,cl
  41f3a3:	hlt    
  41f3a4:	mov    eax,ds:0xc128ec2e
  41f3a9:	cmp    edi,edx
  41f3ab:	dec    eax
  41f3ac:	jo     0x41f3fa
  41f3ae:	mov    bh,0x97
  41f3b0:	fdivr  DWORD PTR [ebx+0x58]
  41f3b3:	call   0x36c3d7a
  41f3b8:	xchg   esp,eax
  41f3b9:	push   DWORD PTR [edx-0x1e]
  41f3bc:	jg     0x41f35a
  41f3be:	ficomp DWORD PTR [esi+edi*4-0x73]
  41f3c2:	or     ebp,DWORD PTR [edx-0x75a08518]
  41f3c8:	fbstp  TBYTE PTR [esi]
  41f3ca:	mov    al,ds:0x51379fd5
  41f3cf:	stc    
  41f3d0:	stos   BYTE PTR es:[edi],al
  41f3d1:	push   ebp
  41f3d2:	ja     0x41f386
  41f3d4:	xor    DWORD PTR [esi-0x973475a],esp
  41f3da:	pop    ecx
  41f3db:	in     al,0xde
  41f3dd:	pop    eax
  41f3de:	sti    
  41f3df:	das    
  41f3e0:	test   eax,0x6f25ebcc
  41f3e5:	dec    ecx
  41f3e6:	jge    0x41f3da
  41f3e8:	add    eax,ebx
  41f3ea:	pusha  
  41f3eb:	mov    eax,0x83db5992
  41f3f0:	shl    DWORD PTR [ecx],0x87
  41f3f3:	lods   eax,DWORD PTR ds:[esi]
  41f3f4:	(bad)  
  41f3f5:	and    esp,eax
  41f3f7:	mov    ecx,0x76637b70
  41f3fc:	fistp  WORD PTR [edx+0x4c]
  41f3ff:	test   DWORD PTR [ebp-0x13],esi
  41f402:	pop    ecx
  41f403:	imul   ecx,DWORD PTR [ebx],0x47794e2d
  41f409:	jb     0x41f448
  41f40b:	jmp    0x98306952
  41f410:	jmp    0x41f42b
  41f412:	popf   
  41f413:	cs out 0x5f,al
  41f416:	inc    eax
  41f417:	mov    ah,0x87
  41f419:	pop    ebp
  41f41a:	push   esi
  41f41b:	mov    ah,0x52
  41f41d:	xlat   BYTE PTR ds:[ebx]
  41f41e:	in     eax,dx
  41f41f:	pop    edi
  41f420:	xchg   ebp,eax
  41f421:	adc    ebp,DWORD PTR [ecx+0x3901de00]
  41f427:	dec    ebp
  41f428:	aam    0x26
  41f42a:	stos   DWORD PTR es:[edi],eax
  41f42b:	cmp    ch,BYTE PTR [esp+esi*2]
  41f42e:	das    
  41f42f:	inc    edx
  41f430:	and    eax,0x4f1cc437
  41f435:	adc    ah,BYTE PTR [edi+0x58]
  41f438:	shl    DWORD PTR [ecx-0x7d],cl
  41f43b:	jmp    0x10a:0x53d30b38
  41f442:	and    BYTE PTR [eax+0x385ec7c2],bl
  41f448:	and    al,bh
  41f44a:	and    al,cl
  41f44c:	mov    ah,0xb9
  41f44e:	stos   BYTE PTR es:[edi],al
  41f44f:	add    eax,DWORD PTR fs:[ecx+0x2c]
  41f453:	add    edi,DWORD PTR [esp+ecx*4+0x24]
  41f457:	jmp    0x41f470
  41f459:	(bad)  
  41f45a:	mov    ecx,0xbfdd6655
  41f45f:	dec    edi
  41f460:	or     eax,eax
  41f462:	loopne 0x41f490
  41f464:	(bad)
  41f468:	adc    BYTE PTR [edi+0x20],ah
  41f46b:	js     0x41f498
  41f46d:	xchg   ebx,eax
  41f46e:	ja     0x41f4cc
  41f470:	test   DWORD PTR [ebx-0x1d62e5f0],ebx
  41f476:	push   fs
  41f478:	imul   DWORD PTR [edi]
  41f47a:	gs ins BYTE PTR es:[edi],dx
  41f47c:	mov    eax,0x7746a47a
  41f481:	push   0xffffffdd
  41f483:	xor    eax,0xd7d15357
  41f488:	jo     0x41f468
  41f48a:	and    al,0xe2
  41f48c:	in     al,0x6d
  41f48e:	mov    dl,0x69
  41f490:	loopne 0x41f42c
  41f492:	stos   BYTE PTR es:[edi],al
  41f493:	daa    
  41f494:	(bad)  
  41f495:	adc    DWORD PTR [eax+0x43c0e13e],0x22
  41f49c:	repz mov WORD PTR [esi+0x45],es
  41f4a0:	mov    BYTE PTR [ebx+0x14afe13c],bh
  41f4a6:	pop    ss
  41f4a7:	lahf   
  41f4a8:	sbb    edx,DWORD PTR [edi+0x45f0b984]
  41f4ae:	test   BYTE PTR [ecx+0x4c],0xe3
  41f4b2:	ret    0x773d
  41f4b5:	scas   al,BYTE PTR es:[edi]
  41f4b6:	sub    al,0x2b
  41f4b8:	outs   dx,BYTE PTR ds:[esi]
  41f4b9:	cmp    esp,ebx
  41f4bb:	pushf  
  41f4bc:	jmp    0x41f467
  41f4be:	xchg   DWORD PTR [edx],ebx
  41f4c0:	arpl   ax,di
  41f4c2:	fadd   QWORD PTR [edx+0x4b]
  41f4c5:	jae    0x41f476
  41f4c7:	inc    eax
  41f4c8:	fidivr WORD PTR [eax+0x6e1444c9]
  41f4ce:	mov    ch,0xfb
  41f4d0:	popf   
  41f4d1:	mov    ?,edx
  41f4d3:	pop    edi
  41f4d4:	jl     0x41f4ca
  41f4d6:	jle    0x41f52e
  41f4d8:	into   
  41f4d9:	ret    0x5daf
  41f4dc:	(bad)  
  41f4dd:	mov    edx,0xa9b92ee7
  41f4e2:	arpl   WORD PTR [ebp+0x21c725ef],si
  41f4e8:	xchg   esp,eax
  41f4e9:	in     al,0x6
  41f4eb:	mov    dl,0x8f
  41f4ed:	jno    0x41f481
  41f4ef:	adc    ecx,esp
  41f4f1:	cmp    al,0x83
  41f4f3:	rol    BYTE PTR [edx+edi*1+0x2f11f458],1
  41f4fa:	mov    bl,0xe3
  41f4fc:	test   eax,0x31d065d3
  41f501:	jp     0x41f4c7
  41f503:	mov    dl,0x1d
  41f505:	sbb    DWORD PTR [ebx-0x25],ecx
  41f508:	stc    
  41f509:	stos   DWORD PTR es:[edi],eax
  41f50a:	mov    esi,0xce9f1136
  41f50f:	call   0x671e:0xf5a6021d
  41f516:	dec    eax
  41f517:	xchg   ebx,eax
  41f518:	pop    eax
  41f519:	sbb    al,0x0
  41f51b:	xor    esi,DWORD PTR [eax+eiz*2]
  41f51e:	(bad)  
  41f51f:	pop    esp
  41f520:	loope  0x41f4bb
  41f522:	retf   0x77ba
  41f525:	popa   
  41f526:	push   ebp
  41f527:	cmp    BYTE PTR [ecx-0x5ee723d4],dl
  41f52d:	retf   0xd5a1
  41f530:	pop    ds
  41f531:	jne    0x41f59b
  41f533:	xchg   DWORD PTR [ecx-0x5c],ebp
  41f536:	loop   0x41f5a7
  41f538:	jbe    0x41f563
  41f53a:	repz jp 0x41f4f5
  41f53d:	call   FWORD PTR [ebp-0x7799e122]
  41f543:	test   eax,0x974ca1b8
  41f548:	jns    0x41f505
  41f54a:	and    eax,0xb1046879
  41f54f:	add    DWORD PTR [ecx+ecx*8],0xd3ba438e
  41f556:	and    eax,0xa6e366a6
  41f55b:	jne    0x41f580
  41f55d:	sub    ecx,DWORD PTR [ebp+0x4b63e4d3]
  41f563:	jno    0x41f529
  41f565:	clc    
  41f566:	mov    esi,0xeebf9e5d
  41f56b:	mov    cl,0xcf
  41f56d:	mov    al,ds:0x966ad127
  41f572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f573:	mov    ah,0x2b
  41f575:	aam    0x4d
  41f577:	xchg   BYTE PTR [ecx],ah
  41f579:	aas    
  41f57a:	lods   eax,DWORD PTR gs:[esi]
  41f57c:	jmp    0x22fc0457
  41f581:	mov    DWORD PTR [edx-0x22a403e3],edi
  41f587:	cmp    al,0xaf
  41f589:	and    DWORD PTR [esi+ebx*8-0x3da53f82],ecx
  41f590:	xor    DWORD PTR [ebp+0x7893ffa0],eax
  41f596:	loopne 0x41f5c9
  41f598:	mov    edi,0xba54369f
  41f59d:	xor    BYTE PTR [edi-0x4b],ah
  41f5a0:	bound  ebp,QWORD PTR [ebx-0x3f79d30e]
  41f5a6:	sti    
  41f5a7:	inc    edi
  41f5a8:	mov    edi,0x47c643f8
  41f5ad:	mov    bh,0xac
  41f5af:	or     eax,ebx
  41f5b1:	mov    ?,WORD PTR [edx-0x34b90289]
  41f5b7:	cmc    
  41f5b8:	and    eax,0x7c871ad2
  41f5bd:	stos   BYTE PTR es:[edi],al
  41f5be:	and    al,0x65
  41f5c0:	fistp  DWORD PTR [ebp-0x611d28df]
  41f5c6:	dec    esi
  41f5c7:	dec    edi
  41f5c8:	push   ecx
  41f5c9:	adc    al,0xf3
  41f5cb:	lock add al,0x6c
  41f5ce:	iret   
  41f5cf:	jnp    0x41f571
  41f5d1:	jle    0x41f578
  41f5d3:	pusha  
  41f5d4:	(bad)  
  41f5d5:	xchg   ebp,eax
  41f5d6:	mov    edi,0x9242e984
  41f5db:	retf   
  41f5dc:	add    BYTE PTR [ebx+0x56],bl
  41f5df:	aad    0xd8
  41f5e1:	imul   ecx,esi,0x2599e8da
  41f5e7:	imul   BYTE PTR [eax-0x3e]
  41f5ea:	inc    ecx
  41f5eb:	loopne 0x41f603
  41f5ed:	fidivr WORD PTR [eax]
  41f5ef:	jmp    0x91c2b56e
  41f5f4:	xchg   edx,eax
  41f5f5:	pop    edi
  41f5f6:	fisttp WORD PTR [ebp+0x1b]
  41f5f9:	add    esp,DWORD PTR [esi]
  41f5fb:	and    ah,BYTE PTR [ebx+0x17]
  41f5fe:	imul   ebx,DWORD PTR ds:0x133ad687,0xffffff9c
  41f605:	dec    edi
  41f606:	loop   0x41f65b
  41f608:	cld    
  41f609:	imul   ebp,DWORD PTR [esi+eiz*2],0x73
  41f60d:	add    esp,ebp
  41f60f:	out    dx,al
  41f610:	inc    edi
  41f611:	sar    DWORD PTR [edi+eax*2-0x3e],cl
  41f615:	xchg   esp,eax
  41f616:	outs   dx,DWORD PTR ds:[esi]
  41f617:	xchg   edx,eax
  41f618:	test   DWORD PTR [ebx+0x249e76b8],ebx
  41f61e:	mov    ebp,0x5123689e
  41f623:	mov    DWORD PTR [eax],0xe9163d10
  41f629:	add    dh,BYTE PTR ds:0x40a6eae4
  41f62f:	mov    DWORD PTR [edx+ebx*4-0x5a90715],ebp
  41f636:	fcomp  st(6)
  41f638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f639:	iret   
  41f63a:	fistp  WORD PTR [eax+0x61]
  41f63d:	sub    BYTE PTR [esi],0x1
  41f640:	xor    DWORD PTR [edi+0x33743988],0x89aba68
  41f64a:	js     0x41f682
  41f64c:	xchg   ebp,eax
  41f64d:	(bad)  
  41f64e:	pop    ebp
  41f64f:	push   ecx
  41f650:	imul   esi,DWORD PTR [edx+edi*2+0x75],0x46
  41f655:	adc    dh,bh
  41f657:	mov    bl,0xc3
  41f659:	mov    bl,0xb7
  41f65b:	mov    ecx,0x4a130a76
  41f660:	pusha  
  41f661:	push   ds
  41f662:	or     BYTE PTR [ebx],bl
  41f664:	pop    ebx
  41f665:	adc    eax,0x3fbc84
  41f66a:	in     eax,0x6d
  41f66c:	push   es
  41f66d:	push   eax
  41f66e:	dec    ebx
  41f66f:	add    al,0x14
  41f671:	push   eax
  41f672:	sbb    al,0x6c
  41f674:	in     al,dx
  41f675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f676:	mov    ch,cl
  41f678:	daa    
  41f679:	lods   al,BYTE PTR ds:[esi]
  41f67a:	lea    ebx,[edi-0x42]
  41f67d:	mov    edi,0x7b2ef0b2
  41f682:	dec    edx
  41f683:	and    edi,DWORD PTR [ebx-0x1b723269]
  41f689:	dec    eax
  41f68a:	das    
  41f68b:	xor    bl,bl
  41f68d:	mov    al,0xb3
  41f68f:	dec    ebx
  41f690:	push   es
  41f691:	popf   
  41f692:	push   edi
  41f693:	pop    esp
  41f694:	or     DWORD PTR [ebx-0x3501b082],ebp
  41f69a:	inc    edi
  41f69b:	arpl   WORD PTR [eax+0x7d13393c],di
  41f6a1:	inc    esp
  41f6a2:	jle    0x41f6c6
  41f6a4:	or     al,0x6a
  41f6a6:	(bad)  
  41f6a7:	aam    0xa3
  41f6a9:	xchg   ebx,eax
  41f6aa:	lods   eax,DWORD PTR ds:[esi]
  41f6ab:	bound  ebp,QWORD PTR [edx+0x7b83b093]
  41f6b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6b2:	jp     0x41f66b
  41f6b4:	push   ds
  41f6b5:	shr    DWORD PTR [ebx-0x29],1
  41f6b8:	pop    edx
  41f6b9:	mov    al,ds:0xcc9e2a00
  41f6be:	jl     0x41f712
  41f6c0:	and    al,0x89
  41f6c2:	jbe    0x41f671
  41f6c4:	test   eax,0x7ad39f80
  41f6c9:	fwait
  41f6ca:	mov    al,0xec
  41f6cc:	and    edx,esp
  41f6ce:	out    0xd5,al
  41f6d0:	mov    cl,0x6c
  41f6d2:	clc    
  41f6d3:	inc    ebx
  41f6d4:	xchg   ebp,eax
  41f6d5:	xor    edi,DWORD PTR [esp+edx*8+0x5ebecf72]
  41f6dc:	out    0xfd,eax
  41f6de:	lds    esi,FWORD PTR [esp+edx*8]
  41f6e1:	test   eax,0x4398e646
  41f6e6:	mov    cl,BYTE PTR [esi+0x5ab63c12]
  41f6ec:	icebp  
  41f6ed:	push   edi
  41f6ee:	jns    0x41f766
  41f6f0:	call   0xc7d7e3f3
  41f6f5:	pop    edx
  41f6f6:	sbb    ebx,DWORD PTR [ebx]
  41f6f8:	mov    edx,edi
  41f6fa:	call   0x5559:0x5bb16c98
  41f701:	xor    DWORD PTR [ecx],edi
  41f703:	and    DWORD PTR [esi+0x61543e43],ecx
  41f709:	adc    esi,DWORD PTR [edx-0x17]
  41f70c:	in     al,0x3e
  41f70e:	pop    edi
  41f70f:	fs ds adc esi,esi
  41f713:	fs mov ah,0xfb
  41f716:	retf   
  41f717:	mov    dl,0x11
  41f719:	fadd   st,st(2)
  41f71b:	scas   al,BYTE PTR es:[edi]
  41f71c:	dec    esi
  41f71d:	sbb    ecx,DWORD PTR [ebx+0x5a5118e4]
  41f723:	dec    ecx
  41f724:	idiv   DWORD PTR [esi]
  41f726:	push   0x8c6a3ab5
  41f72b:	repz out dx,al
  41f72d:	outs   dx,DWORD PTR ds:[esi]
  41f72e:	dec    edx
  41f72f:	add    BYTE PTR [ebx],bl
  41f731:	test   eax,0x6268ef78
  41f736:	push   ss
  41f737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f738:	dec    esi
  41f739:	outs   dx,DWORD PTR ds:[esi]
  41f73a:	jmp    0x8a23:0xd7e1fde9
  41f741:	nop
  41f742:	out    0xa6,eax
  41f744:	xchg   edx,eax
  41f745:	mov    edx,0x3a083ee5
  41f74a:	jg     0x41f7a5
  41f74c:	mov    bl,0x67
  41f74e:	call   0x23fbb03
  41f753:	pop    edx
  41f754:	(bad)  
  41f755:	repnz jecxz 0x41f6f5
  41f758:	call   0x67fb:0x9f21324
  41f75f:	mov    ah,0xea
  41f761:	fidiv  WORD PTR [edx]
  41f763:	jl     0x41f7e4
  41f765:	xchg   BYTE PTR [ebx+ecx*4+0x17b0c90b],dh
  41f76c:	dec    ebx
  41f76d:	inc    ebp
  41f76e:	add    DWORD PTR [ecx],esi
  41f770:	mov    al,0xed
  41f772:	pop    ebp
  41f773:	clc    
  41f774:	inc    edi
  41f775:	pop    esp
  41f776:	xor    cl,BYTE PTR [eax]
  41f778:	shl    BYTE PTR [edi-0x29a9eb05],1
  41f77e:	fsub   QWORD PTR [ebx+0x77f51639]
  41f784:	fs pop edx
  41f786:	nop
  41f787:	not    ebx
  41f789:	nop
  41f78a:	mov    edx,0x26dee91d
  41f78f:	push   ebx
  41f790:	ins    DWORD PTR es:[edi],dx
  41f791:	mov    bl,0x47
  41f793:	ror    DWORD PTR [edx],1
  41f795:	(bad)  
  41f796:	repz xor BYTE PTR fs:[edx+esi*2],bh
  41f79b:	dec    ebx
  41f79c:	call   0xc2242723
  41f7a1:	xor    BYTE PTR [ecx+0x2e],0x8
  41f7a5:	inc    esi
  41f7a6:	jp     0x41f79e
  41f7a8:	idiv   BYTE PTR ds:0xb146ac97
  41f7ae:	jle    0x41f793
  41f7b0:	test   eax,0x5764dcbf
  41f7b5:	sar    BYTE PTR [esi-0xe9502b2],cl
  41f7bb:	push   edx
  41f7bc:	sub    DWORD PTR [ebx+0x6ce71c92],ebx
  41f7c2:	(bad)  
  41f7c3:	push   edi
  41f7c4:	std    
  41f7c5:	sbb    DWORD PTR ds:0xbc2cef60,ebp
  41f7cb:	sub    al,0x74
  41f7cd:	inc    esp
  41f7ce:	clc    
  41f7cf:	mov    ebx,0x2bf15007
  41f7d4:	test   DWORD PTR [eax+eax*4],0xee137d29
  41f7db:	(bad)  
  41f7dc:	and    al,0xf5
  41f7de:	sub    bh,dh
  41f7e0:	nop
  41f7e1:	ins    DWORD PTR es:[edi],dx
  41f7e2:	dec    edx
  41f7e3:	jp     0x41f830
  41f7e5:	lahf   
  41f7e6:	and    ecx,eax
  41f7e8:	mov    edi,eax
  41f7ea:	jp     0x41f802
  41f7ec:	mov    eax,0x64c176d4
  41f7f1:	push   ebp
  41f7f2:	xchg   DWORD PTR [ebx],esi
  41f7f4:	in     eax,dx
  41f7f5:	sub    dh,BYTE PTR [edx]
  41f7f7:	jge    0x41f7d7
  41f7f9:	sbb    DWORD PTR [ecx+0x6f],0xe23ce59a
  41f800:	adc    BYTE PTR [edx-0x2b],cl
  41f803:	add    eax,0x93ea7697
  41f808:	adc    ah,BYTE PTR [ebp+0x3d]
  41f80b:	jne    0x41f7f3
  41f80d:	inc    esp
  41f80e:	sbb    al,al
  41f810:	sti    
  41f811:	mov    BYTE PTR [edx-0x15],ch
  41f814:	mov    WORD PTR [edx],gs
  41f816:	hlt    
  41f817:	leave  
  41f818:	inc    ecx
  41f819:	scas   al,BYTE PTR es:[edi]
  41f81a:	es cmc 
  41f81c:	jp     0x41f7a3
  41f81e:	cmp    edx,DWORD PTR [eax+edx*2+0x711cf874]
  41f825:	nop
  41f826:	push   edi
  41f827:	jp     0x8040295d
  41f82d:	push   es
  41f82e:	int3   
  41f82f:	out    dx,eax
  41f830:	in     al,dx
  41f831:	ins    DWORD PTR es:[edi],dx
  41f832:	fwait
  41f833:	mov    al,ds:0x81d1f410
  41f838:	jle    0x41f7dc
  41f83a:	sbb    al,0xee
  41f83c:	aam    0x3a
  41f83e:	das    
  41f83f:	jmp    0x41f841
  41f841:	fcomp  st(5)
  41f843:	cmp    eax,0xa9d14677
  41f848:	xchg   ecx,eax
  41f849:	dec    ebx
  41f84a:	(bad)  
  41f84b:	mov    edi,0xd4a0ef53
  41f850:	out    dx,al
  41f851:	hlt    
  41f852:	je     0x41f861
  41f854:	das    
  41f855:	xchg   esp,eax
  41f856:	xchg   edi,eax
  41f857:	loop   0x41f7f7
  41f859:	imul   edi,edx,0x41
  41f85c:	mov    ebp,0xd8b1e35b
  41f861:	inc    ebx
  41f862:	xlat   BYTE PTR ds:[ebx]
  41f863:	mov    ah,0xf3
  41f865:	sti    
  41f866:	fistp  WORD PTR [eax]
  41f868:	dec    ebx
  41f869:	adc    eax,DWORD PTR [esi+edi*8]
  41f86c:	mov    bl,ch
  41f86e:	test   DWORD PTR [eax],edx
  41f870:	xchg   ebx,eax
  41f871:	movlps xmm4,QWORD PTR [eax+0xa2e667d]
  41f878:	xor    ax,0xf80c
  41f87c:	(bad)  
  41f87d:	cmp    DWORD PTR [ebp-0x54d23823],esp
  41f883:	mov    ch,0x73
  41f885:	xchg   DWORD PTR [edx+0x15451d64],edx
  41f88b:	mov    al,BYTE PTR [edx]
  41f88d:	fisubr DWORD PTR [esi]
  41f88f:	aam    0xa
  41f891:	adc    esi,DWORD PTR [edx+ebp*4+0x1eed8140]
  41f898:	xlat   BYTE PTR ds:[ebx]
  41f899:	mov    dl,0xc9
  41f89b:	iret   
  41f89c:	inc    esp
  41f89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f89e:	scas   eax,DWORD PTR es:[edi]
  41f89f:	rol    BYTE PTR [ebp-0x1badf05],0x8b
  41f8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a7:	push   cs
  41f8a8:	push   eax
  41f8a9:	inc    esp
  41f8aa:	inc    esi
  41f8ab:	inc    edx
  41f8ac:	or     ch,BYTE PTR ds:0x26adf113
  41f8b2:	xchg   edx,eax
  41f8b3:	test   eax,0x71d0477e
  41f8b8:	and    dl,BYTE PTR [ecx+0x65]
  41f8bb:	scas   eax,DWORD PTR es:[edi]
  41f8bc:	inc    ecx
  41f8bd:	sti    
  41f8be:	in     al,dx
  41f8bf:	outs   dx,DWORD PTR ds:[esi]
  41f8c0:	popa   
  41f8c1:	mov    ds:0x78e74ac7,eax
  41f8c6:	inc    eax
  41f8c7:	jl     0x41f8ce
  41f8c9:	xor    ah,BYTE PTR [eax]
  41f8cb:	ins    BYTE PTR es:[edi],dx
  41f8cc:	pop    ebp
  41f8cd:	test   eax,0x59226e2c
  41f8d2:	call   0x8914c19e
  41f8d7:	jp     0x41f8de
  41f8d9:	and    esp,DWORD PTR [esi+0x4324e01f]
  41f8df:	ja     0x41f8ab
  41f8e1:	sub    DWORD PTR [ecx+0x49],ecx
  41f8e4:	mov    ebp,0x7080ff9d
  41f8e9:	or     al,0xa3
  41f8eb:	adc    al,0xf6
  41f8ed:	cwde   
  41f8ee:	pop    edi
  41f8ef:	fs (bad) 
  41f8f1:	imul   edx,DWORD PTR [edx+0x7aa41049],0xffffff93
  41f8f8:	call   0x9989:0x5af2efa5
  41f8ff:	fisubr DWORD PTR fs:[ebp+0x29]
  41f903:	sahf   
  41f904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f905:	push   es
  41f906:	js     0x41f8fb
  41f908:	dec    edx
  41f909:	push   eax
  41f90a:	push   es
  41f90b:	imul   edx,edi,0x66
  41f90e:	adc    ah,al
  41f910:	sub    BYTE PTR [edx+0x34],dl
  41f913:	cwde   
  41f914:	dec    esp
  41f915:	(bad)  
  41f916:	mov    ecx,0x633842e
  41f91b:	out    0x9d,eax
  41f91d:	(bad)  
  41f91e:	push   esp
  41f91f:	jns    0x41f929
  41f921:	das    
  41f922:	scas   al,BYTE PTR es:[edi]
  41f923:	adc    eax,0x85972503
  41f928:	pop    ebp
  41f929:	mov    al,0x43
  41f92b:	mov    bh,0x74
  41f92d:	cld    
  41f92e:	push   edx
  41f92f:	jnp    0x41f97b
  41f931:	sub    DWORD PTR [edi-0x1d],0xffffff92
  41f935:	mov    DWORD PTR [esi],esp
  41f937:	xchg   edi,eax
  41f938:	sahf   
  41f939:	mov    bl,0x66
  41f93b:	push   edx
  41f93c:	fcmovnb st,st(2)
  41f93e:	inc    eax
  41f93f:	sub    BYTE PTR [edi],0x74
  41f942:	push   esi
  41f943:	js     0x41f8ea
  41f945:	add    BYTE PTR [eax+0x4ac1d301],ah
  41f94b:	dec    esp
  41f94c:	inc    edi
  41f94d:	mov    al,BYTE PTR [edx-0x7b]
  41f950:	mov    ch,0x5b
  41f952:	jo     0x41f958
  41f954:	scas   al,BYTE PTR es:[edi]
  41f955:	popf   
  41f956:	pop    es
  41f957:	fs and esi,edx
  41f95a:	add    DWORD PTR [ecx],esi
  41f95c:	fs dec esi
  41f95e:	adc    edi,DWORD PTR [edi+0x31ada286]
  41f964:	loope  0x41f969
  41f966:	sub    DWORD PTR [ecx+0x785d4de9],esp
  41f96c:	data16 adc dl,BYTE PTR [esi-0x56]
  41f970:	pop    eax
  41f971:	pop    edi
  41f972:	fwait
  41f973:	hlt    
  41f974:	inc    ebx
  41f975:	cli    
  41f976:	inc    edi
  41f977:	lods   eax,DWORD PTR ds:[esi]
  41f978:	mov    al,0x26
  41f97a:	(bad)  
  41f97b:	in     al,dx
  41f97c:	cli    
  41f97d:	mov    dl,0x23
  41f97f:	jne    0x41f953
  41f981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f982:	cdq    
  41f983:	shl    BYTE PTR [ecx+0x7c],1
  41f986:	dec    ecx
  41f987:	pushf  
  41f988:	popf   
  41f989:	fwait
  41f98a:	inc    edi
  41f98b:	fstp   QWORD PTR [esi+0x1e]
  41f98e:	jg     0x41f94b
  41f990:	(bad)  
  41f991:	mov    ebx,0x942aeb2b
  41f996:	lahf   
  41f997:	pop    es
  41f998:	mov    ds:0xaf45852,eax
  41f99d:	mov    ebp,0xb4a9175a
  41f9a2:	jmp    0x41f95c
  41f9a4:	ja     0x41f963
  41f9a6:	or     DWORD PTR [esi+0x3d128561],ecx
  41f9ac:	xor    al,0xb2
  41f9ae:	mov    cl,dh
  41f9b0:	std    
  41f9b1:	push   ebp
  41f9b2:	xor    cl,BYTE PTR [edi-0x1]
  41f9b5:	cmovo  ecx,DWORD PTR [edx+ecx*4]
  41f9b9:	out    0x54,al
  41f9bb:	in     al,0xe3
  41f9bd:	pop    cx
  41f9bf:	adc    esi,edi
  41f9c1:	test   BYTE PTR [eax-0x14],dl
  41f9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9c5:	mov    ds:0xd97fff37,eax
  41f9ca:	cdq    
  41f9cb:	push   0xffffffe1
  41f9cd:	loop   0x41f9c1
  41f9cf:	dec    edx
  41f9d0:	(bad)  
  41f9d1:	cs sahf 
  41f9d3:	xor    DWORD PTR [edx],0xe62293e4
  41f9d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9da:	push   ecx
  41f9db:	push   es
  41f9dc:	xchg   ebx,eax
  41f9dd:	push   ecx
  41f9de:	or     DWORD PTR ds:0xe435cd3b,eax
  41f9e4:	push   0xffffffe3
  41f9e6:	outs   dx,BYTE PTR ds:[esi]
  41f9e7:	and    al,0x67
  41f9e9:	gs scas eax,DWORD PTR es:[edi]
  41f9eb:	(bad)  
  41f9ec:	fist   WORD PTR [ebx]
  41f9ee:	jp     0x41f98a
  41f9f0:	frstor [ebp-0x473331f4]
  41f9f6:	rcl    BYTE PTR [ecx-0x2],1
  41f9f9:	mov    ebx,0x7455a8d8
  41f9fe:	ins    BYTE PTR es:[edi],dx
  41f9ff:	push   ebp
  41fa00:	jmp    0x41fa25
  41fa02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa03:	cmp    eax,0x9f97f332
  41fa08:	pop    esi
  41fa09:	scas   al,BYTE PTR es:[edi]
  41fa0a:	aad    0x32
  41fa0c:	xchg   esp,eax
  41fa0d:	in     al,0x17
  41fa0f:	mov    WORD PTR [ebx+0xe9dfaa7],gs
  41fa15:	mov    ds:0x5f4d2f70,al
  41fa1a:	mov    ebp,0xb8a2070a
  41fa1f:	jl     0x41fa29
  41fa21:	gs xor al,0x8f
  41fa24:	mov    cl,0xba
  41fa26:	mov    esi,DWORD PTR [edx]
  41fa28:	aam    0xd2
  41fa2a:	in     eax,dx
  41fa2b:	xchg   esp,eax
  41fa2c:	inc    ebx
  41fa2d:	retfw  0x8e45
  41fa31:	mov    esp,0xb8631e32
  41fa36:	lahf   
  41fa37:	xor    edi,DWORD PTR [edx]
  41fa39:	and    ch,bh
  41fa3b:	iret   
  41fa3c:	jo     0x41fa80
  41fa3e:	shr    DWORD PTR [ecx+ebx*8+0x68dc0204],1
  41fa45:	popa   
  41fa46:	pop    ss
  41fa47:	out    0x68,eax
  41fa49:	pop    edi
  41fa4a:	div    dh
  41fa4c:	into   
  41fa4d:	push   eax
  41fa4e:	int3   
  41fa4f:	int3   
  41fa50:	cmp    eax,ebp
  41fa52:	arpl   WORD PTR [edx+edx*1],di
  41fa55:	dec    ecx
  41fa56:	lock mov ah,BYTE PTR [eax]
  41fa59:	test   BYTE PTR [edi+0x7d],bh
  41fa5c:	cmp    ebp,DWORD PTR [ebx]
  41fa5e:	lock xor BYTE PTR [edi+0x73],dl
  41fa62:	cmc    
  41fa63:	cmp    BYTE PTR ds:0x150f04e6,ch
  41fa69:	and    dh,BYTE PTR [edi-0xb]
  41fa6c:	fadd   QWORD PTR [ebx]
  41fa6e:	(bad)  
  41fa70:	hlt    
  41fa71:	jle    0x41fa7c
  41fa73:	sti    
  41fa74:	pop    edx
  41fa75:	repnz (bad) 
  41fa77:	aad    0xc7
  41fa79:	mov    BYTE PTR [esi+0x64958acc],dl
  41fa7f:	xchg   BYTE PTR [edi],cl
  41fa81:	loope  0x41fad2
  41fa83:	xchg   edi,eax
  41fa84:	pop    esi
  41fa85:	test   eax,ecx
  41fa87:	xchg   ebx,eax
  41fa88:	ret    0x4bc6
  41fa8b:	out    dx,eax
  41fa8c:	loop   0x41fa54
  41fa8e:	mov    ch,0x1f
  41fa90:	mov    al,ds:0x76996274
  41fa95:	dec    edi
  41fa96:	in     al,dx
  41fa97:	test   DWORD PTR [edx+0x35],0xed5a5a89
  41fa9e:	fiadd  DWORD PTR [ebp+0x63]
  41faa1:	adc    BYTE PTR [esi],dl
  41faa3:	ret    0x3231
  41faa6:	xor    al,0x96
  41faa8:	sti    
  41faa9:	int    0x75
  41faab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faac:	cmp    al,0x32
  41faae:	in     al,dx
  41faaf:	mov    dl,0x66
  41fab1:	or     ch,BYTE PTR ds:0x5062d45b
  41fab7:	xchg   edx,eax
  41fab8:	nop
  41fab9:	lea    esp,[esi+0x10]
  41fabc:	cmp    eax,DWORD PTR [esi-0x77cd0769]
  41fac2:	mov    bh,0xf7
  41fac4:	int3   
  41fac5:	pop    esi
  41fac6:	push   0x1
  41fac8:	in     eax,0x18
  41faca:	xor    BYTE PTR [ecx+0x28],ch
  41facd:	ror    DWORD PTR [edx],1
  41facf:	jp     0x41fad2
  41fad1:	ins    BYTE PTR es:[edi],dx
  41fad2:	pop    ds
  41fad3:	mov    al,ds:0xe0341fc2
  41fad8:	jae    0x41fab1
  41fada:	test   eax,0x7907c3a8
  41fadf:	test   BYTE PTR ds:0xad244bb7,ah
  41fae5:	jp     0x41fad1
  41fae7:	mov    esi,0x1ea225e6
  41faec:	or     eax,0x4a9066ca
  41faf1:	pop    esp
  41faf2:	cdq    
  41faf3:	pop    ecx
  41faf4:	sar    ecx,1
  41faf6:	xor    al,BYTE PTR [ebp+0x250ae942]
  41fafc:	shl    al,0xe5
  41faff:	in     al,dx
  41fb00:	xchg   edi,eax
  41fb01:	xchg   ebp,eax
  41fb02:	add    al,BYTE PTR [esp+ebx*4]
  41fb05:	pop    edx
  41fb06:	int    0x55
  41fb08:	pop    esp
  41fb09:	xor    eax,0x1744c898
  41fb0e:	mov    ds:0xbd5360cb,eax
  41fb13:	sbb    ebx,DWORD PTR [edx]
  41fb15:	mov    al,0x27
  41fb17:	mov    ?,WORD PTR [eax-0x29d1f21b]
  41fb1d:	rol    BYTE PTR [ecx+0x59843234],cl
  41fb23:	je     0x41fafb
  41fb25:	xor    BYTE PTR [ebx+0x615950dc],al
  41fb2b:	mov    eax,ds:0x768bf335
  41fb30:	jae    0x41fb37
  41fb32:	or     BYTE PTR [edi],dh
  41fb34:	or     dh,BYTE PTR [edi+0x1d]
  41fb37:	add    al,0xff
  41fb39:	dec    esi
  41fb3a:	loopne 0x41fac8
  41fb3c:	int    0x74
  41fb3e:	aaa    
  41fb3f:	and    BYTE PTR [eax+0x3b8cf643],ch
  41fb45:	out    0x58,eax
  41fb47:	cmc    
  41fb48:	jno    0x41faf7
  41fb4a:	dec    edi
  41fb4b:	call   FWORD PTR [edi*2+0x1f21aa70]
  41fb52:	cmp    DWORD PTR [edx],eax
  41fb54:	jae    0x41fb30
  41fb56:	or     DWORD PTR [eax+0x3c],edx
  41fb59:	ins    BYTE PTR es:[edi],dx
  41fb5a:	dec    esi
  41fb5b:	sub    BYTE PTR [ebx-0x4583c620],cl
  41fb61:	sti    
  41fb62:	test   DWORD PTR [edx-0x7cfcbcb5],ebx
  41fb68:	xor    al,0x2c
  41fb6a:	das    
  41fb6b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41fb6d:	jns    0x41fbd2
  41fb6f:	inc    ebp
  41fb70:	jg     0x41fba5
  41fb72:	jno    0x41fb2d
  41fb74:	call   0x2d88b436
  41fb79:	sti    
  41fb7a:	gs sti 
  41fb7c:	inc    esi
  41fb7d:	push   esi
  41fb7e:	mov    bl,0x58
  41fb80:	and    eax,0x1e9cd55e
  41fb85:	retf   
  41fb86:	and    cl,BYTE PTR gs:[esi+0x61]
  41fb8a:	out    dx,al
  41fb8b:	xor    BYTE PTR [edi-0x33534168],dh
  41fb91:	xor    esi,eax
  41fb93:	sub    eax,0xf889274d
  41fb98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb99:	(bad)  
  41fb9a:	dec    esi
  41fb9b:	xor    ah,BYTE PTR [edi+0x72]
  41fb9e:	fcom   DWORD PTR ds:0xbce23ea1
  41fba4:	lods   eax,DWORD PTR ds:[esi]
  41fba5:	out    0x88,eax
  41fba7:	ret    0xc912
  41fbaa:	sbb    BYTE PTR [esi+ecx*2-0x3363bd2c],bl
  41fbb1:	clc    
  41fbb2:	stos   BYTE PTR es:[edi],al
  41fbb3:	sbb    BYTE PTR [esi-0x33],ah
  41fbb6:	retf   0xa440
  41fbb9:	mov    bl,0x81
  41fbbb:	xchg   ecx,eax
  41fbbc:	xor    ebx,DWORD PTR [eax+edx*2+0x58a8c3a1]
  41fbc3:	imul   esp,DWORD PTR [ecx],0x7fdf4efd
  41fbc9:	stos   DWORD PTR es:[edi],eax
  41fbca:	push   es
  41fbcb:	jmp    0x807f:0x2adade1a
  41fbd2:	fdivp  st(0),st
  41fbd4:	(bad)  
  41fbd5:	xchg   esi,eax
  41fbd6:	mov    ebx,0xf87330e9
  41fbdb:	out    0x3e,al
  41fbdd:	mov    dl,0xb3
  41fbdf:	test   BYTE PTR [eax-0x775a4f28],dl
  41fbe5:	cli    
  41fbe6:	sti    
  41fbe7:	lods   eax,DWORD PTR ds:[esi]
  41fbe8:	and    al,0x4b
  41fbea:	push   esi
  41fbeb:	ja     0x41fbb9
  41fbed:	cmp    DWORD PTR [ebp+0x58328e90],esi
  41fbf3:	cdq    
  41fbf4:	adc    DWORD PTR [edx],esp
  41fbf6:	cmp    edi,DWORD PTR [edi+0x8fa6120]
  41fbfc:	push   cs
  41fbfd:	daa    
  41fbfe:	mov    eax,0x3dadbd4b
  41fc03:	add    BYTE PTR [edx+0x3bf41f36],0x37
  41fc0a:	rcr    BYTE PTR ds:0x1d714178,0xdf
  41fc11:	pop    ecx
  41fc12:	or     eax,0xd7239727
  41fc17:	mov    eax,0x6710735c
  41fc1c:	adc    al,0x39
  41fc1e:	inc    ebx
  41fc1f:	lods   eax,DWORD PTR ds:[esi]
  41fc20:	ret    
  41fc21:	pop    eax
  41fc22:	loopne 0x41fbc9
  41fc24:	dec    esp
  41fc25:	outs   dx,DWORD PTR ds:[esi]
  41fc26:	nop
  41fc27:	test   al,0x8c
  41fc29:	addr16 gs pop edx
  41fc2c:	bound  ecx,QWORD PTR [eax-0x2377826f]
  41fc32:	or     al,BYTE PTR [ecx+0x42]
  41fc35:	int3   
  41fc36:	imul   edx,DWORD PTR [esi-0x6b],0xa08c6269
  41fc3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc3f:	cmp    al,0x21
  41fc41:	push   esi
  41fc42:	and    bl,BYTE PTR [ebx+0x6f]
  41fc45:	jae    0x41fc62
  41fc47:	sbb    esp,ebx
  41fc49:	mov    bh,0x80
  41fc4b:	pop    ds
  41fc4c:	sub    BYTE PTR ds:0x9892f678,dh
  41fc52:	js     0x41fc63
  41fc54:	sub    BYTE PTR [ebx+0x28b41f86],0x61
  41fc5b:	mov    ds:0x58c59af6,al
  41fc60:	aaa    
  41fc61:	xchg   BYTE PTR [edi-0x4f07dc61],ah
  41fc67:	fst    QWORD PTR [ecx]
  41fc69:	lods   al,BYTE PTR ds:[esi]
  41fc6a:	stc    
  41fc6b:	fiadd  DWORD PTR [ebp+0x42]
  41fc6e:	int    0x83
  41fc70:	jmp    0xe590d77f
  41fc75:	lds    edx,FWORD PTR [esi]
  41fc77:	or     ah,BYTE PTR [esp+ebp*4]
  41fc7a:	push   0x63a0abf4
  41fc7f:	inc    esi
  41fc80:	ret    0x2f12
  41fc83:	sub    ebx,ecx
  41fc85:	pop    esi
  41fc86:	retf   
  41fc87:	adc    al,0x1d
  41fc89:	fidivr WORD PTR [ebx-0x66]
  41fc8c:	retf   
  41fc8d:	rol    BYTE PTR ds:0x202fbbab,cl
  41fc93:	stos   BYTE PTR es:[edi],al
  41fc94:	cmp    DWORD PTR [edx],ebx
  41fc96:	sbb    al,BYTE PTR [edx]
  41fc98:	mov    al,ds:0xb192bc84
  41fc9d:	lock sub dh,BYTE PTR [edi-0x3e]
  41fca1:	fst    DWORD PTR [ebp-0x54]
  41fca4:	mov    ebp,0xd35d9e7
  41fca9:	and    esi,ebp
  41fcab:	(bad)  
  41fcac:	pop    ss
  41fcad:	lea    eax,[eax]
  41fcaf:	xchg   edx,eax
  41fcb0:	push   esi
  41fcb1:	shl    DWORD PTR [esi-0x6e],cl
  41fcb4:	ins    DWORD PTR es:[edi],dx
  41fcb5:	div    DWORD PTR es:[ebx-0x7ec27769]
  41fcbc:	js     0x41fd15
  41fcbe:	jo     0x41fc64
  41fcc0:	(bad)  
  41fcc1:	mov    edx,0x63bea704
  41fcc6:	adc    eax,0xe2db6a9d
  41fccb:	mov    cl,BYTE PTR [edi+0x65c5752f]
  41fcd1:	adc    esi,DWORD PTR cs:[eax+ebp*2-0x23]
  41fcd6:	add    DWORD PTR [eax+0x5f35b070],ebp
  41fcdc:	xchg   ecx,eax
  41fcdd:	mov    edx,0x7f38aebb
  41fce2:	enter  0xb333,0xcc
  41fce6:	sbb    al,0x87
  41fce8:	in     eax,dx
  41fce9:	arpl   WORD PTR [ecx+ecx*2+0x2dc2000d],bp
  41fcf0:	inc    ebx
  41fcf1:	cs push edx
  41fcf3:	test   al,0x8
  41fcf5:	or     esp,esi
  41fcf7:	xor    al,0xc2
  41fcf9:	jbe    0x41fd49
  41fcfb:	(bad)  
  41fcfc:	jge    0x41fd28
  41fcfe:	inc    ecx
  41fcff:	test   al,0x36
  41fd01:	enter  0xdde1,0x7d
  41fd05:	loope  0x41fc87
  41fd07:	rcr    cl,cl
  41fd09:	mov    ds:0x19a8fddc,eax
  41fd0e:	ficom  DWORD PTR [esi-0x33d2563c]
  41fd14:	sbb    esp,edi
  41fd16:	xlat   BYTE PTR ds:[ebx]
  41fd17:	and    eax,0xbc1d779a
  41fd1c:	test   DWORD PTR [edx],ecx
  41fd1e:	mov    edi,0x9b1a6c9d
  41fd23:	fiadd  WORD PTR [esi]
  41fd25:	sub    DWORD PTR [ebp-0x80],0xffffffc3
  41fd29:	push   edx
  41fd2a:	inc    edi
  41fd2b:	das    
  41fd2c:	sahf   
  41fd2d:	jo     0x41fcb1
  41fd2f:	iret   
  41fd30:	pusha  
  41fd31:	jb     0x41fd4c
  41fd33:	in     eax,dx
  41fd34:	cld    
  41fd35:	pop    edx
  41fd36:	xor    ch,BYTE PTR [edx]
  41fd38:	aas    
  41fd39:	enter  0xd0c8,0x82
  41fd3d:	adc    al,BYTE PTR [ebx+0x2688e78d]
  41fd43:	jp     0x41fd0f
  41fd45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd46:	add    bh,BYTE PTR [ebp-0x74]
  41fd49:	cmp    al,BYTE PTR ds:0x257d0f2d
  41fd4f:	les    eax,FWORD PTR [eax-0x1223119f]
  41fd55:	das    
  41fd56:	xor    al,0x32
  41fd58:	stos   DWORD PTR es:[edi],eax
  41fd59:	stos   DWORD PTR es:[edi],eax
  41fd5a:	ret    0x8c99
  41fd5d:	xchg   ebx,eax
  41fd5e:	call   0x7c459a17
  41fd63:	jle    0x41fd6e
  41fd65:	(bad)  
  41fd66:	(bad)  
  41fd67:	int3   
  41fd68:	push   ecx
  41fd69:	push   es
  41fd6a:	pop    ecx
  41fd6b:	stos   DWORD PTR es:[edi],eax
  41fd6c:	(bad)  
  41fd6e:	dec    ebx
  41fd6f:	pop    es
  41fd70:	pop    ecx
  41fd71:	adc    BYTE PTR [eax-0x419a3f2a],ch
  41fd77:	pop    esi
  41fd78:	dec    esi
  41fd79:	or     eax,0x9d631de0
  41fd7e:	and    eax,edi
  41fd80:	aam    0x20
  41fd82:	aad    0xe5
  41fd84:	ds mov ebx,0xe8eb89a5
  41fd8a:	adc    al,bh
  41fd8c:	xor    esp,DWORD PTR [esi+0x28be6014]
  41fd92:	pop    ecx
  41fd93:	fidiv  DWORD PTR [ecx]
  41fd95:	shr    DWORD PTR [esi+0x30],0x8e
  41fd99:	mov    dl,BYTE PTR [edi-0x1328efd2]
  41fd9f:	in     al,0xf8
  41fda1:	adc    al,0x2e
  41fda3:	dec    edx
  41fda4:	sbb    eax,0x6d46b91e
  41fda9:	sahf   
  41fdaa:	mov    dh,0x9d
  41fdac:	mov    dh,0xe1
  41fdae:	(bad)  
  41fdaf:	mov    ds:0x39aa3bea,al
  41fdb4:	mov    ebp,0xe31fffbe
  41fdb9:	sub    eax,0x18792da9
  41fdbe:	mov    bl,0x23
  41fdc0:	adc    al,bh
  41fdc2:	push   cs
  41fdc3:	jmp    0x6201:0x31590a41
  41fdca:	xchg   ecx,eax
  41fdcb:	jmp    0x334fd022
  41fdd0:	and    al,0x46
  41fdd2:	dec    edx
  41fdd3:	inc    edi
  41fdd4:	mov    ds:0xeba30c6a,al
  41fdd9:	addr16 pop esp
  41fddb:	xchg   ebp,eax
  41fddc:	out    dx,eax
  41fddd:	call   0x19b0:0x16c6c846
  41fde4:	call   0xef9b2693
  41fde9:	fs retf 0x855d
  41fded:	sbb    ebx,esi
  41fdef:	ret    0x93f6
  41fdf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdf3:	xor    BYTE PTR [esp+ebx*1+0x18],dh
  41fdf7:	adc    eax,0x82093bd5
  41fdfc:	out    0xe5,eax
  41fdfe:	inc    ebp
  41fdff:	repz dec ebp
  41fe01:	call   0x9c08:0x97b2b61b
  41fe08:	fld    DWORD PTR [ebx+0x5ac3c92c]
  41fe0e:	pop    ebp
  41fe0f:	cmp    cl,al
  41fe11:	jne    0x41fdf4
  41fe13:	sub    BYTE PTR [eax-0x44f19d05],0x10
  41fe1a:	inc    ecx
  41fe1b:	cmp    eax,0x32b74628
  41fe20:	mov    ah,0x47
  41fe22:	inc    esi
  41fe23:	fwait
  41fe24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe25:	adc    esi,DWORD PTR [ebp+0x59]
  41fe28:	and    ebx,DWORD PTR [edx+ebp*2]
  41fe2b:	ins    BYTE PTR es:[edi],dx
  41fe2c:	fdiv   st(0),st
  41fe2e:	and    DWORD PTR [eax+0xdc689f6],0x29
  41fe35:	pushf  
  41fe36:	pushf  
  41fe37:	xchg   ebp,eax
  41fe38:	push   ebx
  41fe39:	mov    DWORD PTR [ecx],eax
  41fe3b:	imul   ecx,edi,0x55
  41fe3e:	or     edi,esp
  41fe40:	push   es
  41fe41:	iret   
  41fe42:	cmp    edx,0x72
  41fe45:	fldenv [ebp+0x52]
  41fe48:	(bad)  
  41fe4a:	push   0xe0313d79
  41fe4f:	jecxz  0x41fec3
  41fe51:	sahf   
  41fe52:	into   
  41fe53:	cmp    DWORD PTR [edx-0x5e5f917a],0xffffff85
  41fe5a:	sbb    ecx,DWORD PTR [edx+0x16a9bcac]
  41fe60:	sbb    esi,DWORD PTR [esi*2-0x3702ba35]
  41fe67:	(bad)  
  41fe68:	mov    eax,0x75685e3b
  41fe6d:	call   0xa354:0x31836260
  41fe74:	cdq    
  41fe75:	aad    0xb
  41fe77:	outs   dx,DWORD PTR ds:[esi]
  41fe78:	(bad)  
  41fe79:	std    
  41fe7a:	cmp    BYTE PTR [edi+esi*2+0x39424f2],bh
  41fe81:	das    
  41fe82:	push   ecx
  41fe83:	repnz mul BYTE PTR [edi-0x5b]
  41fe87:	jp     0x41fe29
  41fe89:	pop    ebp
  41fe8a:	sbb    eax,0xde405022
  41fe8f:	and    eax,0x2e85d834
  41fe94:	mov    eax,ds:0x46cd15a5
  41fe99:	leave  
  41fe9a:	adc    dl,dl
  41fe9c:	lds    eax,FWORD PTR [ecx+0x4857a99e]
  41fea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fea3:	sub    al,0x7
  41fea5:	dec    eax
  41fea6:	pop    ecx
  41fea7:	jnp    0x41fe5f
  41fea9:	jmp    0x41fe9b
  41feab:	push   edi
  41feac:	pop    esi
  41fead:	fld    QWORD PTR [ebp+0x37142d5c]
  41feb3:	dec    eax
  41feb4:	and    eax,DWORD PTR [edx-0x75]
  41feb7:	jp     0x41ff26
  41feb9:	jae    0x41ff10
  41febb:	or     ebx,DWORD PTR [edx]
  41febd:	cli    
  41febe:	xchg   ebp,eax
  41febf:	cmp    bl,dl
  41fec1:	mov    DWORD PTR [esi+ebx*2],edi
  41fec4:	(bad)  
  41fec5:	jmp    0x48de:0x5b3d5ab6
  41fecc:	and    eax,0x71cf9dec
  41fed1:	jns    0x41fee6
  41fed3:	inc    edi
  41fed4:	sbb    al,BYTE PTR [ecx-0x41112e83]
  41feda:	jge    0x41fee2
  41fedc:	mov    ebp,0x36eaf051
  41fee1:	jb     0x41fead
  41fee3:	popf   
  41fee4:	mov    esi,0x7affab3b
  41fee9:	stc    
  41feea:	cli    
  41feeb:	fcom   QWORD PTR [esi+0x7429b5ea]
  41fef1:	jle    0x41feb9
  41fef3:	retf   0xf5be
  41fef6:	mov    ecx,DWORD PTR [edx-0x4913bd24]
  41fefc:	xchg   DWORD PTR [ecx],esp
  41fefe:	test   ebx,eax
  41ff00:	jmp    0x7b468972
  41ff05:	xchg   DWORD PTR [eax+0x13388caa],esi
  41ff0b:	pop    edx
  41ff0c:	into   
  41ff0d:	pop    edi
  41ff0e:	mov    al,0x70
  41ff10:	or     al,0x9e
  41ff12:	test   eax,0x4761892b
  41ff17:	sbb    BYTE PTR [ecx+0x2765d78c],0x58
  41ff1e:	or     cl,ah
  41ff20:	sar    ah,1
  41ff22:	add    bh,BYTE PTR [ebp-0x44]
  41ff25:	(bad)  [edx-0x25]
  41ff28:	addr16 lock mov eax,ds:0x6d19
  41ff2d:	mov    bh,0xb8
  41ff2f:	sbb    eax,0xc9f25b1f
  41ff34:	nop
  41ff35:	jne    0x41ff9d
  41ff37:	call   0x1d23b2c6
  41ff3c:	les    ebx,FWORD PTR [edi+0x4e2a977f]
  41ff42:	dec    edx
  41ff43:	jg     0x41ff6e
  41ff45:	adc    BYTE PTR [eax-0x18],0x30
  41ff49:	mov    ch,0x50
  41ff4b:	(bad)  
  41ff4d:	and    ecx,0xffffff9e
  41ff50:	test   eax,0x9b6cd61d
  41ff55:	sbb    al,0xe8
  41ff57:	jno    0x41ffc7
  41ff59:	bound  esi,QWORD PTR [edi-0x64]
  41ff5c:	dec    eax
  41ff5d:	addr16 pop es
  41ff5f:	and    DWORD PTR [ecx],ebx
  41ff61:	aam    0x3a
  41ff63:	adc    al,0x80
  41ff65:	pop    ss
  41ff66:	jns    0x41ff89
  41ff68:	lods   al,BYTE PTR ds:[esi]
  41ff69:	jle    0x41fefd
  41ff6b:	stos   DWORD PTR es:[edi],eax
  41ff6c:	aas    
  41ff6d:	adc    eax,0xb17d1fb3
  41ff72:	in     eax,0xc2
  41ff74:	sub    DWORD PTR [esi-0x55746964],0xffffffec
  41ff7b:	adc    DWORD PTR [ecx-0x42],edx
  41ff7e:	in     al,0x81
  41ff80:	test   ch,0xaf
  41ff83:	call   0xb4d4:0x7902f5eb
  41ff8a:	sub    dl,0x3a
  41ff8d:	imul   ebx,DWORD PTR [edx+0x5f0a8a99],0xffffff9a
  41ff94:	loope  0x41ff49
  41ff96:	pushf  
  41ff97:	jo     0x41ffde
  41ff99:	stos   BYTE PTR es:[edi],al
  41ff9a:	inc    edx
  41ff9b:	push   edi
  41ff9c:	(bad)  [ebx+0x2f]
  41ff9f:	cmp    ebx,DWORD PTR [ecx]
  41ffa1:	scas   al,BYTE PTR es:[edi]
  41ffa2:	xchg   esp,eax
  41ffa3:	cli    
  41ffa4:	shr    bh,cl
  41ffa6:	(bad)  
  41ffa8:	test   DWORD PTR [esi-0x3a5d3f2],ebp
  41ffae:	mov    bh,0x3e
  41ffb0:	popa   
  41ffb1:	inc    edi
  41ffb2:	pop    ss
  41ffb3:	jmp    0xf6de8b9c
  41ffb8:	and    DWORD PTR [edx-0x66e114e0],0x3f8dda20
  41ffc2:	nop
  41ffc3:	(bad)
  41ffc6:	test   ah,dl
  41ffc8:	daa    
  41ffc9:	repz dec edx
  41ffcb:	or     BYTE PTR [ecx+edi*1-0x36],0x51
  41ffd0:	clc    
  41ffd1:	xchg   esi,eax
  41ffd2:	sahf   
  41ffd3:	out    dx,eax
  41ffd4:	out    0x62,eax
  41ffd6:	xor    al,0x5a
  41ffd8:	jno    0x41ff64
  41ffda:	sub    BYTE PTR [edx],al
  41ffdc:	push   cs
  41ffdd:	xchg   edx,eax
  41ffde:	test   eax,0xe5a8e11e
  41ffe3:	or     edx,ecx
  41ffe5:	ss out 0x5f,eax
  41ffe8:	rol    ebp,1
  41ffea:	xor    DWORD PTR [eax],esi
  41ffec:	jecxz  0x420002
  41ffee:	dec    eax
  41ffef:	fimul  WORD PTR [edx]
  41fff1:	es adc ecx,ecx
  41fff4:	mov    dl,0x21
  41fff6:	push   cs
  41fff7:	stos   DWORD PTR es:[edi],eax
  41fff8:	or     eax,0xf2d9f964
  41fffd:	dec    esi
  41fffe:	stos   BYTE PTR es:[edi],al
  41ffff:	rcr    ebx,1
  420001:	jmp    0xf42c:0x4c6d586b
  420008:	fstp   st(5)
  42000a:	inc    esi
  42000b:	and    ah,ah
  42000d:	cmp    al,0xd0
  42000f:	icebp  
  420010:	push   0x4dc2fe5b
  420015:	mov    eax,ds:0x2cae187c
  42001a:	xchg   ebp,eax
  42001b:	inc    eax
  42001c:	outs   dx,DWORD PTR ds:[esi]
  42001d:	and    al,0xdd
  42001f:	inc    ecx
  420020:	cmp    eax,0xa3ae28bc
  420025:	sbb    DWORD PTR [ebx+0x1],ebp
  420028:	out    0x6e,al
  42002a:	imul   ebp,DWORD PTR [esi],0xffffffc3
  42002d:	xchg   edi,eax
  42002e:	inc    eax
  42002f:	fxtract 
  420031:	shl    BYTE PTR [ebp+0x52497561],cl
  420037:	and    al,BYTE PTR [ebp-0x77]
  42003a:	mov    ebx,0x1e84437f
  42003f:	pop    ebp
  420040:	dec    ecx
  420041:	nop
  420042:	fs push esi
  420044:	or     ecx,edi
  420046:	mov    dh,BYTE PTR [ecx]
  420048:	cmp    bl,BYTE PTR [edi]
  42004a:	loop   0x420079
  42004c:	mov    ebp,0x74ac14aa
  420051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420052:	push   esp
  420053:	arpl   dx,si
  420055:	pop    ebp
  420056:	es pop eax
  420058:	mov    di,0xcaf9
  42005c:	add    al,0x92
  42005e:	mov    ds:0x8337d2fc,al
  420063:	xchg   BYTE PTR [esi-0x1e],ah
  420066:	ret    0x9b1d
  420069:	addr16 int3 
  42006b:	aam    0x5c
  42006d:	inc    esp
  42006e:	dec    eax
  42006f:	or     BYTE PTR [ecx+0x77c87c4d],0x52
  420076:	data16 and BYTE PTR [ecx-0x38],0x9
  42007b:	mov    ah,0x7d
  42007d:	cmp    BYTE PTR [esi],al
  42007f:	add    BYTE PTR [edx-0x73],bh
  420082:	cmp    eax,0xfedbca38
  420087:	mov    ecx,0x54c0775a
  42008c:	lea    ebp,ds:[eax+0x76e0e31e]
  420093:	fwait
  420094:	cmp    edx,esp
  420096:	sahf   
  420097:	out    0x6b,al
  420099:	dec    ebx
  42009a:	out    dx,al
  42009b:	cwde   
  42009c:	dec    ecx
  42009d:	daa    
  42009e:	mov    dh,BYTE PTR [eax]
  4200a0:	and    ch,al
  4200a2:	dec    BYTE PTR [edi+0x7c]
  4200a5:	mov    dl,BYTE PTR [eax]
  4200a7:	cmp    eax,esi
  4200a9:	stc    
  4200aa:	xor    ebx,ebp
  4200ac:	adc    esi,esi
  4200ae:	fld    DWORD PTR [ebx]
  4200b0:	cmp    DWORD PTR [esi+0x7fe434c2],ebx
  4200b6:	icebp  
  4200b7:	jecxz  0x420050
  4200b9:	(bad)  
  4200ba:	adc    al,0x1f
  4200bc:	pop    ss
  4200bd:	jae    0x420100
  4200bf:	jmp    0x5e427ff7
  4200c4:	inc    eax
  4200c5:	mov    edi,0xdbfd04d0
  4200ca:	and    al,0x3c
  4200cc:	mov    ebp,0xaf031e6f
  4200d1:	add    BYTE PTR [ecx+0x31],0x31
  4200d5:	div    DWORD PTR [eax+0x65]
  4200d8:	jne    0x420125
  4200da:	sub    BYTE PTR ds:0x76635733,0x57
  4200e1:	mov    al,ds:0xc92b01bc
  4200e6:	fs out dx,eax
  4200e8:	mov    edi,0xcddff566
  4200ed:	arpl   WORD PTR [esi-0x8],bp
  4200f0:	adc    eax,DWORD PTR [ecx-0x21d87a35]
  4200f6:	sub    BYTE PTR [eax+0x22],bl
  4200f9:	adc    DWORD PTR [esi-0x4f476be5],ebx
  4200ff:	inc    edx
  420100:	push   es
  420101:	xlat   BYTE PTR ds:[ebx]
  420102:	push   edi
  420103:	leave  
  420104:	nop
  420105:	in     al,dx
  420106:	es xchg edx,eax
  420108:	aaa    
  420109:	in     eax,dx
  42010a:	jmp    0x42017d
  42010c:	icebp  
  42010d:	js     0x420177
  42010f:	outs   dx,DWORD PTR ds:[esi]
  420110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420111:	or     BYTE PTR [ebp+0x6be51f20],ch
  420117:	mov    esi,0x3a1d23ba
  42011c:	loop   0x420146
  42011e:	mov    edx,0x69efb217
  420123:	xor    DWORD PTR [ebx],ebx
  420125:	mov    cl,BYTE PTR ds:0xad70e875
  42012b:	xor    ecx,DWORD PTR [ebx+0x2af7b70f]
  420131:	cli    
  420132:	stos   DWORD PTR es:[edi],eax
  420133:	add    al,BYTE PTR [eax]
  420135:	js     0x42017f
  420137:	add    bl,ch
  420139:	(bad)  
  42013a:	mov    ebp,0x5898bfc
  42013f:	ins    DWORD PTR es:[edi],dx
  420140:	fs pop ss
  420142:	test   BYTE PTR [ebx+0x1d320d5f],dh
  420148:	sahf   
  420149:	ds je  0x420135
  42014c:	push   ss
  42014d:	out    0x79,al
  42014f:	fdiv   QWORD PTR [esp+ebx*1+0x4a]
  420153:	mov    dl,0x7
  420155:	jp     0x42014d
  420157:	xchg   edi,eax
  420158:	imul   edi,DWORD PTR ss:[ebp+0x487993b7],0xffffff94
  420160:	leave  
  420161:	mov    cl,0x5b
  420163:	leave  
  420164:	cli    
  420165:	stc    
  420166:	mov    WORD PTR ds:0x4052699c,fs
  42016c:	jbe    0x420154
  42016e:	pop    ebx
  42016f:	jns    0x420131
  420171:	mov    eax,0xa0a510f6
  420176:	xor    edi,DWORD PTR [eax]
  420178:	push   eax
  420179:	fadd   st,st(3)
  42017b:	cmc    
  42017c:	xchg   esi,eax
  42017d:	sub    bl,bl
  42017f:	iret   
  420180:	cdq    
  420181:	mov    ch,0x4f
  420183:	rcr    BYTE PTR ds:0x27592260,0x46
  42018a:	lea    ebx,[esi+0x69]
  42018d:	sti    
  42018e:	scas   eax,DWORD PTR es:[edi]
  42018f:	retw   0xc576
  420193:	sub    dl,BYTE PTR [eax+0x2]
  420196:	fwait
  420197:	scas   eax,DWORD PTR es:[edi]
  420198:	push   0xdee4dc9e
  42019d:	je     0x42020c
  42019f:	ins    DWORD PTR es:[edi],dx
  4201a0:	fwait
  4201a1:	sar    DWORD PTR [esi+0x1544f444],1
  4201a7:	stos   DWORD PTR es:[edi],eax
  4201a8:	fcomi  st,st(3)
  4201aa:	sar    DWORD PTR [edi],cl
  4201ac:	adc    eax,0xecba5c1a
  4201b1:	test   BYTE PTR [edi],dh
  4201b3:	pop    ss
  4201b4:	mov    bh,0xc5
  4201b6:	mov    WORD PTR [ebx-0xc],gs
  4201b9:	adc    ah,bl
  4201bb:	xchg   ebx,eax
  4201bc:	sar    ebx,0xfe
  4201bf:	xor    DWORD PTR [eax-0x6c],edx
  4201c2:	or     BYTE PTR [eax+eax*1+0x5b],0x9e
  4201c7:	jecxz  0x420223
  4201c9:	xor    edi,edx
  4201cb:	popf   
  4201cc:	imul   edi,eax,0x60eea5b2
  4201d2:	fs nop
  4201d4:	sbb    eax,0x53cb51b0
  4201d9:	aaa    
  4201da:	shl    BYTE PTR [edi+0x27],1
  4201dd:	dec    ebx
  4201de:	mov    dh,0x1b
  4201e0:	or     BYTE PTR [esi-0x69],0xcd
  4201e4:	jmp    DWORD PTR [edi]
  4201e6:	aad    0x11
  4201e8:	or     al,BYTE PTR [esi]
  4201ea:	push   ebp
  4201eb:	push   ebx
  4201ec:	cmc    
  4201ed:	test   BYTE PTR [esi-0x73],al
  4201f0:	sbb    BYTE PTR [eax-0x779ff879],bl
  4201f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201f7:	cmp    cl,bh
  4201f9:	dec    esp
  4201fa:	fistp  QWORD PTR [ebp-0x5f269c45]
  420200:	pushf  
  420201:	test   al,0x81
  420203:	inc    edx
  420204:	sbb    DWORD PTR [ebx-0x14ad559],ebp
  42020a:	shr    DWORD PTR [ebp-0xbad9f6d],0xf9
  420211:	dec    eax
  420212:	loopne 0x420267
  420214:	leave  
  420215:	jnp    0x420277
  420217:	ret    
  420218:	mov    dh,0xa2
  42021a:	sbb    ch,ah
  42021c:	fidivr DWORD PTR [esi]
  42021e:	lahf   
  42021f:	cmp    ecx,DWORD PTR [esi-0x7a3184d]
  420225:	into   
  420226:	xchg   ecx,eax
  420227:	pop    edi
  420228:	retf   
  420229:	and    BYTE PTR gs:[eax+0x19],bl
  42022d:	test   esp,edx
  42022f:	xchg   ecx,eax
  420230:	fdiv   QWORD PTR [esi-0x2b]
  420233:	dec    ebp
  420234:	mov    dl,0x7b
  420236:	sub    BYTE PTR [edx-0x6dc7a01d],ah
  42023c:	and    al,BYTE PTR [ebx+eiz*8+0x1863eba8]
  420243:	mov    bl,0x97
  420245:	adc    al,0x83
  420247:	aas    
  420248:	in     al,dx
  420249:	xor    eax,0xa5a2609b
  42024e:	xchg   edi,eax
  42024f:	ss into 
  420251:	std    
  420252:	not    DWORD PTR ds:0x11e5fe02
  420258:	xor    bh,BYTE PTR [ebx-0x5efe81a6]
  42025e:	retf   0x36af
  420261:	inc    edx
  420262:	jne    0x4202bc
  420264:	nop
  420265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420266:	repnz stc 
  420268:	pop    ebp
  420269:	sbb    al,0xa
  42026b:	pop    ebx
  42026c:	fcom   QWORD PTR [esi+0x4436ea58]
  420272:	push   ecx
  420273:	adc    BYTE PTR [edi+0x8],ch
  420276:	mov    edi,DWORD PTR [ebp-0x6a]
  420279:	fucomi st,st(3)
  42027b:	icebp  
  42027c:	aaa    
  42027d:	in     ax,dx
  42027f:	test   al,0x2
  420281:	inc    eax
  420282:	pop    esi
  420283:	(bad)  
  420284:	inc    eax
  420285:	iret   
  420286:	iret   
  420287:	cmc    
  420288:	sub    bl,BYTE PTR [ebp-0x5169ae74]
  42028e:	call   DWORD PTR [ecx]
  420290:	gs pop esi
  420292:	popa   
  420293:	pop    edi
  420294:	into   
  420295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420296:	ja     0x4202e7
  420298:	inc    eax
  420299:	jle    0x420285
  42029b:	clc    
  42029c:	ficomp WORD PTR [ecx]
  42029e:	jle    0x42026b
  4202a0:	sbb    edi,DWORD PTR [esi+ebx*8+0x7436fff7]
  4202a7:	imul   ecx,esi,0x9011fdf
  4202ad:	dec    eax
  4202ae:	mov    ?,WORD PTR [edi]
  4202b0:	stos   DWORD PTR es:[edi],eax
  4202b1:	jae    0x420244
  4202b3:	add    BYTE PTR [ebp+0x5141896c],ch
  4202b9:	sub    BYTE PTR [esi+0xe],bl
  4202bc:	popf   
  4202bd:	rcr    DWORD PTR [eax-0x26],1
  4202c0:	dec    edx
  4202c1:	hlt    
  4202c2:	jbe    0x42030f
  4202c4:	xchg   edx,eax
  4202c5:	std    
  4202c6:	ja     0x42029f
  4202c8:	xchg   ebx,eax
  4202c9:	scas   eax,DWORD PTR es:[edi]
  4202ca:	shl    DWORD PTR [eax-0x5e66fb39],0x46
  4202d1:	scas   al,BYTE PTR es:[edi]
  4202d2:	int    0xa5
  4202d4:	jge    0x4202c4
  4202d6:	ins    DWORD PTR es:[edi],dx
  4202d7:	xchg   ebp,eax
  4202d8:	xchg   ebx,eax
  4202d9:	mov    esp,0x5391abc
  4202de:	out    dx,eax
  4202df:	xor    BYTE PTR [edi+0x366fb416],0x1
  4202e6:	inc    ecx
  4202e7:	ds in  eax,0x8f
  4202ea:	mov    bh,0x2f
  4202ec:	push   esp
  4202ed:	add    DWORD PTR [edx],ebp
  4202ef:	mov    ch,0x24
  4202f1:	nop
  4202f2:	outs   dx,BYTE PTR ds:[esi]
  4202f3:	pop    esi
  4202f4:	xchg   edx,eax
  4202f5:	std    
  4202f6:	sub    eax,0xd39c6d8c
  4202fb:	dec    ebp
  4202fc:	push   ds
  4202fd:	addr16 add dh,0xe2
  420301:	test   BYTE PTR [edx],bh
  420303:	sub    ch,dl
  420305:	idiv   BYTE PTR [ecx]
  420307:	pop    edx
  420308:	sbb    esi,DWORD PTR [ebp+0x53]
  42030b:	retf   
  42030c:	in     eax,0xa7
  42030e:	leave  
  42030f:	pop    edx
  420310:	xchg   edi,eax
  420311:	mov    WORD PTR [ecx],?
  420313:	pop    ds
  420314:	clc    
  420315:	jmp    0x4202d2
  420317:	xchg   ebp,eax
  420318:	stos   DWORD PTR es:[edi],eax
  420319:	push   ecx
  42031a:	jmp    0x53c8:0xbc63b755
  420321:	aad    0xe
  420323:	mov    ch,0xc5
  420325:	mov    ah,0xc5
  420327:	push   esi
  420328:	mov    ebx,0xff1a9875
  42032d:	cmp    al,0xa4
  42032f:	scas   al,BYTE PTR es:[edi]
  420330:	xor    eax,0x9f03065c
  420335:	dec    ebp
  420336:	mov    al,0x3
  420338:	loopne 0x42038e
  42033a:	inc    ebx
  42033b:	pop    eax
  42033c:	std    
  42033d:	mov    ebp,0x35072b63
  420342:	dec    esp
  420343:	xchg   esi,eax
  420344:	pop    edi
  420345:	mov    eax,ds:0xbd474c74
  42034a:	es pop ecx
  42034c:	mov    bl,0x14
  42034e:	or     al,0xa2
  420350:	sub    ecx,DWORD PTR [esi+0x7e]
  420353:	and    eax,0x80b24f94
  420358:	hlt    
  420359:	pop    es
  42035a:	xor    BYTE PTR [esi],al
  42035c:	idiv   esp
  42035e:	dec    esp
  42035f:	aad    0xd5
  420361:	or     bl,BYTE PTR [edi-0x6136ba11]
  420367:	fst    st(0)
  420369:	mov    esp,0x6407958c
  42036e:	push   ds
  42036f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420370:	push   ss
  420371:	pop    ecx
  420372:	xchg   dl,cl
  420374:	sar    DWORD PTR [eax-0x62f87213],1
  42037a:	pop    edi
  42037b:	je     0x42032b
  42037d:	retf   0x3270
  420380:	inc    edx
  420381:	retf   
  420382:	(bad)  
  420383:	sahf   
  420384:	push   0x4d
  420386:	sub    al,0x74
  420388:	jne    0x420406
  42038a:	add    dh,bh
  42038c:	fist   WORD PTR [ecx+0x6c]
  42038f:	add    DWORD PTR [ecx+0x567600c1],edx
  420395:	xor    al,0x34
  420397:	or     bl,ch
  420399:	jo     0x420359
  42039b:	mov    BYTE PTR ds:0x8b67ed7a,ch
  4203a1:	inc    ebp
  4203a2:	out    dx,eax
  4203a3:	mov    eax,0x11da262a
  4203a8:	sbb    eax,0x34921189
  4203ad:	mov    ds:0x7a6533d2,eax
  4203b2:	jle    0x42039a
  4203b4:	fbld   TBYTE PTR [esi-0x6cce7579]
  4203ba:	xchg   esi,eax
  4203bb:	loopne 0x42036c
  4203bd:	push   edi
  4203be:	scas   al,BYTE PTR es:[edi]
  4203bf:	inc    edi
  4203c0:	jbe    0x4203cb
  4203c2:	xlat   BYTE PTR ds:[ebx]
  4203c3:	and    DWORD PTR [edx-0x678a2fc3],0x4af79049
  4203cd:	call   0x3c55:0xf3b937fc
  4203d4:	test   al,0x68
  4203d6:	fldcw  WORD PTR [eax-0x55aef304]
  4203dc:	ficomp WORD PTR [edx+ecx*2-0x4a]
  4203e0:	jmp    DWORD PTR [ecx]
  4203e2:	add    al,0x46
  4203e4:	mov    al,ds:0xabb49e47
  4203e9:	and    edx,ebp
  4203eb:	pop    ebx
  4203ec:	cmp    cl,BYTE PTR [ebx-0x7746710c]
  4203f2:	pushf  
  4203f3:	xchg   ebx,eax
  4203f4:	jp     0x420440
  4203f6:	or     ebx,DWORD PTR [ecx-0x20]
  4203f9:	fidiv  WORD PTR [ecx+0x1c]
  4203fc:	cdq    
  4203fd:	xchg   ebp,eax
  4203fe:	push   ebx
  4203ff:	shl    BYTE PTR [edi],0x3e
  420402:	mov    bh,0xda
  420404:	lods   eax,DWORD PTR ds:[esi]
  420405:	mov    dl,0xcf
  420407:	xor    BYTE PTR [esi+0x25b85979],0xe9
  42040e:	mov    WORD PTR [esi],?
  420410:	inc    esi
  420411:	sbb    DWORD PTR [ebx+0x5],edx
  420414:	mov    ecx,0x26c3781f
  420419:	ja     0x420461
  42041b:	pushf  
  42041c:	cmp    cl,BYTE PTR ds:[edx+0xa]
  420420:	paddw  mm4,QWORD PTR [ebx]
  420423:	bound  edx,QWORD PTR [ebp-0x23588c36]
  420429:	cs push eax
  42042b:	mov    ah,0xaf
  42042d:	add    esi,DWORD PTR [ecx+0x6d]
  420430:	stos   BYTE PTR es:[edi],al
  420431:	mov    BYTE PTR [edx],0x58
  420434:	jns    0x4203eb
  420436:	fwait
  420437:	inc    eax
  420438:	push   esi
  420439:	mov    cl,0x8f
  42043b:	test   DWORD PTR [esi+0x5a990780],0x82f805
  420445:	repz repnz repz adc bh,ah
  42044a:	inc    ecx
  42044b:	gs mov dl,0xa4
  42044e:	enter  0xeb10,0x3d
  420452:	jns    0x420470
  420454:	shr    DWORD PTR [esi+0x6c],1
  420457:	push   es
  420458:	sahf   
  420459:	add    DWORD PTR [eax-0x4722056a],esp
  42045f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420460:	inc    esp
  420461:	and    DWORD PTR [ecx+eax*4+0x5531ce6d],0x4cea572b
  42046c:	add    edx,edx
  42046e:	repnz leave 
  420470:	loope  0x4203f2
  420472:	es clc 
  420474:	sbb    al,BYTE PTR [esi+0x66]
  420477:	ja     0x4204c9
  420479:	mov    edi,0x5d5cb254
  42047e:	shr    DWORD PTR [ecx+0x78c31b37],1
  420484:	inc    ebx
  420485:	xchg   edx,eax
  420486:	add    BYTE PTR [eax+0x2b],ch
  420489:	sahf   
  42048a:	mov    ecx,0xa1fd8f38
  42048f:	xchg   edx,eax
  420490:	mov    BYTE PTR [di-0x7e],bl
  420494:	retf   
  420495:	lock push es
  420497:	sahf   
  420498:	dec    esp
  420499:	in     eax,dx
  42049a:	and    BYTE PTR [ebp+ebx*4-0x45fcc2bf],bl
  4204a1:	shl    DWORD PTR [edi+0x6d],1
  4204a4:	adc    al,0x2e
  4204a6:	(bad)  
  4204a7:	pop    esi
  4204a8:	mov    ds:0xafae3252,eax
  4204ad:	out    0x18,al
  4204af:	out    0xda,eax
  4204b1:	inc    ebx
  4204b2:	out    dx,al
  4204b3:	scas   al,BYTE PTR es:[edi]
  4204b4:	aam    0xe3
  4204b6:	sbb    al,0x2c
  4204b8:	sub    esp,DWORD PTR [edi+edx*1+0x44]
  4204bc:	sub    al,0x9
  4204be:	and    DWORD PTR [esi-0x3b],esi
  4204c1:	jl     0x420494
  4204c3:	and    DWORD PTR [edi-0xc098bed],eax
  4204c9:	in     al,dx
  4204ca:	mov    eax,edi
  4204cc:	mov    ?,WORD PTR [eax-0x2e]
  4204cf:	cmp    cl,dl
  4204d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204d2:	mov    ss:0xef5ad458,al
  4204d8:	xor    al,0x63
  4204da:	pop    esi
  4204db:	rol    BYTE PTR [edi+0x79ecaacb],cl
  4204e1:	mov    bh,dl
  4204e3:	adc    eax,0x7b8c8859
  4204e8:	fwait
  4204e9:	mov    cl,0x46
  4204eb:	dec    esp
  4204ec:	call   0xa00bf743
  4204f1:	push   ds
  4204f2:	mov    edx,0x824d901e
  4204f7:	test   eax,0xcef5dd8d
  4204fc:	xchg   ecx,eax
  4204fd:	xlat   BYTE PTR ds:[ebx]
  4204fe:	jns    0x420524
  420500:	cld    
  420501:	xor    BYTE PTR [eax+edx*1-0x1e],0xd4
  420506:	rol    BYTE PTR [eax-0x604d45c7],0xcf
  42050d:	add    al,0xa6
  42050f:	fs sbb ecx,ebp
  420512:	push   esi
  420513:	adc    DWORD PTR [edi+0x26],esi
  420516:	aas    
  420517:	xor    esp,DWORD PTR [eax+0x34]
  42051a:	scas   eax,DWORD PTR es:[edi]
  42051b:	loope  0x420538
  42051d:	wrmsr  
  42051f:	and    esp,ebp
  420521:	xor    edx,DWORD PTR [eax]
  420523:	in     eax,dx
  420524:	jbe    0x4204b2
  420526:	jge    0x420582
  420528:	push   cs
  420529:	jg     0x4204fc
  42052b:	adc    DWORD PTR [eax],0x3356d641
  420531:	fs mov esi,0xc1b5e088
  420537:	dec    esp
  420538:	sbb    ebp,DWORD PTR [ebx+0x267ee693]
  42053e:	iret   
  42053f:	in     eax,0x56
  420541:	sti    
  420542:	or     eax,DWORD PTR [ecx+ebp*2]
  420545:	jae    0x42050f
  420547:	ret    0x1795
  42054a:	iret   
  42054b:	gs add eax,0x36ba057f
  420551:	(bad)  
  420553:	shl    ah,cl
  420555:	adc    edi,DWORD PTR [edx]
  420557:	or     dl,BYTE PTR [ecx-0x5ab066e5]
  42055d:	xor    eax,0x5c0f898a
  420562:	pop    eax
  420563:	cmp    DWORD PTR [edx+0x6f],edx
  420566:	lods   al,BYTE PTR ds:[esi]
  420567:	add    al,al
  420569:	xlat   BYTE PTR ds:[ebx]
  42056a:	test   al,0x8e
  42056c:	pop    esi
  42056d:	sub    DWORD PTR [ebp+0x7e],ebp
  420570:	pop    ebx
  420571:	inc    ecx
  420572:	xchg   esi,eax
  420573:	lock addr16 pop eax
  420576:	mov    ebx,0x97ac865d
  42057b:	mov    cl,0x59
  42057d:	jmp    0x42054c
  42057f:	push   esi
  420580:	mov    esi,0xb95493
  420585:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  420587:	xor    DWORD PTR [eax],esi
  420589:	(bad)  
  42058b:	jg     0x420560
  42058d:	add    eax,0x80e9041
  420592:	lea    edi,[ecx+0x6d]
  420595:	jno    0x4205e4
  420597:	xchg   esi,eax
  420598:	push   ecx
  420599:	xor    dh,BYTE PTR [ebp-0x80]
  42059c:	sti    
  42059d:	and    eax,0xfb0f9d0c
  4205a2:	pop    ss
  4205a3:	lods   al,BYTE PTR ds:[esi]
  4205a4:	dec    esp
  4205a5:	push   0x1c
  4205a7:	mov    al,ds:0x3cd026c4
  4205ac:	push   edx
  4205ad:	iret   
  4205ae:	jle    0x4205b1
  4205b0:	xchg   ebp,eax
  4205b1:	fdivrp st(5),st
  4205b3:	bnd jne 0x4205cc
  4205b6:	and    al,0x8a
  4205b8:	das    
  4205b9:	cmp    bl,BYTE PTR [ebx+0x57]
  4205bc:	mov    dh,0xec
  4205be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205bf:	(bad)  
  4205c0:	and    al,0x8a
  4205c2:	les    ebp,FWORD PTR [esp+eax*1]
  4205c5:	jmp    0x420622
  4205c7:	ds push esp
  4205c9:	xchg   ecx,eax
  4205ca:	xor    BYTE PTR [esp+eax*4-0x599235bd],al
  4205d1:	leave  
  4205d2:	lods   eax,DWORD PTR ds:[esi]
  4205d3:	mov    gs,WORD PTR [ebp-0x1]
  4205d6:	jg     0x4205df
  4205d8:	push   cs
  4205d9:	push   eax
  4205da:	test   eax,0x90244689
  4205df:	push   ebp
  4205e0:	in     al,dx
  4205e1:	add    DWORD PTR [eax],ebp
  4205e3:	cwde   
  4205e4:	push   ebx
  4205e5:	repnz inc esi
  4205e7:	jbe    0x42062c
  4205e9:	call   0x2847:0x84c27722
  4205f0:	jbe    0x42057a
  4205f2:	pop    esp
  4205f3:	push   esp
  4205f4:	mov    al,ds:0xc1660bd6
  4205f9:	cmp    BYTE PTR [ebx-0x56787933],0x20
  420600:	outs   dx,DWORD PTR ds:[esi]
  420601:	pop    ebx
  420602:	add    eax,0x293276eb
  420607:	and    al,0xe8
  420609:	(bad)  
  42060b:	cmp    al,0x82
  42060d:	xor    edi,DWORD PTR [esi]
  42060f:	sub    eax,0xe752c28c
  420614:	(bad)  
  420615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420616:	or     eax,0x24333059
  42061b:	lahf   
  42061c:	shrd   DWORD PTR [ebx],ebx,cl
  42061f:	or     cl,BYTE PTR [ecx-0x70]
  420622:	cs popw ss
  420625:	dec    eax
  420626:	test   BYTE PTR [ebx+eax*2],bl
  420629:	fwait
  42062a:	rol    BYTE PTR [edi],0x93
  42062d:	lea    ecx,[edi+0x4aff753a]
  420633:	jecxz  0x4205b7
  420635:	xchg   ebx,eax
  420636:	fld    TBYTE PTR [edi-0x64]
  420639:	scas   eax,DWORD PTR es:[edi]
  42063a:	and    ebx,DWORD PTR [eax-0x4e41dd10]
  420640:	jmp    0x5ed9:0x91ad4dbf
  420647:	push   0x56
  420649:	fstp   st(0)
  42064b:	push   ecx
  42064c:	and    eax,0x83516d1d
  420651:	int3   
  420652:	pop    edx
  420653:	mov    cl,0x50
  420655:	jbe    0x4205f7
  420657:	shl    DWORD PTR [ebx-0x3a],1
  42065a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42065b:	push   eax
  42065c:	not    dh
  42065e:	sbb    BYTE PTR [esi-0x7719a7e6],ah
  420664:	jle    0x4205f4
  420666:	push   0x77067e97
  42066b:	xchg   esp,eax
  42066c:	cmp    eax,0xde27644a
  420671:	dec    ebx
  420672:	int    0xd0
  420674:	fdiv   DWORD PTR [edi-0x51ceff1a]
  42067a:	fdivr  QWORD PTR [ebp+0x171f6b26]
  420680:	lods   al,BYTE PTR ds:[esi]
  420681:	mov    edi,esp
  420683:	jle    0x42060a
  420685:	cmp    ebp,DWORD PTR [ebx]
  420687:	push   edx
  420688:	inc    ebx
  420689:	ret    0x55ed
  42068c:	les    edx,FWORD PTR [esi+0x190004de]
  420692:	loop   0x42069a
  420694:	(bad)  [ecx]
  420696:	fidivr DWORD PTR [edi-0x4afc2839]
  42069c:	js     0x4206c8
  42069e:	or     bl,BYTE PTR [ebp-0x38]
  4206a1:	sbb    al,0xf5
  4206a3:	pop    es
  4206a4:	and    eax,0xfdef10a7
  4206a9:	push   es
  4206aa:	inc    DWORD PTR [eax]
  4206ac:	xor    DWORD PTR [ebp-0x794b4c35],ebp
  4206b2:	push   edx
  4206b3:	cmp    eax,0x4fb0bb87
  4206b8:	lock ror BYTE PTR [eax],cl
  4206bb:	dec    ebx
  4206bc:	add    BYTE PTR [eax+0x7b],cl
  4206bf:	sar    ah,1
  4206c1:	test   al,0x92
  4206c3:	clc    
  4206c4:	das    
  4206c5:	adc    ebp,DWORD PTR [ebx]
  4206c7:	inc    eax
  4206c8:	dec    ebx
  4206c9:	jne    0x42071e
  4206cb:	jp     0x420742
  4206cd:	data16 fcom DWORD PTR ds:0xb47c3de3
  4206d4:	stos   BYTE PTR es:[edi],al
  4206d5:	arpl   WORD PTR [ecx+0x4b],si
  4206d8:	loope  0x420748
  4206da:	add    DWORD PTR [ebx+0x37],esp
  4206dd:	out    0xd0,al
  4206df:	fstp   TBYTE PTR [esi]
  4206e1:	(bad)  
  4206e2:	cmp    ch,BYTE PTR [ebp-0x7c0bc825]
  4206e8:	cwde   
  4206e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ea:	xor    al,0x4e
  4206ec:	sbb    ah,bl
  4206ee:	inc    ecx
  4206ef:	jle    0x4206a8
  4206f1:	nop
  4206f2:	pop    ecx
  4206f3:	bnd jp 0x42069f
  4206f6:	or     ah,0xc3
  4206f9:	inc    ebx
  4206fa:	popf   
  4206fb:	pop    esi
  4206fc:	jns    0x4206aa
  4206fe:	pop    esi
  4206ff:	add    eax,0xfbae27e5
  420704:	sbb    BYTE PTR [esi-0x1],bh
  420707:	cmp    al,0x94
  420709:	cmc    
  42070a:	in     al,dx
  42070b:	inc    edx
  42070c:	loop   0x4206e8
  42070e:	(bad)  
  42070f:	in     eax,dx
  420710:	push   eax
  420711:	sti    
  420712:	add    dl,BYTE PTR [ecx]
  420714:	pop    es
  420715:	cmp    DWORD PTR [edx-0x13d6f989],ebp
  42071b:	ins    DWORD PTR es:[edi],dx
  42071c:	sbb    al,0xa5
  42071e:	pop    edx
  42071f:	pop    edx
  420720:	dec    eax
  420721:	jle    0x420798
  420723:	lock inc ecx
  420725:	mov    DWORD PTR [edi],ecx
  420727:	mov    ebx,0x4a19efcf
  42072c:	xor    ecx,DWORD PTR [ebp+eiz*1-0x40]
  420730:	and    DWORD PTR [ebp+ebx*8+0x58],esi
  420734:	aaa    
  420735:	fwait
  420736:	sub    BYTE PTR [esi],0x4f
  420739:	clc    
  42073a:	imul   ebp,DWORD PTR [ebx+0x556c1ccf],0xffffff9e
  420741:	jo     0x420751
  420743:	mov    ah,0x58
  420745:	loope  0x420725
  420747:	cmp    eax,0x6ebd36d
  42074c:	xchg   DWORD PTR [esi-0x38],edi
  42074f:	and    edi,ebx
  420751:	test   BYTE PTR [esi-0x7c],dh
  420754:	bound  esi,QWORD PTR [ecx]
  420756:	rol    BYTE PTR [ebp-0x325ca786],0xac
  42075d:	fidivr DWORD PTR [ebp-0x70522813]
  420763:	cdq    
  420764:	xor    bl,BYTE PTR [esp+ebx*4-0x70b9e4e0]
  42076b:	xor    BYTE PTR [edx],0x1d
  42076e:	out    0xa7,al
  420770:	in     eax,dx
  420771:	mov    al,ds:0xe36935f7
  420776:	jnp    0x4207a1
  420778:	sbb    DWORD PTR [ebx-0x79],esp
  42077b:	mov    eax,0x828f7a55
  420780:	scas   al,BYTE PTR es:[edi]
  420781:	ss mov ebp,0xeed699a9
  420787:	add    eax,0xb332cbf6
  42078c:	cli    
  42078d:	xor    al,0x10
  42078f:	retf   0x97f1
  420792:	xchg   esi,eax
  420793:	push   esi
  420794:	inc    ebp
  420795:	retf   0x65f5
  420798:	jg     0x4207c1
  42079a:	dec    esi
  42079b:	sub    dh,BYTE PTR [esi+esi*1]
  42079e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42079f:	lods   al,BYTE PTR ds:[si]
  4207a1:	mov    cl,0xc6
  4207a3:	pop    edx
  4207a4:	(bad)  
  4207a6:	sbb    eax,0x229a9709
  4207ab:	test   BYTE PTR [edx],cl
  4207ad:	sub    DWORD PTR [ecx-0x4d],ebx
  4207b0:	(bad)  
  4207b1:	out    0x4e,al
  4207b3:	jnp    0x420747
  4207b5:	shl    ah,1
  4207b7:	adc    ebp,eax
  4207b9:	pop    ds
  4207ba:	jo     0x420744
  4207bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207bd:	pop    ecx
  4207be:	jmp    0x4207bc
  4207c0:	mov    dl,0x82
  4207c2:	dec    esp
  4207c3:	jge    0x4207b3
  4207c5:	mov    ecx,0x87a1bb91
  4207ca:	fcom   DWORD PTR [edx]
  4207cc:	adc    al,0x5
  4207ce:	cmc    
  4207cf:	jns    0x420812
  4207d1:	scas   al,BYTE PTR es:[edi]
  4207d2:	test   al,0x62
  4207d4:	(bad)  
  4207d5:	mov    ebx,0x8f4cbcc5
  4207da:	pop    esp
  4207db:	ja     0x4207d4
  4207dd:	ins    BYTE PTR es:[edi],dx
  4207de:	jle    0x42081c
  4207e0:	dec    ebx
  4207e1:	sbb    edi,DWORD PTR [edx]
  4207e3:	pop    edi
  4207e4:	call   0x4f31:0x57ba15ca
  4207eb:	retf   
  4207ec:	dec    ebp
  4207ed:	cmp    al,0x23
  4207ef:	pop    ecx
  4207f0:	stos   BYTE PTR es:[edi],al
  4207f1:	cld    
  4207f2:	out    0x4a,al
  4207f4:	xchg   ebp,eax
  4207f5:	sbb    esi,ebp
  4207f7:	js     0x4207be
  4207f9:	inc    ebp
  4207fa:	mov    ebp,0x1758b230
  4207ff:	mov    ecx,0x55ba5e7a
  420804:	loopne 0x420847
  420806:	or     DWORD PTR [edi+0x143553da],0xffffffe3
  42080d:	jge    0x420855
  42080f:	ds jns 0x420828
  420812:	add    DWORD PTR [esi-0x6a],ebx
  420815:	mov    ds:0xba2ba17c,al
  42081a:	inc    esp
  42081b:	in     eax,dx
  42081c:	(bad)  
  42081d:	mov    dl,BYTE PTR [ebx-0x27e2249a]
  420823:	das    
  420824:	inc    esi
  420825:	(bad)  
  420827:	inc    esi
  420828:	mov    ds:0xed8e5026,al
  42082d:	fiadd  DWORD PTR [eax]
  42082f:	je     0x4208a0
  420831:	out    0x1e,eax
  420833:	imul   esp,eax,0xc6d1812a
  420839:	in     eax,dx
  42083a:	jle    0x42086b
  42083c:	inc    ecx
  42083d:	(bad)  
  42083e:	pop    ecx
  42083f:	xlat   BYTE PTR ds:[ebx]
  420840:	cmc    
  420841:	loop   0x4208a6
  420843:	lods   al,BYTE PTR ds:[esi]
  420844:	pop    esp
  420845:	jmp    0x4207f2
  420847:	loopne 0x4207f0
  420849:	aam    0x86
  42084b:	iret   
  42084c:	push   esi
  42084d:	(bad)  
  42084e:	loopne 0x4207e5
  420850:	push   esi
  420851:	sub    eax,0x855909c7
  420856:	test   bl,dl
  420858:	retf   
  420859:	scas   eax,DWORD PTR es:[edi]
  42085a:	loope  0x42080c
  42085c:	and    DWORD PTR ds:0x26f32880,eax
  420862:	cmc    
  420863:	pop    edx
  420864:	ja     0x420819
  420866:	and    ebp,esi
  420868:	push   es
  420869:	xchg   ebp,eax
  42086a:	retf   
  42086b:	xor    eax,0xe48533b2
  420870:	sbb    eax,0x3b65cf45
  420875:	sbb    eax,0x3d64dca7
  42087a:	lock imul esi,DWORD PTR [ebp+0x5a],0x2e
  42087f:	and    ah,BYTE PTR [esi-0x1]
  420882:	xor    DWORD PTR ds:0xd5be3ae2,0xffffffd1
  420889:	test   eax,0x14c29aae
  42088e:	pop    es
  42088f:	dec    edx
  420890:	jge    0x4208df
  420892:	jp     0x420901
  420894:	(bad)  
  420895:	mov    esp,0x13fd115d
  42089a:	mov    al,ds:0xb81ea7b
  42089f:	test   DWORD PTR [eax+0x51],0x43d9b9d3
  4208a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208a7:	xor    al,0xab
  4208a9:	sbb    BYTE PTR [eax-0x54],0x3
  4208ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208ae:	jns    0x42089d
  4208b0:	inc    edx
  4208b1:	loopne 0x4208da
  4208b3:	(bad)  
  4208b4:	fwait
  4208b5:	sbb    al,0x1d
  4208b7:	push   esp
  4208b8:	test   al,0x54
  4208ba:	sar    BYTE PTR [ebx+ebx*1+0x68],cl
  4208be:	mov    dl,0x87
  4208c0:	sahf   
  4208c1:	fisub  DWORD PTR [ebx+0x3d]
  4208c4:	fs cmp eax,0xe1f95630
  4208ca:	fadd   QWORD PTR [ecx+0x47ce5d52]
  4208d0:	pop    es
  4208d1:	mov    dl,0x6a
  4208d3:	ucomiss xmm6,DWORD PTR [ebp-0x39]
  4208d7:	adc    DWORD PTR [eax+0x4ea8eba0],ebp
  4208dd:	xchg   DWORD PTR [esi+0x14],ecx
  4208e0:	mov    cl,0x18
  4208e2:	or     esi,DWORD PTR [esi]
  4208e4:	push   ds
  4208e5:	lds    ecx,FWORD PTR [edx-0x7f14ab95]
  4208eb:	out    0x36,al
  4208ed:	(bad)  
  4208ee:	jp     0x4208e8
  4208f0:	sbb    DWORD PTR [eax],edx
  4208f2:	cmp    ch,BYTE PTR [esi+esi*1]
  4208f5:	mov    ?,WORD PTR [edi+0x31]
  4208f8:	ins    DWORD PTR es:[edi],dx
  4208f9:	mov    ebx,0xf292843c
  4208fe:	(bad)  
  4208ff:	enter  0xf383,0x9f
  420903:	inc    ecx
  420904:	scas   al,BYTE PTR es:[edi]
  420905:	imul   DWORD PTR ds:0x8bc09397
  42090b:	jno    0x42092d
  42090d:	and    eax,0x100f9e30
  420912:	xor    ch,BYTE PTR [ebx-0x48]
  420915:	add    ch,BYTE PTR [ebx-0x2]
  420918:	pop    ebp
  420919:	pop    es
  42091a:	xchg   ebp,eax
  42091b:	stc    
  42091c:	ja     0x4208e2
  42091e:	jbe    0x4208cc
  420920:	mov    al,ds:0xf21deb84
  420925:	inc    edx
  420926:	sub    ecx,DWORD PTR [ebx+0x21]
  420929:	pop    esp
  42092a:	cmp    BYTE PTR [ebx+edx*4],0x89
  42092e:	xchg   ecx,eax
  42092f:	js     0x420976
  420931:	daa    
  420932:	test   eax,0xd5ae9e3e
  420937:	dec    eax
  420938:	mov    bl,0x76
  42093a:	nop
  42093b:	loop   0x420993
  42093d:	jne    0x42090d
  42093f:	jp     0x42099b
  420941:	mov    al,ds:0xccacc6bd
  420946:	ret    0x9d5f
  420949:	sub    eax,0x2e08b1f8
  42094e:	and    al,0xd
  420950:	loope  0x42098e
  420952:	and    al,BYTE PTR [ebx+0x72]
  420955:	sahf   
  420956:	push   edx
  420957:	bound  edx,QWORD PTR [eax-0x19eca1d1]
  42095d:	pop    eax
  42095e:	push   ecx
  42095f:	aad    0x95
  420961:	push   edi
  420962:	test   eax,0x18682811
  420967:	pop    DWORD PTR [eax]
  420969:	ret    
  42096a:	cdq    
  42096b:	lock xchg ecx,eax
  42096d:	cmc    
  42096e:	dec    edx
  42096f:	dec    edx
  420970:	ret    0xe6f4
  420973:	addr16 xchg ecx,eax
  420975:	push   esi
  420976:	mov    al,0xd7
  420978:	cmp    al,0x36
  42097a:	sbb    BYTE PTR [ecx-0x59a88252],ah
  420980:	in     al,0x1f
  420982:	aas    
  420983:	xor    al,0x3
  420985:	pop    eax
  420986:	pop    eax
  420987:	mov    edx,0xfaee6a93
  42098c:	jmp    0x420974
  42098e:	fisttp WORD PTR [edx]
  420990:	les    eax,FWORD PTR [ecx+0x456ecc01]
  420996:	mov    ah,ah
  420998:	mov    esp,0x2dc47d97
  42099d:	retf   0x64d6
  4209a0:	pusha  
  4209a1:	and    DWORD PTR ds:0x6a74df12,edx
  4209a7:	fxch   st(4)
  4209a9:	cs jmp 0x420a0b
  4209ac:	ror    BYTE PTR [eax+0x45073bbf],1
  4209b2:	inc    esp
  4209b3:	cmp    BYTE PTR [ebx],0x1
  4209b6:	xor    eax,0xc9c5d75c
  4209bb:	ja     0x42097f
  4209bd:	inc    ebx
  4209be:	in     al,0xfd
  4209c0:	jo     0x420980
  4209c2:	mov    bl,0x96
  4209c4:	sub    DWORD PTR [edi],0xab7c587f
  4209ca:	pushf  
  4209cb:	jl     0x420951
  4209cd:	sbb    BYTE PTR [ecx+ecx*1-0x16],ah
  4209d1:	call   0xa4a5:0xfec0182
  4209d8:	enter  0x343c,0x7c
  4209dc:	pop    esi
  4209dd:	push   cs
  4209de:	xor    dh,BYTE PTR [ebp+0x319803c6]
  4209e4:	and    ebp,edi
  4209e6:	popf   
  4209e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e8:	cwde   
  4209e9:	mov    DWORD PTR [esi+0x793c0e95],esp
  4209ef:	mov    ch,0xc4
  4209f1:	mov    eax,?
  4209f3:	loope  0x4209db
  4209f5:	(bad)  [ebx+ebp*1]
  4209f8:	(bad)  
  4209f9:	adc    BYTE PTR [eax-0x35],dl
  4209fc:	xchg   ebx,eax
  4209fd:	out    dx,eax
  4209fe:	cmp    dh,BYTE PTR [esi+0x63]
  420a01:	test   BYTE PTR [ebx+esi*1+0x5c],bh
  420a05:	pop    eax
  420a06:	sub    al,0x8a
  420a08:	sub    BYTE PTR [edx-0x6bf61750],ch
  420a0e:	out    0x20,eax
  420a10:	cmp    DWORD PTR ds:0x8b9a71c4,ecx
  420a16:	lahf   
  420a17:	mov    eax,ds:0xedd5d0a9
  420a1c:	sub    DWORD PTR [eax*2-0x7d04cf02],0xab51e18e
  420a27:	jle    0x4209ef
  420a29:	sub    DWORD PTR [ebx+eiz*8+0x0],0xffffffb2
  420a2e:	cwde   
  420a2f:	jp     0x420a05
  420a31:	(bad)  
  420a32:	rcl    BYTE PTR [eax],1
  420a34:	add    BYTE PTR [ebp-0x5321eddc],ah
  420a3a:	push   esi
  420a3b:	call   0xdc8c:0x83edf85c
  420a42:	adc    eax,0xf32c4847
  420a47:	loope  0x420aaa
  420a49:	(bad)  [ebx-0x75867cac]
  420a4f:	sbb    eax,0x33021c11
  420a54:	cmp    DWORD PTR [edi-0x4c],ecx
  420a57:	cs fwait
  420a59:	inc    edx
  420a5a:	out    dx,eax
  420a5b:	and    ebx,0x10
  420a5e:	push   esi
  420a5f:	stc    
  420a60:	pop    esp
  420a61:	ins    DWORD PTR es:[edi],dx
  420a62:	xlat   BYTE PTR ds:[ebx]
  420a63:	mov    esp,0x5969fbdd
  420a68:	mov    bh,0xfe
  420a6a:	(bad)  [eax]
  420a6c:	cmp    eax,eax
  420a6e:	pop    eax
  420a6f:	(bad)  
  420a70:	out    dx,al
  420a71:	sbb    al,0x62
  420a73:	inc    ecx
  420a74:	stc    
  420a75:	and    eax,0xf5d9a337
  420a7a:	jno    0x420a7d
  420a7c:	dec    ebx
  420a7d:	dec    ebx
  420a7e:	pop    eax
  420a7f:	(bad)  
  420a80:	push   0xffffffc7
  420a82:	mov    edi,DWORD PTR [ebp+0x661c1fda]
  420a88:	dec    ebx
  420a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a8a:	test   al,0x2e
  420a8c:	jmp    0x4b3af171
  420a91:	ds scas eax,DWORD PTR es:[edi]
  420a93:	pusha  
  420a94:	in     al,0x2a
  420a96:	mov    ecx,0xbfeb8fa7
  420a9b:	leave  
  420a9c:	sbb    eax,0x19f039d5
  420aa1:	mov    edi,0x22db791f
  420aa6:	test   eax,0x3af11fd2
  420aab:	repnz sbb esp,DWORD PTR [edx+edx*8+0x3071a229]
  420ab3:	retf   0x3597
  420ab6:	pop    esp
  420ab7:	outs   dx,DWORD PTR ds:[esi]
  420ab8:	sub    BYTE PTR [edi+0x7264b8b9],0xbb
  420abf:	lock lahf 
  420ac1:	inc    ebp
  420ac2:	jmp    0xe54f6f5e
  420ac7:	fstp   QWORD PTR [ebp-0x483df04a]
  420acd:	mov    bl,0xa7
  420acf:	push   ebp
  420ad0:	sbb    DWORD PTR [ebx-0x2e660869],ebx
  420ad6:	mov    esp,0x65f94097
  420adb:	stos   DWORD PTR es:[edi],eax
  420adc:	repnz outs dx,BYTE PTR ds:[esi]
  420ade:	in     al,dx
  420adf:	and    eax,0xb54c30ec
  420ae4:	nop
  420ae5:	jecxz  0x420aa4
  420ae7:	push   ebx
  420ae8:	sbb    eax,0x92e06605
  420aed:	mov    edx,0xf8b6f2c2
  420af2:	(bad)  
  420af3:	stos   DWORD PTR es:[edi],eax
  420af4:	stos   BYTE PTR es:[edi],al
  420af5:	adc    eax,0x1bbbf634
  420afa:	scas   eax,DWORD PTR es:[edi]
  420afb:	pusha  
  420afc:	mov    esp,0x3c3a8371
  420b01:	ss out dx,eax
  420b03:	push   cs
  420b04:	xor    esi,DWORD PTR [esi]
  420b06:	sub    esp,esp
  420b08:	icebp  
  420b09:	mov    dh,0xc0
  420b0b:	imul   esp,DWORD PTR [ecx],0xfabf03e2
  420b11:	dec    eax
  420b12:	mov    al,ds:0xe60d8bd6
  420b17:	sbb    ch,0x95
  420b1a:	push   0x6e
  420b1c:	sub    eax,0x232aaf67
  420b21:	pop    es
  420b22:	xor    eax,0xab3bcabd
  420b27:	shr    BYTE PTR [ecx+0x24],cl
  420b2a:	aam    0x73
  420b2c:	shl    al,cl
  420b2e:	dec    edx
  420b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b30:	or     edi,DWORD PTR [eax]
  420b32:	pusha  
  420b33:	mov    esi,0x66975d3d
  420b38:	xlat   BYTE PTR ds:[ebx]
  420b39:	mov    gs,WORD PTR [ebp-0x45]
  420b3c:	das    
  420b3d:	xchg   esi,eax
  420b3e:	jns    0x420ae9
  420b40:	outs   dx,DWORD PTR ds:[esi]
  420b41:	pop    eax
  420b42:	sbb    eax,0xb1f8e7ab
  420b47:	pop    bx
  420b49:	mov    al,0x2d
  420b4b:	cmp    BYTE PTR [ebx-0x9],al
  420b4e:	in     eax,0x8e
  420b50:	xor    ah,dl
  420b52:	pusha  
  420b53:	cmp    BYTE PTR [edi-0x6],0x23
  420b57:	adc    edi,0x80e860fb
  420b5d:	je     0x420b15
  420b5f:	cmp    eax,0xe2ea9c0e
  420b64:	jg     0x420afe
  420b66:	jmp    0x420b20
  420b68:	mov    al,ds:0x13eacac0
  420b6d:	in     al,0xf4
  420b6f:	push   cs
  420b70:	mov    eax,0xdfa8fa9a
  420b75:	mov    esp,0xe98c68b4
  420b7a:	pop    ds
  420b7b:	pushf  
  420b7c:	fs cs out dx,eax
  420b7f:	fs and bl,ah
  420b82:	pop    esp
  420b83:	mov    al,0x0
  420b85:	std    
  420b86:	das    
  420b87:	clc    
  420b88:	mov    ebp,0x45ba2a77
  420b8d:	cld    
  420b8e:	cmp    BYTE PTR [ebx+0x51],bh
  420b91:	push   edi
  420b92:	lock movs WORD PTR es:[edi],WORD PTR ds:[esi]
  420b95:	xor    DWORD PTR [edi],ebx
  420b97:	and    BYTE PTR [edi],ch
  420b99:	call   0x7061622f
  420b9e:	push   esi
  420b9f:	ins    DWORD PTR es:[edi],dx
  420ba0:	xor    DWORD PTR [ecx-0x73],ebp
  420ba3:	ins    BYTE PTR es:[edi],dx
  420ba4:	pop    ebx
  420ba5:	pop    ebx
  420ba6:	add    BYTE PTR [ebx+0x711cd71b],0x7f
  420bad:	ficomp DWORD PTR [ebx]
  420baf:	jns    0x420c1c
  420bb1:	jle    0x420b44
  420bb3:	into   
  420bb4:	je     0x420be5
  420bb6:	push   esp
  420bb7:	jbe    0x420c10
  420bb9:	inc    edi
  420bba:	or     esp,DWORD PTR [esi+0x6736bedd]
  420bc0:	cmp    BYTE PTR [ebp+0x485f9dc7],dl
  420bc6:	dec    ebp
  420bc7:	ss loopne 0x420b94
  420bca:	jo     0x420be3
  420bcc:	jecxz  0x420bcf
  420bce:	loop   0x420c08
  420bd0:	aad    0xa7
  420bd2:	test   eax,0x7f87802
  420bd7:	or     edi,DWORD PTR [ebx]
  420bd9:	dec    eax
  420bda:	ins    BYTE PTR es:[edi],dx
  420bdb:	pop    DWORD PTR [eax+edi*4]
  420bde:	sbb    al,0x26
  420be0:	cmp    ebp,DWORD PTR es:[ecx]
  420be3:	xor    ecx,esp
  420be5:	sbb    al,bl
  420be7:	jmp    0x11f9:0xf60baa84
  420bee:	je     0x420b73
  420bf0:	sahf   
  420bf1:	loop   0x420c16
  420bf3:	sub    DWORD PTR [esi-0xf],ebx
  420bf6:	bswap  ebp
  420bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bf9:	push   eax
  420bfa:	add    DWORD PTR [eax],esp
  420bfc:	fcomp  QWORD PTR [esi+0x7778bb02]
  420c02:	fisttp DWORD PTR [edi-0x52]
  420c05:	imul   BYTE PTR [esi-0x24e2fb86]
  420c0b:	or     DWORD PTR [ebx+0x74535fd1],edi
  420c11:	rcr    BYTE PTR [edx+0x3b],cl
  420c14:	cmp    DWORD PTR [edi-0x32eb0c0],esi
  420c1a:	mov    edx,0xea6942e5
  420c1f:	xor    DWORD PTR [esi-0x61b9914c],ebx
  420c25:	push   ds
  420c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c27:	icebp  
  420c28:	xor    al,0x49
  420c2a:	iret   
  420c2b:	mov    ?,esp
  420c2d:	sbb    al,0x9c
  420c2f:	cmp    eax,0x20a2954b
  420c34:	jmp    0xfdef8366
  420c39:	psraw  mm4,mm6
  420c3c:	in     al,0x7
  420c3e:	ja     0x420bd6
  420c40:	int3   
  420c41:	div    BYTE PTR [edx+0x32d8854b]
  420c47:	nop
  420c48:	push   es
  420c49:	rcl    DWORD PTR [edi-0x27b8ab57],cl
  420c4f:	jne    0x420bf9
  420c51:	push   0x29
  420c53:	add    DWORD PTR [edi+0x9],eax
  420c56:	mov    edi,0x7e6efec6
  420c5b:	mov    ah,0xe2
  420c5d:	add    eax,0x8c2d7018
  420c62:	mov    edx,0x95321de7
  420c67:	cwde   
  420c68:	cmp    BYTE PTR es:0x9ecd,ah
  420c6e:	xchg   DWORD PTR [ecx],edi
  420c70:	jp     0x420c12
  420c72:	cmp    DWORD PTR [esi-0x3fc938e4],eax
  420c78:	dec    ebx
  420c79:	cmp    ecx,DWORD PTR [ebx-0x183ef4af]
  420c7f:	pusha  
  420c80:	sbb    BYTE PTR [edi],bh
  420c82:	inc    eax
  420c83:	cld    
  420c84:	inc    edx
  420c85:	mov    ds:0xfa3a7c1d,eax
  420c8a:	push   eax
  420c8b:	mul    BYTE PTR [edx-0x3c5860e4]
  420c91:	mov    ebp,0x3719cc0b
  420c96:	stos   BYTE PTR es:[edi],al
  420c97:	enter  0x6583,0x66
  420c9b:	fwait
  420c9c:	je     0x420c8d
  420c9e:	int    0x1f
  420ca0:	div    DWORD PTR [ebp+0x5f]
  420ca3:	jae    0x420cff
  420ca5:	into   
  420ca6:	ja     0x420c45
  420ca8:	or     DWORD PTR [ecx],esi
  420caa:	arpl   WORD PTR fs:[edi-0x47e5e86c],cx
  420cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cb2:	ja     0x420c51
  420cb4:	or     al,0xee
  420cb6:	inc    edx
  420cb7:	pusha  
  420cb8:	xchg   edi,eax
  420cb9:	dec    ebx
  420cba:	cdq    
  420cbb:	in     al,0x9c
  420cbd:	inc    ebx
  420cbe:	cmp    al,0x3a
  420cc0:	mov    cl,0x52
  420cc2:	(bad)  
  420cc3:	and    DWORD PTR [esi+0x6],ebp
  420cc6:	pop    ecx
  420cc7:	es pop esi
  420cc9:	pop    ebp
  420cca:	push   ebx
  420ccb:	mov    ecx,0x7385a05d
  420cd0:	cmp    DWORD PTR [eax+0x64],0x61
  420cd4:	(bad)  
  420cd5:	leave  
  420cd6:	mov    BYTE PTR [edi],dh
  420cd8:	test   bl,al
  420cda:	repnz (bad) 
  420cdc:	in     al,0xf6
  420cde:	(bad)  
  420cdf:	sahf   
  420ce0:	stos   DWORD PTR es:[edi],eax
  420ce1:	mov    al,0xb5
  420ce3:	ins    DWORD PTR es:[edi],dx
  420ce4:	int    0x74
  420ce6:	inc    ecx
  420ce7:	loop   0x420d0f
  420ce9:	adc    eax,0x6a4f490c
  420cee:	or     al,0xc3
  420cf0:	test   BYTE PTR [ebp-0x55],dl
  420cf3:	mov    edi,0x6bdc855f
  420cf8:	inc    esi
  420cf9:	in     eax,dx
  420cfa:	inc    cl
  420cfc:	(bad)  [eax+esi*1-0x1432cb34]
  420d03:	xor    eax,0x9d364a64
  420d08:	or     al,0xb2
  420d0a:	mov    al,ds:0xeef38f1b
  420d0f:	inc    edx
  420d10:	fldcw  WORD PTR [edx-0x26]
  420d13:	aas    
  420d14:	aam    0x86
  420d16:	push   ss
  420d17:	mov    BYTE PTR [ebx-0x6931537b],bh
  420d1d:	xor    al,0xab
  420d1f:	mov    ebx,0x393f8e4a
  420d24:	mov    esi,0x2c81b58d
  420d29:	lock popf 
  420d2b:	pop    esp
  420d2c:	sub    al,0x35
  420d2e:	rcr    esi,cl
  420d30:	push   esi
  420d31:	test   al,0x2
  420d33:	sbb    esp,DWORD PTR [ecx+0x72]
  420d36:	cld    
  420d37:	xchg   ebx,eax
  420d38:	enter  0xf96b,0xb9
  420d3c:	data16 mov al,0xe3
  420d3f:	nop
  420d40:	(bad)  
  420d41:	ds mov ch,0x94
  420d45:	cmp    dh,bh
  420d47:	int    0x87
  420d49:	jns    0x420cf7
  420d4b:	and    BYTE PTR [ebx],dh
  420d4d:	fwait
  420d4e:	jo     0x420db7
  420d50:	jb     0x420d70
  420d52:	sub    BYTE PTR [edi+0x2999a801],dh
  420d58:	loopne 0x420d55
  420d5a:	adc    ebx,eax
  420d5c:	xchg   esp,eax
  420d5d:	mov    ds:0x56cc0aea,al
  420d62:	inc    esp
  420d63:	jb     0x420db3
  420d65:	mov    eax,ds
  420d67:	ins    BYTE PTR es:[edi],dx
  420d68:	sub    BYTE PTR ds:0x8e40c411,dh
  420d6e:	out    dx,al
  420d6f:	inc    ebp
  420d70:	xchg   edi,eax
  420d71:	sbb    esi,esi
  420d73:	lock adc esi,DWORD PTR [edi-0x1f]
  420d77:	mov    esp,0xdc2c8f65
  420d7c:	popf   
  420d7d:	xor    BYTE PTR [ebp-0x44afc22f],bl
  420d83:	jle    0x420d6d
  420d85:	das    
  420d86:	dec    esp
  420d87:	test   dh,al
  420d89:	dec    BYTE PTR [edi+ecx*8+0x6883c93]
  420d90:	stc    
  420d91:	and    eax,0x3d47a2b6
  420d96:	imul   ebx,DWORD PTR [esi+0x5e81331c],0xffffff9c
  420d9d:	jecxz  0x420d9a
  420d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420da0:	push   ebp
  420da1:	test   DWORD PTR [eax+0x27aea81],esi
  420da7:	or     BYTE PTR [edx],0xcd
  420daa:	xchg   bl,ch
  420dac:	cmp    eax,0x9e87b105
  420db1:	jle    0x420e13
  420db3:	xor    DWORD PTR [esi-0x4c],0xffffff91
  420db7:	les    esp,FWORD PTR [ecx*1-0x4bebc6b4]
  420dbe:	sti    
  420dbf:	mov    esp,DWORD PTR [eax]
  420dc1:	jp     0x420e22
  420dc3:	sub    ch,BYTE PTR [edi-0x5a]
  420dc6:	pop    ds
  420dc7:	fadd   DWORD PTR [esp+edx*8-0x43]
  420dcb:	inc    eax
  420dcc:	test   bh,ah
  420dce:	add    ch,BYTE PTR [edi-0x42869523]
  420dd4:	mov    eax,0xcb198e03
  420dd9:	adc    DWORD PTR [ebx-0x7b03b0ca],eax
  420ddf:	sti    
  420de0:	push   0x9e096865
  420de5:	mov    ss,WORD PTR [esp+esi*1+0x7428f8b2]
  420dec:	cmp    BYTE PTR [edi-0x29d5b3bb],ah
  420df2:	jnp    0x420d7e
  420df4:	add    eax,0x1aecb9ae
  420df9:	fs lock push cs
  420dfc:	aam    0xe8
  420dfe:	pop    eax
  420dff:	xor    BYTE PTR [edx+0x5b229b39],bh
  420e05:	jg     0x420e04
  420e07:	test   BYTE PTR [ebp-0x1e994551],ah
  420e0d:	mov    ch,0x0
  420e0f:	int3   
  420e10:	imul   esi,DWORD PTR [ecx-0x49],0x5244ca6b
  420e17:	adc    eax,0xe1aad0ee
  420e1c:	pusha  
  420e1d:	aad    0xaf
  420e1f:	add    cl,dl
  420e21:	cmp    al,0x53
  420e23:	adc    al,BYTE PTR [ebp+0x3a868]
  420e29:	in     eax,0x27
  420e2b:	jae    0x420e2b
  420e2d:	pop    ebp
  420e2e:	xor    al,0xcf
  420e30:	jmp    DWORD PTR [ebx-0x6d]
  420e33:	ret    0x738f
  420e36:	and    ah,al
  420e38:	idiv   DWORD PTR [edi]
  420e3a:	int    0x8a
  420e3c:	lds    ebp,FWORD PTR [edx+0x7d5ea4ba]
  420e42:	mov    ebp,0xa89994ed
  420e47:	(bad)  [edi+0x18a44a6a]
  420e4d:	aam    0x49
  420e4f:	ins    BYTE PTR es:[edi],dx
  420e50:	rol    DWORD PTR [eax],1
  420e52:	add    DWORD PTR [ebp+0x14],0xf4ccdf4
  420e59:	push   ss
  420e5a:	jge    0x420e10
  420e5c:	icebp  
  420e5d:	sub    eax,0x49129d55
  420e62:	cld    
  420e63:	mov    bl,0xed
  420e65:	pop    ds
  420e66:	jge    0x420e6f
  420e68:	mov    esi,edi
  420e6a:	add    al,0x6f
  420e6c:	add    dl,al
  420e6e:	popa   
  420e6f:	mov    ebp,0x98d1ea92
  420e74:	sub    esp,DWORD PTR [ecx+0x75]
  420e77:	outs   dx,DWORD PTR ds:[esi]
  420e78:	adc    esi,0xffffff8d
  420e7b:	jnp    0x420eee
  420e7d:	dec    edi
  420e7e:	out    0x13,al
  420e80:	call   0xb23f:0x5bb65202
  420e87:	lock xor DWORD PTR [eax+0x38],ebx
  420e8b:	mov    DWORD PTR [esi+0x1fe5c308],0xb115eb13
  420e95:	jg     0x420e3f
  420e97:	aaa    
  420e98:	adc    DWORD PTR [eax],ebp
  420e9a:	fwait
  420e9b:	out    dx,al
  420e9c:	mov    ds:0x4e5df9d9,al
  420ea1:	(bad)  
  420ea2:	xchg   esi,eax
  420ea3:	pushf  
  420ea4:	ds add al,0x9a
  420ea7:	push   esp
  420ea8:	idiv   DWORD PTR [ebp+0x1c]
  420eab:	push   ebx
  420eac:	jo     0x420ef2
  420eae:	push   edx
  420eaf:	or     esp,DWORD PTR [edi-0x34]
  420eb2:	pop    ecx
  420eb3:	ins    BYTE PTR es:[edi],dx
  420eb4:	pop    eax
  420eb5:	mov    edi,0xb9438d7f
  420eba:	sahf   
  420ebb:	add    eax,0x85c9f1e
  420ec0:	and    eax,0xc2bd2690
  420ec5:	getsec 
  420ec7:	aaa    
  420ec8:	push   edi
  420ec9:	mov    edi,0xa1c95020
  420ece:	cdq    
  420ecf:	test   al,0x3f
  420ed1:	arpl   WORD PTR [ecx+ecx*8-0x26],dx
  420ed5:	loope  0x420e8c
  420ed7:	dec    eax
  420ed8:	jb     0x420eff
  420eda:	xor    eax,0xec39248b
  420edf:	xchg   esp,eax
  420ee0:	cmp    eax,0x2eff1f74
  420ee5:	mov    gs,edx
  420ee7:	adc    al,0xad
  420ee9:	add    DWORD PTR [edx+0x2f29b32],ebx
  420eef:	add    dl,BYTE PTR ds:[ebx-0x3a]
  420ef3:	pop    edx
  420ef4:	shl    BYTE PTR ss:[esp+ebx*1],0x8d
  420ef9:	and    ebx,esp
  420efb:	jnp    0x420f19
  420efd:	inc    esi
  420efe:	inc    esi
  420eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f00:	jp     0x420f16
  420f02:	xchg   ebp,eax
  420f03:	and    eax,eax
  420f05:	add    BYTE PTR [ebx+0x4da6bb42],ch
  420f0b:	pop    ds
  420f0c:	mov    cl,0xe9
  420f0e:	adc    DWORD PTR [esp+ebx*8+0x51],eax
  420f12:	dec    edx
  420f13:	shl    BYTE PTR [edi+0x5d],1
  420f16:	jb     0x420e99
  420f18:	test   cl,0x15
  420f1b:	cmp    al,0xd4
  420f1d:	aad    0xdd
  420f1f:	fwait
  420f20:	xchg   edx,eax
  420f21:	dec    edi
  420f22:	mov    cl,0xfe
  420f24:	inc    edi
  420f25:	das    
  420f26:	or     BYTE PTR [ebx],al
  420f28:	or     eax,0x3aed952d
  420f2d:	test   DWORD PTR [ebp-0x22],esi
  420f30:	dec    esp
  420f31:	push   ss
  420f32:	cmc    
  420f33:	adc    al,0x9a
  420f35:	mov    edx,0xf371df1d
  420f3a:	pushf  
  420f3b:	xor    eax,0xe661758
  420f40:	push   ds
  420f41:	pop    ebp
  420f42:	imul   ebp,DWORD PTR [ebx+esi*4-0x3b],0x54de607a
  420f4a:	mov    eax,ds:0x76f0bad4
  420f4f:	aad    0xd
  420f51:	ins    DWORD PTR es:[edi],dx
  420f52:	xor    DWORD PTR [ecx-0x270133d8],esi
  420f58:	sbb    eax,0x5d52b1c1
  420f5d:	daa    
  420f5e:	pop    es
  420f5f:	sahf   
  420f60:	add    BYTE PTR [esi],dh
  420f62:	jns    0x420ef9
  420f64:	adc    BYTE PTR [ebx],dh
  420f66:	pop    edx
  420f67:	and    al,0x22
  420f69:	mov    ecx,0x74f13fa4
  420f6e:	aad    0x2d
  420f70:	push   ds
  420f71:	faddp  st(4),st
  420f73:	inc    edi
  420f74:	push   ds
  420f75:	jno    0x420f52
  420f77:	mov    esp,gs
  420f79:	into   
  420f7a:	add    ecx,DWORD PTR [ebx+0x67]
  420f7d:	push   ebx
  420f7e:	outs   dx,DWORD PTR ds:[esi]
  420f7f:	sbb    al,al
  420f81:	test   DWORD PTR [ebp+eiz*2+0x10],ebx
  420f85:	pop    edi
  420f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f87:	mov    es,ebx
  420f89:	lahf   
  420f8a:	pop    ecx
  420f8b:	dec    eax
  420f8c:	dec    ebx
  420f8d:	(bad)  
  420f8e:	mov    ds:0x96164790,al
  420f93:	mov    esp,ebx
  420f95:	das    
  420f96:	dec    ecx
  420f97:	add    dl,BYTE PTR [eax-0x6]
  420f9a:	adc    BYTE PTR [esi],al
  420f9c:	cmp    esi,DWORD PTR [edi]
  420f9e:	cmp    DWORD PTR [ecx-0x77f66884],ebx
  420fa4:	lea    esi,[ebp+0xa]
  420fa7:	jmp    FWORD PTR [eax]
  420fa9:	pop    esi
  420faa:	stc    
  420fab:	or     ebp,DWORD PTR [esi+ecx*2-0x58]
  420faf:	pop    edx
  420fb0:	pop    ds
  420fb1:	xlat   BYTE PTR ds:[ebx]
  420fb2:	sbb    esp,DWORD PTR [ecx]
  420fb4:	lock inc DWORD PTR [esi-0x2735d9d2]
  420fbb:	repz xor al,0xa8
  420fbe:	cmp    eax,0xca25e891
  420fc3:	mov    WORD PTR ds:0xaadece1e,es
  420fc9:	out    dx,al
  420fca:	push   edi
  420fcb:	inc    ebx
  420fcc:	(bad)  
  420fcd:	and    al,0xf2
  420fcf:	push   edx
  420fd0:	pop    ebx
  420fd1:	popa   
  420fd2:	imul   ecx,esp,0xffffffb6
  420fd5:	fild   WORD PTR [edx+0x66]
  420fd8:	mov    ebp,0x170c0461
  420fdd:	pop    esp
  420fde:	push   0x2969fd37
  420fe3:	xor    eax,0x12f0d476
  420fe8:	imul   ebx,DWORD PTR gs:[ecx+ecx*4-0xd],0xffffffbe
  420fee:	pushf  
  420fef:	scas   eax,DWORD PTR es:[edi]
  420ff0:	and    eax,0x9850c5df
  420ff5:	jg     0x421038
  420ff7:	adc    al,0x10
  420ff9:	push   ecx
  420ffa:	mov    WORD PTR [edi-0x5d853ff9],gs
  421000:	adc    bh,BYTE PTR [bp+si]
  421003:	dec    eax
  421004:	inc    edx
  421005:	add    al,0x79
  421007:	add    eax,0x8b2fc07b
  42100c:	sbb    esp,DWORD PTR [edx]
  42100e:	data16 je 0x42106a
  421011:	fdivr  DWORD PTR [edx]
  421013:	int    0x5b
  421015:	jne    0x42107c
  421017:	mov    ebp,0x8b887cb0
  42101c:	inc    edx
  42101d:	dec    esi
  42101e:	push   ds
  42101f:	popa   
  421020:	mov    bh,0x46
  421022:	pop    ss
  421023:	hlt    
  421024:	pushf  
  421025:	ret    0x3601
  421028:	mov    ds:0x9beaab33,al
  42102d:	icebp  
  42102e:	fs mov esi,0xddd9abf6
  421034:	push   ds
  421035:	or     BYTE PTR [edx-0x7f],al
  421038:	xor    eax,0x4655545a
  42103d:	dec    ebp
  42103e:	and    eax,DWORD PTR [ebx-0xe858ec1]
  421044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421045:	cmp    eax,0xbffa8f89
  42104a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42104b:	adc    ah,ah
  42104d:	mov    ch,0x60
  42104f:	inc    eax
  421050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421051:	repz or DWORD PTR [esi],ebx
  421054:	in     eax,dx
  421055:	sub    ax,WORD PTR [ebp-0x58]
  421059:	dec    ebx
  42105a:	int3   
  42105b:	test   DWORD PTR ds:0x81a9430,edi
  421061:	inc    ebx
  421062:	xchg   ecx,eax
  421063:	dec    ecx
  421064:	out    dx,al
  421065:	mov    bh,0x5d
  421067:	xor    al,0x55
  421069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42106a:	call   FWORD PTR [edx+0x50]
  42106d:	das    
  42106e:	xor    ah,BYTE PTR [esi-0x24ae4bfc]
  421074:	(bad)  
  421075:	xchg   esi,eax
  421076:	test   BYTE PTR [edi+esi*2],ah
  421079:	pop    ss
  42107a:	sbb    DWORD PTR [eax-0x4ffccb1b],eax
  421080:	mov    bl,0x28
  421082:	jb     0x421040
  421084:	pop    eax
  421085:	pop    ebp
  421086:	push   esp
  421087:	cmp    DWORD PTR [ebp+eiz*2+0x7c67ddd1],ebx
  42108e:	es add eax,0x6ce963eb
  421094:	sar    DWORD PTR [ecx+0x523f1dce],1
  42109a:	in     al,0x0
  42109c:	aaa    
  42109d:	data16 add BYTE PTR fs:[ecx+edx*2-0x75191026],0xa5
  4210a7:	jp     0x4210be
  4210a9:	mov    ebx,0x903f1e5f
  4210ae:	push   0xffffffb9
  4210b0:	imul   ecx,ebx,0xd7425034
  4210b6:	test   al,0x72
  4210b8:	in     al,0xf3
  4210ba:	and    al,0xfe
  4210bc:	cdq    
  4210bd:	jecxz  0x421054
  4210bf:	int    0x6b
  4210c1:	pop    ss
  4210c2:	mov    ch,0xdb
  4210c4:	daa    
  4210c5:	inc    ebx
  4210c6:	push   edi
  4210c7:	pop    edi
  4210c8:	mov    edx,0x1c6eeaec
  4210cd:	fld    TBYTE PTR [ecx+0x4ffc69a0]
  4210d3:	stos   BYTE PTR es:[edi],al
  4210d4:	stos   BYTE PTR es:[edi],al
  4210d5:	jnp    0x42112e
  4210d7:	cmp    esp,eax
  4210d9:	add    al,0xcd
  4210db:	out    dx,al
  4210dc:	push   eax
  4210dd:	test   BYTE PTR [ecx],bh
  4210df:	jmp    0xdc6:0x9f3d9948
  4210e6:	mov    edi,0x12914e33
  4210eb:	call   0x121e:0x33477a8c
  4210f2:	(bad)  
  4210f3:	loop   0x421085
  4210f5:	aam    0x9d
  4210f7:	mov    BYTE PTR [ebx-0x47],0x62
  4210fb:	adc    DWORD PTR [esi+esi*1+0x1e],esp
  4210ff:	mov    ds:0xaadb4b42,al
  421104:	in     al,dx
  421105:	lahf   
  421106:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421108:	jg     0x421115
  42110a:	call   0xa701e828
  42110f:	jle    0x4210c3
  421111:	icebp  
  421112:	add    BYTE PTR [ecx-0x27],dl
  421115:	rcl    dh,1
  421117:	ins    DWORD PTR es:[edi],dx
  421118:	mov    al,0xf2
  42111a:	xor    BYTE PTR [ecx-0x2a],ah
  42111d:	inc    eax
  42111e:	mov    al,ds:0xd5fa0bbb
  421123:	int3   
  421124:	inc    eax
  421125:	test   BYTE PTR ds:0x750ef84b,ch
  42112b:	loope  0x4210c9
  42112d:	push   ebp
  42112e:	pop    ss
  42112f:	dec    ecx
  421130:	nop
  421131:	stc    
  421132:	jp     0x4210ec
  421134:	xor    al,0xc0
  421136:	jae    0x42112f
  421138:	xor    esp,DWORD PTR [esi-0x68ebca1]
  42113e:	xchg   DWORD PTR [eax+edx*4],ebp
  421141:	mov    BYTE PTR [ebx],ah
  421143:	dec    esp
  421144:	leave  
  421145:	mov    al,ds:0x46dd6cc7
  42114a:	pop    ebp
  42114b:	sbb    edx,ebp
  42114d:	mov    eax,ds:0xd66cce86
  421152:	retf   
  421153:	sub    dh,BYTE PTR [eax-0x58]
  421156:	xor    bl,ch
  421158:	sar    BYTE PTR [ebp+0x3e],cl
  42115b:	pop    ebx
  42115c:	jp     0x42116f
  42115e:	or     DWORD PTR [edi+0x30],eax
  421161:	scas   al,BYTE PTR es:[edi]
  421162:	push   ebp
  421163:	arpl   WORD PTR [esp+esi*1],di
  421166:	mov    cl,0x4e
  421168:	mov    edx,0xf08014fa
  42116d:	fwait
  42116e:	mov    ebx,0x92612655
  421173:	cmp    eax,0x1cebb02d
  421178:	aam    0x4a
  42117a:	adc    cl,BYTE PTR [esi]
  42117c:	sub    ebp,DWORD PTR ds:0x185997db
  421182:	and    eax,0x15e81798
  421187:	mov    ebp,DWORD PTR [edi-0x12]
  42118a:	daa    
  42118b:	popa   
  42118c:	push   edx
  42118d:	lods   eax,DWORD PTR ds:[esi]
  42118e:	cmp    BYTE PTR [esi+0x81806ab],ch
  421194:	aas    
  421195:	and    BYTE PTR [esi+0xe],ah
  421198:	jo     0x4211f8
  42119a:	ins    DWORD PTR es:[edi],dx
  42119b:	mov    ds:0xf00b98f7,eax
  4211a0:	out    0x92,al
  4211a2:	add    al,0x44
  4211a4:	xchg   ebx,eax
  4211a5:	(bad)  
  4211a6:	dec    DWORD PTR [ecx+0x4b]
  4211a9:	(bad)  
  4211ab:	cmp    DWORD PTR [ebx+0x28],0xffffff99
  4211af:	inc    esp
  4211b0:	mov    ch,0x9f
  4211b2:	jl     0x4211da
  4211b4:	lods   eax,DWORD PTR ds:[esi]
  4211b5:	mov    ds:0x3bf8dd94,al
  4211ba:	push   0x88ab2df7
  4211bf:	adc    ecx,DWORD PTR ds:0xc4783ef6
  4211c5:	jg     0x421178
  4211c7:	mov    cl,0xd4
  4211c9:	test   BYTE PTR [ecx],dh
  4211cb:	sahf   
  4211cc:	mov    esi,ecx
  4211ce:	stc    
  4211cf:	cld    
  4211d0:	inc    edx
  4211d1:	and    DWORD PTR [ebp-0x5be955c5],ecx
  4211d7:	(bad)  
  4211d8:	pop    ds
  4211d9:	xchg   esi,eax
  4211da:	xchg   esi,eax
  4211db:	ret    
  4211dc:	xor    BYTE PTR [ebx-0x32],dh
  4211df:	leave  
  4211e0:	ds pop edi
  4211e2:	sar    BYTE PTR [edx],1
  4211e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211e5:	dec    esp
  4211e6:	test   BYTE PTR [eax+0x22],al
  4211e9:	fwait
  4211ea:	vsubsd xmm7,xmm3,QWORD PTR [ebp-0x6a726021]
  4211f3:	mov    al,0xc
  4211f5:	(bad)  
  4211f6:	mov    al,0xe0
  4211f8:	pop    ss
  4211f9:	loop   0x4211e0
  4211fb:	(bad)  
  4211fc:	mov    eax,ds:0x50dfb942
  421201:	add    eax,ebp
  421203:	inc    esp
  421204:	aam    0xe2
  421206:	push   es
  421207:	push   edi
  421208:	or     BYTE PTR [ebp-0x7a750d3e],bh
  42120e:	aam    0x99
  421210:	arpl   WORD PTR [ebx-0x504b9b3d],di
  421216:	sbb    DWORD PTR [edi-0x27],ecx
  421219:	fstp   TBYTE PTR [eax]
  42121b:	sub    eax,0x96aafba7
  421220:	pop    ds
  421221:	imul   esp,DWORD PTR [esi-0x49afc4cf],0xd4273bee
  42122b:	mov    dl,bh
  42122d:	gs mov ch,0xa
  421230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421231:	js     0x4211db
  421233:	fdivr  QWORD PTR [ebx-0x69]
  421236:	add    al,0x37
  421238:	shl    ebx,cl
  42123a:	repz or BYTE PTR [eax-0x712ae325],ah
  421241:	imul   ebp,DWORD PTR [ecx+0x70],0x8
  421245:	nop
  421246:	jge    0x4211d9
  421248:	mov    ah,0xd8
  42124a:	xchg   edx,eax
  42124b:	dec    ebx
  42124c:	idiv   ah
  42124e:	push   es
  42124f:	jbe    0x42128e
  421251:	jmp    0x6de7:0x4b19db05
  421258:	push   ds
  421259:	nop
  42125a:	out    dx,al
  42125b:	mov    esp,0x3fa94cfb
  421260:	and    al,0xff
  421262:	fild   QWORD PTR [edi+ebx*4+0x1619d044]
  421269:	jp     0x4212ac
  42126b:	sti    
  42126c:	lahf   
  42126d:	leave  
  42126e:	jbe    0x421218
  421270:	mov    esi,esp
  421272:	inc    ebx
  421273:	out    dx,al
  421274:	out    0xd6,al
  421276:	cmc    
  421277:	and    cl,BYTE PTR [ebp-0x2a0f826f]
  42127d:	lea    esp,[ecx-0x5d]
  421280:	aaa    
  421281:	dec    edx
  421282:	dec    eax
  421283:	inc    ebp
  421284:	out    0x33,al
  421286:	mov    cs,ecx
  421288:	pop    ebp
  421289:	sbb    ecx,ebp
  42128b:	pop    ds
  42128c:	div    BYTE PTR [edi]
  42128e:	sti    
  42128f:	xor    eax,0xfd7da154
  421294:	cdq    
  421295:	(bad)  
  421297:	adc    DWORD PTR [ecx-0x25d71ed6],esp
  42129d:	dec    ebp
  42129e:	fist   DWORD PTR [ebx-0x37]
  4212a1:	lahf   
  4212a2:	add    BYTE PTR [eax+0x544e377c],ch
  4212a8:	adc    al,0x75
  4212aa:	and    DWORD PTR [esi+0x55c57156],esp
  4212b0:	mov    ecx,0x3c8f1dde
  4212b5:	dec    esi
  4212b6:	sub    dh,BYTE PTR [ecx]
  4212b8:	pop    ecx
  4212b9:	sbb    BYTE PTR [esi],ch
  4212bb:	sub    ebx,DWORD PTR [ebx+eax*1+0x72b8a8bc]
  4212c2:	ins    BYTE PTR es:[edi],dx
  4212c3:	jns    0x4212c3
  4212c5:	pushf  
  4212c6:	aam    0x20
  4212c8:	lds    ecx,FWORD PTR [edx]
  4212ca:	data16 int3 
  4212cc:	fwait
  4212cd:	das    
  4212ce:	fldenv [edx+0x3c]
  4212d1:	in     al,dx
  4212d2:	fldenv [esi-0x1]
  4212d5:	xchg   ebp,eax
  4212d6:	push   edx
  4212d7:	xchg   edi,eax
  4212d8:	shl    BYTE PTR [ebx+0x6f],cl
  4212db:	or     DWORD PTR ds:[eax+0x5f],0x58f86457
  4212e3:	jne    0x421270
  4212e5:	inc    ebx
  4212e6:	fwait
  4212e7:	xchg   edx,eax
  4212e8:	fldenv [edi+0x55]
  4212eb:	loop   0x42127e
  4212ed:	inc    ebx
  4212ee:	dec    eax
  4212ef:	mov    BYTE PTR [ebx],dl
  4212f1:	jg     0x421279
  4212f3:	std    
  4212f4:	sti    
  4212f5:	stos   DWORD PTR es:[edi],eax
  4212f6:	inc    ecx
  4212f7:	inc    esi
  4212f8:	in     al,dx
  4212f9:	leave  
  4212fa:	mov    ebx,0x8f6ce5c
  4212ff:	dec    esp
  421300:	sar    DWORD PTR [esi],1
  421302:	and    ebx,DWORD PTR [ecx+0x1f]
  421305:	push   edi
  421306:	xlat   BYTE PTR ds:[ebx]
  421307:	push   esp
  421308:	clc    
  421309:	in     eax,0x26
  42130b:	rcr    BYTE PTR [ebp+0x3],0x9
  42130f:	cmc    
  421310:	(bad)  
  421311:	adc    BYTE PTR [edx-0x4824e6a3],al
  421317:	push   ecx
  421318:	xor    DWORD PTR [ebp-0x4e],esi
  42131b:	sub    dl,cl
  42131d:	dec    edx
  42131e:	pop    ebp
  42131f:	mov    WORD PTR [ebp+0x21],es
  421322:	fcomp  st(3)
  421324:	xor    ecx,DWORD PTR [ebx]
  421326:	add    DWORD PTR cs:[ebp-0xc],esi
  42132a:	or     DWORD PTR [edx+0x353d196],edx
  421330:	arpl   WORD PTR [ebx+0x6569f884],ax
  421336:	int    0xbd
  421338:	popf   
  421339:	sar    DWORD PTR ds:0x1ab1ba8f,1
  42133f:	add    ah,dl
  421341:	popa   
  421342:	cmp    cl,BYTE PTR [ecx-0x1a]
  421345:	stos   DWORD PTR es:[edi],eax
  421346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421347:	cmp    al,0x25
  421349:	je     0x42136d
  42134b:	jb     0x4212e7
  42134d:	adc    eax,DWORD PTR [ecx+0x6f3b014d]
  421353:	test   DWORD PTR [edx+0xf],ecx
  421356:	daa    
  421357:	inc    edi
  421358:	scas   eax,DWORD PTR es:[edi]
  421359:	aam    0xe6
  42135b:	cwde   
  42135c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42135d:	pop    edx
  42135e:	sahf   
  42135f:	xlat   BYTE PTR ds:[ebx]
  421360:	out    0x11,eax
  421362:	neg    esi
  421364:	repnz push ebx
  421366:	dec    ebp
  421367:	inc    edx
  421368:	dec    ebx
  421369:	pusha  
  42136a:	pushf  
  42136b:	mov    dh,0x2a
  42136d:	inc    esp
  42136e:	out    0xdb,al
  421370:	test   BYTE PTR [ebx],dl
  421372:	push   ebx
  421373:	sub    DWORD PTR [edx-0x6d],ebp
  421376:	into   
  421377:	out    0x49,al
  421379:	sbb    al,0xf2
  42137b:	jg     0x42133c
  42137d:	push   ecx
  42137e:	xor    dh,al
  421380:	ds mov al,0xa3
  421383:	data16 xlat BYTE PTR ds:[ebx]
  421385:	cmp    DWORD PTR [ecx+eax*1+0x4a],0xaeae2bf7
  42138d:	cmp    DWORD PTR [ebx-0x7b],esi
  421390:	adc    ah,BYTE PTR [ebp+0x30175573]
  421396:	ret    
  421397:	pop    ecx
  421398:	and    eax,0x6e9fa3ed
  42139d:	dec    edx
  42139e:	test   dh,0xdd
  4213a1:	adc    al,0xc5
  4213a3:	push   esp
  4213a4:	(bad)
  4213a9:	lods   al,BYTE PTR ds:[esi]
  4213aa:	stc    
  4213ab:	leave  
  4213ac:	sub    ch,BYTE PTR [esi-0x65d16e55]
  4213b2:	fs push ecx
  4213b4:	retf   
  4213b5:	push   ebp
  4213b6:	nop
  4213b7:	rcl    esi,0x25
  4213ba:	mov    dh,0x36
  4213bc:	enter  0x20ea,0x45
  4213c0:	outs   dx,DWORD PTR ds:[esi]
  4213c1:	or     edi,DWORD PTR [ebx]
  4213c3:	call   0x8b59:0x204fbb2c
  4213ca:	sbb    edx,DWORD PTR [edx-0x31]
  4213cd:	push   eax
  4213ce:	iret   
  4213cf:	xor    al,0x61
  4213d1:	or     ch,bh
  4213d3:	ficom  WORD PTR [esi+0xa907fb3]
  4213d9:	cmp    eax,0x7f0ceb40
  4213de:	xchg   edi,eax
  4213df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213e0:	xor    DWORD PTR [eax+0x66b3f178],ecx
  4213e6:	lahf   
  4213e7:	mov    ecx,0x3078e6df
  4213ec:	hlt    
  4213ed:	dec    edx
  4213ee:	retf   0xae1
  4213f1:	stc    
  4213f2:	ficom  WORD PTR [eax-0x22aca56b]
  4213f8:	adc    al,0x48
  4213fa:	outs   dx,DWORD PTR ds:[esi]
  4213fb:	push   0xfbbedb73
  421400:	mov    BYTE PTR [ebx+0x18f8db1f],dl
  421406:	repz imul esp,DWORD PTR [eax-0x29],0x7f
  42140b:	xor    al,0xea
  42140d:	cli    
  42140e:	sbb    DWORD PTR [ecx-0x2151f87a],edi
  421414:	sub    DWORD PTR ds:0xb2d9c5e6,esi
  42141a:	int    0xfa
  42141c:	dec    ebp
  42141d:	mov    cs,WORD PTR [edi-0x3f]
  421420:	fsubr  DWORD PTR [eax-0x16c4658c]
  421426:	data16 js 0x42142c
  421429:	and    esp,DWORD PTR [ebp-0x7b]
  42142c:	enter  0xfce2,0xec
  421430:	fs xchg ecx,eax
  421432:	popf   
  421433:	sub    bl,BYTE PTR [eax-0x32]
  421436:	jmp    0x337d:0xed4e45bd
  42143d:	dec    ebp
  42143e:	or     DWORD PTR [ecx+ebx*8+0x7c],esp
  421442:	push   edi
  421443:	shl    DWORD PTR [edx-0x42],1
  421446:	pop    edx
  421447:	cmp    al,0xcf
  421449:	lods   al,BYTE PTR ds:[esi]
  42144a:	pushf  
  42144b:	cmp    esi,DWORD PTR [esi+0x52bb0167]
  421451:	sbb    BYTE PTR [ebp+0x3f],ch
  421454:	cmp    eax,0xd4858d45
  421459:	mov    ah,0x55
  42145b:	imul   ebp,DWORD PTR [eax-0x6a],0xfffffff1
  42145f:	mov    ah,0xe8
  421461:	add    al,0xc8
  421463:	sub    eax,0xccc649f8
  421468:	jo     0x4214da
  42146a:	aam    0xcb
  42146c:	mov    ecx,ebx
  42146e:	cmp    ah,BYTE PTR [eax-0xe639832]
  421474:	inc    esp
  421475:	sbb    al,0x93
  421477:	xchg   ebp,eax
  421478:	jle    0x42144e
  42147a:	in     al,dx
  42147b:	push   ss
  42147c:	mov    eax,ds:0x23cb1961
  421481:	mov    bh,0x3
  421483:	sub    BYTE PTR [ebx],dl
  421485:	sbb    eax,0xf3b1a939
  42148a:	push   cs
  42148b:	mov    al,0xb9
  42148d:	pop    ds
  42148e:	data16 and dl,BYTE PTR fs:[esi-0x4e]
  421493:	inc    ebp
  421494:	push   edx
  421495:	dec    esi
  421496:	int3   
  421497:	xor    ebp,DWORD PTR [edi+0x5b1ab6b2]
  42149d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42149e:	test   BYTE PTR [edx],dl
  4214a0:	jmp    0x8eac:0xad54831b
  4214a7:	sub    al,bl
  4214a9:	xchg   ebp,eax
  4214aa:	push   0x7fbf4ede
  4214af:	jo     0x4214e2
  4214b1:	arpl   WORD PTR [edx-0x1d],cx
  4214b4:	push   ebx
  4214b5:	cwde   
  4214b6:	adc    bl,BYTE PTR [edx]
  4214b8:	xchg   edi,eax
  4214b9:	xor    DWORD PTR [ecx+ebx*8+0x7aaa8924],ebp
  4214c0:	pop    esp
  4214c1:	or     al,0x8c
  4214c3:	pop    ds
  4214c4:	nop
  4214c5:	in     al,0x27
  4214c7:	jne    0x421523
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x90d7d8e1
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xf61b7fc7
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	jmp    FWORD PTR [ebp-0x68]
  4217eb:	cs int3 
  4217ed:	stos   BYTE PTR es:[edi],al
  4217ee:	inc    ebx
  4217ef:	mov    ebp,0x1fdfe4df
  4217f4:	jns    0x4217f6
  4217f6:	ffreep st(2)
  4217f8:	mov    esi,0xbd43a974
  4217fd:	fnstsw ax
  4217ff:	fistp  WORD PTR [edi]
  421801:	cmp    edi,edi
  421803:	and    dl,al
  421805:	mov    esi,0xbd43a9cc
  42180a:	fnstsw ax
  42180c:	fistp  WORD PTR [edi]
  42180e:	jns    0x42180f
  421810:	and    dl,al
  421812:	mov    esi,0xbd43a9cc
  421817:	fnstsw ax
  421819:	fistp  WORD PTR [edi]
  42181b:	jns    0x42181c
  42181d:	and    dl,al
  42181f:	mov    esi,0xbd43a9cc
  421824:	fistp  WORD PTR [eax]
  421826:	fistp  WORD PTR [edi]
  421828:	jns    0x42181b
  42182a:	aas    
  42182b:	js     0x4217dd
  42182d:	int3   
  42182e:	sbb    eax,0x58fe704a
  421833:	ficom  WORD PTR [ebx-0x4c]
  421836:	fidiv  WORD PTR [edx+ebp*4-0x29]
  42183a:	mov    edi,0xb0cf3389
  42183f:	xchg   DWORD PTR [ebp+0x43df147e],ebp
  421845:	mov    ds:0x37c6a2d0,eax
  42184a:	popf   
  42184b:	mov    ebp,0xc6dff85
  421850:	xchg   ecx,eax
  421851:	add    BYTE PTR [ebx+0xcedecd0],ch
  421857:	out    dx,al
  421858:	dec    DWORD PTR [ebp-0x2ee38450]
  42185e:	sub    eax,0xa9e8b4cf
  421863:	inc    ebx
  421864:	mov    ebp,0x1fdfe0df
  421869:	jle    0x4218d1
  42186b:	fcomp  QWORD PTR [ebx+0x493b34fd]
  421871:	(bad)  
  421872:	daa    
  421873:	jb     0x42184a
  421875:	pop    esp
  421876:	sub    DWORD PTR [ebp+0x2a],0xa3c0db9a
  42187d:	sbb    al,0x45
  42187f:	dec    ebp
  421880:	jmp    0x3ae2:0xf5417a87
  421887:	sub    al,0xc6
  421889:	icebp  
  42188a:	es test ch,dl
  42188d:	mov    BYTE PTR [edi],ah
  42188f:	lea    esi,[ebx-0x2d]
  421892:	scas   al,BYTE PTR es:[edi]
  421893:	sti    
  421894:	mov    ah,0x8a
  421896:	push   ecx
  421897:	shl    DWORD PTR [edi+0x15ce6095],1
  42189d:	xor    eax,DWORD PTR [edi]
  42189f:	mov    dl,0xc8
  4218a1:	hlt    
  4218a2:	dec    esp
  4218a3:	test   al,0x49
  4218a5:	in     eax,0x27
  4218a7:	jb     0x42187e
  4218a9:	pop    esp
  4218aa:	sub    DWORD PTR [edx+ebp*1-0x16],0xfca35e47
  4218b2:	gs pop edi
  4218b4:	jmp    0xa778:0xf5ebe792
  4218bb:	add    esi,0xffffffa1
  4218be:	mov    ebx,0xbab8d52f
  4218c3:	pop    ss
  4218c4:	jae    0x421883
  4218c6:	fcom   DWORD PTR [eax-0x4c]
  4218c9:	xchg   esp,eax
  4218ca:	int3   
  4218cb:	dec    esp
  4218cc:	mov    bh,0x9d
  4218ce:	sbb    BYTE PTR [ebp+0x15],cl
  4218d1:	sub    edx,DWORD PTR [esi+0x34fdaa43]
  4218d7:	cmp    ecx,DWORD PTR [ecx-0x43]
  4218da:	fnstsw ax
  4218dc:	fistp  WORD PTR [edi]
  4218de:	jns    0x4218df
  4218e0:	and    BYTE PTR [edx+0xfa9ccfb],dl
  4218e6:	mov    esp,0xcf7fe0dd
  4218eb:	adc    dh,BYTE PTR [eax-0x33413de0]
  4218f1:	test   eax,0xdfbd43
  4218f6:	fistp  WORD PTR [eax+edi*2]
  4218f9:	hlt    
  4218fa:	and    eax,ecx
  4218fc:	mov    esi,0xbd4747cc
  421901:	fistp  WORD PTR [ecx+ebx*8+0x1f]
  421905:	jns    0x421906
  421907:	and    dl,al
  421909:	scas   eax,DWORD PTR es:[edi]
  42190a:	jno    0x4218b5
  42190c:	inc    ebx
  42190d:	mov    ebp,0x1fdfe0cf
  421912:	jns    0x42190e
  421914:	and    dl,al
  421916:	mov    esi,0xad43a98d
  42191b:	fnstsw ax
  42191d:	fistp  WORD PTR ds:0xc225ff79
  421923:	mov    edi,0xbd43a9cc
  421928:	(bad)  
  42192a:	fistp  WORD PTR [esi]
  42192c:	jns    0x42192d
  42192e:	and    dl,al
  421930:	mov    esi,0xbd4ff9cc
  421935:	(bad)  
  421937:	fistp  WORD PTR [edi]
  421939:	js     0x421956
  42193b:	and    eax,0xa9ccbcc2
  421940:	ret    
  421941:	mov    ebp,0x1fdff0df
  421946:	imul   edi,edi,0xdcbec220
  42194c:	test   eax,0xe0dfad43
  421951:	fistp  WORD PTR [edi]
  421953:	jns    0x421954
  421955:	xor    dl,al
  421957:	mov    esi,0xbd43a9cc
  42195c:	fnstsw ax
  42195e:	fistp  WORD PTR [edi]
  421960:	jns    0x42196d
  421962:	sbb    esi,ecx
  421964:	mov    esi,0xbd43aaa5
  421969:	fist   WORD PTR [eax]
  42196b:	aam    0x1f
  42196d:	ss mov dh,0x20
  421970:	ret    0xccbe
  421973:	test   eax,0xe0dfbd43
  421978:	fistp  WORD PTR [edi]
  42197a:	jns    0x42197b
  42197c:	and    dl,al
  42197e:	mov    esi,0xbd43a9cc
  421983:	fnstsw ax
  421985:	fistp  WORD PTR [edi]
  421987:	jns    0x421988
  421989:	and    dl,al
  42198b:	mov    esi,0xbd43a9cc
  421990:	fnstsw ax
  421992:	fistp  WORD PTR [edi]
  421994:	jns    0x421995
  421996:	and    dl,al
  421998:	mov    esi,0xbd43a9cc
  42199d:	fnstsw ax
  42199f:	fistp  WORD PTR [edi]
  4219a1:	jns    0x4219a2
  4219a3:	and    dl,al
  4219a5:	mov    esi,0xbd43a9cc
  4219aa:	fnstsw ax
  4219ac:	fistp  WORD PTR [edi]
  4219ae:	jns    0x4219af
  4219b0:	and    dl,al
  4219b2:	mov    esi,0xbd43a9cc
  4219b7:	fnstsw ax
  4219b9:	fistp  WORD PTR [edi]
  4219bb:	jns    0x4219bc
  4219bd:	and    dl,al
  4219bf:	mov    esi,0xbd43a9cc
  4219c4:	fnstsw ax
  4219c6:	fistp  WORD PTR [edi]
  4219c8:	jns    0x4219c9
  4219ca:	and    dl,al
  4219cc:	mov    esi,0xbd43a9cc
  4219d1:	fnstsw ax
  4219d3:	fistp  WORD PTR [edi]
  4219d5:	jns    0x4219d6
  4219d7:	and    dl,al
  4219d9:	nop
  4219da:	mov    eax,0xdfc93bcc
  4219df:	loopne 0x4219c0
  4219e1:	pop    ds
  4219e2:	cdq    
  4219e3:	hlt    
  4219e4:	and    dl,al
  4219e6:	scas   al,BYTE PTR es:[edi]
  4219e7:	int3   
  4219e8:	test   eax,0xe0db6943
  4219ed:	fistp  WORD PTR [ebx]
  4219ef:	jns    0x4219f0
  4219f1:	jo     0x42197a
  4219f3:	std    
  4219f4:	(bad)  
  4219f5:	std    
  4219f6:	or     al,0xbd
  4219f8:	fnstsw ax
  4219fa:	fistp  WORD PTR [edi]
  4219fc:	jns    0x4219dd
  4219fe:	and    dl,al
  421a00:	pop    esi
  421a01:	loop   0x4219de
  421a03:	xor    bh,cl
  421a05:	mov    esp,0x791fdfe0
  421a0a:	lahf   
  421a0b:	and    dl,al
  421a0d:	mov    esi,0xbd43a23c
  421a12:	test   eax,esp
  421a14:	fistp  WORD PTR [edi]
  421a16:	mov    eax,ds:0xbec220fb
  421a1b:	int3   
  421a1c:	test   eax,0xe0dfbd43
  421a21:	fistp  WORD PTR [edi]
  421a23:	jns    0x421a24
  421a25:	add    dl,al
  421a27:	mov    esi,0xbd43a92c
  421a2c:	fnstsw ax
  421a2e:	fistp  WORD PTR [edi]
  421a30:	jns    0x421a31
  421a32:	and    dl,al
  421a34:	mov    esi,0xbd43a9cc
  421a39:	fnstsw ax
  421a3b:	fistp  WORD PTR [edi]
  421a3d:	jns    0x421a3e
  421a3f:	and    dl,al
  421a41:	mov    esi,0xbd43a9cc
  421a46:	fnstsw ax
  421a48:	fistp  WORD PTR [edi]
  421a4a:	jns    0x421a4b
  421a4c:	and    dl,al
  421a4e:	mov    esi,0xbd43a9cc
  421a53:	fnstsw ax
  421a55:	fistp  WORD PTR [edi]
  421a57:	jns    0x421a58
  421a59:	and    dl,al
  421a5b:	mov    esi,0xbd43a9cc
  421a60:	fnstsw ax
  421a62:	fistp  WORD PTR [edi]
  421a64:	jns    0x421a65
  421a66:	and    dl,al
  421a68:	mov    esi,0xbd43a9cc
  421a6d:	fnstsw ax
  421a6f:	fistp  WORD PTR [edi]
  421a71:	jns    0x421a72
  421a73:	and    dl,al
  421a75:	mov    esi,0xbd43a9cc
  421a7a:	fnstsw ax
  421a7c:	fistp  WORD PTR [edi]
  421a7e:	jns    0x421a7f
  421a80:	and    dl,al
  421a82:	mov    esi,0xbd43a9cc
  421a87:	fnstsw ax
  421a89:	fistp  WORD PTR [edi]
  421a8b:	jns    0x421a8c
  421a8d:	and    dl,al
  421a8f:	mov    esi,0xbd43a9cc
  421a94:	fnstsw ax
  421a96:	fistp  WORD PTR [edi]
  421a98:	jns    0x421a99
  421a9a:	and    dl,al
  421a9c:	mov    esi,0xbd43a9cc
  421aa1:	fnstsw ax
  421aa3:	fistp  WORD PTR [edi]
  421aa5:	jns    0x421aa6
  421aa7:	and    dl,al
  421aa9:	mov    esi,0xbd43a9cc
  421aae:	fnstsw ax
  421ab0:	fistp  WORD PTR [edi]
  421ab2:	jns    0x421ab3
  421ab4:	and    dl,al
  421ab6:	mov    esi,0xbd43a9cc
  421abb:	fnstsw ax
  421abd:	fistp  WORD PTR [edi]
  421abf:	jns    0x421ac0
  421ac1:	and    dl,al
  421ac3:	mov    esi,0xbd43a9cc
  421ac8:	fnstsw ax
  421aca:	fistp  WORD PTR [edi]
  421acc:	jns    0x421acd
  421ace:	and    dl,al
  421ad0:	mov    esi,0xbd43a9cc
  421ad5:	fnstsw ax
  421ad7:	fistp  WORD PTR [edi]
  421ad9:	jns    0x421ada
  421adb:	and    dl,al
  421add:	mov    esi,0xbd43a9cc
  421ae2:	fnstsw ax
  421ae4:	fistp  WORD PTR [edi]
  421ae6:	jns    0x421ae7
  421ae8:	and    dl,al
  421aea:	mov    esi,0xbd43a9cc
  421aef:	fnstsw ax
  421af1:	fistp  WORD PTR [edi]
  421af3:	jns    0x421af4
  421af5:	and    dl,al
  421af7:	mov    esi,0xbd43a9cc
  421afc:	fnstsw ax
  421afe:	fistp  WORD PTR [edi]
  421b00:	jns    0x421b01
  421b02:	and    dl,al
  421b04:	mov    esi,0xbd43a9cc
  421b09:	fnstsw ax
  421b0b:	fistp  WORD PTR [edi]
  421b0d:	jns    0x421b0e
  421b0f:	and    dl,al
  421b11:	mov    esi,0xbd43a9cc
  421b16:	fnstsw ax
  421b18:	fistp  WORD PTR [edi]
  421b1a:	jns    0x421b1b
  421b1c:	and    dl,al
  421b1e:	mov    esi,0xbd43a9cc
  421b23:	fnstsw ax
  421b25:	fistp  WORD PTR [edi]
  421b27:	jns    0x421b28
  421b29:	and    dl,al
  421b2b:	mov    esi,0xbd43a9cc
  421b30:	fnstsw ax
  421b32:	fistp  WORD PTR [edi]
  421b34:	jns    0x421b35
  421b36:	and    dl,al
  421b38:	mov    esi,0xbd43a9cc
  421b3d:	fnstsw ax
  421b3f:	fistp  WORD PTR [edi]
  421b41:	jns    0x421b42
  421b43:	and    dl,al
  421b45:	mov    esi,0xbd43a9cc
  421b4a:	fnstsw ax
  421b4c:	fistp  WORD PTR [edi]
  421b4e:	jns    0x421b4f
  421b50:	and    dl,al
  421b52:	mov    esi,0xbd43a9cc
  421b57:	fnstsw ax
  421b59:	fistp  WORD PTR [edi]
  421b5b:	jns    0x421b5c
  421b5d:	and    dl,al
  421b5f:	mov    esi,0xbd43a9cc
  421b64:	fnstsw ax
  421b66:	fistp  WORD PTR [edi]
  421b68:	jns    0x421b69
  421b6a:	and    dl,al
  421b6c:	mov    esi,0xbd43a9cc
  421b71:	fnstsw ax
  421b73:	fistp  WORD PTR [edi]
  421b75:	jns    0x421b76
  421b77:	and    dl,al
  421b79:	mov    esi,0xbd43a9cc
  421b7e:	fnstsw ax
  421b80:	fistp  WORD PTR [edi]
  421b82:	jns    0x421b83
  421b84:	and    dl,al
  421b86:	mov    esi,0xbd43a9cc
  421b8b:	fnstsw ax
  421b8d:	fistp  WORD PTR [edi]
  421b8f:	jns    0x421b90
  421b91:	and    dl,al
  421b93:	mov    esi,0xbd43a9cc
  421b98:	fnstsw ax
  421b9a:	fistp  WORD PTR [edi]
  421b9c:	jns    0x421b9d
  421b9e:	and    dl,al
  421ba0:	mov    esi,0xbd43a9cc
  421ba5:	fnstsw ax
  421ba7:	fistp  WORD PTR [edi]
  421ba9:	jns    0x421baa
  421bab:	and    dl,al
  421bad:	mov    esi,0xbd43a9cc
  421bb2:	fnstsw ax
  421bb4:	fistp  WORD PTR [edi]
  421bb6:	jns    0x421bb7
  421bb8:	and    dl,al
  421bba:	mov    esi,0xbd43a9cc
  421bbf:	fnstsw ax
  421bc1:	fistp  WORD PTR [edi]
  421bc3:	jns    0x421bc4
  421bc5:	and    dl,al
  421bc7:	mov    esi,0xbd43a9cc
  421bcc:	fnstsw ax
  421bce:	fistp  WORD PTR [edi]
  421bd0:	jns    0x421bd1
  421bd2:	and    dl,al
  421bd4:	mov    esi,0xbd43a9cc
  421bd9:	fnstsw ax
  421bdb:	fistp  WORD PTR [edi]
  421bdd:	jns    0x421bde
  421bdf:	and    dl,al
  421be1:	mov    esi,0xbd43a9cc
  421be6:	fnstsw ax
  421be8:	fbstp  TBYTE PTR [eax-0x2f]
  421beb:	hlt    
  421bec:	and    ch,ch
  421bee:	mov    esi,0xbd43b9cc
  421bf3:	cmc    
  421bf4:	inc    edx
  421bf5:	add    eax,0xd001f6e
  421bfa:	pop    esp
  421bfb:	cmp    DWORD PTR [esp+eax*2+0x54cc5575],ebx
  421c02:	dec    edx
  421c03:	jns    0x421c0d
  421c05:	jnp    0x421c81
  421c07:	ror    DWORD PTR [edi],1
  421c09:	jnp    0x421bca
  421c0b:	cs pop ecx
  421c0d:	push   ebp
  421c0e:	popa   
  421c0f:	sbb    DWORD PTR [ecx],esi
  421c11:	sbb    ebp,DWORD PTR [edi+0x1f]
  421c14:	sti    
  421c15:	lea    eax,[ebx-0x2060abe8]
  421c1b:	(bad)  
  421c1c:	js     0x421bb5
  421c1e:	sub    al,0xae
  421c20:	dec    ebp
  421c21:	imul   ecx,DWORD PTR [ecx+esi*8-0x40f3a88c],0xffffffef
  421c29:	add    DWORD PTR [ebx],edi
  421c2b:	ret    0xf3b3
  421c2e:	pop    es
  421c2f:	xchg   ecx,eax
  421c30:	xor    al,0x37
  421c32:	dec    ecx
  421c33:	push   edx
  421c34:	mov    ebx,0x88107cc0
  421c39:	push   ebp
  421c3a:	or     eax,0xf88ac687
  421c3f:	add    BYTE PTR [ebx+0x6e],dh
  421c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c43:	mul    BYTE PTR [edx-0x1c]
  421c46:	jle    0x421cc2
  421c48:	and    BYTE PTR [ecx-0x298fd488],bh
  421c4e:	cmp    eax,ecx
  421c50:	das    
  421c51:	jle    0x421c45
  421c53:	lahf   
  421c54:	xchg   dh,dl
  421c56:	xchg   edx,eax
  421c57:	sub    eax,DWORD PTR [edx]
  421c59:	imul   esi,esi,0x38
  421c5c:	fistp  QWORD PTR [edi+0x4]
  421c5f:	es dec ebp
  421c61:	call   0x9301:0x80b70284
  421c68:	and    cl,dl
  421c6a:	out    dx,al
  421c6b:	ror    esi,cl
  421c6d:	lock dec esi
  421c6f:	pusha  
  421c70:	loopne 0x421ce3
  421c72:	test   BYTE PTR [ecx-0x8],cl
  421c75:	sbb    esi,DWORD PTR [ebp-0x6a]
  421c78:	nop
  421c79:	dec    edx
  421c7a:	fwait
  421c7b:	xor    esi,DWORD PTR [esi+0x1febe439]
  421c81:	cmp    esp,DWORD PTR [edx-0x33]
  421c84:	sub    eax,0x38aef515
  421c89:	jno    0x421c43
  421c8b:	arpl   bx,sp
  421c8d:	mov    bl,0xa7
  421c8f:	push   esi
  421c90:	mov    al,ds:0x49550790
  421c95:	retf   0xc47a
  421c98:	loopne 0x421cd9
  421c9a:	mov    dl,0x32
  421c9c:	mov    ch,0xd0
  421c9e:	retf   0x7e35
  421ca1:	mov    cl,BYTE PTR [ebx+0x30]
  421ca4:	push   cs
  421ca5:	repnz cmp eax,DWORD PTR [eax-0x3e16dc8a]
  421cac:	popf   
  421cad:	mov    ebx,0x51e19422
  421cb2:	arpl   WORD PTR [esi-0x6e],si
  421cb5:	xor    dh,bh
  421cb7:	mov    dh,0x11
  421cb9:	ret    
  421cba:	in     eax,dx
  421cbb:	call   0xc28b1c1a
  421cc0:	out    dx,al
  421cc1:	mov    bh,0x1d
  421cc3:	int3   
  421cc4:	imul   esi,DWORD PTR [edx-0x5e],0xffffffee
  421cc8:	ja     0x421ced
  421cca:	lahf   
  421ccb:	push   esi
  421ccc:	cmp    edx,ecx
  421cce:	push   ecx
  421ccf:	icebp  
  421cd0:	int    0x6
  421cd2:	and    eax,esi
  421cd4:	sub    DWORD PTR [edi],ecx
  421cd6:	test   al,0xb3
  421cd8:	push   ebp
  421cd9:	fstp   QWORD PTR [ebp-0x61]
  421cdc:	pop    esp
  421cdd:	inc    DWORD PTR [edx-0x7da2f9fd]
  421ce3:	push   0x2b
  421ce5:	or     BYTE PTR [edi+0x71],0x78
  421ce9:	mov    cs,WORD PTR [esi+eiz*2+0x5b8ec8b3]
  421cf0:	xchg   esp,eax
  421cf1:	inc    esp
  421cf2:	adc    al,0xd2
  421cf4:	loop   0x421c80
  421cf6:	and    ebx,DWORD PTR [esi-0x212e06e0]
  421cfc:	dec    esi
  421cfd:	cmp    DWORD PTR [edx+ebx*1-0x4d40c66a],0xffffffc3
  421d05:	push   ebx
  421d06:	fsub   QWORD PTR [ebx]
  421d08:	loopne 0x421c8d
  421d0a:	ins    DWORD PTR es:[edi],dx
  421d0b:	mul    DWORD PTR [edi]
  421d0d:	int3   
  421d0e:	jge    0x421d52
  421d10:	aam    0x84
  421d12:	aaa    
  421d13:	mov    BYTE PTR cs:[esi+0x7a],dh
  421d17:	pop    edx
  421d18:	push   es
  421d19:	jg     0x421d18
  421d1b:	push   edx
  421d1c:	leave  
  421d1d:	jnp    0x421d79
  421d1f:	mov    eax,ds:0x2557f8ae
  421d24:	xor    ecx,DWORD PTR [bx]
  421d27:	xor    eax,0xda735208
  421d2c:	pop    edx
  421d2d:	sub    ebp,DWORD PTR [edx+0x37]
  421d30:	xor    edx,DWORD PTR [edi+edx*1]
  421d33:	jmp    0xf1f9f454
  421d38:	jne    0x421d0b
  421d3a:	push   ebx
  421d3b:	jbe    0x421cc8
  421d3d:	(bad)  
  421d3e:	movsx  ebx,WORD PTR [ecx]
  421d41:	push   edi
  421d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d43:	ins    DWORD PTR es:[edi],dx
  421d44:	lea    esi,[edi-0x75]
  421d47:	add    al,BYTE PTR [eax]
  421d49:	ins    DWORD PTR es:[edi],dx
  421d4a:	cmp    ebp,DWORD PTR [esi+eiz*8+0x5b]
  421d4e:	pop    ss
  421d4f:	ror    DWORD PTR [edx+eiz*8+0x4d],0xa7
  421d54:	(bad)  
  421d55:	out    0x2c,eax
  421d57:	stc    
  421d58:	lods   al,BYTE PTR ds:[esi]
  421d59:	add    DWORD PTR [edi+0xc34c40a],edx
  421d5f:	mov    esp,0xffb5435f
  421d64:	cmp    ebp,DWORD PTR [ebp-0x77]
  421d67:	cmp    BYTE PTR [edx-0x753c78f8],0xc4
  421d6e:	mov    BYTE PTR [ebx+0x54],cl
  421d71:	icebp  
  421d72:	test   eax,0x3902362
  421d77:	xchg   edx,eax
  421d78:	mov    ah,0xd9
  421d7a:	into   
  421d7b:	lods   al,BYTE PTR ds:[esi]
  421d7c:	mov    al,ds:0xbd688f87
  421d81:	or     BYTE PTR [ebp-0x19],bl
  421d84:	pop    ss
  421d85:	or     dl,bh
  421d87:	nop
  421d88:	lods   eax,DWORD PTR ds:[esi]
  421d89:	fdivr  DWORD PTR [edi]
  421d8b:	sti    
  421d8c:	add    bh,BYTE PTR [ebx+0x5acaee15]
  421d92:	xchg   edi,eax
  421d93:	loop   0x421da4
  421d95:	cmp    DWORD PTR [ecx-0x40],esp
  421d98:	xchg   esi,eax
  421d99:	mov    ds:0xd8aafbc9,al
  421d9e:	lds    ebp,FWORD PTR [edi]
  421da0:	and    BYTE PTR [ecx+0x2995657e],cl
  421da6:	add    cl,BYTE PTR [ecx+0x5cc85ec3]
  421dac:	clc    
  421dad:	rcr    DWORD PTR [edx+edx*8],1
  421db0:	mov    bh,0xe7
  421db2:	jne    0x421dd6
  421db4:	xchg   DWORD PTR [esi],ebp
  421db6:	mov    ah,0xa9
  421db8:	push   ss
  421db9:	aam    0x58
  421dbb:	and    al,0x9
  421dbd:	ds out 0x24,eax
  421dc0:	lods   eax,DWORD PTR ds:[esi]
  421dc1:	lds    ebp,FWORD PTR [eax]
  421dc3:	push   ss
  421dc4:	push   ds
  421dc5:	push   ebp
  421dc6:	in     eax,dx
  421dc7:	inc    esp
  421dc8:	pop    edi
  421dc9:	or     DWORD PTR [edx+0x7848917d],eax
  421dcf:	aam    0x24
  421dd1:	repz aas 
  421dd3:	test   DWORD PTR gs:[ebp-0x531961d6],esp
  421dda:	adc    edi,DWORD PTR [ebx]
  421ddc:	packuswb mm4,mm5
  421ddf:	iret   
  421de0:	push   0x661d9310
  421de5:	push   ecx
  421de6:	sbb    eax,0x40232f2d
  421deb:	addr16 xchg edx,eax
  421ded:	(bad)  
  421dee:	lods   eax,DWORD PTR ds:[esi]
  421def:	push   0x4b597a7
  421df4:	sbb    DWORD PTR [ebx],ecx
  421df6:	sub    DWORD PTR ds:[edx+0x2d934929],ebp
  421dfd:	shr    BYTE PTR [edi+edi*4],0xc6
  421e01:	cmp    DWORD PTR [eax-0x5e],ebp
  421e04:	comiss xmm1,DWORD PTR [ecx-0xc149cce]
  421e0b:	or     eax,0x876e5068
  421e10:	es loop 0x421e10
  421e13:	sahf   
  421e14:	lock jmp 0x421daa
  421e17:	sar    esi,0x3a
  421e1a:	repz jnp 0x421e3f
  421e1d:	mov    ds:0x85648b7a,al
  421e22:	shr    DWORD PTR [edi-0x62],0xa1
  421e26:	sbb    cl,BYTE PTR [ebx+0x1a8a4b3d]
  421e2c:	ds pushf 
  421e2e:	loop   0x421dfc
  421e30:	repnz cdq 
  421e32:	leave  
  421e33:	fs cs in al,0x93
  421e37:	push   edi
  421e38:	ins    DWORD PTR es:[edi],dx
  421e39:	in     al,dx
  421e3a:	jnp    0x421df7
  421e3c:	rcr    BYTE PTR [ebx-0x74a0a08c],1
  421e42:	stc    
  421e43:	call   0x3eb:0x42ebd71d
  421e4a:	in     al,dx
  421e4b:	or     BYTE PTR [esi-0x20baaab7],0x83
  421e52:	(bad)  
  421e53:	push   ecx
  421e54:	mov    ebp,0xbcfbe9b6
  421e59:	and    BYTE PTR [esi-0x3ec97cfa],bl
  421e5f:	fnop   
  421e61:	mov    ebp,0x1078d8ed
  421e66:	push   edi
  421e67:	(bad)  
  421e68:	and    al,0xca
  421e6a:	scas   al,BYTE PTR es:[edi]
  421e6b:	ret    0x1530
  421e6e:	add    ebp,DWORD PTR [ebx+ecx*1]
  421e71:	fcmovbe st,st(4)
  421e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e74:	ins    DWORD PTR es:[edi],dx
  421e75:	pop    ebp
  421e76:	pop    ebx
  421e77:	push   cs
  421e78:	fdivr  DWORD PTR [eax-0x23]
  421e7b:	test   eax,0xfaba02d
  421e80:	push   ebp
  421e81:	add    DWORD PTR [edi-0x5c],eax
  421e84:	xor    DWORD PTR [edx-0x5a],edx
  421e87:	mov    dh,0xc4
  421e89:	icebp  
  421e8a:	pop    ecx
  421e8b:	scas   eax,DWORD PTR es:[edi]
  421e8c:	sar    al,0x28
  421e8f:	push   edx
  421e90:	sub    BYTE PTR [esi+edi*4+0x71],dl
  421e94:	xor    cl,ch
  421e96:	retf   0xfa55
  421e99:	push   edi
  421e9a:	sbb    eax,0xe8c8be70
  421e9f:	jbe    0x421ed9
  421ea1:	jmp    0x2f73:0xb48c060a
  421ea8:	shl    ah,cl
  421eaa:	push   eax
  421eab:	daa    
  421eac:	test   eax,0x308dccb5
  421eb1:	mov    dl,0xf6
  421eb3:	xchg   edx,eax
  421eb4:	sar    esi,1
  421eb6:	adc    al,0xf3
  421eb8:	call   0x67ac:0x41cd9bad
  421ebf:	fwait
  421ec0:	pop    esi
  421ec1:	xchg   esp,eax
  421ec2:	fld    QWORD PTR ds:0x924e237
  421ec8:	sbb    DWORD PTR [ebx-0x37e85ac7],0xb3fcd67f
  421ed2:	xchg   edx,eax
  421ed3:	fcmovnu st,st(7)
  421ed5:	scas   al,BYTE PTR es:[edi]
  421ed6:	stos   DWORD PTR es:[edi],eax
  421ed7:	inc    edx
  421ed8:	cmp    edi,DWORD PTR [edx]
  421eda:	fsub   DWORD PTR [ecx-0x25]
  421edd:	cdq    
  421ede:	xor    dh,BYTE PTR [edi-0x58088c36]
  421ee4:	jmp    0x5e4f:0xc435785d
  421eeb:	enter  0xa02a,0xa4
  421eef:	sub    DWORD PTR [esi-0x5e],ebx
  421ef2:	test   al,0x83
  421ef4:	aaa    
  421ef5:	pop    ss
  421ef6:	pop    esi
  421ef7:	outs   dx,DWORD PTR ds:[esi]
  421ef8:	(bad)  
  421ef9:	sbb    al,0xf
  421efb:	inc    esp
  421efc:	aad    0xc0
  421efe:	(bad)  
  421eff:	std    
  421f00:	leave  
  421f01:	add    al,0xab
  421f03:	ja     0x421ece
  421f05:	cmp    cl,BYTE PTR [eax-0x58]
  421f08:	fnstcw WORD PTR [ebx+0x23f73885]
  421f0e:	adc    DWORD PTR [edi-0x3bf2646a],eax
  421f14:	push   edx
  421f15:	test   eax,0x2353c59
  421f1a:	mov    bl,0x74
  421f1c:	js     0x421f5f
  421f1e:	xor    eax,0xea62ef4e
  421f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f24:	mov    ah,BYTE PTR [ecx-0x68]
  421f27:	jge    0x421f81
  421f29:	pop    ebp
  421f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f2b:	and    ch,BYTE PTR [esp+eax*4-0x17]
  421f2f:	sub    al,0x39
  421f31:	cmp    DWORD PTR [eax+ebp*1+0x5d],0xe63da7d1
  421f39:	rcr    BYTE PTR ds:0x6e667722,cl
  421f3f:	sbb    ch,BYTE PTR [ebp-0x51c8bc60]
  421f45:	shr    DWORD PTR [esi+0x566142a6],cl
  421f4b:	pop    ebx
  421f4c:	jnp    0x421f85
  421f4e:	inc    ecx
  421f4f:	xlat   BYTE PTR ds:[ebx]
  421f50:	adc    bh,cl
  421f52:	or     eax,0x17b6b82e
  421f57:	pop    ds
  421f58:	retf   0x3600
  421f5b:	push   esi
  421f5c:	fsubr  DWORD PTR [edi-0x42874ad3]
  421f62:	push   esp
  421f63:	mov    ebx,0xe10c6ca2
  421f68:	(bad)  
  421f69:	push   cs
  421f6a:	aam    0x74
  421f6c:	mov    ds:0x13534070,eax
  421f71:	adc    cl,BYTE PTR [esi]
  421f73:	pop    ecx
  421f74:	jl     0x421f02
  421f76:	cmp    BYTE PTR [esi+ebp*8+0x6e333672],dl
  421f7d:	dec    esp
  421f7e:	mov    edx,0xe602e709
  421f83:	lea    edi,[esi+0x24]
  421f86:	sbb    al,0x7f
  421f88:	arpl   WORD PTR [eax],bp
  421f8a:	and    al,BYTE PTR [eax+0x3e]
  421f8d:	push   es
  421f8e:	xchg   edx,eax
  421f8f:	xchg   esi,eax
  421f90:	dec    esp
  421f91:	xchg   ebp,eax
  421f92:	adc    al,0x5f
  421f94:	sbb    ebp,DWORD PTR [ebp+edx*2+0x512072da]
  421f9b:	dec    esp
  421f9c:	xchg   esi,eax
  421f9d:	cmp    al,bh
  421f9f:	test   al,0x2c
  421fa1:	xor    DWORD PTR [ecx-0x6f45cbb8],esi
  421fa7:	aaa    
  421fa8:	or     bh,BYTE PTR [eax+0x45714755]
  421fae:	inc    edi
  421faf:	cmp    ch,dl
  421fb1:	ss adc bh,cl
  421fb4:	dec    esp
  421fb5:	sti    
  421fb6:	mov    esi,0xc9ed6b56
  421fbb:	and    bh,bl
  421fbd:	inc    esi
  421fbe:	mov    esi,0x967565e
  421fc3:	sub    ebx,DWORD PTR [esi-0x78ee26cf]
  421fc9:	fmul   QWORD PTR [edx-0x79]
  421fcc:	xchg   edi,eax
  421fcd:	xchg   DWORD PTR fs:[esi-0x35f34dcf],esi
  421fd4:	es cdq 
  421fd6:	push   eax
  421fd7:	adc    DWORD PTR [eax+edi*1-0x54],eax
  421fdb:	inc    edi
  421fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fdd:	ss test eax,0xfe1c0815
  421fe3:	jmp    0x422006
  421fe5:	aam    0x36
  421fe7:	test   dl,bh
  421fe9:	vshufps ymm7,ymm1,YMMWORD PTR [eax],0x26
  421fee:	xor    DWORD PTR [esi-0xe],ebx
  421ff1:	test   BYTE PTR [ebp-0x771a325c],dl
  421ff7:	stc    
  421ff8:	push   ds
  421ff9:	jne    0x422006
  421ffb:	sub    edi,ecx
  421ffd:	aas    
  421ffe:	or     eax,0x46a9b057
  422003:	cwde   
  422004:	mov    bh,0xf9
  422006:	jnp    0x421fe7
  422008:	or     esp,DWORD PTR [esi]
  42200a:	pop    eax
  42200b:	pusha  
  42200c:	or     eax,0xca671656
  422011:	lds    edi,FWORD PTR [ebx+0x35721784]
  422017:	sub    ebp,DWORD PTR [esi+0x14]
  42201a:	mov    esp,0xdb64875
  42201f:	mov    esp,0x8d7222b5
  422024:	imul   eax,DWORD PTR [ebp+0x3fd09953],0xffffff91
  42202b:	jmp    0x478fa179
  422030:	daa    
  422031:	fsub   st,st(5)
  422033:	enter  0xebb6,0x5f
  422037:	test   DWORD PTR [eax-0x78],edx
  42203a:	jne    0x4220a9
  42203c:	test   DWORD PTR [ecx],ebp
  42203e:	aam    0x30
  422040:	and    BYTE PTR [ebp+0x73],ah
  422043:	xor    ah,ch
  422045:	aaa    
  422046:	mov    eax,DWORD PTR ds:0x310cd023
  42204c:	aas    
  42204d:	or     dl,BYTE PTR [eax-0x16]
  422050:	xchg   ebx,eax
  422051:	je     0x4220c6
  422053:	add    ecx,DWORD PTR [eax-0x57086b8d]
  422059:	inc    eax
  42205a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42205b:	push   es
  42205c:	pop    eax
  42205d:	mov    esi,0x43cc728b
  422062:	adc    eax,0xf50f98d1
  422067:	lahf   
  422068:	mov    ebp,0x5b9c48c4
  42206d:	xor    DWORD PTR [ecx-0x4de68b58],esi
  422073:	test   DWORD PTR ds:0x74cd9cb4,esp
  422079:	and    ebp,edx
  42207b:	(bad)
  42207e:	data16 shl BYTE PTR [ecx],1
  422081:	push   cs
  422082:	int3   
  422083:	and    BYTE PTR [ecx-0x484bfae],dh
  422089:	lods   eax,DWORD PTR ds:[esi]
  42208a:	loop   0x422067
  42208c:	mov    dl,0x1e
  42208e:	mov    dl,0xfc
  422090:	ficomp DWORD PTR [ebp-0x1acc10b4]
  422096:	push   es
  422097:	sbb    esi,ebp
  422099:	and    eax,0x4818e0cb
  42209e:	push   ecx
  42209f:	test   eax,0x360bf30c
  4220a4:	pop    ebx
  4220a5:	pop    ds
  4220a6:	pop    ebp
  4220a7:	dec    eax
  4220a8:	lods   eax,DWORD PTR ds:[esi]
  4220a9:	aad    0x4a
  4220ab:	push   edx
  4220ac:	fist   WORD PTR [bx+di]
  4220af:	fwait
  4220b0:	pop    ds
  4220b1:	loop   0x4220cc
  4220b3:	push   ss
  4220b4:	mov    ebp,0x83d374d4
  4220b9:	ss repz jle 0x4220e8
  4220bd:	hlt    
  4220be:	mov    DWORD PTR [edx],edx
  4220c0:	aam    0x1d
  4220c2:	vucomisd xmm5,QWORD PTR [eax-0x4d8cb903]
  4220ca:	arpl   cx,ax
  4220cc:	fcom   DWORD PTR [edx+0x3d]
  4220cf:	ss jge 0x422091
  4220d2:	fisubr WORD PTR [edx-0x1b]
  4220d5:	les    edx,FWORD PTR [ebx-0x34ebb28f]
  4220db:	into   
  4220dc:	mov    ecx,0x264a15ef
  4220e1:	loopne 0x4220e1
  4220e3:	xchg   ebp,eax
  4220e4:	call   0x5d32127f
  4220e9:	pusha  
  4220ea:	in     al,0xf2
  4220ec:	mov    ebx,0xda5204fd
  4220f1:	xor    al,0xf9
  4220f3:	adc    bh,bl
  4220f5:	neg    DWORD PTR [edi+0x29a8272d]
  4220fb:	jns    0x4220c7
  4220fd:	mov    edx,0xcd7f7f4d
  422102:	sbb    eax,0x574e5f74
  422107:	and    BYTE PTR [edi],0xcb
  42210a:	(bad)  
  42210b:	das    
  42210c:	and    eax,0x812f6f1b
  422111:	jmp    0xb668:0x21d29040
  422118:	sbb    BYTE PTR [eax],0xb1
  42211b:	into   
  42211c:	repz mov esi,0x5db44be4
  422122:	xor    DWORD PTR [edx-0x6f],ebp
  422125:	leave  
  422126:	(bad)  
  422127:	and    ecx,DWORD PTR [eax-0x9292c3d]
  42212d:	mov    dl,0x82
  42212f:	pop    ss
  422130:	and    ah,cl
  422132:	(bad)  
  422133:	xor    ecx,DWORD PTR [eax]
  422135:	pop    es
  422136:	fsub   QWORD PTR [esi+0x67e8903f]
  42213c:	je     0x4220d8
  42213e:	mov    al,0xc9
  422140:	mov    WORD PTR [eax+0x143a8faf],ss
  422146:	es push es
  422148:	add    eax,0x88282a85
  42214d:	adc    al,0x41
  42214f:	aas    
  422150:	dec    ecx
  422151:	mov    esp,0x64c5f0a4
  422156:	jne    0x42213e
  422158:	imul   edi,DWORD PTR fs:[esi+eax*2-0x4d119c0f],0x4c
  422161:	(bad)  
  422162:	mov    bh,0x4
  422164:	(bad)  
  422166:	in     eax,0x92
  422168:	data16 (bad) 
  42216a:	mov    dh,0xe1
  42216c:	dec    edi
  42216d:	call   0x30cf:0x7ff34b3e
  422174:	jmp    0xa044:0xc0de3998
  42217b:	mov    eax,0x31f39c72
  422180:	into   
  422181:	and    DWORD PTR [esp+edx*8-0x37d0e583],ebp
  422188:	add    BYTE PTR [ebx+0x430d2b1c],al
  42218e:	pop    ds
  42218f:	inc    edi
  422190:	mov    ds:0x39b5dd58,eax
  422195:	or     eax,0x8183635f
  42219a:	add    al,0xb4
  42219c:	bnd ret 0xb261
  4221a0:	fwait
  4221a1:	or     al,0xc4
  4221a3:	das    
  4221a4:	dec    eax
  4221a5:	jae    0x422127
  4221a7:	ins    DWORD PTR es:[edi],dx
  4221a8:	xchg   bl,bl
  4221aa:	aad    0x5e
  4221ac:	or     DWORD PTR [edx-0x7d],ebx
  4221af:	into   
  4221b0:	daa    
  4221b1:	rcr    DWORD PTR [esi+edx*2-0x36a00281],1
  4221b8:	lahf   
  4221b9:	adc    cl,bh
  4221bb:	in     eax,0x5b
  4221bd:	cmp    DWORD PTR [esi+0x6f],0x8
  4221c1:	dec    ebx
  4221c2:	cdq    
  4221c3:	out    dx,eax
  4221c4:	in     eax,dx
  4221c5:	jecxz  0x422222
  4221c7:	cmp    al,0x80
  4221c9:	sbb    DWORD PTR [eiz*1-0x1c130a34],esp
  4221d0:	(bad)  [eax]
  4221d2:	and    eax,0xe80ac57c
  4221d7:	stos   BYTE PTR es:[edi],al
  4221d8:	mov    WORD PTR [ecx+0x1d],cs
  4221db:	stos   BYTE PTR es:[edi],al
  4221dc:	xchg   al,dl
  4221de:	outs   dx,BYTE PTR ds:[esi]
  4221df:	(bad)  
  4221e0:	repz sbb bh,ah
  4221e3:	add    al,0xab
  4221e5:	cs loop 0x4221a2
  4221e8:	mov    ch,BYTE PTR [esi+0x12]
  4221eb:	cmp    cl,BYTE PTR [edx-0xf]
  4221ee:	addr16 retf 
  4221f0:	stos   DWORD PTR es:[edi],eax
  4221f1:	mov    DWORD PTR ds:0x3b1db281,ecx
  4221f7:	push   ecx
  4221f8:	or     edx,eax
  4221fa:	retf   
  4221fb:	stos   DWORD PTR es:[edi],eax
  4221fc:	out    dx,eax
  4221fd:	xchg   edx,eax
  4221fe:	jbe    0x42220b
  422200:	push   eax
  422201:	cmp    eax,0x93625975
  422206:	mov    ecx,0x466b1941
  42220b:	pop    ebx
  42220c:	pop    ebx
  42220d:	inc    ecx
  42220e:	sbb    BYTE PTR [ebx+0x3ffc8022],al
  422214:	adc    DWORD PTR [esp+ecx*8-0xcefc840],edi
  42221b:	loop   0x422272
  42221d:	mov    ds:0x6857b21f,al
  422222:	mov    bl,0xd7
  422224:	pop    ecx
  422225:	xchg   al,dl
  422227:	xor    ch,BYTE PTR [ecx]
  422229:	mov    bh,BYTE PTR [ebp-0x3b9b89]
  42222f:	mov    ah,0x1b
  422231:	pusha  
  422232:	lods   eax,DWORD PTR ds:[esi]
  422233:	pop    eax
  422234:	push   ds
  422235:	mov    bh,0x19
  422237:	push   esi
  422238:	ins    BYTE PTR es:[edi],dx
  422239:	mov    al,0xcd
  42223b:	ins    BYTE PTR es:[edi],dx
  42223c:	mov    fs,WORD PTR [edx]
  42223e:	scas   eax,DWORD PTR es:[edi]
  42223f:	xchg   esp,eax
  422240:	fs inc esi
  422242:	mov    ebx,0xc96a674c
  422247:	popf   
  422248:	mov    WORD PTR [esi+0x478b41f5],?
  42224e:	sub    al,BYTE PTR [ebx-0x74]
  422251:	jno    0x42228b
  422253:	cmp    edx,DWORD PTR [edi+0x7e]
  422256:	mov    al,ds:0x4c0b55c9
  42225b:	sub    BYTE PTR [edi+edi*4+0x67],al
  42225f:	adc    eax,0x97d08ea3
  422264:	mov    esi,DWORD PTR [esi+ebp*8-0x6bb51d3d]
  42226b:	scas   al,BYTE PTR es:[edi]
  42226c:	push   eax
  42226d:	xchg   esi,eax
  42226e:	pushf  
  42226f:	adc    DWORD PTR [edx],ecx
  422271:	jne    0x42222c
  422273:	adc    edx,esp
  422275:	cmp    ebx,DWORD PTR [ebx]
  422277:	and    cl,BYTE PTR [eax+0x47]
  42227a:	test   DWORD PTR [esi+0x69],esp
  42227d:	dec    DWORD PTR [ebx]
  42227f:	inc    ebx
  422280:	and    ebp,esi
  422282:	cmp    BYTE PTR [edx+0x599e1f9e],dl
  422288:	xchg   edx,eax
  422289:	lahf   
  42228a:	mov    al,cl
  42228c:	pusha  
  42228d:	push   ebx
  42228e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42228f:	scas   eax,DWORD PTR es:[edi]
  422290:	jmp    0x422275
  422292:	xlat   BYTE PTR ds:[ebx]
  422293:	(bad)  
  422294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422295:	jne    0x422246
  422297:	sub    DWORD PTR [eax],ebp
  422299:	je     0x422220
  42229b:	aas    
  42229c:	ror    DWORD PTR [esi],1
  42229e:	mov    dh,0x64
  4222a0:	fld    TBYTE PTR [esp+eax*1-0x43]
  4222a4:	idiv   DWORD PTR [ecx+0x5b363029]
  4222aa:	cdq    
  4222ab:	cmp    eax,0x4ec576e3
  4222b0:	inc    esp
  4222b1:	jbe    0x42228d
  4222b3:	mov    eax,0x8071dfd2
  4222b8:	(bad)  
  4222b9:	stc    
  4222ba:	js     0x422326
  4222bc:	sti    
  4222bd:	loope  0x422279
  4222bf:	jge    0x4222c3
  4222c1:	(bad)  
  4222c3:	cli    
  4222c4:	popa   
  4222c5:	xor    ah,BYTE PTR [ebx]
  4222c7:	mov    eax,ds:0x9dc8864e
  4222cc:	fdiv   QWORD PTR [edi+0x48]
  4222cf:	pop    esp
  4222d0:	lmsw   WORD PTR [edi]
  4222d3:	cmp    DWORD PTR [edx],ebp
  4222d5:	int3   
  4222d6:	test   dh,ah
  4222d8:	cmp    edx,DWORD PTR [edi+0x2e]
  4222db:	adc    BYTE PTR [ecx],0xce
  4222de:	and    al,0x8d
  4222e0:	cmp    BYTE PTR [esi+0x5e],al
  4222e3:	out    0x9f,eax
  4222e5:	outs   dx,BYTE PTR ds:[esi]
  4222e7:	xor    al,0x4e
  4222e9:	das    
  4222ea:	les    eax,FWORD PTR [eax-0x2957a338]
  4222f0:	or     DWORD PTR [ebp-0x3d],esp
  4222f3:	or     cl,cl
  4222f5:	mov    eax,0x61088586
  4222fa:	adc    eax,0x5cace112
  4222ff:	mov    ecx,edx
  422301:	and    BYTE PTR [esi],0x5a
  422304:	inc    eax
  422305:	aam    0x7a
  422307:	pop    ss
  422308:	dec    esi
  422309:	cmp    eax,0x4597f9bb
  42230e:	test   DWORD PTR [ecx-0x50],eax
  422311:	(bad)  
  422312:	ja     0x4222ff
  422314:	cmp    eax,0xbd9b82e8
  422319:	push   ebx
  42231a:	daa    
  42231b:	call   0x205d8c06
  422320:	ja     0x422394
  422322:	and    al,0x7c
  422324:	out    0xdf,eax
  422326:	jge    0x422348
  422328:	dec    esp
  422329:	cmp    eax,0x13d13d8c
  42232e:	adc    BYTE PTR [ebx+0x1e],ch
  422331:	add    eax,0x101f2bf0
  422336:	mov    dh,0x49
  422338:	mov    eax,ds:0xf586c342
  42233d:	(bad)  
  42233e:	push   ds
  42233f:	or     al,0x31
  422341:	xchg   ebx,eax
  422342:	dec    esp
  422343:	out    dx,al
  422344:	push   ebx
  422345:	in     al,dx
  422346:	aaa    
  422347:	fistp  QWORD PTR [eax+0x1d11f7fd]
  42234d:	inc    edi
  42234e:	mov    al,0x35
  422350:	pushf  
  422351:	dec    ebp
  422352:	xor    ebx,DWORD PTR [edi]
  422354:	mov    bl,BYTE PTR [ecx+0x512e4a7]
  42235a:	mul    edi
  42235c:	aaa    
  42235d:	xor    ecx,ebp
  42235f:	(bad)  
  422360:	sbb    eax,0x7d3b286c
  422365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422366:	jne    0x422330
  422368:	dec    ebx
  422369:	shl    al,cl
  42236b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42236c:	icebp  
  42236d:	or     edx,DWORD PTR [ebp-0x45271096]
  422373:	ret    0x3755
  422376:	fadd   DWORD PTR [ecx-0x24]
  422379:	xchg   esp,eax
  42237a:	dec    edx
  42237b:	mov    bl,0xde
  42237d:	sub    eax,0x600d5c72
  422382:	jnp    0x422384
  422384:	(bad)
  422387:	push   esi
  422388:	fdiv   QWORD PTR [ecx-0x1de5a7ea]
  42238f:	xchg   edi,eax
  422390:	or     BYTE PTR [eax-0x4f],bl
  422393:	inc    esp
  422395:	rol    DWORD PTR ds:0x56c5438,cl
  42239b:	dec    edx
  42239c:	rol    DWORD PTR [eax],0xa6
  42239f:	mov    edi,0x8845de3d
  4223a4:	mov    ch,0x40
  4223a6:	inc    edx
  4223a7:	rol    ebp,1
  4223a9:	in     al,0xcd
  4223ab:	popa   
  4223ac:	cwde   
  4223ad:	pop    ss
  4223ae:	push   ebx
  4223af:	mov    edx,ebx
  4223b1:	das    
  4223b2:	mov    DWORD PTR [ecx-0x1dc2a749],0x9c1e75bc
  4223bc:	call   0x4a000a55
  4223c1:	sub    BYTE PTR ss:[ebx+edi*8+0x1a4a833f],ah
  4223c9:	cdq    
  4223ca:	ret    
  4223cb:	jmp    0x9ff2:0x7a50c753
  4223d2:	mov    bl,0x11
  4223d4:	daa    
  4223d5:	dec    edx
  4223d6:	fcomip st,st(5)
  4223d8:	push   edi
  4223d9:	dec    edi
  4223da:	dec    ecx
  4223db:	add    eax,DWORD PTR gs:[ecx-0x5ef8a809]
  4223e2:	xor    cl,0x1
  4223e5:	push   esi
  4223e6:	test   ebx,esi
  4223e8:	rcr    DWORD PTR [esi-0x25a64037],0x9f
  4223ef:	adc    dl,BYTE PTR [ebx+0x16864194]
  4223f5:	sub    ch,BYTE PTR [ecx]
  4223f7:	es jb  0x4223c0
  4223fa:	xor    ch,bh
  4223fc:	pop    eax
  4223fd:	out    0x60,al
  4223ff:	adc    ecx,DWORD PTR [ecx-0x384ae86a]
  422405:	and    eax,0xfdb0bb7e
  42240a:	add    BYTE PTR [ebx],0xcd
  42240d:	test   eax,0xca56f020
  422412:	sub    DWORD PTR [ecx+0x73de131e],0x3582292a
  42241c:	push   esi
  42241d:	adc    DWORD PTR [ecx],eax
  42241f:	adc    BYTE PTR [eax-0x627f4363],0xa4
  422426:	out    dx,eax
  422427:	out    dx,eax
  422428:	int3   
  422429:	loopne 0x422414
  42242b:	mov    BYTE PTR [ebx],cl
  42242d:	push   eax
  42242e:	jmp    0x4223b9
  422430:	mov    esp,0x7705b8cc
  422435:	mov    di,fs
  422438:	sahf   
  422439:	push   esi
  42243a:	and    eax,0xe047cb73
  42243f:	fisttp DWORD PTR [edi]
  422441:	push   ebx
  422442:	dec    ecx
  422443:	jne    0x4224a3
  422445:	push   0xffffffa5
  422447:	jl     0x42244d
  422449:	adc    al,0x58
  42244b:	mov    ebp,ds
  42244d:	hlt    
  42244e:	ins    DWORD PTR es:[edi],dx
  42244f:	sub    DWORD PTR [eax-0x3c],ebx
  422452:	mov    esp,0xafd01e68
  422457:	adc    ebx,DWORD PTR [esi]
  422459:	js     0x4224a3
  42245b:	add    BYTE PTR [ebx+0x6],bh
  42245e:	imul   edi,DWORD PTR [ebx],0xc7fefb5d
  422464:	inc    ebp
  422465:	pusha  
  422466:	or     cl,BYTE PTR [ecx]
  422468:	pushf  
  422469:	fwait
  42246a:	xor    al,0x92
  42246c:	xchg   esi,eax
  42246d:	popa   
  42246e:	shr    BYTE PTR [ecx+0x26],0x62
  422472:	retf   0x7f53
  422475:	fstp   st(3)
  422477:	stos   DWORD PTR es:[edi],eax
  422478:	aam    0xa7
  42247a:	adc    BYTE PTR [edx],dl
  42247c:	mov    al,ds:0x1eddb1d5
  422481:	xor    BYTE PTR ds:0x5b22565c,dl
  422487:	pop    esp
  422488:	cld    
  422489:	xchg   edx,eax
  42248a:	jle    0x422483
  42248c:	pusha  
  42248d:	pop    eax
  42248e:	mov    WORD PTR [ecx-0x3b],cs
  422491:	mov    eax,ds:0x3ee9af63
  422496:	fdivr  DWORD PTR [eax]
  422499:	pop    ds
  42249a:	sub    eax,DWORD PTR [ecx+0x2d]
  42249d:	or     DWORD PTR [ecx],0xc64fde3b
  4224a3:	test   eax,0x33aea2f8
  4224a8:	enter  0x4d60,0xa4
  4224ac:	dec    eax
  4224ad:	in     al,dx
  4224ae:	iret   
  4224af:	push   cs
  4224b0:	cld    
  4224b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b2:	and    ch,BYTE PTR [eax-0x3]
  4224b5:	in     eax,0xf4
  4224b7:	jno    0x4224ff
  4224b9:	cwde   
  4224ba:	shr    BYTE PTR [esi],0xa
  4224bd:	into   
  4224be:	call   0x719b:0x23fa9d0c
  4224c5:	mov    edx,0xc0920096
  4224ca:	jns    0x4224fa
  4224cc:	push   ds
  4224cd:	ficom  DWORD PTR [esi-0x59]
  4224d0:	add    al,BYTE PTR [edx+0x11f0de23]
  4224d6:	cmp    esi,DWORD PTR [edx+0x2e]
  4224d9:	iret   
  4224da:	inc    eax
  4224db:	add    esi,DWORD PTR [esp+ebp*8-0x73]
  4224df:	jg     0x4224fe
  4224e1:	cmp    eax,0xd21ef8c8
  4224e6:	pusha  
  4224e7:	test   eax,0x560e1e04
  4224ec:	pop    esp
  4224ed:	aad    0xb2
  4224ef:	mov    edi,0x9b7c490c
  4224f4:	cmp    BYTE PTR [edi-0x4f886768],dh
  4224fa:	sub    esi,DWORD PTR [ebp-0x3d854b7d]
  422500:	inc    ecx
  422501:	aas    
  422502:	inc    ebp
  422503:	and    edx,DWORD PTR ds:0x87125a8c
  422509:	gs push ebp
  42250b:	mov    ebp,DWORD PTR [eax]
  42250d:	lods   al,BYTE PTR ds:[esi]
  42250e:	jle    0x4224ae
  422510:	aaa    
  422511:	fild   QWORD PTR [ebx-0x2d]
  422514:	add    DWORD PTR [eax-0x6b1db5c2],ebx
  42251a:	retf   0x7382
  42251d:	test   BYTE PTR [eax+0x1e],0x8b
  422521:	sub    BYTE PTR [ebp-0x3b],0xa5
  422525:	and    eax,0x9e7e6144
  42252a:	add    DWORD PTR [esi],ebp
  42252c:	xchg   edx,eax
  42252d:	imul   esp,DWORD PTR [esi-0x4fab6f0f],0x38964cb3
  422537:	mov    edi,0x5f260fa6
  42253c:	sbb    bl,BYTE PTR [eax]
  42253e:	and    edx,DWORD PTR [esi-0x582992b]
  422544:	lds    ebp,FWORD PTR [ecx+esi*8+0x5f]
  422548:	push   ss
  422549:	sbb    al,0x89
  42254b:	mov    ch,bl
  42254d:	ret    0x7b9d
  422550:	adc    eax,DWORD PTR [ebx]
  422552:	adc    dh,BYTE PTR [eax]
  422554:	pop    ecx
  422555:	dec    ecx
  422556:	clc    
  422557:	push   edi
  422558:	mov    ecx,0x16f3bdff
  42255d:	and    edi,DWORD PTR [ecx-0x71]
  422560:	add    ebx,0xac1f9092
  422566:	clc    
  422567:	aaa    
  422568:	inc    eax
  422569:	dec    esp
  42256a:	bswap  ecx
  42256c:	rol    DWORD PTR [eax],0xe9
  42256f:	test   DWORD PTR [esi],0xc75c6a70
  422575:	ins    DWORD PTR es:[edi],dx
  422576:	or     DWORD PTR [edi+0x1d91a9dc],edi
  42257c:	(bad)  
  42257e:	inc    edx
  42257f:	and    al,0xac
  422581:	mov    bl,0x7
  422583:	jmp    0x7263:0x8aa1e84d
  42258a:	lock xor bh,BYTE PTR [ebx]
  42258d:	imul   ecx,DWORD PTR [ebp-0x18],0xffffffb3
  422591:	out    dx,eax
  422592:	xchg   esi,eax
  422593:	arpl   WORD PTR [edi+0x49],di
  422596:	bound  ebx,QWORD PTR [eax+0x451b4b26]
  42259c:	cmovs  ecx,DWORD PTR [ebp-0x36]
  4225a0:	mov    esp,0xa36096bf
  4225a5:	mov    ebp,0x71f24153
  4225aa:	or     al,0xc1
  4225ac:	std    
  4225ad:	and    BYTE PTR [esi-0x7da3c7c1],cl
  4225b3:	cld    
  4225b4:	aaa    
  4225b5:	scas   eax,DWORD PTR es:[edi]
  4225b6:	test   al,0x1d
  4225b8:	mov    ecx,0xa99a8b2b
  4225be:	shl    edi,1
  4225c0:	jp     0x42254a
  4225c2:	jno    0x4225b0
  4225c4:	mov    bh,0x30
  4225c6:	adc    DWORD PTR [ebx],esp
  4225c8:	push   ebp
  4225c9:	or     edx,esp
  4225cb:	jne    0x422604
  4225cd:	jbe    0x422604
  4225cf:	leave  
  4225d0:	in     al,0x2e
  4225d2:	or     BYTE PTR [edi+0x20070330],dl
  4225d8:	nop
  4225d9:	dec    esp
  4225da:	push   edx
  4225db:	inc    esp
  4225dc:	outs   dx,DWORD PTR ds:[esi]
  4225dd:	iret   
  4225de:	fnsave [eax+0x71666a61]
  4225e4:	push   ds
  4225e5:	outs   dx,BYTE PTR ds:[esi]
  4225e6:	ins    DWORD PTR es:[edi],dx
  4225e7:	dec    edi
  4225e8:	outs   dx,BYTE PTR ds:[esi]
  4225e9:	retf   
  4225ea:	add    ebx,esp
  4225ec:	jae    0x4225d6
  4225ee:	or     al,0x88
  4225f0:	pusha  
  4225f1:	outs   dx,BYTE PTR ds:[esi]
  4225f2:	mov    bh,0x3
  4225f4:	out    0xb1,eax
  4225f6:	mov    ds:0xbe63e5ca,al
  4225fb:	cmp    al,BYTE PTR [edi-0x75]
  4225fe:	shl    DWORD PTR [ebp+0x2f],1
  422601:	push   edi
  422602:	jle    0x42266a
  422604:	in     eax,0x87
  422606:	xchg   esi,eax
  422607:	bound  ecx,QWORD PTR [edi]
  422609:	xor    BYTE PTR [edi-0x741dc6fa],ah
  42260f:	and    bl,dl
  422611:	mov    cl,0xf
  422613:	push   ecx
  422614:	push   esp
  422615:	jecxz  0x42259b
  422617:	jmp    0xfe290b0b
  42261c:	push   0xe02b5fe9
  422621:	or     dl,BYTE PTR [ebp+0x7e609ab4]
  422627:	bound  edx,QWORD PTR [edi-0x21]
  42262a:	cmp    eax,0xc0f7b1a4
  42262f:	nop
  422630:	add    ebx,DWORD PTR [ebp+0x262ff74]
  422636:	push   ss
  422637:	in     eax,0x8d
  422639:	pop    esp
  42263a:	or     al,0xff
  42263c:	lds    esp,FWORD PTR [ebp-0x6351b08]
  422642:	and    eax,edx
  422644:	pop    edi
  422645:	add    eax,0x57cfca2f
  42264a:	mov    dh,0x32
  42264c:	shl    DWORD PTR [ecx],0x5a
  42264f:	adc    DWORD PTR [ebx+0x25],ebx
  422652:	lds    ebp,FWORD PTR [edx]
  422654:	lds    ebp,FWORD PTR [eax]
  422656:	loopne 0x4225f7
  422658:	imul   DWORD PTR [eax+0x5da4e03a]
  42265e:	xchg   edx,eax
  42265f:	cmp    eax,0xd5e3041
  422664:	mov    edx,0x2c642869
  422669:	inc    edi
  42266a:	jbe    0x422668
  42266c:	sub    al,0x5d
  42266e:	mov    ecx,0x67996ee
  422673:	and    ebp,DWORD PTR [edx+esi*2-0xe]
  422677:	mov    esp,0x5ac1b97b
  42267c:	and    bl,bl
  42267e:	mov    ecx,0xed08befe
  422683:	dec    edi
  422684:	and    BYTE PTR ds:0xb88df9de,0x7
  42268b:	push   esp
  42268c:	inc    eax
  42268d:	cld    
  42268e:	adc    ah,bl
  422690:	jecxz  0x42266a
  422692:	xchg   BYTE PTR [edx-0x5a958446],bl
  422698:	dec    eax
  422699:	cmp    eax,0x1b68a4a
  42269e:	and    DWORD PTR [ebx-0x1082224],esp
  4226a4:	arpl   WORD PTR [ebp+0x27],sp
  4226a7:	scas   eax,DWORD PTR es:[edi]
  4226a8:	ins    DWORD PTR es:[edi],dx
  4226a9:	out    0x2,al
  4226ab:	sbb    ebx,DWORD PTR [edx]
  4226ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ae:	(bad)  
  4226af:	enter  0x46f0,0x55
  4226b3:	fsub   QWORD PTR ds:[eax-0x484ddc56]
  4226ba:	sar    BYTE PTR [esi-0x671f7165],1
  4226c0:	popa   
  4226c1:	lods   al,BYTE PTR ds:[esi]
  4226c2:	lds    eax,FWORD PTR [eax-0x3b]
  4226c5:	js     0x42267d
  4226c7:	mov    ch,0x88
  4226c9:	or     eax,edi
  4226cb:	cli    
  4226cc:	add    esi,ebp
  4226ce:	iret   
  4226cf:	xlat   BYTE PTR ds:[ebx]
  4226d0:	ds and edx,eax
  4226d3:	test   BYTE PTR ds:0x2123d695,0x62
  4226da:	dec    eax
  4226db:	lods   eax,DWORD PTR ds:[esi]
  4226dc:	popf   
  4226dd:	icebp  
  4226de:	jno    0x4226b8
  4226e0:	and    eax,0x9bad6f74
  4226e5:	jno    0x422713
  4226e7:	jecxz  0x422689
  4226e9:	sub    BYTE PTR [esi+edi*1],al
  4226ec:	adc    cl,bh
  4226ee:	xchg   ebp,eax
  4226ef:	ficomp WORD PTR [edi+0x4199bc40]
  4226f5:	or     ah,BYTE PTR [ebx-0x25f79ce1]
  4226fb:	sub    esp,eax
  4226fd:	add    bh,0x98
  422700:	lods   al,BYTE PTR ds:[esi]
  422701:	inc    esi
  422702:	lahf   
  422703:	frstor [ecx-0x1c5f85ba]
  422709:	xor    DWORD PTR [edx-0x5f],ebx
  42270c:	adc    al,0xec
  42270e:	xor    eax,0xb4dda819
  422713:	mov    dh,0x3a
  422715:	xchg   esi,esp
  422717:	dec    esp
  422718:	fwait
  422719:	imul   ebx,DWORD PTR [edi-0x50bed8d9],0x4c4b1be
  422723:	push   0xffffffd7
  422725:	inc    ebp
  422726:	(bad)  [esi]
  422728:	enter  0x9a5a,0x40
  42272c:	pop    ebx
  42272d:	inc    edx
  42272e:	retf   0x6e90
  422731:	ror    DWORD PTR [ecx+ecx*2],cl
  422734:	cmp    DWORD PTR [ebx+eax*4+0x65],eax
  422738:	jl     0x422777
  42273a:	sbb    eax,DWORD PTR [edx]
  42273c:	jns    0x4226ca
  42273e:	push   edi
  42273f:	or     eax,0xe1ed9b07
  422744:	inc    eax
  422745:	mov    bl,0xe4
  422747:	pop    eax
  422748:	in     al,0xb1
  42274a:	cmp    al,0xd5
  42274c:	sbb    dh,ah
  42274e:	fsub   QWORD PTR [ebp+ecx*4-0x5270ea74]
  422755:	pop    edx
  422756:	lahf   
  422757:	and    cl,BYTE PTR [edx]
  422759:	fs imul esp,edx,0xfbd7072c
  422760:	pusha  
  422761:	pop    eax
  422762:	fwait
  422763:	bound  esi,QWORD PTR [ecx]
  422765:	xor    ecx,edi
  422767:	leave  
  422768:	fsubr  st(5),st
  42276a:	push   es
  42276b:	adc    ebp,DWORD PTR [eax-0x4b87019]
  422771:	mov    ah,0x23
  422773:	adc    al,0x89
  422775:	bound  esp,QWORD PTR [ebp+0x641f6cb7]
  42277b:	mov    ebp,0x5afee7d5
  422780:	cmp    DWORD PTR [edi],0x77dde862
  422786:	adc    ch,BYTE PTR [eax-0x104c7d3]
  42278c:	xor    DWORD PTR [edi-0x3d],eax
  42278f:	fadd   st,st(3)
  422791:	(bad)  
  422792:	rcr    DWORD PTR [edi-0x1e],1
  422795:	je     0x4227e9
  422797:	ret    0x5c15
  42279a:	mov    bl,0xd3
  42279c:	int    0xfa
  42279e:	ds test ebp,edx
  4227a1:	and    al,0x91
  4227a3:	pusha  
  4227a4:	fwait
  4227a5:	imul   ecx,DWORD PTR [ebx-0x1d09a903],0xfffffff7
  4227ac:	enter  0x3289,0xf4
  4227b0:	adc    BYTE PTR [ecx],dl
  4227b2:	cmp    al,0x62
  4227b4:	les    esi,FWORD PTR [esi]
  4227b6:	std    
  4227b7:	shl    edx,1
  4227b9:	les    edi,FWORD PTR [ebx-0x22126943]
  4227bf:	leave  
  4227c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c1:	mov    eax,ds:0x91816619
  4227c6:	mov    eax,ds:0x5ed15810
  4227cb:	sbb    ebx,DWORD PTR [edi]
  4227cd:	call   0xbb1b101a
  4227d2:	dec    esi
  4227d3:	aam    0x5a
  4227d5:	dec    edx
  4227d6:	call   0xf096:0x5b358a54
  4227dd:	shr    BYTE PTR [edi+0x1d],cl
  4227e0:	stos   BYTE PTR es:[edi],al
  4227e1:	adc    ebx,DWORD PTR [eax]
  4227e3:	dec    esp
  4227e4:	leave  
  4227e5:	sub    BYTE PTR [edi+edx*2+0x352ac1e1],cl
  4227ec:	jl     0x422856
  4227ee:	test   al,0x5f
  4227f0:	scas   eax,DWORD PTR es:[edi]
  4227f1:	and    al,0xdc
  4227f3:	lahf   
  4227f4:	sti    
  4227f5:	lds    esi,FWORD PTR [eax+0x2fe9caae]
  4227fb:	jg     0x4227c3
  4227fd:	cmp    cl,BYTE PTR [ebp-0x3b524a65]
  422803:	inc    esp
  422804:	jmp    0x4ed7:0x42dd02b3
  42280b:	int    0x51
  42280d:	jae    0x422790
  42280f:	push   esp
  422810:	outs   dx,BYTE PTR ds:[esi]
  422811:	bound  edi,QWORD PTR [edi]
  422813:	shl    BYTE PTR [eax+edx*4],cl
  422816:	mov    al,ds:0xa0a39cac
  42281b:	stos   BYTE PTR es:[edi],al
  42281c:	pop    edi
  42281d:	inc    ecx
  42281e:	imul   ecx,DWORD PTR [esi],0x5a
  422821:	fcom   QWORD PTR ds:0x9c971a74
  422827:	pusha  
  422828:	mov    eax,ds:0xcd6c6b51
  42282d:	push   ss
  42282e:	sbb    al,BYTE PTR [edx-0x19c0c2f0]
  422834:	or     ecx,DWORD PTR [edx]
  422836:	xlat   BYTE PTR ds:[ebx]
  422837:	push   esp
  422838:	adc    al,0xe4
  42283a:	sahf   
  42283b:	xor    al,0x70
  42283d:	in     al,dx
  42283e:	lahf   
  42283f:	jge    0x4227c7
  422841:	test   dl,bh
  422843:	xor    al,0x76
  422845:	mov    bh,0x7
  422847:	sub    esi,esp
  422849:	sar    DWORD PTR [edi-0x182562f3],1
  42284f:	or     DWORD PTR [edi-0x5a5f9a40],eax
  422855:	add    al,ah
  422857:	push   ebp
  422858:	dec    ebx
  422859:	dec    ebx
  42285a:	mov    ecx,DWORD PTR [ebp-0x6aa2ef1a]
  422860:	cwde   
  422861:	inc    ecx
  422862:	aaa    
  422863:	push   edi
  422864:	(bad)  
  422865:	sahf   
  422866:	mov    cl,0xb4
  422868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422869:	imul   ebp,DWORD PTR [esi+0x31],0xffffff9a
  42286d:	cld    
  42286e:	jo     0x42285d
  422870:	pop    edx
  422871:	inc    esi
  422872:	xchg   BYTE PTR [edi+0x5ec694e0],ah
  422878:	jle    0x42282c
  42287a:	dec    eax
  42287b:	psubsb mm0,QWORD PTR es:[esi-0x5b]
  422880:	mov    al,ds:0x65285d48
  422885:	arpl   WORD PTR [ebx],dx
  422887:	les    esp,FWORD PTR [edi+0x59a90290]
  42288d:	cmp    esp,ebx
  42288f:	push   edx
  422890:	(bad)  
  422891:	outs   dx,BYTE PTR ds:[esi]
  422892:	push   cs
  422893:	int    0x0
  422895:	and    al,BYTE PTR [eax+eiz*2-0x35]
  422899:	mov    es:0x89d77b5a,eax
  42289f:	jno    0x4228ae
  4228a1:	inc    eax
  4228a2:	in     al,dx
  4228a3:	mov    BYTE PTR [edi-0x2be0d2e7],bh
  4228a9:	scas   al,BYTE PTR es:[edi]
  4228aa:	mov    ch,0x94
  4228ac:	js     0x422890
  4228ae:	jmp    0x75f02d97
  4228b3:	ds inc eax
  4228b5:	into   
  4228b6:	sub    bh,al
  4228b8:	pminub mm0,mm4
  4228bb:	(bad)  
  4228bc:	cmp    BYTE PTR [edi+0x5d],dl
  4228bf:	and    al,0x3
  4228c1:	cmc    
  4228c2:	inc    esp
  4228c3:	jge    0x42289e
  4228c5:	pop    esp
  4228c6:	pop    edx
  4228c7:	add    BYTE PTR [eax-0x2755834],dl
  4228cd:	pushf  
  4228ce:	and    eax,0xdca138d7
  4228d3:	aam    0x85
  4228d5:	or     DWORD PTR [edi-0x657ebcd1],0xf6599436
  4228df:	dec    ebx
  4228e0:	test   al,0xfb
  4228e2:	push   ebp
  4228e3:	dec    edi
  4228e4:	into   
  4228e5:	sub    BYTE PTR [edi+0xf4c260a],cl
  4228eb:	fsubr  DWORD PTR [esi+0x5c0e5feb]
  4228f1:	push   ebp
  4228f2:	and    eax,0x69072982
  4228f7:	sbb    eax,DWORD PTR [ebp+0x1774ce96]
  4228fd:	mov    ebp,cs
  4228ff:	and    eax,0xfc637e19
  422904:	jl     0x4228c9
  422906:	aaa    
  422907:	xchg   DWORD PTR [eax-0x196468ba],esi
  42290d:	popf   
  42290e:	shl    DWORD PTR [ecx+edi*8+0x5ca6481c],0x33
  422916:	ror    BYTE PTR [ebx+0x10c25de5],0x0
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
